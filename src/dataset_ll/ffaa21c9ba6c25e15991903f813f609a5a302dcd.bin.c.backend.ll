source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_z = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_d7cc.14 = constant i32 -382906384
@global_var_1824c.19 = global i32 0
@global_var_82dc.20 = constant i32 -352321547
@global_var_13e30.21 = constant i32 -382909968
@global_var_a048.27 = constant i32 -382906384
@global_var_a480.29 = constant i32 -382906384
@global_var_896c.31 = constant i32 -382906384
@global_var_c19c.33 = constant i32 -382906384
@global_var_baa4.35 = constant i32 -382906384
@global_var_b2f0.37 = constant i32 -382906384
@global_var_9a2c.40 = constant i32 -382906384
@global_var_9398.42 = constant i32 -382906384
@global_var_10000.44 = constant i32 -480509844
@global_var_ffff.45 = constant [3 x i8] c"\0Al\00"
@global_var_1a2d4.47 = global i32 0
@global_var_1770c.59 = constant i32 47
@global_var_1a2dc.61 = global i32 0
@global_var_18250.63 = global i32 0
@global_var_1a2d8.65 = global i32 0
@global_var_12168.67 = constant i32 -382910336
@global_var_d4ac.68 = constant i32 -509607932
@global_var_17710.72 = constant [15 x i8] c"209.141.53.227\00"
@global_var_1a2e4.75 = local_unnamed_addr global i32 0
@global_var_1a2e2.76 = local_unnamed_addr global i32 0
@global_var_18254.78 = global i32 0
@global_var_17720.86 = constant i32 10
@global_var_1239c.92 = constant i32 -382910336
@global_var_17724.95 = constant i32 16777216
@global_var_1825c.97 = global i32 0
@global_var_18268.99 = global i32 0
@global_var_18260.101 = global i32 0
@global_var_18264.103 = global i32 0
@global_var_182a0.117 = global i32 0
@global_var_1826c.119 = global i32 0
@global_var_18298.121 = global i32 0
@global_var_1a2f8.125 = global i32 0
@global_var_1a2f0.129 = global i32 0
@global_var_1a2f4.131 = global i32 0
@global_var_18272.134 = local_unnamed_addr global i32 0
@global_var_18284.136 = global i32 0
@global_var_18274.138 = local_unnamed_addr global i32 0
@global_var_18278.139 = local_unnamed_addr global i32 0
@global_var_18279.140 = local_unnamed_addr global i32 0
@global_var_18292.143 = local_unnamed_addr global i32 0
@global_var_17734.145 = constant [5 x i8] c"eeee\00"
@global_var_1772c.147 = constant [6 x i8] c"3!1' \00"
@global_var_1773c.149 = constant [6 x i8] c"efg`a\00"
@global_var_17744.151 = constant [7 x i8] c"efg`ab\00"
@global_var_17780.153 = constant i32 0
@global_var_1774c.155 = constant [5 x i8] c"!'1&\00"
@global_var_17754.157 = constant [8 x i8] c"0125!8 \00"
@global_var_1775c.159 = constant i32 943467547
@global_var_17768.161 = constant i32 322070023
@global_var_17774.163 = constant [7 x i8] c"5: '8%\00"
@global_var_1777c.165 = constant [5 x i8] c"&;; \00"
@global_var_17784.167 = constant [6 x i8] c"\22=.,\22\00"
@global_var_1778c.169 = constant [6 x i8] c".8,,z\00"
@global_var_17794.171 = constant [9 x i8] c"<!: acam\00"
@global_var_177a0.173 = constant [5 x i8] c"5:?;\00"
@global_var_177a8.175 = constant [4 x i8] c"a!$\00"
@global_var_177ac.177 = constant [7 x i8] c",7gaee\00"
@global_var_177b4.179 = constant [8 x i8] c"'!$$;& \00"
@global_var_177bc.181 = constant [7 x i8] c"93gadd\00"
@global_var_177c4.183 = constant [7 x i8] c"91&8=:\00"
@global_var_177cc.185 = constant [6 x i8] c"509=:\00"
@global_var_177d4.187 = constant [7 x i8] c"x65fg`\00"
@global_var_177dc.189 = constant [8 x i8] c"5%!5&=;\00"
@global_var_177e4.191 = constant [4 x i8] c"6=:\00"
@global_var_1827c.192 = local_unnamed_addr global i32 0
@global_var_18280.194 = local_unnamed_addr global i32 0
@global_var_1827a.195 = local_unnamed_addr global i32 0
@global_var_18294.197 = local_unnamed_addr global i32 0
@global_var_18288.198 = local_unnamed_addr global i32 0
@global_var_e19c.204 = constant i32 -382910352
@global_var_177e8.206 = constant [3 x i8] c"\0D\0A\00"
@global_var_177f4.208 = constant i32 2096127
@global_var_177eb.210 = constant i32 2095871
@global_var_1a300.216 = global i32 0
@global_var_177f8.223 = constant [3 x i8] c"Qm\00"
@global_var_1a308.224 = local_unnamed_addr global i32 0
@global_var_1a30c.225 = local_unnamed_addr global i32 0
@global_var_177fc.227 = constant i32 59987
@global_var_1a310.228 = local_unnamed_addr global i32 0
@global_var_1a314.229 = local_unnamed_addr global i32 0
@global_var_17964.231 = constant i32 808465680
@global_var_1a31c.232 = local_unnamed_addr global i32 0
@global_var_1a318.233 = local_unnamed_addr global i32 0
@global_var_17800.235 = constant [7 x i8] c"'<188T\00"
@global_var_1a320.236 = local_unnamed_addr global i32 0
@global_var_1a324.237 = local_unnamed_addr global i32 0
@global_var_17808.239 = constant [8 x i8] c"1:5681T\00"
@global_var_1a328.240 = local_unnamed_addr global i32 0
@global_var_1a32c.241 = local_unnamed_addr global i32 0
@global_var_17810.243 = constant [8 x i8] c"'-' 19T\00"
@global_var_1a330.244 = local_unnamed_addr global i32 0
@global_var_1a334.245 = local_unnamed_addr global i32 0
@global_var_17818.247 = constant [4 x i8] c"'<T\00"
@global_var_1a33c.248 = local_unnamed_addr global i32 0
@global_var_1a338.249 = local_unnamed_addr global i32 0
@global_var_1781c.251 = constant i32 977090171
@global_var_1a344.252 = local_unnamed_addr global i32 0
@global_var_1a340.253 = local_unnamed_addr global i32 0
@global_var_17830.255 = constant i32 470227742
@global_var_1a34c.256 = local_unnamed_addr global i32 0
@global_var_1a348.257 = local_unnamed_addr global i32 0
@global_var_1784c.259 = constant [10 x i8] c":7;&&17 T\00"
@global_var_1a354.260 = local_unnamed_addr global i32 0
@global_var_1a350.261 = local_unnamed_addr global i32 0
@global_var_17858.263 = constant [17 x i8] c"{6=:{6!'-6;,t$'T\00"
@global_var_1a358.264 = local_unnamed_addr global i32 0
@global_var_1a35c.265 = local_unnamed_addr global i32 0
@global_var_1786c.267 = constant [23 x i8] c"{6=:{6!'-6;,t?=88tymtT\00"
@global_var_1a364.268 = local_unnamed_addr global i32 0
@global_var_1a360.269 = local_unnamed_addr global i32 0
@global_var_17884.271 = constant [8 x i8] c"{$&;7{T\00"
@global_var_1a368.272 = local_unnamed_addr global i32 0
@global_var_1a36c.273 = local_unnamed_addr global i32 0
@global_var_1788c.275 = constant [6 x i8] c"{1,1T\00"
@global_var_1a370.276 = local_unnamed_addr global i32 0
@global_var_1a374.277 = local_unnamed_addr global i32 0
@global_var_17894.279 = constant [5 x i8] c"{20T\00"
@global_var_1a37c.280 = local_unnamed_addr global i32 0
@global_var_1a378.281 = local_unnamed_addr global i32 0
@global_var_1789c.283 = constant [7 x i8] c"{95$'T\00"
@global_var_1a380.284 = local_unnamed_addr global i32 0
@global_var_1a384.285 = local_unnamed_addr global i32 0
@global_var_178a4.287 = constant [15 x i8] c"{$&;7{:1 { 7$T\00"
@global_var_1a388.288 = local_unnamed_addr global i32 0
@global_var_1a38c.289 = local_unnamed_addr global i32 0
@global_var_178b4.291 = constant [9 x i8] c"{' 5 !'T\00"
@global_var_1a3e8.292 = local_unnamed_addr global i32 0
@global_var_1a3ec.293 = local_unnamed_addr global i32 0
@global_var_178c0.295 = constant [8 x i8] c"z5:=91T\00"
@global_var_1a3f0.296 = local_unnamed_addr global i32 0
@global_var_1a3f4.297 = local_unnamed_addr global i32 0
@global_var_178c8.299 = constant [17 x i8] c"{$&;7{:1 {&;! 1T\00"
@global_var_1a390.300 = local_unnamed_addr global i32 0
@global_var_1a394.301 = local_unnamed_addr global i32 0
@global_var_178dc.303 = constant [9 x i8] c"5''#;&0T\00"
@global_var_1a398.304 = local_unnamed_addr global i32 0
@global_var_1a39c.305 = local_unnamed_addr global i32 0
@global_var_17984.307 = constant i32 557516544
@global_var_1a3a4.308 = local_unnamed_addr global i32 0
@global_var_1a3a0.309 = local_unnamed_addr global i32 0
@global_var_178e8.311 = constant [18 x i8] c"{1 7{&1';8\22z7;:2T\00"
@global_var_1a3ac.312 = local_unnamed_addr global i32 0
@global_var_1a3a8.313 = local_unnamed_addr global i32 0
@global_var_178fc.315 = constant [13 x i8] c":591'1&\221&tT\00"
@global_var_1a3b4.316 = local_unnamed_addr global i32 0
@global_var_1a3b0.317 = local_unnamed_addr global i32 0
@global_var_1790c.319 = constant [15 x i8] c"{01\22{#5 7<0;3T\00"
@global_var_1a3b8.320 = local_unnamed_addr global i32 0
@global_var_1a3bc.321 = local_unnamed_addr global i32 0
@global_var_1791c.323 = constant [20 x i8] c"{01\22{9='7{#5 7<0;3T\00"
@global_var_1a3c4.324 = local_unnamed_addr global i32 0
@global_var_1a3c0.325 = local_unnamed_addr global i32 0
@global_var_17930.327 = constant [9 x i8] c"$662*7!E\00"
@global_var_1a3c8.328 = local_unnamed_addr global i32 0
@global_var_1a3cc.329 = local_unnamed_addr global i32 0
@global_var_1793c.331 = constant [6 x i8] c";3=:T\00"
@global_var_1a3d0.332 = local_unnamed_addr global i32 0
@global_var_1a3d4.333 = local_unnamed_addr global i32 0
@global_var_17944.335 = constant [7 x i8] c"1: 1&T\00"
@global_var_1a3d8.336 = local_unnamed_addr global i32 0
@global_var_1a3dc.337 = local_unnamed_addr global i32 0
@global_var_1794c.339 = constant [24 x i8] c"e365`70;9ag:<$ef1=d?2>T\00"
@global_var_1a3e0.340 = local_unnamed_addr global i32 0
@global_var_1a3e4.341 = local_unnamed_addr global i32 0
@global_var_12460.347 = constant i32 -443088884
@global_var_f000.351 = constant i32 -480509838
@global_var_1289c.360 = constant i32 -456978431
@global_var_1a3f8.372 = global i32 0
@global_var_12e20.378 = constant i32 -478871519
@global_var_138a0.392 = constant i32 -478805983
@global_var_13c7c.401 = constant i32 -382906384
@global_var_15704.410 = constant i32 -509591552
@global_var_144dc.421 = constant i32 -494075872
@global_var_12364.422 = constant i32 -382910336
@global_var_179b4.426 = constant [11 x i8] c"/proc/stat\00"
@global_var_17730.429 = constant i32 32
@global_var_179c0.432 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_179d0.434 = constant [10 x i8] c"processor\00"
@global_var_179f4.436 = constant i32 604672
@global_var_1469c.439 = constant i32 -369098421
@global_var_179f8.455 = constant [10 x i8] c"/dev/null\00"
@global_var_140ac.456 = constant i32 -442543860
@global_var_1609c.461 = constant i32 -382910352
@global_var_182bc.466 = local_unnamed_addr global i32 0
@global_var_128d0.467 = constant i32 -369094630
@global_var_182b8.476 = local_unnamed_addr global i32 0
@global_var_15530.486 = constant i32 -382909456
@global_var_1a2d0.489 = local_unnamed_addr global i32 0
@global_var_179d8.497 = constant i32 114
@global_var_1655c.502 = constant i32 -382906384
@global_var_1603c.520 = constant i32 -509607926
@global_var_17d04.525 = constant i32 0
@global_var_174f8.526 = constant i32 -382909968
@global_var_16380.536 = constant i32 -509607928
@global_var_1822c.2 = external global i8*
@global_var_18248.17 = external global i8*
@global_var_18249.25 = global i8 0
@global_var_1a2e0.74 = global i16* null
@global_var_18258.89 = external global i8*
@global_var_1829c.123 = global i16* null
@global_var_18270.133 = external global i8*
@global_var_18290.137 = local_unnamed_addr global i8 0
@global_var_18286.141 = local_unnamed_addr global i16 0
@global_var_18291.142 = local_unnamed_addr global i8 0

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_8094() local_unnamed_addr {
entry:
  %v3_8098 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_8098)
  %v31_80a0 = load i32, i32* @r0, align 4
  ret i32 %v31_80a0
}

define i32 @function_80b0(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r1, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_80b0 = load i32, i32* @r4, align 4
  store i32 %v3_80b0, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i8** @global_var_1822c.2 to i32), i32* %r4.global-to-local, align 4
  %v2_80b8 = load i8, i8* bitcast (i8** @global_var_1822c.2 to i8*), align 4
  %v2_80bc = icmp eq i8 %v2_80b8, 0
  br i1 %v2_80bc, label %dec_label_pc_80c4, label %dec_label_pc_80e0

dec_label_pc_80c4:                                ; preds = %entry
  store i1 true, i1* @cpsr_z, align 1
  %v3_80d4 = call i32 @function_80ec()
  %v2_80dc = load i32, i32* %r4.global-to-local, align 4
  %v3_80dc = inttoptr i32 %v2_80dc to i8*
  store i8 1, i8* %v3_80dc, align 1
  %v2_80e0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_80e0

dec_label_pc_80e0:                                ; preds = %entry, %dec_label_pc_80c4
  %v2_80e0 = phi i32 [ %v2_80e0.pre, %dec_label_pc_80c4 ], [ %v3_80b0, %entry ]
  %.0 = phi i32 [ %v3_80d4, %dec_label_pc_80c4 ], [ undef, %entry ]
  store i32 %v2_80e0, i32* %r4.global-to-local, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i8** @global_var_1822c.2, { 1, 0 }
  uselistorder label %dec_label_pc_80e0, { 1, 0 }
}

define i32 @function_80ec() local_unnamed_addr {
dec_label_pc_80ec:
  %v0_80f0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_80f0, label %bb, label %bb3

bb:                                               ; preds = %dec_label_pc_80ec
  br label %bb3

bb3:                                              ; preds = %bb, %dec_label_pc_80ec
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8118 = load i32, i32* inttoptr (i32 98316 to i32*), align 4
  %v2_811c = icmp eq i32 %v2_8118, 0
  br i1 %v2_811c, label %dec_label_pc_8134, label %dec_label_pc_8124

dec_label_pc_8124:                                ; preds = %bb3
  call void @__pseudo_cond_branch(i1 false, i32 0)
  br label %dec_label_pc_8134

dec_label_pc_8134:                                ; preds = %bb3, %dec_label_pc_8124
  ret i32 98316

; uselistorder directives
  uselistorder label %dec_label_pc_8134, { 1, 0 }
}

define i32 @entry_point(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_815c = ptrtoint i32* %stack_var_4 to i32
  %v8_817c = call i32 @function_14dd8(i32 ptrtoint (i32* @global_var_d7cc.14 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32916, i32 95996, i32 %arg1, i32 %v4_815c)
  %v0_8180 = call i32 @function_140ac()
  ret i32 %v0_8180
}

define i32 @function_8190(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8190:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_8190 = icmp eq i32 %arg1, 0
  br i1 %v2_8190, label %dec_label_pc_81d8, label %dec_label_pc_81a0

dec_label_pc_81a0:                                ; preds = %dec_label_pc_8190
  %v0_81a0 = load i32, i32* %r1.global-to-local, align 4
  %v1_81a0 = add i32 %v0_81a0, 4
  %v2_81a0 = inttoptr i32 %v1_81a0 to i8*
  %v3_81a0 = load i8, i8* %v2_81a0, align 1
  %v4_81a0 = zext i8 %v3_81a0 to i32
  %v9_81a4 = icmp eq i32 %v4_81a0, %arg3
  br i1 %v9_81a4, label %dec_label_pc_81e4, label %dec_label_pc_81c8.preheader

dec_label_pc_81c8.preheader:                      ; preds = %dec_label_pc_81a0
  br label %dec_label_pc_81c8

dec_label_pc_81b8:                                ; preds = %dec_label_pc_81c8
  %v1_81b8 = add i32 %v0_81c0.in, 12
  %v2_81b8 = inttoptr i32 %v1_81b8 to i8*
  %v3_81b8 = load i8, i8* %v2_81b8, align 1
  %v4_81b8 = zext i8 %v3_81b8 to i32
  %v9_81bc = icmp eq i32 %v4_81b8, %arg3
  br i1 %v9_81bc, label %dec_label_pc_81e4, label %dec_label_pc_81c8

dec_label_pc_81c8:                                ; preds = %dec_label_pc_81c8.preheader, %dec_label_pc_81b8
  %v0_81c0.in = phi i32 [ %v0_81a0, %dec_label_pc_81c8.preheader ], [ %v0_81c0, %dec_label_pc_81b8 ]
  %v0_81c8 = phi i32 [ 0, %dec_label_pc_81c8.preheader ], [ %v1_81c8, %dec_label_pc_81b8 ]
  %v0_81c0 = add i32 %v0_81c0.in, 8
  %v1_81c8 = add i32 %v0_81c8, 1
  %v9_81cc = icmp eq i32 %v1_81c8, %arg1
  store i32 %v0_81c0, i32* %r1.global-to-local, align 4
  br i1 %v9_81cc, label %dec_label_pc_81d8, label %dec_label_pc_81b8

dec_label_pc_81d8:                                ; preds = %dec_label_pc_81c8, %dec_label_pc_8190, %dec_label_pc_81e4
  %v0_81d8 = phi i32 [ %arg4, %dec_label_pc_8190 ], [ %v2_81e4, %dec_label_pc_81e4 ], [ %arg4, %dec_label_pc_81c8 ]
  ret i32 %v0_81d8

dec_label_pc_81e4:                                ; preds = %dec_label_pc_81b8, %dec_label_pc_81a0
  %v0_81e4 = phi i32 [ %v0_81a0, %dec_label_pc_81a0 ], [ %v0_81c0, %dec_label_pc_81b8 ]
  %v1_81e4 = inttoptr i32 %v0_81e4 to i32*
  %v2_81e4 = load i32, i32* %v1_81e4, align 4
  br label %dec_label_pc_81d8

; uselistorder directives
  uselistorder i32 %v1_81c8, { 1, 0 }
  uselistorder i32 %v0_81c0, { 1, 0, 2 }
  uselistorder i32 %v0_81c0.in, { 1, 0 }
  uselistorder i32 %v0_81a0, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_81d8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_81c8, { 1, 0 }
}

define i32 @function_81ec(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_81ec:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_81ec = load i32, i32* @r4, align 4
  store i32 %v3_81ec, i32* %stack_var_-32, align 4
  %v6_81ec = load i32, i32* @r5, align 4
  %v9_81ec = load i32, i32* @r6, align 4
  %v12_81ec = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* @r7, align 4
  %v0_8204 = call i32 @function_1208c()
  store i32 %v0_8204, i32* @r0, align 4
  %v7_8208 = icmp eq i32 %v0_8204, -1
  %tmp23 = icmp slt i32 %v0_8204, 1
  br i1 %tmp23, label %bb24, label %.thread2

.thread2:                                         ; preds = %dec_label_pc_81ec
  br label %dec_label_pc_8228

bb24:                                             ; preds = %dec_label_pc_81ec
  %. = zext i1 %v7_8208 to i32
  store i32 %., i32* @r5, align 4
  %v2_8220 = icmp eq i1 %v7_8208, false
  br i1 %v2_8220, label %dec_label_pc_8230, label %dec_label_pc_8228

dec_label_pc_8228:                                ; preds = %.thread2, %bb24
  %v2_8228 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_8228, i32* @r4, align 4
  store i32 %v6_81ec, i32* @r5, align 4
  store i32 %v9_81ec, i32* @r6, align 4
  store i32 %v12_81ec, i32* @r7, align 4
  ret i32 %v0_8204

dec_label_pc_8230:                                ; preds = %bb24
  %v0_8230 = call i32 @function_1208c()
  %v7_8234 = icmp eq i32 %v0_8230, -1
  store i32 %v0_8230, i32* @r4, align 4
  br i1 %v7_8234, label %dec_label_pc_8264, label %dec_label_pc_8240

dec_label_pc_8240:                                ; preds = %dec_label_pc_8230
  %v2_8240 = icmp eq i32 %v0_8230, 0
  br i1 %v2_8240, label %dec_label_pc_8248, label %dec_label_pc_826c

dec_label_pc_8248:                                ; preds = %dec_label_pc_8240
  %v0_8248 = load i32, i32* @r6, align 4
  %v1_824c = call i32 @function_14488(i32 %v0_8248)
  store i32 %v1_824c, i32* @r0, align 4
  %v0_8250 = call i32 @function_11f60()
  %v2_8258 = call i32 @function_12168(i32 %v0_8250, i32 9)
  %v0_825c = load i32, i32* @r4, align 4
  %v1_8260 = call i32 @function_143d0(i32 %v0_825c)
  br label %dec_label_pc_8264

dec_label_pc_8264:                                ; preds = %dec_label_pc_8230, %dec_label_pc_8248
  %v0_8264 = load i32, i32* @r5, align 4
  %v1_8268 = call i32 @function_143d0(i32 %v0_8264)
  br label %dec_label_pc_826c

dec_label_pc_826c:                                ; preds = %dec_label_pc_8240, %dec_label_pc_8264
  %v2_8270 = load i8, i8* bitcast (i8** @global_var_18248.17 to i8*), align 4
  %v3_8270 = zext i8 %v2_8270 to i32
  %v2_8274 = icmp eq i8 %v2_8270, 0
  br i1 %v2_8274, label %dec_label_pc_82b8, label %dec_label_pc_827c

dec_label_pc_827c:                                ; preds = %dec_label_pc_826c
  %v2_8280 = load i32, i32* @global_var_1824c.19, align 4
  %v1_8284 = inttoptr i32 %v2_8280 to i32*
  %v2_8284 = load i32, i32* %v1_8284, align 4
  %v1_8288 = add i32 %v2_8284, 4
  %v2_8288 = inttoptr i32 %v1_8288 to i8*
  %v3_8288 = load i8, i8* %v2_8288, align 1
  %v4_8288 = zext i8 %v3_8288 to i32
  %v1_828c = load i32, i32* @r7, align 4
  %v9_828c = icmp eq i32 %v4_8288, %v1_828c
  br i1 %v9_828c, label %dec_label_pc_82c0, label %dec_label_pc_82ac.preheader

dec_label_pc_82ac.preheader:                      ; preds = %dec_label_pc_827c
  %v1_8290 = load i32, i32* @r5, align 4
  br label %dec_label_pc_82ac

dec_label_pc_829c:                                ; preds = %dec_label_pc_82ac
  %v4_829c = mul i32 %v1_82ac, 4
  %v5_829c = add i32 %v4_829c, %v2_8280
  %v6_829c = inttoptr i32 %v5_829c to i32*
  %v7_829c = load i32, i32* %v6_829c, align 4
  %v1_82a0 = add i32 %v7_829c, 4
  %v2_82a0 = inttoptr i32 %v1_82a0 to i8*
  %v3_82a0 = load i8, i8* %v2_82a0, align 1
  %v4_82a0 = zext i8 %v3_82a0 to i32
  %v9_82a4 = icmp eq i32 %v4_82a0, %v1_828c
  br i1 %v9_82a4, label %dec_label_pc_82c0, label %dec_label_pc_82ac

dec_label_pc_82ac:                                ; preds = %dec_label_pc_82ac.preheader, %dec_label_pc_829c
  %v0_82ac = phi i32 [ %v1_8290, %dec_label_pc_82ac.preheader ], [ %v1_82ac, %dec_label_pc_829c ]
  %v1_82ac = add i32 %v0_82ac, 1
  %v9_82b0 = icmp eq i32 %v1_82ac, %v3_8270
  br i1 %v9_82b0, label %dec_label_pc_82b8, label %dec_label_pc_829c

dec_label_pc_82b8:                                ; preds = %dec_label_pc_82ac, %dec_label_pc_826c, %dec_label_pc_82c0
  %v1_82bc = call i32 @function_143d0(i32 0)
  %v0_82d0.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_82c0

dec_label_pc_82c0:                                ; preds = %dec_label_pc_829c, %dec_label_pc_827c, %dec_label_pc_82b8
  %v0_82d0 = phi i32 [ %v2_8284, %dec_label_pc_827c ], [ %v0_82d0.pre, %dec_label_pc_82b8 ], [ %v7_829c, %dec_label_pc_829c ]
  %v1_82d0 = inttoptr i32 %v0_82d0 to i32*
  %v2_82d0 = load i32, i32* %v1_82d0, align 4
  call void @__pseudo_branch(i32 %v2_82d0)
  br label %dec_label_pc_82b8

; uselistorder directives
  uselistorder i32 %v1_82ac, { 2, 0, 1 }
  uselistorder i32 %v0_8230, { 1, 2, 0 }
  uselistorder i1 %v7_8208, { 1, 0 }
  uselistorder i32 %v0_8204, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_82c0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_82b8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_82ac, { 1, 0 }
  uselistorder label %dec_label_pc_826c, { 1, 0 }
  uselistorder label %dec_label_pc_8264, { 1, 0 }
  uselistorder label %dec_label_pc_8228, { 1, 0 }
}

define i32 @function_82e8(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_82e8:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v6_82e8 = load i32, i32* @r5, align 4
  %v9_82e8 = load i32, i32* @r6, align 4
  %v12_82e8 = load i32, i32* @r7, align 4
  %v18_82e8 = load i32, i32* @sb, align 4
  %v21_82e8 = load i32, i32* @sl, align 4
  %v24_82e8 = load i32, i32* @fp, align 4
  %v2_82ec = icmp ugt i32 %arg2, 2
  %v7_82ec = icmp eq i32 %arg2, 3
  store i1 %v7_82ec, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* @r4, align 4
  %v0_82f8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_82f8, i32* @r5, align 4
  %v2_82fc = xor i1 %v7_82ec, true
  %v3_82fc = and i1 %v2_82ec, %v2_82fc
  br i1 %v3_82fc, label %dec_label_pc_830c, label %dec_label_pc_8300

dec_label_pc_8300:                                ; preds = %dec_label_pc_834c, %.dec_label_pc_8300_crit_edge, %dec_label_pc_8340, %dec_label_pc_8330, %dec_label_pc_830c, %dec_label_pc_82e8, %dec_label_pc_84f8
  %v1_8308 = phi i32 [ %v1_8308.pre, %.dec_label_pc_8300_crit_edge ], [ %v1_8310, %dec_label_pc_834c ], [ %v1_8310, %dec_label_pc_8340 ], [ %v1_8310, %dec_label_pc_8330 ], [ %v1_8310, %dec_label_pc_830c ], [ %v0_82f8, %dec_label_pc_82e8 ], [ %v0_84fc, %dec_label_pc_84f8 ]
  store i32 %v6_82e8, i32* @r5, align 4
  store i32 %v9_82e8, i32* @r6, align 4
  store i32 %v12_82e8, i32* @r7, align 4
  store i32 %v18_82e8, i32* @sb, align 4
  store i32 %v21_82e8, i32* @sl, align 4
  store i32 %v24_82e8, i32* @fp, align 4
  ret i32 %v1_8308

dec_label_pc_830c:                                ; preds = %dec_label_pc_82e8
  %v1_830c = inttoptr i32 %v0_82f8 to i32*
  %v2_830c = load i32, i32* %v1_830c, align 4
  store i32 %v2_830c, i32* %r1.global-to-local, align 4
  %v1_8310 = and i32 %v2_830c, 16711680
  store i32 %v1_8310, i32* %r0.global-to-local, align 4
  %v3_8314 = udiv i32 %v2_830c, 16777216
  %v4_8318 = udiv i32 %v1_8310, 256
  %v5_8318 = or i32 %v4_8318, %v3_8314
  %v1_831c = and i32 %v2_830c, 65280
  store i32 %v1_831c, i32* %r2.global-to-local, align 4
  %v4_8320 = mul nuw nsw i32 %v1_831c, 256
  %v5_8320 = or i32 %v5_8318, %v4_8320
  store i32 %v5_8320, i32* %r3.global-to-local, align 4
  %v7_8324 = icmp eq i32 %arg2, 4
  store i1 %v7_8324, i1* %cpsr_z.global-to-local, align 1
  %v5_8328 = call i32 @llvm.bswap.i32(i32 %v2_830c)
  store i32 %v5_8328, i32* @fp, align 4
  br i1 %v7_8324, label %dec_label_pc_8300, label %dec_label_pc_8330

dec_label_pc_8330:                                ; preds = %dec_label_pc_830c
  %v1_8330 = add i32 %v0_82f8, 4
  %v2_8330 = inttoptr i32 %v1_8330 to i8*
  %v3_8330 = load i8, i8* %v2_8330, align 1
  %v4_8330 = zext i8 %v3_8330 to i32
  store i32 %v4_8330, i32* %r2.global-to-local, align 4
  %v7_8334 = icmp eq i32 %arg2, 5
  store i1 %v7_8334, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8334, label %dec_label_pc_8300, label %dec_label_pc_8340

dec_label_pc_8340:                                ; preds = %dec_label_pc_8330
  %v1_8340 = add i32 %v0_82f8, 5
  %v2_8340 = inttoptr i32 %v1_8340 to i8*
  %v3_8340 = load i8, i8* %v2_8340, align 1
  %v4_8340 = zext i8 %v3_8340 to i32
  store i32 %v4_8340, i32* @sb, align 4
  %v2_8344 = icmp eq i8 %v3_8340, 0
  store i1 %v2_8344, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8344, label %dec_label_pc_8300, label %dec_label_pc_834c

dec_label_pc_834c:                                ; preds = %dec_label_pc_8340
  %v2_8350 = mul nuw nsw i32 %v4_8340, 5
  store i32 %v2_8350, i32* @r7, align 4
  %v1_8354 = add i32 %arg2, -6
  store i32 %v1_8354, i32* %r3.global-to-local, align 4
  %v3_8358 = icmp ult i32 %v1_8354, %v2_8350
  %v9_8358 = icmp eq i32 %v1_8354, %v2_8350
  store i1 %v9_8358, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_8358, label %dec_label_pc_8300, label %dec_label_pc_8360

dec_label_pc_8360:                                ; preds = %dec_label_pc_834c
  store i32 %v4_8340, i32* %r0.global-to-local, align 4
  store i32 24, i32* %r1.global-to-local, align 4
  store i32 %v1_8354, i32* @r6, align 4
  %v2_836c = call i32 @function_136e4(i32 %v4_8340, i32 24)
  store i32 %v2_836c, i32* @ip, align 4
  %v0_8378 = load i32, i32* @r7, align 4
  %v1_8378 = load i32, i32* @r4, align 4
  %v2_8378 = sub i32 %v1_8378, %v0_8378
  store i32 %v2_8378, i32* @r7, align 4
  %v0_837c = load i32, i32* @r5, align 4
  %v1_837c = add i32 %v0_837c, 11
  store i32 %v1_837c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8380

dec_label_pc_8380:                                ; preds = %dec_label_pc_8380, %dec_label_pc_8360
  %v1_8384 = phi i32 [ %v1_83b0, %dec_label_pc_8380 ], [ %v2_836c, %dec_label_pc_8360 ]
  %v0_8380 = phi i32 [ %v1_83ac, %dec_label_pc_8380 ], [ %v1_837c, %dec_label_pc_8360 ]
  %v1_8380 = add i32 %v0_8380, -5
  %v2_8380 = inttoptr i32 %v1_8380 to i32*
  %v3_8380 = load i32, i32* %v2_8380, align 4
  store i32 %v3_8380, i32* %r1.global-to-local, align 4
  %v2_8384 = add i32 %v1_8384, 16
  %v3_8384 = inttoptr i32 %v2_8384 to i32*
  store i32 %v3_8380, i32* %v3_8384, align 4
  %v0_8388 = load i32, i32* @r7, align 4
  %v1_8388 = add i32 %v0_8388, -6
  store i32 %v1_8388, i32* %r3.global-to-local, align 4
  %v0_838c = load i32, i32* %r0.global-to-local, align 4
  %v1_838c = add i32 %v0_838c, -1
  %v2_838c = inttoptr i32 %v1_838c to i8*
  %v3_838c = load i8, i8* %v2_838c, align 1
  %v4_838c = zext i8 %v3_838c to i32
  store i32 %v4_838c, i32* %r2.global-to-local, align 4
  %v0_8390 = load i32, i32* @r6, align 4
  %v1_8390 = add i32 %v0_8390, -5
  store i32 %v1_8390, i32* @r6, align 4
  %v9_8394 = icmp eq i32 %v1_8390, %v1_8388
  store i1 %v9_8394, i1* %cpsr_z.global-to-local, align 1
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 %v0_838c, i32* @r4, align 4
  %v2_83a0 = load i32, i32* @ip, align 4
  %v3_83a0 = add i32 %v2_83a0, 20
  %v4_83a0 = inttoptr i32 %v3_83a0 to i8*
  store i8 %v3_838c, i8* %v4_83a0, align 1
  %v0_83a4 = load i32, i32* %r1.global-to-local, align 4
  %v1_83a4 = load i32, i32* @ip, align 4
  %v2_83a4 = add i32 %v1_83a4, 4
  %v3_83a4 = inttoptr i32 %v2_83a4 to i32*
  store i32 %v0_83a4, i32* %v3_83a4, align 4
  %v0_83a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_83a8 = trunc i32 %v0_83a8 to i16
  %v2_83a8 = load i32, i32* @ip, align 4
  %v3_83a8 = inttoptr i32 %v2_83a8 to i16*
  store i16 %v1_83a8, i16* %v3_83a8, align 2
  %v0_83ac = load i32, i32* %r0.global-to-local, align 4
  %v1_83ac = add i32 %v0_83ac, 5
  store i32 %v1_83ac, i32* %r0.global-to-local, align 4
  %v0_83b0 = load i32, i32* @ip, align 4
  %v1_83b0 = add i32 %v0_83b0, 24
  store i32 %v1_83b0, i32* @ip, align 4
  %v0_83b4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_83b4, label %dec_label_pc_83b8, label %dec_label_pc_8380

dec_label_pc_83b8:                                ; preds = %dec_label_pc_8380
  %v0_83b8 = load i32, i32* @r6, align 4
  %v2_83b8 = icmp eq i32 %v0_83b8, 0
  store i1 %v2_83b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_83b8, label %dec_label_pc_84bc, label %dec_label_pc_83c0

dec_label_pc_83c0:                                ; preds = %dec_label_pc_83b8
  %v0_83c0 = load i32, i32* @r4, align 4
  %v1_83c0 = inttoptr i32 %v0_83c0 to i8*
  %v2_83c0 = load i8, i8* %v1_83c0, align 1
  %v3_83c0 = zext i8 %v2_83c0 to i32
  store i32 %v3_83c0, i32* @r5, align 4
  %v2_83c4 = icmp eq i8 %v2_83c0, 0
  store i1 %v2_83c4, i1* %cpsr_z.global-to-local, align 1
  %v0_83c8 = load i32, i32* @r7, align 4
  %v1_83c8 = add i32 %v0_83c8, -7
  store i32 %v1_83c8, i32* @r8, align 4
  br i1 %v2_83c4, label %bb, label %dec_label_pc_83d4

bb:                                               ; preds = %dec_label_pc_83c0
  store i32 %v3_83c0, i32* @r6, align 4
  br label %dec_label_pc_8498

dec_label_pc_83d4:                                ; preds = %dec_label_pc_83c0
  store i32 %v3_83c0, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_83dc = call i32 @function_136e4(i32 %v3_83c0, i32 8)
  store i32 %v2_83dc, i32* %r0.global-to-local, align 4
  %v0_83e0 = load i32, i32* @r8, align 4
  %v2_83e0 = icmp eq i32 %v0_83e0, 0
  store i1 %v2_83e0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_83dc, i32* @r6, align 4
  br i1 %v2_83e0, label %dec_label_pc_84bc, label %dec_label_pc_83ec

dec_label_pc_83ec:                                ; preds = %dec_label_pc_83d4
  %v0_83ec = load i32, i32* @r4, align 4
  %v1_83ec = add i32 %v0_83ec, 1
  %v2_83ec = inttoptr i32 %v1_83ec to i8*
  %v3_83ec = load i8, i8* %v2_83ec, align 1
  %v0_83f0 = load i32, i32* @r7, align 4
  %v7_83f0 = icmp eq i32 %v0_83f0, 8
  store i1 %v7_83f0, i1* %cpsr_z.global-to-local, align 1
  %v3_83f4 = add i32 %v2_83dc, 4
  %v4_83f4 = inttoptr i32 %v3_83f4 to i8*
  store i8 %v3_83ec, i8* %v4_83f4, align 1
  %v0_83f8 = load i32, i32* @r4, align 4
  %v1_83f8 = add i32 %v0_83f8, 1
  store i32 %v1_83f8, i32* %r3.global-to-local, align 4
  %v0_83fc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_83fc, label %dec_label_pc_84bc, label %dec_label_pc_8400

dec_label_pc_8400:                                ; preds = %dec_label_pc_83ec
  %v1_8400 = add i32 %v0_83f8, 2
  %v2_8400 = inttoptr i32 %v1_8400 to i8*
  %v3_8400 = load i8, i8* %v2_8400, align 1
  %v4_8400 = zext i8 %v3_8400 to i32
  store i32 %v4_8400, i32* @r4, align 4
  %v0_8404 = load i32, i32* @r7, align 4
  %v1_8404 = add i32 %v0_8404, -9
  store i32 %v1_8404, i32* @r8, align 4
  %v9_8408 = icmp eq i32 %v1_8404, %v4_8400
  store i1 %v9_8408, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_8400, i32* %r1.global-to-local, align 4
  %v5_8410 = icmp slt i32 %v1_8404, %v4_8400
  br i1 %v5_8410, label %dec_label_pc_84bc, label %bb35

bb35:                                             ; preds = %dec_label_pc_8400
  store i32 0, i32* %r2.global-to-local, align 4
  %v7_84147 = add i32 %v0_83f8, 3
  store i32 %v7_84147, i32* @r7, align 4
  %v6_8418 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v6_8418, i32* @sl, align 4
  br label %dec_label_pc_845c

dec_label_pc_8428:                                ; preds = %dec_label_pc_845c
  %v0_8428 = load i32, i32* @r8, align 4
  %v1_8428 = load i32, i32* @r4, align 4
  %v2_8428 = sub i32 %v0_8428, %v1_8428
  store i32 %v2_8428, i32* %r2.global-to-local, align 4
  %v9_8428 = icmp eq i32 %v0_8428, %v1_8428
  store i1 %v9_8428, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8428, label %dec_label_pc_84bc, label %dec_label_pc_8430

dec_label_pc_8430:                                ; preds = %dec_label_pc_8428
  %v1_8430 = load i32, i32* @r7, align 4
  %v2_8430 = add i32 %v1_8430, %v1_8428
  %v3_8430 = inttoptr i32 %v2_8430 to i8*
  %v4_8430 = load i8, i8* %v3_8430, align 1
  store i32 %v2_8430, i32* %r0.global-to-local, align 4
  %v1_8438 = add i32 %v2_8428, -1
  store i32 %v1_8438, i32* %r2.global-to-local, align 4
  %v7_8438 = icmp eq i32 %v2_8428, 1
  store i1 %v7_8438, i1* %cpsr_z.global-to-local, align 1
  %v3_843c = add i32 %v2_8490, 4
  %v4_843c = inttoptr i32 %v3_843c to i8*
  store i8 %v4_8430, i8* %v4_843c, align 1
  %v0_8440 = load i32, i32* %r0.global-to-local, align 4
  %v1_8440 = add i32 %v0_8440, 1
  store i32 %v1_8440, i32* %r3.global-to-local, align 4
  %v0_8444 = load i32, i32* %r2.global-to-local, align 4
  %v1_8444 = add i32 %v0_8444, -1
  store i32 %v1_8444, i32* @r8, align 4
  %v1_8448 = add i32 %v0_8440, 2
  store i32 %v1_8448, i32* @r7, align 4
  %v0_844c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_844c, label %dec_label_pc_84bc, label %dec_label_pc_8450

dec_label_pc_8450:                                ; preds = %dec_label_pc_8430
  %v2_8450 = inttoptr i32 %v1_8440 to i8*
  %v3_8450 = load i8, i8* %v2_8450, align 1
  %v4_8450 = zext i8 %v3_8450 to i32
  store i32 %v4_8450, i32* @r4, align 4
  %v2_8454 = sub i32 %v1_8444, %v4_8450
  %tmp36 = sub i32 0, %v2_8454
  %v6_8454 = and i32 %v1_8444, %tmp36
  %v7_8454 = icmp slt i32 %v6_8454, 0
  %v8_8454 = icmp slt i32 %v2_8454, 0
  %v9_8454 = icmp eq i32 %v1_8444, %v4_8450
  store i1 %v9_8454, i1* %cpsr_z.global-to-local, align 1
  %v2_8458 = xor i1 %v8_8454, %v7_8454
  br i1 %v2_8458, label %dec_label_pc_84bc, label %dec_label_pc_845c

dec_label_pc_845c:                                ; preds = %bb35, %dec_label_pc_8450
  %v0_8460 = phi i32 [ %v4_8400, %bb35 ], [ %v4_8450, %dec_label_pc_8450 ]
  %stack_var_-48.1 = phi i32 [ 0, %bb35 ], [ %v1_8470, %dec_label_pc_8450 ]
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_8460 = add nuw nsw i32 %v0_8460, 1
  store i32 %v1_8460, i32* %r0.global-to-local, align 4
  %v2_8464 = call i32 @function_136e4(i32 %v1_8460, i32 1)
  store i32 %v2_8464, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-48.1, i32* %r3.global-to-local, align 4
  %v1_846c = load i32, i32* @sl, align 4
  %v2_846c = inttoptr i32 %v1_846c to i32*
  store i32 %v2_8464, i32* %v2_846c, align 4
  %v0_8470 = load i32, i32* %r3.global-to-local, align 4
  %v1_8470 = add i32 %v0_8470, 1
  store i32 %v1_8470, i32* %r3.global-to-local, align 4
  %v0_8474 = load i32, i32* @r4, align 4
  store i32 %v0_8474, i32* %r2.global-to-local, align 4
  %v0_8478 = load i32, i32* @r7, align 4
  store i32 %v0_8478, i32* %r1.global-to-local, align 4
  %v3_8480 = call i32 @function_1194c(i32 %v2_8464, i32 %v0_8478, i32 %v0_8474)
  store i32 %v3_8480, i32* %r0.global-to-local, align 4
  store i32 %v1_8470, i32* %r2.global-to-local, align 4
  %v3_8488 = mul i32 %v1_8470, 8
  store i32 %v3_8488, i32* %r3.global-to-local, align 4
  %v1_848c = load i32, i32* @r5, align 4
  %v9_848c = icmp eq i32 %v1_8470, %v1_848c
  store i1 %v9_848c, i1* %cpsr_z.global-to-local, align 1
  %v0_8490 = load i32, i32* @r6, align 4
  %v2_8490 = add i32 %v0_8490, %v3_8488
  store i32 %v2_8490, i32* @sl, align 4
  br i1 %v9_848c, label %dec_label_pc_8498, label %dec_label_pc_8428

dec_label_pc_8498:                                ; preds = %dec_label_pc_845c, %bb
  %v0_8498 = call i32 @function_127c4()
  %v2_84a0 = inttoptr i32 %v0_8498 to i32*
  store i32 0, i32* %v2_84a0, align 4
  store i32 %v4_8330, i32* %r1.global-to-local, align 4
  %v0_84a8 = load i32, i32* @fp, align 4
  store i32 %v0_84a8, i32* %r0.global-to-local, align 4
  %v0_84ac = load i32, i32* @sb, align 4
  store i32 %v0_84ac, i32* %r2.global-to-local, align 4
  store i32 %v2_836c, i32* %r3.global-to-local, align 4
  %v2_84b4 = load i32, i32* @r5, align 4
  %v5_84b4 = load i32, i32* @r6, align 4
  %v6_84b8 = trunc i32 %v2_84b4 to i8
  %v7_84b8 = call i32 @function_81ec(i32 %v0_84a8, i32 %v4_8330, i32 %v0_84ac, i32 %v2_836c, i8 %v6_84b8, i32 %v5_84b4)
  store i32 %v7_84b8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_84bc

dec_label_pc_84bc:                                ; preds = %dec_label_pc_8450, %dec_label_pc_8430, %dec_label_pc_8428, %dec_label_pc_8400, %dec_label_pc_83ec, %dec_label_pc_83d4, %dec_label_pc_83b8, %dec_label_pc_8498
  store i32 %v2_836c, i32* %r3.global-to-local, align 4
  %v2_84c0 = icmp eq i32 %v2_836c, 0
  store i1 %v2_84c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_84c0, label %bb38, label %bb37

bb37:                                             ; preds = %dec_label_pc_84bc
  store i32 %v2_836c, i32* %r0.global-to-local, align 4
  br label %bb38

bb38:                                             ; preds = %dec_label_pc_84bc, %bb37
  store i32 33996, i32* @lr, align 4
  %v1_84c8 = xor i1 %v2_84c0, true
  call void @__pseudo_cond_branch(i1 %v1_84c8, i32 ptrtoint (i32* @global_var_13e30.21 to i32))
  %v0_84cc = load i32, i32* @r6, align 4
  %v2_84cc = icmp eq i32 %v0_84cc, 0
  store i1 %v2_84cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_84cc, label %.dec_label_pc_8300_crit_edge, label %dec_label_pc_84d4

.dec_label_pc_8300_crit_edge:                     ; preds = %bb38
  %v1_8308.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8300

dec_label_pc_84d4:                                ; preds = %bb38
  %v0_84d4 = load i32, i32* @r5, align 4
  %v2_84d4 = icmp eq i32 %v0_84d4, 0
  store i1 %v2_84d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_84d4, label %dec_label_pc_84f8, label %dec_label_pc_84dc

dec_label_pc_84dc:                                ; preds = %dec_label_pc_84d4
  br label %dec_label_pc_84e0

dec_label_pc_84e0:                                ; preds = %dec_label_pc_84e0, %dec_label_pc_84dc
  %v0_84e8 = phi i32 [ 0, %dec_label_pc_84dc ], [ %v1_84f0, %dec_label_pc_84e0 ]
  %v0_84e0 = phi i32 [ %v0_84cc, %dec_label_pc_84dc ], [ %v0_84f8.pre, %dec_label_pc_84e0 ]
  %v4_84e0 = mul i32 %v0_84e8, 8
  %v5_84e0 = add i32 %v4_84e0, %v0_84e0
  %v6_84e0 = inttoptr i32 %v5_84e0 to i32*
  %v7_84e0 = load i32, i32* %v6_84e0, align 4
  store i32 %v7_84e0, i32* %r0.global-to-local, align 4
  %v2_84e4 = icmp eq i32 %v7_84e0, 0
  store i1 %v2_84e4, i1* %cpsr_z.global-to-local, align 1
  %v1_84e8 = add i32 %v0_84e8, 1
  store i32 %v1_84e8, i32* @r4, align 4
  store i32 34032, i32* @lr, align 4
  %v1_84ec = xor i1 %v2_84e4, true
  call void @__pseudo_cond_branch(i1 %v1_84ec, i32 ptrtoint (i32* @global_var_13e30.21 to i32))
  %v0_84f0 = load i32, i32* @r5, align 4
  %v1_84f0 = load i32, i32* @r4, align 4
  %v9_84f0 = icmp eq i32 %v0_84f0, %v1_84f0
  store i1 %v9_84f0, i1* %cpsr_z.global-to-local, align 1
  %v0_84f8.pre = load i32, i32* @r6, align 4
  br i1 %v9_84f0, label %dec_label_pc_84f8, label %dec_label_pc_84e0

dec_label_pc_84f8:                                ; preds = %dec_label_pc_84e0, %dec_label_pc_84d4
  %v0_84f8 = phi i32 [ %v0_84cc, %dec_label_pc_84d4 ], [ %v0_84f8.pre, %dec_label_pc_84e0 ]
  store i32 %v0_84f8, i32* @r0, align 4
  %v0_84fc = call i32 @function_13e30()
  store i32 %v0_84fc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8300

; uselistorder directives
  uselistorder i32 %v0_84fc, { 1, 0 }
  uselistorder i32 %v1_84f0, { 1, 0 }
  uselistorder i1 %v2_84c0, { 0, 2, 1 }
  uselistorder i32 %v2_8490, { 1, 0 }
  uselistorder i32 %v3_8488, { 1, 0 }
  uselistorder i32 %v1_8470, { 3, 0, 2, 4, 1 }
  uselistorder i32 %v2_8454, { 1, 0 }
  uselistorder i32 %v4_8450, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8444, { 2, 0, 1, 3 }
  uselistorder i32 %v3_83c0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_83b0, { 1, 0 }
  uselistorder i32 %v1_83ac, { 1, 0 }
  uselistorder i32 %v2_836c, { 0, 4, 5, 2, 3, 1, 6 }
  uselistorder i32 %v4_8340, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8310, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %v2_830c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_82f8, { 1, 2, 3, 0, 4 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 4, 5, 6, 2, 7, 8, 9, 10, 11, 12 }
  uselistorder i32* %r2.global-to-local, { 1, 5, 6, 2, 3, 4, 0, 7, 8, 9 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 5, 3, 17, 4, 2, 6, 9, 11, 10, 7, 8, 18, 19, 12, 13, 14, 15, 16, 20, 21, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder label %bb38, { 1, 0 }
  uselistorder label %dec_label_pc_84bc, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_845c, { 1, 0 }
  uselistorder label %dec_label_pc_8300, { 6, 1, 0, 2, 3, 4, 5 }
}

define i32 @function_8504(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_8504:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_8504 = icmp eq i32 %arg1, 0
  store i32 %arg4, i32* @r4, align 4
  br i1 %v2_8504, label %dec_label_pc_854c, label %dec_label_pc_8514

dec_label_pc_8514:                                ; preds = %dec_label_pc_8504
  %v0_8514 = load i32, i32* %r1.global-to-local, align 4
  %v1_8514 = add i32 %v0_8514, 4
  %v2_8514 = inttoptr i32 %v1_8514 to i8*
  %v3_8514 = load i8, i8* %v2_8514, align 1
  %v4_8514 = zext i8 %v3_8514 to i32
  %v9_8518 = icmp eq i32 %v4_8514, %arg3
  br i1 %v9_8518, label %dec_label_pc_8558, label %dec_label_pc_853c.preheader

dec_label_pc_853c.preheader:                      ; preds = %dec_label_pc_8514
  br label %dec_label_pc_853c

dec_label_pc_852c:                                ; preds = %dec_label_pc_853c
  %v1_852c = add i32 %v0_8534.in, 12
  %v2_852c = inttoptr i32 %v1_852c to i8*
  %v3_852c = load i8, i8* %v2_852c, align 1
  %v4_852c = zext i8 %v3_852c to i32
  %v9_8530 = icmp eq i32 %v4_852c, %arg3
  br i1 %v9_8530, label %dec_label_pc_8558, label %dec_label_pc_853c

dec_label_pc_853c:                                ; preds = %dec_label_pc_853c.preheader, %dec_label_pc_852c
  %v0_8534.in = phi i32 [ %v0_8514, %dec_label_pc_853c.preheader ], [ %v0_8534, %dec_label_pc_852c ]
  %v0_853c = phi i32 [ 0, %dec_label_pc_853c.preheader ], [ %v1_853c, %dec_label_pc_852c ]
  %v0_8534 = add i32 %v0_8534.in, 8
  %v1_853c = add i32 %v0_853c, 1
  %v9_8540 = icmp eq i32 %v1_853c, %arg1
  store i32 %v0_8534, i32* %r1.global-to-local, align 4
  br i1 %v9_8540, label %dec_label_pc_854c, label %dec_label_pc_852c

dec_label_pc_854c:                                ; preds = %dec_label_pc_853c, %dec_label_pc_8558, %dec_label_pc_8504, %dec_label_pc_8564
  %v0_854c = phi i32 [ %arg4, %dec_label_pc_8558 ], [ %arg4, %dec_label_pc_8504 ], [ %v1_8564, %dec_label_pc_8564 ], [ %arg4, %dec_label_pc_853c ]
  ret i32 %v0_854c

dec_label_pc_8558:                                ; preds = %dec_label_pc_852c, %dec_label_pc_8514
  %v0_8558 = phi i32 [ %v0_8514, %dec_label_pc_8514 ], [ %v0_8534, %dec_label_pc_852c ]
  %v1_8558 = inttoptr i32 %v0_8558 to i32*
  %v2_8558 = load i32, i32* %v1_8558, align 4
  store i32 %v2_8558, i32* @r0, align 4
  %v2_855c = icmp eq i32 %v2_8558, 0
  br i1 %v2_855c, label %dec_label_pc_854c, label %dec_label_pc_8564

dec_label_pc_8564:                                ; preds = %dec_label_pc_8558
  %v1_8564 = call i32 @function_12904(i32 %v2_8558)
  br label %dec_label_pc_854c

; uselistorder directives
  uselistorder i32 %v1_853c, { 1, 0 }
  uselistorder i32 %v0_8534, { 1, 0, 2 }
  uselistorder i32 %v0_8534.in, { 1, 0 }
  uselistorder i32 %v0_8514, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_854c, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_853c, { 1, 0 }
}

define i32 @function_8570(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8570:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_8570 = icmp eq i32 %arg1, 0
  %v3_8574 = load i32, i32* @r4, align 4
  store i32 %v3_8574, i32* %stack_var_-8, align 4
  %v6_8574 = load i32, i32* @lr, align 4
  store i32 %arg4, i32* @r4, align 4
  br i1 %v2_8570, label %dec_label_pc_85b8, label %dec_label_pc_8580

dec_label_pc_8580:                                ; preds = %dec_label_pc_8570
  %v0_8580 = load i32, i32* %r1.global-to-local, align 4
  %v1_8580 = add i32 %v0_8580, 4
  %v2_8580 = inttoptr i32 %v1_8580 to i8*
  %v3_8580 = load i8, i8* %v2_8580, align 1
  %v4_8580 = zext i8 %v3_8580 to i32
  %v9_8584 = icmp eq i32 %v4_8580, %arg3
  br i1 %v9_8584, label %dec_label_pc_85c4, label %dec_label_pc_85a8.preheader

dec_label_pc_85a8.preheader:                      ; preds = %dec_label_pc_8580
  br label %dec_label_pc_85a8

dec_label_pc_8598:                                ; preds = %dec_label_pc_85a8
  %v1_8598 = add i32 %v0_85a0.in, 12
  %v2_8598 = inttoptr i32 %v1_8598 to i8*
  %v3_8598 = load i8, i8* %v2_8598, align 1
  %v4_8598 = zext i8 %v3_8598 to i32
  %v9_859c = icmp eq i32 %v4_8598, %arg3
  br i1 %v9_859c, label %dec_label_pc_85c4, label %dec_label_pc_85a8

dec_label_pc_85a8:                                ; preds = %dec_label_pc_85a8.preheader, %dec_label_pc_8598
  %v0_85a0.in = phi i32 [ %v0_8580, %dec_label_pc_85a8.preheader ], [ %v0_85a0, %dec_label_pc_8598 ]
  %v0_85a8 = phi i32 [ 0, %dec_label_pc_85a8.preheader ], [ %v1_85a8, %dec_label_pc_8598 ]
  %v0_85a0 = add i32 %v0_85a0.in, 8
  %v1_85a8 = add i32 %v0_85a8, 1
  store i32 %v1_85a8, i32* @lr, align 4
  %v9_85ac = icmp eq i32 %v1_85a8, %arg1
  store i32 %v0_85a0, i32* %r1.global-to-local, align 4
  br i1 %v9_85ac, label %dec_label_pc_85b8, label %dec_label_pc_8598

dec_label_pc_85b8:                                ; preds = %dec_label_pc_85a8, %dec_label_pc_85c4, %dec_label_pc_8570, %dec_label_pc_85d0
  %v2_85bc = phi i32 [ %v3_8574, %dec_label_pc_85c4 ], [ %v3_8574, %dec_label_pc_8570 ], [ %v2_85bc.pre, %dec_label_pc_85d0 ], [ %v3_8574, %dec_label_pc_85a8 ]
  %v0_85b8 = phi i32 [ %arg4, %dec_label_pc_85c4 ], [ %arg4, %dec_label_pc_8570 ], [ %v3_85d4, %dec_label_pc_85d0 ], [ %arg4, %dec_label_pc_85a8 ]
  store i32 %v2_85bc, i32* @r4, align 4
  store i32 %v6_8574, i32* @lr, align 4
  ret i32 %v0_85b8

dec_label_pc_85c4:                                ; preds = %dec_label_pc_8598, %dec_label_pc_8580
  %v0_85c4 = phi i32 [ %v0_8580, %dec_label_pc_8580 ], [ %v0_85a0, %dec_label_pc_8598 ]
  %v1_85c4 = inttoptr i32 %v0_85c4 to i32*
  %v2_85c4 = load i32, i32* %v1_85c4, align 4
  %v2_85c8 = icmp eq i32 %v2_85c4, 0
  br i1 %v2_85c8, label %dec_label_pc_85b8, label %dec_label_pc_85d0

dec_label_pc_85d0:                                ; preds = %dec_label_pc_85c4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_85d4 = inttoptr i32 %v2_85c4 to i8*
  %v3_85d4 = call i32 @function_11a00(i8* %v2_85d4, i32 10)
  %v2_85bc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_85b8

; uselistorder directives
  uselistorder i32 %v1_85a8, { 1, 2, 0 }
  uselistorder i32 %v0_85a0, { 1, 0, 2 }
  uselistorder i32 %v0_85a0.in, { 1, 0 }
  uselistorder i32 %v0_8580, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_85b8, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_85a8, { 1, 0 }
}

define i32 @function_85e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_85e0:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_85e0 = load i32, i32* @r4, align 4
  store i32 %v3_85e0, i32* %stack_var_-24, align 4
  %v6_85e0 = load i32, i32* @r5, align 4
  %v9_85e0 = load i32, i32* @r6, align 4
  %v12_85e0 = load i32, i32* @r7, align 4
  %v15_85e0 = load i32, i32* @r8, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_85ec = call i32 @function_136e4(i32 1, i32 8)
  store i32 ptrtoint (i8** @global_var_18248.17 to i32), i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1824c.19 to i32), i32* @r6, align 4
  store i32 36524, i32* %r2.global-to-local, align 4
  store i32 %v2_85ec, i32* @r5, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_18249.25 to i32), i32* %r1.global-to-local, align 4
  %v2_860c = load i32, i32* @global_var_1824c.19, align 4
  %v2_8610 = inttoptr i32 %v2_85ec to i32*
  store i32 36524, i32* %v2_8610, align 4
  %v3_8614 = load i32, i32* @r5, align 4
  %v4_8614 = add i32 %v3_8614, 4
  %v5_8614 = inttoptr i32 %v4_8614 to i8*
  store i8 0, i8* %v5_8614, align 1
  %v0_8618 = load i32, i32* %r1.global-to-local, align 4
  %v3_8618 = mul i32 %v0_8618, 4
  store i32 %v3_8618, i32* %r1.global-to-local, align 4
  %v5_861c = inttoptr i32 %v2_860c to i32*
  %v6_861c = call i32 @function_13818(i32* %v5_861c, i32 %v3_8618, i32 36524, i32 0)
  %v2_8620 = load i8, i8* bitcast (i8** @global_var_18248.17 to i8*), align 4
  %v3_8620 = zext i8 %v2_8620 to i32
  store i32 %v6_861c, i32* %r2.global-to-local, align 4
  %v0_8628 = load i32, i32* @r5, align 4
  %v5_8628 = mul nuw nsw i32 %v3_8620, 4
  %v6_8628 = add i32 %v5_8628, %v6_861c
  %v7_8628 = inttoptr i32 %v6_8628 to i32*
  store i32 %v0_8628, i32* %v7_8628, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_18249.25 to i32), i32* %r3.global-to-local, align 4
  %v1_8638 = load i32, i32* @r6, align 4
  %v2_8638 = inttoptr i32 %v1_8638 to i32*
  store i32 %v6_861c, i32* %v2_8638, align 4
  %v0_863c = load i32, i32* %r3.global-to-local, align 4
  %v1_863c = trunc i32 %v0_863c to i8
  %v2_863c = load i32, i32* @r4, align 4
  %v3_863c = inttoptr i32 %v2_863c to i8*
  store i8 %v1_863c, i8* %v3_863c, align 1
  %v2_8640 = call i32 @function_136e4(i32 1, i32 8)
  store i32 ptrtoint (i32* @global_var_a048.27 to i32), i32* %r3.global-to-local, align 4
  store i32 1, i32* @r8, align 4
  store i32 %v2_8640, i32* @r5, align 4
  store i32 ptrtoint (i8* @global_var_18249.25 to i32), i32* %r1.global-to-local, align 4
  %v2_8658 = load i32, i32* @global_var_1824c.19, align 4
  %v2_865c = inttoptr i32 %v2_8640 to i32*
  store i32 ptrtoint (i32* @global_var_a048.27 to i32), i32* %v2_865c, align 4
  %v0_8660 = load i32, i32* @r8, align 4
  %v1_8660 = trunc i32 %v0_8660 to i8
  %v2_8660 = load i32, i32* @r5, align 4
  %v3_8660 = add i32 %v2_8660, 4
  %v4_8660 = inttoptr i32 %v3_8660 to i8*
  store i8 %v1_8660, i8* %v4_8660, align 1
  %v0_8664 = load i32, i32* %r1.global-to-local, align 4
  %v3_8664 = mul i32 %v0_8664, 4
  store i32 %v3_8664, i32* %r1.global-to-local, align 4
  %v4_8668 = inttoptr i32 %v2_8658 to i32*
  %v5_8668 = call i32 @function_13818(i32* %v4_8668, i32 %v3_8664, i32 %v6_861c, i32 ptrtoint (i32* @global_var_a048.27 to i32))
  %v2_866c = load i8, i8* bitcast (i8** @global_var_18248.17 to i8*), align 4
  %v3_866c = zext i8 %v2_866c to i32
  store i32 %v3_866c, i32* %r3.global-to-local, align 4
  store i32 %v5_8668, i32* %r2.global-to-local, align 4
  %v0_8674 = load i32, i32* @r5, align 4
  %v5_8674 = mul nuw nsw i32 %v3_866c, 4
  %v6_8674 = add i32 %v5_8674, %v5_8668
  %v7_8674 = inttoptr i32 %v6_8674 to i32*
  store i32 %v0_8674, i32* %v7_8674, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_867c = load i32, i32* %r3.global-to-local, align 4
  %v1_867c = load i32, i32* @r8, align 4
  %v2_867c = add i32 %v1_867c, %v0_867c
  store i32 %v2_867c, i32* %r3.global-to-local, align 4
  %v1_8684 = trunc i32 %v2_867c to i8
  %v2_8684 = load i32, i32* @r4, align 4
  %v3_8684 = inttoptr i32 %v2_8684 to i8*
  store i8 %v1_8684, i8* %v3_8684, align 1
  %v0_8688 = load i32, i32* %r2.global-to-local, align 4
  %v1_8688 = load i32, i32* @r6, align 4
  %v2_8688 = inttoptr i32 %v1_8688 to i32*
  store i32 %v0_8688, i32* %v2_8688, align 4
  %v2_868c = call i32 @function_136e4(i32 %v1_867c, i32 8)
  %v2_8690 = load i8, i8* bitcast (i8** @global_var_18248.17 to i8*), align 4
  %v3_8690 = zext i8 %v2_8690 to i32
  store i32 ptrtoint (i32* @global_var_a480.29 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_868c, i32* @r5, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_86a0 = load i32, i32* @r8, align 4
  %v2_86a0 = add i32 %v1_86a0, %v3_8690
  store i32 %v2_86a0, i32* %r1.global-to-local, align 4
  %v2_86a4 = load i32, i32* @global_var_1824c.19, align 4
  %v2_86a8 = inttoptr i32 %v2_868c to i32*
  store i32 ptrtoint (i32* @global_var_a480.29 to i32), i32* %v2_86a8, align 4
  %v3_86ac = load i32, i32* @r5, align 4
  %v4_86ac = add i32 %v3_86ac, 4
  %v5_86ac = inttoptr i32 %v4_86ac to i8*
  store i8 2, i8* %v5_86ac, align 1
  %v0_86b0 = load i32, i32* %r1.global-to-local, align 4
  %v3_86b0 = mul i32 %v0_86b0, 4
  store i32 %v3_86b0, i32* %r1.global-to-local, align 4
  %v5_86b4 = inttoptr i32 %v2_86a4 to i32*
  %v6_86b4 = call i32 @function_13818(i32* %v5_86b4, i32 %v3_86b0, i32 ptrtoint (i32* @global_var_a480.29 to i32), i32 2)
  %v2_86b8 = load i8, i8* bitcast (i8** @global_var_18248.17 to i8*), align 4
  %v3_86b8 = zext i8 %v2_86b8 to i32
  store i32 %v3_86b8, i32* %r3.global-to-local, align 4
  store i32 %v6_86b4, i32* %r2.global-to-local, align 4
  %v0_86c0 = load i32, i32* @r5, align 4
  %v5_86c0 = mul nuw nsw i32 %v3_86b8, 4
  %v6_86c0 = add i32 %v5_86c0, %v6_86b4
  %v7_86c0 = inttoptr i32 %v6_86c0 to i32*
  store i32 %v0_86c0, i32* %v7_86c0, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_86c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_86c8 = load i32, i32* @r8, align 4
  %v2_86c8 = add i32 %v1_86c8, %v0_86c8
  store i32 %v2_86c8, i32* %r3.global-to-local, align 4
  %v1_86d0 = load i32, i32* @r6, align 4
  %v2_86d0 = inttoptr i32 %v1_86d0 to i32*
  store i32 %v6_86b4, i32* %v2_86d0, align 4
  %v0_86d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_86d4 = trunc i32 %v0_86d4 to i8
  %v2_86d4 = load i32, i32* @r4, align 4
  %v3_86d4 = inttoptr i32 %v2_86d4 to i8*
  store i8 %v1_86d4, i8* %v3_86d4, align 1
  %v2_86d8 = call i32 @function_136e4(i32 %v1_86c8, i32 8)
  %v2_86dc = load i8, i8* bitcast (i8** @global_var_18248.17 to i8*), align 4
  %v3_86dc = zext i8 %v2_86dc to i32
  store i32 ptrtoint (i32* @global_var_896c.31 to i32), i32* %r3.global-to-local, align 4
  store i32 8, i32* @r7, align 4
  store i32 %v2_86d8, i32* @r5, align 4
  %v1_86ec = load i32, i32* @r8, align 4
  %v2_86ec = add i32 %v1_86ec, %v3_86dc
  store i32 %v2_86ec, i32* %r1.global-to-local, align 4
  %v2_86f0 = load i32, i32* @global_var_1824c.19, align 4
  %v2_86f4 = inttoptr i32 %v2_86d8 to i32*
  store i32 ptrtoint (i32* @global_var_896c.31 to i32), i32* %v2_86f4, align 4
  %v0_86f8 = load i32, i32* @r7, align 4
  %v1_86f8 = trunc i32 %v0_86f8 to i8
  %v2_86f8 = load i32, i32* @r5, align 4
  %v3_86f8 = add i32 %v2_86f8, 4
  %v4_86f8 = inttoptr i32 %v3_86f8 to i8*
  store i8 %v1_86f8, i8* %v4_86f8, align 1
  %v0_86fc = load i32, i32* %r1.global-to-local, align 4
  %v3_86fc = mul i32 %v0_86fc, 4
  store i32 %v3_86fc, i32* %r1.global-to-local, align 4
  %v4_8700 = inttoptr i32 %v2_86f0 to i32*
  %v5_8700 = call i32 @function_13818(i32* %v4_8700, i32 %v3_86fc, i32 %v6_86b4, i32 ptrtoint (i32* @global_var_896c.31 to i32))
  %v2_8704 = load i8, i8* bitcast (i8** @global_var_18248.17 to i8*), align 4
  %v3_8704 = zext i8 %v2_8704 to i32
  store i32 %v3_8704, i32* %r3.global-to-local, align 4
  store i32 %v5_8700, i32* %r2.global-to-local, align 4
  %v0_870c = load i32, i32* @r5, align 4
  %v5_870c = mul nuw nsw i32 %v3_8704, 4
  %v6_870c = add i32 %v5_870c, %v5_8700
  %v7_870c = inttoptr i32 %v6_870c to i32*
  store i32 %v0_870c, i32* %v7_870c, align 4
  %v0_8710 = load i32, i32* @r7, align 4
  store i32 %v0_8710, i32* %r1.global-to-local, align 4
  %v0_8714 = load i32, i32* %r3.global-to-local, align 4
  %v1_8714 = load i32, i32* @r8, align 4
  %v2_8714 = add i32 %v1_8714, %v0_8714
  store i32 %v2_8714, i32* %r3.global-to-local, align 4
  %v1_871c = trunc i32 %v2_8714 to i8
  %v2_871c = load i32, i32* @r4, align 4
  %v3_871c = inttoptr i32 %v2_871c to i8*
  store i8 %v1_871c, i8* %v3_871c, align 1
  %v0_8720 = load i32, i32* %r2.global-to-local, align 4
  %v1_8720 = load i32, i32* @r6, align 4
  %v2_8720 = inttoptr i32 %v1_8720 to i32*
  store i32 %v0_8720, i32* %v2_8720, align 4
  %v2_8724 = call i32 @function_136e4(i32 %v1_8714, i32 %v0_8710)
  %v2_8728 = load i8, i8* bitcast (i8** @global_var_18248.17 to i8*), align 4
  %v3_8728 = zext i8 %v2_8728 to i32
  store i32 ptrtoint (i32* @global_var_c19c.33 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_8724, i32* @r5, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_8738 = load i32, i32* @r8, align 4
  %v2_8738 = add i32 %v1_8738, %v3_8728
  store i32 %v2_8738, i32* %r1.global-to-local, align 4
  %v2_873c = load i32, i32* @global_var_1824c.19, align 4
  %v2_8740 = inttoptr i32 %v2_8724 to i32*
  store i32 ptrtoint (i32* @global_var_c19c.33 to i32), i32* %v2_8740, align 4
  %v3_8744 = load i32, i32* @r5, align 4
  %v4_8744 = add i32 %v3_8744, 4
  %v5_8744 = inttoptr i32 %v4_8744 to i8*
  store i8 3, i8* %v5_8744, align 1
  %v0_8748 = load i32, i32* %r1.global-to-local, align 4
  %v3_8748 = mul i32 %v0_8748, 4
  store i32 %v3_8748, i32* %r1.global-to-local, align 4
  %v5_874c = inttoptr i32 %v2_873c to i32*
  %v6_874c = call i32 @function_13818(i32* %v5_874c, i32 %v3_8748, i32 ptrtoint (i32* @global_var_c19c.33 to i32), i32 3)
  %v2_8750 = load i8, i8* bitcast (i8** @global_var_18248.17 to i8*), align 4
  %v3_8750 = zext i8 %v2_8750 to i32
  store i32 %v3_8750, i32* %r3.global-to-local, align 4
  store i32 %v6_874c, i32* %r2.global-to-local, align 4
  %v0_8758 = load i32, i32* @r5, align 4
  %v5_8758 = mul nuw nsw i32 %v3_8750, 4
  %v6_8758 = add i32 %v5_8758, %v6_874c
  %v7_8758 = inttoptr i32 %v6_8758 to i32*
  store i32 %v0_8758, i32* %v7_8758, align 4
  %v0_875c = load i32, i32* @r7, align 4
  store i32 %v0_875c, i32* %r1.global-to-local, align 4
  %v0_8760 = load i32, i32* %r3.global-to-local, align 4
  %v1_8760 = load i32, i32* @r8, align 4
  %v2_8760 = add i32 %v1_8760, %v0_8760
  store i32 %v2_8760, i32* %r3.global-to-local, align 4
  %v1_8768 = trunc i32 %v2_8760 to i8
  %v2_8768 = load i32, i32* @r4, align 4
  %v3_8768 = inttoptr i32 %v2_8768 to i8*
  store i8 %v1_8768, i8* %v3_8768, align 1
  %v0_876c = load i32, i32* %r2.global-to-local, align 4
  %v1_876c = load i32, i32* @r6, align 4
  %v2_876c = inttoptr i32 %v1_876c to i32*
  store i32 %v0_876c, i32* %v2_876c, align 4
  %v2_8770 = call i32 @function_136e4(i32 %v1_8760, i32 %v0_875c)
  %v2_8774 = load i8, i8* bitcast (i8** @global_var_18248.17 to i8*), align 4
  %v3_8774 = zext i8 %v2_8774 to i32
  store i32 ptrtoint (i32* @global_var_baa4.35 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_8770, i32* @r5, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v1_8784 = load i32, i32* @r8, align 4
  %v2_8784 = add i32 %v1_8784, %v3_8774
  store i32 %v2_8784, i32* %r1.global-to-local, align 4
  %v2_8788 = load i32, i32* @global_var_1824c.19, align 4
  %v2_878c = inttoptr i32 %v2_8770 to i32*
  store i32 ptrtoint (i32* @global_var_baa4.35 to i32), i32* %v2_878c, align 4
  %v3_8790 = load i32, i32* @r5, align 4
  %v4_8790 = add i32 %v3_8790, 4
  %v5_8790 = inttoptr i32 %v4_8790 to i8*
  store i8 4, i8* %v5_8790, align 1
  %v0_8794 = load i32, i32* %r1.global-to-local, align 4
  %v3_8794 = mul i32 %v0_8794, 4
  store i32 %v3_8794, i32* %r1.global-to-local, align 4
  %v5_8798 = inttoptr i32 %v2_8788 to i32*
  %v6_8798 = call i32 @function_13818(i32* %v5_8798, i32 %v3_8794, i32 ptrtoint (i32* @global_var_baa4.35 to i32), i32 4)
  %v2_879c = load i8, i8* bitcast (i8** @global_var_18248.17 to i8*), align 4
  %v3_879c = zext i8 %v2_879c to i32
  store i32 %v3_879c, i32* %r3.global-to-local, align 4
  store i32 %v6_8798, i32* %r2.global-to-local, align 4
  %v0_87a4 = load i32, i32* @r5, align 4
  %v5_87a4 = mul nuw nsw i32 %v3_879c, 4
  %v6_87a4 = add i32 %v5_87a4, %v6_8798
  %v7_87a4 = inttoptr i32 %v6_87a4 to i32*
  store i32 %v0_87a4, i32* %v7_87a4, align 4
  %v0_87a8 = load i32, i32* @r7, align 4
  store i32 %v0_87a8, i32* %r1.global-to-local, align 4
  %v0_87ac = load i32, i32* %r3.global-to-local, align 4
  %v1_87ac = load i32, i32* @r8, align 4
  %v2_87ac = add i32 %v1_87ac, %v0_87ac
  store i32 %v2_87ac, i32* %r3.global-to-local, align 4
  %v1_87b4 = trunc i32 %v2_87ac to i8
  %v2_87b4 = load i32, i32* @r4, align 4
  %v3_87b4 = inttoptr i32 %v2_87b4 to i8*
  store i8 %v1_87b4, i8* %v3_87b4, align 1
  %v0_87b8 = load i32, i32* %r2.global-to-local, align 4
  %v1_87b8 = load i32, i32* @r6, align 4
  %v2_87b8 = inttoptr i32 %v1_87b8 to i32*
  store i32 %v0_87b8, i32* %v2_87b8, align 4
  %v2_87bc = call i32 @function_136e4(i32 %v1_87ac, i32 %v0_87a8)
  %v2_87c0 = load i8, i8* bitcast (i8** @global_var_18248.17 to i8*), align 4
  %v3_87c0 = zext i8 %v2_87c0 to i32
  store i32 ptrtoint (i32* @global_var_b2f0.37 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_87bc, i32* @r5, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v1_87d0 = load i32, i32* @r8, align 4
  %v2_87d0 = add i32 %v1_87d0, %v3_87c0
  store i32 %v2_87d0, i32* %r1.global-to-local, align 4
  %v2_87d4 = load i32, i32* @global_var_1824c.19, align 4
  %v2_87d8 = inttoptr i32 %v2_87bc to i32*
  store i32 ptrtoint (i32* @global_var_b2f0.37 to i32), i32* %v2_87d8, align 4
  %v3_87dc = load i32, i32* @r5, align 4
  %v4_87dc = add i32 %v3_87dc, 4
  %v5_87dc = inttoptr i32 %v4_87dc to i8*
  store i8 5, i8* %v5_87dc, align 1
  %v0_87e0 = load i32, i32* %r1.global-to-local, align 4
  %v3_87e0 = mul i32 %v0_87e0, 4
  store i32 %v3_87e0, i32* %r1.global-to-local, align 4
  %v5_87e4 = inttoptr i32 %v2_87d4 to i32*
  %v6_87e4 = call i32 @function_13818(i32* %v5_87e4, i32 %v3_87e0, i32 ptrtoint (i32* @global_var_b2f0.37 to i32), i32 5)
  %v2_87e8 = load i8, i8* bitcast (i8** @global_var_18248.17 to i8*), align 4
  %v3_87e8 = zext i8 %v2_87e8 to i32
  store i32 %v3_87e8, i32* %r3.global-to-local, align 4
  store i32 %v6_87e4, i32* %r2.global-to-local, align 4
  %v0_87f0 = load i32, i32* @r5, align 4
  %v5_87f0 = mul nuw nsw i32 %v3_87e8, 4
  %v6_87f0 = add i32 %v5_87f0, %v6_87e4
  %v7_87f0 = inttoptr i32 %v6_87f0 to i32*
  store i32 %v0_87f0, i32* %v7_87f0, align 4
  %v0_87f4 = load i32, i32* @r7, align 4
  store i32 %v0_87f4, i32* %r1.global-to-local, align 4
  %v0_87f8 = load i32, i32* %r3.global-to-local, align 4
  %v1_87f8 = load i32, i32* @r8, align 4
  %v2_87f8 = add i32 %v1_87f8, %v0_87f8
  store i32 %v2_87f8, i32* %r3.global-to-local, align 4
  %v1_8800 = trunc i32 %v2_87f8 to i8
  %v2_8800 = load i32, i32* @r4, align 4
  %v3_8800 = inttoptr i32 %v2_8800 to i8*
  store i8 %v1_8800, i8* %v3_8800, align 1
  %v0_8804 = load i32, i32* %r2.global-to-local, align 4
  %v1_8804 = load i32, i32* @r6, align 4
  %v2_8804 = inttoptr i32 %v1_8804 to i32*
  store i32 %v0_8804, i32* %v2_8804, align 4
  %v2_8808 = call i32 @function_136e4(i32 %v1_87f8, i32 %v0_87f4)
  %v2_880c = load i8, i8* bitcast (i8** @global_var_18248.17 to i8*), align 4
  %v3_880c = zext i8 %v2_880c to i32
  store i32 43836, i32* %r2.global-to-local, align 4
  store i32 %v2_8808, i32* @r5, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v1_881c = load i32, i32* @r8, align 4
  %v2_881c = add i32 %v1_881c, %v3_880c
  store i32 %v2_881c, i32* %r1.global-to-local, align 4
  %v2_8820 = load i32, i32* @global_var_1824c.19, align 4
  %v2_8824 = inttoptr i32 %v2_8808 to i32*
  store i32 43836, i32* %v2_8824, align 4
  %v3_8828 = load i32, i32* @r5, align 4
  %v4_8828 = add i32 %v3_8828, 4
  %v5_8828 = inttoptr i32 %v4_8828 to i8*
  store i8 10, i8* %v5_8828, align 1
  %v0_882c = load i32, i32* %r1.global-to-local, align 4
  %v3_882c = mul i32 %v0_882c, 4
  store i32 %v3_882c, i32* %r1.global-to-local, align 4
  %v5_8830 = inttoptr i32 %v2_8820 to i32*
  %v6_8830 = call i32 @function_13818(i32* %v5_8830, i32 %v3_882c, i32 43836, i32 10)
  %v2_8834 = load i8, i8* bitcast (i8** @global_var_18248.17 to i8*), align 4
  %v3_8834 = zext i8 %v2_8834 to i32
  store i32 %v3_8834, i32* %r3.global-to-local, align 4
  store i32 %v6_8830, i32* %r2.global-to-local, align 4
  %v0_883c = load i32, i32* @r5, align 4
  %v5_883c = mul nuw nsw i32 %v3_8834, 4
  %v6_883c = add i32 %v5_883c, %v6_8830
  %v7_883c = inttoptr i32 %v6_883c to i32*
  store i32 %v0_883c, i32* %v7_883c, align 4
  %v0_8840 = load i32, i32* @r7, align 4
  store i32 %v0_8840, i32* %r1.global-to-local, align 4
  %v0_8844 = load i32, i32* %r3.global-to-local, align 4
  %v1_8844 = load i32, i32* @r8, align 4
  %v2_8844 = add i32 %v1_8844, %v0_8844
  store i32 %v2_8844, i32* %r3.global-to-local, align 4
  %v1_884c = trunc i32 %v2_8844 to i8
  %v2_884c = load i32, i32* @r4, align 4
  %v3_884c = inttoptr i32 %v2_884c to i8*
  store i8 %v1_884c, i8* %v3_884c, align 1
  %v0_8850 = load i32, i32* %r2.global-to-local, align 4
  %v1_8850 = load i32, i32* @r6, align 4
  %v2_8850 = inttoptr i32 %v1_8850 to i32*
  store i32 %v0_8850, i32* %v2_8850, align 4
  %v2_8854 = call i32 @function_136e4(i32 %v1_8844, i32 %v0_8840)
  %v2_8858 = load i8, i8* bitcast (i8** @global_var_18248.17 to i8*), align 4
  %v3_8858 = zext i8 %v2_8858 to i32
  store i32 ptrtoint (i32* @global_var_9a2c.40 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_8854, i32* @r5, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  %v1_8868 = load i32, i32* @r8, align 4
  %v2_8868 = add i32 %v1_8868, %v3_8858
  store i32 %v2_8868, i32* %r1.global-to-local, align 4
  %v2_886c = load i32, i32* @global_var_1824c.19, align 4
  %v2_8870 = inttoptr i32 %v2_8854 to i32*
  store i32 ptrtoint (i32* @global_var_9a2c.40 to i32), i32* %v2_8870, align 4
  %v3_8874 = load i32, i32* @r5, align 4
  %v4_8874 = add i32 %v3_8874, 4
  %v5_8874 = inttoptr i32 %v4_8874 to i8*
  store i8 6, i8* %v5_8874, align 1
  %v0_8878 = load i32, i32* %r1.global-to-local, align 4
  %v3_8878 = mul i32 %v0_8878, 4
  store i32 %v3_8878, i32* %r1.global-to-local, align 4
  %v5_887c = inttoptr i32 %v2_886c to i32*
  %v6_887c = call i32 @function_13818(i32* %v5_887c, i32 %v3_8878, i32 ptrtoint (i32* @global_var_9a2c.40 to i32), i32 6)
  %v2_8880 = load i8, i8* bitcast (i8** @global_var_18248.17 to i8*), align 4
  %v3_8880 = zext i8 %v2_8880 to i32
  store i32 %v3_8880, i32* %r3.global-to-local, align 4
  store i32 %v6_887c, i32* %r2.global-to-local, align 4
  %v0_8888 = load i32, i32* @r5, align 4
  %v5_8888 = mul nuw nsw i32 %v3_8880, 4
  %v6_8888 = add i32 %v5_8888, %v6_887c
  %v7_8888 = inttoptr i32 %v6_8888 to i32*
  store i32 %v0_8888, i32* %v7_8888, align 4
  %v0_888c = load i32, i32* @r7, align 4
  store i32 %v0_888c, i32* %r1.global-to-local, align 4
  %v0_8890 = load i32, i32* %r3.global-to-local, align 4
  %v1_8890 = load i32, i32* @r8, align 4
  %v2_8890 = add i32 %v1_8890, %v0_8890
  store i32 %v2_8890, i32* %r3.global-to-local, align 4
  %v1_8898 = trunc i32 %v2_8890 to i8
  %v2_8898 = load i32, i32* @r4, align 4
  %v3_8898 = inttoptr i32 %v2_8898 to i8*
  store i8 %v1_8898, i8* %v3_8898, align 1
  %v0_889c = load i32, i32* %r2.global-to-local, align 4
  %v1_889c = load i32, i32* @r6, align 4
  %v2_889c = inttoptr i32 %v1_889c to i32*
  store i32 %v0_889c, i32* %v2_889c, align 4
  %v2_88a0 = call i32 @function_136e4(i32 %v1_8890, i32 %v0_888c)
  %v2_88a4 = load i8, i8* bitcast (i8** @global_var_18248.17 to i8*), align 4
  %v3_88a4 = zext i8 %v2_88a4 to i32
  store i32 ptrtoint (i32* @global_var_9398.42 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_88a0, i32* @r5, align 4
  store i32 7, i32* %r3.global-to-local, align 4
  %v1_88b4 = load i32, i32* @r8, align 4
  %v2_88b4 = add i32 %v1_88b4, %v3_88a4
  store i32 %v2_88b4, i32* %r1.global-to-local, align 4
  %v2_88b8 = load i32, i32* @global_var_1824c.19, align 4
  %v2_88bc = inttoptr i32 %v2_88a0 to i32*
  store i32 ptrtoint (i32* @global_var_9398.42 to i32), i32* %v2_88bc, align 4
  %v3_88c0 = load i32, i32* @r5, align 4
  %v4_88c0 = add i32 %v3_88c0, 4
  %v5_88c0 = inttoptr i32 %v4_88c0 to i8*
  store i8 7, i8* %v5_88c0, align 1
  %v0_88c4 = load i32, i32* %r1.global-to-local, align 4
  %v3_88c4 = mul i32 %v0_88c4, 4
  store i32 %v3_88c4, i32* %r1.global-to-local, align 4
  %v5_88c8 = inttoptr i32 %v2_88b8 to i32*
  %v6_88c8 = call i32 @function_13818(i32* %v5_88c8, i32 %v3_88c4, i32 ptrtoint (i32* @global_var_9398.42 to i32), i32 7)
  %v2_88cc = load i8, i8* bitcast (i8** @global_var_18248.17 to i8*), align 4
  %v3_88cc = zext i8 %v2_88cc to i32
  store i32 %v3_88cc, i32* %r3.global-to-local, align 4
  store i32 %v6_88c8, i32* %r2.global-to-local, align 4
  %v0_88d4 = load i32, i32* @r5, align 4
  %v5_88d4 = mul nuw nsw i32 %v3_88cc, 4
  %v6_88d4 = add i32 %v5_88d4, %v6_88c8
  %v7_88d4 = inttoptr i32 %v6_88d4 to i32*
  store i32 %v0_88d4, i32* %v7_88d4, align 4
  %v0_88d8 = load i32, i32* @r7, align 4
  store i32 %v0_88d8, i32* %r1.global-to-local, align 4
  %v0_88dc = load i32, i32* %r3.global-to-local, align 4
  %v1_88dc = load i32, i32* @r8, align 4
  %v2_88dc = add i32 %v1_88dc, %v0_88dc
  store i32 %v2_88dc, i32* %r3.global-to-local, align 4
  %v1_88e4 = trunc i32 %v2_88dc to i8
  %v2_88e4 = load i32, i32* @r4, align 4
  %v3_88e4 = inttoptr i32 %v2_88e4 to i8*
  store i8 %v1_88e4, i8* %v3_88e4, align 1
  %v0_88e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_88e8 = load i32, i32* @r6, align 4
  %v2_88e8 = inttoptr i32 %v1_88e8 to i32*
  store i32 %v0_88e8, i32* %v2_88e8, align 4
  %v2_88ec = call i32 @function_136e4(i32 %v1_88dc, i32 %v0_88d8)
  %v2_88f0 = load i8, i8* bitcast (i8** @global_var_18248.17 to i8*), align 4
  %v3_88f0 = zext i8 %v2_88f0 to i32
  store i32 35852, i32* %r2.global-to-local, align 4
  store i32 %v2_88ec, i32* @r5, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v1_8900 = load i32, i32* @r8, align 4
  %v2_8900 = add i32 %v1_8900, %v3_88f0
  store i32 %v2_8900, i32* %r1.global-to-local, align 4
  %v2_8904 = load i32, i32* @global_var_1824c.19, align 4
  %v2_8908 = inttoptr i32 %v2_88ec to i32*
  store i32 35852, i32* %v2_8908, align 4
  %v3_890c = load i32, i32* @r5, align 4
  %v4_890c = add i32 %v3_890c, 4
  %v5_890c = inttoptr i32 %v4_890c to i8*
  store i8 9, i8* %v5_890c, align 1
  %v0_8910 = load i32, i32* %r1.global-to-local, align 4
  %v3_8910 = mul i32 %v0_8910, 4
  store i32 %v3_8910, i32* %r1.global-to-local, align 4
  %v5_8914 = inttoptr i32 %v2_8904 to i32*
  %v6_8914 = call i32 @function_13818(i32* %v5_8914, i32 %v3_8910, i32 35852, i32 9)
  %v2_8918 = load i8, i8* bitcast (i8** @global_var_18248.17 to i8*), align 4
  %v3_8918 = zext i8 %v2_8918 to i32
  store i32 %v3_8918, i32* %r3.global-to-local, align 4
  %v1_891c = load i32, i32* @r6, align 4
  %v2_891c = inttoptr i32 %v1_891c to i32*
  store i32 %v6_8914, i32* %v2_891c, align 4
  %v0_8920 = load i32, i32* @r5, align 4
  %v2_8920 = load i32, i32* %r3.global-to-local, align 4
  %v5_8920 = mul i32 %v2_8920, 4
  %v6_8920 = add i32 %v5_8920, %v6_8914
  %v7_8920 = inttoptr i32 %v6_8920 to i32*
  store i32 %v0_8920, i32* %v7_8920, align 4
  %v0_8924 = load i32, i32* %r3.global-to-local, align 4
  %v1_8924 = load i32, i32* @r8, align 4
  %v2_8924 = add i32 %v1_8924, %v0_8924
  store i32 %v2_8924, i32* %r2.global-to-local, align 4
  %v1_892c = trunc i32 %v2_8924 to i8
  %v2_892c = load i32, i32* @r4, align 4
  %v3_892c = inttoptr i32 %v2_892c to i8*
  store i8 %v1_892c, i8* %v3_892c, align 1
  %v2_8930 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_8930, i32* @r4, align 4
  store i32 %v6_85e0, i32* @r5, align 4
  store i32 %v9_85e0, i32* @r6, align 4
  store i32 %v12_85e0, i32* @r7, align 4
  store i32 %v15_85e0, i32* @r8, align 4
  ret i32 %v1_8924

; uselistorder directives
  uselistorder i32 %v1_8924, { 1, 0 }
  uselistorder i32 %v3_8910, { 1, 0 }
  uselistorder i32 %v1_88dc, { 1, 0 }
  uselistorder i32 %v3_88c4, { 1, 0 }
  uselistorder i32 %v1_8890, { 1, 0 }
  uselistorder i32 %v3_8878, { 1, 0 }
  uselistorder i32 %v1_8844, { 1, 0 }
  uselistorder i32 %v3_882c, { 1, 0 }
  uselistorder i32 %v1_87f8, { 1, 0 }
  uselistorder i32 %v3_87e0, { 1, 0 }
  uselistorder i32 %v1_87ac, { 1, 0 }
  uselistorder i32 %v3_8794, { 1, 0 }
  uselistorder i32 %v1_8760, { 1, 0 }
  uselistorder i32 %v3_8748, { 1, 0 }
  uselistorder i32 %v1_8714, { 1, 0 }
  uselistorder i32 %v3_86fc, { 1, 0 }
  uselistorder i32 %v1_86c8, { 1, 0 }
  uselistorder i32 %v6_86b4, { 1, 2, 0, 3 }
  uselistorder i32 %v3_86b0, { 1, 0 }
  uselistorder i32 %v1_867c, { 1, 0 }
  uselistorder i32 %v3_8664, { 1, 0 }
  uselistorder i32 %v2_8640, { 1, 0 }
  uselistorder i32 %v6_861c, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8618, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 43, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 0 }
  uselistorder i8* bitcast (i8** @global_var_18248.17 to i8*), { 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_18249.25 to i32), { 2, 1, 0 }
  uselistorder i32* @global_var_1824c.19, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11 }
}

define i32 @function_896c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_896c:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_896c = load i32, i32* @r4, align 4
  %v18_896c = load i32, i32* @sb, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg4, i32* @r6, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_8988 = call i32 @function_136e4(i32 %arg1, i32 4)
  store i32 %v2_8988, i32* @sl, align 4
  %v0_8994 = load i32, i32* @r7, align 4
  %v2_8998 = call i32 @function_136e4(i32 %v0_8994, i32 4)
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* @r4, align 4
  %v0_89a4 = load i32, i32* @r6, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* %r3.global-to-local, align 4
  store i32 %v2_8998, i32* @r8, align 4
  %v0_89b4 = load i32, i32* @r5, align 4
  %v5_89b8 = inttoptr i32 %v0_89a4 to i32*
  %v6_89b8 = call i32 @function_8570(i32 %v0_89b4, i32* %v5_89b8, i32 7, i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32))
  %v3_89c0 = urem i32 %v6_89b8, 65536
  %v0_89c4 = load i32, i32* @r6, align 4
  %v0_89cc = load i32, i32* @r4, align 4
  store i32 %v0_89cc, i32* %r3.global-to-local, align 4
  %v0_89d0 = load i32, i32* @r5, align 4
  %v6_89d8 = inttoptr i32 %v0_89c4 to i32*
  %v7_89d8 = call i32 @function_8570(i32 %v0_89d0, i32* %v6_89d8, i32 6, i32 %v0_89cc)
  %v0_89dc = load i32, i32* @r6, align 4
  %v3_89e0 = mul i32 %v7_89d8, 65536
  store i32 %v3_89e0, i32* %sb.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_89ec = load i32, i32* @r5, align 4
  %v4_89f0 = inttoptr i32 %v0_89dc to i32*
  %v5_89f0 = call i32 @function_8570(i32 %v0_89ec, i32* %v4_89f0, i32 0, i32 512)
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_8a00 = load i32, i32* @r6, align 4
  %v0_8a04 = load i32, i32* @r5, align 4
  %v3_8a08 = urem i32 %v5_89f0, 65536
  store i32 %v3_8a08, i32* @r5, align 4
  %v4_8a0c = inttoptr i32 %v0_8a00 to i32*
  %v5_8a0c = call i32 @function_8570(i32 %v0_8a04, i32* %v4_8a0c, i32 1, i32 1)
  %v0_8a10 = load i32, i32* %sb.global-to-local, align 4
  %v3_8a10 = udiv i32 %v0_8a10, 65536
  store i32 %v3_8a10, i32* @r6, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_8a18 = load i32, i32* @r4, align 4
  %v9_8a18 = icmp eq i32 %v3_8a10, %v1_8a18
  br i1 %v9_8a18, label %dec_label_pc_8a48, label %bb

bb:                                               ; preds = %dec_label_pc_896c
  store i32 0, i32* %stack_var_-56, align 4
  %v4_8a30 = udiv i32 %v0_8a10, 16777216
  store i32 %v4_8a30, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_8a58

dec_label_pc_8a48:                                ; preds = %dec_label_pc_896c
  store i32 0, i32* %stack_var_-56, align 4
  %v0_8a48 = call i32 @function_df2c()
  br label %dec_label_pc_8a58

dec_label_pc_8a58:                                ; preds = %bb, %dec_label_pc_8a48
  %v0_8a3c10 = urem i32 %v5_8a0c, 256
  %v0_8a58 = load i32, i32* @r7, align 4
  %v2_8a58 = icmp eq i32 %v0_8a58, 0
  br i1 %v2_8a58, label %dec_label_pc_8b98, label %dec_label_pc_8a60

dec_label_pc_8a60:                                ; preds = %dec_label_pc_8a58
  store i32 0, i32* @sb, align 4
  store i32 0, i32* @fp, align 4
  %v3_8b0c = udiv i32 %v3_89c0, 256
  %v1_8b08 = mul i32 %v6_89b8, 256
  %v4_8b10 = and i32 %v1_8b08, 65280
  %v5_8b10 = or i32 %v4_8b10, %v3_8b0c
  %v2_8a90 = ptrtoint i32* %stack_var_-56 to i32
  br label %dec_label_pc_8af0

dec_label_pc_8a70:                                ; preds = %bb51, %dec_label_pc_8b30
  %v3_8a7c = call i32 @function_12b7c(i32 2, i32 2, i32 17)
  %v7_8a84 = icmp eq i32 %v3_8a7c, -1
  %v0_8a88 = load i32, i32* @sb, align 4
  %v1_8a88 = add i32 %v0_8a88, 1
  store i32 %v1_8a88, i32* @sb, align 4
  %v0_8a8c = load i32, i32* @fp, align 4
  %v1_8a8c = add i32 %v0_8a8c, 24
  store i32 %v1_8a8c, i32* @fp, align 4
  %v2_8a98 = load i32, i32* @r8, align 4
  %v3_8a98 = add i32 %v2_8a98, %stack_var_-60.0
  %v4_8a98 = inttoptr i32 %v3_8a98 to i32*
  store i32 %v3_8a7c, i32* %v4_8a98, align 4
  br i1 %v7_8a84, label %dec_label_pc_8b8c, label %dec_label_pc_8aa0

dec_label_pc_8aa0:                                ; preds = %dec_label_pc_8a70
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 2, i32* %stack_var_-56, align 4
  %v3_8ab8 = call i32 @function_1292c(i32 %v3_8a7c, i32 %v2_8a90, i32 16)
  %v0_8abc = load i32, i32* @r6, align 4
  %v1_8abc = add i32 %v0_8abc, 20
  %v2_8abc = inttoptr i32 %v1_8abc to i8*
  %v3_8abc = load i8, i8* %v2_8abc, align 1
  %v4_8abc = zext i8 %v3_8abc to i32
  store i32 %v4_8abc, i32* %r3.global-to-local, align 4
  %tmp = icmp ult i8 %v3_8abc, 32
  br i1 %tmp, label %dec_label_pc_8b44, label %dec_label_pc_8ac8

dec_label_pc_8ac8:                                ; preds = %dec_label_pc_8aa0, %dec_label_pc_8b44
  %v0_8acc = phi i32 [ %v0_8abc, %dec_label_pc_8aa0 ], [ %v0_8acc.pre, %dec_label_pc_8b44 ]
  %v1_8ad0 = load i32, i32* @r8, align 4
  %v2_8ad0 = add i32 %v1_8ad0, %stack_var_-60.0
  %v3_8ad0 = inttoptr i32 %v2_8ad0 to i32*
  %v4_8ad0 = load i32, i32* %v3_8ad0, align 4
  %v3_8ad8 = call i32 @function_12964(i32 %v4_8ad0, i32 %v0_8acc, i32 16)
  %v0_8ae0 = load i32, i32* @sb, align 4
  %v1_8ae0 = load i32, i32* @r7, align 4
  %v9_8ae0 = icmp eq i32 %v0_8ae0, %v1_8ae0
  %v1_8ae4 = add i32 %stack_var_-60.0, 4
  store i32 %v1_8ae4, i32* %r3.global-to-local, align 4
  br i1 %v9_8ae0, label %dec_label_pc_8b98, label %dec_label_pc_8af0

dec_label_pc_8af0:                                ; preds = %dec_label_pc_8ac8, %dec_label_pc_8a60
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_8a60 ], [ %v1_8ae4, %dec_label_pc_8ac8 ]
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* @r4, align 4
  %v3_8b00 = call i32 @function_136e4(i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32 1)
  store i32 %v5_8b10, i32* %r3.global-to-local, align 4
  %v1_8b1c = load i32, i32* @r4, align 4
  %v9_8b1c = icmp eq i32 %v3_89c0, %v1_8b1c
  %v1_8b20 = load i32, i32* @fp, align 4
  %v2_8b20 = add i32 %v1_8b20, %arg2
  store i32 %v2_8b20, i32* @r6, align 4
  %v2_8b24 = load i32, i32* @sl, align 4
  %v3_8b24 = add i32 %v2_8b24, %stack_var_-60.0
  %v4_8b24 = inttoptr i32 %v3_8b24 to i32*
  store i32 %v3_8b00, i32* %v4_8b24, align 4
  br i1 %v9_8b1c, label %dec_label_pc_8b30, label %bb51

bb51:                                             ; preds = %dec_label_pc_8af0
  %v1_8b28 = load i32, i32* %r3.global-to-local, align 4
  %v2_8b28 = trunc i32 %v1_8b28 to i16
  %v3_8b28 = load i32, i32* @r6, align 4
  %v4_8b28 = add i32 %v3_8b28, 2
  %v5_8b28 = inttoptr i32 %v4_8b28 to i16*
  store i16 %v2_8b28, i16* %v5_8b28, align 2
  br label %dec_label_pc_8a70

dec_label_pc_8b30:                                ; preds = %dec_label_pc_8af0
  %v0_8b30 = call i32 @function_df2c()
  %v1_8b30 = trunc i32 %v0_8b30 to i16
  %v0_8b38 = load i32, i32* @fp, align 4
  %v2_8b38 = add i32 %v0_8b38, %arg2
  store i32 %v2_8b38, i32* @r6, align 4
  %v4_8b3c = add i32 %v2_8b38, 2
  %v5_8b3c = inttoptr i32 %v4_8b3c to i16*
  store i16 %v1_8b30, i16* %v5_8b3c, align 2
  br label %dec_label_pc_8a70

dec_label_pc_8b44:                                ; preds = %dec_label_pc_8aa0
  %v1_8b44 = add i32 %v0_8abc, 16
  %v2_8b44 = inttoptr i32 %v1_8b44 to i32*
  %v3_8b44 = load i32, i32* %v2_8b44, align 4
  store i32 %v3_8b44, i32* %r4.global-to-local, align 4
  %v0_8b48 = call i32 @function_df2c()
  %v1_8b58 = and i32 %v3_8b44, 65280
  store i32 %v1_8b58, i32* %r3.global-to-local, align 4
  %v0_8b60 = load i32, i32* @r6, align 4
  %v1_8b60 = add i32 %v0_8b60, 20
  %v2_8b60 = inttoptr i32 %v1_8b60 to i8*
  %v3_8b60 = load i8, i8* %v2_8b60, align 1
  %v4_8b60 = zext i8 %v3_8b60 to i32
  %v5_8b64 = call i32 @llvm.bswap.i32(i32 %v3_8b44)
  %v7_8b68 = lshr i32 %v0_8b48, %v4_8b60
  %v8_8b68 = add i32 %v7_8b68, %v5_8b64
  %v5_8b80 = call i32 @llvm.bswap.i32(i32 %v8_8b68)
  store i32 %v5_8b80, i32* %r3.global-to-local, align 4
  %v2_8b84 = add i32 %v0_8b60, 4
  %v3_8b84 = inttoptr i32 %v2_8b84 to i32*
  store i32 %v5_8b80, i32* %v3_8b84, align 4
  %v0_8acc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_8ac8

dec_label_pc_8b8c:                                ; preds = %dec_label_pc_8a70
  store i32 %v3_896c, i32* %r4.global-to-local, align 4
  store i32 %v18_896c, i32* %sb.global-to-local, align 4
  ret i32 %v3_8a7c

dec_label_pc_8b98:                                ; preds = %dec_label_pc_8ac8, %dec_label_pc_8a58
  %v1_8bd822 = phi i32 [ 0, %dec_label_pc_8a58 ], [ %v0_8ae0, %dec_label_pc_8ac8 ]
  %v2_8b9c = icmp eq i32 %v0_8a3c10, 0
  br i1 %v2_8b9c, label %dec_label_pc_8bbc.outer, label %dec_label_pc_8bd4

dec_label_pc_8bac:                                ; preds = %dec_label_pc_8bbc
  store i32 %v1_8bb0, i32* %r4.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_8bac = load i32, i32* @r8, align 4
  %v4_8bac = mul i32 %v1_8bb0, 4
  %v5_8bac = add i32 %v0_8bac, %v4_8bac
  %v6_8bac = inttoptr i32 %v5_8bac to i32*
  %v7_8bac = load i32, i32* %v6_8bac, align 4
  %v0_8bb0 = load i32, i32* @sl, align 4
  %v5_8bb0 = add i32 %v0_8bb0, %v4_8bac
  %v6_8bb0 = inttoptr i32 %v5_8bb0 to i32*
  %v7_8bb0 = load i32, i32* %v6_8bb0, align 4
  %v4_8bb4 = call i32 @function_12ac0(i32 %v7_8bac, i32 %v7_8bb0, i32 %v0_8bc0, i32 16384)
  %v0_8bb8 = load i32, i32* %r4.global-to-local, align 4
  %v1_8bb8 = add i32 %v0_8bb8, 1
  %v0_8bbc.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_8bbc.outer

dec_label_pc_8bbc.outer:                          ; preds = %dec_label_pc_8b98, %dec_label_pc_8bac
  %v0_8bbc.ph = phi i32 [ %v0_8bbc.pre.pre, %dec_label_pc_8bac ], [ %v1_8bd822, %dec_label_pc_8b98 ]
  %v1_8bb0.ph = phi i32 [ %v1_8bb8, %dec_label_pc_8bac ], [ 0, %dec_label_pc_8b98 ]
  %v0_8bc0 = load i32, i32* @r5, align 4
  br label %dec_label_pc_8bbc

dec_label_pc_8bbc:                                ; preds = %dec_label_pc_8bbc.outer, %dec_label_pc_8bbc
  %v1_8bb0 = phi i32 [ 0, %dec_label_pc_8bbc ], [ %v1_8bb0.ph, %dec_label_pc_8bbc.outer ]
  %v8_8bc8 = icmp sgt i32 %v0_8bbc.ph, %v1_8bb0
  br i1 %v8_8bc8, label %dec_label_pc_8bac, label %dec_label_pc_8bbc

dec_label_pc_8bd4:                                ; preds = %dec_label_pc_8bd8, %dec_label_pc_8b98
  %v1_8bd821 = phi i32 [ %v1_8bd822, %dec_label_pc_8b98 ], [ %v1_8bd8, %dec_label_pc_8bd8 ]
  br label %dec_label_pc_8bd8

dec_label_pc_8bd8:                                ; preds = %dec_label_pc_8be4, %dec_label_pc_8bd4
  %v1_8bd8 = phi i32 [ %v1_8bd821, %dec_label_pc_8bd4 ], [ %v1_8bd8.pre, %dec_label_pc_8be4 ]
  %v1_8be4 = phi i32 [ 0, %dec_label_pc_8bd4 ], [ %v1_8c04, %dec_label_pc_8be4 ]
  store i32 %v1_8be4, i32* @r6, align 4
  %v6_8be0 = icmp slt i32 %v1_8be4, %v1_8bd8
  br i1 %v6_8be0, label %dec_label_pc_8be4, label %dec_label_pc_8bd4

dec_label_pc_8be4:                                ; preds = %dec_label_pc_8bd8
  %v0_8bdc = load i32, i32* @r5, align 4
  %v0_8be4 = load i32, i32* @sl, align 4
  %v4_8be4 = mul i32 %v1_8be4, 4
  %v5_8be4 = add i32 %v0_8be4, %v4_8be4
  %v6_8be4 = inttoptr i32 %v5_8be4 to i32*
  %v7_8be4 = load i32, i32* %v6_8be4, align 4
  store i32 %v7_8be4, i32* @r4, align 4
  %v2_8bec = inttoptr i32 %v7_8be4 to i16*
  %v3_8bec = call i32 @function_e0c0(i16* %v2_8bec, i32 %v0_8bdc)
  %v0_8bf0 = load i32, i32* @r8, align 4
  %v1_8bf0 = load i32, i32* @r6, align 4
  %v4_8bf0 = mul i32 %v1_8bf0, 4
  %v5_8bf0 = add i32 %v4_8bf0, %v0_8bf0
  %v6_8bf0 = inttoptr i32 %v5_8bf0 to i32*
  %v7_8bf0 = load i32, i32* %v6_8bf0, align 4
  %v0_8bf4 = load i32, i32* @r4, align 4
  %v0_8bf8 = load i32, i32* @r5, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_8c00 = call i32 @function_12ac0(i32 %v7_8bf0, i32 %v0_8bf4, i32 %v0_8bf8, i32 16384)
  %v0_8c04 = load i32, i32* @r6, align 4
  %v1_8c04 = add i32 %v0_8c04, 1
  %v1_8bd8.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_8bd8

; uselistorder directives
  uselistorder i32 %v1_8bd8, { 1, 0 }
  uselistorder i32 %v1_8bb0, { 2, 1, 0 }
  uselistorder i32 %v5_8b80, { 1, 0 }
  uselistorder i32 %v3_8b44, { 1, 0, 2 }
  uselistorder i32 %stack_var_-60.0, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8abc, { 1, 0, 2 }
  uselistorder i32 %v3_8a7c, { 1, 3, 2, 0 }
  uselistorder i32 %v3_8a10, { 1, 0 }
  uselistorder i32 %v3_89c0, { 1, 0 }
  uselistorder i32* %stack_var_-56, { 1, 3, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 8, 9, 5, 6, 7, 10, 11, 12, 13, 14, 15, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8bbc, { 1, 0 }
  uselistorder label %dec_label_pc_8bbc.outer, { 1, 0 }
  uselistorder label %dec_label_pc_8ac8, { 1, 0 }
  uselistorder label %dec_label_pc_8a70, { 1, 0 }
  uselistorder label %dec_label_pc_8a58, { 1, 0 }
}

define i32 @function_8c0c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8c0c:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_8c0c = load i32, i32* @r4, align 4
  %v18_8c0c = load i32, i32* @sb, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg4, i32* @r6, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_8c28 = call i32 @function_136e4(i32 %arg1, i32 4)
  store i32 %v2_8c28, i32* @sl, align 4
  %v0_8c34 = load i32, i32* @r7, align 4
  %v2_8c38 = call i32 @function_136e4(i32 %v0_8c34, i32 4)
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* @r4, align 4
  %v0_8c44 = load i32, i32* @r6, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* %r3.global-to-local, align 4
  store i32 %v2_8c38, i32* @r8, align 4
  %v0_8c54 = load i32, i32* @r5, align 4
  %v5_8c58 = inttoptr i32 %v0_8c44 to i32*
  %v6_8c58 = call i32 @function_8570(i32 %v0_8c54, i32* %v5_8c58, i32 7, i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32))
  %v3_8c60 = urem i32 %v6_8c58, 65536
  %v0_8c64 = load i32, i32* @r6, align 4
  %v0_8c6c = load i32, i32* @r4, align 4
  store i32 %v0_8c6c, i32* %r3.global-to-local, align 4
  %v0_8c70 = load i32, i32* @r5, align 4
  %v6_8c78 = inttoptr i32 %v0_8c64 to i32*
  %v7_8c78 = call i32 @function_8570(i32 %v0_8c70, i32* %v6_8c78, i32 6, i32 %v0_8c6c)
  %v0_8c7c = load i32, i32* @r6, align 4
  %v3_8c80 = mul i32 %v7_8c78, 65536
  store i32 %v3_8c80, i32* %sb.global-to-local, align 4
  store i32 1024, i32* %r3.global-to-local, align 4
  %v0_8c8c = load i32, i32* @r5, align 4
  %v4_8c90 = inttoptr i32 %v0_8c7c to i32*
  %v5_8c90 = call i32 @function_8570(i32 %v0_8c8c, i32* %v4_8c90, i32 0, i32 1024)
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_8ca0 = load i32, i32* @r6, align 4
  %v0_8ca4 = load i32, i32* @r5, align 4
  %v3_8ca8 = urem i32 %v5_8c90, 65536
  store i32 %v3_8ca8, i32* @r5, align 4
  %v4_8cac = inttoptr i32 %v0_8ca0 to i32*
  %v5_8cac = call i32 @function_8570(i32 %v0_8ca4, i32* %v4_8cac, i32 1, i32 1)
  %v0_8cb0 = load i32, i32* %sb.global-to-local, align 4
  %v3_8cb0 = udiv i32 %v0_8cb0, 65536
  store i32 %v3_8cb0, i32* @r6, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_8cb8 = load i32, i32* @r4, align 4
  %v9_8cb8 = icmp eq i32 %v3_8cb0, %v1_8cb8
  br i1 %v9_8cb8, label %dec_label_pc_8ce8, label %bb

bb:                                               ; preds = %dec_label_pc_8c0c
  store i32 0, i32* %stack_var_-56, align 4
  %v4_8cd0 = udiv i32 %v0_8cb0, 16777216
  store i32 %v4_8cd0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_8cf8

dec_label_pc_8ce8:                                ; preds = %dec_label_pc_8c0c
  store i32 0, i32* %stack_var_-56, align 4
  %v0_8ce8 = call i32 @function_df2c()
  br label %dec_label_pc_8cf8

dec_label_pc_8cf8:                                ; preds = %bb, %dec_label_pc_8ce8
  %v0_8cdc10 = urem i32 %v5_8cac, 256
  %v0_8cf8 = load i32, i32* @r7, align 4
  %v2_8cf8 = icmp eq i32 %v0_8cf8, 0
  br i1 %v2_8cf8, label %dec_label_pc_8e38, label %dec_label_pc_8d00

dec_label_pc_8d00:                                ; preds = %dec_label_pc_8cf8
  store i32 0, i32* @sb, align 4
  store i32 0, i32* @fp, align 4
  %v3_8dac = udiv i32 %v3_8c60, 256
  %v1_8da8 = mul i32 %v6_8c58, 256
  %v4_8db0 = and i32 %v1_8da8, 65280
  %v5_8db0 = or i32 %v4_8db0, %v3_8dac
  %v2_8d30 = ptrtoint i32* %stack_var_-56 to i32
  br label %dec_label_pc_8d90

dec_label_pc_8d10:                                ; preds = %bb51, %dec_label_pc_8dd0
  %v3_8d1c = call i32 @function_12b7c(i32 2, i32 2, i32 0)
  %v7_8d24 = icmp eq i32 %v3_8d1c, -1
  %v0_8d28 = load i32, i32* @sb, align 4
  %v1_8d28 = add i32 %v0_8d28, 1
  store i32 %v1_8d28, i32* @sb, align 4
  %v0_8d2c = load i32, i32* @fp, align 4
  %v1_8d2c = add i32 %v0_8d2c, 24
  store i32 %v1_8d2c, i32* @fp, align 4
  %v2_8d38 = load i32, i32* @r8, align 4
  %v3_8d38 = add i32 %v2_8d38, %stack_var_-60.0
  %v4_8d38 = inttoptr i32 %v3_8d38 to i32*
  store i32 %v3_8d1c, i32* %v4_8d38, align 4
  br i1 %v7_8d24, label %dec_label_pc_8e2c, label %dec_label_pc_8d40

dec_label_pc_8d40:                                ; preds = %dec_label_pc_8d10
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 2, i32* %stack_var_-56, align 4
  %v3_8d58 = call i32 @function_1292c(i32 %v3_8d1c, i32 %v2_8d30, i32 16)
  %v0_8d5c = load i32, i32* @r6, align 4
  %v1_8d5c = add i32 %v0_8d5c, 20
  %v2_8d5c = inttoptr i32 %v1_8d5c to i8*
  %v3_8d5c = load i8, i8* %v2_8d5c, align 1
  %v4_8d5c = zext i8 %v3_8d5c to i32
  store i32 %v4_8d5c, i32* %r3.global-to-local, align 4
  %tmp = icmp ult i8 %v3_8d5c, 32
  br i1 %tmp, label %dec_label_pc_8de4, label %dec_label_pc_8d68

dec_label_pc_8d68:                                ; preds = %dec_label_pc_8d40, %dec_label_pc_8de4
  %v0_8d6c = phi i32 [ %v0_8d5c, %dec_label_pc_8d40 ], [ %v0_8d6c.pre, %dec_label_pc_8de4 ]
  %v1_8d70 = load i32, i32* @r8, align 4
  %v2_8d70 = add i32 %v1_8d70, %stack_var_-60.0
  %v3_8d70 = inttoptr i32 %v2_8d70 to i32*
  %v4_8d70 = load i32, i32* %v3_8d70, align 4
  %v3_8d78 = call i32 @function_12964(i32 %v4_8d70, i32 %v0_8d6c, i32 16)
  %v0_8d80 = load i32, i32* @sb, align 4
  %v1_8d80 = load i32, i32* @r7, align 4
  %v9_8d80 = icmp eq i32 %v0_8d80, %v1_8d80
  %v1_8d84 = add i32 %stack_var_-60.0, 4
  store i32 %v1_8d84, i32* %r3.global-to-local, align 4
  br i1 %v9_8d80, label %dec_label_pc_8e38, label %dec_label_pc_8d90

dec_label_pc_8d90:                                ; preds = %dec_label_pc_8d68, %dec_label_pc_8d00
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_8d00 ], [ %v1_8d84, %dec_label_pc_8d68 ]
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* @r4, align 4
  %v3_8da0 = call i32 @function_136e4(i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32 1)
  store i32 %v5_8db0, i32* %r3.global-to-local, align 4
  %v1_8dbc = load i32, i32* @r4, align 4
  %v9_8dbc = icmp eq i32 %v3_8c60, %v1_8dbc
  %v1_8dc0 = load i32, i32* @fp, align 4
  %v2_8dc0 = add i32 %v1_8dc0, %arg2
  store i32 %v2_8dc0, i32* @r6, align 4
  %v2_8dc4 = load i32, i32* @sl, align 4
  %v3_8dc4 = add i32 %v2_8dc4, %stack_var_-60.0
  %v4_8dc4 = inttoptr i32 %v3_8dc4 to i32*
  store i32 %v3_8da0, i32* %v4_8dc4, align 4
  br i1 %v9_8dbc, label %dec_label_pc_8dd0, label %bb51

bb51:                                             ; preds = %dec_label_pc_8d90
  %v1_8dc8 = load i32, i32* %r3.global-to-local, align 4
  %v2_8dc8 = trunc i32 %v1_8dc8 to i16
  %v3_8dc8 = load i32, i32* @r6, align 4
  %v4_8dc8 = add i32 %v3_8dc8, 2
  %v5_8dc8 = inttoptr i32 %v4_8dc8 to i16*
  store i16 %v2_8dc8, i16* %v5_8dc8, align 2
  br label %dec_label_pc_8d10

dec_label_pc_8dd0:                                ; preds = %dec_label_pc_8d90
  %v0_8dd0 = call i32 @function_df2c()
  %v1_8dd0 = trunc i32 %v0_8dd0 to i16
  %v0_8dd8 = load i32, i32* @fp, align 4
  %v2_8dd8 = add i32 %v0_8dd8, %arg2
  store i32 %v2_8dd8, i32* @r6, align 4
  %v4_8ddc = add i32 %v2_8dd8, 2
  %v5_8ddc = inttoptr i32 %v4_8ddc to i16*
  store i16 %v1_8dd0, i16* %v5_8ddc, align 2
  br label %dec_label_pc_8d10

dec_label_pc_8de4:                                ; preds = %dec_label_pc_8d40
  %v1_8de4 = add i32 %v0_8d5c, 16
  %v2_8de4 = inttoptr i32 %v1_8de4 to i32*
  %v3_8de4 = load i32, i32* %v2_8de4, align 4
  store i32 %v3_8de4, i32* %r4.global-to-local, align 4
  %v0_8de8 = call i32 @function_df2c()
  %v1_8df8 = and i32 %v3_8de4, 65280
  store i32 %v1_8df8, i32* %r3.global-to-local, align 4
  %v0_8e00 = load i32, i32* @r6, align 4
  %v1_8e00 = add i32 %v0_8e00, 20
  %v2_8e00 = inttoptr i32 %v1_8e00 to i8*
  %v3_8e00 = load i8, i8* %v2_8e00, align 1
  %v4_8e00 = zext i8 %v3_8e00 to i32
  %v5_8e04 = call i32 @llvm.bswap.i32(i32 %v3_8de4)
  %v7_8e08 = lshr i32 %v0_8de8, %v4_8e00
  %v8_8e08 = add i32 %v7_8e08, %v5_8e04
  %v5_8e20 = call i32 @llvm.bswap.i32(i32 %v8_8e08)
  store i32 %v5_8e20, i32* %r3.global-to-local, align 4
  %v2_8e24 = add i32 %v0_8e00, 4
  %v3_8e24 = inttoptr i32 %v2_8e24 to i32*
  store i32 %v5_8e20, i32* %v3_8e24, align 4
  %v0_8d6c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_8d68

dec_label_pc_8e2c:                                ; preds = %dec_label_pc_8d10
  store i32 %v3_8c0c, i32* %r4.global-to-local, align 4
  store i32 %v18_8c0c, i32* %sb.global-to-local, align 4
  ret i32 %v3_8d1c

dec_label_pc_8e38:                                ; preds = %dec_label_pc_8d68, %dec_label_pc_8cf8
  %v1_8e7822 = phi i32 [ 0, %dec_label_pc_8cf8 ], [ %v0_8d80, %dec_label_pc_8d68 ]
  %v2_8e3c = icmp eq i32 %v0_8cdc10, 0
  br i1 %v2_8e3c, label %dec_label_pc_8e5c.outer, label %dec_label_pc_8e74

dec_label_pc_8e4c:                                ; preds = %dec_label_pc_8e5c
  store i32 %v1_8e50, i32* %r4.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_8e4c = load i32, i32* @r8, align 4
  %v4_8e4c = mul i32 %v1_8e50, 4
  %v5_8e4c = add i32 %v0_8e4c, %v4_8e4c
  %v6_8e4c = inttoptr i32 %v5_8e4c to i32*
  %v7_8e4c = load i32, i32* %v6_8e4c, align 4
  %v0_8e50 = load i32, i32* @sl, align 4
  %v5_8e50 = add i32 %v0_8e50, %v4_8e4c
  %v6_8e50 = inttoptr i32 %v5_8e50 to i32*
  %v7_8e50 = load i32, i32* %v6_8e50, align 4
  %v4_8e54 = call i32 @function_12ac0(i32 %v7_8e4c, i32 %v7_8e50, i32 %v0_8e60, i32 16384)
  %v0_8e58 = load i32, i32* %r4.global-to-local, align 4
  %v1_8e58 = add i32 %v0_8e58, 1
  %v0_8e5c.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_8e5c.outer

dec_label_pc_8e5c.outer:                          ; preds = %dec_label_pc_8e38, %dec_label_pc_8e4c
  %v0_8e5c.ph = phi i32 [ %v0_8e5c.pre.pre, %dec_label_pc_8e4c ], [ %v1_8e7822, %dec_label_pc_8e38 ]
  %v1_8e50.ph = phi i32 [ %v1_8e58, %dec_label_pc_8e4c ], [ 0, %dec_label_pc_8e38 ]
  %v0_8e60 = load i32, i32* @r5, align 4
  br label %dec_label_pc_8e5c

dec_label_pc_8e5c:                                ; preds = %dec_label_pc_8e5c.outer, %dec_label_pc_8e5c
  %v1_8e50 = phi i32 [ 0, %dec_label_pc_8e5c ], [ %v1_8e50.ph, %dec_label_pc_8e5c.outer ]
  %v8_8e68 = icmp sgt i32 %v0_8e5c.ph, %v1_8e50
  br i1 %v8_8e68, label %dec_label_pc_8e4c, label %dec_label_pc_8e5c

dec_label_pc_8e74:                                ; preds = %dec_label_pc_8e78, %dec_label_pc_8e38
  %v1_8e7821 = phi i32 [ %v1_8e7822, %dec_label_pc_8e38 ], [ %v1_8e78, %dec_label_pc_8e78 ]
  br label %dec_label_pc_8e78

dec_label_pc_8e78:                                ; preds = %dec_label_pc_8e84, %dec_label_pc_8e74
  %v1_8e78 = phi i32 [ %v1_8e7821, %dec_label_pc_8e74 ], [ %v1_8e78.pre, %dec_label_pc_8e84 ]
  %v1_8e84 = phi i32 [ 0, %dec_label_pc_8e74 ], [ %v1_8ea4, %dec_label_pc_8e84 ]
  store i32 %v1_8e84, i32* @r6, align 4
  %v6_8e80 = icmp slt i32 %v1_8e84, %v1_8e78
  br i1 %v6_8e80, label %dec_label_pc_8e84, label %dec_label_pc_8e74

dec_label_pc_8e84:                                ; preds = %dec_label_pc_8e78
  %v0_8e7c = load i32, i32* @r5, align 4
  %v0_8e84 = load i32, i32* @sl, align 4
  %v4_8e84 = mul i32 %v1_8e84, 4
  %v5_8e84 = add i32 %v0_8e84, %v4_8e84
  %v6_8e84 = inttoptr i32 %v5_8e84 to i32*
  %v7_8e84 = load i32, i32* %v6_8e84, align 4
  store i32 %v7_8e84, i32* @r4, align 4
  %v2_8e8c = inttoptr i32 %v7_8e84 to i16*
  %v3_8e8c = call i32 @function_e0c0(i16* %v2_8e8c, i32 %v0_8e7c)
  %v0_8e90 = load i32, i32* @r8, align 4
  %v1_8e90 = load i32, i32* @r6, align 4
  %v4_8e90 = mul i32 %v1_8e90, 4
  %v5_8e90 = add i32 %v4_8e90, %v0_8e90
  %v6_8e90 = inttoptr i32 %v5_8e90 to i32*
  %v7_8e90 = load i32, i32* %v6_8e90, align 4
  %v0_8e94 = load i32, i32* @r4, align 4
  %v0_8e98 = load i32, i32* @r5, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_8ea0 = call i32 @function_12ac0(i32 %v7_8e90, i32 %v0_8e94, i32 %v0_8e98, i32 16384)
  %v0_8ea4 = load i32, i32* @r6, align 4
  %v1_8ea4 = add i32 %v0_8ea4, 1
  %v1_8e78.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_8e78

; uselistorder directives
  uselistorder i32 %v1_8e78, { 1, 0 }
  uselistorder i32 %v1_8e50, { 2, 1, 0 }
  uselistorder i32 %v5_8e20, { 1, 0 }
  uselistorder i32 %v3_8de4, { 1, 0, 2 }
  uselistorder i32 %stack_var_-60.0, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8d5c, { 1, 0, 2 }
  uselistorder i32 %v3_8d1c, { 1, 2, 3, 0 }
  uselistorder i32 %v3_8cb0, { 1, 0 }
  uselistorder i32 %v3_8c60, { 1, 0 }
  uselistorder i32* %stack_var_-56, { 1, 3, 0, 2 }
  uselistorder i32* %sb.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 13, 1, 14, 15, 5, 6, 2, 3, 4, 7, 8, 9, 10, 11, 12, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8e5c, { 1, 0 }
  uselistorder label %dec_label_pc_8e5c.outer, { 1, 0 }
  uselistorder label %dec_label_pc_8d68, { 1, 0 }
  uselistorder label %dec_label_pc_8d10, { 1, 0 }
  uselistorder label %dec_label_pc_8cf8, { 1, 0 }
}

define i32 @function_8eac(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8eac:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v18_8eac = load i32, i32* @sb, align 4
  %v27_8eac = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_8ec8 = call i32 @function_136e4(i32 %arg1, i32 4)
  %v0_8ecc = load i32, i32* @r5, align 4
  store i32 %v0_8ecc, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_8edc = load i32, i32* @r4, align 4
  store i32 %v0_8edc, i32* %r0.global-to-local, align 4
  %v5_8ee0 = inttoptr i32 %v0_8ecc to i32*
  %v6_8ee0 = call i32 @function_8570(i32 %v0_8edc, i32* %v5_8ee0, i32 2, i32 0)
  %v1_8eec = urem i32 %v6_8ee0, 256
  store i32 %v1_8eec, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_8ef8 = load i32, i32* @r5, align 4
  store i32 %v0_8ef8, i32* %r1.global-to-local, align 4
  %v0_8efc = load i32, i32* @r4, align 4
  store i32 %v0_8efc, i32* %r0.global-to-local, align 4
  %v5_8f00 = trunc i32 %v6_8ee0 to i8
  %v7_8f04 = inttoptr i32 %v0_8ef8 to i32*
  %v8_8f04 = call i32 @function_8570(i32 %v0_8efc, i32* %v7_8f04, i32 3, i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32))
  %v0_8f08 = load i32, i32* @r5, align 4
  store i32 %v0_8f08, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_8f18 = load i32, i32* @r4, align 4
  store i32 %v0_8f18, i32* %r0.global-to-local, align 4
  %v5_8f1c = inttoptr i32 %v0_8f08 to i32*
  %v6_8f1c = call i32 @function_8570(i32 %v0_8f18, i32* %v5_8f1c, i32 4, i32 64)
  %v1_8f24 = urem i32 %v6_8f1c, 256
  store i32 %v1_8f24, i32* %ip.global-to-local, align 4
  %v0_8f28 = load i32, i32* @r5, align 4
  store i32 %v0_8f28, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_8f34 = load i32, i32* @r4, align 4
  store i32 %v0_8f34, i32* %r0.global-to-local, align 4
  %v6_8f3c = inttoptr i32 %v0_8f28 to i32*
  %v7_8f3c = call i32 @function_8570(i32 %v0_8f34, i32* %v6_8f3c, i32 5, i32 0)
  %v1_8f48 = urem i32 %v7_8f3c, 256
  store i32 %v1_8f48, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_8f54 = load i32, i32* @r5, align 4
  store i32 %v0_8f54, i32* %r1.global-to-local, align 4
  %v0_8f58 = load i32, i32* @r4, align 4
  store i32 %v0_8f58, i32* %r0.global-to-local, align 4
  %v6_8f60 = inttoptr i32 %v0_8f54 to i32*
  %v7_8f60 = call i32 @function_8570(i32 %v0_8f58, i32* %v6_8f60, i32 6, i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32))
  %v0_8f68 = load i32, i32* @r5, align 4
  store i32 %v0_8f68, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v7_8f60, i32* %sb.global-to-local, align 4
  %v0_8f78 = load i32, i32* @r4, align 4
  store i32 %v0_8f78, i32* %r0.global-to-local, align 4
  %v5_8f7c = inttoptr i32 %v0_8f68 to i32*
  %v6_8f7c = call i32 @function_8570(i32 %v0_8f78, i32* %v5_8f7c, i32 7, i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32))
  %v0_8f80 = load i32, i32* @r5, align 4
  store i32 %v0_8f80, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v6_8f7c, i32* @sl, align 4
  %v0_8f90 = load i32, i32* @r4, align 4
  store i32 %v0_8f90, i32* %r0.global-to-local, align 4
  %v4_8f94 = inttoptr i32 %v0_8f80 to i32*
  %v5_8f94 = call i32 @function_8570(i32 %v0_8f90, i32* %v4_8f94, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_8fa0 = load i32, i32* @r5, align 4
  store i32 %v0_8fa0, i32* %r1.global-to-local, align 4
  store i32 %v5_8f94, i32* @r6, align 4
  %v0_8fa8 = load i32, i32* @r4, align 4
  store i32 %v0_8fa8, i32* %r0.global-to-local, align 4
  %v4_8fac = inttoptr i32 %v0_8fa0 to i32*
  %v5_8fac = call i32 @function_8570(i32 %v0_8fa8, i32* %v4_8fac, i32 1, i32 1)
  %v2_8fb8 = load i32, i32* @global_var_1a2d4.47, align 4
  store i32 %v2_8fb8, i32* %r3.global-to-local, align 4
  %v1_8fbc = urem i32 %v5_8fac, 256
  store i32 %v1_8fbc, i32* %ip.global-to-local, align 4
  %v0_8fc0 = load i32, i32* @r5, align 4
  store i32 %v0_8fc0, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_8fc8 = load i32, i32* @r4, align 4
  store i32 %v0_8fc8, i32* %r0.global-to-local, align 4
  %v5_8fd0 = inttoptr i32 %v0_8fc0 to i32*
  %v6_8fd0 = call i32 @function_8570(i32 %v0_8fc8, i32* %v5_8fd0, i32 25, i32 %v2_8fb8)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_8fe4 = call i32 @function_12b7c(i32 2, i32 3, i32 17)
  store i32 %v3_8fe4, i32* %r0.global-to-local, align 4
  %v7_8fe8 = icmp eq i32 %v3_8fe4, -1
  store i1 %v7_8fe8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_8fe4, i32* @fp, align 4
  br i1 %v7_8fe8, label %dec_label_pc_9388, label %dec_label_pc_8ff4

dec_label_pc_8ff4:                                ; preds = %dec_label_pc_8eac
  store i32 1, i32* %stack_var_-44, align 4
  %v6_8ffc = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_8ffc, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_9010 = call i32 @function_12b38(i32 %v3_8fe4, i32 0, i32 3, i32 %v6_8ffc, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_9010, i32* %r0.global-to-local, align 4
  %v7_9014 = icmp eq i32 %v5_9010, -1
  store i1 %v7_9014, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9014, label %dec_label_pc_9380, label %dec_label_pc_901c

dec_label_pc_901c:                                ; preds = %dec_label_pc_8ff4
  %v0_901c = load i32, i32* @r6, align 4
  store i32 1460, i32* %r3.global-to-local, align 4
  %v3_9028 = urem i32 %v0_901c, 65536
  store i32 %v3_9028, i32* %r2.global-to-local, align 4
  %v3_902c = icmp ugt i32 %v3_9028, 1459
  %v9_902c = icmp eq i32 %v3_9028, 1460
  store i1 %v9_902c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_902c, label %bb, label %bb48

bb:                                               ; preds = %dec_label_pc_901c
  store i32 1460, i32* %r2.global-to-local, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_901c, %bb
  %v0_9088 = phi i32 [ %v3_9028, %dec_label_pc_901c ], [ 1460, %bb ]
  store i32 %v8_8f04, i32* %r0.global-to-local, align 4
  %v0_9038 = load i32, i32* %sb.global-to-local, align 4
  %v3_9040 = urem i32 %v0_9038, 65536
  store i32 %v3_9040, i32* %ip.global-to-local, align 4
  %v0_9044 = load i32, i32* @r7, align 4
  %v2_9044 = icmp eq i32 %v0_9044, 0
  store i1 %v2_9044, i1* %cpsr_z.global-to-local, align 1
  %v0_9048 = load i32, i32* @sl, align 4
  %v3_9048 = mul i32 %v0_9048, 65536
  br i1 %v2_9044, label %bb49, label %bb50

bb49:                                             ; preds = %bb48
  store i32 %v0_9088, i32* %ip.global-to-local, align 4
  br label %bb50

bb50:                                             ; preds = %bb48, %bb49
  %v1_9078 = phi i32 [ %v3_9040, %bb48 ], [ %v0_9088, %bb49 ]
  %v3_9058 = urem i32 %v0_9048, 65536
  store i32 %v3_9058, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_9060 = urem i32 %v8_8f04, 65536
  store i32 %v3_9060, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_9044, label %.thread, label %dec_label_pc_9080

.thread:                                          ; preds = %bb50
  %v2_9074 = add nsw i32 %v1_9078, 28
  store i32 %v2_9074, i32* @sb, align 4
  %v2_9078 = add nsw i32 %v1_9078, 8
  store i32 %v2_9078, i32* @sl, align 4
  br label %dec_label_pc_91a4.preheader

dec_label_pc_9080:                                ; preds = %bb50
  %v1_9088 = add nuw nsw i32 %v0_9088, 28
  store i32 %v1_9088, i32* @sb, align 4
  %v1_908c = add nuw nsw i32 %v0_9088, 8
  store i32 %v1_908c, i32* @sl, align 4
  %tmp51 = mul i32 %v0_9038, 256
  %v3_90a0 = and i32 %tmp51, 65280
  %tmp52 = udiv i32 %v0_9038, 256
  %v4_90b0 = urem i32 %tmp52, 256
  %v5_90b0 = or i32 %v4_90b0, %v3_90a0
  store i32 %v5_90b0, i32* @r6, align 4
  store i32 %v3_9048, i32* %r1.global-to-local, align 4
  %tmp53 = mul nuw nsw i32 %v1_9088, 256
  %v3_90bc = and i32 %tmp53, 65280
  store i32 %v3_90bc, i32* %r3.global-to-local, align 4
  %tmp54 = mul i32 %v0_9048, 256
  %v3_90c0 = and i32 %tmp54, 65280
  %tmp55 = mul nuw nsw i32 %v1_908c, 256
  %v3_90c4 = and i32 %tmp55, 65280
  store i32 %v3_90c4, i32* %ip.global-to-local, align 4
  %tmp56 = udiv i32 %v1_9088, 256
  %v4_90c8 = urem i32 %tmp56, 256
  %v5_90c8 = or i32 %v4_90c8, %v3_90bc
  store i32 %v5_90c8, i32* @lr, align 4
  %tmp57 = udiv i32 %v0_9048, 256
  %v4_90cc = urem i32 %tmp57, 256
  %v5_90cc = or i32 %v4_90cc, %v3_90c0
  store i32 %v5_90cc, i32* %r0.global-to-local, align 4
  %trunc = trunc i32 %v1_908c to i16
  %rev = call i16 @llvm.bswap.i16(i16 %trunc)
  %tmp58 = mul i32 %v8_8f04, 256
  %v3_90d4 = and i32 %tmp58, 65280
  store i32 %v3_90d4, i32* %r2.global-to-local, align 4
  %tmp59 = udiv i32 %v8_8f04, 256
  %v4_90e4 = urem i32 %tmp59, 256
  %v5_90e4 = or i32 %v4_90e4, %v3_90d4
  store i32 %v5_90e4, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  %v4_913c = sext i8 %v5_8f00 to i32
  %sext6 = mul nuw i32 %v5_90c8, 65536
  %v4_9158 = sdiv i32 %sext6, 65536
  %sext7 = mul nuw i32 %v5_90cc, 65536
  %v7_918c = sdiv i32 %sext7, 65536
  %v1_914c = trunc i32 %v6_8f1c to i8
  %v3_918c = sext i16 %rev to i32
  br label %dec_label_pc_90ec

dec_label_pc_90ec:                                ; preds = %.thread9, %dec_label_pc_9080
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_90f8 = call i32 @function_136e4(i32 1510, i32 1)
  store i32 %v2_90f8, i32* %r0.global-to-local, align 4
  store i32 %v2_8ec8, i32* %r3.global-to-local, align 4
  %v3_9100 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9100, i32* %r1.global-to-local, align 4
  %v2_9104 = load i32, i32* @r4, align 4
  %v5_9104 = mul i32 %v2_9104, 4
  %v6_9104 = add i32 %v5_9104, %v2_8ec8
  %v7_9104 = inttoptr i32 %v6_9104 to i32*
  store i32 %v2_90f8, i32* %v7_9104, align 4
  %v0_9108 = load i32, i32* %r3.global-to-local, align 4
  %v1_9108 = load i32, i32* %r1.global-to-local, align 4
  %v4_9108 = mul i32 %v1_9108, 4
  %v5_9108 = add i32 %v4_9108, %v0_9108
  %v6_9108 = inttoptr i32 %v5_9108 to i32*
  %v7_9108 = load i32, i32* %v6_9108, align 4
  store i32 %v7_9108, i32* %r0.global-to-local, align 4
  %v1_910c = inttoptr i32 %v7_9108 to i8*
  %v2_910c = load i8, i8* %v1_910c, align 1
  %tmp = urem i8 %v2_910c, 16
  %v1_9110 = zext i8 %tmp to i32
  %v1_9114 = or i32 %v1_9110, 64
  store i32 %v1_9114, i32* %r3.global-to-local, align 4
  %v1_9118 = trunc i32 %v1_9114 to i8
  store i8 %v1_9118, i8* %v1_910c, align 1
  %v0_911c = load i32, i32* %r0.global-to-local, align 4
  %v1_911c = inttoptr i32 %v0_911c to i8*
  %v2_911c = load i8, i8* %v1_911c, align 1
  %v1_9120 = and i8 %v2_911c, -16
  %v1_9124 = or i8 %v1_9120, 5
  store i32 %v1_8f48, i32* %ip.global-to-local, align 4
  %v0_912c = load i32, i32* %r1.global-to-local, align 4
  %v3_912c = mul i32 %v0_912c, 32
  store i32 %v3_912c, i32* %r2.global-to-local, align 4
  store i8 %v1_9124, i8* %v1_911c, align 1
  %v0_9134 = load i32, i32* %r1.global-to-local, align 4
  %v1_9134 = add i32 %v0_9134, 1
  store i32 %v1_9134, i32* @r4, align 4
  %v0_9138 = load i32, i32* %r2.global-to-local, align 4
  %tmp61 = mul i32 %v0_9134, -8
  %v5_9138 = add i32 %v0_9138, %tmp61
  store i32 %v5_9138, i32* %r2.global-to-local, align 4
  store i32 %v4_913c, i32* %r1.global-to-local, align 4
  %v2_9140 = load i32, i32* %r0.global-to-local, align 4
  %v3_9140 = add i32 %v2_9140, 1
  %v4_9140 = inttoptr i32 %v3_9140 to i8*
  store i8 %v5_8f00, i8* %v4_9140, align 1
  store i32 %v1_8f24, i32* %r3.global-to-local, align 4
  %v0_9148 = load i32, i32* %ip.global-to-local, align 4
  %v2_9148 = icmp eq i32 %v0_9148, 0
  store i1 %v2_9148, i1* %cpsr_z.global-to-local, align 1
  %v2_914c = load i32, i32* %r0.global-to-local, align 4
  %v3_914c = add i32 %v2_914c, 8
  %v4_914c = inttoptr i32 %v3_914c to i8*
  store i8 %v1_914c, i8* %v4_914c, align 1
  %v0_9150 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9150, label %.thread9, label %bb60

bb60:                                             ; preds = %dec_label_pc_90ec
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_9154 = load i32, i32* %r0.global-to-local, align 4
  %v4_9154 = add i32 %v3_9154, 6
  %v5_9154 = inttoptr i32 %v4_9154 to i16*
  store i16 64, i16* %v5_9154, align 2
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_90ec, %bb60
  store i32 %v4_9158, i32* %ip.global-to-local, align 4
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_9160 = load i32, i32* %r0.global-to-local, align 4
  %v3_9160 = add i32 %v2_9160, 9
  %v4_9160 = inttoptr i32 %v3_9160 to i8*
  store i8 17, i8* %v4_9160, align 1
  %v0_9164 = load i32, i32* %ip.global-to-local, align 4
  %v1_9164 = trunc i32 %v0_9164 to i16
  %v2_9164 = load i32, i32* %r0.global-to-local, align 4
  %v3_9164 = add i32 %v2_9164, 2
  %v4_9164 = inttoptr i32 %v3_9164 to i16*
  store i16 %v1_9164, i16* %v4_9164, align 2
  store i32 %v6_8fd0, i32* %ip.global-to-local, align 4
  %v1_916c = load i32, i32* %r0.global-to-local, align 4
  %v2_916c = add i32 %v1_916c, 12
  %v3_916c = inttoptr i32 %v2_916c to i32*
  store i32 %v6_8fd0, i32* %v3_916c, align 4
  %v0_9170 = load i32, i32* %r2.global-to-local, align 4
  %v1_9170 = load i32, i32* @r8, align 4
  %v2_9170 = add i32 %v1_9170, %v0_9170
  store i32 %v2_9170, i32* %r2.global-to-local, align 4
  %v1_9174 = add i32 %v2_9170, 16
  %v2_9174 = inttoptr i32 %v1_9174 to i32*
  %v3_9174 = load i32, i32* %v2_9174, align 4
  store i32 %v3_9174, i32* %r3.global-to-local, align 4
  %v0_9178 = load i32, i32* @r5, align 4
  %v1_9178 = trunc i32 %v0_9178 to i16
  %v2_9178 = load i32, i32* %r0.global-to-local, align 4
  %v3_9178 = add i32 %v2_9178, 4
  %v4_9178 = inttoptr i32 %v3_9178 to i16*
  store i16 %v1_9178, i16* %v4_9178, align 2
  %v0_917c = load i32, i32* %r0.global-to-local, align 4
  %v1_917c = add i32 %v0_917c, 20
  store i32 %v1_917c, i32* %r1.global-to-local, align 4
  %v0_9180 = load i32, i32* %r3.global-to-local, align 4
  %v2_9180 = add i32 %v0_917c, 16
  %v3_9180 = inttoptr i32 %v2_9180 to i32*
  store i32 %v0_9180, i32* %v3_9180, align 4
  %v0_9184 = load i32, i32* @r6, align 4
  %v1_9184 = trunc i32 %v0_9184 to i16
  %v2_9184 = load i32, i32* %r0.global-to-local, align 4
  %v3_9184 = add i32 %v2_9184, 20
  %v4_9184 = inttoptr i32 %v3_9184 to i16*
  store i16 %v1_9184, i16* %v4_9184, align 2
  store i32 %v3_918c, i32* %r0.global-to-local, align 4
  store i32 %v7_918c, i32* %r3.global-to-local, align 4
  %v0_9190 = load i32, i32* @r4, align 4
  %v1_9190 = load i32, i32* @r7, align 4
  %v9_9190 = icmp eq i32 %v0_9190, %v1_9190
  store i1 %v9_9190, i1* %cpsr_z.global-to-local, align 1
  %v2_9194 = load i32, i32* %r1.global-to-local, align 4
  %v3_9194 = add i32 %v2_9194, 4
  %v4_9194 = inttoptr i32 %v3_9194 to i16*
  store i16 %rev, i16* %v4_9194, align 2
  %v0_9198 = load i32, i32* %r3.global-to-local, align 4
  %v1_9198 = trunc i32 %v0_9198 to i16
  %v2_9198 = load i32, i32* %r1.global-to-local, align 4
  %v3_9198 = add i32 %v2_9198, 2
  %v4_9198 = inttoptr i32 %v3_9198 to i16*
  store i16 %v1_9198, i16* %v4_9198, align 2
  %v0_919c = load i32, i32* @r4, align 4
  store i32 %v0_919c, i32* %stack_var_-44, align 4
  %v5_91a0 = icmp slt i32 %v0_9190, %v1_9190
  br i1 %v5_91a0, label %dec_label_pc_90ec, label %dec_label_pc_91a4.preheader.loopexit

dec_label_pc_91a4.preheader.loopexit:             ; preds = %.thread9
  %v0_91a8.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_91a4.preheader

dec_label_pc_91a4.preheader:                      ; preds = %.thread, %dec_label_pc_91a4.preheader.loopexit
  %v0_91a8.pre = phi i32 [ %v0_91a8.pre.pre, %dec_label_pc_91a4.preheader.loopexit ], [ 0, %.thread ]
  %v3_9310 = icmp eq i32 %v6_8fd0, -1
  %v8_9310 = icmp eq i32 %v6_8fd0, -1
  %v9_9328 = icmp eq i32 %v3_9060, ptrtoint ([3 x i8]* @global_var_ffff.45 to i32)
  %v2_9364 = icmp eq i32 %v1_8fbc, 0
  br label %dec_label_pc_91a4

dec_label_pc_91a4:                                ; preds = %dec_label_pc_91a4, %dec_label_pc_92a4, %dec_label_pc_91a4.preheader
  %v0_91a8 = phi i32 [ %v0_91a8.pre, %dec_label_pc_91a4.preheader ], [ 0, %dec_label_pc_92a4 ], [ 0, %dec_label_pc_91a4 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_91a8 = icmp eq i32 %v0_91a8, 0
  store i1 %v2_91a8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_91a8, label %dec_label_pc_91a4, label %dec_label_pc_91b4

dec_label_pc_91b4:                                ; preds = %dec_label_pc_91a4, %dec_label_pc_92a4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_91b8

dec_label_pc_91b8:                                ; preds = %dec_label_pc_9220, %dec_label_pc_91b4
  %v1_91cc = phi i32 [ %v1_9294, %dec_label_pc_9220 ], [ 0, %dec_label_pc_91b4 ]
  %v5_91bc = mul i32 %v1_91cc, 24
  %v1_91c0 = load i32, i32* @r8, align 4
  %v2_91c0 = add i32 %v1_91c0, %v5_91bc
  store i32 %v2_91c0, i32* %r3.global-to-local, align 4
  store i32 %v2_8ec8, i32* %r1.global-to-local, align 4
  %v1_91c8 = add i32 %v2_91c0, 20
  %v2_91c8 = inttoptr i32 %v1_91c8 to i8*
  %v3_91c8 = load i8, i8* %v2_91c8, align 1
  %v4_91c8 = zext i8 %v3_91c8 to i32
  store i32 %v4_91c8, i32* %r2.global-to-local, align 4
  %v4_91cc = mul i32 %v1_91cc, 4
  %v5_91cc = add i32 %v4_91cc, %v2_8ec8
  %v6_91cc = inttoptr i32 %v5_91cc to i32*
  %v7_91cc = load i32, i32* %v6_91cc, align 4
  store i32 %v7_91cc, i32* @r5, align 4
  %v7_91d0 = icmp eq i8 %v3_91c8, 31
  store i1 %v7_91d0, i1* %cpsr_z.global-to-local, align 1
  %v1_91d4 = add i32 %v7_91cc, 20
  store i32 %v1_91d4, i32* @r6, align 4
  %tmp62 = icmp ult i8 %v3_91c8, 32
  br i1 %tmp62, label %dec_label_pc_92b8, label %dec_label_pc_91dc

dec_label_pc_91dc:                                ; preds = %dec_label_pc_91b8
  store i32 %v6_8fd0, i32* %r3.global-to-local, align 4
  store i1 %v8_9310, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_9310, label %dec_label_pc_9318, label %dec_label_pc_91e8

dec_label_pc_91e8:                                ; preds = %dec_label_pc_92b8, %dec_label_pc_91dc
  store i32 %v3_9060, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* @r4, align 4
  store i1 %v9_9328, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9328, label %dec_label_pc_9334, label %dec_label_pc_91fc

dec_label_pc_91fc:                                ; preds = %dec_label_pc_9318.dec_label_pc_91fc_crit_edge, %dec_label_pc_91e8
  %v1_9200 = phi i32 [ %v1_9200.pre, %dec_label_pc_9318.dec_label_pc_91fc_crit_edge ], [ ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), %dec_label_pc_91e8 ]
  store i32 %v3_9040, i32* %r0.global-to-local, align 4
  %v9_9200 = icmp eq i32 %v3_9040, %v1_9200
  store i1 %v9_9200, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9200, label %dec_label_pc_9348, label %dec_label_pc_9208

dec_label_pc_9208:                                ; preds = %dec_label_pc_9334, %dec_label_pc_91fc
  %v1_920c = phi i32 [ %v1_9340, %dec_label_pc_9334 ], [ %v1_9200, %dec_label_pc_91fc ]
  store i32 %v3_9058, i32* %r1.global-to-local, align 4
  %v9_920c = icmp eq i32 %v3_9058, %v1_920c
  store i1 %v9_920c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_920c, label %dec_label_pc_935c, label %dec_label_pc_9214

dec_label_pc_9214:                                ; preds = %dec_label_pc_9348, %dec_label_pc_9208
  store i32 %v1_8fbc, i32* %r3.global-to-local, align 4
  store i1 %v2_9364, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9364, label %dec_label_pc_9220, label %dec_label_pc_9370

dec_label_pc_9220:                                ; preds = %dec_label_pc_9214, %dec_label_pc_935c, %dec_label_pc_9370
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_9224 = load i32, i32* @r5, align 4
  %v3_9224 = add i32 %v2_9224, 10
  %v4_9224 = inttoptr i32 %v3_9224 to i16*
  store i16 0, i16* %v4_9224, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_922c = load i32, i32* @r5, align 4
  store i32 %v0_922c, i32* @r0, align 4
  %v2_9230 = call i32 @function_c848(i32 %v0_922c, i32 20)
  %v3_9230 = trunc i32 %v2_9230 to i16
  %v3_9234 = load i32, i32* @r5, align 4
  %v4_9234 = add i32 %v3_9234, 10
  %v5_9234 = inttoptr i32 %v4_9234 to i16*
  store i16 %v3_9230, i16* %v5_9234, align 2
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_923c = load i32, i32* @r6, align 4
  %v3_923c = add i32 %v2_923c, 6
  %v4_923c = inttoptr i32 %v3_923c to i16*
  store i16 0, i16* %v4_923c, align 2
  %v0_9240 = load i32, i32* @r6, align 4
  store i32 %v0_9240, i32* @r1, align 4
  %v1_9244 = add i32 %v0_9240, 4
  %v2_9244 = inttoptr i32 %v1_9244 to i16*
  %v3_9244 = load i16, i16* %v2_9244, align 2
  %v4_9244 = zext i16 %v3_9244 to i32
  store i32 %v4_9244, i32* %r2.global-to-local, align 4
  %v0_9248 = load i32, i32* @sl, align 4
  store i32 %v0_9248, i32* %r3.global-to-local, align 4
  %v0_924c = load i32, i32* @r5, align 4
  store i32 %v0_924c, i32* %r0.global-to-local, align 4
  %v4_9250 = call i32 @function_c898(i32 %v0_924c, i32 %v0_9240, i32 %v4_9244, i32 %v0_9248)
  %v5_9250 = trunc i32 %v4_9250 to i16
  store i32 %v4_9250, i32* %r0.global-to-local, align 4
  %v3_9254 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9254, i32* %r3.global-to-local, align 4
  %v3_9258 = mul i32 %v3_9254, 32
  store i32 %v3_9258, i32* %lr.global-to-local, align 4
  %v3_925c = load i32, i32* @r6, align 4
  %v4_925c = add i32 %v3_925c, 6
  %v5_925c = inttoptr i32 %v4_925c to i16*
  store i16 %v5_9250, i16* %v5_925c, align 2
  %v0_9260 = load i32, i32* %lr.global-to-local, align 4
  %v1_9260 = load i32, i32* %r3.global-to-local, align 4
  %tmp63 = mul i32 %v1_9260, -8
  %v5_9260 = add i32 %v0_9260, %tmp63
  store i32 %v5_9260, i32* %lr.global-to-local, align 4
  %v0_9264 = load i32, i32* @r6, align 4
  %v1_9264 = add i32 %v0_9264, 2
  %v2_9264 = inttoptr i32 %v1_9264 to i16*
  %v3_9264 = load i16, i16* %v2_9264, align 2
  %v1_9268 = load i32, i32* @r8, align 4
  %v2_9268 = add i32 %v1_9268, %v5_9260
  store i32 %v2_9268, i32* @lr, align 4
  %v3_926c = add i32 %v2_9268, 2
  %v4_926c = inttoptr i32 %v3_926c to i16*
  store i16 %v3_9264, i16* %v4_926c, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_9278 = load i32, i32* @r5, align 4
  store i32 %v0_9278, i32* %r1.global-to-local, align 4
  %v0_927c = load i32, i32* @fp, align 4
  store i32 %v0_927c, i32* %r0.global-to-local, align 4
  %v0_9280 = load i32, i32* @sb, align 4
  store i32 %v0_9280, i32* %r2.global-to-local, align 4
  %v0_9284 = load i32, i32* @lr, align 4
  %v6_928c = call i32 @function_12af8(i32 %v0_927c, i32 %v0_9278, i32 %v0_9280, i32 16384, i32 %v0_9284, i32 16)
  %v3_9290 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9290, i32* %r3.global-to-local, align 4
  %v1_9294 = add i32 %v3_9290, 1
  store i32 %v1_9294, i32* %r0.global-to-local, align 4
  %v1_9298 = load i32, i32* @r7, align 4
  %v9_9298 = icmp eq i32 %v1_9294, %v1_9298
  store i1 %v9_9298, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_9294, i32* %stack_var_-44, align 4
  %v5_92a0 = icmp slt i32 %v1_9294, %v1_9298
  br i1 %v5_92a0, label %dec_label_pc_91b8, label %dec_label_pc_92a4

dec_label_pc_92a4:                                ; preds = %dec_label_pc_9220
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_92a8 = icmp eq i32 %v1_9298, 0
  store i1 %v2_92a8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_92a8, label %dec_label_pc_91a4, label %dec_label_pc_91b4

dec_label_pc_92b8:                                ; preds = %dec_label_pc_91b8
  %v1_92b8 = add i32 %v2_91c0, 16
  %v2_92b8 = inttoptr i32 %v1_92b8 to i32*
  %v3_92b8 = load i32, i32* %v2_92b8, align 4
  %v0_92bc = call i32 @function_df2c()
  store i32 %v0_92bc, i32* %r0.global-to-local, align 4
  %v3_92c0 = load i32, i32* %stack_var_-44, align 4
  %v5_92c8 = mul i32 %v3_92c0, 24
  %v1_92cc = and i32 %v3_92b8, 16711680
  store i32 %v1_92cc, i32* %ip.global-to-local, align 4
  %v3_92d0 = udiv i32 %v3_92b8, 16777216
  %v4_92d4 = udiv i32 %v1_92cc, 256
  %v5_92d4 = or i32 %v4_92d4, %v3_92d0
  store i32 %v5_92d4, i32* %r2.global-to-local, align 4
  %v1_92d8 = load i32, i32* @r8, align 4
  %v2_92d8 = add i32 %v1_92d8, %v5_92c8
  store i32 %v2_92d8, i32* %r1.global-to-local, align 4
  %v1_92dc = and i32 %v3_92b8, 65280
  store i32 %v1_92dc, i32* %r3.global-to-local, align 4
  %v1_92e0 = add i32 %v2_92d8, 20
  %v2_92e0 = inttoptr i32 %v1_92e0 to i8*
  %v3_92e0 = load i8, i8* %v2_92e0, align 1
  %v4_92e0 = zext i8 %v3_92e0 to i32
  store i32 %v4_92e0, i32* %ip.global-to-local, align 4
  %v5_92e8 = call i32 @llvm.bswap.i32(i32 %v3_92b8)
  %v7_92ec = lshr i32 %v0_92bc, %v4_92e0
  %v8_92ec = add i32 %v7_92ec, %v5_92e8
  store i32 %v8_92ec, i32* %r2.global-to-local, align 4
  %v1_92f0 = and i32 %v8_92ec, 16711680
  store i32 %v1_92f0, i32* %r0.global-to-local, align 4
  %v1_92fc = and i32 %v8_92ec, 65280
  store i32 %v1_92fc, i32* %r1.global-to-local, align 4
  %v5_9304 = call i32 @llvm.bswap.i32(i32 %v8_92ec)
  %v1_9308 = load i32, i32* @r5, align 4
  %v2_9308 = add i32 %v1_9308, 16
  %v3_9308 = inttoptr i32 %v2_9308 to i32*
  store i32 %v5_9304, i32* %v3_9308, align 4
  store i32 %v6_8fd0, i32* %r3.global-to-local, align 4
  store i1 %v8_9310, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_9310, label %dec_label_pc_9318, label %dec_label_pc_91e8

dec_label_pc_9318:                                ; preds = %dec_label_pc_92b8, %dec_label_pc_91dc
  %v0_9318 = call i32 @function_df2c()
  store i32 %v0_9318, i32* %r0.global-to-local, align 4
  store i32 %v3_9060, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* @r4, align 4
  store i1 %v9_9328, i1* %cpsr_z.global-to-local, align 1
  %v1_932c = load i32, i32* @r5, align 4
  %v2_932c = add i32 %v1_932c, 12
  %v3_932c = inttoptr i32 %v2_932c to i32*
  store i32 %v0_9318, i32* %v3_932c, align 4
  br i1 %v9_9328, label %dec_label_pc_9334, label %dec_label_pc_9318.dec_label_pc_91fc_crit_edge

dec_label_pc_9318.dec_label_pc_91fc_crit_edge:    ; preds = %dec_label_pc_9318
  %v1_9200.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_91fc

dec_label_pc_9334:                                ; preds = %dec_label_pc_9318, %dec_label_pc_91e8
  %v0_9334 = call i32 @function_df2c()
  %v1_9334 = trunc i32 %v0_9334 to i16
  %v3_9338 = load i32, i32* @r5, align 4
  %v4_9338 = add i32 %v3_9338, 4
  %v5_9338 = inttoptr i32 %v4_9338 to i16*
  store i16 %v1_9334, i16* %v5_9338, align 2
  store i32 %v3_9040, i32* %r0.global-to-local, align 4
  %v1_9340 = load i32, i32* @r4, align 4
  %v9_9340 = icmp eq i32 %v3_9040, %v1_9340
  store i1 %v9_9340, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9340, label %dec_label_pc_9348, label %dec_label_pc_9208

dec_label_pc_9348:                                ; preds = %dec_label_pc_9334, %dec_label_pc_91fc
  %v0_9348 = call i32 @function_df2c()
  %v1_9348 = trunc i32 %v0_9348 to i16
  store i32 %v0_9348, i32* %r0.global-to-local, align 4
  store i32 %v3_9058, i32* %r1.global-to-local, align 4
  %v1_9350 = load i32, i32* @r4, align 4
  %v9_9350 = icmp eq i32 %v3_9058, %v1_9350
  store i1 %v9_9350, i1* %cpsr_z.global-to-local, align 1
  %v3_9354 = load i32, i32* @r5, align 4
  %v4_9354 = add i32 %v3_9354, 20
  %v5_9354 = inttoptr i32 %v4_9354 to i16*
  store i16 %v1_9348, i16* %v5_9354, align 2
  br i1 %v9_9350, label %dec_label_pc_935c, label %dec_label_pc_9214

dec_label_pc_935c:                                ; preds = %dec_label_pc_9348, %dec_label_pc_9208
  %v0_935c = call i32 @function_df2c()
  %v1_935c = trunc i32 %v0_935c to i16
  store i32 %v0_935c, i32* %r0.global-to-local, align 4
  store i32 %v1_8fbc, i32* %r3.global-to-local, align 4
  store i1 %v2_9364, i1* %cpsr_z.global-to-local, align 1
  %v3_9368 = load i32, i32* @r6, align 4
  %v4_9368 = add i32 %v3_9368, 2
  %v5_9368 = inttoptr i32 %v4_9368 to i16*
  store i16 %v1_935c, i16* %v5_9368, align 2
  br i1 %v2_9364, label %dec_label_pc_9220, label %dec_label_pc_9370

dec_label_pc_9370:                                ; preds = %dec_label_pc_9214, %dec_label_pc_935c
  %v0_9370 = load i32, i32* @r5, align 4
  %v1_9370 = add i32 %v0_9370, 28
  store i32 %v1_9370, i32* %r0.global-to-local, align 4
  store i32 %v0_9088, i32* %r1.global-to-local, align 4
  %v2_9378 = inttoptr i32 %v1_9370 to i16*
  %v3_9378 = call i32 @function_e0c0(i16* %v2_9378, i32 %v0_9088)
  store i32 %v3_9378, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9220

dec_label_pc_9380:                                ; preds = %dec_label_pc_8ff4
  %v0_9380 = load i32, i32* @fp, align 4
  store i32 %v0_9380, i32* %r0.global-to-local, align 4
  %v1_9384 = call i32 @function_1239c(i32 %v0_9380)
  store i32 %v1_9384, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9388

dec_label_pc_9388:                                ; preds = %dec_label_pc_8eac, %dec_label_pc_9380
  %v1_9390 = phi i32 [ %v3_8fe4, %dec_label_pc_8eac ], [ %v1_9384, %dec_label_pc_9380 ]
  store i32 %v18_8eac, i32* %sb.global-to-local, align 4
  store i32 %v27_8eac, i32* %lr.global-to-local, align 4
  ret i32 %v1_9390

; uselistorder directives
  uselistorder i32 %v0_935c, { 1, 0 }
  uselistorder i32 %v0_9348, { 1, 0 }
  uselistorder i32 %v1_9340, { 1, 0 }
  uselistorder i32 %v3_92b8, { 2, 1, 3, 0 }
  uselistorder i32 %v1_9294, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_9260, { 1, 0 }
  uselistorder i32 %v4_9250, { 1, 0 }
  uselistorder i1 %v2_9364, { 2, 3, 1, 0 }
  uselistorder i1 %v9_9328, { 2, 3, 1, 0 }
  uselistorder i32 %v3_90d4, { 1, 0 }
  uselistorder i16 %rev, { 1, 0 }
  uselistorder i32 %v3_90bc, { 1, 0 }
  uselistorder i32 %v1_908c, { 1, 0, 2 }
  uselistorder i32 %v1_9088, { 1, 0, 2 }
  uselistorder i32 %v3_9060, { 1, 0, 2, 3 }
  uselistorder i32 %v0_9048, { 1, 0, 2, 3 }
  uselistorder i32 %v3_9040, { 4, 3, 2, 1, 5, 0 }
  uselistorder i32 %v0_9038, { 1, 0, 2 }
  uselistorder i32 %v0_9088, { 4, 5, 1, 0, 2, 3 }
  uselistorder i32 %v3_9028, { 3, 1, 2, 0 }
  uselistorder i1 %v7_9014, { 1, 0 }
  uselistorder i1 %v7_8fe8, { 1, 0 }
  uselistorder i32 %v3_8fe4, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v6_8fd0, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32 %v1_8fbc, { 2, 1, 3, 0 }
  uselistorder i32 %v1_8f48, { 1, 0 }
  uselistorder i32 %v1_8f24, { 1, 0 }
  uselistorder i32 %v6_8f1c, { 1, 0 }
  uselistorder i32 %v8_8f04, { 1, 0, 2, 3 }
  uselistorder i8 %v5_8f00, { 1, 0 }
  uselistorder i32 %v6_8ee0, { 1, 0 }
  uselistorder i32 %v2_8ec8, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 25, 24, 26, 27, 29, 28, 31, 30, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 5, 4, 7, 8, 6, 10, 9, 12, 11, 13, 1, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 30, 31, 32, 33, 35, 37, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9388, { 1, 0 }
  uselistorder label %dec_label_pc_9370, { 1, 0 }
  uselistorder label %dec_label_pc_9220, { 2, 1, 0 }
  uselistorder label %dec_label_pc_91b4, { 1, 0 }
  uselistorder label %dec_label_pc_91a4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_91a4.preheader, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
}

define i32 @function_9398(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9398:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-54 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_9398 = load i32, i32* @r4, align 4
  %v6_9398 = load i32, i32* @r5, align 4
  %v24_9398 = load i32, i32* @fp, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @sl, align 4
  %v2_93b4 = call i32 @function_136e4(i32 %arg1, i32 4)
  %v0_93b8 = load i32, i32* @r5, align 4
  store i32 %v0_93b8, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_93c8 = load i32, i32* @r4, align 4
  store i32 %v0_93c8, i32* %r0.global-to-local, align 4
  %v5_93cc = inttoptr i32 %v0_93b8 to i32*
  %v6_93cc = call i32 @function_8570(i32 %v0_93c8, i32* %v5_93cc, i32 2, i32 0)
  %v1_93d8 = urem i32 %v6_93cc, 256
  store i32 %v1_93d8, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_93e4 = load i32, i32* @r5, align 4
  store i32 %v0_93e4, i32* %r1.global-to-local, align 4
  %v0_93e8 = load i32, i32* @r4, align 4
  store i32 %v0_93e8, i32* %r0.global-to-local, align 4
  %v5_93ec = trunc i32 %v6_93cc to i8
  %v7_93f0 = inttoptr i32 %v0_93e4 to i32*
  %v8_93f0 = call i32 @function_8570(i32 %v0_93e8, i32* %v7_93f0, i32 3, i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32))
  %v0_93f4 = load i32, i32* @r5, align 4
  store i32 %v0_93f4, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v8_93f0, i32* %fp.global-to-local, align 4
  %v0_9404 = load i32, i32* @r4, align 4
  store i32 %v0_9404, i32* %r0.global-to-local, align 4
  %v4_9408 = inttoptr i32 %v0_93f4 to i32*
  %v5_9408 = call i32 @function_8570(i32 %v0_9404, i32* %v4_9408, i32 4, i32 64)
  %v1_9410 = urem i32 %v5_9408, 256
  store i32 %v1_9410, i32* %ip.global-to-local, align 4
  %v0_9414 = load i32, i32* @r5, align 4
  store i32 %v0_9414, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9420 = load i32, i32* @r4, align 4
  store i32 %v0_9420, i32* %r0.global-to-local, align 4
  %v6_9428 = inttoptr i32 %v0_9414 to i32*
  %v7_9428 = call i32 @function_8570(i32 %v0_9420, i32* %v6_9428, i32 5, i32 1)
  %v1_9434 = urem i32 %v7_9428, 256
  store i32 %v1_9434, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_9440 = load i32, i32* @r5, align 4
  store i32 %v0_9440, i32* %r1.global-to-local, align 4
  %v0_9444 = load i32, i32* @r4, align 4
  store i32 %v0_9444, i32* %r0.global-to-local, align 4
  %v6_944c = inttoptr i32 %v0_9440 to i32*
  %v7_944c = call i32 @function_8570(i32 %v0_9444, i32* %v6_944c, i32 6, i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32))
  %v0_9454 = load i32, i32* @r5, align 4
  store i32 %v0_9454, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v7_944c, i32* @r8, align 4
  %v0_9464 = load i32, i32* @r4, align 4
  store i32 %v0_9464, i32* %r0.global-to-local, align 4
  %v5_9468 = inttoptr i32 %v0_9454 to i32*
  %v6_9468 = call i32 @function_8570(i32 %v0_9464, i32* %v5_9468, i32 7, i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32))
  %v0_946c = load i32, i32* @r5, align 4
  store i32 %v0_946c, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v6_9468, i32* @r7, align 4
  %v0_947c = load i32, i32* @r4, align 4
  store i32 %v0_947c, i32* %r0.global-to-local, align 4
  %v4_9480 = inttoptr i32 %v0_946c to i32*
  %v5_9480 = call i32 @function_8570(i32 %v0_947c, i32* %v4_9480, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9490 = load i32, i32* @r5, align 4
  store i32 %v0_9490, i32* %r1.global-to-local, align 4
  %v0_9494 = load i32, i32* @r4, align 4
  store i32 %v0_9494, i32* %r0.global-to-local, align 4
  %v4_9498 = inttoptr i32 %v0_9490 to i32*
  %v5_9498 = call i32 @function_8570(i32 %v0_9494, i32* %v4_9498, i32 1, i32 1)
  %v1_94a0 = urem i32 %v5_9498, 256
  store i32 %v1_94a0, i32* %ip.global-to-local, align 4
  %v0_94a4 = load i32, i32* @r5, align 4
  store i32 %v0_94a4, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_94b0 = load i32, i32* @r4, align 4
  store i32 %v0_94b0, i32* %r0.global-to-local, align 4
  %v5_94b8 = inttoptr i32 %v0_94a4 to i32*
  %v6_94b8 = call i32 @function_8570(i32 %v0_94b0, i32* %v5_94b8, i32 19, i32 0)
  %v0_94c0 = load i32, i32* @r5, align 4
  store i32 %v0_94c0, i32* %r1.global-to-local, align 4
  %v2_94c4 = load i32, i32* @global_var_1a2d4.47, align 4
  store i32 %v2_94c4, i32* %r3.global-to-local, align 4
  store i32 %v6_94b8, i32* @r6, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_94d0 = load i32, i32* @r4, align 4
  store i32 %v0_94d0, i32* %r0.global-to-local, align 4
  %v4_94d4 = inttoptr i32 %v0_94c0 to i32*
  %v5_94d4 = call i32 @function_8570(i32 %v0_94d0, i32* %v4_94d4, i32 25, i32 %v2_94c4)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_94e8 = call i32 @function_12b7c(i32 2, i32 3, i32 6)
  store i32 %v3_94e8, i32* %r0.global-to-local, align 4
  %v7_94ec = icmp eq i32 %v3_94e8, -1
  store i1 %v7_94ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_94ec, label %dec_label_pc_9a00, label %dec_label_pc_94f8

dec_label_pc_94f8:                                ; preds = %dec_label_pc_9398
  store i32 1, i32* %stack_var_-44, align 4
  %v6_9500 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_9500, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_9514 = call i32 @function_12b38(i32 %v3_94e8, i32 0, i32 3, i32 %v6_9500, i32 4)
  store i32 %v5_9514, i32* %r0.global-to-local, align 4
  %v7_9518 = icmp eq i32 %v5_9514, -1
  store i1 %v7_9518, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9518, label %dec_label_pc_99f8, label %dec_label_pc_9520

dec_label_pc_9520:                                ; preds = %dec_label_pc_94f8
  %v0_9520 = load i32, i32* @r8, align 4
  %v0_9524 = load i32, i32* @r7, align 4
  %v0_9528 = load i32, i32* %fp.global-to-local, align 4
  %v0_952c = load i32, i32* @r6, align 4
  %v1_952c = urem i32 %v0_952c, 256
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_9534 = urem i32 %v0_9520, 65536
  store i32 %v3_9534, i32* %r3.global-to-local, align 4
  %v3_9538 = urem i32 %v0_9524, 65536
  store i32 %v3_9538, i32* %r4.global-to-local, align 4
  %v0_953c = load i32, i32* @sl, align 4
  %v2_953c = icmp eq i32 %v0_953c, 0
  store i1 %v2_953c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  %v3_9554 = urem i32 %v0_9528, 65536
  store i32 %v3_9554, i32* @fp, align 4
  br i1 %v2_953c, label %dec_label_pc_9a0c, label %dec_label_pc_9564

dec_label_pc_9564:                                ; preds = %dec_label_pc_9520
  %v3_9524 = mul i32 %v0_9524, 65536
  %v3_9520 = mul i32 %v0_9520, 65536
  %v0_9528.not = or i32 %v0_9528, -65536
  %v1_9568 = xor i32 %v0_9528.not, 65535
  %v3_956c = mul i32 %v5_9480, 65536
  %v1_9570 = add i32 %v3_956c, 4325376
  %tmp73 = udiv i32 %v1_9570, 256
  %v3_9584 = and i32 %tmp73, 65280
  %tmp74 = mul nsw i32 %v1_9568, 256
  %v3_9588 = and i32 %tmp74, 65280
  store i32 %v3_9588, i32* %ip.global-to-local, align 4
  %v1_958c = add i32 %v3_956c, 524288
  %v1_9594 = add i32 %v3_956c, 1835008
  %tmp75 = udiv i32 %v1_9568, 256
  %v4_9598 = urem i32 %tmp75, 256
  %v5_9598 = or i32 %v4_9598, %v3_9588
  %v4_95a0 = udiv i32 %v1_9570, 16777216
  %v5_95a0 = or i32 %v3_9584, %v4_95a0
  store i32 %v5_95a0, i32* @r8, align 4
  %v3_95ac = udiv i32 %v1_9594, 256
  %tmp76 = mul i32 %v0_9528, 256
  %v3_95b0 = and i32 %tmp76, 65280
  store i32 %v3_9520, i32* %r2.global-to-local, align 4
  %tmp77 = udiv i32 %v0_9528, 256
  %v4_95c0 = urem i32 %tmp77, 256
  %v5_95c0 = or i32 %v4_95c0, %v3_95b0
  store i32 %v5_95c0, i32* %r0.global-to-local, align 4
  %tmp78 = mul i32 %v0_9520, 256
  %v3_95c4 = and i32 %tmp78, 65280
  %v1_95c8 = and i32 %v3_95ac, 65280
  store i32 %v1_95c8, i32* @r6, align 4
  store i32 %v3_9524, i32* %r1.global-to-local, align 4
  %tmp79 = mul i32 %v0_9524, 256
  %v3_95d4 = and i32 %tmp79, 65280
  %tmp80 = udiv i32 %v0_9520, 256
  %v4_95d8 = urem i32 %tmp80, 256
  %v5_95d8 = or i32 %v4_95d8, %v3_95c4
  store i32 %v5_95d8, i32* @lr, align 4
  %v4_95dc = udiv i32 %v1_9594, 16777216
  %v5_95dc = or i32 %v1_95c8, %v4_95dc
  store i32 %v5_95dc, i32* %r3.global-to-local, align 4
  %tmp81 = udiv i32 %v0_9524, 256
  %v4_95e0 = urem i32 %tmp81, 256
  %v5_95e0 = or i32 %v4_95e0, %v3_95d4
  %tmp82 = udiv i32 %v1_958c, 256
  %v3_95e4 = and i32 %tmp82, 65280
  store i32 %v3_95e4, i32* @r5, align 4
  %v5_95e8 = trunc i32 %v5_95c0 to i16
  %v5_95f0 = trunc i32 %v5_95dc to i16
  %v4_95f8 = udiv i32 %v1_958c, 16777216
  %v5_95f8 = or i32 %v3_95e4, %v4_95f8
  store i32 %v5_95f8, i32* @r7, align 4
  store i32 0, i32* @r4, align 4
  %v4_9654 = sext i8 %v5_93ec to i32
  %v1_9660 = trunc i32 %v5_9408 to i8
  %sext = mul nuw i32 %v5_9598, 65536
  %v4_96ec = sdiv i32 %sext, 65536
  %v2_9718 = icmp eq i32 %v1_952c, 0
  %sext8 = mul nuw i32 %v5_95d8, 65536
  %v4_9738 = sdiv i32 %sext8, 65536
  %sext9 = mul nuw i32 %v5_95e0, 65536
  %v4_9740 = sdiv i32 %sext9, 65536
  %v1_96f827 = trunc i32 %v4_96ec to i16
  br label %dec_label_pc_9600

dec_label_pc_9600:                                ; preds = %bb85, %dec_label_pc_9564
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_960c = call i32 @function_136e4(i32 1510, i32 4)
  store i32 %v2_960c, i32* %r0.global-to-local, align 4
  %v2_9614 = load i32, i32* @r4, align 4
  %v5_9614 = mul i32 %v2_9614, 4
  %v6_9614 = add i32 %v5_9614, %v2_93b4
  %v7_9614 = inttoptr i32 %v6_9614 to i32*
  store i32 %v2_960c, i32* %v7_9614, align 4
  %v3_9618 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9618, i32* %r2.global-to-local, align 4
  %v5_9620 = mul i32 %v3_9618, 24
  %v1_9624 = load i32, i32* @sb, align 4
  %v2_9624 = add i32 %v1_9624, %v5_9620
  store i32 %v2_9624, i32* @lr, align 4
  store i32 %v2_93b4, i32* %r3.global-to-local, align 4
  %v4_962c = mul i32 %v3_9618, 4
  %v5_962c = add i32 %v4_962c, %v2_93b4
  %v6_962c = inttoptr i32 %v5_962c to i32*
  %v7_962c = load i32, i32* %v6_962c, align 4
  store i32 %v7_962c, i32* %r4.global-to-local, align 4
  %v1_9630 = inttoptr i32 %v7_962c to i8*
  %v2_9630 = load i8, i8* %v1_9630, align 1
  %tmp = urem i8 %v2_9630, 16
  %v1_9634 = zext i8 %tmp to i32
  %v1_9638 = or i32 %v1_9634, 64
  store i32 %v1_9638, i32* %r3.global-to-local, align 4
  %v1_963c = trunc i32 %v1_9638 to i8
  store i8 %v1_963c, i8* %v1_9630, align 1
  %v0_9640 = load i32, i32* %r4.global-to-local, align 4
  %v1_9640 = inttoptr i32 %v0_9640 to i8*
  %v2_9640 = load i8, i8* %v1_9640, align 1
  %v1_9644 = and i8 %v2_9640, -16
  %v1_9648 = or i8 %v1_9644, 5
  store i32 %v1_9434, i32* %r5.global-to-local, align 4
  store i8 %v1_9648, i8* %v1_9640, align 1
  store i32 %v4_9654, i32* %r1.global-to-local, align 4
  %v2_9658 = load i32, i32* %r4.global-to-local, align 4
  %v3_9658 = add i32 %v2_9658, 1
  %v4_9658 = inttoptr i32 %v3_9658 to i8*
  store i8 %v5_93ec, i8* %v4_9658, align 1
  store i32 %v1_9410, i32* %r2.global-to-local, align 4
  %v2_9660 = load i32, i32* %r4.global-to-local, align 4
  %v3_9660 = add i32 %v2_9660, 8
  %v4_9660 = inttoptr i32 %v3_9660 to i8*
  store i8 %v1_9660, i8* %v4_9660, align 1
  %v2_9668 = load i32, i32* %r4.global-to-local, align 4
  %v3_9668 = add i32 %v2_9668, 4
  %v4_9668 = inttoptr i32 %v3_9668 to i16*
  store i16 %v5_95e8, i16* %v4_9668, align 2
  %v2_9670 = load i32, i32* %r4.global-to-local, align 4
  %v3_9670 = add i32 %v2_9670, 9
  %v4_9670 = inttoptr i32 %v3_9670 to i8*
  store i8 47, i8* %v4_9670, align 1
  store i32 %v5_94d4, i32* %r3.global-to-local, align 4
  %v0_9678 = load i32, i32* %r5.global-to-local, align 4
  %v2_9678 = icmp eq i32 %v0_9678, 0
  store i1 %v2_9678, i1* %cpsr_z.global-to-local, align 1
  %v1_967c = load i32, i32* %r4.global-to-local, align 4
  %v2_967c = add i32 %v1_967c, 12
  %v3_967c = inttoptr i32 %v2_967c to i32*
  store i32 %v5_94d4, i32* %v3_967c, align 4
  br i1 %v2_9678, label %.thread25, label %bb

bb:                                               ; preds = %dec_label_pc_9600
  store i32 64, i32* %r2.global-to-local, align 4
  %v3_9684 = load i32, i32* %r4.global-to-local, align 4
  %v4_9684 = add i32 %v3_9684, 6
  %v5_9684 = inttoptr i32 %v4_9684 to i16*
  store i16 64, i16* %v5_9684, align 2
  br label %.thread25

.thread25:                                        ; preds = %dec_label_pc_9600, %bb
  %v0_9688 = load i32, i32* @lr, align 4
  %v1_9688 = add i32 %v0_9688, 16
  %v2_9688 = inttoptr i32 %v1_9688 to i32*
  %v3_9688 = load i32, i32* %v2_9688, align 4
  store i32 22528, i32* %ip.global-to-local, align 4
  %v1_9690 = load i32, i32* %r4.global-to-local, align 4
  %v2_9690 = add i32 %v1_9690, 16
  %v3_9690 = inttoptr i32 %v2_9690 to i32*
  store i32 %v3_9688, i32* %v3_9690, align 4
  %v0_9694 = load i32, i32* %r4.global-to-local, align 4
  %v1_9694 = add i32 %v0_9694, 24
  store i32 %v1_9694, i32* %r1.global-to-local, align 4
  %v1_9698 = add i32 %v0_9694, 20
  store i32 %v1_9698, i32* %r0.global-to-local, align 4
  %v0_969c = load i32, i32* %ip.global-to-local, align 4
  %v1_969c = add i32 %v0_969c, 101
  store i32 %v1_969c, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v0_96a8 = load i32, i32* @r8, align 4
  %v1_96a8 = trunc i32 %v0_96a8 to i16
  %v3_96a8 = add i32 %v0_9694, 2
  %v4_96a8 = inttoptr i32 %v3_96a8 to i16*
  store i16 %v1_96a8, i16* %v4_96a8, align 2
  %v0_96ac = load i32, i32* %ip.global-to-local, align 4
  %v1_96ac = trunc i32 %v0_96ac to i16
  %v2_96ac = load i32, i32* %r0.global-to-local, align 4
  %v3_96ac = add i32 %v2_96ac, 2
  %v4_96ac = inttoptr i32 %v3_96ac to i16*
  store i16 %v1_96ac, i16* %v4_96ac, align 2
  %v0_96b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_96b0 = trunc i32 %v0_96b0 to i8
  %v2_96b0 = load i32, i32* %r1.global-to-local, align 4
  %v3_96b0 = add i32 %v2_96b0, 13
  %v4_96b0 = inttoptr i32 %v3_96b0 to i8*
  store i8 %v1_96b0, i8* %v4_96b0, align 1
  %v0_96b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_96b4 = trunc i32 %v0_96b4 to i8
  %v2_96b4 = load i32, i32* %r1.global-to-local, align 4
  %v3_96b4 = add i32 %v2_96b4, 12
  %v4_96b4 = inttoptr i32 %v3_96b4 to i8*
  store i8 %v1_96b4, i8* %v4_96b4, align 1
  %v0_96b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_96b8 = add i32 %v0_96b8, 38
  %v2_96b8 = inttoptr i32 %v1_96b8 to i8*
  %v3_96b8 = load i8, i8* %v2_96b8, align 1
  %tmp87 = urem i8 %v3_96b8, 16
  %v1_96bc = zext i8 %tmp87 to i32
  %v1_96c0 = or i32 %v1_96bc, 64
  store i32 %v1_96c0, i32* %r3.global-to-local, align 4
  %v1_96c4 = trunc i32 %v1_96c0 to i8
  store i8 %v1_96c4, i8* %v2_96b8, align 1
  %v0_96c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_96c8 = add i32 %v0_96c8, 38
  %v2_96c8 = inttoptr i32 %v1_96c8 to i8*
  %v3_96c8 = load i8, i8* %v2_96c8, align 1
  %v1_96cc = and i8 %v3_96c8, -16
  %v1_96d0 = or i8 %v1_96cc, 5
  store i8 %v1_96d0, i8* %v2_96c8, align 1
  %v0_96dc = load i32, i32* %r4.global-to-local, align 4
  %v1_96dc = add i32 %v0_96dc, 38
  store i32 %v1_96dc, i32* @r5, align 4
  %v3_96e0 = add i32 %v0_96dc, 39
  %v4_96e0 = inttoptr i32 %v3_96e0 to i8*
  store i8 %v5_93ec, i8* %v4_96e0, align 1
  store i32 %v5_95dc, i32* %r2.global-to-local, align 4
  %v2_96e8 = load i32, i32* @r5, align 4
  %v3_96e8 = add i32 %v2_96e8, 2
  %v4_96e8 = inttoptr i32 %v3_96e8 to i16*
  store i16 %v5_95f0, i16* %v4_96e8, align 2
  store i32 %v4_96ec, i32* %r3.global-to-local, align 4
  store i32 %v1_9410, i32* %r1.global-to-local, align 4
  %v0_96f4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_96f4, label %.thread26, label %bb83

.thread26:                                        ; preds = %.thread25
  %v2_96f828 = load i32, i32* @r5, align 4
  %v3_96f829 = add i32 %v2_96f828, 4
  %v4_96f830 = inttoptr i32 %v3_96f829 to i16*
  store i16 %v1_96f827, i16* %v4_96f830, align 2
  store i32 17, i32* %r3.global-to-local, align 4
  br label %bb84

bb83:                                             ; preds = %.thread25
  store i32 64, i32* %r2.global-to-local, align 4
  %v2_96f8 = load i32, i32* @r5, align 4
  %v3_96f8 = add i32 %v2_96f8, 4
  %v4_96f8 = inttoptr i32 %v3_96f8 to i16*
  store i16 %v1_96f827, i16* %v4_96f8, align 2
  store i32 17, i32* %r3.global-to-local, align 4
  %v1_9700 = load i32, i32* %r2.global-to-local, align 4
  %v2_9700 = trunc i32 %v1_9700 to i16
  %v3_9700 = load i32, i32* @r5, align 4
  %v4_9700 = add i32 %v3_9700, 6
  %v5_9700 = inttoptr i32 %v4_9700 to i16*
  store i16 %v2_9700, i16* %v5_9700, align 2
  br label %bb84

bb84:                                             ; preds = %.thread26, %bb83
  %v0_9704 = load i32, i32* %r1.global-to-local, align 4
  %v1_9704 = trunc i32 %v0_9704 to i8
  %v2_9704 = load i32, i32* @r5, align 4
  %v3_9704 = add i32 %v2_9704, 8
  %v4_9704 = inttoptr i32 %v3_9704 to i8*
  store i8 %v1_9704, i8* %v4_9704, align 1
  %v0_9708 = load i32, i32* %r3.global-to-local, align 4
  %v1_9708 = trunc i32 %v0_9708 to i8
  %v2_9708 = load i32, i32* @r5, align 4
  %v3_9708 = add i32 %v2_9708, 9
  %v4_9708 = inttoptr i32 %v3_9708 to i8*
  store i8 %v1_9708, i8* %v4_9708, align 1
  %v0_970c = call i32 @function_df2c()
  store i32 %v0_970c, i32* %r0.global-to-local, align 4
  store i32 %v1_952c, i32* %r1.global-to-local, align 4
  store i1 %v2_9718, i1* %cpsr_z.global-to-local, align 1
  %v1_971c = sub i32 1023, %v0_970c
  store i32 %v1_971c, i32* %r3.global-to-local, align 4
  br i1 %v2_9718, label %.thread, label %.thread10

.thread:                                          ; preds = %bb84
  %v2_9724 = load i32, i32* @r5, align 4
  %v3_9724 = add i32 %v2_9724, 16
  %v4_9724 = inttoptr i32 %v3_9724 to i32*
  store i32 %v1_971c, i32* %v4_9724, align 4
  br label %bb85

.thread10:                                        ; preds = %bb84
  %v1_9720 = load i32, i32* %r4.global-to-local, align 4
  %v2_9720 = add i32 %v1_9720, 16
  %v3_9720 = inttoptr i32 %v2_9720 to i32*
  %v4_9720 = load i32, i32* %v3_9720, align 4
  store i32 %v4_9720, i32* %r3.global-to-local, align 4
  %v2_9728 = load i32, i32* @r5, align 4
  %v3_9728 = add i32 %v2_9728, 16
  %v4_9728 = inttoptr i32 %v3_9728 to i32*
  store i32 %v4_9720, i32* %v4_9728, align 4
  br label %bb85

bb85:                                             ; preds = %.thread, %.thread10
  %v1_972c = load i32, i32* @r5, align 4
  %v2_972c = add i32 %v1_972c, 12
  %v3_972c = inttoptr i32 %v2_972c to i32*
  store i32 %v0_970c, i32* %v3_972c, align 4
  %v3_9730 = load i32, i32* %stack_var_-44, align 4
  %v0_9734 = load i32, i32* %r4.global-to-local, align 4
  %v1_9734 = add i32 %v0_9734, 58
  store i32 %v1_9734, i32* @r6, align 4
  store i32 %v4_9738, i32* %r2.global-to-local, align 4
  %v1_973c = add i32 %v3_9730, 1
  store i32 %v1_973c, i32* @r4, align 4
  store i32 %v4_9740, i32* %r3.global-to-local, align 4
  %v1_9744 = load i32, i32* @sl, align 4
  %v9_9744 = icmp eq i32 %v1_973c, %v1_9744
  store i1 %v9_9744, i1* %cpsr_z.global-to-local, align 1
  %v0_9748 = load i32, i32* @r7, align 4
  %v1_9748 = trunc i32 %v0_9748 to i16
  %v3_9748 = add i32 %v0_9734, 62
  %v4_9748 = inttoptr i32 %v3_9748 to i16*
  store i16 %v1_9748, i16* %v4_9748, align 2
  %v0_974c = load i32, i32* %r2.global-to-local, align 4
  %v1_974c = trunc i32 %v0_974c to i16
  %v2_974c = load i32, i32* @r6, align 4
  %v3_974c = inttoptr i32 %v2_974c to i16*
  store i16 %v1_974c, i16* %v3_974c, align 2
  %v0_9750 = load i32, i32* %r3.global-to-local, align 4
  %v1_9750 = trunc i32 %v0_9750 to i16
  %v2_9750 = load i32, i32* @r6, align 4
  %v3_9750 = add i32 %v2_9750, 2
  %v4_9750 = inttoptr i32 %v3_9750 to i16*
  store i16 %v1_9750, i16* %v4_9750, align 2
  %v0_9754 = load i32, i32* @r4, align 4
  store i32 %v0_9754, i32* %stack_var_-44, align 4
  %v5_9758 = icmp slt i32 %v1_973c, %v1_9744
  br i1 %v5_9758, label %dec_label_pc_9600, label %dec_label_pc_975c

dec_label_pc_975c:                                ; preds = %bb85
  %v1_9764 = add i32 %v5_9480, 8
  store i32 %v1_9764, i32* %r4.global-to-local, align 4
  %v1_9768 = add i32 %v5_9480, 66
  store i32 %v1_9768, i32* %r5.global-to-local, align 4
  %v0_9778.pre.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_9774.preheader

dec_label_pc_9774.preheader:                      ; preds = %dec_label_pc_975c, %dec_label_pc_9a0c
  %v0_9778.pre = phi i32 [ %v0_9778.pre.pre, %dec_label_pc_975c ], [ 0, %dec_label_pc_9a0c ]
  %stack_var_-132.0.ph = phi i32 [ %v1_9768, %dec_label_pc_975c ], [ %v1_9a18, %dec_label_pc_9a0c ]
  %stack_var_-136.0.ph = phi i32 [ %v1_9764, %dec_label_pc_975c ], [ %v1_9a14, %dec_label_pc_9a0c ]
  %v2_99c8 = icmp eq i32 %v1_952c, 0
  %v2_9810 = ptrtoint i32* %stack_var_-48 to i32
  %v2_9828 = ptrtoint i32* %stack_var_-52 to i32
  %v2_9838 = ptrtoint i32* %stack_var_-56 to i32
  %v2_9844 = ptrtoint i32* %stack_var_-54 to i32
  %v2_9858 = icmp eq i32 %v1_94a0, 0
  %v2_97b8 = icmp eq i32 %v5_94d4, -1
  %v7_97b8 = icmp eq i32 %v5_94d4, -1
  br label %dec_label_pc_9774

dec_label_pc_9774:                                ; preds = %dec_label_pc_9774, %dec_label_pc_9860, %dec_label_pc_9774.preheader
  %v0_9778 = phi i32 [ %v0_9778.pre, %dec_label_pc_9774.preheader ], [ 0, %dec_label_pc_9774 ], [ %v1_98fc, %dec_label_pc_9860 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_9778 = icmp eq i32 %v0_9778, 0
  store i1 %v2_9778, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_9778, label %dec_label_pc_9774, label %dec_label_pc_9784

dec_label_pc_9784:                                ; preds = %dec_label_pc_9774
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9788

dec_label_pc_9788:                                ; preds = %dec_label_pc_9860, %dec_label_pc_9784
  %v1_979c = phi i32 [ %v1_98f8, %dec_label_pc_9860 ], [ 0, %dec_label_pc_9784 ]
  %v5_978c = mul i32 %v1_979c, 24
  %v1_9790 = load i32, i32* @sb, align 4
  %v2_9790 = add i32 %v1_9790, %v5_978c
  store i32 %v2_9790, i32* %r3.global-to-local, align 4
  store i32 %v2_93b4, i32* %r4.global-to-local, align 4
  %v1_9798 = add i32 %v2_9790, 20
  %v2_9798 = inttoptr i32 %v1_9798 to i8*
  %v3_9798 = load i8, i8* %v2_9798, align 1
  %v4_9798 = zext i8 %v3_9798 to i32
  store i32 %v4_9798, i32* %r2.global-to-local, align 4
  %v4_979c = mul i32 %v1_979c, 4
  %v5_979c = add i32 %v4_979c, %v2_93b4
  %v6_979c = inttoptr i32 %v5_979c to i32*
  %v7_979c = load i32, i32* %v6_979c, align 4
  store i32 %v7_979c, i32* @r5, align 4
  %v7_97a0 = icmp eq i8 %v3_9798, 31
  store i1 %v7_97a0, i1* %cpsr_z.global-to-local, align 1
  %v1_97a4 = add i32 %v7_979c, 24
  store i32 %v1_97a4, i32* @r7, align 4
  %v1_97a8 = add i32 %v7_979c, 38
  store i32 %v1_97a8, i32* @r6, align 4
  %v1_97ac = add i32 %v7_979c, 58
  store i32 %v1_97ac, i32* @r8, align 4
  %tmp88 = icmp ult i8 %v3_9798, 32
  br i1 %tmp88, label %dec_label_pc_990c, label %dec_label_pc_97b4

dec_label_pc_97b4:                                ; preds = %dec_label_pc_9788
  store i32 %v5_94d4, i32* %r1.global-to-local, align 4
  store i1 %v7_97b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_97b8, label %dec_label_pc_996c, label %dec_label_pc_97c0

dec_label_pc_97c0:                                ; preds = %dec_label_pc_990c, %dec_label_pc_97b4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* %r4.global-to-local, align 4
  %v0_97c8 = load i32, i32* @fp, align 4
  %v9_97c8 = icmp eq i32 %v0_97c8, ptrtoint ([3 x i8]* @global_var_ffff.45 to i32)
  store i1 %v9_97c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_97c8, label %dec_label_pc_9984, label %dec_label_pc_97d0

dec_label_pc_97d0:                                ; preds = %dec_label_pc_996c.dec_label_pc_97d0_crit_edge, %dec_label_pc_97c0
  %v1_97d4 = phi i32 [ %v1_97d4.pre, %dec_label_pc_996c.dec_label_pc_97d0_crit_edge ], [ ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), %dec_label_pc_97c0 ]
  store i32 %v3_9534, i32* %r2.global-to-local, align 4
  %v9_97d4 = icmp eq i32 %v3_9534, %v1_97d4
  store i1 %v9_97d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_97d4, label %dec_label_pc_99ac, label %dec_label_pc_97dc

dec_label_pc_97dc:                                ; preds = %dec_label_pc_9984.dec_label_pc_97dc_crit_edge, %dec_label_pc_97d0
  %v1_97e0 = phi i32 [ %v1_97e0.pre, %dec_label_pc_9984.dec_label_pc_97dc_crit_edge ], [ %v1_97d4, %dec_label_pc_97d0 ]
  store i32 %v3_9538, i32* %r3.global-to-local, align 4
  %v9_97e0 = icmp eq i32 %v3_9538, %v1_97e0
  store i1 %v9_97e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_97e0, label %dec_label_pc_99c0, label %dec_label_pc_97e8

dec_label_pc_97e8:                                ; preds = %dec_label_pc_99ac, %dec_label_pc_97dc
  store i32 %v1_952c, i32* @r4, align 4
  store i1 %v2_99c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_99c8, label %dec_label_pc_99dc, label %.thread11

.thread11:                                        ; preds = %dec_label_pc_97e8
  %v1_97f0 = load i32, i32* @r5, align 4
  %v2_97f0 = add i32 %v1_97f0, 16
  %v3_97f0 = inttoptr i32 %v2_97f0 to i32*
  %v4_97f0 = load i32, i32* %v3_97f0, align 4
  store i32 %v4_97f0, i32* %r3.global-to-local, align 4
  %v2_97f4 = load i32, i32* @r6, align 4
  %v3_97f4 = add i32 %v2_97f4, 16
  %v4_97f4 = inttoptr i32 %v3_97f4 to i32*
  store i32 %v4_97f0, i32* %v4_97f4, align 4
  br label %dec_label_pc_97fc

dec_label_pc_97fc:                                ; preds = %bb86, %.thread11, %dec_label_pc_99dc
  %v0_97fc = call i32 @function_df2c()
  store i32 %v0_97fc, i32* %r0.global-to-local, align 4
  store i32 %v0_97fc, i32* %stack_var_-48, align 4
  %v0_9804 = call i32 @function_df2c()
  store i32 %v0_9804, i32* %r0.global-to-local, align 4
  store i32 %v0_9804, i32* %stack_var_-52, align 4
  %v0_980c = call i32 @function_df2c()
  store i32 %v2_9810, i32* %r1.global-to-local, align 4
  store i32 %v0_980c, i32* %stack_var_-56, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_981c = load i32, i32* @r7, align 4
  store i32 %v0_981c, i32* %r0.global-to-local, align 4
  %v3_9820 = call i32 @function_1194c(i32 %v0_981c, i32 %v2_9810, i32 4)
  %v0_9824 = load i32, i32* @r7, align 4
  %v1_9824 = add i32 %v0_9824, 6
  store i32 %v1_9824, i32* %r0.global-to-local, align 4
  store i32 %v2_9828, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_9830 = call i32 @function_1194c(i32 %v1_9824, i32 %v2_9828, i32 4)
  %v0_9834 = load i32, i32* @r7, align 4
  %v1_9834 = add i32 %v0_9834, 4
  store i32 %v1_9834, i32* %r0.global-to-local, align 4
  store i32 %v2_9838, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_9840 = call i32 @function_1194c(i32 %v1_9834, i32 %v2_9838, i32 2)
  store i32 %v2_9844, i32* %r1.global-to-local, align 4
  %v0_9848 = load i32, i32* @r7, align 4
  %v1_9848 = add i32 %v0_9848, 10
  store i32 %v1_9848, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_9850 = call i32 @function_1194c(i32 %v1_9848, i32 %v2_9844, i32 2)
  store i32 %v3_9850, i32* %r0.global-to-local, align 4
  store i32 %v1_94a0, i32* %r1.global-to-local, align 4
  store i1 %v2_9858, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9858, label %dec_label_pc_9860, label %dec_label_pc_99e8

dec_label_pc_9860:                                ; preds = %dec_label_pc_97fc, %dec_label_pc_99e8
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_9864 = load i32, i32* @r5, align 4
  %v3_9864 = add i32 %v2_9864, 10
  %v4_9864 = inttoptr i32 %v3_9864 to i16*
  store i16 0, i16* %v4_9864, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_986c = load i32, i32* @r5, align 4
  store i32 %v0_986c, i32* @r0, align 4
  %v2_9870 = call i32 @function_c848(i32 %v0_986c, i32 20)
  %v3_9870 = trunc i32 %v2_9870 to i16
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_9878 = load i32, i32* @r5, align 4
  %v4_9878 = add i32 %v3_9878, 10
  %v5_9878 = inttoptr i32 %v4_9878 to i16*
  store i16 %v3_9870, i16* %v5_9878, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_9880 = load i32, i32* %r3.global-to-local, align 4
  %v1_9880 = trunc i32 %v0_9880 to i16
  %v2_9880 = load i32, i32* @r6, align 4
  %v3_9880 = add i32 %v2_9880, 10
  %v4_9880 = inttoptr i32 %v3_9880 to i16*
  store i16 %v1_9880, i16* %v4_9880, align 2
  %v0_9884 = load i32, i32* @r6, align 4
  store i32 %v0_9884, i32* @r0, align 4
  %v2_9888 = call i32 @function_c848(i32 %v0_9884, i32 20)
  %v3_9888 = trunc i32 %v2_9888 to i16
  store i32 %v2_9888, i32* %r0.global-to-local, align 4
  %v3_988c = load i32, i32* @r6, align 4
  %v4_988c = add i32 %v3_988c, 10
  %v5_988c = inttoptr i32 %v4_988c to i16*
  store i16 %v3_9888, i16* %v5_988c, align 2
  store i32 0, i32* @r4, align 4
  %v0_9894 = load i32, i32* @r8, align 4
  store i32 %v0_9894, i32* @r1, align 4
  %v1_9898 = add i32 %v0_9894, 4
  %v2_9898 = inttoptr i32 %v1_9898 to i16*
  %v3_9898 = load i16, i16* %v2_9898, align 2
  %v4_9898 = zext i16 %v3_9898 to i32
  store i32 %v4_9898, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-136.0.ph, i32* %r3.global-to-local, align 4
  %v3_98a0 = add i32 %v0_9894, 6
  %v4_98a0 = inttoptr i32 %v3_98a0 to i16*
  store i16 0, i16* %v4_98a0, align 2
  %v0_98a4 = load i32, i32* @r6, align 4
  store i32 %v0_98a4, i32* %r0.global-to-local, align 4
  %v4_98a8 = call i32 @function_c898(i32 %v0_98a4, i32 %v0_9894, i32 %v4_9898, i32 %stack_var_-136.0.ph)
  %v5_98a8 = trunc i32 %v4_98a8 to i16
  store i32 %v4_98a8, i32* %r0.global-to-local, align 4
  %v3_98ac = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_98ac, i32* %r2.global-to-local, align 4
  %v3_98b0 = mul i32 %v3_98ac, 32
  store i32 %v3_98b0, i32* %r3.global-to-local, align 4
  %v0_98b4 = load i32, i32* @r5, align 4
  %v1_98b4 = add i32 %v0_98b4, 16
  %v2_98b4 = inttoptr i32 %v1_98b4 to i32*
  %v3_98b4 = load i32, i32* %v2_98b4, align 4
  %v5_98b8 = mul i32 %v3_98ac, 24
  store i32 %v5_98b8, i32* %r3.global-to-local, align 4
  %v1_98bc = load i32, i32* @sb, align 4
  %v2_98bc = add i32 %v1_98bc, %v5_98b8
  store i32 %v2_98bc, i32* @lr, align 4
  %v2_98c0 = add i32 %v2_98bc, 4
  %v3_98c0 = inttoptr i32 %v2_98c0 to i32*
  store i32 %v3_98b4, i32* %v3_98c0, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_98c8 = load i32, i32* @r8, align 4
  %v4_98c8 = add i32 %v3_98c8, 6
  %v5_98c8 = inttoptr i32 %v4_98c8 to i16*
  store i16 %v5_98a8, i16* %v5_98c8, align 2
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_98d0 = load i32, i32* %r1.global-to-local, align 4
  %v1_98d0 = trunc i32 %v0_98d0 to i16
  %v2_98d0 = load i32, i32* %r3.global-to-local, align 4
  %v3_98d0 = load i32, i32* @sb, align 4
  %v4_98d0 = add i32 %v3_98d0, %v2_98d0
  %v5_98d0 = inttoptr i32 %v4_98d0 to i16*
  store i16 %v1_98d0, i16* %v5_98d0, align 2
  %v0_98d4 = load i32, i32* @r4, align 4
  %v1_98d4 = trunc i32 %v0_98d4 to i16
  %v2_98d4 = load i32, i32* @lr, align 4
  %v3_98d4 = add i32 %v2_98d4, 2
  %v4_98d4 = inttoptr i32 %v3_98d4 to i16*
  store i16 %v1_98d4, i16* %v4_98d4, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_98dc = load i32, i32* @r5, align 4
  store i32 %v0_98dc, i32* %r1.global-to-local, align 4
  store i32 %v3_94e8, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-132.0.ph, i32* %r2.global-to-local, align 4
  %v0_98e8 = load i32, i32* @lr, align 4
  %v0_98ec = load i32, i32* %ip.global-to-local, align 4
  %v6_98f0 = call i32 @function_12af8(i32 %v3_94e8, i32 %v0_98dc, i32 %stack_var_-132.0.ph, i32 16384, i32 %v0_98e8, i32 %v0_98ec)
  %v3_98f4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_98f4, i32* %r3.global-to-local, align 4
  %v1_98f8 = add i32 %v3_98f4, 1
  store i32 %v1_98f8, i32* %r0.global-to-local, align 4
  %v1_98fc = load i32, i32* @sl, align 4
  %v9_98fc = icmp eq i32 %v1_98f8, %v1_98fc
  store i1 %v9_98fc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_98f8, i32* %stack_var_-44, align 4
  %v6_9904 = icmp slt i32 %v1_98f8, %v1_98fc
  br i1 %v6_9904, label %dec_label_pc_9788, label %dec_label_pc_9774

dec_label_pc_990c:                                ; preds = %dec_label_pc_9788
  %v1_990c = add i32 %v2_9790, 16
  %v2_990c = inttoptr i32 %v1_990c to i32*
  %v3_990c = load i32, i32* %v2_990c, align 4
  store i32 %v3_990c, i32* %r4.global-to-local, align 4
  %v0_9910 = call i32 @function_df2c()
  store i32 %v0_9910, i32* %r0.global-to-local, align 4
  %v3_9914 = load i32, i32* %stack_var_-44, align 4
  %v5_991c = mul i32 %v3_9914, 24
  %v0_9920 = load i32, i32* %r4.global-to-local, align 4
  %v1_9920 = and i32 %v0_9920, 16711680
  store i32 %v1_9920, i32* %ip.global-to-local, align 4
  %v3_9924 = udiv i32 %v0_9920, 16777216
  %v4_9928 = udiv i32 %v1_9920, 256
  %v5_9928 = or i32 %v4_9928, %v3_9924
  store i32 %v5_9928, i32* %r2.global-to-local, align 4
  %v1_992c = load i32, i32* @sb, align 4
  %v2_992c = add i32 %v1_992c, %v5_991c
  store i32 %v2_992c, i32* %r1.global-to-local, align 4
  %v1_9930 = and i32 %v0_9920, 65280
  store i32 %v1_9930, i32* %r3.global-to-local, align 4
  %v1_9934 = add i32 %v2_992c, 20
  %v2_9934 = inttoptr i32 %v1_9934 to i8*
  %v3_9934 = load i8, i8* %v2_9934, align 1
  %v4_9934 = zext i8 %v3_9934 to i32
  store i32 %v4_9934, i32* %ip.global-to-local, align 4
  %v5_993c = call i32 @llvm.bswap.i32(i32 %v0_9920)
  %v7_9940 = lshr i32 %v0_9910, %v4_9934
  %v8_9940 = add i32 %v7_9940, %v5_993c
  store i32 %v8_9940, i32* %r2.global-to-local, align 4
  %v1_9944 = and i32 %v8_9940, 16711680
  store i32 %v1_9944, i32* %r0.global-to-local, align 4
  store i32 %v5_94d4, i32* %r1.global-to-local, align 4
  %v5_995c = call i32 @llvm.bswap.i32(i32 %v8_9940)
  store i32 %v5_995c, i32* %r3.global-to-local, align 4
  store i1 %v7_97b8, i1* %cpsr_z.global-to-local, align 1
  %v1_9964 = load i32, i32* @r5, align 4
  %v2_9964 = add i32 %v1_9964, 16
  %v3_9964 = inttoptr i32 %v2_9964 to i32*
  store i32 %v5_995c, i32* %v3_9964, align 4
  br i1 %v2_97b8, label %dec_label_pc_996c, label %dec_label_pc_97c0

dec_label_pc_996c:                                ; preds = %dec_label_pc_990c, %dec_label_pc_97b4
  %v0_996c = call i32 @function_df2c()
  store i32 %v0_996c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* %r4.global-to-local, align 4
  %v0_9978 = load i32, i32* @fp, align 4
  %v9_9978 = icmp eq i32 %v0_9978, ptrtoint ([3 x i8]* @global_var_ffff.45 to i32)
  store i1 %v9_9978, i1* %cpsr_z.global-to-local, align 1
  %v1_997c = load i32, i32* @r5, align 4
  %v2_997c = add i32 %v1_997c, 12
  %v3_997c = inttoptr i32 %v2_997c to i32*
  store i32 %v0_996c, i32* %v3_997c, align 4
  br i1 %v9_9978, label %dec_label_pc_9984, label %dec_label_pc_996c.dec_label_pc_97d0_crit_edge

dec_label_pc_996c.dec_label_pc_97d0_crit_edge:    ; preds = %dec_label_pc_996c
  %v1_97d4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_97d0

dec_label_pc_9984:                                ; preds = %dec_label_pc_996c, %dec_label_pc_97c0
  %v0_9984 = call i32 @function_df2c()
  %v3_998c = urem i32 %v0_9984, 65536
  store i32 %v3_998c, i32* %r0.global-to-local, align 4
  store i32 %v3_9534, i32* %r2.global-to-local, align 4
  %v1_9998 = sub nsw i32 999, %v3_998c
  store i32 %v1_9998, i32* %r3.global-to-local, align 4
  %v1_999c = load i32, i32* %r4.global-to-local, align 4
  %v9_999c = icmp eq i32 %v3_9534, %v1_999c
  store i1 %v9_999c, i1* %cpsr_z.global-to-local, align 1
  %v1_99a0 = trunc i32 %v0_9984 to i16
  %v2_99a0 = load i32, i32* @r5, align 4
  %v3_99a0 = add i32 %v2_99a0, 4
  %v4_99a0 = inttoptr i32 %v3_99a0 to i16*
  store i16 %v1_99a0, i16* %v4_99a0, align 2
  %v0_99a4 = load i32, i32* %r3.global-to-local, align 4
  %v1_99a4 = trunc i32 %v0_99a4 to i16
  %v2_99a4 = load i32, i32* @r6, align 4
  %v3_99a4 = add i32 %v2_99a4, 4
  %v4_99a4 = inttoptr i32 %v3_99a4 to i16*
  store i16 %v1_99a4, i16* %v4_99a4, align 2
  br i1 %v9_999c, label %dec_label_pc_99ac, label %dec_label_pc_9984.dec_label_pc_97dc_crit_edge

dec_label_pc_9984.dec_label_pc_97dc_crit_edge:    ; preds = %dec_label_pc_9984
  %v1_97e0.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_97dc

dec_label_pc_99ac:                                ; preds = %dec_label_pc_9984, %dec_label_pc_97d0
  %v0_99ac = call i32 @function_df2c()
  %v1_99ac = trunc i32 %v0_99ac to i16
  store i32 %v0_99ac, i32* %r0.global-to-local, align 4
  store i32 %v3_9538, i32* %r3.global-to-local, align 4
  %v1_99b4 = load i32, i32* %r4.global-to-local, align 4
  %v9_99b4 = icmp eq i32 %v3_9538, %v1_99b4
  store i1 %v9_99b4, i1* %cpsr_z.global-to-local, align 1
  %v3_99b8 = load i32, i32* @r5, align 4
  %v4_99b8 = add i32 %v3_99b8, 58
  %v5_99b8 = inttoptr i32 %v4_99b8 to i16*
  store i16 %v1_99ac, i16* %v5_99b8, align 2
  br i1 %v9_99b4, label %dec_label_pc_99c0, label %dec_label_pc_97e8

dec_label_pc_99c0:                                ; preds = %dec_label_pc_99ac, %dec_label_pc_97dc
  %v0_99c0 = call i32 @function_df2c()
  %v1_99c0 = trunc i32 %v0_99c0 to i16
  store i32 %v0_99c0, i32* %r0.global-to-local, align 4
  store i32 %v1_952c, i32* @r4, align 4
  store i1 %v2_99c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_99c8, label %.thread31, label %bb86

.thread31:                                        ; preds = %dec_label_pc_99c0
  %v3_99d032 = load i32, i32* @r8, align 4
  %v4_99d033 = add i32 %v3_99d032, 2
  %v5_99d034 = inttoptr i32 %v4_99d033 to i16*
  store i16 %v1_99c0, i16* %v5_99d034, align 2
  br label %dec_label_pc_99dc

bb86:                                             ; preds = %dec_label_pc_99c0
  %v1_99cc = load i32, i32* @r5, align 4
  %v2_99cc = add i32 %v1_99cc, 16
  %v3_99cc = inttoptr i32 %v2_99cc to i32*
  %v4_99cc = load i32, i32* %v3_99cc, align 4
  store i32 %v4_99cc, i32* %r3.global-to-local, align 4
  %v3_99d0 = load i32, i32* @r8, align 4
  %v4_99d0 = add i32 %v3_99d0, 2
  %v5_99d0 = inttoptr i32 %v4_99d0 to i16*
  store i16 %v1_99c0, i16* %v5_99d0, align 2
  %v1_99d4 = load i32, i32* %r3.global-to-local, align 4
  %v2_99d4 = load i32, i32* @r6, align 4
  %v3_99d4 = add i32 %v2_99d4, 16
  %v4_99d4 = inttoptr i32 %v3_99d4 to i32*
  store i32 %v1_99d4, i32* %v4_99d4, align 4
  br label %dec_label_pc_97fc

dec_label_pc_99dc:                                ; preds = %.thread31, %dec_label_pc_97e8
  %v0_99dc = call i32 @function_df2c()
  store i32 %v0_99dc, i32* %r0.global-to-local, align 4
  %v1_99e0 = load i32, i32* @r6, align 4
  %v2_99e0 = add i32 %v1_99e0, 16
  %v3_99e0 = inttoptr i32 %v2_99e0 to i32*
  store i32 %v0_99dc, i32* %v3_99e0, align 4
  br label %dec_label_pc_97fc

dec_label_pc_99e8:                                ; preds = %dec_label_pc_97fc
  %v0_99e8 = load i32, i32* @r8, align 4
  %v1_99e8 = add i32 %v0_99e8, 8
  store i32 %v1_99e8, i32* %r0.global-to-local, align 4
  store i32 %v5_9480, i32* %r1.global-to-local, align 4
  %v2_99f0 = inttoptr i32 %v1_99e8 to i16*
  %v3_99f0 = call i32 @function_e0c0(i16* %v2_99f0, i32 %v5_9480)
  store i32 %v3_99f0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9860

dec_label_pc_99f8:                                ; preds = %dec_label_pc_94f8
  store i32 %v3_94e8, i32* %r0.global-to-local, align 4
  %v1_99fc = call i32 @function_1239c(i32 %v3_94e8)
  store i32 %v1_99fc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9a00

dec_label_pc_9a00:                                ; preds = %dec_label_pc_9398, %dec_label_pc_99f8
  %v1_9a08 = phi i32 [ %v3_94e8, %dec_label_pc_9398 ], [ %v1_99fc, %dec_label_pc_99f8 ]
  store i32 %v3_9398, i32* %r4.global-to-local, align 4
  store i32 %v6_9398, i32* %r5.global-to-local, align 4
  store i32 %v24_9398, i32* %fp.global-to-local, align 4
  ret i32 %v1_9a08

dec_label_pc_9a0c:                                ; preds = %dec_label_pc_9520
  %v1_9a14 = add i32 %v5_9480, 8
  store i32 %v1_9a14, i32* %r1.global-to-local, align 4
  %v1_9a18 = add i32 %v5_9480, 66
  store i32 %v1_9a18, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_9774.preheader

; uselistorder directives
  uselistorder i32 %v1_9a18, { 1, 0 }
  uselistorder i32 %v1_9a14, { 1, 0 }
  uselistorder i16 %v1_99c0, { 1, 0 }
  uselistorder i32 %v0_99c0, { 1, 0 }
  uselistorder i32 %v0_99ac, { 1, 0 }
  uselistorder i32 %v3_998c, { 1, 0 }
  uselistorder i32 %v0_9984, { 1, 0 }
  uselistorder i32 %v5_995c, { 1, 0 }
  uselistorder i32 %v0_9920, { 1, 2, 0, 3 }
  uselistorder i32 %v1_98fc, { 1, 2, 0 }
  uselistorder i32 %v1_98f8, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v3_98ac, { 1, 0, 2 }
  uselistorder i32 %v4_98a8, { 1, 0 }
  uselistorder i32 %v0_9894, { 1, 0, 2, 3 }
  uselistorder i32 %v2_9888, { 1, 0 }
  uselistorder i32 %v7_979c, { 2, 1, 0, 3 }
  uselistorder i1 %v7_97b8, { 2, 1, 0 }
  uselistorder i1 %v2_99c8, { 2, 3, 1, 0 }
  uselistorder i32 %v0_970c, { 1, 0, 2 }
  uselistorder i32 %v3_9588, { 1, 0 }
  uselistorder i32 %v3_956c, { 1, 2, 0 }
  uselistorder i32 %v1_9568, { 1, 0 }
  uselistorder i32 %v1_952c, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v0_9528, { 1, 0, 3, 2 }
  uselistorder i32 %v0_9524, { 1, 0, 2, 3 }
  uselistorder i32 %v0_9520, { 1, 0, 2, 3 }
  uselistorder i1 %v7_9518, { 1, 0 }
  uselistorder i1 %v7_94ec, { 1, 0 }
  uselistorder i32 %v3_94e8, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v5_94d4, { 5, 3, 0, 4, 1, 2 }
  uselistorder i32 %v1_94a0, { 1, 2, 0 }
  uselistorder i32 %v5_9480, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_9434, { 1, 0 }
  uselistorder i32 %v1_9410, { 2, 1, 0 }
  uselistorder i32 %v5_9408, { 1, 0 }
  uselistorder i8 %v5_93ec, { 0, 2, 1 }
  uselistorder i32 %v6_93cc, { 1, 0 }
  uselistorder i32 %v2_93b4, { 0, 4, 1, 3, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32* %r4.global-to-local, { 0, 6, 5, 7, 1, 2, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 1, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 25, 26, 28, 27, 29, 30, 32, 31, 33, 34, 36, 35, 38, 37, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 5, 7, 8, 6, 10, 9, 12, 11, 13, 15, 14, 16, 18, 17, 19, 20, 21, 22, 24, 23, 27, 25, 26, 30, 28, 29, 31, 33, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9a00, { 1, 0 }
  uselistorder label %dec_label_pc_9860, { 1, 0 }
  uselistorder label %dec_label_pc_97fc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9774, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9774.preheader, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %bb84, { 1, 0 }
  uselistorder label %.thread25, { 1, 0 }
}

define i32 @function_9a2c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9a2c:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_9a2c = load i32, i32* @r4, align 4
  %v6_9a2c = load i32, i32* @r5, align 4
  %v24_9a2c = load i32, i32* @fp, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @sl, align 4
  %v2_9a48 = call i32 @function_136e4(i32 %arg1, i32 4)
  %v0_9a4c = load i32, i32* @r5, align 4
  store i32 %v0_9a4c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_9a5c = load i32, i32* @r4, align 4
  %v5_9a60 = inttoptr i32 %v0_9a4c to i32*
  %v6_9a60 = call i32 @function_8570(i32 %v0_9a5c, i32* %v5_9a60, i32 2, i32 0)
  %v1_9a6c = urem i32 %v6_9a60, 256
  store i32 %v1_9a6c, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_9a78 = load i32, i32* @r5, align 4
  store i32 %v0_9a78, i32* %r1.global-to-local, align 4
  %v0_9a7c = load i32, i32* @r4, align 4
  %v5_9a80 = trunc i32 %v6_9a60 to i8
  %v7_9a84 = inttoptr i32 %v0_9a78 to i32*
  %v8_9a84 = call i32 @function_8570(i32 %v0_9a7c, i32* %v7_9a84, i32 3, i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32))
  %v0_9a88 = load i32, i32* @r5, align 4
  store i32 %v0_9a88, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v8_9a84, i32* %fp.global-to-local, align 4
  %v0_9a98 = load i32, i32* @r4, align 4
  %v4_9a9c = inttoptr i32 %v0_9a88 to i32*
  %v5_9a9c = call i32 @function_8570(i32 %v0_9a98, i32* %v4_9a9c, i32 4, i32 64)
  %v1_9aa4 = urem i32 %v5_9a9c, 256
  store i32 %v1_9aa4, i32* %ip.global-to-local, align 4
  %v0_9aa8 = load i32, i32* @r5, align 4
  store i32 %v0_9aa8, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9ab4 = load i32, i32* @r4, align 4
  %v6_9abc = inttoptr i32 %v0_9aa8 to i32*
  %v7_9abc = call i32 @function_8570(i32 %v0_9ab4, i32* %v6_9abc, i32 5, i32 1)
  %v1_9ac8 = urem i32 %v7_9abc, 256
  store i32 %v1_9ac8, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_9ad4 = load i32, i32* @r5, align 4
  store i32 %v0_9ad4, i32* %r1.global-to-local, align 4
  %v0_9ad8 = load i32, i32* @r4, align 4
  %v6_9ae0 = inttoptr i32 %v0_9ad4 to i32*
  %v7_9ae0 = call i32 @function_8570(i32 %v0_9ad8, i32* %v6_9ae0, i32 6, i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32))
  %v0_9ae8 = load i32, i32* @r5, align 4
  store i32 %v0_9ae8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v7_9ae0, i32* @r8, align 4
  %v0_9af8 = load i32, i32* @r4, align 4
  %v5_9afc = inttoptr i32 %v0_9ae8 to i32*
  %v6_9afc = call i32 @function_8570(i32 %v0_9af8, i32* %v5_9afc, i32 7, i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32))
  %v0_9b00 = load i32, i32* @r5, align 4
  store i32 %v0_9b00, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v6_9afc, i32* @r7, align 4
  %v0_9b10 = load i32, i32* @r4, align 4
  %v4_9b14 = inttoptr i32 %v0_9b00 to i32*
  %v5_9b14 = call i32 @function_8570(i32 %v0_9b10, i32* %v4_9b14, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9b24 = load i32, i32* @r5, align 4
  store i32 %v0_9b24, i32* %r1.global-to-local, align 4
  %v0_9b28 = load i32, i32* @r4, align 4
  %v4_9b2c = inttoptr i32 %v0_9b24 to i32*
  %v5_9b2c = call i32 @function_8570(i32 %v0_9b28, i32* %v4_9b2c, i32 1, i32 1)
  %v1_9b34 = urem i32 %v5_9b2c, 256
  store i32 %v1_9b34, i32* %ip.global-to-local, align 4
  %v0_9b38 = load i32, i32* @r5, align 4
  store i32 %v0_9b38, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_9b44 = load i32, i32* @r4, align 4
  %v5_9b4c = inttoptr i32 %v0_9b38 to i32*
  %v6_9b4c = call i32 @function_8570(i32 %v0_9b44, i32* %v5_9b4c, i32 19, i32 0)
  %v0_9b54 = load i32, i32* @r5, align 4
  store i32 %v0_9b54, i32* %r1.global-to-local, align 4
  %v2_9b58 = load i32, i32* @global_var_1a2d4.47, align 4
  store i32 %v2_9b58, i32* %r3.global-to-local, align 4
  store i32 %v6_9b4c, i32* @r6, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_9b64 = load i32, i32* @r4, align 4
  %v4_9b68 = inttoptr i32 %v0_9b54 to i32*
  %v5_9b68 = call i32 @function_8570(i32 %v0_9b64, i32* %v4_9b68, i32 25, i32 %v2_9b58)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_9b7c = call i32 @function_12b7c(i32 2, i32 3, i32 6)
  %v7_9b80 = icmp eq i32 %v3_9b7c, -1
  store i1 %v7_9b80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9b80, label %dec_label_pc_a020, label %dec_label_pc_9b8c

dec_label_pc_9b8c:                                ; preds = %dec_label_pc_9a2c
  store i32 1, i32* %stack_var_-44, align 4
  %v6_9b94 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_9b94, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_9ba8 = call i32 @function_12b38(i32 %v3_9b7c, i32 0, i32 3, i32 %v6_9b94, i32 4)
  %v7_9bac = icmp eq i32 %v5_9ba8, -1
  store i1 %v7_9bac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9bac, label %dec_label_pc_a018, label %dec_label_pc_9bb4

dec_label_pc_9bb4:                                ; preds = %dec_label_pc_9b8c
  %v0_9bb4 = load i32, i32* @r8, align 4
  %v0_9bb8 = load i32, i32* @r7, align 4
  %v0_9bbc = load i32, i32* %fp.global-to-local, align 4
  %v0_9bc0 = load i32, i32* @r6, align 4
  %v1_9bc0 = urem i32 %v0_9bc0, 256
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_9bc8 = urem i32 %v0_9bb4, 65536
  store i32 %v3_9bc8, i32* %r3.global-to-local, align 4
  %v3_9bcc = urem i32 %v0_9bb8, 65536
  store i32 %v3_9bcc, i32* %r4.global-to-local, align 4
  %v0_9bd0 = load i32, i32* @sl, align 4
  %v2_9bd0 = icmp eq i32 %v0_9bd0, 0
  store i1 %v2_9bd0, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  %v3_9be8 = urem i32 %v0_9bbc, 65536
  store i32 %v3_9be8, i32* @fp, align 4
  br i1 %v2_9bd0, label %dec_label_pc_a02c, label %dec_label_pc_9bf8

dec_label_pc_9bf8:                                ; preds = %dec_label_pc_9bb4
  %v3_9bb8 = mul i32 %v0_9bb8, 65536
  %v3_9bb4 = mul i32 %v0_9bb4, 65536
  %v0_9bbc.not = or i32 %v0_9bbc, -65536
  %v1_9bfc = xor i32 %v0_9bbc.not, 65535
  %v3_9c00 = mul i32 %v5_9b14, 65536
  %v1_9c04 = add i32 %v3_9c00, 3407872
  %tmp67 = udiv i32 %v1_9c04, 256
  %v3_9c18 = and i32 %tmp67, 65280
  %tmp68 = mul nsw i32 %v1_9bfc, 256
  %v3_9c1c = and i32 %tmp68, 65280
  store i32 %v3_9c1c, i32* %ip.global-to-local, align 4
  %v1_9c20 = add i32 %v3_9c00, 524288
  %v1_9c28 = add i32 %v3_9c00, 1835008
  %tmp69 = udiv i32 %v1_9bfc, 256
  %v4_9c2c = urem i32 %tmp69, 256
  %v5_9c2c = or i32 %v4_9c2c, %v3_9c1c
  %v4_9c34 = udiv i32 %v1_9c04, 16777216
  %v5_9c34 = or i32 %v3_9c18, %v4_9c34
  store i32 %v5_9c34, i32* @r8, align 4
  %v3_9c40 = udiv i32 %v1_9c28, 256
  %tmp70 = mul i32 %v0_9bbc, 256
  %v3_9c44 = and i32 %tmp70, 65280
  store i32 %v3_9bb4, i32* %r2.global-to-local, align 4
  %tmp71 = udiv i32 %v0_9bbc, 256
  %v4_9c54 = urem i32 %tmp71, 256
  %v5_9c54 = or i32 %v4_9c54, %v3_9c44
  %tmp72 = mul i32 %v0_9bb4, 256
  %v3_9c58 = and i32 %tmp72, 65280
  %v1_9c5c = and i32 %v3_9c40, 65280
  store i32 %v1_9c5c, i32* @r6, align 4
  store i32 %v3_9bb8, i32* %r1.global-to-local, align 4
  %tmp73 = mul i32 %v0_9bb8, 256
  %v3_9c68 = and i32 %tmp73, 65280
  %tmp74 = udiv i32 %v0_9bb4, 256
  %v4_9c6c = urem i32 %tmp74, 256
  %v5_9c6c = or i32 %v4_9c6c, %v3_9c58
  store i32 %v5_9c6c, i32* @lr, align 4
  %v4_9c70 = udiv i32 %v1_9c28, 16777216
  %v5_9c70 = or i32 %v1_9c5c, %v4_9c70
  store i32 %v5_9c70, i32* %r3.global-to-local, align 4
  %tmp75 = udiv i32 %v0_9bb8, 256
  %v4_9c74 = urem i32 %tmp75, 256
  %v5_9c74 = or i32 %v4_9c74, %v3_9c68
  %tmp76 = udiv i32 %v1_9c20, 256
  %v3_9c78 = and i32 %tmp76, 65280
  store i32 %v3_9c78, i32* @r5, align 4
  %v4_9c8c = udiv i32 %v1_9c20, 16777216
  %v5_9c8c = or i32 %v3_9c78, %v4_9c8c
  store i32 %v5_9c8c, i32* @r7, align 4
  store i32 0, i32* @r4, align 4
  %v4_9ce0 = sext i8 %v5_9a80 to i32
  %sext12 = mul nuw i32 %v5_9c54, 65536
  %v4_9cf813 = sdiv i32 %sext12, 65536
  %sext8 = mul nuw i32 %v5_9c70, 65536
  %v4_9d5c = sdiv i32 %sext8, 65536
  %sext9 = mul nuw i32 %v5_9c2c, 65536
  %v4_9d60 = sdiv i32 %sext9, 65536
  %v1_9d68 = trunc i32 %v4_9d5c to i16
  %v2_9d90 = icmp eq i32 %v1_9bc0, 0
  %sext10 = mul nuw i32 %v5_9c6c, 65536
  %v4_9db0 = sdiv i32 %sext10, 65536
  %sext11 = mul nuw i32 %v5_9c74, 65536
  %v4_9db8 = sdiv i32 %sext11, 65536
  %v1_9cf0 = trunc i32 %v5_9a9c to i8
  br label %dec_label_pc_9c94

dec_label_pc_9c94:                                ; preds = %bb82, %dec_label_pc_9bf8
  store i32 4, i32* %r1.global-to-local, align 4
  %v2_9ca0 = call i32 @function_136e4(i32 1510, i32 4)
  store i32 %v2_9a48, i32* %r2.global-to-local, align 4
  %v3_9ca8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9ca8, i32* %r3.global-to-local, align 4
  %v2_9cac = load i32, i32* @r4, align 4
  %v5_9cac = mul i32 %v2_9cac, 4
  %v6_9cac = add i32 %v5_9cac, %v2_9a48
  %v7_9cac = inttoptr i32 %v6_9cac to i32*
  store i32 %v2_9ca0, i32* %v7_9cac, align 4
  %v0_9cb0 = load i32, i32* %r2.global-to-local, align 4
  %v1_9cb0 = load i32, i32* %r3.global-to-local, align 4
  %v4_9cb0 = mul i32 %v1_9cb0, 4
  %v5_9cb0 = add i32 %v4_9cb0, %v0_9cb0
  %v6_9cb0 = inttoptr i32 %v5_9cb0 to i32*
  %v7_9cb0 = load i32, i32* %v6_9cb0, align 4
  store i32 %v7_9cb0, i32* %r4.global-to-local, align 4
  %v1_9cb4 = inttoptr i32 %v7_9cb0 to i8*
  %v2_9cb4 = load i8, i8* %v1_9cb4, align 1
  %tmp = urem i8 %v2_9cb4, 16
  %v1_9cb8 = zext i8 %tmp to i32
  %v1_9cbc = or i32 %v1_9cb8, 64
  store i32 %v1_9cbc, i32* %r2.global-to-local, align 4
  %v1_9cc0 = trunc i32 %v1_9cbc to i8
  store i8 %v1_9cc0, i8* %v1_9cb4, align 1
  %v0_9cc4 = load i32, i32* %r3.global-to-local, align 4
  %v5_9cc8 = mul i32 %v0_9cc4, 24
  store i32 %v5_9cc8, i32* %r1.global-to-local, align 4
  %v0_9ccc = load i32, i32* %r4.global-to-local, align 4
  %v1_9ccc = inttoptr i32 %v0_9ccc to i8*
  %v2_9ccc = load i8, i8* %v1_9ccc, align 1
  %v1_9cd0 = and i8 %v2_9ccc, -16
  %v1_9cd4 = or i8 %v1_9cd0, 5
  store i32 %v1_9ac8, i32* %r5.global-to-local, align 4
  store i8 %v1_9cd4, i8* %v1_9ccc, align 1
  store i32 %v4_9ce0, i32* %r2.global-to-local, align 4
  %v2_9ce4 = load i32, i32* %r4.global-to-local, align 4
  %v3_9ce4 = add i32 %v2_9ce4, 1
  %v4_9ce4 = inttoptr i32 %v3_9ce4 to i8*
  store i8 %v5_9a80, i8* %v4_9ce4, align 1
  store i32 %v1_9aa4, i32* %r3.global-to-local, align 4
  %v0_9cec = load i32, i32* %r5.global-to-local, align 4
  %v2_9cec = icmp eq i32 %v0_9cec, 0
  store i1 %v2_9cec, i1* %cpsr_z.global-to-local, align 1
  %v2_9cf0 = load i32, i32* %r4.global-to-local, align 4
  %v3_9cf0 = add i32 %v2_9cf0, 8
  %v4_9cf0 = inttoptr i32 %v3_9cf0 to i8*
  store i8 %v1_9cf0, i8* %v4_9cf0, align 1
  %v0_9cf4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9cf4, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_9c94
  store i32 %v4_9cf813, i32* %r5.global-to-local, align 4
  br label %bb77

bb:                                               ; preds = %dec_label_pc_9c94
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v4_9cf813, i32* %r5.global-to-local, align 4
  %v3_9cfc = load i32, i32* %r4.global-to-local, align 4
  %v4_9cfc = add i32 %v3_9cfc, 6
  %v5_9cfc = inttoptr i32 %v4_9cfc to i16*
  store i16 64, i16* %v5_9cfc, align 2
  br label %bb77

bb77:                                             ; preds = %.thread, %bb
  %v2_9d04 = load i32, i32* %r4.global-to-local, align 4
  %v3_9d04 = add i32 %v2_9d04, 9
  %v4_9d04 = inttoptr i32 %v3_9d04 to i8*
  store i8 47, i8* %v4_9d04, align 1
  %v0_9d08 = load i32, i32* %r4.global-to-local, align 4
  %v1_9d08 = add i32 %v0_9d08, 20
  store i32 %v1_9d08, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v0_9d10 = load i32, i32* %r5.global-to-local, align 4
  %v1_9d10 = trunc i32 %v0_9d10 to i16
  %v3_9d10 = add i32 %v0_9d08, 4
  %v4_9d10 = inttoptr i32 %v3_9d10 to i16*
  store i16 %v1_9d10, i16* %v4_9d10, align 2
  %v0_9d14 = load i32, i32* @r8, align 4
  %v1_9d14 = trunc i32 %v0_9d14 to i16
  %v2_9d14 = load i32, i32* %r4.global-to-local, align 4
  %v3_9d14 = add i32 %v2_9d14, 2
  %v4_9d14 = inttoptr i32 %v3_9d14 to i16*
  store i16 %v1_9d14, i16* %v4_9d14, align 2
  %v0_9d18 = load i32, i32* %r3.global-to-local, align 4
  %v1_9d18 = trunc i32 %v0_9d18 to i16
  %v2_9d18 = load i32, i32* %r2.global-to-local, align 4
  %v3_9d18 = add i32 %v2_9d18, 2
  %v4_9d18 = inttoptr i32 %v3_9d18 to i16*
  store i16 %v1_9d18, i16* %v4_9d18, align 2
  store i32 %v5_9b68, i32* %r3.global-to-local, align 4
  %v0_9d20 = load i32, i32* %r4.global-to-local, align 4
  %v1_9d20 = add i32 %v0_9d20, 24
  %v2_9d20 = inttoptr i32 %v1_9d20 to i8*
  %v3_9d20 = load i8, i8* %v2_9d20, align 1
  %v4_9d20 = zext i8 %v3_9d20 to i32
  store i32 %v4_9d20, i32* %r2.global-to-local, align 4
  %v2_9d24 = add i32 %v0_9d20, 12
  %v3_9d24 = inttoptr i32 %v2_9d24 to i32*
  store i32 %v5_9b68, i32* %v3_9d24, align 4
  %v0_9d28 = load i32, i32* %r2.global-to-local, align 4
  %v1_9d28 = and i32 %v0_9d28, -241
  %v1_9d2c = or i32 %v1_9d28, 64
  store i32 %v1_9d2c, i32* %r2.global-to-local, align 4
  %v0_9d30 = load i32, i32* %r1.global-to-local, align 4
  %v1_9d30 = load i32, i32* @sb, align 4
  %v2_9d30 = add i32 %v1_9d30, %v0_9d30
  store i32 %v2_9d30, i32* %r1.global-to-local, align 4
  %v1_9d34 = add i32 %v2_9d30, 16
  %v2_9d34 = inttoptr i32 %v1_9d34 to i32*
  %v3_9d34 = load i32, i32* %v2_9d34, align 4
  store i32 %v3_9d34, i32* %r1.global-to-local, align 4
  %v1_9d38 = trunc i32 %v1_9d2c to i8
  %v2_9d38 = load i32, i32* %r4.global-to-local, align 4
  %v3_9d38 = add i32 %v2_9d38, 24
  %v4_9d38 = inttoptr i32 %v3_9d38 to i8*
  store i8 %v1_9d38, i8* %v4_9d38, align 1
  %v0_9d3c = load i32, i32* %r4.global-to-local, align 4
  %v1_9d3c = add i32 %v0_9d3c, 24
  %v2_9d3c = inttoptr i32 %v1_9d3c to i8*
  %v3_9d3c = load i8, i8* %v2_9d3c, align 1
  %v1_9d40 = and i8 %v3_9d3c, -16
  %v1_9d44 = or i8 %v1_9d40, 5
  store i8 %v1_9d44, i8* %v2_9d3c, align 1
  %v0_9d4c = load i32, i32* %r1.global-to-local, align 4
  %v1_9d4c = load i32, i32* %r4.global-to-local, align 4
  %v2_9d4c = add i32 %v1_9d4c, 16
  %v3_9d4c = inttoptr i32 %v2_9d4c to i32*
  store i32 %v0_9d4c, i32* %v3_9d4c, align 4
  %v0_9d54 = load i32, i32* %r4.global-to-local, align 4
  %v1_9d54 = add i32 %v0_9d54, 24
  store i32 %v1_9d54, i32* @r5, align 4
  %v3_9d58 = add i32 %v0_9d54, 25
  %v4_9d58 = inttoptr i32 %v3_9d58 to i8*
  store i8 %v5_9a80, i8* %v4_9d58, align 1
  store i32 %v4_9d5c, i32* %r2.global-to-local, align 4
  store i32 %v4_9d60, i32* %r3.global-to-local, align 4
  store i32 %v1_9aa4, i32* %r1.global-to-local, align 4
  %v2_9d68 = load i32, i32* @r5, align 4
  %v3_9d68 = add i32 %v2_9d68, 2
  %v4_9d68 = inttoptr i32 %v3_9d68 to i16*
  store i16 %v1_9d68, i16* %v4_9d68, align 2
  %v0_9d6c = load i32, i32* %r3.global-to-local, align 4
  %v1_9d6c = trunc i32 %v0_9d6c to i16
  %v2_9d6c = load i32, i32* @r5, align 4
  %v3_9d6c = add i32 %v2_9d6c, 4
  %v4_9d6c = inttoptr i32 %v3_9d6c to i16*
  store i16 %v1_9d6c, i16* %v4_9d6c, align 2
  %v0_9d70 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9d70, label %bb79, label %bb78

bb78:                                             ; preds = %bb77
  store i32 64, i32* %r2.global-to-local, align 4
  br label %bb79

bb79:                                             ; preds = %bb77, %bb78
  store i32 17, i32* %r3.global-to-local, align 4
  %v0_9d78 = load i32, i32* %r1.global-to-local, align 4
  %v1_9d78 = trunc i32 %v0_9d78 to i8
  %v2_9d78 = load i32, i32* @r5, align 4
  %v3_9d78 = add i32 %v2_9d78, 8
  %v4_9d78 = inttoptr i32 %v3_9d78 to i8*
  store i8 %v1_9d78, i8* %v4_9d78, align 1
  %v0_9d7c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9d7c, label %bb81, label %bb80

bb80:                                             ; preds = %bb79
  %v1_9d7c = load i32, i32* %r2.global-to-local, align 4
  %v2_9d7c = trunc i32 %v1_9d7c to i16
  %v3_9d7c = load i32, i32* @r5, align 4
  %v4_9d7c = add i32 %v3_9d7c, 6
  %v5_9d7c = inttoptr i32 %v4_9d7c to i16*
  store i16 %v2_9d7c, i16* %v5_9d7c, align 2
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %v0_9d80 = load i32, i32* %r3.global-to-local, align 4
  %v1_9d80 = trunc i32 %v0_9d80 to i8
  %v2_9d80 = load i32, i32* @r5, align 4
  %v3_9d80 = add i32 %v2_9d80, 9
  %v4_9d80 = inttoptr i32 %v3_9d80 to i8*
  store i8 %v1_9d80, i8* %v4_9d80, align 1
  %v0_9d84 = call i32 @function_df2c()
  store i32 %v1_9bc0, i32* %r1.global-to-local, align 4
  store i1 %v2_9d90, i1* %cpsr_z.global-to-local, align 1
  %v1_9d94 = sub i32 1023, %v0_9d84
  store i32 %v1_9d94, i32* %r3.global-to-local, align 4
  br i1 %v2_9d90, label %.thread14, label %.thread15

.thread14:                                        ; preds = %bb81
  %v2_9d9c = load i32, i32* @r5, align 4
  %v3_9d9c = add i32 %v2_9d9c, 16
  %v4_9d9c = inttoptr i32 %v3_9d9c to i32*
  store i32 %v1_9d94, i32* %v4_9d9c, align 4
  br label %bb82

.thread15:                                        ; preds = %bb81
  %v1_9d98 = load i32, i32* %r4.global-to-local, align 4
  %v2_9d98 = add i32 %v1_9d98, 16
  %v3_9d98 = inttoptr i32 %v2_9d98 to i32*
  %v4_9d98 = load i32, i32* %v3_9d98, align 4
  store i32 %v4_9d98, i32* %r3.global-to-local, align 4
  %v2_9da0 = load i32, i32* @r5, align 4
  %v3_9da0 = add i32 %v2_9da0, 16
  %v4_9da0 = inttoptr i32 %v3_9da0 to i32*
  store i32 %v4_9d98, i32* %v4_9da0, align 4
  br label %bb82

bb82:                                             ; preds = %.thread14, %.thread15
  %v1_9da4 = load i32, i32* @r5, align 4
  %v2_9da4 = add i32 %v1_9da4, 12
  %v3_9da4 = inttoptr i32 %v2_9da4 to i32*
  store i32 %v0_9d84, i32* %v3_9da4, align 4
  %v3_9da8 = load i32, i32* %stack_var_-44, align 4
  %v0_9dac = load i32, i32* %r4.global-to-local, align 4
  %v1_9dac = add i32 %v0_9dac, 44
  store i32 %v1_9dac, i32* @r6, align 4
  store i32 %v4_9db0, i32* %r2.global-to-local, align 4
  %v1_9db4 = add i32 %v3_9da8, 1
  store i32 %v1_9db4, i32* @r4, align 4
  store i32 %v4_9db8, i32* %r3.global-to-local, align 4
  %v1_9dbc = load i32, i32* @sl, align 4
  %v9_9dbc = icmp eq i32 %v1_9db4, %v1_9dbc
  store i1 %v9_9dbc, i1* %cpsr_z.global-to-local, align 1
  %v0_9dc0 = load i32, i32* @r7, align 4
  %v1_9dc0 = trunc i32 %v0_9dc0 to i16
  %v3_9dc0 = add i32 %v0_9dac, 48
  %v4_9dc0 = inttoptr i32 %v3_9dc0 to i16*
  store i16 %v1_9dc0, i16* %v4_9dc0, align 2
  %v0_9dc4 = load i32, i32* %r2.global-to-local, align 4
  %v1_9dc4 = trunc i32 %v0_9dc4 to i16
  %v2_9dc4 = load i32, i32* @r6, align 4
  %v3_9dc4 = inttoptr i32 %v2_9dc4 to i16*
  store i16 %v1_9dc4, i16* %v3_9dc4, align 2
  %v0_9dc8 = load i32, i32* %r3.global-to-local, align 4
  %v1_9dc8 = trunc i32 %v0_9dc8 to i16
  %v2_9dc8 = load i32, i32* @r6, align 4
  %v3_9dc8 = add i32 %v2_9dc8, 2
  %v4_9dc8 = inttoptr i32 %v3_9dc8 to i16*
  store i16 %v1_9dc8, i16* %v4_9dc8, align 2
  %v0_9dcc = load i32, i32* @r4, align 4
  store i32 %v0_9dcc, i32* %stack_var_-44, align 4
  %v5_9dd0 = icmp slt i32 %v1_9db4, %v1_9dbc
  br i1 %v5_9dd0, label %dec_label_pc_9c94, label %dec_label_pc_9dd4

dec_label_pc_9dd4:                                ; preds = %bb82
  store i32 %v5_9b14, i32* %r5.global-to-local, align 4
  %v1_9ddc = add i32 %v5_9b14, 8
  store i32 %v1_9ddc, i32* %r4.global-to-local, align 4
  %v0_9dec.pre.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_9de8.preheader

dec_label_pc_9de8.preheader:                      ; preds = %dec_label_pc_9dd4, %dec_label_pc_a02c
  %v0_9dec.pre = phi i32 [ %v0_9dec.pre.pre, %dec_label_pc_9dd4 ], [ 0, %dec_label_pc_a02c ]
  %stack_var_-124.0.ph = phi i32 [ %v1_9ddc, %dec_label_pc_9dd4 ], [ %v1_a034, %dec_label_pc_a02c ]
  %storemerge = add i32 %v5_9b14, 52
  store i32 %storemerge, i32* @r8, align 4
  %v2_9fe0 = icmp eq i32 %v1_9bc0, 0
  %v2_9ffc = icmp eq i32 %v1_9b34, 0
  %v2_9e28 = icmp eq i32 %v5_9b68, -1
  %v7_9e28 = icmp eq i32 %v5_9b68, -1
  br label %dec_label_pc_9de8

dec_label_pc_9de8:                                ; preds = %dec_label_pc_9de8, %dec_label_pc_9e78, %dec_label_pc_9de8.preheader
  %v0_9dec = phi i32 [ %v0_9dec.pre, %dec_label_pc_9de8.preheader ], [ 0, %dec_label_pc_9de8 ], [ %v1_9f14, %dec_label_pc_9e78 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_9dec = icmp eq i32 %v0_9dec, 0
  store i1 %v2_9dec, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_9dec, label %dec_label_pc_9de8, label %dec_label_pc_9df8

dec_label_pc_9df8:                                ; preds = %dec_label_pc_9de8
  br label %dec_label_pc_9dfc

dec_label_pc_9dfc:                                ; preds = %dec_label_pc_9e78, %dec_label_pc_9df8
  %v1_9e10 = phi i32 [ %v1_9f10, %dec_label_pc_9e78 ], [ 0, %dec_label_pc_9df8 ]
  %v5_9e00 = mul i32 %v1_9e10, 24
  %v1_9e04 = load i32, i32* @sb, align 4
  %v2_9e04 = add i32 %v1_9e04, %v5_9e00
  store i32 %v2_9e04, i32* %r3.global-to-local, align 4
  store i32 %v2_9a48, i32* %r4.global-to-local, align 4
  %v1_9e0c = add i32 %v2_9e04, 20
  %v2_9e0c = inttoptr i32 %v1_9e0c to i8*
  %v3_9e0c = load i8, i8* %v2_9e0c, align 1
  %v4_9e0c = zext i8 %v3_9e0c to i32
  store i32 %v4_9e0c, i32* %r2.global-to-local, align 4
  %v4_9e10 = mul i32 %v1_9e10, 4
  %v5_9e10 = add i32 %v4_9e10, %v2_9a48
  %v6_9e10 = inttoptr i32 %v5_9e10 to i32*
  %v7_9e10 = load i32, i32* %v6_9e10, align 4
  store i32 %v7_9e10, i32* @r5, align 4
  %v7_9e14 = icmp eq i8 %v3_9e0c, 31
  store i1 %v7_9e14, i1* %cpsr_z.global-to-local, align 1
  %v1_9e18 = add i32 %v7_9e10, 24
  store i32 %v1_9e18, i32* @r6, align 4
  %v1_9e1c = add i32 %v7_9e10, 44
  store i32 %v1_9e1c, i32* @r7, align 4
  %tmp84 = icmp ult i8 %v3_9e0c, 32
  br i1 %tmp84, label %dec_label_pc_9f24, label %dec_label_pc_9e24

dec_label_pc_9e24:                                ; preds = %dec_label_pc_9dfc
  store i32 %v5_9b68, i32* %r1.global-to-local, align 4
  store i1 %v7_9e28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9e28, label %dec_label_pc_9f84, label %dec_label_pc_9e30

dec_label_pc_9e30:                                ; preds = %dec_label_pc_9f24, %dec_label_pc_9e24
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* %r4.global-to-local, align 4
  %v0_9e38 = load i32, i32* @fp, align 4
  %v9_9e38 = icmp eq i32 %v0_9e38, ptrtoint ([3 x i8]* @global_var_ffff.45 to i32)
  store i1 %v9_9e38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9e38, label %dec_label_pc_9f9c, label %dec_label_pc_9e40

dec_label_pc_9e40:                                ; preds = %dec_label_pc_9f84.dec_label_pc_9e40_crit_edge, %dec_label_pc_9e30
  %v1_9e44 = phi i32 [ %v1_9e44.pre, %dec_label_pc_9f84.dec_label_pc_9e40_crit_edge ], [ ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), %dec_label_pc_9e30 ]
  store i32 %v3_9bc8, i32* %r2.global-to-local, align 4
  %v9_9e44 = icmp eq i32 %v3_9bc8, %v1_9e44
  store i1 %v9_9e44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9e44, label %dec_label_pc_9fc4, label %dec_label_pc_9e4c

dec_label_pc_9e4c:                                ; preds = %dec_label_pc_9f9c.dec_label_pc_9e4c_crit_edge, %dec_label_pc_9e40
  %v1_9e50 = phi i32 [ %v1_9e50.pre, %dec_label_pc_9f9c.dec_label_pc_9e4c_crit_edge ], [ %v1_9e44, %dec_label_pc_9e40 ]
  store i32 %v3_9bcc, i32* %r3.global-to-local, align 4
  %v9_9e50 = icmp eq i32 %v3_9bcc, %v1_9e50
  store i1 %v9_9e50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9e50, label %dec_label_pc_9fd8, label %dec_label_pc_9e58

dec_label_pc_9e58:                                ; preds = %dec_label_pc_9fc4, %dec_label_pc_9e4c
  store i32 %v1_9bc0, i32* @r4, align 4
  store i1 %v2_9fe0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9fe0, label %dec_label_pc_9ff4, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_9e58
  %v1_9e60 = load i32, i32* @r5, align 4
  %v2_9e60 = add i32 %v1_9e60, 16
  %v3_9e60 = inttoptr i32 %v2_9e60 to i32*
  %v4_9e60 = load i32, i32* %v3_9e60, align 4
  store i32 %v4_9e60, i32* %r3.global-to-local, align 4
  %v2_9e64 = load i32, i32* @r6, align 4
  %v3_9e64 = add i32 %v2_9e64, 16
  %v4_9e64 = inttoptr i32 %v3_9e64 to i32*
  store i32 %v4_9e60, i32* %v4_9e64, align 4
  br label %dec_label_pc_9e6c

dec_label_pc_9e6c:                                ; preds = %bb83, %.thread16
  store i32 %v1_9b34, i32* %r1.global-to-local, align 4
  store i1 %v2_9ffc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9ffc, label %dec_label_pc_9e78, label %dec_label_pc_a008

dec_label_pc_9e78:                                ; preds = %dec_label_pc_9e6c, %dec_label_pc_9ff4, %dec_label_pc_a008
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_9e7c = load i32, i32* @r5, align 4
  %v3_9e7c = add i32 %v2_9e7c, 10
  %v4_9e7c = inttoptr i32 %v3_9e7c to i16*
  store i16 0, i16* %v4_9e7c, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_9e84 = load i32, i32* @r5, align 4
  store i32 %v0_9e84, i32* @r0, align 4
  %v2_9e88 = call i32 @function_c848(i32 %v0_9e84, i32 20)
  %v3_9e88 = trunc i32 %v2_9e88 to i16
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_9e90 = load i32, i32* @r5, align 4
  %v4_9e90 = add i32 %v3_9e90, 10
  %v5_9e90 = inttoptr i32 %v4_9e90 to i16*
  store i16 %v3_9e88, i16* %v5_9e90, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_9e98 = load i32, i32* %r3.global-to-local, align 4
  %v1_9e98 = trunc i32 %v0_9e98 to i16
  %v2_9e98 = load i32, i32* @r6, align 4
  %v3_9e98 = add i32 %v2_9e98, 10
  %v4_9e98 = inttoptr i32 %v3_9e98 to i16*
  store i16 %v1_9e98, i16* %v4_9e98, align 2
  %v0_9e9c = load i32, i32* @r6, align 4
  store i32 %v0_9e9c, i32* @r0, align 4
  %v2_9ea0 = call i32 @function_c848(i32 %v0_9e9c, i32 20)
  %v3_9ea0 = trunc i32 %v2_9ea0 to i16
  %v3_9ea4 = load i32, i32* @r6, align 4
  %v4_9ea4 = add i32 %v3_9ea4, 10
  %v5_9ea4 = inttoptr i32 %v4_9ea4 to i16*
  store i16 %v3_9ea0, i16* %v5_9ea4, align 2
  store i32 0, i32* @r4, align 4
  %v0_9eac = load i32, i32* @r7, align 4
  store i32 %v0_9eac, i32* @r1, align 4
  %v1_9eb0 = add i32 %v0_9eac, 4
  %v2_9eb0 = inttoptr i32 %v1_9eb0 to i16*
  %v3_9eb0 = load i16, i16* %v2_9eb0, align 2
  %v4_9eb0 = zext i16 %v3_9eb0 to i32
  store i32 %v4_9eb0, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-124.0.ph, i32* %r3.global-to-local, align 4
  %v3_9eb8 = add i32 %v0_9eac, 6
  %v4_9eb8 = inttoptr i32 %v3_9eb8 to i16*
  store i16 0, i16* %v4_9eb8, align 2
  %v0_9ebc = load i32, i32* @r6, align 4
  %v4_9ec0 = call i32 @function_c898(i32 %v0_9ebc, i32 %v0_9eac, i32 %v4_9eb0, i32 %stack_var_-124.0.ph)
  %v5_9ec0 = trunc i32 %v4_9ec0 to i16
  %v3_9ec4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9ec4, i32* %r2.global-to-local, align 4
  %v3_9ec8 = mul i32 %v3_9ec4, 32
  store i32 %v3_9ec8, i32* %r3.global-to-local, align 4
  %v0_9ecc = load i32, i32* @r5, align 4
  %v1_9ecc = add i32 %v0_9ecc, 16
  %v2_9ecc = inttoptr i32 %v1_9ecc to i32*
  %v3_9ecc = load i32, i32* %v2_9ecc, align 4
  %v5_9ed0 = mul i32 %v3_9ec4, 24
  store i32 %v5_9ed0, i32* %r3.global-to-local, align 4
  %v1_9ed4 = load i32, i32* @sb, align 4
  %v2_9ed4 = add i32 %v1_9ed4, %v5_9ed0
  store i32 %v2_9ed4, i32* @lr, align 4
  %v2_9ed8 = add i32 %v2_9ed4, 4
  %v3_9ed8 = inttoptr i32 %v2_9ed8 to i32*
  store i32 %v3_9ecc, i32* %v3_9ed8, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_9ee0 = load i32, i32* @r7, align 4
  %v4_9ee0 = add i32 %v3_9ee0, 6
  %v5_9ee0 = inttoptr i32 %v4_9ee0 to i16*
  store i16 %v5_9ec0, i16* %v5_9ee0, align 2
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_9ee8 = load i32, i32* %r1.global-to-local, align 4
  %v1_9ee8 = trunc i32 %v0_9ee8 to i16
  %v2_9ee8 = load i32, i32* %r3.global-to-local, align 4
  %v3_9ee8 = load i32, i32* @sb, align 4
  %v4_9ee8 = add i32 %v3_9ee8, %v2_9ee8
  %v5_9ee8 = inttoptr i32 %v4_9ee8 to i16*
  store i16 %v1_9ee8, i16* %v5_9ee8, align 2
  %v0_9eec = load i32, i32* @r4, align 4
  %v1_9eec = trunc i32 %v0_9eec to i16
  %v2_9eec = load i32, i32* @lr, align 4
  %v3_9eec = add i32 %v2_9eec, 2
  %v4_9eec = inttoptr i32 %v3_9eec to i16*
  store i16 %v1_9eec, i16* %v4_9eec, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_9ef4 = load i32, i32* @r5, align 4
  store i32 %v0_9ef4, i32* %r1.global-to-local, align 4
  %v0_9efc = load i32, i32* @r8, align 4
  store i32 %v0_9efc, i32* %r2.global-to-local, align 4
  %v0_9f00 = load i32, i32* @lr, align 4
  %v0_9f04 = load i32, i32* %ip.global-to-local, align 4
  %v6_9f08 = call i32 @function_12af8(i32 %v3_9b7c, i32 %v0_9ef4, i32 %v0_9efc, i32 16384, i32 %v0_9f00, i32 %v0_9f04)
  %v3_9f0c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9f0c, i32* %r3.global-to-local, align 4
  %v1_9f10 = add i32 %v3_9f0c, 1
  %v1_9f14 = load i32, i32* @sl, align 4
  %v9_9f14 = icmp eq i32 %v1_9f10, %v1_9f14
  store i1 %v9_9f14, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_9f10, i32* %stack_var_-44, align 4
  %v6_9f1c = icmp slt i32 %v1_9f10, %v1_9f14
  br i1 %v6_9f1c, label %dec_label_pc_9dfc, label %dec_label_pc_9de8

dec_label_pc_9f24:                                ; preds = %dec_label_pc_9dfc
  %v1_9f24 = add i32 %v2_9e04, 16
  %v2_9f24 = inttoptr i32 %v1_9f24 to i32*
  %v3_9f24 = load i32, i32* %v2_9f24, align 4
  store i32 %v3_9f24, i32* %r4.global-to-local, align 4
  %v0_9f28 = call i32 @function_df2c()
  %v3_9f2c = load i32, i32* %stack_var_-44, align 4
  %v5_9f34 = mul i32 %v3_9f2c, 24
  %v0_9f38 = load i32, i32* %r4.global-to-local, align 4
  %v1_9f38 = and i32 %v0_9f38, 16711680
  store i32 %v1_9f38, i32* %ip.global-to-local, align 4
  %v3_9f3c = udiv i32 %v0_9f38, 16777216
  %v4_9f40 = udiv i32 %v1_9f38, 256
  %v5_9f40 = or i32 %v4_9f40, %v3_9f3c
  store i32 %v5_9f40, i32* %r2.global-to-local, align 4
  %v1_9f44 = load i32, i32* @sb, align 4
  %v2_9f44 = add i32 %v1_9f44, %v5_9f34
  store i32 %v2_9f44, i32* %r1.global-to-local, align 4
  %v1_9f48 = and i32 %v0_9f38, 65280
  store i32 %v1_9f48, i32* %r3.global-to-local, align 4
  %v1_9f4c = add i32 %v2_9f44, 20
  %v2_9f4c = inttoptr i32 %v1_9f4c to i8*
  %v3_9f4c = load i8, i8* %v2_9f4c, align 1
  %v4_9f4c = zext i8 %v3_9f4c to i32
  store i32 %v4_9f4c, i32* %ip.global-to-local, align 4
  %v5_9f54 = call i32 @llvm.bswap.i32(i32 %v0_9f38)
  %v7_9f58 = lshr i32 %v0_9f28, %v4_9f4c
  %v8_9f58 = add i32 %v7_9f58, %v5_9f54
  store i32 %v8_9f58, i32* %r2.global-to-local, align 4
  store i32 %v5_9b68, i32* %r1.global-to-local, align 4
  %v5_9f74 = call i32 @llvm.bswap.i32(i32 %v8_9f58)
  store i32 %v5_9f74, i32* %r3.global-to-local, align 4
  store i1 %v7_9e28, i1* %cpsr_z.global-to-local, align 1
  %v1_9f7c = load i32, i32* @r5, align 4
  %v2_9f7c = add i32 %v1_9f7c, 16
  %v3_9f7c = inttoptr i32 %v2_9f7c to i32*
  store i32 %v5_9f74, i32* %v3_9f7c, align 4
  br i1 %v2_9e28, label %dec_label_pc_9f84, label %dec_label_pc_9e30

dec_label_pc_9f84:                                ; preds = %dec_label_pc_9f24, %dec_label_pc_9e24
  %v0_9f84 = call i32 @function_df2c()
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* %r4.global-to-local, align 4
  %v0_9f90 = load i32, i32* @fp, align 4
  %v9_9f90 = icmp eq i32 %v0_9f90, ptrtoint ([3 x i8]* @global_var_ffff.45 to i32)
  store i1 %v9_9f90, i1* %cpsr_z.global-to-local, align 1
  %v1_9f94 = load i32, i32* @r5, align 4
  %v2_9f94 = add i32 %v1_9f94, 12
  %v3_9f94 = inttoptr i32 %v2_9f94 to i32*
  store i32 %v0_9f84, i32* %v3_9f94, align 4
  br i1 %v9_9f90, label %dec_label_pc_9f9c, label %dec_label_pc_9f84.dec_label_pc_9e40_crit_edge

dec_label_pc_9f84.dec_label_pc_9e40_crit_edge:    ; preds = %dec_label_pc_9f84
  %v1_9e44.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_9e40

dec_label_pc_9f9c:                                ; preds = %dec_label_pc_9f84, %dec_label_pc_9e30
  %v0_9f9c = call i32 @function_df2c()
  %v3_9fa4 = urem i32 %v0_9f9c, 65536
  store i32 %v3_9bc8, i32* %r2.global-to-local, align 4
  %v1_9fb0 = sub nsw i32 999, %v3_9fa4
  store i32 %v1_9fb0, i32* %r3.global-to-local, align 4
  %v1_9fb4 = load i32, i32* %r4.global-to-local, align 4
  %v9_9fb4 = icmp eq i32 %v3_9bc8, %v1_9fb4
  store i1 %v9_9fb4, i1* %cpsr_z.global-to-local, align 1
  %v1_9fb8 = trunc i32 %v0_9f9c to i16
  %v2_9fb8 = load i32, i32* @r5, align 4
  %v3_9fb8 = add i32 %v2_9fb8, 4
  %v4_9fb8 = inttoptr i32 %v3_9fb8 to i16*
  store i16 %v1_9fb8, i16* %v4_9fb8, align 2
  %v0_9fbc = load i32, i32* %r3.global-to-local, align 4
  %v1_9fbc = trunc i32 %v0_9fbc to i16
  %v2_9fbc = load i32, i32* @r6, align 4
  %v3_9fbc = add i32 %v2_9fbc, 4
  %v4_9fbc = inttoptr i32 %v3_9fbc to i16*
  store i16 %v1_9fbc, i16* %v4_9fbc, align 2
  br i1 %v9_9fb4, label %dec_label_pc_9fc4, label %dec_label_pc_9f9c.dec_label_pc_9e4c_crit_edge

dec_label_pc_9f9c.dec_label_pc_9e4c_crit_edge:    ; preds = %dec_label_pc_9f9c
  %v1_9e50.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_9e4c

dec_label_pc_9fc4:                                ; preds = %dec_label_pc_9f9c, %dec_label_pc_9e40
  %v0_9fc4 = call i32 @function_df2c()
  %v1_9fc4 = trunc i32 %v0_9fc4 to i16
  store i32 %v3_9bcc, i32* %r3.global-to-local, align 4
  %v1_9fcc = load i32, i32* %r4.global-to-local, align 4
  %v9_9fcc = icmp eq i32 %v3_9bcc, %v1_9fcc
  store i1 %v9_9fcc, i1* %cpsr_z.global-to-local, align 1
  %v3_9fd0 = load i32, i32* @r5, align 4
  %v4_9fd0 = add i32 %v3_9fd0, 44
  %v5_9fd0 = inttoptr i32 %v4_9fd0 to i16*
  store i16 %v1_9fc4, i16* %v5_9fd0, align 2
  br i1 %v9_9fcc, label %dec_label_pc_9fd8, label %dec_label_pc_9e58

dec_label_pc_9fd8:                                ; preds = %dec_label_pc_9fc4, %dec_label_pc_9e4c
  %v0_9fd8 = call i32 @function_df2c()
  %v1_9fd8 = trunc i32 %v0_9fd8 to i16
  store i32 %v1_9bc0, i32* @r4, align 4
  store i1 %v2_9fe0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9fe0, label %.thread30, label %bb83

.thread30:                                        ; preds = %dec_label_pc_9fd8
  %v3_9fe831 = load i32, i32* @r7, align 4
  %v4_9fe832 = add i32 %v3_9fe831, 2
  %v5_9fe833 = inttoptr i32 %v4_9fe832 to i16*
  store i16 %v1_9fd8, i16* %v5_9fe833, align 2
  br label %dec_label_pc_9ff4

bb83:                                             ; preds = %dec_label_pc_9fd8
  %v1_9fe4 = load i32, i32* @r5, align 4
  %v2_9fe4 = add i32 %v1_9fe4, 16
  %v3_9fe4 = inttoptr i32 %v2_9fe4 to i32*
  %v4_9fe4 = load i32, i32* %v3_9fe4, align 4
  store i32 %v4_9fe4, i32* %r3.global-to-local, align 4
  %v3_9fe8 = load i32, i32* @r7, align 4
  %v4_9fe8 = add i32 %v3_9fe8, 2
  %v5_9fe8 = inttoptr i32 %v4_9fe8 to i16*
  store i16 %v1_9fd8, i16* %v5_9fe8, align 2
  %v1_9fec = load i32, i32* %r3.global-to-local, align 4
  %v2_9fec = load i32, i32* @r6, align 4
  %v3_9fec = add i32 %v2_9fec, 16
  %v4_9fec = inttoptr i32 %v3_9fec to i32*
  store i32 %v1_9fec, i32* %v4_9fec, align 4
  br label %dec_label_pc_9e6c

dec_label_pc_9ff4:                                ; preds = %.thread30, %dec_label_pc_9e58
  %v0_9ff4 = call i32 @function_df2c()
  store i32 %v1_9b34, i32* %r1.global-to-local, align 4
  store i1 %v2_9ffc, i1* %cpsr_z.global-to-local, align 1
  %v1_a000 = load i32, i32* @r6, align 4
  %v2_a000 = add i32 %v1_a000, 16
  %v3_a000 = inttoptr i32 %v2_a000 to i32*
  store i32 %v0_9ff4, i32* %v3_a000, align 4
  br i1 %v2_9ffc, label %dec_label_pc_9e78, label %dec_label_pc_a008

dec_label_pc_a008:                                ; preds = %dec_label_pc_9e6c, %dec_label_pc_9ff4
  %v0_a008 = load i32, i32* @r7, align 4
  %v1_a008 = add i32 %v0_a008, 8
  store i32 %v5_9b14, i32* %r1.global-to-local, align 4
  %v2_a010 = inttoptr i32 %v1_a008 to i16*
  %v3_a010 = call i32 @function_e0c0(i16* %v2_a010, i32 %v5_9b14)
  br label %dec_label_pc_9e78

dec_label_pc_a018:                                ; preds = %dec_label_pc_9b8c
  %v1_a01c = call i32 @function_1239c(i32 %v3_9b7c)
  br label %dec_label_pc_a020

dec_label_pc_a020:                                ; preds = %dec_label_pc_9a2c, %dec_label_pc_a018
  %v1_a028 = phi i32 [ %v3_9b7c, %dec_label_pc_9a2c ], [ %v1_a01c, %dec_label_pc_a018 ]
  store i32 %v3_9a2c, i32* %r4.global-to-local, align 4
  store i32 %v6_9a2c, i32* %r5.global-to-local, align 4
  store i32 %v24_9a2c, i32* %fp.global-to-local, align 4
  ret i32 %v1_a028

dec_label_pc_a02c:                                ; preds = %dec_label_pc_9bb4
  store i32 %v5_9b14, i32* %r2.global-to-local, align 4
  %v1_a034 = add i32 %v5_9b14, 8
  store i32 %v1_a034, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_9de8.preheader

; uselistorder directives
  uselistorder i32 %v1_a034, { 1, 0 }
  uselistorder i16 %v1_9fd8, { 1, 0 }
  uselistorder i32 %v0_9f9c, { 1, 0 }
  uselistorder i32 %v5_9f74, { 1, 0 }
  uselistorder i32 %v0_9f38, { 1, 2, 0, 3 }
  uselistorder i32 %v1_9f14, { 1, 2, 0 }
  uselistorder i32 %v1_9f10, { 2, 0, 3, 1 }
  uselistorder i32 %v3_9ec4, { 1, 0, 2 }
  uselistorder i32 %v0_9eac, { 1, 0, 2, 3 }
  uselistorder i32 %v7_9e10, { 1, 0, 2 }
  uselistorder i1 %v7_9e28, { 2, 1, 0 }
  uselistorder i1 %v2_9ffc, { 2, 3, 1, 0 }
  uselistorder i1 %v2_9fe0, { 2, 3, 1, 0 }
  uselistorder i32 %v0_9d84, { 1, 0 }
  uselistorder i32 %v4_9cf813, { 1, 0 }
  uselistorder i32 %v3_9c1c, { 1, 0 }
  uselistorder i32 %v3_9c00, { 1, 2, 0 }
  uselistorder i32 %v1_9bfc, { 1, 0 }
  uselistorder i32 %v1_9bc0, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v0_9bbc, { 1, 0, 3, 2 }
  uselistorder i32 %v0_9bb8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_9bb4, { 1, 0, 2, 3 }
  uselistorder i1 %v7_9bac, { 1, 0 }
  uselistorder i1 %v7_9b80, { 1, 0 }
  uselistorder i32 %v3_9b7c, { 1, 3, 4, 2, 0 }
  uselistorder i32 %v5_9b68, { 5, 3, 0, 4, 1, 2 }
  uselistorder i32 %v1_9b34, { 2, 1, 3, 0 }
  uselistorder i32 %v5_9b14, { 7, 6, 5, 4, 1, 3, 2, 0 }
  uselistorder i32 %v1_9ac8, { 1, 0 }
  uselistorder i32 %v1_9aa4, { 2, 1, 0 }
  uselistorder i32 %v5_9a9c, { 1, 0 }
  uselistorder i8 %v5_9a80, { 0, 2, 1 }
  uselistorder i32 %v6_9a60, { 1, 0 }
  uselistorder i32 %v2_9a48, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 0, 6, 5, 7, 1, 2, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 26, 25, 27, 28, 30, 29, 31, 32, 34, 33, 36, 35, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_a020, { 1, 0 }
  uselistorder label %dec_label_pc_a008, { 1, 0 }
  uselistorder label %dec_label_pc_9e78, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9de8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9de8.preheader, { 1, 0 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
}

define i32 @function_a048(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_a048:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v3_a048 = load i32, i32* @r4, align 4
  %v27_a048 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @sl, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r8, align 4
  %v2_a064 = call i32 @function_136e4(i32 %arg1, i32 4)
  %v0_a068 = load i32, i32* @r5, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_a064, i32* @fp, align 4
  %v0_a078 = load i32, i32* @r4, align 4
  %v4_a07c = inttoptr i32 %v0_a068 to i32*
  %v5_a07c = call i32 @function_8570(i32 %v0_a078, i32* %v4_a07c, i32 2, i32 0)
  %v1_a088 = urem i32 %v5_a07c, 256
  store i32 %v1_a088, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_a094 = load i32, i32* @r4, align 4
  %v0_a098 = load i32, i32* @r5, align 4
  %v5_a09c = trunc i32 %v5_a07c to i8
  %v7_a0a0 = inttoptr i32 %v0_a098 to i32*
  %v8_a0a0 = call i32 @function_8570(i32 %v0_a094, i32* %v7_a0a0, i32 3, i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32))
  %v0_a0a4 = load i32, i32* @r5, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v8_a0a0, i32* @r7, align 4
  %v0_a0b4 = load i32, i32* @r4, align 4
  %v4_a0b8 = inttoptr i32 %v0_a0a4 to i32*
  %v5_a0b8 = call i32 @function_8570(i32 %v0_a0b4, i32* %v4_a0b8, i32 4, i32 64)
  %v1_a0c0 = urem i32 %v5_a0b8, 256
  store i32 %v1_a0c0, i32* %ip.global-to-local, align 4
  %v0_a0c4 = load i32, i32* @r5, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a0d0 = load i32, i32* @r4, align 4
  %v6_a0d8 = inttoptr i32 %v0_a0c4 to i32*
  %v7_a0d8 = call i32 @function_8570(i32 %v0_a0d0, i32* %v6_a0d8, i32 5, i32 0)
  %v1_a0e4 = urem i32 %v7_a0d8, 256
  store i32 %v1_a0e4, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_a0f0 = load i32, i32* @r4, align 4
  %v0_a0f4 = load i32, i32* @r5, align 4
  %v6_a0fc = inttoptr i32 %v0_a0f4 to i32*
  %v7_a0fc = call i32 @function_8570(i32 %v0_a0f0, i32* %v6_a0fc, i32 6, i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32))
  store i32 27015, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_a10c = load i32, i32* @r5, align 4
  store i32 %v7_a0fc, i32* @r6, align 4
  %v0_a114 = load i32, i32* @r4, align 4
  %v4_a118 = inttoptr i32 %v0_a10c to i32*
  %v5_a118 = call i32 @function_8570(i32 %v0_a114, i32* %v4_a118, i32 7, i32 27015)
  store i32 %v5_a118, i32* @r4, align 4
  %v1_a124 = call i32 @function_1139c(i32 20)
  %v3_a130 = call i32 @function_112d8(i32 20, i32* nonnull %stack_var_-48)
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_a144 = call i32 @function_12b7c(i32 2, i32 3, i32 17)
  %v7_a148 = icmp eq i32 %v3_a144, -1
  store i1 %v7_a148, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_a144, i32* @sb, align 4
  br i1 %v7_a148, label %dec_label_pc_a470, label %dec_label_pc_a154

dec_label_pc_a154:                                ; preds = %dec_label_pc_a048
  store i32 1, i32* %stack_var_-44, align 4
  %v6_a15c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_a15c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_a170 = call i32 @function_12b38(i32 %v3_a144, i32 0, i32 3, i32 %v6_a15c, i32 ptrtoint (i32* @0 to i32))
  %v7_a174 = icmp eq i32 %v5_a170, -1
  store i1 %v7_a174, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a174, label %dec_label_pc_a468, label %dec_label_pc_a17c

dec_label_pc_a17c:                                ; preds = %dec_label_pc_a154
  %v0_a17c = load i32, i32* @r4, align 4
  %v3_a17c = mul i32 %v0_a17c, 65536
  store i32 %v3_a17c, i32* @lr, align 4
  %v0_a180 = load i32, i32* @r7, align 4
  %v0_a184 = load i32, i32* @r6, align 4
  %v3_a184 = mul i32 %v0_a184, 65536
  store i32 %v3_a184, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v3_a18c = urem i32 %v0_a180, 65536
  %v3_a190 = urem i32 %v0_a184, 65536
  store i32 %v3_a190, i32* %r2.global-to-local, align 4
  %v3_a194 = urem i32 %v0_a17c, 65536
  store i32 %v3_a194, i32* %r3.global-to-local, align 4
  %v0_a198 = load i32, i32* @r8, align 4
  %v2_a198 = icmp eq i32 %v0_a198, 0
  store i1 %v2_a198, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_a198, label %dec_label_pc_a2d4.preheader, label %dec_label_pc_a1b0

dec_label_pc_a1b0:                                ; preds = %dec_label_pc_a17c
  %tmp34 = mul i32 %v0_a180, 256
  %v3_a1c0 = and i32 %tmp34, 65280
  store i32 %v3_a1c0, i32* %r3.global-to-local, align 4
  %tmp35 = mul i32 %v0_a184, 256
  %v3_a1c4 = and i32 %tmp35, 65280
  store i32 %v3_a1c4, i32* %r2.global-to-local, align 4
  %tmp36 = mul i32 %v0_a17c, 256
  %v3_a1c8 = and i32 %tmp36, 65280
  %tmp37 = udiv i32 %v0_a180, 256
  %v4_a1cc = urem i32 %tmp37, 256
  %v5_a1cc = or i32 %v4_a1cc, %v3_a1c0
  store i32 %v5_a1cc, i32* @r5, align 4
  %tmp38 = udiv i32 %v0_a184, 256
  %v4_a1d0 = urem i32 %tmp38, 256
  %v5_a1d0 = or i32 %v4_a1d0, %v3_a1c4
  store i32 %v5_a1d0, i32* @r6, align 4
  %tmp39 = udiv i32 %v0_a17c, 256
  %v4_a1d4 = urem i32 %tmp39, 256
  %v5_a1d4 = or i32 %v4_a1d4, %v3_a1c8
  store i32 %v5_a1d4, i32* @r7, align 4
  %v1_a25c = trunc i32 %v5_a0b8 to i8
  br label %dec_label_pc_a1d8

dec_label_pc_a1d8:                                ; preds = %.thread, %dec_label_pc_a1b0
  %v2_a1e0 = call i32 @function_136e4(i32 128, i32 1)
  %v3_a1e4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a1e4, i32* %r2.global-to-local, align 4
  %v5_a1ec = mul i32 %v3_a1e4, 24
  store i32 %v5_a1ec, i32* %r3.global-to-local, align 4
  %v1_a1f0 = load i32, i32* @fp, align 4
  %v2_a1f0 = load i32, i32* @r4, align 4
  %v5_a1f0 = mul i32 %v2_a1f0, 4
  %v6_a1f0 = add i32 %v5_a1f0, %v1_a1f0
  %v7_a1f0 = inttoptr i32 %v6_a1f0 to i32*
  store i32 %v2_a1e0, i32* %v7_a1f0, align 4
  %v0_a1f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_a1f4 = load i32, i32* @sl, align 4
  %v2_a1f4 = add i32 %v1_a1f4, %v0_a1f4
  store i32 %v2_a1f4, i32* %r3.global-to-local, align 4
  %v0_a1f8 = load i32, i32* @fp, align 4
  %v1_a1f8 = load i32, i32* %r2.global-to-local, align 4
  %v4_a1f8 = mul i32 %v1_a1f8, 4
  %v5_a1f8 = add i32 %v4_a1f8, %v0_a1f8
  %v6_a1f8 = inttoptr i32 %v5_a1f8 to i32*
  %v7_a1f8 = load i32, i32* %v6_a1f8, align 4
  store i32 %v7_a1f8, i32* @lr, align 4
  %v1_a200 = inttoptr i32 %v7_a1f8 to i8*
  %v2_a200 = load i8, i8* %v1_a200, align 1
  %tmp = urem i8 %v2_a200, 16
  %v1_a204 = zext i8 %tmp to i32
  %v1_a208 = or i32 %v1_a204, 64
  store i32 %v1_a208, i32* %r3.global-to-local, align 4
  %v1_a210 = trunc i32 %v1_a208 to i8
  store i8 %v1_a210, i8* %v1_a200, align 1
  %v0_a214 = load i32, i32* @lr, align 4
  %v1_a214 = inttoptr i32 %v0_a214 to i8*
  %v2_a214 = load i8, i8* %v1_a214, align 1
  %v1_a218 = and i8 %v2_a214, -16
  %v1_a21c = or i8 %v1_a218, 5
  store i8 %v1_a21c, i8* %v1_a214, align 1
  %v2_a228 = load i32, i32* @lr, align 4
  %v3_a228 = add i32 %v2_a228, 1
  %v4_a228 = inttoptr i32 %v3_a228 to i8*
  store i8 %v5_a09c, i8* %v4_a228, align 1
  %v3_a22c = load i32, i32* %stack_var_-48, align 4
  %v3_a230 = mul i32 %v3_a22c, 65536
  %v1_a234 = add i32 %v3_a230, 2097152
  %v3_a238 = udiv i32 %v1_a234, 256
  %v4_a240 = udiv i32 %v1_a234, 16777216
  %v5_a240 = or i32 %v3_a238, %v4_a240
  %v3_a244 = urem i32 %v3_a22c, 65536
  store i32 %v3_a244, i32* %r2.global-to-local, align 4
  %v1_a248 = trunc i32 %v5_a240 to i16
  %v2_a248 = load i32, i32* @lr, align 4
  %v3_a248 = add i32 %v2_a248, 2
  %v4_a248 = inttoptr i32 %v3_a248 to i16*
  store i16 %v1_a248, i16* %v4_a248, align 2
  %v0_a24c = load i32, i32* %r2.global-to-local, align 4
  %v1_a24c = mul i32 %v0_a24c, 65536
  %v3_a254 = add i32 %v1_a24c, 786432
  store i32 %v3_a254, i32* %r2.global-to-local, align 4
  store i32 %v1_a0e4, i32* %ip.global-to-local, align 4
  %v2_a25c = load i32, i32* @lr, align 4
  %v3_a25c = add i32 %v2_a25c, 8
  %v4_a25c = inttoptr i32 %v3_a25c to i8*
  store i8 %v1_a25c, i8* %v4_a25c, align 1
  %v0_a260 = load i32, i32* %r2.global-to-local, align 4
  %v3_a260 = udiv i32 %v0_a260, 256
  %v1_a264 = and i32 %v3_a260, 65280
  %v0_a268 = load i32, i32* %ip.global-to-local, align 4
  %v2_a268 = icmp eq i32 %v0_a268, 0
  store i1 %v2_a268, i1* %cpsr_z.global-to-local, align 1
  %v4_a26c = udiv i32 %v0_a260, 16777216
  %v5_a26c = or i32 %v1_a264, %v4_a26c
  store i32 %v5_a26c, i32* %ip.global-to-local, align 4
  %v2_a274 = load i32, i32* @lr, align 4
  %v3_a274 = add i32 %v2_a274, 9
  %v4_a274 = inttoptr i32 %v3_a274 to i8*
  store i8 17, i8* %v4_a274, align 1
  store i32 ptrtoint (i32* @global_var_1a2d4.47 to i32), i32* %r3.global-to-local, align 4
  %v0_a27c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a27c, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_a1d8
  store i32 64, i32* %r2.global-to-local, align 4
  %v3_a280 = load i32, i32* @lr, align 4
  %v4_a280 = add i32 %v3_a280, 6
  %v5_a280 = inttoptr i32 %v4_a280 to i16*
  store i16 64, i16* %v5_a280, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_a1d8, %bb
  %v2_a284 = load i32, i32* @global_var_1a2d4.47, align 4
  %v1_a288 = load i32, i32* @lr, align 4
  %v2_a288 = add i32 %v1_a288, 12
  %v3_a288 = inttoptr i32 %v2_a288 to i32*
  store i32 %v2_a284, i32* %v3_a288, align 4
  store i32 %v2_a1f4, i32* %r2.global-to-local, align 4
  %v1_a290 = add i32 %v2_a1f4, 16
  %v2_a290 = inttoptr i32 %v1_a290 to i32*
  %v3_a290 = load i32, i32* %v2_a290, align 4
  %v1_a294 = load i32, i32* @lr, align 4
  %v2_a294 = add i32 %v1_a294, 16
  %v3_a294 = inttoptr i32 %v2_a294 to i32*
  store i32 %v3_a290, i32* %v3_a294, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_a29c = load i32, i32* @lr, align 4
  %v1_a29c = add i32 %v0_a29c, 20
  store i32 %v1_a29c, i32* %r4.global-to-local, align 4
  %v2_a2a0 = add i32 %v0_a29c, 28
  %v3_a2a0 = inttoptr i32 %v2_a2a0 to i32*
  store i32 -1, i32* %v3_a2a0, align 4
  %v0_a2a4 = load i32, i32* @r5, align 4
  %v1_a2a4 = trunc i32 %v0_a2a4 to i16
  %v2_a2a4 = load i32, i32* @lr, align 4
  %v3_a2a4 = add i32 %v2_a2a4, 4
  %v4_a2a4 = inttoptr i32 %v3_a2a4 to i16*
  store i16 %v1_a2a4, i16* %v4_a2a4, align 2
  %v0_a2a8 = load i32, i32* @lr, align 4
  %v1_a2a8 = add i32 %v0_a2a8, 32
  %v0_a2ac = load i32, i32* %ip.global-to-local, align 4
  %v1_a2ac = trunc i32 %v0_a2ac to i16
  %v2_a2ac = load i32, i32* %r4.global-to-local, align 4
  %v3_a2ac = add i32 %v2_a2ac, 4
  %v4_a2ac = inttoptr i32 %v3_a2ac to i16*
  store i16 %v1_a2ac, i16* %v4_a2ac, align 2
  %v0_a2b0 = load i32, i32* @r7, align 4
  %v1_a2b0 = trunc i32 %v0_a2b0 to i16
  %v2_a2b0 = load i32, i32* %r4.global-to-local, align 4
  %v3_a2b0 = add i32 %v2_a2b0, 2
  %v4_a2b0 = inttoptr i32 %v3_a2b0 to i16*
  store i16 %v1_a2b0, i16* %v4_a2b0, align 2
  %v0_a2b4 = load i32, i32* @r6, align 4
  %v1_a2b4 = trunc i32 %v0_a2b4 to i16
  %v2_a2b4 = load i32, i32* @lr, align 4
  %v3_a2b4 = add i32 %v2_a2b4, 20
  %v4_a2b4 = inttoptr i32 %v3_a2b4 to i16*
  store i16 %v1_a2b4, i16* %v4_a2b4, align 2
  %v3_a2b8 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_a2b8, i32* %r2.global-to-local, align 4
  %v3_a2bc = call i32 @function_1194c(i32 %v1_a2a8, i32 %v3_a130, i32 %v3_a2b8)
  %v3_a2c0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a2c0, i32* %r3.global-to-local, align 4
  %v1_a2c4 = add i32 %v3_a2c0, 1
  store i32 %v1_a2c4, i32* @r4, align 4
  %v1_a2c8 = load i32, i32* @r8, align 4
  %v9_a2c8 = icmp eq i32 %v1_a2c4, %v1_a2c8
  store i1 %v9_a2c8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a2c4, i32* %stack_var_-44, align 4
  %v5_a2d0 = icmp slt i32 %v1_a2c4, %v1_a2c8
  br i1 %v5_a2d0, label %dec_label_pc_a1d8, label %dec_label_pc_a2d4.preheader

dec_label_pc_a2d4.preheader:                      ; preds = %.thread, %dec_label_pc_a17c
  %v0_a2d8.ph = phi i32 [ 0, %dec_label_pc_a17c ], [ %v1_a2c8, %.thread ]
  %v9_a314 = icmp eq i32 %v3_a18c, ptrtoint ([3 x i8]* @global_var_ffff.45 to i32)
  br label %dec_label_pc_a2d4

dec_label_pc_a2d4:                                ; preds = %dec_label_pc_a2d4, %dec_label_pc_a3c0, %dec_label_pc_a2d4.preheader
  %v0_a2d8 = phi i32 [ %v0_a2d8.ph, %dec_label_pc_a2d4.preheader ], [ 0, %dec_label_pc_a3c0 ], [ 0, %dec_label_pc_a2d4 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_a2d8 = icmp eq i32 %v0_a2d8, 0
  store i1 %v2_a2d8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_a2d8, label %dec_label_pc_a2d4, label %dec_label_pc_a2e4

dec_label_pc_a2e4:                                ; preds = %dec_label_pc_a2d4, %dec_label_pc_a3c0
  br label %dec_label_pc_a2e8

dec_label_pc_a2e8:                                ; preds = %dec_label_pc_a334, %dec_label_pc_a2e4
  %v1_a2f8 = phi i32 [ %v1_a3b0, %dec_label_pc_a334 ], [ 0, %dec_label_pc_a2e4 ]
  %v5_a2ec = mul i32 %v1_a2f8, 24
  %v1_a2f0 = load i32, i32* @sl, align 4
  %v2_a2f0 = add i32 %v1_a2f0, %v5_a2ec
  store i32 %v2_a2f0, i32* %r3.global-to-local, align 4
  %v1_a2f4 = add i32 %v2_a2f0, 20
  %v2_a2f4 = inttoptr i32 %v1_a2f4 to i8*
  %v3_a2f4 = load i8, i8* %v2_a2f4, align 1
  %v4_a2f4 = zext i8 %v3_a2f4 to i32
  store i32 %v4_a2f4, i32* %r2.global-to-local, align 4
  %v0_a2f8 = load i32, i32* @fp, align 4
  %v4_a2f8 = mul i32 %v1_a2f8, 4
  %v5_a2f8 = add i32 %v0_a2f8, %v4_a2f8
  %v6_a2f8 = inttoptr i32 %v5_a2f8 to i32*
  %v7_a2f8 = load i32, i32* %v6_a2f8, align 4
  store i32 %v7_a2f8, i32* @r5, align 4
  %v7_a300 = icmp eq i8 %v3_a2f4, 31
  store i1 %v7_a300, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* @r7, align 4
  %v1_a308 = add i32 %v7_a2f8, 20
  store i32 %v1_a308, i32* @r6, align 4
  %tmp40 = icmp ult i8 %v3_a2f4, 32
  br i1 %tmp40, label %dec_label_pc_a3d4, label %dec_label_pc_a310

dec_label_pc_a310:                                ; preds = %dec_label_pc_a2e8
  store i32 %v3_a18c, i32* %r3.global-to-local, align 4
  store i1 %v9_a314, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a314, label %dec_label_pc_a434, label %dec_label_pc_a31c

dec_label_pc_a31c:                                ; preds = %dec_label_pc_a3d4, %dec_label_pc_a310
  %v1_a320 = phi i32 [ %v1_a42c, %dec_label_pc_a3d4 ], [ ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), %dec_label_pc_a310 ]
  store i32 %v3_a190, i32* %ip.global-to-local, align 4
  %v9_a320 = icmp eq i32 %v3_a190, %v1_a320
  store i1 %v9_a320, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a320, label %dec_label_pc_a448, label %dec_label_pc_a328

dec_label_pc_a328:                                ; preds = %dec_label_pc_a434.dec_label_pc_a328_crit_edge, %dec_label_pc_a31c
  %v1_a32c = phi i32 [ %v1_a32c.pre, %dec_label_pc_a434.dec_label_pc_a328_crit_edge ], [ %v1_a320, %dec_label_pc_a31c ]
  %v9_a32c = icmp eq i32 %v3_a194, %v1_a32c
  store i1 %v9_a32c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a32c, label %dec_label_pc_a45c, label %dec_label_pc_a334

dec_label_pc_a334:                                ; preds = %dec_label_pc_a448, %dec_label_pc_a328, %dec_label_pc_a45c
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_a338 = load i32, i32* @r5, align 4
  %v3_a338 = add i32 %v2_a338, 10
  %v4_a338 = inttoptr i32 %v3_a338 to i16*
  store i16 0, i16* %v4_a338, align 2
  %v0_a340 = load i32, i32* @r5, align 4
  store i32 %v0_a340, i32* @r0, align 4
  %v2_a344 = call i32 @function_c848(i32 %v0_a340, i32 20)
  %v3_a344 = trunc i32 %v2_a344 to i16
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_a34c = load i32, i32* @r5, align 4
  %v4_a34c = add i32 %v3_a34c, 10
  %v5_a34c = inttoptr i32 %v4_a34c to i16*
  store i16 %v3_a344, i16* %v5_a34c, align 2
  %v0_a350 = load i32, i32* %r3.global-to-local, align 4
  %v1_a350 = trunc i32 %v0_a350 to i16
  %v2_a350 = load i32, i32* @r6, align 4
  %v3_a350 = add i32 %v2_a350, 6
  %v4_a350 = inttoptr i32 %v3_a350 to i16*
  store i16 %v1_a350, i16* %v4_a350, align 2
  %v3_a354 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_a354, i32* %r3.global-to-local, align 4
  %v0_a358 = load i32, i32* @r6, align 4
  store i32 %v0_a358, i32* @r1, align 4
  %v1_a35c = add i32 %v0_a358, 4
  %v2_a35c = inttoptr i32 %v1_a35c to i16*
  %v3_a35c = load i16, i16* %v2_a35c, align 2
  %v4_a35c = zext i16 %v3_a35c to i32
  store i32 %v4_a35c, i32* %r2.global-to-local, align 4
  %v1_a360 = add i32 %v3_a354, 12
  store i32 %v1_a360, i32* %r3.global-to-local, align 4
  %v0_a364 = load i32, i32* @r5, align 4
  %v4_a368 = call i32 @function_c898(i32 %v0_a364, i32 %v0_a358, i32 %v4_a35c, i32 %v1_a360)
  %v5_a368 = trunc i32 %v4_a368 to i16
  %v3_a36c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a36c, i32* %r3.global-to-local, align 4
  %v3_a370 = mul i32 %v3_a36c, 32
  store i32 %v3_a370, i32* %lr.global-to-local, align 4
  %v3_a374 = load i32, i32* @r6, align 4
  %v4_a374 = add i32 %v3_a374, 6
  %v5_a374 = inttoptr i32 %v4_a374 to i16*
  store i16 %v5_a368, i16* %v5_a374, align 2
  %v0_a378 = load i32, i32* %lr.global-to-local, align 4
  %v1_a378 = load i32, i32* %r3.global-to-local, align 4
  %tmp41 = mul i32 %v1_a378, -8
  %v5_a378 = add i32 %v0_a378, %tmp41
  store i32 %v5_a378, i32* %lr.global-to-local, align 4
  %v0_a37c = load i32, i32* @r6, align 4
  %v1_a37c = add i32 %v0_a37c, 2
  %v2_a37c = inttoptr i32 %v1_a37c to i16*
  %v3_a37c = load i16, i16* %v2_a37c, align 2
  %v3_a380 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_a380, i32* %r2.global-to-local, align 4
  %v1_a384 = load i32, i32* @sl, align 4
  %v2_a384 = add i32 %v1_a384, %v5_a378
  store i32 %v2_a384, i32* @lr, align 4
  %v3_a388 = add i32 %v2_a384, 2
  %v4_a388 = inttoptr i32 %v3_a388 to i16*
  store i16 %v3_a37c, i16* %v4_a388, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_a394 = load i32, i32* @r5, align 4
  %v0_a398 = load i32, i32* %r2.global-to-local, align 4
  %v1_a398 = add i32 %v0_a398, 32
  store i32 %v1_a398, i32* %r2.global-to-local, align 4
  %v0_a39c = load i32, i32* @sb, align 4
  %v0_a3a0 = load i32, i32* @lr, align 4
  %v6_a3a8 = call i32 @function_12af8(i32 %v0_a39c, i32 %v0_a394, i32 %v1_a398, i32 16384, i32 %v0_a3a0, i32 16)
  %v3_a3ac = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a3ac, i32* %r3.global-to-local, align 4
  %v1_a3b0 = add i32 %v3_a3ac, 1
  %v1_a3b4 = load i32, i32* @r8, align 4
  %v9_a3b4 = icmp eq i32 %v1_a3b0, %v1_a3b4
  store i1 %v9_a3b4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a3b0, i32* %stack_var_-44, align 4
  %v5_a3bc = icmp slt i32 %v1_a3b0, %v1_a3b4
  br i1 %v5_a3bc, label %dec_label_pc_a2e8, label %dec_label_pc_a3c0

dec_label_pc_a3c0:                                ; preds = %dec_label_pc_a334
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_a3c4 = icmp eq i32 %v1_a3b4, 0
  store i1 %v2_a3c4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_a3c4, label %dec_label_pc_a2d4, label %dec_label_pc_a2e4

dec_label_pc_a3d4:                                ; preds = %dec_label_pc_a2e8
  %v1_a3d4 = add i32 %v2_a2f0, 16
  %v2_a3d4 = inttoptr i32 %v1_a3d4 to i32*
  %v3_a3d4 = load i32, i32* %v2_a3d4, align 4
  store i32 %v3_a3d4, i32* @r4, align 4
  %v0_a3d8 = call i32 @function_df2c()
  %v3_a3dc = load i32, i32* %stack_var_-44, align 4
  %v5_a3e4 = mul i32 %v3_a3dc, 24
  %v0_a3e8 = load i32, i32* @r4, align 4
  %v1_a3e8 = and i32 %v0_a3e8, 16711680
  store i32 %v1_a3e8, i32* %ip.global-to-local, align 4
  %v3_a3ec = udiv i32 %v0_a3e8, 16777216
  %v4_a3f0 = udiv i32 %v1_a3e8, 256
  %v5_a3f0 = or i32 %v4_a3f0, %v3_a3ec
  store i32 %v5_a3f0, i32* %r2.global-to-local, align 4
  %v1_a3f4 = load i32, i32* @sl, align 4
  %v2_a3f4 = add i32 %v1_a3f4, %v5_a3e4
  %v1_a3f8 = and i32 %v0_a3e8, 65280
  store i32 %v1_a3f8, i32* %r3.global-to-local, align 4
  %v1_a3fc = add i32 %v2_a3f4, 20
  %v2_a3fc = inttoptr i32 %v1_a3fc to i8*
  %v3_a3fc = load i8, i8* %v2_a3fc, align 1
  %v4_a3fc = zext i8 %v3_a3fc to i32
  store i32 %v4_a3fc, i32* %ip.global-to-local, align 4
  %v5_a404 = call i32 @llvm.bswap.i32(i32 %v0_a3e8)
  %v7_a408 = lshr i32 %v0_a3d8, %v4_a3fc
  %v8_a408 = add i32 %v7_a408, %v5_a404
  store i32 %v8_a408, i32* %r2.global-to-local, align 4
  %v5_a420 = call i32 @llvm.bswap.i32(i32 %v8_a408)
  %v1_a424 = load i32, i32* @r5, align 4
  %v2_a424 = add i32 %v1_a424, 16
  %v3_a424 = inttoptr i32 %v2_a424 to i32*
  store i32 %v5_a420, i32* %v3_a424, align 4
  store i32 %v3_a18c, i32* %r3.global-to-local, align 4
  %v1_a42c = load i32, i32* @r7, align 4
  %v9_a42c = icmp eq i32 %v3_a18c, %v1_a42c
  store i1 %v9_a42c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a42c, label %dec_label_pc_a434, label %dec_label_pc_a31c

dec_label_pc_a434:                                ; preds = %dec_label_pc_a3d4, %dec_label_pc_a310
  %v0_a434 = call i32 @function_df2c()
  %v1_a434 = trunc i32 %v0_a434 to i16
  store i32 %v3_a190, i32* %ip.global-to-local, align 4
  %v1_a43c = load i32, i32* @r7, align 4
  %v9_a43c = icmp eq i32 %v3_a190, %v1_a43c
  store i1 %v9_a43c, i1* %cpsr_z.global-to-local, align 1
  %v3_a440 = load i32, i32* @r5, align 4
  %v4_a440 = add i32 %v3_a440, 4
  %v5_a440 = inttoptr i32 %v4_a440 to i16*
  store i16 %v1_a434, i16* %v5_a440, align 2
  br i1 %v9_a43c, label %dec_label_pc_a448, label %dec_label_pc_a434.dec_label_pc_a328_crit_edge

dec_label_pc_a434.dec_label_pc_a328_crit_edge:    ; preds = %dec_label_pc_a434
  %v1_a32c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_a328

dec_label_pc_a448:                                ; preds = %dec_label_pc_a434, %dec_label_pc_a31c
  %v0_a448 = call i32 @function_df2c()
  %v1_a448 = trunc i32 %v0_a448 to i16
  %v1_a450 = load i32, i32* @r7, align 4
  %v9_a450 = icmp eq i32 %v3_a194, %v1_a450
  store i1 %v9_a450, i1* %cpsr_z.global-to-local, align 1
  %v3_a454 = load i32, i32* @r5, align 4
  %v4_a454 = add i32 %v3_a454, 20
  %v5_a454 = inttoptr i32 %v4_a454 to i16*
  store i16 %v1_a448, i16* %v5_a454, align 2
  br i1 %v9_a450, label %dec_label_pc_a45c, label %dec_label_pc_a334

dec_label_pc_a45c:                                ; preds = %dec_label_pc_a448, %dec_label_pc_a328
  %v0_a45c = call i32 @function_df2c()
  %v1_a45c = trunc i32 %v0_a45c to i16
  %v3_a460 = load i32, i32* @r6, align 4
  %v4_a460 = add i32 %v3_a460, 2
  %v5_a460 = inttoptr i32 %v4_a460 to i16*
  store i16 %v1_a45c, i16* %v5_a460, align 2
  br label %dec_label_pc_a334

dec_label_pc_a468:                                ; preds = %dec_label_pc_a154
  %v0_a468 = load i32, i32* @sb, align 4
  %v1_a46c = call i32 @function_1239c(i32 %v0_a468)
  br label %dec_label_pc_a470

dec_label_pc_a470:                                ; preds = %dec_label_pc_a048, %dec_label_pc_a468
  %v1_a478 = phi i32 [ %v3_a144, %dec_label_pc_a048 ], [ %v1_a46c, %dec_label_pc_a468 ]
  store i32 %v3_a048, i32* %r4.global-to-local, align 4
  store i32 %v27_a048, i32* %lr.global-to-local, align 4
  ret i32 %v1_a478

; uselistorder directives
  uselistorder i32 %v1_a42c, { 1, 0 }
  uselistorder i32 %v0_a3e8, { 1, 2, 0, 3 }
  uselistorder i32 %v1_a3b0, { 2, 0, 3, 1 }
  uselistorder i32 %v5_a378, { 1, 0 }
  uselistorder i32 %v1_a2c4, { 1, 0, 2, 3 }
  uselistorder i32 %v3_a22c, { 1, 0 }
  uselistorder i32 %v3_a1c4, { 1, 0 }
  uselistorder i32 %v3_a1c0, { 1, 0 }
  uselistorder i32 %v3_a18c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_a184, { 1, 0, 3, 2 }
  uselistorder i32 %v0_a180, { 1, 0, 2 }
  uselistorder i32 %v0_a17c, { 1, 0, 3, 2 }
  uselistorder i1 %v7_a174, { 1, 0 }
  uselistorder i1 %v7_a148, { 1, 0 }
  uselistorder i32 %v3_a144, { 1, 2, 3, 0 }
  uselistorder i32 %v1_a0e4, { 1, 0 }
  uselistorder i32 %v5_a0b8, { 1, 0 }
  uselistorder i32 %v5_a07c, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 4, 0 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_a470, { 1, 0 }
  uselistorder label %dec_label_pc_a334, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a2e4, { 1, 0 }
  uselistorder label %dec_label_pc_a2d4, { 1, 0, 2 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_a480(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_a480:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-2124 = alloca i32, align 4
  %v18_a480 = load i32, i32* @sb, align 4
  %v27_a480 = load i32, i32* @lr, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r8, align 4
  %v2_a4a0 = call i32 @function_136e4(i32 %arg1, i32 4)
  %v0_a4a4 = load i32, i32* @r5, align 4
  store i32 %v0_a4a4, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_a4b0 = load i32, i32* @r4, align 4
  store i32 %v0_a4b0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_a4b8 = inttoptr i32 %v0_a4a4 to i32*
  %v6_a4b8 = call i32 @function_8570(i32 %v0_a4b0, i32* %v5_a4b8, i32 2, i32 0)
  %v1_a4c4 = urem i32 %v6_a4b8, 256
  store i32 %v1_a4c4, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_a4d0 = load i32, i32* @r4, align 4
  store i32 %v0_a4d0, i32* %r0.global-to-local, align 4
  %v0_a4d4 = load i32, i32* @r5, align 4
  store i32 %v0_a4d4, i32* %r1.global-to-local, align 4
  %v7_a4dc = inttoptr i32 %v0_a4d4 to i32*
  %v8_a4dc = call i32 @function_8570(i32 %v0_a4d0, i32* %v7_a4dc, i32 3, i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32))
  %v0_a4e0 = load i32, i32* @r5, align 4
  store i32 %v0_a4e0, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_a4ec = load i32, i32* @r4, align 4
  store i32 %v0_a4ec, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v5_a4f4 = inttoptr i32 %v0_a4e0 to i32*
  %v6_a4f4 = call i32 @function_8570(i32 %v0_a4ec, i32* %v5_a4f4, i32 4, i32 64)
  %v1_a4fc = urem i32 %v6_a4f4, 256
  store i32 %v1_a4fc, i32* %ip.global-to-local, align 4
  %v0_a500 = load i32, i32* @r5, align 4
  store i32 %v0_a500, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a50c = load i32, i32* @r4, align 4
  store i32 %v0_a50c, i32* %r0.global-to-local, align 4
  %v6_a514 = inttoptr i32 %v0_a500 to i32*
  %v7_a514 = call i32 @function_8570(i32 %v0_a50c, i32* %v6_a514, i32 5, i32 0)
  %v1_a520 = urem i32 %v7_a514, 256
  store i32 %v1_a520, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_a52c = load i32, i32* @r4, align 4
  store i32 %v0_a52c, i32* %r0.global-to-local, align 4
  %v0_a530 = load i32, i32* @r5, align 4
  store i32 %v0_a530, i32* %r1.global-to-local, align 4
  %v6_a538 = inttoptr i32 %v0_a530 to i32*
  %v7_a538 = call i32 @function_8570(i32 %v0_a52c, i32* %v6_a538, i32 6, i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32))
  %v0_a53c = load i32, i32* @r5, align 4
  store i32 %v0_a53c, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_a548 = load i32, i32* @r4, align 4
  store i32 %v0_a548, i32* %r0.global-to-local, align 4
  store i32 53, i32* %r3.global-to-local, align 4
  %v5_a550 = inttoptr i32 %v0_a53c to i32*
  %v6_a550 = call i32 @function_8570(i32 %v0_a548, i32* %v5_a550, i32 7, i32 53)
  %v0_a55c = load i32, i32* @r5, align 4
  store i32 %v0_a55c, i32* %r1.global-to-local, align 4
  %v0_a560 = load i32, i32* @r4, align 4
  store i32 %v0_a560, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* %r3.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v6_a56c = inttoptr i32 %v0_a55c to i32*
  %v7_a56c = call i32 @function_8570(i32 %v0_a560, i32* %v6_a56c, i32 9, i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32))
  %v0_a570 = load i32, i32* @r5, align 4
  store i32 %v0_a570, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_a57c = load i32, i32* @r4, align 4
  store i32 %v0_a57c, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v5_a584 = inttoptr i32 %v0_a570 to i32*
  %v6_a584 = call i32 @function_8570(i32 %v0_a57c, i32* %v5_a584, i32 0, i32 12)
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a590 = load i32, i32* @r5, align 4
  store i32 %v0_a590, i32* %r1.global-to-local, align 4
  store i32 %v6_a584, i32* %sb.global-to-local, align 4
  %v0_a598 = load i32, i32* @r4, align 4
  store i32 %v0_a598, i32* %r0.global-to-local, align 4
  %v4_a59c = inttoptr i32 %v0_a590 to i32*
  %v5_a59c = call i32 @function_8190(i32 %v0_a598, i32* %v4_a59c, i32 8, i32 0)
  store i32 %v5_a59c, i32* @r7, align 4
  store i32 21, i32* %r0.global-to-local, align 4
  %v1_a5a8 = call i32 @function_1139c(i32 21)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 21, i32* %r0.global-to-local, align 4
  %v3_a5b4 = call i32 @function_112d8(i32 21, i32* null)
  store i32 %v3_a5b4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_a5bc = call i32 @function_11fa8(i32 %v3_a5b4, i32 0)
  store i32 %v2_a5bc, i32* @r4, align 4
  store i32 21, i32* %r0.global-to-local, align 4
  %v1_a5c8 = call i32 @function_112fc(i32 21)
  store i32 %v1_a5c8, i32* %r0.global-to-local, align 4
  %v0_a5cc = load i32, i32* @r4, align 4
  %v1_a5cc = icmp slt i32 %v0_a5cc, 0
  %v2_a5cc = icmp eq i32 %v0_a5cc, 0
  store i1 %v2_a5cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_a5cc, label %dec_label_pc_aac4, label %dec_label_pc_a5d4

dec_label_pc_a5d4:                                ; preds = %dec_label_pc_a480
  %v2_a5d8 = ptrtoint i32* %stack_var_-2124 to i32
  store i32 %v2_a5d8, i32* @sl, align 4
  store i32 2048, i32* %r2.global-to-local, align 4
  store i32 %v2_a5d8, i32* %r1.global-to-local, align 4
  store i32 %v0_a5cc, i32* %r0.global-to-local, align 4
  %v1_a5e8 = call i32 @function_12134(i32 %v0_a5cc)
  store i32 %v1_a5e8, i32* @r5, align 4
  %v0_a5f0 = load i32, i32* @r4, align 4
  store i32 %v0_a5f0, i32* %r0.global-to-local, align 4
  %v1_a5f4 = call i32 @function_1239c(i32 %v0_a5f0)
  store i32 22, i32* %r0.global-to-local, align 4
  %v1_a5fc = call i32 @function_1139c(i32 22)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v3_a608 = call i32 @function_112d8(i32 22, i32* null)
  %v0_a60c = load i32, i32* @r5, align 4
  store i32 %v0_a60c, i32* @r1, align 4
  store i32 %v3_a608, i32* %r2.global-to-local, align 4
  store i32 %v2_a5d8, i32* %r0.global-to-local, align 4
  %v3_a618 = bitcast i32* %stack_var_-2124 to i8*
  %v4_a618 = call i32 @function_11c2c(i8* %v3_a618, i32 %v0_a60c, i32 %v3_a608)
  store i32 %v4_a618, i32* @r6, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v1_a624 = call i32 @function_112fc(i32 22)
  store i32 %v1_a624, i32* %r0.global-to-local, align 4
  %v0_a628 = load i32, i32* @r6, align 4
  %v7_a628 = icmp eq i32 %v0_a628, -1
  store i1 %v7_a628, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a628, label %dec_label_pc_aac4, label %dec_label_pc_a630

dec_label_pc_a630:                                ; preds = %dec_label_pc_a5d4
  %v0_a630 = load i32, i32* @r5, align 4
  %v9_a630 = icmp eq i32 %v0_a630, %v0_a628
  store i1 %v9_a630, i1* %cpsr_z.global-to-local, align 1
  %v7_a634 = icmp sgt i32 %v0_a630, %v0_a628
  br i1 %v7_a634, label %dec_label_pc_a638, label %dec_label_pc_aac4

dec_label_pc_a638:                                ; preds = %dec_label_pc_a630
  %v0_a638 = load i32, i32* @sl, align 4
  %v2_a638 = add i32 %v0_a638, %v0_a628
  store i32 %v2_a638, i32* %r2.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_a664 = add i32 %v0_a630, -1
  br label %dec_label_pc_a65c

dec_label_pc_a648:                                ; preds = %dec_label_pc_a684, %bb103
  %v9_a648 = icmp eq i32 %v1_a664, %v0_a650
  store i1 %v9_a648, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a648, label %dec_label_pc_a690, label %dec_label_pc_a650

dec_label_pc_a650:                                ; preds = %dec_label_pc_a674, %dec_label_pc_a648, %bb
  %v0_a68029 = phi i32 [ %v0_a680, %dec_label_pc_a674 ], [ %v0_a68030, %dec_label_pc_a648 ], [ %v0_a680, %bb ]
  %v0_a66025 = phi i32 [ 0, %dec_label_pc_a674 ], [ %v0_a66026, %dec_label_pc_a648 ], [ 0, %bb ]
  %v1_a650 = add i32 %v0_a650, 1
  %v9_a654 = icmp eq i32 %v1_a650, %v0_a630
  store i1 %v9_a654, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a654, label %dec_label_pc_aac4, label %dec_label_pc_a65c

dec_label_pc_a65c:                                ; preds = %dec_label_pc_a650, %dec_label_pc_a638
  %v0_a650 = phi i32 [ %v1_a650, %dec_label_pc_a650 ], [ %v0_a628, %dec_label_pc_a638 ]
  %v0_a680 = phi i32 [ %v0_a68029, %dec_label_pc_a650 ], [ 0, %dec_label_pc_a638 ]
  %v0_a660 = phi i32 [ %v0_a66025, %dec_label_pc_a650 ], [ 0, %dec_label_pc_a638 ]
  %v0_a668 = phi i32 [ %v1_a668, %dec_label_pc_a650 ], [ %v2_a638, %dec_label_pc_a638 ]
  %v1_a65c = inttoptr i32 %v0_a668 to i8*
  %v2_a65c = load i8, i8* %v1_a65c, align 1
  %v3_a65c = zext i8 %v2_a65c to i32
  store i32 %v3_a65c, i32* %r3.global-to-local, align 4
  %v2_a660 = icmp eq i32 %v0_a660, 0
  store i1 %v2_a660, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a664, i32* %r0.global-to-local, align 4
  %v1_a668 = add i32 %v0_a668, 1
  store i32 %v1_a668, i32* %r2.global-to-local, align 4
  %v1_a66c = add nsw i32 %v3_a65c, -48
  store i32 %v1_a66c, i32* %r1.global-to-local, align 4
  br i1 %v2_a660, label %dec_label_pc_a674, label %dec_label_pc_a684

dec_label_pc_a674:                                ; preds = %dec_label_pc_a65c
  %v7_a674 = icmp eq i8 %v2_a65c, 9
  store i1 %v7_a674, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a674, label %dec_label_pc_a650, label %bb

bb:                                               ; preds = %dec_label_pc_a674
  %v8_a678 = icmp eq i8 %v2_a65c, 32
  store i1 %v8_a678, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_a678, label %dec_label_pc_a650, label %dec_label_pc_a680

dec_label_pc_a680:                                ; preds = %bb
  %v1_a680 = add i32 %v0_a680, 1
  store i32 %v1_a680, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_a684

dec_label_pc_a684:                                ; preds = %dec_label_pc_a65c, %dec_label_pc_a680
  %v0_a68030 = phi i32 [ %v0_a680, %dec_label_pc_a65c ], [ %v1_a680, %dec_label_pc_a680 ]
  %v0_a66026 = phi i32 [ %v0_a660, %dec_label_pc_a65c ], [ %v1_a680, %dec_label_pc_a680 ]
  %v7_a684 = icmp eq i8 %v2_a65c, 46
  store i1 %v7_a684, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a684, label %dec_label_pc_a648, label %bb103

bb103:                                            ; preds = %dec_label_pc_a684
  %v8_a688 = icmp eq i32 %v1_a66c, 9
  store i1 %v8_a688, i1* %cpsr_z.global-to-local, align 1
  %tmp = icmp ult i32 %v1_a66c, 10
  br i1 %tmp, label %dec_label_pc_a648, label %dec_label_pc_a690

dec_label_pc_a690:                                ; preds = %dec_label_pc_a648, %bb103
  %v0_a650.lcssa = phi i32 [ %v1_a664, %dec_label_pc_a648 ], [ %v0_a650, %bb103 ]
  %v2_a694 = sub i32 %v0_a650.lcssa, %v0_a628
  store i32 %v2_a694, i32* @r4, align 4
  %v2_a698 = ptrtoint i32* %stack_var_-76 to i32
  store i32 %v2_a638, i32* %r1.global-to-local, align 4
  store i32 %v2_a698, i32* %r0.global-to-local, align 4
  store i32 %v2_a694, i32* %r2.global-to-local, align 4
  %v3_a6a8 = call i32 @function_1194c(i32 %v2_a698, i32 %v2_a638, i32 %v2_a694)
  %v2_a6ac = ptrtoint i32* %stack_var_-40 to i32
  %v1_a6b0 = load i32, i32* @r4, align 4
  %v2_a6b0 = add i32 %v1_a6b0, %v2_a6ac
  store i32 %v2_a6b0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_a698, i32* @r0, align 4
  %v3_a6bc = add i32 %v2_a6b0, -36
  %v4_a6bc = inttoptr i32 %v3_a6bc to i8*
  store i8 0, i8* %v4_a6bc, align 1
  %v1_a6c0 = call i32 @function_12904(i32 %v2_a698)
  store i32 %v1_a6c0, i32* %r0.global-to-local, align 4
  store i32 %v1_a6c0, i32* @fp, align 4
  br label %dec_label_pc_a6c8

dec_label_pc_a6c811:                              ; preds = %dec_label_pc_aac4
  unreachable

dec_label_pc_a6c8:                                ; preds = %dec_label_pc_ab2c, %dec_label_pc_ab20, %dec_label_pc_ab10, %dec_label_pc_ab00, %dec_label_pc_a690
  %v1_aafc49 = phi i32 [ %v1_aac8, %dec_label_pc_ab2c ], [ %v1_aac8, %dec_label_pc_ab20 ], [ %v1_aac8, %dec_label_pc_ab10 ], [ %v1_aac8, %dec_label_pc_ab00 ], [ %v1_a6c0, %dec_label_pc_a690 ]
  %v0_a6c8 = load i32, i32* @r7, align 4
  %v2_a6c8 = icmp eq i32 %v0_a6c8, 0
  store i1 %v2_a6c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a6c8, label %dec_label_pc_aaf0, label %dec_label_pc_a6d0

dec_label_pc_a6d0:                                ; preds = %dec_label_pc_a6c8
  store i32 %v0_a6c8, i32* %r0.global-to-local, align 4
  %v1_a6d4 = inttoptr i32 %v0_a6c8 to i8*
  %v2_a6d4 = call i32 @function_118dc(i8* %v1_a6d4)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 %v2_a6d4, i32* @r6, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_a6e8 = call i32 @function_12b7c(i32 2, i32 3, i32 17)
  store i32 %v3_a6e8, i32* %r0.global-to-local, align 4
  %v7_a6ec = icmp eq i32 %v3_a6e8, -1
  store i1 %v7_a6ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a6ec, label %dec_label_pc_aaf0, label %dec_label_pc_a6f8

dec_label_pc_a6f8:                                ; preds = %dec_label_pc_a6d0
  store i32 1, i32* %stack_var_-44, align 4
  %v6_a700 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_a700, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_a714 = call i32 @function_12b38(i32 %v3_a6e8, i32 0, i32 3, i32 %v6_a700, i32 4)
  store i32 %v5_a714, i32* %r0.global-to-local, align 4
  %v7_a718 = icmp eq i32 %v5_a714, -1
  store i1 %v7_a718, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a718, label %dec_label_pc_aae8, label %dec_label_pc_a720

dec_label_pc_a720:                                ; preds = %dec_label_pc_a6f8
  %v0_a728 = load i32, i32* %sb.global-to-local, align 4
  %v1_a728 = urem i32 %v0_a728, 256
  store i32 %v1_a728, i32* %sb.global-to-local, align 4
  %v3_a730 = mul i32 %v7_a538, 65536
  store i32 %v3_a730, i32* %r3.global-to-local, align 4
  %v5_a73c = trunc i32 %v0_a728 to i8
  %v0_a740 = load i32, i32* @r8, align 4
  %v2_a740 = icmp eq i32 %v0_a740, 0
  store i1 %v2_a740, i1* %cpsr_z.global-to-local, align 1
  %v3_a744 = urem i32 %v8_a4dc, 65536
  store i32 %v3_a744, i32* %r0.global-to-local, align 4
  %v3_a74c = urem i32 %v7_a538, 65536
  store i32 %v3_a74c, i32* %r2.global-to-local, align 4
  %v3_a750 = mul i32 %v6_a550, 65536
  %v3_a754 = mul i32 %v7_a56c, 65536
  store i32 %v3_a754, i32* %ip.global-to-local, align 4
  br i1 %v2_a740, label %bb104, label %bb105

bb104:                                            ; preds = %dec_label_pc_a720
  %v5_a75c = sext i8 %v5_a73c to i32
  store i32 %v5_a75c, i32* %r2.global-to-local, align 4
  br label %bb105

bb105:                                            ; preds = %dec_label_pc_a720, %bb104
  %v2_a788 = phi i32 [ %v3_a74c, %dec_label_pc_a720 ], [ %v5_a75c, %bb104 ]
  %v3_a768 = urem i32 %v6_a550, 65536
  store i32 %v3_a768, i32* %r3.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v3_a770 = urem i32 %v7_a56c, 65536
  store i32 0, i32* %stack_var_-44, align 4
  %v1_a788 = load i32, i32* @r6, align 4
  br i1 %v2_a740, label %.dec_label_pc_a970.preheader_crit_edge, label %dec_label_pc_a790

.dec_label_pc_a970.preheader_crit_edge:           ; preds = %bb105
  %v3_a788 = add i32 %v1_a788, %v2_a788
  store i32 %v3_a788, i32* @r7, align 4
  %.pre = sext i8 %v5_a73c to i32
  br label %dec_label_pc_a970.preheader

dec_label_pc_a790:                                ; preds = %bb105
  %v2_a790 = add i32 %v1_a788, %v1_a728
  %v3_a794 = mul i32 %v2_a790, 65536
  %v1_a79c = add i32 %v3_a794, 1769472
  %v1_a7a0 = add i32 %v3_a794, 3080192
  %tmp106 = udiv i32 %v1_a7a0, 256
  %v3_a7b4 = and i32 %tmp106, 65280
  %v4_a7c4 = udiv i32 %v1_a7a0, 16777216
  %v5_a7c4 = or i32 %v3_a7b4, %v4_a7c4
  store i32 %v5_a7c4, i32* @sl, align 4
  %trunc60 = trunc i32 %v7_a538 to i16
  %rev = call i16 @llvm.bswap.i16(i16 %trunc60)
  %tmp107 = mul i32 %v8_a4dc, 256
  %v3_a7d8 = and i32 %tmp107, 65280
  store i32 %v3_a7d8, i32* %r1.global-to-local, align 4
  %tmp108 = udiv i32 %v8_a4dc, 256
  %v4_a7dc = urem i32 %tmp108, 256
  %v5_a7dc = or i32 %v4_a7dc, %v3_a7d8
  store i32 %v5_a7dc, i32* @sb, align 4
  store i32 %v3_a754, i32* %r2.global-to-local, align 4
  store i32 %v3_a750, i32* %r0.global-to-local, align 4
  %tmp109 = mul i32 %v6_a550, 256
  %v3_a7f0 = and i32 %tmp109, 65280
  %tmp110 = mul i32 %v7_a56c, 256
  %v3_a7f4 = and i32 %tmp110, 65280
  %tmp111 = udiv i32 %v1_a79c, 256
  %v3_a7f8 = and i32 %tmp111, 65280
  store i32 %v3_a7f8, i32* @lr, align 4
  %tmp112 = udiv i32 %v6_a550, 256
  %v4_a7fc = urem i32 %tmp112, 256
  %v5_a7fc = or i32 %v4_a7fc, %v3_a7f0
  store i32 %v5_a7fc, i32* %ip.global-to-local, align 4
  %tmp113 = udiv i32 %v7_a56c, 256
  %v4_a800 = urem i32 %tmp113, 256
  %v5_a800 = or i32 %v4_a800, %v3_a7f4
  store i32 %v5_a800, i32* @r4, align 4
  %v1_a804 = add i32 %v1_a788, 1
  store i32 %v1_a804, i32* %r3.global-to-local, align 4
  %v4_a808 = udiv i32 %v1_a79c, 16777216
  %v5_a808 = or i32 %v4_a808, %tmp111
  store i32 0, i32* @r5, align 4
  %sext = mul i32 %v6_a4b8, 16777216
  %v4_a860 = sdiv i32 %sext, 16777216
  %sext8 = mul i32 %v6_a4f4, 16777216
  %v4_a86c = sdiv i32 %sext8, 16777216
  %v4_a88c = sext i8 %v5_a73c to i32
  %sext9 = mul nuw i32 %v5_a7fc, 65536
  %v7_a8a0 = sdiv i32 %sext9, 65536
  %sext10 = mul nuw i32 %v5_a800, 65536
  %v4_a8c8 = sdiv i32 %sext10, 65536
  %v1_a868 = trunc i32 %v4_a860 to i8
  %extract.t = trunc i32 %v4_a86c to i8
  %v1_a890 = add nsw i32 %v4_a88c, 41
  %sext120 = mul i32 %v5_a808, 65536
  %v3_a8a0 = sdiv i32 %sext120, 65536
  br label %dec_label_pc_a820

dec_label_pc_a820:                                ; preds = %dec_label_pc_a940, %dec_label_pc_a790
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 600, i32* %r0.global-to-local, align 4
  %v2_a828 = call i32 @function_136e4(i32 600, i32 1)
  store i32 %v2_a828, i32* %r0.global-to-local, align 4
  store i32 %v2_a4a0, i32* %ip.global-to-local, align 4
  %v3_a830 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a830, i32* %r3.global-to-local, align 4
  %v2_a834 = load i32, i32* @r5, align 4
  %v5_a834 = mul i32 %v2_a834, 4
  %v6_a834 = add i32 %v5_a834, %v2_a4a0
  %v7_a834 = inttoptr i32 %v6_a834 to i32*
  store i32 %v2_a828, i32* %v7_a834, align 4
  %v0_a838 = load i32, i32* %ip.global-to-local, align 4
  %v1_a838 = load i32, i32* %r3.global-to-local, align 4
  %v4_a838 = mul i32 %v1_a838, 4
  %v5_a838 = add i32 %v4_a838, %v0_a838
  %v6_a838 = inttoptr i32 %v5_a838 to i32*
  %v7_a838 = load i32, i32* %v6_a838, align 4
  store i32 %v7_a838, i32* %r1.global-to-local, align 4
  %v1_a83c = inttoptr i32 %v7_a838 to i8*
  %v2_a83c = load i8, i8* %v1_a83c, align 1
  %tmp127 = urem i8 %v2_a83c, 16
  %v1_a840 = zext i8 %tmp127 to i32
  %v1_a844 = or i32 %v1_a840, 64
  store i32 %v1_a844, i32* %r2.global-to-local, align 4
  %v1_a848 = trunc i32 %v1_a844 to i8
  store i8 %v1_a848, i8* %v1_a83c, align 1
  %v0_a84c = load i32, i32* %r1.global-to-local, align 4
  %v1_a84c = inttoptr i32 %v0_a84c to i8*
  %v2_a84c = load i8, i8* %v1_a84c, align 1
  %v3_a84c = zext i8 %v2_a84c to i32
  %v1_a850 = and i32 %v3_a84c, 240
  %v1_a854 = or i32 %v1_a850, 5
  store i32 %v1_a854, i32* %r3.global-to-local, align 4
  store i32 %v1_a520, i32* %lr.global-to-local, align 4
  %v1_a85c = trunc i32 %v1_a854 to i8
  store i8 %v1_a85c, i8* %v1_a84c, align 1
  store i32 %v4_a860, i32* %r0.global-to-local, align 4
  %v0_a864 = load i32, i32* %lr.global-to-local, align 4
  %v2_a864 = icmp eq i32 %v0_a864, 0
  store i1 %v2_a864, i1* %cpsr_z.global-to-local, align 1
  %v2_a868 = load i32, i32* %r1.global-to-local, align 4
  %v3_a868 = add i32 %v2_a868, 1
  %v4_a868 = inttoptr i32 %v3_a868 to i8*
  store i8 %v1_a868, i8* %v4_a868, align 1
  store i32 %v4_a86c, i32* %r2.global-to-local, align 4
  %v0_a870 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a870, label %.thread13, label %bb114

bb114:                                            ; preds = %dec_label_pc_a820
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_a874 = load i32, i32* %r1.global-to-local, align 4
  %v4_a874 = add i32 %v3_a874, 6
  %v5_a874 = inttoptr i32 %v4_a874 to i16*
  store i16 64, i16* %v5_a874, align 2
  %v0_a87c.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t52 = trunc i32 %v0_a87c.pre to i8
  br label %.thread13

.thread13:                                        ; preds = %dec_label_pc_a820, %bb114
  %v0_a87c.off0 = phi i8 [ %extract.t, %dec_label_pc_a820 ], [ %extract.t52, %bb114 ]
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_a87c = load i32, i32* %r1.global-to-local, align 4
  %v3_a87c = add i32 %v2_a87c, 8
  %v4_a87c = inttoptr i32 %v3_a87c to i8*
  store i8 %v0_a87c.off0, i8* %v4_a87c, align 1
  %v0_a880 = load i32, i32* %r3.global-to-local, align 4
  %v1_a880 = trunc i32 %v0_a880 to i8
  %v2_a880 = load i32, i32* %r1.global-to-local, align 4
  %v3_a880 = add i32 %v2_a880, 9
  %v4_a880 = inttoptr i32 %v3_a880 to i8*
  store i8 %v1_a880, i8* %v4_a880, align 1
  %v2_a888 = load i32, i32* @global_var_1a2d4.47, align 4
  %v0_a890 = load i32, i32* %r1.global-to-local, align 4
  %v2_a894 = add i32 %v1_a890, %v0_a890
  store i32 %v2_a894, i32* @r4, align 4
  %v2_a898 = add i32 %v0_a890, 12
  %v3_a898 = inttoptr i32 %v2_a898 to i32*
  store i32 %v2_a888, i32* %v3_a898, align 4
  store i32 %v3_a8a0, i32* %r2.global-to-local, align 4
  store i32 %v7_a8a0, i32* %r3.global-to-local, align 4
  %v0_a8a4 = load i32, i32* %r1.global-to-local, align 4
  %v1_a8a4 = add i32 %v0_a8a4, 20
  store i32 %v1_a8a4, i32* %ip.global-to-local, align 4
  %v0_a8a8 = load i32, i32* @sl, align 4
  %v1_a8a8 = trunc i32 %v0_a8a8 to i16
  %v3_a8a8 = add i32 %v0_a8a4, 2
  %v4_a8a8 = inttoptr i32 %v3_a8a8 to i16*
  store i16 %v1_a8a8, i16* %v4_a8a8, align 2
  %v0_a8ac = load i32, i32* @sb, align 4
  %v1_a8ac = trunc i32 %v0_a8ac to i16
  %v2_a8ac = load i32, i32* %r1.global-to-local, align 4
  %v3_a8ac = add i32 %v2_a8ac, 4
  %v4_a8ac = inttoptr i32 %v3_a8ac to i16*
  store i16 %v1_a8ac, i16* %v4_a8ac, align 2
  %v0_a8b0 = load i32, i32* %r2.global-to-local, align 4
  %v1_a8b0 = trunc i32 %v0_a8b0 to i16
  %v2_a8b0 = load i32, i32* %ip.global-to-local, align 4
  %v3_a8b0 = add i32 %v2_a8b0, 4
  %v4_a8b0 = inttoptr i32 %v3_a8b0 to i16*
  store i16 %v1_a8b0, i16* %v4_a8b0, align 2
  %v0_a8b4 = load i32, i32* %r3.global-to-local, align 4
  %v1_a8b4 = trunc i32 %v0_a8b4 to i16
  %v2_a8b4 = load i32, i32* %ip.global-to-local, align 4
  %v3_a8b4 = add i32 %v2_a8b4, 2
  %v4_a8b4 = inttoptr i32 %v3_a8b4 to i16*
  store i16 %v1_a8b4, i16* %v4_a8b4, align 2
  %v2_a8bc = load i32, i32* %r1.global-to-local, align 4
  %v3_a8bc = add i32 %v2_a8bc, 20
  %v4_a8bc = inttoptr i32 %v3_a8bc to i16*
  store i16 %rev, i16* %v4_a8bc, align 2
  store i32 %v4_a88c, i32* %ip.global-to-local, align 4
  %v0_a8c4 = load i32, i32* %r1.global-to-local, align 4
  %v1_a8c4 = add i32 %v0_a8c4, 28
  store i32 %v1_a8c4, i32* %r0.global-to-local, align 4
  store i32 %v4_a8c8, i32* %r3.global-to-local, align 4
  store i32 256, i32* @lr, align 4
  %v3_a8d4 = add i32 %v0_a8c4, 30
  %v4_a8d4 = inttoptr i32 %v3_a8d4 to i16*
  store i16 1, i16* %v4_a8d4, align 2
  %v0_a8d8 = load i32, i32* @lr, align 4
  %v1_a8d8 = trunc i32 %v0_a8d8 to i16
  %v2_a8d8 = load i32, i32* %r0.global-to-local, align 4
  %v3_a8d8 = add i32 %v2_a8d8, 4
  %v4_a8d8 = inttoptr i32 %v3_a8d8 to i16*
  store i16 %v1_a8d8, i16* %v4_a8d8, align 2
  %v0_a8dc = load i32, i32* %ip.global-to-local, align 4
  %v1_a8dc = trunc i32 %v0_a8dc to i8
  %v2_a8dc = load i32, i32* %r1.global-to-local, align 4
  %v3_a8dc = add i32 %v2_a8dc, 40
  %v4_a8dc = inttoptr i32 %v3_a8dc to i8*
  store i8 %v1_a8dc, i8* %v4_a8dc, align 1
  %v0_a8e0 = load i32, i32* @fp, align 4
  %v1_a8e0 = load i32, i32* %r1.global-to-local, align 4
  %v2_a8e0 = add i32 %v1_a8e0, 16
  %v3_a8e0 = inttoptr i32 %v2_a8e0 to i32*
  store i32 %v0_a8e0, i32* %v3_a8e0, align 4
  %v0_a8e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_a8e4 = trunc i32 %v0_a8e4 to i16
  %v2_a8e4 = load i32, i32* %r1.global-to-local, align 4
  %v3_a8e4 = add i32 %v2_a8e4, 28
  %v4_a8e4 = inttoptr i32 %v3_a8e4 to i16*
  store i16 %v1_a8e4, i16* %v4_a8e4, align 2
  %v0_a8e8 = load i32, i32* @r4, align 4
  %v1_a8e8 = add i32 %v0_a8e8, 1
  store i32 %v1_a8e8, i32* %r0.global-to-local, align 4
  %v0_a8ec = load i32, i32* @r7, align 4
  store i32 %v0_a8ec, i32* %r1.global-to-local, align 4
  store i32 %v1_a804, i32* %r2.global-to-local, align 4
  %v3_a8f4 = call i32 @function_1194c(i32 %v1_a8e8, i32 %v0_a8ec, i32 %v1_a804)
  store i32 %v3_a8f4, i32* %r0.global-to-local, align 4
  %v0_a8f8 = load i32, i32* @r6, align 4
  %v2_a8f8 = icmp eq i32 %v0_a8f8, 0
  store i1 %v2_a8f8, i1* %cpsr_z.global-to-local, align 1
  %tmp115 = icmp slt i32 %v0_a8f8, 1
  br i1 %tmp115, label %bb116, label %dec_label_pc_a908

bb116:                                            ; preds = %.thread13
  %v5_a8fc = load i32, i32* @r4, align 4
  store i32 %v5_a8fc, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_a940

dec_label_pc_a908:                                ; preds = %.thread13
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_a90c = load i32, i32* @r4, align 4
  store i32 %v0_a90c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_a914

dec_label_pc_a914:                                ; preds = %.thread20, %dec_label_pc_a908
  %v0_a920 = phi i32 [ %storemerge, %.thread20 ], [ 0, %dec_label_pc_a908 ]
  %v0_a924 = phi i32 [ %v0_a938, %.thread20 ], [ 0, %dec_label_pc_a908 ]
  %v1_a914 = load i32, i32* @r7, align 4
  %v2_a914 = add i32 %v1_a914, %v0_a924
  %v3_a914 = inttoptr i32 %v2_a914 to i8*
  %v4_a914 = load i8, i8* %v3_a914, align 1
  %v6_a914 = zext i8 %v4_a914 to i32
  store i32 %v6_a914, i32* %r3.global-to-local, align 4
  %v7_a918 = icmp eq i8 %v4_a914, 46
  store i1 %v7_a918, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a918, label %bb117, label %.thread59

.thread59:                                        ; preds = %dec_label_pc_a914
  %v1_a92016 = add nsw i32 %v0_a920, 1
  store i32 %v1_a92016, i32* %r2.global-to-local, align 4
  %v1_a92418 = add i32 %v0_a924, 1
  store i32 %v1_a92418, i32* %r1.global-to-local, align 4
  br label %bb118

bb117:                                            ; preds = %dec_label_pc_a914
  %v2_a91c = load i32, i32* @r4, align 4
  %v3_a91c = add i32 %v2_a91c, %v0_a924
  store i32 %v3_a91c, i32* %r3.global-to-local, align 4
  %v1_a920 = add nsw i32 %v0_a920, 1
  store i32 %v1_a920, i32* %r2.global-to-local, align 4
  %v1_a924 = add i32 %v0_a924, 1
  store i32 %v1_a924, i32* %r1.global-to-local, align 4
  %v2_a928 = trunc i32 %v0_a920 to i8
  %v3_a928 = load i32, i32* %r0.global-to-local, align 4
  %v4_a928 = inttoptr i32 %v3_a928 to i8*
  store i8 %v2_a928, i8* %v4_a928, align 1
  %v0_a92c.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a92c.pre, label %bb119, label %bb117.bb118_crit_edge

bb117.bb118_crit_edge:                            ; preds = %bb117
  %v1_a92c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb118

bb118:                                            ; preds = %bb117.bb118_crit_edge, %.thread59
  %v1_a92c = phi i32 [ %v1_a92c.pre, %bb117.bb118_crit_edge ], [ %v1_a92016, %.thread59 ]
  %v2_a92c = urem i32 %v1_a92c, 256
  br label %.thread20

bb119:                                            ; preds = %bb117
  %v1_a930 = load i32, i32* %r3.global-to-local, align 4
  %v2_a930 = add i32 %v1_a930, 1
  store i32 %v2_a930, i32* %r0.global-to-local, align 4
  br label %.thread20

.thread20:                                        ; preds = %bb118, %bb119
  %storemerge = phi i32 [ %v2_a92c, %bb118 ], [ 0, %bb119 ]
  store i32 %storemerge, i32* %ip.global-to-local, align 4
  %v0_a938 = load i32, i32* %r1.global-to-local, align 4
  %v1_a938 = load i32, i32* @r6, align 4
  %v9_a938 = icmp eq i32 %v0_a938, %v1_a938
  store i1 %v9_a938, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a938, label %dec_label_pc_a940.loopexit, label %dec_label_pc_a914

dec_label_pc_a940.loopexit:                       ; preds = %.thread20
  %v2_a940.pre = load i32, i32* %r0.global-to-local, align 4
  %extract.t126 = trunc i32 %storemerge to i8
  br label %dec_label_pc_a940

dec_label_pc_a940:                                ; preds = %bb116, %dec_label_pc_a940.loopexit
  %v0_a940.off0 = phi i8 [ %extract.t126, %dec_label_pc_a940.loopexit ], [ 0, %bb116 ]
  %v2_a940 = phi i32 [ %v2_a940.pre, %dec_label_pc_a940.loopexit ], [ %v5_a8fc, %bb116 ]
  %v3_a940 = inttoptr i32 %v2_a940 to i8*
  store i8 %v0_a940.off0, i8* %v3_a940, align 1
  %v3_a944 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a944, i32* %r3.global-to-local, align 4
  %v1_a948 = add i32 %v3_a944, 1
  store i32 %v1_a948, i32* @r5, align 4
  %v0_a94c = load i32, i32* @r4, align 4
  %v1_a94c = load i32, i32* @r6, align 4
  %v2_a94c = add i32 %v1_a94c, %v0_a94c
  store i32 %v2_a94c, i32* %r2.global-to-local, align 4
  store i32 256, i32* @lr, align 4
  %v0_a954 = load i32, i32* @r8, align 4
  %v9_a954 = icmp eq i32 %v0_a954, %v1_a948
  store i1 %v9_a954, i1* %cpsr_z.global-to-local, align 1
  %v3_a958 = add i32 %v2_a94c, 4
  %v4_a958 = inttoptr i32 %v3_a958 to i16*
  store i16 256, i16* %v4_a958, align 2
  %v0_a95c = load i32, i32* @lr, align 4
  %v1_a95c = trunc i32 %v0_a95c to i16
  %v2_a95c = load i32, i32* %r2.global-to-local, align 4
  %v3_a95c = add i32 %v2_a95c, 2
  %v4_a95c = inttoptr i32 %v3_a95c to i16*
  store i16 %v1_a95c, i16* %v4_a95c, align 2
  %v0_a960 = load i32, i32* @r5, align 4
  store i32 %v0_a960, i32* %stack_var_-44, align 4
  %v8_a964 = icmp sgt i32 %v0_a954, %v1_a948
  br i1 %v8_a964, label %dec_label_pc_a820, label %dec_label_pc_a968

dec_label_pc_a968:                                ; preds = %dec_label_pc_a940
  store i32 %v4_a88c, i32* %r0.global-to-local, align 4
  %v0_a96c = load i32, i32* @r6, align 4
  %v2_a96c = add i32 %v0_a96c, %v4_a88c
  store i32 %v2_a96c, i32* @r7, align 4
  %v0_a974.pre.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_a970.preheader

dec_label_pc_a970.preheader:                      ; preds = %.dec_label_pc_a970.preheader_crit_edge, %dec_label_pc_a968
  %v4_a9d4.pre-phi = phi i32 [ %.pre, %.dec_label_pc_a970.preheader_crit_edge ], [ %v4_a88c, %dec_label_pc_a968 ]
  %v0_a974.pre = phi i32 [ 0, %.dec_label_pc_a970.preheader_crit_edge ], [ %v0_a974.pre.pre, %dec_label_pc_a968 ]
  %v9_a9a0 = icmp eq i32 %v3_a744, ptrtoint ([3 x i8]* @global_var_ffff.45 to i32)
  %v9_a9b0 = icmp eq i32 %v3_a74c, ptrtoint ([3 x i8]* @global_var_ffff.45 to i32)
  br label %dec_label_pc_a970

dec_label_pc_a970:                                ; preds = %dec_label_pc_a970, %dec_label_pc_aa68, %dec_label_pc_a970.preheader
  %v0_a974 = phi i32 [ %v0_a974.pre, %dec_label_pc_a970.preheader ], [ 0, %dec_label_pc_aa68 ], [ 0, %dec_label_pc_a970 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_a974 = icmp eq i32 %v0_a974, 0
  store i1 %v2_a974, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_a974, label %dec_label_pc_a970, label %dec_label_pc_a980

dec_label_pc_a980:                                ; preds = %dec_label_pc_a970, %dec_label_pc_aa68
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_a984 = load i32, i32* @r7, align 4
  %v1_a984 = add i32 %v0_a984, 27
  store i32 %v1_a984, i32* @sb, align 4
  %v1_a988 = add i32 %v0_a984, 47
  store i32 %v1_a988, i32* @sl, align 4
  br label %dec_label_pc_a98c

dec_label_pc_a98c:                                ; preds = %dec_label_pc_a9d0, %dec_label_pc_a980
  %v1_a998 = phi i32 [ %v1_aa58, %dec_label_pc_a9d0 ], [ 0, %dec_label_pc_a980 ]
  store i32 %v2_a4a0, i32* %r3.global-to-local, align 4
  store i32 %v3_a744, i32* %ip.global-to-local, align 4
  %v4_a998 = mul i32 %v1_a998, 4
  %v5_a998 = add i32 %v4_a998, %v2_a4a0
  %v6_a998 = inttoptr i32 %v5_a998 to i32*
  %v7_a998 = load i32, i32* %v6_a998, align 4
  store i32 %v7_a998, i32* @r4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* @r5, align 4
  store i1 %v9_a9a0, i1* %cpsr_z.global-to-local, align 1
  %v1_a9a4 = add i32 %v7_a998, 20
  store i32 %v1_a9a4, i32* @r6, align 4
  br i1 %v9_a9a0, label %dec_label_pc_aa7c, label %dec_label_pc_a9ac

dec_label_pc_a9ac:                                ; preds = %dec_label_pc_a98c
  store i32 %v3_a74c, i32* @lr, align 4
  store i1 %v9_a9b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a9b0, label %dec_label_pc_aa90, label %dec_label_pc_a9b8

dec_label_pc_a9b8:                                ; preds = %dec_label_pc_aa7c.dec_label_pc_a9b8_crit_edge, %dec_label_pc_a9ac
  %v1_a9bc = phi i32 [ %v1_a9bc.pre, %dec_label_pc_aa7c.dec_label_pc_a9b8_crit_edge ], [ ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), %dec_label_pc_a9ac ]
  store i32 %v3_a768, i32* %r0.global-to-local, align 4
  %v9_a9bc = icmp eq i32 %v3_a768, %v1_a9bc
  store i1 %v9_a9bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a9bc, label %dec_label_pc_aaa4, label %dec_label_pc_a9c4

dec_label_pc_a9c4:                                ; preds = %dec_label_pc_aa90, %dec_label_pc_a9b8
  %v1_a9c8 = phi i32 [ %v1_aa9c, %dec_label_pc_aa90 ], [ %v1_a9bc, %dec_label_pc_a9b8 ]
  store i32 %v3_a770, i32* %r2.global-to-local, align 4
  %v9_a9c8 = icmp eq i32 %v3_a770, %v1_a9c8
  store i1 %v9_a9c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a9c8, label %dec_label_pc_aab8, label %dec_label_pc_a9d0

dec_label_pc_a9d0:                                ; preds = %dec_label_pc_aaa4, %dec_label_pc_a9c4, %dec_label_pc_aab8
  %v0_a9d0 = load i32, i32* @r4, align 4
  %v1_a9d0 = add i32 %v0_a9d0, 41
  store i32 %v1_a9d0, i32* %r0.global-to-local, align 4
  store i32 %v4_a9d4.pre-phi, i32* %r1.global-to-local, align 4
  %v2_a9d8 = call i32 @function_dff0(i32 %v1_a9d0, i32 %v4_a9d4.pre-phi)
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_a9e0 = load i32, i32* @r4, align 4
  %v3_a9e0 = add i32 %v2_a9e0, 10
  %v4_a9e0 = inttoptr i32 %v3_a9e0 to i16*
  store i16 0, i16* %v4_a9e0, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_a9e8 = load i32, i32* @r4, align 4
  store i32 %v0_a9e8, i32* @r0, align 4
  %v2_a9ec = call i32 @function_c848(i32 %v0_a9e8, i32 20)
  %v3_a9ec = trunc i32 %v2_a9ec to i16
  store i32 %v2_a9ec, i32* %r0.global-to-local, align 4
  %v3_a9f0 = load i32, i32* @r4, align 4
  %v4_a9f0 = add i32 %v3_a9f0, 10
  %v5_a9f0 = inttoptr i32 %v4_a9f0 to i16*
  store i16 %v3_a9ec, i16* %v5_a9f0, align 2
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_a9f8 = load i32, i32* @r6, align 4
  %v3_a9f8 = add i32 %v2_a9f8, 6
  %v4_a9f8 = inttoptr i32 %v3_a9f8 to i16*
  store i16 0, i16* %v4_a9f8, align 2
  %v0_a9fc = load i32, i32* @r6, align 4
  store i32 %v0_a9fc, i32* @r1, align 4
  %v1_aa00 = add i32 %v0_a9fc, 4
  %v2_aa00 = inttoptr i32 %v1_aa00 to i16*
  %v3_aa00 = load i16, i16* %v2_aa00, align 2
  %v4_aa00 = zext i16 %v3_aa00 to i32
  store i32 %v4_aa00, i32* %r2.global-to-local, align 4
  %v0_aa04 = load i32, i32* @sb, align 4
  store i32 %v0_aa04, i32* %r3.global-to-local, align 4
  %v0_aa08 = load i32, i32* @r4, align 4
  store i32 %v0_aa08, i32* %r0.global-to-local, align 4
  %v4_aa0c = call i32 @function_c898(i32 %v0_aa08, i32 %v0_a9fc, i32 %v4_aa00, i32 %v0_aa04)
  %v5_aa0c = trunc i32 %v4_aa0c to i16
  store i32 %v4_aa0c, i32* %r0.global-to-local, align 4
  %v3_aa10 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_aa10, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @lr, align 4
  %v3_aa18 = mul i32 %v3_aa10, 32
  store i32 %v3_aa18, i32* %ip.global-to-local, align 4
  %v3_aa1c = load i32, i32* @r6, align 4
  %v4_aa1c = add i32 %v3_aa1c, 6
  %v5_aa1c = inttoptr i32 %v4_aa1c to i16*
  store i16 %v5_aa0c, i16* %v5_aa1c, align 2
  %v0_aa20 = load i32, i32* %ip.global-to-local, align 4
  %v1_aa20 = load i32, i32* %r3.global-to-local, align 4
  %tmp128 = mul i32 %v1_aa20, -8
  %v5_aa20 = add i32 %v0_aa20, %tmp128
  store i32 %v5_aa20, i32* %ip.global-to-local, align 4
  %v0_aa24 = load i32, i32* @r6, align 4
  %v1_aa24 = add i32 %v0_aa24, 2
  %v2_aa24 = inttoptr i32 %v1_aa24 to i16*
  %v3_aa24 = load i16, i16* %v2_aa24, align 2
  %v1_aa28 = load i32, i32* @lr, align 4
  %v2_aa28 = add i32 %v1_aa28, %v5_aa20
  store i32 %v2_aa28, i32* %ip.global-to-local, align 4
  %v3_aa2c = add i32 %v2_aa28, 2
  %v4_aa2c = inttoptr i32 %v3_aa2c to i16*
  store i16 %v3_aa24, i16* %v4_aa2c, align 2
  %v0_aa30 = load i32, i32* @fp, align 4
  %v1_aa30 = load i32, i32* %ip.global-to-local, align 4
  %v2_aa30 = add i32 %v1_aa30, 4
  %v3_aa30 = inttoptr i32 %v2_aa30 to i32*
  store i32 %v0_aa30, i32* %v3_aa30, align 4
  %v0_aa34 = load i32, i32* @r4, align 4
  store i32 %v0_aa34, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v3_a6e8, i32* %r0.global-to-local, align 4
  %v0_aa40 = load i32, i32* @sl, align 4
  store i32 %v0_aa40, i32* %r2.global-to-local, align 4
  store i32 16, i32* @r4, align 4
  %v0_aa48 = load i32, i32* %ip.global-to-local, align 4
  %v6_aa50 = call i32 @function_12af8(i32 %v3_a6e8, i32 %v0_aa34, i32 %v0_aa40, i32 16384, i32 %v0_aa48, i32 16)
  %v3_aa54 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_aa54, i32* %r3.global-to-local, align 4
  %v1_aa58 = add i32 %v3_aa54, 1
  store i32 %v1_aa58, i32* %r0.global-to-local, align 4
  %v0_aa5c = load i32, i32* @r8, align 4
  %v9_aa5c = icmp eq i32 %v0_aa5c, %v1_aa58
  store i1 %v9_aa5c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_aa58, i32* %stack_var_-44, align 4
  %v8_aa64 = icmp sgt i32 %v0_aa5c, %v1_aa58
  br i1 %v8_aa64, label %dec_label_pc_a98c, label %dec_label_pc_aa68

dec_label_pc_aa68:                                ; preds = %dec_label_pc_a9d0
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_aa6c = icmp eq i32 %v0_aa5c, 0
  store i1 %v2_aa6c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_aa6c, label %dec_label_pc_a970, label %dec_label_pc_a980

dec_label_pc_aa7c:                                ; preds = %dec_label_pc_a98c
  %v0_aa7c = call i32 @function_df2c()
  %v1_aa7c = trunc i32 %v0_aa7c to i16
  store i32 %v0_aa7c, i32* %r0.global-to-local, align 4
  store i32 %v3_a74c, i32* @lr, align 4
  %v1_aa84 = load i32, i32* @r5, align 4
  %v9_aa84 = icmp eq i32 %v3_a74c, %v1_aa84
  store i1 %v9_aa84, i1* %cpsr_z.global-to-local, align 1
  %v3_aa88 = load i32, i32* @r4, align 4
  %v4_aa88 = add i32 %v3_aa88, 4
  %v5_aa88 = inttoptr i32 %v4_aa88 to i16*
  store i16 %v1_aa7c, i16* %v5_aa88, align 2
  br i1 %v9_aa84, label %dec_label_pc_aa90, label %dec_label_pc_aa7c.dec_label_pc_a9b8_crit_edge

dec_label_pc_aa7c.dec_label_pc_a9b8_crit_edge:    ; preds = %dec_label_pc_aa7c
  %v1_a9bc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_a9b8

dec_label_pc_aa90:                                ; preds = %dec_label_pc_aa7c, %dec_label_pc_a9ac
  %v0_aa90 = call i32 @function_df2c()
  %v1_aa90 = trunc i32 %v0_aa90 to i16
  %v3_aa94 = load i32, i32* @r4, align 4
  %v4_aa94 = add i32 %v3_aa94, 20
  %v5_aa94 = inttoptr i32 %v4_aa94 to i16*
  store i16 %v1_aa90, i16* %v5_aa94, align 2
  store i32 %v3_a768, i32* %r0.global-to-local, align 4
  %v1_aa9c = load i32, i32* @r5, align 4
  %v9_aa9c = icmp eq i32 %v3_a768, %v1_aa9c
  store i1 %v9_aa9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_aa9c, label %dec_label_pc_aaa4, label %dec_label_pc_a9c4

dec_label_pc_aaa4:                                ; preds = %dec_label_pc_aa90, %dec_label_pc_a9b8
  %v0_aaa4 = call i32 @function_df2c()
  %v1_aaa4 = trunc i32 %v0_aaa4 to i16
  store i32 %v0_aaa4, i32* %r0.global-to-local, align 4
  store i32 %v3_a770, i32* %r2.global-to-local, align 4
  %v1_aaac = load i32, i32* @r5, align 4
  %v9_aaac = icmp eq i32 %v3_a770, %v1_aaac
  store i1 %v9_aaac, i1* %cpsr_z.global-to-local, align 1
  %v3_aab0 = load i32, i32* @r6, align 4
  %v4_aab0 = add i32 %v3_aab0, 2
  %v5_aab0 = inttoptr i32 %v4_aab0 to i16*
  store i16 %v1_aaa4, i16* %v5_aab0, align 2
  br i1 %v9_aaac, label %dec_label_pc_aab8, label %dec_label_pc_a9d0

dec_label_pc_aab8:                                ; preds = %dec_label_pc_aaa4, %dec_label_pc_a9c4
  %v0_aab8 = call i32 @function_df2c()
  %v1_aab8 = trunc i32 %v0_aab8 to i16
  store i32 %v0_aab8, i32* %r0.global-to-local, align 4
  %v3_aabc = load i32, i32* @r4, align 4
  %v4_aabc = add i32 %v3_aabc, 28
  %v5_aabc = inttoptr i32 %v4_aabc to i16*
  store i16 %v1_aab8, i16* %v5_aabc, align 2
  br label %dec_label_pc_a9d0

dec_label_pc_aac4:                                ; preds = %dec_label_pc_a650, %dec_label_pc_a630, %dec_label_pc_a5d4, %dec_label_pc_a480
  %v0_aac4 = call i32 @function_df2c()
  %v1_aac8 = urem i32 %v0_aac4, 4
  store i32 %v1_aac8, i32* %r0.global-to-local, align 4
  %v2_aacc = icmp eq i32 %v1_aac8, 3
  store i1 %v2_aacc, i1* %cpsr_z.global-to-local, align 1
  %trunc = trunc i32 %v0_aac4 to i2
  switch i2 %trunc, label %dec_label_pc_a6c811 [
    i2 0, label %dec_label_pc_ab00
    i2 1, label %dec_label_pc_ab2c
    i2 -2, label %dec_label_pc_ab20
    i2 -1, label %dec_label_pc_ab10
  ]

dec_label_pc_aae8:                                ; preds = %dec_label_pc_a6f8
  store i32 %v3_a6e8, i32* %r0.global-to-local, align 4
  %v1_aaec = call i32 @function_1239c(i32 %v3_a6e8)
  store i32 %v1_aaec, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_aaf0

dec_label_pc_aaf0:                                ; preds = %dec_label_pc_a6d0, %dec_label_pc_a6c8, %dec_label_pc_aae8
  %v1_aafc = phi i32 [ %v3_a6e8, %dec_label_pc_a6d0 ], [ %v1_aafc49, %dec_label_pc_a6c8 ], [ %v1_aaec, %dec_label_pc_aae8 ]
  store i32 %v18_a480, i32* %sb.global-to-local, align 4
  store i32 %v27_a480, i32* %lr.global-to-local, align 4
  ret i32 %v1_aafc

dec_label_pc_ab00:                                ; preds = %dec_label_pc_aac4
  store i32 134744072, i32* @fp, align 4
  br label %dec_label_pc_a6c8

dec_label_pc_ab10:                                ; preds = %dec_label_pc_aac4
  store i32 33686020, i32* @fp, align 4
  br label %dec_label_pc_a6c8

dec_label_pc_ab20:                                ; preds = %dec_label_pc_aac4
  store i32 104859200, i32* @fp, align 4
  br label %dec_label_pc_a6c8

dec_label_pc_ab2c:                                ; preds = %dec_label_pc_aac4
  store i32 707416650, i32* @fp, align 4
  br label %dec_label_pc_a6c8

; uselistorder directives
  uselistorder i32 %v1_aac8, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v0_aac4, { 1, 0 }
  uselistorder i32 %v0_aab8, { 1, 0 }
  uselistorder i32 %v0_aaa4, { 1, 0 }
  uselistorder i32 %v1_aa9c, { 1, 0 }
  uselistorder i32 %v0_aa7c, { 1, 0 }
  uselistorder i32 %v1_aa58, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_aa20, { 1, 0 }
  uselistorder i32 %v4_aa0c, { 1, 0 }
  uselistorder i32 %v2_a9ec, { 1, 0 }
  uselistorder i32 %v4_a9d4.pre-phi, { 1, 0 }
  uselistorder i32 %v1_a948, { 1, 0, 2 }
  uselistorder i32 %v0_a938, { 1, 0 }
  uselistorder i32 %storemerge, { 0, 2, 1 }
  uselistorder i32 %v0_a924, { 2, 0, 3, 1 }
  uselistorder i32 %v0_a920, { 1, 0, 2 }
  uselistorder i32 %v0_a890, { 1, 0 }
  uselistorder i32 %v4_a88c, { 2, 0, 3, 4, 1 }
  uselistorder i32 %tmp111, { 1, 0 }
  uselistorder i32 %v3_a7d8, { 1, 0 }
  uselistorder i32 %v3_a794, { 1, 0 }
  uselistorder i32 %v1_a788, { 2, 0, 1 }
  uselistorder i32 %v3_a754, { 1, 0 }
  uselistorder i32 %v3_a74c, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v3_a744, { 1, 0, 2 }
  uselistorder i8 %v5_a73c, { 1, 0, 2 }
  uselistorder i32 %v1_a728, { 1, 0 }
  uselistorder i32 %v0_a728, { 1, 0 }
  uselistorder i1 %v7_a718, { 1, 0 }
  uselistorder i1 %v7_a6ec, { 1, 0 }
  uselistorder i32 %v3_a6e8, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v0_a6c8, { 1, 0, 2 }
  uselistorder i32 %v2_a698, { 0, 1, 3, 2 }
  uselistorder i32 %v2_a694, { 1, 0, 2 }
  uselistorder i1 %v7_a684, { 1, 0 }
  uselistorder i32 %v1_a680, { 1, 0, 2 }
  uselistorder i1 %v8_a678, { 1, 0 }
  uselistorder i1 %v7_a674, { 1, 0 }
  uselistorder i32 %v1_a668, { 1, 0 }
  uselistorder i8 %v2_a65c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_a660, { 1, 0 }
  uselistorder i32 %v0_a680, { 3, 0, 2, 1 }
  uselistorder i32 %v0_a650, { 0, 2, 1 }
  uselistorder i32 %v1_a664, { 0, 2, 1 }
  uselistorder i32 %v2_a638, { 1, 0, 2, 3 }
  uselistorder i32 %v0_a630, { 1, 0, 2, 3 }
  uselistorder i1 %v7_a628, { 1, 0 }
  uselistorder i32 %v0_a628, { 2, 3, 1, 5, 4, 0 }
  uselistorder i32 %v0_a5cc, { 1, 0, 3, 2 }
  uselistorder i32 %v7_a56c, { 1, 0, 2, 3 }
  uselistorder i32 %v6_a550, { 1, 0, 2, 3 }
  uselistorder i32 %v7_a538, { 2, 1, 0 }
  uselistorder i32 %v1_a520, { 1, 0 }
  uselistorder i32 %v8_a4dc, { 1, 0, 2 }
  uselistorder i32 %v2_a4a0, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30, 31, 32, 33, 34, 35, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 34, 37, 36, 38, 40, 39, 42, 41, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 3, 5, 7, 6, 9, 8, 10, 12, 11, 13, 14, 15, 17, 16, 20, 18, 19, 21, 22, 27, 23, 24, 25, 26, 31, 28, 29, 30, 32, 34, 33, 35, 1, 36, 37, 39, 38, 40, 41, 43, 42, 44, 46, 45, 48, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 25, 9, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 25, 22, 29, 30, 31 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_aaf0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a9d0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a980, { 1, 0 }
  uselistorder label %dec_label_pc_a970, { 1, 0, 2 }
  uselistorder label %dec_label_pc_a970.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_a940, { 1, 0 }
  uselistorder label %.thread20, { 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %bb105, { 1, 0 }
  uselistorder label %dec_label_pc_a690, { 1, 0 }
  uselistorder label %dec_label_pc_a684, { 1, 0 }
  uselistorder label %dec_label_pc_a650, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a648, { 1, 0 }
}

define i32 @function_ab3c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_ab3c:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i8 @__decompiler_undefined_function_1()
  %tmp34 = call i16 @__decompiler_undefined_function_3()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %tmp61 = call i16 @__decompiler_undefined_function_3()
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v27_ab3c = load i32, i32* @lr, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  %v2_ab58 = call i32 @function_136e4(i32 %arg1, i32 16)
  store i32 4, i32* %r1.global-to-local, align 4
  %v0_ab64 = load i32, i32* @r6, align 4
  store i32 %v0_ab64, i32* %r0.global-to-local, align 4
  %v2_ab68 = call i32 @function_136e4(i32 %v0_ab64, i32 4)
  %v0_ab6c = load i32, i32* @r5, align 4
  store i32 %v0_ab6c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_ab7c = load i32, i32* @r4, align 4
  store i32 %v0_ab7c, i32* %r0.global-to-local, align 4
  %v5_ab80 = inttoptr i32 %v0_ab6c to i32*
  %v6_ab80 = call i32 @function_8570(i32 %v0_ab7c, i32* %v5_ab80, i32 2, i32 0)
  %v1_ab8c = urem i32 %v6_ab80, 256
  store i32 %v1_ab8c, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_ab98 = load i32, i32* @r5, align 4
  store i32 %v0_ab98, i32* %r1.global-to-local, align 4
  %v0_ab9c = load i32, i32* @r4, align 4
  store i32 %v0_ab9c, i32* %r0.global-to-local, align 4
  %v5_aba0 = trunc i32 %v6_ab80 to i8
  %v7_aba4 = inttoptr i32 %v0_ab98 to i32*
  %v8_aba4 = call i32 @function_8570(i32 %v0_ab9c, i32* %v7_aba4, i32 3, i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32))
  %v0_aba8 = load i32, i32* @r5, align 4
  store i32 %v0_aba8, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v8_aba4, i32* @r7, align 4
  %v0_abb8 = load i32, i32* @r4, align 4
  store i32 %v0_abb8, i32* %r0.global-to-local, align 4
  %v4_abbc = inttoptr i32 %v0_aba8 to i32*
  %v5_abbc = call i32 @function_8570(i32 %v0_abb8, i32* %v4_abbc, i32 4, i32 64)
  %v1_abc4 = urem i32 %v5_abbc, 256
  store i32 %v1_abc4, i32* %ip.global-to-local, align 4
  %v0_abc8 = load i32, i32* @r5, align 4
  store i32 %v0_abc8, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_abd4 = load i32, i32* @r4, align 4
  store i32 %v0_abd4, i32* %r0.global-to-local, align 4
  %v6_abdc = inttoptr i32 %v0_abc8 to i32*
  %v7_abdc = call i32 @function_8570(i32 %v0_abd4, i32* %v6_abdc, i32 5, i32 1)
  %v1_abe8 = urem i32 %v7_abdc, 256
  store i32 %v1_abe8, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* %r3.global-to-local, align 4
  %v0_abf0 = load i32, i32* @r5, align 4
  store i32 %v0_abf0, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_abf8 = load i32, i32* @r4, align 4
  store i32 %v0_abf8, i32* %r0.global-to-local, align 4
  %v6_ac00 = inttoptr i32 %v0_abf0 to i32*
  %v7_ac00 = call i32 @function_8570(i32 %v0_abf8, i32* %v6_ac00, i32 7, i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32))
  %v0_ac04 = load i32, i32* @r5, align 4
  store i32 %v0_ac04, i32* %r1.global-to-local, align 4
  %v3_ac08 = mul i32 %v7_ac00, 65536
  store i32 %v3_ac08, i32* %ip.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_ac14 = load i32, i32* @r4, align 4
  store i32 %v0_ac14, i32* %r0.global-to-local, align 4
  %v3_ac18 = urem i32 %v7_ac00, 65536
  store i32 %v3_ac18, i32* @sl, align 4
  %v4_ac1c = inttoptr i32 %v0_ac04 to i32*
  %v5_ac1c = call i32 @function_8570(i32 %v0_ac14, i32* %v4_ac1c, i32 11, i32 1)
  %v1_ac24 = urem i32 %v5_ac1c, 256
  store i32 %v1_ac24, i32* %ip.global-to-local, align 4
  %v0_ac28 = load i32, i32* @r5, align 4
  store i32 %v0_ac28, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_ac34 = load i32, i32* @r4, align 4
  store i32 %v0_ac34, i32* %r0.global-to-local, align 4
  %v5_ac3c = inttoptr i32 %v0_ac28 to i32*
  %v6_ac3c = call i32 @function_8570(i32 %v0_ac34, i32* %v5_ac3c, i32 12, i32 1)
  %v1_ac44 = urem i32 %v6_ac3c, 256
  store i32 %v1_ac44, i32* %ip.global-to-local, align 4
  %v0_ac48 = load i32, i32* @r5, align 4
  store i32 %v0_ac48, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_ac54 = load i32, i32* @r4, align 4
  store i32 %v0_ac54, i32* %r0.global-to-local, align 4
  %v5_ac5c = inttoptr i32 %v0_ac48 to i32*
  %v6_ac5c = call i32 @function_8570(i32 %v0_ac54, i32* %v5_ac5c, i32 13, i32 1)
  %v1_ac64 = urem i32 %v6_ac5c, 256
  store i32 %v1_ac64, i32* %ip.global-to-local, align 4
  %v0_ac68 = load i32, i32* @r5, align 4
  store i32 %v0_ac68, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_ac74 = load i32, i32* @r4, align 4
  store i32 %v0_ac74, i32* %r0.global-to-local, align 4
  %v5_ac7c = inttoptr i32 %v0_ac68 to i32*
  %v6_ac7c = call i32 @function_8570(i32 %v0_ac74, i32* %v5_ac7c, i32 14, i32 1)
  %v1_ac84 = urem i32 %v6_ac7c, 256
  store i32 %v1_ac84, i32* %ip.global-to-local, align 4
  %v0_ac88 = load i32, i32* @r5, align 4
  store i32 %v0_ac88, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_ac94 = load i32, i32* @r4, align 4
  store i32 %v0_ac94, i32* %r0.global-to-local, align 4
  %v5_ac9c = inttoptr i32 %v0_ac88 to i32*
  %v6_ac9c = call i32 @function_8570(i32 %v0_ac94, i32* %v5_ac9c, i32 15, i32 1)
  %v1_aca4 = urem i32 %v6_ac9c, 256
  store i32 %v1_aca4, i32* %ip.global-to-local, align 4
  %v0_aca8 = load i32, i32* @r5, align 4
  store i32 %v0_aca8, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_acb4 = load i32, i32* @r4, align 4
  store i32 %v0_acb4, i32* %r0.global-to-local, align 4
  %v5_acbc = inttoptr i32 %v0_aca8 to i32*
  %v6_acbc = call i32 @function_8570(i32 %v0_acb4, i32* %v5_acbc, i32 16, i32 1)
  %v1_acc4 = urem i32 %v6_acbc, 256
  store i32 %v1_acc4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 768, i32* %r3.global-to-local, align 4
  %v0_acd0 = load i32, i32* @r5, align 4
  store i32 %v0_acd0, i32* %r1.global-to-local, align 4
  %v0_acd4 = load i32, i32* @r4, align 4
  store i32 %v0_acd4, i32* %r0.global-to-local, align 4
  %v5_acdc = inttoptr i32 %v0_acd0 to i32*
  %v6_acdc = call i32 @function_8570(i32 %v0_acd4, i32* %v5_acdc, i32 0, i32 768)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_acec = load i32, i32* @r5, align 4
  store i32 %v0_acec, i32* %r1.global-to-local, align 4
  %v0_acf0 = load i32, i32* @r4, align 4
  store i32 %v0_acf0, i32* %r0.global-to-local, align 4
  %v4_acf4 = inttoptr i32 %v0_acec to i32*
  %v5_acf4 = call i32 @function_8570(i32 %v0_acf0, i32* %v4_acf4, i32 1, i32 1)
  %v1_acfc = urem i32 %v5_acf4, 256
  store i32 %v1_acfc, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_ad10 = call i32 @function_12b7c(i32 2, i32 3, i32 6)
  store i32 %v3_ad10, i32* %r0.global-to-local, align 4
  %v7_ad14 = icmp eq i32 %v3_ad10, -1
  store i1 %v7_ad14, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_ad10, i32* @sb, align 4
  br i1 %v7_ad14, label %dec_label_pc_af04, label %dec_label_pc_ad20

dec_label_pc_ad20:                                ; preds = %dec_label_pc_ab3c
  store i32 1, i32* %stack_var_-44, align 4
  %v6_ad28 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_ad28, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_ad3c = call i32 @function_12b38(i32 %v3_ad10, i32 0, i32 3, i32 %v6_ad28, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_ad3c, i32* %r0.global-to-local, align 4
  %v7_ad40 = icmp eq i32 %v5_ad3c, -1
  store i1 %v7_ad40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ad40, label %dec_label_pc_aefc, label %dec_label_pc_ad48

dec_label_pc_ad48:                                ; preds = %dec_label_pc_ad20
  %v0_ad48 = load i32, i32* @r7, align 4
  %v3_ad48 = mul i32 %v0_ad48, 65536
  store i32 %v3_ad48, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r3, align 4
  %v0_ad50 = load i32, i32* @r6, align 4
  %v2_ad50 = icmp eq i32 %v0_ad50, 0
  store i1 %v2_ad50, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  %v3_ad58 = urem i32 %v0_ad48, 65536
  store i32 %v3_ad58, i32* @fp, align 4
  br i1 %v2_ad50, label %dec_label_pc_b188, label %dec_label_pc_ad60.preheader

dec_label_pc_ad60.preheader:                      ; preds = %dec_label_pc_ad48
  %v2_adac = ptrtoint i32* %stack_var_-144 to i32
  %v2_adf0 = ptrtoint i32* %stack_var_-64 to i32
  %v2_ae28 = ptrtoint i32* %stack_var_-80 to i32
  %v2_ae34 = ptrtoint i32* %stack_var_-336 to i32
  %v2_ae38 = ptrtoint i32* %stack_var_-48 to i32
  %v4_ae98 = zext i8 %tmp to i32
  %v1_ae9c = and i32 %v4_ae98, 18
  %v2_aea0 = icmp eq i32 %v1_ae9c, 18
  %v4_b044 = sext i8 %v5_aba0 to i32
  %sext = mul i32 %v5_abbc, 16777216
  %v4_b054 = sdiv i32 %sext, 16777216
  %v3_ae84 = sext i16 %tmp61 to i32
  %v1_aea8 = and i32 %v4_ae98, 5
  %v2_aea8 = icmp eq i32 %v1_aea8, 0
  %v4_ade8 = add i32 %v2_adac, 82
  %v5_ade8 = inttoptr i32 %v4_ade8 to i16*
  %v1_afd8 = add i32 %v6_acdc, 40
  %v1_b0ec = urem i32 %v5_ac1c, 2
  %tmp95 = sub nsw i32 0, %v1_b0ec
  %v4_b0f4 = and i32 %tmp95, 32
  %v1_b104 = urem i32 %v6_ac3c, 2
  %tmp96 = sub nsw i32 0, %v1_b104
  %v4_b10c = and i32 %tmp96, 16
  %v1_b11c = urem i32 %v6_ac5c, 2
  %tmp97 = sub nsw i32 0, %v1_b11c
  %v4_b124 = and i32 %tmp97, 8
  %v1_b134 = urem i32 %v6_ac7c, 2
  %tmp98 = sub nsw i32 0, %v1_b134
  %v4_b13c = and i32 %tmp98, 4
  %v1_b14c = urem i32 %v6_ac9c, 2
  %tmp99 = sub nsw i32 0, %v1_b14c
  %v3_b154 = and i32 %tmp99, 2
  %v1_b164 = urem i32 %v6_acbc, 2
  br label %dec_label_pc_ad60

dec_label_pc_ad60:                                ; preds = %dec_label_pc_ad60.preheader, %dec_label_pc_aed4
  %stack_var_-62.0 = phi i16 [ %stack_var_-62.3, %dec_label_pc_aed4 ], [ %tmp34, %dec_label_pc_ad60.preheader ]
  %stack_var_-60.0 = phi i32 [ %stack_var_-60.4, %dec_label_pc_aed4 ], [ %tmp37, %dec_label_pc_ad60.preheader ]
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_ad6c = call i32 @function_12b7c(i32 2, i32 1, i32 0)
  store i32 %v3_ad6c, i32* %r0.global-to-local, align 4
  %v7_ad70 = icmp eq i32 %v3_ad6c, -1
  store i1 %v7_ad70, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_ad6c, i32* @r5, align 4
  br i1 %v7_ad70, label %dec_label_pc_aed4, label %dec_label_pc_ad7c

dec_label_pc_ad7c:                                ; preds = %dec_label_pc_ad60, %dec_label_pc_aeb0
  %v0_ad84 = phi i32 [ %v3_aec4, %dec_label_pc_aeb0 ], [ %v3_ad6c, %dec_label_pc_ad60 ]
  %stack_var_-62.1 = phi i16 [ %stack_var_-62.2, %dec_label_pc_aeb0 ], [ %stack_var_-62.0, %dec_label_pc_ad60 ]
  %stack_var_-60.1 = phi i32 [ %v0_af84, %dec_label_pc_aeb0 ], [ %stack_var_-60.0, %dec_label_pc_ad60 ]
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_ad84 = call i32 @function_121d0(i32 %v0_ad84, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_ad8c = or i32 %v2_ad84, 2048
  store i32 %v1_ad8c, i32* %r2.global-to-local, align 4
  %v0_ad90 = load i32, i32* @r5, align 4
  store i32 %v0_ad90, i32* %r0.global-to-local, align 4
  %v2_ad94 = call i32 @function_121d0(i32 %v0_ad90, i32 4)
  %v3_ad98 = load i32, i32* %stack_var_-44, align 4
  %v5_ada0 = mul i32 %v3_ad98, 24
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  store i32 %v2_adac, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-64, align 4
  %v2_adb4 = add i32 %v5_ada0, %arg2
  store i32 %v2_adb4, i32* %r3.global-to-local, align 4
  %v1_adb8 = add i32 %v2_adb4, 20
  %v2_adb8 = inttoptr i32 %v1_adb8 to i8*
  %v3_adb8 = load i8, i8* %v2_adb8, align 1
  %v4_adb8 = zext i8 %v3_adb8 to i32
  store i32 %v4_adb8, i32* %r2.global-to-local, align 4
  %v2_adbc = icmp ugt i8 %v3_adb8, 30
  %v7_adbc = icmp eq i8 %v3_adb8, 31
  store i1 %v7_adbc, i1* %cpsr_z.global-to-local, align 1
  %v2_adc0 = xor i1 %v7_adbc, true
  %v3_adc0 = and i1 %v2_adbc, %v2_adc0
  br i1 %v3_adc0, label %bb, label %bb71

bb:                                               ; preds = %dec_label_pc_ad7c
  %v5_adc0 = add i32 %v2_adb4, 16
  %v6_adc0 = inttoptr i32 %v5_adc0 to i32*
  %v7_adc0 = load i32, i32* %v6_adc0, align 4
  store i32 %v7_adc0, i32* %r3.global-to-local, align 4
  br label %bb71

bb71:                                             ; preds = %dec_label_pc_ad7c, %bb
  %v4_adc4 = phi i32 [ %v2_adb4, %dec_label_pc_ad7c ], [ %v7_adc0, %bb ]
  %v4_adc4.stack_var_-60.1 = select i1 %v3_adc0, i32 %v4_adc4, i32 %stack_var_-60.1
  %v2_adc8 = xor i1 %v2_adbc, true
  %v3_adc8 = or i1 %v7_adbc, %v2_adc8
  br i1 %v3_adc8, label %dec_label_pc_af10, label %dec_label_pc_adcc

dec_label_pc_adcc:                                ; preds = %bb71, %dec_label_pc_af10
  %v0_af84 = phi i32 [ %v5_af60, %dec_label_pc_af10 ], [ %v4_adc4.stack_var_-60.1, %bb71 ]
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* %r3.global-to-local, align 4
  %v0_add4 = load i32, i32* @sl, align 4
  %v9_add4 = icmp eq i32 %v0_add4, ptrtoint ([3 x i8]* @global_var_ffff.45 to i32)
  store i1 %v9_add4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_add4, label %dec_label_pc_af6c, label %.thread9

.thread9:                                         ; preds = %dec_label_pc_adcc
  %v4_add8 = udiv i32 %v0_add4, 256
  %v2_addc = urem i32 %v0_add4, 256
  store i32 %v2_addc, i32* %r2.global-to-local, align 4
  %v5_ade0 = mul nuw nsw i32 %v2_addc, 256
  %v6_ade0 = or i32 %v5_ade0, %v4_add8
  store i32 %v6_ade0, i32* %r3.global-to-local, align 4
  store i32 %v2_adac, i32* %r0.global-to-local, align 4
  %v2_ade8 = trunc i32 %v6_ade0 to i16
  store i16 %v2_ade8, i16* %v5_ade8, align 2
  br label %dec_label_pc_adf0

dec_label_pc_adf0:                                ; preds = %.thread9, %dec_label_pc_af6c
  %stack_var_-62.2 = phi i16 [ %v1_af6c, %dec_label_pc_af6c ], [ %stack_var_-62.1, %.thread9 ]
  store i32 %v2_adf0, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_adf8 = load i32, i32* @r5, align 4
  store i32 %v0_adf8, i32* %r0.global-to-local, align 4
  %v3_adfc = call i32 @function_12964(i32 %v0_adf8, i32 %v2_adf0, i32 16)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_ae04 = call i32 @function_1201c(i32* null)
  store i32 %v2_ae04, i32* %r0.global-to-local, align 4
  store i32 %v2_ae04, i32* @r4, align 4
  %v9_ae64 = icmp eq i32 %tmp35, %v0_af84
  %v4_ae8c = zext i16 %stack_var_-62.2 to i32
  %. = zext i1 %v9_ae64 to i32
  %v9_ae78 = icmp eq i1 %v9_ae64, false
  %v9_ae90 = icmp eq i32 %v3_ae84, %v4_ae8c
  br label %dec_label_pc_ae20

dec_label_pc_ae10:                                ; preds = %.thread, %dec_label_pc_ae80, %dec_label_pc_aea8, %bb74
  %v2_ae10 = call i32 @function_1201c(i32* null)
  %v0_ae14 = load i32, i32* @r4, align 4
  %v2_ae14 = sub i32 %v2_ae10, %v0_ae14
  store i32 %v2_ae14, i32* %r0.global-to-local, align 4
  %v7_ae18 = icmp eq i32 %v2_ae14, 10
  store i1 %v7_ae18, i1* %cpsr_z.global-to-local, align 1
  %v8_ae1c = icmp sgt i32 %v2_ae14, 10
  br i1 %v8_ae1c, label %dec_label_pc_aeb0, label %dec_label_pc_ae20

dec_label_pc_ae20:                                ; preds = %dec_label_pc_ae10, %dec_label_pc_adf0
  store i32 16, i32* %stack_var_-48, align 4
  store i32 256, i32* %r2.global-to-local, align 4
  store i32 %v2_ae34, i32* %r1.global-to-local, align 4
  store i32 %v2_ae38, i32* %ip.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_ae40 = load i32, i32* @sb, align 4
  store i32 %v0_ae40, i32* %r0.global-to-local, align 4
  %v6_ae48 = call i32 @function_12a84(i32 %v0_ae40, i32 %v2_ae34, i32 256, i32 16384, i32 %v2_ae28, i32 %v2_ae38)
  store i32 %v6_ae48, i32* %r2.global-to-local, align 4
  %v7_ae50 = icmp eq i32 %v6_ae48, -1
  store i1 %v7_ae50, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v7_ae50, label %dec_label_pc_af04, label %dec_label_pc_ae5c

dec_label_pc_ae5c:                                ; preds = %dec_label_pc_ae20
  store i32 %v0_af84, i32* %r1.global-to-local, align 4
  store i32 %tmp35, i32* @r3, align 4
  store i32 %., i32* %ip.global-to-local, align 4
  %v7_ae70 = icmp eq i32 %v6_ae48, 40
  store i1 %v7_ae70, i1* %cpsr_z.global-to-local, align 1
  %tmp100 = icmp ult i32 %v6_ae48, 41
  br i1 %tmp100, label %.thread, label %bb74

.thread:                                          ; preds = %dec_label_pc_ae5c
  store i32 0, i32* %ip.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ae10

bb74:                                             ; preds = %dec_label_pc_ae5c
  store i1 %v9_ae78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ae78, label %dec_label_pc_ae10, label %dec_label_pc_ae80

dec_label_pc_ae80:                                ; preds = %bb74
  store i32 %v3_ae84, i32* @lr, align 4
  store i32 %v2_adac, i32* @r3, align 4
  store i32 %v4_ae8c, i32* %r2.global-to-local, align 4
  store i1 %v9_ae90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ae90, label %dec_label_pc_ae98, label %dec_label_pc_ae10

dec_label_pc_ae98:                                ; preds = %dec_label_pc_ae80
  store i32 %v4_ae98, i32* %r2.global-to-local, align 4
  store i32 %v1_ae9c, i32* @r3, align 4
  store i1 %v2_aea0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_aea0, label %dec_label_pc_af7c, label %dec_label_pc_aea8

dec_label_pc_aea8:                                ; preds = %dec_label_pc_ae98
  store i1 %v2_aea8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_aea8, label %dec_label_pc_ae10, label %dec_label_pc_aeb0

dec_label_pc_aeb0:                                ; preds = %dec_label_pc_aea8, %dec_label_pc_ae10
  %v0_aeb0 = load i32, i32* @r5, align 4
  store i32 %v0_aeb0, i32* %r0.global-to-local, align 4
  %v1_aeb4 = call i32 @function_1239c(i32 %v0_aeb0)
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_aec4 = call i32 @function_12b7c(i32 2, i32 1, i32 0)
  store i32 %v3_aec4, i32* %r0.global-to-local, align 4
  %v3_aec8 = icmp eq i32 %v3_aec4, -1
  %v8_aec8 = icmp eq i32 %v3_aec4, -1
  store i1 %v8_aec8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_aec4, i32* @r5, align 4
  br i1 %v3_aec8, label %dec_label_pc_aed4, label %dec_label_pc_ad7c

dec_label_pc_aed4:                                ; preds = %dec_label_pc_aeb0, %dec_label_pc_ad60, %bb81
  %stack_var_-62.3 = phi i16 [ %stack_var_-62.0, %dec_label_pc_ad60 ], [ %stack_var_-62.2, %bb81 ], [ %stack_var_-62.2, %dec_label_pc_aeb0 ]
  %stack_var_-60.4 = phi i32 [ %stack_var_-60.0, %dec_label_pc_ad60 ], [ %v0_af84, %bb81 ], [ %v0_af84, %dec_label_pc_aeb0 ]
  %v3_aed4 = load i32, i32* %stack_var_-44, align 4
  %v1_aed8 = add i32 %v3_aed4, 1
  store i32 %v1_aed8, i32* @r3, align 4
  %v1_aedc = load i32, i32* @r6, align 4
  %v9_aedc = icmp eq i32 %v1_aed8, %v1_aedc
  store i1 %v9_aedc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_aed8, i32* %stack_var_-44, align 4
  %v5_aee4 = icmp slt i32 %v1_aed8, %v1_aedc
  br i1 %v5_aee4, label %dec_label_pc_ad60, label %dec_label_pc_aee8

dec_label_pc_aee8:                                ; preds = %dec_label_pc_aed4
  store i32 %v6_acdc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b198

dec_label_pc_aefc:                                ; preds = %dec_label_pc_ad20
  %v0_aefc = load i32, i32* @sb, align 4
  store i32 %v0_aefc, i32* %r0.global-to-local, align 4
  %v1_af00 = call i32 @function_1239c(i32 %v0_aefc)
  store i32 %v1_af00, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_af04

dec_label_pc_af04:                                ; preds = %dec_label_pc_ae20, %dec_label_pc_ab3c, %dec_label_pc_aefc
  %v1_af0c = phi i32 [ %v3_ad10, %dec_label_pc_ab3c ], [ %v1_af00, %dec_label_pc_aefc ], [ 0, %dec_label_pc_ae20 ]
  store i32 %v27_ab3c, i32* %lr.global-to-local, align 4
  ret i32 %v1_af0c

dec_label_pc_af10:                                ; preds = %bb71
  %v1_af10 = add i32 %v4_adc4, 16
  %v2_af10 = inttoptr i32 %v1_af10 to i32*
  %v3_af10 = load i32, i32* %v2_af10, align 4
  store i32 %v3_af10, i32* @r4, align 4
  %v0_af14 = call i32 @function_df2c()
  store i32 %v0_af14, i32* %r0.global-to-local, align 4
  %v3_af18 = load i32, i32* %stack_var_-44, align 4
  %v5_af20 = mul i32 %v3_af18, 24
  %v0_af28 = load i32, i32* @r4, align 4
  %v1_af28 = and i32 %v0_af28, 16711680
  store i32 %v1_af28, i32* %ip.global-to-local, align 4
  %v3_af2c = udiv i32 %v0_af28, 16777216
  %v2_af30 = add i32 %v5_af20, %arg2
  store i32 %v2_af30, i32* %r1.global-to-local, align 4
  %v4_af34 = udiv i32 %v1_af28, 256
  %v5_af34 = or i32 %v4_af34, %v3_af2c
  store i32 %v5_af34, i32* %r2.global-to-local, align 4
  %v1_af38 = and i32 %v0_af28, 65280
  store i32 %v1_af38, i32* %r3.global-to-local, align 4
  %v1_af3c = add i32 %v2_af30, 20
  %v2_af3c = inttoptr i32 %v1_af3c to i8*
  %v3_af3c = load i8, i8* %v2_af3c, align 1
  %v4_af3c = zext i8 %v3_af3c to i32
  store i32 %v4_af3c, i32* %ip.global-to-local, align 4
  %v5_af44 = call i32 @llvm.bswap.i32(i32 %v0_af28)
  %v7_af48 = lshr i32 %v0_af14, %v4_af3c
  %v8_af48 = add i32 %v7_af48, %v5_af44
  store i32 %v8_af48, i32* %r2.global-to-local, align 4
  %v1_af4c = and i32 %v8_af48, 16711680
  store i32 %v1_af4c, i32* %r0.global-to-local, align 4
  %v1_af58 = and i32 %v8_af48, 65280
  store i32 %v1_af58, i32* %r1.global-to-local, align 4
  %v5_af60 = call i32 @llvm.bswap.i32(i32 %v8_af48)
  store i32 %v5_af60, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_adcc

dec_label_pc_af6c:                                ; preds = %dec_label_pc_adcc
  %v0_af6c = call i32 @function_df2c()
  %v1_af6c = trunc i32 %v0_af6c to i16
  store i32 %v0_af6c, i32* %r0.global-to-local, align 4
  store i32 %v2_adac, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_adf0

dec_label_pc_af7c:                                ; preds = %dec_label_pc_ae98
  %v3_af7c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_af7c, i32* @r4, align 4
  store i32 %v2_ab58, i32* %ip.global-to-local, align 4
  %v5_af84 = mul i32 %v3_af7c, 16
  %v6_af84 = add i32 %v5_af84, %v2_ab58
  %v7_af84 = inttoptr i32 %v6_af84 to i32*
  store i32 %v0_af84, i32* %v7_af84, align 4
  %v0_af88 = load i32, i32* @r8, align 4
  %v1_af88 = add i32 %v0_af88, 4
  %v2_af88 = inttoptr i32 %v1_af88 to i32*
  %v3_af88 = load i32, i32* %v2_af88, align 4
  store i32 %v3_af88, i32* %r1.global-to-local, align 4
  %v1_af94 = and i32 %v3_af88, 65280
  store i32 %v1_af94, i32* %r2.global-to-local, align 4
  store i32 %v2_ab58, i32* %r0.global-to-local, align 4
  %v0_afa4 = load i32, i32* @r4, align 4
  %v3_afa4 = mul i32 %v0_afa4, 16
  %v2_afa8 = add i32 %v3_afa4, %v2_ab58
  store i32 %v2_afa8, i32* %ip.global-to-local, align 4
  %v5_afac = call i32 @llvm.bswap.i32(i32 %v3_af88)
  store i32 %v5_afac, i32* %r3.global-to-local, align 4
  %v2_afb0 = add i32 %v2_afa8, 4
  %v3_afb0 = inttoptr i32 %v2_afb0 to i32*
  store i32 %v5_afac, i32* %v3_afb0, align 4
  %v0_afb4 = load i32, i32* @r8, align 4
  %v1_afb4 = add i32 %v0_afb4, 8
  %v2_afb4 = inttoptr i32 %v1_afb4 to i32*
  %v3_afb4 = load i32, i32* %v2_afb4, align 4
  store i32 %v3_afb4, i32* %r1.global-to-local, align 4
  %v1_afb8 = and i32 %v3_afb4, 16711680
  store i32 %v1_afb8, i32* %r0.global-to-local, align 4
  store i32 %v6_acdc, i32* %r2.global-to-local, align 4
  %v5_afd0 = call i32 @llvm.bswap.i32(i32 %v3_afb4)
  store i32 %v5_afd0, i32* %r3.global-to-local, align 4
  %v1_afd4 = add i32 %v0_afb4, 2
  %v2_afd4 = inttoptr i32 %v1_afd4 to i16*
  %v3_afd4 = load i16, i16* %v2_afd4, align 2
  %v4_afd4 = zext i16 %v3_afd4 to i32
  store i32 %v4_afd4, i32* %r1.global-to-local, align 4
  store i32 %v1_afd8, i32* @r7, align 4
  %v0_afdc = load i32, i32* @lr, align 4
  %v1_afdc = trunc i32 %v0_afdc to i16
  %v2_afdc = load i32, i32* %ip.global-to-local, align 4
  %v3_afdc = add i32 %v2_afdc, 14
  %v4_afdc = inttoptr i32 %v3_afdc to i16*
  store i16 %v1_afdc, i16* %v4_afdc, align 2
  %v0_afe0 = load i32, i32* %r1.global-to-local, align 4
  %v1_afe0 = trunc i32 %v0_afe0 to i16
  %v2_afe0 = load i32, i32* %ip.global-to-local, align 4
  %v3_afe0 = add i32 %v2_afe0, 12
  %v4_afe0 = inttoptr i32 %v3_afe0 to i16*
  store i16 %v1_afe0, i16* %v4_afe0, align 2
  %v0_afe4 = load i32, i32* %r3.global-to-local, align 4
  %v1_afe4 = load i32, i32* %ip.global-to-local, align 4
  %v2_afe4 = add i32 %v1_afe4, 8
  %v3_afe4 = inttoptr i32 %v2_afe4 to i32*
  store i32 %v0_afe4, i32* %v3_afe4, align 4
  %v0_afe8 = load i32, i32* @r7, align 4
  store i32 %v0_afe8, i32* @r0, align 4
  %v0_afec = call i32 @function_12dc4()
  store i32 %v0_afec, i32* %r0.global-to-local, align 4
  store i32 %v2_ab68, i32* %r3.global-to-local, align 4
  %v2_aff8 = load i32, i32* @r4, align 4
  %v5_aff8 = mul i32 %v2_aff8, 4
  %v6_aff8 = add i32 %v5_aff8, %v2_ab68
  %v7_aff8 = inttoptr i32 %v6_aff8 to i32*
  store i32 %v0_afec, i32* %v7_aff8, align 4
  %v3_affc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_affc, i32* %r2.global-to-local, align 4
  %v0_b000 = load i32, i32* %r3.global-to-local, align 4
  %v4_b000 = mul i32 %v3_affc, 4
  %v5_b000 = add i32 %v0_b000, %v4_b000
  %v6_b000 = inttoptr i32 %v5_b000 to i32*
  %v7_b000 = load i32, i32* %v6_b000, align 4
  store i32 %v7_b000, i32* @r4, align 4
  %v1_b004 = inttoptr i32 %v7_b000 to i8*
  %v2_b004 = load i8, i8* %v1_b004, align 1
  %tmp101 = urem i8 %v2_b004, 16
  %v1_b008 = zext i8 %tmp101 to i32
  %v1_b00c = or i32 %v1_b008, 64
  store i32 %v1_b00c, i32* %r3.global-to-local, align 4
  %v1_b010 = trunc i32 %v1_b00c to i8
  store i8 %v1_b010, i8* %v1_b004, align 1
  %v0_b014 = load i32, i32* @r4, align 4
  %v1_b014 = inttoptr i32 %v0_b014 to i8*
  %v2_b014 = load i8, i8* %v1_b014, align 1
  %v0_b018 = load i32, i32* @r7, align 4
  %tmp76 = mul i32 %v0_b018, 256
  %v1_b020 = and i8 %v2_b014, -16
  %v1_b024 = or i8 %v1_b020, 5
  %v1_b028 = and i32 %tmp76, 65280
  %tmp77 = udiv i32 %v0_b018, 256
  %v4_b02c = urem i32 %tmp77, 256
  %v5_b02c = or i32 %v4_b02c, %v1_b028
  store i32 %v5_b02c, i32* %r2.global-to-local, align 4
  %v0_b030 = load i32, i32* @fp, align 4
  %v1_b030 = urem i32 %v0_b030, 256
  store i32 %v1_b030, i32* %r0.global-to-local, align 4
  store i32 %v1_abe8, i32* %ip.global-to-local, align 4
  %v3_b038 = udiv i32 %v0_b030, 256
  store i32 %v3_b038, i32* %r1.global-to-local, align 4
  store i8 %v1_b024, i8* %v1_b014, align 1
  %v0_b040 = load i32, i32* %r1.global-to-local, align 4
  %v1_b040 = load i32, i32* %r0.global-to-local, align 4
  %v4_b040 = mul i32 %v1_b040, 256
  %v5_b040 = or i32 %v4_b040, %v0_b040
  store i32 %v5_b040, i32* %r1.global-to-local, align 4
  store i32 %v4_b044, i32* %r0.global-to-local, align 4
  %v2_b048 = load i32, i32* @r4, align 4
  %v3_b048 = add i32 %v2_b048, 1
  %v4_b048 = inttoptr i32 %v3_b048 to i8*
  store i8 %v5_aba0, i8* %v4_b048, align 1
  %v0_b04c = load i32, i32* %r1.global-to-local, align 4
  %v1_b04c = trunc i32 %v0_b04c to i16
  %v2_b04c = load i32, i32* @r4, align 4
  %v3_b04c = add i32 %v2_b04c, 4
  %v4_b04c = inttoptr i32 %v3_b04c to i16*
  store i16 %v1_b04c, i16* %v4_b04c, align 2
  %v0_b050 = load i32, i32* %ip.global-to-local, align 4
  %v2_b050 = icmp eq i32 %v0_b050, 0
  store i1 %v2_b050, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_b054, i32* %r1.global-to-local, align 4
  %v0_b058 = load i32, i32* %r2.global-to-local, align 4
  %v1_b058 = trunc i32 %v0_b058 to i16
  %v2_b058 = load i32, i32* @r4, align 4
  %v3_b058 = add i32 %v2_b058, 2
  %v4_b058 = inttoptr i32 %v3_b058 to i16*
  store i16 %v1_b058, i16* %v4_b058, align 2
  store i32 6, i32* %r3.global-to-local, align 4
  br i1 %v2_b050, label %bb79, label %bb78

bb78:                                             ; preds = %dec_label_pc_af7c
  store i32 64, i32* %r2.global-to-local, align 4
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_af7c, %bb78
  %v0_b064 = load i32, i32* %r1.global-to-local, align 4
  %v1_b064 = trunc i32 %v0_b064 to i8
  %v2_b064 = load i32, i32* @r4, align 4
  %v3_b064 = add i32 %v2_b064, 8
  %v4_b064 = inttoptr i32 %v3_b064 to i8*
  store i8 %v1_b064, i8* %v4_b064, align 1
  %v0_b068 = load i32, i32* %r3.global-to-local, align 4
  %v1_b068 = trunc i32 %v0_b068 to i8
  %v2_b068 = load i32, i32* @r4, align 4
  %v3_b068 = add i32 %v2_b068, 9
  %v4_b068 = inttoptr i32 %v3_b068 to i8*
  store i8 %v1_b068, i8* %v4_b068, align 1
  %v0_b06c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b06c, label %bb81, label %bb80

bb80:                                             ; preds = %bb79
  %v1_b06c = load i32, i32* %r2.global-to-local, align 4
  %v2_b06c = trunc i32 %v1_b06c to i16
  %v3_b06c = load i32, i32* @r4, align 4
  %v4_b06c = add i32 %v3_b06c, 6
  %v5_b06c = inttoptr i32 %v4_b06c to i16*
  store i16 %v2_b06c, i16* %v5_b06c, align 2
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  store i32 ptrtoint (i32* @global_var_1a2d4.47 to i32), i32* %r2.global-to-local, align 4
  %v2_b074 = load i32, i32* @global_var_1a2d4.47, align 4
  store i32 %v2_b074, i32* %r1.global-to-local, align 4
  %v1_b078 = load i32, i32* @r4, align 4
  %v2_b078 = add i32 %v1_b078, 12
  %v3_b078 = inttoptr i32 %v2_b078 to i32*
  store i32 %v2_b074, i32* %v3_b078, align 4
  %v3_b07c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b07c, i32* %r3.global-to-local, align 4
  store i32 %v2_ab58, i32* %ip.global-to-local, align 4
  %v4_b084 = mul i32 %v3_b07c, 16
  %v5_b084 = add i32 %v4_b084, %v2_ab58
  %v6_b084 = inttoptr i32 %v5_b084 to i32*
  %v7_b084 = load i32, i32* %v6_b084, align 4
  store i32 %v7_b084, i32* %r2.global-to-local, align 4
  store i32 %v5_b084, i32* %r3.global-to-local, align 4
  %v1_b090 = load i32, i32* @r4, align 4
  %v2_b090 = add i32 %v1_b090, 16
  %v3_b090 = inttoptr i32 %v2_b090 to i32*
  store i32 %v7_b084, i32* %v3_b090, align 4
  %v0_b094 = load i32, i32* %r3.global-to-local, align 4
  %v1_b094 = add i32 %v0_b094, 12
  %v2_b094 = inttoptr i32 %v1_b094 to i16*
  %v3_b094 = load i16, i16* %v2_b094, align 2
  %v4_b094 = zext i16 %v3_b094 to i32
  store i32 %v4_b094, i32* %r0.global-to-local, align 4
  %v1_b098 = add i32 %v0_b094, 8
  %v2_b098 = inttoptr i32 %v1_b098 to i32*
  %v3_b098 = load i32, i32* %v2_b098, align 4
  store i32 %v3_b098, i32* %r1.global-to-local, align 4
  %v2_b09c = load i32, i32* @r4, align 4
  %v3_b09c = add i32 %v2_b09c, 20
  %v4_b09c = inttoptr i32 %v3_b09c to i16*
  store i16 %v3_b094, i16* %v4_b09c, align 2
  %v0_b0a0 = load i32, i32* @r4, align 4
  %v1_b0a0 = add i32 %v0_b0a0, 20
  store i32 %v1_b0a0, i32* @r8, align 4
  %v1_b0a4 = add i32 %v0_b0a0, 33
  %v2_b0a4 = inttoptr i32 %v1_b0a4 to i8*
  %v3_b0a4 = load i8, i8* %v2_b0a4, align 1
  %v4_b0a4 = zext i8 %v3_b0a4 to i32
  store i32 %v4_b0a4, i32* %r2.global-to-local, align 4
  %v0_b0a8 = load i32, i32* %r1.global-to-local, align 4
  %v2_b0a8 = add i32 %v0_b0a0, 24
  %v3_b0a8 = inttoptr i32 %v2_b0a8 to i32*
  store i32 %v0_b0a8, i32* %v3_b0a8, align 4
  %v0_b0ac = load i32, i32* %r2.global-to-local, align 4
  %v1_b0ac = or i32 %v0_b0ac, 1
  store i32 %v1_b0ac, i32* %r2.global-to-local, align 4
  %v0_b0b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_b0b0 = add i32 %v0_b0b0, 4
  %v2_b0b0 = inttoptr i32 %v1_b0b0 to i32*
  %v3_b0b0 = load i32, i32* %v2_b0b0, align 4
  store i32 %v3_b0b0, i32* %r1.global-to-local, align 4
  %v1_b0b4 = add i32 %v0_b0b0, 14
  %v2_b0b4 = inttoptr i32 %v1_b0b4 to i16*
  %v3_b0b4 = load i16, i16* %v2_b0b4, align 2
  %v4_b0b4 = zext i16 %v3_b0b4 to i32
  store i32 %v4_b0b4, i32* %r3.global-to-local, align 4
  %v1_b0b8 = trunc i32 %v1_b0ac to i8
  %v2_b0b8 = load i32, i32* @r8, align 4
  %v3_b0b8 = add i32 %v2_b0b8, 13
  %v4_b0b8 = inttoptr i32 %v3_b0b8 to i8*
  store i8 %v1_b0b8, i8* %v4_b0b8, align 1
  %v0_b0bc = load i32, i32* %r3.global-to-local, align 4
  %v1_b0bc = trunc i32 %v0_b0bc to i16
  %v2_b0bc = load i32, i32* @r8, align 4
  %v3_b0bc = add i32 %v2_b0bc, 2
  %v4_b0bc = inttoptr i32 %v3_b0bc to i16*
  store i16 %v1_b0bc, i16* %v4_b0bc, align 2
  %v0_b0c0 = load i32, i32* @r8, align 4
  %v1_b0c0 = add i32 %v0_b0c0, 12
  %v2_b0c0 = inttoptr i32 %v1_b0c0 to i8*
  %v3_b0c0 = load i8, i8* %v2_b0c0, align 1
  %v4_b0c0 = zext i8 %v3_b0c0 to i32
  store i32 %v4_b0c0, i32* %r3.global-to-local, align 4
  %v1_b0c4 = add i32 %v0_b0c0, 13
  %v2_b0c4 = inttoptr i32 %v1_b0c4 to i8*
  %v3_b0c4 = load i8, i8* %v2_b0c4, align 1
  %v4_b0c4 = zext i8 %v3_b0c4 to i32
  %tmp102 = urem i8 %v3_b0c0, 16
  %v1_b0c8 = zext i8 %tmp102 to i32
  %v1_b0cc = or i32 %v1_b0c8, 128
  store i32 %v1_b0cc, i32* %r3.global-to-local, align 4
  %v1_b0d0 = or i32 %v4_b0c4, 16
  store i32 %v1_b0d0, i32* %r2.global-to-local, align 4
  %v0_b0d4 = load i32, i32* %r1.global-to-local, align 4
  %v2_b0d4 = add i32 %v0_b0c0, 8
  %v3_b0d4 = inttoptr i32 %v2_b0d4 to i32*
  store i32 %v0_b0d4, i32* %v3_b0d4, align 4
  %v0_b0d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_b0d8 = trunc i32 %v0_b0d8 to i8
  %v2_b0d8 = load i32, i32* @r8, align 4
  %v3_b0d8 = add i32 %v2_b0d8, 12
  %v4_b0d8 = inttoptr i32 %v3_b0d8 to i8*
  store i8 %v1_b0d8, i8* %v4_b0d8, align 1
  %v0_b0dc = load i32, i32* %r2.global-to-local, align 4
  %v1_b0dc = trunc i32 %v0_b0dc to i8
  %v2_b0dc = load i32, i32* @r8, align 4
  %v3_b0dc = add i32 %v2_b0dc, 13
  %v4_b0dc = inttoptr i32 %v3_b0dc to i8*
  store i8 %v1_b0dc, i8* %v4_b0dc, align 1
  %v0_b0e0 = call i32 @function_df2c()
  %v1_b0e0 = trunc i32 %v0_b0e0 to i16
  store i32 %v0_b0e0, i32* %r0.global-to-local, align 4
  store i32 %v1_ac24, i32* %r1.global-to-local, align 4
  %v0_b0e8 = load i32, i32* @r8, align 4
  %v1_b0e8 = add i32 %v0_b0e8, 13
  %v2_b0e8 = inttoptr i32 %v1_b0e8 to i8*
  %v3_b0e8 = load i8, i8* %v2_b0e8, align 1
  %v4_b0e8 = zext i8 %v3_b0e8 to i32
  store i32 %v1_b0ec, i32* %r2.global-to-local, align 4
  %v1_b0f0 = and i32 %v4_b0e8, 223
  %v5_b0f4 = or i32 %v1_b0f0, %v4_b0f4
  store i32 %v5_b0f4, i32* %r3.global-to-local, align 4
  %v1_b0f8 = trunc i32 %v5_b0f4 to i8
  store i8 %v1_b0f8, i8* %v2_b0e8, align 1
  store i32 %v1_ac44, i32* %ip.global-to-local, align 4
  %v0_b100 = load i32, i32* @r8, align 4
  %v1_b100 = add i32 %v0_b100, 13
  %v2_b100 = inttoptr i32 %v1_b100 to i8*
  %v3_b100 = load i8, i8* %v2_b100, align 1
  %v4_b100 = zext i8 %v3_b100 to i32
  store i32 %v1_b104, i32* %r3.global-to-local, align 4
  %v1_b108 = and i32 %v4_b100, 239
  %v5_b10c = or i32 %v1_b108, %v4_b10c
  store i32 %v5_b10c, i32* %r2.global-to-local, align 4
  %v1_b110 = trunc i32 %v5_b10c to i8
  store i8 %v1_b110, i8* %v2_b100, align 1
  store i32 %v1_ac64, i32* %r1.global-to-local, align 4
  %v0_b118 = load i32, i32* @r8, align 4
  %v1_b118 = add i32 %v0_b118, 13
  %v2_b118 = inttoptr i32 %v1_b118 to i8*
  %v3_b118 = load i8, i8* %v2_b118, align 1
  %v4_b118 = zext i8 %v3_b118 to i32
  store i32 %v1_b11c, i32* %r2.global-to-local, align 4
  %v1_b120 = and i32 %v4_b118, 247
  %v5_b124 = or i32 %v1_b120, %v4_b124
  store i32 %v5_b124, i32* %r3.global-to-local, align 4
  %v1_b128 = trunc i32 %v5_b124 to i8
  store i8 %v1_b128, i8* %v2_b118, align 1
  store i32 %v1_ac84, i32* %ip.global-to-local, align 4
  %v0_b130 = load i32, i32* @r8, align 4
  %v1_b130 = add i32 %v0_b130, 13
  %v2_b130 = inttoptr i32 %v1_b130 to i8*
  %v3_b130 = load i8, i8* %v2_b130, align 1
  %v4_b130 = zext i8 %v3_b130 to i32
  store i32 %v1_b134, i32* %r3.global-to-local, align 4
  %v1_b138 = and i32 %v4_b130, 251
  %v5_b13c = or i32 %v1_b138, %v4_b13c
  store i32 %v5_b13c, i32* %r2.global-to-local, align 4
  %v1_b140 = trunc i32 %v5_b13c to i8
  store i8 %v1_b140, i8* %v2_b130, align 1
  store i32 %v1_aca4, i32* %r1.global-to-local, align 4
  %v0_b148 = load i32, i32* @r8, align 4
  %v1_b148 = add i32 %v0_b148, 13
  %v2_b148 = inttoptr i32 %v1_b148 to i8*
  %v3_b148 = load i8, i8* %v2_b148, align 1
  %v4_b148 = zext i8 %v3_b148 to i32
  store i32 %v1_b14c, i32* %r2.global-to-local, align 4
  %v1_b150 = and i32 %v4_b148, 253
  %v4_b154 = or i32 %v1_b150, %v3_b154
  store i32 %v4_b154, i32* %r3.global-to-local, align 4
  %v1_b158 = trunc i32 %v4_b154 to i8
  store i8 %v1_b158, i8* %v2_b148, align 1
  store i32 %v1_acc4, i32* %ip.global-to-local, align 4
  %v0_b160 = load i32, i32* @r8, align 4
  %v1_b160 = add i32 %v0_b160, 13
  %v2_b160 = inttoptr i32 %v1_b160 to i8*
  %v3_b160 = load i8, i8* %v2_b160, align 1
  %v4_b160 = zext i8 %v3_b160 to i32
  %v1_b168 = and i32 %v4_b160, 254
  store i32 %v1_b168, i32* %r2.global-to-local, align 4
  %v2_b16c = or i32 %v1_b168, %v1_b164
  store i32 %v2_b16c, i32* %r3.global-to-local, align 4
  %v1_b170 = trunc i32 %v2_b16c to i8
  store i8 %v1_b170, i8* %v2_b160, align 1
  %v3_b174 = load i32, i32* @r8, align 4
  %v4_b174 = add i32 %v3_b174, 14
  %v5_b174 = inttoptr i32 %v4_b174 to i16*
  store i16 %v1_b0e0, i16* %v5_b174, align 2
  store i32 %v6_acdc, i32* %r1.global-to-local, align 4
  %v0_b17c = load i32, i32* @r4, align 4
  %v1_b17c = add i32 %v0_b17c, 40
  store i32 %v1_b17c, i32* %r0.global-to-local, align 4
  %v2_b180 = inttoptr i32 %v1_b17c to i16*
  %v3_b180 = call i32 @function_e0c0(i16* %v2_b180, i32 %v6_acdc)
  store i32 %v3_b180, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_aed4

dec_label_pc_b188:                                ; preds = %dec_label_pc_ad48
  store i32 %v6_acdc, i32* %r1.global-to-local, align 4
  %.pre = add i32 %v6_acdc, 40
  br label %dec_label_pc_b198

dec_label_pc_b198:                                ; preds = %dec_label_pc_aee8, %dec_label_pc_b188
  %storemerge6.pre-phi = phi i32 [ %v1_afd8, %dec_label_pc_aee8 ], [ %.pre, %dec_label_pc_b188 ]
  %v0_b1ac26 = phi i32 [ %v1_aedc, %dec_label_pc_aee8 ], [ 0, %dec_label_pc_b188 ]
  store i32 %storemerge6.pre-phi, i32* @r7, align 4
  %storemerge4 = mul i32 %v6_acdc, 65536
  %storemerge = add i32 %v6_acdc, 20
  store i32 %storemerge, i32* @sl, align 4
  %v1_b198 = add i32 %storemerge4, 1310720
  store i32 %v1_b198, i32* %r2.global-to-local, align 4
  %tmp82 = udiv i32 %v1_b198, 256
  %v3_b1a0 = and i32 %tmp82, 65280
  store i32 %v3_b1a0, i32* %r3.global-to-local, align 4
  %v4_b1a4 = udiv i32 %v1_b198, 16777216
  %v5_b1a4 = or i32 %v3_b1a0, %v4_b1a4
  store i32 %v5_b1a4, i32* @r8, align 4
  %v2_b2d0 = icmp eq i32 %v1_acfc, 0
  br label %dec_label_pc_b1a8

dec_label_pc_b1a8:                                ; preds = %dec_label_pc_b1a8, %dec_label_pc_b2b4, %dec_label_pc_b198
  %v0_b1ac = phi i32 [ %v0_b1ac26, %dec_label_pc_b198 ], [ 0, %dec_label_pc_b2b4 ], [ 0, %dec_label_pc_b1a8 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b1ac = icmp eq i32 %v0_b1ac, 0
  store i1 %v2_b1ac, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_b1ac, label %dec_label_pc_b1a8, label %dec_label_pc_b1b8

dec_label_pc_b1b8:                                ; preds = %dec_label_pc_b1a8, %dec_label_pc_b2b4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b1bc

dec_label_pc_b1bc:                                ; preds = %dec_label_pc_b1e4, %dec_label_pc_b1b8
  %v1_b1c4 = phi i32 [ %v1_b2a4, %dec_label_pc_b1e4 ], [ 0, %dec_label_pc_b1b8 ]
  store i32 %v2_ab68, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10000.44 to i32), i32* %r3.global-to-local, align 4
  %v4_b1c4 = mul i32 %v1_b1c4, 4
  %v5_b1c4 = add i32 %v4_b1c4, %v2_ab68
  %v6_b1c4 = inttoptr i32 %v5_b1c4 to i32*
  %v7_b1c4 = load i32, i32* %v6_b1c4, align 4
  store i32 %v7_b1c4, i32* @r4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* %r3.global-to-local, align 4
  %v0_b1cc = load i32, i32* @fp, align 4
  %v9_b1cc = icmp eq i32 %v0_b1cc, ptrtoint ([3 x i8]* @global_var_ffff.45 to i32)
  store i1 %v9_b1cc, i1* %cpsr_z.global-to-local, align 1
  %v1_b1d0 = add i32 %v7_b1c4, 20
  store i32 %v1_b1d0, i32* @r5, align 4
  br i1 %v9_b1cc, label %dec_label_pc_b2c8, label %dec_label_pc_b1d8

dec_label_pc_b1d8:                                ; preds = %dec_label_pc_b1bc
  store i32 %v1_acfc, i32* %r3.global-to-local, align 4
  store i1 %v2_b2d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b2d0, label %dec_label_pc_b1e4, label %dec_label_pc_b2dc

dec_label_pc_b1e4:                                ; preds = %dec_label_pc_b1d8, %dec_label_pc_b2c8, %dec_label_pc_b2dc
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_b1e8 = load i32, i32* @r4, align 4
  %v3_b1e8 = add i32 %v2_b1e8, 10
  %v4_b1e8 = inttoptr i32 %v3_b1e8 to i16*
  store i16 0, i16* %v4_b1e8, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_b1f0 = load i32, i32* @r4, align 4
  store i32 %v0_b1f0, i32* @r0, align 4
  %v2_b1f4 = call i32 @function_c848(i32 %v0_b1f0, i32 20)
  %v3_b1f4 = trunc i32 %v2_b1f4 to i16
  store i32 %v2_b1f4, i32* %r0.global-to-local, align 4
  %v3_b1f8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_ab58, i32* %r2.global-to-local, align 4
  %v3_b200 = mul i32 %v3_b1f8, 16
  %v2_b204 = add i32 %v3_b200, %v2_ab58
  store i32 %v2_b204, i32* %r1.global-to-local, align 4
  %v1_b208 = add i32 %v2_b204, 4
  %v2_b208 = inttoptr i32 %v1_b208 to i32*
  %v3_b208 = load i32, i32* %v2_b208, align 4
  %v3_b20c = mul i32 %v3_b208, 65536
  store i32 %v3_b20c, i32* %ip.global-to-local, align 4
  %tmp83 = mul i32 %v3_b208, 256
  %v1_b214 = and i32 %tmp83, 65280
  %tmp84 = udiv i32 %v3_b208, 256
  %v4_b218 = urem i32 %tmp84, 256
  %v5_b218 = or i32 %v4_b218, %v1_b214
  store i32 %v5_b218, i32* %r3.global-to-local, align 4
  %v1_b21c = add i32 %v3_b208, 1
  store i32 %v1_b21c, i32* %r2.global-to-local, align 4
  store i32 %v1_b21c, i32* %v2_b208, align 4
  %v0_b224 = load i32, i32* %r3.global-to-local, align 4
  %v1_b224 = load i32, i32* @r5, align 4
  %v2_b224 = add i32 %v1_b224, 4
  %v3_b224 = inttoptr i32 %v2_b224 to i32*
  store i32 %v0_b224, i32* %v3_b224, align 4
  %v0_b228 = load i32, i32* %r1.global-to-local, align 4
  %v1_b228 = add i32 %v0_b228, 8
  %v2_b228 = inttoptr i32 %v1_b228 to i32*
  %v3_b228 = load i32, i32* %v2_b228, align 4
  %tmp85 = mul i32 %v3_b228, 256
  %v1_b234 = and i32 %tmp85, 65280
  %tmp86 = udiv i32 %v3_b228, 256
  %v4_b238 = urem i32 %tmp86, 256
  %v5_b238 = or i32 %v4_b238, %v1_b234
  %v1_b23c = load i32, i32* @r5, align 4
  %v2_b23c = add i32 %v1_b23c, 8
  %v3_b23c = inttoptr i32 %v2_b23c to i32*
  store i32 %v5_b238, i32* %v3_b23c, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_b244 = load i32, i32* @r4, align 4
  %v4_b244 = add i32 %v3_b244, 10
  %v5_b244 = inttoptr i32 %v4_b244 to i16*
  store i16 %v3_b1f4, i16* %v5_b244, align 2
  %v0_b248 = load i32, i32* @r5, align 4
  store i32 %v0_b248, i32* @r1, align 4
  %v0_b24c = load i32, i32* %r3.global-to-local, align 4
  %v1_b24c = trunc i32 %v0_b24c to i16
  %v3_b24c = add i32 %v0_b248, 16
  %v4_b24c = inttoptr i32 %v3_b24c to i16*
  store i16 %v1_b24c, i16* %v4_b24c, align 2
  %v0_b250 = load i32, i32* @r8, align 4
  store i32 %v0_b250, i32* %r2.global-to-local, align 4
  %v0_b254 = load i32, i32* @sl, align 4
  store i32 %v0_b254, i32* %r3.global-to-local, align 4
  %v0_b258 = load i32, i32* @r4, align 4
  store i32 %v0_b258, i32* %r0.global-to-local, align 4
  %v4_b25c = call i32 @function_c898(i32 %v0_b258, i32 %v0_b248, i32 %v0_b250, i32 %v0_b254)
  %v5_b25c = trunc i32 %v4_b25c to i16
  store i32 %v4_b25c, i32* %r0.global-to-local, align 4
  %v3_b260 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b260, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v3_b268 = mul i32 %v3_b260, 32
  store i32 %v3_b268, i32* %lr.global-to-local, align 4
  %v3_b26c = load i32, i32* @r5, align 4
  %v4_b26c = add i32 %v3_b26c, 16
  %v5_b26c = inttoptr i32 %v4_b26c to i16*
  store i16 %v5_b25c, i16* %v5_b26c, align 2
  %v0_b270 = load i32, i32* %lr.global-to-local, align 4
  %v1_b270 = load i32, i32* %r3.global-to-local, align 4
  %tmp103 = mul i32 %v1_b270, -8
  %v5_b270 = add i32 %v0_b270, %tmp103
  store i32 %v5_b270, i32* %lr.global-to-local, align 4
  %v0_b274 = load i32, i32* @r5, align 4
  %v1_b274 = add i32 %v0_b274, 2
  %v2_b274 = inttoptr i32 %v1_b274 to i16*
  %v3_b274 = load i16, i16* %v2_b274, align 2
  %v1_b278 = load i32, i32* %ip.global-to-local, align 4
  %v2_b278 = add i32 %v1_b278, %v5_b270
  store i32 %v2_b278, i32* @lr, align 4
  %v3_b27c = add i32 %v2_b278, 2
  %v4_b27c = inttoptr i32 %v3_b27c to i16*
  store i16 %v3_b274, i16* %v4_b27c, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_b288 = load i32, i32* @r4, align 4
  store i32 %v0_b288, i32* %r1.global-to-local, align 4
  %v0_b28c = load i32, i32* @sb, align 4
  store i32 %v0_b28c, i32* %r0.global-to-local, align 4
  %v0_b290 = load i32, i32* @r7, align 4
  store i32 %v0_b290, i32* %r2.global-to-local, align 4
  %v0_b294 = load i32, i32* @lr, align 4
  %v6_b29c = call i32 @function_12af8(i32 %v0_b28c, i32 %v0_b288, i32 %v0_b290, i32 16384, i32 %v0_b294, i32 16)
  %v3_b2a0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b2a0, i32* %r3.global-to-local, align 4
  %v1_b2a4 = add i32 %v3_b2a0, 1
  store i32 %v1_b2a4, i32* %r0.global-to-local, align 4
  %v0_b2a8 = load i32, i32* @r6, align 4
  %v9_b2a8 = icmp eq i32 %v0_b2a8, %v1_b2a4
  store i1 %v9_b2a8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_b2a4, i32* %stack_var_-44, align 4
  %v8_b2b0 = icmp sgt i32 %v0_b2a8, %v1_b2a4
  br i1 %v8_b2b0, label %dec_label_pc_b1bc, label %dec_label_pc_b2b4

dec_label_pc_b2b4:                                ; preds = %dec_label_pc_b1e4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b2b8 = icmp eq i32 %v0_b2a8, 0
  store i1 %v2_b2b8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_b2b8, label %dec_label_pc_b1a8, label %dec_label_pc_b1b8

dec_label_pc_b2c8:                                ; preds = %dec_label_pc_b1bc
  %v0_b2c8 = call i32 @function_df2c()
  %v1_b2c8 = trunc i32 %v0_b2c8 to i16
  store i32 %v0_b2c8, i32* %r0.global-to-local, align 4
  store i32 %v1_acfc, i32* %r3.global-to-local, align 4
  store i1 %v2_b2d0, i1* %cpsr_z.global-to-local, align 1
  %v3_b2d4 = load i32, i32* @r4, align 4
  %v4_b2d4 = add i32 %v3_b2d4, 4
  %v5_b2d4 = inttoptr i32 %v4_b2d4 to i16*
  store i16 %v1_b2c8, i16* %v5_b2d4, align 2
  br i1 %v2_b2d0, label %dec_label_pc_b1e4, label %dec_label_pc_b2c8.dec_label_pc_b2dc_crit_edge

dec_label_pc_b2c8.dec_label_pc_b2dc_crit_edge:    ; preds = %dec_label_pc_b2c8
  %v0_b2dc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_b2dc

dec_label_pc_b2dc:                                ; preds = %dec_label_pc_b2c8.dec_label_pc_b2dc_crit_edge, %dec_label_pc_b1d8
  %v0_b2dc = phi i32 [ %v0_b2dc.pre, %dec_label_pc_b2c8.dec_label_pc_b2dc_crit_edge ], [ %v7_b1c4, %dec_label_pc_b1d8 ]
  %v1_b2dc = add i32 %v0_b2dc, 40
  store i32 %v1_b2dc, i32* %r0.global-to-local, align 4
  store i32 %v6_acdc, i32* %r1.global-to-local, align 4
  %v2_b2e4 = inttoptr i32 %v1_b2dc to i16*
  %v3_b2e4 = call i32 @function_e0c0(i16* %v2_b2e4, i32 %v6_acdc)
  store i32 %v3_b2e4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b1e4

; uselistorder directives
  uselistorder i32 %v0_b2c8, { 1, 0 }
  uselistorder i32 %v1_b2a4, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_b270, { 1, 0 }
  uselistorder i32 %v4_b25c, { 1, 0 }
  uselistorder i32 %v3_b228, { 1, 0 }
  uselistorder i32 %v3_b208, { 3, 2, 0, 1 }
  uselistorder i32 %v2_b1f4, { 1, 0 }
  uselistorder i1 %v2_b2d0, { 2, 3, 1, 0 }
  uselistorder i32 %v0_b0e0, { 1, 0 }
  uselistorder i32 %v0_b018, { 1, 0 }
  uselistorder i32 %v5_afac, { 1, 0 }
  uselistorder i32 %v0_af6c, { 1, 0 }
  uselistorder i32 %v0_af28, { 1, 2, 0, 3 }
  uselistorder i32 %v1_aed8, { 1, 0, 2, 3 }
  uselistorder i32 %v3_aec4, { 1, 0, 3, 4, 2 }
  uselistorder i1 %v7_ae50, { 1, 0 }
  uselistorder i32 %v6_ae48, { 0, 2, 1, 3 }
  uselistorder i1 %v9_ae78, { 1, 0 }
  uselistorder i32 %v4_ae8c, { 1, 0 }
  uselistorder i16 %stack_var_-62.2, { 0, 1, 3, 2 }
  uselistorder i32 %v0_add4, { 1, 0, 2 }
  uselistorder i32 %v0_af84, { 1, 0, 2, 4, 5, 3 }
  uselistorder i32 %v4_adc4, { 1, 0 }
  uselistorder i1 %v7_adbc, { 1, 0, 2 }
  uselistorder i1 %v7_ad70, { 1, 0 }
  uselistorder i32 %v3_ad6c, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-60.0, { 1, 0 }
  uselistorder i16 %stack_var_-62.0, { 1, 0 }
  uselistorder i32 %v1_b14c, { 1, 0 }
  uselistorder i32 %v1_b134, { 1, 0 }
  uselistorder i32 %v1_b11c, { 1, 0 }
  uselistorder i32 %v1_b104, { 1, 0 }
  uselistorder i32 %v1_b0ec, { 1, 0 }
  uselistorder i32 %v3_ae84, { 1, 0 }
  uselistorder i1 %v2_aea0, { 1, 0 }
  uselistorder i32 %v1_ae9c, { 1, 0 }
  uselistorder i32 %v4_ae98, { 2, 0, 1 }
  uselistorder i32 %v2_adac, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v0_ad48, { 1, 0 }
  uselistorder i1 %v7_ad40, { 1, 0 }
  uselistorder i1 %v7_ad14, { 1, 0 }
  uselistorder i32 %v3_ad10, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v1_acfc, { 2, 3, 1, 0 }
  uselistorder i32 %v6_acdc, { 9, 8, 2, 0, 1, 10, 5, 4, 6, 7, 3 }
  uselistorder i32 %v1_acc4, { 1, 0 }
  uselistorder i32 %v1_aca4, { 1, 0 }
  uselistorder i32 %v1_ac84, { 1, 0 }
  uselistorder i32 %v1_ac64, { 1, 0 }
  uselistorder i32 %v1_ac44, { 1, 0 }
  uselistorder i32 %v1_ac24, { 1, 0 }
  uselistorder i32 %v7_ac00, { 1, 0 }
  uselistorder i32 %v1_abe8, { 1, 0 }
  uselistorder i8 %v5_aba0, { 1, 0 }
  uselistorder i32 %v6_ab80, { 1, 0 }
  uselistorder i32 %v2_ab68, { 0, 3, 1, 2 }
  uselistorder i32 %v2_ab58, { 0, 7, 1, 4, 2, 5, 3, 6 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14 }
  uselistorder i32* %r3.global-to-local, { 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 45, 47, 49, 48, 50, 52, 51, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 5, 7, 6, 9, 8, 11, 10, 16, 12, 13, 14, 15, 19, 17, 18, 21, 20, 22, 25, 24, 23, 26, 27, 28, 30, 31, 29, 32, 34, 33, 35, 36, 37, 39, 38, 40, 42, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 32, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 23, 15, 16, 13, 17, 18, 19, 20, 21, 22 }
  uselistorder i32 %arg2, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b1e4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b1b8, { 1, 0 }
  uselistorder label %dec_label_pc_b1a8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b198, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %dec_label_pc_af04, { 2, 0, 1 }
  uselistorder label %dec_label_pc_aed4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ae10, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_adf0, { 1, 0 }
  uselistorder label %dec_label_pc_adcc, { 1, 0 }
  uselistorder label %bb71, { 1, 0 }
  uselistorder label %dec_label_pc_ad7c, { 1, 0 }
  uselistorder label %dec_label_pc_ad60, { 1, 0 }
}

define i32 @function_b2f0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_b2f0:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i8 @__decompiler_undefined_function_1()
  %tmp34 = call i16 @__decompiler_undefined_function_3()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %tmp61 = call i16 @__decompiler_undefined_function_3()
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v27_b2f0 = load i32, i32* @lr, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  %v2_b30c = call i32 @function_136e4(i32 %arg1, i32 16)
  store i32 4, i32* %r1.global-to-local, align 4
  %v0_b318 = load i32, i32* @r6, align 4
  store i32 %v0_b318, i32* %r0.global-to-local, align 4
  %v2_b31c = call i32 @function_136e4(i32 %v0_b318, i32 4)
  %v0_b320 = load i32, i32* @r5, align 4
  store i32 %v0_b320, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b330 = load i32, i32* @r4, align 4
  store i32 %v0_b330, i32* %r0.global-to-local, align 4
  %v5_b334 = inttoptr i32 %v0_b320 to i32*
  %v6_b334 = call i32 @function_8570(i32 %v0_b330, i32* %v5_b334, i32 2, i32 0)
  %v1_b340 = urem i32 %v6_b334, 256
  store i32 %v1_b340, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_b34c = load i32, i32* @r5, align 4
  store i32 %v0_b34c, i32* %r1.global-to-local, align 4
  %v0_b350 = load i32, i32* @r4, align 4
  store i32 %v0_b350, i32* %r0.global-to-local, align 4
  %v5_b354 = trunc i32 %v6_b334 to i8
  %v7_b358 = inttoptr i32 %v0_b34c to i32*
  %v8_b358 = call i32 @function_8570(i32 %v0_b350, i32* %v7_b358, i32 3, i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32))
  %v0_b35c = load i32, i32* @r5, align 4
  store i32 %v0_b35c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v8_b358, i32* @r7, align 4
  %v0_b36c = load i32, i32* @r4, align 4
  store i32 %v0_b36c, i32* %r0.global-to-local, align 4
  %v4_b370 = inttoptr i32 %v0_b35c to i32*
  %v5_b370 = call i32 @function_8570(i32 %v0_b36c, i32* %v4_b370, i32 4, i32 64)
  %v1_b378 = urem i32 %v5_b370, 256
  store i32 %v1_b378, i32* %ip.global-to-local, align 4
  %v0_b37c = load i32, i32* @r5, align 4
  store i32 %v0_b37c, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b388 = load i32, i32* @r4, align 4
  store i32 %v0_b388, i32* %r0.global-to-local, align 4
  %v6_b390 = inttoptr i32 %v0_b37c to i32*
  %v7_b390 = call i32 @function_8570(i32 %v0_b388, i32* %v6_b390, i32 5, i32 1)
  %v1_b39c = urem i32 %v7_b390, 256
  store i32 %v1_b39c, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* %r3.global-to-local, align 4
  %v0_b3a4 = load i32, i32* @r5, align 4
  store i32 %v0_b3a4, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_b3ac = load i32, i32* @r4, align 4
  store i32 %v0_b3ac, i32* %r0.global-to-local, align 4
  %v6_b3b4 = inttoptr i32 %v0_b3a4 to i32*
  %v7_b3b4 = call i32 @function_8570(i32 %v0_b3ac, i32* %v6_b3b4, i32 7, i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32))
  %v0_b3b8 = load i32, i32* @r5, align 4
  store i32 %v0_b3b8, i32* %r1.global-to-local, align 4
  %v3_b3bc = mul i32 %v7_b3b4, 65536
  store i32 %v3_b3bc, i32* %ip.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b3c8 = load i32, i32* @r4, align 4
  store i32 %v0_b3c8, i32* %r0.global-to-local, align 4
  %v3_b3cc = urem i32 %v7_b3b4, 65536
  store i32 %v3_b3cc, i32* @sl, align 4
  %v4_b3d0 = inttoptr i32 %v0_b3b8 to i32*
  %v5_b3d0 = call i32 @function_8570(i32 %v0_b3c8, i32* %v4_b3d0, i32 11, i32 0)
  %v1_b3d8 = urem i32 %v5_b3d0, 256
  store i32 %v1_b3d8, i32* %ip.global-to-local, align 4
  %v0_b3dc = load i32, i32* @r5, align 4
  store i32 %v0_b3dc, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b3e8 = load i32, i32* @r4, align 4
  store i32 %v0_b3e8, i32* %r0.global-to-local, align 4
  %v5_b3f0 = inttoptr i32 %v0_b3dc to i32*
  %v6_b3f0 = call i32 @function_8570(i32 %v0_b3e8, i32* %v5_b3f0, i32 12, i32 1)
  %v1_b3f8 = urem i32 %v6_b3f0, 256
  store i32 %v1_b3f8, i32* %ip.global-to-local, align 4
  %v0_b3fc = load i32, i32* @r5, align 4
  store i32 %v0_b3fc, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b408 = load i32, i32* @r4, align 4
  store i32 %v0_b408, i32* %r0.global-to-local, align 4
  %v5_b410 = inttoptr i32 %v0_b3fc to i32*
  %v6_b410 = call i32 @function_8570(i32 %v0_b408, i32* %v5_b410, i32 13, i32 1)
  %v1_b418 = urem i32 %v6_b410, 256
  store i32 %v1_b418, i32* %ip.global-to-local, align 4
  %v0_b41c = load i32, i32* @r5, align 4
  store i32 %v0_b41c, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b428 = load i32, i32* @r4, align 4
  store i32 %v0_b428, i32* %r0.global-to-local, align 4
  %v5_b430 = inttoptr i32 %v0_b41c to i32*
  %v6_b430 = call i32 @function_8570(i32 %v0_b428, i32* %v5_b430, i32 14, i32 0)
  %v1_b438 = urem i32 %v6_b430, 256
  store i32 %v1_b438, i32* %ip.global-to-local, align 4
  %v0_b43c = load i32, i32* @r5, align 4
  store i32 %v0_b43c, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b448 = load i32, i32* @r4, align 4
  store i32 %v0_b448, i32* %r0.global-to-local, align 4
  %v5_b450 = inttoptr i32 %v0_b43c to i32*
  %v6_b450 = call i32 @function_8570(i32 %v0_b448, i32* %v5_b450, i32 15, i32 0)
  %v1_b458 = urem i32 %v6_b450, 256
  store i32 %v1_b458, i32* %ip.global-to-local, align 4
  %v0_b45c = load i32, i32* @r5, align 4
  store i32 %v0_b45c, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b468 = load i32, i32* @r4, align 4
  store i32 %v0_b468, i32* %r0.global-to-local, align 4
  %v5_b470 = inttoptr i32 %v0_b45c to i32*
  %v6_b470 = call i32 @function_8570(i32 %v0_b468, i32* %v5_b470, i32 16, i32 0)
  %v1_b478 = urem i32 %v6_b470, 256
  store i32 %v1_b478, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 768, i32* %r3.global-to-local, align 4
  %v0_b484 = load i32, i32* @r5, align 4
  store i32 %v0_b484, i32* %r1.global-to-local, align 4
  %v0_b488 = load i32, i32* @r4, align 4
  store i32 %v0_b488, i32* %r0.global-to-local, align 4
  %v5_b490 = inttoptr i32 %v0_b484 to i32*
  %v6_b490 = call i32 @function_8570(i32 %v0_b488, i32* %v5_b490, i32 0, i32 768)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b4a0 = load i32, i32* @r5, align 4
  store i32 %v0_b4a0, i32* %r1.global-to-local, align 4
  %v0_b4a4 = load i32, i32* @r4, align 4
  store i32 %v0_b4a4, i32* %r0.global-to-local, align 4
  %v4_b4a8 = inttoptr i32 %v0_b4a0 to i32*
  %v5_b4a8 = call i32 @function_8570(i32 %v0_b4a4, i32* %v4_b4a8, i32 1, i32 1)
  %v1_b4b0 = urem i32 %v5_b4a8, 256
  store i32 %v1_b4b0, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_b4c4 = call i32 @function_12b7c(i32 2, i32 3, i32 6)
  store i32 %v3_b4c4, i32* %r0.global-to-local, align 4
  %v7_b4c8 = icmp eq i32 %v3_b4c4, -1
  store i1 %v7_b4c8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_b4c4, i32* @sb, align 4
  br i1 %v7_b4c8, label %dec_label_pc_b6b8, label %dec_label_pc_b4d4

dec_label_pc_b4d4:                                ; preds = %dec_label_pc_b2f0
  store i32 1, i32* %stack_var_-44, align 4
  %v6_b4dc = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_b4dc, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_b4f0 = call i32 @function_12b38(i32 %v3_b4c4, i32 0, i32 3, i32 %v6_b4dc, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_b4f0, i32* %r0.global-to-local, align 4
  %v7_b4f4 = icmp eq i32 %v5_b4f0, -1
  store i1 %v7_b4f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b4f4, label %dec_label_pc_b6b0, label %dec_label_pc_b4fc

dec_label_pc_b4fc:                                ; preds = %dec_label_pc_b4d4
  %v0_b4fc = load i32, i32* @r7, align 4
  %v3_b4fc = mul i32 %v0_b4fc, 65536
  store i32 %v3_b4fc, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r3, align 4
  %v0_b504 = load i32, i32* @r6, align 4
  %v2_b504 = icmp eq i32 %v0_b504, 0
  store i1 %v2_b504, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  %v3_b50c = urem i32 %v0_b4fc, 65536
  store i32 %v3_b50c, i32* @fp, align 4
  br i1 %v2_b504, label %dec_label_pc_b93c, label %dec_label_pc_b514.preheader

dec_label_pc_b514.preheader:                      ; preds = %dec_label_pc_b4fc
  %v2_b560 = ptrtoint i32* %stack_var_-144 to i32
  %v2_b5a4 = ptrtoint i32* %stack_var_-64 to i32
  %v2_b5dc = ptrtoint i32* %stack_var_-80 to i32
  %v2_b5e8 = ptrtoint i32* %stack_var_-336 to i32
  %v2_b5ec = ptrtoint i32* %stack_var_-48 to i32
  %v4_b64c = zext i8 %tmp to i32
  %v1_b650 = and i32 %v4_b64c, 18
  %v2_b654 = icmp eq i32 %v1_b650, 18
  %v4_b7f8 = sext i8 %v5_b354 to i32
  %sext = mul i32 %v5_b370, 16777216
  %v4_b808 = sdiv i32 %sext, 16777216
  %v3_b638 = sext i16 %tmp61 to i32
  %v1_b65c = and i32 %v4_b64c, 5
  %v2_b65c = icmp eq i32 %v1_b65c, 0
  %v4_b59c = add i32 %v2_b560, 82
  %v5_b59c = inttoptr i32 %v4_b59c to i16*
  %v1_b78c = add i32 %v6_b490, 40
  %v1_b8a0 = urem i32 %v5_b3d0, 2
  %tmp95 = sub nsw i32 0, %v1_b8a0
  %v4_b8a8 = and i32 %tmp95, 32
  %v1_b8b8 = urem i32 %v6_b3f0, 2
  %tmp96 = sub nsw i32 0, %v1_b8b8
  %v4_b8c0 = and i32 %tmp96, 16
  %v1_b8d0 = urem i32 %v6_b410, 2
  %tmp97 = sub nsw i32 0, %v1_b8d0
  %v4_b8d8 = and i32 %tmp97, 8
  %v1_b8e8 = urem i32 %v6_b430, 2
  %tmp98 = sub nsw i32 0, %v1_b8e8
  %v4_b8f0 = and i32 %tmp98, 4
  %v1_b900 = urem i32 %v6_b450, 2
  %tmp99 = sub nsw i32 0, %v1_b900
  %v3_b908 = and i32 %tmp99, 2
  %v1_b918 = urem i32 %v6_b470, 2
  br label %dec_label_pc_b514

dec_label_pc_b514:                                ; preds = %dec_label_pc_b514.preheader, %dec_label_pc_b688
  %stack_var_-62.0 = phi i16 [ %stack_var_-62.3, %dec_label_pc_b688 ], [ %tmp34, %dec_label_pc_b514.preheader ]
  %stack_var_-60.0 = phi i32 [ %stack_var_-60.4, %dec_label_pc_b688 ], [ %tmp37, %dec_label_pc_b514.preheader ]
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b520 = call i32 @function_12b7c(i32 2, i32 1, i32 0)
  store i32 %v3_b520, i32* %r0.global-to-local, align 4
  %v7_b524 = icmp eq i32 %v3_b520, -1
  store i1 %v7_b524, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_b520, i32* @r5, align 4
  br i1 %v7_b524, label %dec_label_pc_b688, label %dec_label_pc_b530

dec_label_pc_b530:                                ; preds = %dec_label_pc_b514, %dec_label_pc_b664
  %v0_b538 = phi i32 [ %v3_b678, %dec_label_pc_b664 ], [ %v3_b520, %dec_label_pc_b514 ]
  %stack_var_-62.1 = phi i16 [ %stack_var_-62.2, %dec_label_pc_b664 ], [ %stack_var_-62.0, %dec_label_pc_b514 ]
  %stack_var_-60.1 = phi i32 [ %v0_b738, %dec_label_pc_b664 ], [ %stack_var_-60.0, %dec_label_pc_b514 ]
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_b538 = call i32 @function_121d0(i32 %v0_b538, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_b540 = or i32 %v2_b538, 2048
  store i32 %v1_b540, i32* %r2.global-to-local, align 4
  %v0_b544 = load i32, i32* @r5, align 4
  store i32 %v0_b544, i32* %r0.global-to-local, align 4
  %v2_b548 = call i32 @function_121d0(i32 %v0_b544, i32 4)
  %v3_b54c = load i32, i32* %stack_var_-44, align 4
  %v5_b554 = mul i32 %v3_b54c, 24
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  store i32 %v2_b560, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-64, align 4
  %v2_b568 = add i32 %v5_b554, %arg2
  store i32 %v2_b568, i32* %r3.global-to-local, align 4
  %v1_b56c = add i32 %v2_b568, 20
  %v2_b56c = inttoptr i32 %v1_b56c to i8*
  %v3_b56c = load i8, i8* %v2_b56c, align 1
  %v4_b56c = zext i8 %v3_b56c to i32
  store i32 %v4_b56c, i32* %r2.global-to-local, align 4
  %v2_b570 = icmp ugt i8 %v3_b56c, 30
  %v7_b570 = icmp eq i8 %v3_b56c, 31
  store i1 %v7_b570, i1* %cpsr_z.global-to-local, align 1
  %v2_b574 = xor i1 %v7_b570, true
  %v3_b574 = and i1 %v2_b570, %v2_b574
  br i1 %v3_b574, label %bb, label %bb71

bb:                                               ; preds = %dec_label_pc_b530
  %v5_b574 = add i32 %v2_b568, 16
  %v6_b574 = inttoptr i32 %v5_b574 to i32*
  %v7_b574 = load i32, i32* %v6_b574, align 4
  store i32 %v7_b574, i32* %r3.global-to-local, align 4
  br label %bb71

bb71:                                             ; preds = %dec_label_pc_b530, %bb
  %v4_b578 = phi i32 [ %v2_b568, %dec_label_pc_b530 ], [ %v7_b574, %bb ]
  %v4_b578.stack_var_-60.1 = select i1 %v3_b574, i32 %v4_b578, i32 %stack_var_-60.1
  %v2_b57c = xor i1 %v2_b570, true
  %v3_b57c = or i1 %v7_b570, %v2_b57c
  br i1 %v3_b57c, label %dec_label_pc_b6c4, label %dec_label_pc_b580

dec_label_pc_b580:                                ; preds = %bb71, %dec_label_pc_b6c4
  %v0_b738 = phi i32 [ %v5_b714, %dec_label_pc_b6c4 ], [ %v4_b578.stack_var_-60.1, %bb71 ]
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* %r3.global-to-local, align 4
  %v0_b588 = load i32, i32* @sl, align 4
  %v9_b588 = icmp eq i32 %v0_b588, ptrtoint ([3 x i8]* @global_var_ffff.45 to i32)
  store i1 %v9_b588, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b588, label %dec_label_pc_b720, label %.thread9

.thread9:                                         ; preds = %dec_label_pc_b580
  %v4_b58c = udiv i32 %v0_b588, 256
  %v2_b590 = urem i32 %v0_b588, 256
  store i32 %v2_b590, i32* %r2.global-to-local, align 4
  %v5_b594 = mul nuw nsw i32 %v2_b590, 256
  %v6_b594 = or i32 %v5_b594, %v4_b58c
  store i32 %v6_b594, i32* %r3.global-to-local, align 4
  store i32 %v2_b560, i32* %r0.global-to-local, align 4
  %v2_b59c = trunc i32 %v6_b594 to i16
  store i16 %v2_b59c, i16* %v5_b59c, align 2
  br label %dec_label_pc_b5a4

dec_label_pc_b5a4:                                ; preds = %.thread9, %dec_label_pc_b720
  %stack_var_-62.2 = phi i16 [ %v1_b720, %dec_label_pc_b720 ], [ %stack_var_-62.1, %.thread9 ]
  store i32 %v2_b5a4, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_b5ac = load i32, i32* @r5, align 4
  store i32 %v0_b5ac, i32* %r0.global-to-local, align 4
  %v3_b5b0 = call i32 @function_12964(i32 %v0_b5ac, i32 %v2_b5a4, i32 16)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_b5b8 = call i32 @function_1201c(i32* null)
  store i32 %v2_b5b8, i32* %r0.global-to-local, align 4
  store i32 %v2_b5b8, i32* @r4, align 4
  %v9_b618 = icmp eq i32 %tmp35, %v0_b738
  %v4_b640 = zext i16 %stack_var_-62.2 to i32
  %. = zext i1 %v9_b618 to i32
  %v9_b62c = icmp eq i1 %v9_b618, false
  %v9_b644 = icmp eq i32 %v3_b638, %v4_b640
  br label %dec_label_pc_b5d4

dec_label_pc_b5c4:                                ; preds = %.thread, %dec_label_pc_b634, %dec_label_pc_b65c, %bb74
  %v2_b5c4 = call i32 @function_1201c(i32* null)
  %v0_b5c8 = load i32, i32* @r4, align 4
  %v2_b5c8 = sub i32 %v2_b5c4, %v0_b5c8
  store i32 %v2_b5c8, i32* %r0.global-to-local, align 4
  %v7_b5cc = icmp eq i32 %v2_b5c8, 10
  store i1 %v7_b5cc, i1* %cpsr_z.global-to-local, align 1
  %v8_b5d0 = icmp sgt i32 %v2_b5c8, 10
  br i1 %v8_b5d0, label %dec_label_pc_b664, label %dec_label_pc_b5d4

dec_label_pc_b5d4:                                ; preds = %dec_label_pc_b5c4, %dec_label_pc_b5a4
  store i32 16, i32* %stack_var_-48, align 4
  store i32 256, i32* %r2.global-to-local, align 4
  store i32 %v2_b5e8, i32* %r1.global-to-local, align 4
  store i32 %v2_b5ec, i32* %ip.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_b5f4 = load i32, i32* @sb, align 4
  store i32 %v0_b5f4, i32* %r0.global-to-local, align 4
  %v6_b5fc = call i32 @function_12a84(i32 %v0_b5f4, i32 %v2_b5e8, i32 256, i32 16384, i32 %v2_b5dc, i32 %v2_b5ec)
  store i32 %v6_b5fc, i32* %r2.global-to-local, align 4
  %v7_b604 = icmp eq i32 %v6_b5fc, -1
  store i1 %v7_b604, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v7_b604, label %dec_label_pc_b6b8, label %dec_label_pc_b610

dec_label_pc_b610:                                ; preds = %dec_label_pc_b5d4
  store i32 %v0_b738, i32* %r1.global-to-local, align 4
  store i32 %tmp35, i32* @r3, align 4
  store i32 %., i32* %ip.global-to-local, align 4
  %v7_b624 = icmp eq i32 %v6_b5fc, 40
  store i1 %v7_b624, i1* %cpsr_z.global-to-local, align 1
  %tmp100 = icmp ult i32 %v6_b5fc, 41
  br i1 %tmp100, label %.thread, label %bb74

.thread:                                          ; preds = %dec_label_pc_b610
  store i32 0, i32* %ip.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_b5c4

bb74:                                             ; preds = %dec_label_pc_b610
  store i1 %v9_b62c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b62c, label %dec_label_pc_b5c4, label %dec_label_pc_b634

dec_label_pc_b634:                                ; preds = %bb74
  store i32 %v3_b638, i32* @lr, align 4
  store i32 %v2_b560, i32* @r3, align 4
  store i32 %v4_b640, i32* %r2.global-to-local, align 4
  store i1 %v9_b644, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b644, label %dec_label_pc_b64c, label %dec_label_pc_b5c4

dec_label_pc_b64c:                                ; preds = %dec_label_pc_b634
  store i32 %v4_b64c, i32* %r2.global-to-local, align 4
  store i32 %v1_b650, i32* @r3, align 4
  store i1 %v2_b654, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b654, label %dec_label_pc_b730, label %dec_label_pc_b65c

dec_label_pc_b65c:                                ; preds = %dec_label_pc_b64c
  store i1 %v2_b65c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b65c, label %dec_label_pc_b5c4, label %dec_label_pc_b664

dec_label_pc_b664:                                ; preds = %dec_label_pc_b65c, %dec_label_pc_b5c4
  %v0_b664 = load i32, i32* @r5, align 4
  store i32 %v0_b664, i32* %r0.global-to-local, align 4
  %v1_b668 = call i32 @function_1239c(i32 %v0_b664)
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b678 = call i32 @function_12b7c(i32 2, i32 1, i32 0)
  store i32 %v3_b678, i32* %r0.global-to-local, align 4
  %v3_b67c = icmp eq i32 %v3_b678, -1
  %v8_b67c = icmp eq i32 %v3_b678, -1
  store i1 %v8_b67c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_b678, i32* @r5, align 4
  br i1 %v3_b67c, label %dec_label_pc_b688, label %dec_label_pc_b530

dec_label_pc_b688:                                ; preds = %dec_label_pc_b664, %dec_label_pc_b514, %bb81
  %stack_var_-62.3 = phi i16 [ %stack_var_-62.0, %dec_label_pc_b514 ], [ %stack_var_-62.2, %bb81 ], [ %stack_var_-62.2, %dec_label_pc_b664 ]
  %stack_var_-60.4 = phi i32 [ %stack_var_-60.0, %dec_label_pc_b514 ], [ %v0_b738, %bb81 ], [ %v0_b738, %dec_label_pc_b664 ]
  %v3_b688 = load i32, i32* %stack_var_-44, align 4
  %v1_b68c = add i32 %v3_b688, 1
  store i32 %v1_b68c, i32* @r3, align 4
  %v1_b690 = load i32, i32* @r6, align 4
  %v9_b690 = icmp eq i32 %v1_b68c, %v1_b690
  store i1 %v9_b690, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_b68c, i32* %stack_var_-44, align 4
  %v5_b698 = icmp slt i32 %v1_b68c, %v1_b690
  br i1 %v5_b698, label %dec_label_pc_b514, label %dec_label_pc_b69c

dec_label_pc_b69c:                                ; preds = %dec_label_pc_b688
  store i32 %v6_b490, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b94c

dec_label_pc_b6b0:                                ; preds = %dec_label_pc_b4d4
  %v0_b6b0 = load i32, i32* @sb, align 4
  store i32 %v0_b6b0, i32* %r0.global-to-local, align 4
  %v1_b6b4 = call i32 @function_1239c(i32 %v0_b6b0)
  store i32 %v1_b6b4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b6b8

dec_label_pc_b6b8:                                ; preds = %dec_label_pc_b5d4, %dec_label_pc_b2f0, %dec_label_pc_b6b0
  %v1_b6c0 = phi i32 [ %v3_b4c4, %dec_label_pc_b2f0 ], [ %v1_b6b4, %dec_label_pc_b6b0 ], [ 0, %dec_label_pc_b5d4 ]
  store i32 %v27_b2f0, i32* %lr.global-to-local, align 4
  ret i32 %v1_b6c0

dec_label_pc_b6c4:                                ; preds = %bb71
  %v1_b6c4 = add i32 %v4_b578, 16
  %v2_b6c4 = inttoptr i32 %v1_b6c4 to i32*
  %v3_b6c4 = load i32, i32* %v2_b6c4, align 4
  store i32 %v3_b6c4, i32* @r4, align 4
  %v0_b6c8 = call i32 @function_df2c()
  store i32 %v0_b6c8, i32* %r0.global-to-local, align 4
  %v3_b6cc = load i32, i32* %stack_var_-44, align 4
  %v5_b6d4 = mul i32 %v3_b6cc, 24
  %v0_b6dc = load i32, i32* @r4, align 4
  %v1_b6dc = and i32 %v0_b6dc, 16711680
  store i32 %v1_b6dc, i32* %ip.global-to-local, align 4
  %v3_b6e0 = udiv i32 %v0_b6dc, 16777216
  %v2_b6e4 = add i32 %v5_b6d4, %arg2
  store i32 %v2_b6e4, i32* %r1.global-to-local, align 4
  %v4_b6e8 = udiv i32 %v1_b6dc, 256
  %v5_b6e8 = or i32 %v4_b6e8, %v3_b6e0
  store i32 %v5_b6e8, i32* %r2.global-to-local, align 4
  %v1_b6ec = and i32 %v0_b6dc, 65280
  store i32 %v1_b6ec, i32* %r3.global-to-local, align 4
  %v1_b6f0 = add i32 %v2_b6e4, 20
  %v2_b6f0 = inttoptr i32 %v1_b6f0 to i8*
  %v3_b6f0 = load i8, i8* %v2_b6f0, align 1
  %v4_b6f0 = zext i8 %v3_b6f0 to i32
  store i32 %v4_b6f0, i32* %ip.global-to-local, align 4
  %v5_b6f8 = call i32 @llvm.bswap.i32(i32 %v0_b6dc)
  %v7_b6fc = lshr i32 %v0_b6c8, %v4_b6f0
  %v8_b6fc = add i32 %v7_b6fc, %v5_b6f8
  store i32 %v8_b6fc, i32* %r2.global-to-local, align 4
  %v1_b700 = and i32 %v8_b6fc, 16711680
  store i32 %v1_b700, i32* %r0.global-to-local, align 4
  %v1_b70c = and i32 %v8_b6fc, 65280
  store i32 %v1_b70c, i32* %r1.global-to-local, align 4
  %v5_b714 = call i32 @llvm.bswap.i32(i32 %v8_b6fc)
  store i32 %v5_b714, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b580

dec_label_pc_b720:                                ; preds = %dec_label_pc_b580
  %v0_b720 = call i32 @function_df2c()
  %v1_b720 = trunc i32 %v0_b720 to i16
  store i32 %v0_b720, i32* %r0.global-to-local, align 4
  store i32 %v2_b560, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_b5a4

dec_label_pc_b730:                                ; preds = %dec_label_pc_b64c
  %v3_b730 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b730, i32* @r4, align 4
  store i32 %v2_b30c, i32* %ip.global-to-local, align 4
  %v5_b738 = mul i32 %v3_b730, 16
  %v6_b738 = add i32 %v5_b738, %v2_b30c
  %v7_b738 = inttoptr i32 %v6_b738 to i32*
  store i32 %v0_b738, i32* %v7_b738, align 4
  %v0_b73c = load i32, i32* @r8, align 4
  %v1_b73c = add i32 %v0_b73c, 4
  %v2_b73c = inttoptr i32 %v1_b73c to i32*
  %v3_b73c = load i32, i32* %v2_b73c, align 4
  store i32 %v3_b73c, i32* %r1.global-to-local, align 4
  %v1_b748 = and i32 %v3_b73c, 65280
  store i32 %v1_b748, i32* %r2.global-to-local, align 4
  store i32 %v2_b30c, i32* %r0.global-to-local, align 4
  %v0_b758 = load i32, i32* @r4, align 4
  %v3_b758 = mul i32 %v0_b758, 16
  %v2_b75c = add i32 %v3_b758, %v2_b30c
  store i32 %v2_b75c, i32* %ip.global-to-local, align 4
  %v5_b760 = call i32 @llvm.bswap.i32(i32 %v3_b73c)
  store i32 %v5_b760, i32* %r3.global-to-local, align 4
  %v2_b764 = add i32 %v2_b75c, 4
  %v3_b764 = inttoptr i32 %v2_b764 to i32*
  store i32 %v5_b760, i32* %v3_b764, align 4
  %v0_b768 = load i32, i32* @r8, align 4
  %v1_b768 = add i32 %v0_b768, 8
  %v2_b768 = inttoptr i32 %v1_b768 to i32*
  %v3_b768 = load i32, i32* %v2_b768, align 4
  store i32 %v3_b768, i32* %r1.global-to-local, align 4
  %v1_b76c = and i32 %v3_b768, 16711680
  store i32 %v1_b76c, i32* %r0.global-to-local, align 4
  store i32 %v6_b490, i32* %r2.global-to-local, align 4
  %v5_b784 = call i32 @llvm.bswap.i32(i32 %v3_b768)
  store i32 %v5_b784, i32* %r3.global-to-local, align 4
  %v1_b788 = add i32 %v0_b768, 2
  %v2_b788 = inttoptr i32 %v1_b788 to i16*
  %v3_b788 = load i16, i16* %v2_b788, align 2
  %v4_b788 = zext i16 %v3_b788 to i32
  store i32 %v4_b788, i32* %r1.global-to-local, align 4
  store i32 %v1_b78c, i32* @r7, align 4
  %v0_b790 = load i32, i32* @lr, align 4
  %v1_b790 = trunc i32 %v0_b790 to i16
  %v2_b790 = load i32, i32* %ip.global-to-local, align 4
  %v3_b790 = add i32 %v2_b790, 14
  %v4_b790 = inttoptr i32 %v3_b790 to i16*
  store i16 %v1_b790, i16* %v4_b790, align 2
  %v0_b794 = load i32, i32* %r1.global-to-local, align 4
  %v1_b794 = trunc i32 %v0_b794 to i16
  %v2_b794 = load i32, i32* %ip.global-to-local, align 4
  %v3_b794 = add i32 %v2_b794, 12
  %v4_b794 = inttoptr i32 %v3_b794 to i16*
  store i16 %v1_b794, i16* %v4_b794, align 2
  %v0_b798 = load i32, i32* %r3.global-to-local, align 4
  %v1_b798 = load i32, i32* %ip.global-to-local, align 4
  %v2_b798 = add i32 %v1_b798, 8
  %v3_b798 = inttoptr i32 %v2_b798 to i32*
  store i32 %v0_b798, i32* %v3_b798, align 4
  %v0_b79c = load i32, i32* @r7, align 4
  store i32 %v0_b79c, i32* @r0, align 4
  %v0_b7a0 = call i32 @function_12dc4()
  store i32 %v0_b7a0, i32* %r0.global-to-local, align 4
  store i32 %v2_b31c, i32* %r3.global-to-local, align 4
  %v2_b7ac = load i32, i32* @r4, align 4
  %v5_b7ac = mul i32 %v2_b7ac, 4
  %v6_b7ac = add i32 %v5_b7ac, %v2_b31c
  %v7_b7ac = inttoptr i32 %v6_b7ac to i32*
  store i32 %v0_b7a0, i32* %v7_b7ac, align 4
  %v3_b7b0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b7b0, i32* %r2.global-to-local, align 4
  %v0_b7b4 = load i32, i32* %r3.global-to-local, align 4
  %v4_b7b4 = mul i32 %v3_b7b0, 4
  %v5_b7b4 = add i32 %v0_b7b4, %v4_b7b4
  %v6_b7b4 = inttoptr i32 %v5_b7b4 to i32*
  %v7_b7b4 = load i32, i32* %v6_b7b4, align 4
  store i32 %v7_b7b4, i32* @r4, align 4
  %v1_b7b8 = inttoptr i32 %v7_b7b4 to i8*
  %v2_b7b8 = load i8, i8* %v1_b7b8, align 1
  %tmp101 = urem i8 %v2_b7b8, 16
  %v1_b7bc = zext i8 %tmp101 to i32
  %v1_b7c0 = or i32 %v1_b7bc, 64
  store i32 %v1_b7c0, i32* %r3.global-to-local, align 4
  %v1_b7c4 = trunc i32 %v1_b7c0 to i8
  store i8 %v1_b7c4, i8* %v1_b7b8, align 1
  %v0_b7c8 = load i32, i32* @r4, align 4
  %v1_b7c8 = inttoptr i32 %v0_b7c8 to i8*
  %v2_b7c8 = load i8, i8* %v1_b7c8, align 1
  %v0_b7cc = load i32, i32* @r7, align 4
  %tmp76 = mul i32 %v0_b7cc, 256
  %v1_b7d4 = and i8 %v2_b7c8, -16
  %v1_b7d8 = or i8 %v1_b7d4, 5
  %v1_b7dc = and i32 %tmp76, 65280
  %tmp77 = udiv i32 %v0_b7cc, 256
  %v4_b7e0 = urem i32 %tmp77, 256
  %v5_b7e0 = or i32 %v4_b7e0, %v1_b7dc
  store i32 %v5_b7e0, i32* %r2.global-to-local, align 4
  %v0_b7e4 = load i32, i32* @fp, align 4
  %v1_b7e4 = urem i32 %v0_b7e4, 256
  store i32 %v1_b7e4, i32* %r0.global-to-local, align 4
  store i32 %v1_b39c, i32* %ip.global-to-local, align 4
  %v3_b7ec = udiv i32 %v0_b7e4, 256
  store i32 %v3_b7ec, i32* %r1.global-to-local, align 4
  store i8 %v1_b7d8, i8* %v1_b7c8, align 1
  %v0_b7f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_b7f4 = load i32, i32* %r0.global-to-local, align 4
  %v4_b7f4 = mul i32 %v1_b7f4, 256
  %v5_b7f4 = or i32 %v4_b7f4, %v0_b7f4
  store i32 %v5_b7f4, i32* %r1.global-to-local, align 4
  store i32 %v4_b7f8, i32* %r0.global-to-local, align 4
  %v2_b7fc = load i32, i32* @r4, align 4
  %v3_b7fc = add i32 %v2_b7fc, 1
  %v4_b7fc = inttoptr i32 %v3_b7fc to i8*
  store i8 %v5_b354, i8* %v4_b7fc, align 1
  %v0_b800 = load i32, i32* %r1.global-to-local, align 4
  %v1_b800 = trunc i32 %v0_b800 to i16
  %v2_b800 = load i32, i32* @r4, align 4
  %v3_b800 = add i32 %v2_b800, 4
  %v4_b800 = inttoptr i32 %v3_b800 to i16*
  store i16 %v1_b800, i16* %v4_b800, align 2
  %v0_b804 = load i32, i32* %ip.global-to-local, align 4
  %v2_b804 = icmp eq i32 %v0_b804, 0
  store i1 %v2_b804, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_b808, i32* %r1.global-to-local, align 4
  %v0_b80c = load i32, i32* %r2.global-to-local, align 4
  %v1_b80c = trunc i32 %v0_b80c to i16
  %v2_b80c = load i32, i32* @r4, align 4
  %v3_b80c = add i32 %v2_b80c, 2
  %v4_b80c = inttoptr i32 %v3_b80c to i16*
  store i16 %v1_b80c, i16* %v4_b80c, align 2
  store i32 6, i32* %r3.global-to-local, align 4
  br i1 %v2_b804, label %bb79, label %bb78

bb78:                                             ; preds = %dec_label_pc_b730
  store i32 64, i32* %r2.global-to-local, align 4
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_b730, %bb78
  %v0_b818 = load i32, i32* %r1.global-to-local, align 4
  %v1_b818 = trunc i32 %v0_b818 to i8
  %v2_b818 = load i32, i32* @r4, align 4
  %v3_b818 = add i32 %v2_b818, 8
  %v4_b818 = inttoptr i32 %v3_b818 to i8*
  store i8 %v1_b818, i8* %v4_b818, align 1
  %v0_b81c = load i32, i32* %r3.global-to-local, align 4
  %v1_b81c = trunc i32 %v0_b81c to i8
  %v2_b81c = load i32, i32* @r4, align 4
  %v3_b81c = add i32 %v2_b81c, 9
  %v4_b81c = inttoptr i32 %v3_b81c to i8*
  store i8 %v1_b81c, i8* %v4_b81c, align 1
  %v0_b820 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b820, label %bb81, label %bb80

bb80:                                             ; preds = %bb79
  %v1_b820 = load i32, i32* %r2.global-to-local, align 4
  %v2_b820 = trunc i32 %v1_b820 to i16
  %v3_b820 = load i32, i32* @r4, align 4
  %v4_b820 = add i32 %v3_b820, 6
  %v5_b820 = inttoptr i32 %v4_b820 to i16*
  store i16 %v2_b820, i16* %v5_b820, align 2
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  store i32 ptrtoint (i32* @global_var_1a2d4.47 to i32), i32* %r2.global-to-local, align 4
  %v2_b828 = load i32, i32* @global_var_1a2d4.47, align 4
  store i32 %v2_b828, i32* %r1.global-to-local, align 4
  %v1_b82c = load i32, i32* @r4, align 4
  %v2_b82c = add i32 %v1_b82c, 12
  %v3_b82c = inttoptr i32 %v2_b82c to i32*
  store i32 %v2_b828, i32* %v3_b82c, align 4
  %v3_b830 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b830, i32* %r3.global-to-local, align 4
  store i32 %v2_b30c, i32* %ip.global-to-local, align 4
  %v4_b838 = mul i32 %v3_b830, 16
  %v5_b838 = add i32 %v4_b838, %v2_b30c
  %v6_b838 = inttoptr i32 %v5_b838 to i32*
  %v7_b838 = load i32, i32* %v6_b838, align 4
  store i32 %v7_b838, i32* %r2.global-to-local, align 4
  store i32 %v5_b838, i32* %r3.global-to-local, align 4
  %v1_b844 = load i32, i32* @r4, align 4
  %v2_b844 = add i32 %v1_b844, 16
  %v3_b844 = inttoptr i32 %v2_b844 to i32*
  store i32 %v7_b838, i32* %v3_b844, align 4
  %v0_b848 = load i32, i32* %r3.global-to-local, align 4
  %v1_b848 = add i32 %v0_b848, 12
  %v2_b848 = inttoptr i32 %v1_b848 to i16*
  %v3_b848 = load i16, i16* %v2_b848, align 2
  %v4_b848 = zext i16 %v3_b848 to i32
  store i32 %v4_b848, i32* %r0.global-to-local, align 4
  %v1_b84c = add i32 %v0_b848, 8
  %v2_b84c = inttoptr i32 %v1_b84c to i32*
  %v3_b84c = load i32, i32* %v2_b84c, align 4
  store i32 %v3_b84c, i32* %r1.global-to-local, align 4
  %v2_b850 = load i32, i32* @r4, align 4
  %v3_b850 = add i32 %v2_b850, 20
  %v4_b850 = inttoptr i32 %v3_b850 to i16*
  store i16 %v3_b848, i16* %v4_b850, align 2
  %v0_b854 = load i32, i32* @r4, align 4
  %v1_b854 = add i32 %v0_b854, 20
  store i32 %v1_b854, i32* @r8, align 4
  %v1_b858 = add i32 %v0_b854, 33
  %v2_b858 = inttoptr i32 %v1_b858 to i8*
  %v3_b858 = load i8, i8* %v2_b858, align 1
  %v4_b858 = zext i8 %v3_b858 to i32
  store i32 %v4_b858, i32* %r2.global-to-local, align 4
  %v0_b85c = load i32, i32* %r1.global-to-local, align 4
  %v2_b85c = add i32 %v0_b854, 24
  %v3_b85c = inttoptr i32 %v2_b85c to i32*
  store i32 %v0_b85c, i32* %v3_b85c, align 4
  %v0_b860 = load i32, i32* %r2.global-to-local, align 4
  %v1_b860 = or i32 %v0_b860, 1
  store i32 %v1_b860, i32* %r2.global-to-local, align 4
  %v0_b864 = load i32, i32* %r3.global-to-local, align 4
  %v1_b864 = add i32 %v0_b864, 4
  %v2_b864 = inttoptr i32 %v1_b864 to i32*
  %v3_b864 = load i32, i32* %v2_b864, align 4
  store i32 %v3_b864, i32* %r1.global-to-local, align 4
  %v1_b868 = add i32 %v0_b864, 14
  %v2_b868 = inttoptr i32 %v1_b868 to i16*
  %v3_b868 = load i16, i16* %v2_b868, align 2
  %v4_b868 = zext i16 %v3_b868 to i32
  store i32 %v4_b868, i32* %r3.global-to-local, align 4
  %v1_b86c = trunc i32 %v1_b860 to i8
  %v2_b86c = load i32, i32* @r8, align 4
  %v3_b86c = add i32 %v2_b86c, 13
  %v4_b86c = inttoptr i32 %v3_b86c to i8*
  store i8 %v1_b86c, i8* %v4_b86c, align 1
  %v0_b870 = load i32, i32* %r3.global-to-local, align 4
  %v1_b870 = trunc i32 %v0_b870 to i16
  %v2_b870 = load i32, i32* @r8, align 4
  %v3_b870 = add i32 %v2_b870, 2
  %v4_b870 = inttoptr i32 %v3_b870 to i16*
  store i16 %v1_b870, i16* %v4_b870, align 2
  %v0_b874 = load i32, i32* @r8, align 4
  %v1_b874 = add i32 %v0_b874, 12
  %v2_b874 = inttoptr i32 %v1_b874 to i8*
  %v3_b874 = load i8, i8* %v2_b874, align 1
  %v4_b874 = zext i8 %v3_b874 to i32
  store i32 %v4_b874, i32* %r3.global-to-local, align 4
  %v1_b878 = add i32 %v0_b874, 13
  %v2_b878 = inttoptr i32 %v1_b878 to i8*
  %v3_b878 = load i8, i8* %v2_b878, align 1
  %v4_b878 = zext i8 %v3_b878 to i32
  %tmp102 = urem i8 %v3_b874, 16
  %v1_b87c = zext i8 %tmp102 to i32
  %v1_b880 = or i32 %v1_b87c, 128
  store i32 %v1_b880, i32* %r3.global-to-local, align 4
  %v1_b884 = or i32 %v4_b878, 16
  store i32 %v1_b884, i32* %r2.global-to-local, align 4
  %v0_b888 = load i32, i32* %r1.global-to-local, align 4
  %v2_b888 = add i32 %v0_b874, 8
  %v3_b888 = inttoptr i32 %v2_b888 to i32*
  store i32 %v0_b888, i32* %v3_b888, align 4
  %v0_b88c = load i32, i32* %r3.global-to-local, align 4
  %v1_b88c = trunc i32 %v0_b88c to i8
  %v2_b88c = load i32, i32* @r8, align 4
  %v3_b88c = add i32 %v2_b88c, 12
  %v4_b88c = inttoptr i32 %v3_b88c to i8*
  store i8 %v1_b88c, i8* %v4_b88c, align 1
  %v0_b890 = load i32, i32* %r2.global-to-local, align 4
  %v1_b890 = trunc i32 %v0_b890 to i8
  %v2_b890 = load i32, i32* @r8, align 4
  %v3_b890 = add i32 %v2_b890, 13
  %v4_b890 = inttoptr i32 %v3_b890 to i8*
  store i8 %v1_b890, i8* %v4_b890, align 1
  %v0_b894 = call i32 @function_df2c()
  %v1_b894 = trunc i32 %v0_b894 to i16
  store i32 %v0_b894, i32* %r0.global-to-local, align 4
  store i32 %v1_b3d8, i32* %r1.global-to-local, align 4
  %v0_b89c = load i32, i32* @r8, align 4
  %v1_b89c = add i32 %v0_b89c, 13
  %v2_b89c = inttoptr i32 %v1_b89c to i8*
  %v3_b89c = load i8, i8* %v2_b89c, align 1
  %v4_b89c = zext i8 %v3_b89c to i32
  store i32 %v1_b8a0, i32* %r2.global-to-local, align 4
  %v1_b8a4 = and i32 %v4_b89c, 223
  %v5_b8a8 = or i32 %v1_b8a4, %v4_b8a8
  store i32 %v5_b8a8, i32* %r3.global-to-local, align 4
  %v1_b8ac = trunc i32 %v5_b8a8 to i8
  store i8 %v1_b8ac, i8* %v2_b89c, align 1
  store i32 %v1_b3f8, i32* %ip.global-to-local, align 4
  %v0_b8b4 = load i32, i32* @r8, align 4
  %v1_b8b4 = add i32 %v0_b8b4, 13
  %v2_b8b4 = inttoptr i32 %v1_b8b4 to i8*
  %v3_b8b4 = load i8, i8* %v2_b8b4, align 1
  %v4_b8b4 = zext i8 %v3_b8b4 to i32
  store i32 %v1_b8b8, i32* %r3.global-to-local, align 4
  %v1_b8bc = and i32 %v4_b8b4, 239
  %v5_b8c0 = or i32 %v1_b8bc, %v4_b8c0
  store i32 %v5_b8c0, i32* %r2.global-to-local, align 4
  %v1_b8c4 = trunc i32 %v5_b8c0 to i8
  store i8 %v1_b8c4, i8* %v2_b8b4, align 1
  store i32 %v1_b418, i32* %r1.global-to-local, align 4
  %v0_b8cc = load i32, i32* @r8, align 4
  %v1_b8cc = add i32 %v0_b8cc, 13
  %v2_b8cc = inttoptr i32 %v1_b8cc to i8*
  %v3_b8cc = load i8, i8* %v2_b8cc, align 1
  %v4_b8cc = zext i8 %v3_b8cc to i32
  store i32 %v1_b8d0, i32* %r2.global-to-local, align 4
  %v1_b8d4 = and i32 %v4_b8cc, 247
  %v5_b8d8 = or i32 %v1_b8d4, %v4_b8d8
  store i32 %v5_b8d8, i32* %r3.global-to-local, align 4
  %v1_b8dc = trunc i32 %v5_b8d8 to i8
  store i8 %v1_b8dc, i8* %v2_b8cc, align 1
  store i32 %v1_b438, i32* %ip.global-to-local, align 4
  %v0_b8e4 = load i32, i32* @r8, align 4
  %v1_b8e4 = add i32 %v0_b8e4, 13
  %v2_b8e4 = inttoptr i32 %v1_b8e4 to i8*
  %v3_b8e4 = load i8, i8* %v2_b8e4, align 1
  %v4_b8e4 = zext i8 %v3_b8e4 to i32
  store i32 %v1_b8e8, i32* %r3.global-to-local, align 4
  %v1_b8ec = and i32 %v4_b8e4, 251
  %v5_b8f0 = or i32 %v1_b8ec, %v4_b8f0
  store i32 %v5_b8f0, i32* %r2.global-to-local, align 4
  %v1_b8f4 = trunc i32 %v5_b8f0 to i8
  store i8 %v1_b8f4, i8* %v2_b8e4, align 1
  store i32 %v1_b458, i32* %r1.global-to-local, align 4
  %v0_b8fc = load i32, i32* @r8, align 4
  %v1_b8fc = add i32 %v0_b8fc, 13
  %v2_b8fc = inttoptr i32 %v1_b8fc to i8*
  %v3_b8fc = load i8, i8* %v2_b8fc, align 1
  %v4_b8fc = zext i8 %v3_b8fc to i32
  store i32 %v1_b900, i32* %r2.global-to-local, align 4
  %v1_b904 = and i32 %v4_b8fc, 253
  %v4_b908 = or i32 %v1_b904, %v3_b908
  store i32 %v4_b908, i32* %r3.global-to-local, align 4
  %v1_b90c = trunc i32 %v4_b908 to i8
  store i8 %v1_b90c, i8* %v2_b8fc, align 1
  store i32 %v1_b478, i32* %ip.global-to-local, align 4
  %v0_b914 = load i32, i32* @r8, align 4
  %v1_b914 = add i32 %v0_b914, 13
  %v2_b914 = inttoptr i32 %v1_b914 to i8*
  %v3_b914 = load i8, i8* %v2_b914, align 1
  %v4_b914 = zext i8 %v3_b914 to i32
  %v1_b91c = and i32 %v4_b914, 254
  store i32 %v1_b91c, i32* %r2.global-to-local, align 4
  %v2_b920 = or i32 %v1_b91c, %v1_b918
  store i32 %v2_b920, i32* %r3.global-to-local, align 4
  %v1_b924 = trunc i32 %v2_b920 to i8
  store i8 %v1_b924, i8* %v2_b914, align 1
  %v3_b928 = load i32, i32* @r8, align 4
  %v4_b928 = add i32 %v3_b928, 14
  %v5_b928 = inttoptr i32 %v4_b928 to i16*
  store i16 %v1_b894, i16* %v5_b928, align 2
  store i32 %v6_b490, i32* %r1.global-to-local, align 4
  %v0_b930 = load i32, i32* @r4, align 4
  %v1_b930 = add i32 %v0_b930, 40
  store i32 %v1_b930, i32* %r0.global-to-local, align 4
  %v2_b934 = inttoptr i32 %v1_b930 to i16*
  %v3_b934 = call i32 @function_e0c0(i16* %v2_b934, i32 %v6_b490)
  store i32 %v3_b934, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b688

dec_label_pc_b93c:                                ; preds = %dec_label_pc_b4fc
  store i32 %v6_b490, i32* %r1.global-to-local, align 4
  %.pre = add i32 %v6_b490, 40
  br label %dec_label_pc_b94c

dec_label_pc_b94c:                                ; preds = %dec_label_pc_b69c, %dec_label_pc_b93c
  %storemerge6.pre-phi = phi i32 [ %v1_b78c, %dec_label_pc_b69c ], [ %.pre, %dec_label_pc_b93c ]
  %v0_b96026 = phi i32 [ %v1_b690, %dec_label_pc_b69c ], [ 0, %dec_label_pc_b93c ]
  store i32 %storemerge6.pre-phi, i32* @r7, align 4
  %storemerge4 = mul i32 %v6_b490, 65536
  %storemerge = add i32 %v6_b490, 20
  store i32 %storemerge, i32* @sl, align 4
  %v1_b94c = add i32 %storemerge4, 1310720
  store i32 %v1_b94c, i32* %r2.global-to-local, align 4
  %tmp82 = udiv i32 %v1_b94c, 256
  %v3_b954 = and i32 %tmp82, 65280
  store i32 %v3_b954, i32* %r3.global-to-local, align 4
  %v4_b958 = udiv i32 %v1_b94c, 16777216
  %v5_b958 = or i32 %v3_b954, %v4_b958
  store i32 %v5_b958, i32* @r8, align 4
  %v2_ba84 = icmp eq i32 %v1_b4b0, 0
  br label %dec_label_pc_b95c

dec_label_pc_b95c:                                ; preds = %dec_label_pc_b95c, %dec_label_pc_ba68, %dec_label_pc_b94c
  %v0_b960 = phi i32 [ %v0_b96026, %dec_label_pc_b94c ], [ 0, %dec_label_pc_ba68 ], [ 0, %dec_label_pc_b95c ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b960 = icmp eq i32 %v0_b960, 0
  store i1 %v2_b960, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_b960, label %dec_label_pc_b95c, label %dec_label_pc_b96c

dec_label_pc_b96c:                                ; preds = %dec_label_pc_b95c, %dec_label_pc_ba68
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b970

dec_label_pc_b970:                                ; preds = %dec_label_pc_b998, %dec_label_pc_b96c
  %v1_b978 = phi i32 [ %v1_ba58, %dec_label_pc_b998 ], [ 0, %dec_label_pc_b96c ]
  store i32 %v2_b31c, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10000.44 to i32), i32* %r3.global-to-local, align 4
  %v4_b978 = mul i32 %v1_b978, 4
  %v5_b978 = add i32 %v4_b978, %v2_b31c
  %v6_b978 = inttoptr i32 %v5_b978 to i32*
  %v7_b978 = load i32, i32* %v6_b978, align 4
  store i32 %v7_b978, i32* @r4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* %r3.global-to-local, align 4
  %v0_b980 = load i32, i32* @fp, align 4
  %v9_b980 = icmp eq i32 %v0_b980, ptrtoint ([3 x i8]* @global_var_ffff.45 to i32)
  store i1 %v9_b980, i1* %cpsr_z.global-to-local, align 1
  %v1_b984 = add i32 %v7_b978, 20
  store i32 %v1_b984, i32* @r5, align 4
  br i1 %v9_b980, label %dec_label_pc_ba7c, label %dec_label_pc_b98c

dec_label_pc_b98c:                                ; preds = %dec_label_pc_b970
  store i32 %v1_b4b0, i32* %r3.global-to-local, align 4
  store i1 %v2_ba84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ba84, label %dec_label_pc_b998, label %dec_label_pc_ba90

dec_label_pc_b998:                                ; preds = %dec_label_pc_b98c, %dec_label_pc_ba7c, %dec_label_pc_ba90
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_b99c = load i32, i32* @r4, align 4
  %v3_b99c = add i32 %v2_b99c, 10
  %v4_b99c = inttoptr i32 %v3_b99c to i16*
  store i16 0, i16* %v4_b99c, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_b9a4 = load i32, i32* @r4, align 4
  store i32 %v0_b9a4, i32* @r0, align 4
  %v2_b9a8 = call i32 @function_c848(i32 %v0_b9a4, i32 20)
  %v3_b9a8 = trunc i32 %v2_b9a8 to i16
  store i32 %v2_b9a8, i32* %r0.global-to-local, align 4
  %v3_b9ac = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_b30c, i32* %r2.global-to-local, align 4
  %v3_b9b4 = mul i32 %v3_b9ac, 16
  %v2_b9b8 = add i32 %v3_b9b4, %v2_b30c
  store i32 %v2_b9b8, i32* %r1.global-to-local, align 4
  %v1_b9bc = add i32 %v2_b9b8, 4
  %v2_b9bc = inttoptr i32 %v1_b9bc to i32*
  %v3_b9bc = load i32, i32* %v2_b9bc, align 4
  %v3_b9c0 = mul i32 %v3_b9bc, 65536
  store i32 %v3_b9c0, i32* %ip.global-to-local, align 4
  %tmp83 = mul i32 %v3_b9bc, 256
  %v1_b9c8 = and i32 %tmp83, 65280
  %tmp84 = udiv i32 %v3_b9bc, 256
  %v4_b9cc = urem i32 %tmp84, 256
  %v5_b9cc = or i32 %v4_b9cc, %v1_b9c8
  store i32 %v5_b9cc, i32* %r3.global-to-local, align 4
  %v1_b9d0 = add i32 %v3_b9bc, 1
  store i32 %v1_b9d0, i32* %r2.global-to-local, align 4
  store i32 %v1_b9d0, i32* %v2_b9bc, align 4
  %v0_b9d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_b9d8 = load i32, i32* @r5, align 4
  %v2_b9d8 = add i32 %v1_b9d8, 4
  %v3_b9d8 = inttoptr i32 %v2_b9d8 to i32*
  store i32 %v0_b9d8, i32* %v3_b9d8, align 4
  %v0_b9dc = load i32, i32* %r1.global-to-local, align 4
  %v1_b9dc = add i32 %v0_b9dc, 8
  %v2_b9dc = inttoptr i32 %v1_b9dc to i32*
  %v3_b9dc = load i32, i32* %v2_b9dc, align 4
  %tmp85 = mul i32 %v3_b9dc, 256
  %v1_b9e8 = and i32 %tmp85, 65280
  %tmp86 = udiv i32 %v3_b9dc, 256
  %v4_b9ec = urem i32 %tmp86, 256
  %v5_b9ec = or i32 %v4_b9ec, %v1_b9e8
  %v1_b9f0 = load i32, i32* @r5, align 4
  %v2_b9f0 = add i32 %v1_b9f0, 8
  %v3_b9f0 = inttoptr i32 %v2_b9f0 to i32*
  store i32 %v5_b9ec, i32* %v3_b9f0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_b9f8 = load i32, i32* @r4, align 4
  %v4_b9f8 = add i32 %v3_b9f8, 10
  %v5_b9f8 = inttoptr i32 %v4_b9f8 to i16*
  store i16 %v3_b9a8, i16* %v5_b9f8, align 2
  %v0_b9fc = load i32, i32* @r5, align 4
  store i32 %v0_b9fc, i32* @r1, align 4
  %v0_ba00 = load i32, i32* %r3.global-to-local, align 4
  %v1_ba00 = trunc i32 %v0_ba00 to i16
  %v3_ba00 = add i32 %v0_b9fc, 16
  %v4_ba00 = inttoptr i32 %v3_ba00 to i16*
  store i16 %v1_ba00, i16* %v4_ba00, align 2
  %v0_ba04 = load i32, i32* @r8, align 4
  store i32 %v0_ba04, i32* %r2.global-to-local, align 4
  %v0_ba08 = load i32, i32* @sl, align 4
  store i32 %v0_ba08, i32* %r3.global-to-local, align 4
  %v0_ba0c = load i32, i32* @r4, align 4
  store i32 %v0_ba0c, i32* %r0.global-to-local, align 4
  %v4_ba10 = call i32 @function_c898(i32 %v0_ba0c, i32 %v0_b9fc, i32 %v0_ba04, i32 %v0_ba08)
  %v5_ba10 = trunc i32 %v4_ba10 to i16
  store i32 %v4_ba10, i32* %r0.global-to-local, align 4
  %v3_ba14 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_ba14, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v3_ba1c = mul i32 %v3_ba14, 32
  store i32 %v3_ba1c, i32* %lr.global-to-local, align 4
  %v3_ba20 = load i32, i32* @r5, align 4
  %v4_ba20 = add i32 %v3_ba20, 16
  %v5_ba20 = inttoptr i32 %v4_ba20 to i16*
  store i16 %v5_ba10, i16* %v5_ba20, align 2
  %v0_ba24 = load i32, i32* %lr.global-to-local, align 4
  %v1_ba24 = load i32, i32* %r3.global-to-local, align 4
  %tmp103 = mul i32 %v1_ba24, -8
  %v5_ba24 = add i32 %v0_ba24, %tmp103
  store i32 %v5_ba24, i32* %lr.global-to-local, align 4
  %v0_ba28 = load i32, i32* @r5, align 4
  %v1_ba28 = add i32 %v0_ba28, 2
  %v2_ba28 = inttoptr i32 %v1_ba28 to i16*
  %v3_ba28 = load i16, i16* %v2_ba28, align 2
  %v1_ba2c = load i32, i32* %ip.global-to-local, align 4
  %v2_ba2c = add i32 %v1_ba2c, %v5_ba24
  store i32 %v2_ba2c, i32* @lr, align 4
  %v3_ba30 = add i32 %v2_ba2c, 2
  %v4_ba30 = inttoptr i32 %v3_ba30 to i16*
  store i16 %v3_ba28, i16* %v4_ba30, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_ba3c = load i32, i32* @r4, align 4
  store i32 %v0_ba3c, i32* %r1.global-to-local, align 4
  %v0_ba40 = load i32, i32* @sb, align 4
  store i32 %v0_ba40, i32* %r0.global-to-local, align 4
  %v0_ba44 = load i32, i32* @r7, align 4
  store i32 %v0_ba44, i32* %r2.global-to-local, align 4
  %v0_ba48 = load i32, i32* @lr, align 4
  %v6_ba50 = call i32 @function_12af8(i32 %v0_ba40, i32 %v0_ba3c, i32 %v0_ba44, i32 16384, i32 %v0_ba48, i32 16)
  %v3_ba54 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_ba54, i32* %r3.global-to-local, align 4
  %v1_ba58 = add i32 %v3_ba54, 1
  store i32 %v1_ba58, i32* %r0.global-to-local, align 4
  %v0_ba5c = load i32, i32* @r6, align 4
  %v9_ba5c = icmp eq i32 %v0_ba5c, %v1_ba58
  store i1 %v9_ba5c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_ba58, i32* %stack_var_-44, align 4
  %v8_ba64 = icmp sgt i32 %v0_ba5c, %v1_ba58
  br i1 %v8_ba64, label %dec_label_pc_b970, label %dec_label_pc_ba68

dec_label_pc_ba68:                                ; preds = %dec_label_pc_b998
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_ba6c = icmp eq i32 %v0_ba5c, 0
  store i1 %v2_ba6c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_ba6c, label %dec_label_pc_b95c, label %dec_label_pc_b96c

dec_label_pc_ba7c:                                ; preds = %dec_label_pc_b970
  %v0_ba7c = call i32 @function_df2c()
  %v1_ba7c = trunc i32 %v0_ba7c to i16
  store i32 %v0_ba7c, i32* %r0.global-to-local, align 4
  store i32 %v1_b4b0, i32* %r3.global-to-local, align 4
  store i1 %v2_ba84, i1* %cpsr_z.global-to-local, align 1
  %v3_ba88 = load i32, i32* @r4, align 4
  %v4_ba88 = add i32 %v3_ba88, 4
  %v5_ba88 = inttoptr i32 %v4_ba88 to i16*
  store i16 %v1_ba7c, i16* %v5_ba88, align 2
  br i1 %v2_ba84, label %dec_label_pc_b998, label %dec_label_pc_ba7c.dec_label_pc_ba90_crit_edge

dec_label_pc_ba7c.dec_label_pc_ba90_crit_edge:    ; preds = %dec_label_pc_ba7c
  %v0_ba90.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_ba90

dec_label_pc_ba90:                                ; preds = %dec_label_pc_ba7c.dec_label_pc_ba90_crit_edge, %dec_label_pc_b98c
  %v0_ba90 = phi i32 [ %v0_ba90.pre, %dec_label_pc_ba7c.dec_label_pc_ba90_crit_edge ], [ %v7_b978, %dec_label_pc_b98c ]
  %v1_ba90 = add i32 %v0_ba90, 40
  store i32 %v1_ba90, i32* %r0.global-to-local, align 4
  store i32 %v6_b490, i32* %r1.global-to-local, align 4
  %v2_ba98 = inttoptr i32 %v1_ba90 to i16*
  %v3_ba98 = call i32 @function_e0c0(i16* %v2_ba98, i32 %v6_b490)
  store i32 %v3_ba98, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b998

; uselistorder directives
  uselistorder i32 %v0_ba7c, { 1, 0 }
  uselistorder i32 %v1_ba58, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_ba24, { 1, 0 }
  uselistorder i32 %v4_ba10, { 1, 0 }
  uselistorder i32 %v3_b9dc, { 1, 0 }
  uselistorder i32 %v3_b9bc, { 3, 2, 0, 1 }
  uselistorder i32 %v2_b9a8, { 1, 0 }
  uselistorder i1 %v2_ba84, { 2, 3, 1, 0 }
  uselistorder i32 %v0_b894, { 1, 0 }
  uselistorder i32 %v0_b7cc, { 1, 0 }
  uselistorder i32 %v5_b760, { 1, 0 }
  uselistorder i32 %v0_b720, { 1, 0 }
  uselistorder i32 %v0_b6dc, { 1, 2, 0, 3 }
  uselistorder i32 %v1_b68c, { 1, 0, 2, 3 }
  uselistorder i32 %v3_b678, { 1, 0, 3, 4, 2 }
  uselistorder i1 %v7_b604, { 1, 0 }
  uselistorder i32 %v6_b5fc, { 0, 2, 1, 3 }
  uselistorder i1 %v9_b62c, { 1, 0 }
  uselistorder i32 %v4_b640, { 1, 0 }
  uselistorder i16 %stack_var_-62.2, { 0, 1, 3, 2 }
  uselistorder i32 %v0_b588, { 1, 0, 2 }
  uselistorder i32 %v0_b738, { 1, 0, 2, 4, 5, 3 }
  uselistorder i32 %v4_b578, { 1, 0 }
  uselistorder i1 %v7_b570, { 1, 0, 2 }
  uselistorder i1 %v7_b524, { 1, 0 }
  uselistorder i32 %v3_b520, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-60.0, { 1, 0 }
  uselistorder i16 %stack_var_-62.0, { 1, 0 }
  uselistorder i32 %v1_b900, { 1, 0 }
  uselistorder i32 %v1_b8e8, { 1, 0 }
  uselistorder i32 %v1_b8d0, { 1, 0 }
  uselistorder i32 %v1_b8b8, { 1, 0 }
  uselistorder i32 %v1_b8a0, { 1, 0 }
  uselistorder i32 %v3_b638, { 1, 0 }
  uselistorder i1 %v2_b654, { 1, 0 }
  uselistorder i32 %v1_b650, { 1, 0 }
  uselistorder i32 %v4_b64c, { 2, 0, 1 }
  uselistorder i32 %v2_b560, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v0_b4fc, { 1, 0 }
  uselistorder i1 %v7_b4f4, { 1, 0 }
  uselistorder i1 %v7_b4c8, { 1, 0 }
  uselistorder i32 %v3_b4c4, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v1_b4b0, { 2, 3, 1, 0 }
  uselistorder i32 %v6_b490, { 9, 8, 2, 0, 1, 10, 5, 4, 6, 7, 3 }
  uselistorder i32 %v1_b478, { 1, 0 }
  uselistorder i32 %v1_b458, { 1, 0 }
  uselistorder i32 %v1_b438, { 1, 0 }
  uselistorder i32 %v1_b418, { 1, 0 }
  uselistorder i32 %v1_b3f8, { 1, 0 }
  uselistorder i32 %v1_b3d8, { 1, 0 }
  uselistorder i32 %v7_b3b4, { 1, 0 }
  uselistorder i32 %v1_b39c, { 1, 0 }
  uselistorder i8 %v5_b354, { 1, 0 }
  uselistorder i32 %v6_b334, { 1, 0 }
  uselistorder i32 %v2_b31c, { 0, 3, 1, 2 }
  uselistorder i32 %v2_b30c, { 0, 7, 1, 4, 2, 5, 3, 6 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14 }
  uselistorder i32* %r3.global-to-local, { 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 45, 47, 49, 48, 50, 52, 51, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 5, 7, 6, 9, 8, 11, 10, 16, 12, 13, 14, 15, 19, 17, 18, 21, 20, 22, 25, 24, 23, 26, 27, 28, 31, 32, 29, 56, 34, 33, 35, 36, 37, 39, 38, 30, 41, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 15, 17, 13, 18, 19, 20, 21, 22, 23 }
  uselistorder i32 %arg2, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b998, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b96c, { 1, 0 }
  uselistorder label %dec_label_pc_b95c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b94c, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %dec_label_pc_b6b8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b688, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b5c4, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_b5a4, { 1, 0 }
  uselistorder label %dec_label_pc_b580, { 1, 0 }
  uselistorder label %bb71, { 1, 0 }
  uselistorder label %dec_label_pc_b530, { 1, 0 }
  uselistorder label %dec_label_pc_b514, { 1, 0 }
}

define i32 @function_baa4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_baa4:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v18_baa4 = load i32, i32* @sb, align 4
  %v24_baa4 = load i32, i32* @fp, align 4
  %v27_baa4 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_bac0 = call i32 @function_136e4(i32 %arg1, i32 4)
  %v0_bac4 = load i32, i32* @r5, align 4
  store i32 %v0_bac4, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bad4 = load i32, i32* @r4, align 4
  store i32 %v0_bad4, i32* %r0.global-to-local, align 4
  %v5_bad8 = inttoptr i32 %v0_bac4 to i32*
  %v6_bad8 = call i32 @function_8570(i32 %v0_bad4, i32* %v5_bad8, i32 2, i32 0)
  %v1_bae4 = urem i32 %v6_bad8, 256
  store i32 %v1_bae4, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_baf0 = load i32, i32* @r5, align 4
  store i32 %v0_baf0, i32* %r1.global-to-local, align 4
  %v0_baf4 = load i32, i32* @r4, align 4
  store i32 %v0_baf4, i32* %r0.global-to-local, align 4
  %v7_bafc = inttoptr i32 %v0_baf0 to i32*
  %v8_bafc = call i32 @function_8570(i32 %v0_baf4, i32* %v7_bafc, i32 3, i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32))
  %v0_bb00 = load i32, i32* @r5, align 4
  store i32 %v0_bb00, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v8_bafc, i32* %sb.global-to-local, align 4
  %v0_bb10 = load i32, i32* @r4, align 4
  store i32 %v0_bb10, i32* %r0.global-to-local, align 4
  %v4_bb14 = inttoptr i32 %v0_bb00 to i32*
  %v5_bb14 = call i32 @function_8570(i32 %v0_bb10, i32* %v4_bb14, i32 4, i32 64)
  %v1_bb1c = urem i32 %v5_bb14, 256
  store i32 %v1_bb1c, i32* %ip.global-to-local, align 4
  %v0_bb20 = load i32, i32* @r5, align 4
  store i32 %v0_bb20, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bb2c = load i32, i32* @r4, align 4
  store i32 %v0_bb2c, i32* %r0.global-to-local, align 4
  %v6_bb34 = inttoptr i32 %v0_bb20 to i32*
  %v7_bb34 = call i32 @function_8570(i32 %v0_bb2c, i32* %v6_bb34, i32 5, i32 0)
  %v1_bb40 = urem i32 %v7_bb34, 256
  store i32 %v1_bb40, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_bb4c = load i32, i32* @r5, align 4
  store i32 %v0_bb4c, i32* %r1.global-to-local, align 4
  %v0_bb50 = load i32, i32* @r4, align 4
  store i32 %v0_bb50, i32* %r0.global-to-local, align 4
  %v6_bb58 = inttoptr i32 %v0_bb4c to i32*
  %v7_bb58 = call i32 @function_8570(i32 %v0_bb50, i32* %v6_bb58, i32 6, i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32))
  %v0_bb60 = load i32, i32* @r5, align 4
  store i32 %v0_bb60, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v7_bb58, i32* @r6, align 4
  %v0_bb70 = load i32, i32* @r4, align 4
  store i32 %v0_bb70, i32* %r0.global-to-local, align 4
  %v5_bb74 = inttoptr i32 %v0_bb60 to i32*
  %v6_bb74 = call i32 @function_8570(i32 %v0_bb70, i32* %v5_bb74, i32 7, i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32))
  %v0_bb7c = load i32, i32* @r5, align 4
  store i32 %v0_bb7c, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 %v6_bb74, i32* @sl, align 4
  %v0_bb8c = load i32, i32* @r4, align 4
  store i32 %v0_bb8c, i32* %r0.global-to-local, align 4
  %v5_bb90 = inttoptr i32 %v0_bb7c to i32*
  %v6_bb90 = call i32 @function_8570(i32 %v0_bb8c, i32* %v5_bb90, i32 17, i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32))
  %v0_bb9c = load i32, i32* @r5, align 4
  store i32 %v0_bb9c, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* %r3.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  %v0_bba8 = load i32, i32* @r4, align 4
  store i32 %v0_bba8, i32* %r0.global-to-local, align 4
  %v6_bbac = inttoptr i32 %v0_bb9c to i32*
  %v7_bbac = call i32 @function_8570(i32 %v0_bba8, i32* %v6_bbac, i32 18, i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32))
  %v0_bbb0 = load i32, i32* @r5, align 4
  store i32 %v0_bbb0, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bbc0 = load i32, i32* @r4, align 4
  store i32 %v0_bbc0, i32* %r0.global-to-local, align 4
  %v5_bbc4 = inttoptr i32 %v0_bbb0 to i32*
  %v6_bbc4 = call i32 @function_8570(i32 %v0_bbc0, i32* %v5_bbc4, i32 11, i32 0)
  %v0_bbc8 = load i32, i32* @r5, align 4
  store i32 %v0_bbc8, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bbd8 = load i32, i32* @r4, align 4
  store i32 %v0_bbd8, i32* %r0.global-to-local, align 4
  %v5_bbdc = inttoptr i32 %v0_bbc8 to i32*
  %v6_bbdc = call i32 @function_8570(i32 %v0_bbd8, i32* %v5_bbdc, i32 12, i32 1)
  %v0_bbe0 = load i32, i32* @r5, align 4
  store i32 %v0_bbe0, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bbf0 = load i32, i32* @r4, align 4
  store i32 %v0_bbf0, i32* %r0.global-to-local, align 4
  %v5_bbf4 = inttoptr i32 %v0_bbe0 to i32*
  %v6_bbf4 = call i32 @function_8570(i32 %v0_bbf0, i32* %v5_bbf4, i32 13, i32 0)
  %v0_bbf8 = load i32, i32* @r5, align 4
  store i32 %v0_bbf8, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bc08 = load i32, i32* @r4, align 4
  store i32 %v0_bc08, i32* %r0.global-to-local, align 4
  %v5_bc0c = inttoptr i32 %v0_bbf8 to i32*
  %v6_bc0c = call i32 @function_8570(i32 %v0_bc08, i32* %v5_bc0c, i32 14, i32 0)
  %v0_bc10 = load i32, i32* @r5, align 4
  store i32 %v0_bc10, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bc20 = load i32, i32* @r4, align 4
  store i32 %v0_bc20, i32* %r0.global-to-local, align 4
  %v5_bc24 = inttoptr i32 %v0_bc10 to i32*
  %v6_bc24 = call i32 @function_8570(i32 %v0_bc20, i32* %v5_bc24, i32 15, i32 0)
  %v0_bc28 = load i32, i32* @r5, align 4
  store i32 %v0_bc28, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bc38 = load i32, i32* @r4, align 4
  store i32 %v0_bc38, i32* %r0.global-to-local, align 4
  %v5_bc3c = inttoptr i32 %v0_bc28 to i32*
  %v6_bc3c = call i32 @function_8570(i32 %v0_bc38, i32* %v5_bc3c, i32 16, i32 0)
  %v0_bc40 = load i32, i32* @r5, align 4
  store i32 %v0_bc40, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_bc50 = load i32, i32* @r4, align 4
  store i32 %v0_bc50, i32* %r0.global-to-local, align 4
  %v5_bc54 = inttoptr i32 %v0_bc40 to i32*
  %v6_bc54 = call i32 @function_8570(i32 %v0_bc50, i32* %v5_bc54, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bc64 = load i32, i32* @r5, align 4
  store i32 %v0_bc64, i32* %r1.global-to-local, align 4
  %v0_bc68 = load i32, i32* @r4, align 4
  store i32 %v0_bc68, i32* %r0.global-to-local, align 4
  %v4_bc6c = inttoptr i32 %v0_bc64 to i32*
  %v5_bc6c = call i32 @function_8570(i32 %v0_bc68, i32* %v4_bc6c, i32 1, i32 1)
  %v2_bc78 = load i32, i32* @global_var_1a2d4.47, align 4
  store i32 %v2_bc78, i32* %r3.global-to-local, align 4
  %v1_bc7c = urem i32 %v5_bc6c, 256
  store i32 %v1_bc7c, i32* %ip.global-to-local, align 4
  %v0_bc80 = load i32, i32* @r5, align 4
  store i32 %v0_bc80, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_bc88 = load i32, i32* @r4, align 4
  store i32 %v0_bc88, i32* %r0.global-to-local, align 4
  %v5_bc90 = inttoptr i32 %v0_bc80 to i32*
  %v6_bc90 = call i32 @function_8504(i32 %v0_bc88, i32* %v5_bc90, i32 25, i32 %v2_bc78, i32 %v1_bc7c)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_bca4 = call i32 @function_12b7c(i32 2, i32 3, i32 6)
  store i32 %v3_bca4, i32* %r0.global-to-local, align 4
  %v7_bca8 = icmp eq i32 %v3_bca4, -1
  store i1 %v7_bca8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bca8, label %dec_label_pc_c170, label %dec_label_pc_bcb4

dec_label_pc_bcb4:                                ; preds = %dec_label_pc_baa4
  store i32 1, i32* %stack_var_-44, align 4
  %v6_bcbc = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_bcbc, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_bcd0 = call i32 @function_12b38(i32 %v3_bca4, i32 0, i32 3, i32 %v6_bcbc, i32 4)
  store i32 %v5_bcd0, i32* %r0.global-to-local, align 4
  %v7_bcd4 = icmp eq i32 %v5_bcd0, -1
  store i1 %v7_bcd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bcd4, label %dec_label_pc_c168, label %dec_label_pc_bcdc

dec_label_pc_bcdc:                                ; preds = %dec_label_pc_bcb4
  %v0_bcdc = load i32, i32* %sb.global-to-local, align 4
  %v3_bcdc = mul i32 %v0_bcdc, 65536
  store i32 %v3_bcdc, i32* @r5, align 4
  %v0_bce0 = load i32, i32* @r6, align 4
  %v0_bce4 = load i32, i32* @sl, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_bcec = urem i32 %v0_bcdc, 65536
  store i32 %v3_bcec, i32* %r1.global-to-local, align 4
  %v3_bcf0 = urem i32 %v0_bce0, 65536
  store i32 %v3_bcf0, i32* %r2.global-to-local, align 4
  %v3_bcf4 = urem i32 %v0_bce4, 65536
  store i32 %v3_bcf4, i32* %r3.global-to-local, align 4
  %v0_bcf8 = load i32, i32* @r7, align 4
  %v2_bcf8 = icmp eq i32 %v0_bcf8, 0
  store i1 %v2_bcf8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_bcf8, label %dec_label_pc_c17c, label %dec_label_pc_bd10

dec_label_pc_bd10:                                ; preds = %dec_label_pc_bcdc
  %v3_bd14 = mul i32 %v6_bc54, 65536
  %v1_bd18 = add i32 %v3_bd14, 2621440
  store i32 %v1_bd18, i32* @lr, align 4
  %tmp59 = mul i32 %v0_bce0, 256
  %v3_bd3c = and i32 %tmp59, 65280
  %tmp60 = mul i32 %v0_bce4, 256
  %v3_bd40 = and i32 %tmp60, 65280
  %tmp61 = udiv i32 %v0_bce0, 256
  %v4_bd44 = urem i32 %tmp61, 256
  %v5_bd44 = or i32 %v4_bd44, %v3_bd3c
  store i32 %v5_bd44, i32* @r6, align 4
  %tmp62 = udiv i32 %v0_bce4, 256
  %v4_bd48 = urem i32 %tmp62, 256
  %v5_bd48 = or i32 %v4_bd48, %v3_bd40
  store i32 %v5_bd48, i32* @sl, align 4
  %tmp63 = udiv i32 %v1_bd18, 256
  %v3_bd5c = and i32 %tmp63, 65280
  %tmp64 = mul i32 %v0_bcdc, 256
  %v3_bd60 = and i32 %tmp64, 65280
  %tmp65 = mul i32 %v6_bb90, 256
  %v3_bd64 = and i32 %tmp65, 65280
  %v1_bd68 = urem i32 %v6_bbc4, 2
  %v1_bd6c = urem i32 %v6_bbdc, 2
  %tmp66 = udiv i32 %v6_bb90, 256
  %v4_bd70 = urem i32 %tmp66, 256
  %v5_bd70 = or i32 %v4_bd70, %v3_bd64
  %v4_bd74 = udiv i32 %v1_bd18, 16777216
  %v5_bd74 = or i32 %v3_bd5c, %v4_bd74
  store i32 %v5_bd74, i32* @sb, align 4
  %tmp67 = udiv i32 %v0_bcdc, 256
  %v4_bd78 = urem i32 %tmp67, 256
  %v5_bd78 = or i32 %v4_bd78, %v3_bd60
  store i32 %v5_bd78, i32* @fp, align 4
  %v1_bd94 = urem i32 %v6_bbf4, 2
  store i32 %v1_bd94, i32* %r2.global-to-local, align 4
  %v1_bd98 = urem i32 %v6_bc0c, 2
  store i32 %v1_bd98, i32* %r3.global-to-local, align 4
  %v1_bd9c = urem i32 %v6_bc24, 2
  store i32 %v1_bd9c, i32* %ip.global-to-local, align 4
  %v1_bda0 = urem i32 %v6_bc3c, 2
  store i32 %v1_bda0, i32* %r0.global-to-local, align 4
  %v1_bda4 = urem i32 %v6_bbf4, 256
  store i32 %v1_bda4, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %sext = mul i32 %v6_bad8, 16777216
  %v4_be18 = sdiv i32 %sext, 16777216
  %sext3 = mul i32 %v5_bb14, 16777216
  %v4_be24 = sdiv i32 %sext3, 16777216
  %tmp = sub nsw i32 0, %v1_bd6c
  %v4_be90 = and i32 %tmp, 16
  %tmp72 = sub nsw i32 0, %v1_bd94
  %v4_beac = and i32 %tmp72, 8
  %tmp73 = sub nsw i32 0, %v1_bd98
  %v4_bec0 = and i32 %tmp73, 4
  %tmp74 = sub nsw i32 0, %v1_bd9c
  %v3_bed4 = and i32 %tmp74, 2
  %v2_bef8 = icmp eq i32 %v1_bda4, 0
  %v1_be20 = trunc i32 %v4_be18 to i8
  %extract.t = trunc i32 %v4_be24 to i8
  br label %dec_label_pc_bdc4

dec_label_pc_bdc4:                                ; preds = %bb70, %dec_label_pc_bd10
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_bdd0 = call i32 @function_136e4(i32 1510, i32 1)
  store i32 %v2_bdd0, i32* %r0.global-to-local, align 4
  %v2_bdd8 = load i32, i32* @r4, align 4
  %v5_bdd8 = mul i32 %v2_bdd8, 4
  %v6_bdd8 = add i32 %v5_bdd8, %v2_bac0
  %v7_bdd8 = inttoptr i32 %v6_bdd8 to i32*
  store i32 %v2_bdd0, i32* %v7_bdd8, align 4
  %v3_bddc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_bddc, i32* %r2.global-to-local, align 4
  %v5_bde4 = mul i32 %v3_bddc, 24
  %v1_bde8 = load i32, i32* @r8, align 4
  %v2_bde8 = add i32 %v1_bde8, %v5_bde4
  store i32 %v2_bde8, i32* %r1.global-to-local, align 4
  store i32 %v2_bac0, i32* %r3.global-to-local, align 4
  %v4_bdf0 = mul i32 %v3_bddc, 4
  %v5_bdf0 = add i32 %v4_bdf0, %v2_bac0
  %v6_bdf0 = inttoptr i32 %v5_bdf0 to i32*
  %v7_bdf0 = load i32, i32* %v6_bdf0, align 4
  store i32 %v7_bdf0, i32* @r5, align 4
  %v1_bdf4 = inttoptr i32 %v7_bdf0 to i8*
  %v2_bdf4 = load i8, i8* %v1_bdf4, align 1
  %tmp75 = urem i8 %v2_bdf4, 16
  %v1_bdf8 = zext i8 %tmp75 to i32
  %v1_bdfc = or i32 %v1_bdf8, 64
  store i32 %v1_bdfc, i32* %r3.global-to-local, align 4
  %v1_be00 = trunc i32 %v1_bdfc to i8
  store i8 %v1_be00, i8* %v1_bdf4, align 1
  %v0_be04 = load i32, i32* @r5, align 4
  %v1_be04 = inttoptr i32 %v0_be04 to i8*
  %v2_be04 = load i8, i8* %v1_be04, align 1
  %v1_be08 = and i8 %v2_be04, -16
  %v1_be0c = or i8 %v1_be08, 5
  store i32 %v1_bb40, i32* %ip.global-to-local, align 4
  store i8 %v1_be0c, i8* %v1_be04, align 1
  store i32 %v4_be18, i32* %r0.global-to-local, align 4
  %v0_be1c = load i32, i32* %ip.global-to-local, align 4
  %v2_be1c = icmp eq i32 %v0_be1c, 0
  store i1 %v2_be1c, i1* %cpsr_z.global-to-local, align 1
  %v2_be20 = load i32, i32* @r5, align 4
  %v3_be20 = add i32 %v2_be20, 1
  %v4_be20 = inttoptr i32 %v3_be20 to i8*
  store i8 %v1_be20, i8* %v4_be20, align 1
  store i32 %v4_be24, i32* %r2.global-to-local, align 4
  %v0_be28 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_be28, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_bdc4
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_be2c = load i32, i32* @r5, align 4
  %v4_be2c = add i32 %v3_be2c, 6
  %v5_be2c = inttoptr i32 %v4_be2c to i16*
  store i16 64, i16* %v5_be2c, align 2
  %v0_be34.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t17 = trunc i32 %v0_be34.pre to i8
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_bdc4, %bb
  %v0_be34.off0 = phi i8 [ %extract.t, %dec_label_pc_bdc4 ], [ %extract.t17, %bb ]
  store i32 6, i32* %r3.global-to-local, align 4
  %v2_be34 = load i32, i32* @r5, align 4
  %v3_be34 = add i32 %v2_be34, 8
  %v4_be34 = inttoptr i32 %v3_be34 to i8*
  store i8 %v0_be34.off0, i8* %v4_be34, align 1
  %v0_be38 = load i32, i32* %r3.global-to-local, align 4
  %v1_be38 = trunc i32 %v0_be38 to i8
  %v2_be38 = load i32, i32* @r5, align 4
  %v3_be38 = add i32 %v2_be38, 9
  %v4_be38 = inttoptr i32 %v3_be38 to i8*
  store i8 %v1_be38, i8* %v4_be38, align 1
  store i32 %v6_bc90, i32* %ip.global-to-local, align 4
  %v1_be40 = load i32, i32* @r5, align 4
  %v2_be40 = add i32 %v1_be40, 12
  %v3_be40 = inttoptr i32 %v2_be40 to i32*
  store i32 %v6_bc90, i32* %v3_be40, align 4
  %v0_be44 = load i32, i32* %r1.global-to-local, align 4
  %v1_be44 = add i32 %v0_be44, 16
  %v2_be44 = inttoptr i32 %v1_be44 to i32*
  %v3_be44 = load i32, i32* %v2_be44, align 4
  store i32 %v3_be44, i32* %r3.global-to-local, align 4
  %v0_be48 = load i32, i32* @sb, align 4
  %v1_be48 = trunc i32 %v0_be48 to i16
  %v2_be48 = load i32, i32* @r5, align 4
  %v3_be48 = add i32 %v2_be48, 2
  %v4_be48 = inttoptr i32 %v3_be48 to i16*
  store i16 %v1_be48, i16* %v4_be48, align 2
  %v0_be4c = load i32, i32* @fp, align 4
  %v1_be4c = trunc i32 %v0_be4c to i16
  %v2_be4c = load i32, i32* @r5, align 4
  %v3_be4c = add i32 %v2_be4c, 4
  %v4_be4c = inttoptr i32 %v3_be4c to i16*
  store i16 %v1_be4c, i16* %v4_be4c, align 2
  %v0_be50 = load i32, i32* %r3.global-to-local, align 4
  %v1_be50 = load i32, i32* @r5, align 4
  %v2_be50 = add i32 %v1_be50, 16
  %v3_be50 = inttoptr i32 %v2_be50 to i32*
  store i32 %v0_be50, i32* %v3_be50, align 4
  %v0_be54 = load i32, i32* @r6, align 4
  %v1_be54 = trunc i32 %v0_be54 to i16
  %v2_be54 = load i32, i32* @r5, align 4
  %v3_be54 = add i32 %v2_be54, 20
  %v4_be54 = inttoptr i32 %v3_be54 to i16*
  store i16 %v1_be54, i16* %v4_be54, align 2
  %v0_be58 = load i32, i32* @r5, align 4
  %v1_be58 = add i32 %v0_be58, 20
  store i32 %v1_be58, i32* @r4, align 4
  %v1_be5c = add i32 %v0_be58, 32
  %v2_be5c = inttoptr i32 %v1_be5c to i8*
  %v3_be5c = load i8, i8* %v2_be5c, align 1
  %v4_be5c = zext i8 %v3_be5c to i32
  store i32 %v4_be5c, i32* %r3.global-to-local, align 4
  %v1_be60 = add i32 %v0_be58, 33
  %v2_be60 = inttoptr i32 %v1_be60 to i8*
  %v3_be60 = load i8, i8* %v2_be60, align 1
  %v4_be60 = zext i8 %v3_be60 to i32
  store i32 %v1_bd68, i32* %r0.global-to-local, align 4
  %tmp76 = urem i8 %v3_be5c, 16
  %v1_be68 = zext i8 %tmp76 to i32
  %v1_be6c = or i32 %v1_be68, 80
  store i32 %v1_be6c, i32* %r3.global-to-local, align 4
  %v1_be70 = and i32 %v4_be60, 223
  store i32 %v1_be70, i32* %r2.global-to-local, align 4
  %v1_be74 = trunc i32 %v1_be6c to i8
  store i8 %v1_be74, i8* %v2_be5c, align 1
  %v0_be78 = load i32, i32* %r2.global-to-local, align 4
  %v1_be78 = load i32, i32* %r0.global-to-local, align 4
  %v4_be78 = mul i32 %v1_be78, 32
  %v5_be78 = or i32 %v4_be78, %v0_be78
  store i32 %v5_be78, i32* %r2.global-to-local, align 4
  store i32 %v5_bd70, i32* %r1.global-to-local, align 4
  %v1_be80 = trunc i32 %v5_be78 to i8
  %v2_be80 = load i32, i32* @r4, align 4
  %v3_be80 = add i32 %v2_be80, 13
  %v4_be80 = inttoptr i32 %v3_be80 to i8*
  store i8 %v1_be80, i8* %v4_be80, align 1
  %v0_be84 = load i32, i32* @r4, align 4
  %v1_be84 = add i32 %v0_be84, 13
  %v2_be84 = inttoptr i32 %v1_be84 to i8*
  %v3_be84 = load i8, i8* %v2_be84, align 1
  %v4_be84 = zext i8 %v3_be84 to i32
  store i32 %v1_bd6c, i32* %r2.global-to-local, align 4
  %v1_be8c = and i32 %v4_be84, 239
  %v5_be90 = or i32 %v1_be8c, %v4_be90
  store i32 %v5_be90, i32* %r3.global-to-local, align 4
  %v0_be94 = load i32, i32* %r1.global-to-local, align 4
  %v2_be94 = add i32 %v0_be84, 4
  %v3_be94 = inttoptr i32 %v2_be94 to i32*
  store i32 %v0_be94, i32* %v3_be94, align 4
  %v0_be98 = load i32, i32* @sl, align 4
  %v1_be98 = trunc i32 %v0_be98 to i16
  %v2_be98 = load i32, i32* @r4, align 4
  %v3_be98 = add i32 %v2_be98, 2
  %v4_be98 = inttoptr i32 %v3_be98 to i16*
  store i16 %v1_be98, i16* %v4_be98, align 2
  %v0_be9c = load i32, i32* %r3.global-to-local, align 4
  %v1_be9c = trunc i32 %v0_be9c to i8
  %v2_be9c = load i32, i32* @r4, align 4
  %v3_be9c = add i32 %v2_be9c, 13
  %v4_be9c = inttoptr i32 %v3_be9c to i8*
  store i8 %v1_be9c, i8* %v4_be9c, align 1
  %v0_bea0 = load i32, i32* @r4, align 4
  %v1_bea0 = add i32 %v0_bea0, 13
  %v2_bea0 = inttoptr i32 %v1_bea0 to i8*
  %v3_bea0 = load i8, i8* %v2_bea0, align 1
  %v4_bea0 = zext i8 %v3_bea0 to i32
  store i32 %v1_bd94, i32* %r3.global-to-local, align 4
  %v1_bea8 = and i32 %v4_bea0, 247
  %v5_beac = or i32 %v1_bea8, %v4_beac
  store i32 %v5_beac, i32* %r2.global-to-local, align 4
  %v1_beb0 = trunc i32 %v5_beac to i8
  store i8 %v1_beb0, i8* %v2_bea0, align 1
  %v0_beb4 = load i32, i32* @r4, align 4
  %v1_beb4 = add i32 %v0_beb4, 13
  %v2_beb4 = inttoptr i32 %v1_beb4 to i8*
  %v3_beb4 = load i8, i8* %v2_beb4, align 1
  %v4_beb4 = zext i8 %v3_beb4 to i32
  store i32 %v1_bd98, i32* %ip.global-to-local, align 4
  %v1_bebc = and i32 %v4_beb4, 251
  %v5_bec0 = or i32 %v1_bebc, %v4_bec0
  store i32 %v5_bec0, i32* %r3.global-to-local, align 4
  %v1_bec4 = trunc i32 %v5_bec0 to i8
  store i8 %v1_bec4, i8* %v2_beb4, align 1
  %v0_bec8 = load i32, i32* @r4, align 4
  %v1_bec8 = add i32 %v0_bec8, 13
  %v2_bec8 = inttoptr i32 %v1_bec8 to i8*
  %v3_bec8 = load i8, i8* %v2_bec8, align 1
  %v4_bec8 = zext i8 %v3_bec8 to i32
  store i32 %v1_bd9c, i32* %r0.global-to-local, align 4
  %v1_bed0 = and i32 %v4_bec8, 253
  %v4_bed4 = or i32 %v1_bed0, %v3_bed4
  store i32 %v4_bed4, i32* %r2.global-to-local, align 4
  %v1_bed8 = trunc i32 %v4_bed4 to i8
  store i8 %v1_bed8, i8* %v2_bec8, align 1
  %v0_bedc = load i32, i32* @r4, align 4
  %v1_bedc = add i32 %v0_bedc, 13
  %v2_bedc = inttoptr i32 %v1_bedc to i8*
  %v3_bedc = load i8, i8* %v2_bedc, align 1
  %v4_bedc = zext i8 %v3_bedc to i32
  store i32 %v1_bda0, i32* %r1.global-to-local, align 4
  %v1_bee4 = and i32 %v4_bedc, 254
  %v2_bee8 = or i32 %v1_bee4, %v1_bda0
  store i32 %v2_bee8, i32* %r3.global-to-local, align 4
  %v1_beec = trunc i32 %v2_bee8 to i8
  store i8 %v1_beec, i8* %v2_bedc, align 1
  %v0_bef0 = call i32 @function_df2c()
  %v1_bef0 = trunc i32 %v0_bef0 to i16
  store i32 %v0_bef0, i32* %r0.global-to-local, align 4
  store i32 %v1_bda4, i32* %r2.global-to-local, align 4
  store i1 %v2_bef8, i1* %cpsr_z.global-to-local, align 1
  %v3_bf04.pre = load i32, i32* @r4, align 4
  br i1 %v2_bef8, label %.thread4, label %bb68

bb68:                                             ; preds = %.thread
  %v2_befc = add i32 %v3_bf04.pre, 13
  %v3_befc = inttoptr i32 %v2_befc to i8*
  %v4_befc = load i8, i8* %v3_befc, align 1
  %v5_befc = zext i8 %v4_befc to i32
  %v2_bf00 = or i32 %v5_befc, 8
  store i32 %v2_bf00, i32* @r3, align 4
  br label %.thread4

.thread4:                                         ; preds = %.thread, %bb68
  %v4_bf04 = add i32 %v3_bf04.pre, 14
  %v5_bf04 = inttoptr i32 %v4_bf04 to i16*
  store i16 %v1_bef0, i16* %v5_bf04, align 2
  store i32 %v6_bc54, i32* %r1.global-to-local, align 4
  %v0_bf0c = load i32, i32* @r5, align 4
  %v1_bf0c = add i32 %v0_bf0c, 40
  store i32 %v1_bf0c, i32* %r0.global-to-local, align 4
  br i1 %v2_bef8, label %bb70, label %bb69

bb69:                                             ; preds = %.thread4
  %v1_bf10 = load i32, i32* @r3, align 4
  %v2_bf10 = trunc i32 %v1_bf10 to i8
  %v3_bf10 = load i32, i32* @r4, align 4
  %v4_bf10 = add i32 %v3_bf10, 13
  %v5_bf10 = inttoptr i32 %v4_bf10 to i8*
  store i8 %v2_bf10, i8* %v5_bf10, align 1
  br label %bb70

bb70:                                             ; preds = %.thread4, %bb69
  %v2_bf14 = inttoptr i32 %v1_bf0c to i16*
  %v3_bf14 = call i32 @function_e0c0(i16* %v2_bf14, i32 %v6_bc54)
  store i32 %v3_bf14, i32* %r0.global-to-local, align 4
  %v3_bf18 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_bf18, i32* %r3.global-to-local, align 4
  %v1_bf1c = add i32 %v3_bf18, 1
  store i32 %v1_bf1c, i32* @r4, align 4
  %v1_bf20 = load i32, i32* @r7, align 4
  %v9_bf20 = icmp eq i32 %v1_bf1c, %v1_bf20
  store i1 %v9_bf20, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_bf1c, i32* %stack_var_-44, align 4
  %v5_bf28 = icmp slt i32 %v1_bf1c, %v1_bf20
  br i1 %v5_bf28, label %dec_label_pc_bdc4, label %dec_label_pc_bf2c

dec_label_pc_bf2c:                                ; preds = %bb70
  store i32 %v6_bc54, i32* %r3.global-to-local, align 4
  %v1_bf30 = add i32 %v6_bc54, 20
  store i32 %v1_bf30, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_bf38

dec_label_pc_bf38:                                ; preds = %dec_label_pc_c17c, %dec_label_pc_bf2c
  %v0_bf508 = phi i32 [ %v1_bf20, %dec_label_pc_bf2c ], [ 0, %dec_label_pc_c17c ]
  %stack_var_-140.0 = phi i32 [ %v3_bd14, %dec_label_pc_bf2c ], [ %v3_c188, %dec_label_pc_c17c ]
  %storemerge = add i32 %v6_bc54, 40
  store i32 %storemerge, i32* %fp.global-to-local, align 4
  store i32 %stack_var_-140.0, i32* %r1.global-to-local, align 4
  %v1_bf3c = add i32 %stack_var_-140.0, 1310720
  store i32 %v1_bf3c, i32* %r2.global-to-local, align 4
  %tmp71 = udiv i32 %v1_bf3c, 256
  %v3_bf44 = and i32 %tmp71, 65280
  store i32 %v3_bf44, i32* %r3.global-to-local, align 4
  %v4_bf48 = udiv i32 %v1_bf3c, 16777216
  %v5_bf48 = or i32 %v3_bf44, %v4_bf48
  store i32 %v5_bf48, i32* @sl, align 4
  %v9_c0e8 = icmp eq i32 %v3_bcec, ptrtoint ([3 x i8]* @global_var_ffff.45 to i32)
  %v2_c14c = icmp eq i32 %v1_bc7c, 0
  %v2_bf88 = icmp eq i32 %v6_bc90, -1
  %v7_bf88 = icmp eq i32 %v6_bc90, -1
  br label %dec_label_pc_bf4c

dec_label_pc_bf4c:                                ; preds = %dec_label_pc_bf4c, %dec_label_pc_c064, %dec_label_pc_bf38
  %v0_bf50 = phi i32 [ %v0_bf508, %dec_label_pc_bf38 ], [ 0, %dec_label_pc_c064 ], [ 0, %dec_label_pc_bf4c ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_bf50 = icmp eq i32 %v0_bf50, 0
  store i1 %v2_bf50, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_bf50, label %dec_label_pc_bf4c, label %dec_label_pc_bf5c

dec_label_pc_bf5c:                                ; preds = %dec_label_pc_bf4c, %dec_label_pc_c064
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bf60

dec_label_pc_bf60:                                ; preds = %dec_label_pc_bfe0, %dec_label_pc_bf5c
  %v1_bf74 = phi i32 [ %v1_c054, %dec_label_pc_bfe0 ], [ 0, %dec_label_pc_bf5c ]
  %v5_bf64 = mul i32 %v1_bf74, 24
  %v1_bf68 = load i32, i32* @r8, align 4
  %v2_bf68 = add i32 %v1_bf68, %v5_bf64
  store i32 %v2_bf68, i32* %r3.global-to-local, align 4
  store i32 %v2_bac0, i32* %ip.global-to-local, align 4
  %v1_bf70 = add i32 %v2_bf68, 20
  %v2_bf70 = inttoptr i32 %v1_bf70 to i8*
  %v3_bf70 = load i8, i8* %v2_bf70, align 1
  %v4_bf70 = zext i8 %v3_bf70 to i32
  store i32 %v4_bf70, i32* %r2.global-to-local, align 4
  %v4_bf74 = mul i32 %v1_bf74, 4
  %v5_bf74 = add i32 %v4_bf74, %v2_bac0
  %v6_bf74 = inttoptr i32 %v5_bf74 to i32*
  %v7_bf74 = load i32, i32* %v6_bf74, align 4
  store i32 %v7_bf74, i32* @r5, align 4
  %v7_bf78 = icmp eq i8 %v3_bf70, 31
  store i1 %v7_bf78, i1* %cpsr_z.global-to-local, align 1
  %v1_bf7c = add i32 %v7_bf74, 20
  store i32 %v1_bf7c, i32* @r6, align 4
  %tmp77 = icmp ult i8 %v3_bf70, 32
  br i1 %tmp77, label %dec_label_pc_c078, label %dec_label_pc_bf84

dec_label_pc_bf84:                                ; preds = %dec_label_pc_bf60
  store i32 %v6_bc90, i32* %r0.global-to-local, align 4
  store i1 %v7_bf88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bf88, label %dec_label_pc_c0d8, label %dec_label_pc_bf90

dec_label_pc_bf90:                                ; preds = %dec_label_pc_c078, %dec_label_pc_bf84
  store i32 %v3_bcec, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* @r4, align 4
  store i1 %v9_c0e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c0e8, label %dec_label_pc_c0f4, label %dec_label_pc_bfa4

dec_label_pc_bfa4:                                ; preds = %dec_label_pc_c0d8.dec_label_pc_bfa4_crit_edge, %dec_label_pc_bf90
  %v1_bfa8 = phi i32 [ %v1_bfa8.pre, %dec_label_pc_c0d8.dec_label_pc_bfa4_crit_edge ], [ ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), %dec_label_pc_bf90 ]
  store i32 %v3_bcf0, i32* %r2.global-to-local, align 4
  %v9_bfa8 = icmp eq i32 %v3_bcf0, %v1_bfa8
  store i1 %v9_bfa8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bfa8, label %dec_label_pc_c108, label %dec_label_pc_bfb0

dec_label_pc_bfb0:                                ; preds = %dec_label_pc_c0f4.dec_label_pc_bfb0_crit_edge, %dec_label_pc_bfa4
  %v1_bfb4 = phi i32 [ %v1_bfb4.pre, %dec_label_pc_c0f4.dec_label_pc_bfb0_crit_edge ], [ %v1_bfa8, %dec_label_pc_bfa4 ]
  store i32 %v3_bcf4, i32* %r3.global-to-local, align 4
  %v9_bfb4 = icmp eq i32 %v3_bcf4, %v1_bfb4
  store i1 %v9_bfb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bfb4, label %dec_label_pc_c11c, label %dec_label_pc_bfbc

dec_label_pc_bfbc:                                ; preds = %dec_label_pc_c108.dec_label_pc_bfbc_crit_edge, %dec_label_pc_bfb0
  %v1_bfc0 = phi i32 [ %v1_bfc0.pre, %dec_label_pc_c108.dec_label_pc_bfbc_crit_edge ], [ %v1_bfb4, %dec_label_pc_bfb0 ]
  store i32 %v6_bb90, i32* %ip.global-to-local, align 4
  %v9_bfc0 = icmp eq i32 %v6_bb90, %v1_bfc0
  store i1 %v9_bfc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bfc0, label %dec_label_pc_c130, label %dec_label_pc_bfc8

dec_label_pc_bfc8:                                ; preds = %dec_label_pc_c11c.dec_label_pc_bfc8_crit_edge, %dec_label_pc_bfbc
  %v1_bfcc = phi i32 [ %v1_bfcc.pre, %dec_label_pc_c11c.dec_label_pc_bfc8_crit_edge ], [ %v1_bfc0, %dec_label_pc_bfbc ]
  store i32 %v7_bbac, i32* %r0.global-to-local, align 4
  %v9_bfcc = icmp eq i32 %v7_bbac, %v1_bfcc
  store i1 %v9_bfcc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bfcc, label %dec_label_pc_c144, label %dec_label_pc_bfd4

dec_label_pc_bfd4:                                ; preds = %dec_label_pc_c130, %dec_label_pc_bfc8
  store i32 %v1_bc7c, i32* %r1.global-to-local, align 4
  store i1 %v2_c14c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c14c, label %dec_label_pc_bfe0, label %dec_label_pc_c158

dec_label_pc_bfe0:                                ; preds = %dec_label_pc_bfd4, %dec_label_pc_c144, %dec_label_pc_c158
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_bfe4 = load i32, i32* @r5, align 4
  %v3_bfe4 = add i32 %v2_bfe4, 10
  %v4_bfe4 = inttoptr i32 %v3_bfe4 to i16*
  store i16 0, i16* %v4_bfe4, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_bfec = load i32, i32* @r5, align 4
  store i32 %v0_bfec, i32* @r0, align 4
  %v2_bff0 = call i32 @function_c848(i32 %v0_bfec, i32 20)
  %v3_bff0 = trunc i32 %v2_bff0 to i16
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_bff8 = load i32, i32* @r5, align 4
  %v4_bff8 = add i32 %v3_bff8, 10
  %v5_bff8 = inttoptr i32 %v4_bff8 to i16*
  store i16 %v3_bff0, i16* %v5_bff8, align 2
  %v0_bffc = load i32, i32* @r6, align 4
  store i32 %v0_bffc, i32* @r1, align 4
  %v0_c000 = load i32, i32* %r3.global-to-local, align 4
  %v1_c000 = trunc i32 %v0_c000 to i16
  %v3_c000 = add i32 %v0_bffc, 16
  %v4_c000 = inttoptr i32 %v3_c000 to i16*
  store i16 %v1_c000, i16* %v4_c000, align 2
  %v0_c004 = load i32, i32* @sl, align 4
  store i32 %v0_c004, i32* %r2.global-to-local, align 4
  %v0_c008 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_c008, i32* %r3.global-to-local, align 4
  %v0_c00c = load i32, i32* @r5, align 4
  store i32 %v0_c00c, i32* %r0.global-to-local, align 4
  %v4_c010 = call i32 @function_c898(i32 %v0_c00c, i32 %v0_bffc, i32 %v0_c004, i32 %v0_c008)
  %v5_c010 = trunc i32 %v4_c010 to i16
  store i32 %v4_c010, i32* %r0.global-to-local, align 4
  %v3_c014 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c014, i32* %r3.global-to-local, align 4
  %v3_c018 = mul i32 %v3_c014, 32
  store i32 %v3_c018, i32* %lr.global-to-local, align 4
  %v3_c01c = load i32, i32* @r6, align 4
  %v4_c01c = add i32 %v3_c01c, 16
  %v5_c01c = inttoptr i32 %v4_c01c to i16*
  store i16 %v5_c010, i16* %v5_c01c, align 2
  %v0_c020 = load i32, i32* %lr.global-to-local, align 4
  %v1_c020 = load i32, i32* %r3.global-to-local, align 4
  %tmp78 = mul i32 %v1_c020, -8
  %v5_c020 = add i32 %v0_c020, %tmp78
  store i32 %v5_c020, i32* %lr.global-to-local, align 4
  %v0_c024 = load i32, i32* @r6, align 4
  %v1_c024 = add i32 %v0_c024, 2
  %v2_c024 = inttoptr i32 %v1_c024 to i16*
  %v3_c024 = load i16, i16* %v2_c024, align 2
  %v1_c028 = load i32, i32* @r8, align 4
  %v2_c028 = add i32 %v1_c028, %v5_c020
  store i32 %v2_c028, i32* @lr, align 4
  %v3_c02c = add i32 %v2_c028, 2
  %v4_c02c = inttoptr i32 %v3_c02c to i16*
  store i16 %v3_c024, i16* %v4_c02c, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_c038 = load i32, i32* @r5, align 4
  store i32 %v0_c038, i32* %r1.global-to-local, align 4
  store i32 %v3_bca4, i32* %r0.global-to-local, align 4
  %v0_c040 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_c040, i32* %r2.global-to-local, align 4
  %v0_c044 = load i32, i32* @lr, align 4
  %v6_c04c = call i32 @function_12af8(i32 %v3_bca4, i32 %v0_c038, i32 %v0_c040, i32 16384, i32 %v0_c044, i32 16)
  %v3_c050 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c050, i32* %r3.global-to-local, align 4
  %v1_c054 = add i32 %v3_c050, 1
  store i32 %v1_c054, i32* %r0.global-to-local, align 4
  %v1_c058 = load i32, i32* @r7, align 4
  %v9_c058 = icmp eq i32 %v1_c054, %v1_c058
  store i1 %v9_c058, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c054, i32* %stack_var_-44, align 4
  %v5_c060 = icmp slt i32 %v1_c054, %v1_c058
  br i1 %v5_c060, label %dec_label_pc_bf60, label %dec_label_pc_c064

dec_label_pc_c064:                                ; preds = %dec_label_pc_bfe0
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c068 = icmp eq i32 %v1_c058, 0
  store i1 %v2_c068, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c068, label %dec_label_pc_bf4c, label %dec_label_pc_bf5c

dec_label_pc_c078:                                ; preds = %dec_label_pc_bf60
  %v1_c078 = add i32 %v2_bf68, 16
  %v2_c078 = inttoptr i32 %v1_c078 to i32*
  %v3_c078 = load i32, i32* %v2_c078, align 4
  %v0_c07c = call i32 @function_df2c()
  store i32 %v0_c07c, i32* %r0.global-to-local, align 4
  %v3_c080 = load i32, i32* %stack_var_-44, align 4
  %v5_c088 = mul i32 %v3_c080, 24
  %v1_c08c = and i32 %v3_c078, 16711680
  store i32 %v1_c08c, i32* %ip.global-to-local, align 4
  %v3_c090 = udiv i32 %v3_c078, 16777216
  %v4_c094 = udiv i32 %v1_c08c, 256
  %v5_c094 = or i32 %v4_c094, %v3_c090
  store i32 %v5_c094, i32* %r2.global-to-local, align 4
  %v1_c098 = load i32, i32* @r8, align 4
  %v2_c098 = add i32 %v1_c098, %v5_c088
  store i32 %v2_c098, i32* %r1.global-to-local, align 4
  %v1_c09c = and i32 %v3_c078, 65280
  store i32 %v1_c09c, i32* %r3.global-to-local, align 4
  %v1_c0a0 = add i32 %v2_c098, 20
  %v2_c0a0 = inttoptr i32 %v1_c0a0 to i8*
  %v3_c0a0 = load i8, i8* %v2_c0a0, align 1
  %v4_c0a0 = zext i8 %v3_c0a0 to i32
  store i32 %v4_c0a0, i32* %ip.global-to-local, align 4
  %v5_c0a8 = call i32 @llvm.bswap.i32(i32 %v3_c078)
  %v7_c0ac = lshr i32 %v0_c07c, %v4_c0a0
  %v8_c0ac = add i32 %v7_c0ac, %v5_c0a8
  store i32 %v8_c0ac, i32* %r2.global-to-local, align 4
  %v1_c0bc = and i32 %v8_c0ac, 65280
  store i32 %v1_c0bc, i32* %r1.global-to-local, align 4
  store i32 %v6_bc90, i32* %r0.global-to-local, align 4
  %v5_c0c8 = call i32 @llvm.bswap.i32(i32 %v8_c0ac)
  store i32 %v5_c0c8, i32* %r3.global-to-local, align 4
  store i1 %v7_bf88, i1* %cpsr_z.global-to-local, align 1
  %v1_c0d0 = load i32, i32* @r5, align 4
  %v2_c0d0 = add i32 %v1_c0d0, 16
  %v3_c0d0 = inttoptr i32 %v2_c0d0 to i32*
  store i32 %v5_c0c8, i32* %v3_c0d0, align 4
  br i1 %v2_bf88, label %dec_label_pc_c0d8, label %dec_label_pc_bf90

dec_label_pc_c0d8:                                ; preds = %dec_label_pc_c078, %dec_label_pc_bf84
  %v0_c0d8 = call i32 @function_df2c()
  store i32 %v0_c0d8, i32* %r0.global-to-local, align 4
  store i32 %v3_bcec, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* @r4, align 4
  store i1 %v9_c0e8, i1* %cpsr_z.global-to-local, align 1
  %v1_c0ec = load i32, i32* @r5, align 4
  %v2_c0ec = add i32 %v1_c0ec, 12
  %v3_c0ec = inttoptr i32 %v2_c0ec to i32*
  store i32 %v0_c0d8, i32* %v3_c0ec, align 4
  br i1 %v9_c0e8, label %dec_label_pc_c0f4, label %dec_label_pc_c0d8.dec_label_pc_bfa4_crit_edge

dec_label_pc_c0d8.dec_label_pc_bfa4_crit_edge:    ; preds = %dec_label_pc_c0d8
  %v1_bfa8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_bfa4

dec_label_pc_c0f4:                                ; preds = %dec_label_pc_c0d8, %dec_label_pc_bf90
  %v0_c0f4 = call i32 @function_df2c()
  %v1_c0f4 = trunc i32 %v0_c0f4 to i16
  store i32 %v0_c0f4, i32* %r0.global-to-local, align 4
  store i32 %v3_bcf0, i32* %r2.global-to-local, align 4
  %v1_c0fc = load i32, i32* @r4, align 4
  %v9_c0fc = icmp eq i32 %v3_bcf0, %v1_c0fc
  store i1 %v9_c0fc, i1* %cpsr_z.global-to-local, align 1
  %v3_c100 = load i32, i32* @r5, align 4
  %v4_c100 = add i32 %v3_c100, 4
  %v5_c100 = inttoptr i32 %v4_c100 to i16*
  store i16 %v1_c0f4, i16* %v5_c100, align 2
  br i1 %v9_c0fc, label %dec_label_pc_c108, label %dec_label_pc_c0f4.dec_label_pc_bfb0_crit_edge

dec_label_pc_c0f4.dec_label_pc_bfb0_crit_edge:    ; preds = %dec_label_pc_c0f4
  %v1_bfb4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_bfb0

dec_label_pc_c108:                                ; preds = %dec_label_pc_c0f4, %dec_label_pc_bfa4
  %v0_c108 = call i32 @function_df2c()
  %v1_c108 = trunc i32 %v0_c108 to i16
  store i32 %v0_c108, i32* %r0.global-to-local, align 4
  store i32 %v3_bcf4, i32* %r3.global-to-local, align 4
  %v1_c110 = load i32, i32* @r4, align 4
  %v9_c110 = icmp eq i32 %v3_bcf4, %v1_c110
  store i1 %v9_c110, i1* %cpsr_z.global-to-local, align 1
  %v3_c114 = load i32, i32* @r5, align 4
  %v4_c114 = add i32 %v3_c114, 20
  %v5_c114 = inttoptr i32 %v4_c114 to i16*
  store i16 %v1_c108, i16* %v5_c114, align 2
  br i1 %v9_c110, label %dec_label_pc_c11c, label %dec_label_pc_c108.dec_label_pc_bfbc_crit_edge

dec_label_pc_c108.dec_label_pc_bfbc_crit_edge:    ; preds = %dec_label_pc_c108
  %v1_bfc0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_bfbc

dec_label_pc_c11c:                                ; preds = %dec_label_pc_c108, %dec_label_pc_bfb0
  %v0_c11c = call i32 @function_df2c()
  %v1_c11c = trunc i32 %v0_c11c to i16
  store i32 %v0_c11c, i32* %r0.global-to-local, align 4
  store i32 %v6_bb90, i32* %ip.global-to-local, align 4
  %v1_c124 = load i32, i32* @r4, align 4
  %v9_c124 = icmp eq i32 %v6_bb90, %v1_c124
  store i1 %v9_c124, i1* %cpsr_z.global-to-local, align 1
  %v3_c128 = load i32, i32* @r6, align 4
  %v4_c128 = add i32 %v3_c128, 2
  %v5_c128 = inttoptr i32 %v4_c128 to i16*
  store i16 %v1_c11c, i16* %v5_c128, align 2
  br i1 %v9_c124, label %dec_label_pc_c130, label %dec_label_pc_c11c.dec_label_pc_bfc8_crit_edge

dec_label_pc_c11c.dec_label_pc_bfc8_crit_edge:    ; preds = %dec_label_pc_c11c
  %v1_bfcc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_bfc8

dec_label_pc_c130:                                ; preds = %dec_label_pc_c11c, %dec_label_pc_bfbc
  %v0_c130 = call i32 @function_df2c()
  %v1_c134 = load i32, i32* @r6, align 4
  %v2_c134 = add i32 %v1_c134, 4
  %v3_c134 = inttoptr i32 %v2_c134 to i32*
  store i32 %v0_c130, i32* %v3_c134, align 4
  store i32 %v7_bbac, i32* %r0.global-to-local, align 4
  %v1_c13c = load i32, i32* @r4, align 4
  %v9_c13c = icmp eq i32 %v7_bbac, %v1_c13c
  store i1 %v9_c13c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c13c, label %dec_label_pc_c144, label %dec_label_pc_bfd4

dec_label_pc_c144:                                ; preds = %dec_label_pc_c130, %dec_label_pc_bfc8
  %v0_c144 = call i32 @function_df2c()
  store i32 %v0_c144, i32* %r0.global-to-local, align 4
  store i32 %v1_bc7c, i32* %r1.global-to-local, align 4
  store i1 %v2_c14c, i1* %cpsr_z.global-to-local, align 1
  %v1_c150 = load i32, i32* @r6, align 4
  %v2_c150 = add i32 %v1_c150, 8
  %v3_c150 = inttoptr i32 %v2_c150 to i32*
  store i32 %v0_c144, i32* %v3_c150, align 4
  br i1 %v2_c14c, label %dec_label_pc_bfe0, label %dec_label_pc_c158

dec_label_pc_c158:                                ; preds = %dec_label_pc_bfd4, %dec_label_pc_c144
  %v0_c158 = load i32, i32* @r5, align 4
  %v1_c158 = add i32 %v0_c158, 40
  store i32 %v1_c158, i32* %r0.global-to-local, align 4
  store i32 %v6_bc54, i32* %r1.global-to-local, align 4
  %v2_c160 = inttoptr i32 %v1_c158 to i16*
  %v3_c160 = call i32 @function_e0c0(i16* %v2_c160, i32 %v6_bc54)
  store i32 %v3_c160, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bfe0

dec_label_pc_c168:                                ; preds = %dec_label_pc_bcb4
  store i32 %v3_bca4, i32* %r0.global-to-local, align 4
  %v1_c16c = call i32 @function_1239c(i32 %v3_bca4)
  store i32 %v1_c16c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c170

dec_label_pc_c170:                                ; preds = %dec_label_pc_baa4, %dec_label_pc_c168
  %v1_c178 = phi i32 [ %v3_bca4, %dec_label_pc_baa4 ], [ %v1_c16c, %dec_label_pc_c168 ]
  store i32 %v18_baa4, i32* %sb.global-to-local, align 4
  store i32 %v24_baa4, i32* %fp.global-to-local, align 4
  store i32 %v27_baa4, i32* %lr.global-to-local, align 4
  ret i32 %v1_c178

dec_label_pc_c17c:                                ; preds = %dec_label_pc_bcdc
  store i32 %v6_bc54, i32* %r0.global-to-local, align 4
  %v1_c184 = add i32 %v6_bc54, 20
  store i32 %v1_c184, i32* %sb.global-to-local, align 4
  %v3_c188 = mul i32 %v6_bc54, 65536
  store i32 %v3_c188, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_bf38

; uselistorder directives
  uselistorder i32 %v0_c11c, { 1, 0 }
  uselistorder i32 %v0_c108, { 1, 0 }
  uselistorder i32 %v0_c0f4, { 1, 0 }
  uselistorder i32 %v5_c0c8, { 1, 0 }
  uselistorder i32 %v3_c078, { 2, 1, 3, 0 }
  uselistorder i32 %v1_c054, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_c020, { 1, 0 }
  uselistorder i32 %v4_c010, { 1, 0 }
  uselistorder i1 %v7_bf88, { 2, 1, 0 }
  uselistorder i1 %v2_c14c, { 2, 3, 1, 0 }
  uselistorder i1 %v9_c0e8, { 2, 3, 1, 0 }
  uselistorder i32 %stack_var_-140.0, { 1, 0 }
  uselistorder i32 %v1_bf1c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_bef0, { 1, 0 }
  uselistorder i32 %v1_bda4, { 1, 2, 0 }
  uselistorder i32 %v1_bda0, { 2, 1, 0 }
  uselistorder i32 %v1_bd9c, { 2, 0, 1 }
  uselistorder i32 %v1_bd98, { 2, 0, 1 }
  uselistorder i32 %v1_bd94, { 2, 0, 1 }
  uselistorder i32 %v1_bd6c, { 1, 0 }
  uselistorder i32 %v3_bd14, { 1, 0 }
  uselistorder i32 %v3_bcec, { 1, 2, 0, 3 }
  uselistorder i32 %v0_bce4, { 1, 0, 2 }
  uselistorder i32 %v0_bce0, { 1, 0, 2 }
  uselistorder i32 %v0_bcdc, { 1, 0, 3, 2 }
  uselistorder i1 %v7_bcd4, { 1, 0 }
  uselistorder i1 %v7_bca8, { 1, 0 }
  uselistorder i32 %v3_bca4, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v6_bc90, { 5, 3, 0, 4, 2, 1 }
  uselistorder i32 %v1_bc7c, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v6_bc54, { 0, 10, 9, 8, 7, 2, 4, 3, 6, 5, 1 }
  uselistorder i32 %v7_bbac, { 3, 2, 1, 0 }
  uselistorder i32 %v6_bb90, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_bb40, { 1, 0 }
  uselistorder i32 %v2_bac0, { 0, 4, 1, 3, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 37, 36, 39, 38, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 6, 4, 7, 5, 8, 9, 10, 12, 11, 14, 13, 15, 17, 16, 18, 19, 20, 22, 21, 27, 23, 24, 25, 26, 31, 28, 29, 30, 32, 34, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0 }
  uselistorder i16 64, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_c170, { 1, 0 }
  uselistorder label %dec_label_pc_c158, { 1, 0 }
  uselistorder label %dec_label_pc_bfe0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_bf5c, { 1, 0 }
  uselistorder label %dec_label_pc_bf4c, { 1, 0, 2 }
  uselistorder label %bb70, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_c19c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_c19c:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_c19c = load i32, i32* @r4, align 4
  %v24_c19c = load i32, i32* @fp, align 4
  %v27_c19c = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_c1b8 = call i32 @function_136e4(i32 %arg1, i32 4)
  %v0_c1bc = load i32, i32* @r5, align 4
  store i32 %v0_c1bc, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_c1b8, i32* @sb, align 4
  %v0_c1cc = load i32, i32* @r4, align 4
  store i32 %v0_c1cc, i32* %r0.global-to-local, align 4
  %v4_c1d0 = inttoptr i32 %v0_c1bc to i32*
  %v5_c1d0 = call i32 @function_8570(i32 %v0_c1cc, i32* %v4_c1d0, i32 2, i32 0)
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_c1e8 = load i32, i32* @r5, align 4
  store i32 %v0_c1e8, i32* %r1.global-to-local, align 4
  %v0_c1ec = load i32, i32* @r4, align 4
  store i32 %v0_c1ec, i32* %r0.global-to-local, align 4
  %v5_c1f0 = trunc i32 %v5_c1d0 to i8
  %v7_c1f4 = inttoptr i32 %v0_c1e8 to i32*
  %v8_c1f4 = call i32 @function_8570(i32 %v0_c1ec, i32* %v7_c1f4, i32 3, i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32))
  %v0_c1f8 = load i32, i32* @r5, align 4
  store i32 %v0_c1f8, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_c208 = load i32, i32* @r4, align 4
  store i32 %v0_c208, i32* %r0.global-to-local, align 4
  %v5_c20c = inttoptr i32 %v0_c1f8 to i32*
  %v6_c20c = call i32 @function_8570(i32 %v0_c208, i32* %v5_c20c, i32 4, i32 64)
  %v1_c214 = urem i32 %v6_c20c, 256
  %v0_c218 = load i32, i32* @r5, align 4
  store i32 %v0_c218, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c224 = load i32, i32* @r4, align 4
  store i32 %v0_c224, i32* %r0.global-to-local, align 4
  %v6_c22c = inttoptr i32 %v0_c218 to i32*
  %v7_c22c = call i32 @function_8570(i32 %v0_c224, i32* %v6_c22c, i32 5, i32 1)
  %v1_c238 = urem i32 %v7_c22c, 256
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_c244 = load i32, i32* @r5, align 4
  store i32 %v0_c244, i32* %r1.global-to-local, align 4
  %v0_c248 = load i32, i32* @r4, align 4
  store i32 %v0_c248, i32* %r0.global-to-local, align 4
  %v6_c250 = inttoptr i32 %v0_c244 to i32*
  %v7_c250 = call i32 @function_8570(i32 %v0_c248, i32* %v6_c250, i32 6, i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32))
  %v0_c258 = load i32, i32* @r5, align 4
  store i32 %v0_c258, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v7_c250, i32* %fp.global-to-local, align 4
  %v0_c268 = load i32, i32* @r4, align 4
  store i32 %v0_c268, i32* %r0.global-to-local, align 4
  %v5_c26c = inttoptr i32 %v0_c258 to i32*
  %v6_c26c = call i32 @function_8570(i32 %v0_c268, i32* %v5_c26c, i32 7, i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32))
  %v0_c274 = load i32, i32* @r5, align 4
  store i32 %v0_c274, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 %v6_c26c, i32* @r6, align 4
  %v0_c284 = load i32, i32* @r4, align 4
  store i32 %v0_c284, i32* %r0.global-to-local, align 4
  %v5_c288 = inttoptr i32 %v0_c274 to i32*
  %v6_c288 = call i32 @function_8570(i32 %v0_c284, i32* %v5_c288, i32 17, i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32))
  %v0_c28c = load i32, i32* @r5, align 4
  store i32 %v0_c28c, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c29c = load i32, i32* @r4, align 4
  store i32 %v0_c29c, i32* %r0.global-to-local, align 4
  %v5_c2a0 = inttoptr i32 %v0_c28c to i32*
  %v6_c2a0 = call i32 @function_8570(i32 %v0_c29c, i32* %v5_c2a0, i32 18, i32 0)
  %v0_c2a4 = load i32, i32* @r5, align 4
  store i32 %v0_c2a4, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c2b4 = load i32, i32* @r4, align 4
  store i32 %v0_c2b4, i32* %r0.global-to-local, align 4
  %v5_c2b8 = inttoptr i32 %v0_c2a4 to i32*
  %v6_c2b8 = call i32 @function_8570(i32 %v0_c2b4, i32* %v5_c2b8, i32 11, i32 0)
  %v0_c2bc = load i32, i32* @r5, align 4
  store i32 %v0_c2bc, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c2cc = load i32, i32* @r4, align 4
  store i32 %v0_c2cc, i32* %r0.global-to-local, align 4
  %v5_c2d0 = inttoptr i32 %v0_c2bc to i32*
  %v6_c2d0 = call i32 @function_8570(i32 %v0_c2cc, i32* %v5_c2d0, i32 12, i32 0)
  %v0_c2d4 = load i32, i32* @r5, align 4
  store i32 %v0_c2d4, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c2e4 = load i32, i32* @r4, align 4
  store i32 %v0_c2e4, i32* %r0.global-to-local, align 4
  %v5_c2e8 = inttoptr i32 %v0_c2d4 to i32*
  %v6_c2e8 = call i32 @function_8570(i32 %v0_c2e4, i32* %v5_c2e8, i32 13, i32 0)
  %v0_c2ec = load i32, i32* @r5, align 4
  store i32 %v0_c2ec, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c2fc = load i32, i32* @r4, align 4
  store i32 %v0_c2fc, i32* %r0.global-to-local, align 4
  %v5_c300 = inttoptr i32 %v0_c2ec to i32*
  %v6_c300 = call i32 @function_8570(i32 %v0_c2fc, i32* %v5_c300, i32 14, i32 0)
  %v0_c304 = load i32, i32* @r5, align 4
  store i32 %v0_c304, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c314 = load i32, i32* @r4, align 4
  store i32 %v0_c314, i32* %r0.global-to-local, align 4
  %v5_c318 = inttoptr i32 %v0_c304 to i32*
  %v6_c318 = call i32 @function_8570(i32 %v0_c314, i32* %v5_c318, i32 15, i32 1)
  %v0_c31c = load i32, i32* @r5, align 4
  store i32 %v0_c31c, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c32c = load i32, i32* @r4, align 4
  store i32 %v0_c32c, i32* %r0.global-to-local, align 4
  %v5_c330 = inttoptr i32 %v0_c31c to i32*
  %v6_c330 = call i32 @function_8570(i32 %v0_c32c, i32* %v5_c330, i32 16, i32 0)
  %v2_c33c = load i32, i32* @global_var_1a2d4.47, align 4
  store i32 %v2_c33c, i32* %r3.global-to-local, align 4
  %v0_c340 = load i32, i32* @r5, align 4
  store i32 %v0_c340, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_c348 = load i32, i32* @r4, align 4
  store i32 %v0_c348, i32* %r0.global-to-local, align 4
  %v5_c34c = inttoptr i32 %v0_c340 to i32*
  %v6_c34c = call i32 @function_8504(i32 %v0_c348, i32* %v5_c34c, i32 25, i32 %v2_c33c, i32 %v6_c330)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_c360 = call i32 @function_12b7c(i32 2, i32 3, i32 6)
  store i32 %v3_c360, i32* %r0.global-to-local, align 4
  %v7_c364 = icmp eq i32 %v3_c360, -1
  store i1 %v7_c364, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_c360, i32* @sl, align 4
  br i1 %v7_c364, label %dec_label_pc_c838, label %dec_label_pc_c370

dec_label_pc_c370:                                ; preds = %dec_label_pc_c19c
  store i32 1, i32* %stack_var_-44, align 4
  %v6_c378 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_c378, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_c38c = call i32 @function_12b38(i32 %v3_c360, i32 0, i32 3, i32 %v6_c378, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_c38c, i32* %r0.global-to-local, align 4
  %v7_c390 = icmp eq i32 %v5_c38c, -1
  store i1 %v7_c390, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c390, label %dec_label_pc_c830, label %dec_label_pc_c398

dec_label_pc_c398:                                ; preds = %dec_label_pc_c370
  %v3_c3a0 = mul i32 %v8_c1f4, 65536
  store i32 %v3_c3a0, i32* %r0.global-to-local, align 4
  %v0_c3a4 = load i32, i32* %fp.global-to-local, align 4
  %v3_c3a4 = mul i32 %v0_c3a4, 65536
  store i32 %v3_c3a4, i32* %r4.global-to-local, align 4
  %v0_c3a8 = load i32, i32* @r6, align 4
  store i32 0, i32* %stack_var_-44, align 4
  store i32 %v6_c2b8, i32* %r2.global-to-local, align 4
  %v3_c3b4 = urem i32 %v8_c1f4, 65536
  store i32 %v3_c3b4, i32* %r3.global-to-local, align 4
  %v3_c3b8 = urem i32 %v0_c3a4, 65536
  %v3_c3bc = urem i32 %v0_c3a8, 65536
  store i32 %v3_c3bc, i32* %r1.global-to-local, align 4
  %v0_c3c0 = load i32, i32* @r7, align 4
  %v2_c3c0 = icmp eq i32 %v0_c3c0, 0
  store i1 %v2_c3c0, i1* %cpsr_z.global-to-local, align 1
  %v1_c3d0 = urem i32 %v6_c2b8, 256
  store i32 %v1_c3d0, i32* @fp, align 4
  br i1 %v2_c3c0, label %dec_label_pc_c624.preheader, label %dec_label_pc_c3d8

dec_label_pc_c3d8:                                ; preds = %dec_label_pc_c398
  %tmp52 = mul i32 %v6_c288, 256
  %v3_c3f0 = and i32 %tmp52, 65280
  %tmp53 = udiv i32 %v8_c1f4, 256
  %v3_c3f4 = urem i32 %tmp53, 256
  %tmp54 = udiv i32 %v6_c288, 256
  %v4_c3fc = urem i32 %tmp54, 256
  %v5_c3fc = or i32 %v4_c3fc, %v3_c3f0
  store i32 %v5_c3fc, i32* @lr, align 4
  %v1_c3f8 = mul i32 %v8_c1f4, 256
  %v4_c400 = and i32 %v1_c3f8, 65280
  %v5_c400 = or i32 %v4_c400, %v3_c3f4
  %tmp55 = mul i32 %v0_c3a4, 256
  %v3_c40c = and i32 %tmp55, 65280
  %tmp56 = mul i32 %v0_c3a8, 256
  %v3_c410 = and i32 %tmp56, 65280
  %v1_c414 = urem i32 %v6_c2b8, 2
  %v1_c418 = urem i32 %v6_c2d0, 2
  %tmp57 = udiv i32 %v0_c3a4, 256
  %v4_c41c = urem i32 %tmp57, 256
  %v5_c41c = or i32 %v4_c41c, %v3_c40c
  store i32 %v5_c41c, i32* @r6, align 4
  %tmp58 = udiv i32 %v0_c3a8, 256
  %v4_c420 = urem i32 %tmp58, 256
  %v5_c420 = or i32 %v4_c420, %v3_c410
  store i32 %v5_c420, i32* @r5, align 4
  %v1_c43c = urem i32 %v6_c2e8, 2
  store i32 %v1_c43c, i32* %r2.global-to-local, align 4
  %v1_c440 = urem i32 %v6_c300, 2
  store i32 %v1_c440, i32* %r3.global-to-local, align 4
  %v1_c444 = urem i32 %v6_c318, 2
  store i32 %v1_c444, i32* %r0.global-to-local, align 4
  %v1_c448 = urem i32 %v6_c330, 2
  store i32 %v1_c448, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %sext4 = mul nuw i32 %v5_c400, 65536
  %v4_c4d0 = sdiv i32 %sext4, 65536
  %tmp = sub nsw i32 0, %v1_c418
  %v4_c534 = and i32 %tmp, 16
  %tmp62 = sub nsw i32 0, %v1_c43c
  %v4_c548 = and i32 %tmp62, 8
  %tmp63 = sub nsw i32 0, %v1_c440
  %v4_c560 = and i32 %tmp63, 4
  %tmp64 = sub nsw i32 0, %v1_c444
  %v3_c574 = and i32 %tmp64, 2
  %v1_c4c4 = trunc i32 %v6_c20c to i8
  br label %dec_label_pc_c468

dec_label_pc_c468:                                ; preds = %bb61, %dec_label_pc_c3d8
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 128, i32* %r0.global-to-local, align 4
  %v2_c470 = call i32 @function_136e4(i32 128, i32 1)
  store i32 %v2_c470, i32* %r0.global-to-local, align 4
  %v3_c474 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c474, i32* %r2.global-to-local, align 4
  %v1_c478 = load i32, i32* @sb, align 4
  %v2_c478 = load i32, i32* @r4, align 4
  %v5_c478 = mul i32 %v2_c478, 4
  %v6_c478 = add i32 %v5_c478, %v1_c478
  %v7_c478 = inttoptr i32 %v6_c478 to i32*
  store i32 %v2_c470, i32* %v7_c478, align 4
  %v0_c47c = load i32, i32* %r2.global-to-local, align 4
  %v3_c47c = mul i32 %v0_c47c, 32
  store i32 %v3_c47c, i32* %r3.global-to-local, align 4
  %v0_c480 = load i32, i32* @sb, align 4
  %v4_c480 = mul i32 %v0_c47c, 4
  %v5_c480 = add i32 %v0_c480, %v4_c480
  %v6_c480 = inttoptr i32 %v5_c480 to i32*
  %v7_c480 = load i32, i32* %v6_c480, align 4
  store i32 %v7_c480, i32* %r4.global-to-local, align 4
  %v5_c484 = mul i32 %v0_c47c, 24
  store i32 %v5_c484, i32* %r3.global-to-local, align 4
  %v1_c488 = load i32, i32* @r8, align 4
  %v2_c488 = add i32 %v1_c488, %v5_c484
  store i32 %v2_c488, i32* %r0.global-to-local, align 4
  %v1_c48c = inttoptr i32 %v7_c480 to i8*
  %v2_c48c = load i8, i8* %v1_c48c, align 1
  %tmp65 = urem i8 %v2_c48c, 16
  %v1_c490 = zext i8 %tmp65 to i32
  %v1_c494 = or i32 %v1_c490, 64
  store i32 %v1_c494, i32* %r3.global-to-local, align 4
  %v1_c498 = trunc i32 %v1_c494 to i8
  store i8 %v1_c498, i8* %v1_c48c, align 1
  %v0_c49c = load i32, i32* %r4.global-to-local, align 4
  %v1_c49c = inttoptr i32 %v0_c49c to i8*
  %v2_c49c = load i8, i8* %v1_c49c, align 1
  %v1_c4a0 = and i8 %v2_c49c, -16
  %v1_c4a4 = or i8 %v1_c4a0, 5
  store i32 %v1_c238, i32* %r3.global-to-local, align 4
  store i8 %v1_c4a4, i8* %v1_c49c, align 1
  %v2_c4b4 = load i32, i32* %r4.global-to-local, align 4
  %v3_c4b4 = add i32 %v2_c4b4, 1
  %v4_c4b4 = inttoptr i32 %v3_c4b4 to i8*
  store i8 %v5_c1f0, i8* %v4_c4b4, align 1
  store i32 %v1_c214, i32* %r2.global-to-local, align 4
  %v0_c4bc = load i32, i32* %r3.global-to-local, align 4
  %v2_c4bc = icmp eq i32 %v0_c4bc, 0
  store i1 %v2_c4bc, i1* %cpsr_z.global-to-local, align 1
  store i32 15360, i32* %r3.global-to-local, align 4
  %v2_c4c4 = load i32, i32* %r4.global-to-local, align 4
  %v3_c4c4 = add i32 %v2_c4c4, 8
  %v4_c4c4 = inttoptr i32 %v3_c4c4 to i8*
  store i8 %v1_c4c4, i8* %v4_c4c4, align 1
  %v0_c4c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_c4c8 = trunc i32 %v0_c4c8 to i16
  %v2_c4c8 = load i32, i32* %r4.global-to-local, align 4
  %v3_c4c8 = add i32 %v2_c4c8, 2
  %v4_c4c8 = inttoptr i32 %v3_c4c8 to i16*
  store i16 %v1_c4c8, i16* %v4_c4c8, align 2
  store i32 6, i32* %r3.global-to-local, align 4
  store i32 %v4_c4d0, i32* %r1.global-to-local, align 4
  %v0_c4d4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c4d4, label %bb59, label %bb

bb:                                               ; preds = %dec_label_pc_c468
  store i32 64, i32* %r2.global-to-local, align 4
  br label %bb59

bb59:                                             ; preds = %dec_label_pc_c468, %bb
  %v2_c4d8 = load i32, i32* %r4.global-to-local, align 4
  %v3_c4d8 = add i32 %v2_c4d8, 9
  %v4_c4d8 = inttoptr i32 %v3_c4d8 to i8*
  store i8 6, i8* %v4_c4d8, align 1
  %v0_c4dc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c4dc, label %bb61, label %bb60

bb60:                                             ; preds = %bb59
  %v1_c4dc = load i32, i32* %r2.global-to-local, align 4
  %v2_c4dc = trunc i32 %v1_c4dc to i16
  %v3_c4dc = load i32, i32* %r4.global-to-local, align 4
  %v4_c4dc = add i32 %v3_c4dc, 6
  %v5_c4dc = inttoptr i32 %v4_c4dc to i16*
  store i16 %v2_c4dc, i16* %v5_c4dc, align 2
  br label %bb61

bb61:                                             ; preds = %bb59, %bb60
  store i32 %v6_c34c, i32* %r2.global-to-local, align 4
  %v1_c4e4 = load i32, i32* %r4.global-to-local, align 4
  %v2_c4e4 = add i32 %v1_c4e4, 12
  %v3_c4e4 = inttoptr i32 %v2_c4e4 to i32*
  store i32 %v6_c34c, i32* %v3_c4e4, align 4
  %v0_c4e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_c4e8 = add i32 %v0_c4e8, 16
  %v2_c4e8 = inttoptr i32 %v1_c4e8 to i32*
  %v3_c4e8 = load i32, i32* %v2_c4e8, align 4
  store i32 %v3_c4e8, i32* %r3.global-to-local, align 4
  %v0_c4ec = load i32, i32* %r1.global-to-local, align 4
  %v1_c4ec = trunc i32 %v0_c4ec to i16
  %v2_c4ec = load i32, i32* %r4.global-to-local, align 4
  %v3_c4ec = add i32 %v2_c4ec, 4
  %v4_c4ec = inttoptr i32 %v3_c4ec to i16*
  store i16 %v1_c4ec, i16* %v4_c4ec, align 2
  %v0_c4f0 = load i32, i32* %r3.global-to-local, align 4
  %v1_c4f0 = load i32, i32* %r4.global-to-local, align 4
  %v2_c4f0 = add i32 %v1_c4f0, 16
  %v3_c4f0 = inttoptr i32 %v2_c4f0 to i32*
  store i32 %v0_c4f0, i32* %v3_c4f0, align 4
  %v0_c4f4 = load i32, i32* @r6, align 4
  %v1_c4f4 = trunc i32 %v0_c4f4 to i16
  %v2_c4f4 = load i32, i32* %r4.global-to-local, align 4
  %v3_c4f4 = add i32 %v2_c4f4, 20
  %v4_c4f4 = inttoptr i32 %v3_c4f4 to i16*
  store i16 %v1_c4f4, i16* %v4_c4f4, align 2
  %v0_c4f8 = load i32, i32* %r4.global-to-local, align 4
  %v1_c4f8 = add i32 %v0_c4f8, 20
  store i32 %v1_c4f8, i32* %r1.global-to-local, align 4
  %v1_c4fc = add i32 %v0_c4f8, 32
  %v2_c4fc = inttoptr i32 %v1_c4fc to i8*
  %v3_c4fc = load i8, i8* %v2_c4fc, align 1
  %v4_c4fc = zext i8 %v3_c4fc to i32
  store i32 %v4_c4fc, i32* %r3.global-to-local, align 4
  %v1_c500 = add i32 %v0_c4f8, 33
  %v2_c500 = inttoptr i32 %v1_c500 to i8*
  %v3_c500 = load i8, i8* %v2_c500, align 1
  %v4_c500 = zext i8 %v3_c500 to i32
  store i32 %v1_c414, i32* %r0.global-to-local, align 4
  %v1_c508 = urem i8 %v3_c4fc, 16
  %v1_c50c = or i8 %v1_c508, -96
  %v1_c510 = and i32 %v4_c500, 223
  store i32 %v1_c510, i32* %r2.global-to-local, align 4
  store i8 %v1_c50c, i8* %v2_c4fc, align 1
  %v0_c518 = load i32, i32* %r2.global-to-local, align 4
  %v1_c518 = load i32, i32* %r0.global-to-local, align 4
  %v4_c518 = mul i32 %v1_c518, 32
  %v5_c518 = or i32 %v4_c518, %v0_c518
  store i32 %v5_c518, i32* %r2.global-to-local, align 4
  store i32 %v5_c3fc, i32* %r3.global-to-local, align 4
  %v1_c520 = trunc i32 %v5_c518 to i8
  %v2_c520 = load i32, i32* %r1.global-to-local, align 4
  %v3_c520 = add i32 %v2_c520, 13
  %v4_c520 = inttoptr i32 %v3_c520 to i8*
  store i8 %v1_c520, i8* %v4_c520, align 1
  %v0_c524 = load i32, i32* %r3.global-to-local, align 4
  %v1_c524 = load i32, i32* %r1.global-to-local, align 4
  %v2_c524 = add i32 %v1_c524, 4
  %v3_c524 = inttoptr i32 %v2_c524 to i32*
  store i32 %v0_c524, i32* %v3_c524, align 4
  %v0_c528 = load i32, i32* %r1.global-to-local, align 4
  %v1_c528 = add i32 %v0_c528, 13
  %v2_c528 = inttoptr i32 %v1_c528 to i8*
  %v3_c528 = load i8, i8* %v2_c528, align 1
  %v4_c528 = zext i8 %v3_c528 to i32
  store i32 %v1_c418, i32* %r0.global-to-local, align 4
  %v1_c530 = and i32 %v4_c528, 239
  %v5_c534 = or i32 %v1_c530, %v4_c534
  store i32 %v5_c534, i32* %r3.global-to-local, align 4
  %v1_c538 = trunc i32 %v5_c534 to i8
  store i8 %v1_c538, i8* %v2_c528, align 1
  %v0_c53c = load i32, i32* %r1.global-to-local, align 4
  %v1_c53c = add i32 %v0_c53c, 13
  %v2_c53c = inttoptr i32 %v1_c53c to i8*
  %v3_c53c = load i8, i8* %v2_c53c, align 1
  %v4_c53c = zext i8 %v3_c53c to i32
  store i32 %v1_c43c, i32* %r3.global-to-local, align 4
  %v1_c544 = and i32 %v4_c53c, 247
  %v5_c548 = or i32 %v1_c544, %v4_c548
  store i32 %v5_c548, i32* %r2.global-to-local, align 4
  %v0_c54c = load i32, i32* @r5, align 4
  %v1_c54c = trunc i32 %v0_c54c to i16
  %v3_c54c = add i32 %v0_c53c, 2
  %v4_c54c = inttoptr i32 %v3_c54c to i16*
  store i16 %v1_c54c, i16* %v4_c54c, align 2
  %v0_c550 = load i32, i32* %r2.global-to-local, align 4
  %v1_c550 = trunc i32 %v0_c550 to i8
  %v2_c550 = load i32, i32* %r1.global-to-local, align 4
  %v3_c550 = add i32 %v2_c550, 13
  %v4_c550 = inttoptr i32 %v3_c550 to i8*
  store i8 %v1_c550, i8* %v4_c550, align 1
  %v0_c554 = load i32, i32* %r1.global-to-local, align 4
  %v1_c554 = add i32 %v0_c554, 13
  %v2_c554 = inttoptr i32 %v1_c554 to i8*
  %v3_c554 = load i8, i8* %v2_c554, align 1
  %v4_c554 = zext i8 %v3_c554 to i32
  store i32 %v1_c440, i32* %r0.global-to-local, align 4
  %v1_c55c = and i32 %v4_c554, 251
  %v5_c560 = or i32 %v1_c55c, %v4_c560
  store i32 %v5_c560, i32* %r3.global-to-local, align 4
  %v1_c564 = trunc i32 %v5_c560 to i8
  store i8 %v1_c564, i8* %v2_c554, align 1
  %v0_c568 = load i32, i32* %r1.global-to-local, align 4
  %v1_c568 = add i32 %v0_c568, 13
  %v2_c568 = inttoptr i32 %v1_c568 to i8*
  %v3_c568 = load i8, i8* %v2_c568, align 1
  %v4_c568 = zext i8 %v3_c568 to i32
  store i32 %v1_c444, i32* %r3.global-to-local, align 4
  %v1_c570 = and i32 %v4_c568, 253
  %v4_c574 = or i32 %v1_c570, %v3_c574
  store i32 %v4_c574, i32* %r2.global-to-local, align 4
  %v1_c578 = trunc i32 %v4_c574 to i8
  store i8 %v1_c578, i8* %v2_c568, align 1
  %v0_c57c = load i32, i32* %r1.global-to-local, align 4
  %v1_c57c = add i32 %v0_c57c, 13
  %v2_c57c = inttoptr i32 %v1_c57c to i8*
  %v3_c57c = load i8, i8* %v2_c57c, align 1
  %v4_c57c = zext i8 %v3_c57c to i32
  store i32 %v1_c448, i32* %r0.global-to-local, align 4
  %v1_c584 = and i32 %v4_c57c, 254
  %v2_c588 = or i32 %v1_c584, %v1_c448
  store i32 %v2_c588, i32* %r3.global-to-local, align 4
  %v1_c58c = trunc i32 %v2_c588 to i8
  store i8 %v1_c58c, i8* %v2_c57c, align 1
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v2_c598 = load i32, i32* %r4.global-to-local, align 4
  %v3_c598 = add i32 %v2_c598, 40
  %v4_c598 = inttoptr i32 %v3_c598 to i8*
  store i8 2, i8* %v4_c598, align 1
  %v0_c59c = load i32, i32* %r2.global-to-local, align 4
  %v1_c59c = trunc i32 %v0_c59c to i8
  %v2_c59c = load i32, i32* %r4.global-to-local, align 4
  %v3_c59c = add i32 %v2_c59c, 41
  %v4_c59c = inttoptr i32 %v3_c59c to i8*
  store i8 %v1_c59c, i8* %v4_c59c, align 1
  %v0_c5a0 = call i32 @function_df2c()
  %v1_c5a4 = urem i32 %v0_c5a0, 16
  %v1_c5a8 = or i32 %v1_c5a4, 1392
  %tmp66 = mul nuw nsw i32 %v1_c5a8, 256
  %v3_c5b4 = add nuw nsw i32 %tmp66, 2048
  %v5_c5bc = or i32 %v3_c5b4, 5
  %v1_c5c0 = trunc i32 %v5_c5bc to i16
  %v2_c5c0 = load i32, i32* %r4.global-to-local, align 4
  %v3_c5c0 = add i32 %v2_c5c0, 42
  %v4_c5c0 = inttoptr i32 %v3_c5c0 to i16*
  store i16 %v1_c5c0, i16* %v4_c5c0, align 2
  %v2_c5c8 = load i32, i32* %r4.global-to-local, align 4
  %v3_c5c8 = add i32 %v2_c5c8, 44
  %v4_c5c8 = inttoptr i32 %v3_c5c8 to i8*
  store i8 4, i8* %v4_c5c8, align 1
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_c5d8 = load i32, i32* %r4.global-to-local, align 4
  %v3_c5d8 = add i32 %v2_c5d8, 46
  %v4_c5d8 = inttoptr i32 %v3_c5d8 to i8*
  store i8 8, i8* %v4_c5d8, align 1
  %v0_c5dc = load i32, i32* %r2.global-to-local, align 4
  %v1_c5dc = trunc i32 %v0_c5dc to i8
  %v2_c5dc = load i32, i32* %r4.global-to-local, align 4
  %v3_c5dc = add i32 %v2_c5dc, 47
  %v4_c5dc = inttoptr i32 %v3_c5dc to i8*
  store i8 %v1_c5dc, i8* %v4_c5dc, align 1
  %v0_c5e0 = load i32, i32* %r0.global-to-local, align 4
  %v1_c5e0 = trunc i32 %v0_c5e0 to i8
  %v2_c5e0 = load i32, i32* %r4.global-to-local, align 4
  %v3_c5e0 = add i32 %v2_c5e0, 45
  %v4_c5e0 = inttoptr i32 %v3_c5e0 to i8*
  store i8 %v1_c5e0, i8* %v4_c5e0, align 1
  %v0_c5e4 = call i32 @function_df2c()
  store i32 %v0_c5e4, i32* %r0.global-to-local, align 4
  %v2_c5ec = load i32, i32* %r4.global-to-local, align 4
  %v3_c5ec = add i32 %v2_c5ec, 59
  %v4_c5ec = inttoptr i32 %v3_c5ec to i8*
  store i8 6, i8* %v4_c5ec, align 1
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v1_c5fc = load i32, i32* %r4.global-to-local, align 4
  %v2_c5fc = add i32 %v1_c5fc, 48
  %v3_c5fc = inttoptr i32 %v2_c5fc to i32*
  store i32 %v0_c5e4, i32* %v3_c5fc, align 4
  %v0_c600 = load i32, i32* %r3.global-to-local, align 4
  %v1_c600 = load i32, i32* %r4.global-to-local, align 4
  %v2_c600 = add i32 %v1_c600, 52
  %v3_c600 = inttoptr i32 %v2_c600 to i32*
  store i32 %v0_c600, i32* %v3_c600, align 4
  %v0_c604 = load i32, i32* %r2.global-to-local, align 4
  %v1_c604 = trunc i32 %v0_c604 to i8
  %v2_c604 = load i32, i32* %r4.global-to-local, align 4
  %v3_c604 = add i32 %v2_c604, 56
  %v4_c604 = inttoptr i32 %v3_c604 to i8*
  store i8 %v1_c604, i8* %v4_c604, align 1
  %v0_c608 = load i32, i32* %r1.global-to-local, align 4
  %v1_c608 = trunc i32 %v0_c608 to i8
  %v2_c608 = load i32, i32* %r4.global-to-local, align 4
  %v3_c608 = add i32 %v2_c608, 58
  %v4_c608 = inttoptr i32 %v3_c608 to i8*
  store i8 %v1_c608, i8* %v4_c608, align 1
  %v0_c60c = load i32, i32* %r1.global-to-local, align 4
  %v1_c60c = trunc i32 %v0_c60c to i8
  %v2_c60c = load i32, i32* %r4.global-to-local, align 4
  %v3_c60c = add i32 %v2_c60c, 57
  %v4_c60c = inttoptr i32 %v3_c60c to i8*
  store i8 %v1_c60c, i8* %v4_c60c, align 1
  %v3_c610 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c610, i32* %r3.global-to-local, align 4
  %v1_c614 = load i32, i32* %r2.global-to-local, align 4
  %v2_c614 = add i32 %v1_c614, %v3_c610
  store i32 %v2_c614, i32* @r4, align 4
  %v1_c618 = load i32, i32* @r7, align 4
  %v9_c618 = icmp eq i32 %v2_c614, %v1_c618
  store i1 %v9_c618, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_c614, i32* %stack_var_-44, align 4
  %v5_c620 = icmp slt i32 %v2_c614, %v1_c618
  br i1 %v5_c620, label %dec_label_pc_c468, label %dec_label_pc_c624.preheader

dec_label_pc_c624.preheader:                      ; preds = %bb61, %dec_label_pc_c398
  %v0_c6286 = phi i32 [ 0, %dec_label_pc_c398 ], [ %v1_c618, %bb61 ]
  %v3_c7a0 = icmp eq i32 %v6_c34c, -1
  %v8_c7a0 = icmp eq i32 %v6_c34c, -1
  %v9_c7bc = icmp eq i32 %v3_c3b4, ptrtoint ([3 x i8]* @global_var_ffff.45 to i32)
  %v9_c67c = icmp eq i32 %v3_c3b8, ptrtoint ([3 x i8]* @global_var_ffff.45 to i32)
  br label %dec_label_pc_c624

dec_label_pc_c624:                                ; preds = %dec_label_pc_c624, %dec_label_pc_c734, %dec_label_pc_c624.preheader
  %v0_c628 = phi i32 [ %v0_c6286, %dec_label_pc_c624.preheader ], [ 0, %dec_label_pc_c734 ], [ 0, %dec_label_pc_c624 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c628 = icmp eq i32 %v0_c628, 0
  store i1 %v2_c628, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c628, label %dec_label_pc_c624, label %dec_label_pc_c634

dec_label_pc_c634:                                ; preds = %dec_label_pc_c624, %dec_label_pc_c734
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c638

dec_label_pc_c638:                                ; preds = %dec_label_pc_c6b0, %dec_label_pc_c634
  %v1_c648 = phi i32 [ %v1_c724, %dec_label_pc_c6b0 ], [ 0, %dec_label_pc_c634 ]
  %v5_c63c = mul i32 %v1_c648, 24
  %v1_c640 = load i32, i32* @r8, align 4
  %v2_c640 = add i32 %v1_c640, %v5_c63c
  store i32 %v2_c640, i32* %r3.global-to-local, align 4
  %v1_c644 = add i32 %v2_c640, 20
  %v2_c644 = inttoptr i32 %v1_c644 to i8*
  %v3_c644 = load i8, i8* %v2_c644, align 1
  %v4_c644 = zext i8 %v3_c644 to i32
  store i32 %v4_c644, i32* %r2.global-to-local, align 4
  %v0_c648 = load i32, i32* @sb, align 4
  %v4_c648 = mul i32 %v1_c648, 4
  %v5_c648 = add i32 %v0_c648, %v4_c648
  %v6_c648 = inttoptr i32 %v5_c648 to i32*
  %v7_c648 = load i32, i32* %v6_c648, align 4
  store i32 %v7_c648, i32* @r5, align 4
  %v7_c64c = icmp eq i8 %v3_c644, 31
  store i1 %v7_c64c, i1* %cpsr_z.global-to-local, align 1
  %v1_c650 = add i32 %v7_c648, 20
  store i32 %v1_c650, i32* @r6, align 4
  %tmp67 = icmp ult i8 %v3_c644, 32
  br i1 %tmp67, label %dec_label_pc_c748, label %dec_label_pc_c658

dec_label_pc_c658:                                ; preds = %dec_label_pc_c638
  store i32 %v6_c34c, i32* %r3.global-to-local, align 4
  store i1 %v8_c7a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_c7a0, label %dec_label_pc_c7a8, label %dec_label_pc_c664

dec_label_pc_c664:                                ; preds = %dec_label_pc_c748, %dec_label_pc_c658
  store i32 %v3_c3b4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* @r4, align 4
  store i1 %v9_c7bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c7bc, label %dec_label_pc_c7c4, label %dec_label_pc_c678

dec_label_pc_c678:                                ; preds = %dec_label_pc_c7a8, %dec_label_pc_c664
  store i32 %v3_c3b8, i32* %r1.global-to-local, align 4
  store i1 %v9_c67c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c67c, label %dec_label_pc_c7d8, label %dec_label_pc_c684

dec_label_pc_c684:                                ; preds = %dec_label_pc_c7c4.dec_label_pc_c684_crit_edge, %dec_label_pc_c678
  %v1_c688 = phi i32 [ %v1_c688.pre, %dec_label_pc_c7c4.dec_label_pc_c684_crit_edge ], [ ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), %dec_label_pc_c678 ]
  store i32 %v3_c3bc, i32* %r2.global-to-local, align 4
  %v9_c688 = icmp eq i32 %v3_c3bc, %v1_c688
  store i1 %v9_c688, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c688, label %dec_label_pc_c7ec, label %dec_label_pc_c690

dec_label_pc_c690:                                ; preds = %dec_label_pc_c7d8.dec_label_pc_c690_crit_edge, %dec_label_pc_c684
  %v1_c694 = phi i32 [ %v1_c694.pre, %dec_label_pc_c7d8.dec_label_pc_c690_crit_edge ], [ %v1_c688, %dec_label_pc_c684 ]
  store i32 %v6_c288, i32* %r3.global-to-local, align 4
  %v9_c694 = icmp eq i32 %v6_c288, %v1_c694
  store i1 %v9_c694, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c694, label %dec_label_pc_c800, label %dec_label_pc_c69c

dec_label_pc_c69c:                                ; preds = %dec_label_pc_c7ec.dec_label_pc_c69c_crit_edge, %dec_label_pc_c690
  %v1_c6a0 = phi i32 [ %v1_c6a0.pre, %dec_label_pc_c7ec.dec_label_pc_c69c_crit_edge ], [ %v1_c694, %dec_label_pc_c690 ]
  store i32 %v6_c2a0, i32* %r0.global-to-local, align 4
  %v9_c6a0 = icmp eq i32 %v6_c2a0, %v1_c6a0
  store i1 %v9_c6a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c6a0, label %dec_label_pc_c814, label %dec_label_pc_c6a8

dec_label_pc_c6a8:                                ; preds = %dec_label_pc_c800, %dec_label_pc_c69c
  %v0_c6a8 = load i32, i32* @fp, align 4
  %v2_c6a8 = icmp eq i32 %v0_c6a8, 0
  store i1 %v2_c6a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c6a8, label %dec_label_pc_c6b0, label %dec_label_pc_c824

dec_label_pc_c6b0:                                ; preds = %dec_label_pc_c6a8, %dec_label_pc_c814, %dec_label_pc_c824
  %v2_c6b4 = load i32, i32* @r5, align 4
  %v3_c6b4 = add i32 %v2_c6b4, 10
  %v4_c6b4 = inttoptr i32 %v3_c6b4 to i16*
  store i16 0, i16* %v4_c6b4, align 2
  %v0_c6b8 = load i32, i32* @r5, align 4
  store i32 %v0_c6b8, i32* @r0, align 4
  store i32 20, i32* %r1.global-to-local, align 4
  %v2_c6c0 = call i32 @function_c848(i32 %v0_c6b8, i32 20)
  %v3_c6c0 = trunc i32 %v2_c6c0 to i16
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_c6c8 = load i32, i32* @r5, align 4
  %v4_c6c8 = add i32 %v3_c6c8, 10
  %v5_c6c8 = inttoptr i32 %v4_c6c8 to i16*
  store i16 %v3_c6c0, i16* %v5_c6c8, align 2
  %v0_c6cc = load i32, i32* @r6, align 4
  store i32 %v0_c6cc, i32* @r1, align 4
  %v0_c6d0 = load i32, i32* %r2.global-to-local, align 4
  %v1_c6d0 = trunc i32 %v0_c6d0 to i16
  %v3_c6d0 = add i32 %v0_c6cc, 16
  %v4_c6d0 = inttoptr i32 %v3_c6d0 to i16*
  store i16 %v1_c6d0, i16* %v4_c6d0, align 2
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 10240, i32* %r2.global-to-local, align 4
  %v0_c6dc = load i32, i32* @r5, align 4
  store i32 %v0_c6dc, i32* %r0.global-to-local, align 4
  %v4_c6e0 = call i32 @function_c898(i32 %v0_c6dc, i32 %v0_c6cc, i32 10240, i32 40)
  %v5_c6e0 = trunc i32 %v4_c6e0 to i16
  store i32 %v4_c6e0, i32* %r0.global-to-local, align 4
  %v3_c6e4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c6e4, i32* %r3.global-to-local, align 4
  %v3_c6e8 = mul i32 %v3_c6e4, 32
  store i32 %v3_c6e8, i32* %lr.global-to-local, align 4
  %v3_c6ec = load i32, i32* @r6, align 4
  %v4_c6ec = add i32 %v3_c6ec, 16
  %v5_c6ec = inttoptr i32 %v4_c6ec to i16*
  store i16 %v5_c6e0, i16* %v5_c6ec, align 2
  %v0_c6f0 = load i32, i32* %lr.global-to-local, align 4
  %v1_c6f0 = load i32, i32* %r3.global-to-local, align 4
  %tmp68 = mul i32 %v1_c6f0, -8
  %v5_c6f0 = add i32 %v0_c6f0, %tmp68
  store i32 %v5_c6f0, i32* %lr.global-to-local, align 4
  %v0_c6f4 = load i32, i32* @r6, align 4
  %v1_c6f4 = add i32 %v0_c6f4, 2
  %v2_c6f4 = inttoptr i32 %v1_c6f4 to i16*
  %v3_c6f4 = load i16, i16* %v2_c6f4, align 2
  %v1_c6f8 = load i32, i32* @r8, align 4
  %v2_c6f8 = add i32 %v1_c6f8, %v5_c6f0
  store i32 %v2_c6f8, i32* @lr, align 4
  %v3_c6fc = add i32 %v2_c6f8, 2
  %v4_c6fc = inttoptr i32 %v3_c6fc to i16*
  store i16 %v3_c6f4, i16* %v4_c6fc, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_c708 = load i32, i32* @r5, align 4
  store i32 %v0_c708, i32* %r1.global-to-local, align 4
  %v0_c70c = load i32, i32* @sl, align 4
  store i32 %v0_c70c, i32* %r0.global-to-local, align 4
  store i32 60, i32* %r2.global-to-local, align 4
  %v0_c714 = load i32, i32* @lr, align 4
  %v6_c71c = call i32 @function_12af8(i32 %v0_c70c, i32 %v0_c708, i32 60, i32 16384, i32 %v0_c714, i32 16)
  %v3_c720 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c720, i32* %r3.global-to-local, align 4
  %v1_c724 = add i32 %v3_c720, 1
  store i32 %v1_c724, i32* %r0.global-to-local, align 4
  %v1_c728 = load i32, i32* @r7, align 4
  %v9_c728 = icmp eq i32 %v1_c724, %v1_c728
  store i1 %v9_c728, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c724, i32* %stack_var_-44, align 4
  %v5_c730 = icmp slt i32 %v1_c724, %v1_c728
  br i1 %v5_c730, label %dec_label_pc_c638, label %dec_label_pc_c734

dec_label_pc_c734:                                ; preds = %dec_label_pc_c6b0
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c738 = icmp eq i32 %v1_c728, 0
  store i1 %v2_c738, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c738, label %dec_label_pc_c624, label %dec_label_pc_c634

dec_label_pc_c748:                                ; preds = %dec_label_pc_c638
  %v1_c748 = add i32 %v2_c640, 16
  %v2_c748 = inttoptr i32 %v1_c748 to i32*
  %v3_c748 = load i32, i32* %v2_c748, align 4
  store i32 %v3_c748, i32* %r4.global-to-local, align 4
  %v0_c74c = call i32 @function_df2c()
  store i32 %v0_c74c, i32* %r0.global-to-local, align 4
  %v3_c750 = load i32, i32* %stack_var_-44, align 4
  %v5_c758 = mul i32 %v3_c750, 24
  %v0_c75c = load i32, i32* %r4.global-to-local, align 4
  %v1_c75c = and i32 %v0_c75c, 16711680
  %v3_c760 = udiv i32 %v0_c75c, 16777216
  %v4_c764 = udiv i32 %v1_c75c, 256
  %v5_c764 = or i32 %v4_c764, %v3_c760
  store i32 %v5_c764, i32* %r2.global-to-local, align 4
  %v1_c768 = load i32, i32* @r8, align 4
  %v2_c768 = add i32 %v1_c768, %v5_c758
  store i32 %v2_c768, i32* %r1.global-to-local, align 4
  %v1_c76c = and i32 %v0_c75c, 65280
  store i32 %v1_c76c, i32* %r3.global-to-local, align 4
  %v1_c770 = add i32 %v2_c768, 20
  %v2_c770 = inttoptr i32 %v1_c770 to i8*
  %v3_c770 = load i8, i8* %v2_c770, align 1
  %v4_c770 = zext i8 %v3_c770 to i32
  %v5_c778 = call i32 @llvm.bswap.i32(i32 %v0_c75c)
  %v7_c77c = lshr i32 %v0_c74c, %v4_c770
  %v8_c77c = add i32 %v7_c77c, %v5_c778
  store i32 %v8_c77c, i32* %r2.global-to-local, align 4
  %v1_c780 = and i32 %v8_c77c, 16711680
  store i32 %v1_c780, i32* %r0.global-to-local, align 4
  %v1_c78c = and i32 %v8_c77c, 65280
  store i32 %v1_c78c, i32* %r1.global-to-local, align 4
  %v5_c794 = call i32 @llvm.bswap.i32(i32 %v8_c77c)
  %v1_c798 = load i32, i32* @r5, align 4
  %v2_c798 = add i32 %v1_c798, 16
  %v3_c798 = inttoptr i32 %v2_c798 to i32*
  store i32 %v5_c794, i32* %v3_c798, align 4
  store i32 %v6_c34c, i32* %r3.global-to-local, align 4
  store i1 %v8_c7a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_c7a0, label %dec_label_pc_c7a8, label %dec_label_pc_c664

dec_label_pc_c7a8:                                ; preds = %dec_label_pc_c748, %dec_label_pc_c658
  %v0_c7a8 = call i32 @function_df2c()
  %v1_c7b0 = load i32, i32* @r5, align 4
  %v2_c7b0 = add i32 %v1_c7b0, 12
  %v3_c7b0 = inttoptr i32 %v2_c7b0 to i32*
  store i32 %v0_c7a8, i32* %v3_c7b0, align 4
  store i32 %v3_c3b4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), i32* @r4, align 4
  store i1 %v9_c7bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c7bc, label %dec_label_pc_c7c4, label %dec_label_pc_c678

dec_label_pc_c7c4:                                ; preds = %dec_label_pc_c7a8, %dec_label_pc_c664
  %v0_c7c4 = call i32 @function_df2c()
  %v1_c7c4 = trunc i32 %v0_c7c4 to i16
  store i32 %v0_c7c4, i32* %r0.global-to-local, align 4
  store i32 %v3_c3b8, i32* %r1.global-to-local, align 4
  %v1_c7cc = load i32, i32* @r4, align 4
  %v9_c7cc = icmp eq i32 %v3_c3b8, %v1_c7cc
  store i1 %v9_c7cc, i1* %cpsr_z.global-to-local, align 1
  %v3_c7d0 = load i32, i32* @r5, align 4
  %v4_c7d0 = add i32 %v3_c7d0, 4
  %v5_c7d0 = inttoptr i32 %v4_c7d0 to i16*
  store i16 %v1_c7c4, i16* %v5_c7d0, align 2
  br i1 %v9_c7cc, label %dec_label_pc_c7d8, label %dec_label_pc_c7c4.dec_label_pc_c684_crit_edge

dec_label_pc_c7c4.dec_label_pc_c684_crit_edge:    ; preds = %dec_label_pc_c7c4
  %v1_c688.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c684

dec_label_pc_c7d8:                                ; preds = %dec_label_pc_c7c4, %dec_label_pc_c678
  %v0_c7d8 = call i32 @function_df2c()
  %v1_c7d8 = trunc i32 %v0_c7d8 to i16
  store i32 %v0_c7d8, i32* %r0.global-to-local, align 4
  store i32 %v3_c3bc, i32* %r2.global-to-local, align 4
  %v1_c7e0 = load i32, i32* @r4, align 4
  %v9_c7e0 = icmp eq i32 %v3_c3bc, %v1_c7e0
  store i1 %v9_c7e0, i1* %cpsr_z.global-to-local, align 1
  %v3_c7e4 = load i32, i32* @r5, align 4
  %v4_c7e4 = add i32 %v3_c7e4, 20
  %v5_c7e4 = inttoptr i32 %v4_c7e4 to i16*
  store i16 %v1_c7d8, i16* %v5_c7e4, align 2
  br i1 %v9_c7e0, label %dec_label_pc_c7ec, label %dec_label_pc_c7d8.dec_label_pc_c690_crit_edge

dec_label_pc_c7d8.dec_label_pc_c690_crit_edge:    ; preds = %dec_label_pc_c7d8
  %v1_c694.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c690

dec_label_pc_c7ec:                                ; preds = %dec_label_pc_c7d8, %dec_label_pc_c684
  %v0_c7ec = call i32 @function_df2c()
  %v1_c7ec = trunc i32 %v0_c7ec to i16
  store i32 %v0_c7ec, i32* %r0.global-to-local, align 4
  store i32 %v6_c288, i32* %r3.global-to-local, align 4
  %v1_c7f4 = load i32, i32* @r4, align 4
  %v9_c7f4 = icmp eq i32 %v6_c288, %v1_c7f4
  store i1 %v9_c7f4, i1* %cpsr_z.global-to-local, align 1
  %v3_c7f8 = load i32, i32* @r6, align 4
  %v4_c7f8 = add i32 %v3_c7f8, 2
  %v5_c7f8 = inttoptr i32 %v4_c7f8 to i16*
  store i16 %v1_c7ec, i16* %v5_c7f8, align 2
  br i1 %v9_c7f4, label %dec_label_pc_c800, label %dec_label_pc_c7ec.dec_label_pc_c69c_crit_edge

dec_label_pc_c7ec.dec_label_pc_c69c_crit_edge:    ; preds = %dec_label_pc_c7ec
  %v1_c6a0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c69c

dec_label_pc_c800:                                ; preds = %dec_label_pc_c7ec, %dec_label_pc_c690
  %v0_c800 = call i32 @function_df2c()
  %v1_c804 = load i32, i32* @r6, align 4
  %v2_c804 = add i32 %v1_c804, 4
  %v3_c804 = inttoptr i32 %v2_c804 to i32*
  store i32 %v0_c800, i32* %v3_c804, align 4
  store i32 %v6_c2a0, i32* %r0.global-to-local, align 4
  %v1_c80c = load i32, i32* @r4, align 4
  %v9_c80c = icmp eq i32 %v6_c2a0, %v1_c80c
  store i1 %v9_c80c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c80c, label %dec_label_pc_c814, label %dec_label_pc_c6a8

dec_label_pc_c814:                                ; preds = %dec_label_pc_c800, %dec_label_pc_c69c
  %v0_c814 = call i32 @function_df2c()
  store i32 %v0_c814, i32* %r0.global-to-local, align 4
  %v0_c818 = load i32, i32* @fp, align 4
  %v2_c818 = icmp eq i32 %v0_c818, 0
  store i1 %v2_c818, i1* %cpsr_z.global-to-local, align 1
  %v1_c81c = load i32, i32* @r6, align 4
  %v2_c81c = add i32 %v1_c81c, 8
  %v3_c81c = inttoptr i32 %v2_c81c to i32*
  store i32 %v0_c814, i32* %v3_c81c, align 4
  br i1 %v2_c818, label %dec_label_pc_c6b0, label %dec_label_pc_c824

dec_label_pc_c824:                                ; preds = %dec_label_pc_c6a8, %dec_label_pc_c814
  %v0_c824 = call i32 @function_df2c()
  %v1_c824 = trunc i32 %v0_c824 to i16
  store i32 %v0_c824, i32* %r0.global-to-local, align 4
  %v3_c828 = load i32, i32* @r6, align 4
  %v4_c828 = add i32 %v3_c828, 18
  %v5_c828 = inttoptr i32 %v4_c828 to i16*
  store i16 %v1_c824, i16* %v5_c828, align 2
  br label %dec_label_pc_c6b0

dec_label_pc_c830:                                ; preds = %dec_label_pc_c370
  %v0_c830 = load i32, i32* @sl, align 4
  store i32 %v0_c830, i32* %r0.global-to-local, align 4
  %v1_c834 = call i32 @function_1239c(i32 %v0_c830)
  store i32 %v1_c834, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c838

dec_label_pc_c838:                                ; preds = %dec_label_pc_c19c, %dec_label_pc_c830
  %v1_c840 = phi i32 [ %v3_c360, %dec_label_pc_c19c ], [ %v1_c834, %dec_label_pc_c830 ]
  store i32 %v3_c19c, i32* %r4.global-to-local, align 4
  store i32 %v24_c19c, i32* %fp.global-to-local, align 4
  store i32 %v27_c19c, i32* %lr.global-to-local, align 4
  ret i32 %v1_c840

; uselistorder directives
  uselistorder i32 %v0_c824, { 1, 0 }
  uselistorder i32 %v0_c7ec, { 1, 0 }
  uselistorder i32 %v0_c7d8, { 1, 0 }
  uselistorder i32 %v0_c7c4, { 1, 0 }
  uselistorder i32 %v0_c75c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_c724, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_c6f0, { 1, 0 }
  uselistorder i32 %v4_c6e0, { 1, 0 }
  uselistorder i1 %v9_c7bc, { 2, 3, 1, 0 }
  uselistorder i32 %v2_c614, { 1, 0, 2, 3 }
  uselistorder i32 %v0_c47c, { 1, 2, 0 }
  uselistorder i32 %v1_c448, { 2, 1, 0 }
  uselistorder i32 %v1_c444, { 2, 0, 1 }
  uselistorder i32 %v1_c440, { 2, 0, 1 }
  uselistorder i32 %v1_c43c, { 2, 0, 1 }
  uselistorder i32 %v1_c418, { 1, 0 }
  uselistorder i32 %v3_c3b8, { 0, 1, 3, 2 }
  uselistorder i32 %v3_c3b4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_c3a8, { 1, 0, 2 }
  uselistorder i32 %v0_c3a4, { 1, 0, 3, 2 }
  uselistorder i1 %v7_c390, { 1, 0 }
  uselistorder i1 %v7_c364, { 1, 0 }
  uselistorder i32 %v3_c360, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v6_c34c, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32 %v6_c2a0, { 3, 2, 1, 0 }
  uselistorder i32 %v6_c288, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v6_c20c, { 1, 0 }
  uselistorder i32 %v8_c1f4, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 16, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 26, 28, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38, 40, 39, 42, 41, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 5, 4, 6, 8, 9, 7, 10, 12, 11, 13, 15, 14, 16, 17, 18, 21, 19, 20, 22, 23, 24, 25, 26, 27, 28, 32, 29, 30, 31, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 0 }
  uselistorder i8 4, { 1, 0 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_ffff.45 to i32), { 55, 1, 56, 0, 37, 10, 57, 11, 58, 12, 59, 13, 60, 61, 2, 62, 38, 39, 63, 14, 64, 15, 65, 16, 66, 17, 67, 40, 68, 41, 69, 18, 70, 19, 71, 42, 72, 43, 73, 20, 74, 21, 75, 3, 76, 4, 44, 45, 77, 22, 78, 23, 79, 5, 80, 6, 24, 81, 25, 82, 46, 83, 7, 47, 84, 26, 85, 27, 86, 28, 87, 48, 88, 8, 49, 89, 29, 90, 30, 91, 31, 92, 93, 9, 94, 50, 32, 95, 33, 96, 34, 97, 51, 98, 35, 52, 99, 53, 100, 36, 54, 101 }
  uselistorder i32 (i32, i32*, i32, i32)* @function_8570, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 95, 96, 97, 98, 99, 100, 101, 102, 91, 92, 93, 94, 103, 104, 105, 106 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_c838, { 1, 0 }
  uselistorder label %dec_label_pc_c824, { 1, 0 }
  uselistorder label %dec_label_pc_c6b0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c634, { 1, 0 }
  uselistorder label %dec_label_pc_c624, { 1, 0, 2 }
  uselistorder label %bb61, { 1, 0 }
  uselistorder label %bb59, { 1, 0 }
}

define i32 @function_c848(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_c848:
  %tmp = or i32 %arg1, 1
  %tmp9 = icmp eq i32 %tmp, 1
  br i1 %tmp9, label %dec_label_pc_c86c, label %dec_label_pc_c854

dec_label_pc_c854:                                ; preds = %dec_label_pc_c848
  %v0_c85c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_c858

dec_label_pc_c858:                                ; preds = %dec_label_pc_c858, %dec_label_pc_c854
  %v0_c864 = phi i32 [ %v2_c864, %dec_label_pc_c858 ], [ 0, %dec_label_pc_c854 ]
  %v0_c85c = phi i32 [ %v5_c85c, %dec_label_pc_c858 ], [ %v0_c85c.pre, %dec_label_pc_c854 ]
  %v0_c858 = phi i32 [ %v1_c858, %dec_label_pc_c858 ], [ %arg1, %dec_label_pc_c854 ]
  %v1_c858 = add i32 %v0_c858, -2
  %v1_c85c = inttoptr i32 %v0_c85c to i16*
  %v2_c85c = load i16, i16* %v1_c85c, align 2
  %v3_c85c = zext i16 %v2_c85c to i32
  %v5_c85c = add i32 %v0_c85c, -2
  store i32 %v5_c85c, i32* @r0, align 4
  %v2_c864 = add i32 %v3_c85c, %v0_c864
  %v1_c858.cmp = icmp ugt i32 %v1_c858, 1
  br i1 %v1_c858.cmp, label %dec_label_pc_c858, label %dec_label_pc_c86c.loopexit

dec_label_pc_c86c.loopexit:                       ; preds = %dec_label_pc_c858
  br label %dec_label_pc_c86c

dec_label_pc_c86c:                                ; preds = %dec_label_pc_c848, %dec_label_pc_c86c.loopexit
  %v1_c874 = phi i32 [ %v2_c864, %dec_label_pc_c86c.loopexit ], [ 0, %dec_label_pc_c848 ]
  %v0_c86c = phi i32 [ %v1_c858, %dec_label_pc_c86c.loopexit ], [ %arg1, %dec_label_pc_c848 ]
  %v7_c86c = icmp eq i32 %v0_c86c, 1
  br i1 %v7_c86c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_c86c
  %v1_c870 = load i32, i32* @r0, align 4
  %v2_c870 = inttoptr i32 %v1_c870 to i8*
  %v3_c870 = load i8, i8* %v2_c870, align 1
  %v4_c870 = zext i8 %v3_c870 to i32
  %v3_c874 = add i32 %v1_c874, %v4_c870
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_c86c, %bb
  %v0_c878 = phi i32 [ %v1_c874, %dec_label_pc_c86c ], [ %v3_c874, %bb ]
  %v3_c87c = urem i32 %v0_c878, 65536
  %v4_c880 = udiv i32 %v0_c878, 65536
  %v5_c880 = add nuw nsw i32 %v4_c880, %v3_c87c
  %v4_c884 = udiv i32 %v5_c880, 65536
  %v5_c884 = add nuw nsw i32 %v4_c884, %v5_c880
  %v1_c888 = urem i32 %v5_c884, 65536
  %v3_c890 = xor i32 %v1_c888, 65535
  ret i32 %v3_c890

; uselistorder directives
  uselistorder i32 %v5_c880, { 1, 0 }
  uselistorder i32 %v5_c85c, { 1, 0 }
  uselistorder i32 %v1_c858, { 1, 0, 2 }
  uselistorder i32 %v0_c85c, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_c86c, { 1, 0 }
}

define i32 @function_c898(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_c898:
  %v1_c8a8 = add i32 %arg1, 12
  %v2_c8a8 = inttoptr i32 %v1_c8a8 to i32*
  %v3_c8a8 = load i32, i32* %v2_c8a8, align 4
  %v1_c8ac = add i32 %arg1, 16
  %v2_c8ac = inttoptr i32 %v1_c8ac to i32*
  %v3_c8ac = load i32, i32* %v2_c8ac, align 4
  %v7_c8b0 = icmp sgt i32 %arg3, 1
  br i1 %v7_c8b0, label %dec_label_pc_c8bc.preheader, label %dec_label_pc_c8d0

dec_label_pc_c8bc.preheader:                      ; preds = %dec_label_pc_c898
  %v0_c8c0.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_c8bc

dec_label_pc_c8bc:                                ; preds = %dec_label_pc_c8bc.preheader, %dec_label_pc_c8bc
  %v0_c8c8 = phi i32 [ 0, %dec_label_pc_c8bc.preheader ], [ %v2_c8c8, %dec_label_pc_c8bc ]
  %v0_c8c0 = phi i32 [ %v0_c8c0.pre, %dec_label_pc_c8bc.preheader ], [ %v5_c8c0, %dec_label_pc_c8bc ]
  %v0_c8bc = phi i32 [ %arg3, %dec_label_pc_c8bc.preheader ], [ %v1_c8bc, %dec_label_pc_c8bc ]
  %v1_c8bc = add nsw i32 %v0_c8bc, -2
  %v1_c8c0 = inttoptr i32 %v0_c8c0 to i16*
  %v2_c8c0 = load i16, i16* %v1_c8c0, align 2
  %v3_c8c0 = zext i16 %v2_c8c0 to i32
  %v5_c8c0 = add i32 %v0_c8c0, -2
  store i32 %v5_c8c0, i32* @r1, align 4
  %v2_c8c8 = add i32 %v3_c8c0, %v0_c8c8
  %v8_c8cc = icmp sgt i32 %v1_c8bc, 1
  br i1 %v8_c8cc, label %dec_label_pc_c8bc, label %dec_label_pc_c8d0.loopexit

dec_label_pc_c8d0.loopexit:                       ; preds = %dec_label_pc_c8bc
  br label %dec_label_pc_c8d0

dec_label_pc_c8d0:                                ; preds = %dec_label_pc_c8d0.loopexit, %dec_label_pc_c898
  %v1_c8dc = phi i32 [ %v2_c8c8, %dec_label_pc_c8d0.loopexit ], [ 0, %dec_label_pc_c898 ]
  %v0_c8d0 = phi i32 [ %v1_c8bc, %dec_label_pc_c8d0.loopexit ], [ %arg3, %dec_label_pc_c898 ]
  %v7_c8d0 = icmp eq i32 %v0_c8d0, 1
  br i1 %v7_c8d0, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_c8d0
  br label %bb19

bb:                                               ; preds = %dec_label_pc_c8d0
  %v1_c8d4 = load i32, i32* @r1, align 4
  %v2_c8d4 = inttoptr i32 %v1_c8d4 to i8*
  %v3_c8d4 = load i8, i8* %v2_c8d4, align 1
  %v4_c8d4 = zext i8 %v3_c8d4 to i32
  %v3_c8dc = add i32 %v4_c8d4, %v1_c8dc
  br label %bb19

bb19:                                             ; preds = %.thread, %bb
  %v1_c904 = phi i32 [ %v1_c8dc, %.thread ], [ %v3_c8dc, %bb ]
  %v0_c8e4 = mul i32 %v3_c8a8, 65536
  %v3_c8e4 = udiv i32 %v0_c8e4, 65536
  %v3_c8e8 = urem i32 %v3_c8ac, 65536
  %v4_c8f0 = udiv i32 %v3_c8a8, 65536
  %v2_c8ec = add nuw nsw i32 %v3_c8e8, %v4_c8f0
  %v5_c8f0 = add nuw nsw i32 %v2_c8ec, %v3_c8e4
  %v1_c8f4 = add i32 %arg1, 9
  %v2_c8f4 = inttoptr i32 %v1_c8f4 to i8*
  %v3_c8f4 = load i8, i8* %v2_c8f4, align 1
  %v4_c8f4 = zext i8 %v3_c8f4 to i32
  %v4_c8f8 = udiv i32 %v3_c8ac, 65536
  %v3_c900 = mul nuw nsw i32 %v4_c8f4, 256
  %v5_c8f8 = add i32 %v4_c8f8, %arg2
  %v2_c8fc = add i32 %v5_c8f8, %v1_c904
  %v2_c904 = add i32 %v2_c8fc, %v5_c8f0
  %v2_c908 = add i32 %v2_c904, %v3_c900
  %tmp = icmp ult i32 %v2_c908, 65536
  br i1 %tmp, label %dec_label_pc_c928, label %dec_label_pc_c914

dec_label_pc_c914:                                ; preds = %bb19, %dec_label_pc_c914
  %v2_c91c5 = phi i32 [ %v2_c91c, %dec_label_pc_c914 ], [ %v2_c908, %bb19 ]
  %v3_c9206.in = phi i32 [ %v2_c91c, %dec_label_pc_c914 ], [ %v2_c908, %bb19 ]
  %v3_c9206 = udiv i32 %v3_c9206.in, 65536
  %v3_c918 = urem i32 %v2_c91c5, 65536
  %v2_c91c = add nuw nsw i32 %v3_c918, %v3_c9206
  %tmp20 = icmp ult i32 %v2_c91c, 65536
  br i1 %tmp20, label %dec_label_pc_c928.loopexit, label %dec_label_pc_c914

dec_label_pc_c928.loopexit:                       ; preds = %dec_label_pc_c914
  br label %dec_label_pc_c928

dec_label_pc_c928:                                ; preds = %dec_label_pc_c928.loopexit, %bb19
  %v0_c928 = phi i32 [ %v2_c91c, %dec_label_pc_c928.loopexit ], [ %v2_c908, %bb19 ]
  %v1_c928 = urem i32 %v0_c928, 65536
  %v3_c930 = xor i32 %v1_c928, 65535
  ret i32 %v3_c930

; uselistorder directives
  uselistorder i32 %v2_c91c, { 2, 1, 3, 0 }
  uselistorder i32 %v2_c908, { 3, 0, 2, 1 }
  uselistorder i32 %v1_c8dc, { 1, 0 }
  uselistorder i32 %v5_c8c0, { 1, 0 }
  uselistorder i32 %v0_c8c0, { 1, 0 }
  uselistorder i32 %v3_c8a8, { 1, 0 }
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_c914, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_c8bc, { 1, 0 }
}

define i32 @function_c93c(i32 %arg1) local_unnamed_addr {
dec_label_pc_c93c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i8, align 1
  %stack_var_-4681 = alloca i32, align 4
  %stack_var_-8777 = alloca i32, align 4
  %stack_var_-585 = alloca i8, align 1
  %v3_c93c = load i32, i32* @r4, align 4
  %v6_c93c = load i32, i32* @r5, align 4
  %v9_c93c = load i32, i32* @r6, align 4
  %v12_c93c = load i32, i32* @r7, align 4
  %v15_c93c = load i32, i32* @r8, align 4
  %v18_c93c = load i32, i32* @sb, align 4
  %v21_c93c = load i32, i32* @sl, align 4
  %v24_c93c = load i32, i32* @fp, align 4
  %v27_c93c = load i32, i32* @lr, align 4
  store i32 0, i32* @r5, align 4
  %v2_c958 = ptrtoint i8* %stack_var_-585 to i32
  store i32 %v2_c958, i32* @r6, align 4
  store i32 0, i32* %stack_var_-56, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  store i32 513, i32* @r2, align 4
  %v2_c984 = ptrtoint i32* %stack_var_-8777 to i32
  store i32 %v2_c984, i32* @fp, align 4
  %v3_c990 = call i32 @function_12820(i8* nonnull %stack_var_-585, i32 0)
  %v2_c994 = ptrtoint i32* %stack_var_-4681 to i32
  store i32 %v2_c994, i32* @sl, align 4
  %v0_c998 = load i32, i32* @r5, align 4
  store i32 4096, i32* @r2, align 4
  %v2_c9a4 = bitcast i32* %stack_var_-8777 to i8*
  %v3_c9a4 = call i32 @function_12820(i8* %v2_c9a4, i32 %v0_c998)
  %v0_c9ac = load i32, i32* @r5, align 4
  store i32 4096, i32* @r2, align 4
  %v2_c9b8 = bitcast i32* %stack_var_-4681 to i8*
  %v3_c9b8 = call i32 @function_12820(i8* %v2_c9b8, i32 %v0_c9ac)
  %v2_c9bc = ptrtoint i8* %stack_var_-72 to i32
  store i32 %v2_c9bc, i32* @sb, align 4
  %v0_c9c0 = load i32, i32* %r4.global-to-local, align 4
  %v3_c9c0 = udiv i32 %v0_c9c0, 256
  %v1_c9c4 = urem i32 %v0_c9c0, 256
  store i32 %v1_c9c4, i32* @r4, align 4
  %v3_c9d4 = trunc i32 %v3_c9c0 to i8
  %v4_c9d4 = call i32 @function_11d3c(i8 %v3_c9d4, i32 16, i32 %v2_c9bc)
  %v2_c9dc = call i32 @function_118dc(i8* nonnull %stack_var_-72)
  %v7_c9e0 = icmp eq i32 %v2_c9dc, 2
  br i1 %v7_c9e0, label %dec_label_pc_cea4, label %dec_label_pc_c9e8

dec_label_pc_c9e8:                                ; preds = %dec_label_pc_c93c, %dec_label_pc_cea4
  %v1_c9ec = call i32 @function_1139c(i32 13)
  %v1_c9f4 = call i32 @function_1139c(i32 14)
  %v1_c9fc = call i32 @function_1139c(i32 15)
  %v1_ca04 = call i32 @function_1139c(i32 17)
  %v0_ca08 = load i32, i32* @r5, align 4
  %v2_ca10 = inttoptr i32 %v0_ca08 to i32*
  %v3_ca10 = call i32 @function_112d8(i32 17, i32* %v2_ca10)
  %v0_ca14 = load i32, i32* @r5, align 4
  %v2_ca18 = call i32 @function_11fa8(i32 %v3_ca10, i32 %v0_ca14)
  %v7_ca1c = icmp eq i32 %v2_ca18, -1
  store i32 %v2_ca18, i32* @r8, align 4
  br i1 %v7_ca1c, label %bb, label %dec_label_pc_ca2c.preheader

bb:                                               ; preds = %dec_label_pc_c9e8
  %v1_ca24 = load i32, i32* @r5, align 4
  store i32 %v1_ca24, i32* @r4, align 4
  br label %dec_label_pc_ce40

dec_label_pc_ca2c.preheader:                      ; preds = %dec_label_pc_c9e8
  %v4_ca3856 = call i32 @function_11b3c(i8* nonnull %stack_var_-585, i32 512, i32 %v2_ca18)
  %v2_ca3c58 = icmp eq i32 %v4_ca3856, 0
  br i1 %v2_ca3c58, label %dec_label_pc_cbc4.loopexit, label %dec_label_pc_ca44.lr.ph

dec_label_pc_ca44.lr.ph:                          ; preds = %dec_label_pc_ca2c.preheader
  %v2_ca8c = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_ca44

dec_label_pc_ca44:                                ; preds = %dec_label_pc_ca44.lr.ph, %dec_label_pc_ca2c.backedge
  %v3_ca48 = load i8, i8* %stack_var_-585, align 1
  %v4_ca48 = sext i8 %v3_ca48 to i32
  %v2_ca4c = icmp eq i8 %v3_ca48, 0
  br i1 %v2_ca4c, label %bb126, label %bb125

bb125:                                            ; preds = %dec_label_pc_ca44
  %v8_ca50 = icmp eq i8 %v3_ca48, 58
  br i1 %v8_ca50, label %.thread8, label %dec_label_pc_ca64

.thread8:                                         ; preds = %bb125
  br label %dec_label_pc_ca7c

bb126:                                            ; preds = %dec_label_pc_ca44
  br label %dec_label_pc_ca7c

dec_label_pc_ca64:                                ; preds = %bb125
  %v1_ca6c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_ca68

dec_label_pc_ca68:                                ; preds = %bb127, %dec_label_pc_ca64
  %v0_ca68 = phi i32 [ %v1_ca68, %bb127 ], [ 0, %dec_label_pc_ca64 ]
  %v1_ca68 = add i32 %v0_ca68, 1
  %v2_ca6c = add i32 %v1_ca68, %v1_ca6c.pre
  %v3_ca6c = inttoptr i32 %v2_ca6c to i8*
  %v4_ca6c = load i8, i8* %v3_ca6c, align 1
  %v6_ca6c = zext i8 %v4_ca6c to i32
  %v2_ca70 = icmp eq i8 %v4_ca6c, 0
  br i1 %v2_ca70, label %dec_label_pc_ca7c, label %bb127

bb127:                                            ; preds = %dec_label_pc_ca68
  %v8_ca74 = icmp eq i8 %v4_ca6c, 58
  br i1 %v8_ca74, label %dec_label_pc_ca7c, label %dec_label_pc_ca68

dec_label_pc_ca7c:                                ; preds = %dec_label_pc_ca68, %bb127, %bb126, %.thread8
  %v1_caa8 = phi i32 [ 0, %.thread8 ], [ 0, %bb126 ], [ %v1_ca68, %bb127 ], [ %v1_ca68, %dec_label_pc_ca68 ]
  %v0_ca7c = phi i32 [ %v4_ca48, %.thread8 ], [ %v4_ca48, %bb126 ], [ %v6_ca6c, %bb127 ], [ %v6_ca6c, %dec_label_pc_ca68 ]
  %v2_ca7c = icmp eq i32 %v0_ca7c, 0
  br i1 %v2_ca7c, label %dec_label_pc_ca2c.backedge, label %dec_label_pc_ca84

dec_label_pc_ca2c.backedge:                       ; preds = %dec_label_pc_ca7c, %dec_label_pc_cb4c, %dec_label_pc_cb98, %dec_label_pc_cac8
  %v0_ca34 = load i32, i32* @r8, align 4
  %v4_ca38 = call i32 @function_11b3c(i8* nonnull %stack_var_-585, i32 512, i32 %v0_ca34)
  %v2_ca3c = icmp eq i32 %v4_ca38, 0
  br i1 %v2_ca3c, label %dec_label_pc_cbc4.loopexit, label %dec_label_pc_ca44

dec_label_pc_ca84:                                ; preds = %dec_label_pc_ca7c
  %v1_ca88 = add i32 %v1_caa8, 2
  %v2_ca90 = add i32 %v1_ca88, %v2_ca8c
  %v1_ca94 = add i32 %v2_ca90, -545
  %v2_ca94 = inttoptr i32 %v1_ca94 to i8*
  %v3_ca94 = load i8, i8* %v2_ca94, align 1
  %v2_ca98 = icmp eq i8 %v3_ca94, 0
  br i1 %v2_ca98, label %bb129, label %bb128

bb128:                                            ; preds = %dec_label_pc_ca84
  %v8_ca9c = icmp eq i8 %v3_ca94, 32
  br i1 %v8_ca9c, label %.thread13, label %dec_label_pc_caa8

.thread13:                                        ; preds = %bb128
  store i32 %v1_ca88, i32* @r5, align 4
  br label %dec_label_pc_cac8

bb129:                                            ; preds = %dec_label_pc_ca84
  store i32 %v1_ca88, i32* @r5, align 4
  br label %dec_label_pc_cac8

dec_label_pc_caa8:                                ; preds = %bb128
  %v0_caa8 = load i32, i32* @r6, align 4
  %v2_caa8 = add i32 %v0_caa8, %v1_caa8
  br label %dec_label_pc_cab0

dec_label_pc_cab0:                                ; preds = %bb130, %dec_label_pc_caa8
  %v0_cabc16 = phi i32 [ %v1_cabc, %bb130 ], [ %v1_ca88, %dec_label_pc_caa8 ]
  %v0_cac018 = phi i32 [ %v1_cac0, %bb130 ], [ %v2_caa8, %dec_label_pc_caa8 ]
  %v1_cab0 = add i32 %v0_cac018, 3
  %v2_cab0 = inttoptr i32 %v1_cab0 to i8*
  %v3_cab0 = load i8, i8* %v2_cab0, align 1
  %v2_cab4 = icmp eq i8 %v3_cab0, 0
  br i1 %v2_cab4, label %.thread15, label %bb130

.thread15:                                        ; preds = %dec_label_pc_cab0
  %v1_cabc17 = add i32 %v0_cabc16, 1
  store i32 %v1_cabc17, i32* @r5, align 4
  br label %dec_label_pc_cac8

bb130:                                            ; preds = %dec_label_pc_cab0
  %v8_cab8 = icmp eq i8 %v3_cab0, 32
  %v1_cabc = add i32 %v0_cabc16, 1
  store i32 %v1_cabc, i32* @r5, align 4
  %v1_cac0 = add i32 %v0_cac018, 1
  br i1 %v8_cab8, label %dec_label_pc_cac8, label %dec_label_pc_cab0

dec_label_pc_cac8:                                ; preds = %bb130, %bb129, %.thread15, %.thread13
  %v1_cad4 = phi i32 [ %v1_cabc17, %.thread15 ], [ %v1_ca88, %.thread13 ], [ %v1_ca88, %bb129 ], [ %v1_cabc, %bb130 ]
  %v0_cac8 = load i32, i32* @r6, align 4
  %v2_cac8 = add i32 %v0_cac8, %v1_ca88
  store i32 %v2_cac8, i32* @r4, align 4
  %v2_cad4 = add i32 %v1_cad4, %v2_ca8c
  store i32 0, i32* @r7, align 4
  %v3_cadc = add i32 %v2_cad4, -545
  %v4_cadc = inttoptr i32 %v3_cadc to i8*
  store i8 0, i8* %v4_cadc, align 1
  %v0_cae0 = load i32, i32* @r4, align 4
  %v1_cae4 = inttoptr i32 %v0_cae0 to i8*
  %v2_cae4 = call i32 @function_118dc(i8* %v1_cae4)
  store i32 %v2_cae4, i32* @r1, align 4
  %v0_caf0 = load i32, i32* @r4, align 4
  %v3_caf4 = inttoptr i32 %v0_caf0 to i8*
  %v4_caf4 = call i32 @function_11c2c(i8* %v3_caf4, i32 %v2_cae4, i32 %v2_c9bc)
  %v7_caf8 = icmp eq i32 %v4_caf4, -1
  br i1 %v7_caf8, label %dec_label_pc_ca2c.backedge, label %dec_label_pc_cb14.preheader

dec_label_pc_cb14.preheader:                      ; preds = %dec_label_pc_cac8
  %v1_cafc = load i32, i32* @r7, align 4
  %v1_cb00 = load i32, i32* @r6, align 4
  %v2_cb00 = load i32, i32* @r5, align 4
  %v3_cb00 = add i32 %v2_cb00, %v1_cb00
  store i32 %v1_cafc, i32* @lr, align 4
  %v1_cb1448 = add i32 %v3_cb00, 2
  %v2_cb1449 = inttoptr i32 %v1_cb1448 to i8*
  %v3_cb1450 = load i8, i8* %v2_cb1449, align 1
  %v2_cb1852 = icmp eq i8 %v3_cb1450, 0
  %v1_cb1c54 = add i32 %v2_cb00, 2
  br i1 %v2_cb1852, label %dec_label_pc_cb4c, label %dec_label_pc_cb24

dec_label_pc_cb24:                                ; preds = %dec_label_pc_cb14.preheader, %dec_label_pc_cb14.backedge
  %v0_cb4c83 = phi i32 [ %v0_cb4c81, %dec_label_pc_cb14.backedge ], [ %v1_cafc, %dec_label_pc_cb14.preheader ]
  %v0_cb34.pr = phi i32 [ %v0_cb34.pr70, %dec_label_pc_cb14.backedge ], [ %v1_cafc, %dec_label_pc_cb14.preheader ]
  %v0_ce54 = phi i32 [ %v0_ce5473, %dec_label_pc_cb14.backedge ], [ %v1_cafc, %dec_label_pc_cb14.preheader ]
  %v0_cb1c78 = phi i32 [ %v1_cb1c, %dec_label_pc_cb14.backedge ], [ %v1_cb1c54, %dec_label_pc_cb14.preheader ]
  %v0_cb44 = phi i32 [ %v0_cb14, %dec_label_pc_cb14.backedge ], [ %v3_cb00, %dec_label_pc_cb14.preheader ]
  %v1_cb28.in = phi i8 [ %v3_cb14, %dec_label_pc_cb14.backedge ], [ %v3_cb1450, %dec_label_pc_cb14.preheader ]
  %v7_cb24 = icmp eq i8 %v1_cb28.in, 9
  br i1 %v7_cb24, label %bb132, label %bb131

bb131:                                            ; preds = %dec_label_pc_cb24
  %v8_cb28 = icmp eq i8 %v1_cb28.in, 32
  br i1 %v8_cb28, label %.thread27, label %dec_label_pc_cb34

.thread27:                                        ; preds = %bb131
  br label %dec_label_pc_cb40

bb132:                                            ; preds = %dec_label_pc_cb24
  br label %dec_label_pc_cb40

dec_label_pc_cb34:                                ; preds = %bb131
  %v7_cb34 = icmp eq i32 %v0_cb34.pr, 1
  br i1 %v7_cb34, label %dec_label_pc_ce54, label %dec_label_pc_cb3c

dec_label_pc_cb3c:                                ; preds = %dec_label_pc_ce54, %dec_label_pc_cb34
  %v0_cb4075 = phi i32 [ %v1_ce54, %dec_label_pc_ce54 ], [ %v0_ce54, %dec_label_pc_cb34 ]
  br label %dec_label_pc_cb40

dec_label_pc_cb40:                                ; preds = %bb132, %.thread27, %dec_label_pc_cb3c
  %v0_cb40 = phi i32 [ %v0_ce54, %.thread27 ], [ %v0_ce54, %bb132 ], [ %v0_cb4075, %dec_label_pc_cb3c ]
  %v0_cb34.pr71 = phi i32 [ 1, %.thread27 ], [ 1, %bb132 ], [ 0, %dec_label_pc_cb3c ]
  %v7_cb48 = icmp sgt i32 %v0_cb40, 6
  br i1 %v7_cb48, label %dec_label_pc_cb4c, label %dec_label_pc_cb14.backedge

dec_label_pc_cb4c:                                ; preds = %dec_label_pc_cb14.backedge, %dec_label_pc_cb40, %dec_label_pc_cb14.preheader
  %v1_cb9c = phi i32 [ %v1_cb1c54, %dec_label_pc_cb14.preheader ], [ %v1_cb1c, %dec_label_pc_cb14.backedge ], [ %v0_cb1c78, %dec_label_pc_cb40 ]
  %v0_cb4c = phi i32 [ %v1_cafc, %dec_label_pc_cb14.preheader ], [ %v0_cb4c81, %dec_label_pc_cb14.backedge ], [ %v0_cb4c83, %dec_label_pc_cb40 ]
  %v2_cb4c = icmp eq i32 %v0_cb4c, 0
  br i1 %v2_cb4c, label %dec_label_pc_ca2c.backedge, label %dec_label_pc_cb58

dec_label_pc_cb58:                                ; preds = %dec_label_pc_cb4c
  %v2_cb60 = add i32 %v1_cb9c, %v2_ca8c
  %v1_cb64 = add i32 %v2_cb60, -545
  %v2_cb64 = inttoptr i32 %v1_cb64 to i8*
  %v3_cb64 = load i8, i8* %v2_cb64, align 1
  %v2_cb68 = icmp eq i8 %v3_cb64, 0
  br i1 %v2_cb68, label %dec_label_pc_cb98, label %bb133

bb133:                                            ; preds = %dec_label_pc_cb58
  %v8_cb6c = icmp eq i8 %v3_cb64, 32
  br i1 %v8_cb6c, label %dec_label_pc_cb98, label %dec_label_pc_cb74

dec_label_pc_cb74:                                ; preds = %bb133
  %v2_cb74 = add i32 %v1_cb9c, %v1_cb00
  br label %dec_label_pc_cb78

dec_label_pc_cb78:                                ; preds = %bb134, %dec_label_pc_cb74
  %v0_cb8430 = phi i32 [ %v1_cb84, %bb134 ], [ %v1_cb9c, %dec_label_pc_cb74 ]
  %v0_cb78 = phi i32 [ %v1_cb78, %bb134 ], [ %v2_cb74, %dec_label_pc_cb74 ]
  %v1_cb78 = add i32 %v0_cb78, 1
  %v2_cb78 = inttoptr i32 %v1_cb78 to i8*
  %v3_cb78 = load i8, i8* %v2_cb78, align 1
  %v2_cb7c = icmp eq i8 %v3_cb78, 0
  br i1 %v2_cb7c, label %.thread29, label %bb134

.thread29:                                        ; preds = %dec_label_pc_cb78
  %v1_cb8431 = add i32 %v0_cb8430, 1
  br label %dec_label_pc_cb8c

bb134:                                            ; preds = %dec_label_pc_cb78
  %v8_cb80 = icmp eq i8 %v3_cb78, 32
  %v1_cb84 = add i32 %v0_cb8430, 1
  br i1 %v8_cb80, label %dec_label_pc_cb8c, label %dec_label_pc_cb78

dec_label_pc_cb8c:                                ; preds = %bb134, %.thread29
  %v1_cb94 = phi i32 [ %v1_cb8431, %.thread29 ], [ %v1_cb84, %bb134 ]
  %v2_cb94 = add i32 %v1_cb94, %v2_ca8c
  br label %dec_label_pc_cb98

dec_label_pc_cb98:                                ; preds = %dec_label_pc_cb58, %bb133, %dec_label_pc_cb8c
  %v2_cba4 = phi i32 [ %v2_cb60, %dec_label_pc_cb58 ], [ %v2_cb60, %bb133 ], [ %v2_cb94, %dec_label_pc_cb8c ]
  %v2_cb9c = add i32 %v1_cb9c, %v1_cb00
  store i32 %v2_cb9c, i32* @r4, align 4
  %v3_cba4 = add i32 %v2_cba4, -545
  %v4_cba4 = inttoptr i32 %v3_cba4 to i8*
  store i8 0, i8* %v4_cba4, align 1
  %v1_cba8 = inttoptr i32 %v2_cb9c to i8*
  %v2_cba8 = call i32 @function_118dc(i8* %v1_cba8)
  %v8_cbb0 = icmp sgt i32 %v2_cba8, 15
  br i1 %v8_cbb0, label %dec_label_pc_ca2c.backedge, label %dec_label_pc_cbb4

dec_label_pc_cbb4:                                ; preds = %dec_label_pc_cb98
  %v0_cbb8 = load i32, i32* @r4, align 4
  %v2_cbbc = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_cbbc, i32* @r0, align 4
  %v2_cbc0 = bitcast i32* %stack_var_-56 to i8*
  %v3_cbc0 = call i32 @function_11904(i8* %v2_cbc0, i32 %v0_cbb8)
  br label %dec_label_pc_cbc4

dec_label_pc_cbc4.loopexit:                       ; preds = %dec_label_pc_ca2c.backedge, %dec_label_pc_ca2c.preheader
  %.pre = ptrtoint i32* %stack_var_-56 to i32
  %.pre92 = bitcast i32* %stack_var_-56 to i8*
  br label %dec_label_pc_cbc4

dec_label_pc_cbc4:                                ; preds = %dec_label_pc_cbc4.loopexit, %dec_label_pc_cbb4
  %v1_cbd4.pre-phi = phi i8* [ %.pre92, %dec_label_pc_cbc4.loopexit ], [ %v2_cbc0, %dec_label_pc_cbb4 ]
  %v2_cbd0.pre-phi = phi i32 [ %.pre, %dec_label_pc_cbc4.loopexit ], [ %v2_cbbc, %dec_label_pc_cbb4 ]
  %v0_cbc4 = load i32, i32* @r8, align 4
  %v1_cbc8 = call i32 @function_1239c(i32 %v0_cbc4)
  %v2_cbd4 = call i32 @function_118dc(i8* %v1_cbd4.pre-phi)
  store i32 %v2_cbd4, i32* @r4, align 4
  %v2_cbd8 = icmp eq i32 %v2_cbd4, 0
  br i1 %v2_cbd8, label %dec_label_pc_ce80, label %dec_label_pc_cbe0

dec_label_pc_cbe0:                                ; preds = %dec_label_pc_cbc4
  %v3_cbe8 = call i32 @function_112d8(i32 13, i32* null)
  %v1_cbec = call i32 @function_12598(i32 %v3_cbe8)
  store i32 %v1_cbec, i32* @sb, align 4
  %v2_cbf0 = icmp eq i32 %v1_cbec, 0
  br i1 %v2_cbf0, label %dec_label_pc_ce20, label %dec_label_pc_cc00.preheader

dec_label_pc_cc00.preheader:                      ; preds = %dec_label_pc_cbe0
  store i32 0, i32* @r5, align 4
  %v1_cc0443 = inttoptr i32 %v1_cbec to i32*
  %v2_cc0444 = call i32 @function_126dc(i32* %v1_cc0443)
  %v2_cc0846 = icmp eq i32 %v2_cc0444, 0
  br i1 %v2_cc0846, label %dec_label_pc_ce14, label %dec_label_pc_cc10.preheader

dec_label_pc_cc00.loopexit:                       ; preds = %dec_label_pc_cc18, %dec_label_pc_cc28, %dec_label_pc_cc94
  %v0_cc00 = load i32, i32* @sb, align 4
  %v1_cc04 = inttoptr i32 %v0_cc00 to i32*
  %v2_cc04 = call i32 @function_126dc(i32* %v1_cc04)
  %v2_cc08 = icmp eq i32 %v2_cc04, 0
  br i1 %v2_cc08, label %dec_label_pc_ce14, label %dec_label_pc_cc10.preheader

dec_label_pc_cc10.preheader:                      ; preds = %dec_label_pc_cc00.preheader, %dec_label_pc_cc00.loopexit
  %v0_cc1891 = phi i32 [ %v2_cc04, %dec_label_pc_cc00.loopexit ], [ %v2_cc0444, %dec_label_pc_cc00.preheader ]
  br label %dec_label_pc_cc10

dec_label_pc_cc10:                                ; preds = %dec_label_pc_cc10.preheader, %dec_label_pc_cdfc
  %v0_cc30 = phi i32 [ %v0_cc1891, %dec_label_pc_cc10.preheader ], [ %v2_ce08, %dec_label_pc_cdfc ]
  %v0_cc10 = load i32, i32* @r5, align 4
  %v2_cc10 = icmp eq i32 %v0_cc10, 0
  br i1 %v2_cc10, label %dec_label_pc_cc18, label %dec_label_pc_ce14

dec_label_pc_cc18:                                ; preds = %dec_label_pc_cc10
  %v1_cc18 = add i32 %v0_cc30, 11
  %v2_cc18 = inttoptr i32 %v1_cc18 to i8*
  %v3_cc18 = load i8, i8* %v2_cc18, align 1
  %v4_cc18 = zext i8 %v3_cc18 to i32
  %v1_cc1c = add nsw i32 %v4_cc18, -48
  %tmp = icmp ugt i32 %v1_cc1c, 9
  br i1 %tmp, label %dec_label_pc_cc00.loopexit, label %dec_label_pc_cc28

dec_label_pc_cc28:                                ; preds = %dec_label_pc_cc18
  store i32 %v1_cc18, i32* @r7, align 4
  %v3_cc34 = call i32 @function_112d8(i32 13, i32* null)
  store i32 %v2_c994, i32* @r0, align 4
  %v3_cc40 = call i32 @function_11904(i8* %v2_c9b8, i32 %v3_cc34)
  %v2_cc48 = call i32 @function_118dc(i8* %v2_c9b8)
  %v0_cc4c = load i32, i32* @r7, align 4
  %v1_cc50 = load i32, i32* @sl, align 4
  %v2_cc50 = add i32 %v1_cc50, %v2_cc48
  store i32 %v2_cc50, i32* @r0, align 4
  %v2_cc54 = inttoptr i32 %v2_cc50 to i8*
  %v3_cc54 = call i32 @function_11904(i8* %v2_cc54, i32 %v0_cc4c)
  %v2_cc5c = call i32 @function_118dc(i8* %v2_c9b8)
  %v0_cc60 = load i32, i32* @r5, align 4
  store i32 %v2_cc5c, i32* @r4, align 4
  %v2_cc6c = inttoptr i32 %v0_cc60 to i32*
  %v3_cc6c = call i32 @function_112d8(i32 14, i32* %v2_cc6c)
  %v0_cc74 = load i32, i32* @r4, align 4
  %v1_cc74 = load i32, i32* @sl, align 4
  %v2_cc74 = add i32 %v1_cc74, %v0_cc74
  store i32 %v2_cc74, i32* @r0, align 4
  %v2_cc78 = inttoptr i32 %v2_cc74 to i8*
  %v3_cc78 = call i32 @function_11904(i8* %v2_cc78, i32 %v3_cc6c)
  %v3_cc88 = call i32 @function_12100(i32 %v2_c994, i32 %v2_c984, i32 4096)
  %v7_cc8c = icmp eq i32 %v3_cc88, -1
  br i1 %v7_cc8c, label %dec_label_pc_cc00.loopexit, label %dec_label_pc_cc94

dec_label_pc_cc94:                                ; preds = %dec_label_pc_cc28
  %v0_cc94 = load i32, i32* @r5, align 4
  %v2_cc9c = inttoptr i32 %v0_cc94 to i32*
  %v3_cc9c = call i32 @function_112d8(i32 13, i32* %v2_cc9c)
  store i32 %v2_c994, i32* @r0, align 4
  %v3_cca8 = call i32 @function_11904(i8* %v2_c9b8, i32 %v3_cc9c)
  %v2_ccb0 = call i32 @function_118dc(i8* %v2_c9b8)
  %v0_ccb4 = load i32, i32* @r7, align 4
  %v1_ccb8 = load i32, i32* @sl, align 4
  %v2_ccb8 = add i32 %v1_ccb8, %v2_ccb0
  store i32 %v2_ccb8, i32* @r0, align 4
  %v2_ccbc = inttoptr i32 %v2_ccb8 to i8*
  %v3_ccbc = call i32 @function_11904(i8* %v2_ccbc, i32 %v0_ccb4)
  %v2_ccc4 = call i32 @function_118dc(i8* %v2_c9b8)
  %v0_ccc8 = load i32, i32* @r5, align 4
  store i32 %v2_ccc4, i32* @r4, align 4
  %v2_ccd4 = inttoptr i32 %v0_ccc8 to i32*
  %v3_ccd4 = call i32 @function_112d8(i32 15, i32* %v2_ccd4)
  %v0_ccdc = load i32, i32* @r4, align 4
  %v1_ccdc = load i32, i32* @sl, align 4
  %v2_ccdc = add i32 %v1_ccdc, %v0_ccdc
  store i32 %v2_ccdc, i32* @r0, align 4
  %v2_cce0 = inttoptr i32 %v2_ccdc to i8*
  %v3_cce0 = call i32 @function_11904(i8* %v2_cce0, i32 %v3_ccd4)
  %v1_cce8 = call i32 @function_12598(i32 %v2_c994)
  store i32 %v1_cce8, i32* @r8, align 4
  %v2_ccec = icmp eq i32 %v1_cce8, 0
  br i1 %v2_ccec, label %dec_label_pc_cc00.loopexit, label %dec_label_pc_ccf4.preheader

dec_label_pc_ccf4.preheader:                      ; preds = %dec_label_pc_cc94
  %v1_ccf838 = inttoptr i32 %v1_cce8 to i32*
  %v2_ccf839 = call i32 @function_126dc(i32* %v1_ccf838)
  store i32 %v2_ccf839, i32* @r6, align 4
  %v2_ccfc41 = icmp eq i32 %v2_ccf839, 0
  store i32 4096, i32* @r1, align 4
  store i32 %v2_c984, i32* @r0, align 4
  br i1 %v2_ccfc41, label %dec_label_pc_cdfc, label %dec_label_pc_cd0cthread-pre-split

dec_label_pc_ccf4.loopexit:                       ; preds = %dec_label_pc_cd14, %dec_label_pc_cdac
  %v0_ccf4 = load i32, i32* @r8, align 4
  %v1_ccf8 = inttoptr i32 %v0_ccf4 to i32*
  %v2_ccf8 = call i32 @function_126dc(i32* %v1_ccf8)
  store i32 %v2_ccf8, i32* @r6, align 4
  %v2_ccfc = icmp eq i32 %v2_ccf8, 0
  store i32 4096, i32* @r1, align 4
  store i32 %v2_c984, i32* @r0, align 4
  br i1 %v2_ccfc, label %dec_label_pc_cdfc, label %dec_label_pc_cd0cthread-pre-split

dec_label_pc_cd0cthread-pre-split:                ; preds = %dec_label_pc_ccf4.preheader, %dec_label_pc_ccf4.loopexit
  %v0_cd0c.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_cd0c

dec_label_pc_cd0c:                                ; preds = %dec_label_pc_cd0cthread-pre-split, %dec_label_pc_cdd4
  %v0_cd0c = phi i32 [ %v0_cd0c.pr, %dec_label_pc_cd0cthread-pre-split ], [ 1, %dec_label_pc_cdd4 ]
  %v2_cd0c = icmp eq i32 %v0_cd0c, 0
  br i1 %v2_cd0c, label %dec_label_pc_cd14, label %dec_label_pc_cdfc

dec_label_pc_cd14:                                ; preds = %dec_label_pc_cd0c
  %v0_cd14 = call i32 @function_11970()
  %v0_cd18 = load i32, i32* @r5, align 4
  %v2_cd20 = inttoptr i32 %v0_cd18 to i32*
  %v3_cd20 = call i32 @function_112d8(i32 13, i32* %v2_cd20)
  store i32 %v2_c994, i32* @r0, align 4
  %v3_cd2c = call i32 @function_11904(i8* %v2_c9b8, i32 %v3_cd20)
  %v2_cd34 = call i32 @function_118dc(i8* %v2_c9b8)
  %v0_cd38 = load i32, i32* @r7, align 4
  %v1_cd3c = load i32, i32* @sl, align 4
  %v2_cd3c = add i32 %v1_cd3c, %v2_cd34
  store i32 %v2_cd3c, i32* @r0, align 4
  %v2_cd40 = inttoptr i32 %v2_cd3c to i8*
  %v3_cd40 = call i32 @function_11904(i8* %v2_cd40, i32 %v0_cd38)
  %v2_cd48 = call i32 @function_118dc(i8* %v2_c9b8)
  %v0_cd4c = load i32, i32* @r5, align 4
  store i32 %v2_cd48, i32* @r4, align 4
  %v2_cd58 = inttoptr i32 %v0_cd4c to i32*
  %v3_cd58 = call i32 @function_112d8(i32 15, i32* %v2_cd58)
  %v0_cd60 = load i32, i32* @r4, align 4
  %v1_cd60 = load i32, i32* @sl, align 4
  %v2_cd60 = add i32 %v1_cd60, %v0_cd60
  store i32 %v2_cd60, i32* @r0, align 4
  %v2_cd64 = inttoptr i32 %v2_cd60 to i8*
  %v3_cd64 = call i32 @function_11904(i8* %v2_cd64, i32 %v3_cd58)
  %v2_cd6c = call i32 @function_118dc(i8* %v2_c9b8)
  %v1_cd74 = load i32, i32* @sl, align 4
  %v2_cd74 = add i32 %v1_cd74, %v2_cd6c
  store i32 %v2_cd74, i32* @r0, align 4
  %v2_cd78 = inttoptr i32 %v2_cd74 to i8*
  %v3_cd78 = call i32 @function_11904(i8* %v2_cd78, i32 ptrtoint (i32* @global_var_1770c.59 to i32))
  %v2_cd80 = call i32 @function_118dc(i8* %v2_c9b8)
  %v0_cd84 = load i32, i32* @r6, align 4
  %v1_cd84 = add i32 %v0_cd84, 11
  %v1_cd88 = load i32, i32* @sl, align 4
  %v2_cd88 = add i32 %v1_cd88, %v2_cd80
  store i32 %v2_cd88, i32* @r0, align 4
  %v2_cd8c = inttoptr i32 %v2_cd88 to i8*
  %v3_cd8c = call i32 @function_11904(i8* %v2_cd8c, i32 %v1_cd84)
  %v3_cd9c = call i32 @function_12100(i32 %v2_c994, i32 %v2_c984, i32 4096)
  %v7_cda0 = icmp eq i32 %v3_cd9c, -1
  br i1 %v7_cda0, label %dec_label_pc_ccf4.loopexit, label %dec_label_pc_cdac

dec_label_pc_cdac:                                ; preds = %dec_label_pc_cd14
  %v2_cdac = call i32 @function_118dc(i8* %v2_c9a4)
  store i32 %v2_cdac, i32* @r1, align 4
  %v4_cdc0 = call i32 @function_11c2c(i8* %v2_c9a4, i32 %v2_cdac, i32 %v2_cbd0.pre-phi)
  %v7_cdc4 = icmp eq i32 %v4_cdc0, -1
  br i1 %v7_cdc4, label %dec_label_pc_ccf4.loopexit, label %dec_label_pc_cdd4

dec_label_pc_cdd4:                                ; preds = %dec_label_pc_cdac
  %v0_cdcc = load i32, i32* @r7, align 4
  %v2_cdd4 = inttoptr i32 %v0_cdcc to i8*
  %v3_cdd4 = call i32 @function_11a00(i8* %v2_cdd4, i32 10)
  %v2_cddc = call i32 @function_12168(i32 %v3_cdd4, i32 9)
  %v0_cde0 = load i32, i32* @r8, align 4
  %v1_cde4 = inttoptr i32 %v0_cde0 to i32*
  %v2_cde4 = call i32 @function_126dc(i32* %v1_cde4)
  store i32 %v2_cde4, i32* @r6, align 4
  %v2_cde8 = icmp eq i32 %v2_cde4, 0
  store i32 1, i32* @r5, align 4
  store i32 4096, i32* @r1, align 4
  store i32 %v2_c984, i32* @r0, align 4
  br i1 %v2_cde8, label %dec_label_pc_cdfc, label %dec_label_pc_cd0c

dec_label_pc_cdfc:                                ; preds = %dec_label_pc_ccf4.loopexit, %dec_label_pc_cdd4, %dec_label_pc_cd0c, %dec_label_pc_ccf4.preheader
  %v0_cdfc = load i32, i32* @r8, align 4
  %v1_ce00 = inttoptr i32 %v0_cdfc to i32*
  %v2_ce00 = call i32 @function_123d0(i32* %v1_ce00)
  %v0_ce04 = load i32, i32* @sb, align 4
  %v1_ce08 = inttoptr i32 %v0_ce04 to i32*
  %v2_ce08 = call i32 @function_126dc(i32* %v1_ce08)
  %v2_ce0c = icmp eq i32 %v2_ce08, 0
  br i1 %v2_ce0c, label %dec_label_pc_ce14, label %dec_label_pc_cc10

dec_label_pc_ce14:                                ; preds = %dec_label_pc_cc00.loopexit, %dec_label_pc_cdfc, %dec_label_pc_cc10, %dec_label_pc_cc00.preheader
  %v0_ce14 = load i32, i32* @sb, align 4
  %v1_ce18 = inttoptr i32 %v0_ce14 to i32*
  %v2_ce18 = call i32 @function_123d0(i32* %v1_ce18)
  %v0_ce1c = load i32, i32* @r5, align 4
  %v1_ce1c = urem i32 %v0_ce1c, 256
  br label %dec_label_pc_ce20

dec_label_pc_ce20:                                ; preds = %dec_label_pc_cbe0, %dec_label_pc_ce14
  %storemerge = phi i32 [ %v1_ce1c, %dec_label_pc_ce14 ], [ 0, %dec_label_pc_cbe0 ]
  store i32 %storemerge, i32* @r4, align 4
  %v1_ce24 = call i32 @function_14488(i32 1)
  %v1_ce2c = call i32 @function_112fc(i32 13)
  %v1_ce34 = call i32 @function_112fc(i32 14)
  %v1_ce3c = call i32 @function_112fc(i32 15)
  br label %dec_label_pc_ce40

dec_label_pc_ce40:                                ; preds = %bb, %dec_label_pc_ce80, %dec_label_pc_ce20
  %v0_ce40 = load i32, i32* @r4, align 4
  store i32 %v3_c93c, i32* @r4, align 4
  store i32 %v6_c93c, i32* @r5, align 4
  store i32 %v9_c93c, i32* @r6, align 4
  store i32 %v12_c93c, i32* @r7, align 4
  store i32 %v15_c93c, i32* @r8, align 4
  store i32 %v18_c93c, i32* @sb, align 4
  store i32 %v21_c93c, i32* @sl, align 4
  store i32 %v24_c93c, i32* @fp, align 4
  store i32 %v27_c93c, i32* @lr, align 4
  ret i32 %v0_ce40

dec_label_pc_ce54:                                ; preds = %dec_label_pc_cb34
  %v1_ce54 = add i32 %v0_ce54, 1
  %v7_ce58 = icmp eq i32 %v0_ce54, 0
  br i1 %v7_ce58, label %dec_label_pc_ce60, label %dec_label_pc_cb3c

dec_label_pc_ce60:                                ; preds = %dec_label_pc_ce54
  %v1_ce60 = add i32 %v0_cb44, 3
  %v2_ce60 = inttoptr i32 %v1_ce60 to i8*
  %v3_ce60 = load i8, i8* %v2_ce60, align 1
  %v7_ce64 = icmp eq i8 %v3_ce60, 65
  br i1 %v7_ce64, label %dec_label_pc_ce78, label %dec_label_pc_ce6c

dec_label_pc_ce6c:                                ; preds = %dec_label_pc_ce60, %dec_label_pc_ce78
  %v0_cb4c82 = phi i32 [ %v0_cb4c83, %dec_label_pc_ce60 ], [ 1, %dec_label_pc_ce78 ]
  br label %dec_label_pc_cb14.backedge

dec_label_pc_cb14.backedge:                       ; preds = %dec_label_pc_ce6c, %dec_label_pc_cb40
  %v0_cb4c81 = phi i32 [ %v0_cb4c82, %dec_label_pc_ce6c ], [ %v0_cb4c83, %dec_label_pc_cb40 ]
  %v0_ce5473 = phi i32 [ %v1_ce54, %dec_label_pc_ce6c ], [ %v0_cb40, %dec_label_pc_cb40 ]
  %v0_cb34.pr70 = phi i32 [ 0, %dec_label_pc_ce6c ], [ %v0_cb34.pr71, %dec_label_pc_cb40 ]
  %v0_cb14 = add i32 %v0_cb44, 1
  %v1_cb14 = add i32 %v0_cb44, 3
  %v2_cb14 = inttoptr i32 %v1_cb14 to i8*
  %v3_cb14 = load i8, i8* %v2_cb14, align 1
  %v2_cb18 = icmp eq i8 %v3_cb14, 0
  %v1_cb1c = add i32 %v0_cb1c78, 1
  br i1 %v2_cb18, label %dec_label_pc_cb4c, label %dec_label_pc_cb24

dec_label_pc_ce78:                                ; preds = %dec_label_pc_ce60
  store i32 1, i32* @lr, align 4
  br label %dec_label_pc_ce6c

dec_label_pc_ce80:                                ; preds = %dec_label_pc_cbc4
  %v1_ce84 = call i32 @function_112fc(i32 13)
  %v1_ce8c = call i32 @function_112fc(i32 14)
  %v1_ce94 = call i32 @function_112fc(i32 15)
  %v1_ce9c = call i32 @function_112fc(i32 17)
  br label %dec_label_pc_ce40

dec_label_pc_cea4:                                ; preds = %dec_label_pc_c93c
  store i8 48, i8* %stack_var_-72, align 1
  br label %dec_label_pc_c9e8

; uselistorder directives
  uselistorder i32 %v1_cb1c, { 1, 0 }
  uselistorder i8 %v3_cb14, { 1, 0 }
  uselistorder i32 %v0_cb4c81, { 1, 0 }
  uselistorder i32 %v1_ce54, { 1, 0 }
  uselistorder i32 %v2_ce08, { 1, 0 }
  uselistorder i32 %v1_cb78, { 1, 0 }
  uselistorder i32 %v0_cb8430, { 1, 0 }
  uselistorder i32 %v1_cb9c, { 0, 3, 1, 2 }
  uselistorder i32 %v0_cb40, { 1, 0 }
  uselistorder i32 %v0_cb1c78, { 1, 0 }
  uselistorder i32 %v0_ce54, { 4, 3, 0, 1, 2 }
  uselistorder i32 %v0_cb4c83, { 1, 2, 0 }
  uselistorder i32 %v1_cb1c54, { 1, 0 }
  uselistorder i32 %v2_cb00, { 1, 0 }
  uselistorder i32 %v1_cafc, { 3, 1, 0, 2, 4 }
  uselistorder i32 %v1_cabc, { 0, 2, 1 }
  uselistorder i32 %v0_cabc16, { 1, 0 }
  uselistorder i32 %v1_ca88, { 0, 2, 3, 4, 5, 6, 1 }
  uselistorder i32 %v2_ca18, { 1, 2, 0 }
  uselistorder i32 %v0_c9c0, { 1, 0 }
  uselistorder i32 %v2_c9bc, { 1, 0, 2 }
  uselistorder i8* %v2_c9a4, { 1, 0, 2 }
  uselistorder i32 %v2_c984, { 1, 2, 3, 0, 4, 5 }
  uselistorder i8* %stack_var_-585, { 1, 4, 0, 2, 3 }
  uselistorder i8* %stack_var_-72, { 2, 0, 1 }
  uselistorder i32* %stack_var_-56, { 0, 1, 2, 4, 3 }
  uselistorder i32 (i8*, i32, i32)* @function_11b3c, { 1, 0 }
  uselistorder label %dec_label_pc_ce6c, { 1, 0 }
  uselistorder label %dec_label_pc_ce40, { 1, 2, 0 }
  uselistorder label %dec_label_pc_ce20, { 1, 0 }
  uselistorder label %dec_label_pc_ce14, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_cdfc, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_cd0c, { 1, 0 }
  uselistorder label %dec_label_pc_cd0cthread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_ccf4.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_cc10, { 1, 0 }
  uselistorder label %dec_label_pc_cc10.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_cc00.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_cb98, { 2, 1, 0 }
  uselistorder label %dec_label_pc_cb40, { 2, 0, 1 }
  uselistorder label %dec_label_pc_cb24, { 1, 0 }
  uselistorder label %dec_label_pc_cac8, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_ca2c.backedge, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_ca7c, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_ca44, { 1, 0 }
  uselistorder label %dec_label_pc_c9e8, { 1, 0 }
}

define i32 @function_ced0(i32 %arg1) local_unnamed_addr {
dec_label_pc_ced0:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-8480 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-224 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-4328 = alloca i32, align 4
  %v3_ced0 = load i32, i32* @r4, align 4
  %v6_ced0 = load i32, i32* @r5, align 4
  %v9_ced0 = load i32, i32* @r6, align 4
  %v12_ced0 = load i32, i32* @r7, align 4
  %v15_ced0 = load i32, i32* @r8, align 4
  %v18_ced0 = load i32, i32* @sb, align 4
  %v21_ced0 = load i32, i32* @sl, align 4
  %v24_ced0 = load i32, i32* @fp, align 4
  %v27_ced0 = load i32, i32* @lr, align 4
  %v2_cee0 = call i32 @function_1201c(i32* null)
  store i32 %v2_cee0, i32* @r0, align 4
  store i32 %v2_cee0, i32* @r7, align 4
  %v0_cee8 = call i32 @function_1208c()
  %v7_ceec = icmp eq i32 %v0_cee8, -1
  %. = zext i1 %v7_ceec to i32
  %tmp136 = icmp slt i32 %v0_cee8, 1
  %storemerge96 = select i1 %tmp136, i32 %., i32 1
  store i32 %storemerge96, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1a2dc.61 to i32), i32* %r3.global-to-local, align 4
  %v2_cf08 = icmp eq i32 %storemerge96, 0
  store i32 %v0_cee8, i32* @global_var_1a2dc.61, align 4
  br i1 %v2_cf08, label %dec_label_pc_cf24, label %dec_label_pc_cf14

dec_label_pc_cf14:                                ; preds = %dec_label_pc_d040, %dec_label_pc_cf24, %dec_label_pc_ced0
  %v1_cf20 = phi i32 [ %v2_cfdc, %dec_label_pc_cf24 ], [ %v0_cee8, %dec_label_pc_ced0 ], [ 0, %dec_label_pc_d040 ]
  store i32 %v3_ced0, i32* @r4, align 4
  store i32 %v6_ced0, i32* @r5, align 4
  store i32 %v9_ced0, i32* @r6, align 4
  store i32 %v12_ced0, i32* @r7, align 4
  store i32 %v15_ced0, i32* @r8, align 4
  store i32 %v18_ced0, i32* @sb, align 4
  store i32 %v21_ced0, i32* @sl, align 4
  store i32 %v24_ced0, i32* @fp, align 4
  store i32 %v27_ced0, i32* @lr, align 4
  ret i32 %v1_cf20

dec_label_pc_cf24:                                ; preds = %dec_label_pc_ced0
  %v1_cf28 = call i32 @function_14488(i32 5)
  store i32 4096, i32* @r0, align 4
  %v0_cf30 = call i32 @function_12dc4()
  store i32 ptrtoint (i32* @global_var_18250.63 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a2d8.65 to i32), i32* %r1.global-to-local, align 4
  store i32 %v0_cf30, i32* %r2.global-to-local, align 4
  %v0_cf40 = load i32, i32* @r5, align 4
  %v1_cf40 = trunc i32 %v0_cf40 to i8
  %v3_cf40 = inttoptr i32 %v0_cf30 to i8*
  store i8 %v1_cf40, i8* %v3_cf40, align 1
  %v0_cf48 = load i32, i32* @r5, align 4
  %v1_cf48 = load i32, i32* %r3.global-to-local, align 4
  %v2_cf48 = inttoptr i32 %v1_cf48 to i32*
  store i32 %v0_cf48, i32* %v2_cf48, align 4
  %v0_cf4c = load i32, i32* %r2.global-to-local, align 4
  %v1_cf4c = load i32, i32* %r1.global-to-local, align 4
  %v2_cf4c = inttoptr i32 %v1_cf4c to i32*
  store i32 %v0_cf4c, i32* %v2_cf4c, align 4
  %v1_cf50 = call i32 @function_1139c(i32 13)
  %v1_cf58 = call i32 @function_1139c(i32 14)
  %v2_cf60 = ptrtoint i32* %stack_var_-4328 to i32
  store i32 %v2_cf60, i32* %r2.global-to-local, align 4
  %v0_cf64 = load i32, i32* @r5, align 4
  store i32 %v0_cf64, i32* %r1.global-to-local, align 4
  %v2_cf70 = inttoptr i32 %v0_cf64 to i32*
  %v3_cf70 = call i32 @function_112d8(i32 13, i32* %v2_cf70)
  %v1_cf78 = add i32 %v2_cf60, -56
  store i32 %v1_cf78, i32* %r3.global-to-local, align 4
  store i32 %v3_cf70, i32* %r1.global-to-local, align 4
  store i32 %v1_cf78, i32* @r0, align 4
  %v2_cf88 = inttoptr i32 %v1_cf78 to i8*
  %v3_cf88 = call i32 @function_11904(i8* %v2_cf88, i32 %v3_cf70)
  store i32 %v3_cf88, i32* @r0, align 4
  %v2_cf90 = add i32 %v3_cf88, %v1_cf78
  store i32 %v2_cf90, i32* @r4, align 4
  %v0_cf94 = call i32 @function_12008()
  %v2_cf9c = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_cf9c, i32* %r2.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v3_cfa4 = trunc i32 %v0_cf94 to i8
  %v4_cfa4 = call i32 @function_11d3c(i8 %v3_cfa4, i32 10, i32 %v2_cf9c)
  store i32 %v4_cfa4, i32* %r1.global-to-local, align 4
  %v0_cfac = load i32, i32* @r4, align 4
  store i32 %v0_cfac, i32* @r0, align 4
  %v2_cfb0 = inttoptr i32 %v0_cfac to i8*
  %v3_cfb0 = call i32 @function_11904(i8* %v2_cfb0, i32 %v4_cfa4)
  %v0_cfb4 = load i32, i32* @r5, align 4
  store i32 %v0_cfb4, i32* %r1.global-to-local, align 4
  %v1_cfb8 = load i32, i32* @r4, align 4
  %v2_cfb8 = add i32 %v1_cfb8, %v3_cfb0
  store i32 %v2_cfb8, i32* @r4, align 4
  %v2_cfc0 = inttoptr i32 %v0_cfb4 to i32*
  %v3_cfc0 = call i32 @function_112d8(i32 14, i32* %v2_cfc0)
  store i32 %v3_cfc0, i32* %r1.global-to-local, align 4
  %v0_cfc8 = load i32, i32* @r4, align 4
  store i32 %v0_cfc8, i32* @r0, align 4
  %v2_cfcc = inttoptr i32 %v0_cfc8 to i8*
  %v3_cfcc = call i32 @function_11904(i8* %v2_cfcc, i32 %v3_cfc0)
  %v0_cfd0 = load i32, i32* @r5, align 4
  store i32 %v0_cfd0, i32* %r1.global-to-local, align 4
  store i32 %v3_cfcc, i32* @r6, align 4
  %v2_cfdc = call i32 @function_11fa8(i32 %v1_cf78, i32 %v0_cfd0)
  %v7_cfe0 = icmp eq i32 %v2_cfdc, -1
  br i1 %v7_cfe0, label %dec_label_pc_cf14, label %dec_label_pc_cfe8

dec_label_pc_cfe8:                                ; preds = %dec_label_pc_cf24
  %v1_cfe8 = call i32 @function_1239c(i32 %v2_cfdc)
  %v1_cff0 = call i32 @function_112fc(i32 13)
  %v1_cff8 = call i32 @function_112fc(i32 14)
  store i32 ptrtoint (i32* @global_var_1a2d8.65 to i32), i32* @lr, align 4
  %v2_d004 = load i32, i32* @global_var_1a2d8.65, align 4
  store i32 %v2_d004, i32* %r1.global-to-local, align 4
  store i32 4095, i32* %r2.global-to-local, align 4
  %v3_d010 = call i32 @function_12100(i32 %v1_cf78, i32 %v2_d004, i32 4095)
  %v7_d014 = icmp eq i32 %v3_d010, -1
  br i1 %v7_d014, label %.thread9, label %bb139

bb139:                                            ; preds = %dec_label_pc_cfe8
  store i32 ptrtoint (i32* @global_var_1a2d8.65 to i32), i32* %r1.global-to-local, align 4
  %v3_d01c = load i32, i32* @global_var_1a2d8.65, align 4
  store i32 %v3_d01c, i32* %r3.global-to-local, align 4
  %v1_d020 = load i32, i32* @r5, align 4
  %v2_d020 = trunc i32 %v1_d020 to i8
  %v5_d020 = add i32 %v3_d01c, %v3_d010
  %v6_d020 = inttoptr i32 %v5_d020 to i8*
  store i8 %v2_d020, i8* %v6_d020, align 1
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_cfe8, %bb139
  store i32 %v1_cf78, i32* %r2.global-to-local, align 4
  %v0_d028 = load i32, i32* @r6, align 4
  %v1_d028 = load i32, i32* @r4, align 4
  %v1_cf78.neg = sub i32 56, %v2_cf60
  %v2_d028 = add i32 %v1_cf78.neg, %v0_d028
  %v2_d02c = add i32 %v2_d028, %v1_d028
  store i32 %v2_d02c, i32* @r1, align 4
  store i32 %v1_cf78, i32* @r0, align 4
  %v0_d034 = call i32 @function_11970()
  %v0_d038 = load i32, i32* @r5, align 4
  store i32 400, i32* @sl, align 4
  %v2_d0d0 = ptrtoint i32* %stack_var_-304 to i32
  %v2_d340 = ptrtoint i32* %stack_var_-224 to i32
  %v2_d34c = bitcast i32* %stack_var_-224 to i8*
  %v2_d390 = ptrtoint i32* %stack_var_-288 to i32
  %v2_d394 = bitcast i32* %stack_var_-288 to i8*
  %v2_d4e0 = ptrtoint i32* %stack_var_-44 to i32
  %v2_d4ec = ptrtoint i32* %stack_var_-48 to i32
  %v2_d504 = ptrtoint i32* %stack_var_-8480 to i32
  %v2_d250 = ptrtoint i32* %stack_var_-144 to i32
  %v2_d218 = ptrtoint i32* %stack_var_-128 to i32
  %v2_d1e0 = ptrtoint i32* %stack_var_-112 to i32
  %v2_d1ac = ptrtoint i32* %stack_var_-96 to i32
  %v2_d174 = ptrtoint i32* %stack_var_-80 to i32
  %v2_d12c = ptrtoint i32* %stack_var_-64 to i32
  br label %dec_label_pc_d040

dec_label_pc_d040:                                ; preds = %dec_label_pc_d308, %.thread9
  %stack_var_-8484.0 = phi i32 [ %v0_d038, %.thread9 ], [ %stack_var_-8484.3, %dec_label_pc_d308 ]
  %v1_d044 = call i32 @function_1139c(i32 13)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_d050 = call i32 @function_112d8(i32 13, i32* null)
  %v1_d054 = call i32 @function_12598(i32 %v3_d050)
  store i32 %v1_d054, i32* @fp, align 4
  %v2_d058 = icmp eq i32 %v1_d054, 0
  br i1 %v2_d058, label %dec_label_pc_cf14, label %dec_label_pc_d060

dec_label_pc_d060:                                ; preds = %dec_label_pc_d040
  %v1_d064 = call i32 @function_112fc(i32 13)
  %v1_d070 = call i32 @function_c93c(i32 58811)
  %v1_d07c = call i32 @function_c93c(i32 50951)
  %v1_d088 = call i32 @function_c93c(i32 14853)
  %v1_d090 = call i32 @function_c93c(i32 20480)
  %v1_d09c = call i32 @function_c93c(i32 47873)
  %v1_d0a8 = call i32 @function_c93c(i32 57616)
  %v1_d0b4 = call i32 @function_c93c(i32 2842)
  %v1_d0c0 = call i32 @function_c93c(i32 10522)
  %v1_d0c8 = call i32 @function_c93c(i32 5632)
  store i32 %v2_d0d0, i32* @lr, align 4
  store i32 20480, i32* %r3.global-to-local, align 4
  store i32 24465, i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_d118 = call i32 @function_12b7c(i32 2, i32 1, i32 0)
  %v7_d11c = icmp eq i32 %v3_d118, -1
  store i32 %v3_d118, i32* @r4, align 4
  br i1 %v7_d11c, label %dec_label_pc_d144, label %dec_label_pc_d128

dec_label_pc_d128:                                ; preds = %dec_label_pc_d060
  store i32 %v2_d12c, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_d134 = call i32 @function_1292c(i32 %v3_d118, i32 %v2_d12c, i32 16)
  %v0_d138 = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_d140 = call i32 @function_12a18(i32 %v0_d138, i32 1)
  br label %dec_label_pc_d144

dec_label_pc_d144:                                ; preds = %dec_label_pc_d060, %dec_label_pc_d128
  %v1_d148 = call i32 @function_c93c(i32 5888)
  %v2_d14c = icmp eq i32 %v1_d148, 0
  br i1 %v2_d14c, label %dec_label_pc_d60c, label %dec_label_pc_d154

dec_label_pc_d154:                                ; preds = %dec_label_pc_d630, %dec_label_pc_d620, %dec_label_pc_d60c, %dec_label_pc_d144, %dec_label_pc_d644
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_d160 = call i32 @function_12b7c(i32 2, i32 1, i32 0)
  %v7_d164 = icmp eq i32 %v3_d160, -1
  store i32 %v3_d160, i32* %r4.global-to-local, align 4
  br i1 %v7_d164, label %dec_label_pc_d18c, label %dec_label_pc_d170

dec_label_pc_d170:                                ; preds = %dec_label_pc_d154
  store i32 %v2_d174, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_d17c = call i32 @function_1292c(i32 %v3_d160, i32 %v2_d174, i32 16)
  %v0_d180 = load i32, i32* %r4.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_d188 = call i32 @function_12a18(i32 %v0_d180, i32 1)
  br label %dec_label_pc_d18c

dec_label_pc_d18c:                                ; preds = %dec_label_pc_d154, %dec_label_pc_d170
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_d198 = call i32 @function_12b7c(i32 2, i32 1, i32 0)
  %v7_d19c = icmp eq i32 %v3_d198, -1
  store i32 %v3_d198, i32* %r4.global-to-local, align 4
  br i1 %v7_d19c, label %dec_label_pc_d1c4, label %dec_label_pc_d1a8

dec_label_pc_d1a8:                                ; preds = %dec_label_pc_d18c
  store i32 %v2_d1ac, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_d1b4 = call i32 @function_1292c(i32 %v3_d198, i32 %v2_d1ac, i32 16)
  %v0_d1b8 = load i32, i32* %r4.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_d1c0 = call i32 @function_12a18(i32 %v0_d1b8, i32 1)
  br label %dec_label_pc_d1c4

dec_label_pc_d1c4:                                ; preds = %dec_label_pc_d18c, %dec_label_pc_d1a8
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_d1d0 = call i32 @function_12b7c(i32 2, i32 1, i32 0)
  %v7_d1d4 = icmp eq i32 %v3_d1d0, -1
  store i32 %v3_d1d0, i32* %r4.global-to-local, align 4
  br i1 %v7_d1d4, label %dec_label_pc_d1f8, label %dec_label_pc_d1e0

dec_label_pc_d1e0:                                ; preds = %dec_label_pc_d1c4
  store i32 %v2_d1e0, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_d1e8 = call i32 @function_1292c(i32 %v3_d1d0, i32 %v2_d1e0, i32 16)
  %v0_d1ec = load i32, i32* %r4.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_d1f4 = call i32 @function_12a18(i32 %v0_d1ec, i32 1)
  br label %dec_label_pc_d1f8

dec_label_pc_d1f8:                                ; preds = %dec_label_pc_d1c4, %dec_label_pc_d1e0
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_d204 = call i32 @function_12b7c(i32 2, i32 1, i32 0)
  %v7_d208 = icmp eq i32 %v3_d204, -1
  store i32 %v3_d204, i32* %r4.global-to-local, align 4
  br i1 %v7_d208, label %dec_label_pc_d230, label %dec_label_pc_d214

dec_label_pc_d214:                                ; preds = %dec_label_pc_d1f8
  store i32 %v2_d218, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_d220 = call i32 @function_1292c(i32 %v3_d204, i32 %v2_d218, i32 16)
  %v0_d224 = load i32, i32* %r4.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_d22c = call i32 @function_12a18(i32 %v0_d224, i32 1)
  br label %dec_label_pc_d230

dec_label_pc_d230:                                ; preds = %dec_label_pc_d1f8, %dec_label_pc_d214
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_d23c = call i32 @function_12b7c(i32 2, i32 1, i32 0)
  %v7_d240 = icmp eq i32 %v3_d23c, -1
  store i32 %v3_d23c, i32* @r4, align 4
  br i1 %v7_d240, label %dec_label_pc_d268.preheader, label %dec_label_pc_d24c

dec_label_pc_d24c:                                ; preds = %dec_label_pc_d230
  store i32 %v2_d250, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_d258 = call i32 @function_1292c(i32 %v3_d23c, i32 %v2_d250, i32 16)
  %v0_d25c = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_d264 = call i32 @function_12a18(i32 %v0_d25c, i32 1)
  br label %dec_label_pc_d268.preheader

dec_label_pc_d268.preheader:                      ; preds = %dec_label_pc_d24c, %dec_label_pc_d230
  %v0_d26860 = load i32, i32* @fp, align 4
  %v1_d26c61 = inttoptr i32 %v0_d26860 to i32*
  %v2_d26c62 = call i32 @function_126dc(i32* %v1_d26c61)
  %v2_d27064 = icmp eq i32 %v2_d26c62, 0
  br i1 %v2_d27064, label %dec_label_pc_d308, label %dec_label_pc_d278.preheader

dec_label_pc_d278.preheader:                      ; preds = %dec_label_pc_d268.preheader, %dec_label_pc_d268.backedge
  %v0_d27872 = phi i32 [ %v2_d26c, %dec_label_pc_d268.backedge ], [ %v2_d26c62, %dec_label_pc_d268.preheader ]
  %stack_var_-8484.165 = phi i32 [ %stack_var_-8484.1.be, %dec_label_pc_d268.backedge ], [ %stack_var_-8484.0, %dec_label_pc_d268.preheader ]
  br label %dec_label_pc_d278

dec_label_pc_d278:                                ; preds = %dec_label_pc_d278.preheader, %dec_label_pc_d2f0
  %v0_d288 = phi i32 [ %v2_d2fc, %dec_label_pc_d2f0 ], [ %v0_d27872, %dec_label_pc_d278.preheader ]
  %stack_var_-8484.2 = phi i32 [ %v1_d29c, %dec_label_pc_d2f0 ], [ %stack_var_-8484.165, %dec_label_pc_d278.preheader ]
  %v1_d278 = add i32 %v0_d288, 11
  %v2_d278 = inttoptr i32 %v1_d278 to i8*
  %v3_d278 = load i8, i8* %v2_d278, align 1
  %v4_d278 = zext i8 %v3_d278 to i32
  %v1_d27c = add nsw i32 %v4_d278, -48
  store i32 %v1_d27c, i32* %r3.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_d27c, 9
  br i1 %tmp, label %dec_label_pc_d268.backedge, label %dec_label_pc_d288

dec_label_pc_d288:                                ; preds = %dec_label_pc_d278
  store i32 %v1_d278, i32* @r6, align 4
  store i32 %v1_d278, i32* @r0, align 4
  %v1_d290 = call i32 @function_141d4(i32 %v1_d278)
  %v0_d298 = load i32, i32* @sl, align 4
  %v1_d29c = add i32 %stack_var_-8484.2, 1
  store i32 %v1_d290, i32* @r8, align 4
  %v5_d2a8 = icmp slt i32 %v0_d298, %v1_d290
  %v2_d318 = call i32 @function_1201c(i32* null)
  br i1 %v5_d2a8, label %dec_label_pc_d314, label %dec_label_pc_d2ac

dec_label_pc_d2ac:                                ; preds = %dec_label_pc_d288
  %v0_d2b4 = load i32, i32* @r7, align 4
  %v2_d2b4 = sub i32 %v2_d318, %v0_d2b4
  %v7_d2bc = icmp slt i32 %v2_d2b4, 601
  br i1 %v7_d2bc, label %dec_label_pc_d2c4, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_d2ac
  store i32 400, i32* @sl, align 4
  br label %dec_label_pc_d268.backedge

dec_label_pc_d2c4:                                ; preds = %dec_label_pc_d2ac
  %v0_d2c4 = load i32, i32* @r8, align 4
  %v7_d2c8 = icmp slt i32 %v0_d2c4, 401
  br i1 %v7_d2c8, label %dec_label_pc_d268.backedge, label %dec_label_pc_d2cc

dec_label_pc_d2cc:                                ; preds = %dec_label_pc_d2c4
  store i32 %v1_d29c, i32* @lr, align 4
  %v3_d2d4 = zext i32 %v1_d29c to i64
  %v4_d2d4 = mul nuw i64 %v3_d2d4, 3435973837
  %v3_d2d81 = udiv i64 %v4_d2d4, 34359738368
  %v3_d2dc3 = mul nuw nsw i64 %v3_d2d81, 8
  %v3_d2dc = trunc i64 %v3_d2dc3 to i32
  store i32 %v3_d2dc, i32* %r3.global-to-local, align 4
  %v2_d2e05 = mul nuw nsw i64 %v3_d2d81, 2
  %v2_d2e0 = trunc i64 %v2_d2e05 to i32
  %v2_d2e4 = add i32 %v3_d2dc, %v2_d2e0
  store i32 %v2_d2e4, i32* %r2.global-to-local, align 4
  %v9_d2e8 = icmp eq i32 %v1_d29c, %v2_d2e4
  br i1 %v9_d2e8, label %dec_label_pc_d2f0, label %dec_label_pc_d268.backedge

dec_label_pc_d2f0:                                ; preds = %dec_label_pc_d2cc
  %v1_d2f4 = call i32 @function_14488(i32 1)
  %v0_d2f8 = load i32, i32* @fp, align 4
  %v1_d2fc = inttoptr i32 %v0_d2f8 to i32*
  %v2_d2fc = call i32 @function_126dc(i32* %v1_d2fc)
  %v2_d300 = icmp eq i32 %v2_d2fc, 0
  br i1 %v2_d300, label %dec_label_pc_d308, label %dec_label_pc_d278

dec_label_pc_d308:                                ; preds = %dec_label_pc_d268.backedge, %dec_label_pc_d2f0, %dec_label_pc_d268.preheader
  %stack_var_-8484.3 = phi i32 [ %stack_var_-8484.0, %dec_label_pc_d268.preheader ], [ %v1_d29c, %dec_label_pc_d2f0 ], [ %stack_var_-8484.1.be, %dec_label_pc_d268.backedge ]
  %v0_d308 = load i32, i32* @fp, align 4
  %v1_d30c = inttoptr i32 %v0_d308 to i32*
  %v2_d30c = call i32 @function_123d0(i32* %v1_d30c)
  br label %dec_label_pc_d040

dec_label_pc_d314:                                ; preds = %dec_label_pc_d288
  %v1_d324 = call i32 @function_1139c(i32 13)
  %v1_d32c = call i32 @function_1139c(i32 14)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_d338 = call i32 @function_112d8(i32 13, i32* null)
  store i32 %v2_d340, i32* @sb, align 4
  store i32 %v3_d338, i32* %r1.global-to-local, align 4
  store i32 %v2_d340, i32* @r0, align 4
  %v3_d34c = call i32 @function_11904(i8* %v2_d34c, i32 %v3_d338)
  %v1_d350 = load i32, i32* @sb, align 4
  %v2_d350 = add i32 %v1_d350, %v3_d34c
  store i32 %v2_d350, i32* %r5.global-to-local, align 4
  %v0_d354 = load i32, i32* @r6, align 4
  store i32 %v0_d354, i32* %r1.global-to-local, align 4
  store i32 %v2_d350, i32* @r0, align 4
  %v2_d35c = inttoptr i32 %v2_d350 to i8*
  %v3_d35c = call i32 @function_11904(i8* %v2_d35c, i32 %v0_d354)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v3_d35c, i32* %r4.global-to-local, align 4
  %v3_d36c = call i32 @function_112d8(i32 14, i32* null)
  store i32 %v3_d36c, i32* %r1.global-to-local, align 4
  %v1_d374 = load i32, i32* %r5.global-to-local, align 4
  %v2_d374 = add i32 %v1_d374, %v3_d35c
  store i32 %v2_d374, i32* @r0, align 4
  %v2_d378 = inttoptr i32 %v2_d374 to i8*
  %v3_d378 = call i32 @function_11904(i8* %v2_d378, i32 %v3_d36c)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_d384 = call i32 @function_112d8(i32 13, i32* null)
  store i32 %v3_d384, i32* %r1.global-to-local, align 4
  store i32 %v2_d390, i32* @r0, align 4
  %v3_d394 = call i32 @function_11904(i8* %v2_d394, i32 %v3_d384)
  %v2_d3a0 = add i32 %v3_d394, %v2_d390
  store i32 %v2_d3a0, i32* @r5, align 4
  store i32 %v2_d3a0, i32* @r0, align 4
  %v0_d3a8 = load i32, i32* @r6, align 4
  store i32 %v0_d3a8, i32* %r1.global-to-local, align 4
  %v2_d3ac = inttoptr i32 %v2_d3a0 to i8*
  %v3_d3ac = call i32 @function_11904(i8* %v2_d3ac, i32 %v0_d3a8)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v3_d3ac, i32* @r4, align 4
  %v3_d3bc = call i32 @function_112d8(i32 29, i32* null)
  store i32 %v3_d3bc, i32* %r1.global-to-local, align 4
  %v0_d3c4 = load i32, i32* @r4, align 4
  %v1_d3c4 = load i32, i32* @r5, align 4
  %v2_d3c4 = add i32 %v1_d3c4, %v0_d3c4
  store i32 %v2_d3c4, i32* @r0, align 4
  %v2_d3c8 = inttoptr i32 %v2_d3c4 to i8*
  %v3_d3c8 = call i32 @function_11904(i8* %v2_d3c8, i32 %v3_d3bc)
  %v1_d3d0 = call i32 @function_112fc(i32 13)
  %v1_d3d8 = call i32 @function_112fc(i32 14)
  store i32 %v1_cf78, i32* %r1.global-to-local, align 4
  store i32 4095, i32* @r2, align 4
  %v3_d3ec = call i32 @function_12100(i32 %v2_d340, i32 %v1_cf78, i32 4095)
  %v7_d3f0 = icmp eq i32 %v3_d3ec, -1
  store i32 %v3_d3ec, i32* @r5, align 4
  br i1 %v7_d3f0, label %dec_label_pc_d4b4, label %dec_label_pc_d3fc

dec_label_pc_d3fc:                                ; preds = %dec_label_pc_d314
  store i32 %v1_cf78, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v4_d404 = add i32 %v3_d3ec, %v1_cf78
  %v5_d404 = inttoptr i32 %v4_d404 to i8*
  store i8 0, i8* %v5_d404, align 1
  %v1_d40c = call i32 @function_1139c(i32 30)
  %v0_d410 = load i32, i32* @r4, align 4
  store i32 %v0_d410, i32* %r1.global-to-local, align 4
  %v2_d418 = inttoptr i32 %v0_d410 to i32*
  %v3_d418 = call i32 @function_112d8(i32 30, i32* %v2_d418)
  %v0_d41c = load i32, i32* @r5, align 4
  %v1_d41c = add i32 %v0_d41c, -1
  store i32 %v1_d41c, i32* @r1, align 4
  store i32 %v3_d418, i32* %r2.global-to-local, align 4
  %v4_d428 = call i32 @function_11c2c(i8* %v2_cf88, i32 %v1_d41c, i32 %v3_d418)
  %v7_d42c = icmp eq i32 %v4_d428, -1
  br i1 %v7_d42c, label %dec_label_pc_d448, label %dec_label_pc_d434

dec_label_pc_d434:                                ; preds = %dec_label_pc_d3fc
  %v1_d438 = call i32 @function_11f74(i32 %v1_cf78)
  %v0_d43c = load i32, i32* @r8, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  %v2_d444 = call i32 @function_12168(i32 %v0_d43c, i32 9)
  br label %dec_label_pc_d448

dec_label_pc_d448:                                ; preds = %dec_label_pc_d3fc, %dec_label_pc_d434
  %v1_d44c = call i32 @function_112fc(i32 30)
  store i32 %v1_d44c, i32* @r0, align 4
  %v0_d450 = call i32 @function_12008()
  store i32 %v0_d450, i32* @r0, align 4
  %v1_d454 = load i32, i32* @r8, align 4
  %v9_d454 = icmp eq i32 %v0_d450, %v1_d454
  br i1 %v9_d454, label %dec_label_pc_d480, label %dec_label_pc_d45c

dec_label_pc_d45c:                                ; preds = %dec_label_pc_d448
  %v0_d45c = call i32 @function_11f60()
  %v1_d460 = load i32, i32* @r8, align 4
  %v9_d460 = icmp eq i32 %v0_d45c, %v1_d460
  br i1 %v9_d460, label %dec_label_pc_d480, label %dec_label_pc_d468

dec_label_pc_d468:                                ; preds = %dec_label_pc_d45c
  store i32 ptrtoint (i32* @global_var_1a2d8.65 to i32), i32* %r3.global-to-local, align 4
  %v2_d470 = load i32, i32* @global_var_1a2d8.65, align 4
  store i32 %v2_d470, i32* %r1.global-to-local, align 4
  %v3_d474 = call i32 @function_11cbc(i8* %v2_cf88, i32 %v2_d470)
  %v2_d478 = icmp eq i32 %v3_d474, 0
  br i1 %v2_d478, label %dec_label_pc_d48c, label %dec_label_pc_d468.dec_label_pc_d480_crit_edge

dec_label_pc_d468.dec_label_pc_d480_crit_edge:    ; preds = %dec_label_pc_d468
  %v0_d484.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_d480

dec_label_pc_d480:                                ; preds = %dec_label_pc_d468.dec_label_pc_d480_crit_edge, %dec_label_pc_d45c, %dec_label_pc_d448
  %v0_d484 = phi i32 [ %v0_d484.pre, %dec_label_pc_d468.dec_label_pc_d480_crit_edge ], [ %v0_d45c, %dec_label_pc_d45c ], [ %v0_d450, %dec_label_pc_d448 ]
  store i32 %v2_d318, i32* @r7, align 4
  store i32 %v0_d484, i32* @sl, align 4
  br label %dec_label_pc_d268.backedge

dec_label_pc_d268.backedge:                       ; preds = %dec_label_pc_d2cc, %dec_label_pc_d2c4, %dec_label_pc_d278, %dec_label_pc_d480, %dec_label_pc_d5dc, %.thread10
  %stack_var_-8484.1.be = phi i32 [ %v1_d29c, %dec_label_pc_d5dc ], [ %v1_d29c, %dec_label_pc_d480 ], [ %v1_d29c, %.thread10 ], [ %stack_var_-8484.2, %dec_label_pc_d278 ], [ %v1_d29c, %dec_label_pc_d2c4 ], [ %v1_d29c, %dec_label_pc_d2cc ]
  %v0_d268 = load i32, i32* @fp, align 4
  %v1_d26c = inttoptr i32 %v0_d268 to i32*
  %v2_d26c = call i32 @function_126dc(i32* %v1_d26c)
  %v2_d270 = icmp eq i32 %v2_d26c, 0
  br i1 %v2_d270, label %dec_label_pc_d308, label %dec_label_pc_d278.preheader

dec_label_pc_d48c:                                ; preds = %dec_label_pc_d468
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_d494 = call i32 @function_11fa8(i32 %v1_cf78, i32 0)
  %v7_d498 = icmp eq i32 %v2_d494, -1
  store i32 %v2_d494, i32* @r4, align 4
  br i1 %v7_d498, label %bb140, label %.thread12

bb140:                                            ; preds = %dec_label_pc_d48c
  store i32 9, i32* %r1.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %dec_label_pc_d48c, %bb140
  store i32 ptrtoint (i32* @global_var_d4ac.68 to i32), i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_d498, i32 ptrtoint (i32* @global_var_12168.67 to i32))
  %v0_d4ac = load i32, i32* @r4, align 4
  %v1_d4b0 = call i32 @function_1239c(i32 %v0_d4ac)
  br label %dec_label_pc_d4b4

dec_label_pc_d4b4:                                ; preds = %dec_label_pc_d314, %.thread12
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_d4bc = call i32 @function_11fa8(i32 %v2_d340, i32 0)
  %v7_d4c0 = icmp eq i32 %v2_d4bc, -1
  store i32 %v2_d4bc, i32* %sl.global-to-local, align 4
  br i1 %v7_d4c0, label %dec_label_pc_d5dc, label %dec_label_pc_d4cc

dec_label_pc_d4cc:                                ; preds = %dec_label_pc_d4b4
  %v1_d4d0 = call i32 @function_1139c(i32 18)
  %v1_d4d8 = call i32 @function_1139c(i32 19)
  store i32 %v2_d4e0, i32* %r1.global-to-local, align 4
  %v3_d4e8 = call i32 @function_112d8(i32 18, i32* nonnull %stack_var_-44)
  store i32 %v2_d4ec, i32* %r1.global-to-local, align 4
  store i32 %v3_d4e8, i32* @r6, align 4
  %v3_d4f8 = call i32 @function_112d8(i32 19, i32* nonnull %stack_var_-48)
  store i32 %v3_d4f8, i32* @r7, align 4
  store i32 %v2_d504, i32* @r4, align 4
  %v0_d50856 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v2_d504, i32* %r1.global-to-local, align 4
  store i32 4096, i32* %r2.global-to-local, align 4
  %v1_d51457 = call i32 @function_12134(i32 %v0_d50856)
  %tmp141 = icmp slt i32 %v1_d51457, 1
  br i1 %tmp141, label %dec_label_pc_d650, label %dec_label_pc_d520

dec_label_pc_d520:                                ; preds = %dec_label_pc_d4cc, %dec_label_pc_d508.backedge
  %v0_d55447 = phi i32 [ %v1_d514, %dec_label_pc_d508.backedge ], [ %v1_d51457, %dec_label_pc_d4cc ]
  %v3_d524 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d524, i32* @r5, align 4
  %v5_d52c = icmp slt i32 %v0_d55447, %v3_d524
  br i1 %v5_d52c, label %dec_label_pc_d53c, label %dec_label_pc_d590.lr.ph

dec_label_pc_d590.lr.ph:                          ; preds = %dec_label_pc_d520
  %v1_d58839 = add i32 %v0_d55447, -1
  store i32 %v1_d58839, i32* %r1.global-to-local, align 4
  %v0_d590.pre = load i32, i32* @r6, align 4
  %v1_d594.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d590

dec_label_pc_d53c:                                ; preds = %dec_label_pc_d588.backedge, %dec_label_pc_d520
  store i32 %v2_d0d0, i32* %r1.global-to-local, align 4
  %v3_d540 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_d540, i32* @lr, align 4
  %v5_d548 = icmp slt i32 %v0_d55447, %v3_d540
  br i1 %v5_d548, label %dec_label_pc_d508.backedge, label %.thread25

dec_label_pc_d508.backedge:                       ; preds = %dec_label_pc_d570, %.thread25, %dec_label_pc_d53c
  %v0_d508 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v2_d504, i32* %r1.global-to-local, align 4
  store i32 4096, i32* %r2.global-to-local, align 4
  %v1_d514 = call i32 @function_12134(i32 %v0_d508)
  %tmp142 = icmp slt i32 %v1_d514, 1
  br i1 %tmp142, label %dec_label_pc_d650, label %dec_label_pc_d520

.thread25:                                        ; preds = %dec_label_pc_d53c
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_d55449 = icmp eq i32 %v0_d55447, 0
  br i1 %v2_d55449, label %dec_label_pc_d508.backedge, label %dec_label_pc_d55c.lr.ph

dec_label_pc_d55c.lr.ph:                          ; preds = %.thread25
  %v0_d55c.pre = load i32, i32* @r7, align 4
  %v1_d560.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d55c

dec_label_pc_d55c:                                ; preds = %dec_label_pc_d570, %dec_label_pc_d55c.lr.ph
  %v0_d554.in = phi i32 [ %v0_d55447, %dec_label_pc_d55c.lr.ph ], [ %v0_d554, %dec_label_pc_d570 ]
  %v0_d570 = phi i32 [ 0, %dec_label_pc_d55c.lr.ph ], [ %v1_d570, %dec_label_pc_d570 ]
  %v1_d55c = phi i32 [ 0, %dec_label_pc_d55c.lr.ph ], [ %v1_d55c86, %dec_label_pc_d570 ]
  %v0_d554 = add i32 %v0_d554.in, -1
  %v2_d55c = add i32 %v1_d55c, %v0_d55c.pre
  %v3_d55c = inttoptr i32 %v2_d55c to i8*
  %v4_d55c = load i8, i8* %v3_d55c, align 1
  %v6_d55c = zext i8 %v4_d55c to i32
  store i32 %v6_d55c, i32* %r2.global-to-local, align 4
  %v2_d560 = add i32 %v0_d570, %v1_d560.pre
  %v3_d560 = inttoptr i32 %v2_d560 to i8*
  %v4_d560 = load i8, i8* %v3_d560, align 1
  %v6_d560 = zext i8 %v4_d560 to i32
  store i32 %v6_d560, i32* %r3.global-to-local, align 4
  %v9_d564 = icmp eq i8 %v4_d560, %v4_d55c
  br i1 %v9_d564, label %dec_label_pc_d5ac, label %bb143

bb143:                                            ; preds = %dec_label_pc_d55c
  br label %dec_label_pc_d570

dec_label_pc_d570:                                ; preds = %bb143, %dec_label_pc_d5ac
  %v1_d55c86 = phi i32 [ %v1_d5ac, %dec_label_pc_d5ac ], [ 0, %bb143 ]
  %v1_d570 = add i32 %v0_d570, 1
  store i32 %v1_d570, i32* %r1.global-to-local, align 4
  %v2_d554 = icmp eq i32 %v0_d554, 0
  br i1 %v2_d554, label %dec_label_pc_d508.backedge, label %dec_label_pc_d55c

dec_label_pc_d578:                                ; preds = %dec_label_pc_d590
  %v1_d578 = add i32 %v1_d590, 1
  store i32 %v1_d578, i32* @lr, align 4
  %v9_d57c = icmp eq i32 %v3_d524, %v1_d578
  br i1 %v9_d57c, label %dec_label_pc_d5b8, label %dec_label_pc_d588.backedge

dec_label_pc_d588.backedge:                       ; preds = %dec_label_pc_d578, %dec_label_pc_d5a4
  %v1_d59077 = phi i32 [ 0, %dec_label_pc_d5a4 ], [ %v1_d578, %dec_label_pc_d578 ]
  %storemerge = add i32 %storemerge.in, 1
  %v1_d588 = add i32 %v0_d588, -1
  store i32 %v1_d588, i32* %r1.global-to-local, align 4
  %v2_d588 = icmp eq i32 %v0_d588, 0
  br i1 %v2_d588, label %dec_label_pc_d53c, label %dec_label_pc_d590

dec_label_pc_d590:                                ; preds = %dec_label_pc_d588.backedge, %dec_label_pc_d590.lr.ph
  %v0_d588 = phi i32 [ %v1_d58839, %dec_label_pc_d590.lr.ph ], [ %v1_d588, %dec_label_pc_d588.backedge ]
  %storemerge.in = phi i32 [ 0, %dec_label_pc_d590.lr.ph ], [ %storemerge, %dec_label_pc_d588.backedge ]
  %v1_d590 = phi i32 [ 0, %dec_label_pc_d590.lr.ph ], [ %v1_d59077, %dec_label_pc_d588.backedge ]
  %v2_d590 = add i32 %v1_d590, %v0_d590.pre
  %v3_d590 = inttoptr i32 %v2_d590 to i8*
  %v4_d590 = load i8, i8* %v3_d590, align 1
  %v6_d590 = zext i8 %v4_d590 to i32
  store i32 %v6_d590, i32* %r2.global-to-local, align 4
  %v2_d594 = add i32 %storemerge.in, %v1_d594.pre
  %v3_d594 = inttoptr i32 %v2_d594 to i8*
  %v4_d594 = load i8, i8* %v3_d594, align 1
  %v6_d594 = zext i8 %v4_d594 to i32
  store i32 %v6_d594, i32* %r3.global-to-local, align 4
  %v9_d598 = icmp eq i8 %v4_d594, %v4_d590
  br i1 %v9_d598, label %dec_label_pc_d578, label %dec_label_pc_d5a4

dec_label_pc_d5a4:                                ; preds = %dec_label_pc_d590
  br label %dec_label_pc_d588.backedge

dec_label_pc_d5ac:                                ; preds = %dec_label_pc_d55c
  %v1_d5ac = add i32 %v1_d55c, 1
  %v9_d5b0 = icmp eq i32 %v3_d540, %v1_d5ac
  br i1 %v9_d5b0, label %dec_label_pc_d5b8, label %dec_label_pc_d570

dec_label_pc_d5b8:                                ; preds = %dec_label_pc_d578, %dec_label_pc_d5ac
  %v1_d5bc = call i32 @function_112fc(i32 18)
  %v1_d5c4 = call i32 @function_112fc(i32 19)
  %v0_d5c8 = load i32, i32* %sl.global-to-local, align 4
  %v1_d5cc = call i32 @function_1239c(i32 %v0_d5c8)
  %v0_d5d0 = load i32, i32* @r8, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  %v2_d5d8 = call i32 @function_12168(i32 %v0_d5d0, i32 9)
  br label %dec_label_pc_d5dc

dec_label_pc_d5dc:                                ; preds = %dec_label_pc_d4b4, %dec_label_pc_d650, %dec_label_pc_d5b8
  store i32 %v2_d340, i32* @r0, align 4
  store i32 64, i32* @r1, align 4
  %v0_d5e4 = call i32 @function_11970()
  store i32 %v2_d390, i32* @r0, align 4
  store i32 64, i32* @r1, align 4
  %v0_d5f4 = call i32 @function_11970()
  %v1_d5fc = call i32 @function_14488(i32 1)
  store i32 %v2_d318, i32* @r7, align 4
  %v0_d604 = load i32, i32* @r8, align 4
  store i32 %v0_d604, i32* @sl, align 4
  br label %dec_label_pc_d268.backedge

dec_label_pc_d60c:                                ; preds = %dec_label_pc_d144
  %v1_d614 = call i32 @function_c93c(i32 42448)
  %v2_d618 = icmp eq i32 %v1_d614, 0
  br i1 %v2_d618, label %dec_label_pc_d620, label %dec_label_pc_d154

dec_label_pc_d620:                                ; preds = %dec_label_pc_d60c
  %v1_d624 = call i32 @function_c93c(i32 20480)
  %v2_d628 = icmp eq i32 %v1_d624, 0
  br i1 %v2_d628, label %dec_label_pc_d630, label %dec_label_pc_d154

dec_label_pc_d630:                                ; preds = %dec_label_pc_d620
  %v1_d638 = call i32 @function_c93c(i32 34254)
  %v2_d63c = icmp eq i32 %v1_d638, 0
  br i1 %v2_d63c, label %dec_label_pc_d644, label %dec_label_pc_d154

dec_label_pc_d644:                                ; preds = %dec_label_pc_d630
  %v0_d644 = load i32, i32* @r5, align 4
  %v1_d648 = call i32 @function_c93c(i32 %v0_d644)
  br label %dec_label_pc_d154

dec_label_pc_d650:                                ; preds = %dec_label_pc_d508.backedge, %dec_label_pc_d4cc
  %v1_d654 = call i32 @function_112fc(i32 18)
  %v1_d65c = call i32 @function_112fc(i32 19)
  %v0_d660 = load i32, i32* %sl.global-to-local, align 4
  %v1_d664 = call i32 @function_1239c(i32 %v0_d660)
  br label %dec_label_pc_d5dc

; uselistorder directives
  uselistorder i32 %v1_d5ac, { 1, 0 }
  uselistorder i32 %v1_d570, { 1, 0 }
  uselistorder i32 %v1_d55c, { 1, 0 }
  uselistorder i32 %v0_d570, { 1, 0 }
  uselistorder i32 %v1_d514, { 1, 0 }
  uselistorder i32 %v2_d4bc, { 1, 0 }
  uselistorder i1 %v7_d498, { 1, 0 }
  uselistorder i32 %v2_d494, { 1, 0 }
  uselistorder i32 %v2_d26c, { 1, 0 }
  uselistorder i32 %stack_var_-8484.1.be, { 1, 0 }
  uselistorder i32 %v3_d3ec, { 1, 2, 0 }
  uselistorder i32 %v2_d2fc, { 1, 0 }
  uselistorder i32 %v1_d29c, { 0, 1, 5, 4, 3, 2, 6, 9, 8, 7 }
  uselistorder i32 %v1_d278, { 2, 1, 0, 3 }
  uselistorder i32 %v3_d23c, { 1, 2, 0 }
  uselistorder i32 %v3_d204, { 1, 2, 0 }
  uselistorder i32 %v3_d1d0, { 1, 2, 0 }
  uselistorder i32 %v3_d198, { 1, 2, 0 }
  uselistorder i32 %v3_d160, { 1, 2, 0 }
  uselistorder i32 %v3_d118, { 1, 2, 0 }
  uselistorder i32 %stack_var_-8484.0, { 1, 0 }
  uselistorder i32 %v2_d504, { 1, 0, 2 }
  uselistorder i32 %v2_d390, { 1, 0, 2 }
  uselistorder i32 %v3_d010, { 1, 0 }
  uselistorder i32 %v2_cfdc, { 2, 0, 1 }
  uselistorder i32 %v1_cf78, { 3, 2, 0, 4, 6, 5, 8, 7, 9, 10, 1, 11, 12, 13 }
  uselistorder i32 %storemerge96, { 1, 0 }
  uselistorder i32 %v0_cee8, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0, 2 }
  uselistorder i32* %stack_var_-44, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 24, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %r1.global-to-local, { 1, 3, 2, 0, 5, 4, 55, 56, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 49, 51, 52, 53, 54 }
  uselistorder i32 (i32*)* @function_123d0, { 0, 2, 1 }
  uselistorder i32 (i32*)* @function_126dc, { 4, 3, 0, 5, 6, 7, 2, 8, 1 }
  uselistorder i32 (i32, i32)* @function_12a18, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1292c, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 20480, { 0, 2, 1 }
  uselistorder i32 (i32)* @function_c93c, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_12598, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_12100, { 3, 2, 1, 0 }
  uselistorder i32 4095, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_1a2d8.65, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_d5dc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_d5b8, { 1, 0 }
  uselistorder label %dec_label_pc_d588.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_d570, { 1, 0 }
  uselistorder label %dec_label_pc_d520, { 1, 0 }
  uselistorder label %dec_label_pc_d4b4, { 1, 0 }
  uselistorder label %.thread12, { 1, 0 }
  uselistorder label %dec_label_pc_d268.backedge, { 4, 3, 0, 1, 5, 2 }
  uselistorder label %dec_label_pc_d448, { 1, 0 }
  uselistorder label %dec_label_pc_d278, { 1, 0 }
  uselistorder label %dec_label_pc_d278.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_d230, { 1, 0 }
  uselistorder label %dec_label_pc_d1f8, { 1, 0 }
  uselistorder label %dec_label_pc_d1c4, { 1, 0 }
  uselistorder label %dec_label_pc_d18c, { 1, 0 }
  uselistorder label %dec_label_pc_d154, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_d144, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
}

define i32 @function_d67c(i32 %arg1) local_unnamed_addr {
dec_label_pc_d67c:
  store i32 54932, i32* inttoptr (i32 98444 to i32*), align 4
  %v1_d688 = load i32, i32* @r0, align 4
  ret i32 %v1_d688
}

define i32 @function_d694(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d694:
  %v1_d69c = call i32 @function_1139c(i32 1)
  store i32 ptrtoint ([15 x i8]* @global_var_17710.72 to i32), i32* @r0, align 4
  %v2_d6a4 = call i32 @function_12904(i32 ptrtoint ([15 x i8]* @global_var_17710.72 to i32))
  store i32 ptrtoint (i16** @global_var_1a2e0.74 to i32), i32* @r4, align 4
  store i32 %v2_d6a4, i32* @global_var_1a2e4.75, align 4
  %v3_d6b8 = call i32 @function_112d8(i32 1, i32* null)
  %v4_d6b8 = inttoptr i32 %v3_d6b8 to i16*
  %v3_d6bc = load i16, i16* %v4_d6b8, align 2
  store i16 %v3_d6bc, i16* bitcast (i32* @global_var_1a2e2.76 to i16*), align 4
  %v1_d6c8 = call i32 @function_112fc(i32 1)
  ret i32 %v1_d6c8
}

define i32 @function_d6dc(i32 %arg1) local_unnamed_addr {
dec_label_pc_d6dc:
  %stack_var_-20 = alloca i32, align 4
  %v3_d6dc = load i32, i32* @r4, align 4
  %v6_d6dc = load i32, i32* @r5, align 4
  %v0_d6e4 = call i32 @function_1208c()
  %v7_d6e8 = icmp eq i32 %v0_d6e4, -1
  %. = zext i1 %v7_d6e8 to i32
  %tmp11 = icmp slt i32 %v0_d6e4, 1
  %storemerge4 = select i1 %tmp11, i32 %., i32 1
  store i32 %storemerge4, i32* @r5, align 4
  %v2_d704 = icmp eq i32 %storemerge4, 0
  store i32 %v0_d6e4, i32* @global_var_18254.78, align 4
  br i1 %v2_d704, label %dec_label_pc_d71c, label %dec_label_pc_d710

dec_label_pc_d710:                                ; preds = %dec_label_pc_d6dc
  store i32 %v3_d6dc, i32* @r4, align 4
  store i32 %v6_d6dc, i32* @r5, align 4
  ret i32 %v0_d6e4

dec_label_pc_d71c:                                ; preds = %dec_label_pc_d6dc
  store i32 1, i32* %stack_var_-20, align 4
  %v1_d728 = call i32 @function_1139c(i32 23)
  %v1_d730 = call i32 @function_1139c(i32 24)
  %v0_d734 = load i32, i32* @r5, align 4
  %v2_d73c = inttoptr i32 %v0_d734 to i32*
  %v3_d73c = call i32 @function_112d8(i32 23, i32* %v2_d73c)
  %v2_d744 = call i32 @function_11fa8(i32 %v3_d73c, i32 2)
  %v7_d748 = icmp eq i32 %v2_d744, -1
  store i32 %v2_d744, i32* @r4, align 4
  br i1 %v7_d748, label %dec_label_pc_d790, label %dec_label_pc_d754

dec_label_pc_d754:                                ; preds = %dec_label_pc_d790, %dec_label_pc_d71c
  %v0_d760 = phi i32 [ %v2_d7a0, %dec_label_pc_d790 ], [ %v2_d744, %dec_label_pc_d71c ]
  %v2_d764 = ptrtoint i32* %stack_var_-20 to i32
  %v3_d768 = call i32 @function_12310(i32 %v0_d760, i32 -2147199228, i32 %v2_d764)
  br label %dec_label_pc_d76c

dec_label_pc_d76c:                                ; preds = %dec_label_pc_d76c, %dec_label_pc_d754
  %v0_d778 = load i32, i32* @r4, align 4
  %v3_d780 = call i32 @function_12310(i32 %v0_d778, i32 -2147199227, i32 0)
  %v1_d788 = call i32 @function_14488(i32 10)
  br label %dec_label_pc_d76c

dec_label_pc_d790:                                ; preds = %dec_label_pc_d71c
  %v0_d790 = load i32, i32* @r5, align 4
  %v2_d798 = inttoptr i32 %v0_d790 to i32*
  %v3_d798 = call i32 @function_112d8(i32 24, i32* %v2_d798)
  %v2_d7a0 = call i32 @function_11fa8(i32 %v3_d798, i32 2)
  %v3_d7a4 = icmp eq i32 %v2_d7a0, -1
  store i32 %v2_d7a0, i32* @r4, align 4
  br i1 %v3_d7a4, label %dec_label_pc_d7b0, label %dec_label_pc_d754

dec_label_pc_d7b0:                                ; preds = %dec_label_pc_d790
  %v1_d7b4 = call i32 @function_112fc(i32 23)
  %v1_d7bc = call i32 @function_112fc(i32 24)
  %v0_d7c0 = load i32, i32* @r5, align 4
  %v1_d7c4 = call i32 @function_143d0(i32 %v0_d7c0)
  %v0_d7c8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_d7c8, label %bb14, label %bb15

bb14:                                             ; preds = %dec_label_pc_d7b0
  %v2_d7c8 = load i32, i32* @r4, align 4
  %v8_d7c8 = ashr i32 %v2_d7c8, %arg1
  %v9_d7c8 = and i32 %v8_d7c8, 2
  store i32 %v9_d7c8, i32* @r8, align 4
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_d7b0, %bb14
  ret i32 %v1_d7c4

; uselistorder directives
  uselistorder i32 %v2_d7a0, { 1, 2, 0 }
  uselistorder i32 %v2_d744, { 1, 2, 0 }
  uselistorder i32 %storemerge4, { 1, 0 }
  uselistorder i32 %v0_d6e4, { 2, 1, 3, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @function_d7cc(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_d7cc:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-1416 = alloca i32, align 4
  %stack_var_-42 = alloca i8*, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-392 = alloca i32, align 4
  %stack_var_-264 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v15_d7cc = load i32, i32* @r8, align 4
  %v2_d7d8 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_d7d8, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %tmp, i32* @r8, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %v2_d7f0 = call i32 @function_12c14(i32* nonnull %stack_var_-64)
  store i32 %v2_d7d8, i32* @r0, align 4
  %v2_d7fc = call i32 @function_12bd0(i32 %v2_d7d8, i32 2)
  %v0_d800 = load i32, i32* @r5, align 4
  store i32 %v0_d800, i32* %r2.global-to-local, align 4
  %v3_d80c = call i32 @function_12364(i32 %v0_d800, i32 %v2_d7d8, i32 %v0_d800)
  %v2_d818 = call i32 @function_12c28(i32 17, i32 1)
  %v2_d824 = call i32 @function_12c28(i32 5, i32 54908)
  %v0_d828 = call i32 @function_11b98()
  store i32 ptrtoint (i16** @global_var_1a2e0.74 to i32), i32* %r2.global-to-local, align 4
  store i32 1494907824, i32* @global_var_1a2e4.75, align 4
  store i32 2, i32* %ip.global-to-local, align 4
  store i32 5888, i32* %r3.global-to-local, align 4
  store i32 %v0_d828, i32* @global_var_1a2d4.47, align 4
  store i16 5888, i16* bitcast (i32* @global_var_1a2e2.76 to i16*), align 4
  store i16 2, i16* bitcast (i16** @global_var_1a2e0.74 to i16*), align 4
  %v6_d850 = call i32 @function_1143c(i32 %v0_d828, i32 ptrtoint (i32* @global_var_1a2d4.47 to i32), i32 ptrtoint (i16** @global_var_1a2e0.74 to i32), i32 5888)
  store i32 54932, i32* %r3.global-to-local, align 4
  store i32 98444, i32* @lr, align 4
  store i32 54932, i32* inttoptr (i32 98444 to i32*), align 4
  %v1_d860 = call i32 @function_df88(i32 %v6_d850)
  %v2_d868 = ptrtoint i32* %stack_var_-136 to i32
  store i32 %v2_d868, i32* @r0, align 4
  store i32 32, i32* @r1, align 4
  %v0_d870 = call i32 @function_11970()
  %v0_d874 = load i32, i32* @r6, align 4
  %v7_d874 = icmp eq i32 %v0_d874, 2
  br i1 %v7_d874, label %dec_label_pc_d9ac, label %dec_label_pc_d87c

dec_label_pc_d87c:                                ; preds = %dec_label_pc_d9ac, %dec_label_pc_d7cc, %dec_label_pc_d9bc
  %v0_d87c = call i32 @function_df2c()
  store i32 %v0_d87c, i32* @r6, align 4
  %v0_d884 = load i32, i32* @r8, align 4
  %v1_d884 = inttoptr i32 %v0_d884 to i32*
  %v2_d884 = load i32, i32* %v1_d884, align 4
  %v1_d888 = inttoptr i32 %v2_d884 to i8*
  %v2_d888 = call i32 @function_118dc(i8* %v1_d888)
  %v0_d890 = load i32, i32* @r8, align 4
  %v1_d890 = inttoptr i32 %v0_d890 to i32*
  %v2_d890 = load i32, i32* %v1_d890, align 4
  %v1_d894 = inttoptr i32 %v2_d890 to i8*
  %v2_d894 = call i32 @function_118dc(i8* %v1_d894)
  %v1_d898 = sub i32 20, %v2_d888
  store i32 %v2_d894, i32* @r4, align 4
  %v0_d8a0 = load i32, i32* @r6, align 4
  %v2_d8a4 = call i32 @function_11f34(i32 %v0_d8a0, i32 %v1_d898)
  %v2_d8ac = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_d8ac, i32* @r5, align 4
  %v0_d8b0 = load i32, i32* @r4, align 4
  %v2_d8b0 = add i32 %v0_d8b0, %v1_d898
  store i32 %v2_d8b0, i32* @r4, align 4
  %v2_d8bc = call i32 @function_dff0(i32 %v2_d8ac, i32 %v2_d8b0)
  %v2_d8c4 = ptrtoint i32* %stack_var_-40 to i32
  %v1_d8c8 = load i32, i32* @r4, align 4
  %v2_d8c8 = add i32 %v1_d8c8, %v2_d8c4
  store i32 %v2_d8c8, i32* %r3.global-to-local, align 4
  store i32 0, i32* @sb, align 4
  %v0_d8d4 = load i32, i32* @r8, align 4
  %v1_d8d4 = inttoptr i32 %v0_d8d4 to i32*
  %v2_d8d4 = load i32, i32* %v1_d8d4, align 4
  store i32 %v2_d8d4, i32* @r0, align 4
  %v3_d8d8 = add i32 %v2_d8c8, -64
  %v4_d8d8 = inttoptr i32 %v3_d8d8 to i8*
  store i8 0, i8* %v4_d8d8, align 1
  %v2_d8dc = inttoptr i32 %v2_d8d4 to i8*
  %v3_d8dc = call i32 @function_11904(i8* %v2_d8dc, i32 %v2_d8ac)
  store i32 32, i32* @r1, align 4
  store i32 %v2_d8ac, i32* @r0, align 4
  %v0_d8e8 = call i32 @function_11970()
  %v0_d8ec = call i32 @function_df2c()
  store i32 %v0_d8ec, i32* @r7, align 4
  %v0_d8f4 = load i32, i32* @r8, align 4
  %v1_d8f4 = inttoptr i32 %v0_d8f4 to i32*
  %v2_d8f4 = load i32, i32* %v1_d8f4, align 4
  %v1_d8f8 = inttoptr i32 %v2_d8f4 to i8*
  %v2_d8f8 = call i32 @function_118dc(i8* %v1_d8f8)
  store i32 %v2_d8f8, i32* @r6, align 4
  %v0_d900 = load i32, i32* @r8, align 4
  %v1_d900 = inttoptr i32 %v0_d900 to i32*
  %v2_d900 = load i32, i32* %v1_d900, align 4
  %v1_d904 = inttoptr i32 %v2_d900 to i8*
  %v2_d904 = call i32 @function_118dc(i8* %v1_d904)
  %v0_d908 = load i32, i32* @r6, align 4
  %v1_d908 = sub i32 20, %v0_d908
  store i32 %v2_d904, i32* @r4, align 4
  %v0_d910 = load i32, i32* @r7, align 4
  %v2_d914 = call i32 @function_11f34(i32 %v0_d910, i32 %v1_d908)
  %v0_d918 = load i32, i32* @r4, align 4
  %v2_d918 = add i32 %v0_d918, %v1_d908
  store i32 %v2_d918, i32* @r4, align 4
  %v2_d924 = call i32 @function_dff0(i32 %v2_d8ac, i32 %v2_d918)
  store i32 %v2_d8c4, i32* %r2.global-to-local, align 4
  %v1_d930 = load i32, i32* @r4, align 4
  %v2_d930 = add i32 %v1_d930, %v2_d8c4
  store i32 %v2_d930, i32* %r3.global-to-local, align 4
  %v0_d934 = load i32, i32* @sb, align 4
  %v1_d934 = trunc i32 %v0_d934 to i8
  %v3_d934 = add i32 %v2_d930, -64
  %v4_d934 = inttoptr i32 %v3_d934 to i8*
  store i8 %v1_d934, i8* %v4_d934, align 1
  %v4_d940 = call i32 @function_1204c(i32 15, i32 %v2_d8ac, i32 %v2_d8c4, i32 %v2_d930)
  %v1_d948 = call i32 @function_1139c(i32 3)
  %v3_d954 = call i32 @function_112d8(i32 3, i32* nonnull %stack_var_-48)
  %v3_d958 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_d958, i32* %r2.global-to-local, align 4
  %v2_d964 = call i32 @function_122a8(i32 1, i32 %v3_d954)
  store i32 1, i32* %r2.global-to-local, align 4
  %v2_d974 = call i32 @function_122a8(i32 1, i32 ptrtoint (i32* @global_var_17720.86 to i32))
  %v1_d97c = call i32 @function_112fc(i32 3)
  %v1_d980 = call i32 @function_85e0(i32 %v1_d97c)
  %v1_d984 = call i32 @function_ced0(i32 %v1_d980)
  store i32 %v1_d984, i32* @r0, align 4
  %v1_d988 = call i32 @function_d6dc(i32 %v1_d984)
  store i32 %v1_d988, i32* @r0, align 4
  %v0_d98c = call i32 @function_1208c()
  %v1_d990 = load i32, i32* @sb, align 4
  %v7_d994 = icmp sgt i32 %v0_d98c, %v1_d990
  br i1 %v7_d994, label %dec_label_pc_d998, label %dec_label_pc_d9e8

dec_label_pc_d998:                                ; preds = %dec_label_pc_d87c
  store i32 %v15_d7cc, i32* %r8.global-to-local, align 4
  ret i32 %v1_d990

dec_label_pc_d9ac:                                ; preds = %dec_label_pc_d7cc
  %v0_d9ac = load i32, i32* @r8, align 4
  %v1_d9ac = add i32 %v0_d9ac, 4
  %v2_d9ac = inttoptr i32 %v1_d9ac to i32*
  %v3_d9ac = load i32, i32* %v2_d9ac, align 4
  %v1_d9b0 = inttoptr i32 %v3_d9ac to i8*
  %v2_d9b0 = call i32 @function_118dc(i8* %v1_d9b0)
  %v8_d9b8 = icmp sgt i32 %v2_d9b0, 31
  br i1 %v8_d9b8, label %dec_label_pc_d87c, label %dec_label_pc_d9bc

dec_label_pc_d9bc:                                ; preds = %dec_label_pc_d9ac
  %v0_d9c0 = load i32, i32* @r8, align 4
  %v1_d9c0 = add i32 %v0_d9c0, 4
  %v2_d9c0 = inttoptr i32 %v1_d9c0 to i32*
  %v3_d9c0 = load i32, i32* %v2_d9c0, align 4
  store i32 %v2_d868, i32* @r0, align 4
  %v2_d9c8 = bitcast i32* %stack_var_-136 to i8*
  %v3_d9c8 = call i32 @function_11904(i8* %v2_d9c8, i32 %v3_d9c0)
  %v0_d9cc = load i32, i32* @r8, align 4
  %v1_d9cc = add i32 %v0_d9cc, 4
  %v2_d9cc = inttoptr i32 %v1_d9cc to i32*
  %v3_d9cc = load i32, i32* %v2_d9cc, align 4
  %v1_d9d4 = inttoptr i32 %v3_d9cc to i8*
  %v2_d9d4 = call i32 @function_118dc(i8* %v1_d9d4)
  store i32 %v2_d9d4, i32* @r1, align 4
  store i32 %v3_d9cc, i32* @r0, align 4
  %v0_d9e0 = call i32 @function_11970()
  br label %dec_label_pc_d87c

dec_label_pc_d9e8:                                ; preds = %dec_label_pc_d87c
  %v1_d9e8 = call i32 @function_122dc(i32 %v0_d98c)
  %v0_d9ec = load i32, i32* @sb, align 4
  %v1_d9f0 = call i32 @function_1239c(i32 %v0_d9ec)
  %v1_d9f8 = call i32 @function_1239c(i32 1)
  %v1_da00 = call i32 @function_1239c(i32 2)
  %v1_da04 = call i32 @function_85e0(i32 %v1_da00)
  %v1_da08 = call i32 @function_ced0(i32 %v1_da04)
  store i32 %v1_da08, i32* @r0, align 4
  %v1_da0c = call i32 @function_d6dc(i32 %v1_da08)
  store i32 %v1_da0c, i32* @r0, align 4
  %v1_da10 = call i32 @function_e3c4(i32 %v1_da0c)
  store i32 98440, i32* @sl, align 4
  store i32 ptrtoint (i8** @global_var_18258.89 to i32), i32* @fp, align 4
  %v2_da24 = ptrtoint i32* %stack_var_-264 to i32
  store i32 %v2_da24, i32* @r6, align 4
  %v2_da28 = ptrtoint i32* %stack_var_-392 to i32
  store i32 %v2_da28, i32* @r7, align 4
  %v2_db0c = ptrtoint i32* %stack_var_-72 to i32
  %v2_db54 = ptrtoint i32* %stack_var_-144 to i32
  %v2_de14 = ptrtoint i8** %stack_var_-42 to i32
  %v2_dcb0 = ptrtoint i32* %stack_var_-1416 to i32
  %v2_dda8 = ptrtoint i32* %stack_var_-52 to i32
  %v2_ddac = ptrtoint i32* %stack_var_-56 to i32
  %v1_de64 = bitcast i32* %stack_var_-136 to i8*
  br label %dec_label_pc_da2c

dec_label_pc_da2c:                                ; preds = %dec_label_pc_de28, %dec_label_pc_de5c, %bb44, %dec_label_pc_dcc8, %dec_label_pc_dc0c, %dec_label_pc_dbfc, %bb41, %dec_label_pc_dee4, %dec_label_pc_dec8, %dec_label_pc_deb0, %dec_label_pc_de38, %dec_label_pc_ddd0, %dec_label_pc_dd20, %dec_label_pc_dbb0, %dec_label_pc_d9e8
  store i32 0, i32* %stack_var_-264, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_da38

dec_label_pc_da38:                                ; preds = %dec_label_pc_da38, %dec_label_pc_da2c
  %v1_da3c = phi i32 [ %v1_da40, %dec_label_pc_da38 ], [ 4, %dec_label_pc_da2c ]
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_da3c = load i32, i32* @r6, align 4
  %v3_da3c = add i32 %v2_da3c, %v1_da3c
  %v4_da3c = inttoptr i32 %v3_da3c to i32*
  store i32 0, i32* %v4_da3c, align 4
  %v0_da40 = load i32, i32* %r3.global-to-local, align 4
  %v1_da40 = add i32 %v0_da40, 4
  store i32 %v1_da40, i32* %r3.global-to-local, align 4
  %v7_da44 = icmp eq i32 %v1_da40, 128
  br i1 %v7_da44, label %dec_label_pc_da4c, label %dec_label_pc_da38

dec_label_pc_da4c:                                ; preds = %dec_label_pc_da38
  %v0_da4c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_da4c, i32* %stack_var_-392, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_da54

dec_label_pc_da54:                                ; preds = %dec_label_pc_da54, %dec_label_pc_da4c
  %v1_da58 = phi i32 [ %v1_da5c, %dec_label_pc_da54 ], [ 4, %dec_label_pc_da4c ]
  store i32 0, i32* @r4, align 4
  %v2_da58 = load i32, i32* @r7, align 4
  %v3_da58 = add i32 %v2_da58, %v1_da58
  %v4_da58 = inttoptr i32 %v3_da58 to i32*
  store i32 0, i32* %v4_da58, align 4
  %v0_da5c = load i32, i32* %r3.global-to-local, align 4
  %v1_da5c = add i32 %v0_da5c, 4
  store i32 %v1_da5c, i32* %r3.global-to-local, align 4
  %v7_da60 = icmp eq i32 %v1_da5c, 128
  br i1 %v7_da60, label %dec_label_pc_da68, label %dec_label_pc_da54

dec_label_pc_da68:                                ; preds = %dec_label_pc_da54
  store i32 98436, i32* %r3.global-to-local, align 4
  %v2_da6c = load i32, i32* inttoptr (i32 98436 to i32*), align 4
  %v7_da70 = icmp eq i32 %v2_da6c, -1
  br i1 %v7_da70, label %dec_label_pc_daa0, label %dec_label_pc_da78

dec_label_pc_da78:                                ; preds = %dec_label_pc_da68
  %v3_da78 = udiv i32 %v2_da6c, 32
  %v3_da80 = mul nuw nsw i32 %v3_da78, 4
  store i32 %v2_d8c4, i32* %ip.global-to-local, align 4
  %v2_da88 = add i32 %v3_da80, %v2_d8c4
  store i32 %v2_da88, i32* %r3.global-to-local, align 4
  %v1_da8c = add i32 %v2_da88, -224
  %v2_da8c = inttoptr i32 %v1_da8c to i32*
  %v3_da8c = load i32, i32* %v2_da8c, align 4
  %v1_da90 = urem i32 %v2_da6c, 32
  %v7_da98 = shl i32 1, %v1_da90
  %v8_da98 = or i32 %v3_da8c, %v7_da98
  store i32 %v8_da98, i32* %r2.global-to-local, align 4
  store i32 %v8_da98, i32* %v2_da8c, align 4
  br label %dec_label_pc_daa0

dec_label_pc_daa0:                                ; preds = %dec_label_pc_da68, %dec_label_pc_da78
  %v0_daa0 = load i32, i32* @sl, align 4
  %v1_daa0 = inttoptr i32 %v0_daa0 to i32*
  %v2_daa0 = load i32, i32* %v1_daa0, align 4
  store i32 %v2_daa0, i32* @r3, align 4
  %v7_daa4 = icmp eq i32 %v2_daa0, -1
  store i32 98440, i32* %r8.global-to-local, align 4
  br i1 %v7_daa4, label %dec_label_pc_dd2c, label %dec_label_pc_dab0

dec_label_pc_dab0:                                ; preds = %dec_label_pc_dd2c, %dec_label_pc_daa0, %bb43
  %v2_dab0 = load i8, i8* bitcast (i8** @global_var_18258.89 to i8*), align 4
  %v3_dab0 = zext i8 %v2_dab0 to i32
  store i32 %v3_dab0, i32* %r3.global-to-local, align 4
  %v2_dab4 = icmp eq i8 %v2_dab0, 0
  %v0_dbcc = load i32, i32* @sl, align 4
  %v1_dbcc = inttoptr i32 %v0_dbcc to i32*
  %v2_dbcc = load i32, i32* %v1_dbcc, align 4
  store i32 %v2_dbcc, i32* %ip.global-to-local, align 4
  %v3_dbd4 = udiv i32 %v2_dbcc, 32
  br i1 %v2_dab4, label %dec_label_pc_dbcc, label %dec_label_pc_dabc

dec_label_pc_dabc:                                ; preds = %dec_label_pc_dab0
  %v3_dacc = mul nuw nsw i32 %v3_dbd4, 4
  %v2_dad0 = add i32 %v3_dacc, %v2_d8c4
  store i32 %v2_dad0, i32* %r3.global-to-local, align 4
  %v1_dad4 = add i32 %v2_dad0, -352
  %v2_dad4 = inttoptr i32 %v1_dad4 to i32*
  %v3_dad4 = load i32, i32* %v2_dad4, align 4
  %v1_dad8 = urem i32 %v2_dbcc, 32
  %v7_dae0 = shl i32 1, %v1_dad8
  %v8_dae0 = or i32 %v3_dad4, %v7_dae0
  store i32 %v8_dae0, i32* %r2.global-to-local, align 4
  store i32 %v8_dae0, i32* %v2_dad4, align 4
  br label %dec_label_pc_dae8

dec_label_pc_dae8:                                ; preds = %dec_label_pc_dbcc, %dec_label_pc_dabc
  store i32 98436, i32* %r3.global-to-local, align 4
  %v2_daec = load i32, i32* inttoptr (i32 98436 to i32*), align 4
  %v0_daf0 = load i32, i32* %ip.global-to-local, align 4
  %v5_daf4 = icmp slt i32 %v0_daf0, %v2_daec
  br i1 %v5_daf4, label %bb41, label %bb

bb:                                               ; preds = %dec_label_pc_dae8
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_dae8, %bb
  %v0_db10 = phi i32 [ %v2_daec, %dec_label_pc_dae8 ], [ %v0_daf0, %bb ]
  store i32 0, i32* @lr, align 4
  store i32 10, i32* %stack_var_-72, align 4
  store i32 %v2_db0c, i32* %ip.global-to-local, align 4
  %v1_db10 = add i32 %v0_db10, 1
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_da28, i32* %r2.global-to-local, align 4
  %v5_db28 = call i32 @function_120c0(i32 %v1_db10, i32 %v2_da24, i32 %v2_da28, i32 0, i32 %v2_db0c)
  %v8_db2c = icmp eq i32 %v5_db28, -1
  br i1 %v8_db2c, label %dec_label_pc_da2c, label %dec_label_pc_db34

dec_label_pc_db34:                                ; preds = %bb41
  %v6_db28 = trunc i32 %v5_db28 to i16
  %v3_db34 = icmp eq i16 %v6_db28, 0
  br i1 %v3_db34, label %dec_label_pc_db3c, label %dec_label_pc_db68

dec_label_pc_db3c:                                ; preds = %dec_label_pc_db34
  %v2_db40 = load i32, i32* @sb, align 4
  %v5_db44 = srem i32 %v2_db40, 6
  %v4_db4c = sub i32 %v2_db40, %v5_db44
  store i32 %v4_db4c, i32* %r3.global-to-local, align 4
  store i32 %v5_db44, i32* %r2.global-to-local, align 4
  %v2_db58 = icmp eq i32 %v5_db44, 0
  %v7_db5c = inttoptr i32 %v5_db28 to i8*
  store i8* %v7_db5c, i8** %stack_var_-42, align 4
  %v1_db60 = add i32 %v2_db40, 1
  store i32 %v1_db60, i32* @sb, align 4
  br i1 %v2_db58, label %dec_label_pc_de0c, label %dec_label_pc_db68

dec_label_pc_db68:                                ; preds = %dec_label_pc_db34, %dec_label_pc_db3c, %dec_label_pc_de0c
  %v2_db68 = load i8, i8* bitcast (i8** @global_var_18258.89 to i8*), align 4
  %v3_db68 = zext i8 %v2_db68 to i32
  store i32 %v3_db68, i32* @r4, align 4
  %v2_db6c = icmp eq i8 %v2_db68, 0
  %v0_dbfc = load i32, i32* @sl, align 4
  %v1_dbfc = inttoptr i32 %v0_dbfc to i32*
  %v2_dbfc = load i32, i32* %v1_dbfc, align 4
  br i1 %v2_db6c, label %dec_label_pc_dbfc, label %dec_label_pc_db74

dec_label_pc_db74:                                ; preds = %dec_label_pc_db68
  %v3_db7c = udiv i32 %v2_dbfc, 32
  store i32 %v2_d8c4, i32* %r2.global-to-local, align 4
  %v3_db84 = mul nuw nsw i32 %v3_db7c, 4
  %v2_db88 = add i32 %v3_db84, %v2_d8c4
  store i32 %v2_db88, i32* %r3.global-to-local, align 4
  %v1_db8c = add i32 %v2_db88, -352
  %v2_db8c = inttoptr i32 %v1_db8c to i32*
  %v3_db8c = load i32, i32* %v2_db8c, align 4
  %v1_db90 = urem i32 %v2_dbfc, 32
  %v6_db94 = lshr i32 %v3_db8c, %v1_db90
  store i32 %v6_db94, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_18258.89 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_dba0 = urem i32 %v6_db94, 2
  %v2_dba0 = icmp eq i32 %v1_dba0, 0
  store i8 0, i8* bitcast (i8** @global_var_18258.89 to i8*), align 4
  store i32 98440, i32* @r4, align 4
  br i1 %v2_dba0, label %dec_label_pc_dbb0, label %dec_label_pc_dd98

dec_label_pc_dbb0:                                ; preds = %dec_label_pc_db74
  store i32 56248, i32* @lr, align 4
  %v1_dbb4 = icmp ne i32 %v2_dbfc, -1
  call void @__pseudo_cond_branch(i1 %v1_dbb4, i32 ptrtoint (i32* @global_var_1239c.92 to i32))
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_dbbc = load i32, i32* @r4, align 4
  %v2_dbbc = inttoptr i32 %v1_dbbc to i32*
  store i32 -1, i32* %v2_dbbc, align 4
  %v1_dbc4 = call i32 @function_14488(i32 1)
  br label %dec_label_pc_da2c

dec_label_pc_dbcc:                                ; preds = %dec_label_pc_dab0
  store i32 %v2_d8c4, i32* %r2.global-to-local, align 4
  %v3_dbdc = mul nuw nsw i32 %v3_dbd4, 4
  %v2_dbe0 = add i32 %v3_dbdc, %v2_d8c4
  store i32 %v2_dbe0, i32* %r3.global-to-local, align 4
  %v1_dbe4 = add i32 %v2_dbe0, -224
  %v2_dbe4 = inttoptr i32 %v1_dbe4 to i32*
  %v3_dbe4 = load i32, i32* %v2_dbe4, align 4
  %v1_dbe8 = urem i32 %v2_dbcc, 32
  %v7_dbf0 = shl i32 1, %v1_dbe8
  %v8_dbf0 = or i32 %v3_dbe4, %v7_dbf0
  store i32 %v8_dbf0, i32* %r2.global-to-local, align 4
  store i32 %v8_dbf0, i32* %v2_dbe4, align 4
  br label %dec_label_pc_dae8

dec_label_pc_dbfc:                                ; preds = %dec_label_pc_db68
  %v7_dc00 = icmp eq i32 %v2_dbfc, -1
  store i32 98440, i32* @r8, align 4
  br i1 %v7_dc00, label %dec_label_pc_da2c, label %dec_label_pc_dc0c

dec_label_pc_dc0c:                                ; preds = %dec_label_pc_dbfc
  %v3_dc0c = udiv i32 %v2_dbfc, 32
  store i32 %v2_d8c4, i32* %r2.global-to-local, align 4
  %v3_dc18 = mul nuw nsw i32 %v3_dc0c, 4
  %v2_dc1c = add i32 %v3_dc18, %v2_d8c4
  store i32 %v2_dc1c, i32* %r3.global-to-local, align 4
  %v1_dc20 = add i32 %v2_dc1c, -224
  %v2_dc20 = inttoptr i32 %v1_dc20 to i32*
  %v3_dc20 = load i32, i32* %v2_dc20, align 4
  %v1_dc24 = urem i32 %v2_dbfc, 32
  %v6_dc28 = lshr i32 %v3_dc20, %v1_dc24
  store i32 %v6_dc28, i32* %r2.global-to-local, align 4
  %v1_dc2c = urem i32 %v6_dc28, 2
  %v2_dc2c = icmp eq i32 %v1_dc2c, 0
  br i1 %v2_dc2c, label %dec_label_pc_da2c, label %dec_label_pc_dc34

dec_label_pc_dc34:                                ; preds = %dec_label_pc_dc0c
  store i32 %v2_db54, i32* %r3.global-to-local, align 4
  %v6_dc38 = inttoptr i32 %v3_db68 to i8*
  store i8* %v6_dc38, i8** %stack_var_-42, align 4
  %v0_dc3c = call i32 @function_127c4()
  %v0_dc40 = load i32, i32* @r4, align 4
  %v2_dc40 = inttoptr i32 %v0_dc3c to i32*
  store i32 %v0_dc40, i32* %v2_dc40, align 4
  store i32 %v0_dc3c, i32* @r5, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v0_dc54 = load i32, i32* @r8, align 4
  %v1_dc54 = inttoptr i32 %v0_dc54 to i32*
  %v2_dc54 = load i32, i32* %v1_dc54, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_dc60 = call i32 @function_12a4c(i32 %v2_dc54, i32 %v2_de14, i32 2, i32 16386)
  %v7_dc64 = icmp eq i32 %v4_dc60, -1
  br i1 %v7_dc64, label %dec_label_pc_de28, label %dec_label_pc_dc6c

dec_label_pc_dc6c:                                ; preds = %dec_label_pc_dc34
  %v2_dc6c = icmp eq i32 %v4_dc60, 0
  br i1 %v2_dc6c, label %dec_label_pc_de38, label %dec_label_pc_dc74

dec_label_pc_dc74:                                ; preds = %dec_label_pc_dc6c
  store i32 %v2_db54, i32* %ip.global-to-local, align 4
  %v3_dc78 = load i8*, i8** %stack_var_-42, align 4
  %v4_dc78 = ptrtoint i8* %v3_dc78 to i32
  store i32 %v4_dc78, i32* %r3.global-to-local, align 4
  %v2_dc7c = icmp eq i8* %v3_dc78, null
  br i1 %v2_dc7c, label %dec_label_pc_dec8, label %dec_label_pc_dc84

dec_label_pc_dc84:                                ; preds = %dec_label_pc_dc74
  %v3_dc84 = udiv i32 %v4_dc78, 256
  %v1_dc88 = urem i32 %v4_dc78, 256
  store i32 %v1_dc88, i32* %r3.global-to-local, align 4
  %v4_dc8c = mul nuw nsw i32 %v1_dc88, 256
  %v5_dc8c = or i32 %v4_dc8c, %v3_dc84
  %v6_dc8c = trunc i32 %v5_dc8c to i16
  store i32 %v5_dc8c, i32* %r2.global-to-local, align 4
  %v7_dc98 = inttoptr i32 %v5_dc8c to i8*
  store i8* %v7_dc98, i8** %stack_var_-42, align 4
  %tmp45 = icmp ugt i16 %v6_dc8c, 1024
  br i1 %tmp45, label %dec_label_pc_dee4, label %dec_label_pc_dca0

dec_label_pc_dca0:                                ; preds = %dec_label_pc_dc84
  %v0_dca0 = load i32, i32* @r4, align 4
  %v1_dca0 = load i32, i32* @r5, align 4
  %v2_dca0 = inttoptr i32 %v1_dca0 to i32*
  store i32 %v0_dca0, i32* %v2_dca0, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v0_dcac = load i32, i32* @r8, align 4
  %v1_dcac = inttoptr i32 %v0_dcac to i32*
  %v2_dcac = load i32, i32* %v1_dcac, align 4
  %v7_dcb4 = call i32 @function_12a4c(i32 %v2_dcac, i32 %v2_dcb0, i32 %v5_dc8c, i32 16386)
  %v7_dcb8 = icmp eq i32 %v7_dcb4, -1
  br i1 %v7_dcb8, label %dec_label_pc_de28, label %dec_label_pc_dcc0

dec_label_pc_dcc0:                                ; preds = %dec_label_pc_dca0
  %v2_dcc0 = icmp eq i32 %v7_dcb4, 0
  br i1 %v2_dcc0, label %dec_label_pc_de38, label %dec_label_pc_dcc8

dec_label_pc_dcc8:                                ; preds = %dec_label_pc_dcc0
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_dcd8 = load i32, i32* @r8, align 4
  %v1_dcd8 = inttoptr i32 %v0_dcd8 to i32*
  %v2_dcd8 = load i32, i32* %v1_dcd8, align 4
  %v4_dcdc = call i32 @function_12a4c(i32 %v2_dcd8, i32 %v2_de14, i32 2, i32 16384)
  %v3_dce4 = load i8*, i8** %stack_var_-42, align 4
  %v4_dce4 = ptrtoint i8* %v3_dce4 to i32
  %v3_dce8 = udiv i32 %v4_dce4, 256
  %v1_dcec = urem i32 %v4_dce4, 256
  store i32 %v1_dcec, i32* %r3.global-to-local, align 4
  %v4_dcf0 = mul nuw nsw i32 %v1_dcec, 256
  %v5_dcf0 = or i32 %v4_dcf0, %v3_dce8
  store i32 %v5_dcf0, i32* %ip.global-to-local, align 4
  store i32 %v2_db54, i32* @lr, align 4
  store i32 %v5_dcf0, i32* %r2.global-to-local, align 4
  %v0_dd00 = load i32, i32* @r8, align 4
  %v1_dd00 = inttoptr i32 %v0_dd00 to i32*
  %v2_dd00 = load i32, i32* %v1_dd00, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_dd08 = inttoptr i32 %v5_dcf0 to i8*
  store i8* %v6_dd08, i8** %stack_var_-42, align 4
  %v6_dd0c = call i32 @function_12a4c(i32 %v2_dd00, i32 %v2_dcb0, i32 %v5_dcf0, i32 16384)
  store i32 %v2_db54, i32* %r2.global-to-local, align 4
  %v3_dd14 = load i8*, i8** %stack_var_-42, align 4
  %v3_dd18 = icmp eq i8* %v3_dd14, null
  br i1 %v3_dd18, label %dec_label_pc_da2c, label %dec_label_pc_dd20

dec_label_pc_dd20:                                ; preds = %dec_label_pc_dcc8
  %v4_dd14 = ptrtoint i8* %v3_dd14 to i32
  %v5_dd24 = call i32 @function_82e8(i32* nonnull %stack_var_-1416, i32 %v4_dd14, i32 %v2_db54)
  br label %dec_label_pc_da2c

dec_label_pc_dd2c:                                ; preds = %dec_label_pc_daa0
  %v0_dd34 = load i32, i32* @r4, align 4
  store i32 %v0_dd34, i32* %r2.global-to-local, align 4
  %v3_dd38 = call i32 @function_12b7c(i32 2, i32 1, i32 %v0_dd34)
  %v7_dd3c = icmp eq i32 %v3_dd38, -1
  store i32 %v3_dd38, i32* @r5, align 4
  %v1_dd44 = load i32, i32* %r8.global-to-local, align 4
  %v2_dd44 = inttoptr i32 %v1_dd44 to i32*
  store i32 %v3_dd38, i32* %v2_dd44, align 4
  br i1 %v7_dd3c, label %dec_label_pc_dab0, label %dec_label_pc_dd4c

dec_label_pc_dd4c:                                ; preds = %dec_label_pc_dd2c
  %v0_dd4c = load i32, i32* @r4, align 4
  store i32 %v0_dd4c, i32* %r2.global-to-local, align 4
  %v2_dd54 = call i32 @function_121d0(i32 %v3_dd38, i32 3)
  %v1_dd5c = or i32 %v2_dd54, 2048
  store i32 %v1_dd5c, i32* %r2.global-to-local, align 4
  %v0_dd60 = load i32, i32* @r5, align 4
  %v2_dd64 = call i32 @function_121d0(i32 %v0_dd60, i32 4)
  %v2_dd6c = load i32, i32* inttoptr (i32 98444 to i32*), align 4
  store i32 %v2_dd6c, i32* %r3.global-to-local, align 4
  %v2_dd70 = icmp eq i32 %v2_dd6c, 0
  br i1 %v2_dd70, label %bb43, label %bb42

bb42:                                             ; preds = %dec_label_pc_dd4c
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_dd4c, %bb42
  %v2_dd78 = xor i1 %v2_dd70, true
  call void @__pseudo_cond_branch(i1 %v2_dd78, i32 %v2_dd6c)
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_dd80 = load i32, i32* %r8.global-to-local, align 4
  %v1_dd80 = inttoptr i32 %v0_dd80 to i32*
  %v2_dd80 = load i32, i32* %v1_dd80, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v2_dd8c = load i32, i32* @fp, align 4
  %v3_dd8c = inttoptr i32 %v2_dd8c to i8*
  store i8 1, i8* %v3_dd8c, align 1
  %v4_dd90 = call i32 @function_12964(i32 %v2_dd80, i32 ptrtoint (i16** @global_var_1a2e0.74 to i32), i32 16)
  br label %dec_label_pc_dab0

dec_label_pc_dd98:                                ; preds = %dec_label_pc_db74
  store i32 4, i32* @r5, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 %v2_dda8, i32* %r3.global-to-local, align 4
  store i32 %v2_ddac, i32* %ip.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 4, i32* %stack_var_-56, align 4
  %v5_ddc0 = call i32 @function_129d4(i32 %v2_dbfc, i32 1, i32 4, i32 %v2_dda8, i32 %v2_ddac)
  %v3_ddc4 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_ddc4, i32* %r3.global-to-local, align 4
  %v2_ddc8 = icmp eq i32 %v3_ddc4, 0
  br i1 %v2_ddc8, label %dec_label_pc_de5c, label %dec_label_pc_ddd0

dec_label_pc_ddd0:                                ; preds = %dec_label_pc_dd98
  %v0_ddd0 = load i32, i32* @r4, align 4
  %v1_ddd0 = inttoptr i32 %v0_ddd0 to i32*
  %v2_ddd0 = load i32, i32* %v1_ddd0, align 4
  %v1_ddd4 = call i32 @function_1239c(i32 %v2_ddd0)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_dddc = load i32, i32* @r4, align 4
  %v2_dddc = inttoptr i32 %v1_dddc to i32*
  store i32 -1, i32* %v2_dddc, align 4
  %v0_dde0 = call i32 @function_df2c()
  %v3_dde8 = zext i32 %v0_dde0 to i64
  %v4_dde8 = mul nuw i64 %v3_dde8, 3435973837
  %v7_dde8 = trunc i64 %v4_dde8 to i32
  store i32 %v7_dde8, i32* @lr, align 4
  %v3_ddec1 = udiv i64 %v4_dde8, 34359738368
  %v3_ddf03 = mul nuw nsw i64 %v3_ddec1, 8
  %v3_ddf0 = trunc i64 %v3_ddf03 to i32
  store i32 %v3_ddf0, i32* %r2.global-to-local, align 4
  %v2_ddf45 = mul nuw nsw i64 %v3_ddec1, 2
  %v2_ddf4 = trunc i64 %v2_ddf45 to i32
  %v2_ddf8 = add i32 %v3_ddf0, %v2_ddf4
  store i32 %v2_ddf8, i32* %r3.global-to-local, align 4
  %v2_ddfc = sub i32 %v0_dde0, %v2_ddf8
  %v1_de00 = add i32 %v2_ddfc, 1
  %v1_de04 = call i32 @function_14488(i32 %v1_de00)
  br label %dec_label_pc_da2c

dec_label_pc_de0c:                                ; preds = %dec_label_pc_db3c
  %v0_de10 = load i32, i32* @sl, align 4
  %v1_de10 = inttoptr i32 %v0_de10 to i32*
  %v2_de10 = load i32, i32* %v1_de10, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_de20 = call i32 @function_12ac0(i32 %v2_de10, i32 %v2_de14, i32 2, i32 16384)
  br label %dec_label_pc_db68

dec_label_pc_de28:                                ; preds = %dec_label_pc_dca0, %dec_label_pc_dc34
  %v0_de28 = load i32, i32* @r5, align 4
  %v1_de28 = inttoptr i32 %v0_de28 to i32*
  %v2_de28 = load i32, i32* %v1_de28, align 4
  store i32 %v2_de28, i32* %r3.global-to-local, align 4
  %v7_de2c = icmp eq i32 %v2_de28, 4
  br i1 %v7_de2c, label %dec_label_pc_da2c, label %bb44

bb44:                                             ; preds = %dec_label_pc_de28
  %v8_de30 = icmp eq i32 %v2_de28, 11
  br i1 %v8_de30, label %dec_label_pc_da2c, label %dec_label_pc_de38

dec_label_pc_de38:                                ; preds = %bb44, %dec_label_pc_dcc0, %dec_label_pc_dc6c
  %v0_de38 = load i32, i32* @sl, align 4
  %v1_de38 = inttoptr i32 %v0_de38 to i32*
  %v2_de38 = load i32, i32* %v1_de38, align 4
  store i32 56900, i32* @lr, align 4
  %v1_de40 = icmp ne i32 %v2_de38, -1
  call void @__pseudo_cond_branch(i1 %v1_de40, i32 ptrtoint (i32* @global_var_1239c.92 to i32))
  store i32 98440, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 -1, i32* inttoptr (i32 98440 to i32*), align 8
  %v1_de54 = call i32 @function_14488(i32 1)
  br label %dec_label_pc_da2c

dec_label_pc_de5c:                                ; preds = %dec_label_pc_dd98
  %v2_de64 = call i32 @function_118dc(i8* %v1_de64)
  %sext = mul i32 %v2_de64, 16777216
  %v1_de68 = sdiv i32 %sext, 16777216
  %v7_de68 = inttoptr i32 %v1_de68 to i8*
  store i8* %v7_de68, i8** %stack_var_-42, align 4
  %v0_de6c = call i32 @function_11b98()
  %v0_de74 = load i32, i32* @r5, align 4
  store i32 %v0_de74, i32* %r2.global-to-local, align 4
  store i32 %v0_de6c, i32* @global_var_1a2d4.47, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_de84 = load i32, i32* @r4, align 4
  %v1_de84 = inttoptr i32 %v0_de84 to i32*
  %v2_de84 = load i32, i32* %v1_de84, align 4
  %v4_de88 = call i32 @function_12ac0(i32 %v2_de84, i32 ptrtoint (i32* @global_var_17724.95 to i32), i32 %v0_de74, i32 16384)
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_de94 = load i32, i32* @r4, align 4
  %v1_de94 = inttoptr i32 %v0_de94 to i32*
  %v2_de94 = load i32, i32* %v1_de94, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_dea0 = call i32 @function_12ac0(i32 %v2_de94, i32 %v2_de14, i32 1, i32 16384)
  %v3_dea4 = load i8*, i8** %stack_var_-42, align 4
  %v4_dea4 = ptrtoint i8* %v3_dea4 to i32
  store i32 %v4_dea4, i32* %r2.global-to-local, align 4
  %v3_dea8 = icmp eq i8* %v3_dea4, null
  br i1 %v3_dea8, label %dec_label_pc_da2c, label %dec_label_pc_deb0

dec_label_pc_deb0:                                ; preds = %dec_label_pc_de5c
  %v0_deb4 = load i32, i32* @r4, align 4
  %v1_deb4 = inttoptr i32 %v0_deb4 to i32*
  %v2_deb4 = load i32, i32* %v1_deb4, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_dec0 = call i32 @function_12ac0(i32 %v2_deb4, i32 %v2_d868, i32 %v4_dea4, i32 16384)
  br label %dec_label_pc_da2c

dec_label_pc_dec8:                                ; preds = %dec_label_pc_dc74
  %v0_decc = load i32, i32* @r8, align 4
  %v1_decc = inttoptr i32 %v0_decc to i32*
  %v2_decc = load i32, i32* %v1_decc, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_ded8 = add i32 %v4_dc78, 16384
  store i32 %v1_ded8, i32* %r3.global-to-local, align 4
  %v4_dedc = call i32 @function_12a4c(i32 %v2_decc, i32 %v2_de14, i32 2, i32 %v1_ded8)
  br label %dec_label_pc_da2c

dec_label_pc_dee4:                                ; preds = %dec_label_pc_dc84
  %v0_dee4 = load i32, i32* @r8, align 4
  %v1_dee4 = inttoptr i32 %v0_dee4 to i32*
  %v2_dee4 = load i32, i32* %v1_dee4, align 4
  %v1_dee8 = call i32 @function_1239c(i32 %v2_dee4)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_def0 = load i32, i32* @r8, align 4
  %v2_def0 = inttoptr i32 %v1_def0 to i32*
  store i32 -1, i32* %v2_def0, align 4
  br label %dec_label_pc_da2c

; uselistorder directives
  uselistorder i32 %v3_dd38, { 1, 3, 2, 0 }
  uselistorder i8* %v3_dd14, { 1, 0 }
  uselistorder i32 %v5_dcf0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_dce4, { 1, 0 }
  uselistorder i32 %v7_dcb4, { 1, 0 }
  uselistorder i32 %v5_dc8c, { 1, 0, 3, 2 }
  uselistorder i32 %v4_dc78, { 2, 1, 0, 3 }
  uselistorder i32 %v4_dc60, { 1, 0 }
  uselistorder i32 %v2_dbfc, { 6, 3, 2, 0, 1, 5, 4 }
  uselistorder i32 %v5_db44, { 1, 0, 2 }
  uselistorder i32 %v2_db40, { 2, 0, 1 }
  uselistorder i32 %v5_db28, { 1, 2, 0 }
  uselistorder i32 %v2_da6c, { 2, 1, 0 }
  uselistorder i32 %v1_da5c, { 1, 2, 0 }
  uselistorder i32 %v1_da40, { 1, 2, 0 }
  uselistorder i32 %v2_de14, { 2, 0, 4, 3, 1 }
  uselistorder i32 %v2_db54, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v2_da28, { 1, 0, 2 }
  uselistorder i32 %v2_d8c4, { 0, 10, 1, 11, 2, 9, 3, 4, 8, 7, 5, 12, 6 }
  uselistorder i32 %v2_d8ac, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v2_d7d8, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-136, { 1, 0, 2 }
  uselistorder i32* %stack_var_-48, { 1, 0, 2 }
  uselistorder i8** %stack_var_-42, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 5, 6, 3, 4, 7, 8 }
  uselistorder i8* null, { 2, 0, 1 }
  uselistorder i32 16386, { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @function_14488, { 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i8* bitcast (i8** @global_var_18258.89 to i8*), { 0, 2, 1 }
  uselistorder i32 98436, { 1, 0, 2 }
  uselistorder i8** @global_var_18258.89, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_18258.89 to i32), { 1, 0 }
  uselistorder i32 (i32)* @function_d6dc, { 1, 0 }
  uselistorder i32 (i32)* @function_ced0, { 1, 0 }
  uselistorder i32 (i32)* @function_85e0, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_dff0, { 2, 1, 0 }
  uselistorder i32 ptrtoint (i16** @global_var_1a2e0.74 to i32), { 0, 1, 3, 2 }
  uselistorder i32 (i32, i32)* @function_12c28, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_db68, { 2, 1, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %dec_label_pc_dab0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_daa0, { 1, 0 }
  uselistorder label %dec_label_pc_da2c, { 7, 8, 9, 1, 10, 2, 0, 11, 12, 3, 4, 5, 13, 6, 14 }
  uselistorder label %dec_label_pc_d87c, { 2, 0, 1 }
}

define i32 @function_df1c(i32 %arg1) local_unnamed_addr {
dec_label_pc_df1c:
  %cpsr_c.global-to-local = alloca i1, align 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v0_df1c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_df1c, label %bb, label %dec_label_pc_df1c._crit_edge

dec_label_pc_df1c._crit_edge:                     ; preds = %dec_label_pc_df1c
  %v0_df20.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb2

bb:                                               ; preds = %dec_label_pc_df1c
  %v2_df1c = load i32, i32* @r4, align 4
  %v3_df1c = icmp slt i32 %v2_df1c, 0
  store i1 %v3_df1c, i1* %cpsr_c.global-to-local, align 1
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_df1c._crit_edge, %bb
  %v0_df20 = phi i1 [ %v0_df20.pre, %dec_label_pc_df1c._crit_edge ], [ %v3_df1c, %bb ]
  call void @__pseudo_cond_branch(i1 %v0_df20, i32 -22312492)
  %v0_df28 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_df28, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %v2_df28 = load i32, i32* @r4, align 4
  %v3_df28 = and i32 %v2_df28, 8192
  %v4_df28 = icmp ne i32 %v3_df28, 0
  store i1 %v4_df28, i1* %cpsr_c.global-to-local, align 1
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %v7_df28 = load i32, i32* @r0, align 4
  ret i32 %v7_df28

; uselistorder directives
  uselistorder i1* %cpsr_c.global-to-local, { 3, 2, 0, 1 }
  uselistorder label %bb4, { 1, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_df2c() local_unnamed_addr {
dec_label_pc_df2c:
  %v2_df38 = load i32, i32* @global_var_1825c.97, align 4
  %v2_df3c = load i32, i32* @global_var_18268.99, align 4
  %v4_df48 = mul i32 %v2_df38, 2048
  %v5_df48 = xor i32 %v4_df48, %v2_df38
  store i32 %v5_df48, i32* @r3, align 4
  %v4_df4c = udiv i32 %v2_df3c, 524288
  %v5_df4c = xor i32 %v4_df4c, %v2_df3c
  %v2_df50 = load i32, i32* @global_var_18260.101, align 4
  %v2_df54 = load i32, i32* @global_var_18264.103, align 4
  %v2_df58 = xor i32 %v5_df4c, %v5_df48
  %v4_df5c = udiv i32 %v5_df48, 256
  %v5_df5c = xor i32 %v2_df58, %v4_df5c
  store i32 %v2_df50, i32* @global_var_1825c.97, align 4
  store i32 %v2_df54, i32* @global_var_18260.101, align 4
  store i32 %v2_df3c, i32* @global_var_18264.103, align 4
  store i32 %v5_df5c, i32* @global_var_18268.99, align 4
  ret i32 %v5_df5c

; uselistorder directives
  uselistorder i32 %v2_df3c, { 2, 1, 0 }
  uselistorder i32 %v2_df38, { 1, 0 }
}

define i32 @function_df88(i32 %arg1) local_unnamed_addr {
dec_label_pc_df88:
  %v2_df94 = call i32 @function_1201c(i32* null)
  store i32 %v2_df94, i32* @r0, align 4
  store i32 %v2_df94, i32* @global_var_1825c.97, align 4
  %v0_dfa0 = call i32 @function_12008()
  store i32 %v0_dfa0, i32* @r0, align 4
  %v0_dfa8 = call i32 @function_11f60()
  %v2_dfb0 = xor i32 %v0_dfa0, %v0_dfa8
  store i32 %v2_dfb0, i32* @global_var_18260.101, align 4
  %v1_dfb8 = call i32 @function_127e0(i32 %v2_dfb0)
  %v2_dfbc = load i32, i32* @global_var_18260.101, align 4
  %v2_dfc8 = xor i32 %v2_dfbc, %v1_dfb8
  store i32 %v2_dfc8, i32* @global_var_18268.99, align 4
  store i32 %v1_dfb8, i32* @global_var_18264.103, align 4
  ret i32 %v1_dfb8

; uselistorder directives
  uselistorder i32 %v1_dfb8, { 1, 2, 0 }
  uselistorder i32 ()* @function_11f60, { 2, 1, 0 }
}

define i32 @function_dff0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_dff0:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_dff0 = load i32, i32* @r4, align 4
  %v6_dff0 = load i32, i32* @r5, align 4
  %v9_dff0 = load i32, i32* @r6, align 4
  %v12_dff0 = load i32, i32* @r7, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  %v1_e004 = call i32 @function_1139c(i32 28)
  %v3_e010 = call i32 @function_112d8(i32 28, i32* null)
  store i32 %v3_e010, i32* @r1, align 4
  %v2_e01c = bitcast i32* %stack_var_-72 to i8*
  %v3_e01c = call i32 @function_128e0(i8* %v2_e01c, i32 %v3_e010)
  %v2_e020 = icmp eq i32 %arg2, 0
  br i1 %v2_e020, label %dec_label_pc_e09c, label %dec_label_pc_e028

dec_label_pc_e028:                                ; preds = %dec_label_pc_dff0
  store i32 ptrtoint (i32* @global_var_1825c.97 to i32), i32* %sl.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18260.101 to i32), i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18264.103 to i32), i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_18268.99 to i32), i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v2_e080 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_e03c

dec_label_pc_e03c:                                ; preds = %dec_label_pc_e03c.dec_label_pc_e03c_crit_edge, %dec_label_pc_e028
  %v1_e060 = phi i32 [ %v1_e060.pre, %dec_label_pc_e03c.dec_label_pc_e03c_crit_edge ], [ ptrtoint (i32* @global_var_1825c.97 to i32), %dec_label_pc_e028 ]
  %v2_e03c = load i32, i32* @global_var_18268.99, align 4
  store i32 %v2_e03c, i32* %r2.global-to-local, align 4
  %v2_e040 = load i32, i32* @global_var_1825c.97, align 4
  %v4_e044 = udiv i32 %v2_e03c, 524288
  %v5_e044 = xor i32 %v4_e044, %v2_e03c
  %v4_e048 = mul i32 %v2_e040, 2048
  %v5_e048 = xor i32 %v4_e048, %v2_e040
  %v2_e04c = xor i32 %v5_e044, %v5_e048
  %v2_e050 = load i32, i32* @global_var_18260.101, align 4
  %v2_e054 = load i32, i32* @global_var_18264.103, align 4
  store i32 %v2_e054, i32* %ip.global-to-local, align 4
  %v4_e058 = udiv i32 %v5_e048, 256
  %v5_e058 = xor i32 %v2_e04c, %v4_e058
  store i32 %v5_e058, i32* @r4, align 4
  %v2_e060 = inttoptr i32 %v1_e060 to i32*
  store i32 %v2_e050, i32* %v2_e060, align 4
  %v0_e064 = load i32, i32* %ip.global-to-local, align 4
  %v1_e064 = load i32, i32* %r8.global-to-local, align 4
  %v2_e064 = inttoptr i32 %v1_e064 to i32*
  store i32 %v0_e064, i32* %v2_e064, align 4
  %v0_e068 = load i32, i32* %r2.global-to-local, align 4
  %v1_e068 = load i32, i32* @r7, align 4
  %v2_e068 = inttoptr i32 %v1_e068 to i32*
  store i32 %v0_e068, i32* %v2_e068, align 4
  %v0_e06c = load i32, i32* @r4, align 4
  %v1_e06c = load i32, i32* @r6, align 4
  %v2_e06c = inttoptr i32 %v1_e06c to i32*
  store i32 %v0_e06c, i32* %v2_e06c, align 4
  %v2_e070 = call i32 @function_118dc(i8* %v2_e01c)
  %v0_e078 = load i32, i32* @r4, align 4
  %v2_e07c = call i32 @function_11f34(i32 %v0_e078, i32 %v2_e070)
  %v2_e084 = add i32 %v2_e070, %v2_e080
  %v1_e088 = add i32 %v2_e084, -32
  %v2_e088 = inttoptr i32 %v1_e088 to i8*
  %v3_e088 = load i8, i8* %v2_e088, align 1
  %v2_e08c = load i32, i32* @r5, align 4
  %v3_e08c = load i32, i32* %fp.global-to-local, align 4
  %v4_e08c = add i32 %v3_e08c, %v2_e08c
  %v5_e08c = inttoptr i32 %v4_e08c to i8*
  store i8 %v3_e088, i8* %v5_e08c, align 1
  %v0_e090 = load i32, i32* @r5, align 4
  %v1_e090 = add i32 %v0_e090, 1
  store i32 %v1_e090, i32* @r5, align 4
  %v1_e094 = load i32, i32* %sb.global-to-local, align 4
  %v9_e094 = icmp eq i32 %v1_e090, %v1_e094
  br i1 %v9_e094, label %dec_label_pc_e09c, label %dec_label_pc_e03c.dec_label_pc_e03c_crit_edge

dec_label_pc_e03c.dec_label_pc_e03c_crit_edge:    ; preds = %dec_label_pc_e03c
  %v1_e060.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_e03c

dec_label_pc_e09c:                                ; preds = %dec_label_pc_e03c, %dec_label_pc_dff0
  %v1_e0a0 = call i32 @function_112fc(i32 28)
  store i32 %v3_dff0, i32* @r4, align 4
  store i32 %v6_dff0, i32* @r5, align 4
  store i32 %v9_dff0, i32* @r6, align 4
  store i32 %v12_dff0, i32* @r7, align 4
  ret i32 %v1_e0a0

; uselistorder directives
  uselistorder i32 %v2_e040, { 1, 0 }
  uselistorder i32 %v2_e03c, { 1, 0, 2 }
}

define i32 @function_e0c0(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e0c0:
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_e0c0 = load i32, i32* %r1.global-to-local, align 4
  %v3_e0c4 = load i32, i32* @r4, align 4
  store i32 %v3_e0c4, i32* %stack_var_-28, align 4
  %v0_e0c8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_e0c8, i32* %r5.global-to-local, align 4
  %tmp16 = icmp slt i32 %v0_e0c0, 1
  br i1 %tmp16, label %dec_label_pc_e170, label %dec_label_pc_e0d0

dec_label_pc_e0d0:                                ; preds = %dec_label_pc_e0c0
  store i32 ptrtoint (i32* @global_var_18268.99 to i32), i32* %sl.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18264.103 to i32), i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18260.101 to i32), i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1825c.97 to i32), i32* %r6.global-to-local, align 4
  %v2_e0e0 = load i32, i32* @global_var_18268.99, align 4
  store i32 %v2_e0e0, i32* %lr.global-to-local, align 4
  %v2_e0e4 = load i32, i32* @global_var_18264.103, align 4
  store i32 %v2_e0e4, i32* %r4.global-to-local, align 4
  %v2_e0e8 = load i32, i32* @global_var_18260.101, align 4
  store i32 %v2_e0e8, i32* %r0.global-to-local, align 4
  %v2_e0ec = load i32, i32* @global_var_1825c.97, align 4
  br label %dec_label_pc_e110

dec_label_pc_e0f4:                                ; preds = %dec_label_pc_e130
  %v1_e0f4 = trunc i32 %v5_e120 to i16
  %v3_e0f4 = inttoptr i32 %v9_e124 to i16*
  store i16 %v1_e0f4, i16* %v3_e0f4, align 2
  %v4_e0f4 = load i32, i32* %r5.global-to-local, align 4
  %v5_e0f4 = add i32 %v4_e0f4, -2
  store i32 %v5_e0f4, i32* %r5.global-to-local, align 4
  %v0_e0f8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_e0f8

dec_label_pc_e0f8:                                ; preds = %.thread, %dec_label_pc_e0f4
  %v0_e0f8 = phi i32 [ %v9_e128, %.thread ], [ %v0_e0f8.pre, %dec_label_pc_e0f4 ]
  %v2_e0f45 = phi i32 [ %v12_e124, %.thread ], [ %v5_e0f4, %dec_label_pc_e0f4 ]
  %tmp17 = icmp slt i32 %v0_e0f8, 1
  br i1 %tmp17, label %dec_label_pc_e178, label %dec_label_pc_e104

dec_label_pc_e104:                                ; preds = %dec_label_pc_e0f8
  %v0_e0fc = load i32, i32* %r0.global-to-local, align 4
  %v0_e104 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_e104, i32* %r0.global-to-local, align 4
  %v0_e108 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v0_e108, i32* %r4.global-to-local, align 4
  %v0_e10c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_e10c, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_e110

dec_label_pc_e110:                                ; preds = %dec_label_pc_e0d0, %dec_label_pc_e104
  %v0_e15c = phi i32 [ %v2_e0e8, %dec_label_pc_e0d0 ], [ %v0_e104, %dec_label_pc_e104 ]
  %v9_e124 = phi i32 [ %v0_e0c8, %dec_label_pc_e0d0 ], [ %v2_e0f45, %dec_label_pc_e104 ]
  %v0_e13c = phi i32 [ %v0_e0c0, %dec_label_pc_e0d0 ], [ %v0_e0f8, %dec_label_pc_e104 ]
  %v0_e150 = phi i32 [ %v2_e0e0, %dec_label_pc_e0d0 ], [ %v0_e10c, %dec_label_pc_e104 ]
  %v0_e14c = phi i32 [ %v2_e0ec, %dec_label_pc_e0d0 ], [ %v0_e0fc, %dec_label_pc_e104 ]
  %v4_e110 = mul i32 %v0_e14c, 2048
  %v5_e110 = xor i32 %v4_e110, %v0_e14c
  %v4_e114 = udiv i32 %v0_e150, 524288
  %v5_e114 = xor i32 %v4_e114, %v0_e150
  %v2_e118 = xor i32 %v5_e114, %v5_e110
  %v4_e120 = udiv i32 %v5_e110, 256
  %v5_e120 = xor i32 %v2_e118, %v4_e120
  store i32 %v5_e120, i32* %r3.global-to-local, align 4
  %v7_e124 = icmp sgt i32 %v0_e13c, 3
  br i1 %v7_e124, label %.thread, label %dec_label_pc_e130

.thread:                                          ; preds = %dec_label_pc_e110
  %v10_e124 = inttoptr i32 %v9_e124 to i32*
  store i32 %v5_e120, i32* %v10_e124, align 4
  %v11_e124 = load i32, i32* %r5.global-to-local, align 4
  %v12_e124 = add i32 %v11_e124, 4
  store i32 %v12_e124, i32* %r5.global-to-local, align 4
  %v8_e128 = load i32, i32* %r1.global-to-local, align 4
  %v9_e128 = add i32 %v8_e128, -4
  store i32 %v9_e128, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_e0f8

dec_label_pc_e130:                                ; preds = %dec_label_pc_e110
  %v7_e13c = icmp eq i32 %v0_e13c, 1
  store i32 %v5_e120, i32* %r3.global-to-local, align 4
  %v1_e144 = add i32 %v0_e13c, -2
  store i32 %v1_e144, i32* %r1.global-to-local, align 4
  br i1 %v7_e13c, label %dec_label_pc_e14c, label %dec_label_pc_e0f4

dec_label_pc_e14c:                                ; preds = %dec_label_pc_e130
  store i32 %v5_e120, i32* %r3.global-to-local, align 4
  %v1_e15c = load i32, i32* %r6.global-to-local, align 4
  %v2_e15c = inttoptr i32 %v1_e15c to i32*
  store i32 %v0_e15c, i32* %v2_e15c, align 4
  %v0_e160 = load i32, i32* %r4.global-to-local, align 4
  %v1_e160 = load i32, i32* %r7.global-to-local, align 4
  %v2_e160 = inttoptr i32 %v1_e160 to i32*
  store i32 %v0_e160, i32* %v2_e160, align 4
  %v0_e164 = load i32, i32* %lr.global-to-local, align 4
  %v1_e164 = load i32, i32* %r8.global-to-local, align 4
  %v2_e164 = inttoptr i32 %v1_e164 to i32*
  store i32 %v0_e164, i32* %v2_e164, align 4
  %v0_e168 = load i32, i32* %r3.global-to-local, align 4
  %v1_e168 = load i32, i32* %sl.global-to-local, align 4
  %v2_e168 = inttoptr i32 %v1_e168 to i32*
  store i32 %v0_e168, i32* %v2_e168, align 4
  %v0_e16c = load i32, i32* %r3.global-to-local, align 4
  %v1_e16c = trunc i32 %v0_e16c to i8
  %v2_e16c = load i32, i32* %r5.global-to-local, align 4
  %v3_e16c = inttoptr i32 %v2_e16c to i8*
  store i8 %v1_e16c, i8* %v3_e16c, align 1
  br label %dec_label_pc_e170

dec_label_pc_e170:                                ; preds = %dec_label_pc_e0c0, %dec_label_pc_e178, %dec_label_pc_e14c
  %v2_e170 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_e170, i32* @r4, align 4
  %v1_e174 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_e174

dec_label_pc_e178:                                ; preds = %dec_label_pc_e0f8
  %v0_e178 = load i32, i32* %r3.global-to-local, align 4
  %v1_e178 = load i32, i32* %sl.global-to-local, align 4
  %v2_e178 = inttoptr i32 %v1_e178 to i32*
  store i32 %v0_e178, i32* %v2_e178, align 4
  %v0_e17c = load i32, i32* %lr.global-to-local, align 4
  %v1_e17c = load i32, i32* %r8.global-to-local, align 4
  %v2_e17c = inttoptr i32 %v1_e17c to i32*
  store i32 %v0_e17c, i32* %v2_e17c, align 4
  %v0_e180 = load i32, i32* %r4.global-to-local, align 4
  %v1_e180 = load i32, i32* %r7.global-to-local, align 4
  %v2_e180 = inttoptr i32 %v1_e180 to i32*
  store i32 %v0_e180, i32* %v2_e180, align 4
  %v0_e184 = load i32, i32* %r0.global-to-local, align 4
  %v1_e184 = load i32, i32* %r6.global-to-local, align 4
  %v2_e184 = inttoptr i32 %v1_e184 to i32*
  store i32 %v0_e184, i32* %v2_e184, align 4
  br label %dec_label_pc_e170

; uselistorder directives
  uselistorder i32 %v9_e128, { 1, 0 }
  uselistorder i32 %v12_e124, { 1, 0 }
  uselistorder i32 %v5_e120, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v0_e14c, { 1, 0 }
  uselistorder i32 %v0_e150, { 1, 0 }
  uselistorder i32 %v0_e13c, { 1, 0, 2 }
  uselistorder i32 %v0_e0f8, { 1, 0 }
  uselistorder i32 %v0_e0c0, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 4, 0, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 4, 0, 1, 2, 3, 6, 5 }
  uselistorder i32* %r1.global-to-local, { 3, 5, 4, 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 2, 5, 6, 0, 1 }
  uselistorder i32* %lr.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* @global_var_1825c.97, { 2, 3, 5, 1, 0, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_1825c.97 to i32), { 1, 0, 2 }
  uselistorder i32* @global_var_18260.101, { 2, 3, 6, 4, 1, 0, 5 }
  uselistorder i32* @global_var_18264.103, { 2, 3, 5, 1, 0, 4 }
  uselistorder i32* @global_var_18268.99, { 2, 3, 5, 1, 0, 4 }
  uselistorder label %dec_label_pc_e170, { 1, 2, 0 }
  uselistorder label %dec_label_pc_e110, { 1, 0 }
}

define i32 @function_e19c() local_unnamed_addr {
dec_label_pc_e19c:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_e19c = load i32, i32* @r4, align 4
  store i32 %v3_e19c, i32* %stack_var_-16, align 4
  %v12_e19c = load i32, i32* @lr, align 4
  %v0_e1a0 = load i32, i32* @r0, align 4
  store i32 %v0_e1a0, i32* %r5.global-to-local, align 4
  %v1_e1a4 = add i32 %v0_e1a0, 4
  %v2_e1a4 = inttoptr i32 %v1_e1a4 to i32*
  %v3_e1a4 = load i32, i32* %v2_e1a4, align 4
  store i32 %v3_e1a4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %stack_var_-32, align 4
  store i32 57800, i32* @lr, align 4
  %v1_e1c4 = icmp ne i32 %v3_e1a4, -1
  call void @__pseudo_cond_branch(i1 %v1_e1c4, i32 ptrtoint (i32* @global_var_1239c.92 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_e1d4 = call i32 @function_12b7c(i32 2, i32 1, i32 0)
  store i32 %v3_e1d4, i32* %r0.global-to-local, align 4
  %v7_e1d8 = icmp eq i32 %v3_e1d4, -1
  %v1_e1dc = load i32, i32* %r5.global-to-local, align 4
  %v2_e1dc = add i32 %v1_e1dc, 4
  %v3_e1dc = inttoptr i32 %v2_e1dc to i32*
  store i32 %v3_e1d4, i32* %v3_e1dc, align 4
  br i1 %v7_e1d8, label %dec_label_pc_e19c.dec_label_pc_e254_crit_edge, label %dec_label_pc_e1e4

dec_label_pc_e19c.dec_label_pc_e254_crit_edge:    ; preds = %dec_label_pc_e19c
  %v1_e25c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e254

dec_label_pc_e1e4:                                ; preds = %dec_label_pc_e19c
  %v2_e1a8 = ptrtoint i32* %stack_var_-32 to i32
  %v0_e1e4 = load i32, i32* %r5.global-to-local, align 4
  %v1_e1e4 = add i32 %v0_e1e4, 28
  store i32 %v1_e1e4, i32* @r0, align 4
  %v0_e1e8 = load i32, i32* %r6.global-to-local, align 4
  %v2_e1e8 = add i32 %v0_e1e4, 24
  %v3_e1e8 = inttoptr i32 %v2_e1e8 to i32*
  store i32 %v0_e1e8, i32* %v3_e1e8, align 4
  store i32 256, i32* @r1, align 4
  %v0_e1f0 = call i32 @function_11970()
  store i32 %v0_e1f0, i32* %r0.global-to-local, align 4
  %v0_e1f4 = load i32, i32* %r5.global-to-local, align 4
  %v1_e1f4 = add i32 %v0_e1f4, 4
  %v2_e1f4 = inttoptr i32 %v1_e1f4 to i32*
  %v3_e1f4 = load i32, i32* %v2_e1f4, align 4
  store i32 %v3_e1f4, i32* %r4.global-to-local, align 4
  %v0_e1f8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_e1f8, i32* %r2.global-to-local, align 4
  store i32 %v3_e1f4, i32* %r0.global-to-local, align 4
  %v2_e204 = call i32 @function_121d0(i32 %v3_e1f4, i32 3)
  %v1_e20c = or i32 %v2_e204, 2048
  store i32 %v1_e20c, i32* %r2.global-to-local, align 4
  %v0_e210 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_e210, i32* %r0.global-to-local, align 4
  %v2_e214 = call i32 @function_121d0(i32 %v0_e210, i32 4)
  store i32 %v2_e214, i32* %r0.global-to-local, align 4
  %v2_e21c = load i32, i32* @global_var_182a0.117, align 4
  store i32 %v2_e21c, i32* %r2.global-to-local, align 4
  %v1_e224 = load i32, i32* %r5.global-to-local, align 4
  %v2_e224 = add i32 %v1_e224, 12
  %v3_e224 = inttoptr i32 %v2_e224 to i32*
  store i32 1, i32* %v3_e224, align 4
  store i32 2, i32* @r3, align 4
  store i32 2, i32* %stack_var_-32, align 4
  %v0_e230 = load i32, i32* %r2.global-to-local, align 4
  %v1_e230 = load i32, i32* %r5.global-to-local, align 4
  %v2_e230 = add i32 %v1_e230, 8
  %v3_e230 = inttoptr i32 %v2_e230 to i32*
  store i32 %v0_e230, i32* %v3_e230, align 4
  %v0_e234 = load i32, i32* %r5.global-to-local, align 4
  %v1_e234 = add i32 %v0_e234, 16
  %v2_e234 = inttoptr i32 %v1_e234 to i32*
  %v3_e234 = load i32, i32* %v2_e234, align 4
  store i32 %v3_e234, i32* @ip, align 4
  %v1_e238 = add i32 %v0_e234, 4
  %v2_e238 = inttoptr i32 %v1_e238 to i32*
  %v3_e238 = load i32, i32* %v2_e238, align 4
  store i32 %v3_e238, i32* %r0.global-to-local, align 4
  %v1_e23c = add i32 %v0_e234, 20
  %v2_e23c = inttoptr i32 %v1_e23c to i16*
  %v3_e23c = load i16, i16* %v2_e23c, align 2
  %v4_e23c = zext i16 %v3_e23c to i32
  store i32 %v4_e23c, i32* %r5.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_e250 = call i32 @function_12964(i32 %v3_e238, i32 %v2_e1a8, i32 16)
  store i32 %v3_e250, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e254

dec_label_pc_e254:                                ; preds = %dec_label_pc_e19c.dec_label_pc_e254_crit_edge, %dec_label_pc_e1e4
  %v1_e25c = phi i32 [ %v1_e25c.pre, %dec_label_pc_e19c.dec_label_pc_e254_crit_edge ], [ %v3_e250, %dec_label_pc_e1e4 ]
  %v2_e258 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_e258, i32* @r4, align 4
  store i32 %v12_e19c, i32* @lr, align 4
  ret i32 %v1_e25c

; uselistorder directives
  uselistorder i32 %v3_e1d4, { 1, 0, 2 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 5, 6, 4, 7 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 3, 2, 4, 5, 8, 9, 7, 6 }
  uselistorder i32 ()* @function_11970, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_e254, { 1, 0 }
}

define i32 @function_e264(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e264:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_e264 = load i32, i32* @r4, align 4
  %v6_e264 = load i32, i32* @r5, align 4
  %v9_e264 = load i32, i32* @r6, align 4
  %v12_e264 = load i32, i32* @r7, align 4
  %v15_e264 = load i32, i32* @r8, align 4
  %v18_e264 = load i32, i32* @sb, align 4
  %v21_e264 = load i32, i32* @sl, align 4
  %v24_e264 = load i32, i32* @fp, align 4
  store i32 ptrtoint (i32* @global_var_1826c.119 to i32), i32* @fp, align 4
  %v2_e26c = load i32, i32* @global_var_1826c.119, align 4
  store i32 ptrtoint (i32* @global_var_18298.121 to i32), i32* @sl, align 4
  %v1_e278 = add i32 %v2_e26c, 1
  store i32 %v1_e278, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_e284 = load i32, i32* @global_var_18298.121, align 4
  store i32 %v2_e284, i32* %r0.global-to-local, align 4
  %v3_e288 = mul i32 %v1_e278, 16
  store i32 %v3_e288, i32* %r1.global-to-local, align 4
  %v4_e290 = inttoptr i32 %v2_e284 to i32*
  %v5_e290 = call i32 @function_13818(i32* %v4_e290, i32 %v3_e288, i32 %arg3, i32 %v1_e278)
  %v2_e294 = load i32, i32* @global_var_1826c.119, align 4
  store i32 %v2_e294, i32* %r2.global-to-local, align 4
  store i32 %v5_e290, i32* @r8, align 4
  %v0_e29c = load i32, i32* @r5, align 4
  store i32 %v0_e29c, i32* %r0.global-to-local, align 4
  %v1_e2a4 = load i32, i32* @sl, align 4
  %v2_e2a4 = inttoptr i32 %v1_e2a4 to i32*
  store i32 %v5_e290, i32* %v2_e2a4, align 4
  %v1_e2a8 = inttoptr i32 %v0_e29c to i8*
  %v2_e2a8 = call i32 @function_118dc(i8* %v1_e2a8)
  %sext = mul i32 %v2_e2a8, 16777216
  %v1_e2ac = sdiv i32 %sext, 16777216
  %v2_e2ac = add nsw i32 %v1_e2ac, 1
  store i32 %v2_e2ac, i32* @r4, align 4
  store i32 %v1_e2ac, i32* @r7, align 4
  store i32 %v2_e2ac, i32* @r0, align 4
  %v0_e2b8 = call i32 @function_12dc4()
  store i32 %v0_e2b8, i32* %r0.global-to-local, align 4
  %v0_e2bc = load i32, i32* @r5, align 4
  store i32 %v0_e2bc, i32* %r1.global-to-local, align 4
  %v0_e2c0 = load i32, i32* @r4, align 4
  store i32 %v0_e2c0, i32* %r2.global-to-local, align 4
  store i32 %v0_e2b8, i32* %r6.global-to-local, align 4
  %v3_e2c8 = call i32 @function_1194c(i32 %v0_e2b8, i32 %v0_e2bc, i32 %v0_e2c0)
  store i32 %v3_e2c8, i32* %r0.global-to-local, align 4
  %v0_e2cc = load i32, i32* @r7, align 4
  %tmp22 = icmp slt i32 %v0_e2cc, 1
  %extract.t6 = trunc i32 %v0_e2cc to i8
  br i1 %tmp22, label %dec_label_pc_e2f0, label %dec_label_pc_e2d4

dec_label_pc_e2d4:                                ; preds = %dec_label_pc_e264
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_e2d8

dec_label_pc_e2d8:                                ; preds = %dec_label_pc_e2d8, %dec_label_pc_e2d4
  %v2_e2e0 = phi i32 [ %v1_e2e4, %dec_label_pc_e2d8 ], [ 0, %dec_label_pc_e2d4 ]
  %v1_e2d8 = load i32, i32* %r6.global-to-local, align 4
  %v2_e2d8 = add i32 %v1_e2d8, %v2_e2e0
  %v3_e2d8 = inttoptr i32 %v2_e2d8 to i8*
  %v4_e2d8 = load i8, i8* %v3_e2d8, align 1
  %v6_e2d8 = zext i8 %v4_e2d8 to i32
  %v1_e2dc = xor i32 %v6_e2d8, 84
  store i32 %v1_e2dc, i32* %r3.global-to-local, align 4
  %v1_e2e0 = trunc i32 %v1_e2dc to i8
  store i8 %v1_e2e0, i8* %v3_e2d8, align 1
  %v0_e2e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_e2e4 = add i32 %v0_e2e4, 1
  store i32 %v1_e2e4, i32* %r2.global-to-local, align 4
  %v1_e2e8 = load i32, i32* @r7, align 4
  %v9_e2e8 = icmp eq i32 %v1_e2e4, %v1_e2e8
  br i1 %v9_e2e8, label %dec_label_pc_e2f0.loopexit, label %dec_label_pc_e2d8

dec_label_pc_e2f0.loopexit:                       ; preds = %dec_label_pc_e2d8
  %extract.t = trunc i32 %v1_e2e4 to i8
  br label %dec_label_pc_e2f0

dec_label_pc_e2f0:                                ; preds = %dec_label_pc_e2f0.loopexit, %dec_label_pc_e264
  %v0_e300.off0 = phi i8 [ %extract.t, %dec_label_pc_e2f0.loopexit ], [ %extract.t6, %dec_label_pc_e264 ]
  %v2_e2f0 = load i32, i32* @global_var_1826c.119, align 4
  %v2_e2f4 = load i32, i32* @global_var_18298.121, align 4
  %v3_e2f8 = mul i32 %v2_e2f0, 16
  store i32 %v3_e2f8, i32* @sb, align 4
  %v2_e2fc = add i32 %v2_e2f4, %v3_e2f8
  store i32 %v2_e2fc, i32* %r2.global-to-local, align 4
  %v3_e300 = add i32 %v2_e2fc, 12
  %v4_e300 = inttoptr i32 %v3_e300 to i8*
  store i8 %v0_e300.off0, i8* %v4_e300, align 1
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %v2_e294, i32* %r3.global-to-local, align 4
  %v0_e30c = load i32, i32* %r6.global-to-local, align 4
  %v1_e30c = load i32, i32* @r8, align 4
  %v5_e30c = mul i32 %v2_e294, 16
  %v6_e30c = add i32 %v1_e30c, %v5_e30c
  %v7_e30c = inttoptr i32 %v6_e30c to i32*
  store i32 %v0_e30c, i32* %v7_e30c, align 4
  %v2_e310 = load i32, i32* @global_var_18298.121, align 4
  store i32 %v2_e310, i32* @r7, align 4
  %v1_e314 = inttoptr i32 %arg2 to i8*
  %v2_e314 = call i32 @function_118dc(i8* %v1_e314)
  %sext1 = mul i32 %v2_e314, 16777216
  %v1_e318 = sdiv i32 %sext1, 16777216
  %v2_e318 = add nsw i32 %v1_e318, 1
  store i32 %v2_e318, i32* @r4, align 4
  store i32 %v1_e318, i32* @r6, align 4
  store i32 %v2_e318, i32* @r0, align 4
  %v0_e324 = call i32 @function_12dc4()
  store i32 %v0_e324, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v0_e32c = load i32, i32* @r4, align 4
  store i32 %v0_e32c, i32* %r2.global-to-local, align 4
  store i32 %v0_e324, i32* %r5.global-to-local, align 4
  %v3_e334 = call i32 @function_1194c(i32 %v0_e324, i32 %arg2, i32 %v0_e32c)
  store i32 %v3_e334, i32* %r0.global-to-local, align 4
  %v0_e338 = load i32, i32* @r6, align 4
  %tmp23 = icmp slt i32 %v0_e338, 1
  %extract.t8 = trunc i32 %v0_e338 to i8
  br i1 %tmp23, label %dec_label_pc_e35c, label %dec_label_pc_e340

dec_label_pc_e340:                                ; preds = %dec_label_pc_e2f0
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_e344

dec_label_pc_e344:                                ; preds = %dec_label_pc_e344, %dec_label_pc_e340
  %v2_e34c = phi i32 [ %v1_e350, %dec_label_pc_e344 ], [ 0, %dec_label_pc_e340 ]
  %v1_e344 = load i32, i32* %r5.global-to-local, align 4
  %v2_e344 = add i32 %v1_e344, %v2_e34c
  %v3_e344 = inttoptr i32 %v2_e344 to i8*
  %v4_e344 = load i8, i8* %v3_e344, align 1
  %v6_e344 = zext i8 %v4_e344 to i32
  %v1_e348 = xor i32 %v6_e344, 84
  store i32 %v1_e348, i32* %r3.global-to-local, align 4
  %v1_e34c = trunc i32 %v1_e348 to i8
  store i8 %v1_e34c, i8* %v3_e344, align 1
  %v0_e350 = load i32, i32* %r2.global-to-local, align 4
  %v1_e350 = add i32 %v0_e350, 1
  store i32 %v1_e350, i32* %r2.global-to-local, align 4
  %v1_e354 = load i32, i32* @r6, align 4
  %v9_e354 = icmp eq i32 %v1_e350, %v1_e354
  br i1 %v9_e354, label %dec_label_pc_e35c.loopexit, label %dec_label_pc_e344

dec_label_pc_e35c.loopexit:                       ; preds = %dec_label_pc_e344
  %extract.t7 = trunc i32 %v1_e350 to i8
  br label %dec_label_pc_e35c

dec_label_pc_e35c:                                ; preds = %dec_label_pc_e35c.loopexit, %dec_label_pc_e2f0
  %v0_e36c.off0 = phi i8 [ %extract.t7, %dec_label_pc_e35c.loopexit ], [ %extract.t8, %dec_label_pc_e2f0 ]
  %v2_e35c = load i32, i32* @global_var_1826c.119, align 4
  store i32 %v2_e35c, i32* %r0.global-to-local, align 4
  %v2_e360 = load i32, i32* @global_var_18298.121, align 4
  %v3_e364 = mul i32 %v2_e35c, 16
  store i32 %v3_e364, i32* %r1.global-to-local, align 4
  %v2_e368 = or i32 %v3_e364, 13
  %v3_e36c = add i32 %v2_e368, %v2_e360
  %v4_e36c = inttoptr i32 %v3_e36c to i8*
  store i8 %v0_e36c.off0, i8* %v4_e36c, align 1
  store i32 ptrtoint (i16** @global_var_1829c.123 to i32), i32* %r4.global-to-local, align 4
  %v2_e378 = load i16, i16* bitcast (i16** @global_var_1829c.123 to i16*), align 4
  %v3_e378 = zext i16 %v2_e378 to i32
  store i32 %v3_e378, i32* %lr.global-to-local, align 4
  %v2_e380 = load i32, i32* @global_var_18298.121, align 4
  store i32 %v2_e380, i32* %r2.global-to-local, align 4
  %v0_e388 = load i32, i32* %r1.global-to-local, align 4
  %v2_e388 = add i32 %v0_e388, %v2_e380
  store i32 %v2_e388, i32* %r1.global-to-local, align 4
  store i32 lshr (i32 shl (i32 ptrtoint (i16** @global_var_1829c.123 to i32), i32 16), i32 16), i32* %r3.global-to-local, align 4
  %v0_e390 = load i32, i32* @sb, align 4
  %v1_e390 = load i32, i32* @r7, align 4
  %v2_e390 = add i32 %v1_e390, %v0_e390
  store i32 %v2_e390, i32* %ip.global-to-local, align 4
  %v0_e394 = load i32, i32* %r0.global-to-local, align 4
  %v1_e394 = add i32 %v0_e394, 1
  store i32 %v1_e394, i32* %r0.global-to-local, align 4
  %v3_e398 = add i32 %v2_e388, 10
  %v4_e398 = inttoptr i32 %v3_e398 to i16*
  store i16 trunc (i32 lshr (i32 shl (i32 ptrtoint (i16** @global_var_1829c.123 to i32), i32 16), i32 16) to i16), i16* %v4_e398, align 2
  %v0_e39c = load i32, i32* %lr.global-to-local, align 4
  %v1_e39c = trunc i32 %v0_e39c to i16
  %v2_e39c = load i32, i32* %r1.global-to-local, align 4
  %v3_e39c = add i32 %v2_e39c, 8
  %v4_e39c = inttoptr i32 %v3_e39c to i16*
  store i16 %v1_e39c, i16* %v4_e39c, align 2
  %v0_e3a0 = load i32, i32* %r5.global-to-local, align 4
  %v1_e3a0 = load i32, i32* %ip.global-to-local, align 4
  %v2_e3a0 = add i32 %v1_e3a0, 4
  %v3_e3a0 = inttoptr i32 %v2_e3a0 to i32*
  store i32 %v0_e3a0, i32* %v3_e3a0, align 4
  %v1_e3a4 = load i32, i32* @fp, align 4
  %v2_e3a4 = inttoptr i32 %v1_e3a4 to i32*
  store i32 %v1_e394, i32* %v2_e3a4, align 4
  %v0_e3a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_e3a8 = trunc i32 %v0_e3a8 to i16
  %v2_e3a8 = load i32, i32* %r4.global-to-local, align 4
  %v3_e3a8 = inttoptr i32 %v2_e3a8 to i16*
  store i16 %v1_e3a8, i16* %v3_e3a8, align 2
  store i32 %v3_e264, i32* @r4, align 4
  store i32 %v6_e264, i32* @r5, align 4
  store i32 %v9_e264, i32* @r6, align 4
  store i32 %v12_e264, i32* @r7, align 4
  store i32 %v15_e264, i32* @r8, align 4
  store i32 %v18_e264, i32* @sb, align 4
  store i32 %v21_e264, i32* @sl, align 4
  store i32 %v24_e264, i32* @fp, align 4
  ret i32 %v1_e394

; uselistorder directives
  uselistorder i32 %v3_e364, { 1, 0 }
  uselistorder i32 %v1_e350, { 0, 2, 3, 1 }
  uselistorder i32 %v0_e324, { 1, 0, 2 }
  uselistorder i32 %v3_e2f8, { 1, 0 }
  uselistorder i32 %v1_e2e4, { 0, 2, 3, 1 }
  uselistorder i32 %v0_e2b8, { 1, 0, 2 }
  uselistorder i32 %v2_e294, { 1, 0, 2 }
  uselistorder i32 %v3_e288, { 1, 0 }
  uselistorder i32 %v1_e278, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 (i8*)* @function_118dc, { 0, 1, 22, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23 }
  uselistorder i32 %arg2, { 3, 2, 1, 0, 4 }
}

define i32 @function_e3c4(i32 %arg1) local_unnamed_addr {
dec_label_pc_e3c4:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %stack_var_-42 = alloca i32, align 4
  %stack_var_-77 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-45 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-352 = alloca i32, align 4
  %stack_var_-224 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-1866 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i8, align 1
  %v3_e3c4 = load i32, i32* @r4, align 4
  %v6_e3c4 = load i32, i32* @r5, align 4
  %v0_e3d0 = call i32 @function_1208c()
  store i32 %v0_e3d0, i32* %r0.global-to-local, align 4
  %v7_e3d4 = icmp eq i32 %v0_e3d0, -1
  %. = zext i1 %v7_e3d4 to i32
  %tmp1365 = icmp slt i32 %v0_e3d0, 1
  %storemerge1281 = select i1 %tmp1365, i32 %., i32 1
  store i32 %storemerge1281, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1a2f8.125 to i32), i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e3f0 = icmp eq i32 %storemerge1281, 0
  store i1 %v2_e3f0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_e3d0, i32* @global_var_1a2f8.125, align 4
  br i1 %v2_e3f0, label %dec_label_pc_e488, label %dec_label_pc_e3fc

dec_label_pc_e3fc:                                ; preds = %dec_label_pc_e3c4
  store i32 %v3_e3c4, i32* %r4.global-to-local, align 4
  store i32 %v6_e3c4, i32* @r5, align 4
  ret i32 %v0_e3d0

dec_label_pc_e488:                                ; preds = %dec_label_pc_e3c4
  %v0_e488 = call i32 @function_11b98()
  store i32 %v0_e488, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a2d4.47 to i32), i32* %r1.global-to-local, align 4
  store i32 %v0_e488, i32* @global_var_1a2d4.47, align 4
  %v1_e494 = call i32 @function_df88(i32 %v0_e488)
  %v0_e498 = load i32, i32* @r4, align 4
  store i32 %v0_e498, i32* %r0.global-to-local, align 4
  %v1_e49c = inttoptr i32 %v0_e498 to i32*
  %v2_e49c = call i32 @function_1201c(i32* %v1_e49c)
  store i32 ptrtoint (i32* @global_var_182a0.117 to i32), i32* %r2.global-to-local, align 4
  store i32 288, i32* %r1.global-to-local, align 4
  store i32 %v2_e49c, i32* @global_var_182a0.117, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v2_e4b0 = call i32 @function_136e4(i32 256, i32 288)
  store i32 ptrtoint (i32* @global_var_1a2f0.129 to i32), i32* %r3.global-to-local, align 4
  %v0_e4b8 = load i32, i32* @r4, align 4
  store i32 %v0_e4b8, i32* %stack_var_-52, align 4
  store i32 %v2_e4b0, i32* @global_var_1a2f0.129, align 4
  store i32 %v0_e4b8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e4c4

dec_label_pc_e4c4:                                ; preds = %dec_label_pc_e4c4.dec_label_pc_e4c4_crit_edge, %dec_label_pc_e488
  %v2_e4d0 = phi i32 [ %v2_e4d0.pre, %dec_label_pc_e4c4.dec_label_pc_e4c4_crit_edge ], [ %v2_e4b0, %dec_label_pc_e488 ]
  %v0_e4cc = phi i32 [ %v0_e508, %dec_label_pc_e4c4.dec_label_pc_e4c4_crit_edge ], [ %v0_e4b8, %dec_label_pc_e488 ]
  store i32 ptrtoint (i32* @global_var_1a2f0.129 to i32), i32* %r4.global-to-local, align 4
  %v3_e4cc = mul i32 %v0_e4cc, 256
  store i32 %v3_e4cc, i32* %ip.global-to-local, align 4
  %v2_e4e0 = mul i32 %v0_e4cc, 288
  %v1_e4e8 = add i32 %v0_e4cc, 1
  store i32 %v1_e4e8, i32* %r0.global-to-local, align 4
  %v2_e4ec = add i32 %v2_e4e0, %v2_e4d0
  store i32 %v2_e4ec, i32* %r2.global-to-local, align 4
  store i32 %v2_e4ec, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* @r3, align 4
  %v2_e500 = add i32 %v2_e4ec, 4
  %v3_e500 = inttoptr i32 %v2_e500 to i32*
  store i32 -1, i32* %v3_e500, align 4
  %v0_e504 = load i32, i32* @r5, align 4
  %v1_e504 = load i32, i32* %r1.global-to-local, align 4
  %v2_e504 = add i32 %v1_e504, 12
  %v3_e504 = inttoptr i32 %v2_e504 to i32*
  store i32 %v0_e504, i32* %v3_e504, align 4
  %v0_e508 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_e508, i32* %stack_var_-52, align 4
  %v7_e50c = icmp sgt i32 %v1_e4e8, 255
  br i1 %v7_e50c, label %dec_label_pc_e510, label %dec_label_pc_e4c4.dec_label_pc_e4c4_crit_edge

dec_label_pc_e4c4.dec_label_pc_e4c4_crit_edge:    ; preds = %dec_label_pc_e4c4
  %v2_e4d0.pre = load i32, i32* @global_var_1a2f0.129, align 4
  br label %dec_label_pc_e4c4

dec_label_pc_e510:                                ; preds = %dec_label_pc_e4c4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_e51c = call i32 @function_12b7c(i32 2, i32 3, i32 6)
  store i32 %v3_e51c, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  %v0_e528 = load i32, i32* @r5, align 4
  store i32 %v0_e528, i32* %r2.global-to-local, align 4
  store i32 %v3_e51c, i32* @global_var_1a2f4.131, align 4
  store i32 %v3_e51c, i32* %r4.global-to-local, align 4
  %v2_e534 = call i32 @function_121d0(i32 %v3_e51c, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_e53c = or i32 %v2_e534, 2048
  store i32 %v1_e53c, i32* %r2.global-to-local, align 4
  %v0_e540 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_e540, i32* %r0.global-to-local, align 4
  %v2_e544 = call i32 @function_121d0(i32 %v0_e540, i32 4)
  %v2_e548 = ptrtoint i8* %stack_var_-56 to i32
  %v2_e54c = load i32, i32* @global_var_1a2f4.131, align 4
  store i32 %v2_e54c, i32* %r0.global-to-local, align 4
  store i32 1, i32* %ip.global-to-local, align 4
  %v0_e554 = load i32, i32* @r5, align 4
  store i32 %v0_e554, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v2_e55c = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_e55c, i32* %r3.global-to-local, align 4
  store i32 1, i32* %stack_var_-52, align 4
  %v5_e56c = call i32 @function_12b38(i32 %v2_e54c, i32 %v0_e554, i32 3, i32 %v2_e55c, i32 4)
  store i32 %v5_e56c, i32* %r0.global-to-local, align 4
  %v1_e570 = load i32, i32* @r5, align 4
  %v3_e570 = icmp uge i32 %v5_e56c, %v1_e570
  store i1 %v3_e570, i1* %cpsr_c.global-to-local, align 1
  %v9_e570 = icmp eq i32 %v5_e56c, %v1_e570
  store i1 %v9_e570, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e570, label %dec_label_pc_e578, label %dec_label_pc_1037c

dec_label_pc_e578:                                ; preds = %dec_label_pc_e510, %dec_label_pc_1037c, %dec_label_pc_e578
  %v0_e578 = call i32 @function_df2c()
  %v3_e57c = mul i32 %v0_e578, 65536
  store i32 %v3_e57c, i32* %r0.global-to-local, align 4
  %v3_e580 = urem i32 %v0_e578, 65536
  store i32 %v3_e580, i32* %ip.global-to-local, align 4
  %v1_e584 = mul i32 %v0_e578, 256
  %v3_e588 = and i32 %v1_e584, 65280
  %tmp1368 = udiv i32 %v0_e578, 256
  %v4_e58c = urem i32 %tmp1368, 256
  %v5_e58c = or i32 %v4_e58c, %v3_e588
  store i32 %v5_e58c, i32* %r3.global-to-local, align 4
  %v2_e590 = icmp ugt i32 %v5_e58c, 1023
  store i1 %v2_e590, i1* %cpsr_c.global-to-local, align 1
  %v7_e590 = icmp eq i32 %v5_e58c, 1024
  store i1 %v7_e590, i1* %cpsr_z.global-to-local, align 1
  %v3_e598 = icmp ult i32 %v5_e58c, 1022
  br i1 %v3_e598, label %dec_label_pc_e578, label %dec_label_pc_e59c

dec_label_pc_e59c:                                ; preds = %dec_label_pc_e578
  %v5_e594.le = trunc i32 %v0_e578 to i16
  %v2_e5a0 = load i8, i8* bitcast (i8** @global_var_18270.133 to i8*), align 4
  %v3_e5a0 = zext i8 %v2_e5a0 to i32
  %v1_e5a4 = and i32 %v3_e5a0, 240
  %v1_e5a8 = or i32 %v1_e5a4, 5
  store i32 %v1_e5a8, i32* %r3.global-to-local, align 4
  store i32 69, i32* %r2.global-to-local, align 4
  store i32 10240, i32* %r0.global-to-local, align 4
  store i8 69, i8* bitcast (i8** @global_var_18270.133 to i8*), align 4
  store i16 10240, i16* bitcast (i32* @global_var_18272.134 to i16*), align 4
  %v0_e5c8 = call i32 @function_df2c()
  %v1_e5c8 = trunc i32 %v0_e5c8 to i16
  store i32 %v0_e5c8, i32* %r0.global-to-local, align 4
  %v3_e5d0 = load i8, i8* @global_var_18290.137, align 1
  store i32 ptrtoint (i32* @global_var_18284.136 to i32), i32* @fp, align 4
  store i32 ptrtoint (i8** @global_var_18270.133 to i32), i32* @r4, align 4
  %tmp = urem i8 %v3_e5d0, 16
  %v1_e5e0 = zext i8 %tmp to i32
  store i16 %v1_e5c8, i16* bitcast (i32* @global_var_18274.138 to i16*), align 4
  %v1_e5e8 = or i32 %v1_e5e0, 80
  store i32 %v1_e5e8, i32* %r1.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i8 64, i8* bitcast (i32* @global_var_18278.139 to i8*), align 4
  store i8 6, i8* bitcast (i32* @global_var_18279.140 to i8*), align 4
  %v1_e5fc = trunc i32 %v1_e5e8 to i8
  store i8 %v1_e5fc, i8* @global_var_18290.137, align 1
  %v4_e600 = sext i16 %v5_e594.le to i32
  store i32 %v4_e600, i32* @lr, align 4
  store i32 5888, i32* %ip.global-to-local, align 4
  store i16 5888, i16* @global_var_18286.141, align 2
  store i16 %v5_e594.le, i16* bitcast (i32* @global_var_18284.136 to i16*), align 4
  %v0_e610 = call i32 @function_df2c()
  %v1_e610 = trunc i32 %v0_e610 to i16
  %v3_e614 = load i8, i8* @global_var_18291.142, align 1
  %v4_e614 = zext i8 %v3_e614 to i32
  %v1_e618 = or i32 %v4_e614, 2
  store i32 %v1_e618, i32* %r3.global-to-local, align 4
  %v1_e61c = trunc i32 %v1_e618 to i8
  store i8 %v1_e61c, i8* @global_var_18291.142, align 1
  store i16 %v1_e610, i16* bitcast (i32* @global_var_18292.143 to i16*), align 4
  store i32 ptrtoint ([5 x i8]* @global_var_17734.145 to i32), i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1772c.147 to i32), i32* %r0.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_e630 = call i32 @function_e264(i32 ptrtoint ([6 x i8]* @global_var_1772c.147 to i32), i32 ptrtoint ([5 x i8]* @global_var_17734.145 to i32), i32 9)
  store i32 ptrtoint ([6 x i8]* @global_var_1772c.147 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1773c.149 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v5_e640 = call i32 @function_e264(i32 ptrtoint ([6 x i8]* @global_var_1772c.147 to i32), i32 ptrtoint ([6 x i8]* @global_var_1773c.149 to i32), i32 10)
  store i32 ptrtoint ([6 x i8]* @global_var_1772c.147 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_17744.151 to i32), i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  %v5_e650 = call i32 @function_e264(i32 ptrtoint ([6 x i8]* @global_var_1772c.147 to i32), i32 ptrtoint ([7 x i8]* @global_var_17744.151 to i32), i32 11)
  store i32 ptrtoint ([6 x i8]* @global_var_1772c.147 to i32), i32* %r0.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1772c.147 to i32), i32* %r1.global-to-local, align 4
  %v5_e660 = call i32 @function_e264(i32 ptrtoint ([6 x i8]* @global_var_1772c.147 to i32), i32 ptrtoint ([6 x i8]* @global_var_1772c.147 to i32), i32 10)
  store i32 ptrtoint ([6 x i8]* @global_var_1772c.147 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17780.153 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_e670 = call i32 @function_e264(i32 ptrtoint ([6 x i8]* @global_var_1772c.147 to i32), i32 ptrtoint (i32* @global_var_17780.153 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_1774c.155 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1774c.155 to i32), i32* %r1.global-to-local, align 4
  %v5_e680 = call i32 @function_e264(i32 ptrtoint ([5 x i8]* @global_var_1774c.155 to i32), i32 ptrtoint ([5 x i8]* @global_var_1774c.155 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_1774c.155 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_17744.151 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v5_e690 = call i32 @function_e264(i32 ptrtoint ([5 x i8]* @global_var_1774c.155 to i32), i32 ptrtoint ([7 x i8]* @global_var_17744.151 to i32), i32 10)
  store i32 ptrtoint ([8 x i8]* @global_var_17754.157 to i32), i32* %r0.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_17754.157 to i32), i32* %r1.global-to-local, align 4
  %v5_e6a0 = call i32 @function_e264(i32 ptrtoint ([8 x i8]* @global_var_17754.157 to i32), i32 ptrtoint ([8 x i8]* @global_var_17754.157 to i32), i32 14)
  store i32 ptrtoint ([8 x i8]* @global_var_17754.157 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1775c.159 to i32), i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v4_e6b0 = call i32 @function_e264(i32 ptrtoint ([8 x i8]* @global_var_17754.157 to i32), i32 ptrtoint (i32* @global_var_1775c.159 to i32), i32 15)
  store i32 ptrtoint ([8 x i8]* @global_var_17754.157 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17768.161 to i32), i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v4_e6c0 = call i32 @function_e264(i32 ptrtoint ([8 x i8]* @global_var_17754.157 to i32), i32 ptrtoint (i32* @global_var_17768.161 to i32), i32 15)
  store i32 ptrtoint ([8 x i8]* @global_var_17754.157 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_17774.163 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_e6d0 = call i32 @function_e264(i32 ptrtoint ([8 x i8]* @global_var_17754.157 to i32), i32 ptrtoint ([7 x i8]* @global_var_17774.163 to i32), i32 13)
  store i32 ptrtoint ([8 x i8]* @global_var_17754.157 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17780.153 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_e6e0 = call i32 @function_e264(i32 ptrtoint ([8 x i8]* @global_var_17754.157 to i32), i32 ptrtoint (i32* @global_var_17780.153 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_1777c.165 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_17784.167 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_e6f0 = call i32 @function_e264(i32 ptrtoint ([5 x i8]* @global_var_1777c.165 to i32), i32 ptrtoint ([6 x i8]* @global_var_17784.167 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_1777c.165 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1778c.169 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_e700 = call i32 @function_e264(i32 ptrtoint ([5 x i8]* @global_var_1777c.165 to i32), i32 ptrtoint ([6 x i8]* @global_var_1778c.169 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_1777c.165 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_17794.171 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v5_e710 = call i32 @function_e264(i32 ptrtoint ([5 x i8]* @global_var_1777c.165 to i32), i32 ptrtoint ([9 x i8]* @global_var_17794.171 to i32), i32 12)
  store i32 ptrtoint ([5 x i8]* @global_var_1777c.165 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_177a0.173 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_e720 = call i32 @function_e264(i32 ptrtoint ([5 x i8]* @global_var_1777c.165 to i32), i32 ptrtoint ([5 x i8]* @global_var_177a0.173 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_1777c.165 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_177a8.175 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_e730 = call i32 @function_e264(i32 ptrtoint ([5 x i8]* @global_var_1777c.165 to i32), i32 ptrtoint ([4 x i8]* @global_var_177a8.175 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_1777c.165 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1777c.165 to i32), i32* %r1.global-to-local, align 4
  %v5_e740 = call i32 @function_e264(i32 ptrtoint ([5 x i8]* @global_var_1777c.165 to i32), i32 ptrtoint ([5 x i8]* @global_var_1777c.165 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_1777c.165 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_177ac.177 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v5_e750 = call i32 @function_e264(i32 ptrtoint ([5 x i8]* @global_var_1777c.165 to i32), i32 ptrtoint ([7 x i8]* @global_var_177ac.177 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_1777c.165 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17780.153 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_e760 = call i32 @function_e264(i32 ptrtoint ([5 x i8]* @global_var_1777c.165 to i32), i32 ptrtoint (i32* @global_var_17780.153 to i32), i32 4)
  store i32 ptrtoint ([8 x i8]* @global_var_177b4.179 to i32), i32* %r0.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_177b4.179 to i32), i32* %r1.global-to-local, align 4
  %v5_e770 = call i32 @function_e264(i32 ptrtoint ([8 x i8]* @global_var_177b4.179 to i32), i32 ptrtoint ([8 x i8]* @global_var_177b4.179 to i32), i32 14)
  store i32 ptrtoint ([7 x i8]* @global_var_177bc.181 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_177c4.183 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v5_e780 = call i32 @function_e264(i32 ptrtoint ([7 x i8]* @global_var_177bc.181 to i32), i32 ptrtoint ([7 x i8]* @global_var_177c4.183 to i32), i32 12)
  store i32 ptrtoint ([6 x i8]* @global_var_177cc.185 to i32), i32* %r0.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_177cc.185 to i32), i32* %r1.global-to-local, align 4
  %v5_e790 = call i32 @function_e264(i32 ptrtoint ([6 x i8]* @global_var_177cc.185 to i32), i32 ptrtoint ([6 x i8]* @global_var_177cc.185 to i32), i32 10)
  store i32 ptrtoint ([6 x i8]* @global_var_177cc.185 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_177d4.187 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_e7a0 = call i32 @function_e264(i32 ptrtoint ([6 x i8]* @global_var_177cc.185 to i32), i32 ptrtoint ([7 x i8]* @global_var_177d4.187 to i32), i32 9)
  store i32 ptrtoint ([6 x i8]* @global_var_177cc.185 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_177dc.189 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v5_e7b0 = call i32 @function_e264(i32 ptrtoint ([6 x i8]* @global_var_177cc.185 to i32), i32 ptrtoint ([8 x i8]* @global_var_177dc.189 to i32), i32 12)
  store i32 ptrtoint ([4 x i8]* @global_var_177e4.191 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17780.153 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_e7c0 = call i32 @function_e264(i32 ptrtoint ([4 x i8]* @global_var_177e4.191 to i32), i32 ptrtoint (i32* @global_var_17780.153 to i32), i32 3)
  %v2_e7c8 = ptrtoint i32* %stack_var_-1866 to i32
  store i32 %v2_e7c8, i32* %r0.global-to-local, align 4
  %v1_10200 = add i32 %v2_e7c8, 20
  %v1_10254 = add i32 %v2_e7c8, 16
  %v2_10254 = inttoptr i32 %v1_10254 to i32*
  %v1_10268 = add i32 %v2_e7c8, 9
  %v2_10268 = inttoptr i32 %v1_10268 to i8*
  %v2_104f8 = ptrtoint i32* %stack_var_-40 to i32
  %v2_10544 = ptrtoint i32* %stack_var_-68 to i32
  %v2_10548 = ptrtoint i32* %stack_var_-224 to i32
  %v2_1054c = ptrtoint i32* %stack_var_-352 to i32
  %v2_10eac = ptrtoint i32* %stack_var_-45 to i32
  %v2_10eb4 = ptrtoint i32* %stack_var_-88 to i32
  %v2_10ebc = ptrtoint i32* %stack_var_-77 to i32
  %v2_10d3c = ptrtoint i32* %stack_var_-60 to i32
  %v2_11118 = ptrtoint i32* %stack_var_-280 to i32
  %v2_111e0 = ptrtoint i32* %stack_var_-96 to i32
  %v2_11230 = ptrtoint i32* %stack_var_-42 to i32
  %v1_102e8 = add i32 %v2_e7c8, 12
  %v2_102e8 = inttoptr i32 %v1_102e8 to i32*
  br label %dec_label_pc_e7d0

dec_label_pc_e7d0:                                ; preds = %dec_label_pc_106e0, %dec_label_pc_e59c
  %v2_e7d4 = load i32, i32* @global_var_182a0.117, align 4
  store i32 %v2_e7d4, i32* %r1.global-to-local, align 4
  %v0_e7d8 = load i32, i32* @fp, align 4
  %v3_e7d8 = icmp uge i32 %v0_e7d8, %v2_e7d4
  store i1 %v3_e7d8, i1* %cpsr_c.global-to-local, align 1
  %v9_e7d8 = icmp eq i32 %v0_e7d8, %v2_e7d4
  store i1 %v9_e7d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e7d8, label %dec_label_pc_101f0, label %dec_label_pc_e7e4

dec_label_pc_e7e4:                                ; preds = %dec_label_pc_e7d0
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  br label %dec_label_pc_e7ec

dec_label_pc_e7ec:                                ; preds = %dec_label_pc_1010c, %dec_label_pc_e7e4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-96, align 4
  store i32 0, i32* %stack_var_-88, align 4
  %v0_e800 = call i32 @function_df2c()
  %v1_e800 = trunc i32 %v0_e800 to i16
  store i32 %v0_e800, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a2d4.47 to i32), i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_18270.133 to i32), i32* %r4.global-to-local, align 4
  %v2_e80c = load i32, i32* @global_var_1a2d4.47, align 4
  store i32 %v2_e80c, i32* %r3.global-to-local, align 4
  store i16 %v1_e800, i16* bitcast (i32* @global_var_18274.138 to i16*), align 4
  store i32 %v2_e80c, i32* @global_var_1827c.192, align 4
  br label %dec_label_pc_e818

dec_label_pc_e818:                                ; preds = %.thread651.thread, %dec_label_pc_e8ac, %dec_label_pc_e8a0, %dec_label_pc_e894, %dec_label_pc_e888, %dec_label_pc_e87c, %dec_label_pc_e870, %dec_label_pc_e864, %dec_label_pc_e858, %dec_label_pc_e84c, %dec_label_pc_e840, %bb1920, %dec_label_pc_100e0, %dec_label_pc_100ac, %dec_label_pc_10068, %bb1892, %dec_label_pc_ff64, %.thread599, %dec_label_pc_fef0, %dec_label_pc_feb4, %bb1860, %bb1853, %bb1848, %bb1843, %bb1837, %bb1832, %bb1826, %bb1821, %bb1816, %bb1811, %bb1806, %bb1801, %bb1796, %bb1791, %bb1786, %.thread471, %dec_label_pc_fae0, %.thread465, %dec_label_pc_fa9c, %.thread459, %dec_label_pc_fa70, %.thread455, %dec_label_pc_fa48, %dec_label_pc_fa38, %.thread450, %.thread446, %.thread442, %.thread438, %bb1774, %bb1767, %bb1762, %bb1754, %bb1748, %bb1741, %bb1736, %bb1731, %bb1726, %bb1721, %bb1716, %.thread365, %bb1708, %bb1704, %bb1701, %bb1695, %bb1687, %bb1684, %bb1680, %bb1672, %bb1665, %bb1660, %bb1657, %bb1653, %bb1649, %bb1641, %bb1634, %bb1629, %bb1624, %bb1622, %bb1618, %bb1611, %dec_label_pc_f3b8, %dec_label_pc_f3a8, %.thread245, %dec_label_pc_f368, %.thread239, %.thread235, %dec_label_pc_f310, %dec_label_pc_f2f4, %.thread228, %.thread224, %.thread220, %dec_label_pc_efe4, %dec_label_pc_edb4, %dec_label_pc_ecf4, %.thread114, %dec_label_pc_ec10, %dec_label_pc_ebec, %.thread91, %dec_label_pc_eb6c, %dec_label_pc_eb48, %.thread75, %.thread71, %dec_label_pc_eacc, %dec_label_pc_ea88, %.thread60, %dec_label_pc_ea3c, %dec_label_pc_ea24, %dec_label_pc_e9f0, %.thread48, %.thread44, %.thread40, %dec_label_pc_e9a0, %.thread35, %.thread31, %dec_label_pc_e918, %dec_label_pc_e904, %dec_label_pc_e8f0, %dec_label_pc_10104, %dec_label_pc_100d8, %bb1914, %bb1913, %dec_label_pc_1008c, %dec_label_pc_10044, %dec_label_pc_10020, %dec_label_pc_10000, %dec_label_pc_ffdc, %bb1887, %dec_label_pc_ff34, %dec_label_pc_ff18, %dec_label_pc_fed4, %dec_label_pc_fe98, %dec_label_pc_fe78, %dec_label_pc_fe54, %bb1854, %bb1827, %bb1802, %bb1782, %bb1781, %bb1776, %bb1775, %bb1742, %bb1711, %bb1635, %bb1597, %dec_label_pc_f28c, %dec_label_pc_f268, %dec_label_pc_f248, %dec_label_pc_f228, %dec_label_pc_f1f8, %dec_label_pc_f1d8, %dec_label_pc_f1b8, %dec_label_pc_f1a0, %dec_label_pc_f178, %dec_label_pc_f160, %dec_label_pc_f140, %dec_label_pc_f11c, %dec_label_pc_f0f4, %dec_label_pc_f0d8, %dec_label_pc_f0b8, %dec_label_pc_f098, %dec_label_pc_f078, %dec_label_pc_f058, %dec_label_pc_f044, %dec_label_pc_f020, %dec_label_pc_f000, %dec_label_pc_efc8, %dec_label_pc_efac, %dec_label_pc_ef90, %dec_label_pc_ef70, %dec_label_pc_ef5c, %dec_label_pc_ef40, %dec_label_pc_ef1c, %dec_label_pc_eef0, %dec_label_pc_eec4, %dec_label_pc_ee98, %dec_label_pc_ee68, %dec_label_pc_ee44, %dec_label_pc_ee1c, %dec_label_pc_ee00, %dec_label_pc_edd8, %dec_label_pc_ed90, %dec_label_pc_ed64, %dec_label_pc_ed44, %dec_label_pc_ecec, %dec_label_pc_ecbc, %bb1459, %bb1456, %bb1453, %bb1444, %bb1441, %bb1438, %bb1429, %bb1426, %bb1425, %bb1422, %bb1415, %bb1408, %bb1401, %bb1398, %bb1395, %bb1386, %bb1383, %dec_label_pc_e8b8, %bb1380, %bb1379, %bb1378, %bb1377, %bb1376, %bb1375, %bb1374, %bb1373, %bb1372, %bb1371, %bb1370, %dec_label_pc_e7ec
  %v0_e818 = call i32 @function_df2c()
  store i32 %v0_e818, i32* %r0.global-to-local, align 4
  %v1_e81c = urem i32 %v0_e818, 256
  store i32 %v1_e81c, i32* %r1.global-to-local, align 4
  %v3_e820 = udiv i32 %v0_e818, 256
  store i32 %v3_e820, i32* %r3.global-to-local, align 4
  %v3_e824 = udiv i32 %v0_e818, 65536
  store i32 %v3_e824, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e828 = icmp eq i32 %v1_e81c, 0
  store i1 %v2_e828, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e828, label %bb1370, label %bb1369

bb1369:                                           ; preds = %dec_label_pc_e818
  %v3_e82c = icmp ugt i32 %v1_e81c, 126
  store i1 %v3_e82c, i1* %cpsr_c.global-to-local, align 1
  %v8_e82c = icmp eq i32 %v1_e81c, 127
  store i1 %v8_e82c, i1* %cpsr_z.global-to-local, align 1
  br label %bb1370

bb1370:                                           ; preds = %dec_label_pc_e818, %bb1369
  %v0_e83c = phi i1 [ true, %dec_label_pc_e818 ], [ %v8_e82c, %bb1369 ]
  %v1_e830 = urem i32 %v3_e820, 256
  store i32 %v1_e830, i32* %ip.global-to-local, align 4
  %v1_e834 = urem i32 %v3_e824, 256
  store i32 %v1_e834, i32* %r2.global-to-local, align 4
  %v1_e838 = and i32 %v0_e818, 8388608
  %v2_e838 = icmp ne i32 %v1_e838, 0
  store i1 %v2_e838, i1* %cpsr_c.global-to-local, align 1
  %v3_e838 = udiv i32 %v0_e818, 16777216
  store i32 %v3_e838, i32* %r0.global-to-local, align 4
  br i1 %v0_e83c, label %dec_label_pc_e818, label %dec_label_pc_e840

dec_label_pc_e840:                                ; preds = %bb1370
  %v2_e840 = icmp ugt i32 %v1_e81c, 14
  store i1 %v2_e840, i1* %cpsr_c.global-to-local, align 1
  %v7_e840 = icmp eq i32 %v1_e81c, 15
  store i1 %v7_e840, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e840, label %dec_label_pc_e818, label %bb1371

bb1371:                                           ; preds = %dec_label_pc_e840
  %v3_e844 = icmp ugt i32 %v1_e81c, 2
  store i1 %v3_e844, i1* %cpsr_c.global-to-local, align 1
  %v8_e844 = icmp eq i32 %v1_e81c, 3
  store i1 %v8_e844, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e844, label %dec_label_pc_e818, label %dec_label_pc_e84c

dec_label_pc_e84c:                                ; preds = %bb1371
  %v2_e84c = icmp ugt i32 %v1_e81c, 9
  store i1 %v2_e84c, i1* %cpsr_c.global-to-local, align 1
  %v7_e84c = icmp eq i32 %v1_e81c, 10
  store i1 %v7_e84c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e84c, label %dec_label_pc_e818, label %bb1372

bb1372:                                           ; preds = %dec_label_pc_e84c
  %v3_e850 = icmp ugt i32 %v1_e81c, 55
  store i1 %v3_e850, i1* %cpsr_c.global-to-local, align 1
  %v8_e850 = icmp eq i32 %v1_e81c, 56
  store i1 %v8_e850, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e850, label %dec_label_pc_e818, label %dec_label_pc_e858

dec_label_pc_e858:                                ; preds = %bb1372
  %v2_e858 = icmp ugt i32 %v1_e81c, 48
  store i1 %v2_e858, i1* %cpsr_c.global-to-local, align 1
  %v7_e858 = icmp eq i32 %v1_e81c, 49
  store i1 %v7_e858, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e858, label %dec_label_pc_e818, label %bb1373

bb1373:                                           ; preds = %dec_label_pc_e858
  %v3_e85c = icmp ugt i32 %v1_e81c, 24
  store i1 %v3_e85c, i1* %cpsr_c.global-to-local, align 1
  %v8_e85c = icmp eq i32 %v1_e81c, 25
  store i1 %v8_e85c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e85c, label %dec_label_pc_e818, label %dec_label_pc_e864

dec_label_pc_e864:                                ; preds = %bb1373
  %v2_e864 = icmp ugt i32 %v1_e81c, 136
  store i1 %v2_e864, i1* %cpsr_c.global-to-local, align 1
  %v7_e864 = icmp eq i32 %v1_e81c, 137
  store i1 %v7_e864, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e864, label %dec_label_pc_e818, label %bb1374

bb1374:                                           ; preds = %dec_label_pc_e864
  %v3_e868 = icmp ugt i32 %v1_e81c, 49
  store i1 %v3_e868, i1* %cpsr_c.global-to-local, align 1
  %v8_e868 = icmp eq i32 %v1_e81c, 50
  store i1 %v8_e868, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e868, label %dec_label_pc_e818, label %dec_label_pc_e870

dec_label_pc_e870:                                ; preds = %bb1374
  %v2_e870 = icmp ugt i32 %v1_e81c, 6
  store i1 %v2_e870, i1* %cpsr_c.global-to-local, align 1
  %v7_e870 = icmp eq i32 %v1_e81c, 7
  store i1 %v7_e870, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e870, label %dec_label_pc_e818, label %bb1375

bb1375:                                           ; preds = %dec_label_pc_e870
  %v3_e874 = icmp ugt i32 %v1_e81c, 5
  store i1 %v3_e874, i1* %cpsr_c.global-to-local, align 1
  %v8_e874 = icmp eq i32 %v1_e81c, 6
  store i1 %v8_e874, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e874, label %dec_label_pc_e818, label %dec_label_pc_e87c

dec_label_pc_e87c:                                ; preds = %bb1375
  %v2_e87c = icmp ugt i32 %v1_e81c, 20
  store i1 %v2_e87c, i1* %cpsr_c.global-to-local, align 1
  %v7_e87c = icmp eq i32 %v1_e81c, 21
  store i1 %v7_e87c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e87c, label %dec_label_pc_e818, label %bb1376

bb1376:                                           ; preds = %dec_label_pc_e87c
  %v3_e880 = icmp ugt i32 %v1_e81c, 10
  store i1 %v3_e880, i1* %cpsr_c.global-to-local, align 1
  %v8_e880 = icmp eq i32 %v1_e81c, 11
  store i1 %v8_e880, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e880, label %dec_label_pc_e818, label %dec_label_pc_e888

dec_label_pc_e888:                                ; preds = %bb1376
  %v2_e888 = icmp ugt i32 %v1_e81c, 25
  store i1 %v2_e888, i1* %cpsr_c.global-to-local, align 1
  %v7_e888 = icmp eq i32 %v1_e81c, 26
  store i1 %v7_e888, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e888, label %dec_label_pc_e818, label %bb1377

bb1377:                                           ; preds = %dec_label_pc_e888
  %v3_e88c = icmp ugt i32 %v1_e81c, 21
  store i1 %v3_e88c, i1* %cpsr_c.global-to-local, align 1
  %v8_e88c = icmp eq i32 %v1_e81c, 22
  store i1 %v8_e88c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e88c, label %dec_label_pc_e818, label %dec_label_pc_e894

dec_label_pc_e894:                                ; preds = %bb1377
  %v2_e894 = icmp ugt i32 %v1_e81c, 28
  store i1 %v2_e894, i1* %cpsr_c.global-to-local, align 1
  %v7_e894 = icmp eq i32 %v1_e81c, 29
  store i1 %v7_e894, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e894, label %dec_label_pc_e818, label %bb1378

bb1378:                                           ; preds = %dec_label_pc_e894
  %v3_e898 = icmp ugt i32 %v1_e81c, 27
  store i1 %v3_e898, i1* %cpsr_c.global-to-local, align 1
  %v8_e898 = icmp eq i32 %v1_e81c, 28
  store i1 %v8_e898, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e898, label %dec_label_pc_e818, label %dec_label_pc_e8a0

dec_label_pc_e8a0:                                ; preds = %bb1378
  %v2_e8a0 = icmp ugt i32 %v1_e81c, 32
  store i1 %v2_e8a0, i1* %cpsr_c.global-to-local, align 1
  %v7_e8a0 = icmp eq i32 %v1_e81c, 33
  store i1 %v7_e8a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e8a0, label %dec_label_pc_e818, label %bb1379

bb1379:                                           ; preds = %dec_label_pc_e8a0
  %v3_e8a4 = icmp ugt i32 %v1_e81c, 29
  store i1 %v3_e8a4, i1* %cpsr_c.global-to-local, align 1
  %v8_e8a4 = icmp eq i32 %v1_e81c, 30
  store i1 %v8_e8a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e8a4, label %dec_label_pc_e818, label %dec_label_pc_e8ac

dec_label_pc_e8ac:                                ; preds = %bb1379
  %v2_e8ac = icmp ugt i32 %v1_e81c, 213
  store i1 %v2_e8ac, i1* %cpsr_c.global-to-local, align 1
  %v7_e8ac = icmp eq i32 %v1_e81c, 214
  store i1 %v7_e8ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e8ac, label %dec_label_pc_e818, label %bb1380

bb1380:                                           ; preds = %dec_label_pc_e8ac
  %v3_e8b0 = icmp ugt i32 %v1_e81c, 54
  store i1 %v3_e8b0, i1* %cpsr_c.global-to-local, align 1
  %v8_e8b0 = icmp eq i32 %v1_e81c, 55
  store i1 %v8_e8b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e8b0, label %dec_label_pc_e818, label %dec_label_pc_e8b8

dec_label_pc_e8b8:                                ; preds = %bb1380
  %v2_e8b8 = icmp ugt i32 %v1_e81c, 214
  store i1 %v2_e8b8, i1* %cpsr_c.global-to-local, align 1
  %v7_e8b8 = icmp eq i32 %v1_e81c, 215
  store i1 %v7_e8b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e8b8, label %dec_label_pc_e818, label %dec_label_pc_e8c0

dec_label_pc_e8c0:                                ; preds = %dec_label_pc_e8b8
  %v7_e8c0 = icmp eq i32 %v1_e81c, 192
  %.1975 = zext i1 %v7_e8c0 to i32
  %v2_e8cc = icmp ugt i32 %v1_e830, 167
  store i1 %v2_e8cc, i1* %cpsr_c.global-to-local, align 1
  %v7_e8cc = icmp eq i32 %v1_e830, 168
  store i1 %v7_e8cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e8cc, label %bb1383, label %dec_label_pc_e8d8

bb1383:                                           ; preds = %dec_label_pc_e8c0
  %v2_e8c0 = icmp ugt i32 %v1_e81c, 191
  store i1 %v2_e8c0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_e8c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e8c0, label %dec_label_pc_e818, label %dec_label_pc_e8d8

dec_label_pc_e8d8:                                ; preds = %dec_label_pc_e8c0, %bb1383
  %v7_e8d8 = icmp eq i32 %v1_e81c, 146
  %.1976 = zext i1 %v7_e8d8 to i32
  %v2_e8e4 = icmp ugt i32 %v1_e830, 16
  store i1 %v2_e8e4, i1* %cpsr_c.global-to-local, align 1
  %v7_e8e4 = icmp eq i32 %v1_e830, 17
  store i1 %v7_e8e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e8e4, label %bb1386, label %dec_label_pc_e8f0

bb1386:                                           ; preds = %dec_label_pc_e8d8
  %v2_e8d8 = icmp ugt i32 %v1_e81c, 145
  store i1 %v2_e8d8, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_e8d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e8d8, label %dec_label_pc_e818, label %dec_label_pc_e8f0

dec_label_pc_e8f0:                                ; preds = %dec_label_pc_e8d8, %bb1386
  %v2_e8f0 = icmp ugt i32 %v1_e830, 79
  store i1 %v2_e8f0, i1* %cpsr_c.global-to-local, align 1
  %v7_e8f0 = icmp eq i32 %v1_e830, 80
  %.1977 = zext i1 %v7_e8f0 to i32
  %v2_e8fc = and i32 %.1977, %.1976
  %v4_e8fc = icmp eq i32 %v2_e8fc, 0
  store i1 %v4_e8fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_e8fc, label %dec_label_pc_e904, label %dec_label_pc_e818

dec_label_pc_e904:                                ; preds = %dec_label_pc_e8f0
  %v2_e904 = icmp ugt i32 %v1_e830, 97
  store i1 %v2_e904, i1* %cpsr_c.global-to-local, align 1
  %v7_e904 = icmp eq i32 %v1_e830, 98
  %.1978 = zext i1 %v7_e904 to i32
  %v2_e910 = and i32 %.1978, %.1976
  %v4_e910 = icmp eq i32 %v2_e910, 0
  store i1 %v4_e910, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_e910, label %dec_label_pc_e918, label %dec_label_pc_e818

dec_label_pc_e918:                                ; preds = %dec_label_pc_e904
  %v2_e918 = icmp ugt i32 %v1_e830, 153
  store i1 %v2_e918, i1* %cpsr_c.global-to-local, align 1
  %v7_e918 = icmp eq i32 %v1_e830, 154
  %.1979 = zext i1 %v7_e918 to i32
  %v2_e924 = and i32 %.1979, %.1976
  %v4_e924 = icmp eq i32 %v2_e924, 0
  store i1 %v4_e924, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_e924, label %dec_label_pc_e92c, label %dec_label_pc_e818

dec_label_pc_e92c:                                ; preds = %dec_label_pc_e918
  %v7_e92c = icmp eq i32 %v1_e81c, 147
  %.1980 = zext i1 %v7_e92c to i32
  store i32 %.1980, i32* %sb.global-to-local, align 4
  %v2_e938 = icmp ugt i32 %v1_e830, 158
  store i1 %v2_e938, i1* %cpsr_c.global-to-local, align 1
  %v7_e938 = icmp eq i32 %v1_e830, 159
  store i1 %v7_e938, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e938, label %bb1395, label %dec_label_pc_e944

bb1395:                                           ; preds = %dec_label_pc_e92c
  %v2_e92c = icmp ugt i32 %v1_e81c, 146
  store i1 %v2_e92c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_e92c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e92c, label %dec_label_pc_e818, label %dec_label_pc_e944

dec_label_pc_e944:                                ; preds = %dec_label_pc_e92c, %bb1395
  %v2_e944 = icmp ugt i32 %v1_e830, 113
  %v7_e944 = icmp eq i32 %v1_e830, 114
  %.1981 = zext i1 %v7_e944 to i32
  %v2_e950 = icmp ugt i32 %v1_e81c, 147
  store i1 %v2_e950, i1* %cpsr_c.global-to-local, align 1
  %v7_e950 = icmp eq i32 %v1_e81c, 148
  store i1 %v7_e950, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e950, label %bb1398, label %dec_label_pc_e960

bb1398:                                           ; preds = %dec_label_pc_e944
  store i1 %v2_e944, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_e944, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e944, label %dec_label_pc_e818, label %dec_label_pc_e960

dec_label_pc_e960:                                ; preds = %dec_label_pc_e944, %bb1398
  %v7_e960 = icmp eq i32 %v1_e81c, 150
  %.1982 = zext i1 %v7_e960 to i32
  store i32 %.1982, i32* %r4.global-to-local, align 4
  %v2_e96c = icmp ugt i32 %v1_e830, 124
  store i1 %v2_e96c, i1* %cpsr_c.global-to-local, align 1
  %v7_e96c = icmp eq i32 %v1_e830, 125
  store i1 %v7_e96c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e96c, label %bb1401, label %dec_label_pc_e978

bb1401:                                           ; preds = %dec_label_pc_e960
  %v2_e960 = icmp ugt i32 %v1_e81c, 149
  store i1 %v2_e960, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_e960, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e960, label %dec_label_pc_e818, label %dec_label_pc_e978

dec_label_pc_e978:                                ; preds = %dec_label_pc_e960, %bb1401
  %v2_e978 = icmp ugt i32 %v1_e830, 132
  store i1 %v2_e978, i1* %cpsr_c.global-to-local, align 1
  %v7_e978 = icmp eq i32 %v1_e830, 133
  store i1 %v7_e978, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e978, label %.thread31, label %.thread32

.thread32:                                        ; preds = %dec_label_pc_e978
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_e98c

.thread31:                                        ; preds = %dec_label_pc_e978
  store i32 %.1982, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e984 = icmp eq i1 %v7_e960, false
  store i1 %v2_e984, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e984, label %dec_label_pc_e98c, label %dec_label_pc_e818

dec_label_pc_e98c:                                ; preds = %.thread32, %.thread31
  %v2_e98c = icmp ugt i32 %v1_e830, 143
  store i1 %v2_e98c, i1* %cpsr_c.global-to-local, align 1
  %v7_e98c = icmp eq i32 %v1_e830, 144
  store i1 %v7_e98c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e98c, label %.thread35, label %.thread36

.thread36:                                        ; preds = %dec_label_pc_e98c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_e9a0

.thread35:                                        ; preds = %dec_label_pc_e98c
  store i32 %.1982, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e998 = icmp eq i1 %v7_e960, false
  store i1 %v2_e998, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e998, label %dec_label_pc_e9a0, label %dec_label_pc_e818

dec_label_pc_e9a0:                                ; preds = %.thread36, %.thread35
  %v2_e9a0 = icmp ugt i32 %v1_e830, 148
  store i1 %v2_e9a0, i1* %cpsr_c.global-to-local, align 1
  %v7_e9a0 = icmp eq i32 %v1_e830, 149
  %.1983 = zext i1 %v7_e9a0 to i32
  %v2_e9ac = and i32 %.1983, %.1982
  %v4_e9ac = icmp eq i32 %v2_e9ac, 0
  store i1 %v4_e9ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_e9ac, label %dec_label_pc_e9b4, label %dec_label_pc_e818

dec_label_pc_e9b4:                                ; preds = %dec_label_pc_e9a0
  %v2_e9b4 = icmp ugt i32 %v1_e830, 156
  store i1 %v2_e9b4, i1* %cpsr_c.global-to-local, align 1
  %v7_e9b4 = icmp eq i32 %v1_e830, 157
  store i1 %v7_e9b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e9b4, label %.thread40, label %.thread41

.thread41:                                        ; preds = %dec_label_pc_e9b4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_e9c8

.thread40:                                        ; preds = %dec_label_pc_e9b4
  store i32 %.1982, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e9c0 = icmp eq i1 %v7_e960, false
  store i1 %v2_e9c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e9c0, label %dec_label_pc_e9c8, label %dec_label_pc_e818

dec_label_pc_e9c8:                                ; preds = %.thread41, %.thread40
  %v2_e9c8 = icmp ugt i32 %v1_e830, 183
  store i1 %v2_e9c8, i1* %cpsr_c.global-to-local, align 1
  %v7_e9c8 = icmp eq i32 %v1_e830, 184
  store i1 %v7_e9c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e9c8, label %.thread44, label %.thread45

.thread45:                                        ; preds = %dec_label_pc_e9c8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_e9dc

.thread44:                                        ; preds = %dec_label_pc_e9c8
  store i32 %.1982, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e9d4 = icmp eq i1 %v7_e960, false
  store i1 %v2_e9d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e9d4, label %dec_label_pc_e9dc, label %dec_label_pc_e818

dec_label_pc_e9dc:                                ; preds = %.thread45, %.thread44
  %v2_e9dc = icmp ugt i32 %v1_e830, 189
  store i1 %v2_e9dc, i1* %cpsr_c.global-to-local, align 1
  %v7_e9dc = icmp eq i32 %v1_e830, 190
  store i1 %v7_e9dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e9dc, label %.thread48, label %.thread49

.thread49:                                        ; preds = %dec_label_pc_e9dc
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_e9f0

.thread48:                                        ; preds = %dec_label_pc_e9dc
  store i32 %.1982, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e9e8 = icmp eq i1 %v7_e960, false
  store i1 %v2_e9e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e9e8, label %dec_label_pc_e9f0, label %dec_label_pc_e818

dec_label_pc_e9f0:                                ; preds = %.thread49, %.thread48
  %v2_e9f0 = icmp ugt i32 %v1_e830, 195
  store i1 %v2_e9f0, i1* %cpsr_c.global-to-local, align 1
  %v7_e9f0 = icmp eq i32 %v1_e830, 196
  %.1984 = zext i1 %v7_e9f0 to i32
  store i32 %.1984, i32* %r3.global-to-local, align 4
  %v2_e9fc = and i32 %.1984, %.1982
  %v4_e9fc = icmp eq i32 %v2_e9fc, 0
  store i1 %v4_e9fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_e9fc, label %dec_label_pc_ea08, label %dec_label_pc_e818

dec_label_pc_ea08:                                ; preds = %dec_label_pc_e9f0
  %v7_ea08 = icmp eq i32 %v1_e81c, 152
  %.1985 = zext i1 %v7_ea08 to i32
  %v2_ea14 = icmp ugt i32 %v1_e830, 81
  store i1 %v2_ea14, i1* %cpsr_c.global-to-local, align 1
  %v7_ea14 = icmp eq i32 %v1_e830, 82
  store i1 %v7_ea14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ea14, label %bb1408, label %dec_label_pc_ea24

bb1408:                                           ; preds = %dec_label_pc_ea08
  %v2_ea08 = icmp ugt i32 %v1_e81c, 151
  store i1 %v2_ea08, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ea08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ea08, label %dec_label_pc_e818, label %dec_label_pc_ea24

dec_label_pc_ea24:                                ; preds = %dec_label_pc_ea08, %bb1408
  %v2_ea24 = icmp ugt i32 %v1_e830, 228
  store i1 %v2_ea24, i1* %cpsr_c.global-to-local, align 1
  %v7_ea24 = icmp eq i32 %v1_e830, 229
  %.1986 = zext i1 %v7_ea24 to i32
  store i32 %.1986, i32* %r3.global-to-local, align 4
  %v2_ea30 = and i32 %.1986, %.1985
  %v4_ea30 = icmp eq i32 %v2_ea30, 0
  store i1 %v4_ea30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_ea30, label %dec_label_pc_ea3c, label %dec_label_pc_e818

dec_label_pc_ea3c:                                ; preds = %dec_label_pc_ea24
  %v7_ea3c = icmp eq i32 %v1_e81c, 157
  %.1987 = zext i1 %v7_ea3c to i32
  %v2_ea48 = icmp ugt i32 %v1_e830, 201
  store i1 %v2_ea48, i1* %cpsr_c.global-to-local, align 1
  %v7_ea48 = icmp eq i32 %v1_e830, 202
  %storemerge1217 = zext i1 %v7_ea48 to i32
  store i32 %storemerge1217, i32* %r3.global-to-local, align 4
  %v2_ea54 = and i32 %storemerge1217, %.1987
  %v4_ea54 = icmp eq i32 %v2_ea54, 0
  store i1 %v4_ea54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_ea54, label %dec_label_pc_ea64, label %dec_label_pc_e818

dec_label_pc_ea64:                                ; preds = %dec_label_pc_ea3c
  store i32 %.1987, i32* %r3.global-to-local, align 4
  %v2_ea68 = icmp ugt i32 %v1_e830, 216
  store i1 %v2_ea68, i1* %cpsr_c.global-to-local, align 1
  %v7_ea68 = icmp eq i32 %v1_e830, 217
  store i1 %v7_ea68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ea68, label %.thread60, label %.thread61

.thread61:                                        ; preds = %dec_label_pc_ea64
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ea7c

.thread60:                                        ; preds = %dec_label_pc_ea64
  store i32 %.1987, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ea74 = icmp eq i1 %v7_ea3c, false
  store i1 %v2_ea74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ea74, label %dec_label_pc_ea7c, label %dec_label_pc_e818

dec_label_pc_ea7c:                                ; preds = %.thread61, %.thread60
  %v2_ea7c = icmp ugt i32 %v1_e81c, 160
  store i1 %v2_ea7c, i1* %cpsr_c.global-to-local, align 1
  %v7_ea7c = icmp eq i32 %v1_e81c, 161
  store i1 %v7_ea7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ea7c, label %bb1415, label %dec_label_pc_ea88

bb1415:                                           ; preds = %dec_label_pc_ea7c
  %v3_ea80 = icmp ugt i32 %v1_e830, 123
  store i1 %v3_ea80, i1* %cpsr_c.global-to-local, align 1
  %v8_ea80 = icmp eq i32 %v1_e830, 124
  store i1 %v8_ea80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_ea80, label %dec_label_pc_e818, label %dec_label_pc_ea88

dec_label_pc_ea88:                                ; preds = %dec_label_pc_ea7c, %bb1415
  %v7_ea88 = icmp eq i32 %v1_e81c, 162
  %.1988 = zext i1 %v7_ea88 to i32
  %v2_ea94 = icmp ugt i32 %v1_e830, 31
  store i1 %v2_ea94, i1* %cpsr_c.global-to-local, align 1
  %v7_ea94 = icmp eq i32 %v1_e830, 32
  %storemerge1219 = zext i1 %v7_ea94 to i32
  store i32 %storemerge1219, i32* %r3.global-to-local, align 4
  %v2_eaa0 = and i32 %storemerge1219, %.1988
  %v4_eaa0 = icmp eq i32 %v2_eaa0, 0
  store i1 %v4_eaa0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_eaa0, label %dec_label_pc_eab0, label %dec_label_pc_e818

dec_label_pc_eab0:                                ; preds = %dec_label_pc_ea88
  %v7_eab0 = icmp eq i32 %v1_e81c, 155
  %.1989 = zext i1 %v7_eab0 to i32
  %v2_eabc = icmp ugt i32 %v1_e830, 95
  store i1 %v2_eabc, i1* %cpsr_c.global-to-local, align 1
  %v7_eabc = icmp eq i32 %v1_e830, 96
  store i1 %v7_eabc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eabc, label %bb1422, label %dec_label_pc_eacc

bb1422:                                           ; preds = %dec_label_pc_eab0
  %v2_eab0 = icmp ugt i32 %v1_e81c, 154
  store i1 %v2_eab0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_eab0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eab0, label %dec_label_pc_e818, label %dec_label_pc_eacc

dec_label_pc_eacc:                                ; preds = %dec_label_pc_eab0, %bb1422
  %v2_eacc = and i32 %.1983, %.1989
  %v4_eacc = icmp eq i32 %v2_eacc, 0
  store i1 %v4_eacc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_eacc, label %dec_label_pc_ead4, label %dec_label_pc_e818

dec_label_pc_ead4:                                ; preds = %dec_label_pc_eacc
  store i32 %.1989, i32* %r3.global-to-local, align 4
  %v2_ead8 = icmp ugt i32 %v1_e830, 154
  store i1 %v2_ead8, i1* %cpsr_c.global-to-local, align 1
  %v7_ead8 = icmp eq i32 %v1_e830, 155
  store i1 %v7_ead8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ead8, label %.thread71, label %.thread72

.thread72:                                        ; preds = %dec_label_pc_ead4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_eaec

.thread71:                                        ; preds = %dec_label_pc_ead4
  store i32 %.1989, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_eae4 = icmp eq i1 %v7_eab0, false
  store i1 %v2_eae4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_eae4, label %dec_label_pc_eaec, label %dec_label_pc_e818

dec_label_pc_eaec:                                ; preds = %.thread72, %.thread71
  store i32 %.1989, i32* %r3.global-to-local, align 4
  %v2_eaf0 = icmp ugt i32 %v1_e830, 177
  store i1 %v2_eaf0, i1* %cpsr_c.global-to-local, align 1
  %v7_eaf0 = icmp eq i32 %v1_e830, 178
  store i1 %v7_eaf0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eaf0, label %.thread75, label %.thread76

.thread76:                                        ; preds = %dec_label_pc_eaec
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_eb04

.thread75:                                        ; preds = %dec_label_pc_eaec
  store i32 %.1989, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_eafc = icmp eq i1 %v7_eab0, false
  store i1 %v2_eafc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_eafc, label %dec_label_pc_eb04, label %dec_label_pc_e818

dec_label_pc_eb04:                                ; preds = %.thread76, %.thread75
  %v7_eb04 = icmp eq i32 %v1_e81c, 164
  %.1990 = zext i1 %v7_eb04 to i32
  %v2_eb10 = icmp ugt i32 %v1_e830, 157
  store i1 %v2_eb10, i1* %cpsr_c.global-to-local, align 1
  %v7_eb10 = icmp eq i32 %v1_e830, 158
  store i1 %v7_eb10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eb10, label %bb1425, label %dec_label_pc_eb20

bb1425:                                           ; preds = %dec_label_pc_eb04
  %v2_eb04 = icmp ugt i32 %v1_e81c, 163
  store i1 %v2_eb04, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_eb04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eb04, label %dec_label_pc_e818, label %dec_label_pc_eb20

dec_label_pc_eb20:                                ; preds = %dec_label_pc_eb04, %bb1425
  %v2_eb20 = icmp ugt i32 %v1_e81c, 155
  store i1 %v2_eb20, i1* %cpsr_c.global-to-local, align 1
  %v7_eb20 = icmp eq i32 %v1_e81c, 156
  store i1 %v7_eb20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eb20, label %bb1426, label %dec_label_pc_eb2c

bb1426:                                           ; preds = %dec_label_pc_eb20
  %v3_eb24 = icmp ugt i32 %v1_e830, 8
  store i1 %v3_eb24, i1* %cpsr_c.global-to-local, align 1
  %v8_eb24 = icmp eq i32 %v1_e830, 9
  store i1 %v8_eb24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_eb24, label %dec_label_pc_e818, label %dec_label_pc_eb2c

dec_label_pc_eb2c:                                ; preds = %dec_label_pc_eb20, %bb1426
  %v7_eb2c = icmp eq i32 %v1_e81c, 167
  %.1991 = zext i1 %v7_eb2c to i32
  store i32 %.1991, i32* %r3.global-to-local, align 4
  %v2_eb38 = icmp ugt i32 %v1_e830, 43
  store i1 %v2_eb38, i1* %cpsr_c.global-to-local, align 1
  %v7_eb38 = icmp eq i32 %v1_e830, 44
  store i1 %v7_eb38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eb38, label %bb1429, label %dec_label_pc_eb48

bb1429:                                           ; preds = %dec_label_pc_eb2c
  %v2_eb2c = icmp ugt i32 %v1_e81c, 166
  store i1 %v2_eb2c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_eb2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eb2c, label %dec_label_pc_e818, label %dec_label_pc_eb48

dec_label_pc_eb48:                                ; preds = %dec_label_pc_eb2c, %bb1429
  %v2_eb48 = icmp ugt i32 %v1_e830, 67
  %v7_eb48 = icmp eq i32 %v1_e830, 68
  %.1992 = zext i1 %v7_eb48 to i32
  %v2_eb54 = icmp ugt i32 %v1_e81c, 167
  store i1 %v2_eb54, i1* %cpsr_c.global-to-local, align 1
  %v7_eb54 = icmp eq i32 %v1_e81c, 168
  %storemerge1224 = zext i1 %v7_eb54 to i32
  store i32 %storemerge1224, i32* %r3.global-to-local, align 4
  %v2_eb60 = and i32 %.1992, %storemerge1224
  %v4_eb60 = icmp eq i32 %v2_eb60, 0
  store i1 %v4_eb60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_eb60, label %dec_label_pc_eb6c, label %dec_label_pc_e818

dec_label_pc_eb6c:                                ; preds = %dec_label_pc_eb48
  %v2_eb6c = icmp ugt i32 %v1_e830, 84
  store i1 %v2_eb6c, i1* %cpsr_c.global-to-local, align 1
  %v7_eb6c = icmp eq i32 %v1_e830, 85
  %.1993 = zext i1 %v7_eb6c to i32
  %v2_eb78 = and i32 %.1993, %storemerge1224
  %v4_eb78 = icmp eq i32 %v2_eb78, 0
  store i1 %v4_eb78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_eb78, label %dec_label_pc_eb84, label %dec_label_pc_e818

dec_label_pc_eb84:                                ; preds = %dec_label_pc_eb6c
  %v2_eb84 = icmp ugt i32 %v1_e830, 101
  store i1 %v2_eb84, i1* %cpsr_c.global-to-local, align 1
  %v7_eb84 = icmp eq i32 %v1_e830, 102
  store i1 %v7_eb84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eb84, label %.thread91, label %.thread92

.thread92:                                        ; preds = %dec_label_pc_eb84
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_eb98

.thread91:                                        ; preds = %dec_label_pc_eb84
  store i32 %storemerge1224, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_eb90 = icmp eq i1 %v7_eb54, false
  store i1 %v2_eb90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_eb90, label %dec_label_pc_eb98, label %dec_label_pc_e818

dec_label_pc_eb98:                                ; preds = %.thread92, %.thread91
  %v2_eb98 = icmp ugt i32 %v1_e830, 58
  %v7_eb98 = icmp eq i32 %v1_e830, 59
  %.1994 = zext i1 %v7_eb98 to i32
  store i32 %.1994, i32* %r3.global-to-local, align 4
  %v2_eba4 = icmp ugt i32 %v1_e81c, 202
  store i1 %v2_eba4, i1* %cpsr_c.global-to-local, align 1
  %v7_eba4 = icmp eq i32 %v1_e81c, 203
  store i1 %v7_eba4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eba4, label %bb1438, label %dec_label_pc_ebb4

bb1438:                                           ; preds = %dec_label_pc_eb98
  store i1 %v2_eb98, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_eb98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eb98, label %dec_label_pc_e818, label %dec_label_pc_ebb4

dec_label_pc_ebb4:                                ; preds = %dec_label_pc_eb98, %bb1438
  %v2_ebb4 = icmp ugt i32 %v1_e830, 33
  %v7_ebb4 = icmp eq i32 %v1_e830, 34
  %.1995 = zext i1 %v7_ebb4 to i32
  %v2_ebc0 = icmp ugt i32 %v1_e81c, 203
  store i1 %v2_ebc0, i1* %cpsr_c.global-to-local, align 1
  %v7_ebc0 = icmp eq i32 %v1_e81c, 204
  store i1 %v7_ebc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ebc0, label %bb1441, label %dec_label_pc_ebd0

bb1441:                                           ; preds = %dec_label_pc_ebb4
  store i1 %v2_ebb4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ebb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ebb4, label %dec_label_pc_e818, label %dec_label_pc_ebd0

dec_label_pc_ebd0:                                ; preds = %dec_label_pc_ebb4, %bb1441
  %v7_ebd0 = icmp eq i32 %v1_e81c, 207
  %.1996 = zext i1 %v7_ebd0 to i32
  %v2_ebdc = icmp ugt i32 %v1_e830, 29
  store i1 %v2_ebdc, i1* %cpsr_c.global-to-local, align 1
  %v7_ebdc = icmp eq i32 %v1_e830, 30
  store i1 %v7_ebdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ebdc, label %bb1444, label %dec_label_pc_ebec

bb1444:                                           ; preds = %dec_label_pc_ebd0
  %v2_ebd0 = icmp ugt i32 %v1_e81c, 206
  store i1 %v2_ebd0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ebd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ebd0, label %dec_label_pc_e818, label %dec_label_pc_ebec

dec_label_pc_ebec:                                ; preds = %dec_label_pc_ebd0, %bb1444
  %v7_ebec = icmp eq i32 %v1_e830, 55
  %.1997 = zext i1 %v7_ebec to i32
  %v2_ebf8 = icmp ugt i32 %v1_e81c, 116
  store i1 %v2_ebf8, i1* %cpsr_c.global-to-local, align 1
  %v7_ebf8 = icmp eq i32 %v1_e81c, 117
  %storemerge1230 = zext i1 %v7_ebf8 to i32
  store i32 %storemerge1230, i32* %r3.global-to-local, align 4
  %v2_ec04 = and i32 %.1997, %storemerge1230
  %v4_ec04 = icmp eq i32 %v2_ec04, 0
  store i1 %v4_ec04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_ec04, label %dec_label_pc_ec10, label %dec_label_pc_e818

dec_label_pc_ec10:                                ; preds = %dec_label_pc_ebec
  %v2_ec10 = icmp ugt i32 %v1_e830, 55
  store i1 %v2_ec10, i1* %cpsr_c.global-to-local, align 1
  %v7_ec10 = icmp eq i32 %v1_e830, 56
  %.1998 = zext i1 %v7_ec10 to i32
  %v2_ec1c = and i32 %.1998, %storemerge1230
  %v4_ec1c = icmp eq i32 %v2_ec1c, 0
  store i1 %v4_ec1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_ec1c, label %dec_label_pc_ec28, label %dec_label_pc_e818

dec_label_pc_ec28:                                ; preds = %dec_label_pc_ec10
  %v7_ec28 = icmp eq i32 %v1_e81c, 80
  %.1999 = zext i1 %v7_ec28 to i32
  store i32 %.1999, i32* %r3.global-to-local, align 4
  %v2_ec34 = icmp ugt i32 %v1_e830, 234
  store i1 %v2_ec34, i1* %cpsr_c.global-to-local, align 1
  %v7_ec34 = icmp eq i32 %v1_e830, 235
  store i1 %v7_ec34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ec34, label %bb1453, label %dec_label_pc_ec44

bb1453:                                           ; preds = %dec_label_pc_ec28
  %v2_ec28 = icmp ugt i32 %v1_e81c, 79
  store i1 %v2_ec28, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ec28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ec28, label %dec_label_pc_e818, label %dec_label_pc_ec44

dec_label_pc_ec44:                                ; preds = %dec_label_pc_ec28, %bb1453
  store i32 %.1996, i32* %r3.global-to-local, align 4
  %v2_ec48 = icmp ugt i32 %v1_e830, 119
  store i1 %v2_ec48, i1* %cpsr_c.global-to-local, align 1
  %v7_ec48 = icmp eq i32 %v1_e830, 120
  store i1 %v7_ec48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ec48, label %.thread114, label %.thread115

.thread115:                                       ; preds = %dec_label_pc_ec44
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ec5c

.thread114:                                       ; preds = %dec_label_pc_ec44
  store i32 %.1996, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ec54 = icmp eq i1 %v7_ebd0, false
  store i1 %v2_ec54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ec54, label %dec_label_pc_ec5c, label %dec_label_pc_e818

dec_label_pc_ec5c:                                ; preds = %.thread115, %.thread114
  %v7_ec5c = icmp eq i32 %v1_e81c, 209
  %.2000 = zext i1 %v7_ec5c to i32
  %v2_ec68 = icmp ugt i32 %v1_e830, 34
  store i1 %v2_ec68, i1* %cpsr_c.global-to-local, align 1
  %v7_ec68 = icmp eq i32 %v1_e830, 35
  store i1 %v7_ec68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ec68, label %bb1456, label %dec_label_pc_ec78

bb1456:                                           ; preds = %dec_label_pc_ec5c
  %v2_ec5c = icmp ugt i32 %v1_e81c, 208
  store i1 %v2_ec5c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ec5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ec5c, label %dec_label_pc_e818, label %dec_label_pc_ec78

dec_label_pc_ec78:                                ; preds = %dec_label_pc_ec5c, %bb1456
  %v7_ec78 = icmp eq i32 %v1_e81c, 64
  %.2001 = zext i1 %v7_ec78 to i32
  %v2_ec84 = icmp ugt i32 %v1_e830, 69
  store i1 %v2_ec84, i1* %cpsr_c.global-to-local, align 1
  %v7_ec84 = icmp eq i32 %v1_e830, 70
  store i1 %v7_ec84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ec84, label %bb1459, label %dec_label_pc_ec94

bb1459:                                           ; preds = %dec_label_pc_ec78
  %v2_ec78 = icmp ugt i32 %v1_e81c, 63
  store i1 %v2_ec78, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ec78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ec78, label %dec_label_pc_e818, label %dec_label_pc_ec94

dec_label_pc_ec94:                                ; preds = %dec_label_pc_ec78, %bb1459
  %v7_ec94 = icmp eq i32 %v1_e81c, 172
  %.2002 = zext i1 %v7_ec94 to i32
  store i32 %.2002, i32* %r3.global-to-local, align 4
  %v2_eca0 = icmp ugt i32 %v1_e830, 14
  store i1 %v2_eca0, i1* %cpsr_c.global-to-local, align 1
  %v7_eca0 = icmp eq i32 %v1_e830, 15
  store i1 %v7_eca0, i1* %cpsr_z.global-to-local, align 1
  %v2_eca4 = xor i1 %v2_eca0, true
  %v3_eca4 = or i1 %v7_eca0, %v2_eca4
  br i1 %v3_eca4, label %bb1462, label %bb1463

bb1462:                                           ; preds = %dec_label_pc_ec94
  br label %bb1463

bb1463:                                           ; preds = %dec_label_pc_ec94, %bb1462
  %v1_ecac825 = phi i32 [ %.2000, %dec_label_pc_ec94 ], [ 0, %bb1462 ]
  %v2_eca8 = xor i1 %v7_eca0, true
  %v3_eca8 = and i1 %v2_eca0, %v2_eca8
  br i1 %v3_eca8, label %bb1464, label %bb1465

bb1464:                                           ; preds = %bb1463
  br label %bb1465

bb1465:                                           ; preds = %bb1463, %bb1464
  %v0_f280 = phi i32 [ %v1_ecac825, %bb1463 ], [ 1, %bb1464 ]
  %v2_ecac = and i32 %v0_f280, %.2002
  %v4_ecac = icmp eq i32 %v2_ecac, 0
  store i1 %v4_ecac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_ecac, label %dec_label_pc_ecc4, label %dec_label_pc_ecbc

dec_label_pc_ecbc:                                ; preds = %bb1465
  %v2_ecbc = icmp ugt i32 %v1_e830, 30
  store i1 %v2_ecbc, i1* %cpsr_c.global-to-local, align 1
  %v7_ecbc = icmp eq i32 %v1_e830, 31
  store i1 %v7_ecbc, i1* %cpsr_z.global-to-local, align 1
  %v2_ecc0 = xor i1 %v2_ecbc, true
  %v3_ecc0 = or i1 %v7_ecbc, %v2_ecc0
  br i1 %v3_ecc0, label %dec_label_pc_e818, label %dec_label_pc_ecc4

dec_label_pc_ecc4:                                ; preds = %dec_label_pc_ecbc, %bb1465
  %v2_ecc4 = icmp ugt i32 %v1_e830, 62
  store i1 %v2_ecc4, i1* %cpsr_c.global-to-local, align 1
  %v7_ecc4 = icmp eq i32 %v1_e830, 63
  store i1 %v7_ecc4, i1* %cpsr_z.global-to-local, align 1
  %v2_ecc8 = xor i1 %v2_ecc4, true
  %v3_ecc8 = or i1 %v7_ecc4, %v2_ecc8
  br i1 %v3_ecc8, label %bb1466, label %bb1467

bb1466:                                           ; preds = %dec_label_pc_ecc4
  br label %bb1467

bb1467:                                           ; preds = %dec_label_pc_ecc4, %bb1466
  %v0_ecd0827 = phi i32 [ %.2001, %dec_label_pc_ecc4 ], [ 0, %bb1466 ]
  %v2_eccc = xor i1 %v7_ecc4, true
  %v3_eccc = and i1 %v2_ecc4, %v2_eccc
  br i1 %v3_eccc, label %bb1468, label %bb1469

bb1468:                                           ; preds = %bb1467
  br label %bb1469

bb1469:                                           ; preds = %bb1467, %bb1468
  %v0_fecc = phi i32 [ %v0_ecd0827, %bb1467 ], [ 1, %bb1468 ]
  store i32 %v0_fecc, i32* %r3.global-to-local, align 4
  %v2_ecd4 = icmp ugt i32 %v1_e81c, 99
  store i1 %v2_ecd4, i1* %cpsr_c.global-to-local, align 1
  %v7_ecd4 = icmp eq i32 %v1_e81c, 100
  store i1 %v7_ecd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ecd4, label %bb1470, label %.thread1149

.thread1149:                                      ; preds = %bb1469
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ecf4

bb1470:                                           ; preds = %bb1469
  %v2_ecdc = urem i32 %v0_fecc, 2
  store i32 %v2_ecdc, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ece0 = icmp eq i32 %v2_ecdc, 0
  store i1 %v2_ece0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ece0, label %dec_label_pc_ecf4, label %dec_label_pc_ecec

dec_label_pc_ecec:                                ; preds = %bb1470
  %v2_ecec = icmp ugt i32 %v1_e830, 125
  store i1 %v2_ecec, i1* %cpsr_c.global-to-local, align 1
  %v7_ecec = icmp eq i32 %v1_e830, 126
  store i1 %v7_ecec, i1* %cpsr_z.global-to-local, align 1
  %v2_ecf0 = xor i1 %v2_ecec, true
  %v3_ecf0 = or i1 %v7_ecec, %v2_ecf0
  br i1 %v3_ecf0, label %dec_label_pc_e818, label %dec_label_pc_ecf4

dec_label_pc_ecf4:                                ; preds = %.thread1149, %dec_label_pc_ecec, %bb1470
  %v7_ecf4 = icmp eq i32 %v1_e81c, 169
  %.2003 = zext i1 %v7_ecf4 to i32
  store i32 %.2003, i32* %r3.global-to-local, align 4
  %v2_ed00 = icmp ugt i32 %v1_e830, 253
  store i1 %v2_ed00, i1* %cpsr_c.global-to-local, align 1
  %v7_ed00 = icmp eq i32 %v1_e830, 254
  %storemerge1237 = zext i1 %v7_ed00 to i32
  %v2_ed0c = and i32 %storemerge1237, %.2003
  %v4_ed0c = icmp eq i32 %v2_ed0c, 0
  store i1 %v4_ed0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_ed0c, label %dec_label_pc_ed1c, label %dec_label_pc_e818

dec_label_pc_ed1c:                                ; preds = %dec_label_pc_ecf4
  %v7_ed1c = icmp eq i32 %v1_e81c, 198
  %.2004 = zext i1 %v7_ed1c to i32
  store i32 %.2004, i32* %r3.global-to-local, align 4
  store i1 %v2_e8e4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_e8e4, i1* %cpsr_z.global-to-local, align 1
  %v2_ed30 = xor i1 %v2_e8e4, true
  %v3_ed30 = or i1 %v7_e8e4, %v2_ed30
  br i1 %v3_ed30, label %bb1477, label %bb1478

bb1477:                                           ; preds = %dec_label_pc_ed1c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1478

bb1478:                                           ; preds = %dec_label_pc_ed1c, %bb1477
  %v4_ed34 = phi i32 [ %.2004, %dec_label_pc_ed1c ], [ 0, %bb1477 ]
  %v2_ed34 = xor i1 %v7_e8e4, true
  %v3_ed34 = and i1 %v2_e8e4, %v2_ed34
  br i1 %v3_ed34, label %bb1479, label %thread-pre-split131

bb1479:                                           ; preds = %bb1478
  store i32 %v4_ed34, i32* %r3.global-to-local, align 4
  br label %thread-pre-split131

thread-pre-split131:                              ; preds = %bb1478, %bb1479
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ed38 = icmp eq i32 %v4_ed34, 0
  store i1 %v2_ed38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ed38, label %dec_label_pc_ed4c, label %dec_label_pc_ed44

dec_label_pc_ed44:                                ; preds = %thread-pre-split131
  %v2_ed44 = icmp ugt i32 %v1_e830, 18
  store i1 %v2_ed44, i1* %cpsr_c.global-to-local, align 1
  %v7_ed44 = icmp eq i32 %v1_e830, 19
  store i1 %v7_ed44, i1* %cpsr_z.global-to-local, align 1
  %v2_ed48 = xor i1 %v2_ed44, true
  %v3_ed48 = or i1 %v7_ed44, %v2_ed48
  br i1 %v3_ed48, label %dec_label_pc_e818, label %dec_label_pc_ed4c

dec_label_pc_ed4c:                                ; preds = %dec_label_pc_ed44, %thread-pre-split131
  store i32 %.2001, i32* %r3.global-to-local, align 4
  store i1 %v2_eb48, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_eb48, i1* %cpsr_z.global-to-local, align 1
  %v2_ed54 = xor i1 %v2_eb48, true
  %v3_ed54 = or i1 %v7_eb48, %v2_ed54
  br i1 %v3_ed54, label %bb1480, label %bb1481

bb1480:                                           ; preds = %dec_label_pc_ed4c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1481

bb1481:                                           ; preds = %dec_label_pc_ed4c, %bb1480
  %v4_ed58 = phi i32 [ %.2001, %dec_label_pc_ed4c ], [ 0, %bb1480 ]
  %v2_ed58 = xor i1 %v7_eb48, true
  %v3_ed58 = and i1 %v2_eb48, %v2_ed58
  br i1 %v3_ed58, label %bb1482, label %thread-pre-split132

bb1482:                                           ; preds = %bb1481
  store i32 %v4_ed58, i32* %r3.global-to-local, align 4
  br label %thread-pre-split132

thread-pre-split132:                              ; preds = %bb1481, %bb1482
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ed5c = icmp eq i32 %v4_ed58, 0
  store i1 %v2_ed5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ed5c, label %dec_label_pc_ed6c, label %dec_label_pc_ed64

dec_label_pc_ed64:                                ; preds = %thread-pre-split132
  %v2_ed64 = icmp ugt i32 %v1_e830, 225
  store i1 %v2_ed64, i1* %cpsr_c.global-to-local, align 1
  %v7_ed64 = icmp eq i32 %v1_e830, 226
  store i1 %v7_ed64, i1* %cpsr_z.global-to-local, align 1
  %v2_ed68 = xor i1 %v2_ed64, true
  %v3_ed68 = or i1 %v7_ed64, %v2_ed68
  br i1 %v3_ed68, label %dec_label_pc_e818, label %dec_label_pc_ed6c

dec_label_pc_ed6c:                                ; preds = %dec_label_pc_ed64, %thread-pre-split132
  store i1 %v2_ebb4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ebb4, i1* %cpsr_z.global-to-local, align 1
  %v2_ed70 = xor i1 %v2_ebb4, true
  %v3_ed70 = or i1 %v7_ebb4, %v2_ed70
  br i1 %v3_ed70, label %bb1483, label %bb1484

bb1483:                                           ; preds = %dec_label_pc_ed6c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1484

bb1484:                                           ; preds = %dec_label_pc_ed6c, %bb1483
  %v0_ed78835 = phi i32 [ %v4_ed58, %dec_label_pc_ed6c ], [ 0, %bb1483 ]
  %v2_ed74 = xor i1 %v7_ebb4, true
  %v3_ed74 = and i1 %v2_ebb4, %v2_ed74
  br i1 %v3_ed74, label %bb1485, label %bb1486

bb1485:                                           ; preds = %bb1484
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1486

bb1486:                                           ; preds = %bb1484, %bb1485
  %v0_ed78 = phi i32 [ %v0_ed78835, %bb1484 ], [ 1, %bb1485 ]
  %v2_ed7c = icmp ugt i32 %v1_e81c, 127
  store i1 %v2_ed7c, i1* %cpsr_c.global-to-local, align 1
  %v7_ed7c = icmp eq i32 %v1_e81c, 128
  store i1 %v7_ed7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ed7c, label %.thread133, label %.thread134

.thread134:                                       ; preds = %bb1486
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ed98

.thread133:                                       ; preds = %bb1486
  %v2_ed84 = urem i32 %v0_ed78, 2
  store i32 %v2_ed84, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ed88 = icmp eq i32 %v2_ed84, 0
  store i1 %v2_ed88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ed88, label %dec_label_pc_ed98, label %dec_label_pc_ed90

dec_label_pc_ed90:                                ; preds = %.thread133
  %v2_ed90 = icmp ugt i32 %v1_e830, 235
  store i1 %v2_ed90, i1* %cpsr_c.global-to-local, align 1
  %v7_ed90 = icmp eq i32 %v1_e830, 236
  store i1 %v7_ed90, i1* %cpsr_z.global-to-local, align 1
  %v2_ed94 = xor i1 %v2_ed90, true
  %v3_ed94 = or i1 %v7_ed90, %v2_ed94
  br i1 %v3_ed94, label %dec_label_pc_e818, label %dec_label_pc_ed98

dec_label_pc_ed98:                                ; preds = %.thread134, %dec_label_pc_ed90, %.thread133
  %v7_ed98 = icmp eq i32 %v1_e81c, 129
  %.2005 = zext i1 %v7_ed98 to i32
  store i32 %.2005, i32* %r3.global-to-local, align 4
  %v2_eda4 = icmp ugt i32 %v1_e830, 20
  store i1 %v2_eda4, i1* %cpsr_c.global-to-local, align 1
  %v7_eda4 = icmp eq i32 %v1_e830, 21
  store i1 %v7_eda4, i1* %cpsr_z.global-to-local, align 1
  %v2_eda8 = xor i1 %v2_eda4, true
  %v3_eda8 = or i1 %v7_eda4, %v2_eda8
  br i1 %v3_eda8, label %.thread139, label %bb1489

.thread139:                                       ; preds = %dec_label_pc_ed98
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_edbc

bb1489:                                           ; preds = %dec_label_pc_ed98
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_edac = icmp eq i1 %v7_ed98, false
  store i1 %v2_edac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_edac, label %dec_label_pc_edbc, label %dec_label_pc_edb4

dec_label_pc_edb4:                                ; preds = %bb1489
  %v2_edb4 = icmp eq i32 %v1_e830, 255
  store i1 %v2_edb4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_edb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_edb4, label %dec_label_pc_edbc, label %dec_label_pc_e818

dec_label_pc_edbc:                                ; preds = %.thread139, %dec_label_pc_edb4, %bb1489
  %v7_edbc = icmp eq i32 %v1_e81c, 130
  %.2006 = zext i1 %v7_edbc to i32
  store i32 %.2006, i32* %r3.global-to-local, align 4
  %v2_edc8 = icmp ugt i32 %v1_e830, 38
  store i1 %v2_edc8, i1* %cpsr_c.global-to-local, align 1
  %v7_edc8 = icmp eq i32 %v1_e830, 39
  store i1 %v7_edc8, i1* %cpsr_z.global-to-local, align 1
  %v2_edcc = xor i1 %v2_edc8, true
  %v3_edcc = or i1 %v7_edc8, %v2_edcc
  br i1 %v3_edcc, label %.thread144, label %bb1492

.thread144:                                       ; preds = %dec_label_pc_edbc
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ede0

bb1492:                                           ; preds = %dec_label_pc_edbc
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_edd0 = icmp eq i1 %v7_edbc, false
  store i1 %v2_edd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_edd0, label %dec_label_pc_ede0, label %dec_label_pc_edd8

dec_label_pc_edd8:                                ; preds = %bb1492
  %v2_edd8 = icmp ugt i32 %v1_e830, 166
  store i1 %v2_edd8, i1* %cpsr_c.global-to-local, align 1
  %v7_edd8 = icmp eq i32 %v1_e830, 167
  store i1 %v7_edd8, i1* %cpsr_z.global-to-local, align 1
  %v2_eddc = xor i1 %v2_edd8, true
  %v3_eddc = or i1 %v7_edd8, %v2_eddc
  br i1 %v3_eddc, label %dec_label_pc_e818, label %dec_label_pc_ede0

dec_label_pc_ede0:                                ; preds = %.thread144, %dec_label_pc_edd8, %bb1492
  %v2_ede0 = icmp ugt i32 %v1_e830, 1
  store i1 %v2_ede0, i1* %cpsr_c.global-to-local, align 1
  %v7_ede0 = icmp eq i32 %v1_e830, 2
  store i1 %v7_ede0, i1* %cpsr_z.global-to-local, align 1
  %v2_ede4 = xor i1 %v2_ede0, true
  %v3_ede4 = or i1 %v7_ede0, %v2_ede4
  br i1 %v3_ede4, label %bb1493, label %bb1494

bb1493:                                           ; preds = %dec_label_pc_ede0
  br label %bb1494

bb1494:                                           ; preds = %dec_label_pc_ede0, %bb1493
  %v1_edf4840 = phi i32 [ %.2004, %dec_label_pc_ede0 ], [ 0, %bb1493 ]
  %v2_ede8 = xor i1 %v7_ede0, true
  %v3_ede8 = and i1 %v2_ede0, %v2_ede8
  br i1 %v3_ede8, label %bb1495, label %bb1496

bb1495:                                           ; preds = %bb1494
  br label %bb1496

bb1496:                                           ; preds = %bb1494, %bb1495
  %v1_ee10 = phi i32 [ %v1_edf4840, %bb1494 ], [ 1, %bb1495 ]
  %v2_edec = icmp ugt i32 %v1_e81c, 130
  store i1 %v2_edec, i1* %cpsr_c.global-to-local, align 1
  %v7_edec = icmp eq i32 %v1_e81c, 131
  store i1 %v7_edec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_edec, label %.thread147, label %.thread148

.thread148:                                       ; preds = %bb1496
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ee08

.thread147:                                       ; preds = %bb1496
  %v2_edf4 = urem i32 %v1_ee10, 2
  store i32 %v2_edf4, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_edf8 = icmp eq i32 %v2_edf4, 0
  store i1 %v2_edf8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_edf8, label %dec_label_pc_ee08, label %dec_label_pc_ee00

dec_label_pc_ee00:                                ; preds = %.thread147
  %v2_ee00 = icmp ugt i32 %v1_e830, 249
  store i1 %v2_ee00, i1* %cpsr_c.global-to-local, align 1
  %v7_ee00 = icmp eq i32 %v1_e830, 250
  store i1 %v7_ee00, i1* %cpsr_z.global-to-local, align 1
  %v2_ee04 = xor i1 %v2_ee00, true
  %v3_ee04 = or i1 %v7_ee00, %v2_ee04
  br i1 %v3_ee04, label %dec_label_pc_e818, label %dec_label_pc_ee08

dec_label_pc_ee08:                                ; preds = %.thread148, %dec_label_pc_ee00, %.thread147
  %v2_ee08 = icmp ugt i32 %v1_e81c, 131
  store i1 %v2_ee08, i1* %cpsr_c.global-to-local, align 1
  %v7_ee08 = icmp eq i32 %v1_e81c, 132
  store i1 %v7_ee08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ee08, label %.thread151, label %.thread152

.thread152:                                       ; preds = %dec_label_pc_ee08
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ee24

.thread151:                                       ; preds = %dec_label_pc_ee08
  %v2_ee10 = urem i32 %v1_ee10, 2
  store i32 %v2_ee10, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ee14 = icmp eq i32 %v2_ee10, 0
  store i1 %v2_ee14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ee14, label %dec_label_pc_ee24, label %dec_label_pc_ee1c

dec_label_pc_ee1c:                                ; preds = %.thread151
  %v2_ee1c = icmp ugt i32 %v1_e830, 249
  store i1 %v2_ee1c, i1* %cpsr_c.global-to-local, align 1
  %v7_ee1c = icmp eq i32 %v1_e830, 250
  store i1 %v7_ee1c, i1* %cpsr_z.global-to-local, align 1
  %v2_ee20 = xor i1 %v2_ee1c, true
  %v3_ee20 = or i1 %v7_ee1c, %v2_ee20
  br i1 %v3_ee20, label %dec_label_pc_e818, label %dec_label_pc_ee24

dec_label_pc_ee24:                                ; preds = %.thread152, %dec_label_pc_ee1c, %.thread151
  %v2_ee24 = icmp ugt i32 %v1_e830, 3
  store i1 %v2_ee24, i1* %cpsr_c.global-to-local, align 1
  %v7_ee24 = icmp eq i32 %v1_e830, 4
  store i1 %v7_ee24, i1* %cpsr_z.global-to-local, align 1
  %v2_ee28 = xor i1 %v2_ee24, true
  %v3_ee28 = or i1 %v7_ee24, %v2_ee28
  br i1 %v3_ee28, label %bb1497, label %bb1498

bb1497:                                           ; preds = %dec_label_pc_ee24
  br label %bb1498

bb1498:                                           ; preds = %dec_label_pc_ee24, %bb1497
  %v1_ee38842 = phi i32 [ %v1_ee10, %dec_label_pc_ee24 ], [ 0, %bb1497 ]
  %v2_ee2c = xor i1 %v7_ee24, true
  %v3_ee2c = and i1 %v2_ee24, %v2_ee2c
  br i1 %v3_ee2c, label %bb1499, label %bb1500

bb1499:                                           ; preds = %bb1498
  br label %bb1500

bb1500:                                           ; preds = %bb1498, %bb1499
  %v1_f050 = phi i32 [ %v1_ee38842, %bb1498 ], [ 1, %bb1499 ]
  %v2_ee30 = icmp ugt i32 %v1_e81c, 133
  store i1 %v2_ee30, i1* %cpsr_c.global-to-local, align 1
  %v7_ee30 = icmp eq i32 %v1_e81c, 134
  store i1 %v7_ee30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ee30, label %.thread155, label %.thread156

.thread156:                                       ; preds = %bb1500
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ee4c

.thread155:                                       ; preds = %bb1500
  %v2_ee38 = urem i32 %v1_f050, 2
  store i32 %v2_ee38, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ee3c = icmp eq i32 %v2_ee38, 0
  store i1 %v2_ee3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ee3c, label %dec_label_pc_ee4c, label %dec_label_pc_ee44

dec_label_pc_ee44:                                ; preds = %.thread155
  %v2_ee44 = icmp ugt i32 %v1_e830, 233
  store i1 %v2_ee44, i1* %cpsr_c.global-to-local, align 1
  %v7_ee44 = icmp eq i32 %v1_e830, 234
  store i1 %v7_ee44, i1* %cpsr_z.global-to-local, align 1
  %v2_ee48 = xor i1 %v2_ee44, true
  %v3_ee48 = or i1 %v7_ee44, %v2_ee48
  br i1 %v3_ee48, label %dec_label_pc_e818, label %dec_label_pc_ee4c

dec_label_pc_ee4c:                                ; preds = %.thread156, %dec_label_pc_ee44, %.thread155
  %v7_ee4c = icmp eq i32 %v1_e81c, 136
  %.2007 = zext i1 %v7_ee4c to i32
  store i32 %.2007, i32* %r3.global-to-local, align 4
  %v2_ee58 = icmp ugt i32 %v1_e830, 175
  store i1 %v2_ee58, i1* %cpsr_c.global-to-local, align 1
  %v7_ee58 = icmp eq i32 %v1_e830, 176
  store i1 %v7_ee58, i1* %cpsr_z.global-to-local, align 1
  %v2_ee5c = xor i1 %v2_ee58, true
  %v3_ee5c = or i1 %v7_ee58, %v2_ee5c
  br i1 %v3_ee5c, label %.thread161, label %bb1503

.thread161:                                       ; preds = %dec_label_pc_ee4c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ee70

bb1503:                                           ; preds = %dec_label_pc_ee4c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ee60 = icmp eq i1 %v7_ee4c, false
  store i1 %v2_ee60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ee60, label %dec_label_pc_ee70, label %dec_label_pc_ee68

dec_label_pc_ee68:                                ; preds = %bb1503
  %v2_ee68 = icmp ugt i32 %v1_e830, 221
  store i1 %v2_ee68, i1* %cpsr_c.global-to-local, align 1
  %v7_ee68 = icmp eq i32 %v1_e830, 222
  store i1 %v7_ee68, i1* %cpsr_z.global-to-local, align 1
  %v2_ee6c = xor i1 %v2_ee68, true
  %v3_ee6c = or i1 %v7_ee68, %v2_ee6c
  br i1 %v3_ee6c, label %dec_label_pc_e818, label %dec_label_pc_ee70

dec_label_pc_ee70:                                ; preds = %.thread161, %dec_label_pc_ee68, %bb1503
  %v7_ee70 = icmp eq i32 %v1_e81c, 138
  %.2008 = zext i1 %v7_ee70 to i32
  store i32 %.2008, i32* %r3.global-to-local, align 4
  %v2_ee80 = icmp ugt i32 %v1_e830, 11
  store i1 %v2_ee80, i1* %cpsr_c.global-to-local, align 1
  %v7_ee80 = icmp eq i32 %v1_e830, 12
  store i1 %v7_ee80, i1* %cpsr_z.global-to-local, align 1
  %v2_ee84 = xor i1 %v2_ee80, true
  %v3_ee84 = or i1 %v7_ee80, %v2_ee84
  br i1 %v3_ee84, label %bb1506, label %bb1507

bb1506:                                           ; preds = %dec_label_pc_ee70
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1507

bb1507:                                           ; preds = %dec_label_pc_ee70, %bb1506
  %v4_ee88 = phi i32 [ %.2008, %dec_label_pc_ee70 ], [ 0, %bb1506 ]
  %v2_ee88 = xor i1 %v7_ee80, true
  %v3_ee88 = and i1 %v2_ee80, %v2_ee88
  br i1 %v3_ee88, label %bb1508, label %thread-pre-split165

bb1508:                                           ; preds = %bb1507
  store i32 %v4_ee88, i32* %r3.global-to-local, align 4
  br label %thread-pre-split165

thread-pre-split165:                              ; preds = %bb1507, %bb1508
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ee8c = icmp eq i32 %v4_ee88, 0
  store i1 %v2_ee8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ee8c, label %dec_label_pc_eea0, label %dec_label_pc_ee98

dec_label_pc_ee98:                                ; preds = %thread-pre-split165
  %v2_ee98 = icmp ugt i32 %v1_e830, 192
  store i1 %v2_ee98, i1* %cpsr_c.global-to-local, align 1
  %v7_ee98 = icmp eq i32 %v1_e830, 193
  store i1 %v7_ee98, i1* %cpsr_z.global-to-local, align 1
  %v2_ee9c = xor i1 %v2_ee98, true
  %v3_ee9c = or i1 %v7_ee98, %v2_ee9c
  br i1 %v3_ee9c, label %dec_label_pc_e818, label %dec_label_pc_eea0

dec_label_pc_eea0:                                ; preds = %dec_label_pc_ee98, %thread-pre-split165
  %v7_eea0 = icmp eq i32 %v1_e81c, 139
  %.2009 = zext i1 %v7_eea0 to i32
  store i32 %.2009, i32* %r3.global-to-local, align 4
  store i1 %v2_ebdc, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ebdc, i1* %cpsr_z.global-to-local, align 1
  %v2_eeb4 = xor i1 %v2_ebdc, true
  %v3_eeb4 = or i1 %v7_ebdc, %v2_eeb4
  br i1 %v3_eeb4, label %bb1511, label %bb1512

bb1511:                                           ; preds = %dec_label_pc_eea0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1512

bb1512:                                           ; preds = %dec_label_pc_eea0, %bb1511
  %v4_eeb8 = phi i32 [ %.2009, %dec_label_pc_eea0 ], [ 0, %bb1511 ]
  %v2_eeb8 = xor i1 %v7_ebdc, true
  %v3_eeb8 = and i1 %v2_ebdc, %v2_eeb8
  br i1 %v3_eeb8, label %bb1513, label %thread-pre-split167

bb1513:                                           ; preds = %bb1512
  store i32 %v4_eeb8, i32* %r3.global-to-local, align 4
  br label %thread-pre-split167

thread-pre-split167:                              ; preds = %bb1512, %bb1513
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_eebc = icmp eq i32 %v4_eeb8, 0
  store i1 %v2_eebc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_eebc, label %dec_label_pc_eecc, label %dec_label_pc_eec4

dec_label_pc_eec4:                                ; preds = %thread-pre-split167
  %v2_eec4 = icmp ugt i32 %v1_e830, 141
  store i1 %v2_eec4, i1* %cpsr_c.global-to-local, align 1
  %v7_eec4 = icmp eq i32 %v1_e830, 142
  store i1 %v7_eec4, i1* %cpsr_z.global-to-local, align 1
  %v2_eec8 = xor i1 %v2_eec4, true
  %v3_eec8 = or i1 %v7_eec4, %v2_eec8
  br i1 %v3_eec8, label %dec_label_pc_e818, label %dec_label_pc_eecc

dec_label_pc_eecc:                                ; preds = %dec_label_pc_eec4, %thread-pre-split167
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_eecc = icmp eq i32 %v1_e830, 0
  store i1 %v2_eecc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_eecc, label %bb1515, label %bb1514

bb1514:                                           ; preds = %dec_label_pc_eecc
  br label %bb1515

bb1515:                                           ; preds = %dec_label_pc_eecc, %bb1514
  %v0_fe90 = phi i32 [ 0, %dec_label_pc_eecc ], [ 1, %bb1514 ]
  store i32 %v0_fe90, i32* %r3.global-to-local, align 4
  %v2_eed8 = icmp ugt i32 %v1_e81c, 139
  store i1 %v2_eed8, i1* %cpsr_c.global-to-local, align 1
  %v7_eed8 = icmp eq i32 %v1_e81c, 140
  store i1 %v7_eed8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eed8, label %bb1516, label %.thread1151

.thread1151:                                      ; preds = %bb1515
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_eef8

bb1516:                                           ; preds = %bb1515
  store i32 %v0_fe90, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_eee4 = icmp eq i32 %v0_fe90, 0
  store i1 %v2_eee4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_eee4, label %dec_label_pc_eef8, label %dec_label_pc_eef0

dec_label_pc_eef0:                                ; preds = %bb1516
  store i1 %v2_ea48, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ea48, i1* %cpsr_z.global-to-local, align 1
  %v2_eef4 = xor i1 %v2_ea48, true
  %v3_eef4 = or i1 %v7_ea48, %v2_eef4
  br i1 %v3_eef4, label %dec_label_pc_e818, label %dec_label_pc_eef8

dec_label_pc_eef8:                                ; preds = %.thread1151, %dec_label_pc_eef0, %bb1516
  %v0_eee41153 = phi i32 [ 0, %.thread1151 ], [ 1, %dec_label_pc_eef0 ], [ 0, %bb1516 ]
  store i1 %v2_eb38, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_eb38, i1* %cpsr_z.global-to-local, align 1
  %v2_eefc = xor i1 %v2_eb38, true
  %v3_eefc = or i1 %v7_eb38, %v2_eefc
  br i1 %v3_eefc, label %bb1517, label %bb1518

bb1517:                                           ; preds = %dec_label_pc_eef8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1518

bb1518:                                           ; preds = %dec_label_pc_eef8, %bb1517
  %v0_ef04851 = phi i32 [ %v0_eee41153, %dec_label_pc_eef8 ], [ 0, %bb1517 ]
  %v2_ef00 = xor i1 %v7_eb38, true
  %v3_ef00 = and i1 %v2_eb38, %v2_ef00
  br i1 %v3_ef00, label %bb1519, label %bb1520

bb1519:                                           ; preds = %bb1518
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1520

bb1520:                                           ; preds = %bb1518, %bb1519
  %v0_ef04 = phi i32 [ %v0_ef04851, %bb1518 ], [ 1, %bb1519 ]
  %v2_ef08 = icmp ugt i32 %v1_e81c, 142
  store i1 %v2_ef08, i1* %cpsr_c.global-to-local, align 1
  %v7_ef08 = icmp eq i32 %v1_e81c, 143
  store i1 %v7_ef08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ef08, label %.thread169, label %.thread170

.thread170:                                       ; preds = %bb1520
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ef24

.thread169:                                       ; preds = %bb1520
  %v2_ef10 = urem i32 %v0_ef04, 2
  store i32 %v2_ef10, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ef14 = icmp eq i32 %v2_ef10, 0
  store i1 %v2_ef14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ef14, label %dec_label_pc_ef24, label %dec_label_pc_ef1c

dec_label_pc_ef1c:                                ; preds = %.thread169
  %v2_ef1c = icmp ugt i32 %v1_e830, 231
  store i1 %v2_ef1c, i1* %cpsr_c.global-to-local, align 1
  %v7_ef1c = icmp eq i32 %v1_e830, 232
  store i1 %v7_ef1c, i1* %cpsr_z.global-to-local, align 1
  %v2_ef20 = xor i1 %v2_ef1c, true
  %v3_ef20 = or i1 %v7_ef1c, %v2_ef20
  br i1 %v3_ef20, label %dec_label_pc_e818, label %dec_label_pc_ef24

dec_label_pc_ef24:                                ; preds = %.thread170, %dec_label_pc_ef1c, %.thread169
  %v7_ef24 = icmp eq i32 %v1_e81c, 144
  %.2010 = zext i1 %v7_ef24 to i32
  store i32 %.2010, i32* %r3.global-to-local, align 4
  store i1 %v2_e904, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_e904, i1* %cpsr_z.global-to-local, align 1
  %v2_ef34 = xor i1 %v2_e904, true
  %v3_ef34 = or i1 %v7_e904, %v2_ef34
  br i1 %v3_ef34, label %.thread175, label %bb1523

.thread175:                                       ; preds = %dec_label_pc_ef24
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ef48

bb1523:                                           ; preds = %dec_label_pc_ef24
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ef38 = icmp eq i1 %v7_ef24, false
  store i1 %v2_ef38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ef38, label %dec_label_pc_ef48, label %dec_label_pc_ef40

dec_label_pc_ef40:                                ; preds = %bb1523
  %v2_ef40 = icmp ugt i32 %v1_e830, 251
  store i1 %v2_ef40, i1* %cpsr_c.global-to-local, align 1
  %v7_ef40 = icmp eq i32 %v1_e830, 252
  store i1 %v7_ef40, i1* %cpsr_z.global-to-local, align 1
  %v2_ef44 = xor i1 %v2_ef40, true
  %v3_ef44 = or i1 %v7_ef40, %v2_ef44
  br i1 %v3_ef44, label %dec_label_pc_e818, label %dec_label_pc_ef48

dec_label_pc_ef48:                                ; preds = %.thread175, %dec_label_pc_ef40, %bb1523
  %v0_ef54.pr855 = phi i32 [ 0, %.thread175 ], [ 1, %dec_label_pc_ef40 ], [ 0, %bb1523 ]
  %v2_ef48 = icmp ugt i32 %v1_e830, 163
  store i1 %v2_ef48, i1* %cpsr_c.global-to-local, align 1
  %v7_ef48 = icmp eq i32 %v1_e830, 164
  store i1 %v7_ef48, i1* %cpsr_z.global-to-local, align 1
  %v2_ef4c = xor i1 %v2_ef48, true
  %v3_ef4c = or i1 %v7_ef48, %v2_ef4c
  br i1 %v3_ef4c, label %bb1524, label %bb1525

bb1524:                                           ; preds = %dec_label_pc_ef48
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1525

bb1525:                                           ; preds = %dec_label_pc_ef48, %bb1524
  %v0_ef54.pr = phi i32 [ %v0_ef54.pr855, %dec_label_pc_ef48 ], [ 0, %bb1524 ]
  %v2_ef50 = xor i1 %v7_ef48, true
  %v3_ef50 = and i1 %v2_ef48, %v2_ef50
  br i1 %v3_ef50, label %bb1526, label %thread-pre-split178

bb1526:                                           ; preds = %bb1525
  store i32 %.1976, i32* %r3.global-to-local, align 4
  br label %thread-pre-split178

thread-pre-split178:                              ; preds = %bb1525, %bb1526
  %v0_ef54 = phi i32 [ %.1976, %bb1526 ], [ %v0_ef54.pr, %bb1525 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ef54 = icmp eq i32 %v0_ef54, 0
  store i1 %v2_ef54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ef54, label %dec_label_pc_ef64, label %dec_label_pc_ef5c

dec_label_pc_ef5c:                                ; preds = %thread-pre-split178
  %v2_ef5c = icmp ugt i32 %v1_e830, 164
  store i1 %v2_ef5c, i1* %cpsr_c.global-to-local, align 1
  %v7_ef5c = icmp eq i32 %v1_e830, 165
  store i1 %v7_ef5c, i1* %cpsr_z.global-to-local, align 1
  %v2_ef60 = xor i1 %v2_ef5c, true
  %v3_ef60 = or i1 %v7_ef5c, %v2_ef60
  br i1 %v3_ef60, label %dec_label_pc_e818, label %dec_label_pc_ef64

dec_label_pc_ef64:                                ; preds = %dec_label_pc_ef5c, %thread-pre-split178
  %v2_ef68 = and i32 %v0_ed78, %.1980
  %v4_ef68 = icmp eq i32 %v2_ef68, 0
  store i1 %v4_ef68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_ef68, label %dec_label_pc_ef78, label %dec_label_pc_ef70

dec_label_pc_ef70:                                ; preds = %dec_label_pc_ef64
  %v2_ef70 = icmp ugt i32 %v1_e830, 41
  store i1 %v2_ef70, i1* %cpsr_c.global-to-local, align 1
  %v7_ef70 = icmp eq i32 %v1_e830, 42
  store i1 %v7_ef70, i1* %cpsr_z.global-to-local, align 1
  %v2_ef74 = xor i1 %v2_ef70, true
  %v3_ef74 = or i1 %v7_ef70, %v2_ef74
  br i1 %v3_ef74, label %dec_label_pc_e818, label %dec_label_pc_ef78

dec_label_pc_ef78:                                ; preds = %dec_label_pc_ef70, %dec_label_pc_ef64
  store i1 %v2_eb84, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_eb84, i1* %cpsr_z.global-to-local, align 1
  %v2_ef7c = xor i1 %v2_eb84, true
  %v3_ef7c = or i1 %v7_eb84, %v2_ef7c
  br i1 %v3_ef7c, label %bb1527, label %bb1528

bb1527:                                           ; preds = %dec_label_pc_ef78
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1528

bb1528:                                           ; preds = %dec_label_pc_ef78, %bb1527
  %v1_ef84858 = phi i32 [ %v0_ef54, %dec_label_pc_ef78 ], [ 0, %bb1527 ]
  %v2_ef80 = xor i1 %v7_eb84, true
  %v3_ef80 = and i1 %v2_eb84, %v2_ef80
  br i1 %v3_ef80, label %bb1529, label %bb1530

bb1529:                                           ; preds = %bb1528
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1530

bb1530:                                           ; preds = %bb1528, %bb1529
  %v1_ef84 = phi i32 [ %v1_ef84858, %bb1528 ], [ 1, %bb1529 ]
  %v2_ef84 = and i32 %v1_ef84, %.1980
  %v4_ef84 = icmp eq i32 %v2_ef84, 0
  store i1 %v4_ef84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_ef84, label %dec_label_pc_ef98, label %dec_label_pc_ef90

dec_label_pc_ef90:                                ; preds = %bb1530
  %v2_ef90 = icmp ugt i32 %v1_e830, 103
  store i1 %v2_ef90, i1* %cpsr_c.global-to-local, align 1
  %v7_ef90 = icmp eq i32 %v1_e830, 104
  store i1 %v7_ef90, i1* %cpsr_z.global-to-local, align 1
  %v2_ef94 = xor i1 %v2_ef90, true
  %v3_ef94 = or i1 %v7_ef90, %v2_ef94
  br i1 %v3_ef94, label %dec_label_pc_e818, label %dec_label_pc_ef98

dec_label_pc_ef98:                                ; preds = %dec_label_pc_ef90, %bb1530
  %v2_ef98 = icmp ugt i32 %v1_e830, 166
  store i1 %v2_ef98, i1* %cpsr_c.global-to-local, align 1
  %v7_ef98 = icmp eq i32 %v1_e830, 167
  store i1 %v7_ef98, i1* %cpsr_z.global-to-local, align 1
  %v2_ef9c = xor i1 %v2_ef98, true
  %v3_ef9c = or i1 %v7_ef98, %v2_ef9c
  br i1 %v3_ef9c, label %bb1531, label %bb1532

bb1531:                                           ; preds = %dec_label_pc_ef98
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1532

bb1532:                                           ; preds = %dec_label_pc_ef98, %bb1531
  %v0_efa4.pr = phi i32 [ %v1_ef84, %dec_label_pc_ef98 ], [ 0, %bb1531 ]
  %v2_efa0 = xor i1 %v7_ef98, true
  %v3_efa0 = and i1 %v2_ef98, %v2_efa0
  br i1 %v3_efa0, label %bb1533, label %thread-pre-split179

bb1533:                                           ; preds = %bb1532
  store i32 %.1980, i32* %r3.global-to-local, align 4
  br label %thread-pre-split179

thread-pre-split179:                              ; preds = %bb1532, %bb1533
  %v0_efa4 = phi i32 [ %.1980, %bb1533 ], [ %v0_efa4.pr, %bb1532 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_efa4 = icmp eq i32 %v0_efa4, 0
  store i1 %v2_efa4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_efa4, label %dec_label_pc_efb4, label %dec_label_pc_efac

dec_label_pc_efac:                                ; preds = %thread-pre-split179
  %v2_efac = icmp ugt i32 %v1_e830, 168
  store i1 %v2_efac, i1* %cpsr_c.global-to-local, align 1
  %v7_efac = icmp eq i32 %v1_e830, 169
  store i1 %v7_efac, i1* %cpsr_z.global-to-local, align 1
  %v2_efb0 = xor i1 %v2_efac, true
  %v3_efb0 = or i1 %v7_efac, %v2_efb0
  br i1 %v3_efb0, label %dec_label_pc_e818, label %dec_label_pc_efb4

dec_label_pc_efb4:                                ; preds = %dec_label_pc_efac, %thread-pre-split179
  %v2_efb4 = icmp ugt i32 %v1_e830, 196
  store i1 %v2_efb4, i1* %cpsr_c.global-to-local, align 1
  %v7_efb4 = icmp eq i32 %v1_e830, 197
  store i1 %v7_efb4, i1* %cpsr_z.global-to-local, align 1
  %v2_efb8 = xor i1 %v2_efb4, true
  %v3_efb8 = or i1 %v7_efb4, %v2_efb8
  br i1 %v3_efb8, label %bb1534, label %bb1535

bb1534:                                           ; preds = %dec_label_pc_efb4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1535

bb1535:                                           ; preds = %dec_label_pc_efb4, %bb1534
  %v0_efc0.pr = phi i32 [ %v0_efa4, %dec_label_pc_efb4 ], [ 0, %bb1534 ]
  %v2_efbc = xor i1 %v7_efb4, true
  %v3_efbc = and i1 %v2_efb4, %v2_efbc
  br i1 %v3_efbc, label %bb1536, label %thread-pre-split180

bb1536:                                           ; preds = %bb1535
  store i32 %.1980, i32* %r3.global-to-local, align 4
  br label %thread-pre-split180

thread-pre-split180:                              ; preds = %bb1535, %bb1536
  %v0_efc0 = phi i32 [ %.1980, %bb1536 ], [ %v0_efc0.pr, %bb1535 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_efc0 = icmp eq i32 %v0_efc0, 0
  store i1 %v2_efc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_efc0, label %dec_label_pc_efd0, label %dec_label_pc_efc8

dec_label_pc_efc8:                                ; preds = %thread-pre-split180
  %v2_efc8 = icmp ugt i32 %v1_e830, 198
  store i1 %v2_efc8, i1* %cpsr_c.global-to-local, align 1
  %v7_efc8 = icmp eq i32 %v1_e830, 199
  store i1 %v7_efc8, i1* %cpsr_z.global-to-local, align 1
  %v2_efcc = xor i1 %v2_efc8, true
  %v3_efcc = or i1 %v7_efc8, %v2_efcc
  br i1 %v3_efcc, label %dec_label_pc_e818, label %dec_label_pc_efd0

dec_label_pc_efd0:                                ; preds = %dec_label_pc_efc8, %thread-pre-split180
  %v2_efd0 = icmp ugt i32 %v1_e830, 236
  store i1 %v2_efd0, i1* %cpsr_c.global-to-local, align 1
  %v7_efd0 = icmp eq i32 %v1_e830, 237
  store i1 %v7_efd0, i1* %cpsr_z.global-to-local, align 1
  %v2_efd4 = xor i1 %v2_efd0, true
  %v3_efd4 = or i1 %v7_efd0, %v2_efd4
  br i1 %v3_efd4, label %bb1537, label %bb1538

bb1537:                                           ; preds = %dec_label_pc_efd0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1538

bb1538:                                           ; preds = %dec_label_pc_efd0, %bb1537
  %v0_efdc.pr = phi i32 [ %v0_efc0, %dec_label_pc_efd0 ], [ 0, %bb1537 ]
  %v2_efd8 = xor i1 %v7_efd0, true
  %v3_efd8 = and i1 %v2_efd0, %v2_efd8
  br i1 %v3_efd8, label %bb1539, label %thread-pre-split181

bb1539:                                           ; preds = %bb1538
  store i32 %.1980, i32* %r3.global-to-local, align 4
  br label %thread-pre-split181

thread-pre-split181:                              ; preds = %bb1538, %bb1539
  %v0_efdc = phi i32 [ %.1980, %bb1539 ], [ %v0_efdc.pr, %bb1538 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_efdc = icmp eq i32 %v0_efdc, 0
  store i1 %v2_efdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_efdc, label %dec_label_pc_efec, label %dec_label_pc_efe4

dec_label_pc_efe4:                                ; preds = %thread-pre-split181
  %v2_efe4 = icmp eq i32 %v1_e830, 255
  store i1 %v2_efe4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_efe4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_efe4, label %dec_label_pc_efec, label %dec_label_pc_e818

dec_label_pc_efec:                                ; preds = %dec_label_pc_efe4, %thread-pre-split181
  %v2_efec = icmp ugt i32 %v1_e830, 111
  store i1 %v2_efec, i1* %cpsr_c.global-to-local, align 1
  %v7_efec = icmp eq i32 %v1_e830, 112
  store i1 %v7_efec, i1* %cpsr_z.global-to-local, align 1
  %v2_eff0 = xor i1 %v2_efec, true
  %v3_eff0 = or i1 %v7_efec, %v2_eff0
  br i1 %v3_eff0, label %bb1540, label %bb1541

bb1540:                                           ; preds = %dec_label_pc_efec
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1541

bb1541:                                           ; preds = %dec_label_pc_efec, %bb1540
  %v0_eff8.pr = phi i32 [ %v0_efdc, %dec_label_pc_efec ], [ 0, %bb1540 ]
  %v2_eff4 = xor i1 %v7_efec, true
  %v3_eff4 = and i1 %v2_efec, %v2_eff4
  br i1 %v3_eff4, label %bb1542, label %thread-pre-split182

bb1542:                                           ; preds = %bb1541
  store i32 %.1982, i32* %r3.global-to-local, align 4
  br label %thread-pre-split182

thread-pre-split182:                              ; preds = %bb1541, %bb1542
  %v0_eff8 = phi i32 [ %.1982, %bb1542 ], [ %v0_eff8.pr, %bb1541 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_eff8 = icmp eq i32 %v0_eff8, 0
  store i1 %v2_eff8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_eff8, label %dec_label_pc_f008, label %dec_label_pc_f000

dec_label_pc_f000:                                ; preds = %thread-pre-split182
  store i1 %v2_e944, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_e944, i1* %cpsr_z.global-to-local, align 1
  %v2_f004 = xor i1 %v2_e944, true
  %v3_f004 = or i1 %v7_e944, %v2_f004
  br i1 %v3_f004, label %dec_label_pc_e818, label %dec_label_pc_f008

dec_label_pc_f008:                                ; preds = %dec_label_pc_f000, %thread-pre-split182
  store i32 %.1985, i32* %r3.global-to-local, align 4
  %v2_f00c = icmp ugt i32 %v1_e830, 149
  store i1 %v2_f00c, i1* %cpsr_c.global-to-local, align 1
  %v7_f00c = icmp eq i32 %v1_e830, 150
  store i1 %v7_f00c, i1* %cpsr_z.global-to-local, align 1
  %v2_f010 = xor i1 %v2_f00c, true
  %v3_f010 = or i1 %v7_f00c, %v2_f010
  br i1 %v3_f010, label %bb1543, label %bb1544

bb1543:                                           ; preds = %dec_label_pc_f008
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1544

bb1544:                                           ; preds = %dec_label_pc_f008, %bb1543
  %v4_f014 = phi i32 [ %.1985, %dec_label_pc_f008 ], [ 0, %bb1543 ]
  %v2_f014 = xor i1 %v7_f00c, true
  %v3_f014 = and i1 %v2_f00c, %v2_f014
  br i1 %v3_f014, label %bb1545, label %thread-pre-split183

bb1545:                                           ; preds = %bb1544
  store i32 %v4_f014, i32* %r3.global-to-local, align 4
  br label %thread-pre-split183

thread-pre-split183:                              ; preds = %bb1544, %bb1545
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f018 = icmp eq i32 %v4_f014, 0
  store i1 %v2_f018, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f018, label %dec_label_pc_f028, label %dec_label_pc_f020

dec_label_pc_f020:                                ; preds = %thread-pre-split183
  store i1 %v2_e918, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_e918, i1* %cpsr_z.global-to-local, align 1
  %v2_f024 = xor i1 %v2_e918, true
  %v3_f024 = or i1 %v7_e918, %v2_f024
  br i1 %v3_f024, label %dec_label_pc_e818, label %dec_label_pc_f028

dec_label_pc_f028:                                ; preds = %dec_label_pc_f020, %thread-pre-split183
  %v7_f028 = icmp eq i32 %v1_e81c, 153
  %.2011 = zext i1 %v7_f028 to i32
  store i32 %.2011, i32* %r3.global-to-local, align 4
  %v2_f034 = icmp ugt i32 %v1_e830, 19
  store i1 %v2_f034, i1* %cpsr_c.global-to-local, align 1
  %v7_f034 = icmp eq i32 %v1_e830, 20
  store i1 %v7_f034, i1* %cpsr_z.global-to-local, align 1
  %v2_f038 = xor i1 %v2_f034, true
  %v3_f038 = or i1 %v7_f034, %v2_f038
  br i1 %v3_f038, label %.thread186, label %bb1548

.thread186:                                       ; preds = %dec_label_pc_f028
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f04c

bb1548:                                           ; preds = %dec_label_pc_f028
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f03c = icmp eq i1 %v7_f028, false
  store i1 %v2_f03c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f03c, label %dec_label_pc_f04c, label %dec_label_pc_f044

dec_label_pc_f044:                                ; preds = %bb1548
  %v2_f044 = icmp ugt i32 %v1_e830, 30
  store i1 %v2_f044, i1* %cpsr_c.global-to-local, align 1
  %v7_f044 = icmp eq i32 %v1_e830, 31
  store i1 %v7_f044, i1* %cpsr_z.global-to-local, align 1
  %v2_f048 = xor i1 %v2_f044, true
  %v3_f048 = or i1 %v7_f044, %v2_f048
  br i1 %v3_f048, label %dec_label_pc_e818, label %dec_label_pc_f04c

dec_label_pc_f04c:                                ; preds = %.thread186, %dec_label_pc_f044, %bb1548
  store i32 %.1989, i32* %r4.global-to-local, align 4
  %v2_f050 = and i32 %v1_f050, %.1989
  %v4_f050 = icmp eq i32 %v2_f050, 0
  store i1 %v4_f050, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f050, label %dec_label_pc_f060, label %dec_label_pc_f058

dec_label_pc_f058:                                ; preds = %dec_label_pc_f04c
  %v2_f058 = icmp ugt i32 %v1_e830, 8
  store i1 %v2_f058, i1* %cpsr_c.global-to-local, align 1
  %v7_f058 = icmp eq i32 %v1_e830, 9
  store i1 %v7_f058, i1* %cpsr_z.global-to-local, align 1
  %v2_f05c = xor i1 %v2_f058, true
  %v3_f05c = or i1 %v7_f058, %v2_f05c
  br i1 %v3_f05c, label %dec_label_pc_e818, label %dec_label_pc_f060

dec_label_pc_f060:                                ; preds = %dec_label_pc_f058, %dec_label_pc_f04c
  store i32 %.1989, i32* %r3.global-to-local, align 4
  %v2_f064 = icmp ugt i32 %v1_e830, 72
  store i1 %v2_f064, i1* %cpsr_c.global-to-local, align 1
  %v7_f064 = icmp eq i32 %v1_e830, 73
  store i1 %v7_f064, i1* %cpsr_z.global-to-local, align 1
  %v2_f068 = xor i1 %v2_f064, true
  %v3_f068 = or i1 %v7_f064, %v2_f068
  br i1 %v3_f068, label %bb1549, label %bb1550

bb1549:                                           ; preds = %dec_label_pc_f060
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1550

bb1550:                                           ; preds = %dec_label_pc_f060, %bb1549
  %v4_f06c = phi i32 [ %.1989, %dec_label_pc_f060 ], [ 0, %bb1549 ]
  %v2_f06c = xor i1 %v7_f064, true
  %v3_f06c = and i1 %v2_f064, %v2_f06c
  br i1 %v3_f06c, label %bb1551, label %thread-pre-split189

bb1551:                                           ; preds = %bb1550
  store i32 %v4_f06c, i32* %r3.global-to-local, align 4
  br label %thread-pre-split189

thread-pre-split189:                              ; preds = %bb1550, %bb1551
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f070 = icmp eq i32 %v4_f06c, 0
  store i1 %v2_f070, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f070, label %dec_label_pc_f080, label %dec_label_pc_f078

dec_label_pc_f078:                                ; preds = %thread-pre-split189
  %v2_f078 = icmp ugt i32 %v1_e830, 87
  store i1 %v2_f078, i1* %cpsr_c.global-to-local, align 1
  %v7_f078 = icmp eq i32 %v1_e830, 88
  store i1 %v7_f078, i1* %cpsr_z.global-to-local, align 1
  %v2_f07c = xor i1 %v2_f078, true
  %v3_f07c = or i1 %v7_f078, %v2_f07c
  br i1 %v3_f07c, label %dec_label_pc_e818, label %dec_label_pc_f080

dec_label_pc_f080:                                ; preds = %dec_label_pc_f078, %thread-pre-split189
  store i32 %.1989, i32* %r3.global-to-local, align 4
  %v2_f084 = icmp ugt i32 %v1_e830, 211
  store i1 %v2_f084, i1* %cpsr_c.global-to-local, align 1
  %v7_f084 = icmp eq i32 %v1_e830, 212
  store i1 %v7_f084, i1* %cpsr_z.global-to-local, align 1
  %v2_f088 = xor i1 %v2_f084, true
  %v3_f088 = or i1 %v7_f084, %v2_f088
  br i1 %v3_f088, label %bb1552, label %bb1553

bb1552:                                           ; preds = %dec_label_pc_f080
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1553

bb1553:                                           ; preds = %dec_label_pc_f080, %bb1552
  %v4_f08c = phi i32 [ %.1989, %dec_label_pc_f080 ], [ 0, %bb1552 ]
  %v2_f08c = xor i1 %v7_f084, true
  %v3_f08c = and i1 %v2_f084, %v2_f08c
  br i1 %v3_f08c, label %bb1554, label %thread-pre-split190

bb1554:                                           ; preds = %bb1553
  store i32 %v4_f08c, i32* %r3.global-to-local, align 4
  br label %thread-pre-split190

thread-pre-split190:                              ; preds = %bb1553, %bb1554
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f090 = icmp eq i32 %v4_f08c, 0
  store i1 %v2_f090, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f090, label %dec_label_pc_f0a0, label %dec_label_pc_f098

dec_label_pc_f098:                                ; preds = %thread-pre-split190
  %v2_f098 = icmp ugt i32 %v1_e830, 220
  store i1 %v2_f098, i1* %cpsr_c.global-to-local, align 1
  %v7_f098 = icmp eq i32 %v1_e830, 221
  store i1 %v7_f098, i1* %cpsr_z.global-to-local, align 1
  %v2_f09c = xor i1 %v2_f098, true
  %v3_f09c = or i1 %v7_f098, %v2_f09c
  br i1 %v3_f09c, label %dec_label_pc_e818, label %dec_label_pc_f0a0

dec_label_pc_f0a0:                                ; preds = %dec_label_pc_f098, %thread-pre-split190
  store i32 %.1987, i32* %r3.global-to-local, align 4
  store i1 %v2_e9a0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_e9a0, i1* %cpsr_z.global-to-local, align 1
  %v2_f0a8 = xor i1 %v2_e9a0, true
  %v3_f0a8 = or i1 %v7_e9a0, %v2_f0a8
  br i1 %v3_f0a8, label %bb1555, label %bb1556

bb1555:                                           ; preds = %dec_label_pc_f0a0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1556

bb1556:                                           ; preds = %dec_label_pc_f0a0, %bb1555
  %v4_f0ac = phi i32 [ %.1987, %dec_label_pc_f0a0 ], [ 0, %bb1555 ]
  %v2_f0ac = xor i1 %v7_e9a0, true
  %v3_f0ac = and i1 %v2_e9a0, %v2_f0ac
  br i1 %v3_f0ac, label %bb1557, label %thread-pre-split191

bb1557:                                           ; preds = %bb1556
  store i32 %v4_f0ac, i32* %r3.global-to-local, align 4
  br label %thread-pre-split191

thread-pre-split191:                              ; preds = %bb1556, %bb1557
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f0b0 = icmp eq i32 %v4_f0ac, 0
  store i1 %v2_f0b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f0b0, label %dec_label_pc_f0c0, label %dec_label_pc_f0b8

dec_label_pc_f0b8:                                ; preds = %thread-pre-split191
  %v2_f0b8 = icmp ugt i32 %v1_e830, 152
  store i1 %v2_f0b8, i1* %cpsr_c.global-to-local, align 1
  %v7_f0b8 = icmp eq i32 %v1_e830, 153
  store i1 %v7_f0b8, i1* %cpsr_z.global-to-local, align 1
  %v2_f0bc = xor i1 %v2_f0b8, true
  %v3_f0bc = or i1 %v7_f0b8, %v2_f0bc
  br i1 %v3_f0bc, label %dec_label_pc_e818, label %dec_label_pc_f0c0

dec_label_pc_f0c0:                                ; preds = %dec_label_pc_f0b8, %thread-pre-split191
  %v2_f0c4 = icmp ugt i32 %v1_e81c, 157
  store i1 %v2_f0c4, i1* %cpsr_c.global-to-local, align 1
  %v7_f0c4 = icmp eq i32 %v1_e81c, 158
  %.2012 = zext i1 %v7_f0c4 to i32
  store i32 %.2012, i32* %r3.global-to-local, align 4
  %v2_f0d0 = and i32 %v0_fe90, %.2012
  %v4_f0d0 = icmp eq i32 %v2_f0d0, 0
  store i1 %v4_f0d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f0d0, label %dec_label_pc_f0e0, label %dec_label_pc_f0d8

dec_label_pc_f0d8:                                ; preds = %dec_label_pc_f0c0
  store i1 %v2_f034, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f034, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_f038, label %dec_label_pc_e818, label %dec_label_pc_f0e0

dec_label_pc_f0e0:                                ; preds = %dec_label_pc_f0d8, %dec_label_pc_f0c0
  %v2_f0e0 = icmp ugt i32 %v1_e830, 233
  store i1 %v2_f0e0, i1* %cpsr_c.global-to-local, align 1
  %v7_f0e0 = icmp eq i32 %v1_e830, 234
  store i1 %v7_f0e0, i1* %cpsr_z.global-to-local, align 1
  %v2_f0e4 = xor i1 %v2_f0e0, true
  %v3_f0e4 = or i1 %v7_f0e0, %v2_f0e4
  br i1 %v3_f0e4, label %bb1560, label %bb1561

bb1560:                                           ; preds = %dec_label_pc_f0e0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1561

bb1561:                                           ; preds = %dec_label_pc_f0e0, %bb1560
  %v4_f0e8 = phi i32 [ %.2012, %dec_label_pc_f0e0 ], [ 0, %bb1560 ]
  %v2_f0e8 = xor i1 %v7_f0e0, true
  %v3_f0e8 = and i1 %v2_f0e0, %v2_f0e8
  br i1 %v3_f0e8, label %bb1562, label %thread-pre-split193

bb1562:                                           ; preds = %bb1561
  store i32 %v4_f0e8, i32* %r3.global-to-local, align 4
  br label %thread-pre-split193

thread-pre-split193:                              ; preds = %bb1561, %bb1562
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f0ec = icmp eq i32 %v4_f0e8, 0
  store i1 %v2_f0ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f0ec, label %dec_label_pc_f0fc, label %dec_label_pc_f0f4

dec_label_pc_f0f4:                                ; preds = %thread-pre-split193
  %v2_f0f4 = icmp ugt i32 %v1_e830, 245
  store i1 %v2_f0f4, i1* %cpsr_c.global-to-local, align 1
  %v7_f0f4 = icmp eq i32 %v1_e830, 246
  store i1 %v7_f0f4, i1* %cpsr_z.global-to-local, align 1
  %v2_f0f8 = xor i1 %v2_f0f4, true
  %v3_f0f8 = or i1 %v7_f0f4, %v2_f0f8
  br i1 %v3_f0f8, label %dec_label_pc_e818, label %dec_label_pc_f0fc

dec_label_pc_f0fc:                                ; preds = %dec_label_pc_f0f4, %thread-pre-split193
  %v7_f0fc = icmp eq i32 %v1_e81c, 159
  %.2013 = zext i1 %v7_f0fc to i32
  %v2_f108 = icmp ugt i32 %v1_e830, 118
  store i1 %v2_f108, i1* %cpsr_c.global-to-local, align 1
  %v7_f108 = icmp eq i32 %v1_e830, 119
  store i1 %v7_f108, i1* %cpsr_z.global-to-local, align 1
  %v2_f10c = xor i1 %v2_f108, true
  %v3_f10c = or i1 %v7_f108, %v2_f10c
  br i1 %v3_f10c, label %bb1565, label %bb1566

bb1565:                                           ; preds = %dec_label_pc_f0fc
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1566

bb1566:                                           ; preds = %dec_label_pc_f0fc, %bb1565
  %v0_f114.pr = phi i32 [ %v4_f0e8, %dec_label_pc_f0fc ], [ 0, %bb1565 ]
  %v2_f110 = xor i1 %v7_f108, true
  %v3_f110 = and i1 %v2_f108, %v2_f110
  br i1 %v3_f110, label %bb1567, label %thread-pre-split195

bb1567:                                           ; preds = %bb1566
  store i32 %.2013, i32* %r3.global-to-local, align 4
  br label %thread-pre-split195

thread-pre-split195:                              ; preds = %bb1566, %bb1567
  %v0_f114 = phi i32 [ %.2013, %bb1567 ], [ %v0_f114.pr, %bb1566 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f114 = icmp eq i32 %v0_f114, 0
  store i1 %v2_f114, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f114, label %dec_label_pc_f124, label %dec_label_pc_f11c

dec_label_pc_f11c:                                ; preds = %thread-pre-split195
  store i1 %v2_ec48, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ec48, i1* %cpsr_z.global-to-local, align 1
  %v2_f120 = xor i1 %v2_ec48, true
  %v3_f120 = or i1 %v7_ec48, %v2_f120
  br i1 %v3_f120, label %dec_label_pc_e818, label %dec_label_pc_f124

dec_label_pc_f124:                                ; preds = %dec_label_pc_f11c, %thread-pre-split195
  %v7_f124 = icmp eq i32 %v1_e81c, 160
  %.2014 = zext i1 %v7_f124 to i32
  store i32 %.2014, i32* %r3.global-to-local, align 4
  %v2_f130 = icmp ugt i32 %v1_e830, 130
  store i1 %v2_f130, i1* %cpsr_c.global-to-local, align 1
  %v7_f130 = icmp eq i32 %v1_e830, 131
  store i1 %v7_f130, i1* %cpsr_z.global-to-local, align 1
  %v2_f134 = xor i1 %v2_f130, true
  %v3_f134 = or i1 %v7_f130, %v2_f134
  br i1 %v3_f134, label %.thread198, label %bb1570

.thread198:                                       ; preds = %dec_label_pc_f124
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f148

bb1570:                                           ; preds = %dec_label_pc_f124
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f138 = icmp eq i1 %v7_f124, false
  store i1 %v2_f138, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f138, label %dec_label_pc_f148, label %dec_label_pc_f140

dec_label_pc_f140:                                ; preds = %bb1570
  store i1 %v2_f00c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f00c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_f010, label %dec_label_pc_e818, label %dec_label_pc_f148

dec_label_pc_f148:                                ; preds = %.thread198, %dec_label_pc_f140, %bb1570
  store i32 %.2001, i32* %r3.global-to-local, align 4
  %v2_f14c = icmp ugt i32 %v1_e830, 222
  store i1 %v2_f14c, i1* %cpsr_c.global-to-local, align 1
  %v7_f14c = icmp eq i32 %v1_e830, 223
  store i1 %v7_f14c, i1* %cpsr_z.global-to-local, align 1
  %v2_f150 = xor i1 %v2_f14c, true
  %v3_f150 = or i1 %v7_f14c, %v2_f150
  br i1 %v3_f150, label %bb1571, label %bb1572

bb1571:                                           ; preds = %dec_label_pc_f148
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1572

bb1572:                                           ; preds = %dec_label_pc_f148, %bb1571
  %v4_f154 = phi i32 [ %.2001, %dec_label_pc_f148 ], [ 0, %bb1571 ]
  %v2_f154 = xor i1 %v7_f14c, true
  %v3_f154 = and i1 %v2_f14c, %v2_f154
  br i1 %v3_f154, label %bb1573, label %thread-pre-split201

bb1573:                                           ; preds = %bb1572
  store i32 %v4_f154, i32* %r3.global-to-local, align 4
  br label %thread-pre-split201

thread-pre-split201:                              ; preds = %bb1572, %bb1573
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f158 = icmp eq i32 %v4_f154, 0
  store i1 %v2_f158, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f158, label %dec_label_pc_f168, label %dec_label_pc_f160

dec_label_pc_f160:                                ; preds = %thread-pre-split201
  %v2_f160 = icmp ugt i32 %v1_e830, 225
  store i1 %v2_f160, i1* %cpsr_c.global-to-local, align 1
  %v7_f160 = icmp eq i32 %v1_e830, 226
  store i1 %v7_f160, i1* %cpsr_z.global-to-local, align 1
  %v2_f164 = xor i1 %v2_f160, true
  %v3_f164 = or i1 %v7_f160, %v2_f164
  br i1 %v3_f164, label %dec_label_pc_e818, label %dec_label_pc_f168

dec_label_pc_f168:                                ; preds = %dec_label_pc_f160, %thread-pre-split201
  store i32 %.1988, i32* %r3.global-to-local, align 4
  store i32 %v0_ef04, i32* %r4.global-to-local, align 4
  %v2_f170 = and i32 %v0_ef04, %.1988
  %v4_f170 = icmp eq i32 %v2_f170, 0
  store i1 %v4_f170, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f170, label %dec_label_pc_f180, label %dec_label_pc_f178

dec_label_pc_f178:                                ; preds = %dec_label_pc_f168
  %v2_f178 = icmp ugt i32 %v1_e830, 45
  store i1 %v2_f178, i1* %cpsr_c.global-to-local, align 1
  %v7_f178 = icmp eq i32 %v1_e830, 46
  store i1 %v7_f178, i1* %cpsr_z.global-to-local, align 1
  %v2_f17c = xor i1 %v2_f178, true
  %v3_f17c = or i1 %v7_f178, %v2_f17c
  br i1 %v3_f17c, label %dec_label_pc_e818, label %dec_label_pc_f180

dec_label_pc_f180:                                ; preds = %dec_label_pc_f178, %dec_label_pc_f168
  %v7_f180 = icmp eq i32 %v1_e81c, 163
  %.2015 = zext i1 %v7_f180 to i32
  store i32 %.2015, i32* %sb.global-to-local, align 4
  %v2_f18c = icmp ugt i32 %v1_e830, 203
  store i1 %v2_f18c, i1* %cpsr_c.global-to-local, align 1
  %v7_f18c = icmp eq i32 %v1_e830, 204
  store i1 %v7_f18c, i1* %cpsr_z.global-to-local, align 1
  %v2_f190 = xor i1 %v2_f18c, true
  %v3_f190 = or i1 %v7_f18c, %v2_f190
  br i1 %v3_f190, label %bb1576, label %bb1577

bb1576:                                           ; preds = %dec_label_pc_f180
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1577

bb1577:                                           ; preds = %dec_label_pc_f180, %bb1576
  %v0_f198.pr = phi i32 [ %.1988, %dec_label_pc_f180 ], [ 0, %bb1576 ]
  %v2_f194 = xor i1 %v7_f18c, true
  %v3_f194 = and i1 %v2_f18c, %v2_f194
  br i1 %v3_f194, label %bb1578, label %thread-pre-split203

bb1578:                                           ; preds = %bb1577
  store i32 %.2015, i32* %r3.global-to-local, align 4
  br label %thread-pre-split203

thread-pre-split203:                              ; preds = %bb1577, %bb1578
  %v0_f198 = phi i32 [ %.2015, %bb1578 ], [ %v0_f198.pr, %bb1577 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f198 = icmp eq i32 %v0_f198, 0
  store i1 %v2_f198, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f198, label %dec_label_pc_f1a8, label %dec_label_pc_f1a0

dec_label_pc_f1a0:                                ; preds = %thread-pre-split203
  %v2_f1a0 = icmp ugt i32 %v1_e830, 205
  store i1 %v2_f1a0, i1* %cpsr_c.global-to-local, align 1
  %v7_f1a0 = icmp eq i32 %v1_e830, 206
  store i1 %v7_f1a0, i1* %cpsr_z.global-to-local, align 1
  %v2_f1a4 = xor i1 %v2_f1a0, true
  %v3_f1a4 = or i1 %v7_f1a0, %v2_f1a4
  br i1 %v3_f1a4, label %dec_label_pc_e818, label %dec_label_pc_f1a8

dec_label_pc_f1a8:                                ; preds = %dec_label_pc_f1a0, %thread-pre-split203
  store i32 %v0_ef04, i32* %r3.global-to-local, align 4
  %v2_f1b0 = and i32 %v0_ef04, %.1990
  %v4_f1b0 = icmp eq i32 %v2_f1b0, 0
  store i1 %v4_f1b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f1b0, label %dec_label_pc_f1c0, label %dec_label_pc_f1b8

dec_label_pc_f1b8:                                ; preds = %dec_label_pc_f1a8
  %v2_f1b8 = icmp ugt i32 %v1_e830, 48
  store i1 %v2_f1b8, i1* %cpsr_c.global-to-local, align 1
  %v7_f1b8 = icmp eq i32 %v1_e830, 49
  store i1 %v7_f1b8, i1* %cpsr_z.global-to-local, align 1
  %v2_f1bc = xor i1 %v2_f1b8, true
  %v3_f1bc = or i1 %v7_f1b8, %v2_f1bc
  br i1 %v3_f1bc, label %dec_label_pc_e818, label %dec_label_pc_f1c0

dec_label_pc_f1c0:                                ; preds = %dec_label_pc_f1b8, %dec_label_pc_f1a8
  store i32 %.1990, i32* %r3.global-to-local, align 4
  %v2_f1c4 = icmp ugt i32 %v1_e830, 215
  store i1 %v2_f1c4, i1* %cpsr_c.global-to-local, align 1
  %v7_f1c4 = icmp eq i32 %v1_e830, 216
  store i1 %v7_f1c4, i1* %cpsr_z.global-to-local, align 1
  %v2_f1c8 = xor i1 %v2_f1c4, true
  %v3_f1c8 = or i1 %v7_f1c4, %v2_f1c8
  br i1 %v3_f1c8, label %bb1579, label %bb1580

bb1579:                                           ; preds = %dec_label_pc_f1c0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1580

bb1580:                                           ; preds = %dec_label_pc_f1c0, %bb1579
  %v4_f1cc = phi i32 [ %.1990, %dec_label_pc_f1c0 ], [ 0, %bb1579 ]
  %v2_f1cc = xor i1 %v7_f1c4, true
  %v3_f1cc = and i1 %v2_f1c4, %v2_f1cc
  br i1 %v3_f1cc, label %bb1581, label %thread-pre-split204

bb1581:                                           ; preds = %bb1580
  store i32 %v4_f1cc, i32* %r3.global-to-local, align 4
  br label %thread-pre-split204

thread-pre-split204:                              ; preds = %bb1580, %bb1581
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f1d0 = icmp eq i32 %v4_f1cc, 0
  store i1 %v2_f1d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f1d0, label %dec_label_pc_f1e0, label %dec_label_pc_f1d8

dec_label_pc_f1d8:                                ; preds = %thread-pre-split204
  %v2_f1d8 = icmp ugt i32 %v1_e830, 231
  store i1 %v2_f1d8, i1* %cpsr_c.global-to-local, align 1
  %v7_f1d8 = icmp eq i32 %v1_e830, 232
  store i1 %v7_f1d8, i1* %cpsr_z.global-to-local, align 1
  %v2_f1dc = xor i1 %v2_f1d8, true
  %v3_f1dc = or i1 %v7_f1d8, %v2_f1dc
  br i1 %v3_f1dc, label %dec_label_pc_e818, label %dec_label_pc_f1e0

dec_label_pc_f1e0:                                ; preds = %dec_label_pc_f1d8, %thread-pre-split204
  store i32 %.2003, i32* %r3.global-to-local, align 4
  %v2_f1e4 = icmp ugt i32 %v1_e830, 250
  store i1 %v2_f1e4, i1* %cpsr_c.global-to-local, align 1
  %v7_f1e4 = icmp eq i32 %v1_e830, 251
  store i1 %v7_f1e4, i1* %cpsr_z.global-to-local, align 1
  %v2_f1e8 = xor i1 %v2_f1e4, true
  %v3_f1e8 = or i1 %v7_f1e4, %v2_f1e8
  br i1 %v3_f1e8, label %bb1582, label %bb1583

bb1582:                                           ; preds = %dec_label_pc_f1e0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1583

bb1583:                                           ; preds = %dec_label_pc_f1e0, %bb1582
  %v4_f1ec = phi i32 [ %.2003, %dec_label_pc_f1e0 ], [ 0, %bb1582 ]
  %v2_f1ec = xor i1 %v7_f1e4, true
  %v3_f1ec = and i1 %v2_f1e4, %v2_f1ec
  br i1 %v3_f1ec, label %bb1584, label %thread-pre-split205

bb1584:                                           ; preds = %bb1583
  store i32 %v4_f1ec, i32* %r3.global-to-local, align 4
  br label %thread-pre-split205

thread-pre-split205:                              ; preds = %bb1583, %bb1584
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f1f0 = icmp eq i32 %v4_f1ec, 0
  store i1 %v2_f1f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f1f0, label %dec_label_pc_f200, label %dec_label_pc_f1f8

dec_label_pc_f1f8:                                ; preds = %thread-pre-split205
  %v2_f1f8 = icmp ugt i32 %v1_e830, 252
  store i1 %v2_f1f8, i1* %cpsr_c.global-to-local, align 1
  %v7_f1f8 = icmp eq i32 %v1_e830, 253
  store i1 %v7_f1f8, i1* %cpsr_z.global-to-local, align 1
  %v2_f1fc = xor i1 %v2_f1f8, true
  %v3_f1fc = or i1 %v7_f1f8, %v2_f1fc
  br i1 %v3_f1fc, label %dec_label_pc_e818, label %dec_label_pc_f200

dec_label_pc_f200:                                ; preds = %dec_label_pc_f1f8, %thread-pre-split205
  %v7_f200 = icmp eq i32 %v1_e81c, 199
  %.2016 = zext i1 %v7_f200 to i32
  store i32 %.2016, i32* %r4.global-to-local, align 4
  store i32 %.2016, i32* %r3.global-to-local, align 4
  store i1 %v2_ec48, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ec48, i1* %cpsr_z.global-to-local, align 1
  %v2_f214 = xor i1 %v2_ec48, true
  %v3_f214 = or i1 %v7_ec48, %v2_f214
  br i1 %v3_f214, label %bb1587, label %bb1588

bb1587:                                           ; preds = %dec_label_pc_f200
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1588

bb1588:                                           ; preds = %dec_label_pc_f200, %bb1587
  %v4_f218 = phi i32 [ %.2016, %dec_label_pc_f200 ], [ 0, %bb1587 ]
  %v2_f218 = xor i1 %v7_ec48, true
  %v3_f218 = and i1 %v2_ec48, %v2_f218
  br i1 %v3_f218, label %bb1589, label %thread-pre-split207

bb1589:                                           ; preds = %bb1588
  store i32 %v4_f218, i32* %r3.global-to-local, align 4
  br label %thread-pre-split207

thread-pre-split207:                              ; preds = %bb1588, %bb1589
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f21c = icmp eq i32 %v4_f218, 0
  store i1 %v2_f21c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f21c, label %dec_label_pc_f230, label %dec_label_pc_f228

dec_label_pc_f228:                                ; preds = %thread-pre-split207
  %v2_f228 = icmp ugt i32 %v1_e830, 252
  store i1 %v2_f228, i1* %cpsr_c.global-to-local, align 1
  %v7_f228 = icmp eq i32 %v1_e830, 253
  store i1 %v7_f228, i1* %cpsr_z.global-to-local, align 1
  %v2_f22c = xor i1 %v2_f228, true
  %v3_f22c = or i1 %v7_f228, %v2_f22c
  br i1 %v3_f22c, label %dec_label_pc_e818, label %dec_label_pc_f230

dec_label_pc_f230:                                ; preds = %dec_label_pc_f228, %thread-pre-split207
  store i32 %v0_fe90, i32* %r3.global-to-local, align 4
  %v2_f234 = icmp ugt i32 %v1_e81c, 204
  store i1 %v2_f234, i1* %cpsr_c.global-to-local, align 1
  %v7_f234 = icmp eq i32 %v1_e81c, 205
  store i1 %v7_f234, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f234, label %.thread208, label %.thread209

.thread209:                                       ; preds = %dec_label_pc_f230
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f250

.thread208:                                       ; preds = %dec_label_pc_f230
  store i32 %v0_fe90, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f240 = icmp eq i32 %v0_fe90, 0
  store i1 %v2_f240, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f240, label %dec_label_pc_f250, label %dec_label_pc_f248

dec_label_pc_f248:                                ; preds = %.thread208
  %v2_f248 = icmp ugt i32 %v1_e830, 116
  store i1 %v2_f248, i1* %cpsr_c.global-to-local, align 1
  %v7_f248 = icmp eq i32 %v1_e830, 117
  store i1 %v7_f248, i1* %cpsr_z.global-to-local, align 1
  %v2_f24c = xor i1 %v2_f248, true
  %v3_f24c = or i1 %v7_f248, %v2_f24c
  br i1 %v3_f24c, label %dec_label_pc_e818, label %dec_label_pc_f250

dec_label_pc_f250:                                ; preds = %.thread209, %dec_label_pc_f248, %.thread208
  store i32 %.1996, i32* %r3.global-to-local, align 4
  store i1 %v2_eb98, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_eb98, i1* %cpsr_z.global-to-local, align 1
  %v2_f258 = xor i1 %v2_eb98, true
  %v3_f258 = or i1 %v7_eb98, %v2_f258
  br i1 %v3_f258, label %bb1590, label %bb1591

bb1590:                                           ; preds = %dec_label_pc_f250
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1591

bb1591:                                           ; preds = %dec_label_pc_f250, %bb1590
  %v4_f25c = phi i32 [ %.1996, %dec_label_pc_f250 ], [ 0, %bb1590 ]
  %v2_f25c = xor i1 %v7_eb98, true
  %v3_f25c = and i1 %v2_eb98, %v2_f25c
  br i1 %v3_f25c, label %bb1592, label %thread-pre-split212

bb1592:                                           ; preds = %bb1591
  store i32 %v4_f25c, i32* %r3.global-to-local, align 4
  br label %thread-pre-split212

thread-pre-split212:                              ; preds = %bb1591, %bb1592
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f260 = icmp eq i32 %v4_f25c, 0
  store i1 %v2_f260, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f260, label %dec_label_pc_f270, label %dec_label_pc_f268

dec_label_pc_f268:                                ; preds = %thread-pre-split212
  %v2_f268 = icmp ugt i32 %v1_e830, 60
  store i1 %v2_f268, i1* %cpsr_c.global-to-local, align 1
  %v7_f268 = icmp eq i32 %v1_e830, 61
  store i1 %v7_f268, i1* %cpsr_z.global-to-local, align 1
  %v2_f26c = xor i1 %v2_f268, true
  %v3_f26c = or i1 %v7_f268, %v2_f26c
  br i1 %v3_f26c, label %dec_label_pc_e818, label %dec_label_pc_f270

dec_label_pc_f270:                                ; preds = %dec_label_pc_f268, %thread-pre-split212
  store i32 %v0_f280, i32* %r3.global-to-local, align 4
  %v2_f274 = icmp ugt i32 %v1_e81c, 103
  store i1 %v2_f274, i1* %cpsr_c.global-to-local, align 1
  %v7_f274 = icmp eq i32 %v1_e81c, 104
  %.2017 = zext i1 %v7_f274 to i32
  %v2_f280 = and i32 %v0_f280, %.2017
  %v4_f280 = icmp eq i32 %v2_f280, 0
  store i1 %v4_f280, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f280, label %dec_label_pc_f294, label %dec_label_pc_f28c

dec_label_pc_f28c:                                ; preds = %dec_label_pc_f270
  store i1 %v2_ebdc, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ebdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_eeb4, label %dec_label_pc_e818, label %dec_label_pc_f294

dec_label_pc_f294:                                ; preds = %dec_label_pc_f28c, %dec_label_pc_f270
  %v7_f294 = icmp eq i32 %v1_e81c, 188
  %.2018 = zext i1 %v7_f294 to i32
  store i32 %.2018, i32* %r4.global-to-local, align 4
  %v2_f2a0 = icmp ugt i32 %v1_e830, 165
  store i1 %v2_f2a0, i1* %cpsr_c.global-to-local, align 1
  %v7_f2a0 = icmp eq i32 %v1_e830, 166
  store i1 %v7_f2a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f2a0, label %bb1597, label %dec_label_pc_f2b0

bb1597:                                           ; preds = %dec_label_pc_f294
  %v2_f294 = icmp ugt i32 %v1_e81c, 187
  store i1 %v2_f294, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f294, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f294, label %dec_label_pc_e818, label %dec_label_pc_f2b0

dec_label_pc_f2b0:                                ; preds = %dec_label_pc_f294, %bb1597
  store i32 %.2018, i32* %r3.global-to-local, align 4
  %v2_f2b4 = icmp ugt i32 %v1_e830, 225
  store i1 %v2_f2b4, i1* %cpsr_c.global-to-local, align 1
  %v7_f2b4 = icmp eq i32 %v1_e830, 226
  store i1 %v7_f2b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f2b4, label %.thread220, label %.thread221

.thread221:                                       ; preds = %dec_label_pc_f2b0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f2c8

.thread220:                                       ; preds = %dec_label_pc_f2b0
  store i32 %.2018, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f2c0 = icmp eq i1 %v7_f294, false
  store i1 %v2_f2c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f2c0, label %dec_label_pc_f2c8, label %dec_label_pc_e818

dec_label_pc_f2c8:                                ; preds = %.thread221, %.thread220
  %v2_f2c8 = icmp ugt i32 %v1_e830, 202
  store i1 %v2_f2c8, i1* %cpsr_c.global-to-local, align 1
  %v7_f2c8 = icmp eq i32 %v1_e830, 203
  store i1 %v7_f2c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f2c8, label %.thread224, label %.thread225

.thread225:                                       ; preds = %dec_label_pc_f2c8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f2dc

.thread224:                                       ; preds = %dec_label_pc_f2c8
  store i32 %.2013, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f2d4 = icmp eq i1 %v7_f0fc, false
  store i1 %v2_f2d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f2d4, label %dec_label_pc_f2dc, label %dec_label_pc_e818

dec_label_pc_f2dc:                                ; preds = %.thread225, %.thread224
  store i32 %.1988, i32* %r3.global-to-local, align 4
  %v2_f2e0 = icmp ugt i32 %v1_e830, 242
  store i1 %v2_f2e0, i1* %cpsr_c.global-to-local, align 1
  %v7_f2e0 = icmp eq i32 %v1_e830, 243
  store i1 %v7_f2e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f2e0, label %.thread228, label %.thread229

.thread229:                                       ; preds = %dec_label_pc_f2dc
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f2f4

.thread228:                                       ; preds = %dec_label_pc_f2dc
  store i32 %.1988, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f2ec = icmp eq i1 %v7_ea88, false
  store i1 %v2_f2ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f2ec, label %dec_label_pc_f2f4, label %dec_label_pc_e818

dec_label_pc_f2f4:                                ; preds = %.thread229, %.thread228
  %v2_f2f8 = icmp ugt i32 %v1_e81c, 44
  store i1 %v2_f2f8, i1* %cpsr_c.global-to-local, align 1
  %v7_f2f8 = icmp eq i32 %v1_e81c, 45
  %.2019 = zext i1 %v7_f2f8 to i32
  %v2_f304 = and i32 %.1997, %.2019
  %v4_f304 = icmp eq i32 %v2_f304, 0
  store i1 %v4_f304, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f304, label %dec_label_pc_f310, label %dec_label_pc_e818

dec_label_pc_f310:                                ; preds = %dec_label_pc_f2f4
  %v7_f310 = icmp eq i32 %v1_e81c, 178
  %.2020 = zext i1 %v7_f310 to i32
  store i32 %.2020, i32* %r3.global-to-local, align 4
  %v2_f31c = icmp ugt i32 %v1_e830, 61
  store i1 %v2_f31c, i1* %cpsr_c.global-to-local, align 1
  %v7_f31c = icmp eq i32 %v1_e830, 62
  %storemerge1255 = zext i1 %v7_f31c to i32
  store i32 %storemerge1255, i32* %r4.global-to-local, align 4
  %v2_f328 = and i32 %storemerge1255, %.2020
  %v4_f328 = icmp eq i32 %v2_f328, 0
  store i1 %v4_f328, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f328, label %dec_label_pc_f338, label %dec_label_pc_e818

dec_label_pc_f338:                                ; preds = %dec_label_pc_f310
  store i32 %.2017, i32* %r3.global-to-local, align 4
  store i1 %v2_f130, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f130, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f130, label %.thread235, label %.thread236

.thread236:                                       ; preds = %dec_label_pc_f338
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f350

.thread235:                                       ; preds = %dec_label_pc_f338
  store i32 %.2017, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f348 = icmp eq i1 %v7_f274, false
  store i1 %v2_f348, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f348, label %dec_label_pc_f350, label %dec_label_pc_e818

dec_label_pc_f350:                                ; preds = %.thread236, %.thread235
  store i32 %.2017, i32* %r3.global-to-local, align 4
  %v2_f354 = icmp ugt i32 %v1_e830, 235
  store i1 %v2_f354, i1* %cpsr_c.global-to-local, align 1
  %v7_f354 = icmp eq i32 %v1_e830, 236
  store i1 %v7_f354, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f354, label %.thread239, label %.thread240

.thread240:                                       ; preds = %dec_label_pc_f350
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f368

.thread239:                                       ; preds = %dec_label_pc_f350
  store i32 %.2017, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f360 = icmp eq i1 %v7_f274, false
  store i1 %v2_f360, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f360, label %dec_label_pc_f368, label %dec_label_pc_e818

dec_label_pc_f368:                                ; preds = %.thread240, %.thread239
  %v7_f368 = icmp eq i32 %v1_e81c, 107
  %.2021 = zext i1 %v7_f368 to i32
  %v2_f374 = icmp ugt i32 %v1_e830, 169
  store i1 %v2_f374, i1* %cpsr_c.global-to-local, align 1
  %v7_f374 = icmp eq i32 %v1_e830, 170
  %storemerge1257 = zext i1 %v7_f374 to i32
  %v2_f380 = and i32 %storemerge1257, %.2021
  %v4_f380 = icmp eq i32 %v2_f380, 0
  store i1 %v4_f380, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f380, label %dec_label_pc_f390, label %dec_label_pc_e818

dec_label_pc_f390:                                ; preds = %dec_label_pc_f368
  store i32 %.2008, i32* %r3.global-to-local, align 4
  store i1 %v2_efb4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_efb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_efb4, label %.thread245, label %.thread246

.thread246:                                       ; preds = %dec_label_pc_f390
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f3a8

.thread245:                                       ; preds = %dec_label_pc_f390
  store i32 %.2008, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f3a0 = icmp eq i1 %v7_ee70, false
  store i1 %v2_f3a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f3a0, label %dec_label_pc_f3a8, label %dec_label_pc_e818

dec_label_pc_f3a8:                                ; preds = %.thread246, %.thread245
  store i32 %.1992, i32* %r3.global-to-local, align 4
  store i32 %.2008, i32* %r4.global-to-local, align 4
  %v2_f3b0 = and i32 %.1992, %.2008
  %v4_f3b0 = icmp eq i32 %v2_f3b0, 0
  store i1 %v4_f3b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f3b0, label %dec_label_pc_f3b8, label %dec_label_pc_e818

dec_label_pc_f3b8:                                ; preds = %dec_label_pc_f3a8
  %v2_f3c0 = and i32 %.1994, %.2009
  %v4_f3c0 = icmp eq i32 %v2_f3c0, 0
  store i1 %v4_f3c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f3c0, label %dec_label_pc_f3c8, label %dec_label_pc_e818

dec_label_pc_f3c8:                                ; preds = %dec_label_pc_f3b8
  %v2_f3c8 = icmp ugt i32 %v1_e830, 184
  store i1 %v2_f3c8, i1* %cpsr_c.global-to-local, align 1
  %v7_f3c8 = icmp eq i32 %v1_e830, 185
  store i1 %v7_f3c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f3c8, label %.thread249, label %.thread250

.thread250:                                       ; preds = %dec_label_pc_f3c8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f3f0

.thread249:                                       ; preds = %dec_label_pc_f3c8
  store i32 %.1976, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f3d4 = icmp eq i1 %v7_e8d8, false
  store i1 %v2_f3d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f3d4, label %dec_label_pc_f3f0, label %dec_label_pc_f3dc

dec_label_pc_f3dc:                                ; preds = %.thread249
  %v2_f3dc = icmp ugt i32 %v1_e834, 189
  store i1 %v2_f3dc, i1* %cpsr_c.global-to-local, align 1
  %v7_f3dc = icmp eq i32 %v1_e834, 190
  store i1 %v7_f3dc, i1* %cpsr_z.global-to-local, align 1
  %v2_f3e0 = xor i1 %v7_f3dc, true
  %v3_f3e0 = and i1 %v2_f3dc, %v2_f3e0
  br i1 %v3_f3e0, label %bb1608, label %bb1609

bb1608:                                           ; preds = %dec_label_pc_f3dc
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1609

bb1609:                                           ; preds = %dec_label_pc_f3dc, %bb1608
  %v0_f3e8895 = phi i32 [ %.1976, %dec_label_pc_f3dc ], [ 0, %bb1608 ]
  %v2_f3e4 = xor i1 %v2_f3dc, true
  %v3_f3e4 = or i1 %v7_f3dc, %v2_f3e4
  br i1 %v3_f3e4, label %bb1610, label %bb1611

bb1610:                                           ; preds = %bb1609
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1611

bb1611:                                           ; preds = %bb1609, %bb1610
  %v0_f3e8 = phi i32 [ %v0_f3e8895, %bb1609 ], [ 1, %bb1610 ]
  %v2_f3e8 = and i32 %v3_e824, 64
  %v3_f3e8 = icmp ne i32 %v2_f3e8, 0
  store i1 %v3_f3e8, i1* %cpsr_c.global-to-local, align 1
  %v4_f3e8 = udiv i32 %v1_e834, 128
  %v5_f3e8 = and i32 %v0_f3e8, %v4_f3e8
  store i32 %v5_f3e8, i32* %r3.global-to-local, align 4
  %v6_f3e8 = icmp eq i32 %v5_f3e8, 0
  store i1 %v6_f3e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_f3e8, label %dec_label_pc_f3f0, label %dec_label_pc_e818

dec_label_pc_f3f0:                                ; preds = %.thread250, %bb1611, %.thread249
  %v2_f3f0 = icmp ugt i32 %v1_e830, 46
  store i1 %v2_f3f0, i1* %cpsr_c.global-to-local, align 1
  %v7_f3f0 = icmp eq i32 %v1_e830, 47
  %.2022 = zext i1 %v7_f3f0 to i32
  %v2_f3fc = and i32 %.2022, %.2015
  %v4_f3fc = icmp eq i32 %v2_f3fc, 0
  store i1 %v4_f3fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f3fc, label %dec_label_pc_f420, label %dec_label_pc_f404

dec_label_pc_f404:                                ; preds = %dec_label_pc_f3f0
  %v2_f404 = icmp ugt i32 %v1_e834, 8
  store i1 %v2_f404, i1* %cpsr_c.global-to-local, align 1
  %v7_f404 = icmp eq i32 %v1_e834, 9
  store i1 %v7_f404, i1* %cpsr_z.global-to-local, align 1
  %v2_f408 = xor i1 %v2_f404, true
  %v3_f408 = or i1 %v7_f404, %v2_f408
  br i1 %v3_f408, label %bb1614, label %bb1615

bb1614:                                           ; preds = %dec_label_pc_f404
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1615

bb1615:                                           ; preds = %dec_label_pc_f404, %bb1614
  %v2_f40c = xor i1 %v7_f404, true
  %v3_f40c = and i1 %v2_f404, %v2_f40c
  br i1 %v3_f40c, label %bb1616, label %bb1617

bb1616:                                           ; preds = %bb1615
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1617

bb1617:                                           ; preds = %bb1615, %bb1616
  %v0_f418.pr = phi i32 [ 0, %bb1615 ], [ 1, %bb1616 ]
  %v2_f410 = icmp ugt i32 %v1_e834, 9
  store i1 %v2_f410, i1* %cpsr_c.global-to-local, align 1
  %v7_f410 = icmp eq i32 %v1_e834, 10
  store i1 %v7_f410, i1* %cpsr_z.global-to-local, align 1
  %v2_f414 = xor i1 %v7_f410, true
  %v3_f414 = and i1 %v2_f410, %v2_f414
  br i1 %v3_f414, label %.thread255, label %bb1618

.thread255:                                       ; preds = %bb1617
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f420

bb1618:                                           ; preds = %bb1617
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f418 = icmp eq i32 %v0_f418.pr, 0
  store i1 %v2_f418, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f418, label %dec_label_pc_f420, label %dec_label_pc_e818

dec_label_pc_f420:                                ; preds = %.thread255, %bb1618, %dec_label_pc_f3f0
  %v2_f420 = icmp ugt i32 %v1_e81c, 173
  store i1 %v2_f420, i1* %cpsr_c.global-to-local, align 1
  %v7_f420 = icmp eq i32 %v1_e81c, 174
  store i1 %v7_f420, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f420, label %bb1619, label %dec_label_pc_f444

bb1619:                                           ; preds = %dec_label_pc_f420
  %v3_f424 = icmp ugt i32 %v1_e830, 137
  store i1 %v3_f424, i1* %cpsr_c.global-to-local, align 1
  %v8_f424 = icmp eq i32 %v1_e830, 138
  store i1 %v8_f424, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f424, label %dec_label_pc_f42c, label %dec_label_pc_f444

dec_label_pc_f42c:                                ; preds = %bb1619
  store i32 %v1_e834, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f42c = icmp eq i32 %v1_e834, 0
  store i1 %v2_f42c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f42c, label %bb1621, label %bb1620

bb1620:                                           ; preds = %dec_label_pc_f42c
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1621

bb1621:                                           ; preds = %dec_label_pc_f42c, %bb1620
  %v0_f43c.pr = phi i32 [ 0, %dec_label_pc_f42c ], [ 1, %bb1620 ]
  %v2_f434 = icmp ugt i32 %v1_e834, 125
  store i1 %v2_f434, i1* %cpsr_c.global-to-local, align 1
  %v7_f434 = icmp eq i32 %v1_e834, 126
  store i1 %v7_f434, i1* %cpsr_z.global-to-local, align 1
  %v2_f438 = xor i1 %v7_f434, true
  %v3_f438 = and i1 %v2_f434, %v2_f438
  br i1 %v3_f438, label %.thread260, label %bb1622

.thread260:                                       ; preds = %bb1621
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f444

bb1622:                                           ; preds = %bb1621
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f43c = icmp eq i32 %v0_f43c.pr, 0
  store i1 %v2_f43c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f43c, label %dec_label_pc_f444, label %dec_label_pc_e818

dec_label_pc_f444:                                ; preds = %dec_label_pc_f420, %.thread260, %bb1622, %bb1619
  %v2_f444 = icmp ugt i32 %v1_e830, 240
  store i1 %v2_f444, i1* %cpsr_c.global-to-local, align 1
  %v7_f444 = icmp eq i32 %v1_e830, 241
  store i1 %v7_f444, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f444, label %.thread263, label %.thread264

.thread264:                                       ; preds = %dec_label_pc_f444
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f468

.thread263:                                       ; preds = %dec_label_pc_f444
  store i32 %.1975, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f450 = icmp eq i1 %v7_e8c0, false
  store i1 %v2_f450, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f450, label %dec_label_pc_f468, label %dec_label_pc_f458

dec_label_pc_f458:                                ; preds = %.thread263
  %v1_f458 = add nsw i32 %v1_e834, -255
  store i32 %v1_f458, i32* %r3.global-to-local, align 4
  %v2_f458 = icmp eq i32 %v1_e834, 255
  store i1 %v2_f458, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_f458, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f458, label %bb1624, label %bb1623

bb1623:                                           ; preds = %dec_label_pc_f458
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1624

bb1624:                                           ; preds = %dec_label_pc_f458, %bb1623
  %v0_f460 = phi i32 [ %v1_f458, %dec_label_pc_f458 ], [ 1, %bb1623 ]
  %v2_f460 = and i32 %v3_e824, 64
  %v3_f460 = icmp ne i32 %v2_f460, 0
  store i1 %v3_f460, i1* %cpsr_c.global-to-local, align 1
  %v4_f460 = udiv i32 %v1_e834, 128
  %v5_f460 = and i32 %v0_f460, %v4_f460
  store i32 %v5_f460, i32* %r3.global-to-local, align 4
  %v6_f460 = icmp eq i32 %v5_f460, 0
  store i1 %v6_f460, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_f460, label %dec_label_pc_f468, label %dec_label_pc_e818

dec_label_pc_f468:                                ; preds = %.thread264, %bb1624, %.thread263
  store i32 %.2004, i32* %r3.global-to-local, align 4
  %v2_f46c = icmp ugt i32 %v1_e830, 198
  store i1 %v2_f46c, i1* %cpsr_c.global-to-local, align 1
  %v7_f46c = icmp eq i32 %v1_e830, 199
  store i1 %v7_f46c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f46c, label %.thread267, label %.thread268

.thread268:                                       ; preds = %dec_label_pc_f468
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f49c

.thread267:                                       ; preds = %dec_label_pc_f468
  store i32 %.2004, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f478 = icmp eq i1 %v7_ed1c, false
  store i1 %v2_f478, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f478, label %dec_label_pc_f49c, label %dec_label_pc_f480

dec_label_pc_f480:                                ; preds = %.thread267
  %v2_f480 = icmp ugt i32 %v1_e834, 62
  store i1 %v2_f480, i1* %cpsr_c.global-to-local, align 1
  %v7_f480 = icmp eq i32 %v1_e834, 63
  store i1 %v7_f480, i1* %cpsr_z.global-to-local, align 1
  %v2_f484 = xor i1 %v2_f480, true
  %v3_f484 = or i1 %v7_f480, %v2_f484
  br i1 %v3_f484, label %bb1625, label %bb1626

bb1625:                                           ; preds = %dec_label_pc_f480
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1626

bb1626:                                           ; preds = %dec_label_pc_f480, %bb1625
  %v0_f494.pr905 = phi i32 [ %.2004, %dec_label_pc_f480 ], [ 0, %bb1625 ]
  %v2_f488 = xor i1 %v7_f480, true
  %v3_f488 = and i1 %v2_f480, %v2_f488
  br i1 %v3_f488, label %bb1627, label %bb1628

bb1627:                                           ; preds = %bb1626
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1628

bb1628:                                           ; preds = %bb1626, %bb1627
  %v0_f494.pr = phi i32 [ %v0_f494.pr905, %bb1626 ], [ 1, %bb1627 ]
  %v2_f48c = icmp ugt i32 %v1_e834, 125
  store i1 %v2_f48c, i1* %cpsr_c.global-to-local, align 1
  %v7_f48c = icmp eq i32 %v1_e834, 126
  store i1 %v7_f48c, i1* %cpsr_z.global-to-local, align 1
  %v2_f490 = xor i1 %v7_f48c, true
  %v3_f490 = and i1 %v2_f48c, %v2_f490
  br i1 %v3_f490, label %.thread272, label %bb1629

.thread272:                                       ; preds = %bb1628
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f49c

bb1629:                                           ; preds = %bb1628
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f494 = icmp eq i32 %v0_f494.pr, 0
  store i1 %v2_f494, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f494, label %dec_label_pc_f49c, label %dec_label_pc_e818

dec_label_pc_f49c:                                ; preds = %.thread272, %.thread268, %bb1629, %.thread267
  store i32 %.2004, i32* %r3.global-to-local, align 4
  %v2_f4a0 = icmp ugt i32 %v1_e830, 210
  store i1 %v2_f4a0, i1* %cpsr_c.global-to-local, align 1
  %v7_f4a0 = icmp eq i32 %v1_e830, 211
  store i1 %v7_f4a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f4a0, label %.thread275, label %.thread276

.thread276:                                       ; preds = %dec_label_pc_f49c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f4d0

.thread275:                                       ; preds = %dec_label_pc_f49c
  store i32 %.2004, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f4ac = icmp eq i1 %v7_ed1c, false
  store i1 %v2_f4ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f4ac, label %dec_label_pc_f4d0, label %dec_label_pc_f4b4

dec_label_pc_f4b4:                                ; preds = %.thread275
  %v2_f4b4 = icmp ugt i32 %v1_e834, 94
  store i1 %v2_f4b4, i1* %cpsr_c.global-to-local, align 1
  %v7_f4b4 = icmp eq i32 %v1_e834, 95
  store i1 %v7_f4b4, i1* %cpsr_z.global-to-local, align 1
  %v2_f4b8 = xor i1 %v2_f4b4, true
  %v3_f4b8 = or i1 %v7_f4b4, %v2_f4b8
  br i1 %v3_f4b8, label %bb1630, label %bb1631

bb1630:                                           ; preds = %dec_label_pc_f4b4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1631

bb1631:                                           ; preds = %dec_label_pc_f4b4, %bb1630
  %v0_f4c8.pr908 = phi i32 [ %.2004, %dec_label_pc_f4b4 ], [ 0, %bb1630 ]
  %v2_f4bc = xor i1 %v7_f4b4, true
  %v3_f4bc = and i1 %v2_f4b4, %v2_f4bc
  br i1 %v3_f4bc, label %bb1632, label %bb1633

bb1632:                                           ; preds = %bb1631
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1633

bb1633:                                           ; preds = %bb1631, %bb1632
  %v0_f4c8.pr = phi i32 [ %v0_f4c8.pr908, %bb1631 ], [ 1, %bb1632 ]
  %v2_f4c0 = icmp ugt i32 %v1_e834, 125
  store i1 %v2_f4c0, i1* %cpsr_c.global-to-local, align 1
  %v7_f4c0 = icmp eq i32 %v1_e834, 126
  store i1 %v7_f4c0, i1* %cpsr_z.global-to-local, align 1
  %v2_f4c4 = xor i1 %v7_f4c0, true
  %v3_f4c4 = and i1 %v2_f4c0, %v2_f4c4
  br i1 %v3_f4c4, label %.thread280, label %bb1634

.thread280:                                       ; preds = %bb1633
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f4d0

bb1634:                                           ; preds = %bb1633
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f4c8 = icmp eq i32 %v0_f4c8.pr, 0
  store i1 %v2_f4c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f4c8, label %dec_label_pc_f4d0, label %dec_label_pc_e818

dec_label_pc_f4d0:                                ; preds = %.thread280, %.thread276, %bb1634, %.thread275
  store i32 %.1996, i32* %r3.global-to-local, align 4
  %v2_f4d4 = and i32 %.1979, %.1996
  %v4_f4d4 = icmp eq i32 %v2_f4d4, 0
  store i1 %v4_f4d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f4d4, label %dec_label_pc_f4e8, label %dec_label_pc_f4dc

dec_label_pc_f4dc:                                ; preds = %dec_label_pc_f4d0
  %v2_f4dc = icmp eq i32 %v1_e834, 255
  store i1 %v2_f4dc, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_f4dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f4dc, label %dec_label_pc_f4e8, label %bb1635

bb1635:                                           ; preds = %dec_label_pc_f4dc
  %v3_f4e0 = icmp ugt i32 %v1_e834, 190
  store i1 %v3_f4e0, i1* %cpsr_c.global-to-local, align 1
  %v8_f4e0 = icmp eq i32 %v1_e834, 191
  store i1 %v8_f4e0, i1* %cpsr_z.global-to-local, align 1
  %v2_f4e4 = xor i1 %v8_f4e0, true
  %v3_f4e4 = and i1 %v3_f4e0, %v2_f4e4
  br i1 %v3_f4e4, label %dec_label_pc_e818, label %dec_label_pc_f4e8

dec_label_pc_f4e8:                                ; preds = %dec_label_pc_f4dc, %bb1635, %dec_label_pc_f4d0
  %v7_f4e8 = icmp eq i32 %v1_e81c, 37
  %.2023 = zext i1 %v7_f4e8 to i32
  %v2_f4f4 = icmp ugt i32 %v1_e830, 138
  store i1 %v2_f4f4, i1* %cpsr_c.global-to-local, align 1
  %v7_f4f4 = icmp eq i32 %v1_e830, 139
  store i1 %v7_f4f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f4f4, label %bb1638, label %dec_label_pc_f518

bb1638:                                           ; preds = %dec_label_pc_f4e8
  %v2_f4e8 = icmp ugt i32 %v1_e81c, 36
  store i1 %v2_f4e8, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f4e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f4e8, label %dec_label_pc_f500, label %dec_label_pc_f518

dec_label_pc_f500:                                ; preds = %bb1638
  store i32 %v1_e834, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f500 = icmp eq i32 %v1_e834, 0
  store i1 %v2_f500, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f500, label %bb1640, label %bb1639

bb1639:                                           ; preds = %dec_label_pc_f500
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1640

bb1640:                                           ; preds = %dec_label_pc_f500, %bb1639
  %v0_f510.pr = phi i32 [ 0, %dec_label_pc_f500 ], [ 1, %bb1639 ]
  %v2_f508 = icmp ugt i32 %v1_e834, 29
  store i1 %v2_f508, i1* %cpsr_c.global-to-local, align 1
  %v7_f508 = icmp eq i32 %v1_e834, 30
  store i1 %v7_f508, i1* %cpsr_z.global-to-local, align 1
  %v2_f50c = xor i1 %v7_f508, true
  %v3_f50c = and i1 %v2_f508, %v2_f50c
  br i1 %v3_f50c, label %.thread286, label %bb1641

.thread286:                                       ; preds = %bb1640
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f518

bb1641:                                           ; preds = %bb1640
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f510 = icmp eq i32 %v0_f510.pr, 0
  store i1 %v2_f510, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f510, label %dec_label_pc_f518, label %dec_label_pc_e818

dec_label_pc_f518:                                ; preds = %dec_label_pc_f4e8, %.thread286, %bb1641, %bb1638
  %v0_f544.pr914 = phi i32 [ %.1996, %dec_label_pc_f4e8 ], [ 0, %.thread286 ], [ 0, %bb1641 ], [ %.1996, %bb1638 ]
  %v7_f518 = icmp eq i32 %v1_e81c, 67
  %.2024 = zext i1 %v7_f518 to i32
  %v2_f524 = icmp ugt i32 %v1_e830, 206
  store i1 %v2_f524, i1* %cpsr_c.global-to-local, align 1
  %v7_f524 = icmp eq i32 %v1_e830, 207
  store i1 %v7_f524, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f524, label %bb1644, label %dec_label_pc_f54c

bb1644:                                           ; preds = %dec_label_pc_f518
  %v2_f518 = icmp ugt i32 %v1_e81c, 66
  store i1 %v2_f518, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f518, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f518, label %dec_label_pc_f530, label %dec_label_pc_f54c

dec_label_pc_f530:                                ; preds = %bb1644
  %v2_f530 = icmp ugt i32 %v1_e834, 62
  store i1 %v2_f530, i1* %cpsr_c.global-to-local, align 1
  %v7_f530 = icmp eq i32 %v1_e834, 63
  store i1 %v7_f530, i1* %cpsr_z.global-to-local, align 1
  %v2_f534 = xor i1 %v2_f530, true
  %v3_f534 = or i1 %v7_f530, %v2_f534
  br i1 %v3_f534, label %bb1645, label %bb1646

bb1645:                                           ; preds = %dec_label_pc_f530
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1646

bb1646:                                           ; preds = %dec_label_pc_f530, %bb1645
  %v0_f544.pr913 = phi i32 [ %v0_f544.pr914, %dec_label_pc_f530 ], [ 0, %bb1645 ]
  %v2_f538 = xor i1 %v7_f530, true
  %v3_f538 = and i1 %v2_f530, %v2_f538
  br i1 %v3_f538, label %bb1647, label %bb1648

bb1647:                                           ; preds = %bb1646
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1648

bb1648:                                           ; preds = %bb1646, %bb1647
  %v0_f544.pr = phi i32 [ %v0_f544.pr913, %bb1646 ], [ 1, %bb1647 ]
  %v2_f53c = icmp ugt i32 %v1_e834, 93
  store i1 %v2_f53c, i1* %cpsr_c.global-to-local, align 1
  %v7_f53c = icmp eq i32 %v1_e834, 94
  store i1 %v7_f53c, i1* %cpsr_z.global-to-local, align 1
  %v2_f540 = xor i1 %v7_f53c, true
  %v3_f540 = and i1 %v2_f53c, %v2_f540
  br i1 %v3_f540, label %.thread292, label %bb1649

.thread292:                                       ; preds = %bb1648
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f54c

bb1649:                                           ; preds = %bb1648
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f544 = icmp eq i32 %v0_f544.pr, 0
  store i1 %v2_f544, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f544, label %dec_label_pc_f54c, label %dec_label_pc_e818

dec_label_pc_f54c:                                ; preds = %dec_label_pc_f518, %.thread292, %bb1649, %bb1644
  %v2_f54c = icmp ugt i32 %v1_e830, 204
  store i1 %v2_f54c, i1* %cpsr_c.global-to-local, align 1
  %v7_f54c = icmp eq i32 %v1_e830, 205
  store i1 %v7_f54c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f54c, label %.thread295, label %.thread296

.thread296:                                       ; preds = %dec_label_pc_f54c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f574

.thread295:                                       ; preds = %dec_label_pc_f54c
  store i32 %.2024, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f558 = icmp eq i1 %v7_f518, false
  store i1 %v2_f558, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f558, label %dec_label_pc_f574, label %dec_label_pc_f560

dec_label_pc_f560:                                ; preds = %.thread295
  %v2_f560 = icmp ugt i32 %v1_e834, 189
  store i1 %v2_f560, i1* %cpsr_c.global-to-local, align 1
  %v7_f560 = icmp eq i32 %v1_e834, 190
  store i1 %v7_f560, i1* %cpsr_z.global-to-local, align 1
  %v2_f564 = xor i1 %v7_f560, true
  %v3_f564 = and i1 %v2_f560, %v2_f564
  br i1 %v3_f564, label %bb1650, label %bb1651

bb1650:                                           ; preds = %dec_label_pc_f560
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1651

bb1651:                                           ; preds = %dec_label_pc_f560, %bb1650
  %v0_f56c917 = phi i32 [ %.2024, %dec_label_pc_f560 ], [ 0, %bb1650 ]
  %v2_f568 = xor i1 %v2_f560, true
  %v3_f568 = or i1 %v7_f560, %v2_f568
  br i1 %v3_f568, label %bb1652, label %bb1653

bb1652:                                           ; preds = %bb1651
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1653

bb1653:                                           ; preds = %bb1651, %bb1652
  %v0_f56c = phi i32 [ %v0_f56c917, %bb1651 ], [ 1, %bb1652 ]
  %v2_f56c = and i32 %v3_e824, 64
  %v3_f56c = icmp ne i32 %v2_f56c, 0
  store i1 %v3_f56c, i1* %cpsr_c.global-to-local, align 1
  %v4_f56c = udiv i32 %v1_e834, 128
  %v5_f56c = and i32 %v0_f56c, %v4_f56c
  store i32 %v5_f56c, i32* %r3.global-to-local, align 4
  %v6_f56c = icmp eq i32 %v5_f56c, 0
  store i1 %v6_f56c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_f56c, label %dec_label_pc_f574, label %dec_label_pc_e818

dec_label_pc_f574:                                ; preds = %.thread296, %bb1653, %.thread295
  store i32 %.1999, i32* %r3.global-to-local, align 4
  %v2_f578 = icmp ugt i32 %v1_e830, 239
  store i1 %v2_f578, i1* %cpsr_c.global-to-local, align 1
  %v7_f578 = icmp eq i32 %v1_e830, 240
  store i1 %v7_f578, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f578, label %.thread299, label %.thread300

.thread300:                                       ; preds = %dec_label_pc_f574
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f5a0

.thread299:                                       ; preds = %dec_label_pc_f574
  store i32 %.1999, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f584 = icmp eq i1 %v7_ec28, false
  store i1 %v2_f584, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f584, label %dec_label_pc_f5a0, label %dec_label_pc_f58c

dec_label_pc_f58c:                                ; preds = %.thread299
  %v2_f58c = icmp ugt i32 %v1_e834, 141
  store i1 %v2_f58c, i1* %cpsr_c.global-to-local, align 1
  %v7_f58c = icmp eq i32 %v1_e834, 142
  store i1 %v7_f58c, i1* %cpsr_z.global-to-local, align 1
  %v2_f590 = xor i1 %v7_f58c, true
  %v3_f590 = and i1 %v2_f58c, %v2_f590
  br i1 %v3_f590, label %bb1654, label %bb1655

bb1654:                                           ; preds = %dec_label_pc_f58c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1655

bb1655:                                           ; preds = %dec_label_pc_f58c, %bb1654
  %v0_f598920 = phi i32 [ %.1999, %dec_label_pc_f58c ], [ 0, %bb1654 ]
  %v2_f594 = xor i1 %v2_f58c, true
  %v3_f594 = or i1 %v7_f58c, %v2_f594
  br i1 %v3_f594, label %bb1656, label %bb1657

bb1656:                                           ; preds = %bb1655
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1657

bb1657:                                           ; preds = %bb1655, %bb1656
  %v0_f598 = phi i32 [ %v0_f598920, %bb1655 ], [ 1, %bb1656 ]
  %v2_f598 = and i32 %v3_e824, 64
  %v3_f598 = icmp ne i32 %v2_f598, 0
  store i1 %v3_f598, i1* %cpsr_c.global-to-local, align 1
  %v4_f598 = udiv i32 %v1_e834, 128
  %v5_f598 = and i32 %v0_f598, %v4_f598
  store i32 %v5_f598, i32* %r3.global-to-local, align 4
  %v6_f598 = icmp eq i32 %v5_f598, 0
  store i1 %v6_f598, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_f598, label %dec_label_pc_f5a0, label %dec_label_pc_e818

dec_label_pc_f5a0:                                ; preds = %.thread300, %bb1657, %.thread299
  store i32 %.1984, i32* %r3.global-to-local, align 4
  %v2_f5a4 = icmp ugt i32 %v1_e81c, 81
  store i1 %v2_f5a4, i1* %cpsr_c.global-to-local, align 1
  %v7_f5a4 = icmp eq i32 %v1_e81c, 82
  store i1 %v7_f5a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f5a4, label %.thread303, label %.thread304

.thread304:                                       ; preds = %dec_label_pc_f5a0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f5d0

.thread303:                                       ; preds = %dec_label_pc_f5a0
  store i32 %.1984, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f5b0 = icmp eq i1 %v7_e9f0, false
  store i1 %v2_f5b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f5b0, label %dec_label_pc_f5d0, label %dec_label_pc_f5b8

dec_label_pc_f5b8:                                ; preds = %.thread303
  store i32 %v1_e834, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f5b8 = icmp eq i32 %v1_e834, 0
  store i1 %v2_f5b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f5b8, label %bb1659, label %bb1658

bb1658:                                           ; preds = %dec_label_pc_f5b8
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1659

bb1659:                                           ; preds = %dec_label_pc_f5b8, %bb1658
  %v0_f5c8.pr = phi i32 [ 0, %dec_label_pc_f5b8 ], [ 1, %bb1658 ]
  %v2_f5c0 = icmp ugt i32 %v1_e834, 13
  store i1 %v2_f5c0, i1* %cpsr_c.global-to-local, align 1
  %v7_f5c0 = icmp eq i32 %v1_e834, 14
  store i1 %v7_f5c0, i1* %cpsr_z.global-to-local, align 1
  %v2_f5c4 = xor i1 %v7_f5c0, true
  %v3_f5c4 = and i1 %v2_f5c0, %v2_f5c4
  br i1 %v3_f5c4, label %.thread308, label %bb1660

.thread308:                                       ; preds = %bb1659
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f5d0

bb1660:                                           ; preds = %bb1659
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f5c8 = icmp eq i32 %v0_f5c8.pr, 0
  store i1 %v2_f5c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f5c8, label %dec_label_pc_f5d0, label %dec_label_pc_e818

dec_label_pc_f5d0:                                ; preds = %.thread308, %.thread304, %bb1660, %.thread303
  store i32 %.1993, i32* %r3.global-to-local, align 4
  %v2_f5d4 = icmp ugt i32 %v1_e81c, 94
  store i1 %v2_f5d4, i1* %cpsr_c.global-to-local, align 1
  %v7_f5d4 = icmp eq i32 %v1_e81c, 95
  store i1 %v7_f5d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f5d4, label %.thread311, label %.thread312

.thread312:                                       ; preds = %dec_label_pc_f5d0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f604

.thread311:                                       ; preds = %dec_label_pc_f5d0
  store i32 %.1993, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f5e0 = icmp eq i1 %v7_eb6c, false
  store i1 %v2_f5e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f5e0, label %dec_label_pc_f604, label %dec_label_pc_f5e8

dec_label_pc_f5e8:                                ; preds = %.thread311
  %v2_f5e8 = icmp ugt i32 %v1_e834, 6
  store i1 %v2_f5e8, i1* %cpsr_c.global-to-local, align 1
  %v7_f5e8 = icmp eq i32 %v1_e834, 7
  store i1 %v7_f5e8, i1* %cpsr_z.global-to-local, align 1
  %v2_f5ec = xor i1 %v2_f5e8, true
  %v3_f5ec = or i1 %v7_f5e8, %v2_f5ec
  br i1 %v3_f5ec, label %bb1661, label %bb1662

bb1661:                                           ; preds = %dec_label_pc_f5e8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1662

bb1662:                                           ; preds = %dec_label_pc_f5e8, %bb1661
  %v0_f5fc.pr925 = phi i32 [ %.1993, %dec_label_pc_f5e8 ], [ 0, %bb1661 ]
  %v2_f5f0 = xor i1 %v7_f5e8, true
  %v3_f5f0 = and i1 %v2_f5e8, %v2_f5f0
  br i1 %v3_f5f0, label %bb1663, label %bb1664

bb1663:                                           ; preds = %bb1662
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1664

bb1664:                                           ; preds = %bb1662, %bb1663
  %v0_f5fc.pr = phi i32 [ %v0_f5fc.pr925, %bb1662 ], [ 1, %bb1663 ]
  %v2_f5f4 = icmp ugt i32 %v1_e834, 61
  store i1 %v2_f5f4, i1* %cpsr_c.global-to-local, align 1
  %v7_f5f4 = icmp eq i32 %v1_e834, 62
  store i1 %v7_f5f4, i1* %cpsr_z.global-to-local, align 1
  %v2_f5f8 = xor i1 %v7_f5f4, true
  %v3_f5f8 = and i1 %v2_f5f4, %v2_f5f8
  br i1 %v3_f5f8, label %.thread316, label %bb1665

.thread316:                                       ; preds = %bb1664
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f604

bb1665:                                           ; preds = %bb1664
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f5fc = icmp eq i32 %v0_f5fc.pr, 0
  store i1 %v2_f5fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f5fc, label %dec_label_pc_f604, label %dec_label_pc_e818

dec_label_pc_f604:                                ; preds = %.thread316, %.thread312, %bb1665, %.thread311
  store i1 %v2_efd0, i1* %cpsr_c.global-to-local, align 1
  %.2025 = zext i1 %v7_efd0 to i32
  store i32 %.2025, i32* %r4.global-to-local, align 4
  %v2_f614 = and i32 %.2025, %.2001
  %v4_f614 = icmp eq i32 %v2_f614, 0
  store i1 %v4_f614, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f614, label %dec_label_pc_f638, label %dec_label_pc_f61c

dec_label_pc_f61c:                                ; preds = %dec_label_pc_f604
  %v2_f61c = icmp ugt i32 %v1_e834, 30
  store i1 %v2_f61c, i1* %cpsr_c.global-to-local, align 1
  %v7_f61c = icmp eq i32 %v1_e834, 31
  store i1 %v7_f61c, i1* %cpsr_z.global-to-local, align 1
  %v2_f620 = xor i1 %v2_f61c, true
  %v3_f620 = or i1 %v7_f61c, %v2_f620
  br i1 %v3_f620, label %bb1668, label %bb1669

bb1668:                                           ; preds = %dec_label_pc_f61c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1669

bb1669:                                           ; preds = %dec_label_pc_f61c, %bb1668
  %v2_f624 = xor i1 %v7_f61c, true
  %v3_f624 = and i1 %v2_f61c, %v2_f624
  br i1 %v3_f624, label %bb1670, label %bb1671

bb1670:                                           ; preds = %bb1669
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1671

bb1671:                                           ; preds = %bb1669, %bb1670
  %v0_f630.pr = phi i32 [ 0, %bb1669 ], [ 1, %bb1670 ]
  %v2_f628 = icmp ugt i32 %v1_e834, 41
  store i1 %v2_f628, i1* %cpsr_c.global-to-local, align 1
  %v7_f628 = icmp eq i32 %v1_e834, 42
  store i1 %v7_f628, i1* %cpsr_z.global-to-local, align 1
  %v2_f62c = xor i1 %v7_f628, true
  %v3_f62c = and i1 %v2_f628, %v2_f62c
  br i1 %v3_f62c, label %.thread321, label %bb1672

.thread321:                                       ; preds = %bb1671
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f638

bb1672:                                           ; preds = %bb1671
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f630 = icmp eq i32 %v0_f630.pr, 0
  store i1 %v2_f630, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f630, label %dec_label_pc_f638, label %dec_label_pc_e818

dec_label_pc_f638:                                ; preds = %.thread321, %bb1672, %dec_label_pc_f604
  %v7_f638 = icmp eq i32 %v1_e81c, 185
  %.2026 = zext i1 %v7_f638 to i32
  %v2_f644 = icmp ugt i32 %v1_e830, 91
  store i1 %v2_f644, i1* %cpsr_c.global-to-local, align 1
  %v7_f644 = icmp eq i32 %v1_e830, 92
  store i1 %v7_f644, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f644, label %bb1675, label %dec_label_pc_f66c

bb1675:                                           ; preds = %dec_label_pc_f638
  %v2_f638 = icmp ugt i32 %v1_e81c, 184
  store i1 %v2_f638, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f638, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f638, label %dec_label_pc_f650, label %dec_label_pc_f66c

dec_label_pc_f650:                                ; preds = %bb1675
  %v2_f650 = icmp ugt i32 %v1_e834, 218
  store i1 %v2_f650, i1* %cpsr_c.global-to-local, align 1
  %v7_f650 = icmp eq i32 %v1_e834, 219
  store i1 %v7_f650, i1* %cpsr_z.global-to-local, align 1
  %v2_f654 = xor i1 %v2_f650, true
  %v3_f654 = or i1 %v7_f650, %v2_f654
  br i1 %v3_f654, label %bb1676, label %bb1677

bb1676:                                           ; preds = %dec_label_pc_f650
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1677

bb1677:                                           ; preds = %dec_label_pc_f650, %bb1676
  %v2_f658 = xor i1 %v7_f650, true
  %v3_f658 = and i1 %v2_f650, %v2_f658
  br i1 %v3_f658, label %bb1678, label %bb1679

bb1678:                                           ; preds = %bb1677
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1679

bb1679:                                           ; preds = %bb1677, %bb1678
  %v0_f664.pr = phi i32 [ 0, %bb1677 ], [ 1, %bb1678 ]
  %v2_f65c = icmp ugt i32 %v1_e834, 221
  store i1 %v2_f65c, i1* %cpsr_c.global-to-local, align 1
  %v7_f65c = icmp eq i32 %v1_e834, 222
  store i1 %v7_f65c, i1* %cpsr_z.global-to-local, align 1
  %v2_f660 = xor i1 %v7_f65c, true
  %v3_f660 = and i1 %v2_f65c, %v2_f660
  br i1 %v3_f660, label %.thread327, label %bb1680

.thread327:                                       ; preds = %bb1679
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f66c

bb1680:                                           ; preds = %bb1679
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f664 = icmp eq i32 %v0_f664.pr, 0
  store i1 %v2_f664, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f664, label %dec_label_pc_f66c, label %dec_label_pc_e818

dec_label_pc_f66c:                                ; preds = %dec_label_pc_f638, %.thread327, %bb1680, %bb1675
  store i32 %.2017, i32* %r3.global-to-local, align 4
  %v2_f670 = icmp ugt i32 %v1_e830, 237
  store i1 %v2_f670, i1* %cpsr_c.global-to-local, align 1
  %v7_f670 = icmp eq i32 %v1_e830, 238
  store i1 %v7_f670, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f670, label %.thread330, label %.thread331

.thread331:                                       ; preds = %dec_label_pc_f66c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f698

.thread330:                                       ; preds = %dec_label_pc_f66c
  store i32 %.2017, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f67c = icmp eq i1 %v7_f274, false
  store i1 %v2_f67c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f67c, label %dec_label_pc_f698, label %dec_label_pc_f684

dec_label_pc_f684:                                ; preds = %.thread330
  %v2_f684 = icmp ugt i32 %v1_e834, 189
  store i1 %v2_f684, i1* %cpsr_c.global-to-local, align 1
  %v7_f684 = icmp eq i32 %v1_e834, 190
  store i1 %v7_f684, i1* %cpsr_z.global-to-local, align 1
  %v2_f688 = xor i1 %v7_f684, true
  %v3_f688 = and i1 %v2_f684, %v2_f688
  br i1 %v3_f688, label %bb1681, label %bb1682

bb1681:                                           ; preds = %dec_label_pc_f684
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1682

bb1682:                                           ; preds = %dec_label_pc_f684, %bb1681
  %v0_f690935 = phi i32 [ %.2017, %dec_label_pc_f684 ], [ 0, %bb1681 ]
  %v2_f68c = xor i1 %v2_f684, true
  %v3_f68c = or i1 %v7_f684, %v2_f68c
  br i1 %v3_f68c, label %bb1683, label %bb1684

bb1683:                                           ; preds = %bb1682
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1684

bb1684:                                           ; preds = %bb1682, %bb1683
  %v0_f690 = phi i32 [ %v0_f690935, %bb1682 ], [ 1, %bb1683 ]
  %v2_f690 = and i32 %v3_e824, 64
  %v3_f690 = icmp ne i32 %v2_f690, 0
  store i1 %v3_f690, i1* %cpsr_c.global-to-local, align 1
  %v4_f690 = udiv i32 %v1_e834, 128
  %v5_f690 = and i32 %v0_f690, %v4_f690
  store i32 %v5_f690, i32* %r3.global-to-local, align 4
  %v6_f690 = icmp eq i32 %v5_f690, 0
  store i1 %v6_f690, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_f690, label %dec_label_pc_f698, label %dec_label_pc_e818

dec_label_pc_f698:                                ; preds = %.thread331, %bb1684, %.thread330
  store i32 %.2000, i32* %r3.global-to-local, align 4
  %v2_f69c = icmp ugt i32 %v1_e830, 221
  store i1 %v2_f69c, i1* %cpsr_c.global-to-local, align 1
  %v7_f69c = icmp eq i32 %v1_e830, 222
  store i1 %v7_f69c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f69c, label %.thread334, label %.thread335

.thread335:                                       ; preds = %dec_label_pc_f698
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f6c8

.thread334:                                       ; preds = %dec_label_pc_f698
  store i32 %.2000, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f6a8 = icmp eq i1 %v7_ec5c, false
  store i1 %v2_f6a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f6a8, label %dec_label_pc_f6c8, label %dec_label_pc_f6b0

dec_label_pc_f6b0:                                ; preds = %.thread334
  store i32 %v1_e834, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f6b0 = icmp eq i32 %v1_e834, 0
  store i1 %v2_f6b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f6b0, label %bb1686, label %bb1685

bb1685:                                           ; preds = %dec_label_pc_f6b0
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1686

bb1686:                                           ; preds = %dec_label_pc_f6b0, %bb1685
  %v0_f6c0.pr = phi i32 [ 0, %dec_label_pc_f6b0 ], [ 1, %bb1685 ]
  %v2_f6b8 = icmp ugt i32 %v1_e834, 29
  store i1 %v2_f6b8, i1* %cpsr_c.global-to-local, align 1
  %v7_f6b8 = icmp eq i32 %v1_e834, 30
  store i1 %v7_f6b8, i1* %cpsr_z.global-to-local, align 1
  %v2_f6bc = xor i1 %v7_f6b8, true
  %v3_f6bc = and i1 %v2_f6b8, %v2_f6bc
  br i1 %v3_f6bc, label %.thread339, label %bb1687

.thread339:                                       ; preds = %bb1686
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f6c8

bb1687:                                           ; preds = %bb1686
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f6c0 = icmp eq i32 %v0_f6c0.pr, 0
  store i1 %v2_f6c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f6c0, label %dec_label_pc_f6c8, label %dec_label_pc_e818

dec_label_pc_f6c8:                                ; preds = %.thread339, %.thread335, %bb1687, %.thread334
  %v7_f6c8 = icmp eq i32 %v1_e81c, 208
  %.2027 = zext i1 %v7_f6c8 to i32
  store i32 %.2027, i32* %r3.global-to-local, align 4
  store i1 %v2_ef98, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ef98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ef98, label %bb1690, label %dec_label_pc_f700

bb1690:                                           ; preds = %dec_label_pc_f6c8
  %v2_f6c8 = icmp ugt i32 %v1_e81c, 207
  store i1 %v2_f6c8, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f6c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f6c8, label %dec_label_pc_f6e4, label %dec_label_pc_f700

dec_label_pc_f6e4:                                ; preds = %bb1690
  %v2_f6e4 = icmp ugt i32 %v1_e834, 230
  store i1 %v2_f6e4, i1* %cpsr_c.global-to-local, align 1
  %v7_f6e4 = icmp eq i32 %v1_e834, 231
  store i1 %v7_f6e4, i1* %cpsr_z.global-to-local, align 1
  %v2_f6e8 = xor i1 %v2_f6e4, true
  %v3_f6e8 = or i1 %v7_f6e4, %v2_f6e8
  br i1 %v3_f6e8, label %bb1691, label %bb1692

bb1691:                                           ; preds = %dec_label_pc_f6e4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1692

bb1692:                                           ; preds = %dec_label_pc_f6e4, %bb1691
  %v0_f6f8.pr940 = phi i32 [ %.2027, %dec_label_pc_f6e4 ], [ 0, %bb1691 ]
  %v2_f6ec = xor i1 %v7_f6e4, true
  %v3_f6ec = and i1 %v2_f6e4, %v2_f6ec
  br i1 %v3_f6ec, label %bb1693, label %bb1694

bb1693:                                           ; preds = %bb1692
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1694

bb1694:                                           ; preds = %bb1692, %bb1693
  %v0_f6f8.pr = phi i32 [ %v0_f6f8.pr940, %bb1692 ], [ 1, %bb1693 ]
  %v2_f6f0 = icmp ugt i32 %v1_e834, 250
  store i1 %v2_f6f0, i1* %cpsr_c.global-to-local, align 1
  %v7_f6f0 = icmp eq i32 %v1_e834, 251
  store i1 %v7_f6f0, i1* %cpsr_z.global-to-local, align 1
  %v2_f6f4 = xor i1 %v7_f6f0, true
  %v3_f6f4 = and i1 %v2_f6f0, %v2_f6f4
  br i1 %v3_f6f4, label %.thread347, label %bb1695

.thread347:                                       ; preds = %bb1694
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f700

bb1695:                                           ; preds = %bb1694
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f6f8 = icmp eq i32 %v0_f6f8.pr, 0
  store i1 %v2_f6f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f6f8, label %dec_label_pc_f700, label %dec_label_pc_e818

dec_label_pc_f700:                                ; preds = %dec_label_pc_f6c8, %.thread347, %bb1695, %bb1690
  store i32 %.1997, i32* %r3.global-to-local, align 4
  %v2_f704 = icmp ugt i32 %v1_e81c, 65
  store i1 %v2_f704, i1* %cpsr_c.global-to-local, align 1
  %v7_f704 = icmp eq i32 %v1_e81c, 66
  %.2028 = zext i1 %v7_f704 to i32
  %v2_f710 = and i32 %.1997, %.2028
  %v4_f710 = icmp eq i32 %v2_f710, 0
  store i1 %v4_f710, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f710, label %dec_label_pc_f730, label %dec_label_pc_f71c

dec_label_pc_f71c:                                ; preds = %dec_label_pc_f700
  %v2_f71c = icmp ugt i32 %v1_e834, 157
  store i1 %v2_f71c, i1* %cpsr_c.global-to-local, align 1
  %v7_f71c = icmp eq i32 %v1_e834, 158
  store i1 %v7_f71c, i1* %cpsr_z.global-to-local, align 1
  %v2_f720 = xor i1 %v7_f71c, true
  %v3_f720 = and i1 %v2_f71c, %v2_f720
  br i1 %v3_f720, label %bb1698, label %bb1699

bb1698:                                           ; preds = %dec_label_pc_f71c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1699

bb1699:                                           ; preds = %dec_label_pc_f71c, %bb1698
  %v0_f728943 = phi i32 [ %.1997, %dec_label_pc_f71c ], [ 0, %bb1698 ]
  %v2_f724 = xor i1 %v2_f71c, true
  %v3_f724 = or i1 %v7_f71c, %v2_f724
  br i1 %v3_f724, label %bb1700, label %bb1701

bb1700:                                           ; preds = %bb1699
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1701

bb1701:                                           ; preds = %bb1699, %bb1700
  %v0_f728 = phi i32 [ %v0_f728943, %bb1699 ], [ 1, %bb1700 ]
  %v2_f728 = and i32 %v3_e824, 64
  %v3_f728 = icmp ne i32 %v2_f728, 0
  store i1 %v3_f728, i1* %cpsr_c.global-to-local, align 1
  %v4_f728 = udiv i32 %v1_e834, 128
  %v5_f728 = and i32 %v0_f728, %v4_f728
  store i32 %v5_f728, i32* %r3.global-to-local, align 4
  %v6_f728 = icmp eq i32 %v5_f728, 0
  store i1 %v6_f728, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_f728, label %dec_label_pc_f730, label %dec_label_pc_e818

dec_label_pc_f730:                                ; preds = %bb1701, %dec_label_pc_f700
  store i32 %.2019, i32* %r3.global-to-local, align 4
  store i1 %v2_ecc4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ecc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ecc4, label %.thread351, label %.thread352

.thread352:                                       ; preds = %dec_label_pc_f730
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f760

.thread351:                                       ; preds = %dec_label_pc_f730
  store i32 %.2019, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f740 = icmp eq i1 %v7_f2f8, false
  store i1 %v2_f740, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f740, label %dec_label_pc_f760, label %dec_label_pc_f748

dec_label_pc_f748:                                ; preds = %.thread351
  store i32 %v1_e834, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f748 = icmp eq i32 %v1_e834, 0
  store i1 %v2_f748, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f748, label %bb1703, label %bb1702

bb1702:                                           ; preds = %dec_label_pc_f748
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1703

bb1703:                                           ; preds = %dec_label_pc_f748, %bb1702
  %v0_f758.pr = phi i32 [ 0, %dec_label_pc_f748 ], [ 1, %bb1702 ]
  %v2_f750 = icmp ugt i32 %v1_e834, 125
  store i1 %v2_f750, i1* %cpsr_c.global-to-local, align 1
  %v7_f750 = icmp eq i32 %v1_e834, 126
  store i1 %v7_f750, i1* %cpsr_z.global-to-local, align 1
  %v2_f754 = xor i1 %v7_f750, true
  %v3_f754 = and i1 %v2_f750, %v2_f754
  br i1 %v3_f754, label %.thread356, label %bb1704

.thread356:                                       ; preds = %bb1703
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f760

bb1704:                                           ; preds = %bb1703
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f758 = icmp eq i32 %v0_f758.pr, 0
  store i1 %v2_f758, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f758, label %dec_label_pc_f760, label %dec_label_pc_e818

dec_label_pc_f760:                                ; preds = %.thread356, %.thread352, %bb1704, %.thread351
  %v2_f760 = icmp ugt i32 %v1_e81c, 215
  store i1 %v2_f760, i1* %cpsr_c.global-to-local, align 1
  %v7_f760 = icmp eq i32 %v1_e81c, 216
  store i1 %v7_f760, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f760, label %.thread359, label %.thread360

.thread360:                                       ; preds = %dec_label_pc_f760
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f788

.thread359:                                       ; preds = %dec_label_pc_f760
  store i32 %.2025, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f76c = icmp eq i1 %v7_efd0, false
  store i1 %v2_f76c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f76c, label %dec_label_pc_f788, label %dec_label_pc_f774

dec_label_pc_f774:                                ; preds = %.thread359
  %v2_f774 = icmp ugt i32 %v1_e834, 157
  store i1 %v2_f774, i1* %cpsr_c.global-to-local, align 1
  %v7_f774 = icmp eq i32 %v1_e834, 158
  store i1 %v7_f774, i1* %cpsr_z.global-to-local, align 1
  %v2_f778 = xor i1 %v7_f774, true
  %v3_f778 = and i1 %v2_f774, %v2_f778
  br i1 %v3_f778, label %bb1705, label %bb1706

bb1705:                                           ; preds = %dec_label_pc_f774
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1706

bb1706:                                           ; preds = %dec_label_pc_f774, %bb1705
  %v0_f780947 = phi i32 [ %.2025, %dec_label_pc_f774 ], [ 0, %bb1705 ]
  %v2_f77c = xor i1 %v2_f774, true
  %v3_f77c = or i1 %v7_f774, %v2_f77c
  br i1 %v3_f77c, label %bb1707, label %bb1708

bb1707:                                           ; preds = %bb1706
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1708

bb1708:                                           ; preds = %bb1706, %bb1707
  %v0_f780 = phi i32 [ %v0_f780947, %bb1706 ], [ 1, %bb1707 ]
  %v2_f780 = and i32 %v3_e824, 64
  %v3_f780 = icmp ne i32 %v2_f780, 0
  store i1 %v3_f780, i1* %cpsr_c.global-to-local, align 1
  %v4_f780 = udiv i32 %v1_e834, 128
  %v5_f780 = and i32 %v0_f780, %v4_f780
  store i32 %v5_f780, i32* %r3.global-to-local, align 4
  %v6_f780 = icmp eq i32 %v5_f780, 0
  store i1 %v6_f780, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_f780, label %dec_label_pc_f788, label %dec_label_pc_e818

dec_label_pc_f788:                                ; preds = %.thread360, %bb1708, %.thread359
  %v2_f788 = icmp ugt i32 %v1_e830, 60
  %v7_f788 = icmp eq i32 %v1_e830, 61
  %.2029 = zext i1 %v7_f788 to i32
  store i32 %.2029, i32* %r4.global-to-local, align 4
  %v2_f794 = icmp ugt i32 %v1_e81c, 107
  store i1 %v2_f794, i1* %cpsr_c.global-to-local, align 1
  %v7_f794 = icmp eq i32 %v1_e81c, 108
  store i1 %v7_f794, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f794, label %bb1711, label %dec_label_pc_f7a0

bb1711:                                           ; preds = %dec_label_pc_f788
  store i1 %v2_f788, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f788, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f788, label %dec_label_pc_e818, label %dec_label_pc_f7a0

dec_label_pc_f7a0:                                ; preds = %dec_label_pc_f788, %bb1711
  store i32 %.2019, i32* %r3.global-to-local, align 4
  %v2_f7a4 = icmp ugt i32 %v1_e830, 75
  store i1 %v2_f7a4, i1* %cpsr_c.global-to-local, align 1
  %v7_f7a4 = icmp eq i32 %v1_e830, 76
  store i1 %v7_f7a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f7a4, label %.thread365, label %.thread366

.thread366:                                       ; preds = %dec_label_pc_f7a0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f7b8

.thread365:                                       ; preds = %dec_label_pc_f7a0
  store i32 %.2019, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f7b0 = icmp eq i1 %v7_f2f8, false
  store i1 %v2_f7b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f7b0, label %dec_label_pc_f7b8, label %dec_label_pc_e818

dec_label_pc_f7b8:                                ; preds = %.thread366, %.thread365
  %v2_f7b8 = icmp ugt i32 %v1_e830, 10
  store i1 %v2_f7b8, i1* %cpsr_c.global-to-local, align 1
  %v7_f7b8 = icmp eq i32 %v1_e830, 11
  store i1 %v7_f7b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f7b8, label %.thread369, label %.thread370

.thread370:                                       ; preds = %dec_label_pc_f7b8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f7e8

.thread369:                                       ; preds = %dec_label_pc_f7b8
  store i32 %.2026, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f7c4 = icmp eq i1 %v7_f638, false
  store i1 %v2_f7c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f7c4, label %dec_label_pc_f7e8, label %dec_label_pc_f7cc

dec_label_pc_f7cc:                                ; preds = %.thread369
  %v2_f7cc = icmp ugt i32 %v1_e834, 142
  store i1 %v2_f7cc, i1* %cpsr_c.global-to-local, align 1
  %v7_f7cc = icmp eq i32 %v1_e834, 143
  store i1 %v7_f7cc, i1* %cpsr_z.global-to-local, align 1
  %v2_f7d0 = xor i1 %v2_f7cc, true
  %v3_f7d0 = or i1 %v7_f7cc, %v2_f7d0
  br i1 %v3_f7d0, label %bb1712, label %bb1713

bb1712:                                           ; preds = %dec_label_pc_f7cc
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1713

bb1713:                                           ; preds = %dec_label_pc_f7cc, %bb1712
  %v0_f7e0.pr951 = phi i32 [ %.2026, %dec_label_pc_f7cc ], [ 0, %bb1712 ]
  %v2_f7d4 = xor i1 %v7_f7cc, true
  %v3_f7d4 = and i1 %v2_f7cc, %v2_f7d4
  br i1 %v3_f7d4, label %bb1714, label %bb1715

bb1714:                                           ; preds = %bb1713
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1715

bb1715:                                           ; preds = %bb1713, %bb1714
  %v0_f7e0.pr = phi i32 [ %v0_f7e0.pr951, %bb1713 ], [ 1, %bb1714 ]
  %v2_f7d8 = icmp ugt i32 %v1_e834, 146
  store i1 %v2_f7d8, i1* %cpsr_c.global-to-local, align 1
  %v7_f7d8 = icmp eq i32 %v1_e834, 147
  store i1 %v7_f7d8, i1* %cpsr_z.global-to-local, align 1
  %v2_f7dc = xor i1 %v7_f7d8, true
  %v3_f7dc = and i1 %v2_f7d8, %v2_f7dc
  br i1 %v3_f7dc, label %.thread374, label %bb1716

.thread374:                                       ; preds = %bb1715
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f7e8

bb1716:                                           ; preds = %bb1715
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f7e0 = icmp eq i32 %v0_f7e0.pr, 0
  store i1 %v2_f7e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f7e0, label %dec_label_pc_f7e8, label %dec_label_pc_e818

dec_label_pc_f7e8:                                ; preds = %.thread374, %.thread370, %bb1716, %.thread369
  %v2_f7ec = and i32 %.1998, %.2026
  %v4_f7ec = icmp eq i32 %v2_f7ec, 0
  store i1 %v4_f7ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f7ec, label %dec_label_pc_f810, label %dec_label_pc_f7f4

dec_label_pc_f7f4:                                ; preds = %dec_label_pc_f7e8
  %v2_f7f4 = icmp ugt i32 %v1_e834, 19
  store i1 %v2_f7f4, i1* %cpsr_c.global-to-local, align 1
  %v7_f7f4 = icmp eq i32 %v1_e834, 20
  store i1 %v7_f7f4, i1* %cpsr_z.global-to-local, align 1
  %v2_f7f8 = xor i1 %v2_f7f4, true
  %v3_f7f8 = or i1 %v7_f7f4, %v2_f7f8
  br i1 %v3_f7f8, label %bb1717, label %bb1718

bb1717:                                           ; preds = %dec_label_pc_f7f4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1718

bb1718:                                           ; preds = %dec_label_pc_f7f4, %bb1717
  %v2_f7fc = xor i1 %v7_f7f4, true
  %v3_f7fc = and i1 %v2_f7f4, %v2_f7fc
  br i1 %v3_f7fc, label %bb1719, label %bb1720

bb1719:                                           ; preds = %bb1718
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1720

bb1720:                                           ; preds = %bb1718, %bb1719
  %v0_f808.pr = phi i32 [ 0, %bb1718 ], [ 1, %bb1719 ]
  %v2_f800 = icmp ugt i32 %v1_e834, 21
  store i1 %v2_f800, i1* %cpsr_c.global-to-local, align 1
  %v7_f800 = icmp eq i32 %v1_e834, 22
  store i1 %v7_f800, i1* %cpsr_z.global-to-local, align 1
  %v2_f804 = xor i1 %v7_f800, true
  %v3_f804 = and i1 %v2_f800, %v2_f804
  br i1 %v3_f804, label %.thread378, label %bb1721

.thread378:                                       ; preds = %bb1720
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f810

bb1721:                                           ; preds = %bb1720
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f808 = icmp eq i32 %v0_f808.pr, 0
  store i1 %v2_f808, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f808, label %dec_label_pc_f810, label %dec_label_pc_e818

dec_label_pc_f810:                                ; preds = %.thread378, %bb1721, %dec_label_pc_f7e8
  %v2_f810 = and i32 %.2029, %.2026
  %v4_f810 = icmp eq i32 %v2_f810, 0
  store i1 %v4_f810, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f810, label %dec_label_pc_f834, label %dec_label_pc_f818

dec_label_pc_f818:                                ; preds = %dec_label_pc_f810
  %v2_f818 = icmp ugt i32 %v1_e834, 134
  store i1 %v2_f818, i1* %cpsr_c.global-to-local, align 1
  %v7_f818 = icmp eq i32 %v1_e834, 135
  store i1 %v7_f818, i1* %cpsr_z.global-to-local, align 1
  %v2_f81c = xor i1 %v2_f818, true
  %v3_f81c = or i1 %v7_f818, %v2_f81c
  br i1 %v3_f81c, label %bb1722, label %bb1723

bb1722:                                           ; preds = %dec_label_pc_f818
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1723

bb1723:                                           ; preds = %dec_label_pc_f818, %bb1722
  %v2_f820 = xor i1 %v7_f818, true
  %v3_f820 = and i1 %v2_f818, %v2_f820
  br i1 %v3_f820, label %bb1724, label %bb1725

bb1724:                                           ; preds = %bb1723
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1725

bb1725:                                           ; preds = %bb1723, %bb1724
  %v0_f82c.pr = phi i32 [ 0, %bb1723 ], [ 1, %bb1724 ]
  %v2_f824 = icmp ugt i32 %v1_e834, 137
  store i1 %v2_f824, i1* %cpsr_c.global-to-local, align 1
  %v7_f824 = icmp eq i32 %v1_e834, 138
  store i1 %v7_f824, i1* %cpsr_z.global-to-local, align 1
  %v2_f828 = xor i1 %v7_f824, true
  %v3_f828 = and i1 %v2_f824, %v2_f828
  br i1 %v3_f828, label %.thread382, label %bb1726

.thread382:                                       ; preds = %bb1725
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f834

bb1726:                                           ; preds = %bb1725
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f82c = icmp eq i32 %v0_f82c.pr, 0
  store i1 %v2_f82c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f82c, label %dec_label_pc_f834, label %dec_label_pc_e818

dec_label_pc_f834:                                ; preds = %.thread382, %bb1726, %dec_label_pc_f810
  store i32 %storemerge1255, i32* %r3.global-to-local, align 4
  %v2_f838 = and i32 %storemerge1255, %.2026
  %v4_f838 = icmp eq i32 %v2_f838, 0
  store i1 %v4_f838, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f838, label %dec_label_pc_f85c, label %dec_label_pc_f840

dec_label_pc_f840:                                ; preds = %dec_label_pc_f834
  %v2_f840 = icmp ugt i32 %v1_e834, 185
  store i1 %v2_f840, i1* %cpsr_c.global-to-local, align 1
  %v7_f840 = icmp eq i32 %v1_e834, 186
  store i1 %v7_f840, i1* %cpsr_z.global-to-local, align 1
  %v2_f844 = xor i1 %v2_f840, true
  %v3_f844 = or i1 %v7_f840, %v2_f844
  br i1 %v3_f844, label %bb1727, label %bb1728

bb1727:                                           ; preds = %dec_label_pc_f840
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1728

bb1728:                                           ; preds = %dec_label_pc_f840, %bb1727
  %v0_f854.pr960 = phi i32 [ %storemerge1255, %dec_label_pc_f840 ], [ 0, %bb1727 ]
  %v2_f848 = xor i1 %v7_f840, true
  %v3_f848 = and i1 %v2_f840, %v2_f848
  br i1 %v3_f848, label %bb1729, label %bb1730

bb1729:                                           ; preds = %bb1728
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1730

bb1730:                                           ; preds = %bb1728, %bb1729
  %v0_f854.pr = phi i32 [ %v0_f854.pr960, %bb1728 ], [ 1, %bb1729 ]
  %v2_f84c = icmp ugt i32 %v1_e834, 189
  store i1 %v2_f84c, i1* %cpsr_c.global-to-local, align 1
  %v7_f84c = icmp eq i32 %v1_e834, 190
  store i1 %v7_f84c, i1* %cpsr_z.global-to-local, align 1
  %v2_f850 = xor i1 %v7_f84c, true
  %v3_f850 = and i1 %v2_f84c, %v2_f850
  br i1 %v3_f850, label %.thread386, label %bb1731

.thread386:                                       ; preds = %bb1730
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f85c

bb1731:                                           ; preds = %bb1730
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f854 = icmp eq i32 %v0_f854.pr, 0
  store i1 %v2_f854, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f854, label %dec_label_pc_f85c, label %dec_label_pc_e818

dec_label_pc_f85c:                                ; preds = %.thread386, %bb1731, %dec_label_pc_f834
  store i32 %.2028, i32* %r3.global-to-local, align 4
  store i1 %v2_f00c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f00c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f00c, label %.thread389, label %.thread390

.thread390:                                       ; preds = %dec_label_pc_f85c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f890

.thread389:                                       ; preds = %dec_label_pc_f85c
  store i32 %.2028, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f86c = icmp eq i1 %v7_f704, false
  store i1 %v2_f86c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f86c, label %dec_label_pc_f890, label %dec_label_pc_f874

dec_label_pc_f874:                                ; preds = %.thread389
  %v2_f874 = icmp ugt i32 %v1_e834, 118
  store i1 %v2_f874, i1* %cpsr_c.global-to-local, align 1
  %v7_f874 = icmp eq i32 %v1_e834, 119
  store i1 %v7_f874, i1* %cpsr_z.global-to-local, align 1
  %v2_f878 = xor i1 %v2_f874, true
  %v3_f878 = or i1 %v7_f874, %v2_f878
  br i1 %v3_f878, label %bb1732, label %bb1733

bb1732:                                           ; preds = %dec_label_pc_f874
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1733

bb1733:                                           ; preds = %dec_label_pc_f874, %bb1732
  %v0_f888.pr963 = phi i32 [ %.2028, %dec_label_pc_f874 ], [ 0, %bb1732 ]
  %v2_f87c = xor i1 %v7_f874, true
  %v3_f87c = and i1 %v2_f874, %v2_f87c
  br i1 %v3_f87c, label %bb1734, label %bb1735

bb1734:                                           ; preds = %bb1733
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1735

bb1735:                                           ; preds = %bb1733, %bb1734
  %v0_f888.pr = phi i32 [ %v0_f888.pr963, %bb1733 ], [ 1, %bb1734 ]
  %v2_f880 = icmp ugt i32 %v1_e834, 213
  store i1 %v2_f880, i1* %cpsr_c.global-to-local, align 1
  %v7_f880 = icmp eq i32 %v1_e834, 214
  store i1 %v7_f880, i1* %cpsr_z.global-to-local, align 1
  %v2_f884 = xor i1 %v7_f880, true
  %v3_f884 = and i1 %v2_f880, %v2_f884
  br i1 %v3_f884, label %.thread394, label %bb1736

.thread394:                                       ; preds = %bb1735
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f890

bb1736:                                           ; preds = %bb1735
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f888 = icmp eq i32 %v0_f888.pr, 0
  store i1 %v2_f888, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f888, label %dec_label_pc_f890, label %dec_label_pc_e818

dec_label_pc_f890:                                ; preds = %.thread394, %.thread390, %bb1736, %.thread389
  store i32 %.2028, i32* %r3.global-to-local, align 4
  %v2_f894 = icmp ugt i32 %v1_e830, 150
  store i1 %v2_f894, i1* %cpsr_c.global-to-local, align 1
  %v7_f894 = icmp eq i32 %v1_e830, 151
  store i1 %v7_f894, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f894, label %.thread397, label %.thread398

.thread398:                                       ; preds = %dec_label_pc_f890
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f8c4

.thread397:                                       ; preds = %dec_label_pc_f890
  store i32 %.2028, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f8a0 = icmp eq i1 %v7_f704, false
  store i1 %v2_f8a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f8a0, label %dec_label_pc_f8c4, label %dec_label_pc_f8a8

dec_label_pc_f8a8:                                ; preds = %.thread397
  %v2_f8a8 = icmp ugt i32 %v1_e834, 135
  store i1 %v2_f8a8, i1* %cpsr_c.global-to-local, align 1
  %v7_f8a8 = icmp eq i32 %v1_e834, 136
  store i1 %v7_f8a8, i1* %cpsr_z.global-to-local, align 1
  %v2_f8ac = xor i1 %v2_f8a8, true
  %v3_f8ac = or i1 %v7_f8a8, %v2_f8ac
  br i1 %v3_f8ac, label %bb1737, label %bb1738

bb1737:                                           ; preds = %dec_label_pc_f8a8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1738

bb1738:                                           ; preds = %dec_label_pc_f8a8, %bb1737
  %v0_f8bc.pr966 = phi i32 [ %.2028, %dec_label_pc_f8a8 ], [ 0, %bb1737 ]
  %v2_f8b0 = xor i1 %v7_f8a8, true
  %v3_f8b0 = and i1 %v2_f8a8, %v2_f8b0
  br i1 %v3_f8b0, label %bb1739, label %bb1740

bb1739:                                           ; preds = %bb1738
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1740

bb1740:                                           ; preds = %bb1738, %bb1739
  %v0_f8bc.pr = phi i32 [ %v0_f8bc.pr966, %bb1738 ], [ 1, %bb1739 ]
  %v2_f8b4 = icmp ugt i32 %v1_e834, 137
  store i1 %v2_f8b4, i1* %cpsr_c.global-to-local, align 1
  %v7_f8b4 = icmp eq i32 %v1_e834, 138
  store i1 %v7_f8b4, i1* %cpsr_z.global-to-local, align 1
  %v2_f8b8 = xor i1 %v7_f8b4, true
  %v3_f8b8 = and i1 %v2_f8b4, %v2_f8b8
  br i1 %v3_f8b8, label %.thread402, label %bb1741

.thread402:                                       ; preds = %bb1740
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f8c4

bb1741:                                           ; preds = %bb1740
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f8bc = icmp eq i32 %v0_f8bc.pr, 0
  store i1 %v2_f8bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f8bc, label %dec_label_pc_f8c4, label %dec_label_pc_e818

dec_label_pc_f8c4:                                ; preds = %.thread402, %.thread398, %bb1741, %.thread397
  store i32 %.2001, i32* %r3.global-to-local, align 4
  %v2_f8c8 = icmp ugt i32 %v1_e830, 93
  store i1 %v2_f8c8, i1* %cpsr_c.global-to-local, align 1
  %v7_f8c8 = icmp eq i32 %v1_e830, 94
  store i1 %v7_f8c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f8c8, label %.thread405, label %.thread406

.thread406:                                       ; preds = %dec_label_pc_f8c4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f8e8

.thread405:                                       ; preds = %dec_label_pc_f8c4
  store i32 %.2001, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f8d4 = icmp eq i1 %v7_ec78, false
  store i1 %v2_f8d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f8d4, label %dec_label_pc_f8e8, label %dec_label_pc_f8dc

dec_label_pc_f8dc:                                ; preds = %.thread405
  %v2_f8dc = icmp eq i32 %v1_e834, 255
  store i1 %v2_f8dc, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_f8dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f8dc, label %dec_label_pc_f8e8, label %bb1742

bb1742:                                           ; preds = %dec_label_pc_f8dc
  %v3_f8e0 = icmp ugt i32 %v1_e834, 235
  store i1 %v3_f8e0, i1* %cpsr_c.global-to-local, align 1
  %v8_f8e0 = icmp eq i32 %v1_e834, 236
  store i1 %v8_f8e0, i1* %cpsr_z.global-to-local, align 1
  %v2_f8e4 = xor i1 %v8_f8e0, true
  %v3_f8e4 = and i1 %v3_f8e0, %v2_f8e4
  br i1 %v3_f8e4, label %dec_label_pc_e818, label %dec_label_pc_f8e8

dec_label_pc_f8e8:                                ; preds = %dec_label_pc_f8dc, %.thread406, %bb1742, %.thread405
  %v0_f908.pr972 = phi i32 [ 0, %.thread406 ], [ %.2001, %bb1742 ], [ 0, %.thread405 ], [ %.2001, %dec_label_pc_f8dc ]
  %v2_f8e8 = icmp ugt i32 %v1_e81c, 62
  store i1 %v2_f8e8, i1* %cpsr_c.global-to-local, align 1
  %v7_f8e8 = icmp eq i32 %v1_e81c, 63
  store i1 %v7_f8e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f8e8, label %bb1743, label %dec_label_pc_f910

bb1743:                                           ; preds = %dec_label_pc_f8e8
  store i1 %v2_f1e4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f1e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f1e4, label %dec_label_pc_f8f4, label %dec_label_pc_f910

dec_label_pc_f8f4:                                ; preds = %bb1743
  %v2_f8f4 = icmp ugt i32 %v1_e834, 17
  store i1 %v2_f8f4, i1* %cpsr_c.global-to-local, align 1
  %v7_f8f4 = icmp eq i32 %v1_e834, 18
  store i1 %v7_f8f4, i1* %cpsr_z.global-to-local, align 1
  %v2_f8f8 = xor i1 %v2_f8f4, true
  %v3_f8f8 = or i1 %v7_f8f4, %v2_f8f8
  br i1 %v3_f8f8, label %bb1744, label %bb1745

bb1744:                                           ; preds = %dec_label_pc_f8f4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1745

bb1745:                                           ; preds = %dec_label_pc_f8f4, %bb1744
  %v0_f908.pr971 = phi i32 [ %v0_f908.pr972, %dec_label_pc_f8f4 ], [ 0, %bb1744 ]
  %v2_f8fc = xor i1 %v7_f8f4, true
  %v3_f8fc = and i1 %v2_f8f4, %v2_f8fc
  br i1 %v3_f8fc, label %bb1746, label %bb1747

bb1746:                                           ; preds = %bb1745
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1747

bb1747:                                           ; preds = %bb1745, %bb1746
  %v0_f908.pr = phi i32 [ %v0_f908.pr971, %bb1745 ], [ 1, %bb1746 ]
  %v2_f900 = icmp ugt i32 %v1_e834, 19
  store i1 %v2_f900, i1* %cpsr_c.global-to-local, align 1
  %v7_f900 = icmp eq i32 %v1_e834, 20
  store i1 %v7_f900, i1* %cpsr_z.global-to-local, align 1
  %v2_f904 = xor i1 %v7_f900, true
  %v3_f904 = and i1 %v2_f900, %v2_f904
  br i1 %v3_f904, label %.thread411, label %bb1748

.thread411:                                       ; preds = %bb1747
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f910

bb1748:                                           ; preds = %bb1747
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f908 = icmp eq i32 %v0_f908.pr, 0
  store i1 %v2_f908, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f908, label %dec_label_pc_f910, label %dec_label_pc_e818

dec_label_pc_f910:                                ; preds = %dec_label_pc_f8e8, %.thread411, %bb1748, %bb1743
  %v0_f930.pr975 = phi i32 [ %v0_f908.pr972, %dec_label_pc_f8e8 ], [ 0, %.thread411 ], [ 0, %bb1748 ], [ %v0_f908.pr972, %bb1743 ]
  %v2_f910 = icmp ugt i32 %v1_e81c, 69
  store i1 %v2_f910, i1* %cpsr_c.global-to-local, align 1
  %v7_f910 = icmp eq i32 %v1_e81c, 70
  store i1 %v7_f910, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f910, label %bb1749, label %dec_label_pc_f938

bb1749:                                           ; preds = %dec_label_pc_f910
  %v3_f914 = icmp ugt i32 %v1_e830, 41
  store i1 %v3_f914, i1* %cpsr_c.global-to-local, align 1
  %v8_f914 = icmp eq i32 %v1_e830, 42
  store i1 %v8_f914, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f914, label %dec_label_pc_f91c, label %dec_label_pc_f938

dec_label_pc_f91c:                                ; preds = %bb1749
  %v2_f91c = icmp ugt i32 %v1_e834, 71
  store i1 %v2_f91c, i1* %cpsr_c.global-to-local, align 1
  %v7_f91c = icmp eq i32 %v1_e834, 72
  store i1 %v7_f91c, i1* %cpsr_z.global-to-local, align 1
  %v2_f920 = xor i1 %v2_f91c, true
  %v3_f920 = or i1 %v7_f91c, %v2_f920
  br i1 %v3_f920, label %bb1750, label %bb1751

bb1750:                                           ; preds = %dec_label_pc_f91c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1751

bb1751:                                           ; preds = %dec_label_pc_f91c, %bb1750
  %v0_f930.pr974 = phi i32 [ %v0_f930.pr975, %dec_label_pc_f91c ], [ 0, %bb1750 ]
  %v2_f924 = xor i1 %v7_f91c, true
  %v3_f924 = and i1 %v2_f91c, %v2_f924
  br i1 %v3_f924, label %bb1752, label %bb1753

bb1752:                                           ; preds = %bb1751
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1753

bb1753:                                           ; preds = %bb1751, %bb1752
  %v0_f930.pr = phi i32 [ %v0_f930.pr974, %bb1751 ], [ 1, %bb1752 ]
  %v2_f928 = icmp ugt i32 %v1_e834, 73
  store i1 %v2_f928, i1* %cpsr_c.global-to-local, align 1
  %v7_f928 = icmp eq i32 %v1_e834, 74
  store i1 %v7_f928, i1* %cpsr_z.global-to-local, align 1
  %v2_f92c = xor i1 %v7_f928, true
  %v3_f92c = and i1 %v2_f928, %v2_f92c
  br i1 %v3_f92c, label %.thread416, label %bb1754

.thread416:                                       ; preds = %bb1753
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f938

bb1754:                                           ; preds = %bb1753
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f930 = icmp eq i32 %v0_f930.pr, 0
  store i1 %v2_f930, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f930, label %dec_label_pc_f938, label %dec_label_pc_e818

dec_label_pc_f938:                                ; preds = %dec_label_pc_f910, %.thread416, %bb1754, %bb1749
  %v0_f964.pr978 = phi i32 [ %v0_f930.pr975, %dec_label_pc_f910 ], [ 0, %.thread416 ], [ 0, %bb1754 ], [ %v0_f930.pr975, %bb1749 ]
  %v7_f938 = icmp eq i32 %v1_e81c, 74
  %.2030 = zext i1 %v7_f938 to i32
  %v2_f944 = icmp ugt i32 %v1_e830, 90
  store i1 %v2_f944, i1* %cpsr_c.global-to-local, align 1
  %v7_f944 = icmp eq i32 %v1_e830, 91
  store i1 %v7_f944, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f944, label %bb1757, label %dec_label_pc_f96c

bb1757:                                           ; preds = %dec_label_pc_f938
  %v2_f938 = icmp ugt i32 %v1_e81c, 73
  store i1 %v2_f938, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f938, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f938, label %dec_label_pc_f950, label %dec_label_pc_f96c

dec_label_pc_f950:                                ; preds = %bb1757
  %v2_f950 = icmp ugt i32 %v1_e834, 111
  store i1 %v2_f950, i1* %cpsr_c.global-to-local, align 1
  %v7_f950 = icmp eq i32 %v1_e834, 112
  store i1 %v7_f950, i1* %cpsr_z.global-to-local, align 1
  %v2_f954 = xor i1 %v2_f950, true
  %v3_f954 = or i1 %v7_f950, %v2_f954
  br i1 %v3_f954, label %bb1758, label %bb1759

bb1758:                                           ; preds = %dec_label_pc_f950
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1759

bb1759:                                           ; preds = %dec_label_pc_f950, %bb1758
  %v0_f964.pr977 = phi i32 [ %v0_f964.pr978, %dec_label_pc_f950 ], [ 0, %bb1758 ]
  %v2_f958 = xor i1 %v7_f950, true
  %v3_f958 = and i1 %v2_f950, %v2_f958
  br i1 %v3_f958, label %bb1760, label %bb1761

bb1760:                                           ; preds = %bb1759
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1761

bb1761:                                           ; preds = %bb1759, %bb1760
  %v0_f964.pr = phi i32 [ %v0_f964.pr977, %bb1759 ], [ 1, %bb1760 ]
  %v2_f95c = icmp ugt i32 %v1_e834, 113
  store i1 %v2_f95c, i1* %cpsr_c.global-to-local, align 1
  %v7_f95c = icmp eq i32 %v1_e834, 114
  store i1 %v7_f95c, i1* %cpsr_z.global-to-local, align 1
  %v2_f960 = xor i1 %v7_f95c, true
  %v3_f960 = and i1 %v2_f95c, %v2_f960
  br i1 %v3_f960, label %.thread422, label %bb1762

.thread422:                                       ; preds = %bb1761
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f96c

bb1762:                                           ; preds = %bb1761
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f964 = icmp eq i32 %v0_f964.pr, 0
  store i1 %v2_f964, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f964, label %dec_label_pc_f96c, label %dec_label_pc_e818

dec_label_pc_f96c:                                ; preds = %dec_label_pc_f938, %.thread422, %bb1762, %bb1757
  %v2_f96c = icmp ugt i32 %v1_e830, 200
  store i1 %v2_f96c, i1* %cpsr_c.global-to-local, align 1
  %v7_f96c = icmp eq i32 %v1_e830, 201
  store i1 %v7_f96c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f96c, label %.thread425, label %.thread426

.thread426:                                       ; preds = %dec_label_pc_f96c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f99c

.thread425:                                       ; preds = %dec_label_pc_f96c
  store i32 %.2030, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f978 = icmp eq i1 %v7_f938, false
  store i1 %v2_f978, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f978, label %dec_label_pc_f99c, label %dec_label_pc_f980

dec_label_pc_f980:                                ; preds = %.thread425
  %v2_f980 = icmp ugt i32 %v1_e834, 54
  store i1 %v2_f980, i1* %cpsr_c.global-to-local, align 1
  %v7_f980 = icmp eq i32 %v1_e834, 55
  store i1 %v7_f980, i1* %cpsr_z.global-to-local, align 1
  %v2_f984 = xor i1 %v2_f980, true
  %v3_f984 = or i1 %v7_f980, %v2_f984
  br i1 %v3_f984, label %bb1763, label %bb1764

bb1763:                                           ; preds = %dec_label_pc_f980
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1764

bb1764:                                           ; preds = %dec_label_pc_f980, %bb1763
  %v0_f994.pr981 = phi i32 [ %.2030, %dec_label_pc_f980 ], [ 0, %bb1763 ]
  %v2_f988 = xor i1 %v7_f980, true
  %v3_f988 = and i1 %v2_f980, %v2_f988
  br i1 %v3_f988, label %bb1765, label %bb1766

bb1765:                                           ; preds = %bb1764
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1766

bb1766:                                           ; preds = %bb1764, %bb1765
  %v0_f994.pr = phi i32 [ %v0_f994.pr981, %bb1764 ], [ 1, %bb1765 ]
  %v2_f98c = icmp ugt i32 %v1_e834, 56
  store i1 %v2_f98c, i1* %cpsr_c.global-to-local, align 1
  %v7_f98c = icmp eq i32 %v1_e834, 57
  store i1 %v7_f98c, i1* %cpsr_z.global-to-local, align 1
  %v2_f990 = xor i1 %v7_f98c, true
  %v3_f990 = and i1 %v2_f98c, %v2_f990
  br i1 %v3_f990, label %.thread430, label %bb1767

.thread430:                                       ; preds = %bb1766
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f99c

bb1767:                                           ; preds = %bb1766
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f994 = icmp eq i32 %v0_f994.pr, 0
  store i1 %v2_f994, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f994, label %dec_label_pc_f99c, label %dec_label_pc_e818

dec_label_pc_f99c:                                ; preds = %.thread430, %.thread426, %bb1767, %.thread425
  %v2_f9a0 = icmp ugt i32 %v1_e830, 208
  store i1 %v2_f9a0, i1* %cpsr_c.global-to-local, align 1
  %v7_f9a0 = icmp eq i32 %v1_e830, 209
  %.2031 = zext i1 %v7_f9a0 to i32
  store i32 %.2031, i32* %r4.global-to-local, align 4
  %v2_f9ac = and i32 %.2031, %.2018
  %v4_f9ac = icmp eq i32 %v2_f9ac, 0
  store i1 %v4_f9ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f9ac, label %dec_label_pc_f9d0, label %dec_label_pc_f9b4

dec_label_pc_f9b4:                                ; preds = %dec_label_pc_f99c
  %v2_f9b4 = icmp ugt i32 %v1_e834, 46
  store i1 %v2_f9b4, i1* %cpsr_c.global-to-local, align 1
  %v7_f9b4 = icmp eq i32 %v1_e834, 47
  store i1 %v7_f9b4, i1* %cpsr_z.global-to-local, align 1
  %v2_f9b8 = xor i1 %v2_f9b4, true
  %v3_f9b8 = or i1 %v7_f9b4, %v2_f9b8
  br i1 %v3_f9b8, label %bb1770, label %bb1771

bb1770:                                           ; preds = %dec_label_pc_f9b4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1771

bb1771:                                           ; preds = %dec_label_pc_f9b4, %bb1770
  %v2_f9bc = xor i1 %v7_f9b4, true
  %v3_f9bc = and i1 %v2_f9b4, %v2_f9bc
  br i1 %v3_f9bc, label %bb1772, label %bb1773

bb1772:                                           ; preds = %bb1771
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1773

bb1773:                                           ; preds = %bb1771, %bb1772
  %v0_f9c8.pr = phi i32 [ 0, %bb1771 ], [ 1, %bb1772 ]
  %v2_f9c0 = icmp ugt i32 %v1_e834, 51
  store i1 %v2_f9c0, i1* %cpsr_c.global-to-local, align 1
  %v7_f9c0 = icmp eq i32 %v1_e834, 52
  store i1 %v7_f9c0, i1* %cpsr_z.global-to-local, align 1
  %v2_f9c4 = xor i1 %v7_f9c0, true
  %v3_f9c4 = and i1 %v2_f9c0, %v2_f9c4
  br i1 %v3_f9c4, label %.thread435, label %bb1774

.thread435:                                       ; preds = %bb1773
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f9d0

bb1774:                                           ; preds = %bb1773
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f9c8 = icmp eq i32 %v0_f9c8.pr, 0
  store i1 %v2_f9c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f9c8, label %dec_label_pc_f9d0, label %dec_label_pc_e818

dec_label_pc_f9d0:                                ; preds = %.thread435, %bb1774, %dec_label_pc_f99c
  store i32 %.2018, i32* %r3.global-to-local, align 4
  %v2_f9d4 = icmp ugt i32 %v1_e830, 164
  store i1 %v2_f9d4, i1* %cpsr_c.global-to-local, align 1
  %v7_f9d4 = icmp eq i32 %v1_e830, 165
  store i1 %v7_f9d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f9d4, label %.thread438, label %.thread439

.thread439:                                       ; preds = %dec_label_pc_f9d0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f9e8

.thread438:                                       ; preds = %dec_label_pc_f9d0
  store i32 %.2018, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f9e0 = icmp eq i1 %v7_f294, false
  store i1 %v2_f9e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f9e0, label %dec_label_pc_f9e8, label %dec_label_pc_e818

dec_label_pc_f9e8:                                ; preds = %.thread439, %.thread438
  store i32 %storemerge1217, i32* %r3.global-to-local, align 4
  %v2_f9ec = icmp ugt i32 %v1_e81c, 148
  store i1 %v2_f9ec, i1* %cpsr_c.global-to-local, align 1
  %v7_f9ec = icmp eq i32 %v1_e81c, 149
  store i1 %v7_f9ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f9ec, label %.thread442, label %.thread443

.thread443:                                       ; preds = %dec_label_pc_f9e8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fa00

.thread442:                                       ; preds = %dec_label_pc_f9e8
  store i32 %storemerge1217, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f9f8 = icmp eq i1 %v7_ea48, false
  store i1 %v2_f9f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f9f8, label %dec_label_pc_fa00, label %dec_label_pc_e818

dec_label_pc_fa00:                                ; preds = %.thread443, %.thread442
  %v2_fa00 = icmp ugt i32 %v1_e81c, 150
  store i1 %v2_fa00, i1* %cpsr_c.global-to-local, align 1
  %v7_fa00 = icmp eq i32 %v1_e81c, 151
  store i1 %v7_fa00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fa00, label %.thread446, label %.thread447

.thread447:                                       ; preds = %dec_label_pc_fa00
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fa14

.thread446:                                       ; preds = %dec_label_pc_fa00
  store i32 %.1977, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fa0c = icmp eq i1 %v7_e8f0, false
  store i1 %v2_fa0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fa0c, label %dec_label_pc_fa14, label %dec_label_pc_e818

dec_label_pc_fa14:                                ; preds = %.thread447, %.thread446
  store i32 %.1990, i32* %r3.global-to-local, align 4
  %v2_fa18 = icmp ugt i32 %v1_e830, 131
  store i1 %v2_fa18, i1* %cpsr_c.global-to-local, align 1
  %v7_fa18 = icmp eq i32 %v1_e830, 132
  store i1 %v7_fa18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fa18, label %.thread450, label %.thread451

.thread451:                                       ; preds = %dec_label_pc_fa14
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fa2c

.thread450:                                       ; preds = %dec_label_pc_fa14
  store i32 %.1990, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fa24 = icmp eq i1 %v7_eb04, false
  store i1 %v2_fa24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fa24, label %dec_label_pc_fa2c, label %dec_label_pc_e818

dec_label_pc_fa2c:                                ; preds = %.thread451, %.thread450
  %v2_fa2c = icmp ugt i32 %v1_e81c, 175
  store i1 %v2_fa2c, i1* %cpsr_c.global-to-local, align 1
  %v7_fa2c = icmp eq i32 %v1_e81c, 176
  store i1 %v7_fa2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fa2c, label %bb1775, label %dec_label_pc_fa38

bb1775:                                           ; preds = %dec_label_pc_fa2c
  %v3_fa30 = icmp ugt i32 %v1_e830, 30
  store i1 %v3_fa30, i1* %cpsr_c.global-to-local, align 1
  %v8_fa30 = icmp eq i32 %v1_e830, 31
  store i1 %v8_fa30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fa30, label %dec_label_pc_e818, label %dec_label_pc_fa38

dec_label_pc_fa38:                                ; preds = %dec_label_pc_fa2c, %bb1775
  store i32 %.1991, i32* %r3.global-to-local, align 4
  %v2_fa40 = and i32 %.1981, %.1991
  %v4_fa40 = icmp eq i32 %v2_fa40, 0
  store i1 %v4_fa40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fa40, label %dec_label_pc_fa48, label %dec_label_pc_e818

dec_label_pc_fa48:                                ; preds = %dec_label_pc_fa38
  %v2_fa50 = and i32 %storemerge1219, %.2020
  %v4_fa50 = icmp eq i32 %v2_fa50, 0
  store i1 %v4_fa50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fa50, label %dec_label_pc_fa58, label %dec_label_pc_e818

dec_label_pc_fa58:                                ; preds = %dec_label_pc_fa48
  store i32 %.2020, i32* %r3.global-to-local, align 4
  %v2_fa5c = icmp ugt i32 %v1_e830, 32
  store i1 %v2_fa5c, i1* %cpsr_c.global-to-local, align 1
  %v7_fa5c = icmp eq i32 %v1_e830, 33
  store i1 %v7_fa5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fa5c, label %.thread455, label %.thread456

.thread456:                                       ; preds = %dec_label_pc_fa58
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fa70

.thread455:                                       ; preds = %dec_label_pc_fa58
  store i32 %.2020, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fa68 = icmp eq i1 %v7_f310, false
  store i1 %v2_fa68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fa68, label %dec_label_pc_fa70, label %dec_label_pc_e818

dec_label_pc_fa70:                                ; preds = %.thread456, %.thread455
  store i32 %.1994, i32* %r3.global-to-local, align 4
  %v2_fa74 = and i32 %.1994, %.2023
  %v4_fa74 = icmp eq i32 %v2_fa74, 0
  store i1 %v4_fa74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fa74, label %dec_label_pc_fa7c, label %dec_label_pc_e818

dec_label_pc_fa7c:                                ; preds = %dec_label_pc_fa70
  %v2_fa7c = icmp ugt i32 %v1_e830, 186
  store i1 %v2_fa7c, i1* %cpsr_c.global-to-local, align 1
  %v7_fa7c = icmp eq i32 %v1_e830, 187
  store i1 %v7_fa7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fa7c, label %.thread459, label %.thread460

.thread460:                                       ; preds = %dec_label_pc_fa7c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fa90

.thread459:                                       ; preds = %dec_label_pc_fa7c
  store i32 %.2023, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fa88 = icmp eq i1 %v7_f4e8, false
  store i1 %v2_fa88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fa88, label %dec_label_pc_fa90, label %dec_label_pc_e818

dec_label_pc_fa90:                                ; preds = %.thread460, %.thread459
  %v2_fa90 = icmp ugt i32 %v1_e81c, 45
  store i1 %v2_fa90, i1* %cpsr_c.global-to-local, align 1
  %v7_fa90 = icmp eq i32 %v1_e81c, 46
  store i1 %v7_fa90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fa90, label %bb1776, label %dec_label_pc_fa9c

bb1776:                                           ; preds = %dec_label_pc_fa90
  %v3_fa94 = icmp ugt i32 %v1_e830, 104
  store i1 %v3_fa94, i1* %cpsr_c.global-to-local, align 1
  %v8_fa94 = icmp eq i32 %v1_e830, 105
  store i1 %v8_fa94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fa94, label %dec_label_pc_e818, label %dec_label_pc_fa9c

dec_label_pc_fa9c:                                ; preds = %dec_label_pc_fa90, %bb1776
  %v2_faa0 = icmp ugt i32 %v1_e81c, 50
  store i1 %v2_faa0, i1* %cpsr_c.global-to-local, align 1
  %v7_faa0 = icmp eq i32 %v1_e81c, 51
  %.2032 = zext i1 %v7_faa0 to i32
  store i32 %.2032, i32* @r7, align 4
  %v2_faac = and i32 %storemerge1237, %.2032
  %v4_faac = icmp eq i32 %v2_faac, 0
  store i1 %v4_faac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_faac, label %dec_label_pc_fab4, label %dec_label_pc_e818

dec_label_pc_fab4:                                ; preds = %dec_label_pc_fa9c
  %v2_fab4 = icmp eq i32 %v1_e830, 255
  store i1 %v2_fab4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_fab4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fab4, label %.thread465, label %.thread466

.thread466:                                       ; preds = %dec_label_pc_fab4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fac8

.thread465:                                       ; preds = %dec_label_pc_fab4
  store i32 %.2032, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fac0 = icmp eq i1 %v7_faa0, false
  store i1 %v2_fac0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fac0, label %dec_label_pc_fac8, label %dec_label_pc_e818

dec_label_pc_fac8:                                ; preds = %.thread466, %.thread465
  %v7_fac8 = icmp eq i32 %v1_e81c, 5
  %.2033 = zext i1 %v7_fac8 to i32
  store i32 %.2033, i32* %r3.global-to-local, align 4
  %v2_fad4 = icmp ugt i32 %v1_e830, 134
  store i1 %v2_fad4, i1* %cpsr_c.global-to-local, align 1
  %v7_fad4 = icmp eq i32 %v1_e830, 135
  store i1 %v7_fad4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fad4, label %bb1781, label %dec_label_pc_fae0

bb1781:                                           ; preds = %dec_label_pc_fac8
  %v2_fac8 = icmp ugt i32 %v1_e81c, 4
  store i1 %v2_fac8, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_fac8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fac8, label %dec_label_pc_e818, label %dec_label_pc_fae0

dec_label_pc_fae0:                                ; preds = %dec_label_pc_fac8, %bb1781
  %v2_fae4 = and i32 %.1984, %.2033
  %v4_fae4 = icmp eq i32 %v2_fae4, 0
  store i1 %v4_fae4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fae4, label %dec_label_pc_faec, label %dec_label_pc_e818

dec_label_pc_faec:                                ; preds = %dec_label_pc_fae0
  store i1 %v2_edc8, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_edc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_edc8, label %.thread471, label %.thread472

.thread472:                                       ; preds = %dec_label_pc_faec
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fb00

.thread471:                                       ; preds = %dec_label_pc_faec
  store i32 %.2033, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_faf8 = icmp eq i1 %v7_fac8, false
  store i1 %v2_faf8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_faf8, label %dec_label_pc_fb00, label %dec_label_pc_e818

dec_label_pc_fb00:                                ; preds = %.thread472, %.thread471
  %v2_fb00 = icmp ugt i32 %v1_e81c, 90
  store i1 %v2_fb00, i1* %cpsr_c.global-to-local, align 1
  %v7_fb00 = icmp eq i32 %v1_e81c, 91
  store i1 %v7_fb00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb00, label %bb1782, label %dec_label_pc_fb0c

bb1782:                                           ; preds = %dec_label_pc_fb00
  %v3_fb04 = icmp ugt i32 %v1_e830, 133
  store i1 %v3_fb04, i1* %cpsr_c.global-to-local, align 1
  %v8_fb04 = icmp eq i32 %v1_e830, 134
  store i1 %v8_fb04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fb04, label %dec_label_pc_e818, label %dec_label_pc_fb0c

dec_label_pc_fb0c:                                ; preds = %dec_label_pc_fb00, %bb1782
  store i32 %.2017, i32* %r3.global-to-local, align 4
  %v2_fb10 = icmp ugt i32 %v1_e830, 199
  store i1 %v2_fb10, i1* %cpsr_c.global-to-local, align 1
  %v7_fb10 = icmp eq i32 %v1_e830, 200
  store i1 %v7_fb10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb10, label %.thread476, label %.thread477

.thread477:                                       ; preds = %dec_label_pc_fb0c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fb38

.thread476:                                       ; preds = %dec_label_pc_fb0c
  store i32 %.2017, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fb1c = icmp eq i1 %v7_f274, false
  store i1 %v2_fb1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fb1c, label %dec_label_pc_fb38, label %dec_label_pc_fb24

dec_label_pc_fb24:                                ; preds = %.thread476
  %v2_fb24 = icmp ugt i32 %v1_e834, 157
  store i1 %v2_fb24, i1* %cpsr_c.global-to-local, align 1
  %v7_fb24 = icmp eq i32 %v1_e834, 158
  store i1 %v7_fb24, i1* %cpsr_z.global-to-local, align 1
  %v2_fb28 = xor i1 %v7_fb24, true
  %v3_fb28 = and i1 %v2_fb24, %v2_fb28
  br i1 %v3_fb28, label %bb1783, label %bb1784

bb1783:                                           ; preds = %dec_label_pc_fb24
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1784

bb1784:                                           ; preds = %dec_label_pc_fb24, %bb1783
  %v0_fb30996 = phi i32 [ %.2017, %dec_label_pc_fb24 ], [ 0, %bb1783 ]
  %v2_fb2c = xor i1 %v2_fb24, true
  %v3_fb2c = or i1 %v7_fb24, %v2_fb2c
  br i1 %v3_fb2c, label %bb1785, label %bb1786

bb1785:                                           ; preds = %bb1784
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1786

bb1786:                                           ; preds = %bb1784, %bb1785
  %v0_fb30 = phi i32 [ %v0_fb30996, %bb1784 ], [ 1, %bb1785 ]
  %v2_fb30 = and i32 %v3_e824, 64
  %v3_fb30 = icmp ne i32 %v2_fb30, 0
  store i1 %v3_fb30, i1* %cpsr_c.global-to-local, align 1
  %v4_fb30 = udiv i32 %v1_e834, 128
  %v5_fb30 = and i32 %v0_fb30, %v4_fb30
  store i32 %v5_fb30, i32* %r3.global-to-local, align 4
  %v6_fb30 = icmp eq i32 %v5_fb30, 0
  store i1 %v6_fb30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_fb30, label %dec_label_pc_fb38, label %dec_label_pc_e818

dec_label_pc_fb38:                                ; preds = %.thread477, %bb1786, %.thread476
  store i32 %.2021, i32* %r3.global-to-local, align 4
  %v2_fb3c = icmp ugt i32 %v1_e830, 151
  store i1 %v2_fb3c, i1* %cpsr_c.global-to-local, align 1
  %v7_fb3c = icmp eq i32 %v1_e830, 152
  store i1 %v7_fb3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb3c, label %.thread480, label %.thread481

.thread481:                                       ; preds = %dec_label_pc_fb38
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fb6c

.thread480:                                       ; preds = %dec_label_pc_fb38
  store i32 %.2021, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fb48 = icmp eq i1 %v7_f368, false
  store i1 %v2_fb48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fb48, label %dec_label_pc_fb6c, label %dec_label_pc_fb50

dec_label_pc_fb50:                                ; preds = %.thread480
  %v2_fb50 = icmp ugt i32 %v1_e834, 94
  store i1 %v2_fb50, i1* %cpsr_c.global-to-local, align 1
  %v7_fb50 = icmp eq i32 %v1_e834, 95
  store i1 %v7_fb50, i1* %cpsr_z.global-to-local, align 1
  %v2_fb54 = xor i1 %v2_fb50, true
  %v3_fb54 = or i1 %v7_fb50, %v2_fb54
  br i1 %v3_fb54, label %bb1787, label %bb1788

bb1787:                                           ; preds = %dec_label_pc_fb50
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1788

bb1788:                                           ; preds = %dec_label_pc_fb50, %bb1787
  %v0_fb64.pr999 = phi i32 [ %.2021, %dec_label_pc_fb50 ], [ 0, %bb1787 ]
  %v2_fb58 = xor i1 %v7_fb50, true
  %v3_fb58 = and i1 %v2_fb50, %v2_fb58
  br i1 %v3_fb58, label %bb1789, label %bb1790

bb1789:                                           ; preds = %bb1788
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1790

bb1790:                                           ; preds = %bb1788, %bb1789
  %v0_fb64.pr = phi i32 [ %v0_fb64.pr999, %bb1788 ], [ 1, %bb1789 ]
  %v2_fb5c = icmp ugt i32 %v1_e834, 109
  store i1 %v2_fb5c, i1* %cpsr_c.global-to-local, align 1
  %v7_fb5c = icmp eq i32 %v1_e834, 110
  store i1 %v7_fb5c, i1* %cpsr_z.global-to-local, align 1
  %v2_fb60 = xor i1 %v7_fb5c, true
  %v3_fb60 = and i1 %v2_fb5c, %v2_fb60
  br i1 %v3_fb60, label %.thread485, label %bb1791

.thread485:                                       ; preds = %bb1790
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fb6c

bb1791:                                           ; preds = %bb1790
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fb64 = icmp eq i32 %v0_fb64.pr, 0
  store i1 %v2_fb64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fb64, label %dec_label_pc_fb6c, label %dec_label_pc_e818

dec_label_pc_fb6c:                                ; preds = %.thread485, %.thread481, %bb1791, %.thread480
  store i32 %.2021, i32* %r3.global-to-local, align 4
  %v2_fb70 = icmp ugt i32 %v1_e830, 180
  store i1 %v2_fb70, i1* %cpsr_c.global-to-local, align 1
  %v7_fb70 = icmp eq i32 %v1_e830, 181
  store i1 %v7_fb70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb70, label %.thread488, label %.thread489

.thread489:                                       ; preds = %dec_label_pc_fb6c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fba0

.thread488:                                       ; preds = %dec_label_pc_fb6c
  store i32 %.2021, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fb7c = icmp eq i1 %v7_f368, false
  store i1 %v2_fb7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fb7c, label %dec_label_pc_fba0, label %dec_label_pc_fb84

dec_label_pc_fb84:                                ; preds = %.thread488
  %v2_fb84 = icmp ugt i32 %v1_e834, 158
  store i1 %v2_fb84, i1* %cpsr_c.global-to-local, align 1
  %v7_fb84 = icmp eq i32 %v1_e834, 159
  store i1 %v7_fb84, i1* %cpsr_z.global-to-local, align 1
  %v2_fb88 = xor i1 %v2_fb84, true
  %v3_fb88 = or i1 %v7_fb84, %v2_fb88
  br i1 %v3_fb88, label %bb1792, label %bb1793

bb1792:                                           ; preds = %dec_label_pc_fb84
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1793

bb1793:                                           ; preds = %dec_label_pc_fb84, %bb1792
  %v0_fb98.pr1002 = phi i32 [ %.2021, %dec_label_pc_fb84 ], [ 0, %bb1792 ]
  %v2_fb8c = xor i1 %v7_fb84, true
  %v3_fb8c = and i1 %v2_fb84, %v2_fb8c
  br i1 %v3_fb8c, label %bb1794, label %bb1795

bb1794:                                           ; preds = %bb1793
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1795

bb1795:                                           ; preds = %bb1793, %bb1794
  %v0_fb98.pr = phi i32 [ %v0_fb98.pr1002, %bb1793 ], [ 1, %bb1794 ]
  %v2_fb90 = icmp ugt i32 %v1_e834, 187
  store i1 %v2_fb90, i1* %cpsr_c.global-to-local, align 1
  %v7_fb90 = icmp eq i32 %v1_e834, 188
  store i1 %v7_fb90, i1* %cpsr_z.global-to-local, align 1
  %v2_fb94 = xor i1 %v7_fb90, true
  %v3_fb94 = and i1 %v2_fb90, %v2_fb94
  br i1 %v3_fb94, label %.thread493, label %bb1796

.thread493:                                       ; preds = %bb1795
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fba0

bb1796:                                           ; preds = %bb1795
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fb98 = icmp eq i32 %v0_fb98.pr, 0
  store i1 %v2_fb98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fb98, label %dec_label_pc_fba0, label %dec_label_pc_e818

dec_label_pc_fba0:                                ; preds = %.thread493, %.thread489, %bb1796, %.thread488
  store i32 %.2002, i32* %r3.global-to-local, align 4
  %v2_fba4 = and i32 %.1978, %.2002
  %v4_fba4 = icmp eq i32 %v2_fba4, 0
  store i1 %v4_fba4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fba4, label %dec_label_pc_fbc8, label %dec_label_pc_fbac

dec_label_pc_fbac:                                ; preds = %dec_label_pc_fba0
  %v2_fbac = icmp ugt i32 %v1_e834, 62
  store i1 %v2_fbac, i1* %cpsr_c.global-to-local, align 1
  %v7_fbac = icmp eq i32 %v1_e834, 63
  store i1 %v7_fbac, i1* %cpsr_z.global-to-local, align 1
  %v2_fbb0 = xor i1 %v2_fbac, true
  %v3_fbb0 = or i1 %v7_fbac, %v2_fbb0
  br i1 %v3_fbb0, label %bb1797, label %bb1798

bb1797:                                           ; preds = %dec_label_pc_fbac
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1798

bb1798:                                           ; preds = %dec_label_pc_fbac, %bb1797
  %v0_fbc0.pr1004 = phi i32 [ %.2002, %dec_label_pc_fbac ], [ 0, %bb1797 ]
  %v2_fbb4 = xor i1 %v7_fbac, true
  %v3_fbb4 = and i1 %v2_fbac, %v2_fbb4
  br i1 %v3_fbb4, label %bb1799, label %bb1800

bb1799:                                           ; preds = %bb1798
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1800

bb1800:                                           ; preds = %bb1798, %bb1799
  %v0_fbc0.pr = phi i32 [ %v0_fbc0.pr1004, %bb1798 ], [ 1, %bb1799 ]
  %v2_fbb8 = icmp ugt i32 %v1_e834, 93
  store i1 %v2_fbb8, i1* %cpsr_c.global-to-local, align 1
  %v7_fbb8 = icmp eq i32 %v1_e834, 94
  store i1 %v7_fbb8, i1* %cpsr_z.global-to-local, align 1
  %v2_fbbc = xor i1 %v7_fbb8, true
  %v3_fbbc = and i1 %v2_fbb8, %v2_fbbc
  br i1 %v3_fbbc, label %.thread497, label %bb1801

.thread497:                                       ; preds = %bb1800
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fbc8

bb1801:                                           ; preds = %bb1800
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fbc0 = icmp eq i32 %v0_fbc0.pr, 0
  store i1 %v2_fbc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fbc0, label %dec_label_pc_fbc8, label %dec_label_pc_e818

dec_label_pc_fbc8:                                ; preds = %.thread497, %bb1801, %dec_label_pc_fba0
  store i32 %storemerge1257, i32* %r3.global-to-local, align 4
  %v2_fbcc = icmp ugt i32 %v1_e81c, 183
  store i1 %v2_fbcc, i1* %cpsr_c.global-to-local, align 1
  %v7_fbcc = icmp eq i32 %v1_e81c, 184
  store i1 %v7_fbcc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fbcc, label %.thread500, label %.thread501

.thread501:                                       ; preds = %dec_label_pc_fbc8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fbec

.thread500:                                       ; preds = %dec_label_pc_fbc8
  store i32 %storemerge1257, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fbd8 = icmp eq i1 %v7_f374, false
  store i1 %v2_fbd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fbd8, label %dec_label_pc_fbec, label %dec_label_pc_fbe0

dec_label_pc_fbe0:                                ; preds = %.thread500
  %v2_fbe0 = icmp eq i32 %v1_e834, 255
  store i1 %v2_fbe0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_fbe0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fbe0, label %dec_label_pc_fbec, label %bb1802

bb1802:                                           ; preds = %dec_label_pc_fbe0
  %v3_fbe4 = icmp ugt i32 %v1_e834, 238
  store i1 %v3_fbe4, i1* %cpsr_c.global-to-local, align 1
  %v8_fbe4 = icmp eq i32 %v1_e834, 239
  store i1 %v8_fbe4, i1* %cpsr_z.global-to-local, align 1
  %v2_fbe8 = xor i1 %v8_fbe4, true
  %v3_fbe8 = and i1 %v3_fbe4, %v2_fbe8
  br i1 %v3_fbe8, label %dec_label_pc_e818, label %dec_label_pc_fbec

dec_label_pc_fbec:                                ; preds = %dec_label_pc_fbe0, %.thread501, %bb1802, %.thread500
  %v2_fbec = icmp ugt i32 %v1_e830, 110
  store i1 %v2_fbec, i1* %cpsr_c.global-to-local, align 1
  %v7_fbec = icmp eq i32 %v1_e830, 111
  store i1 %v7_fbec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fbec, label %.thread504, label %.thread505

.thread505:                                       ; preds = %dec_label_pc_fbec
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fc14

.thread504:                                       ; preds = %dec_label_pc_fbec
  store i32 %.1975, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fbf8 = icmp eq i1 %v7_e8c0, false
  store i1 %v2_fbf8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fbf8, label %dec_label_pc_fc14, label %dec_label_pc_fc00

dec_label_pc_fc00:                                ; preds = %.thread504
  %v2_fc00 = icmp ugt i32 %v1_e834, 141
  store i1 %v2_fc00, i1* %cpsr_c.global-to-local, align 1
  %v7_fc00 = icmp eq i32 %v1_e834, 142
  store i1 %v7_fc00, i1* %cpsr_z.global-to-local, align 1
  %v2_fc04 = xor i1 %v7_fc00, true
  %v3_fc04 = and i1 %v2_fc00, %v2_fc04
  br i1 %v3_fc04, label %bb1803, label %bb1804

bb1803:                                           ; preds = %dec_label_pc_fc00
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1804

bb1804:                                           ; preds = %dec_label_pc_fc00, %bb1803
  %v0_fc0c1009 = phi i32 [ %.1975, %dec_label_pc_fc00 ], [ 0, %bb1803 ]
  %v2_fc08 = xor i1 %v2_fc00, true
  %v3_fc08 = or i1 %v7_fc00, %v2_fc08
  br i1 %v3_fc08, label %bb1805, label %bb1806

bb1805:                                           ; preds = %bb1804
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1806

bb1806:                                           ; preds = %bb1804, %bb1805
  %v0_fc0c = phi i32 [ %v0_fc0c1009, %bb1804 ], [ 1, %bb1805 ]
  %v2_fc0c = and i32 %v3_e824, 64
  %v3_fc0c = icmp ne i32 %v2_fc0c, 0
  store i1 %v3_fc0c, i1* %cpsr_c.global-to-local, align 1
  %v4_fc0c = udiv i32 %v1_e834, 128
  %v5_fc0c = and i32 %v0_fc0c, %v4_fc0c
  store i32 %v5_fc0c, i32* %r3.global-to-local, align 4
  %v6_fc0c = icmp eq i32 %v5_fc0c, 0
  store i1 %v6_fc0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_fc0c, label %dec_label_pc_fc14, label %dec_label_pc_e818

dec_label_pc_fc14:                                ; preds = %.thread505, %bb1806, %.thread504
  %v2_fc14 = icmp ugt i32 %v1_e830, 251
  store i1 %v2_fc14, i1* %cpsr_c.global-to-local, align 1
  %v7_fc14 = icmp eq i32 %v1_e830, 252
  store i1 %v7_fc14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc14, label %.thread508, label %.thread509

.thread509:                                       ; preds = %dec_label_pc_fc14
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fc44

.thread508:                                       ; preds = %dec_label_pc_fc14
  store i32 %.1975, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fc20 = icmp eq i1 %v7_e8c0, false
  store i1 %v2_fc20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fc20, label %dec_label_pc_fc44, label %dec_label_pc_fc28

dec_label_pc_fc28:                                ; preds = %.thread508
  %v2_fc28 = icmp ugt i32 %v1_e834, 206
  store i1 %v2_fc28, i1* %cpsr_c.global-to-local, align 1
  %v7_fc28 = icmp eq i32 %v1_e834, 207
  store i1 %v7_fc28, i1* %cpsr_z.global-to-local, align 1
  %v2_fc2c = xor i1 %v2_fc28, true
  %v3_fc2c = or i1 %v7_fc28, %v2_fc2c
  br i1 %v3_fc2c, label %bb1807, label %bb1808

bb1807:                                           ; preds = %dec_label_pc_fc28
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1808

bb1808:                                           ; preds = %dec_label_pc_fc28, %bb1807
  %v0_fc3c.pr1011 = phi i32 [ %.1975, %dec_label_pc_fc28 ], [ 0, %bb1807 ]
  %v2_fc30 = xor i1 %v7_fc28, true
  %v3_fc30 = and i1 %v2_fc28, %v2_fc30
  br i1 %v3_fc30, label %bb1809, label %bb1810

bb1809:                                           ; preds = %bb1808
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1810

bb1810:                                           ; preds = %bb1808, %bb1809
  %v0_fc3c.pr = phi i32 [ %v0_fc3c.pr1011, %bb1808 ], [ 1, %bb1809 ]
  %v2_fc34 = icmp ugt i32 %v1_e834, 221
  store i1 %v2_fc34, i1* %cpsr_c.global-to-local, align 1
  %v7_fc34 = icmp eq i32 %v1_e834, 222
  store i1 %v7_fc34, i1* %cpsr_z.global-to-local, align 1
  %v2_fc38 = xor i1 %v7_fc34, true
  %v3_fc38 = and i1 %v2_fc34, %v2_fc38
  br i1 %v3_fc38, label %.thread513, label %bb1811

.thread513:                                       ; preds = %bb1810
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fc44

bb1811:                                           ; preds = %bb1810
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fc3c = icmp eq i32 %v0_fc3c.pr, 0
  store i1 %v2_fc3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fc3c, label %dec_label_pc_fc44, label %dec_label_pc_e818

dec_label_pc_fc44:                                ; preds = %.thread513, %.thread509, %bb1811, %.thread508
  %v2_fc44 = icmp ugt i32 %v1_e830, 39
  store i1 %v2_fc44, i1* %cpsr_c.global-to-local, align 1
  %v7_fc44 = icmp eq i32 %v1_e830, 40
  store i1 %v7_fc44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc44, label %.thread516, label %.thread517

.thread517:                                       ; preds = %dec_label_pc_fc44
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fc74

.thread516:                                       ; preds = %dec_label_pc_fc44
  store i32 %.1975, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fc50 = icmp eq i1 %v7_e8c0, false
  store i1 %v2_fc50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fc50, label %dec_label_pc_fc74, label %dec_label_pc_fc58

dec_label_pc_fc58:                                ; preds = %.thread516
  %v2_fc58 = icmp ugt i32 %v1_e834, 54
  store i1 %v2_fc58, i1* %cpsr_c.global-to-local, align 1
  %v7_fc58 = icmp eq i32 %v1_e834, 55
  store i1 %v7_fc58, i1* %cpsr_z.global-to-local, align 1
  %v2_fc5c = xor i1 %v2_fc58, true
  %v3_fc5c = or i1 %v7_fc58, %v2_fc5c
  br i1 %v3_fc5c, label %bb1812, label %bb1813

bb1812:                                           ; preds = %dec_label_pc_fc58
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1813

bb1813:                                           ; preds = %dec_label_pc_fc58, %bb1812
  %v0_fc6c.pr1013 = phi i32 [ %.1975, %dec_label_pc_fc58 ], [ 0, %bb1812 ]
  %v2_fc60 = xor i1 %v7_fc58, true
  %v3_fc60 = and i1 %v2_fc58, %v2_fc60
  br i1 %v3_fc60, label %bb1814, label %bb1815

bb1814:                                           ; preds = %bb1813
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1815

bb1815:                                           ; preds = %bb1813, %bb1814
  %v0_fc6c.pr = phi i32 [ %v0_fc6c.pr1013, %bb1813 ], [ 1, %bb1814 ]
  %v2_fc64 = icmp ugt i32 %v1_e834, 57
  store i1 %v2_fc64, i1* %cpsr_c.global-to-local, align 1
  %v7_fc64 = icmp eq i32 %v1_e834, 58
  store i1 %v7_fc64, i1* %cpsr_z.global-to-local, align 1
  %v2_fc68 = xor i1 %v7_fc64, true
  %v3_fc68 = and i1 %v2_fc64, %v2_fc68
  br i1 %v3_fc68, label %.thread521, label %bb1816

.thread521:                                       ; preds = %bb1815
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fc74

bb1816:                                           ; preds = %bb1815
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fc6c = icmp eq i32 %v0_fc6c.pr, 0
  store i1 %v2_fc6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fc6c, label %dec_label_pc_fc74, label %dec_label_pc_e818

dec_label_pc_fc74:                                ; preds = %.thread521, %.thread517, %bb1816, %.thread516
  store i32 %.2004, i32* %r3.global-to-local, align 4
  %v2_fc78 = icmp ugt i32 %v1_e830, 7
  store i1 %v2_fc78, i1* %cpsr_c.global-to-local, align 1
  %v7_fc78 = icmp eq i32 %v1_e830, 8
  store i1 %v7_fc78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc78, label %.thread524, label %.thread525

.thread525:                                       ; preds = %dec_label_pc_fc74
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fca8

.thread524:                                       ; preds = %dec_label_pc_fc74
  store i32 %.2004, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fc84 = icmp eq i1 %v7_ed1c, false
  store i1 %v2_fc84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fc84, label %dec_label_pc_fca8, label %dec_label_pc_fc8c

dec_label_pc_fc8c:                                ; preds = %.thread524
  %v2_fc8c = icmp ugt i32 %v1_e834, 79
  store i1 %v2_fc8c, i1* %cpsr_c.global-to-local, align 1
  %v7_fc8c = icmp eq i32 %v1_e834, 80
  store i1 %v7_fc8c, i1* %cpsr_z.global-to-local, align 1
  %v2_fc90 = xor i1 %v2_fc8c, true
  %v3_fc90 = or i1 %v7_fc8c, %v2_fc90
  br i1 %v3_fc90, label %bb1817, label %bb1818

bb1817:                                           ; preds = %dec_label_pc_fc8c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1818

bb1818:                                           ; preds = %dec_label_pc_fc8c, %bb1817
  %v0_fca0.pr1016 = phi i32 [ %.2004, %dec_label_pc_fc8c ], [ 0, %bb1817 ]
  %v2_fc94 = xor i1 %v7_fc8c, true
  %v3_fc94 = and i1 %v2_fc8c, %v2_fc94
  br i1 %v3_fc94, label %bb1819, label %bb1820

bb1819:                                           ; preds = %bb1818
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1820

bb1820:                                           ; preds = %bb1818, %bb1819
  %v0_fca0.pr = phi i32 [ %v0_fca0.pr1016, %bb1818 ], [ 1, %bb1819 ]
  %v2_fc98 = icmp ugt i32 %v1_e834, 93
  store i1 %v2_fc98, i1* %cpsr_c.global-to-local, align 1
  %v7_fc98 = icmp eq i32 %v1_e834, 94
  store i1 %v7_fc98, i1* %cpsr_z.global-to-local, align 1
  %v2_fc9c = xor i1 %v7_fc98, true
  %v3_fc9c = and i1 %v2_fc98, %v2_fc9c
  br i1 %v3_fc9c, label %.thread529, label %bb1821

.thread529:                                       ; preds = %bb1820
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fca8

bb1821:                                           ; preds = %bb1820
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fca0 = icmp eq i32 %v0_fca0.pr, 0
  store i1 %v2_fca0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fca0, label %dec_label_pc_fca8, label %dec_label_pc_e818

dec_label_pc_fca8:                                ; preds = %.thread529, %.thread525, %bb1821, %.thread524
  store i32 %.2016, i32* %r3.global-to-local, align 4
  %v2_fcac = icmp ugt i32 %v1_e830, 115
  store i1 %v2_fcac, i1* %cpsr_c.global-to-local, align 1
  %v7_fcac = icmp eq i32 %v1_e830, 116
  store i1 %v7_fcac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fcac, label %.thread532, label %.thread533

.thread533:                                       ; preds = %dec_label_pc_fca8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fcdc

.thread532:                                       ; preds = %dec_label_pc_fca8
  store i32 %.2016, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fcb8 = icmp eq i1 %v7_f200, false
  store i1 %v2_fcb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fcb8, label %dec_label_pc_fcdc, label %dec_label_pc_fcc0

dec_label_pc_fcc0:                                ; preds = %.thread532
  %v2_fcc0 = icmp ugt i32 %v1_e834, 110
  store i1 %v2_fcc0, i1* %cpsr_c.global-to-local, align 1
  %v7_fcc0 = icmp eq i32 %v1_e834, 111
  store i1 %v7_fcc0, i1* %cpsr_z.global-to-local, align 1
  %v2_fcc4 = xor i1 %v2_fcc0, true
  %v3_fcc4 = or i1 %v7_fcc0, %v2_fcc4
  br i1 %v3_fcc4, label %bb1822, label %bb1823

bb1822:                                           ; preds = %dec_label_pc_fcc0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1823

bb1823:                                           ; preds = %dec_label_pc_fcc0, %bb1822
  %v0_fcd4.pr1019 = phi i32 [ %.2016, %dec_label_pc_fcc0 ], [ 0, %bb1822 ]
  %v2_fcc8 = xor i1 %v7_fcc0, true
  %v3_fcc8 = and i1 %v2_fcc0, %v2_fcc8
  br i1 %v3_fcc8, label %bb1824, label %bb1825

bb1824:                                           ; preds = %bb1823
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1825

bb1825:                                           ; preds = %bb1823, %bb1824
  %v0_fcd4.pr = phi i32 [ %v0_fcd4.pr1019, %bb1823 ], [ 1, %bb1824 ]
  %v2_fccc = icmp ugt i32 %v1_e834, 117
  store i1 %v2_fccc, i1* %cpsr_c.global-to-local, align 1
  %v7_fccc = icmp eq i32 %v1_e834, 118
  store i1 %v7_fccc, i1* %cpsr_z.global-to-local, align 1
  %v2_fcd0 = xor i1 %v7_fccc, true
  %v3_fcd0 = and i1 %v2_fccc, %v2_fcd0
  br i1 %v3_fcd0, label %.thread537, label %bb1826

.thread537:                                       ; preds = %bb1825
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fcdc

bb1826:                                           ; preds = %bb1825
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fcd4 = icmp eq i32 %v0_fcd4.pr, 0
  store i1 %v2_fcd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fcd4, label %dec_label_pc_fcdc, label %dec_label_pc_e818

dec_label_pc_fcdc:                                ; preds = %.thread537, %.thread533, %bb1826, %.thread532
  %v2_fce4 = and i32 %.1986, %.2016
  %v4_fce4 = icmp eq i32 %v2_fce4, 0
  store i1 %v4_fce4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fce4, label %dec_label_pc_fcf8, label %dec_label_pc_fcec

dec_label_pc_fcec:                                ; preds = %dec_label_pc_fcdc
  %v2_fcec = icmp eq i32 %v1_e834, 255
  store i1 %v2_fcec, i1* %cpsr_c.global-to-local, align 1
  %v7_fcec = icmp eq i32 %v1_e834, 255
  store i1 %v7_fcec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fcec, label %dec_label_pc_fcf8, label %bb1827

bb1827:                                           ; preds = %dec_label_pc_fcec
  %v3_fcf0 = icmp ugt i32 %v1_e834, 246
  store i1 %v3_fcf0, i1* %cpsr_c.global-to-local, align 1
  %v8_fcf0 = icmp eq i32 %v1_e834, 247
  store i1 %v8_fcf0, i1* %cpsr_z.global-to-local, align 1
  %v2_fcf4 = xor i1 %v8_fcf0, true
  %v3_fcf4 = and i1 %v3_fcf0, %v2_fcf4
  br i1 %v3_fcf4, label %dec_label_pc_e818, label %dec_label_pc_fcf8

dec_label_pc_fcf8:                                ; preds = %dec_label_pc_fcec, %bb1827, %dec_label_pc_fcdc
  store i32 %.2016, i32* %r3.global-to-local, align 4
  %v2_fcfc = icmp ugt i32 %v1_e830, 35
  store i1 %v2_fcfc, i1* %cpsr_c.global-to-local, align 1
  %v7_fcfc = icmp eq i32 %v1_e830, 36
  store i1 %v7_fcfc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fcfc, label %.thread540, label %.thread541

.thread541:                                       ; preds = %dec_label_pc_fcf8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fd2c

.thread540:                                       ; preds = %dec_label_pc_fcf8
  store i32 %.2016, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fd08 = icmp eq i1 %v7_f200, false
  store i1 %v2_fd08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fd08, label %dec_label_pc_fd2c, label %dec_label_pc_fd10

dec_label_pc_fd10:                                ; preds = %.thread540
  %v2_fd10 = icmp ugt i32 %v1_e834, 218
  store i1 %v2_fd10, i1* %cpsr_c.global-to-local, align 1
  %v7_fd10 = icmp eq i32 %v1_e834, 219
  store i1 %v7_fd10, i1* %cpsr_z.global-to-local, align 1
  %v2_fd14 = xor i1 %v2_fd10, true
  %v3_fd14 = or i1 %v7_fd10, %v2_fd14
  br i1 %v3_fd14, label %bb1828, label %bb1829

bb1828:                                           ; preds = %dec_label_pc_fd10
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1829

bb1829:                                           ; preds = %dec_label_pc_fd10, %bb1828
  %v0_fd24.pr1024 = phi i32 [ %.2016, %dec_label_pc_fd10 ], [ 0, %bb1828 ]
  %v2_fd18 = xor i1 %v7_fd10, true
  %v3_fd18 = and i1 %v2_fd10, %v2_fd18
  br i1 %v3_fd18, label %bb1830, label %bb1831

bb1830:                                           ; preds = %bb1829
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1831

bb1831:                                           ; preds = %bb1829, %bb1830
  %v0_fd24.pr = phi i32 [ %v0_fd24.pr1024, %bb1829 ], [ 1, %bb1830 ]
  %v2_fd1c = icmp ugt i32 %v1_e834, 221
  store i1 %v2_fd1c, i1* %cpsr_c.global-to-local, align 1
  %v7_fd1c = icmp eq i32 %v1_e834, 222
  store i1 %v7_fd1c, i1* %cpsr_z.global-to-local, align 1
  %v2_fd20 = xor i1 %v7_fd1c, true
  %v3_fd20 = and i1 %v2_fd1c, %v2_fd20
  br i1 %v3_fd20, label %.thread545, label %bb1832

.thread545:                                       ; preds = %bb1831
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fd2c

bb1832:                                           ; preds = %bb1831
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fd24 = icmp eq i32 %v0_fd24.pr, 0
  store i1 %v2_fd24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fd24, label %dec_label_pc_fd2c, label %dec_label_pc_e818

dec_label_pc_fd2c:                                ; preds = %.thread545, %.thread541, %bb1832, %.thread540
  store i32 %.2016, i32* %r3.global-to-local, align 4
  %v2_fd30 = icmp ugt i32 %v1_e830, 57
  store i1 %v2_fd30, i1* %cpsr_c.global-to-local, align 1
  %v7_fd30 = icmp eq i32 %v1_e830, 58
  store i1 %v7_fd30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fd30, label %.thread548, label %.thread549

.thread549:                                       ; preds = %dec_label_pc_fd2c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fd60

.thread548:                                       ; preds = %dec_label_pc_fd2c
  store i32 %.2016, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fd3c = icmp eq i1 %v7_f200, false
  store i1 %v2_fd3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fd3c, label %dec_label_pc_fd60, label %dec_label_pc_fd44

dec_label_pc_fd44:                                ; preds = %.thread548
  %v2_fd44 = icmp ugt i32 %v1_e834, 182
  store i1 %v2_fd44, i1* %cpsr_c.global-to-local, align 1
  %v7_fd44 = icmp eq i32 %v1_e834, 183
  store i1 %v7_fd44, i1* %cpsr_z.global-to-local, align 1
  %v2_fd48 = xor i1 %v2_fd44, true
  %v3_fd48 = or i1 %v7_fd44, %v2_fd48
  br i1 %v3_fd48, label %bb1833, label %bb1834

bb1833:                                           ; preds = %dec_label_pc_fd44
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1834

bb1834:                                           ; preds = %dec_label_pc_fd44, %bb1833
  %v0_fd58.pr1027 = phi i32 [ %.2016, %dec_label_pc_fd44 ], [ 0, %bb1833 ]
  %v2_fd4c = xor i1 %v7_fd44, true
  %v3_fd4c = and i1 %v2_fd44, %v2_fd4c
  br i1 %v3_fd4c, label %bb1835, label %bb1836

bb1835:                                           ; preds = %bb1834
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1836

bb1836:                                           ; preds = %bb1834, %bb1835
  %v0_fd58.pr = phi i32 [ %v0_fd58.pr1027, %bb1834 ], [ 1, %bb1835 ]
  %v2_fd50 = icmp ugt i32 %v1_e834, 185
  store i1 %v2_fd50, i1* %cpsr_c.global-to-local, align 1
  %v7_fd50 = icmp eq i32 %v1_e834, 186
  store i1 %v7_fd50, i1* %cpsr_z.global-to-local, align 1
  %v2_fd54 = xor i1 %v7_fd50, true
  %v3_fd54 = and i1 %v2_fd50, %v2_fd54
  br i1 %v3_fd54, label %.thread553, label %bb1837

.thread553:                                       ; preds = %bb1836
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fd60

bb1837:                                           ; preds = %bb1836
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fd58 = icmp eq i32 %v0_fd58.pr, 0
  store i1 %v2_fd58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fd58, label %dec_label_pc_fd60, label %dec_label_pc_e818

dec_label_pc_fd60:                                ; preds = %.thread553, %.thread549, %bb1837, %.thread548
  %v2_fd60 = icmp ugt i32 %v1_e81c, 205
  store i1 %v2_fd60, i1* %cpsr_c.global-to-local, align 1
  %v7_fd60 = icmp eq i32 %v1_e81c, 206
  store i1 %v7_fd60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fd60, label %bb1838, label %dec_label_pc_fd88

bb1838:                                           ; preds = %dec_label_pc_fd60
  %v3_fd64 = icmp ugt i32 %v1_e830, 219
  store i1 %v3_fd64, i1* %cpsr_c.global-to-local, align 1
  %v8_fd64 = icmp eq i32 %v1_e830, 220
  store i1 %v8_fd64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fd64, label %dec_label_pc_fd6c, label %dec_label_pc_fd88

dec_label_pc_fd6c:                                ; preds = %bb1838
  %v2_fd6c = icmp ugt i32 %v1_e834, 170
  store i1 %v2_fd6c, i1* %cpsr_c.global-to-local, align 1
  %v7_fd6c = icmp eq i32 %v1_e834, 171
  store i1 %v7_fd6c, i1* %cpsr_z.global-to-local, align 1
  %v2_fd70 = xor i1 %v2_fd6c, true
  %v3_fd70 = or i1 %v7_fd6c, %v2_fd70
  br i1 %v3_fd70, label %bb1839, label %bb1840

bb1839:                                           ; preds = %dec_label_pc_fd6c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1840

bb1840:                                           ; preds = %dec_label_pc_fd6c, %bb1839
  %v2_fd74 = xor i1 %v7_fd6c, true
  %v3_fd74 = and i1 %v2_fd6c, %v2_fd74
  br i1 %v3_fd74, label %bb1841, label %bb1842

bb1841:                                           ; preds = %bb1840
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1842

bb1842:                                           ; preds = %bb1840, %bb1841
  %v0_fd80.pr = phi i32 [ 0, %bb1840 ], [ 1, %bb1841 ]
  %v2_fd78 = icmp ugt i32 %v1_e834, 173
  store i1 %v2_fd78, i1* %cpsr_c.global-to-local, align 1
  %v7_fd78 = icmp eq i32 %v1_e834, 174
  store i1 %v7_fd78, i1* %cpsr_z.global-to-local, align 1
  %v2_fd7c = xor i1 %v7_fd78, true
  %v3_fd7c = and i1 %v2_fd78, %v2_fd7c
  br i1 %v3_fd7c, label %.thread558, label %bb1843

.thread558:                                       ; preds = %bb1842
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fd88

bb1843:                                           ; preds = %bb1842
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fd80 = icmp eq i32 %v0_fd80.pr, 0
  store i1 %v2_fd80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fd80, label %dec_label_pc_fd88, label %dec_label_pc_e818

dec_label_pc_fd88:                                ; preds = %dec_label_pc_fd60, %.thread558, %bb1843, %bb1838
  store i32 %.2027, i32* %r3.global-to-local, align 4
  %v2_fd8c = icmp ugt i32 %v1_e830, 77
  store i1 %v2_fd8c, i1* %cpsr_c.global-to-local, align 1
  %v7_fd8c = icmp eq i32 %v1_e830, 78
  store i1 %v7_fd8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fd8c, label %.thread561, label %.thread562

.thread562:                                       ; preds = %dec_label_pc_fd88
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fdbc

.thread561:                                       ; preds = %dec_label_pc_fd88
  store i32 %.2027, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fd98 = icmp eq i1 %v7_f6c8, false
  store i1 %v2_fd98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fd98, label %dec_label_pc_fdbc, label %dec_label_pc_fda0

dec_label_pc_fda0:                                ; preds = %.thread561
  %v2_fda0 = icmp ugt i32 %v1_e834, 38
  store i1 %v2_fda0, i1* %cpsr_c.global-to-local, align 1
  %v7_fda0 = icmp eq i32 %v1_e834, 39
  store i1 %v7_fda0, i1* %cpsr_z.global-to-local, align 1
  %v2_fda4 = xor i1 %v2_fda0, true
  %v3_fda4 = or i1 %v7_fda0, %v2_fda4
  br i1 %v3_fda4, label %bb1844, label %bb1845

bb1844:                                           ; preds = %dec_label_pc_fda0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1845

bb1845:                                           ; preds = %dec_label_pc_fda0, %bb1844
  %v0_fdb4.pr1033 = phi i32 [ %.2027, %dec_label_pc_fda0 ], [ 0, %bb1844 ]
  %v2_fda8 = xor i1 %v7_fda0, true
  %v3_fda8 = and i1 %v2_fda0, %v2_fda8
  br i1 %v3_fda8, label %bb1846, label %bb1847

bb1846:                                           ; preds = %bb1845
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1847

bb1847:                                           ; preds = %bb1845, %bb1846
  %v0_fdb4.pr = phi i32 [ %v0_fdb4.pr1033, %bb1845 ], [ 1, %bb1846 ]
  %v2_fdac = icmp ugt i32 %v1_e834, 41
  store i1 %v2_fdac, i1* %cpsr_c.global-to-local, align 1
  %v7_fdac = icmp eq i32 %v1_e834, 42
  store i1 %v7_fdac, i1* %cpsr_z.global-to-local, align 1
  %v2_fdb0 = xor i1 %v7_fdac, true
  %v3_fdb0 = and i1 %v2_fdac, %v2_fdb0
  br i1 %v3_fdb0, label %.thread566, label %bb1848

.thread566:                                       ; preds = %bb1847
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fdbc

bb1848:                                           ; preds = %bb1847
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fdb4 = icmp eq i32 %v0_fdb4.pr, 0
  store i1 %v2_fdb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fdb4, label %dec_label_pc_fdbc, label %dec_label_pc_e818

dec_label_pc_fdbc:                                ; preds = %.thread566, %.thread562, %bb1848, %.thread561
  store i32 %.2027, i32* %r3.global-to-local, align 4
  %v2_fdc0 = icmp ugt i32 %v1_e830, 92
  store i1 %v2_fdc0, i1* %cpsr_c.global-to-local, align 1
  %v7_fdc0 = icmp eq i32 %v1_e830, 93
  store i1 %v7_fdc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fdc0, label %.thread569, label %.thread570

.thread570:                                       ; preds = %dec_label_pc_fdbc
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fdf0

.thread569:                                       ; preds = %dec_label_pc_fdbc
  store i32 %.2027, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fdcc = icmp eq i1 %v7_f6c8, false
  store i1 %v2_fdcc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fdcc, label %dec_label_pc_fdf0, label %dec_label_pc_fdd4

dec_label_pc_fdd4:                                ; preds = %.thread569
  %v2_fdd4 = icmp ugt i32 %v1_e834, 190
  store i1 %v2_fdd4, i1* %cpsr_c.global-to-local, align 1
  %v7_fdd4 = icmp eq i32 %v1_e834, 191
  store i1 %v7_fdd4, i1* %cpsr_z.global-to-local, align 1
  %v2_fdd8 = xor i1 %v2_fdd4, true
  %v3_fdd8 = or i1 %v7_fdd4, %v2_fdd8
  br i1 %v3_fdd8, label %bb1849, label %bb1850

bb1849:                                           ; preds = %dec_label_pc_fdd4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1850

bb1850:                                           ; preds = %dec_label_pc_fdd4, %bb1849
  %v0_fde8.pr1036 = phi i32 [ %.2027, %dec_label_pc_fdd4 ], [ 0, %bb1849 ]
  %v2_fddc = xor i1 %v7_fdd4, true
  %v3_fddc = and i1 %v2_fdd4, %v2_fddc
  br i1 %v3_fddc, label %bb1851, label %bb1852

bb1851:                                           ; preds = %bb1850
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1852

bb1852:                                           ; preds = %bb1850, %bb1851
  %v0_fde8.pr = phi i32 [ %v0_fde8.pr1036, %bb1850 ], [ 1, %bb1851 ]
  %v2_fde0 = icmp ugt i32 %v1_e834, 191
  store i1 %v2_fde0, i1* %cpsr_c.global-to-local, align 1
  %v7_fde0 = icmp eq i32 %v1_e834, 192
  store i1 %v7_fde0, i1* %cpsr_z.global-to-local, align 1
  %v2_fde4 = xor i1 %v7_fde0, true
  %v3_fde4 = and i1 %v2_fde0, %v2_fde4
  br i1 %v3_fde4, label %.thread574, label %bb1853

.thread574:                                       ; preds = %bb1852
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fdf0

bb1853:                                           ; preds = %bb1852
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fde8 = icmp eq i32 %v0_fde8.pr, 0
  store i1 %v2_fde8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fde8, label %dec_label_pc_fdf0, label %dec_label_pc_e818

dec_label_pc_fdf0:                                ; preds = %.thread574, %.thread570, %bb1853, %.thread569
  store i32 %.2028, i32* %r3.global-to-local, align 4
  %v2_fdf4 = icmp ugt i32 %v1_e830, 70
  store i1 %v2_fdf4, i1* %cpsr_c.global-to-local, align 1
  %v7_fdf4 = icmp eq i32 %v1_e830, 71
  store i1 %v7_fdf4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fdf4, label %.thread577, label %.thread578

.thread578:                                       ; preds = %dec_label_pc_fdf0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fe14

.thread577:                                       ; preds = %dec_label_pc_fdf0
  store i32 %.2028, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fe00 = icmp eq i1 %v7_f704, false
  store i1 %v2_fe00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe00, label %dec_label_pc_fe14, label %dec_label_pc_fe08

dec_label_pc_fe08:                                ; preds = %.thread577
  %v2_fe08 = icmp eq i32 %v1_e834, 255
  store i1 %v2_fe08, i1* %cpsr_c.global-to-local, align 1
  %v7_fe08 = icmp eq i32 %v1_e834, 255
  store i1 %v7_fe08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe08, label %dec_label_pc_fe14, label %bb1854

bb1854:                                           ; preds = %dec_label_pc_fe08
  %v3_fe0c = icmp ugt i32 %v1_e834, 238
  store i1 %v3_fe0c, i1* %cpsr_c.global-to-local, align 1
  %v8_fe0c = icmp eq i32 %v1_e834, 239
  store i1 %v8_fe0c, i1* %cpsr_z.global-to-local, align 1
  %v2_fe10 = xor i1 %v8_fe0c, true
  %v3_fe10 = and i1 %v3_fe0c, %v2_fe10
  br i1 %v3_fe10, label %dec_label_pc_e818, label %dec_label_pc_fe14

dec_label_pc_fe14:                                ; preds = %dec_label_pc_fe08, %.thread578, %bb1854, %.thread577
  %v0_fe34.pr1042 = phi i32 [ 0, %.thread578 ], [ %.2028, %bb1854 ], [ 0, %.thread577 ], [ %.2028, %dec_label_pc_fe08 ]
  %v2_fe14 = icmp ugt i32 %v1_e81c, 97
  store i1 %v2_fe14, i1* %cpsr_c.global-to-local, align 1
  %v7_fe14 = icmp eq i32 %v1_e81c, 98
  store i1 %v7_fe14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe14, label %bb1855, label %dec_label_pc_fe3c

bb1855:                                           ; preds = %dec_label_pc_fe14
  %v3_fe18 = icmp ugt i32 %v1_e830, 141
  store i1 %v3_fe18, i1* %cpsr_c.global-to-local, align 1
  %v8_fe18 = icmp eq i32 %v1_e830, 142
  store i1 %v8_fe18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fe18, label %dec_label_pc_fe20, label %dec_label_pc_fe3c

dec_label_pc_fe20:                                ; preds = %bb1855
  %v2_fe20 = icmp ugt i32 %v1_e834, 206
  store i1 %v2_fe20, i1* %cpsr_c.global-to-local, align 1
  %v7_fe20 = icmp eq i32 %v1_e834, 207
  store i1 %v7_fe20, i1* %cpsr_z.global-to-local, align 1
  %v2_fe24 = xor i1 %v2_fe20, true
  %v3_fe24 = or i1 %v7_fe20, %v2_fe24
  br i1 %v3_fe24, label %bb1856, label %bb1857

bb1856:                                           ; preds = %dec_label_pc_fe20
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1857

bb1857:                                           ; preds = %dec_label_pc_fe20, %bb1856
  %v0_fe34.pr1041 = phi i32 [ %v0_fe34.pr1042, %dec_label_pc_fe20 ], [ 0, %bb1856 ]
  %v2_fe28 = xor i1 %v7_fe20, true
  %v3_fe28 = and i1 %v2_fe20, %v2_fe28
  br i1 %v3_fe28, label %bb1858, label %bb1859

bb1858:                                           ; preds = %bb1857
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1859

bb1859:                                           ; preds = %bb1857, %bb1858
  %v0_fe34.pr = phi i32 [ %v0_fe34.pr1041, %bb1857 ], [ 1, %bb1858 ]
  %v2_fe2c = icmp ugt i32 %v1_e834, 221
  store i1 %v2_fe2c, i1* %cpsr_c.global-to-local, align 1
  %v7_fe2c = icmp eq i32 %v1_e834, 222
  store i1 %v7_fe2c, i1* %cpsr_z.global-to-local, align 1
  %v2_fe30 = xor i1 %v7_fe2c, true
  %v3_fe30 = and i1 %v2_fe2c, %v2_fe30
  br i1 %v3_fe30, label %.thread583, label %bb1860

.thread583:                                       ; preds = %bb1859
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fe3c

bb1860:                                           ; preds = %bb1859
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fe34 = icmp eq i32 %v0_fe34.pr, 0
  store i1 %v2_fe34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe34, label %dec_label_pc_fe3c, label %dec_label_pc_e818

dec_label_pc_fe3c:                                ; preds = %dec_label_pc_fe14, %.thread583, %bb1860, %bb1855
  store i32 %.2021, i32* %r3.global-to-local, align 4
  %v2_fe40 = icmp ugt i32 %v1_e830, 18
  store i1 %v2_fe40, i1* %cpsr_c.global-to-local, align 1
  %v7_fe40 = icmp eq i32 %v1_e830, 19
  store i1 %v7_fe40, i1* %cpsr_z.global-to-local, align 1
  %v2_fe44 = xor i1 %v2_fe40, true
  %v3_fe44 = or i1 %v7_fe40, %v2_fe44
  br i1 %v3_fe44, label %bb1861, label %bb1862

bb1861:                                           ; preds = %dec_label_pc_fe3c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1862

bb1862:                                           ; preds = %dec_label_pc_fe3c, %bb1861
  %v4_fe48 = phi i32 [ %.2021, %dec_label_pc_fe3c ], [ 0, %bb1861 ]
  %v2_fe48 = xor i1 %v7_fe40, true
  %v3_fe48 = and i1 %v2_fe40, %v2_fe48
  br i1 %v3_fe48, label %bb1863, label %thread-pre-split586

bb1863:                                           ; preds = %bb1862
  store i32 %v4_fe48, i32* %r3.global-to-local, align 4
  br label %thread-pre-split586

thread-pre-split586:                              ; preds = %bb1862, %bb1863
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fe4c = icmp eq i32 %v4_fe48, 0
  store i1 %v2_fe4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe4c, label %dec_label_pc_fe5c, label %dec_label_pc_fe54

dec_label_pc_fe54:                                ; preds = %thread-pre-split586
  %v2_fe54 = icmp ugt i32 %v1_e830, 22
  store i1 %v2_fe54, i1* %cpsr_c.global-to-local, align 1
  %v7_fe54 = icmp eq i32 %v1_e830, 23
  store i1 %v7_fe54, i1* %cpsr_z.global-to-local, align 1
  %v2_fe58 = xor i1 %v2_fe54, true
  %v3_fe58 = or i1 %v7_fe54, %v2_fe58
  br i1 %v3_fe58, label %dec_label_pc_e818, label %dec_label_pc_fe5c

dec_label_pc_fe5c:                                ; preds = %dec_label_pc_fe54, %thread-pre-split586
  %v7_fe5c = icmp eq i32 %v1_e81c, 35
  %.2034 = zext i1 %v7_fe5c to i32
  store i32 %.2034, i32* %r3.global-to-local, align 4
  store i1 %v2_eb10, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_eb10, i1* %cpsr_z.global-to-local, align 1
  %v2_fe6c = xor i1 %v2_eb10, true
  %v3_fe6c = or i1 %v7_eb10, %v2_fe6c
  br i1 %v3_fe6c, label %.thread589, label %bb1866

.thread589:                                       ; preds = %dec_label_pc_fe5c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fe80

bb1866:                                           ; preds = %dec_label_pc_fe5c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fe70 = icmp eq i1 %v7_fe5c, false
  store i1 %v2_fe70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe70, label %dec_label_pc_fe80, label %dec_label_pc_fe78

dec_label_pc_fe78:                                ; preds = %bb1866
  %v2_fe78 = icmp ugt i32 %v1_e830, 181
  store i1 %v2_fe78, i1* %cpsr_c.global-to-local, align 1
  %v7_fe78 = icmp eq i32 %v1_e830, 182
  store i1 %v7_fe78, i1* %cpsr_z.global-to-local, align 1
  %v2_fe7c = xor i1 %v2_fe78, true
  %v3_fe7c = or i1 %v7_fe78, %v2_fe7c
  br i1 %v3_fe7c, label %dec_label_pc_e818, label %dec_label_pc_fe80

dec_label_pc_fe80:                                ; preds = %.thread589, %dec_label_pc_fe78, %bb1866
  %v2_fe84 = icmp ugt i32 %v1_e81c, 51
  store i1 %v2_fe84, i1* %cpsr_c.global-to-local, align 1
  %v7_fe84 = icmp eq i32 %v1_e81c, 52
  %.2035 = zext i1 %v7_fe84 to i32
  store i32 %.2035, i32* %r3.global-to-local, align 4
  %v2_fe90 = and i32 %.2035, %v0_fe90
  %v4_fe90 = icmp eq i32 %v2_fe90, 0
  store i1 %v4_fe90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fe90, label %dec_label_pc_fea0, label %dec_label_pc_fe98

dec_label_pc_fe98:                                ; preds = %dec_label_pc_fe80
  store i1 %v2_f8c8, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f8c8, i1* %cpsr_z.global-to-local, align 1
  %v2_fe9c = xor i1 %v2_f8c8, true
  %v3_fe9c = or i1 %v7_f8c8, %v2_fe9c
  br i1 %v3_fe9c, label %dec_label_pc_e818, label %dec_label_pc_fea0.thread

dec_label_pc_fea0.thread:                         ; preds = %dec_label_pc_fe98
  store i1 %v2_f8c8, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f8c8, i1* %cpsr_z.global-to-local, align 1
  br label %bb1870

dec_label_pc_fea0:                                ; preds = %dec_label_pc_fe80
  %.pre2180 = xor i1 %v2_f8c8, true
  %.pre2181 = or i1 %v7_f8c8, %.pre2180
  store i1 %v2_f8c8, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f8c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %.pre2181, label %bb1869, label %bb1870

bb1869:                                           ; preds = %dec_label_pc_fea0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1870

bb1870:                                           ; preds = %dec_label_pc_fea0.thread, %dec_label_pc_fea0, %bb1869
  %v4_fea8 = phi i32 [ %.2035, %dec_label_pc_fea0 ], [ 0, %bb1869 ], [ %.2035, %dec_label_pc_fea0.thread ]
  %v3_fea4.pre-phi2183 = phi i1 [ false, %dec_label_pc_fea0 ], [ true, %bb1869 ], [ false, %dec_label_pc_fea0.thread ]
  %v2_fea8 = xor i1 %v7_f8c8, true
  %v3_fea8 = and i1 %v2_f8c8, %v2_fea8
  br i1 %v3_fea8, label %bb1871, label %thread-pre-split593

bb1871:                                           ; preds = %bb1870
  store i32 %v4_fea8, i32* %r3.global-to-local, align 4
  br label %thread-pre-split593

thread-pre-split593:                              ; preds = %bb1870, %bb1871
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_feac = icmp eq i32 %v4_fea8, 0
  store i1 %v2_feac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_feac, label %dec_label_pc_febc, label %dec_label_pc_feb4

dec_label_pc_feb4:                                ; preds = %thread-pre-split593
  %v2_feb4 = icmp eq i32 %v1_e830, 255
  store i1 %v2_feb4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_fab4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fab4, label %dec_label_pc_febc, label %dec_label_pc_e818

dec_label_pc_febc:                                ; preds = %dec_label_pc_feb4, %thread-pre-split593
  %v2_fec0 = icmp ugt i32 %v1_e81c, 53
  store i1 %v2_fec0, i1* %cpsr_c.global-to-local, align 1
  %v7_fec0 = icmp eq i32 %v1_e81c, 54
  %.2036 = zext i1 %v7_fec0 to i32
  store i32 %.2036, i32* %r3.global-to-local, align 4
  %v2_fecc = and i32 %.2036, %v0_fecc
  %v4_fecc = icmp eq i32 %v2_fecc, 0
  store i1 %v4_fecc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fecc, label %dec_label_pc_fedc, label %dec_label_pc_fed4

dec_label_pc_fed4:                                ; preds = %dec_label_pc_febc
  store i1 %v2_f8c8, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f8c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_fea4.pre-phi2183, label %dec_label_pc_e818, label %dec_label_pc_fedc

dec_label_pc_fedc:                                ; preds = %dec_label_pc_fed4, %dec_label_pc_febc
  %v2_fedc = icmp ugt i32 %v1_e830, 142
  store i1 %v2_fedc, i1* %cpsr_c.global-to-local, align 1
  %v7_fedc = icmp eq i32 %v1_e830, 143
  store i1 %v7_fedc, i1* %cpsr_z.global-to-local, align 1
  %v2_fee0 = xor i1 %v2_fedc, true
  %v3_fee0 = or i1 %v7_fedc, %v2_fee0
  br i1 %v3_fee0, label %bb1874, label %bb1875

bb1874:                                           ; preds = %dec_label_pc_fedc
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1875

bb1875:                                           ; preds = %dec_label_pc_fedc, %bb1874
  %v4_fee4 = phi i32 [ %.2036, %dec_label_pc_fedc ], [ 0, %bb1874 ]
  %v2_fee4 = xor i1 %v7_fedc, true
  %v3_fee4 = and i1 %v2_fedc, %v2_fee4
  br i1 %v3_fee4, label %bb1876, label %thread-pre-split595

bb1876:                                           ; preds = %bb1875
  store i32 %v4_fee4, i32* %r3.global-to-local, align 4
  br label %thread-pre-split595

thread-pre-split595:                              ; preds = %bb1875, %bb1876
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fee8 = icmp eq i32 %v4_fee4, 0
  store i1 %v2_fee8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fee8, label %dec_label_pc_fef8, label %dec_label_pc_fef0

dec_label_pc_fef0:                                ; preds = %thread-pre-split595
  %v2_fef0 = icmp eq i32 %v1_e830, 255
  store i1 %v2_fef0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_fab4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fab4, label %dec_label_pc_fef8, label %dec_label_pc_e818

dec_label_pc_fef8:                                ; preds = %dec_label_pc_fef0, %thread-pre-split595
  %v7_fef8 = icmp eq i32 %v1_e81c, 13
  %.2037 = zext i1 %v7_fef8 to i32
  %v2_ff04 = icmp ugt i32 %v1_e830, 50
  store i1 %v2_ff04, i1* %cpsr_c.global-to-local, align 1
  %v7_ff04 = icmp eq i32 %v1_e830, 51
  store i1 %v7_ff04, i1* %cpsr_z.global-to-local, align 1
  %v2_ff08 = xor i1 %v2_ff04, true
  %v3_ff08 = or i1 %v7_ff04, %v2_ff08
  br i1 %v3_ff08, label %bb1879, label %bb1880

bb1879:                                           ; preds = %dec_label_pc_fef8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1880

bb1880:                                           ; preds = %dec_label_pc_fef8, %bb1879
  %v0_ff10.pr = phi i32 [ %v4_fee4, %dec_label_pc_fef8 ], [ 0, %bb1879 ]
  %v2_ff0c = xor i1 %v7_ff04, true
  %v3_ff0c = and i1 %v2_ff04, %v2_ff0c
  br i1 %v3_ff0c, label %bb1881, label %thread-pre-split597

bb1881:                                           ; preds = %bb1880
  store i32 %.2037, i32* %r3.global-to-local, align 4
  br label %thread-pre-split597

thread-pre-split597:                              ; preds = %bb1880, %bb1881
  %v0_ff10 = phi i32 [ %.2037, %bb1881 ], [ %v0_ff10.pr, %bb1880 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ff10 = icmp eq i32 %v0_ff10, 0
  store i1 %v2_ff10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ff10, label %dec_label_pc_ff20, label %dec_label_pc_ff18

dec_label_pc_ff18:                                ; preds = %thread-pre-split597
  store i1 %v2_eb98, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_eb98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_f258, label %dec_label_pc_e818, label %dec_label_pc_ff20

dec_label_pc_ff20:                                ; preds = %dec_label_pc_ff18, %thread-pre-split597
  store i1 %v2_fbec, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_fbec, i1* %cpsr_z.global-to-local, align 1
  %v2_ff24 = xor i1 %v2_fbec, true
  %v3_ff24 = or i1 %v7_fbec, %v2_ff24
  br i1 %v3_ff24, label %bb1882, label %bb1883

bb1882:                                           ; preds = %dec_label_pc_ff20
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1883

bb1883:                                           ; preds = %dec_label_pc_ff20, %bb1882
  %v0_ff2c.pr = phi i32 [ %v0_ff10, %dec_label_pc_ff20 ], [ 0, %bb1882 ]
  %v2_ff28 = xor i1 %v7_fbec, true
  %v3_ff28 = and i1 %v2_fbec, %v2_ff28
  br i1 %v3_ff28, label %bb1884, label %thread-pre-split598

bb1884:                                           ; preds = %bb1883
  store i32 %.2037, i32* %r3.global-to-local, align 4
  br label %thread-pre-split598

thread-pre-split598:                              ; preds = %bb1883, %bb1884
  %v0_ff2c = phi i32 [ %.2037, %bb1884 ], [ %v0_ff2c.pr, %bb1883 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ff2c = icmp eq i32 %v0_ff2c, 0
  store i1 %v2_ff2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ff2c, label %dec_label_pc_ff3c, label %dec_label_pc_ff34

dec_label_pc_ff34:                                ; preds = %thread-pre-split598
  store i1 %v2_e944, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_e944, i1* %cpsr_z.global-to-local, align 1
  %v2_ff38 = xor i1 %v2_e944, true
  %v3_ff38 = or i1 %v7_e944, %v2_ff38
  br i1 %v3_ff38, label %dec_label_pc_e818, label %dec_label_pc_ff3c

dec_label_pc_ff3c:                                ; preds = %dec_label_pc_ff34, %thread-pre-split598
  %v2_ff3c = icmp ugt i32 %v1_e830, 171
  store i1 %v2_ff3c, i1* %cpsr_c.global-to-local, align 1
  %v7_ff3c = icmp eq i32 %v1_e830, 172
  store i1 %v7_ff3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff3c, label %.thread599, label %.thread600

.thread600:                                       ; preds = %dec_label_pc_ff3c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ff50

.thread599:                                       ; preds = %dec_label_pc_ff3c
  store i32 %.2015, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ff48 = icmp eq i1 %v7_f180, false
  store i1 %v2_ff48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ff48, label %dec_label_pc_ff50, label %dec_label_pc_e818

dec_label_pc_ff50:                                ; preds = %.thread600, %.thread599
  %v2_ff50 = icmp ugt i32 %v1_e830, 13
  store i1 %v2_ff50, i1* %cpsr_c.global-to-local, align 1
  %v7_ff50 = icmp eq i32 %v1_e830, 14
  store i1 %v7_ff50, i1* %cpsr_z.global-to-local, align 1
  %v2_ff54 = xor i1 %v2_ff50, true
  %v3_ff54 = or i1 %v7_ff50, %v2_ff54
  br i1 %v3_ff54, label %bb1885, label %bb1886

bb1885:                                           ; preds = %dec_label_pc_ff50
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1886

bb1886:                                           ; preds = %dec_label_pc_ff50, %bb1885
  %v2_ff58 = xor i1 %v7_ff50, true
  %v3_ff58 = and i1 %v2_ff50, %v2_ff58
  br i1 %v3_ff58, label %thread-pre-split603, label %thread-pre-split603.thread

thread-pre-split603.thread:                       ; preds = %bb1886
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10388

thread-pre-split603:                              ; preds = %bb1886
  store i32 %.2032, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ff5c = icmp eq i1 %v7_faa0, false
  store i1 %v2_ff5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ff5c, label %dec_label_pc_10388, label %dec_label_pc_ff64

dec_label_pc_ff64:                                ; preds = %thread-pre-split603
  %v2_ff64 = icmp eq i32 %v1_e830, 255
  store i1 %v2_ff64, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_fab4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fab4, label %dec_label_pc_ff6c, label %dec_label_pc_e818

dec_label_pc_ff6c:                                ; preds = %dec_label_pc_10388, %bb1920, %bb1918, %dec_label_pc_ff64
  %v2_ff6c = icmp ugt i32 %v1_e81c, 211
  store i1 %v2_ff6c, i1* %cpsr_c.global-to-local, align 1
  %v7_ff6c = icmp eq i32 %v1_e81c, 212
  store i1 %v7_ff6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff6c, label %.thread604, label %.thread605

.thread605:                                       ; preds = %dec_label_pc_ff6c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ff8c

.thread604:                                       ; preds = %dec_label_pc_ff6c
  store i32 %.2022, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ff78 = icmp eq i1 %v7_f3f0, false
  store i1 %v2_ff78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ff78, label %dec_label_pc_ff8c, label %dec_label_pc_ff80

dec_label_pc_ff80:                                ; preds = %.thread604
  %v2_ff80 = icmp eq i32 %v1_e834, 255
  store i1 %v2_ff80, i1* %cpsr_c.global-to-local, align 1
  %v7_ff80 = icmp eq i32 %v1_e834, 255
  store i1 %v7_ff80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff80, label %dec_label_pc_ff8c, label %bb1887

bb1887:                                           ; preds = %dec_label_pc_ff80
  %v3_ff84 = icmp ugt i32 %v1_e834, 222
  store i1 %v3_ff84, i1* %cpsr_c.global-to-local, align 1
  %v8_ff84 = icmp eq i32 %v1_e834, 223
  store i1 %v8_ff84, i1* %cpsr_z.global-to-local, align 1
  %v2_ff88 = xor i1 %v8_ff84, true
  %v3_ff88 = and i1 %v3_ff84, %v2_ff88
  br i1 %v3_ff88, label %dec_label_pc_e818, label %dec_label_pc_ff8c

dec_label_pc_ff8c:                                ; preds = %dec_label_pc_ff80, %.thread605, %bb1887, %.thread604
  store i32 %.1995, i32* %r3.global-to-local, align 4
  %v2_ff90 = icmp ugt i32 %v1_e81c, 88
  store i1 %v2_ff90, i1* %cpsr_c.global-to-local, align 1
  %v7_ff90 = icmp eq i32 %v1_e81c, 89
  store i1 %v7_ff90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff90, label %.thread608, label %.thread609

.thread609:                                       ; preds = %dec_label_pc_ff8c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ffc0

.thread608:                                       ; preds = %dec_label_pc_ff8c
  store i32 %.1995, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ff9c = icmp eq i1 %v7_ebb4, false
  store i1 %v2_ff9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ff9c, label %dec_label_pc_ffc0, label %dec_label_pc_ffa4

dec_label_pc_ffa4:                                ; preds = %.thread608
  %v2_ffa4 = icmp ugt i32 %v1_e834, 94
  store i1 %v2_ffa4, i1* %cpsr_c.global-to-local, align 1
  %v7_ffa4 = icmp eq i32 %v1_e834, 95
  store i1 %v7_ffa4, i1* %cpsr_z.global-to-local, align 1
  %v2_ffa8 = xor i1 %v2_ffa4, true
  %v3_ffa8 = or i1 %v7_ffa4, %v2_ffa8
  br i1 %v3_ffa8, label %bb1888, label %bb1889

bb1888:                                           ; preds = %dec_label_pc_ffa4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1889

bb1889:                                           ; preds = %dec_label_pc_ffa4, %bb1888
  %v0_ffb8.pr1059 = phi i32 [ %.1995, %dec_label_pc_ffa4 ], [ 0, %bb1888 ]
  %v2_ffac = xor i1 %v7_ffa4, true
  %v3_ffac = and i1 %v2_ffa4, %v2_ffac
  br i1 %v3_ffac, label %bb1890, label %bb1891

bb1890:                                           ; preds = %bb1889
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1891

bb1891:                                           ; preds = %bb1889, %bb1890
  %v0_ffb8.pr = phi i32 [ %v0_ffb8.pr1059, %bb1889 ], [ 1, %bb1890 ]
  %v2_ffb0 = icmp ugt i32 %v1_e834, 95
  store i1 %v2_ffb0, i1* %cpsr_c.global-to-local, align 1
  %v7_ffb0 = icmp eq i32 %v1_e834, 96
  store i1 %v7_ffb0, i1* %cpsr_z.global-to-local, align 1
  %v2_ffb4 = xor i1 %v7_ffb0, true
  %v3_ffb4 = and i1 %v2_ffb0, %v2_ffb4
  br i1 %v3_ffb4, label %.thread613, label %bb1892

.thread613:                                       ; preds = %bb1891
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ffc0

bb1892:                                           ; preds = %bb1891
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ffb8 = icmp eq i32 %v0_ffb8.pr, 0
  store i1 %v2_ffb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ffb8, label %dec_label_pc_ffc0, label %dec_label_pc_e818

dec_label_pc_ffc0:                                ; preds = %.thread613, %.thread609, %bb1892, %.thread608
  %v7_ffc0 = icmp eq i32 %v1_e81c, 219
  %.2038 = zext i1 %v7_ffc0 to i32
  store i32 %.2038, i32* %r3.global-to-local, align 4
  %v2_ffcc = icmp ugt i32 %v1_e830, 214
  store i1 %v2_ffcc, i1* %cpsr_c.global-to-local, align 1
  %v7_ffcc = icmp eq i32 %v1_e830, 215
  store i1 %v7_ffcc, i1* %cpsr_z.global-to-local, align 1
  %v2_ffd0 = xor i1 %v2_ffcc, true
  %v3_ffd0 = or i1 %v7_ffcc, %v2_ffd0
  br i1 %v3_ffd0, label %.thread618, label %bb1895

.thread618:                                       ; preds = %dec_label_pc_ffc0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ffe4

bb1895:                                           ; preds = %dec_label_pc_ffc0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ffd4 = icmp eq i1 %v7_ffc0, false
  store i1 %v2_ffd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ffd4, label %dec_label_pc_ffe4, label %dec_label_pc_ffdc

dec_label_pc_ffdc:                                ; preds = %bb1895
  %v2_ffdc = icmp ugt i32 %v1_e830, 229
  store i1 %v2_ffdc, i1* %cpsr_c.global-to-local, align 1
  %v7_ffdc = icmp eq i32 %v1_e830, 230
  store i1 %v7_ffdc, i1* %cpsr_z.global-to-local, align 1
  %v2_ffe0 = xor i1 %v2_ffdc, true
  %v3_ffe0 = or i1 %v7_ffdc, %v2_ffe0
  br i1 %v3_ffe0, label %dec_label_pc_e818, label %dec_label_pc_ffe4

dec_label_pc_ffe4:                                ; preds = %.thread618, %dec_label_pc_ffdc, %bb1895
  %v7_ffe4 = icmp eq i32 %v1_e81c, 23
  %.2039 = zext i1 %v7_ffe4 to i32
  store i32 %.2039, i32* %r3.global-to-local, align 4
  store i1 %v2_fdc0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_fdc0, i1* %cpsr_z.global-to-local, align 1
  %v2_fff4 = xor i1 %v2_fdc0, true
  %v3_fff4 = or i1 %v7_fdc0, %v2_fff4
  br i1 %v3_fff4, label %.thread623, label %bb1898

.thread623:                                       ; preds = %dec_label_pc_ffe4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10008

bb1898:                                           ; preds = %dec_label_pc_ffe4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fff8 = icmp eq i1 %v7_ffe4, false
  store i1 %v2_fff8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fff8, label %dec_label_pc_10008, label %dec_label_pc_10000

dec_label_pc_10000:                               ; preds = %bb1898
  %v2_10000 = icmp ugt i32 %v1_e830, 107
  store i1 %v2_10000, i1* %cpsr_c.global-to-local, align 1
  %v7_10000 = icmp eq i32 %v1_e830, 108
  store i1 %v7_10000, i1* %cpsr_z.global-to-local, align 1
  %v2_10004 = xor i1 %v2_10000, true
  %v3_10004 = or i1 %v7_10000, %v2_10004
  br i1 %v3_10004, label %dec_label_pc_e818, label %dec_label_pc_10008

dec_label_pc_10008:                               ; preds = %.thread623, %dec_label_pc_10000, %bb1898
  store i32 %.2020, i32* %r3.global-to-local, align 4
  store i1 %v2_f788, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f788, i1* %cpsr_z.global-to-local, align 1
  %v2_10010 = xor i1 %v2_f788, true
  %v3_10010 = or i1 %v7_f788, %v2_10010
  br i1 %v3_10010, label %bb1899, label %bb1900

bb1899:                                           ; preds = %dec_label_pc_10008
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1900

bb1900:                                           ; preds = %dec_label_pc_10008, %bb1899
  %v4_10014 = phi i32 [ %.2020, %dec_label_pc_10008 ], [ 0, %bb1899 ]
  %v2_10014 = xor i1 %v7_f788, true
  %v3_10014 = and i1 %v2_f788, %v2_10014
  br i1 %v3_10014, label %bb1901, label %thread-pre-split626

bb1901:                                           ; preds = %bb1900
  store i32 %v4_10014, i32* %r3.global-to-local, align 4
  br label %thread-pre-split626

thread-pre-split626:                              ; preds = %bb1900, %bb1901
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10018 = icmp eq i32 %v4_10014, 0
  store i1 %v2_10018, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10018, label %dec_label_pc_10028, label %dec_label_pc_10020

dec_label_pc_10020:                               ; preds = %thread-pre-split626
  store i1 %v2_f31c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f31c, i1* %cpsr_z.global-to-local, align 1
  %v2_10024 = xor i1 %v2_f31c, true
  %v3_10024 = or i1 %v7_f31c, %v2_10024
  br i1 %v3_10024, label %dec_label_pc_e818, label %dec_label_pc_10028

dec_label_pc_10028:                               ; preds = %dec_label_pc_10020, %thread-pre-split626
  %v7_10028 = icmp eq i32 %v1_e81c, 106
  %.2040 = zext i1 %v7_10028 to i32
  store i32 %.2040, i32* %r3.global-to-local, align 4
  store i1 %v2_fb70, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_fb70, i1* %cpsr_z.global-to-local, align 1
  %v2_10038 = xor i1 %v2_fb70, true
  %v3_10038 = or i1 %v7_fb70, %v2_10038
  br i1 %v3_10038, label %.thread629, label %bb1904

.thread629:                                       ; preds = %dec_label_pc_10028
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1004c

bb1904:                                           ; preds = %dec_label_pc_10028
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1003c = icmp eq i1 %v7_10028, false
  store i1 %v2_1003c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1003c, label %dec_label_pc_1004c, label %dec_label_pc_10044

dec_label_pc_10044:                               ; preds = %bb1904
  %v2_10044 = icmp ugt i32 %v1_e830, 187
  store i1 %v2_10044, i1* %cpsr_c.global-to-local, align 1
  %v7_10044 = icmp eq i32 %v1_e830, 188
  store i1 %v7_10044, i1* %cpsr_z.global-to-local, align 1
  %v2_10048 = xor i1 %v2_10044, true
  %v3_10048 = or i1 %v7_10044, %v2_10048
  br i1 %v3_10048, label %dec_label_pc_e818, label %dec_label_pc_1004c

dec_label_pc_1004c:                               ; preds = %.thread629, %dec_label_pc_10044, %bb1904
  %v7_1004c = icmp eq i32 %v1_e81c, 34
  %.2041 = zext i1 %v7_1004c to i32
  store i32 %.2041, i32* %r3.global-to-local, align 4
  %v2_10058 = icmp ugt i32 %v1_e830, 243
  store i1 %v2_10058, i1* %cpsr_c.global-to-local, align 1
  %v7_10058 = icmp eq i32 %v1_e830, 244
  store i1 %v7_10058, i1* %cpsr_z.global-to-local, align 1
  %v2_1005c = xor i1 %v2_10058, true
  %v3_1005c = or i1 %v7_10058, %v2_1005c
  br i1 %v3_1005c, label %.thread634, label %bb1907

.thread634:                                       ; preds = %dec_label_pc_1004c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10070

bb1907:                                           ; preds = %dec_label_pc_1004c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10060 = icmp eq i1 %v7_1004c, false
  store i1 %v2_10060, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10060, label %dec_label_pc_10070, label %dec_label_pc_10068

dec_label_pc_10068:                               ; preds = %bb1907
  %v2_10068 = icmp eq i32 %v1_e830, 255
  store i1 %v2_10068, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_fab4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fab4, label %dec_label_pc_10070, label %dec_label_pc_e818

dec_label_pc_10070:                               ; preds = %.thread634, %dec_label_pc_10068, %bb1907
  %v7_10070 = icmp eq i32 %v1_e81c, 87
  %.2042 = zext i1 %v7_10070 to i32
  store i32 %.2042, i32* %r3.global-to-local, align 4
  store i1 %v2_eabc, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_eabc, i1* %cpsr_z.global-to-local, align 1
  %v2_10080 = xor i1 %v2_eabc, true
  %v3_10080 = or i1 %v7_eabc, %v2_10080
  br i1 %v3_10080, label %.thread639, label %bb1910

.thread639:                                       ; preds = %dec_label_pc_10070
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10094

bb1910:                                           ; preds = %dec_label_pc_10070
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10084 = icmp eq i1 %v7_10070, false
  store i1 %v2_10084, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10084, label %dec_label_pc_10094, label %dec_label_pc_1008c

dec_label_pc_1008c:                               ; preds = %bb1910
  store i1 %v2_e904, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_e904, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_ef34, label %dec_label_pc_e818, label %dec_label_pc_10094

dec_label_pc_10094:                               ; preds = %.thread639, %dec_label_pc_1008c, %bb1910
  %v7_10094 = icmp eq i32 %v1_e81c, 86
  %.2043 = zext i1 %v7_10094 to i32
  store i32 %.2043, i32* %r3.global-to-local, align 4
  %v2_100a0 = icmp ugt i32 %v1_e830, 207
  store i1 %v2_100a0, i1* %cpsr_c.global-to-local, align 1
  %v7_100a0 = icmp eq i32 %v1_e830, 208
  store i1 %v7_100a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_100a0, label %bb1913, label %dec_label_pc_100ac

bb1913:                                           ; preds = %dec_label_pc_10094
  %v2_10094 = icmp ugt i32 %v1_e81c, 85
  store i1 %v2_10094, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10094, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10094, label %dec_label_pc_e818, label %dec_label_pc_100ac

dec_label_pc_100ac:                               ; preds = %dec_label_pc_10094, %bb1913
  %v2_100ac = and i32 %.2043, %.2031
  %v4_100ac = icmp eq i32 %v2_100ac, 0
  store i1 %v4_100ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_100ac, label %dec_label_pc_100b4, label %dec_label_pc_e818

dec_label_pc_100b4:                               ; preds = %dec_label_pc_100ac
  %v2_100b4 = icmp ugt i32 %v1_e81c, 192
  store i1 %v2_100b4, i1* %cpsr_c.global-to-local, align 1
  %v7_100b4 = icmp eq i32 %v1_e81c, 193
  store i1 %v7_100b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_100b4, label %bb1914, label %dec_label_pc_100c0

bb1914:                                           ; preds = %dec_label_pc_100b4
  store i1 %v2_ef48, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ef48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ef48, label %dec_label_pc_e818, label %dec_label_pc_100c0

dec_label_pc_100c0:                               ; preds = %dec_label_pc_100b4, %bb1914
  store i32 %v1_ef84, i32* %r3.global-to-local, align 4
  %v2_100c4 = icmp ugt i32 %v1_e81c, 119
  store i1 %v2_100c4, i1* %cpsr_c.global-to-local, align 1
  %v7_100c4 = icmp eq i32 %v1_e81c, 120
  store i1 %v7_100c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_100c4, label %.thread645, label %.thread646

.thread646:                                       ; preds = %dec_label_pc_100c0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_100e0

.thread645:                                       ; preds = %dec_label_pc_100c0
  %v2_100cc = urem i32 %v1_ef84, 2
  store i32 %v2_100cc, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_100d0 = icmp eq i32 %v2_100cc, 0
  store i1 %v2_100d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_100d0, label %dec_label_pc_100e0, label %dec_label_pc_100d8

dec_label_pc_100d8:                               ; preds = %.thread645
  %v2_100d8 = icmp ugt i32 %v1_e830, 106
  store i1 %v2_100d8, i1* %cpsr_c.global-to-local, align 1
  %v7_100d8 = icmp eq i32 %v1_e830, 107
  store i1 %v7_100d8, i1* %cpsr_z.global-to-local, align 1
  %v2_100dc = xor i1 %v2_100d8, true
  %v3_100dc = or i1 %v7_100d8, %v2_100dc
  br i1 %v3_100dc, label %dec_label_pc_e818, label %dec_label_pc_100e0

dec_label_pc_100e0:                               ; preds = %.thread646, %dec_label_pc_100d8, %.thread645
  store i32 %.1992, i32* %r3.global-to-local, align 4
  store i32 %.2018, i32* %r4.global-to-local, align 4
  %v2_100e8 = and i32 %.1992, %.2018
  %v4_100e8 = icmp eq i32 %v2_100e8, 0
  store i1 %v4_100e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_100e8, label %dec_label_pc_100f0, label %dec_label_pc_e818

dec_label_pc_100f0:                               ; preds = %dec_label_pc_100e0
  %v2_100f0 = icmp ugt i32 %v1_e81c, 77
  store i1 %v2_100f0, i1* %cpsr_c.global-to-local, align 1
  %v7_100f0 = icmp eq i32 %v1_e81c, 78
  store i1 %v7_100f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_100f0, label %bb1915, label %dec_label_pc_10104

bb1915:                                           ; preds = %dec_label_pc_100f0
  %v3_100f4 = icmp ugt i32 %v1_e830, 45
  store i1 %v3_100f4, i1* %cpsr_c.global-to-local, align 1
  %v8_100f4 = icmp eq i32 %v1_e830, 46
  store i1 %v8_100f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_100f4, label %.thread651.thread, label %dec_label_pc_10104

.thread651.thread:                                ; preds = %bb1915
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_e818

dec_label_pc_10104:                               ; preds = %bb1915, %dec_label_pc_100f0
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_10104 = icmp ugt i32 %v1_e81c, 223
  store i1 %v2_10104, i1* %cpsr_c.global-to-local, align 1
  %v7_10104 = icmp eq i32 %v1_e81c, 224
  store i1 %v7_10104, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10104, label %dec_label_pc_e818, label %dec_label_pc_1010c

dec_label_pc_1010c:                               ; preds = %dec_label_pc_10104
  %v5_10118 = call i32 @llvm.bswap.i32(i32 %v0_e818)
  store i32 %v5_10118, i32* %r3.global-to-local, align 4
  %v3_10120 = udiv i32 %v5_10118, 16777216
  %v1_1011c = udiv i32 %v5_10118, 256
  %v4_10128 = and i32 %v1_1011c, 65280
  %v1_10124 = mul i32 %v5_10118, 256
  %v4_1012c = and i32 %v1_10124, 16711680
  store i32 ptrtoint (i8** @global_var_18270.133 to i32), i32* @r0, align 4
  %tmp2188 = and i32 %v0_e818, 65536
  %v3_10134 = icmp ne i32 %tmp2188, 0
  store i1 %v3_10134, i1* %cpsr_c.global-to-local, align 1
  %v4_10134 = mul nuw i32 %v3_e838, 16777216
  %v5_10128 = or i32 %v3_10120, %v4_10134
  %v5_1012c = or i32 %v5_10128, %v4_10128
  %v5_10134 = or i32 %v5_1012c, %v4_1012c
  store i32 %v5_10134, i32* %r2.global-to-local, align 4
  store i32 20, i32* %r1.global-to-local, align 4
  store i32 %v5_10134, i32* @global_var_18280.194, align 4
  store i16 0, i16* bitcast (i32* @global_var_1827a.195 to i16*), align 4
  %v3_10144 = call i32 @function_c848(i32 ptrtoint (i8** @global_var_18270.133 to i32), i32 20)
  %v4_10144 = trunc i32 %v3_10144 to i16
  %v3_10150 = load i32, i32* @global_var_18280.194, align 4
  store i32 %v3_10150, i32* %ip.global-to-local, align 4
  store i16 %v4_10144, i16* bitcast (i32* @global_var_1827a.195 to i16*), align 4
  %v0_10158 = load i32, i32* %r4.global-to-local, align 4
  %v1_10158 = trunc i32 %v0_10158 to i16
  store i16 %v1_10158, i16* bitcast (i32* @global_var_18294.197 to i16*), align 4
  store i32 ptrtoint (i32* @global_var_18284.136 to i32), i32* @r1, align 4
  store i32 %v3_10150, i32* @global_var_18288.198, align 4
  store i16 5888, i16* @global_var_18286.141, align 2
  store i32 ptrtoint (i8** @global_var_18270.133 to i32), i32* %r0.global-to-local, align 4
  store i32 5120, i32* %r2.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  %v5_10178 = call i32 @function_c898(i32 ptrtoint (i8** @global_var_18270.133 to i32), i32 ptrtoint (i32* @global_var_18284.136 to i32), i32 5120, i32 20)
  %v6_10178 = trunc i32 %v5_10178 to i16
  %v2_10188 = load i32, i32* @global_var_1a2f4.131, align 4
  store i16 %v6_10178, i16* bitcast (i32* @global_var_18294.197 to i16*), align 4
  store i32 ptrtoint (i8** @global_var_18270.133 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_11118, i32* @r4, align 4
  store i32 2, i32* %stack_var_-96, align 4
  %v3_101b0 = load i16, i16* @global_var_18286.141, align 2
  %v4_101b0 = zext i16 %v3_101b0 to i32
  store i32 %v4_101b0, i32* %ip.global-to-local, align 4
  store i32 %v2_10188, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 40, i32* %r2.global-to-local, align 4
  %v7_101d4 = call i32 @function_12af8(i32 %v2_10188, i32 ptrtoint (i8** @global_var_18270.133 to i32), i32 40, i32 16384, i32 %v2_111e0, i32 16)
  store i32 %v7_101d4, i32* %r0.global-to-local, align 4
  %v3_101d8 = load i32, i32* %stack_var_-52, align 4
  %v1_101dc = add i32 %v3_101d8, 1
  store i32 %v1_101dc, i32* %r3.global-to-local, align 4
  %v3_101e0 = icmp ugt i32 %v1_101dc, 383
  store i1 %v3_101e0, i1* %cpsr_c.global-to-local, align 1
  %v8_101e0 = icmp eq i32 %v1_101dc, 384
  store i1 %v8_101e0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_101dc, i32* %stack_var_-52, align 4
  %v5_101e8 = icmp slt i32 %v1_101dc, 384
  br i1 %v5_101e8, label %dec_label_pc_e7ec, label %dec_label_pc_101ec

dec_label_pc_101ec:                               ; preds = %dec_label_pc_1010c
  store i32 %v2_e7d4, i32* @fp, align 4
  br label %dec_label_pc_101f0

dec_label_pc_101f0:                               ; preds = %dec_label_pc_e7d0, %dec_label_pc_101ec
  %v0_101f0 = call i32 @function_127c4()
  store i32 %v0_101f0, i32* %sb.global-to-local, align 4
  store i32 %v2_e7c8, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v1_10200, i32* @r4, align 4
  br label %dec_label_pc_10204

dec_label_pc_10204:                               ; preds = %dec_label_pc_102b4, %dec_label_pc_102ac, %dec_label_pc_102a4, %dec_label_pc_10280, %dec_label_pc_10274, %dec_label_pc_10264, %dec_label_pc_1024c, %dec_label_pc_1029c, %dec_label_pc_10290, %dec_label_pc_10244, %dec_label_pc_10368, %dec_label_pc_101f0
  %v1_10208 = phi i32 [ %v0_101f0, %dec_label_pc_101f0 ], [ %v1_10208.pre.pre, %dec_label_pc_10368 ], [ %v0_10238, %dec_label_pc_10244 ], [ %v0_10238, %dec_label_pc_10290 ], [ %v0_10238, %dec_label_pc_1029c ], [ %v0_10238, %dec_label_pc_1024c ], [ %v0_10238, %dec_label_pc_10264 ], [ %v0_10238, %dec_label_pc_10274 ], [ %v0_10238, %dec_label_pc_10280 ], [ %v0_10238, %dec_label_pc_102a4 ], [ %v0_10238, %dec_label_pc_102ac ], [ %v0_10238, %dec_label_pc_102b4 ]
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_10208 = inttoptr i32 %v1_10208 to i32*
  store i32 0, i32* %v2_10208, align 4
  %v2_10214 = load i32, i32* @global_var_1a2f4.131, align 4
  store i32 %v2_10214, i32* %r0.global-to-local, align 4
  store i32 1514, i32* %r2.global-to-local, align 4
  store i32 %v2_e7c8, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10224 = load i32, i32* %ip.global-to-local, align 4
  %v6_1022c = call i32 @function_12a84(i32 %v2_10214, i32 %v2_e7c8, i32 1514, i32 16384, i32 %v0_10224, i32 %v0_10224)
  store i32 %v6_1022c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10230 = icmp eq i32 %v6_1022c, 0
  store i1 %v2_10230, i1* %cpsr_z.global-to-local, align 1
  %tmp1917 = icmp slt i32 %v6_1022c, 1
  br i1 %tmp1917, label %dec_label_pc_103a8, label %dec_label_pc_10238

dec_label_pc_10238:                               ; preds = %dec_label_pc_10204
  %v0_10238 = load i32, i32* %sb.global-to-local, align 4
  %v1_10238 = inttoptr i32 %v0_10238 to i32*
  %v2_10238 = load i32, i32* %v1_10238, align 4
  store i32 %v2_10238, i32* %r3.global-to-local, align 4
  %v2_1023c = icmp ugt i32 %v2_10238, 10
  store i1 %v2_1023c, i1* %cpsr_c.global-to-local, align 1
  %v7_1023c = icmp eq i32 %v2_10238, 11
  store i1 %v7_1023c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1023c, label %dec_label_pc_103a8, label %dec_label_pc_10244

dec_label_pc_10244:                               ; preds = %dec_label_pc_10238
  %v2_10244 = icmp ugt i32 %v6_1022c, 38
  store i1 %v2_10244, i1* %cpsr_c.global-to-local, align 1
  %v7_10244 = icmp eq i32 %v6_1022c, 39
  store i1 %v7_10244, i1* %cpsr_z.global-to-local, align 1
  %v2_10248 = xor i1 %v2_10244, true
  %v3_10248 = or i1 %v7_10244, %v2_10248
  br i1 %v3_10248, label %dec_label_pc_10204, label %dec_label_pc_1024c

dec_label_pc_1024c:                               ; preds = %dec_label_pc_10244
  store i32 %v2_e7c8, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a2d4.47 to i32), i32* %ip.global-to-local, align 4
  %v3_10254 = load i32, i32* %v2_10254, align 4
  store i32 %v3_10254, i32* %r2.global-to-local, align 4
  %v2_10258 = load i32, i32* @global_var_1a2d4.47, align 4
  store i32 %v2_10258, i32* %r3.global-to-local, align 4
  %v3_1025c = icmp uge i32 %v3_10254, %v2_10258
  store i1 %v3_1025c, i1* %cpsr_c.global-to-local, align 1
  %v9_1025c = icmp eq i32 %v3_10254, %v2_10258
  store i1 %v9_1025c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1025c, label %dec_label_pc_10264, label %dec_label_pc_10204

dec_label_pc_10264:                               ; preds = %dec_label_pc_1024c
  store i32 %v2_e7c8, i32* @lr, align 4
  %v3_10268 = load i8, i8* %v2_10268, align 1
  %v4_10268 = zext i8 %v3_10268 to i32
  store i32 %v4_10268, i32* %r3.global-to-local, align 4
  %v2_1026c = icmp ugt i8 %v3_10268, 5
  store i1 %v2_1026c, i1* %cpsr_c.global-to-local, align 1
  %v7_1026c = icmp eq i8 %v3_10268, 6
  store i1 %v7_1026c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1026c, label %dec_label_pc_10274, label %dec_label_pc_10204

dec_label_pc_10274:                               ; preds = %dec_label_pc_10264
  %v0_10274 = load i32, i32* @r4, align 4
  %v1_10274 = inttoptr i32 %v0_10274 to i16*
  %v2_10274 = load i16, i16* %v1_10274, align 2
  %v3_10274 = zext i16 %v2_10274 to i32
  store i32 %v3_10274, i32* %r3.global-to-local, align 4
  %v2_10278 = icmp ugt i16 %v2_10274, 5887
  store i1 %v2_10278, i1* %cpsr_c.global-to-local, align 1
  %v7_10278 = icmp eq i16 %v2_10274, 5888
  store i1 %v7_10278, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10278, label %dec_label_pc_10280, label %dec_label_pc_10204

dec_label_pc_10280:                               ; preds = %dec_label_pc_10274
  %v1_10280 = add i32 %v0_10274, 2
  %v2_10280 = inttoptr i32 %v1_10280 to i16*
  %v3_10280 = load i16, i16* %v2_10280, align 2
  %v4_10280 = zext i16 %v3_10280 to i32
  store i32 %v4_10280, i32* %r3.global-to-local, align 4
  store i32 %v4_e600, i32* %r0.global-to-local, align 4
  %v3_10288 = icmp uge i32 %v4_10280, %v4_e600
  store i1 %v3_10288, i1* %cpsr_c.global-to-local, align 1
  %v9_10288 = icmp eq i32 %v4_10280, %v4_e600
  store i1 %v9_10288, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10288, label %dec_label_pc_10290, label %dec_label_pc_10204

dec_label_pc_10290:                               ; preds = %dec_label_pc_10280
  %v1_10290 = add i32 %v0_10274, 13
  %v2_10290 = inttoptr i32 %v1_10290 to i8*
  %v3_10290 = load i8, i8* %v2_10290, align 1
  %v4_10290 = zext i8 %v3_10290 to i32
  store i32 %v4_10290, i32* %r3.global-to-local, align 4
  %v1_10294 = and i32 %v4_10290, 2
  %v2_10294 = icmp eq i32 %v1_10294, 0
  store i1 %v2_10294, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10294, label %dec_label_pc_10204, label %dec_label_pc_1029c

dec_label_pc_1029c:                               ; preds = %dec_label_pc_10290
  %v1_1029c = and i32 %v4_10290, 16
  %v2_1029c = icmp eq i32 %v1_1029c, 0
  store i1 %v2_1029c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1029c, label %dec_label_pc_10204, label %dec_label_pc_102a4

dec_label_pc_102a4:                               ; preds = %dec_label_pc_1029c
  %v1_102a4 = and i32 %v4_10290, 4
  %v2_102a4 = icmp eq i32 %v1_102a4, 0
  store i1 %v2_102a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_102a4, label %dec_label_pc_102ac, label %dec_label_pc_10204

dec_label_pc_102ac:                               ; preds = %dec_label_pc_102a4
  %tmp2189 = urem i8 %v3_10290, 2
  %v2_102ac = icmp eq i8 %tmp2189, 0
  store i1 %v2_102ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_102ac, label %dec_label_pc_102b4, label %dec_label_pc_10204

dec_label_pc_102b4:                               ; preds = %dec_label_pc_102ac
  %v1_102b4 = add i32 %v0_10274, 8
  %v2_102b4 = inttoptr i32 %v1_102b4 to i32*
  %v3_102b4 = load i32, i32* %v2_102b4, align 4
  %v5_102cc = call i32 @llvm.bswap.i32(i32 %v3_102b4)
  %v1_102d0 = add i32 %v5_102cc, -1
  store i32 %v1_102d0, i32* %r2.global-to-local, align 4
  %v1_102d4 = and i32 %v1_102d0, 16711680
  store i32 %v1_102d4, i32* %r0.global-to-local, align 4
  %v3_102d8 = udiv i32 %v1_102d0, 16777216
  %v4_102dc = udiv i32 %v1_102d4, 256
  %v5_102dc = or i32 %v4_102dc, %v3_102d8
  %v1_102e0 = and i32 %v1_102d0, 65280
  store i32 %v1_102e0, i32* %r1.global-to-local, align 4
  %v4_102e4 = mul nuw nsw i32 %v1_102e0, 256
  %v5_102e4 = or i32 %v5_102dc, %v4_102e4
  store i32 %v5_102e4, i32* %r3.global-to-local, align 4
  %v3_102e8 = load i32, i32* %v2_102e8, align 4
  store i32 %v3_102e8, i32* %ip.global-to-local, align 4
  %v5_102ec = call i32 @llvm.bswap.i32(i32 %v1_102d0)
  store i32 %v5_102ec, i32* %r3.global-to-local, align 4
  %v3_102f0 = icmp uge i32 %v5_102ec, %v3_102e8
  store i1 %v3_102f0, i1* %cpsr_c.global-to-local, align 1
  %v9_102f0 = icmp eq i32 %v5_102ec, %v3_102e8
  store i1 %v9_102f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_102f0, label %dec_label_pc_102f8, label %dec_label_pc_10204

dec_label_pc_102f8:                               ; preds = %dec_label_pc_102b4
  %v0_102f8 = load i32, i32* @r5, align 4
  %v2_102f8 = icmp ugt i32 %v0_102f8, 254
  store i1 %v2_102f8, i1* %cpsr_c.global-to-local, align 1
  %v7_102f8 = icmp eq i32 %v0_102f8, 255
  store i1 %v7_102f8, i1* %cpsr_z.global-to-local, align 1
  %v8_102fc = icmp sgt i32 %v0_102f8, 255
  br i1 %v8_102fc, label %dec_label_pc_103a8, label %dec_label_pc_10300

dec_label_pc_10300:                               ; preds = %dec_label_pc_102f8
  %v2_10308 = load i32, i32* @global_var_1a2f0.129, align 4
  store i32 %v2_10308, i32* %r1.global-to-local, align 4
  %v3_1030c = mul i32 %v0_102f8, 256
  store i32 %v3_1030c, i32* %r2.global-to-local, align 4
  %v2_10310 = mul i32 %v0_102f8, 288
  store i32 %v2_10310, i32* %r3.global-to-local, align 4
  %v2_10314 = add i32 %v2_10308, %v2_10310
  store i32 %v2_10314, i32* @r0, align 4
  %v1_10318 = add i32 %v2_10314, 12
  %v2_10318 = inttoptr i32 %v1_10318 to i32*
  %v3_10318 = load i32, i32* %v2_10318, align 4
  store i32 %v3_10318, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1031c = icmp eq i32 %v3_10318, 0
  store i1 %v2_1031c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1031c, label %dec_label_pc_10360, label %dec_label_pc_1033c.preheader

dec_label_pc_1033c.preheader:                     ; preds = %dec_label_pc_10300
  %v2_10320 = add i32 %v0_102f8, 1
  %v2_10328 = and i32 %v2_10320, 134217728
  %v3_10328 = icmp ne i32 %v2_10328, 0
  store i1 %v3_10328, i1* %cpsr_c.global-to-local, align 1
  %v3_1032c = mul i32 %v2_10320, 288
  store i32 %v3_1032c, i32* %r3.global-to-local, align 4
  %v3_10330 = add i32 %v2_10308, %v3_1032c
  store i32 %v3_10330, i32* %r1.global-to-local, align 4
  store i32 %v0_102f8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1033c

dec_label_pc_1033c:                               ; preds = %dec_label_pc_1033c.preheader, %dec_label_pc_10350
  %v0_10350 = phi i32 [ %v3_10330, %dec_label_pc_1033c.preheader ], [ %v1_10348, %dec_label_pc_10350 ]
  %v0_1033c = phi i32 [ %v0_102f8, %dec_label_pc_1033c.preheader ], [ %v1_1033c, %dec_label_pc_10350 ]
  %v1_1033c = add i32 %v0_1033c, 1
  store i32 %v1_1033c, i32* %r2.global-to-local, align 4
  %v7_10340 = icmp eq i32 %v1_1033c, 256
  store i32 %v0_10350, i32* @r0, align 4
  %v1_10348 = add i32 %v0_10350, 288
  store i32 %v1_10348, i32* %r1.global-to-local, align 4
  br i1 %v7_10340, label %dec_label_pc_103a8.loopexit, label %dec_label_pc_10350

dec_label_pc_10350:                               ; preds = %dec_label_pc_1033c
  %v1_10350 = add i32 %v0_10350, 12
  %v2_10350 = inttoptr i32 %v1_10350 to i32*
  %v3_10350 = load i32, i32* %v2_10350, align 4
  store i32 %v3_10350, i32* %r3.global-to-local, align 4
  %v2_10354 = icmp eq i32 %v3_10350, 0
  br i1 %v2_10354, label %dec_label_pc_1035c, label %dec_label_pc_1033c

dec_label_pc_1035c:                               ; preds = %dec_label_pc_10350
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_1033c, i32* @r5, align 4
  br label %dec_label_pc_10360

dec_label_pc_10360:                               ; preds = %dec_label_pc_10300, %dec_label_pc_1035c
  %v1_1036c = phi i32 [ %v2_10314, %dec_label_pc_10300 ], [ %v0_10350, %dec_label_pc_1035c ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10360 = icmp eq i32 %v1_1036c, 0
  store i1 %v2_10360, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10360, label %dec_label_pc_103a8, label %dec_label_pc_10368

dec_label_pc_10368:                               ; preds = %dec_label_pc_10360
  store i32 5888, i32* %r3.global-to-local, align 4
  %v2_1036c = add i32 %v1_1036c, 16
  %v3_1036c = inttoptr i32 %v2_1036c to i32*
  store i32 %v3_102e8, i32* %v3_1036c, align 4
  %v0_10370 = load i32, i32* %r3.global-to-local, align 4
  %v1_10370 = trunc i32 %v0_10370 to i16
  %v2_10370 = load i32, i32* @r0, align 4
  %v3_10370 = add i32 %v2_10370, 20
  %v4_10370 = inttoptr i32 %v3_10370 to i16*
  store i16 %v1_10370, i16* %v4_10370, align 2
  %v0_10374 = call i32 @function_e19c()
  store i32 %v0_10374, i32* %r0.global-to-local, align 4
  %v1_10208.pre.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_10204

dec_label_pc_1037c:                               ; preds = %dec_label_pc_e510
  %v2_1037c = load i32, i32* @global_var_1a2f4.131, align 4
  store i32 %v2_1037c, i32* %r0.global-to-local, align 4
  %v1_10380 = call i32 @function_1239c(i32 %v2_1037c)
  store i32 %v1_10380, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e578

dec_label_pc_10388:                               ; preds = %thread-pre-split603.thread, %thread-pre-split603
  %v2_10388 = icmp ugt i32 %v1_e81c, 78
  store i1 %v2_10388, i1* %cpsr_c.global-to-local, align 1
  %v7_10388 = icmp eq i32 %v1_e81c, 79
  store i1 %v7_10388, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10388, label %bb1918, label %dec_label_pc_ff6c

bb1918:                                           ; preds = %dec_label_pc_10388
  %v3_1038c = icmp ugt i32 %v1_e830, 120
  store i1 %v3_1038c, i1* %cpsr_c.global-to-local, align 1
  %v8_1038c = icmp eq i32 %v1_e830, 121
  store i1 %v8_1038c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1038c, label %dec_label_pc_10394, label %dec_label_pc_ff6c

dec_label_pc_10394:                               ; preds = %bb1918
  %v1_10394 = add nsw i32 %v1_e834, -255
  store i32 %v1_10394, i32* %r3.global-to-local, align 4
  %v2_10394 = icmp eq i32 %v1_e834, 255
  store i1 %v2_10394, i1* %cpsr_c.global-to-local, align 1
  %v7_10394 = icmp eq i32 %v1_e834, 255
  store i1 %v7_10394, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10394, label %bb1920, label %bb1919

bb1919:                                           ; preds = %dec_label_pc_10394
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1920

bb1920:                                           ; preds = %dec_label_pc_10394, %bb1919
  %v0_1039c = phi i32 [ %v1_10394, %dec_label_pc_10394 ], [ 1, %bb1919 ]
  %v2_1039c = and i32 %v3_e824, 64
  %v3_1039c = icmp ne i32 %v2_1039c, 0
  store i1 %v3_1039c, i1* %cpsr_c.global-to-local, align 1
  %v4_1039c = udiv i32 %v1_e834, 128
  %v5_1039c = and i32 %v0_1039c, %v4_1039c
  store i32 %v5_1039c, i32* %r3.global-to-local, align 4
  %v6_1039c = icmp eq i32 %v5_1039c, 0
  store i1 %v6_1039c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_1039c, label %dec_label_pc_ff6c, label %dec_label_pc_e818

dec_label_pc_103a8.loopexit:                      ; preds = %dec_label_pc_1033c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_103a8

dec_label_pc_103a8:                               ; preds = %dec_label_pc_10360, %dec_label_pc_102f8, %dec_label_pc_10238, %dec_label_pc_10204, %dec_label_pc_103a8.loopexit
  store i32 0, i32* %stack_var_-224, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1852, i32* %r4.global-to-local, align 4
  %v2_103c82112 = load i32, i32* @sp, align 4
  %v3_103c82113 = add i32 %v2_103c82112, 1852
  %v4_103c82114 = inttoptr i32 %v3_103c82113 to i32*
  store i32 0, i32* %v4_103c82114, align 4
  br label %dec_label_pc_103b4.dec_label_pc_103b4_crit_edge

dec_label_pc_103b4.dec_label_pc_103b4_crit_edge:  ; preds = %dec_label_pc_103a8, %dec_label_pc_103b4.dec_label_pc_103b4_crit_edge
  %v0_103b4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_103b8 = add i32 %v0_103b4.pre, 4
  store i32 %v1_103b8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_103c0 = add i32 %v0_103b4.pre, 1848
  store i32 %v1_103c0, i32* %r4.global-to-local, align 4
  %v7_103c4 = icmp eq i32 %v1_103b8, 128
  %v2_103c8 = load i32, i32* @sp, align 4
  %v3_103c8 = add i32 %v2_103c8, %v1_103c0
  %v4_103c8 = inttoptr i32 %v3_103c8 to i32*
  store i32 0, i32* %v4_103c8, align 4
  br i1 %v7_103c4, label %dec_label_pc_103d0, label %dec_label_pc_103b4.dec_label_pc_103b4_crit_edge

dec_label_pc_103d0:                               ; preds = %dec_label_pc_103b4.dec_label_pc_103b4_crit_edge
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_103d0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_103d0, i32* %stack_var_-352, align 4
  %v1_103dc2115 = add i32 %v0_103d0, 8
  store i32 %v1_103dc2115, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_103e42116 = add i32 %v0_103d0, 1724
  store i32 %v1_103e42116, i32* %ip.global-to-local, align 4
  %v7_103e82117 = icmp eq i32 %v1_103dc2115, 128
  %v2_103ec2118 = load i32, i32* @sp, align 4
  %v3_103ec2119 = add i32 %v2_103ec2118, %v1_103e42116
  %v4_103ec2120 = inttoptr i32 %v3_103ec2119 to i32*
  store i32 0, i32* %v4_103ec2120, align 4
  br i1 %v7_103e82117, label %dec_label_pc_103f4, label %dec_label_pc_103d8.dec_label_pc_103d8_crit_edge

dec_label_pc_103d8.dec_label_pc_103d8_crit_edge:  ; preds = %dec_label_pc_103d0, %dec_label_pc_103d8.dec_label_pc_103d8_crit_edge
  %v0_103d8.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_103dc = add i32 %v0_103d8.pre, 4
  store i32 %v1_103dc, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_103e4 = add i32 %v0_103d8.pre, 1720
  store i32 %v1_103e4, i32* %ip.global-to-local, align 4
  %v7_103e8 = icmp eq i32 %v1_103dc, 128
  %v2_103ec = load i32, i32* @sp, align 4
  %v3_103ec = add i32 %v2_103ec, %v1_103e4
  %v4_103ec = inttoptr i32 %v3_103ec to i32*
  store i32 0, i32* %v4_103ec, align 4
  br i1 %v7_103e8, label %dec_label_pc_103f4, label %dec_label_pc_103d8.dec_label_pc_103d8_crit_edge

dec_label_pc_103f4:                               ; preds = %dec_label_pc_103d8.dec_label_pc_103d8_crit_edge, %dec_label_pc_103d0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_103f4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_103f4, i32* @r6, align 4
  store i32 %v0_103f4, i32* @r5, align 4
  store i32 %v0_103f4, i32* %stack_var_-52, align 4
  br label %dec_label_pc_10450

dec_label_pc_10404:                               ; preds = %dec_label_pc_10480
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_1046c, i1* %cpsr_z.global-to-local, align 1
  %v1_104f0 = add i32 %v2_10464, 4
  %v2_104f0 = inttoptr i32 %v1_104f0 to i32*
  %v3_104f0 = load i32, i32* %v2_104f0, align 4
  br i1 %v7_1046c, label %dec_label_pc_104f0, label %dec_label_pc_1040c

dec_label_pc_1040c:                               ; preds = %dec_label_pc_10404
  store i32 %v3_104f0, i32* %ip.global-to-local, align 4
  %v3_10410 = udiv i32 %v3_104f0, 32
  store i32 %v2_104f8, i32* %r2.global-to-local, align 4
  %v3_10418 = mul nuw nsw i32 %v3_10410, 4
  %v2_1041c = add i32 %v3_10418, %v2_104f8
  store i32 %v2_1041c, i32* %r3.global-to-local, align 4
  %v1_10420 = add i32 %v2_1041c, -184
  %v2_10420 = inttoptr i32 %v1_10420 to i32*
  %v3_10420 = load i32, i32* %v2_10420, align 4
  %v1_10424 = urem i32 %v3_104f0, 32
  store i32 %v1_10424, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v7_1042c = shl i32 1, %v1_10424
  %v8_1042c = or i32 %v3_10420, %v7_1042c
  store i32 %v8_1042c, i32* %r2.global-to-local, align 4
  store i32 %v8_1042c, i32* %v2_10420, align 4
  %v0_10434 = load i32, i32* @r6, align 4
  %v1_10434 = load i32, i32* %ip.global-to-local, align 4
  %v3_10434 = icmp uge i32 %v0_10434, %v1_10434
  store i1 %v3_10434, i1* %cpsr_c.global-to-local, align 1
  %v9_10434 = icmp eq i32 %v0_10434, %v1_10434
  store i1 %v9_10434, i1* %cpsr_z.global-to-local, align 1
  %v5_10438 = icmp slt i32 %v0_10434, %v1_10434
  br i1 %v5_10438, label %bb1921, label %bb1922

bb1921:                                           ; preds = %dec_label_pc_1040c
  store i32 %v1_10434, i32* @r6, align 4
  br label %bb1922

bb1922:                                           ; preds = %.thread668, %bb1928, %bb1926, %bb1930, %dec_label_pc_104e4, %dec_label_pc_1040c, %bb1921
  %v3_1043c = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_1043c, i32* %r3.global-to-local, align 4
  %v1_10440 = add i32 %v3_1043c, 1
  store i32 %v1_10440, i32* %r2.global-to-local, align 4
  %v2_10444 = icmp ugt i32 %v1_10440, 254
  store i1 %v2_10444, i1* %cpsr_c.global-to-local, align 1
  %v7_10444 = icmp eq i32 %v1_10440, 255
  store i1 %v7_10444, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_10440, i32* %stack_var_-52, align 4
  %v8_1044c = icmp sgt i32 %v1_10440, 255
  br i1 %v8_1044c, label %dec_label_pc_10520, label %dec_label_pc_10450

dec_label_pc_10450:                               ; preds = %bb1922, %dec_label_pc_103f4
  %v0_1045c = phi i32 [ %v1_10440, %bb1922 ], [ %v0_103f4, %dec_label_pc_103f4 ]
  store i32 ptrtoint (i32* @global_var_1a2f0.129 to i32), i32* @lr, align 4
  %v3_10454 = mul i32 %v0_1045c, 256
  store i32 %v3_10454, i32* %r3.global-to-local, align 4
  %v2_10458 = load i32, i32* @global_var_1a2f0.129, align 4
  store i32 %v2_10458, i32* %r1.global-to-local, align 4
  %v2_10460 = mul i32 %v0_1045c, 288
  store i32 %v2_10460, i32* %r2.global-to-local, align 4
  %v2_10464 = add i32 %v2_10458, %v2_10460
  store i32 %v2_10464, i32* @r4, align 4
  %v1_10468 = add i32 %v2_10464, 12
  %v2_10468 = inttoptr i32 %v1_10468 to i32*
  %v3_10468 = load i32, i32* %v2_10468, align 4
  store i32 %v3_10468, i32* %ip.global-to-local, align 4
  %v2_1046c = icmp ne i32 %v3_10468, 0
  store i1 %v2_1046c, i1* %cpsr_c.global-to-local, align 1
  %v7_1046c = icmp eq i32 %v3_10468, 1
  store i1 %v7_1046c, i1* %cpsr_z.global-to-local, align 1
  %v2_10470 = xor i1 %v2_1046c, true
  %v3_10470 = or i1 %v7_1046c, %v2_10470
  br i1 %v3_10470, label %bb1923, label %bb1924

bb1923:                                           ; preds = %dec_label_pc_10450
  store i32 5, i32* %r1.global-to-local, align 4
  br label %bb1924

bb1924:                                           ; preds = %dec_label_pc_10450, %bb1923
  %v1_104901080 = phi i32 [ %v2_10458, %dec_label_pc_10450 ], [ 5, %bb1923 ]
  %v2_10474 = xor i1 %v7_1046c, true
  %v3_10474 = and i1 %v2_1046c, %v2_10474
  br i1 %v3_10474, label %bb1925, label %bb1926

bb1925:                                           ; preds = %bb1924
  store i32 30, i32* %r1.global-to-local, align 4
  br label %bb1926

bb1926:                                           ; preds = %bb1924, %bb1925
  %v1_10490 = phi i32 [ %v1_104901080, %bb1924 ], [ 30, %bb1925 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10478 = icmp eq i32 %v3_10468, 0
  store i1 %v2_10478, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10478, label %bb1922, label %dec_label_pc_10480

dec_label_pc_10480:                               ; preds = %bb1926
  store i32 ptrtoint (i32* @global_var_182a0.117 to i32), i32* %r0.global-to-local, align 4
  %v1_10484 = add i32 %v2_10464, 8
  %v2_10484 = inttoptr i32 %v1_10484 to i32*
  %v3_10484 = load i32, i32* %v2_10484, align 4
  store i32 %v3_10484, i32* %r2.global-to-local, align 4
  %v2_10488 = load i32, i32* @global_var_182a0.117, align 4
  %v2_1048c = sub i32 %v2_10488, %v3_10484
  store i32 %v2_1048c, i32* %r3.global-to-local, align 4
  %v3_10490 = icmp uge i32 %v2_1048c, %v1_10490
  store i1 %v3_10490, i1* %cpsr_c.global-to-local, align 1
  %v9_10490 = icmp eq i32 %v2_1048c, %v1_10490
  store i1 %v9_10490, i1* %cpsr_z.global-to-local, align 1
  %v2_10494 = xor i1 %v3_10490, true
  %v3_10494 = or i1 %v9_10490, %v2_10494
  br i1 %v3_10494, label %dec_label_pc_10404, label %dec_label_pc_10498

dec_label_pc_10498:                               ; preds = %dec_label_pc_10480
  %v1_10498 = add i32 %v2_10464, 4
  %v2_10498 = inttoptr i32 %v1_10498 to i32*
  %v3_10498 = load i32, i32* %v2_10498, align 4
  store i32 %v3_10498, i32* %r0.global-to-local, align 4
  %v1_1049c = call i32 @function_1239c(i32 %v3_10498)
  store i32 %v1_1049c, i32* %r0.global-to-local, align 4
  %v0_104a0 = load i32, i32* @r4, align 4
  %v1_104a0 = add i32 %v0_104a0, 12
  %v2_104a0 = inttoptr i32 %v1_104a0 to i32*
  %v3_104a0 = load i32, i32* %v2_104a0, align 4
  store i32 %v3_104a0, i32* %r3.global-to-local, align 4
  %v2_104a4 = icmp ugt i32 %v3_104a0, 1
  store i1 %v2_104a4, i1* %cpsr_c.global-to-local, align 1
  %v7_104a4 = icmp eq i32 %v3_104a0, 2
  store i1 %v7_104a4, i1* %cpsr_z.global-to-local, align 1
  %v2_104a8 = xor i1 %v2_104a4, true
  %v3_104a8 = or i1 %v7_104a4, %v2_104a8
  br i1 %v3_104a8, label %bb1927, label %.thread1181

.thread1181:                                      ; preds = %dec_label_pc_10498
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_104b011781182 = add i32 %v0_104a0, 4
  %v3_104b011791183 = inttoptr i32 %v2_104b011781182 to i32*
  store i32 -1, i32* %v3_104b011791183, align 4
  br label %bb1928

bb1927:                                           ; preds = %dec_label_pc_10498
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_104b01175 = add i32 %v0_104a0, 4
  %v3_104b01176 = inttoptr i32 %v2_104b01175 to i32*
  store i32 -1, i32* %v3_104b01176, align 4
  %v4_104b4 = load i32, i32* %r3.global-to-local, align 4
  %v5_104b4 = load i32, i32* @r4, align 4
  %v6_104b4 = add i32 %v5_104b4, 12
  %v7_104b4 = inttoptr i32 %v6_104b4 to i32*
  store i32 %v4_104b4, i32* %v7_104b4, align 4
  %v4_104b8 = load i32, i32* %r3.global-to-local, align 4
  %v5_104b8 = trunc i32 %v4_104b8 to i8
  %v6_104b8 = load i32, i32* @r4, align 4
  %v7_104b8 = add i32 %v6_104b8, 284
  %v8_104b8 = inttoptr i32 %v7_104b8 to i8*
  store i8 %v5_104b8, i8* %v8_104b8, align 1
  %v0_104bc.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_104bc.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb1928

bb1928:                                           ; preds = %.thread1181, %bb1927
  %v1_104bc = phi i1 [ %v1_104bc.pre, %bb1927 ], [ %v2_104a4, %.thread1181 ]
  %v0_104bc = phi i1 [ %v0_104bc.pre, %bb1927 ], [ false, %.thread1181 ]
  %v2_104bc = xor i1 %v1_104bc, true
  %v3_104bc = or i1 %v0_104bc, %v2_104bc
  br i1 %v3_104bc, label %bb1922, label %dec_label_pc_104c0

dec_label_pc_104c0:                               ; preds = %bb1928
  %v0_104c0 = load i32, i32* @r4, align 4
  %v1_104c0 = add i32 %v0_104c0, 284
  %v2_104c0 = inttoptr i32 %v1_104c0 to i8*
  %v3_104c0 = load i8, i8* %v2_104c0, align 1
  %v4_104c0 = zext i8 %v3_104c0 to i32
  %v1_104c4 = add nuw nsw i32 %v4_104c0, 1
  %v1_104c8 = urem i32 %v1_104c4, 256
  store i32 %v1_104c8, i32* %r3.global-to-local, align 4
  %v2_104cc = icmp ugt i32 %v1_104c8, 9
  store i1 %v2_104cc, i1* %cpsr_c.global-to-local, align 1
  %v7_104cc = icmp eq i32 %v1_104c8, 10
  store i1 %v7_104cc, i1* %cpsr_z.global-to-local, align 1
  %v1_104d0 = trunc i32 %v1_104c4 to i8
  store i8 %v1_104d0, i8* %v2_104c0, align 1
  %v0_104d4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_104d4, label %.thread668, label %dec_label_pc_104e4

.thread668:                                       ; preds = %dec_label_pc_104c0
  %v1_104d4 = load i32, i32* %r3.global-to-local, align 4
  %v2_104d4 = add i32 %v1_104d4, -10
  store i32 %v2_104d4, i32* %r3.global-to-local, align 4
  %v2_104d8 = load i32, i32* @r4, align 4
  %v3_104d8 = add i32 %v2_104d8, 12
  %v4_104d8 = inttoptr i32 %v3_104d8 to i32*
  store i32 %v2_104d4, i32* %v4_104d8, align 4
  %v1_104dc = load i32, i32* %r3.global-to-local, align 4
  %v2_104dc = trunc i32 %v1_104dc to i8
  %v3_104dc = load i32, i32* @r4, align 4
  %v4_104dc = add i32 %v3_104dc, 284
  %v5_104dc = inttoptr i32 %v4_104dc to i8*
  store i8 %v2_104dc, i8* %v5_104dc, align 1
  %v0_104e0.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_104e0.pr.pr, label %bb1922, label %dec_label_pc_104e4

dec_label_pc_104e4:                               ; preds = %dec_label_pc_104c0, %.thread668
  %v0_104e4 = load i32, i32* @r4, align 4
  store i32 %v0_104e4, i32* @r0, align 4
  %v0_104e8 = call i32 @function_e19c()
  store i32 %v0_104e8, i32* %r0.global-to-local, align 4
  br label %bb1922

dec_label_pc_104f0:                               ; preds = %dec_label_pc_10404
  store i32 %v3_104f0, i32* %r0.global-to-local, align 4
  %v3_104f4 = udiv i32 %v3_104f0, 32
  store i32 %v2_104f8, i32* %r1.global-to-local, align 4
  %v3_104fc = mul nuw nsw i32 %v3_104f4, 4
  %v2_10500 = add i32 %v3_104fc, %v2_104f8
  store i32 %v2_10500, i32* %r3.global-to-local, align 4
  %v1_10504 = add i32 %v2_10500, -312
  %v2_10504 = inttoptr i32 %v1_10504 to i32*
  %v3_10504 = load i32, i32* %v2_10504, align 4
  %v1_10508 = urem i32 %v3_104f0, 32
  store i32 %v1_10508, i32* %r1.global-to-local, align 4
  %v7_1050c = shl i32 1, %v1_10508
  %v8_1050c = or i32 %v3_10504, %v7_1050c
  store i32 %v8_1050c, i32* %r2.global-to-local, align 4
  %v0_10510 = load i32, i32* @r5, align 4
  %v3_10510 = icmp uge i32 %v0_10510, %v3_104f0
  store i1 %v3_10510, i1* %cpsr_c.global-to-local, align 1
  %v9_10510 = icmp eq i32 %v0_10510, %v3_104f0
  store i1 %v9_10510, i1* %cpsr_z.global-to-local, align 1
  %v5_10514 = icmp slt i32 %v0_10510, %v3_104f0
  br i1 %v5_10514, label %bb1929, label %bb1930

bb1929:                                           ; preds = %dec_label_pc_104f0
  store i32 %v3_104f0, i32* @r5, align 4
  br label %bb1930

bb1930:                                           ; preds = %dec_label_pc_104f0, %bb1929
  store i32 %v8_1050c, i32* %v2_10504, align 4
  br label %bb1922

dec_label_pc_10520:                               ; preds = %bb1922
  store i32 0, i32* @r4, align 4
  store i32 1, i32* %stack_var_-68, align 4
  %v0_1052c = load i32, i32* @r5, align 4
  %v1_1052c = load i32, i32* @r6, align 4
  %v3_1052c = icmp uge i32 %v0_1052c, %v1_1052c
  store i1 %v3_1052c, i1* %cpsr_c.global-to-local, align 1
  %v9_1052c = icmp eq i32 %v0_1052c, %v1_1052c
  store i1 %v9_1052c, i1* %cpsr_z.global-to-local, align 1
  %v5_10530 = icmp slt i32 %v0_1052c, %v1_1052c
  %storemerge754 = select i1 %v5_10530, i32 %v1_1052c, i32 %v0_1052c
  store i32 %v2_10544, i32* %ip.global-to-local, align 4
  store i32 %v2_10548, i32* %r1.global-to-local, align 4
  store i32 %v2_1054c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10554 = add i32 %storemerge754, 1
  store i32 %v1_10554, i32* %r0.global-to-local, align 4
  %v5_10560 = call i32 @function_120c0(i32 %v1_10554, i32 %v2_10548, i32 %v2_1054c, i32 0, i32 %v2_10544)
  %v0_10564 = load i32, i32* @r4, align 4
  store i32 %v0_10564, i32* %r0.global-to-local, align 4
  %v1_10568 = inttoptr i32 %v0_10564 to i32*
  %v2_10568 = call i32 @function_1201c(i32* %v1_10568)
  store i32 %v2_10568, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_182a0.117 to i32), i32* @lr, align 4
  %v0_10570 = load i32, i32* @r4, align 4
  store i32 %v0_10570, i32* %stack_var_-52, align 4
  store i32 %v2_10568, i32* @global_var_182a0.117, align 4
  br label %dec_label_pc_10578

dec_label_pc_10578:                               ; preds = %dec_label_pc_106e0, %dec_label_pc_10520
  %v0_10584 = phi i32 [ %v1_106e4, %dec_label_pc_106e0 ], [ %v0_10570, %dec_label_pc_10520 ]
  store i32 ptrtoint (i32* @global_var_1a2f0.129 to i32), i32* %r0.global-to-local, align 4
  %v3_1057c = mul i32 %v0_10584, 256
  store i32 %v3_1057c, i32* %r3.global-to-local, align 4
  %v2_10580 = load i32, i32* @global_var_1a2f0.129, align 4
  store i32 %v2_10580, i32* %r1.global-to-local, align 4
  %v2_10588 = mul i32 %v0_10584, 288
  store i32 %v2_10588, i32* %r2.global-to-local, align 4
  %v2_1058c = add i32 %v2_10580, %v2_10588
  store i32 %v2_1058c, i32* @r6, align 4
  %v1_10590 = add i32 %v2_1058c, 4
  %v2_10590 = inttoptr i32 %v1_10590 to i32*
  %v3_10590 = load i32, i32* %v2_10590, align 4
  store i32 %v3_10590, i32* %r0.global-to-local, align 4
  %v2_10594 = icmp eq i32 %v3_10590, -1
  store i1 %v2_10594, i1* %cpsr_c.global-to-local, align 1
  %v7_10594 = icmp eq i32 %v3_10590, -1
  store i1 %v7_10594, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10594, label %dec_label_pc_106e0, label %dec_label_pc_1059c

dec_label_pc_1059c:                               ; preds = %dec_label_pc_10578
  %v3_1059c = udiv i32 %v3_10590, 32
  store i32 %v2_104f8, i32* %r1.global-to-local, align 4
  %v3_105a4 = mul nuw nsw i32 %v3_1059c, 4
  store i32 %v3_105a4, i32* @ip, align 4
  %v2_105a8 = add i32 %v3_105a4, %v2_104f8
  store i32 %v2_105a8, i32* %r2.global-to-local, align 4
  %v1_105ac = add i32 %v2_105a8, -312
  %v2_105ac = inttoptr i32 %v1_105ac to i32*
  %v3_105ac = load i32, i32* %v2_105ac, align 4
  %v1_105b0 = urem i32 %v3_10590, 32
  store i32 %v1_105b0, i32* %r1.global-to-local, align 4
  %v2_105b4 = add nsw i32 %v1_105b0, -1
  %v3_105b4 = shl i32 1, %v2_105b4
  %v4_105b4 = and i32 %v3_105ac, %v3_105b4
  %v5_105b4 = icmp ne i32 %v4_105b4, 0
  store i1 %v5_105b4, i1* %cpsr_c.global-to-local, align 1
  %v6_105b4 = lshr i32 %v3_105ac, %v1_105b0
  store i32 %v6_105b4, i32* %r3.global-to-local, align 4
  %v1_105b8 = urem i32 %v6_105b4, 2
  %v2_105b8 = icmp eq i32 %v1_105b8, 0
  store i1 %v2_105b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_105b8, label %dec_label_pc_105c0, label %dec_label_pc_10fc4

dec_label_pc_105c0:                               ; preds = %dec_label_pc_1059c, %dec_label_pc_11068
  %v1_105cc = phi i32 [ %v1_105b0, %dec_label_pc_1059c ], [ %v1_105cc.pre, %dec_label_pc_11068 ]
  %v0_105c4 = phi i32 [ %v3_105a4, %dec_label_pc_1059c ], [ %v0_105c4.pre, %dec_label_pc_11068 ]
  store i32 %v2_104f8, i32* %r3.global-to-local, align 4
  %v2_105c4 = add i32 %v0_105c4, %v2_104f8
  store i32 %v2_105c4, i32* %r2.global-to-local, align 4
  %v1_105c8 = add i32 %v2_105c4, -184
  %v2_105c8 = inttoptr i32 %v1_105c8 to i32*
  %v3_105c8 = load i32, i32* %v2_105c8, align 4
  %v2_105cc = add i32 %v1_105cc, -1
  %v3_105cc = shl i32 1, %v2_105cc
  %v4_105cc = and i32 %v3_105c8, %v3_105cc
  %v5_105cc = icmp ne i32 %v4_105cc, 0
  store i1 %v5_105cc, i1* %cpsr_c.global-to-local, align 1
  %v6_105cc = lshr i32 %v3_105c8, %v1_105cc
  store i32 %v6_105cc, i32* %r3.global-to-local, align 4
  %v1_105d0 = urem i32 %v6_105cc, 2
  %v2_105d0 = icmp eq i32 %v1_105d0, 0
  store i1 %v2_105d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_105d0, label %dec_label_pc_106e0, label %dec_label_pc_105d8.preheader

dec_label_pc_105d8.preheader:                     ; preds = %dec_label_pc_105c0
  %v0_105d8776 = load i32, i32* @r6, align 4
  %v1_105d8777 = add i32 %v0_105d8776, 12
  %v2_105d8778 = inttoptr i32 %v1_105d8777 to i32*
  %v3_105d8779 = load i32, i32* %v2_105d8778, align 4
  store i32 %v3_105d8779, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_105dc775781 = icmp eq i32 %v3_105d8779, 0
  store i1 %v2_105dc775781, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_105dc775781, label %dec_label_pc_106e0, label %dec_label_pc_105e4.lr.ph

dec_label_pc_105d8.loopexit:                      ; preds = %dec_label_pc_110bc, %.thread1199
  %v0_105d8 = load i32, i32* @r6, align 4
  %v1_105d8 = add i32 %v0_105d8, 12
  %v2_105d8 = inttoptr i32 %v1_105d8 to i32*
  %v3_105d8 = load i32, i32* %v2_105d8, align 4
  store i32 %v3_105d8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_105dc775 = icmp eq i32 %v3_105d8, 0
  store i1 %v2_105dc775, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_105dc775, label %dec_label_pc_106e0, label %dec_label_pc_105e4.lr.ph

dec_label_pc_105e4.lr.ph:                         ; preds = %dec_label_pc_105d8.preheader, %dec_label_pc_105d8.loopexit
  %v0_105e41096 = phi i32 [ %v0_105d8, %dec_label_pc_105d8.loopexit ], [ %v0_105d8776, %dec_label_pc_105d8.preheader ]
  br label %dec_label_pc_105e4

dec_label_pc_105e4:                               ; preds = %dec_label_pc_105dc.backedge.thread, %dec_label_pc_105dc.backedge, %dec_label_pc_105dc.backedge.thread2185, %dec_label_pc_105e4.lr.ph
  %v0_10fa0 = phi i32 [ %v0_105e41096, %dec_label_pc_105e4.lr.ph ], [ %v0_105e41093, %dec_label_pc_105dc.backedge ], [ %v0_10658, %dec_label_pc_105dc.backedge.thread ], [ %v0_10658, %dec_label_pc_105dc.backedge.thread2185 ]
  %v1_105e4 = add i32 %v0_10fa0, 24
  %v2_105e4 = inttoptr i32 %v1_105e4 to i32*
  %v3_105e4 = load i32, i32* %v2_105e4, align 4
  store i32 %v3_105e4, i32* @r3, align 4
  %v2_105e8 = icmp ugt i32 %v3_105e4, 255
  store i1 %v2_105e8, i1* %cpsr_c.global-to-local, align 1
  %v7_105e8 = icmp eq i32 %v3_105e4, 256
  store i1 %v7_105e8, i1* %cpsr_z.global-to-local, align 1
  %.pre = add i32 %v0_10fa0, 28
  store i32 %.pre, i32* @sl, align 4
  br i1 %v7_105e8, label %dec_label_pc_10fa0, label %dec_label_pc_105f4

dec_label_pc_105f4:                               ; preds = %dec_label_pc_105e4, %dec_label_pc_10fa0
  store i32 0, i32* @r5, align 4
  %v1_105f8 = load i32, i32* %sb.global-to-local, align 4
  %v2_105f8 = inttoptr i32 %v1_105f8 to i32*
  store i32 0, i32* %v2_105f8, align 4
  %v0_105fc = load i32, i32* @r6, align 4
  %v1_105fc = add i32 %v0_105fc, 24
  %v2_105fc = inttoptr i32 %v1_105fc to i32*
  %v3_105fc = load i32, i32* %v2_105fc, align 4
  store i32 %v3_105fc, i32* %r2.global-to-local, align 4
  %v0_10600 = load i32, i32* @sl, align 4
  %v2_10600 = add i32 %v0_10600, %v3_105fc
  store i32 %v2_10600, i32* %r4.global-to-local, align 4
  %v1_10604 = add i32 %v0_105fc, 4
  %v2_10604 = inttoptr i32 %v1_10604 to i32*
  %v3_10604 = load i32, i32* %v2_10604, align 4
  store i32 %v3_10604, i32* %r0.global-to-local, align 4
  %v1_10608 = sub i32 256, %v3_105fc
  store i32 %v1_10608, i32* %r2.global-to-local, align 4
  store i32 %v2_10600, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_10614 = call i32 @function_12a4c(i32 %v3_10604, i32 %v2_10600, i32 %v1_10608, i32 16384)
  store i32 %v4_10614, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10618 = icmp eq i32 %v4_10614, 0
  store i1 %v2_10618, i1* %cpsr_z.global-to-local, align 1
  %tmp1931 = icmp slt i32 %v4_10614, 1
  br i1 %tmp1931, label %dec_label_pc_10690, label %dec_label_pc_10620

dec_label_pc_10620:                               ; preds = %dec_label_pc_105f4
  %v0_10620 = load i32, i32* @r5, align 4
  store i32 %v0_10620, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10624

dec_label_pc_10624:                               ; preds = %.thread675, %dec_label_pc_10620
  %v3_10630 = phi i32 [ %v1_10634, %.thread675 ], [ %v0_10620, %dec_label_pc_10620 ]
  %v1_10624 = load i32, i32* %r4.global-to-local, align 4
  %v2_10624 = add i32 %v1_10624, %v3_10630
  %v3_10624 = inttoptr i32 %v2_10624 to i8*
  %v4_10624 = load i8, i8* %v3_10624, align 1
  %v6_10624 = zext i8 %v4_10624 to i32
  store i32 %v6_10624, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10628 = icmp eq i8 %v4_10624, 0
  store i1 %v2_10628, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10628, label %bb1932, label %.thread675

bb1932:                                           ; preds = %dec_label_pc_10624
  %v2_1062c = add nuw nsw i32 %v6_10624, 65
  store i32 %v2_1062c, i32* %r3.global-to-local, align 4
  %v2_10630 = trunc i32 %v2_1062c to i8
  store i8 %v2_10630, i8* %v3_10624, align 1
  %v0_10634.pre = load i32, i32* %r2.global-to-local, align 4
  br label %.thread675

.thread675:                                       ; preds = %dec_label_pc_10624, %bb1932
  %v0_10634 = phi i32 [ %v3_10630, %dec_label_pc_10624 ], [ %v0_10634.pre, %bb1932 ]
  %v1_10634 = add i32 %v0_10634, 1
  store i32 %v1_10634, i32* %r2.global-to-local, align 4
  %v3_10638 = icmp uge i32 %v1_10634, %v4_10614
  store i1 %v3_10638, i1* %cpsr_c.global-to-local, align 1
  %v9_10638 = icmp eq i32 %v1_10634, %v4_10614
  store i1 %v9_10638, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10638, label %dec_label_pc_10640, label %dec_label_pc_10624

dec_label_pc_10640:                               ; preds = %.thread675, %dec_label_pc_10694
  store i32 ptrtoint (i32* @global_var_182a0.117 to i32), i32* @r4, align 4
  %v0_10644 = load i32, i32* @r6, align 4
  %v1_10644 = add i32 %v0_10644, 24
  %v2_10644 = inttoptr i32 %v1_10644 to i32*
  %v3_10644 = load i32, i32* %v2_10644, align 4
  %v2_10648 = load i32, i32* @global_var_182a0.117, align 4
  store i32 %v2_10648, i32* %r2.global-to-local, align 4
  %v2_1064c = add i32 %v3_10644, %v4_10614
  store i32 %v2_1064c, i32* %r3.global-to-local, align 4
  store i32 %v2_1064c, i32* %v2_10644, align 4
  %v0_10654 = load i32, i32* %r2.global-to-local, align 4
  %v1_10654 = load i32, i32* @r6, align 4
  %v2_10654 = add i32 %v1_10654, 8
  %v3_10654 = inttoptr i32 %v2_10654 to i32*
  store i32 %v0_10654, i32* %v3_10654, align 4
  br label %dec_label_pc_10658

dec_label_pc_10658:                               ; preds = %dec_label_pc_10770, %dec_label_pc_10640
  %v0_10658 = load i32, i32* @r6, align 4
  %v1_10658 = add i32 %v0_10658, 12
  %v2_10658 = inttoptr i32 %v1_10658 to i32*
  %v3_10658 = load i32, i32* %v2_10658, align 4
  store i32 %v3_10658, i32* %r0.global-to-local, align 4
  %v1_1065c = add i32 %v3_10658, -2
  store i32 %v1_1065c, i32* @r3, align 4
  %v7_10660 = icmp eq i32 %v1_1065c, 8
  store i1 %v7_10660, i1* %cpsr_z.global-to-local, align 1
  %v5_10664 = and i32 %v1_1065c, 1073741824
  %v6_10664 = icmp ne i32 %v5_10664, 0
  store i1 %v6_10664, i1* %cpsr_c.global-to-local, align 1
  switch i32 %v3_10658, label %dec_label_pc_105dc.backedge [
    i32 2, label %dec_label_pc_10ae8
    i32 3, label %dec_label_pc_10cac
    i32 4, label %dec_label_pc_10bc0
    i32 5, label %dec_label_pc_10dcc
    i32 6, label %dec_label_pc_10a14
    i32 7, label %dec_label_pc_10940
    i32 8, label %dec_label_pc_1086c
    i32 9, label %dec_label_pc_10798
    i32 10, label %dec_label_pc_106f8
  ]

dec_label_pc_10690:                               ; preds = %dec_label_pc_105f4
  br i1 %v2_10618, label %dec_label_pc_112b4, label %dec_label_pc_10694

dec_label_pc_10694:                               ; preds = %dec_label_pc_10690
  %v3_10694 = icmp eq i32 %v4_10614, -1
  store i1 %v3_10694, i1* %cpsr_c.global-to-local, align 1
  %v8_10694 = icmp eq i32 %v4_10614, -1
  store i1 %v8_10694, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_10694, label %dec_label_pc_1069c, label %dec_label_pc_10640

dec_label_pc_1069c:                               ; preds = %dec_label_pc_10694
  %v0_1069c = load i32, i32* %sb.global-to-local, align 4
  %v1_1069c = inttoptr i32 %v0_1069c to i32*
  %v2_1069c = load i32, i32* %v1_1069c, align 4
  store i32 %v2_1069c, i32* %r3.global-to-local, align 4
  %v2_106a0 = icmp ugt i32 %v2_1069c, 10
  store i1 %v2_106a0, i1* %cpsr_c.global-to-local, align 1
  %v7_106a0 = icmp eq i32 %v2_1069c, 11
  store i1 %v7_106a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_106a0, label %dec_label_pc_106e0, label %dec_label_pc_106a8

dec_label_pc_106a8:                               ; preds = %dec_label_pc_1069c, %dec_label_pc_112b4
  %v0_106a8 = load i32, i32* @r6, align 4
  %v1_106a8 = add i32 %v0_106a8, 4
  %v2_106a8 = inttoptr i32 %v1_106a8 to i32*
  %v3_106a8 = load i32, i32* %v2_106a8, align 4
  store i32 %v3_106a8, i32* %r0.global-to-local, align 4
  %v1_106ac = call i32 @function_1239c(i32 %v3_106a8)
  store i32 %v1_106ac, i32* %r0.global-to-local, align 4
  %v0_106b0 = load i32, i32* @r6, align 4
  %v1_106b0 = add i32 %v0_106b0, 284
  %v2_106b0 = inttoptr i32 %v1_106b0 to i8*
  %v3_106b0 = load i8, i8* %v2_106b0, align 1
  %v4_106b0 = zext i8 %v3_106b0 to i32
  %v1_106b4 = add nuw nsw i32 %v4_106b0, 1
  %v1_106b8 = urem i32 %v1_106b4, 256
  store i32 %v1_106b8, i32* %r3.global-to-local, align 4
  %v2_106bc = icmp ugt i32 %v1_106b8, 8
  store i1 %v2_106bc, i1* %cpsr_c.global-to-local, align 1
  %v7_106bc = icmp eq i32 %v1_106b8, 9
  store i1 %v7_106bc, i1* %cpsr_z.global-to-local, align 1
  %v1_106c0 = trunc i32 %v1_106b4 to i8
  store i8 %v1_106c0, i8* %v2_106b0, align 1
  store i32 -1, i32* %r2.global-to-local, align 4
  %v0_106c8 = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_106c8 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v2_106c8 = xor i1 %v1_106c8, true
  %v3_106c8 = and i1 %v0_106c8, %v2_106c8
  br i1 %v3_106c8, label %bb1933, label %.thread1193

.thread1193:                                      ; preds = %dec_label_pc_106a8
  %v1_106cc11891194 = load i32, i32* @r6, align 4
  %v2_106cc11901195 = add i32 %v1_106cc11891194, 4
  %v3_106cc11911196 = inttoptr i32 %v2_106cc11901195 to i32*
  store i32 -1, i32* %v3_106cc11911196, align 4
  br label %bb1934

bb1933:                                           ; preds = %dec_label_pc_106a8
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_106cc1185 = load i32, i32* @r6, align 4
  %v2_106cc1186 = add i32 %v1_106cc1185, 4
  %v3_106cc1187 = inttoptr i32 %v2_106cc1186 to i32*
  store i32 -1, i32* %v3_106cc1187, align 4
  %v4_106d0 = load i32, i32* %r3.global-to-local, align 4
  %v5_106d0 = load i32, i32* @r6, align 4
  %v6_106d0 = add i32 %v5_106d0, 12
  %v7_106d0 = inttoptr i32 %v6_106d0 to i32*
  store i32 %v4_106d0, i32* %v7_106d0, align 4
  %v4_106d4 = load i32, i32* %r3.global-to-local, align 4
  %v5_106d4 = trunc i32 %v4_106d4 to i8
  %v6_106d4 = load i32, i32* @r6, align 4
  %v7_106d4 = add i32 %v6_106d4, 284
  %v8_106d4 = inttoptr i32 %v7_106d4 to i8*
  store i8 %v5_106d4, i8* %v8_106d4, align 1
  %v0_106d8.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_106d8.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb1934

bb1934:                                           ; preds = %.thread1193, %bb1933
  %v1_106dc = phi i1 [ %v1_106d8.pre, %bb1933 ], [ %v0_106c8, %.thread1193 ]
  %v0_106dc = phi i1 [ %v0_106d8.pre, %bb1933 ], [ %v1_106c8, %.thread1193 ]
  %v2_106d8 = xor i1 %v1_106dc, true
  %v3_106d8 = or i1 %v0_106dc, %v2_106d8
  br i1 %v3_106d8, label %bb1935, label %bb1936

bb1935:                                           ; preds = %bb1934
  %v4_106d8 = load i32, i32* @r6, align 4
  store i32 %v4_106d8, i32* %r0.global-to-local, align 4
  br label %bb1936

bb1936:                                           ; preds = %bb1934, %bb1935
  store i32 67296, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_106d8, i32 ptrtoint (i32* @global_var_e19c.204 to i32))
  br label %dec_label_pc_106e0

dec_label_pc_106e0:                               ; preds = %dec_label_pc_105d8.loopexit, %dec_label_pc_105dc.backedge, %dec_label_pc_105d8.preheader, %dec_label_pc_1069c, %dec_label_pc_105c0, %dec_label_pc_10578, %dec_label_pc_11168, %bb1936
  %v3_106e0 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_106e0, i32* %r3.global-to-local, align 4
  %v1_106e4 = add i32 %v3_106e0, 1
  store i32 %v1_106e4, i32* @r4, align 4
  %v2_106e8 = icmp ugt i32 %v1_106e4, 254
  store i1 %v2_106e8, i1* %cpsr_c.global-to-local, align 1
  %v7_106e8 = icmp eq i32 %v1_106e4, 255
  store i1 %v7_106e8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_106e4, i32* %stack_var_-52, align 4
  %v7_106f0 = icmp slt i32 %v1_106e4, 256
  br i1 %v7_106f0, label %dec_label_pc_10578, label %dec_label_pc_e7d0

dec_label_pc_106f8:                               ; preds = %dec_label_pc_10658
  store i32 10, i32* %r0.global-to-local, align 4
  %v1_106fc = call i32 @function_1139c(i32 10)
  store i32 %v2_10d3c, i32* %r1.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v3_1070c = call i32 @function_112d8(i32 10, i32* nonnull %stack_var_-60)
  %v3_10710 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_1070c, i32* %r2.global-to-local, align 4
  %v1_10718 = add i32 %v3_10710, -1
  store i32 %v1_10718, i32* %r3.global-to-local, align 4
  %v0_1071c = load i32, i32* @sl, align 4
  store i32 %v0_1071c, i32* %r0.global-to-local, align 4
  %v0_10720 = load i32, i32* @r6, align 4
  %v1_10720 = add i32 %v0_10720, 24
  %v2_10720 = inttoptr i32 %v1_10720 to i32*
  %v3_10720 = load i32, i32* %v2_10720, align 4
  store i32 %v3_10720, i32* %r1.global-to-local, align 4
  %v4_10724 = call i32 @function_11994(i32 %v0_1071c, i32 %v3_10720, i32 %v3_1070c, i32 %v1_10718)
  %v2_10728 = icmp eq i32 %v4_10724, -1
  store i1 %v2_10728, i1* %cpsr_c.global-to-local, align 1
  %v7_10728 = icmp eq i32 %v4_10724, -1
  store i1 %v7_10728, i1* %cpsr_z.global-to-local, align 1
  store i32 10, i32* %r0.global-to-local, align 4
  %v1_110c0 = call i32 @function_112fc(i32 10)
  br i1 %v7_10728, label %dec_label_pc_110bc, label %dec_label_pc_10730

dec_label_pc_10730:                               ; preds = %dec_label_pc_106f8
  store i32 %v1_110c0, i32* %r0.global-to-local, align 4
  %v0_10738 = load i32, i32* @r6, align 4
  %v1_10738 = add i32 %v0_10738, 4
  %v2_10738 = inttoptr i32 %v1_10738 to i32*
  %v3_10738 = load i32, i32* %v2_10738, align 4
  store i32 %v3_10738, i32* %r0.global-to-local, align 4
  %v1_1073c = call i32 @function_1239c(i32 %v3_10738)
  store i32 %v1_1073c, i32* %r0.global-to-local, align 4
  %v0_10740 = load i32, i32* @r6, align 4
  %v1_10740 = add i32 %v0_10740, 284
  %v2_10740 = inttoptr i32 %v1_10740 to i8*
  %v3_10740 = load i8, i8* %v2_10740, align 1
  %v4_10740 = zext i8 %v3_10740 to i32
  %v1_10744 = add nuw nsw i32 %v4_10740, 1
  %v1_10748 = urem i32 %v1_10744, 256
  store i32 %v1_10748, i32* @r3, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_10750 = icmp ugt i32 %v1_10748, 9
  store i1 %v2_10750, i1* %cpsr_c.global-to-local, align 1
  %v7_10750 = icmp eq i32 %v1_10748, 10
  store i1 %v7_10750, i1* %cpsr_z.global-to-local, align 1
  %v2_10754 = add i32 %v0_10740, 4
  %v3_10754 = inttoptr i32 %v2_10754 to i32*
  store i32 -1, i32* %v3_10754, align 4
  %v0_10758 = load i32, i32* @r3, align 4
  %v1_10758 = trunc i32 %v0_10758 to i8
  %v2_10758 = load i32, i32* @r6, align 4
  %v3_10758 = add i32 %v2_10758, 284
  %v4_10758 = inttoptr i32 %v3_10758 to i8*
  store i8 %v1_10758, i8* %v4_10758, align 1
  %v0_1075c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1075c, label %dec_label_pc_10760, label %dec_label_pc_10f68

dec_label_pc_10760:                               ; preds = %dec_label_pc_10730
  store i32 0, i32* @r3, align 4
  %v1_10764 = load i32, i32* @r6, align 4
  %v2_10764 = add i32 %v1_10764, 12
  %v3_10764 = inttoptr i32 %v2_10764 to i32*
  store i32 0, i32* %v3_10764, align 4
  %v0_10768 = load i32, i32* @r3, align 4
  %v1_10768 = trunc i32 %v0_10768 to i8
  %v2_10768 = load i32, i32* @r6, align 4
  %v3_10768 = add i32 %v2_10768, 284
  %v4_10768 = inttoptr i32 %v3_10768 to i8*
  store i8 %v1_10768, i8* %v4_10768, align 1
  br label %dec_label_pc_1076c

dec_label_pc_1076c:                               ; preds = %dec_label_pc_10f68, %dec_label_pc_10760
  store i32 -1, i32* @r7, align 4
  br label %dec_label_pc_10770

dec_label_pc_10770:                               ; preds = %.thread1199, %dec_label_pc_10e48, %dec_label_pc_10a90, %dec_label_pc_109bc, %dec_label_pc_108e8, %dec_label_pc_10814, %dec_label_pc_1076c
  %v0_10770 = load i32, i32* @r6, align 4
  %v1_10770 = add i32 %v0_10770, 24
  %v2_10770 = inttoptr i32 %v1_10770 to i32*
  %v3_10770 = load i32, i32* %v2_10770, align 4
  %v0_10774 = load i32, i32* @r7, align 4
  %v2_10774 = sub i32 %v0_10774, %v3_10770
  %v3_10774 = icmp uge i32 %v0_10774, %v3_10770
  store i1 %v3_10774, i1* %cpsr_c.global-to-local, align 1
  %v4_10774 = xor i32 %v0_10774, %v3_10770
  %v5_10774 = xor i32 %v2_10774, %v0_10774
  %v6_10774 = and i32 %v5_10774, %v4_10774
  %v7_10774 = icmp slt i32 %v6_10774, 0
  %v8_10774 = icmp slt i32 %v2_10774, 0
  %v9_10774 = icmp eq i32 %v0_10774, %v3_10770
  store i1 %v9_10774, i1* %cpsr_z.global-to-local, align 1
  %v2_10778 = xor i1 %v8_10774, %v7_10774
  %v0_10774.v3_10770 = select i1 %v2_10778, i32 %v0_10774, i32 %v3_10770
  store i32 %v0_10774.v3_10770, i32* %r1.global-to-local, align 4
  %v2_10780 = sub i32 %v3_10770, %v0_10774.v3_10770
  store i32 %v2_10780, i32* @r2, align 4
  store i32 %v2_10780, i32* %v2_10770, align 4
  %v0_10788 = load i32, i32* @sl, align 4
  %v1_10788 = load i32, i32* %r1.global-to-local, align 4
  %v2_10788 = add i32 %v1_10788, %v0_10788
  store i32 %v2_10788, i32* @r1, align 4
  store i32 %v0_10788, i32* @r0, align 4
  %v3_10790 = call i32 @function_128c0(i32 %v0_10788, i32 %v2_10788, i32 %v2_10780)
  store i32 %v3_10790, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10658

dec_label_pc_10798:                               ; preds = %dec_label_pc_10658
  %v1_10798 = add i32 %v0_10658, 24
  %v2_10798 = inttoptr i32 %v1_10798 to i32*
  %v3_10798 = load i32, i32* %v2_10798, align 4
  store i32 %v3_10798, i32* %r2.global-to-local, align 4
  %v1_1079c = add i32 %v3_10798, -1
  store i32 %v1_1079c, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_107a0 = icmp eq i32 %v1_1079c, 0
  store i1 %v2_107a0, i1* %cpsr_z.global-to-local, align 1
  %tmp1939 = icmp slt i32 %v1_1079c, 1
  br i1 %tmp1939, label %dec_label_pc_105dc.backedge.thread, label %dec_label_pc_107a8

dec_label_pc_107a8:                               ; preds = %dec_label_pc_10798
  %v2_107a8 = add i32 %v1_1079c, %v0_10658
  store i32 %v2_107a8, i32* %r3.global-to-local, align 4
  %v1_107ac = add i32 %v2_107a8, 28
  %v2_107ac = inttoptr i32 %v1_107ac to i8*
  %v3_107ac = load i8, i8* %v2_107ac, align 1
  %v4_107ac = zext i8 %v3_107ac to i32
  store i32 %v4_107ac, i32* %r3.global-to-local, align 4
  %v2_107b0 = icmp ugt i8 %v3_107ac, 61
  store i1 %v2_107b0, i1* %cpsr_c.global-to-local, align 1
  %v7_107b0 = icmp eq i8 %v3_107ac, 62
  store i1 %v7_107b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_107b0, label %dec_label_pc_10814, label %bb1940

bb1940:                                           ; preds = %dec_label_pc_107a8
  %v3_107b4 = icmp ugt i8 %v3_107ac, 57
  store i1 %v3_107b4, i1* %cpsr_c.global-to-local, align 1
  %v8_107b4 = icmp eq i8 %v3_107ac, 58
  store i1 %v8_107b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_107b4, label %dec_label_pc_10814, label %dec_label_pc_107bc

dec_label_pc_107bc:                               ; preds = %bb1940
  %v2_107bc = icmp ugt i8 %v3_107ac, 35
  store i1 %v2_107bc, i1* %cpsr_c.global-to-local, align 1
  %v7_107bc = icmp eq i8 %v3_107ac, 36
  store i1 %v7_107bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_107bc, label %dec_label_pc_10814, label %dec_label_pc_107c4

dec_label_pc_107c4:                               ; preds = %dec_label_pc_107bc
  %v2_107c4 = icmp ugt i8 %v3_107ac, 34
  store i1 %v2_107c4, i1* %cpsr_c.global-to-local, align 1
  %v7_107c4 = icmp eq i8 %v3_107ac, 35
  store i1 %v7_107c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_107c4, label %dec_label_pc_10814, label %dec_label_pc_107cc

dec_label_pc_107cc:                               ; preds = %dec_label_pc_107c4
  %v2_107cc = icmp ugt i8 %v3_107ac, 36
  store i1 %v2_107cc, i1* %cpsr_c.global-to-local, align 1
  %v7_107cc = icmp eq i8 %v3_107ac, 37
  store i1 %v7_107cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_107cc, label %dec_label_pc_10814, label %dec_label_pc_107f8.preheader

dec_label_pc_107f8.preheader:                     ; preds = %dec_label_pc_107cc
  %v3_107d0 = add i32 %v0_10658, 28
  %v2_107d4 = add i32 %v3_107d0, %v3_10798
  store i32 %v2_107d4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_107f8

dec_label_pc_107e0:                               ; preds = %bb1941
  %v2_107e0 = icmp ugt i8 %v3_10800, 35
  store i1 %v2_107e0, i1* %cpsr_c.global-to-local, align 1
  %v7_107e0 = icmp eq i8 %v3_10800, 36
  store i1 %v7_107e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_107e0, label %dec_label_pc_10814, label %dec_label_pc_107e8

dec_label_pc_107e8:                               ; preds = %dec_label_pc_107e0
  %v2_107e8 = icmp ugt i8 %v3_10800, 34
  store i1 %v2_107e8, i1* %cpsr_c.global-to-local, align 1
  %v7_107e8 = icmp eq i8 %v3_10800, 35
  store i1 %v7_107e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_107e8, label %dec_label_pc_10814, label %dec_label_pc_107f0

dec_label_pc_107f0:                               ; preds = %dec_label_pc_107e8
  %v2_107f0 = icmp ugt i8 %v3_10800, 36
  store i1 %v2_107f0, i1* %cpsr_c.global-to-local, align 1
  %v7_107f0 = icmp eq i8 %v3_10800, 37
  store i1 %v7_107f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_107f0, label %dec_label_pc_10814, label %dec_label_pc_107f8

dec_label_pc_107f8:                               ; preds = %dec_label_pc_107f8.preheader, %dec_label_pc_107f0
  %v0_1080c681 = phi i32 [ %v2_107d4, %dec_label_pc_107f8.preheader ], [ %v1_1080c, %dec_label_pc_107f0 ]
  %v0_107f8 = phi i32 [ %v1_1079c, %dec_label_pc_107f8.preheader ], [ %v1_107f8, %dec_label_pc_107f0 ]
  %v1_107f8 = add i32 %v0_107f8, -1
  store i32 %v1_107f8, i32* %r1.global-to-local, align 4
  %v2_107f8 = icmp ne i32 %v0_107f8, 0
  store i1 %v2_107f8, i1* %cpsr_c.global-to-local, align 1
  %v7_107f8 = icmp eq i32 %v0_107f8, 1
  store i1 %v7_107f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_107f8, label %dec_label_pc_105dc.backedge.thread2185, label %dec_label_pc_10800

dec_label_pc_10800:                               ; preds = %dec_label_pc_107f8
  %v1_10800 = add i32 %v0_1080c681, -2
  %v2_10800 = inttoptr i32 %v1_10800 to i8*
  %v3_10800 = load i8, i8* %v2_10800, align 1
  %v4_10800 = zext i8 %v3_10800 to i32
  store i32 %v4_10800, i32* %r2.global-to-local, align 4
  %v2_10804 = icmp ugt i8 %v3_10800, 61
  store i1 %v2_10804, i1* %cpsr_c.global-to-local, align 1
  %v7_10804 = icmp eq i8 %v3_10800, 62
  store i1 %v7_10804, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10804, label %.thread680, label %bb1941

.thread680:                                       ; preds = %dec_label_pc_10800
  %v1_1080c682 = add i32 %v0_1080c681, -1
  store i32 %v1_1080c682, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10814

bb1941:                                           ; preds = %dec_label_pc_10800
  %v3_10808 = icmp ugt i8 %v3_10800, 57
  store i1 %v3_10808, i1* %cpsr_c.global-to-local, align 1
  %v8_10808 = icmp eq i8 %v3_10800, 58
  store i1 %v8_10808, i1* %cpsr_z.global-to-local, align 1
  %v1_1080c = add i32 %v0_1080c681, -1
  store i32 %v1_1080c, i32* %r3.global-to-local, align 4
  br i1 %v8_10808, label %dec_label_pc_10814, label %dec_label_pc_107e0

dec_label_pc_10814:                               ; preds = %bb1941, %dec_label_pc_107f0, %dec_label_pc_107e8, %dec_label_pc_107e0, %dec_label_pc_107cc, %dec_label_pc_107a8, %.thread680, %dec_label_pc_107c4, %dec_label_pc_107bc, %bb1940
  %v0_10818 = phi i32 [ %v1_1079c, %dec_label_pc_107cc ], [ %v1_1079c, %dec_label_pc_107a8 ], [ %v1_107f8, %.thread680 ], [ %v1_1079c, %dec_label_pc_107c4 ], [ %v1_1079c, %dec_label_pc_107bc ], [ %v1_1079c, %bb1940 ], [ %v1_107f8, %dec_label_pc_107e0 ], [ %v1_107f8, %dec_label_pc_107e8 ], [ %v1_107f8, %dec_label_pc_107f0 ], [ %v1_107f8, %bb1941 ]
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_10818 = add i32 %v0_10818, 1
  store i32 %v1_10818, i32* @r7, align 4
  %v1_1081c = call i32 @function_1139c(i32 8)
  store i32 %v2_10d3c, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v3_1082c = call i32 @function_112d8(i32 8, i32* nonnull %stack_var_-60)
  store i32 %v3_1082c, i32* %r0.global-to-local, align 4
  %v3_10830 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_10830, i32* %r2.global-to-local, align 4
  store i32 %v3_1082c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_1083c = load i32, i32* @r6, align 4
  %v1_1083c = add i32 %v0_1083c, 4
  %v2_1083c = inttoptr i32 %v1_1083c to i32*
  %v3_1083c = load i32, i32* %v2_1083c, align 4
  store i32 %v3_1083c, i32* %r0.global-to-local, align 4
  %v4_10840 = call i32 @function_12ac0(i32 %v3_1083c, i32 %v3_1082c, i32 %v3_10830, i32 16384)
  store i32 %v4_10840, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_177e8.206 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_10850 = load i32, i32* @r6, align 4
  %v1_10850 = add i32 %v0_10850, 4
  %v2_10850 = inttoptr i32 %v1_10850 to i32*
  %v3_10850 = load i32, i32* %v2_10850, align 4
  store i32 %v3_10850, i32* %r0.global-to-local, align 4
  %v4_10854 = call i32 @function_12ac0(i32 %v3_10850, i32 ptrtoint ([3 x i8]* @global_var_177e8.206 to i32), i32 2, i32 16384)
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_1085c = call i32 @function_112fc(i32 8)
  store i32 %v1_1085c, i32* %r0.global-to-local, align 4
  store i32 10, i32* @r3, align 4
  %v1_10864 = load i32, i32* @r6, align 4
  %v2_10864 = add i32 %v1_10864, 12
  %v3_10864 = inttoptr i32 %v2_10864 to i32*
  store i32 10, i32* %v3_10864, align 4
  br label %dec_label_pc_10770

dec_label_pc_1086c:                               ; preds = %dec_label_pc_10658
  %v1_1086c = add i32 %v0_10658, 24
  %v2_1086c = inttoptr i32 %v1_1086c to i32*
  %v3_1086c = load i32, i32* %v2_1086c, align 4
  store i32 %v3_1086c, i32* %r2.global-to-local, align 4
  %v1_10870 = add i32 %v3_1086c, -1
  store i32 %v1_10870, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10874 = icmp eq i32 %v1_10870, 0
  store i1 %v2_10874, i1* %cpsr_z.global-to-local, align 1
  %tmp1942 = icmp slt i32 %v1_10870, 1
  br i1 %tmp1942, label %dec_label_pc_105dc.backedge.thread, label %dec_label_pc_1087c

dec_label_pc_1087c:                               ; preds = %dec_label_pc_1086c
  %v2_1087c = add i32 %v1_10870, %v0_10658
  store i32 %v2_1087c, i32* %r3.global-to-local, align 4
  %v1_10880 = add i32 %v2_1087c, 28
  %v2_10880 = inttoptr i32 %v1_10880 to i8*
  %v3_10880 = load i8, i8* %v2_10880, align 1
  %v4_10880 = zext i8 %v3_10880 to i32
  store i32 %v4_10880, i32* %r3.global-to-local, align 4
  %v2_10884 = icmp ugt i8 %v3_10880, 61
  store i1 %v2_10884, i1* %cpsr_c.global-to-local, align 1
  %v7_10884 = icmp eq i8 %v3_10880, 62
  store i1 %v7_10884, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10884, label %dec_label_pc_108e8, label %bb1943

bb1943:                                           ; preds = %dec_label_pc_1087c
  %v3_10888 = icmp ugt i8 %v3_10880, 57
  store i1 %v3_10888, i1* %cpsr_c.global-to-local, align 1
  %v8_10888 = icmp eq i8 %v3_10880, 58
  store i1 %v8_10888, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10888, label %dec_label_pc_108e8, label %dec_label_pc_10890

dec_label_pc_10890:                               ; preds = %bb1943
  %v2_10890 = icmp ugt i8 %v3_10880, 35
  store i1 %v2_10890, i1* %cpsr_c.global-to-local, align 1
  %v7_10890 = icmp eq i8 %v3_10880, 36
  store i1 %v7_10890, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10890, label %dec_label_pc_108e8, label %dec_label_pc_10898

dec_label_pc_10898:                               ; preds = %dec_label_pc_10890
  %v2_10898 = icmp ugt i8 %v3_10880, 34
  store i1 %v2_10898, i1* %cpsr_c.global-to-local, align 1
  %v7_10898 = icmp eq i8 %v3_10880, 35
  store i1 %v7_10898, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10898, label %dec_label_pc_108e8, label %dec_label_pc_108a0

dec_label_pc_108a0:                               ; preds = %dec_label_pc_10898
  %v2_108a0 = icmp ugt i8 %v3_10880, 36
  store i1 %v2_108a0, i1* %cpsr_c.global-to-local, align 1
  %v7_108a0 = icmp eq i8 %v3_10880, 37
  store i1 %v7_108a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_108a0, label %dec_label_pc_108e8, label %dec_label_pc_108cc.preheader

dec_label_pc_108cc.preheader:                     ; preds = %dec_label_pc_108a0
  %v3_108a4 = add i32 %v0_10658, 28
  %v2_108a8 = add i32 %v3_108a4, %v3_1086c
  store i32 %v2_108a8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_108cc

dec_label_pc_108b4:                               ; preds = %bb1944
  %v2_108b4 = icmp ugt i8 %v3_108d4, 35
  store i1 %v2_108b4, i1* %cpsr_c.global-to-local, align 1
  %v7_108b4 = icmp eq i8 %v3_108d4, 36
  store i1 %v7_108b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_108b4, label %dec_label_pc_108e8, label %dec_label_pc_108bc

dec_label_pc_108bc:                               ; preds = %dec_label_pc_108b4
  %v2_108bc = icmp ugt i8 %v3_108d4, 34
  store i1 %v2_108bc, i1* %cpsr_c.global-to-local, align 1
  %v7_108bc = icmp eq i8 %v3_108d4, 35
  store i1 %v7_108bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_108bc, label %dec_label_pc_108e8, label %dec_label_pc_108c4

dec_label_pc_108c4:                               ; preds = %dec_label_pc_108bc
  %v2_108c4 = icmp ugt i8 %v3_108d4, 36
  store i1 %v2_108c4, i1* %cpsr_c.global-to-local, align 1
  %v7_108c4 = icmp eq i8 %v3_108d4, 37
  store i1 %v7_108c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_108c4, label %dec_label_pc_108e8, label %dec_label_pc_108cc

dec_label_pc_108cc:                               ; preds = %dec_label_pc_108cc.preheader, %dec_label_pc_108c4
  %v0_108e0688 = phi i32 [ %v2_108a8, %dec_label_pc_108cc.preheader ], [ %v1_108e0, %dec_label_pc_108c4 ]
  %v0_108cc = phi i32 [ %v1_10870, %dec_label_pc_108cc.preheader ], [ %v1_108cc, %dec_label_pc_108c4 ]
  %v1_108cc = add i32 %v0_108cc, -1
  store i32 %v1_108cc, i32* %r1.global-to-local, align 4
  %v2_108cc = icmp ne i32 %v0_108cc, 0
  store i1 %v2_108cc, i1* %cpsr_c.global-to-local, align 1
  %v7_108cc = icmp eq i32 %v0_108cc, 1
  store i1 %v7_108cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_108cc, label %dec_label_pc_105dc.backedge.thread2185, label %dec_label_pc_108d4

dec_label_pc_108d4:                               ; preds = %dec_label_pc_108cc
  %v1_108d4 = add i32 %v0_108e0688, -2
  %v2_108d4 = inttoptr i32 %v1_108d4 to i8*
  %v3_108d4 = load i8, i8* %v2_108d4, align 1
  %v4_108d4 = zext i8 %v3_108d4 to i32
  store i32 %v4_108d4, i32* %r2.global-to-local, align 4
  %v2_108d8 = icmp ugt i8 %v3_108d4, 61
  store i1 %v2_108d8, i1* %cpsr_c.global-to-local, align 1
  %v7_108d8 = icmp eq i8 %v3_108d4, 62
  store i1 %v7_108d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_108d8, label %.thread687, label %bb1944

.thread687:                                       ; preds = %dec_label_pc_108d4
  %v1_108e0689 = add i32 %v0_108e0688, -1
  store i32 %v1_108e0689, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_108e8

bb1944:                                           ; preds = %dec_label_pc_108d4
  %v3_108dc = icmp ugt i8 %v3_108d4, 57
  store i1 %v3_108dc, i1* %cpsr_c.global-to-local, align 1
  %v8_108dc = icmp eq i8 %v3_108d4, 58
  store i1 %v8_108dc, i1* %cpsr_z.global-to-local, align 1
  %v1_108e0 = add i32 %v0_108e0688, -1
  store i32 %v1_108e0, i32* %r3.global-to-local, align 4
  br i1 %v8_108dc, label %dec_label_pc_108e8, label %dec_label_pc_108b4

dec_label_pc_108e8:                               ; preds = %bb1944, %dec_label_pc_108c4, %dec_label_pc_108bc, %dec_label_pc_108b4, %dec_label_pc_108a0, %dec_label_pc_1087c, %.thread687, %dec_label_pc_10898, %dec_label_pc_10890, %bb1943
  %v0_108ec = phi i32 [ %v1_10870, %dec_label_pc_108a0 ], [ %v1_10870, %dec_label_pc_1087c ], [ %v1_108cc, %.thread687 ], [ %v1_10870, %dec_label_pc_10898 ], [ %v1_10870, %dec_label_pc_10890 ], [ %v1_10870, %bb1943 ], [ %v1_108cc, %dec_label_pc_108b4 ], [ %v1_108cc, %dec_label_pc_108bc ], [ %v1_108cc, %dec_label_pc_108c4 ], [ %v1_108cc, %bb1944 ]
  store i32 7, i32* %r0.global-to-local, align 4
  %v1_108ec = add i32 %v0_108ec, 1
  store i32 %v1_108ec, i32* @r7, align 4
  %v1_108f0 = call i32 @function_1139c(i32 7)
  store i32 %v2_10d3c, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r0.global-to-local, align 4
  %v3_10900 = call i32 @function_112d8(i32 7, i32* nonnull %stack_var_-60)
  store i32 %v3_10900, i32* %r0.global-to-local, align 4
  %v3_10904 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_10904, i32* %r2.global-to-local, align 4
  store i32 %v3_10900, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10910 = load i32, i32* @r6, align 4
  %v1_10910 = add i32 %v0_10910, 4
  %v2_10910 = inttoptr i32 %v1_10910 to i32*
  %v3_10910 = load i32, i32* %v2_10910, align 4
  store i32 %v3_10910, i32* %r0.global-to-local, align 4
  %v4_10914 = call i32 @function_12ac0(i32 %v3_10910, i32 %v3_10900, i32 %v3_10904, i32 16384)
  store i32 %v4_10914, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_177e8.206 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_10924 = load i32, i32* @r6, align 4
  %v1_10924 = add i32 %v0_10924, 4
  %v2_10924 = inttoptr i32 %v1_10924 to i32*
  %v3_10924 = load i32, i32* %v2_10924, align 4
  store i32 %v3_10924, i32* %r0.global-to-local, align 4
  %v4_10928 = call i32 @function_12ac0(i32 %v3_10924, i32 ptrtoint ([3 x i8]* @global_var_177e8.206 to i32), i32 2, i32 16384)
  store i32 7, i32* %r0.global-to-local, align 4
  %v1_10930 = call i32 @function_112fc(i32 7)
  store i32 %v1_10930, i32* %r0.global-to-local, align 4
  store i32 9, i32* @r3, align 4
  %v1_10938 = load i32, i32* @r6, align 4
  %v2_10938 = add i32 %v1_10938, 12
  %v3_10938 = inttoptr i32 %v2_10938 to i32*
  store i32 9, i32* %v3_10938, align 4
  br label %dec_label_pc_10770

dec_label_pc_10940:                               ; preds = %dec_label_pc_10658
  %v1_10940 = add i32 %v0_10658, 24
  %v2_10940 = inttoptr i32 %v1_10940 to i32*
  %v3_10940 = load i32, i32* %v2_10940, align 4
  store i32 %v3_10940, i32* %r2.global-to-local, align 4
  %v1_10944 = add i32 %v3_10940, -1
  store i32 %v1_10944, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10948 = icmp eq i32 %v1_10944, 0
  store i1 %v2_10948, i1* %cpsr_z.global-to-local, align 1
  %tmp1945 = icmp slt i32 %v1_10944, 1
  br i1 %tmp1945, label %dec_label_pc_105dc.backedge.thread, label %dec_label_pc_10950

dec_label_pc_10950:                               ; preds = %dec_label_pc_10940
  %v2_10950 = add i32 %v1_10944, %v0_10658
  store i32 %v2_10950, i32* %r3.global-to-local, align 4
  %v1_10954 = add i32 %v2_10950, 28
  %v2_10954 = inttoptr i32 %v1_10954 to i8*
  %v3_10954 = load i8, i8* %v2_10954, align 1
  %v4_10954 = zext i8 %v3_10954 to i32
  store i32 %v4_10954, i32* %r3.global-to-local, align 4
  %v2_10958 = icmp ugt i8 %v3_10954, 61
  store i1 %v2_10958, i1* %cpsr_c.global-to-local, align 1
  %v7_10958 = icmp eq i8 %v3_10954, 62
  store i1 %v7_10958, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10958, label %dec_label_pc_109bc, label %bb1946

bb1946:                                           ; preds = %dec_label_pc_10950
  %v3_1095c = icmp ugt i8 %v3_10954, 57
  store i1 %v3_1095c, i1* %cpsr_c.global-to-local, align 1
  %v8_1095c = icmp eq i8 %v3_10954, 58
  store i1 %v8_1095c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1095c, label %dec_label_pc_109bc, label %dec_label_pc_10964

dec_label_pc_10964:                               ; preds = %bb1946
  %v2_10964 = icmp ugt i8 %v3_10954, 35
  store i1 %v2_10964, i1* %cpsr_c.global-to-local, align 1
  %v7_10964 = icmp eq i8 %v3_10954, 36
  store i1 %v7_10964, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10964, label %dec_label_pc_109bc, label %dec_label_pc_1096c

dec_label_pc_1096c:                               ; preds = %dec_label_pc_10964
  %v2_1096c = icmp ugt i8 %v3_10954, 34
  store i1 %v2_1096c, i1* %cpsr_c.global-to-local, align 1
  %v7_1096c = icmp eq i8 %v3_10954, 35
  store i1 %v7_1096c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1096c, label %dec_label_pc_109bc, label %dec_label_pc_10974

dec_label_pc_10974:                               ; preds = %dec_label_pc_1096c
  %v2_10974 = icmp ugt i8 %v3_10954, 36
  store i1 %v2_10974, i1* %cpsr_c.global-to-local, align 1
  %v7_10974 = icmp eq i8 %v3_10954, 37
  store i1 %v7_10974, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10974, label %dec_label_pc_109bc, label %dec_label_pc_109a0.preheader

dec_label_pc_109a0.preheader:                     ; preds = %dec_label_pc_10974
  %v3_10978 = add i32 %v0_10658, 28
  %v2_1097c = add i32 %v3_10978, %v3_10940
  store i32 %v2_1097c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_109a0

dec_label_pc_10988:                               ; preds = %bb1947
  %v2_10988 = icmp ugt i8 %v3_109a8, 35
  store i1 %v2_10988, i1* %cpsr_c.global-to-local, align 1
  %v7_10988 = icmp eq i8 %v3_109a8, 36
  store i1 %v7_10988, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10988, label %dec_label_pc_109bc, label %dec_label_pc_10990

dec_label_pc_10990:                               ; preds = %dec_label_pc_10988
  %v2_10990 = icmp ugt i8 %v3_109a8, 34
  store i1 %v2_10990, i1* %cpsr_c.global-to-local, align 1
  %v7_10990 = icmp eq i8 %v3_109a8, 35
  store i1 %v7_10990, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10990, label %dec_label_pc_109bc, label %dec_label_pc_10998

dec_label_pc_10998:                               ; preds = %dec_label_pc_10990
  %v2_10998 = icmp ugt i8 %v3_109a8, 36
  store i1 %v2_10998, i1* %cpsr_c.global-to-local, align 1
  %v7_10998 = icmp eq i8 %v3_109a8, 37
  store i1 %v7_10998, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10998, label %dec_label_pc_109bc, label %dec_label_pc_109a0

dec_label_pc_109a0:                               ; preds = %dec_label_pc_109a0.preheader, %dec_label_pc_10998
  %v0_109b4695 = phi i32 [ %v2_1097c, %dec_label_pc_109a0.preheader ], [ %v1_109b4, %dec_label_pc_10998 ]
  %v0_109a0 = phi i32 [ %v1_10944, %dec_label_pc_109a0.preheader ], [ %v1_109a0, %dec_label_pc_10998 ]
  %v1_109a0 = add i32 %v0_109a0, -1
  store i32 %v1_109a0, i32* %r1.global-to-local, align 4
  %v2_109a0 = icmp ne i32 %v0_109a0, 0
  store i1 %v2_109a0, i1* %cpsr_c.global-to-local, align 1
  %v7_109a0 = icmp eq i32 %v0_109a0, 1
  store i1 %v7_109a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_109a0, label %dec_label_pc_105dc.backedge.thread2185, label %dec_label_pc_109a8

dec_label_pc_109a8:                               ; preds = %dec_label_pc_109a0
  %v1_109a8 = add i32 %v0_109b4695, -2
  %v2_109a8 = inttoptr i32 %v1_109a8 to i8*
  %v3_109a8 = load i8, i8* %v2_109a8, align 1
  %v4_109a8 = zext i8 %v3_109a8 to i32
  store i32 %v4_109a8, i32* %r2.global-to-local, align 4
  %v2_109ac = icmp ugt i8 %v3_109a8, 61
  store i1 %v2_109ac, i1* %cpsr_c.global-to-local, align 1
  %v7_109ac = icmp eq i8 %v3_109a8, 62
  store i1 %v7_109ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_109ac, label %.thread694, label %bb1947

.thread694:                                       ; preds = %dec_label_pc_109a8
  %v1_109b4696 = add i32 %v0_109b4695, -1
  store i32 %v1_109b4696, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_109bc

bb1947:                                           ; preds = %dec_label_pc_109a8
  %v3_109b0 = icmp ugt i8 %v3_109a8, 57
  store i1 %v3_109b0, i1* %cpsr_c.global-to-local, align 1
  %v8_109b0 = icmp eq i8 %v3_109a8, 58
  store i1 %v8_109b0, i1* %cpsr_z.global-to-local, align 1
  %v1_109b4 = add i32 %v0_109b4695, -1
  store i32 %v1_109b4, i32* %r3.global-to-local, align 4
  br i1 %v8_109b0, label %dec_label_pc_109bc, label %dec_label_pc_10988

dec_label_pc_109bc:                               ; preds = %bb1947, %dec_label_pc_10998, %dec_label_pc_10990, %dec_label_pc_10988, %dec_label_pc_10974, %dec_label_pc_10950, %.thread694, %dec_label_pc_1096c, %dec_label_pc_10964, %bb1946
  %v0_109c0 = phi i32 [ %v1_10944, %dec_label_pc_10974 ], [ %v1_10944, %dec_label_pc_10950 ], [ %v1_109a0, %.thread694 ], [ %v1_10944, %dec_label_pc_1096c ], [ %v1_10944, %dec_label_pc_10964 ], [ %v1_10944, %bb1946 ], [ %v1_109a0, %dec_label_pc_10988 ], [ %v1_109a0, %dec_label_pc_10990 ], [ %v1_109a0, %dec_label_pc_10998 ], [ %v1_109a0, %bb1947 ]
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_109c0 = add i32 %v0_109c0, 1
  store i32 %v1_109c0, i32* @r7, align 4
  %v1_109c4 = call i32 @function_1139c(i32 4)
  store i32 %v2_10d3c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v3_109d4 = call i32 @function_112d8(i32 4, i32* nonnull %stack_var_-60)
  store i32 %v3_109d4, i32* %r0.global-to-local, align 4
  %v3_109d8 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_109d8, i32* %r2.global-to-local, align 4
  store i32 %v3_109d4, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_109e4 = load i32, i32* @r6, align 4
  %v1_109e4 = add i32 %v0_109e4, 4
  %v2_109e4 = inttoptr i32 %v1_109e4 to i32*
  %v3_109e4 = load i32, i32* %v2_109e4, align 4
  store i32 %v3_109e4, i32* %r0.global-to-local, align 4
  %v4_109e8 = call i32 @function_12ac0(i32 %v3_109e4, i32 %v3_109d4, i32 %v3_109d8, i32 16384)
  store i32 %v4_109e8, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_177e8.206 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_109f8 = load i32, i32* @r6, align 4
  %v1_109f8 = add i32 %v0_109f8, 4
  %v2_109f8 = inttoptr i32 %v1_109f8 to i32*
  %v3_109f8 = load i32, i32* %v2_109f8, align 4
  store i32 %v3_109f8, i32* %r0.global-to-local, align 4
  %v4_109fc = call i32 @function_12ac0(i32 %v3_109f8, i32 ptrtoint ([3 x i8]* @global_var_177e8.206 to i32), i32 2, i32 16384)
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10a04 = call i32 @function_112fc(i32 4)
  store i32 %v1_10a04, i32* %r0.global-to-local, align 4
  store i32 8, i32* @r3, align 4
  %v1_10a0c = load i32, i32* @r6, align 4
  %v2_10a0c = add i32 %v1_10a0c, 12
  %v3_10a0c = inttoptr i32 %v2_10a0c to i32*
  store i32 8, i32* %v3_10a0c, align 4
  br label %dec_label_pc_10770

dec_label_pc_10a14:                               ; preds = %dec_label_pc_10658
  %v1_10a14 = add i32 %v0_10658, 24
  %v2_10a14 = inttoptr i32 %v1_10a14 to i32*
  %v3_10a14 = load i32, i32* %v2_10a14, align 4
  store i32 %v3_10a14, i32* %r2.global-to-local, align 4
  %v1_10a18 = add i32 %v3_10a14, -1
  store i32 %v1_10a18, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10a1c = icmp eq i32 %v1_10a18, 0
  store i1 %v2_10a1c, i1* %cpsr_z.global-to-local, align 1
  %tmp1948 = icmp slt i32 %v1_10a18, 1
  br i1 %tmp1948, label %dec_label_pc_105dc.backedge.thread, label %dec_label_pc_10a24

dec_label_pc_10a24:                               ; preds = %dec_label_pc_10a14
  %v2_10a24 = add i32 %v1_10a18, %v0_10658
  store i32 %v2_10a24, i32* %r3.global-to-local, align 4
  %v1_10a28 = add i32 %v2_10a24, 28
  %v2_10a28 = inttoptr i32 %v1_10a28 to i8*
  %v3_10a28 = load i8, i8* %v2_10a28, align 1
  %v4_10a28 = zext i8 %v3_10a28 to i32
  store i32 %v4_10a28, i32* %r3.global-to-local, align 4
  %v2_10a2c = icmp ugt i8 %v3_10a28, 61
  store i1 %v2_10a2c, i1* %cpsr_c.global-to-local, align 1
  %v7_10a2c = icmp eq i8 %v3_10a28, 62
  store i1 %v7_10a2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a2c, label %dec_label_pc_10a90, label %bb1949

bb1949:                                           ; preds = %dec_label_pc_10a24
  %v3_10a30 = icmp ugt i8 %v3_10a28, 57
  store i1 %v3_10a30, i1* %cpsr_c.global-to-local, align 1
  %v8_10a30 = icmp eq i8 %v3_10a28, 58
  store i1 %v8_10a30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10a30, label %dec_label_pc_10a90, label %dec_label_pc_10a38

dec_label_pc_10a38:                               ; preds = %bb1949
  %v2_10a38 = icmp ugt i8 %v3_10a28, 35
  store i1 %v2_10a38, i1* %cpsr_c.global-to-local, align 1
  %v7_10a38 = icmp eq i8 %v3_10a28, 36
  store i1 %v7_10a38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a38, label %dec_label_pc_10a90, label %dec_label_pc_10a40

dec_label_pc_10a40:                               ; preds = %dec_label_pc_10a38
  %v2_10a40 = icmp ugt i8 %v3_10a28, 34
  store i1 %v2_10a40, i1* %cpsr_c.global-to-local, align 1
  %v7_10a40 = icmp eq i8 %v3_10a28, 35
  store i1 %v7_10a40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a40, label %dec_label_pc_10a90, label %dec_label_pc_10a48

dec_label_pc_10a48:                               ; preds = %dec_label_pc_10a40
  %v2_10a48 = icmp ugt i8 %v3_10a28, 36
  store i1 %v2_10a48, i1* %cpsr_c.global-to-local, align 1
  %v7_10a48 = icmp eq i8 %v3_10a28, 37
  store i1 %v7_10a48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a48, label %dec_label_pc_10a90, label %dec_label_pc_10a74.preheader

dec_label_pc_10a74.preheader:                     ; preds = %dec_label_pc_10a48
  %v3_10a4c = add i32 %v0_10658, 28
  %v2_10a50 = add i32 %v3_10a4c, %v3_10a14
  store i32 %v2_10a50, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10a74

dec_label_pc_10a5c:                               ; preds = %bb1950
  %v2_10a5c = icmp ugt i8 %v3_10a7c, 35
  store i1 %v2_10a5c, i1* %cpsr_c.global-to-local, align 1
  %v7_10a5c = icmp eq i8 %v3_10a7c, 36
  store i1 %v7_10a5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a5c, label %dec_label_pc_10a90, label %dec_label_pc_10a64

dec_label_pc_10a64:                               ; preds = %dec_label_pc_10a5c
  %v2_10a64 = icmp ugt i8 %v3_10a7c, 34
  store i1 %v2_10a64, i1* %cpsr_c.global-to-local, align 1
  %v7_10a64 = icmp eq i8 %v3_10a7c, 35
  store i1 %v7_10a64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a64, label %dec_label_pc_10a90, label %dec_label_pc_10a6c

dec_label_pc_10a6c:                               ; preds = %dec_label_pc_10a64
  %v2_10a6c = icmp ugt i8 %v3_10a7c, 36
  store i1 %v2_10a6c, i1* %cpsr_c.global-to-local, align 1
  %v7_10a6c = icmp eq i8 %v3_10a7c, 37
  store i1 %v7_10a6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a6c, label %dec_label_pc_10a90, label %dec_label_pc_10a74

dec_label_pc_10a74:                               ; preds = %dec_label_pc_10a74.preheader, %dec_label_pc_10a6c
  %v0_10a88702 = phi i32 [ %v2_10a50, %dec_label_pc_10a74.preheader ], [ %v1_10a88, %dec_label_pc_10a6c ]
  %v0_10a74 = phi i32 [ %v1_10a18, %dec_label_pc_10a74.preheader ], [ %v1_10a74, %dec_label_pc_10a6c ]
  %v1_10a74 = add i32 %v0_10a74, -1
  store i32 %v1_10a74, i32* %r1.global-to-local, align 4
  %v2_10a74 = icmp ne i32 %v0_10a74, 0
  store i1 %v2_10a74, i1* %cpsr_c.global-to-local, align 1
  %v7_10a74 = icmp eq i32 %v0_10a74, 1
  store i1 %v7_10a74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a74, label %dec_label_pc_105dc.backedge.thread2185, label %dec_label_pc_10a7c

dec_label_pc_10a7c:                               ; preds = %dec_label_pc_10a74
  %v1_10a7c = add i32 %v0_10a88702, -2
  %v2_10a7c = inttoptr i32 %v1_10a7c to i8*
  %v3_10a7c = load i8, i8* %v2_10a7c, align 1
  %v4_10a7c = zext i8 %v3_10a7c to i32
  store i32 %v4_10a7c, i32* %r2.global-to-local, align 4
  %v2_10a80 = icmp ugt i8 %v3_10a7c, 61
  store i1 %v2_10a80, i1* %cpsr_c.global-to-local, align 1
  %v7_10a80 = icmp eq i8 %v3_10a7c, 62
  store i1 %v7_10a80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a80, label %.thread701, label %bb1950

.thread701:                                       ; preds = %dec_label_pc_10a7c
  %v1_10a88703 = add i32 %v0_10a88702, -1
  store i32 %v1_10a88703, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10a90

bb1950:                                           ; preds = %dec_label_pc_10a7c
  %v3_10a84 = icmp ugt i8 %v3_10a7c, 57
  store i1 %v3_10a84, i1* %cpsr_c.global-to-local, align 1
  %v8_10a84 = icmp eq i8 %v3_10a7c, 58
  store i1 %v8_10a84, i1* %cpsr_z.global-to-local, align 1
  %v1_10a88 = add i32 %v0_10a88702, -1
  store i32 %v1_10a88, i32* %r3.global-to-local, align 4
  br i1 %v8_10a84, label %dec_label_pc_10a90, label %dec_label_pc_10a5c

dec_label_pc_10a90:                               ; preds = %bb1950, %dec_label_pc_10a6c, %dec_label_pc_10a64, %dec_label_pc_10a5c, %dec_label_pc_10a48, %dec_label_pc_10a24, %.thread701, %dec_label_pc_10a40, %dec_label_pc_10a38, %bb1949
  %v0_10a94 = phi i32 [ %v1_10a18, %dec_label_pc_10a48 ], [ %v1_10a18, %dec_label_pc_10a24 ], [ %v1_10a74, %.thread701 ], [ %v1_10a18, %dec_label_pc_10a40 ], [ %v1_10a18, %dec_label_pc_10a38 ], [ %v1_10a18, %bb1949 ], [ %v1_10a74, %dec_label_pc_10a5c ], [ %v1_10a74, %dec_label_pc_10a64 ], [ %v1_10a74, %dec_label_pc_10a6c ], [ %v1_10a74, %bb1950 ]
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_10a94 = add i32 %v0_10a94, 1
  store i32 %v1_10a94, i32* @r7, align 4
  %v1_10a98 = call i32 @function_1139c(i32 6)
  store i32 %v2_10d3c, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v3_10aa8 = call i32 @function_112d8(i32 6, i32* nonnull %stack_var_-60)
  store i32 %v3_10aa8, i32* %r0.global-to-local, align 4
  %v3_10aac = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_10aac, i32* %r2.global-to-local, align 4
  store i32 %v3_10aa8, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10ab8 = load i32, i32* @r6, align 4
  %v1_10ab8 = add i32 %v0_10ab8, 4
  %v2_10ab8 = inttoptr i32 %v1_10ab8 to i32*
  %v3_10ab8 = load i32, i32* %v2_10ab8, align 4
  store i32 %v3_10ab8, i32* %r0.global-to-local, align 4
  %v4_10abc = call i32 @function_12ac0(i32 %v3_10ab8, i32 %v3_10aa8, i32 %v3_10aac, i32 16384)
  store i32 %v4_10abc, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_177e8.206 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_10acc = load i32, i32* @r6, align 4
  %v1_10acc = add i32 %v0_10acc, 4
  %v2_10acc = inttoptr i32 %v1_10acc to i32*
  %v3_10acc = load i32, i32* %v2_10acc, align 4
  store i32 %v3_10acc, i32* %r0.global-to-local, align 4
  %v4_10ad0 = call i32 @function_12ac0(i32 %v3_10acc, i32 ptrtoint ([3 x i8]* @global_var_177e8.206 to i32), i32 2, i32 16384)
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_10ad8 = call i32 @function_112fc(i32 6)
  store i32 %v1_10ad8, i32* %r0.global-to-local, align 4
  store i32 7, i32* @r3, align 4
  %v1_10ae0 = load i32, i32* @r6, align 4
  %v2_10ae0 = add i32 %v1_10ae0, 12
  %v3_10ae0 = inttoptr i32 %v2_10ae0 to i32*
  store i32 7, i32* %v3_10ae0, align 4
  br label %dec_label_pc_10770

dec_label_pc_10ae8:                               ; preds = %dec_label_pc_10658
  %v1_10ae8 = add i32 %v0_10658, 24
  %v2_10ae8 = inttoptr i32 %v1_10ae8 to i32*
  %v3_10ae8 = load i32, i32* %v2_10ae8, align 4
  store i32 %v3_10ae8, i32* %r2.global-to-local, align 4
  %v0_10aec = load i32, i32* @sl, align 4
  store i32 %v0_10aec, i32* @r4, align 4
  store i32 0, i32* @r7, align 4
  %v3_10af4766 = icmp eq i32 %v3_10ae8, 0
  store i1 %v3_10af4766, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_10af4766, i1* %cpsr_z.global-to-local, align 1
  %v6_10af8773 = icmp sgt i32 %v3_10ae8, 0
  br i1 %v6_10af8773, label %dec_label_pc_10afc.preheader, label %dec_label_pc_10ba8

dec_label_pc_10af4.loopexit:                      ; preds = %dec_label_pc_10b18
  %v2_10b20 = add i32 %v1_10b20, 2
  store i32 %v2_10b20, i32* @r4, align 4
  %v2_10b24 = add i32 %v1_10b24, 2
  store i32 %v2_10b24, i32* @r7, align 4
  %v3_10af4 = icmp uge i32 %v2_10b24, %v1_10af4
  store i1 %v3_10af4, i1* %cpsr_c.global-to-local, align 1
  %v9_10af4 = icmp eq i32 %v2_10b24, %v1_10af4
  store i1 %v9_10af4, i1* %cpsr_z.global-to-local, align 1
  %v6_10af8 = icmp slt i32 %v2_10b24, %v1_10af4
  br i1 %v6_10af8, label %dec_label_pc_10afc.preheader, label %dec_label_pc_10ba8

dec_label_pc_10afc.preheader:                     ; preds = %dec_label_pc_10ae8, %dec_label_pc_10af4.loopexit
  %v6_10bb01138 = phi i32 [ %v6_10bb01139, %dec_label_pc_10af4.loopexit ], [ %v0_10658, %dec_label_pc_10ae8 ]
  %v1_10b241127 = phi i32 [ %v2_10b24, %dec_label_pc_10af4.loopexit ], [ 0, %dec_label_pc_10ae8 ]
  %v1_10b081125 = phi i32 [ %v1_10af4, %dec_label_pc_10af4.loopexit ], [ %v3_10ae8, %dec_label_pc_10ae8 ]
  %v0_10afc1123 = phi i32 [ %v2_10b20, %dec_label_pc_10af4.loopexit ], [ %v0_10aec, %dec_label_pc_10ae8 ]
  br label %dec_label_pc_10afc

dec_label_pc_10afc:                               ; preds = %dec_label_pc_10afc.preheader, %dec_label_pc_10b8c
  %v6_10bb01139 = phi i32 [ %v6_10bb01138, %dec_label_pc_10afc.preheader ], [ %v0_10b94, %dec_label_pc_10b8c ]
  %v1_10b24 = phi i32 [ %v1_10b241127, %dec_label_pc_10afc.preheader ], [ %v1_10b98, %dec_label_pc_10b8c ]
  %v1_10af4 = phi i32 [ %v1_10b081125, %dec_label_pc_10afc.preheader ], [ %v3_10b94, %dec_label_pc_10b8c ]
  %v1_10b20 = phi i32 [ %v0_10afc1123, %dec_label_pc_10afc.preheader ], [ %v1_10ba0, %dec_label_pc_10b8c ]
  %v1_10afc = inttoptr i32 %v1_10b20 to i8*
  %v2_10afc = load i8, i8* %v1_10afc, align 1
  %v3_10afc = zext i8 %v2_10afc to i32
  store i32 %v3_10afc, i32* @r3, align 4
  %v2_10b00 = icmp eq i8 %v2_10afc, -1
  store i1 %v2_10b00, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_10b00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10b00, label %dec_label_pc_10b08, label %dec_label_pc_10ba8

dec_label_pc_10b08:                               ; preds = %dec_label_pc_10afc
  %v0_10b08 = load i32, i32* @sl, align 4
  %v2_10b08 = add i32 %v0_10b08, %v1_10af4
  store i32 %v2_10b08, i32* %r1.global-to-local, align 4
  %v1_10b0c = add i32 %v1_10b20, 1
  store i32 %v1_10b0c, i32* @r5, align 4
  %v3_10b10 = icmp uge i32 %v2_10b08, %v1_10b0c
  store i1 %v3_10b10, i1* %cpsr_c.global-to-local, align 1
  %v9_10b10 = icmp eq i32 %v2_10b08, %v1_10b0c
  store i1 %v9_10b10, i1* %cpsr_z.global-to-local, align 1
  %v2_10b14 = xor i1 %v3_10b10, true
  %v3_10b14 = or i1 %v9_10b10, %v2_10b14
  br i1 %v3_10b14, label %dec_label_pc_10ba8, label %dec_label_pc_10b18

dec_label_pc_10b18:                               ; preds = %dec_label_pc_10b08
  %v2_10b18 = inttoptr i32 %v1_10b0c to i8*
  %v3_10b18 = load i8, i8* %v2_10b18, align 1
  %v4_10b18 = zext i8 %v3_10b18 to i32
  store i32 %v4_10b18, i32* @r3, align 4
  %v2_10b1c = icmp eq i8 %v3_10b18, -1
  store i1 %v2_10b1c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_10b1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10b1c, label %dec_label_pc_10af4.loopexit, label %dec_label_pc_10b2c

dec_label_pc_10b2c:                               ; preds = %dec_label_pc_10b18
  %v2_10b2c = icmp ugt i8 %v3_10b18, -4
  store i1 %v2_10b2c, i1* %cpsr_c.global-to-local, align 1
  %v7_10b2c = icmp eq i8 %v3_10b18, -3
  store i1 %v7_10b2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10b2c, label %dec_label_pc_10ea0, label %dec_label_pc_10b34

dec_label_pc_10b34:                               ; preds = %dec_label_pc_10b2c
  %v1_10b34 = add i32 %v1_10b20, 2
  store i32 %v1_10b34, i32* @r3, align 4
  %v3_10b38 = icmp uge i32 %v2_10b08, %v1_10b34
  store i1 %v3_10b38, i1* %cpsr_c.global-to-local, align 1
  %v9_10b38 = icmp eq i32 %v2_10b08, %v1_10b34
  store i1 %v9_10b38, i1* %cpsr_z.global-to-local, align 1
  %v2_10b3c = xor i1 %v3_10b38, true
  %v3_10b3c = or i1 %v9_10b38, %v2_10b3c
  br i1 %v3_10b3c, label %dec_label_pc_10ba8, label %dec_label_pc_10b40

dec_label_pc_10b40:                               ; preds = %dec_label_pc_10efc, %bb1966, %.thread745, %dec_label_pc_10b34
  %v0_10b40 = load i32, i32* @r5, align 4
  %v1_10b40 = inttoptr i32 %v0_10b40 to i8*
  %v2_10b40 = load i8, i8* %v1_10b40, align 1
  %v3_10b40 = zext i8 %v2_10b40 to i32
  store i32 %v3_10b40, i32* %r3.global-to-local, align 4
  %v2_10b44 = icmp ugt i8 %v2_10b40, -4
  store i1 %v2_10b44, i1* %cpsr_c.global-to-local, align 1
  %v7_10b44 = icmp eq i8 %v2_10b40, -3
  store i1 %v7_10b44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10b44, label %.thread707, label %dec_label_pc_10b54

.thread707:                                       ; preds = %dec_label_pc_10b40
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v1_10b40, align 1
  %v0_10b50.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10b50.pr.pr, label %.thread710, label %.thread707.dec_label_pc_10b54thread-pre-split_crit_edge

.thread707.dec_label_pc_10b54thread-pre-split_crit_edge: ; preds = %.thread707
  %v0_10b54.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10b54

dec_label_pc_10b54:                               ; preds = %dec_label_pc_10b40, %.thread707.dec_label_pc_10b54thread-pre-split_crit_edge
  %v0_10b54.pr = phi i32 [ %v0_10b54.pr.pre, %.thread707.dec_label_pc_10b54thread-pre-split_crit_edge ], [ %v3_10b40, %dec_label_pc_10b40 ]
  %v2_10b54 = icmp ugt i32 %v0_10b54.pr, 250
  store i1 %v2_10b54, i1* %cpsr_c.global-to-local, align 1
  %v7_10b54 = icmp eq i32 %v0_10b54.pr, 251
  store i1 %v7_10b54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10b54, label %bb1951, label %.thread710

bb1951:                                           ; preds = %dec_label_pc_10b54
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_10b5c = load i32, i32* @r5, align 4
  %v4_10b5c = inttoptr i32 %v3_10b5c to i8*
  store i8 -3, i8* %v4_10b5c, align 1
  br label %.thread710

.thread710:                                       ; preds = %dec_label_pc_10b54, %.thread707, %bb1951
  %v0_10b60 = load i32, i32* @r4, align 4
  %v1_10b60 = add i32 %v0_10b60, 2
  %v2_10b60 = inttoptr i32 %v1_10b60 to i8*
  %v3_10b60 = load i8, i8* %v2_10b60, align 1
  %v4_10b60 = zext i8 %v3_10b60 to i32
  store i32 %v4_10b60, i32* %r3.global-to-local, align 4
  %v2_10b64 = icmp ugt i8 %v3_10b60, -4
  store i1 %v2_10b64, i1* %cpsr_c.global-to-local, align 1
  %v7_10b64 = icmp eq i8 %v3_10b60, -3
  store i1 %v7_10b64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10b64, label %.thread711, label %dec_label_pc_10b74

.thread711:                                       ; preds = %.thread710
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v2_10b60, align 1
  %v0_10b70.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10b70.pr.pr, label %.thread714, label %.thread711.dec_label_pc_10b74thread-pre-split_crit_edge

.thread711.dec_label_pc_10b74thread-pre-split_crit_edge: ; preds = %.thread711
  %v0_10b74.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10b74

dec_label_pc_10b74:                               ; preds = %.thread710, %.thread711.dec_label_pc_10b74thread-pre-split_crit_edge
  %v0_10b74.pr = phi i32 [ %v0_10b74.pr.pre, %.thread711.dec_label_pc_10b74thread-pre-split_crit_edge ], [ %v4_10b60, %.thread710 ]
  %v2_10b74 = icmp ugt i32 %v0_10b74.pr, 250
  store i1 %v2_10b74, i1* %cpsr_c.global-to-local, align 1
  %v7_10b74 = icmp eq i32 %v0_10b74.pr, 251
  store i1 %v7_10b74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10b74, label %bb1952, label %.thread714

bb1952:                                           ; preds = %dec_label_pc_10b74
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_10b7c = load i32, i32* @r4, align 4
  %v4_10b7c = add i32 %v3_10b7c, 2
  %v5_10b7c = inttoptr i32 %v4_10b7c to i8*
  store i8 -3, i8* %v5_10b7c, align 1
  br label %.thread714

.thread714:                                       ; preds = %dec_label_pc_10b74, %.thread711, %bb1952
  %v0_10b80 = load i32, i32* @r6, align 4
  %v1_10b80 = add i32 %v0_10b80, 4
  %v2_10b80 = inttoptr i32 %v1_10b80 to i32*
  %v3_10b80 = load i32, i32* %v2_10b80, align 4
  store i32 %v3_10b80, i32* %r0.global-to-local, align 4
  %v0_10b84 = load i32, i32* @r4, align 4
  br label %dec_label_pc_10b8c

dec_label_pc_10b8c:                               ; preds = %dec_label_pc_10f74, %.thread714
  %v0_10b90 = phi i32 [ %v3_10f90, %dec_label_pc_10f74 ], [ %v3_10b80, %.thread714 ]
  %storemerge5 = phi i32 [ %v2_10ebc, %dec_label_pc_10f74 ], [ %v0_10b84, %.thread714 ]
  %storemerge4 = phi i32 [ 9, %dec_label_pc_10f74 ], [ 3, %.thread714 ]
  store i32 %storemerge5, i32* %r1.global-to-local, align 4
  store i32 %storemerge4, i32* %r2.global-to-local, align 4
  store i32 16384, i32* @r3, align 4
  %v4_10b90 = call i32 @function_12ac0(i32 %v0_10b90, i32 %storemerge5, i32 %storemerge4, i32 16384)
  store i32 %v4_10b90, i32* %r0.global-to-local, align 4
  %v0_10b94 = load i32, i32* @r6, align 4
  %v1_10b94 = add i32 %v0_10b94, 24
  %v2_10b94 = inttoptr i32 %v1_10b94 to i32*
  %v3_10b94 = load i32, i32* %v2_10b94, align 4
  store i32 %v3_10b94, i32* %r2.global-to-local, align 4
  %v0_10b98 = load i32, i32* @r7, align 4
  %v1_10b98 = add i32 %v0_10b98, 3
  store i32 %v1_10b98, i32* @r7, align 4
  %v3_10b9c = icmp uge i32 %v1_10b98, %v3_10b94
  store i1 %v3_10b9c, i1* %cpsr_c.global-to-local, align 1
  %v9_10b9c = icmp eq i32 %v1_10b98, %v3_10b94
  store i1 %v9_10b9c, i1* %cpsr_z.global-to-local, align 1
  %v0_10ba0 = load i32, i32* @r4, align 4
  %v1_10ba0 = add i32 %v0_10ba0, 3
  store i32 %v1_10ba0, i32* @r4, align 4
  %v5_10ba4 = icmp slt i32 %v1_10b98, %v3_10b94
  br i1 %v5_10ba4, label %dec_label_pc_10afc, label %dec_label_pc_10ba8

dec_label_pc_10ba8:                               ; preds = %dec_label_pc_10af4.loopexit, %dec_label_pc_10afc, %dec_label_pc_10b8c, %dec_label_pc_10b34, %dec_label_pc_10b08, %dec_label_pc_10ae8, %dec_label_pc_10ea0.dec_label_pc_10ba8.loopexit_crit_edge
  %v6_10bb0 = phi i32 [ %v0_10ec8, %dec_label_pc_10ea0.dec_label_pc_10ba8.loopexit_crit_edge ], [ %v0_10658, %dec_label_pc_10ae8 ], [ %v6_10bb01139, %dec_label_pc_10afc ], [ %v0_10b94, %dec_label_pc_10b8c ], [ %v6_10bb01139, %dec_label_pc_10b34 ], [ %v6_10bb01139, %dec_label_pc_10b08 ], [ %v6_10bb01139, %dec_label_pc_10af4.loopexit ]
  %v0_10ba8 = phi i32 [ %v0_10ba8.pre.pre, %dec_label_pc_10ea0.dec_label_pc_10ba8.loopexit_crit_edge ], [ 0, %dec_label_pc_10ae8 ], [ %v1_10b24, %dec_label_pc_10afc ], [ %v1_10b98, %dec_label_pc_10b8c ], [ %v1_10b24, %dec_label_pc_10b34 ], [ %v1_10b24, %dec_label_pc_10b08 ], [ %v2_10b24, %dec_label_pc_10af4.loopexit ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10ba8 = icmp eq i32 %v0_10ba8, 0
  store i1 %v2_10ba8, i1* %cpsr_z.global-to-local, align 1
  %tmp1953 = icmp slt i32 %v0_10ba8, 1
  br i1 %tmp1953, label %.thread1199, label %bb1954

bb1954:                                           ; preds = %dec_label_pc_10ba8
  store i32 3, i32* @r3, align 4
  %v7_10bb0 = add i32 %v6_10bb0, 12
  %v8_10bb0 = inttoptr i32 %v7_10bb0 to i32*
  store i32 3, i32* %v8_10bb0, align 4
  br label %.thread1199

.thread1199:                                      ; preds = %dec_label_pc_10ba8, %dec_label_pc_10db0, %dec_label_pc_11108, %dec_label_pc_10f20, %dec_label_pc_10c74, %dec_label_pc_1114c, %bb1954
  %v0_10bb4 = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10bb4 = icmp eq i32 %v0_10bb4, 0
  store i1 %v2_10bb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10bb4, label %dec_label_pc_105d8.loopexit, label %dec_label_pc_10770

dec_label_pc_10bc0:                               ; preds = %dec_label_pc_10658
  %v1_10bc0 = add i32 %v0_10658, 24
  %v2_10bc0 = inttoptr i32 %v1_10bc0 to i32*
  %v3_10bc0 = load i32, i32* %v2_10bc0, align 4
  store i32 %v3_10bc0, i32* %r2.global-to-local, align 4
  %v1_10bc4 = add i32 %v3_10bc0, -1
  store i32 %v1_10bc4, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10bc8 = icmp eq i32 %v1_10bc4, 0
  store i1 %v2_10bc8, i1* %cpsr_z.global-to-local, align 1
  %tmp1955 = icmp slt i32 %v1_10bc4, 1
  br i1 %tmp1955, label %dec_label_pc_10c2c, label %dec_label_pc_10bd0

dec_label_pc_10bd0:                               ; preds = %dec_label_pc_10bc0
  %v2_10bd0 = add i32 %v1_10bc4, %v0_10658
  store i32 %v2_10bd0, i32* %r3.global-to-local, align 4
  %v1_10bd4 = add i32 %v2_10bd0, 28
  %v2_10bd4 = inttoptr i32 %v1_10bd4 to i8*
  %v3_10bd4 = load i8, i8* %v2_10bd4, align 1
  %v4_10bd4 = zext i8 %v3_10bd4 to i32
  store i32 %v4_10bd4, i32* %r3.global-to-local, align 4
  %v2_10bd8 = icmp ugt i8 %v3_10bd4, 61
  store i1 %v2_10bd8, i1* %cpsr_c.global-to-local, align 1
  %v7_10bd8 = icmp eq i8 %v3_10bd4, 62
  store i1 %v7_10bd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10bd8, label %dec_label_pc_10f58, label %bb1956

bb1956:                                           ; preds = %dec_label_pc_10bd0
  %v3_10bdc = icmp ugt i8 %v3_10bd4, 57
  store i1 %v3_10bdc, i1* %cpsr_c.global-to-local, align 1
  %v8_10bdc = icmp eq i8 %v3_10bd4, 58
  store i1 %v8_10bdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10bdc, label %dec_label_pc_10f58, label %dec_label_pc_10be4

dec_label_pc_10be4:                               ; preds = %bb1956
  %v2_10be4 = icmp ugt i8 %v3_10bd4, 35
  store i1 %v2_10be4, i1* %cpsr_c.global-to-local, align 1
  %v7_10be4 = icmp eq i8 %v3_10bd4, 36
  store i1 %v7_10be4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10be4, label %dec_label_pc_10f58, label %dec_label_pc_10bec

dec_label_pc_10bec:                               ; preds = %dec_label_pc_10be4
  %v2_10bec = icmp ugt i8 %v3_10bd4, 34
  store i1 %v2_10bec, i1* %cpsr_c.global-to-local, align 1
  %v7_10bec = icmp eq i8 %v3_10bd4, 35
  store i1 %v7_10bec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10bec, label %dec_label_pc_10f58, label %dec_label_pc_10c24.preheader

dec_label_pc_10c24.preheader:                     ; preds = %dec_label_pc_10bec
  %v3_10bf0 = add i32 %v0_10658, 28
  %v2_10bf4 = add i32 %v3_10bf0, %v3_10bc0
  store i32 %v2_10bf4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10c24

dec_label_pc_10c00:                               ; preds = %dec_label_pc_10c24
  %v1_10c00 = add i32 %v0_10c0c720, -2
  %v2_10c00 = inttoptr i32 %v1_10c00 to i8*
  %v3_10c00 = load i8, i8* %v2_10c00, align 1
  %v4_10c00 = zext i8 %v3_10c00 to i32
  store i32 %v4_10c00, i32* %r2.global-to-local, align 4
  %v2_10c04 = icmp ugt i8 %v3_10c00, 61
  store i1 %v2_10c04, i1* %cpsr_c.global-to-local, align 1
  %v7_10c04 = icmp eq i8 %v3_10c00, 62
  store i1 %v7_10c04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10c04, label %.thread719, label %bb1957

.thread719:                                       ; preds = %dec_label_pc_10c00
  %v1_10c0c721 = add i32 %v0_10c0c720, -1
  store i32 %v1_10c0c721, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10f58

bb1957:                                           ; preds = %dec_label_pc_10c00
  %v3_10c08 = icmp ugt i8 %v3_10c00, 57
  store i1 %v3_10c08, i1* %cpsr_c.global-to-local, align 1
  %v8_10c08 = icmp eq i8 %v3_10c00, 58
  store i1 %v8_10c08, i1* %cpsr_z.global-to-local, align 1
  %v1_10c0c = add i32 %v0_10c0c720, -1
  store i32 %v1_10c0c, i32* %r3.global-to-local, align 4
  br i1 %v8_10c08, label %dec_label_pc_10f58, label %dec_label_pc_10c14

dec_label_pc_10c14:                               ; preds = %bb1957
  %v2_10c14 = icmp ugt i8 %v3_10c00, 35
  store i1 %v2_10c14, i1* %cpsr_c.global-to-local, align 1
  %v7_10c14 = icmp eq i8 %v3_10c00, 36
  store i1 %v7_10c14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10c14, label %dec_label_pc_10f58, label %dec_label_pc_10c1c

dec_label_pc_10c1c:                               ; preds = %dec_label_pc_10c14
  %v2_10c1c = icmp ugt i8 %v3_10c00, 34
  store i1 %v2_10c1c, i1* %cpsr_c.global-to-local, align 1
  %v7_10c1c = icmp eq i8 %v3_10c00, 35
  store i1 %v7_10c1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10c1c, label %dec_label_pc_10f58, label %dec_label_pc_10c24

dec_label_pc_10c24:                               ; preds = %dec_label_pc_10c24.preheader, %dec_label_pc_10c1c
  %v0_10c0c720 = phi i32 [ %v2_10bf4, %dec_label_pc_10c24.preheader ], [ %v1_10c0c, %dec_label_pc_10c1c ]
  %v0_10c24 = phi i32 [ %v1_10bc4, %dec_label_pc_10c24.preheader ], [ %v1_10c24, %dec_label_pc_10c1c ]
  %v1_10c24 = add i32 %v0_10c24, -1
  store i32 %v1_10c24, i32* %r1.global-to-local, align 4
  %v2_10c24 = icmp ne i32 %v0_10c24, 0
  store i1 %v2_10c24, i1* %cpsr_c.global-to-local, align 1
  %v7_10c24 = icmp eq i32 %v0_10c24, 1
  store i1 %v7_10c24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10c24, label %dec_label_pc_10c2c, label %dec_label_pc_10c00

dec_label_pc_10c2c:                               ; preds = %dec_label_pc_10c24, %dec_label_pc_10bc0
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_10c30 = call i32 @function_1139c(i32 25)
  store i32 %v2_10d3c, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r0.global-to-local, align 4
  %v3_10c40 = call i32 @function_112d8(i32 25, i32* nonnull %stack_var_-60)
  %v3_10c44 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_10c40, i32* %r2.global-to-local, align 4
  %v1_10c4c = add i32 %v3_10c44, -1
  store i32 %v1_10c4c, i32* %r3.global-to-local, align 4
  %v0_10c50 = load i32, i32* @sl, align 4
  store i32 %v0_10c50, i32* %r0.global-to-local, align 4
  %v0_10c54 = load i32, i32* @r6, align 4
  %v1_10c54 = add i32 %v0_10c54, 24
  %v2_10c54 = inttoptr i32 %v1_10c54 to i32*
  %v3_10c54 = load i32, i32* %v2_10c54, align 4
  store i32 %v3_10c54, i32* %r1.global-to-local, align 4
  %v4_10c58 = call i32 @function_11994(i32 %v0_10c50, i32 %v3_10c54, i32 %v3_10c40, i32 %v1_10c4c)
  store i32 %v4_10c58, i32* %r0.global-to-local, align 4
  %v1_10c5c = add i32 %v4_10c58, 1
  store i32 %v1_10c5c, i32* @r7, align 4
  %v2_10c5c = icmp eq i32 %v4_10c58, -1
  store i1 %v2_10c5c, i1* %cpsr_c.global-to-local, align 1
  %v7_10c5c = icmp eq i32 %v1_10c5c, 0
  store i1 %v7_10c5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10c5c, label %thread-pre-split722, label %bb1958

bb1958:                                           ; preds = %dec_label_pc_10c2c
  store i32 1, i32* @r7, align 4
  br label %thread-pre-split722

thread-pre-split722:                              ; preds = %dec_label_pc_10c2c, %bb1958
  %v0_10c64 = phi i1 [ false, %bb1958 ], [ true, %dec_label_pc_10c2c ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v0_10c64, i1* %cpsr_z.global-to-local, align 1
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_112a8 = call i32 @function_112fc(i32 25)
  br i1 %v0_10c64, label %dec_label_pc_112a4, label %dec_label_pc_10c74

dec_label_pc_10c74:                               ; preds = %thread-pre-split722, %dec_label_pc_10f58
  %storemerge = phi i32 [ %v1_10f60, %dec_label_pc_10f58 ], [ %v1_112a8, %thread-pre-split722 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v0_10c74 = load i32, i32* @r6, align 4
  %v1_10c74 = inttoptr i32 %v0_10c74 to i32*
  %v2_10c74 = load i32, i32* %v1_10c74, align 4
  store i32 %v2_10c74, i32* %r3.global-to-local, align 4
  %v1_10c78 = add i32 %v0_10c74, 4
  %v2_10c78 = inttoptr i32 %v1_10c78 to i32*
  %v3_10c78 = load i32, i32* %v2_10c78, align 4
  store i32 %v3_10c78, i32* %r0.global-to-local, align 4
  %v1_10c7c = add i32 %v2_10c74, 13
  %v2_10c7c = inttoptr i32 %v1_10c7c to i8*
  %v3_10c7c = load i8, i8* %v2_10c7c, align 1
  %v4_10c7c = zext i8 %v3_10c7c to i32
  store i32 %v4_10c7c, i32* %r2.global-to-local, align 4
  %v1_10c80 = add i32 %v2_10c74, 4
  %v2_10c80 = inttoptr i32 %v1_10c80 to i32*
  %v3_10c80 = load i32, i32* %v2_10c80, align 4
  store i32 %v3_10c80, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_10c88 = call i32 @function_12ac0(i32 %v3_10c78, i32 %v3_10c80, i32 %v4_10c7c, i32 16384)
  store i32 %v4_10c88, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10c90 = load i32, i32* @r6, align 4
  %v1_10c90 = add i32 %v0_10c90, 4
  %v2_10c90 = inttoptr i32 %v1_10c90 to i32*
  %v3_10c90 = load i32, i32* %v2_10c90, align 4
  store i32 %v3_10c90, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_177e8.206 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_10c9c = call i32 @function_12ac0(i32 %v3_10c90, i32 ptrtoint ([3 x i8]* @global_var_177e8.206 to i32), i32 2, i32 16384)
  store i32 %v4_10c9c, i32* %r0.global-to-local, align 4
  store i32 5, i32* @r3, align 4
  %v1_10ca4 = load i32, i32* @r6, align 4
  %v2_10ca4 = add i32 %v1_10ca4, 12
  %v3_10ca4 = inttoptr i32 %v2_10ca4 to i32*
  store i32 5, i32* %v3_10ca4, align 4
  br label %.thread1199

dec_label_pc_10cac:                               ; preds = %dec_label_pc_10658
  %v1_10cac = add i32 %v0_10658, 24
  %v2_10cac = inttoptr i32 %v1_10cac to i32*
  %v3_10cac = load i32, i32* %v2_10cac, align 4
  store i32 %v3_10cac, i32* %r2.global-to-local, align 4
  %v1_10cb0 = add i32 %v3_10cac, -1
  store i32 %v1_10cb0, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10cb4 = icmp eq i32 %v1_10cb0, 0
  store i1 %v2_10cb4, i1* %cpsr_z.global-to-local, align 1
  %tmp1959 = icmp slt i32 %v1_10cb0, 1
  br i1 %tmp1959, label %dec_label_pc_10d28, label %dec_label_pc_10cbc

dec_label_pc_10cbc:                               ; preds = %dec_label_pc_10cac
  %v2_10cbc = add i32 %v1_10cb0, %v0_10658
  store i32 %v2_10cbc, i32* %r3.global-to-local, align 4
  %v1_10cc0 = add i32 %v2_10cbc, 28
  %v2_10cc0 = inttoptr i32 %v1_10cc0 to i8*
  %v3_10cc0 = load i8, i8* %v2_10cc0, align 1
  %v4_10cc0 = zext i8 %v3_10cc0 to i32
  store i32 %v4_10cc0, i32* %r3.global-to-local, align 4
  %v2_10cc4 = icmp ugt i8 %v3_10cc0, 61
  store i1 %v2_10cc4, i1* %cpsr_c.global-to-local, align 1
  %v7_10cc4 = icmp eq i8 %v3_10cc0, 62
  store i1 %v7_10cc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10cc4, label %dec_label_pc_10f0c, label %bb1960

bb1960:                                           ; preds = %dec_label_pc_10cbc
  %v3_10cc8 = icmp ugt i8 %v3_10cc0, 57
  store i1 %v3_10cc8, i1* %cpsr_c.global-to-local, align 1
  %v8_10cc8 = icmp eq i8 %v3_10cc0, 58
  store i1 %v8_10cc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10cc8, label %dec_label_pc_10f0c, label %dec_label_pc_10cd0

dec_label_pc_10cd0:                               ; preds = %bb1960
  %v2_10cd0 = icmp ugt i8 %v3_10cc0, 35
  store i1 %v2_10cd0, i1* %cpsr_c.global-to-local, align 1
  %v7_10cd0 = icmp eq i8 %v3_10cc0, 36
  store i1 %v7_10cd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10cd0, label %dec_label_pc_10f0c, label %dec_label_pc_10cd8

dec_label_pc_10cd8:                               ; preds = %dec_label_pc_10cd0
  %v2_10cd8 = icmp ugt i8 %v3_10cc0, 34
  store i1 %v2_10cd8, i1* %cpsr_c.global-to-local, align 1
  %v7_10cd8 = icmp eq i8 %v3_10cc0, 35
  store i1 %v7_10cd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10cd8, label %dec_label_pc_10f0c, label %dec_label_pc_10ce0

dec_label_pc_10ce0:                               ; preds = %dec_label_pc_10cd8
  %v2_10ce0 = icmp ugt i8 %v3_10cc0, 36
  store i1 %v2_10ce0, i1* %cpsr_c.global-to-local, align 1
  %v7_10ce0 = icmp eq i8 %v3_10cc0, 37
  store i1 %v7_10ce0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10ce0, label %dec_label_pc_10f0c, label %dec_label_pc_10d20.preheader

dec_label_pc_10d20.preheader:                     ; preds = %dec_label_pc_10ce0
  %v3_10ce4 = add i32 %v0_10658, 28
  %v2_10ce8 = add i32 %v3_10ce4, %v3_10cac
  store i32 %v2_10ce8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10d20

dec_label_pc_10cf4:                               ; preds = %dec_label_pc_10d20
  %v1_10cf4 = add i32 %v0_10d00728, -2
  %v2_10cf4 = inttoptr i32 %v1_10cf4 to i8*
  %v3_10cf4 = load i8, i8* %v2_10cf4, align 1
  %v4_10cf4 = zext i8 %v3_10cf4 to i32
  store i32 %v4_10cf4, i32* %r2.global-to-local, align 4
  %v2_10cf8 = icmp ugt i8 %v3_10cf4, 61
  store i1 %v2_10cf8, i1* %cpsr_c.global-to-local, align 1
  %v7_10cf8 = icmp eq i8 %v3_10cf4, 62
  store i1 %v7_10cf8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10cf8, label %.thread727, label %bb1961

.thread727:                                       ; preds = %dec_label_pc_10cf4
  %v1_10d00729 = add i32 %v0_10d00728, -1
  store i32 %v1_10d00729, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10f0c

bb1961:                                           ; preds = %dec_label_pc_10cf4
  %v3_10cfc = icmp ugt i8 %v3_10cf4, 57
  store i1 %v3_10cfc, i1* %cpsr_c.global-to-local, align 1
  %v8_10cfc = icmp eq i8 %v3_10cf4, 58
  store i1 %v8_10cfc, i1* %cpsr_z.global-to-local, align 1
  %v1_10d00 = add i32 %v0_10d00728, -1
  store i32 %v1_10d00, i32* %r3.global-to-local, align 4
  br i1 %v8_10cfc, label %dec_label_pc_10f0c, label %dec_label_pc_10d08

dec_label_pc_10d08:                               ; preds = %bb1961
  %v2_10d08 = icmp ugt i8 %v3_10cf4, 35
  store i1 %v2_10d08, i1* %cpsr_c.global-to-local, align 1
  %v7_10d08 = icmp eq i8 %v3_10cf4, 36
  store i1 %v7_10d08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10d08, label %dec_label_pc_10f0c, label %dec_label_pc_10d10

dec_label_pc_10d10:                               ; preds = %dec_label_pc_10d08
  %v2_10d10 = icmp ugt i8 %v3_10cf4, 34
  store i1 %v2_10d10, i1* %cpsr_c.global-to-local, align 1
  %v7_10d10 = icmp eq i8 %v3_10cf4, 35
  store i1 %v7_10d10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10d10, label %dec_label_pc_10f0c, label %dec_label_pc_10d18

dec_label_pc_10d18:                               ; preds = %dec_label_pc_10d10
  %v2_10d18 = icmp ugt i8 %v3_10cf4, 36
  store i1 %v2_10d18, i1* %cpsr_c.global-to-local, align 1
  %v7_10d18 = icmp eq i8 %v3_10cf4, 37
  store i1 %v7_10d18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10d18, label %dec_label_pc_10f0c, label %dec_label_pc_10d20

dec_label_pc_10d20:                               ; preds = %dec_label_pc_10d20.preheader, %dec_label_pc_10d18
  %v0_10d00728 = phi i32 [ %v2_10ce8, %dec_label_pc_10d20.preheader ], [ %v1_10d00, %dec_label_pc_10d18 ]
  %v0_10d20 = phi i32 [ %v1_10cb0, %dec_label_pc_10d20.preheader ], [ %v1_10d20, %dec_label_pc_10d18 ]
  %v1_10d20 = add i32 %v0_10d20, -1
  store i32 %v1_10d20, i32* %r1.global-to-local, align 4
  %v2_10d20 = icmp ne i32 %v0_10d20, 0
  store i1 %v2_10d20, i1* %cpsr_c.global-to-local, align 1
  %v7_10d20 = icmp eq i32 %v0_10d20, 1
  store i1 %v7_10d20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10d20, label %dec_label_pc_10d28, label %dec_label_pc_10cf4

dec_label_pc_10d28:                               ; preds = %dec_label_pc_10d20, %dec_label_pc_10cac
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_10d2c = call i32 @function_1139c(i32 26)
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_10d34 = call i32 @function_1139c(i32 27)
  store i32 %v2_10d3c, i32* %r1.global-to-local, align 4
  store i32 26, i32* %r0.global-to-local, align 4
  %v3_10d44 = call i32 @function_112d8(i32 26, i32* nonnull %stack_var_-60)
  store i32 %v3_10d44, i32* @r4, align 4
  store i32 %v2_10d3c, i32* %r1.global-to-local, align 4
  store i32 27, i32* %r0.global-to-local, align 4
  %v3_10d58 = call i32 @function_112d8(i32 27, i32* nonnull %stack_var_-60)
  %v3_10d5c = load i32, i32* %stack_var_-60, align 4
  %sext = mul i32 %v3_10d58, 16777216
  %v1_10d60 = sdiv i32 %sext, 16777216
  store i32 %v1_10d60, i32* @r5, align 4
  %v0_10d64 = load i32, i32* @r4, align 4
  store i32 %v0_10d64, i32* %r2.global-to-local, align 4
  %v1_10d68 = add i32 %v3_10d5c, -1
  store i32 %v1_10d68, i32* %r3.global-to-local, align 4
  %v0_10d6c = load i32, i32* @sl, align 4
  store i32 %v0_10d6c, i32* %r0.global-to-local, align 4
  %v0_10d70 = load i32, i32* @r6, align 4
  %v1_10d70 = add i32 %v0_10d70, 24
  %v2_10d70 = inttoptr i32 %v1_10d70 to i32*
  %v3_10d70 = load i32, i32* %v2_10d70, align 4
  store i32 %v3_10d70, i32* %r1.global-to-local, align 4
  %v4_10d74 = call i32 @function_11994(i32 %v0_10d6c, i32 %v3_10d70, i32 %v0_10d64, i32 %v1_10d68)
  store i32 %v4_10d74, i32* %r0.global-to-local, align 4
  %v2_10d78 = icmp eq i32 %v4_10d74, -1
  store i1 %v2_10d78, i1* %cpsr_c.global-to-local, align 1
  %v7_10d78 = icmp eq i32 %v4_10d74, -1
  store i1 %v7_10d78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10d78, label %dec_label_pc_10d88, label %dec_label_pc_10db0

dec_label_pc_10d88:                               ; preds = %dec_label_pc_10d28
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v3_10d88 = load i32, i32* %stack_var_-60, align 4
  %v0_10d8c = load i32, i32* @r5, align 4
  store i32 %v0_10d8c, i32* %r2.global-to-local, align 4
  %v1_10d90 = add i32 %v3_10d88, -1
  store i32 %v1_10d90, i32* %r3.global-to-local, align 4
  %v0_10d94 = load i32, i32* @sl, align 4
  store i32 %v0_10d94, i32* %r0.global-to-local, align 4
  %v0_10d98 = load i32, i32* @r6, align 4
  %v1_10d98 = add i32 %v0_10d98, 24
  %v2_10d98 = inttoptr i32 %v1_10d98 to i32*
  %v3_10d98 = load i32, i32* %v2_10d98, align 4
  store i32 %v3_10d98, i32* %r1.global-to-local, align 4
  %v4_10d9c = call i32 @function_11994(i32 %v0_10d94, i32 %v3_10d98, i32 %v0_10d8c, i32 %v1_10d90)
  store i32 %v4_10d9c, i32* %r0.global-to-local, align 4
  %v1_10da0 = add i32 %v4_10d9c, 1
  store i32 %v1_10da0, i32* @r7, align 4
  %v2_10da0 = icmp eq i32 %v4_10d9c, -1
  store i1 %v2_10da0, i1* %cpsr_c.global-to-local, align 1
  %v7_10da0 = icmp eq i32 %v1_10da0, 0
  store i1 %v7_10da0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10da0, label %dec_label_pc_112c0, label %dec_label_pc_10db0

dec_label_pc_10db0:                               ; preds = %dec_label_pc_10d88, %dec_label_pc_10d28
  store i32 1, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_10db4 = call i32 @function_112fc(i32 26)
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_10dbc = call i32 @function_112fc(i32 27)
  store i32 %v1_10dbc, i32* %r0.global-to-local, align 4
  %v0_10dc0 = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10dc0 = icmp eq i32 %v0_10dc0, 0
  store i1 %v2_10dc0, i1* %cpsr_z.global-to-local, align 1
  %tmp1962 = icmp slt i32 %v0_10dc0, 1
  br i1 %tmp1962, label %.thread1199, label %dec_label_pc_10f20

dec_label_pc_10dcc:                               ; preds = %dec_label_pc_10658
  %v1_10dcc = add i32 %v0_10658, 24
  %v2_10dcc = inttoptr i32 %v1_10dcc to i32*
  %v3_10dcc = load i32, i32* %v2_10dcc, align 4
  store i32 %v3_10dcc, i32* %r2.global-to-local, align 4
  %v1_10dd0 = add i32 %v3_10dcc, -1
  store i32 %v1_10dd0, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10dd4 = icmp eq i32 %v1_10dd0, 0
  store i1 %v2_10dd4, i1* %cpsr_z.global-to-local, align 1
  %tmp1963 = icmp slt i32 %v1_10dd0, 1
  br i1 %tmp1963, label %dec_label_pc_105dc.backedge.thread, label %dec_label_pc_10ddc

dec_label_pc_10ddc:                               ; preds = %dec_label_pc_10dcc
  %v2_10ddc = add i32 %v1_10dd0, %v0_10658
  store i32 %v2_10ddc, i32* %r3.global-to-local, align 4
  %v1_10de0 = add i32 %v2_10ddc, 28
  %v2_10de0 = inttoptr i32 %v1_10de0 to i8*
  %v3_10de0 = load i8, i8* %v2_10de0, align 1
  %v4_10de0 = zext i8 %v3_10de0 to i32
  store i32 %v4_10de0, i32* %r3.global-to-local, align 4
  %v2_10de4 = icmp ugt i8 %v3_10de0, 61
  store i1 %v2_10de4, i1* %cpsr_c.global-to-local, align 1
  %v7_10de4 = icmp eq i8 %v3_10de0, 62
  store i1 %v7_10de4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10de4, label %dec_label_pc_10e48, label %bb1964

bb1964:                                           ; preds = %dec_label_pc_10ddc
  %v3_10de8 = icmp ugt i8 %v3_10de0, 57
  store i1 %v3_10de8, i1* %cpsr_c.global-to-local, align 1
  %v8_10de8 = icmp eq i8 %v3_10de0, 58
  store i1 %v8_10de8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10de8, label %dec_label_pc_10e48, label %dec_label_pc_10df0

dec_label_pc_10df0:                               ; preds = %bb1964
  %v2_10df0 = icmp ugt i8 %v3_10de0, 35
  store i1 %v2_10df0, i1* %cpsr_c.global-to-local, align 1
  %v7_10df0 = icmp eq i8 %v3_10de0, 36
  store i1 %v7_10df0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10df0, label %dec_label_pc_10e48, label %dec_label_pc_10df8

dec_label_pc_10df8:                               ; preds = %dec_label_pc_10df0
  %v2_10df8 = icmp ugt i8 %v3_10de0, 34
  store i1 %v2_10df8, i1* %cpsr_c.global-to-local, align 1
  %v7_10df8 = icmp eq i8 %v3_10de0, 35
  store i1 %v7_10df8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10df8, label %dec_label_pc_10e48, label %dec_label_pc_10e00

dec_label_pc_10e00:                               ; preds = %dec_label_pc_10df8
  %v2_10e00 = icmp ugt i8 %v3_10de0, 36
  store i1 %v2_10e00, i1* %cpsr_c.global-to-local, align 1
  %v7_10e00 = icmp eq i8 %v3_10de0, 37
  store i1 %v7_10e00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10e00, label %dec_label_pc_10e48, label %dec_label_pc_10e2c.preheader

dec_label_pc_10e2c.preheader:                     ; preds = %dec_label_pc_10e00
  %v3_10e04 = add i32 %v0_10658, 28
  %v2_10e08 = add i32 %v3_10e04, %v3_10dcc
  store i32 %v2_10e08, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10e2c

dec_label_pc_10e14:                               ; preds = %bb1965
  %v2_10e14 = icmp ugt i8 %v3_10e34, 35
  store i1 %v2_10e14, i1* %cpsr_c.global-to-local, align 1
  %v7_10e14 = icmp eq i8 %v3_10e34, 36
  store i1 %v7_10e14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10e14, label %dec_label_pc_10e48, label %dec_label_pc_10e1c

dec_label_pc_10e1c:                               ; preds = %dec_label_pc_10e14
  %v2_10e1c = icmp ugt i8 %v3_10e34, 34
  store i1 %v2_10e1c, i1* %cpsr_c.global-to-local, align 1
  %v7_10e1c = icmp eq i8 %v3_10e34, 35
  store i1 %v7_10e1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10e1c, label %dec_label_pc_10e48, label %dec_label_pc_10e24

dec_label_pc_10e24:                               ; preds = %dec_label_pc_10e1c
  %v2_10e24 = icmp ugt i8 %v3_10e34, 36
  store i1 %v2_10e24, i1* %cpsr_c.global-to-local, align 1
  %v7_10e24 = icmp eq i8 %v3_10e34, 37
  store i1 %v7_10e24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10e24, label %dec_label_pc_10e48, label %dec_label_pc_10e2c

dec_label_pc_10e2c:                               ; preds = %dec_label_pc_10e2c.preheader, %dec_label_pc_10e24
  %v0_10e40743 = phi i32 [ %v2_10e08, %dec_label_pc_10e2c.preheader ], [ %v1_10e40, %dec_label_pc_10e24 ]
  %v0_10e2c = phi i32 [ %v1_10dd0, %dec_label_pc_10e2c.preheader ], [ %v1_10e2c, %dec_label_pc_10e24 ]
  %v1_10e2c = add i32 %v0_10e2c, -1
  store i32 %v1_10e2c, i32* %r1.global-to-local, align 4
  %v2_10e2c = icmp ne i32 %v0_10e2c, 0
  store i1 %v2_10e2c, i1* %cpsr_c.global-to-local, align 1
  %v7_10e2c = icmp eq i32 %v0_10e2c, 1
  store i1 %v7_10e2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10e2c, label %dec_label_pc_105dc.backedge.thread2185, label %dec_label_pc_10e34

dec_label_pc_10e34:                               ; preds = %dec_label_pc_10e2c
  %v1_10e34 = add i32 %v0_10e40743, -2
  %v2_10e34 = inttoptr i32 %v1_10e34 to i8*
  %v3_10e34 = load i8, i8* %v2_10e34, align 1
  %v4_10e34 = zext i8 %v3_10e34 to i32
  store i32 %v4_10e34, i32* %r2.global-to-local, align 4
  %v2_10e38 = icmp ugt i8 %v3_10e34, 61
  store i1 %v2_10e38, i1* %cpsr_c.global-to-local, align 1
  %v7_10e38 = icmp eq i8 %v3_10e34, 62
  store i1 %v7_10e38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10e38, label %.thread742, label %bb1965

.thread742:                                       ; preds = %dec_label_pc_10e34
  %v1_10e40744 = add i32 %v0_10e40743, -1
  store i32 %v1_10e40744, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10e48

bb1965:                                           ; preds = %dec_label_pc_10e34
  %v3_10e3c = icmp ugt i8 %v3_10e34, 57
  store i1 %v3_10e3c, i1* %cpsr_c.global-to-local, align 1
  %v8_10e3c = icmp eq i8 %v3_10e34, 58
  store i1 %v8_10e3c, i1* %cpsr_z.global-to-local, align 1
  %v1_10e40 = add i32 %v0_10e40743, -1
  store i32 %v1_10e40, i32* %r3.global-to-local, align 4
  br i1 %v8_10e3c, label %dec_label_pc_10e48, label %dec_label_pc_10e14

dec_label_pc_10e48:                               ; preds = %bb1965, %dec_label_pc_10e24, %dec_label_pc_10e1c, %dec_label_pc_10e14, %dec_label_pc_10e00, %dec_label_pc_10ddc, %.thread742, %dec_label_pc_10df8, %dec_label_pc_10df0, %bb1964
  %v0_10e4c = phi i32 [ %v1_10dd0, %dec_label_pc_10e00 ], [ %v1_10dd0, %dec_label_pc_10ddc ], [ %v1_10e2c, %.thread742 ], [ %v1_10dd0, %dec_label_pc_10df8 ], [ %v1_10dd0, %dec_label_pc_10df0 ], [ %v1_10dd0, %bb1964 ], [ %v1_10e2c, %dec_label_pc_10e14 ], [ %v1_10e2c, %dec_label_pc_10e1c ], [ %v1_10e2c, %dec_label_pc_10e24 ], [ %v1_10e2c, %bb1965 ]
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_10e4c = add i32 %v0_10e4c, 1
  store i32 %v1_10e4c, i32* @r7, align 4
  %v1_10e50 = call i32 @function_1139c(i32 5)
  store i32 %v2_10d3c, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v3_10e60 = call i32 @function_112d8(i32 5, i32* nonnull %stack_var_-60)
  store i32 %v3_10e60, i32* %r0.global-to-local, align 4
  %v3_10e64 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_10e64, i32* %r2.global-to-local, align 4
  store i32 %v3_10e60, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10e70 = load i32, i32* @r6, align 4
  %v1_10e70 = add i32 %v0_10e70, 4
  %v2_10e70 = inttoptr i32 %v1_10e70 to i32*
  %v3_10e70 = load i32, i32* %v2_10e70, align 4
  store i32 %v3_10e70, i32* %r0.global-to-local, align 4
  %v4_10e74 = call i32 @function_12ac0(i32 %v3_10e70, i32 %v3_10e60, i32 %v3_10e64, i32 16384)
  store i32 %v4_10e74, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_177e8.206 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_10e84 = load i32, i32* @r6, align 4
  %v1_10e84 = add i32 %v0_10e84, 4
  %v2_10e84 = inttoptr i32 %v1_10e84 to i32*
  %v3_10e84 = load i32, i32* %v2_10e84, align 4
  store i32 %v3_10e84, i32* %r0.global-to-local, align 4
  %v4_10e88 = call i32 @function_12ac0(i32 %v3_10e84, i32 ptrtoint ([3 x i8]* @global_var_177e8.206 to i32), i32 2, i32 16384)
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_10e90 = call i32 @function_112fc(i32 5)
  store i32 %v1_10e90, i32* %r0.global-to-local, align 4
  store i32 6, i32* @r3, align 4
  %v1_10e98 = load i32, i32* @r6, align 4
  %v2_10e98 = add i32 %v1_10e98, 12
  %v3_10e98 = inttoptr i32 %v2_10e98 to i32*
  store i32 6, i32* %v3_10e98, align 4
  br label %dec_label_pc_10770

dec_label_pc_10ea0:                               ; preds = %dec_label_pc_10b2c
  store i32 ptrtoint (i32* @global_var_177f4.208 to i32), i32* @r1, align 4
  store i32 3, i32* @r2, align 4
  store i32 %v2_10eac, i32* @r0, align 4
  %v0_10eb0 = call i32 @function_128d0()
  store i32 9, i32* @r2, align 4
  store i32 %v2_10ebc, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_177eb.210 to i32), i32* @r1, align 4
  %v0_10ec4 = call i32 @function_128d0()
  store i32 %v0_10ec4, i32* %r0.global-to-local, align 4
  %v0_10ec8 = load i32, i32* @r6, align 4
  %v1_10ec8 = add i32 %v0_10ec8, 24
  %v2_10ec8 = inttoptr i32 %v1_10ec8 to i32*
  %v3_10ec8 = load i32, i32* %v2_10ec8, align 4
  %v0_10ecc = load i32, i32* @r4, align 4
  %v1_10ecc = add i32 %v0_10ecc, 2
  store i32 %v1_10ecc, i32* %r2.global-to-local, align 4
  %v0_10ed0 = load i32, i32* @sl, align 4
  %v2_10ed0 = add i32 %v0_10ed0, %v3_10ec8
  store i32 %v2_10ed0, i32* @r3, align 4
  %v3_10ed4 = icmp uge i32 %v2_10ed0, %v1_10ecc
  store i1 %v3_10ed4, i1* %cpsr_c.global-to-local, align 1
  %v9_10ed4 = icmp eq i32 %v2_10ed0, %v1_10ecc
  store i1 %v9_10ed4, i1* %cpsr_z.global-to-local, align 1
  %v2_10ed8 = xor i1 %v3_10ed4, true
  %v3_10ed8 = or i1 %v9_10ed4, %v2_10ed8
  br i1 %v3_10ed8, label %dec_label_pc_10ea0.dec_label_pc_10ba8.loopexit_crit_edge, label %dec_label_pc_10edc

dec_label_pc_10ea0.dec_label_pc_10ba8.loopexit_crit_edge: ; preds = %dec_label_pc_10ea0
  %v0_10ba8.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_10ba8

dec_label_pc_10edc:                               ; preds = %dec_label_pc_10ea0
  %v2_10edc = inttoptr i32 %v1_10ecc to i8*
  %v3_10edc = load i8, i8* %v2_10edc, align 1
  %v4_10edc = zext i8 %v3_10edc to i32
  store i32 %v4_10edc, i32* %r3.global-to-local, align 4
  %v2_10ee0 = icmp ugt i8 %v3_10edc, 30
  store i1 %v2_10ee0, i1* %cpsr_c.global-to-local, align 1
  %v7_10ee0 = icmp eq i8 %v3_10edc, 31
  store i1 %v7_10ee0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10ee0, label %dec_label_pc_10f74, label %dec_label_pc_10ee8

dec_label_pc_10ee8:                               ; preds = %dec_label_pc_10edc
  %v1_10ee8 = inttoptr i32 %v0_10ecc to i8*
  %v2_10ee8 = load i8, i8* %v1_10ee8, align 1
  %v3_10ee8 = zext i8 %v2_10ee8 to i32
  store i32 %v3_10ee8, i32* %r3.global-to-local, align 4
  %v2_10eec = icmp ugt i8 %v2_10ee8, -4
  store i1 %v2_10eec, i1* %cpsr_c.global-to-local, align 1
  %v7_10eec = icmp eq i8 %v2_10ee8, -3
  store i1 %v7_10eec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10eec, label %.thread745, label %dec_label_pc_10efc

.thread745:                                       ; preds = %dec_label_pc_10ee8
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v1_10ee8, align 1
  %v0_10ef8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10ef8.pr.pr, label %dec_label_pc_10b40, label %.thread745.dec_label_pc_10efcthread-pre-split_crit_edge

.thread745.dec_label_pc_10efcthread-pre-split_crit_edge: ; preds = %.thread745
  %v0_10efc.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10efc

dec_label_pc_10efc:                               ; preds = %dec_label_pc_10ee8, %.thread745.dec_label_pc_10efcthread-pre-split_crit_edge
  %v0_10efc.pr = phi i32 [ %v0_10efc.pr.pre, %.thread745.dec_label_pc_10efcthread-pre-split_crit_edge ], [ %v3_10ee8, %dec_label_pc_10ee8 ]
  %v2_10efc = icmp ugt i32 %v0_10efc.pr, 250
  store i1 %v2_10efc, i1* %cpsr_c.global-to-local, align 1
  %v7_10efc = icmp eq i32 %v0_10efc.pr, 251
  store i1 %v7_10efc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10efc, label %bb1966, label %dec_label_pc_10b40

bb1966:                                           ; preds = %dec_label_pc_10efc
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_10f04 = load i32, i32* @r4, align 4
  %v4_10f04 = inttoptr i32 %v3_10f04 to i8*
  store i8 -3, i8* %v4_10f04, align 1
  br label %dec_label_pc_10b40

dec_label_pc_10f0c:                               ; preds = %dec_label_pc_10d18, %dec_label_pc_10d10, %dec_label_pc_10d08, %bb1961, %dec_label_pc_10ce0, %dec_label_pc_10cbc, %.thread727, %dec_label_pc_10cd8, %dec_label_pc_10cd0, %bb1960
  %v0_10f10 = phi i32 [ %v1_10cb0, %dec_label_pc_10ce0 ], [ %v1_10cb0, %dec_label_pc_10cbc ], [ %v1_10d20, %.thread727 ], [ %v1_10cb0, %dec_label_pc_10cd8 ], [ %v1_10cb0, %dec_label_pc_10cd0 ], [ %v1_10cb0, %bb1960 ], [ %v1_10d20, %bb1961 ], [ %v1_10d20, %dec_label_pc_10d08 ], [ %v1_10d20, %dec_label_pc_10d10 ], [ %v1_10d20, %dec_label_pc_10d18 ]
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_10f10 = add i32 %v0_10f10, 1
  store i32 %v1_10f10, i32* @r7, align 4
  %v1_10f14 = call i32 @function_112fc(i32 26)
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_10f1c = call i32 @function_112fc(i32 27)
  store i32 %v1_10f1c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10f20

dec_label_pc_10f20:                               ; preds = %dec_label_pc_10db0, %dec_label_pc_10f0c
  %v0_10f20 = load i32, i32* @r6, align 4
  %v1_10f20 = inttoptr i32 %v0_10f20 to i32*
  %v2_10f20 = load i32, i32* %v1_10f20, align 4
  store i32 %v2_10f20, i32* %r3.global-to-local, align 4
  %v1_10f24 = add i32 %v0_10f20, 4
  %v2_10f24 = inttoptr i32 %v1_10f24 to i32*
  %v3_10f24 = load i32, i32* %v2_10f24, align 4
  store i32 %v3_10f24, i32* %r0.global-to-local, align 4
  %v1_10f28 = add i32 %v2_10f20, 12
  %v2_10f28 = inttoptr i32 %v1_10f28 to i8*
  %v3_10f28 = load i8, i8* %v2_10f28, align 1
  %v4_10f28 = zext i8 %v3_10f28 to i32
  store i32 %v4_10f28, i32* %r2.global-to-local, align 4
  %v1_10f2c = inttoptr i32 %v2_10f20 to i32*
  %v2_10f2c = load i32, i32* %v1_10f2c, align 4
  store i32 %v2_10f2c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_10f34 = call i32 @function_12ac0(i32 %v3_10f24, i32 %v2_10f2c, i32 %v4_10f28, i32 16384)
  store i32 %v4_10f34, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10f3c = load i32, i32* @r6, align 4
  %v1_10f3c = add i32 %v0_10f3c, 4
  %v2_10f3c = inttoptr i32 %v1_10f3c to i32*
  %v3_10f3c = load i32, i32* %v2_10f3c, align 4
  store i32 %v3_10f3c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_177e8.206 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_10f48 = call i32 @function_12ac0(i32 %v3_10f3c, i32 ptrtoint ([3 x i8]* @global_var_177e8.206 to i32), i32 2, i32 16384)
  store i32 %v4_10f48, i32* %r0.global-to-local, align 4
  store i32 4, i32* @r3, align 4
  %v1_10f50 = load i32, i32* @r6, align 4
  %v2_10f50 = add i32 %v1_10f50, 12
  %v3_10f50 = inttoptr i32 %v2_10f50 to i32*
  store i32 4, i32* %v3_10f50, align 4
  br label %.thread1199

dec_label_pc_10f58:                               ; preds = %dec_label_pc_10c1c, %dec_label_pc_10c14, %bb1957, %dec_label_pc_10bec, %dec_label_pc_10bd0, %.thread719, %dec_label_pc_10be4, %bb1956
  %v0_10f5c = phi i32 [ %v1_10bc4, %dec_label_pc_10bec ], [ %v1_10bc4, %dec_label_pc_10bd0 ], [ %v1_10c24, %.thread719 ], [ %v1_10bc4, %dec_label_pc_10be4 ], [ %v1_10bc4, %bb1956 ], [ %v1_10c24, %bb1957 ], [ %v1_10c24, %dec_label_pc_10c14 ], [ %v1_10c24, %dec_label_pc_10c1c ]
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_10f5c = add i32 %v0_10f5c, 1
  store i32 %v1_10f5c, i32* @r7, align 4
  %v1_10f60 = call i32 @function_112fc(i32 25)
  br label %dec_label_pc_10c74

dec_label_pc_10f68:                               ; preds = %dec_label_pc_10730
  %v0_10f68 = load i32, i32* @r6, align 4
  store i32 %v0_10f68, i32* @r0, align 4
  %v0_10f6c = call i32 @function_e19c()
  store i32 %v0_10f6c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1076c

dec_label_pc_10f74:                               ; preds = %dec_label_pc_10edc
  store i32 %v2_10eac, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v1_10f84 = add i32 %v0_10ec8, 4
  %v2_10f84 = inttoptr i32 %v1_10f84 to i32*
  %v3_10f84 = load i32, i32* %v2_10f84, align 4
  store i32 %v3_10f84, i32* %r0.global-to-local, align 4
  %v4_10f88 = call i32 @function_12ac0(i32 %v3_10f84, i32 %v2_10eac, i32 3, i32 16384)
  store i32 %v4_10f88, i32* %r0.global-to-local, align 4
  store i32 %v2_10eb4, i32* %r1.global-to-local, align 4
  %v0_10f90 = load i32, i32* @r6, align 4
  %v1_10f90 = add i32 %v0_10f90, 4
  %v2_10f90 = inttoptr i32 %v1_10f90 to i32*
  %v3_10f90 = load i32, i32* %v2_10f90, align 4
  store i32 %v3_10f90, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10b8c

dec_label_pc_10fa0:                               ; preds = %dec_label_pc_105e4
  store i32 %.pre, i32* @r0, align 4
  %v1_10fa8 = add i32 %v0_10fa0, 92
  store i32 %v1_10fa8, i32* @r1, align 4
  store i32 192, i32* @r2, align 4
  %v3_10fb0 = call i32 @function_128c0(i32 %.pre, i32 %v1_10fa8, i32 192)
  store i32 %v3_10fb0, i32* %r0.global-to-local, align 4
  %v0_10fb4 = load i32, i32* @r6, align 4
  %v1_10fb4 = add i32 %v0_10fb4, 24
  %v2_10fb4 = inttoptr i32 %v1_10fb4 to i32*
  %v3_10fb4 = load i32, i32* %v2_10fb4, align 4
  %v1_10fb8 = add i32 %v3_10fb4, -64
  store i32 %v1_10fb8, i32* %r3.global-to-local, align 4
  store i32 %v1_10fb8, i32* %v2_10fb4, align 4
  br label %dec_label_pc_105f4

dec_label_pc_10fc4:                               ; preds = %dec_label_pc_1059c
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 4, i32* %stack_var_-60, align 4
  store i32 %v2_e548, i32* %r3.global-to-local, align 4
  store i32 %v2_10d3c, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i8 0, i8* %stack_var_-56, align 1
  %v5_10fec = call i32 @function_129d4(i32 %v3_10590, i32 1, i32 4, i32 %v2_e548, i32 %v2_10d3c)
  %v3_10ff0 = load i8, i8* %stack_var_-56, align 1
  %v4_10ff0 = sext i8 %v3_10ff0 to i32
  store i32 %v4_10ff0, i32* %r3.global-to-local, align 4
  %v2_10ff4 = or i32 %v4_10ff0, %v5_10fec
  store i32 %v2_10ff4, i32* %r0.global-to-local, align 4
  %v4_10ff4 = icmp eq i32 %v2_10ff4, 0
  store i1 %v4_10ff4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10ff4, label %dec_label_pc_10ffc, label %dec_label_pc_11168

dec_label_pc_10ffc:                               ; preds = %dec_label_pc_10fc4
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_11000 = load i32, i32* @r6, align 4
  %v2_11000 = add i32 %v1_11000, 12
  %v3_11000 = inttoptr i32 %v2_11000 to i32*
  store i32 2, i32* %v3_11000, align 4
  %v0_11004 = call i32 @function_df2c()
  store i32 %v0_11004, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i16** @global_var_1829c.123 to i32), i32* @lr, align 4
  %v2_1100c = load i16, i16* bitcast (i16** @global_var_1829c.123 to i16*), align 4
  %v3_1100c = zext i16 %v2_1100c to i32
  store i32 %v3_1100c, i32* %r1.global-to-local, align 4
  %v3_11010 = call i32 @function_11f34(i32 %v0_11004, i32 %v3_1100c)
  store i32 ptrtoint (i32* @global_var_1826c.119 to i32), i32* %r0.global-to-local, align 4
  %v2_11018 = load i32, i32* @global_var_1826c.119, align 4
  store i32 %v2_11018, i32* @lr, align 4
  %v1_11020 = load i32, i32* @r4, align 4
  %v9_11020 = icmp eq i32 %v2_11018, %v1_11020
  store i1 %v9_11020, i1* %cpsr_z.global-to-local, align 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 %v3_1100c, i32* %r1.global-to-local, align 4
  %v7_11028 = icmp sgt i32 %v2_11018, %v1_11020
  br i1 %v7_11028, label %dec_label_pc_1102c, label %dec_label_pc_1129c

dec_label_pc_1102c:                               ; preds = %dec_label_pc_10ffc
  %v2_11030 = load i32, i32* @global_var_18298.121, align 4
  store i32 %v2_11030, i32* %ip.global-to-local, align 4
  store i32 %v1_11020, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11044

dec_label_pc_1103c:                               ; preds = %dec_label_pc_1105c, %dec_label_pc_11044
  %v9_1103c = icmp eq i32 %v1_11050, %v2_11018
  br i1 %v9_1103c, label %dec_label_pc_1129c.loopexit, label %dec_label_pc_11044

dec_label_pc_11044:                               ; preds = %dec_label_pc_1103c, %dec_label_pc_1102c
  %v0_11050 = phi i32 [ %v1_11050, %dec_label_pc_1103c ], [ %v1_11020, %dec_label_pc_1102c ]
  %v0_1105c = phi i32 [ %v1_11054, %dec_label_pc_1103c ], [ %v2_11030, %dec_label_pc_1102c ]
  store i32 %v0_1105c, i32* %r0.global-to-local, align 4
  %v1_11048 = add i32 %v0_1105c, 8
  %v2_11048 = inttoptr i32 %v1_11048 to i16*
  %v3_11048 = load i16, i16* %v2_11048, align 2
  %v4_11048 = zext i16 %v3_11048 to i32
  store i32 %v4_11048, i32* %r3.global-to-local, align 4
  %v1_11050 = add i32 %v0_11050, 1
  store i32 %v1_11050, i32* %r2.global-to-local, align 4
  %v1_11054 = add i32 %v0_1105c, 16
  store i32 %v1_11054, i32* %ip.global-to-local, align 4
  %tmp1967 = icmp ugt i16 %v3_11048, %v2_1100c
  br i1 %tmp1967, label %dec_label_pc_1103c, label %dec_label_pc_1105c

dec_label_pc_1105c:                               ; preds = %dec_label_pc_11044
  %v1_1105c = add i32 %v0_1105c, 10
  %v2_1105c = inttoptr i32 %v1_1105c to i16*
  %v3_1105c = load i16, i16* %v2_1105c, align 2
  %v4_1105c = zext i16 %v3_1105c to i32
  store i32 %v4_1105c, i32* %r3.global-to-local, align 4
  %v3_11060 = icmp uge i16 %v3_1105c, %v2_1100c
  %v9_11060 = icmp eq i16 %v3_1105c, %v2_1100c
  %v2_11064 = xor i1 %v3_11060, true
  %v3_11064 = or i1 %v9_11060, %v2_11064
  br i1 %v3_11064, label %dec_label_pc_1103c, label %dec_label_pc_11068.loopexit

dec_label_pc_11068.loopexit:                      ; preds = %dec_label_pc_1105c
  store i1 %v3_11060, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11068

dec_label_pc_11068:                               ; preds = %dec_label_pc_11068.loopexit, %dec_label_pc_1129c
  %v0_1107c = phi i32 [ %v0_1105c, %dec_label_pc_11068.loopexit ], [ 0, %dec_label_pc_1129c ]
  %v0_11068 = load i32, i32* @r6, align 4
  %v1_11068 = add i32 %v0_11068, 4
  %v2_11068 = inttoptr i32 %v1_11068 to i32*
  %v3_11068 = load i32, i32* %v2_11068, align 4
  %v3_1106c = udiv i32 %v3_11068, 32
  store i32 %v3_1106c, i32* %r2.global-to-local, align 4
  %v1_11070 = urem i32 %v3_11068, 32
  store i32 %v1_11070, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_11074 = mul nuw nsw i32 %v3_1106c, 4
  store i32 %v3_11074, i32* @ip, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_1107c = inttoptr i32 %v0_11068 to i32*
  store i32 %v0_1107c, i32* %v2_1107c, align 4
  %v0_11080 = load i32, i32* %r3.global-to-local, align 4
  %v1_11080 = load i32, i32* @r6, align 4
  %v2_11080 = add i32 %v1_11080, 24
  %v3_11080 = inttoptr i32 %v2_11080 to i32*
  store i32 %v0_11080, i32* %v3_11080, align 4
  %v0_105c4.pre = load i32, i32* @ip, align 4
  %v1_105cc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_105c0

dec_label_pc_110bc:                               ; preds = %dec_label_pc_106f8
  store i32 9, i32* %r0.global-to-local, align 4
  %v1_110c8 = call i32 @function_1139c(i32 9)
  store i32 %v2_10d3c, i32* %r1.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v3_110d8 = call i32 @function_112d8(i32 9, i32* nonnull %stack_var_-60)
  store i32 %v3_110d8, i32* %r0.global-to-local, align 4
  %v3_110dc = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_110d8, i32* %r2.global-to-local, align 4
  %v1_110e4 = add i32 %v3_110dc, -1
  store i32 %v1_110e4, i32* %r3.global-to-local, align 4
  %v0_110e8 = load i32, i32* @r6, align 4
  %v1_110e8 = add i32 %v0_110e8, 24
  %v2_110e8 = inttoptr i32 %v1_110e8 to i32*
  %v3_110e8 = load i32, i32* %v2_110e8, align 4
  store i32 %v3_110e8, i32* %r1.global-to-local, align 4
  %v0_110ec = load i32, i32* @sl, align 4
  store i32 %v0_110ec, i32* %r0.global-to-local, align 4
  %v4_110f0 = call i32 @function_11994(i32 %v0_110ec, i32 %v3_110e8, i32 %v3_110d8, i32 %v1_110e4)
  store i32 %v4_110f0, i32* @r7, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v1_110fc = call i32 @function_112fc(i32 9)
  store i32 %v1_110fc, i32* @r0, align 4
  %v0_11100 = load i32, i32* @r7, align 4
  %v2_11100 = icmp eq i32 %v0_11100, -1
  store i1 %v2_11100, i1* %cpsr_c.global-to-local, align 1
  %v7_11100 = icmp eq i32 %v0_11100, -1
  store i1 %v7_11100, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11100, label %dec_label_pc_105d8.loopexit, label %dec_label_pc_11108

dec_label_pc_11108:                               ; preds = %dec_label_pc_110bc
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11108 = icmp eq i32 %v0_11100, 0
  store i1 %v2_11108, i1* %cpsr_z.global-to-local, align 1
  %tmp1968 = icmp slt i32 %v0_11100, 1
  br i1 %tmp1968, label %.thread1199, label %dec_label_pc_11110

dec_label_pc_11110:                               ; preds = %dec_label_pc_11108
  %v0_11110 = load i32, i32* @r6, align 4
  %v1_11110 = add i32 %v0_11110, 20
  %v2_11110 = inttoptr i32 %v1_11110 to i16*
  %v3_11110 = load i16, i16* %v2_11110, align 2
  %v4_11110 = zext i16 %v3_11110 to i32
  store i32 %v4_11110, i32* %r3.global-to-local, align 4
  %v1_11114 = add i32 %v0_11110, 16
  %v2_11114 = inttoptr i32 %v1_11114 to i32*
  %v3_11114 = load i32, i32* %v2_11114, align 4
  store i32 %v3_11114, i32* %r2.global-to-local, align 4
  store i32 %v2_11118, i32* @ip, align 4
  store i32 %v4_11110, i32* %stack_var_-42, align 4
  store i32 %v3_11114, i32* %stack_var_-60, align 4
  %v1_11124 = inttoptr i32 %v0_11110 to i32*
  %v2_11124 = load i32, i32* %v1_11124, align 4
  store i32 %v2_11124, i32* @r8, align 4
  %v0_11128 = call i32 @function_1208c()
  store i32 %v0_11128, i32* %r0.global-to-local, align 4
  %v7_1112c = icmp eq i32 %v0_11128, -1
  %.2044 = zext i1 %v7_1112c to i32
  store i32 %.2044, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11138 = icmp eq i32 %v0_11128, 0
  store i1 %v2_11138, i1* %cpsr_z.global-to-local, align 1
  %tmp1971 = icmp slt i32 %v0_11128, 1
  br i1 %tmp1971, label %bb1972, label %.thread751

.thread751:                                       ; preds = %dec_label_pc_11110
  store i32 1, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1114c

bb1972:                                           ; preds = %dec_label_pc_11110
  store i32 %.2044, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11144 = icmp eq i1 %v7_1112c, false
  store i1 %v2_11144, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11144, label %dec_label_pc_11184, label %dec_label_pc_1114c

dec_label_pc_1114c:                               ; preds = %.thread751, %bb1972, %bb1974
  %v0_1114c = load i32, i32* @r6, align 4
  %v1_1114c = add i32 %v0_1114c, 4
  %v2_1114c = inttoptr i32 %v1_1114c to i32*
  %v3_1114c = load i32, i32* %v2_1114c, align 4
  store i32 %v3_1114c, i32* %r0.global-to-local, align 4
  %v1_11150 = call i32 @function_1239c(i32 %v3_1114c)
  store i32 %v1_11150, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_1115c = load i32, i32* @r6, align 4
  %v2_1115c = add i32 %v1_1115c, 4
  %v3_1115c = inttoptr i32 %v2_1115c to i32*
  store i32 -1, i32* %v3_1115c, align 4
  %v0_11160 = load i32, i32* %r2.global-to-local, align 4
  %v1_11160 = load i32, i32* @r6, align 4
  %v2_11160 = add i32 %v1_11160, 12
  %v3_11160 = inttoptr i32 %v2_11160 to i32*
  store i32 %v0_11160, i32* %v3_11160, align 4
  br label %.thread1199

dec_label_pc_11168:                               ; preds = %dec_label_pc_10fc4
  %v0_11168 = load i32, i32* @r6, align 4
  %v1_11168 = add i32 %v0_11168, 4
  %v2_11168 = inttoptr i32 %v1_11168 to i32*
  %v3_11168 = load i32, i32* %v2_11168, align 4
  store i32 %v3_11168, i32* %r0.global-to-local, align 4
  %v1_1116c = call i32 @function_1239c(i32 %v3_11168)
  store i32 %v1_1116c, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_11174 = load i32, i32* @r4, align 4
  %v1_11174 = load i32, i32* @r6, align 4
  %v2_11174 = add i32 %v1_11174, 12
  %v3_11174 = inttoptr i32 %v2_11174 to i32*
  store i32 %v0_11174, i32* %v3_11174, align 4
  %v0_11178 = load i32, i32* %r3.global-to-local, align 4
  %v1_11178 = load i32, i32* @r6, align 4
  %v2_11178 = add i32 %v1_11178, 4
  %v3_11178 = inttoptr i32 %v2_11178 to i32*
  store i32 %v0_11178, i32* %v3_11178, align 4
  %v0_1117c = load i32, i32* @r4, align 4
  %v1_1117c = trunc i32 %v0_1117c to i8
  %v2_1117c = load i32, i32* @r6, align 4
  %v3_1117c = add i32 %v2_1117c, 284
  %v4_1117c = inttoptr i32 %v3_1117c to i8*
  store i8 %v1_1117c, i8* %v4_1117c, align 1
  br label %dec_label_pc_106e0

dec_label_pc_11184:                               ; preds = %bb1972
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_11190 = call i32 @function_12b7c(i32 2, i32 1, i32 0)
  store i32 %v3_11190, i32* @r4, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_1119c = call i32 @function_1139c(i32 2)
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 2, i32* %stack_var_-96, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_17710.72 to i32), i32* @r0, align 4
  %v2_111b0 = call i32 @function_12904(i32 ptrtoint ([15 x i8]* @global_var_17710.72 to i32))
  %v0_111b4 = load i32, i32* @r5, align 4
  store i32 %v0_111b4, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_111c0 = inttoptr i32 %v0_111b4 to i32*
  %v3_111c0 = call i32 @function_112d8(i32 2, i32* %v2_111c0)
  store i32 %v2_11118, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_111d4 = call i32 @function_112fc(i32 2)
  %v0_111dc = load i32, i32* @r4, align 4
  store i32 %v0_111dc, i32* %r0.global-to-local, align 4
  store i32 %v2_111e0, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_111e8 = call i32 @function_12964(i32 %v0_111dc, i32 %v2_111e0, i32 16)
  store i32 %v3_111e8, i32* %r0.global-to-local, align 4
  %v2_111ec = icmp eq i32 %v3_111e8, -1
  store i1 %v2_111ec, i1* %cpsr_c.global-to-local, align 1
  %v7_111ec = icmp eq i32 %v3_111e8, -1
  store i1 %v7_111ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111ec, label %bb1973, label %bb1974

bb1973:                                           ; preds = %dec_label_pc_11184
  %v1_111f0 = load i32, i32* @r4, align 4
  store i32 %v1_111f0, i32* %r0.global-to-local, align 4
  br label %bb1974

bb1974:                                           ; preds = %dec_label_pc_11184, %bb1973
  store i32 70136, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_111ec, i32 ptrtoint (i32* @global_var_1239c.92 to i32))
  store i32 %v2_e548, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11204 = load i32, i32* @r4, align 4
  store i32 %v0_11204, i32* %r0.global-to-local, align 4
  %v0_11208 = load i32, i32* @r5, align 4
  %v6_11208 = trunc i32 %v0_11208 to i8
  store i8 %v6_11208, i8* %stack_var_-56, align 1
  %v6_1120c = call i32 @function_12ac0(i32 %v0_11204, i32 %v2_e548, i32 1, i32 16384)
  %v0_11214 = load i32, i32* @r4, align 4
  store i32 %v0_11214, i32* %r0.global-to-local, align 4
  store i32 %v2_10d3c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11224 = call i32 @function_12ac0(i32 %v0_11214, i32 %v2_10d3c, i32 4, i32 16384)
  %v0_1122c = load i32, i32* @r4, align 4
  store i32 %v0_1122c, i32* %r0.global-to-local, align 4
  store i32 %v2_11230, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_1123c = call i32 @function_12ac0(i32 %v0_1122c, i32 %v2_11230, i32 2, i32 16384)
  %v0_11240 = load i32, i32* @r8, align 4
  %v1_11240 = add i32 %v0_11240, 12
  store i32 %v1_11240, i32* %r1.global-to-local, align 4
  %v0_11244 = load i32, i32* @r4, align 4
  store i32 %v0_11244, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11250 = call i32 @function_12ac0(i32 %v0_11244, i32 %v1_11240, i32 1, i32 16384)
  store i32 %v4_11250, i32* %r0.global-to-local, align 4
  %v0_11254 = load i32, i32* @r8, align 4
  %v1_11254 = inttoptr i32 %v0_11254 to i32*
  %v2_11254 = load i32, i32* %v1_11254, align 4
  store i32 %v2_11254, i32* %r1.global-to-local, align 4
  %v1_11258 = add i32 %v0_11254, 12
  %v2_11258 = inttoptr i32 %v1_11258 to i8*
  %v3_11258 = load i8, i8* %v2_11258, align 1
  %v4_11258 = zext i8 %v3_11258 to i32
  store i32 %v4_11258, i32* %r2.global-to-local, align 4
  %v0_1125c = load i32, i32* @r4, align 4
  store i32 %v0_1125c, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11264 = call i32 @function_12ac0(i32 %v0_1125c, i32 %v2_11254, i32 %v4_11258, i32 16384)
  %v0_11268 = load i32, i32* @r8, align 4
  %v1_11268 = add i32 %v0_11268, 13
  store i32 %v1_11268, i32* %r1.global-to-local, align 4
  %v0_1126c = load i32, i32* @r4, align 4
  store i32 %v0_1126c, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11278 = call i32 @function_12ac0(i32 %v0_1126c, i32 %v1_11268, i32 1, i32 16384)
  %v0_1127c = load i32, i32* @r4, align 4
  store i32 %v0_1127c, i32* %r0.global-to-local, align 4
  %v0_11280 = load i32, i32* @r8, align 4
  %v1_11280 = add i32 %v0_11280, 13
  %v2_11280 = inttoptr i32 %v1_11280 to i8*
  %v3_11280 = load i8, i8* %v2_11280, align 1
  %v4_11280 = zext i8 %v3_11280 to i32
  store i32 %v4_11280, i32* %r2.global-to-local, align 4
  %v1_11284 = add i32 %v0_11280, 4
  %v2_11284 = inttoptr i32 %v1_11284 to i32*
  %v3_11284 = load i32, i32* %v2_11284, align 4
  store i32 %v3_11284, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_1128c = call i32 @function_12ac0(i32 %v0_1127c, i32 %v3_11284, i32 %v4_11280, i32 16384)
  %v0_11290 = load i32, i32* @r4, align 4
  store i32 %v0_11290, i32* %r0.global-to-local, align 4
  %v1_11294 = call i32 @function_1239c(i32 %v0_11290)
  store i32 %v1_11294, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1114c

dec_label_pc_1129c.loopexit:                      ; preds = %dec_label_pc_1103c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1129c

dec_label_pc_1129c:                               ; preds = %dec_label_pc_1129c.loopexit, %dec_label_pc_10ffc
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11068

dec_label_pc_112a4:                               ; preds = %thread-pre-split722
  store i32 %v1_112a8, i32* %r0.global-to-local, align 4
  %v0_112ac = load i32, i32* @r6, align 4
  %v1_112ac = add i32 %v0_112ac, 12
  %v2_112ac = inttoptr i32 %v1_112ac to i32*
  %v3_112ac = load i32, i32* %v2_112ac, align 4
  store i32 %v3_112ac, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_105dc.backedge

dec_label_pc_105dc.backedge.thread:               ; preds = %dec_label_pc_10798, %dec_label_pc_1086c, %dec_label_pc_10940, %dec_label_pc_10a14, %dec_label_pc_10dcc
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_105e4

dec_label_pc_105dc.backedge.thread2185:           ; preds = %dec_label_pc_10e2c, %dec_label_pc_10a74, %dec_label_pc_109a0, %dec_label_pc_108cc, %dec_label_pc_107f8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_105e4

dec_label_pc_105dc.backedge:                      ; preds = %dec_label_pc_10658, %dec_label_pc_112a4, %dec_label_pc_112c0
  %v0_105e41093 = phi i32 [ %v0_112d0, %dec_label_pc_112c0 ], [ %v0_112ac, %dec_label_pc_112a4 ], [ %v0_10658, %dec_label_pc_10658 ]
  %v0_105dc.be = phi i32 [ %v3_112d0, %dec_label_pc_112c0 ], [ %v3_112ac, %dec_label_pc_112a4 ], [ %v3_10658, %dec_label_pc_10658 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_105dc = icmp eq i32 %v0_105dc.be, 0
  store i1 %v2_105dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_105dc, label %dec_label_pc_106e0, label %dec_label_pc_105e4

dec_label_pc_112b4:                               ; preds = %dec_label_pc_10690
  store i32 104, i32* %r3.global-to-local, align 4
  %v1_112b8 = load i32, i32* %sb.global-to-local, align 4
  %v2_112b8 = inttoptr i32 %v1_112b8 to i32*
  store i32 104, i32* %v2_112b8, align 4
  br label %dec_label_pc_106a8

dec_label_pc_112c0:                               ; preds = %dec_label_pc_10d88
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_112c4 = call i32 @function_112fc(i32 26)
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_112cc = call i32 @function_112fc(i32 27)
  store i32 %v1_112cc, i32* %r0.global-to-local, align 4
  %v0_112d0 = load i32, i32* @r6, align 4
  %v1_112d0 = add i32 %v0_112d0, 12
  %v2_112d0 = inttoptr i32 %v1_112d0 to i32*
  %v3_112d0 = load i32, i32* %v2_112d0, align 4
  store i32 %v3_112d0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_105dc.backedge

; uselistorder directives
  uselistorder i32 %v3_112d0, { 1, 0 }
  uselistorder i32 %v0_112d0, { 1, 0 }
  uselistorder i1 %v7_111ec, { 2, 1, 0 }
  uselistorder i1 %v2_11144, { 1, 0 }
  uselistorder i32 %.2044, { 1, 0 }
  uselistorder i1 %v7_1112c, { 1, 0 }
  uselistorder i32 %v0_11128, { 2, 1, 0, 3 }
  uselistorder i1 %v7_11100, { 1, 0 }
  uselistorder i32 %v0_11100, { 2, 1, 0, 3 }
  uselistorder i32 %v3_11068, { 1, 0 }
  uselistorder i1 %v3_11060, { 1, 0 }
  uselistorder i32 %v1_11054, { 1, 0 }
  uselistorder i32 %v1_11050, { 2, 0, 1 }
  uselistorder i32 %v0_1105c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_11018, { 0, 2, 1, 3 }
  uselistorder i32 %v3_10f90, { 1, 0 }
  uselistorder i32 %v0_10efc.pr, { 1, 0 }
  uselistorder i32 %v0_10ec8, { 1, 2, 0 }
  uselistorder i32 %v1_10e40, { 1, 0 }
  uselistorder i1 %v8_10e3c, { 1, 0 }
  uselistorder i8 %v3_10e34, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10e2c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_10e2c, { 0, 2, 1 }
  uselistorder i32 %v0_10e40743, { 1, 0, 2 }
  uselistorder i1 %v7_10e24, { 1, 0 }
  uselistorder i1 %v7_10e1c, { 1, 0 }
  uselistorder i1 %v7_10e14, { 1, 0 }
  uselistorder i1 %v7_10e00, { 1, 0 }
  uselistorder i1 %v7_10df8, { 1, 0 }
  uselistorder i1 %v7_10df0, { 1, 0 }
  uselistorder i1 %v8_10de8, { 1, 0 }
  uselistorder i32 %v1_10dd0, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v4_10d9c, { 1, 0, 2 }
  uselistorder i1 %v7_10d78, { 1, 0 }
  uselistorder i32 %v1_10d20, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_10d20, { 0, 2, 1 }
  uselistorder i32 %v0_10d00728, { 2, 0, 1 }
  uselistorder i1 %v7_10d18, { 1, 0 }
  uselistorder i1 %v7_10d10, { 1, 0 }
  uselistorder i1 %v7_10d08, { 1, 0 }
  uselistorder i1 %v8_10cfc, { 1, 0 }
  uselistorder i1 %v7_10ce0, { 1, 0 }
  uselistorder i1 %v7_10cd8, { 1, 0 }
  uselistorder i1 %v7_10cd0, { 1, 0 }
  uselistorder i1 %v8_10cc8, { 1, 0 }
  uselistorder i32 %v1_10cb0, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v0_10c64, { 1, 0 }
  uselistorder i32 %v4_10c58, { 1, 0, 2 }
  uselistorder i32 %v1_10c24, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_10c24, { 0, 2, 1 }
  uselistorder i32 %v0_10c0c720, { 2, 0, 1 }
  uselistorder i1 %v7_10c1c, { 1, 0 }
  uselistorder i1 %v7_10c14, { 1, 0 }
  uselistorder i1 %v8_10c08, { 1, 0 }
  uselistorder i1 %v7_10bec, { 1, 0 }
  uselistorder i1 %v7_10be4, { 1, 0 }
  uselistorder i1 %v8_10bdc, { 1, 0 }
  uselistorder i32 %v1_10bc4, { 1, 2, 3, 4, 5, 0, 6, 7, 8 }
  uselistorder i32 %v0_10ba8, { 1, 0 }
  uselistorder i32 %v1_10ba0, { 1, 0 }
  uselistorder i32 %v1_10b98, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v3_10b94, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_10b94, { 0, 2, 1 }
  uselistorder i32 %v0_10b74.pr, { 1, 0 }
  uselistorder i32 %v0_10b54.pr, { 1, 0 }
  uselistorder i1 %v7_10b2c, { 1, 0 }
  uselistorder i1 %v2_10b1c, { 1, 0, 2 }
  uselistorder i1 %v2_10b00, { 1, 0, 2 }
  uselistorder i32 %v1_10b20, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10af4, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v2_10b24, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %v1_10a88, { 1, 0 }
  uselistorder i1 %v8_10a84, { 1, 0 }
  uselistorder i8 %v3_10a7c, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10a74, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_10a74, { 0, 2, 1 }
  uselistorder i32 %v0_10a88702, { 1, 0, 2 }
  uselistorder i1 %v7_10a6c, { 1, 0 }
  uselistorder i1 %v7_10a64, { 1, 0 }
  uselistorder i1 %v7_10a5c, { 1, 0 }
  uselistorder i1 %v7_10a48, { 1, 0 }
  uselistorder i1 %v7_10a40, { 1, 0 }
  uselistorder i1 %v7_10a38, { 1, 0 }
  uselistorder i1 %v8_10a30, { 1, 0 }
  uselistorder i32 %v1_10a18, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v1_109b4, { 1, 0 }
  uselistorder i1 %v8_109b0, { 1, 0 }
  uselistorder i8 %v3_109a8, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_109a0, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_109a0, { 0, 2, 1 }
  uselistorder i32 %v0_109b4695, { 1, 0, 2 }
  uselistorder i1 %v7_10998, { 1, 0 }
  uselistorder i1 %v7_10990, { 1, 0 }
  uselistorder i1 %v7_10988, { 1, 0 }
  uselistorder i1 %v7_10974, { 1, 0 }
  uselistorder i1 %v7_1096c, { 1, 0 }
  uselistorder i1 %v7_10964, { 1, 0 }
  uselistorder i1 %v8_1095c, { 1, 0 }
  uselistorder i32 %v1_10944, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v1_108e0, { 1, 0 }
  uselistorder i1 %v8_108dc, { 1, 0 }
  uselistorder i8 %v3_108d4, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_108cc, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_108cc, { 0, 2, 1 }
  uselistorder i32 %v0_108e0688, { 1, 0, 2 }
  uselistorder i1 %v7_108c4, { 1, 0 }
  uselistorder i1 %v7_108bc, { 1, 0 }
  uselistorder i1 %v7_108b4, { 1, 0 }
  uselistorder i1 %v7_108a0, { 1, 0 }
  uselistorder i1 %v7_10898, { 1, 0 }
  uselistorder i1 %v7_10890, { 1, 0 }
  uselistorder i1 %v8_10888, { 1, 0 }
  uselistorder i32 %v1_10870, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v1_1080c, { 1, 0 }
  uselistorder i1 %v8_10808, { 1, 0 }
  uselistorder i8 %v3_10800, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_107f8, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_107f8, { 0, 2, 1 }
  uselistorder i32 %v0_1080c681, { 1, 0, 2 }
  uselistorder i1 %v7_107f0, { 1, 0 }
  uselistorder i1 %v7_107e8, { 1, 0 }
  uselistorder i1 %v7_107e0, { 1, 0 }
  uselistorder i1 %v7_107cc, { 1, 0 }
  uselistorder i1 %v7_107c4, { 1, 0 }
  uselistorder i1 %v7_107bc, { 1, 0 }
  uselistorder i1 %v8_107b4, { 1, 0 }
  uselistorder i32 %v1_1079c, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v0_10788, { 1, 2, 0 }
  uselistorder i32 %v2_10774, { 1, 0 }
  uselistorder i32 %v0_10774, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v3_10770, { 2, 1, 4, 0, 5, 3 }
  uselistorder i32 %v1_10748, { 2, 1, 0 }
  uselistorder i1 %v7_10728, { 1, 0 }
  uselistorder i32 %v1_106e4, { 2, 0, 3, 4, 5, 1 }
  uselistorder i1 %v1_106c8, { 1, 0 }
  uselistorder i32 %v1_106b8, { 2, 1, 0 }
  uselistorder i32 %v1_106b4, { 1, 0 }
  uselistorder i32 %v0_10658, { 2, 5, 6, 22, 7, 8, 20, 9, 10, 21, 4, 3, 19, 11, 12, 23, 13, 14, 24, 15, 16, 25, 17, 18, 26, 27, 1, 0 }
  uselistorder i32 %v1_10634, { 1, 2, 3, 0 }
  uselistorder i32 %v3_10630, { 1, 0 }
  uselistorder i32 %v4_10614, { 0, 2, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %v2_10600, { 1, 0, 2 }
  uselistorder i32 %v3_105fc, { 1, 0, 2 }
  uselistorder i32 %v0_10fa0, { 1, 0, 2 }
  uselistorder i32 %v3_105c8, { 1, 0 }
  uselistorder i32 %v1_105b0, { 3, 2, 1, 0 }
  uselistorder i32 %v3_105ac, { 1, 0 }
  uselistorder i32 %v3_105a4, { 1, 2, 0 }
  uselistorder i1 %v7_10594, { 1, 0 }
  uselistorder i32 %v3_10590, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v0_10584, { 1, 0 }
  uselistorder i32 %v1_1052c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1052c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10510, { 0, 2, 1 }
  uselistorder i32 %v1_10508, { 1, 0 }
  uselistorder i32 %v1_104c8, { 2, 1, 0 }
  uselistorder i32 %v1_104c4, { 1, 0 }
  uselistorder i1 %v2_104a4, { 1, 0, 2 }
  uselistorder i32 %v0_104a0, { 1, 0, 2 }
  uselistorder i1 %v7_1046c, { 0, 3, 4, 1, 2 }
  uselistorder i1 %v2_1046c, { 1, 0, 2 }
  uselistorder i32 %v2_10464, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_10458, { 1, 0, 2 }
  uselistorder i32 %v0_1045c, { 1, 0 }
  uselistorder i32 %v1_10440, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %v1_10434, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10434, { 0, 2, 1 }
  uselistorder i32 %v1_10424, { 1, 0 }
  uselistorder i32 %v3_104f0, { 4, 7, 5, 6, 1, 0, 9, 3, 2, 8 }
  uselistorder i32 %v1_10348, { 1, 0 }
  uselistorder i32 %v1_1033c, { 0, 2, 3, 1 }
  uselistorder i32 %v0_10350, { 0, 1, 3, 2 }
  uselistorder i32 %v0_102f8, { 2, 3, 4, 1, 0, 5, 7, 6 }
  uselistorder i32 %v5_102ec, { 2, 1, 0 }
  uselistorder i32 %v1_102d0, { 1, 2, 0, 3, 4 }
  uselistorder i1 %v2_102ac, { 1, 0 }
  uselistorder i32 %v0_10238, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_101dc, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_10188, { 1, 0 }
  uselistorder i32 %v2_100cc, { 1, 0 }
  uselistorder i1 %v7_10094, { 2, 1, 0 }
  uselistorder i1 %v2_10084, { 1, 0 }
  uselistorder i1 %v2_10060, { 1, 0 }
  uselistorder i1 %v2_1003c, { 1, 0 }
  uselistorder i1 %v2_fff8, { 1, 0 }
  uselistorder i1 %v2_ffd4, { 1, 0 }
  uselistorder i1 %v2_ffa4, { 1, 0, 2 }
  uselistorder i1 %v2_ff9c, { 1, 0 }
  uselistorder i1 %v2_ff78, { 1, 0 }
  uselistorder i1 %v2_ff5c, { 1, 0 }
  uselistorder i1 %v2_ff50, { 1, 0, 2 }
  uselistorder i1 %v2_ff48, { 1, 0 }
  uselistorder i1 %v2_ff04, { 1, 0, 2 }
  uselistorder i32 %.2037, { 0, 3, 1, 2 }
  uselistorder i32 %v4_fee4, { 1, 0, 2 }
  uselistorder i1 %v2_fedc, { 1, 0, 2 }
  uselistorder i32 %.2036, { 2, 0, 1 }
  uselistorder i1 %v2_fe70, { 1, 0 }
  uselistorder i1 %v2_fe40, { 1, 0, 2 }
  uselistorder i1 %v2_fe20, { 1, 0, 2 }
  uselistorder i1 %v2_fe00, { 1, 0 }
  uselistorder i1 %v2_fdd4, { 1, 0, 2 }
  uselistorder i1 %v2_fdcc, { 1, 0 }
  uselistorder i1 %v7_fdc0, { 1, 0, 2, 3 }
  uselistorder i1 %v2_fda0, { 1, 0, 2 }
  uselistorder i1 %v2_fd98, { 1, 0 }
  uselistorder i1 %v2_fd6c, { 1, 0, 2 }
  uselistorder i1 %v2_fd44, { 1, 0, 2 }
  uselistorder i1 %v2_fd3c, { 1, 0 }
  uselistorder i1 %v2_fd10, { 1, 0, 2 }
  uselistorder i1 %v2_fd08, { 1, 0 }
  uselistorder i1 %v2_fcc0, { 1, 0, 2 }
  uselistorder i1 %v2_fcb8, { 1, 0 }
  uselistorder i1 %v2_fc8c, { 1, 0, 2 }
  uselistorder i1 %v2_fc84, { 1, 0 }
  uselistorder i1 %v2_fc58, { 1, 0, 2 }
  uselistorder i1 %v2_fc50, { 1, 0 }
  uselistorder i1 %v2_fc28, { 1, 0, 2 }
  uselistorder i1 %v2_fc20, { 1, 0 }
  uselistorder i1 %v7_fc00, { 1, 0, 2 }
  uselistorder i1 %v2_fbf8, { 1, 0 }
  uselistorder i1 %v7_fbec, { 0, 2, 1, 3, 4 }
  uselistorder i1 %v2_fbec, { 2, 0, 1, 3 }
  uselistorder i1 %v2_fbe0, { 1, 0, 2 }
  uselistorder i1 %v2_fbd8, { 1, 0 }
  uselistorder i1 %v2_fbac, { 1, 0, 2 }
  uselistorder i1 %v2_fb84, { 1, 0, 2 }
  uselistorder i1 %v2_fb7c, { 1, 0 }
  uselistorder i1 %v7_fb70, { 1, 0, 2, 3 }
  uselistorder i1 %v2_fb50, { 1, 0, 2 }
  uselistorder i1 %v2_fb48, { 1, 0 }
  uselistorder i1 %v7_fb24, { 1, 0, 2 }
  uselistorder i1 %v2_fb1c, { 1, 0 }
  uselistorder i1 %v2_faf8, { 1, 0 }
  uselistorder i32 %.2033, { 2, 0, 1 }
  uselistorder i1 %v7_fac8, { 0, 3, 2, 1 }
  uselistorder i1 %v2_fac0, { 1, 0 }
  uselistorder i1 %v2_fab4, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 10 }
  uselistorder i32 %.2032, { 3, 2, 0, 1 }
  uselistorder i1 %v7_faa0, { 1, 0, 2 }
  uselistorder i1 %v2_fa88, { 1, 0 }
  uselistorder i1 %v2_fa68, { 1, 0 }
  uselistorder i1 %v2_fa24, { 1, 0 }
  uselistorder i1 %v2_fa0c, { 1, 0 }
  uselistorder i1 %v2_f9f8, { 1, 0 }
  uselistorder i1 %v2_f9e0, { 1, 0 }
  uselistorder i1 %v2_f9b4, { 1, 0, 2 }
  uselistorder i1 %v2_f980, { 1, 0, 2 }
  uselistorder i1 %v2_f978, { 1, 0 }
  uselistorder i1 %v2_f950, { 1, 0, 2 }
  uselistorder i32 %.2030, { 1, 0 }
  uselistorder i1 %v7_f938, { 0, 3, 2, 1 }
  uselistorder i1 %v2_f91c, { 1, 0, 2 }
  uselistorder i1 %v2_f8f4, { 1, 0, 2 }
  uselistorder i1 %v2_f8dc, { 1, 0, 2 }
  uselistorder i1 %v2_f8d4, { 1, 0 }
  uselistorder i1 %v7_f8c8, { 4, 0, 3, 2, 1, 6, 5, 7, 8 }
  uselistorder i1 %v2_f8c8, { 5, 4, 3, 0, 2, 1, 6, 7 }
  uselistorder i1 %v2_f8a8, { 1, 0, 2 }
  uselistorder i1 %v2_f8a0, { 1, 0 }
  uselistorder i1 %v2_f874, { 1, 0, 2 }
  uselistorder i1 %v2_f86c, { 1, 0 }
  uselistorder i1 %v2_f840, { 1, 0, 2 }
  uselistorder i1 %v2_f818, { 1, 0, 2 }
  uselistorder i1 %v2_f7f4, { 1, 0, 2 }
  uselistorder i1 %v2_f7cc, { 1, 0, 2 }
  uselistorder i1 %v2_f7c4, { 1, 0 }
  uselistorder i1 %v2_f7b0, { 1, 0 }
  uselistorder i1 %v7_f788, { 0, 2, 1, 5, 4, 3 }
  uselistorder i1 %v2_f788, { 2, 0, 1, 3 }
  uselistorder i1 %v7_f774, { 1, 0, 2 }
  uselistorder i1 %v2_f76c, { 1, 0 }
  uselistorder i1 %v2_f740, { 1, 0 }
  uselistorder i1 %v7_f71c, { 1, 0, 2 }
  uselistorder i32 %.2028, { 1, 2, 7, 10, 6, 5, 9, 4, 3, 8, 0 }
  uselistorder i1 %v7_f704, { 2, 1, 0, 3 }
  uselistorder i1 %v2_f6e4, { 1, 0, 2 }
  uselistorder i32 %.2027, { 4, 3, 6, 2, 1, 5, 7, 0 }
  uselistorder i1 %v7_f6c8, { 1, 0, 4, 3, 2 }
  uselistorder i1 %v2_f6a8, { 1, 0 }
  uselistorder i1 %v7_f684, { 1, 0, 2 }
  uselistorder i1 %v2_f67c, { 1, 0 }
  uselistorder i1 %v2_f650, { 1, 0, 2 }
  uselistorder i32 %.2026, { 0, 1, 2, 4, 3 }
  uselistorder i1 %v7_f638, { 0, 3, 2, 1 }
  uselistorder i1 %v2_f61c, { 1, 0, 2 }
  uselistorder i32 %.2025, { 3, 2, 0, 1 }
  uselistorder i1 %v2_f5e8, { 1, 0, 2 }
  uselistorder i1 %v2_f5e0, { 1, 0 }
  uselistorder i1 %v2_f5b0, { 1, 0 }
  uselistorder i1 %v7_f58c, { 1, 0, 2 }
  uselistorder i1 %v2_f584, { 1, 0 }
  uselistorder i1 %v7_f560, { 1, 0, 2 }
  uselistorder i1 %v2_f558, { 1, 0 }
  uselistorder i1 %v2_f530, { 1, 0, 2 }
  uselistorder i32 %.2024, { 1, 0 }
  uselistorder i1 %v7_f518, { 0, 3, 2, 1 }
  uselistorder i32 %.2023, { 1, 0 }
  uselistorder i1 %v7_f4e8, { 0, 3, 2, 1 }
  uselistorder i1 %v2_f4dc, { 1, 0, 2 }
  uselistorder i1 %v2_f4b4, { 1, 0, 2 }
  uselistorder i1 %v2_f4ac, { 1, 0 }
  uselistorder i1 %v2_f480, { 1, 0, 2 }
  uselistorder i1 %v2_f478, { 1, 0 }
  uselistorder i1 %v2_f458, { 1, 0, 2 }
  uselistorder i1 %v2_f450, { 1, 0 }
  uselistorder i1 %v2_f404, { 1, 0, 2 }
  uselistorder i32 %.2022, { 1, 0 }
  uselistorder i1 %v7_f3dc, { 1, 0, 2 }
  uselistorder i1 %v2_f3d4, { 1, 0 }
  uselistorder i1 %v2_f3a0, { 1, 0 }
  uselistorder i32 %storemerge1257, { 2, 1, 0 }
  uselistorder i32 %.2021, { 5, 8, 4, 3, 7, 2, 1, 6, 0 }
  uselistorder i1 %v7_f368, { 1, 0, 2 }
  uselistorder i1 %v2_f360, { 1, 0 }
  uselistorder i1 %v2_f348, { 1, 0 }
  uselistorder i32 %storemerge1255, { 3, 0, 2, 1, 4 }
  uselistorder i1 %v7_f31c, { 1, 0, 2 }
  uselistorder i32 %.2020, { 4, 6, 3, 5, 0, 1, 2 }
  uselistorder i32 %.2019, { 2, 4, 1, 3, 0 }
  uselistorder i1 %v7_f2f8, { 1, 0, 2 }
  uselistorder i1 %v2_f2ec, { 1, 0 }
  uselistorder i1 %v2_f2d4, { 1, 0 }
  uselistorder i1 %v2_f2c0, { 1, 0 }
  uselistorder i32 %.2018, { 0, 2, 4, 3, 1, 6, 7, 5 }
  uselistorder i1 %v7_f294, { 0, 1, 4, 3, 2 }
  uselistorder i32 %.2017, { 6, 5, 10, 4, 3, 9, 2, 8, 1, 7, 0 }
  uselistorder i1 %v7_f274, { 3, 2, 1, 0, 4 }
  uselistorder i32 %.2016, { 7, 6, 10, 5, 4, 9, 0, 3, 2, 8, 11, 12, 1 }
  uselistorder i1 %v7_f200, { 2, 1, 0, 3 }
  uselistorder i1 %v7_f1e4, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v2_f1e4, { 1, 2, 0, 3 }
  uselistorder i1 %v2_f1c4, { 1, 0, 2 }
  uselistorder i1 %v2_f18c, { 1, 0, 2 }
  uselistorder i32 %.2015, { 4, 0, 2, 3, 1 }
  uselistorder i1 %v2_f14c, { 1, 0, 2 }
  uselistorder i1 %v2_f138, { 1, 0 }
  uselistorder i1 %v7_f130, { 1, 0, 2, 3 }
  uselistorder i1 %v2_f130, { 1, 0, 2 }
  uselistorder i1 %v2_f108, { 1, 0, 2 }
  uselistorder i32 %.2013, { 2, 0, 1 }
  uselistorder i32 %v4_f0e8, { 1, 0, 2 }
  uselistorder i1 %v2_f0e0, { 1, 0, 2 }
  uselistorder i32 %.2012, { 2, 0, 1 }
  uselistorder i1 %v2_f084, { 1, 0, 2 }
  uselistorder i1 %v2_f064, { 1, 0, 2 }
  uselistorder i1 %v2_f03c, { 1, 0 }
  uselistorder i1 %v2_f034, { 1, 0, 2 }
  uselistorder i1 %v7_f00c, { 2, 1, 3, 0, 4, 5 }
  uselistorder i1 %v2_f00c, { 1, 2, 3, 0, 4 }
  uselistorder i1 %v2_efec, { 1, 0, 2 }
  uselistorder i1 %v2_efe4, { 1, 0, 2 }
  uselistorder i1 %v7_efd0, { 1, 2, 0, 3, 4 }
  uselistorder i1 %v2_efd0, { 1, 2, 0, 3 }
  uselistorder i1 %v7_efb4, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v2_efb4, { 1, 2, 0, 3 }
  uselistorder i1 %v7_ef98, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v2_ef98, { 1, 2, 0, 3 }
  uselistorder i32 %v1_ef84, { 0, 3, 2, 1 }
  uselistorder i1 %v7_ef48, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v2_ef48, { 1, 2, 0, 3 }
  uselistorder i1 %v2_ef38, { 1, 0 }
  uselistorder i32 %v2_ef10, { 1, 0 }
  uselistorder i32 %v0_ef04, { 1, 4, 2, 3, 0 }
  uselistorder i32 %v0_fe90, { 0, 5, 4, 6, 1, 2, 3, 7 }
  uselistorder i32 %.2009, { 0, 2, 1 }
  uselistorder i1 %v2_ee80, { 1, 0, 2 }
  uselistorder i32 %.2008, { 0, 3, 1, 2, 4, 5 }
  uselistorder i1 %v2_ee60, { 1, 0 }
  uselistorder i32 %v2_ee38, { 1, 0 }
  uselistorder i32 %v1_f050, { 1, 0 }
  uselistorder i1 %v2_ee24, { 1, 0, 2 }
  uselistorder i32 %v2_ee10, { 1, 0 }
  uselistorder i32 %v2_edf4, { 1, 0 }
  uselistorder i32 %v1_ee10, { 2, 0, 1 }
  uselistorder i1 %v2_ede0, { 1, 0, 2 }
  uselistorder i1 %v2_edd0, { 1, 0 }
  uselistorder i1 %v7_edc8, { 1, 0, 2, 3 }
  uselistorder i1 %v2_edc8, { 1, 0, 2 }
  uselistorder i1 %v2_edb4, { 1, 0, 2 }
  uselistorder i1 %v2_edac, { 1, 0 }
  uselistorder i32 %v2_ed84, { 1, 0 }
  uselistorder i32 %v0_ed78, { 1, 0 }
  uselistorder i32 %v4_ed58, { 1, 0, 2 }
  uselistorder i32 %.2004, { 5, 4, 9, 3, 2, 8, 1, 0, 7, 6, 10, 11 }
  uselistorder i1 %v7_ed1c, { 2, 1, 0, 3 }
  uselistorder i32 %.2003, { 2, 3, 0, 1 }
  uselistorder i32 %v2_ecdc, { 1, 0 }
  uselistorder i32 %v0_fecc, { 1, 0, 2 }
  uselistorder i1 %v7_ecc4, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v2_ecc4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_f280, { 0, 2, 1 }
  uselistorder i1 %v2_eca0, { 1, 0, 2 }
  uselistorder i32 %.2002, { 3, 0, 4, 1, 2 }
  uselistorder i32 %.2001, { 1, 2, 3, 7, 0, 4, 8, 5, 9, 6 }
  uselistorder i1 %v7_ec78, { 0, 3, 2, 1 }
  uselistorder i32 %.2000, { 0, 2, 1 }
  uselistorder i1 %v7_ec5c, { 0, 3, 2, 1 }
  uselistorder i1 %v2_ec54, { 1, 0 }
  uselistorder i1 %v7_ec48, { 0, 2, 1, 4, 3, 5, 6 }
  uselistorder i1 %v2_ec48, { 2, 0, 3, 1, 4, 5 }
  uselistorder i32 %.1999, { 2, 1, 3, 0 }
  uselistorder i1 %v7_ec28, { 0, 3, 2, 1 }
  uselistorder i32 %.1997, { 3, 0, 4, 1, 2 }
  uselistorder i1 %v7_ebdc, { 1, 0, 3, 2, 4, 5 }
  uselistorder i1 %v2_ebdc, { 1, 2, 0, 3, 4 }
  uselistorder i32 %.1996, { 2, 3, 0, 5, 4, 6, 1, 7 }
  uselistorder i1 %v7_ebd0, { 0, 3, 2, 1 }
  uselistorder i32 %.1995, { 1, 0, 2 }
  uselistorder i1 %v7_ebb4, { 1, 0, 4, 3, 6, 5, 2 }
  uselistorder i1 %v2_ebb4, { 1, 0, 2, 3 }
  uselistorder i32 %.1994, { 0, 3, 1, 2 }
  uselistorder i1 %v7_eb98, { 1, 0, 4, 3, 6, 5, 2 }
  uselistorder i1 %v2_eb98, { 1, 2, 0, 3, 4 }
  uselistorder i1 %v2_eb90, { 1, 0 }
  uselistorder i1 %v7_eb84, { 0, 2, 1, 3, 4 }
  uselistorder i1 %v2_eb84, { 1, 0, 2, 3 }
  uselistorder i32 %.1993, { 2, 1, 3, 0 }
  uselistorder i32 %storemerge1224, { 2, 0, 1, 3 }
  uselistorder i32 %.1992, { 0, 4, 1, 3, 2 }
  uselistorder i1 %v7_eb48, { 0, 3, 2, 1 }
  uselistorder i1 %v2_eb48, { 1, 0, 2 }
  uselistorder i1 %v7_eb38, { 0, 2, 1, 3, 4 }
  uselistorder i1 %v2_eb38, { 1, 0, 2, 3 }
  uselistorder i32 %.1991, { 0, 2, 1 }
  uselistorder i1 %v7_eb2c, { 2, 1, 0 }
  uselistorder i1 %v7_eb10, { 1, 0, 2, 3 }
  uselistorder i32 %.1990, { 1, 3, 2, 4, 0 }
  uselistorder i1 %v7_eb04, { 0, 3, 2, 1 }
  uselistorder i1 %v2_eafc, { 1, 0 }
  uselistorder i1 %v2_eae4, { 1, 0 }
  uselistorder i1 %v7_eabc, { 1, 0, 2, 3 }
  uselistorder i32 %.1989, { 4, 8, 5, 9, 0, 10, 3, 6, 2, 7, 1 }
  uselistorder i1 %v7_eab0, { 1, 0, 4, 3, 2 }
  uselistorder i32 %.1988, { 2, 5, 3, 0, 4, 1 }
  uselistorder i1 %v2_ea74, { 1, 0 }
  uselistorder i32 %storemerge1217, { 2, 1, 0, 3 }
  uselistorder i1 %v7_ea48, { 0, 3, 2, 1 }
  uselistorder i32 %.1987, { 2, 3, 1, 4, 0 }
  uselistorder i32 %.1985, { 1, 2, 0 }
  uselistorder i1 %v7_ea08, { 2, 1, 0 }
  uselistorder i32 %.1984, { 0, 3, 4, 1, 2 }
  uselistorder i1 %v2_e9e8, { 1, 0 }
  uselistorder i1 %v2_e9d4, { 1, 0 }
  uselistorder i1 %v2_e9c0, { 1, 0 }
  uselistorder i1 %v7_e9a0, { 0, 3, 2, 1 }
  uselistorder i1 %v2_e9a0, { 1, 0, 2, 3 }
  uselistorder i1 %v2_e998, { 1, 0 }
  uselistorder i1 %v2_e984, { 1, 0 }
  uselistorder i32 %.1982, { 3, 9, 0, 8, 7, 6, 1, 5, 4, 2 }
  uselistorder i1 %v7_e960, { 4, 3, 2, 1, 0, 7, 6, 5 }
  uselistorder i1 %v7_e944, { 1, 0, 4, 3, 6, 5, 2 }
  uselistorder i1 %v2_e944, { 0, 2, 1, 3, 4 }
  uselistorder i32 %.1980, { 3, 8, 4, 7, 5, 6, 0, 1, 2 }
  uselistorder i1 %v7_e92c, { 2, 1, 0 }
  uselistorder i1 %v7_e918, { 2, 1, 0 }
  uselistorder i1 %v7_e904, { 0, 3, 2, 1 }
  uselistorder i1 %v2_e904, { 1, 0, 2, 3 }
  uselistorder i32 %.1977, { 1, 0 }
  uselistorder i1 %v7_e8e4, { 0, 2, 1, 3, 4 }
  uselistorder i1 %v2_e8e4, { 1, 0, 2, 3 }
  uselistorder i32 %.1976, { 6, 5, 3, 4, 0, 1, 2 }
  uselistorder i1 %v7_e8d8, { 0, 3, 2, 1 }
  uselistorder i32 %.1975, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i1 %v7_e8c0, { 3, 2, 1, 0, 6, 5, 4 }
  uselistorder i32 %v1_e834, { 0, 193, 203, 192, 197, 198, 200, 199, 194, 195, 196, 202, 188, 189, 191, 190, 185, 186, 187, 204, 181, 182, 184, 183, 177, 178, 180, 179, 173, 174, 176, 175, 169, 170, 172, 171, 165, 166, 168, 167, 162, 163, 164, 201, 158, 159, 161, 160, 154, 155, 157, 156, 149, 148, 147, 146, 145, 144, 143, 142, 1, 141, 140, 139, 138, 151, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 2, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 152, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 3, 77, 76, 75, 74, 73, 72, 4, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 5, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 6, 43, 42, 7, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 150, 29, 28, 27, 26, 25, 24, 23, 22, 8, 153, 21, 20, 19, 18, 17, 16, 15, 14, 13, 9, 12, 11, 10 }
  uselistorder i32 %v1_e830, { 302, 303, 286, 287, 288, 289, 290, 291, 338, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 339, 304, 305, 306, 307, 308, 309, 337, 310, 311, 336, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 334, 282, 281, 280, 279, 278, 277, 276, 275, 274, 273, 272, 271, 270, 269, 268, 267, 285, 266, 265, 264, 263, 262, 261, 260, 259, 258, 257, 256, 255, 254, 253, 252, 251, 250, 249, 248, 247, 246, 245, 244, 243, 242, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 284, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 283, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v3_e824, { 11, 3, 4, 5, 2, 6, 7, 8, 9, 10, 0, 1 }
  uselistorder i32 %v1_e81c, { 187, 188, 168, 169, 170, 171, 172, 173, 174, 175, 177, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 198, 197, 167, 166, 165, 164, 162, 163, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 150, 151, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 138, 139, 136, 137, 135, 134, 133, 132, 130, 131, 128, 129, 127, 126, 125, 124, 123, 122, 120, 121, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 84, 85, 82, 83, 80, 81, 79, 78, 76, 77, 75, 74, 73, 72, 71, 70, 68, 69, 67, 66, 64, 65, 62, 63, 61, 60, 59, 58, 56, 57, 54, 55, 53, 52, 50, 51, 48, 49, 46, 47, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_e818, { 4, 5, 0, 6, 1, 2, 3, 7 }
  uselistorder i32 %v0_e800, { 1, 0 }
  uselistorder i32 %v0_e7d8, { 1, 0 }
  uselistorder i32 %v2_111e0, { 1, 2, 0 }
  uselistorder i32 %v2_11118, { 1, 2, 0 }
  uselistorder i32 %v2_10d3c, { 4, 5, 3, 1, 0, 10, 12, 13, 11, 9, 8, 7, 6, 2 }
  uselistorder i32 %v2_10ebc, { 1, 0 }
  uselistorder i32 %v2_104f8, { 0, 5, 1, 4, 2, 7, 3, 6 }
  uselistorder i32 %v2_e7c8, { 1, 3, 6, 5, 7, 0, 2, 4, 8, 9 }
  uselistorder i32 %v4_e600, { 2, 1, 0, 3 }
  uselistorder i32 %v0_e5c8, { 1, 0 }
  uselistorder i16 %v5_e594.le, { 1, 0 }
  uselistorder i32 %v0_e578, { 4, 2, 0, 3, 1 }
  uselistorder i32 %v1_e570, { 1, 0 }
  uselistorder i32 %v2_e548, { 1, 3, 0, 2 }
  uselistorder i32 %v3_e51c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_e508, { 1, 0 }
  uselistorder i32 %v2_e4ec, { 1, 0, 2 }
  uselistorder i32 %v0_e4cc, { 1, 2, 0 }
  uselistorder i32 %storemerge1281, { 1, 0 }
  uselistorder i32 %v0_e3d0, { 2, 1, 3, 0, 4 }
  uselistorder i8* %stack_var_-56, { 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-52, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 10, 11 }
  uselistorder i32* %stack_var_-60, { 10, 11, 8, 12, 13, 3, 14, 15, 0, 1, 16, 2, 17, 4, 18, 5, 19, 6, 20, 7, 21, 9, 22 }
  uselistorder i32* %sb.global-to-local, { 1, 2, 3, 0, 4, 5, 6, 7 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 0, 5, 6, 22, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* %r3.global-to-local, { 62, 595, 596, 597, 598, 599, 600, 601, 63, 64, 130, 602, 603, 65, 66, 67, 68, 70, 69, 71, 72, 24, 7, 8, 9, 25, 26, 27, 28, 29, 1, 2, 3, 594, 4, 5, 6, 10, 11, 12, 593, 13, 14, 15, 18, 16, 17, 19, 20, 592, 21, 22, 23, 30, 31, 32, 33, 34, 35, 36, 37, 39, 38, 40, 591, 41, 42, 43, 45, 44, 46, 590, 47, 48, 49, 51, 50, 52, 589, 53, 54, 55, 57, 56, 58, 588, 59, 60, 61, 604, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 99, 97, 101, 546, 547, 102, 103, 0, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 131, 134, 133, 136, 135, 141, 137, 138, 139, 140, 143, 142, 160, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 165, 163, 164, 167, 166, 258, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 261, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 363, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 470, 468, 469, 471, 472, 483, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 500, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 510, 501, 502, 503, 504, 505, 506, 507, 508, 509, 514, 511, 512, 513, 515, 523, 516, 517, 518, 519, 520, 521, 522, 525, 524, 536, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 540, 537, 538, 539, 541, 542, 543, 544, 545, 548, 551, 549, 550, 552, 553, 554, 555, 558, 556, 557, 559, 560, 561, 562, 564, 563, 565, 572, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587 }
  uselistorder i32* %r2.global-to-local, { 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 36, 37, 38, 39, 15, 4, 5, 16, 0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 120, 121, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 122, 123, 55, 57, 56, 53, 54, 125, 58, 126, 59, 127, 128, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 124, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105 }
  uselistorder i32* %r1.global-to-local, { 102, 103, 104, 105, 106, 107, 108, 109, 111, 110, 112, 113, 114, 42, 43, 44, 45, 46, 19, 20, 5, 6, 0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 65, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 117, 118, 115, 116, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 54, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 119, 91, 92, 93, 94, 96, 95, 97, 98, 99, 100, 101 }
  uselistorder i32* %r0.global-to-local, { 8, 10, 9, 11, 30, 32, 80, 168, 167, 169, 170, 171, 173, 172, 174, 175, 176, 177, 179, 178, 180, 181, 182, 183, 84, 81, 185, 184, 186, 187, 188, 190, 189, 191, 82, 83, 86, 85, 88, 42, 44, 43, 120, 33, 13, 12, 15, 14, 17, 16, 18, 45, 1, 0, 2, 4, 3, 6, 5, 7, 19, 20, 21, 23, 22, 25, 24, 26, 27, 28, 29, 35, 34, 37, 36, 118, 31, 39, 38, 40, 41, 47, 46, 48, 50, 49, 52, 51, 54, 53, 55, 56, 58, 57, 60, 59, 62, 61, 63, 64, 66, 65, 68, 67, 70, 69, 71, 72, 74, 73, 76, 75, 78, 77, 79, 119, 194, 193, 195, 192, 196, 197, 101, 87, 91, 89, 90, 96, 92, 93, 166, 94, 95, 97, 99, 98, 100, 102, 106, 103, 105, 104, 108, 107, 111, 109, 110, 114, 112, 113, 116, 115, 117, 121, 122, 124, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 151, 152, 155, 154, 156, 161, 157, 158, 159, 160, 162, 163, 164, 165 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 6, 4, 5, 7, 19, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i1* %cpsr_z.global-to-local, { 13, 121, 874, 860, 844, 846, 847, 835, 849, 851, 852, 843, 108, 109, 41, 42, 43, 44, 45, 3, 4, 5, 0, 1, 2, 6, 7, 8, 9, 10, 11, 12, 848, 14, 15, 16, 22, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 35, 31, 32, 33, 34, 36, 37, 38, 39, 40, 850, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 836, 63, 64, 65, 60, 61, 62, 66, 67, 68, 69, 70, 71, 75, 76, 77, 72, 73, 74, 78, 79, 80, 81, 82, 83, 87, 88, 89, 84, 85, 86, 90, 91, 92, 93, 94, 95, 99, 100, 101, 96, 97, 98, 102, 103, 104, 105, 106, 107, 853, 854, 855, 856, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 837, 838, 122, 123, 124, 125, 126, 128, 127, 129, 130, 131, 134, 136, 137, 135, 132, 133, 842, 841, 839, 138, 139, 140, 141, 142, 840, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 834, 164, 165, 166, 167, 168, 169, 170, 171, 833, 172, 173, 174, 832, 175, 176, 177, 831, 178, 179, 180, 181, 182, 183, 830, 184, 185, 186, 829, 187, 188, 828, 189, 190, 191, 827, 192, 193, 194, 195, 826, 196, 197, 198, 859, 199, 200, 825, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 873, 216, 217, 218, 219, 824, 220, 221, 222, 223, 224, 823, 225, 226, 227, 228, 229, 230, 231, 822, 232, 233, 821, 234, 235, 236, 820, 237, 238, 819, 239, 240, 241, 818, 242, 243, 817, 244, 245, 246, 247, 248, 816, 249, 250, 251, 815, 252, 253, 814, 254, 255, 256, 813, 257, 258, 259, 260, 261, 868, 262, 263, 264, 867, 265, 266, 866, 267, 268, 269, 865, 270, 271, 864, 272, 273, 274, 863, 275, 276, 862, 277, 278, 279, 861, 280, 281, 282, 283, 812, 284, 285, 286, 287, 811, 288, 289, 810, 290, 291, 292, 293, 809, 294, 295, 296, 808, 297, 298, 807, 299, 300, 301, 806, 302, 303, 304, 305, 805, 306, 307, 308, 309, 804, 310, 311, 312, 313, 314, 803, 315, 316, 317, 318, 319, 802, 320, 321, 322, 801, 323, 324, 325, 326, 327, 328, 800, 329, 330, 799, 331, 332, 798, 333, 334, 797, 335, 336, 796, 337, 338, 339, 340, 795, 341, 342, 343, 794, 344, 345, 793, 346, 347, 348, 349, 350, 792, 351, 352, 353, 354, 355, 791, 356, 357, 358, 359, 360, 361, 362, 790, 363, 364, 789, 365, 366, 367, 788, 368, 369, 787, 370, 371, 372, 786, 373, 374, 785, 375, 376, 377, 378, 784, 379, 380, 381, 382, 783, 383, 384, 385, 386, 782, 387, 388, 389, 781, 390, 391, 780, 392, 393, 394, 395, 396, 397, 872, 398, 399, 871, 400, 401, 402, 870, 403, 404, 405, 406, 407, 869, 408, 409, 410, 411, 412, 779, 413, 414, 415, 778, 416, 417, 418, 419, 777, 420, 421, 776, 422, 423, 424, 425, 426, 775, 427, 428, 429, 430, 774, 431, 432, 433, 773, 434, 435, 772, 436, 437, 438, 771, 439, 440, 441, 442, 770, 443, 444, 445, 446, 769, 447, 448, 768, 449, 450, 451, 452, 453, 767, 454, 455, 456, 457, 458, 459, 460, 461, 766, 462, 463, 464, 765, 465, 466, 764, 467, 468, 469, 763, 470, 471, 472, 473, 762, 474, 475, 761, 476, 477, 478, 479, 480, 760, 481, 482, 483, 484, 485, 486, 759, 487, 488, 489, 490, 758, 491, 492, 493, 757, 494, 495, 756, 496, 497, 498, 499, 755, 500, 501, 754, 502, 503, 753, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 752, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 751, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 750, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 749, 584, 585, 586, 748, 587, 588, 589, 590, 858, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 747, 601, 602, 603, 746, 604, 605, 606, 607, 745, 608, 609, 610, 744, 611, 612, 613, 614, 743, 615, 616, 617, 742, 618, 619, 620, 741, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 857, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 740, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 739, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 738, 664, 665, 737, 666, 667, 668, 669, 670, 671, 672, 673, 736, 674, 675, 676, 677, 678, 679, 680, 735, 681, 682, 734, 683, 684, 733, 685, 686, 687, 732, 688, 689, 731, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 845, 730 }
  uselistorder i1* %cpsr_c.global-to-local, { 13, 118, 846, 832, 818, 820, 821, 809, 822, 824, 825, 105, 817, 106, 41, 42, 43, 44, 3, 4, 5, 0, 1, 2, 6, 7, 8, 9, 10, 11, 12, 808, 14, 15, 16, 22, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 35, 31, 32, 33, 34, 36, 37, 38, 39, 40, 823, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 810, 60, 61, 62, 57, 58, 59, 63, 64, 65, 66, 67, 68, 72, 73, 74, 69, 70, 71, 75, 76, 77, 78, 79, 80, 84, 85, 86, 81, 82, 83, 87, 88, 89, 90, 91, 92, 96, 97, 98, 93, 94, 95, 99, 100, 101, 102, 103, 104, 826, 827, 828, 107, 109, 108, 110, 111, 112, 113, 114, 115, 116, 117, 811, 812, 119, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 130, 127, 128, 816, 815, 813, 133, 134, 135, 136, 137, 814, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 807, 156, 157, 158, 159, 160, 161, 162, 806, 163, 164, 165, 805, 166, 167, 168, 804, 169, 170, 171, 172, 173, 174, 803, 175, 176, 177, 802, 178, 179, 801, 180, 181, 182, 800, 183, 184, 185, 186, 799, 187, 188, 189, 831, 190, 191, 798, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 845, 207, 208, 209, 210, 797, 211, 212, 213, 214, 215, 796, 216, 217, 218, 219, 220, 221, 222, 795, 223, 224, 794, 225, 226, 227, 793, 228, 229, 792, 230, 231, 232, 791, 233, 234, 790, 235, 236, 237, 238, 239, 789, 240, 241, 242, 788, 243, 244, 787, 245, 246, 247, 840, 248, 249, 250, 251, 839, 252, 253, 254, 838, 255, 256, 837, 257, 258, 259, 836, 260, 261, 835, 262, 263, 264, 834, 265, 266, 833, 267, 268, 269, 786, 270, 271, 272, 273, 785, 274, 275, 276, 277, 784, 278, 279, 783, 280, 281, 282, 782, 283, 284, 285, 781, 286, 287, 780, 288, 289, 290, 779, 291, 292, 293, 294, 778, 295, 296, 297, 298, 777, 299, 300, 301, 302, 776, 303, 304, 305, 306, 307, 775, 308, 309, 774, 310, 311, 312, 313, 773, 314, 315, 772, 316, 317, 771, 318, 319, 770, 320, 321, 769, 322, 323, 324, 325, 768, 326, 327, 328, 767, 329, 330, 766, 331, 332, 333, 334, 335, 765, 336, 337, 338, 339, 340, 764, 341, 342, 343, 344, 345, 346, 347, 763, 348, 349, 762, 350, 351, 352, 761, 353, 354, 760, 355, 356, 357, 759, 358, 359, 758, 360, 361, 362, 757, 363, 364, 365, 756, 366, 367, 368, 755, 369, 370, 371, 754, 372, 373, 844, 374, 375, 376, 377, 378, 379, 843, 380, 381, 842, 382, 383, 384, 841, 385, 386, 387, 388, 389, 753, 390, 391, 392, 393, 394, 752, 395, 396, 397, 751, 398, 399, 400, 401, 750, 402, 403, 749, 404, 405, 406, 407, 408, 748, 409, 410, 411, 412, 747, 413, 414, 415, 746, 416, 417, 745, 418, 419, 420, 744, 421, 422, 423, 424, 743, 425, 426, 427, 428, 742, 429, 430, 741, 431, 432, 433, 434, 435, 740, 436, 437, 438, 439, 440, 441, 442, 739, 443, 444, 445, 738, 446, 447, 737, 448, 449, 450, 736, 451, 452, 453, 454, 735, 455, 456, 734, 457, 458, 459, 460, 461, 733, 462, 463, 464, 465, 466, 467, 732, 468, 469, 731, 470, 471, 472, 730, 473, 474, 729, 475, 476, 477, 478, 728, 479, 480, 727, 481, 482, 726, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 725, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 724, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 723, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 722, 558, 559, 560, 721, 561, 562, 563, 564, 830, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 720, 575, 576, 577, 719, 578, 579, 580, 581, 718, 582, 583, 584, 717, 585, 586, 587, 588, 716, 589, 590, 591, 715, 592, 593, 594, 714, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 829, 606, 607, 608, 609, 610, 611, 612, 613, 614, 713, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 712, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 711, 637, 638, 710, 639, 640, 641, 642, 643, 644, 645, 709, 646, 647, 648, 649, 650, 651, 652, 708, 653, 654, 707, 655, 656, 706, 657, 658, 659, 705, 660, 661, 704, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 819, 703 }
  uselistorder i32 (i32)* @function_12904, { 2, 3, 0, 1 }
  uselistorder i32 ptrtoint ([15 x i8]* @global_var_17710.72 to i32), { 0, 2, 1, 3 }
  uselistorder i16* bitcast (i16** @global_var_1829c.123 to i16*), { 1, 0 }
  uselistorder i16** @global_var_1829c.123, { 1, 0 }
  uselistorder i32 ptrtoint (i16** @global_var_1829c.123 to i32), { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_129d4, { 1, 0 }
  uselistorder i8 31, { 6, 0, 1, 7, 8, 2, 3, 4, 5 }
  uselistorder i8 -3, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder i8 -4, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_177e8.206 to i32), { 5, 7, 0, 8, 6, 9, 1, 10, 2, 11, 3, 12, 4, 13 }
  uselistorder i32 (i32, i32, i32, i32)* @function_12ac0, { 10, 9, 8, 7, 6, 5, 4, 24, 28, 27, 30, 29, 26, 25, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 3, 2, 1, 0 }
  uselistorder i8 37, { 2, 3, 0, 1, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i8 34, { 4, 5, 0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i8 36, { 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i8 35, { 8, 9, 10, 11, 0, 1, 2, 3, 4, 5, 6, 7, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i8 58, { 4, 5, 0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i8 57, { 4, 5, 0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i8 62, { 4, 5, 0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i8 61, { 4, 5, 0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 (i32)* @function_112fc, { 38, 37, 12, 11, 31, 36, 35, 39, 34, 33, 32, 30, 29, 28, 27, 10, 9, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 6, 5, 4, 3, 2, 1, 0, 8, 7 }
  uselistorder i32 (i32, i32, i32, i32)* @function_11994, { 1, 4, 3, 2, 0 }
  uselistorder i32 (i32, i32*)* @function_112d8, { 30, 31, 0, 1, 2, 3, 4, 5, 6, 7, 32, 33, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36 }
  uselistorder i32 (i32)* @function_1139c, { 6, 5, 30, 29, 28, 27, 26, 25, 24, 23, 4, 3, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_12a4c, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_120c0, { 1, 0 }
  uselistorder i32 284, { 3, 0, 1, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 ()* @function_e19c, { 0, 2, 1 }
  uselistorder i8 2, { 0, 2, 1 }
  uselistorder i8 5, { 11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_12a84, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_12af8, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_c898, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_c848, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @llvm.bswap.i32, { 1, 2, 0, 3, 4, 5, 6, 9, 10, 7, 8, 13, 14, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i32 53, { 1, 0, 2 }
  uselistorder i32 182, { 1, 0 }
  uselistorder i32 247, { 4, 0, 1, 2, 3 }
  uselistorder i32 51, { 2, 0, 3, 1 }
  uselistorder i32 200, { 1, 0 }
  uselistorder i32 71, { 1, 0 }
  uselistorder i32 186, { 1, 0, 2 }
  uselistorder i32 135, { 1, 0, 2 }
  uselistorder i32 230, { 1, 0 }
  uselistorder i32 238, { 1, 0, 2 }
  uselistorder i32 219, { 1, 0, 2, 3 }
  uselistorder i32 91, { 1, 2, 0 }
  uselistorder i32 239, { 5, 6, 4, 0, 1, 2, 3 }
  uselistorder i32 93, { 4, 0, 1, 2, 3 }
  uselistorder i32 66, { 1, 0, 2, 3 }
  uselistorder i32 94, { 0, 4, 5, 1, 6, 2, 7, 3 }
  uselistorder i32 107, { 2, 0, 1, 3 }
  uselistorder i32 187, { 0, 1, 3, 2 }
  uselistorder i32 61, { 2, 0, 1, 3 }
  uselistorder i32 205, { 0, 2, 3, 1 }
  uselistorder i32 46, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 45, { 0, 1, 3, 2, 4 }
  uselistorder i32 223, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32 118, { 2, 0, 1 }
  uselistorder i32 211, { 0, 2, 1 }
  uselistorder i32 111, { 2, 3, 0, 1 }
  uselistorder i32 41, { 3, 2, 4, 5, 6, 0, 1, 7, 8 }
  uselistorder i32 165, { 1, 0, 2 }
  uselistorder i32 252, { 2, 0, 1, 3 }
  uselistorder i32 251, { 6, 7, 8, 4, 9, 10, 5, 0, 1, 2, 3 }
  uselistorder i32 231, { 2, 0, 1 }
  uselistorder i32 142, { 0, 3, 4, 1, 5, 2, 6 }
  uselistorder i32 139, { 1, 0, 2 }
  uselistorder i32 138, { 1, 2, 0, 3, 4 }
  uselistorder i32 222, { 0, 2, 3, 4, 5, 6, 1, 7 }
  uselistorder i32 221, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 134, { 2, 0, 1, 3 }
  uselistorder i32 39, { 2, 3, 1, 4, 0 }
  uselistorder i32 236, { 1, 2, 0, 3 }
  uselistorder i32 254, { 4, 5, 6, 7, 0, 1, 2, 3 }
  uselistorder i32 253, { 5, 6, 4, 0, 1, 2, 3 }
  uselistorder i32 62, { 1, 2, 6, 3, 4, 7, 5, 0 }
  uselistorder i32 63, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 208, { 2, 0, 3, 1 }
  uselistorder i32 35, { 1, 0, 2 }
  uselistorder i32 119, { 0, 2, 3, 1 }
  uselistorder i32 234, { 1, 2, 0 }
  uselistorder i32 116, { 2, 0, 1 }
  uselistorder i32 206, { 0, 4, 1, 2, 5, 3 }
  uselistorder i32 207, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32 203, { 2, 0, 1, 3 }
  uselistorder i32 58, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32 67, { 1, 0 }
  uselistorder i32 166, { 3, 0, 1, 2 }
  uselistorder i32 163, { 2, 0, 1 }
  uselistorder i32 160, { 1, 0 }
  uselistorder i32 216, { 1, 2, 0 }
  uselistorder i32 201, { 1, 0 }
  uselistorder i32 151, { 0, 2, 3, 1 }
  uselistorder i32 152, { 1, 0, 2 }
  uselistorder i32 190, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32 184, { 2, 0, 1, 3 }
  uselistorder i32 183, { 2, 0, 1 }
  uselistorder i32 143, { 1, 2, 3, 0 }
  uselistorder i32 132, { 1, 2, 0 }
  uselistorder i32 149, { 2, 0, 3, 1 }
  uselistorder i32 124, { 1, 0 }
  uselistorder i32 158, { 0, 2, 3, 4, 5, 6, 1 }
  uselistorder i32 147, { 1, 0, 2 }
  uselistorder i32 153, { 1, 2, 0 }
  uselistorder i32 79, { 3, 0, 1, 2 }
  uselistorder i32 191, { 0, 2, 3, 1 }
  uselistorder i32 167, { 2, 3, 0, 4, 1 }
  uselistorder i32 192, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 215, { 2, 0, 1, 3 }
  uselistorder i32 54, { 3, 1, 2, 0 }
  uselistorder i32 214, { 0, 2, 1, 3 }
  uselistorder i32 137, { 1, 2, 0, 3 }
  uselistorder i32 136, { 1, 2, 0 }
  uselistorder i32 49, { 1, 0, 2 }
  uselistorder i32 126, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_177cc.185 to i32), { 0, 5, 1, 6, 2, 3, 4, 7 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1777c.165 to i32), { 0, 10, 1, 11, 2, 3, 4, 12, 5, 13, 6, 14, 7, 15, 8, 16, 9, 17 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_17754.157 to i32), { 0, 7, 1, 8, 2, 9, 3, 10, 4, 5, 6, 11 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1774c.155 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_17780.153 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_17744.151 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @function_e264, { 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_1772c.147 to i32), { 0, 7, 1, 2, 3, 8, 4, 9, 5, 10, 6, 11 }
  uselistorder i8* @global_var_18291.142, { 1, 0 }
  uselistorder i16* @global_var_18286.141, { 2, 1, 0 }
  uselistorder i32 5888, { 2, 3, 0, 4, 1 }
  uselistorder i8 6, { 2, 3, 4, 0, 1 }
  uselistorder i8 16, { 0, 14, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 ptrtoint (i8** @global_var_18270.133 to i32), { 1, 0, 3, 2, 4, 7, 6, 5 }
  uselistorder i8* @global_var_18290.137, { 1, 0 }
  uselistorder i32 10240, { 1, 0, 2 }
  uselistorder i32 69, { 1, 2, 0 }
  uselistorder i32 240, { 3, 2, 0, 1 }
  uselistorder i32 1023, { 2, 0, 1 }
  uselistorder i32 ()* @function_df2c, { 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 3, 5, 4, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_12b38, { 9, 8, 7, 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 2048, { 5, 4, 1, 2, 3, 6, 0, 7, 8, 9 }
  uselistorder i32* @global_var_1a2f4.131, { 1, 2, 3, 4, 0 }
  uselistorder i32* @global_var_1a2f0.129, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 288, { 0, 1, 6, 2, 3, 4, 5, 7 }
  uselistorder i32* @global_var_182a0.117, { 2, 0, 3, 4, 1, 6, 5 }
  uselistorder i32 (i32*)* @function_1201c, { 0, 1, 2, 3, 4, 5, 8, 6, 7 }
  uselistorder i32 (i32)* @function_df88, { 1, 0 }
  uselistorder i32* @global_var_1a2d4.47, { 3, 4, 1, 2, 0, 5, 6, 7, 8, 9, 10, 14, 11, 12, 13 }
  uselistorder i32 ptrtoint (i32* @global_var_1a2d4.47 to i32), { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 ()* @function_11b98, { 2, 1, 0 }
  uselistorder i32 ()* @function_1208c, { 2, 6, 5, 4, 3, 1, 0 }
  uselistorder label %dec_label_pc_105dc.backedge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_105dc.backedge.thread, { 4, 3, 2, 1, 0 }
  uselistorder label %bb1974, { 1, 0 }
  uselistorder label %dec_label_pc_1114c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11068, { 1, 0 }
  uselistorder label %dec_label_pc_10f58, { 0, 1, 2, 5, 3, 6, 7, 4 }
  uselistorder label %dec_label_pc_10f20, { 1, 0 }
  uselistorder label %dec_label_pc_10f0c, { 0, 1, 2, 3, 6, 4, 7, 8, 9, 5 }
  uselistorder label %dec_label_pc_10efc, { 1, 0 }
  uselistorder label %dec_label_pc_10e48, { 0, 6, 1, 2, 3, 4, 7, 8, 9, 5 }
  uselistorder label %dec_label_pc_10e2c, { 1, 0 }
  uselistorder label %dec_label_pc_10d20, { 1, 0 }
  uselistorder label %dec_label_pc_10c74, { 1, 0 }
  uselistorder label %thread-pre-split722, { 1, 0 }
  uselistorder label %dec_label_pc_10c24, { 1, 0 }
  uselistorder label %.thread1199, { 5, 2, 3, 1, 4, 6, 0 }
  uselistorder label %dec_label_pc_10ba8, { 6, 2, 3, 4, 1, 0, 5 }
  uselistorder label %.thread714, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10b74, { 1, 0 }
  uselistorder label %.thread710, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10b54, { 1, 0 }
  uselistorder label %dec_label_pc_10b40, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10afc, { 1, 0 }
  uselistorder label %dec_label_pc_10afc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10a90, { 0, 6, 1, 2, 3, 4, 7, 8, 9, 5 }
  uselistorder label %dec_label_pc_10a74, { 1, 0 }
  uselistorder label %dec_label_pc_109bc, { 0, 6, 1, 2, 3, 4, 7, 8, 9, 5 }
  uselistorder label %dec_label_pc_109a0, { 1, 0 }
  uselistorder label %dec_label_pc_108e8, { 0, 6, 1, 2, 3, 4, 7, 8, 9, 5 }
  uselistorder label %dec_label_pc_108cc, { 1, 0 }
  uselistorder label %dec_label_pc_10814, { 0, 6, 1, 2, 3, 4, 7, 8, 9, 5 }
  uselistorder label %dec_label_pc_107f8, { 1, 0 }
  uselistorder label %dec_label_pc_10770, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_106e0, { 1, 6, 7, 3, 0, 2, 4, 5 }
  uselistorder label %bb1936, { 1, 0 }
  uselistorder label %bb1934, { 1, 0 }
  uselistorder label %dec_label_pc_106a8, { 1, 0 }
  uselistorder label %dec_label_pc_10640, { 1, 0 }
  uselistorder label %.thread675, { 1, 0 }
  uselistorder label %dec_label_pc_105f4, { 1, 0 }
  uselistorder label %dec_label_pc_105e4, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_105e4.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_105c0, { 1, 0 }
  uselistorder label %bb1930, { 1, 0 }
  uselistorder label %dec_label_pc_104e4, { 1, 0 }
  uselistorder label %bb1928, { 1, 0 }
  uselistorder label %bb1926, { 1, 0 }
  uselistorder label %bb1924, { 1, 0 }
  uselistorder label %bb1922, { 3, 4, 0, 1, 2, 6, 5 }
  uselistorder label %dec_label_pc_103d8.dec_label_pc_103d8_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_103b4.dec_label_pc_103b4_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_103a8, { 4, 0, 1, 2, 3 }
  uselistorder label %bb1920, { 1, 0 }
  uselistorder label %dec_label_pc_10388, { 1, 0 }
  uselistorder label %dec_label_pc_10360, { 1, 0 }
  uselistorder label %dec_label_pc_1033c, { 1, 0 }
  uselistorder label %dec_label_pc_10204, { 10, 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 11 }
  uselistorder label %dec_label_pc_101f0, { 1, 0 }
  uselistorder label %dec_label_pc_100e0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100c0, { 1, 0 }
  uselistorder label %dec_label_pc_100ac, { 1, 0 }
  uselistorder label %dec_label_pc_10094, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10070, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1004c, { 1, 2, 0 }
  uselistorder label %thread-pre-split626, { 1, 0 }
  uselistorder label %bb1900, { 1, 0 }
  uselistorder label %dec_label_pc_10008, { 1, 2, 0 }
  uselistorder label %dec_label_pc_ffe4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_ffc0, { 2, 0, 3, 1 }
  uselistorder label %bb1891, { 1, 0 }
  uselistorder label %bb1889, { 1, 0 }
  uselistorder label %dec_label_pc_ff8c, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_ff6c, { 1, 2, 0, 3 }
  uselistorder label %bb1886, { 1, 0 }
  uselistorder label %dec_label_pc_ff50, { 1, 0 }
  uselistorder label %thread-pre-split598, { 1, 0 }
  uselistorder label %bb1883, { 1, 0 }
  uselistorder label %thread-pre-split597, { 1, 0 }
  uselistorder label %bb1880, { 1, 0 }
  uselistorder label %thread-pre-split595, { 1, 0 }
  uselistorder label %bb1875, { 1, 0 }
  uselistorder label %thread-pre-split593, { 1, 0 }
  uselistorder label %bb1870, { 2, 1, 0 }
  uselistorder label %dec_label_pc_fe80, { 1, 2, 0 }
  uselistorder label %thread-pre-split586, { 1, 0 }
  uselistorder label %bb1862, { 1, 0 }
  uselistorder label %dec_label_pc_fe3c, { 2, 1, 3, 0 }
  uselistorder label %bb1859, { 1, 0 }
  uselistorder label %bb1857, { 1, 0 }
  uselistorder label %dec_label_pc_fe14, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_fdf0, { 2, 0, 3, 1 }
  uselistorder label %bb1852, { 1, 0 }
  uselistorder label %bb1850, { 1, 0 }
  uselistorder label %dec_label_pc_fdbc, { 2, 0, 3, 1 }
  uselistorder label %bb1847, { 1, 0 }
  uselistorder label %bb1845, { 1, 0 }
  uselistorder label %dec_label_pc_fd88, { 2, 1, 3, 0 }
  uselistorder label %bb1842, { 1, 0 }
  uselistorder label %bb1840, { 1, 0 }
  uselistorder label %dec_label_pc_fd60, { 2, 0, 3, 1 }
  uselistorder label %bb1836, { 1, 0 }
  uselistorder label %bb1834, { 1, 0 }
  uselistorder label %dec_label_pc_fd2c, { 2, 0, 3, 1 }
  uselistorder label %bb1831, { 1, 0 }
  uselistorder label %bb1829, { 1, 0 }
  uselistorder label %dec_label_pc_fcf8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fcdc, { 2, 0, 3, 1 }
  uselistorder label %bb1825, { 1, 0 }
  uselistorder label %bb1823, { 1, 0 }
  uselistorder label %dec_label_pc_fca8, { 2, 0, 3, 1 }
  uselistorder label %bb1820, { 1, 0 }
  uselistorder label %bb1818, { 1, 0 }
  uselistorder label %dec_label_pc_fc74, { 2, 0, 3, 1 }
  uselistorder label %bb1815, { 1, 0 }
  uselistorder label %bb1813, { 1, 0 }
  uselistorder label %dec_label_pc_fc44, { 2, 0, 3, 1 }
  uselistorder label %bb1810, { 1, 0 }
  uselistorder label %bb1808, { 1, 0 }
  uselistorder label %dec_label_pc_fc14, { 1, 2, 0 }
  uselistorder label %bb1806, { 1, 0 }
  uselistorder label %bb1804, { 1, 0 }
  uselistorder label %dec_label_pc_fbec, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_fbc8, { 1, 0, 2 }
  uselistorder label %bb1800, { 1, 0 }
  uselistorder label %bb1798, { 1, 0 }
  uselistorder label %dec_label_pc_fba0, { 2, 0, 3, 1 }
  uselistorder label %bb1795, { 1, 0 }
  uselistorder label %bb1793, { 1, 0 }
  uselistorder label %dec_label_pc_fb6c, { 2, 0, 3, 1 }
  uselistorder label %bb1790, { 1, 0 }
  uselistorder label %bb1788, { 1, 0 }
  uselistorder label %dec_label_pc_fb38, { 1, 2, 0 }
  uselistorder label %bb1786, { 1, 0 }
  uselistorder label %bb1784, { 1, 0 }
  uselistorder label %dec_label_pc_fb0c, { 1, 0 }
  uselistorder label %dec_label_pc_fb00, { 1, 0 }
  uselistorder label %dec_label_pc_fae0, { 1, 0 }
  uselistorder label %dec_label_pc_fac8, { 1, 0 }
  uselistorder label %dec_label_pc_fa9c, { 1, 0 }
  uselistorder label %dec_label_pc_fa90, { 1, 0 }
  uselistorder label %dec_label_pc_fa70, { 1, 0 }
  uselistorder label %dec_label_pc_fa38, { 1, 0 }
  uselistorder label %dec_label_pc_fa2c, { 1, 0 }
  uselistorder label %dec_label_pc_fa14, { 1, 0 }
  uselistorder label %dec_label_pc_fa00, { 1, 0 }
  uselistorder label %dec_label_pc_f9e8, { 1, 0 }
  uselistorder label %dec_label_pc_f9d0, { 1, 0, 2 }
  uselistorder label %bb1773, { 1, 0 }
  uselistorder label %bb1771, { 1, 0 }
  uselistorder label %dec_label_pc_f99c, { 2, 0, 3, 1 }
  uselistorder label %bb1766, { 1, 0 }
  uselistorder label %bb1764, { 1, 0 }
  uselistorder label %dec_label_pc_f96c, { 2, 1, 3, 0 }
  uselistorder label %bb1761, { 1, 0 }
  uselistorder label %bb1759, { 1, 0 }
  uselistorder label %dec_label_pc_f938, { 2, 1, 3, 0 }
  uselistorder label %bb1753, { 1, 0 }
  uselistorder label %bb1751, { 1, 0 }
  uselistorder label %dec_label_pc_f910, { 2, 1, 3, 0 }
  uselistorder label %bb1747, { 1, 0 }
  uselistorder label %bb1745, { 1, 0 }
  uselistorder label %dec_label_pc_f8e8, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_f8c4, { 2, 0, 3, 1 }
  uselistorder label %bb1740, { 1, 0 }
  uselistorder label %bb1738, { 1, 0 }
  uselistorder label %dec_label_pc_f890, { 2, 0, 3, 1 }
  uselistorder label %bb1735, { 1, 0 }
  uselistorder label %bb1733, { 1, 0 }
  uselistorder label %dec_label_pc_f85c, { 1, 0, 2 }
  uselistorder label %bb1730, { 1, 0 }
  uselistorder label %bb1728, { 1, 0 }
  uselistorder label %dec_label_pc_f834, { 1, 0, 2 }
  uselistorder label %bb1725, { 1, 0 }
  uselistorder label %bb1723, { 1, 0 }
  uselistorder label %dec_label_pc_f810, { 1, 0, 2 }
  uselistorder label %bb1720, { 1, 0 }
  uselistorder label %bb1718, { 1, 0 }
  uselistorder label %dec_label_pc_f7e8, { 2, 0, 3, 1 }
  uselistorder label %bb1715, { 1, 0 }
  uselistorder label %bb1713, { 1, 0 }
  uselistorder label %dec_label_pc_f7b8, { 1, 0 }
  uselistorder label %dec_label_pc_f7a0, { 1, 0 }
  uselistorder label %dec_label_pc_f788, { 1, 2, 0 }
  uselistorder label %bb1708, { 1, 0 }
  uselistorder label %bb1706, { 1, 0 }
  uselistorder label %dec_label_pc_f760, { 2, 0, 3, 1 }
  uselistorder label %bb1703, { 1, 0 }
  uselistorder label %bb1701, { 1, 0 }
  uselistorder label %bb1699, { 1, 0 }
  uselistorder label %dec_label_pc_f700, { 2, 1, 3, 0 }
  uselistorder label %bb1694, { 1, 0 }
  uselistorder label %bb1692, { 1, 0 }
  uselistorder label %dec_label_pc_f6c8, { 2, 0, 3, 1 }
  uselistorder label %bb1686, { 1, 0 }
  uselistorder label %dec_label_pc_f698, { 1, 2, 0 }
  uselistorder label %bb1684, { 1, 0 }
  uselistorder label %bb1682, { 1, 0 }
  uselistorder label %dec_label_pc_f66c, { 2, 1, 3, 0 }
  uselistorder label %bb1679, { 1, 0 }
  uselistorder label %bb1677, { 1, 0 }
  uselistorder label %dec_label_pc_f638, { 1, 0, 2 }
  uselistorder label %bb1671, { 1, 0 }
  uselistorder label %bb1669, { 1, 0 }
  uselistorder label %dec_label_pc_f604, { 2, 0, 3, 1 }
  uselistorder label %bb1664, { 1, 0 }
  uselistorder label %bb1662, { 1, 0 }
  uselistorder label %dec_label_pc_f5d0, { 2, 0, 3, 1 }
  uselistorder label %bb1659, { 1, 0 }
  uselistorder label %dec_label_pc_f5a0, { 1, 2, 0 }
  uselistorder label %bb1657, { 1, 0 }
  uselistorder label %bb1655, { 1, 0 }
  uselistorder label %dec_label_pc_f574, { 1, 2, 0 }
  uselistorder label %bb1653, { 1, 0 }
  uselistorder label %bb1651, { 1, 0 }
  uselistorder label %dec_label_pc_f54c, { 2, 1, 3, 0 }
  uselistorder label %bb1648, { 1, 0 }
  uselistorder label %bb1646, { 1, 0 }
  uselistorder label %dec_label_pc_f518, { 2, 1, 3, 0 }
  uselistorder label %bb1640, { 1, 0 }
  uselistorder label %dec_label_pc_f4e8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f4d0, { 2, 0, 3, 1 }
  uselistorder label %bb1633, { 1, 0 }
  uselistorder label %bb1631, { 1, 0 }
  uselistorder label %dec_label_pc_f49c, { 2, 0, 3, 1 }
  uselistorder label %bb1628, { 1, 0 }
  uselistorder label %bb1626, { 1, 0 }
  uselistorder label %dec_label_pc_f468, { 1, 2, 0 }
  uselistorder label %bb1624, { 1, 0 }
  uselistorder label %dec_label_pc_f444, { 2, 1, 3, 0 }
  uselistorder label %bb1621, { 1, 0 }
  uselistorder label %dec_label_pc_f420, { 1, 0, 2 }
  uselistorder label %bb1617, { 1, 0 }
  uselistorder label %bb1615, { 1, 0 }
  uselistorder label %dec_label_pc_f3f0, { 1, 2, 0 }
  uselistorder label %bb1611, { 1, 0 }
  uselistorder label %bb1609, { 1, 0 }
  uselistorder label %dec_label_pc_f3a8, { 1, 0 }
  uselistorder label %dec_label_pc_f368, { 1, 0 }
  uselistorder label %dec_label_pc_f350, { 1, 0 }
  uselistorder label %dec_label_pc_f2f4, { 1, 0 }
  uselistorder label %dec_label_pc_f2dc, { 1, 0 }
  uselistorder label %dec_label_pc_f2c8, { 1, 0 }
  uselistorder label %dec_label_pc_f2b0, { 1, 0 }
  uselistorder label %thread-pre-split212, { 1, 0 }
  uselistorder label %bb1591, { 1, 0 }
  uselistorder label %dec_label_pc_f250, { 1, 2, 0 }
  uselistorder label %thread-pre-split207, { 1, 0 }
  uselistorder label %bb1588, { 1, 0 }
  uselistorder label %thread-pre-split205, { 1, 0 }
  uselistorder label %bb1583, { 1, 0 }
  uselistorder label %thread-pre-split204, { 1, 0 }
  uselistorder label %bb1580, { 1, 0 }
  uselistorder label %thread-pre-split203, { 1, 0 }
  uselistorder label %bb1577, { 1, 0 }
  uselistorder label %thread-pre-split201, { 1, 0 }
  uselistorder label %bb1572, { 1, 0 }
  uselistorder label %dec_label_pc_f148, { 1, 2, 0 }
  uselistorder label %thread-pre-split195, { 1, 0 }
  uselistorder label %bb1566, { 1, 0 }
  uselistorder label %thread-pre-split193, { 1, 0 }
  uselistorder label %bb1561, { 1, 0 }
  uselistorder label %thread-pre-split191, { 1, 0 }
  uselistorder label %bb1556, { 1, 0 }
  uselistorder label %thread-pre-split190, { 1, 0 }
  uselistorder label %bb1553, { 1, 0 }
  uselistorder label %thread-pre-split189, { 1, 0 }
  uselistorder label %bb1550, { 1, 0 }
  uselistorder label %dec_label_pc_f04c, { 1, 2, 0 }
  uselistorder label %thread-pre-split183, { 1, 0 }
  uselistorder label %bb1544, { 1, 0 }
  uselistorder label %thread-pre-split182, { 1, 0 }
  uselistorder label %bb1541, { 1, 0 }
  uselistorder label %thread-pre-split181, { 1, 0 }
  uselistorder label %bb1538, { 1, 0 }
  uselistorder label %thread-pre-split180, { 1, 0 }
  uselistorder label %bb1535, { 1, 0 }
  uselistorder label %thread-pre-split179, { 1, 0 }
  uselistorder label %bb1532, { 1, 0 }
  uselistorder label %bb1530, { 1, 0 }
  uselistorder label %bb1528, { 1, 0 }
  uselistorder label %thread-pre-split178, { 1, 0 }
  uselistorder label %bb1525, { 1, 0 }
  uselistorder label %dec_label_pc_ef48, { 1, 2, 0 }
  uselistorder label %dec_label_pc_ef24, { 1, 2, 0 }
  uselistorder label %bb1520, { 1, 0 }
  uselistorder label %bb1518, { 1, 0 }
  uselistorder label %dec_label_pc_eef8, { 1, 2, 0 }
  uselistorder label %bb1515, { 1, 0 }
  uselistorder label %thread-pre-split167, { 1, 0 }
  uselistorder label %bb1512, { 1, 0 }
  uselistorder label %thread-pre-split165, { 1, 0 }
  uselistorder label %bb1507, { 1, 0 }
  uselistorder label %dec_label_pc_ee70, { 1, 2, 0 }
  uselistorder label %dec_label_pc_ee4c, { 1, 2, 0 }
  uselistorder label %bb1500, { 1, 0 }
  uselistorder label %bb1498, { 1, 0 }
  uselistorder label %dec_label_pc_ee24, { 1, 2, 0 }
  uselistorder label %dec_label_pc_ee08, { 1, 2, 0 }
  uselistorder label %bb1496, { 1, 0 }
  uselistorder label %bb1494, { 1, 0 }
  uselistorder label %dec_label_pc_ede0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_edbc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_ed98, { 1, 2, 0 }
  uselistorder label %bb1486, { 1, 0 }
  uselistorder label %bb1484, { 1, 0 }
  uselistorder label %thread-pre-split132, { 1, 0 }
  uselistorder label %bb1481, { 1, 0 }
  uselistorder label %thread-pre-split131, { 1, 0 }
  uselistorder label %bb1478, { 1, 0 }
  uselistorder label %dec_label_pc_ecf4, { 1, 2, 0 }
  uselistorder label %bb1469, { 1, 0 }
  uselistorder label %bb1467, { 1, 0 }
  uselistorder label %bb1465, { 1, 0 }
  uselistorder label %bb1463, { 1, 0 }
  uselistorder label %dec_label_pc_ec94, { 1, 0 }
  uselistorder label %dec_label_pc_ec78, { 1, 0 }
  uselistorder label %dec_label_pc_ec5c, { 1, 0 }
  uselistorder label %dec_label_pc_ec44, { 1, 0 }
  uselistorder label %dec_label_pc_ebec, { 1, 0 }
  uselistorder label %dec_label_pc_ebd0, { 1, 0 }
  uselistorder label %dec_label_pc_ebb4, { 1, 0 }
  uselistorder label %dec_label_pc_eb98, { 1, 0 }
  uselistorder label %dec_label_pc_eb48, { 1, 0 }
  uselistorder label %dec_label_pc_eb2c, { 1, 0 }
  uselistorder label %dec_label_pc_eb20, { 1, 0 }
  uselistorder label %dec_label_pc_eb04, { 1, 0 }
  uselistorder label %dec_label_pc_eaec, { 1, 0 }
  uselistorder label %dec_label_pc_eacc, { 1, 0 }
  uselistorder label %dec_label_pc_ea88, { 1, 0 }
  uselistorder label %dec_label_pc_ea7c, { 1, 0 }
  uselistorder label %dec_label_pc_ea24, { 1, 0 }
  uselistorder label %dec_label_pc_e9f0, { 1, 0 }
  uselistorder label %dec_label_pc_e9dc, { 1, 0 }
  uselistorder label %dec_label_pc_e9c8, { 1, 0 }
  uselistorder label %dec_label_pc_e9a0, { 1, 0 }
  uselistorder label %dec_label_pc_e98c, { 1, 0 }
  uselistorder label %dec_label_pc_e978, { 1, 0 }
  uselistorder label %dec_label_pc_e960, { 1, 0 }
  uselistorder label %dec_label_pc_e944, { 1, 0 }
  uselistorder label %dec_label_pc_e8f0, { 1, 0 }
  uselistorder label %dec_label_pc_e8d8, { 1, 0 }
  uselistorder label %bb1370, { 1, 0 }
  uselistorder label %dec_label_pc_e818, { 11, 117, 0, 12, 118, 119, 13, 120, 121, 14, 122, 123, 124, 125, 15, 126, 16, 17, 127, 128, 18, 129, 19, 130, 131, 132, 20, 133, 21, 22, 23, 24, 25, 134, 26, 27, 28, 29, 30, 135, 31, 32, 33, 34, 136, 35, 36, 137, 37, 38, 138, 39, 40, 41, 42, 43, 139, 44, 45, 46, 47, 48, 49, 50, 51, 52, 140, 53, 54, 55, 56, 57, 58, 59, 141, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 142, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 91, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 92, 180, 181, 182, 93, 183, 184, 185, 186, 94, 187, 95, 96, 188, 189, 190, 97, 98, 99, 191, 192, 193, 100, 101, 102, 194, 103, 195, 104, 105, 106, 196, 107, 108, 109, 110, 111, 112, 113, 197, 198, 199, 114, 115, 116, 200, 201, 202, 203, 1, 204, 2, 205, 3, 206, 4, 207, 5, 208, 6, 209, 7, 210, 8, 211, 9, 212, 10, 213, 214 }
  uselistorder label %dec_label_pc_e578, { 1, 2, 0 }
}

define i32 @function_112d8(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_112d8:
  store i32 ptrtoint (i32* @global_var_1a300.216 to i32), i32* @r2, align 4
  %v3_112dc = mul i32 %arg1, 8
  %v2_112e0 = add i32 %v3_112dc, ptrtoint (i32* @global_var_1a300.216 to i32)
  store i32 %v2_112e0, i32* @r3, align 4
  %v2_112e4 = icmp eq i32* %arg2, null
  br i1 %v2_112e4, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_112d8
  %v3_112ec4 = inttoptr i32 %v2_112e0 to i32*
  %v4_112ec5 = load i32, i32* %v3_112ec4, align 4
  br label %bb7

bb:                                               ; preds = %dec_label_pc_112d8
  %v2_112e8 = add i32 %v3_112dc, add (i32 ptrtoint (i32* @global_var_1a300.216 to i32), i32 4)
  %v3_112e8 = inttoptr i32 %v2_112e8 to i16*
  %v4_112e8 = load i16, i16* %v3_112e8, align 4
  %v5_112e8 = zext i16 %v4_112e8 to i32
  store i32 %v5_112e8, i32* @r3, align 4
  %v3_112ec = inttoptr i32 %v2_112e0 to i32*
  %v4_112ec = load i32, i32* %v3_112ec, align 4
  store i32 %v5_112e8, i32* %arg2, align 4
  br label %bb7

bb7:                                              ; preds = %.thread, %bb
  %v4_112ec6 = phi i32 [ %v4_112ec5, %.thread ], [ %v4_112ec, %bb ]
  ret i32 %v4_112ec6

; uselistorder directives
  uselistorder i32 %v2_112e0, { 1, 0, 2 }
  uselistorder i32 %v3_112dc, { 1, 0 }
  uselistorder label %bb7, { 1, 0 }
}

define i32 @function_112fc(i32 %arg1) local_unnamed_addr {
dec_label_pc_112fc:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_11304 = mul i32 %arg1, 8
  %v2_11308 = add i32 %v3_11304, ptrtoint (i32* @global_var_1a300.216 to i32)
  %v2_1130c = load i32, i32* inttoptr (i32 98448 to i32*), align 16
  %v1_11310 = add i32 %v3_11304, add (i32 ptrtoint (i32* @global_var_1a300.216 to i32), i32 4)
  %v2_11310 = inttoptr i32 %v1_11310 to i16*
  %v3_11310 = load i16, i16* %v2_11310, align 4
  %v3_11314 = udiv i32 %v2_1130c, 256
  %v2_11318 = icmp eq i16 %v3_11310, 0
  %v3_1131c = udiv i32 %v2_1130c, 65536
  store i32 %v3_1131c, i32* @r3, align 4
  %v3_11320 = load i32, i32* @r4, align 4
  store i32 %v3_11320, i32* %stack_var_-16, align 4
  %v1_11324 = urem i32 %v3_11314, 256
  store i32 %v1_11324, i32* %r6.global-to-local, align 4
  %v1_11328 = urem i32 %v3_1131c, 256
  store i32 %v1_11328, i32* %r5.global-to-local, align 4
  %v3_1132c = udiv i32 %v2_1130c, 16777216
  store i32 %v3_1132c, i32* %r4.global-to-local, align 4
  %v1_11330 = urem i32 %v2_1130c, 256
  store i32 %v1_11330, i32* %lr.global-to-local, align 4
  br i1 %v2_11318, label %dec_label_pc_1138c, label %dec_label_pc_11338

dec_label_pc_11338:                               ; preds = %dec_label_pc_112fc
  store i32 0, i32* @ip, align 4
  %v1_1133c = inttoptr i32 %v2_11308 to i32*
  br label %dec_label_pc_1133c

dec_label_pc_1133c:                               ; preds = %dec_label_pc_1133c.dec_label_pc_1133c_crit_edge, %dec_label_pc_11338
  %v0_11344 = phi i32 [ %v0_11344.pre, %dec_label_pc_1133c.dec_label_pc_1133c_crit_edge ], [ %v1_11330, %dec_label_pc_11338 ]
  %v2_11348 = phi i32 [ %v1_11380, %dec_label_pc_1133c.dec_label_pc_1133c_crit_edge ], [ 0, %dec_label_pc_11338 ]
  %v2_1133c = load i32, i32* %v1_1133c, align 4
  %v2_11340 = add i32 %v2_1133c, %v2_11348
  %v3_11340 = inttoptr i32 %v2_11340 to i8*
  %v4_11340 = load i8, i8* %v3_11340, align 1
  %v6_11340 = zext i8 %v4_11340 to i32
  %v2_11344 = xor i32 %v6_11340, %v0_11344
  %v1_11348 = trunc i32 %v2_11344 to i8
  store i8 %v1_11348, i8* %v3_11340, align 1
  %v2_1134c = load i32, i32* %v1_1133c, align 4
  %v0_11350 = load i32, i32* @ip, align 4
  %v2_11350 = add i32 %v0_11350, %v2_1134c
  %v3_11350 = inttoptr i32 %v2_11350 to i8*
  %v4_11350 = load i8, i8* %v3_11350, align 1
  %v6_11350 = zext i8 %v4_11350 to i32
  %v0_11354 = load i32, i32* %r6.global-to-local, align 4
  %v2_11354 = xor i32 %v0_11354, %v6_11350
  %v1_11358 = trunc i32 %v2_11354 to i8
  store i8 %v1_11358, i8* %v3_11350, align 1
  %v2_1135c = load i32, i32* %v1_1133c, align 4
  %v0_11360 = load i32, i32* @ip, align 4
  %v2_11360 = add i32 %v0_11360, %v2_1135c
  %v3_11360 = inttoptr i32 %v2_11360 to i8*
  %v4_11360 = load i8, i8* %v3_11360, align 1
  %v6_11360 = zext i8 %v4_11360 to i32
  %v0_11364 = load i32, i32* %r5.global-to-local, align 4
  %v2_11364 = xor i32 %v0_11364, %v6_11360
  %v1_11368 = trunc i32 %v2_11364 to i8
  store i8 %v1_11368, i8* %v3_11360, align 1
  %v2_1136c = load i32, i32* %v1_1133c, align 4
  %v0_11370 = load i32, i32* @ip, align 4
  %v2_11370 = add i32 %v0_11370, %v2_1136c
  %v3_11370 = inttoptr i32 %v2_11370 to i8*
  %v4_11370 = load i8, i8* %v3_11370, align 1
  %v6_11370 = zext i8 %v4_11370 to i32
  %v0_11374 = load i32, i32* %r4.global-to-local, align 4
  %v2_11374 = xor i32 %v0_11374, %v6_11370
  store i32 %v2_11374, i32* @r3, align 4
  %v1_11378 = trunc i32 %v2_11374 to i8
  store i8 %v1_11378, i8* %v3_11370, align 1
  %v3_1137c = load i16, i16* %v2_11310, align 4
  %v4_1137c = zext i16 %v3_1137c to i32
  %v0_11380 = load i32, i32* @ip, align 4
  %v1_11380 = add i32 %v0_11380, 1
  store i32 %v1_11380, i32* @ip, align 4
  %v8_11388 = icmp sgt i32 %v4_1137c, %v1_11380
  br i1 %v8_11388, label %dec_label_pc_1133c.dec_label_pc_1133c_crit_edge, label %dec_label_pc_1138c.loopexit

dec_label_pc_1133c.dec_label_pc_1133c_crit_edge:  ; preds = %dec_label_pc_1133c
  %v0_11344.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_1133c

dec_label_pc_1138c.loopexit:                      ; preds = %dec_label_pc_1133c
  %v2_1138c.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_1138c

dec_label_pc_1138c:                               ; preds = %dec_label_pc_1138c.loopexit, %dec_label_pc_112fc
  %v2_1138c = phi i32 [ %v2_1138c.pre, %dec_label_pc_1138c.loopexit ], [ %v3_11320, %dec_label_pc_112fc ]
  store i32 %v2_1138c, i32* @r4, align 4
  ret i32 %v2_11308

; uselistorder directives
  uselistorder i32 %v1_11380, { 1, 2, 0 }
  uselistorder i32 %v1_11330, { 1, 0 }
  uselistorder i32 %v3_1131c, { 1, 0 }
  uselistorder i32 %v2_1130c, { 3, 0, 1, 2 }
  uselistorder i32 %v2_11308, { 1, 0 }
  uselistorder i32 %v3_11304, { 1, 0 }
}

define i32 @function_1139c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1139c:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_113a4 = mul i32 %arg1, 8
  %v2_113a8 = add i32 %v3_113a4, ptrtoint (i32* @global_var_1a300.216 to i32)
  %v2_113ac = load i32, i32* inttoptr (i32 98448 to i32*), align 16
  %v1_113b0 = add i32 %v3_113a4, add (i32 ptrtoint (i32* @global_var_1a300.216 to i32), i32 4)
  %v2_113b0 = inttoptr i32 %v1_113b0 to i16*
  %v3_113b0 = load i16, i16* %v2_113b0, align 4
  %v3_113b4 = udiv i32 %v2_113ac, 256
  %v2_113b8 = icmp eq i16 %v3_113b0, 0
  %v3_113bc = udiv i32 %v2_113ac, 65536
  %v3_113c0 = load i32, i32* @r4, align 4
  store i32 %v3_113c0, i32* %stack_var_-16, align 4
  %v1_113c4 = urem i32 %v3_113b4, 256
  store i32 %v1_113c4, i32* %r6.global-to-local, align 4
  %v1_113c8 = urem i32 %v3_113bc, 256
  store i32 %v1_113c8, i32* %r5.global-to-local, align 4
  %v3_113cc = udiv i32 %v2_113ac, 16777216
  store i32 %v3_113cc, i32* %r4.global-to-local, align 4
  %v1_113d0 = urem i32 %v2_113ac, 256
  store i32 %v1_113d0, i32* %lr.global-to-local, align 4
  br i1 %v2_113b8, label %dec_label_pc_1142c, label %dec_label_pc_113d8

dec_label_pc_113d8:                               ; preds = %dec_label_pc_1139c
  store i32 0, i32* @ip, align 4
  %v1_113dc = inttoptr i32 %v2_113a8 to i32*
  br label %dec_label_pc_113dc

dec_label_pc_113dc:                               ; preds = %dec_label_pc_113dc.dec_label_pc_113dc_crit_edge, %dec_label_pc_113d8
  %v0_113e4 = phi i32 [ %v0_113e4.pre, %dec_label_pc_113dc.dec_label_pc_113dc_crit_edge ], [ %v1_113d0, %dec_label_pc_113d8 ]
  %v2_113e8 = phi i32 [ %v1_11420, %dec_label_pc_113dc.dec_label_pc_113dc_crit_edge ], [ 0, %dec_label_pc_113d8 ]
  %v2_113dc = load i32, i32* %v1_113dc, align 4
  %v2_113e0 = add i32 %v2_113dc, %v2_113e8
  %v3_113e0 = inttoptr i32 %v2_113e0 to i8*
  %v4_113e0 = load i8, i8* %v3_113e0, align 1
  %v6_113e0 = zext i8 %v4_113e0 to i32
  %v2_113e4 = xor i32 %v6_113e0, %v0_113e4
  %v1_113e8 = trunc i32 %v2_113e4 to i8
  store i8 %v1_113e8, i8* %v3_113e0, align 1
  %v2_113ec = load i32, i32* %v1_113dc, align 4
  %v0_113f0 = load i32, i32* @ip, align 4
  %v2_113f0 = add i32 %v0_113f0, %v2_113ec
  %v3_113f0 = inttoptr i32 %v2_113f0 to i8*
  %v4_113f0 = load i8, i8* %v3_113f0, align 1
  %v6_113f0 = zext i8 %v4_113f0 to i32
  %v0_113f4 = load i32, i32* %r6.global-to-local, align 4
  %v2_113f4 = xor i32 %v0_113f4, %v6_113f0
  %v1_113f8 = trunc i32 %v2_113f4 to i8
  store i8 %v1_113f8, i8* %v3_113f0, align 1
  %v2_113fc = load i32, i32* %v1_113dc, align 4
  %v0_11400 = load i32, i32* @ip, align 4
  %v2_11400 = add i32 %v0_11400, %v2_113fc
  %v3_11400 = inttoptr i32 %v2_11400 to i8*
  %v4_11400 = load i8, i8* %v3_11400, align 1
  %v6_11400 = zext i8 %v4_11400 to i32
  %v0_11404 = load i32, i32* %r5.global-to-local, align 4
  %v2_11404 = xor i32 %v0_11404, %v6_11400
  %v1_11408 = trunc i32 %v2_11404 to i8
  store i8 %v1_11408, i8* %v3_11400, align 1
  %v2_1140c = load i32, i32* %v1_113dc, align 4
  %v0_11410 = load i32, i32* @ip, align 4
  %v2_11410 = add i32 %v0_11410, %v2_1140c
  %v3_11410 = inttoptr i32 %v2_11410 to i8*
  %v4_11410 = load i8, i8* %v3_11410, align 1
  %v6_11410 = zext i8 %v4_11410 to i32
  %v0_11414 = load i32, i32* %r4.global-to-local, align 4
  %v2_11414 = xor i32 %v0_11414, %v6_11410
  %v1_11418 = trunc i32 %v2_11414 to i8
  store i8 %v1_11418, i8* %v3_11410, align 1
  %v3_1141c = load i16, i16* %v2_113b0, align 4
  %v4_1141c = zext i16 %v3_1141c to i32
  %v0_11420 = load i32, i32* @ip, align 4
  %v1_11420 = add i32 %v0_11420, 1
  store i32 %v1_11420, i32* @ip, align 4
  %v8_11428 = icmp sgt i32 %v4_1141c, %v1_11420
  br i1 %v8_11428, label %dec_label_pc_113dc.dec_label_pc_113dc_crit_edge, label %dec_label_pc_1142c.loopexit

dec_label_pc_113dc.dec_label_pc_113dc_crit_edge:  ; preds = %dec_label_pc_113dc
  %v0_113e4.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_113dc

dec_label_pc_1142c.loopexit:                      ; preds = %dec_label_pc_113dc
  %v2_1142c.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_1142c

dec_label_pc_1142c:                               ; preds = %dec_label_pc_1142c.loopexit, %dec_label_pc_1139c
  %v2_1142c = phi i32 [ %v2_1142c.pre, %dec_label_pc_1142c.loopexit ], [ %v3_113c0, %dec_label_pc_1139c ]
  store i32 %v2_1142c, i32* @r4, align 4
  ret i32 %v2_113a8

; uselistorder directives
  uselistorder i32 %v1_11420, { 1, 2, 0 }
  uselistorder i32 %v1_113d0, { 1, 0 }
  uselistorder i32 %v2_113ac, { 3, 0, 1, 2 }
  uselistorder i32 %v2_113a8, { 1, 0 }
  uselistorder i32 %v3_113a4, { 1, 0 }
}

define i32 @function_1143c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1143c:
  %v9_1143c = load i32, i32* @r6, align 4
  %v12_1143c = load i32, i32* @r7, align 4
  %v15_1143c = load i32, i32* @r8, align 4
  %v21_1143c = load i32, i32* @sl, align 4
  %v24_1143c = load i32, i32* @fp, align 4
  store i32 2, i32* @r0, align 4
  %v0_11448 = call i32 @function_12dc4()
  store i32 2, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1a300.216 to i32), i32* @r4, align 4
  store i32 %v0_11448, i32* @r6, align 4
  %v4_11460 = call i32 @function_1194c(i32 %v0_11448, i32 ptrtoint ([3 x i8]* @global_var_177f8.223 to i32), i32 2)
  %v0_11464 = load i32, i32* @r5, align 4
  store i32 %v0_11464, i32* @r0, align 4
  %v0_11468 = load i32, i32* @r6, align 4
  store i32 %v0_11468, i32* @global_var_1a308.224, align 4
  %v1_1146c = trunc i32 %v0_11464 to i16
  store i16 %v1_1146c, i16* bitcast (i32* @global_var_1a30c.225 to i16*), align 4
  %v0_11470 = call i32 @function_12dc4()
  %v0_11474 = load i32, i32* @r5, align 4
  store i32 %v0_11470, i32* @r6, align 4
  %v3_11480 = call i32 @function_1194c(i32 %v0_11470, i32 ptrtoint (i32* @global_var_177fc.227 to i32), i32 %v0_11474)
  store i32 29, i32* @r0, align 4
  %v0_11488 = load i32, i32* @r6, align 4
  store i32 %v0_11488, i32* @global_var_1a310.228, align 4
  %v0_1148c = load i32, i32* @r5, align 4
  %v1_1148c = trunc i32 %v0_1148c to i16
  store i16 %v1_1148c, i16* bitcast (i32* @global_var_1a314.229 to i16*), align 4
  %v0_11490 = call i32 @function_12dc4()
  store i32 %v0_11490, i32* @r5, align 4
  %v3_114a0 = call i32 @function_1194c(i32 %v0_11490, i32 ptrtoint (i32* @global_var_17964.231 to i32), i32 29)
  store i32 6, i32* @r0, align 4
  store i16 29, i16* bitcast (i32* @global_var_1a31c.232 to i16*), align 4
  %v0_114b0 = load i32, i32* @r5, align 4
  store i32 %v0_114b0, i32* @global_var_1a318.233, align 4
  %v0_114b4 = call i32 @function_12dc4()
  store i32 6, i32* @sb, align 4
  store i32 %v0_114b4, i32* @r5, align 4
  %v4_114c8 = call i32 @function_1194c(i32 %v0_114b4, i32 ptrtoint ([7 x i8]* @global_var_17800.235 to i32), i32 6)
  store i32 7, i32* @r0, align 4
  store i32 7, i32* @r7, align 4
  %v0_114d4 = load i32, i32* @r5, align 4
  store i32 %v0_114d4, i32* @global_var_1a320.236, align 4
  %v0_114d8 = load i32, i32* @sb, align 4
  %v1_114d8 = trunc i32 %v0_114d8 to i16
  store i16 %v1_114d8, i16* bitcast (i32* @global_var_1a324.237 to i16*), align 4
  %v0_114dc = call i32 @function_12dc4()
  %v0_114e4 = load i32, i32* @r7, align 4
  store i32 %v0_114dc, i32* @r5, align 4
  %v4_114ec = call i32 @function_1194c(i32 %v0_114dc, i32 ptrtoint ([8 x i8]* @global_var_17808.239 to i32), i32 %v0_114e4)
  %v0_114f0 = load i32, i32* @r7, align 4
  store i32 %v0_114f0, i32* @r0, align 4
  %v0_114f4 = load i32, i32* @r5, align 4
  store i32 %v0_114f4, i32* @global_var_1a328.240, align 4
  %v1_114f8 = trunc i32 %v0_114f0 to i16
  store i16 %v1_114f8, i16* bitcast (i32* @global_var_1a32c.241 to i16*), align 4
  %v0_114fc = call i32 @function_12dc4()
  %v0_11504 = load i32, i32* @r7, align 4
  store i32 %v0_114fc, i32* @r5, align 4
  %v4_1150c = call i32 @function_1194c(i32 %v0_114fc, i32 ptrtoint ([8 x i8]* @global_var_17810.243 to i32), i32 %v0_11504)
  store i32 3, i32* @r0, align 4
  %v0_11514 = load i32, i32* @r5, align 4
  store i32 %v0_11514, i32* @global_var_1a330.244, align 4
  %v0_11518 = load i32, i32* @r7, align 4
  %v1_11518 = trunc i32 %v0_11518 to i16
  store i16 %v1_11518, i16* bitcast (i32* @global_var_1a334.245 to i16*), align 4
  %v0_1151c = call i32 @function_12dc4()
  store i32 %v0_1151c, i32* @r5, align 4
  %v4_1152c = call i32 @function_1194c(i32 %v0_1151c, i32 ptrtoint ([4 x i8]* @global_var_17818.247 to i32), i32 3)
  store i32 19, i32* @r0, align 4
  store i16 3, i16* bitcast (i32* @global_var_1a33c.248 to i16*), align 4
  %v0_1153c = load i32, i32* @r5, align 4
  store i32 %v0_1153c, i32* @global_var_1a338.249, align 4
  %v0_11540 = call i32 @function_12dc4()
  store i32 %v0_11540, i32* @r5, align 4
  %v3_11550 = call i32 @function_1194c(i32 %v0_11540, i32 ptrtoint (i32* @global_var_1781c.251 to i32), i32 19)
  store i32 24, i32* @r0, align 4
  store i16 19, i16* bitcast (i32* @global_var_1a344.252 to i16*), align 4
  %v0_11560 = load i32, i32* @r5, align 4
  store i32 %v0_11560, i32* @global_var_1a340.253, align 4
  %v0_11564 = call i32 @function_12dc4()
  store i32 %v0_11564, i32* @r5, align 4
  %v3_11574 = call i32 @function_1194c(i32 %v0_11564, i32 ptrtoint (i32* @global_var_17830.255 to i32), i32 24)
  store i32 9, i32* @r0, align 4
  store i16 24, i16* bitcast (i32* @global_var_1a34c.256 to i16*), align 4
  %v0_11584 = load i32, i32* @r5, align 4
  store i32 %v0_11584, i32* @global_var_1a348.257, align 4
  %v0_11588 = call i32 @function_12dc4()
  store i32 %v0_11588, i32* @r5, align 4
  %v4_11598 = call i32 @function_1194c(i32 %v0_11588, i32 ptrtoint ([10 x i8]* @global_var_1784c.259 to i32), i32 9)
  store i32 16, i32* @r0, align 4
  store i16 9, i16* bitcast (i32* @global_var_1a354.260 to i16*), align 4
  %v0_115a8 = load i32, i32* @r5, align 4
  store i32 %v0_115a8, i32* @global_var_1a350.261, align 4
  %v0_115ac = call i32 @function_12dc4()
  store i32 %v0_115ac, i32* @r5, align 4
  store i32 16, i32* @sl, align 4
  %v4_115c0 = call i32 @function_1194c(i32 %v0_115ac, i32 ptrtoint ([17 x i8]* @global_var_17858.263 to i32), i32 16)
  store i32 22, i32* @r0, align 4
  %v0_115c8 = load i32, i32* @r5, align 4
  store i32 %v0_115c8, i32* @global_var_1a358.264, align 4
  %v0_115cc = load i32, i32* @sl, align 4
  %v1_115cc = trunc i32 %v0_115cc to i16
  store i16 %v1_115cc, i16* bitcast (i32* @global_var_1a35c.265 to i16*), align 4
  %v0_115d0 = call i32 @function_12dc4()
  store i32 %v0_115d0, i32* @r5, align 4
  %v4_115e0 = call i32 @function_1194c(i32 %v0_115d0, i32 ptrtoint ([23 x i8]* @global_var_1786c.267 to i32), i32 22)
  %v0_115e8 = load i32, i32* @r7, align 4
  store i32 %v0_115e8, i32* @r0, align 4
  store i16 22, i16* bitcast (i32* @global_var_1a364.268 to i16*), align 4
  %v0_115f0 = load i32, i32* @r5, align 4
  store i32 %v0_115f0, i32* @global_var_1a360.269, align 4
  %v0_115f4 = call i32 @function_12dc4()
  %v0_115fc = load i32, i32* @r7, align 4
  store i32 %v0_115f4, i32* @r5, align 4
  %v4_11604 = call i32 @function_1194c(i32 %v0_115f4, i32 ptrtoint ([8 x i8]* @global_var_17884.271 to i32), i32 %v0_115fc)
  store i32 5, i32* @r0, align 4
  %v0_1160c = load i32, i32* @r5, align 4
  store i32 %v0_1160c, i32* @global_var_1a368.272, align 4
  %v0_11610 = load i32, i32* @r7, align 4
  %v1_11610 = trunc i32 %v0_11610 to i16
  store i16 %v1_11610, i16* bitcast (i32* @global_var_1a36c.273 to i16*), align 4
  %v0_11614 = call i32 @function_12dc4()
  store i32 %v0_11614, i32* @r5, align 4
  store i32 5, i32* @fp, align 4
  %v4_11628 = call i32 @function_1194c(i32 %v0_11614, i32 ptrtoint ([6 x i8]* @global_var_1788c.275 to i32), i32 5)
  store i32 4, i32* @r0, align 4
  %v0_11630 = load i32, i32* @r5, align 4
  store i32 %v0_11630, i32* @global_var_1a370.276, align 4
  %v0_11634 = load i32, i32* @fp, align 4
  %v1_11634 = trunc i32 %v0_11634 to i16
  store i16 %v1_11634, i16* bitcast (i32* @global_var_1a374.277 to i16*), align 4
  %v0_11638 = call i32 @function_12dc4()
  store i32 %v0_11638, i32* @r5, align 4
  %v4_11648 = call i32 @function_1194c(i32 %v0_11638, i32 ptrtoint ([5 x i8]* @global_var_17894.279 to i32), i32 4)
  %v0_11650 = load i32, i32* @sb, align 4
  store i32 %v0_11650, i32* @r0, align 4
  store i16 4, i16* bitcast (i32* @global_var_1a37c.280 to i16*), align 4
  %v0_11658 = load i32, i32* @r5, align 4
  store i32 %v0_11658, i32* @global_var_1a378.281, align 4
  %v0_1165c = call i32 @function_12dc4()
  %v0_11664 = load i32, i32* @sb, align 4
  store i32 %v0_1165c, i32* @r5, align 4
  %v4_1166c = call i32 @function_1194c(i32 %v0_1165c, i32 ptrtoint ([7 x i8]* @global_var_1789c.283 to i32), i32 %v0_11664)
  store i32 14, i32* @r0, align 4
  %v0_11674 = load i32, i32* @r5, align 4
  store i32 %v0_11674, i32* @global_var_1a380.284, align 4
  %v0_11678 = load i32, i32* @sb, align 4
  %v1_11678 = trunc i32 %v0_11678 to i16
  store i16 %v1_11678, i16* bitcast (i32* @global_var_1a384.285 to i16*), align 4
  %v0_1167c = call i32 @function_12dc4()
  store i32 %v0_1167c, i32* @r5, align 4
  store i32 14, i32* @r8, align 4
  %v4_11690 = call i32 @function_1194c(i32 %v0_1167c, i32 ptrtoint ([15 x i8]* @global_var_178a4.287 to i32), i32 14)
  store i32 8, i32* @r0, align 4
  %v0_11698 = load i32, i32* @r5, align 4
  store i32 %v0_11698, i32* @global_var_1a388.288, align 4
  %v0_1169c = load i32, i32* @r8, align 4
  %v1_1169c = trunc i32 %v0_1169c to i16
  store i16 %v1_1169c, i16* bitcast (i32* @global_var_1a38c.289 to i16*), align 4
  %v0_116a0 = call i32 @function_12dc4()
  store i32 8, i32* @r6, align 4
  store i32 %v0_116a0, i32* @r5, align 4
  %v4_116b4 = call i32 @function_1194c(i32 %v0_116a0, i32 ptrtoint ([9 x i8]* @global_var_178b4.291 to i32), i32 8)
  %v0_116b8 = load i32, i32* @r7, align 4
  store i32 %v0_116b8, i32* @r0, align 4
  %v0_116bc = load i32, i32* @r5, align 4
  store i32 %v0_116bc, i32* @global_var_1a3e8.292, align 4
  %v0_116c0 = load i32, i32* @r6, align 4
  %v1_116c0 = trunc i32 %v0_116c0 to i16
  store i16 %v1_116c0, i16* bitcast (i32* @global_var_1a3ec.293 to i16*), align 4
  %v0_116c4 = call i32 @function_12dc4()
  %v0_116cc = load i32, i32* @r7, align 4
  store i32 %v0_116c4, i32* @r5, align 4
  %v4_116d4 = call i32 @function_1194c(i32 %v0_116c4, i32 ptrtoint ([8 x i8]* @global_var_178c0.295 to i32), i32 %v0_116cc)
  %v0_116d8 = load i32, i32* @sl, align 4
  store i32 %v0_116d8, i32* @r0, align 4
  %v0_116dc = load i32, i32* @r5, align 4
  store i32 %v0_116dc, i32* @global_var_1a3f0.296, align 4
  %v0_116e0 = load i32, i32* @r7, align 4
  %v1_116e0 = trunc i32 %v0_116e0 to i16
  store i16 %v1_116e0, i16* bitcast (i32* @global_var_1a3f4.297 to i16*), align 4
  %v0_116e4 = call i32 @function_12dc4()
  %v0_116ec = load i32, i32* @sl, align 4
  store i32 %v0_116e4, i32* @r5, align 4
  %v4_116f4 = call i32 @function_1194c(i32 %v0_116e4, i32 ptrtoint ([17 x i8]* @global_var_178c8.299 to i32), i32 %v0_116ec)
  %v0_116f8 = load i32, i32* @r6, align 4
  store i32 %v0_116f8, i32* @r0, align 4
  %v0_116fc = load i32, i32* @r5, align 4
  store i32 %v0_116fc, i32* @global_var_1a390.300, align 4
  %v0_11700 = load i32, i32* @sl, align 4
  %v1_11700 = trunc i32 %v0_11700 to i16
  store i16 %v1_11700, i16* bitcast (i32* @global_var_1a394.301 to i16*), align 4
  %v0_11704 = call i32 @function_12dc4()
  %v0_1170c = load i32, i32* @r6, align 4
  store i32 %v0_11704, i32* @r5, align 4
  %v4_11714 = call i32 @function_1194c(i32 %v0_11704, i32 ptrtoint ([9 x i8]* @global_var_178dc.303 to i32), i32 %v0_1170c)
  store i32 21, i32* @r0, align 4
  %v0_1171c = load i32, i32* @r5, align 4
  store i32 %v0_1171c, i32* @global_var_1a398.304, align 4
  %v0_11720 = load i32, i32* @r6, align 4
  %v1_11720 = trunc i32 %v0_11720 to i16
  store i16 %v1_11720, i16* bitcast (i32* @global_var_1a39c.305 to i16*), align 4
  %v0_11724 = call i32 @function_12dc4()
  store i32 %v0_11724, i32* @r5, align 4
  %v3_11734 = call i32 @function_1194c(i32 %v0_11724, i32 ptrtoint (i32* @global_var_17984.307 to i32), i32 21)
  store i32 17, i32* @r0, align 4
  store i16 21, i16* bitcast (i32* @global_var_1a3a4.308 to i16*), align 4
  %v0_11744 = load i32, i32* @r5, align 4
  store i32 %v0_11744, i32* @global_var_1a3a0.309, align 4
  %v0_11748 = call i32 @function_12dc4()
  store i32 %v0_11748, i32* @r5, align 4
  %v4_11758 = call i32 @function_1194c(i32 %v0_11748, i32 ptrtoint ([18 x i8]* @global_var_178e8.311 to i32), i32 17)
  store i32 12, i32* @r0, align 4
  store i16 17, i16* bitcast (i32* @global_var_1a3ac.312 to i16*), align 4
  %v0_11768 = load i32, i32* @r5, align 4
  store i32 %v0_11768, i32* @global_var_1a3a8.313, align 4
  %v0_1176c = call i32 @function_12dc4()
  store i32 %v0_1176c, i32* @r5, align 4
  %v4_1177c = call i32 @function_1194c(i32 %v0_1176c, i32 ptrtoint ([13 x i8]* @global_var_178fc.315 to i32), i32 12)
  %v0_11784 = load i32, i32* @r8, align 4
  store i32 %v0_11784, i32* @r0, align 4
  store i16 12, i16* bitcast (i32* @global_var_1a3b4.316 to i16*), align 4
  %v0_1178c = load i32, i32* @r5, align 4
  store i32 %v0_1178c, i32* @global_var_1a3b0.317, align 4
  %v0_11790 = call i32 @function_12dc4()
  %v0_11798 = load i32, i32* @r8, align 4
  store i32 %v0_11790, i32* @r5, align 4
  %v4_117a0 = call i32 @function_1194c(i32 %v0_11790, i32 ptrtoint ([15 x i8]* @global_var_1790c.319 to i32), i32 %v0_11798)
  store i32 19, i32* @r0, align 4
  %v0_117a8 = load i32, i32* @r5, align 4
  store i32 %v0_117a8, i32* @global_var_1a3b8.320, align 4
  %v0_117ac = load i32, i32* @r8, align 4
  %v1_117ac = trunc i32 %v0_117ac to i16
  store i16 %v1_117ac, i16* bitcast (i32* @global_var_1a3bc.321 to i16*), align 4
  %v0_117b0 = call i32 @function_12dc4()
  store i32 %v0_117b0, i32* @r5, align 4
  %v4_117c0 = call i32 @function_1194c(i32 %v0_117b0, i32 ptrtoint ([20 x i8]* @global_var_1791c.323 to i32), i32 19)
  %v0_117c8 = load i32, i32* @r6, align 4
  store i32 %v0_117c8, i32* @r0, align 4
  store i16 19, i16* bitcast (i32* @global_var_1a3c4.324 to i16*), align 4
  %v0_117d0 = load i32, i32* @r5, align 4
  store i32 %v0_117d0, i32* @global_var_1a3c0.325, align 4
  %v0_117d4 = call i32 @function_12dc4()
  %v0_117dc = load i32, i32* @r6, align 4
  store i32 %v0_117d4, i32* @r5, align 4
  %v4_117e4 = call i32 @function_1194c(i32 %v0_117d4, i32 ptrtoint ([9 x i8]* @global_var_17930.327 to i32), i32 %v0_117dc)
  %v0_117e8 = load i32, i32* @fp, align 4
  store i32 %v0_117e8, i32* @r0, align 4
  %v0_117ec = load i32, i32* @r5, align 4
  store i32 %v0_117ec, i32* @global_var_1a3c8.328, align 4
  %v0_117f0 = load i32, i32* @r6, align 4
  %v1_117f0 = trunc i32 %v0_117f0 to i16
  store i16 %v1_117f0, i16* bitcast (i32* @global_var_1a3cc.329 to i16*), align 4
  %v0_117f4 = call i32 @function_12dc4()
  %v0_117fc = load i32, i32* @fp, align 4
  store i32 %v0_117f4, i32* @r5, align 4
  %v4_11804 = call i32 @function_1194c(i32 %v0_117f4, i32 ptrtoint ([6 x i8]* @global_var_1793c.331 to i32), i32 %v0_117fc)
  %v0_11808 = load i32, i32* @sb, align 4
  store i32 %v0_11808, i32* @r0, align 4
  %v0_1180c = load i32, i32* @r5, align 4
  store i32 %v0_1180c, i32* @global_var_1a3d0.332, align 4
  %v0_11810 = load i32, i32* @fp, align 4
  %v1_11810 = trunc i32 %v0_11810 to i16
  store i16 %v1_11810, i16* bitcast (i32* @global_var_1a3d4.333 to i16*), align 4
  %v0_11814 = call i32 @function_12dc4()
  %v0_1181c = load i32, i32* @sb, align 4
  store i32 %v0_11814, i32* @r5, align 4
  %v4_11824 = call i32 @function_1194c(i32 %v0_11814, i32 ptrtoint ([7 x i8]* @global_var_17944.335 to i32), i32 %v0_1181c)
  store i32 23, i32* @r0, align 4
  %v0_1182c = load i32, i32* @r5, align 4
  store i32 %v0_1182c, i32* @global_var_1a3d8.336, align 4
  %v0_11830 = load i32, i32* @sb, align 4
  %v1_11830 = trunc i32 %v0_11830 to i16
  store i16 %v1_11830, i16* bitcast (i32* @global_var_1a3dc.337 to i16*), align 4
  %v0_11834 = call i32 @function_12dc4()
  %v4_11844 = call i32 @function_1194c(i32 %v0_11834, i32 ptrtoint ([24 x i8]* @global_var_1794c.339 to i32), i32 23)
  store i32 %v0_11834, i32* @global_var_1a3e0.340, align 4
  store i16 23, i16* bitcast (i32* @global_var_1a3e4.341 to i16*), align 4
  store i32 %v9_1143c, i32* @r6, align 4
  store i32 %v12_1143c, i32* @r7, align 4
  store i32 %v15_1143c, i32* @r8, align 4
  store i32 %v21_1143c, i32* @sl, align 4
  store i32 %v24_1143c, i32* @fp, align 4
  ret i32 %v4_11844

; uselistorder directives
  uselistorder i32 %v0_11814, { 1, 0 }
  uselistorder i32 %v0_117f4, { 1, 0 }
  uselistorder i32 %v0_117d4, { 1, 0 }
  uselistorder i32 %v0_11790, { 1, 0 }
  uselistorder i32 %v0_11704, { 1, 0 }
  uselistorder i32 %v0_116e4, { 1, 0 }
  uselistorder i32 %v0_116c4, { 1, 0 }
  uselistorder i32 %v0_116a0, { 1, 0 }
  uselistorder i32 %v0_1165c, { 1, 0 }
  uselistorder i32 %v0_115f4, { 1, 0 }
  uselistorder i32 %v0_114fc, { 1, 0 }
  uselistorder i32 %v0_114dc, { 1, 0 }
  uselistorder i32 %v0_114b4, { 1, 0 }
  uselistorder i32 %v0_11470, { 1, 0 }
  uselistorder i32 %v0_11448, { 1, 0 }
  uselistorder i32 23, { 0, 4, 5, 6, 1, 2, 3 }
  uselistorder i32 21, { 0, 6, 5, 7, 4, 8, 1, 9, 2, 10, 3, 11 }
  uselistorder i32 29, { 0, 6, 3, 4, 5, 2, 7, 1 }
  uselistorder i32 (i32, i32, i32)* @function_1194c, { 9, 8, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 6, 5, 4, 3, 2, 1, 0, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_1a300.216 to i32), { 4, 0, 1, 2, 3, 5 }
}

define i32 @function_118dc(i8* %arg1) local_unnamed_addr {
dec_label_pc_118dc:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_118e0 = load i8, i8* %arg1, align 1
  %v2_118e4 = icmp eq i8 %v3_118e0, 0
  %v0_118e8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_118e4, i32 %v0_118e8)
  br label %dec_label_pc_118f0

dec_label_pc_118f0:                               ; preds = %dec_label_pc_118f0, %dec_label_pc_118dc
  %v0_118f0 = phi i32 [ %v1_118f0, %dec_label_pc_118f0 ], [ 0, %dec_label_pc_118dc ]
  %v1_118f0 = add i32 %v0_118f0, 1
  %v2_118f4 = add i32 %v1_118f0, %tmp
  %v3_118f4 = inttoptr i32 %v2_118f4 to i8*
  %v4_118f4 = load i8, i8* %v3_118f4, align 1
  %v2_118f8 = icmp eq i8 %v4_118f4, 0
  br i1 %v2_118f8, label %dec_label_pc_11900, label %dec_label_pc_118f0

dec_label_pc_11900:                               ; preds = %dec_label_pc_118f0
  ret i32 %v1_118f0
}

define i32 @function_11904(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11904:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_11904 = load i8, i8* %arg1, align 1
  %v3_11904 = zext i8 %v2_11904 to i32
  store i32 %v3_11904, i32* @r2, align 4
  %v2_11908 = icmp eq i8 %v2_11904, 0
  br i1 %v2_11908, label %bb, label %dec_label_pc_11914

bb:                                               ; preds = %dec_label_pc_11904
  store i32 %v3_11904, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11928

dec_label_pc_11914:                               ; preds = %dec_label_pc_11904
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11918

dec_label_pc_11918:                               ; preds = %dec_label_pc_11918, %dec_label_pc_11914
  %v0_11918 = phi i32 [ %v1_11918, %dec_label_pc_11918 ], [ 0, %dec_label_pc_11914 ]
  %v1_11918 = add i32 %v0_11918, 1
  store i32 %v1_11918, i32* %ip.global-to-local, align 4
  %v2_1191c = add i32 %v1_11918, %tmp
  %v3_1191c = inttoptr i32 %v2_1191c to i8*
  %v4_1191c = load i8, i8* %v3_1191c, align 1
  %v2_11920 = icmp eq i8 %v4_1191c, 0
  br i1 %v2_11920, label %dec_label_pc_11928, label %dec_label_pc_11918

dec_label_pc_11928:                               ; preds = %dec_label_pc_11918, %bb
  %v0_11928 = phi i32 [ %v3_11904, %bb ], [ %v1_11918, %dec_label_pc_11918 ]
  br label %dec_label_pc_11934

dec_label_pc_11930:                               ; preds = %dec_label_pc_11934
  %v0_11930 = load i32, i32* %r1.global-to-local, align 4
  %v1_11930 = add i32 %v0_11930, 1
  %v2_11930 = inttoptr i32 %v1_11930 to i8*
  %v3_11930 = load i8, i8* %v2_11930, align 1
  %v4_11930 = zext i8 %v3_11930 to i32
  store i32 %v4_11930, i32* @r2, align 4
  store i32 %v1_11930, i32* %r1.global-to-local, align 4
  %v0_11934.pr = load i32, i32* @r3, align 4
  br label %dec_label_pc_11934

dec_label_pc_11934:                               ; preds = %dec_label_pc_11928, %dec_label_pc_11930
  %v0_1193c.off0 = phi i8 [ %v2_11904, %dec_label_pc_11928 ], [ %v3_11930, %dec_label_pc_11930 ]
  %v0_11934 = phi i32 [ %v0_11928, %dec_label_pc_11928 ], [ %v0_11934.pr, %dec_label_pc_11930 ]
  %v1_11934 = add i32 %v0_11934, -1
  store i32 %v1_11934, i32* @r3, align 4
  %v3_11938 = icmp eq i32 %v0_11934, 0
  %v2_1193c = load i32, i32* @r0, align 4
  %v3_1193c = inttoptr i32 %v2_1193c to i8*
  store i8 %v0_1193c.off0, i8* %v3_1193c, align 1
  %v4_1193c = load i32, i32* @r0, align 4
  %v5_1193c = add i32 %v4_1193c, 1
  store i32 %v5_1193c, i32* @r0, align 4
  br i1 %v3_11938, label %dec_label_pc_11944, label %dec_label_pc_11930

dec_label_pc_11944:                               ; preds = %dec_label_pc_11934
  %v0_11944 = load i32, i32* %ip.global-to-local, align 4
  ret i32 %v0_11944

; uselistorder directives
  uselistorder i32 %v0_11934, { 1, 0 }
  uselistorder i32 %v1_11918, { 0, 1, 3, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 1, 0 }
  uselistorder i32* %ip.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_11934, { 1, 0 }
}

define i32 @function_1194c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1194c:
  %v2_1194c = icmp eq i32 %arg3, 0
  %v0_11950 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1194c, i32 %v0_11950)
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_11958

dec_label_pc_11958:                               ; preds = %dec_label_pc_11958, %dec_label_pc_1194c
  %v0_11958 = phi i32 [ %v1_11960, %dec_label_pc_11958 ], [ 0, %dec_label_pc_1194c ]
  %v2_11958 = add i32 %v0_11958, %arg2
  %v3_11958 = inttoptr i32 %v2_11958 to i8*
  %v4_11958 = load i8, i8* %v3_11958, align 1
  %v4_1195c = add i32 %v0_11958, %arg1
  %v5_1195c = inttoptr i32 %v4_1195c to i8*
  store i8 %v4_11958, i8* %v5_1195c, align 1
  %v0_11960 = load i32, i32* @ip, align 4
  %v1_11960 = add i32 %v0_11960, 1
  store i32 %v1_11960, i32* @ip, align 4
  %v9_11964 = icmp eq i32 %v1_11960, %arg3
  br i1 %v9_11964, label %dec_label_pc_1196c, label %dec_label_pc_11958

dec_label_pc_1196c:                               ; preds = %dec_label_pc_11958
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_11960, { 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_11970() local_unnamed_addr {
dec_label_pc_11970:
  %r2.global-to-local = alloca i32, align 4
  %v0_11970 = load i32, i32* @r1, align 4
  %v2_11970 = icmp eq i32 %v0_11970, 0
  %v0_11974 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_11970, i32 %v0_11974)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1197c

dec_label_pc_1197c:                               ; preds = %dec_label_pc_1197c, %dec_label_pc_11970
  %v2_11980 = phi i32 [ %v1_11984, %dec_label_pc_1197c ], [ 0, %dec_label_pc_11970 ]
  store i32 0, i32* @r3, align 4
  %v3_11980 = load i32, i32* @r0, align 4
  %v4_11980 = add i32 %v3_11980, %v2_11980
  %v5_11980 = inttoptr i32 %v4_11980 to i8*
  store i8 0, i8* %v5_11980, align 1
  %v0_11984 = load i32, i32* %r2.global-to-local, align 4
  %v1_11984 = add i32 %v0_11984, 1
  store i32 %v1_11984, i32* %r2.global-to-local, align 4
  %v1_11988 = load i32, i32* @r1, align 4
  %v9_11988 = icmp eq i32 %v1_11984, %v1_11988
  br i1 %v9_11988, label %dec_label_pc_11990, label %dec_label_pc_1197c

dec_label_pc_11990:                               ; preds = %dec_label_pc_1197c
  %v1_11990 = load i32, i32* @r0, align 4
  ret i32 %v1_11990

; uselistorder directives
  uselistorder i32 %v1_11984, { 1, 2, 0 }
}

define i32 @function_11994(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_11994:
  %v7_119a8 = icmp sgt i32 %arg4, %arg2
  br i1 %v7_119a8, label %dec_label_pc_119b0, label %dec_label_pc_119b8

dec_label_pc_119b0:                               ; preds = %dec_label_pc_119cc, %dec_label_pc_119b8, %dec_label_pc_11994, %dec_label_pc_119f8
  %storemerge = phi i32 [ %v1_119f8, %dec_label_pc_119f8 ], [ -1, %dec_label_pc_11994 ], [ -1, %dec_label_pc_119b8 ], [ -1, %dec_label_pc_119cc ]
  ret i32 %storemerge

dec_label_pc_119b8:                               ; preds = %dec_label_pc_11994
  %tmp12 = icmp slt i32 %arg2, 1
  br i1 %tmp12, label %dec_label_pc_119b0, label %dec_label_pc_119c0

dec_label_pc_119c0:                               ; preds = %dec_label_pc_119b8
  br label %dec_label_pc_119d8

dec_label_pc_119cc:                               ; preds = %bb, %dec_label_pc_119ec
  %v1_119d83 = phi i32 [ %v1_119ec, %dec_label_pc_119ec ], [ 0, %bb ]
  %v1_119cc = add i32 %v0_119f8, 1
  %v9_119d0 = icmp eq i32 %v1_119cc, %arg2
  br i1 %v9_119d0, label %dec_label_pc_119b0, label %dec_label_pc_119d8

dec_label_pc_119d8:                               ; preds = %dec_label_pc_119cc, %dec_label_pc_119c0
  %v0_119f8 = phi i32 [ %v1_119cc, %dec_label_pc_119cc ], [ 0, %dec_label_pc_119c0 ]
  %v1_119d8 = phi i32 [ %v1_119d83, %dec_label_pc_119cc ], [ 0, %dec_label_pc_119c0 ]
  %v2_119d8 = add i32 %v1_119d8, %arg3
  %v3_119d8 = inttoptr i32 %v2_119d8 to i8*
  %v4_119d8 = load i8, i8* %v3_119d8, align 1
  %v2_119dc = add i32 %v0_119f8, %arg1
  %v3_119dc = inttoptr i32 %v2_119dc to i8*
  %v4_119dc = load i8, i8* %v3_119dc, align 1
  %v9_119e0 = icmp eq i8 %v4_119dc, %v4_119d8
  br i1 %v9_119e0, label %dec_label_pc_119ec, label %bb

bb:                                               ; preds = %dec_label_pc_119d8
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_119cc

dec_label_pc_119ec:                               ; preds = %dec_label_pc_119d8
  %v1_119ec = add i32 %v1_119d8, 1
  store i32 %v1_119ec, i32* @ip, align 4
  %v9_119f0 = icmp eq i32 %v1_119ec, %arg4
  br i1 %v9_119f0, label %dec_label_pc_119f8, label %dec_label_pc_119cc

dec_label_pc_119f8:                               ; preds = %dec_label_pc_119ec
  %v1_119f8 = add i32 %v0_119f8, 1
  br label %dec_label_pc_119b0

; uselistorder directives
  uselistorder i32 %v1_119ec, { 1, 2, 0 }
  uselistorder i32 %v1_119d8, { 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_119cc, { 1, 0 }
  uselistorder label %dec_label_pc_119b0, { 3, 0, 1, 2 }
}

define i32 @function_11a00(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11a00:
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_11a00 = load i32, i32* @r4, align 4
  %v12_11a00 = load i32, i32* @r7, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11a10

dec_label_pc_11a10:                               ; preds = %.thread, %dec_label_pc_11a24, %bb, %dec_label_pc_11a00
  %v0_11a10 = phi i32 [ %tmp, %dec_label_pc_11a00 ], [ %v5_11a10, %bb ], [ %v5_11a10, %dec_label_pc_11a24 ], [ %v5_11a10, %.thread ]
  %v1_11a10 = inttoptr i32 %v0_11a10 to i8*
  %v2_11a10 = load i8, i8* %v1_11a10, align 1
  %v5_11a10 = add i32 %v0_11a10, 1
  store i32 %v5_11a10, i32* %r5.global-to-local, align 4
  %v7_11a14 = icmp eq i8 %v2_11a10, 9
  br i1 %v7_11a14, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_11a10
  br label %dec_label_pc_11a10

bb:                                               ; preds = %dec_label_pc_11a10
  %v3_11a10 = zext i8 %v2_11a10 to i32
  %v8_11a18 = icmp eq i8 %v2_11a10, 32
  store i32 %v3_11a10, i32* @r4, align 4
  br i1 %v8_11a18, label %dec_label_pc_11a10, label %dec_label_pc_11a24

dec_label_pc_11a24:                               ; preds = %bb
  %v7_11a24 = icmp eq i8 %v2_11a10, 10
  br i1 %v7_11a24, label %dec_label_pc_11a10, label %dec_label_pc_11a2c

dec_label_pc_11a2c:                               ; preds = %dec_label_pc_11a24
  %v7_11a2c = icmp eq i8 %v2_11a10, 45
  br i1 %v7_11a2c, label %dec_label_pc_11b1c, label %dec_label_pc_11a34

dec_label_pc_11a34:                               ; preds = %dec_label_pc_11a2c
  %v7_11a34 = icmp eq i8 %v2_11a10, 43
  br i1 %v7_11a34, label %bb44, label %dec_label_pc_11a44

bb44:                                             ; preds = %dec_label_pc_11a34
  %v2_11a38 = inttoptr i32 %v5_11a10 to i8*
  %v3_11a38 = load i8, i8* %v2_11a38, align 1
  %v4_11a38 = zext i8 %v3_11a38 to i32
  store i32 %v4_11a38, i32* @r4, align 4
  %v6_11a38 = add i32 %v0_11a10, 2
  store i32 %v6_11a38, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_11a44

dec_label_pc_11a44:                               ; preds = %bb44, %dec_label_pc_11a34, %dec_label_pc_11b1c
  %storemerge1 = phi i32 [ -2147483648, %dec_label_pc_11b1c ], [ 2147483647, %dec_label_pc_11a34 ], [ 2147483647, %bb44 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_11b1c ], [ 0, %dec_label_pc_11a34 ], [ 0, %bb44 ]
  store i32 %storemerge1, i32* @r7, align 4
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  %v2_11a4c = call i32 @function_11f34(i32 %storemerge1, i32 %arg2)
  %v0_11a50 = load i32, i32* @r7, align 4
  store i32 %v0_11a50, i32* @r0, align 4
  store i32 %arg2, i32* %r8.global-to-local, align 4
  %v0_11a58 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_11a58, i32* @r1, align 4
  %v0_11a5c = call i32 @function_11e38()
  %v0_11a6c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_11a6c.outer

dec_label_pc_11a6c.outer:                         ; preds = %.thread5, %dec_label_pc_11a44
  %v2_11ae8.ph = phi i32 [ %v5_11ae8, %.thread5 ], [ 0, %dec_label_pc_11a44 ]
  %v1_11aac.ph = phi i32 [ %v4_11aec, %.thread5 ], [ %v0_11a6c.pre, %dec_label_pc_11a44 ]
  %v1_11ac4.ph = phi i32 [ 1, %.thread5 ], [ 0, %dec_label_pc_11a44 ]
  %v3_11ab8 = icmp uge i32 %v2_11ae8.ph, %v0_11a5c
  %v9_11ab8 = icmp eq i32 %v2_11ae8.ph, %v0_11a5c
  %v2_11abc = xor i1 %v3_11ab8, true
  %v3_11abc = or i1 %v9_11ab8, %v2_11abc
  %v2_11ac0 = xor i1 %v9_11ab8, true
  %v3_11ac0 = and i1 %v3_11ab8, %v2_11ac0
  %v2_11ae0 = icmp eq i1 %v9_11ab8, false
  br label %dec_label_pc_11a6c

dec_label_pc_11a6c:                               ; preds = %dec_label_pc_11a6c.outer, %dec_label_pc_11af4
  %v1_11ac4 = phi i32 [ -1, %dec_label_pc_11af4 ], [ %v1_11ac4.ph, %dec_label_pc_11a6c.outer ]
  %v1_11aac = phi i32 [ %v3_11af4, %dec_label_pc_11af4 ], [ %v1_11aac.ph, %dec_label_pc_11a6c.outer ]
  %v1_11a6c = urem i32 %v1_11aac, 256
  %v1_11a70 = add nsw i32 %v1_11a6c, -48
  %v1_11a78 = add nsw i32 %v1_11a6c, -97
  %v1_11a7c = add i32 %v1_11aac, -48
  %v1_11a80 = add nsw i32 %v1_11a6c, -65
  %tmp75 = icmp ult i32 %v1_11a70, 10
  br i1 %tmp75, label %dec_label_pc_11ab0, label %dec_label_pc_11a88

dec_label_pc_11a88:                               ; preds = %dec_label_pc_11a6c
  %v2_11a88 = icmp ugt i32 %v1_11a80, 24
  %v7_11a88 = icmp eq i32 %v1_11a80, 25
  %v2_11a8c = xor i1 %v7_11a88, true
  %v3_11a8c = and i1 %v2_11a88, %v2_11a8c
  br i1 %v3_11a8c, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_11a88
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_11a88, %bb45
  %v0_11aa014 = phi i32 [ %v1_11a7c, %dec_label_pc_11a88 ], [ 0, %bb45 ]
  %v2_11a90 = xor i1 %v2_11a88, true
  %v3_11a90 = or i1 %v7_11a88, %v2_11a90
  br i1 %v3_11a90, label %bb47, label %bb48

bb47:                                             ; preds = %bb46
  br label %bb48

bb48:                                             ; preds = %bb46, %bb47
  %v0_11aa0 = phi i32 [ %v0_11aa014, %bb46 ], [ 1, %bb47 ]
  br i1 %v3_11a8c, label %bb49, label %bb50

bb49:                                             ; preds = %bb48
  %v6_11a98 = icmp ugt i32 %v1_11a78, 24
  %v11_11a98 = icmp eq i32 %v1_11a78, 25
  br label %bb50

bb50:                                             ; preds = %bb48, %bb49
  %v1_11a9c = phi i1 [ %v7_11a88, %bb48 ], [ %v11_11a98, %bb49 ]
  %v0_11a9c = phi i1 [ %v2_11a88, %bb48 ], [ %v6_11a98, %bb49 ]
  %v2_11a9c = xor i1 %v1_11a9c, true
  %v3_11a9c = and i1 %v0_11a9c, %v2_11a9c
  br i1 %v3_11a9c, label %dec_label_pc_11b00, label %dec_label_pc_11aa0

dec_label_pc_11aa0:                               ; preds = %bb50
  %v2_11aa0 = icmp eq i32 %v0_11aa0, 0
  %. = select i1 %v2_11aa0, i32 87, i32 55
  %v2_11aac = sub i32 %v1_11aac, %.
  br label %dec_label_pc_11ab0

dec_label_pc_11ab0:                               ; preds = %dec_label_pc_11a6c, %dec_label_pc_11aa0
  %v0_11ac429 = phi i32 [ %v1_11a80, %dec_label_pc_11a6c ], [ %., %dec_label_pc_11aa0 ]
  %v3_11ae8 = phi i32 [ %v1_11a7c, %dec_label_pc_11a6c ], [ %v2_11aac, %dec_label_pc_11aa0 ]
  %v1_11ab0 = load i32, i32* %r6.global-to-local, align 4
  %v2_11ab0 = sub i32 %v3_11ae8, %v1_11ab0
  %v4_11ab0 = xor i32 %v1_11ab0, %v3_11ae8
  %v5_11ab0 = xor i32 %v2_11ab0, %v3_11ae8
  %v6_11ab0 = and i32 %v5_11ab0, %v4_11ab0
  %v7_11ab0 = icmp slt i32 %v6_11ab0, 0
  %v8_11ab0 = icmp slt i32 %v2_11ab0, 0
  %v2_11ab4 = xor i1 %v8_11ab0, %v7_11ab0
  br i1 %v2_11ab4, label %dec_label_pc_11ab8, label %dec_label_pc_11b00

dec_label_pc_11ab8:                               ; preds = %dec_label_pc_11ab0
  br i1 %v3_11abc, label %bb53, label %bb54

bb53:                                             ; preds = %dec_label_pc_11ab8
  br label %bb54

bb54:                                             ; preds = %dec_label_pc_11ab8, %bb53
  %v0_11ac428 = phi i32 [ %v0_11ac429, %dec_label_pc_11ab8 ], [ 0, %bb53 ]
  br i1 %v3_11ac0, label %bb55, label %bb56

bb55:                                             ; preds = %bb54
  br label %bb56

bb56:                                             ; preds = %bb54, %bb55
  %v0_11ac4 = phi i32 [ %v0_11ac428, %bb54 ], [ 1, %bb55 ]
  %tmp76 = icmp slt i32 %v1_11ac4, 0
  %v4_11ac4 = zext i1 %tmp76 to i32
  %v5_11ac4 = or i32 %v0_11ac4, %v4_11ac4
  %v7_11ac4 = icmp eq i32 %v5_11ac4, 0
  br i1 %v7_11ac4, label %dec_label_pc_11acc, label %dec_label_pc_11af4

dec_label_pc_11acc:                               ; preds = %bb56
  %v1_11ad8 = load i32, i32* %r8.global-to-local, align 4
  %v2_11ad8 = sub i32 %v3_11ae8, %v1_11ad8
  %v4_11ad8 = xor i32 %v1_11ad8, %v3_11ae8
  %v5_11ad8 = xor i32 %v2_11ad8, %v3_11ae8
  %v6_11ad8 = and i32 %v5_11ad8, %v4_11ad8
  %v7_11ad8 = icmp slt i32 %v6_11ad8, 0
  %v8_11ad8 = icmp slt i32 %v2_11ad8, 0
  %v9_11ad8 = icmp eq i32 %v3_11ae8, %v1_11ad8
  %v3_11adc = xor i1 %v8_11ad8, %v7_11ad8
  %v4_11adc = or i1 %v9_11ad8, %v3_11adc
  br i1 %v4_11adc, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %dec_label_pc_11acc
  br label %.thread5

thread-pre-split:                                 ; preds = %dec_label_pc_11acc
  br i1 %v2_11ae0, label %.thread5, label %dec_label_pc_11af4

.thread5:                                         ; preds = %thread-pre-split, %thread-pre-split.thread
  %v4_11ae8 = mul i32 %v1_11ab0, %v2_11ae8.ph
  %v5_11ae8 = add i32 %v4_11ae8, %v3_11ae8
  %v1_11aec = load i32, i32* %r5.global-to-local, align 4
  %v2_11aec = inttoptr i32 %v1_11aec to i8*
  %v3_11aec = load i8, i8* %v2_11aec, align 1
  %v4_11aec = zext i8 %v3_11aec to i32
  %v6_11aec = add i32 %v1_11aec, 1
  store i32 %v6_11aec, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_11a6c.outer

dec_label_pc_11af4:                               ; preds = %thread-pre-split, %bb56
  %v0_11af4 = load i32, i32* %r5.global-to-local, align 4
  %v1_11af4 = inttoptr i32 %v0_11af4 to i8*
  %v2_11af4 = load i8, i8* %v1_11af4, align 1
  %v3_11af4 = zext i8 %v2_11af4 to i32
  %v5_11af4 = add i32 %v0_11af4, 1
  store i32 %v5_11af4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_11a6c

dec_label_pc_11b00:                               ; preds = %dec_label_pc_11ab0, %bb50
  %v1_11b00 = icmp slt i32 %v1_11ac4, 0
  %v0_11b2c = load i32, i32* %sl.global-to-local, align 4
  %v2_11b2c = icmp eq i32 %v0_11b2c, 0
  br i1 %v1_11b00, label %dec_label_pc_11b2c, label %dec_label_pc_11b08

dec_label_pc_11b08:                               ; preds = %dec_label_pc_11b00
  br i1 %v2_11b2c, label %bb60, label %bb59

bb59:                                             ; preds = %dec_label_pc_11b08
  %v2_11b0c = sub i32 0, %v2_11ae8.ph
  br label %bb60

bb60:                                             ; preds = %.thread32, %bb61, %dec_label_pc_11b08, %bb59
  %v1_11b18 = phi i32 [ -2147483648, %bb61 ], [ %v2_11ae8.ph, %dec_label_pc_11b08 ], [ %v2_11b0c, %bb59 ], [ 2147483647, %.thread32 ]
  store i32 %v3_11a00, i32* @r4, align 4
  store i32 %v12_11a00, i32* @r7, align 4
  ret i32 %v1_11b18

dec_label_pc_11b1c:                               ; preds = %dec_label_pc_11a2c
  %v1_11b1c = inttoptr i32 %v5_11a10 to i8*
  %v2_11b1c = load i8, i8* %v1_11b1c, align 1
  %v3_11b1c = zext i8 %v2_11b1c to i32
  store i32 %v3_11b1c, i32* @r4, align 4
  %v5_11b1c = add i32 %v0_11a10, 2
  store i32 %v5_11b1c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_11a44

dec_label_pc_11b2c:                               ; preds = %dec_label_pc_11b00
  br i1 %v2_11b2c, label %.thread32, label %bb61

.thread32:                                        ; preds = %dec_label_pc_11b2c
  br label %bb60

bb61:                                             ; preds = %dec_label_pc_11b2c
  br label %bb60

; uselistorder directives
  uselistorder i1 %v2_11b2c, { 1, 0 }
  uselistorder i32 %v2_11ad8, { 1, 0 }
  uselistorder i32 %v1_11ad8, { 1, 0, 2 }
  uselistorder i32 %v2_11ab0, { 1, 0 }
  uselistorder i32 %v3_11ae8, { 0, 6, 1, 2, 5, 3, 4, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i1 %v7_11a88, { 1, 2, 0 }
  uselistorder i1 %v2_11a88, { 1, 0, 2 }
  uselistorder i32 %v1_11a6c, { 1, 2, 0 }
  uselistorder i32 %v1_11aac, { 1, 2, 0 }
  uselistorder i32 %v1_11ac4, { 1, 0 }
  uselistorder i1 %v9_11ab8, { 1, 0, 2 }
  uselistorder i1 %v3_11ab8, { 1, 0 }
  uselistorder i32 %v2_11ae8.ph, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v0_11a5c, { 1, 0 }
  uselistorder i32 %v5_11a10, { 3, 4, 5, 2, 1, 0 }
  uselistorder i8 %v2_11a10, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_11a10, { 0, 1, 3, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 5, 2, 4, 3, 6, 7 }
  uselistorder i32 87, { 0, 2, 1 }
  uselistorder i32 25, { 21, 22, 5, 12, 2, 11, 3, 13, 4, 14, 10, 15, 6, 16, 0, 17, 7, 8, 18, 9, 19, 1, 20 }
  uselistorder i8 32, { 9, 10, 11, 0, 12, 13, 1, 2, 14, 3, 4, 5, 6, 7, 8 }
  uselistorder i8 9, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %bb60, { 1, 0, 3, 2 }
  uselistorder label %bb56, { 1, 0 }
  uselistorder label %bb54, { 1, 0 }
  uselistorder label %dec_label_pc_11ab0, { 1, 0 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %dec_label_pc_11a6c, { 1, 0 }
  uselistorder label %dec_label_pc_11a44, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11a10, { 1, 2, 0, 3 }
}

define i32 @function_11b3c(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11b3c:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_11b3c = load i32, i32* @r4, align 4
  store i32 %v3_11b3c, i32* %stack_var_-24, align 4
  %v12_11b3c = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg2, i32* %r8.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_11b54

dec_label_pc_11b54:                               ; preds = %dec_label_pc_11b78.dec_label_pc_11b54_crit_edge, %dec_label_pc_11b3c
  %v0_11b58 = phi i32 [ %v0_11b58.pre, %dec_label_pc_11b78.dec_label_pc_11b54_crit_edge ], [ %arg3, %dec_label_pc_11b3c ]
  %v1_11b60 = call i32 @function_12134(i32 %v0_11b58)
  %v7_11b64 = icmp eq i32 %v1_11b60, 1
  %v0_11b6c = load i32, i32* %r5.global-to-local, align 4
  br i1 %v7_11b64, label %dec_label_pc_11b6c, label %dec_label_pc_11b84

dec_label_pc_11b6c:                               ; preds = %dec_label_pc_11b54
  %v1_11b6c = add i32 %v0_11b6c, 1
  store i32 %v1_11b6c, i32* %r5.global-to-local, align 4
  %v1_11b70 = load i32, i32* %r8.global-to-local, align 4
  %v6_11b74 = icmp slt i32 %v1_11b6c, %v1_11b70
  br i1 %v6_11b74, label %dec_label_pc_11b78, label %.loopexit

dec_label_pc_11b78:                               ; preds = %dec_label_pc_11b6c
  %v0_11b78 = load i32, i32* %r4.global-to-local, align 4
  %v1_11b78 = inttoptr i32 %v0_11b78 to i8*
  %v2_11b78 = load i8, i8* %v1_11b78, align 1
  %v5_11b78 = add i32 %v0_11b78, 1
  store i32 %v5_11b78, i32* %r4.global-to-local, align 4
  %v7_11b7c = icmp eq i8 %v2_11b78, 10
  br i1 %v7_11b7c, label %dec_label_pc_11b84, label %dec_label_pc_11b78.dec_label_pc_11b54_crit_edge

dec_label_pc_11b78.dec_label_pc_11b54_crit_edge:  ; preds = %dec_label_pc_11b78
  %v0_11b58.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11b54

dec_label_pc_11b84:                               ; preds = %dec_label_pc_11b54, %dec_label_pc_11b78
  %v0_11b84 = phi i32 [ %v1_11b6c, %dec_label_pc_11b78 ], [ %v0_11b6c, %dec_label_pc_11b54 ]
  %v2_11b84 = icmp eq i32 %v0_11b84, 0
  br i1 %v2_11b84, label %bb, label %.loopexit

bb:                                               ; preds = %dec_label_pc_11b84
  store i32 0, i32* @r7, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_11b6c, %dec_label_pc_11b84, %bb
  %v0_11b8c = load i32, i32* @r7, align 4
  %v2_11b90 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_11b90, i32* @r4, align 4
  store i32 %v12_11b3c, i32* @r7, align 4
  ret i32 %v0_11b8c

; uselistorder directives
  uselistorder label %.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11b84, { 1, 0 }
}

define i32 @function_11b98() local_unnamed_addr {
dec_label_pc_11b98:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  store i32 16, i32* %r6.global-to-local, align 4
  store i32 16, i32* %stack_var_-20, align 4
  %v0_11ba8 = call i32 @function_127c4()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_11bb0 = inttoptr i32 %v0_11ba8 to i32*
  store i32 0, i32* %v2_11bb0, align 4
  %v0_11bbc = load i32, i32* %r4.global-to-local, align 4
  %v3_11bc0 = call i32 @function_12b7c(i32 2, i32 2, i32 %v0_11bbc)
  %v7_11bc4 = icmp eq i32 %v3_11bc0, -1
  store i32 %v3_11bc0, i32* %r5.global-to-local, align 4
  br i1 %v7_11bc4, label %bb, label %dec_label_pc_11bd4

bb:                                               ; preds = %dec_label_pc_11b98
  %v1_11bcc = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11c20

dec_label_pc_11bd4:                               ; preds = %dec_label_pc_11b98
  %v2_11be0 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_11be0, i32* %r4.global-to-local, align 4
  %v0_11bec = load i32, i32* %r6.global-to-local, align 4
  store i32 2, i32* %stack_var_-36, align 4
  %v3_11c00 = call i32 @function_12964(i32 %v3_11bc0, i32 %v2_11be0, i32 %v0_11bec)
  %v2_11c08 = ptrtoint i32* %stack_var_-20 to i32
  %v0_11c0c = load i32, i32* %r5.global-to-local, align 4
  %v3_11c10 = call i32 @function_1299c(i32 %v0_11c0c, i32 %v2_11be0, i32 %v2_11c08)
  %v1_11c18 = call i32 @function_1239c(i32 %v0_11c0c)
  br label %dec_label_pc_11c20

dec_label_pc_11c20:                               ; preds = %bb, %dec_label_pc_11bd4
  %storemerge = phi i32 [ 134744072, %dec_label_pc_11bd4 ], [ %v1_11bcc, %bb ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_11bc0, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_12964, { 4, 5, 7, 6, 2, 3, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_12b7c, { 12, 13, 24, 25, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 3, 2, 11, 10, 9, 8, 7, 6, 5, 4, 1, 0 }
  uselistorder label %dec_label_pc_11c20, { 1, 0 }
}

define i32 @function_11c2c(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11c2c:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp23 = ptrtoint i8* %arg1 to i32
  %v3_11c30 = load i8, i8* %tmp, align 1
  %v2_11c34 = icmp eq i8 %v3_11c30, 0
  br i1 %v2_11c34, label %bb, label %dec_label_pc_11c48

bb:                                               ; preds = %dec_label_pc_11c2c
  %v4_11c30 = zext i8 %v3_11c30 to i32
  br label %dec_label_pc_11c5c

dec_label_pc_11c48:                               ; preds = %dec_label_pc_11c2c
  br label %dec_label_pc_11c4c

dec_label_pc_11c4c:                               ; preds = %dec_label_pc_11c4c, %dec_label_pc_11c48
  %v0_11c4c = phi i32 [ %v1_11c4c, %dec_label_pc_11c4c ], [ 0, %dec_label_pc_11c48 ]
  %v1_11c4c = add i32 %v0_11c4c, 1
  %v2_11c50 = add i32 %v1_11c4c, %arg2
  %v3_11c50 = inttoptr i32 %v2_11c50 to i8*
  %v4_11c50 = load i8, i8* %v3_11c50, align 1
  %v2_11c54 = icmp eq i8 %v4_11c50, 0
  br i1 %v2_11c54, label %dec_label_pc_11c5c, label %dec_label_pc_11c4c

dec_label_pc_11c5c:                               ; preds = %dec_label_pc_11c4c, %bb
  %v0_11ca021 = phi i32 [ %v4_11c30, %bb ], [ %v1_11c4c, %dec_label_pc_11c4c ]
  %v0_11c642 = load i32, i32* @r1, align 4
  %tmp29 = icmp slt i32 %v0_11c642, 1
  br i1 %tmp29, label %dec_label_pc_11cb4, label %dec_label_pc_11c70

dec_label_pc_11c70:                               ; preds = %dec_label_pc_11c5c, %dec_label_pc_11c64.backedge
  %v0_11c68.in = phi i32 [ %v0_11c68, %dec_label_pc_11c64.backedge ], [ %v0_11c642, %dec_label_pc_11c5c ]
  %v1_11c7c = phi i32 [ %v1_11c7c15, %dec_label_pc_11c64.backedge ], [ 0, %dec_label_pc_11c5c ]
  %v0_11c70 = phi i32 [ %v5_11c70, %dec_label_pc_11c64.backedge ], [ %tmp23, %dec_label_pc_11c5c ]
  %v0_11c68 = add i32 %v0_11c68.in, -1
  %v1_11c70 = inttoptr i32 %v0_11c70 to i8*
  %v2_11c70 = load i8, i8* %v1_11c70, align 1
  %v3_11c70 = zext i8 %v2_11c70 to i32
  %v5_11c70 = add i32 %v0_11c70, 1
  %v1_11c74 = add nsw i32 %v3_11c70, -65
  %v2_11c7c = add i32 %v1_11c7c, %arg2
  %v3_11c7c = inttoptr i32 %v2_11c7c to i8*
  %v4_11c7c = load i8, i8* %v3_11c7c, align 1
  %v6_11c7c = zext i8 %v4_11c7c to i32
  %v1_11c80 = add nsw i32 %v6_11c7c, -65
  %tmp38 = icmp ult i32 %v1_11c74, 26
  br i1 %tmp38, label %bb30, label %bb31

bb30:                                             ; preds = %dec_label_pc_11c70
  %v5_11c84 = or i32 %v3_11c70, 96
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_11c70, %bb30
  %v0_11c90 = phi i32 [ %v3_11c70, %dec_label_pc_11c70 ], [ %v5_11c84, %bb30 ]
  %tmp39 = icmp ult i32 %v1_11c80, 26
  br i1 %tmp39, label %bb32, label %bb33

bb32:                                             ; preds = %bb31
  %v5_11c8c = or i32 %v6_11c7c, 96
  br label %bb33

bb33:                                             ; preds = %bb31, %bb32
  %v1_11c90 = phi i32 [ %v6_11c7c, %bb31 ], [ %v5_11c8c, %bb32 ]
  %v9_11c90 = icmp eq i32 %v0_11c90, %v1_11c90
  br i1 %v9_11c90, label %dec_label_pc_11c9c, label %bb34

bb34:                                             ; preds = %bb33
  br label %dec_label_pc_11c64.backedge

dec_label_pc_11c64.backedge:                      ; preds = %bb34, %dec_label_pc_11c9c
  %v1_11c7c15 = phi i32 [ 0, %bb34 ], [ %v1_11c9c, %dec_label_pc_11c9c ]
  %tmp35 = icmp slt i32 %v0_11c68, 1
  br i1 %tmp35, label %dec_label_pc_11cb4, label %dec_label_pc_11c70

dec_label_pc_11c9c:                               ; preds = %bb33
  %v1_11c9c = add i32 %v1_11c7c, 1
  %v9_11ca0 = icmp eq i32 %v0_11ca021, %v1_11c9c
  br i1 %v9_11ca0, label %dec_label_pc_11ca8, label %dec_label_pc_11c64.backedge

dec_label_pc_11ca8:                               ; preds = %dec_label_pc_11c9c
  %v2_11ca8 = sub i32 %v5_11c70, %tmp23
  br label %dec_label_pc_11cb4

dec_label_pc_11cb4:                               ; preds = %dec_label_pc_11c64.backedge, %dec_label_pc_11c5c, %dec_label_pc_11ca8
  %storemerge = phi i32 [ %v2_11ca8, %dec_label_pc_11ca8 ], [ -1, %dec_label_pc_11c5c ], [ -1, %dec_label_pc_11c64.backedge ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_11c9c, { 1, 0 }
  uselistorder i32 %v0_11c70, { 1, 0 }
  uselistorder i32 %v1_11c7c, { 1, 0 }
  uselistorder i8 %v3_11c30, { 1, 0 }
  uselistorder i32 %tmp23, { 1, 0 }
  uselistorder i32 26, { 0, 1, 2, 7, 6, 8, 3, 9, 4, 10, 5, 11, 12 }
  uselistorder label %dec_label_pc_11cb4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11c64.backedge, { 1, 0 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_11c70, { 1, 0 }
}

define i32 @function_11cbc(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11cbc:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_11cbc = load i8, i8* %arg1, align 1
  %v2_11cc0 = icmp eq i8 %v2_11cbc, 0
  br i1 %v2_11cc0, label %bb, label %dec_label_pc_11ccc

bb:                                               ; preds = %dec_label_pc_11cbc
  %v3_11cbc = zext i8 %v2_11cbc to i32
  br label %dec_label_pc_11ce0

dec_label_pc_11ccc:                               ; preds = %dec_label_pc_11cbc
  br label %dec_label_pc_11cd0

dec_label_pc_11cd0:                               ; preds = %dec_label_pc_11cd0, %dec_label_pc_11ccc
  %v0_11cd0 = phi i32 [ %v1_11cd0, %dec_label_pc_11cd0 ], [ 0, %dec_label_pc_11ccc ]
  %v1_11cd0 = add i32 %v0_11cd0, 1
  %v2_11cd4 = add i32 %v1_11cd0, %tmp
  %v3_11cd4 = inttoptr i32 %v2_11cd4 to i8*
  %v4_11cd4 = load i8, i8* %v3_11cd4, align 1
  %v2_11cd8 = icmp eq i8 %v4_11cd4, 0
  br i1 %v2_11cd8, label %dec_label_pc_11ce0, label %dec_label_pc_11cd0

dec_label_pc_11ce0:                               ; preds = %dec_label_pc_11cd0, %bb
  %v0_11d2c3 = phi i32 [ %v3_11cbc, %bb ], [ %v1_11cd0, %dec_label_pc_11cd0 ]
  %v1_11ce0 = inttoptr i32 %arg2 to i8*
  %v2_11ce0 = load i8, i8* %v1_11ce0, align 1
  %v3_11ce0 = zext i8 %v2_11ce0 to i32
  store i32 %v3_11ce0, i32* @r3, align 4
  %v2_11ce4 = icmp eq i8 %v2_11ce0, 0
  br i1 %v2_11ce4, label %bb21, label %dec_label_pc_11cf0

bb21:                                             ; preds = %dec_label_pc_11ce0
  store i32 %v3_11ce0, i32* @r2, align 4
  br label %dec_label_pc_11d04

dec_label_pc_11cf0:                               ; preds = %dec_label_pc_11ce0
  br label %dec_label_pc_11cf4

dec_label_pc_11cf4:                               ; preds = %dec_label_pc_11cf4, %dec_label_pc_11cf0
  %v0_11cf4 = phi i32 [ %v1_11cf4, %dec_label_pc_11cf4 ], [ 0, %dec_label_pc_11cf0 ]
  %v1_11cf4 = add i32 %v0_11cf4, 1
  store i32 %v1_11cf4, i32* @r2, align 4
  %v2_11cf8 = add i32 %v1_11cf4, %arg2
  %v3_11cf8 = inttoptr i32 %v2_11cf8 to i8*
  %v4_11cf8 = load i8, i8* %v3_11cf8, align 1
  %v6_11cf8 = zext i8 %v4_11cf8 to i32
  store i32 %v6_11cf8, i32* @r3, align 4
  %v2_11cfc = icmp eq i8 %v4_11cf8, 0
  br i1 %v2_11cfc, label %dec_label_pc_11d04, label %dec_label_pc_11cf4

dec_label_pc_11d04:                               ; preds = %dec_label_pc_11cf4, %bb21
  %v0_11d04 = phi i32 [ %v3_11ce0, %bb21 ], [ %v1_11cf4, %dec_label_pc_11cf4 ]
  %v9_11d04 = icmp eq i32 %v0_11d04, %v0_11d2c3
  br i1 %v9_11d04, label %dec_label_pc_11d2c.preheader, label %dec_label_pc_11d0c

dec_label_pc_11d2c.preheader:                     ; preds = %dec_label_pc_11d04
  %v2_11d2c5 = icmp eq i32 %v0_11d2c3, 0
  br i1 %v2_11d2c5, label %dec_label_pc_11d34, label %dec_label_pc_11d14

dec_label_pc_11d0c:                               ; preds = %dec_label_pc_11d14, %dec_label_pc_11d04
  ret i32 0

dec_label_pc_11d14:                               ; preds = %dec_label_pc_11d24, %dec_label_pc_11d2c.preheader
  %v0_11d2c.in = phi i32 [ %v0_11d2c, %dec_label_pc_11d24 ], [ %v0_11d2c3, %dec_label_pc_11d2c.preheader ]
  %v0_11d28 = phi i32 [ %v1_11d28, %dec_label_pc_11d24 ], [ %arg2, %dec_label_pc_11d2c.preheader ]
  %v0_11d24 = phi i32 [ %v1_11d24, %dec_label_pc_11d24 ], [ %tmp, %dec_label_pc_11d2c.preheader ]
  %v0_11d2c = add i32 %v0_11d2c.in, -1
  %v1_11d14 = inttoptr i32 %v0_11d24 to i8*
  %v2_11d14 = load i8, i8* %v1_11d14, align 1
  %v3_11d14 = zext i8 %v2_11d14 to i32
  store i32 %v3_11d14, i32* @r2, align 4
  %v1_11d18 = inttoptr i32 %v0_11d28 to i8*
  %v2_11d18 = load i8, i8* %v1_11d18, align 1
  %v3_11d18 = zext i8 %v2_11d18 to i32
  store i32 %v3_11d18, i32* @r3, align 4
  %v9_11d1c = icmp eq i8 %v2_11d14, %v2_11d18
  br i1 %v9_11d1c, label %dec_label_pc_11d24, label %dec_label_pc_11d0c

dec_label_pc_11d24:                               ; preds = %dec_label_pc_11d14
  %v1_11d24 = add i32 %v0_11d24, 1
  %v1_11d28 = add i32 %v0_11d28, 1
  %v2_11d2c = icmp eq i32 %v0_11d2c, 0
  br i1 %v2_11d2c, label %dec_label_pc_11d34, label %dec_label_pc_11d14

dec_label_pc_11d34:                               ; preds = %dec_label_pc_11d24, %dec_label_pc_11d2c.preheader
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_11cf4, { 0, 1, 3, 2 }
  uselistorder i8 %v2_11cbc, { 1, 0 }
}

define i32 @function_11d3c(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11d3c:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = sext i8 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-66 = alloca i32, align 4
  %v3_11d3c = load i32, i32* @r4, align 4
  %v12_11d3c = load i32, i32* @r7, align 4
  %v0_11d40 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_11d40, i32* %r8.global-to-local, align 4
  %v2_11d40 = icmp eq i32 %v0_11d40, 0
  store i1 %v2_11d40, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br i1 %v2_11d40, label %dec_label_pc_11e20, label %dec_label_pc_11d50

dec_label_pc_11d50:                               ; preds = %dec_label_pc_11d3c
  %v3_11d50 = icmp eq i8 %arg1, 0
  store i1 %v3_11d50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_11d50, label %.thread, label %dec_label_pc_11d64

.thread:                                          ; preds = %dec_label_pc_11d50
  %v4_11d58 = inttoptr i32 %v0_11d40 to i8*
  store i8 48, i8* %v4_11d58, align 1
  %v0_11d5c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11d5c.pr.pr, label %.thread1, label %dec_label_pc_11d64

.thread1:                                         ; preds = %.thread
  %v4_11d5c = load i32, i32* %r8.global-to-local, align 4
  %v5_11d5c = add i32 %v4_11d5c, 1
  %v6_11d5c = inttoptr i32 %v5_11d5c to i8*
  store i8 0, i8* %v6_11d5c, align 1
  %v0_11d60.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11d60.pr.pr, label %dec_label_pc_11e20, label %dec_label_pc_11d64

dec_label_pc_11d64:                               ; preds = %dec_label_pc_11d50, %.thread, %.thread1
  %tmp47 = icmp slt i8 %arg1, 0
  %v7_11d68 = icmp eq i32 %arg2, 10
  store i1 %v7_11d68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11d68, label %bb, label %.thread28

.thread28:                                        ; preds = %dec_label_pc_11d64
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread6

bb:                                               ; preds = %dec_label_pc_11d64
  %v4_11d64 = zext i1 %tmp47 to i32
  store i32 %v4_11d64, i32* %r2.global-to-local, align 4
  %phitmp = icmp eq i1 %tmp47, false
  store i1 %phitmp, i1* %cpsr_z.global-to-local, align 1
  %v3_11d888 = sub nsw i32 0, %tmp
  %tmp.v3_11d888 = select i1 %phitmp, i32 %tmp, i32 %v3_11d888
  %tmp46 = zext i1 %phitmp to i32
  %. = xor i32 %tmp46, 1
  br label %.thread6

.thread6:                                         ; preds = %bb, %.thread28
  %storemerge30 = phi i32 [ %tmp, %.thread28 ], [ %tmp.v3_11d888, %bb ]
  %storemerge = phi i32 [ 0, %.thread28 ], [ %., %bb ]
  store i32 %storemerge30, i32* @r4, align 4
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  store i32 32, i32* %r5.global-to-local, align 4
  %v2_11d94 = ptrtoint i32* %stack_var_-66 to i32
  store i32 %v2_11d94, i32* @r7, align 4
  br label %dec_label_pc_11d98

dec_label_pc_11d98:                               ; preds = %bb45, %.thread6
  %v0_11d98 = phi i32 [ %v0_11dbc, %bb45 ], [ %storemerge30, %.thread6 ]
  store i32 %v0_11d98, i32* %r0.global-to-local, align 4
  %v0_11d9c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_11d9c, i32* %r1.global-to-local, align 4
  %sext = mul i32 %v0_11d98, 16777216
  %v1_11da0 = sdiv i32 %sext, 16777216
  %v3_11da0 = call i32 @function_11f34(i32 %v1_11da0, i32 %v0_11d9c)
  %v7_11da4 = icmp eq i32 %v0_11d9c, 9
  store i1 %v7_11da4, i1* %cpsr_z.global-to-local, align 1
  %v1_11da8 = add i32 %v0_11d9c, 48
  %v0_11dac = load i32, i32* @r4, align 4
  store i32 %v0_11dac, i32* @r0, align 4
  %v7_11db0 = icmp sgt i32 %v0_11d9c, 9
  %extract.t = trunc i32 %v1_11da8 to i8
  br i1 %v7_11db0, label %bb44, label %bb45

bb44:                                             ; preds = %dec_label_pc_11d98
  %v9_11db0 = add i32 %v0_11d9c, 55
  %extract.t27 = trunc i32 %v9_11db0 to i8
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_11d98, %bb44
  %v0_11db8.off0 = phi i8 [ %extract.t, %dec_label_pc_11d98 ], [ %extract.t27, %bb44 ]
  %v0_11db4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_11db4, i32* @r1, align 4
  %v2_11db8 = load i32, i32* %r5.global-to-local, align 4
  %v3_11db8 = load i32, i32* @r7, align 4
  %v4_11db8 = add i32 %v3_11db8, %v2_11db8
  %v5_11db8 = inttoptr i32 %v4_11db8 to i8*
  store i8 %v0_11db8.off0, i8* %v5_11db8, align 1
  %v0_11dbc = call i32 @function_11e38()
  store i32 %v0_11dbc, i32* %r0.global-to-local, align 4
  store i32 %v0_11dbc, i32* @r4, align 4
  %v2_11dc0 = icmp eq i32 %v0_11dbc, 0
  store i1 %v2_11dc0, i1* %cpsr_z.global-to-local, align 1
  %v0_11dc4 = load i32, i32* %r5.global-to-local, align 4
  %v1_11dc4 = add i32 %v0_11dc4, -1
  store i32 %v1_11dc4, i32* %r5.global-to-local, align 4
  br i1 %v2_11dc0, label %dec_label_pc_11dcc, label %dec_label_pc_11d98

dec_label_pc_11dcc:                               ; preds = %bb45
  %v0_11dcc = load i32, i32* %sl.global-to-local, align 4
  %v2_11dcc = icmp eq i32 %v0_11dcc, 0
  store i1 %v2_11dcc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11dcc, label %.thread12, label %.thread11

.thread11:                                        ; preds = %dec_label_pc_11dcc
  %v3_11dd0 = ptrtoint i32* %stack_var_-32 to i32
  %v3_11dd4 = add i32 %v1_11dc4, %v3_11dd0
  store i32 %v3_11dd4, i32* %r2.global-to-local, align 4
  %v4_11ddc = add i32 %v3_11dd4, -34
  %v5_11ddc = inttoptr i32 %v4_11ddc to i8*
  store i8 45, i8* %v5_11ddc, align 1
  %v0_11de0.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_11de0.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v0_11de0.pr.pr.pr, label %.thread12, label %.thread11._crit_edge

.thread12:                                        ; preds = %.thread11, %dec_label_pc_11dcc
  %v1_11de0 = phi i32 [ %v1_11dc4, %dec_label_pc_11dcc ], [ %v1_11de0.pre, %.thread11 ]
  %v2_11de0 = add i32 %v1_11de0, 1
  store i32 %v2_11de0, i32* %r5.global-to-local, align 4
  br label %.thread11._crit_edge

.thread11._crit_edge:                             ; preds = %.thread11, %.thread12
  %v1_11dec = phi i32 [ %v2_11de0, %.thread12 ], [ %v1_11de0.pre, %.thread11 ]
  %v0_11de4 = load i32, i32* @r7, align 4
  %v2_11de4 = add i32 %v0_11de4, %v1_11dec
  %v3_11de4 = inttoptr i32 %v2_11de4 to i8*
  %v4_11de4 = load i8, i8* %v3_11de4, align 1
  %v6_11de4 = zext i8 %v4_11de4 to i32
  %v2_11de8 = icmp eq i8 %v4_11de4, 0
  store i1 %v2_11de8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_11de4, i32* %r2.global-to-local, align 4
  br i1 %v2_11de8, label %dec_label_pc_11e30, label %dec_label_pc_11df8.preheader

dec_label_pc_11df8.preheader:                     ; preds = %.thread11._crit_edge
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11df8

dec_label_pc_11df8:                               ; preds = %dec_label_pc_11df8.preheader, %dec_label_pc_11df8
  %v0_11df8 = phi i32 [ 0, %dec_label_pc_11df8.preheader ], [ %v1_11df8, %dec_label_pc_11df8 ]
  %v1_11df8 = add i32 %v0_11df8, 1
  store i32 %v1_11df8, i32* %r1.global-to-local, align 4
  %v2_11dfc = add i32 %v1_11df8, %v2_11de4
  %v3_11dfc = inttoptr i32 %v2_11dfc to i8*
  %v4_11dfc = load i8, i8* %v3_11dfc, align 1
  %v2_11e00 = icmp eq i8 %v4_11dfc, 0
  store i1 %v2_11e00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11e00, label %dec_label_pc_11e08, label %dec_label_pc_11df8

dec_label_pc_11e08:                               ; preds = %dec_label_pc_11df8, %dec_label_pc_11e30
  %v0_11e0c24 = phi i32 [ %v6_11de4, %dec_label_pc_11e30 ], [ %v1_11df8, %dec_label_pc_11df8 ]
  %v0_11e08 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_11e08, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11e0c

dec_label_pc_11e0c:                               ; preds = %dec_label_pc_11e0c.dec_label_pc_11e0c_crit_edge, %dec_label_pc_11e08
  %v2_11e18 = phi i32 [ %v5_11e18, %dec_label_pc_11e0c.dec_label_pc_11e0c_crit_edge ], [ %v0_11e08, %dec_label_pc_11e08 ]
  %v0_11e10 = phi i32 [ %v0_11e10.pre, %dec_label_pc_11e0c.dec_label_pc_11e0c_crit_edge ], [ %v2_11de4, %dec_label_pc_11e08 ]
  %v0_11e0c = phi i32 [ %v0_11e0c.pre, %dec_label_pc_11e0c.dec_label_pc_11e0c_crit_edge ], [ %v0_11e0c24, %dec_label_pc_11e08 ]
  %v1_11e0c = add i32 %v0_11e0c, -1
  store i32 %v1_11e0c, i32* %r1.global-to-local, align 4
  %v1_11e10 = inttoptr i32 %v0_11e10 to i8*
  %v2_11e10 = load i8, i8* %v1_11e10, align 1
  %v5_11e10 = add i32 %v0_11e10, 1
  store i32 %v5_11e10, i32* %r2.global-to-local, align 4
  %v3_11e14 = icmp eq i32 %v0_11e0c, 0
  store i1 %v3_11e14, i1* %cpsr_z.global-to-local, align 1
  %v3_11e18 = inttoptr i32 %v2_11e18 to i8*
  store i8 %v2_11e10, i8* %v3_11e18, align 1
  %v4_11e18 = load i32, i32* %r0.global-to-local, align 4
  %v5_11e18 = add i32 %v4_11e18, 1
  store i32 %v5_11e18, i32* %r0.global-to-local, align 4
  br i1 %v3_11e14, label %dec_label_pc_11e20, label %dec_label_pc_11e0c.dec_label_pc_11e0c_crit_edge

dec_label_pc_11e0c.dec_label_pc_11e0c_crit_edge:  ; preds = %dec_label_pc_11e0c
  %v0_11e0c.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_11e10.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11e0c

dec_label_pc_11e20:                               ; preds = %dec_label_pc_11e0c, %.thread1, %dec_label_pc_11d3c
  %v0_11e20 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_11e20, i32* %r0.global-to-local, align 4
  store i32 %v3_11d3c, i32* @r4, align 4
  store i32 %v12_11d3c, i32* @r7, align 4
  ret i32 %v0_11e20

dec_label_pc_11e30:                               ; preds = %.thread11._crit_edge
  store i32 %v6_11de4, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11e08

; uselistorder directives
  uselistorder i32 %v5_11e18, { 1, 0 }
  uselistorder i1 %v3_11e14, { 1, 0 }
  uselistorder i32 %v0_11e10, { 1, 0 }
  uselistorder i32 %v1_11df8, { 0, 1, 3, 2 }
  uselistorder i32 %v6_11de4, { 1, 0 }
  uselistorder i32 %v2_11de4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_11de0.pre, { 1, 0 }
  uselistorder i32 %v1_11dc4, { 1, 0, 2 }
  uselistorder i32 %v0_11dbc, { 1, 2, 3, 0 }
  uselistorder i32 %v0_11d9c, { 2, 0, 1, 3, 4, 5 }
  uselistorder i1 %phitmp, { 2, 1, 0 }
  uselistorder i32 %v0_11d40, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 11, 10, 12, 13 }
  uselistorder i32 55, { 7, 0, 3, 4, 2, 5, 6, 1 }
  uselistorder label %dec_label_pc_11e08, { 1, 0 }
  uselistorder label %dec_label_pc_11df8, { 1, 0 }
  uselistorder label %.thread11._crit_edge, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %dec_label_pc_11d64, { 2, 1, 0 }
}

define i32 @function_11e38() local_unnamed_addr {
dec_label_pc_11e38:
  %r2.global-to-local = alloca i32, align 4
  %v0_11e38 = load i32, i32* @r1, align 4
  %v1_11e38 = add i32 %v0_11e38, -1
  store i32 %v1_11e38, i32* %r2.global-to-local, align 4
  %v2_11e38 = icmp eq i32 %v0_11e38, 0
  %v7_11e38 = icmp eq i32 %v0_11e38, 1
  %v0_11e3c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_11e38, i32 %v0_11e3c)
  br i1 %v2_11e38, label %dec_label_pc_11f20, label %dec_label_pc_11e44

dec_label_pc_11e44:                               ; preds = %dec_label_pc_11e38
  %v0_11e44 = load i32, i32* @r0, align 4
  %v1_11e44 = load i32, i32* @r1, align 4
  %tmp = icmp ugt i32 %v0_11e44, %v1_11e44
  br i1 %tmp, label %dec_label_pc_11e4c, label %dec_label_pc_11ed8

dec_label_pc_11e4c:                               ; preds = %dec_label_pc_11e44
  %v1_11e4c = load i32, i32* %r2.global-to-local, align 4
  %v2_11e4c = and i32 %v1_11e4c, %v1_11e44
  %v4_11e4c = icmp eq i32 %v2_11e4c, 0
  br i1 %v4_11e4c, label %dec_label_pc_11ee4, label %dec_label_pc_11e54

dec_label_pc_11e54:                               ; preds = %dec_label_pc_11e4c
  %v3_11e54 = icmp ult i32 %v1_11e44, 536870912
  br i1 %v3_11e54, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_11e54
  %v4_11e58 = mul i32 %v1_11e44, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_11e54, %.thread
  %v0_11e78.pr36.ph = phi i32 [ %v4_11e58, %.thread ], [ %v1_11e44, %dec_label_pc_11e54 ]
  %storemerge133 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_11e54 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb81
  %v0_11e78.pr36 = phi i32 [ %v4_11e6c, %bb81 ], [ %v0_11e78.pr36.ph, %.preheader.preheader ]
  %v1_11e70 = phi i32 [ %v4_11e70, %bb81 ], [ %storemerge133, %.preheader.preheader ]
  %v2_11e64 = icmp ugt i32 %v0_11e78.pr36, 268435455
  br i1 %v2_11e64, label %.thread2, label %bb

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_11e78thread-pre-split.loopexit

bb:                                               ; preds = %.preheader
  %v4_11e68 = icmp ult i32 %v0_11e78.pr36, %v0_11e44
  br i1 %v4_11e68, label %bb80, label %dec_label_pc_11e78thread-pre-split.loopexit.loopexit

bb80:                                             ; preds = %bb
  %v2_11e6c = and i32 %v0_11e78.pr36, 268435456
  %v3_11e6c = icmp eq i32 %v2_11e6c, 0
  %v4_11e6c = mul i32 %v0_11e78.pr36, 16
  br i1 %v3_11e6c, label %bb81, label %dec_label_pc_11e78.loopexit

bb81:                                             ; preds = %bb80
  %v2_11e70 = and i32 %v1_11e70, 268435456
  %v3_11e70 = icmp eq i32 %v2_11e70, 0
  %v4_11e70 = mul i32 %v1_11e70, 16
  br i1 %v3_11e70, label %.preheader, label %dec_label_pc_11e78thread-pre-split.loopexit.loopexit

dec_label_pc_11e78thread-pre-split.loopexit.loopexit: ; preds = %bb81, %bb
  %v1_11e8448.ph = phi i32 [ %v1_11e70, %bb ], [ %v4_11e70, %bb81 ]
  %v0_11e78.pr38.ph = phi i32 [ %v0_11e78.pr36, %bb ], [ %v4_11e6c, %bb81 ]
  br label %dec_label_pc_11e78thread-pre-split.loopexit

dec_label_pc_11e78thread-pre-split.loopexit:      ; preds = %dec_label_pc_11e78thread-pre-split.loopexit.loopexit, %.thread2
  %v1_11e8448 = phi i32 [ %v1_11e70, %.thread2 ], [ %v1_11e8448.ph, %dec_label_pc_11e78thread-pre-split.loopexit.loopexit ]
  %v0_11e78.pr38 = phi i32 [ %v0_11e78.pr36, %.thread2 ], [ %v0_11e78.pr38.ph, %dec_label_pc_11e78thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_11e78thread-pre-split

dec_label_pc_11e78thread-pre-split:               ; preds = %dec_label_pc_11e78thread-pre-split.loopexit, %bb83
  %v1_11e8446 = phi i32 [ %v1_11e8448, %dec_label_pc_11e78thread-pre-split.loopexit ], [ %v3_11e84, %bb83 ]
  %v0_11e78.pr = phi i32 [ %v0_11e78.pr38, %dec_label_pc_11e78thread-pre-split.loopexit ], [ %v3_11e80, %bb83 ]
  br label %dec_label_pc_11e78

dec_label_pc_11e78.loopexit:                      ; preds = %bb80
  br label %dec_label_pc_11e78

dec_label_pc_11e78:                               ; preds = %dec_label_pc_11e78.loopexit, %dec_label_pc_11e78thread-pre-split
  %v1_11e84 = phi i32 [ %v1_11e8446, %dec_label_pc_11e78thread-pre-split ], [ %v1_11e70, %dec_label_pc_11e78.loopexit ]
  %v1_11e80 = phi i32 [ %v0_11e78.pr, %dec_label_pc_11e78thread-pre-split ], [ %v4_11e6c, %dec_label_pc_11e78.loopexit ]
  %v2_11e78 = icmp slt i32 %v1_11e80, 0
  br i1 %v2_11e78, label %dec_label_pc_11e8c, label %bb82

bb82:                                             ; preds = %dec_label_pc_11e78
  %v4_11e7c = icmp ult i32 %v1_11e80, %v0_11e44
  br i1 %v4_11e7c, label %bb83, label %dec_label_pc_11e8c

bb83:                                             ; preds = %bb82
  %v3_11e80 = mul i32 %v1_11e80, 2
  %v2_11e84 = icmp slt i32 %v1_11e84, 0
  %v3_11e84 = mul i32 %v1_11e84, 2
  br i1 %v2_11e84, label %dec_label_pc_11e8c, label %dec_label_pc_11e78thread-pre-split

dec_label_pc_11e8c:                               ; preds = %bb82, %dec_label_pc_11e78, %bb83
  %v2_11e9859 = phi i32 [ %v3_11e84, %bb83 ], [ %v1_11e84, %bb82 ], [ %v1_11e84, %dec_label_pc_11e78 ]
  %v1_11e9051 = phi i32 [ %v3_11e80, %bb83 ], [ %v1_11e80, %bb82 ], [ %v1_11e80, %dec_label_pc_11e78 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11e90

dec_label_pc_11e90:                               ; preds = %.thread11, %dec_label_pc_11e8c
  %v1_11ec4 = phi i32 [ %v4_11ec4, %.thread11 ], [ %v2_11e9859, %dec_label_pc_11e8c ]
  %v1_11e98 = phi i32 [ %v0_11ed0, %.thread11 ], [ 0, %dec_label_pc_11e8c ]
  %v1_11ec8 = phi i32 [ %v4_11ec8, %.thread11 ], [ %v1_11e9051, %dec_label_pc_11e8c ]
  %v1_11e94 = phi i32 [ %v0_11ec0, %.thread11 ], [ %v0_11e44, %dec_label_pc_11e8c ]
  %v3_11e90 = icmp ult i32 %v1_11e94, %v1_11ec8
  br i1 %v3_11e90, label %.thread7, label %bb84

bb84:                                             ; preds = %dec_label_pc_11e90
  %v3_11e94 = sub i32 %v1_11e94, %v1_11ec8
  %v3_11e98 = or i32 %v1_11e98, %v1_11ec4
  store i32 %v3_11e98, i32* %r2.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_11e90, %bb84
  %v1_11ea0 = phi i32 [ %v1_11e94, %dec_label_pc_11e90 ], [ %v3_11e94, %bb84 ]
  %v1_11ea4 = phi i32 [ %v1_11e98, %dec_label_pc_11e90 ], [ %v3_11e98, %bb84 ]
  %v4_11e9c = udiv i32 %v1_11ec8, 2
  %v6_11e9c = icmp ult i32 %v1_11ea0, %v4_11e9c
  br i1 %v6_11e9c, label %.thread8, label %bb85

bb85:                                             ; preds = %.thread7
  %v3_11ea0 = urem i32 %v1_11ec8, 2
  %v4_11ea0 = icmp eq i32 %v3_11ea0, 0
  %v6_11ea0 = sub i32 %v1_11ea0, %v4_11e9c
  br i1 %v4_11ea0, label %.thread8, label %bb86

bb86:                                             ; preds = %bb85
  %v5_11ea4 = udiv i32 %v1_11ec4, 2
  %v6_11ea4 = or i32 %v1_11ea4, %v5_11ea4
  store i32 %v6_11ea4, i32* %r2.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %bb85, %.thread7, %bb86
  %v1_11eac = phi i32 [ %v6_11ea0, %bb85 ], [ %v1_11ea0, %.thread7 ], [ %v6_11ea0, %bb86 ]
  %v1_11eb0 = phi i32 [ %v1_11ea4, %bb85 ], [ %v1_11ea4, %.thread7 ], [ %v6_11ea4, %bb86 ]
  %v4_11ea8 = udiv i32 %v1_11ec8, 4
  %v6_11ea8 = icmp ult i32 %v1_11eac, %v4_11ea8
  br i1 %v6_11ea8, label %.thread9, label %bb87

bb87:                                             ; preds = %.thread8
  %v3_11eac = and i32 %v1_11ec8, 2
  %v4_11eac = icmp eq i32 %v3_11eac, 0
  %v6_11eac = sub i32 %v1_11eac, %v4_11ea8
  br i1 %v4_11eac, label %.thread9, label %bb88

bb88:                                             ; preds = %bb87
  %v5_11eb0 = udiv i32 %v1_11ec4, 4
  %v6_11eb0 = or i32 %v1_11eb0, %v5_11eb0
  store i32 %v6_11eb0, i32* %r2.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %bb87, %.thread8, %bb88
  %v1_11eb8 = phi i32 [ %v6_11eac, %bb87 ], [ %v1_11eac, %.thread8 ], [ %v6_11eac, %bb88 ]
  %v1_11ebc = phi i32 [ %v1_11eb0, %bb87 ], [ %v1_11eb0, %.thread8 ], [ %v6_11eb0, %bb88 ]
  %v4_11eb4 = udiv i32 %v1_11ec8, 8
  %v6_11eb4 = icmp ult i32 %v1_11eb8, %v4_11eb4
  br i1 %v6_11eb4, label %thread-pre-split, label %bb89

bb89:                                             ; preds = %.thread9
  %v3_11eb8 = and i32 %v1_11ec8, 4
  %v4_11eb8 = icmp eq i32 %v3_11eb8, 0
  %v6_11eb8 = sub i32 %v1_11eb8, %v4_11eb4
  br i1 %v4_11eb8, label %thread-pre-split, label %bb90

bb90:                                             ; preds = %bb89
  %v5_11ebc = udiv i32 %v1_11ec4, 8
  %v6_11ebc = or i32 %v1_11ebc, %v5_11ebc
  store i32 %v6_11ebc, i32* %r2.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb90, %.thread9, %bb89
  %v0_11ed0 = phi i32 [ %v1_11ebc, %bb89 ], [ %v1_11ebc, %.thread9 ], [ %v6_11ebc, %bb90 ]
  %v0_11ec0 = phi i32 [ %v6_11eb8, %bb89 ], [ %v1_11eb8, %.thread9 ], [ %v6_11eb8, %bb90 ]
  %v2_11ec0 = icmp eq i32 %v0_11ec0, 0
  br i1 %v2_11ec0, label %dec_label_pc_11ed0, label %bb91

bb91:                                             ; preds = %thread-pre-split
  %tmp138 = icmp ult i32 %v1_11ec4, 16
  br i1 %tmp138, label %dec_label_pc_11ed0, label %.thread11

.thread11:                                        ; preds = %bb91
  %v4_11ec4 = udiv i32 %v1_11ec4, 16
  %v4_11ec8 = udiv i32 %v1_11ec8, 16
  br label %dec_label_pc_11e90

dec_label_pc_11ed0:                               ; preds = %thread-pre-split, %bb91
  ret i32 %v0_11ed0

dec_label_pc_11ed8:                               ; preds = %dec_label_pc_11e44
  %v9_11e44 = icmp eq i32 %v0_11e44, %v1_11e44
  %. = zext i1 %v9_11e44 to i32
  ret i32 %.

dec_label_pc_11ee4:                               ; preds = %dec_label_pc_11e4c
  %v2_11ee4 = icmp ugt i32 %v1_11e44, 65535
  br i1 %v2_11ee4, label %bb95, label %.thread16

bb95:                                             ; preds = %dec_label_pc_11ee4
  %v2_11ee8 = and i32 %v1_11e44, 32768
  %v3_11ee8 = icmp eq i32 %v2_11ee8, 0
  %v4_11ee8 = udiv i32 %v1_11e44, 65536
  br i1 %v3_11ee8, label %.thread16, label %bb96

.thread16:                                        ; preds = %bb95, %dec_label_pc_11ee4
  %v0_11ef465 = phi i32 [ %v1_11e44, %dec_label_pc_11ee4 ], [ %v4_11ee8, %bb95 ]
  br label %bb96

bb96:                                             ; preds = %bb95, %.thread16
  %v1_11ef8 = phi i32 [ %v0_11ef465, %.thread16 ], [ %v4_11ee8, %bb95 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb95 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_11ef4 = icmp ugt i32 %v1_11ef8, 255
  br i1 %v2_11ef4, label %bb97, label %.thread17

bb97:                                             ; preds = %bb96
  %v2_11ef8 = and i32 %v1_11ef8, 128
  %v3_11ef8 = icmp eq i32 %v2_11ef8, 0
  %v4_11ef8 = udiv i32 %v1_11ef8, 256
  br i1 %v3_11ef8, label %.thread17, label %bb98

bb98:                                             ; preds = %bb97
  %v2_11efc = or i32 %storemerge, 8
  store i32 %v2_11efc, i32* %r2.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %bb97, %bb96, %bb98
  %v1_11f08 = phi i32 [ %storemerge, %bb96 ], [ %storemerge, %bb97 ], [ %v2_11efc, %bb98 ]
  %v1_11f04 = phi i32 [ %v1_11ef8, %bb96 ], [ %v4_11ef8, %bb97 ], [ %v4_11ef8, %bb98 ]
  %v2_11f00 = icmp ugt i32 %v1_11f04, 15
  br i1 %v2_11f00, label %bb99, label %.thread18

bb99:                                             ; preds = %.thread17
  %v2_11f04 = and i32 %v1_11f04, 8
  %v3_11f04 = icmp eq i32 %v2_11f04, 0
  %v4_11f04 = udiv i32 %v1_11f04, 16
  br i1 %v3_11f04, label %.thread18, label %bb100

bb100:                                            ; preds = %bb99
  %v2_11f08 = add nsw i32 %v1_11f08, 4
  store i32 %v2_11f08, i32* %r2.global-to-local, align 4
  br label %.thread18

.thread18:                                        ; preds = %bb99, %.thread17, %bb100
  %v4_11f10 = phi i32 [ %v1_11f08, %.thread17 ], [ %v1_11f08, %bb99 ], [ %v2_11f08, %bb100 ]
  %v5_11f14 = phi i32 [ %v1_11f04, %.thread17 ], [ %v4_11f04, %bb99 ], [ %v4_11f04, %bb100 ]
  %v2_11f0c = icmp ugt i32 %v5_11f14, 3
  %v7_11f0c = icmp eq i32 %v5_11f14, 4
  %v2_11f10 = xor i1 %v7_11f0c, true
  %v3_11f10 = and i1 %v2_11f0c, %v2_11f10
  br i1 %v3_11f10, label %bb101, label %bb102

bb101:                                            ; preds = %.thread18
  %v5_11f10 = add nsw i32 %v4_11f10, 3
  store i32 %v5_11f10, i32* %r2.global-to-local, align 4
  br label %bb102

bb102:                                            ; preds = %.thread18, %bb101
  %v4_11f14 = phi i32 [ %v4_11f10, %.thread18 ], [ %v5_11f10, %bb101 ]
  %v2_11f14 = xor i1 %v2_11f0c, true
  %v3_11f14 = or i1 %v7_11f0c, %v2_11f14
  br i1 %v3_11f14, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  %v8_11f14 = udiv i32 %v5_11f14, 2
  %v9_11f14 = add i32 %v4_11f14, %v8_11f14
  store i32 %v9_11f14, i32* %r2.global-to-local, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v1_11f18 = phi i32 [ %v4_11f14, %bb102 ], [ %v9_11f14, %bb103 ]
  %v6_11f18 = lshr i32 %v0_11e44, %v1_11f18
  ret i32 %v6_11f18

dec_label_pc_11f20:                               ; preds = %dec_label_pc_11e38
  %v0_11f20 = load i32, i32* @lr, align 4
  %v0_11f24 = call i32 @function_11f4c()
  store i32 %v0_11f20, i32* @lr, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_11f14, { 1, 0 }
  uselistorder i1 %v7_11f0c, { 1, 0 }
  uselistorder i32 %v4_11f04, { 1, 0 }
  uselistorder i32 %v1_11f04, { 1, 0, 2, 3 }
  uselistorder i32 %v2_11efc, { 1, 0 }
  uselistorder i32 %v4_11ef8, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2, 3 }
  uselistorder i32 %v1_11ef8, { 1, 0, 2, 3 }
  uselistorder i32 %v4_11ee8, { 1, 0 }
  uselistorder i32 %v0_11ec0, { 1, 0 }
  uselistorder i32 %v4_11eb4, { 1, 0 }
  uselistorder i32 %v1_11ebc, { 1, 2, 0 }
  uselistorder i32 %v4_11ea8, { 1, 0 }
  uselistorder i32 %v1_11eb0, { 1, 2, 0 }
  uselistorder i32 %v4_11e9c, { 1, 0 }
  uselistorder i32 %v1_11ea4, { 1, 2, 0 }
  uselistorder i32 %v1_11ec8, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_11e98, { 1, 0 }
  uselistorder i32 %v1_11ec4, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_11e84, { 1, 0 }
  uselistorder i32 %v3_11e80, { 1, 0 }
  uselistorder i32 %v1_11e80, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_11e84, { 1, 2, 0, 3 }
  uselistorder i32 %v4_11e70, { 1, 0 }
  uselistorder i32 %v4_11e6c, { 2, 1, 0 }
  uselistorder i32 %v1_11e70, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_11e78.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v1_11e44, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1 }
  uselistorder i32 %v0_11e44, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_11e38, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_11ed0, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_11e8c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11e78thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @function_11f34(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11f34:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v0_11f38 = call i32 @function_11e38()
  ret i32 %v0_11f38
}

define i32 @function_11f4c() local_unnamed_addr {
dec_label_pc_11f4c:
  %v1_11f54 = call i32 @function_12bb4(i32 8)
  ret i32 %v1_11f54
}

define i32 @function_11f60() local_unnamed_addr {
dec_label_pc_11f60:
  %v1_11f70 = load i32, i32* @r0, align 4
  ret i32 %v1_11f70
}

define i32 @function_11f74(i32 %arg1) local_unnamed_addr {
dec_label_pc_11f74:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11f74 = load i32, i32* @r7, align 4
  store i32 %v3_11f74, i32* %stack_var_-8, align 4
  %v0_11f80 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11f80, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11f80, -4095
  br i1 %tmp, label %dec_label_pc_11fa0, label %dec_label_pc_11f90

dec_label_pc_11f90:                               ; preds = %dec_label_pc_11f74
  %v0_11f90 = call i32 @function_127c4()
  %v0_11f94 = load i32, i32* %r7.global-to-local, align 4
  %v1_11f94 = sub i32 0, %v0_11f94
  %v2_11f98 = inttoptr i32 %v0_11f90 to i32*
  store i32 %v1_11f94, i32* %v2_11f98, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_11fa0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11fa0

dec_label_pc_11fa0:                               ; preds = %dec_label_pc_11f74, %dec_label_pc_11f90
  %v1_11fa4 = phi i32 [ %v0_11f80, %dec_label_pc_11f74 ], [ -1, %dec_label_pc_11f90 ]
  %v2_11fa0 = phi i32 [ %v3_11f74, %dec_label_pc_11f74 ], [ %v2_11fa0.pre, %dec_label_pc_11f90 ]
  store i32 %v2_11fa0, i32* @r7, align 4
  ret i32 %v1_11fa4

; uselistorder directives
  uselistorder i32 %v0_11f80, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11fa0, { 1, 0 }
}

define i32 @function_11fa8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11fa8:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v6_11fa8 = load i32, i32* @r2, align 4
  %v9_11fa8 = load i32, i32* @r3, align 4
  store i32 %v9_11fa8, i32* %stack_var_-4, align 4
  %v1_11fb8 = and i32 %arg2, 64
  %v2_11fb8 = icmp eq i32 %v1_11fb8, 0
  br i1 %v2_11fb8, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_11fa8
  %v3_11fc0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v3_11fc0, i32* @r3, align 4
  %phitmp = urem i32 %v6_11fa8, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_11fa8, %bb
  %v0_11fc4 = phi i32 [ 0, %dec_label_pc_11fa8 ], [ %phitmp, %bb ]
  store i32 %v0_11fc4, i32* @r2, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_11ff4, label %dec_label_pc_11fe4

dec_label_pc_11fe4:                               ; preds = %.thread
  %v0_11fe4 = call i32 @function_127c4()
  %v0_11fe8 = load i32, i32* %r7.global-to-local, align 4
  %v1_11fe8 = sub i32 0, %v0_11fe8
  store i32 %v1_11fe8, i32* @r3, align 4
  %v2_11fec = inttoptr i32 %v0_11fe4 to i32*
  store i32 %v1_11fe8, i32* %v2_11fec, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_11ff4

dec_label_pc_11ff4:                               ; preds = %.thread, %dec_label_pc_11fe4
  %v0_11ff4 = phi i32 [ %arg1, %.thread ], [ -1, %dec_label_pc_11fe4 ]
  ret i32 %v0_11ff4

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11ff4, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_12008() local_unnamed_addr {
dec_label_pc_12008:
  %v1_12018 = load i32, i32* @r0, align 4
  ret i32 %v1_12018
}

define i32 @function_1201c(i32* %arg1) local_unnamed_addr {
dec_label_pc_1201c:
  %stack_var_-16 = alloca i32, align 4
  %v2_12020 = ptrtoint i32* %stack_var_-16 to i32
  %v2_12030 = call i32 @function_1219c(i32 %v2_12020, i32 0)
  %v2_12034 = load i32, i32* %stack_var_-16, align 4
  %v2_12038 = icmp eq i32* %arg1, null
  br i1 %v2_12038, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_1201c
  store i32 %v2_12034, i32* %arg1, align 4
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_1201c, %bb
  ret i32 %v2_12034

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @function_1204c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1204c:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12080, label %dec_label_pc_12070

dec_label_pc_12070:                               ; preds = %dec_label_pc_1204c
  %v0_12070 = call i32 @function_127c4()
  %v0_12074 = load i32, i32* %r4.global-to-local, align 4
  %v1_12074 = sub i32 0, %v0_12074
  %v2_12078 = inttoptr i32 %v0_12070 to i32*
  store i32 %v1_12074, i32* %v2_12078, align 4
  br label %dec_label_pc_12080

dec_label_pc_12080:                               ; preds = %dec_label_pc_1204c, %dec_label_pc_12070
  %v1_12088 = phi i32 [ %arg1, %dec_label_pc_1204c ], [ -1, %dec_label_pc_12070 ]
  ret i32 %v1_12088

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12080, { 1, 0 }
}

define i32 @function_1208c() local_unnamed_addr {
dec_label_pc_1208c:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1208c = load i32, i32* @r7, align 4
  store i32 %v3_1208c, i32* %stack_var_-8, align 4
  %v0_12098 = load i32, i32* @r0, align 4
  store i32 %v0_12098, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12098, -4095
  br i1 %tmp, label %dec_label_pc_120b8, label %dec_label_pc_120a8

dec_label_pc_120a8:                               ; preds = %dec_label_pc_1208c
  %v0_120a8 = call i32 @function_127c4()
  %v0_120ac = load i32, i32* %r7.global-to-local, align 4
  %v1_120ac = sub i32 0, %v0_120ac
  %v2_120b0 = inttoptr i32 %v0_120a8 to i32*
  store i32 %v1_120ac, i32* %v2_120b0, align 4
  %v2_120b8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_120b8

dec_label_pc_120b8:                               ; preds = %dec_label_pc_1208c, %dec_label_pc_120a8
  %v1_120bc = phi i32 [ %v0_12098, %dec_label_pc_1208c ], [ -1, %dec_label_pc_120a8 ]
  %v2_120b8 = phi i32 [ %v3_1208c, %dec_label_pc_1208c ], [ %v2_120b8.pre, %dec_label_pc_120a8 ]
  store i32 %v2_120b8, i32* @r7, align 4
  ret i32 %v1_120bc

; uselistorder directives
  uselistorder i32 %v0_12098, { 1, 0, 2 }
  uselistorder label %dec_label_pc_120b8, { 1, 0 }
}

define i32 @function_120c0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_120c0:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_120f0, label %dec_label_pc_120e0

dec_label_pc_120e0:                               ; preds = %dec_label_pc_120c0
  %v0_120e0 = call i32 @function_127c4()
  %v0_120e4 = load i32, i32* %r4.global-to-local, align 4
  %v1_120e4 = sub i32 0, %v0_120e4
  %v2_120e8 = inttoptr i32 %v0_120e0 to i32*
  store i32 %v1_120e4, i32* %v2_120e8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_120f0

dec_label_pc_120f0:                               ; preds = %dec_label_pc_120c0, %dec_label_pc_120e0
  %v0_120f0 = phi i32 [ %arg1, %dec_label_pc_120c0 ], [ -1, %dec_label_pc_120e0 ]
  ret i32 %v0_120f0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_120f0, { 1, 0 }
}

define i32 @function_12100(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12100:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12100 = load i32, i32* @r7, align 4
  store i32 %v3_12100, i32* %stack_var_-8, align 4
  %v0_1210c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1210c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1210c, -4095
  br i1 %tmp, label %dec_label_pc_1212c, label %dec_label_pc_1211c

dec_label_pc_1211c:                               ; preds = %dec_label_pc_12100
  %v0_1211c = call i32 @function_127c4()
  %v0_12120 = load i32, i32* %r7.global-to-local, align 4
  %v1_12120 = sub i32 0, %v0_12120
  store i32 %v1_12120, i32* @r3, align 4
  %v2_12124 = inttoptr i32 %v0_1211c to i32*
  store i32 %v1_12120, i32* %v2_12124, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1212c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1212c

dec_label_pc_1212c:                               ; preds = %dec_label_pc_12100, %dec_label_pc_1211c
  %v1_12130 = phi i32 [ %v0_1210c, %dec_label_pc_12100 ], [ -1, %dec_label_pc_1211c ]
  %v2_1212c = phi i32 [ %v3_12100, %dec_label_pc_12100 ], [ %v2_1212c.pre, %dec_label_pc_1211c ]
  store i32 %v2_1212c, i32* @r7, align 4
  ret i32 %v1_12130

; uselistorder directives
  uselistorder i32 %v0_1210c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1212c, { 1, 0 }
}

define i32 @function_12134(i32 %arg1) local_unnamed_addr {
dec_label_pc_12134:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12134 = load i32, i32* @r7, align 4
  store i32 %v3_12134, i32* %stack_var_-8, align 4
  %v0_12140 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12140, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12140, -4095
  br i1 %tmp, label %dec_label_pc_12160, label %dec_label_pc_12150

dec_label_pc_12150:                               ; preds = %dec_label_pc_12134
  %v0_12150 = call i32 @function_127c4()
  %v0_12154 = load i32, i32* %r7.global-to-local, align 4
  %v1_12154 = sub i32 0, %v0_12154
  %v2_12158 = inttoptr i32 %v0_12150 to i32*
  store i32 %v1_12154, i32* %v2_12158, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12160.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12160

dec_label_pc_12160:                               ; preds = %dec_label_pc_12134, %dec_label_pc_12150
  %v1_12164 = phi i32 [ %v0_12140, %dec_label_pc_12134 ], [ -1, %dec_label_pc_12150 ]
  %v2_12160 = phi i32 [ %v3_12134, %dec_label_pc_12134 ], [ %v2_12160.pre, %dec_label_pc_12150 ]
  store i32 %v2_12160, i32* @r7, align 4
  ret i32 %v1_12164

; uselistorder directives
  uselistorder i32 %v0_12140, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12160, { 1, 0 }
}

define i32 @function_12168(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12168:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12168 = load i32, i32* @r7, align 4
  store i32 %v3_12168, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12190, label %dec_label_pc_12180

dec_label_pc_12180:                               ; preds = %dec_label_pc_12168
  %v0_12180 = call i32 @function_127c4()
  %v0_12184 = load i32, i32* %r7.global-to-local, align 4
  %v1_12184 = sub i32 0, %v0_12184
  %v2_12188 = inttoptr i32 %v0_12180 to i32*
  store i32 %v1_12184, i32* %v2_12188, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_12194.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12190

dec_label_pc_12190:                               ; preds = %dec_label_pc_12168, %dec_label_pc_12180
  %v2_12194 = phi i32 [ %v3_12168, %dec_label_pc_12168 ], [ %v2_12194.pre, %dec_label_pc_12180 ]
  %v0_12190 = phi i32 [ %arg1, %dec_label_pc_12168 ], [ -1, %dec_label_pc_12180 ]
  store i32 %v2_12194, i32* @r7, align 4
  ret i32 %v0_12190

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12190, { 1, 0 }
}

define i32 @function_1219c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1219c:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1219c = load i32, i32* @r7, align 4
  store i32 %v3_1219c, i32* %stack_var_-8, align 4
  %v0_121a8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_121a8, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_121a8, -4095
  br i1 %tmp, label %dec_label_pc_121c8, label %dec_label_pc_121b8

dec_label_pc_121b8:                               ; preds = %dec_label_pc_1219c
  %v0_121b8 = call i32 @function_127c4()
  %v0_121bc = load i32, i32* %r7.global-to-local, align 4
  %v1_121bc = sub i32 0, %v0_121bc
  store i32 %v1_121bc, i32* @r3, align 4
  %v2_121c0 = inttoptr i32 %v0_121b8 to i32*
  store i32 %v1_121bc, i32* %v2_121c0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_121c8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_121c8

dec_label_pc_121c8:                               ; preds = %dec_label_pc_1219c, %dec_label_pc_121b8
  %v1_121cc = phi i32 [ %v0_121a8, %dec_label_pc_1219c ], [ -1, %dec_label_pc_121b8 ]
  %v2_121c8 = phi i32 [ %v3_1219c, %dec_label_pc_1219c ], [ %v2_121c8.pre, %dec_label_pc_121b8 ]
  store i32 %v2_121c8, i32* @r7, align 4
  ret i32 %v1_121cc

; uselistorder directives
  uselistorder i32 %v0_121a8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_121c8, { 1, 0 }
}

define i32 @function_121d0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_121d0:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %v9_121d0 = load i32, i32* @r3, align 4
  store i32 %v9_121d0, i32* %stack_var_-4, align 4
  %v2_121e8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_121e8, i32* @r3, align 4
  %v0_1220c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1220c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1220c, -4095
  br i1 %tmp, label %dec_label_pc_1222c, label %dec_label_pc_1221c

dec_label_pc_1221c:                               ; preds = %dec_label_pc_121d0
  %v0_1221c = call i32 @function_127c4()
  %v0_12220 = load i32, i32* %r7.global-to-local, align 4
  %v1_12220 = sub i32 0, %v0_12220
  store i32 %v1_12220, i32* @r3, align 4
  %v2_12224 = inttoptr i32 %v0_1221c to i32*
  store i32 %v1_12220, i32* %v2_12224, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1222c

dec_label_pc_1222c:                               ; preds = %dec_label_pc_121d0, %dec_label_pc_1221c
  %v1_12238 = phi i32 [ %v0_1220c, %dec_label_pc_121d0 ], [ -1, %dec_label_pc_1221c ]
  ret i32 %v1_12238

; uselistorder directives
  uselistorder i32 %v0_1220c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1222c, { 1, 0 }
}

define i32 @function_1223c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1223c:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_12278 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12278, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12278, -4095
  br i1 %tmp, label %dec_label_pc_12298, label %dec_label_pc_12288

dec_label_pc_12288:                               ; preds = %dec_label_pc_1223c
  %v0_12288 = call i32 @function_127c4()
  %v0_1228c = load i32, i32* %r7.global-to-local, align 4
  %v1_1228c = sub i32 0, %v0_1228c
  %v2_12290 = inttoptr i32 %v0_12288 to i32*
  store i32 %v1_1228c, i32* %v2_12290, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12298

dec_label_pc_12298:                               ; preds = %dec_label_pc_1223c, %dec_label_pc_12288
  %v1_122a4 = phi i32 [ %v0_12278, %dec_label_pc_1223c ], [ -1, %dec_label_pc_12288 ]
  ret i32 %v1_122a4

; uselistorder directives
  uselistorder i32 %v0_12278, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12298, { 1, 0 }
}

define i32 @function_122a8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_122a8:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_122a8 = load i32, i32* @r7, align 4
  store i32 %v3_122a8, i32* %stack_var_-8, align 4
  %v0_122b4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_122b4, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_122b4, -4095
  br i1 %tmp, label %dec_label_pc_122d4, label %dec_label_pc_122c4

dec_label_pc_122c4:                               ; preds = %dec_label_pc_122a8
  %v0_122c4 = call i32 @function_127c4()
  %v0_122c8 = load i32, i32* %r7.global-to-local, align 4
  %v1_122c8 = sub i32 0, %v0_122c8
  %v2_122cc = inttoptr i32 %v0_122c4 to i32*
  store i32 %v1_122c8, i32* %v2_122cc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_122d4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_122d4

dec_label_pc_122d4:                               ; preds = %dec_label_pc_122a8, %dec_label_pc_122c4
  %v1_122d8 = phi i32 [ %v0_122b4, %dec_label_pc_122a8 ], [ -1, %dec_label_pc_122c4 ]
  %v2_122d4 = phi i32 [ %v3_122a8, %dec_label_pc_122a8 ], [ %v2_122d4.pre, %dec_label_pc_122c4 ]
  store i32 %v2_122d4, i32* @r7, align 4
  ret i32 %v1_122d8

; uselistorder directives
  uselistorder i32 %v0_122b4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_122d4, { 1, 0 }
}

define i32 @function_122dc(i32 %arg1) local_unnamed_addr {
dec_label_pc_122dc:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_122dc = load i32, i32* @r7, align 4
  store i32 %v3_122dc, i32* %stack_var_-8, align 4
  %v0_122e8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_122e8, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_122e8, -4095
  br i1 %tmp, label %dec_label_pc_12308, label %dec_label_pc_122f8

dec_label_pc_122f8:                               ; preds = %dec_label_pc_122dc
  %v0_122f8 = call i32 @function_127c4()
  %v0_122fc = load i32, i32* %r7.global-to-local, align 4
  %v1_122fc = sub i32 0, %v0_122fc
  %v2_12300 = inttoptr i32 %v0_122f8 to i32*
  store i32 %v1_122fc, i32* %v2_12300, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12308.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12308

dec_label_pc_12308:                               ; preds = %dec_label_pc_122dc, %dec_label_pc_122f8
  %v1_1230c = phi i32 [ %v0_122e8, %dec_label_pc_122dc ], [ -1, %dec_label_pc_122f8 ]
  %v2_12308 = phi i32 [ %v3_122dc, %dec_label_pc_122dc ], [ %v2_12308.pre, %dec_label_pc_122f8 ]
  store i32 %v2_12308, i32* @r7, align 4
  ret i32 %v1_1230c

; uselistorder directives
  uselistorder i32 %v0_122e8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12308, { 1, 0 }
}

define i32 @function_12310(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12310:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v9_12310 = load i32, i32* @r3, align 4
  store i32 %v9_12310, i32* %stack_var_-4, align 4
  %v2_1231c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_1231c, i32* @r3, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12350, label %dec_label_pc_12340

dec_label_pc_12340:                               ; preds = %dec_label_pc_12310
  %v0_12340 = call i32 @function_127c4()
  %v0_12344 = load i32, i32* %r7.global-to-local, align 4
  %v1_12344 = sub i32 0, %v0_12344
  store i32 %v1_12344, i32* @r3, align 4
  %v2_12348 = inttoptr i32 %v0_12340 to i32*
  store i32 %v1_12344, i32* %v2_12348, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_12350

dec_label_pc_12350:                               ; preds = %dec_label_pc_12310, %dec_label_pc_12340
  %v0_12350 = phi i32 [ %arg1, %dec_label_pc_12310 ], [ -1, %dec_label_pc_12340 ]
  ret i32 %v0_12350

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12350, { 1, 0 }
}

define i32 @function_12364(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12364:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12364 = load i32, i32* @r7, align 4
  store i32 %v3_12364, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12390, label %dec_label_pc_12380

dec_label_pc_12380:                               ; preds = %dec_label_pc_12364
  %v0_12380 = call i32 @function_127c4()
  %v0_12384 = load i32, i32* %r7.global-to-local, align 4
  %v1_12384 = sub i32 0, %v0_12384
  %v2_12388 = inttoptr i32 %v0_12380 to i32*
  store i32 %v1_12384, i32* %v2_12388, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_12394.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12390

dec_label_pc_12390:                               ; preds = %dec_label_pc_12364, %dec_label_pc_12380
  %v2_12394 = phi i32 [ %v3_12364, %dec_label_pc_12364 ], [ %v2_12394.pre, %dec_label_pc_12380 ]
  %v0_12390 = phi i32 [ %arg1, %dec_label_pc_12364 ], [ -1, %dec_label_pc_12380 ]
  store i32 %v2_12394, i32* @r7, align 4
  ret i32 %v0_12390

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12390, { 1, 0 }
}

define i32 @function_1239c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1239c:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1239c = load i32, i32* @r7, align 4
  store i32 %v3_1239c, i32* %stack_var_-8, align 4
  %v0_123a8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_123a8, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_123a8, -4095
  br i1 %tmp, label %dec_label_pc_123c8, label %dec_label_pc_123b8

dec_label_pc_123b8:                               ; preds = %dec_label_pc_1239c
  %v0_123b8 = call i32 @function_127c4()
  %v0_123bc = load i32, i32* %r7.global-to-local, align 4
  %v1_123bc = sub i32 0, %v0_123bc
  store i32 %v1_123bc, i32* @r3, align 4
  %v2_123c0 = inttoptr i32 %v0_123b8 to i32*
  store i32 %v1_123bc, i32* %v2_123c0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_123c8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_123c8

dec_label_pc_123c8:                               ; preds = %dec_label_pc_1239c, %dec_label_pc_123b8
  %v1_123cc = phi i32 [ %v0_123a8, %dec_label_pc_1239c ], [ -1, %dec_label_pc_123b8 ]
  %v2_123c8 = phi i32 [ %v3_1239c, %dec_label_pc_1239c ], [ %v2_123c8.pre, %dec_label_pc_123b8 ]
  store i32 %v2_123c8, i32* @r7, align 4
  ret i32 %v1_123cc

; uselistorder directives
  uselistorder i32 %v0_123a8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_123c8, { 1, 0 }
}

define i32 @function_123d0(i32* %arg1) local_unnamed_addr {
dec_label_pc_123d0:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_123d0 = load i32, i32* @r4, align 4
  store i32 %v3_123d0, i32* %stack_var_-24, align 4
  %v9_123d0 = load i32, i32* @r6, align 4
  %v12_123d0 = load i32, i32* @r7, align 4
  %v15_123d0 = load i32, i32* @r8, align 4
  %v18_123d0 = load i32, i32* @lr, align 4
  %v2_123d4 = load i32, i32* %arg1, align 4
  store i32 %v2_123d4, i32* %r4.global-to-local, align 4
  %v3_123dc = icmp eq i32 %v2_123d4, -1
  store i32 %tmp, i32* @r7, align 4
  store i32 98320, i32* @r6, align 4
  br i1 %v3_123dc, label %dec_label_pc_123f0, label %dec_label_pc_12404

dec_label_pc_123f0:                               ; preds = %dec_label_pc_123d0
  %v0_123f0 = call i32 @function_127c4()
  store i32 9, i32* %r3.global-to-local, align 4
  %v0_123f8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_123f8, i32* %r2.global-to-local, align 4
  %v2_123fc = inttoptr i32 %v0_123f0 to i32*
  store i32 9, i32* %v2_123fc, align 4
  %v0_124a4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_124a4

dec_label_pc_12404:                               ; preds = %dec_label_pc_123d0
  store i32 36, i32* %r3.global-to-local, align 4
  %v1_12408 = add i32 %tmp, 24
  store i32 %v1_12408, i32* %r4.global-to-local, align 4
  store i32 %v1_12408, i32* %r2.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_1241c = load i32, i32* inttoptr (i32 98392 to i32*), align 8
  call void @__pseudo_branch(i32 %v4_1241c)
  store i32 -1, i32* @r8, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_12434 = load i32, i32* @r6, align 4
  %v2_12434 = add i32 %v0_12434, 16
  %v3_12434 = inttoptr i32 %v2_12434 to i32*
  %v4_12434 = load i32, i32* %v3_12434, align 4
  call void @__pseudo_branch(i32 %v4_12434)
  %v0_12440 = load i32, i32* @r7, align 4
  %v1_12440 = inttoptr i32 %v0_12440 to i32*
  %v2_12440 = load i32, i32* %v1_12440, align 4
  store i32 %v2_12440, i32* @r4, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v0_12450 = load i32, i32* @r8, align 4
  store i32 %v0_12450, i32* %v1_12440, align 4
  %v0_12454 = load i32, i32* @r6, align 4
  %v1_12454 = load i32, i32* %r3.global-to-local, align 4
  %v2_12454 = add i32 %v1_12454, %v0_12454
  %v3_12454 = inttoptr i32 %v2_12454 to i32*
  %v4_12454 = load i32, i32* %v3_12454, align 4
  store i32 ptrtoint (i32* @global_var_12460.347 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_12454)
  %v0_12460 = load i32, i32* @r7, align 4
  %v1_12460 = add i32 %v0_12460, 12
  %v2_12460 = inttoptr i32 %v1_12460 to i32*
  %v3_12460 = load i32, i32* %v2_12460, align 4
  store i32 %v3_12460, i32* @r0, align 4
  %v0_12464 = call i32 @function_13e30()
  %v0_12468 = load i32, i32* @r7, align 4
  store i32 %v0_12468, i32* @r0, align 4
  %v0_1246c = call i32 @function_13e30()
  %v0_12474 = load i32, i32* @r4, align 4
  %tmp11 = icmp ult i32 %v0_12474, -4095
  br i1 %tmp11, label %dec_label_pc_124a0, label %dec_label_pc_12490

dec_label_pc_12490:                               ; preds = %dec_label_pc_12404
  %v0_12490 = call i32 @function_127c4()
  %v0_12494 = load i32, i32* @r4, align 4
  %v1_12494 = sub i32 0, %v0_12494
  store i32 %v1_12494, i32* %r3.global-to-local, align 4
  %v2_12498 = inttoptr i32 %v0_12490 to i32*
  store i32 %v1_12494, i32* %v2_12498, align 4
  %v0_1249c = load i32, i32* @r8, align 4
  br label %dec_label_pc_124a0

dec_label_pc_124a0:                               ; preds = %dec_label_pc_12404, %dec_label_pc_12490
  %v0_124a0 = phi i32 [ %v0_12474, %dec_label_pc_12404 ], [ %v0_1249c, %dec_label_pc_12490 ]
  store i32 %v0_124a0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_124a4

dec_label_pc_124a4:                               ; preds = %dec_label_pc_123f0, %dec_label_pc_124a0
  %v0_124a4 = phi i32 [ %v0_124a4.pre, %dec_label_pc_123f0 ], [ %v0_124a0, %dec_label_pc_124a0 ]
  %v2_124ac = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_124ac, i32* @r4, align 4
  store i32 %v9_123d0, i32* @r6, align 4
  store i32 %v12_123d0, i32* @r7, align 4
  store i32 %v15_123d0, i32* @r8, align 4
  store i32 %v18_123d0, i32* @lr, align 4
  ret i32 %v0_124a4

; uselistorder directives
  uselistorder i32 %v0_12474, { 1, 0 }
  uselistorder label %dec_label_pc_124a4, { 1, 0 }
  uselistorder label %dec_label_pc_124a0, { 1, 0 }
}

define i32 @function_124b4(i32 %arg1) local_unnamed_addr {
dec_label_pc_124b4:
  %v0_124b4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_124b4, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_124b4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_124b4, %bb
  %v10_124c4 = phi i32 [ %arg1, %dec_label_pc_124b4 ], [ 0, %bb ]
  ret i32 %v10_124c4

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @function_124c8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_124c8:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v6_124c8 = load i32, i32* @r5, align 4
  %v9_124c8 = load i32, i32* @r6, align 4
  %v12_124c8 = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 48, i32* @r0, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_124dc = call i32 @function_12dc4()
  %v2_124e4 = icmp eq i32 %v0_124dc, 0
  store i32 98320, i32* @r6, align 4
  br i1 %v2_124e4, label %bb, label %dec_label_pc_124f4

bb:                                               ; preds = %dec_label_pc_124c8
  br label %dec_label_pc_12580

dec_label_pc_124f4:                               ; preds = %dec_label_pc_124c8
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_124f8 = load i32, i32* @r4, align 4
  %v2_124f8 = icmp ugt i32 %v0_124f8, 511
  %v2_124fc = add i32 %v0_124dc, 4
  %v3_124fc = inttoptr i32 %v2_124fc to i32*
  store i32 0, i32* %v3_124fc, align 4
  %v0_12500 = load i32, i32* %r3.global-to-local, align 4
  %v2_12500 = add i32 %v0_124dc, 16
  %v3_12500 = inttoptr i32 %v2_12500 to i32*
  store i32 %v0_12500, i32* %v3_12500, align 4
  %v0_12504 = load i32, i32* %r3.global-to-local, align 4
  %v2_12504 = add i32 %v0_124dc, 8
  %v3_12504 = inttoptr i32 %v2_12504 to i32*
  store i32 %v0_12504, i32* %v3_12504, align 4
  br i1 %v2_124f8, label %.thread, label %bb16

.thread:                                          ; preds = %dec_label_pc_124f4
  %v0_1250c2 = load i32, i32* @r4, align 4
  %v2_1250c3 = add i32 %v0_124dc, 20
  %v3_1250c4 = inttoptr i32 %v2_1250c3 to i32*
  store i32 %v0_1250c2, i32* %v3_1250c4, align 4
  br label %bb17

bb16:                                             ; preds = %dec_label_pc_124f4
  %v1_12508 = load i32, i32* %r3.global-to-local, align 4
  %v2_12508 = add i32 %v1_12508, 512
  store i32 %v2_12508, i32* %r3.global-to-local, align 4
  %v0_1250c = load i32, i32* @r4, align 4
  %v2_1250c = add i32 %v0_124dc, 20
  %v3_1250c = inttoptr i32 %v2_1250c to i32*
  store i32 %v0_1250c, i32* %v3_1250c, align 4
  %v1_12510 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_12510, i32* %v3_1250c, align 4
  br label %bb17

bb17:                                             ; preds = %.thread, %bb16
  store i32 %v0_124dc, i32* @r5, align 4
  %v0_12518 = load i32, i32* @r7, align 4
  %v2_12518 = inttoptr i32 %v0_124dc to i32*
  store i32 %v0_12518, i32* %v2_12518, align 4
  %v0_1251c = load i32, i32* @r5, align 4
  %v1_1251c = add i32 %v0_1251c, 20
  %v2_1251c = inttoptr i32 %v1_1251c to i32*
  %v3_1251c = load i32, i32* %v2_1251c, align 4
  store i32 %v3_1251c, i32* %r1.global-to-local, align 4
  %v2_12524 = call i32 @function_136e4(i32 1, i32 %v3_1251c)
  %v2_12528 = icmp eq i32 %v2_12524, 0
  store i32 %v2_12524, i32* @r4, align 4
  %v1_12530 = load i32, i32* @r5, align 4
  %v2_12530 = add i32 %v1_12530, 12
  %v3_12530 = inttoptr i32 %v2_12530 to i32*
  store i32 %v2_12524, i32* %v3_12530, align 4
  br i1 %v2_12528, label %dec_label_pc_12538, label %dec_label_pc_12548

dec_label_pc_12538:                               ; preds = %bb17
  %v0_12538 = load i32, i32* @r5, align 4
  store i32 %v0_12538, i32* @r0, align 4
  %v0_1253c = call i32 @function_13e30()
  %v0_12540 = load i32, i32* @r4, align 4
  br label %dec_label_pc_12580

dec_label_pc_12548:                               ; preds = %bb17
  %v0_1254c = load i32, i32* @r6, align 4
  %v2_1254c = add i32 %v0_1254c, -1652
  store i32 %v2_1254c, i32* %r3.global-to-local, align 4
  %v1_12554 = inttoptr i32 %v2_1254c to i32*
  %v2_12554 = load i32, i32* %v1_12554, align 4
  %v3_12554 = add i32 %v0_1254c, -1648
  %v4_12554 = inttoptr i32 %v3_12554 to i32*
  %v5_12554 = load i32, i32* %v4_12554, align 4
  store i32 %v5_12554, i32* %r1.global-to-local, align 4
  %v6_12554 = add i32 %v0_1254c, -1644
  %v7_12554 = inttoptr i32 %v6_12554 to i32*
  %v8_12554 = load i32, i32* %v7_12554, align 4
  store i32 %v8_12554, i32* %r2.global-to-local, align 4
  %v9_12554 = add i32 %v0_1254c, -1640
  %v10_12554 = inttoptr i32 %v9_12554 to i32*
  %v11_12554 = load i32, i32* %v10_12554, align 4
  store i32 %v11_12554, i32* %r3.global-to-local, align 4
  %v12_12554 = add i32 %v0_1254c, -1636
  %v1_12560 = inttoptr i32 %v12_12554 to i32*
  %v2_12560 = load i32, i32* %v1_12560, align 4
  %v3_12560 = add i32 %v0_1254c, -1632
  %v4_12560 = inttoptr i32 %v3_12560 to i32*
  %v5_12560 = load i32, i32* %v4_12560, align 4
  store i32 %v2_12560, i32* %stack_var_-32, align 4
  store i32 %v5_12554, i32* %r1.global-to-local, align 4
  store i32 %v8_12554, i32* %r2.global-to-local, align 4
  store i32 %v11_12554, i32* %r3.global-to-local, align 4
  %v0_12570 = load i32, i32* @r5, align 4
  %v1_12570 = add i32 %v0_12570, 24
  %v1_12574 = inttoptr i32 %v1_12570 to i32*
  store i32 %v2_12554, i32* %v1_12574, align 4
  %v3_12574 = add i32 %v0_12570, 28
  %v4_12574 = inttoptr i32 %v3_12574 to i32*
  %v5_12574 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_12574, i32* %v4_12574, align 4
  %v6_12574 = add i32 %v0_12570, 32
  %v7_12574 = inttoptr i32 %v6_12574 to i32*
  %v8_12574 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_12574, i32* %v7_12574, align 4
  %v9_12574 = add i32 %v0_12570, 36
  %v10_12574 = inttoptr i32 %v9_12574 to i32*
  %v11_12574 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_12574, i32* %v10_12574, align 4
  %v12_12574 = add i32 %v0_12570, 40
  %v2_12578 = load i32, i32* %stack_var_-32, align 4
  store i32 %v5_12560, i32* %r1.global-to-local, align 4
  %v1_1257c = inttoptr i32 %v12_12574 to i32*
  store i32 %v2_12578, i32* %v1_1257c, align 4
  %v3_1257c = add i32 %v0_12570, 44
  %v4_1257c = inttoptr i32 %v3_1257c to i32*
  %v5_1257c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1257c, i32* %v4_1257c, align 4
  %v0_12580.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_12580

dec_label_pc_12580:                               ; preds = %bb, %dec_label_pc_12538, %dec_label_pc_12548
  %v0_12580 = phi i32 [ 0, %bb ], [ %v0_12540, %dec_label_pc_12538 ], [ %v0_12580.pre, %dec_label_pc_12548 ]
  store i32 %v6_124c8, i32* @r5, align 4
  store i32 %v9_124c8, i32* @r6, align 4
  store i32 %v12_124c8, i32* @r7, align 4
  ret i32 %v0_12580

; uselistorder directives
  uselistorder i32 %v2_12524, { 1, 0, 2 }
  uselistorder i32 %v0_124dc, { 2, 1, 3, 0, 5, 6, 4, 7 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 512, { 7, 4, 0, 5, 8, 1, 9, 2, 10, 3, 11, 6, 12 }
  uselistorder label %dec_label_pc_12580, { 2, 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @function_12598(i32 %arg1) local_unnamed_addr {
dec_label_pc_12598:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v6_12598 = load i32, i32* @r7, align 4
  %v2_125a0 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %arg1, i32* @r7, align 4
  %tmp7 = icmp ult i32 %arg1, -4095
  br i1 %tmp7, label %dec_label_pc_125c8, label %dec_label_pc_125b8

dec_label_pc_125b8:                               ; preds = %dec_label_pc_12598
  %v0_125b8 = call i32 @function_127c4()
  %v0_125bc = load i32, i32* @r7, align 4
  %v1_125bc = sub i32 0, %v0_125bc
  %v2_125c0 = inttoptr i32 %v0_125b8 to i32*
  store i32 %v1_125bc, i32* %v2_125c0, align 4
  br label %dec_label_pc_125ec

dec_label_pc_125c8:                               ; preds = %dec_label_pc_12598
  %v1_125c8 = icmp slt i32 %arg1, 0
  br i1 %v1_125c8, label %dec_label_pc_125ec, label %dec_label_pc_125d0

dec_label_pc_125d0:                               ; preds = %dec_label_pc_125c8
  store i32 %v2_125a0, i32* @r1, align 4
  %v0_125d4 = call i32 @function_152e0()
  %v1_125d8 = icmp slt i32 %v0_125d4, 0
  br i1 %v1_125d8, label %dec_label_pc_125e0, label %dec_label_pc_125f4

dec_label_pc_125e0:                               ; preds = %dec_label_pc_125d0
  br label %dec_label_pc_125ec

dec_label_pc_125ec:                               ; preds = %dec_label_pc_125e0, %dec_label_pc_125c8, %dec_label_pc_125b8
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12630

dec_label_pc_125f4:                               ; preds = %dec_label_pc_125d0
  %v0_125fc = load i32, i32* @r7, align 4
  %v3_12600 = call i32 @function_1223c(i32 %v0_125fc, i32 2, i32 1)
  %v0_12604 = load i32, i32* @r7, align 4
  %v2_1260c = call i32 @function_124c8(i32 %v0_12604, i32 %tmp)
  store i32 %v2_1260c, i32* %r4.global-to-local, align 4
  %v2_12610 = icmp eq i32 %v2_1260c, 0
  br i1 %v2_12610, label %dec_label_pc_12618, label %dec_label_pc_12630

dec_label_pc_12618:                               ; preds = %dec_label_pc_125f4
  %v0_12624 = call i32 @function_127c4()
  %v2_1262c = inttoptr i32 %v0_12624 to i32*
  store i32 12, i32* %v2_1262c, align 4
  %v0_12630.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12630

dec_label_pc_12630:                               ; preds = %dec_label_pc_125f4, %dec_label_pc_125ec, %dec_label_pc_12618
  %v0_12630 = phi i32 [ %v2_1260c, %dec_label_pc_125f4 ], [ 0, %dec_label_pc_125ec ], [ %v0_12630.pre, %dec_label_pc_12618 ]
  store i32 %v6_12598, i32* @r7, align 4
  ret i32 %v0_12630

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_12630, { 2, 0, 1 }
}

define i32 @function_12640(i32 %arg1) local_unnamed_addr {
dec_label_pc_12640:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v0_12640 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12640, label %bb, label %dec_label_pc_12640._crit_edge

dec_label_pc_12640._crit_edge:                    ; preds = %dec_label_pc_12640
  br label %bb11

bb:                                               ; preds = %dec_label_pc_12640
  br label %bb11

bb11:                                             ; preds = %dec_label_pc_12640._crit_edge, %bb
  %v2_12648 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_12648, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_12654 = call i32 @function_152e0()
  store i32 %v0_12654, i32* @r5, align 4
  %v2_12658 = icmp eq i32 %v0_12654, 0
  br i1 %v2_12658, label %dec_label_pc_12660, label %dec_label_pc_126c8

dec_label_pc_12660:                               ; preds = %bb11
  %v1_12664 = and i32 %tmp5, ptrtoint (i32* @global_var_f000.351 to i32)
  store i32 %v1_12664, i32* @r3, align 4
  %v7_12668 = icmp eq i32 %v1_12664, 16384
  br i1 %v7_12668, label %dec_label_pc_12680, label %dec_label_pc_12670

dec_label_pc_12670:                               ; preds = %dec_label_pc_12660
  %v0_12670 = call i32 @function_127c4()
  br label %dec_label_pc_126ac

dec_label_pc_12680:                               ; preds = %dec_label_pc_12660
  %v0_12680 = load i32, i32* @r4, align 4
  %v2_12688 = call i32 @function_121d0(i32 %v0_12680, i32 3)
  %v7_1268c = icmp eq i32 %v2_12688, -1
  br i1 %v7_1268c, label %dec_label_pc_126c8, label %dec_label_pc_12694

dec_label_pc_12694:                               ; preds = %dec_label_pc_12680
  %v1_12694 = urem i32 %v2_12688, 4
  %v7_12698 = icmp eq i32 %v1_12694, 1
  br i1 %v7_12698, label %dec_label_pc_126a0, label %dec_label_pc_126b4

dec_label_pc_126a0:                               ; preds = %dec_label_pc_12694
  %v0_126a0 = call i32 @function_127c4()
  br label %dec_label_pc_126ac

dec_label_pc_126ac:                               ; preds = %dec_label_pc_12670, %dec_label_pc_126a0
  %storemerge2 = phi i32 [ %v0_12670, %dec_label_pc_12670 ], [ %v0_126a0, %dec_label_pc_126a0 ]
  %storemerge = phi i32 [ 20, %dec_label_pc_12670 ], [ 22, %dec_label_pc_126a0 ]
  %storemerge1 = load i32, i32* @r5, align 4
  store i32 %storemerge1, i32* %r2.global-to-local, align 4
  %v2_126ac = inttoptr i32 %storemerge2 to i32*
  store i32 %storemerge, i32* %v2_126ac, align 4
  %v0_126cc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_126cc

dec_label_pc_126b4:                               ; preds = %dec_label_pc_12694
  %v0_126b4 = load i32, i32* @r4, align 4
  %v2_126bc = call i32 @function_124c8(i32 %v0_126b4, i32 %tmp)
  store i32 %v2_126bc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_126cc

dec_label_pc_126c8:                               ; preds = %bb11, %dec_label_pc_12680
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_126cc

dec_label_pc_126cc:                               ; preds = %dec_label_pc_126b4, %dec_label_pc_126ac, %dec_label_pc_126c8
  %v0_126cc = phi i32 [ %v2_126bc, %dec_label_pc_126b4 ], [ %v0_126cc.pre, %dec_label_pc_126ac ], [ 0, %dec_label_pc_126c8 ]
  ret i32 %v0_126cc

; uselistorder directives
  uselistorder i32 %v2_12688, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i32)* @function_124c8, { 1, 0 }
  uselistorder i32 ()* @function_152e0, { 1, 0 }
  uselistorder label %dec_label_pc_126cc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_126c8, { 1, 0 }
  uselistorder label %dec_label_pc_126ac, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @function_126dc(i32* %arg1) local_unnamed_addr {
dec_label_pc_126dc:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_126dc = load i32, i32* @r4, align 4
  %v6_126dc = load i32, i32* @r5, align 4
  %v9_126dc = load i32, i32* @r6, align 4
  %v12_126dc = load i32, i32* @r7, align 4
  %v15_126dc = load i32, i32* @lr, align 4
  store i32 98320, i32* @r6, align 4
  %v1_126f0 = add i32 %tmp, 24
  store i32 %v1_126f0, i32* @r4, align 4
  %v4_126f4 = load i32, i32* inttoptr (i32 98356 to i32*), align 4
  store i32 %v4_126f4, i32* %r1.global-to-local, align 4
  store i32 %v1_126f0, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_12708 = load i32, i32* inttoptr (i32 98392 to i32*), align 8
  call void @__pseudo_branch(i32 %v4_12708)
  %v0_1271c = load i32, i32* @r6, align 4
  %v2_1271c = add i32 %v0_1271c, 16
  %v3_1271c = inttoptr i32 %v2_1271c to i32*
  %v4_1271c = load i32, i32* %v3_1271c, align 4
  store i32 %v4_1271c, i32* @ip, align 4
  store i32 75560, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1271c)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_1272c

dec_label_pc_1272c:                               ; preds = %dec_label_pc_1275c, %dec_label_pc_126dc
  %v0_1272c = load i32, i32* @r5, align 4
  %v1_1272c = add i32 %v0_1272c, 4
  %v2_1272c = inttoptr i32 %v1_1272c to i32*
  %v3_1272c = load i32, i32* %v2_1272c, align 4
  store i32 %v3_1272c, i32* %r2.global-to-local, align 4
  %v4_1272c = add i32 %v0_1272c, 8
  %v5_1272c = inttoptr i32 %v4_1272c to i32*
  %v6_1272c = load i32, i32* %v5_1272c, align 4
  %tmp10 = icmp ugt i32 %v6_1272c, %v3_1272c
  br i1 %tmp10, label %dec_label_pc_1275c, label %dec_label_pc_12738

dec_label_pc_12738:                               ; preds = %dec_label_pc_1272c
  %v1_12738 = inttoptr i32 %v0_1272c to i32*
  %v2_12738 = load i32, i32* %v1_12738, align 4
  %v1_1273c = add i32 %v0_1272c, 12
  %v2_1273c = inttoptr i32 %v1_1273c to i32*
  %v3_1273c = load i32, i32* %v2_1273c, align 4
  store i32 %v3_1273c, i32* %r1.global-to-local, align 4
  %v1_12740 = add i32 %v0_1272c, 20
  %v2_12740 = inttoptr i32 %v1_12740 to i32*
  %v3_12740 = load i32, i32* %v2_12740, align 4
  store i32 %v3_12740, i32* %r2.global-to-local, align 4
  %v4_12744 = call i32 @function_1524c(i32 %v2_12738, i32 %v3_1273c, i32 %v3_12740, i32 %v6_1272c)
  %tmp9 = icmp slt i32 %v4_12744, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_12754

.thread:                                          ; preds = %dec_label_pc_12738
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_12788

dec_label_pc_12754:                               ; preds = %dec_label_pc_12738
  %v1_12754 = load i32, i32* @r5, align 4
  %v2_12754 = add i32 %v1_12754, 8
  %v3_12754 = inttoptr i32 %v2_12754 to i32*
  store i32 %v4_12744, i32* %v3_12754, align 4
  %v0_12758 = load i32, i32* @r7, align 4
  %v1_12758 = load i32, i32* @r5, align 4
  %v2_12758 = add i32 %v1_12758, 4
  %v3_12758 = inttoptr i32 %v2_12758 to i32*
  store i32 %v0_12758, i32* %v3_12758, align 4
  %v0_1275c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1275c

dec_label_pc_1275c:                               ; preds = %dec_label_pc_1272c, %dec_label_pc_12754
  %v1_1276c = phi i32 [ %v0_1272c, %dec_label_pc_1272c ], [ %v0_1275c.pre, %dec_label_pc_12754 ]
  %v1_1275c = add i32 %v1_1276c, 4
  %v2_1275c = inttoptr i32 %v1_1275c to i32*
  %v3_1275c = load i32, i32* %v2_1275c, align 4
  store i32 %v3_1275c, i32* %r2.global-to-local, align 4
  %v1_12760 = add i32 %v1_1276c, 12
  %v2_12760 = inttoptr i32 %v1_12760 to i32*
  %v3_12760 = load i32, i32* %v2_12760, align 4
  store i32 %v3_12760, i32* %r1.global-to-local, align 4
  %v2_12764 = add i32 %v3_12760, %v3_1275c
  store i32 %v2_12764, i32* @r4, align 4
  %v1_12768 = add i32 %v2_12764, 4
  %v2_12768 = inttoptr i32 %v1_12768 to i32*
  %v3_12768 = load i32, i32* %v2_12768, align 4
  %v2_1276c = add i32 %v1_1276c, 16
  %v3_1276c = inttoptr i32 %v2_1276c to i32*
  store i32 %v3_12768, i32* %v3_1276c, align 4
  %v0_12770 = load i32, i32* @r4, align 4
  %v1_12770 = add i32 %v0_12770, 8
  %v2_12770 = inttoptr i32 %v1_12770 to i16*
  %v3_12770 = load i16, i16* %v2_12770, align 2
  %v4_12770 = zext i16 %v3_12770 to i32
  %v0_12774 = load i32, i32* %r2.global-to-local, align 4
  %v1_12774 = load i32, i32* %r1.global-to-local, align 4
  %v2_12774 = add i32 %v1_12774, %v0_12774
  %v3_12774 = inttoptr i32 %v2_12774 to i32*
  %v4_12774 = load i32, i32* %v3_12774, align 4
  store i32 %v4_12774, i32* %r1.global-to-local, align 4
  %v2_12778 = add i32 %v0_12774, %v4_12770
  %v2_1277c = icmp eq i32 %v4_12774, 0
  %v1_12780 = load i32, i32* @r5, align 4
  %v2_12780 = add i32 %v1_12780, 4
  %v3_12780 = inttoptr i32 %v2_12780 to i32*
  store i32 %v2_12778, i32* %v3_12780, align 4
  br i1 %v2_1277c, label %dec_label_pc_1272c, label %dec_label_pc_12788

dec_label_pc_12788:                               ; preds = %dec_label_pc_1275c, %.thread
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_12794 = load i32, i32* @r6, align 4
  %v2_12794 = add i32 %v0_12794, 24
  %v3_12794 = inttoptr i32 %v2_12794 to i32*
  %v4_12794 = load i32, i32* %v3_12794, align 4
  call void @__pseudo_branch(i32 %v4_12794)
  %v0_127a0 = load i32, i32* @r4, align 4
  store i32 %v3_126dc, i32* @r4, align 4
  store i32 %v6_126dc, i32* @r5, align 4
  store i32 %v9_126dc, i32* @r6, align 4
  store i32 %v12_126dc, i32* @r7, align 4
  store i32 %v15_126dc, i32* @lr, align 4
  ret i32 %v0_127a0

; uselistorder directives
  uselistorder i32 %v1_1276c, { 0, 2, 1 }
  uselistorder i32 %v6_1272c, { 1, 0 }
  uselistorder i32 %v0_1272c, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_1275c, { 1, 0 }
}

define i32 @function_127b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_127b0:
  %v0_127b0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_127b0, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_127b0
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_127b0, %bb
  %v10_127c0 = phi i32 [ %arg1, %dec_label_pc_127b0 ], [ 0, %bb ]
  ret i32 %v10_127c0

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @function_127c4() local_unnamed_addr {
dec_label_pc_127c4:
  store i32 98320, i32* @r3, align 4
  ret i32 99008
}

define i32 @function_127d8(i16* %arg1) local_unnamed_addr {
dec_label_pc_127d8:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_127d8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_127d8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_127d8
  %v2_127dc = trunc i32 %tmp to i16
  store i16 %v2_127dc, i16* %arg1, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_127d8, %bb
  %v8_127dc = phi i32 [ %tmp, %dec_label_pc_127d8 ], [ 0, %bb ]
  ret i32 %v8_127dc

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_127e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_127e0:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v2_127e4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_127e4, i32* @r0, align 4
  %v1_127ec = call i32 @function_156bc(i32 %v2_127e4)
  %v2_127f0 = load i32, i32* %stack_var_-24, align 4
  %v2_127f4 = add i32 %v2_127f0, %tmp
  %v2_127fc = mul i32 %v2_127f4, 10000
  %v1_12800 = and i32 %v2_127fc, 2147483632
  ret i32 %v1_12800

; uselistorder directives
  uselistorder i32 %v2_127e4, { 1, 0 }
}

define i32 @function_12820(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12820:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_12824 = load i32, i32* @r2, align 4
  %v8_12824 = icmp eq i32 %v0_12824, 8
  store i1 %v8_12824, i1* %cpsr_z.global-to-local, align 1
  %v5_12828 = icmp slt i32 %v0_12824, 8
  br i1 %v5_12828, label %dec_label_pc_12888, label %dec_label_pc_1282c

dec_label_pc_1282c:                               ; preds = %dec_label_pc_12820
  %v4_1282c = mul i32 %arg2, 256
  %v5_1282c = or i32 %v4_1282c, %arg2
  %v4_12830 = mul i32 %v5_1282c, 65536
  %v5_12830 = or i32 %v4_12830, %v5_1282c
  store i32 %v5_12830, i32* %r1.global-to-local, align 4
  %v1_1283457 = urem i32 %tmp, 4
  %v2_1283458 = icmp eq i32 %v1_1283457, 0
  store i1 %v2_1283458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_1283458, label %dec_label_pc_12844, label %bb

bb:                                               ; preds = %dec_label_pc_1282c, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_1282c ]
  %v3_1283859 = phi i32 [ %v6_12838, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_1282c ]
  %v4_12838 = inttoptr i32 %v3_1283859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_12838, align 1
  %v5_12838 = load i32, i32* @r3, align 4
  %v6_12838 = add i32 %v5_12838, 1
  store i32 %v6_12838, i32* @r3, align 4
  %v0_1283c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_12848.pr.pre = load i32, i32* @r2, align 4
  br i1 %v0_1283c.pr, label %dec_label_pc_12844, label %.thread

.thread:                                          ; preds = %bb
  %v2_1283c = add i32 %v0_12848.pr.pre, -1
  store i32 %v2_1283c, i32* @r2, align 4
  %v1_12834 = urem i32 %v6_12838, 4
  %v2_12834 = icmp eq i32 %v1_12834, 0
  store i1 %v2_12834, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12834, label %dec_label_pc_12844, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_12838.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t82 = trunc i32 %v1_12838.pre to i8
  br label %bb

dec_label_pc_12844:                               ; preds = %.thread, %bb, %dec_label_pc_1282c
  %v0_1285028 = phi i32 [ %tmp, %dec_label_pc_1282c ], [ %v6_12838, %bb ], [ %v6_12838, %.thread ]
  %v0_12848.pr = phi i32 [ %v0_12824, %dec_label_pc_1282c ], [ %v0_12848.pr.pre, %bb ], [ %v2_1283c, %.thread ]
  %v0_12844 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_12844, i32* @ip, align 4
  %v8_1284810 = icmp eq i32 %v0_12848.pr, 8
  store i1 %v8_1284810, i1* %cpsr_z.global-to-local, align 1
  %v5_1284c11 = icmp slt i32 %v0_12848.pr, 8
  br i1 %v5_1284c11, label %dec_label_pc_12888, label %dec_label_pc_12850.preheader

dec_label_pc_12850.preheader:                     ; preds = %dec_label_pc_12844
  %v1_1285046 = inttoptr i32 %v0_1285028 to i32*
  store i32 %v0_12844, i32* %v1_1285046, align 4
  %v3_1285047 = add i32 %v0_1285028, 4
  %v4_1285048 = inttoptr i32 %v3_1285047 to i32*
  %v5_1285049 = load i32, i32* @ip, align 4
  store i32 %v5_1285049, i32* %v4_1285048, align 4
  %v6_1285050 = add i32 %v0_1285028, 8
  store i32 %v6_1285050, i32* @r3, align 4
  %v0_1285451 = load i32, i32* @r2, align 4
  %v1_1285452 = add i32 %v0_1285451, -8
  store i32 %v1_1285452, i32* %r2.global-to-local, align 4
  %v5_1285c53 = icmp slt i32 %v1_1285452, 8
  br i1 %v5_1285c53, label %dec_label_pc_12850.dec_label_pc_12888.loopexit_crit_edge, label %dec_label_pc_12860

dec_label_pc_12860:                               ; preds = %dec_label_pc_12850.preheader, %dec_label_pc_12848.dec_label_pc_12850_crit_edge
  %v6_1285055 = phi i32 [ %v6_12850, %dec_label_pc_12848.dec_label_pc_12850_crit_edge ], [ %v6_1285050, %dec_label_pc_12850.preheader ]
  %v0_1285054 = phi i32 [ %v12_1287c, %dec_label_pc_12848.dec_label_pc_12850_crit_edge ], [ %v0_1285028, %dec_label_pc_12850.preheader ]
  %v1_12860 = inttoptr i32 %v6_1285055 to i32*
  %v2_12860 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_12860, i32* %v1_12860, align 4
  %v3_12860 = add i32 %v0_1285054, 12
  %v4_12860 = inttoptr i32 %v3_12860 to i32*
  %v5_12860 = load i32, i32* @ip, align 4
  store i32 %v5_12860, i32* %v4_12860, align 4
  %v6_12860 = add i32 %v0_1285054, 16
  store i32 %v6_12860, i32* @r3, align 4
  %v0_12864 = load i32, i32* %r2.global-to-local, align 4
  %v1_12864 = add i32 %v0_12864, -8
  store i32 %v1_12864, i32* %r2.global-to-local, align 4
  %v5_1286c = icmp slt i32 %v1_12864, 8
  br i1 %v5_1286c, label %dec_label_pc_12860.dec_label_pc_12888.loopexit_crit_edge, label %dec_label_pc_12870

dec_label_pc_12870:                               ; preds = %dec_label_pc_12860
  %v1_12870 = inttoptr i32 %v6_12860 to i32*
  %v2_12870 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_12870, i32* %v1_12870, align 4
  %v3_12870 = add i32 %v0_1285054, 20
  %v4_12870 = inttoptr i32 %v3_12870 to i32*
  %v5_12870 = load i32, i32* @ip, align 4
  store i32 %v5_12870, i32* %v4_12870, align 4
  %v6_12870 = add i32 %v0_1285054, 24
  store i32 %v6_12870, i32* @r3, align 4
  %v0_12874 = load i32, i32* %r2.global-to-local, align 4
  %v1_12874 = add i32 %v0_12874, -8
  store i32 %v1_12874, i32* %r2.global-to-local, align 4
  %v5_1287c = icmp slt i32 %v1_12874, 8
  br i1 %v5_1287c, label %dec_label_pc_12870.dec_label_pc_12888.loopexit_crit_edge, label %dec_label_pc_12848

dec_label_pc_12848:                               ; preds = %dec_label_pc_12870
  %v7_1287c = inttoptr i32 %v6_12870 to i32*
  %v8_1287c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v8_1287c, i32* %v7_1287c, align 4
  %v9_1287c = add i32 %v0_1285054, 28
  %v10_1287c = inttoptr i32 %v9_1287c to i32*
  %v11_1287c = load i32, i32* @ip, align 4
  store i32 %v11_1287c, i32* %v10_1287c, align 4
  %v12_1287c = add i32 %v0_1285054, 32
  store i32 %v12_1287c, i32* @r3, align 4
  %v6_12880 = load i32, i32* %r2.global-to-local, align 4
  %v7_12880 = add i32 %v6_12880, -8
  store i32 %v7_12880, i32* %r2.global-to-local, align 4
  %v5_1284c = icmp slt i32 %v7_12880, 8
  br i1 %v5_1284c, label %dec_label_pc_12848.dec_label_pc_12888.loopexit_crit_edge, label %dec_label_pc_12848.dec_label_pc_12850_crit_edge

dec_label_pc_12848.dec_label_pc_12850_crit_edge:  ; preds = %dec_label_pc_12848
  %v2_12850.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_12850 = inttoptr i32 %v12_1287c to i32*
  store i32 %v2_12850.pre, i32* %v1_12850, align 4
  %v3_12850 = add i32 %v0_1285054, 36
  %v4_12850 = inttoptr i32 %v3_12850 to i32*
  %v5_12850 = load i32, i32* @ip, align 4
  store i32 %v5_12850, i32* %v4_12850, align 4
  %v6_12850 = add i32 %v0_1285054, 40
  store i32 %v6_12850, i32* @r3, align 4
  %v0_12854 = load i32, i32* %r2.global-to-local, align 4
  %v1_12854 = add i32 %v0_12854, -8
  store i32 %v1_12854, i32* %r2.global-to-local, align 4
  %v5_1285c = icmp slt i32 %v1_12854, 8
  br i1 %v5_1285c, label %dec_label_pc_12850.dec_label_pc_12888.loopexit_crit_edge, label %dec_label_pc_12860

dec_label_pc_12848.dec_label_pc_12888.loopexit_crit_edge: ; preds = %dec_label_pc_12848
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12888

dec_label_pc_12850.dec_label_pc_12888.loopexit_crit_edge: ; preds = %dec_label_pc_12848.dec_label_pc_12850_crit_edge, %dec_label_pc_12850.preheader
  %v1_12854.lcssa = phi i32 [ %v1_1285452, %dec_label_pc_12850.preheader ], [ %v1_12854, %dec_label_pc_12848.dec_label_pc_12850_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12888

dec_label_pc_12860.dec_label_pc_12888.loopexit_crit_edge: ; preds = %dec_label_pc_12860
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12888

dec_label_pc_12870.dec_label_pc_12888.loopexit_crit_edge: ; preds = %dec_label_pc_12870
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12888

dec_label_pc_12888:                               ; preds = %dec_label_pc_12844, %dec_label_pc_12848.dec_label_pc_12888.loopexit_crit_edge, %dec_label_pc_12850.dec_label_pc_12888.loopexit_crit_edge, %dec_label_pc_12860.dec_label_pc_12888.loopexit_crit_edge, %dec_label_pc_12870.dec_label_pc_12888.loopexit_crit_edge, %dec_label_pc_12820
  %v0_12890 = phi i32 [ %v0_12824, %dec_label_pc_12820 ], [ %v1_12874, %dec_label_pc_12870.dec_label_pc_12888.loopexit_crit_edge ], [ %v1_12864, %dec_label_pc_12860.dec_label_pc_12888.loopexit_crit_edge ], [ %v1_12854.lcssa, %dec_label_pc_12850.dec_label_pc_12888.loopexit_crit_edge ], [ %v7_12880, %dec_label_pc_12848.dec_label_pc_12888.loopexit_crit_edge ], [ %v0_12848.pr, %dec_label_pc_12844 ]
  %v2_12888 = icmp eq i32 %v0_12890, 0
  store i1 %v2_12888, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12888, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_12888
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_12888
  %v1_12890 = sub i32 7, %v0_12890
  store i32 %v1_12890, i32* %r2.global-to-local, align 4
  %v3_12894 = mul i32 %v1_12890, 4
  %v4_12894 = add i32 %v3_12894, ptrtoint (i32* @global_var_1289c.360 to i32)
  call void @__pseudo_branch(i32 %v4_12894)
  %v0_1289c = load i32, i32* %r1.global-to-local, align 4
  %v1_1289c = trunc i32 %v0_1289c to i8
  %v2_1289c = load i32, i32* @r3, align 4
  %v3_1289c = inttoptr i32 %v2_1289c to i8*
  store i8 %v1_1289c, i8* %v3_1289c, align 1
  %v4_1289c = load i32, i32* @r3, align 4
  %v5_1289c = add i32 %v4_1289c, 1
  store i32 %v5_1289c, i32* %r3.global-to-local, align 4
  %v0_128a0 = load i32, i32* %r1.global-to-local, align 4
  %v1_128a0 = trunc i32 %v0_128a0 to i8
  %v3_128a0 = inttoptr i32 %v5_1289c to i8*
  store i8 %v1_128a0, i8* %v3_128a0, align 1
  %v4_128a0 = load i32, i32* %r3.global-to-local, align 4
  %v5_128a0 = add i32 %v4_128a0, 1
  store i32 %v5_128a0, i32* %r3.global-to-local, align 4
  %v0_128a4 = load i32, i32* %r1.global-to-local, align 4
  %v1_128a4 = trunc i32 %v0_128a4 to i8
  %v3_128a4 = inttoptr i32 %v5_128a0 to i8*
  store i8 %v1_128a4, i8* %v3_128a4, align 1
  %v4_128a4 = load i32, i32* %r3.global-to-local, align 4
  %v5_128a4 = add i32 %v4_128a4, 1
  store i32 %v5_128a4, i32* %r3.global-to-local, align 4
  %v0_128a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_128a8 = trunc i32 %v0_128a8 to i8
  %v3_128a8 = inttoptr i32 %v5_128a4 to i8*
  store i8 %v1_128a8, i8* %v3_128a8, align 1
  %v4_128a8 = load i32, i32* %r3.global-to-local, align 4
  %v5_128a8 = add i32 %v4_128a8, 1
  store i32 %v5_128a8, i32* %r3.global-to-local, align 4
  %v0_128ac = load i32, i32* %r1.global-to-local, align 4
  %v1_128ac = trunc i32 %v0_128ac to i8
  %v3_128ac = inttoptr i32 %v5_128a8 to i8*
  store i8 %v1_128ac, i8* %v3_128ac, align 1
  %v4_128ac = load i32, i32* %r3.global-to-local, align 4
  %v5_128ac = add i32 %v4_128ac, 1
  store i32 %v5_128ac, i32* %r3.global-to-local, align 4
  %v0_128b0 = load i32, i32* %r1.global-to-local, align 4
  %v1_128b0 = trunc i32 %v0_128b0 to i8
  %v3_128b0 = inttoptr i32 %v5_128ac to i8*
  store i8 %v1_128b0, i8* %v3_128b0, align 1
  %v4_128b0 = load i32, i32* %r3.global-to-local, align 4
  %v5_128b0 = add i32 %v4_128b0, 1
  store i32 %v5_128b0, i32* %r3.global-to-local, align 4
  %v0_128b4 = load i32, i32* %r1.global-to-local, align 4
  %v1_128b4 = trunc i32 %v0_128b4 to i8
  %v3_128b4 = inttoptr i32 %v5_128b0 to i8*
  store i8 %v1_128b4, i8* %v3_128b4, align 1
  %v4_128b4 = load i32, i32* %r3.global-to-local, align 4
  %v5_128b4 = add i32 %v4_128b4, 1
  store i32 %v5_128b4, i32* @r3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_12850, { 1, 0 }
  uselistorder i32 %v12_1287c, { 1, 2, 0 }
  uselistorder i32 %v0_1285054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_12848.pr, { 0, 2, 1 }
  uselistorder i32 %v6_12838, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_1282c, { 1, 0 }
  uselistorder i32 %v0_12824, { 1, 0, 2, 3 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1, 14, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 3, 2, 1, 4, 0, 8, 7, 5, 9 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_12888, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_12860, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @function_128c0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_128c0:
  %v0_128c0 = call i32 @function_16940()
  ret i32 %v0_128c0
}

define i32 @function_128d0() local_unnamed_addr {
dec_label_pc_128d0:
  %v0_128d0 = call i32 @function_16940()
  ret i32 %v0_128d0
}

define i32 @function_128e0(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_128e0:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %v0_128f01 = load i32, i32* @r1, align 4
  %v1_128f02 = inttoptr i32 %v0_128f01 to i8*
  %v2_128f03 = load i8, i8* %v1_128f02, align 1
  %v2_128f45 = icmp eq i8 %v2_128f03, 0
  store i1 %v2_128f45, i1* %cpsr_z.global-to-local, align 1
  store i8 %v2_128f03, i8* %arg1, align 1
  br i1 %v2_128f45, label %dec_label_pc_12900, label %dec_label_pc_128e8

dec_label_pc_128e8:                               ; preds = %dec_label_pc_128e0, %dec_label_pc_128e8
  %v0_128e8 = load i32, i32* @r1, align 4
  %v1_128e8 = add i32 %v0_128e8, 1
  store i32 %v1_128e8, i32* @r1, align 4
  %v0_128ec = load i32, i32* %r2.global-to-local, align 4
  %v1_128ec = add i32 %v0_128ec, 1
  store i32 %v1_128ec, i32* %r2.global-to-local, align 4
  %v1_128f0 = inttoptr i32 %v1_128e8 to i8*
  %v2_128f0 = load i8, i8* %v1_128f0, align 1
  %v2_128f4 = icmp eq i8 %v2_128f0, 0
  store i1 %v2_128f4, i1* %cpsr_z.global-to-local, align 1
  %v3_128f8 = inttoptr i32 %v1_128ec to i8*
  store i8 %v2_128f0, i8* %v3_128f8, align 1
  %v0_128fc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_128fc, label %dec_label_pc_12900, label %dec_label_pc_128e8

dec_label_pc_12900:                               ; preds = %dec_label_pc_128e8, %dec_label_pc_128e0
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 0 }
  uselistorder label %dec_label_pc_128e8, { 1, 0 }
}

define i32 @function_12904(i32 %arg1) local_unnamed_addr {
dec_label_pc_12904:
  %stack_var_-12 = alloca i32, align 4
  %v2_1290c = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_1290c, i32* @r1, align 4
  %v0_12910 = call i32 @function_171ac()
  %v2_12914 = icmp eq i32 %v0_12910, 0
  %v4_12918 = load i32, i32* %stack_var_-12, align 4
  %storemerge = select i1 %v2_12914, i32 -1, i32 %v4_12918
  ret i32 %storemerge
}

define i32 @function_1292c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1292c:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1292c = load i32, i32* @r7, align 4
  store i32 %v3_1292c, i32* %stack_var_-8, align 4
  %v0_12938 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12938, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12938, -4095
  br i1 %tmp, label %dec_label_pc_12958, label %dec_label_pc_12948

dec_label_pc_12948:                               ; preds = %dec_label_pc_1292c
  %v0_12948 = call i32 @function_127c4()
  %v0_1294c = load i32, i32* %r7.global-to-local, align 4
  %v1_1294c = sub i32 0, %v0_1294c
  %v2_12950 = inttoptr i32 %v0_12948 to i32*
  store i32 %v1_1294c, i32* %v2_12950, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12958.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12958

dec_label_pc_12958:                               ; preds = %dec_label_pc_1292c, %dec_label_pc_12948
  %v1_1295c = phi i32 [ %v0_12938, %dec_label_pc_1292c ], [ -1, %dec_label_pc_12948 ]
  %v2_12958 = phi i32 [ %v3_1292c, %dec_label_pc_1292c ], [ %v2_12958.pre, %dec_label_pc_12948 ]
  store i32 %v2_12958, i32* @r7, align 4
  ret i32 %v1_1295c

; uselistorder directives
  uselistorder i32 %v0_12938, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12958, { 1, 0 }
}

define i32 @function_12964(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12964:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12964 = load i32, i32* @r7, align 4
  store i32 %v3_12964, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1298c, label %dec_label_pc_1297c

dec_label_pc_1297c:                               ; preds = %dec_label_pc_12964
  %v0_1297c = call i32 @function_127c4()
  %v0_12980 = load i32, i32* %r7.global-to-local, align 4
  %v1_12980 = sub i32 0, %v0_12980
  store i32 %v1_12980, i32* @r3, align 4
  %v2_12984 = inttoptr i32 %v0_1297c to i32*
  store i32 %v1_12980, i32* %v2_12984, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_12990.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1298c

dec_label_pc_1298c:                               ; preds = %dec_label_pc_12964, %dec_label_pc_1297c
  %v2_12990 = phi i32 [ %v3_12964, %dec_label_pc_12964 ], [ %v2_12990.pre, %dec_label_pc_1297c ]
  %v0_1298c = phi i32 [ %arg1, %dec_label_pc_12964 ], [ -1, %dec_label_pc_1297c ]
  store i32 %v2_12990, i32* @r7, align 4
  ret i32 %v0_1298c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1298c, { 1, 0 }
}

define i32 @function_1299c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1299c:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1299c = load i32, i32* @r7, align 4
  store i32 %v3_1299c, i32* %stack_var_-8, align 4
  %v0_129a8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_129a8, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_129a8, -4095
  br i1 %tmp, label %dec_label_pc_129c8, label %dec_label_pc_129b8

dec_label_pc_129b8:                               ; preds = %dec_label_pc_1299c
  %v0_129b8 = call i32 @function_127c4()
  %v0_129bc = load i32, i32* %r7.global-to-local, align 4
  %v1_129bc = sub i32 0, %v0_129bc
  %v2_129c0 = inttoptr i32 %v0_129b8 to i32*
  store i32 %v1_129bc, i32* %v2_129c0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_129c8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_129c8

dec_label_pc_129c8:                               ; preds = %dec_label_pc_1299c, %dec_label_pc_129b8
  %v1_129cc = phi i32 [ %v0_129a8, %dec_label_pc_1299c ], [ -1, %dec_label_pc_129b8 ]
  %v2_129c8 = phi i32 [ %v3_1299c, %dec_label_pc_1299c ], [ %v2_129c8.pre, %dec_label_pc_129b8 ]
  store i32 %v2_129c8, i32* @r7, align 4
  ret i32 %v1_129cc

; uselistorder directives
  uselistorder i32 %v0_129a8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_129c8, { 1, 0 }
}

define i32 @function_129d4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_129d4:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12a08, label %dec_label_pc_129f8

dec_label_pc_129f8:                               ; preds = %dec_label_pc_129d4
  %v0_129f8 = call i32 @function_127c4()
  %v0_129fc = load i32, i32* %r4.global-to-local, align 4
  %v1_129fc = sub i32 0, %v0_129fc
  %v2_12a00 = inttoptr i32 %v0_129f8 to i32*
  store i32 %v1_129fc, i32* %v2_12a00, align 4
  br label %dec_label_pc_12a08

dec_label_pc_12a08:                               ; preds = %dec_label_pc_129d4, %dec_label_pc_129f8
  %v1_12a10 = phi i32 [ %arg1, %dec_label_pc_129d4 ], [ -1, %dec_label_pc_129f8 ]
  ret i32 %v1_12a10

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12a08, { 1, 0 }
}

define i32 @function_12a18(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12a18:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12a18 = load i32, i32* @r7, align 4
  store i32 %v3_12a18, i32* %stack_var_-8, align 4
  %v0_12a24 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12a24, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12a24, -4095
  br i1 %tmp, label %dec_label_pc_12a44, label %dec_label_pc_12a34

dec_label_pc_12a34:                               ; preds = %dec_label_pc_12a18
  %v0_12a34 = call i32 @function_127c4()
  %v0_12a38 = load i32, i32* %r7.global-to-local, align 4
  %v1_12a38 = sub i32 0, %v0_12a38
  %v2_12a3c = inttoptr i32 %v0_12a34 to i32*
  store i32 %v1_12a38, i32* %v2_12a3c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12a44.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12a44

dec_label_pc_12a44:                               ; preds = %dec_label_pc_12a18, %dec_label_pc_12a34
  %v1_12a48 = phi i32 [ %v0_12a24, %dec_label_pc_12a18 ], [ -1, %dec_label_pc_12a34 ]
  %v2_12a44 = phi i32 [ %v3_12a18, %dec_label_pc_12a18 ], [ %v2_12a44.pre, %dec_label_pc_12a34 ]
  store i32 %v2_12a44, i32* @r7, align 4
  ret i32 %v1_12a48

; uselistorder directives
  uselistorder i32 %v0_12a24, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12a44, { 1, 0 }
}

define i32 @function_12a4c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12a4c:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12a4c = load i32, i32* @r7, align 4
  store i32 %v3_12a4c, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12a74, label %dec_label_pc_12a64

dec_label_pc_12a64:                               ; preds = %dec_label_pc_12a4c
  %v0_12a64 = call i32 @function_127c4()
  %v0_12a68 = load i32, i32* %r7.global-to-local, align 4
  %v1_12a68 = sub i32 0, %v0_12a68
  %v2_12a6c = inttoptr i32 %v0_12a64 to i32*
  store i32 %v1_12a68, i32* %v2_12a6c, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_12a78.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12a74

dec_label_pc_12a74:                               ; preds = %dec_label_pc_12a4c, %dec_label_pc_12a64
  %v2_12a78 = phi i32 [ %v3_12a4c, %dec_label_pc_12a4c ], [ %v2_12a78.pre, %dec_label_pc_12a64 ]
  %v0_12a74 = phi i32 [ %arg1, %dec_label_pc_12a4c ], [ -1, %dec_label_pc_12a64 ]
  store i32 %v2_12a78, i32* @r7, align 4
  ret i32 %v0_12a74

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12a74, { 1, 0 }
}

define i32 @function_12a84(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_12a84:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_12a84 = load i32, i32* @r4, align 4
  store i32 %v3_12a84, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12ab4, label %dec_label_pc_12aa4

dec_label_pc_12aa4:                               ; preds = %dec_label_pc_12a84
  %v0_12aa4 = call i32 @function_127c4()
  %v0_12aa8 = load i32, i32* %r4.global-to-local, align 4
  %v1_12aa8 = sub i32 0, %v0_12aa8
  %v2_12aac = inttoptr i32 %v0_12aa4 to i32*
  store i32 %v1_12aa8, i32* %v2_12aac, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_12ab8.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_12ab4

dec_label_pc_12ab4:                               ; preds = %dec_label_pc_12a84, %dec_label_pc_12aa4
  %v2_12ab8 = phi i32 [ %v3_12a84, %dec_label_pc_12a84 ], [ %v2_12ab8.pre, %dec_label_pc_12aa4 ]
  %v0_12ab4 = phi i32 [ %arg1, %dec_label_pc_12a84 ], [ -1, %dec_label_pc_12aa4 ]
  store i32 %v2_12ab8, i32* @r4, align 4
  ret i32 %v0_12ab4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12ab4, { 1, 0 }
}

define i32 @function_12ac0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12ac0:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12ac0 = load i32, i32* @r7, align 4
  store i32 %v3_12ac0, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12ae8, label %dec_label_pc_12ad8

dec_label_pc_12ad8:                               ; preds = %dec_label_pc_12ac0
  %v0_12ad8 = call i32 @function_127c4()
  %v0_12adc = load i32, i32* %r7.global-to-local, align 4
  %v1_12adc = sub i32 0, %v0_12adc
  store i32 %v1_12adc, i32* @r3, align 4
  %v2_12ae0 = inttoptr i32 %v0_12ad8 to i32*
  store i32 %v1_12adc, i32* %v2_12ae0, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_12aec.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12ae8

dec_label_pc_12ae8:                               ; preds = %dec_label_pc_12ac0, %dec_label_pc_12ad8
  %v2_12aec = phi i32 [ %v3_12ac0, %dec_label_pc_12ac0 ], [ %v2_12aec.pre, %dec_label_pc_12ad8 ]
  %v0_12ae8 = phi i32 [ %arg1, %dec_label_pc_12ac0 ], [ -1, %dec_label_pc_12ad8 ]
  store i32 %v2_12aec, i32* @r7, align 4
  ret i32 %v0_12ae8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12ae8, { 1, 0 }
}

define i32 @function_12af8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_12af8:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_12af8 = load i32, i32* @r4, align 4
  store i32 %v3_12af8, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12b28, label %dec_label_pc_12b18

dec_label_pc_12b18:                               ; preds = %dec_label_pc_12af8
  %v0_12b18 = call i32 @function_127c4()
  %v0_12b1c = load i32, i32* %r4.global-to-local, align 4
  %v1_12b1c = sub i32 0, %v0_12b1c
  %v2_12b20 = inttoptr i32 %v0_12b18 to i32*
  store i32 %v1_12b1c, i32* %v2_12b20, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_12b2c.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_12b28

dec_label_pc_12b28:                               ; preds = %dec_label_pc_12af8, %dec_label_pc_12b18
  %v2_12b2c = phi i32 [ %v3_12af8, %dec_label_pc_12af8 ], [ %v2_12b2c.pre, %dec_label_pc_12b18 ]
  %v0_12b28 = phi i32 [ %arg1, %dec_label_pc_12af8 ], [ -1, %dec_label_pc_12b18 ]
  store i32 %v2_12b2c, i32* @r4, align 4
  ret i32 %v0_12b28

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12b28, { 1, 0 }
}

define i32 @function_12b38(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_12b38:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12b6c, label %dec_label_pc_12b5c

dec_label_pc_12b5c:                               ; preds = %dec_label_pc_12b38
  %v0_12b5c = call i32 @function_127c4()
  %v0_12b60 = load i32, i32* %r4.global-to-local, align 4
  %v1_12b60 = sub i32 0, %v0_12b60
  %v2_12b64 = inttoptr i32 %v0_12b5c to i32*
  store i32 %v1_12b60, i32* %v2_12b64, align 4
  br label %dec_label_pc_12b6c

dec_label_pc_12b6c:                               ; preds = %dec_label_pc_12b38, %dec_label_pc_12b5c
  %v1_12b74 = phi i32 [ %arg1, %dec_label_pc_12b38 ], [ -1, %dec_label_pc_12b5c ]
  ret i32 %v1_12b74

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12b6c, { 1, 0 }
}

define i32 @function_12b7c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12b7c:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12b7c = load i32, i32* @r7, align 4
  store i32 %v3_12b7c, i32* %stack_var_-8, align 4
  %v0_12b88 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12b88, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12b88, -4095
  br i1 %tmp, label %dec_label_pc_12ba8, label %dec_label_pc_12b98

dec_label_pc_12b98:                               ; preds = %dec_label_pc_12b7c
  %v0_12b98 = call i32 @function_127c4()
  %v0_12b9c = load i32, i32* %r7.global-to-local, align 4
  %v1_12b9c = sub i32 0, %v0_12b9c
  store i32 %v1_12b9c, i32* @r3, align 4
  %v2_12ba0 = inttoptr i32 %v0_12b98 to i32*
  store i32 %v1_12b9c, i32* %v2_12ba0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12ba8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12ba8

dec_label_pc_12ba8:                               ; preds = %dec_label_pc_12b7c, %dec_label_pc_12b98
  %v1_12bac = phi i32 [ %v0_12b88, %dec_label_pc_12b7c ], [ -1, %dec_label_pc_12b98 ]
  %v2_12ba8 = phi i32 [ %v3_12b7c, %dec_label_pc_12b7c ], [ %v2_12ba8.pre, %dec_label_pc_12b98 ]
  store i32 %v2_12ba8, i32* @r7, align 4
  ret i32 %v1_12bac

; uselistorder directives
  uselistorder i32 %v0_12b88, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12ba8, { 1, 0 }
}

define i32 @function_12bb4(i32 %arg1) local_unnamed_addr {
dec_label_pc_12bb4:
  store i32 %arg1, i32* @r0, align 4
  %v3_12bb4 = load i32, i32* @r4, align 4
  %v0_12bbc = call i32 @function_12008()
  %v2_12bc4 = call i32 @function_12168(i32 %v0_12bbc, i32 %arg1)
  store i32 %v3_12bb4, i32* @r4, align 4
  ret i32 %v2_12bc4

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_12168, { 0, 4, 3, 2, 1 }
  uselistorder i32 ()* @function_12008, { 0, 3, 2, 1 }
}

define i32 @function_12bd0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12bd0:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r1, align 4
  %tmp4 = icmp slt i32 %arg1, 1
  br i1 %tmp4, label %dec_label_pc_12be8, label %dec_label_pc_12be0

dec_label_pc_12be0:                               ; preds = %dec_label_pc_12bd0
  %v7_12be4 = icmp slt i32 %arg1, 65
  br i1 %v7_12be4, label %dec_label_pc_12bfc, label %dec_label_pc_12be8

dec_label_pc_12be8:                               ; preds = %dec_label_pc_12be0, %dec_label_pc_12bd0
  %v0_12be8 = call i32 @function_127c4()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_12bf4 = inttoptr i32 %v0_12be8 to i32*
  store i32 22, i32* %v2_12bf4, align 4
  %v0_12c04.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12c04

dec_label_pc_12bfc:                               ; preds = %dec_label_pc_12be0
  %v0_12bfc = call i32 @function_12d04()
  store i32 %v0_12bfc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12c04

dec_label_pc_12c04:                               ; preds = %dec_label_pc_12be8, %dec_label_pc_12bfc
  %v0_12c04 = phi i32 [ %v0_12c04.pre, %dec_label_pc_12be8 ], [ %v0_12bfc, %dec_label_pc_12bfc ]
  ret i32 %v0_12c04

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12c04, { 1, 0 }
}

define i32 @function_12c14(i32* %arg1) local_unnamed_addr {
dec_label_pc_12c14:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_12c1c = add i32 %tmp, 4
  %v3_12c1c = inttoptr i32 %v2_12c1c to i32*
  store i32 0, i32* %v3_12c1c, align 4
  %v1_12c20 = load i32, i32* %r3.global-to-local, align 4
  %v2_12c20 = inttoptr i32 %v1_12c20 to i32*
  store i32 0, i32* %v2_12c20, align 4
  ret i32 0
}

define i32 @function_12c28(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12c28:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_12c28 = load i32, i32* @r4, align 4
  store i32 %v3_12c28, i32* %stack_var_-16, align 4
  %v6_12c28 = load i32, i32* @r5, align 4
  %v9_12c28 = load i32, i32* @r6, align 4
  %v7_12c30 = icmp eq i32 %arg2, -1
  br i1 %v7_12c30, label %.thread4, label %bb

.thread4:                                         ; preds = %dec_label_pc_12c28
  br label %.thread16

bb:                                               ; preds = %dec_label_pc_12c28
  %v2_12c38 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %arg1, i32* @r5, align 4
  %tmp28 = icmp slt i32 %arg1, 1
  br i1 %tmp28, label %.thread16, label %dec_label_pc_12c54

.thread16:                                        ; preds = %bb, %.thread4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12c5c

dec_label_pc_12c54:                               ; preds = %bb
  store i32 0, i32* %r2.global-to-local, align 4
  %v7_12c58 = icmp slt i32 %arg1, 65
  br i1 %v7_12c58, label %dec_label_pc_12c70, label %dec_label_pc_12c5c

dec_label_pc_12c5c:                               ; preds = %.thread16, %dec_label_pc_12c54
  %v0_12c5c = call i32 @function_127c4()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_12c68 = inttoptr i32 %v0_12c5c to i32*
  store i32 22, i32* %v2_12c68, align 4
  %v0_12cc8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb33

dec_label_pc_12c70:                               ; preds = %dec_label_pc_12c54
  %v2_12c70 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_12c70, i32* @r4, align 4
  store i32 %arg1, i32* @r1, align 4
  %v2_12c78 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_12c78, i32* @r0, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 0, i32* %stack_var_-24, align 4
  %v0_12c88 = call i32 @function_12d04()
  %v0_12c90 = load i32, i32* @r5, align 4
  %v2_12c98 = call i32 @function_12ce0(i32 ptrtoint (i32* @global_var_1a3f8.372 to i32), i32 %v0_12c90)
  store i32 %v2_12c38, i32* %r2.global-to-local, align 4
  %v0_12cb0 = load i32, i32* @r5, align 4
  %v3_12cb8 = call i32 @function_15114(i32 %v0_12cb0, i32 %v2_12c70, i32 %v2_12c38)
  %v1_12cbc = icmp slt i32 %v3_12cb8, 0
  br i1 %v1_12cbc, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_12c70
  %v5_12cc0 = load i32, i32* %stack_var_-56, align 4
  store i32 %v5_12cc0, i32* %r2.global-to-local, align 4
  br label %bb33

bb32:                                             ; preds = %dec_label_pc_12c70
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %dec_label_pc_12c5c, %bb32
  %v0_12cc8 = phi i32 [ %v5_12cc0, %bb31 ], [ %v0_12cc8.pre, %dec_label_pc_12c5c ], [ -1, %bb32 ]
  %v2_12cd0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_12cd0, i32* @r4, align 4
  store i32 %v6_12c28, i32* @r5, align 4
  store i32 %v9_12c28, i32* @r6, align 4
  ret i32 %v0_12cc8

; uselistorder directives
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 ()* @function_12d04, { 1, 0 }
  uselistorder i32 65, { 0, 1, 3, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 3, 0, 2 }
  uselistorder label %bb33, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12c5c, { 1, 0 }
}

define i32 @function_12cd8(i16* %arg1) local_unnamed_addr {
dec_label_pc_12cd8:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_12cd8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12cd8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12cd8
  %v1_12cd8 = load i32, i32* @r5, align 4
  %v2_12cd8 = trunc i32 %v1_12cd8 to i16
  store i16 %v2_12cd8, i16* %arg1, align 2
  %v5_12cd8 = load i32, i32* @ip, align 4
  %v6_12cd8 = load i32, i32* %r0.global-to-local, align 4
  %v7_12cd8 = sub i32 %v6_12cd8, %v5_12cd8
  store i32 %v7_12cd8, i32* %r0.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12cd8, %bb
  %v9_12cdc = phi i32 [ %tmp, %dec_label_pc_12cd8 ], [ %v7_12cd8, %bb ]
  ret i32 %v9_12cdc

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_12ce0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12ce0:
  %v1_12ce0 = add i32 %arg2, -1
  %v3_12ce4 = udiv i32 %v1_12ce0, 32
  %v4_12ce8 = mul nuw nsw i32 %v3_12ce4, 4
  %v5_12ce8 = add i32 %v4_12ce8, %arg1
  %v6_12ce8 = inttoptr i32 %v5_12ce8 to i32*
  %v7_12ce8 = load i32, i32* %v6_12ce8, align 4
  %v1_12cec = urem i32 %v1_12ce0, 32
  %v7_12cf4 = shl i32 1, %v1_12cec
  %v8_12cf4 = and i32 %v7_12ce8, %v7_12cf4
  %v10_12cf4 = icmp ne i32 %v8_12cf4, 0
  %. = zext i1 %v10_12cf4 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_12ce0, { 1, 0 }
}

define i32 @function_12d04() local_unnamed_addr {
dec_label_pc_12d04:
  %v0_12d04 = load i32, i32* @r1, align 4
  %v1_12d04 = add i32 %v0_12d04, -1
  %v3_12d08 = udiv i32 %v1_12d04, 32
  %v0_12d0c = load i32, i32* @r0, align 4
  %v4_12d0c = mul nuw nsw i32 %v3_12d08, 4
  %v5_12d0c = add i32 %v0_12d0c, %v4_12d0c
  %v6_12d0c = inttoptr i32 %v5_12d0c to i32*
  %v7_12d0c = load i32, i32* %v6_12d0c, align 4
  %v1_12d10 = urem i32 %v1_12d04, 32
  %v7_12d18 = shl i32 1, %v1_12d10
  %v8_12d18 = or i32 %v7_12d0c, %v7_12d18
  store i32 %v8_12d18, i32* %v6_12d0c, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_12d04, { 1, 0 }
}

define i32 @function_12d28(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12d28:
  %v1_12d28 = add i32 %arg2, -1
  %v3_12d2c = udiv i32 %v1_12d28, 32
  %v4_12d30 = mul nuw nsw i32 %v3_12d2c, 4
  %v5_12d30 = add i32 %v4_12d30, %arg1
  %v6_12d30 = inttoptr i32 %v5_12d30 to i32*
  %v7_12d30 = load i32, i32* %v6_12d30, align 4
  %v1_12d34 = urem i32 %v1_12d28, 32
  %tmp = shl i32 -1, %v1_12d34
  %v8_12d3c = add i32 %tmp, -1
  %v9_12d3c = and i32 %v7_12d30, %v8_12d3c
  store i32 %v9_12d3c, i32* %v6_12d30, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_12d28, { 1, 0 }
}

define i32 @function_12d4c(i32 %arg1) local_unnamed_addr {
dec_label_pc_12d4c:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v3_12d4c = udiv i32 %arg1, 256
  store i32 %v3_12d4c, i32* %r1.global-to-local, align 4
  %v2_12d50 = icmp ugt i32 %arg1, 16777215
  store i32 %arg1, i32* %ip.global-to-local, align 4
  br i1 %v2_12d50, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_12d4c
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_12d4c, %bb
  %v0_12d5c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_12d50, i32 %v0_12d5c)
  %v0_12d60 = load i32, i32* %r1.global-to-local, align 4
  %v1_12d60 = add i32 %v0_12d60, 1048320
  %v3_12d64 = udiv i32 %v1_12d60, 65536
  %v1_12d68 = and i32 %v3_12d64, 8
  %v6_12d6c = shl i32 %v0_12d60, %v1_12d68
  %v1_12d70 = add i32 %v6_12d6c, 520192
  %v3_12d74 = udiv i32 %v1_12d70, 65536
  %v1_12d78 = and i32 %v3_12d74, 4
  %v6_12d7c = shl i32 %v6_12d6c, %v1_12d78
  %v1_12d80 = add i32 %v6_12d7c, 245760
  %v3_12d84 = udiv i32 %v1_12d80, 65536
  %v1_12d88 = and i32 %v3_12d84, 2
  %v6_12d8c = shl i32 %v6_12d7c, %v1_12d88
  store i32 %v6_12d8c, i32* %r1.global-to-local, align 4
  %v1_12d90 = sub nsw i32 13, %v1_12d68
  %v2_12d94 = sub nsw i32 %v1_12d90, %v1_12d78
  %v3_12d98 = udiv i32 %v6_12d8c, 32768
  %v4_12d98 = sub nuw nsw i32 -1, %v3_12d98
  %v4_12d9c = udiv i32 %v6_12d8c, 16384
  %v5_12d9c = and i32 %v4_12d9c, %v4_12d98
  %v2_12da0 = sub nsw i32 %v2_12d94, %v1_12d88
  %v2_12da4 = add nsw i32 %v2_12da0, %v5_12d9c
  %v1_12da8 = add nsw i32 %v2_12da4, 6
  %v0_12dac = load i32, i32* %ip.global-to-local, align 4
  %v6_12dac = lshr i32 %v0_12dac, %v1_12da8
  %v3_12db0 = mul nsw i32 %v2_12da4, 4
  %v1_12db4 = add nsw i32 %v3_12db0, 32
  %v1_12db8 = urem i32 %v6_12dac, 4
  %v2_12dbc = or i32 %v1_12db8, %v1_12db4
  ret i32 %v2_12dbc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_12dc4() local_unnamed_addr {
dec_label_pc_12dc4:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_12dc4 = load i32, i32* @r4, align 4
  %v6_12dc4 = load i32, i32* @r5, align 4
  %v9_12dc4 = load i32, i32* @r6, align 4
  %v12_12dc4 = load i32, i32* @r7, align 4
  %v15_12dc4 = load i32, i32* @r8, align 4
  %v18_12dc4 = load i32, i32* @sb, align 4
  %v21_12dc4 = load i32, i32* @sl, align 4
  %v24_12dc4 = load i32, i32* @fp, align 4
  %v27_12dc4 = load i32, i32* @lr, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 98320, i32* %r1.global-to-local, align 4
  %v4_12dd8 = load i32, i32* inttoptr (i32 98388 to i32*), align 4
  store i32 %v4_12dd8, i32* %r4.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_12de4 = load i32, i32* inttoptr (i32 98356 to i32*), align 4
  store i32 %v4_12de4, i32* %r1.global-to-local, align 4
  %v0_12de8 = load i32, i32* @r0, align 4
  store i32 %v0_12de8, i32* @r5, align 4
  store i32 %v4_12dd8, i32* %r2.global-to-local, align 4
  %v2_12df0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_12df0, i32* %r0.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  store i32 98320, i32* %ip.global-to-local, align 4
  %v4_12dfc = load i32, i32* inttoptr (i32 98392 to i32*), align 8
  store i32 %v4_12dfc, i32* %ip.global-to-local, align 4
  store i32 77320, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_12dfc)
  %v0_12e08 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_12e08, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 98320, i32* %r1.global-to-local, align 4
  %v4_12e14 = load i32, i32* inttoptr (i32 98336 to i32*), align 32
  store i32 %v4_12e14, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_12e20.378 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_12e14)
  %v0_12e20 = load i32, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_12e20, -32
  br i1 %tmp, label %dec_label_pc_12e3c, label %dec_label_pc_12e28

dec_label_pc_12e28:                               ; preds = %dec_label_pc_12dc4
  %v0_12e28 = call i32 @function_127c4()
  store i32 %v0_12e28, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 12, i32* @r3, align 4
  %v2_12e34 = inttoptr i32 %v0_12e28 to i32*
  store i32 12, i32* %v2_12e34, align 4
  br label %dec_label_pc_136b8

dec_label_pc_12e3c:                               ; preds = %dec_label_pc_12dc4
  %v1_12e3c = add i32 %v0_12e20, 11
  store i32 %v1_12e3c, i32* %r0.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 98320, i32* %r2.global-to-local, align 4
  %v2_12e48 = icmp ugt i32 %v1_12e3c, 14
  %v7_12e48 = icmp eq i32 %v1_12e3c, 15
  %v2_12e4c = xor i1 %v7_12e48, true
  %v3_12e4c = and i1 %v2_12e48, %v2_12e4c
  br i1 %v3_12e4c, label %bb, label %bb138

bb:                                               ; preds = %dec_label_pc_12e3c
  %v5_12e4c = and i32 %v1_12e3c, -8
  store i32 %v5_12e4c, i32* @sl, align 4
  br label %bb138

bb138:                                            ; preds = %dec_label_pc_12e3c, %bb
  %v4_12e50 = load i32, i32* inttoptr (i32 98352 to i32*), align 16
  store i32 %v4_12e50, i32* @r0, align 4
  %v1_12e54 = inttoptr i32 %v4_12e50 to i32*
  %v2_12e54 = load i32, i32* %v1_12e54, align 4
  store i32 %v2_12e54, i32* @r4, align 4
  %v2_12e58 = xor i1 %v2_12e48, true
  %v3_12e58 = or i1 %v7_12e48, %v2_12e58
  br i1 %v3_12e58, label %bb139, label %bb140

bb139:                                            ; preds = %bb138
  store i32 16, i32* @sl, align 4
  br label %bb140

bb140:                                            ; preds = %bb138, %bb139
  %v1_12e5c = urem i32 %v2_12e54, 2
  %v2_12e5c = icmp eq i32 %v1_12e5c, 0
  br i1 %v2_12e5c, label %dec_label_pc_12e64, label %dec_label_pc_12e74

dec_label_pc_12e64:                               ; preds = %bb140
  %v2_12e64 = icmp eq i32 %v2_12e54, 0
  br i1 %v2_12e64, label %dec_label_pc_12e6c, label %dec_label_pc_13250

dec_label_pc_12e6c:                               ; preds = %dec_label_pc_12e64
  %v0_12e6c = call i32 @function_13c7c()
  store i32 %v0_12e6c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13250

dec_label_pc_12e74:                               ; preds = %bb140
  %v0_12e74 = load i32, i32* @sl, align 4
  %tmp201 = icmp ugt i32 %v0_12e74, %v2_12e54
  br i1 %tmp201, label %dec_label_pc_12e9c, label %dec_label_pc_12e7c

dec_label_pc_12e7c:                               ; preds = %dec_label_pc_12e74
  %v1_12e7c = add i32 %v4_12e50, -4
  store i32 %v1_12e7c, i32* %r1.global-to-local, align 4
  %v3_12e80 = udiv i32 %v0_12e74, 8
  store i32 %v3_12e80, i32* %r2.global-to-local, align 4
  %v4_12e84 = mul nuw i32 %v3_12e80, 4
  %v5_12e84 = add i32 %v4_12e84, %v1_12e7c
  %v6_12e84 = inttoptr i32 %v5_12e84 to i32*
  %v7_12e84 = load i32, i32* %v6_12e84, align 4
  store i32 %v7_12e84, i32* %r0.global-to-local, align 4
  %v2_12e88 = icmp eq i32 %v7_12e84, 0
  br i1 %v2_12e88, label %dec_label_pc_12e9c, label %.thread1

.thread1:                                         ; preds = %dec_label_pc_12e7c
  %v2_12e8c = add i32 %v7_12e84, 8
  %v3_12e8c = inttoptr i32 %v2_12e8c to i32*
  %v4_12e8c = load i32, i32* %v3_12e8c, align 4
  store i32 %v4_12e8c, i32* %r3.global-to-local, align 4
  store i32 %v2_12e8c, i32* %r0.global-to-local, align 4
  store i32 %v2_12e8c, i32* %r4.global-to-local, align 4
  store i32 %v4_12e8c, i32* %v6_12e84, align 4
  br label %dec_label_pc_1369c

dec_label_pc_12e9c:                               ; preds = %dec_label_pc_12e7c, %dec_label_pc_12e74
  %tmp202 = icmp ugt i32 %v0_12e74, 255
  br i1 %tmp202, label %dec_label_pc_12eec, label %dec_label_pc_12ea4

dec_label_pc_12ea4:                               ; preds = %dec_label_pc_12e9c
  store i32 98320, i32* %ip.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_12eac = load i32, i32* inttoptr (i32 98352 to i32*), align 16
  %v3_12eb0 = udiv i32 %v0_12e74, 8
  store i32 %v3_12eb0, i32* @r7, align 4
  %v4_12eb4 = mul nuw i32 %v3_12eb0, 8
  %v5_12eb4 = add i32 %v4_12eac, %v4_12eb4
  store i32 %v5_12eb4, i32* %r3.global-to-local, align 4
  %v1_12eb8 = add i32 %v5_12eb4, 44
  store i32 %v1_12eb8, i32* %ip.global-to-local, align 4
  %v1_12ebc = add i32 %v5_12eb4, 56
  %v2_12ebc = inttoptr i32 %v1_12ebc to i32*
  %v3_12ebc = load i32, i32* %v2_12ebc, align 4
  store i32 %v3_12ebc, i32* %r0.global-to-local, align 4
  %v9_12ec0 = icmp eq i32 %v3_12ebc, %v1_12eb8
  br i1 %v9_12ec0, label %dec_label_pc_1304c, label %dec_label_pc_12ec8

dec_label_pc_12ec8:                               ; preds = %dec_label_pc_12ea4
  %v2_12ec8 = add i32 %v3_12ebc, %v0_12e74
  store i32 %v2_12ec8, i32* %r3.global-to-local, align 4
  %v1_12ecc = add i32 %v2_12ec8, 4
  %v2_12ecc = inttoptr i32 %v1_12ecc to i32*
  %v3_12ecc = load i32, i32* %v2_12ecc, align 4
  store i32 %v3_12ecc, i32* %r2.global-to-local, align 4
  %v1_12ed0 = add i32 %v3_12ebc, 12
  %v2_12ed0 = inttoptr i32 %v1_12ed0 to i32*
  %v3_12ed0 = load i32, i32* %v2_12ed0, align 4
  store i32 %v3_12ed0, i32* %r1.global-to-local, align 4
  %v1_12ed4 = or i32 %v3_12ecc, 1
  store i32 %v1_12ed4, i32* %r2.global-to-local, align 4
  %v1_12ed8 = add i32 %v3_12ebc, 8
  store i32 %v1_12ed8, i32* %r4.global-to-local, align 4
  store i32 %v1_12ed4, i32* %v2_12ecc, align 4
  %v0_12ee0 = load i32, i32* %ip.global-to-local, align 4
  %v1_12ee0 = load i32, i32* %r1.global-to-local, align 4
  %v2_12ee0 = add i32 %v1_12ee0, 8
  %v3_12ee0 = inttoptr i32 %v2_12ee0 to i32*
  store i32 %v0_12ee0, i32* %v3_12ee0, align 4
  %v0_12ee4 = load i32, i32* %r1.global-to-local, align 4
  %v1_12ee4 = load i32, i32* %ip.global-to-local, align 4
  %v2_12ee4 = add i32 %v1_12ee4, 12
  %v3_12ee4 = inttoptr i32 %v2_12ee4 to i32*
  store i32 %v0_12ee4, i32* %v3_12ee4, align 4
  br label %dec_label_pc_1369c

dec_label_pc_12eec:                               ; preds = %dec_label_pc_12e9c
  store i32 %v0_12e74, i32* %r0.global-to-local, align 4
  %v1_12ef0 = call i32 @function_12d4c(i32 %v0_12e74)
  store i32 %v1_12ef0, i32* %r0.global-to-local, align 4
  %v0_12ef4 = load i32, i32* @r4, align 4
  %v1_12ef4 = and i32 %v0_12ef4, 2
  %v2_12ef4 = icmp eq i32 %v1_12ef4, 0
  store i32 %v1_12ef0, i32* @r7, align 4
  br i1 %v2_12ef4, label %dec_label_pc_1304c, label %dec_label_pc_12f00

dec_label_pc_12f00:                               ; preds = %dec_label_pc_12eec
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 98320, i32* %r1.global-to-local, align 4
  %v4_12f08 = load i32, i32* inttoptr (i32 98352 to i32*), align 16
  store i32 %v4_12f08, i32* @r0, align 4
  %v0_12f0c = call i32 @function_13c7c()
  store i32 %v0_12f0c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1304c

dec_label_pc_12f14:                               ; preds = %dec_label_pc_13060
  %v1_12f14 = add i32 %v3_13060, 4
  %v2_12f14 = inttoptr i32 %v1_12f14 to i32*
  %v3_12f14 = load i32, i32* %v2_12f14, align 4
  store i32 %v3_12f14, i32* %r3.global-to-local, align 4
  %v0_12f18 = load i32, i32* @sl, align 4
  %v1_12f1c = and i32 %v3_12f14, -4
  store i32 %v1_12f1c, i32* %r4.global-to-local, align 4
  %v1_12f20 = add i32 %v3_13060, 12
  %v2_12f20 = inttoptr i32 %v1_12f20 to i32*
  %v3_12f20 = load i32, i32* %v2_12f20, align 4
  store i32 %v3_12f20, i32* %ip.global-to-local, align 4
  %tmp203 = icmp ugt i32 %v0_12f18, 255
  br i1 %tmp203, label %dec_label_pc_12f7c, label %dec_label_pc_12f28

dec_label_pc_12f28:                               ; preds = %dec_label_pc_12f14
  %v9_12f28 = icmp eq i32 %v3_12f20, %v0_12f80
  br i1 %v9_12f28, label %dec_label_pc_12f30, label %dec_label_pc_12f7c

dec_label_pc_12f30:                               ; preds = %dec_label_pc_12f28
  %v0_12f30 = load i32, i32* @sb, align 4
  %v1_12f30 = add i32 %v0_12f30, 48
  %v2_12f30 = inttoptr i32 %v1_12f30 to i32*
  %v3_12f30 = load i32, i32* %v2_12f30, align 4
  store i32 %v3_12f30, i32* %r3.global-to-local, align 4
  %v9_12f34 = icmp eq i32 %v3_13060, %v3_12f30
  br i1 %v9_12f34, label %dec_label_pc_12f3c, label %dec_label_pc_12f7c

dec_label_pc_12f3c:                               ; preds = %dec_label_pc_12f30
  %v1_12f3c = load i32, i32* @fp, align 4
  %tmp204 = icmp ugt i32 %v1_12f1c, %v1_12f3c
  br i1 %tmp204, label %dec_label_pc_12f44, label %dec_label_pc_12f7c

dec_label_pc_12f44:                               ; preds = %dec_label_pc_12f3c
  %v2_12f44 = sub i32 %v1_12f1c, %v0_12f18
  store i32 %v2_12f44, i32* %r2.global-to-local, align 4
  %v2_12f48 = add i32 %v0_12f18, %v3_13060
  store i32 %v2_12f48, i32* %r3.global-to-local, align 4
  %v1_12f4c = or i32 %v0_12f18, 1
  store i32 %v1_12f4c, i32* %r0.global-to-local, align 4
  %v1_12f50 = or i32 %v2_12f44, 1
  store i32 %v1_12f50, i32* %r1.global-to-local, align 4
  %v1_12f54 = add i32 %v3_13060, 8
  store i32 %v1_12f54, i32* %r4.global-to-local, align 4
  %v2_12f58 = add i32 %v0_12f80, 8
  %v3_12f58 = inttoptr i32 %v2_12f58 to i32*
  store i32 %v2_12f48, i32* %v3_12f58, align 4
  %v0_12f5c = load i32, i32* %r3.global-to-local, align 4
  %v1_12f5c = load i32, i32* %ip.global-to-local, align 4
  %v2_12f5c = add i32 %v1_12f5c, 12
  %v3_12f5c = inttoptr i32 %v2_12f5c to i32*
  store i32 %v0_12f5c, i32* %v3_12f5c, align 4
  %v0_12f60 = load i32, i32* %r0.global-to-local, align 4
  %v1_12f60 = load i32, i32* @r6, align 4
  %v2_12f60 = add i32 %v1_12f60, 4
  %v3_12f60 = inttoptr i32 %v2_12f60 to i32*
  store i32 %v0_12f60, i32* %v3_12f60, align 4
  %v0_12f64 = load i32, i32* %r3.global-to-local, align 4
  %v1_12f64 = load i32, i32* @sb, align 4
  %v2_12f64 = add i32 %v1_12f64, 48
  %v3_12f64 = inttoptr i32 %v2_12f64 to i32*
  store i32 %v0_12f64, i32* %v3_12f64, align 4
  %v0_12f68 = load i32, i32* %r2.global-to-local, align 4
  %v1_12f68 = load i32, i32* %r3.global-to-local, align 4
  %v3_12f68 = add i32 %v1_12f68, %v0_12f68
  %v4_12f68 = inttoptr i32 %v3_12f68 to i32*
  store i32 %v0_12f68, i32* %v4_12f68, align 4
  %v0_12f6c = load i32, i32* %r1.global-to-local, align 4
  %v1_12f6c = load i32, i32* %r3.global-to-local, align 4
  %v2_12f6c = add i32 %v1_12f6c, 4
  %v3_12f6c = inttoptr i32 %v2_12f6c to i32*
  store i32 %v0_12f6c, i32* %v3_12f6c, align 4
  %v0_12f70 = load i32, i32* %ip.global-to-local, align 4
  %v1_12f70 = load i32, i32* %r3.global-to-local, align 4
  %v2_12f70 = add i32 %v1_12f70, 12
  %v3_12f70 = inttoptr i32 %v2_12f70 to i32*
  store i32 %v0_12f70, i32* %v3_12f70, align 4
  %v0_12f74 = load i32, i32* %ip.global-to-local, align 4
  %v1_12f74 = load i32, i32* %r3.global-to-local, align 4
  %v2_12f74 = add i32 %v1_12f74, 8
  %v3_12f74 = inttoptr i32 %v2_12f74 to i32*
  store i32 %v0_12f74, i32* %v3_12f74, align 4
  br label %dec_label_pc_1369c

dec_label_pc_12f7c:                               ; preds = %dec_label_pc_12f3c, %dec_label_pc_12f30, %dec_label_pc_12f28, %dec_label_pc_12f14
  %v9_12f7c = icmp eq i32 %v1_12f1c, %v0_12f18
  %v2_12f80 = add i32 %v3_12f20, 8
  %v3_12f80 = inttoptr i32 %v2_12f80 to i32*
  store i32 %v0_12f80, i32* %v3_12f80, align 4
  %v0_12f84 = load i32, i32* %ip.global-to-local, align 4
  %v1_12f84 = load i32, i32* %r5.global-to-local, align 4
  %v2_12f84 = add i32 %v1_12f84, 12
  %v3_12f84 = inttoptr i32 %v2_12f84 to i32*
  store i32 %v0_12f84, i32* %v3_12f84, align 4
  br i1 %v9_12f7c, label %dec_label_pc_130dc.loopexit, label %dec_label_pc_12f98

dec_label_pc_12f98:                               ; preds = %dec_label_pc_12f7c
  %v0_12f98 = load i32, i32* %r4.global-to-local, align 4
  %tmp205 = icmp ugt i32 %v0_12f98, 255
  br i1 %tmp205, label %dec_label_pc_12fbc, label %dec_label_pc_12fa0

dec_label_pc_12fa0:                               ; preds = %dec_label_pc_12f98
  store i32 98320, i32* %r2.global-to-local, align 4
  %v1_12fa4 = load i32, i32* %r8.global-to-local, align 4
  %v2_12fa4 = add i32 %v1_12fa4, 98320
  %v3_12fa4 = inttoptr i32 %v2_12fa4 to i32*
  %v4_12fa4 = load i32, i32* %v3_12fa4, align 4
  %v3_12fa8 = udiv i32 %v0_12f98, 8
  store i32 %v3_12fa8, i32* %r0.global-to-local, align 4
  %v4_12fac = mul nuw i32 %v3_12fa8, 8
  %v5_12fac = add i32 %v4_12fa4, %v4_12fac
  store i32 %v5_12fac, i32* %r3.global-to-local, align 4
  %v1_12fb0 = add i32 %v5_12fac, 44
  store i32 %v1_12fb0, i32* %ip.global-to-local, align 4
  %v1_12fb4 = add i32 %v5_12fac, 52
  %v2_12fb4 = inttoptr i32 %v1_12fb4 to i32*
  %v3_12fb4 = load i32, i32* %v2_12fb4, align 4
  store i32 %v3_12fb4, i32* @lr, align 4
  br label %dec_label_pc_13014

dec_label_pc_12fbc:                               ; preds = %dec_label_pc_12f98
  store i32 %v0_12f98, i32* %r0.global-to-local, align 4
  %v1_12fc0 = call i32 @function_12d4c(i32 %v0_12f98)
  store i32 %v1_12fc0, i32* %r0.global-to-local, align 4
  store i32 98320, i32* %ip.global-to-local, align 4
  %v1_12fc8 = load i32, i32* %r8.global-to-local, align 4
  %v2_12fc8 = add i32 %v1_12fc8, 98320
  %v3_12fc8 = inttoptr i32 %v2_12fc8 to i32*
  %v4_12fc8 = load i32, i32* %v3_12fc8, align 4
  %v4_12fcc = mul i32 %v1_12fc0, 8
  %v5_12fcc = add i32 %v4_12fc8, %v4_12fcc
  store i32 %v5_12fcc, i32* %r3.global-to-local, align 4
  %v1_12fd0 = add i32 %v5_12fcc, 44
  store i32 %v1_12fd0, i32* %ip.global-to-local, align 4
  %v1_12fd4 = add i32 %v5_12fcc, 52
  %v2_12fd4 = inttoptr i32 %v1_12fd4 to i32*
  %v3_12fd4 = load i32, i32* %v2_12fd4, align 4
  store i32 %v3_12fd4, i32* @lr, align 4
  %v9_12fd8 = icmp eq i32 %v3_12fd4, %v1_12fd0
  br i1 %v9_12fd8, label %dec_label_pc_13014, label %dec_label_pc_12fe0

dec_label_pc_12fe0:                               ; preds = %dec_label_pc_12fbc
  %v1_12fe0 = add i32 %v5_12fcc, 56
  %v2_12fe0 = inttoptr i32 %v1_12fe0 to i32*
  %v3_12fe0 = load i32, i32* %v2_12fe0, align 4
  store i32 %v3_12fe0, i32* %r1.global-to-local, align 4
  %v1_12fe4 = add i32 %v3_12fe0, 4
  %v2_12fe4 = inttoptr i32 %v1_12fe4 to i32*
  %v3_12fe4 = load i32, i32* %v2_12fe4, align 4
  store i32 %v3_12fe4, i32* %r3.global-to-local, align 4
  %v0_12fe8 = load i32, i32* %r4.global-to-local, align 4
  %v3_12fe8 = icmp ult i32 %v0_12fe8, %v3_12fe4
  br i1 %v3_12fe8, label %.thread, label %dec_label_pc_13004.preheader

.thread:                                          ; preds = %dec_label_pc_12fe0
  store i32 %v1_12fd0, i32* @lr, align 4
  store i32 %v3_12fe0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13014

dec_label_pc_13004.preheader:                     ; preds = %dec_label_pc_12fe0
  %v2_12ff0 = or i32 %v0_12fe8, 1
  store i32 %v2_12ff0, i32* %r2.global-to-local, align 4
  %v1_13004179 = add i32 %v3_12fd4, 4
  %v2_13004180 = inttoptr i32 %v1_13004179 to i32*
  %v3_13004181 = load i32, i32* %v2_13004180, align 4
  store i32 %v3_13004181, i32* %r3.global-to-local, align 4
  %v3_13008183 = icmp ult i32 %v2_12ff0, %v3_13004181
  br i1 %v3_13008183, label %dec_label_pc_13000, label %dec_label_pc_13010

dec_label_pc_13000:                               ; preds = %dec_label_pc_13004.preheader, %dec_label_pc_13000
  %v0_13010184 = phi i32 [ %v3_13000, %dec_label_pc_13000 ], [ %v3_12fd4, %dec_label_pc_13004.preheader ]
  %v1_13000 = add i32 %v0_13010184, 8
  %v2_13000 = inttoptr i32 %v1_13000 to i32*
  %v3_13000 = load i32, i32* %v2_13000, align 4
  store i32 %v3_13000, i32* @lr, align 4
  %v1_13004 = add i32 %v3_13000, 4
  %v2_13004 = inttoptr i32 %v1_13004 to i32*
  %v3_13004 = load i32, i32* %v2_13004, align 4
  store i32 %v3_13004, i32* %r3.global-to-local, align 4
  %v3_13008 = icmp ult i32 %v2_12ff0, %v3_13004
  br i1 %v3_13008, label %dec_label_pc_13000, label %dec_label_pc_13010

dec_label_pc_13010:                               ; preds = %dec_label_pc_13000, %dec_label_pc_13004.preheader
  %v0_13010.lcssa = phi i32 [ %v3_12fd4, %dec_label_pc_13004.preheader ], [ %v3_13000, %dec_label_pc_13000 ]
  %v1_13010 = add i32 %v0_13010.lcssa, 12
  %v2_13010 = inttoptr i32 %v1_13010 to i32*
  %v3_13010 = load i32, i32* %v2_13010, align 4
  store i32 %v3_13010, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13014

dec_label_pc_13014:                               ; preds = %.thread, %dec_label_pc_12fbc, %dec_label_pc_12fa0, %dec_label_pc_13010
  %v0_13034 = phi i32 [ %v1_12fd0, %dec_label_pc_12fbc ], [ %v1_12fb0, %dec_label_pc_12fa0 ], [ %v3_13010, %dec_label_pc_13010 ], [ %v3_12fe0, %.thread ]
  %v0_13028 = phi i32 [ %v1_12fc0, %dec_label_pc_12fbc ], [ %v3_12fa8, %dec_label_pc_12fa0 ], [ %v1_12fc0, %dec_label_pc_13010 ], [ %v1_12fc0, %.thread ]
  %v1_13018 = phi i32 [ %v1_12fc8, %dec_label_pc_12fbc ], [ %v1_12fa4, %dec_label_pc_12fa0 ], [ %v1_12fc8, %dec_label_pc_13010 ], [ %v1_12fc8, %.thread ]
  store i32 98320, i32* %r2.global-to-local, align 4
  %v2_13018 = add i32 %v1_13018, 98320
  %v3_13018 = inttoptr i32 %v2_13018 to i32*
  %v4_13018 = load i32, i32* %v3_13018, align 4
  %v3_1301c = sdiv i32 %v0_13028, 32
  store i32 %v3_1301c, i32* %r3.global-to-local, align 4
  %v4_13020 = mul nsw i32 %v3_1301c, 4
  %v5_13020 = add i32 %v4_13018, %v4_13020
  store i32 %v5_13020, i32* %r1.global-to-local, align 4
  %v1_13024 = add i32 %v5_13020, 820
  %v2_13024 = inttoptr i32 %v1_13024 to i32*
  %v3_13024 = load i32, i32* %v2_13024, align 4
  %v1_13028 = urem i32 %v0_13028, 32
  store i32 %v1_13028, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v7_13030 = shl i32 1, %v1_13028
  %v8_13030 = or i32 %v3_13024, %v7_13030
  store i32 %v8_13030, i32* %r3.global-to-local, align 4
  %v1_13034 = load i32, i32* @r6, align 4
  %v2_13034 = add i32 %v1_13034, 12
  %v3_13034 = inttoptr i32 %v2_13034 to i32*
  store i32 %v0_13034, i32* %v3_13034, align 4
  %v0_13038 = load i32, i32* @lr, align 4
  %v1_13038 = load i32, i32* @r6, align 4
  %v2_13038 = add i32 %v1_13038, 8
  %v3_13038 = inttoptr i32 %v2_13038 to i32*
  store i32 %v0_13038, i32* %v3_13038, align 4
  %v0_1303c = load i32, i32* %r3.global-to-local, align 4
  %v1_1303c = load i32, i32* %r1.global-to-local, align 4
  %v2_1303c = add i32 %v1_1303c, 820
  %v3_1303c = inttoptr i32 %v2_1303c to i32*
  store i32 %v0_1303c, i32* %v3_1303c, align 4
  %v0_13040 = load i32, i32* @r6, align 4
  %v1_13040 = load i32, i32* @lr, align 4
  %v2_13040 = add i32 %v1_13040, 12
  %v3_13040 = inttoptr i32 %v2_13040 to i32*
  store i32 %v0_13040, i32* %v3_13040, align 4
  %v0_13044 = load i32, i32* @r6, align 4
  %v1_13044 = load i32, i32* %ip.global-to-local, align 4
  %v2_13044 = add i32 %v1_13044, 8
  %v3_13044 = inttoptr i32 %v2_13044 to i32*
  store i32 %v0_13044, i32* %v3_13044, align 4
  %v0_13060.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13060

dec_label_pc_1304c:                               ; preds = %dec_label_pc_12ea4, %dec_label_pc_12eec, %dec_label_pc_12f00
  store i32 32, i32* %r8.global-to-local, align 4
  store i32 98320, i32* %r1.global-to-local, align 4
  %v4_13054 = load i32, i32* inttoptr (i32 98352 to i32*), align 16
  store i32 %v4_13054, i32* @sb, align 4
  %v0_13058 = load i32, i32* @sl, align 4
  %v1_13058 = add i32 %v0_13058, 16
  store i32 %v1_13058, i32* @fp, align 4
  %v1_1305c = add i32 %v4_13054, 52
  store i32 %v1_1305c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13060

dec_label_pc_13060:                               ; preds = %dec_label_pc_13014, %dec_label_pc_1304c
  %v0_12f80 = phi i32 [ %v0_13060.pre, %dec_label_pc_13014 ], [ %v1_1305c, %dec_label_pc_1304c ]
  %v1_13060 = add i32 %v0_12f80, 12
  %v2_13060 = inttoptr i32 %v1_13060 to i32*
  %v3_13060 = load i32, i32* %v2_13060, align 4
  store i32 %v3_13060, i32* @r6, align 4
  %v9_13064 = icmp eq i32 %v3_13060, %v0_12f80
  br i1 %v9_13064, label %dec_label_pc_1306c, label %dec_label_pc_12f14

dec_label_pc_1306c:                               ; preds = %dec_label_pc_13060
  %v0_1306c = load i32, i32* @sl, align 4
  %tmp206 = icmp ult i32 %v0_1306c, 256
  %v0_13124.pre = load i32, i32* @r7, align 4
  br i1 %tmp206, label %dec_label_pc_1306c.dec_label_pc_13124_crit_edge, label %dec_label_pc_13074

dec_label_pc_1306c.dec_label_pc_13124_crit_edge:  ; preds = %dec_label_pc_1306c
  %.pre200 = mul i32 %v0_13124.pre, 8
  br label %dec_label_pc_13124

dec_label_pc_13074:                               ; preds = %dec_label_pc_1306c
  %v4_13074 = mul i32 %v0_13124.pre, 8
  %v5_13074 = add i32 %v4_13074, %v0_12f80
  store i32 %v5_13074, i32* %r3.global-to-local, align 4
  %v1_13078 = add i32 %v5_13074, -8
  store i32 %v1_13078, i32* %r1.global-to-local, align 4
  %v1_1307c = add i32 %v5_13074, 4
  %v2_1307c = inttoptr i32 %v1_1307c to i32*
  %storemerge.pre = load i32, i32* %v2_1307c, align 4
  br label %dec_label_pc_1311c

dec_label_pc_13084:                               ; preds = %dec_label_pc_1311c
  %v1_13084 = add i32 %v1_130ac, 4
  %v2_13084 = inttoptr i32 %v1_13084 to i32*
  %v3_13084 = load i32, i32* %v2_13084, align 4
  store i32 %v3_13084, i32* %r3.global-to-local, align 4
  %v1_13088 = and i32 %v3_13084, -4
  store i32 %v1_13088, i32* %r2.global-to-local, align 4
  %v3_1308c = icmp ult i32 %v1_13088, %v0_1306c
  %v1_13090 = add i32 %v1_130ac, 12
  %v2_13090 = inttoptr i32 %v1_13090 to i32*
  %v3_13090 = load i32, i32* %v2_13090, align 4
  store i32 %v3_13090, i32* %r0.global-to-local, align 4
  br i1 %v3_1308c, label %dec_label_pc_1311c, label %dec_label_pc_13098

dec_label_pc_13098:                               ; preds = %dec_label_pc_13084
  %v1_13098 = add i32 %v1_130ac, 8
  %v2_13098 = inttoptr i32 %v1_13098 to i32*
  %v3_13098 = load i32, i32* %v2_13098, align 4
  store i32 %v3_13098, i32* %r1.global-to-local, align 4
  %v1_1309c = add i32 %v3_13098, 12
  %v2_1309c = inttoptr i32 %v1_1309c to i32*
  %v3_1309c = load i32, i32* %v2_1309c, align 4
  store i32 %v3_1309c, i32* %r3.global-to-local, align 4
  %v9_130a0 = icmp eq i32 %v3_1309c, %v1_130ac
  br i1 %v9_130a0, label %dec_label_pc_130a8, label %dec_label_pc_130b4

dec_label_pc_130a8:                               ; preds = %dec_label_pc_13098
  %v1_130a8 = add i32 %v3_13090, 8
  %v2_130a8 = inttoptr i32 %v1_130a8 to i32*
  %v3_130a8 = load i32, i32* %v2_130a8, align 4
  store i32 %v3_130a8, i32* %r3.global-to-local, align 4
  %v9_130ac = icmp eq i32 %v3_130a8, %v1_130ac
  br i1 %v9_130ac, label %dec_label_pc_130b8, label %dec_label_pc_130b4

dec_label_pc_130b4:                               ; preds = %dec_label_pc_13098, %dec_label_pc_130a8
  %v0_130b4 = call i32 @function_140ac()
  store i32 %v0_130b4, i32* %r0.global-to-local, align 4
  %v0_130b8.pre = load i32, i32* @sl, align 4
  %v1_130b8.pre = load i32, i32* @r2, align 4
  %v0_130c0.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_130b8

dec_label_pc_130b8:                               ; preds = %dec_label_pc_130a8, %dec_label_pc_130b4
  %v1_130c0 = phi i32 [ %v3_13090, %dec_label_pc_130a8 ], [ %v0_130b4, %dec_label_pc_130b4 ]
  %v0_130c0 = phi i32 [ %v3_13098, %dec_label_pc_130a8 ], [ %v0_130c0.pre, %dec_label_pc_130b4 ]
  %v1_130b8 = phi i32 [ %v1_13088, %dec_label_pc_130a8 ], [ %v1_130b8.pre, %dec_label_pc_130b4 ]
  %v0_130b8 = phi i32 [ %v0_1306c, %dec_label_pc_130a8 ], [ %v0_130b8.pre, %dec_label_pc_130b4 ]
  %v2_130b8 = sub i32 %v1_130b8, %v0_130b8
  store i32 %v2_130b8, i32* %lr.global-to-local, align 4
  %v2_130c0 = add i32 %v1_130c0, 8
  %v3_130c0 = inttoptr i32 %v2_130c0 to i32*
  store i32 %v0_130c0, i32* %v3_130c0, align 4
  %v0_130c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_130c4 = load i32, i32* %r1.global-to-local, align 4
  %v2_130c4 = add i32 %v1_130c4, 12
  %v3_130c4 = inttoptr i32 %v2_130c4 to i32*
  store i32 %v0_130c4, i32* %v3_130c4, align 4
  %v0_130c8 = load i32, i32* %ip.global-to-local, align 4
  %v1_130c8 = add i32 %v0_130c8, 8
  store i32 %v1_130c8, i32* %r0.global-to-local, align 4
  %tmp207 = icmp ugt i32 %v2_130b8, 15
  br i1 %tmp207, label %dec_label_pc_130e8, label %dec_label_pc_130d0

dec_label_pc_130d0:                               ; preds = %dec_label_pc_130b8
  %v1_130d0 = load i32, i32* %r2.global-to-local, align 4
  %v2_130d0 = add i32 %v1_130d0, %v0_130c8
  store i32 %v2_130d0, i32* %r2.global-to-local, align 4
  %v1_130d4 = add i32 %v2_130d0, 4
  %v2_130d4 = inttoptr i32 %v1_130d4 to i32*
  %v3_130d4 = load i32, i32* %v2_130d4, align 4
  store i32 %v3_130d4, i32* %r3.global-to-local, align 4
  store i32 %v1_130c8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_130dc

dec_label_pc_130dc.loopexit:                      ; preds = %dec_label_pc_12f7c
  %v1_12f88 = load i32, i32* @r6, align 4
  %v2_12f88 = load i32, i32* @sl, align 4
  %v3_12f88 = add i32 %v2_12f88, %v1_12f88
  store i32 %v3_12f88, i32* %r2.global-to-local, align 4
  %v2_12f8c = add i32 %v3_12f88, 4
  %v3_12f8c = inttoptr i32 %v2_12f8c to i32*
  %v4_12f8c = load i32, i32* %v3_12f8c, align 4
  store i32 %v4_12f8c, i32* %r3.global-to-local, align 4
  %v2_12f90 = add i32 %v1_12f88, 8
  store i32 %v2_12f90, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_130dc

dec_label_pc_130dc:                               ; preds = %.dec_label_pc_130dc_crit_edge, %dec_label_pc_130dc.loopexit, %dec_label_pc_130d0
  %v1_130e0 = phi i32 [ %v4_13204, %.dec_label_pc_130dc_crit_edge ], [ %v3_12f88, %dec_label_pc_130dc.loopexit ], [ %v2_130d0, %dec_label_pc_130d0 ]
  %v0_130dc = phi i32 [ %v7_13204, %.dec_label_pc_130dc_crit_edge ], [ %v4_12f8c, %dec_label_pc_130dc.loopexit ], [ %v3_130d4, %dec_label_pc_130d0 ]
  %v1_130dc = or i32 %v0_130dc, 1
  store i32 %v1_130dc, i32* %r3.global-to-local, align 4
  %v2_130e0 = add i32 %v1_130e0, 4
  %v3_130e0 = inttoptr i32 %v2_130e0 to i32*
  store i32 %v1_130dc, i32* %v3_130e0, align 4
  br label %dec_label_pc_1369c

dec_label_pc_130e8:                               ; preds = %dec_label_pc_130b8
  %v1_130e8 = load i32, i32* @sl, align 4
  %v2_130e8 = add i32 %v1_130e8, %v0_130c8
  store i32 %v2_130e8, i32* %r2.global-to-local, align 4
  %v1_130ec = or i32 %v1_130e8, 1
  store i32 %v1_130ec, i32* %r3.global-to-local, align 4
  %v0_130f0 = load i32, i32* %lr.global-to-local, align 4
  %v1_130f0 = or i32 %v0_130f0, 1
  store i32 %v1_130f0, i32* %r1.global-to-local, align 4
  store i32 %v1_130c8, i32* %r4.global-to-local, align 4
  %v2_130f8 = add i32 %v0_130c8, 4
  %v3_130f8 = inttoptr i32 %v2_130f8 to i32*
  store i32 %v1_130ec, i32* %v3_130f8, align 4
  %v0_130fc = load i32, i32* %r2.global-to-local, align 4
  %v1_130fc = load i32, i32* @r6, align 4
  %v2_130fc = add i32 %v1_130fc, 8
  %v3_130fc = inttoptr i32 %v2_130fc to i32*
  store i32 %v0_130fc, i32* %v3_130fc, align 4
  %v0_13100 = load i32, i32* %r2.global-to-local, align 4
  %v1_13100 = load i32, i32* @r6, align 4
  %v2_13100 = add i32 %v1_13100, 12
  %v3_13100 = inttoptr i32 %v2_13100 to i32*
  store i32 %v0_13100, i32* %v3_13100, align 4
  %v0_13104 = load i32, i32* %lr.global-to-local, align 4
  %v1_13104 = load i32, i32* %r2.global-to-local, align 4
  %v3_13104 = add i32 %v1_13104, %v0_13104
  %v4_13104 = inttoptr i32 %v3_13104 to i32*
  store i32 %v0_13104, i32* %v4_13104, align 4
  %v0_13108 = load i32, i32* %r1.global-to-local, align 4
  %v1_13108 = load i32, i32* %r2.global-to-local, align 4
  %v2_13108 = add i32 %v1_13108, 4
  %v3_13108 = inttoptr i32 %v2_13108 to i32*
  store i32 %v0_13108, i32* %v3_13108, align 4
  %v0_1310c = load i32, i32* @r6, align 4
  %v1_1310c = load i32, i32* %r2.global-to-local, align 4
  %v2_1310c = add i32 %v1_1310c, 12
  %v3_1310c = inttoptr i32 %v2_1310c to i32*
  store i32 %v0_1310c, i32* %v3_1310c, align 4
  %v0_13110 = load i32, i32* @r6, align 4
  %v1_13110 = load i32, i32* %r2.global-to-local, align 4
  %v2_13110 = add i32 %v1_13110, 8
  %v3_13110 = inttoptr i32 %v2_13110 to i32*
  store i32 %v0_13110, i32* %v3_13110, align 4
  br label %dec_label_pc_1369c

dec_label_pc_1311c:                               ; preds = %dec_label_pc_13084, %dec_label_pc_13074
  %v1_130ac = phi i32 [ %storemerge.pre, %dec_label_pc_13074 ], [ %v3_13090, %dec_label_pc_13084 ]
  store i32 %v1_130ac, i32* %ip.global-to-local, align 4
  %v9_1311c = icmp eq i32 %v1_130ac, %v1_13078
  br i1 %v9_1311c, label %dec_label_pc_13124.loopexit, label %dec_label_pc_13084

dec_label_pc_13124.loopexit:                      ; preds = %dec_label_pc_1311c
  br label %dec_label_pc_13124

dec_label_pc_13124:                               ; preds = %dec_label_pc_1306c.dec_label_pc_13124_crit_edge, %dec_label_pc_13124.loopexit
  %v4_13154.pre-phi = phi i32 [ %.pre200, %dec_label_pc_1306c.dec_label_pc_13124_crit_edge ], [ %v4_13074, %dec_label_pc_13124.loopexit ]
  %v1_13124 = add i32 %v0_13124.pre, 1
  store i32 %v1_13124, i32* %r2.global-to-local, align 4
  %v1_13128 = urem i32 %v1_13124, 32
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 98320, i32* %r0.global-to-local, align 4
  %v6_13134 = shl i32 1, %v1_13128
  store i32 %v6_13134, i32* %ip.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_1313c = load i32, i32* inttoptr (i32 98352 to i32*), align 16
  store i32 %v4_1313c, i32* %r3.global-to-local, align 4
  %v3_13140 = udiv i32 %v1_13124, 32
  store i32 %v3_13140, i32* @r5, align 4
  %v4_13144 = mul nuw nsw i32 %v3_13140, 4
  %v5_13144 = add i32 %v4_1313c, %v4_13144
  store i32 %v5_13144, i32* %r2.global-to-local, align 4
  %v1_13148 = add i32 %v5_13144, 820
  %v2_13148 = inttoptr i32 %v1_13148 to i32*
  %v3_13148 = load i32, i32* %v2_13148, align 4
  store i32 %v3_13148, i32* @r4, align 4
  %v1_1314c = add i32 %v4_1313c, 52
  store i32 %v1_1314c, i32* %r3.global-to-local, align 4
  store i32 32, i32* @r8, align 4
  %v5_13154 = add i32 %v1_1314c, %v4_13154.pre-phi
  store i32 %v5_13154, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13158

dec_label_pc_13158:                               ; preds = %dec_label_pc_131c0, %dec_label_pc_13124
  %v1_13160 = phi i32 [ %v1_13160.pre, %dec_label_pc_131c0 ], [ %v3_13148, %dec_label_pc_13124 ]
  %v0_13160 = phi i32 [ %v0_13158.pre, %dec_label_pc_131c0 ], [ %v6_13134, %dec_label_pc_13124 ]
  %v1_13158 = sub i32 1, %v0_13160
  %v2_13158 = icmp ult i32 %v0_13160, 2
  %v1_13158. = select i1 %v2_13158, i32 %v1_13158, i32 0
  store i32 %v1_13158., i32* %r3.global-to-local, align 4
  %tmp141 = icmp ugt i32 %v0_13160, %v1_13160
  br i1 %tmp141, label %.thread12, label %bb142

.thread12:                                        ; preds = %dec_label_pc_13158
  %v5_13164 = or i32 %v1_13158., 1
  store i32 %v5_13164, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_13170.preheader

bb142:                                            ; preds = %dec_label_pc_13158
  %v2_13168 = icmp eq i32 %v1_13158., 0
  br i1 %v2_13168, label %.dec_label_pc_131ac.preheader_crit_edge, label %dec_label_pc_13170.preheader

.dec_label_pc_131ac.preheader_crit_edge:          ; preds = %bb142
  %v0_131a454.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_131ac.preheader

dec_label_pc_13170.preheader:                     ; preds = %bb142, %.thread12
  %v0_13170.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13170

dec_label_pc_13170:                               ; preds = %dec_label_pc_13170.preheader, %dec_label_pc_1317c
  %v0_13170 = phi i32 [ %v0_13170.pre, %dec_label_pc_13170.preheader ], [ %v1_13170, %dec_label_pc_1317c ]
  %v1_13170 = add i32 %v0_13170, 1
  store i32 %v1_13170, i32* @r5, align 4
  %tmp208 = icmp ugt i32 %v1_13170, 2
  br i1 %tmp208, label %dec_label_pc_13250.loopexit, label %dec_label_pc_1317c

dec_label_pc_1317c:                               ; preds = %dec_label_pc_13170
  store i32 98320, i32* %r3.global-to-local, align 4
  %v1_13180 = load i32, i32* @r8, align 4
  %v2_13180 = add i32 %v1_13180, 98320
  %v3_13180 = inttoptr i32 %v2_13180 to i32*
  %v4_13180 = load i32, i32* %v3_13180, align 4
  store i32 %v4_13180, i32* %r2.global-to-local, align 4
  %v4_13184 = mul i32 %v1_13170, 4
  %v5_13184 = add i32 %v4_13180, %v4_13184
  store i32 %v5_13184, i32* %r3.global-to-local, align 4
  %v1_13188 = add i32 %v5_13184, 820
  %v2_13188 = inttoptr i32 %v1_13188 to i32*
  %v3_13188 = load i32, i32* %v2_13188, align 4
  store i32 %v3_13188, i32* @r4, align 4
  %v2_1318c = icmp eq i32 %v3_13188, 0
  br i1 %v2_1318c, label %dec_label_pc_13170, label %dec_label_pc_13194

dec_label_pc_13194:                               ; preds = %dec_label_pc_1317c
  %v4_13194 = mul i32 %v1_13170, 256
  %v5_13194 = add i32 %v4_13180, %v4_13194
  store i32 %v5_13194, i32* %r3.global-to-local, align 4
  %v1_13198 = add i32 %v5_13194, 44
  store i32 %v1_13198, i32* %r0.global-to-local, align 4
  %v0_1319c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_1319c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_131ac.preheader

dec_label_pc_131ac.preheader:                     ; preds = %.dec_label_pc_131ac.preheader_crit_edge, %dec_label_pc_13194
  %v0_131a454 = phi i32 [ %v1_13198, %dec_label_pc_13194 ], [ %v0_131a454.pre, %.dec_label_pc_131ac.preheader_crit_edge ]
  %v0_131c8 = phi i32 [ %v3_13188, %dec_label_pc_13194 ], [ %v1_13160, %.dec_label_pc_131ac.preheader_crit_edge ]
  %ip.promoted = phi i32 [ %v0_1319c, %dec_label_pc_13194 ], [ %v0_13160, %.dec_label_pc_131ac.preheader_crit_edge ]
  %v2_131ac51 = and i32 %ip.promoted, %v0_131c8
  %v4_131ac53 = icmp eq i32 %v2_131ac51, 0
  br i1 %v4_131ac53, label %dec_label_pc_131a4, label %dec_label_pc_131b4

dec_label_pc_131a4:                               ; preds = %dec_label_pc_131ac.preheader, %dec_label_pc_131a4
  %v2_131a856 = phi i32 [ %v2_131a8, %dec_label_pc_131a4 ], [ %ip.promoted, %dec_label_pc_131ac.preheader ]
  %v0_131a455 = phi i32 [ %v1_131a4, %dec_label_pc_131a4 ], [ %v0_131a454, %dec_label_pc_131ac.preheader ]
  %v1_131a4 = add i32 %v0_131a455, 8
  %v2_131a8 = mul i32 %v2_131a856, 2
  %v2_131ac = and i32 %v2_131a8, %v0_131c8
  %v4_131ac = icmp eq i32 %v2_131ac, 0
  br i1 %v4_131ac, label %dec_label_pc_131a4, label %dec_label_pc_131ac.dec_label_pc_131b4_crit_edge

dec_label_pc_131ac.dec_label_pc_131b4_crit_edge:  ; preds = %dec_label_pc_131a4
  store i32 %v1_131a4, i32* %r0.global-to-local, align 4
  store i32 %v2_131a8, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_131b4

dec_label_pc_131b4:                               ; preds = %dec_label_pc_131ac.dec_label_pc_131b4_crit_edge, %dec_label_pc_131ac.preheader
  %v0_131d4 = phi i32 [ %v2_131a8, %dec_label_pc_131ac.dec_label_pc_131b4_crit_edge ], [ %ip.promoted, %dec_label_pc_131ac.preheader ]
  %v0_131f8 = phi i32 [ %v1_131a4, %dec_label_pc_131ac.dec_label_pc_131b4_crit_edge ], [ %v0_131a454, %dec_label_pc_131ac.preheader ]
  %v1_131b4 = add i32 %v0_131f8, 12
  %v2_131b4 = inttoptr i32 %v1_131b4 to i32*
  %v3_131b4 = load i32, i32* %v2_131b4, align 4
  store i32 %v3_131b4, i32* @lr, align 4
  %v9_131b8 = icmp eq i32 %v3_131b4, %v0_131f8
  br i1 %v9_131b8, label %dec_label_pc_131c0, label %dec_label_pc_131e0

dec_label_pc_131c0:                               ; preds = %dec_label_pc_131b4
  store i32 98320, i32* %r0.global-to-local, align 4
  %v1_131c4 = load i32, i32* @r8, align 4
  %v2_131c4 = add i32 %v1_131c4, 98320
  %v3_131c4 = inttoptr i32 %v2_131c4 to i32*
  %v4_131c4 = load i32, i32* %v3_131c4, align 4
  %v2_131c8 = sub i32 -1, %v0_131d4
  %v3_131c8 = and i32 %v0_131c8, %v2_131c8
  store i32 %v3_131c8, i32* @r4, align 4
  %v1_131cc = load i32, i32* @r5, align 4
  %v4_131cc = mul i32 %v1_131cc, 4
  %v5_131cc = add i32 %v4_131cc, %v4_131c4
  store i32 %v5_131cc, i32* %r3.global-to-local, align 4
  %v1_131d0 = add i32 %v0_131f8, 8
  store i32 %v1_131d0, i32* %r0.global-to-local, align 4
  %v2_131d4 = mul i32 %v0_131d4, 2
  store i32 %v2_131d4, i32* %ip.global-to-local, align 4
  %v2_131d8 = add i32 %v5_131cc, 820
  %v3_131d8 = inttoptr i32 %v2_131d8 to i32*
  store i32 %v3_131c8, i32* %v3_131d8, align 4
  %v0_13158.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_13160.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13158

dec_label_pc_131e0:                               ; preds = %dec_label_pc_131b4
  %v1_131e0 = add i32 %v3_131b4, 4
  %v2_131e0 = inttoptr i32 %v1_131e0 to i32*
  %v3_131e0 = load i32, i32* %v2_131e0, align 4
  store i32 %v3_131e0, i32* %r3.global-to-local, align 4
  %v1_131e4 = and i32 %v3_131e0, -4
  store i32 %v1_131e4, i32* %r2.global-to-local, align 4
  %v0_131e8 = load i32, i32* @sl, align 4
  %v2_131e8 = sub i32 %v1_131e4, %v0_131e8
  store i32 %v2_131e8, i32* %ip.global-to-local, align 4
  %v1_131ec = add i32 %v3_131b4, 12
  %v2_131ec = inttoptr i32 %v1_131ec to i32*
  %v3_131ec = load i32, i32* %v2_131ec, align 4
  store i32 %v3_131ec, i32* %r3.global-to-local, align 4
  %tmp209 = icmp ult i32 %v2_131e8, 16
  br i1 %tmp209, label %bb143, label %bb144

bb143:                                            ; preds = %dec_label_pc_131e0
  %v6_131f4 = add i32 %v1_131e4, %v3_131b4
  store i32 %v6_131f4, i32* %r2.global-to-local, align 4
  br label %bb144

bb144:                                            ; preds = %dec_label_pc_131e0, %bb143
  %v2_131f8 = add i32 %v3_131ec, 8
  %v3_131f8 = inttoptr i32 %v2_131f8 to i32*
  store i32 %v0_131f8, i32* %v3_131f8, align 4
  %v0_131fc = load i32, i32* %r3.global-to-local, align 4
  %v1_131fc = load i32, i32* %r0.global-to-local, align 4
  %v2_131fc = add i32 %v1_131fc, 12
  %v3_131fc = inttoptr i32 %v2_131fc to i32*
  store i32 %v0_131fc, i32* %v3_131fc, align 4
  %v4_13200 = load i32, i32* @lr, align 4
  br i1 %tmp209, label %.dec_label_pc_130dc_crit_edge, label %dec_label_pc_1320c

.dec_label_pc_130dc_crit_edge:                    ; preds = %bb144
  %v5_13200 = add i32 %v4_13200, 8
  store i32 %v5_13200, i32* %r4.global-to-local, align 4
  %v4_13204 = load i32, i32* %r2.global-to-local, align 4
  %v5_13204 = add i32 %v4_13204, 4
  %v6_13204 = inttoptr i32 %v5_13204 to i32*
  %v7_13204 = load i32, i32* %v6_13204, align 4
  store i32 %v7_13204, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_130dc

dec_label_pc_1320c:                               ; preds = %bb144
  %v1_1320c = load i32, i32* @sl, align 4
  %v2_1320c = add i32 %v1_1320c, %v4_13200
  store i32 %v2_1320c, i32* %r1.global-to-local, align 4
  %v1_13214 = load i32, i32* @r6, align 4
  %v2_13214 = add i32 %v1_13214, 8
  %v3_13214 = inttoptr i32 %v2_13214 to i32*
  store i32 %v2_1320c, i32* %v3_13214, align 4
  %v0_13218 = load i32, i32* %r1.global-to-local, align 4
  %v1_13218 = load i32, i32* @r6, align 4
  %v2_13218 = add i32 %v1_13218, 12
  %v3_13218 = inttoptr i32 %v2_13218 to i32*
  store i32 %v0_13218, i32* %v3_13218, align 4
  %v0_1321c = load i32, i32* @r6, align 4
  %v1_1321c = load i32, i32* %r1.global-to-local, align 4
  %v2_1321c = add i32 %v1_1321c, 8
  %v3_1321c = inttoptr i32 %v2_1321c to i32*
  store i32 %v0_1321c, i32* %v3_1321c, align 4
  %v0_13220 = load i32, i32* @r6, align 4
  %v1_13220 = load i32, i32* %r1.global-to-local, align 4
  %v2_13220 = add i32 %v1_13220, 12
  %v3_13220 = inttoptr i32 %v2_13220 to i32*
  store i32 %v0_13220, i32* %v3_13220, align 4
  %tmp210 = icmp ult i32 %v1_1320c, 256
  br i1 %tmp210, label %bb145, label %.thread121

bb145:                                            ; preds = %dec_label_pc_1320c
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 98320, i32* %r2.global-to-local, align 4
  %v8_1322c = load i32, i32* inttoptr (i32 98352 to i32*), align 16
  store i32 %v8_1322c, i32* %r3.global-to-local, align 4
  %v4_13230 = load i32, i32* %r1.global-to-local, align 4
  %v6_13230 = add i32 %v8_1322c, 48
  %v7_13230 = inttoptr i32 %v6_13230 to i32*
  store i32 %v4_13230, i32* %v7_13230, align 4
  br label %.thread121

.thread121:                                       ; preds = %dec_label_pc_1320c, %bb145
  %v0_13234 = load i32, i32* @sl, align 4
  %v1_13234 = or i32 %v0_13234, 1
  store i32 %v1_13234, i32* %r2.global-to-local, align 4
  %v0_13238 = load i32, i32* %ip.global-to-local, align 4
  %v1_13238 = or i32 %v0_13238, 1
  store i32 %v1_13238, i32* %r3.global-to-local, align 4
  %v0_1323c = load i32, i32* @lr, align 4
  %v1_1323c = add i32 %v0_1323c, 8
  store i32 %v1_1323c, i32* %r4.global-to-local, align 4
  %v2_13240 = add i32 %v0_1323c, 4
  %v3_13240 = inttoptr i32 %v2_13240 to i32*
  store i32 %v1_13234, i32* %v3_13240, align 4
  %v0_13244 = load i32, i32* %ip.global-to-local, align 4
  %v1_13244 = load i32, i32* %r1.global-to-local, align 4
  %v3_13244 = add i32 %v1_13244, %v0_13244
  %v4_13244 = inttoptr i32 %v3_13244 to i32*
  store i32 %v0_13244, i32* %v4_13244, align 4
  %v0_13248 = load i32, i32* %r3.global-to-local, align 4
  %v1_13248 = load i32, i32* %r1.global-to-local, align 4
  %v2_13248 = add i32 %v1_13248, 4
  %v3_13248 = inttoptr i32 %v2_13248 to i32*
  store i32 %v0_13248, i32* %v3_13248, align 4
  br label %dec_label_pc_1369c

dec_label_pc_13250.loopexit:                      ; preds = %dec_label_pc_13170
  br label %dec_label_pc_13250

dec_label_pc_13250:                               ; preds = %dec_label_pc_13250.loopexit, %dec_label_pc_12e64, %dec_label_pc_12e6c
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 98320, i32* %ip.global-to-local, align 4
  %v4_13258 = load i32, i32* inttoptr (i32 98352 to i32*), align 16
  store i32 %v4_13258, i32* @r0, align 4
  %v1_1325c = add i32 %v4_13258, 44
  %v2_1325c = inttoptr i32 %v1_1325c to i32*
  %v3_1325c = load i32, i32* %v2_1325c, align 4
  store i32 %v3_1325c, i32* %ip.global-to-local, align 4
  %v1_13260 = add i32 %v3_1325c, 4
  %v2_13260 = inttoptr i32 %v1_13260 to i32*
  %v3_13260 = load i32, i32* %v2_13260, align 4
  %v0_13264 = load i32, i32* @sl, align 4
  %v1_13264 = add i32 %v0_13264, 16
  store i32 %v1_13264, i32* %r1.global-to-local, align 4
  %v1_13268 = and i32 %v3_13260, -4
  store i32 %v1_13268, i32* %r3.global-to-local, align 4
  %v3_1326c = icmp ult i32 %v1_13268, %v1_13264
  br i1 %v3_1326c, label %dec_label_pc_1329c, label %dec_label_pc_13278

dec_label_pc_13278:                               ; preds = %dec_label_pc_13250
  %v2_13278 = sub i32 %v1_13268, %v0_13264
  %v2_1327c = add i32 %v0_13264, %v3_1325c
  store i32 %v2_1327c, i32* %r1.global-to-local, align 4
  %v1_13280 = or i32 %v2_13278, 1
  store i32 %v1_13280, i32* %r3.global-to-local, align 4
  %v1_13284 = or i32 %v0_13264, 1
  store i32 %v1_13284, i32* %r2.global-to-local, align 4
  %v1_13288 = add i32 %v3_1325c, 8
  store i32 %v1_13288, i32* %r4.global-to-local, align 4
  store i32 %v1_13284, i32* %v2_13260, align 4
  %v0_13290 = load i32, i32* %r1.global-to-local, align 4
  %v1_13290 = load i32, i32* @r0, align 4
  %v2_13290 = add i32 %v1_13290, 44
  %v3_13290 = inttoptr i32 %v2_13290 to i32*
  store i32 %v0_13290, i32* %v3_13290, align 4
  %v0_13294 = load i32, i32* %r3.global-to-local, align 4
  %v1_13294 = load i32, i32* %r1.global-to-local, align 4
  %v2_13294 = add i32 %v1_13294, 4
  %v3_13294 = inttoptr i32 %v2_13294 to i32*
  store i32 %v0_13294, i32* %v3_13294, align 4
  br label %dec_label_pc_1369c

dec_label_pc_1329c:                               ; preds = %dec_label_pc_13250
  %v1_1329c = inttoptr i32 %v4_13258 to i32*
  %v2_1329c = load i32, i32* %v1_1329c, align 4
  store i32 %v2_1329c, i32* %r3.global-to-local, align 4
  %v1_132a0 = and i32 %v2_1329c, 2
  store i32 %v1_132a0, i32* %ip.global-to-local, align 4
  %v2_132a0 = icmp eq i32 %v1_132a0, 0
  %v1_132a4 = add i32 %v4_13258, 860
  %v2_132a4 = inttoptr i32 %v1_132a4 to i32*
  %v3_132a4 = load i32, i32* %v2_132a4, align 4
  store i32 %v3_132a4, i32* %r1.global-to-local, align 4
  br i1 %v2_132a0, label %dec_label_pc_132bc, label %dec_label_pc_132ac

dec_label_pc_132ac:                               ; preds = %dec_label_pc_1329c
  %v0_132ac = call i32 @function_13c7c()
  %v0_132b0 = load i32, i32* @sl, align 4
  %v1_132b0 = add i32 %v0_132b0, -7
  store i32 %v1_132b0, i32* @r0, align 4
  %v0_132b4 = call i32 @function_12dc4()
  store i32 %v0_132b4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13698

dec_label_pc_132bc:                               ; preds = %dec_label_pc_1329c
  %v1_132bc = add i32 %v4_13258, 844
  %v2_132bc = inttoptr i32 %v1_132bc to i32*
  %v3_132bc = load i32, i32* %v2_132bc, align 4
  store i32 %v3_132bc, i32* %r3.global-to-local, align 4
  %v3_132c0 = icmp ult i32 %v0_13264, %v3_132bc
  %v1_132c4 = add i32 %v3_132a4, -1
  store i32 %v1_132c4, i32* %sb.global-to-local, align 4
  br i1 %v3_132c0, label %dec_label_pc_13398, label %dec_label_pc_132cc

dec_label_pc_132cc:                               ; preds = %dec_label_pc_132bc
  %v1_132cc = add i32 %v4_13258, 852
  %v2_132cc = inttoptr i32 %v1_132cc to i32*
  %v3_132cc = load i32, i32* %v2_132cc, align 4
  store i32 %v3_132cc, i32* %r2.global-to-local, align 4
  %v1_132d0 = add i32 %v4_13258, 848
  %v2_132d0 = inttoptr i32 %v1_132d0 to i32*
  %v3_132d0 = load i32, i32* %v2_132d0, align 4
  store i32 %v3_132d0, i32* %r3.global-to-local, align 4
  %v6_132d8 = icmp slt i32 %v3_132d0, %v3_132cc
  br i1 %v6_132d8, label %dec_label_pc_132dc, label %dec_label_pc_13398

dec_label_pc_132dc:                               ; preds = %dec_label_pc_132cc
  %v1_132dc = add i32 %v0_13264, 10
  %v2_132e0 = add i32 %v1_132dc, %v3_132a4
  store i32 %v2_132e0, i32* %r3.global-to-local, align 4
  %v2_132e4 = sub i32 0, %v3_132a4
  %v3_132e4 = and i32 %v2_132e0, %v2_132e4
  store i32 %v3_132e4, i32* @r4, align 4
  %tmp211 = icmp ugt i32 %v3_132e4, %v0_13264
  br i1 %tmp211, label %dec_label_pc_132f0, label %dec_label_pc_13398

dec_label_pc_132f0:                               ; preds = %dec_label_pc_132dc
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_132e4, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_13308 = call i32 @function_150ac(i32 0, i32 %v3_132e4, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_13308, i32* %r0.global-to-local, align 4
  %v7_1330c = icmp eq i32 %v6_13308, -1
  br i1 %v7_1330c, label %dec_label_pc_132f0.dec_label_pc_13398_crit_edge, label %dec_label_pc_13314

dec_label_pc_132f0.dec_label_pc_13398_crit_edge:  ; preds = %dec_label_pc_132f0
  %v1_133bc.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_13398

dec_label_pc_13314:                               ; preds = %dec_label_pc_132f0
  %v1_13314 = urem i32 %v6_13308, 8
  store i32 %v1_13314, i32* %r2.global-to-local, align 4
  %v2_13314 = icmp eq i32 %v1_13314, 0
  br i1 %v2_13314, label %bb146, label %.thread25

.thread25:                                        ; preds = %dec_label_pc_13314
  %v2_13318 = sub nsw i32 8, %v1_13314
  store i32 %v2_13318, i32* %r3.global-to-local, align 4
  %v2_1331c = load i32, i32* @r4, align 4
  %v3_1331c = sub i32 %v2_1331c, %v2_13318
  %v3_13320 = add i32 %v2_13318, %v6_13308
  store i32 %v3_13320, i32* %lr.global-to-local, align 4
  %v2_13328 = or i32 %v3_1331c, 2
  store i32 %v2_13328, i32* %r2.global-to-local, align 4
  %v5_13330 = inttoptr i32 %v3_13320 to i32*
  store i32 %v2_13318, i32* %v5_13330, align 4
  %v1_13334 = load i32, i32* %r2.global-to-local, align 4
  %v2_13334 = load i32, i32* %lr.global-to-local, align 4
  %v3_13334 = add i32 %v2_13334, 4
  %v4_13334 = inttoptr i32 %v3_13334 to i32*
  store i32 %v1_13334, i32* %v4_13334, align 4
  br label %.thread27

bb146:                                            ; preds = %dec_label_pc_13314
  store i32 %v6_13308, i32* %lr.global-to-local, align 4
  %v1_1332c47 = load i32, i32* @r4, align 4
  %v2_1332c48 = or i32 %v1_1332c47, 2
  store i32 %v2_1332c48, i32* %r3.global-to-local, align 4
  %v3_13338 = inttoptr i32 %v6_13308 to i32*
  store i32 0, i32* %v3_13338, align 4
  %v1_1333c = load i32, i32* %r3.global-to-local, align 4
  %v2_1333c = load i32, i32* %lr.global-to-local, align 4
  %v3_1333c = add i32 %v2_1333c, 4
  %v4_1333c = inttoptr i32 %v3_1333c to i32*
  store i32 %v1_1333c, i32* %v4_1333c, align 4
  br label %.thread27

.thread27:                                        ; preds = %.thread25, %bb146
  store i32 98320, i32* %r2.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_13348 = load i32, i32* inttoptr (i32 98352 to i32*), align 16
  store i32 %v4_13348, i32* %ip.global-to-local, align 4
  %v1_1334c = add i32 %v4_13348, 848
  %v2_1334c = inttoptr i32 %v1_1334c to i32*
  %v3_1334c = load i32, i32* %v2_1334c, align 4
  store i32 %v3_1334c, i32* %r3.global-to-local, align 4
  %v1_13350 = add i32 %v4_13348, 856
  %v2_13350 = inttoptr i32 %v1_13350 to i32*
  %v3_13350 = load i32, i32* %v2_13350, align 4
  store i32 %v3_13350, i32* %r2.global-to-local, align 4
  %v1_13354 = add i32 %v3_1334c, 1
  store i32 %v1_13354, i32* %r3.global-to-local, align 4
  %v7_1335c = icmp sgt i32 %v1_13354, %v3_13350
  br i1 %v7_1335c, label %bb147, label %bb148

bb147:                                            ; preds = %.thread27
  store i32 %v1_13354, i32* %v2_13350, align 4
  %v0_13360.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_13360.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb148

bb148:                                            ; preds = %.thread27, %bb147
  %v1_13360 = phi i32 [ %v4_13348, %.thread27 ], [ %v1_13360.pre, %bb147 ]
  %v0_13360 = phi i32 [ %v1_13354, %.thread27 ], [ %v0_13360.pre, %bb147 ]
  %v2_13360 = add i32 %v1_13360, 848
  %v3_13360 = inttoptr i32 %v2_13360 to i32*
  store i32 %v0_13360, i32* %v3_13360, align 4
  %v0_13364 = load i32, i32* %ip.global-to-local, align 4
  %v1_13364 = add i32 %v0_13364, 868
  %v2_13364 = inttoptr i32 %v1_13364 to i32*
  %v3_13364 = load i32, i32* %v2_13364, align 4
  store i32 %v3_13364, i32* %r3.global-to-local, align 4
  %v1_13368 = add i32 %v0_13364, 880
  %v2_13368 = inttoptr i32 %v1_13368 to i32*
  %v3_13368 = load i32, i32* %v2_13368, align 4
  store i32 %v3_13368, i32* %r2.global-to-local, align 4
  %v0_1336c = load i32, i32* @r4, align 4
  %v2_1336c = add i32 %v0_1336c, %v3_13364
  store i32 %v2_1336c, i32* %r1.global-to-local, align 4
  %v1_13370 = add i32 %v0_13364, 872
  %v2_13370 = inttoptr i32 %v1_13370 to i32*
  %v3_13370 = load i32, i32* %v2_13370, align 4
  store i32 %v3_13370, i32* %r3.global-to-local, align 4
  %v1_13378 = add i32 %v0_13364, 884
  %v2_13378 = inttoptr i32 %v1_13378 to i32*
  %v3_13378 = load i32, i32* %v2_13378, align 4
  store i32 %v3_13378, i32* %r2.global-to-local, align 4
  %tmp212 = icmp ugt i32 %v2_1336c, %v3_13368
  br i1 %tmp212, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  store i32 %v2_1336c, i32* %v2_13368, align 4
  %v0_13380.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_13380.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v1_13380 = phi i32 [ %v0_13364, %bb148 ], [ %v1_13380.pre, %bb149 ]
  %v0_13380 = phi i32 [ %v2_1336c, %bb148 ], [ %v0_13380.pre, %bb149 ]
  %v2_13380 = add i32 %v1_13380, 868
  %v3_13380 = inttoptr i32 %v2_13380 to i32*
  store i32 %v0_13380, i32* %v3_13380, align 4
  %v0_13384 = load i32, i32* %r1.global-to-local, align 4
  %v1_13384 = load i32, i32* %r3.global-to-local, align 4
  %v2_13384 = add i32 %v1_13384, %v0_13384
  store i32 %v2_13384, i32* %r1.global-to-local, align 4
  %v1_13388 = load i32, i32* %r2.global-to-local, align 4
  %v0_1338c = load i32, i32* %lr.global-to-local, align 4
  %v1_1338c = add i32 %v0_1338c, 8
  store i32 %v1_1338c, i32* %r0.global-to-local, align 4
  %tmp213 = icmp ugt i32 %v2_13384, %v1_13388
  br i1 %tmp213, label %bb151, label %dec_label_pc_13698

bb151:                                            ; preds = %bb150
  %v5_13390 = load i32, i32* %ip.global-to-local, align 4
  %v6_13390 = add i32 %v5_13390, 884
  %v7_13390 = inttoptr i32 %v6_13390 to i32*
  store i32 %v2_13384, i32* %v7_13390, align 4
  br label %dec_label_pc_13698

dec_label_pc_13398:                               ; preds = %dec_label_pc_132dc, %dec_label_pc_132bc, %dec_label_pc_132f0.dec_label_pc_13398_crit_edge, %dec_label_pc_132cc
  %v1_133bc = phi i32 [ %v1_133bc.pre, %dec_label_pc_132f0.dec_label_pc_13398_crit_edge ], [ %v0_13264, %dec_label_pc_132cc ], [ %v0_13264, %dec_label_pc_132bc ], [ %v0_13264, %dec_label_pc_132dc ]
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 98320, i32* %ip.global-to-local, align 4
  %v4_133a0 = load i32, i32* inttoptr (i32 98352 to i32*), align 16
  store i32 %v4_133a0, i32* %r3.global-to-local, align 4
  %v1_133a4 = add i32 %v4_133a0, 44
  %v2_133a4 = inttoptr i32 %v1_133a4 to i32*
  %v3_133a4 = load i32, i32* %v2_133a4, align 4
  store i32 %v3_133a4, i32* %r0.global-to-local, align 4
  %v1_133a8 = add i32 %v4_133a0, 864
  %v2_133a8 = inttoptr i32 %v1_133a8 to i32*
  %v3_133a8 = load i32, i32* %v2_133a8, align 4
  store i32 %v3_133a8, i32* %r2.global-to-local, align 4
  %v1_133ac = add i32 %v4_133a0, 840
  %v2_133ac = inttoptr i32 %v1_133ac to i32*
  %v3_133ac = load i32, i32* %v2_133ac, align 4
  store i32 %v3_133ac, i32* %r3.global-to-local, align 4
  %v1_133b0 = add i32 %v3_133a4, 4
  %v2_133b0 = inttoptr i32 %v1_133b0 to i32*
  %v3_133b0 = load i32, i32* %v2_133b0, align 4
  store i32 %v3_133b0, i32* %r1.global-to-local, align 4
  %v1_133b8 = urem i32 %v3_133a8, 2
  %v2_133b8 = icmp eq i32 %v1_133b8, 0
  %v1_133b4 = add i32 %v1_133bc, 16
  %v2_133bc = add i32 %v1_133b4, %v3_133ac
  store i32 %v2_133bc, i32* %r3.global-to-local, align 4
  %v1_133c0 = and i32 %v3_133b0, -4
  store i32 %v1_133c0, i32* @r8, align 4
  br i1 %v2_133b8, label %bb153, label %bb152

bb152:                                            ; preds = %dec_label_pc_13398
  %v3_133c4 = sub i32 %v2_133bc, %v1_133c0
  store i32 %v3_133c4, i32* %r3.global-to-local, align 4
  br label %bb153

bb153:                                            ; preds = %dec_label_pc_13398, %bb152
  %v0_133c8 = phi i32 [ %v2_133bc, %dec_label_pc_13398 ], [ %v3_133c4, %bb152 ]
  %v1_133c8 = load i32, i32* %sb.global-to-local, align 4
  %v2_133c8 = add i32 %v1_133c8, %v0_133c8
  store i32 %v2_133c8, i32* %r3.global-to-local, align 4
  %v1_133cc = sub i32 -1, %v1_133c8
  store i32 %v1_133cc, i32* %fp.global-to-local, align 4
  %v2_133d0 = and i32 %v2_133c8, %v1_133cc
  store i32 %v2_133d0, i32* @r5, align 4
  %tmp154 = icmp slt i32 %v2_133d0, 1
  br i1 %tmp154, label %dec_label_pc_133f4, label %dec_label_pc_133e0

dec_label_pc_133e0:                               ; preds = %bb153
  store i32 %v2_133d0, i32* %r0.global-to-local, align 4
  %v1_133e4 = call i32 @function_15338(i32 %v2_133d0)
  store i32 %v1_133e4, i32* %r0.global-to-local, align 4
  %v3_133e8 = icmp eq i32 %v1_133e4, -1
  store i32 %v1_133e4, i32* @r4, align 4
  br i1 %v3_133e8, label %dec_label_pc_133f4, label %dec_label_pc_13460

dec_label_pc_133f4:                               ; preds = %dec_label_pc_133e0, %bb153
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 98320, i32* %r1.global-to-local, align 4
  %v4_133fc = load i32, i32* inttoptr (i32 98352 to i32*), align 16
  store i32 %v4_133fc, i32* %r6.global-to-local, align 4
  %v1_13400 = add i32 %v4_133fc, 864
  %v2_13400 = inttoptr i32 %v1_13400 to i32*
  %v3_13400 = load i32, i32* %v2_13400, align 4
  store i32 %v3_13400, i32* %r3.global-to-local, align 4
  %v1_13404 = urem i32 %v3_13400, 2
  %v2_13404 = icmp eq i32 %v1_13404, 0
  br i1 %v2_13404, label %.thread29thread-pre-split, label %bb155

bb155:                                            ; preds = %dec_label_pc_133f4
  %v1_13408 = load i32, i32* @r8, align 4
  %v2_13408 = load i32, i32* %sb.global-to-local, align 4
  %v3_13408 = add i32 %v2_13408, %v1_13408
  %v2_1340c = load i32, i32* @r5, align 4
  %v3_1340c = add i32 %v3_13408, %v2_1340c
  store i32 %v3_1340c, i32* %r3.global-to-local, align 4
  %v2_13410 = load i32, i32* %fp.global-to-local, align 4
  %v3_13410 = and i32 %v2_13410, %v3_1340c
  store i32 %v3_13410, i32* @r5, align 4
  br label %.thread29

.thread29thread-pre-split:                        ; preds = %dec_label_pc_133f4
  %v0_13414.pr = load i32, i32* @r5, align 4
  br label %.thread29

.thread29:                                        ; preds = %.thread29thread-pre-split, %bb155
  %v0_13414 = phi i32 [ %v0_13414.pr, %.thread29thread-pre-split ], [ %v3_13410, %bb155 ]
  %v2_13414 = icmp ugt i32 %v0_13414, 1048575
  br i1 %v2_13414, label %bb157, label %bb156

bb156:                                            ; preds = %.thread29
  store i32 1048576, i32* @r5, align 4
  br label %bb157

bb157:                                            ; preds = %.thread29, %bb156
  %v0_1342c = phi i32 [ %v0_13414, %.thread29 ], [ 1048576, %bb156 ]
  %v1_1341c = load i32, i32* @sl, align 4
  %tmp214 = icmp ugt i32 %v0_1342c, %v1_1341c
  br i1 %tmp214, label %dec_label_pc_13424, label %dec_label_pc_13688

dec_label_pc_13424:                               ; preds = %bb157
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_1342c, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_13440 = call i32 @function_150ac(i32 0, i32 %v0_1342c, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_13440, i32* %r0.global-to-local, align 4
  %v3_13444 = icmp eq i32 %v6_13440, -1
  %v8_13444 = icmp eq i32 %v6_13440, -1
  store i32 %v6_13440, i32* @r4, align 4
  br i1 %v8_13444, label %.thread32, label %bb158

bb158:                                            ; preds = %dec_label_pc_13424
  %v1_1344c = load i32, i32* %r6.global-to-local, align 4
  %v2_1344c = add i32 %v1_1344c, 864
  %v3_1344c = inttoptr i32 %v2_1344c to i32*
  %v4_1344c = load i32, i32* %v3_1344c, align 4
  %v2_13450 = load i32, i32* @r5, align 4
  %v3_13450 = add i32 %v2_13450, %v6_13440
  store i32 %v3_13450, i32* %r0.global-to-local, align 4
  %v2_13454 = and i32 %v4_1344c, -2
  store i32 %v2_13454, i32* %r3.global-to-local, align 4
  store i32 %v2_13454, i32* %v3_1344c, align 4
  br label %.thread32

.thread32:                                        ; preds = %dec_label_pc_13424, %bb158
  br i1 %v3_13444, label %dec_label_pc_13460, label %dec_label_pc_13464

dec_label_pc_13460:                               ; preds = %.thread32, %dec_label_pc_133e0
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13464

dec_label_pc_13464:                               ; preds = %.thread32, %dec_label_pc_13460
  %v0_13464 = load i32, i32* @r4, align 4
  %v7_13464 = icmp eq i32 %v0_13464, -1
  br i1 %v7_13464, label %dec_label_pc_13688, label %dec_label_pc_1346c

dec_label_pc_1346c:                               ; preds = %dec_label_pc_13464
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 98320, i32* %r2.global-to-local, align 4
  %v4_13474 = load i32, i32* inttoptr (i32 98352 to i32*), align 16
  store i32 %v4_13474, i32* %ip.global-to-local, align 4
  store i32 %v3_133a4, i32* %r2.global-to-local, align 4
  %v1_1347c = add i32 %v4_13474, 872
  %v2_1347c = inttoptr i32 %v1_1347c to i32*
  %v3_1347c = load i32, i32* %v2_1347c, align 4
  %v1_13480 = load i32, i32* @r8, align 4
  %v2_13480 = add i32 %v1_13480, %v3_133a4
  store i32 %v2_13480, i32* %r1.global-to-local, align 4
  %v0_13484 = load i32, i32* @r5, align 4
  %v2_13484 = add i32 %v0_13484, %v3_1347c
  store i32 %v2_13484, i32* %r3.global-to-local, align 4
  %v9_13488 = icmp eq i32 %v0_13464, %v2_13480
  br i1 %v9_13488, label %bb159, label %.thread122

.thread122:                                       ; preds = %dec_label_pc_1346c
  store i32 %v2_13484, i32* %v2_1347c, align 4
  br label %dec_label_pc_134a4

bb159:                                            ; preds = %dec_label_pc_1346c
  %v1_1348c = load i32, i32* %r0.global-to-local, align 4
  %v8_1348c = icmp eq i32 %v1_1348c, -1
  store i32 %v2_13484, i32* %v2_1347c, align 4
  br i1 %v8_1348c, label %.thread34, label %dec_label_pc_134a4

.thread34:                                        ; preds = %bb159
  %v1_13494 = load i32, i32* @r5, align 4
  %v2_13494 = load i32, i32* @r8, align 4
  %v3_13494 = add i32 %v2_13494, %v1_13494
  %v2_13498 = or i32 %v3_13494, 1
  store i32 %v2_13498, i32* %r3.global-to-local, align 4
  %v2_1349c = load i32, i32* %r2.global-to-local, align 4
  %v3_1349c = add i32 %v2_1349c, 4
  %v4_1349c = inttoptr i32 %v3_1349c to i32*
  store i32 %v2_13498, i32* %v4_1349c, align 4
  br label %dec_label_pc_1361c

dec_label_pc_134a4:                               ; preds = %bb159, %.thread122
  %v0_134a8.pr = load i32, i32* @r8, align 4
  %v0_134a4 = load i32, i32* %ip.global-to-local, align 4
  %v1_134a4 = add i32 %v0_134a4, 864
  %v2_134a4 = inttoptr i32 %v1_134a4 to i32*
  %v3_134a4 = load i32, i32* %v2_134a4, align 4
  store i32 %v3_134a4, i32* %r2.global-to-local, align 4
  %v2_134a8 = icmp eq i32 %v0_134a8.pr, 0
  br i1 %v2_134a8, label %.thread37, label %.thread36

.thread37:                                        ; preds = %dec_label_pc_134a4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %.thread40

.thread36:                                        ; preds = %dec_label_pc_134a4
  %v2_134b0 = urem i32 %v3_134a4, 2
  store i32 %v2_134b0, i32* %r3.global-to-local, align 4
  %v2_134b4 = icmp eq i32 %v2_134b0, 0
  br i1 %v2_134b4, label %.thread40, label %dec_label_pc_134bc

dec_label_pc_134bc:                               ; preds = %.thread36
  %v0_134bc = load i32, i32* @r4, align 4
  %v1_134bc = load i32, i32* %r1.global-to-local, align 4
  %v3_134bc = icmp ult i32 %v0_134bc, %v1_134bc
  br i1 %v3_134bc, label %bb160, label %.thread40

bb160:                                            ; preds = %dec_label_pc_134bc
  %v2_134c0 = and i32 %v3_134a4, -2
  store i32 %v2_134c0, i32* %r3.global-to-local, align 4
  store i32 %v2_134c0, i32* %v2_134a4, align 4
  br label %.thread40

.thread40:                                        ; preds = %dec_label_pc_134bc, %.thread37, %.thread36, %bb160
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 98320, i32* %ip.global-to-local, align 4
  %v4_134d0 = load i32, i32* inttoptr (i32 98352 to i32*), align 16
  store i32 %v4_134d0, i32* @r7, align 4
  %v1_134d4 = add i32 %v4_134d0, 864
  %v2_134d4 = inttoptr i32 %v1_134d4 to i32*
  %v3_134d4 = load i32, i32* %v2_134d4, align 4
  store i32 %v3_134d4, i32* %r3.global-to-local, align 4
  %v1_134d8 = urem i32 %v3_134d4, 2
  store i32 %v1_134d8, i32* @r6, align 4
  %v2_134d8 = icmp eq i32 %v1_134d8, 0
  br i1 %v2_134d8, label %dec_label_pc_1356c, label %dec_label_pc_134e0

dec_label_pc_134e0:                               ; preds = %.thread40
  %v0_134e0 = load i32, i32* @r8, align 4
  %v2_134e0 = icmp eq i32 %v0_134e0, 0
  br i1 %v2_134e0, label %.thread43, label %bb161

bb161:                                            ; preds = %dec_label_pc_134e0
  %v2_134e4 = add i32 %v4_134d0, 872
  %v3_134e4 = inttoptr i32 %v2_134e4 to i32*
  %v4_134e4 = load i32, i32* %v3_134e4, align 4
  store i32 %v4_134e4, i32* %r2.global-to-local, align 4
  %v1_134e8 = load i32, i32* %r1.global-to-local, align 4
  %v2_134e8 = load i32, i32* @r4, align 4
  %v3_134e8 = sub i32 %v2_134e8, %v1_134e8
  %v3_134ec = add i32 %v3_134e8, %v4_134e4
  store i32 %v3_134ec, i32* %r3.global-to-local, align 4
  store i32 %v3_134ec, i32* %v3_134e4, align 4
  br label %.thread43

.thread43:                                        ; preds = %dec_label_pc_134e0, %bb161
  %v0_134f4 = load i32, i32* @r4, align 4
  %v1_134f4 = urem i32 %v0_134f4, 8
  store i32 %v1_134f4, i32* %r3.global-to-local, align 4
  %v2_134f4 = icmp eq i32 %v1_134f4, 0
  br i1 %v2_134f4, label %.thread44, label %bb162

bb162:                                            ; preds = %.thread43
  %v2_134f8 = sub nsw i32 8, %v1_134f4
  store i32 %v2_134f8, i32* %r3.global-to-local, align 4
  %v3_134fc = add i32 %v2_134f8, %v0_134f4
  store i32 %v3_134fc, i32* @r7, align 4
  br label %.thread44

.thread44:                                        ; preds = %.thread43, %bb162
  %v0_13504 = phi i32 [ 0, %.thread43 ], [ %v2_134f8, %bb162 ]
  %v1_13500 = load i32, i32* @r5, align 4
  %v2_13500 = add i32 %v1_13500, %v0_134f4
  store i32 %v2_13500, i32* @r6, align 4
  %v1_13504 = load i32, i32* @r8, align 4
  %v2_13504 = add i32 %v2_13500, %v0_13504
  %v2_13508 = add i32 %v2_13504, %v1_13504
  store i32 %v2_13508, i32* %r1.global-to-local, align 4
  %v1_1350c = load i32, i32* %sb.global-to-local, align 4
  %v2_1350c = add i32 %v1_1350c, %v2_13508
  %v1_13510 = load i32, i32* %fp.global-to-local, align 4
  %v2_13510 = and i32 %v1_13510, %v2_1350c
  store i32 %v2_13510, i32* %r2.global-to-local, align 4
  %v2_13514 = sub i32 0, %v2_13500
  store i32 %v2_13514, i32* %r3.global-to-local, align 4
  %v2_13518 = sub i32 %v2_13510, %v2_13500
  store i32 %v2_13518, i32* @r5, align 4
  store i32 %v2_13518, i32* %r0.global-to-local, align 4
  br i1 %v2_134f4, label %bb163, label %bb164

bb163:                                            ; preds = %.thread44
  store i32 %v0_134f4, i32* @r7, align 4
  br label %bb164

bb164:                                            ; preds = %.thread44, %bb163
  %v1_13524 = call i32 @function_15338(i32 %v2_13518)
  store i32 %v1_13524, i32* %r0.global-to-local, align 4
  %v3_13528 = icmp eq i32 %v1_13524, -1
  br i1 %v3_13528, label %dec_label_pc_13530, label %dec_label_pc_13540

dec_label_pc_13530:                               ; preds = %bb164
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_13534 = call i32 @function_15338(i32 0)
  store i32 %v1_13534, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_13598

dec_label_pc_13540:                               ; preds = %bb164
  %v1_13540 = load i32, i32* @r4, align 4
  %v3_13540 = icmp ult i32 %v1_13524, %v1_13540
  br i1 %v3_13540, label %dec_label_pc_13548, label %dec_label_pc_13598

dec_label_pc_13548:                               ; preds = %dec_label_pc_13540
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 98320, i32* %r0.global-to-local, align 4
  %v4_13550 = load i32, i32* inttoptr (i32 98352 to i32*), align 16
  store i32 %v4_13550, i32* %r2.global-to-local, align 4
  %v1_13554 = add i32 %v4_13550, 864
  %v2_13554 = inttoptr i32 %v1_13554 to i32*
  %v3_13554 = load i32, i32* %v2_13554, align 4
  %v0_13558 = load i32, i32* @r6, align 4
  store i32 %v0_13558, i32* %r0.global-to-local, align 4
  %v1_1355c = and i32 %v3_13554, -2
  store i32 %v1_1355c, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v1_1355c, i32* %v2_13554, align 4
  br label %dec_label_pc_13598

dec_label_pc_1356c:                               ; preds = %.thread40
  %v0_1356c = load i32, i32* %r0.global-to-local, align 4
  %v3_1356c = icmp eq i32 %v0_1356c, -1
  br i1 %v3_1356c, label %dec_label_pc_13574, label %dec_label_pc_13590

dec_label_pc_13574:                               ; preds = %dec_label_pc_1356c
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_13578 = call i32 @function_15338(i32 0)
  store i32 %v1_13578, i32* %r0.global-to-local, align 4
  %v0_1357c = load i32, i32* @r7, align 4
  %v1_1357c = add i32 %v0_1357c, 872
  %v2_1357c = inttoptr i32 %v1_1357c to i32*
  %v3_1357c = load i32, i32* %v2_1357c, align 4
  store i32 %v3_1357c, i32* %r2.global-to-local, align 4
  %v0_13580 = load i32, i32* @r4, align 4
  %v0_13584 = load i32, i32* @r5, align 4
  %v2_13580 = add i32 %v3_1357c, %v1_13578
  %v2_13584 = sub i32 %v2_13580, %v0_13580
  %v2_13588 = sub i32 %v2_13584, %v0_13584
  store i32 %v2_13588, i32* %r3.global-to-local, align 4
  store i32 %v2_13588, i32* %v2_1357c, align 4
  %v0_13594.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_13590

dec_label_pc_13590:                               ; preds = %dec_label_pc_1356c, %dec_label_pc_13574
  %v0_13594 = phi i32 [ 0, %dec_label_pc_1356c ], [ %v0_13594.pre, %dec_label_pc_13574 ]
  %v0_13590 = load i32, i32* @r4, align 4
  store i32 %v0_13590, i32* @r7, align 4
  store i32 %v0_13594, i32* @r5, align 4
  br label %dec_label_pc_13598

dec_label_pc_13598:                               ; preds = %dec_label_pc_13540, %dec_label_pc_13548, %dec_label_pc_13530, %dec_label_pc_13590
  %v0_13598 = load i32, i32* %r0.global-to-local, align 4
  %v7_13598 = icmp eq i32 %v0_13598, -1
  br i1 %v7_13598, label %dec_label_pc_1361c, label %dec_label_pc_135a0

dec_label_pc_135a0:                               ; preds = %dec_label_pc_13598
  %v1_135a0 = load i32, i32* @r5, align 4
  %v2_135a0 = add i32 %v1_135a0, %v0_13598
  %v0_135a4 = load i32, i32* @r7, align 4
  %v2_135a4 = sub i32 %v2_135a0, %v0_135a4
  %v1_135a8 = or i32 %v2_135a4, 1
  %v2_135ac = add i32 %v0_135a4, 4
  %v3_135ac = inttoptr i32 %v2_135ac to i32*
  store i32 %v1_135a8, i32* %v3_135ac, align 4
  store i32 98320, i32* %r1.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_135b8 = load i32, i32* inttoptr (i32 98352 to i32*), align 16
  store i32 %v4_135b8, i32* @r6, align 4
  %v1_135bc = add i32 %v4_135b8, 872
  %v2_135bc = inttoptr i32 %v1_135bc to i32*
  %v3_135bc = load i32, i32* %v2_135bc, align 4
  %v0_135c0 = load i32, i32* @r8, align 4
  %v2_135c0 = icmp eq i32 %v0_135c0, 0
  %v0_135c4 = load i32, i32* @r5, align 4
  %v2_135c4 = add i32 %v0_135c4, %v3_135bc
  store i32 %v2_135c4, i32* %r3.global-to-local, align 4
  store i32 %v2_135c4, i32* %v2_135bc, align 4
  %v0_135cc = load i32, i32* @r7, align 4
  %v1_135cc = load i32, i32* @r6, align 4
  %v2_135cc = add i32 %v1_135cc, 44
  %v3_135cc = inttoptr i32 %v2_135cc to i32*
  store i32 %v0_135cc, i32* %v3_135cc, align 4
  br i1 %v2_135c0, label %dec_label_pc_1361c, label %dec_label_pc_135d4

dec_label_pc_135d4:                               ; preds = %dec_label_pc_135a0
  %v0_135d8 = load i32, i32* @r8, align 4
  %v1_135d8 = add i32 %v0_135d8, -12
  %v1_135dc = and i32 %v1_135d8, -8
  store i32 %v3_133a4, i32* %ip.global-to-local, align 4
  %v2_135e4 = add i32 %v1_135dc, %v3_133a4
  store i32 %v2_135e4, i32* %r1.global-to-local, align 4
  %v2_135e8 = icmp ugt i32 %v1_135dc, 14
  store i32 5, i32* %r2.global-to-local, align 4
  %v1_135f0 = or i32 %v1_135dc, 1
  store i32 %v1_135f0, i32* %r3.global-to-local, align 4
  store i32 %v1_135f0, i32* %v2_133b0, align 4
  %v0_135f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_135f8 = load i32, i32* %r1.global-to-local, align 4
  %v2_135f8 = add i32 %v1_135f8, 8
  %v3_135f8 = inttoptr i32 %v2_135f8 to i32*
  store i32 %v0_135f8, i32* %v3_135f8, align 4
  %v0_135fc = load i32, i32* %r2.global-to-local, align 4
  %v1_135fc = load i32, i32* %r1.global-to-local, align 4
  %v2_135fc = add i32 %v1_135fc, 4
  %v3_135fc = inttoptr i32 %v2_135fc to i32*
  store i32 %v0_135fc, i32* %v3_135fc, align 4
  br i1 %v2_135e8, label %dec_label_pc_13604, label %dec_label_pc_1361c

dec_label_pc_13604:                               ; preds = %dec_label_pc_135d4
  %v0_13604 = load i32, i32* @r6, align 4
  %v1_13604 = add i32 %v0_13604, 836
  %v2_13604 = inttoptr i32 %v1_13604 to i32*
  %v3_13604 = load i32, i32* %v2_13604, align 4
  store i32 %v3_13604, i32* @r4, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_1360c = load i32, i32* %ip.global-to-local, align 4
  %v1_1360c = add i32 %v0_1360c, 8
  store i32 %v1_1360c, i32* @r0, align 4
  store i32 -1, i32* %v2_13604, align 4
  %v0_13614 = call i32 @function_13e30()
  store i32 %v0_13614, i32* %r0.global-to-local, align 4
  %v0_13618 = load i32, i32* @r4, align 4
  %v1_13618 = load i32, i32* @r6, align 4
  %v2_13618 = add i32 %v1_13618, 836
  %v3_13618 = inttoptr i32 %v2_13618 to i32*
  store i32 %v0_13618, i32* %v3_13618, align 4
  br label %dec_label_pc_1361c

dec_label_pc_1361c:                               ; preds = %.thread34, %dec_label_pc_135d4, %dec_label_pc_135a0, %dec_label_pc_13598, %dec_label_pc_13604
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 98320, i32* %r0.global-to-local, align 4
  %v4_13624 = load i32, i32* inttoptr (i32 98352 to i32*), align 16
  store i32 %v4_13624, i32* %lr.global-to-local, align 4
  %v1_13628 = add i32 %v4_13624, 872
  store i32 %v1_13628, i32* %r1.global-to-local, align 4
  %v1_1362c = inttoptr i32 %v1_13628 to i32*
  %v2_1362c = load i32, i32* %v1_1362c, align 4
  store i32 %v2_1362c, i32* %r1.global-to-local, align 4
  %v3_1362c = add i32 %v4_13624, 876
  %v4_1362c = inttoptr i32 %v3_1362c to i32*
  %v5_1362c = load i32, i32* %v4_1362c, align 4
  store i32 %v5_1362c, i32* %r3.global-to-local, align 4
  %v1_13634 = add i32 %v4_13624, 868
  %v2_13634 = inttoptr i32 %v1_13634 to i32*
  %v3_13634 = load i32, i32* %v2_13634, align 4
  store i32 %v3_13634, i32* %r3.global-to-local, align 4
  %v1_13638 = add i32 %v4_13624, 884
  %v2_13638 = inttoptr i32 %v1_13638 to i32*
  %v3_13638 = load i32, i32* %v2_13638, align 4
  store i32 %v3_13638, i32* %r2.global-to-local, align 4
  %v2_1363c = add i32 %v3_13634, %v2_1362c
  store i32 %v2_1363c, i32* %r3.global-to-local, align 4
  %tmp215 = icmp ugt i32 %v2_1362c, %v5_1362c
  br i1 %tmp215, label %bb165, label %bb166

bb165:                                            ; preds = %dec_label_pc_1361c
  store i32 %v2_1362c, i32* %v4_1362c, align 4
  %v0_13644.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_13644.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb166

bb166:                                            ; preds = %dec_label_pc_1361c, %bb165
  %v1_13644 = phi i32 [ %v3_13638, %dec_label_pc_1361c ], [ %v1_13644.pre, %bb165 ]
  %v4_13648 = phi i32 [ %v2_1363c, %dec_label_pc_1361c ], [ %v0_13644.pre, %bb165 ]
  %tmp216 = icmp ugt i32 %v4_13648, %v1_13644
  br i1 %tmp216, label %bb167, label %bb168

bb167:                                            ; preds = %bb166
  %v5_13648 = load i32, i32* %lr.global-to-local, align 4
  %v6_13648 = add i32 %v5_13648, 884
  %v7_13648 = inttoptr i32 %v6_13648 to i32*
  store i32 %v4_13648, i32* %v7_13648, align 4
  br label %bb168

bb168:                                            ; preds = %bb166, %bb167
  %v0_1364c = load i32, i32* %lr.global-to-local, align 4
  %v1_1364c = add i32 %v0_1364c, 44
  %v2_1364c = inttoptr i32 %v1_1364c to i32*
  %v3_1364c = load i32, i32* %v2_1364c, align 4
  store i32 %v3_1364c, i32* %ip.global-to-local, align 4
  %v1_13650 = add i32 %v3_1364c, 4
  %v2_13650 = inttoptr i32 %v1_13650 to i32*
  %v3_13650 = load i32, i32* %v2_13650, align 4
  store i32 %v1_13264, i32* %r1.global-to-local, align 4
  %v1_13658 = and i32 %v3_13650, -4
  store i32 %v1_13658, i32* %r3.global-to-local, align 4
  %v3_1365c = icmp ult i32 %v1_13658, %v1_13264
  br i1 %v3_1365c, label %dec_label_pc_13688, label %dec_label_pc_13664

dec_label_pc_13664:                               ; preds = %bb168
  %v0_13664 = load i32, i32* @sl, align 4
  %v2_13664 = sub i32 %v1_13658, %v0_13664
  %v2_13668 = add i32 %v0_13664, %v3_1364c
  store i32 %v2_13668, i32* %r1.global-to-local, align 4
  %v1_1366c = or i32 %v2_13664, 1
  store i32 %v1_1366c, i32* %r3.global-to-local, align 4
  %v1_13670 = or i32 %v0_13664, 1
  store i32 %v1_13670, i32* %r2.global-to-local, align 4
  %v1_13674 = add i32 %v3_1364c, 8
  store i32 %v1_13674, i32* %r0.global-to-local, align 4
  store i32 %v1_13670, i32* %v2_13650, align 4
  %v0_1367c = load i32, i32* %r1.global-to-local, align 4
  %v1_1367c = load i32, i32* %lr.global-to-local, align 4
  %v2_1367c = add i32 %v1_1367c, 44
  %v3_1367c = inttoptr i32 %v2_1367c to i32*
  store i32 %v0_1367c, i32* %v3_1367c, align 4
  %v0_13680 = load i32, i32* %r3.global-to-local, align 4
  %v1_13680 = load i32, i32* %r1.global-to-local, align 4
  %v2_13680 = add i32 %v1_13680, 4
  %v3_13680 = inttoptr i32 %v2_13680 to i32*
  store i32 %v0_13680, i32* %v3_13680, align 4
  br label %dec_label_pc_13698

dec_label_pc_13688:                               ; preds = %bb157, %bb168, %dec_label_pc_13464
  %v0_13688 = call i32 @function_127c4()
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_13690 = inttoptr i32 %v0_13688 to i32*
  store i32 12, i32* %v2_13690, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13698

dec_label_pc_13698:                               ; preds = %bb151, %bb150, %dec_label_pc_13664, %dec_label_pc_132ac, %dec_label_pc_13688
  %v0_13698 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13698, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1369c

dec_label_pc_1369c:                               ; preds = %.thread1, %dec_label_pc_13278, %.thread121, %dec_label_pc_130e8, %dec_label_pc_130dc, %dec_label_pc_12f44, %dec_label_pc_12ec8, %dec_label_pc_13698
  store i32 %v2_12df0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 24, i32* @r3, align 4
  store i32 98320, i32* %r2.global-to-local, align 4
  %v4_136ac = load i32, i32* inttoptr (i32 98344 to i32*), align 8
  store i32 %v4_136ac, i32* @ip, align 4
  store i32 79544, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_136ac)
  br label %dec_label_pc_136b8

dec_label_pc_136b8:                               ; preds = %dec_label_pc_12e28, %dec_label_pc_1369c
  %v0_136b8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_136b8, i32* %r0.global-to-local, align 4
  store i32 %v3_12dc4, i32* @r4, align 4
  store i32 %v6_12dc4, i32* @r5, align 4
  store i32 %v9_12dc4, i32* @r6, align 4
  store i32 %v12_12dc4, i32* @r7, align 4
  store i32 %v15_12dc4, i32* @r8, align 4
  store i32 %v18_12dc4, i32* @sb, align 4
  store i32 %v21_12dc4, i32* @sl, align 4
  store i32 %v24_12dc4, i32* @fp, align 4
  store i32 %v27_12dc4, i32* @lr, align 4
  ret i32 %v0_136b8

; uselistorder directives
  uselistorder i32 %v0_13664, { 1, 0, 2 }
  uselistorder i32 %v3_1364c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_13648, { 1, 0 }
  uselistorder i32 %v2_1362c, { 2, 0, 1, 3 }
  uselistorder i32 %v4_13624, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_135dc, { 1, 2, 0 }
  uselistorder i32 %v0_135a4, { 1, 0 }
  uselistorder i32 %v0_13598, { 1, 0 }
  uselistorder i32 %v2_13588, { 1, 0 }
  uselistorder i32 %v2_13518, { 2, 1, 0 }
  uselistorder i32 %v2_13500, { 1, 2, 0, 3 }
  uselistorder i32 %v2_134f8, { 1, 0, 2 }
  uselistorder i32 %v1_134f4, { 2, 1, 0 }
  uselistorder i32 %v0_134f4, { 3, 1, 2, 0 }
  uselistorder i32 %v1_134d8, { 1, 0 }
  uselistorder i32 %v2_134b0, { 1, 0 }
  uselistorder i32 %v3_134a4, { 1, 0, 2 }
  uselistorder i32 %v2_13484, { 1, 0, 2 }
  uselistorder i32* %v2_1347c, { 1, 0, 2 }
  uselistorder i32 %v0_13464, { 1, 0 }
  uselistorder i32 %v6_13440, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_1342c, { 2, 1, 0 }
  uselistorder i32 %v0_13414, { 1, 0 }
  uselistorder i32 %v2_133d0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_133cc, { 1, 0 }
  uselistorder i32 %v3_133a4, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32 %v2_13384, { 1, 0, 2 }
  uselistorder i32 %v2_1336c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_13314, { 2, 1, 0 }
  uselistorder i32 %v6_13308, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32 %v3_132e4, { 2, 1, 0, 3 }
  uselistorder i32 %v3_132a4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_13264, { 5, 6, 7, 0, 1, 8, 3, 2, 4, 9 }
  uselistorder i32 %v3_1325c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_13258, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v0_13244, { 1, 0 }
  uselistorder i32 %v7_13204, { 1, 0 }
  uselistorder i32 %v4_13204, { 1, 0 }
  uselistorder i32 %v0_131d4, { 1, 0 }
  uselistorder i32 %v2_131a8, { 3, 2, 1, 0 }
  uselistorder i32 %ip.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_131a454, { 1, 0 }
  uselistorder i32 %v1_13170, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v1_13158., { 1, 2, 0 }
  uselistorder i32 %v0_13160, { 0, 1, 3, 2 }
  uselistorder i32 %v1_13160, { 1, 0 }
  uselistorder i32 %v3_13140, { 1, 0 }
  uselistorder i32 %v4_1313c, { 1, 0, 2 }
  uselistorder i32 %v1_130ac, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_13104, { 1, 0 }
  uselistorder i32 %v1_130e8, { 1, 0 }
  uselistorder i32 %v1_12f88, { 1, 0 }
  uselistorder i32 %v0_130c8, { 2, 0, 1, 3 }
  uselistorder i32 %v3_13090, { 2, 0, 1, 3 }
  uselistorder i32 %v0_13124.pre, { 1, 2, 0 }
  uselistorder i32 %v0_1306c, { 2, 1, 0 }
  uselistorder i32 %v3_13060, { 5, 6, 4, 3, 2, 0, 1 }
  uselistorder i32 %v0_12f80, { 0, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_13028, { 1, 0 }
  uselistorder i32 %v3_1301c, { 1, 0 }
  uselistorder i32 %v0_13028, { 1, 0 }
  uselistorder i32 %v3_13000, { 0, 2, 3, 1 }
  uselistorder i32 %v2_12ff0, { 1, 0, 2 }
  uselistorder i32 %v3_12fa8, { 2, 1, 0 }
  uselistorder i32 %v0_12f98, { 3, 2, 1, 0 }
  uselistorder i32 %v0_12f68, { 1, 0 }
  uselistorder i32 %v1_12f1c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_12f18, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v3_12ebc, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_12eb0, { 1, 0 }
  uselistorder i32 %v3_12e80, { 1, 0 }
  uselistorder i32 %v0_12e74, { 5, 6, 4, 2, 0, 3, 1 }
  uselistorder i32 %v2_12e54, { 0, 2, 1, 3 }
  uselistorder i1 %v7_12e48, { 1, 0 }
  uselistorder i32 %v0_12e20, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0 }
  uselistorder i32* %r4.global-to-local, { 10, 0, 1, 2, 3, 4, 6, 5, 14, 15, 7, 16, 8, 9, 11, 12, 13 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 41, 42, 43, 45, 46, 47, 48, 1, 2, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 82, 90, 77, 78, 79, 80, 81, 83, 84, 85, 86, 0, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 107, 108, 109, 98, 99, 100, 101, 102, 103, 104, 105, 106 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 54, 42, 43, 44, 45, 46, 55, 47, 48, 49, 50, 51, 52, 53 }
  uselistorder i32* %r0.global-to-local, { 8, 6, 30, 7, 9, 10, 4, 22, 14, 11, 23, 12, 13, 16, 15, 20, 17, 24, 19, 18, 25, 21, 3, 27, 26, 28, 2, 29, 31, 36, 32, 33, 5, 34, 35, 37, 38, 39, 42, 43, 40, 41, 48, 45, 44, 46, 47, 1, 0, 49, 50, 51, 52, 54, 53, 57, 56, 55 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %ip.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 12, 11, 13, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 1, 23, 24, 42, 41, 28, 25, 0, 26, 27, 29, 36, 37, 38, 39, 40, 30, 31, 32, 33, 34, 35 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_150ac, { 1, 0 }
  uselistorder i32 (i32)* @function_12d4c, { 1, 0 }
  uselistorder label %dec_label_pc_136b8, { 1, 0 }
  uselistorder label %dec_label_pc_1369c, { 7, 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_13698, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_13688, { 1, 2, 0 }
  uselistorder label %bb168, { 1, 0 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %dec_label_pc_1361c, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_13598, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_13590, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %.thread44, { 1, 0 }
  uselistorder label %.thread43, { 1, 0 }
  uselistorder label %.thread40, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_13464, { 1, 0 }
  uselistorder label %.thread32, { 1, 0 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %bb153, { 1, 0 }
  uselistorder label %dec_label_pc_13398, { 2, 0, 3, 1 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %.thread27, { 1, 0 }
  uselistorder label %dec_label_pc_13250, { 0, 2, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %bb144, { 1, 0 }
  uselistorder label %dec_label_pc_131a4, { 1, 0 }
  uselistorder label %dec_label_pc_131ac.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_13170, { 1, 0 }
  uselistorder label %dec_label_pc_13124, { 1, 0 }
  uselistorder label %dec_label_pc_130b8, { 1, 0 }
  uselistorder label %dec_label_pc_130b4, { 1, 0 }
  uselistorder label %dec_label_pc_13060, { 1, 0 }
  uselistorder label %dec_label_pc_1304c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13014, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_13000, { 1, 0 }
  uselistorder label %bb140, { 1, 0 }
  uselistorder label %bb138, { 1, 0 }
}

define i32 @function_136c8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_136c8:
  %v0_136c8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_136c8, label %bb, label %.thread5

bb:                                               ; preds = %dec_label_pc_136c8
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_136c8, %bb
  %v10_136e0 = phi i32 [ %arg1, %dec_label_pc_136c8 ], [ 0, %bb ]
  ret i32 %v10_136e0

; uselistorder directives
  uselistorder label %.thread5, { 1, 0 }
}

define i32 @function_136e4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_136e4:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v3_136e4 = load i32, i32* @r4, align 4
  %v6_136e4 = load i32, i32* @r5, align 4
  %v9_136e4 = load i32, i32* @r6, align 4
  %v12_136e4 = load i32, i32* @lr, align 4
  %v2_136ec = icmp eq i32 %arg1, 0
  store i32 98320, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v2_136fc = mul i32 %arg2, %arg1
  store i32 %v2_136fc, i32* @r6, align 4
  br i1 %v2_136ec, label %dec_label_pc_1372c, label %dec_label_pc_13704

dec_label_pc_13704:                               ; preds = %dec_label_pc_136e4
  store i32 %arg1, i32* @r1, align 4
  store i32 %v2_136fc, i32* @r0, align 4
  %v0_1370c = call i32 @function_11e38()
  %v0_13710 = load i32, i32* @r4, align 4
  %v9_13710 = icmp eq i32 %v0_13710, %v0_1370c
  br i1 %v9_13710, label %dec_label_pc_13704.dec_label_pc_1372c_crit_edge, label %dec_label_pc_13718

dec_label_pc_13704.dec_label_pc_1372c_crit_edge:  ; preds = %dec_label_pc_13704
  %v0_13730.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1372c

dec_label_pc_13718:                               ; preds = %dec_label_pc_13704
  %v0_13718 = call i32 @function_127c4()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_13724 = inttoptr i32 %v0_13718 to i32*
  store i32 12, i32* %v2_13724, align 4
  br label %dec_label_pc_137f0

dec_label_pc_1372c:                               ; preds = %dec_label_pc_13704.dec_label_pc_1372c_crit_edge, %dec_label_pc_136e4
  %v0_13748 = phi i32 [ %v0_13730.pre, %dec_label_pc_13704.dec_label_pc_1372c_crit_edge ], [ 98320, %dec_label_pc_136e4 ]
  %v2_13730 = add i32 %v0_13748, 68
  %v3_13730 = inttoptr i32 %v2_13730 to i32*
  %v4_13730 = load i32, i32* %v3_13730, align 4
  store i32 %v4_13730, i32* @r4, align 4
  %v2_13748 = add i32 %v0_13748, 72
  %v3_13748 = inttoptr i32 %v2_13748 to i32*
  %v4_13748 = load i32, i32* %v3_13748, align 4
  store i32 %v4_13748, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13748)
  %v0_1375c = load i32, i32* @r5, align 4
  %v2_1375c = add i32 %v0_1375c, 16
  %v3_1375c = inttoptr i32 %v2_1375c to i32*
  %v4_1375c = load i32, i32* %v3_1375c, align 4
  store i32 %v4_1375c, i32* %ip.global-to-local, align 4
  store i32 79720, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1375c)
  %v0_13768 = load i32, i32* @r6, align 4
  store i32 %v0_13768, i32* @r0, align 4
  %v0_1376c = call i32 @function_12dc4()
  store i32 %v0_1376c, i32* %r4.global-to-local, align 4
  %v2_13770 = icmp eq i32 %v0_1376c, 0
  br i1 %v2_13770, label %.thread, label %dec_label_pc_13778

dec_label_pc_13778:                               ; preds = %dec_label_pc_1372c
  %v1_13778 = add i32 %v0_1376c, -4
  %v2_13778 = inttoptr i32 %v1_13778 to i32*
  %v3_13778 = load i32, i32* %v2_13778, align 4
  %v1_1377c = and i32 %v3_13778, 2
  %v2_1377c = icmp eq i32 %v1_1377c, 0
  br i1 %v2_1377c, label %dec_label_pc_13784, label %.thread

dec_label_pc_13784:                               ; preds = %dec_label_pc_13778
  %v1_137847 = add i32 %v3_13778, -4
  %v1_13788 = and i32 %v1_137847, -4
  store i32 %v1_13788, i32* @r2, align 4
  %v3_1378c = udiv i32 %v1_13788, 4
  store i32 %v3_1378c, i32* %ip.global-to-local, align 4
  %tmp = icmp eq i32 %v1_13788, 36
  %v2_13794 = icmp ult i32 %v1_13788, 33
  %v3_13794 = or i1 %tmp, %v2_13794
  br i1 %v3_13794, label %dec_label_pc_137a0, label %dec_label_pc_13798

dec_label_pc_13798:                               ; preds = %dec_label_pc_13784
  %v2_13798 = inttoptr i32 %v0_1376c to i8*
  %v3_13798 = call i32 @function_12820(i8* %v2_13798, i32 0)
  br label %.thread

dec_label_pc_137a0:                               ; preds = %dec_label_pc_13784
  %tmp8 = icmp eq i32 %v1_13788, 16
  %v2_137a4 = inttoptr i32 %v0_1376c to i32*
  store i32 0, i32* %v2_137a4, align 4
  %v1_137a8 = load i32, i32* %r4.global-to-local, align 4
  %v2_137a8 = add i32 %v1_137a8, 4
  %v3_137a8 = inttoptr i32 %v2_137a8 to i32*
  store i32 0, i32* %v3_137a8, align 4
  %v1_137ac = load i32, i32* %r4.global-to-local, align 4
  %v2_137ac = add i32 %v1_137ac, 8
  %v3_137ac = inttoptr i32 %v2_137ac to i32*
  store i32 0, i32* %v3_137ac, align 4
  %v2_137b0 = icmp ult i32 %v1_13788, 13
  %v3_137b0 = or i1 %tmp8, %v2_137b0
  br i1 %v3_137b0, label %.thread, label %dec_label_pc_137b4

dec_label_pc_137b4:                               ; preds = %dec_label_pc_137a0
  %v0_137b4 = load i32, i32* %ip.global-to-local, align 4
  %v1_137b8 = load i32, i32* %r4.global-to-local, align 4
  %v2_137b8 = add i32 %v1_137b8, 12
  %v3_137b8 = inttoptr i32 %v2_137b8 to i32*
  store i32 0, i32* %v3_137b8, align 4
  %v1_137bc = load i32, i32* %r4.global-to-local, align 4
  %v2_137bc = add i32 %v1_137bc, 16
  %v3_137bc = inttoptr i32 %v2_137bc to i32*
  store i32 0, i32* %v3_137bc, align 4
  %tmp9 = icmp ult i32 %v0_137b4, 7
  br i1 %tmp9, label %.thread, label %dec_label_pc_137c4

dec_label_pc_137c4:                               ; preds = %dec_label_pc_137b4
  %v0_137c4 = load i32, i32* %ip.global-to-local, align 4
  %v7_137c4 = icmp eq i32 %v0_137c4, 9
  %v1_137c8 = load i32, i32* %r4.global-to-local, align 4
  %v2_137c8 = add i32 %v1_137c8, 20
  %v3_137c8 = inttoptr i32 %v2_137c8 to i32*
  store i32 0, i32* %v3_137c8, align 4
  %v1_137cc = load i32, i32* %r4.global-to-local, align 4
  %v2_137cc = add i32 %v1_137cc, 24
  %v3_137cc = inttoptr i32 %v2_137cc to i32*
  store i32 0, i32* %v3_137cc, align 4
  br i1 %v7_137c4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_137c4
  %v2_137d0 = load i32, i32* %r4.global-to-local, align 4
  %v3_137d0 = add i32 %v2_137d0, 32
  %v4_137d0 = inttoptr i32 %v3_137d0 to i32*
  store i32 0, i32* %v4_137d0, align 4
  %v2_137d4 = load i32, i32* %r4.global-to-local, align 4
  %v3_137d4 = add i32 %v2_137d4, 28
  %v4_137d4 = inttoptr i32 %v3_137d4 to i32*
  store i32 0, i32* %v4_137d4, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_137c4, %dec_label_pc_13778, %dec_label_pc_137b4, %dec_label_pc_137a0, %dec_label_pc_1372c, %dec_label_pc_13798, %bb
  %v0_137e4 = load i32, i32* @r5, align 4
  %v2_137e4 = add i32 %v0_137e4, 24
  %v3_137e4 = inttoptr i32 %v2_137e4 to i32*
  %v4_137e4 = load i32, i32* %v3_137e4, align 4
  store i32 %v4_137e4, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_137e4)
  br label %dec_label_pc_137f0

dec_label_pc_137f0:                               ; preds = %dec_label_pc_13718, %.thread
  %v0_137f0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_136e4, i32* @r4, align 4
  store i32 %v6_136e4, i32* @r5, align 4
  store i32 %v9_136e4, i32* @r6, align 4
  store i32 %v12_136e4, i32* @lr, align 4
  ret i32 %v0_137f0

; uselistorder directives
  uselistorder i32 %v1_13788, { 0, 5, 1, 4, 3, 2 }
  uselistorder i32 %v0_1376c, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder i32 33, { 0, 6, 5, 7, 1, 2, 3, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_137f0, { 1, 0 }
  uselistorder label %.thread, { 6, 0, 2, 3, 5, 1, 4 }
}

define i32 @function_13800(i32 %arg1) local_unnamed_addr {
dec_label_pc_13800:
  %v0_13800 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13800, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_13800
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_13800, %bb
  %v10_13814 = phi i32 [ %arg1, %dec_label_pc_13800 ], [ 0, %bb ]
  ret i32 %v10_13814

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @function_13818(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13818:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_13818 = load i32, i32* @r4, align 4
  %v6_13818 = load i32, i32* @r5, align 4
  %v9_13818 = load i32, i32* @r6, align 4
  %v12_13818 = load i32, i32* @r7, align 4
  %v15_13818 = load i32, i32* @r8, align 4
  %v18_13818 = load i32, i32* @sb, align 4
  %v21_13818 = load i32, i32* @sl, align 4
  %v24_13818 = load i32, i32* @fp, align 4
  %v27_13818 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_13824 = icmp eq i32* %arg1, null
  store i32 98320, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_13824, label %dec_label_pc_13838, label %dec_label_pc_13848

dec_label_pc_13838:                               ; preds = %dec_label_pc_13818
  store i32 %arg2, i32* @r0, align 4
  %v0_1383c = call i32 @function_12dc4()
  store i32 %v0_1383c, i32* %r0.global-to-local, align 4
  store i32 %v0_1383c, i32* @r4, align 4
  br label %dec_label_pc_13ba0

dec_label_pc_13848:                               ; preds = %dec_label_pc_13818
  %v2_13848 = icmp eq i32 %arg2, 0
  br i1 %v2_13848, label %dec_label_pc_13850, label %dec_label_pc_1385c

dec_label_pc_13850:                               ; preds = %dec_label_pc_13848
  %v0_13850 = call i32 @function_13e30()
  store i32 %v0_13850, i32* %r0.global-to-local, align 4
  %v0_13854 = load i32, i32* @r6, align 4
  store i32 %v0_13854, i32* @r4, align 4
  br label %dec_label_pc_13ba0

dec_label_pc_1385c:                               ; preds = %dec_label_pc_13848
  store i32 68, i32* %r3.global-to-local, align 4
  %v4_13864 = load i32, i32* inttoptr (i32 98388 to i32*), align 4
  store i32 %v4_13864, i32* @r4, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 %v4_13864, i32* %r2.global-to-local, align 4
  %v4_13870 = load i32, i32* inttoptr (i32 98356 to i32*), align 4
  store i32 %v4_13870, i32* %r1.global-to-local, align 4
  %v2_13874 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_13874, i32* %r0.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_1387c = load i32, i32* inttoptr (i32 98392 to i32*), align 8
  call void @__pseudo_branch(i32 %v4_1387c)
  %v0_13888 = load i32, i32* @r4, align 4
  store i32 %v0_13888, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 98320, i32* %r1.global-to-local, align 4
  %v4_13894 = load i32, i32* inttoptr (i32 98336 to i32*), align 32
  store i32 %v4_13894, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_138a0.392 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13894)
  %v0_138a0 = load i32, i32* @r6, align 4
  %tmp36 = icmp ult i32 %v0_138a0, -32
  br i1 %tmp36, label %dec_label_pc_138bc, label %dec_label_pc_138a8

dec_label_pc_138a8:                               ; preds = %dec_label_pc_1385c
  %v0_138a8 = call i32 @function_127c4()
  store i32 %v0_138a8, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_138b4 = inttoptr i32 %v0_138a8 to i32*
  store i32 12, i32* %v2_138b4, align 4
  br label %dec_label_pc_13ba0

dec_label_pc_138bc:                               ; preds = %dec_label_pc_1385c
  %v1_138bc = add i32 %v0_138a0, 11
  store i32 %v1_138bc, i32* %r0.global-to-local, align 4
  %v0_138c0 = load i32, i32* @r5, align 4
  %v1_138c0 = add i32 %v0_138c0, -4
  %v2_138c0 = inttoptr i32 %v1_138c0 to i32*
  %v3_138c0 = load i32, i32* %v2_138c0, align 4
  store i32 %v3_138c0, i32* %r2.global-to-local, align 4
  %v2_138c4 = icmp ugt i32 %v1_138bc, 14
  %v7_138c4 = icmp eq i32 %v1_138bc, 15
  %v2_138c8 = xor i1 %v2_138c4, true
  %v3_138c8 = or i1 %v7_138c4, %v2_138c8
  br i1 %v3_138c8, label %bb, label %bb27

bb:                                               ; preds = %dec_label_pc_138bc
  store i32 16, i32* @sb, align 4
  br label %bb27

bb27:                                             ; preds = %dec_label_pc_138bc, %bb
  %v2_138cc = xor i1 %v7_138c4, true
  %v3_138cc = and i1 %v2_138c4, %v2_138cc
  br i1 %v3_138cc, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %v5_138cc = and i32 %v1_138bc, -8
  store i32 %v5_138cc, i32* @sb, align 4
  br label %bb29

bb29:                                             ; preds = %bb27, %bb28
  %v1_138d0 = and i32 %v3_138c0, 2
  %v2_138d0 = icmp eq i32 %v1_138d0, 0
  %v1_138d4 = add i32 %v0_138c0, -8
  store i32 %v1_138d4, i32* @sl, align 4
  %v1_138d8 = and i32 %v3_138c0, -4
  store i32 %v1_138d8, i32* @r6, align 4
  br i1 %v2_138d0, label %dec_label_pc_138e0, label %dec_label_pc_13ab8

dec_label_pc_138e0:                               ; preds = %bb29
  %v1_138e0 = load i32, i32* @sb, align 4
  %v3_138e0 = icmp ult i32 %v1_138d8, %v1_138e0
  br i1 %v3_138e0, label %dec_label_pc_138ec, label %bb30

bb30:                                             ; preds = %dec_label_pc_138e0
  store i32 %v1_138d8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13a50

dec_label_pc_138ec:                               ; preds = %dec_label_pc_138e0
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_138f4 = load i32, i32* inttoptr (i32 98352 to i32*), align 16
  store i32 %v4_138f4, i32* %r0.global-to-local, align 4
  %v1_138f8 = add i32 %v4_138f4, 44
  %v2_138f8 = inttoptr i32 %v1_138f8 to i32*
  %v3_138f8 = load i32, i32* %v2_138f8, align 4
  store i32 %v3_138f8, i32* %r3.global-to-local, align 4
  %v2_138fc = add i32 %v1_138d8, %v1_138d4
  store i32 %v2_138fc, i32* @r4, align 4
  %v9_13900 = icmp eq i32 %v2_138fc, %v3_138f8
  %v1_13904 = add i32 %v2_138fc, 4
  %v2_13904 = inttoptr i32 %v1_13904 to i32*
  %v3_13904 = load i32, i32* %v2_13904, align 4
  store i32 %v3_13904, i32* %r1.global-to-local, align 4
  br i1 %v9_13900, label %dec_label_pc_1390c, label %dec_label_pc_13948

dec_label_pc_1390c:                               ; preds = %dec_label_pc_138ec
  %v1_1390c = and i32 %v3_13904, -4
  %v2_13910 = add i32 %v1_1390c, %v1_138d8
  store i32 %v2_13910, i32* %r1.global-to-local, align 4
  %v1_13914 = add i32 %v1_138e0, 16
  store i32 %v1_13914, i32* %r3.global-to-local, align 4
  %v3_13918 = icmp ult i32 %v2_13910, %v1_13914
  br i1 %v3_13918, label %dec_label_pc_1399c, label %dec_label_pc_13920

dec_label_pc_13920:                               ; preds = %dec_label_pc_1390c
  %v2_13920 = sub i32 %v2_13910, %v1_138e0
  %v1_13924 = urem i32 %v3_138c0, 2
  %v2_13928 = add i32 %v1_138e0, %v1_138d4
  store i32 %v2_13928, i32* %r1.global-to-local, align 4
  %v2_1392c = or i32 %v1_138e0, %v1_13924
  store i32 %v2_1392c, i32* %r2.global-to-local, align 4
  %v1_13930 = or i32 %v2_13920, 1
  store i32 %v1_13930, i32* %r3.global-to-local, align 4
  store i32 %v0_138c0, i32* @r4, align 4
  store i32 %v2_1392c, i32* %v2_138c0, align 4
  %v0_1393c = load i32, i32* %r1.global-to-local, align 4
  %v1_1393c = load i32, i32* %r0.global-to-local, align 4
  %v2_1393c = add i32 %v1_1393c, 44
  %v3_1393c = inttoptr i32 %v2_1393c to i32*
  store i32 %v0_1393c, i32* %v3_1393c, align 4
  %v0_13940 = load i32, i32* %r3.global-to-local, align 4
  %v1_13940 = load i32, i32* %r1.global-to-local, align 4
  %v2_13940 = add i32 %v1_13940, 4
  %v3_13940 = inttoptr i32 %v2_13940 to i32*
  store i32 %v0_13940, i32* %v3_13940, align 4
  br label %dec_label_pc_13b84

dec_label_pc_13948:                               ; preds = %dec_label_pc_138ec
  %v1_13948 = and i32 %v3_13904, -2
  %v2_1394c = add i32 %v1_13948, %v2_138fc
  store i32 %v2_1394c, i32* %r3.global-to-local, align 4
  %v1_13950 = add i32 %v2_1394c, 4
  %v2_13950 = inttoptr i32 %v1_13950 to i32*
  %v3_13950 = load i32, i32* %v2_13950, align 4
  store i32 %v3_13950, i32* %r3.global-to-local, align 4
  %v1_13954 = urem i32 %v3_13950, 2
  %v2_13954 = icmp eq i32 %v1_13954, 0
  br i1 %v2_13954, label %dec_label_pc_1395c, label %dec_label_pc_1399c

dec_label_pc_1395c:                               ; preds = %dec_label_pc_13948
  %v1_1395c = and i32 %v3_13904, -4
  store i32 %v1_1395c, i32* %r3.global-to-local, align 4
  %v2_13960 = add i32 %v1_1395c, %v1_138d8
  store i32 %v2_13960, i32* %r0.global-to-local, align 4
  %v3_13964 = icmp ult i32 %v2_13960, %v1_138e0
  br i1 %v3_13964, label %dec_label_pc_1399c, label %dec_label_pc_1396c

dec_label_pc_1396c:                               ; preds = %dec_label_pc_1395c
  %v1_1396c = add i32 %v1_138d8, %v0_138c0
  %v2_1396c = inttoptr i32 %v1_1396c to i32*
  %v3_1396c = load i32, i32* %v2_1396c, align 4
  store i32 %v3_1396c, i32* %r1.global-to-local, align 4
  %v1_13970 = add i32 %v3_1396c, 12
  %v2_13970 = inttoptr i32 %v1_13970 to i32*
  %v3_13970 = load i32, i32* %v2_13970, align 4
  store i32 %v3_13970, i32* %r3.global-to-local, align 4
  %v9_13974 = icmp eq i32 %v3_13970, %v2_138fc
  %v1_13978 = add i32 %v2_138fc, 12
  %v2_13978 = inttoptr i32 %v1_13978 to i32*
  %v3_13978 = load i32, i32* %v2_13978, align 4
  store i32 %v3_13978, i32* %r2.global-to-local, align 4
  br i1 %v9_13974, label %dec_label_pc_13980, label %dec_label_pc_1398c

dec_label_pc_13980:                               ; preds = %dec_label_pc_1396c
  %v1_13980 = add i32 %v3_13978, 8
  %v2_13980 = inttoptr i32 %v1_13980 to i32*
  %v3_13980 = load i32, i32* %v2_13980, align 4
  store i32 %v3_13980, i32* %r3.global-to-local, align 4
  %v9_13984 = icmp eq i32 %v3_13980, %v2_138fc
  br i1 %v9_13984, label %dec_label_pc_13990, label %dec_label_pc_1398c

dec_label_pc_1398c:                               ; preds = %dec_label_pc_1396c, %dec_label_pc_13980
  %v0_1398c = call i32 @function_140ac()
  store i32 %v0_1398c, i32* %r0.global-to-local, align 4
  %v0_13990.pre = load i32, i32* @r1, align 4
  %v1_13990.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_13990

dec_label_pc_13990:                               ; preds = %dec_label_pc_13980, %dec_label_pc_1398c
  %v1_13990 = phi i32 [ %v3_13978, %dec_label_pc_13980 ], [ %v1_13990.pre, %dec_label_pc_1398c ]
  %v0_13990 = phi i32 [ %v3_1396c, %dec_label_pc_13980 ], [ %v0_13990.pre, %dec_label_pc_1398c ]
  %v2_13990 = add i32 %v1_13990, 8
  %v3_13990 = inttoptr i32 %v2_13990 to i32*
  store i32 %v0_13990, i32* %v3_13990, align 4
  %v0_13994 = load i32, i32* %r2.global-to-local, align 4
  %v1_13994 = load i32, i32* %r1.global-to-local, align 4
  %v2_13994 = add i32 %v1_13994, 12
  %v3_13994 = inttoptr i32 %v2_13994 to i32*
  store i32 %v0_13994, i32* %v3_13994, align 4
  %v1_13a50.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13a50

dec_label_pc_1399c:                               ; preds = %dec_label_pc_1390c, %dec_label_pc_1395c, %dec_label_pc_13948
  %v1_1399c = add i32 %v1_138e0, -7
  store i32 %v1_1399c, i32* @r0, align 4
  %v0_139a0 = call i32 @function_12dc4()
  store i32 %v0_139a0, i32* @r0, align 4
  store i32 %v0_139a0, i32* %r1.global-to-local, align 4
  %v2_139a4 = icmp eq i32 %v0_139a0, 0
  br i1 %v2_139a4, label %bb31, label %dec_label_pc_139b0

bb31:                                             ; preds = %dec_label_pc_1399c
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_13b84

dec_label_pc_139b0:                               ; preds = %dec_label_pc_1399c
  %v1_139b8.pre = load i32, i32* @r4, align 4
  %v1_139b0 = add i32 %v0_139a0, -4
  %v2_139b0 = inttoptr i32 %v1_139b0 to i32*
  %v3_139b0 = load i32, i32* %v2_139b0, align 4
  store i32 %v3_139b0, i32* @r3, align 4
  %v1_139b4 = add i32 %v0_139a0, -8
  store i32 %v1_139b4, i32* @r7, align 4
  %v9_139b8 = icmp eq i32 %v1_139b4, %v1_139b8.pre
  br i1 %v9_139b8, label %.thread2, label %dec_label_pc_139c8

.thread2:                                         ; preds = %dec_label_pc_139b0
  %v2_139bc = and i32 %v3_139b0, -4
  store i32 %v2_139bc, i32* %r3.global-to-local, align 4
  %v2_139c0 = load i32, i32* @r6, align 4
  %v3_139c0 = add i32 %v2_139c0, %v2_139bc
  store i32 %v3_139c0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13a50

dec_label_pc_139c8:                               ; preds = %dec_label_pc_139b0
  %v0_139c8 = load i32, i32* @r6, align 4
  %v1_139c8 = add i32 %v0_139c8, -4
  store i32 %v1_139c8, i32* @r2, align 4
  %v3_139cc = udiv i32 %v1_139c8, 4
  store i32 %v3_139cc, i32* @ip, align 4
  %tmp37 = and i32 %v1_139c8, -4
  %tmp38 = icmp eq i32 %tmp37, 36
  %v2_139d4 = icmp ult i32 %v1_139c8, 36
  %v3_139d4 = or i1 %tmp38, %v2_139d4
  %v0_139e4 = load i32, i32* @r5, align 4
  br i1 %v3_139d4, label %dec_label_pc_139e4, label %dec_label_pc_139d8

dec_label_pc_139d8:                               ; preds = %dec_label_pc_139c8
  store i32 %v0_139e4, i32* @r1, align 4
  %v0_139dc = call i32 @function_128d0()
  store i32 %v0_139dc, i32* %r0.global-to-local, align 4
  br label %.thread6

dec_label_pc_139e4:                               ; preds = %dec_label_pc_139c8
  %v1_139e4 = inttoptr i32 %v0_139e4 to i32*
  %v2_139e4 = load i32, i32* %v1_139e4, align 4
  store i32 %v2_139e4, i32* %r3.global-to-local, align 4
  %v2_139e8 = inttoptr i32 %v0_139a0 to i32*
  store i32 %v2_139e4, i32* %v2_139e8, align 4
  %v0_139ec = load i32, i32* @r5, align 4
  %v1_139ec = add i32 %v0_139ec, 4
  %v2_139ec = inttoptr i32 %v1_139ec to i32*
  %v3_139ec = load i32, i32* %v2_139ec, align 4
  store i32 %v3_139ec, i32* %r3.global-to-local, align 4
  %v1_139f0 = load i32, i32* %r1.global-to-local, align 4
  %v2_139f0 = add i32 %v1_139f0, 4
  %v3_139f0 = inttoptr i32 %v2_139f0 to i32*
  store i32 %v3_139ec, i32* %v3_139f0, align 4
  %v0_139f4 = load i32, i32* @r5, align 4
  %v1_139f4 = add i32 %v0_139f4, 8
  %v2_139f4 = inttoptr i32 %v1_139f4 to i32*
  %v3_139f4 = load i32, i32* %v2_139f4, align 4
  store i32 %v3_139f4, i32* %r3.global-to-local, align 4
  %v0_139f8 = load i32, i32* @ip, align 4
  %v1_139fc = load i32, i32* %r1.global-to-local, align 4
  %v2_139fc = add i32 %v1_139fc, 8
  %v3_139fc = inttoptr i32 %v2_139fc to i32*
  store i32 %v3_139f4, i32* %v3_139fc, align 4
  %tmp39 = icmp ult i32 %v0_139f8, 5
  br i1 %tmp39, label %.thread6, label %dec_label_pc_13a04

dec_label_pc_13a04:                               ; preds = %dec_label_pc_139e4
  %v0_13a04 = load i32, i32* @r5, align 4
  %v1_13a04 = add i32 %v0_13a04, 12
  %v2_13a04 = inttoptr i32 %v1_13a04 to i32*
  %v3_13a04 = load i32, i32* %v2_13a04, align 4
  store i32 %v3_13a04, i32* %r3.global-to-local, align 4
  %v1_13a08 = load i32, i32* %r1.global-to-local, align 4
  %v2_13a08 = add i32 %v1_13a08, 12
  %v3_13a08 = inttoptr i32 %v2_13a08 to i32*
  store i32 %v3_13a04, i32* %v3_13a08, align 4
  %v0_13a0c = load i32, i32* @r5, align 4
  %v1_13a0c = add i32 %v0_13a0c, 16
  %v2_13a0c = inttoptr i32 %v1_13a0c to i32*
  %v3_13a0c = load i32, i32* %v2_13a0c, align 4
  store i32 %v3_13a0c, i32* %r3.global-to-local, align 4
  %v0_13a10 = load i32, i32* @ip, align 4
  %v1_13a14 = load i32, i32* %r1.global-to-local, align 4
  %v2_13a14 = add i32 %v1_13a14, 16
  %v3_13a14 = inttoptr i32 %v2_13a14 to i32*
  store i32 %v3_13a0c, i32* %v3_13a14, align 4
  %tmp40 = icmp ult i32 %v0_13a10, 7
  br i1 %tmp40, label %.thread6, label %dec_label_pc_13a1c

dec_label_pc_13a1c:                               ; preds = %dec_label_pc_13a04
  %v0_13a1c = load i32, i32* @r5, align 4
  %v1_13a1c = add i32 %v0_13a1c, 20
  %v2_13a1c = inttoptr i32 %v1_13a1c to i32*
  %v3_13a1c = load i32, i32* %v2_13a1c, align 4
  store i32 %v3_13a1c, i32* %r3.global-to-local, align 4
  %v1_13a20 = load i32, i32* %r1.global-to-local, align 4
  %v2_13a20 = add i32 %v1_13a20, 20
  %v3_13a20 = inttoptr i32 %v2_13a20 to i32*
  store i32 %v3_13a1c, i32* %v3_13a20, align 4
  %v0_13a24 = load i32, i32* @r5, align 4
  %v1_13a24 = add i32 %v0_13a24, 24
  %v2_13a24 = inttoptr i32 %v1_13a24 to i32*
  %v3_13a24 = load i32, i32* %v2_13a24, align 4
  store i32 %v3_13a24, i32* %r3.global-to-local, align 4
  %v1_13a28 = load i32, i32* %r1.global-to-local, align 4
  %v2_13a28 = add i32 %v1_13a28, 24
  %v3_13a28 = inttoptr i32 %v2_13a28 to i32*
  store i32 %v3_13a24, i32* %v3_13a28, align 4
  %v0_13a2c = load i32, i32* @ip, align 4
  %v7_13a2c = icmp eq i32 %v0_13a2c, 9
  br i1 %v7_13a2c, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_13a1c
  %v1_13a30 = load i32, i32* @r5, align 4
  %v2_13a30 = add i32 %v1_13a30, 28
  %v3_13a30 = inttoptr i32 %v2_13a30 to i32*
  %v4_13a30 = load i32, i32* %v3_13a30, align 4
  store i32 %v4_13a30, i32* %r3.global-to-local, align 4
  %v2_13a34 = load i32, i32* %r1.global-to-local, align 4
  %v3_13a34 = add i32 %v2_13a34, 28
  %v4_13a34 = inttoptr i32 %v3_13a34 to i32*
  store i32 %v4_13a30, i32* %v4_13a34, align 4
  %v1_13a38 = load i32, i32* @r5, align 4
  %v2_13a38 = add i32 %v1_13a38, 32
  %v3_13a38 = inttoptr i32 %v2_13a38 to i32*
  %v4_13a38 = load i32, i32* %v3_13a38, align 4
  store i32 %v4_13a38, i32* %r3.global-to-local, align 4
  %v2_13a3c = load i32, i32* %r1.global-to-local, align 4
  %v3_13a3c = add i32 %v2_13a3c, 32
  %v4_13a3c = inttoptr i32 %v3_13a3c to i32*
  store i32 %v4_13a38, i32* %v4_13a3c, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_13a1c, %dec_label_pc_13a04, %dec_label_pc_139e4, %dec_label_pc_139d8, %bb32
  %v0_13a40 = load i32, i32* @r5, align 4
  store i32 %v0_13a40, i32* @r0, align 4
  %v0_13a44 = call i32 @function_13e30()
  store i32 %v0_13a44, i32* %r0.global-to-local, align 4
  %v0_13a48 = load i32, i32* @r7, align 4
  %v1_13a48 = add i32 %v0_13a48, 8
  store i32 %v1_13a48, i32* @r4, align 4
  br label %dec_label_pc_13b84

dec_label_pc_13a50:                               ; preds = %bb30, %.thread2, %dec_label_pc_13990
  %v0_13a64 = phi i32 [ %v3_139c0, %.thread2 ], [ %v1_138d8, %bb30 ], [ %v1_13a50.pre, %dec_label_pc_13990 ]
  %v0_13a50 = load i32, i32* @sb, align 4
  %v2_13a50 = sub i32 %v0_13a64, %v0_13a50
  store i32 %v2_13a50, i32* %r1.global-to-local, align 4
  %v0_13a58 = load i32, i32* @sl, align 4
  %v1_13a58 = add i32 %v0_13a58, 4
  %v2_13a58 = inttoptr i32 %v1_13a58 to i32*
  %v3_13a58 = load i32, i32* %v2_13a58, align 4
  %tmp41 = icmp ugt i32 %v2_13a50, 15
  %v1_13a80 = urem i32 %v3_13a58, 2
  store i32 %v1_13a80, i32* %r3.global-to-local, align 4
  br i1 %tmp41, label %dec_label_pc_13a80, label %dec_label_pc_13a60

dec_label_pc_13a60:                               ; preds = %dec_label_pc_13a50
  %v2_13a64 = or i32 %v1_13a80, %v0_13a64
  store i32 %v2_13a64, i32* %r3.global-to-local, align 4
  store i32 %v2_13a64, i32* %v2_13a58, align 4
  %v0_13a6c = load i32, i32* @sl, align 4
  %v1_13a6c = load i32, i32* %r0.global-to-local, align 4
  %v2_13a6c = add i32 %v1_13a6c, %v0_13a6c
  store i32 %v2_13a6c, i32* %r2.global-to-local, align 4
  %v1_13a70 = add i32 %v2_13a6c, 4
  %v2_13a70 = inttoptr i32 %v1_13a70 to i32*
  %v3_13a70 = load i32, i32* %v2_13a70, align 4
  %v1_13a74 = or i32 %v3_13a70, 1
  store i32 %v1_13a74, i32* %r3.global-to-local, align 4
  store i32 %v1_13a74, i32* %v2_13a70, align 4
  br label %dec_label_pc_13ab0

dec_label_pc_13a80:                               ; preds = %dec_label_pc_13a50
  %v2_13a84 = add i32 %v0_13a58, %v0_13a50
  store i32 %v2_13a84, i32* %r0.global-to-local, align 4
  %v2_13a88 = or i32 %v1_13a80, %v0_13a50
  store i32 %v2_13a88, i32* %r3.global-to-local, align 4
  %v1_13a8c = or i32 %v2_13a50, 1
  store i32 %v1_13a8c, i32* %r2.global-to-local, align 4
  store i32 %v2_13a88, i32* %v2_13a58, align 4
  %v0_13a94 = load i32, i32* %r2.global-to-local, align 4
  %v1_13a94 = load i32, i32* %r0.global-to-local, align 4
  %v2_13a94 = add i32 %v1_13a94, 4
  %v3_13a94 = inttoptr i32 %v2_13a94 to i32*
  store i32 %v0_13a94, i32* %v3_13a94, align 4
  %v0_13a98 = load i32, i32* %r0.global-to-local, align 4
  %v1_13a98 = load i32, i32* %r1.global-to-local, align 4
  %v2_13a98 = add i32 %v1_13a98, %v0_13a98
  store i32 %v2_13a98, i32* %r2.global-to-local, align 4
  %v1_13a9c = add i32 %v2_13a98, 4
  %v2_13a9c = inttoptr i32 %v1_13a9c to i32*
  %v3_13a9c = load i32, i32* %v2_13a9c, align 4
  %v1_13aa0 = or i32 %v3_13a9c, 1
  store i32 %v1_13aa0, i32* %r3.global-to-local, align 4
  store i32 %v1_13aa0, i32* %v2_13a9c, align 4
  %v0_13aa8 = load i32, i32* %r0.global-to-local, align 4
  %v1_13aa8 = add i32 %v0_13aa8, 8
  store i32 %v1_13aa8, i32* @r0, align 4
  %v0_13aac = call i32 @function_13e30()
  store i32 %v0_13aac, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13ab0

dec_label_pc_13ab0:                               ; preds = %dec_label_pc_13a60, %dec_label_pc_13a80
  %v0_13ab0 = load i32, i32* @sl, align 4
  %v1_13ab0 = add i32 %v0_13ab0, 8
  store i32 %v1_13ab0, i32* @r4, align 4
  br label %dec_label_pc_13b84

dec_label_pc_13ab8:                               ; preds = %bb29
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 98320, i32* %r1.global-to-local, align 4
  %v4_13ac0 = load i32, i32* inttoptr (i32 98352 to i32*), align 16
  store i32 %v4_13ac0, i32* @r8, align 4
  %v2_13ac4 = inttoptr i32 %v1_138d4 to i32*
  %v3_13ac4 = load i32, i32* %v2_13ac4, align 4
  store i32 %v3_13ac4, i32* @r4, align 4
  %v1_13ac8 = add i32 %v4_13ac0, 860
  %v2_13ac8 = inttoptr i32 %v1_13ac8 to i32*
  %v3_13ac8 = load i32, i32* %v2_13ac8, align 4
  %v1_13acc = add i32 %v3_13ac4, 4
  %v1_13ad0 = add i32 %v3_13ac8, -1
  store i32 %v1_13ad0, i32* %r2.global-to-local, align 4
  %v2_13ad4 = add i32 %v1_13acc, %v1_13ad0
  %v1_13ad8 = load i32, i32* @sb, align 4
  %v2_13ad8 = add i32 %v2_13ad4, %v1_13ad8
  store i32 %v2_13ad8, i32* %r3.global-to-local, align 4
  %v2_13adc = sub i32 0, %v3_13ac8
  %v3_13adc = and i32 %v2_13ad8, %v2_13adc
  store i32 %v3_13adc, i32* @r7, align 4
  %v2_13ae0 = sub i32 %v3_13adc, %v3_13ac4
  store i32 %v2_13ae0, i32* @fp, align 4
  %v9_13ae4 = icmp eq i32 %v1_138d8, %v2_13ae0
  br i1 %v9_13ae4, label %dec_label_pc_13b58, label %dec_label_pc_13aec

dec_label_pc_13aec:                               ; preds = %dec_label_pc_13ab8
  %v2_13aec = sub i32 %v1_138d4, %v3_13ac4
  store i32 %v2_13aec, i32* %r0.global-to-local, align 4
  %v2_13af0 = add i32 %v3_13ac4, %v1_138d8
  store i32 %v2_13af0, i32* %r1.global-to-local, align 4
  store i32 %v3_13adc, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_13afc = call i32 @function_1567c(i32 %v2_13aec, i32 %v2_13af0, i32 %v3_13adc, i32 1)
  store i32 %v4_13afc, i32* %r0.global-to-local, align 4
  %v7_13b00 = icmp eq i32 %v4_13afc, -1
  br i1 %v7_13b00, label %dec_label_pc_13b4c, label %dec_label_pc_13b08

dec_label_pc_13b08:                               ; preds = %dec_label_pc_13aec
  %v1_13b08 = load i32, i32* @r4, align 4
  %v2_13b08 = add i32 %v1_13b08, %v4_13afc
  store i32 %v2_13b08, i32* %r0.global-to-local, align 4
  %v0_13b0c = load i32, i32* @fp, align 4
  %v1_13b0c = or i32 %v0_13b0c, 2
  store i32 %v1_13b0c, i32* %r3.global-to-local, align 4
  %v2_13b10 = add i32 %v2_13b08, 4
  %v3_13b10 = inttoptr i32 %v2_13b10 to i32*
  store i32 %v1_13b0c, i32* %v3_13b10, align 4
  %v0_13b14 = load i32, i32* @r8, align 4
  %v1_13b14 = add i32 %v0_13b14, 868
  %v2_13b14 = inttoptr i32 %v1_13b14 to i32*
  %v3_13b14 = load i32, i32* %v2_13b14, align 4
  store i32 %v3_13b14, i32* %r3.global-to-local, align 4
  %v1_13b18 = add i32 %v0_13b14, 880
  %v2_13b18 = inttoptr i32 %v1_13b18 to i32*
  %v3_13b18 = load i32, i32* %v2_13b18, align 4
  store i32 %v3_13b18, i32* %r2.global-to-local, align 4
  %v0_13b1c = load i32, i32* @r6, align 4
  %v2_13b1c = sub i32 %v3_13b14, %v0_13b1c
  store i32 %v2_13b1c, i32* %r3.global-to-local, align 4
  %v1_13b20 = load i32, i32* @r7, align 4
  %v2_13b20 = add i32 %v1_13b20, %v2_13b1c
  store i32 %v2_13b20, i32* %r1.global-to-local, align 4
  %v1_13b24 = add i32 %v0_13b14, 872
  %v2_13b24 = inttoptr i32 %v1_13b24 to i32*
  %v3_13b24 = load i32, i32* %v2_13b24, align 4
  store i32 %v3_13b24, i32* %r3.global-to-local, align 4
  %v1_13b2c = add i32 %v0_13b14, 884
  %v2_13b2c = inttoptr i32 %v1_13b2c to i32*
  %v3_13b2c = load i32, i32* %v2_13b2c, align 4
  store i32 %v3_13b2c, i32* %r2.global-to-local, align 4
  %tmp42 = icmp ugt i32 %v2_13b20, %v3_13b18
  br i1 %tmp42, label %bb33, label %bb34

bb33:                                             ; preds = %dec_label_pc_13b08
  store i32 %v2_13b20, i32* %v2_13b18, align 4
  %v0_13b34.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_13b34.pre = load i32, i32* @r8, align 4
  br label %bb34

bb34:                                             ; preds = %dec_label_pc_13b08, %bb33
  %v1_13b34 = phi i32 [ %v0_13b14, %dec_label_pc_13b08 ], [ %v1_13b34.pre, %bb33 ]
  %v0_13b34 = phi i32 [ %v2_13b20, %dec_label_pc_13b08 ], [ %v0_13b34.pre, %bb33 ]
  %v2_13b34 = add i32 %v1_13b34, 868
  %v3_13b34 = inttoptr i32 %v2_13b34 to i32*
  store i32 %v0_13b34, i32* %v3_13b34, align 4
  %v0_13b38 = load i32, i32* %r1.global-to-local, align 4
  %v1_13b38 = load i32, i32* %r3.global-to-local, align 4
  %v2_13b38 = add i32 %v1_13b38, %v0_13b38
  store i32 %v2_13b38, i32* %r1.global-to-local, align 4
  %v1_13b3c = load i32, i32* %r2.global-to-local, align 4
  %v0_13b40 = load i32, i32* %r0.global-to-local, align 4
  %v1_13b40 = add i32 %v0_13b40, 8
  store i32 %v1_13b40, i32* @r4, align 4
  %tmp43 = icmp ugt i32 %v2_13b38, %v1_13b3c
  br i1 %tmp43, label %bb35, label %dec_label_pc_13b84

bb35:                                             ; preds = %bb34
  %v5_13b44 = load i32, i32* @r8, align 4
  %v6_13b44 = add i32 %v5_13b44, 884
  %v7_13b44 = inttoptr i32 %v6_13b44 to i32*
  store i32 %v2_13b38, i32* %v7_13b44, align 4
  br label %dec_label_pc_13b84

dec_label_pc_13b4c:                               ; preds = %dec_label_pc_13aec
  %v0_13b4c = load i32, i32* @sb, align 4
  %v1_13b4c = add i32 %v0_13b4c, 4
  store i32 %v1_13b4c, i32* %r3.global-to-local, align 4
  %v0_13b50 = load i32, i32* @r6, align 4
  %v3_13b50 = icmp ult i32 %v0_13b50, %v1_13b4c
  br i1 %v3_13b50, label %dec_label_pc_13b60, label %dec_label_pc_13b4c.dec_label_pc_13b58_crit_edge

dec_label_pc_13b4c.dec_label_pc_13b58_crit_edge:  ; preds = %dec_label_pc_13b4c
  %v0_13b58.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13b58

dec_label_pc_13b58:                               ; preds = %dec_label_pc_13b4c.dec_label_pc_13b58_crit_edge, %dec_label_pc_13ab8
  %v0_13b58 = phi i32 [ %v0_13b58.pre, %dec_label_pc_13b4c.dec_label_pc_13b58_crit_edge ], [ %v0_138c0, %dec_label_pc_13ab8 ]
  store i32 %v0_13b58, i32* @r4, align 4
  br label %dec_label_pc_13b84

dec_label_pc_13b60:                               ; preds = %dec_label_pc_13b4c
  %v1_13b60 = add i32 %v0_13b4c, -7
  store i32 %v1_13b60, i32* @r0, align 4
  %v0_13b64 = call i32 @function_12dc4()
  store i32 %v0_13b64, i32* @r0, align 4
  store i32 %v0_13b64, i32* @r4, align 4
  %v2_13b68 = icmp eq i32 %v0_13b64, 0
  br i1 %v2_13b68, label %dec_label_pc_13b84, label %dec_label_pc_13b70

dec_label_pc_13b70:                               ; preds = %dec_label_pc_13b60
  %v0_13b70 = load i32, i32* @r6, align 4
  %v1_13b70 = add i32 %v0_13b70, -8
  store i32 %v1_13b70, i32* @r2, align 4
  %v0_13b74 = load i32, i32* @r5, align 4
  store i32 %v0_13b74, i32* @r1, align 4
  %v0_13b78 = call i32 @function_128d0()
  %v0_13b7c = load i32, i32* @r5, align 4
  store i32 %v0_13b7c, i32* @r0, align 4
  %v0_13b80 = call i32 @function_13e30()
  store i32 %v0_13b80, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13b84

dec_label_pc_13b84:                               ; preds = %bb31, %bb35, %bb34, %dec_label_pc_13b60, %dec_label_pc_13b58, %dec_label_pc_13ab0, %.thread6, %dec_label_pc_13920, %dec_label_pc_13b70
  store i32 %v2_13874, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  store i32 98320, i32* %r2.global-to-local, align 4
  %v4_13b94 = load i32, i32* inttoptr (i32 98344 to i32*), align 8
  store i32 %v4_13b94, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_13b94)
  br label %dec_label_pc_13ba0

dec_label_pc_13ba0:                               ; preds = %dec_label_pc_138a8, %dec_label_pc_13850, %dec_label_pc_13838, %dec_label_pc_13b84
  %v0_13ba0 = load i32, i32* @r4, align 4
  store i32 %v0_13ba0, i32* %r0.global-to-local, align 4
  store i32 %v3_13818, i32* @r4, align 4
  store i32 %v6_13818, i32* @r5, align 4
  store i32 %v9_13818, i32* @r6, align 4
  store i32 %v12_13818, i32* @r7, align 4
  store i32 %v15_13818, i32* @r8, align 4
  store i32 %v18_13818, i32* @sb, align 4
  store i32 %v21_13818, i32* @sl, align 4
  store i32 %v24_13818, i32* @fp, align 4
  store i32 %v27_13818, i32* @lr, align 4
  ret i32 %v0_13ba0

; uselistorder directives
  uselistorder i32 %v2_13b38, { 1, 0, 2 }
  uselistorder i32 %v2_13b20, { 1, 2, 0, 3 }
  uselistorder i32 %v4_13afc, { 1, 0, 2 }
  uselistorder i32 %v3_13adc, { 1, 0, 2, 3 }
  uselistorder i32 %v1_13a80, { 2, 1, 0 }
  uselistorder i32 %v2_13a50, { 1, 0, 2 }
  uselistorder i32 %v0_139e4, { 1, 0 }
  uselistorder i32 %v0_139a0, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v3_13904, { 0, 2, 1, 3 }
  uselistorder i32 %v2_138fc, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v1_138e0, { 3, 5, 0, 1, 2, 4, 6 }
  uselistorder i32 %v1_138d8, { 0, 7, 5, 1, 2, 3, 4, 6, 8, 9 }
  uselistorder i32 %v1_138d4, { 2, 3, 0, 1, 4 }
  uselistorder i1 %v2_138c4, { 1, 0 }
  uselistorder i32 %v0_138c0, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_138a0, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 0, 6, 11, 7, 8, 9, 10, 21, 12, 14, 13, 20, 22, 15, 16, 17, 18, 19, 25, 24, 23, 26, 27 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_13ba0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_13b84, { 8, 3, 4, 1, 2, 5, 6, 0, 7 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %dec_label_pc_13ab0, { 1, 0 }
  uselistorder label %dec_label_pc_13a50, { 1, 2, 0 }
  uselistorder label %.thread6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1399c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_13990, { 1, 0 }
  uselistorder label %dec_label_pc_1398c, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
}

define i32 @function_13bb0(i32 %arg1) local_unnamed_addr {
dec_label_pc_13bb0:
  %v0_13bb0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13bb0, label %bb, label %.thread5

bb:                                               ; preds = %dec_label_pc_13bb0
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_13bb0, %bb
  %v10_13bc8 = phi i32 [ %arg1, %dec_label_pc_13bb0 ], [ 0, %bb ]
  ret i32 %v10_13bc8

; uselistorder directives
  uselistorder label %.thread5, { 1, 0 }
}

define i32 @function_13bcc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13bcc:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_13bcc = add i32 %arg2, 44
  %v2_13bcc = inttoptr i32 %v1_13bcc to i32*
  %v3_13bcc = load i32, i32* %v2_13bcc, align 4
  %v12_13bd0 = load i32, i32* @r7, align 4
  %v1_13bd4 = add i32 %v3_13bcc, 4
  %v2_13bd4 = inttoptr i32 %v1_13bd4 to i32*
  %v3_13bd4 = load i32, i32* %v2_13bd4, align 4
  %v1_13bd8 = add i32 %arg2, 860
  %v2_13bd8 = inttoptr i32 %v1_13bd8 to i32*
  %v3_13bd8 = load i32, i32* %v2_13bd8, align 4
  store i32 %v3_13bd8, i32* @r4, align 4
  %v1_13bdc = and i32 %v3_13bd4, -4
  store i32 %v1_13bdc, i32* @r6, align 4
  %v1_13be0 = add i32 %v1_13bdc, -17
  %v2_13be4 = add i32 %v1_13be0, %v3_13bd8
  store i32 %arg2, i32* @r5, align 4
  %v2_13bf0 = sub i32 %v2_13be4, %arg1
  store i32 %v2_13bf0, i32* @r0, align 4
  store i32 %v3_13bd8, i32* @r1, align 4
  %v0_13bf8 = call i32 @function_11e38()
  %v1_13bfc = add i32 %v0_13bf8, -1
  store i32 %v1_13bfc, i32* %r0.global-to-local, align 4
  %v0_13c00 = load i32, i32* @r4, align 4
  %v2_13c00 = mul i32 %v0_13c00, %v1_13bfc
  store i32 %v2_13c00, i32* @r7, align 4
  %v2_13c04 = icmp eq i32 %v2_13c00, 0
  store i1 %v2_13c04, i1* @cpsr_z, align 1
  %tmp8 = icmp slt i32 %v2_13c00, 1
  br i1 %tmp8, label %dec_label_pc_13c6c, label %dec_label_pc_13c0c

dec_label_pc_13c0c:                               ; preds = %dec_label_pc_13bcc
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_13c10 = call i32 @function_15338(i32 0)
  store i32 %v1_13c10, i32* %r0.global-to-local, align 4
  %v0_13c14 = load i32, i32* @r5, align 4
  %v1_13c14 = add i32 %v0_13c14, 44
  %v2_13c14 = inttoptr i32 %v1_13c14 to i32*
  %v3_13c14 = load i32, i32* %v2_13c14, align 4
  %v0_13c18 = load i32, i32* @r6, align 4
  %v2_13c18 = add i32 %v0_13c18, %v3_13c14
  %v9_13c1c = icmp eq i32 %v1_13c10, %v2_13c18
  store i1 %v9_13c1c, i1* @cpsr_z, align 1
  store i32 %v1_13c10, i32* @r4, align 4
  br i1 %v9_13c1c, label %dec_label_pc_13c28, label %dec_label_pc_13c6c

dec_label_pc_13c28:                               ; preds = %dec_label_pc_13c0c
  %v0_13c28 = load i32, i32* @r7, align 4
  %v1_13c28 = sub i32 0, %v0_13c28
  store i32 %v1_13c28, i32* %r0.global-to-local, align 4
  %v1_13c2c = call i32 @function_15338(i32 %v1_13c28)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_13c34 = call i32 @function_15338(i32 0)
  store i32 %v1_13c34, i32* %r0.global-to-local, align 4
  %v7_13c38 = icmp eq i32 %v1_13c34, -1
  store i1 %v7_13c38, i1* @cpsr_z, align 1
  br i1 %v7_13c38, label %dec_label_pc_13c6c, label %dec_label_pc_13c40

dec_label_pc_13c40:                               ; preds = %dec_label_pc_13c28
  %v0_13c40 = load i32, i32* @r4, align 4
  %v2_13c40 = sub i32 %v0_13c40, %v1_13c34
  store i32 %v2_13c40, i32* %r0.global-to-local, align 4
  %v9_13c40 = icmp eq i32 %v0_13c40, %v1_13c34
  store i1 %v9_13c40, i1* @cpsr_z, align 1
  br i1 %v9_13c40, label %dec_label_pc_13c6c, label %dec_label_pc_13c48

dec_label_pc_13c48:                               ; preds = %dec_label_pc_13c40
  %v0_13c48 = load i32, i32* @r5, align 4
  %v1_13c48 = add i32 %v0_13c48, 872
  %v2_13c48 = inttoptr i32 %v1_13c48 to i32*
  %v3_13c48 = load i32, i32* %v2_13c48, align 4
  %v1_13c4c = load i32, i32* @r6, align 4
  %v2_13c4c = sub i32 %v1_13c4c, %v2_13c40
  store i32 %v2_13c4c, i32* %r2.global-to-local, align 4
  %v1_13c50 = add i32 %v0_13c48, 44
  %v2_13c50 = inttoptr i32 %v1_13c50 to i32*
  %v3_13c50 = load i32, i32* %v2_13c50, align 4
  store i32 %v3_13c50, i32* %r1.global-to-local, align 4
  %v2_13c54 = sub i32 %v3_13c48, %v2_13c40
  %v1_13c58 = or i32 %v2_13c4c, 1
  store i32 %v1_13c58, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_13c54, i32* %v2_13c48, align 4
  %v0_13c64 = load i32, i32* %r2.global-to-local, align 4
  %v1_13c64 = load i32, i32* %r1.global-to-local, align 4
  %v2_13c64 = add i32 %v1_13c64, 4
  %v3_13c64 = inttoptr i32 %v2_13c64 to i32*
  store i32 %v0_13c64, i32* %v3_13c64, align 4
  %v1_13c78.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13c70

dec_label_pc_13c6c:                               ; preds = %dec_label_pc_13c0c, %dec_label_pc_13c40, %dec_label_pc_13c28, %dec_label_pc_13bcc
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13c70

dec_label_pc_13c70:                               ; preds = %dec_label_pc_13c48, %dec_label_pc_13c6c
  %v1_13c78 = phi i32 [ %v1_13c78.pre, %dec_label_pc_13c48 ], [ 0, %dec_label_pc_13c6c ]
  store i32 %v12_13bd0, i32* @r7, align 4
  ret i32 %v1_13c78

; uselistorder directives
  uselistorder i1 %v7_13c38, { 1, 0 }
  uselistorder i32 %v1_13c34, { 2, 1, 0, 3 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 10, 9, 8, 0 }
  uselistorder i32 872, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 (i32)* @function_15338, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_13c70, { 1, 0 }
  uselistorder label %dec_label_pc_13c6c, { 1, 2, 0, 3 }
}

define i32 @function_13c7c() local_unnamed_addr {
dec_label_pc_13c7c:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_13c7c = load i32, i32* @r4, align 4
  store i32 %v3_13c7c, i32* %stack_var_-36, align 4
  %v0_13c80 = load i32, i32* @r0, align 4
  %v1_13c80 = inttoptr i32 %v0_13c80 to i32*
  %v2_13c80 = load i32, i32* %v1_13c80, align 4
  store i32 %v2_13c80, i32* %r3.global-to-local, align 4
  %v2_13c84 = icmp eq i32 %v2_13c80, 0
  store i32 %v0_13c80, i32* @r4, align 4
  br i1 %v2_13c84, label %dec_label_pc_13dbc.preheader, label %dec_label_pc_13c98

dec_label_pc_13dbc.preheader:                     ; preds = %dec_label_pc_13c7c
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_13dc425 = add i32 %v0_13c80, 52
  store i32 %v1_13dc425, i32* %r3.global-to-local, align 4
  %v2_13dcc26 = add i32 %v0_13c80, 60
  %v3_13dcc27 = inttoptr i32 %v2_13dcc26 to i32*
  store i32 %v1_13dc425, i32* %v3_13dcc27, align 4
  %v0_13dd028 = load i32, i32* %r3.global-to-local, align 4
  %v2_13dd029 = add i32 %v0_13dd028, 12
  %v3_13dd030 = inttoptr i32 %v2_13dd029 to i32*
  store i32 %v0_13dd028, i32* %v3_13dd030, align 4
  br label %dec_label_pc_13dbc.dec_label_pc_13dbc_crit_edge

dec_label_pc_13c98:                               ; preds = %dec_label_pc_13c7c
  %v1_13c98 = and i32 %v2_13c80, -3
  %v3_13c9c = udiv i32 %v2_13c80, 8
  store i32 %v3_13c9c, i32* %r2.global-to-local, align 4
  store i32 %v1_13c98, i32* %v1_13c80, align 4
  %v0_13ca4 = load i32, i32* @r0, align 4
  %v1_13ca4 = add i32 %v0_13ca4, -4
  store i32 %v1_13ca4, i32* %r3.global-to-local, align 4
  %v1_13ca8 = load i32, i32* %r2.global-to-local, align 4
  %v4_13ca8 = mul i32 %v1_13ca8, 4
  %v5_13ca8 = add i32 %v4_13ca8, %v1_13ca4
  store i32 %v5_13ca8, i32* %sb.global-to-local, align 4
  %v1_13cac = add i32 %v0_13ca4, 52
  store i32 %v1_13cac, i32* %r7.global-to-local, align 4
  %v1_13cb0 = add i32 %v0_13ca4, 4
  store i32 %v1_13cb0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_13cb8

dec_label_pc_13cb8:                               ; preds = %dec_label_pc_13db4, %dec_label_pc_13c98
  %v1_13dac10 = phi i32 [ %v1_13dac, %dec_label_pc_13db4 ], [ %v5_13ca8, %dec_label_pc_13c98 ]
  %v1_13cc4 = phi i32 [ %v1_13db4, %dec_label_pc_13db4 ], [ %v1_13cb0, %dec_label_pc_13c98 ]
  %v1_13cb8 = inttoptr i32 %v1_13cc4 to i32*
  %v2_13cb8 = load i32, i32* %v1_13cb8, align 4
  store i32 %v2_13cb8, i32* %r1.global-to-local, align 4
  %v2_13cbc = icmp eq i32 %v2_13cb8, 0
  br i1 %v2_13cbc, label %dec_label_pc_13dac, label %dec_label_pc_13cc4

dec_label_pc_13cc4:                               ; preds = %dec_label_pc_13cb8
  %v0_13cc4 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_13cc4, i32* %v1_13cb8, align 4
  %v0_13cc8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13cc8

dec_label_pc_13cc8:                               ; preds = %dec_label_pc_13da0, %dec_label_pc_13cc4
  %v0_13ce4 = phi i32 [ %v0_13da0, %dec_label_pc_13da0 ], [ %v0_13cc8.pre, %dec_label_pc_13cc4 ]
  %v1_13cc8 = add i32 %v0_13ce4, 4
  %v2_13cc8 = inttoptr i32 %v1_13cc8 to i32*
  %v3_13cc8 = load i32, i32* %v2_13cc8, align 4
  store i32 %v3_13cc8, i32* %r3.global-to-local, align 4
  %v1_13ccc = and i32 %v3_13cc8, -2
  store i32 %v1_13ccc, i32* %lr.global-to-local, align 4
  %v2_13cd0 = add i32 %v1_13ccc, %v0_13ce4
  store i32 %v2_13cd0, i32* @r0, align 4
  %v1_13cd4 = urem i32 %v3_13cc8, 2
  %v2_13cd4 = icmp eq i32 %v1_13cd4, 0
  %v1_13cd8 = add i32 %v0_13ce4, 8
  %v2_13cd8 = inttoptr i32 %v1_13cd8 to i32*
  %v3_13cd8 = load i32, i32* %v2_13cd8, align 4
  store i32 %v3_13cd8, i32* %sl.global-to-local, align 4
  %v1_13cdc = add i32 %v2_13cd0, 4
  %v2_13cdc = inttoptr i32 %v1_13cdc to i32*
  %v3_13cdc = load i32, i32* %v2_13cdc, align 4
  store i32 %v3_13cdc, i32* %r8.global-to-local, align 4
  br i1 %v2_13cd4, label %dec_label_pc_13ce4, label %dec_label_pc_13d18

dec_label_pc_13ce4:                               ; preds = %dec_label_pc_13cc8
  %v1_13ce4 = inttoptr i32 %v0_13ce4 to i32*
  %v2_13ce4 = load i32, i32* %v1_13ce4, align 4
  store i32 %v2_13ce4, i32* %r5.global-to-local, align 4
  %v2_13ce8 = sub i32 %v0_13ce4, %v2_13ce4
  store i32 %v2_13ce8, i32* %r3.global-to-local, align 4
  %v1_13cec = add i32 %v2_13ce8, 8
  %v2_13cec = inttoptr i32 %v1_13cec to i32*
  %v3_13cec = load i32, i32* %v2_13cec, align 4
  store i32 %v3_13cec, i32* %ip.global-to-local, align 4
  %v1_13cf0 = add i32 %v3_13cec, 12
  %v2_13cf0 = inttoptr i32 %v1_13cf0 to i32*
  %v3_13cf0 = load i32, i32* %v2_13cf0, align 4
  store i32 %v3_13cf0, i32* %r1.global-to-local, align 4
  %v9_13cf4 = icmp eq i32 %v3_13cf0, %v2_13ce8
  %v1_13cf8 = add i32 %v2_13ce8, 12
  %v2_13cf8 = inttoptr i32 %v1_13cf8 to i32*
  %v3_13cf8 = load i32, i32* %v2_13cf8, align 4
  store i32 %v3_13cf8, i32* %r2.global-to-local, align 4
  br i1 %v9_13cf4, label %dec_label_pc_13d00, label %dec_label_pc_13d5c

dec_label_pc_13d00:                               ; preds = %dec_label_pc_13ce4
  %v1_13d00 = add i32 %v3_13cf8, 8
  %v2_13d00 = inttoptr i32 %v1_13d00 to i32*
  %v3_13d00 = load i32, i32* %v2_13d00, align 4
  store i32 %v3_13d00, i32* %r3.global-to-local, align 4
  %v9_13d04 = icmp eq i32 %v3_13d00, %v2_13ce8
  br i1 %v9_13d04, label %dec_label_pc_13d0c, label %dec_label_pc_13d5c

dec_label_pc_13d0c:                               ; preds = %dec_label_pc_13d00
  store i32 %v3_13cec, i32* %v2_13d00, align 4
  %v0_13d10 = load i32, i32* %r2.global-to-local, align 4
  %v1_13d10 = load i32, i32* %ip.global-to-local, align 4
  %v2_13d10 = add i32 %v1_13d10, 12
  %v3_13d10 = inttoptr i32 %v2_13d10 to i32*
  store i32 %v0_13d10, i32* %v3_13d10, align 4
  %v0_13d14 = load i32, i32* %lr.global-to-local, align 4
  %v1_13d14 = load i32, i32* %r5.global-to-local, align 4
  %v2_13d14 = add i32 %v1_13d14, %v0_13d14
  store i32 %v2_13d14, i32* %lr.global-to-local, align 4
  %v0_13d1c.pre = load i32, i32* @r0, align 4
  %v0_13d20.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_13d18

dec_label_pc_13d18:                               ; preds = %dec_label_pc_13cc8, %dec_label_pc_13d0c
  %v0_13d90 = phi i32 [ %v1_13ccc, %dec_label_pc_13cc8 ], [ %v2_13d14, %dec_label_pc_13d0c ]
  %v0_13d20 = phi i32 [ %v3_13cdc, %dec_label_pc_13cc8 ], [ %v0_13d20.pre, %dec_label_pc_13d0c ]
  %v1_13d34 = phi i32 [ %v2_13cd0, %dec_label_pc_13cc8 ], [ %v0_13d1c.pre, %dec_label_pc_13d0c ]
  %v0_13d18 = load i32, i32* @r4, align 4
  %v1_13d18 = add i32 %v0_13d18, 44
  %v2_13d18 = inttoptr i32 %v1_13d18 to i32*
  %v3_13d18 = load i32, i32* %v2_13d18, align 4
  store i32 %v3_13d18, i32* %r3.global-to-local, align 4
  %v9_13d1c = icmp eq i32 %v1_13d34, %v3_13d18
  %v1_13d20 = and i32 %v0_13d20, -4
  store i32 %v1_13d20, i32* %r5.global-to-local, align 4
  br i1 %v9_13d1c, label %dec_label_pc_13d90, label %dec_label_pc_13d28

dec_label_pc_13d28:                               ; preds = %dec_label_pc_13d18
  %v2_13d28 = add i32 %v1_13d34, %v1_13d20
  store i32 %v2_13d28, i32* %r3.global-to-local, align 4
  %v1_13d2c = add i32 %v2_13d28, 4
  %v2_13d2c = inttoptr i32 %v1_13d2c to i32*
  %v3_13d2c = load i32, i32* %v2_13d2c, align 4
  store i32 %v3_13d2c, i32* %r3.global-to-local, align 4
  %v1_13d30 = urem i32 %v3_13d2c, 2
  %v2_13d30 = icmp eq i32 %v1_13d30, 0
  %v2_13d34 = add i32 %v1_13d34, 4
  %v3_13d34 = inttoptr i32 %v2_13d34 to i32*
  store i32 %v1_13d20, i32* %v3_13d34, align 4
  br i1 %v2_13d30, label %dec_label_pc_13d3c, label %dec_label_pc_13d28.dec_label_pc_13d6c_crit_edge

dec_label_pc_13d28.dec_label_pc_13d6c_crit_edge:  ; preds = %dec_label_pc_13d28
  %v0_13d70.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_13d6c

dec_label_pc_13d3c:                               ; preds = %dec_label_pc_13d28
  %v0_13d3c = load i32, i32* @r0, align 4
  %v1_13d3c = add i32 %v0_13d3c, 8
  %v2_13d3c = inttoptr i32 %v1_13d3c to i32*
  %v3_13d3c = load i32, i32* %v2_13d3c, align 4
  store i32 %v3_13d3c, i32* %ip.global-to-local, align 4
  %v1_13d40 = add i32 %v3_13d3c, 12
  %v2_13d40 = inttoptr i32 %v1_13d40 to i32*
  %v3_13d40 = load i32, i32* %v2_13d40, align 4
  store i32 %v3_13d40, i32* %r3.global-to-local, align 4
  %v9_13d44 = icmp eq i32 %v3_13d40, %v0_13d3c
  %v1_13d48 = add i32 %v0_13d3c, 12
  %v2_13d48 = inttoptr i32 %v1_13d48 to i32*
  %v3_13d48 = load i32, i32* %v2_13d48, align 4
  store i32 %v3_13d48, i32* %r2.global-to-local, align 4
  br i1 %v9_13d44, label %dec_label_pc_13d50, label %dec_label_pc_13d5c

dec_label_pc_13d50:                               ; preds = %dec_label_pc_13d3c
  %v1_13d50 = add i32 %v3_13d48, 8
  %v2_13d50 = inttoptr i32 %v1_13d50 to i32*
  %v3_13d50 = load i32, i32* %v2_13d50, align 4
  store i32 %v3_13d50, i32* %r3.global-to-local, align 4
  %v9_13d54 = icmp eq i32 %v3_13d50, %v0_13d3c
  br i1 %v9_13d54, label %dec_label_pc_13d60, label %dec_label_pc_13d5c

dec_label_pc_13d5c:                               ; preds = %dec_label_pc_13d3c, %dec_label_pc_13d00, %dec_label_pc_13ce4, %dec_label_pc_13d50
  %v0_13d5c = call i32 @function_140ac()
  store i32 %v0_13d5c, i32* @r0, align 4
  %v0_13d60.pre = load i32, i32* @ip, align 4
  %v1_13d60.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_13d60

dec_label_pc_13d60:                               ; preds = %dec_label_pc_13d50, %dec_label_pc_13d5c
  %v1_13d60 = phi i32 [ %v3_13d48, %dec_label_pc_13d50 ], [ %v1_13d60.pre, %dec_label_pc_13d5c ]
  %v0_13d60 = phi i32 [ %v3_13d3c, %dec_label_pc_13d50 ], [ %v0_13d60.pre, %dec_label_pc_13d5c ]
  %v2_13d60 = add i32 %v1_13d60, 8
  %v3_13d60 = inttoptr i32 %v2_13d60 to i32*
  store i32 %v0_13d60, i32* %v3_13d60, align 4
  %v0_13d64 = load i32, i32* %r2.global-to-local, align 4
  %v1_13d64 = load i32, i32* %ip.global-to-local, align 4
  %v2_13d64 = add i32 %v1_13d64, 12
  %v3_13d64 = inttoptr i32 %v2_13d64 to i32*
  store i32 %v0_13d64, i32* %v3_13d64, align 4
  %v0_13d68 = load i32, i32* %lr.global-to-local, align 4
  %v1_13d68 = load i32, i32* %r5.global-to-local, align 4
  %v2_13d68 = add i32 %v1_13d68, %v0_13d68
  store i32 %v2_13d68, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_13d6c

dec_label_pc_13d6c:                               ; preds = %dec_label_pc_13d28.dec_label_pc_13d6c_crit_edge, %dec_label_pc_13d60
  %v0_13d70 = phi i32 [ %v0_13d70.pre, %dec_label_pc_13d28.dec_label_pc_13d6c_crit_edge ], [ %v2_13d68, %dec_label_pc_13d60 ]
  %v0_13d6c = load i32, i32* %r7.global-to-local, align 4
  %v1_13d6c = add i32 %v0_13d6c, 8
  %v2_13d6c = inttoptr i32 %v1_13d6c to i32*
  %v3_13d6c = load i32, i32* %v2_13d6c, align 4
  store i32 %v3_13d6c, i32* %r2.global-to-local, align 4
  %v1_13d70 = or i32 %v0_13d70, 1
  store i32 %v1_13d70, i32* %r3.global-to-local, align 4
  %v0_13d74 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_13d74, i32* %v2_13d6c, align 4
  %v0_13d78 = load i32, i32* %r1.global-to-local, align 4
  %v1_13d78 = load i32, i32* %r2.global-to-local, align 4
  %v2_13d78 = add i32 %v1_13d78, 12
  %v3_13d78 = inttoptr i32 %v2_13d78 to i32*
  store i32 %v0_13d78, i32* %v3_13d78, align 4
  %v0_13d7c = load i32, i32* %lr.global-to-local, align 4
  %v1_13d7c = load i32, i32* %r1.global-to-local, align 4
  %v3_13d7c = add i32 %v1_13d7c, %v0_13d7c
  %v4_13d7c = inttoptr i32 %v3_13d7c to i32*
  store i32 %v0_13d7c, i32* %v4_13d7c, align 4
  %v0_13d80 = load i32, i32* %r3.global-to-local, align 4
  %v1_13d80 = load i32, i32* %r1.global-to-local, align 4
  %v2_13d80 = add i32 %v1_13d80, 4
  %v3_13d80 = inttoptr i32 %v2_13d80 to i32*
  store i32 %v0_13d80, i32* %v3_13d80, align 4
  %v0_13d84 = load i32, i32* %r2.global-to-local, align 4
  %v1_13d84 = load i32, i32* %r1.global-to-local, align 4
  %v2_13d84 = add i32 %v1_13d84, 8
  %v3_13d84 = inttoptr i32 %v2_13d84 to i32*
  store i32 %v0_13d84, i32* %v3_13d84, align 4
  %v0_13d88 = load i32, i32* %r7.global-to-local, align 4
  %v1_13d88 = load i32, i32* %r1.global-to-local, align 4
  %v2_13d88 = add i32 %v1_13d88, 12
  %v3_13d88 = inttoptr i32 %v2_13d88 to i32*
  store i32 %v0_13d88, i32* %v3_13d88, align 4
  br label %dec_label_pc_13da0

dec_label_pc_13d90:                               ; preds = %dec_label_pc_13d18
  %v2_13d90 = add i32 %v1_13d20, %v0_13d90
  %v1_13d94 = or i32 %v2_13d90, 1
  store i32 %v1_13d94, i32* %r3.global-to-local, align 4
  %v1_13d98 = load i32, i32* %r1.global-to-local, align 4
  %v2_13d98 = add i32 %v1_13d98, 4
  %v3_13d98 = inttoptr i32 %v2_13d98 to i32*
  store i32 %v1_13d94, i32* %v3_13d98, align 4
  %v0_13d9c = load i32, i32* %r1.global-to-local, align 4
  %v1_13d9c = load i32, i32* @r4, align 4
  %v2_13d9c = add i32 %v1_13d9c, 44
  %v3_13d9c = inttoptr i32 %v2_13d9c to i32*
  store i32 %v0_13d9c, i32* %v3_13d9c, align 4
  br label %dec_label_pc_13da0

dec_label_pc_13da0:                               ; preds = %dec_label_pc_13d6c, %dec_label_pc_13d90
  %v0_13da0 = load i32, i32* %sl.global-to-local, align 4
  %v2_13da0 = icmp eq i32 %v0_13da0, 0
  store i32 %v0_13da0, i32* %r1.global-to-local, align 4
  br i1 %v2_13da0, label %dec_label_pc_13dac.loopexit, label %dec_label_pc_13cc8

dec_label_pc_13dac.loopexit:                      ; preds = %dec_label_pc_13da0
  %v0_13dac.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_13dac.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_13dac

dec_label_pc_13dac:                               ; preds = %dec_label_pc_13dac.loopexit, %dec_label_pc_13cb8
  %v1_13dac = phi i32 [ %v1_13dac.pre, %dec_label_pc_13dac.loopexit ], [ %v1_13dac10, %dec_label_pc_13cb8 ]
  %v0_13db4 = phi i32 [ %v0_13dac.pre, %dec_label_pc_13dac.loopexit ], [ %v1_13cc4, %dec_label_pc_13cb8 ]
  %v9_13dac = icmp eq i32 %v0_13db4, %v1_13dac
  br i1 %v9_13dac, label %dec_label_pc_13e24, label %dec_label_pc_13db4

dec_label_pc_13db4:                               ; preds = %dec_label_pc_13dac
  %v1_13db4 = add i32 %v0_13db4, 4
  store i32 %v1_13db4, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13cb8

dec_label_pc_13dbc.dec_label_pc_13dbc_crit_edge:  ; preds = %dec_label_pc_13dbc.preheader, %dec_label_pc_13dbc.dec_label_pc_13dbc_crit_edge
  %v0_13dbc.pre = load i32, i32* @r4, align 4
  %v1_13dbc.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_13dbc = mul i32 %v1_13dbc.pre, 8
  %v5_13dbc = add i32 %v4_13dbc, %v0_13dbc.pre
  %v1_13dc0 = add i32 %v1_13dbc.pre, 1
  store i32 %v1_13dc0, i32* %r2.global-to-local, align 4
  %v1_13dc4 = add i32 %v5_13dbc, 44
  store i32 %v1_13dc4, i32* %r3.global-to-local, align 4
  %v2_13dcc = add i32 %v5_13dbc, 52
  %v3_13dcc = inttoptr i32 %v2_13dcc to i32*
  store i32 %v1_13dc4, i32* %v3_13dcc, align 4
  %v0_13dd0 = load i32, i32* %r3.global-to-local, align 4
  %v2_13dd0 = add i32 %v0_13dd0, 12
  %v3_13dd0 = inttoptr i32 %v2_13dd0 to i32*
  store i32 %v0_13dd0, i32* %v3_13dd0, align 4
  %v7_13dd4 = icmp sgt i32 %v1_13dc0, 95
  br i1 %v7_13dd4, label %dec_label_pc_13dd8, label %dec_label_pc_13dbc.dec_label_pc_13dbc_crit_edge

dec_label_pc_13dd8:                               ; preds = %dec_label_pc_13dbc.dec_label_pc_13dbc_crit_edge
  %v0_13dd8 = load i32, i32* @r4, align 4
  %v1_13dd8 = inttoptr i32 %v0_13dd8 to i32*
  %v2_13dd8 = load i32, i32* %v1_13dd8, align 4
  store i32 %v2_13dd8, i32* %r2.global-to-local, align 4
  %v1_13ddc = add i32 %v0_13dd8, 864
  %v2_13ddc = inttoptr i32 %v1_13ddc to i32*
  %v3_13ddc = load i32, i32* %v2_13ddc, align 4
  %v1_13de4 = urem i32 %v2_13dd8, 4
  store i32 262144, i32* %r0.global-to-local, align 4
  %v1_13dec = or i32 %v3_13ddc, 1
  store i32 %v1_13dec, i32* %r1.global-to-local, align 4
  %v1_13df0 = or i32 %v1_13de4, 72
  store i32 %v1_13df0, i32* %r2.global-to-local, align 4
  %v1_13df4 = add i32 %v0_13dd8, 52
  store i32 %v1_13df4, i32* %ip.global-to-local, align 4
  %v2_13df8 = add i32 %v0_13dd8, 840
  %v3_13df8 = inttoptr i32 %v2_13df8 to i32*
  store i32 0, i32* %v3_13df8, align 4
  store i32 ptrtoint (i32* @global_var_10000.44 to i32), i32* %r3.global-to-local, align 4
  %v0_13e00 = load i32, i32* %r0.global-to-local, align 4
  %v1_13e00 = load i32, i32* @r4, align 4
  %v2_13e00 = add i32 %v1_13e00, 836
  %v3_13e00 = inttoptr i32 %v2_13e00 to i32*
  store i32 %v0_13e00, i32* %v3_13e00, align 4
  %v0_13e04 = load i32, i32* %r0.global-to-local, align 4
  %v1_13e04 = load i32, i32* @r4, align 4
  %v2_13e04 = add i32 %v1_13e04, 844
  %v3_13e04 = inttoptr i32 %v2_13e04 to i32*
  store i32 %v0_13e04, i32* %v3_13e04, align 4
  %v1_13e08 = load i32, i32* @r4, align 4
  %v2_13e08 = add i32 %v1_13e08, 852
  %v3_13e08 = inttoptr i32 %v2_13e08 to i32*
  store i32 ptrtoint (i32* @global_var_10000.44 to i32), i32* %v3_13e08, align 4
  %v1_13e0c = load i32, i32* @r4, align 4
  %v2_13e0c = add i32 %v1_13e0c, 864
  %v3_13e0c = inttoptr i32 %v2_13e0c to i32*
  store i32 %v1_13dec, i32* %v3_13e0c, align 4
  %v1_13e10 = load i32, i32* @r4, align 4
  %v2_13e10 = inttoptr i32 %v1_13e10 to i32*
  store i32 %v1_13df0, i32* %v2_13e10, align 4
  %v0_13e14 = load i32, i32* %ip.global-to-local, align 4
  %v1_13e14 = load i32, i32* @r4, align 4
  %v2_13e14 = add i32 %v1_13e14, 44
  %v3_13e14 = inttoptr i32 %v2_13e14 to i32*
  store i32 %v0_13e14, i32* %v3_13e14, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v4_13e1c = call i32 @function_14680(i32 30, i32 %v1_13dec, i32 %v1_13df0, i32 ptrtoint (i32* @global_var_10000.44 to i32))
  store i32 %v4_13e1c, i32* @r0, align 4
  %v1_13e20 = load i32, i32* @r4, align 4
  %v2_13e20 = add i32 %v1_13e20, 860
  %v3_13e20 = inttoptr i32 %v2_13e20 to i32*
  store i32 %v4_13e1c, i32* %v3_13e20, align 4
  br label %dec_label_pc_13e24

dec_label_pc_13e24:                               ; preds = %dec_label_pc_13dac, %dec_label_pc_13dd8
  %v2_13e28 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_13e28, i32* @r4, align 4
  %v1_13e2c = load i32, i32* @r0, align 4
  ret i32 %v1_13e2c

; uselistorder directives
  uselistorder i32 %v0_13dd8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_13dd0, { 1, 0 }
  uselistorder i32 %v1_13db4, { 1, 0 }
  uselistorder i32 %v0_13da0, { 0, 2, 1 }
  uselistorder i32 %v0_13d7c, { 1, 0 }
  uselistorder i32 %v1_13ccc, { 1, 0, 2 }
  uselistorder i32 %v0_13ce4, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_13ca4, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 1, 17 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 2, 3, 12 }
  uselistorder i32* %lr.global-to-local, { 3, 0, 4, 2, 1, 5, 6 }
  uselistorder i32 860, { 2, 1, 0, 3 }
  uselistorder i32 30, { 1, 15, 0, 10, 6, 11, 7, 12, 8, 9, 13, 14, 2, 3, 4, 5 }
  uselistorder i32 95, { 0, 1, 3, 4, 5, 6, 2 }
  uselistorder label %dec_label_pc_13e24, { 1, 0 }
  uselistorder label %dec_label_pc_13dbc.dec_label_pc_13dbc_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_13da0, { 1, 0 }
  uselistorder label %dec_label_pc_13d6c, { 1, 0 }
  uselistorder label %dec_label_pc_13d60, { 1, 0 }
  uselistorder label %dec_label_pc_13d5c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_13d18, { 1, 0 }
}

define i32 @function_13e30() local_unnamed_addr {
dec_label_pc_13e30:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_13e30 = load i32, i32* @r4, align 4
  %v6_13e30 = load i32, i32* @r5, align 4
  %v9_13e30 = load i32, i32* @r6, align 4
  %v12_13e30 = load i32, i32* @r7, align 4
  %v18_13e30 = load i32, i32* @lr, align 4
  %v0_13e38 = load i32, i32* @r0, align 4
  store i32 %v0_13e38, i32* @r6, align 4
  %v2_13e38 = icmp eq i32 %v0_13e38, 0
  %v2_13e3c = ptrtoint i32* %stack_var_-40 to i32
  store i32 98320, i32* @r7, align 4
  br i1 %v2_13e38, label %dec_label_pc_14044, label %dec_label_pc_13e48

dec_label_pc_13e48:                               ; preds = %dec_label_pc_13e30
  store i32 68, i32* %r3.global-to-local, align 4
  %v4_13e4c = load i32, i32* inttoptr (i32 98388 to i32*), align 4
  store i32 %v4_13e4c, i32* %r4.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 %v4_13e4c, i32* %r2.global-to-local, align 4
  %v4_13e58 = load i32, i32* inttoptr (i32 98356 to i32*), align 4
  store i32 %v4_13e58, i32* %r1.global-to-local, align 4
  store i32 %v2_13e3c, i32* %r0.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_13e64 = load i32, i32* inttoptr (i32 98392 to i32*), align 8
  store i32 %v4_13e64, i32* %ip.global-to-local, align 4
  store i32 81520, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13e64)
  %v0_13e70 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13e70, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_13e78 = load i32, i32* @r7, align 4
  %v2_13e78 = add i32 %v0_13e78, 16
  %v3_13e78 = inttoptr i32 %v2_13e78 to i32*
  %v4_13e78 = load i32, i32* %v3_13e78, align 4
  store i32 %v4_13e78, i32* %ip.global-to-local, align 4
  store i32 81540, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13e78)
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_13e88 = load i32, i32* @r7, align 4
  %v2_13e88 = add i32 %v0_13e88, 32
  %v3_13e88 = inttoptr i32 %v2_13e88 to i32*
  %v4_13e88 = load i32, i32* %v3_13e88, align 4
  store i32 %v4_13e88, i32* @lr, align 4
  %v0_13e8c = load i32, i32* @r6, align 4
  %v1_13e8c = add i32 %v0_13e8c, -4
  %v2_13e8c = inttoptr i32 %v1_13e8c to i32*
  %v3_13e8c = load i32, i32* %v2_13e8c, align 4
  store i32 %v3_13e8c, i32* %r2.global-to-local, align 4
  %v1_13e90 = inttoptr i32 %v4_13e88 to i32*
  %v2_13e90 = load i32, i32* %v1_13e90, align 4
  store i32 %v2_13e90, i32* %r3.global-to-local, align 4
  %v1_13e94 = and i32 %v3_13e8c, -4
  store i32 %v1_13e94, i32* %ip.global-to-local, align 4
  %v1_13e98 = add i32 %v0_13e8c, -8
  store i32 %v1_13e98, i32* @r5, align 4
  store i32 %v1_13e98, i32* %r4.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_13e94, %v2_13e90
  br i1 %tmp, label %dec_label_pc_13ec8, label %dec_label_pc_13ea8

dec_label_pc_13ea8:                               ; preds = %dec_label_pc_13e48
  %v1_13ea8 = or i32 %v2_13e90, 3
  store i32 %v1_13ea8, i32* %r3.global-to-local, align 4
  store i32 %v1_13ea8, i32* %v1_13e90, align 4
  %v3_13eac = load i32, i32* @lr, align 4
  %v4_13eac = add i32 %v3_13eac, -8
  store i32 %v4_13eac, i32* %lr.global-to-local, align 4
  %v0_13eb0 = load i32, i32* %ip.global-to-local, align 4
  %v3_13eb0 = udiv i32 %v0_13eb0, 8
  store i32 %v3_13eb0, i32* %r1.global-to-local, align 4
  %v1_13eb4 = add i32 %v3_13eac, -4
  store i32 %v1_13eb4, i32* %r2.global-to-local, align 4
  %v4_13eb8 = mul nuw i32 %v3_13eb0, 4
  %v5_13eb8 = add i32 %v4_13eb8, %v1_13eb4
  %v6_13eb8 = inttoptr i32 %v5_13eb8 to i32*
  %v7_13eb8 = load i32, i32* %v6_13eb8, align 4
  store i32 %v7_13eb8, i32* %r3.global-to-local, align 4
  %v1_13ebc = load i32, i32* @r5, align 4
  %v2_13ebc = add i32 %v1_13ebc, 8
  %v3_13ebc = inttoptr i32 %v2_13ebc to i32*
  store i32 %v7_13eb8, i32* %v3_13ebc, align 4
  %v0_13ec0 = load i32, i32* @r5, align 4
  %v1_13ec0 = load i32, i32* %r2.global-to-local, align 4
  %v2_13ec0 = load i32, i32* %r1.global-to-local, align 4
  %v5_13ec0 = mul i32 %v2_13ec0, 4
  %v6_13ec0 = add i32 %v5_13ec0, %v1_13ec0
  %v7_13ec0 = inttoptr i32 %v6_13ec0 to i32*
  store i32 %v0_13ec0, i32* %v7_13ec0, align 4
  br label %dec_label_pc_1402c

dec_label_pc_13ec8:                               ; preds = %dec_label_pc_13e48
  %v1_13ec8 = and i32 %v3_13e8c, 2
  %v2_13ec8 = icmp eq i32 %v1_13ec8, 0
  br i1 %v2_13ec8, label %dec_label_pc_13ed0, label %dec_label_pc_14004

dec_label_pc_13ed0:                               ; preds = %dec_label_pc_13ec8
  %v1_13ed0 = or i32 %v2_13e90, 1
  store i32 %v1_13ed0, i32* %r3.global-to-local, align 4
  store i32 %v1_13ed0, i32* %v1_13e90, align 4
  %v0_13ed8 = load i32, i32* @r6, align 4
  %v1_13ed8 = add i32 %v0_13ed8, -4
  %v2_13ed8 = inttoptr i32 %v1_13ed8 to i32*
  %v3_13ed8 = load i32, i32* %v2_13ed8, align 4
  store i32 %v3_13ed8, i32* %r3.global-to-local, align 4
  %v0_13edc = load i32, i32* @r5, align 4
  %v1_13edc = load i32, i32* %ip.global-to-local, align 4
  %v2_13edc = add i32 %v1_13edc, %v0_13edc
  store i32 %v2_13edc, i32* %lr.global-to-local, align 4
  %v1_13ee0 = urem i32 %v3_13ed8, 2
  %v2_13ee0 = icmp eq i32 %v1_13ee0, 0
  %v1_13ee4 = add i32 %v2_13edc, 4
  %v2_13ee4 = inttoptr i32 %v1_13ee4 to i32*
  %v3_13ee4 = load i32, i32* %v2_13ee4, align 4
  store i32 %v3_13ee4, i32* %r8.global-to-local, align 4
  br i1 %v2_13ee0, label %dec_label_pc_13eec, label %dec_label_pc_13f20

dec_label_pc_13eec:                               ; preds = %dec_label_pc_13ed0
  %v1_13eec = add i32 %v0_13ed8, -8
  %v2_13eec = inttoptr i32 %v1_13eec to i32*
  %v3_13eec = load i32, i32* %v2_13eec, align 4
  store i32 %v3_13eec, i32* %r1.global-to-local, align 4
  %v2_13ef0 = sub i32 %v0_13edc, %v3_13eec
  store i32 %v2_13ef0, i32* %r3.global-to-local, align 4
  %v1_13ef4 = add i32 %v2_13ef0, 8
  %v2_13ef4 = inttoptr i32 %v1_13ef4 to i32*
  %v3_13ef4 = load i32, i32* %v2_13ef4, align 4
  store i32 %v3_13ef4, i32* %r2.global-to-local, align 4
  %v1_13ef8 = add i32 %v3_13ef4, 12
  %v2_13ef8 = inttoptr i32 %v1_13ef8 to i32*
  %v3_13ef8 = load i32, i32* %v2_13ef8, align 4
  store i32 %v3_13ef8, i32* %r4.global-to-local, align 4
  %v9_13efc = icmp eq i32 %v3_13ef8, %v2_13ef0
  %v1_13f00 = add i32 %v2_13ef0, 12
  %v2_13f00 = inttoptr i32 %v1_13f00 to i32*
  %v3_13f00 = load i32, i32* %v2_13f00, align 4
  store i32 %v3_13f00, i32* %r0.global-to-local, align 4
  br i1 %v9_13efc, label %dec_label_pc_13f08, label %dec_label_pc_13f6c

dec_label_pc_13f08:                               ; preds = %dec_label_pc_13eec
  %v1_13f08 = add i32 %v3_13f00, 8
  %v2_13f08 = inttoptr i32 %v1_13f08 to i32*
  %v3_13f08 = load i32, i32* %v2_13f08, align 4
  store i32 %v3_13f08, i32* %r3.global-to-local, align 4
  %v9_13f0c = icmp eq i32 %v3_13f08, %v2_13ef0
  br i1 %v9_13f0c, label %dec_label_pc_13f14, label %dec_label_pc_13f6c

dec_label_pc_13f14:                               ; preds = %dec_label_pc_13f08
  store i32 %v3_13ef4, i32* %v2_13f08, align 4
  %v0_13f18 = load i32, i32* %r0.global-to-local, align 4
  %v1_13f18 = load i32, i32* %r2.global-to-local, align 4
  %v2_13f18 = add i32 %v1_13f18, 12
  %v3_13f18 = inttoptr i32 %v2_13f18 to i32*
  store i32 %v0_13f18, i32* %v3_13f18, align 4
  %v0_13f1c = load i32, i32* %ip.global-to-local, align 4
  %v1_13f1c = load i32, i32* %r1.global-to-local, align 4
  %v2_13f1c = add i32 %v1_13f1c, %v0_13f1c
  store i32 %v2_13f1c, i32* %ip.global-to-local, align 4
  %v0_13f2c.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_13f30.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_13f20

dec_label_pc_13f20:                               ; preds = %dec_label_pc_13ed0, %dec_label_pc_13f14
  %v0_13fac = phi i32 [ %v1_13edc, %dec_label_pc_13ed0 ], [ %v2_13f1c, %dec_label_pc_13f14 ]
  %v0_13f30 = phi i32 [ %v3_13ee4, %dec_label_pc_13ed0 ], [ %v0_13f30.pre, %dec_label_pc_13f14 ]
  %v1_13f44 = phi i32 [ %v2_13edc, %dec_label_pc_13ed0 ], [ %v0_13f2c.pre, %dec_label_pc_13f14 ]
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_13f24 = load i32, i32* @r7, align 4
  %v2_13f24 = add i32 %v0_13f24, 32
  %v3_13f24 = inttoptr i32 %v2_13f24 to i32*
  %v4_13f24 = load i32, i32* %v3_13f24, align 4
  store i32 %v4_13f24, i32* %r2.global-to-local, align 4
  %v1_13f28 = add i32 %v4_13f24, 44
  %v2_13f28 = inttoptr i32 %v1_13f28 to i32*
  %v3_13f28 = load i32, i32* %v2_13f28, align 4
  store i32 %v3_13f28, i32* %r3.global-to-local, align 4
  %v9_13f2c = icmp eq i32 %v1_13f44, %v3_13f28
  %v1_13f30 = and i32 %v0_13f30, -4
  store i32 %v1_13f30, i32* %r0.global-to-local, align 4
  br i1 %v9_13f2c, label %dec_label_pc_13fac, label %dec_label_pc_13f38

dec_label_pc_13f38:                               ; preds = %dec_label_pc_13f20
  %v2_13f38 = add i32 %v1_13f44, %v1_13f30
  store i32 %v2_13f38, i32* %r3.global-to-local, align 4
  %v1_13f3c = add i32 %v2_13f38, 4
  %v2_13f3c = inttoptr i32 %v1_13f3c to i32*
  %v3_13f3c = load i32, i32* %v2_13f3c, align 4
  store i32 %v3_13f3c, i32* %r3.global-to-local, align 4
  %v1_13f40 = urem i32 %v3_13f3c, 2
  %v2_13f40 = icmp eq i32 %v1_13f40, 0
  %v2_13f44 = add i32 %v1_13f44, 4
  %v3_13f44 = inttoptr i32 %v2_13f44 to i32*
  store i32 %v1_13f30, i32* %v3_13f44, align 4
  br i1 %v2_13f40, label %dec_label_pc_13f4c, label %dec_label_pc_13f38.dec_label_pc_13f7c_crit_edge

dec_label_pc_13f38.dec_label_pc_13f7c_crit_edge:  ; preds = %dec_label_pc_13f38
  %v0_13f8c.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13f7c

dec_label_pc_13f4c:                               ; preds = %dec_label_pc_13f38
  %v0_13f4c = load i32, i32* %lr.global-to-local, align 4
  %v1_13f4c = add i32 %v0_13f4c, 8
  %v2_13f4c = inttoptr i32 %v1_13f4c to i32*
  %v3_13f4c = load i32, i32* %v2_13f4c, align 4
  store i32 %v3_13f4c, i32* %r1.global-to-local, align 4
  %v1_13f50 = add i32 %v3_13f4c, 12
  %v2_13f50 = inttoptr i32 %v1_13f50 to i32*
  %v3_13f50 = load i32, i32* %v2_13f50, align 4
  store i32 %v3_13f50, i32* %r3.global-to-local, align 4
  %v9_13f54 = icmp eq i32 %v3_13f50, %v0_13f4c
  %v1_13f58 = add i32 %v0_13f4c, 12
  %v2_13f58 = inttoptr i32 %v1_13f58 to i32*
  %v3_13f58 = load i32, i32* %v2_13f58, align 4
  store i32 %v3_13f58, i32* %r2.global-to-local, align 4
  br i1 %v9_13f54, label %dec_label_pc_13f60, label %dec_label_pc_13f6c

dec_label_pc_13f60:                               ; preds = %dec_label_pc_13f4c
  %v1_13f60 = add i32 %v3_13f58, 8
  %v2_13f60 = inttoptr i32 %v1_13f60 to i32*
  %v3_13f60 = load i32, i32* %v2_13f60, align 4
  store i32 %v3_13f60, i32* %r3.global-to-local, align 4
  %v9_13f64 = icmp eq i32 %v3_13f60, %v0_13f4c
  br i1 %v9_13f64, label %dec_label_pc_13f70, label %dec_label_pc_13f6c

dec_label_pc_13f6c:                               ; preds = %dec_label_pc_13f4c, %dec_label_pc_13f08, %dec_label_pc_13eec, %dec_label_pc_13f60
  %v0_13f6c = call i32 @function_140ac()
  store i32 %v0_13f6c, i32* %r0.global-to-local, align 4
  %v0_13f70.pre = load i32, i32* @r1, align 4
  %v1_13f70.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_13f70

dec_label_pc_13f70:                               ; preds = %dec_label_pc_13f60, %dec_label_pc_13f6c
  %v1_13f70 = phi i32 [ %v3_13f58, %dec_label_pc_13f60 ], [ %v1_13f70.pre, %dec_label_pc_13f6c ]
  %v0_13f70 = phi i32 [ %v3_13f4c, %dec_label_pc_13f60 ], [ %v0_13f70.pre, %dec_label_pc_13f6c ]
  %v2_13f70 = add i32 %v1_13f70, 8
  %v3_13f70 = inttoptr i32 %v2_13f70 to i32*
  store i32 %v0_13f70, i32* %v3_13f70, align 4
  %v0_13f74 = load i32, i32* %r2.global-to-local, align 4
  %v1_13f74 = load i32, i32* %r1.global-to-local, align 4
  %v2_13f74 = add i32 %v1_13f74, 12
  %v3_13f74 = inttoptr i32 %v2_13f74 to i32*
  store i32 %v0_13f74, i32* %v3_13f74, align 4
  %v0_13f78 = load i32, i32* %ip.global-to-local, align 4
  %v1_13f78 = load i32, i32* %r0.global-to-local, align 4
  %v2_13f78 = add i32 %v1_13f78, %v0_13f78
  store i32 %v2_13f78, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13f7c

dec_label_pc_13f7c:                               ; preds = %dec_label_pc_13f38.dec_label_pc_13f7c_crit_edge, %dec_label_pc_13f70
  %v0_13f8c = phi i32 [ %v0_13f8c.pre, %dec_label_pc_13f38.dec_label_pc_13f7c_crit_edge ], [ %v2_13f78, %dec_label_pc_13f70 ]
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_13f80 = load i32, i32* @r7, align 4
  %v2_13f80 = add i32 %v0_13f80, 32
  %v3_13f80 = inttoptr i32 %v2_13f80 to i32*
  %v4_13f80 = load i32, i32* %v3_13f80, align 4
  %v1_13f84 = add i32 %v4_13f80, 52
  store i32 %v1_13f84, i32* %r3.global-to-local, align 4
  %v1_13f88 = add i32 %v4_13f80, 60
  %v2_13f88 = inttoptr i32 %v1_13f88 to i32*
  %v3_13f88 = load i32, i32* %v2_13f88, align 4
  store i32 %v3_13f88, i32* %r1.global-to-local, align 4
  %v1_13f8c = or i32 %v0_13f8c, 1
  store i32 %v1_13f8c, i32* %r2.global-to-local, align 4
  %v1_13f90 = load i32, i32* %r4.global-to-local, align 4
  %v2_13f90 = add i32 %v1_13f90, 12
  %v3_13f90 = inttoptr i32 %v2_13f90 to i32*
  store i32 %v1_13f84, i32* %v3_13f90, align 4
  %v0_13f94 = load i32, i32* %r1.global-to-local, align 4
  %v1_13f94 = load i32, i32* %r4.global-to-local, align 4
  %v2_13f94 = add i32 %v1_13f94, 8
  %v3_13f94 = inttoptr i32 %v2_13f94 to i32*
  store i32 %v0_13f94, i32* %v3_13f94, align 4
  %v0_13f98 = load i32, i32* %r2.global-to-local, align 4
  %v1_13f98 = load i32, i32* %r4.global-to-local, align 4
  %v2_13f98 = add i32 %v1_13f98, 4
  %v3_13f98 = inttoptr i32 %v2_13f98 to i32*
  store i32 %v0_13f98, i32* %v3_13f98, align 4
  %v0_13f9c = load i32, i32* %ip.global-to-local, align 4
  %v1_13f9c = load i32, i32* %r4.global-to-local, align 4
  %v3_13f9c = add i32 %v1_13f9c, %v0_13f9c
  %v4_13f9c = inttoptr i32 %v3_13f9c to i32*
  store i32 %v0_13f9c, i32* %v4_13f9c, align 4
  %v0_13fa0 = load i32, i32* %r4.global-to-local, align 4
  %v1_13fa0 = load i32, i32* %r1.global-to-local, align 4
  %v2_13fa0 = add i32 %v1_13fa0, 12
  %v3_13fa0 = inttoptr i32 %v2_13fa0 to i32*
  store i32 %v0_13fa0, i32* %v3_13fa0, align 4
  %v0_13fa4 = load i32, i32* %r4.global-to-local, align 4
  %v1_13fa4 = load i32, i32* %r3.global-to-local, align 4
  %v2_13fa4 = add i32 %v1_13fa4, 8
  %v3_13fa4 = inttoptr i32 %v2_13fa4 to i32*
  store i32 %v0_13fa4, i32* %v3_13fa4, align 4
  br label %dec_label_pc_13fbc

dec_label_pc_13fac:                               ; preds = %dec_label_pc_13f20
  %v2_13fac = add i32 %v1_13f30, %v0_13fac
  store i32 %v2_13fac, i32* %ip.global-to-local, align 4
  %v1_13fb0 = or i32 %v2_13fac, 1
  store i32 %v1_13fb0, i32* %r3.global-to-local, align 4
  %v0_13fb4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13fb4, i32* %v2_13f28, align 4
  %v0_13fb8 = load i32, i32* %r3.global-to-local, align 4
  %v1_13fb8 = load i32, i32* %r4.global-to-local, align 4
  %v2_13fb8 = add i32 %v1_13fb8, 4
  %v3_13fb8 = inttoptr i32 %v2_13fb8 to i32*
  store i32 %v0_13fb8, i32* %v3_13fb8, align 4
  br label %dec_label_pc_13fbc

dec_label_pc_13fbc:                               ; preds = %dec_label_pc_13f7c, %dec_label_pc_13fac
  %v0_13fbc = load i32, i32* %ip.global-to-local, align 4
  %v3_13fc0 = icmp ult i32 %v0_13fbc, 131070
  br i1 %v3_13fc0, label %dec_label_pc_1402c, label %dec_label_pc_13fc4

dec_label_pc_13fc4:                               ; preds = %dec_label_pc_13fbc
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_13fc8 = load i32, i32* @r7, align 4
  %v2_13fc8 = add i32 %v0_13fc8, 32
  %v3_13fc8 = inttoptr i32 %v2_13fc8 to i32*
  %v4_13fc8 = load i32, i32* %v3_13fc8, align 4
  store i32 %v4_13fc8, i32* @r4, align 4
  %v1_13fcc = inttoptr i32 %v4_13fc8 to i32*
  %v2_13fcc = load i32, i32* %v1_13fcc, align 4
  store i32 %v2_13fcc, i32* %r3.global-to-local, align 4
  %v1_13fd0 = and i32 %v2_13fcc, 2
  %v2_13fd0 = icmp eq i32 %v1_13fd0, 0
  br i1 %v2_13fd0, label %bb15, label %bb

bb:                                               ; preds = %dec_label_pc_13fc4
  store i32 %v4_13fc8, i32* %r0.global-to-local, align 4
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_13fc4, %bb
  store i32 81884, i32* @lr, align 4
  %v1_13fd8 = xor i1 %v2_13fd0, true
  call void @__pseudo_cond_branch(i1 %v1_13fd8, i32 ptrtoint (i32* @global_var_13c7c.401 to i32))
  %v0_13fdc = load i32, i32* @r4, align 4
  %v1_13fdc = add i32 %v0_13fdc, 44
  %v2_13fdc = inttoptr i32 %v1_13fdc to i32*
  %v3_13fdc = load i32, i32* %v2_13fdc, align 4
  store i32 %v3_13fdc, i32* %r3.global-to-local, align 4
  %v1_13fe0 = add i32 %v3_13fdc, 4
  %v2_13fe0 = inttoptr i32 %v1_13fe0 to i32*
  %v3_13fe0 = load i32, i32* %v2_13fe0, align 4
  store i32 %v3_13fe0, i32* %r3.global-to-local, align 4
  %v1_13fe4 = add i32 %v0_13fdc, 836
  %v2_13fe4 = inttoptr i32 %v1_13fe4 to i32*
  %v3_13fe4 = load i32, i32* %v2_13fe4, align 4
  store i32 %v3_13fe4, i32* %r2.global-to-local, align 4
  %v1_13fe8 = and i32 %v3_13fe0, -4
  store i32 %v1_13fe8, i32* %r3.global-to-local, align 4
  %v3_13fec = icmp ult i32 %v1_13fe8, %v3_13fe4
  br i1 %v3_13fec, label %dec_label_pc_1402c, label %dec_label_pc_13ff4

dec_label_pc_13ff4:                               ; preds = %bb15
  store i32 %v0_13fdc, i32* %r1.global-to-local, align 4
  %v1_13ff8 = add i32 %v0_13fdc, 840
  %v2_13ff8 = inttoptr i32 %v1_13ff8 to i32*
  %v3_13ff8 = load i32, i32* %v2_13ff8, align 4
  store i32 %v3_13ff8, i32* %r0.global-to-local, align 4
  %v2_13ffc = call i32 @function_13bcc(i32 %v3_13ff8, i32 %v0_13fdc)
  store i32 %v2_13ffc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1402c

dec_label_pc_14004:                               ; preds = %dec_label_pc_13ec8
  %v2_14004 = inttoptr i32 %v1_13e98 to i32*
  %v3_14004 = load i32, i32* %v2_14004, align 4
  store i32 %v3_14004, i32* %r0.global-to-local, align 4
  %v1_14008 = add i32 %v4_13e88, 848
  %v2_14008 = inttoptr i32 %v1_14008 to i32*
  %v3_14008 = load i32, i32* %v2_14008, align 4
  store i32 %v3_14008, i32* %r2.global-to-local, align 4
  %v1_1400c = add i32 %v4_13e88, 868
  %v2_1400c = inttoptr i32 %v1_1400c to i32*
  %v3_1400c = load i32, i32* %v2_1400c, align 4
  %v2_14010 = add i32 %v3_14004, %v1_13e94
  store i32 %v2_14010, i32* %r1.global-to-local, align 4
  %v1_14014 = add i32 %v3_14008, -1
  store i32 %v1_14014, i32* %r2.global-to-local, align 4
  %v2_14018 = sub i32 %v3_1400c, %v2_14010
  store i32 %v2_14018, i32* %r3.global-to-local, align 4
  store i32 %v2_14018, i32* %v2_1400c, align 4
  %v1_14020 = load i32, i32* @lr, align 4
  %v2_14020 = add i32 %v1_14020, 848
  %v3_14020 = inttoptr i32 %v2_14020 to i32*
  store i32 %v1_14014, i32* %v3_14020, align 4
  %v0_14024 = load i32, i32* %r0.global-to-local, align 4
  %v1_14024 = load i32, i32* @r5, align 4
  %v2_14024 = sub i32 %v1_14024, %v0_14024
  store i32 %v2_14024, i32* %r0.global-to-local, align 4
  %v4_14028 = call i32 @function_15614(i32 %v2_14024, i32 %v2_14010, i32 %v1_14014, i32 %v2_14018)
  store i32 %v4_14028, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1402c

dec_label_pc_1402c:                               ; preds = %bb15, %dec_label_pc_13fbc, %dec_label_pc_13ff4, %dec_label_pc_13ea8, %dec_label_pc_14004
  store i32 %v2_13e3c, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v0_14038 = load i32, i32* @r7, align 4
  %v2_14038 = add i32 %v0_14038, 24
  %v3_14038 = inttoptr i32 %v2_14038 to i32*
  %v4_14038 = load i32, i32* %v3_14038, align 4
  store i32 %v4_14038, i32* @ip, align 4
  store i32 81988, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_14038)
  br label %dec_label_pc_14044

dec_label_pc_14044:                               ; preds = %dec_label_pc_13e30, %dec_label_pc_1402c
  store i32 %v3_13e30, i32* @r4, align 4
  store i32 %v6_13e30, i32* @r5, align 4
  store i32 %v9_13e30, i32* @r6, align 4
  store i32 %v12_13e30, i32* @r7, align 4
  store i32 %v18_13e30, i32* @lr, align 4
  ret i32 %v2_13e3c

; uselistorder directives
  uselistorder i32 %v0_13fdc, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_13f9c, { 1, 0 }
  uselistorder i32 %v1_13edc, { 1, 0 }
  uselistorder i32 %v0_13edc, { 1, 0 }
  uselistorder i32 %v3_13eb0, { 1, 0 }
  uselistorder i32 %v1_13e94, { 1, 0, 2 }
  uselistorder i32 %v2_13e90, { 1, 2, 0, 3 }
  uselistorder i32 %v4_13e88, { 1, 0, 2, 3 }
  uselistorder i32 %v0_13e38, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %r0.global-to-local, { 6, 2, 3, 4, 5, 1, 7, 8, 9, 0, 10, 11, 12, 14, 13 }
  uselistorder i32* %lr.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 4, 0, 5, 1, 6, 3, 2, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 868, { 2, 0, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_14044, { 1, 0 }
  uselistorder label %dec_label_pc_1402c, { 4, 2, 0, 1, 3 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %dec_label_pc_13fbc, { 1, 0 }
  uselistorder label %dec_label_pc_13f7c, { 1, 0 }
  uselistorder label %dec_label_pc_13f70, { 1, 0 }
  uselistorder label %dec_label_pc_13f6c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_13f20, { 1, 0 }
}

define i32 @function_14050(i32 %arg1) local_unnamed_addr {
dec_label_pc_14050:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_14050 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14050, label %bb, label %dec_label_pc_14050..thread5_crit_edge

dec_label_pc_14050..thread5_crit_edge:            ; preds = %dec_label_pc_14050
  %v3_1406c.pre = load i32, i32* @r4, align 4
  %v0_14080.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread5

bb:                                               ; preds = %dec_label_pc_14050
  %v1_14050 = load i32, i32* %r0.global-to-local, align 4
  %v2_14050 = load i32, i32* @r8, align 4
  %v5_14050 = sdiv i32 %v2_14050, 8
  %v6_14050 = and i32 %v5_14050, %v1_14050
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_14050..thread5_crit_edge, %bb
  %v0_14080 = phi i32 [ %v0_14080.pre, %dec_label_pc_14050..thread5_crit_edge ], [ 0, %bb ]
  %v3_1406c = phi i32 [ %v3_1406c.pre, %dec_label_pc_14050..thread5_crit_edge ], [ %v6_14050, %bb ]
  store i32 %v3_1406c, i32* %stack_var_-12, align 4
  %v6_1406c = load i32, i32* @r5, align 4
  %v9_1406c = load i32, i32* @lr, align 4
  %v4_1407c = load i32, i32* inttoptr (i32 98352 to i32*), align 16
  store i32 %v4_1407c, i32* @r5, align 4
  store i32 %v0_14080, i32* @r4, align 4
  store i32 %v4_1407c, i32* @r0, align 4
  %v0_1408c = call i32 @function_13c7c()
  %v0_14090 = load i32, i32* @r4, align 4
  store i32 %v0_14090, i32* %r0.global-to-local, align 4
  %v0_14094 = load i32, i32* @r5, align 4
  %v2_1409c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1409c, i32* @r4, align 4
  store i32 %v6_1406c, i32* @r5, align 4
  store i32 %v9_1406c, i32* @lr, align 4
  %v2_140a0 = call i32 @function_13bcc(i32 %v0_14090, i32 %v0_14094)
  store i32 %v2_140a0, i32* %r0.global-to-local, align 4
  %v0_140a4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_140a4, label %bb14, label %.thread6

bb14:                                             ; preds = %.thread5
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %.thread5, %bb14
  %v4_140a8 = phi i32 [ %v2_140a0, %.thread5 ], [ 0, %bb14 ]
  ret i32 %v4_140a8

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 3, 6, 4, 5, 1, 0, 2 }
  uselistorder i32 (i32, i32)* @function_13bcc, { 1, 0 }
  uselistorder i32 ()* @function_13c7c, { 3, 2, 0, 1 }
  uselistorder i32* inttoptr (i32 98352 to i32*), { 17, 2, 1, 7, 8, 9, 10, 11, 6, 12, 5, 13, 0, 14, 15, 4, 16, 3 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
}

define i32 @function_140ac() local_unnamed_addr {
dec_label_pc_140ac:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  store i32 98320, i32* @r5, align 4
  %v4_140c4 = load i32, i32* inttoptr (i32 98336 to i32*), align 32
  store i32 82128, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_140c4)
  %v2_140e0 = ptrtoint i32* %stack_var_-8 to i32
  store i32 32, i32* %stack_var_-8, align 4
  %v3_140ec = call i32 @function_12364(i32 1, i32 %v2_140e0, i32 0)
  %v0_140f4 = load i32, i32* @r5, align 4
  %v2_140f4 = add i32 %v0_140f4, 660
  %v3_140f4 = inttoptr i32 %v2_140f4 to i32*
  %v4_140f4 = load i32, i32* %v3_140f4, align 4
  %v2_140f8 = icmp eq i32 %v4_140f4, 0
  br i1 %v2_140f8, label %dec_label_pc_14100, label %dec_label_pc_14140

dec_label_pc_14100:                               ; preds = %dec_label_pc_140ac
  store i32 1, i32* %v3_140f4, align 4
  br label %dec_label_pc_14108

dec_label_pc_14108:                               ; preds = %dec_label_pc_14150, %dec_label_pc_14100
  %v0_1410c = load i32, i32* @r5, align 4
  %v2_1410c = add i32 %v0_1410c, 156
  store i32 %v2_1410c, i32* @r4, align 4
  %v2_14118 = add i32 %v0_1410c, 36
  %v3_14118 = inttoptr i32 %v2_14118 to i32*
  %v4_14118 = load i32, i32* %v3_14118, align 4
  call void @__pseudo_branch(i32 %v4_14118)
  %v1_14128 = call i32 @function_12bb4(i32 6)
  %v0_14134 = load i32, i32* @r5, align 4
  %v2_14134 = add i32 %v0_14134, 16
  %v3_14134 = inttoptr i32 %v2_14134 to i32*
  %v4_14134 = load i32, i32* %v3_14134, align 4
  store i32 82240, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_14134)
  %v0_14144.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14140

dec_label_pc_14140:                               ; preds = %dec_label_pc_140ac, %dec_label_pc_14108
  %v1_14158 = phi i32 [ %v0_140f4, %dec_label_pc_140ac ], [ %v0_14144.pre, %dec_label_pc_14108 ]
  %v2_14144 = add i32 %v1_14158, 660
  %v3_14144 = inttoptr i32 %v2_14144 to i32*
  %v4_14144 = load i32, i32* %v3_14144, align 4
  %v7_14148 = icmp eq i32 %v4_14144, 1
  br i1 %v7_14148, label %dec_label_pc_14150, label %dec_label_pc_1418c

dec_label_pc_14150:                               ; preds = %dec_label_pc_14140
  %v2_14150 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_14150, i32* @r4, align 4
  store i32 2, i32* %v3_14144, align 4
  store i32 20, i32* @r2, align 4
  %v2_14168 = bitcast i32* %stack_var_-28 to i8*
  %v3_14168 = call i32 @function_12820(i8* %v2_14168, i32 0)
  %v3_14184 = call i32 @function_15114(i32 6, i32 %v2_14150, i32 0)
  br label %dec_label_pc_14108

dec_label_pc_1418c:                               ; preds = %dec_label_pc_14140
  %v7_1418c = icmp eq i32 %v4_14144, 2
  br i1 %v7_1418c, label %dec_label_pc_14194, label %dec_label_pc_141a0

dec_label_pc_14194:                               ; preds = %dec_label_pc_1418c
  store i32 3, i32* %v3_14144, align 4
  %v0_1419c = call i32 @function_140ac()
  %v0_141a0.pre = load i32, i32* @r5, align 4
  %v1_141a0.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_141a0

dec_label_pc_141a0:                               ; preds = %dec_label_pc_1418c, %dec_label_pc_14194
  %v3_141ac = phi i32 [ 660, %dec_label_pc_1418c ], [ %v1_141a0.pre, %dec_label_pc_14194 ]
  %v2_141ac = phi i32 [ %v1_14158, %dec_label_pc_1418c ], [ %v0_141a0.pre, %dec_label_pc_14194 ]
  %v2_141a0 = add i32 %v2_141ac, %v3_141ac
  %v3_141a0 = inttoptr i32 %v2_141a0 to i32*
  %v4_141a0 = load i32, i32* %v3_141a0, align 4
  %v7_141a4 = icmp eq i32 %v4_141a0, 3
  br i1 %v7_141a4, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_141a0
  store i32 4, i32* %v3_141a0, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_141a0, %bb
  call void @__pseudo_cond_branch(i1 %v7_141a4, i32 ptrtoint (i32* @global_var_15704.410 to i32))
  br label %dec_label_pc_141b8

dec_label_pc_141b8:                               ; preds = %dec_label_pc_141b8, %.thread1
  %v0_141b8 = call i32 @function_140ac()
  br label %dec_label_pc_141b8

; uselistorder directives
  uselistorder i32* %v3_14144, { 1, 0, 2 }
  uselistorder i32 ()* @function_140ac, { 2, 1, 0, 5, 6, 4, 3 }
  uselistorder i32 6, { 14, 15, 78, 3, 33, 34, 16, 29, 17, 30, 18, 31, 19, 32, 1, 27, 35, 28, 36, 20, 37, 0, 4, 38, 39, 21, 40, 5, 41, 42, 43, 22, 44, 6, 45, 46, 47, 23, 48, 49, 50, 24, 51, 52, 53, 54, 7, 55, 56, 57, 58, 8, 59, 60, 61, 62, 63, 25, 64, 9, 65, 66, 67, 68, 69, 70, 26, 71, 10, 72, 73, 74, 75, 11, 76, 12, 13, 2, 77 }
  uselistorder i32 156, { 0, 2, 1 }
  uselistorder i32* inttoptr (i32 98336 to i32*), { 2, 0, 1 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_141a0, { 1, 0 }
  uselistorder label %dec_label_pc_14140, { 1, 0 }
}

define i32 @function_141c0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_141c0:
  %v0_141c0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_141c0, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_141c0
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_141c0, %bb
  %v4_141d0 = phi i32 [ %arg1, %dec_label_pc_141c0 ], [ 0, %bb ]
  ret i32 %v4_141d0

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @function_141d4(i32 %arg1) local_unnamed_addr {
dec_label_pc_141d4:
  store i32 0, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_141e4 = call i32 @function_141f4()
  ret i32 %v0_141e4
}

define i32 @function_141f4() local_unnamed_addr {
dec_label_pc_141f4:
  store i32 1, i32* @r3, align 4
  %v0_14200 = call i32 @function_14210()
  ret i32 %v0_14200
}

define i32 @function_14210() local_unnamed_addr {
dec_label_pc_14210:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %v3_14210 = load i32, i32* @r4, align 4
  %v12_14210 = load i32, i32* @r7, align 4
  store i32 220, i32* @lr, align 4
  store i32 98320, i32* %ip.global-to-local, align 4
  %v0_14224 = load i32, i32* @r1, align 4
  store i32 %v0_14224, i32* %fp.global-to-local, align 4
  %v0_14228 = load i32, i32* @r2, align 4
  store i32 %v0_14228, i32* %r5.global-to-local, align 4
  %v0_1422c = load i32, i32* @r0, align 4
  store i32 %v0_1422c, i32* @r4, align 4
  %v0_14230 = load i32, i32* @r3, align 4
  br label %dec_label_pc_1423c

dec_label_pc_14238:                               ; preds = %dec_label_pc_1423c
  %v1_14238 = add i32 %v0_14274, 1
  store i32 %v1_14238, i32* @r4, align 4
  br label %dec_label_pc_1423c

dec_label_pc_1423c:                               ; preds = %dec_label_pc_14210, %dec_label_pc_14238
  %v0_14274 = phi i32 [ %v0_1422c, %dec_label_pc_14210 ], [ %v1_14238, %dec_label_pc_14238 ]
  %v1_1423c = inttoptr i32 %v0_14274 to i8*
  %v2_1423c = load i8, i8* %v1_1423c, align 1
  %v3_1423c = zext i8 %v2_1423c to i32
  %v4_14240 = load i32, i32* inttoptr (i32 98540 to i32*), align 4
  %v2_14244 = mul nuw nsw i32 %v3_1423c, 2
  %v2_14248 = add i32 %v2_14244, %v4_14240
  %v3_14248 = inttoptr i32 %v2_14248 to i16*
  %v4_14248 = load i16, i16* %v3_14248, align 2
  %v1_1424c = and i16 %v4_14248, 32
  %v2_1424c = icmp eq i16 %v1_1424c, 0
  br i1 %v2_1424c, label %dec_label_pc_14254, label %dec_label_pc_14238

dec_label_pc_14254:                               ; preds = %dec_label_pc_1423c
  %v7_14254 = icmp eq i8 %v2_1423c, 43
  br i1 %v7_14254, label %dec_label_pc_14274, label %dec_label_pc_1425c

dec_label_pc_1425c:                               ; preds = %dec_label_pc_14254
  %v7_1425c = icmp eq i8 %v2_1423c, 45
  br i1 %v7_1425c, label %dec_label_pc_14274, label %bb

bb:                                               ; preds = %dec_label_pc_1425c
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_14278

dec_label_pc_14274:                               ; preds = %dec_label_pc_14254, %dec_label_pc_1425c
  %storemerge39 = phi i32 [ 1, %dec_label_pc_1425c ], [ 0, %dec_label_pc_14254 ]
  store i32 %storemerge39, i32* @r7, align 4
  %v1_14274 = add i32 %v0_14274, 1
  store i32 %v1_14274, i32* @r4, align 4
  br label %dec_label_pc_14278

dec_label_pc_14278:                               ; preds = %bb, %dec_label_pc_14274
  %v0_14298 = phi i32 [ %v0_14274, %bb ], [ %v1_14274, %dec_label_pc_14274 ]
  %v1_14278 = and i32 %v0_14228, -17
  %v3_14278 = icmp eq i32 %v1_14278, 0
  br i1 %v3_14278, label %dec_label_pc_14284, label %bb52

bb52:                                             ; preds = %dec_label_pc_14278
  store i32 %v0_1422c, i32* %r6.global-to-local, align 4
  br label %bb56

dec_label_pc_14284:                               ; preds = %dec_label_pc_14278
  %v1_14284 = inttoptr i32 %v0_14298 to i8*
  %v2_14284 = load i8, i8* %v1_14284, align 1
  %v7_14288 = icmp eq i8 %v2_14284, 48
  %v1_1428c = add i32 %v0_14228, 10
  store i32 %v1_1428c, i32* %r5.global-to-local, align 4
  br i1 %v7_14288, label %dec_label_pc_14298, label %bb53

bb53:                                             ; preds = %dec_label_pc_14284
  store i32 %v0_1422c, i32* %r6.global-to-local, align 4
  br label %.thread8

dec_label_pc_14298:                               ; preds = %dec_label_pc_14284
  %v1_14298 = add i32 %v0_14298, 1
  %v2_14298 = inttoptr i32 %v1_14298 to i8*
  %v3_14298 = load i8, i8* %v2_14298, align 1
  %v4_14298 = zext i8 %v3_14298 to i32
  store i32 %v1_14298, i32* @r4, align 4
  %v1_1429c = or i32 %v4_14298, 32
  %v7_142a0 = icmp eq i32 %v1_1429c, 120
  %v1_142a4 = add i32 %v0_14228, 8
  store i32 %v1_142a4, i32* %r5.global-to-local, align 4
  store i32 %v1_14298, i32* %r6.global-to-local, align 4
  br i1 %v7_142a0, label %bb54, label %.thread8

bb54:                                             ; preds = %dec_label_pc_14298
  %v3_142b0 = mul i32 %v1_142a4, 2
  store i32 %v3_142b0, i32* %r5.global-to-local, align 4
  %v2_142b4 = add i32 %v0_14298, 2
  store i32 %v2_142b4, i32* @r4, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_14298, %bb53, %bb54
  %v0_142b8 = phi i32 [ %v1_1428c, %bb53 ], [ %v3_142b0, %bb54 ], [ %v1_142a4, %dec_label_pc_14298 ]
  %v5_142bc = icmp slt i32 %v0_142b8, 16
  br i1 %v5_142bc, label %bb56, label %bb55

bb55:                                             ; preds = %.thread8
  store i32 16, i32* %r5.global-to-local, align 4
  br label %bb56

bb56:                                             ; preds = %bb52, %.thread8, %bb55
  %v0_142d4 = phi i32 [ %v0_14228, %bb52 ], [ %v0_142b8, %.thread8 ], [ 16, %bb55 ]
  %v1_142c0 = add i32 %v0_142d4, -2
  %tmp = icmp ugt i32 %v1_142c0, 34
  br i1 %tmp, label %.thread, label %dec_label_pc_142d0

.thread:                                          ; preds = %bb56
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1437c

dec_label_pc_142d0:                               ; preds = %bb56
  %v2_142d8 = call i32 @function_11f34(i32 -1, i32 %v0_142d4)
  store i32 -1, i32* @r0, align 4
  %v0_142e4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_142e4, i32* @r1, align 4
  %v1_142e8 = urem i32 %v0_142d4, 256
  store i32 %v1_142e8, i32* %sl.global-to-local, align 4
  %v0_142ec = call i32 @function_11e38()
  store i32 -1, i32* %sb.global-to-local, align 4
  store i32 %v0_142ec, i32* %r8.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_14304.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14304

dec_label_pc_14300:                               ; preds = %bb63, %dec_label_pc_14360
  %v0_14300 = phi i32 [ %v1_1434036, %bb63 ], [ %v0_14300.pre, %dec_label_pc_14360 ]
  store i32 %v0_14300, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14304

dec_label_pc_14304:                               ; preds = %dec_label_pc_142d0, %dec_label_pc_14300
  %v0_14340 = phi i32 [ %v0_14304.pre, %dec_label_pc_142d0 ], [ %v0_14300, %dec_label_pc_14300 ]
  %v1_14304 = inttoptr i32 %v0_14340 to i8*
  %v2_14304 = load i8, i8* %v1_14304, align 1
  %v3_14304 = zext i8 %v2_14304 to i32
  %v1_14308 = add nsw i32 %v3_14304, -48
  %v1_1430c = urem i32 %v1_14308, 256
  %v1_14314 = or i32 %v3_14304, 32
  %tmp71 = icmp ult i32 %v1_1430c, 10
  br i1 %tmp71, label %bb58, label %dec_label_pc_1431c

dec_label_pc_1431c:                               ; preds = %dec_label_pc_14304
  %tmp72 = icmp ugt i32 %v1_14314, 96
  br i1 %tmp72, label %bb57, label %bb58

bb57:                                             ; preds = %dec_label_pc_1431c
  %v1_14320 = add nsw i32 %v1_14314, -87
  %v5_14328 = urem i32 %v1_14320, 256
  br label %bb58

bb58:                                             ; preds = %dec_label_pc_14304, %dec_label_pc_1431c, %bb57
  %v3_14358 = phi i32 [ %v1_1430c, %dec_label_pc_14304 ], [ 40, %dec_label_pc_1431c ], [ %v5_14328, %bb57 ]
  %v1_1432c = load i32, i32* %r5.global-to-local, align 4
  %v6_14330 = icmp slt i32 %v3_14358, %v1_1432c
  br i1 %v6_14330, label %dec_label_pc_14334, label %dec_label_pc_1437c.loopexit

dec_label_pc_14334:                               ; preds = %bb58
  %v0_14334 = load i32, i32* %ip.global-to-local, align 4
  %v1_14334 = load i32, i32* %r8.global-to-local, align 4
  %v9_14334 = icmp eq i32 %v0_14334, %v1_14334
  br i1 %v9_14334, label %.thread31, label %bb59

.thread31:                                        ; preds = %dec_label_pc_14334
  %v1_1434032 = add i32 %v0_14340, 1
  store i32 %v1_1434032, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14348

bb59:                                             ; preds = %dec_label_pc_14334
  %v3_14334 = icmp ult i32 %v0_14334, %v1_14334
  %v1_14340 = add i32 %v0_14340, 1
  store i32 %v1_14340, i32* %r4.global-to-local, align 4
  br i1 %v3_14334, label %dec_label_pc_14348, label %dec_label_pc_14360

dec_label_pc_14348:                               ; preds = %bb59, %.thread31
  %v1_1434036 = phi i32 [ %v1_1434032, %.thread31 ], [ %v1_14340, %bb59 ]
  %v4_143502235 = phi i32 [ 1, %.thread31 ], [ 0, %bb59 ]
  %v1_14348 = load i32, i32* %sl.global-to-local, align 4
  %v3_14348 = icmp uge i32 %v3_14358, %v1_14348
  %v9_14348 = icmp eq i32 %v3_14358, %v1_14348
  %v2_1434c = xor i1 %v3_14348, true
  %v3_1434c = or i1 %v9_14348, %v2_1434c
  br i1 %v3_1434c, label %bb60, label %bb61

bb60:                                             ; preds = %dec_label_pc_14348
  br label %bb61

bb61:                                             ; preds = %dec_label_pc_14348, %bb60
  %v4_14350 = phi i32 [ %v4_143502235, %dec_label_pc_14348 ], [ 0, %bb60 ]
  %v2_14350 = xor i1 %v9_14348, true
  %v3_14350 = and i1 %v3_14348, %v2_14350
  br i1 %v3_14350, label %bb62, label %thread-pre-split

bb62:                                             ; preds = %bb61
  %v5_14350 = urem i32 %v4_14350, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb61, %bb62
  %v0_14354 = phi i32 [ %v5_14350, %bb62 ], [ %v4_14350, %bb61 ]
  %v2_14354 = icmp eq i32 %v0_14354, 0
  br i1 %v2_14354, label %bb63, label %dec_label_pc_14360

bb63:                                             ; preds = %thread-pre-split
  %v4_14358 = mul i32 %v0_14334, %v1_1432c
  %v5_14358 = add i32 %v4_14358, %v3_14358
  store i32 %v5_14358, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14300

dec_label_pc_14360:                               ; preds = %bb59, %thread-pre-split
  %v0_14360 = call i32 @function_127c4()
  %v0_14368 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_14368, i32* %ip.global-to-local, align 4
  %v0_1436c = load i32, i32* @r7, align 4
  %v2_1436c = and i32 %v0_1436c, %v0_14230
  store i32 %v2_1436c, i32* @r7, align 4
  %v2_14374 = inttoptr i32 %v0_14360 to i32*
  store i32 34, i32* %v2_14374, align 4
  %v0_14300.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14300

dec_label_pc_1437c.loopexit:                      ; preds = %bb58
  %v0_1437c.pre = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_1437c

dec_label_pc_1437c:                               ; preds = %.thread, %dec_label_pc_1437c.loopexit
  %v2_14380 = phi i32 [ %v0_1437c.pre, %dec_label_pc_1437c.loopexit ], [ %v0_14224, %.thread ]
  %v2_1437c = icmp eq i32 %v2_14380, 0
  br i1 %v2_1437c, label %bb65, label %bb64

bb64:                                             ; preds = %dec_label_pc_1437c
  %v1_14380 = load i32, i32* %r6.global-to-local, align 4
  %v3_14380 = inttoptr i32 %v2_14380 to i32*
  store i32 %v1_14380, i32* %v3_14380, align 4
  br label %bb65

bb65:                                             ; preds = %dec_label_pc_1437c, %bb64
  %v0_14388 = load i32, i32* @r7, align 4
  %v2_14388 = icmp eq i32 %v0_14388, 0
  %. = select i1 %v2_14388, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r4.global-to-local, align 4
  %v2_14394 = icmp eq i32 %v0_14230, 0
  %v0_143b8.pre.pre = load i32, i32* %ip.global-to-local, align 4
  br i1 %v2_14394, label %dec_label_pc_143b0, label %bb68

bb68:                                             ; preds = %bb65
  %tmp73 = icmp ugt i32 %v0_143b8.pre.pre, %.
  br i1 %tmp73, label %dec_label_pc_143a0, label %dec_label_pc_143b0

dec_label_pc_143a0:                               ; preds = %bb68
  %v0_143a0 = call i32 @function_127c4()
  %v2_143a8 = inttoptr i32 %v0_143a0 to i32*
  store i32 34, i32* %v2_143a8, align 4
  %v0_143ac = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_143ac, i32* %ip.global-to-local, align 4
  %v0_143b0.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_143b0

dec_label_pc_143b0:                               ; preds = %bb68, %bb65, %dec_label_pc_143a0
  %v0_143b8.pre = phi i32 [ %v0_143b8.pre.pre, %bb68 ], [ %v0_143ac, %dec_label_pc_143a0 ], [ %v0_143b8.pre.pre, %bb65 ]
  %v0_143b0 = phi i32 [ %v0_14388, %bb68 ], [ %v0_143b0.pre, %dec_label_pc_143a0 ], [ %v0_14388, %bb65 ]
  %v2_143b0 = icmp eq i32 %v0_143b0, 0
  br i1 %v2_143b0, label %dec_label_pc_143b0._crit_edge, label %bb69

bb69:                                             ; preds = %dec_label_pc_143b0
  %v2_143b4 = sub i32 0, %v0_143b8.pre
  store i32 %v2_143b4, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_143b0._crit_edge

dec_label_pc_143b0._crit_edge:                    ; preds = %dec_label_pc_143b0, %bb69
  %v0_143b8 = phi i32 [ %v2_143b4, %bb69 ], [ %v0_143b8.pre, %dec_label_pc_143b0 ]
  store i32 %v3_14210, i32* @r4, align 4
  store i32 %v12_14210, i32* @r7, align 4
  ret i32 %v0_143b8

; uselistorder directives
  uselistorder i32 %v0_143b8.pre, { 1, 0 }
  uselistorder i32 %v0_143b8.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v4_14350, { 1, 0 }
  uselistorder i1 %v3_14348, { 1, 0 }
  uselistorder i32 %v1_14348, { 1, 0 }
  uselistorder i32 %v1_14314, { 1, 0 }
  uselistorder i32 %v1_1430c, { 1, 0 }
  uselistorder i32 %v0_14340, { 1, 0, 2 }
  uselistorder i32 %v0_14300, { 1, 0 }
  uselistorder i32 %v3_142b0, { 1, 0 }
  uselistorder i32 %v1_142a4, { 1, 0, 2 }
  uselistorder i32 %v0_14274, { 0, 1, 3, 2 }
  uselistorder i32 %v0_14230, { 1, 0 }
  uselistorder i32 %v0_14228, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r5.global-to-local, { 4, 5, 0, 1, 2, 3, 6 }
  uselistorder i32* %r4.global-to-local, { 3, 4, 1, 0, 2 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 7, 8 }
  uselistorder i32 ()* @function_11e38, { 5, 4, 2, 1, 3, 0 }
  uselistorder i32 (i32, i32)* @function_11f34, { 3, 1, 0, 6, 2, 5, 4 }
  uselistorder i32 34, { 1, 2, 0, 4, 8, 3, 9, 6, 5, 7 }
  uselistorder i8 48, { 1, 0, 2 }
  uselistorder i32 -17, { 1, 0 }
  uselistorder i8 45, { 0, 2, 1 }
  uselistorder label %dec_label_pc_143b0._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_143b0, { 2, 0, 1 }
  uselistorder label %bb65, { 1, 0 }
  uselistorder label %dec_label_pc_1437c, { 1, 0 }
  uselistorder label %dec_label_pc_14360, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb61, { 1, 0 }
  uselistorder label %bb58, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14304, { 1, 0 }
  uselistorder label %dec_label_pc_14300, { 1, 0 }
  uselistorder label %bb56, { 2, 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14278, { 1, 0 }
  uselistorder label %dec_label_pc_14274, { 1, 0 }
  uselistorder label %dec_label_pc_1423c, { 1, 0 }
}

define i32 @function_143c8(i64* %arg1) local_unnamed_addr {
dec_label_pc_143c8:
  %tmp = ptrtoint i64* %arg1 to i32
  %v0_143c8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_143c8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_143c8
  %v3_143cc = load i64, i64* %arg1, align 4
  %v4_143cc = load i32, i32* @ip, align 4
  %v6_143cc = udiv i64 %v3_143cc, 4294967296
  %v7_143cc = trunc i64 %v6_143cc to i32
  %v9_143cc = sub i32 %v7_143cc, %v4_143cc
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_143c8, %bb
  %v10_143cc = phi i32 [ %tmp, %dec_label_pc_143c8 ], [ %v9_143cc, %bb ]
  ret i32 %v10_143cc

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_143d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_143d0:
  %stack_var_-16 = alloca i32, align 4
  store i32 98320, i32* @r5, align 4
  %v4_143dc = load i32, i32* inttoptr (i32 98408 to i32*), align 8
  store i32 %v4_143dc, i32* @r4, align 4
  %v2_143e4 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r6, align 4
  %v4_143fc = load i32, i32* inttoptr (i32 98392 to i32*), align 8
  call void @__pseudo_branch(i32 %v4_143fc)
  %v0_14410 = load i32, i32* @r5, align 4
  %v2_14410 = add i32 %v0_14410, 16
  %v3_14410 = inttoptr i32 %v2_14410 to i32*
  %v4_14410 = load i32, i32* %v3_14410, align 4
  call void @__pseudo_branch(i32 %v4_14410)
  %v0_14420 = load i32, i32* @r5, align 4
  %v2_14420 = add i32 %v0_14420, 664
  %v3_14420 = inttoptr i32 %v2_14420 to i32*
  %v4_14420 = load i32, i32* %v3_14420, align 4
  %v2_14424 = icmp eq i32 %v4_14420, 0
  br i1 %v2_14424, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_143d0
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_143d0, %bb
  %v2_14430 = xor i1 %v2_14424, true
  call void @__pseudo_cond_branch(i1 %v2_14430, i32 %v4_14420)
  store i32 %v2_143e4, i32* @r0, align 4
  %v0_14440 = load i32, i32* @r5, align 4
  %v2_14440 = add i32 %v0_14440, 24
  %v3_14440 = inttoptr i32 %v2_14440 to i32*
  %v4_14440 = load i32, i32* %v3_14440, align 4
  call void @__pseudo_branch(i32 %v4_14440)
  %v0_1444c = call i32 @function_14c9c()
  %v0_14454 = load i32, i32* @r5, align 4
  %v2_14454 = add i32 %v0_14454, -7896
  %v9_14454 = icmp eq i32 %v2_14454, 0
  br i1 %v9_14454, label %bb9, label %bb8

bb8:                                              ; preds = %.thread
  br label %bb9

bb9:                                              ; preds = %.thread, %bb8
  %v2_1445c = xor i1 %v9_14454, true
  call void @__pseudo_cond_branch(i1 %v2_1445c, i32 %v2_14454)
  %v0_14460 = load i32, i32* @r6, align 4
  %v1_14464 = call i32 @function_15704(i32 %v0_14460)
  %v0_14468 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14468, label %bb10, label %.thread6

bb10:                                             ; preds = %bb9
  %v2_1446c = load i32, i32* @r8, align 4
  %v2_1447c = load i32, i32* @r2, align 4
  %v3_1447c = mul i32 %v2_1447c, %v2_1446c
  %v8_14480 = shl i32 %v2_1446c, %v3_1447c
  %v9_14480 = and i32 %v8_14480, %v3_1447c
  br label %.thread6

.thread6:                                         ; preds = %bb9, %bb10
  %v10_14480 = phi i32 [ %v1_14464, %bb9 ], [ %v9_14480, %bb10 ]
  ret i32 %v10_14480

; uselistorder directives
  uselistorder i32 %v2_1446c, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_14488(i32 %arg1) local_unnamed_addr {
dec_label_pc_14488:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_14488 = load i32, i32* @r4, align 4
  %v6_14488 = load i32, i32* @lr, align 4
  %v2_1448c = icmp eq i32 %arg1, 0
  store i32 0, i32* @r4, align 4
  br i1 %v2_1448c, label %dec_label_pc_14520, label %dec_label_pc_1449c

dec_label_pc_1449c:                               ; preds = %dec_label_pc_14488
  %v2_144ac = ptrtoint i32* %stack_var_-44 to i32
  store i32 ptrtoint (i32* @global_var_10000.44 to i32), i32* %stack_var_-24, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v3_144c0 = call i32 @function_15114(i32 17, i32 0, i32 %v2_144ac)
  %v3_144c4 = load i32, i32* %stack_var_-44, align 4
  %v7_144c8 = icmp eq i32 %v3_144c4, 1
  br i1 %v7_144c8, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_1449c
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1449c, %bb
  call void @__pseudo_cond_branch(i1 %v7_144c8, i32 ptrtoint (i32* @global_var_12364.422 to i32))
  %v2_144dc = ptrtoint i32* %stack_var_-16 to i32
  %v2_144e4 = call i32 @function_15648(i32 %v2_144dc, i32 %v2_144dc)
  %v2_144e8 = icmp eq i32 %v2_144e4, 0
  br i1 %v2_144e8, label %bb19, label %bb18

bb18:                                             ; preds = %.thread2
  %v3_144fc = load i32, i32* %stack_var_-16, align 4
  br label %bb19

bb19:                                             ; preds = %.thread2, %bb18
  %storemerge = phi i32 [ %v3_144fc, %bb18 ], [ 0, %.thread2 ]
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v3_1450c = load i32, i32* %stack_var_-24, align 4
  %v1_14510 = and i32 %v3_1450c, ptrtoint (i32* @global_var_10000.44 to i32)
  %v2_14510 = icmp eq i32 %v1_14510, 0
  br i1 %v2_14510, label %bb20, label %.thread6

bb20:                                             ; preds = %bb19
  br label %.thread6

.thread6:                                         ; preds = %bb19, %bb20
  call void @__pseudo_cond_branch(i1 %v2_14510, i32 ptrtoint (i32* @global_var_12364.422 to i32))
  %v0_14520.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14520

dec_label_pc_14520:                               ; preds = %dec_label_pc_14488, %.thread6
  %v0_14520 = phi i32 [ %v0_14520.pre, %.thread6 ], [ 0, %dec_label_pc_14488 ]
  store i32 %v3_14488, i32* @r4, align 4
  store i32 %v6_14488, i32* @lr, align 4
  ret i32 %v0_14520

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @function_15114, { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_10000.44 to i32), { 3, 0, 1, 2, 4, 5, 6 }
  uselistorder label %dec_label_pc_14520, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_14534() local_unnamed_addr {
dec_label_pc_14534:
  %stack_var_-36 = alloca i32, align 4
  store i32 98320, i32* @r4, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_179b4.426 to i32), i32* @r0, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v2_14554 = call i32 @function_15b78(i32 ptrtoint ([11 x i8]* @global_var_179b4.426 to i32))
  store i32 %v2_14554, i32* @r6, align 4
  %v2_14558 = icmp eq i32 %v2_14554, 0
  br i1 %v2_14558, label %dec_label_pc_145d8, label %dec_label_pc_14560

dec_label_pc_14560:                               ; preds = %dec_label_pc_14534
  store i32 220, i32* @sl, align 4
  store i32 ptrtoint (i32* @global_var_17730.429 to i32), i32* @r8, align 4
  %v2_1456c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_1456c, i32* @r7, align 4
  br label %bb18

dec_label_pc_14574:                               ; preds = %bb18
  %v3_14574 = load i32, i32* %stack_var_-36, align 4
  %v1_14578 = inttoptr i32 %v3_14574 to i32*
  %v2_14578 = load i32, i32* %v1_14578, align 4
  %v1_1457c = inttoptr i32 %v2_14578 to i8*
  %v2_1457c = load i8, i8* %v1_1457c, align 1
  %v7_14580 = icmp eq i8 %v2_1457c, 99
  br i1 %v7_14580, label %dec_label_pc_14588, label %.backedge3

dec_label_pc_14588:                               ; preds = %dec_label_pc_14574
  %v1_14588 = add i32 %v2_14578, 1
  %v2_14588 = inttoptr i32 %v1_14588 to i8*
  %v3_14588 = load i8, i8* %v2_14588, align 1
  %v7_1458c = icmp eq i8 %v3_14588, 112
  br i1 %v7_1458c, label %dec_label_pc_14594, label %.backedge3

dec_label_pc_14594:                               ; preds = %dec_label_pc_14588
  %v1_14594 = add i32 %v2_14578, 2
  %v2_14594 = inttoptr i32 %v1_14594 to i8*
  %v3_14594 = load i8, i8* %v2_14594, align 1
  %v7_14598 = icmp eq i8 %v3_14594, 117
  br i1 %v7_14598, label %dec_label_pc_145a0, label %.backedge3

dec_label_pc_145a0:                               ; preds = %dec_label_pc_14594
  %v1_145a0 = add i32 %v2_14578, 3
  %v2_145a0 = inttoptr i32 %v1_145a0 to i8*
  %v3_145a0 = load i8, i8* %v2_145a0, align 1
  %v4_145a0 = zext i8 %v3_145a0 to i32
  %v0_145a4 = load i32, i32* @r4, align 4
  %v1_145a4 = load i32, i32* @sl, align 4
  %v2_145a4 = add i32 %v1_145a4, %v0_145a4
  %v3_145a4 = inttoptr i32 %v2_145a4 to i32*
  %v4_145a4 = load i32, i32* %v3_145a4, align 4
  %v2_145a8 = mul nuw nsw i32 %v4_145a0, 2
  %v2_145ac = add i32 %v4_145a4, %v2_145a8
  %v3_145ac = inttoptr i32 %v2_145ac to i16*
  %v4_145ac = load i16, i16* %v3_145ac, align 2
  %v1_145b0 = and i16 %v4_145ac, 8
  %v2_145b0 = icmp eq i16 %v1_145b0, 0
  br i1 %v2_145b0, label %.backedge3, label %bb

bb:                                               ; preds = %dec_label_pc_145a0
  %v1_145b4 = load i32, i32* @r5, align 4
  %v2_145b4 = add i32 %v1_145b4, 1
  store i32 %v2_145b4, i32* @r5, align 4
  br label %.backedge3

.backedge3:                                       ; preds = %bb, %dec_label_pc_145a0, %dec_label_pc_14574, %dec_label_pc_14588, %dec_label_pc_14594
  %v0_145b8.pre = load i32, i32* @r6, align 4
  %v0_145c4.pre = load i32, i32* @r8, align 4
  br label %bb18

bb18:                                             ; preds = %.backedge3, %dec_label_pc_14560
  %v0_145c4 = phi i32 [ %v0_145c4.pre, %.backedge3 ], [ ptrtoint (i32* @global_var_17730.429 to i32), %dec_label_pc_14560 ]
  %v0_145b8 = phi i32 [ %v0_145b8.pre, %.backedge3 ], [ %v2_14554, %dec_label_pc_14560 ]
  %v4_145c8 = inttoptr i32 %v0_145b8 to i32*
  %v5_145c8 = call i32 @function_1581c(i32* %v4_145c8, i32 %v2_1456c, i32 258, i32 %v0_145c4)
  %v2_145cc = icmp eq i32 %v5_145c8, 0
  br i1 %v2_145cc, label %dec_label_pc_1463c, label %dec_label_pc_14574

dec_label_pc_145d8:                               ; preds = %dec_label_pc_14534
  store i32 ptrtoint ([14 x i8]* @global_var_179c0.432 to i32), i32* @r0, align 4
  %v2_145e0 = call i32 @function_15b78(i32 ptrtoint ([14 x i8]* @global_var_179c0.432 to i32))
  store i32 %v2_145e0, i32* @r6, align 4
  %v2_145e4 = icmp eq i32 %v2_145e0, 0
  br i1 %v2_145e4, label %bb19, label %dec_label_pc_145f0

bb19:                                             ; preds = %dec_label_pc_145d8
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_1463c

dec_label_pc_145f0:                               ; preds = %dec_label_pc_145d8
  store i32 ptrtoint ([10 x i8]* @global_var_179d0.434 to i32), i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_179f4.436 to i32), i32* @r7, align 4
  %v2_14600 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_14600, i32* @r4, align 4
  br label %bb21

dec_label_pc_14608:                               ; preds = %bb21
  %v0_14634 = load i32, i32* @r8, align 4
  %v1_14634 = inttoptr i32 %v0_14634 to i8*
  %v3_14608 = load i32, i32* %stack_var_-36, align 4
  %v1_1460c = inttoptr i32 %v3_14608 to i32*
  %v2_1460c = load i32, i32* %v1_1460c, align 4
  store i32 %v2_1460c, i32* @r1, align 4
  %v4_14610 = call i32 @function_16e30(i8* %v1_14634, i32 %v2_1460c)
  %v2_14614 = icmp eq i32 %v4_14610, 0
  br i1 %v2_14614, label %bb20, label %.backedge

bb20:                                             ; preds = %dec_label_pc_14608
  %v1_14618 = load i32, i32* @r5, align 4
  %v2_14618 = add i32 %v1_14618, 1
  store i32 %v2_14618, i32* @r5, align 4
  br label %.backedge

.backedge:                                        ; preds = %bb20, %dec_label_pc_14608
  %v0_14624.pre = load i32, i32* @r7, align 4
  %v0_14628.pre = load i32, i32* @r6, align 4
  br label %bb21

bb21:                                             ; preds = %.backedge, %dec_label_pc_145f0
  %v0_14628 = phi i32 [ %v0_14628.pre, %.backedge ], [ %v2_145e0, %dec_label_pc_145f0 ]
  %v0_14624 = phi i32 [ %v0_14624.pre, %.backedge ], [ ptrtoint (i32* @global_var_179f4.436 to i32), %dec_label_pc_145f0 ]
  %v4_1462c = inttoptr i32 %v0_14628 to i32*
  %v5_1462c = call i32 @function_1581c(i32* %v4_1462c, i32 %v2_14600, i32 459266, i32 %v0_14624)
  %v2_14630 = icmp eq i32 %v5_1462c, 0
  br i1 %v2_14630, label %dec_label_pc_1463c, label %dec_label_pc_14608

dec_label_pc_1463c:                               ; preds = %bb18, %bb21, %bb19
  %v0_1463c = load i32, i32* @r6, align 4
  %v1_14640 = inttoptr i32 %v0_1463c to i32*
  %v2_14640 = call i32 @function_15b44(i32* %v1_14640)
  %v0_14644 = load i32, i32* @r5, align 4
  %v2_14644 = icmp eq i32 %v0_14644, 0
  %.v0_14644 = select i1 %v2_14644, i32 1, i32 %v0_14644
  ret i32 %.v0_14644

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 0, 3, 1, 4, 2 }
  uselistorder i32 220, { 0, 1, 3, 2 }
  uselistorder i32 (i32)* @function_15b78, { 1, 0 }
  uselistorder label %dec_label_pc_1463c, { 1, 2, 0 }
  uselistorder label %.backedge3, { 0, 1, 4, 3, 2 }
}

define i32 @function_14680(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14680:
  %r2.global-to-local = alloca i32, align 4
  %tmp = icmp ult i32 %arg1, 241
  br i1 %tmp, label %bb, label %dec_label_pc_14a68

bb:                                               ; preds = %dec_label_pc_14680
  %v7_14694 = mul i32 %arg1, 4
  %v8_14694 = add i32 %v7_14694, ptrtoint (i32* @global_var_1469c.439 to i32)
  call void @__pseudo_branch(i32 %v8_14694)
  br label %dec_label_pc_14a68

dec_label_pc_14a68:                               ; preds = %bb, %dec_label_pc_14680
  %v0_14a68 = call i32 @function_127c4()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_14a74 = inttoptr i32 %v0_14a68 to i32*
  store i32 22, i32* %v2_14a74, align 4
  %v0_14c24 = load i32, i32* %r2.global-to-local, align 4
  ret i32 %v0_14c24

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_14c9c() local_unnamed_addr {
dec_label_pc_14cc0.lr.ph:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_14c9c = load i32, i32* @r4, align 4
  store i32 %v3_14c9c, i32* %stack_var_-16, align 4
  store i32 98320, i32* %r5.global-to-local, align 4
  store i32 98312, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14cc0

dec_label_pc_14cc0:                               ; preds = %dec_label_pc_14cc0.dec_label_pc_14cc0_crit_edge, %dec_label_pc_14cc0.lr.ph
  %v1_14cc0 = phi i32 [ %v1_14ccc, %dec_label_pc_14cc0.dec_label_pc_14cc0_crit_edge ], [ 0, %dec_label_pc_14cc0.lr.ph ]
  %v0_14cc0 = phi i32 [ %v0_14cc0.pre, %dec_label_pc_14cc0.dec_label_pc_14cc0_crit_edge ], [ 98312, %dec_label_pc_14cc0.lr.ph ]
  %v4_14cc0 = mul i32 %v1_14cc0, 4
  %v5_14cc0 = add i32 %v4_14cc0, %v0_14cc0
  %v6_14cc0 = inttoptr i32 %v5_14cc0 to i32*
  %v7_14cc0 = load i32, i32* %v6_14cc0, align 4
  call void @__pseudo_branch(i32 %v7_14cc0)
  %v0_14ccc = load i32, i32* %r4.global-to-local, align 4
  %v1_14ccc = add i32 %v0_14ccc, -1
  store i32 %v1_14ccc, i32* %r4.global-to-local, align 4
  %v2_14ccc = icmp eq i32 %v0_14ccc, 0
  br i1 %v2_14ccc, label %dec_label_pc_14cd4, label %dec_label_pc_14cc0.dec_label_pc_14cc0_crit_edge

dec_label_pc_14cc0.dec_label_pc_14cc0_crit_edge:  ; preds = %dec_label_pc_14cc0
  %v0_14cc0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14cc0

dec_label_pc_14cd4:                               ; preds = %dec_label_pc_14cc0
  %v0_14cd8.pre = load i32, i32* %r5.global-to-local, align 4
  %phitmp = add i32 %v0_14cd8.pre, 680
  %phitmp13 = inttoptr i32 %phitmp to i32*
  %v4_14cd8 = load i32, i32* %phitmp13, align 4
  %v2_14cdc = icmp eq i32 %v4_14cd8, 0
  br i1 %v2_14cdc, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_14cd4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_14cd4, %bb
  %v2_14ce4 = xor i1 %v2_14cdc, true
  call void @__pseudo_cond_branch(i1 %v2_14ce4, i32 %v4_14cd8)
  %v0_14cec = load i32, i32* %r5.global-to-local, align 4
  %v2_14cec = add i32 %v0_14cec, 684
  %v3_14cec = inttoptr i32 %v2_14cec to i32*
  %v4_14cec = load i32, i32* %v3_14cec, align 4
  %v2_14cf0 = icmp eq i32 %v4_14cec, 0
  br i1 %v2_14cf0, label %bb20, label %bb19

bb19:                                             ; preds = %bb18
  br label %bb20

bb20:                                             ; preds = %bb18, %bb19
  %v2_14cf8 = xor i1 %v2_14cf0, true
  call void @__pseudo_cond_branch(i1 %v2_14cf8, i32 %v4_14cec)
  %v2_14cfc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14cfc, i32* %r4.global-to-local, align 4
  %v1_14d00 = load i32, i32* @r0, align 4
  ret i32 %v1_14d00

; uselistorder directives
  uselistorder i32 %v1_14ccc, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
}

define i32 @function_14d18(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14d18:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v2_14d2c = call i32 @function_121d0(i32 %arg1, i32 1)
  %v3_14d34 = icmp eq i32 %v2_14d2c, -1
  store i32 98320, i32* @r3, align 4
  br i1 %v3_14d34, label %dec_label_pc_14d40, label %dec_label_pc_14d58

dec_label_pc_14d40:                               ; preds = %dec_label_pc_14d18
  %v0_14d44 = load i32, i32* %r5.global-to-local, align 4
  %v3_14d4c = call i32 @function_11fa8(i32 ptrtoint ([10 x i8]* @global_var_179f8.455 to i32), i32 %v0_14d44)
  %v1_14d50 = load i32, i32* %r4.global-to-local, align 4
  %v1_14d54 = icmp ne i32 %v3_14d4c, %v1_14d50
  call void @__pseudo_cond_branch(i1 %v1_14d54, i32 ptrtoint (i32* @global_var_140ac.456 to i32))
  br label %dec_label_pc_14d58

dec_label_pc_14d58:                               ; preds = %dec_label_pc_14d18, %dec_label_pc_14d40
  %v1_14d60 = phi i32 [ %v2_14d2c, %dec_label_pc_14d18 ], [ %v3_14d4c, %dec_label_pc_14d40 ]
  ret i32 %v1_14d60

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_14d58, { 1, 0 }
}

define i32 @function_14d6c(i32 %arg1) local_unnamed_addr {
dec_label_pc_14d6c:
  %r4.global-to-local = alloca i32, align 4
  store i32 98320, i32* %r4.global-to-local, align 4
  %v4_14d7c = load i32, i32* inttoptr (i32 98412 to i32*), align 4
  %v1_14d80 = inttoptr i32 %v4_14d7c to i32*
  %v2_14d80 = load i32, i32* %v1_14d80, align 4
  %v2_14d84 = icmp eq i32 %v2_14d80, 0
  br i1 %v2_14d84, label %dec_label_pc_14d8c, label %dec_label_pc_14dc0

dec_label_pc_14d8c:                               ; preds = %dec_label_pc_14d6c
  %v4_14d90 = load i32, i32* inttoptr (i32 98372 to i32*), align 4
  %v2_14d98 = icmp eq i32 %v4_14d90, 0
  store i32 4096, i32* %v1_14d80, align 4
  br i1 %v2_14d98, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_14d8c
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_14d8c, %bb
  %v2_14da4 = xor i1 %v2_14d98, true
  call void @__pseudo_cond_branch(i1 %v2_14da4, i32 %v4_14d90)
  %v0_14dac = load i32, i32* %r4.global-to-local, align 4
  %v2_14db4 = icmp eq i32 %v0_14dac, 8052
  br i1 %v2_14db4, label %bb6, label %bb5

bb5:                                              ; preds = %bb4
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %v2_14dbc = xor i1 %v2_14db4, true
  call void @__pseudo_cond_branch(i1 %v2_14dbc, i32 ptrtoint (i32* @global_var_1609c.461 to i32))
  br label %dec_label_pc_14dc0

dec_label_pc_14dc0:                               ; preds = %dec_label_pc_14d6c, %bb6
  %v1_14dc4 = load i32, i32* @r0, align 4
  ret i32 %v1_14dc4

; uselistorder directives
  uselistorder i1 %v2_14db4, { 1, 0 }
  uselistorder label %dec_label_pc_14dc0, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_14dd8(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_14dd8:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %tmp50 = call i32 @__decompiler_undefined_function_0()
  %tmp51 = call i32 @__decompiler_undefined_function_0()
  %tmp52 = call i32 @__decompiler_undefined_function_0()
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %tmp54 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  store i32 %tmp, i32* @r7, align 4
  %v1_14de0 = add i32 %tmp, 4
  store i32 %v1_14de0, i32* %ip.global-to-local, align 4
  %v2_14de4 = load i32, i32* %arg3, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  store i32 98320, i32* @r6, align 4
  %v3_14df0 = mul i32 %arg2, 4
  store i32 %v3_14df0, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  %v4_14df8 = load i32, i32* inttoptr (i32 98340 to i32*), align 4
  store i32 28, i32* %r2.global-to-local, align 4
  %v2_14e00 = ptrtoint i32* %stack_var_-120 to i32
  %v4_14e04 = load i32, i32* inttoptr (i32 98348 to i32*), align 4
  store i32 %v4_14e04, i32* %r4.global-to-local, align 4
  %v2_14e0c = add i32 %v1_14de0, %v3_14df0
  store i32 %v2_14e0c, i32* %ip.global-to-local, align 4
  %v9_14e10 = icmp eq i32 %v2_14e0c, %v2_14de4
  store i1 %v9_14e10, i1* %cpsr_z.global-to-local, align 1
  %v2_14e14 = inttoptr i32 %v4_14df8 to i32*
  store i32 %arg7, i32* %v2_14e14, align 4
  store i32 684, i32* %r2.global-to-local, align 4
  %v0_14e20 = load i32, i32* %r3.global-to-local, align 4
  br i1 %v9_14e10, label %bb, label %.critedge

bb:                                               ; preds = %dec_label_pc_14dd8
  %v1_14e24 = load i32, i32* @r7, align 4
  %v2_14e24 = load i32, i32* %r5.global-to-local, align 4
  %v3_14e24 = add i32 %v2_14e24, %v1_14e24
  store i32 %v3_14e24, i32* %r3.global-to-local, align 4
  store i32 %arg6, i32* @global_var_182bc.466, align 4
  %v0_14e2c = load i32, i32* %ip.global-to-local, align 4
  %v1_14e2c = load i32, i32* %r4.global-to-local, align 4
  %v2_14e2c = inttoptr i32 %v1_14e2c to i32*
  store i32 %v0_14e2c, i32* %v2_14e2c, align 4
  store i32 120, i32* @r2, align 4
  %v1_14e38 = load i32, i32* %r3.global-to-local, align 4
  %v2_14e38 = load i32, i32* %r4.global-to-local, align 4
  %v3_14e38 = inttoptr i32 %v2_14e38 to i32*
  store i32 %v1_14e38, i32* %v3_14e38, align 4
  br label %bb58

.critedge:                                        ; preds = %dec_label_pc_14dd8
  store i32 %arg6, i32* @global_var_182bc.466, align 4
  %v0_14e2c.c = load i32, i32* %ip.global-to-local, align 4
  %v1_14e2c.c = load i32, i32* %r4.global-to-local, align 4
  %v2_14e2c.c = inttoptr i32 %v1_14e2c.c to i32*
  store i32 %v0_14e2c.c, i32* %v2_14e2c.c, align 4
  store i32 120, i32* @r2, align 4
  br label %bb58

bb58:                                             ; preds = %.critedge, %bb
  %v2_14e44 = bitcast i32* %stack_var_-120 to i8*
  %v3_14e44 = call i32 @function_12820(i8* %v2_14e44, i32 0)
  %v0_14e48 = load i32, i32* %r4.global-to-local, align 4
  %v1_14e48 = inttoptr i32 %v0_14e48 to i32*
  %storemerge.pre = load i32, i32* %v1_14e48, align 4
  br label %dec_label_pc_14e54

dec_label_pc_14e54:                               ; preds = %dec_label_pc_14e54, %bb58
  %storemerge = phi i32 [ %storemerge.pre, %bb58 ], [ %v4_14e54, %dec_label_pc_14e54 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_14e54 = inttoptr i32 %storemerge to i32*
  %v2_14e54 = load i32, i32* %v1_14e54, align 4
  store i32 %v2_14e54, i32* %r3.global-to-local, align 4
  %v4_14e54 = add i32 %storemerge, 4
  store i32 %v4_14e54, i32* %r2.global-to-local, align 4
  %v2_14e58 = icmp eq i32 %v2_14e54, 0
  br i1 %v2_14e58, label %dec_label_pc_14e64, label %dec_label_pc_14e54

dec_label_pc_14e64:                               ; preds = %dec_label_pc_14e54
  store i32 %v4_14e54, i32* @r4, align 4
  store i32 %v2_14e00, i32* @r5, align 4
  %v1_14e8829 = inttoptr i32 %v4_14e54 to i32*
  %v2_14e8830 = load i32, i32* %v1_14e8829, align 4
  store i32 %v2_14e8830, i32* %r3.global-to-local, align 4
  %v2_14e8c32 = icmp eq i32 %v2_14e8830, 0
  store i1 %v2_14e8c32, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14e8c32, label %dec_label_pc_14e94, label %dec_label_pc_14e70

dec_label_pc_14e70:                               ; preds = %dec_label_pc_14e64, %dec_label_pc_14e88
  %v5_14e74 = phi i32 [ %v2_14e88, %dec_label_pc_14e88 ], [ %v2_14e8830, %dec_label_pc_14e64 ]
  %v2_14e70 = icmp ugt i32 %v5_14e74, 13
  %v7_14e70 = icmp eq i32 %v5_14e74, 14
  store i1 %v7_14e70, i1* %cpsr_z.global-to-local, align 1
  %v2_14e74 = xor i1 %v2_14e70, true
  %v3_14e74 = or i1 %v7_14e70, %v2_14e74
  br i1 %v3_14e74, label %bb59, label %bb60

bb59:                                             ; preds = %dec_label_pc_14e70
  %v6_14e74 = and i32 %v5_14e74, 536870912
  %v7_14e74 = icmp ne i32 %v6_14e74, 0
  br label %bb60

bb60:                                             ; preds = %dec_label_pc_14e70, %bb59
  %v1_14e80 = phi i1 [ %v2_14e70, %dec_label_pc_14e70 ], [ %v7_14e74, %bb59 ]
  %v2_14e78 = xor i1 %v1_14e80, true
  %v3_14e78 = or i1 %v7_14e70, %v2_14e78
  br i1 %v3_14e78, label %bb61, label %dec_label_pc_14e88

bb61:                                             ; preds = %bb60
  store i32 8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14e88

dec_label_pc_14e88:                               ; preds = %bb60, %bb61
  call void @__pseudo_cond_branch(i1 %v3_14e78, i32 ptrtoint (i32* @global_var_128d0.467 to i32))
  %v0_14e84 = load i32, i32* @r4, align 4
  %v1_14e84 = add i32 %v0_14e84, 8
  store i32 %v1_14e84, i32* @r4, align 4
  %v1_14e88 = inttoptr i32 %v1_14e84 to i32*
  %v2_14e88 = load i32, i32* %v1_14e88, align 4
  store i32 %v2_14e88, i32* %r3.global-to-local, align 4
  %v2_14e8c = icmp eq i32 %v2_14e88, 0
  store i1 %v2_14e8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14e8c, label %dec_label_pc_14e94, label %dec_label_pc_14e70

dec_label_pc_14e94:                               ; preds = %dec_label_pc_14e88, %dec_label_pc_14e64
  %v1_14e98 = call i32 @function_172a4(i32 %v2_14e00)
  store i32 %v1_14e98, i32* @r0, align 4
  %v1_14e9c = call i32 @function_14d6c(i32 %v1_14e98)
  store i32 %v1_14e9c, i32* @r0, align 4
  store i32 92, i32* %r3.global-to-local, align 4
  store i32 %tmp54, i32* @r2, align 4
  %v0_14ea8 = load i32, i32* @r6, align 4
  %v2_14ea8 = add i32 %v0_14ea8, 92
  %v3_14ea8 = inttoptr i32 %v2_14ea8 to i32*
  %v4_14ea8 = load i32, i32* %v3_14ea8, align 4
  store i32 %tmp53, i32* @r3, align 4
  %v2_14eb0 = icmp eq i32 %tmp54, 0
  store i1 %v2_14eb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14eb0, label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_14e94
  store i32 4096, i32* @r2, align 4
  br label %bb63

bb63:                                             ; preds = %dec_label_pc_14e94, %bb62
  %v0_14ebc = phi i32 [ %tmp54, %dec_label_pc_14e94 ], [ 4096, %bb62 ]
  %v3_14eb8 = icmp eq i32 %tmp53, -1
  %v8_14eb8 = icmp eq i32 %tmp53, -1
  store i1 %v8_14eb8, i1* %cpsr_z.global-to-local, align 1
  %v2_14ebc = inttoptr i32 %v4_14ea8 to i32*
  store i32 %v0_14ebc, i32* %v2_14ebc, align 4
  br i1 %v3_14eb8, label %dec_label_pc_14ec4, label %dec_label_pc_14eec

dec_label_pc_14ec4:                               ; preds = %bb63
  %v0_14ec4 = call i32 @function_151dc()
  store i32 %v0_14ec4, i32* @r0, align 4
  store i32 %v0_14ec4, i32* @r4, align 4
  %v0_14ecc = call i32 @function_15238()
  store i32 %v0_14ecc, i32* @r0, align 4
  %v0_14ed0 = load i32, i32* @r4, align 4
  %v9_14ed0 = icmp eq i32 %v0_14ed0, %v0_14ecc
  store i1 %v9_14ed0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_14ed0, label %dec_label_pc_14ed8, label %dec_label_pc_14f14

dec_label_pc_14ed8:                               ; preds = %dec_label_pc_14ec4
  %v1_14ed8 = call i32 @function_153a4(i32 %v0_14ecc)
  store i32 %v1_14ed8, i32* @r0, align 4
  store i32 %v1_14ed8, i32* @r4, align 4
  %v0_14ee0 = call i32 @function_15224()
  store i32 %v0_14ee0, i32* @r0, align 4
  %v0_14ee4 = load i32, i32* @r4, align 4
  %v9_14ee4 = icmp eq i32 %v0_14ee4, %v0_14ee0
  store i1 %v9_14ee4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_14ee4, label %dec_label_pc_14eec, label %dec_label_pc_14f14

dec_label_pc_14eec:                               ; preds = %dec_label_pc_14ed8, %bb63
  store i32 %tmp53, i32* @r2, align 4
  store i1 %v8_14eb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_14eb8, label %dec_label_pc_14f38, label %dec_label_pc_14ef8

dec_label_pc_14ef8:                               ; preds = %dec_label_pc_14eec
  store i32 %tmp52, i32* @r3, align 4
  %v9_14efc = icmp eq i32 %tmp53, %tmp52
  store i1 %v9_14efc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_14efc, label %dec_label_pc_14f04, label %dec_label_pc_14f14

dec_label_pc_14f04:                               ; preds = %dec_label_pc_14ef8
  store i32 %tmp51, i32* @r2, align 4
  store i32 %tmp50, i32* @r3, align 4
  %v9_14f0c = icmp eq i32 %tmp51, %tmp50
  store i1 %v9_14f0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_14f0c, label %dec_label_pc_14f38, label %dec_label_pc_14f14

dec_label_pc_14f14:                               ; preds = %dec_label_pc_14ef8, %dec_label_pc_14ed8, %dec_label_pc_14ec4, %dec_label_pc_14f04
  %v2_14f1c = call i32 @function_14d18(i32 0, i32 32768)
  %v2_14f28 = call i32 @function_14d18(i32 1, i32 32770)
  %v2_14f34 = call i32 @function_14d18(i32 2, i32 32770)
  store i32 %v2_14f34, i32* @r0, align 4
  br label %dec_label_pc_14f38

dec_label_pc_14f38:                               ; preds = %dec_label_pc_14f04, %dec_label_pc_14eec, %dec_label_pc_14f14
  %v0_14f38 = load i32, i32* @r7, align 4
  %v1_14f38 = inttoptr i32 %v0_14f38 to i32*
  %v2_14f38 = load i32, i32* %v1_14f38, align 4
  store i32 %v2_14f38, i32* %r2.global-to-local, align 4
  store i32 204, i32* %r3.global-to-local, align 4
  %v1_14f40 = load i32, i32* @r6, align 4
  %v3_14f40 = add i32 %v1_14f40, 204
  %v4_14f40 = inttoptr i32 %v3_14f40 to i32*
  store i32 %v2_14f38, i32* %v4_14f40, align 4
  %v0_14f44 = load i32, i32* @r7, align 4
  %v1_14f44 = inttoptr i32 %v0_14f44 to i32*
  %v2_14f44 = load i32, i32* %v1_14f44, align 4
  store i32 %v2_14f44, i32* @r4, align 4
  %v2_14f48 = icmp eq i32 %v2_14f44, 0
  store i1 %v2_14f48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14f48, label %dec_label_pc_14fec.lr.ph, label %dec_label_pc_14f50

dec_label_pc_14f50:                               ; preds = %dec_label_pc_14f38
  store i32 112, i32* %r3.global-to-local, align 4
  %v0_14f54 = load i32, i32* @r6, align 4
  %v2_14f54 = add i32 %v0_14f54, 112
  %v3_14f54 = inttoptr i32 %v2_14f54 to i32*
  %v4_14f54 = load i32, i32* %v3_14f54, align 4
  store i32 %v4_14f54, i32* %r3.global-to-local, align 4
  %v2_14f58 = inttoptr i32 %v4_14f54 to i32*
  store i32 %v2_14f44, i32* %v2_14f58, align 4
  %v0_14f60 = load i32, i32* @r7, align 4
  %v1_14f60 = inttoptr i32 %v0_14f60 to i32*
  %v2_14f60 = load i32, i32* %v1_14f60, align 4
  %v4_14f64 = call i32 @function_16ee0(i32 %v2_14f60, i32 47, i32 %v2_14f38, i32 %v4_14f54)
  store i32 %v4_14f64, i32* @r0, align 4
  store i32 60, i32* %r3.global-to-local, align 4
  %v2_14f6c = icmp eq i32 %v4_14f64, 0
  store i1 %v2_14f6c, i1* %cpsr_z.global-to-local, align 1
  %v0_14f70 = load i32, i32* @r6, align 4
  %v2_14f70 = add i32 %v0_14f70, 60
  %v3_14f70 = inttoptr i32 %v2_14f70 to i32*
  %v4_14f70 = load i32, i32* %v3_14f70, align 4
  store i32 %v4_14f70, i32* %r2.global-to-local, align 4
  br i1 %v2_14f6c, label %.thread47, label %bb64

.thread47:                                        ; preds = %dec_label_pc_14f50
  %v2_14f7848 = inttoptr i32 %v4_14f70 to i32*
  store i32 0, i32* %v2_14f7848, align 4
  br label %dec_label_pc_14fec.lr.ph

bb64:                                             ; preds = %dec_label_pc_14f50
  %v2_14f74 = add i32 %v4_14f64, 1
  store i32 %v2_14f74, i32* %r3.global-to-local, align 4
  %v2_14f78 = inttoptr i32 %v4_14f70 to i32*
  store i32 %v4_14f64, i32* %v2_14f78, align 4
  %v1_14f7c = load i32, i32* %r3.global-to-local, align 4
  %v2_14f7c = load i32, i32* %r2.global-to-local, align 4
  %v3_14f7c = inttoptr i32 %v2_14f7c to i32*
  store i32 %v1_14f7c, i32* %v3_14f7c, align 4
  br label %dec_label_pc_14fec.lr.ph

dec_label_pc_14fec.lr.ph:                         ; preds = %.thread47, %bb64, %dec_label_pc_14f38
  store i32 0, i32* %r5.global-to-local, align 4
  %v0_14f94 = load i32, i32* @r6, align 4
  %v2_14f94 = add i32 %v0_14f94, -12
  store i32 %v2_14f94, i32* %r8.global-to-local, align 4
  store i32 680, i32* %r3.global-to-local, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %arg5, i32* @global_var_182b8.476, align 4
  %v2_14fc4 = icmp eq i32 %v0_14e20, 0
  store i1 %v2_14fc4, i1* %cpsr_z.global-to-local, align 1
  %v2_14fcc = xor i1 %v2_14fc4, true
  call void @__pseudo_cond_branch(i1 %v2_14fcc, i32 %v0_14e20)
  store i32 -12, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  %v0_14fe0 = load i32, i32* @r6, align 4
  %v2_14fe0 = add i32 %v0_14fe0, -12
  store i32 %v2_14fe0, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_14fec

dec_label_pc_14fec:                               ; preds = %dec_label_pc_14fec.dec_label_pc_14fec_crit_edge, %dec_label_pc_14fec.lr.ph
  %v1_14fec = phi i32 [ %v1_14ff8, %dec_label_pc_14fec.dec_label_pc_14fec_crit_edge ], [ 0, %dec_label_pc_14fec.lr.ph ]
  %v0_14fec = phi i32 [ %v0_14fec.pre, %dec_label_pc_14fec.dec_label_pc_14fec_crit_edge ], [ %v2_14fe0, %dec_label_pc_14fec.lr.ph ]
  %v4_14fec = mul i32 %v1_14fec, 4
  %v5_14fec = add i32 %v4_14fec, %v0_14fec
  %v6_14fec = inttoptr i32 %v5_14fec to i32*
  %v7_14fec = load i32, i32* %v6_14fec, align 4
  store i32 %v7_14fec, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_14fec)
  %v0_14ff8 = load i32, i32* %r4.global-to-local, align 4
  %v1_14ff8 = add i32 %v0_14ff8, 1
  store i32 %v1_14ff8, i32* %r4.global-to-local, align 4
  %v1_14ffc = load i32, i32* %r5.global-to-local, align 4
  %v3_14ffc = icmp ult i32 %v1_14ff8, %v1_14ffc
  %v9_14ffc = icmp eq i32 %v1_14ff8, %v1_14ffc
  store i1 %v9_14ffc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_14ffc, label %dec_label_pc_14fec.dec_label_pc_14fec_crit_edge, label %dec_label_pc_15004

dec_label_pc_14fec.dec_label_pc_14fec_crit_edge:  ; preds = %dec_label_pc_14fec
  %v0_14fec.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_14fec

dec_label_pc_15004:                               ; preds = %dec_label_pc_14fec
  %v0_15008.pre = load i32, i32* @r6, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  %v2_15008 = add i32 %v0_15008.pre, 104
  %v3_15008 = inttoptr i32 %v2_15008 to i32*
  %v4_15008 = load i32, i32* %v3_15008, align 4
  store i32 %v4_15008, i32* %r2.global-to-local, align 4
  store i32 %v4_15008, i32* %r3.global-to-local, align 4
  %v2_15010 = icmp eq i32 %v4_15008, 0
  store i1 %v2_15010, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15010, label %dec_label_pc_15028, label %dec_label_pc_15018

dec_label_pc_15018:                               ; preds = %dec_label_pc_15004
  call void @__pseudo_branch(i32 %v4_15008)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_15024 = load i32, i32* @r0, align 4
  %v2_15024 = inttoptr i32 %v1_15024 to i32*
  store i32 0, i32* %v2_15024, align 4
  %v0_1502c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_15028

dec_label_pc_15028:                               ; preds = %dec_label_pc_15004, %dec_label_pc_15018
  %v0_1502c = phi i32 [ %v0_15008.pre, %dec_label_pc_15004 ], [ %v0_1502c.pre, %dec_label_pc_15018 ]
  store i32 80, i32* %r3.global-to-local, align 4
  %v2_1502c = add i32 %v0_1502c, 80
  %v3_1502c = inttoptr i32 %v2_1502c to i32*
  %v4_1502c = load i32, i32* %v3_1502c, align 4
  store i32 %v4_1502c, i32* %r2.global-to-local, align 4
  store i32 %v4_1502c, i32* %r3.global-to-local, align 4
  %v2_15034 = icmp eq i32 %v4_1502c, 0
  store i1 %v2_15034, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15034, label %dec_label_pc_1504c, label %dec_label_pc_1503c

dec_label_pc_1503c:                               ; preds = %dec_label_pc_15028
  call void @__pseudo_branch(i32 %v4_1502c)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_15048 = load i32, i32* @r0, align 4
  %v2_15048 = inttoptr i32 %v1_15048 to i32*
  store i32 0, i32* %v2_15048, align 4
  %v0_15050.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1504c

dec_label_pc_1504c:                               ; preds = %dec_label_pc_15028, %dec_label_pc_1503c
  %v0_15050 = phi i32 [ %v0_1502c, %dec_label_pc_15028 ], [ %v0_15050.pre, %dec_label_pc_1503c ]
  store i32 28, i32* %r3.global-to-local, align 4
  %v2_15050 = add i32 %v0_15050, 28
  %v3_15050 = inttoptr i32 %v2_15050 to i32*
  %v4_15050 = load i32, i32* %v3_15050, align 4
  store i32 %v4_15050, i32* %r3.global-to-local, align 4
  %v1_15058 = inttoptr i32 %v4_15050 to i32*
  %v2_15058 = load i32, i32* %v1_15058, align 4
  store i32 %v2_15058, i32* %r2.global-to-local, align 4
  %v0_1505c = load i32, i32* %sb.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_15068 = call i32 @function_143d0(i32 %v0_1505c)
  %v0_1506c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1506c, label %bb65, label %.thread8

bb65:                                             ; preds = %dec_label_pc_1504c
  %v2_1506c = load i32, i32* %ip.global-to-local, align 4
  %v3_1506c = load i32, i32* %r2.global-to-local, align 4
  %v8_1506c = shl i32 %v2_1506c, %v3_1506c
  %v9_1506c = and i32 %v8_1506c, %v1_15068
  store i32 %v9_1506c, i32* %r3.global-to-local, align 4
  %v2_15070 = load i32, i32* %r4.global-to-local, align 4
  %v8_15070 = shl i32 %v2_15070, %v1_15068
  %v9_15070 = and i32 %v8_15070, %v1_15068
  %v8_15074 = shl i32 %v2_1506c, %v9_15070
  %v5_15078 = udiv i32 %v2_1506c, 32
  %v9_15074 = and i32 %v9_15070, %v5_15078
  %v6_15078 = and i32 %v9_15074, %v8_15074
  %v8_1507c = ashr i32 %v2_1506c, %v6_15078
  %v9_1507c = and i32 %v8_1507c, %v6_15078
  %v3_15080 = and i32 %v9_1507c, %v3_1506c
  store i32 %v3_15080, i32* %r8.global-to-local, align 4
  %v5_1508444 = udiv i32 %v2_1506c, 2
  %v6_15084 = and i32 %v9_1507c, %v5_1508444
  %v5_15088 = sub nsw i32 32, %v6_15084
  %v6_15088 = shl i32 %v6_15084, %v5_15088
  %v9_15088 = and i32 %v6_15088, %v6_15084
  %v8_1508c = lshr i32 %v2_1506c, %v9_15088
  %v9_1508c = and i32 %v8_1508c, %v9_15088
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1504c, %bb65
  %v10_1508c = phi i32 [ %v1_15068, %dec_label_pc_1504c ], [ %v9_1508c, %bb65 ]
  ret i32 %v10_1508c

; uselistorder directives
  uselistorder i32 %v2_1506c, { 2, 0, 3, 1, 4, 5 }
  uselistorder i32 %v1_15068, { 2, 0, 3, 1 }
  uselistorder i32 %v0_15008.pre, { 1, 0 }
  uselistorder i32 %v1_14ffc, { 1, 0 }
  uselistorder i32 %v1_14ff8, { 3, 2, 1, 0 }
  uselistorder i32 %v4_14f70, { 1, 0, 2 }
  uselistorder i1 %v8_14eb8, { 1, 2, 0 }
  uselistorder i32 %v2_14e88, { 1, 2, 0 }
  uselistorder i1 %v2_14e70, { 1, 0 }
  uselistorder i32 %v4_14e54, { 1, 0, 3, 2 }
  uselistorder i32 %storemerge, { 2, 1, 0 }
  uselistorder i32 %v0_14e20, { 1, 0 }
  uselistorder i32 %v3_14df0, { 1, 0 }
  uselistorder i32 %tmp53, { 1, 4, 0, 2, 3 }
  uselistorder i32 %tmp52, { 1, 0 }
  uselistorder i32 %tmp51, { 1, 0 }
  uselistorder i32 %tmp50, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 0, 4, 6, 5, 7, 8, 9 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 16, 17, 18, 19, 8, 9, 10, 11, 12, 13, 14, 15, 20, 21, 2, 22, 23, 24, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12, 0, 13, 14, 15, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 3, 8, 4, 0, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 16, 1, 18 }
  uselistorder i32 (i32)* @function_143d0, { 0, 4, 3, 2, 1 }
  uselistorder i32 680, { 1, 0 }
  uselistorder i32 47, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 (i32, i32)* @function_14d18, { 2, 1, 0 }
  uselistorder i32 536870912, { 1, 0 }
  uselistorder i32 120, { 0, 5, 4, 1, 2, 3 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_1504c, { 1, 0 }
  uselistorder label %dec_label_pc_15028, { 1, 0 }
  uselistorder label %dec_label_pc_14fec.lr.ph, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14f38, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14f14, { 3, 0, 1, 2 }
  uselistorder label %bb63, { 1, 0 }
  uselistorder label %dec_label_pc_14e88, { 1, 0 }
  uselistorder label %bb60, { 1, 0 }
  uselistorder label %dec_label_pc_14e70, { 1, 0 }
}

define i32 @function_150ac(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_150ac:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_150ac = load i32, i32* @r4, align 4
  store i32 %v3_150ac, i32* %stack_var_-16, align 4
  %v3_150b8 = urem i32 %arg3, 4096
  %v2_150bc = icmp eq i32 %v3_150b8, 0
  br i1 %v2_150bc, label %dec_label_pc_150d8, label %dec_label_pc_150c4

dec_label_pc_150c4:                               ; preds = %dec_label_pc_150ac
  %v0_150c4 = call i32 @function_127c4()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_150d0 = inttoptr i32 %v0_150c4 to i32*
  store i32 22, i32* %v2_150d0, align 4
  %v0_15108.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15108

dec_label_pc_150d8:                               ; preds = %dec_label_pc_150ac
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_15104, label %dec_label_pc_150f4

dec_label_pc_150f4:                               ; preds = %dec_label_pc_150d8
  %v0_150f4 = call i32 @function_127c4()
  %v0_150f8 = load i32, i32* %r4.global-to-local, align 4
  %v1_150f8 = sub i32 0, %v0_150f8
  %v2_150fc = inttoptr i32 %v0_150f4 to i32*
  store i32 %v1_150f8, i32* %v2_150fc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15104

dec_label_pc_15104:                               ; preds = %dec_label_pc_150d8, %dec_label_pc_150f4
  %v0_15104 = phi i32 [ %arg1, %dec_label_pc_150d8 ], [ -1, %dec_label_pc_150f4 ]
  store i32 %v0_15104, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15108

dec_label_pc_15108:                               ; preds = %dec_label_pc_150c4, %dec_label_pc_15104
  %v0_15108 = phi i32 [ %v0_15108.pre, %dec_label_pc_150c4 ], [ %v0_15104, %dec_label_pc_15104 ]
  %v2_1510c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1510c, i32* @r4, align 4
  ret i32 %v0_15108

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15108, { 1, 0 }
  uselistorder label %dec_label_pc_15104, { 1, 0 }
}

define i32 @function_15114(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15114:
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_15114 = load i32, i32* @r4, align 4
  %v6_15114 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @ip, align 4
  %v2_1511c = icmp eq i32 %arg2, 0
  store i32 98320, i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v2_1511c, label %dec_label_pc_15170, label %dec_label_pc_15134

dec_label_pc_15134:                               ; preds = %dec_label_pc_15114
  %v1_15134 = add i32 %arg2, 4
  %v2_15134 = inttoptr i32 %v1_15134 to i32*
  %v3_15134 = load i32, i32* %v2_15134, align 4
  store i32 %v3_15134, i32* @r3, align 4
  %v1_15138 = and i32 %v3_15134, 67108864
  %v2_15138 = icmp eq i32 %v1_15138, 0
  br i1 %v2_15138, label %dec_label_pc_15140, label %dec_label_pc_15170

dec_label_pc_15140:                               ; preds = %dec_label_pc_15134
  store i32 20, i32* @r2, align 4
  %v2_15144 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_15144, i32* @r0, align 4
  %v0_15148 = call i32 @function_128d0()
  %v0_15170.pre = load i32, i32* @r5, align 4
  %v0_15178.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15170

dec_label_pc_15170:                               ; preds = %dec_label_pc_15134, %dec_label_pc_15114, %dec_label_pc_15140
  %v0_15178 = phi i32 [ %arg3, %dec_label_pc_15134 ], [ %arg3, %dec_label_pc_15114 ], [ %v0_15178.pre, %dec_label_pc_15140 ]
  %v0_15174 = phi i32 [ %arg2, %dec_label_pc_15134 ], [ 0, %dec_label_pc_15114 ], [ %v2_15144, %dec_label_pc_15140 ]
  %v0_15170 = phi i32 [ %arg1, %dec_label_pc_15134 ], [ %arg1, %dec_label_pc_15114 ], [ %v0_15170.pre, %dec_label_pc_15140 ]
  %v4_15180 = call i32 @function_156d0(i32 %v0_15170, i32 %v0_15174, i32 %v0_15178, i32 8)
  store i32 %v3_15114, i32* @r4, align 4
  store i32 %v6_15114, i32* @r5, align 4
  ret i32 %v4_15180

; uselistorder directives
  uselistorder label %dec_label_pc_15170, { 2, 0, 1 }
}

define i32 @function_15190(i32 %arg1) local_unnamed_addr {
dec_label_pc_15190:
  %v0_15190 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15190, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_15190
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_15190, %bb
  %v0_151a8 = phi i32 [ %arg1, %dec_label_pc_15190 ], [ 0, %bb ]
  ret i32 %v0_151a8

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_151b4() local_unnamed_addr {
dec_label_pc_151b4:
  %v4_151c0 = load i32, i32* inttoptr (i32 98412 to i32*), align 4
  %v1_151c4 = inttoptr i32 %v4_151c0 to i32*
  %v2_151c4 = load i32, i32* %v1_151c4, align 4
  %v2_151c8 = icmp eq i32 %v2_151c4, 0
  br i1 %v2_151c8, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_151b4
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_151b4, %bb
  %v1_151d0 = phi i32 [ %v2_151c4, %dec_label_pc_151b4 ], [ 4096, %bb ]
  ret i32 %v1_151d0

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_151d4(i32 %arg1) local_unnamed_addr {
dec_label_pc_151d4:
  %v0_151d4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_151d4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_151d4
  %v2_151d4 = load i32, i32* @ip, align 4
  %v8_151d8 = ashr i32 %v2_151d4, %arg1
  %v9_151d8 = and i32 %v8_151d8, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_151d4, %bb
  %v10_151d8 = phi i32 [ %arg1, %dec_label_pc_151d4 ], [ %v9_151d8, %bb ]
  ret i32 %v10_151d8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_151dc() local_unnamed_addr {
dec_label_pc_151dc:
  %v1_151ec = load i32, i32* @r0, align 4
  ret i32 %v1_151ec
}

define i32 @function_151f0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_151f0:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_151f0 = load i32, i32* @r7, align 4
  store i32 %v3_151f0, i32* %stack_var_-8, align 4
  %v0_151fc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_151fc, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_151fc, -4095
  br i1 %tmp, label %dec_label_pc_1521c, label %dec_label_pc_1520c

dec_label_pc_1520c:                               ; preds = %dec_label_pc_151f0
  %v0_1520c = call i32 @function_127c4()
  %v0_15210 = load i32, i32* %r7.global-to-local, align 4
  %v1_15210 = sub i32 0, %v0_15210
  %v2_15214 = inttoptr i32 %v0_1520c to i32*
  store i32 %v1_15210, i32* %v2_15214, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1521c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1521c

dec_label_pc_1521c:                               ; preds = %dec_label_pc_151f0, %dec_label_pc_1520c
  %v1_15220 = phi i32 [ %v0_151fc, %dec_label_pc_151f0 ], [ -1, %dec_label_pc_1520c ]
  %v2_1521c = phi i32 [ %v3_151f0, %dec_label_pc_151f0 ], [ %v2_1521c.pre, %dec_label_pc_1520c ]
  store i32 %v2_1521c, i32* %r7.global-to-local, align 4
  ret i32 %v1_15220

; uselistorder directives
  uselistorder i32 %v0_151fc, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1521c, { 1, 0 }
}

define i32 @function_15224() local_unnamed_addr {
dec_label_pc_15224:
  %v1_15234 = load i32, i32* @r0, align 4
  ret i32 %v1_15234
}

define i32 @function_15238() local_unnamed_addr {
dec_label_pc_15238:
  %v1_15248 = load i32, i32* @r0, align 4
  ret i32 %v1_15248
}

define i32 @function_1524c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1524c:
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %v6_1524c = load i32, i32* @r5, align 4
  %v18_1524c = load i32, i32* @sl, align 4
  store i32 141, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1527c, label %dec_label_pc_15268

dec_label_pc_15268:                               ; preds = %dec_label_pc_1524c
  %v0_15268 = call i32 @function_127c4()
  %v0_1526c = load i32, i32* @r5, align 4
  %v1_1526c = sub i32 0, %v0_1526c
  store i32 %v1_1526c, i32* %r3.global-to-local, align 4
  store i32 -1, i32* @r5, align 4
  %v2_15274 = inttoptr i32 %v0_15268 to i32*
  store i32 %v1_1526c, i32* %v2_15274, align 4
  br label %dec_label_pc_152d0

dec_label_pc_1527c:                               ; preds = %dec_label_pc_1524c
  br i1 false, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_1527c
  store i32 %arg2, i32* %r7.global-to-local, align 4
  %v3_15284 = add i32 %arg2, %arg1
  store i32 %v3_15284, i32* @sl, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1527c, %bb
  %v1_152c04 = phi i32 [ %v18_1524c, %dec_label_pc_1527c ], [ %v3_15284, %bb ]
  %v0_152bc2 = phi i32 [ 141, %dec_label_pc_1527c ], [ %arg2, %bb ]
  br i1 false, label %dec_label_pc_152d0, label %dec_label_pc_152bc

dec_label_pc_15290:                               ; preds = %dec_label_pc_152bc
  %v1_15290 = add i32 %v0_15290, 8
  %v2_15290 = inttoptr i32 %v1_15290 to i16*
  %v3_15290 = load i16, i16* %v2_15290, align 2
  %v4_15290 = zext i16 %v3_15290 to i32
  %v2_15294 = add i32 %v4_15290, %v0_15290
  store i32 %v2_15294, i32* %r3.global-to-local, align 4
  %v1_15298 = add i32 %v2_15294, -1
  %v2_15298 = inttoptr i32 %v1_15298 to i8*
  %v3_15298 = load i8, i8* %v2_15298, align 1
  %v4_15298 = zext i8 %v3_15298 to i32
  store i32 %v4_15298, i32* @r4, align 4
  %v1_1529c = call i32 @function_16dd0(i32 %v1_152bc)
  %v0_152a0 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_152a0, i32* @r1, align 4
  %v1_152a4 = add i32 %v1_1529c, 1
  store i32 %v1_152a4, i32* @r2, align 4
  %v0_152a8 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_152a8, i32* @r0, align 4
  %v3_152ac = call i32 @function_128c0(i32 %v0_152a8, i32 %v0_152a0, i32 %v1_152a4)
  %v0_152b0 = load i32, i32* %r7.global-to-local, align 4
  %v1_152b0 = add i32 %v0_152b0, 8
  %v2_152b0 = inttoptr i32 %v1_152b0 to i16*
  %v3_152b0 = load i16, i16* %v2_152b0, align 2
  %v4_152b0 = zext i16 %v3_152b0 to i32
  store i32 %v4_152b0, i32* %r3.global-to-local, align 4
  %v0_152b4 = load i32, i32* @r4, align 4
  %v1_152b4 = trunc i32 %v0_152b4 to i8
  %v3_152b4 = add i32 %v0_152b0, 10
  %v4_152b4 = inttoptr i32 %v3_152b4 to i8*
  store i8 %v1_152b4, i8* %v4_152b4, align 1
  %v0_152b8 = load i32, i32* %r7.global-to-local, align 4
  %v1_152b8 = load i32, i32* %r3.global-to-local, align 4
  %v2_152b8 = add i32 %v1_152b8, %v0_152b8
  store i32 %v2_152b8, i32* %r7.global-to-local, align 4
  %v1_152c0.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_152bc

dec_label_pc_152bc:                               ; preds = %.thread, %dec_label_pc_15290
  %v1_152c0 = phi i32 [ %v1_152c0.pre, %dec_label_pc_15290 ], [ %v1_152c04, %.thread ]
  %v0_15290 = phi i32 [ %v2_152b8, %dec_label_pc_15290 ], [ %v0_152bc2, %.thread ]
  %v1_152bc = add i32 %v0_15290, 10
  store i32 %v1_152bc, i32* %r6.global-to-local, align 4
  %v3_152c0 = icmp ult i32 %v0_15290, %v1_152c0
  %v1_152c8 = add i32 %v0_15290, 11
  store i32 %v1_152c8, i32* %r8.global-to-local, align 4
  br i1 %v3_152c0, label %dec_label_pc_15290, label %dec_label_pc_152d0

dec_label_pc_152d0:                               ; preds = %dec_label_pc_152bc, %.thread, %dec_label_pc_15268
  %v0_152d0 = load i32, i32* @r5, align 4
  store i32 %v6_1524c, i32* @r5, align 4
  store i32 %v18_1524c, i32* @sl, align 4
  ret i32 %v0_152d0

; uselistorder directives
  uselistorder i32 %v1_152bc, { 1, 0 }
  uselistorder i32 %v0_15290, { 2, 4, 3, 1, 0 }
  uselistorder i32 %v18_1524c, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 3, 1, 4 }
  uselistorder i32* %r6.global-to-local, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_128c0, { 1, 2, 0 }
  uselistorder i32 141, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_152bc, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_152e0() local_unnamed_addr {
dec_label_pc_152e0:
  %r7.global-to-local = alloca i32, align 4
  %v0_152e8 = load i32, i32* @r1, align 4
  store i32 %v0_152e8, i32* @r3, align 4
  %v0_152f8 = load i32, i32* @r0, align 4
  store i32 %v0_152f8, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_152f8, -4095
  br i1 %tmp, label %dec_label_pc_15318, label %dec_label_pc_15304

dec_label_pc_15304:                               ; preds = %dec_label_pc_152e0
  %v0_15304 = call i32 @function_127c4()
  %v0_15308 = load i32, i32* %r7.global-to-local, align 4
  %v1_15308 = sub i32 0, %v0_15308
  store i32 %v1_15308, i32* @r3, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_15310 = inttoptr i32 %v0_15304 to i32*
  store i32 %v1_15308, i32* %v2_15310, align 4
  br label %dec_label_pc_15328

dec_label_pc_15318:                               ; preds = %dec_label_pc_152e0
  %v2_15318 = icmp eq i32 %v0_152f8, 0
  br i1 %v2_15318, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_15318
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_15318, %bb
  call void @__pseudo_cond_branch(i1 %v2_15318, i32 ptrtoint (i32* @global_var_15530.486 to i32))
  br label %dec_label_pc_15328

dec_label_pc_15328:                               ; preds = %dec_label_pc_15304, %.thread
  %v0_15328 = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_15328

; uselistorder directives
  uselistorder i32 %v0_152f8, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_15328, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_15338(i32 %arg1) local_unnamed_addr {
dec_label_pc_15338:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_15338 = load i32, i32* @r4, align 4
  store i32 %v3_15338, i32* %stack_var_-16, align 4
  store i32 98320, i32* %r4.global-to-local, align 4
  %v4_15348 = load i32, i32* @global_var_1a2d0.489, align 4
  %v2_1534c = icmp eq i32 %v4_15348, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_1534c, label %dec_label_pc_15358, label %dec_label_pc_15368

dec_label_pc_15358:                               ; preds = %dec_label_pc_15338
  %v1_1535c = call i32 @function_172dc(i32 0)
  %v1_15360 = icmp slt i32 %v1_1535c, 0
  br i1 %v1_15360, label %dec_label_pc_1538c, label %dec_label_pc_15368thread-pre-split

dec_label_pc_15368thread-pre-split:               ; preds = %dec_label_pc_15358
  %v0_1536c.pr = load i32, i32* %r5.global-to-local, align 4
  %v4_15368.pre = load i32, i32* @global_var_1a2d0.489, align 4
  br label %dec_label_pc_15368

dec_label_pc_15368:                               ; preds = %dec_label_pc_15368thread-pre-split, %dec_label_pc_15338
  %v0_15378 = phi i32 [ %v4_15368.pre, %dec_label_pc_15368thread-pre-split ], [ %v4_15348, %dec_label_pc_15338 ]
  %v1_1537c = phi i32 [ %v0_1536c.pr, %dec_label_pc_15368thread-pre-split ], [ %arg1, %dec_label_pc_15338 ]
  %v2_1536c = icmp eq i32 %v1_1537c, 0
  store i32 %v0_15378, i32* %r4.global-to-local, align 4
  br i1 %v2_1536c, label %dec_label_pc_15390, label %dec_label_pc_15378

dec_label_pc_15378:                               ; preds = %dec_label_pc_15368
  %v2_1537c = add i32 %v1_1537c, %v0_15378
  %v1_15380 = call i32 @function_172dc(i32 %v2_1537c)
  %v1_15384 = icmp slt i32 %v1_15380, 0
  br i1 %v1_15384, label %dec_label_pc_1538c, label %dec_label_pc_15378.dec_label_pc_15390_crit_edge

dec_label_pc_15378.dec_label_pc_15390_crit_edge:  ; preds = %dec_label_pc_15378
  %v0_15390.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15390

dec_label_pc_1538c:                               ; preds = %dec_label_pc_15378, %dec_label_pc_15358
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15390

dec_label_pc_15390:                               ; preds = %dec_label_pc_15368, %dec_label_pc_15378.dec_label_pc_15390_crit_edge, %dec_label_pc_1538c
  %v0_15390 = phi i32 [ %v0_15390.pre, %dec_label_pc_15378.dec_label_pc_15390_crit_edge ], [ -1, %dec_label_pc_1538c ], [ %v0_15378, %dec_label_pc_15368 ]
  %v2_15394 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15394, i32* @r4, align 4
  ret i32 %v0_15390

; uselistorder directives
  uselistorder i32 %v0_15378, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_172dc, { 1, 0 }
  uselistorder label %dec_label_pc_15390, { 2, 1, 0 }
}

define i32 @function_1539c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1539c:
  %v0_1539c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1539c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1539c
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1539c, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_153a4(i32 %arg1) local_unnamed_addr {
dec_label_pc_153a4:
  %v1_153b4 = load i32, i32* @r0, align 4
  ret i32 %v1_153b4
}

define i32 @function_153b8(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_153b8:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_153b8 = load i32, i32* @r4, align 4
  store i32 %v3_153b8, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 104, i32* @r2, align 4
  %v2_153d0 = inttoptr i32 %arg2 to i8*
  %v3_153d0 = call i32 @function_12820(i8* %v2_153d0, i32 0)
  %v2_153d4 = load i32, i32* %arg1, align 4
  store i32 %v2_153d4, i32* %r3.global-to-local, align 4
  %v3_153d4 = add i32 %tmp, 4
  %v4_153d4 = inttoptr i32 %v3_153d4 to i32*
  %v5_153d4 = load i32, i32* %v4_153d4, align 4
  store i32 %v5_153d4, i32* %r4.global-to-local, align 4
  %v0_153d8 = load i32, i32* %r5.global-to-local, align 4
  %v1_153d8 = inttoptr i32 %v0_153d8 to i32*
  store i32 %v2_153d4, i32* %v1_153d8, align 4
  %v3_153d8 = add i32 %v0_153d8, 4
  %v4_153d8 = inttoptr i32 %v3_153d8 to i32*
  %v5_153d8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_153d8, i32* %v4_153d8, align 4
  %v0_153dc = load i32, i32* %r6.global-to-local, align 4
  %v1_153dc = add i32 %v0_153dc, 12
  %v2_153dc = inttoptr i32 %v1_153dc to i32*
  %v3_153dc = load i32, i32* %v2_153dc, align 4
  %v1_153e0 = load i32, i32* %r5.global-to-local, align 4
  %v2_153e0 = add i32 %v1_153e0, 12
  %v3_153e0 = inttoptr i32 %v2_153e0 to i32*
  store i32 %v3_153dc, i32* %v3_153e0, align 4
  %v0_153e4 = load i32, i32* %r6.global-to-local, align 4
  %v1_153e4 = add i32 %v0_153e4, 96
  store i32 %v1_153e4, i32* %r3.global-to-local, align 4
  %v1_153e8 = inttoptr i32 %v1_153e4 to i32*
  %v2_153e8 = load i32, i32* %v1_153e8, align 4
  store i32 %v2_153e8, i32* %r3.global-to-local, align 4
  %v3_153e8 = add i32 %v0_153e4, 100
  %v4_153e8 = inttoptr i32 %v3_153e8 to i32*
  %v5_153e8 = load i32, i32* %v4_153e8, align 4
  store i32 %v5_153e8, i32* %r4.global-to-local, align 4
  %v1_153ec = add i32 %v0_153e4, 56
  %v2_153ec = inttoptr i32 %v1_153ec to i32*
  %v3_153ec = load i32, i32* %v2_153ec, align 4
  store i32 %v3_153ec, i32* %r2.global-to-local, align 4
  %v1_153f0 = load i32, i32* %r5.global-to-local, align 4
  %v2_153f0 = add i32 %v1_153f0, 96
  %v3_153f0 = inttoptr i32 %v2_153f0 to i32*
  store i32 %v2_153e8, i32* %v3_153f0, align 4
  %v0_153f4 = load i32, i32* %r4.global-to-local, align 4
  %v1_153f4 = load i32, i32* %r5.global-to-local, align 4
  %v2_153f4 = add i32 %v1_153f4, 100
  %v3_153f4 = inttoptr i32 %v2_153f4 to i32*
  store i32 %v0_153f4, i32* %v3_153f4, align 4
  %v0_153f8 = load i32, i32* %r6.global-to-local, align 4
  %v1_153f8 = add i32 %v0_153f8, 24
  store i32 %v1_153f8, i32* %ip.global-to-local, align 4
  %v1_153fc = inttoptr i32 %v1_153f8 to i32*
  %v2_153fc = load i32, i32* %v1_153fc, align 4
  store i32 %v2_153fc, i32* %ip.global-to-local, align 4
  %v3_153fc = add i32 %v0_153f8, 28
  %v4_153fc = inttoptr i32 %v3_153fc to i32*
  %v5_153fc = load i32, i32* %v4_153fc, align 4
  store i32 %v5_153fc, i32* %lr.global-to-local, align 4
  %v0_15400 = load i32, i32* %r2.global-to-local, align 4
  %v1_15400 = load i32, i32* %r5.global-to-local, align 4
  %v2_15400 = add i32 %v1_15400, 56
  %v3_15400 = inttoptr i32 %v2_15400 to i32*
  store i32 %v0_15400, i32* %v3_15400, align 4
  %v0_15404 = load i32, i32* %r6.global-to-local, align 4
  %v1_15404 = add i32 %v0_15404, 72
  store i32 %v1_15404, i32* %r3.global-to-local, align 4
  %v1_15408 = add i32 %v0_15404, 32
  store i32 %v1_15408, i32* %r7.global-to-local, align 4
  %v1_1540c = inttoptr i32 %v1_15408 to i32*
  %v2_1540c = load i32, i32* %v1_1540c, align 4
  store i32 %v2_1540c, i32* %r7.global-to-local, align 4
  %v3_1540c = add i32 %v0_15404, 36
  %v4_1540c = inttoptr i32 %v3_1540c to i32*
  %v5_1540c = load i32, i32* %v4_1540c, align 4
  store i32 %v5_1540c, i32* %r8.global-to-local, align 4
  %v1_15410 = inttoptr i32 %v1_15404 to i32*
  %v2_15410 = load i32, i32* %v1_15410, align 4
  %v3_15410 = add i32 %v0_15404, 76
  %v4_15410 = inttoptr i32 %v3_15410 to i32*
  %v5_15410 = load i32, i32* %v4_15410, align 4
  store i32 %v5_15410, i32* %r1.global-to-local, align 4
  %v0_15414 = load i32, i32* %r5.global-to-local, align 4
  %v1_15414 = add i32 %v0_15414, 72
  %v1_15418 = inttoptr i32 %v1_15414 to i32*
  store i32 %v2_15410, i32* %v1_15418, align 4
  %v3_15418 = add i32 %v0_15414, 76
  %v4_15418 = inttoptr i32 %v3_15418 to i32*
  %v5_15418 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_15418, i32* %v4_15418, align 4
  %v0_1541c = load i32, i32* %r7.global-to-local, align 4
  %v1_1541c = load i32, i32* %r5.global-to-local, align 4
  %v2_1541c = add i32 %v1_1541c, 32
  %v3_1541c = inttoptr i32 %v2_1541c to i32*
  store i32 %v0_1541c, i32* %v3_1541c, align 4
  %v0_15420 = load i32, i32* %r8.global-to-local, align 4
  %v1_15420 = load i32, i32* %r5.global-to-local, align 4
  %v2_15420 = add i32 %v1_15420, 36
  %v3_15420 = inttoptr i32 %v2_15420 to i32*
  store i32 %v0_15420, i32* %v3_15420, align 4
  %v0_15424 = load i32, i32* %r6.global-to-local, align 4
  %v1_15424 = add i32 %v0_15424, 80
  store i32 %v1_15424, i32* %r3.global-to-local, align 4
  %v1_15428 = add i32 %v0_15424, 48
  store i32 %v1_15428, i32* %r7.global-to-local, align 4
  %v1_1542c = inttoptr i32 %v1_15428 to i32*
  %v2_1542c = load i32, i32* %v1_1542c, align 4
  store i32 %v2_1542c, i32* %r7.global-to-local, align 4
  %v3_1542c = add i32 %v0_15424, 52
  %v4_1542c = inttoptr i32 %v3_1542c to i32*
  %v5_1542c = load i32, i32* %v4_1542c, align 4
  store i32 %v5_1542c, i32* %r8.global-to-local, align 4
  %v1_15430 = inttoptr i32 %v1_15424 to i32*
  %v2_15430 = load i32, i32* %v1_15430, align 4
  %v3_15430 = add i32 %v0_15424, 84
  %v4_15430 = inttoptr i32 %v3_15430 to i32*
  %v5_15430 = load i32, i32* %v4_15430, align 4
  store i32 %v5_15430, i32* %r1.global-to-local, align 4
  %v1_15434 = add i32 %v0_15424, 16
  %v2_15434 = inttoptr i32 %v1_15434 to i32*
  %v3_15434 = load i32, i32* %v2_15434, align 4
  store i32 %v3_15434, i32* %r2.global-to-local, align 4
  %v0_15438 = load i32, i32* %r5.global-to-local, align 4
  %v1_15438 = add i32 %v0_15438, 80
  %v1_1543c = inttoptr i32 %v1_15438 to i32*
  store i32 %v2_15430, i32* %v1_1543c, align 4
  %v3_1543c = add i32 %v0_15438, 84
  %v4_1543c = inttoptr i32 %v3_1543c to i32*
  %v5_1543c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1543c, i32* %v4_1543c, align 4
  %v0_15440 = load i32, i32* %r7.global-to-local, align 4
  %v1_15440 = load i32, i32* %r5.global-to-local, align 4
  %v2_15440 = add i32 %v1_15440, 48
  %v3_15440 = inttoptr i32 %v2_15440 to i32*
  store i32 %v0_15440, i32* %v3_15440, align 4
  %v0_15444 = load i32, i32* %r8.global-to-local, align 4
  %v1_15444 = load i32, i32* %r5.global-to-local, align 4
  %v2_15444 = add i32 %v1_15444, 52
  %v3_15444 = inttoptr i32 %v2_15444 to i32*
  store i32 %v0_15444, i32* %v3_15444, align 4
  %v0_15448 = load i32, i32* %r2.global-to-local, align 4
  %v1_15448 = load i32, i32* %r5.global-to-local, align 4
  %v2_15448 = add i32 %v1_15448, 16
  %v3_15448 = inttoptr i32 %v2_15448 to i32*
  store i32 %v0_15448, i32* %v3_15448, align 4
  %v0_1544c = load i32, i32* %r6.global-to-local, align 4
  %v1_1544c = add i32 %v0_1544c, 88
  store i32 %v1_1544c, i32* %r3.global-to-local, align 4
  %v1_15450 = add i32 %v0_1544c, 20
  %v2_15450 = inttoptr i32 %v1_15450 to i32*
  %v3_15450 = load i32, i32* %v2_15450, align 4
  store i32 %v3_15450, i32* %r2.global-to-local, align 4
  %v1_15454 = inttoptr i32 %v1_1544c to i32*
  %v2_15454 = load i32, i32* %v1_15454, align 4
  %v3_15454 = add i32 %v0_1544c, 92
  %v4_15454 = inttoptr i32 %v3_15454 to i32*
  %v5_15454 = load i32, i32* %v4_15454, align 4
  store i32 %v5_15454, i32* %r1.global-to-local, align 4
  %v1_15458 = add i32 %v0_1544c, 64
  store i32 %v1_15458, i32* %r6.global-to-local, align 4
  %v1_1545c = inttoptr i32 %v1_15458 to i32*
  %v2_1545c = load i32, i32* %v1_1545c, align 4
  store i32 %v2_1545c, i32* %r6.global-to-local, align 4
  %v3_1545c = add i32 %v0_1544c, 68
  %v4_1545c = inttoptr i32 %v3_1545c to i32*
  %v5_1545c = load i32, i32* %v4_1545c, align 4
  store i32 %v5_1545c, i32* %r7.global-to-local, align 4
  %v0_15460 = load i32, i32* %r5.global-to-local, align 4
  %v1_15460 = add i32 %v0_15460, 88
  store i32 %v1_15460, i32* %r3.global-to-local, align 4
  %v2_15464 = add i32 %v0_15460, 20
  %v3_15464 = inttoptr i32 %v2_15464 to i32*
  store i32 %v3_15450, i32* %v3_15464, align 4
  %v0_15468 = load i32, i32* %ip.global-to-local, align 4
  %v1_15468 = load i32, i32* %r5.global-to-local, align 4
  %v2_15468 = add i32 %v1_15468, 24
  %v3_15468 = inttoptr i32 %v2_15468 to i32*
  store i32 %v0_15468, i32* %v3_15468, align 4
  %v0_1546c = load i32, i32* %lr.global-to-local, align 4
  %v1_1546c = load i32, i32* %r5.global-to-local, align 4
  %v2_1546c = add i32 %v1_1546c, 28
  %v3_1546c = inttoptr i32 %v2_1546c to i32*
  store i32 %v0_1546c, i32* %v3_1546c, align 4
  %v0_15470 = load i32, i32* %r6.global-to-local, align 4
  %v1_15470 = load i32, i32* %r5.global-to-local, align 4
  %v2_15470 = add i32 %v1_15470, 64
  %v3_15470 = inttoptr i32 %v2_15470 to i32*
  store i32 %v0_15470, i32* %v3_15470, align 4
  %v0_15474 = load i32, i32* %r7.global-to-local, align 4
  %v1_15474 = load i32, i32* %r5.global-to-local, align 4
  %v2_15474 = add i32 %v1_15474, 68
  %v3_15474 = inttoptr i32 %v2_15474 to i32*
  store i32 %v0_15474, i32* %v3_15474, align 4
  %v0_15478 = load i32, i32* %r3.global-to-local, align 4
  %v1_15478 = inttoptr i32 %v0_15478 to i32*
  store i32 %v2_15454, i32* %v1_15478, align 4
  %v3_15478 = add i32 %v0_15478, 4
  %v4_15478 = inttoptr i32 %v3_15478 to i32*
  %v5_15478 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_15478, i32* %v4_15478, align 4
  %v2_1547c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1547c, i32* %r4.global-to-local, align 4
  ret i32 %v2_15454

; uselistorder directives
  uselistorder i32 %v0_1544c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_15424, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 3, 8, 4, 5, 6, 7, 9 }
  uselistorder i32* %r5.global-to-local, { 8, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 100, { 1, 0, 2 }
  uselistorder i32 104, { 4, 0, 1, 2, 5, 3, 6, 7 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @function_15484(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15484:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_15484 = load i32, i32* @r4, align 4
  store i32 %v3_15484, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* @r2, align 4
  %v2_1549c = inttoptr i32 %arg2 to i8*
  %v3_1549c = call i32 @function_12820(i8* %v2_1549c, i32 0)
  %v2_154a0 = load i32, i32* %arg1, align 4
  %v3_154a0 = add i32 %tmp, 4
  %v4_154a0 = inttoptr i32 %v3_154a0 to i32*
  %v5_154a0 = load i32, i32* %v4_154a0, align 4
  store i32 %v5_154a0, i32* %r4.global-to-local, align 4
  %v0_154a4 = load i32, i32* %r6.global-to-local, align 4
  %v1_154a4 = inttoptr i32 %v0_154a4 to i32*
  store i32 %v2_154a0, i32* %v1_154a4, align 4
  %v3_154a4 = add i32 %v0_154a4, 4
  %v4_154a4 = inttoptr i32 %v3_154a4 to i32*
  %v5_154a4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_154a4, i32* %v4_154a4, align 4
  %v0_154a8 = load i32, i32* %r5.global-to-local, align 4
  %v1_154a8 = add i32 %v0_154a8, 32
  %v1_154ac = inttoptr i32 %v1_154a8 to i32*
  %v2_154ac = load i32, i32* %v1_154ac, align 4
  %v3_154ac = add i32 %v0_154a8, 36
  %v4_154ac = inttoptr i32 %v3_154ac to i32*
  %v5_154ac = load i32, i32* %v4_154ac, align 4
  store i32 %v5_154ac, i32* %r4.global-to-local, align 4
  %v1_154b0 = add i32 %v0_154a8, 96
  %v2_154b0 = inttoptr i32 %v1_154b0 to i32*
  %v3_154b0 = load i32, i32* %v2_154b0, align 4
  store i32 %v3_154b0, i32* %r2.global-to-local, align 4
  %v1_154b4 = load i32, i32* %r6.global-to-local, align 4
  %v2_154b4 = add i32 %v1_154b4, 32
  %v3_154b4 = inttoptr i32 %v2_154b4 to i32*
  store i32 %v2_154ac, i32* %v3_154b4, align 4
  %v0_154b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_154b8 = load i32, i32* %r6.global-to-local, align 4
  %v2_154b8 = add i32 %v1_154b8, 36
  %v3_154b8 = inttoptr i32 %v2_154b8 to i32*
  store i32 %v0_154b8, i32* %v3_154b8, align 4
  %v0_154bc = load i32, i32* %r2.global-to-local, align 4
  %v1_154bc = load i32, i32* %r6.global-to-local, align 4
  %v2_154bc = add i32 %v1_154bc, 12
  %v3_154bc = inttoptr i32 %v2_154bc to i32*
  store i32 %v0_154bc, i32* %v3_154bc, align 4
  %v0_154c0 = load i32, i32* %r5.global-to-local, align 4
  %v1_154c0 = add i32 %v0_154c0, 48
  %v2_154c0 = inttoptr i32 %v1_154c0 to i32*
  %v3_154c0 = load i32, i32* %v2_154c0, align 4
  %v1_154c4 = add i32 %v0_154c0, 24
  store i32 %v1_154c4, i32* %ip.global-to-local, align 4
  %v1_154c8 = inttoptr i32 %v1_154c4 to i32*
  %v2_154c8 = load i32, i32* %v1_154c8, align 4
  store i32 %v2_154c8, i32* %ip.global-to-local, align 4
  %v3_154c8 = add i32 %v0_154c0, 28
  %v4_154c8 = inttoptr i32 %v3_154c8 to i32*
  %v5_154c8 = load i32, i32* %v4_154c8, align 4
  store i32 %v5_154c8, i32* %lr.global-to-local, align 4
  %v1_154cc = load i32, i32* %r6.global-to-local, align 4
  %v2_154cc = add i32 %v1_154cc, 44
  %v3_154cc = inttoptr i32 %v2_154cc to i32*
  store i32 %v3_154c0, i32* %v3_154cc, align 4
  %v0_154d0 = load i32, i32* %r5.global-to-local, align 4
  %v1_154d0 = add i32 %v0_154d0, 64
  %v2_154d0 = inttoptr i32 %v1_154d0 to i32*
  %v3_154d0 = load i32, i32* %v2_154d0, align 4
  %v1_154d4 = add i32 %v0_154d0, 56
  %v2_154d4 = inttoptr i32 %v1_154d4 to i32*
  %v3_154d4 = load i32, i32* %v2_154d4, align 4
  store i32 %v3_154d4, i32* %r2.global-to-local, align 4
  %v1_154d8 = load i32, i32* %r6.global-to-local, align 4
  %v2_154d8 = add i32 %v1_154d8, 52
  %v3_154d8 = inttoptr i32 %v2_154d8 to i32*
  store i32 %v3_154d0, i32* %v3_154d8, align 4
  %v0_154dc = load i32, i32* %r2.global-to-local, align 4
  %v1_154dc = load i32, i32* %r6.global-to-local, align 4
  %v2_154dc = add i32 %v1_154dc, 48
  %v3_154dc = inttoptr i32 %v2_154dc to i32*
  store i32 %v0_154dc, i32* %v3_154dc, align 4
  %v0_154e0 = load i32, i32* %r5.global-to-local, align 4
  %v1_154e0 = add i32 %v0_154e0, 72
  %v1_154e4 = inttoptr i32 %v1_154e0 to i32*
  %v2_154e4 = load i32, i32* %v1_154e4, align 4
  %v3_154e4 = add i32 %v0_154e0, 76
  %v4_154e4 = inttoptr i32 %v3_154e4 to i32*
  %v5_154e4 = load i32, i32* %v4_154e4, align 4
  store i32 %v5_154e4, i32* %r1.global-to-local, align 4
  %v0_154e8 = load i32, i32* %r6.global-to-local, align 4
  %v1_154e8 = add i32 %v0_154e8, 56
  %v1_154ec = inttoptr i32 %v1_154e8 to i32*
  store i32 %v2_154e4, i32* %v1_154ec, align 4
  %v3_154ec = add i32 %v0_154e8, 60
  %v4_154ec = inttoptr i32 %v3_154ec to i32*
  %v5_154ec = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_154ec, i32* %v4_154ec, align 4
  %v0_154f0 = load i32, i32* %r5.global-to-local, align 4
  %v1_154f0 = add i32 %v0_154f0, 80
  %v1_154f4 = inttoptr i32 %v1_154f0 to i32*
  %v2_154f4 = load i32, i32* %v1_154f4, align 4
  %v3_154f4 = add i32 %v0_154f0, 84
  %v4_154f4 = inttoptr i32 %v3_154f4 to i32*
  %v5_154f4 = load i32, i32* %v4_154f4, align 4
  store i32 %v5_154f4, i32* %r1.global-to-local, align 4
  %v0_154f8 = load i32, i32* %r6.global-to-local, align 4
  %v1_154f8 = add i32 %v0_154f8, 64
  %v1_154fc = inttoptr i32 %v1_154f8 to i32*
  store i32 %v2_154f4, i32* %v1_154fc, align 4
  %v3_154fc = add i32 %v0_154f8, 68
  %v4_154fc = inttoptr i32 %v3_154fc to i32*
  %v5_154fc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_154fc, i32* %v4_154fc, align 4
  %v0_15500 = load i32, i32* %r5.global-to-local, align 4
  %v1_15500 = add i32 %v0_15500, 16
  %v2_15500 = inttoptr i32 %v1_15500 to i32*
  %v3_15500 = load i32, i32* %v2_15500, align 4
  %v1_15504 = load i32, i32* %r6.global-to-local, align 4
  %v2_15504 = add i32 %v1_15504, 16
  %v3_15504 = inttoptr i32 %v2_15504 to i32*
  store i32 %v3_15500, i32* %v3_15504, align 4
  %v0_15508 = load i32, i32* %r5.global-to-local, align 4
  %v1_15508 = add i32 %v0_15508, 88
  %v1_1550c = add i32 %v0_15508, 20
  %v2_1550c = inttoptr i32 %v1_1550c to i32*
  %v3_1550c = load i32, i32* %v2_1550c, align 4
  store i32 %v3_1550c, i32* %r2.global-to-local, align 4
  %v1_15510 = inttoptr i32 %v1_15508 to i32*
  %v2_15510 = load i32, i32* %v1_15510, align 4
  %v3_15510 = add i32 %v0_15508, 92
  %v4_15510 = inttoptr i32 %v3_15510 to i32*
  %v5_15510 = load i32, i32* %v4_15510, align 4
  store i32 %v5_15510, i32* %r1.global-to-local, align 4
  %v0_15514 = load i32, i32* %r6.global-to-local, align 4
  %v1_15514 = add i32 %v0_15514, 72
  %v1_15518 = inttoptr i32 %v1_15514 to i32*
  store i32 %v2_15510, i32* %v1_15518, align 4
  %v3_15518 = add i32 %v0_15514, 76
  %v4_15518 = inttoptr i32 %v3_15518 to i32*
  %v5_15518 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_15518, i32* %v4_15518, align 4
  %v0_1551c = load i32, i32* %r2.global-to-local, align 4
  %v1_1551c = load i32, i32* %r6.global-to-local, align 4
  %v2_1551c = add i32 %v1_1551c, 20
  %v3_1551c = inttoptr i32 %v2_1551c to i32*
  store i32 %v0_1551c, i32* %v3_1551c, align 4
  %v0_15520 = load i32, i32* %ip.global-to-local, align 4
  %v1_15520 = load i32, i32* %r6.global-to-local, align 4
  %v2_15520 = add i32 %v1_15520, 24
  %v3_15520 = inttoptr i32 %v2_15520 to i32*
  store i32 %v0_15520, i32* %v3_15520, align 4
  %v0_15524 = load i32, i32* %lr.global-to-local, align 4
  %v1_15524 = load i32, i32* %r6.global-to-local, align 4
  %v2_15524 = add i32 %v1_15524, 28
  %v3_15524 = inttoptr i32 %v2_15524 to i32*
  store i32 %v0_15524, i32* %v3_15524, align 4
  %v2_15528 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15528, i32* %r4.global-to-local, align 4
  ret i32 %v2_15510

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 84, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @function_15530(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15530:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* @r2, align 4
  %v2_1554c = inttoptr i32 %arg2 to i8*
  %v3_1554c = call i32 @function_12820(i8* %v2_1554c, i32 0)
  %v1_15550 = add i32 %tmp, 4
  %v2_15550 = inttoptr i32 %v1_15550 to i32*
  %v3_15550 = load i32, i32* %v2_15550, align 4
  %v2_15554 = load i32, i32* %arg1, align 4
  store i32 %v2_15554, i32* %r8.global-to-local, align 4
  %v1_15558 = load i32, i32* %r5.global-to-local, align 4
  %v2_15558 = add i32 %v1_15558, 12
  %v3_15558 = inttoptr i32 %v2_15558 to i32*
  store i32 %v3_15550, i32* %v3_15558, align 4
  %v0_1555c = load i32, i32* %r4.global-to-local, align 4
  %v1_1555c = add i32 %v0_1555c, 20
  %v2_1555c = inttoptr i32 %v1_1555c to i32*
  %v3_1555c = load i32, i32* %v2_1555c, align 4
  %v1_15560 = add i32 %v0_1555c, 16
  %v2_15560 = inttoptr i32 %v1_15560 to i32*
  %v3_15560 = load i32, i32* %v2_15560, align 4
  store i32 %v3_15560, i32* %r6.global-to-local, align 4
  %v1_15564 = load i32, i32* %r5.global-to-local, align 4
  %v2_15564 = add i32 %v1_15564, 44
  %v3_15564 = inttoptr i32 %v2_15564 to i32*
  store i32 %v3_1555c, i32* %v3_15564, align 4
  %v0_15568 = load i32, i32* %r4.global-to-local, align 4
  %v1_15568 = add i32 %v0_15568, 24
  %v2_15568 = inttoptr i32 %v1_15568 to i32*
  %v3_15568 = load i32, i32* %v2_15568, align 4
  %v1_1556c = load i32, i32* %r5.global-to-local, align 4
  %v2_1556c = add i32 %v1_1556c, 48
  %v3_1556c = inttoptr i32 %v2_1556c to i32*
  store i32 %v3_15568, i32* %v3_1556c, align 4
  %v0_15570 = load i32, i32* %r4.global-to-local, align 4
  %v1_15570 = add i32 %v0_15570, 28
  %v2_15570 = inttoptr i32 %v1_15570 to i32*
  %v3_15570 = load i32, i32* %v2_15570, align 4
  %v1_15574 = load i32, i32* %r5.global-to-local, align 4
  %v2_15574 = add i32 %v1_15574, 52
  %v3_15574 = inttoptr i32 %v2_15574 to i32*
  store i32 %v3_15570, i32* %v3_15574, align 4
  %v0_15578 = load i32, i32* %r4.global-to-local, align 4
  %v1_15578 = add i32 %v0_15578, 32
  %v1_1557c = inttoptr i32 %v1_15578 to i32*
  %v2_1557c = load i32, i32* %v1_1557c, align 4
  %v3_1557c = add i32 %v0_15578, 36
  %v4_1557c = inttoptr i32 %v3_1557c to i32*
  %v5_1557c = load i32, i32* %v4_1557c, align 4
  store i32 %v5_1557c, i32* %r1.global-to-local, align 4
  %v0_15580 = load i32, i32* %r5.global-to-local, align 4
  %v1_15580 = add i32 %v0_15580, 56
  %v1_15584 = inttoptr i32 %v1_15580 to i32*
  store i32 %v2_1557c, i32* %v1_15584, align 4
  %v3_15584 = add i32 %v0_15580, 60
  %v4_15584 = inttoptr i32 %v3_15584 to i32*
  %v5_15584 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_15584, i32* %v4_15584, align 4
  %v0_15588 = load i32, i32* %r4.global-to-local, align 4
  %v1_15588 = add i32 %v0_15588, 40
  %v1_1558c = inttoptr i32 %v1_15588 to i32*
  %v2_1558c = load i32, i32* %v1_1558c, align 4
  %v3_1558c = add i32 %v0_15588, 44
  %v4_1558c = inttoptr i32 %v3_1558c to i32*
  %v5_1558c = load i32, i32* %v4_1558c, align 4
  store i32 %v5_1558c, i32* %r1.global-to-local, align 4
  %v0_15590 = load i32, i32* %r5.global-to-local, align 4
  %v1_15590 = add i32 %v0_15590, 64
  %v1_15594 = inttoptr i32 %v1_15590 to i32*
  store i32 %v2_1558c, i32* %v1_15594, align 4
  %v3_15594 = add i32 %v0_15590, 68
  %v4_15594 = inttoptr i32 %v3_15594 to i32*
  %v5_15594 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_15594, i32* %v4_15594, align 4
  %v0_15598 = load i32, i32* %r4.global-to-local, align 4
  %v1_15598 = add i32 %v0_15598, 48
  %v1_1559c = inttoptr i32 %v1_15598 to i32*
  %v2_1559c = load i32, i32* %v1_1559c, align 4
  %v3_1559c = add i32 %v0_15598, 52
  %v4_1559c = inttoptr i32 %v3_1559c to i32*
  %v5_1559c = load i32, i32* %v4_1559c, align 4
  store i32 %v5_1559c, i32* %r1.global-to-local, align 4
  %v1_155a0 = add i32 %v0_15598, 8
  %v2_155a0 = inttoptr i32 %v1_155a0 to i16*
  %v3_155a0 = load i16, i16* %v2_155a0, align 2
  %v4_155a0 = zext i16 %v3_155a0 to i32
  store i32 %v4_155a0, i32* %r2.global-to-local, align 4
  %v1_155a4 = add i32 %v0_15598, 10
  %v2_155a4 = inttoptr i32 %v1_155a4 to i16*
  %v3_155a4 = load i16, i16* %v2_155a4, align 2
  %v4_155a4 = zext i16 %v3_155a4 to i32
  store i32 %v4_155a4, i32* %ip.global-to-local, align 4
  %v1_155a8 = add i32 %v0_15598, 12
  %v2_155a8 = inttoptr i32 %v1_155a8 to i16*
  %v3_155a8 = load i16, i16* %v2_155a8, align 2
  %v4_155a8 = zext i16 %v3_155a8 to i32
  store i32 %v4_155a8, i32* %lr.global-to-local, align 4
  %v1_155ac = add i32 %v0_15598, 14
  %v2_155ac = inttoptr i32 %v1_155ac to i16*
  %v3_155ac = load i16, i16* %v2_155ac, align 2
  %v4_155ac = zext i16 %v3_155ac to i32
  store i32 %v4_155ac, i32* %r4.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_155b8 = load i32, i32* %r5.global-to-local, align 4
  %v1_155b8 = add i32 %v0_155b8, 72
  %v1_155bc = inttoptr i32 %v1_155b8 to i32*
  store i32 %v2_1559c, i32* %v1_155bc, align 4
  %v3_155bc = add i32 %v0_155b8, 76
  %v4_155bc = inttoptr i32 %v3_155bc to i32*
  %v5_155bc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_155bc, i32* %v4_155bc, align 4
  %v0_155c0 = load i32, i32* %r5.global-to-local, align 4
  %v1_155c0 = inttoptr i32 %v0_155c0 to i32*
  %v2_155c0 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v2_155c0, i32* %v1_155c0, align 4
  %v3_155c0 = add i32 %v0_155c0, 4
  %v4_155c0 = inttoptr i32 %v3_155c0 to i32*
  %v5_155c0 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v5_155c0, i32* %v4_155c0, align 4
  %v0_155c4 = load i32, i32* %r6.global-to-local, align 4
  %v1_155c4 = load i32, i32* %r5.global-to-local, align 4
  %v2_155c4 = add i32 %v1_155c4, 32
  %v3_155c4 = inttoptr i32 %v2_155c4 to i32*
  store i32 %v0_155c4, i32* %v3_155c4, align 4
  %v0_155c8 = load i32, i32* %r7.global-to-local, align 4
  %v1_155c8 = load i32, i32* %r5.global-to-local, align 4
  %v2_155c8 = add i32 %v1_155c8, 36
  %v3_155c8 = inttoptr i32 %v2_155c8 to i32*
  store i32 %v0_155c8, i32* %v3_155c8, align 4
  %v0_155cc = load i32, i32* %r2.global-to-local, align 4
  %v1_155cc = load i32, i32* %r5.global-to-local, align 4
  %v2_155cc = add i32 %v1_155cc, 16
  %v3_155cc = inttoptr i32 %v2_155cc to i32*
  store i32 %v0_155cc, i32* %v3_155cc, align 4
  %v0_155d0 = load i32, i32* %ip.global-to-local, align 4
  %v1_155d0 = load i32, i32* %r5.global-to-local, align 4
  %v2_155d0 = add i32 %v1_155d0, 20
  %v3_155d0 = inttoptr i32 %v2_155d0 to i32*
  store i32 %v0_155d0, i32* %v3_155d0, align 4
  %v0_155d4 = load i32, i32* %lr.global-to-local, align 4
  %v1_155d4 = load i32, i32* %r5.global-to-local, align 4
  %v2_155d4 = add i32 %v1_155d4, 24
  %v3_155d4 = inttoptr i32 %v2_155d4 to i32*
  store i32 %v0_155d4, i32* %v3_155d4, align 4
  %v0_155d8 = load i32, i32* %r4.global-to-local, align 4
  %v1_155d8 = load i32, i32* %r5.global-to-local, align 4
  %v2_155d8 = add i32 %v1_155d8, 28
  %v3_155d8 = inttoptr i32 %v2_155d8 to i32*
  store i32 %v0_155d8, i32* %v3_155d8, align 4
  ret i32 %v2_1559c

; uselistorder directives
  uselistorder i32 %v0_15598, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 76, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 68, { 0, 1, 7, 2, 3, 4, 5, 6, 8 }
  uselistorder i32 60, { 3, 4, 1, 5, 6, 0, 7, 8, 2, 9 }
  uselistorder i32 88, { 6, 1, 2, 3, 4, 0, 5 }
}

define i32 @function_155e8() local_unnamed_addr {
dec_label_pc_155e8:
  %stack_var_-16 = alloca i32, align 4
  %v2_155ec = ptrtoint i32* %stack_var_-16 to i32
  %v2_155f8 = call i32 @function_17328(i32 7, i32 %v2_155ec)
  %v1_155fc = icmp slt i32 %v2_155f8, 0
  %v5_15600 = load i32, i32* %stack_var_-16, align 4
  %storemerge = select i1 %v1_155fc, i32 256, i32 %v5_15600
  ret i32 %storemerge
}

define i32 @function_15614(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15614:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15614 = load i32, i32* @r7, align 4
  store i32 %v3_15614, i32* %stack_var_-8, align 4
  %v0_15620 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_15620, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_15620, -4095
  br i1 %tmp, label %dec_label_pc_15640, label %dec_label_pc_15630

dec_label_pc_15630:                               ; preds = %dec_label_pc_15614
  %v0_15630 = call i32 @function_127c4()
  %v0_15634 = load i32, i32* %r7.global-to-local, align 4
  %v1_15634 = sub i32 0, %v0_15634
  %v2_15638 = inttoptr i32 %v0_15630 to i32*
  store i32 %v1_15634, i32* %v2_15638, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_15640.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_15640

dec_label_pc_15640:                               ; preds = %dec_label_pc_15614, %dec_label_pc_15630
  %v1_15644 = phi i32 [ %v0_15620, %dec_label_pc_15614 ], [ -1, %dec_label_pc_15630 ]
  %v2_15640 = phi i32 [ %v3_15614, %dec_label_pc_15614 ], [ %v2_15640.pre, %dec_label_pc_15630 ]
  store i32 %v2_15640, i32* @r7, align 4
  ret i32 %v1_15644

; uselistorder directives
  uselistorder i32 %v0_15620, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15640, { 1, 0 }
}

define i32 @function_15648(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15648:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15648 = load i32, i32* @r7, align 4
  store i32 %v3_15648, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_15670, label %dec_label_pc_15660

dec_label_pc_15660:                               ; preds = %dec_label_pc_15648
  %v0_15660 = call i32 @function_127c4()
  %v0_15664 = load i32, i32* %r7.global-to-local, align 4
  %v1_15664 = sub i32 0, %v0_15664
  %v2_15668 = inttoptr i32 %v0_15660 to i32*
  store i32 %v1_15664, i32* %v2_15668, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_15674.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_15670

dec_label_pc_15670:                               ; preds = %dec_label_pc_15648, %dec_label_pc_15660
  %v2_15674 = phi i32 [ %v3_15648, %dec_label_pc_15648 ], [ %v2_15674.pre, %dec_label_pc_15660 ]
  %v0_15670 = phi i32 [ %arg1, %dec_label_pc_15648 ], [ -1, %dec_label_pc_15660 ]
  store i32 %v2_15674, i32* @r7, align 4
  ret i32 %v0_15670

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15670, { 1, 0 }
}

define i32 @function_1567c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1567c:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_156b0, label %dec_label_pc_156a0

dec_label_pc_156a0:                               ; preds = %dec_label_pc_1567c
  %v0_156a0 = call i32 @function_127c4()
  %v0_156a4 = load i32, i32* %r4.global-to-local, align 4
  %v1_156a4 = sub i32 0, %v0_156a4
  %v2_156a8 = inttoptr i32 %v0_156a0 to i32*
  store i32 %v1_156a4, i32* %v2_156a8, align 4
  br label %dec_label_pc_156b0

dec_label_pc_156b0:                               ; preds = %dec_label_pc_1567c, %dec_label_pc_156a0
  %v1_156b8 = phi i32 [ %arg1, %dec_label_pc_1567c ], [ -1, %dec_label_pc_156a0 ]
  ret i32 %v1_156b8

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_156b0, { 1, 0 }
}

define i32 @function_156bc(i32 %arg1) local_unnamed_addr {
dec_label_pc_156bc:
  %v1_156cc = load i32, i32* @r0, align 4
  ret i32 %v1_156cc
}

define i32 @function_156d0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_156d0:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_156d0 = load i32, i32* @r7, align 4
  store i32 %v3_156d0, i32* %stack_var_-8, align 4
  %v0_156dc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_156dc, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_156dc, -4095
  br i1 %tmp, label %dec_label_pc_156fc, label %dec_label_pc_156ec

dec_label_pc_156ec:                               ; preds = %dec_label_pc_156d0
  %v0_156ec = call i32 @function_127c4()
  %v0_156f0 = load i32, i32* %r7.global-to-local, align 4
  %v1_156f0 = sub i32 0, %v0_156f0
  %v2_156f4 = inttoptr i32 %v0_156ec to i32*
  store i32 %v1_156f0, i32* %v2_156f4, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_156fc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_156fc

dec_label_pc_156fc:                               ; preds = %dec_label_pc_156d0, %dec_label_pc_156ec
  %v1_15700 = phi i32 [ %v0_156dc, %dec_label_pc_156d0 ], [ -1, %dec_label_pc_156ec ]
  %v2_156fc = phi i32 [ %v3_156d0, %dec_label_pc_156d0 ], [ %v2_156fc.pre, %dec_label_pc_156ec ]
  store i32 %v2_156fc, i32* @r7, align 4
  ret i32 %v1_15700

; uselistorder directives
  uselistorder i32 %v0_156dc, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_156fc, { 1, 0 }
}

define i32 @function_15704(i32 %arg1) local_unnamed_addr {
dec_label_pc_15704:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15708.outer

dec_label_pc_15708.outer:                         ; preds = %dec_label_pc_15720, %dec_label_pc_15704
  %v0_15708.ph = phi i32 [ %v0_15708.pre.pre, %dec_label_pc_15720 ], [ %arg1, %dec_label_pc_15704 ]
  %tmp = icmp ult i32 %v0_15708.ph, -4095
  br label %dec_label_pc_15708

dec_label_pc_15708:                               ; preds = %dec_label_pc_15708.outer, %dec_label_pc_15708
  br i1 %tmp, label %dec_label_pc_15708, label %dec_label_pc_15720

dec_label_pc_15720:                               ; preds = %dec_label_pc_15708
  %v0_15720 = call i32 @function_127c4()
  %v1_15724 = sub i32 0, %v0_15708.ph
  %v2_15728 = inttoptr i32 %v0_15720 to i32*
  store i32 %v1_15724, i32* %v2_15728, align 4
  %v0_15708.pre.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15708.outer

; uselistorder directives
  uselistorder i32 %v0_15708.ph, { 1, 0 }
  uselistorder label %dec_label_pc_15708, { 1, 0 }
}

define i32 @function_15730(i32* %arg1) local_unnamed_addr {
dec_label_pc_15730:
  %ip.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 98320, i32* @r6, align 4
  %v1_15744 = add i32 %tmp, 24
  store i32 %v1_15744, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_1575c = load i32, i32* inttoptr (i32 98392 to i32*), align 8
  store i32 %v4_1575c, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1575c)
  %v0_15770 = load i32, i32* @r6, align 4
  %v2_15770 = add i32 %v0_15770, 16
  %v3_15770 = inttoptr i32 %v2_15770 to i32*
  %v4_15770 = load i32, i32* %v3_15770, align 4
  store i32 %v4_15770, i32* %ip.global-to-local, align 4
  store i32 87932, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_15770)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_15780

dec_label_pc_15780:                               ; preds = %dec_label_pc_157b0, %dec_label_pc_15730
  %v0_15780 = load i32, i32* @r5, align 4
  %v1_15780 = add i32 %v0_15780, 4
  %v2_15780 = inttoptr i32 %v1_15780 to i32*
  %v3_15780 = load i32, i32* %v2_15780, align 4
  %v4_15780 = add i32 %v0_15780, 8
  %v5_15780 = inttoptr i32 %v4_15780 to i32*
  %v6_15780 = load i32, i32* %v5_15780, align 4
  %tmp10 = icmp ugt i32 %v6_15780, %v3_15780
  br i1 %tmp10, label %dec_label_pc_157b0, label %dec_label_pc_1578c

dec_label_pc_1578c:                               ; preds = %dec_label_pc_15780
  %v1_1578c = inttoptr i32 %v0_15780 to i32*
  %v2_1578c = load i32, i32* %v1_1578c, align 4
  %v1_15790 = add i32 %v0_15780, 12
  %v2_15790 = inttoptr i32 %v1_15790 to i32*
  %v3_15790 = load i32, i32* %v2_15790, align 4
  %v1_15794 = add i32 %v0_15780, 20
  %v2_15794 = inttoptr i32 %v1_15794 to i32*
  %v3_15794 = load i32, i32* %v2_15794, align 4
  %v4_15798 = inttoptr i32 %v3_15790 to i32*
  %v5_15798 = call i32 @function_1735c(i32 %v2_1578c, i32* %v4_15798, i32 %v3_15794, i32 %v6_15780)
  %tmp9 = icmp slt i32 %v5_15798, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_157a8

.thread:                                          ; preds = %dec_label_pc_1578c
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_157e0

dec_label_pc_157a8:                               ; preds = %dec_label_pc_1578c
  %v1_157a8 = load i32, i32* @r5, align 4
  %v2_157a8 = add i32 %v1_157a8, 8
  %v3_157a8 = inttoptr i32 %v2_157a8 to i32*
  store i32 %v5_15798, i32* %v3_157a8, align 4
  %v0_157ac = load i32, i32* @r7, align 4
  %v1_157ac = load i32, i32* @r5, align 4
  %v2_157ac = add i32 %v1_157ac, 4
  %v3_157ac = inttoptr i32 %v2_157ac to i32*
  store i32 %v0_157ac, i32* %v3_157ac, align 4
  %v0_157b0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_157b0

dec_label_pc_157b0:                               ; preds = %dec_label_pc_15780, %dec_label_pc_157a8
  %v1_157d4 = phi i32 [ %v0_15780, %dec_label_pc_15780 ], [ %v0_157b0.pre, %dec_label_pc_157a8 ]
  %v1_157b0 = add i32 %v1_157d4, 4
  %v2_157b0 = inttoptr i32 %v1_157b0 to i32*
  %v3_157b0 = load i32, i32* %v2_157b0, align 4
  %v1_157b4 = add i32 %v1_157d4, 12
  %v2_157b4 = inttoptr i32 %v1_157b4 to i32*
  %v3_157b4 = load i32, i32* %v2_157b4, align 4
  %v2_157b8 = add i32 %v3_157b4, %v3_157b0
  store i32 %v2_157b8, i32* @r4, align 4
  %v3_157bc = inttoptr i32 %v2_157b8 to i32*
  %v4_157bc = load i32, i32* %v3_157bc, align 4
  %v1_157c0 = add i32 %v2_157b8, 4
  %v2_157c0 = inttoptr i32 %v1_157c0 to i32*
  %v3_157c0 = load i32, i32* %v2_157c0, align 4
  %v1_157c4 = add i32 %v2_157b8, 16
  %v2_157c4 = inttoptr i32 %v1_157c4 to i16*
  %v3_157c4 = load i16, i16* %v2_157c4, align 2
  %v4_157c4 = zext i16 %v3_157c4 to i32
  %v1_157c8 = add i32 %v2_157b8, 8
  %v2_157c8 = inttoptr i32 %v1_157c8 to i32*
  %v3_157c8 = load i32, i32* %v2_157c8, align 4
  store i32 %v3_157c8, i32* %ip.global-to-local, align 4
  %v2_157cc = add i32 %v4_157c4, %v3_157b0
  %v2_157d0 = or i32 %v3_157c0, %v4_157bc
  %v4_157d0 = icmp eq i32 %v2_157d0, 0
  store i32 %v2_157cc, i32* %v2_157b0, align 4
  %v0_157d8 = load i32, i32* %ip.global-to-local, align 4
  %v1_157d8 = load i32, i32* @r5, align 4
  %v2_157d8 = add i32 %v1_157d8, 16
  %v3_157d8 = inttoptr i32 %v2_157d8 to i32*
  store i32 %v0_157d8, i32* %v3_157d8, align 4
  br i1 %v4_157d0, label %dec_label_pc_15780, label %dec_label_pc_157e0

dec_label_pc_157e0:                               ; preds = %dec_label_pc_157b0, %.thread
  %v0_157ec = load i32, i32* @r6, align 4
  %v2_157ec = add i32 %v0_157ec, 24
  %v3_157ec = inttoptr i32 %v2_157ec to i32*
  %v4_157ec = load i32, i32* %v3_157ec, align 4
  store i32 %v4_157ec, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_157ec)
  %v0_157f8 = load i32, i32* @r4, align 4
  ret i32 %v0_157f8

; uselistorder directives
  uselistorder i32 %v2_157b8, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_157d4, { 1, 0 }
  uselistorder i32 %v6_15780, { 1, 0 }
  uselistorder i32 %v0_15780, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_157b0, { 1, 0 }
}

define i32 @function_15808(i32 %arg1) local_unnamed_addr {
dec_label_pc_15808:
  %v0_15808 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15808, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_15808
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_15808, %bb
  %v10_15818 = phi i32 [ %arg1, %dec_label_pc_15808 ], [ 0, %bb ]
  ret i32 %v10_15818

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @function_1581c(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1581c:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_1581c = load i32, i32* @r4, align 4
  %v6_1581c = load i32, i32* @r5, align 4
  %v9_1581c = load i32, i32* @r6, align 4
  %v12_1581c = load i32, i32* @r7, align 4
  %v15_1581c = load i32, i32* @r8, align 4
  %v18_1581c = load i32, i32* @sb, align 4
  %v21_1581c = load i32, i32* @sl, align 4
  %v24_1581c = load i32, i32* @fp, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_15820 = icmp eq i32* %arg1, null
  store i1 %v2_15820, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_15820, label %dec_label_pc_15b30, label %dec_label_pc_15838

dec_label_pc_15838:                               ; preds = %dec_label_pc_1581c
  %v1_15838 = urem i32 %arg3, 256
  store i32 %v1_15838, i32* @sb, align 4
  %v1_1583c = udiv i32 %arg3, 256
  %v3_15840 = urem i32 %v1_1583c, 256
  %v3_15844 = mul nuw nsw i32 %v1_15838, 4
  %v1_1584c = or i32 %v3_15844, 1
  %v1_15858 = and i32 %arg3, 131072
  %v1_1585c = add nsw i32 %v1_15838, -1
  %v1_15868 = and i32 %arg3, 262144
  store i32 %v1_15868, i32* %r2.global-to-local, align 4
  %v1_1586c = and i32 %arg3, 65536
  store i32 %v1_1586c, i32* %r3.global-to-local, align 4
  store i32 %v1_1586c, i32* %stack_var_-72, align 4
  store i32 0, i32* @fp, align 4
  %v1_1587c = add i32 %arg4, 1
  store i32 %v1_1587c, i32* @sl, align 4
  %v2_159fc = inttoptr i32 %arg2 to i32*
  %v2_15a0c = icmp eq i32 %v1_15858, 0
  %v2_15a64 = icmp eq i32 %v1_15868, 0
  br label %dec_label_pc_15880

dec_label_pc_15880:                               ; preds = %dec_label_pc_15880.backedge, %dec_label_pc_15838
  %v2_1589c = phi i32 [ %v0_15880.pre, %dec_label_pc_15880.backedge ], [ %tmp, %dec_label_pc_15838 ]
  %v1_15880 = add i32 %v2_1589c, 4
  %v2_15880 = inttoptr i32 %v1_15880 to i32*
  %v3_15880 = load i32, i32* %v2_15880, align 4
  store i32 %v3_15880, i32* %r3.global-to-local, align 4
  %v2_15884 = icmp eq i32 %v3_15880, 0
  store i1 %v2_15884, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15884, label %dec_label_pc_1588c, label %dec_label_pc_158d4

dec_label_pc_1588c:                               ; preds = %dec_label_pc_15880
  %v1_1588c = add i32 %v2_1589c, 16
  %v2_1588c = inttoptr i32 %v1_1588c to i32*
  %v3_1588c = load i32, i32* %v2_1588c, align 4
  store i32 %v3_1588c, i32* %r3.global-to-local, align 4
  %v2_15890 = icmp eq i32 %v3_1588c, 0
  store i1 %v2_15890, i1* %cpsr_z.global-to-local, align 1
  %v1_15894 = add i32 %v2_1589c, 8
  %v2_15894 = inttoptr i32 %v1_15894 to i32*
  %v3_15894 = load i32, i32* %v2_15894, align 4
  store i32 %v3_15894, i32* %r3.global-to-local, align 4
  br i1 %v2_15890, label %bb, label %bb66

bb:                                               ; preds = %dec_label_pc_1588c
  store i32 81, i32* %r2.global-to-local, align 4
  store i32 81, i32* %v2_1588c, align 4
  %v0_158a0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_1588c, %bb
  %v0_158a0 = phi i32 [ %v0_158a0.pre, %bb ], [ %v3_15894, %dec_label_pc_1588c ]
  %v2_158a0 = icmp eq i32 %v0_158a0, 0
  store i1 %v2_158a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_158a0, label %bb67, label %.thread

bb67:                                             ; preds = %bb66
  store i32 %v1_1584c, i32* %r3.global-to-local, align 4
  %v2_158a8 = load i32, i32* @r5, align 4
  %v3_158a8 = add i32 %v2_158a8, 8
  %v4_158a8 = inttoptr i32 %v3_158a8 to i32*
  store i32 %v1_1584c, i32* %v4_158a8, align 4
  br label %.thread

.thread:                                          ; preds = %bb66, %bb67
  %v0_158ac = load i32, i32* @r5, align 4
  %v1_158ac = add i32 %v0_158ac, 16
  %v2_158ac = inttoptr i32 %v1_158ac to i32*
  %v3_158ac = load i32, i32* %v2_158ac, align 4
  store i32 %v3_158ac, i32* %r0.global-to-local, align 4
  %v1_158b0 = add i32 %v0_158ac, 8
  %v2_158b0 = inttoptr i32 %v1_158b0 to i32*
  %v3_158b0 = load i32, i32* %v2_158b0, align 4
  store i32 %v3_158b0, i32* %r3.global-to-local, align 4
  %v2_158b4 = add i32 %v3_158b0, %v3_158ac
  store i32 %v2_158b4, i32* @r0, align 4
  %v0_158b8 = call i32 @function_12dc4()
  store i32 %v0_158b8, i32* %r0.global-to-local, align 4
  %v2_158bc = icmp eq i32 %v0_158b8, 0
  store i1 %v2_158bc, i1* %cpsr_z.global-to-local, align 1
  %v1_158c0 = load i32, i32* @r5, align 4
  %v2_158c0 = add i32 %v1_158c0, 4
  %v3_158c0 = inttoptr i32 %v2_158c0 to i32*
  store i32 %v0_158b8, i32* %v3_158c0, align 4
  br i1 %v2_158bc, label %dec_label_pc_15b30, label %dec_label_pc_158c8

dec_label_pc_158c8:                               ; preds = %.thread
  %v0_158c8 = load i32, i32* @r5, align 4
  %v1_158c8 = add i32 %v0_158c8, 20
  %v2_158c8 = inttoptr i32 %v1_158c8 to i32*
  %v3_158c8 = load i32, i32* %v2_158c8, align 4
  %v1_158cc = or i32 %v3_158c8, 1
  store i32 %v1_158cc, i32* %r3.global-to-local, align 4
  store i32 %v1_158cc, i32* %v2_158c8, align 4
  %v0_158d4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_158d4

dec_label_pc_158d4:                               ; preds = %dec_label_pc_15880, %dec_label_pc_158c8
  %v1_158dc = phi i32 [ %v2_1589c, %dec_label_pc_15880 ], [ %v0_158d4.pre, %dec_label_pc_158c8 ]
  %v1_158d4 = add i32 %v1_158dc, 4
  %v2_158d4 = inttoptr i32 %v1_158d4 to i32*
  %v3_158d4 = load i32, i32* %v2_158d4, align 4
  store i32 %v3_158d4, i32* %r2.global-to-local, align 4
  %v4_158d4 = add i32 %v1_158dc, 8
  %v5_158d4 = inttoptr i32 %v4_158d4 to i32*
  %v6_158d4 = load i32, i32* %v5_158d4, align 4
  %v2_158d8 = add i32 %v6_158d4, %v3_158d4
  store i32 %v2_158d8, i32* %r3.global-to-local, align 4
  %v2_158dc = add i32 %v1_158dc, 12
  %v3_158dc = inttoptr i32 %v2_158dc to i32*
  store i32 %v2_158d8, i32* %v3_158dc, align 4
  %v0_158e0 = load i32, i32* @fp, align 4
  store i32 %v0_158e0, i32* @r6, align 4
  br label %dec_label_pc_158e4

dec_label_pc_158e4:                               ; preds = %dec_label_pc_15970, %dec_label_pc_1595c, %dec_label_pc_158d4
  %v0_158ec = phi i32 [ %v0_158e0, %dec_label_pc_158d4 ], [ %v1_1595c, %dec_label_pc_1595c ], [ %v0_158ec.pre.pre, %dec_label_pc_15970 ]
  %v0_158e4 = load i32, i32* @r5, align 4
  %v1_158e4 = add i32 %v0_158e4, 12
  store i32 %v1_158e4, i32* %r0.global-to-local, align 4
  %v1_158e8 = inttoptr i32 %v1_158e4 to i32*
  %v2_158e8 = load i32, i32* %v1_158e8, align 4
  store i32 %v2_158e8, i32* %r0.global-to-local, align 4
  %v3_158e8 = add i32 %v0_158e4, 16
  %v4_158e8 = inttoptr i32 %v3_158e8 to i32*
  %v5_158e8 = load i32, i32* %v4_158e8, align 4
  %v2_158ec = add i32 %v2_158e8, %v0_158ec
  store i32 %v2_158ec, i32* %r0.global-to-local, align 4
  %v2_158f0 = sub i32 %v5_158e8, %v0_158ec
  %v1_158f4 = inttoptr i32 %v0_158e4 to i32*
  %v2_158f4 = load i32, i32* %v1_158f4, align 4
  store i32 %v2_158f4, i32* %r2.global-to-local, align 4
  %v3_158f8 = call i32 @function_16318(i32 %v2_158ec, i32 %v2_158f0, i32 %v2_158f4)
  store i32 %v3_158f8, i32* %r0.global-to-local, align 4
  store i32 %v3_158f8, i32* %r4.global-to-local, align 4
  %v2_158fc = icmp eq i32 %v3_158f8, 0
  store i1 %v2_158fc, i1* %cpsr_z.global-to-local, align 1
  %v0_15904 = load i32, i32* @r5, align 4
  %v1_15904 = add i32 %v0_15904, 12
  br i1 %v2_158fc, label %dec_label_pc_15904, label %dec_label_pc_1591c

dec_label_pc_15904:                               ; preds = %dec_label_pc_158e4
  store i32 %v1_15904, i32* %r0.global-to-local, align 4
  %v1_15908 = inttoptr i32 %v1_15904 to i32*
  %v2_15908 = load i32, i32* %v1_15908, align 4
  store i32 %v2_15908, i32* %r0.global-to-local, align 4
  %v3_15908 = add i32 %v0_15904, 16
  %v4_15908 = inttoptr i32 %v3_15908 to i32*
  %v5_15908 = load i32, i32* %v4_15908, align 4
  store i32 %v5_15908, i32* @r2, align 4
  %v2_15910 = inttoptr i32 %v2_15908 to i8*
  %v3_15910 = call i32 @function_12820(i8* %v2_15910, i32 0)
  store i32 %v3_15910, i32* %r0.global-to-local, align 4
  %v0_15914 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15b34

dec_label_pc_1591c:                               ; preds = %dec_label_pc_158e4
  %v2_1591c = inttoptr i32 %v1_15904 to i32*
  %v3_1591c = load i32, i32* %v2_1591c, align 4
  store i32 %v3_1591c, i32* @r4, align 4
  %v1_15920 = load i32, i32* @r6, align 4
  %v2_15920 = add i32 %v1_15920, %v3_1591c
  store i32 %v2_15920, i32* %r0.global-to-local, align 4
  %v1_15924 = call i32 @function_16dd0(i32 %v2_15920)
  %v0_1592c = load i32, i32* @r6, align 4
  %v2_1592c = add i32 %v0_1592c, %v1_15924
  store i32 %v2_1592c, i32* @r6, align 4
  %v0_15930 = load i32, i32* @r4, align 4
  store i32 %v0_15930, i32* @r0, align 4
  %v2_15934 = call i32 @function_1701c(i32 %v0_15930, i32 10)
  store i32 %v2_15934, i32* %r0.global-to-local, align 4
  %v2_15938 = icmp eq i32 %v2_15934, 0
  store i1 %v2_15938, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15938, label %dec_label_pc_15964, label %dec_label_pc_15940

dec_label_pc_15940:                               ; preds = %dec_label_pc_1591c
  %v1_15940 = inttoptr i32 %v2_15934 to i8*
  %v2_15940 = load i8, i8* %v1_15940, align 1
  %v3_15940 = zext i8 %v2_15940 to i32
  %v1_15944 = add nuw nsw i32 %v3_15940, 255
  %v1_15948 = urem i32 %v1_15944, 256
  store i32 %v1_15948, i32* %r3.global-to-local, align 4
  %v7_1594c = icmp eq i32 %v1_15948, 92
  store i1 %v7_1594c, i1* %cpsr_z.global-to-local, align 1
  %v1_15950 = trunc i32 %v1_15944 to i8
  store i8 %v1_15950, i8* %v1_15940, align 1
  %v0_15954 = load i32, i32* @r6, align 4
  %v1_15954 = add i32 %v0_15954, -1
  store i32 %v1_15954, i32* @r6, align 4
  %v0_15958 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15958, label %dec_label_pc_1595c, label %dec_label_pc_159e8

dec_label_pc_1595c:                               ; preds = %dec_label_pc_15940
  %v1_1595c = add i32 %v0_15954, -2
  store i32 %v1_1595c, i32* @r6, align 4
  br label %dec_label_pc_158e4

dec_label_pc_15964:                               ; preds = %dec_label_pc_1591c
  %v0_15964 = load i32, i32* @r5, align 4
  %v1_15964 = add i32 %v0_15964, 20
  %v2_15964 = inttoptr i32 %v1_15964 to i32*
  %v3_15964 = load i32, i32* %v2_15964, align 4
  store i32 %v3_15964, i32* %r3.global-to-local, align 4
  %v2_15968 = icmp eq i32 %v3_15964, 0
  store i1 %v2_15968, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15968, label %dec_label_pc_159a0, label %dec_label_pc_15970

dec_label_pc_15970:                               ; preds = %dec_label_pc_15964
  %v1_15970 = add i32 %v0_15964, 16
  %v2_15970 = inttoptr i32 %v1_15970 to i32*
  %v3_15970 = load i32, i32* %v2_15970, align 4
  store i32 %v3_15970, i32* %r3.global-to-local, align 4
  %v1_15974 = add i32 %v0_15964, 8
  %v2_15974 = inttoptr i32 %v1_15974 to i32*
  %v3_15974 = load i32, i32* %v2_15974, align 4
  %v1_15978 = add i32 %v3_15970, 4096
  store i32 %v1_15978, i32* %r3.global-to-local, align 4
  %v2_1597c = add i32 %v3_15974, %v1_15978
  store i32 %v1_15978, i32* %v2_15970, align 4
  %v0_15984 = load i32, i32* @r5, align 4
  %v1_15984 = add i32 %v0_15984, 4
  %v2_15984 = inttoptr i32 %v1_15984 to i32*
  %v3_15984 = load i32, i32* %v2_15984, align 4
  store i32 %v3_15984, i32* %r0.global-to-local, align 4
  %v4_15988 = inttoptr i32 %v3_15984 to i32*
  %v5_15988 = call i32 @function_13818(i32* %v4_15988, i32 %v2_1597c, i32 %v2_158f4, i32 %v1_15978)
  store i32 %v5_15988, i32* %r0.global-to-local, align 4
  %v0_1598c = load i32, i32* @r5, align 4
  %v1_1598c = add i32 %v0_1598c, 8
  %v2_1598c = inttoptr i32 %v1_1598c to i32*
  %v3_1598c = load i32, i32* %v2_1598c, align 4
  %v2_15990 = add i32 %v3_1598c, %v5_15988
  store i32 %v2_15990, i32* %r3.global-to-local, align 4
  %v2_15994 = add i32 %v0_1598c, 12
  %v3_15994 = inttoptr i32 %v2_15994 to i32*
  store i32 %v2_15990, i32* %v3_15994, align 4
  %v1_15998 = load i32, i32* @r5, align 4
  %v2_15998 = add i32 %v1_15998, 4
  %v3_15998 = inttoptr i32 %v2_15998 to i32*
  store i32 %v5_15988, i32* %v3_15998, align 4
  %v0_158ec.pre.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_158e4

dec_label_pc_159a0:                               ; preds = %dec_label_pc_15964, %.dec_label_pc_159a0_crit_edge
  %v0_159a0 = phi i32 [ %v0_159a0.pre, %.dec_label_pc_159a0_crit_edge ], [ %v0_15964, %dec_label_pc_15964 ]
  %v1_159a0 = inttoptr i32 %v0_159a0 to i32*
  %v2_159a0 = load i32, i32* %v1_159a0, align 4
  %v1_159a4 = add i32 %v2_159a0, 52
  %v2_159a4 = inttoptr i32 %v1_159a4 to i32*
  %v3_159a4 = load i32, i32* %v2_159a4, align 4
  store i32 %v3_159a4, i32* %r3.global-to-local, align 4
  %v2_159a8 = icmp eq i32 %v3_159a4, 0
  store i1 %v2_159a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_159a8, label %dec_label_pc_159d4, label %dec_label_pc_159b0

dec_label_pc_159b0:                               ; preds = %dec_label_pc_159a0
  %v1_159b0 = add i32 %v2_159a0, 16
  %v2_159b0 = inttoptr i32 %v1_159b0 to i32*
  %v3_159b0 = load i32, i32* %v2_159b0, align 4
  store i32 %v3_159b0, i32* %r2.global-to-local, align 4
  %v1_159b4 = add i32 %v2_159a0, 24
  %v2_159b4 = inttoptr i32 %v1_159b4 to i32*
  %v3_159b4 = load i32, i32* %v2_159b4, align 4
  store i32 %v3_159b4, i32* %r3.global-to-local, align 4
  %v3_159b8 = icmp ult i32 %v3_159b0, %v3_159b4
  %v9_159b8 = icmp eq i32 %v3_159b0, %v3_159b4
  store i1 %v9_159b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_159b8, label %dec_label_pc_159dcthread-pre-split, label %dec_label_pc_159c8

dec_label_pc_159c8:                               ; preds = %dec_label_pc_159b0
  store i32 %v2_159a0, i32* %r0.global-to-local, align 4
  %v1_159cc = inttoptr i32 %v2_159a0 to i16*
  %v2_159cc = call i32 @function_16768(i16* %v1_159cc)
  store i32 %v2_159cc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_159dc

dec_label_pc_159d4:                               ; preds = %dec_label_pc_159a0
  store i32 %v2_159a0, i32* %r0.global-to-local, align 4
  %v1_159d8 = call i32 @function_1623c(i32 %v2_159a0)
  store i32 %v1_159d8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_159dc

dec_label_pc_159dcthread-pre-split:               ; preds = %dec_label_pc_159b0
  %v2_159bc = inttoptr i32 %v3_159b0 to i8*
  %v3_159bc = load i8, i8* %v2_159bc, align 1
  %v4_159bc = zext i8 %v3_159bc to i32
  store i32 %v4_159bc, i32* %r0.global-to-local, align 4
  %v6_159bc = add i32 %v3_159b0, 1
  store i32 %v6_159bc, i32* %r2.global-to-local, align 4
  store i32 %v6_159bc, i32* %v2_159b0, align 4
  %v0_159dc.pr = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_159dc

dec_label_pc_159dc:                               ; preds = %dec_label_pc_159dcthread-pre-split, %dec_label_pc_159c8, %dec_label_pc_159d4
  %v1_159e0 = phi i32 [ %v0_159dc.pr, %dec_label_pc_159dcthread-pre-split ], [ %v2_159cc, %dec_label_pc_159c8 ], [ %v1_159d8, %dec_label_pc_159d4 ]
  %v7_159dc = icmp eq i32 %v1_159e0, 10
  store i1 %v7_159dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_159dc, label %dec_label_pc_159e8.loopexit, label %bb68

bb68:                                             ; preds = %dec_label_pc_159dc
  %v8_159e0 = icmp eq i32 %v1_159e0, -1
  store i1 %v8_159e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_159e0, label %dec_label_pc_159e8.loopexit, label %.dec_label_pc_159a0_crit_edge

.dec_label_pc_159a0_crit_edge:                    ; preds = %bb68
  %v0_159a0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_159a0

dec_label_pc_159e8.loopexit:                      ; preds = %bb68, %dec_label_pc_159dc
  %v0_159e8.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_159e8

dec_label_pc_159e8:                               ; preds = %dec_label_pc_15940, %dec_label_pc_159e8.loopexit
  %v0_159e8 = phi i32 [ %v0_159e8.pre, %dec_label_pc_159e8.loopexit ], [ %v1_15954, %dec_label_pc_15940 ]
  %v7_159e8 = icmp eq i32 %v0_159e8, -1
  store i1 %v7_159e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_159e8, label %dec_label_pc_15b30, label %dec_label_pc_159f0

dec_label_pc_159f0:                               ; preds = %dec_label_pc_159e8
  %v0_159f0 = load i32, i32* @r5, align 4
  %v1_159f0 = add i32 %v0_159f0, 4
  %v2_159f0 = inttoptr i32 %v1_159f0 to i32*
  %v3_159f0 = load i32, i32* %v2_159f0, align 4
  store i32 %v3_159f0, i32* %r0.global-to-local, align 4
  store i32 %v3_15844, i32* @r2, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 %v3_159f0, i32* %v2_159fc, align 4
  %v0_15a00 = load i32, i32* @fp, align 4
  %v2_15a04 = inttoptr i32 %v3_159f0 to i8*
  %v3_15a04 = call i32 @function_12820(i8* %v2_15a04, i32 %v0_15a00)
  store i32 %v3_15a04, i32* %r0.global-to-local, align 4
  store i32 %v1_15858, i32* %r2.global-to-local, align 4
  store i1 %v2_15a0c, i1* %cpsr_z.global-to-local, align 1
  %v0_15a10 = load i32, i32* @r5, align 4
  %v1_15a10 = add i32 %v0_15a10, 12
  %v2_15a10 = inttoptr i32 %v1_15a10 to i32*
  %v3_15a10 = load i32, i32* %v2_15a10, align 4
  store i32 %v3_15a10, i32* @r4, align 4
  br i1 %v2_15a0c, label %dec_label_pc_15a28, label %dec_label_pc_15a18

dec_label_pc_15a18:                               ; preds = %dec_label_pc_159f0
  store i32 %v3_15a10, i32* @r0, align 4
  %v0_15a1c = load i32, i32* @sl, align 4
  %v2_15a20 = inttoptr i32 %v3_15a10 to i8*
  %v3_15a20 = call i32 @function_16e94(i8* %v2_15a20, i32 %v0_15a1c)
  store i32 %v3_15a20, i32* %r0.global-to-local, align 4
  %v0_15a24 = load i32, i32* @r4, align 4
  %v2_15a24 = add i32 %v0_15a24, %v3_15a20
  store i32 %v2_15a24, i32* @r4, align 4
  br label %dec_label_pc_15a28

dec_label_pc_15a28:                               ; preds = %dec_label_pc_159f0, %dec_label_pc_15a18
  %v0_15b0013 = phi i32 [ %v3_15a10, %dec_label_pc_159f0 ], [ %v2_15a24, %dec_label_pc_15a18 ]
  %v1_15a28 = inttoptr i32 %v0_15b0013 to i8*
  %v2_15a28 = load i8, i8* %v1_15a28, align 1
  %v3_15a28 = zext i8 %v2_15a28 to i32
  store i32 %v3_15a28, i32* %r2.global-to-local, align 4
  %v2_15a2c = icmp eq i8 %v2_15a28, 0
  store i1 %v2_15a2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15a2c, label %dec_label_pc_15880.backedge, label %dec_label_pc_15a34

dec_label_pc_15880.backedge:                      ; preds = %dec_label_pc_15a28, %dec_label_pc_15b28, %dec_label_pc_15a34
  %v0_15880.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15880

dec_label_pc_15a34:                               ; preds = %dec_label_pc_15a28
  %v0_15a34 = load i32, i32* @r7, align 4
  %v1_15a34 = inttoptr i32 %v0_15a34 to i8*
  %v2_15a34 = load i8, i8* %v1_15a34, align 1
  %v3_15a34 = zext i8 %v2_15a34 to i32
  store i32 %v3_15a34, i32* %r3.global-to-local, align 4
  %v9_15a38 = icmp eq i8 %v2_15a34, %v2_15a28
  store i1 %v9_15a38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15a38, label %dec_label_pc_15880.backedge, label %dec_label_pc_15b00.preheader

dec_label_pc_15b00.preheader:                     ; preds = %dec_label_pc_15a34
  %v1_15a3c = load i32, i32* @fp, align 4
  store i32 %v1_15a3c, i32* @r6, align 4
  %v2_15b0015 = load i8, i8* %v1_15a28, align 1
  %v3_15b0016 = zext i8 %v2_15b0015 to i32
  store i32 %v3_15b0016, i32* %r2.global-to-local, align 4
  %v2_15b0417 = icmp eq i8 %v2_15b0015, 0
  store i1 %v2_15b0417, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15b0417, label %dec_label_pc_15b1c, label %dec_label_pc_15b0c.preheader

dec_label_pc_15b0c.preheader:                     ; preds = %dec_label_pc_15b00.preheader
  %v2_15b0c82 = load i8, i8* %v1_15a34, align 1
  %v3_15b0c83 = zext i8 %v2_15b0c82 to i32
  store i32 %v3_15b0c83, i32* %r3.global-to-local, align 4
  %v9_15b1086 = icmp eq i8 %v2_15b0c82, %v2_15b0015
  store i1 %v9_15b1086, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15b1086, label %dec_label_pc_15b1c, label %bb74

dec_label_pc_15a48:                               ; preds = %bb74
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v2_15a4c = load i32, i32* %v2_159fc, align 4
  store i32 %v2_15a4c, i32* %r3.global-to-local, align 4
  store i32 %v1_1585c, i32* %r2.global-to-local, align 4
  %v9_15a54 = icmp eq i32 %v2_15a5888, %v1_1585c
  store i1 %v9_15a54, i1* %cpsr_z.global-to-local, align 1
  %v5_15a58 = mul i32 %v2_15a5888, 4
  %v6_15a58 = add i32 %v2_15a4c, %v5_15a58
  %v7_15a58 = inttoptr i32 %v6_15a58 to i32*
  store i32 %v0_15a5887, i32* %v7_15a58, align 4
  br i1 %v9_15a54, label %dec_label_pc_15a60, label %dec_label_pc_15a6c

dec_label_pc_15a60:                               ; preds = %dec_label_pc_15a48
  store i32 %v1_15868, i32* %r3.global-to-local, align 4
  store i1 %v2_15a64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15a64, label %dec_label_pc_15a6c, label %dec_label_pc_15a8c

dec_label_pc_15a6c:                               ; preds = %dec_label_pc_15a60, %dec_label_pc_15a48
  %v0_15a6c = load i32, i32* @r7, align 4
  %v1_15a6c = inttoptr i32 %v0_15a6c to i8*
  %v2_15a6c = load i8, i8* %v1_15a6c, align 1
  %v3_15a6c = zext i8 %v2_15a6c to i32
  store i32 %v3_15a6c, i32* %r3.global-to-local, align 4
  %v2_15a70 = icmp eq i8 %v2_15a6c, 0
  store i1 %v2_15a70, i1* %cpsr_z.global-to-local, align 1
  %v0_15a74 = load i32, i32* @r4, align 4
  store i32 %v0_15a74, i32* @r0, align 4
  %v1_15a78 = load i32, i32* @sl, align 4
  %storemerge = select i1 %v2_15a70, i32 %v1_15a78, i32 %v0_15a6c
  store i32 %storemerge, i32* @r1, align 4
  %v0_15a80 = call i32 @function_16e50()
  store i32 %v0_15a80, i32* %r0.global-to-local, align 4
  %v0_15a84 = load i32, i32* @r4, align 4
  %v2_15a84 = add i32 %v0_15a84, %v0_15a80
  store i32 %v2_15a84, i32* @r4, align 4
  br label %dec_label_pc_15ac4

dec_label_pc_15a8c:                               ; preds = %dec_label_pc_15a60
  %v0_15a8c = load i32, i32* @r4, align 4
  store i32 %v0_15a8c, i32* @r0, align 4
  %v0_15a90 = load i32, i32* @r7, align 4
  %v1_15a90 = inttoptr i32 %v0_15a90 to i8*
  %v2_15a90 = load i8, i8* %v1_15a90, align 1
  %v3_15a90 = zext i8 %v2_15a90 to i32
  %v5_15a94 = call i32 @function_16f30(i32 %v0_15a8c, i32 %v3_15a90, i32 %v1_1585c, i32 %v1_15868)
  store i32 %v5_15a94, i32* %r0.global-to-local, align 4
  store i32 %v1_15858, i32* %r2.global-to-local, align 4
  store i1 %v2_15a0c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_15a94, i32* @r4, align 4
  br i1 %v2_15a0c, label %dec_label_pc_15ac4, label %dec_label_pc_15ab0

dec_label_pc_15aac:                               ; preds = %dec_label_pc_15ab0
  %v1_15aac = add i32 %v0_15ac4.pre, -1
  store i32 %v1_15aac, i32* @r4, align 4
  br label %dec_label_pc_15ab0

dec_label_pc_15ab0:                               ; preds = %dec_label_pc_15a8c, %dec_label_pc_15aac
  %v0_15ab0 = phi i32 [ %v1_15aac, %dec_label_pc_15aac ], [ %v5_15a94, %dec_label_pc_15a8c ]
  %v1_15ab0 = add i32 %v0_15ab0, -1
  %v2_15ab0 = inttoptr i32 %v1_15ab0 to i8*
  %v3_15ab0 = load i8, i8* %v2_15ab0, align 1
  %v4_15ab0 = zext i8 %v3_15ab0 to i32
  %v0_15ab4 = load i32, i32* @sl, align 4
  store i32 %v0_15ab4, i32* @r0, align 4
  %v2_15ab8 = call i32 @function_1701c(i32 %v0_15ab4, i32 %v4_15ab0)
  store i32 %v2_15ab8, i32* %r0.global-to-local, align 4
  %v2_15abc = icmp eq i32 %v2_15ab8, 0
  store i1 %v2_15abc, i1* %cpsr_z.global-to-local, align 1
  %v0_15ac4.pre = load i32, i32* @r4, align 4
  br i1 %v2_15abc, label %dec_label_pc_15ac4, label %dec_label_pc_15aac

dec_label_pc_15ac4:                               ; preds = %dec_label_pc_15ab0, %dec_label_pc_15a8c, %dec_label_pc_15a6c
  %v3_15ad0 = phi i32 [ %v5_15a94, %dec_label_pc_15a8c ], [ %v2_15a84, %dec_label_pc_15a6c ], [ %v0_15ac4.pre, %dec_label_pc_15ab0 ]
  %v1_15ac4 = inttoptr i32 %v3_15ad0 to i8*
  %v2_15ac4 = load i8, i8* %v1_15ac4, align 1
  %v3_15ac4 = zext i8 %v2_15ac4 to i32
  store i32 %v3_15ac4, i32* %r2.global-to-local, align 4
  %v0_15ac8 = load i32, i32* @r7, align 4
  %v1_15ac8 = inttoptr i32 %v0_15ac8 to i8*
  %v2_15ac8 = load i8, i8* %v1_15ac8, align 1
  %v3_15ac8 = zext i8 %v2_15ac8 to i32
  store i32 %v3_15ac8, i32* %r3.global-to-local, align 4
  %v9_15acc = icmp eq i8 %v2_15ac8, %v2_15ac4
  store i1 %v9_15acc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15acc, label %bb71, label %dec_label_pc_15ad8

bb71:                                             ; preds = %dec_label_pc_15ac4
  %v1_15ad0 = load i32, i32* @fp, align 4
  %v2_15ad0 = trunc i32 %v1_15ad0 to i8
  store i8 %v2_15ad0, i8* %v1_15ac4, align 1
  %v0_15ad4.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15ad4.pr, label %bb73, label %.dec_label_pc_15ad8_crit_edge

.dec_label_pc_15ad8_crit_edge:                    ; preds = %bb71
  %v0_15ad8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15ad8

dec_label_pc_15ad8:                               ; preds = %.dec_label_pc_15ad8_crit_edge, %dec_label_pc_15ac4
  %v0_15ad8 = phi i32 [ %v0_15ad8.pre, %.dec_label_pc_15ad8_crit_edge ], [ %v3_15ac4, %dec_label_pc_15ac4 ]
  %v2_15ad8 = icmp eq i32 %v0_15ad8, 0
  store i1 %v2_15ad8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15ad8, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_15ad8
  %v1_15adc = load i32, i32* @fp, align 4
  %v2_15adc = trunc i32 %v1_15adc to i8
  %v3_15adc = load i32, i32* @r4, align 4
  %v4_15adc = inttoptr i32 %v3_15adc to i8*
  store i8 %v2_15adc, i8* %v4_15adc, align 1
  %v5_15adc = load i32, i32* @r4, align 4
  %v6_15adc = add i32 %v5_15adc, 1
  store i32 %v6_15adc, i32* @r4, align 4
  br label %bb73

bb73:                                             ; preds = %bb71, %dec_label_pc_15ad8, %bb72
  %v2_15ae0 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_15ae0, i32* %r3.global-to-local, align 4
  %v2_15ae4 = icmp eq i32 %v2_15ae0, 0
  store i1 %v2_15ae4, i1* %cpsr_z.global-to-local, align 1
  %v0_15b00.pre = load i32, i32* @r4, align 4
  br i1 %v2_15ae4, label %dec_label_pc_15afc, label %dec_label_pc_15aec

dec_label_pc_15aec:                               ; preds = %bb73
  store i32 %v0_15b00.pre, i32* @r0, align 4
  %v0_15af0 = load i32, i32* @sl, align 4
  %v2_15af4 = inttoptr i32 %v0_15b00.pre to i8*
  %v3_15af4 = call i32 @function_16e94(i8* %v2_15af4, i32 %v0_15af0)
  store i32 %v3_15af4, i32* %r0.global-to-local, align 4
  %v0_15af8 = load i32, i32* @r4, align 4
  %v2_15af8 = add i32 %v0_15af8, %v3_15af4
  store i32 %v2_15af8, i32* @r4, align 4
  br label %dec_label_pc_15afc

dec_label_pc_15afc:                               ; preds = %bb73, %dec_label_pc_15aec
  %v0_15b00 = phi i32 [ %v2_15af8, %dec_label_pc_15aec ], [ %v0_15b00.pre, %bb73 ]
  %v0_15afc = load i32, i32* @r6, align 4
  %v1_15afc = add i32 %v0_15afc, 1
  store i32 %v1_15afc, i32* @r6, align 4
  %v1_15b00 = inttoptr i32 %v0_15b00 to i8*
  %v2_15b00 = load i8, i8* %v1_15b00, align 1
  %v3_15b00 = zext i8 %v2_15b00 to i32
  store i32 %v3_15b00, i32* %r2.global-to-local, align 4
  %v2_15b04 = icmp eq i8 %v2_15b00, 0
  store i1 %v2_15b04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15b04, label %dec_label_pc_15b1c, label %dec_label_pc_15afc.dec_label_pc_15b0c_crit_edge

dec_label_pc_15afc.dec_label_pc_15b0c_crit_edge:  ; preds = %dec_label_pc_15afc
  %v0_15b0c.pre = load i32, i32* @r7, align 4
  %v1_15b0c = inttoptr i32 %v0_15b0c.pre to i8*
  %v2_15b0c = load i8, i8* %v1_15b0c, align 1
  %v3_15b0c = zext i8 %v2_15b0c to i32
  store i32 %v3_15b0c, i32* %r3.global-to-local, align 4
  %v9_15b10 = icmp eq i8 %v2_15b0c, %v2_15b00
  store i1 %v9_15b10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15b10, label %dec_label_pc_15b1c, label %bb74

bb74:                                             ; preds = %dec_label_pc_15b0c.preheader, %dec_label_pc_15afc.dec_label_pc_15b0c_crit_edge
  %v2_15a5888 = phi i32 [ %v1_15afc, %dec_label_pc_15afc.dec_label_pc_15b0c_crit_edge ], [ %v1_15a3c, %dec_label_pc_15b0c.preheader ]
  %v0_15a5887 = phi i32 [ %v0_15b00, %dec_label_pc_15afc.dec_label_pc_15b0c_crit_edge ], [ %v0_15b0013, %dec_label_pc_15b0c.preheader ]
  %v2_15b14 = load i32, i32* @sb, align 4
  %v3_15b14 = sub i32 %v2_15a5888, %v2_15b14
  %v5_15b14 = xor i32 %v2_15b14, %v2_15a5888
  %v6_15b14 = xor i32 %v3_15b14, %v2_15a5888
  %v7_15b14 = and i32 %v6_15b14, %v5_15b14
  %v8_15b14 = icmp slt i32 %v7_15b14, 0
  %v9_15b14 = icmp slt i32 %v3_15b14, 0
  %v10_15b14 = icmp eq i32 %v2_15a5888, %v2_15b14
  store i1 %v10_15b14, i1* %cpsr_z.global-to-local, align 1
  %v2_15b18 = xor i1 %v9_15b14, %v8_15b14
  br i1 %v2_15b18, label %dec_label_pc_15a48, label %dec_label_pc_15b1c

dec_label_pc_15b1c:                               ; preds = %dec_label_pc_15b0c.preheader, %bb74, %dec_label_pc_15afc, %dec_label_pc_15afc.dec_label_pc_15b0c_crit_edge, %dec_label_pc_15b00.preheader
  %v0_15b20 = phi i32 [ %v1_15a3c, %dec_label_pc_15b00.preheader ], [ %v1_15a3c, %dec_label_pc_15b0c.preheader ], [ %v2_15a5888, %bb74 ], [ %v1_15afc, %dec_label_pc_15afc ], [ %v1_15afc, %dec_label_pc_15afc.dec_label_pc_15b0c_crit_edge ]
  store i32 %v3_15840, i32* %r2.global-to-local, align 4
  %v9_15b20 = icmp eq i32 %v0_15b20, %v3_15840
  store i1 %v9_15b20, i1* %cpsr_z.global-to-local, align 1
  %v6_15b24 = icmp slt i32 %v0_15b20, %v3_15840
  br i1 %v6_15b24, label %dec_label_pc_15b28, label %dec_label_pc_15b34

dec_label_pc_15b28:                               ; preds = %dec_label_pc_15b1c
  %v0_15b28 = load i32, i32* @r8, align 4
  %v1_15b28 = and i32 %v0_15b28, 1048576
  %v2_15b28 = icmp eq i32 %v1_15b28, 0
  store i1 %v2_15b28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15b28, label %dec_label_pc_15880.backedge, label %dec_label_pc_15b30

dec_label_pc_15b30:                               ; preds = %dec_label_pc_15b28, %dec_label_pc_159e8, %.thread, %dec_label_pc_1581c
  br label %dec_label_pc_15b34

dec_label_pc_15b34:                               ; preds = %dec_label_pc_15b1c, %dec_label_pc_15904, %dec_label_pc_15b30
  %v0_15b34 = phi i32 [ %v0_15914, %dec_label_pc_15904 ], [ 0, %dec_label_pc_15b30 ], [ %v0_15b20, %dec_label_pc_15b1c ]
  store i32 %v0_15b34, i32* %r0.global-to-local, align 4
  store i32 %v3_1581c, i32* @r4, align 4
  store i32 %v6_1581c, i32* @r5, align 4
  store i32 %v9_1581c, i32* @r6, align 4
  store i32 %v12_1581c, i32* @r7, align 4
  store i32 %v15_1581c, i32* @r8, align 4
  store i32 %v18_1581c, i32* @sb, align 4
  store i32 %v21_1581c, i32* @sl, align 4
  store i32 %v24_1581c, i32* @fp, align 4
  ret i32 %v0_15b34

; uselistorder directives
  uselistorder i32 %v0_15b34, { 1, 0 }
  uselistorder i32 %v0_15b20, { 0, 2, 1 }
  uselistorder i32 %v3_15b14, { 1, 0 }
  uselistorder i32 %v2_15b14, { 1, 0, 2 }
  uselistorder i32 %v2_15a5888, { 0, 1, 6, 5, 2, 3, 4 }
  uselistorder i1 %v9_15b10, { 1, 0 }
  uselistorder i32 %v0_15b00.pre, { 0, 2, 1 }
  uselistorder i32 %v5_15a94, { 1, 0, 2, 3 }
  uselistorder i1 %v9_15b1086, { 1, 0 }
  uselistorder i1 %v9_15a38, { 1, 0 }
  uselistorder i32 %v3_15a10, { 0, 2, 1, 3 }
  uselistorder i1 %v7_159e8, { 1, 0 }
  uselistorder i1 %v8_159e0, { 1, 0 }
  uselistorder i32 %v3_159b0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_159a0, { 3, 2, 0, 1, 4, 5, 6 }
  uselistorder i32 %v5_15988, { 1, 0, 2 }
  uselistorder i32 %v1_15978, { 1, 2, 0, 3 }
  uselistorder i32 %v0_15964, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1595c, { 1, 0 }
  uselistorder i32 %v1_15948, { 1, 0 }
  uselistorder i32 %v1_15944, { 1, 0 }
  uselistorder i32 %v1_15904, { 2, 0, 1 }
  uselistorder i32 %v0_158ec, { 1, 0 }
  uselistorder i32 %v1_158dc, { 0, 2, 1 }
  uselistorder i1 %v2_15a0c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_15868, { 2, 0, 1, 3 }
  uselistorder i32 %v1_1585c, { 2, 1, 0 }
  uselistorder i32 %v3_15844, { 1, 0 }
  uselistorder i32 %v3_15840, { 2, 1, 0 }
  uselistorder i32 %v1_15838, { 2, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 6, 1, 2, 3, 4, 5, 25, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 7, 2, 3, 4, 5, 6, 16, 8, 9, 10, 11, 12, 13, 14, 15, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 26, 25, 24, 6, 5, 8, 9, 23, 7, 27, 10, 12, 11, 13, 14, 17, 15, 16, 1, 18, 19, 20, 22, 21, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 12, 13, 14, 2, 3, 4, 5, 6, 7, 9, 10, 11, 8, 33, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 1048576, { 1, 0, 2 }
  uselistorder i32 92, { 5, 0, 1, 2, 3, 6, 4, 7 }
  uselistorder i32 (i32)* @function_16dd0, { 1, 0 }
  uselistorder i32 81, { 0, 3, 1, 2 }
  uselistorder i32* @sl, { 7, 8, 9, 10, 11, 12, 13, 51, 0, 52, 53, 14, 15, 113, 114, 115, 116, 117, 118, 119, 120, 121, 1, 122, 123, 124, 125, 126, 127, 129, 2, 128, 131, 130, 132, 133, 134, 135, 25, 26, 27, 28, 29, 30, 31, 22, 19, 16, 17, 18, 20, 21, 23, 24, 33, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 5, 75, 76, 77, 6, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 3, 97, 98, 99, 100, 4, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 136, 137, 138, 139, 80, 81, 82, 83, 84 }
  uselistorder i32 %arg3, { 3, 4, 2, 0, 1, 5, 6 }
  uselistorder label %dec_label_pc_15b34, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15b1c, { 1, 3, 2, 0, 4 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_15afc, { 1, 0 }
  uselistorder label %bb73, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15ab0, { 1, 0 }
  uselistorder label %dec_label_pc_15880.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15a28, { 1, 0 }
  uselistorder label %dec_label_pc_159e8, { 1, 0 }
  uselistorder label %dec_label_pc_159dc, { 0, 2, 1 }
  uselistorder label %dec_label_pc_159a0, { 1, 0 }
  uselistorder label %dec_label_pc_158d4, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb66, { 1, 0 }
}

define i32 @function_15b44(i32* %arg1) local_unnamed_addr {
dec_label_pc_15b44:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v2_15b48 = icmp eq i32* %arg1, null
  br i1 %v2_15b48, label %dec_label_pc_15b70, label %dec_label_pc_15b50

dec_label_pc_15b50:                               ; preds = %dec_label_pc_15b44
  %v2_15b50 = load i32, i32* %arg1, align 4
  %v1_15b54 = inttoptr i32 %v2_15b50 to i16*
  %v2_15b54 = call i32 @function_15bc0(i16* %v1_15b54)
  %v0_15b58 = load i32, i32* @r4, align 4
  %v1_15b58 = add i32 %v0_15b58, 20
  %v2_15b58 = inttoptr i32 %v1_15b58 to i32*
  %v3_15b58 = load i32, i32* %v2_15b58, align 4
  %v2_15b5c = icmp eq i32 %v3_15b58, 0
  br i1 %v2_15b5c, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_15b50
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_15b50, %bb
  store i32 88936, i32* @lr, align 4
  %v1_15b64 = xor i1 %v2_15b5c, true
  call void @__pseudo_cond_branch(i1 %v1_15b64, i32 ptrtoint (i32* @global_var_13e30.21 to i32))
  %v0_15b68 = load i32, i32* @r4, align 4
  store i32 %v0_15b68, i32* @r0, align 4
  %v0_15b6c = call i32 @function_13e30()
  br label %dec_label_pc_15b70

dec_label_pc_15b70:                               ; preds = %dec_label_pc_15b44, %bb6
  %v1_15b74 = phi i32 [ 0, %dec_label_pc_15b44 ], [ %v0_15b6c, %bb6 ]
  ret i32 %v1_15b74

; uselistorder directives
  uselistorder i32* null, { 0, 5, 6, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 2, 18, 3, 19, 4, 20, 21, 22 }
  uselistorder label %dec_label_pc_15b70, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @function_15b78(i32 %arg1) local_unnamed_addr {
dec_label_pc_15b78:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15b84 = load i32, i32* @r4, align 4
  store i32 %v3_15b84, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_179d8.497 to i32), i32* @r1, align 4
  %v0_15b8c = call i32 @function_15d74()
  store i32 %v0_15b8c, i32* %r0.global-to-local, align 4
  store i32 %v0_15b8c, i32* @r4, align 4
  %v2_15b90 = icmp eq i32 %v0_15b8c, 0
  br i1 %v2_15b90, label %bb, label %dec_label_pc_15b9c

bb:                                               ; preds = %dec_label_pc_15b78
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_15b9c:                               ; preds = %dec_label_pc_15b78
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_15ba4 = call i32 @function_136e4(i32 1, i32 24)
  store i32 %v2_15ba4, i32* %r0.global-to-local, align 4
  %v2_15ba8 = icmp eq i32 %v2_15ba4, 0
  br i1 %v2_15ba8, label %bb5, label %bb4

bb4:                                              ; preds = %dec_label_pc_15b9c
  %v1_15bac = load i32, i32* @r4, align 4
  %v3_15bac = inttoptr i32 %v2_15ba4 to i32*
  store i32 %v1_15bac, i32* %v3_15bac, align 4
  %v1_15bb4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %bb, %dec_label_pc_15b9c, %bb4
  %v1_15bb4 = phi i32 [ 0, %bb ], [ 0, %dec_label_pc_15b9c ], [ %v1_15bb4.pre, %bb4 ]
  %v2_15bb0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15bb0, i32* @r4, align 4
  ret i32 %v1_15bb4

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 3, 1, 0, 4 }
  uselistorder i32 (i32, i32)* @function_136e4, { 40, 38, 39, 37, 36, 35, 34, 19, 18, 33, 32, 28, 27, 26, 25, 24, 23, 22, 21, 20, 3, 17, 16, 15, 2, 1, 0, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 31, 30, 29 }
  uselistorder i32 114, { 1, 2, 0 }
  uselistorder label %bb5, { 2, 1, 0 }
}

define i32 @function_15bc0(i16* %arg1) local_unnamed_addr {
dec_label_pc_15bc0:
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_15bc0 = load i32, i32* @r4, align 4
  store i32 %v3_15bc0, i32* %stack_var_-36, align 4
  %v6_15bc0 = load i32, i32* @r5, align 4
  %v9_15bc0 = load i32, i32* @r6, align 4
  %v12_15bc0 = load i32, i32* @r7, align 4
  %v2_15bc4 = add i32 %tmp, 52
  %v3_15bc4 = inttoptr i32 %v2_15bc4 to i32*
  %v4_15bc4 = load i32, i32* %v3_15bc4, align 4
  %v1_15bcc = sub i32 1, %v4_15bc4
  %v2_15bcc = icmp ult i32 %v4_15bc4, 2
  br i1 %v2_15bcc, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_15bc0
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_15bc0, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_15bcc, %dec_label_pc_15bc0 ]
  %v0_15bd4 = phi i32 [ 0, %bb ], [ %v1_15bcc, %dec_label_pc_15bc0 ]
  store i32 %storemerge, i32* %sb.global-to-local, align 4
  %v2_15bd4 = icmp eq i32 %v0_15bd4, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 98320, i32* @r6, align 4
  br i1 %v2_15bd4, label %dec_label_pc_15c20, label %dec_label_pc_15be8

dec_label_pc_15be8:                               ; preds = %bb18
  %v4_15c00 = load i32, i32* inttoptr (i32 98392 to i32*), align 8
  call void @__pseudo_branch(i32 %v4_15c00)
  %v0_15c14 = load i32, i32* @r6, align 4
  %v2_15c14 = add i32 %v0_15c14, 16
  %v3_15c14 = inttoptr i32 %v2_15c14 to i32*
  %v4_15c14 = load i32, i32* %v3_15c14, align 4
  call void @__pseudo_branch(i32 %v4_15c14)
  %v0_15c20.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15c20

dec_label_pc_15c20:                               ; preds = %bb18, %dec_label_pc_15be8
  %v1_15c28 = phi i32 [ %tmp, %bb18 ], [ %v0_15c20.pre, %dec_label_pc_15be8 ]
  %v1_15c20 = inttoptr i32 %v1_15c28 to i16*
  %v2_15c20 = load i16, i16* %v1_15c20, align 2
  %v3_15c20 = zext i16 %v2_15c20 to i32
  %v1_15c24 = and i32 %v3_15c20, 64
  %v2_15c24 = icmp eq i32 %v1_15c24, 0
  br i1 %v2_15c24, label %bb20, label %bb19

bb19:                                             ; preds = %dec_label_pc_15c20
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_15c20, %bb19
  %storemerge26 = phi i32 [ %v1_15c28, %bb19 ], [ %v1_15c24, %dec_label_pc_15c20 ]
  %v1_15c2c = xor i1 %v2_15c24, true
  call void @__pseudo_cond_branch(i1 %v1_15c2c, i32 ptrtoint (i32* @global_var_1655c.502 to i32))
  store i32 %storemerge26, i32* %sl.global-to-local, align 4
  %v0_15c34 = load i32, i32* @r5, align 4
  %v1_15c34 = add i32 %v0_15c34, 4
  %v2_15c34 = inttoptr i32 %v1_15c34 to i32*
  %v3_15c34 = load i32, i32* %v2_15c34, align 4
  %v1_15c38 = call i32 @function_1239c(i32 %v3_15c34)
  %v0_15c40 = load i32, i32* @r6, align 4
  %v2_15c4c = add i32 %v0_15c40, 108
  %v3_15c4c = inttoptr i32 %v2_15c4c to i32*
  %v4_15c4c = load i32, i32* %v3_15c4c, align 4
  store i32 %v4_15c4c, i32* @r7, align 4
  %v1_15c54 = load i32, i32* @r5, align 4
  %v2_15c54 = add i32 %v1_15c54, 4
  %v3_15c54 = inttoptr i32 %v2_15c54 to i32*
  store i32 -1, i32* %v3_15c54, align 4
  %v0_15c5c = load i32, i32* @r6, align 4
  %v2_15c5c = add i32 %v0_15c5c, 72
  %v3_15c5c = inttoptr i32 %v2_15c5c to i32*
  %v4_15c5c = load i32, i32* %v3_15c5c, align 4
  %v1_15c64 = icmp slt i32 %v1_15c38, 0
  store i32 %v4_15c5c, i32* %stack_var_-80, align 4
  br i1 %v1_15c64, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  call void @__pseudo_branch(i32 %v4_15c5c)
  %v0_15c8c = load i32, i32* @r6, align 4
  %v2_15c8c = add i32 %v0_15c8c, 16
  %v3_15c8c = inttoptr i32 %v2_15c8c to i32*
  %v4_15c8c = load i32, i32* %v3_15c8c, align 4
  call void @__pseudo_branch(i32 %v4_15c8c)
  %v0_15c9c = load i32, i32* @r6, align 4
  %v2_15c9c = add i32 %v0_15c9c, 12
  %v3_15c9c = inttoptr i32 %v2_15c9c to i32*
  %v4_15c9c = load i32, i32* %v3_15c9c, align 4
  %v1_15ca0 = inttoptr i32 %v4_15c9c to i32*
  %v2_15ca0 = load i32, i32* %v1_15ca0, align 4
  %v1_15ca8 = add i32 %v2_15ca0, 1
  %v2_15cac = add i32 %v0_15c9c, 24
  %v3_15cac = inttoptr i32 %v2_15cac to i32*
  %v4_15cac = load i32, i32* %v3_15cac, align 4
  store i32 %v4_15cac, i32* @r4, align 4
  store i32 %v1_15ca8, i32* %v1_15ca0, align 4
  call void @__pseudo_branch(i32 %v4_15cac)
  %v0_15cc4 = load i32, i32* @r5, align 4
  %v1_15cc4 = inttoptr i32 %v0_15cc4 to i16*
  %v2_15cc4 = load i16, i16* %v1_15cc4, align 2
  %v1_15cc8 = and i16 %v2_15cc4, 24576
  %v1_15ccc = or i16 %v1_15cc8, 48
  %v0_15cd0 = load i32, i32* %sb.global-to-local, align 4
  %v2_15cd0 = icmp eq i32 %v0_15cd0, 0
  store i16 %v1_15ccc, i16* %v1_15cc4, align 2
  br i1 %v2_15cd0, label %.thread, label %bb23

bb23:                                             ; preds = %bb22
  br label %.thread

.thread:                                          ; preds = %bb22, %bb23
  %v2_15ce4 = xor i1 %v2_15cd0, true
  call void @__pseudo_cond_branch(i1 %v2_15ce4, i32 %v4_15cac)
  %v0_15ce8 = load i32, i32* @r5, align 4
  %v1_15ce8 = inttoptr i32 %v0_15ce8 to i16*
  %v2_15ce8 = load i16, i16* %v1_15ce8, align 2
  %v1_15cec = and i16 %v2_15ce8, 16384
  %v2_15cec = icmp eq i16 %v1_15cec, 0
  br i1 %v2_15cec, label %bb25, label %bb24

bb24:                                             ; preds = %.thread
  br label %bb25

bb25:                                             ; preds = %.thread, %bb24
  %v1_15cf4 = xor i1 %v2_15cec, true
  call void @__pseudo_cond_branch(i1 %v1_15cf4, i32 ptrtoint (i32* @global_var_13e30.21 to i32))
  %v2_15d00 = load i32, i32* %stack_var_-80, align 4
  call void @__pseudo_branch(i32 %v2_15d00)
  call void @__pseudo_branch(i32 %v4_15c8c)
  %v0_15d20 = load i32, i32* @r6, align 4
  %v2_15d20 = add i32 %v0_15d20, 48
  %v3_15d20 = inttoptr i32 %v2_15d20 to i32*
  %v4_15d20 = load i32, i32* %v3_15d20, align 4
  %v1_15d24 = inttoptr i32 %v4_15d20 to i32*
  %v2_15d24 = load i32, i32* %v1_15d24, align 4
  %v1_15d28 = add i32 %v2_15d24, 1
  store i32 %v1_15d28, i32* %v1_15d24, align 4
  call void @__pseudo_branch(i32 %v4_15cac)
  %v0_15d40 = call i32 @function_163d4()
  %v0_15d44 = load i32, i32* %sl.global-to-local, align 4
  %v2_15d4c = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_15d4c, i32* @r4, align 4
  store i32 %v6_15bc0, i32* @r5, align 4
  store i32 %v9_15bc0, i32* @r6, align 4
  store i32 %v12_15bc0, i32* @r7, align 4
  ret i32 %v0_15d44

; uselistorder directives
  uselistorder i1 %v2_15cec, { 1, 0 }
  uselistorder i32 %v4_15cac, { 0, 2, 1, 3 }
  uselistorder i32 %v4_15bc4, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %sb.global-to-local, { 1, 0 }
  uselistorder i32 (i32)* @function_1239c, { 30, 8, 11, 29, 10, 9, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_15c20, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
}

define i32 @function_15d54(i32 %arg1) local_unnamed_addr {
dec_label_pc_15d54:
  %v0_15d54 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15d54, label %bb, label %.thread6

bb:                                               ; preds = %dec_label_pc_15d54
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_15d54, %bb
  %v10_15d70 = phi i32 [ %arg1, %dec_label_pc_15d54 ], [ 0, %bb ]
  ret i32 %v10_15d70

; uselistorder directives
  uselistorder label %.thread6, { 1, 0 }
}

define i32 @function_15d74() local_unnamed_addr {
dec_label_pc_15d74:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_15d84 = call i32 @function_15d94()
  ret i32 %v0_15d84
}

define i32 @function_15d94() local_unnamed_addr {
dec_label_pc_15d94:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_15d94 = load i32, i32* @r4, align 4
  store i32 %v3_15d94, i32* %stack_var_-36, align 4
  %v6_15d94 = load i32, i32* @r5, align 4
  %v9_15d94 = load i32, i32* @r6, align 4
  %v18_15d94 = load i32, i32* @sb, align 4
  %v24_15d94 = load i32, i32* @fp, align 4
  %v0_15d98 = load i32, i32* @r1, align 4
  %v1_15d98 = inttoptr i32 %v0_15d98 to i8*
  %v2_15d98 = load i8, i8* %v1_15d98, align 1
  %v3_15d98 = zext i8 %v2_15d98 to i32
  store i32 %v3_15d98, i32* @ip, align 4
  %v7_15da0 = icmp eq i8 %v2_15d98, 114
  store i32 98320, i32* @fp, align 4
  %v2_15da8 = ptrtoint i32* %stack_var_-72 to i32
  %v0_15dac = load i32, i32* @r0, align 4
  store i32 %v0_15dac, i32* @r6, align 4
  %v0_15db0 = load i32, i32* @r2, align 4
  store i32 %v0_15db0, i32* @sb, align 4
  %v0_15db4 = load i32, i32* @r3, align 4
  store i32 %v0_15db4, i32* @r5, align 4
  br i1 %v7_15da0, label %dec_label_pc_15e00, label %dec_label_pc_15dbc

dec_label_pc_15dbc:                               ; preds = %dec_label_pc_15d94
  %v7_15dbc = icmp eq i8 %v2_15d98, 119
  br i1 %v7_15dbc, label %bb, label %dec_label_pc_15dc8

bb:                                               ; preds = %dec_label_pc_15dbc
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_15e04

dec_label_pc_15dc8:                               ; preds = %dec_label_pc_15dbc
  %v7_15dc8 = icmp eq i8 %v2_15d98, 97
  br i1 %v7_15dc8, label %bb32, label %dec_label_pc_15dd4

bb32:                                             ; preds = %dec_label_pc_15dc8
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_15e04

dec_label_pc_15dd4:                               ; preds = %dec_label_pc_15dc8, %dec_label_pc_15e88, %dec_label_pc_15e5c
  %v0_15dd4 = call i32 @function_127c4()
  store i32 %v0_15dd4, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_15ddc = load i32, i32* @sb, align 4
  %v2_15ddc = icmp eq i32 %v0_15ddc, 0
  %v2_15de0 = inttoptr i32 %v0_15dd4 to i32*
  store i32 22, i32* %v2_15de0, align 4
  br i1 %v2_15ddc, label %dec_label_pc_16054, label %dec_label_pc_15de8

dec_label_pc_15de8:                               ; preds = %dec_label_pc_15eac._crit_edge, %dec_label_pc_15dd4
  %v0_15de8 = load i32, i32* @sb, align 4
  %v1_15de8 = inttoptr i32 %v0_15de8 to i16*
  %v2_15de8 = load i16, i16* %v1_15de8, align 2
  %v3_15de8 = zext i16 %v2_15de8 to i32
  store i32 %v3_15de8, i32* %r3.global-to-local, align 4
  %v1_15dec = and i32 %v3_15de8, 8192
  %v2_15dec = icmp eq i32 %v1_15dec, 0
  br i1 %v2_15dec, label %dec_label_pc_16054, label %dec_label_pc_15df4

dec_label_pc_15df4:                               ; preds = %dec_label_pc_15de8
  store i32 %v0_15de8, i32* @r0, align 4
  %v0_15df8 = call i32 @function_13e30()
  store i32 %v0_15df8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16054

dec_label_pc_15e00:                               ; preds = %dec_label_pc_15d94
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_15e04

dec_label_pc_15e04:                               ; preds = %bb, %bb32, %dec_label_pc_15e00
  %v1_15e1c = phi i32 [ 1089, %bb32 ], [ 577, %bb ], [ 1, %dec_label_pc_15e00 ]
  %v1_15e04 = add i32 %v0_15d98, 1
  %v2_15e04 = inttoptr i32 %v1_15e04 to i8*
  %v3_15e04 = load i8, i8* %v2_15e04, align 1
  %v7_15e08 = icmp eq i8 %v3_15e04, 98
  %v1_15e04.v0_15d98 = select i1 %v7_15e08, i32 %v1_15e04, i32 %v0_15d98
  store i32 %v1_15e04.v0_15d98, i32* %r3.global-to-local, align 4
  %v1_15e14 = add i32 %v1_15e04.v0_15d98, 1
  %v2_15e14 = inttoptr i32 %v1_15e14 to i8*
  %v3_15e14 = load i8, i8* %v2_15e14, align 1
  %v4_15e14 = zext i8 %v3_15e14 to i32
  store i32 %v4_15e14, i32* @r3, align 4
  %v7_15e18 = icmp eq i8 %v3_15e14, 43
  br i1 %v7_15e18, label %bb35, label %.thread3

bb35:                                             ; preds = %dec_label_pc_15e04
  store i32 %v1_15e1c, i32* @r3, align 4
  %v2_15e20 = add nuw nsw i32 %v1_15e1c, 1
  store i32 %v2_15e20, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_15e04, %bb35
  %v2_15e24 = icmp eq i32 %v0_15db0, 0
  br i1 %v2_15e24, label %dec_label_pc_15e2c, label %dec_label_pc_15e54

dec_label_pc_15e2c:                               ; preds = %.thread3
  store i32 80, i32* @r0, align 4
  %v0_15e30 = call i32 @function_12dc4()
  store i32 %v0_15e30, i32* %r0.global-to-local, align 4
  store i32 %v0_15e30, i32* @sb, align 4
  %v3_15e34 = icmp eq i32 %v0_15e30, 0
  br i1 %v3_15e34, label %dec_label_pc_16058, label %dec_label_pc_15e3c

dec_label_pc_15e3c:                               ; preds = %dec_label_pc_15e2c
  %v2_15e40 = add i32 %v0_15e30, 8
  %v3_15e40 = inttoptr i32 %v2_15e40 to i32*
  store i32 0, i32* %v3_15e40, align 4
  store i32 8192, i32* %r3.global-to-local, align 4
  %v2_15e48 = load i32, i32* @sb, align 4
  %v3_15e48 = inttoptr i32 %v2_15e48 to i16*
  store i16 8192, i16* %v3_15e48, align 2
  %v0_15e4c = load i32, i32* @sb, align 4
  %v1_15e4c = add i32 %v0_15e4c, 56
  store i32 %v1_15e4c, i32* @r0, align 4
  %v1_15e50 = call i32 @function_16104(i32 %v1_15e4c)
  store i32 %v1_15e50, i32* %r0.global-to-local, align 4
  %v0_15e54.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15e54

dec_label_pc_15e54:                               ; preds = %.thread3, %dec_label_pc_15e3c
  %v0_15eac = phi i32 [ %v0_15db4, %.thread3 ], [ %v0_15e54.pre, %dec_label_pc_15e3c ]
  %v1_15e54 = icmp slt i32 %v0_15eac, 0
  br i1 %v1_15e54, label %dec_label_pc_15eac, label %dec_label_pc_15e5c

dec_label_pc_15e5c:                               ; preds = %dec_label_pc_15e54
  %v0_15e60 = load i32, i32* @r4, align 4
  %v2_15e60 = and i32 %v0_15e60, 131075
  %v1_15e64 = add nuw nsw i32 %v2_15e60, 1
  store i32 %v1_15e64, i32* %r2.global-to-local, align 4
  %v0_15e68 = load i32, i32* @r6, align 4
  %v1_15e68 = add i32 %v0_15e68, 1
  %v2_15e6c = and i32 %v1_15e68, %v1_15e64
  store i32 %v2_15e6c, i32* %r3.global-to-local, align 4
  %v9_15e70 = icmp eq i32 %v2_15e6c, %v1_15e64
  %v1_15e74 = load i32, i32* @sb, align 4
  %v2_15e74 = add i32 %v1_15e74, 4
  %v3_15e74 = inttoptr i32 %v2_15e74 to i32*
  store i32 %v0_15eac, i32* %v3_15e74, align 4
  br i1 %v9_15e70, label %dec_label_pc_15e7c, label %dec_label_pc_15dd4

dec_label_pc_15e7c:                               ; preds = %dec_label_pc_15e5c
  %v0_15e7c = load i32, i32* @r4, align 4
  %v1_15e7c = load i32, i32* @r6, align 4
  %v2_15e7c = sub i32 -1, %v1_15e7c
  %v3_15e7c = and i32 %v0_15e7c, %v2_15e7c
  store i32 %v3_15e7c, i32* @r3, align 4
  %v1_15e80 = and i32 %v3_15e7c, 1024
  %v2_15e80 = icmp eq i32 %v1_15e80, 0
  br i1 %v2_15e80, label %dec_label_pc_15ea0, label %dec_label_pc_15e88

dec_label_pc_15e88:                               ; preds = %dec_label_pc_15e7c
  %v0_15e88 = load i32, i32* @r5, align 4
  store i32 %v0_15e88, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1024, i32* %r2.global-to-local, align 4
  %v2_15e94 = call i32 @function_121d0(i32 %v0_15e88, i32 4)
  store i32 %v2_15e94, i32* %r0.global-to-local, align 4
  %v2_15e98 = icmp eq i32 %v2_15e94, 0
  br i1 %v2_15e98, label %dec_label_pc_15e88.dec_label_pc_15ea0_crit_edge, label %dec_label_pc_15dd4

dec_label_pc_15e88.dec_label_pc_15ea0_crit_edge:  ; preds = %dec_label_pc_15e88
  %v0_15ea0.pre = load i32, i32* @r6, align 4
  %v0_15ea4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15ea0

dec_label_pc_15ea0:                               ; preds = %dec_label_pc_15e88.dec_label_pc_15ea0_crit_edge, %dec_label_pc_15e7c
  %v0_15ea4 = phi i32 [ %v0_15ea4.pre, %dec_label_pc_15e88.dec_label_pc_15ea0_crit_edge ], [ %v0_15e7c, %dec_label_pc_15e7c ]
  %v0_15ea0 = phi i32 [ %v0_15ea0.pre, %dec_label_pc_15e88.dec_label_pc_15ea0_crit_edge ], [ %v1_15e7c, %dec_label_pc_15e7c ]
  %v1_15ea0 = and i32 %v0_15ea0, 131072
  store i32 %v1_15ea0, i32* %r3.global-to-local, align 4
  %v2_15ea4 = or i32 %v1_15ea0, %v0_15ea4
  store i32 %v2_15ea4, i32* @r4, align 4
  br label %dec_label_pc_15ed0

dec_label_pc_15eac:                               ; preds = %dec_label_pc_15e54
  %v7_15eac = icmp eq i32 %v0_15eac, -1
  %v0_15eb8.pre = load i32, i32* @r4, align 4
  br i1 %v7_15eac, label %dec_label_pc_15eac._crit_edge, label %bb36

bb36:                                             ; preds = %dec_label_pc_15eac
  %v2_15eb0 = or i32 %v0_15eb8.pre, 131072
  store i32 %v2_15eb0, i32* @r4, align 4
  br label %dec_label_pc_15eac._crit_edge

dec_label_pc_15eac._crit_edge:                    ; preds = %dec_label_pc_15eac, %bb36
  %v0_15eb8 = phi i32 [ %v2_15eb0, %bb36 ], [ %v0_15eb8.pre, %dec_label_pc_15eac ]
  %v0_15eb4 = load i32, i32* @r6, align 4
  store i32 %v0_15eb4, i32* %r0.global-to-local, align 4
  store i32 %v0_15eb8, i32* %r1.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_15ec0 = call i32 @function_11fa8(i32 %v0_15eb4, i32 %v0_15eb8)
  store i32 %v2_15ec0, i32* %r0.global-to-local, align 4
  %v1_15ec4 = icmp slt i32 %v2_15ec0, 0
  %v1_15ec8 = load i32, i32* @sb, align 4
  %v2_15ec8 = add i32 %v1_15ec8, 4
  %v3_15ec8 = inttoptr i32 %v2_15ec8 to i32*
  store i32 %v2_15ec0, i32* %v3_15ec8, align 4
  br i1 %v1_15ec4, label %dec_label_pc_15de8, label %.dec_label_pc_15ed0_crit_edge

.dec_label_pc_15ed0_crit_edge:                    ; preds = %dec_label_pc_15eac._crit_edge
  %v0_15ed4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15ed0

dec_label_pc_15ed0:                               ; preds = %.dec_label_pc_15ed0_crit_edge, %dec_label_pc_15ea0
  %v0_15eec = phi i32 [ %v0_15ed4.pre, %.dec_label_pc_15ed0_crit_edge ], [ %v2_15ea4, %dec_label_pc_15ea0 ]
  %v0_15ed0 = load i32, i32* @sb, align 4
  %v1_15ed0 = inttoptr i32 %v0_15ed0 to i16*
  %v2_15ed0 = load i16, i16* %v1_15ed0, align 2
  %v3_15ed0 = zext i16 %v2_15ed0 to i32
  %v1_15ed4 = urem i32 %v0_15eec, 4
  %v1_15ed8 = and i32 %v0_15eec, 1024
  %v1_15edc = and i32 %v3_15ed0, 8192
  %v1_15ee0 = add nuw nsw i32 %v1_15ed4, 1
  %v2_15ee4 = or i32 %v1_15edc, %v1_15ed8
  store i32 %v2_15ee4, i32* %r3.global-to-local, align 4
  %v1_15ee8 = xor i32 %v1_15ee0, 3
  store i32 %v1_15ee8, i32* %r1.global-to-local, align 4
  %v1_15eec = and i32 %v0_15eec, 131072
  store i32 %v1_15eec, i32* %r2.global-to-local, align 4
  %v2_15eec = icmp eq i32 %v1_15eec, 0
  %v1_15ef0 = add i32 %v0_15ed0, 4
  %v2_15ef0 = inttoptr i32 %v1_15ef0 to i32*
  %v3_15ef0 = load i32, i32* %v2_15ef0, align 4
  store i32 %v3_15ef0, i32* @r5, align 4
  br i1 %v2_15eec, label %bb38, label %bb37

bb37:                                             ; preds = %dec_label_pc_15ed0
  store i32 32768, i32* %r2.global-to-local, align 4
  br label %bb38

bb38:                                             ; preds = %dec_label_pc_15ed0, %bb37
  %v0_15efc = phi i32 [ 0, %dec_label_pc_15ed0 ], [ 32768, %bb37 ]
  %v4_15ef8 = mul nuw nsw i32 %v1_15ee8, 16
  %v5_15ef8 = or i32 %v2_15ee4, %v4_15ef8
  store i32 %v5_15ef8, i32* %r3.global-to-local, align 4
  %v2_15efc = or i32 %v0_15efc, %v5_15ef8
  store i32 %v2_15efc, i32* %r2.global-to-local, align 4
  %v8_15f00 = icmp eq i32 %v3_15ef0, 2147483647
  %v1_15f04 = trunc i32 %v2_15efc to i16
  store i16 %v1_15f04, i16* %v1_15ed0, align 2
  br i1 %v8_15f00, label %dec_label_pc_15f34, label %dec_label_pc_15f0c

dec_label_pc_15f0c:                               ; preds = %bb38
  %v0_15f0c = call i32 @function_127c4()
  store i32 %v0_15f0c, i32* @r4, align 4
  %v0_15f14 = load i32, i32* @r5, align 4
  store i32 %v0_15f14, i32* @r0, align 4
  %v1_15f18 = inttoptr i32 %v0_15f0c to i32*
  %v2_15f18 = load i32, i32* %v1_15f18, align 4
  store i32 %v2_15f18, i32* @r5, align 4
  %v1_15f1c = call i32 @function_1710c(i32 %v0_15f14)
  store i32 %v1_15f1c, i32* %r0.global-to-local, align 4
  %v2_15f20 = icmp eq i32 %v1_15f1c, 0
  br i1 %v2_15f20, label %.thread5, label %bb39

bb39:                                             ; preds = %dec_label_pc_15f0c
  %v1_15f24 = load i32, i32* @sb, align 4
  %v2_15f24 = inttoptr i32 %v1_15f24 to i16*
  %v3_15f24 = load i16, i16* %v2_15f24, align 2
  %v4_15f24 = zext i16 %v3_15f24 to i32
  %v2_15f28 = or i32 %v4_15f24, 256
  store i32 %v2_15f28, i32* %r3.global-to-local, align 4
  %v2_15f2c = trunc i32 %v2_15f28 to i16
  store i16 %v2_15f2c, i16* %v2_15f24, align 2
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_15f0c, %bb39
  %v0_15f30 = load i32, i32* @r5, align 4
  %v1_15f30 = load i32, i32* @r4, align 4
  %v2_15f30 = inttoptr i32 %v1_15f30 to i32*
  store i32 %v0_15f30, i32* %v2_15f30, align 4
  br label %dec_label_pc_15f34

dec_label_pc_15f34:                               ; preds = %bb38, %.thread5
  %v0_15f34 = load i32, i32* @sb, align 4
  %v1_15f34 = add i32 %v0_15f34, 8
  %v2_15f34 = inttoptr i32 %v1_15f34 to i32*
  %v3_15f34 = load i32, i32* %v2_15f34, align 4
  store i32 %v3_15f34, i32* %r3.global-to-local, align 4
  %v2_15f38 = icmp eq i32 %v3_15f34, 0
  br i1 %v2_15f38, label %dec_label_pc_15f40, label %bb40

dec_label_pc_15f40:                               ; preds = %dec_label_pc_15f34
  store i32 4096, i32* @r0, align 4
  %v0_15f44 = call i32 @function_12dc4()
  store i32 %v0_15f44, i32* %r0.global-to-local, align 4
  %v2_15f48 = icmp eq i32 %v0_15f44, 0
  %v1_15f58.pre = load i32, i32* @sb, align 4
  br i1 %v2_15f48, label %.thread9, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_15f40
  %v2_15f4c = inttoptr i32 %v1_15f58.pre to i16*
  %v3_15f4c = load i16, i16* %v2_15f4c, align 2
  %v4_15f4c = zext i16 %v3_15f4c to i32
  %v2_15f50 = add i32 %v0_15f44, 4096
  store i32 %v2_15f50, i32* %r2.global-to-local, align 4
  %v2_15f54 = or i32 %v4_15f4c, 16384
  store i32 %v2_15f54, i32* %r3.global-to-local, align 4
  %v2_15f58 = add i32 %v1_15f58.pre, 8
  %v3_15f58 = inttoptr i32 %v2_15f58 to i32*
  store i32 %v0_15f44, i32* %v3_15f58, align 4
  %v1_15f5c = load i32, i32* %r2.global-to-local, align 4
  %v2_15f5c = load i32, i32* @sb, align 4
  %v3_15f5c = add i32 %v2_15f5c, 12
  %v4_15f5c = inttoptr i32 %v3_15f5c to i32*
  store i32 %v1_15f5c, i32* %v4_15f5c, align 4
  %v1_15f60 = load i32, i32* %r3.global-to-local, align 4
  %v2_15f60 = trunc i32 %v1_15f60 to i16
  %v3_15f60 = load i32, i32* @sb, align 4
  %v4_15f60 = inttoptr i32 %v3_15f60 to i16*
  store i16 %v2_15f60, i16* %v4_15f60, align 2
  br label %bb40

.thread9:                                         ; preds = %dec_label_pc_15f40
  %v2_15f5819 = add i32 %v1_15f58.pre, 8
  %v3_15f5820 = inttoptr i32 %v2_15f5819 to i32*
  store i32 0, i32* %v3_15f5820, align 4
  %v2_15f64 = load i32, i32* @sb, align 4
  %v3_15f64 = add i32 %v2_15f64, 12
  %v4_15f64 = inttoptr i32 %v3_15f64 to i32*
  store i32 0, i32* %v4_15f64, align 4
  br label %bb40

bb40:                                             ; preds = %.thread8, %dec_label_pc_15f34, %.thread9
  store i32 56, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_15f70 = load i32, i32* @fp, align 4
  %v2_15f70 = add i32 %v0_15f70, 56
  %v3_15f70 = inttoptr i32 %v2_15f70 to i32*
  %v4_15f70 = load i32, i32* %v3_15f70, align 4
  store i32 %v4_15f70, i32* %r3.global-to-local, align 4
  %v2_15f74 = load i32, i32* @sb, align 4
  %v3_15f74 = add i32 %v2_15f74, 2
  %v4_15f74 = inttoptr i32 %v3_15f74 to i8*
  store i8 0, i8* %v4_15f74, align 1
  %v0_15f78 = load i32, i32* @sb, align 4
  %v1_15f78 = inttoptr i32 %v0_15f78 to i16*
  %v2_15f78 = load i16, i16* %v1_15f78, align 2
  %v3_15f78 = zext i16 %v2_15f78 to i32
  store i32 %v3_15f78, i32* %r2.global-to-local, align 4
  %v0_15f7c = load i32, i32* %r3.global-to-local, align 4
  %v1_15f7c = inttoptr i32 %v0_15f7c to i32*
  %v2_15f7c = load i32, i32* %v1_15f7c, align 4
  store i32 %v2_15f7c, i32* %r1.global-to-local, align 4
  %v1_15f80 = add i32 %v0_15f78, 8
  %v2_15f80 = inttoptr i32 %v1_15f80 to i32*
  %v3_15f80 = load i32, i32* %v2_15f80, align 4
  store i32 %v3_15f80, i32* %r3.global-to-local, align 4
  %v1_15f84 = and i32 %v3_15f78, 8192
  %v2_15f84 = icmp eq i32 %v1_15f84, 0
  %v2_15f88 = add i32 %v0_15f78, 20
  %v3_15f88 = inttoptr i32 %v2_15f88 to i32*
  store i32 %v3_15f80, i32* %v3_15f88, align 4
  %v0_15f8c = load i32, i32* %r0.global-to-local, align 4
  %v1_15f8c = load i32, i32* @sb, align 4
  %v2_15f8c = add i32 %v1_15f8c, 44
  %v3_15f8c = inttoptr i32 %v2_15f8c to i32*
  store i32 %v0_15f8c, i32* %v3_15f8c, align 4
  %v0_15f90 = load i32, i32* %r1.global-to-local, align 4
  %v1_15f90 = load i32, i32* @sb, align 4
  %v2_15f90 = add i32 %v1_15f90, 52
  %v3_15f90 = inttoptr i32 %v2_15f90 to i32*
  store i32 %v0_15f90, i32* %v3_15f90, align 4
  %v0_15f94 = load i32, i32* %r3.global-to-local, align 4
  %v1_15f94 = load i32, i32* @sb, align 4
  %v2_15f94 = add i32 %v1_15f94, 24
  %v3_15f94 = inttoptr i32 %v2_15f94 to i32*
  store i32 %v0_15f94, i32* %v3_15f94, align 4
  %v0_15f98 = load i32, i32* %r3.global-to-local, align 4
  %v1_15f98 = load i32, i32* @sb, align 4
  %v2_15f98 = add i32 %v1_15f98, 28
  %v3_15f98 = inttoptr i32 %v2_15f98 to i32*
  store i32 %v0_15f98, i32* %v3_15f98, align 4
  %v0_15f9c = load i32, i32* %r3.global-to-local, align 4
  %v1_15f9c = load i32, i32* @sb, align 4
  %v2_15f9c = add i32 %v1_15f9c, 16
  %v3_15f9c = inttoptr i32 %v2_15f9c to i32*
  store i32 %v0_15f9c, i32* %v3_15f9c, align 4
  br i1 %v2_15f84, label %dec_label_pc_16058, label %dec_label_pc_15fa4

dec_label_pc_15fa4:                               ; preds = %bb40
  store i32 36, i32* %r3.global-to-local, align 4
  %v0_15fa8 = load i32, i32* @fp, align 4
  %v2_15fa8 = add i32 %v0_15fa8, 36
  %v3_15fa8 = inttoptr i32 %v2_15fa8 to i32*
  %v4_15fa8 = load i32, i32* %v3_15fa8, align 4
  store i32 %v4_15fa8, i32* %r8.global-to-local, align 4
  store i32 108, i32* %r3.global-to-local, align 4
  %v2_15fb0 = add i32 %v0_15fa8, 108
  %v3_15fb0 = inttoptr i32 %v2_15fb0 to i32*
  %v4_15fb0 = load i32, i32* %v3_15fb0, align 4
  store i32 %v4_15fb0, i32* %r4.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v2_15fb8 = ptrtoint i32* %stack_var_-56 to i32
  %v2_15fbc = add i32 %v0_15fa8, 72
  %v3_15fbc = inttoptr i32 %v2_15fbc to i32*
  %v4_15fbc = load i32, i32* %v3_15fbc, align 4
  store i32 %v4_15fa8, i32* %r1.global-to-local, align 4
  store i32 %v4_15fb0, i32* %r2.global-to-local, align 4
  store i32 %v2_15fb8, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_15fbc)
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_15fd8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15fd8, i32* %r0.global-to-local, align 4
  %v0_15fdc = load i32, i32* @fp, align 4
  %v2_15fdc = add i32 %v0_15fdc, 16
  %v3_15fdc = inttoptr i32 %v2_15fdc to i32*
  %v4_15fdc = load i32, i32* %v3_15fdc, align 4
  call void @__pseudo_branch(i32 %v4_15fdc)
  store i32 96, i32* %r3.global-to-local, align 4
  %v0_15fec = load i32, i32* @fp, align 4
  %v2_15fec = add i32 %v0_15fec, 96
  %v3_15fec = inttoptr i32 %v2_15fec to i32*
  %v4_15fec = load i32, i32* %v3_15fec, align 4
  store i32 %v4_15fec, i32* %r4.global-to-local, align 4
  %v0_15ff0 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_15ff0, i32* %r1.global-to-local, align 4
  store i32 %v4_15fec, i32* %r2.global-to-local, align 4
  store i32 %v2_15da8, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_15fbc)
  store i32 %v4_15fec, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_15fdc)
  store i32 44, i32* %r3.global-to-local, align 4
  %v0_16014 = load i32, i32* @fp, align 4
  %v2_16014 = add i32 %v0_16014, 44
  %v3_16014 = inttoptr i32 %v2_16014 to i32*
  %v4_16014 = load i32, i32* %v3_16014, align 4
  store i32 %v4_16014, i32* @ip, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v1_1601c = inttoptr i32 %v4_16014 to i32*
  %v2_1601c = load i32, i32* %v1_1601c, align 4
  store i32 %v2_1601c, i32* %r2.global-to-local, align 4
  store i32 %v2_15da8, i32* %r0.global-to-local, align 4
  %v1_16024 = load i32, i32* @sb, align 4
  %v2_16024 = add i32 %v1_16024, 32
  %v3_16024 = inttoptr i32 %v2_16024 to i32*
  store i32 %v2_1601c, i32* %v3_16024, align 4
  %v0_16028 = load i32, i32* @fp, align 4
  %v1_16028 = load i32, i32* %r3.global-to-local, align 4
  %v2_16028 = add i32 %v1_16028, %v0_16028
  %v3_16028 = inttoptr i32 %v2_16028 to i32*
  %v4_16028 = load i32, i32* %v3_16028, align 4
  store i32 %v4_16028, i32* %r4.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_16030 = load i32, i32* @sb, align 4
  %v1_16030 = load i32, i32* @ip, align 4
  %v2_16030 = inttoptr i32 %v1_16030 to i32*
  store i32 %v0_16030, i32* %v2_16030, align 4
  call void @__pseudo_branch(i32 %v4_16028)
  store i32 %v2_15fb8, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_16028)
  br label %dec_label_pc_16058

dec_label_pc_16054:                               ; preds = %dec_label_pc_15de8, %dec_label_pc_15dd4, %dec_label_pc_15df4
  store i32 0, i32* @sb, align 4
  br label %dec_label_pc_16058

dec_label_pc_16058:                               ; preds = %bb40, %dec_label_pc_15e2c, %dec_label_pc_15fa4, %dec_label_pc_16054
  %v0_16058 = load i32, i32* @sb, align 4
  store i32 %v0_16058, i32* %r0.global-to-local, align 4
  %v2_16060 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_16060, i32* %r4.global-to-local, align 4
  store i32 %v6_15d94, i32* @r5, align 4
  store i32 %v9_15d94, i32* @r6, align 4
  store i32 %v18_15d94, i32* @sb, align 4
  store i32 %v24_15d94, i32* @fp, align 4
  ret i32 %v0_16058

; uselistorder directives
  uselistorder i32 %v1_15f58.pre, { 2, 1, 0 }
  uselistorder i32 %v0_15eec, { 1, 2, 0 }
  uselistorder i32 %v0_15eb8, { 1, 0 }
  uselistorder i32 %v1_15e7c, { 1, 0 }
  uselistorder i32 %v0_15e7c, { 1, 0 }
  uselistorder i32 %v1_15e64, { 1, 0, 2 }
  uselistorder i32 %v1_15e1c, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 24, 25 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 5, 4, 6, 7, 8, 9, 10, 11, 13, 12, 15, 14, 0, 16, 17, 18 }
  uselistorder i32 16384, { 50, 0, 51, 38, 68, 39, 69, 40, 70, 41, 71, 42, 72, 43, 73, 18, 74, 17, 58, 16, 54, 36, 55, 15, 52, 14, 53, 13, 56, 37, 57, 35, 59, 12, 60, 11, 61, 10, 62, 9, 63, 8, 64, 7, 65, 6, 66, 5, 67, 44, 75, 3, 76, 4, 77, 78, 46, 79, 47, 80, 21, 81, 45, 82, 19, 83, 20, 84, 22, 85, 23, 86, 25, 87, 24, 88, 27, 89, 26, 90, 28, 91, 29, 92, 30, 93, 31, 94, 32, 95, 48, 96, 33, 1, 49, 97, 34, 2 }
  uselistorder i32 4096, { 8, 9, 10, 1, 0, 2, 17, 3, 11, 4, 12, 13, 6, 14, 5, 7, 15, 16 }
  uselistorder i32 32768, { 1, 4, 2, 0, 3 }
  uselistorder i32 (i32, i32)* @function_11fa8, { 8, 0, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @function_121d0, { 12, 0, 11, 8, 7, 10, 9, 6, 5, 2, 1, 4, 3 }
  uselistorder i32 1024, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 ()* @function_12dc4, { 43, 42, 41, 4, 3, 2, 0, 1, 9, 7, 6, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 8, 5 }
  uselistorder i32 80, { 5, 2, 3, 4, 0, 1, 6, 7, 8, 9, 10 }
  uselistorder i8 43, { 2, 0, 1 }
  uselistorder i32 ()* @function_13e30, { 10, 9, 6, 5, 4, 3, 0, 8, 2, 1, 7 }
  uselistorder i32* @fp, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 87, 88, 89, 90, 91, 93, 92, 94, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 27, 28, 29, 30, 32, 33, 36, 34, 35, 0, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 83, 84, 86, 95, 98, 96, 97, 99, 60, 61, 62, 63 }
  uselistorder i32* @sb, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 118, 119, 121, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 122, 123, 124, 125, 126, 76, 77, 78, 79 }
  uselistorder label %dec_label_pc_16058, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_16054, { 2, 0, 1 }
  uselistorder label %bb40, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15f34, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %bb38, { 1, 0 }
  uselistorder label %dec_label_pc_15eac._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_15e54, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_15e04, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15dd4, { 1, 2, 0 }
}

define i32 @function_16068(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16068:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_16068 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16068, label %bb, label %.thread11

bb:                                               ; preds = %dec_label_pc_16068
  %v1_16068 = load i32, i32* %r0.global-to-local, align 4
  %v2_16068 = load i32, i32* @r4, align 4
  %v3_16068 = udiv i32 %v2_16068, 16
  %v4_16068 = mul i32 %v2_16068, 268435456
  %v5_16068 = or i32 %v3_16068, %v4_16068
  %v8_16068 = and i32 %v5_16068, %v1_16068
  %v2_16074 = load i32, i32* %r3.global-to-local, align 4
  %v3_16074 = and i32 %v8_16068, %v2_16074
  %v2_16078 = trunc i32 %v3_16074 to i16
  %v4_16078 = inttoptr i32 %v3_16074 to i16*
  store i16 %v2_16078, i16* %v4_16078, align 2
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %dec_label_pc_16068, %bb
  %v0_160a0 = call i32 @function_127c4()
  store i32 %v0_160a0, i32* @r5, align 4
  store i32 0, i32* @r0, align 4
  %v1_160ac = inttoptr i32 %v0_160a0 to i32*
  %v2_160ac = load i32, i32* %v1_160ac, align 4
  store i32 %v2_160ac, i32* @r6, align 4
  %v1_160b0 = call i32 @function_1710c(i32 0)
  store i32 %v1_160b0, i32* %r0.global-to-local, align 4
  %v2_160b8 = icmp eq i32 %v1_160b0, 0
  store i32 98320, i32* @r4, align 4
  br i1 %v2_160b8, label %bb24, label %.thread14

bb24:                                             ; preds = %.thread11
  %v5_160c4 = load i16, i16* inttoptr (i32 98620 to i16*), align 4
  %v7_160c4 = zext i16 %v5_160c4 to i32
  %v2_160c8 = xor i32 %v7_160c4, 256
  store i32 %v2_160c8, i32* @r3, align 4
  %v2_160cc = trunc i32 %v2_160c8 to i16
  store i16 %v2_160cc, i16* inttoptr (i32 98620 to i16*), align 4
  br label %.thread14

.thread14:                                        ; preds = %.thread11, %bb24
  store i32 1, i32* @r0, align 4
  %v1_160d4 = call i32 @function_1710c(i32 1)
  store i32 %v1_160d4, i32* %r0.global-to-local, align 4
  %v2_160d8 = icmp eq i32 %v1_160d4, 0
  br i1 %v2_160d8, label %bb25, label %.thread18

bb25:                                             ; preds = %.thread14
  %v1_160e0 = load i32, i32* @r4, align 4
  %v2_160e4 = add i32 %v1_160e0, 380
  %v3_160e4 = inttoptr i32 %v2_160e4 to i16*
  %v4_160e4 = load i16, i16* %v3_160e4, align 2
  %v5_160e4 = zext i16 %v4_160e4 to i32
  %v2_160e8 = xor i32 %v5_160e4, 256
  store i32 %v2_160e8, i32* %r3.global-to-local, align 4
  %v2_160ec = trunc i32 %v2_160e8 to i16
  store i16 %v2_160ec, i16* %v3_160e4, align 2
  br label %.thread18

.thread18:                                        ; preds = %.thread14, %bb25
  %v0_160f0 = load i32, i32* @r6, align 4
  %v1_160f0 = load i32, i32* @r5, align 4
  %v2_160f0 = inttoptr i32 %v1_160f0 to i32*
  store i32 %v0_160f0, i32* %v2_160f0, align 4
  ret i32 %v1_160d4

; uselistorder directives
  uselistorder i32 %v3_16074, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32 (i32)* @function_1710c, { 2, 1, 0 }
  uselistorder label %.thread18, { 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %.thread11, { 1, 0 }
}

define i32 @function_160fc(i32 %arg1) local_unnamed_addr {
dec_label_pc_160fc:
  %v0_160fc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_160fc, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_160fc
  %v2_160fc = load i32, i32* @ip, align 4
  %v5_16100 = udiv i32 %v2_160fc, 4
  %v6_16100 = and i32 %v5_16100, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_160fc, %bb
  %v7_16100 = phi i32 [ %arg1, %dec_label_pc_160fc ], [ %v6_16100, %bb ]
  ret i32 %v7_16100

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_16104(i32 %arg1) local_unnamed_addr {
dec_label_pc_16104:
  store i32 98320, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_17d04.525 to i32), i32* @r1, align 4
  store i32 24, i32* @r2, align 4
  %v0_16120 = call i32 @function_128d0()
  ret i32 %v0_16120
}

define i32 @function_1620c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1620c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1620c = load i32, i32* @r4, align 4
  store i32 %v3_1620c, i32* %stack_var_-8, align 4
  %v1_16210 = add i32 %arg1, 8
  %v2_16210 = inttoptr i32 %v1_16210 to i32*
  %v3_16210 = load i32, i32* %v2_16210, align 4
  %v1_16214 = add i32 %arg1, 16
  %v2_16214 = inttoptr i32 %v1_16214 to i32*
  %v3_16214 = load i32, i32* %v2_16214, align 4
  %v9_16218 = icmp eq i32 %v3_16214, %v3_16210
  store i32 %arg1, i32* %r4.global-to-local, align 4
  br i1 %v9_16218, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_1620c
  store i32 %v3_16210, i32* %v2_16214, align 4
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_1620c, %bb
  %v1_16224 = xor i1 %v9_16218, true
  call void @__pseudo_cond_branch(i1 %v1_16224, i32 ptrtoint (i32* @global_var_174f8.526 to i32))
  %v0_16228 = load i32, i32* %r4.global-to-local, align 4
  %v1_16228 = add i32 %v0_16228, 8
  %v2_16228 = inttoptr i32 %v1_16228 to i32*
  %v3_16228 = load i32, i32* %v2_16228, align 4
  %v1_1622c = add i32 %v0_16228, 16
  %v2_1622c = inttoptr i32 %v1_1622c to i32*
  %v3_1622c = load i32, i32* %v2_1622c, align 4
  %v2_16230 = sub i32 %v3_1622c, %v3_16228
  %v2_16234 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16234, i32* @r4, align 4
  ret i32 %v2_16230

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @function_1623c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1623c:
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1623c = load i32, i32* @r4, align 4
  store i32 %v3_1623c, i32* %stack_var_-16, align 4
  %v6_1623c = load i32, i32* @r5, align 4
  %v12_1623c = load i32, i32* @lr, align 4
  %v1_16240 = add i32 %arg1, 52
  %v2_16240 = inttoptr i32 %v1_16240 to i32*
  %v3_16240 = load i32, i32* %v2_16240, align 4
  %v2_16248 = icmp eq i32 %v3_16240, 0
  store i32 %arg1, i32* @r5, align 4
  store i32 98320, i32* %r6.global-to-local, align 4
  br i1 %v2_16248, label %dec_label_pc_16280, label %dec_label_pc_1625c

dec_label_pc_1625c:                               ; preds = %dec_label_pc_1623c
  %v1_1625c = add i32 %arg1, 16
  %v2_1625c = inttoptr i32 %v1_1625c to i32*
  %v3_1625c = load i32, i32* %v2_1625c, align 4
  %v1_16260 = add i32 %arg1, 24
  %v2_16260 = inttoptr i32 %v1_16260 to i32*
  %v3_16260 = load i32, i32* %v2_16260, align 4
  %v3_16264 = icmp ult i32 %v3_1625c, %v3_16260
  br i1 %v3_16264, label %.thread, label %dec_label_pc_16274

.thread:                                          ; preds = %dec_label_pc_1625c
  %v2_16268 = inttoptr i32 %v3_1625c to i8*
  %v3_16268 = load i8, i8* %v2_16268, align 1
  %v4_16268 = zext i8 %v3_16268 to i32
  store i32 %v4_16268, i32* %r4.global-to-local, align 4
  %v6_16268 = add i32 %v3_1625c, 1
  store i32 %v6_16268, i32* %v2_1625c, align 4
  br label %dec_label_pc_162f4

dec_label_pc_16274:                               ; preds = %dec_label_pc_1625c
  %v1_16274 = inttoptr i32 %arg1 to i16*
  %v2_16274 = call i32 @function_16768(i16* %v1_16274)
  store i32 %v2_16274, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_162f4

dec_label_pc_16280:                               ; preds = %dec_label_pc_1623c
  %v1_16284 = add i32 %arg1, 56
  store i32 %v1_16284, i32* @r4, align 4
  %v4_16298 = load i32, i32* inttoptr (i32 98392 to i32*), align 8
  call void @__pseudo_branch(i32 %v4_16298)
  %v0_162ac = load i32, i32* %r6.global-to-local, align 4
  %v2_162ac = add i32 %v0_162ac, 16
  %v3_162ac = inttoptr i32 %v2_162ac to i32*
  %v4_162ac = load i32, i32* %v3_162ac, align 4
  store i32 90808, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_162ac)
  %v0_162b8 = load i32, i32* @r5, align 4
  %v1_162b8 = add i32 %v0_162b8, 16
  %v2_162b8 = inttoptr i32 %v1_162b8 to i32*
  %v3_162b8 = load i32, i32* %v2_162b8, align 4
  %v1_162bc = add i32 %v0_162b8, 24
  %v2_162bc = inttoptr i32 %v1_162bc to i32*
  %v3_162bc = load i32, i32* %v2_162bc, align 4
  %v3_162c0 = icmp ult i32 %v3_162b8, %v3_162bc
  br i1 %v3_162c0, label %.thread2, label %dec_label_pc_162d0

.thread2:                                         ; preds = %dec_label_pc_16280
  %v2_162c4 = inttoptr i32 %v3_162b8 to i8*
  %v3_162c4 = load i8, i8* %v2_162c4, align 1
  %v4_162c4 = zext i8 %v3_162c4 to i32
  store i32 %v4_162c4, i32* %r4.global-to-local, align 4
  %v6_162c4 = add i32 %v3_162b8, 1
  store i32 %v6_162c4, i32* %v2_162b8, align 4
  br label %dec_label_pc_162dc

dec_label_pc_162d0:                               ; preds = %dec_label_pc_16280
  %v1_162d4 = inttoptr i32 %v0_162b8 to i16*
  %v2_162d4 = call i32 @function_16768(i16* %v1_162d4)
  store i32 %v2_162d4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_162dc

dec_label_pc_162dc:                               ; preds = %.thread2, %dec_label_pc_162d0
  %v0_162e8 = load i32, i32* %r6.global-to-local, align 4
  %v2_162e8 = add i32 %v0_162e8, 24
  %v3_162e8 = inttoptr i32 %v2_162e8 to i32*
  %v4_162e8 = load i32, i32* %v3_162e8, align 4
  store i32 %v4_162e8, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_162e8)
  br label %dec_label_pc_162f4

dec_label_pc_162f4:                               ; preds = %.thread, %dec_label_pc_16274, %dec_label_pc_162dc
  %v0_162f4 = load i32, i32* %r4.global-to-local, align 4
  %v2_162fc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_162fc, i32* @r4, align 4
  store i32 %v6_1623c, i32* @r5, align 4
  store i32 %v12_1623c, i32* @lr, align 4
  ret i32 %v0_162f4

; uselistorder directives
  uselistorder i32 %v3_162b8, { 1, 0, 2 }
  uselistorder i32 %v3_1625c, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg1, { 3, 0, 5, 4, 1, 2 }
  uselistorder label %dec_label_pc_162f4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_162dc, { 1, 0 }
}

define i32 @function_16304(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16304:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_16304 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16304, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_16304
  %tmp5 = trunc i32 %arg2 to i16
  store i16 %tmp5, i16* %arg1, align 2
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_16304, %bb
  %v10_16314 = phi i32 [ %tmp, %dec_label_pc_16304 ], [ 0, %bb ]
  ret i32 %v10_16314

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @function_16318(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16318:
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_16318 = load i32, i32* @r4, align 4
  store i32 %v3_16318, i32* %stack_var_-28, align 4
  %v6_16318 = load i32, i32* @r5, align 4
  %v9_16318 = load i32, i32* @r6, align 4
  %v12_16318 = load i32, i32* @r7, align 4
  %v21_16318 = load i32, i32* @lr, align 4
  %v1_1631c = add i32 %arg3, 52
  %v2_1631c = inttoptr i32 %v1_1631c to i32*
  %v3_1631c = load i32, i32* %v2_1631c, align 4
  %v1_16324 = sub i32 1, %v3_1631c
  %v2_16324 = icmp ult i32 %v3_1631c, 2
  br i1 %v2_16324, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_16318
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_16318, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_16324, %dec_label_pc_16318 ]
  %v0_1632c = phi i32 [ 0, %bb ], [ %v1_16324, %dec_label_pc_16318 ]
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  %v2_1632c = icmp eq i32 %v0_1632c, 0
  store i32 98320, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  br i1 %v2_1632c, label %dec_label_pc_16380, label %dec_label_pc_16348

dec_label_pc_16348:                               ; preds = %bb16
  %v1_1634c = add i32 %arg3, 56
  store i32 %v1_1634c, i32* @r4, align 4
  %v4_16360 = load i32, i32* inttoptr (i32 98392 to i32*), align 8
  call void @__pseudo_branch(i32 %v4_16360)
  %v0_16374 = load i32, i32* @r5, align 4
  %v2_16374 = add i32 %v0_16374, 16
  %v3_16374 = inttoptr i32 %v2_16374 to i32*
  %v4_16374 = load i32, i32* %v3_16374, align 4
  store i32 %v4_16374, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_16380.536 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_16374)
  %v0_16380.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_16384.pre = load i32, i32* @r7, align 4
  %v0_16388.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_16380

dec_label_pc_16380:                               ; preds = %bb16, %dec_label_pc_16348
  %v0_16388 = phi i32 [ %arg3, %bb16 ], [ %v0_16388.pre, %dec_label_pc_16348 ]
  %v0_16384 = phi i32 [ %arg2, %bb16 ], [ %v0_16384.pre, %dec_label_pc_16348 ]
  %v0_16380 = phi i32 [ %arg1, %bb16 ], [ %v0_16380.pre, %dec_label_pc_16348 ]
  %v3_1638c = inttoptr i32 %v0_16380 to i8*
  %v4_1638c = call i32 @function_16894(i8* %v3_1638c, i32 %v0_16384, i32 %v0_16388)
  %v0_16390 = load i32, i32* %sl.global-to-local, align 4
  %v2_16390 = icmp eq i32 %v0_16390, 0
  store i32 %v4_1638c, i32* %r4.global-to-local, align 4
  br i1 %v2_16390, label %dec_label_pc_16380..thread3_crit_edge, label %bb17

dec_label_pc_16380..thread3_crit_edge:            ; preds = %dec_label_pc_16380
  %v0_163ac.pre = load i32, i32* @ip, align 4
  br label %.thread3

bb17:                                             ; preds = %dec_label_pc_16380
  %v1_163a4 = load i32, i32* @r5, align 4
  %v3_163a4 = add i32 %v1_163a4, 24
  %v4_163a4 = inttoptr i32 %v3_163a4 to i32*
  %v5_163a4 = load i32, i32* %v4_163a4, align 4
  store i32 %v5_163a4, i32* @ip, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_16380..thread3_crit_edge, %bb17
  %v0_163ac = phi i32 [ %v0_163ac.pre, %dec_label_pc_16380..thread3_crit_edge ], [ %v5_163a4, %bb17 ]
  %v2_163ac = xor i1 %v2_16390, true
  call void @__pseudo_cond_branch(i1 %v2_163ac, i32 %v0_163ac)
  %v0_163b0 = load i32, i32* %r4.global-to-local, align 4
  %v2_163b8 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_163b8, i32* %r4.global-to-local, align 4
  store i32 %v6_16318, i32* @r5, align 4
  store i32 %v9_16318, i32* @r6, align 4
  store i32 %v12_16318, i32* @r7, align 4
  store i32 %v21_16318, i32* @lr, align 4
  ret i32 %v0_163b0

; uselistorder directives
  uselistorder i32 %v3_1631c, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0 }
  uselistorder i32 52, { 9, 10, 11, 12, 13, 3, 16, 7, 8, 4, 18, 19, 1, 20, 0, 21, 22, 5, 6, 14, 15, 17, 2 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_16380, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
}

define i32 @function_163c0(i64* %arg1) local_unnamed_addr {
dec_label_pc_163c0:
  %tmp = ptrtoint i64* %arg1 to i32
  %v0_163c0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_163c0, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_163c0
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_163c0, %bb
  %v10_163d0 = phi i32 [ %tmp, %dec_label_pc_163c0 ], [ 0, %bb ]
  ret i32 %v10_163d0

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @function_163d4() local_unnamed_addr {
dec_label_pc_163d4:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_163d4 = load i32, i32* @r4, align 4
  store i32 %v3_163d4, i32* %stack_var_-24, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 98320, i32* %r6.global-to-local, align 4
  %v4_163e4 = load i32, i32* inttoptr (i32 98356 to i32*), align 4
  store i32 %v4_163e4, i32* %r8.global-to-local, align 4
  store i32 108, i32* %r3.global-to-local, align 4
  %v4_163ec = load i32, i32* inttoptr (i32 98428 to i32*), align 4
  store i32 %v4_163ec, i32* %r4.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_163f8 = load i32, i32* inttoptr (i32 98392 to i32*), align 8
  store i32 %v4_163f8, i32* %r7.global-to-local, align 4
  %v2_16404 = ptrtoint i32* %stack_var_-40 to i32
  call void @__pseudo_branch(i32 %v4_163f8)
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_16418 = load i32, i32* %r6.global-to-local, align 4
  %v2_16418 = add i32 %v0_16418, 16
  %v3_16418 = inttoptr i32 %v2_16418 to i32*
  %v4_16418 = load i32, i32* %v3_16418, align 4
  store i32 %v4_16418, i32* %r5.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_16418)
  store i32 12, i32* %r3.global-to-local, align 4
  %v0_16428 = load i32, i32* %r6.global-to-local, align 4
  %v2_16428 = add i32 %v0_16428, 12
  %v3_16428 = inttoptr i32 %v2_16428 to i32*
  %v4_16428 = load i32, i32* %v3_16428, align 4
  store i32 %v4_16428, i32* %r3.global-to-local, align 4
  %v1_1642c = inttoptr i32 %v4_16428 to i32*
  %v2_1642c = load i32, i32* %v1_1642c, align 4
  store i32 %v2_1642c, i32* %r3.global-to-local, align 4
  %v7_16430 = icmp eq i32 %v2_1642c, 1
  br i1 %v7_16430, label %dec_label_pc_16438, label %dec_label_pc_164f8

dec_label_pc_16438:                               ; preds = %dec_label_pc_163d4
  store i32 48, i32* %r3.global-to-local, align 4
  %v2_1643c = add i32 %v0_16428, 48
  %v3_1643c = inttoptr i32 %v2_1643c to i32*
  %v4_1643c = load i32, i32* %v3_1643c, align 4
  store i32 %v4_1643c, i32* %r3.global-to-local, align 4
  %v1_16440 = inttoptr i32 %v4_1643c to i32*
  %v2_16440 = load i32, i32* %v1_16440, align 4
  store i32 %v2_16440, i32* %r3.global-to-local, align 4
  %tmp30 = icmp slt i32 %v2_16440, 1
  br i1 %tmp30, label %dec_label_pc_164f8, label %dec_label_pc_1644c

dec_label_pc_1644c:                               ; preds = %dec_label_pc_16438
  store i32 96, i32* %r3.global-to-local, align 4
  %v2_16450 = add i32 %v0_16428, 96
  %v3_16450 = inttoptr i32 %v2_16450 to i32*
  %v4_16450 = load i32, i32* %v3_16450, align 4
  store i32 %v4_16450, i32* %r4.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_163f8)
  call void @__pseudo_branch(i32 %v4_16418)
  %v0_16478 = load i32, i32* %r6.global-to-local, align 4
  %v2_16478 = add i32 %v0_16478, 44
  %v3_16478 = inttoptr i32 %v2_16478 to i32*
  %v4_16478 = load i32, i32* %v3_16478, align 4
  store i32 %v4_16478, i32* %r3.global-to-local, align 4
  %v1_1647c = inttoptr i32 %v4_16478 to i32*
  %v2_1647c = load i32, i32* %v1_1647c, align 4
  store i32 %v2_1647c, i32* %r4.global-to-local, align 4
  store i32 44, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_164c811 = icmp eq i32 %v2_1647c, 0
  br i1 %v2_164c811, label %dec_label_pc_164d4, label %dec_label_pc_1648c

dec_label_pc_1648c:                               ; preds = %dec_label_pc_1644c, %dec_label_pc_164c4
  %v0_164b02 = phi i32 [ %v0_164c4, %dec_label_pc_164c4 ], [ %v2_1647c, %dec_label_pc_1644c ]
  %v1_1648c = inttoptr i32 %v0_164b02 to i16*
  %v2_1648c = load i16, i16* %v1_1648c, align 2
  %v3_1648c = zext i16 %v2_1648c to i32
  store i32 %v3_1648c, i32* %r3.global-to-local, align 4
  %v2_16490 = and i32 %v3_1648c, 32816
  %v7_16494 = icmp eq i32 %v2_16490, 48
  %v1_16498 = add i32 %v0_164b02, 32
  %v2_16498 = inttoptr i32 %v1_16498 to i32*
  %v3_16498 = load i32, i32* %v2_16498, align 4
  store i32 %v3_16498, i32* %r5.global-to-local, align 4
  br i1 %v7_16494, label %dec_label_pc_164a4, label %.thread21

.thread21:                                        ; preds = %dec_label_pc_1648c
  store i32 %v0_164b02, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_164c4

dec_label_pc_164a4:                               ; preds = %dec_label_pc_1648c
  %v0_164a4 = load i32, i32* %r7.global-to-local, align 4
  %v2_164a4 = icmp eq i32 %v0_164a4, 0
  br i1 %v2_164a4, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_164a4
  %v1_164a8 = load i32, i32* %r6.global-to-local, align 4
  %v2_164a8 = load i32, i32* %r8.global-to-local, align 4
  %v3_164a8 = add i32 %v2_164a8, %v1_164a8
  %v4_164a8 = inttoptr i32 %v3_164a8 to i32*
  %v5_164a8 = load i32, i32* %v4_164a8, align 4
  store i32 %v5_164a8, i32* %r3.global-to-local, align 4
  %v3_164ac = inttoptr i32 %v5_164a8 to i32*
  store i32 %v3_16498, i32* %v3_164ac, align 4
  %v0_164b0 = load i32, i32* %r4.global-to-local, align 4
  %v1_164b0 = inttoptr i32 %v0_164b0 to i16*
  %v2_164b0 = load i16, i16* %v1_164b0, align 2
  %v3_164b0 = zext i16 %v2_164b0 to i32
  store i32 %v3_164b0, i32* %r3.global-to-local, align 4
  br label %bb31

bb:                                               ; preds = %dec_label_pc_164a4
  %v2_164b08 = load i16, i16* %v1_1648c, align 2
  %v3_164b09 = zext i16 %v2_164b08 to i32
  store i32 %v3_164b09, i32* %r3.global-to-local, align 4
  %v3_164b4 = add i32 %v0_164a4, 32
  %v4_164b4 = inttoptr i32 %v3_164b4 to i32*
  store i32 %v3_16498, i32* %v4_164b4, align 4
  %v0_164b8.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb31

bb31:                                             ; preds = %.thread, %bb
  %v0_164b8 = phi i32 [ %v3_164b0, %.thread ], [ %v0_164b8.pre, %bb ]
  %v1_164b8 = and i32 %v0_164b8, 8192
  %v2_164b8 = icmp eq i32 %v1_164b8, 0
  br i1 %v2_164b8, label %bb33, label %bb32

bb32:                                             ; preds = %bb31
  br label %bb33

bb33:                                             ; preds = %bb31, %bb32
  %v1_164c0 = xor i1 %v2_164b8, true
  call void @__pseudo_cond_branch(i1 %v1_164c0, i32 ptrtoint (i32* @global_var_13e30.21 to i32))
  %v0_164c4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_164c4

dec_label_pc_164c4:                               ; preds = %.thread21, %bb33
  %v0_164c4 = phi i32 [ %v0_164c4.pre, %bb33 ], [ %v3_16498, %.thread21 ]
  store i32 %v0_164c4, i32* %r4.global-to-local, align 4
  %v2_164c8 = icmp eq i32 %v0_164c4, 0
  br i1 %v2_164c8, label %dec_label_pc_164c8.dec_label_pc_164d4_crit_edge, label %dec_label_pc_1648c

dec_label_pc_164c8.dec_label_pc_164d4_crit_edge:  ; preds = %dec_label_pc_164c4
  %v0_164e0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_164d4

dec_label_pc_164d4:                               ; preds = %dec_label_pc_164c8.dec_label_pc_164d4_crit_edge, %dec_label_pc_1644c
  %v0_164e0 = phi i32 [ %v0_164e0.pre, %dec_label_pc_164c8.dec_label_pc_164d4_crit_edge ], [ %v0_16478, %dec_label_pc_1644c ]
  store i32 24, i32* %r3.global-to-local, align 4
  %v2_164e0 = add i32 %v0_164e0, 24
  %v3_164e0 = inttoptr i32 %v2_164e0 to i32*
  %v4_164e0 = load i32, i32* %v3_164e0, align 4
  call void @__pseudo_branch(i32 %v4_164e0)
  store i32 48, i32* %r3.global-to-local, align 4
  %v0_164f0 = load i32, i32* %r6.global-to-local, align 4
  %v2_164f0 = add i32 %v0_164f0, 48
  %v3_164f0 = inttoptr i32 %v2_164f0 to i32*
  %v4_164f0 = load i32, i32* %v3_164f0, align 4
  store i32 %v4_164f0, i32* %r3.global-to-local, align 4
  %v0_164f4 = load i32, i32* %r4.global-to-local, align 4
  %v2_164f4 = inttoptr i32 %v4_164f0 to i32*
  store i32 %v0_164f4, i32* %v2_164f4, align 4
  %v0_164fc.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_164f8

dec_label_pc_164f8:                               ; preds = %dec_label_pc_163d4, %dec_label_pc_16438, %dec_label_pc_164d4
  %v0_164fc = phi i32 [ %v0_16428, %dec_label_pc_163d4 ], [ %v0_16428, %dec_label_pc_16438 ], [ %v0_164fc.pre, %dec_label_pc_164d4 ]
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_164fc = add i32 %v0_164fc, 12
  %v3_164fc = inttoptr i32 %v2_164fc to i32*
  %v4_164fc = load i32, i32* %v3_164fc, align 4
  %v1_16500 = inttoptr i32 %v4_164fc to i32*
  %v2_16500 = load i32, i32* %v1_16500, align 4
  %v1_16504 = add i32 %v2_16500, -1
  store i32 %v1_16504, i32* %v1_16500, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v0_16518 = load i32, i32* %r6.global-to-local, align 4
  %v2_16518 = add i32 %v0_16518, 24
  %v3_16518 = inttoptr i32 %v2_16518 to i32*
  %v4_16518 = load i32, i32* %v3_16518, align 4
  call void @__pseudo_branch(i32 %v4_16518)
  %v2_16528 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_16528, i32* %r4.global-to-local, align 4
  ret i32 %v2_16404

; uselistorder directives
  uselistorder i32 %v0_164c4, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 7, 3, 4, 5, 6, 8 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 20, 21, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32 8192, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* inttoptr (i32 98356 to i32*), { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_164f8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_164c4, { 1, 0 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_1648c, { 1, 0 }
}

define i32 @function_16530(i16* %arg1) local_unnamed_addr {
dec_label_pc_16530:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v0_16530 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16530, label %bb, label %dec_label_pc_16530..thread9_crit_edge

dec_label_pc_16530..thread9_crit_edge:            ; preds = %dec_label_pc_16530
  %v0_16570.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread9

bb:                                               ; preds = %dec_label_pc_16530
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_16530..thread9_crit_edge, %bb
  %v0_16710 = phi i32 [ %v0_16570.pre, %dec_label_pc_16530..thread9_crit_edge ], [ 0, %bb ]
  %v3_1655c = load i32, i32* @r4, align 4
  store i32 %v3_1655c, i32* %stack_var_-36, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  store i32 98320, i32* %sb.global-to-local, align 4
  %v4_1656c = load i32, i32* inttoptr (i32 98364 to i32*), align 4
  store i32 %v4_1656c, i32* %r3.global-to-local, align 4
  %v9_16570 = icmp eq i32 %v0_16710, %v4_1656c
  store i32 %v0_16710, i32* %fp.global-to-local, align 4
  br i1 %v9_16570, label %bb50, label %dec_label_pc_16588

bb50:                                             ; preds = %.thread9
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_16598

dec_label_pc_16588:                               ; preds = %.thread9
  store i32 256, i32* %r2.global-to-local, align 4
  %v2_1658c = icmp eq i32 %v0_16710, 0
  br i1 %v2_1658c, label %dec_label_pc_16598, label %dec_label_pc_16700

dec_label_pc_16598:                               ; preds = %bb50, %dec_label_pc_16588
  %stack_var_-60.1.in = phi i32 [ 0, %bb50 ], [ 256, %dec_label_pc_16588 ]
  store i32 108, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_165ac = load i32, i32* inttoptr (i32 98428 to i32*), align 4
  store i32 %v4_165ac, i32* %r4.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v2_165b4 = ptrtoint i32* %stack_var_-56 to i32
  %v4_165b8 = load i32, i32* inttoptr (i32 98392 to i32*), align 8
  store i32 16, i32* %stack_var_-72, align 4
  store i32 %v2_165b4, i32* %r0.global-to-local, align 4
  store i32 %v4_165ac, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_165b8)
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_165d8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_165d8, i32* %r0.global-to-local, align 4
  %v0_165dc = load i32, i32* %sb.global-to-local, align 4
  %v2_165dc = add i32 %v0_165dc, 16
  %v3_165dc = inttoptr i32 %v2_165dc to i32*
  %v4_165dc = load i32, i32* %v3_165dc, align 4
  call void @__pseudo_branch(i32 %v4_165dc)
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_165ec = add i32 %v0_165dc, 12
  %v3_165ec = inttoptr i32 %v2_165ec to i32*
  %v4_165ec = load i32, i32* %v3_165ec, align 4
  store i32 %v4_165ec, i32* %r2.global-to-local, align 4
  %v1_165f0 = inttoptr i32 %v4_165ec to i32*
  %v2_165f0 = load i32, i32* %v1_165f0, align 4
  store i32 24, i32* %sl.global-to-local, align 4
  %v1_165f8 = add i32 %v2_165f0, 1
  store i32 %v1_165f8, i32* %r3.global-to-local, align 4
  %v2_165fc = add i32 %v0_165dc, 24
  %v3_165fc = inttoptr i32 %v2_165fc to i32*
  %v4_165fc = load i32, i32* %v3_165fc, align 4
  store i32 %v1_165f8, i32* %v1_165f0, align 4
  store i32 %v2_165b4, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_165fc)
  store i32 96, i32* %r3.global-to-local, align 4
  %v0_16618 = load i32, i32* %sb.global-to-local, align 4
  %v2_16618 = add i32 %v0_16618, 96
  %v3_16618 = inttoptr i32 %v2_16618 to i32*
  %v4_16618 = load i32, i32* %v3_16618, align 4
  store i32 %v4_16618, i32* @r4, align 4
  store i32 %v4_16618, i32* %r2.global-to-local, align 4
  store i32 %v2_165b4, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_165b8)
  %v0_16630 = load i32, i32* @r4, align 4
  store i32 %v0_16630, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_165dc)
  store i32 44, i32* %r3.global-to-local, align 4
  %v0_16640 = load i32, i32* %sb.global-to-local, align 4
  %v2_16640 = add i32 %v0_16640, 44
  %v3_16640 = inttoptr i32 %v2_16640 to i32*
  %v4_16640 = load i32, i32* %v3_16640, align 4
  store i32 %v4_16640, i32* %r3.global-to-local, align 4
  store i32 %v2_165b4, i32* %r0.global-to-local, align 4
  %v1_1664c = inttoptr i32 %v4_16640 to i32*
  %v2_1664c = load i32, i32* %v1_1664c, align 4
  store i32 %v2_1664c, i32* @r7, align 4
  call void @__pseudo_branch(i32 %v4_165fc)
  %v0_16658 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_16658, i32* @r6, align 4
  %v2_1665c = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_1665c, i32* @r8, align 4
  store i32 72, i32* %fp.global-to-local, align 4
  %v0_166f0.pr = load i32, i32* @r7, align 4
  %v2_166f029 = icmp eq i32 %v0_166f0.pr, 0
  br i1 %v2_166f029, label %dec_label_pc_166f8, label %dec_label_pc_16664

dec_label_pc_16664:                               ; preds = %dec_label_pc_16598, %dec_label_pc_166ec
  %v0_16670 = phi i32 [ %v3_166ec, %dec_label_pc_166ec ], [ %v0_166f0.pr, %dec_label_pc_16598 ]
  %v1_16664 = inttoptr i32 %v0_16670 to i16*
  %v2_16664 = load i16, i16* %v1_16664, align 2
  %v3_16664 = zext i16 %v2_16664 to i32
  store i32 %v3_16664, i32* %r3.global-to-local, align 4
  %v1_16668 = and i32 %v3_16664, 64
  %v2_16668 = icmp eq i32 %v1_16668, 0
  br i1 %v2_16668, label %dec_label_pc_166ec, label %dec_label_pc_16670

dec_label_pc_16670:                               ; preds = %dec_label_pc_16664
  %v1_16670 = add i32 %v0_16670, 56
  store i32 %v1_16670, i32* @r4, align 4
  store i32 %v1_16670, i32* %r2.global-to-local, align 4
  store i32 %v2_165b4, i32* %r0.global-to-local, align 4
  %v0_16680 = load i32, i32* %sb.global-to-local, align 4
  %v1_16680 = load i32, i32* %fp.global-to-local, align 4
  %v2_16680 = add i32 %v1_16680, %v0_16680
  %v3_16680 = inttoptr i32 %v2_16680 to i32*
  %v4_16680 = load i32, i32* %v3_16680, align 4
  call void @__pseudo_branch(i32 %v4_16680)
  %v0_1668c = load i32, i32* @r4, align 4
  store i32 %v0_1668c, i32* %r0.global-to-local, align 4
  %v0_16690 = load i32, i32* %sb.global-to-local, align 4
  %v1_16690 = load i32, i32* @r8, align 4
  %v2_16690 = add i32 %v1_16690, %v0_16690
  %v3_16690 = inttoptr i32 %v2_16690 to i32*
  %v4_16690 = load i32, i32* %v3_16690, align 4
  call void @__pseudo_branch(i32 %v4_16690)
  %v0_1669c = load i32, i32* @r7, align 4
  %v1_1669c = inttoptr i32 %v0_1669c to i16*
  %v2_1669c = load i16, i16* %v1_1669c, align 2
  %v3_1669c = zext i16 %v2_1669c to i32
  store i32 %stack_var_-60.1.in, i32* %r2.global-to-local, align 4
  %v2_166a4 = or i32 %v3_1669c, %stack_var_-60.1.in
  %v1_166a8 = xor i32 %v2_166a4, 320
  store i32 %v1_166a8, i32* %r3.global-to-local, align 4
  %v1_166ac = and i32 %v1_166a8, 832
  %v2_166ac = icmp eq i32 %v1_166ac, 0
  br i1 %v2_166ac, label %dec_label_pc_166b4, label %bb51

dec_label_pc_166b4:                               ; preds = %dec_label_pc_16670
  store i32 %v0_1669c, i32* %r0.global-to-local, align 4
  %v1_166b8 = call i32 @function_1620c(i32 %v0_1669c)
  store i32 %v1_166b8, i32* %r0.global-to-local, align 4
  %v2_166bc = icmp eq i32 %v1_166b8, 0
  br i1 %v2_166bc, label %.thread17, label %.thread18

.thread17:                                        ; preds = %dec_label_pc_166b4
  %v1_166c0 = load i32, i32* @r7, align 4
  %v2_166c0 = inttoptr i32 %v1_166c0 to i16*
  %v3_166c0 = load i16, i16* %v2_166c0, align 2
  %v4_166c0 = zext i16 %v3_166c0 to i32
  store i32 %v4_166c0, i32* %r3.global-to-local, align 4
  %v2_166c4 = add i32 %v1_166c0, 8
  %v3_166c4 = inttoptr i32 %v2_166c4 to i32*
  %v4_166c4 = load i32, i32* %v3_166c4, align 4
  store i32 %v4_166c4, i32* %r2.global-to-local, align 4
  %v2_166c8 = and i32 %v4_166c0, 65471
  store i32 %v2_166c8, i32* %r3.global-to-local, align 4
  %v3_166cc = add i32 %v1_166c0, 28
  %v4_166cc = inttoptr i32 %v3_166cc to i32*
  store i32 %v4_166c4, i32* %v4_166cc, align 4
  %v1_166d0 = load i32, i32* %r3.global-to-local, align 4
  %v2_166d0 = trunc i32 %v1_166d0 to i16
  %v3_166d0 = load i32, i32* @r7, align 4
  %v4_166d0 = inttoptr i32 %v3_166d0 to i16*
  store i16 %v2_166d0, i16* %v4_166d0, align 2
  br label %bb51

.thread18:                                        ; preds = %dec_label_pc_166b4
  store i32 -1, i32* @r6, align 4
  br label %bb51

bb51:                                             ; preds = %.thread17, %dec_label_pc_16670, %.thread18
  store i32 %v2_165b4, i32* %r0.global-to-local, align 4
  %v0_166e0 = load i32, i32* %sb.global-to-local, align 4
  %v1_166e0 = load i32, i32* %sl.global-to-local, align 4
  %v2_166e0 = add i32 %v1_166e0, %v0_166e0
  %v3_166e0 = inttoptr i32 %v2_166e0 to i32*
  %v4_166e0 = load i32, i32* %v3_166e0, align 4
  call void @__pseudo_branch(i32 %v4_166e0)
  %v0_166ec.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_166ec

dec_label_pc_166ec:                               ; preds = %dec_label_pc_16664, %bb51
  %v0_166ec = phi i32 [ %v0_16670, %dec_label_pc_16664 ], [ %v0_166ec.pre, %bb51 ]
  %v1_166ec = add i32 %v0_166ec, 32
  %v2_166ec = inttoptr i32 %v1_166ec to i32*
  %v3_166ec = load i32, i32* %v2_166ec, align 4
  store i32 %v3_166ec, i32* @r7, align 4
  %v2_166f0 = icmp eq i32 %v3_166ec, 0
  br i1 %v2_166f0, label %dec_label_pc_166f8, label %dec_label_pc_16664

dec_label_pc_166f8:                               ; preds = %dec_label_pc_166ec, %dec_label_pc_16598
  %v0_166f8 = call i32 @function_163d4()
  store i32 %v0_166f8, i32* %r0.global-to-local, align 4
  %v0_16734.pre = load i32, i32* @r6, align 4
  br label %bb53

dec_label_pc_16700:                               ; preds = %dec_label_pc_16588
  %v1_16700 = inttoptr i32 %v0_16710 to i16*
  %v2_16700 = load i16, i16* %v1_16700, align 2
  %v3_16700 = zext i16 %v2_16700 to i32
  %v1_16704 = and i32 %v3_16700, 64
  store i32 %v1_16704, i32* %r3.global-to-local, align 4
  %v2_16704 = icmp eq i32 %v1_16704, 0
  br i1 %v2_16704, label %bb52, label %dec_label_pc_16710

bb52:                                             ; preds = %dec_label_pc_16700
  br label %bb53

dec_label_pc_16710:                               ; preds = %dec_label_pc_16700
  %v1_16710 = call i32 @function_1620c(i32 %v0_16710)
  store i32 %v1_16710, i32* %r0.global-to-local, align 4
  %v2_16714 = icmp eq i32 %v1_16710, 0
  br i1 %v2_16714, label %.thread25, label %.thread27

.thread27:                                        ; preds = %dec_label_pc_16710
  br label %bb53

.thread25:                                        ; preds = %dec_label_pc_16710
  %v1_16718 = load i32, i32* %fp.global-to-local, align 4
  %v2_16718 = inttoptr i32 %v1_16718 to i16*
  %v3_16718 = load i16, i16* %v2_16718, align 2
  %v4_16718 = zext i16 %v3_16718 to i32
  store i32 %v4_16718, i32* %r3.global-to-local, align 4
  %v2_1671c = add i32 %v1_16718, 8
  %v3_1671c = inttoptr i32 %v2_1671c to i32*
  %v4_1671c = load i32, i32* %v3_1671c, align 4
  store i32 %v4_1671c, i32* %r2.global-to-local, align 4
  %v2_16720 = and i32 %v4_16718, 65471
  store i32 %v2_16720, i32* %r3.global-to-local, align 4
  %v2_16724 = trunc i32 %v2_16720 to i16
  store i16 %v2_16724, i16* %v2_16718, align 2
  %v1_16728 = load i32, i32* %r2.global-to-local, align 4
  %v2_16728 = load i32, i32* %fp.global-to-local, align 4
  %v3_16728 = add i32 %v2_16728, 28
  %v4_16728 = inttoptr i32 %v3_16728 to i32*
  store i32 %v1_16728, i32* %v4_16728, align 4
  br label %bb53

bb53:                                             ; preds = %bb52, %.thread27, %dec_label_pc_166f8, %.thread25
  %v0_16734 = phi i32 [ -1, %.thread27 ], [ 0, %bb52 ], [ %v0_16734.pre, %dec_label_pc_166f8 ], [ 0, %.thread25 ]
  store i32 %v0_16734, i32* %r0.global-to-local, align 4
  %v2_1673c = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_1673c, i32* %r4.global-to-local, align 4
  ret i32 %v0_16734

; uselistorder directives
  uselistorder i32 %v0_16734, { 1, 0 }
  uselistorder i32 %v3_166ec, { 1, 2, 0 }
  uselistorder i32 %v0_1669c, { 1, 0, 2 }
  uselistorder i32 %v0_165dc, { 1, 0, 2 }
  uselistorder i32 %v0_16710, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 6, 5, 16, 7, 9, 8, 10, 12, 11, 13, 14, 15, 2, 0, 1 }
  uselistorder i32* %fp.global-to-local, { 3, 4, 0, 1, 5, 2, 6 }
  uselistorder i32 ()* @function_163d4, { 1, 0 }
  uselistorder i32 56, { 10, 11, 12, 2, 3, 13, 16, 6, 7, 8, 9, 1, 4, 5, 14, 15, 0, 17 }
  uselistorder i32* @r8, { 7, 8, 9, 10, 11, 12, 13, 14, 1, 15, 202, 16, 156, 157, 2, 158, 159, 160, 184, 185, 186, 187, 188, 6, 189, 190, 191, 192, 193, 194, 195, 196, 61, 62, 63, 64, 65, 22, 23, 24, 25, 26, 27, 28, 17, 18, 19, 20, 21, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 3, 54, 55, 56, 57, 58, 59, 60, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 124, 4, 125, 126, 127, 128, 129, 130, 131, 132, 5, 133, 134, 135, 136, 137, 138, 0, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 197, 198, 199, 200, 201, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 119, 120, 121, 122, 123 }
  uselistorder i32 96, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 12, 13, 10, 11 }
  uselistorder i32* inttoptr (i32 98392 to i32*), { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32 72, { 0, 1, 2, 3, 4, 5, 17, 12, 13, 14, 15, 6, 18, 7, 8, 9, 10, 16, 11 }
  uselistorder label %bb53, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_166ec, { 1, 0 }
  uselistorder label %bb51, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16664, { 1, 0 }
  uselistorder label %dec_label_pc_16598, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
}

define i32 @function_16744(i32 %arg1) local_unnamed_addr {
dec_label_pc_16744:
  %v0_16744 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16744, label %bb, label %.thread7

bb:                                               ; preds = %dec_label_pc_16744
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_16744, %bb
  %v5_16764 = phi i32 [ %arg1, %dec_label_pc_16744 ], [ 0, %bb ]
  ret i32 %v5_16764

; uselistorder directives
  uselistorder label %.thread7, { 1, 0 }
}

define i32 @function_16768(i16* %arg1) local_unnamed_addr {
dec_label_pc_16768:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_16768 = load i32, i32* @r4, align 4
  store i32 %v3_16768, i32* %stack_var_-12, align 4
  %v6_16768 = load i32, i32* @r5, align 4
  %v9_16768 = load i32, i32* @lr, align 4
  %v0_1676c = load i32, i32* @r0, align 4
  %v1_1676c = add i32 %v0_1676c, 16
  %v2_1676c = inttoptr i32 %v1_1676c to i32*
  %v3_1676c = load i32, i32* %v2_1676c, align 4
  store i32 %v3_1676c, i32* %r2.global-to-local, align 4
  %v1_16770 = add i32 %v0_1676c, 24
  %v2_16770 = inttoptr i32 %v1_16770 to i32*
  %v3_16770 = load i32, i32* %v2_16770, align 4
  %v3_16774 = icmp ult i32 %v3_1676c, %v3_16770
  store i32 %v0_1676c, i32* @r4, align 4
  br i1 %v3_16774, label %bb, label %dec_label_pc_16794

bb:                                               ; preds = %dec_label_pc_16768
  %v2_16780 = inttoptr i32 %v3_1676c to i8*
  %v3_16780 = load i8, i8* %v2_16780, align 1
  %v4_16780 = zext i8 %v3_16780 to i32
  store i32 %v4_16780, i32* %r0.global-to-local, align 4
  %v6_16780 = add i32 %v3_1676c, 1
  store i32 %v6_16780, i32* %r2.global-to-local, align 4
  store i32 %v6_16780, i32* %v2_1676c, align 4
  br label %dec_label_pc_16880

dec_label_pc_16794:                               ; preds = %dec_label_pc_16768
  store i32 98320, i32* @r5, align 4
  %v1_16794 = inttoptr i32 %v0_1676c to i16*
  %v2_16794 = load i16, i16* %v1_16794, align 2
  %v3_16794 = zext i16 %v2_16794 to i32
  %v1_16798 = and i32 %v3_16794, 131
  %tmp24 = icmp ugt i32 %v1_16798, 128
  br i1 %tmp24, label %dec_label_pc_167b4, label %dec_label_pc_167a4

dec_label_pc_167a4:                               ; preds = %dec_label_pc_16794
  store i32 128, i32* @r1, align 4
  %v0_167a8 = call i32 @function_175dc()
  store i32 %v0_167a8, i32* %r0.global-to-local, align 4
  %v2_167ac = icmp eq i32 %v0_167a8, 0
  br i1 %v2_167ac, label %dec_label_pc_167a4.dec_label_pc_167b4_crit_edge, label %dec_label_pc_1687c

dec_label_pc_167a4.dec_label_pc_167b4_crit_edge:  ; preds = %dec_label_pc_167a4
  %v0_167b4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_167b4

dec_label_pc_167b4:                               ; preds = %dec_label_pc_167a4.dec_label_pc_167b4_crit_edge, %dec_label_pc_16794
  %v2_167f4 = phi i32 [ %v0_167b4.pre, %dec_label_pc_167a4.dec_label_pc_167b4_crit_edge ], [ %v0_1676c, %dec_label_pc_16794 ]
  %v1_167b4 = inttoptr i32 %v2_167f4 to i16*
  %v2_167b4 = load i16, i16* %v1_167b4, align 2
  %v3_167b4 = zext i16 %v2_167b4 to i32
  store i32 %v3_167b4, i32* %r2.global-to-local, align 4
  %v1_167b8 = and i32 %v3_167b4, 2
  %v2_167b8 = icmp eq i32 %v1_167b8, 0
  br i1 %v2_167b8, label %dec_label_pc_167e4, label %dec_label_pc_167c0

dec_label_pc_167c0:                               ; preds = %dec_label_pc_167b4
  %tmp25 = urem i16 %v2_167b4, 2
  %v1_167c0 = zext i16 %tmp25 to i32
  %tmp21 = sub nsw i32 0, %v1_167c0
  %v4_167c4 = and i32 %tmp21, 4
  %v5_167c4 = add i32 %v4_167c4, %v2_167f4
  %v1_167c8 = add i32 %v5_167c4, 36
  %v2_167c8 = inttoptr i32 %v1_167c8 to i8*
  %v3_167c8 = load i8, i8* %v2_167c8, align 1
  %v4_167c8 = zext i8 %v3_167c8 to i32
  %v1_167cc = add nsw i32 %v3_167b4, -1
  store i32 %v1_167cc, i32* %r2.global-to-local, align 4
  store i32 %v4_167c8, i32* %r0.global-to-local, align 4
  %v2_167d8 = add i32 %v2_167f4, 40
  %v3_167d8 = inttoptr i32 %v2_167d8 to i32*
  store i32 0, i32* %v3_167d8, align 4
  %v0_167dc = load i32, i32* %r2.global-to-local, align 4
  %v1_167dc = trunc i32 %v0_167dc to i16
  %v2_167dc = load i32, i32* @r4, align 4
  %v3_167dc = inttoptr i32 %v2_167dc to i16*
  store i16 %v1_167dc, i16* %v3_167dc, align 2
  br label %dec_label_pc_16880

dec_label_pc_167e4:                               ; preds = %dec_label_pc_167b4
  %v1_167e4 = add i32 %v2_167f4, 16
  %v1_167e8 = inttoptr i32 %v1_167e4 to i32*
  %v2_167e8 = load i32, i32* %v1_167e8, align 4
  %v3_167e8 = add i32 %v2_167f4, 20
  %v4_167e8 = inttoptr i32 %v3_167e8 to i32*
  %v5_167e8 = load i32, i32* %v4_167e8, align 4
  %v9_167ec = icmp eq i32 %v5_167e8, %v2_167e8
  br i1 %v9_167ec, label %dec_label_pc_167fc, label %.thread5

.thread5:                                         ; preds = %dec_label_pc_167e4
  %v2_167f0 = inttoptr i32 %v2_167e8 to i8*
  %v3_167f0 = load i8, i8* %v2_167f0, align 1
  %v4_167f0 = zext i8 %v3_167f0 to i32
  store i32 %v4_167f0, i32* %r0.global-to-local, align 4
  %v6_167f0 = add i32 %v2_167e8, 1
  store i32 %v6_167f0, i32* %v1_167e8, align 4
  br label %dec_label_pc_16880

dec_label_pc_167fc:                               ; preds = %dec_label_pc_167e4
  %v1_167fc = add i32 %v2_167f4, 4
  %v2_167fc = inttoptr i32 %v1_167fc to i32*
  %v3_167fc = load i32, i32* %v2_167fc, align 4
  %v7_16800 = icmp eq i32 %v3_167fc, -2
  br i1 %v7_16800, label %.thread8, label %dec_label_pc_16814

.thread8:                                         ; preds = %dec_label_pc_167fc
  %v2_16804 = or i16 %v2_167b4, 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i16 %v2_16804, i16* %v1_167b4, align 2
  br label %dec_label_pc_16880

dec_label_pc_16814:                               ; preds = %dec_label_pc_167fc
  %v1_16814 = and i32 %v3_167b4, 768
  %v2_16814 = icmp eq i32 %v1_16814, 0
  br i1 %v2_16814, label %.thread10, label %bb22

bb22:                                             ; preds = %dec_label_pc_16814
  %v1_1681c = load i32, i32* @r5, align 4
  %v3_1681c = add i32 %v1_1681c, 44
  %v4_1681c = inttoptr i32 %v3_1681c to i32*
  %v5_1681c = load i32, i32* %v4_1681c, align 4
  store i32 %v5_1681c, i32* %r0.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_16814, %bb22
  %v1_16820 = xor i1 %v2_16814, true
  call void @__pseudo_cond_branch(i1 %v1_16820, i32 ptrtoint (i32* @global_var_1655c.502 to i32))
  %v0_16824 = load i32, i32* @r4, align 4
  %v1_16824 = add i32 %v0_16824, 8
  store i32 %v1_16824, i32* %r2.global-to-local, align 4
  %v1_16828 = inttoptr i32 %v1_16824 to i32*
  %v2_16828 = load i32, i32* %v1_16828, align 4
  store i32 %v2_16828, i32* %r2.global-to-local, align 4
  %v3_16828 = add i32 %v0_16824, 12
  %v4_16828 = inttoptr i32 %v3_16828 to i32*
  %v5_16828 = load i32, i32* %v4_16828, align 4
  %v9_1682c = icmp eq i32 %v5_16828, %v2_16828
  br i1 %v9_1682c, label %dec_label_pc_16860, label %dec_label_pc_16834

dec_label_pc_16834:                               ; preds = %.thread10
  %v2_16834 = add i32 %v0_16824, 24
  %v3_16834 = inttoptr i32 %v2_16834 to i32*
  store i32 %v2_16828, i32* %v3_16834, align 4
  %v0_16838 = load i32, i32* @r4, align 4
  store i32 %v0_16838, i32* %r0.global-to-local, align 4
  %v2_1683c = call i32 @function_175ac(i32 %v0_16838)
  store i32 %v2_1683c, i32* %r0.global-to-local, align 4
  %v2_16840 = icmp eq i32 %v2_1683c, 0
  br i1 %v2_16840, label %dec_label_pc_1687c, label %dec_label_pc_16848

dec_label_pc_16848:                               ; preds = %dec_label_pc_16834
  %v0_16848 = load i32, i32* @r4, align 4
  %v1_16848 = add i32 %v0_16848, 20
  %v2_16848 = inttoptr i32 %v1_16848 to i32*
  %v3_16848 = load i32, i32* %v2_16848, align 4
  %v2_1684c = add i32 %v0_16848, 24
  %v3_1684c = inttoptr i32 %v2_1684c to i32*
  store i32 %v3_16848, i32* %v3_1684c, align 4
  %v0_16850 = load i32, i32* @r4, align 4
  %v1_16850 = add i32 %v0_16850, 16
  %v2_16850 = inttoptr i32 %v1_16850 to i32*
  %v3_16850 = load i32, i32* %v2_16850, align 4
  %v1_16854 = inttoptr i32 %v3_16850 to i8*
  %v2_16854 = load i8, i8* %v1_16854, align 1
  %v3_16854 = zext i8 %v2_16854 to i32
  store i32 %v3_16854, i32* %r0.global-to-local, align 4
  %v5_16854 = add i32 %v3_16850, 1
  store i32 %v5_16854, i32* %v2_16850, align 4
  br label %dec_label_pc_16880

dec_label_pc_16860:                               ; preds = %.thread10
  %v1_16860 = inttoptr i32 %v0_16824 to i16*
  store i32 %v0_16824, i32* %r0.global-to-local, align 4
  %v2_16864 = ptrtoint i8* %stack_var_-17 to i32
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_1686c = call i32 @function_174a0(i16* %v1_16860, i32 %v2_16864, i32 1)
  store i32 %v5_1686c, i32* %r0.global-to-local, align 4
  %v2_16870 = icmp eq i32 %v5_1686c, 0
  br i1 %v2_16870, label %dec_label_pc_1687c, label %bb23

bb23:                                             ; preds = %dec_label_pc_16860
  %v4_16874 = load i8, i8* %stack_var_-17, align 1
  %v5_16874 = sext i8 %v4_16874 to i32
  store i32 %v5_16874, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16880

dec_label_pc_1687c:                               ; preds = %dec_label_pc_16860, %dec_label_pc_167a4, %dec_label_pc_16834
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16880

dec_label_pc_16880:                               ; preds = %bb, %.thread8, %bb23, %.thread5, %dec_label_pc_16848, %dec_label_pc_167c0, %dec_label_pc_1687c
  %v2_16884 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_16884, i32* @r4, align 4
  store i32 %v6_16768, i32* @r5, align 4
  store i32 %v9_16768, i32* @lr, align 4
  %v1_16888 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_16888

; uselistorder directives
  uselistorder i32 %v2_167e8, { 1, 0, 2 }
  uselistorder i32 %v2_167f4, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 %v3_1676c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1676c, { 1, 0, 2, 3, 4 }
  uselistorder i8* %stack_var_-17, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 9, 1, 0, 12, 3, 2, 13, 4, 5, 6, 7, 8, 11, 10 }
  uselistorder i32 768, { 2, 0, 3, 1, 4 }
  uselistorder i32 128, { 15, 0, 14, 16, 11, 17, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 18, 19, 20, 12, 21, 22, 23, 13 }
  uselistorder i32 131, { 2, 0, 3, 1, 4 }
  uselistorder label %dec_label_pc_16880, { 6, 2, 4, 1, 3, 5, 0 }
  uselistorder label %dec_label_pc_1687c, { 0, 2, 1 }
  uselistorder label %.thread10, { 1, 0 }
}

define i32 @function_1688c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1688c:
  %v0_1688c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1688c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1688c
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1688c, %bb
  %v4_16890 = phi i32 [ %arg1, %dec_label_pc_1688c ], [ 0, %bb ]
  ret i32 %v4_16890

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_16894(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16894:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v6_16894 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16898 = icmp eq i32 %arg2, 0
  store i1 %v2_16898, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %tmp22 = icmp slt i32 %arg2, 1
  br i1 %tmp22, label %dec_label_pc_16920, label %dec_label_pc_16908.preheader

dec_label_pc_16908.preheader:                     ; preds = %dec_label_pc_16894
  store i32 %tmp, i32* @r5, align 4
  %v1_169082 = add i32 %arg2, -1
  store i32 %v1_169082, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_169088 = icmp eq i32 %arg2, 1
  store i1 %v7_169088, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_169088, label %dec_label_pc_16910, label %dec_label_pc_168b4

dec_label_pc_168b4:                               ; preds = %dec_label_pc_16908.preheader, %dec_label_pc_16908.backedge.dec_label_pc_168b4_crit_edge
  %v0_168d8 = phi i32 [ %v0_168b4.pre, %dec_label_pc_16908.backedge.dec_label_pc_168b4_crit_edge ], [ %arg3, %dec_label_pc_16908.preheader ]
  %v1_168b4 = add i32 %v0_168d8, 16
  %v2_168b4 = inttoptr i32 %v1_168b4 to i32*
  %v3_168b4 = load i32, i32* %v2_168b4, align 4
  store i32 %v3_168b4, i32* %r2.global-to-local, align 4
  %v1_168b8 = add i32 %v0_168d8, 24
  %v2_168b8 = inttoptr i32 %v1_168b8 to i32*
  %v3_168b8 = load i32, i32* %v2_168b8, align 4
  store i32 %v3_168b8, i32* %r3.global-to-local, align 4
  %v3_168bc = icmp uge i32 %v3_168b4, %v3_168b8
  store i1 %v3_168bc, i1* %cpsr_c.global-to-local, align 1
  %v9_168bc = icmp eq i32 %v3_168b4, %v3_168b8
  store i1 %v9_168bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_168bc, label %dec_label_pc_168d8, label %dec_label_pc_168c4

dec_label_pc_168c4:                               ; preds = %dec_label_pc_168b4
  %v1_168c4 = inttoptr i32 %v3_168b4 to i8*
  %v2_168c4 = load i8, i8* %v1_168c4, align 1
  %v3_168c4 = zext i8 %v2_168c4 to i32
  store i32 %v3_168c4, i32* %r3.global-to-local, align 4
  %v5_168c4 = add i32 %v3_168b4, 1
  store i32 %v5_168c4, i32* %r2.global-to-local, align 4
  %v2_168c8 = load i32, i32* @r5, align 4
  %v3_168c8 = inttoptr i32 %v2_168c8 to i8*
  store i8 %v2_168c4, i8* %v3_168c8, align 1
  %v4_168c8 = load i32, i32* @r5, align 4
  %v5_168c8 = add i32 %v4_168c8, 1
  store i32 %v5_168c8, i32* @r5, align 4
  %v0_168cc = load i32, i32* %r3.global-to-local, align 4
  %v2_168cc = icmp ugt i32 %v0_168cc, 9
  store i1 %v2_168cc, i1* %cpsr_c.global-to-local, align 1
  %v7_168cc = icmp eq i32 %v0_168cc, 10
  store i1 %v7_168cc, i1* %cpsr_z.global-to-local, align 1
  %v0_168d0 = load i32, i32* %r2.global-to-local, align 4
  %v1_168d0 = load i32, i32* @r4, align 4
  %v2_168d0 = add i32 %v1_168d0, 16
  %v3_168d0 = inttoptr i32 %v2_168d0 to i32*
  store i32 %v0_168d0, i32* %v3_168d0, align 4
  br i1 %v7_168cc, label %dec_label_pc_16910, label %dec_label_pc_16908.backedge

dec_label_pc_168d8:                               ; preds = %dec_label_pc_168b4
  %v1_168d8 = inttoptr i32 %v0_168d8 to i16*
  %v3_168dc = call i32 @function_16768(i16* %v1_168d8)
  %v3_168e0 = icmp eq i32 %v3_168dc, -1
  store i1 %v3_168e0, i1* %cpsr_c.global-to-local, align 1
  %v8_168e0 = icmp eq i32 %v3_168dc, -1
  store i1 %v8_168e0, i1* %cpsr_z.global-to-local, align 1
  %v1_168e4 = urem i32 %v3_168dc, 256
  store i32 %v1_168e4, i32* %r3.global-to-local, align 4
  br i1 %v3_168e0, label %dec_label_pc_168ec, label %dec_label_pc_16904

dec_label_pc_168ec:                               ; preds = %dec_label_pc_168d8
  %v0_168ec = load i32, i32* @r4, align 4
  %v1_168ec = inttoptr i32 %v0_168ec to i16*
  %v2_168ec = load i16, i16* %v1_168ec, align 2
  %v3_168ec = zext i16 %v2_168ec to i32
  store i32 %v3_168ec, i32* %r3.global-to-local, align 4
  %v1_168f0 = and i32 %v3_168ec, 8
  %v2_168f0 = icmp eq i32 %v1_168f0, 0
  store i1 %v2_168f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_168f0, label %dec_label_pc_16910, label %dec_label_pc_16920

dec_label_pc_16904:                               ; preds = %dec_label_pc_168d8
  %v1_168fc = trunc i32 %v3_168dc to i8
  %v2_168fc = load i32, i32* @r5, align 4
  %v3_168fc = inttoptr i32 %v2_168fc to i8*
  store i8 %v1_168fc, i8* %v3_168fc, align 1
  %v4_168fc = load i32, i32* @r5, align 4
  %v5_168fc = add i32 %v4_168fc, 1
  store i32 %v5_168fc, i32* @r5, align 4
  %v0_16900 = load i32, i32* %r3.global-to-local, align 4
  %v2_16900 = icmp ugt i32 %v0_16900, 9
  store i1 %v2_16900, i1* %cpsr_c.global-to-local, align 1
  %v7_16900 = icmp eq i32 %v0_16900, 10
  store i1 %v7_16900, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16900, label %dec_label_pc_16910, label %dec_label_pc_16908.backedge

dec_label_pc_16908.backedge:                      ; preds = %dec_label_pc_16904, %dec_label_pc_168c4
  %v0_16908 = load i32, i32* %r6.global-to-local, align 4
  %v1_16908 = add i32 %v0_16908, -1
  store i32 %v1_16908, i32* %r6.global-to-local, align 4
  %v2_16908 = icmp ne i32 %v0_16908, 0
  store i1 %v2_16908, i1* %cpsr_c.global-to-local, align 1
  %v7_16908 = icmp eq i32 %v0_16908, 1
  store i1 %v7_16908, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16908, label %dec_label_pc_16910, label %dec_label_pc_16908.backedge.dec_label_pc_168b4_crit_edge

dec_label_pc_16908.backedge.dec_label_pc_168b4_crit_edge: ; preds = %dec_label_pc_16908.backedge
  %v0_168b4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_168b4

dec_label_pc_16910:                               ; preds = %dec_label_pc_16904, %dec_label_pc_16908.backedge, %dec_label_pc_168c4, %dec_label_pc_16908.preheader, %dec_label_pc_168ec
  %v0_16910 = load i32, i32* @r5, align 4
  %v1_16910 = load i32, i32* @r7, align 4
  %v3_16910 = icmp uge i32 %v0_16910, %v1_16910
  store i1 %v3_16910, i1* %cpsr_c.global-to-local, align 1
  %v9_16910 = icmp eq i32 %v0_16910, %v1_16910
  store i1 %v9_16910, i1* %cpsr_z.global-to-local, align 1
  %v2_16914 = xor i1 %v9_16910, true
  %v3_16914 = and i1 %v3_16910, %v2_16914
  br i1 %v3_16914, label %bb, label %.thread14

bb:                                               ; preds = %dec_label_pc_16910
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_16918 = inttoptr i32 %v0_16910 to i8*
  store i8 0, i8* %v7_16918, align 1
  %v0_1691c.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_1691c.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_16910, %bb
  %v1_1691c = phi i1 [ %v1_1691c.pre, %bb ], [ %v9_16910, %dec_label_pc_16910 ]
  %v0_1691c = phi i1 [ %v0_1691c.pre, %bb ], [ %v3_16910, %dec_label_pc_16910 ]
  %v2_1691c = xor i1 %v1_1691c, true
  %v3_1691c = and i1 %v0_1691c, %v2_1691c
  br i1 %v3_1691c, label %.dec_label_pc_16924_crit_edge, label %dec_label_pc_16920

.dec_label_pc_16924_crit_edge:                    ; preds = %.thread14
  %v0_16924.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_16924

dec_label_pc_16920:                               ; preds = %dec_label_pc_16894, %dec_label_pc_168ec, %.thread14
  br label %dec_label_pc_16924

dec_label_pc_16924:                               ; preds = %.dec_label_pc_16924_crit_edge, %dec_label_pc_16920
  %v0_16924 = phi i32 [ %v0_16924.pre, %.dec_label_pc_16924_crit_edge ], [ 0, %dec_label_pc_16920 ]
  store i32 %v6_16894, i32* @r5, align 4
  ret i32 %v0_16924

; uselistorder directives
  uselistorder i1 %v9_16910, { 1, 0, 2 }
  uselistorder i32 %v1_16910, { 1, 0 }
  uselistorder i32 %v0_16910, { 0, 2, 1 }
  uselistorder i32 %v0_16908, { 2, 0, 1 }
  uselistorder i32 %v0_16900, { 1, 0 }
  uselistorder i32 %v3_168dc, { 2, 1, 0, 3 }
  uselistorder i32 %v0_168cc, { 1, 0 }
  uselistorder i32 %v3_168b4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_168d8, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 7, 2, 3, 4, 5, 6, 9, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 8, 7 }
  uselistorder i1 true, { 0, 1, 322, 574, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 311, 28, 29, 30, 31, 32, 324, 580, 593, 309, 312, 327, 326, 575, 340, 576, 577, 144, 147, 578, 579, 310, 325, 581, 582, 583, 313, 584, 585, 586, 148, 149, 587, 588, 589, 590, 145, 146, 591, 592, 339, 338, 150, 151, 152, 594, 153, 154, 328, 329, 334, 330, 335, 331, 333, 595, 332, 337, 596, 155, 597, 143, 598, 341, 342, 599, 343, 344, 156, 600, 345, 346, 157, 158, 601, 347, 348, 159, 160, 602, 161, 162, 163, 603, 349, 350, 164, 165, 604, 351, 352, 166, 605, 353, 354, 140, 141, 142, 606, 355, 356, 139, 607, 357, 358, 608, 314, 315, 167, 168, 609, 359, 360, 169, 610, 170, 171, 611, 172, 173, 612, 174, 175, 613, 176, 308, 138, 177, 178, 614, 361, 362, 179, 180, 615, 181, 182, 616, 363, 364, 135, 136, 137, 134, 617, 365, 366, 618, 367, 368, 131, 132, 133, 619, 369, 370, 620, 371, 372, 128, 129, 130, 621, 373, 374, 622, 375, 376, 125, 126, 127, 623, 377, 378, 122, 123, 124, 624, 379, 380, 625, 381, 382, 119, 120, 121, 626, 383, 384, 183, 627, 385, 386, 116, 117, 118, 628, 387, 388, 629, 389, 390, 113, 114, 115, 630, 391, 392, 631, 393, 394, 110, 111, 112, 632, 395, 396, 633, 397, 398, 107, 108, 109, 634, 399, 400, 105, 106, 635, 401, 402, 104, 636, 403, 404, 637, 405, 406, 184, 185, 186, 638, 407, 408, 101, 102, 103, 639, 409, 410, 640, 411, 412, 98, 99, 100, 641, 413, 414, 96, 97, 642, 415, 416, 643, 417, 418, 644, 419, 420, 645, 421, 422, 646, 423, 424, 647, 425, 426, 648, 427, 428, 649, 429, 430, 650, 431, 432, 651, 433, 434, 187, 188, 189, 652, 435, 436, 93, 94, 95, 653, 437, 438, 654, 439, 440, 90, 91, 92, 655, 441, 442, 87, 88, 89, 656, 443, 444, 84, 85, 86, 83, 657, 445, 446, 658, 447, 448, 80, 81, 82, 659, 449, 450, 660, 451, 452, 77, 78, 79, 661, 453, 454, 662, 455, 456, 190, 191, 192, 663, 457, 458, 193, 194, 195, 664, 459, 460, 196, 197, 198, 665, 461, 462, 74, 75, 76, 666, 463, 464, 667, 465, 466, 72, 73, 668, 467, 468, 669, 469, 470, 71, 670, 671, 471, 472, 199, 200, 672, 473, 474, 68, 69, 70, 673, 475, 476, 67, 674, 675, 477, 478, 65, 66, 676, 479, 480, 677, 481, 482, 62, 63, 64, 678, 483, 484, 201, 202, 203, 679, 485, 486, 59, 60, 61, 680, 487, 488, 681, 489, 490, 58, 682, 683, 491, 492, 56, 57, 684, 493, 494, 54, 55, 685, 495, 496, 686, 497, 498, 51, 52, 53, 687, 499, 500, 50, 688, 204, 689, 501, 502, 47, 48, 49, 690, 503, 504, 691, 505, 506, 44, 45, 46, 692, 507, 508, 693, 509, 510, 694, 511, 512, 43, 695, 696, 513, 514, 205, 206, 207, 41, 42, 697, 515, 516, 698, 517, 518, 699, 519, 520, 700, 521, 522, 701, 523, 524, 702, 525, 526, 703, 527, 528, 208, 704, 209, 210, 40, 705, 529, 530, 211, 706, 212, 213, 214, 707, 215, 216, 217, 708, 218, 219, 220, 221, 709, 222, 223, 224, 225, 710, 226, 227, 711, 531, 532, 228, 229, 712, 230, 231, 232, 713, 233, 234, 235, 714, 236, 237, 238, 715, 239, 240, 241, 716, 242, 243, 244, 245, 717, 533, 534, 246, 247, 718, 248, 249, 250, 719, 251, 252, 720, 253, 254, 255, 721, 256, 257, 258, 722, 259, 260, 261, 262, 263, 264, 265, 723, 266, 267, 268, 724, 535, 536, 269, 39, 725, 537, 538, 270, 271, 38, 726, 316, 317, 727, 272, 728, 273, 274, 275, 729, 276, 277, 278, 730, 539, 540, 279, 37, 731, 541, 542, 280, 281, 36, 732, 543, 544, 35, 733, 545, 546, 282, 283, 284, 734, 547, 548, 285, 735, 549, 550, 286, 34, 736, 551, 552, 287, 288, 289, 737, 290, 291, 292, 738, 293, 294, 33, 739, 318, 319, 295, 296, 297, 298, 299, 740, 553, 554, 741, 555, 556, 742, 557, 558, 743, 559, 560, 744, 561, 562, 745, 563, 564, 746, 565, 566, 747, 567, 568, 748, 569, 570, 749, 571, 572, 323, 750, 336, 751, 300, 320, 301, 302, 321, 303, 304, 305, 306, 307, 573 }
  uselistorder i32 %arg2, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_16924, { 1, 0 }
  uselistorder label %dec_label_pc_16920, { 2, 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_16910, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_168b4, { 1, 0 }
}

define i32 @function_16934(i32 %arg1) local_unnamed_addr {
dec_label_pc_16934:
  ret i32 %arg1
}

define i32 @function_16940() local_unnamed_addr {
dec_label_pc_16940:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_16940 = load i32, i32* @r1, align 4
  %v1_16940 = load i32, i32* @r0, align 4
  %v2_16940 = sub i32 %v0_16940, %v1_16940
  %v3_16940 = icmp ult i32 %v0_16940, %v1_16940
  %v4_16940 = xor i32 %v1_16940, %v0_16940
  %v5_16940 = xor i32 %v2_16940, %v0_16940
  %v6_16940 = and i32 %v5_16940, %v4_16940
  %v7_16940 = icmp slt i32 %v6_16940, 0
  store i1 %v7_16940, i1* %cpsr_v.global-to-local, align 1
  %v8_16940 = icmp slt i32 %v2_16940, 0
  store i1 %v8_16940, i1* %cpsr_n.global-to-local, align 1
  %v9_16940 = icmp eq i32 %v0_16940, %v1_16940
  store i1 %v9_16940, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_16940, label %dec_label_pc_16b94, label %dec_label_pc_16948

dec_label_pc_16948:                               ; preds = %dec_label_pc_16940
  br i1 %v9_16940, label %.thread130, label %bb

.thread130:                                       ; preds = %bb153, %.thread129, %bb150, %dec_label_pc_16948
  %merge = phi i32 [ %v0_16940, %dec_label_pc_16948 ], [ %v2_16c28, %bb150 ], [ %v11_16c44, %bb153 ], [ %v7_16c44, %.thread129 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_16948
  %v5_1694c = inttoptr i32 %v1_16940 to i8*
  store i8* %v5_1694c, i8** %stack_var_-8, align 4
  %v8_1694c = load i32, i32* @lr, align 4
  %v0_16950 = load i32, i32* @r2, align 4
  %v2_16950 = add i32 %v0_16950, -4
  store i32 %v2_16950, i32* %r2.global-to-local, align 4
  %v4_16950 = sub i32 3, %v0_16950
  %v5_16950 = and i32 %v4_16950, %v0_16950
  %v6_16950 = icmp slt i32 %v5_16950, 0
  store i1 %v6_16950, i1* %cpsr_v.global-to-local, align 1
  %v7_16950 = icmp slt i32 %v2_16950, 0
  store i1 %v7_16950, i1* %cpsr_n.global-to-local, align 1
  %v8_16950 = icmp eq i32 %v0_16950, 4
  store i1 %v8_16950, i1* %cpsr_z.global-to-local, align 1
  %v5_16954 = icmp slt i32 %v0_16950, 4
  br i1 %v5_16954, label %bb140, label %dec_label_pc_16958

dec_label_pc_16958:                               ; preds = %bb
  %v1_16958 = urem i32 %v1_16940, 4
  store i32 %v1_16958, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_16958 = icmp eq i32 %v1_16958, 0
  store i1 %v2_16958, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16958, label %dec_label_pc_16960, label %dec_label_pc_16a0c

dec_label_pc_16960:                               ; preds = %dec_label_pc_16958
  %v1_16960 = urem i32 %v0_16940, 4
  store i32 %v1_16960, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_16960 = icmp eq i32 %v1_16960, 0
  store i1 %v2_16960, i1* %cpsr_z.global-to-local, align 1
  %extract.t = trunc i32 %v0_16940 to i2
  br i1 %v2_16960, label %dec_label_pc_16968, label %dec_label_pc_16a3c

dec_label_pc_16968:                               ; preds = %dec_label_pc_16960, %dec_label_pc_16a34
  %v0_1698094 = phi i32 [ %v1_16940, %dec_label_pc_16960 ], [ %v0_16b5c77, %dec_label_pc_16a34 ]
  %v0_1697c93 = phi i32 [ %v0_16940, %dec_label_pc_16960 ], [ %v0_16a34, %dec_label_pc_16a34 ]
  %v0_16968 = phi i32 [ %v2_16950, %dec_label_pc_16960 ], [ %v2_16a2c, %dec_label_pc_16a34 ]
  %v1_16968 = add i32 %v0_16968, -8
  store i32 %v1_16968, i32* %r2.global-to-local, align 4
  %v3_16968 = sub i32 7, %v0_16968
  %v4_16968 = and i32 %v3_16968, %v0_16968
  %v5_16968 = icmp slt i32 %v4_16968, 0
  store i1 %v5_16968, i1* %cpsr_v.global-to-local, align 1
  %v6_16968 = icmp slt i32 %v1_16968, 0
  store i1 %v6_16968, i1* %cpsr_n.global-to-local, align 1
  %v7_16968 = icmp eq i32 %v0_16968, 8
  store i1 %v7_16968, i1* %cpsr_z.global-to-local, align 1
  %v2_1696c = xor i1 %v6_16968, %v5_16968
  br i1 %v2_1696c, label %dec_label_pc_169bc, label %dec_label_pc_16970

dec_label_pc_16970:                               ; preds = %dec_label_pc_16968
  %v1_16970 = add i32 %v0_16968, -28
  store i32 %v1_16970, i32* %r2.global-to-local, align 4
  %v3_16970 = sub i32 27, %v0_16968
  %v4_16970 = and i32 %v3_16970, %v1_16968
  %v5_16970 = icmp slt i32 %v4_16970, 0
  store i1 %v5_16970, i1* %cpsr_v.global-to-local, align 1
  %v6_16970 = icmp slt i32 %v1_16970, 0
  store i1 %v6_16970, i1* %cpsr_n.global-to-local, align 1
  %v7_16970 = icmp eq i32 %v1_16968, 20
  store i1 %v7_16970, i1* %cpsr_z.global-to-local, align 1
  %v2_16974 = xor i1 %v6_16970, %v5_16970
  br i1 %v2_16974, label %dec_label_pc_169a8, label %dec_label_pc_16978

dec_label_pc_16978:                               ; preds = %dec_label_pc_16970
  %v0_16978 = load i32, i32* @r4, align 4
  store i32 %v0_16978, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1697c

dec_label_pc_1697c:                               ; preds = %dec_label_pc_1697c.dec_label_pc_1697c_crit_edge, %dec_label_pc_16978
  %v0_16980 = phi i32 [ %v12_16988, %dec_label_pc_1697c.dec_label_pc_1697c_crit_edge ], [ %v0_1698094, %dec_label_pc_16978 ]
  %v0_1697c = phi i32 [ %v0_1697c.pre, %dec_label_pc_1697c.dec_label_pc_1697c_crit_edge ], [ %v0_1697c93, %dec_label_pc_16978 ]
  %v1_1697c = inttoptr i32 %v0_1697c to i32*
  %v2_1697c = load i32, i32* %v1_1697c, align 4
  %v3_1697c = add i32 %v0_1697c, 4
  %v4_1697c = inttoptr i32 %v3_1697c to i32*
  %v5_1697c = load i32, i32* %v4_1697c, align 4
  store i32 %v5_1697c, i32* %r4.global-to-local, align 4
  %v6_1697c = add i32 %v0_1697c, 8
  %v7_1697c = inttoptr i32 %v6_1697c to i32*
  %v8_1697c = load i32, i32* %v7_1697c, align 4
  store i32 %v8_1697c, i32* %ip.global-to-local, align 4
  %v9_1697c = add i32 %v0_1697c, 12
  %v10_1697c = inttoptr i32 %v9_1697c to i32*
  %v11_1697c = load i32, i32* %v10_1697c, align 4
  store i32 %v11_1697c, i32* %lr.global-to-local, align 4
  %v12_1697c = add i32 %v0_1697c, 16
  store i32 %v12_1697c, i32* %r1.global-to-local, align 4
  %v1_16980 = inttoptr i32 %v0_16980 to i32*
  store i32 %v2_1697c, i32* %v1_16980, align 4
  %v3_16980 = add i32 %v0_16980, 4
  %v4_16980 = inttoptr i32 %v3_16980 to i32*
  %v5_16980 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_16980, i32* %v4_16980, align 4
  %v6_16980 = add i32 %v0_16980, 8
  %v7_16980 = inttoptr i32 %v6_16980 to i32*
  %v8_16980 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_16980, i32* %v7_16980, align 4
  %v9_16980 = add i32 %v0_16980, 12
  %v10_16980 = inttoptr i32 %v9_16980 to i32*
  %v11_16980 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_16980, i32* %v10_16980, align 4
  %v12_16980 = add i32 %v0_16980, 16
  store i32 %v12_16980, i32* %r0.global-to-local, align 4
  %v0_16984 = load i32, i32* %r1.global-to-local, align 4
  %v1_16984 = inttoptr i32 %v0_16984 to i32*
  %v2_16984 = load i32, i32* %v1_16984, align 4
  store i32 %v2_16984, i32* @r3, align 4
  %v3_16984 = add i32 %v0_16984, 4
  %v4_16984 = inttoptr i32 %v3_16984 to i32*
  %v5_16984 = load i32, i32* %v4_16984, align 4
  store i32 %v5_16984, i32* %r4.global-to-local, align 4
  %v6_16984 = add i32 %v0_16984, 8
  %v7_16984 = inttoptr i32 %v6_16984 to i32*
  %v8_16984 = load i32, i32* %v7_16984, align 4
  store i32 %v8_16984, i32* @ip, align 4
  %v9_16984 = add i32 %v0_16984, 12
  %v10_16984 = inttoptr i32 %v9_16984 to i32*
  %v11_16984 = load i32, i32* %v10_16984, align 4
  store i32 %v11_16984, i32* %lr.global-to-local, align 4
  %v12_16984 = add i32 %v0_16984, 16
  store i32 %v12_16984, i32* @r1, align 4
  %v1_16988 = inttoptr i32 %v12_16980 to i32*
  store i32 %v2_16984, i32* %v1_16988, align 4
  %v3_16988 = add i32 %v0_16980, 20
  %v4_16988 = inttoptr i32 %v3_16988 to i32*
  %v5_16988 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_16988, i32* %v4_16988, align 4
  %v6_16988 = add i32 %v0_16980, 24
  %v7_16988 = inttoptr i32 %v6_16988 to i32*
  %v8_16988 = load i32, i32* @ip, align 4
  store i32 %v8_16988, i32* %v7_16988, align 4
  %v9_16988 = add i32 %v0_16980, 28
  %v10_16988 = inttoptr i32 %v9_16988 to i32*
  %v11_16988 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_16988, i32* %v10_16988, align 4
  %v12_16988 = add i32 %v0_16980, 32
  store i32 %v12_16988, i32* @r0, align 4
  %v0_1698c = load i32, i32* %r2.global-to-local, align 4
  %v1_1698c = add i32 %v0_1698c, -32
  store i32 %v1_1698c, i32* %r2.global-to-local, align 4
  %v3_1698c = sub i32 31, %v0_1698c
  %v4_1698c = and i32 %v3_1698c, %v0_1698c
  %v5_1698c = icmp slt i32 %v4_1698c, 0
  %v6_1698c = icmp slt i32 %v1_1698c, 0
  %v2_16990 = xor i1 %v6_1698c, %v5_1698c
  br i1 %v2_16990, label %dec_label_pc_16994, label %dec_label_pc_1697c.dec_label_pc_1697c_crit_edge

dec_label_pc_1697c.dec_label_pc_1697c_crit_edge:  ; preds = %dec_label_pc_1697c
  %v0_1697c.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_1697c

dec_label_pc_16994:                               ; preds = %dec_label_pc_1697c
  %v1_16994 = add i32 %v0_1698c, -16
  %v3_16994 = add i32 %v0_1698c, 2147483616
  %v4_16994 = and i32 %v1_16994, %v3_16994
  %v5_16994 = icmp slt i32 %v4_16994, 0
  store i1 %v5_16994, i1* %cpsr_v.global-to-local, align 1
  %v6_16994 = icmp slt i32 %v1_16994, 0
  store i1 %v6_16994, i1* %cpsr_n.global-to-local, align 1
  %v7_16994 = icmp eq i32 %v1_16994, 0
  store i1 %v7_16994, i1* %cpsr_z.global-to-local, align 1
  %v2_16998 = xor i1 %v6_16994, %v5_16994
  br i1 %v2_16998, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_16994
  %v3_16998 = load i32, i32* @r1, align 4
  %v4_16998 = inttoptr i32 %v3_16998 to i32*
  %v5_16998 = load i32, i32* %v4_16998, align 4
  store i32 %v5_16998, i32* @r3, align 4
  %v6_16998 = add i32 %v3_16998, 4
  %v7_16998 = inttoptr i32 %v6_16998 to i32*
  %v8_16998 = load i32, i32* %v7_16998, align 4
  store i32 %v8_16998, i32* %r4.global-to-local, align 4
  %v9_16998 = add i32 %v3_16998, 8
  %v10_16998 = inttoptr i32 %v9_16998 to i32*
  %v11_16998 = load i32, i32* %v10_16998, align 4
  store i32 %v11_16998, i32* @ip, align 4
  %v12_16998 = add i32 %v3_16998, 12
  %v13_16998 = inttoptr i32 %v12_16998 to i32*
  %v14_16998 = load i32, i32* %v13_16998, align 4
  store i32 %v14_16998, i32* %lr.global-to-local, align 4
  %v15_16998 = add i32 %v3_16998, 16
  store i32 %v15_16998, i32* @r1, align 4
  %v4_1699c = inttoptr i32 %v12_16988 to i32*
  store i32 %v5_16998, i32* %v4_1699c, align 4
  %v6_1699c = add i32 %v0_16980, 36
  %v7_1699c = inttoptr i32 %v6_1699c to i32*
  %v8_1699c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v8_1699c, i32* %v7_1699c, align 4
  %v9_1699c = add i32 %v0_16980, 40
  %v10_1699c = inttoptr i32 %v9_1699c to i32*
  %v11_1699c = load i32, i32* @ip, align 4
  store i32 %v11_1699c, i32* %v10_1699c, align 4
  %v12_1699c = add i32 %v0_16980, 44
  %v13_1699c = inttoptr i32 %v12_1699c to i32*
  %v14_1699c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v14_1699c, i32* %v13_1699c, align 4
  %v15_1699c = add i32 %v0_16980, 48
  store i32 %v15_1699c, i32* @r0, align 4
  %v3_169a0 = load i32, i32* %r2.global-to-local, align 4
  %v4_169a0 = add i32 %v3_169a0, -16
  store i32 %v4_169a0, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_16994, %bb136
  %v3_169b0102111 = phi i32 [ %v15_1699c, %bb136 ], [ %v12_16988, %dec_label_pc_16994 ]
  %v0_169a8.pre = phi i32 [ %v4_169a0, %bb136 ], [ %v1_1698c, %dec_label_pc_16994 ]
  %v2_169a4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_169a4, i32* @r4, align 4
  br label %dec_label_pc_169a8

dec_label_pc_169a8:                               ; preds = %dec_label_pc_16970, %bb137
  %v3_169b0101 = phi i32 [ %v0_1698094, %dec_label_pc_16970 ], [ %v3_169b0102111, %bb137 ]
  %v0_169a8 = phi i32 [ %v1_16970, %dec_label_pc_16970 ], [ %v0_169a8.pre, %bb137 ]
  %v1_169a8 = add i32 %v0_169a8, 20
  store i32 %v1_169a8, i32* %r2.global-to-local, align 4
  %v3_169a8 = sub i32 0, %v0_169a8
  %v4_169a8 = and i32 %v1_169a8, %v3_169a8
  %v5_169a8 = icmp slt i32 %v4_169a8, 0
  store i1 %v5_169a8, i1* %cpsr_v.global-to-local, align 1
  %v6_169a8 = icmp slt i32 %v1_169a8, 0
  store i1 %v6_169a8, i1* %cpsr_n.global-to-local, align 1
  %v7_169a8 = icmp eq i32 %v1_169a8, 0
  store i1 %v7_169a8, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_169ac

dec_label_pc_169ac:                               ; preds = %.thread115, %dec_label_pc_169a8
  %v0_169bc.pre157 = phi i32 [ %v0_169bc.pre, %.thread115 ], [ %v1_169a8, %dec_label_pc_169a8 ]
  %v3_169b0 = phi i32 [ %v3_169b099116, %.thread115 ], [ %v3_169b0101, %dec_label_pc_169a8 ]
  %v1_169b4 = phi i1 [ %v1_169b8, %.thread115 ], [ %v5_169a8, %dec_label_pc_169a8 ]
  %v0_169b4 = phi i1 [ %v0_169b8, %.thread115 ], [ %v6_169a8, %dec_label_pc_169a8 ]
  %v2_169ac = xor i1 %v1_169b4, %v0_169b4
  br i1 %v2_169ac, label %.thread115, label %bb138

bb138:                                            ; preds = %dec_label_pc_169ac
  %v3_169ac = load i32, i32* @r1, align 4
  %v4_169ac = inttoptr i32 %v3_169ac to i32*
  %v5_169ac = load i32, i32* %v4_169ac, align 4
  store i32 %v5_169ac, i32* @r3, align 4
  %v6_169ac = add i32 %v3_169ac, 4
  %v7_169ac = inttoptr i32 %v6_169ac to i32*
  %v8_169ac = load i32, i32* %v7_169ac, align 4
  store i32 %v8_169ac, i32* @ip, align 4
  %v9_169ac = add i32 %v3_169ac, 8
  %v10_169ac = inttoptr i32 %v9_169ac to i32*
  %v11_169ac = load i32, i32* %v10_169ac, align 4
  store i32 %v11_169ac, i32* %lr.global-to-local, align 4
  %v12_169ac = add i32 %v3_169ac, 12
  store i32 %v12_169ac, i32* @r1, align 4
  %v4_169b0 = inttoptr i32 %v3_169b0 to i32*
  store i32 %v5_169ac, i32* %v4_169b0, align 4
  %v6_169b0 = add i32 %v3_169b0, 4
  %v7_169b0 = inttoptr i32 %v6_169b0 to i32*
  %v8_169b0 = load i32, i32* @ip, align 4
  store i32 %v8_169b0, i32* %v7_169b0, align 4
  %v9_169b0 = add i32 %v3_169b0, 8
  %v10_169b0 = inttoptr i32 %v9_169b0 to i32*
  %v11_169b0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_169b0, i32* %v10_169b0, align 4
  %v12_169b0 = add i32 %v3_169b0, 12
  store i32 %v12_169b0, i32* @r0, align 4
  %v3_169b4 = load i32, i32* %r2.global-to-local, align 4
  %v4_169b4 = add i32 %v3_169b4, -12
  store i32 %v4_169b4, i32* %r2.global-to-local, align 4
  %v6_169b4 = sub i32 11, %v3_169b4
  %v7_169b4 = and i32 %v6_169b4, %v3_169b4
  %v8_169b4 = icmp slt i32 %v7_169b4, 0
  store i1 %v8_169b4, i1* %cpsr_v.global-to-local, align 1
  %v9_169b4 = icmp slt i32 %v4_169b4, 0
  store i1 %v9_169b4, i1* %cpsr_n.global-to-local, align 1
  %v10_169b4 = icmp eq i32 %v3_169b4, 12
  store i1 %v10_169b4, i1* %cpsr_z.global-to-local, align 1
  br label %.thread115

.thread115:                                       ; preds = %dec_label_pc_169ac, %bb138
  %v0_169bc.pre = phi i32 [ %v4_169b4, %bb138 ], [ %v0_169bc.pre157, %dec_label_pc_169ac ]
  %v3_169b099116 = phi i32 [ %v12_169b0, %bb138 ], [ %v3_169b0, %dec_label_pc_169ac ]
  %v1_169b8 = phi i1 [ %v8_169b4, %bb138 ], [ %v1_169b4, %dec_label_pc_169ac ]
  %v0_169b8 = phi i1 [ %v9_169b4, %bb138 ], [ %v0_169b4, %dec_label_pc_169ac ]
  %v2_169b8 = xor i1 %v1_169b8, %v0_169b8
  br i1 %v2_169b8, label %dec_label_pc_169bc, label %dec_label_pc_169ac

dec_label_pc_169bc:                               ; preds = %.thread115, %dec_label_pc_16968
  %v4_169cc = phi i32 [ %v0_1698094, %dec_label_pc_16968 ], [ %v3_169b099116, %.thread115 ]
  %v0_169bc = phi i32 [ %v1_16968, %dec_label_pc_16968 ], [ %v0_169bc.pre, %.thread115 ]
  %v1_169bc = add i32 %v0_169bc, 8
  store i32 %v1_169bc, i32* %r2.global-to-local, align 4
  %v3_169bc = sub i32 0, %v0_169bc
  %v4_169bc = and i32 %v1_169bc, %v3_169bc
  %v5_169bc = icmp slt i32 %v4_169bc, 0
  store i1 %v5_169bc, i1* %cpsr_v.global-to-local, align 1
  %v6_169bc = icmp slt i32 %v1_169bc, 0
  store i1 %v6_169bc, i1* %cpsr_n.global-to-local, align 1
  %v7_169bc = icmp eq i32 %v1_169bc, 0
  store i1 %v7_169bc, i1* %cpsr_z.global-to-local, align 1
  %v2_169c0 = xor i1 %v6_169bc, %v5_169bc
  br i1 %v2_169c0, label %bb140, label %dec_label_pc_169c4

dec_label_pc_169c4:                               ; preds = %dec_label_pc_169bc
  %v1_169c4 = add i32 %v0_169bc, 4
  store i32 %v1_169c4, i32* %r2.global-to-local, align 4
  %v3_169c4 = sub i32 -5, %v0_169bc
  %v4_169c4 = and i32 %v3_169c4, %v1_169bc
  %v5_169c4 = icmp slt i32 %v4_169c4, 0
  store i1 %v5_169c4, i1* %cpsr_v.global-to-local, align 1
  %v6_169c4 = icmp slt i32 %v1_169c4, 0
  store i1 %v6_169c4, i1* %cpsr_n.global-to-local, align 1
  %v7_169c4 = icmp eq i32 %v1_169bc, 4
  store i1 %v7_169c4, i1* %cpsr_z.global-to-local, align 1
  %v2_169c8 = xor i1 %v6_169c4, %v5_169c4
  %v3_169c8 = load i32, i32* @r1, align 4
  %v4_169c8 = inttoptr i32 %v3_169c8 to i32*
  %v5_169c8 = load i32, i32* %v4_169c8, align 4
  store i32 %v5_169c8, i32* @r3, align 4
  %v7_169c8 = add i32 %v3_169c8, 4
  br i1 %v2_169c8, label %.thread122, label %bb139

.thread122:                                       ; preds = %dec_label_pc_169c4
  store i32 %v7_169c8, i32* @r1, align 4
  %v5_169cc = inttoptr i32 %v4_169cc to i32*
  store i32 %v5_169c8, i32* %v5_169cc, align 4
  %v6_169cc = load i32, i32* @r0, align 4
  %v7_169cc = add i32 %v6_169cc, 4
  store i32 %v7_169cc, i32* @r0, align 4
  %v0_169dc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb140

bb139:                                            ; preds = %dec_label_pc_169c4
  %v7_169d0 = inttoptr i32 %v7_169c8 to i32*
  %v8_169d0 = load i32, i32* %v7_169d0, align 4
  store i32 %v8_169d0, i32* @ip, align 4
  %v9_169d0 = add i32 %v3_169c8, 8
  store i32 %v9_169d0, i32* @r1, align 4
  %v4_169d4 = inttoptr i32 %v4_169cc to i32*
  store i32 %v5_169c8, i32* %v4_169d4, align 4
  %v6_169d4 = add i32 %v4_169cc, 4
  %v7_169d4 = inttoptr i32 %v6_169d4 to i32*
  %v8_169d4 = load i32, i32* @ip, align 4
  store i32 %v8_169d4, i32* %v7_169d4, align 4
  %v9_169d4 = add i32 %v4_169cc, 8
  store i32 %v9_169d4, i32* @r0, align 4
  %v3_169d8 = load i32, i32* %r2.global-to-local, align 4
  %v4_169d8 = add i32 %v3_169d8, -4
  store i32 %v4_169d8, i32* %r2.global-to-local, align 4
  br label %bb140

bb140:                                            ; preds = %.thread122, %.thread128, %dec_label_pc_169bc, %bb, %dec_label_pc_16b8c, %dec_label_pc_16b20, %dec_label_pc_16ab4, %bb139
  %v0_169dc = phi i32 [ %v0_169dc.pre, %.thread122 ], [ %v2_16a2c, %.thread128 ], [ %v1_169bc, %dec_label_pc_169bc ], [ %v2_16950, %bb ], [ %v0_169dc61, %dec_label_pc_16b8c ], [ %v0_169dc60, %dec_label_pc_16b20 ], [ %v0_169dc59, %dec_label_pc_16ab4 ], [ %v4_169d8, %bb139 ]
  %v1_169dc = add i32 %v0_169dc, 4
  store i32 %v1_169dc, i32* %r2.global-to-local, align 4
  %v3_169dc = sub i32 0, %v0_169dc
  %v4_169dc = and i32 %v1_169dc, %v3_169dc
  %v5_169dc = icmp slt i32 %v4_169dc, 0
  store i1 %v5_169dc, i1* %cpsr_v.global-to-local, align 1
  %v6_169dc = icmp slt i32 %v1_169dc, 0
  store i1 %v6_169dc, i1* %cpsr_n.global-to-local, align 1
  %v7_169dc = icmp eq i32 %v1_169dc, 0
  store i1 %v7_169dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_169dc, label %bb141, label %bb140.bb142_crit_edge

bb140.bb142_crit_edge:                            ; preds = %bb140
  %v0_169e4.pre = load i32, i32* @r3, align 4
  br label %bb142

bb141:                                            ; preds = %bb140
  %v3_169e0 = load i8*, i8** %stack_var_-8, align 4
  %v4_169e0 = ptrtoint i8* %v3_169e0 to i32
  store i32 %v4_169e0, i32* @r0, align 4
  br label %bb142

bb142:                                            ; preds = %bb140.bb142_crit_edge, %bb141
  %v0_169e4 = phi i32 [ %v0_169e4.pre, %bb140.bb142_crit_edge ], [ %v8_1694c, %bb141 ]
  call void @__pseudo_cond_branch(i1 %v7_169dc, i32 %v0_169e4)
  %v0_169e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_169e8 = add i32 %v0_169e8, -2
  %v3_169e8 = sub i32 1, %v0_169e8
  %v4_169e8 = and i32 %v3_169e8, %v0_169e8
  %v5_169e8 = icmp slt i32 %v4_169e8, 0
  store i1 %v5_169e8, i1* %cpsr_v.global-to-local, align 1
  %v6_169e8 = icmp slt i32 %v1_169e8, 0
  store i1 %v6_169e8, i1* %cpsr_n.global-to-local, align 1
  %v7_169e8 = icmp eq i32 %v0_169e8, 2
  store i1 %v7_169e8, i1* %cpsr_z.global-to-local, align 1
  %v0_169ec = load i32, i32* @r1, align 4
  %v1_169ec = inttoptr i32 %v0_169ec to i8*
  %v2_169ec = load i8, i8* %v1_169ec, align 1
  %v5_169ec = add i32 %v0_169ec, 1
  store i32 %v5_169ec, i32* %r1.global-to-local, align 4
  %v2_169f0 = load i32, i32* @r0, align 4
  %v3_169f0 = inttoptr i32 %v2_169f0 to i8*
  store i8 %v2_169ec, i8* %v3_169f0, align 1
  %v4_169f0 = load i32, i32* @r0, align 4
  %v5_169f0 = add i32 %v4_169f0, 1
  store i32 %v5_169f0, i32* %r0.global-to-local, align 4
  %v0_169f4 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_169f4 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_169f4 = xor i1 %v0_169f4, %v1_169f4
  br i1 %v2_169f4, label %.thread125, label %bb143

bb143:                                            ; preds = %bb142
  %v3_169f4 = load i32, i32* %r1.global-to-local, align 4
  %v4_169f4 = inttoptr i32 %v3_169f4 to i8*
  %v5_169f4 = load i8, i8* %v4_169f4, align 1
  %v8_169f4 = add i32 %v3_169f4, 1
  store i32 %v8_169f4, i32* %r1.global-to-local, align 4
  %v6_169f8 = inttoptr i32 %v5_169f0 to i8*
  store i8 %v5_169f4, i8* %v6_169f8, align 1
  %v7_169f8 = load i32, i32* %r0.global-to-local, align 4
  %v8_169f8 = add i32 %v7_169f8, 1
  store i32 %v8_169f8, i32* %r0.global-to-local, align 4
  %v1_169fc.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_169fc.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread125

.thread125:                                       ; preds = %bb142, %bb143
  %v7_16a00 = phi i32 [ %v8_169f8, %bb143 ], [ %v5_169f0, %bb142 ]
  %v2_16a00 = phi i1 [ %v2_169fc.pre, %bb143 ], [ %v1_169f4, %bb142 ]
  %v1_16a00 = phi i1 [ %v1_169fc.pre, %bb143 ], [ %v0_169f4, %bb142 ]
  %v0_169fc = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_169fc = xor i1 %v2_16a00, %v1_16a00
  %v4_169fc = or i1 %v0_169fc, %v3_169fc
  br i1 %v4_169fc, label %.thread126, label %bb144

bb144:                                            ; preds = %.thread125
  %v5_169fc = load i32, i32* %r1.global-to-local, align 4
  %v6_169fc = inttoptr i32 %v5_169fc to i8*
  %v7_169fc = load i8, i8* %v6_169fc, align 1
  %v10_169fc = add i32 %v5_169fc, 1
  store i32 %v10_169fc, i32* %r1.global-to-local, align 4
  %v8_16a00 = inttoptr i32 %v7_16a00 to i8*
  store i8 %v7_169fc, i8* %v8_16a00, align 1
  %v9_16a00 = load i32, i32* %r0.global-to-local, align 4
  %v10_16a00 = add i32 %v9_16a00, 1
  store i32 %v10_16a00, i32* %r0.global-to-local, align 4
  br label %.thread126

.thread126:                                       ; preds = %.thread125, %bb144
  %v2_16a04 = load i8*, i8** %stack_var_-8, align 4
  %v3_16a04 = ptrtoint i8* %v2_16a04 to i32
  store i32 %v3_16a04, i32* @r0, align 4
  call void @__pseudo_branch(i32 %v8_1694c)
  %v0_16a0c.pre = load i32, i32* @ip, align 4
  %v0_16a14.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_16a18.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_16a0c

dec_label_pc_16a0c:                               ; preds = %dec_label_pc_16958, %.thread126
  %v2_16a18 = phi i32 [ %v1_16940, %dec_label_pc_16958 ], [ %v2_16a18.pre, %.thread126 ]
  %v0_16a14 = phi i32 [ %v0_16940, %dec_label_pc_16958 ], [ %v0_16a14.pre, %.thread126 ]
  %v0_16a0c = phi i32 [ %v1_16958, %dec_label_pc_16958 ], [ %v0_16a0c.pre, %.thread126 ]
  %v1_16a0c = sub i32 4, %v0_16a0c
  store i32 %v1_16a0c, i32* @ip, align 4
  %v1_16a10 = add i32 %v1_16a0c, -2
  %v3_16a10 = sub i32 1, %v1_16a0c
  %v4_16a10 = and i32 %v3_16a10, %v1_16a0c
  %v5_16a10 = icmp slt i32 %v4_16a10, 0
  store i1 %v5_16a10, i1* %cpsr_v.global-to-local, align 1
  %v6_16a10 = icmp slt i32 %v1_16a10, 0
  store i1 %v6_16a10, i1* %cpsr_n.global-to-local, align 1
  %v7_16a10 = icmp eq i32 %v1_16a0c, 2
  store i1 %v7_16a10, i1* %cpsr_z.global-to-local, align 1
  %v1_16a14 = inttoptr i32 %v0_16a14 to i8*
  %v2_16a14 = load i8, i8* %v1_16a14, align 1
  %v3_16a14 = zext i8 %v2_16a14 to i32
  store i32 %v3_16a14, i32* @r3, align 4
  %v5_16a14 = add i32 %v0_16a14, 1
  store i32 %v5_16a14, i32* @r1, align 4
  %v3_16a18 = inttoptr i32 %v2_16a18 to i8*
  store i8 %v2_16a14, i8* %v3_16a18, align 1
  %v4_16a18 = load i32, i32* @r0, align 4
  %v5_16a18 = add i32 %v4_16a18, 1
  store i32 %v5_16a18, i32* @r0, align 4
  %v0_16a1c = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_16a1c = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_16a1c = xor i1 %v0_16a1c, %v1_16a1c
  br i1 %v2_16a1c, label %.thread127, label %bb145

bb145:                                            ; preds = %dec_label_pc_16a0c
  %v3_16a1c = load i32, i32* @r1, align 4
  %v4_16a1c = inttoptr i32 %v3_16a1c to i8*
  %v5_16a1c = load i8, i8* %v4_16a1c, align 1
  %v6_16a1c = zext i8 %v5_16a1c to i32
  store i32 %v6_16a1c, i32* @r3, align 4
  %v8_16a1c = add i32 %v3_16a1c, 1
  store i32 %v8_16a1c, i32* @r1, align 4
  %v6_16a20 = inttoptr i32 %v5_16a18 to i8*
  store i8 %v5_16a1c, i8* %v6_16a20, align 1
  %v7_16a20 = load i32, i32* @r0, align 4
  %v8_16a20 = add i32 %v7_16a20, 1
  store i32 %v8_16a20, i32* @r0, align 4
  %v1_16a24.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_16a24.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread127

.thread127:                                       ; preds = %dec_label_pc_16a0c, %bb145
  %v7_16a28 = phi i32 [ %v8_16a20, %bb145 ], [ %v5_16a18, %dec_label_pc_16a0c ]
  %v2_16a28 = phi i1 [ %v2_16a24.pre, %bb145 ], [ %v1_16a1c, %dec_label_pc_16a0c ]
  %v1_16a28 = phi i1 [ %v1_16a24.pre, %bb145 ], [ %v0_16a1c, %dec_label_pc_16a0c ]
  %v0_16a24 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_16a24 = xor i1 %v2_16a28, %v1_16a28
  %v4_16a24 = or i1 %v0_16a24, %v3_16a24
  br i1 %v4_16a24, label %.thread128, label %bb146

bb146:                                            ; preds = %.thread127
  %v5_16a24 = load i32, i32* @r1, align 4
  %v6_16a24 = inttoptr i32 %v5_16a24 to i8*
  %v7_16a24 = load i8, i8* %v6_16a24, align 1
  %v8_16a24 = zext i8 %v7_16a24 to i32
  store i32 %v8_16a24, i32* @r3, align 4
  %v10_16a24 = add i32 %v5_16a24, 1
  store i32 %v10_16a24, i32* @r1, align 4
  %v8_16a28 = inttoptr i32 %v7_16a28 to i8*
  store i8 %v7_16a24, i8* %v8_16a28, align 1
  %v9_16a28 = load i32, i32* @r0, align 4
  %v10_16a28 = add i32 %v9_16a28, 1
  store i32 %v10_16a28, i32* @r0, align 4
  br label %.thread128

.thread128:                                       ; preds = %.thread127, %bb146
  %v0_16b5c77 = phi i32 [ %v10_16a28, %bb146 ], [ %v7_16a28, %.thread127 ]
  %v0_16a2c = load i32, i32* %r2.global-to-local, align 4
  %v1_16a2c = load i32, i32* @ip, align 4
  %v2_16a2c = sub i32 %v0_16a2c, %v1_16a2c
  store i32 %v2_16a2c, i32* %r2.global-to-local, align 4
  %v4_16a2c = xor i32 %v1_16a2c, %v0_16a2c
  %v5_16a2c = xor i32 %v2_16a2c, %v0_16a2c
  %v6_16a2c = and i32 %v5_16a2c, %v4_16a2c
  %v7_16a2c = icmp slt i32 %v6_16a2c, 0
  store i1 %v7_16a2c, i1* %cpsr_v.global-to-local, align 1
  %v8_16a2c = icmp slt i32 %v2_16a2c, 0
  store i1 %v8_16a2c, i1* %cpsr_n.global-to-local, align 1
  %v9_16a2c = icmp eq i32 %v0_16a2c, %v1_16a2c
  store i1 %v9_16a2c, i1* %cpsr_z.global-to-local, align 1
  %v2_16a30 = xor i1 %v8_16a2c, %v7_16a2c
  br i1 %v2_16a30, label %bb140, label %dec_label_pc_16a34

dec_label_pc_16a34:                               ; preds = %.thread128
  %v0_16a34 = load i32, i32* @r1, align 4
  %v1_16a34 = urem i32 %v0_16a34, 4
  store i32 %v1_16a34, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_16a34 = icmp eq i32 %v1_16a34, 0
  store i1 %v2_16a34, i1* %cpsr_z.global-to-local, align 1
  %extract.t131 = trunc i32 %v0_16a34 to i2
  br i1 %v2_16a34, label %dec_label_pc_16968, label %dec_label_pc_16a3c

dec_label_pc_16a3c:                               ; preds = %dec_label_pc_16960, %dec_label_pc_16a34
  %v0_16b5c76 = phi i32 [ %v1_16940, %dec_label_pc_16960 ], [ %v0_16b5c77, %dec_label_pc_16a34 ]
  %v0_16ac4 = phi i32 [ %v2_16950, %dec_label_pc_16960 ], [ %v2_16a2c, %dec_label_pc_16a34 ]
  %v0_16a44.off0 = phi i2 [ %extract.t, %dec_label_pc_16960 ], [ %extract.t131, %dec_label_pc_16a34 ]
  %v0_16a3c = phi i32 [ %v0_16940, %dec_label_pc_16960 ], [ %v0_16a34, %dec_label_pc_16a34 ]
  %v1_16a3c = and i32 %v0_16a3c, -4
  store i32 %v1_16a3c, i32* %r1.global-to-local, align 4
  %v1_16a40 = inttoptr i32 %v1_16a3c to i32*
  %v2_16a40 = load i32, i32* %v1_16a40, align 4
  store i32 %v2_16a40, i32* %lr.global-to-local, align 4
  %v4_16a40 = add i32 %v1_16a3c, 4
  store i32 %v4_16a40, i32* %r1.global-to-local, align 4
  %v1_16abc = add i32 %v0_16ac4, -12
  %v3_16abc = sub i32 11, %v0_16ac4
  %v4_16abc = and i32 %v3_16abc, %v0_16ac4
  %v5_16abc = icmp slt i32 %v4_16abc, 0
  store i1 %v5_16abc, i1* %cpsr_v.global-to-local, align 1
  %v6_16abc = icmp slt i32 %v1_16abc, 0
  store i1 %v6_16abc, i1* %cpsr_n.global-to-local, align 1
  %v7_16abc = icmp eq i32 %v0_16ac4, 12
  store i1 %v7_16abc, i1* %cpsr_z.global-to-local, align 1
  %v2_16ac0 = xor i1 %v6_16abc, %v5_16abc
  switch i2 %v0_16a44.off0, label %dec_label_pc_16a50 [
    i2 -1, label %dec_label_pc_16b28
    i2 -2, label %dec_label_pc_16abc
  ]

dec_label_pc_16a50:                               ; preds = %dec_label_pc_16a3c
  br i1 %v2_16ac0, label %dec_label_pc_16a9c, label %dec_label_pc_16a58

dec_label_pc_16a58:                               ; preds = %dec_label_pc_16a50
  store i32 %v1_16abc, i32* %r2.global-to-local, align 4
  %v3_16a5c = load i32, i32* @r4, align 4
  store i32 %v3_16a5c, i32* %stack_var_-16, align 4
  %v6_16a5c = load i32, i32* @r5, align 4
  store i32 %v6_16a5c, i32* %stack_var_-12, align 4
  br label %dec_label_pc_16a60

dec_label_pc_16a60:                               ; preds = %dec_label_pc_16a60.dec_label_pc_16a60_crit_edge, %dec_label_pc_16a58
  %v0_16a84 = phi i32 [ %v12_16a84, %dec_label_pc_16a60.dec_label_pc_16a60_crit_edge ], [ %v0_16b5c76, %dec_label_pc_16a58 ]
  %v0_16a64 = phi i32 [ %v0_16a64.pre, %dec_label_pc_16a60.dec_label_pc_16a60_crit_edge ], [ %v4_16a40, %dec_label_pc_16a58 ]
  %v0_16a60 = phi i32 [ %v0_16a60.pre, %dec_label_pc_16a60.dec_label_pc_16a60_crit_edge ], [ %v2_16a40, %dec_label_pc_16a58 ]
  %v3_16a60 = udiv i32 %v0_16a60, 256
  %v1_16a64 = inttoptr i32 %v0_16a64 to i32*
  %v2_16a64 = load i32, i32* %v1_16a64, align 4
  store i32 %v2_16a64, i32* %r4.global-to-local, align 4
  %v3_16a64 = add i32 %v0_16a64, 4
  %v4_16a64 = inttoptr i32 %v3_16a64 to i32*
  %v5_16a64 = load i32, i32* %v4_16a64, align 4
  store i32 %v5_16a64, i32* %r5.global-to-local, align 4
  %v6_16a64 = add i32 %v0_16a64, 8
  %v7_16a64 = inttoptr i32 %v6_16a64 to i32*
  %v8_16a64 = load i32, i32* %v7_16a64, align 4
  store i32 %v8_16a64, i32* %ip.global-to-local, align 4
  %v9_16a64 = add i32 %v0_16a64, 12
  %v10_16a64 = inttoptr i32 %v9_16a64 to i32*
  %v11_16a64 = load i32, i32* %v10_16a64, align 4
  store i32 %v11_16a64, i32* %lr.global-to-local, align 4
  %v12_16a64 = add i32 %v0_16a64, 16
  store i32 %v12_16a64, i32* %r1.global-to-local, align 4
  %v4_16a68 = mul i32 %v2_16a64, 16777216
  %v5_16a68 = or i32 %v4_16a68, %v3_16a60
  store i32 %v5_16a68, i32* @r3, align 4
  %v3_16a6c = udiv i32 %v2_16a64, 256
  %v4_16a70 = mul i32 %v5_16a64, 16777216
  %v5_16a70 = or i32 %v4_16a70, %v3_16a6c
  store i32 %v5_16a70, i32* %r4.global-to-local, align 4
  %v3_16a74 = udiv i32 %v5_16a64, 256
  %v4_16a78 = mul i32 %v8_16a64, 16777216
  %v5_16a78 = or i32 %v4_16a78, %v3_16a74
  store i32 %v5_16a78, i32* %r5.global-to-local, align 4
  %v3_16a7c = udiv i32 %v8_16a64, 256
  %v4_16a80 = mul i32 %v11_16a64, 16777216
  %v5_16a80 = or i32 %v4_16a80, %v3_16a7c
  store i32 %v5_16a80, i32* @ip, align 4
  %v1_16a84 = inttoptr i32 %v0_16a84 to i32*
  store i32 %v5_16a68, i32* %v1_16a84, align 4
  %v3_16a84 = add i32 %v0_16a84, 4
  %v4_16a84 = inttoptr i32 %v3_16a84 to i32*
  %v5_16a84 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_16a84, i32* %v4_16a84, align 4
  %v6_16a84 = add i32 %v0_16a84, 8
  %v7_16a84 = inttoptr i32 %v6_16a84 to i32*
  %v8_16a84 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_16a84, i32* %v7_16a84, align 4
  %v9_16a84 = add i32 %v0_16a84, 12
  %v10_16a84 = inttoptr i32 %v9_16a84 to i32*
  %v11_16a84 = load i32, i32* @ip, align 4
  store i32 %v11_16a84, i32* %v10_16a84, align 4
  %v12_16a84 = add i32 %v0_16a84, 16
  store i32 %v12_16a84, i32* @r0, align 4
  %v0_16a88 = load i32, i32* %r2.global-to-local, align 4
  %v1_16a88 = add i32 %v0_16a88, -16
  store i32 %v1_16a88, i32* %r2.global-to-local, align 4
  %v3_16a88 = sub i32 15, %v0_16a88
  %v4_16a88 = and i32 %v3_16a88, %v0_16a88
  %v5_16a88 = icmp slt i32 %v4_16a88, 0
  %v6_16a88 = icmp slt i32 %v1_16a88, 0
  %v2_16a8c = xor i1 %v6_16a88, %v5_16a88
  br i1 %v2_16a8c, label %dec_label_pc_16a90, label %dec_label_pc_16a60.dec_label_pc_16a60_crit_edge

dec_label_pc_16a60.dec_label_pc_16a60_crit_edge:  ; preds = %dec_label_pc_16a60
  %v0_16a60.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_16a64.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16a60

dec_label_pc_16a90:                               ; preds = %dec_label_pc_16a60
  %v2_16a90 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_16a90, i32* @r4, align 4
  %v5_16a90 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_16a90, i32* @r5, align 4
  %v1_16a94 = add i32 %v0_16a88, -4
  store i32 %v1_16a94, i32* %r2.global-to-local, align 4
  %v3_16a94 = add i32 %v0_16a88, 2147483632
  %v4_16a94 = and i32 %v1_16a94, %v3_16a94
  %v5_16a94 = icmp slt i32 %v4_16a94, 0
  store i1 %v5_16a94, i1* %cpsr_v.global-to-local, align 1
  %v6_16a94 = icmp slt i32 %v1_16a94, 0
  store i1 %v6_16a94, i1* %cpsr_n.global-to-local, align 1
  %v7_16a94 = icmp eq i32 %v1_16a94, 0
  store i1 %v7_16a94, i1* %cpsr_z.global-to-local, align 1
  %v2_16a98 = xor i1 %v6_16a94, %v5_16a94
  br i1 %v2_16a98, label %dec_label_pc_16ab4, label %dec_label_pc_16a9c

dec_label_pc_16a9c:                               ; preds = %dec_label_pc_16a90, %dec_label_pc_16a50, %dec_label_pc_16a9c
  %v1_16aa8 = phi i32 [ %v4_16aa8, %dec_label_pc_16a9c ], [ %v12_16a84, %dec_label_pc_16a90 ], [ %v0_16b5c76, %dec_label_pc_16a50 ]
  %v0_16a9c = load i32, i32* %lr.global-to-local, align 4
  %v3_16a9c = udiv i32 %v0_16a9c, 256
  store i32 %v3_16a9c, i32* %ip.global-to-local, align 4
  %v0_16aa0 = load i32, i32* %r1.global-to-local, align 4
  %v1_16aa0 = inttoptr i32 %v0_16aa0 to i32*
  %v2_16aa0 = load i32, i32* %v1_16aa0, align 4
  store i32 %v2_16aa0, i32* %lr.global-to-local, align 4
  %v4_16aa0 = add i32 %v0_16aa0, 4
  store i32 %v4_16aa0, i32* %r1.global-to-local, align 4
  %v4_16aa4 = mul i32 %v2_16aa0, 16777216
  %v5_16aa4 = or i32 %v4_16aa4, %v3_16a9c
  store i32 %v5_16aa4, i32* @ip, align 4
  %v2_16aa8 = inttoptr i32 %v1_16aa8 to i32*
  store i32 %v5_16aa4, i32* %v2_16aa8, align 4
  %v3_16aa8 = load i32, i32* @r0, align 4
  %v4_16aa8 = add i32 %v3_16aa8, 4
  store i32 %v4_16aa8, i32* @r0, align 4
  %v0_16aac = load i32, i32* %r2.global-to-local, align 4
  %v1_16aac = add i32 %v0_16aac, -4
  store i32 %v1_16aac, i32* %r2.global-to-local, align 4
  %v3_16aac = sub i32 3, %v0_16aac
  %v4_16aac = and i32 %v3_16aac, %v0_16aac
  %v5_16aac = icmp slt i32 %v4_16aac, 0
  %v6_16aac = icmp slt i32 %v1_16aac, 0
  %v2_16ab0 = xor i1 %v6_16aac, %v5_16aac
  br i1 %v2_16ab0, label %dec_label_pc_16ab4.loopexit, label %dec_label_pc_16a9c

dec_label_pc_16ab4.loopexit:                      ; preds = %dec_label_pc_16a9c
  %v7_16aac = icmp eq i32 %v0_16aac, 4
  store i1 %v5_16aac, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_16aac, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_16aac, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16ab4

dec_label_pc_16ab4:                               ; preds = %dec_label_pc_16ab4.loopexit, %dec_label_pc_16a90
  %v0_169dc59 = phi i32 [ %v1_16aac, %dec_label_pc_16ab4.loopexit ], [ %v1_16a94, %dec_label_pc_16a90 ]
  %v0_16ab4 = load i32, i32* %r1.global-to-local, align 4
  %v1_16ab4 = add i32 %v0_16ab4, -3
  store i32 %v1_16ab4, i32* @r1, align 4
  br label %bb140

dec_label_pc_16abc:                               ; preds = %dec_label_pc_16a3c
  br i1 %v2_16ac0, label %dec_label_pc_16b08, label %dec_label_pc_16ac4

dec_label_pc_16ac4:                               ; preds = %dec_label_pc_16abc
  store i32 %v1_16abc, i32* %r2.global-to-local, align 4
  %v3_16ac8 = load i32, i32* @r4, align 4
  store i32 %v3_16ac8, i32* %stack_var_-16, align 4
  %v6_16ac8 = load i32, i32* @r5, align 4
  store i32 %v6_16ac8, i32* %stack_var_-12, align 4
  br label %dec_label_pc_16acc

dec_label_pc_16acc:                               ; preds = %dec_label_pc_16acc.dec_label_pc_16acc_crit_edge, %dec_label_pc_16ac4
  %v0_16af0 = phi i32 [ %v12_16af0, %dec_label_pc_16acc.dec_label_pc_16acc_crit_edge ], [ %v0_16b5c76, %dec_label_pc_16ac4 ]
  %v0_16ad0 = phi i32 [ %v0_16ad0.pre, %dec_label_pc_16acc.dec_label_pc_16acc_crit_edge ], [ %v4_16a40, %dec_label_pc_16ac4 ]
  %v0_16acc = phi i32 [ %v0_16acc.pre, %dec_label_pc_16acc.dec_label_pc_16acc_crit_edge ], [ %v2_16a40, %dec_label_pc_16ac4 ]
  %v3_16acc = udiv i32 %v0_16acc, 65536
  %v1_16ad0 = inttoptr i32 %v0_16ad0 to i32*
  %v2_16ad0 = load i32, i32* %v1_16ad0, align 4
  store i32 %v2_16ad0, i32* %r4.global-to-local, align 4
  %v3_16ad0 = add i32 %v0_16ad0, 4
  %v4_16ad0 = inttoptr i32 %v3_16ad0 to i32*
  %v5_16ad0 = load i32, i32* %v4_16ad0, align 4
  store i32 %v5_16ad0, i32* %r5.global-to-local, align 4
  %v6_16ad0 = add i32 %v0_16ad0, 8
  %v7_16ad0 = inttoptr i32 %v6_16ad0 to i32*
  %v8_16ad0 = load i32, i32* %v7_16ad0, align 4
  store i32 %v8_16ad0, i32* %ip.global-to-local, align 4
  %v9_16ad0 = add i32 %v0_16ad0, 12
  %v10_16ad0 = inttoptr i32 %v9_16ad0 to i32*
  %v11_16ad0 = load i32, i32* %v10_16ad0, align 4
  store i32 %v11_16ad0, i32* %lr.global-to-local, align 4
  %v12_16ad0 = add i32 %v0_16ad0, 16
  store i32 %v12_16ad0, i32* %r1.global-to-local, align 4
  %v4_16ad4 = mul i32 %v2_16ad0, 65536
  %v5_16ad4 = or i32 %v4_16ad4, %v3_16acc
  store i32 %v5_16ad4, i32* @r3, align 4
  %v3_16ad8 = udiv i32 %v2_16ad0, 65536
  %v4_16adc = mul i32 %v5_16ad0, 65536
  %v5_16adc = or i32 %v4_16adc, %v3_16ad8
  store i32 %v5_16adc, i32* %r4.global-to-local, align 4
  %v3_16ae0 = udiv i32 %v5_16ad0, 65536
  %v4_16ae4 = mul i32 %v8_16ad0, 65536
  %v5_16ae4 = or i32 %v4_16ae4, %v3_16ae0
  store i32 %v5_16ae4, i32* %r5.global-to-local, align 4
  %v3_16ae8 = udiv i32 %v8_16ad0, 65536
  %v4_16aec = mul i32 %v11_16ad0, 65536
  %v5_16aec = or i32 %v4_16aec, %v3_16ae8
  store i32 %v5_16aec, i32* @ip, align 4
  %v1_16af0 = inttoptr i32 %v0_16af0 to i32*
  store i32 %v5_16ad4, i32* %v1_16af0, align 4
  %v3_16af0 = add i32 %v0_16af0, 4
  %v4_16af0 = inttoptr i32 %v3_16af0 to i32*
  %v5_16af0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_16af0, i32* %v4_16af0, align 4
  %v6_16af0 = add i32 %v0_16af0, 8
  %v7_16af0 = inttoptr i32 %v6_16af0 to i32*
  %v8_16af0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_16af0, i32* %v7_16af0, align 4
  %v9_16af0 = add i32 %v0_16af0, 12
  %v10_16af0 = inttoptr i32 %v9_16af0 to i32*
  %v11_16af0 = load i32, i32* @ip, align 4
  store i32 %v11_16af0, i32* %v10_16af0, align 4
  %v12_16af0 = add i32 %v0_16af0, 16
  store i32 %v12_16af0, i32* @r0, align 4
  %v0_16af4 = load i32, i32* %r2.global-to-local, align 4
  %v1_16af4 = add i32 %v0_16af4, -16
  store i32 %v1_16af4, i32* %r2.global-to-local, align 4
  %v3_16af4 = sub i32 15, %v0_16af4
  %v4_16af4 = and i32 %v3_16af4, %v0_16af4
  %v5_16af4 = icmp slt i32 %v4_16af4, 0
  %v6_16af4 = icmp slt i32 %v1_16af4, 0
  %v2_16af8 = xor i1 %v6_16af4, %v5_16af4
  br i1 %v2_16af8, label %dec_label_pc_16afc, label %dec_label_pc_16acc.dec_label_pc_16acc_crit_edge

dec_label_pc_16acc.dec_label_pc_16acc_crit_edge:  ; preds = %dec_label_pc_16acc
  %v0_16acc.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_16ad0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16acc

dec_label_pc_16afc:                               ; preds = %dec_label_pc_16acc
  %v2_16afc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_16afc, i32* @r4, align 4
  %v5_16afc = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_16afc, i32* @r5, align 4
  %v1_16b00 = add i32 %v0_16af4, -4
  store i32 %v1_16b00, i32* %r2.global-to-local, align 4
  %v3_16b00 = add i32 %v0_16af4, 2147483632
  %v4_16b00 = and i32 %v1_16b00, %v3_16b00
  %v5_16b00 = icmp slt i32 %v4_16b00, 0
  store i1 %v5_16b00, i1* %cpsr_v.global-to-local, align 1
  %v6_16b00 = icmp slt i32 %v1_16b00, 0
  store i1 %v6_16b00, i1* %cpsr_n.global-to-local, align 1
  %v7_16b00 = icmp eq i32 %v1_16b00, 0
  store i1 %v7_16b00, i1* %cpsr_z.global-to-local, align 1
  %v2_16b04 = xor i1 %v6_16b00, %v5_16b00
  br i1 %v2_16b04, label %dec_label_pc_16b20, label %dec_label_pc_16b08

dec_label_pc_16b08:                               ; preds = %dec_label_pc_16afc, %dec_label_pc_16abc, %dec_label_pc_16b08
  %v1_16b14 = phi i32 [ %v4_16b14, %dec_label_pc_16b08 ], [ %v12_16af0, %dec_label_pc_16afc ], [ %v0_16b5c76, %dec_label_pc_16abc ]
  %v0_16b08 = load i32, i32* %lr.global-to-local, align 4
  %v3_16b08 = udiv i32 %v0_16b08, 65536
  store i32 %v3_16b08, i32* %ip.global-to-local, align 4
  %v0_16b0c = load i32, i32* %r1.global-to-local, align 4
  %v1_16b0c = inttoptr i32 %v0_16b0c to i32*
  %v2_16b0c = load i32, i32* %v1_16b0c, align 4
  store i32 %v2_16b0c, i32* %lr.global-to-local, align 4
  %v4_16b0c = add i32 %v0_16b0c, 4
  store i32 %v4_16b0c, i32* %r1.global-to-local, align 4
  %v4_16b10 = mul i32 %v2_16b0c, 65536
  %v5_16b10 = or i32 %v4_16b10, %v3_16b08
  store i32 %v5_16b10, i32* @ip, align 4
  %v2_16b14 = inttoptr i32 %v1_16b14 to i32*
  store i32 %v5_16b10, i32* %v2_16b14, align 4
  %v3_16b14 = load i32, i32* @r0, align 4
  %v4_16b14 = add i32 %v3_16b14, 4
  store i32 %v4_16b14, i32* @r0, align 4
  %v0_16b18 = load i32, i32* %r2.global-to-local, align 4
  %v1_16b18 = add i32 %v0_16b18, -4
  store i32 %v1_16b18, i32* %r2.global-to-local, align 4
  %v3_16b18 = sub i32 3, %v0_16b18
  %v4_16b18 = and i32 %v3_16b18, %v0_16b18
  %v5_16b18 = icmp slt i32 %v4_16b18, 0
  %v6_16b18 = icmp slt i32 %v1_16b18, 0
  %v2_16b1c = xor i1 %v6_16b18, %v5_16b18
  br i1 %v2_16b1c, label %dec_label_pc_16b20.loopexit, label %dec_label_pc_16b08

dec_label_pc_16b20.loopexit:                      ; preds = %dec_label_pc_16b08
  %v7_16b18 = icmp eq i32 %v0_16b18, 4
  store i1 %v5_16b18, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_16b18, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_16b18, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16b20

dec_label_pc_16b20:                               ; preds = %dec_label_pc_16b20.loopexit, %dec_label_pc_16afc
  %v0_169dc60 = phi i32 [ %v1_16b18, %dec_label_pc_16b20.loopexit ], [ %v1_16b00, %dec_label_pc_16afc ]
  %v0_16b20 = load i32, i32* %r1.global-to-local, align 4
  %v1_16b20 = add i32 %v0_16b20, -2
  store i32 %v1_16b20, i32* @r1, align 4
  br label %bb140

dec_label_pc_16b28:                               ; preds = %dec_label_pc_16a3c
  br i1 %v2_16ac0, label %dec_label_pc_16b74, label %dec_label_pc_16b30

dec_label_pc_16b30:                               ; preds = %dec_label_pc_16b28
  store i32 %v1_16abc, i32* %r2.global-to-local, align 4
  %v3_16b34 = load i32, i32* @r4, align 4
  store i32 %v3_16b34, i32* %stack_var_-16, align 4
  %v6_16b34 = load i32, i32* @r5, align 4
  store i32 %v6_16b34, i32* %stack_var_-12, align 4
  br label %dec_label_pc_16b38

dec_label_pc_16b38:                               ; preds = %dec_label_pc_16b38.dec_label_pc_16b38_crit_edge, %dec_label_pc_16b30
  %v0_16b5c = phi i32 [ %v12_16b5c, %dec_label_pc_16b38.dec_label_pc_16b38_crit_edge ], [ %v0_16b5c76, %dec_label_pc_16b30 ]
  %v0_16b3c = phi i32 [ %v0_16b3c.pre, %dec_label_pc_16b38.dec_label_pc_16b38_crit_edge ], [ %v4_16a40, %dec_label_pc_16b30 ]
  %v0_16b38 = phi i32 [ %v0_16b38.pre, %dec_label_pc_16b38.dec_label_pc_16b38_crit_edge ], [ %v2_16a40, %dec_label_pc_16b30 ]
  %v3_16b38 = udiv i32 %v0_16b38, 16777216
  %v1_16b3c = inttoptr i32 %v0_16b3c to i32*
  %v2_16b3c = load i32, i32* %v1_16b3c, align 4
  store i32 %v2_16b3c, i32* %r4.global-to-local, align 4
  %v3_16b3c = add i32 %v0_16b3c, 4
  %v4_16b3c = inttoptr i32 %v3_16b3c to i32*
  %v5_16b3c = load i32, i32* %v4_16b3c, align 4
  store i32 %v5_16b3c, i32* %r5.global-to-local, align 4
  %v6_16b3c = add i32 %v0_16b3c, 8
  %v7_16b3c = inttoptr i32 %v6_16b3c to i32*
  %v8_16b3c = load i32, i32* %v7_16b3c, align 4
  store i32 %v8_16b3c, i32* %ip.global-to-local, align 4
  %v9_16b3c = add i32 %v0_16b3c, 12
  %v10_16b3c = inttoptr i32 %v9_16b3c to i32*
  %v11_16b3c = load i32, i32* %v10_16b3c, align 4
  store i32 %v11_16b3c, i32* %lr.global-to-local, align 4
  %v12_16b3c = add i32 %v0_16b3c, 16
  store i32 %v12_16b3c, i32* %r1.global-to-local, align 4
  %v4_16b40 = mul i32 %v2_16b3c, 256
  %v5_16b40 = or i32 %v4_16b40, %v3_16b38
  store i32 %v5_16b40, i32* @r3, align 4
  %v3_16b44 = udiv i32 %v2_16b3c, 16777216
  %v4_16b48 = mul i32 %v5_16b3c, 256
  %v5_16b48 = or i32 %v4_16b48, %v3_16b44
  store i32 %v5_16b48, i32* %r4.global-to-local, align 4
  %v3_16b4c = udiv i32 %v5_16b3c, 16777216
  %v4_16b50 = mul i32 %v8_16b3c, 256
  %v5_16b50 = or i32 %v4_16b50, %v3_16b4c
  store i32 %v5_16b50, i32* %r5.global-to-local, align 4
  %v3_16b54 = udiv i32 %v8_16b3c, 16777216
  %v4_16b58 = mul i32 %v11_16b3c, 256
  %v5_16b58 = or i32 %v4_16b58, %v3_16b54
  store i32 %v5_16b58, i32* @ip, align 4
  %v1_16b5c = inttoptr i32 %v0_16b5c to i32*
  store i32 %v5_16b40, i32* %v1_16b5c, align 4
  %v3_16b5c = add i32 %v0_16b5c, 4
  %v4_16b5c = inttoptr i32 %v3_16b5c to i32*
  %v5_16b5c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_16b5c, i32* %v4_16b5c, align 4
  %v6_16b5c = add i32 %v0_16b5c, 8
  %v7_16b5c = inttoptr i32 %v6_16b5c to i32*
  %v8_16b5c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_16b5c, i32* %v7_16b5c, align 4
  %v9_16b5c = add i32 %v0_16b5c, 12
  %v10_16b5c = inttoptr i32 %v9_16b5c to i32*
  %v11_16b5c = load i32, i32* @ip, align 4
  store i32 %v11_16b5c, i32* %v10_16b5c, align 4
  %v12_16b5c = add i32 %v0_16b5c, 16
  store i32 %v12_16b5c, i32* @r0, align 4
  %v0_16b60 = load i32, i32* %r2.global-to-local, align 4
  %v1_16b60 = add i32 %v0_16b60, -16
  store i32 %v1_16b60, i32* %r2.global-to-local, align 4
  %v3_16b60 = sub i32 15, %v0_16b60
  %v4_16b60 = and i32 %v3_16b60, %v0_16b60
  %v5_16b60 = icmp slt i32 %v4_16b60, 0
  %v6_16b60 = icmp slt i32 %v1_16b60, 0
  %v2_16b64 = xor i1 %v6_16b60, %v5_16b60
  br i1 %v2_16b64, label %dec_label_pc_16b68, label %dec_label_pc_16b38.dec_label_pc_16b38_crit_edge

dec_label_pc_16b38.dec_label_pc_16b38_crit_edge:  ; preds = %dec_label_pc_16b38
  %v0_16b38.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_16b3c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16b38

dec_label_pc_16b68:                               ; preds = %dec_label_pc_16b38
  %v2_16b68 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_16b68, i32* @r4, align 4
  %v5_16b68 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_16b68, i32* @r5, align 4
  %v1_16b6c = add i32 %v0_16b60, -4
  store i32 %v1_16b6c, i32* %r2.global-to-local, align 4
  %v3_16b6c = add i32 %v0_16b60, 2147483632
  %v4_16b6c = and i32 %v1_16b6c, %v3_16b6c
  %v5_16b6c = icmp slt i32 %v4_16b6c, 0
  store i1 %v5_16b6c, i1* %cpsr_v.global-to-local, align 1
  %v6_16b6c = icmp slt i32 %v1_16b6c, 0
  store i1 %v6_16b6c, i1* %cpsr_n.global-to-local, align 1
  %v7_16b6c = icmp eq i32 %v1_16b6c, 0
  store i1 %v7_16b6c, i1* %cpsr_z.global-to-local, align 1
  %v2_16b70 = xor i1 %v6_16b6c, %v5_16b6c
  br i1 %v2_16b70, label %dec_label_pc_16b8c, label %dec_label_pc_16b74

dec_label_pc_16b74:                               ; preds = %dec_label_pc_16b68, %dec_label_pc_16b28, %dec_label_pc_16b74
  %v1_16b80 = phi i32 [ %v4_16b80, %dec_label_pc_16b74 ], [ %v12_16b5c, %dec_label_pc_16b68 ], [ %v0_16b5c76, %dec_label_pc_16b28 ]
  %v0_16b74 = load i32, i32* %lr.global-to-local, align 4
  %v3_16b74 = udiv i32 %v0_16b74, 16777216
  store i32 %v3_16b74, i32* %ip.global-to-local, align 4
  %v0_16b78 = load i32, i32* %r1.global-to-local, align 4
  %v1_16b78 = inttoptr i32 %v0_16b78 to i32*
  %v2_16b78 = load i32, i32* %v1_16b78, align 4
  store i32 %v2_16b78, i32* %lr.global-to-local, align 4
  %v4_16b78 = add i32 %v0_16b78, 4
  store i32 %v4_16b78, i32* %r1.global-to-local, align 4
  %v4_16b7c = mul i32 %v2_16b78, 256
  %v5_16b7c = or i32 %v4_16b7c, %v3_16b74
  store i32 %v5_16b7c, i32* @ip, align 4
  %v2_16b80 = inttoptr i32 %v1_16b80 to i32*
  store i32 %v5_16b7c, i32* %v2_16b80, align 4
  %v3_16b80 = load i32, i32* @r0, align 4
  %v4_16b80 = add i32 %v3_16b80, 4
  store i32 %v4_16b80, i32* @r0, align 4
  %v0_16b84 = load i32, i32* %r2.global-to-local, align 4
  %v1_16b84 = add i32 %v0_16b84, -4
  store i32 %v1_16b84, i32* %r2.global-to-local, align 4
  %v3_16b84 = sub i32 3, %v0_16b84
  %v4_16b84 = and i32 %v3_16b84, %v0_16b84
  %v5_16b84 = icmp slt i32 %v4_16b84, 0
  %v6_16b84 = icmp slt i32 %v1_16b84, 0
  %v2_16b88 = xor i1 %v6_16b84, %v5_16b84
  br i1 %v2_16b88, label %dec_label_pc_16b8c.loopexit, label %dec_label_pc_16b74

dec_label_pc_16b8c.loopexit:                      ; preds = %dec_label_pc_16b74
  %v7_16b84 = icmp eq i32 %v0_16b84, 4
  store i1 %v5_16b84, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_16b84, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_16b84, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16b8c

dec_label_pc_16b8c:                               ; preds = %dec_label_pc_16b8c.loopexit, %dec_label_pc_16b68
  %v0_169dc61 = phi i32 [ %v1_16b84, %dec_label_pc_16b8c.loopexit ], [ %v1_16b6c, %dec_label_pc_16b68 ]
  %v0_16b8c = load i32, i32* %r1.global-to-local, align 4
  %v1_16b8c = add i32 %v0_16b8c, -1
  store i32 %v1_16b8c, i32* @r1, align 4
  br label %bb140

dec_label_pc_16b94:                               ; preds = %dec_label_pc_16940
  %v1_16b94 = load i32, i32* @r2, align 4
  %v2_16b94 = add i32 %v1_16b94, %v0_16940
  store i32 %v2_16b94, i32* %r1.global-to-local, align 4
  %v2_16b98 = add i32 %v1_16b94, %v1_16940
  store i32 %v2_16b98, i32* %r0.global-to-local, align 4
  %v2_16b9c = add i32 %v1_16b94, -4
  store i32 %v2_16b9c, i32* %r2.global-to-local, align 4
  %v4_16b9c = sub i32 3, %v1_16b94
  %v5_16b9c = and i32 %v4_16b9c, %v1_16b94
  %v6_16b9c = icmp slt i32 %v5_16b9c, 0
  store i1 %v6_16b9c, i1* %cpsr_v.global-to-local, align 1
  %v7_16b9c = icmp slt i32 %v2_16b9c, 0
  store i1 %v7_16b9c, i1* %cpsr_n.global-to-local, align 1
  %v8_16b9c = icmp eq i32 %v1_16b94, 4
  store i1 %v8_16b9c, i1* %cpsr_z.global-to-local, align 1
  %v5_16ba0 = icmp slt i32 %v1_16b94, 4
  br i1 %v5_16ba0, label %bb150, label %dec_label_pc_16ba4

dec_label_pc_16ba4:                               ; preds = %dec_label_pc_16b94
  %v1_16ba4 = urem i32 %v2_16b98, 4
  store i32 %v1_16ba4, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_16ba4 = icmp eq i32 %v1_16ba4, 0
  store i1 %v2_16ba4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16ba4, label %dec_label_pc_16bac, label %dec_label_pc_16c4c

dec_label_pc_16bac:                               ; preds = %dec_label_pc_16ba4
  %v1_16bac = urem i32 %v2_16b94, 4
  store i32 %v1_16bac, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_16bac = icmp eq i32 %v1_16bac, 0
  store i1 %v2_16bac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16bac, label %dec_label_pc_16bb4, label %dec_label_pc_16c78

dec_label_pc_16bb4:                               ; preds = %dec_label_pc_16bac, %dec_label_pc_16c70
  %v0_16bcc37 = phi i32 [ %v2_16b98, %dec_label_pc_16bac ], [ %v0_16cc020, %dec_label_pc_16c70 ]
  %v0_16bc836 = phi i32 [ %v2_16b94, %dec_label_pc_16bac ], [ %v0_16c70, %dec_label_pc_16c70 ]
  %v0_16bb4 = phi i32 [ %v2_16b9c, %dec_label_pc_16bac ], [ %v2_16c68, %dec_label_pc_16c70 ]
  %v2_16bb4 = add i32 %v0_16bb4, -8
  store i32 %v2_16bb4, i32* %r2.global-to-local, align 4
  %v4_16bb4 = sub i32 7, %v0_16bb4
  %v5_16bb4 = and i32 %v4_16bb4, %v0_16bb4
  %v6_16bb4 = icmp slt i32 %v5_16bb4, 0
  store i1 %v6_16bb4, i1* %cpsr_v.global-to-local, align 1
  %v7_16bb4 = icmp slt i32 %v2_16bb4, 0
  store i1 %v7_16bb4, i1* %cpsr_n.global-to-local, align 1
  %v8_16bb4 = icmp eq i32 %v0_16bb4, 8
  store i1 %v8_16bb4, i1* %cpsr_z.global-to-local, align 1
  %v5_16bb8 = icmp slt i32 %v0_16bb4, 8
  br i1 %v5_16bb8, label %dec_label_pc_16c04, label %dec_label_pc_16bbc

dec_label_pc_16bbc:                               ; preds = %dec_label_pc_16bb4
  %v3_16bbc = load i32, i32* @r4, align 4
  %v5_16bbc = inttoptr i32 %v3_16bbc to i8*
  store i8* %v5_16bbc, i8** %stack_var_-8, align 4
  %v8_16bbc = load i32, i32* @lr, align 4
  %v2_16bc0 = add i32 %v0_16bb4, -28
  store i32 %v2_16bc0, i32* %r2.global-to-local, align 4
  %v4_16bc0 = sub i32 27, %v0_16bb4
  %v5_16bc0 = and i32 %v4_16bc0, %v2_16bb4
  %v6_16bc0 = icmp slt i32 %v5_16bc0, 0
  store i1 %v6_16bc0, i1* %cpsr_v.global-to-local, align 1
  %v7_16bc0 = icmp slt i32 %v2_16bc0, 0
  store i1 %v7_16bc0, i1* %cpsr_n.global-to-local, align 1
  %v8_16bc0 = icmp eq i32 %v2_16bb4, 20
  store i1 %v8_16bc0, i1* %cpsr_z.global-to-local, align 1
  %v5_16bc4 = icmp slt i32 %v2_16bb4, 20
  br i1 %v5_16bc4, label %dec_label_pc_16be0, label %dec_label_pc_16bc8

dec_label_pc_16bc8:                               ; preds = %dec_label_pc_16bbc, %dec_label_pc_16bc8.dec_label_pc_16bc8_crit_edge
  %v0_16bcc = phi i32 [ %v1_16bd4, %dec_label_pc_16bc8.dec_label_pc_16bc8_crit_edge ], [ %v0_16bcc37, %dec_label_pc_16bbc ]
  %v0_16bc8 = phi i32 [ %v0_16bc8.pre, %dec_label_pc_16bc8.dec_label_pc_16bc8_crit_edge ], [ %v0_16bc836, %dec_label_pc_16bbc ]
  %v1_16bc8 = add i32 %v0_16bc8, -4
  %v2_16bc8 = inttoptr i32 %v1_16bc8 to i32*
  %v3_16bc8 = load i32, i32* %v2_16bc8, align 4
  %v4_16bc8 = add i32 %v0_16bc8, -8
  %v5_16bc8 = inttoptr i32 %v4_16bc8 to i32*
  %v6_16bc8 = load i32, i32* %v5_16bc8, align 4
  store i32 %v6_16bc8, i32* %r4.global-to-local, align 4
  %v7_16bc8 = add i32 %v0_16bc8, -12
  %v8_16bc8 = inttoptr i32 %v7_16bc8 to i32*
  %v9_16bc8 = load i32, i32* %v8_16bc8, align 4
  store i32 %v9_16bc8, i32* %ip.global-to-local, align 4
  %v10_16bc8 = add i32 %v0_16bc8, -16
  %v11_16bc8 = inttoptr i32 %v10_16bc8 to i32*
  %v12_16bc8 = load i32, i32* %v11_16bc8, align 4
  store i32 %v12_16bc8, i32* %lr.global-to-local, align 4
  store i32 %v10_16bc8, i32* %r1.global-to-local, align 4
  %v1_16bcc = add i32 %v0_16bcc, -16
  %v2_16bcc = inttoptr i32 %v1_16bcc to i32*
  store i32 %v3_16bc8, i32* %v2_16bcc, align 4
  %v4_16bcc = add i32 %v0_16bcc, -12
  %v5_16bcc = inttoptr i32 %v4_16bcc to i32*
  %v6_16bcc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_16bcc, i32* %v5_16bcc, align 4
  %v7_16bcc = add i32 %v0_16bcc, -8
  %v8_16bcc = inttoptr i32 %v7_16bcc to i32*
  %v9_16bcc = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_16bcc, i32* %v8_16bcc, align 4
  %v10_16bcc = add i32 %v0_16bcc, -4
  %v11_16bcc = inttoptr i32 %v10_16bcc to i32*
  %v12_16bcc = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_16bcc, i32* %v11_16bcc, align 4
  store i32 %v1_16bcc, i32* %r0.global-to-local, align 4
  %v0_16bd0 = load i32, i32* %r1.global-to-local, align 4
  %v1_16bd0 = add i32 %v0_16bd0, -4
  %v2_16bd0 = inttoptr i32 %v1_16bd0 to i32*
  %v3_16bd0 = load i32, i32* %v2_16bd0, align 4
  store i32 %v3_16bd0, i32* @r3, align 4
  %v4_16bd0 = add i32 %v0_16bd0, -8
  %v5_16bd0 = inttoptr i32 %v4_16bd0 to i32*
  %v6_16bd0 = load i32, i32* %v5_16bd0, align 4
  store i32 %v6_16bd0, i32* %r4.global-to-local, align 4
  %v7_16bd0 = add i32 %v0_16bd0, -12
  %v8_16bd0 = inttoptr i32 %v7_16bd0 to i32*
  %v9_16bd0 = load i32, i32* %v8_16bd0, align 4
  store i32 %v9_16bd0, i32* @ip, align 4
  %v10_16bd0 = add i32 %v0_16bd0, -16
  %v11_16bd0 = inttoptr i32 %v10_16bd0 to i32*
  %v12_16bd0 = load i32, i32* %v11_16bd0, align 4
  store i32 %v12_16bd0, i32* %lr.global-to-local, align 4
  store i32 %v10_16bd0, i32* %r1.global-to-local, align 4
  %v1_16bd4 = add i32 %v0_16bcc, -32
  %v2_16bd4 = inttoptr i32 %v1_16bd4 to i32*
  store i32 %v3_16bd0, i32* %v2_16bd4, align 4
  %v4_16bd4 = add i32 %v0_16bcc, -28
  %v5_16bd4 = inttoptr i32 %v4_16bd4 to i32*
  %v6_16bd4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_16bd4, i32* %v5_16bd4, align 4
  %v7_16bd4 = add i32 %v0_16bcc, -24
  %v8_16bd4 = inttoptr i32 %v7_16bd4 to i32*
  %v9_16bd4 = load i32, i32* @ip, align 4
  store i32 %v9_16bd4, i32* %v8_16bd4, align 4
  %v10_16bd4 = add i32 %v0_16bcc, -20
  %v11_16bd4 = inttoptr i32 %v10_16bd4 to i32*
  %v12_16bd4 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_16bd4, i32* %v11_16bd4, align 4
  store i32 %v1_16bd4, i32* %r0.global-to-local, align 4
  %v0_16bd8 = load i32, i32* %r2.global-to-local, align 4
  %v2_16bd8 = add i32 %v0_16bd8, -32
  store i32 %v2_16bd8, i32* %r2.global-to-local, align 4
  %v6_16bdc = icmp slt i32 %v0_16bd8, 32
  br i1 %v6_16bdc, label %dec_label_pc_16be0.loopexit, label %dec_label_pc_16bc8.dec_label_pc_16bc8_crit_edge

dec_label_pc_16bc8.dec_label_pc_16bc8_crit_edge:  ; preds = %dec_label_pc_16bc8
  %v0_16bc8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16bc8

dec_label_pc_16be0.loopexit:                      ; preds = %dec_label_pc_16bc8
  %v4_16bd8 = sub i32 31, %v0_16bd8
  %v5_16bd8 = and i32 %v4_16bd8, %v0_16bd8
  %v6_16bd8 = icmp slt i32 %v5_16bd8, 0
  %v7_16bd8 = icmp slt i32 %v2_16bd8, 0
  store i1 %v6_16bd8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_16bd8, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16be0

dec_label_pc_16be0:                               ; preds = %dec_label_pc_16be0.loopexit, %dec_label_pc_16bbc
  %v6_16be8 = phi i32 [ %v1_16bd4, %dec_label_pc_16be0.loopexit ], [ %v0_16bcc37, %dec_label_pc_16bbc ]
  %v0_16bf0.pr = phi i32 [ %v2_16bd8, %dec_label_pc_16be0.loopexit ], [ %v2_16bc0, %dec_label_pc_16bbc ]
  %v4_16be0 = add i32 %v0_16bf0.pr, 16
  %v6_16be0 = sub i32 0, %v0_16bf0.pr
  %v7_16be0 = and i32 %v4_16be0, %v6_16be0
  %v8_16be0 = icmp slt i32 %v7_16be0, 0
  store i1 %v8_16be0, i1* %cpsr_v.global-to-local, align 1
  %v9_16be0 = icmp slt i32 %v4_16be0, 0
  store i1 %v9_16be0, i1* %cpsr_n.global-to-local, align 1
  %v10_16be0 = icmp eq i32 %v4_16be0, 0
  store i1 %v10_16be0, i1* %cpsr_z.global-to-local, align 1
  %v5_16be4 = icmp slt i32 %v0_16bf0.pr, -16
  br i1 %v5_16be4, label %.thread2, label %bb147

bb147:                                            ; preds = %dec_label_pc_16be0
  %v6_16be4 = load i32, i32* %r1.global-to-local, align 4
  %v7_16be4 = add i32 %v6_16be4, -4
  %v8_16be4 = inttoptr i32 %v7_16be4 to i32*
  %v9_16be4 = load i32, i32* %v8_16be4, align 4
  store i32 %v9_16be4, i32* @r3, align 4
  %v10_16be4 = add i32 %v6_16be4, -8
  %v11_16be4 = inttoptr i32 %v10_16be4 to i32*
  %v12_16be4 = load i32, i32* %v11_16be4, align 4
  store i32 %v12_16be4, i32* %r4.global-to-local, align 4
  %v13_16be4 = add i32 %v6_16be4, -12
  %v14_16be4 = inttoptr i32 %v13_16be4 to i32*
  %v15_16be4 = load i32, i32* %v14_16be4, align 4
  store i32 %v15_16be4, i32* @ip, align 4
  %v16_16be4 = add i32 %v6_16be4, -16
  %v17_16be4 = inttoptr i32 %v16_16be4 to i32*
  %v18_16be4 = load i32, i32* %v17_16be4, align 4
  store i32 %v18_16be4, i32* %lr.global-to-local, align 4
  store i32 %v16_16be4, i32* %r1.global-to-local, align 4
  %v7_16be8 = add i32 %v6_16be8, -16
  %v8_16be8 = inttoptr i32 %v7_16be8 to i32*
  store i32 %v9_16be4, i32* %v8_16be8, align 4
  %v10_16be8 = add i32 %v6_16be8, -12
  %v11_16be8 = inttoptr i32 %v10_16be8 to i32*
  %v12_16be8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_16be8, i32* %v11_16be8, align 4
  %v13_16be8 = add i32 %v6_16be8, -8
  %v14_16be8 = inttoptr i32 %v13_16be8 to i32*
  %v15_16be8 = load i32, i32* @ip, align 4
  store i32 %v15_16be8, i32* %v14_16be8, align 4
  %v16_16be8 = add i32 %v6_16be8, -4
  %v17_16be8 = inttoptr i32 %v16_16be8 to i32*
  %v18_16be8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_16be8, i32* %v17_16be8, align 4
  store i32 %v7_16be8, i32* %r0.global-to-local, align 4
  %v6_16bec = load i32, i32* %r2.global-to-local, align 4
  %v7_16bec = add i32 %v6_16bec, -16
  store i32 %v7_16bec, i32* %r2.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_16be0, %bb147
  %v6_16bf8 = phi i32 [ %v7_16be8, %bb147 ], [ %v6_16be8, %dec_label_pc_16be0 ]
  %v0_16bf0 = phi i32 [ %v7_16bec, %bb147 ], [ %v0_16bf0.pr, %dec_label_pc_16be0 ]
  %v4_16bf0 = add i32 %v0_16bf0, 20
  store i32 %v4_16bf0, i32* %r2.global-to-local, align 4
  %v6_16bf0 = sub i32 0, %v0_16bf0
  %v7_16bf0 = and i32 %v4_16bf0, %v6_16bf0
  %v8_16bf0 = icmp slt i32 %v7_16bf0, 0
  store i1 %v8_16bf0, i1* %cpsr_v.global-to-local, align 1
  %v9_16bf0 = icmp slt i32 %v4_16bf0, 0
  store i1 %v9_16bf0, i1* %cpsr_n.global-to-local, align 1
  %v10_16bf0 = icmp eq i32 %v4_16bf0, 0
  store i1 %v10_16bf0, i1* %cpsr_z.global-to-local, align 1
  %v5_16bf4 = icmp slt i32 %v0_16bf0, -20
  br i1 %v5_16bf4, label %.thread4, label %bb148

bb148:                                            ; preds = %.thread2
  %v6_16bf4 = load i32, i32* %r1.global-to-local, align 4
  %v7_16bf4 = add i32 %v6_16bf4, -4
  %v8_16bf4 = inttoptr i32 %v7_16bf4 to i32*
  %v9_16bf4 = load i32, i32* %v8_16bf4, align 4
  store i32 %v9_16bf4, i32* @r3, align 4
  %v10_16bf4 = add i32 %v6_16bf4, -8
  %v11_16bf4 = inttoptr i32 %v10_16bf4 to i32*
  %v12_16bf4 = load i32, i32* %v11_16bf4, align 4
  store i32 %v12_16bf4, i32* @ip, align 4
  %v13_16bf4 = add i32 %v6_16bf4, -12
  %v14_16bf4 = inttoptr i32 %v13_16bf4 to i32*
  %v15_16bf4 = load i32, i32* %v14_16bf4, align 4
  store i32 %v15_16bf4, i32* %lr.global-to-local, align 4
  store i32 %v13_16bf4, i32* %r1.global-to-local, align 4
  %v7_16bf8 = add i32 %v6_16bf8, -12
  %v8_16bf8 = inttoptr i32 %v7_16bf8 to i32*
  store i32 %v9_16bf4, i32* %v8_16bf8, align 4
  %v10_16bf8 = add i32 %v6_16bf8, -8
  %v11_16bf8 = inttoptr i32 %v10_16bf8 to i32*
  %v12_16bf8 = load i32, i32* @ip, align 4
  store i32 %v12_16bf8, i32* %v11_16bf8, align 4
  %v13_16bf8 = add i32 %v6_16bf8, -4
  %v14_16bf8 = inttoptr i32 %v13_16bf8 to i32*
  %v15_16bf8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_16bf8, i32* %v14_16bf8, align 4
  store i32 %v7_16bf8, i32* %r0.global-to-local, align 4
  %v6_16bfc = load i32, i32* %r2.global-to-local, align 4
  %v7_16bfc = add i32 %v6_16bfc, -12
  store i32 %v7_16bfc, i32* %r2.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %.thread2, %bb148
  %v6_16c1c45 = phi i32 [ %v6_16bf8, %.thread2 ], [ %v7_16bf8, %bb148 ]
  %v0_16c0443 = phi i32 [ %v4_16bf0, %.thread2 ], [ %v7_16bfc, %bb148 ]
  %v2_16c00 = load i8*, i8** %stack_var_-8, align 4
  %v3_16c00 = ptrtoint i8* %v2_16c00 to i32
  store i32 %v3_16c00, i32* @r4, align 4
  store i32 %v8_16bbc, i32* @lr, align 4
  br label %dec_label_pc_16c04

dec_label_pc_16c04:                               ; preds = %dec_label_pc_16bb4, %.thread4
  %v7_16c14 = phi i32 [ %v0_16bcc37, %dec_label_pc_16bb4 ], [ %v6_16c1c45, %.thread4 ]
  %v0_16c04 = phi i32 [ %v2_16bb4, %dec_label_pc_16bb4 ], [ %v0_16c0443, %.thread4 ]
  %v2_16c04 = add i32 %v0_16c04, 8
  store i32 %v2_16c04, i32* %r2.global-to-local, align 4
  %v4_16c04 = sub i32 0, %v0_16c04
  %v5_16c04 = and i32 %v2_16c04, %v4_16c04
  %v6_16c04 = icmp slt i32 %v5_16c04, 0
  store i1 %v6_16c04, i1* %cpsr_v.global-to-local, align 1
  %v7_16c04 = icmp slt i32 %v2_16c04, 0
  store i1 %v7_16c04, i1* %cpsr_n.global-to-local, align 1
  %v8_16c04 = icmp eq i32 %v2_16c04, 0
  store i1 %v8_16c04, i1* %cpsr_z.global-to-local, align 1
  %v5_16c08 = icmp slt i32 %v0_16c04, -8
  br i1 %v5_16c08, label %bb150, label %dec_label_pc_16c0c

dec_label_pc_16c0c:                               ; preds = %dec_label_pc_16c04
  %v6_16c0c = add i32 %v0_16c04, 4
  store i32 %v6_16c0c, i32* %r2.global-to-local, align 4
  %v8_16c0c = sub i32 -5, %v0_16c04
  %v9_16c0c = and i32 %v8_16c0c, %v2_16c04
  %v10_16c0c = icmp slt i32 %v9_16c0c, 0
  store i1 %v10_16c0c, i1* %cpsr_v.global-to-local, align 1
  %v11_16c0c = icmp slt i32 %v6_16c0c, 0
  store i1 %v11_16c0c, i1* %cpsr_n.global-to-local, align 1
  %v12_16c0c = icmp eq i32 %v2_16c04, 4
  store i1 %v12_16c0c, i1* %cpsr_z.global-to-local, align 1
  %v5_16c10 = icmp slt i32 %v2_16c04, 4
  %v6_16c10 = load i32, i32* %r1.global-to-local, align 4
  %v7_16c10 = add i32 %v6_16c10, -4
  %v8_16c10 = inttoptr i32 %v7_16c10 to i32*
  %v9_16c10 = load i32, i32* %v8_16c10, align 4
  store i32 %v9_16c10, i32* @r3, align 4
  br i1 %v5_16c10, label %.thread8, label %bb149

.thread8:                                         ; preds = %dec_label_pc_16c0c
  store i32 %v7_16c10, i32* %r1.global-to-local, align 4
  %v8_16c14 = add i32 %v7_16c14, -4
  %v9_16c14 = inttoptr i32 %v8_16c14 to i32*
  store i32 %v9_16c10, i32* %v9_16c14, align 4
  %v10_16c14 = load i32, i32* %r0.global-to-local, align 4
  %v11_16c14 = add i32 %v10_16c14, -4
  store i32 %v11_16c14, i32* %r0.global-to-local, align 4
  %v0_16c24.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb150

bb149:                                            ; preds = %dec_label_pc_16c0c
  %v10_16c18 = add i32 %v6_16c10, -8
  %v11_16c18 = inttoptr i32 %v10_16c18 to i32*
  %v12_16c18 = load i32, i32* %v11_16c18, align 4
  store i32 %v12_16c18, i32* @ip, align 4
  store i32 %v10_16c18, i32* %r1.global-to-local, align 4
  %v7_16c1c = add i32 %v7_16c14, -8
  %v8_16c1c = inttoptr i32 %v7_16c1c to i32*
  store i32 %v9_16c10, i32* %v8_16c1c, align 4
  %v10_16c1c = add i32 %v7_16c14, -4
  %v11_16c1c = inttoptr i32 %v10_16c1c to i32*
  %v12_16c1c = load i32, i32* @ip, align 4
  store i32 %v12_16c1c, i32* %v11_16c1c, align 4
  store i32 %v7_16c1c, i32* %r0.global-to-local, align 4
  %v6_16c20 = load i32, i32* %r2.global-to-local, align 4
  %v7_16c20 = add i32 %v6_16c20, -4
  store i32 %v7_16c20, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %.thread8, %dec_label_pc_16c04, %dec_label_pc_16b94, %.thread14, %dec_label_pc_16dc8, %dec_label_pc_16d5c, %dec_label_pc_16cf0, %bb149
  %v2_16c28 = phi i32 [ %v11_16c14, %.thread8 ], [ %v7_16c14, %dec_label_pc_16c04 ], [ %v2_16b98, %dec_label_pc_16b94 ], [ %v0_16cc020, %.thread14 ], [ %v2_16c3453, %dec_label_pc_16dc8 ], [ %v2_16c3452, %dec_label_pc_16d5c ], [ %v2_16c3451, %dec_label_pc_16cf0 ], [ %v7_16c1c, %bb149 ]
  %v0_16c24 = phi i32 [ %v0_16c24.pre, %.thread8 ], [ %v2_16c04, %dec_label_pc_16c04 ], [ %v2_16b9c, %dec_label_pc_16b94 ], [ %v2_16c68, %.thread14 ], [ %v0_16c2449, %dec_label_pc_16dc8 ], [ %v0_16c2448, %dec_label_pc_16d5c ], [ %v0_16c2447, %dec_label_pc_16cf0 ], [ %v7_16c20, %bb149 ]
  %v1_16c24 = add i32 %v0_16c24, 4
  store i32 %v1_16c24, i32* %r2.global-to-local, align 4
  %v3_16c24 = sub i32 0, %v0_16c24
  %v4_16c24 = and i32 %v1_16c24, %v3_16c24
  %v5_16c24 = icmp slt i32 %v4_16c24, 0
  store i1 %v5_16c24, i1* %cpsr_v.global-to-local, align 1
  %v6_16c24 = icmp slt i32 %v1_16c24, 0
  store i1 %v6_16c24, i1* %cpsr_n.global-to-local, align 1
  %v7_16c24 = icmp eq i32 %v1_16c24, 0
  store i1 %v7_16c24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16c24, label %.thread130, label %bb151

bb151:                                            ; preds = %bb150
  %v1_16c2c = add i32 %v0_16c24, 2
  %v3_16c2c = sub i32 -3, %v0_16c24
  %v4_16c2c = and i32 %v3_16c2c, %v1_16c24
  %v5_16c2c = icmp slt i32 %v4_16c2c, 0
  store i1 %v5_16c2c, i1* %cpsr_v.global-to-local, align 1
  %v6_16c2c = icmp slt i32 %v1_16c2c, 0
  store i1 %v6_16c2c, i1* %cpsr_n.global-to-local, align 1
  %v7_16c2c = icmp eq i32 %v1_16c24, 2
  store i1 %v7_16c2c, i1* %cpsr_z.global-to-local, align 1
  %v0_16c30 = load i32, i32* %r1.global-to-local, align 4
  %v1_16c30 = add i32 %v0_16c30, -1
  %v2_16c30 = inttoptr i32 %v1_16c30 to i8*
  %v3_16c30 = load i8, i8* %v2_16c30, align 1
  %v4_16c30 = zext i8 %v3_16c30 to i32
  store i32 %v4_16c30, i32* @r3, align 4
  store i32 %v1_16c30, i32* %r1.global-to-local, align 4
  %v3_16c34 = add i32 %v2_16c28, -1
  %v4_16c34 = inttoptr i32 %v3_16c34 to i8*
  store i8 %v3_16c30, i8* %v4_16c34, align 1
  %v5_16c34 = load i32, i32* %r0.global-to-local, align 4
  %v6_16c34 = add i32 %v5_16c34, -1
  store i32 %v6_16c34, i32* %r0.global-to-local, align 4
  %v0_16c38 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_16c38 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_16c38 = xor i1 %v0_16c38, %v1_16c38
  br i1 %v2_16c38, label %.thread129, label %bb152

bb152:                                            ; preds = %bb151
  %v3_16c38 = load i32, i32* %r1.global-to-local, align 4
  %v4_16c38 = add i32 %v3_16c38, -1
  %v5_16c38 = inttoptr i32 %v4_16c38 to i8*
  %v6_16c38 = load i8, i8* %v5_16c38, align 1
  %v7_16c38 = zext i8 %v6_16c38 to i32
  store i32 %v7_16c38, i32* @r3, align 4
  store i32 %v4_16c38, i32* %r1.global-to-local, align 4
  %v6_16c3c = add i32 %v5_16c34, -2
  %v7_16c3c = inttoptr i32 %v6_16c3c to i8*
  store i8 %v6_16c38, i8* %v7_16c3c, align 1
  %v8_16c3c = load i32, i32* %r0.global-to-local, align 4
  %v9_16c3c = add i32 %v8_16c3c, -1
  store i32 %v9_16c3c, i32* %r0.global-to-local, align 4
  %v1_16c40.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_16c40.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread129

.thread129:                                       ; preds = %bb151, %bb152
  %v7_16c44 = phi i32 [ %v9_16c3c, %bb152 ], [ %v6_16c34, %bb151 ]
  %v2_16c44 = phi i1 [ %v2_16c40.pre, %bb152 ], [ %v1_16c38, %bb151 ]
  %v1_16c44 = phi i1 [ %v1_16c40.pre, %bb152 ], [ %v0_16c38, %bb151 ]
  %v0_16c40 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_16c40 = xor i1 %v2_16c44, %v1_16c44
  %v4_16c40 = or i1 %v0_16c40, %v3_16c40
  br i1 %v4_16c40, label %.thread130, label %bb153

bb153:                                            ; preds = %.thread129
  %v5_16c40 = load i32, i32* %r1.global-to-local, align 4
  %v6_16c40 = add i32 %v5_16c40, -1
  %v7_16c40 = inttoptr i32 %v6_16c40 to i8*
  %v8_16c40 = load i8, i8* %v7_16c40, align 1
  %v9_16c40 = zext i8 %v8_16c40 to i32
  store i32 %v9_16c40, i32* @r3, align 4
  store i32 %v6_16c40, i32* %r1.global-to-local, align 4
  %v8_16c44 = add i32 %v7_16c44, -1
  %v9_16c44 = inttoptr i32 %v8_16c44 to i8*
  store i8 %v8_16c40, i8* %v9_16c44, align 1
  %v10_16c44 = load i32, i32* %r0.global-to-local, align 4
  %v11_16c44 = add i32 %v10_16c44, -1
  store i32 %v11_16c44, i32* %r0.global-to-local, align 4
  br label %.thread130

dec_label_pc_16c4c:                               ; preds = %dec_label_pc_16ba4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_16c4c = icmp eq i32 %v1_16ba4, 1
  store i1 %v8_16c4c, i1* %cpsr_n.global-to-local, align 1
  %v9_16c4c = icmp eq i32 %v1_16ba4, 2
  store i1 %v9_16c4c, i1* %cpsr_z.global-to-local, align 1
  %v1_16c50 = add i32 %v2_16b94, -1
  %v2_16c50 = inttoptr i32 %v1_16c50 to i8*
  %v3_16c50 = load i8, i8* %v2_16c50, align 1
  %v4_16c50 = zext i8 %v3_16c50 to i32
  store i32 %v4_16c50, i32* @r3, align 4
  store i32 %v1_16c50, i32* %r1.global-to-local, align 4
  %v3_16c54 = add i32 %v2_16b98, -1
  %v4_16c54 = inttoptr i32 %v3_16c54 to i8*
  store i8 %v3_16c50, i8* %v4_16c54, align 1
  %v5_16c54 = load i32, i32* %r0.global-to-local, align 4
  %v6_16c54 = add i32 %v5_16c54, -1
  store i32 %v6_16c54, i32* %r0.global-to-local, align 4
  br i1 %v8_16c4c, label %.thread14, label %bb154

bb154:                                            ; preds = %dec_label_pc_16c4c
  %v6_16c58 = load i32, i32* %r1.global-to-local, align 4
  %v7_16c58 = add i32 %v6_16c58, -1
  %v8_16c58 = inttoptr i32 %v7_16c58 to i8*
  %v9_16c58 = load i8, i8* %v8_16c58, align 1
  %v10_16c58 = zext i8 %v9_16c58 to i32
  store i32 %v10_16c58, i32* @r3, align 4
  store i32 %v7_16c58, i32* %r1.global-to-local, align 4
  %v9_16c5c = add i32 %v5_16c54, -2
  %v10_16c5c = inttoptr i32 %v9_16c5c to i8*
  store i8 %v9_16c58, i8* %v10_16c5c, align 1
  %v11_16c5c = load i32, i32* %r0.global-to-local, align 4
  %v12_16c5c = add i32 %v11_16c5c, -1
  store i32 %v12_16c5c, i32* %r0.global-to-local, align 4
  br i1 %v9_16c4c, label %.thread14, label %bb155

bb155:                                            ; preds = %bb154
  %v8_16c60 = load i32, i32* %r1.global-to-local, align 4
  %v9_16c60 = add i32 %v8_16c60, -1
  %v10_16c60 = inttoptr i32 %v9_16c60 to i8*
  %v11_16c60 = load i8, i8* %v10_16c60, align 1
  %v12_16c60 = zext i8 %v11_16c60 to i32
  store i32 %v12_16c60, i32* @r3, align 4
  store i32 %v9_16c60, i32* %r1.global-to-local, align 4
  %v11_16c64 = add i32 %v11_16c5c, -2
  %v12_16c64 = inttoptr i32 %v11_16c64 to i8*
  store i8 %v11_16c60, i8* %v12_16c64, align 1
  %v13_16c64 = load i32, i32* %r0.global-to-local, align 4
  %v14_16c64 = add i32 %v13_16c64, -1
  store i32 %v14_16c64, i32* %r0.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %bb154, %dec_label_pc_16c4c, %bb155
  %v0_16cc020 = phi i32 [ %v12_16c5c, %bb154 ], [ %v6_16c54, %dec_label_pc_16c4c ], [ %v14_16c64, %bb155 ]
  %v0_16c68 = load i32, i32* %r2.global-to-local, align 4
  %v1_16c68 = load i32, i32* @ip, align 4
  %v2_16c68 = sub i32 %v0_16c68, %v1_16c68
  store i32 %v2_16c68, i32* %r2.global-to-local, align 4
  %v4_16c68 = xor i32 %v1_16c68, %v0_16c68
  %v5_16c68 = xor i32 %v2_16c68, %v0_16c68
  %v6_16c68 = and i32 %v5_16c68, %v4_16c68
  %v7_16c68 = icmp slt i32 %v6_16c68, 0
  store i1 %v7_16c68, i1* %cpsr_v.global-to-local, align 1
  %v8_16c68 = icmp slt i32 %v2_16c68, 0
  store i1 %v8_16c68, i1* %cpsr_n.global-to-local, align 1
  %v9_16c68 = icmp eq i32 %v0_16c68, %v1_16c68
  store i1 %v9_16c68, i1* %cpsr_z.global-to-local, align 1
  %v5_16c6c = icmp slt i32 %v0_16c68, %v1_16c68
  br i1 %v5_16c6c, label %bb150, label %dec_label_pc_16c70

dec_label_pc_16c70:                               ; preds = %.thread14
  %v0_16c70 = load i32, i32* %r1.global-to-local, align 4
  %v1_16c70 = urem i32 %v0_16c70, 4
  store i32 %v1_16c70, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_16c70 = icmp eq i32 %v1_16c70, 0
  store i1 %v2_16c70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16c70, label %dec_label_pc_16bb4, label %dec_label_pc_16c78

dec_label_pc_16c78:                               ; preds = %dec_label_pc_16bac, %dec_label_pc_16c70
  %v0_16cc019 = phi i32 [ %v2_16b98, %dec_label_pc_16bac ], [ %v0_16cc020, %dec_label_pc_16c70 ]
  %v0_16d6c = phi i32 [ %v2_16b9c, %dec_label_pc_16bac ], [ %v2_16c68, %dec_label_pc_16c70 ]
  %v0_16c78 = phi i32 [ %v2_16b94, %dec_label_pc_16bac ], [ %v0_16c70, %dec_label_pc_16c70 ]
  %v0_16c80 = phi i32 [ %v1_16bac, %dec_label_pc_16bac ], [ %v1_16c70, %dec_label_pc_16c70 ]
  %v1_16c78 = and i32 %v0_16c78, -4
  store i32 %v1_16c78, i32* %r1.global-to-local, align 4
  %v1_16c7c = inttoptr i32 %v1_16c78 to i32*
  %v2_16c7c = load i32, i32* %v1_16c7c, align 4
  store i32 %v2_16c7c, i32* @r3, align 4
  %v7_16c80 = icmp ult i32 %v0_16c80, 2
  %v2_16d64 = add i32 %v0_16d6c, -12
  %v4_16d64 = sub i32 11, %v0_16d6c
  %v5_16d64 = and i32 %v4_16d64, %v0_16d6c
  %v6_16d64 = icmp slt i32 %v5_16d64, 0
  store i1 %v6_16d64, i1* %cpsr_v.global-to-local, align 1
  %v7_16d64 = icmp slt i32 %v2_16d64, 0
  store i1 %v7_16d64, i1* %cpsr_n.global-to-local, align 1
  %v8_16d64 = icmp eq i32 %v0_16d6c, 12
  store i1 %v8_16d64, i1* %cpsr_z.global-to-local, align 1
  %v5_16d68 = icmp slt i32 %v0_16d6c, 12
  br i1 %v7_16c80, label %dec_label_pc_16d64, label %dec_label_pc_16c88

dec_label_pc_16c88:                               ; preds = %dec_label_pc_16c78
  %v8_16c80 = icmp eq i32 %v0_16c80, 2
  br i1 %v8_16c80, label %dec_label_pc_16cf8, label %dec_label_pc_16c8c

dec_label_pc_16c8c:                               ; preds = %dec_label_pc_16c88
  br i1 %v5_16d68, label %dec_label_pc_16cd8, label %dec_label_pc_16c94

dec_label_pc_16c94:                               ; preds = %dec_label_pc_16c8c
  store i32 %v2_16d64, i32* %r2.global-to-local, align 4
  %v3_16c98 = load i32, i32* @r4, align 4
  store i32 %v3_16c98, i32* %stack_var_-12, align 4
  %v6_16c98 = load i32, i32* @r5, align 4
  %v8_16c98 = inttoptr i32 %v6_16c98 to i8*
  store i8* %v8_16c98, i8** %stack_var_-8, align 4
  %v11_16c98 = load i32, i32* @lr, align 4
  br label %dec_label_pc_16c9c

dec_label_pc_16c9c:                               ; preds = %dec_label_pc_16c9c.dec_label_pc_16c9c_crit_edge, %dec_label_pc_16c94
  %v0_16cc0 = phi i32 [ %v1_16cc0, %dec_label_pc_16c9c.dec_label_pc_16c9c_crit_edge ], [ %v0_16cc019, %dec_label_pc_16c94 ]
  %v0_16ca0 = phi i32 [ %v0_16ca0.pre, %dec_label_pc_16c9c.dec_label_pc_16c9c_crit_edge ], [ %v1_16c78, %dec_label_pc_16c94 ]
  %v0_16c9c = phi i32 [ %v0_16c9c.pre, %dec_label_pc_16c9c.dec_label_pc_16c9c_crit_edge ], [ %v2_16c7c, %dec_label_pc_16c94 ]
  %v3_16c9c = mul i32 %v0_16c9c, 256
  store i32 %v3_16c9c, i32* %lr.global-to-local, align 4
  %v1_16ca0 = add i32 %v0_16ca0, -4
  %v2_16ca0 = inttoptr i32 %v1_16ca0 to i32*
  %v3_16ca0 = load i32, i32* %v2_16ca0, align 4
  store i32 %v3_16ca0, i32* @r3, align 4
  %v4_16ca0 = add i32 %v0_16ca0, -8
  %v5_16ca0 = inttoptr i32 %v4_16ca0 to i32*
  %v6_16ca0 = load i32, i32* %v5_16ca0, align 4
  store i32 %v6_16ca0, i32* %r4.global-to-local, align 4
  %v7_16ca0 = add i32 %v0_16ca0, -12
  %v8_16ca0 = inttoptr i32 %v7_16ca0 to i32*
  %v9_16ca0 = load i32, i32* %v8_16ca0, align 4
  store i32 %v9_16ca0, i32* %r5.global-to-local, align 4
  %v10_16ca0 = add i32 %v0_16ca0, -16
  %v11_16ca0 = inttoptr i32 %v10_16ca0 to i32*
  %v12_16ca0 = load i32, i32* %v11_16ca0, align 4
  store i32 %v10_16ca0, i32* %r1.global-to-local, align 4
  %v4_16ca4 = udiv i32 %v12_16ca0, 16777216
  %v5_16ca4 = or i32 %v4_16ca4, %v3_16c9c
  store i32 %v5_16ca4, i32* %lr.global-to-local, align 4
  %v3_16ca8 = mul i32 %v12_16ca0, 256
  %v4_16cac = udiv i32 %v9_16ca0, 16777216
  %v5_16cac = or i32 %v3_16ca8, %v4_16cac
  store i32 %v5_16cac, i32* @ip, align 4
  %v3_16cb0 = mul i32 %v9_16ca0, 256
  %v4_16cb4 = udiv i32 %v6_16ca0, 16777216
  %v5_16cb4 = or i32 %v3_16cb0, %v4_16cb4
  store i32 %v5_16cb4, i32* %r5.global-to-local, align 4
  %v3_16cb8 = mul i32 %v6_16ca0, 256
  %v4_16cbc = udiv i32 %v3_16ca0, 16777216
  %v5_16cbc = or i32 %v3_16cb8, %v4_16cbc
  store i32 %v5_16cbc, i32* %r4.global-to-local, align 4
  %v1_16cc0 = add i32 %v0_16cc0, -16
  %v2_16cc0 = inttoptr i32 %v1_16cc0 to i32*
  store i32 %v5_16cbc, i32* %v2_16cc0, align 4
  %v4_16cc0 = add i32 %v0_16cc0, -12
  %v5_16cc0 = inttoptr i32 %v4_16cc0 to i32*
  %v6_16cc0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_16cc0, i32* %v5_16cc0, align 4
  %v7_16cc0 = add i32 %v0_16cc0, -8
  %v8_16cc0 = inttoptr i32 %v7_16cc0 to i32*
  %v9_16cc0 = load i32, i32* @ip, align 4
  store i32 %v9_16cc0, i32* %v8_16cc0, align 4
  %v10_16cc0 = add i32 %v0_16cc0, -4
  %v11_16cc0 = inttoptr i32 %v10_16cc0 to i32*
  %v12_16cc0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_16cc0, i32* %v11_16cc0, align 4
  store i32 %v1_16cc0, i32* %r0.global-to-local, align 4
  %v0_16cc4 = load i32, i32* %r2.global-to-local, align 4
  %v2_16cc4 = add i32 %v0_16cc4, -16
  store i32 %v2_16cc4, i32* %r2.global-to-local, align 4
  %v6_16cc8 = icmp slt i32 %v0_16cc4, 16
  br i1 %v6_16cc8, label %dec_label_pc_16ccc, label %dec_label_pc_16c9c.dec_label_pc_16c9c_crit_edge

dec_label_pc_16c9c.dec_label_pc_16c9c_crit_edge:  ; preds = %dec_label_pc_16c9c
  %v0_16c9c.pre = load i32, i32* @r3, align 4
  %v0_16ca0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16c9c

dec_label_pc_16ccc:                               ; preds = %dec_label_pc_16c9c
  %v2_16ccc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_16ccc, i32* @r4, align 4
  %v5_16ccc = load i8*, i8** %stack_var_-8, align 4
  %v6_16ccc = ptrtoint i8* %v5_16ccc to i32
  store i32 %v6_16ccc, i32* @r5, align 4
  store i32 %v11_16c98, i32* @lr, align 4
  %v2_16cd0 = add i32 %v0_16cc4, -4
  store i32 %v2_16cd0, i32* %r2.global-to-local, align 4
  %v4_16cd0 = add i32 %v0_16cc4, 2147483632
  %v5_16cd0 = and i32 %v2_16cd0, %v4_16cd0
  %v6_16cd0 = icmp slt i32 %v5_16cd0, 0
  store i1 %v6_16cd0, i1* %cpsr_v.global-to-local, align 1
  %v7_16cd0 = icmp slt i32 %v2_16cd0, 0
  store i1 %v7_16cd0, i1* %cpsr_n.global-to-local, align 1
  %v8_16cd0 = icmp eq i32 %v2_16cd0, 0
  store i1 %v8_16cd0, i1* %cpsr_z.global-to-local, align 1
  %v5_16cd4 = icmp slt i32 %v2_16cc4, -12
  br i1 %v5_16cd4, label %dec_label_pc_16cf0, label %dec_label_pc_16cd8

dec_label_pc_16cd8:                               ; preds = %dec_label_pc_16ccc, %dec_label_pc_16c8c, %dec_label_pc_16cd8
  %v1_16ce4 = phi i32 [ %v5_16ce4, %dec_label_pc_16cd8 ], [ %v1_16cc0, %dec_label_pc_16ccc ], [ %v0_16cc019, %dec_label_pc_16c8c ]
  %v0_16cd8 = load i32, i32* @r3, align 4
  %v3_16cd8 = mul i32 %v0_16cd8, 256
  store i32 %v3_16cd8, i32* %ip.global-to-local, align 4
  %v0_16cdc = load i32, i32* %r1.global-to-local, align 4
  %v1_16cdc = add i32 %v0_16cdc, -4
  %v2_16cdc = inttoptr i32 %v1_16cdc to i32*
  %v3_16cdc = load i32, i32* %v2_16cdc, align 4
  store i32 %v3_16cdc, i32* @r3, align 4
  store i32 %v1_16cdc, i32* %r1.global-to-local, align 4
  %v4_16ce0 = udiv i32 %v3_16cdc, 16777216
  %v5_16ce0 = or i32 %v4_16ce0, %v3_16cd8
  store i32 %v5_16ce0, i32* @ip, align 4
  %v2_16ce4 = add i32 %v1_16ce4, -4
  %v3_16ce4 = inttoptr i32 %v2_16ce4 to i32*
  store i32 %v5_16ce0, i32* %v3_16ce4, align 4
  %v4_16ce4 = load i32, i32* %r0.global-to-local, align 4
  %v5_16ce4 = add i32 %v4_16ce4, -4
  store i32 %v5_16ce4, i32* %r0.global-to-local, align 4
  %v0_16ce8 = load i32, i32* %r2.global-to-local, align 4
  %v2_16ce8 = add i32 %v0_16ce8, -4
  store i32 %v2_16ce8, i32* %r2.global-to-local, align 4
  %v6_16cec = icmp slt i32 %v0_16ce8, 4
  br i1 %v6_16cec, label %dec_label_pc_16cf0.loopexit, label %dec_label_pc_16cd8

dec_label_pc_16cf0.loopexit:                      ; preds = %dec_label_pc_16cd8
  %v4_16ce8 = sub i32 3, %v0_16ce8
  %v5_16ce8 = and i32 %v4_16ce8, %v0_16ce8
  %v6_16ce8 = icmp slt i32 %v5_16ce8, 0
  %v7_16ce8 = icmp slt i32 %v2_16ce8, 0
  store i1 %v6_16ce8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_16ce8, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16cf0

dec_label_pc_16cf0:                               ; preds = %dec_label_pc_16cf0.loopexit, %dec_label_pc_16ccc
  %v2_16c3451 = phi i32 [ %v5_16ce4, %dec_label_pc_16cf0.loopexit ], [ %v1_16cc0, %dec_label_pc_16ccc ]
  %v0_16c2447 = phi i32 [ %v2_16ce8, %dec_label_pc_16cf0.loopexit ], [ %v2_16cd0, %dec_label_pc_16ccc ]
  %v0_16cf0 = load i32, i32* %r1.global-to-local, align 4
  %v1_16cf0 = add i32 %v0_16cf0, 3
  store i32 %v1_16cf0, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_16cf8:                               ; preds = %dec_label_pc_16c88
  br i1 %v5_16d68, label %dec_label_pc_16d44, label %dec_label_pc_16d00

dec_label_pc_16d00:                               ; preds = %dec_label_pc_16cf8
  store i32 %v2_16d64, i32* %r2.global-to-local, align 4
  %v3_16d04 = load i32, i32* @r4, align 4
  store i32 %v3_16d04, i32* %stack_var_-12, align 4
  %v6_16d04 = load i32, i32* @r5, align 4
  %v8_16d04 = inttoptr i32 %v6_16d04 to i8*
  store i8* %v8_16d04, i8** %stack_var_-8, align 4
  %v11_16d04 = load i32, i32* @lr, align 4
  br label %dec_label_pc_16d08

dec_label_pc_16d08:                               ; preds = %dec_label_pc_16d08.dec_label_pc_16d08_crit_edge, %dec_label_pc_16d00
  %v0_16d2c = phi i32 [ %v1_16d2c, %dec_label_pc_16d08.dec_label_pc_16d08_crit_edge ], [ %v0_16cc019, %dec_label_pc_16d00 ]
  %v0_16d0c = phi i32 [ %v0_16d0c.pre, %dec_label_pc_16d08.dec_label_pc_16d08_crit_edge ], [ %v1_16c78, %dec_label_pc_16d00 ]
  %v0_16d08 = phi i32 [ %v0_16d08.pre, %dec_label_pc_16d08.dec_label_pc_16d08_crit_edge ], [ %v2_16c7c, %dec_label_pc_16d00 ]
  %v3_16d08 = mul i32 %v0_16d08, 65536
  store i32 %v3_16d08, i32* %lr.global-to-local, align 4
  %v1_16d0c = add i32 %v0_16d0c, -4
  %v2_16d0c = inttoptr i32 %v1_16d0c to i32*
  %v3_16d0c = load i32, i32* %v2_16d0c, align 4
  store i32 %v3_16d0c, i32* @r3, align 4
  %v4_16d0c = add i32 %v0_16d0c, -8
  %v5_16d0c = inttoptr i32 %v4_16d0c to i32*
  %v6_16d0c = load i32, i32* %v5_16d0c, align 4
  store i32 %v6_16d0c, i32* %r4.global-to-local, align 4
  %v7_16d0c = add i32 %v0_16d0c, -12
  %v8_16d0c = inttoptr i32 %v7_16d0c to i32*
  %v9_16d0c = load i32, i32* %v8_16d0c, align 4
  store i32 %v9_16d0c, i32* %r5.global-to-local, align 4
  %v10_16d0c = add i32 %v0_16d0c, -16
  %v11_16d0c = inttoptr i32 %v10_16d0c to i32*
  %v12_16d0c = load i32, i32* %v11_16d0c, align 4
  store i32 %v10_16d0c, i32* %r1.global-to-local, align 4
  %v4_16d10 = udiv i32 %v12_16d0c, 65536
  %v5_16d10 = or i32 %v4_16d10, %v3_16d08
  store i32 %v5_16d10, i32* %lr.global-to-local, align 4
  %v3_16d14 = mul i32 %v12_16d0c, 65536
  %v4_16d18 = udiv i32 %v9_16d0c, 65536
  %v5_16d18 = or i32 %v3_16d14, %v4_16d18
  store i32 %v5_16d18, i32* @ip, align 4
  %v3_16d1c = mul i32 %v9_16d0c, 65536
  %v4_16d20 = udiv i32 %v6_16d0c, 65536
  %v5_16d20 = or i32 %v3_16d1c, %v4_16d20
  store i32 %v5_16d20, i32* %r5.global-to-local, align 4
  %v3_16d24 = mul i32 %v6_16d0c, 65536
  %v4_16d28 = udiv i32 %v3_16d0c, 65536
  %v5_16d28 = or i32 %v3_16d24, %v4_16d28
  store i32 %v5_16d28, i32* %r4.global-to-local, align 4
  %v1_16d2c = add i32 %v0_16d2c, -16
  %v2_16d2c = inttoptr i32 %v1_16d2c to i32*
  store i32 %v5_16d28, i32* %v2_16d2c, align 4
  %v4_16d2c = add i32 %v0_16d2c, -12
  %v5_16d2c = inttoptr i32 %v4_16d2c to i32*
  %v6_16d2c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_16d2c, i32* %v5_16d2c, align 4
  %v7_16d2c = add i32 %v0_16d2c, -8
  %v8_16d2c = inttoptr i32 %v7_16d2c to i32*
  %v9_16d2c = load i32, i32* @ip, align 4
  store i32 %v9_16d2c, i32* %v8_16d2c, align 4
  %v10_16d2c = add i32 %v0_16d2c, -4
  %v11_16d2c = inttoptr i32 %v10_16d2c to i32*
  %v12_16d2c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_16d2c, i32* %v11_16d2c, align 4
  store i32 %v1_16d2c, i32* %r0.global-to-local, align 4
  %v0_16d30 = load i32, i32* %r2.global-to-local, align 4
  %v2_16d30 = add i32 %v0_16d30, -16
  store i32 %v2_16d30, i32* %r2.global-to-local, align 4
  %v6_16d34 = icmp slt i32 %v0_16d30, 16
  br i1 %v6_16d34, label %dec_label_pc_16d38, label %dec_label_pc_16d08.dec_label_pc_16d08_crit_edge

dec_label_pc_16d08.dec_label_pc_16d08_crit_edge:  ; preds = %dec_label_pc_16d08
  %v0_16d08.pre = load i32, i32* @r3, align 4
  %v0_16d0c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16d08

dec_label_pc_16d38:                               ; preds = %dec_label_pc_16d08
  %v2_16d38 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_16d38, i32* @r4, align 4
  %v5_16d38 = load i8*, i8** %stack_var_-8, align 4
  %v6_16d38 = ptrtoint i8* %v5_16d38 to i32
  store i32 %v6_16d38, i32* @r5, align 4
  store i32 %v11_16d04, i32* @lr, align 4
  %v2_16d3c = add i32 %v0_16d30, -4
  store i32 %v2_16d3c, i32* %r2.global-to-local, align 4
  %v4_16d3c = add i32 %v0_16d30, 2147483632
  %v5_16d3c = and i32 %v2_16d3c, %v4_16d3c
  %v6_16d3c = icmp slt i32 %v5_16d3c, 0
  store i1 %v6_16d3c, i1* %cpsr_v.global-to-local, align 1
  %v7_16d3c = icmp slt i32 %v2_16d3c, 0
  store i1 %v7_16d3c, i1* %cpsr_n.global-to-local, align 1
  %v8_16d3c = icmp eq i32 %v2_16d3c, 0
  store i1 %v8_16d3c, i1* %cpsr_z.global-to-local, align 1
  %v5_16d40 = icmp slt i32 %v2_16d30, -12
  br i1 %v5_16d40, label %dec_label_pc_16d5c, label %dec_label_pc_16d44

dec_label_pc_16d44:                               ; preds = %dec_label_pc_16d38, %dec_label_pc_16cf8, %dec_label_pc_16d44
  %v1_16d50 = phi i32 [ %v5_16d50, %dec_label_pc_16d44 ], [ %v1_16d2c, %dec_label_pc_16d38 ], [ %v0_16cc019, %dec_label_pc_16cf8 ]
  %v0_16d44 = load i32, i32* @r3, align 4
  %v3_16d44 = mul i32 %v0_16d44, 65536
  store i32 %v3_16d44, i32* %ip.global-to-local, align 4
  %v0_16d48 = load i32, i32* %r1.global-to-local, align 4
  %v1_16d48 = add i32 %v0_16d48, -4
  %v2_16d48 = inttoptr i32 %v1_16d48 to i32*
  %v3_16d48 = load i32, i32* %v2_16d48, align 4
  store i32 %v3_16d48, i32* @r3, align 4
  store i32 %v1_16d48, i32* %r1.global-to-local, align 4
  %v4_16d4c = udiv i32 %v3_16d48, 65536
  %v5_16d4c = or i32 %v4_16d4c, %v3_16d44
  store i32 %v5_16d4c, i32* @ip, align 4
  %v2_16d50 = add i32 %v1_16d50, -4
  %v3_16d50 = inttoptr i32 %v2_16d50 to i32*
  store i32 %v5_16d4c, i32* %v3_16d50, align 4
  %v4_16d50 = load i32, i32* %r0.global-to-local, align 4
  %v5_16d50 = add i32 %v4_16d50, -4
  store i32 %v5_16d50, i32* %r0.global-to-local, align 4
  %v0_16d54 = load i32, i32* %r2.global-to-local, align 4
  %v2_16d54 = add i32 %v0_16d54, -4
  store i32 %v2_16d54, i32* %r2.global-to-local, align 4
  %v6_16d58 = icmp slt i32 %v0_16d54, 4
  br i1 %v6_16d58, label %dec_label_pc_16d5c.loopexit, label %dec_label_pc_16d44

dec_label_pc_16d5c.loopexit:                      ; preds = %dec_label_pc_16d44
  %v4_16d54 = sub i32 3, %v0_16d54
  %v5_16d54 = and i32 %v4_16d54, %v0_16d54
  %v6_16d54 = icmp slt i32 %v5_16d54, 0
  %v7_16d54 = icmp slt i32 %v2_16d54, 0
  store i1 %v6_16d54, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_16d54, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16d5c

dec_label_pc_16d5c:                               ; preds = %dec_label_pc_16d5c.loopexit, %dec_label_pc_16d38
  %v2_16c3452 = phi i32 [ %v5_16d50, %dec_label_pc_16d5c.loopexit ], [ %v1_16d2c, %dec_label_pc_16d38 ]
  %v0_16c2448 = phi i32 [ %v2_16d54, %dec_label_pc_16d5c.loopexit ], [ %v2_16d3c, %dec_label_pc_16d38 ]
  %v0_16d5c = load i32, i32* %r1.global-to-local, align 4
  %v1_16d5c = add i32 %v0_16d5c, 2
  store i32 %v1_16d5c, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_16d64:                               ; preds = %dec_label_pc_16c78
  br i1 %v5_16d68, label %dec_label_pc_16db0, label %dec_label_pc_16d6c

dec_label_pc_16d6c:                               ; preds = %dec_label_pc_16d64
  store i32 %v2_16d64, i32* %r2.global-to-local, align 4
  %v3_16d70 = load i32, i32* @r4, align 4
  store i32 %v3_16d70, i32* %stack_var_-12, align 4
  %v6_16d70 = load i32, i32* @r5, align 4
  %v8_16d70 = inttoptr i32 %v6_16d70 to i8*
  store i8* %v8_16d70, i8** %stack_var_-8, align 4
  %v11_16d70 = load i32, i32* @lr, align 4
  br label %dec_label_pc_16d74

dec_label_pc_16d74:                               ; preds = %dec_label_pc_16d74.dec_label_pc_16d74_crit_edge, %dec_label_pc_16d6c
  %v0_16d98 = phi i32 [ %v1_16d98, %dec_label_pc_16d74.dec_label_pc_16d74_crit_edge ], [ %v0_16cc019, %dec_label_pc_16d6c ]
  %v0_16d78 = phi i32 [ %v0_16d78.pre, %dec_label_pc_16d74.dec_label_pc_16d74_crit_edge ], [ %v1_16c78, %dec_label_pc_16d6c ]
  %v0_16d74 = phi i32 [ %v0_16d74.pre, %dec_label_pc_16d74.dec_label_pc_16d74_crit_edge ], [ %v2_16c7c, %dec_label_pc_16d6c ]
  %v3_16d74 = mul i32 %v0_16d74, 16777216
  store i32 %v3_16d74, i32* %lr.global-to-local, align 4
  %v1_16d78 = add i32 %v0_16d78, -4
  %v2_16d78 = inttoptr i32 %v1_16d78 to i32*
  %v3_16d78 = load i32, i32* %v2_16d78, align 4
  store i32 %v3_16d78, i32* @r3, align 4
  %v4_16d78 = add i32 %v0_16d78, -8
  %v5_16d78 = inttoptr i32 %v4_16d78 to i32*
  %v6_16d78 = load i32, i32* %v5_16d78, align 4
  store i32 %v6_16d78, i32* %r4.global-to-local, align 4
  %v7_16d78 = add i32 %v0_16d78, -12
  %v8_16d78 = inttoptr i32 %v7_16d78 to i32*
  %v9_16d78 = load i32, i32* %v8_16d78, align 4
  store i32 %v9_16d78, i32* %r5.global-to-local, align 4
  %v10_16d78 = add i32 %v0_16d78, -16
  %v11_16d78 = inttoptr i32 %v10_16d78 to i32*
  %v12_16d78 = load i32, i32* %v11_16d78, align 4
  store i32 %v10_16d78, i32* %r1.global-to-local, align 4
  %v4_16d7c = udiv i32 %v12_16d78, 256
  %v5_16d7c = or i32 %v4_16d7c, %v3_16d74
  store i32 %v5_16d7c, i32* %lr.global-to-local, align 4
  %v3_16d80 = mul i32 %v12_16d78, 16777216
  %v4_16d84 = udiv i32 %v9_16d78, 256
  %v5_16d84 = or i32 %v3_16d80, %v4_16d84
  store i32 %v5_16d84, i32* @ip, align 4
  %v3_16d88 = mul i32 %v9_16d78, 16777216
  %v4_16d8c = udiv i32 %v6_16d78, 256
  %v5_16d8c = or i32 %v3_16d88, %v4_16d8c
  store i32 %v5_16d8c, i32* %r5.global-to-local, align 4
  %v3_16d90 = mul i32 %v6_16d78, 16777216
  %v4_16d94 = udiv i32 %v3_16d78, 256
  %v5_16d94 = or i32 %v3_16d90, %v4_16d94
  store i32 %v5_16d94, i32* %r4.global-to-local, align 4
  %v1_16d98 = add i32 %v0_16d98, -16
  %v2_16d98 = inttoptr i32 %v1_16d98 to i32*
  store i32 %v5_16d94, i32* %v2_16d98, align 4
  %v4_16d98 = add i32 %v0_16d98, -12
  %v5_16d98 = inttoptr i32 %v4_16d98 to i32*
  %v6_16d98 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_16d98, i32* %v5_16d98, align 4
  %v7_16d98 = add i32 %v0_16d98, -8
  %v8_16d98 = inttoptr i32 %v7_16d98 to i32*
  %v9_16d98 = load i32, i32* @ip, align 4
  store i32 %v9_16d98, i32* %v8_16d98, align 4
  %v10_16d98 = add i32 %v0_16d98, -4
  %v11_16d98 = inttoptr i32 %v10_16d98 to i32*
  %v12_16d98 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_16d98, i32* %v11_16d98, align 4
  store i32 %v1_16d98, i32* %r0.global-to-local, align 4
  %v0_16d9c = load i32, i32* %r2.global-to-local, align 4
  %v2_16d9c = add i32 %v0_16d9c, -16
  store i32 %v2_16d9c, i32* %r2.global-to-local, align 4
  %v6_16da0 = icmp slt i32 %v0_16d9c, 16
  br i1 %v6_16da0, label %dec_label_pc_16da4, label %dec_label_pc_16d74.dec_label_pc_16d74_crit_edge

dec_label_pc_16d74.dec_label_pc_16d74_crit_edge:  ; preds = %dec_label_pc_16d74
  %v0_16d74.pre = load i32, i32* @r3, align 4
  %v0_16d78.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16d74

dec_label_pc_16da4:                               ; preds = %dec_label_pc_16d74
  %v2_16da4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_16da4, i32* @r4, align 4
  %v5_16da4 = load i8*, i8** %stack_var_-8, align 4
  %v6_16da4 = ptrtoint i8* %v5_16da4 to i32
  store i32 %v6_16da4, i32* @r5, align 4
  store i32 %v11_16d70, i32* @lr, align 4
  %v2_16da8 = add i32 %v0_16d9c, -4
  store i32 %v2_16da8, i32* %r2.global-to-local, align 4
  %v4_16da8 = add i32 %v0_16d9c, 2147483632
  %v5_16da8 = and i32 %v2_16da8, %v4_16da8
  %v6_16da8 = icmp slt i32 %v5_16da8, 0
  store i1 %v6_16da8, i1* %cpsr_v.global-to-local, align 1
  %v7_16da8 = icmp slt i32 %v2_16da8, 0
  store i1 %v7_16da8, i1* %cpsr_n.global-to-local, align 1
  %v8_16da8 = icmp eq i32 %v2_16da8, 0
  store i1 %v8_16da8, i1* %cpsr_z.global-to-local, align 1
  %v5_16dac = icmp slt i32 %v2_16d9c, -12
  br i1 %v5_16dac, label %dec_label_pc_16dc8, label %dec_label_pc_16db0

dec_label_pc_16db0:                               ; preds = %dec_label_pc_16da4, %dec_label_pc_16d64, %dec_label_pc_16db0
  %v1_16dbc = phi i32 [ %v5_16dbc, %dec_label_pc_16db0 ], [ %v1_16d98, %dec_label_pc_16da4 ], [ %v0_16cc019, %dec_label_pc_16d64 ]
  %v0_16db0 = load i32, i32* @r3, align 4
  %v3_16db0 = mul i32 %v0_16db0, 16777216
  store i32 %v3_16db0, i32* %ip.global-to-local, align 4
  %v0_16db4 = load i32, i32* %r1.global-to-local, align 4
  %v1_16db4 = add i32 %v0_16db4, -4
  %v2_16db4 = inttoptr i32 %v1_16db4 to i32*
  %v3_16db4 = load i32, i32* %v2_16db4, align 4
  store i32 %v3_16db4, i32* @r3, align 4
  store i32 %v1_16db4, i32* %r1.global-to-local, align 4
  %v4_16db8 = udiv i32 %v3_16db4, 256
  %v5_16db8 = or i32 %v4_16db8, %v3_16db0
  store i32 %v5_16db8, i32* @ip, align 4
  %v2_16dbc = add i32 %v1_16dbc, -4
  %v3_16dbc = inttoptr i32 %v2_16dbc to i32*
  store i32 %v5_16db8, i32* %v3_16dbc, align 4
  %v4_16dbc = load i32, i32* %r0.global-to-local, align 4
  %v5_16dbc = add i32 %v4_16dbc, -4
  store i32 %v5_16dbc, i32* %r0.global-to-local, align 4
  %v0_16dc0 = load i32, i32* %r2.global-to-local, align 4
  %v2_16dc0 = add i32 %v0_16dc0, -4
  store i32 %v2_16dc0, i32* %r2.global-to-local, align 4
  %v6_16dc4 = icmp slt i32 %v0_16dc0, 4
  br i1 %v6_16dc4, label %dec_label_pc_16dc8.loopexit, label %dec_label_pc_16db0

dec_label_pc_16dc8.loopexit:                      ; preds = %dec_label_pc_16db0
  %v4_16dc0 = sub i32 3, %v0_16dc0
  %v5_16dc0 = and i32 %v4_16dc0, %v0_16dc0
  %v6_16dc0 = icmp slt i32 %v5_16dc0, 0
  %v7_16dc0 = icmp slt i32 %v2_16dc0, 0
  store i1 %v6_16dc0, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_16dc0, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16dc8

dec_label_pc_16dc8:                               ; preds = %dec_label_pc_16dc8.loopexit, %dec_label_pc_16da4
  %v2_16c3453 = phi i32 [ %v5_16dbc, %dec_label_pc_16dc8.loopexit ], [ %v1_16d98, %dec_label_pc_16da4 ]
  %v0_16c2449 = phi i32 [ %v2_16dc0, %dec_label_pc_16dc8.loopexit ], [ %v2_16da8, %dec_label_pc_16da4 ]
  %v0_16dc8 = load i32, i32* %r1.global-to-local, align 4
  %v1_16dc8 = add i32 %v0_16dc8, 1
  store i32 %v1_16dc8, i32* %r1.global-to-local, align 4
  br label %bb150

; uselistorder directives
  uselistorder i32 %v5_16dbc, { 0, 2, 1 }
  uselistorder i32 %v3_16db0, { 1, 0 }
  uselistorder i32 %v2_16da8, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_16d98, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_16d78, { 1, 0 }
  uselistorder i32 %v3_16d74, { 1, 0 }
  uselistorder i32 %v0_16d78, { 3, 2, 1, 0 }
  uselistorder i32 %v0_16d98, { 3, 2, 1, 0 }
  uselistorder i32 %v5_16d50, { 0, 2, 1 }
  uselistorder i32 %v3_16d44, { 1, 0 }
  uselistorder i32 %v2_16d3c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_16d2c, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_16d0c, { 1, 0 }
  uselistorder i32 %v3_16d08, { 1, 0 }
  uselistorder i32 %v0_16d0c, { 3, 2, 1, 0 }
  uselistorder i32 %v0_16d2c, { 3, 2, 1, 0 }
  uselistorder i32 %v5_16ce4, { 0, 2, 1 }
  uselistorder i32 %v3_16cd8, { 1, 0 }
  uselistorder i32 %v2_16cd0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_16cc0, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_16ca0, { 1, 0 }
  uselistorder i32 %v3_16c9c, { 1, 0 }
  uselistorder i32 %v0_16ca0, { 3, 2, 1, 0 }
  uselistorder i32 %v0_16cc0, { 3, 2, 1, 0 }
  uselistorder i1 %v5_16d68, { 2, 0, 1 }
  uselistorder i32 %v0_16c80, { 1, 0 }
  uselistorder i32 %v0_16d6c, { 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_16cc019, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_16c70, { 2, 1, 0 }
  uselistorder i32 %v0_16c70, { 2, 0, 1 }
  uselistorder i32 %v2_16c68, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_16c68, { 1, 2, 0, 3 }
  uselistorder i32 %v0_16c68, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_16cc020, { 2, 1, 0 }
  uselistorder i32 %v11_16c44, { 1, 0 }
  uselistorder i32 %v7_16c44, { 1, 0 }
  uselistorder i32 %v1_16c24, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_16c24, { 1, 2, 0, 3 }
  uselistorder i32 %v2_16c28, { 1, 0 }
  uselistorder i32 %v7_16c1c, { 0, 2, 1 }
  uselistorder i32 %v10_16c18, { 1, 0 }
  uselistorder i32 %v9_16c10, { 1, 0, 2 }
  uselistorder i32 %v6_16c0c, { 1, 0 }
  uselistorder i32 %v2_16c04, { 0, 2, 1, 3, 5, 6, 4, 7 }
  uselistorder i32 %v0_16c04, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_16c14, { 0, 3, 2, 1 }
  uselistorder i32 %v7_16bf8, { 0, 2, 1 }
  uselistorder i32 %v13_16bf4, { 1, 0 }
  uselistorder i32 %v4_16bf0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_16bf0, { 2, 0, 1 }
  uselistorder i32 %v6_16bf8, { 0, 3, 2, 1 }
  uselistorder i32 %v7_16be8, { 0, 2, 1 }
  uselistorder i32 %v16_16be4, { 1, 0 }
  uselistorder i32 %v4_16be0, { 1, 2, 0 }
  uselistorder i32 %v0_16bf0.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_16be8, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_16bd4, { 0, 3, 2, 1 }
  uselistorder i32 %v10_16bd0, { 1, 0 }
  uselistorder i32 %v1_16bcc, { 1, 0 }
  uselistorder i32 %v10_16bc8, { 1, 0 }
  uselistorder i32 %v0_16bc8, { 3, 2, 1, 0 }
  uselistorder i32 %v0_16bcc, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_16bc0, { 0, 2, 1 }
  uselistorder i32 %v2_16bb4, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_16bb4, { 1, 2, 6, 3, 0, 5, 4 }
  uselistorder i32 %v0_16bcc37, { 1, 2, 0 }
  uselistorder i32 %v1_16bac, { 2, 1, 0 }
  uselistorder i32 %v1_16ba4, { 2, 3, 1, 0 }
  uselistorder i32 %v2_16b9c, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_16b98, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_16b94, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_16b94, { 3, 4, 0, 6, 5, 1, 2 }
  uselistorder i32 %v1_16b84, { 0, 2, 1 }
  uselistorder i32 %v4_16b80, { 1, 0 }
  uselistorder i32 %v3_16b74, { 1, 0 }
  uselistorder i32 %v1_16b6c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_16b60, { 1, 0 }
  uselistorder i32 %v12_16b5c, { 0, 2, 1 }
  uselistorder i32 %v8_16b3c, { 1, 0, 2 }
  uselistorder i32 %v5_16b3c, { 1, 0, 2 }
  uselistorder i32 %v2_16b3c, { 1, 0, 2 }
  uselistorder i32 %v0_16b3c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_16b5c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_16b18, { 0, 2, 1 }
  uselistorder i32 %v4_16b14, { 1, 0 }
  uselistorder i32 %v3_16b08, { 1, 0 }
  uselistorder i32 %v1_16b00, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_16af4, { 1, 0 }
  uselistorder i32 %v12_16af0, { 0, 2, 1 }
  uselistorder i32 %v8_16ad0, { 1, 0, 2 }
  uselistorder i32 %v5_16ad0, { 1, 0, 2 }
  uselistorder i32 %v2_16ad0, { 1, 0, 2 }
  uselistorder i32 %v0_16ad0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_16af0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_16aac, { 0, 2, 1 }
  uselistorder i32 %v4_16aa8, { 1, 0 }
  uselistorder i32 %v3_16a9c, { 1, 0 }
  uselistorder i32 %v1_16a94, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_16a88, { 1, 0 }
  uselistorder i32 %v12_16a84, { 0, 2, 1 }
  uselistorder i32 %v8_16a64, { 1, 0, 2 }
  uselistorder i32 %v5_16a64, { 1, 0, 2 }
  uselistorder i32 %v2_16a64, { 1, 0, 2 }
  uselistorder i32 %v0_16a64, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_16a84, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v2_16ac0, { 0, 2, 1 }
  uselistorder i32 %v1_16abc, { 2, 0, 1, 3 }
  uselistorder i32 %v4_16a40, { 2, 0, 1, 3 }
  uselistorder i32 %v2_16a40, { 2, 0, 1, 3 }
  uselistorder i32 %v0_16ac4, { 1, 0, 3, 2 }
  uselistorder i32 %v0_16b5c76, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32 %v1_16a34, { 1, 0 }
  uselistorder i32 %v0_16a34, { 3, 1, 0, 2 }
  uselistorder i32 %v2_16a2c, { 2, 4, 0, 5, 1, 3 }
  uselistorder i32 %v1_16a2c, { 1, 0, 2 }
  uselistorder i32 %v0_16a2c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_16b5c77, { 1, 0 }
  uselistorder i32 %v1_16a0c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_16a14, { 1, 0 }
  uselistorder i32 %v0_169e8, { 3, 0, 1, 2 }
  uselistorder i32 %v1_169dc, { 1, 2, 0, 3 }
  uselistorder i32 %v5_169c8, { 1, 0, 2 }
  uselistorder i32 %v1_169c4, { 1, 0 }
  uselistorder i32 %v1_169bc, { 2, 0, 1, 4, 5, 3, 6 }
  uselistorder i32 %v0_169bc, { 1, 2, 0, 3 }
  uselistorder i32 %v4_169b4, { 0, 2, 1 }
  uselistorder i32 %v3_169b4, { 3, 0, 1, 2 }
  uselistorder i1 %v0_169b4, { 1, 0 }
  uselistorder i1 %v1_169b4, { 1, 0 }
  uselistorder i32 %v3_169b0, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_169a8, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_16994, { 1, 2, 0 }
  uselistorder i32 %v1_1698c, { 0, 2, 1 }
  uselistorder i32 %v12_16988, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1697c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_16980, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v1_16970, { 0, 2, 1 }
  uselistorder i32 %v1_16968, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_16968, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v1_16960, { 1, 0 }
  uselistorder i32 %v1_16958, { 2, 1, 0 }
  uselistorder i32 %v2_16950, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_16950, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v8_1694c, { 1, 0 }
  uselistorder i32 %v2_16940, { 1, 0 }
  uselistorder i32 %v1_16940, { 1, 4, 5, 3, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_16940, { 1, 7, 8, 6, 4, 0, 5, 10, 2, 3, 9, 11 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 15, 16, 17, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 26, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32* %r2.global-to-local, { 0, 69, 1, 2, 3, 4, 5, 70, 6, 7, 8, 9, 10, 71, 11, 12, 67, 68, 72, 28, 13, 14, 16, 15, 17, 18, 19, 20, 21, 22, 24, 23, 25, 26, 27, 29, 30, 62, 31, 32, 33, 34, 35, 63, 36, 37, 38, 39, 40, 64, 41, 42, 43, 44, 45, 65, 46, 47, 48, 50, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66 }
  uselistorder i32* %r1.global-to-local, { 1, 3, 0, 56, 2, 4, 6, 8, 5, 57, 7, 9, 11, 54, 10, 58, 53, 55, 59, 62, 60, 66, 67, 12, 13, 14, 16, 15, 17, 18, 61, 19, 20, 63, 21, 64, 22, 65, 23, 24, 25, 26, 27, 30, 28, 40, 29, 31, 34, 32, 41, 33, 35, 38, 36, 42, 37, 39, 43, 44, 47, 45, 48, 46, 49, 50, 51, 52 }
  uselistorder i32* %r0.global-to-local, { 0, 28, 1, 2, 29, 3, 4, 30, 5, 27, 33, 34, 6, 7, 19, 8, 10, 9, 11, 12, 31, 13, 14, 32, 15, 16, 17, 18, 20, 21, 23, 22, 24, 25, 26 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 5, 35, 36, 37, 6, 7, 8, 9, 10, 11, 12, 13, 14, 23, 15, 16, 17, 24, 18, 19, 20, 25, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i1* %cpsr_z.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 46, 47, 11, 12, 13, 14, 15, 16, 17, 18, 3, 19, 20, 21, 22, 23, 2, 24, 0, 25, 1, 27, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i1* %cpsr_v.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 44, 11, 12, 13, 14, 15, 16, 17, 18, 19, 3, 20, 21, 22, 2, 23, 0, 24, 1, 26, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cpsr_n.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 49, 50, 11, 12, 13, 14, 15, 16, 17, 18, 19, 3, 20, 21, 22, 23, 24, 2, 25, 0, 26, 1, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 }
  uselistorder i32 -20, { 1, 0 }
  uselistorder i32 -3, { 0, 4, 5, 3, 1, 2 }
  uselistorder i32 2147483632, { 3, 4, 5, 2, 0, 1, 6 }
  uselistorder i32 15, { 15, 16, 17, 0, 27, 1, 28, 18, 19, 20, 4, 21, 5, 22, 6, 7, 8, 9, 10, 11, 12, 13, 23, 14, 24, 2, 25, 3, 26 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 29, 2, 4, 5, 3, 6, 7, 8, 9, 18, 34, 39, 37, 38, 36, 30, 31, 22, 23, 32, 33, 35, 26, 27, 28, 19, 25, 24, 10, 12, 13, 11, 14, 15, 16, 17, 20, 21, 0, 1 }
  uselistorder i32 -5, { 1, 0, 2, 3 }
  uselistorder i32 11, { 5, 6, 7, 16, 24, 25, 9, 10, 11, 8, 12, 2, 13, 14, 15, 17, 18, 3, 19, 4, 20, 0, 21, 1, 22, 23 }
  uselistorder i32 -12, { 0, 12, 13, 1, 15, 16, 2, 17, 18, 14, 11, 10, 9, 8, 7, 19, 20, 21, 22, 6, 3, 5, 4, 23 }
  uselistorder i32 48, { 0, 2, 4, 13, 3, 5, 6, 14, 15, 9, 10, 11, 12, 19, 20, 21, 16, 17, 7, 8, 18, 1 }
  uselistorder i32 40, { 3, 9, 12, 4, 2, 7, 6, 10, 11, 8, 13, 14, 15, 5, 16, 17, 0, 18, 20, 19, 21, 1, 22, 24, 23, 25 }
  uselistorder i32 36, { 4, 20, 5, 6, 7, 22, 8, 18, 9, 19, 10, 11, 12, 0, 1, 13, 2, 14, 3, 15, 16, 21, 17 }
  uselistorder i32 -16, { 6, 7, 8, 9, 10, 11, 12, 13, 14, 5, 4, 3, 1, 15, 16, 17, 18, 19, 20, 2, 0 }
  uselistorder i32 31, { 1, 2, 4, 5, 6, 7, 3, 0 }
  uselistorder i32 -32, { 3, 2, 4, 0, 1, 5 }
  uselistorder i32 24, { 0, 60, 61, 62, 63, 8, 9, 10, 12, 11, 13, 1, 14, 64, 65, 66, 15, 67, 16, 17, 68, 18, 59, 92, 93, 55, 56, 57, 58, 19, 20, 21, 22, 107, 108, 23, 109, 24, 2, 25, 94, 95, 26, 96, 53, 54, 27, 85, 82, 86, 87, 75, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 88, 89, 90, 52, 91, 28, 29, 30, 31, 32, 3, 33, 34, 35, 4, 36, 37, 5, 38, 39, 40, 41, 42, 43, 6, 99, 44, 100, 101, 102, 103, 45, 46, 7, 104, 47, 105, 48, 49, 50, 106, 110, 97, 51, 98 }
  uselistorder i32 27, { 1, 0, 2, 8, 6, 9, 3, 10, 4, 11, 5, 12, 7, 13 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16db0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16d44, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16cd8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16c78, { 1, 0 }
  uselistorder label %.thread14, { 2, 0, 1 }
  uselistorder label %.thread129, { 1, 0 }
  uselistorder label %bb150, { 4, 5, 6, 3, 7, 0, 1, 2 }
  uselistorder label %dec_label_pc_16c04, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_16bc8, { 1, 0 }
  uselistorder label %dec_label_pc_16bb4, { 1, 0 }
  uselistorder label %dec_label_pc_16b74, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16b08, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16a9c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16a3c, { 1, 0 }
  uselistorder label %.thread128, { 1, 0 }
  uselistorder label %.thread127, { 1, 0 }
  uselistorder label %dec_label_pc_16a0c, { 1, 0 }
  uselistorder label %.thread126, { 1, 0 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %bb140, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %.thread115, { 1, 0 }
  uselistorder label %dec_label_pc_169a8, { 1, 0 }
  uselistorder label %bb137, { 1, 0 }
  uselistorder label %dec_label_pc_16968, { 1, 0 }
}

define i32 @function_16dd0(i32 %arg1) local_unnamed_addr {
dec_label_pc_16dd0:
  %v1_16dd0 = and i32 %arg1, -4
  %v1_16dd4 = inttoptr i32 %v1_16dd0 to i32*
  %v2_16dd4 = load i32, i32* %v1_16dd4, align 4
  %v1_16dd8 = urem i32 %arg1, 4
  store i32 %v1_16dd8, i32* @r3, align 4
  %v2_16dd8 = icmp eq i32 %v1_16dd8, 0
  %v1_16ddc = sub nsw i32 0, %v1_16dd8
  br i1 %v2_16dd8, label %.preheader.preheader, label %dec_label_pc_16de4

dec_label_pc_16de4:                               ; preds = %dec_label_pc_16dd0
  %v1_16de4 = or i32 %v2_16dd4, 255
  %v7_16de8 = icmp eq i32 %v1_16dd8, 1
  br i1 %v7_16de8, label %bb33, label %bb

bb:                                               ; preds = %dec_label_pc_16de4
  %v9_16dec = or i32 %v2_16dd4, 65535
  br label %bb33

bb33:                                             ; preds = %dec_label_pc_16de4, %bb
  %v8_16df4 = phi i32 [ %v1_16de4, %dec_label_pc_16de4 ], [ %v9_16dec, %bb ]
  %v1_16df0 = add nsw i32 %v1_16dd8, -2
  store i32 %v1_16df0, i32* @r3, align 4
  %v7_16df4 = icmp eq i32 %v1_16dd8, 3
  br i1 %v7_16df4, label %bb34, label %.preheader.preheader

bb34:                                             ; preds = %bb33
  %v9_16df4 = or i32 %v8_16df4, 16711680
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %bb33, %bb34, %dec_label_pc_16dd0
  %v1_16e04.ph = phi i32 [ %v2_16dd4, %dec_label_pc_16dd0 ], [ %v9_16df4, %bb34 ], [ %v8_16df4, %bb33 ]
  %v1_16df838 = urem i32 %v1_16e04.ph, 256
  %v2_16df839 = icmp eq i32 %v1_16df838, 0
  %v2_16dfc40 = and i32 %v1_16e04.ph, 65280
  %v3_16dfc41 = icmp eq i32 %v2_16dfc40, 0
  %or.cond42 = or i1 %v2_16df839, %v3_16dfc41
  %v2_16e0043 = and i32 %v1_16e04.ph, 16711680
  %v3_16e0044 = icmp eq i32 %v2_16e0043, 0
  %or.cond3145 = or i1 %v3_16e0044, %or.cond42
  %v4_16e0446 = icmp ult i32 %v1_16e04.ph, 16777216
  %or.cond3247 = or i1 %v4_16e0446, %or.cond3145
  br i1 %or.cond3247, label %dec_label_pc_16e14, label %.thread4

.thread4:                                         ; preds = %.preheader.preheader, %.thread4
  %v1_16e081349 = phi i32 [ %v2_16e0814, %.thread4 ], [ %v1_16ddc, %.preheader.preheader ]
  %v1_16e0c48.in = phi i32 [ %v1_16e0c48, %.thread4 ], [ %v1_16dd0, %.preheader.preheader ]
  %v1_16e0c48 = add i32 %v1_16e0c48.in, 4
  %v2_16e0814 = add i32 %v1_16e081349, 4
  %v2_16e0c = inttoptr i32 %v1_16e0c48 to i32*
  %v3_16e0c = load i32, i32* %v2_16e0c, align 4
  %v1_16df8 = urem i32 %v3_16e0c, 256
  %v2_16df8 = icmp eq i32 %v1_16df8, 0
  %v2_16dfc = and i32 %v3_16e0c, 65280
  %v3_16dfc = icmp eq i32 %v2_16dfc, 0
  %or.cond = or i1 %v2_16df8, %v3_16dfc
  %v2_16e00 = and i32 %v3_16e0c, 16711680
  %v3_16e00 = icmp eq i32 %v2_16e00, 0
  %or.cond31 = or i1 %v3_16e00, %or.cond
  %v4_16e04 = icmp ult i32 %v3_16e0c, 16777216
  %or.cond32 = or i1 %v4_16e04, %or.cond31
  br i1 %or.cond32, label %dec_label_pc_16e14, label %.thread4

dec_label_pc_16e14:                               ; preds = %.thread4, %.preheader.preheader
  %v1_16e0813.lcssa = phi i32 [ %v1_16ddc, %.preheader.preheader ], [ %v2_16e0814, %.thread4 ]
  %v2_16df8.lcssa = phi i1 [ %v2_16df839, %.preheader.preheader ], [ %v2_16df8, %.thread4 ]
  %v3_16dfc.lcssa = phi i1 [ %v3_16dfc41, %.preheader.preheader ], [ %v3_16dfc, %.thread4 ]
  %v3_16e00.lcssa = phi i1 [ %v3_16e0044, %.preheader.preheader ], [ %v3_16e00, %.thread4 ]
  br i1 %v2_16df8.lcssa, label %.thread10, label %bb35

bb35:                                             ; preds = %dec_label_pc_16e14
  %v2_16e18 = add i32 %v1_16e0813.lcssa, 1
  br i1 %v3_16dfc.lcssa, label %.thread10, label %bb36

bb36:                                             ; preds = %bb35
  %v2_16e2017 = add i32 %v1_16e0813.lcssa, 2
  br i1 %v3_16e00.lcssa, label %.thread10, label %bb37

bb37:                                             ; preds = %bb36
  %v2_16e28 = add i32 %v1_16e0813.lcssa, 3
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_16e14, %bb35, %bb36, %bb37
  %v1_16e2c = phi i32 [ %v2_16e18, %bb35 ], [ %v2_16e2017, %bb36 ], [ %v2_16e28, %bb37 ], [ %v1_16e0813.lcssa, %dec_label_pc_16e14 ]
  ret i32 %v1_16e2c

; uselistorder directives
  uselistorder i32 %v1_16e0813.lcssa, { 1, 3, 2, 0 }
  uselistorder i32 %v3_16e0c, { 3, 2, 1, 0 }
  uselistorder i32 %v1_16e04.ph, { 1, 2, 3, 0 }
  uselistorder i32 %v1_16dd8, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 16711680, { 2, 0, 4, 3, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 14 }
  uselistorder i32 -2, { 1, 3, 4, 2, 6, 7, 8, 0, 5, 9, 25, 24, 26, 27, 28, 17, 18, 19, 20, 21, 22, 23, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32 65535, { 2, 5, 0, 1, 3, 4 }
  uselistorder i32 -4, { 41, 18, 62, 63, 64, 6, 19, 20, 21, 65, 66, 67, 7, 22, 23, 24, 68, 69, 70, 8, 25, 26, 71, 17, 16, 72, 73, 74, 15, 14, 13, 12, 27, 28, 29, 30, 31, 5, 32, 3, 33, 4, 75, 11, 34, 49, 50, 51, 9, 52, 53, 54, 35, 48, 2, 36, 42, 43, 44, 45, 46, 47, 0, 1, 55, 56, 57, 58, 59, 60, 61, 37, 38, 39, 40, 10 }
  uselistorder label %.thread10, { 3, 2, 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0, 2 }
  uselistorder label %bb33, { 1, 0 }
}

define i32 @function_16e30(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_16e34.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_16e30

dec_label_pc_16e30:                               ; preds = %bb3, %bb
  %v0_16e34 = phi i32 [ %v0_16e34.pre, %bb ], [ %v5_16e34, %bb3 ]
  %v0_16e30 = phi i32 [ %tmp, %bb ], [ %v5_16e30, %bb3 ]
  %v1_16e30 = inttoptr i32 %v0_16e30 to i8*
  %v2_16e30 = load i8, i8* %v1_16e30, align 1
  %v1_16e34 = inttoptr i32 %v0_16e34 to i8*
  %v2_16e34 = load i8, i8* %v1_16e34, align 1
  %v3_16e34 = zext i8 %v2_16e34 to i32
  %v2_16e38 = icmp eq i8 %v2_16e30, 0
  br i1 %v2_16e38, label %.dec_label_pc_16e44_crit_edge, label %bb3

bb3:                                              ; preds = %dec_label_pc_16e30
  %v5_16e34 = add i32 %v0_16e34, 1
  %v5_16e30 = add i32 %v0_16e30, 1
  %v3_16e30 = zext i8 %v2_16e30 to i32
  %v10_16e3c = icmp eq i8 %v2_16e30, %v2_16e34
  br i1 %v10_16e3c, label %dec_label_pc_16e30, label %dec_label_pc_16e44

.dec_label_pc_16e44_crit_edge:                    ; preds = %dec_label_pc_16e30
  br label %dec_label_pc_16e44

dec_label_pc_16e44:                               ; preds = %bb3, %.dec_label_pc_16e44_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_16e44_crit_edge ], [ %v3_16e30, %bb3 ]
  %v2_16e44.pre-phi = sub nsw i32 %.pn, %v3_16e34
  ret i32 %v2_16e44.pre-phi

; uselistorder directives
  uselistorder i8 %v2_16e30, { 0, 2, 1 }
  uselistorder i32 %v0_16e30, { 1, 0 }
  uselistorder i32 %v0_16e34, { 1, 0 }
  uselistorder label %dec_label_pc_16e44, { 1, 0 }
}

define i32 @function_16e50() local_unnamed_addr {
dec_label_pc_16e50:
  %stack_var_-16 = alloca i32, align 4
  %v3_16e50 = load i32, i32* @r4, align 4
  store i32 %v3_16e50, i32* %stack_var_-16, align 4
  %v6_16e50 = load i32, i32* @r5, align 4
  %v9_16e50 = load i32, i32* @r6, align 4
  %v0_16e54 = load i32, i32* @r0, align 4
  %v0_16e58 = load i32, i32* @r1, align 4
  store i32 %v0_16e58, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v1_16e748 = inttoptr i32 %v0_16e54 to i8*
  %v2_16e749 = load i8, i8* %v1_16e748, align 1
  %v2_16e7811 = icmp eq i8 %v2_16e749, 0
  store i32 %v0_16e58, i32* @r0, align 4
  %v1_16e8012 = add i32 %v0_16e54, 1
  store i32 %v1_16e8012, i32* @r4, align 4
  br i1 %v2_16e7811, label %dec_label_pc_16e88, label %dec_label_pc_16e64

dec_label_pc_16e64:                               ; preds = %dec_label_pc_16e50, %dec_label_pc_16e70
  %v3_16e7414.in = phi i8 [ %v2_16e74, %dec_label_pc_16e70 ], [ %v2_16e749, %dec_label_pc_16e50 ]
  %v0_16e7c13 = phi i32 [ %v0_16e7c.pre, %dec_label_pc_16e70 ], [ %v0_16e58, %dec_label_pc_16e50 ]
  %v3_16e7414 = zext i8 %v3_16e7414.in to i32
  %v2_16e64 = call i32 @function_1701c(i32 %v0_16e7c13, i32 %v3_16e7414)
  %v2_16e68 = icmp eq i32 %v2_16e64, 0
  %v0_16e70 = load i32, i32* @r5, align 4
  br i1 %v2_16e68, label %dec_label_pc_16e70, label %dec_label_pc_16e88

dec_label_pc_16e70:                               ; preds = %dec_label_pc_16e64
  %v1_16e70 = add i32 %v0_16e70, 1
  %v0_16e74.pre = load i32, i32* @r4, align 4
  %v0_16e7c.pre = load i32, i32* @r6, align 4
  store i32 %v1_16e70, i32* @r5, align 4
  %v1_16e74 = inttoptr i32 %v0_16e74.pre to i8*
  %v2_16e74 = load i8, i8* %v1_16e74, align 1
  %v2_16e78 = icmp eq i8 %v2_16e74, 0
  store i32 %v0_16e7c.pre, i32* @r0, align 4
  %v1_16e80 = add i32 %v0_16e74.pre, 1
  store i32 %v1_16e80, i32* @r4, align 4
  br i1 %v2_16e78, label %dec_label_pc_16e88, label %dec_label_pc_16e64

dec_label_pc_16e88:                               ; preds = %dec_label_pc_16e70, %dec_label_pc_16e64, %dec_label_pc_16e50
  %v0_16e88 = phi i32 [ 0, %dec_label_pc_16e50 ], [ %v0_16e70, %dec_label_pc_16e64 ], [ %v1_16e70, %dec_label_pc_16e70 ]
  %v2_16e8c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_16e8c, i32* @r4, align 4
  store i32 %v6_16e50, i32* @r5, align 4
  store i32 %v9_16e50, i32* @r6, align 4
  ret i32 %v0_16e88

; uselistorder directives
  uselistorder i8 %v2_16e74, { 1, 0 }
  uselistorder i32 %v0_16e7c.pre, { 1, 0 }
  uselistorder i32 %v0_16e74.pre, { 1, 0 }
  uselistorder i32* @r6, { 28, 2, 29, 30, 3, 31, 32, 33, 4, 34, 35, 23, 24, 36, 37, 5, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 6, 7, 55, 56, 57, 58, 59, 60, 61, 62, 25, 26, 27, 8, 9, 10, 397, 398, 399, 400, 401, 402, 403, 63, 11, 64, 12, 65, 395, 396, 346, 350, 351, 352, 353, 347, 348, 349, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 354, 379, 380, 381, 355, 356, 357, 358, 359, 13, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 375, 377, 371, 372, 373, 374, 376, 378, 109, 110, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 69, 75, 125, 126, 127, 128, 96, 97, 98, 99, 100, 129, 130, 131, 132, 80, 101, 70, 71, 72, 81, 66, 67, 68, 73, 74, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 102, 103, 104, 105, 106, 107, 108, 133, 134, 135, 1, 0, 136, 137, 138, 139, 140, 141, 142, 19, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 240, 241, 242, 243, 153, 154, 155, 156, 157, 158, 159, 160, 14, 161, 162, 163, 164, 165, 166, 167, 168, 183, 184, 185, 186, 20, 187, 188, 189, 15, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 21, 16, 310, 311, 313, 314, 312, 315, 316, 317, 318, 319, 320, 382, 383, 22, 17, 384, 385, 387, 388, 386, 389, 390, 391, 392, 393, 394, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 18, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239 }
  uselistorder label %dec_label_pc_16e64, { 1, 0 }
}

define i32 @function_16e94(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16e94:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_16ec42 = load i32, i32* @r0, align 4
  %v1_16ec43 = inttoptr i32 %v0_16ec42 to i8*
  %v2_16ec44 = load i8, i8* %v1_16ec43, align 1
  %v3_16ec45 = zext i8 %v2_16ec44 to i32
  store i32 %v3_16ec45, i32* @ip, align 4
  %v2_16ec86 = icmp eq i8 %v2_16ec44, 0
  br i1 %v2_16ec86, label %dec_label_pc_16ed4, label %dec_label_pc_16ea8.preheader

dec_label_pc_16ea0:                               ; preds = %dec_label_pc_16ea8
  %v3_16ea8 = zext i8 %v2_16ea8 to i32
  %v1_16eb0 = add i32 %v0_16eb0, 1
  %v9_16ea0 = icmp eq i32 %v0_16ea010, %v3_16ea8
  br i1 %v9_16ea0, label %dec_label_pc_16ebc, label %dec_label_pc_16ea8

dec_label_pc_16ea8:                               ; preds = %dec_label_pc_16ea8.preheader, %dec_label_pc_16ea0
  %v0_16eb0 = phi i32 [ %tmp, %dec_label_pc_16ea8.preheader ], [ %v1_16eb0, %dec_label_pc_16ea0 ]
  %v1_16ea8 = inttoptr i32 %v0_16eb0 to i8*
  %v2_16ea8 = load i8, i8* %v1_16ea8, align 1
  %v2_16eac = icmp eq i8 %v2_16ea8, 0
  br i1 %v2_16eac, label %dec_label_pc_16ed4, label %dec_label_pc_16ea0

dec_label_pc_16ebc:                               ; preds = %dec_label_pc_16ea0
  %v1_16ebc = add i32 %v0_16ebc, 1
  %v1_16ec0 = add i32 %v0_16ec0, 1
  %v1_16ec4 = inttoptr i32 %v1_16ec0 to i8*
  %v2_16ec4 = load i8, i8* %v1_16ec4, align 1
  %v3_16ec4 = zext i8 %v2_16ec4 to i32
  store i32 %v3_16ec4, i32* @ip, align 4
  %v2_16ec8 = icmp eq i8 %v2_16ec4, 0
  br i1 %v2_16ec8, label %dec_label_pc_16ed4, label %dec_label_pc_16ea8.preheader

dec_label_pc_16ea8.preheader:                     ; preds = %dec_label_pc_16e94, %dec_label_pc_16ebc
  %v0_16ec0 = phi i32 [ %v1_16ec0, %dec_label_pc_16ebc ], [ %v0_16ec42, %dec_label_pc_16e94 ]
  %v0_16ebc = phi i32 [ %v1_16ebc, %dec_label_pc_16ebc ], [ 0, %dec_label_pc_16e94 ]
  %v0_16ea010 = phi i32 [ %v3_16ec4, %dec_label_pc_16ebc ], [ %v3_16ec45, %dec_label_pc_16e94 ]
  br label %dec_label_pc_16ea8

dec_label_pc_16ed4:                               ; preds = %dec_label_pc_16ebc, %dec_label_pc_16ea8, %dec_label_pc_16e94
  %v0_16ed4 = phi i32 [ 0, %dec_label_pc_16e94 ], [ %v0_16ebc, %dec_label_pc_16ea8 ], [ %v1_16ebc, %dec_label_pc_16ebc ]
  ret i32 %v0_16ed4

; uselistorder directives
  uselistorder i32 %v0_16eb0, { 1, 0 }
  uselistorder label %dec_label_pc_16ea8.preheader, { 1, 0 }
}

define i32 @function_16ee0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16ee0:
  store i32 %arg1, i32* @r0, align 4
  %v1_16ee4 = urem i32 %arg2, 256
  store i32 %v1_16ee4, i32* @r4, align 4
  %v2_16ee4 = icmp eq i32 %v1_16ee4, 0
  br i1 %v2_16ee4, label %dec_label_pc_16ef8, label %dec_label_pc_16f0c.preheader

dec_label_pc_16f0c.preheader:                     ; preds = %dec_label_pc_16ee0
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_16f143 = call i32 @function_1701c(i32 %arg1, i32 %v1_16ee4)
  %v2_16f185 = icmp eq i32 %v2_16f143, 0
  br i1 %v2_16f185, label %dec_label_pc_16f20, label %dec_label_pc_16f04

dec_label_pc_16ef8:                               ; preds = %dec_label_pc_16ee0
  %v2_16efc = call i32 @function_1701c(i32 %arg1, i32 0)
  br label %dec_label_pc_16f24

dec_label_pc_16f04:                               ; preds = %dec_label_pc_16f0c.preheader, %dec_label_pc_16f04
  %v2_16f146 = phi i32 [ %v2_16f14, %dec_label_pc_16f04 ], [ %v2_16f143, %dec_label_pc_16f0c.preheader ]
  store i32 %v2_16f146, i32* @r5, align 4
  %v1_16f08 = add i32 %v2_16f146, 1
  store i32 %v1_16f08, i32* @r0, align 4
  %v0_16f10 = load i32, i32* @r4, align 4
  %v2_16f14 = call i32 @function_1701c(i32 %v1_16f08, i32 %v0_16f10)
  %v2_16f18 = icmp eq i32 %v2_16f14, 0
  br i1 %v2_16f18, label %dec_label_pc_16f20, label %dec_label_pc_16f04

dec_label_pc_16f20:                               ; preds = %dec_label_pc_16f04, %dec_label_pc_16f0c.preheader
  %v0_16f20 = load i32, i32* @r5, align 4
  br label %dec_label_pc_16f24

dec_label_pc_16f24:                               ; preds = %dec_label_pc_16ef8, %dec_label_pc_16f20
  %storemerge = phi i32 [ %v2_16efc, %dec_label_pc_16ef8 ], [ %v0_16f20, %dec_label_pc_16f20 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_16f14, { 1, 0 }
  uselistorder i32 %v1_16f08, { 1, 0 }
  uselistorder i32 %v1_16ee4, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_1701c, { 2, 1, 0, 5, 4, 3 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_16f24, { 1, 0 }
  uselistorder label %dec_label_pc_16f04, { 1, 0 }
}

define i32 @function_16f30(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16f30:
  %v1_16f34 = urem i32 %arg1, 256
  %v0_16f542 = load i32, i32* @r0, align 4
  %v1_16f543 = urem i32 %v0_16f542, 4
  %v2_16f544 = icmp eq i32 %v1_16f543, 0
  br i1 %v2_16f544, label %dec_label_pc_16f5c, label %dec_label_pc_16f3c

dec_label_pc_16f3c:                               ; preds = %dec_label_pc_16f30, %dec_label_pc_16f50
  %v0_16f50 = phi i32 [ %v1_16f50, %dec_label_pc_16f50 ], [ %v0_16f542, %dec_label_pc_16f30 ]
  %v1_16f3c = inttoptr i32 %v0_16f50 to i8*
  %v2_16f3c = load i8, i8* %v1_16f3c, align 1
  %v3_16f3c = zext i8 %v2_16f3c to i32
  %v9_16f40 = icmp eq i32 %v3_16f3c, %v1_16f34
  br i1 %v9_16f40, label %dec_label_pc_1700c, label %dec_label_pc_16f48

dec_label_pc_16f48:                               ; preds = %dec_label_pc_16f3c
  %v2_16f48 = icmp eq i8 %v2_16f3c, 0
  br i1 %v2_16f48, label %dec_label_pc_1700c, label %dec_label_pc_16f50

dec_label_pc_16f50:                               ; preds = %dec_label_pc_16f48
  %v1_16f50 = add i32 %v0_16f50, 1
  %v1_16f54 = urem i32 %v1_16f50, 4
  %v2_16f54 = icmp eq i32 %v1_16f54, 0
  br i1 %v2_16f54, label %dec_label_pc_16f5c, label %dec_label_pc_16f3c

dec_label_pc_16f5c:                               ; preds = %dec_label_pc_16f50, %dec_label_pc_16f30
  %v0_16f60 = phi i32 [ %v0_16f542, %dec_label_pc_16f30 ], [ %v1_16f50, %dec_label_pc_16f50 ]
  %v4_16f5c = mul nuw nsw i32 %v1_16f34, 256
  %v5_16f5c = or i32 %v4_16f5c, %v1_16f34
  %v4_16f64 = mul i32 %v5_16f5c, 65536
  %v5_16f64 = or i32 %v4_16f64, %v5_16f5c
  br label %dec_label_pc_16f68

dec_label_pc_16f68:                               ; preds = %dec_label_pc_17004, %dec_label_pc_16fa4, %dec_label_pc_16f5c
  %v0_16fcc = phi i32 [ %v0_16f60, %dec_label_pc_16f5c ], [ %v4_16f68, %dec_label_pc_16fa4 ], [ %v4_16f68, %dec_label_pc_17004 ]
  %v1_16f68 = inttoptr i32 %v0_16fcc to i32*
  %v2_16f68 = load i32, i32* %v1_16f68, align 4
  %v4_16f68 = add i32 %v0_16fcc, 4
  %v2_16f70 = xor i32 %v2_16f68, %v5_16f64
  %v2_16f74 = add i32 %v2_16f70, 2130640639
  store i32 %v2_16f74, i32* @ip, align 4
  %v2_16f7c = add i32 %v2_16f68, 2130640639
  %v1_16f80 = sub i32 -1, %v2_16f68
  %v2_16f84 = xor i32 %v2_16f7c, %v1_16f80
  %v2_16f90 = and i32 %v2_16f84, -2130640640
  %v2_16f98 = icmp eq i32 %v2_16f90, 0
  br i1 %v2_16f98, label %dec_label_pc_16fa4, label %dec_label_pc_16fac

dec_label_pc_16fa4:                               ; preds = %dec_label_pc_16f68
  %v1_16f8c = sub i32 -1, %v2_16f70
  %v2_16f94 = xor i32 %v2_16f74, %v1_16f8c
  %v2_16f9c = and i32 %v2_16f94, -2130640640
  %v2_16fa4 = icmp eq i32 %v2_16f9c, 0
  br i1 %v2_16fa4, label %dec_label_pc_16f68, label %dec_label_pc_16fac

dec_label_pc_16fac:                               ; preds = %dec_label_pc_16f68, %dec_label_pc_16fa4
  %v2_16fac = inttoptr i32 %v0_16fcc to i8*
  %v3_16fac = load i8, i8* %v2_16fac, align 1
  %v4_16fac = zext i8 %v3_16fac to i32
  %v9_16fb0 = icmp eq i32 %v4_16fac, %v1_16f34
  br i1 %v9_16fb0, label %dec_label_pc_1700c, label %dec_label_pc_16fbc

dec_label_pc_16fbc:                               ; preds = %dec_label_pc_16fac
  %v2_16fbc = icmp eq i8 %v3_16fac, 0
  br i1 %v2_16fbc, label %dec_label_pc_1700c, label %dec_label_pc_16fc4

dec_label_pc_16fc4:                               ; preds = %dec_label_pc_16fbc
  %v1_16fc4 = add i32 %v0_16fcc, 1
  %v2_16fc4 = inttoptr i32 %v1_16fc4 to i8*
  %v3_16fc4 = load i8, i8* %v2_16fc4, align 1
  %v4_16fc4 = zext i8 %v3_16fc4 to i32
  %v9_16fc8 = icmp eq i32 %v4_16fc4, %v1_16f34
  br i1 %v9_16fc8, label %dec_label_pc_1700c, label %dec_label_pc_16fd4

dec_label_pc_16fd4:                               ; preds = %dec_label_pc_16fc4
  %v2_16fd4 = icmp eq i8 %v3_16fc4, 0
  br i1 %v2_16fd4, label %dec_label_pc_1700c, label %dec_label_pc_16fdc

dec_label_pc_16fdc:                               ; preds = %dec_label_pc_16fd4
  %v1_16fdc = add i32 %v0_16fcc, 2
  %v2_16fdc = inttoptr i32 %v1_16fdc to i8*
  %v3_16fdc = load i8, i8* %v2_16fdc, align 1
  %v4_16fdc = zext i8 %v3_16fdc to i32
  %v9_16fe0 = icmp eq i32 %v4_16fdc, %v1_16f34
  br i1 %v9_16fe0, label %dec_label_pc_1700c, label %dec_label_pc_16fec

dec_label_pc_16fec:                               ; preds = %dec_label_pc_16fdc
  %v2_16fec = icmp eq i8 %v3_16fdc, 0
  br i1 %v2_16fec, label %dec_label_pc_1700c, label %dec_label_pc_16ff4

dec_label_pc_16ff4:                               ; preds = %dec_label_pc_16fec
  %v1_16ff4 = add i32 %v0_16fcc, 3
  %v2_16ff4 = inttoptr i32 %v1_16ff4 to i8*
  %v3_16ff4 = load i8, i8* %v2_16ff4, align 1
  %v4_16ff4 = zext i8 %v3_16ff4 to i32
  %v9_16ff8 = icmp eq i32 %v4_16ff4, %v1_16f34
  br i1 %v9_16ff8, label %dec_label_pc_1700c, label %dec_label_pc_17004

dec_label_pc_17004:                               ; preds = %dec_label_pc_16ff4
  %v2_17004 = icmp eq i8 %v3_16ff4, 0
  br i1 %v2_17004, label %dec_label_pc_1700c, label %dec_label_pc_16f68

dec_label_pc_1700c:                               ; preds = %dec_label_pc_16f48, %dec_label_pc_16f3c, %dec_label_pc_17004, %dec_label_pc_16ff4, %dec_label_pc_16fec, %dec_label_pc_16fdc, %dec_label_pc_16fd4, %dec_label_pc_16fc4, %dec_label_pc_16fbc, %dec_label_pc_16fac
  %v1_17010 = phi i32 [ %v1_16ff4, %dec_label_pc_17004 ], [ %v1_16ff4, %dec_label_pc_16ff4 ], [ %v1_16fdc, %dec_label_pc_16fec ], [ %v1_16fdc, %dec_label_pc_16fdc ], [ %v1_16fc4, %dec_label_pc_16fd4 ], [ %v1_16fc4, %dec_label_pc_16fc4 ], [ %v0_16fcc, %dec_label_pc_16fbc ], [ %v0_16fcc, %dec_label_pc_16fac ], [ %v0_16f50, %dec_label_pc_16f3c ], [ %v0_16f50, %dec_label_pc_16f48 ]
  ret i32 %v1_17010

; uselistorder directives
  uselistorder i32 %v4_16f68, { 1, 0 }
  uselistorder i32 %v2_16f68, { 0, 2, 1 }
  uselistorder i32 %v0_16fcc, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v5_16f5c, { 1, 0 }
  uselistorder i32 %v1_16f50, { 1, 0, 2 }
  uselistorder i32 %v0_16f542, { 2, 1, 0 }
  uselistorder i32 %v1_16f34, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_1700c, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_16fac, { 1, 0 }
  uselistorder label %dec_label_pc_16f3c, { 1, 0 }
}

define i32 @function_1701c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1701c:
  %v1_17020 = urem i32 %arg1, 256
  %v0_170403 = load i32, i32* @r0, align 4
  %v1_170404 = urem i32 %v0_170403, 4
  %v2_170405 = icmp eq i32 %v1_170404, 0
  br i1 %v2_170405, label %dec_label_pc_17048, label %dec_label_pc_17028

dec_label_pc_17028:                               ; preds = %dec_label_pc_1701c, %dec_label_pc_1703c
  %v0_1703c = phi i32 [ %v1_1703c, %dec_label_pc_1703c ], [ %v0_170403, %dec_label_pc_1701c ]
  %v1_17028 = inttoptr i32 %v0_1703c to i8*
  %v2_17028 = load i8, i8* %v1_17028, align 1
  %v3_17028 = zext i8 %v2_17028 to i32
  %v9_1702c = icmp eq i32 %v3_17028, %v1_17020
  br i1 %v9_1702c, label %dec_label_pc_170fc, label %dec_label_pc_17034

dec_label_pc_17034:                               ; preds = %dec_label_pc_17028
  %v2_17034 = icmp eq i8 %v2_17028, 0
  br i1 %v2_17034, label %dec_label_pc_170f8, label %dec_label_pc_1703c

dec_label_pc_1703c:                               ; preds = %dec_label_pc_17034
  %v1_1703c = add i32 %v0_1703c, 1
  %v1_17040 = urem i32 %v1_1703c, 4
  %v2_17040 = icmp eq i32 %v1_17040, 0
  br i1 %v2_17040, label %dec_label_pc_17048, label %dec_label_pc_17028

dec_label_pc_17048:                               ; preds = %dec_label_pc_1703c, %dec_label_pc_1701c
  %v0_1704c = phi i32 [ %v0_170403, %dec_label_pc_1701c ], [ %v1_1703c, %dec_label_pc_1703c ]
  %v4_17048 = mul nuw nsw i32 %v1_17020, 256
  %v5_17048 = or i32 %v4_17048, %v1_17020
  %v4_17050 = mul i32 %v5_17048, 65536
  %v5_17050 = or i32 %v4_17050, %v5_17048
  br label %dec_label_pc_17054

dec_label_pc_17054:                               ; preds = %dec_label_pc_170f0, %dec_label_pc_17090, %dec_label_pc_17048
  %v0_170b8 = phi i32 [ %v0_1704c, %dec_label_pc_17048 ], [ %v4_17054, %dec_label_pc_17090 ], [ %v4_17054, %dec_label_pc_170f0 ]
  %v1_17054 = inttoptr i32 %v0_170b8 to i32*
  %v2_17054 = load i32, i32* %v1_17054, align 4
  %v4_17054 = add i32 %v0_170b8, 4
  %v2_1705c = xor i32 %v2_17054, %v5_17050
  %v2_17060 = add i32 %v2_1705c, 2130640639
  store i32 %v2_17060, i32* @ip, align 4
  %v2_17068 = add i32 %v2_17054, 2130640639
  %v1_1706c = sub i32 -1, %v2_17054
  %v2_17070 = xor i32 %v2_17068, %v1_1706c
  %v2_1707c = and i32 %v2_17070, -2130640640
  %v2_17084 = icmp eq i32 %v2_1707c, 0
  br i1 %v2_17084, label %dec_label_pc_17090, label %dec_label_pc_17098

dec_label_pc_17090:                               ; preds = %dec_label_pc_17054
  %v1_17078 = sub i32 -1, %v2_1705c
  %v2_17080 = xor i32 %v2_17060, %v1_17078
  %v2_17088 = and i32 %v2_17080, -2130640640
  %v2_17090 = icmp eq i32 %v2_17088, 0
  br i1 %v2_17090, label %dec_label_pc_17054, label %dec_label_pc_17098

dec_label_pc_17098:                               ; preds = %dec_label_pc_17054, %dec_label_pc_17090
  %v2_17098 = inttoptr i32 %v0_170b8 to i8*
  %v3_17098 = load i8, i8* %v2_17098, align 1
  %v4_17098 = zext i8 %v3_17098 to i32
  %v9_1709c = icmp eq i32 %v4_17098, %v1_17020
  br i1 %v9_1709c, label %dec_label_pc_170fc, label %dec_label_pc_170a8

dec_label_pc_170a8:                               ; preds = %dec_label_pc_17098
  %v2_170a8 = icmp eq i8 %v3_17098, 0
  br i1 %v2_170a8, label %dec_label_pc_170f8, label %dec_label_pc_170b0

dec_label_pc_170b0:                               ; preds = %dec_label_pc_170a8
  %v1_170b0 = add i32 %v0_170b8, 1
  %v2_170b0 = inttoptr i32 %v1_170b0 to i8*
  %v3_170b0 = load i8, i8* %v2_170b0, align 1
  %v4_170b0 = zext i8 %v3_170b0 to i32
  %v9_170b4 = icmp eq i32 %v4_170b0, %v1_17020
  br i1 %v9_170b4, label %dec_label_pc_170fc, label %dec_label_pc_170c0

dec_label_pc_170c0:                               ; preds = %dec_label_pc_170b0
  %v2_170c0 = icmp eq i8 %v3_170b0, 0
  br i1 %v2_170c0, label %dec_label_pc_170f8, label %dec_label_pc_170c8

dec_label_pc_170c8:                               ; preds = %dec_label_pc_170c0
  %v1_170c8 = add i32 %v0_170b8, 2
  %v2_170c8 = inttoptr i32 %v1_170c8 to i8*
  %v3_170c8 = load i8, i8* %v2_170c8, align 1
  %v4_170c8 = zext i8 %v3_170c8 to i32
  %v9_170cc = icmp eq i32 %v4_170c8, %v1_17020
  br i1 %v9_170cc, label %dec_label_pc_170fc, label %dec_label_pc_170d8

dec_label_pc_170d8:                               ; preds = %dec_label_pc_170c8
  %v2_170d8 = icmp eq i8 %v3_170c8, 0
  br i1 %v2_170d8, label %dec_label_pc_170f8, label %dec_label_pc_170e0

dec_label_pc_170e0:                               ; preds = %dec_label_pc_170d8
  %v1_170e0 = add i32 %v0_170b8, 3
  %v2_170e0 = inttoptr i32 %v1_170e0 to i8*
  %v3_170e0 = load i8, i8* %v2_170e0, align 1
  %v4_170e0 = zext i8 %v3_170e0 to i32
  %v9_170e4 = icmp eq i32 %v4_170e0, %v1_17020
  br i1 %v9_170e4, label %dec_label_pc_170fc, label %dec_label_pc_170f0

dec_label_pc_170f0:                               ; preds = %dec_label_pc_170e0
  %v2_170f0 = icmp eq i8 %v3_170e0, 0
  br i1 %v2_170f0, label %dec_label_pc_170f8, label %dec_label_pc_17054

dec_label_pc_170f8:                               ; preds = %dec_label_pc_17034, %dec_label_pc_170f0, %dec_label_pc_170d8, %dec_label_pc_170c0, %dec_label_pc_170a8
  br label %dec_label_pc_170fc

dec_label_pc_170fc:                               ; preds = %dec_label_pc_17028, %dec_label_pc_170e0, %dec_label_pc_170c8, %dec_label_pc_170b0, %dec_label_pc_17098, %dec_label_pc_170f8
  %v1_17100 = phi i32 [ 0, %dec_label_pc_170f8 ], [ %v1_170e0, %dec_label_pc_170e0 ], [ %v1_170c8, %dec_label_pc_170c8 ], [ %v1_170b0, %dec_label_pc_170b0 ], [ %v0_170b8, %dec_label_pc_17098 ], [ %v0_1703c, %dec_label_pc_17028 ]
  ret i32 %v1_17100

; uselistorder directives
  uselistorder i32 %v4_17054, { 1, 0 }
  uselistorder i32 %v2_17054, { 0, 2, 1 }
  uselistorder i32 %v0_170b8, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_17048, { 1, 0 }
  uselistorder i32 %v1_1703c, { 1, 0, 2 }
  uselistorder i32 %v0_170403, { 2, 1, 0 }
  uselistorder i32 %v1_17020, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 3, { 3, 4, 1, 5, 65, 66, 116, 67, 68, 69, 70, 71, 72, 75, 76, 117, 7, 112, 29, 113, 28, 114, 43, 115, 73, 44, 82, 32, 77, 78, 2, 79, 80, 81, 45, 8, 74, 83, 46, 84, 30, 85, 31, 86, 47, 87, 48, 33, 49, 50, 51, 52, 0, 88, 89, 90, 10, 9, 53, 91, 34, 92, 12, 11, 54, 93, 35, 94, 56, 95, 14, 13, 55, 96, 36, 97, 58, 98, 16, 15, 57, 99, 37, 100, 59, 18, 17, 60, 102, 38, 103, 20, 19, 61, 39, 104, 22, 21, 62, 105, 40, 106, 24, 23, 63, 107, 41, 108, 26, 25, 64, 109, 42, 110, 27, 111, 6, 101 }
  uselistorder i32 2130640639, { 0, 2, 1, 3 }
  uselistorder i32 65536, { 4, 5, 7, 6, 12, 8, 13, 9, 14, 10, 15, 11, 16, 17, 18, 22, 19, 23, 20, 24, 21, 25, 142, 26, 27, 28, 29, 30, 31, 32, 33, 140, 34, 36, 35, 37, 2, 38, 0, 3, 39, 40, 42, 41, 1, 45, 43, 44, 46, 48, 47, 51, 52, 53, 49, 50, 54, 55, 57, 58, 59, 56, 60, 61, 63, 62, 65, 64, 66, 67, 69, 68, 71, 70, 76, 72, 77, 73, 78, 74, 75, 79, 80, 81, 82, 84, 85, 83, 141, 87, 86, 90, 91, 92, 88, 89, 93, 100, 94, 101, 95, 102, 96, 103, 97, 104, 98, 99, 106, 105, 107, 108, 109, 110, 115, 111, 116, 112, 117, 113, 114, 119, 118, 120, 121, 122, 125, 123, 126, 124, 127, 128, 129, 130, 131, 133, 134, 132, 135, 137, 138, 136, 139 }
  uselistorder label %dec_label_pc_170fc, { 5, 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_170f8, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_17098, { 1, 0 }
  uselistorder label %dec_label_pc_17028, { 1, 0 }
}

define i32 @function_1710c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1710c:
  %stack_var_-68 = alloca i32, align 4
  %v2_17114 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_17114, i32* @r1, align 4
  %v0_17118 = call i32 @function_17130()
  %v1_1711c = sub i32 1, %v0_17118
  %v2_1711c = icmp ult i32 %v0_17118, 2
  br i1 %v2_1711c, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_1710c
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_1710c, %bb
  %v1_1712c = phi i32 [ %v1_1711c, %dec_label_pc_1710c ], [ 0, %bb ]
  ret i32 %v1_1712c

; uselistorder directives
  uselistorder i32 %v0_17118, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_17130() local_unnamed_addr {
dec_label_pc_17130:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_1()
  %stack_var_-35 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_17130 = load i32, i32* @r4, align 4
  %v6_17130 = load i32, i32* @r5, align 4
  %v2_17138 = ptrtoint i32* %stack_var_-52 to i32
  %v0_1713c = load i32, i32* @r1, align 4
  store i32 %v0_1713c, i32* @r4, align 4
  store i32 21505, i32* %r1.global-to-local, align 4
  %v0_17148 = load i32, i32* @r0, align 4
  %v3_17148 = call i32 @function_12310(i32 %v0_17148, i32 21505, i32 %v2_17138)
  store i32 %v3_17148, i32* %r0.global-to-local, align 4
  store i32 %v3_17148, i32* @r5, align 4
  %v2_1714c = icmp eq i32 %v3_17148, 0
  br i1 %v2_1714c, label %dec_label_pc_17154, label %dec_label_pc_17198

dec_label_pc_17154:                               ; preds = %dec_label_pc_17130
  %v4_17160 = zext i8 %tmp to i32
  store i32 %v4_17160, i32* @ip, align 4
  %v3_17164 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_17164, i32* @r3, align 4
  %v1_17168 = load i32, i32* @r4, align 4
  %v2_17168 = add i32 %v1_17168, 4
  %v3_17168 = inttoptr i32 %v2_17168 to i32*
  %v0_1716c = load i32, i32* %r1.global-to-local, align 4
  %v1_1716c = load i32, i32* @r4, align 4
  %v2_1716c = add i32 %v1_1716c, 8
  %v3_1716c = inttoptr i32 %v2_1716c to i32*
  store i32 %v0_1716c, i32* %v3_1716c, align 4
  %v0_17170 = load i32, i32* %r0.global-to-local, align 4
  %v1_17170 = load i32, i32* @r4, align 4
  %v2_17170 = add i32 %v1_17170, 12
  %v3_17170 = inttoptr i32 %v2_17170 to i32*
  store i32 %v0_17170, i32* %v3_17170, align 4
  %v2_17174 = ptrtoint i32* %stack_var_-35 to i32
  store i32 %v2_17174, i32* @r1, align 4
  %v1_1717c = load i32, i32* @r4, align 4
  %v2_1717c = inttoptr i32 %v1_1717c to i32*
  store i32 %v3_17164, i32* %v2_1717c, align 4
  %v0_17180 = load i32, i32* @ip, align 4
  %v1_17180 = trunc i32 %v0_17180 to i8
  %v2_17180 = load i32, i32* @r4, align 4
  %v3_17180 = add i32 %v2_17180, 16
  %v4_17180 = inttoptr i32 %v3_17180 to i8*
  store i8 %v1_17180, i8* %v4_17180, align 1
  %v0_17184 = load i32, i32* @r4, align 4
  %v1_17184 = add i32 %v0_17184, 17
  store i32 %v1_17184, i32* %r0.global-to-local, align 4
  %v4_17188 = call i32 @function_17674(i32 %v1_17184, i32 %v2_17174, i32 19, i32 %v3_17164)
  store i32 %v4_17188, i32* %r0.global-to-local, align 4
  %v0_1718c = load i32, i32* @r5, align 4
  store i32 %v0_1718c, i32* %r1.global-to-local, align 4
  store i32 13, i32* @r2, align 4
  %v2_17194 = inttoptr i32 %v4_17188 to i8*
  %v3_17194 = call i32 @function_12820(i8* %v2_17194, i32 %v0_1718c)
  store i32 %v3_17194, i32* %r0.global-to-local, align 4
  %v0_17198.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17198

dec_label_pc_17198:                               ; preds = %dec_label_pc_17130, %dec_label_pc_17154
  %v0_17198 = phi i32 [ %v3_17148, %dec_label_pc_17130 ], [ %v0_17198.pre, %dec_label_pc_17154 ]
  store i32 %v0_17198, i32* %r0.global-to-local, align 4
  store i32 %v3_17130, i32* @r4, align 4
  store i32 %v6_17130, i32* @r5, align 4
  ret i32 %v0_17198

; uselistorder directives
  uselistorder i32 %v0_17198, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 5, 2, 3, 4 }
  uselistorder i32 (i8*, i32)* @function_12820, { 2, 3, 4, 5, 0, 1, 11, 10, 9, 6, 7, 8 }
  uselistorder i32 13, { 28, 25, 0, 1, 30, 31, 29, 32, 26, 33, 27, 7, 34, 2, 8, 9, 10, 11, 12, 13, 14, 15, 16, 4, 3, 17, 18, 19, 20, 21, 22, 35, 36, 37, 38, 39, 40, 41, 23, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 24, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 5, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 6, 72, 73 }
  uselistorder i32 17, { 14, 1, 4, 15, 13, 16, 5, 6, 7, 8, 2, 17, 3, 18, 19, 9, 20, 10, 21, 22, 23, 0, 24, 11, 25, 12 }
  uselistorder i32 (i32, i32, i32)* @function_12310, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17198, { 1, 0 }
}

define i32 @function_171ac() local_unnamed_addr {
dec_label_pc_171ac:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_171ac = load i32, i32* @r4, align 4
  store i32 %v3_171ac, i32* %stack_var_-28, align 4
  %v0_171b4 = load i32, i32* @r0, align 4
  %v2_171b4 = icmp eq i32 %v0_171b4, 0
  %v0_171bc = load i32, i32* @r1, align 4
  br i1 %v2_171b4, label %dec_label_pc_17290, label %dec_label_pc_171c4

dec_label_pc_171c4:                               ; preds = %dec_label_pc_171ac
  br label %dec_label_pc_171dc

dec_label_pc_171dc:                               ; preds = %dec_label_pc_171c4, %dec_label_pc_17254
  %v1_17254 = phi i32 [ 0, %dec_label_pc_171c4 ], [ %v5_17254, %dec_label_pc_17254 ]
  %v0_17258 = phi i32 [ 1, %dec_label_pc_171c4 ], [ %v1_17258, %dec_label_pc_17254 ]
  %v0_171dc = phi i32 [ %v0_171b4, %dec_label_pc_171c4 ], [ %v0_171dc12, %dec_label_pc_17254 ]
  %v1_171dc = inttoptr i32 %v0_171dc to i8*
  %v2_171dc = load i8, i8* %v1_171dc, align 1
  %v3_171dc = zext i8 %v2_171dc to i32
  %v4_171e0 = load i32, i32* inttoptr (i32 98540 to i32*), align 4
  %v2_171e4 = mul nuw nsw i32 %v3_171dc, 2
  %v2_171e8 = add i32 %v2_171e4, %v4_171e0
  %v3_171e8 = inttoptr i32 %v2_171e8 to i16*
  %v4_171e8 = load i16, i16* %v3_171e8, align 2
  %v1_171ec = and i16 %v4_171e8, 8
  %v2_171ec = icmp eq i16 %v1_171ec, 0
  br i1 %v2_171ec, label %dec_label_pc_17290, label %dec_label_pc_171f4

dec_label_pc_171f4:                               ; preds = %dec_label_pc_171dc
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_17214

dec_label_pc_171fc:                               ; preds = %dec_label_pc_17214
  %v2_171fc = mul i32 %v0_17254, 10
  %v1_17200 = add i32 %v2_171fc, -48
  %v2_17204 = add i32 %v3_17214, %v1_17200
  store i32 %v2_17204, i32* @ip, align 4
  %v8_1720c = icmp sgt i32 %v2_17204, 255
  br i1 %v8_1720c, label %dec_label_pc_17290, label %dec_label_pc_17210

dec_label_pc_17210:                               ; preds = %dec_label_pc_171fc
  %v1_17210 = add i32 %v0_17244, 1
  store i32 %v1_17210, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17214

dec_label_pc_17214:                               ; preds = %dec_label_pc_171f4, %dec_label_pc_17210
  %v0_17254 = phi i32 [ 0, %dec_label_pc_171f4 ], [ %v2_17204, %dec_label_pc_17210 ]
  %v0_17244 = phi i32 [ %v0_171dc, %dec_label_pc_171f4 ], [ %v1_17210, %dec_label_pc_17210 ]
  %v1_17214 = inttoptr i32 %v0_17244 to i8*
  %v2_17214 = load i8, i8* %v1_17214, align 1
  %v3_17214 = zext i8 %v2_17214 to i32
  %v2_17218 = mul nuw nsw i32 %v3_17214, 2
  %v2_1721c = add i32 %v2_17218, %v4_171e0
  %v3_1721c = inttoptr i32 %v2_1721c to i16*
  %v4_1721c = load i16, i16* %v3_1721c, align 2
  %v6_1721c = zext i16 %v4_1721c to i32
  %v1_17220 = and i32 %v6_1721c, 8
  %v2_17220 = icmp eq i32 %v1_17220, 0
  br i1 %v2_17220, label %dec_label_pc_17228, label %dec_label_pc_171fc

dec_label_pc_17228:                               ; preds = %dec_label_pc_17214
  %v7_17228 = icmp eq i32 %v0_17258, 4
  br i1 %v7_17228, label %dec_label_pc_17240, label %dec_label_pc_17230

dec_label_pc_17230:                               ; preds = %dec_label_pc_17228
  %v7_17230 = icmp eq i8 %v2_17214, 46
  br i1 %v7_17230, label %dec_label_pc_17238, label %dec_label_pc_17290

dec_label_pc_17238:                               ; preds = %dec_label_pc_17230
  %v1_17238 = add i32 %v0_17244, 1
  store i32 %v1_17238, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17254

dec_label_pc_17240:                               ; preds = %dec_label_pc_17228
  %v2_17240 = icmp eq i8 %v2_17214, 0
  %v1_17244 = add i32 %v0_17244, 1
  store i32 %v1_17244, i32* %r0.global-to-local, align 4
  br i1 %v2_17240, label %dec_label_pc_17254, label %dec_label_pc_1724c

dec_label_pc_1724c:                               ; preds = %dec_label_pc_17240
  %v1_1724c = and i32 %v6_1721c, 32
  %v2_1724c = icmp eq i32 %v1_1724c, 0
  br i1 %v2_1724c, label %dec_label_pc_17290, label %dec_label_pc_17254

dec_label_pc_17254:                               ; preds = %dec_label_pc_1724c, %dec_label_pc_17240, %dec_label_pc_17238
  %v0_171dc12 = phi i32 [ %v1_17244, %dec_label_pc_1724c ], [ %v1_17244, %dec_label_pc_17240 ], [ %v1_17238, %dec_label_pc_17238 ]
  %v4_17254 = mul i32 %v1_17254, 256
  %v5_17254 = or i32 %v0_17254, %v4_17254
  %v1_17258 = add nuw nsw i32 %v0_17258, 1
  %v7_17260 = icmp slt i32 %v1_17258, 5
  br i1 %v7_17260, label %dec_label_pc_171dc, label %dec_label_pc_17264

dec_label_pc_17264:                               ; preds = %dec_label_pc_17254
  %v2_17264 = icmp eq i32 %v0_171bc, 0
  br i1 %v2_17264, label %.thread7.thread, label %bb

.thread7.thread:                                  ; preds = %dec_label_pc_17264
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17294

bb:                                               ; preds = %dec_label_pc_17264
  %v4_17268 = udiv i32 %v5_17254, 16777216
  %v2_1726c = udiv i32 %v5_17254, 256
  %v5_17270 = and i32 %v2_1726c, 65280
  %v2_17274 = and i32 %v5_17254, 65280
  %v5_17278 = mul nuw nsw i32 %v2_17274, 256
  %v5_1727c = mul i32 %v0_17254, 16777216
  %v6_17270 = or i32 %v4_17268, %v5_1727c
  %v6_17278 = or i32 %v6_17270, %v5_17270
  %v6_1727c = or i32 %v6_17278, %v5_17278
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_17288 = inttoptr i32 %v0_171bc to i32*
  store i32 %v6_1727c, i32* %v3_17288, align 4
  %v2_17294.pre = load i32, i32* %stack_var_-28, align 4
  %v1_17298.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17294

dec_label_pc_17290:                               ; preds = %dec_label_pc_17230, %dec_label_pc_1724c, %dec_label_pc_171dc, %dec_label_pc_171fc, %dec_label_pc_171ac
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17294

dec_label_pc_17294:                               ; preds = %.thread7.thread, %bb, %dec_label_pc_17290
  %v1_17298 = phi i32 [ %v1_17298.pre, %bb ], [ 0, %dec_label_pc_17290 ], [ 1, %.thread7.thread ]
  %v2_17294 = phi i32 [ %v2_17294.pre, %bb ], [ %v3_171ac, %dec_label_pc_17290 ], [ %v3_171ac, %.thread7.thread ]
  store i32 %v2_17294, i32* @r4, align 4
  ret i32 %v1_17298

; uselistorder directives
  uselistorder i32 %v1_17258, { 1, 0 }
  uselistorder i32 %v5_17254, { 2, 0, 1, 3 }
  uselistorder i32 %v0_17244, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1, 6, 3, 4, 5 }
  uselistorder i32 65280, { 62, 1, 7, 0, 50, 2, 3, 51, 52, 8, 9, 4, 10, 53, 54, 41, 11, 12, 13, 14, 15, 44, 45, 42, 43, 55, 56, 57, 48, 49, 46, 47, 58, 59, 60, 16, 17, 18, 19, 20, 63, 64, 21, 22, 23, 65, 24, 25, 66, 26, 27, 28, 29, 67, 30, 31, 68, 32, 33, 34, 35, 69, 70, 36, 37, 38, 39, 40, 71, 5, 72, 6, 61 }
  uselistorder i32 16777216, { 0, 1, 76, 75, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 22, 24, 25, 27, 26, 28, 29, 30, 31, 33, 32, 35, 34, 37, 36, 38, 39, 40, 44, 41, 45, 42, 43, 46, 47, 49, 48, 50, 51, 53, 52, 58, 54, 59, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77 }
  uselistorder i32 5, { 14, 0, 51, 4, 29, 30, 16, 25, 17, 26, 18, 27, 15, 28, 2, 1, 31, 32, 24, 19, 33, 34, 20, 21, 22, 5, 35, 6, 36, 37, 7, 38, 39, 8, 40, 44, 9, 45, 10, 46, 11, 47, 12, 48, 13, 49, 3, 50, 41, 23, 42, 43 }
  uselistorder i32 32, { 95, 45, 43, 83, 84, 85, 86, 92, 93, 79, 80, 81, 82, 102, 2, 90, 91, 46, 47, 51, 48, 52, 49, 53, 50, 54, 55, 98, 99, 56, 100, 64, 65, 63, 66, 67, 68, 69, 70, 71, 58, 59, 3, 60, 4, 61, 6, 5, 57, 62, 72, 101, 8, 7, 10, 9, 12, 11, 44, 73, 94, 14, 13, 16, 15, 18, 17, 20, 19, 77, 87, 78, 22, 21, 23, 25, 24, 26, 27, 29, 28, 88, 89, 30, 31, 74, 32, 33, 34, 75, 35, 0, 36, 1, 37, 96, 38, 97, 39, 40, 41, 42, 76 }
  uselistorder i8 0, { 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 26, 25, 18, 27, 3, 16, 4, 28, 30, 29, 19, 31, 32, 20, 33, 34, 0, 17, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 1, 49, 50, 51, 22, 52, 55, 23, 53, 54, 21, 56, 57, 58, 59, 60, 2, 61, 24, 62, 63, 64, 65, 66, 67, 68 }
  uselistorder i8 46, { 0, 2, 1 }
  uselistorder i32 255, { 19, 32, 20, 0, 1, 2, 23, 25, 24, 21, 26, 27, 5, 22, 28, 7, 29, 6, 4, 8, 9, 30, 3, 31, 10, 13, 14, 12, 15, 11, 16, 17, 18 }
  uselistorder i32 10, { 3, 28, 29, 30, 6, 49, 51, 50, 0, 46, 47, 80, 52, 1, 36, 8, 31, 33, 9, 32, 10, 34, 11, 35, 25, 4, 37, 26, 27, 38, 24, 39, 12, 40, 13, 41, 14, 42, 15, 43, 16, 44, 45, 17, 18, 19, 48, 7, 53, 54, 55, 56, 57, 58, 59, 20, 60, 61, 62, 21, 63, 64, 65, 2, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 5, 79, 22, 81, 23 }
  uselistorder i16 0, { 0, 1, 2, 3, 7, 8, 4, 9, 10, 11, 12, 13, 14, 15, 16, 5, 17, 6, 18, 19, 20, 21 }
  uselistorder i32 2, { 5, 6, 161, 71, 72, 68, 299, 300, 82, 301, 302, 73, 303, 304, 166, 162, 167, 163, 7, 97, 8, 168, 9, 74, 10, 11, 305, 78, 289, 12, 13, 290, 14, 15, 67, 286, 16, 17, 18, 287, 291, 19, 20, 21, 22, 83, 292, 293, 23, 24, 0, 164, 294, 25, 295, 98, 26, 160, 27, 28, 29, 30, 31, 99, 101, 100, 75, 76, 102, 188, 189, 106, 182, 107, 183, 108, 184, 109, 185, 110, 186, 111, 187, 103, 190, 104, 170, 172, 91, 169, 105, 171, 173, 174, 175, 176, 177, 90, 178, 89, 179, 88, 180, 87, 181, 84, 32, 33, 191, 194, 195, 112, 34, 35, 36, 37, 38, 196, 39, 40, 159, 197, 113, 198, 115, 192, 114, 193, 93, 199, 80, 79, 116, 92, 200, 117, 201, 41, 42, 118, 202, 203, 119, 94, 120, 121, 122, 123, 124, 125, 126, 127, 77, 81, 204, 205, 206, 207, 208, 209, 210, 211, 212, 1, 43, 44, 45, 46, 47, 48, 128, 213, 95, 214, 215, 216, 217, 218, 219, 2, 49, 50, 51, 52, 53, 54, 130, 220, 129, 221, 222, 223, 224, 225, 226, 132, 227, 133, 228, 134, 229, 55, 3, 56, 57, 58, 59, 60, 135, 230, 131, 231, 232, 233, 234, 235, 236, 137, 237, 138, 238, 139, 239, 61, 4, 62, 63, 64, 65, 66, 140, 240, 136, 241, 243, 244, 245, 246, 247, 248, 142, 249, 141, 250, 251, 252, 253, 254, 255, 143, 96, 256, 257, 69, 258, 259, 260, 261, 262, 263, 145, 144, 264, 265, 70, 266, 267, 147, 268, 148, 269, 270, 271, 272, 273, 149, 274, 146, 275, 276, 277, 278, 279, 280, 151, 281, 150, 282, 283, 285, 152, 284, 153, 154, 296, 298, 155, 297, 156, 157, 85, 288, 158, 86, 242, 165 }
  uselistorder label %dec_label_pc_17294, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17290, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_17214, { 1, 0 }
  uselistorder label %dec_label_pc_171dc, { 1, 0 }
}

define i32 @function_1729c(i64* %arg1) local_unnamed_addr {
dec_label_pc_1729c:
  %tmp = ptrtoint i64* %arg1 to i32
  %v0_1729c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1729c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1729c
  %v3_1729c = load i32, i32* @lr, align 4
  %v8_1729c = ashr i32 %tmp, %v3_1729c
  %v9_1729c = and i32 %v8_1729c, %tmp
  %v2_172a0 = inttoptr i32 %v9_1729c to i64*
  %v3_172a0 = load i64, i64* %v2_172a0, align 4
  %v4_172a0 = load i32, i32* @ip, align 4
  %v6_172a0 = udiv i64 %v3_172a0, 4294967296
  %v7_172a0 = trunc i64 %v6_172a0 to i32
  %v9_172a0 = sub i32 %v7_172a0, %v4_172a0
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1729c, %bb
  %v10_172a0 = phi i32 [ %tmp, %dec_label_pc_1729c ], [ %v9_172a0, %bb ]
  ret i32 %v10_172a0

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* @lr, { 1, 146, 147, 148, 149, 150, 151, 152, 153, 154, 3, 4, 5, 6, 7, 8, 9, 10, 11, 2, 71, 72, 31, 155, 156, 12, 13, 119, 120, 121, 122, 123, 124, 116, 117, 118, 125, 138, 139, 126, 127, 128, 129, 130, 131, 132, 0, 133, 134, 136, 137, 135, 40, 41, 42, 43, 44, 45, 140, 141, 142, 46, 105, 73, 14, 15, 16, 17, 18, 19, 23, 24, 20, 21, 22, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 143, 144, 145, 69, 70 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_172a4(i32 %arg1) local_unnamed_addr {
dec_label_pc_172a4:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 98320, i32* %r2.global-to-local, align 4
  %v4_172b0 = load i32, i32* inttoptr (i32 98420 to i32*), align 4
  %v4_172b8 = load i32, i32* inttoptr (i32 98384 to i32*), align 16
  store i32 %v4_172b8, i32* %r1.global-to-local, align 4
  %v1_172bc = add i32 %arg1, 44
  %v2_172bc = inttoptr i32 %v1_172bc to i32*
  %v3_172bc = load i32, i32* %v2_172bc, align 4
  %v1_172c0 = add i32 %arg1, 28
  %v2_172c0 = inttoptr i32 %v1_172c0 to i32*
  %v3_172c0 = load i32, i32* %v2_172c0, align 4
  store i32 %v3_172c0, i32* %r2.global-to-local, align 4
  %v2_172c4 = inttoptr i32 %v4_172b0 to i32*
  store i32 %v3_172bc, i32* %v2_172c4, align 4
  %v0_172c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_172c8 = load i32, i32* %r1.global-to-local, align 4
  %v2_172c8 = inttoptr i32 %v1_172c8 to i32*
  store i32 %v0_172c8, i32* %v2_172c8, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 44, { 41, 0, 1, 3, 4, 5, 2, 6, 7, 8, 13, 9, 15, 12, 25, 26, 27, 28, 29, 30, 22, 23, 24, 20, 21, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 10, 11, 14, 16, 17, 18, 19 }
  uselistorder i32 98320, { 46, 0, 47, 48, 1, 2, 49, 3, 4, 5, 50, 51, 6, 7, 52, 8, 53, 54, 55, 56, 57, 9, 12, 13, 11, 10, 14, 15, 41, 37, 35, 34, 36, 38, 39, 40, 33, 42, 28, 30, 29, 27, 26, 31, 32, 23, 22, 25, 24, 21, 20, 19, 18, 43, 44, 45, 58, 59, 60, 16, 17 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_172d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_172d0:
  %v0_172d0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_172d0, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_172d0
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_172d0, %bb
  %v4_172d8 = phi i32 [ %arg1, %dec_label_pc_172d0 ], [ 0, %bb ]
  ret i32 %v4_172d8

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_172dc(i32 %arg1) local_unnamed_addr {
dec_label_pc_17318:
  store i32 %arg1, i32* inttoptr (i32 107216 to i32*), align 16
  ret i32 0
}

define i32 @function_17320(i32 %arg1) local_unnamed_addr {
dec_label_pc_17320:
  %v0_17320 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17320, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_17320
  %v2_17320 = load i32, i32* @r4, align 4
  %v5_17320 = udiv i32 %v2_17320, 67108864
  %v6_17320 = and i32 %v5_17320, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_17320, %bb
  %v7_17324 = phi i32 [ %arg1, %dec_label_pc_17320 ], [ %v6_17320, %bb ]
  ret i32 %v7_17324

; uselistorder directives
  uselistorder i1* @cpsr_z, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 36, 17, 18, 19, 20, 32, 33, 34, 35, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 0, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_17328(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17328:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17328 = load i32, i32* @r7, align 4
  store i32 %v3_17328, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_17350, label %dec_label_pc_17340

dec_label_pc_17340:                               ; preds = %dec_label_pc_17328
  %v0_17340 = call i32 @function_127c4()
  %v0_17344 = load i32, i32* %r7.global-to-local, align 4
  %v1_17344 = sub i32 0, %v0_17344
  %v2_17348 = inttoptr i32 %v0_17340 to i32*
  store i32 %v1_17344, i32* %v2_17348, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_17354.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_17350

dec_label_pc_17350:                               ; preds = %dec_label_pc_17328, %dec_label_pc_17340
  %v2_17354 = phi i32 [ %v3_17328, %dec_label_pc_17328 ], [ %v2_17354.pre, %dec_label_pc_17340 ]
  %v0_17350 = phi i32 [ %arg1, %dec_label_pc_17328 ], [ -1, %dec_label_pc_17340 ]
  store i32 %v2_17354, i32* %r7.global-to-local, align 4
  ret i32 %v0_17350

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17350, { 1, 0 }
}

define i32 @function_1735c(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1735c:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_17360 = load i32, i32* @r4, align 4
  %v6_17360 = load i32, i32* @r5, align 4
  %v12_17360 = load i32, i32* @r7, align 4
  %v1_17364 = add i32 %arg3, 14
  %v2_1736c = ptrtoint i32* %stack_var_-72 to i32
  %v1_17370 = and i32 %v1_17364, -8
  %v2_17374 = sub i32 %v2_1736c, %v1_17370
  %v1_17378 = add i32 %v2_17374, 8
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %v1_17378, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp25 = icmp ult i32 %arg1, -4095
  br i1 %tmp25, label %dec_label_pc_173b4, label %dec_label_pc_173a0

dec_label_pc_173a0:                               ; preds = %dec_label_pc_1735c
  %v0_173a0 = call i32 @function_127c4()
  %v0_173a4 = load i32, i32* %r4.global-to-local, align 4
  %v1_173a4 = sub i32 0, %v0_173a4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_173ac = inttoptr i32 %v0_173a0 to i32*
  store i32 %v1_173a4, i32* %v2_173ac, align 4
  %v0_173bc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_173bc

dec_label_pc_173b4:                               ; preds = %dec_label_pc_1735c
  br i1 false, label %dec_label_pc_173bc, label %dec_label_pc_173c4

dec_label_pc_173bc:                               ; preds = %dec_label_pc_173b4, %dec_label_pc_173a0
  %v0_173bc = phi i32 [ -1, %dec_label_pc_173b4 ], [ %v0_173bc.pre, %dec_label_pc_173a0 ]
  store i32 %v0_173bc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17490

dec_label_pc_173c4:                               ; preds = %dec_label_pc_173b4
  %v2_173c4 = add i32 %v1_17378, %arg1
  %v2_173c8 = add i32 %tmp, %arg3
  store i32 %v2_173c8, i32* @ip, align 4
  store i32 %v1_17378, i32* @r7, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_17478

dec_label_pc_173e4:                               ; preds = %dec_label_pc_17478
  %v1_173e4 = add i32 %v0_17438, 16
  %v2_173e4 = inttoptr i32 %v1_173e4 to i16*
  %v3_173e4 = load i16, i16* %v2_173e4, align 2
  %v4_173e4 = zext i16 %v3_173e4 to i32
  %v1_173e8 = add nuw nsw i32 %v4_173e4, 7
  %v1_173ec = and i32 %v1_173e8, 131064
  store i32 %v1_173ec, i32* %r2.global-to-local, align 4
  %v2_173f4 = add i32 %v1_173ec, %v0_17440
  store i32 %v2_173f4, i32* %r8.global-to-local, align 4
  %tmp26 = icmp ugt i32 %v2_173f4, %v2_173c8
  br i1 %tmp26, label %dec_label_pc_17400, label %dec_label_pc_17434

dec_label_pc_17400:                               ; preds = %dec_label_pc_173e4
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_17408 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_17408, i32* %r2.global-to-local, align 4
  %v0_1740c = load i32, i32* %sl.global-to-local, align 4
  %v1_17410 = load i32, i32* @sp, align 4
  %v2_17410 = inttoptr i32 %v1_17410 to i32*
  store i32 0, i32* %v2_17410, align 4
  %v4_17414 = call i32 @function_17698(i32 %arg1, i32 0, i32 %v0_17408, i32 %v0_1740c)
  %v0_17418 = load i32, i32* @r5, align 4
  %v1_17418 = load i32, i32* %r6.global-to-local, align 4
  %v9_17418 = icmp eq i32 %v0_17418, %v1_17418
  br i1 %v9_17418, label %dec_label_pc_17420, label %dec_label_pc_1748c

dec_label_pc_17420:                               ; preds = %dec_label_pc_17400
  %v0_17420 = call i32 @function_127c4()
  store i32 -1, i32* %r1.global-to-local, align 4
  %v2_1742c = inttoptr i32 %v0_17420 to i32*
  store i32 22, i32* %v2_1742c, align 4
  %v0_17490.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17490

dec_label_pc_17434:                               ; preds = %dec_label_pc_173e4
  %v1_17434 = inttoptr i32 %v0_17438 to i32*
  %v2_17434 = load i32, i32* %v1_17434, align 4
  %v3_17434 = add i32 %v0_17438, 4
  %v4_17434 = inttoptr i32 %v3_17434 to i32*
  %v5_17434 = load i32, i32* %v4_17434, align 4
  store i32 %v5_17434, i32* %r4.global-to-local, align 4
  %v1_17438 = add i32 %v0_17438, 8
  store i32 %v1_17438, i32* %sb.global-to-local, align 4
  %v1_1743c = inttoptr i32 %v1_17438 to i32*
  %v2_1743c = load i32, i32* %v1_1743c, align 4
  store i32 %v2_1743c, i32* %sb.global-to-local, align 4
  %v3_1743c = add i32 %v0_17438, 12
  %v4_1743c = inttoptr i32 %v3_1743c to i32*
  %v5_1743c = load i32, i32* %v4_1743c, align 4
  store i32 %v5_1743c, i32* %sl.global-to-local, align 4
  %v1_17440 = inttoptr i32 %v0_17440 to i32*
  store i32 %v2_17434, i32* %v1_17440, align 4
  %v3_17440 = add i32 %v0_17440, 4
  %v4_17440 = inttoptr i32 %v3_17440 to i32*
  %v5_17440 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_17440, i32* %v4_17440, align 4
  %v0_17444 = load i32, i32* @r7, align 4
  %v1_17444 = add i32 %v0_17444, 8
  %v1_17448 = inttoptr i32 %v1_17444 to i32*
  %v2_17448 = load i32, i32* %v1_17448, align 4
  %v3_17448 = add i32 %v0_17444, 12
  %v4_17448 = inttoptr i32 %v3_17448 to i32*
  %v5_17448 = load i32, i32* %v4_17448, align 4
  store i32 %v5_17448, i32* @r4, align 4
  %v1_1744c = load i32, i32* @r5, align 4
  %v2_1744c = add i32 %v1_1744c, 8
  %v3_1744c = inttoptr i32 %v2_1744c to i32*
  store i32 %v2_17448, i32* %v3_1744c, align 4
  %v0_17450 = load i32, i32* @r4, align 4
  %v1_17450 = load i32, i32* @r5, align 4
  %v2_17450 = add i32 %v1_17450, 12
  %v3_17450 = inttoptr i32 %v2_17450 to i32*
  store i32 %v0_17450, i32* %v3_17450, align 4
  %v0_17454 = load i32, i32* %r2.global-to-local, align 4
  %v1_17454 = trunc i32 %v0_17454 to i16
  %v2_17454 = load i32, i32* @r5, align 4
  %v3_17454 = add i32 %v2_17454, 16
  %v4_17454 = inttoptr i32 %v3_17454 to i16*
  store i16 %v1_17454, i16* %v4_17454, align 2
  %v0_17458 = load i32, i32* @r7, align 4
  %v1_17458 = add i32 %v0_17458, 18
  %v2_17458 = inttoptr i32 %v1_17458 to i8*
  %v3_17458 = load i8, i8* %v2_17458, align 1
  %v4_17458 = zext i8 %v3_17458 to i32
  store i32 %v4_17458, i32* @r3, align 4
  %v2_1745c = load i32, i32* @r5, align 4
  %v3_1745c = add i32 %v2_1745c, 18
  %v4_1745c = inttoptr i32 %v3_1745c to i8*
  store i8 %v3_17458, i8* %v4_1745c, align 1
  %v0_17460 = load i32, i32* @r7, align 4
  %v1_17460 = add i32 %v0_17460, 16
  %v2_17460 = inttoptr i32 %v1_17460 to i16*
  %v3_17460 = load i16, i16* %v2_17460, align 2
  %v4_17460 = zext i16 %v3_17460 to i32
  %v1_17464 = add nsw i32 %v4_17460, -19
  store i32 %v1_17464, i32* @r2, align 4
  %v0_17468 = call i32 @function_128d0()
  %v0_1746c = load i32, i32* @r7, align 4
  %v1_1746c = add i32 %v0_1746c, 16
  %v2_1746c = inttoptr i32 %v1_1746c to i16*
  %v3_1746c = load i16, i16* %v2_1746c, align 2
  %v4_1746c = zext i16 %v3_1746c to i32
  %v0_17470 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_17470, i32* @r5, align 4
  %v2_17474 = add i32 %v4_1746c, %v0_1746c
  store i32 %v2_17474, i32* @r7, align 4
  br label %dec_label_pc_17478

dec_label_pc_17478:                               ; preds = %dec_label_pc_173c4, %dec_label_pc_17434
  %v0_17440 = phi i32 [ %tmp, %dec_label_pc_173c4 ], [ %v0_17470, %dec_label_pc_17434 ]
  %v0_17438 = phi i32 [ %v1_17378, %dec_label_pc_173c4 ], [ %v2_17474, %dec_label_pc_17434 ]
  %v3_1747c = icmp ult i32 %v0_17438, %v2_173c4
  %v1_17480 = add i32 %v0_17440, 19
  store i32 %v1_17480, i32* @r0, align 4
  %v1_17484 = add i32 %v0_17438, 19
  store i32 %v1_17484, i32* @r1, align 4
  br i1 %v3_1747c, label %dec_label_pc_173e4, label %dec_label_pc_1748c.loopexit

dec_label_pc_1748c.loopexit:                      ; preds = %dec_label_pc_17478
  %v0_1748c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1748c

dec_label_pc_1748c:                               ; preds = %dec_label_pc_1748c.loopexit, %dec_label_pc_17400
  %v1_1748c = phi i32 [ %v0_17440, %dec_label_pc_1748c.loopexit ], [ %v0_17418, %dec_label_pc_17400 ]
  %v0_1748c = phi i32 [ %v0_1748c.pre, %dec_label_pc_1748c.loopexit ], [ %v1_17418, %dec_label_pc_17400 ]
  %v2_1748c = sub i32 %v1_1748c, %v0_1748c
  store i32 %v2_1748c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17490

dec_label_pc_17490:                               ; preds = %dec_label_pc_17420, %dec_label_pc_173bc, %dec_label_pc_1748c
  %v0_17490 = phi i32 [ %v0_17490.pre, %dec_label_pc_17420 ], [ %v0_173bc, %dec_label_pc_173bc ], [ %v2_1748c, %dec_label_pc_1748c ]
  store i32 %v3_17360, i32* %r4.global-to-local, align 4
  store i32 %v6_17360, i32* @r5, align 4
  store i32 %v12_17360, i32* @r7, align 4
  ret i32 %v0_17490

; uselistorder directives
  uselistorder i32 %v0_17438, { 5, 6, 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_17440, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_17378, { 1, 2, 0, 3 }
  uselistorder i32 %tmp, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 19, { 12, 13, 0, 3, 14, 4, 15, 16, 9, 10, 11, 17, 5, 6, 7, 8, 1, 18, 2, 19 }
  uselistorder i32* @r3, { 7, 8, 50, 51, 82, 83, 2, 84, 85, 86, 3, 87, 88, 89, 4, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 0, 108, 109, 110, 111, 9, 6, 10, 11, 12, 13, 14, 52, 53, 112, 121, 122, 123, 116, 45, 46, 75, 76, 77, 78, 79, 80, 15, 16, 17, 127, 124, 125, 126, 1, 128, 129, 130, 117, 18, 74, 37, 38, 39, 118, 119, 120, 64, 54, 113, 114, 115, 47, 48, 49, 55, 56, 5, 70, 71, 72, 73, 32, 20, 22, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 40, 41, 43, 42, 81, 44, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69 }
  uselistorder i32 18, { 10, 11, 8, 12, 9, 0, 1, 2, 3, 13, 4, 14, 5, 15, 6, 16, 7, 17 }
  uselistorder i32 22, { 1, 0, 12, 2, 3, 4, 5, 6, 7, 13, 11, 14, 15, 8, 16, 9, 17, 10, 18 }
  uselistorder i32* @sp, { 2, 3, 0, 4, 1 }
  uselistorder i32 7, { 26, 23, 24, 14, 0, 1, 46, 15, 31, 16, 27, 17, 28, 18, 29, 19, 30, 2, 25, 32, 33, 20, 34, 21, 35, 4, 36, 5, 37, 6, 38, 7, 39, 22, 40, 8, 41, 9, 42, 10, 43, 11, 44, 12, 13, 3, 45 }
  uselistorder i32* @ip, { 10, 7, 36, 37, 11, 12, 63, 13, 14, 6, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 2, 97, 98, 99, 100, 101, 102, 103, 104, 105, 15, 0, 16, 17, 8, 18, 19, 20, 9, 106, 21, 59, 3, 53, 54, 55, 56, 57, 58, 60, 61, 62, 22, 110, 107, 108, 109, 1, 111, 29, 23, 24, 50, 51, 52, 44, 45, 46, 47, 48, 49, 38, 39, 40, 41, 42, 43, 25, 4, 26, 27, 28, 30, 31, 32, 33, 34, 35, 5 }
  uselistorder i1 false, { 0, 93, 94, 95, 106, 89, 92, 107, 108, 109, 110, 111, 2, 1, 96, 99, 98, 97, 100, 4, 8, 7, 86, 69, 103, 105, 90, 91, 85, 87, 88, 70, 71, 72, 73, 74, 68, 67, 66, 65, 5, 6, 75, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 19, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 76, 77, 78, 79, 80, 81, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 101, 3, 82, 83, 84, 104, 102, 112 }
  uselistorder i32 -8, { 37, 17, 18, 19, 20, 21, 22, 16, 15, 9, 14, 13, 12, 11, 23, 24, 25, 26, 27, 39, 28, 29, 30, 31, 32, 38, 40, 33, 41, 36, 10, 34, 35, 8, 0, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 14, { 22, 29, 41, 17, 18, 19, 0, 23, 24, 25, 26, 20, 21, 3, 27, 4, 28, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 30, 31, 16, 32, 33, 34, 35, 1, 36, 37, 38, 39, 2, 40 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_17490, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17478, { 1, 0 }
}

define i32 @function_174a0(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_174a0:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_174a0 = load i32, i32* @r4, align 4
  store i32 %v3_174a0, i32* %stack_var_-12, align 4
  %v0_174a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_174a4 = inttoptr i32 %v0_174a4 to i16*
  %v2_174a4 = load i16, i16* %v1_174a4, align 2
  %v3_174a4 = zext i16 %v2_174a4 to i32
  %v1_174a8 = and i32 %v3_174a4, 4
  store i32 %v1_174a8, i32* %r5.global-to-local, align 4
  %v2_174a8 = icmp eq i32 %v1_174a8, 0
  store i32 %v0_174a4, i32* %r4.global-to-local, align 4
  br i1 %v2_174a8, label %dec_label_pc_174bc, label %bb

bb:                                               ; preds = %dec_label_pc_174a0
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread7

dec_label_pc_174bc:                               ; preds = %dec_label_pc_174a0
  %v1_174bc = icmp slt i32 %arg2, 0
  br i1 %v1_174bc, label %bb18, label %bb19

bb18:                                             ; preds = %dec_label_pc_174bc
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_174bc, %bb18
  %v1_174c4 = add i32 %v0_174a4, 4
  %v2_174c4 = inttoptr i32 %v1_174c4 to i32*
  %v3_174c4 = load i32, i32* %v2_174c4, align 4
  store i32 %v3_174c4, i32* %r0.global-to-local, align 4
  %v1_174c8 = call i32 @function_12134(i32 %v3_174c4)
  store i32 %v1_174c8, i32* %r0.global-to-local, align 4
  %v5_174d0 = icmp sgt i32 %v1_174c8, 0
  br i1 %v5_174d0, label %.thread7, label %dec_label_pc_174d4

dec_label_pc_174d4:                               ; preds = %bb19
  %v2_174cc = icmp eq i32 %v1_174c8, 0
  %v0_174d4 = load i32, i32* %r4.global-to-local, align 4
  %v1_174d4 = inttoptr i32 %v0_174d4 to i16*
  %v2_174d4 = load i16, i16* %v1_174d4, align 2
  br i1 %v2_174cc, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_174d4
  %v2_174d8 = or i16 %v2_174d4, 4
  store i16 %v2_174d8, i16* %v1_174d4, align 2
  %v1_174f4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread7

bb21:                                             ; preds = %dec_label_pc_174d4
  %v2_174dc = or i16 %v2_174d4, 8
  store i16 %v2_174dc, i16* %v1_174d4, align 2
  %v1_174e8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_174e8, i32* %r0.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %bb20, %bb, %bb19, %bb21
  %v1_174f4 = phi i32 [ %v1_174f4.pre, %bb20 ], [ 0, %bb ], [ %v1_174c8, %bb19 ], [ %v1_174e8, %bb21 ]
  %v2_174f0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_174f0, i32* @r4, align 4
  ret i32 %v1_174f4

; uselistorder directives
  uselistorder i16 %v2_174d4, { 1, 0 }
  uselistorder i32 %v1_174c8, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 6, 3, 4, 0, 1 }
  uselistorder i32 (i32)* @function_12134, { 4, 1, 3, 0, 2 }
  uselistorder label %.thread7, { 3, 0, 2, 1 }
  uselistorder label %bb19, { 1, 0 }
}

define i32 @function_174f8(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_174f8:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_174f8 = load i32, i32* @r4, align 4
  store i32 %v3_174f8, i32* %stack_var_-24, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 2147483647, i32* %r8.global-to-local, align 4
  %v2_175102 = icmp eq i32 %arg3, 0
  store i1 %v2_175102, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_175102, label %dec_label_pc_175a0, label %dec_label_pc_17518

dec_label_pc_17510thread-pre-split:               ; preds = %dec_label_pc_17518
  %v3_17530 = load i32, i32* %r6.global-to-local, align 4
  %v5_17530 = add i32 %v3_17530, %v3_17528
  store i32 %v5_17530, i32* %r6.global-to-local, align 4
  %v4_17534 = load i32, i32* %r5.global-to-local, align 4
  %v5_17534 = sub i32 %v4_17534, %v3_17528
  store i32 %v5_17534, i32* %r5.global-to-local, align 4
  %v2_17510 = icmp eq i32 %v5_17534, 0
  store i1 %v2_17510, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17510, label %dec_label_pc_17510.dec_label_pc_175a0.loopexit_crit_edge, label %dec_label_pc_17510thread-pre-split.dec_label_pc_17518_crit_edge

dec_label_pc_17510thread-pre-split.dec_label_pc_17518_crit_edge: ; preds = %dec_label_pc_17510thread-pre-split
  %v3_17518.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_17524.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17518

dec_label_pc_17518:                               ; preds = %dec_label_pc_174f8, %dec_label_pc_17510thread-pre-split.dec_label_pc_17518_crit_edge
  %v0_17524 = phi i32 [ %v0_17524.pre, %dec_label_pc_17510thread-pre-split.dec_label_pc_17518_crit_edge ], [ %tmp, %dec_label_pc_174f8 ]
  %v0_17520 = phi i32 [ %v5_17530, %dec_label_pc_17510thread-pre-split.dec_label_pc_17518_crit_edge ], [ %arg2, %dec_label_pc_174f8 ]
  %v3_17518 = phi i32 [ %v3_17518.pre, %dec_label_pc_17510thread-pre-split.dec_label_pc_17518_crit_edge ], [ 2147483647, %dec_label_pc_174f8 ]
  %v0_1751c.in = phi i32 [ %v5_17534, %dec_label_pc_17510thread-pre-split.dec_label_pc_17518_crit_edge ], [ %arg3, %dec_label_pc_174f8 ]
  %v3_1751c = phi i32 [ %v5_17534, %dec_label_pc_17510thread-pre-split.dec_label_pc_17518_crit_edge ], [ %arg3, %dec_label_pc_174f8 ]
  %v0_1751c = icmp slt i32 %v0_1751c.in, 0
  %storemerge = select i1 %v0_1751c, i32 %v3_17518, i32 %v3_1751c
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  store i32 %v0_17520, i32* %r1.global-to-local, align 4
  %v1_17524 = add i32 %v0_17524, 4
  %v2_17524 = inttoptr i32 %v1_17524 to i32*
  %v3_17524 = load i32, i32* %v2_17524, align 4
  %v3_17528 = call i32 @function_122a8(i32 %v3_17524, i32 %v0_17520)
  %v1_1752c = icmp slt i32 %v3_17528, 0
  %v2_1752c = icmp eq i32 %v3_17528, 0
  store i1 %v2_1752c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_1752c, label %dec_label_pc_1753c, label %dec_label_pc_17510thread-pre-split

dec_label_pc_1753c:                               ; preds = %dec_label_pc_17518
  %v0_1753c = load i32, i32* %r4.global-to-local, align 4
  %v1_1753c = inttoptr i32 %v0_1753c to i16*
  %v2_1753c = load i16, i16* %v1_1753c, align 2
  %v3_1753c = zext i16 %v2_1753c to i32
  store i32 %v3_1753c, i32* %r3.global-to-local, align 4
  %v1_17540 = add i32 %v0_1753c, 8
  store i32 %v1_17540, i32* %r1.global-to-local, align 4
  %v1_17544 = inttoptr i32 %v1_17540 to i32*
  %v2_17544 = load i32, i32* %v1_17544, align 4
  store i32 %v2_17544, i32* %r1.global-to-local, align 4
  %v3_17544 = add i32 %v0_1753c, 12
  %v4_17544 = inttoptr i32 %v3_17544 to i32*
  %v5_17544 = load i32, i32* %v4_17544, align 4
  %v1_17548 = or i32 %v3_1753c, 8
  store i32 %v1_17548, i32* %r3.global-to-local, align 4
  %v2_1754c = sub i32 %v5_17544, %v2_17544
  store i32 %v2_1754c, i32* %r2.global-to-local, align 4
  %v9_1754c = icmp eq i32 %v5_17544, %v2_17544
  store i1 %v9_1754c, i1* %cpsr_z.global-to-local, align 1
  %v1_17550 = trunc i32 %v1_17548 to i16
  store i16 %v1_17550, i16* %v1_1753c, align 2
  br i1 %v9_1754c, label %dec_label_pc_1753c.dec_label_pc_1759c_crit_edge, label %dec_label_pc_17558

dec_label_pc_1753c.dec_label_pc_1759c_crit_edge:  ; preds = %dec_label_pc_1753c
  %v0_1759c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1759c

dec_label_pc_17558:                               ; preds = %dec_label_pc_1753c
  %v0_17558 = load i32, i32* %r2.global-to-local, align 4
  %v1_17558 = load i32, i32* %r5.global-to-local, align 4
  %v3_17558 = icmp ult i32 %v0_17558, %v1_17558
  %v9_17558 = icmp eq i32 %v0_17558, %v1_17558
  store i1 %v9_17558, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_17558, label %.preheader, label %bb23

bb23:                                             ; preds = %dec_label_pc_17558
  store i32 %v1_17558, i32* %r2.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_17558, %bb23
  %v2_1756c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb24

bb24:                                             ; preds = %.preheader, %dec_label_pc_17580
  %v2_1756c = phi i32 [ %v2_1756c.pre, %.preheader ], [ %v1_17584, %dec_label_pc_17580 ]
  %v0_17560 = load i32, i32* %r6.global-to-local, align 4
  %v1_17560 = inttoptr i32 %v0_17560 to i8*
  %v2_17560 = load i8, i8* %v1_17560, align 1
  %v3_17560 = zext i8 %v2_17560 to i32
  store i32 %v3_17560, i32* %r3.global-to-local, align 4
  %v7_17564 = icmp eq i8 %v2_17560, 10
  store i1 %v7_17564, i1* %cpsr_z.global-to-local, align 1
  %v1_17568 = add i32 %v0_17560, 1
  store i32 %v1_17568, i32* %r6.global-to-local, align 4
  %v3_1756c = inttoptr i32 %v2_1756c to i8*
  store i8 %v2_17560, i8* %v3_1756c, align 1
  %v0_17570 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_17570, label %dec_label_pc_17574, label %dec_label_pc_17580

dec_label_pc_17574:                               ; preds = %bb24
  %v0_17574 = load i32, i32* %r4.global-to-local, align 4
  %v1_17574 = inttoptr i32 %v0_17574 to i16*
  %v2_17574 = load i16, i16* %v1_17574, align 2
  %v3_17574 = zext i16 %v2_17574 to i32
  store i32 %v3_17574, i32* %r3.global-to-local, align 4
  %v1_17578 = and i32 %v3_17574, 256
  %v2_17578 = icmp eq i32 %v1_17578, 0
  store i1 %v2_17578, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17578, label %dec_label_pc_17580, label %dec_label_pc_17574.dec_label_pc_1758c_crit_edge

dec_label_pc_17574.dec_label_pc_1758c_crit_edge:  ; preds = %dec_label_pc_17574
  %v0_17590.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1758c

dec_label_pc_17580:                               ; preds = %dec_label_pc_17574, %bb24
  %v0_17580 = load i32, i32* %r2.global-to-local, align 4
  %v1_17580 = add i32 %v0_17580, -1
  store i32 %v1_17580, i32* %r2.global-to-local, align 4
  %v7_17580 = icmp eq i32 %v0_17580, 1
  store i1 %v7_17580, i1* %cpsr_z.global-to-local, align 1
  %v0_17584 = load i32, i32* %r1.global-to-local, align 4
  %v1_17584 = add i32 %v0_17584, 1
  store i32 %v1_17584, i32* %r1.global-to-local, align 4
  br i1 %v7_17580, label %dec_label_pc_17580.dec_label_pc_1758c_crit_edge, label %bb24

dec_label_pc_17580.dec_label_pc_1758c_crit_edge:  ; preds = %dec_label_pc_17580
  %v0_1758c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1758c

dec_label_pc_1758c:                               ; preds = %dec_label_pc_17574.dec_label_pc_1758c_crit_edge, %dec_label_pc_17580.dec_label_pc_1758c_crit_edge
  %v0_17590 = phi i32 [ %v1_17584, %dec_label_pc_17580.dec_label_pc_1758c_crit_edge ], [ %v0_17590.pre, %dec_label_pc_17574.dec_label_pc_1758c_crit_edge ]
  %v0_1758c = phi i32 [ %v0_1758c.pre, %dec_label_pc_17580.dec_label_pc_1758c_crit_edge ], [ %v0_17574, %dec_label_pc_17574.dec_label_pc_1758c_crit_edge ]
  %v1_1758c = add i32 %v0_1758c, 8
  %v2_1758c = inttoptr i32 %v1_1758c to i32*
  %v3_1758c = load i32, i32* %v2_1758c, align 4
  store i32 %v3_1758c, i32* %r3.global-to-local, align 4
  %v2_17590 = add i32 %v0_1758c, 16
  %v3_17590 = inttoptr i32 %v2_17590 to i32*
  store i32 %v0_17590, i32* %v3_17590, align 4
  %v0_17594 = load i32, i32* %r3.global-to-local, align 4
  %v1_17594 = load i32, i32* %r1.global-to-local, align 4
  %v2_17594 = sub i32 %v1_17594, %v0_17594
  store i32 %v2_17594, i32* %r3.global-to-local, align 4
  %v1_17598 = load i32, i32* %r5.global-to-local, align 4
  %v2_17598 = sub i32 %v1_17598, %v2_17594
  store i32 %v2_17598, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1759c

dec_label_pc_1759c:                               ; preds = %dec_label_pc_1753c.dec_label_pc_1759c_crit_edge, %dec_label_pc_1758c
  %v0_1759c = phi i32 [ %v0_1759c.pre, %dec_label_pc_1753c.dec_label_pc_1759c_crit_edge ], [ %v2_17598, %dec_label_pc_1758c ]
  %v1_1759c = load i32, i32* @r7, align 4
  %v2_1759c = sub i32 %v1_1759c, %v0_1759c
  br label %dec_label_pc_175a0

dec_label_pc_17510.dec_label_pc_175a0.loopexit_crit_edge: ; preds = %dec_label_pc_17510thread-pre-split
  %v0_175a0.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_175a0

dec_label_pc_175a0:                               ; preds = %dec_label_pc_174f8, %dec_label_pc_17510.dec_label_pc_175a0.loopexit_crit_edge, %dec_label_pc_1759c
  %v0_175a0 = phi i32 [ %v2_1759c, %dec_label_pc_1759c ], [ %v0_175a0.pre.pre, %dec_label_pc_17510.dec_label_pc_175a0.loopexit_crit_edge ], [ 0, %dec_label_pc_174f8 ]
  %v2_175a4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_175a4, i32* %r4.global-to-local, align 4
  ret i32 %v0_175a0

; uselistorder directives
  uselistorder i32 %v0_1758c, { 1, 0 }
  uselistorder i32 %v1_17584, { 0, 2, 1 }
  uselistorder i32 %v0_17580, { 1, 0 }
  uselistorder i32 %v1_17558, { 0, 2, 1 }
  uselistorder i32 %v0_17558, { 1, 0 }
  uselistorder i32 %v5_17544, { 1, 0 }
  uselistorder i32 %v2_17544, { 1, 0, 2 }
  uselistorder i32 %v3_17528, { 2, 3, 0, 1 }
  uselistorder i32 %v0_17520, { 1, 0 }
  uselistorder i32 %v5_17534, { 2, 0, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 3, 5, 1, 4, 6 }
  uselistorder i32* %r4.global-to-local, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 3, 2, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 1, 3, 5, 4, 6, 7, 8, 0 }
  uselistorder i32 256, { 282, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 274, 283, 280, 281, 284, 36, 38, 37, 39, 273, 40, 41, 42, 0, 279, 1, 43, 44, 45, 46, 48, 49, 50, 47, 52, 53, 54, 51, 55, 277, 56, 285, 286, 57, 58, 59, 288, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 70, 69, 72, 278, 289, 287, 73, 74, 75, 76, 78, 77, 79, 81, 80, 82, 84, 83, 85, 86, 2, 95, 91, 96, 92, 87, 88, 89, 97, 93, 98, 94, 90, 99, 100, 101, 102, 103, 113, 114, 108, 115, 109, 104, 105, 110, 116, 111, 117, 112, 106, 107, 118, 119, 120, 121, 126, 124, 122, 127, 125, 123, 128, 129, 131, 133, 134, 132, 130, 135, 275, 290, 136, 138, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 153, 151, 149, 154, 152, 150, 155, 156, 158, 160, 161, 159, 157, 162, 276, 291, 163, 165, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 292, 176, 293, 185, 180, 186, 181, 182, 177, 178, 187, 183, 179, 184, 188, 189, 190, 191, 192, 193, 194, 201, 198, 202, 199, 203, 200, 195, 196, 197, 204, 205, 206, 207, 212, 219, 213, 220, 214, 208, 209, 221, 215, 210, 216, 222, 217, 211, 218, 223, 224, 225, 226, 227, 228, 233, 240, 234, 241, 235, 229, 230, 242, 236, 231, 237, 243, 238, 232, 239, 244, 245, 246, 247, 248, 249, 259, 255, 250, 260, 256, 261, 257, 251, 252, 253, 262, 258, 254, 263, 264, 265, 266, 267, 268, 3, 269, 270, 4, 271, 272 }
  uselistorder i8 10, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i32)* @function_122a8, { 2, 1, 0 }
  uselistorder i32 4, { 202, 203, 204, 196, 197, 329, 205, 453, 5, 6, 206, 7, 8, 68, 0, 9, 76, 71, 72, 10, 454, 73, 455, 59, 11, 12, 74, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 13, 473, 474, 475, 476, 477, 478, 58, 479, 480, 481, 482, 483, 484, 14, 15, 75, 485, 207, 93, 16, 208, 17, 209, 94, 210, 211, 212, 213, 128, 214, 215, 216, 217, 218, 219, 18, 198, 199, 200, 201, 277, 278, 191, 192, 193, 194, 195, 486, 129, 95, 487, 19, 488, 130, 131, 60, 405, 406, 407, 408, 409, 410, 132, 133, 20, 411, 412, 413, 414, 415, 416, 417, 418, 134, 403, 404, 379, 380, 381, 382, 383, 384, 385, 386, 387, 21, 388, 389, 390, 419, 22, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 135, 136, 137, 434, 435, 438, 441, 436, 437, 96, 138, 439, 51, 440, 442, 443, 444, 446, 139, 24, 23, 445, 140, 141, 142, 248, 143, 52, 25, 26, 279, 280, 281, 282, 283, 27, 284, 447, 448, 189, 28, 29, 97, 249, 61, 242, 104, 243, 250, 251, 244, 245, 30, 252, 77, 98, 99, 228, 229, 100, 222, 223, 224, 220, 221, 225, 226, 227, 230, 231, 232, 101, 233, 234, 235, 102, 236, 103, 237, 238, 239, 240, 241, 246, 247, 54, 53, 253, 69, 254, 31, 255, 32, 56, 55, 257, 33, 256, 258, 259, 264, 190, 265, 105, 266, 106, 107, 268, 269, 267, 260, 108, 261, 262, 263, 449, 270, 66, 65, 64, 271, 109, 34, 35, 36, 37, 38, 272, 63, 62, 273, 67, 110, 274, 275, 276, 285, 286, 144, 287, 288, 289, 145, 146, 1, 111, 290, 78, 291, 292, 293, 147, 294, 295, 148, 149, 2, 112, 296, 79, 297, 80, 298, 299, 300, 301, 150, 302, 303, 151, 152, 304, 305, 113, 306, 3, 307, 81, 308, 114, 309, 310, 311, 312, 153, 313, 314, 154, 155, 315, 316, 115, 317, 4, 318, 82, 319, 116, 320, 39, 330, 331, 332, 156, 333, 334, 335, 336, 157, 158, 117, 337, 118, 339, 83, 340, 341, 342, 159, 343, 344, 160, 161, 345, 84, 346, 85, 347, 348, 349, 350, 162, 351, 352, 163, 164, 120, 353, 119, 354, 86, 355, 87, 356, 357, 358, 359, 360, 361, 122, 362, 123, 363, 165, 364, 57, 365, 166, 167, 124, 366, 121, 367, 88, 368, 89, 369, 370, 371, 168, 372, 373, 169, 170, 374, 125, 375, 90, 376, 171, 172, 173, 377, 378, 126, 91, 174, 175, 176, 450, 451, 127, 92, 177, 40, 391, 178, 41, 392, 179, 42, 393, 180, 43, 394, 181, 44, 395, 182, 70, 45, 396, 397, 183, 46, 398, 184, 47, 399, 185, 48, 400, 186, 49, 401, 187, 50, 402, 452, 321, 322, 323, 324, 325, 326, 327, 188, 328, 338 }
  uselistorder i32 2147483647, { 1, 6, 0, 2, 3, 4, 5 }
  uselistorder i32* @r7, { 4, 37, 38, 26, 27, 28, 29, 30, 31, 32, 33, 36, 5, 39, 40, 41, 6, 42, 43, 44, 20, 45, 46, 7, 47, 48, 49, 50, 51, 52, 8, 53, 54, 55, 56, 57, 58, 34, 35, 320, 321, 205, 206, 279, 280, 25, 322, 323, 324, 329, 330, 9, 59, 60, 113, 10, 114, 115, 116, 0, 117, 118, 281, 282, 287, 288, 289, 290, 291, 292, 293, 283, 284, 285, 286, 262, 263, 264, 265, 266, 267, 294, 295, 296, 297, 298, 299, 300, 301, 11, 302, 303, 304, 305, 306, 307, 308, 81, 82, 119, 120, 83, 84, 309, 310, 311, 312, 130, 131, 132, 133, 134, 139, 140, 141, 142, 143, 135, 136, 137, 138, 144, 145, 146, 147, 148, 149, 252, 253, 327, 328, 85, 86, 87, 88, 185, 186, 325, 326, 213, 214, 150, 151, 207, 208, 121, 122, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 313, 314, 22, 315, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 77, 78, 65, 62, 12, 61, 63, 1, 64, 66, 67, 76, 68, 69, 70, 71, 72, 73, 74, 75, 79, 80, 2, 102, 103, 104, 105, 106, 107, 108, 215, 216, 217, 218, 109, 110, 111, 112, 123, 13, 124, 125, 126, 127, 128, 129, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 23, 180, 181, 182, 183, 184, 187, 24, 188, 189, 190, 191, 192, 219, 220, 221, 222, 223, 224, 225, 226, 14, 227, 228, 229, 230, 231, 232, 233, 234, 235, 3, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 15, 255, 256, 257, 17, 16, 258, 259, 260, 261, 19, 18, 316, 317, 318, 319, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 195, 193, 194, 21, 196, 197, 198, 199, 200, 201, 202, 203, 204, 209, 210, 211, 212 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_175a0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1759c, { 1, 0 }
  uselistorder label %dec_label_pc_1758c, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_17518, { 1, 0 }
}

define i32 @function_175ac(i32 %arg1) local_unnamed_addr {
dec_label_pc_175ac:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_175ac = load i32, i32* @r4, align 4
  store i32 %v3_175ac, i32* %stack_var_-8, align 4
  %v1_175b0 = add i32 %arg1, 8
  %v1_175b4 = inttoptr i32 %v1_175b0 to i32*
  %v2_175b4 = load i32, i32* %v1_175b4, align 4
  %v3_175b4 = add i32 %arg1, 12
  %v4_175b4 = inttoptr i32 %v3_175b4 to i32*
  %v5_175b4 = load i32, i32* %v4_175b4, align 4
  %v2_175b8 = sub i32 %v5_175b4, %v2_175b4
  store i32 %v2_175b8, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_175c0 = inttoptr i32 %arg1 to i16*
  %v4_175c0 = call i32 @function_174a0(i16* %v3_175c0, i32 %v2_175b4, i32 %v2_175b8)
  %v0_175c4 = load i32, i32* @r4, align 4
  %v1_175c4 = add i32 %v0_175c4, 8
  %v2_175c4 = inttoptr i32 %v1_175c4 to i32*
  %v3_175c4 = load i32, i32* %v2_175c4, align 4
  store i32 %v3_175c4, i32* %r2.global-to-local, align 4
  %v2_175c8 = add i32 %v3_175c4, %v4_175c0
  %v2_175cc = add i32 %v0_175c4, 20
  %v3_175cc = inttoptr i32 %v2_175cc to i32*
  store i32 %v2_175c8, i32* %v3_175cc, align 4
  %v0_175d0 = load i32, i32* %r2.global-to-local, align 4
  %v1_175d0 = load i32, i32* @r4, align 4
  %v2_175d0 = add i32 %v1_175d0, 16
  %v3_175d0 = inttoptr i32 %v2_175d0 to i32*
  store i32 %v0_175d0, i32* %v3_175d0, align 4
  %v2_175d4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_175d4, i32* @r4, align 4
  ret i32 %v4_175c0

; uselistorder directives
  uselistorder i32 %v4_175c0, { 1, 0 }
  uselistorder i32 20, { 31, 117, 3, 118, 119, 1, 120, 32, 7, 33, 34, 35, 36, 30, 48, 49, 26, 27, 28, 29, 121, 8, 122, 112, 113, 114, 2, 50, 9, 51, 52, 0, 37, 39, 10, 41, 4, 42, 43, 44, 45, 24, 25, 40, 38, 46, 47, 53, 54, 11, 55, 56, 57, 58, 59, 60, 61, 62, 12, 63, 64, 65, 66, 67, 68, 13, 69, 70, 14, 71, 72, 73, 74, 15, 75, 76, 16, 77, 78, 79, 80, 82, 17, 83, 84, 85, 86, 87, 88, 18, 89, 90, 91, 92, 19, 20, 93, 5, 94, 21, 95, 96, 97, 98, 6, 99, 22, 100, 101, 102, 103, 104, 23, 105, 106, 107, 108, 109, 110, 111, 115, 116, 81 }
  uselistorder i32 12, { 9, 10, 36, 11, 12, 39, 6, 166, 167, 168, 169, 170, 172, 173, 171, 174, 175, 176, 177, 178, 179, 180, 13, 14, 15, 16, 18, 17, 19, 40, 41, 20, 42, 43, 44, 45, 46, 37, 38, 82, 83, 33, 34, 35, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 3, 120, 121, 122, 123, 124, 21, 125, 143, 22, 23, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 162, 155, 156, 157, 158, 159, 160, 161, 163, 164, 24, 165, 4, 84, 85, 25, 86, 87, 26, 62, 48, 51, 58, 59, 63, 60, 64, 49, 50, 47, 52, 53, 54, 55, 56, 57, 61, 65, 66, 67, 5, 68, 69, 70, 71, 73, 74, 76, 75, 27, 77, 28, 78, 29, 79, 81, 80, 72, 117, 88, 89, 30, 90, 91, 92, 31, 93, 94, 95, 96, 97, 98, 7, 99, 100, 101, 102, 103, 104, 8, 105, 106, 32, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 0, 1, 2 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_175dc() local_unnamed_addr {
dec_label_pc_175dc:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_175dc = load i32, i32* @r4, align 4
  store i32 %v3_175dc, i32* %stack_var_-12, align 4
  %v0_175e0 = load i32, i32* @r0, align 4
  %v1_175e0 = inttoptr i32 %v0_175e0 to i16*
  %v2_175e0 = load i16, i16* %v1_175e0, align 2
  %v3_175e0 = zext i16 %v2_175e0 to i32
  store i32 %v3_175e0, i32* %r3.global-to-local, align 4
  %v0_175e4 = load i32, i32* @r1, align 4
  %v2_175e4 = and i32 %v0_175e4, %v3_175e0
  %v4_175e4 = icmp eq i32 %v2_175e4, 0
  store i32 %v0_175e0, i32* @r4, align 4
  br i1 %v4_175e4, label %dec_label_pc_175f4, label %dec_label_pc_17604

dec_label_pc_175f4:                               ; preds = %dec_label_pc_175dc
  %v1_175f4 = and i32 %v3_175e0, 2176
  %v2_175f4 = icmp eq i32 %v1_175f4, 0
  br i1 %v2_175f4, label %dec_label_pc_175fc, label %dec_label_pc_17610

dec_label_pc_175fc:                               ; preds = %dec_label_pc_175f4
  %v2_175fc = or i32 %v0_175e4, %v3_175e0
  store i32 %v2_175fc, i32* %r3.global-to-local, align 4
  %v1_17600 = trunc i32 %v2_175fc to i16
  store i16 %v1_17600, i16* %v1_175e0, align 2
  %v0_17604.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_17604

dec_label_pc_17604:                               ; preds = %dec_label_pc_175dc, %dec_label_pc_175fc
  %v0_17604 = phi i32 [ %v0_175e0, %dec_label_pc_175dc ], [ %v0_17604.pre, %dec_label_pc_175fc ]
  %v1_17604 = inttoptr i32 %v0_17604 to i16*
  %v2_17604 = load i16, i16* %v1_17604, align 2
  %v3_17604 = zext i16 %v2_17604 to i32
  store i32 %v3_17604, i32* %r3.global-to-local, align 4
  %v1_17608 = and i32 %v3_17604, 16
  store i32 %v1_17608, i32* %r5.global-to-local, align 4
  %v2_17608 = icmp eq i32 %v1_17608, 0
  br i1 %v2_17608, label %dec_label_pc_17630, label %dec_label_pc_17610

dec_label_pc_17610:                               ; preds = %dec_label_pc_175f4, %dec_label_pc_17604
  %v0_17610 = call i32 @function_127c4()
  store i32 %v0_17610, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_17618 = inttoptr i32 %v0_17610 to i32*
  store i32 9, i32* %v2_17618, align 4
  br label %dec_label_pc_1761c

dec_label_pc_1761c:                               ; preds = %dec_label_pc_17638, %dec_label_pc_17610
  %v0_1761c = load i32, i32* @r4, align 4
  %v1_1761c = inttoptr i32 %v0_1761c to i16*
  %v2_1761c = load i16, i16* %v1_1761c, align 2
  %v3_1761c = zext i16 %v2_1761c to i32
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_17624 = or i32 %v3_1761c, 8
  store i32 %v1_17624, i32* %r3.global-to-local, align 4
  %v1_17628 = trunc i32 %v1_17624 to i16
  store i16 %v1_17628, i16* %v1_1761c, align 2
  %v1_17670.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17668

dec_label_pc_17630:                               ; preds = %dec_label_pc_17604
  %v1_17630 = and i32 %v3_17604, 64
  %v2_17630 = icmp eq i32 %v1_17630, 0
  br i1 %v2_17630, label %dec_label_pc_17658, label %dec_label_pc_17638

dec_label_pc_17638:                               ; preds = %dec_label_pc_17630
  %v0_17638 = load i32, i32* @r0, align 4
  %v1_17638 = call i32 @function_1620c(i32 %v0_17638)
  store i32 %v1_17638, i32* %r0.global-to-local, align 4
  %v2_1763c = icmp eq i32 %v1_17638, 0
  br i1 %v2_1763c, label %dec_label_pc_17644, label %dec_label_pc_1761c

dec_label_pc_17644:                               ; preds = %dec_label_pc_17638
  %v0_17644 = load i32, i32* @r4, align 4
  %v1_17644 = inttoptr i32 %v0_17644 to i16*
  %v2_17644 = load i16, i16* %v1_17644, align 2
  %v3_17644 = zext i16 %v2_17644 to i32
  store i32 %v3_17644, i32* %r3.global-to-local, align 4
  %v1_17648 = add i32 %v0_17644, 8
  %v2_17648 = inttoptr i32 %v1_17648 to i32*
  %v3_17648 = load i32, i32* %v2_17648, align 4
  %v1_1764c = and i32 %v3_17644, 65471
  store i32 %v1_1764c, i32* %r3.global-to-local, align 4
  %v2_17650 = add i32 %v0_17644, 28
  %v3_17650 = inttoptr i32 %v2_17650 to i32*
  store i32 %v3_17648, i32* %v3_17650, align 4
  %v0_17654 = load i32, i32* %r3.global-to-local, align 4
  %v1_17654 = trunc i32 %v0_17654 to i16
  %v2_17654 = load i32, i32* @r4, align 4
  %v3_17654 = inttoptr i32 %v2_17654 to i16*
  store i16 %v1_17654, i16* %v3_17654, align 2
  %v0_17658.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_17658

dec_label_pc_17658:                               ; preds = %dec_label_pc_17630, %dec_label_pc_17644
  %v2_17660 = phi i32 [ %v0_17604, %dec_label_pc_17630 ], [ %v0_17658.pre, %dec_label_pc_17644 ]
  %v1_17658 = inttoptr i32 %v2_17660 to i16*
  %v2_17658 = load i16, i16* %v1_17658, align 2
  %v3_17658 = zext i16 %v2_17658 to i32
  %v1_1765c = or i32 %v3_17658, 1
  store i32 %v1_1765c, i32* %r3.global-to-local, align 4
  %v1_17660 = trunc i32 %v1_1765c to i16
  store i16 %v1_17660, i16* %v1_17658, align 2
  %v0_17664 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_17664, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17668

dec_label_pc_17668:                               ; preds = %dec_label_pc_1761c, %dec_label_pc_17658
  %v1_17670 = phi i32 [ %v1_17670.pre, %dec_label_pc_1761c ], [ %v0_17664, %dec_label_pc_17658 ]
  %v2_1766c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1766c, i32* @r4, align 4
  ret i32 %v1_17670

; uselistorder directives
  uselistorder i32 %v3_175e0, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32 28, { 22, 47, 7, 23, 24, 25, 35, 36, 20, 10, 21, 11, 12, 13, 14, 44, 45, 46, 8, 15, 0, 26, 1, 27, 2, 28, 3, 29, 4, 30, 5, 31, 6, 32, 9, 34, 19, 33, 16, 17, 18, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i32 65471, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_1620c, { 2, 1, 0 }
  uselistorder i32 64, { 23, 24, 25, 26, 31, 19, 20, 21, 22, 63, 0, 8, 7, 6, 9, 5, 4, 3, 2, 1, 27, 28, 29, 30, 32, 33, 16, 34, 35, 36, 10, 37, 38, 39, 11, 40, 41, 42, 12, 43, 44, 45, 17, 46, 47, 48, 13, 49, 50, 51, 52, 53, 14, 54, 55, 56, 57, 58, 15, 59, 60, 61, 18, 62 }
  uselistorder i32 8, { 74, 75, 76, 77, 78, 79, 80, 67, 68, 69, 70, 144, 81, 225, 34, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 82, 83, 84, 85, 86, 87, 88, 28, 89, 90, 91, 92, 93, 94, 95, 96, 97, 71, 72, 73, 115, 116, 117, 45, 243, 244, 29, 7, 176, 177, 178, 179, 180, 181, 182, 183, 8, 56, 184, 185, 186, 187, 188, 189, 190, 191, 9, 163, 164, 165, 166, 167, 168, 169, 170, 192, 193, 194, 195, 196, 10, 197, 198, 11, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 216, 209, 210, 211, 212, 57, 23, 213, 214, 215, 58, 59, 12, 217, 218, 219, 220, 222, 223, 60, 13, 224, 14, 221, 37, 38, 35, 36, 25, 26, 31, 32, 39, 245, 118, 119, 120, 121, 46, 63, 30, 15, 16, 22, 17, 40, 102, 103, 18, 19, 20, 104, 47, 98, 48, 99, 49, 100, 50, 101, 64, 33, 105, 106, 107, 24, 27, 109, 110, 65, 66, 62, 51, 111, 52, 112, 53, 113, 114, 108, 122, 123, 124, 3, 125, 126, 127, 4, 128, 129, 130, 131, 132, 133, 134, 5, 135, 136, 137, 138, 139, 140, 141, 6, 145, 41, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 171, 42, 172, 43, 173, 44, 174, 54, 175, 0, 1, 61, 21, 142, 55, 143, 2 }
  uselistorder i32 9, { 5, 28, 22, 23, 63, 65, 6, 47, 4, 48, 7, 34, 10, 31, 11, 32, 12, 33, 29, 8, 9, 30, 24, 35, 2, 25, 26, 37, 38, 39, 27, 36, 13, 40, 14, 41, 15, 42, 16, 43, 17, 44, 45, 18, 46, 0, 19, 1, 61, 49, 50, 51, 52, 53, 54, 20, 55, 56, 57, 58, 59, 60, 62, 3, 64, 21 }
  uselistorder i32 16, { 106, 107, 108, 100, 101, 102, 103, 109, 34, 35, 36, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 110, 111, 112, 113, 114, 2, 1, 26, 48, 49, 50, 51, 117, 52, 118, 115, 116, 9, 53, 54, 119, 10, 55, 56, 120, 121, 57, 58, 122, 123, 104, 105, 59, 143, 144, 96, 97, 98, 99, 60, 27, 136, 37, 61, 62, 63, 225, 226, 227, 228, 64, 229, 3, 65, 230, 231, 0, 232, 233, 66, 25, 145, 67, 146, 68, 69, 11, 24, 12, 13, 4, 14, 15, 70, 126, 38, 127, 128, 71, 124, 125, 129, 132, 133, 39, 95, 134, 72, 73, 16, 90, 17, 18, 74, 130, 131, 40, 135, 75, 137, 76, 138, 77, 139, 78, 140, 79, 141, 80, 142, 41, 218, 147, 148, 28, 149, 150, 19, 151, 152, 5, 81, 153, 154, 155, 29, 156, 157, 158, 159, 160, 6, 82, 161, 30, 162, 163, 164, 20, 165, 166, 91, 21, 92, 167, 83, 84, 168, 169, 7, 43, 170, 42, 171, 31, 172, 173, 174, 22, 175, 176, 93, 23, 94, 177, 85, 86, 178, 179, 8, 45, 180, 44, 181, 87, 183, 184, 185, 186, 32, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 214, 216, 217, 219, 220, 33, 221, 222, 223, 224, 88, 46, 234, 89, 47, 182 }
  uselistorder i32* @r1, { 15, 14, 58, 16, 17, 18, 19, 1, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 2, 95, 96, 20, 21, 22, 23, 0, 44, 45, 10, 24, 37, 38, 39, 3, 73, 71, 72, 4, 74, 5, 29, 30, 12, 59, 60, 61, 7, 25, 46, 11, 75, 76, 47, 8, 77, 48, 49, 31, 26, 27, 28, 33, 32, 62, 34, 35, 36, 40, 41, 42, 43, 50, 51, 52, 9, 53, 68, 69, 6, 54, 55, 56, 57, 63, 64, 65, 66, 67, 70, 13 }
  uselistorder label %dec_label_pc_17668, { 1, 0 }
  uselistorder label %dec_label_pc_17658, { 1, 0 }
  uselistorder label %dec_label_pc_17610, { 1, 0 }
  uselistorder label %dec_label_pc_17604, { 1, 0 }
}

define i32 @function_17674(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_17674:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  %v6_17674 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_17684 = call i32 @function_128d0()
  %v0_17688 = load i32, i32* @r5, align 4
  %v1_17688 = load i32, i32* @r4, align 4
  %v2_17688 = add i32 %v1_17688, %v0_17688
  store i32 %v6_17674, i32* @r5, align 4
  ret i32 %v2_17688

; uselistorder directives
  uselistorder i32 ()* @function_128d0, { 6, 7, 5, 0, 2, 1, 4, 3 }
  uselistorder i32* @r5, { 43, 44, 45, 46, 29, 30, 31, 32, 33, 34, 35, 36, 37, 47, 5, 48, 49, 50, 660, 661, 662, 51, 25, 52, 0, 53, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 21, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 27, 28, 76, 77, 78, 79, 80, 81, 6, 82, 83, 84, 85, 86, 87, 88, 7, 89, 90, 91, 10, 92, 93, 8, 94, 95, 96, 97, 98, 99, 9, 100, 101, 102, 103, 104, 105, 38, 11, 39, 40, 41, 42, 243, 244, 245, 246, 247, 248, 675, 12, 676, 677, 687, 106, 107, 108, 109, 110, 111, 112, 678, 679, 680, 681, 682, 13, 14, 683, 684, 685, 686, 113, 114, 115, 116, 614, 615, 619, 620, 621, 622, 623, 616, 617, 618, 563, 564, 565, 15, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 624, 625, 648, 16, 649, 650, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 3, 639, 640, 641, 642, 643, 17, 644, 645, 646, 647, 117, 128, 129, 130, 131, 132, 249, 250, 18, 251, 252, 253, 254, 255, 26, 118, 256, 19, 257, 258, 259, 260, 261, 262, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 124, 125, 127, 126, 119, 120, 121, 122, 123, 191, 192, 193, 194, 195, 196, 197, 198, 199, 205, 206, 207, 208, 209, 210, 211, 200, 201, 202, 203, 204, 418, 419, 420, 421, 422, 423, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 1, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 2, 242, 263, 264, 265, 266, 267, 22, 268, 269, 270, 271, 272, 273, 274, 23, 275, 24, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 424, 425, 20, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 4, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 651, 652, 653, 654, 655, 656, 657, 658, 659, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417 }
  uselistorder i32* @r2, { 8, 11, 12, 40, 41, 13, 14, 15, 16, 17, 18, 29, 9, 10, 30, 42, 47, 48, 49, 50, 1, 53, 43, 23, 24, 2, 44, 3, 4, 37, 38, 5, 39, 6, 0, 51, 7, 52, 45, 46, 25, 26, 27, 31, 32, 36, 22, 19, 20, 21, 28, 33, 34, 35 }
}

define i32 @function_17698(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_17698:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_176d8, label %dec_label_pc_176c4

dec_label_pc_176c4:                               ; preds = %dec_label_pc_17698
  %v0_176c4 = call i32 @function_127c4()
  %v0_176c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_176c8 = sub i32 0, %v0_176c8
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_176d0 = inttoptr i32 %v0_176c4 to i32*
  store i32 %v1_176c8, i32* %v2_176d0, align 4
  %v0_176e0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_176e0

dec_label_pc_176d8:                               ; preds = %dec_label_pc_17698
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %v2_176d8 = icmp eq i32 %arg1, 0
  br i1 %v2_176d8, label %dec_label_pc_176ec, label %dec_label_pc_176e0

dec_label_pc_176e0:                               ; preds = %dec_label_pc_176d8, %dec_label_pc_176c4
  %v0_176e0 = phi i32 [ %arg1, %dec_label_pc_176d8 ], [ %v0_176e0.pre, %dec_label_pc_176c4 ]
  br label %dec_label_pc_176f0

dec_label_pc_176ec:                               ; preds = %dec_label_pc_176d8
  br label %dec_label_pc_176f0

dec_label_pc_176f0:                               ; preds = %dec_label_pc_176e0, %dec_label_pc_176ec
  %v1_176f8 = phi i32 [ %v0_176e0, %dec_label_pc_176e0 ], [ %tmp8, %dec_label_pc_176ec ]
  ret i32 %v1_176f8

; uselistorder directives
  uselistorder i32 -1, { 252, 258, 173, 253, 254, 255, 114, 256, 115, 257, 86, 87, 88, 89, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 174, 175, 0, 176, 152, 259, 260, 177, 116, 261, 178, 1, 90, 262, 263, 163, 264, 179, 3, 2, 180, 181, 117, 328, 118, 119, 297, 120, 302, 107, 303, 288, 289, 290, 121, 251, 122, 304, 305, 4, 182, 183, 184, 306, 284, 285, 164, 185, 5, 186, 6, 187, 165, 307, 10, 188, 189, 9, 11, 308, 8, 190, 191, 91, 7, 192, 92, 93, 94, 95, 193, 194, 195, 103, 268, 269, 12, 270, 123, 309, 124, 125, 300, 126, 310, 127, 294, 128, 271, 129, 286, 130, 131, 272, 132, 311, 133, 312, 106, 172, 13, 292, 196, 134, 301, 135, 330, 136, 273, 137, 274, 138, 275, 139, 291, 140, 332, 141, 295, 142, 329, 143, 298, 144, 293, 145, 276, 146, 147, 148, 331, 149, 287, 197, 198, 199, 14, 101, 104, 15, 16, 105, 102, 154, 162, 200, 19, 201, 277, 166, 265, 96, 20, 202, 203, 204, 155, 205, 206, 207, 208, 18, 209, 210, 211, 212, 156, 213, 214, 215, 216, 217, 157, 218, 219, 158, 220, 221, 222, 159, 223, 224, 225, 160, 226, 227, 228, 161, 229, 230, 266, 150, 267, 21, 231, 232, 109, 108, 278, 17, 233, 234, 235, 22, 236, 112, 113, 110, 111, 237, 151, 279, 97, 23, 24, 167, 280, 168, 281, 26, 169, 282, 25, 27, 28, 29, 170, 283, 30, 31, 32, 33, 238, 34, 98, 239, 35, 153, 36, 37, 38, 240, 39, 40, 41, 42, 43, 44, 45, 46, 47, 99, 48, 49, 50, 51, 52, 53, 241, 54, 55, 56, 242, 57, 58, 59, 243, 60, 61, 62, 63, 64, 244, 65, 66, 67, 68, 69, 70, 245, 71, 171, 299, 72, 73, 74, 246, 75, 76, 77, 247, 78, 79, 80, 248, 81, 82, 83, 84, 249, 250, 296, 85, 100 }
  uselistorder i32 ()* @function_127c4, { 61, 57, 60, 59, 58, 63, 56, 55, 5, 4, 22, 30, 20, 46, 45, 62, 19, 18, 17, 50, 49, 21, 10, 12, 11, 42, 41, 9, 27, 26, 8, 24, 40, 48, 39, 38, 7, 6, 54, 53, 44, 16, 15, 14, 25, 2, 37, 36, 35, 43, 0, 23, 3, 28, 13, 34, 29, 33, 1, 47, 32, 52, 51, 31 }
  uselistorder i32 1, { 270, 269, 871, 690, 440, 441, 442, 691, 355, 872, 873, 874, 692, 138, 140, 139, 141, 136, 143, 137, 142, 693, 289, 288, 290, 694, 47, 48, 45, 51, 49, 46, 50, 695, 209, 268, 267, 486, 533, 487, 1131, 1132, 1133, 1134, 500, 696, 471, 698, 697, 443, 444, 875, 699, 491, 1231, 492, 876, 1232, 877, 878, 879, 881, 880, 474, 700, 883, 882, 1056, 1057, 1233, 493, 1234, 1235, 1236, 1237, 1238, 1239, 866, 1240, 1241, 1242, 1243, 1244, 1245, 867, 684, 702, 701, 390, 391, 396, 398, 397, 392, 389, 393, 395, 394, 887, 884, 885, 886, 531, 494, 198, 196, 197, 200, 199, 573, 888, 889, 890, 891, 703, 685, 144, 145, 892, 706, 705, 704, 256, 259, 257, 260, 261, 262, 258, 574, 893, 708, 707, 401, 404, 402, 399, 400, 403, 894, 709, 347, 346, 345, 895, 896, 710, 310, 309, 711, 303, 575, 870, 306, 307, 897, 898, 899, 900, 901, 902, 903, 904, 495, 714, 713, 712, 406, 405, 410, 408, 407, 409, 905, 906, 907, 716, 715, 230, 231, 576, 908, 717, 369, 909, 910, 911, 912, 913, 577, 718, 123, 124, 125, 127, 126, 578, 112, 361, 719, 276, 275, 344, 720, 163, 721, 287, 286, 722, 114, 119, 113, 118, 122, 121, 117, 120, 115, 116, 723, 107, 106, 104, 103, 105, 101, 102, 724, 91, 92, 99, 100, 96, 97, 95, 98, 93, 94, 725, 380, 381, 427, 1058, 328, 331, 329, 330, 726, 156, 155, 727, 214, 728, 232, 233, 1246, 579, 1247, 580, 729, 87, 83, 88, 86, 84, 89, 90, 85, 374, 581, 217, 216, 730, 411, 412, 413, 375, 477, 914, 915, 916, 731, 1129, 734, 733, 732, 273, 735, 488, 1031, 489, 1032, 1033, 478, 1034, 464, 465, 463, 466, 467, 470, 469, 468, 1035, 1248, 501, 582, 737, 736, 738, 377, 1188, 1191, 1192, 1193, 739, 419, 424, 425, 423, 422, 426, 420, 421, 1194, 1195, 1196, 1197, 740, 454, 460, 453, 459, 458, 452, 462, 461, 456, 450, 455, 451, 457, 1189, 1190, 583, 219, 218, 220, 1181, 584, 1182, 1183, 1184, 1185, 1186, 741, 79, 80, 78, 81, 266, 265, 1198, 1199, 1200, 1201, 1202, 1203, 538, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 586, 1212, 1213, 1214, 1215, 1216, 585, 1217, 1218, 1219, 1220, 1221, 742, 430, 437, 428, 435, 434, 439, 432, 438, 433, 431, 436, 429, 211, 210, 587, 588, 82, 951, 482, 746, 745, 744, 743, 373, 71, 496, 362, 747, 158, 157, 372, 748, 360, 749, 376, 750, 308, 751, 213, 752, 272, 271, 263, 753, 312, 311, 754, 274, 755, 223, 222, 756, 1135, 1136, 57, 56, 917, 918, 919, 920, 921, 922, 923, 1249, 52, 53, 54, 55, 757, 1059, 589, 68, 69, 924, 758, 343, 590, 759, 212, 591, 760, 365, 363, 364, 761, 148, 147, 146, 762, 305, 304, 763, 152, 764, 215, 765, 292, 291, 766, 184, 183, 154, 153, 767, 235, 234, 768, 246, 245, 769, 244, 770, 379, 378, 771, 294, 293, 327, 772, 472, 366, 773, 774, 221, 775, 368, 367, 473, 1222, 418, 1060, 1061, 1062, 1063, 476, 1064, 777, 776, 236, 243, 241, 239, 240, 237, 238, 242, 0, 1036, 1037, 1038, 1039, 1137, 497, 1138, 498, 1139, 779, 778, 415, 414, 416, 1065, 1066, 1067, 780, 131, 130, 128, 129, 1223, 1224, 502, 1, 475, 572, 1225, 133, 132, 134, 135, 943, 944, 945, 592, 1068, 417, 1165, 1070, 1069, 1071, 370, 371, 1140, 1156, 781, 188, 187, 186, 185, 1141, 782, 359, 358, 357, 356, 604, 946, 605, 947, 539, 948, 606, 949, 504, 607, 608, 952, 594, 953, 930, 927, 925, 926, 599, 596, 483, 928, 929, 597, 931, 932, 933, 598, 595, 934, 935, 936, 600, 937, 938, 601, 939, 940, 602, 941, 942, 603, 950, 954, 955, 956, 609, 957, 958, 959, 610, 503, 960, 868, 963, 962, 593, 961, 505, 964, 965, 966, 611, 967, 490, 32, 968, 31, 969, 30, 970, 29, 971, 28, 972, 27, 973, 26, 974, 25, 975, 24, 976, 23, 977, 22, 978, 506, 979, 33, 980, 21, 981, 20, 982, 507, 983, 34, 984, 19, 985, 18, 986, 17, 987, 16, 988, 15, 989, 14, 990, 35, 991, 36, 992, 37, 993, 13, 994, 508, 995, 12, 996, 509, 997, 11, 998, 10, 999, 510, 1000, 9, 1001, 38, 1002, 8, 1003, 7, 1004, 511, 1005, 512, 1006, 6, 1007, 5, 1008, 4, 1009, 3, 1010, 513, 1011, 2, 1012, 39, 1013, 514, 1014, 515, 1015, 484, 516, 1016, 485, 517, 518, 519, 869, 520, 1017, 521, 522, 523, 1024, 1025, 479, 612, 686, 795, 794, 793, 792, 791, 790, 789, 788, 787, 786, 785, 784, 783, 277, 280, 278, 284, 281, 279, 285, 283, 282, 1018, 1019, 613, 1020, 1021, 614, 1022, 1023, 168, 167, 166, 172, 169, 170, 171, 165, 164, 615, 616, 797, 796, 447, 448, 445, 446, 449, 1226, 529, 499, 798, 66, 65, 64, 63, 67, 61, 59, 58, 60, 62, 1142, 800, 799, 227, 228, 226, 225, 224, 229, 159, 541, 1026, 619, 1027, 540, 1028, 617, 618, 620, 1029, 1030, 621, 622, 623, 624, 625, 626, 627, 812, 811, 810, 809, 808, 807, 806, 805, 804, 689, 803, 802, 801, 108, 109, 111, 110, 628, 480, 629, 813, 630, 631, 632, 633, 1040, 530, 1041, 1042, 634, 532, 635, 1043, 636, 1044, 637, 1045, 638, 1046, 639, 1047, 640, 1048, 641, 1049, 642, 1050, 643, 1051, 644, 1052, 645, 1053, 646, 1054, 647, 1055, 481, 648, 827, 826, 825, 824, 823, 822, 821, 820, 819, 818, 817, 816, 815, 814, 313, 314, 315, 316, 318, 317, 1072, 1078, 41, 524, 1073, 649, 1074, 40, 1075, 534, 1076, 525, 526, 1077, 1079, 1080, 535, 1081, 687, 831, 830, 688, 829, 828, 173, 1171, 542, 543, 1172, 42, 43, 44, 1082, 1083, 1084, 650, 1085, 651, 652, 1086, 544, 1087, 832, 296, 300, 301, 302, 299, 295, 298, 297, 1088, 1089, 1090, 653, 1091, 654, 546, 545, 655, 1092, 656, 1093, 833, 250, 253, 254, 255, 252, 247, 251, 248, 249, 1094, 1095, 1096, 1097, 1098, 657, 1099, 658, 1100, 659, 551, 550, 660, 1101, 547, 1102, 548, 1103, 549, 1104, 839, 838, 837, 836, 835, 834, 192, 193, 194, 195, 189, 191, 190, 1105, 1106, 1107, 1108, 1109, 661, 1110, 662, 1111, 663, 560, 559, 664, 1112, 558, 1113, 557, 1114, 552, 1115, 553, 1116, 554, 1117, 555, 1118, 556, 1119, 845, 844, 843, 842, 841, 840, 349, 350, 352, 351, 348, 354, 353, 1143, 1144, 1145, 1146, 1147, 536, 537, 665, 1148, 1149, 666, 1150, 1151, 667, 1152, 1154, 1153, 849, 848, 847, 846, 321, 322, 324, 325, 323, 319, 326, 320, 1157, 1158, 1159, 668, 669, 851, 850, 384, 387, 388, 383, 386, 385, 1160, 1161, 1162, 670, 563, 562, 671, 1163, 561, 1164, 852, 201, 202, 206, 207, 208, 205, 204, 203, 1166, 1167, 1168, 672, 566, 565, 673, 1169, 564, 1170, 857, 856, 855, 854, 853, 174, 175, 180, 181, 182, 179, 178, 177, 176, 1173, 1174, 1175, 674, 1176, 675, 568, 567, 676, 1177, 858, 337, 340, 341, 342, 339, 335, 338, 336, 1178, 1179, 677, 1180, 569, 527, 678, 859, 332, 333, 334, 1227, 1228, 679, 1229, 570, 528, 680, 860, 150, 149, 151, 1187, 571, 681, 861, 162, 160, 161, 1230, 862, 264, 1120, 72, 1121, 1124, 682, 1125, 1126, 1122, 1123, 1127, 1128, 73, 74, 76, 75, 77, 1130, 683, 863, 1155, 70, 864, 865, 382 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_176f0, { 1, 0 }
}

define i32 @function_176fc() local_unnamed_addr {
entry:
  %v3_17700 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_17700)
  %v31_17708 = load i32, i32* @r0, align 4
  ret i32 %v31_17708

; uselistorder directives
  uselistorder i32* @r0, { 33, 26, 22, 63, 62, 189, 25, 4, 5, 223, 6, 32, 7, 64, 0, 65, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 1, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 66, 28, 60, 61, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 29, 14, 155, 156, 13, 31, 11, 250, 252, 253, 52, 53, 54, 55, 56, 57, 58, 59, 12, 19, 81, 82, 251, 139, 140, 83, 207, 30, 50, 51, 208, 2, 209, 210, 211, 206, 200, 48, 201, 202, 203, 49, 204, 205, 27, 219, 220, 212, 213, 214, 215, 216, 217, 218, 89, 90, 16, 91, 10, 20, 157, 158, 159, 160, 188, 18, 15, 23, 221, 161, 222, 24, 162, 163, 164, 165, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 86, 45, 122, 87, 84, 85, 88, 123, 126, 127, 128, 129, 130, 131, 124, 125, 35, 36, 9, 37, 38, 132, 133, 39, 40, 134, 135, 136, 137, 138, 21, 141, 142, 41, 42, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 43, 153, 154, 44, 166, 167, 168, 169, 170, 171, 172, 8, 173, 174, 175, 176, 177, 178, 179, 197, 198, 3, 180, 181, 182, 183, 184, 185, 190, 191, 192, 193, 194, 195, 196, 199, 186, 187, 46, 47, 17, 34 }
  uselistorder void (i32)* @__pseudo_branch, { 0, 59, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 1, 2, 3, 64, 65, 66, 67, 60, 48, 61, 62, 63, 68, 69, 70, 49, 50, 51, 45, 46, 47, 52, 56, 57, 53, 54, 55, 71, 38, 39, 40, 41, 42, 43, 44, 58 }
  uselistorder i32 0, { 662, 663, 672, 673, 674, 675, 676, 107, 677, 678, 679, 0, 680, 393, 68, 681, 458, 682, 683, 684, 420, 421, 664, 665, 670, 1, 108, 109, 1365, 1366, 1367, 1368, 149, 148, 150, 1369, 685, 151, 110, 1558, 1559, 1560, 394, 686, 687, 688, 395, 1561, 69, 396, 1562, 1563, 86, 41, 42, 689, 77, 2, 101, 102, 1214, 78, 79, 80, 1215, 1216, 1564, 1565, 1566, 1567, 1568, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1569, 1570, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 32, 1589, 1590, 1591, 1592, 1593, 33, 1594, 1595, 1596, 34, 1597, 1598, 1599, 35, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1624, 1625, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 36, 1643, 1644, 1645, 1646, 1647, 37, 1648, 1649, 1650, 1651, 1652, 38, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 152, 690, 640, 691, 692, 111, 693, 694, 695, 459, 460, 696, 697, 112, 113, 114, 698, 699, 703, 700, 701, 702, 397, 410, 704, 705, 115, 153, 708, 706, 707, 398, 709, 116, 710, 711, 3, 4, 117, 712, 656, 657, 461, 658, 154, 713, 714, 715, 70, 71, 716, 717, 718, 155, 719, 720, 721, 722, 723, 462, 724, 725, 726, 727, 728, 729, 118, 730, 731, 732, 733, 5, 6, 156, 158, 734, 157, 735, 159, 736, 119, 737, 742, 743, 738, 739, 740, 745, 746, 747, 160, 748, 749, 750, 751, 752, 741, 744, 753, 120, 666, 667, 668, 1668, 1669, 1472, 1359, 1480, 671, 1217, 1218, 422, 1219, 463, 659, 464, 660, 1481, 1482, 1483, 161, 1484, 1220, 1221, 1222, 661, 669, 121, 162, 1670, 1671, 1485, 1486, 465, 1676, 1677, 466, 1678, 1679, 163, 400, 1680, 1681, 467, 72, 1682, 1683, 468, 1690, 1693, 634, 399, 1694, 469, 1691, 1692, 1672, 1673, 641, 164, 386, 754, 756, 755, 165, 757, 758, 759, 470, 760, 103, 1360, 93, 1361, 167, 166, 1362, 1674, 1675, 1180, 1181, 1182, 1183, 1184, 1185, 169, 122, 1186, 1187, 1188, 94, 168, 1189, 123, 472, 473, 1685, 471, 124, 639, 125, 170, 1492, 1493, 1494, 1495, 1496, 171, 1497, 1498, 1499, 1500, 1501, 1502, 172, 1487, 474, 1488, 1489, 475, 1490, 1491, 126, 1473, 476, 173, 1474, 1475, 1476, 1477, 1478, 127, 174, 177, 182, 180, 183, 181, 176, 179, 178, 175, 1503, 1504, 1528, 1529, 128, 1505, 1506, 187, 185, 186, 1507, 1508, 193, 192, 145, 184, 1509, 1510, 1511, 1512, 1513, 1514, 416, 415, 423, 477, 1515, 1516, 1517, 73, 1518, 189, 188, 190, 191, 144, 1519, 1520, 401, 1521, 1522, 104, 1523, 1524, 1525, 1526, 1527, 7, 8, 784, 785, 74, 129, 9, 424, 478, 1530, 1450, 1451, 1531, 1328, 786, 1190, 787, 788, 1532, 1533, 1370, 1695, 1696, 81, 130, 131, 1223, 1224, 1225, 194, 761, 762, 195, 1226, 1231, 1232, 1233, 1234, 196, 1227, 197, 1228, 1229, 132, 1235, 1452, 1686, 789, 790, 791, 1230, 1689, 1329, 1684, 1371, 1236, 792, 1363, 793, 479, 1687, 97, 1688, 1191, 10, 1534, 1535, 98, 1536, 1537, 1538, 1539, 1540, 198, 1541, 635, 642, 636, 637, 1542, 643, 146, 199, 1237, 1238, 1239, 95, 412, 1240, 1241, 644, 11, 402, 200, 201, 202, 43, 203, 480, 794, 1242, 1243, 1244, 1544, 1543, 1545, 1546, 1547, 1548, 39, 204, 1549, 1550, 1551, 205, 87, 88, 456, 457, 775, 207, 206, 208, 1245, 209, 1246, 1247, 210, 1431, 1432, 481, 211, 1248, 212, 213, 1403, 214, 1372, 802, 795, 215, 216, 776, 777, 779, 796, 234, 797, 798, 645, 763, 764, 765, 646, 766, 767, 647, 768, 778, 769, 89, 44, 389, 390, 770, 648, 771, 649, 772, 650, 773, 651, 774, 780, 781, 482, 782, 799, 633, 800, 483, 801, 404, 403, 803, 804, 805, 806, 236, 235, 807, 808, 809, 652, 387, 810, 82, 83, 388, 811, 84, 85, 484, 812, 813, 815, 816, 638, 817, 818, 819, 820, 821, 485, 822, 823, 67, 99, 824, 825, 826, 827, 828, 829, 830, 831, 237, 832, 833, 834, 835, 836, 238, 837, 838, 839, 840, 841, 842, 239, 843, 844, 240, 845, 846, 241, 847, 848, 849, 45, 850, 851, 852, 853, 242, 854, 855, 856, 243, 857, 133, 134, 858, 859, 860, 244, 861, 862, 863, 864, 245, 865, 866, 867, 868, 217, 869, 870, 871, 246, 872, 873, 874, 875, 247, 876, 877, 878, 879, 880, 248, 881, 882, 883, 884, 249, 885, 886, 887, 888, 250, 889, 890, 891, 892, 251, 893, 894, 895, 896, 252, 897, 898, 899, 900, 901, 253, 902, 903, 904, 905, 254, 906, 907, 908, 909, 255, 910, 911, 912, 913, 256, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 218, 931, 932, 933, 934, 257, 935, 936, 937, 938, 258, 939, 219, 259, 940, 941, 260, 942, 220, 261, 943, 944, 262, 945, 135, 136, 946, 947, 948, 263, 949, 950, 951, 952, 264, 953, 954, 955, 956, 265, 957, 958, 959, 960, 221, 961, 962, 963, 964, 222, 965, 966, 967, 968, 266, 969, 970, 971, 972, 973, 267, 974, 975, 976, 977, 223, 978, 979, 980, 981, 268, 982, 983, 984, 985, 269, 986, 987, 988, 224, 989, 990, 991, 992, 270, 993, 994, 995, 996, 225, 997, 998, 999, 226, 1000, 1001, 1002, 1003, 271, 1004, 1005, 1006, 1007, 227, 1008, 1009, 1010, 1011, 272, 1012, 1013, 1014, 1015, 273, 1016, 1017, 1018, 1019, 274, 1020, 228, 275, 1021, 1022, 229, 1023, 1024, 1025, 1026, 276, 1027, 1028, 1029, 1030, 277, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 230, 1038, 1039, 1040, 231, 1041, 1042, 1043, 1044, 278, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 279, 1060, 1061, 1062, 1063, 280, 1064, 1065, 281, 1066, 1067, 282, 1068, 1069, 1070, 283, 1071, 1072, 1073, 284, 1074, 1075, 1076, 285, 1077, 1078, 286, 1079, 1080, 1081, 287, 1082, 1083, 288, 1084, 1085, 289, 1086, 1087, 1088, 1089, 290, 1090, 1091, 291, 1092, 1093, 292, 1094, 1095, 293, 1096, 1097, 294, 1098, 1099, 295, 1100, 1101, 1102, 296, 1103, 232, 297, 1104, 1105, 1106, 298, 1107, 106, 137, 1108, 1109, 233, 1110, 1111, 299, 1112, 1113, 300, 1114, 1115, 1116, 1117, 301, 1118, 1119, 1120, 1121, 302, 1122, 1123, 1124, 1125, 303, 1126, 1127, 304, 1128, 1129, 305, 1130, 1131, 1132, 1133, 306, 1134, 307, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 486, 487, 1160, 488, 1161, 1164, 1165, 308, 1162, 309, 1163, 13, 12, 310, 814, 1373, 1374, 783, 632, 1166, 311, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 392, 391, 1174, 489, 1175, 490, 1176, 491, 1177, 417, 1178, 492, 1179, 1192, 1193, 1194, 316, 315, 653, 138, 654, 314, 313, 312, 406, 413, 493, 1195, 317, 318, 1203, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 405, 494, 1204, 495, 1205, 496, 1206, 497, 1207, 498, 1208, 1209, 499, 1210, 1211, 1212, 46, 1213, 319, 500, 96, 1249, 1250, 1251, 1252, 409, 1253, 1254, 1255, 408, 1256, 1257, 1258, 1259, 320, 1260, 1262, 1261, 139, 140, 321, 407, 323, 322, 1263, 324, 325, 75, 326, 1264, 329, 1265, 1266, 1267, 1268, 328, 327, 330, 1269, 1270, 47, 48, 141, 1271, 1272, 14, 15, 16, 17, 1273, 1274, 331, 426, 1275, 501, 1276, 502, 1277, 503, 1278, 504, 1279, 505, 1280, 506, 1281, 425, 1282, 335, 1284, 1285, 1286, 1287, 333, 332, 336, 1288, 1289, 49, 50, 1283, 334, 1291, 1290, 18, 19, 20, 21, 1292, 337, 1293, 1294, 428, 1295, 507, 1296, 508, 1297, 509, 1298, 510, 1299, 511, 1300, 512, 1301, 427, 1302, 513, 1303, 341, 1305, 1306, 1307, 1308, 339, 338, 342, 1309, 1310, 51, 52, 1304, 340, 1311, 53, 514, 1312, 1314, 1315, 1316, 1317, 515, 1318, 22, 23, 24, 25, 26, 1313, 343, 1319, 1320, 434, 1321, 433, 1322, 432, 1323, 431, 1324, 429, 1325, 430, 1326, 516, 1327, 347, 1331, 1332, 1333, 1334, 345, 344, 348, 1335, 1336, 54, 55, 1330, 346, 1337, 56, 517, 1338, 1340, 1341, 1342, 1343, 518, 1344, 27, 28, 29, 30, 31, 1339, 349, 1345, 1346, 436, 1347, 435, 1348, 519, 1349, 352, 1375, 1376, 1377, 1378, 351, 350, 353, 1379, 1380, 57, 58, 147, 100, 354, 76, 521, 1381, 1382, 1383, 1384, 1385, 355, 1386, 1387, 439, 1388, 1389, 1390, 1391, 359, 356, 357, 358, 1392, 1393, 1394, 1395, 522, 1396, 1397, 438, 1399, 520, 1400, 437, 1401, 523, 1402, 361, 1404, 1405, 1406, 1407, 360, 362, 1408, 1409, 59, 60, 90, 1410, 363, 1411, 1412, 442, 440, 1413, 441, 1414, 1417, 1418, 1419, 365, 366, 1420, 1421, 61, 1415, 1416, 364, 1423, 1422, 1424, 367, 1425, 1426, 445, 1427, 444, 1428, 443, 1429, 524, 1430, 1434, 1435, 1436, 369, 370, 371, 1438, 1439, 62, 1437, 1433, 368, 1441, 1442, 1440, 1443, 372, 1444, 1445, 448, 1446, 447, 1447, 446, 1448, 525, 1449, 376, 1454, 1455, 1456, 1457, 375, 374, 377, 1458, 1459, 63, 64, 1453, 373, 1460, 1461, 378, 1462, 1463, 451, 1464, 450, 1465, 449, 1466, 526, 1467, 528, 91, 65, 1468, 142, 452, 529, 530, 1469, 1470, 379, 380, 1471, 527, 532, 92, 66, 1552, 143, 453, 533, 1553, 1554, 381, 382, 1555, 531, 418, 1479, 1556, 383, 1557, 1350, 384, 1351, 1352, 105, 1353, 1354, 419, 534, 411, 1355, 1356, 40, 414, 1357, 1358, 535, 1364, 385, 1398, 454, 655, 455, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711 }
  uselistorder i32* @r4, { 36, 50, 51, 52, 6, 53, 54, 55, 7, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 43, 44, 45, 37, 474, 475, 66, 67, 68, 69, 70, 71, 72, 73, 74, 704, 705, 75, 76, 8, 1, 77, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 9, 78, 79, 80, 81, 82, 83, 84, 85, 86, 10, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 89, 90, 38, 39, 40, 102, 103, 11, 104, 12, 105, 13, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 14, 126, 127, 128, 15, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 46, 47, 48, 49, 41, 42, 634, 635, 265, 266, 722, 723, 724, 636, 637, 727, 732, 733, 734, 735, 736, 737, 738, 725, 141, 142, 143, 467, 468, 469, 726, 239, 16, 240, 241, 242, 243, 244, 245, 728, 731, 144, 145, 146, 17, 638, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 18, 655, 656, 657, 658, 639, 640, 641, 642, 602, 603, 604, 605, 606, 607, 608, 609, 610, 19, 611, 612, 613, 614, 615, 616, 617, 618, 619, 659, 681, 682, 683, 684, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 34, 673, 674, 0, 675, 676, 677, 678, 679, 680, 174, 175, 176, 729, 730, 573, 574, 411, 412, 267, 268, 269, 270, 271, 272, 273, 147, 148, 149, 274, 275, 276, 5, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 2, 287, 288, 289, 685, 686, 20, 687, 688, 689, 177, 516, 517, 476, 477, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 178, 179, 180, 181, 152, 153, 150, 151, 154, 155, 156, 157, 158, 159, 160, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 206, 207, 208, 3, 209, 200, 201, 202, 203, 204, 205, 195, 196, 690, 691, 478, 479, 480, 481, 482, 172, 173, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 21, 22, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 290, 291, 4, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 23, 308, 24, 309, 25, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 26, 334, 27, 335, 28, 336, 29, 337, 338, 339, 340, 30, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 31, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 32, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 575, 576, 33, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 692, 693, 694, 695, 696, 697, 701, 702, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 698, 699, 700, 454, 455, 456, 459, 457, 458, 460, 461, 462, 463, 464, 465, 466, 470, 471, 472, 473, 35, 703 }
}

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8 @__decompiler_undefined_function_1() local_unnamed_addr

declare i16* @__decompiler_undefined_function_2() local_unnamed_addr

declare i16 @__decompiler_undefined_function_3() local_unnamed_addr

declare i8* @__decompiler_undefined_function_4() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #0

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #0

attributes #0 = { nounwind readnone }
