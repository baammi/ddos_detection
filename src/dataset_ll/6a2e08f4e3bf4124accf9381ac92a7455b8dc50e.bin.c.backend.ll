source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%tms = type { i32, i32, i32, i32 }
%timespec = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%stat = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%linux_dirent64 = type { i32 }

@df = internal unnamed_addr global i1 false
@eax = internal unnamed_addr global i32 0
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_8056590.2 = global i32 0
@global_var_80565a8.3 = local_unnamed_addr global i32* @global_var_8056590.2
@global_var_8054894.5 = constant [4 x i8] c"GET\00"
@global_var_805486d.6 = constant i32 1210056751
@global_var_805489f.7 = constant i32 540737568
@global_var_805486f.8 = constant [24 x i8] c" HTTP/1.1\0D\0AUser-Agent: \00"
@global_var_8054887.9 = constant [9 x i8] c"\0D\0AHost: \00"
@global_var_80548a6.10 = constant [3 x i8] c"\0D\0A\00"
@global_var_8054898.11 = constant [9 x i8] c"Cookie: \00"
@global_var_80548a1.12 = constant [3 x i8] c"; \00"
@global_var_80548a4.13 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_80548a9.14 = constant i32 1952972859
@global_var_80548ab.15 = constant [5 x i8] c"http\00"
@global_var_80548ba.16 = constant i32 -1623588825
@global_var_80548b0.17 = constant [5 x i8] c"url=\00"
@global_var_80548b5.18 = constant [5 x i8] c"POST\00"
@global_var_80548b3.19 = constant i32 1330643005
@global_var_8056688.20 = local_unnamed_addr global i32 0
@global_var_8056694.21 = local_unnamed_addr global i32 0
@global_var_805668c.22 = local_unnamed_addr global i32 0
@global_var_8056690.23 = local_unnamed_addr global i32 0
@global_var_80566d0.24 = local_unnamed_addr global i32 0
@global_var_80566aa.25 = local_unnamed_addr global i32 0
@global_var_80566b0.26 = local_unnamed_addr global i32 0
@global_var_80566a0.27 = global i32 0
@global_var_80566b8.29 = local_unnamed_addr global i32 0
@global_var_80566c4.30 = local_unnamed_addr global i32 0
@global_var_80566b4.31 = global i32 0
@global_var_805671c.32 = local_unnamed_addr global i32 0
@global_var_80566a4.33 = local_unnamed_addr global i32 0
@global_var_80566fc.34 = local_unnamed_addr global i32 0
@global_var_80566ac.35 = local_unnamed_addr global i32 0
@global_var_8056718.36 = local_unnamed_addr global i32 0
@global_var_8054a95.37 = constant [5 x i8] c"ogin\00"
@global_var_8054a9a.38 = constant [6 x i8] c"enter\00"
@global_var_8054aa0.39 = constant [8 x i8] c"assword\00"
@global_var_8056698.41 = local_unnamed_addr global i32 0
@global_var_80566c8.42 = local_unnamed_addr global i32 0
@global_var_8056740.43 = global i32 0
@global_var_80566f4.45 = global i32 0
@global_var_80568e0.46 = global i32 0
@global_var_80565c0.47 = global i32 0
@global_var_805698c.49 = global i32 0
@global_var_8056990.50 = local_unnamed_addr global i32 0
@global_var_8056994.51 = global i32 0
@global_var_80569a0.52 = local_unnamed_addr global i32 0
@global_var_8056c94.53 = global i32 0
@global_var_8056cbc.54 = local_unnamed_addr global i32 0
@global_var_8056cac.55 = local_unnamed_addr global i32 0
@global_var_8056cb0.56 = local_unnamed_addr global i32 0
@global_var_8056cb4.57 = local_unnamed_addr global i32 0
@global_var_8056cb8.58 = local_unnamed_addr global i32 0
@global_var_8056cc4.59 = local_unnamed_addr global i32 0
@global_var_8056cd0.60 = local_unnamed_addr global i32 0
@global_var_8056cc8.61 = local_unnamed_addr global i32 0
@global_var_8056cd4.62 = local_unnamed_addr global i32 0
@global_var_8056ca8.63 = local_unnamed_addr global i32 0
@global_var_8056ca4.65 = local_unnamed_addr global i32 0
@global_var_8056ccc.66 = local_unnamed_addr global i32 0
@global_var_805699c.67 = local_unnamed_addr global i32 0
@global_var_80565d8.68 = global i32 0
@global_var_80565f0.70 = global i32 0
@global_var_80566d8.71 = local_unnamed_addr global i32 0
@global_var_8056584.73 = global i32 -1
@global_var_8053e19.74 = constant i32 -294069
@global_var_80566e8.75 = local_unnamed_addr global i32 0
@global_var_80566ec.76 = local_unnamed_addr global i32 0
@global_var_805525c.77 = constant [10 x i8] c"/dev/null\00"
@global_var_80566e4.79 = local_unnamed_addr global i32 0
@global_var_80566dc.80 = local_unnamed_addr global i32 0
@global_var_80566e0.81 = local_unnamed_addr global i32 0
@global_var_8055380.83 = constant i32 33554944
@global_var_8053fff.84 = constant i32 1928542531
@global_var_8054023.85 = constant i32 1928542531
@global_var_80566f8.86 = local_unnamed_addr global i32 0
@global_var_805660c.87 = local_unnamed_addr global i32* @global_var_8055380.83
@global_var_8056cd8.88 = local_unnamed_addr global i32 0
@global_var_8056cdc.89 = local_unnamed_addr global i32 0
@global_var_8056620.1 = local_unnamed_addr global i8 0
@global_var_80566b6.28 = local_unnamed_addr global i16 0
@global_var_80566cc.40 = local_unnamed_addr global i16 0
@global_var_80565bc.44 = local_unnamed_addr global i16 -16657
@global_var_8056960.48 = global i8 0
@global_var_8056cc0.64 = local_unnamed_addr global i8 0
@global_var_80566d4.69 = local_unnamed_addr global i8 0
@global_var_80566f0.78 = local_unnamed_addr global i8 0

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_8048094() local_unnamed_addr {
entry:
  %v0_8048097 = load i32, i32* @ebx, align 4
  %v1_8048098 = call i32 @function_80480b0(i32 %v0_8048097)
  %v0_804809d = load i32, i32* @ebx, align 4
  %v1_804809d = add i32 %v0_804809d, 58619
  store i32 %v1_804809d, i32* @ebx, align 4
  %v0_80480a3 = call i32 @function_8048110()
  %v0_80480a8 = call i32 @function_8054820()
  ret i32 %v0_80480a8
}

define i32 @function_80480b0(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @ebx, align 4
  %v0_80480b3 = load i32, i32* @eax, align 4
  ret i32 %v0_80480b3
}

define i32 @function_80480c0() local_unnamed_addr {
dec_label_pc_80480c0:
  %v0_80480c6 = load i8, i8* @global_var_8056620.1, align 32
  %v1_80480c6 = icmp eq i8 %v0_80480c6, 0
  br i1 %v1_80480c6, label %dec_label_pc_80480db.preheader, label %dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge

dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge: ; preds = %dec_label_pc_80480c0
  %v0_8048107.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8048106

dec_label_pc_80480db.preheader:                   ; preds = %dec_label_pc_80480c0
  %v0_80480db1 = load i32, i32* bitcast (i32** @global_var_80565a8.3 to i32*), align 8
  %v1_80480e22 = icmp eq i32 %v0_80480db1, 0
  %v1_80480e44 = icmp eq i1 %v1_80480e22, false
  br i1 %v1_80480e44, label %dec_label_pc_80480d1.lr.ph, label %dec_label_pc_80480e6

dec_label_pc_80480d1.lr.ph:                       ; preds = %dec_label_pc_80480db.preheader
  br label %dec_label_pc_80480d1

dec_label_pc_80480d1:                             ; preds = %dec_label_pc_80480d1.lr.ph, %dec_label_pc_80480d1
  %v0_80480d1 = phi i32 [ %v0_80480db1, %dec_label_pc_80480d1.lr.ph ], [ %v0_80480db, %dec_label_pc_80480d1 ]
  %v1_80480d1 = add i32 %v0_80480d1, 4
  store i32 %v1_80480d1, i32* bitcast (i32** @global_var_80565a8.3 to i32*), align 8
  call void @__pseudo_call(i32 %v0_80480d1)
  %v0_80480db = load i32, i32* bitcast (i32** @global_var_80565a8.3 to i32*), align 8
  %v1_80480e2 = icmp eq i32 %v0_80480db, 0
  %v1_80480e4 = icmp eq i1 %v1_80480e2, false
  br i1 %v1_80480e4, label %dec_label_pc_80480d1, label %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge

dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge: ; preds = %dec_label_pc_80480d1
  br label %dec_label_pc_80480e6

dec_label_pc_80480e6:                             ; preds = %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge, %dec_label_pc_80480db.preheader
  store i8 1, i8* @global_var_8056620.1, align 32
  br label %dec_label_pc_8048106

dec_label_pc_8048106:                             ; preds = %dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge, %dec_label_pc_80480e6
  %v0_8048107 = phi i32 [ %v0_8048107.pre, %dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge ], [ 0, %dec_label_pc_80480e6 ]
  ret i32 %v0_8048107

; uselistorder directives
  uselistorder i32 %v0_80480db, { 1, 0 }
  uselistorder i32 %v0_80480d1, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_80565a8.3 to i32*), { 1, 2, 0 }
  uselistorder i8* @global_var_8056620.1, { 1, 0 }
  uselistorder label %dec_label_pc_8048106, { 1, 0 }
  uselistorder label %dec_label_pc_80480d1, { 1, 0 }
}

define i32 @function_8048110() local_unnamed_addr {
dec_label_pc_8048110:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048110 = load i32, i32* @ebp, align 4
  store i32 %v0_8048110, i32* %stack_var_-4, align 4
  %v4_8048110 = ptrtoint i32* %stack_var_-4 to i32
  store i32 0, i32* @eax, align 4
  store i32 %v4_8048110, i32* @ebp, align 4
  %v0_804811b = call i32 @function_8048120()
  ret i32 %v0_804811b

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_8048120() local_unnamed_addr {
dec_label_pc_8048120:
  %v0_8048127 = load i32, i32* @eax, align 4
  %v1_8048127 = icmp eq i32 %v0_8048127, 0
  br i1 %v1_8048127, label %dec_label_pc_8048140, label %dec_label_pc_804812b

dec_label_pc_804812b:                             ; preds = %dec_label_pc_8048120
  %v1_8048138 = call i32 @unknown_0(i32 134567296)
  br label %dec_label_pc_8048140

dec_label_pc_8048140:                             ; preds = %dec_label_pc_8048120, %dec_label_pc_804812b
  %v0_8048140 = load i32, i32* inttoptr (i32 134571412 to i32*), align 4
  %v1_8048145 = icmp eq i32 %v0_8048140, 0
  br i1 %v1_8048145, label %dec_label_pc_804815f, label %dec_label_pc_8048149

dec_label_pc_8048149:                             ; preds = %dec_label_pc_8048140
  br label %dec_label_pc_804815f

dec_label_pc_804815f:                             ; preds = %dec_label_pc_8048149, %dec_label_pc_8048140
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_8048140, { 1, 0 }
}

define i32 @entry_point(i8 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20900 = alloca i8*, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-20825 = alloca i32, align 4
  %stack_var_-20972 = alloca i32, align 4
  %stack_var_-20956 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  store i32 0, i32* @ebp, align 4
  %v3_8048166 = sext i8 %arg1 to i32
  store i32 %v3_8048166, i32* @esi, align 4
  %v5_8048166 = ptrtoint i32* %stack_var_4 to i32
  store i32 %v5_8048166, i32* @ecx, align 4
  %v2_8048169 = icmp ult i32* %stack_var_4, inttoptr (i32 16 to i32*)
  store i1 %v2_8048169, i1* %zf.global-to-local, align 1
  %v0_804816c = load i32, i32* @eax, align 4
  store i32 %v0_804816c, i32* %stack_var_-4, align 4
  %v4_804816c = ptrtoint i32* %stack_var_-4 to i32
  %v0_804816e = load i32, i32* @edx, align 4
  %v11_8048180 = call i32 @function_8053eb5(i32 134538624, i32 %v3_8048166, i32* nonnull %stack_var_4, i32 -108, i32 134563910, i32 %v0_804816e, i32 %v4_804816c, i32 %v0_804816c)
  %v0_8048191 = load i32, i32* @edi, align 4
  %v0_8048192 = load i32, i32* @esi, align 4
  %v0_8048193 = load i32, i32* @ebx, align 4
  %v15_8048194 = ptrtoint i32* %stack_var_-20956 to i32
  store i32 134563910, i32* @ebx, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  store i32 148, i32* %eax.global-to-local, align 4
  store i32 %v3_8048166, i32* @ebp, align 4
  store i32 148, i32* @esi, align 4
  store i32 148, i32* %stack_var_-20972, align 4
  %v5_80481bd = call i32 @function_804a0a0(i8 -108, i32 134563910, i32 21, i32 0)
  store i32 %v5_80481bd, i32* %eax.global-to-local, align 4
  %v0_80481cd = load i32, i32* @ebx, align 4
  %v0_80481ce = load i32, i32* @esi, align 4
  %v5_80481cf = trunc i32 %v0_80481ce to i8
  %v6_80481cf = call i32 @function_804a0a0(i8 %v5_80481cf, i32 %v0_80481cd, i32 20, i32 ptrtoint ([4 x i8]* @global_var_8054894.5 to i32))
  store i32 %v6_80481cf, i32* %eax.global-to-local, align 4
  %tmp136 = bitcast i8** %stack_var_-20900 to i32*
  store i32 %v6_80481cf, i32* %tmp136, align 4
  %v0_80481d8 = load i32, i32* @esp, align 4
  %v6_80481d8 = icmp eq i32 %v0_80481d8, -32
  store i1 %v6_80481d8, i1* %zf.global-to-local, align 1
  %v0_80481df = load i32, i32* @ebx, align 4
  %v0_80481e0 = load i32, i32* @esi, align 4
  store i32 %v0_80481e0, i32* %stack_var_-20972, align 4
  %v4_80481e1 = trunc i32 %v0_80481e0 to i8
  %v5_80481e1 = call i32 @function_804a0a0(i8 %v4_80481e1, i32 %v0_80481df, i32 8, i32 0)
  store i32 %v5_80481e1, i32* %eax.global-to-local, align 4
  %v0_80481f1 = load i32, i32* @ebx, align 4
  %v0_80481f2 = load i32, i32* @esi, align 4
  %v5_80481f3 = trunc i32 %v0_80481f2 to i8
  %v6_80481f3 = call i32 @function_804a0a0(i8 %v5_80481f3, i32 %v0_80481f1, i32 22, i32 ptrtoint (i32* @global_var_805486d.6 to i32))
  store i32 %v6_80481f3, i32* @eax, align 4
  %v0_80481fc = load i32, i32* @esp, align 4
  %v6_80481fc = icmp eq i32 %v0_80481fc, -32
  store i1 %v6_80481fc, i1* %zf.global-to-local, align 1
  %v0_8048203 = load i32, i32* @ebx, align 4
  %v0_8048204 = load i32, i32* @esi, align 4
  store i32 %v0_8048204, i32* %stack_var_-20972, align 4
  %v4_8048205 = trunc i32 %v0_8048204 to i8
  %v5_8048205 = call i32 @function_804a600(i8 %v4_8048205, i32 %v0_8048203, i32 24, i32 1)
  store i32 %v5_8048205, i32* @eax, align 4
  store i32 %v5_8048205, i32* @edi, align 4
  %v0_8048210 = load i32, i32* @ebx, align 4
  %v0_8048211 = load i32, i32* @esi, align 4
  %v5_8048212 = trunc i32 %v0_8048211 to i8
  %v6_8048212 = call i32 @function_804a600(i8 %v5_8048212, i32 %v0_8048210, i32 7, i32 80)
  store i32 %v6_8048212, i32* %eax.global-to-local, align 4
  %v0_804821c = load i32, i32* @esp, align 4
  %v9_804821c = icmp eq i32 %v0_804821c, -28
  store i1 %v9_804821c, i1* %zf.global-to-local, align 1
  %v2_8048226 = ptrtoint i32* %stack_var_-20825 to i32
  store i32 %v2_8048226, i32* %edx.global-to-local, align 4
  store i32 %v2_8048226, i32* %stack_var_-20972, align 4
  %v3_804822e = bitcast i32* %stack_var_-20825 to i8*
  %v4_804822e = call i32 @function_805250a(i8* %v3_804822e, i32 0, i32 10241)
  store i32 %v4_804822e, i32* %eax.global-to-local, align 4
  store i32 %v5_80481e1, i32* %ecx.global-to-local, align 4
  %v1_804823a = icmp eq i32 %v5_80481e1, 0
  store i1 %v1_804823a, i1* %zf.global-to-local, align 1
  %tmp238 = inttoptr i32 %v6_80481cf to i8*
  br i1 %v1_804823a, label %dec_label_pc_804825d, label %dec_label_pc_804823e

dec_label_pc_804823e:                             ; preds = %entry
  store i32 %v6_80481f3, i32* %edx.global-to-local, align 4
  %v1_8048242 = icmp eq i32 %v6_80481f3, 0
  store i1 %v1_8048242, i1* %zf.global-to-local, align 1
  br i1 %v1_8048242, label %dec_label_pc_804825d, label %dec_label_pc_8048246

dec_label_pc_8048246:                             ; preds = %dec_label_pc_804823e
  %v9_8048246 = icmp eq i32* %stack_var_-20956, inttoptr (i32 12 to i32*)
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 %v6_80481f3, i32* %eax.global-to-local, align 4
  store i32 %v6_80481f3, i32* %stack_var_-20972, align 4
  %v1_804824e = inttoptr i32 %v6_80481f3 to i8*
  %v2_804824e = call i32 @function_80519e0(i8* %v1_804824e)
  store i32 %v2_804824e, i32* %eax.global-to-local, align 4
  %v10_8048256 = icmp eq i32 %v2_804824e, 255
  store i1 %v10_8048256, i1* %zf.global-to-local, align 1
  %v7_804825b = icmp sgt i32 %v2_804824e, 255
  br i1 %v7_804825b, label %dec_label_pc_804825d, label %dec_label_pc_8048268

dec_label_pc_804825d:                             ; preds = %dec_label_pc_8048246, %dec_label_pc_804827d, %dec_label_pc_8048268, %dec_label_pc_804823e, %entry
  %v0_8048267 = phi i32 [ %v2_804824e, %dec_label_pc_8048246 ], [ %v2_8048285, %dec_label_pc_804827d ], [ %v2_8048270, %dec_label_pc_8048268 ], [ %v4_804822e, %dec_label_pc_804823e ], [ %v4_804822e, %entry ]
  %v9_804825d = icmp eq i32* %stack_var_-20956, inttoptr (i32 -20908 to i32*)
  store i1 %v9_804825d, i1* %zf.global-to-local, align 1
  store i32 %v0_8048193, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %v0_8048192, 16777216
  %v3_8048264 = sdiv i32 %sext, 16777216
  store i32 %v3_8048264, i32* %esi.global-to-local, align 4
  store i32 %v0_8048191, i32* %edi.global-to-local, align 4
  ret i32 %v0_8048267

dec_label_pc_8048268:                             ; preds = %dec_label_pc_8048246
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 %v5_80481e1, i32* %eax.global-to-local, align 4
  store i32 %v5_80481e1, i32* %stack_var_-20972, align 4
  %v1_8048270 = inttoptr i32 %v5_80481e1 to i8*
  %v2_8048270 = call i32 @function_80519e0(i8* %v1_8048270)
  store i32 %v2_8048270, i32* %eax.global-to-local, align 4
  %v1_8048278 = add i32 %v2_8048270, -127
  %v6_8048278 = sub i32 126, %v2_8048270
  %v7_8048278 = and i32 %v6_8048278, %v2_8048270
  %v8_8048278 = icmp slt i32 %v7_8048278, 0
  %v9_8048278 = icmp eq i32 %v1_8048278, 0
  store i1 %v9_8048278, i1* %zf.global-to-local, align 1
  %v10_8048278 = icmp slt i32 %v1_8048278, 0
  %v3_804827b = icmp eq i1 %v10_8048278, %v8_8048278
  %v4_804827b = icmp eq i1 %v9_8048278, false
  %v5_804827b = and i1 %v4_804827b, %v3_804827b
  br i1 %v5_804827b, label %dec_label_pc_804825d, label %dec_label_pc_804827d

dec_label_pc_804827d:                             ; preds = %dec_label_pc_8048268
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 %v6_80481cf, i32* %eax.global-to-local, align 4
  store i32 %v6_80481cf, i32* %stack_var_-20972, align 4
  %v2_8048285 = call i32 @function_80519e0(i8* %tmp238)
  store i32 %v2_8048285, i32* %eax.global-to-local, align 4
  %v1_804828d = add i32 %v2_8048285, -9
  %v6_804828d = sub i32 8, %v2_8048285
  %v7_804828d = and i32 %v6_804828d, %v2_8048285
  %v8_804828d = icmp slt i32 %v7_804828d, 0
  %v9_804828d = icmp eq i32 %v1_804828d, 0
  store i1 %v9_804828d, i1* %zf.global-to-local, align 1
  %v10_804828d = icmp slt i32 %v1_804828d, 0
  %v3_8048290 = icmp eq i1 %v10_804828d, %v8_804828d
  %v4_8048290 = icmp eq i1 %v9_804828d, false
  %v5_8048290 = and i1 %v4_8048290, %v3_8048290
  br i1 %v5_8048290, label %dec_label_pc_804825d, label %dec_label_pc_804829d.preheader

dec_label_pc_804829d.preheader:                   ; preds = %dec_label_pc_804827d
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 %v6_80481cf, i32* %eax.global-to-local, align 4
  store i32 %v6_80481cf, i32* %stack_var_-20972, align 4
  %v2_80482a5212 = call i32 @function_80519e0(i8* %tmp238)
  store i32 %v2_80482a5212, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v12_80482b4213 = icmp eq i32 %v2_80482a5212, 0
  store i1 %v12_80482b4213, i1* %zf.global-to-local, align 1
  %v7_80482b6214 = icmp sgt i32 %v2_80482a5212, 0
  br i1 %v7_80482b6214, label %dec_label_pc_80482b8, label %dec_label_pc_80482dd

dec_label_pc_80482b8:                             ; preds = %dec_label_pc_804829d.preheader, %dec_label_pc_80482cc
  %v4_80482a0217 = phi i32 [ %v4_80482a0, %dec_label_pc_80482cc ], [ %v6_80481cf, %dec_label_pc_804829d.preheader ]
  %v4_80482be216 = phi i32 [ %v1_80482d3, %dec_label_pc_80482cc ], [ 0, %dec_label_pc_804829d.preheader ]
  %v3_80482b8215 = phi i8* [ %v3_80482a0.pre, %dec_label_pc_80482cc ], [ %tmp238, %dec_label_pc_804829d.preheader ]
  %v2_80482bc = add i32 %v4_80482be216, %v4_80482a0217
  %v12_80482bc = icmp eq i32 %v2_80482bc, 0
  store i1 %v12_80482bc, i1* %zf.global-to-local, align 1
  store i32 %v2_80482bc, i32* %ecx.global-to-local, align 4
  %v1_80482be = inttoptr i32 %v2_80482bc to i8*
  %v2_80482be = load i8, i8* %v1_80482be, align 1
  %v3_80482be = zext i8 %v2_80482be to i32
  %v5_80482be = and i32 %v4_80482be216, -256
  %v6_80482be = or i32 %v3_80482be, %v5_80482be
  store i32 %v6_80482be, i32* %edx.global-to-local, align 4
  %v1_80482c0 = add i32 %v6_80482be, -97
  store i32 %v1_80482c0, i32* %eax.global-to-local, align 4
  %v1_80482c3 = trunc i32 %v1_80482c0 to i8
  %v11_80482c3 = icmp eq i8 %v1_80482c3, 25
  store i1 %v11_80482c3, i1* %zf.global-to-local, align 1
  %v8_80482c5 = icmp ugt i8 %v1_80482c3, 25
  br i1 %v8_80482c5, label %dec_label_pc_80482cc, label %dec_label_pc_80482c7

dec_label_pc_80482c7:                             ; preds = %dec_label_pc_80482b8
  %v1_80482c7 = add i32 %v6_80482be, -32
  store i32 %v1_80482c7, i32* %eax.global-to-local, align 4
  %v1_80482ca = trunc i32 %v1_80482c7 to i8
  store i8 %v1_80482ca, i8* %v1_80482be, align 1
  %v0_804829d.pre.pre = load i32, i32* @esp, align 4
  %v3_80482a0.pre.pre = load i8*, i8** %stack_var_-20900, align 4
  br label %dec_label_pc_80482cc

dec_label_pc_80482cc:                             ; preds = %dec_label_pc_80482b8, %dec_label_pc_80482c7
  %v3_80482a0.pre = phi i8* [ %v3_80482b8215, %dec_label_pc_80482b8 ], [ %v3_80482a0.pre.pre, %dec_label_pc_80482c7 ]
  %v0_804829d.pre = phi i32 [ %v15_8048194, %dec_label_pc_80482b8 ], [ %v0_804829d.pre.pre, %dec_label_pc_80482c7 ]
  %v1_80482d3 = add i32 %v4_80482be216, 1
  %v9_804829d = icmp eq i32 %v0_804829d.pre, 12
  store i1 %v9_804829d, i1* %zf.global-to-local, align 1
  %v4_80482a0 = ptrtoint i8* %v3_80482a0.pre to i32
  store i32 %v4_80482a0, i32* %eax.global-to-local, align 4
  store i32 %v4_80482a0, i32* %stack_var_-20972, align 4
  %v2_80482a5 = call i32 @function_80519e0(i8* %v3_80482a0.pre)
  store i32 %v2_80482a5, i32* %eax.global-to-local, align 4
  store i32 %v1_80482d3, i32* %edx.global-to-local, align 4
  %v12_80482b4 = icmp eq i32 %v2_80482a5, %v1_80482d3
  store i1 %v12_80482b4, i1* %zf.global-to-local, align 1
  %v7_80482b6 = icmp sgt i32 %v2_80482a5, %v1_80482d3
  br i1 %v7_80482b6, label %dec_label_pc_80482b8, label %dec_label_pc_80482dd

dec_label_pc_80482dd:                             ; preds = %dec_label_pc_80482cc, %dec_label_pc_804829d.preheader
  %v0_80482dd = load i32, i32* @edi, align 4
  %v7_80482e7 = icmp sgt i32 %v0_80482dd, 256
  %.v0_80482dd = select i1 %v7_80482e7, i32 256, i32 %v0_80482dd
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 36, i32* %stack_var_-20972, align 4
  %v2_80482f6 = call i32 @function_8051090(i8 36)
  store i32 %v2_80482f6, i32* %eax.global-to-local, align 4
  store i32 37, i32* %stack_var_-20972, align 4
  %v2_8048302 = call i32 @function_8051090(i8 37)
  store i32 %v2_8048302, i32* %eax.global-to-local, align 4
  store i32 38, i32* %stack_var_-20972, align 4
  %v2_804830e = call i32 @function_8051090(i8 38)
  store i32 %v2_804830e, i32* %eax.global-to-local, align 4
  store i32 39, i32* %stack_var_-20972, align 4
  %v2_804831a = call i32 @function_8051090(i8 39)
  store i32 %v2_804831a, i32* %eax.global-to-local, align 4
  store i32 40, i32* %stack_var_-20972, align 4
  %v2_8048326 = call i32 @function_8051090(i8 40)
  store i32 %v2_8048326, i32* %eax.global-to-local, align 4
  store i32 41, i32* %stack_var_-20972, align 4
  %v2_8048332 = call i32 @function_8051090(i8 41)
  store i32 %v2_8048332, i32* %eax.global-to-local, align 4
  store i32 42, i32* %stack_var_-20972, align 4
  %v2_804833e = call i32 @function_8051090(i8 42)
  store i32 %v2_804833e, i32* %eax.global-to-local, align 4
  store i32 43, i32* %stack_var_-20972, align 4
  %v2_804834a = call i32 @function_8051090(i8 43)
  store i32 %v2_804834a, i32* %eax.global-to-local, align 4
  store i32 44, i32* %stack_var_-20972, align 4
  %v2_8048356 = call i32 @function_8051090(i8 44)
  store i32 %v2_8048356, i32* %eax.global-to-local, align 4
  store i32 45, i32* %stack_var_-20972, align 4
  %v2_8048362 = call i32 @function_8051090(i8 45)
  store i32 %v2_8048362, i32* %eax.global-to-local, align 4
  store i32 46, i32* %stack_var_-20972, align 4
  %v2_804836e = call i32 @function_8051090(i8 46)
  %v2_8048373 = load i32, i32* %stack_var_-20972, align 4
  store i32 %v2_8048373, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %.v0_80482dd, i32* @esi, align 4
  store i32 %.v0_80482dd, i32* %stack_var_-20972, align 4
  %v2_804837f = sext i32 %.v0_80482dd to i64
  %v3_804837f = call i32 @function_8053088(i64 %v2_804837f, i32 3140)
  store i32 %v3_804837f, i32* %eax.global-to-local, align 4
  store i32 %v3_804837f, i32* @esi, align 4
  store i32 %.v0_80482dd, i32* @ebx, align 4
  %v1_8048391 = icmp eq i32 %.v0_80482dd, 0
  store i1 %v1_8048391, i1* %zf.global-to-local, align 1
  %tmp137 = icmp slt i32 %.v0_80482dd, 1
  br i1 %tmp137, label %dec_label_pc_80484be, label %dec_label_pc_8048399

dec_label_pc_8048399:                             ; preds = %dec_label_pc_80482dd
  %v0_8048399 = load i32, i32* @ebp, align 4
  %v1_8048399 = trunc i32 %v0_8048399 to i8
  store i32 0, i32* @ebp, align 4
  %v1_804839d4 = urem i32 %v0_8048399, 256
  %v3_804839d = icmp eq i8 %v1_8048399, 0
  store i1 %v3_804839d, i1* %zf.global-to-local, align 1
  store i32 %v1_804839d4, i32* @ecx, align 4
  %v2_80483e1 = inttoptr i32 %v1_804839d4 to i8*
  %v2_8049f7d = inttoptr i32 %tmp to i8*
  %v1_8049f3f = trunc i32 %tmp to i8
  %v2_804a072 = inttoptr i32 %v0_804816e to i32*
  br label %dec_label_pc_80483a7

dec_label_pc_80483a7:                             ; preds = %dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge, %dec_label_pc_8048399
  %v0_80483a9 = phi i32 [ %v0_80483a9.pre, %dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge ], [ %v3_804837f, %dec_label_pc_8048399 ]
  %v0_80483a7 = phi i32 [ %v4_8049f85, %dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge ], [ 0, %dec_label_pc_8048399 ]
  store i32 %v0_80483a7, i32* %edx.global-to-local, align 4
  %v1_80483a9 = add i32 %v0_80483a9, 4
  %v2_80483a9 = inttoptr i32 %v1_80483a9 to i8*
  store i8 0, i8* %v2_80483a9, align 1
  %v0_80483ad = load i32, i32* %edx.global-to-local, align 4
  %v2_80483ad = ashr i32 %v0_80483ad, 31
  %v3_80483ad = icmp eq i32 %v2_80483ad, 0
  store i1 %v3_80483ad, i1* %zf.global-to-local, align 1
  store i32 %v2_80483ad, i32* %edx.global-to-local, align 4
  %v0_80483b0 = load i32, i32* @ebp, align 4
  store i32 %v0_80483b0, i32* %eax.global-to-local, align 4
  %v0_80483b2 = load i32, i32* @esp, align 4
  %v1_80483b2 = add i32 %v0_80483b2, 88
  %v2_80483b2 = inttoptr i32 %v1_80483b2 to i32*
  %v3_80483b2 = load i32, i32* %v2_80483b2, align 4
  %v5_80483b2 = zext i32 %v0_80483b0 to i64
  %v7_80483b2 = zext i32 %v2_80483ad to i64
  %v8_80483b2 = mul nuw i64 %v7_80483b2, 4294967296
  %v9_80483b2 = or i64 %v5_80483b2, %v8_80483b2
  %v10_80483b2 = zext i32 %v3_80483b2 to i64
  %v11_80483b2 = sdiv i64 %v9_80483b2, %v10_80483b2
  %v12_80483b2 = trunc i64 %v11_80483b2 to i32
  store i32 %v12_80483b2, i32* %eax.global-to-local, align 4
  %v13_80483b2 = srem i64 %v9_80483b2, %v10_80483b2
  %v14_80483b2 = trunc i64 %v13_80483b2 to i32
  store i32 %v14_80483b2, i32* %edx.global-to-local, align 4
  %v1_80483b6 = add i32 %v0_80483b2, 20932
  %v2_80483b6 = inttoptr i32 %v1_80483b6 to i32*
  %v3_80483b6 = load i32, i32* %v2_80483b6, align 4
  store i32 %v3_80483b6, i32* %eax.global-to-local, align 4
  %v0_80483bd = load i32, i32* @esi, align 4
  %v1_80483bd = inttoptr i32 %v0_80483bd to i32*
  store i32 -1, i32* %v1_80483bd, align 4
  %v0_80483c3 = load i32, i32* %edx.global-to-local, align 4
  %v0_80483c6 = load i32, i32* %eax.global-to-local, align 4
  %v2_80483c6 = mul i32 %v0_80483c3, 24
  %v3_80483c6 = add i32 %v0_80483c6, %v2_80483c6
  store i32 %v3_80483c6, i32* @edi, align 4
  %v0_80483c9 = load i32, i32* @esi, align 4
  %v1_80483c9 = add i32 %v0_80483c9, 532
  store i32 %v1_80483c9, i32* %edx.global-to-local, align 4
  %v1_80483cf = load i32, i32* @esp, align 4
  %v2_80483cf = add i32 %v1_80483cf, 36
  %v3_80483cf = inttoptr i32 %v2_80483cf to i32*
  store i32 %v1_80483c9, i32* %v3_80483cf, align 4
  %v0_80483d3 = load i32, i32* @edi, align 4
  %v1_80483d3 = add i32 %v0_80483d3, 16
  %v2_80483d3 = inttoptr i32 %v1_80483d3 to i32*
  %v3_80483d3 = load i32, i32* %v2_80483d3, align 4
  store i32 %v3_80483d3, i32* %eax.global-to-local, align 4
  %v1_80483d6 = load i32, i32* @esi, align 4
  %v2_80483d6 = add i32 %v1_80483d6, 16
  %v3_80483d6 = inttoptr i32 %v2_80483d6 to i32*
  store i32 %v3_80483d3, i32* %v3_80483d6, align 4
  %v0_80483d9 = load i32, i32* @ecx, align 4
  %v1_80483d9 = load i32, i32* @esp, align 4
  %v2_80483d9 = add i32 %v1_80483d9, -4
  %v3_80483d9 = inttoptr i32 %v2_80483d9 to i32*
  store i32 %v0_80483d9, i32* %v3_80483d9, align 4
  %v0_80483da = load i32, i32* @ecx, align 4
  %v2_80483da = add i32 %v1_80483d9, -8
  %v3_80483da = inttoptr i32 %v2_80483da to i32*
  store i32 %v0_80483da, i32* %v3_80483da, align 4
  %v1_80483db = add i32 %v1_80483d9, 64
  %v2_80483db = inttoptr i32 %v1_80483db to i32*
  %v3_80483db = load i32, i32* %v2_80483db, align 4
  store i32 %v3_80483db, i32* %eax.global-to-local, align 4
  %v2_80483df = add i32 %v1_80483d9, -12
  %v3_80483df = inttoptr i32 %v2_80483df to i32*
  store i32 %v3_80483db, i32* %v3_80483df, align 4
  %v0_80483e0 = load i32, i32* %edx.global-to-local, align 4
  %v2_80483e0 = add i32 %v1_80483d9, -16
  %v3_80483e0 = inttoptr i32 %v2_80483e0 to i32*
  store i32 %v0_80483e0, i32* %v3_80483e0, align 4
  %v3_80483e1 = call i32 @function_8051a00(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80483e1, i32* %eax.global-to-local, align 4
  %v0_80483e6 = load i32, i32* @esp, align 4
  %v1_80483e6 = add i32 %v0_80483e6, 16
  %v6_80483e6 = icmp eq i32 %v1_80483e6, 0
  store i1 %v6_80483e6, i1* %zf.global-to-local, align 1
  %v0_80483e9 = load i32, i32* @esi, align 4
  %v1_80483e9 = add i32 %v0_80483e9, 532
  %v2_80483e9 = inttoptr i32 %v1_80483e9 to i8*
  %v3_80483e9 = load i8, i8* %v2_80483e9, align 1
  %v12_80483e9 = icmp eq i8 %v3_80483e9, 47
  store i1 %v12_80483e9, i1* %zf.global-to-local, align 1
  br i1 %v12_80483e9, label %dec_label_pc_804841e, label %dec_label_pc_80483f2

dec_label_pc_80483f2:                             ; preds = %dec_label_pc_80483a7
  %v9_80483f2 = icmp eq i32 %v0_80483e6, -4
  store i1 %v9_80483f2, i1* %zf.global-to-local, align 1
  %v1_80483f5 = add i32 %v0_80483e6, 52
  %v2_80483f5 = inttoptr i32 %v1_80483f5 to i32*
  %v3_80483f5 = load i32, i32* %v2_80483f5, align 4
  store i32 %v3_80483f5, i32* %eax.global-to-local, align 4
  %v3_80483f9 = inttoptr i32 %v0_80483e6 to i32*
  store i32 %v3_80483f5, i32* %v3_80483f9, align 4
  %v2_80483fa = call i32 @function_80519e0(i8* %v2_80483e1)
  store i32 %v2_80483fa, i32* %eax.global-to-local, align 4
  %v0_80483ff = load i32, i32* @esp, align 4
  %v9_80483ff = icmp eq i32 %v0_80483ff, -12
  store i1 %v9_80483ff, i1* %zf.global-to-local, align 1
  %v2_8048402 = add i32 %v0_80483ff, 8
  %v3_8048402 = inttoptr i32 %v2_8048402 to i32*
  store i32 %v2_80483fa, i32* %v3_8048402, align 4
  %v1_8048403 = add i32 %v0_80483ff, 52
  %v2_8048403 = inttoptr i32 %v1_8048403 to i32*
  %v3_8048403 = load i32, i32* %v2_8048403, align 4
  %v2_8048407 = add i32 %v0_80483ff, 4
  %v3_8048407 = inttoptr i32 %v2_8048407 to i32*
  store i32 %v3_8048403, i32* %v3_8048407, align 4
  %v0_8048408 = load i32, i32* @esi, align 4
  %v1_8048408 = add i32 %v0_8048408, 533
  store i32 %v1_8048408, i32* %eax.global-to-local, align 4
  %v3_804840e = inttoptr i32 %v0_80483ff to i32*
  store i32 %v1_8048408, i32* %v3_804840e, align 4
  %v4_804840f = call i32 @function_80524e3(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804840f, i32* %eax.global-to-local, align 4
  %v0_8048414 = load i32, i32* @esi, align 4
  %v1_8048414 = add i32 %v0_8048414, 532
  %v2_8048414 = inttoptr i32 %v1_8048414 to i8*
  store i8 47, i8* %v2_8048414, align 1
  %v0_804841b = load i32, i32* @esp, align 4
  %v1_804841b = add i32 %v0_804841b, 16
  %v6_804841b = icmp eq i32 %v1_804841b, 0
  store i1 %v6_804841b, i1* %zf.global-to-local, align 1
  %v0_804841e.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804841e

dec_label_pc_804841e:                             ; preds = %dec_label_pc_80483a7, %dec_label_pc_80483f2
  %v1_804841e = phi i32 [ %v1_80483e6, %dec_label_pc_80483a7 ], [ %v1_804841b, %dec_label_pc_80483f2 ]
  %v0_804841e = phi i32 [ %v3_80483e1, %dec_label_pc_80483a7 ], [ %v0_804841e.pre, %dec_label_pc_80483f2 ]
  %v2_804841e = add i32 %v1_804841e, -4
  %v3_804841e = inttoptr i32 %v2_804841e to i32*
  store i32 %v0_804841e, i32* %v3_804841e, align 4
  %v0_804841f = load i32, i32* %eax.global-to-local, align 4
  %v2_804841f = add i32 %v1_804841e, -8
  %v3_804841f = inttoptr i32 %v2_804841f to i32*
  store i32 %v0_804841f, i32* %v3_804841f, align 4
  %v1_8048420 = add i32 %v1_804841e, 56
  %v2_8048420 = inttoptr i32 %v1_8048420 to i32*
  %v3_8048420 = load i32, i32* %v2_8048420, align 4
  %v2_8048424 = add i32 %v1_804841e, -12
  %v3_8048424 = inttoptr i32 %v2_8048424 to i32*
  store i32 %v3_8048420, i32* %v3_8048424, align 4
  %v0_8048425 = load i32, i32* @esi, align 4
  %v1_8048425 = add i32 %v0_8048425, 1440
  store i32 %v1_8048425, i32* %eax.global-to-local, align 4
  %v2_804842b = add i32 %v1_804841e, -16
  %v3_804842b = inttoptr i32 %v2_804842b to i32*
  store i32 %v1_8048425, i32* %v3_804842b, align 4
  %v3_804842c = call i32 @function_8051a00(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804842c, i32* %eax.global-to-local, align 4
  %v0_8048431 = load i32, i32* @esp, align 4
  %v1_8048431 = inttoptr i32 %v0_8048431 to i32*
  %v2_8048431 = load i32, i32* %v1_8048431, align 4
  store i32 %v2_8048431, i32* @ebx, align 4
  %v0_8048433 = load i32, i32* @esi, align 4
  %v1_8048433 = add i32 %v0_8048433, 1431
  store i32 %v1_8048433, i32* %eax.global-to-local, align 4
  %v1_8048439 = add i32 %v0_8048431, 72
  %v2_8048439 = inttoptr i32 %v1_8048439 to i32*
  %v3_8048439 = load i32, i32* %v2_8048439, align 4
  store i32 %v3_8048439, i32* %ecx.global-to-local, align 4
  %v2_804843d = add i32 %v0_8048431, 4
  %v3_804843d = inttoptr i32 %v2_804843d to i32*
  store i32 %v3_8048439, i32* %v3_804843d, align 4
  %v0_804843e = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_804843e, i32* %v1_8048431, align 4
  %v3_804843f = call i32 @function_8051a00(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804843f, i32* %eax.global-to-local, align 4
  %v0_8048444 = load i32, i32* @esp, align 4
  %v1_8048444 = inttoptr i32 %v0_8048444 to i32*
  %v2_8048444 = load i32, i32* %v1_8048444, align 4
  store i32 %v2_8048444, i32* %eax.global-to-local, align 4
  %v3_8048444 = add i32 %v0_8048444, 4
  %v1_8048445 = inttoptr i32 %v3_8048444 to i32*
  %v2_8048445 = load i32, i32* %v1_8048445, align 4
  store i32 %v2_8048445, i32* %edx.global-to-local, align 4
  %v1_8048446 = add i32 %v0_8048444, 76
  %v2_8048446 = inttoptr i32 %v1_8048446 to i32*
  %v3_8048446 = load i32, i32* %v2_8048446, align 4
  store i32 %v3_8048446, i32* %v1_8048445, align 4
  %v0_804844b = load i32, i32* @esi, align 4
  %v1_804844b = add i32 %v0_804844b, 789
  store i32 %v1_804844b, i32* %eax.global-to-local, align 4
  store i32 %v1_804844b, i32* %v1_8048444, align 4
  %v3_8048452 = call i32 @function_8051a00(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048452, i32* %eax.global-to-local, align 4
  %v0_8048457 = load i32, i32* @esp, align 4
  %v6_8048457 = icmp eq i32 %v0_8048457, -16
  store i1 %v6_8048457, i1* %zf.global-to-local, align 1
  %v0_804845a = load i32, i32* @edi, align 4
  %v1_804845a = add i32 %v0_804845a, 20
  %v2_804845a = inttoptr i32 %v1_804845a to i8*
  %v3_804845a = load i8, i8* %v2_804845a, align 1
  %v12_804845a = icmp eq i8 %v3_804845a, 31
  store i1 %v12_804845a, i1* %zf.global-to-local, align 1
  %tmp239 = icmp ult i8 %v3_804845a, 32
  br i1 %tmp239, label %dec_label_pc_8048460, label %dec_label_pc_804848a

dec_label_pc_8048460:                             ; preds = %dec_label_pc_804841e
  %v1_8048460 = add i32 %v0_804845a, 16
  %v2_8048460 = inttoptr i32 %v1_8048460 to i32*
  %v3_8048460 = load i32, i32* %v2_8048460, align 4
  store i32 %v3_8048460, i32* %ebx.global-to-local, align 4
  %v1_8048463 = call i32 @function_804ed40(i32 %v1_804839d4)
  store i32 %v1_8048463, i32* %eax.global-to-local, align 4
  %v1_8048468 = trunc i32 %v3_8048460 to i16
  %v2_8048468 = call i16 @llvm.bswap.i16(i16 %v1_8048468)
  %v3_8048468 = zext i16 %v2_8048468 to i32
  %v1_804846c = udiv i32 %v3_8048460, 65536
  %v2_804846c = mul nuw i32 %v3_8048468, 65536
  %v1_804846f = trunc i32 %v1_804846c to i16
  %v2_804846f = call i16 @llvm.bswap.i16(i16 %v1_804846f)
  %v3_804846f = zext i16 %v2_804846f to i32
  %v6_804846f = or i32 %v3_804846f, %v2_804846c
  store i32 %v6_804846f, i32* %ebx.global-to-local, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %ecx.global-to-local, align 4
  %v0_8048475 = load i32, i32* @edi, align 4
  %v1_8048475 = add i32 %v0_8048475, 20
  %v2_8048475 = inttoptr i32 %v1_8048475 to i8*
  %v3_8048475 = load i8, i8* %v2_8048475, align 1
  %v4_8048475 = zext i8 %v3_8048475 to i32
  store i32 %v4_8048475, i32* %ecx.global-to-local, align 4
  %tmp243 = urem i8 %v3_8048475, 32
  %v4_8048478 = icmp eq i8 %tmp243, 0
  br i1 %v4_8048478, label %bb138, label %bb

bb:                                               ; preds = %dec_label_pc_8048460
  %v2_8048478 = zext i8 %tmp243 to i32
  %v5_8048478 = lshr i32 %v1_8048463, %v2_8048478
  %v6_8048478 = icmp eq i32 %v5_8048478, 0
  store i1 %v6_8048478, i1* %zf.global-to-local, align 1
  store i32 %v5_8048478, i32* %eax.global-to-local, align 4
  br label %bb138

bb138:                                            ; preds = %dec_label_pc_8048460, %bb
  %v0_804847a = phi i32 [ %v1_8048463, %dec_label_pc_8048460 ], [ %v5_8048478, %bb ]
  %v2_804847a = add i32 %v0_804847a, %v6_804846f
  %v12_804847a = icmp eq i32 %v2_804847a, 0
  store i1 %v12_804847a, i1* %zf.global-to-local, align 1
  %v1_804847c = trunc i32 %v2_804847a to i16
  %v2_804847c = call i16 @llvm.bswap.i16(i16 %v1_804847c)
  %v3_804847c = zext i16 %v2_804847c to i32
  %v1_8048480 = udiv i32 %v2_804847a, 65536
  %v2_8048480 = mul nuw i32 %v3_804847c, 65536
  %v1_8048483 = trunc i32 %v1_8048480 to i16
  %v2_8048483 = call i16 @llvm.bswap.i16(i16 %v1_8048483)
  %v3_8048483 = zext i16 %v2_8048483 to i32
  %v6_8048483 = or i32 %v3_8048483, %v2_8048480
  store i32 %v6_8048483, i32* %eax.global-to-local, align 4
  %v1_8048487 = load i32, i32* @esi, align 4
  %v2_8048487 = add i32 %v1_8048487, 16
  %v3_8048487 = inttoptr i32 %v2_8048487 to i32*
  store i32 %v6_8048483, i32* %v3_8048487, align 4
  br label %dec_label_pc_804848a

dec_label_pc_804848a:                             ; preds = %dec_label_pc_804841e, %bb138
  %v1_804848a = call i32 @function_804ed40(i32 %v1_804839d4)
  %v2_804848a = sext i32 %v1_804848a to i64
  store i32 -858993459, i32* @ecx, align 4
  store i32 %v1_804848a, i32* @ebx, align 4
  %v5_8048496 = mul nuw nsw i64 %v2_804848a, 3435973837
  %v6_8048496 = trunc i64 %v5_8048496 to i32
  %v7_8048496 = udiv i64 %v5_8048496, 4294967296
  %v8_8048496 = trunc i64 %v7_8048496 to i32
  store i32 %v6_8048496, i32* %eax.global-to-local, align 4
  store i32 %v8_8048496, i32* %edx.global-to-local, align 4
  %v1_8048498 = load i32, i32* @esp, align 4
  %v2_8048498 = add i32 %v1_8048498, 12
  %v3_8048498 = inttoptr i32 %v2_8048498 to i32*
  store i32 %v8_8048496, i32* %v3_8048498, align 4
  %v0_804849c = load i32, i32* %eax.global-to-local, align 4
  %v1_804849c = load i32, i32* @esp, align 4
  %v2_804849c = add i32 %v1_804849c, 8
  %v3_804849c = inttoptr i32 %v2_804849c to i32*
  store i32 %v0_804849c, i32* %v3_804849c, align 4
  %v0_80484a0 = load i32, i32* @esp, align 4
  %v1_80484a0 = add i32 %v0_80484a0, 12
  %v2_80484a0 = inttoptr i32 %v1_80484a0 to i32*
  %v3_80484a0 = load i32, i32* %v2_80484a0, align 4
  %v0_80484a4 = load i32, i32* @ebx, align 4
  %v2_80484a6 = udiv i32 %v3_80484a0, 4
  %v3_80484a9 = mul i32 %v2_80484a6, 5
  store i32 %v3_80484a9, i32* %edx.global-to-local, align 4
  %v2_80484ac = sub i32 %v0_80484a4, %v3_80484a9
  store i32 %v2_80484ac, i32* %eax.global-to-local, align 4
  %v9_80484ae = icmp eq i32 %v2_80484ac, 4
  store i1 %v9_80484ae, i1* %zf.global-to-local, align 1
  switch i32 %v2_80484ac, label %dec_label_pc_8049f6a [
    i32 0, label %dec_label_pc_8049f3a
    i32 1, label %dec_label_pc_8049fc3
    i32 2, label %dec_label_pc_8049ff8
    i32 3, label %dec_label_pc_804a062
  ]

dec_label_pc_80484be:                             ; preds = %dec_label_pc_80482dd
  %v1_80484be = add i32 %v3_804837f, 16
  store i32 %v1_80484be, i32* %edx.global-to-local, align 4
  %v2_80484c1 = ptrtoint i32* %stack_var_-216 to i32
  store i32 %v2_80484c1, i32* %ecx.global-to-local, align 4
  %v2_80484c8 = ptrtoint i32* %stack_var_-344 to i32
  store i32 %v2_80484c8, i32* %eax.global-to-local, align 4
  %v1_80484cf = add i32 %v3_804837f, 1452
  %v9_80484cf = icmp eq i32 %v1_80484cf, 0
  store i1 %v9_80484cf, i1* %zf.global-to-local, align 1
  store i32 %v1_80484cf, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80484e5.preheader

dec_label_pc_80484e5.preheader:                   ; preds = %dec_label_pc_80484be, %dec_label_pc_8049f8f
  %v0_80484e5.pre = phi i32 [ %v0_80484e5.pre.pre, %dec_label_pc_8049f8f ], [ %v15_8048194, %dec_label_pc_80484be ]
  %stack_var_-20924.0.ph = phi i32 [ %tmp, %dec_label_pc_8049f8f ], [ %v1_80484cf, %dec_label_pc_80484be ]
  %v1_8048752 = inttoptr i32 %stack_var_-20924.0.ph to i8*
  %v1_804887b = trunc i32 %stack_var_-20924.0.ph to i8
  br label %dec_label_pc_80484e5

dec_label_pc_80484e5:                             ; preds = %dec_label_pc_8048ce9, %dec_label_pc_8048cdd, %dec_label_pc_80484e5, %dec_label_pc_8048d91, %dec_label_pc_80484e5.preheader
  %v0_80484e5 = phi i32 [ %v0_80484e5.pre, %dec_label_pc_80484e5.preheader ], [ %v1_804850c, %dec_label_pc_80484e5 ], [ %v0_8048597, %dec_label_pc_8048cdd ], [ %v1_8048d39, %dec_label_pc_8048ce9 ], [ %v0_8048da7, %dec_label_pc_8048d91 ]
  %v9_80484e5 = icmp eq i32 %v0_80484e5, 12
  store i1 %v9_80484e5, i1* %zf.global-to-local, align 1
  %v1_80484e8 = add i32 %v0_80484e5, -16
  %v2_80484e8 = inttoptr i32 %v1_80484e8 to i32*
  store i32 0, i32* %v2_80484e8, align 4
  %v0_80484ea = call i32 @function_8052242()
  store i32 32, i32* %edx.global-to-local, align 4
  %v1_80484f4 = load i32, i32* @esp, align 4
  %v2_80484f4 = add i32 %v1_80484f4, 96
  %v3_80484f4 = inttoptr i32 %v2_80484f4 to i32*
  store i32 %v0_80484ea, i32* %v3_80484f4, align 4
  %v0_80484f8 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_80484f8, i32* %ecx.global-to-local, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_80484fc = load i32, i32* @esp, align 4
  %v1_80484fc = add i32 %v0_80484fc, 40
  %v2_80484fc = inttoptr i32 %v1_80484fc to i32*
  %v3_80484fc = load i32, i32* %v2_80484fc, align 4
  %v4_80484fc = inttoptr i32 %v3_80484fc to i8*
  store i32 %v3_80484fc, i32* %edi.global-to-local, align 4
  %v5_8048501 = call i8* @_memset(i8* %v4_80484fc, i32 0, i32 %v0_80484f8)
  %v0_8048503 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8048503, i32* %ecx.global-to-local, align 4
  %v0_8048505 = load i32, i32* @esp, align 4
  %v1_8048505 = add i32 %v0_8048505, 36
  %v2_8048505 = inttoptr i32 %v1_8048505 to i32*
  %v3_8048505 = load i32, i32* %v2_8048505, align 4
  %v4_8048505 = inttoptr i32 %v3_8048505 to i8*
  store i32 %v3_8048505, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v2_804850a = load i32, i32* %eax.global-to-local, align 4
  %v5_804850a = call i8* @_memset(i8* %v4_8048505, i32 %v2_804850a, i32 %v0_8048503)
  %v6_804850a = ptrtoint i8* %v5_804850a to i32
  store i32 %v6_804850a, i32* @ecx, align 4
  %v0_804850c = load i32, i32* @esp, align 4
  %v1_804850c = add i32 %v0_804850c, 16
  %v1_804850f = add i32 %v0_804850c, 128
  %v2_804850f = inttoptr i32 %v1_804850f to i32*
  %v3_804850f = load i32, i32* %v2_804850f, align 4
  store i32 %v3_804850f, i32* %esi.global-to-local, align 4
  %v1_8048513 = icmp eq i32 %v3_804850f, 0
  store i1 %v1_8048513, i1* %zf.global-to-local, align 1
  %tmp139 = icmp slt i32 %v3_804850f, 1
  br i1 %tmp139, label %dec_label_pc_80484e5, label %dec_label_pc_8048517

dec_label_pc_8048517:                             ; preds = %dec_label_pc_80484e5
  %v1_8048517 = add i32 %v0_804850c, 64
  %v2_8048517 = inttoptr i32 %v1_8048517 to i32*
  %v3_8048517 = load i32, i32* %v2_8048517, align 4
  store i32 %v3_8048517, i32* %esi.global-to-local, align 4
  %v1_804851b = add i32 %v0_804850c, 44
  %v2_804851b = inttoptr i32 %v1_804851b to i32*
  %v3_804851b = load i32, i32* %v2_804851b, align 4
  store i32 %v3_804851b, i32* @ebp, align 4
  %v1_804851f = add i32 %v3_8048517, 1440
  %v6_804851f = icmp eq i32 %v1_804851f, 0
  store i1 %v6_804851f, i1* %zf.global-to-local, align 1
  store i32 %v1_804851f, i32* @esi, align 4
  %v1_8048525 = add i32 %v0_804850c, 116
  %v2_8048525 = inttoptr i32 %v1_8048525 to i32*
  store i32 0, i32* %v2_8048525, align 4
  %v0_804852d = load i32, i32* @esp, align 4
  %v1_804852d = add i32 %v0_804852d, 72
  %v2_804852d = inttoptr i32 %v1_804852d to i32*
  store i32 0, i32* %v2_804852d, align 4
  br label %dec_label_pc_80485a5

dec_label_pc_8048537:                             ; preds = %dec_label_pc_80485b6
  %v10_8048537 = icmp eq i8 %v3_80485a5, 2
  store i1 %v10_8048537, i1* %zf.global-to-local, align 1
  br i1 %v10_8048537, label %dec_label_pc_8048c9d, label %dec_label_pc_804853f

dec_label_pc_804853f:                             ; preds = %dec_label_pc_8048537
  %v10_804853f = icmp eq i8 %v3_80485a5, 4
  store i1 %v10_804853f, i1* %zf.global-to-local, align 1
  br i1 %v10_804853f, label %dec_label_pc_8048700, label %dec_label_pc_8048547

dec_label_pc_8048547:                             ; preds = %dec_label_pc_804853f
  %v10_8048547 = icmp eq i8 %v3_80485a5, 6
  store i1 %v10_8048547, i1* %zf.global-to-local, align 1
  br i1 %v10_8048547, label %dec_label_pc_80493a7, label %dec_label_pc_804854f

dec_label_pc_804854f:                             ; preds = %dec_label_pc_8048547
  %v10_804854f = icmp eq i8 %v3_80485a5, 7
  store i1 %v10_804854f, i1* %zf.global-to-local, align 1
  br i1 %v10_804854f, label %dec_label_pc_8049773, label %dec_label_pc_8048557

dec_label_pc_8048557:                             ; preds = %dec_label_pc_804854f
  %v10_8048557 = icmp eq i8 %v3_80485a5, 10
  store i1 %v10_8048557, i1* %zf.global-to-local, align 1
  br i1 %v10_8048557, label %dec_label_pc_8049829, label %dec_label_pc_8048557.dec_label_pc_804855f_crit_edge

dec_label_pc_8048557.dec_label_pc_804855f_crit_edge: ; preds = %dec_label_pc_8048557
  %v0_804855f.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804855f

dec_label_pc_804855f:                             ; preds = %dec_label_pc_8048557.dec_label_pc_804855f_crit_edge, %dec_label_pc_8048c9d
  %v0_804855f = phi i32 [ %v0_804855f.pre, %dec_label_pc_8048557.dec_label_pc_804855f_crit_edge ], [ %v0_8048c9d, %dec_label_pc_8048c9d ]
  %v9_804855f = icmp eq i32 %v0_804855f, 12
  store i1 %v9_804855f, i1* %zf.global-to-local, align 1
  %v1_8048562 = add i32 %v0_80485a5, -1440
  %v2_8048562 = inttoptr i32 %v1_8048562 to i32*
  %v3_8048562 = load i32, i32* %v2_8048562, align 4
  store i32 %v3_8048562, i32* %edx.global-to-local, align 4
  store i8 0, i8* %v2_80485a5, align 1
  %v0_804856f = load i32, i32* %edx.global-to-local, align 4
  %v1_804856f = load i32, i32* @esp, align 4
  %v2_804856f = add i32 %v1_804856f, -4
  %v3_804856f = inttoptr i32 %v2_804856f to i32*
  store i32 %v0_804856f, i32* %v3_804856f, align 4
  %v1_8048570 = call i32 @function_8051f81(i32 %stack_var_-20924.0.ph)
  store i32 %v1_8048570, i32* %eax.global-to-local, align 4
  %v0_8048575 = load i32, i32* @esi, align 4
  %v1_8048575 = add i32 %v0_8048575, -1440
  %v2_8048575 = inttoptr i32 %v1_8048575 to i32*
  store i32 -1, i32* %v2_8048575, align 4
  %v0_804857f = load i32, i32* @esp, align 4
  %v6_804857f = icmp eq i32 %v0_804857f, -16
  store i1 %v6_804857f, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048582

dec_label_pc_8048582:                             ; preds = %dec_label_pc_8049829, %dec_label_pc_8049773, %dec_label_pc_80493a7, %dec_label_pc_8048cb2, %dec_label_pc_8048c28, %dec_label_pc_8048601, %dec_label_pc_804861f, %dec_label_pc_80486e4, %dec_label_pc_804855f
  %v0_8048582 = load i32, i32* @esp, align 4
  %v1_8048582 = add i32 %v0_8048582, 100
  %v2_8048582 = inttoptr i32 %v1_8048582 to i32*
  %v3_8048582 = load i32, i32* %v2_8048582, align 4
  %v0_8048586 = load i32, i32* @ebp, align 4
  %v1_8048586 = add i32 %v0_8048586, 3140
  store i32 %v1_8048586, i32* @ebp, align 4
  %v1_804858c = add i32 %v3_8048582, 1
  store i32 %v1_804858c, i32* %eax.global-to-local, align 4
  %v0_804858d = load i32, i32* @esi, align 4
  %v1_804858d = add i32 %v0_804858d, 3140
  store i32 %v1_804858d, i32* @esi, align 4
  store i32 %v1_804858c, i32* %v2_8048582, align 4
  %v0_8048597 = load i32, i32* @esp, align 4
  %v1_8048597 = add i32 %v0_8048597, 100
  %v2_8048597 = inttoptr i32 %v1_8048597 to i32*
  %v3_8048597 = load i32, i32* %v2_8048597, align 4
  store i32 %v3_8048597, i32* @ecx, align 4
  %v1_804859b = add i32 %v0_8048597, 112
  %v2_804859b = inttoptr i32 %v1_804859b to i32*
  %v3_804859b = load i32, i32* %v2_804859b, align 4
  %v15_804859b = icmp eq i32 %v3_804859b, %v3_8048597
  store i1 %v15_804859b, i1* %zf.global-to-local, align 1
  br i1 %v15_804859b, label %dec_label_pc_8048cdd, label %dec_label_pc_80485a5

dec_label_pc_80485a5:                             ; preds = %dec_label_pc_8048582, %dec_label_pc_8048517
  %v0_80485a5 = load i32, i32* @esi, align 4
  %v1_80485a5 = add i32 %v0_80485a5, -1436
  %v2_80485a5 = inttoptr i32 %v1_80485a5 to i8*
  %v3_80485a5 = load i8, i8* %v2_80485a5, align 1
  %v4_80485a5 = zext i8 %v3_80485a5 to i32
  %v5_80485a5 = load i32, i32* %eax.global-to-local, align 4
  %v6_80485a5 = and i32 %v5_80485a5, -256
  %v7_80485a5 = or i32 %v6_80485a5, %v4_80485a5
  store i32 %v7_80485a5, i32* %eax.global-to-local, align 4
  %v0_80485ab = load i32, i32* @ebp, align 4
  %v1_80485ab = add i32 %v0_80485ab, -16
  store i32 %v1_80485ab, i32* @edi, align 4
  %v6_80485ae = icmp eq i8 %v3_80485a5, 0
  %v10_80485ae = icmp eq i8 %v3_80485a5, 1
  store i1 %v10_80485ae, i1* %zf.global-to-local, align 1
  br i1 %v10_80485ae, label %dec_label_pc_80486ee, label %dec_label_pc_80485b6

dec_label_pc_80485b6:                             ; preds = %dec_label_pc_80485a5
  store i1 %v6_80485ae, i1* %zf.global-to-local, align 1
  %v1_80485b8 = icmp eq i1 %v6_80485ae, false
  br i1 %v1_80485b8, label %dec_label_pc_8048537, label %dec_label_pc_80485be

dec_label_pc_80485be:                             ; preds = %dec_label_pc_80485b6, %dec_label_pc_8048c91
  %v0_80485be = load i32, i32* @esp, align 4
  %v1_80485be = add i32 %v0_80485be, 20868
  %v2_80485be = inttoptr i32 %v1_80485be to i32*
  store i32 0, i32* %v2_80485be, align 4
  %v0_80485c9 = load i32, i32* @esp, align 4
  %v1_80485c9 = add i32 %v0_80485c9, 20872
  %v2_80485c9 = inttoptr i32 %v1_80485c9 to i32*
  store i32 0, i32* %v2_80485c9, align 4
  %v0_80485d4 = load i32, i32* @esp, align 4
  %v1_80485d4 = add i32 %v0_80485d4, 20876
  %v2_80485d4 = inttoptr i32 %v1_80485d4 to i32*
  store i32 0, i32* %v2_80485d4, align 4
  %v0_80485df = load i32, i32* @esp, align 4
  %v1_80485df = add i32 %v0_80485df, 20880
  %v2_80485df = inttoptr i32 %v1_80485df to i32*
  store i32 0, i32* %v2_80485df, align 4
  %v0_80485ea = load i32, i32* @esi, align 4
  %v1_80485ea = add i32 %v0_80485ea, -1440
  %v2_80485ea = inttoptr i32 %v1_80485ea to i32*
  %v3_80485ea = load i32, i32* %v2_80485ea, align 4
  store i32 %v3_80485ea, i32* %eax.global-to-local, align 4
  %v10_80485f0 = icmp eq i32 %v3_80485ea, -1
  store i1 %v10_80485f0, i1* %zf.global-to-local, align 1
  %v1_8048601.pre = load i32, i32* @esp, align 4
  br i1 %v10_80485f0, label %dec_label_pc_8048601, label %dec_label_pc_80485f5

dec_label_pc_80485f5:                             ; preds = %dec_label_pc_80485be
  %v9_80485f5 = icmp eq i32 %v1_8048601.pre, 12
  store i1 %v9_80485f5, i1* %zf.global-to-local, align 1
  %v2_80485f8 = add i32 %v1_8048601.pre, -16
  %v3_80485f8 = inttoptr i32 %v2_80485f8 to i32*
  store i32 %v3_80485ea, i32* %v3_80485f8, align 4
  %v1_80485f9 = call i32 @function_8051f81(i32 %stack_var_-20924.0.ph)
  store i32 %v1_80485f9, i32* %eax.global-to-local, align 4
  %v0_80485fe = load i32, i32* @esp, align 4
  %v1_80485fe = add i32 %v0_80485fe, 16
  %v6_80485fe = icmp eq i32 %v1_80485fe, 0
  store i1 %v6_80485fe, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048601

dec_label_pc_8048601:                             ; preds = %dec_label_pc_80485be, %dec_label_pc_80485f5
  %v1_8048601 = phi i32 [ %v1_80485fe, %dec_label_pc_80485f5 ], [ %v1_8048601.pre, %dec_label_pc_80485be ]
  %v0_8048601 = load i32, i32* @ecx, align 4
  %v2_8048601 = add i32 %v1_8048601, -4
  %v3_8048601 = inttoptr i32 %v2_8048601 to i32*
  store i32 %v0_8048601, i32* %v3_8048601, align 4
  %v1_8048602 = add i32 %v1_8048601, -8
  %v2_8048602 = inttoptr i32 %v1_8048602 to i32*
  store i32 0, i32* %v2_8048602, align 4
  %v1_8048604 = add i32 %v1_8048601, -12
  %v2_8048604 = inttoptr i32 %v1_8048604 to i32*
  store i32 1, i32* %v2_8048604, align 4
  %v1_8048606 = add i32 %v1_8048601, -16
  %v2_8048606 = inttoptr i32 %v1_8048606 to i32*
  store i32 2, i32* %v2_8048606, align 4
  %v4_8048608 = call i32 @function_8052775(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8048608, i32* %eax.global-to-local, align 4
  %v1_8048610 = load i32, i32* @esi, align 4
  %v2_8048610 = add i32 %v1_8048610, -1440
  %v3_8048610 = inttoptr i32 %v2_8048610 to i32*
  store i32 %v4_8048608, i32* %v3_8048610, align 4
  %v10_8048616 = icmp eq i32 %v4_8048608, -1
  store i1 %v10_8048616, i1* %zf.global-to-local, align 1
  br i1 %v10_8048616, label %dec_label_pc_8048582, label %dec_label_pc_804861f

dec_label_pc_804861f:                             ; preds = %dec_label_pc_8048601
  %v0_804861f = load i32, i32* @edx, align 4
  %v1_804861f = load i32, i32* @esp, align 4
  %v2_804861f = add i32 %v1_804861f, -4
  %v3_804861f = inttoptr i32 %v2_804861f to i32*
  store i32 %v0_804861f, i32* %v3_804861f, align 4
  %v1_8048620 = add i32 %v1_804861f, -8
  %v2_8048620 = inttoptr i32 %v1_8048620 to i32*
  store i32 0, i32* %v2_8048620, align 4
  %v1_8048622 = add i32 %v1_804861f, -12
  %v2_8048622 = inttoptr i32 %v1_8048622 to i32*
  store i32 3, i32* %v2_8048622, align 4
  %v2_8048624 = add i32 %v1_804861f, -16
  %v3_8048624 = inttoptr i32 %v2_8048624 to i32*
  store i32 %v4_8048608, i32* %v3_8048624, align 4
  %v3_8048625 = call i32 @function_8051ebd(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804862a = load i32, i32* @esp, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  %v12_804862d = or i32 %v3_8048625, 2048
  store i32 %v12_804862d, i32* %eax.global-to-local, align 4
  %v2_8048630 = add i32 %v0_804862a, 8
  %v3_8048630 = inttoptr i32 %v2_8048630 to i32*
  store i32 %v12_804862d, i32* %v3_8048630, align 4
  %v1_8048631 = add i32 %v0_804862a, 4
  %v2_8048631 = inttoptr i32 %v1_8048631 to i32*
  store i32 4, i32* %v2_8048631, align 4
  %v0_8048633 = load i32, i32* @esi, align 4
  %v1_8048633 = add i32 %v0_8048633, -1440
  %v2_8048633 = inttoptr i32 %v1_8048633 to i32*
  %v3_8048633 = load i32, i32* %v2_8048633, align 4
  store i32 %v3_8048633, i32* %eax.global-to-local, align 4
  %v3_8048639 = inttoptr i32 %v0_804862a to i32*
  store i32 %v3_8048633, i32* %v3_8048639, align 4
  %v3_804863a = call i32 @function_8051ebd(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804863f = load i32, i32* @esp, align 4
  %v1_804863f = add i32 %v0_804863f, 20916
  store i32 %v1_804863f, i32* %eax.global-to-local, align 4
  %v2_8048646 = inttoptr i32 %v1_804863f to i32*
  store i32 65535, i32* %v2_8048646, align 4
  %v0_8048651 = load i32, i32* @esp, align 4
  %v1_8048651 = inttoptr i32 %v0_8048651 to i32*
  store i32 4, i32* %v1_8048651, align 4
  %v0_8048658 = load i32, i32* %eax.global-to-local, align 4
  %v1_8048658 = load i32, i32* @esp, align 4
  %v2_8048658 = add i32 %v1_8048658, -4
  %v3_8048658 = inttoptr i32 %v2_8048658 to i32*
  store i32 %v0_8048658, i32* %v3_8048658, align 4
  %v1_8048659 = add i32 %v1_8048658, -8
  %v2_8048659 = inttoptr i32 %v1_8048659 to i32*
  store i32 8, i32* %v2_8048659, align 4
  %v1_804865b = add i32 %v1_8048658, -12
  %v2_804865b = inttoptr i32 %v1_804865b to i32*
  store i32 0, i32* %v2_804865b, align 4
  %v0_804865d = load i32, i32* @esi, align 4
  %v1_804865d = add i32 %v0_804865d, -1440
  %v2_804865d = inttoptr i32 %v1_804865d to i32*
  %v3_804865d = load i32, i32* %v2_804865d, align 4
  store i32 %v3_804865d, i32* %eax.global-to-local, align 4
  %v2_8048663 = add i32 %v1_8048658, -16
  %v3_8048663 = inttoptr i32 %v2_8048663 to i32*
  store i32 %v3_804865d, i32* %v3_8048663, align 4
  %v0_8048664 = call i32 @function_805273a()
  store i32 %v0_8048664, i32* %eax.global-to-local, align 4
  %v0_8048669 = load i32, i32* @esi, align 4
  %v1_8048669 = add i32 %v0_8048669, -1424
  %v2_8048669 = inttoptr i32 %v1_8048669 to i32*
  %v3_8048669 = load i32, i32* %v2_8048669, align 4
  store i32 %v3_8048669, i32* %eax.global-to-local, align 4
  %v0_804866f = load i32, i32* @esp, align 4
  %v1_804866f = add i32 %v0_804866f, 112
  %v2_804866f = inttoptr i32 %v1_804866f to i32*
  %v3_804866f = load i32, i32* %v2_804866f, align 4
  store i32 %v3_804866f, i32* %edx.global-to-local, align 4
  %v2_8048673 = add i32 %v0_804866f, 20904
  %v3_8048673 = inttoptr i32 %v2_8048673 to i32*
  store i32 %v3_8048669, i32* %v3_8048673, align 4
  %v0_804867a = load i32, i32* @esp, align 4
  %v1_804867a = add i32 %v0_804867a, 20900
  %v2_804867a = inttoptr i32 %v1_804867a to i16*
  store i16 2, i16* %v2_804867a, align 2
  %v0_8048684 = load i32, i32* @esp, align 4
  %v1_8048684 = add i32 %v0_8048684, 102
  %v2_8048684 = inttoptr i32 %v1_8048684 to i16*
  %v3_8048684 = load i16, i16* %v2_8048684, align 2
  %v5_8048684 = load i32, i32* %eax.global-to-local, align 4
  %v6_8048684 = and i32 %v5_8048684, -65536
  %v0_8048689 = load i32, i32* %edx.global-to-local, align 4
  %v1_8048689 = load i32, i32* @esi, align 4
  %v2_8048689 = add i32 %v1_8048689, -1432
  %v3_8048689 = inttoptr i32 %v2_8048689 to i32*
  store i32 %v0_8048689, i32* %v3_8048689, align 4
  %v2_804868f = call i16 @llvm.bswap.i16(i16 %v3_8048684)
  %v3_804868f = zext i16 %v2_804868f to i32
  %v6_804868f = or i32 %v3_804868f, %v6_8048684
  store i32 %v6_804868f, i32* %eax.global-to-local, align 4
  %v2_8048693 = load i32, i32* @esp, align 4
  %v3_8048693 = add i32 %v2_8048693, 20902
  %v4_8048693 = inttoptr i32 %v3_8048693 to i16*
  store i16 %v2_804868f, i16* %v4_8048693, align 2
  %v0_804869b = load i32, i32* @esp, align 4
  %v9_804869b = icmp eq i32 %v0_804869b, -28
  store i1 %v9_804869b, i1* %zf.global-to-local, align 1
  %v0_804869e = load i32, i32* @esi, align 4
  %v1_804869e = add i32 %v0_804869e, -1436
  %v2_804869e = inttoptr i32 %v1_804869e to i8*
  store i8 2, i8* %v2_804869e, align 1
  %v0_80486a5 = load i32, i32* @esp, align 4
  %v1_80486a5 = add i32 %v0_80486a5, -4
  %v2_80486a5 = inttoptr i32 %v1_80486a5 to i32*
  store i32 16, i32* %v2_80486a5, align 4
  %v1_80486a7 = add i32 %v0_80486a5, 20872
  store i32 %v1_80486a7, i32* %ecx.global-to-local, align 4
  %v2_80486ae = add i32 %v0_80486a5, -8
  %v3_80486ae = inttoptr i32 %v2_80486ae to i32*
  store i32 %v1_80486a7, i32* %v3_80486ae, align 4
  %v0_80486af = load i32, i32* @esi, align 4
  %v1_80486af = add i32 %v0_80486af, -1440
  %v2_80486af = inttoptr i32 %v1_80486af to i32*
  %v3_80486af = load i32, i32* %v2_80486af, align 4
  store i32 %v3_80486af, i32* @edi, align 4
  %v2_80486b5 = add i32 %v0_80486a5, -12
  %v3_80486b5 = inttoptr i32 %v2_80486b5 to i32*
  store i32 %v3_80486af, i32* %v3_80486b5, align 4
  %v3_80486b6 = call i32 @function_805259a(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80486b6, i32* %eax.global-to-local, align 4
  %v0_80486bb = load i32, i32* @esi, align 4
  %v1_80486bb = add i32 %v0_80486bb, -1440
  %v2_80486bb = inttoptr i32 %v1_80486bb to i32*
  %v3_80486bb = load i32, i32* %v2_80486bb, align 4
  %v1_80486c3 = urem i32 %v3_80486bb, 32
  store i32 %v1_80486c3, i32* %eax.global-to-local, align 4
  %v2_80486c6 = udiv i32 %v3_80486bb, 32
  store i32 %v2_80486c6, i32* %edx.global-to-local, align 4
  %v0_80486c9 = load i32, i32* @esp, align 4
  %v2_80486c9 = mul nuw nsw i32 %v2_80486c6, 4
  %v3_80486c9 = add nuw nsw i32 %v2_80486c9, 20628
  %v4_80486c9 = add i32 %v3_80486c9, %v0_80486c9
  %v5_80486c9 = inttoptr i32 %v4_80486c9 to i32*
  %v6_80486c9 = load i32, i32* %v5_80486c9, align 4
  %v9_80486c9 = shl i32 1, %v1_80486c3
  %v12_80486c9 = or i32 %v6_80486c9, %v9_80486c9
  store i32 %v12_80486c9, i32* %v5_80486c9, align 4
  %v0_80486d1 = load i32, i32* @esp, align 4
  %v1_80486d1 = add i32 %v0_80486d1, 16
  %v0_80486d4 = load i32, i32* @esi, align 4
  %v1_80486d4 = add i32 %v0_80486d4, -1440
  %v2_80486d4 = inttoptr i32 %v1_80486d4 to i32*
  %v3_80486d4 = load i32, i32* %v2_80486d4, align 4
  store i32 %v3_80486d4, i32* %eax.global-to-local, align 4
  %v1_80486da = add i32 %v0_80486d1, 88
  %v2_80486da = inttoptr i32 %v1_80486da to i32*
  %v3_80486da = load i32, i32* %v2_80486da, align 4
  %v5_80486da = sub i32 %v3_80486da, %v3_80486d4
  %v11_80486da = xor i32 %v3_80486da, %v3_80486d4
  %v12_80486da = xor i32 %v5_80486da, %v3_80486da
  %v13_80486da = and i32 %v12_80486da, %v11_80486da
  %v14_80486da = icmp slt i32 %v13_80486da, 0
  %v15_80486da = icmp eq i32 %v5_80486da, 0
  store i1 %v15_80486da, i1* %zf.global-to-local, align 1
  %v16_80486da = icmp slt i32 %v5_80486da, 0
  %v2_80486de = icmp eq i1 %v16_80486da, %v14_80486da
  br i1 %v2_80486de, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_80486e4:                             ; preds = %dec_label_pc_8049829, %dec_label_pc_8049773, %dec_label_pc_80493a7, %dec_label_pc_8048cb2, %dec_label_pc_8048c28, %dec_label_pc_804861f
  %v1_80486e5 = phi i32 [ %v1_8049845, %dec_label_pc_8049829 ], [ %v1_804978f, %dec_label_pc_8049773 ], [ %v1_80493c3, %dec_label_pc_80493a7 ], [ %v0_8048cce, %dec_label_pc_8048cb2 ], [ %v1_8048c79, %dec_label_pc_8048c28 ], [ %v1_80486d1, %dec_label_pc_804861f ]
  %v0_80486e4 = phi i32 [ %v3_804983f, %dec_label_pc_8049829 ], [ %v3_8049789, %dec_label_pc_8049773 ], [ %v3_80493bd, %dec_label_pc_80493a7 ], [ %v3_8048cc8, %dec_label_pc_8048cb2 ], [ %v3_8048c7c, %dec_label_pc_8048c28 ], [ %v3_80486d4, %dec_label_pc_804861f ]
  %v1_80486e4 = add i32 %v0_80486e4, 1
  %v8_80486e4 = icmp eq i32 %v1_80486e4, 0
  store i1 %v8_80486e4, i1* %zf.global-to-local, align 1
  store i32 %v1_80486e4, i32* %eax.global-to-local, align 4
  %v2_80486e5 = add i32 %v1_80486e5, 72
  %v3_80486e5 = inttoptr i32 %v2_80486e5 to i32*
  store i32 %v1_80486e4, i32* %v3_80486e5, align 4
  br label %dec_label_pc_8048582

dec_label_pc_80486ee:                             ; preds = %dec_label_pc_80485a5
  %v1_80486ee = add i32 %v0_80485a5, 16
  %v2_80486ee = inttoptr i32 %v1_80486ee to i32*
  %v3_80486ee = load i32, i32* %v2_80486ee, align 4
  store i32 %v3_80486ee, i32* @ebx, align 4
  %v1_80486f1 = icmp eq i32 %v3_80486ee, 0
  store i1 %v1_80486f1, i1* %zf.global-to-local, align 1
  br i1 %v1_80486f1, label %dec_label_pc_8048c91, label %dec_label_pc_80486f9

dec_label_pc_80486f9:                             ; preds = %dec_label_pc_80486ee
  store i8 4, i8* %v2_80485a5, align 1
  %v0_8048700.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8048700

dec_label_pc_8048700:                             ; preds = %dec_label_pc_804853f, %dec_label_pc_80486f9
  %v0_8048700 = phi i32 [ %v0_80485a5, %dec_label_pc_804853f ], [ %v0_8048700.pre, %dec_label_pc_80486f9 ]
  %v1_8048700 = add i32 %v0_8048700, 24
  %v2_8048700 = inttoptr i32 %v1_8048700 to i32*
  store i32 -1, i32* %v2_8048700, align 4
  %v0_8048707 = load i32, i32* @esi, align 4
  %v1_8048707 = add i32 %v0_8048707, 12
  %v2_8048707 = inttoptr i32 %v1_8048707 to i32*
  store i32 0, i32* %v2_8048707, align 4
  %v0_804870e = load i32, i32* @edi, align 4
  %v1_804870e = add i32 %v0_804870e, 2116
  store i32 %v1_804870e, i32* @eax, align 4
  %v0_8048714 = load i32, i32* @ecx, align 4
  %v1_8048714 = load i32, i32* @esp, align 4
  %v2_8048714 = add i32 %v1_8048714, -4
  %v3_8048714 = inttoptr i32 %v2_8048714 to i32*
  store i32 %v0_8048714, i32* %v3_8048714, align 4
  %v0_8048715 = load i32, i32* @ecx, align 4
  %v2_8048715 = add i32 %v1_8048714, -8
  %v3_8048715 = inttoptr i32 %v2_8048715 to i32*
  store i32 %v0_8048715, i32* %v3_8048715, align 4
  %v1_8048716 = add i32 %v1_8048714, -12
  %v2_8048716 = inttoptr i32 %v1_8048716 to i32*
  store i32 1024, i32* %v2_8048716, align 4
  %v0_804871b = load i32, i32* @eax, align 4
  %v2_804871b = add i32 %v1_8048714, -16
  %v3_804871b = inttoptr i32 %v2_804871b to i32*
  store i32 %v0_804871b, i32* %v3_804871b, align 4
  %v2_804871c = call i32 @function_8051a70(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_804871c, i32* %eax.global-to-local, align 4
  %v0_8048721 = load i32, i32* @esi, align 4
  %v1_8048721 = add i32 %v0_8048721, 672
  %v2_8048721 = inttoptr i32 %v1_8048721 to i32*
  store i32 0, i32* %v2_8048721, align 4
  %v0_804872b = load i32, i32* @esp, align 4
  %v1_804872b = inttoptr i32 %v0_804872b to i32*
  %v2_804872b = load i32, i32* %v1_804872b, align 4
  store i32 %v2_804872b, i32* %eax.global-to-local, align 4
  %v3_804872b = add i32 %v0_804872b, 4
  %v1_804872c = inttoptr i32 %v3_804872b to i32*
  %v2_804872c = load i32, i32* %v1_804872c, align 4
  store i32 %v2_804872c, i32* %edx.global-to-local, align 4
  store i32 10240, i32* %v1_804872c, align 4
  %v1_8048732 = add i32 %v0_804872b, 10388
  store i32 %v1_8048732, i32* @eax, align 4
  store i32 %v1_8048732, i32* %v1_804872b, align 4
  %v2_804873a = call i32 @function_8051a70(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_804873a, i32* %eax.global-to-local, align 4
  %v0_804873f = load i32, i32* @edi, align 4
  %v1_804873f = add i32 %v0_804873f, 1431
  store i32 %v1_804873f, i32* %edx.global-to-local, align 4
  %v1_8048745 = load i32, i32* @esp, align 4
  %v2_8048745 = add i32 %v1_8048745, 112
  %v3_8048745 = inttoptr i32 %v2_8048745 to i32*
  store i32 %v1_804873f, i32* %v3_8048745, align 4
  %v0_8048749 = load i32, i32* @esp, align 4
  %v1_8048749 = inttoptr i32 %v0_8048749 to i32*
  %v2_8048749 = load i32, i32* %v1_8048749, align 4
  store i32 %v2_8048749, i32* %eax.global-to-local, align 4
  %v1_804874a = add i32 %v0_8048749, 10388
  store i32 %v1_804874a, i32* %ecx.global-to-local, align 4
  store i32 %v1_804874a, i32* %v1_8048749, align 4
  %v2_8048752 = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_8048752, i32* %eax.global-to-local, align 4
  %v0_8048757 = load i32, i32* @esp, align 4
  %v1_8048757 = inttoptr i32 %v0_8048757 to i32*
  %v2_8048757 = load i32, i32* %v1_8048757, align 4
  store i32 %v2_8048757, i32* %ecx.global-to-local, align 4
  %v3_8048757 = add i32 %v0_8048757, 4
  %v1_8048758 = inttoptr i32 %v3_8048757 to i32*
  %v2_8048758 = load i32, i32* %v1_8048758, align 4
  store i32 %v2_8048758, i32* @ebx, align 4
  %v1_8048759 = add i32 %v0_8048757, 112
  %v2_8048759 = inttoptr i32 %v1_8048759 to i32*
  %v3_8048759 = load i32, i32* %v2_8048759, align 4
  store i32 %v3_8048759, i32* %v1_8048758, align 4
  %v1_804875e = add i32 %v0_8048757, 10388
  store i32 %v1_804875e, i32* %edx.global-to-local, align 4
  %v2_8048765 = add i32 %v1_804875e, %v2_8048752
  store i32 %v2_8048765, i32* %eax.global-to-local, align 4
  store i32 %v2_8048765, i32* %v1_8048757, align 4
  %v3_8048769 = call i32 @function_8051a00(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048769, i32* %eax.global-to-local, align 4
  %v0_804876e = load i32, i32* @esp, align 4
  %v1_804876e = inttoptr i32 %v0_804876e to i32*
  %v2_804876e = load i32, i32* %v1_804876e, align 4
  store i32 %v2_804876e, i32* @ebx, align 4
  %v1_804876f = add i32 %v0_804876e, 10388
  store i32 %v1_804876f, i32* %ecx.global-to-local, align 4
  store i32 %v1_804876f, i32* %v1_804876e, align 4
  %v2_8048777 = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_8048777, i32* %eax.global-to-local, align 4
  %v0_804877c = load i32, i32* @esp, align 4
  %v1_804877c = inttoptr i32 %v0_804877c to i32*
  %v2_804877c = load i32, i32* %v1_804877c, align 4
  store i32 %v2_804877c, i32* %edx.global-to-local, align 4
  %v3_804877c = add i32 %v0_804877c, 4
  %v1_804877d = inttoptr i32 %v3_804877c to i32*
  %v2_804877d = load i32, i32* %v1_804877d, align 4
  store i32 %v2_804877d, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805489f.7 to i32), i32* %v1_804877d, align 4
  %v1_8048783 = add i32 %v0_804877c, 10388
  store i32 %v1_8048783, i32* %edx.global-to-local, align 4
  %v2_804878a = add i32 %v1_8048783, %v2_8048777
  store i32 %v2_804878a, i32* %eax.global-to-local, align 4
  store i32 %v2_804878a, i32* %v1_804877c, align 4
  %v3_804878e = call i32 @function_8051a00(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804878e, i32* %eax.global-to-local, align 4
  %v0_8048793 = load i32, i32* @esp, align 4
  %v1_8048793 = inttoptr i32 %v0_8048793 to i32*
  %v2_8048793 = load i32, i32* %v1_8048793, align 4
  store i32 %v2_8048793, i32* @ebx, align 4
  %v1_8048794 = add i32 %v0_8048793, 10388
  store i32 %v1_8048794, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048794, i32* %v1_8048793, align 4
  %v2_804879c = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_804879c, i32* %eax.global-to-local, align 4
  %v0_80487a1 = load i32, i32* @esp, align 4
  %v1_80487a1 = inttoptr i32 %v0_80487a1 to i32*
  %v3_80487a1 = add i32 %v0_80487a1, 4
  %v0_80487a2 = load i32, i32* @edi, align 4
  %v1_80487a2 = add i32 %v0_80487a2, 532
  store i32 %v1_80487a2, i32* %edx.global-to-local, align 4
  %v1_80487a8 = inttoptr i32 %v3_80487a1 to i32*
  %v2_80487a8 = load i32, i32* %v1_80487a8, align 4
  store i32 %v2_80487a8, i32* %ecx.global-to-local, align 4
  store i32 %v1_80487a2, i32* %v1_80487a8, align 4
  %v1_80487aa = add i32 %v0_80487a1, 10388
  store i32 %v1_80487aa, i32* %edx.global-to-local, align 4
  %v2_80487b1 = add i32 %v1_80487aa, %v2_804879c
  store i32 %v2_80487b1, i32* %eax.global-to-local, align 4
  store i32 %v2_80487b1, i32* %v1_80487a1, align 4
  %v3_80487b5 = call i32 @function_8051a00(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80487b5, i32* %eax.global-to-local, align 4
  %v0_80487ba = load i32, i32* @esp, align 4
  %v1_80487ba = inttoptr i32 %v0_80487ba to i32*
  %v2_80487ba = load i32, i32* %v1_80487ba, align 4
  store i32 %v2_80487ba, i32* @ebx, align 4
  %v1_80487bb = add i32 %v0_80487ba, 10388
  store i32 %v1_80487bb, i32* %ecx.global-to-local, align 4
  store i32 %v1_80487bb, i32* %v1_80487ba, align 4
  %v2_80487c3 = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_80487c3, i32* %eax.global-to-local, align 4
  %v0_80487c8 = load i32, i32* @esp, align 4
  %v1_80487c8 = inttoptr i32 %v0_80487c8 to i32*
  %v2_80487c8 = load i32, i32* %v1_80487c8, align 4
  store i32 %v2_80487c8, i32* %edx.global-to-local, align 4
  %v3_80487c8 = add i32 %v0_80487c8, 4
  %v1_80487c9 = inttoptr i32 %v3_80487c8 to i32*
  %v2_80487c9 = load i32, i32* %v1_80487c9, align 4
  store i32 %v2_80487c9, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_805486f.8 to i32), i32* %v1_80487c9, align 4
  %v1_80487cf = add i32 %v0_80487c8, 10388
  store i32 %v1_80487cf, i32* %edx.global-to-local, align 4
  %v2_80487d6 = add i32 %v1_80487cf, %v2_80487c3
  store i32 %v2_80487d6, i32* %eax.global-to-local, align 4
  store i32 %v2_80487d6, i32* %v1_80487c8, align 4
  %v3_80487da = call i32 @function_8051a00(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80487da, i32* %eax.global-to-local, align 4
  %v0_80487df = load i32, i32* @esp, align 4
  %v1_80487df = inttoptr i32 %v0_80487df to i32*
  %v2_80487df = load i32, i32* %v1_80487df, align 4
  store i32 %v2_80487df, i32* @ebx, align 4
  %v1_80487e0 = add i32 %v0_80487df, 10388
  store i32 %v1_80487e0, i32* %ecx.global-to-local, align 4
  store i32 %v1_80487e0, i32* %v1_80487df, align 4
  %v2_80487e8 = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_80487e8, i32* %eax.global-to-local, align 4
  %v0_80487ed = load i32, i32* @esp, align 4
  %v1_80487ed = inttoptr i32 %v0_80487ed to i32*
  %v3_80487ed = add i32 %v0_80487ed, 4
  %v0_80487ee = load i32, i32* @edi, align 4
  %v1_80487ee = add i32 %v0_80487ee, 20
  store i32 %v1_80487ee, i32* %edx.global-to-local, align 4
  %v1_80487f1 = inttoptr i32 %v3_80487ed to i32*
  %v2_80487f1 = load i32, i32* %v1_80487f1, align 4
  store i32 %v2_80487f1, i32* %ecx.global-to-local, align 4
  store i32 %v1_80487ee, i32* %v1_80487f1, align 4
  %v1_80487f3 = add i32 %v0_80487ed, 10388
  store i32 %v1_80487f3, i32* %edx.global-to-local, align 4
  %v2_80487fa = add i32 %v1_80487f3, %v2_80487e8
  store i32 %v2_80487fa, i32* %eax.global-to-local, align 4
  store i32 %v2_80487fa, i32* %v1_80487ed, align 4
  %v3_80487fe = call i32 @function_8051a00(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80487fe, i32* %eax.global-to-local, align 4
  %v0_8048803 = load i32, i32* @esp, align 4
  %v1_8048803 = inttoptr i32 %v0_8048803 to i32*
  %v2_8048803 = load i32, i32* %v1_8048803, align 4
  store i32 %v2_8048803, i32* @ebx, align 4
  %v1_8048804 = add i32 %v0_8048803, 10388
  store i32 %v1_8048804, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048804, i32* %v1_8048803, align 4
  %v2_804880c = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_804880c, i32* %eax.global-to-local, align 4
  %v0_8048811 = load i32, i32* @esp, align 4
  %v1_8048811 = inttoptr i32 %v0_8048811 to i32*
  %v2_8048811 = load i32, i32* %v1_8048811, align 4
  store i32 %v2_8048811, i32* %edx.global-to-local, align 4
  %v3_8048811 = add i32 %v0_8048811, 4
  %v1_8048812 = inttoptr i32 %v3_8048811 to i32*
  %v2_8048812 = load i32, i32* %v1_8048812, align 4
  store i32 %v2_8048812, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_8054887.9 to i32), i32* %v1_8048812, align 4
  %v1_8048818 = add i32 %v0_8048811, 10388
  store i32 %v1_8048818, i32* %edx.global-to-local, align 4
  %v2_804881f = add i32 %v1_8048818, %v2_804880c
  store i32 %v2_804881f, i32* %eax.global-to-local, align 4
  store i32 %v2_804881f, i32* %v1_8048811, align 4
  %v3_8048823 = call i32 @function_8051a00(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048823, i32* %eax.global-to-local, align 4
  %v0_8048828 = load i32, i32* @esp, align 4
  %v1_8048828 = inttoptr i32 %v0_8048828 to i32*
  %v2_8048828 = load i32, i32* %v1_8048828, align 4
  store i32 %v2_8048828, i32* @ebx, align 4
  %v1_8048829 = add i32 %v0_8048828, 10388
  store i32 %v1_8048829, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048829, i32* %v1_8048828, align 4
  %v2_8048831 = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_8048831, i32* %eax.global-to-local, align 4
  %v0_8048836 = load i32, i32* @esp, align 4
  %v1_8048836 = inttoptr i32 %v0_8048836 to i32*
  %v3_8048836 = add i32 %v0_8048836, 4
  %v0_8048837 = load i32, i32* @edi, align 4
  %v1_8048837 = add i32 %v0_8048837, 789
  store i32 %v1_8048837, i32* %edx.global-to-local, align 4
  %v1_804883d = inttoptr i32 %v3_8048836 to i32*
  %v2_804883d = load i32, i32* %v1_804883d, align 4
  store i32 %v2_804883d, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048837, i32* %v1_804883d, align 4
  %v1_804883f = add i32 %v0_8048836, 10388
  store i32 %v1_804883f, i32* %edx.global-to-local, align 4
  %v2_8048846 = add i32 %v1_804883f, %v2_8048831
  store i32 %v2_8048846, i32* %eax.global-to-local, align 4
  store i32 %v2_8048846, i32* %v1_8048836, align 4
  %v3_804884a = call i32 @function_8051a00(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804884a, i32* %eax.global-to-local, align 4
  %v0_804884f = load i32, i32* @esp, align 4
  %v1_804884f = inttoptr i32 %v0_804884f to i32*
  %v2_804884f = load i32, i32* %v1_804884f, align 4
  store i32 %v2_804884f, i32* %eax.global-to-local, align 4
  %v1_8048850 = add i32 %v0_804884f, 10388
  store i32 %v1_8048850, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048850, i32* %v1_804884f, align 4
  %v2_8048858 = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_8048858, i32* %eax.global-to-local, align 4
  %v0_804885d = load i32, i32* @esp, align 4
  %v1_804885d = inttoptr i32 %v0_804885d to i32*
  %v2_804885d = load i32, i32* %v1_804885d, align 4
  store i32 %v2_804885d, i32* %ecx.global-to-local, align 4
  %v3_804885d = add i32 %v0_804885d, 4
  %v1_804885e = inttoptr i32 %v3_804885d to i32*
  %v2_804885e = load i32, i32* %v1_804885e, align 4
  store i32 %v2_804885e, i32* @ebx, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_80548a6.10 to i32), i32* %v1_804885e, align 4
  %v1_8048864 = add i32 %v0_804885d, 10388
  store i32 %v1_8048864, i32* %edx.global-to-local, align 4
  %v2_804886b = add i32 %v1_8048864, %v2_8048858
  store i32 %v2_804886b, i32* %eax.global-to-local, align 4
  store i32 %v2_804886b, i32* %v1_804885d, align 4
  %v3_804886f = call i32 @function_8051a00(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804886f, i32* %eax.global-to-local, align 4
  %v0_8048874 = load i32, i32* @esp, align 4
  %v1_8048874 = inttoptr i32 %v0_8048874 to i32*
  store i32 32, i32* %v1_8048874, align 4
  %v2_804887b = call i32 @function_8051090(i8 %v1_804887b)
  store i32 %v2_804887b, i32* %eax.global-to-local, align 4
  %v0_8048880 = load i32, i32* @esp, align 4
  %v1_8048880 = inttoptr i32 %v0_8048880 to i32*
  %v2_8048880 = load i32, i32* %v1_8048880, align 4
  store i32 %v2_8048880, i32* %eax.global-to-local, align 4
  %v3_8048880 = add i32 %v0_8048880, 4
  %v1_8048881 = inttoptr i32 %v3_8048880 to i32*
  %v2_8048881 = load i32, i32* %v1_8048881, align 4
  store i32 %v2_8048881, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_8048881, align 4
  store i32 32, i32* %v1_8048880, align 4
  %v3_8048886 = call i32 @function_8050fe0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048886, i32* %eax.global-to-local, align 4
  store i32 %v3_8048886, i32* @ebx, align 4
  %v0_804888d = load i32, i32* @esp, align 4
  %v1_804888d = inttoptr i32 %v0_804888d to i32*
  %v2_804888d = load i32, i32* %v1_804888d, align 4
  store i32 %v2_804888d, i32* %eax.global-to-local, align 4
  %v1_804888e = add i32 %v0_804888d, 10388
  store i32 %v1_804888e, i32* %ecx.global-to-local, align 4
  store i32 %v1_804888e, i32* %v1_804888d, align 4
  %v2_8048896 = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_8048896, i32* %eax.global-to-local, align 4
  %v0_804889b = load i32, i32* @esp, align 4
  %v1_804889b = inttoptr i32 %v0_804889b to i32*
  %v2_804889b = load i32, i32* %v1_804889b, align 4
  store i32 %v2_804889b, i32* %edx.global-to-local, align 4
  %v3_804889b = add i32 %v0_804889b, 4
  %v1_804889c = inttoptr i32 %v3_804889b to i32*
  %v2_804889c = load i32, i32* %v1_804889c, align 4
  store i32 %v2_804889c, i32* %ecx.global-to-local, align 4
  %v0_804889d = load i32, i32* @ebx, align 4
  store i32 %v0_804889d, i32* %v1_804889c, align 4
  %v1_804889e = add i32 %v0_804889b, 10388
  store i32 %v1_804889e, i32* %edx.global-to-local, align 4
  %v2_80488a5 = add i32 %v1_804889e, %v2_8048896
  store i32 %v2_80488a5, i32* %eax.global-to-local, align 4
  store i32 %v2_80488a5, i32* %v1_804889b, align 4
  %v3_80488a9 = call i32 @function_8051a00(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80488a9, i32* %eax.global-to-local, align 4
  %v0_80488ae = load i32, i32* @esp, align 4
  %v1_80488ae = inttoptr i32 %v0_80488ae to i32*
  store i32 32, i32* %v1_80488ae, align 4
  %v2_80488b5 = call i32 @function_8051010(i8 %v1_804887b)
  store i32 %v2_80488b5, i32* %eax.global-to-local, align 4
  %v0_80488ba = load i32, i32* @esp, align 4
  %v1_80488ba = inttoptr i32 %v0_80488ba to i32*
  %v2_80488ba = load i32, i32* %v1_80488ba, align 4
  store i32 %v2_80488ba, i32* %eax.global-to-local, align 4
  %v1_80488bb = add i32 %v0_80488ba, 10388
  store i32 %v1_80488bb, i32* %ecx.global-to-local, align 4
  store i32 %v1_80488bb, i32* %v1_80488ba, align 4
  %v2_80488c3 = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_80488c3, i32* %eax.global-to-local, align 4
  %v0_80488c8 = load i32, i32* @esp, align 4
  %v1_80488c8 = inttoptr i32 %v0_80488c8 to i32*
  %v2_80488c8 = load i32, i32* %v1_80488c8, align 4
  store i32 %v2_80488c8, i32* %ecx.global-to-local, align 4
  %v3_80488c8 = add i32 %v0_80488c8, 4
  %v1_80488c9 = inttoptr i32 %v3_80488c8 to i32*
  %v2_80488c9 = load i32, i32* %v1_80488c9, align 4
  store i32 %v2_80488c9, i32* @ebx, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_80548a6.10 to i32), i32* %v1_80488c9, align 4
  %v1_80488cf = add i32 %v0_80488c8, 10388
  store i32 %v1_80488cf, i32* %edx.global-to-local, align 4
  %v2_80488d6 = add i32 %v1_80488cf, %v2_80488c3
  store i32 %v2_80488d6, i32* %eax.global-to-local, align 4
  store i32 %v2_80488d6, i32* %v1_80488c8, align 4
  %v3_80488da = call i32 @function_8051a00(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80488da, i32* %eax.global-to-local, align 4
  %v0_80488df = load i32, i32* @esp, align 4
  %v1_80488df = inttoptr i32 %v0_80488df to i32*
  store i32 33, i32* %v1_80488df, align 4
  %v2_80488e6 = call i32 @function_8051090(i8 %v1_804887b)
  store i32 %v2_80488e6, i32* %eax.global-to-local, align 4
  %v0_80488eb = load i32, i32* @esp, align 4
  %v1_80488eb = inttoptr i32 %v0_80488eb to i32*
  %v2_80488eb = load i32, i32* %v1_80488eb, align 4
  store i32 %v2_80488eb, i32* %eax.global-to-local, align 4
  %v3_80488eb = add i32 %v0_80488eb, 4
  %v1_80488ec = inttoptr i32 %v3_80488eb to i32*
  %v2_80488ec = load i32, i32* %v1_80488ec, align 4
  store i32 %v2_80488ec, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_80488ec, align 4
  store i32 33, i32* %v1_80488eb, align 4
  %v3_80488f1 = call i32 @function_8050fe0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80488f1, i32* %eax.global-to-local, align 4
  store i32 %v3_80488f1, i32* @ebx, align 4
  %v0_80488f8 = load i32, i32* @esp, align 4
  %v1_80488f8 = inttoptr i32 %v0_80488f8 to i32*
  %v2_80488f8 = load i32, i32* %v1_80488f8, align 4
  store i32 %v2_80488f8, i32* %eax.global-to-local, align 4
  %v1_80488f9 = add i32 %v0_80488f8, 10388
  store i32 %v1_80488f9, i32* %ecx.global-to-local, align 4
  store i32 %v1_80488f9, i32* %v1_80488f8, align 4
  %v2_8048901 = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_8048901, i32* %eax.global-to-local, align 4
  %v0_8048906 = load i32, i32* @esp, align 4
  %v1_8048906 = inttoptr i32 %v0_8048906 to i32*
  %v2_8048906 = load i32, i32* %v1_8048906, align 4
  store i32 %v2_8048906, i32* %edx.global-to-local, align 4
  %v3_8048906 = add i32 %v0_8048906, 4
  %v1_8048907 = inttoptr i32 %v3_8048906 to i32*
  %v2_8048907 = load i32, i32* %v1_8048907, align 4
  store i32 %v2_8048907, i32* %ecx.global-to-local, align 4
  %v0_8048908 = load i32, i32* @ebx, align 4
  store i32 %v0_8048908, i32* %v1_8048907, align 4
  %v1_8048909 = add i32 %v0_8048906, 10388
  store i32 %v1_8048909, i32* %edx.global-to-local, align 4
  %v2_8048910 = add i32 %v1_8048909, %v2_8048901
  store i32 %v2_8048910, i32* %eax.global-to-local, align 4
  store i32 %v2_8048910, i32* %v1_8048906, align 4
  %v3_8048914 = call i32 @function_8051a00(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048914, i32* %eax.global-to-local, align 4
  %v0_8048919 = load i32, i32* @esp, align 4
  %v1_8048919 = inttoptr i32 %v0_8048919 to i32*
  store i32 33, i32* %v1_8048919, align 4
  %v2_8048920 = call i32 @function_8051010(i8 %v1_804887b)
  store i32 %v2_8048920, i32* %eax.global-to-local, align 4
  %v0_8048925 = load i32, i32* @esp, align 4
  %v1_8048925 = inttoptr i32 %v0_8048925 to i32*
  %v2_8048925 = load i32, i32* %v1_8048925, align 4
  store i32 %v2_8048925, i32* %eax.global-to-local, align 4
  %v1_8048926 = add i32 %v0_8048925, 10388
  store i32 %v1_8048926, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048926, i32* %v1_8048925, align 4
  %v2_804892e = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_804892e, i32* %eax.global-to-local, align 4
  %v0_8048933 = load i32, i32* @esp, align 4
  %v1_8048933 = inttoptr i32 %v0_8048933 to i32*
  %v2_8048933 = load i32, i32* %v1_8048933, align 4
  store i32 %v2_8048933, i32* %ecx.global-to-local, align 4
  %v3_8048933 = add i32 %v0_8048933, 4
  %v1_8048934 = inttoptr i32 %v3_8048933 to i32*
  %v2_8048934 = load i32, i32* %v1_8048934, align 4
  store i32 %v2_8048934, i32* @ebx, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_80548a6.10 to i32), i32* %v1_8048934, align 4
  %v1_804893a = add i32 %v0_8048933, 10388
  store i32 %v1_804893a, i32* %edx.global-to-local, align 4
  %v2_8048941 = add i32 %v1_804893a, %v2_804892e
  store i32 %v2_8048941, i32* %eax.global-to-local, align 4
  store i32 %v2_8048941, i32* %v1_8048933, align 4
  %v3_8048945 = call i32 @function_8051a00(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048945, i32* %eax.global-to-local, align 4
  %v0_804894a = load i32, i32* @esp, align 4
  %v1_804894a = inttoptr i32 %v0_804894a to i32*
  store i32 34, i32* %v1_804894a, align 4
  %v2_8048951 = call i32 @function_8051090(i8 %v1_804887b)
  store i32 %v2_8048951, i32* %eax.global-to-local, align 4
  %v0_8048956 = load i32, i32* @esp, align 4
  %v1_8048956 = inttoptr i32 %v0_8048956 to i32*
  %v2_8048956 = load i32, i32* %v1_8048956, align 4
  store i32 %v2_8048956, i32* %eax.global-to-local, align 4
  %v3_8048956 = add i32 %v0_8048956, 4
  %v1_8048957 = inttoptr i32 %v3_8048956 to i32*
  %v2_8048957 = load i32, i32* %v1_8048957, align 4
  store i32 %v2_8048957, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_8048957, align 4
  store i32 34, i32* %v1_8048956, align 4
  %v3_804895c = call i32 @function_8050fe0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_804895c, i32* %eax.global-to-local, align 4
  store i32 %v3_804895c, i32* @ebx, align 4
  %v0_8048963 = load i32, i32* @esp, align 4
  %v1_8048963 = inttoptr i32 %v0_8048963 to i32*
  %v2_8048963 = load i32, i32* %v1_8048963, align 4
  store i32 %v2_8048963, i32* %eax.global-to-local, align 4
  %v1_8048964 = add i32 %v0_8048963, 10388
  store i32 %v1_8048964, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048964, i32* %v1_8048963, align 4
  %v2_804896c = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_804896c, i32* %eax.global-to-local, align 4
  %v0_8048971 = load i32, i32* @esp, align 4
  %v1_8048971 = inttoptr i32 %v0_8048971 to i32*
  %v2_8048971 = load i32, i32* %v1_8048971, align 4
  store i32 %v2_8048971, i32* %edx.global-to-local, align 4
  %v3_8048971 = add i32 %v0_8048971, 4
  %v1_8048972 = inttoptr i32 %v3_8048971 to i32*
  %v2_8048972 = load i32, i32* %v1_8048972, align 4
  store i32 %v2_8048972, i32* %ecx.global-to-local, align 4
  %v0_8048973 = load i32, i32* @ebx, align 4
  store i32 %v0_8048973, i32* %v1_8048972, align 4
  %v1_8048974 = add i32 %v0_8048971, 10388
  store i32 %v1_8048974, i32* %edx.global-to-local, align 4
  %v2_804897b = add i32 %v1_8048974, %v2_804896c
  store i32 %v2_804897b, i32* %eax.global-to-local, align 4
  store i32 %v2_804897b, i32* %v1_8048971, align 4
  %v3_804897f = call i32 @function_8051a00(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804897f, i32* %eax.global-to-local, align 4
  %v0_8048984 = load i32, i32* @esp, align 4
  %v1_8048984 = inttoptr i32 %v0_8048984 to i32*
  store i32 34, i32* %v1_8048984, align 4
  %v2_804898b = call i32 @function_8051010(i8 %v1_804887b)
  store i32 %v2_804898b, i32* %eax.global-to-local, align 4
  %v0_8048990 = load i32, i32* @esp, align 4
  %v1_8048990 = inttoptr i32 %v0_8048990 to i32*
  %v1_8048991 = add i32 %v0_8048990, 10388
  store i32 %v1_8048991, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048991, i32* %v1_8048990, align 4
  %v2_8048999 = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_8048999, i32* %eax.global-to-local, align 4
  %v0_804899e = load i32, i32* @esp, align 4
  %v1_804899e = inttoptr i32 %v0_804899e to i32*
  %v2_804899e = load i32, i32* %v1_804899e, align 4
  store i32 %v2_804899e, i32* @ebx, align 4
  %v3_804899e = add i32 %v0_804899e, 4
  %v1_804899f = inttoptr i32 %v3_804899e to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80548a6.10 to i32), i32* %v1_804899f, align 4
  %v1_80489a5 = add i32 %v0_804899e, 10388
  store i32 %v1_80489a5, i32* %edx.global-to-local, align 4
  %v2_80489ac = add i32 %v1_80489a5, %v2_8048999
  store i32 %v2_80489ac, i32* %eax.global-to-local, align 4
  store i32 %v2_80489ac, i32* %v1_804899e, align 4
  %v3_80489b0 = call i32 @function_8051a00(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80489b0, i32* %eax.global-to-local, align 4
  %v0_80489b5 = load i32, i32* @esp, align 4
  %v1_80489b5 = add i32 %v0_80489b5, 16
  %v1_80489b8 = add i32 %v0_80489b5, 68
  %v2_80489b8 = inttoptr i32 %v1_80489b8 to i32*
  %v3_80489b8 = load i32, i32* %v2_80489b8, align 4
  store i32 %v3_80489b8, i32* %ecx.global-to-local, align 4
  %v1_80489bc = icmp eq i32 %v3_80489b8, 0
  store i1 %v1_80489bc, i1* %zf.global-to-local, align 1
  br i1 %v1_80489bc, label %dec_label_pc_8048ad8, label %dec_label_pc_80489c4

dec_label_pc_80489c4:                             ; preds = %dec_label_pc_8048700
  %v9_80489c4 = icmp eq i32 %v0_80489b5, -4
  store i1 %v9_80489c4, i1* %zf.global-to-local, align 1
  %v2_80489c7 = inttoptr i32 %v0_80489b5 to i32*
  store i32 35, i32* %v2_80489c7, align 4
  %v2_80489c9 = call i32 @function_8051090(i8 %v1_804887b)
  store i32 %v2_80489c9, i32* %eax.global-to-local, align 4
  %v0_80489ce = load i32, i32* @esp, align 4
  %v1_80489ce = inttoptr i32 %v0_80489ce to i32*
  %v2_80489ce = load i32, i32* %v1_80489ce, align 4
  store i32 %v2_80489ce, i32* %eax.global-to-local, align 4
  %v3_80489ce = add i32 %v0_80489ce, 4
  %v1_80489cf = inttoptr i32 %v3_80489ce to i32*
  %v2_80489cf = load i32, i32* %v1_80489cf, align 4
  store i32 %v2_80489cf, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_80489cf, align 4
  store i32 35, i32* %v1_80489ce, align 4
  %v3_80489d4 = call i32 @function_8050fe0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80489d4, i32* %eax.global-to-local, align 4
  store i32 %v3_80489d4, i32* @ebx, align 4
  %v0_80489db = load i32, i32* @esp, align 4
  %v1_80489db = inttoptr i32 %v0_80489db to i32*
  %v2_80489db = load i32, i32* %v1_80489db, align 4
  store i32 %v2_80489db, i32* %eax.global-to-local, align 4
  %v1_80489dc = add i32 %v0_80489db, 10388
  store i32 %v1_80489dc, i32* %ecx.global-to-local, align 4
  store i32 %v1_80489dc, i32* %v1_80489db, align 4
  %v2_80489e4 = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_80489e4, i32* %eax.global-to-local, align 4
  %v0_80489e9 = load i32, i32* @esp, align 4
  %v1_80489e9 = inttoptr i32 %v0_80489e9 to i32*
  %v2_80489e9 = load i32, i32* %v1_80489e9, align 4
  store i32 %v2_80489e9, i32* %edx.global-to-local, align 4
  %v3_80489e9 = add i32 %v0_80489e9, 4
  %v1_80489ea = inttoptr i32 %v3_80489e9 to i32*
  %v2_80489ea = load i32, i32* %v1_80489ea, align 4
  store i32 %v2_80489ea, i32* %ecx.global-to-local, align 4
  %v0_80489eb = load i32, i32* @ebx, align 4
  store i32 %v0_80489eb, i32* %v1_80489ea, align 4
  %v1_80489ec = add i32 %v0_80489e9, 10388
  store i32 %v1_80489ec, i32* %edx.global-to-local, align 4
  %v2_80489f3 = add i32 %v1_80489ec, %v2_80489e4
  store i32 %v2_80489f3, i32* %eax.global-to-local, align 4
  store i32 %v2_80489f3, i32* %v1_80489e9, align 4
  %v3_80489f7 = call i32 @function_8051a00(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80489f7, i32* %eax.global-to-local, align 4
  %v0_80489fc = load i32, i32* @esp, align 4
  %v1_80489fc = inttoptr i32 %v0_80489fc to i32*
  store i32 35, i32* %v1_80489fc, align 4
  %v2_8048a03 = call i32 @function_8051010(i8 %v1_804887b)
  store i32 %v2_8048a03, i32* %eax.global-to-local, align 4
  %v0_8048a08 = load i32, i32* @esp, align 4
  %v1_8048a08 = inttoptr i32 %v0_8048a08 to i32*
  %v2_8048a08 = load i32, i32* %v1_8048a08, align 4
  store i32 %v2_8048a08, i32* %eax.global-to-local, align 4
  %v1_8048a09 = add i32 %v0_8048a08, 10388
  store i32 %v1_8048a09, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048a09, i32* %v1_8048a08, align 4
  %v2_8048a11 = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_8048a11, i32* %eax.global-to-local, align 4
  %v0_8048a16 = load i32, i32* @esp, align 4
  %v1_8048a16 = inttoptr i32 %v0_8048a16 to i32*
  %v2_8048a16 = load i32, i32* %v1_8048a16, align 4
  store i32 %v2_8048a16, i32* %ecx.global-to-local, align 4
  %v3_8048a16 = add i32 %v0_8048a16, 4
  %v1_8048a17 = inttoptr i32 %v3_8048a16 to i32*
  %v2_8048a17 = load i32, i32* %v1_8048a17, align 4
  store i32 %v2_8048a17, i32* @ebx, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_80548a6.10 to i32), i32* %v1_8048a17, align 4
  %v1_8048a1d = add i32 %v0_8048a16, 10388
  store i32 %v1_8048a1d, i32* %edx.global-to-local, align 4
  %v2_8048a24 = add i32 %v1_8048a1d, %v2_8048a11
  store i32 %v2_8048a24, i32* %eax.global-to-local, align 4
  store i32 %v2_8048a24, i32* %v1_8048a16, align 4
  %v3_8048a28 = call i32 @function_8051a00(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048a28, i32* %eax.global-to-local, align 4
  %v0_8048a2d = load i32, i32* @esp, align 4
  %v1_8048a2d = inttoptr i32 %v0_8048a2d to i32*
  %v2_8048a2d = load i32, i32* %v1_8048a2d, align 4
  store i32 %v2_8048a2d, i32* %eax.global-to-local, align 4
  %v3_8048a2d = add i32 %v0_8048a2d, 4
  %v1_8048a2e = inttoptr i32 %v3_8048a2d to i32*
  %v2_8048a2e = load i32, i32* %v1_8048a2e, align 4
  store i32 %v2_8048a2e, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_8048a2e, align 4
  store i32 40, i32* %v1_8048a2d, align 4
  %v3_8048a33 = call i32 @function_8050fe0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048a33, i32* %eax.global-to-local, align 4
  store i32 %v3_8048a33, i32* @ebx, align 4
  %v0_8048a3a = load i32, i32* @esp, align 4
  %v1_8048a3a = inttoptr i32 %v0_8048a3a to i32*
  %v2_8048a3a = load i32, i32* %v1_8048a3a, align 4
  store i32 %v2_8048a3a, i32* %eax.global-to-local, align 4
  %v1_8048a3b = add i32 %v0_8048a3a, 10388
  store i32 %v1_8048a3b, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048a3b, i32* %v1_8048a3a, align 4
  %v2_8048a43 = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_8048a43, i32* %eax.global-to-local, align 4
  %v0_8048a48 = load i32, i32* @esp, align 4
  %v1_8048a48 = inttoptr i32 %v0_8048a48 to i32*
  %v2_8048a48 = load i32, i32* %v1_8048a48, align 4
  store i32 %v2_8048a48, i32* %edx.global-to-local, align 4
  %v3_8048a48 = add i32 %v0_8048a48, 4
  %v1_8048a49 = inttoptr i32 %v3_8048a48 to i32*
  %v2_8048a49 = load i32, i32* %v1_8048a49, align 4
  store i32 %v2_8048a49, i32* %ecx.global-to-local, align 4
  %v0_8048a4a = load i32, i32* @ebx, align 4
  store i32 %v0_8048a4a, i32* %v1_8048a49, align 4
  %v1_8048a4b = add i32 %v0_8048a48, 10388
  store i32 %v1_8048a4b, i32* %edx.global-to-local, align 4
  %v2_8048a52 = add i32 %v1_8048a4b, %v2_8048a43
  store i32 %v2_8048a52, i32* %eax.global-to-local, align 4
  store i32 %v2_8048a52, i32* %v1_8048a48, align 4
  %v3_8048a56 = call i32 @function_8051a00(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048a56, i32* %eax.global-to-local, align 4
  %v0_8048a5b = load i32, i32* @esp, align 4
  %v1_8048a5b = inttoptr i32 %v0_8048a5b to i32*
  %v2_8048a5b = load i32, i32* %v1_8048a5b, align 4
  store i32 %v2_8048a5b, i32* @ebx, align 4
  %v1_8048a5c = add i32 %v0_8048a5b, 10388
  store i32 %v1_8048a5c, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048a5c, i32* %v1_8048a5b, align 4
  %v2_8048a64 = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_8048a64, i32* %eax.global-to-local, align 4
  %v0_8048a69 = load i32, i32* @esp, align 4
  %v1_8048a69 = inttoptr i32 %v0_8048a69 to i32*
  %v2_8048a69 = load i32, i32* %v1_8048a69, align 4
  store i32 %v2_8048a69, i32* %edx.global-to-local, align 4
  %v3_8048a69 = add i32 %v0_8048a69, 4
  %v1_8048a6a = inttoptr i32 %v3_8048a69 to i32*
  %v2_8048a6a = load i32, i32* %v1_8048a6a, align 4
  store i32 %v2_8048a6a, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805489f.7 to i32), i32* %v1_8048a6a, align 4
  %v1_8048a70 = add i32 %v0_8048a69, 10388
  store i32 %v1_8048a70, i32* %edx.global-to-local, align 4
  %v2_8048a77 = add i32 %v1_8048a70, %v2_8048a64
  store i32 %v2_8048a77, i32* %eax.global-to-local, align 4
  store i32 %v2_8048a77, i32* %v1_8048a69, align 4
  %v3_8048a7b = call i32 @function_8051a00(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048a7b, i32* %eax.global-to-local, align 4
  %v0_8048a80 = load i32, i32* @esp, align 4
  %v1_8048a80 = inttoptr i32 %v0_8048a80 to i32*
  %v2_8048a80 = load i32, i32* %v1_8048a80, align 4
  store i32 %v2_8048a80, i32* %eax.global-to-local, align 4
  %v1_8048a81 = add i32 %v0_8048a80, 10388
  store i32 %v1_8048a81, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048a81, i32* %v1_8048a80, align 4
  %v2_8048a89 = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_8048a89, i32* %eax.global-to-local, align 4
  store i32 %v2_8048a89, i32* @ebx, align 4
  %v0_8048a90 = load i32, i32* @esp, align 4
  %v1_8048a90 = inttoptr i32 %v0_8048a90 to i32*
  %v2_8048a90 = load i32, i32* %v1_8048a90, align 4
  store i32 %v2_8048a90, i32* %eax.global-to-local, align 4
  %v1_8048a91 = add i32 %v0_8048a90, 68
  %v2_8048a91 = inttoptr i32 %v1_8048a91 to i32*
  %v3_8048a91 = load i32, i32* %v2_8048a91, align 4
  store i32 %v3_8048a91, i32* %eax.global-to-local, align 4
  store i32 %v3_8048a91, i32* %v1_8048a90, align 4
  %v2_8048a96 = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_8048a96, i32* %eax.global-to-local, align 4
  %v0_8048a9b = load i32, i32* @esp, align 4
  %v1_8048a9e = add i32 %v0_8048a9b, 10388
  %v1_8048aa5 = load i32, i32* @ebx, align 4
  %v2_8048aa5 = add i32 %v1_8048a9e, %v1_8048aa5
  %v12_8048aa5 = icmp eq i32 %v2_8048aa5, 0
  store i1 %v12_8048aa5, i1* %zf.global-to-local, align 1
  store i32 %v2_8048aa5, i32* %edx.global-to-local, align 4
  %v2_8048aa7 = add i32 %v0_8048a9b, 8
  %v3_8048aa7 = inttoptr i32 %v2_8048aa7 to i32*
  store i32 %v2_8048aa5, i32* %v3_8048aa7, align 4
  %v1_8048aa8 = add i32 %v0_8048a9b, 4
  %v2_8048aa8 = inttoptr i32 %v1_8048aa8 to i32*
  store i32 10, i32* %v2_8048aa8, align 4
  %v3_8048aaa = inttoptr i32 %v0_8048a9b to i32*
  store i32 %v2_8048a96, i32* %v3_8048aaa, align 4
  %v0_8048aab = call i32 @function_8051df0()
  store i32 %v0_8048aab, i32* %eax.global-to-local, align 4
  %v0_8048ab0 = load i32, i32* @esp, align 4
  %v1_8048ab0 = inttoptr i32 %v0_8048ab0 to i32*
  %v2_8048ab0 = load i32, i32* %v1_8048ab0, align 4
  store i32 %v2_8048ab0, i32* @ebx, align 4
  %v1_8048ab1 = add i32 %v0_8048ab0, 10388
  store i32 %v1_8048ab1, i32* %eax.global-to-local, align 4
  store i32 %v1_8048ab1, i32* %v1_8048ab0, align 4
  %v2_8048ab9 = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_8048ab9, i32* %eax.global-to-local, align 4
  %v0_8048abe = load i32, i32* @esp, align 4
  %v1_8048abe = inttoptr i32 %v0_8048abe to i32*
  %v2_8048abe = load i32, i32* %v1_8048abe, align 4
  store i32 %v2_8048abe, i32* %edx.global-to-local, align 4
  %v3_8048abe = add i32 %v0_8048abe, 4
  %v1_8048abf = inttoptr i32 %v3_8048abe to i32*
  %v2_8048abf = load i32, i32* %v1_8048abf, align 4
  store i32 %v2_8048abf, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_80548a6.10 to i32), i32* %v1_8048abf, align 4
  %v1_8048ac5 = add i32 %v0_8048abe, 10388
  store i32 %v1_8048ac5, i32* %edx.global-to-local, align 4
  %v2_8048acc = add i32 %v1_8048ac5, %v2_8048ab9
  store i32 %v2_8048acc, i32* %eax.global-to-local, align 4
  store i32 %v2_8048acc, i32* %v1_8048abe, align 4
  %v3_8048ad0 = call i32 @function_8051a00(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048ad0, i32* %eax.global-to-local, align 4
  %v0_8048ad5 = load i32, i32* @esp, align 4
  %v1_8048ad5 = add i32 %v0_8048ad5, 16
  %v6_8048ad5 = icmp eq i32 %v1_8048ad5, 0
  store i1 %v6_8048ad5, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048ad8

dec_label_pc_8048ad8:                             ; preds = %dec_label_pc_8048700, %dec_label_pc_80489c4
  %v0_8048ae3 = phi i32 [ %v1_80489b5, %dec_label_pc_8048700 ], [ %v1_8048ad5, %dec_label_pc_80489c4 ]
  %v0_8048ad8 = load i32, i32* @esi, align 4
  %v1_8048ad8 = add i32 %v0_8048ad8, 28
  %v2_8048ad8 = inttoptr i32 %v1_8048ad8 to i32*
  %v3_8048ad8 = load i32, i32* %v2_8048ad8, align 4
  store i32 %v3_8048ad8, i32* @ebx, align 4
  %v1_8048adb = icmp eq i32 %v3_8048ad8, 0
  store i1 %v1_8048adb, i1* %zf.global-to-local, align 1
  %tmp140 = icmp slt i32 %v3_8048ad8, 1
  br i1 %tmp140, label %dec_label_pc_8048bb4, label %dec_label_pc_8048ae3

dec_label_pc_8048ae3:                             ; preds = %dec_label_pc_8048ad8
  %v9_8048ae3 = icmp eq i32 %v0_8048ae3, 12
  store i1 %v9_8048ae3, i1* %zf.global-to-local, align 1
  %v1_8048ae6 = add i32 %v0_8048ae3, 10372
  store i32 %v1_8048ae6, i32* %ecx.global-to-local, align 4
  %v2_8048aed = add i32 %v0_8048ae3, -16
  %v3_8048aed = inttoptr i32 %v2_8048aed to i32*
  store i32 %v1_8048ae6, i32* %v3_8048aed, align 4
  %v2_8048aee = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_8048aee, i32* %eax.global-to-local, align 4
  %v0_8048af3 = load i32, i32* @esp, align 4
  %v1_8048af3 = inttoptr i32 %v0_8048af3 to i32*
  %v2_8048af3 = load i32, i32* %v1_8048af3, align 4
  store i32 %v2_8048af3, i32* %edx.global-to-local, align 4
  %v3_8048af3 = add i32 %v0_8048af3, 4
  %v1_8048af4 = inttoptr i32 %v3_8048af3 to i32*
  %v2_8048af4 = load i32, i32* %v1_8048af4, align 4
  store i32 %v2_8048af4, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_8054898.11 to i32), i32* %v1_8048af4, align 4
  %v1_8048afa = add i32 %v0_8048af3, 10388
  store i32 %v1_8048afa, i32* %edx.global-to-local, align 4
  %v2_8048b01 = add i32 %v1_8048afa, %v2_8048aee
  store i32 %v2_8048b01, i32* %eax.global-to-local, align 4
  store i32 %v2_8048b01, i32* %v1_8048af3, align 4
  %v3_8048b05 = call i32 @function_8051a00(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048b05, i32* %eax.global-to-local, align 4
  %v0_8048b0a = load i32, i32* @esp, align 4
  %v1_8048b0a = add i32 %v0_8048b0a, 20916
  %v2_8048b0a = inttoptr i32 %v1_8048b0a to i32*
  store i32 0, i32* %v2_8048b0a, align 4
  %v0_8048b15 = load i32, i32* @esp, align 4
  %v1_8048b15 = add i32 %v0_8048b15, 16
  %v0_8048b18 = load i32, i32* @esi, align 4
  %v1_8048b18 = add i32 %v0_8048b18, 28
  %v2_8048b18 = inttoptr i32 %v1_8048b18 to i32*
  %v3_8048b18 = load i32, i32* %v2_8048b18, align 4
  store i32 %v3_8048b18, i32* %ebx.global-to-local, align 4
  %v1_8048b1b = icmp eq i32 %v3_8048b18, 0
  store i1 %v1_8048b1b, i1* %zf.global-to-local, align 1
  %tmp141 = icmp slt i32 %v3_8048b18, 1
  br i1 %tmp141, label %dec_label_pc_8048b8a, label %dec_label_pc_8048b1f

dec_label_pc_8048b1f:                             ; preds = %dec_label_pc_8048ae3
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8048b21

dec_label_pc_8048b21:                             ; preds = %dec_label_pc_8048b21, %dec_label_pc_8048b1f
  %v0_8048b24 = phi i32 [ %v1_8048b82, %dec_label_pc_8048b21 ], [ %v1_8048b15, %dec_label_pc_8048b1f ]
  %v0_8048b21 = phi i32 [ %v4_8048b85, %dec_label_pc_8048b21 ], [ 0, %dec_label_pc_8048b1f ]
  %v2_8048b21 = mul i32 %v0_8048b21, 128
  store i32 %v2_8048b21, i32* @ebx, align 4
  %v9_8048b24 = icmp eq i32 %v0_8048b24, 12
  store i1 %v9_8048b24, i1* %zf.global-to-local, align 1
  %v1_8048b27 = add i32 %v0_8048b24, 10372
  store i32 %v1_8048b27, i32* %ecx.global-to-local, align 4
  %v2_8048b2e = add i32 %v0_8048b24, -16
  %v3_8048b2e = inttoptr i32 %v2_8048b2e to i32*
  store i32 %v1_8048b27, i32* %v3_8048b2e, align 4
  %v2_8048b2f = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_8048b2f, i32* %eax.global-to-local, align 4
  %v0_8048b34 = load i32, i32* @esp, align 4
  %v1_8048b34 = inttoptr i32 %v0_8048b34 to i32*
  %v3_8048b34 = add i32 %v0_8048b34, 4
  %v0_8048b35 = load i32, i32* @ebx, align 4
  %v1_8048b35 = load i32, i32* @edi, align 4
  %v2_8048b35 = add i32 %v0_8048b35, 1472
  %v3_8048b35 = add i32 %v2_8048b35, %v1_8048b35
  store i32 %v3_8048b35, i32* %edx.global-to-local, align 4
  %v1_8048b3c = inttoptr i32 %v3_8048b34 to i32*
  %v2_8048b3c = load i32, i32* %v1_8048b3c, align 4
  store i32 %v2_8048b3c, i32* %ecx.global-to-local, align 4
  store i32 %v3_8048b35, i32* %v1_8048b3c, align 4
  %v1_8048b3e = add i32 %v0_8048b34, 10388
  store i32 %v1_8048b3e, i32* %edx.global-to-local, align 4
  %v2_8048b45 = add i32 %v1_8048b3e, %v2_8048b2f
  store i32 %v2_8048b45, i32* %eax.global-to-local, align 4
  store i32 %v2_8048b45, i32* %v1_8048b34, align 4
  %v3_8048b49 = call i32 @function_8051a00(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048b49, i32* %eax.global-to-local, align 4
  %v0_8048b4e = load i32, i32* @esp, align 4
  %v1_8048b4e = inttoptr i32 %v0_8048b4e to i32*
  %v2_8048b4e = load i32, i32* %v1_8048b4e, align 4
  store i32 %v2_8048b4e, i32* @ebx, align 4
  %v1_8048b4f = add i32 %v0_8048b4e, 10388
  store i32 %v1_8048b4f, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048b4f, i32* %v1_8048b4e, align 4
  %v2_8048b57 = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_8048b57, i32* %eax.global-to-local, align 4
  %v0_8048b5c = load i32, i32* @esp, align 4
  %v1_8048b5c = inttoptr i32 %v0_8048b5c to i32*
  %v2_8048b5c = load i32, i32* %v1_8048b5c, align 4
  store i32 %v2_8048b5c, i32* %edx.global-to-local, align 4
  %v3_8048b5c = add i32 %v0_8048b5c, 4
  %v1_8048b5d = inttoptr i32 %v3_8048b5c to i32*
  %v2_8048b5d = load i32, i32* %v1_8048b5d, align 4
  store i32 %v2_8048b5d, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_80548a1.12 to i32), i32* %v1_8048b5d, align 4
  %v1_8048b63 = add i32 %v0_8048b5c, 10388
  store i32 %v1_8048b63, i32* %edx.global-to-local, align 4
  %v2_8048b6a = add i32 %v1_8048b63, %v2_8048b57
  store i32 %v2_8048b6a, i32* %eax.global-to-local, align 4
  store i32 %v2_8048b6a, i32* %v1_8048b5c, align 4
  %v3_8048b6e = call i32 @function_8051a00(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048b6e, i32* %eax.global-to-local, align 4
  %v0_8048b73 = load i32, i32* @esp, align 4
  %v1_8048b73 = add i32 %v0_8048b73, 20916
  %v2_8048b73 = inttoptr i32 %v1_8048b73 to i32*
  %v3_8048b73 = load i32, i32* %v2_8048b73, align 4
  %v1_8048b7a = add i32 %v3_8048b73, 1
  store i32 %v1_8048b7a, i32* %ebx.global-to-local, align 4
  store i32 %v1_8048b7a, i32* %v2_8048b73, align 4
  %v0_8048b82 = load i32, i32* @esp, align 4
  %v1_8048b82 = add i32 %v0_8048b82, 16
  %v0_8048b85 = load i32, i32* @esi, align 4
  %v1_8048b85 = add i32 %v0_8048b85, 28
  %v2_8048b85 = inttoptr i32 %v1_8048b85 to i32*
  %v3_8048b85 = load i32, i32* %v2_8048b85, align 4
  %v4_8048b85 = load i32, i32* %ebx.global-to-local, align 4
  %v5_8048b85 = sub i32 %v3_8048b85, %v4_8048b85
  %v11_8048b85 = xor i32 %v4_8048b85, %v3_8048b85
  %v12_8048b85 = xor i32 %v5_8048b85, %v3_8048b85
  %v13_8048b85 = and i32 %v12_8048b85, %v11_8048b85
  %v14_8048b85 = icmp slt i32 %v13_8048b85, 0
  %v15_8048b85 = icmp eq i32 %v5_8048b85, 0
  store i1 %v15_8048b85, i1* %zf.global-to-local, align 1
  %v16_8048b85 = icmp slt i32 %v5_8048b85, 0
  %v3_8048b88 = icmp eq i1 %v16_8048b85, %v14_8048b85
  %v4_8048b88 = icmp eq i1 %v15_8048b85, false
  %v5_8048b88 = and i1 %v4_8048b88, %v3_8048b88
  br i1 %v5_8048b88, label %dec_label_pc_8048b21, label %dec_label_pc_8048b8a

dec_label_pc_8048b8a:                             ; preds = %dec_label_pc_8048b21, %dec_label_pc_8048ae3
  %v0_8048b8a = phi i32 [ %v1_8048b15, %dec_label_pc_8048ae3 ], [ %v1_8048b82, %dec_label_pc_8048b21 ]
  %v9_8048b8a = icmp eq i32 %v0_8048b8a, 12
  store i1 %v9_8048b8a, i1* %zf.global-to-local, align 1
  %v1_8048b8d = add i32 %v0_8048b8a, 10372
  store i32 %v1_8048b8d, i32* %ecx.global-to-local, align 4
  %v2_8048b94 = add i32 %v0_8048b8a, -16
  %v3_8048b94 = inttoptr i32 %v2_8048b94 to i32*
  store i32 %v1_8048b8d, i32* %v3_8048b94, align 4
  %v2_8048b95 = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_8048b95, i32* %eax.global-to-local, align 4
  %v0_8048b9a = load i32, i32* @esp, align 4
  %v1_8048b9a = inttoptr i32 %v0_8048b9a to i32*
  %v2_8048b9a = load i32, i32* %v1_8048b9a, align 4
  store i32 %v2_8048b9a, i32* @ebx, align 4
  %v3_8048b9a = add i32 %v0_8048b9a, 4
  %v1_8048b9b = inttoptr i32 %v3_8048b9a to i32*
  %v2_8048b9b = load i32, i32* %v1_8048b9b, align 4
  store i32 %v2_8048b9b, i32* %edi.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_80548a6.10 to i32), i32* %v1_8048b9b, align 4
  %v1_8048ba1 = add i32 %v0_8048b9a, 10388
  store i32 %v1_8048ba1, i32* %edx.global-to-local, align 4
  %v2_8048ba8 = add i32 %v1_8048ba1, %v2_8048b95
  store i32 %v2_8048ba8, i32* %eax.global-to-local, align 4
  store i32 %v2_8048ba8, i32* %v1_8048b9a, align 4
  %v3_8048bac = call i32 @function_8051a00(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048bac, i32* %eax.global-to-local, align 4
  %v0_8048bb1 = load i32, i32* @esp, align 4
  %v1_8048bb1 = add i32 %v0_8048bb1, 16
  %v6_8048bb1 = icmp eq i32 %v1_8048bb1, 0
  store i1 %v6_8048bb1, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048bb4

dec_label_pc_8048bb4:                             ; preds = %dec_label_pc_8048ad8, %dec_label_pc_8048b8a
  %v0_8048bb4 = phi i32 [ %v0_8048ae3, %dec_label_pc_8048ad8 ], [ %v1_8048bb1, %dec_label_pc_8048b8a ]
  %v9_8048bb4 = icmp eq i32 %v0_8048bb4, 12
  store i1 %v9_8048bb4, i1* %zf.global-to-local, align 1
  %v1_8048bb7 = add i32 %v0_8048bb4, 10372
  store i32 %v1_8048bb7, i32* %ecx.global-to-local, align 4
  %v2_8048bbe = add i32 %v0_8048bb4, -16
  %v3_8048bbe = inttoptr i32 %v2_8048bbe to i32*
  store i32 %v1_8048bb7, i32* %v3_8048bbe, align 4
  %v2_8048bbf = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_8048bbf, i32* %eax.global-to-local, align 4
  %v0_8048bc4 = load i32, i32* @esp, align 4
  %v1_8048bc4 = inttoptr i32 %v0_8048bc4 to i32*
  %v2_8048bc4 = load i32, i32* %v1_8048bc4, align 4
  store i32 %v2_8048bc4, i32* %edx.global-to-local, align 4
  %v3_8048bc4 = add i32 %v0_8048bc4, 4
  %v1_8048bc5 = inttoptr i32 %v3_8048bc4 to i32*
  %v2_8048bc5 = load i32, i32* %v1_8048bc5, align 4
  store i32 %v2_8048bc5, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_80548a6.10 to i32), i32* %v1_8048bc5, align 4
  %v1_8048bcb = add i32 %v0_8048bc4, 10388
  store i32 %v1_8048bcb, i32* %edx.global-to-local, align 4
  %v2_8048bd2 = add i32 %v1_8048bcb, %v2_8048bbf
  store i32 %v2_8048bd2, i32* %eax.global-to-local, align 4
  store i32 %v2_8048bd2, i32* %v1_8048bc4, align 4
  %v3_8048bd6 = call i32 @function_8051a00(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048bd6, i32* %eax.global-to-local, align 4
  %v0_8048bdb = load i32, i32* @esp, align 4
  %v1_8048bdb = add i32 %v0_8048bdb, 16
  %v1_8048bde = add i32 %v0_8048bdb, 68
  %v2_8048bde = inttoptr i32 %v1_8048bde to i32*
  %v3_8048bde = load i32, i32* %v2_8048bde, align 4
  store i32 %v3_8048bde, i32* @edi, align 4
  %v1_8048be2 = icmp eq i32 %v3_8048bde, 0
  store i1 %v1_8048be2, i1* %zf.global-to-local, align 1
  br i1 %v1_8048be2, label %dec_label_pc_8048c10, label %dec_label_pc_8048be6

dec_label_pc_8048be6:                             ; preds = %dec_label_pc_8048bb4
  %v9_8048be6 = icmp eq i32 %v0_8048bdb, -4
  store i1 %v9_8048be6, i1* %zf.global-to-local, align 1
  %v1_8048be9 = add i32 %v0_8048bdb, 10388
  store i32 %v1_8048be9, i32* %ecx.global-to-local, align 4
  %v3_8048bf0 = inttoptr i32 %v0_8048bdb to i32*
  store i32 %v1_8048be9, i32* %v3_8048bf0, align 4
  %v2_8048bf1 = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_8048bf1, i32* %eax.global-to-local, align 4
  %v0_8048bf6 = load i32, i32* @esp, align 4
  %v1_8048bf6 = inttoptr i32 %v0_8048bf6 to i32*
  %v2_8048bf6 = load i32, i32* %v1_8048bf6, align 4
  store i32 %v2_8048bf6, i32* %ecx.global-to-local, align 4
  %v3_8048bf6 = add i32 %v0_8048bf6, 4
  %v1_8048bf7 = inttoptr i32 %v3_8048bf6 to i32*
  %v2_8048bf7 = load i32, i32* %v1_8048bf7, align 4
  store i32 %v2_8048bf7, i32* @ebx, align 4
  %v1_8048bf8 = add i32 %v0_8048bf6, 68
  %v2_8048bf8 = inttoptr i32 %v1_8048bf8 to i32*
  %v3_8048bf8 = load i32, i32* %v2_8048bf8, align 4
  store i32 %v3_8048bf8, i32* %v1_8048bf7, align 4
  %v1_8048bfd = add i32 %v0_8048bf6, 10388
  store i32 %v1_8048bfd, i32* %edx.global-to-local, align 4
  %v2_8048c04 = add i32 %v1_8048bfd, %v2_8048bf1
  store i32 %v2_8048c04, i32* %eax.global-to-local, align 4
  store i32 %v2_8048c04, i32* %v1_8048bf6, align 4
  %v3_8048c08 = call i32 @function_8051a00(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048c08, i32* %eax.global-to-local, align 4
  %v0_8048c0d = load i32, i32* @esp, align 4
  %v1_8048c0d = add i32 %v0_8048c0d, 16
  %v6_8048c0d = icmp eq i32 %v1_8048c0d, 0
  store i1 %v6_8048c0d, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048c10

dec_label_pc_8048c10:                             ; preds = %dec_label_pc_8048bb4, %dec_label_pc_8048be6
  %v1_8048c10 = phi i32 [ %v1_8048bdb, %dec_label_pc_8048bb4 ], [ %v1_8048c0d, %dec_label_pc_8048be6 ]
  %v0_8048c10 = phi i32 [ %v3_8048bd6, %dec_label_pc_8048bb4 ], [ %v3_8048c08, %dec_label_pc_8048be6 ]
  %v2_8048c10 = add i32 %v1_8048c10, -4
  %v3_8048c10 = inttoptr i32 %v2_8048c10 to i32*
  store i32 %v0_8048c10, i32* %v3_8048c10, align 4
  %v0_8048c11 = load i32, i32* %eax.global-to-local, align 4
  %v2_8048c11 = add i32 %v1_8048c10, -8
  %v3_8048c11 = inttoptr i32 %v2_8048c11 to i32*
  store i32 %v0_8048c11, i32* %v3_8048c11, align 4
  %v0_8048c12 = load i32, i32* @esi, align 4
  %v2_8048c12 = add i32 %v1_8048c10, -12
  %v3_8048c12 = inttoptr i32 %v2_8048c12 to i32*
  store i32 %v0_8048c12, i32* %v3_8048c12, align 4
  %v1_8048c13 = add i32 %v1_8048c10, 96
  %v2_8048c13 = inttoptr i32 %v1_8048c13 to i32*
  %v3_8048c13 = load i32, i32* %v2_8048c13, align 4
  store i32 %v3_8048c13, i32* %eax.global-to-local, align 4
  %v2_8048c17 = add i32 %v1_8048c10, -16
  %v3_8048c17 = inttoptr i32 %v2_8048c17 to i32*
  store i32 %v3_8048c13, i32* %v3_8048c17, align 4
  %v0_8048c18 = call i32 @function_8051d50()
  store i32 %v0_8048c18, i32* %eax.global-to-local, align 4
  %v0_8048c1d = load i32, i32* @esp, align 4
  %v1_8048c1d = add i32 %v0_8048c1d, 16
  %v3_8048c20 = trunc i32 %v0_8048c18 to i8
  %v4_8048c20 = icmp eq i8 %v3_8048c20, 0
  store i1 %v4_8048c20, i1* %zf.global-to-local, align 1
  br i1 %v4_8048c20, label %dec_label_pc_804979e, label %dec_label_pc_8048c28

dec_label_pc_8048c28:                             ; preds = %dec_label_pc_8048c10, %dec_label_pc_804979e
  %v0_8048c28 = phi i32 [ %v1_8048c1d, %dec_label_pc_8048c10 ], [ %v1_80497ab, %dec_label_pc_804979e ]
  %v9_8048c28 = icmp eq i32 %v0_8048c28, 12
  store i1 %v9_8048c28, i1* %zf.global-to-local, align 1
  %v1_8048c2b = add i32 %v0_8048c28, 10372
  store i32 %v1_8048c2b, i32* %ecx.global-to-local, align 4
  %v2_8048c32 = add i32 %v0_8048c28, -16
  %v3_8048c32 = inttoptr i32 %v2_8048c32 to i32*
  store i32 %v1_8048c2b, i32* %v3_8048c32, align 4
  %v2_8048c33 = call i32 @function_80519e0(i8* %v1_8048752)
  %v0_8048c38 = load i32, i32* @esp, align 4
  %v1_8048c38 = add i32 %v0_8048c38, -4
  %v2_8048c38 = inttoptr i32 %v1_8048c38 to i32*
  store i32 16384, i32* %v2_8048c38, align 4
  %v2_8048c3d = add i32 %v0_8048c38, -8
  %v3_8048c3d = inttoptr i32 %v2_8048c3d to i32*
  store i32 %v2_8048c33, i32* %v3_8048c3d, align 4
  %v1_8048c3e = add i32 %v0_8048c38, 10388
  store i32 %v1_8048c3e, i32* %eax.global-to-local, align 4
  %v2_8048c45 = add i32 %v0_8048c38, -12
  %v3_8048c45 = inttoptr i32 %v2_8048c45 to i32*
  store i32 %v1_8048c3e, i32* %v3_8048c45, align 4
  %v0_8048c46 = load i32, i32* @esi, align 4
  %v1_8048c46 = add i32 %v0_8048c46, -1440
  %v2_8048c46 = inttoptr i32 %v1_8048c46 to i32*
  %v3_8048c46 = load i32, i32* %v2_8048c46, align 4
  store i32 %v3_8048c46, i32* %ecx.global-to-local, align 4
  %v2_8048c4c = add i32 %v0_8048c38, -16
  %v3_8048c4c = inttoptr i32 %v2_8048c4c to i32*
  store i32 %v3_8048c46, i32* %v3_8048c4c, align 4
  %v0_8048c4d = call i32 @function_80526c4()
  store i32 %v0_8048c4d, i32* %eax.global-to-local, align 4
  %v0_8048c52 = load i32, i32* @esp, align 4
  %v1_8048c52 = add i32 %v0_8048c52, 112
  %v2_8048c52 = inttoptr i32 %v1_8048c52 to i32*
  %v3_8048c52 = load i32, i32* %v2_8048c52, align 4
  store i32 %v3_8048c52, i32* %edx.global-to-local, align 4
  %v0_8048c56 = load i32, i32* @esi, align 4
  %v1_8048c56 = add i32 %v0_8048c56, -1440
  %v2_8048c56 = inttoptr i32 %v1_8048c56 to i32*
  %v3_8048c56 = load i32, i32* %v2_8048c56, align 4
  store i32 %v3_8048c56, i32* %eax.global-to-local, align 4
  %v2_8048c5c = add i32 %v0_8048c56, -1428
  %v3_8048c5c = inttoptr i32 %v2_8048c5c to i32*
  store i32 %v3_8048c52, i32* %v3_8048c5c, align 4
  %v0_8048c62 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8048c62, i32* %edx.global-to-local, align 4
  %v0_8048c64 = load i32, i32* @esi, align 4
  %v1_8048c64 = add i32 %v0_8048c64, -1436
  %v2_8048c64 = inttoptr i32 %v1_8048c64 to i8*
  store i8 6, i8* %v2_8048c64, align 1
  %v0_8048c6b = load i32, i32* %eax.global-to-local, align 4
  %v1_8048c6b = urem i32 %v0_8048c6b, 32
  store i32 %v1_8048c6b, i32* %eax.global-to-local, align 4
  %v0_8048c6e = load i32, i32* %edx.global-to-local, align 4
  %v2_8048c6e = udiv i32 %v0_8048c6e, 32
  store i32 %v2_8048c6e, i32* %edx.global-to-local, align 4
  %v0_8048c71 = load i32, i32* @esp, align 4
  %v2_8048c71 = mul nuw nsw i32 %v2_8048c6e, 4
  %v3_8048c71 = add nuw nsw i32 %v2_8048c71, 20772
  %v4_8048c71 = add i32 %v3_8048c71, %v0_8048c71
  %v5_8048c71 = inttoptr i32 %v4_8048c71 to i32*
  %v6_8048c71 = load i32, i32* %v5_8048c71, align 4
  %v9_8048c71 = shl i32 1, %v1_8048c6b
  %v12_8048c71 = or i32 %v6_8048c71, %v9_8048c71
  %v16_8048c71 = add i32 %v0_8048c71, 20772
  %v17_8048c71 = add i32 %v16_8048c71, %v2_8048c71
  %v18_8048c71 = inttoptr i32 %v17_8048c71 to i32*
  store i32 %v12_8048c71, i32* %v18_8048c71, align 4
  %v0_8048c79 = load i32, i32* @esp, align 4
  %v1_8048c79 = add i32 %v0_8048c79, 32
  %v0_8048c7c = load i32, i32* @esi, align 4
  %v1_8048c7c = add i32 %v0_8048c7c, -1440
  %v2_8048c7c = inttoptr i32 %v1_8048c7c to i32*
  %v3_8048c7c = load i32, i32* %v2_8048c7c, align 4
  store i32 %v3_8048c7c, i32* %eax.global-to-local, align 4
  %v1_8048c82 = add i32 %v0_8048c79, 104
  %v2_8048c82 = inttoptr i32 %v1_8048c82 to i32*
  %v3_8048c82 = load i32, i32* %v2_8048c82, align 4
  %v5_8048c82 = sub i32 %v3_8048c82, %v3_8048c7c
  %v11_8048c82 = xor i32 %v3_8048c82, %v3_8048c7c
  %v12_8048c82 = xor i32 %v5_8048c82, %v3_8048c82
  %v13_8048c82 = and i32 %v12_8048c82, %v11_8048c82
  %v14_8048c82 = icmp slt i32 %v13_8048c82, 0
  %v15_8048c82 = icmp eq i32 %v5_8048c82, 0
  store i1 %v15_8048c82, i1* %zf.global-to-local, align 1
  %v16_8048c82 = icmp slt i32 %v5_8048c82, 0
  %v2_8048c86 = icmp eq i1 %v16_8048c82, %v14_8048c82
  br i1 %v2_8048c86, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_8048c91:                             ; preds = %dec_label_pc_80486ee
  store i8 0, i8* %v2_80485a5, align 1
  br label %dec_label_pc_80485be

dec_label_pc_8048c9d:                             ; preds = %dec_label_pc_8048537
  %v0_8048c9d = load i32, i32* @esp, align 4
  %v1_8048c9d = add i32 %v0_8048c9d, 80
  %v2_8048c9d = inttoptr i32 %v1_8048c9d to i32*
  %v3_8048c9d = load i32, i32* %v2_8048c9d, align 4
  store i32 %v3_8048c9d, i32* %eax.global-to-local, align 4
  %v1_8048ca1 = add i32 %v0_80485a5, -1432
  %v2_8048ca1 = inttoptr i32 %v1_8048ca1 to i32*
  %v3_8048ca1 = load i32, i32* %v2_8048ca1, align 4
  store i32 %v3_8048ca1, i32* @ebx, align 4
  %v2_8048ca7 = sub i32 %v3_8048c9d, %v3_8048ca1
  store i32 %v2_8048ca7, i32* %eax.global-to-local, align 4
  %v9_8048ca9 = icmp eq i32 %v2_8048ca7, 30
  store i1 %v9_8048ca9, i1* %zf.global-to-local, align 1
  %tmp240 = icmp ult i32 %v2_8048ca7, 31
  br i1 %tmp240, label %dec_label_pc_8048cb2, label %dec_label_pc_804855f

dec_label_pc_8048cb2:                             ; preds = %dec_label_pc_8048c9d
  %v1_8048cb2 = add i32 %v0_80485a5, -1440
  %v2_8048cb2 = inttoptr i32 %v1_8048cb2 to i32*
  %v3_8048cb2 = load i32, i32* %v2_8048cb2, align 4
  %v1_8048cba = urem i32 %v3_8048cb2, 32
  store i32 %v1_8048cba, i32* %eax.global-to-local, align 4
  %v2_8048cbd = udiv i32 %v3_8048cb2, 32
  store i32 %v2_8048cbd, i32* %edx.global-to-local, align 4
  %v2_8048cc0 = mul nuw nsw i32 %v2_8048cbd, 4
  %v3_8048cc0 = add i32 %v0_8048c9d, 20612
  %v4_8048cc0 = add i32 %v3_8048cc0, %v2_8048cc0
  %v5_8048cc0 = inttoptr i32 %v4_8048cc0 to i32*
  %v6_8048cc0 = load i32, i32* %v5_8048cc0, align 4
  %v9_8048cc0 = shl i32 1, %v1_8048cba
  %v12_8048cc0 = or i32 %v6_8048cc0, %v9_8048cc0
  store i32 %v12_8048cc0, i32* %v5_8048cc0, align 4
  %v0_8048cc8 = load i32, i32* @esi, align 4
  %v1_8048cc8 = add i32 %v0_8048cc8, -1440
  %v2_8048cc8 = inttoptr i32 %v1_8048cc8 to i32*
  %v3_8048cc8 = load i32, i32* %v2_8048cc8, align 4
  store i32 %v3_8048cc8, i32* %eax.global-to-local, align 4
  %v0_8048cce = load i32, i32* @esp, align 4
  %v1_8048cce = add i32 %v0_8048cce, 72
  %v2_8048cce = inttoptr i32 %v1_8048cce to i32*
  %v3_8048cce = load i32, i32* %v2_8048cce, align 4
  %v5_8048cce = sub i32 %v3_8048cce, %v3_8048cc8
  %v11_8048cce = xor i32 %v3_8048cce, %v3_8048cc8
  %v12_8048cce = xor i32 %v5_8048cce, %v3_8048cce
  %v13_8048cce = and i32 %v12_8048cce, %v11_8048cce
  %v14_8048cce = icmp slt i32 %v13_8048cce, 0
  %v15_8048cce = icmp eq i32 %v5_8048cce, 0
  store i1 %v15_8048cce, i1* %zf.global-to-local, align 1
  %v16_8048cce = icmp slt i32 %v5_8048cce, 0
  %v2_8048cd2 = icmp eq i1 %v16_8048cce, %v14_8048cce
  br i1 %v2_8048cd2, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_8048cdd:                             ; preds = %dec_label_pc_8048582
  %v1_8048cdd = add i32 %v0_8048597, 72
  %v2_8048cdd = inttoptr i32 %v1_8048cdd to i32*
  %v3_8048cdd = load i32, i32* %v2_8048cdd, align 4
  store i32 %v3_8048cdd, i32* %eax.global-to-local, align 4
  %v1_8048ce1 = icmp eq i32 %v3_8048cdd, 0
  store i1 %v1_8048ce1, i1* %zf.global-to-local, align 1
  br i1 %v1_8048ce1, label %dec_label_pc_80484e5, label %dec_label_pc_8048ce9

dec_label_pc_8048ce9:                             ; preds = %dec_label_pc_8048cdd
  %v1_8048ce9 = add i32 %v0_8048597, 20888
  %v2_8048ce9 = inttoptr i32 %v1_8048ce9 to i32*
  store i32 0, i32* %v2_8048ce9, align 4
  %v0_8048cf4 = load i32, i32* @esp, align 4
  %v1_8048cf4 = add i32 %v0_8048cf4, 20884
  %v2_8048cf4 = inttoptr i32 %v1_8048cf4 to i32*
  store i32 1, i32* %v2_8048cf4, align 4
  %v0_8048cff = load i32, i32* @esp, align 4
  %v9_8048cff = icmp eq i32 %v0_8048cff, 12
  store i1 %v9_8048cff, i1* %zf.global-to-local, align 1
  %v1_8048d02 = add i32 %v0_8048cff, 20884
  store i32 %v1_8048d02, i32* %eax.global-to-local, align 4
  %v2_8048d09 = add i32 %v0_8048cff, -16
  %v3_8048d09 = inttoptr i32 %v2_8048d09 to i32*
  store i32 %v1_8048d02, i32* %v3_8048d09, align 4
  %v1_8048d0a = add i32 %v0_8048cff, -20
  %v2_8048d0a = inttoptr i32 %v1_8048d0a to i32*
  store i32 0, i32* %v2_8048d0a, align 4
  %v1_8048d0c = add i32 %v0_8048cff, 20612
  store i32 %v1_8048d0c, i32* %edx.global-to-local, align 4
  %v2_8048d13 = add i32 %v0_8048cff, -24
  %v3_8048d13 = inttoptr i32 %v2_8048d13 to i32*
  store i32 %v1_8048d0c, i32* %v3_8048d13, align 4
  %v1_8048d14 = add i32 %v0_8048cff, 20740
  store i32 %v1_8048d14, i32* %ecx.global-to-local, align 4
  %v2_8048d1b = add i32 %v0_8048cff, -28
  %v3_8048d1b = inttoptr i32 %v2_8048d1b to i32*
  store i32 %v1_8048d14, i32* %v3_8048d1b, align 4
  %v1_8048d1c = add i32 %v0_8048cff, 72
  %v2_8048d1c = inttoptr i32 %v1_8048d1c to i32*
  %v3_8048d1c = load i32, i32* %v2_8048d1c, align 4
  store i32 %v3_8048d1c, i32* %eax.global-to-local, align 4
  %v2_8048d20 = add i32 %v0_8048cff, -32
  %v3_8048d20 = inttoptr i32 %v2_8048d20 to i32*
  store i32 %v3_8048d1c, i32* %v3_8048d20, align 4
  %v0_8048d21 = call i32 @function_8052188()
  store i32 %v0_8048d21, i32* %eax.global-to-local, align 4
  %v0_8048d26 = load i32, i32* @esp, align 4
  %v9_8048d26 = icmp eq i32 %v0_8048d26, -20
  store i1 %v9_8048d26, i1* %zf.global-to-local, align 1
  store i32 %v0_8048d21, i32* @ebx, align 4
  %v1_8048d2b = add i32 %v0_8048d26, 16
  %v2_8048d2b = inttoptr i32 %v1_8048d2b to i32*
  store i32 0, i32* %v2_8048d2b, align 4
  %v0_8048d2d = call i32 @function_8052242()
  store i32 %v0_8048d2d, i32* %eax.global-to-local, align 4
  %v1_8048d32 = load i32, i32* @esp, align 4
  %v2_8048d32 = add i32 %v1_8048d32, 132
  %v3_8048d32 = inttoptr i32 %v2_8048d32 to i32*
  store i32 %v0_8048d2d, i32* %v3_8048d32, align 4
  %v0_8048d39 = load i32, i32* @esp, align 4
  %v1_8048d39 = add i32 %v0_8048d39, 16
  %v0_8048d3c = load i32, i32* @ebx, align 4
  %v1_8048d3c = icmp eq i32 %v0_8048d3c, 0
  store i1 %v1_8048d3c, i1* %zf.global-to-local, align 1
  %tmp142 = icmp slt i32 %v0_8048d3c, 1
  br i1 %tmp142, label %dec_label_pc_80484e5, label %dec_label_pc_8048d44

dec_label_pc_8048d44:                             ; preds = %dec_label_pc_8048ce9
  %v1_8048d44 = add i32 %v0_8048d39, 48
  %v2_8048d44 = inttoptr i32 %v1_8048d44 to i32*
  %v3_8048d44 = load i32, i32* %v2_8048d44, align 4
  store i32 %v3_8048d44, i32* %eax.global-to-local, align 4
  %v1_8048d48 = add i32 %v0_8048d39, 60
  %v2_8048d48 = inttoptr i32 %v1_8048d48 to i32*
  store i32 0, i32* %v2_8048d48, align 4
  %v0_8048d50 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8048d50, i32* %edx.global-to-local, align 4
  %v1_8048d52 = load i32, i32* @esp, align 4
  %v2_8048d52 = add i32 %v1_8048d52, 92
  %v3_8048d52 = inttoptr i32 %v2_8048d52 to i32*
  store i32 %v0_8048d50, i32* %v3_8048d52, align 4
  %v0_8048db9.pre = load i32, i32* @esp, align 4
  %v0_8048dbd.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8048db9

dec_label_pc_8048d58:                             ; preds = %dec_label_pc_8048dd2, %dec_label_pc_8048e2e
  %v1_8048e7a = phi i32 [ %v0_8048ddc, %dec_label_pc_8048dd2 ], [ %v0_8048d60.pre, %dec_label_pc_8048e2e ]
  %v0_8048d58 = phi i32 [ %v3_8048dc7, %dec_label_pc_8048dd2 ], [ %v0_8048d58.pre, %dec_label_pc_8048e2e ]
  %v2_8048d5a = udiv i32 %v0_8048d58, 32
  store i32 %v2_8048d5a, i32* %ecx.global-to-local, align 4
  %v1_8048d5d = urem i32 %v0_8048d58, 32
  store i32 %v1_8048d5d, i32* %eax.global-to-local, align 4
  %v2_8048d60 = mul nuw nsw i32 %v2_8048d5a, 4
  %v3_8048d60 = add i32 %v1_8048e7a, 20740
  %v4_8048d60 = add i32 %v3_8048d60, %v2_8048d60
  %v5_8048d60 = inttoptr i32 %v4_8048d60 to i32*
  %v6_8048d60 = load i32, i32* %v5_8048d60, align 4
  %v9_8048d60 = shl i32 1, %v1_8048d5d
  %v10_8048d60 = and i32 %v6_8048d60, %v9_8048d60
  %v11_8048d60 = icmp ne i32 %v10_8048d60, 0
  %v1_8048d68 = zext i1 %v11_8048d60 to i32
  store i32 %v1_8048d68, i32* %eax.global-to-local, align 4
  %v4_8048d6b = icmp eq i1 %v11_8048d60, false
  store i1 %v4_8048d6b, i1* %zf.global-to-local, align 1
  br i1 %v4_8048d6b, label %dec_label_pc_8048d91, label %dec_label_pc_8048d6f

dec_label_pc_8048d6f:                             ; preds = %dec_label_pc_8048d58
  %v1_8048d6f = add i32 %v1_8048e7a, 92
  %v2_8048d6f = inttoptr i32 %v1_8048d6f to i32*
  %v3_8048d6f = load i32, i32* %v2_8048d6f, align 4
  store i32 %v3_8048d6f, i32* %edx.global-to-local, align 4
  %v1_8048d73 = add i32 %v3_8048d6f, -1448
  %v2_8048d73 = inttoptr i32 %v1_8048d73 to i8*
  %v3_8048d73 = load i8, i8* %v2_8048d73, align 1
  %v4_8048d73 = zext i8 %v3_8048d73 to i32
  store i32 %v4_8048d73, i32* @eax, align 4
  %v10_8048d79 = icmp eq i8 %v3_8048d73, 6
  store i1 %v10_8048d79, i1* %zf.global-to-local, align 1
  br i1 %v10_8048d79, label %dec_label_pc_8048e7a, label %dec_label_pc_8048d81

dec_label_pc_8048d81:                             ; preds = %dec_label_pc_8048d6f
  %v10_8048d81 = icmp eq i8 %v3_8048d73, 7
  store i1 %v10_8048d81, i1* %zf.global-to-local, align 1
  br i1 %v10_8048d81, label %dec_label_pc_80494af, label %dec_label_pc_8048d89

dec_label_pc_8048d89:                             ; preds = %dec_label_pc_8048d81
  %v10_8048d89 = icmp eq i8 %v3_8048d73, 10
  store i1 %v10_8048d89, i1* %zf.global-to-local, align 1
  br i1 %v10_8048d89, label %dec_label_pc_80497b3, label %dec_label_pc_8048d91

dec_label_pc_8048d91:                             ; preds = %dec_label_pc_80495e0, %dec_label_pc_8049b0f, %dec_label_pc_8049c31, %dec_label_pc_8049ae5, %dec_label_pc_8048d89, %dec_label_pc_8048d58, %dec_label_pc_8048db9, %dec_label_pc_8049e5a, %dec_label_pc_8049c42, %dec_label_pc_8049af8, %dec_label_pc_8049abf, %dec_label_pc_8049a49, %dec_label_pc_80497f9, %dec_label_pc_804949f, %dec_label_pc_8048e4a, %dec_label_pc_80496c3
  %v0_8048d91 = load i32, i32* @esp, align 4
  %v1_8048d91 = add i32 %v0_8048d91, 44
  %v2_8048d91 = inttoptr i32 %v1_8048d91 to i32*
  %v3_8048d91 = load i32, i32* %v2_8048d91, align 4
  store i32 %v3_8048d91, i32* %edx.global-to-local, align 4
  %v1_8048d95 = add i32 %v0_8048d91, 92
  %v2_8048d95 = inttoptr i32 %v1_8048d95 to i32*
  %v3_8048d95 = load i32, i32* %v2_8048d95, align 4
  %v1_8048d99 = add i32 %v3_8048d95, 3140
  store i32 %v1_8048d99, i32* %eax.global-to-local, align 4
  %v1_8048d9e = add i32 %v3_8048d91, 1
  store i32 %v1_8048d9e, i32* %edx.global-to-local, align 4
  store i32 %v1_8048d9e, i32* %v2_8048d91, align 4
  %v0_8048da3 = load i32, i32* %eax.global-to-local, align 4
  %v1_8048da3 = load i32, i32* @esp, align 4
  %v2_8048da3 = add i32 %v1_8048da3, 92
  %v3_8048da3 = inttoptr i32 %v2_8048da3 to i32*
  store i32 %v0_8048da3, i32* %v3_8048da3, align 4
  %v0_8048da7 = load i32, i32* @esp, align 4
  %v1_8048da7 = add i32 %v0_8048da7, 112
  %v2_8048da7 = inttoptr i32 %v1_8048da7 to i32*
  %v3_8048da7 = load i32, i32* %v2_8048da7, align 4
  store i32 %v3_8048da7, i32* %eax.global-to-local, align 4
  %v1_8048dab = add i32 %v0_8048da7, 44
  %v2_8048dab = inttoptr i32 %v1_8048dab to i32*
  %v3_8048dab = load i32, i32* %v2_8048dab, align 4
  %v15_8048dab = icmp eq i32 %v3_8048dab, %v3_8048da7
  store i1 %v15_8048dab, i1* %zf.global-to-local, align 1
  br i1 %v15_8048dab, label %dec_label_pc_80484e5, label %dec_label_pc_8048db5

dec_label_pc_8048db5:                             ; preds = %dec_label_pc_8048d91
  %v1_8048db5 = add i32 %v0_8048da7, 92
  %v2_8048db5 = inttoptr i32 %v1_8048db5 to i32*
  %v3_8048db5 = load i32, i32* %v2_8048db5, align 4
  store i32 %v3_8048db5, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8048db9

dec_label_pc_8048db9:                             ; preds = %dec_label_pc_8048d44, %dec_label_pc_8048db5
  %v0_8048dbd = phi i32 [ %v0_8048dbd.pre, %dec_label_pc_8048d44 ], [ %v3_8048db5, %dec_label_pc_8048db5 ]
  %v1_8048dc3 = phi i32 [ %v0_8048db9.pre, %dec_label_pc_8048d44 ], [ %v0_8048da7, %dec_label_pc_8048db5 ]
  %v1_8048db9 = add i32 %v1_8048dc3, 92
  %v2_8048db9 = inttoptr i32 %v1_8048db9 to i32*
  %v3_8048db9 = load i32, i32* %v2_8048db9, align 4
  store i32 %v3_8048db9, i32* %eax.global-to-local, align 4
  %v1_8048dbd = add i32 %v0_8048dbd, -1452
  store i32 %v1_8048dbd, i32* %edx.global-to-local, align 4
  %v2_8048dc3 = add i32 %v1_8048dc3, 76
  %v3_8048dc3 = inttoptr i32 %v2_8048dc3 to i32*
  store i32 %v1_8048dbd, i32* %v3_8048dc3, align 4
  %v0_8048dc7 = load i32, i32* %eax.global-to-local, align 4
  %v1_8048dc7 = add i32 %v0_8048dc7, -1452
  %v2_8048dc7 = inttoptr i32 %v1_8048dc7 to i32*
  %v3_8048dc7 = load i32, i32* %v2_8048dc7, align 4
  store i32 %v3_8048dc7, i32* %ecx.global-to-local, align 4
  %v10_8048dcd = icmp eq i32 %v3_8048dc7, -1
  store i1 %v10_8048dcd, i1* %zf.global-to-local, align 1
  br i1 %v10_8048dcd, label %dec_label_pc_8048d91, label %dec_label_pc_8048dd2

dec_label_pc_8048dd2:                             ; preds = %dec_label_pc_8048db9
  %v2_8048dd6 = udiv i32 %v3_8048dc7, 32
  store i32 %v2_8048dd6, i32* %edx.global-to-local, align 4
  %v1_8048dd9 = urem i32 %v3_8048dc7, 32
  store i32 %v1_8048dd9, i32* %eax.global-to-local, align 4
  %v0_8048ddc = load i32, i32* @esp, align 4
  %v2_8048ddc = mul nuw nsw i32 %v2_8048dd6, 4
  %v3_8048ddc = add nuw nsw i32 %v2_8048ddc, 20612
  %v4_8048ddc = add i32 %v3_8048ddc, %v0_8048ddc
  %v5_8048ddc = inttoptr i32 %v4_8048ddc to i32*
  %v6_8048ddc = load i32, i32* %v5_8048ddc, align 4
  %v9_8048ddc = shl i32 1, %v1_8048dd9
  %v10_8048ddc = and i32 %v6_8048ddc, %v9_8048ddc
  %v11_8048ddc = icmp ne i32 %v10_8048ddc, 0
  %v1_8048de4 = zext i1 %v11_8048ddc to i32
  store i32 %v1_8048de4, i32* %eax.global-to-local, align 4
  %v4_8048de7 = icmp eq i1 %v11_8048ddc, false
  store i1 %v4_8048de7, i1* %zf.global-to-local, align 1
  br i1 %v4_8048de7, label %dec_label_pc_8048d58, label %dec_label_pc_8048def

dec_label_pc_8048def:                             ; preds = %dec_label_pc_8048dd2
  %v1_8048def = add i32 %v0_8048ddc, 20896
  %v2_8048def = inttoptr i32 %v1_8048def to i32*
  store i32 0, i32* %v2_8048def, align 4
  %v0_8048dfa = load i32, i32* @esp, align 4
  %v1_8048dfa = add i32 %v0_8048dfa, 20892
  %v2_8048dfa = inttoptr i32 %v1_8048dfa to i32*
  store i32 4, i32* %v2_8048dfa, align 4
  %v0_8048e05 = load i32, i32* @esp, align 4
  %v9_8048e05 = icmp eq i32 %v0_8048e05, 12
  store i1 %v9_8048e05, i1* %zf.global-to-local, align 1
  %v1_8048e08 = add i32 %v0_8048e05, 20892
  store i32 %v1_8048e08, i32* %edx.global-to-local, align 4
  %v2_8048e0f = add i32 %v0_8048e05, -16
  %v3_8048e0f = inttoptr i32 %v2_8048e0f to i32*
  store i32 %v1_8048e08, i32* %v3_8048e0f, align 4
  %v1_8048e10 = add i32 %v0_8048e05, 20896
  store i32 %v1_8048e10, i32* %eax.global-to-local, align 4
  %v2_8048e17 = add i32 %v0_8048e05, -20
  %v3_8048e17 = inttoptr i32 %v2_8048e17 to i32*
  store i32 %v1_8048e10, i32* %v3_8048e17, align 4
  %v1_8048e18 = add i32 %v0_8048e05, -24
  %v2_8048e18 = inttoptr i32 %v1_8048e18 to i32*
  store i32 4, i32* %v2_8048e18, align 4
  %v1_8048e1a = add i32 %v0_8048e05, -28
  %v2_8048e1a = inttoptr i32 %v1_8048e1a to i32*
  store i32 1, i32* %v2_8048e1a, align 4
  %v0_8048e1c = load i32, i32* %ecx.global-to-local, align 4
  %v2_8048e1c = add i32 %v0_8048e05, -32
  %v3_8048e1c = inttoptr i32 %v2_8048e1c to i32*
  store i32 %v0_8048e1c, i32* %v3_8048e1c, align 4
  %v0_8048e1d = call i32 @function_80525f0()
  store i32 %v0_8048e1d, i32* %eax.global-to-local, align 4
  %v0_8048e22 = load i32, i32* @esp, align 4
  %v1_8048e22 = add i32 %v0_8048e22, 32
  %v2_8048e25 = add i32 %v0_8048e22, 20928
  %v3_8048e25 = inttoptr i32 %v2_8048e25 to i32*
  %v4_8048e25 = load i32, i32* %v3_8048e25, align 4
  %v5_8048e25 = or i32 %v4_8048e25, %v0_8048e1d
  %v6_8048e25 = icmp eq i32 %v5_8048e25, 0
  store i1 %v6_8048e25, i1* %zf.global-to-local, align 1
  store i32 %v5_8048e25, i32* %eax.global-to-local, align 4
  %v1_8048e2c = icmp eq i1 %v6_8048e25, false
  br i1 %v1_8048e2c, label %dec_label_pc_8048e4a, label %dec_label_pc_8048e2e

dec_label_pc_8048e2e:                             ; preds = %dec_label_pc_8048def
  %v1_8048e2e = add i32 %v0_8048e22, 124
  %v2_8048e2e = inttoptr i32 %v1_8048e2e to i32*
  %v3_8048e2e = load i32, i32* %v2_8048e2e, align 4
  store i32 %v3_8048e2e, i32* %edx.global-to-local, align 4
  %v1_8048e32 = add i32 %v3_8048e2e, -1452
  %v2_8048e32 = inttoptr i32 %v1_8048e32 to i32*
  %v3_8048e32 = load i32, i32* %v2_8048e32, align 4
  store i32 %v3_8048e32, i32* %ecx.global-to-local, align 4
  %v1_8048e38 = add i32 %v3_8048e2e, -1448
  %v2_8048e38 = inttoptr i32 %v1_8048e38 to i8*
  store i8 4, i8* %v2_8048e38, align 1
  %v0_8048d58.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_8048d60.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048d58

dec_label_pc_8048e44:                             ; preds = %dec_label_pc_80494dc
  %v0_8048e44 = load i32, i32* @edi, align 4
  %v1_8048e44 = inttoptr i32 %v0_8048e44 to i32*
  store i32 104, i32* %v1_8048e44, align 4
  %v0_8048e4a.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048e4a

dec_label_pc_8048e4a:                             ; preds = %dec_label_pc_8049b0f, %dec_label_pc_8048e7a, %dec_label_pc_8048def, %dec_label_pc_8048e44
  %v0_8048e4a = phi i32 [ %v1_804950d, %dec_label_pc_8049b0f ], [ %v1_8048eb7, %dec_label_pc_8048e7a ], [ %v1_8048e22, %dec_label_pc_8048def ], [ %v0_8048e4a.pre, %dec_label_pc_8048e44 ]
  %v9_8048e4a = icmp eq i32 %v0_8048e4a, 12
  store i1 %v9_8048e4a, i1* %zf.global-to-local, align 1
  %v1_8048e4d = add i32 %v0_8048e4a, 92
  %v2_8048e4d = inttoptr i32 %v1_8048e4d to i32*
  %v3_8048e4d = load i32, i32* %v2_8048e4d, align 4
  store i32 %v3_8048e4d, i32* %ecx.global-to-local, align 4
  %v1_8048e51 = add i32 %v3_8048e4d, -1452
  %v2_8048e51 = inttoptr i32 %v1_8048e51 to i32*
  %v3_8048e51 = load i32, i32* %v2_8048e51, align 4
  store i32 %v3_8048e51, i32* @ebx, align 4
  %v2_8048e57 = add i32 %v0_8048e4a, -16
  %v3_8048e57 = inttoptr i32 %v2_8048e57 to i32*
  store i32 %v3_8048e51, i32* %v3_8048e57, align 4
  %v1_8048e58 = call i32 @function_8051f81(i32 %stack_var_-20924.0.ph)
  store i32 %v1_8048e58, i32* %eax.global-to-local, align 4
  %v0_8048e5d = load i32, i32* @esp, align 4
  %v1_8048e5d = add i32 %v0_8048e5d, 108
  %v2_8048e5d = inttoptr i32 %v1_8048e5d to i32*
  %v3_8048e5d = load i32, i32* %v2_8048e5d, align 4
  store i32 %v3_8048e5d, i32* %eax.global-to-local, align 4
  %v6_8048e61 = icmp eq i32 %v0_8048e5d, -16
  store i1 %v6_8048e61, i1* %zf.global-to-local, align 1
  %v1_8048e64 = add i32 %v3_8048e5d, -1452
  %v2_8048e64 = inttoptr i32 %v1_8048e64 to i32*
  store i32 -1, i32* %v2_8048e64, align 4
  %v0_8048e6e = load i32, i32* %eax.global-to-local, align 4
  %v1_8048e6e = add i32 %v0_8048e6e, -1448
  %v2_8048e6e = inttoptr i32 %v1_8048e6e to i8*
  store i8 0, i8* %v2_8048e6e, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8048e7a:                             ; preds = %dec_label_pc_8048d6f
  %v2_8048e7a = add i32 %v1_8048e7a, -4
  %v3_8048e7a = inttoptr i32 %v2_8048e7a to i32*
  store i32 %v4_8048d73, i32* %v3_8048e7a, align 4
  %v0_8048e7b = load i32, i32* @eax, align 4
  %v2_8048e7b = add i32 %v1_8048e7a, -8
  %v3_8048e7b = inttoptr i32 %v2_8048e7b to i32*
  store i32 %v0_8048e7b, i32* %v3_8048e7b, align 4
  %v1_8048e7c = add i32 %v1_8048e7a, -12
  %v2_8048e7c = inttoptr i32 %v1_8048e7c to i32*
  store i32 10240, i32* %v2_8048e7c, align 4
  %v1_8048e81 = add i32 %v1_8048e7a, 131
  store i32 %v1_8048e81, i32* %ecx.global-to-local, align 4
  %v2_8048e88 = add i32 %v1_8048e7a, -16
  %v3_8048e88 = inttoptr i32 %v2_8048e88 to i32*
  store i32 %v1_8048e81, i32* %v3_8048e88, align 4
  %v2_8048e89 = call i32 @function_8051a70(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  %v0_8048e8e = load i32, i32* @esp, align 4
  %v1_8048e8e = add i32 %v0_8048e8e, -4
  %v2_8048e8e = inttoptr i32 %v1_8048e8e to i32*
  store i32 16386, i32* %v2_8048e8e, align 4
  %v1_8048e93 = add i32 %v0_8048e8e, -8
  %v2_8048e93 = inttoptr i32 %v1_8048e93 to i32*
  store i32 10240, i32* %v2_8048e93, align 4
  %v1_8048e98 = add i32 %v0_8048e8e, 147
  store i32 %v1_8048e98, i32* %eax.global-to-local, align 4
  %v2_8048e9f = add i32 %v0_8048e8e, -12
  %v3_8048e9f = inttoptr i32 %v2_8048e9f to i32*
  store i32 %v1_8048e98, i32* %v3_8048e9f, align 4
  %v1_8048ea0 = add i32 %v0_8048e8e, 108
  %v2_8048ea0 = inttoptr i32 %v1_8048ea0 to i32*
  %v3_8048ea0 = load i32, i32* %v2_8048ea0, align 4
  store i32 %v3_8048ea0, i32* %edx.global-to-local, align 4
  %v1_8048ea4 = add i32 %v3_8048ea0, -1452
  %v2_8048ea4 = inttoptr i32 %v1_8048ea4 to i32*
  %v3_8048ea4 = load i32, i32* %v2_8048ea4, align 4
  store i32 %v3_8048ea4, i32* %eax.global-to-local, align 4
  %v2_8048eaa = add i32 %v0_8048e8e, -16
  %v3_8048eaa = inttoptr i32 %v2_8048eaa to i32*
  store i32 %v3_8048ea4, i32* %v3_8048eaa, align 4
  %v0_8048eab = call i32 @function_805264e()
  store i32 %v0_8048eab, i32* %eax.global-to-local, align 4
  %v1_8048eb0 = load i32, i32* @esp, align 4
  %v2_8048eb0 = add i32 %v1_8048eb0, 136
  %v3_8048eb0 = inttoptr i32 %v2_8048eb0 to i32*
  store i32 %v0_8048eab, i32* %v3_8048eb0, align 4
  %v0_8048eb7 = load i32, i32* @esp, align 4
  %v1_8048eb7 = add i32 %v0_8048eb7, 32
  %v1_8048eba = icmp eq i32 %v0_8048eab, 0
  store i1 %v1_8048eba, i1* %zf.global-to-local, align 1
  %tmp143 = icmp slt i32 %v0_8048eab, 1
  br i1 %tmp143, label %dec_label_pc_8048e4a, label %dec_label_pc_8048ebe

dec_label_pc_8048ebe:                             ; preds = %dec_label_pc_8048e7a
  %v1_8048ebe = add i32 %v0_8048eb7, 28
  %v2_8048ebe = inttoptr i32 %v1_8048ebe to i32*
  store i32 4, i32* %v2_8048ebe, align 4
  %v1_8048ec0 = add i32 %v0_8048eb7, 24
  %v2_8048ec0 = inttoptr i32 %v1_8048ec0 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_80548a4.13 to i32), i32* %v2_8048ec0, align 4
  %v1_8048ec5 = add i32 %v0_8048eb7, 136
  %v2_8048ec5 = inttoptr i32 %v1_8048ec5 to i32*
  %v3_8048ec5 = load i32, i32* %v2_8048ec5, align 4
  store i32 %v3_8048ec5, i32* %eax.global-to-local, align 4
  %v2_8048ec9 = add i32 %v0_8048eb7, 20
  %v3_8048ec9 = inttoptr i32 %v2_8048ec9 to i32*
  store i32 %v3_8048ec5, i32* %v3_8048ec9, align 4
  %v1_8048eca = add i32 %v0_8048eb7, 163
  store i32 %v1_8048eca, i32* %edx.global-to-local, align 4
  %v2_8048ed1 = add i32 %v0_8048eb7, 16
  %v3_8048ed1 = inttoptr i32 %v2_8048ed1 to i32*
  store i32 %v1_8048eca, i32* %v3_8048ed1, align 4
  %v0_8048ed2 = call i32 @function_8051a90()
  %v0_8048ed7 = load i32, i32* @esp, align 4
  %v1_8048eda = add i32 %v0_8048ed2, 1
  %v8_8048eda = icmp eq i32 %v1_8048eda, 0
  store i1 %v8_8048eda, i1* %zf.global-to-local, align 1
  store i32 %v1_8048eda, i32* %eax.global-to-local, align 4
  %v1_8049ae5 = add i32 %v0_8048ed7, 120
  %v2_8049ae5 = inttoptr i32 %v1_8049ae5 to i32*
  br i1 %v8_8048eda, label %dec_label_pc_8049ae5, label %dec_label_pc_8048ee1

dec_label_pc_8048ee1:                             ; preds = %dec_label_pc_8048ebe, %dec_label_pc_8049ae5
  %v1_8048ee1 = add i32 %v0_8048ed7, 12
  %v2_8048ee1 = inttoptr i32 %v1_8048ee1 to i32*
  store i32 4, i32* %v2_8048ee1, align 4
  %v1_8048ee3 = add i32 %v0_8048ed7, 8
  %v2_8048ee3 = inttoptr i32 %v1_8048ee3 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_80548a4.13 to i32), i32* %v2_8048ee3, align 4
  %v3_8048ee8 = load i32, i32* %v2_8049ae5, align 4
  %v2_8048eec = add i32 %v0_8048ed7, 4
  %v3_8048eec = inttoptr i32 %v2_8048eec to i32*
  store i32 %v3_8048ee8, i32* %v3_8048eec, align 4
  %v1_8048eed = add i32 %v0_8048ed7, 147
  store i32 %v1_8048eed, i32* %ecx.global-to-local, align 4
  %v3_8048ef4 = inttoptr i32 %v0_8048ed7 to i32*
  store i32 %v1_8048eed, i32* %v3_8048ef4, align 4
  %v0_8048ef5 = call i32 @function_8051a90()
  store i32 %v0_8048ef5, i32* %eax.global-to-local, align 4
  %v0_8048efa = load i32, i32* @esp, align 4
  %v2_8048efa = add i32 %v0_8048ef5, 147
  %v3_8048efa = add i32 %v2_8048efa, %v0_8048efa
  %v4_8048efa = inttoptr i32 %v3_8048efa to i8*
  store i8 0, i8* %v4_8048efa, align 1
  %v0_8048f02 = load i32, i32* @esp, align 4
  %v1_8048f02 = inttoptr i32 %v0_8048f02 to i32*
  %v3_8048f02 = add i32 %v0_8048f02, 4
  %v1_8048f03 = inttoptr i32 %v3_8048f02 to i32*
  %v2_8048f03 = load i32, i32* %v1_8048f03, align 4
  store i32 %v2_8048f03, i32* @edi, align 4
  store i32 0, i32* %v1_8048f03, align 4
  store i32 46, i32* %v1_8048f02, align 4
  %v3_8048f08 = call i32 @function_8050fe0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048f08, i32* %eax.global-to-local, align 4
  %v0_8048f0d = load i32, i32* @esp, align 4
  %v9_8048f0d = icmp eq i32 %v0_8048f0d, -12
  store i1 %v9_8048f0d, i1* %zf.global-to-local, align 1
  %v2_8048f10 = add i32 %v0_8048f0d, 8
  %v3_8048f10 = inttoptr i32 %v2_8048f10 to i32*
  store i32 %v3_8048f08, i32* %v3_8048f10, align 4
  %v1_8048f11 = add i32 %v0_8048f0d, 120
  %v2_8048f11 = inttoptr i32 %v1_8048f11 to i32*
  %v3_8048f11 = load i32, i32* %v2_8048f11, align 4
  %v2_8048f15 = add i32 %v0_8048f0d, 4
  %v3_8048f15 = inttoptr i32 %v2_8048f15 to i32*
  store i32 %v3_8048f11, i32* %v3_8048f15, align 4
  %v1_8048f16 = add i32 %v0_8048f0d, 147
  store i32 %v1_8048f16, i32* %eax.global-to-local, align 4
  %v3_8048f1d = inttoptr i32 %v0_8048f0d to i32*
  store i32 %v1_8048f16, i32* %v3_8048f1d, align 4
  %v0_8048f1e = call i32 @function_8051cd0()
  %v0_8048f23 = load i32, i32* @esp, align 4
  %v1_8048f23 = add i32 %v0_8048f23, 16
  %v1_8048f26 = add i32 %v0_8048f1e, 1
  %v8_8048f26 = icmp eq i32 %v1_8048f26, 0
  store i1 %v8_8048f26, i1* %zf.global-to-local, align 1
  store i32 %v1_8048f26, i32* %eax.global-to-local, align 4
  br i1 %v8_8048f26, label %dec_label_pc_8048f33, label %dec_label_pc_8048f29

dec_label_pc_8048f29:                             ; preds = %dec_label_pc_8048ee1
  %v1_8048f29 = add i32 %v0_8048f23, 108
  %v2_8048f29 = inttoptr i32 %v1_8048f29 to i32*
  %v3_8048f29 = load i32, i32* %v2_8048f29, align 4
  store i32 %v3_8048f29, i32* %edx.global-to-local, align 4
  %v1_8048f2d = inttoptr i32 %v3_8048f29 to i32*
  store i32 2, i32* %v1_8048f2d, align 4
  %v1_8048f33.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048f33

dec_label_pc_8048f33:                             ; preds = %dec_label_pc_8048ee1, %dec_label_pc_8048f29
  %v1_8048f33 = phi i32 [ %v1_8048f23, %dec_label_pc_8048ee1 ], [ %v1_8048f33.pre, %dec_label_pc_8048f29 ]
  %v0_8048f33 = load i32, i32* @ecx, align 4
  %v2_8048f33 = add i32 %v1_8048f33, -4
  %v3_8048f33 = inttoptr i32 %v2_8048f33 to i32*
  store i32 %v0_8048f33, i32* %v3_8048f33, align 4
  %v0_8048f34 = load i32, i32* @ecx, align 4
  %v2_8048f34 = add i32 %v1_8048f33, -8
  %v3_8048f34 = inttoptr i32 %v2_8048f34 to i32*
  store i32 %v0_8048f34, i32* %v3_8048f34, align 4
  %v1_8048f35 = add i32 %v1_8048f33, -12
  %v2_8048f35 = inttoptr i32 %v1_8048f35 to i32*
  store i32 0, i32* %v2_8048f35, align 4
  %v1_8048f37 = add i32 %v1_8048f33, -16
  %v2_8048f37 = inttoptr i32 %v1_8048f37 to i32*
  store i32 45, i32* %v2_8048f37, align 4
  %v3_8048f39 = call i32 @function_8050fe0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048f39, i32* %eax.global-to-local, align 4
  %v0_8048f3e = load i32, i32* @esp, align 4
  %v9_8048f3e = icmp eq i32 %v0_8048f3e, -12
  store i1 %v9_8048f3e, i1* %zf.global-to-local, align 1
  %v2_8048f41 = add i32 %v0_8048f3e, 8
  %v3_8048f41 = inttoptr i32 %v2_8048f41 to i32*
  store i32 %v3_8048f39, i32* %v3_8048f41, align 4
  %v1_8048f42 = add i32 %v0_8048f3e, 120
  %v2_8048f42 = inttoptr i32 %v1_8048f42 to i32*
  %v3_8048f42 = load i32, i32* %v2_8048f42, align 4
  store i32 %v3_8048f42, i32* @edx, align 4
  %v2_8048f46 = add i32 %v0_8048f3e, 4
  %v3_8048f46 = inttoptr i32 %v2_8048f46 to i32*
  store i32 %v3_8048f42, i32* %v3_8048f46, align 4
  %v1_8048f47 = add i32 %v0_8048f3e, 147
  store i32 %v1_8048f47, i32* @ecx, align 4
  %v3_8048f4e = inttoptr i32 %v0_8048f3e to i32*
  store i32 %v1_8048f47, i32* %v3_8048f4e, align 4
  %v0_8048f4f = call i32 @function_8051cd0()
  %v0_8048f54 = load i32, i32* @esp, align 4
  %v1_8048f54 = add i32 %v0_8048f54, 16
  %v1_8048f57 = add i32 %v0_8048f4f, 1
  %v8_8048f57 = icmp eq i32 %v1_8048f57, 0
  store i1 %v8_8048f57, i1* %zf.global-to-local, align 1
  store i32 %v1_8048f57, i32* %eax.global-to-local, align 4
  br i1 %v8_8048f57, label %dec_label_pc_8048f64, label %dec_label_pc_8048f5a

dec_label_pc_8048f5a:                             ; preds = %dec_label_pc_8048f33
  %v1_8048f5a = add i32 %v0_8048f54, 108
  %v2_8048f5a = inttoptr i32 %v1_8048f5a to i32*
  %v3_8048f5a = load i32, i32* %v2_8048f5a, align 4
  store i32 %v3_8048f5a, i32* %eax.global-to-local, align 4
  %v1_8048f5e = inttoptr i32 %v3_8048f5a to i32*
  store i32 1, i32* %v1_8048f5e, align 4
  %v0_8048f64.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048f64

dec_label_pc_8048f64:                             ; preds = %dec_label_pc_8048f33, %dec_label_pc_8048f5a
  %v0_8048f64 = phi i32 [ %v1_8048f54, %dec_label_pc_8048f33 ], [ %v0_8048f64.pre, %dec_label_pc_8048f5a ]
  %v1_8048f64 = add i32 %v0_8048f64, 92
  %v2_8048f64 = inttoptr i32 %v1_8048f64 to i32*
  %v3_8048f64 = load i32, i32* %v2_8048f64, align 4
  store i32 %v3_8048f64, i32* %edx.global-to-local, align 4
  %v1_8048f68 = add i32 %v3_8048f64, 4
  %v2_8048f68 = inttoptr i32 %v1_8048f68 to i32*
  store i32 0, i32* %v2_8048f68, align 4
  %v0_8048f6f = load i32, i32* %eax.global-to-local, align 4
  %v1_8048f6f = load i32, i32* @esp, align 4
  %v2_8048f6f = add i32 %v1_8048f6f, -4
  %v3_8048f6f = inttoptr i32 %v2_8048f6f to i32*
  store i32 %v0_8048f6f, i32* %v3_8048f6f, align 4
  %v0_8048f70 = load i32, i32* %eax.global-to-local, align 4
  %v2_8048f70 = add i32 %v1_8048f6f, -8
  %v3_8048f70 = inttoptr i32 %v2_8048f70 to i32*
  store i32 %v0_8048f70, i32* %v3_8048f70, align 4
  %v1_8048f71 = add i32 %v1_8048f6f, -12
  %v2_8048f71 = inttoptr i32 %v1_8048f71 to i32*
  store i32 0, i32* %v2_8048f71, align 4
  %v1_8048f73 = add i32 %v1_8048f6f, -16
  %v2_8048f73 = inttoptr i32 %v1_8048f73 to i32*
  store i32 44, i32* %v2_8048f73, align 4
  %v3_8048f75 = call i32 @function_8050fe0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048f75, i32* %eax.global-to-local, align 4
  %v0_8048f7a = load i32, i32* @esp, align 4
  %v9_8048f7a = icmp eq i32 %v0_8048f7a, -12
  store i1 %v9_8048f7a, i1* %zf.global-to-local, align 1
  %v2_8048f7d = add i32 %v0_8048f7a, 8
  %v3_8048f7d = inttoptr i32 %v2_8048f7d to i32*
  store i32 %v3_8048f75, i32* %v3_8048f7d, align 4
  %v1_8048f7e = add i32 %v0_8048f7a, 120
  %v2_8048f7e = inttoptr i32 %v1_8048f7e to i32*
  %v3_8048f7e = load i32, i32* %v2_8048f7e, align 4
  store i32 %v3_8048f7e, i32* %eax.global-to-local, align 4
  %v2_8048f82 = add i32 %v0_8048f7a, 4
  %v3_8048f82 = inttoptr i32 %v2_8048f82 to i32*
  store i32 %v3_8048f7e, i32* %v3_8048f82, align 4
  %v1_8048f83 = add i32 %v0_8048f7a, 147
  store i32 %v1_8048f83, i32* @ecx, align 4
  %v3_8048f8a = inttoptr i32 %v0_8048f7a to i32*
  store i32 %v1_8048f83, i32* %v3_8048f8a, align 4
  %v0_8048f8b = call i32 @function_8051cd0()
  %v0_8048f90 = load i32, i32* @esp, align 4
  %v1_8048f90 = add i32 %v0_8048f90, 16
  %v1_8048f93 = add i32 %v0_8048f8b, 1
  %v8_8048f93 = icmp eq i32 %v1_8048f93, 0
  store i1 %v8_8048f93, i1* %zf.global-to-local, align 1
  store i32 %v1_8048f93, i32* %eax.global-to-local, align 4
  br i1 %v8_8048f93, label %dec_label_pc_8049044, label %dec_label_pc_8048f9a

dec_label_pc_8048f9a:                             ; preds = %dec_label_pc_8048f64
  %v2_8048f9a = add i32 %v0_8048f90, 12
  %v3_8048f9a = inttoptr i32 %v2_8048f9a to i32*
  store i32 %v1_8048f93, i32* %v3_8048f9a, align 4
  %v0_8048f9b = load i32, i32* %eax.global-to-local, align 4
  %v2_8048f9b = add i32 %v0_8048f90, 8
  %v3_8048f9b = inttoptr i32 %v2_8048f9b to i32*
  store i32 %v0_8048f9b, i32* %v3_8048f9b, align 4
  %v1_8048f9c = add i32 %v0_8048f90, 4
  %v2_8048f9c = inttoptr i32 %v1_8048f9c to i32*
  store i32 0, i32* %v2_8048f9c, align 4
  %v2_8048f9e = inttoptr i32 %v0_8048f90 to i32*
  store i32 44, i32* %v2_8048f9e, align 4
  %v3_8048fa0 = call i32 @function_8050fe0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048fa0, i32* %eax.global-to-local, align 4
  %v0_8048fa5 = load i32, i32* @esp, align 4
  %v9_8048fa5 = icmp eq i32 %v0_8048fa5, -12
  store i1 %v9_8048fa5, i1* %zf.global-to-local, align 1
  %v2_8048fa8 = add i32 %v0_8048fa5, 8
  %v3_8048fa8 = inttoptr i32 %v2_8048fa8 to i32*
  store i32 %v3_8048fa0, i32* %v3_8048fa8, align 4
  %v1_8048fa9 = add i32 %v0_8048fa5, 120
  %v2_8048fa9 = inttoptr i32 %v1_8048fa9 to i32*
  %v3_8048fa9 = load i32, i32* %v2_8048fa9, align 4
  %v2_8048fad = add i32 %v0_8048fa5, 4
  %v3_8048fad = inttoptr i32 %v2_8048fad to i32*
  store i32 %v3_8048fa9, i32* %v3_8048fad, align 4
  %v1_8048fae = add i32 %v0_8048fa5, 147
  store i32 %v1_8048fae, i32* %eax.global-to-local, align 4
  %v3_8048fb5 = inttoptr i32 %v0_8048fa5 to i32*
  store i32 %v1_8048fae, i32* %v3_8048fb5, align 4
  %v0_8048fb6 = call i32 @function_8051cd0()
  store i32 %v0_8048fb6, i32* %eax.global-to-local, align 4
  %v0_8048fbb = load i32, i32* @esp, align 4
  %v6_8048fbb = icmp eq i32 %v0_8048fbb, -16
  store i1 %v6_8048fbb, i1* %zf.global-to-local, align 1
  store i32 %v0_8048fb6, i32* %ebx.global-to-local, align 4
  %v2_8048fc0 = add i32 %v0_8048fb6, 147
  %v3_8048fc0 = add i32 %v2_8048fc0, %v0_8048fbb
  %v4_8048fc0 = inttoptr i32 %v3_8048fc0 to i8*
  %v5_8048fc0 = load i8, i8* %v4_8048fc0, align 1
  %v11_8048fc0 = icmp eq i8 %v5_8048fc0, 32
  %v1_8048fc8 = zext i1 %v11_8048fc0 to i32
  %v1_8048fcb = add i32 %v0_8048fbb, 147
  store i32 %v1_8048fcb, i32* %esi.global-to-local, align 4
  store i32 %v1_8048fc8, i32* %eax.global-to-local, align 4
  %v1_8048fd7 = add i32 %v0_8048fbb, 12
  %v2_8048fd7 = inttoptr i32 %v1_8048fd7 to i32*
  store i32 2, i32* %v2_8048fd7, align 4
  %v1_8048fd9 = add i32 %v0_8048fbb, 8
  %v2_8048fd9 = inttoptr i32 %v1_8048fd9 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80548a6.10 to i32), i32* %v2_8048fd9, align 4
  %v0_8048fde = load i32, i32* %ebx.global-to-local, align 4
  %v1_8048fde = load i32, i32* %eax.global-to-local, align 4
  %v2_8048fde = add i32 %v1_8048fde, %v0_8048fde
  store i32 %v2_8048fde, i32* @ebx, align 4
  %v1_8048fe0 = add i32 %v0_8048fbb, 120
  %v2_8048fe0 = inttoptr i32 %v1_8048fe0 to i32*
  %v3_8048fe0 = load i32, i32* %v2_8048fe0, align 4
  %v2_8048fe4 = sub i32 %v3_8048fe0, %v2_8048fde
  store i32 %v2_8048fe4, i32* %eax.global-to-local, align 4
  %v0_8048fe6 = load i32, i32* %esi.global-to-local, align 4
  %v2_8048fe6 = add i32 %v0_8048fe6, %v2_8048fde
  %v12_8048fe6 = icmp eq i32 %v2_8048fe6, 0
  store i1 %v12_8048fe6, i1* %zf.global-to-local, align 1
  store i32 %v2_8048fe6, i32* @esi, align 4
  %v2_8048fe8 = add i32 %v0_8048fbb, 4
  %v3_8048fe8 = inttoptr i32 %v2_8048fe8 to i32*
  store i32 %v2_8048fe4, i32* %v3_8048fe8, align 4
  %v0_8048fe9 = load i32, i32* @esi, align 4
  %v3_8048fe9 = inttoptr i32 %v0_8048fbb to i32*
  store i32 %v0_8048fe9, i32* %v3_8048fe9, align 4
  %v0_8048fea = call i32 @function_8051a90()
  store i32 %v0_8048fea, i32* %eax.global-to-local, align 4
  %v0_8048fef = load i32, i32* @esp, align 4
  %v1_8048fef = add i32 %v0_8048fef, 16
  store i32 %v0_8048fea, i32* %edx.global-to-local, align 4
  %v10_8048ff4 = icmp eq i32 %v0_8048fea, -1
  store i1 %v10_8048ff4, i1* %zf.global-to-local, align 1
  br i1 %v10_8048ff4, label %dec_label_pc_8049044, label %dec_label_pc_8048ff9

dec_label_pc_8048ff9:                             ; preds = %dec_label_pc_8048f9a
  %v10_8048ff9 = icmp eq i32 %v0_8048fea, 1
  store i1 %v10_8048ff9, i1* %zf.global-to-local, align 1
  %v7_8048ffc = icmp sgt i32 %v0_8048fea, 1
  br i1 %v7_8048ffc, label %dec_label_pc_8048ffe, label %dec_label_pc_8049001

dec_label_pc_8048ffe:                             ; preds = %dec_label_pc_8048ff9
  %v1_8048ffe = add i32 %v0_8048fea, -2
  %v9_8048ffe = icmp eq i32 %v1_8048ffe, 0
  store i1 %v9_8048ffe, i1* %zf.global-to-local, align 1
  store i32 %v1_8048ffe, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8049001

dec_label_pc_8049001:                             ; preds = %dec_label_pc_8048ff9, %dec_label_pc_8048ffe
  %v1_804900a = phi i32 [ %v0_8048fea, %dec_label_pc_8048ff9 ], [ %v1_8048ffe, %dec_label_pc_8048ffe ]
  %v1_8049001 = add i32 %v0_8048fef, 20920
  %v1_8049008 = load i32, i32* @ebx, align 4
  %v2_8049008 = add i32 %v1_8049001, %v1_8049008
  %v12_8049008 = icmp eq i32 %v2_8049008, 0
  store i1 %v12_8049008, i1* %zf.global-to-local, align 1
  store i32 %v2_8049008, i32* %eax.global-to-local, align 4
  %v2_804900a = add i32 %v1_804900a, -20773
  %v3_804900a = add i32 %v2_804900a, %v2_8049008
  %v4_804900a = inttoptr i32 %v3_804900a to i8*
  store i8 0, i8* %v4_804900a, align 1
  %v0_8049012 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049012 = load i32, i32* @esp, align 4
  %v2_8049012 = add i32 %v1_8049012, -4
  %v3_8049012 = inttoptr i32 %v2_8049012 to i32*
  store i32 %v0_8049012, i32* %v3_8049012, align 4
  %v0_8049013 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049013 = add i32 %v1_8049012, -8
  %v3_8049013 = inttoptr i32 %v2_8049013 to i32*
  store i32 %v0_8049013, i32* %v3_8049013, align 4
  %v1_8049014 = add i32 %v1_8049012, -12
  %v2_8049014 = inttoptr i32 %v1_8049014 to i32*
  store i32 0, i32* %v2_8049014, align 4
  %v1_8049016 = add i32 %v1_8049012, -16
  %v2_8049016 = inttoptr i32 %v1_8049016 to i32*
  store i32 43, i32* %v2_8049016, align 4
  %v3_8049018 = call i32 @function_8050fe0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049018, i32* %eax.global-to-local, align 4
  %v0_804901d = load i32, i32* @esi, align 4
  %v1_804901d = load i32, i32* @esp, align 4
  %v2_804901d = inttoptr i32 %v1_804901d to i32*
  store i32 %v0_804901d, i32* %v2_804901d, align 4
  store i32 %v3_8049018, i32* @ebx, align 4
  %v2_8049022 = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_8049022, i32* %eax.global-to-local, align 4
  %v0_8049027 = load i32, i32* @esp, align 4
  %v9_8049027 = icmp eq i32 %v0_8049027, -12
  store i1 %v9_8049027, i1* %zf.global-to-local, align 1
  %v0_804902a = load i32, i32* @ebx, align 4
  %v2_804902a = add i32 %v0_8049027, 8
  %v3_804902a = inttoptr i32 %v2_804902a to i32*
  store i32 %v0_804902a, i32* %v3_804902a, align 4
  %v2_804902b = add i32 %v0_8049027, 4
  %v3_804902b = inttoptr i32 %v2_804902b to i32*
  store i32 %v2_8049022, i32* %v3_804902b, align 4
  %v0_804902c = load i32, i32* @esi, align 4
  %v3_804902c = inttoptr i32 %v0_8049027 to i32*
  store i32 %v0_804902c, i32* %v3_804902c, align 4
  %v0_804902d = call i32 @function_8051cd0()
  store i32 %v0_804902d, i32* %eax.global-to-local, align 4
  %v0_8049032 = load i32, i32* @esp, align 4
  %v1_8049032 = add i32 %v0_8049032, 16
  %v1_8049035 = icmp eq i32 %v0_804902d, 0
  store i1 %v1_8049035, i1* %zf.global-to-local, align 1
  br i1 %v1_8049035, label %dec_label_pc_8049044, label %dec_label_pc_8049039

dec_label_pc_8049039:                             ; preds = %dec_label_pc_8049001
  %v1_8049039 = add i32 %v0_8049032, 108
  %v2_8049039 = inttoptr i32 %v1_8049039 to i32*
  %v3_8049039 = load i32, i32* %v2_8049039, align 4
  store i32 %v3_8049039, i32* %edx.global-to-local, align 4
  %v1_804903d = add i32 %v3_8049039, 4
  %v2_804903d = inttoptr i32 %v1_804903d to i32*
  store i32 1, i32* %v2_804903d, align 4
  %v0_8049044.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049044

dec_label_pc_8049044:                             ; preds = %dec_label_pc_8049001, %dec_label_pc_8048f9a, %dec_label_pc_8048f64, %dec_label_pc_8049039
  %v0_8049044 = phi i32 [ %v1_8049032, %dec_label_pc_8049001 ], [ %v1_8048fef, %dec_label_pc_8048f9a ], [ %v1_8048f90, %dec_label_pc_8048f64 ], [ %v0_8049044.pre, %dec_label_pc_8049039 ]
  %v1_8049044 = add i32 %v0_8049044, 92
  %v2_8049044 = inttoptr i32 %v1_8049044 to i32*
  %v3_8049044 = load i32, i32* %v2_8049044, align 4
  store i32 %v3_8049044, i32* %ecx.global-to-local, align 4
  %v1_8049048 = add i32 %v3_8049044, 8
  %v2_8049048 = inttoptr i32 %v1_8049048 to i32*
  store i32 0, i32* %v2_8049048, align 4
  %v0_804904f = load i32, i32* %eax.global-to-local, align 4
  %v1_804904f = load i32, i32* @esp, align 4
  %v2_804904f = add i32 %v1_804904f, -4
  %v3_804904f = inttoptr i32 %v2_804904f to i32*
  store i32 %v0_804904f, i32* %v3_804904f, align 4
  %v0_8049050 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049050 = add i32 %v1_804904f, -8
  %v3_8049050 = inttoptr i32 %v2_8049050 to i32*
  store i32 %v0_8049050, i32* %v3_8049050, align 4
  %v1_8049051 = add i32 %v1_804904f, -12
  %v2_8049051 = inttoptr i32 %v1_8049051 to i32*
  store i32 0, i32* %v2_8049051, align 4
  %v1_8049053 = add i32 %v1_804904f, -16
  %v2_8049053 = inttoptr i32 %v1_8049053 to i32*
  store i32 41, i32* %v2_8049053, align 4
  %v3_8049055 = call i32 @function_8050fe0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049055, i32* %eax.global-to-local, align 4
  %v0_804905a = load i32, i32* @esp, align 4
  %v9_804905a = icmp eq i32 %v0_804905a, -12
  store i1 %v9_804905a, i1* %zf.global-to-local, align 1
  %v2_804905d = add i32 %v0_804905a, 8
  %v3_804905d = inttoptr i32 %v2_804905d to i32*
  store i32 %v3_8049055, i32* %v3_804905d, align 4
  %v1_804905e = add i32 %v0_804905a, 120
  %v2_804905e = inttoptr i32 %v1_804905e to i32*
  %v3_804905e = load i32, i32* %v2_804905e, align 4
  %v2_8049062 = add i32 %v0_804905a, 4
  %v3_8049062 = inttoptr i32 %v2_8049062 to i32*
  store i32 %v3_804905e, i32* %v3_8049062, align 4
  %v1_8049063 = add i32 %v0_804905a, 147
  store i32 %v1_8049063, i32* %eax.global-to-local, align 4
  %v3_804906a = inttoptr i32 %v0_804905a to i32*
  store i32 %v1_8049063, i32* %v3_804906a, align 4
  %v0_804906b = call i32 @function_8051cd0()
  %v0_8049070 = load i32, i32* @esp, align 4
  %v1_8049070 = add i32 %v0_8049070, 16
  %v1_8049073 = add i32 %v0_804906b, 1
  %v8_8049073 = icmp eq i32 %v1_8049073, 0
  store i1 %v8_8049073, i1* %zf.global-to-local, align 1
  store i32 %v1_8049073, i32* %eax.global-to-local, align 4
  br i1 %v8_8049073, label %dec_label_pc_8049124, label %dec_label_pc_804907a

dec_label_pc_804907a:                             ; preds = %dec_label_pc_8049044
  %v0_804907a = load i32, i32* @edi, align 4
  %v2_804907a = add i32 %v0_8049070, 12
  %v3_804907a = inttoptr i32 %v2_804907a to i32*
  store i32 %v0_804907a, i32* %v3_804907a, align 4
  %v0_804907b = load i32, i32* @edi, align 4
  %v2_804907b = add i32 %v0_8049070, 8
  %v3_804907b = inttoptr i32 %v2_804907b to i32*
  store i32 %v0_804907b, i32* %v3_804907b, align 4
  %v1_804907c = add i32 %v0_8049070, 4
  %v2_804907c = inttoptr i32 %v1_804907c to i32*
  store i32 0, i32* %v2_804907c, align 4
  %v2_804907e = inttoptr i32 %v0_8049070 to i32*
  store i32 41, i32* %v2_804907e, align 4
  %v3_8049080 = call i32 @function_8050fe0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049080, i32* %eax.global-to-local, align 4
  %v0_8049085 = load i32, i32* @esp, align 4
  %v9_8049085 = icmp eq i32 %v0_8049085, -12
  store i1 %v9_8049085, i1* %zf.global-to-local, align 1
  %v2_8049088 = add i32 %v0_8049085, 8
  %v3_8049088 = inttoptr i32 %v2_8049088 to i32*
  store i32 %v3_8049080, i32* %v3_8049088, align 4
  %v1_8049089 = add i32 %v0_8049085, 120
  %v2_8049089 = inttoptr i32 %v1_8049089 to i32*
  %v3_8049089 = load i32, i32* %v2_8049089, align 4
  %v2_804908d = add i32 %v0_8049085, 4
  %v3_804908d = inttoptr i32 %v2_804908d to i32*
  store i32 %v3_8049089, i32* %v3_804908d, align 4
  %v1_804908e = add i32 %v0_8049085, 147
  store i32 %v1_804908e, i32* @edx, align 4
  %v3_8049095 = inttoptr i32 %v0_8049085 to i32*
  store i32 %v1_804908e, i32* %v3_8049095, align 4
  %v0_8049096 = call i32 @function_8051cd0()
  store i32 %v0_8049096, i32* %eax.global-to-local, align 4
  %v0_804909b = load i32, i32* @esp, align 4
  %v6_804909b = icmp eq i32 %v0_804909b, -16
  store i1 %v6_804909b, i1* %zf.global-to-local, align 1
  store i32 %v0_8049096, i32* %ebx.global-to-local, align 4
  %v2_80490a0 = add i32 %v0_8049096, 147
  %v3_80490a0 = add i32 %v2_80490a0, %v0_804909b
  %v4_80490a0 = inttoptr i32 %v3_80490a0 to i8*
  %v5_80490a0 = load i8, i8* %v4_80490a0, align 1
  %v11_80490a0 = icmp eq i8 %v5_80490a0, 32
  %v1_80490a8 = zext i1 %v11_80490a0 to i32
  %v1_80490ab = add i32 %v0_804909b, 147
  store i32 %v1_80490ab, i32* %esi.global-to-local, align 4
  store i32 %v1_80490a8, i32* %eax.global-to-local, align 4
  %v1_80490b7 = add i32 %v0_804909b, 12
  %v2_80490b7 = inttoptr i32 %v1_80490b7 to i32*
  store i32 2, i32* %v2_80490b7, align 4
  %v1_80490b9 = add i32 %v0_804909b, 8
  %v2_80490b9 = inttoptr i32 %v1_80490b9 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80548a6.10 to i32), i32* %v2_80490b9, align 4
  %v0_80490be = load i32, i32* %ebx.global-to-local, align 4
  %v1_80490be = load i32, i32* %eax.global-to-local, align 4
  %v2_80490be = add i32 %v1_80490be, %v0_80490be
  store i32 %v2_80490be, i32* @ebx, align 4
  %v1_80490c0 = add i32 %v0_804909b, 120
  %v2_80490c0 = inttoptr i32 %v1_80490c0 to i32*
  %v3_80490c0 = load i32, i32* %v2_80490c0, align 4
  %v2_80490c4 = sub i32 %v3_80490c0, %v2_80490be
  store i32 %v2_80490c4, i32* %eax.global-to-local, align 4
  %v0_80490c6 = load i32, i32* %esi.global-to-local, align 4
  %v2_80490c6 = add i32 %v0_80490c6, %v2_80490be
  %v12_80490c6 = icmp eq i32 %v2_80490c6, 0
  store i1 %v12_80490c6, i1* %zf.global-to-local, align 1
  store i32 %v2_80490c6, i32* @esi, align 4
  %v2_80490c8 = add i32 %v0_804909b, 4
  %v3_80490c8 = inttoptr i32 %v2_80490c8 to i32*
  store i32 %v2_80490c4, i32* %v3_80490c8, align 4
  %v0_80490c9 = load i32, i32* @esi, align 4
  %v3_80490c9 = inttoptr i32 %v0_804909b to i32*
  store i32 %v0_80490c9, i32* %v3_80490c9, align 4
  %v0_80490ca = call i32 @function_8051a90()
  store i32 %v0_80490ca, i32* %eax.global-to-local, align 4
  %v0_80490cf = load i32, i32* @esp, align 4
  %v1_80490cf = add i32 %v0_80490cf, 16
  store i32 %v0_80490ca, i32* %edx.global-to-local, align 4
  %v10_80490d4 = icmp eq i32 %v0_80490ca, -1
  store i1 %v10_80490d4, i1* %zf.global-to-local, align 1
  br i1 %v10_80490d4, label %dec_label_pc_8049124, label %dec_label_pc_80490d9

dec_label_pc_80490d9:                             ; preds = %dec_label_pc_804907a
  %v10_80490d9 = icmp eq i32 %v0_80490ca, 1
  store i1 %v10_80490d9, i1* %zf.global-to-local, align 1
  %v7_80490dc = icmp sgt i32 %v0_80490ca, 1
  br i1 %v7_80490dc, label %dec_label_pc_80490de, label %dec_label_pc_80490e1

dec_label_pc_80490de:                             ; preds = %dec_label_pc_80490d9
  %v1_80490de = add i32 %v0_80490ca, -2
  %v9_80490de = icmp eq i32 %v1_80490de, 0
  store i1 %v9_80490de, i1* %zf.global-to-local, align 1
  store i32 %v1_80490de, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80490e1

dec_label_pc_80490e1:                             ; preds = %dec_label_pc_80490d9, %dec_label_pc_80490de
  %v1_80490ea = phi i32 [ %v0_80490ca, %dec_label_pc_80490d9 ], [ %v1_80490de, %dec_label_pc_80490de ]
  %v1_80490e1 = add i32 %v0_80490cf, 20920
  %v1_80490e8 = load i32, i32* @ebx, align 4
  %v2_80490e8 = add i32 %v1_80490e1, %v1_80490e8
  %v12_80490e8 = icmp eq i32 %v2_80490e8, 0
  store i1 %v12_80490e8, i1* %zf.global-to-local, align 1
  store i32 %v2_80490e8, i32* %eax.global-to-local, align 4
  %v2_80490ea = add i32 %v1_80490ea, -20773
  %v3_80490ea = add i32 %v2_80490ea, %v2_80490e8
  %v4_80490ea = inttoptr i32 %v3_80490ea to i8*
  store i8 0, i8* %v4_80490ea, align 1
  %v0_80490f2 = load i32, i32* @ebx, align 4
  %v1_80490f2 = load i32, i32* @esp, align 4
  %v2_80490f2 = add i32 %v1_80490f2, -4
  %v3_80490f2 = inttoptr i32 %v2_80490f2 to i32*
  store i32 %v0_80490f2, i32* %v3_80490f2, align 4
  %v0_80490f3 = load i32, i32* @ebx, align 4
  %v2_80490f3 = add i32 %v1_80490f2, -8
  %v3_80490f3 = inttoptr i32 %v2_80490f3 to i32*
  store i32 %v0_80490f3, i32* %v3_80490f3, align 4
  %v1_80490f4 = add i32 %v1_80490f2, -12
  %v2_80490f4 = inttoptr i32 %v1_80490f4 to i32*
  store i32 0, i32* %v2_80490f4, align 4
  %v1_80490f6 = add i32 %v1_80490f2, -16
  %v2_80490f6 = inttoptr i32 %v1_80490f6 to i32*
  store i32 42, i32* %v2_80490f6, align 4
  %v3_80490f8 = call i32 @function_8050fe0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80490f8, i32* %eax.global-to-local, align 4
  %v0_80490fd = load i32, i32* @esi, align 4
  %v1_80490fd = load i32, i32* @esp, align 4
  %v2_80490fd = inttoptr i32 %v1_80490fd to i32*
  store i32 %v0_80490fd, i32* %v2_80490fd, align 4
  store i32 %v3_80490f8, i32* @ebx, align 4
  %v2_8049102 = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_8049102, i32* %eax.global-to-local, align 4
  %v0_8049107 = load i32, i32* @esp, align 4
  %v9_8049107 = icmp eq i32 %v0_8049107, -12
  store i1 %v9_8049107, i1* %zf.global-to-local, align 1
  %v0_804910a = load i32, i32* @ebx, align 4
  %v2_804910a = add i32 %v0_8049107, 8
  %v3_804910a = inttoptr i32 %v2_804910a to i32*
  store i32 %v0_804910a, i32* %v3_804910a, align 4
  %v2_804910b = add i32 %v0_8049107, 4
  %v3_804910b = inttoptr i32 %v2_804910b to i32*
  store i32 %v2_8049102, i32* %v3_804910b, align 4
  %v0_804910c = load i32, i32* @esi, align 4
  %v3_804910c = inttoptr i32 %v0_8049107 to i32*
  store i32 %v0_804910c, i32* %v3_804910c, align 4
  %v0_804910d = call i32 @function_8051cd0()
  store i32 %v0_804910d, i32* %eax.global-to-local, align 4
  %v0_8049112 = load i32, i32* @esp, align 4
  %v1_8049112 = add i32 %v0_8049112, 16
  %v1_8049115 = icmp eq i32 %v0_804910d, 0
  store i1 %v1_8049115, i1* %zf.global-to-local, align 1
  br i1 %v1_8049115, label %dec_label_pc_8049124, label %dec_label_pc_8049119

dec_label_pc_8049119:                             ; preds = %dec_label_pc_80490e1
  %v1_8049119 = add i32 %v0_8049112, 108
  %v2_8049119 = inttoptr i32 %v1_8049119 to i32*
  %v3_8049119 = load i32, i32* %v2_8049119, align 4
  store i32 %v3_8049119, i32* @ecx, align 4
  %v1_804911d = add i32 %v3_8049119, 8
  %v2_804911d = inttoptr i32 %v1_804911d to i32*
  store i32 1, i32* %v2_804911d, align 4
  %v1_8049124.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049124

dec_label_pc_8049124:                             ; preds = %dec_label_pc_80490e1, %dec_label_pc_804907a, %dec_label_pc_8049044, %dec_label_pc_8049119
  %v1_8049124 = phi i32 [ %v1_8049112, %dec_label_pc_80490e1 ], [ %v1_80490cf, %dec_label_pc_804907a ], [ %v1_8049070, %dec_label_pc_8049044 ], [ %v1_8049124.pre, %dec_label_pc_8049119 ]
  %v0_8049124 = load i32, i32* @ecx, align 4
  %v2_8049124 = add i32 %v1_8049124, -4
  %v3_8049124 = inttoptr i32 %v2_8049124 to i32*
  store i32 %v0_8049124, i32* %v3_8049124, align 4
  %v0_8049125 = load i32, i32* @ecx, align 4
  %v2_8049125 = add i32 %v1_8049124, -8
  %v3_8049125 = inttoptr i32 %v2_8049125 to i32*
  store i32 %v0_8049125, i32* %v3_8049125, align 4
  %v1_8049126 = add i32 %v1_8049124, -12
  %v2_8049126 = inttoptr i32 %v1_8049126 to i32*
  store i32 0, i32* %v2_8049126, align 4
  %v1_8049128 = add i32 %v1_8049124, -16
  %v2_8049128 = inttoptr i32 %v1_8049128 to i32*
  store i32 40, i32* %v2_8049128, align 4
  %v3_804912a = call i32 @function_8050fe0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_804912a, i32* %eax.global-to-local, align 4
  %v0_804912f = load i32, i32* @esp, align 4
  %v9_804912f = icmp eq i32 %v0_804912f, -12
  store i1 %v9_804912f, i1* %zf.global-to-local, align 1
  %v2_8049132 = add i32 %v0_804912f, 8
  %v3_8049132 = inttoptr i32 %v2_8049132 to i32*
  store i32 %v3_804912a, i32* %v3_8049132, align 4
  %v1_8049133 = add i32 %v0_804912f, 120
  %v2_8049133 = inttoptr i32 %v1_8049133 to i32*
  %v3_8049133 = load i32, i32* %v2_8049133, align 4
  store i32 %v3_8049133, i32* @edx, align 4
  %v2_8049137 = add i32 %v0_804912f, 4
  %v3_8049137 = inttoptr i32 %v2_8049137 to i32*
  store i32 %v3_8049133, i32* %v3_8049137, align 4
  %v1_8049138 = add i32 %v0_804912f, 147
  store i32 %v1_8049138, i32* %eax.global-to-local, align 4
  %v3_804913f = inttoptr i32 %v0_804912f to i32*
  store i32 %v1_8049138, i32* %v3_804913f, align 4
  %v0_8049140 = call i32 @function_8051cd0()
  %v0_8049145 = load i32, i32* @esp, align 4
  %v1_8049148 = add i32 %v0_8049140, 1
  %v8_8049148 = icmp eq i32 %v1_8049148, 0
  store i1 %v8_8049148, i1* %zf.global-to-local, align 1
  store i32 %v1_8049148, i32* %eax.global-to-local, align 4
  br i1 %v8_8049148, label %dec_label_pc_8049a67, label %dec_label_pc_804914f

dec_label_pc_804914f:                             ; preds = %dec_label_pc_8049124
  %v2_804914f = add i32 %v0_8049145, 12
  %v3_804914f = inttoptr i32 %v2_804914f to i32*
  store i32 %v1_8049148, i32* %v3_804914f, align 4
  %v0_8049150 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049150 = add i32 %v0_8049145, 8
  %v3_8049150 = inttoptr i32 %v2_8049150 to i32*
  store i32 %v0_8049150, i32* %v3_8049150, align 4
  %v1_8049151 = add i32 %v0_8049145, 4
  %v2_8049151 = inttoptr i32 %v1_8049151 to i32*
  store i32 0, i32* %v2_8049151, align 4
  %v2_8049153 = inttoptr i32 %v0_8049145 to i32*
  store i32 40, i32* %v2_8049153, align 4
  %v3_8049155 = call i32 @function_8050fe0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049155, i32* %eax.global-to-local, align 4
  %v0_804915a = load i32, i32* @esp, align 4
  %v9_804915a = icmp eq i32 %v0_804915a, -12
  store i1 %v9_804915a, i1* %zf.global-to-local, align 1
  %v2_804915d = add i32 %v0_804915a, 8
  %v3_804915d = inttoptr i32 %v2_804915d to i32*
  store i32 %v3_8049155, i32* %v3_804915d, align 4
  %v1_804915e = add i32 %v0_804915a, 120
  %v2_804915e = inttoptr i32 %v1_804915e to i32*
  %v3_804915e = load i32, i32* %v2_804915e, align 4
  store i32 %v3_804915e, i32* %eax.global-to-local, align 4
  %v2_8049162 = add i32 %v0_804915a, 4
  %v3_8049162 = inttoptr i32 %v2_8049162 to i32*
  store i32 %v3_804915e, i32* %v3_8049162, align 4
  %v1_8049163 = add i32 %v0_804915a, 147
  store i32 %v1_8049163, i32* @edx, align 4
  %v3_804916a = inttoptr i32 %v0_804915a to i32*
  store i32 %v1_8049163, i32* %v3_804916a, align 4
  %v0_804916b = call i32 @function_8051cd0()
  store i32 %v0_804916b, i32* %eax.global-to-local, align 4
  %v0_8049170 = load i32, i32* @esp, align 4
  %v6_8049170 = icmp eq i32 %v0_8049170, -16
  store i1 %v6_8049170, i1* %zf.global-to-local, align 1
  store i32 %v0_804916b, i32* %ebx.global-to-local, align 4
  %v2_8049175 = add i32 %v0_804916b, 147
  %v3_8049175 = add i32 %v2_8049175, %v0_8049170
  %v4_8049175 = inttoptr i32 %v3_8049175 to i8*
  %v5_8049175 = load i8, i8* %v4_8049175, align 1
  %v11_8049175 = icmp eq i8 %v5_8049175, 32
  %v1_804917d = zext i1 %v11_8049175 to i32
  %v1_8049180 = add i32 %v0_8049170, 147
  store i32 %v1_8049180, i32* %esi.global-to-local, align 4
  store i32 %v1_804917d, i32* %eax.global-to-local, align 4
  %v1_804918c = add i32 %v0_8049170, 12
  %v2_804918c = inttoptr i32 %v1_804918c to i32*
  store i32 2, i32* %v2_804918c, align 4
  %v1_804918e = add i32 %v0_8049170, 8
  %v2_804918e = inttoptr i32 %v1_804918e to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80548a6.10 to i32), i32* %v2_804918e, align 4
  %v0_8049193 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049193 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049193 = add i32 %v1_8049193, %v0_8049193
  store i32 %v2_8049193, i32* @ebx, align 4
  %v1_8049195 = add i32 %v0_8049170, 120
  %v2_8049195 = inttoptr i32 %v1_8049195 to i32*
  %v3_8049195 = load i32, i32* %v2_8049195, align 4
  %v2_8049199 = sub i32 %v3_8049195, %v2_8049193
  store i32 %v2_8049199, i32* %eax.global-to-local, align 4
  %v0_804919b = load i32, i32* %esi.global-to-local, align 4
  %v2_804919b = add i32 %v0_804919b, %v2_8049193
  %v12_804919b = icmp eq i32 %v2_804919b, 0
  store i1 %v12_804919b, i1* %zf.global-to-local, align 1
  store i32 %v2_804919b, i32* @esi, align 4
  %v2_804919d = add i32 %v0_8049170, 4
  %v3_804919d = inttoptr i32 %v2_804919d to i32*
  store i32 %v2_8049199, i32* %v3_804919d, align 4
  %v0_804919e = load i32, i32* @esi, align 4
  %v3_804919e = inttoptr i32 %v0_8049170 to i32*
  store i32 %v0_804919e, i32* %v3_804919e, align 4
  %v0_804919f = call i32 @function_8051a90()
  store i32 %v0_804919f, i32* %eax.global-to-local, align 4
  %v0_80491a4 = load i32, i32* @esp, align 4
  store i32 %v0_804919f, i32* %edx.global-to-local, align 4
  %v10_80491a9 = icmp eq i32 %v0_804919f, -1
  store i1 %v10_80491a9, i1* %zf.global-to-local, align 1
  br i1 %v10_80491a9, label %dec_label_pc_80491db, label %dec_label_pc_80491ae

dec_label_pc_80491ae:                             ; preds = %dec_label_pc_804914f
  %v10_80491ae = icmp eq i32 %v0_804919f, 1
  store i1 %v10_80491ae, i1* %zf.global-to-local, align 1
  %v7_80491b1 = icmp sgt i32 %v0_804919f, 1
  br i1 %v7_80491b1, label %dec_label_pc_80491b3, label %dec_label_pc_80491b6

dec_label_pc_80491b3:                             ; preds = %dec_label_pc_80491ae
  %v1_80491b3 = add i32 %v0_804919f, -2
  %v9_80491b3 = icmp eq i32 %v1_80491b3, 0
  store i1 %v9_80491b3, i1* %zf.global-to-local, align 1
  store i32 %v1_80491b3, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80491b6

dec_label_pc_80491b6:                             ; preds = %dec_label_pc_80491ae, %dec_label_pc_80491b3
  %v1_80491bf = phi i32 [ %v0_804919f, %dec_label_pc_80491ae ], [ %v1_80491b3, %dec_label_pc_80491b3 ]
  %v1_80491b6 = add i32 %v0_80491a4, 20920
  %v1_80491bd = load i32, i32* @ebx, align 4
  %v2_80491bd = add i32 %v1_80491b6, %v1_80491bd
  %v12_80491bd = icmp eq i32 %v2_80491bd, 0
  store i1 %v12_80491bd, i1* %zf.global-to-local, align 1
  store i32 %v2_80491bd, i32* %eax.global-to-local, align 4
  %v2_80491bf = add i32 %v1_80491bf, -20773
  %v3_80491bf = add i32 %v2_80491bf, %v2_80491bd
  %v4_80491bf = inttoptr i32 %v3_80491bf to i8*
  store i8 0, i8* %v4_80491bf, align 1
  %v0_80491c7 = load i32, i32* %eax.global-to-local, align 4
  %v1_80491c7 = load i32, i32* @esp, align 4
  %v2_80491c7 = add i32 %v1_80491c7, -4
  %v3_80491c7 = inttoptr i32 %v2_80491c7 to i32*
  store i32 %v0_80491c7, i32* %v3_80491c7, align 4
  %v0_80491c8 = load i32, i32* %eax.global-to-local, align 4
  %v2_80491c8 = add i32 %v1_80491c7, -8
  %v3_80491c8 = inttoptr i32 %v2_80491c8 to i32*
  store i32 %v0_80491c8, i32* %v3_80491c8, align 4
  %v1_80491c9 = add i32 %v1_80491c7, -12
  %v2_80491c9 = inttoptr i32 %v1_80491c9 to i32*
  store i32 10, i32* %v2_80491c9, align 4
  %v0_80491cb = load i32, i32* @esi, align 4
  %v2_80491cb = add i32 %v1_80491c7, -16
  %v3_80491cb = inttoptr i32 %v2_80491cb to i32*
  store i32 %v0_80491cb, i32* %v3_80491cb, align 4
  %v3_80491cc = call i32 @function_8051ae0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80491cc, i32* %eax.global-to-local, align 4
  %v0_80491d1 = load i32, i32* @esp, align 4
  %v1_80491d1 = add i32 %v0_80491d1, 108
  %v2_80491d1 = inttoptr i32 %v1_80491d1 to i32*
  %v3_80491d1 = load i32, i32* %v2_80491d1, align 4
  store i32 %v3_80491d1, i32* %ecx.global-to-local, align 4
  %v6_80491d5 = icmp eq i32 %v0_80491d1, -16
  store i1 %v6_80491d5, i1* %zf.global-to-local, align 1
  %v2_80491d8 = add i32 %v3_80491d1, 12
  %v3_80491d8 = inttoptr i32 %v2_80491d8 to i32*
  store i32 %v3_80491cc, i32* %v3_80491d8, align 4
  br label %dec_label_pc_80491db

dec_label_pc_80491db:                             ; preds = %dec_label_pc_804914f, %dec_label_pc_8049a67, %dec_label_pc_80491b6
  store i1 true, i1* %zf.global-to-local, align 1
  %v1_80491e0.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80491e0

dec_label_pc_80491e0:                             ; preds = %dec_label_pc_8049301, %dec_label_pc_80491db
  %v1_80491e0 = phi i32 [ %v1_80491e0.pre, %dec_label_pc_80491db ], [ %v0_8049301, %dec_label_pc_8049301 ]
  %storemerge5 = phi i32 [ 0, %dec_label_pc_80491db ], [ %v3_8049301, %dec_label_pc_8049301 ]
  store i32 %storemerge5, i32* @esi, align 4
  %v0_80491e0 = load i32, i32* %eax.global-to-local, align 4
  %v2_80491e0 = add i32 %v1_80491e0, -4
  %v3_80491e0 = inttoptr i32 %v2_80491e0 to i32*
  store i32 %v0_80491e0, i32* %v3_80491e0, align 4
  %v0_80491e1 = load i32, i32* %eax.global-to-local, align 4
  %v2_80491e1 = add i32 %v1_80491e0, -8
  %v3_80491e1 = inttoptr i32 %v2_80491e1 to i32*
  store i32 %v0_80491e1, i32* %v3_80491e1, align 4
  %v1_80491e2 = add i32 %v1_80491e0, -12
  %v2_80491e2 = inttoptr i32 %v1_80491e2 to i32*
  store i32 0, i32* %v2_80491e2, align 4
  %v1_80491e4 = add i32 %v1_80491e0, -16
  %v2_80491e4 = inttoptr i32 %v1_80491e4 to i32*
  store i32 39, i32* %v2_80491e4, align 4
  %v3_80491e6 = call i32 @function_8050fe0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80491e6, i32* %eax.global-to-local, align 4
  %v0_80491eb = load i32, i32* @esp, align 4
  %v1_80491eb = add i32 %v0_80491eb, 147
  %v1_80491f5 = load i32, i32* @esi, align 4
  %v2_80491f5 = add i32 %v1_80491eb, %v1_80491f5
  %v12_80491f5 = icmp eq i32 %v2_80491f5, 0
  store i1 %v12_80491f5, i1* %zf.global-to-local, align 1
  store i32 %v2_80491f5, i32* @ebx, align 4
  %v2_80491f7 = add i32 %v0_80491eb, 8
  %v3_80491f7 = inttoptr i32 %v2_80491f7 to i32*
  store i32 %v3_80491e6, i32* %v3_80491f7, align 4
  %v1_80491f8 = add i32 %v0_80491eb, 120
  %v2_80491f8 = inttoptr i32 %v1_80491f8 to i32*
  %v3_80491f8 = load i32, i32* %v2_80491f8, align 4
  store i32 %v3_80491f8, i32* @ebp, align 4
  %v2_80491fc = add i32 %v0_80491eb, 4
  %v3_80491fc = inttoptr i32 %v2_80491fc to i32*
  store i32 %v3_80491f8, i32* %v3_80491fc, align 4
  %v0_80491fd = load i32, i32* @ebx, align 4
  %v3_80491fd = inttoptr i32 %v0_80491eb to i32*
  store i32 %v0_80491fd, i32* %v3_80491fd, align 4
  %v0_80491fe = call i32 @function_8051cd0()
  %v0_8049203 = load i32, i32* @esp, align 4
  %v1_8049206 = add i32 %v0_80491fe, 1
  %v8_8049206 = icmp eq i32 %v1_8049206, 0
  store i1 %v8_8049206, i1* %zf.global-to-local, align 1
  store i32 %v1_8049206, i32* %eax.global-to-local, align 4
  br i1 %v8_8049206, label %dec_label_pc_80493d2, label %dec_label_pc_804920d

dec_label_pc_804920d:                             ; preds = %dec_label_pc_80491e0
  %v1_804920d = add i32 %v0_8049203, 108
  %v2_804920d = inttoptr i32 %v1_804920d to i32*
  %v3_804920d = load i32, i32* %v2_804920d, align 4
  store i32 %v3_804920d, i32* %edx.global-to-local, align 4
  %v1_8049211 = add i32 %v3_804920d, 16
  %v2_8049211 = inttoptr i32 %v1_8049211 to i32*
  %v3_8049211 = load i32, i32* %v2_8049211, align 4
  %v4_8049211 = add i32 %v3_8049211, -4
  %v9_8049211 = sub i32 3, %v3_8049211
  %v10_8049211 = and i32 %v9_8049211, %v3_8049211
  %v11_8049211 = icmp slt i32 %v10_8049211, 0
  %v12_8049211 = icmp eq i32 %v4_8049211, 0
  store i1 %v12_8049211, i1* %zf.global-to-local, align 1
  %v13_8049211 = icmp slt i32 %v4_8049211, 0
  %v3_8049215 = icmp eq i1 %v13_8049211, %v11_8049211
  %v4_8049215 = icmp eq i1 %v12_8049211, false
  %v5_8049215 = and i1 %v4_8049215, %v3_8049215
  br i1 %v5_8049215, label %dec_label_pc_80493d2, label %dec_label_pc_804921b

dec_label_pc_804921b:                             ; preds = %dec_label_pc_804920d
  %v2_804921b = add i32 %v0_8049203, 12
  %v3_804921b = inttoptr i32 %v2_804921b to i32*
  store i32 %v1_8049206, i32* %v3_804921b, align 4
  %v0_804921c = load i32, i32* %eax.global-to-local, align 4
  %v2_804921c = add i32 %v0_8049203, 8
  %v3_804921c = inttoptr i32 %v2_804921c to i32*
  store i32 %v0_804921c, i32* %v3_804921c, align 4
  %v1_804921d = add i32 %v0_8049203, 4
  %v2_804921d = inttoptr i32 %v1_804921d to i32*
  store i32 0, i32* %v2_804921d, align 4
  %v2_804921f = inttoptr i32 %v0_8049203 to i32*
  store i32 39, i32* %v2_804921f, align 4
  %v3_8049221 = call i32 @function_8050fe0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049221, i32* %eax.global-to-local, align 4
  %v0_8049226 = load i32, i32* @esp, align 4
  %v9_8049226 = icmp eq i32 %v0_8049226, -12
  store i1 %v9_8049226, i1* %zf.global-to-local, align 1
  %v2_8049229 = add i32 %v0_8049226, 8
  %v3_8049229 = inttoptr i32 %v2_8049229 to i32*
  store i32 %v3_8049221, i32* %v3_8049229, align 4
  %v1_804922a = add i32 %v0_8049226, 120
  %v2_804922a = inttoptr i32 %v1_804922a to i32*
  %v3_804922a = load i32, i32* %v2_804922a, align 4
  store i32 %v3_804922a, i32* %eax.global-to-local, align 4
  %v2_804922e = add i32 %v0_8049226, 4
  %v3_804922e = inttoptr i32 %v2_804922e to i32*
  store i32 %v3_804922a, i32* %v3_804922e, align 4
  %v0_804922f = load i32, i32* @ebx, align 4
  %v3_804922f = inttoptr i32 %v0_8049226 to i32*
  store i32 %v0_804922f, i32* %v3_804922f, align 4
  %v0_8049230 = call i32 @function_8051cd0()
  store i32 %v0_8049230, i32* %eax.global-to-local, align 4
  %v0_8049235 = load i32, i32* @esi, align 4
  %v2_8049235 = add i32 %v0_8049235, %v0_8049230
  store i32 %v2_8049235, i32* %edx.global-to-local, align 4
  %v1_8049238 = load i32, i32* @esp, align 4
  %v2_8049238 = add i32 %v1_8049238, 124
  %v3_8049238 = inttoptr i32 %v2_8049238 to i32*
  store i32 %v2_8049235, i32* %v3_8049238, align 4
  %v0_804923c = load i32, i32* @esp, align 4
  %v1_804923c = add i32 %v0_804923c, 16
  %v6_804923c = icmp eq i32 %v1_804923c, 0
  store i1 %v6_804923c, i1* %zf.global-to-local, align 1
  %v1_804923f = load i32, i32* %edx.global-to-local, align 4
  %v2_804923f = add i32 %v0_804923c, 147
  %v3_804923f = add i32 %v2_804923f, %v1_804923f
  %v4_804923f = inttoptr i32 %v3_804923f to i8*
  %v5_804923f = load i8, i8* %v4_804923f, align 1
  %v11_804923f = icmp eq i8 %v5_804923f, 32
  store i1 %v11_804923f, i1* %zf.global-to-local, align 1
  br i1 %v11_804923f, label %dec_label_pc_804939a, label %dec_label_pc_804924d

dec_label_pc_804924d:                             ; preds = %dec_label_pc_804921b, %dec_label_pc_804939a
  %v0_8049256 = phi i32 [ %v1_804923c, %dec_label_pc_804921b ], [ %v0_804924d.pre, %dec_label_pc_804939a ]
  %v1_804924d = add i32 %v0_8049256, 104
  %v2_804924d = inttoptr i32 %v1_804924d to i32*
  %v3_804924d = load i32, i32* %v2_804924d, align 4
  %v0_8049251 = load i32, i32* @ebx, align 4
  %v1_8049251 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049251 = add i32 %v1_8049251, %v0_8049251
  store i32 %v2_8049251, i32* @ebp, align 4
  %v1_8049254 = load i32, i32* @esi, align 4
  %v2_8049254 = sub i32 %v3_804924d, %v1_8049254
  store i32 %v2_8049254, i32* %edi.global-to-local, align 4
  %v1_8049256 = add i32 %v0_8049256, -4
  %v2_8049256 = inttoptr i32 %v1_8049256 to i32*
  store i32 2, i32* %v2_8049256, align 4
  %v0_8049258 = load i32, i32* %edi.global-to-local, align 4
  %v1_8049258 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049258 = sub i32 %v0_8049258, %v1_8049258
  %v12_8049258 = icmp eq i32 %v2_8049258, 0
  store i1 %v12_8049258, i1* %zf.global-to-local, align 1
  store i32 %v2_8049258, i32* @edi, align 4
  %v1_804925a = add i32 %v0_8049256, -8
  %v2_804925a = inttoptr i32 %v1_804925a to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80548a6.10 to i32), i32* %v2_804925a, align 4
  %v0_804925f = load i32, i32* @edi, align 4
  %v2_804925f = add i32 %v0_8049256, -12
  %v3_804925f = inttoptr i32 %v2_804925f to i32*
  store i32 %v0_804925f, i32* %v3_804925f, align 4
  %v0_8049260 = load i32, i32* @ebp, align 4
  %v2_8049260 = add i32 %v0_8049256, -16
  %v3_8049260 = inttoptr i32 %v2_8049260 to i32*
  store i32 %v0_8049260, i32* %v3_8049260, align 4
  %v0_8049261 = call i32 @function_8051a90()
  store i32 %v0_8049261, i32* %eax.global-to-local, align 4
  %v0_8049266 = load i32, i32* @esp, align 4
  %v1_8049266 = add i32 %v0_8049266, 16
  store i32 %v0_8049261, i32* @ebx, align 4
  %v10_804926b = icmp eq i32 %v0_8049261, -1
  store i1 %v10_804926b, i1* %zf.global-to-local, align 1
  br i1 %v10_804926b, label %dec_label_pc_8049301, label %dec_label_pc_8049274

dec_label_pc_8049274:                             ; preds = %dec_label_pc_804924d
  %v1_8049274 = add i32 %v0_8049266, 147
  store i32 %v1_8049274, i32* %esi.global-to-local, align 4
  %v1_804927b = add i32 %v0_8049266, 124
  %v2_804927b = inttoptr i32 %v1_804927b to i32*
  %v3_804927b = load i32, i32* %v2_804927b, align 4
  store i32 %v3_804927b, i32* %eax.global-to-local, align 4
  %v2_804927f = add i32 %v3_804927b, %v1_8049274
  store i32 %v2_804927f, i32* @esi, align 4
  %v10_8049281 = icmp eq i32 %v0_8049261, 1
  store i1 %v10_8049281, i1* %zf.global-to-local, align 1
  %v7_8049284 = icmp sgt i32 %v0_8049261, 1
  br i1 %v7_8049284, label %dec_label_pc_8049286, label %dec_label_pc_8049289

dec_label_pc_8049286:                             ; preds = %dec_label_pc_8049274
  %v1_8049286 = add i32 %v0_8049261, -2
  %v9_8049286 = icmp eq i32 %v1_8049286, 0
  store i1 %v9_8049286, i1* %zf.global-to-local, align 1
  store i32 %v1_8049286, i32* @ebx, align 4
  br label %dec_label_pc_8049289

dec_label_pc_8049289:                             ; preds = %dec_label_pc_8049274, %dec_label_pc_8049286
  %v1_8049289 = add i32 %v0_8049266, 12
  %v2_8049289 = inttoptr i32 %v1_8049289 to i32*
  store i32 1, i32* %v2_8049289, align 4
  %v1_804928b = add i32 %v0_8049266, 8
  %v2_804928b = inttoptr i32 %v1_804928b to i32*
  store i32 ptrtoint (i32* @global_var_80548a9.14 to i32), i32* %v2_804928b, align 4
  %v0_8049290 = load i32, i32* @edi, align 4
  %v2_8049290 = add i32 %v0_8049266, 4
  %v3_8049290 = inttoptr i32 %v2_8049290 to i32*
  store i32 %v0_8049290, i32* %v3_8049290, align 4
  %v0_8049291 = load i32, i32* @ebp, align 4
  %v3_8049291 = inttoptr i32 %v0_8049266 to i32*
  store i32 %v0_8049291, i32* %v3_8049291, align 4
  %v0_8049292 = call i32 @function_8051a90()
  store i32 %v0_8049292, i32* %eax.global-to-local, align 4
  %v0_8049297 = load i32, i32* @esp, align 4
  %v1_804929a = icmp eq i32 %v0_8049292, 0
  store i1 %v1_804929a, i1* %zf.global-to-local, align 1
  %tmp144 = icmp slt i32 %v0_8049292, 1
  br i1 %tmp144, label %dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge, label %dec_label_pc_804929e

dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge: ; preds = %dec_label_pc_8049289
  %v1_8049297 = add i32 %v0_8049297, 16
  %v1_80492bd.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80492b2

dec_label_pc_804929e:                             ; preds = %dec_label_pc_8049289
  %v1_804929e = add i32 %v0_8049297, 12
  %v2_804929e = inttoptr i32 %v1_804929e to i32*
  store i32 1, i32* %v2_804929e, align 4
  %v1_80492a0 = add i32 %v0_8049297, 8
  %v2_80492a0 = inttoptr i32 %v1_80492a0 to i32*
  store i32 ptrtoint (i32* @global_var_80548a9.14 to i32), i32* %v2_80492a0, align 4
  %v0_80492a5 = load i32, i32* @edi, align 4
  %v2_80492a5 = add i32 %v0_8049297, 4
  %v3_80492a5 = inttoptr i32 %v2_80492a5 to i32*
  store i32 %v0_80492a5, i32* %v3_80492a5, align 4
  %v0_80492a6 = load i32, i32* @ebp, align 4
  %v3_80492a6 = inttoptr i32 %v0_8049297 to i32*
  store i32 %v0_80492a6, i32* %v3_80492a6, align 4
  %v0_80492a7 = call i32 @function_8051a90()
  store i32 %v0_80492a7, i32* %eax.global-to-local, align 4
  %v0_80492ac = load i32, i32* @esp, align 4
  %v1_80492ac = add i32 %v0_80492ac, 16
  %v6_80492ac = icmp eq i32 %v1_80492ac, 0
  store i1 %v6_80492ac, i1* %zf.global-to-local, align 1
  %v1_80492af = add i32 %v0_80492a7, -1
  store i32 %v1_80492af, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80492b2

dec_label_pc_80492b2:                             ; preds = %dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge, %dec_label_pc_804929e
  %v1_80492bd = phi i32 [ %v1_80492bd.pre, %dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge ], [ %v1_80492af, %dec_label_pc_804929e ]
  %v0_80492bf = phi i32 [ %v1_8049297, %dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge ], [ %v1_80492ac, %dec_label_pc_804929e ]
  %v1_80492b2 = add i32 %v0_80492bf, 20904
  store i32 %v1_80492b2, i32* %eax.global-to-local, align 4
  %v1_80492b9 = add i32 %v0_80492bf, 108
  %v2_80492b9 = inttoptr i32 %v1_80492b9 to i32*
  %v3_80492b9 = load i32, i32* %v2_80492b9, align 4
  store i32 %v3_80492b9, i32* %edx.global-to-local, align 4
  %v2_80492bd = add i32 %v1_80492b2, %v1_80492bd
  %v12_80492bd = icmp eq i32 %v2_80492bd, 0
  store i1 %v12_80492bd, i1* %zf.global-to-local, align 1
  store i32 %v2_80492bd, i32* %eax.global-to-local, align 4
  %v1_80492bf = add i32 %v0_80492bf, 20900
  %v2_80492bf = inttoptr i32 %v1_80492bf to i32*
  store i32 0, i32* %v2_80492bf, align 4
  %v0_80492ca = load i32, i32* %eax.global-to-local, align 4
  %v1_80492ca = load i32, i32* %edx.global-to-local, align 4
  %v2_80492ca = add i32 %v0_80492ca, -20773
  %v3_80492ca = add i32 %v2_80492ca, %v1_80492ca
  %v4_80492ca = inttoptr i32 %v3_80492ca to i8*
  store i8 0, i8* %v4_80492ca, align 1
  br label %dec_label_pc_80492e4

dec_label_pc_80492d4:                             ; preds = %dec_label_pc_80492e4
  br i1 %v13_80492d4, label %dec_label_pc_804930a, label %dec_label_pc_80492da

dec_label_pc_80492da:                             ; preds = %dec_label_pc_80492d4
  %v1_80492da = add i32 %v3_80492ed, 1
  store i32 %v1_80492da, i32* %eax.global-to-local, align 4
  store i32 %v1_80492da, i32* %v2_80492ed, align 4
  br label %dec_label_pc_80492e4

dec_label_pc_80492e4:                             ; preds = %dec_label_pc_80492b2, %dec_label_pc_80492da
  %v0_80492e4 = load i32, i32* @esp, align 4
  %v9_80492e4 = icmp eq i32 %v0_80492e4, 12
  store i1 %v9_80492e4, i1* %zf.global-to-local, align 1
  %v0_80492e7 = load i32, i32* @esi, align 4
  %v2_80492e7 = add i32 %v0_80492e4, -16
  %v3_80492e7 = inttoptr i32 %v2_80492e7 to i32*
  store i32 %v0_80492e7, i32* %v3_80492e7, align 4
  %v2_80492e8 = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_80492e8, i32* %eax.global-to-local, align 4
  %v0_80492ed = load i32, i32* @esp, align 4
  %v1_80492ed = add i32 %v0_80492ed, 20916
  %v2_80492ed = inttoptr i32 %v1_80492ed to i32*
  %v3_80492ed = load i32, i32* %v2_80492ed, align 4
  store i32 %v3_80492ed, i32* @ebx, align 4
  %v2_80492f7 = sub i32 %v2_80492e8, %v3_80492ed
  %v8_80492f7 = xor i32 %v3_80492ed, %v2_80492e8
  %v9_80492f7 = xor i32 %v2_80492f7, %v2_80492e8
  %v10_80492f7 = and i32 %v9_80492f7, %v8_80492f7
  %v11_80492f7 = icmp slt i32 %v10_80492f7, 0
  %v12_80492f7 = icmp eq i32 %v2_80492f7, 0
  store i1 %v12_80492f7, i1* %zf.global-to-local, align 1
  %v13_80492f7 = icmp slt i32 %v2_80492f7, 0
  %v3_80492f9 = icmp eq i1 %v13_80492f7, %v11_80492f7
  %v4_80492f9 = icmp eq i1 %v12_80492f7, false
  %v5_80492f9 = and i1 %v4_80492f9, %v3_80492f9
  %v0_80492d4 = load i32, i32* @esi, align 4
  %v2_80492d4 = add i32 %v0_80492d4, %v3_80492ed
  %v3_80492d4 = inttoptr i32 %v2_80492d4 to i8*
  %v4_80492d4 = load i8, i8* %v3_80492d4, align 1
  %v13_80492d4 = icmp eq i8 %v4_80492d4, 61
  store i1 %v13_80492d4, i1* %zf.global-to-local, align 1
  br i1 %v5_80492f9, label %dec_label_pc_80492d4, label %dec_label_pc_80492fb

dec_label_pc_80492fb:                             ; preds = %dec_label_pc_80492e4
  %v1_80492f4 = add i32 %v0_80492ed, 16
  br i1 %v13_80492d4, label %dec_label_pc_804930a, label %dec_label_pc_8049301

dec_label_pc_8049301:                             ; preds = %dec_label_pc_8049322, %dec_label_pc_8049358, %dec_label_pc_80492fb, %dec_label_pc_804924d, %dec_label_pc_8049369
  %v0_8049301 = phi i32 [ %v1_8049361, %dec_label_pc_8049358 ], [ %v1_80492f4, %dec_label_pc_80492fb ], [ %v1_8049266, %dec_label_pc_804924d ], [ %v0_8049301.pre, %dec_label_pc_8049369 ], [ %v1_8049339, %dec_label_pc_8049322 ]
  %v1_8049301 = add i32 %v0_8049301, 108
  %v2_8049301 = inttoptr i32 %v1_8049301 to i32*
  %v3_8049301 = load i32, i32* %v2_8049301, align 4
  br label %dec_label_pc_80491e0

dec_label_pc_804930a:                             ; preds = %dec_label_pc_80492d4, %dec_label_pc_80492fb
  %v1_804930a = add i32 %v0_80492ed, 108
  %v2_804930a = inttoptr i32 %v1_804930a to i32*
  %v3_804930a = load i32, i32* %v2_804930a, align 4
  store i32 %v3_804930a, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %v2_80492ed, align 4
  %v0_8049319 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049319 = add i32 %v0_8049319, 16
  %v2_8049319 = inttoptr i32 %v1_8049319 to i32*
  %v3_8049319 = load i32, i32* %v2_8049319, align 4
  %v1_804931c = icmp eq i32 %v3_8049319, 0
  store i1 %v1_804931c, i1* %zf.global-to-local, align 1
  %tmp145 = icmp slt i32 %v3_8049319, 1
  br i1 %tmp145, label %dec_label_pc_8049358, label %dec_label_pc_8049320

dec_label_pc_8049320:                             ; preds = %dec_label_pc_804930a
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8049322

dec_label_pc_8049322:                             ; preds = %dec_label_pc_8049340, %dec_label_pc_8049320
  %v0_8049322 = phi i32 [ %v4_8049353, %dec_label_pc_8049340 ], [ 0, %dec_label_pc_8049320 ]
  %v2_8049322 = mul i32 %v0_8049322, 128
  %v3_8049322 = icmp eq i32 %v2_8049322, 0
  store i1 %v3_8049322, i1* %zf.global-to-local, align 1
  store i32 %v2_8049322, i32* %eax.global-to-local, align 4
  %v0_8049325 = load i32, i32* @edi, align 4
  %v1_8049325 = load i32, i32* @esp, align 4
  %v2_8049325 = add i32 %v1_8049325, -4
  %v3_8049325 = inttoptr i32 %v2_8049325 to i32*
  store i32 %v0_8049325, i32* %v3_8049325, align 4
  %v0_8049326 = load i32, i32* @ebx, align 4
  %v2_8049326 = add i32 %v1_8049325, -8
  %v3_8049326 = inttoptr i32 %v2_8049326 to i32*
  store i32 %v0_8049326, i32* %v3_8049326, align 4
  %v1_8049327 = add i32 %v1_8049325, 76
  %v2_8049327 = inttoptr i32 %v1_8049327 to i32*
  %v3_8049327 = load i32, i32* %v2_8049327, align 4
  store i32 %v3_8049327, i32* %edx.global-to-local, align 4
  %v0_804932b = load i32, i32* %eax.global-to-local, align 4
  %v2_804932b = add i32 %v3_8049327, 1472
  %v3_804932b = add i32 %v2_804932b, %v0_804932b
  store i32 %v3_804932b, i32* %eax.global-to-local, align 4
  %v2_8049332 = add i32 %v1_8049325, -12
  %v3_8049332 = inttoptr i32 %v2_8049332 to i32*
  store i32 %v3_804932b, i32* %v3_8049332, align 4
  %v0_8049333 = load i32, i32* @esi, align 4
  %v2_8049333 = add i32 %v1_8049325, -16
  %v3_8049333 = inttoptr i32 %v2_8049333 to i32*
  store i32 %v0_8049333, i32* %v3_8049333, align 4
  %v0_8049334 = call i32 @function_8051da0()
  store i32 %v0_8049334, i32* %eax.global-to-local, align 4
  %v0_8049339 = load i32, i32* @esp, align 4
  %v1_8049339 = add i32 %v0_8049339, 16
  %v3_804933c = trunc i32 %v0_8049334 to i8
  %v4_804933c = icmp eq i8 %v3_804933c, 0
  store i1 %v4_804933c, i1* %zf.global-to-local, align 1
  %v1_804933e = icmp eq i1 %v4_804933c, false
  br i1 %v1_804933e, label %dec_label_pc_8049301, label %dec_label_pc_8049340

dec_label_pc_8049340:                             ; preds = %dec_label_pc_8049322
  %v1_8049340 = add i32 %v0_8049339, 20916
  %v2_8049340 = inttoptr i32 %v1_8049340 to i32*
  %v3_8049340 = load i32, i32* %v2_8049340, align 4
  store i32 %v3_8049340, i32* %eax.global-to-local, align 4
  %v1_8049347 = add i32 %v0_8049339, 108
  %v2_8049347 = inttoptr i32 %v1_8049347 to i32*
  %v3_8049347 = load i32, i32* %v2_8049347, align 4
  store i32 %v3_8049347, i32* %ecx.global-to-local, align 4
  %v1_804934b = add i32 %v3_8049340, 1
  store i32 %v1_804934b, i32* %eax.global-to-local, align 4
  store i32 %v1_804934b, i32* %v2_8049340, align 4
  %v0_8049353 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049353 = add i32 %v0_8049353, 16
  %v2_8049353 = inttoptr i32 %v1_8049353 to i32*
  %v3_8049353 = load i32, i32* %v2_8049353, align 4
  %v4_8049353 = load i32, i32* %eax.global-to-local, align 4
  %v5_8049353 = sub i32 %v3_8049353, %v4_8049353
  %v11_8049353 = xor i32 %v4_8049353, %v3_8049353
  %v12_8049353 = xor i32 %v5_8049353, %v3_8049353
  %v13_8049353 = and i32 %v12_8049353, %v11_8049353
  %v14_8049353 = icmp slt i32 %v13_8049353, 0
  %v15_8049353 = icmp eq i32 %v5_8049353, 0
  store i1 %v15_8049353, i1* %zf.global-to-local, align 1
  %v16_8049353 = icmp slt i32 %v5_8049353, 0
  %v3_8049356 = icmp eq i1 %v16_8049353, %v14_8049353
  %v4_8049356 = icmp eq i1 %v15_8049353, false
  %v5_8049356 = and i1 %v4_8049356, %v3_8049356
  br i1 %v5_8049356, label %dec_label_pc_8049322, label %dec_label_pc_8049358

dec_label_pc_8049358:                             ; preds = %dec_label_pc_8049340, %dec_label_pc_804930a
  %v0_8049358 = load i32, i32* @esp, align 4
  %v9_8049358 = icmp eq i32 %v0_8049358, 12
  store i1 %v9_8049358, i1* %zf.global-to-local, align 1
  %v0_804935b = load i32, i32* @esi, align 4
  %v2_804935b = add i32 %v0_8049358, -16
  %v3_804935b = inttoptr i32 %v2_804935b to i32*
  store i32 %v0_804935b, i32* %v3_804935b, align 4
  %v2_804935c = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_804935c, i32* %eax.global-to-local, align 4
  %v0_8049361 = load i32, i32* @esp, align 4
  %v1_8049361 = add i32 %v0_8049361, 16
  %v1_8049364 = add i32 %v2_804935c, -127
  %v6_8049364 = sub i32 126, %v2_804935c
  %v7_8049364 = and i32 %v6_8049364, %v2_804935c
  %v8_8049364 = icmp slt i32 %v7_8049364, 0
  %v9_8049364 = icmp eq i32 %v1_8049364, 0
  store i1 %v9_8049364, i1* %zf.global-to-local, align 1
  %v10_8049364 = icmp slt i32 %v1_8049364, 0
  %v3_8049367 = icmp eq i1 %v10_8049364, %v8_8049364
  %v4_8049367 = icmp eq i1 %v9_8049364, false
  %v5_8049367 = and i1 %v4_8049367, %v3_8049367
  br i1 %v5_8049367, label %dec_label_pc_8049301, label %dec_label_pc_8049369

dec_label_pc_8049369:                             ; preds = %dec_label_pc_8049358
  %v0_8049369 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8049369 = add i32 %v0_8049361, 12
  %v3_8049369 = inttoptr i32 %v2_8049369 to i32*
  store i32 %v0_8049369, i32* %v3_8049369, align 4
  %v0_804936a = load i32, i32* %ecx.global-to-local, align 4
  %v2_804936a = add i32 %v0_8049361, 8
  %v3_804936a = inttoptr i32 %v2_804936a to i32*
  store i32 %v0_804936a, i32* %v3_804936a, align 4
  %v0_804936b = load i32, i32* @esi, align 4
  %v2_804936b = add i32 %v0_8049361, 4
  %v3_804936b = inttoptr i32 %v2_804936b to i32*
  store i32 %v0_804936b, i32* %v3_804936b, align 4
  %v1_804936c = add i32 %v0_8049361, 108
  %v2_804936c = inttoptr i32 %v1_804936c to i32*
  %v3_804936c = load i32, i32* %v2_804936c, align 4
  store i32 %v3_804936c, i32* %edx.global-to-local, align 4
  %v1_8049370 = add i32 %v0_8049361, 92
  %v2_8049370 = inttoptr i32 %v1_8049370 to i32*
  %v3_8049370 = load i32, i32* %v2_8049370, align 4
  store i32 %v3_8049370, i32* %ecx.global-to-local, align 4
  %v1_8049374 = add i32 %v3_804936c, 16
  %v2_8049374 = inttoptr i32 %v1_8049374 to i32*
  %v3_8049374 = load i32, i32* %v2_8049374, align 4
  %v2_8049377 = mul i32 %v3_8049374, 128
  %v3_8049377 = icmp eq i32 %v2_8049377, 0
  store i1 %v3_8049377, i1* %zf.global-to-local, align 1
  %v2_804937a = add i32 %v3_8049370, 1472
  %v3_804937a = add i32 %v2_804937a, %v2_8049377
  store i32 %v3_804937a, i32* %eax.global-to-local, align 4
  %v3_8049381 = inttoptr i32 %v0_8049361 to i32*
  store i32 %v3_804937a, i32* %v3_8049381, align 4
  %v3_8049382 = call i32 @function_8051a00(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049382, i32* %eax.global-to-local, align 4
  %v0_8049387 = load i32, i32* @esp, align 4
  %v1_8049387 = add i32 %v0_8049387, 108
  %v2_8049387 = inttoptr i32 %v1_8049387 to i32*
  %v3_8049387 = load i32, i32* %v2_8049387, align 4
  store i32 %v3_8049387, i32* %eax.global-to-local, align 4
  %v1_804938e = add i32 %v3_8049387, 16
  %v2_804938e = inttoptr i32 %v1_804938e to i32*
  %v3_804938e = load i32, i32* %v2_804938e, align 4
  %v1_8049391 = add i32 %v3_804938e, 1
  %v8_8049391 = icmp eq i32 %v1_8049391, 0
  store i1 %v8_8049391, i1* %zf.global-to-local, align 1
  store i32 %v1_8049391, i32* %edx.global-to-local, align 4
  store i32 %v1_8049391, i32* %v2_804938e, align 4
  %v0_8049301.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049301

dec_label_pc_804939a:                             ; preds = %dec_label_pc_804921b
  %v0_804939a = load i32, i32* %eax.global-to-local, align 4
  %v1_804939a = add i32 %v0_804939a, 1
  %v8_804939a = icmp eq i32 %v1_804939a, 0
  store i1 %v8_804939a, i1* %zf.global-to-local, align 1
  store i32 %v1_804939a, i32* %eax.global-to-local, align 4
  %v0_804939b = load i32, i32* @esi, align 4
  %v2_804939b = add i32 %v0_804939b, %v1_804939a
  store i32 %v2_804939b, i32* %ecx.global-to-local, align 4
  %v2_804939e = add i32 %v0_804923c, 124
  %v3_804939e = inttoptr i32 %v2_804939e to i32*
  store i32 %v2_804939b, i32* %v3_804939e, align 4
  %v0_804924d.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804924d

dec_label_pc_80493a7:                             ; preds = %dec_label_pc_8048547
  %v1_80493a7 = add i32 %v0_80485a5, -1440
  %v2_80493a7 = inttoptr i32 %v1_80493a7 to i32*
  %v3_80493a7 = load i32, i32* %v2_80493a7, align 4
  %v1_80493af = urem i32 %v3_80493a7, 32
  store i32 %v1_80493af, i32* %eax.global-to-local, align 4
  %v2_80493b2 = udiv i32 %v3_80493a7, 32
  store i32 %v2_80493b2, i32* %edx.global-to-local, align 4
  %v0_80493b5 = load i32, i32* @esp, align 4
  %v2_80493b5 = mul nuw nsw i32 %v2_80493b2, 4
  %v3_80493b5 = add nuw nsw i32 %v2_80493b5, 20740
  %v4_80493b5 = add i32 %v3_80493b5, %v0_80493b5
  %v5_80493b5 = inttoptr i32 %v4_80493b5 to i32*
  %v6_80493b5 = load i32, i32* %v5_80493b5, align 4
  %v9_80493b5 = shl i32 1, %v1_80493af
  %v12_80493b5 = or i32 %v6_80493b5, %v9_80493b5
  store i32 %v12_80493b5, i32* %v5_80493b5, align 4
  %v0_80493bd = load i32, i32* @esi, align 4
  %v1_80493bd = add i32 %v0_80493bd, -1440
  %v2_80493bd = inttoptr i32 %v1_80493bd to i32*
  %v3_80493bd = load i32, i32* %v2_80493bd, align 4
  store i32 %v3_80493bd, i32* %eax.global-to-local, align 4
  %v1_80493c3 = load i32, i32* @esp, align 4
  %v2_80493c3 = add i32 %v1_80493c3, 72
  %v3_80493c3 = inttoptr i32 %v2_80493c3 to i32*
  %v4_80493c3 = load i32, i32* %v3_80493c3, align 4
  %v5_80493c3 = sub i32 %v3_80493bd, %v4_80493c3
  %v11_80493c3 = xor i32 %v4_80493c3, %v3_80493bd
  %v12_80493c3 = xor i32 %v5_80493c3, %v3_80493bd
  %v13_80493c3 = and i32 %v12_80493c3, %v11_80493c3
  %v14_80493c3 = icmp slt i32 %v13_80493c3, 0
  %v15_80493c3 = icmp eq i32 %v5_80493c3, 0
  store i1 %v15_80493c3, i1* %zf.global-to-local, align 1
  %v16_80493c3 = icmp slt i32 %v5_80493c3, 0
  %v3_80493c7 = icmp ne i1 %v16_80493c3, %v14_80493c3
  %v4_80493c7 = or i1 %v15_80493c3, %v3_80493c7
  br i1 %v4_80493c7, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_80493d2:                             ; preds = %dec_label_pc_804920d, %dec_label_pc_80491e0
  %v0_80493d2 = load i32, i32* @edi, align 4
  %v2_80493d2 = add i32 %v0_8049203, 12
  %v3_80493d2 = inttoptr i32 %v2_80493d2 to i32*
  store i32 %v0_80493d2, i32* %v3_80493d2, align 4
  %v0_80493d3 = load i32, i32* @edi, align 4
  %v2_80493d3 = add i32 %v0_8049203, 8
  %v3_80493d3 = inttoptr i32 %v2_80493d3 to i32*
  store i32 %v0_80493d3, i32* %v3_80493d3, align 4
  %v1_80493d4 = add i32 %v0_8049203, 4
  %v2_80493d4 = inttoptr i32 %v1_80493d4 to i32*
  store i32 0, i32* %v2_80493d4, align 4
  %v2_80493d6 = inttoptr i32 %v0_8049203 to i32*
  store i32 38, i32* %v2_80493d6, align 4
  %v3_80493d8 = call i32 @function_8050fe0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80493d8, i32* %eax.global-to-local, align 4
  %v0_80493dd = load i32, i32* @esp, align 4
  %v9_80493dd = icmp eq i32 %v0_80493dd, -12
  store i1 %v9_80493dd, i1* %zf.global-to-local, align 1
  %v2_80493e0 = add i32 %v0_80493dd, 8
  %v3_80493e0 = inttoptr i32 %v2_80493e0 to i32*
  store i32 %v3_80493d8, i32* %v3_80493e0, align 4
  %v1_80493e1 = add i32 %v0_80493dd, 120
  %v2_80493e1 = inttoptr i32 %v1_80493e1 to i32*
  %v3_80493e1 = load i32, i32* %v2_80493e1, align 4
  %v2_80493e5 = add i32 %v0_80493dd, 4
  %v3_80493e5 = inttoptr i32 %v2_80493e5 to i32*
  store i32 %v3_80493e1, i32* %v3_80493e5, align 4
  %v1_80493e6 = add i32 %v0_80493dd, 147
  store i32 %v1_80493e6, i32* @ecx, align 4
  %v3_80493ed = inttoptr i32 %v0_80493dd to i32*
  store i32 %v1_80493e6, i32* %v3_80493ed, align 4
  %v0_80493ee = call i32 @function_8051cd0()
  %v0_80493f3 = load i32, i32* @esp, align 4
  %v1_80493f6 = add i32 %v0_80493ee, 1
  %v8_80493f6 = icmp eq i32 %v1_80493f6, 0
  store i1 %v8_80493f6, i1* %zf.global-to-local, align 1
  store i32 %v1_80493f6, i32* %eax.global-to-local, align 4
  br i1 %v8_80493f6, label %dec_label_pc_8049854, label %dec_label_pc_80493fd

dec_label_pc_80493fd:                             ; preds = %dec_label_pc_80493d2
  %v0_80493fd = load i32, i32* @ebx, align 4
  %v2_80493fd = add i32 %v0_80493f3, 12
  %v3_80493fd = inttoptr i32 %v2_80493fd to i32*
  store i32 %v0_80493fd, i32* %v3_80493fd, align 4
  %v0_80493fe = load i32, i32* @ebx, align 4
  %v2_80493fe = add i32 %v0_80493f3, 8
  %v3_80493fe = inttoptr i32 %v2_80493fe to i32*
  store i32 %v0_80493fe, i32* %v3_80493fe, align 4
  %v1_80493ff = add i32 %v0_80493f3, 4
  %v2_80493ff = inttoptr i32 %v1_80493ff to i32*
  store i32 0, i32* %v2_80493ff, align 4
  %v2_8049401 = inttoptr i32 %v0_80493f3 to i32*
  store i32 38, i32* %v2_8049401, align 4
  %v3_8049403 = call i32 @function_8050fe0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049403, i32* %eax.global-to-local, align 4
  %v0_8049408 = load i32, i32* @esp, align 4
  %v9_8049408 = icmp eq i32 %v0_8049408, -12
  store i1 %v9_8049408, i1* %zf.global-to-local, align 1
  %v2_804940b = add i32 %v0_8049408, 8
  %v3_804940b = inttoptr i32 %v2_804940b to i32*
  store i32 %v3_8049403, i32* %v3_804940b, align 4
  %v1_804940c = add i32 %v0_8049408, 120
  %v2_804940c = inttoptr i32 %v1_804940c to i32*
  %v3_804940c = load i32, i32* %v2_804940c, align 4
  store i32 %v3_804940c, i32* @ecx, align 4
  %v2_8049410 = add i32 %v0_8049408, 4
  %v3_8049410 = inttoptr i32 %v2_8049410 to i32*
  store i32 %v3_804940c, i32* %v3_8049410, align 4
  %v1_8049411 = add i32 %v0_8049408, 147
  store i32 %v1_8049411, i32* %eax.global-to-local, align 4
  %v3_8049418 = inttoptr i32 %v0_8049408 to i32*
  store i32 %v1_8049411, i32* %v3_8049418, align 4
  %v0_8049419 = call i32 @function_8051cd0()
  store i32 %v0_8049419, i32* %eax.global-to-local, align 4
  %v0_804941e = load i32, i32* @esp, align 4
  %v6_804941e = icmp eq i32 %v0_804941e, -16
  store i1 %v6_804941e, i1* %zf.global-to-local, align 1
  store i32 %v0_8049419, i32* %ebx.global-to-local, align 4
  %v3_8049423 = add i32 %v0_8049419, 147
  %v4_8049423 = add i32 %v3_8049423, %v0_804941e
  %v5_8049423 = inttoptr i32 %v4_8049423 to i8*
  %v6_8049423 = load i8, i8* %v5_8049423, align 1
  %v12_8049423 = icmp eq i8 %v6_8049423, 32
  %v1_804942b = zext i1 %v12_8049423 to i32
  %v1_804942e = add i32 %v0_804941e, 147
  store i32 %v1_804942e, i32* %esi.global-to-local, align 4
  store i32 %v1_804942b, i32* %eax.global-to-local, align 4
  %v1_804943a = add i32 %v0_804941e, 12
  %v2_804943a = inttoptr i32 %v1_804943a to i32*
  store i32 2, i32* %v2_804943a, align 4
  %v1_804943c = add i32 %v0_804941e, 8
  %v2_804943c = inttoptr i32 %v1_804943c to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80548a6.10 to i32), i32* %v2_804943c, align 4
  %v0_8049441 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049441 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049441 = add i32 %v1_8049441, %v0_8049441
  store i32 %v2_8049441, i32* @ebx, align 4
  %v1_8049443 = add i32 %v0_804941e, 120
  %v2_8049443 = inttoptr i32 %v1_8049443 to i32*
  %v3_8049443 = load i32, i32* %v2_8049443, align 4
  %v2_8049447 = sub i32 %v3_8049443, %v2_8049441
  store i32 %v2_8049447, i32* %eax.global-to-local, align 4
  %v0_8049449 = load i32, i32* %esi.global-to-local, align 4
  %v2_8049449 = add i32 %v0_8049449, %v2_8049441
  %v12_8049449 = icmp eq i32 %v2_8049449, 0
  store i1 %v12_8049449, i1* %zf.global-to-local, align 1
  store i32 %v2_8049449, i32* @esi, align 4
  %v2_804944b = add i32 %v0_804941e, 4
  %v3_804944b = inttoptr i32 %v2_804944b to i32*
  store i32 %v2_8049447, i32* %v3_804944b, align 4
  %v0_804944c = load i32, i32* @esi, align 4
  %v3_804944c = inttoptr i32 %v0_804941e to i32*
  store i32 %v0_804944c, i32* %v3_804944c, align 4
  %v0_804944d = call i32 @function_8051a90()
  store i32 %v0_804944d, i32* %eax.global-to-local, align 4
  %v0_8049452 = load i32, i32* @esp, align 4
  store i32 %v0_804944d, i32* %edx.global-to-local, align 4
  %v10_8049457 = icmp eq i32 %v0_804944d, -1
  store i1 %v10_8049457, i1* %zf.global-to-local, align 1
  br i1 %v10_8049457, label %dec_label_pc_8049854, label %dec_label_pc_8049460

dec_label_pc_8049460:                             ; preds = %dec_label_pc_80493fd
  %v10_8049460 = icmp eq i32 %v0_804944d, 1
  store i1 %v10_8049460, i1* %zf.global-to-local, align 1
  %v7_8049463 = icmp sgt i32 %v0_804944d, 1
  br i1 %v7_8049463, label %dec_label_pc_8049465, label %dec_label_pc_8049468

dec_label_pc_8049465:                             ; preds = %dec_label_pc_8049460
  %v1_8049465 = add i32 %v0_804944d, -2
  %v9_8049465 = icmp eq i32 %v1_8049465, 0
  store i1 %v9_8049465, i1* %zf.global-to-local, align 1
  store i32 %v1_8049465, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8049468

dec_label_pc_8049468:                             ; preds = %dec_label_pc_8049460, %dec_label_pc_8049465
  %v0_8049471 = phi i32 [ %v0_804944d, %dec_label_pc_8049460 ], [ %v1_8049465, %dec_label_pc_8049465 ]
  %v1_8049468 = add i32 %v0_8049452, 20920
  %v1_804946f = load i32, i32* @ebx, align 4
  %v2_804946f = add i32 %v1_8049468, %v1_804946f
  %v12_804946f = icmp eq i32 %v2_804946f, 0
  store i1 %v12_804946f, i1* %zf.global-to-local, align 1
  store i32 %v2_804946f, i32* %eax.global-to-local, align 4
  %v1_8049471 = add i32 %v0_8049471, 1
  store i32 %v1_8049471, i32* @ebx, align 4
  %v2_8049474 = add i32 %v0_8049471, -20773
  %v3_8049474 = add i32 %v2_8049474, %v2_804946f
  %v4_8049474 = inttoptr i32 %v3_8049474 to i8*
  store i8 0, i8* %v4_8049474, align 1
  %v0_804947c = load i32, i32* @esp, align 4
  %v1_804947c = add i32 %v0_804947c, -4
  %v2_804947c = inttoptr i32 %v1_804947c to i32*
  store i32 4, i32* %v2_804947c, align 4
  %v1_804947e = add i32 %v0_804947c, -8
  %v2_804947e = inttoptr i32 %v1_804947e to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_80548ab.15 to i32), i32* %v2_804947e, align 4
  %v0_8049483 = load i32, i32* @ebx, align 4
  %v2_8049483 = add i32 %v0_804947c, -12
  %v3_8049483 = inttoptr i32 %v2_8049483 to i32*
  store i32 %v0_8049483, i32* %v3_8049483, align 4
  %v0_8049484 = load i32, i32* @esi, align 4
  %v2_8049484 = add i32 %v0_804947c, -16
  %v3_8049484 = inttoptr i32 %v2_8049484 to i32*
  store i32 %v0_8049484, i32* %v3_8049484, align 4
  %v0_8049485 = call i32 @function_8051a90()
  store i32 %v0_8049485, i32* @eax, align 4
  %v0_804948a = load i32, i32* @esp, align 4
  %v9_804948d = icmp eq i32 %v0_8049485, 4
  store i1 %v9_804948d, i1* %zf.global-to-local, align 1
  br i1 %v9_804948d, label %dec_label_pc_8049b1d, label %dec_label_pc_8049496

dec_label_pc_8049496:                             ; preds = %dec_label_pc_8049468
  %v1_804948a = add i32 %v0_804948a, 16
  %v0_8049496 = load i32, i32* @esi, align 4
  %v1_8049496 = inttoptr i32 %v0_8049496 to i8*
  %v2_8049496 = load i8, i8* %v1_8049496, align 1
  %v11_8049496 = icmp eq i8 %v2_8049496, 47
  store i1 %v11_8049496, i1* %zf.global-to-local, align 1
  br i1 %v11_8049496, label %dec_label_pc_8049c88, label %dec_label_pc_804949f

dec_label_pc_804949f:                             ; preds = %dec_label_pc_8049cbd, %dec_label_pc_8049c88, %dec_label_pc_8049bdf, %dec_label_pc_8049bbc, %dec_label_pc_8049496, %dec_label_pc_8049c14
  %v0_804949f = phi i32 [ %v1_8049cd2, %dec_label_pc_8049cbd ], [ %v1_8049cb2, %dec_label_pc_8049c88 ], [ %v1_8049c09, %dec_label_pc_8049bdf ], [ %v1_8049bd1, %dec_label_pc_8049bbc ], [ %v1_804948a, %dec_label_pc_8049496 ], [ %v1_8049c29, %dec_label_pc_8049c14 ]
  %v1_804949f = add i32 %v0_804949f, 92
  %v2_804949f = inttoptr i32 %v1_804949f to i32*
  %v3_804949f = load i32, i32* %v2_804949f, align 4
  store i32 %v3_804949f, i32* %edx.global-to-local, align 4
  %v1_80494a3 = add i32 %v3_804949f, -1448
  %v2_80494a3 = inttoptr i32 %v1_80494a3 to i8*
  store i8 1, i8* %v2_80494a3, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_80494af:                             ; preds = %dec_label_pc_8048d81
  %v1_80494af = call i32 @function_80524b9(i32 %stack_var_-20924.0.ph)
  store i32 %v1_80494af, i32* %eax.global-to-local, align 4
  %v0_80494b4 = load i32, i32* @esp, align 4
  %v1_80494b4 = add i32 %v0_80494b4, 76
  %v2_80494b4 = inttoptr i32 %v1_80494b4 to i32*
  %v3_80494b4 = load i32, i32* %v2_80494b4, align 4
  store i32 %v3_80494b4, i32* %ecx.global-to-local, align 4
  %v1_80494b8 = add i32 %v0_80494b4, 92
  %v2_80494b8 = inttoptr i32 %v1_80494b8 to i32*
  %v3_80494b8 = load i32, i32* %v2_80494b8, align 4
  store i32 %v3_80494b8, i32* %edx.global-to-local, align 4
  %v1_80494be = add i32 %v3_80494b4, 1472
  store i32 %v1_80494be, i32* @ebp, align 4
  store i32 %v1_80494af, i32* @edi, align 4
  %v1_80494c6 = add i32 %v3_80494b4, 2116
  store i32 %v1_80494c6, i32* @esi, align 4
  %v1_80494cc = add i32 %v3_80494b8, 660
  %v2_80494cc = inttoptr i32 %v1_80494cc to i32*
  %v3_80494cc = load i32, i32* %v2_80494cc, align 4
  %v9_80494cc = icmp eq i32 %v3_80494cc, 1024
  store i1 %v9_80494cc, i1* %zf.global-to-local, align 1
  br i1 %v9_80494cc, label %dec_label_pc_8049605, label %dec_label_pc_80494dc

dec_label_pc_80494dc:                             ; preds = %dec_label_pc_80494af, %dec_label_pc_8049605, %dec_label_pc_80495f1
  %v0_80494dc = phi i32 [ %v0_80495e0, %dec_label_pc_80495f1 ], [ %v0_80494b4, %dec_label_pc_80494af ], [ %v0_80494dc.pre.pre, %dec_label_pc_8049605 ]
  %v1_80494dc = add i32 %v0_80494dc, 92
  %v2_80494dc = inttoptr i32 %v1_80494dc to i32*
  %v3_80494dc = load i32, i32* %v2_80494dc, align 4
  store i32 %v3_80494dc, i32* %eax.global-to-local, align 4
  %v0_80494e0 = load i32, i32* @edi, align 4
  %v1_80494e0 = inttoptr i32 %v0_80494e0 to i32*
  store i32 0, i32* %v1_80494e0, align 4
  %v0_80494e6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80494e6 = add i32 %v0_80494e6, 660
  %v2_80494e6 = inttoptr i32 %v1_80494e6 to i32*
  %v3_80494e6 = load i32, i32* %v2_80494e6, align 4
  store i32 %v3_80494e6, i32* %edx.global-to-local, align 4
  %v2_80494f1 = sub i32 1024, %v3_80494e6
  %v12_80494f1 = icmp eq i32 %v2_80494f1, 0
  store i1 %v12_80494f1, i1* %zf.global-to-local, align 1
  store i32 %v2_80494f1, i32* %eax.global-to-local, align 4
  %v0_80494f3 = load i32, i32* @esp, align 4
  %v1_80494f3 = add i32 %v0_80494f3, -4
  %v2_80494f3 = inttoptr i32 %v1_80494f3 to i32*
  store i32 16384, i32* %v2_80494f3, align 4
  %v0_80494f8 = load i32, i32* @esi, align 4
  %v1_80494f8 = load i32, i32* %edx.global-to-local, align 4
  %v2_80494f8 = add i32 %v1_80494f8, %v0_80494f8
  store i32 %v2_80494f8, i32* %edx.global-to-local, align 4
  %v0_80494fb = load i32, i32* %eax.global-to-local, align 4
  %v2_80494fb = add i32 %v0_80494f3, -8
  %v3_80494fb = inttoptr i32 %v2_80494fb to i32*
  store i32 %v0_80494fb, i32* %v3_80494fb, align 4
  %v0_80494fc = load i32, i32* %edx.global-to-local, align 4
  %v2_80494fc = add i32 %v0_80494f3, -12
  %v3_80494fc = inttoptr i32 %v2_80494fc to i32*
  store i32 %v0_80494fc, i32* %v3_80494fc, align 4
  %v1_80494fd = add i32 %v0_80494f3, 92
  %v2_80494fd = inttoptr i32 %v1_80494fd to i32*
  %v3_80494fd = load i32, i32* %v2_80494fd, align 4
  store i32 %v3_80494fd, i32* %edx.global-to-local, align 4
  %v1_8049501 = add i32 %v3_80494fd, -1452
  %v2_8049501 = inttoptr i32 %v1_8049501 to i32*
  %v3_8049501 = load i32, i32* %v2_8049501, align 4
  store i32 %v3_8049501, i32* %eax.global-to-local, align 4
  %v2_8049507 = add i32 %v0_80494f3, -16
  %v3_8049507 = inttoptr i32 %v2_8049507 to i32*
  store i32 %v3_8049501, i32* %v3_8049507, align 4
  %v0_8049508 = call i32 @function_805264e()
  store i32 %v0_8049508, i32* %eax.global-to-local, align 4
  %v0_804950d = load i32, i32* @esp, align 4
  %v1_804950d = add i32 %v0_804950d, 16
  %v1_8049510 = icmp eq i32 %v0_8049508, 0
  store i1 %v1_8049510, i1* %zf.global-to-local, align 1
  br i1 %v1_8049510, label %dec_label_pc_8048e44, label %dec_label_pc_8049518

dec_label_pc_8049518:                             ; preds = %dec_label_pc_80494dc
  %v10_8049518 = icmp eq i32 %v0_8049508, -1
  store i1 %v10_8049518, i1* %zf.global-to-local, align 1
  br i1 %v10_8049518, label %dec_label_pc_8049b0f, label %dec_label_pc_8049521

dec_label_pc_8049521:                             ; preds = %dec_label_pc_8049518
  %v1_8049521 = add i32 %v0_804950d, 108
  %v2_8049521 = inttoptr i32 %v1_8049521 to i32*
  %v3_8049521 = load i32, i32* %v2_8049521, align 4
  store i32 %v3_8049521, i32* %edx.global-to-local, align 4
  %v1_8049525 = add i32 %v3_8049521, 660
  %v2_8049525 = inttoptr i32 %v1_8049525 to i32*
  %v3_8049525 = load i32, i32* %v2_8049525, align 4
  %v2_804952b = add i32 %v3_8049525, %v0_8049508
  %v12_804952b = icmp eq i32 %v2_804952b, 0
  store i1 %v12_804952b, i1* %zf.global-to-local, align 1
  store i32 %v2_804952b, i32* %ecx.global-to-local, align 4
  store i32 %v2_804952b, i32* %v2_8049525, align 4
  %v0_8049533 = load i32, i32* @esp, align 4
  %v1_8049533 = add i32 %v0_8049533, 116
  %v2_8049533 = inttoptr i32 %v1_8049533 to i32*
  %v3_8049533 = load i32, i32* %v2_8049533, align 4
  store i32 %v3_8049533, i32* %ecx.global-to-local, align 4
  %v1_8049537 = load i32, i32* %edx.global-to-local, align 4
  %v2_8049537 = add i32 %v1_8049537, -1444
  %v3_8049537 = inttoptr i32 %v2_8049537 to i32*
  store i32 %v3_8049533, i32* %v3_8049537, align 4
  %v0_80495d1.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80495d1

dec_label_pc_8049542:                             ; preds = %dec_label_pc_80495d1
  %v1_8049542 = add i32 %v0_8049542, 660
  %v2_8049542 = inttoptr i32 %v1_8049542 to i32*
  %v3_8049542 = load i32, i32* %v2_8049542, align 4
  store i32 %v3_8049542, i32* %edx.global-to-local, align 4
  store i32 %v3_80495d1, i32* @ebx, align 4
  %v2_804954a = sub i32 %v3_80495d1, %v3_8049542
  %v8_804954a = xor i32 %v3_8049542, %v3_80495d1
  %v9_804954a = xor i32 %v2_804954a, %v3_80495d1
  %v10_804954a = and i32 %v9_804954a, %v8_804954a
  %v11_804954a = icmp slt i32 %v10_804954a, 0
  %v12_804954a = icmp eq i32 %v2_804954a, 0
  store i1 %v12_804954a, i1* %zf.global-to-local, align 1
  %v13_804954a = icmp slt i32 %v2_804954a, 0
  %v3_804954c = icmp ne i1 %v13_804954a, %v11_804954a
  %v4_804954c = or i1 %v12_804954a, %v3_804954c
  br i1 %v4_804954c, label %dec_label_pc_8049550, label %dec_label_pc_804954e

dec_label_pc_804954e:                             ; preds = %dec_label_pc_8049542
  store i32 %v3_8049542, i32* @ebx, align 4
  br label %dec_label_pc_8049550

dec_label_pc_8049550:                             ; preds = %dec_label_pc_8049542, %dec_label_pc_804954e
  %v1_8049554 = phi i32 [ %v3_80495d1, %dec_label_pc_8049542 ], [ %v3_8049542, %dec_label_pc_804954e ]
  %v0_8049550 = load i32, i32* @esp, align 4
  %v1_8049550 = add i32 %v0_8049550, 92
  %v2_8049550 = inttoptr i32 %v1_8049550 to i32*
  %v3_8049550 = load i32, i32* %v2_8049550, align 4
  store i32 %v3_8049550, i32* %edx.global-to-local, align 4
  %v2_8049554 = sub i32 %v3_80495d1, %v1_8049554
  store i32 %v2_8049554, i32* %eax.global-to-local, align 4
  %v2_8049556 = add i32 %v3_8049550, 12
  %v3_8049556 = inttoptr i32 %v2_8049556 to i32*
  store i32 %v2_8049554, i32* %v3_8049556, align 4
  %v0_8049559 = load i32, i32* %edx.global-to-local, align 4
  %v1_8049559 = inttoptr i32 %v0_8049559 to i32*
  %v2_8049559 = load i32, i32* %v1_8049559, align 4
  %v11_8049559 = icmp eq i32 %v2_8049559, 1
  store i1 %v11_8049559, i1* %zf.global-to-local, align 1
  br i1 %v11_8049559, label %dec_label_pc_8049636, label %dec_label_pc_8049562

dec_label_pc_8049562:                             ; preds = %dec_label_pc_8049550, %dec_label_pc_8049636, %dec_label_pc_80495dc
  %v0_8049562 = load i32, i32* @esp, align 4
  %v1_8049562 = add i32 %v0_8049562, 92
  %v2_8049562 = inttoptr i32 %v1_8049562 to i32*
  %v3_8049562 = load i32, i32* %v2_8049562, align 4
  store i32 %v3_8049562, i32* %ecx.global-to-local, align 4
  %v1_8049566 = add i32 %v3_8049562, 12
  %v2_8049566 = inttoptr i32 %v1_8049566 to i32*
  %v3_8049566 = load i32, i32* %v2_8049566, align 4
  store i32 %v3_8049566, i32* %eax.global-to-local, align 4
  %v1_8049569 = icmp eq i32 %v3_8049566, 0
  store i1 %v1_8049569, i1* %zf.global-to-local, align 1
  %v1_804956b = icmp eq i1 %v1_8049569, false
  br i1 %v1_804956b, label %dec_label_pc_804958e, label %dec_label_pc_804956d

dec_label_pc_804956d:                             ; preds = %dec_label_pc_8049562
  %v1_804956d = add i32 %v3_8049562, 8
  %v2_804956d = inttoptr i32 %v1_804956d to i32*
  %v3_804956d = load i32, i32* %v2_804956d, align 4
  %v12_804956d = icmp eq i32 %v3_804956d, 1
  store i1 %v12_804956d, i1* %zf.global-to-local, align 1
  br i1 %v12_804956d, label %dec_label_pc_80496da, label %dec_label_pc_8049577

dec_label_pc_8049577:                             ; preds = %dec_label_pc_804956d
  %v3_8049577 = load i32, i32* %v2_8049562, align 4
  store i32 %v3_8049577, i32* %ecx.global-to-local, align 4
  %v1_804957b = add i32 %v3_8049577, 660
  %v2_804957b = inttoptr i32 %v1_804957b to i32*
  %v3_804957b = load i32, i32* %v2_804957b, align 4
  %v1_8049581 = load i32, i32* @ebx, align 4
  %v2_8049581 = sub i32 %v3_804957b, %v1_8049581
  %v12_8049581 = icmp eq i32 %v2_8049581, 0
  store i32 %v2_8049581, i32* %eax.global-to-local, align 4
  %v2_8049583 = add i32 %v3_8049577, 12
  %v3_8049583 = inttoptr i32 %v2_8049583 to i32*
  store i32 %v2_8049581, i32* %v3_8049583, align 4
  store i1 %v12_8049581, i1* %zf.global-to-local, align 1
  br i1 %v12_8049581, label %dec_label_pc_8049af8, label %dec_label_pc_804958e

dec_label_pc_804958e:                             ; preds = %dec_label_pc_8049577, %dec_label_pc_8049562, %dec_label_pc_80496da, %dec_label_pc_8049764
  %v0_804958e = load i32, i32* @ebx, align 4
  %v1_804958e = icmp eq i32 %v0_804958e, 0
  store i1 %v1_804958e, i1* %zf.global-to-local, align 1
  br i1 %v1_804958e, label %dec_label_pc_80495e0, label %dec_label_pc_8049592

dec_label_pc_8049592:                             ; preds = %dec_label_pc_804958e
  %v0_8049592 = load i32, i32* @esp, align 4
  %v1_8049592 = add i32 %v0_8049592, 92
  %v2_8049592 = inttoptr i32 %v1_8049592 to i32*
  %v3_8049592 = load i32, i32* %v2_8049592, align 4
  store i32 %v3_8049592, i32* %edx.global-to-local, align 4
  %v1_8049596 = add i32 %v3_8049592, 660
  %v2_8049596 = inttoptr i32 %v1_8049596 to i32*
  %v3_8049596 = load i32, i32* %v2_8049596, align 4
  %v2_804959c = sub i32 %v3_8049596, %v0_804958e
  %v12_804959c = icmp eq i32 %v2_804959c, 0
  store i1 %v12_804959c, i1* %zf.global-to-local, align 1
  store i32 %v2_804959c, i32* %eax.global-to-local, align 4
  store i32 %v2_804959c, i32* %v2_8049596, align 4
  %v0_80495a4 = load i32, i32* %edx.global-to-local, align 4
  %v1_80495a4 = load i32, i32* @esp, align 4
  %v2_80495a4 = add i32 %v1_80495a4, -4
  %v3_80495a4 = inttoptr i32 %v2_80495a4 to i32*
  store i32 %v0_80495a4, i32* %v3_80495a4, align 4
  %v0_80495a5 = load i32, i32* %eax.global-to-local, align 4
  %v2_80495a5 = add i32 %v1_80495a4, -8
  %v3_80495a5 = inttoptr i32 %v2_80495a5 to i32*
  store i32 %v0_80495a5, i32* %v3_80495a5, align 4
  %v0_80495a6 = load i32, i32* @esi, align 4
  %v1_80495a6 = load i32, i32* @ebx, align 4
  %v2_80495a6 = add i32 %v1_80495a6, %v0_80495a6
  store i32 %v2_80495a6, i32* %eax.global-to-local, align 4
  %v2_80495a9 = add i32 %v1_80495a4, -12
  %v3_80495a9 = inttoptr i32 %v2_80495a9 to i32*
  store i32 %v2_80495a6, i32* %v3_80495a9, align 4
  %v0_80495aa = load i32, i32* @esi, align 4
  %v2_80495aa = add i32 %v1_80495a4, -16
  %v3_80495aa = inttoptr i32 %v2_80495aa to i32*
  store i32 %v0_80495aa, i32* %v3_80495aa, align 4
  %v4_80495ab = call i32 @function_80524e3(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80495ab, i32* %eax.global-to-local, align 4
  %v0_80495b0 = load i32, i32* @esp, align 4
  %v1_80495b0 = add i32 %v0_80495b0, 108
  %v2_80495b0 = inttoptr i32 %v1_80495b0 to i32*
  %v3_80495b0 = load i32, i32* %v2_80495b0, align 4
  store i32 %v3_80495b0, i32* %ecx.global-to-local, align 4
  %v1_80495b4 = add i32 %v0_80495b0, 92
  %v2_80495b4 = inttoptr i32 %v1_80495b4 to i32*
  %v3_80495b4 = load i32, i32* %v2_80495b4, align 4
  store i32 %v3_80495b4, i32* %edx.global-to-local, align 4
  %v1_80495b8 = add i32 %v3_80495b0, 660
  %v2_80495b8 = inttoptr i32 %v1_80495b8 to i32*
  %v3_80495b8 = load i32, i32* %v2_80495b8, align 4
  store i32 %v3_80495b8, i32* %eax.global-to-local, align 4
  %v1_80495c1 = icmp eq i32 %v3_80495b8, 0
  store i1 %v1_80495c1, i1* %zf.global-to-local, align 1
  %v2_80495c3 = add i32 %v3_80495b4, 2116
  %v3_80495c3 = add i32 %v2_80495c3, %v3_80495b8
  %v4_80495c3 = inttoptr i32 %v3_80495c3 to i8*
  store i8 0, i8* %v4_80495c3, align 1
  %v0_80495cb = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_80495cb, label %dec_label_pc_80495e0, label %dec_label_pc_80495cd

dec_label_pc_80495cd:                             ; preds = %dec_label_pc_8049592
  %v0_80495cd = load i32, i32* @esp, align 4
  %v1_80495cd = add i32 %v0_80495cd, 92
  %v2_80495cd = inttoptr i32 %v1_80495cd to i32*
  %v3_80495cd = load i32, i32* %v2_80495cd, align 4
  store i32 %v3_80495cd, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80495d1

dec_label_pc_80495d1:                             ; preds = %dec_label_pc_8049521, %dec_label_pc_80495cd
  %v0_8049542 = phi i32 [ %v0_80495d1.pre, %dec_label_pc_8049521 ], [ %v3_80495cd, %dec_label_pc_80495cd ]
  %v1_80495d1 = add i32 %v0_8049542, 12
  %v2_80495d1 = inttoptr i32 %v1_80495d1 to i32*
  %v3_80495d1 = load i32, i32* %v2_80495d1, align 4
  store i32 %v3_80495d1, i32* %eax.global-to-local, align 4
  %v1_80495d4 = icmp eq i32 %v3_80495d1, 0
  store i1 %v1_80495d4, i1* %zf.global-to-local, align 1
  %tmp146 = icmp slt i32 %v3_80495d1, 1
  %tmp147 = icmp eq i1 %tmp146, false
  br i1 %tmp147, label %dec_label_pc_8049542, label %dec_label_pc_80495dc

dec_label_pc_80495dc:                             ; preds = %dec_label_pc_80495d1
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8049562

dec_label_pc_80495e0:                             ; preds = %dec_label_pc_8049592, %dec_label_pc_804958e
  %v0_80495e0 = load i32, i32* @esp, align 4
  %v1_80495e0 = add i32 %v0_80495e0, 92
  %v2_80495e0 = inttoptr i32 %v1_80495e0 to i32*
  %v3_80495e0 = load i32, i32* %v2_80495e0, align 4
  store i32 %v3_80495e0, i32* %eax.global-to-local, align 4
  %v1_80495e4 = add i32 %v3_80495e0, -1448
  %v2_80495e4 = inttoptr i32 %v1_80495e4 to i8*
  %v3_80495e4 = load i8, i8* %v2_80495e4, align 1
  %v12_80495e4 = icmp eq i8 %v3_80495e4, 7
  store i1 %v12_80495e4, i1* %zf.global-to-local, align 1
  %v1_80495eb = icmp eq i1 %v12_80495e4, false
  br i1 %v1_80495eb, label %dec_label_pc_8048d91, label %dec_label_pc_80495f1

dec_label_pc_80495f1:                             ; preds = %dec_label_pc_80495e0
  %v3_80495f1 = load i32, i32* %v2_80495e0, align 4
  store i32 %v3_80495f1, i32* %edx.global-to-local, align 4
  %v1_80495f5 = add i32 %v3_80495f1, 660
  %v2_80495f5 = inttoptr i32 %v1_80495f5 to i32*
  %v3_80495f5 = load i32, i32* %v2_80495f5, align 4
  %v9_80495f5 = icmp eq i32 %v3_80495f5, 1024
  store i1 %v9_80495f5, i1* %zf.global-to-local, align 1
  %v1_80495ff = icmp eq i1 %v9_80495f5, false
  br i1 %v1_80495ff, label %dec_label_pc_80494dc, label %dec_label_pc_8049605

dec_label_pc_8049605:                             ; preds = %dec_label_pc_80495f1, %dec_label_pc_80494af
  %v1_8049605 = phi i32 [ %v0_80494b4, %dec_label_pc_80494af ], [ %v0_80495e0, %dec_label_pc_80495f1 ]
  %v0_8049605 = phi i32 [ %v1_80494af, %dec_label_pc_80494af ], [ %v3_80495e0, %dec_label_pc_80495f1 ]
  %v2_8049605 = add i32 %v1_8049605, -4
  %v3_8049605 = inttoptr i32 %v2_8049605 to i32*
  store i32 %v0_8049605, i32* %v3_8049605, align 4
  %v1_8049606 = add i32 %v1_8049605, -8
  %v2_8049606 = inttoptr i32 %v1_8049606 to i32*
  store i32 960, i32* %v2_8049606, align 4
  %v1_804960b = add i32 %v1_8049605, 76
  %v2_804960b = inttoptr i32 %v1_804960b to i32*
  %v3_804960b = load i32, i32* %v2_804960b, align 4
  %v1_804960f = add i32 %v3_804960b, 2180
  %v9_804960f = icmp eq i32 %v1_804960f, 0
  store i1 %v9_804960f, i1* %zf.global-to-local, align 1
  store i32 %v1_804960f, i32* %eax.global-to-local, align 4
  %v2_8049614 = add i32 %v1_8049605, -12
  %v3_8049614 = inttoptr i32 %v2_8049614 to i32*
  store i32 %v1_804960f, i32* %v3_8049614, align 4
  %v0_8049615 = load i32, i32* @esi, align 4
  %v2_8049615 = add i32 %v1_8049605, -16
  %v3_8049615 = inttoptr i32 %v2_8049615 to i32*
  store i32 %v0_8049615, i32* %v3_8049615, align 4
  %v4_8049616 = call i32 @function_80524e3(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049616, i32* %eax.global-to-local, align 4
  %v0_804961b = load i32, i32* @esp, align 4
  %v1_804961b = add i32 %v0_804961b, 108
  %v2_804961b = inttoptr i32 %v1_804961b to i32*
  %v3_804961b = load i32, i32* %v2_804961b, align 4
  store i32 %v3_804961b, i32* %ecx.global-to-local, align 4
  %v1_804961f = add i32 %v3_804961b, 660
  %v2_804961f = inttoptr i32 %v1_804961f to i32*
  %v3_804961f = load i32, i32* %v2_804961f, align 4
  %v1_8049628 = add i32 %v3_804961f, -64
  %v6_8049628 = icmp eq i32 %v1_8049628, 0
  store i1 %v6_8049628, i1* %zf.global-to-local, align 1
  store i32 %v1_8049628, i32* %eax.global-to-local, align 4
  store i32 %v1_8049628, i32* %v2_804961f, align 4
  %v0_80494dc.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80494dc

dec_label_pc_8049636:                             ; preds = %dec_label_pc_8049550
  %v0_8049636 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049636 = load i32, i32* @esp, align 4
  %v2_8049636 = add i32 %v1_8049636, -4
  %v3_8049636 = inttoptr i32 %v2_8049636 to i32*
  store i32 %v0_8049636, i32* %v3_8049636, align 4
  %v0_8049637 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049637 = add i32 %v1_8049636, -8
  %v3_8049637 = inttoptr i32 %v2_8049637 to i32*
  store i32 %v0_8049637, i32* %v3_8049637, align 4
  %v1_8049638 = add i32 %v1_8049636, -12
  %v2_8049638 = inttoptr i32 %v1_8049638 to i32*
  store i32 0, i32* %v2_8049638, align 4
  %v1_804963a = add i32 %v1_8049636, -16
  %v2_804963a = inttoptr i32 %v1_804963a to i32*
  store i32 36, i32* %v2_804963a, align 4
  %v3_804963c = call i32 @function_8050fe0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_804963c, i32* %eax.global-to-local, align 4
  %v0_8049641 = load i32, i32* @esp, align 4
  %v1_8049641 = add i32 %v0_8049641, -4
  %v2_8049641 = inttoptr i32 %v1_8049641 to i32*
  store i32 11, i32* %v2_8049641, align 4
  %v2_8049643 = add i32 %v0_8049641, -8
  %v3_8049643 = inttoptr i32 %v2_8049643 to i32*
  store i32 %v3_804963c, i32* %v3_8049643, align 4
  %v1_8049644 = add i32 %v0_8049641, 108
  %v2_8049644 = inttoptr i32 %v1_8049644 to i32*
  %v3_8049644 = load i32, i32* %v2_8049644, align 4
  store i32 %v3_8049644, i32* %ecx.global-to-local, align 4
  %v1_8049648 = add i32 %v3_8049644, 660
  %v2_8049648 = inttoptr i32 %v1_8049648 to i32*
  %v3_8049648 = load i32, i32* %v2_8049648, align 4
  store i32 %v3_8049648, i32* %eax.global-to-local, align 4
  %v2_804964e = add i32 %v0_8049641, -12
  %v3_804964e = inttoptr i32 %v2_804964e to i32*
  store i32 %v3_8049648, i32* %v3_804964e, align 4
  %v0_804964f = load i32, i32* @esi, align 4
  %v2_804964f = add i32 %v0_8049641, -16
  %v3_804964f = inttoptr i32 %v2_804964f to i32*
  store i32 %v0_804964f, i32* %v3_804964f, align 4
  %v0_8049650 = call i32 @function_8051a90()
  %v0_8049655 = load i32, i32* @esp, align 4
  %v1_8049658 = add i32 %v0_8049650, 1
  %v8_8049658 = icmp eq i32 %v1_8049658, 0
  store i1 %v8_8049658, i1* %zf.global-to-local, align 1
  store i32 %v1_8049658, i32* %eax.global-to-local, align 4
  br i1 %v8_8049658, label %dec_label_pc_8049562, label %dec_label_pc_804965f

dec_label_pc_804965f:                             ; preds = %dec_label_pc_8049636
  %v2_804965f = add i32 %v0_8049655, 28
  %v3_804965f = inttoptr i32 %v2_804965f to i32*
  store i32 %v1_8049658, i32* %v3_804965f, align 4
  %v0_8049660 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049660 = add i32 %v0_8049655, 24
  %v3_8049660 = inttoptr i32 %v2_8049660 to i32*
  store i32 %v0_8049660, i32* %v3_8049660, align 4
  %v1_8049661 = add i32 %v0_8049655, 20
  %v2_8049661 = inttoptr i32 %v1_8049661 to i32*
  store i32 0, i32* %v2_8049661, align 4
  %v1_8049663 = add i32 %v0_8049655, 16
  %v2_8049663 = inttoptr i32 %v1_8049663 to i32*
  store i32 36, i32* %v2_8049663, align 4
  %v3_8049665 = call i32 @function_8050fe0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049665, i32* %eax.global-to-local, align 4
  %v0_804966a = load i32, i32* @esp, align 4
  %v1_804966a = add i32 %v0_804966a, -4
  %v2_804966a = inttoptr i32 %v1_804966a to i32*
  store i32 11, i32* %v2_804966a, align 4
  %v2_804966c = add i32 %v0_804966a, -8
  %v3_804966c = inttoptr i32 %v2_804966c to i32*
  store i32 %v3_8049665, i32* %v3_804966c, align 4
  %v1_804966d = add i32 %v0_804966a, 108
  %v2_804966d = inttoptr i32 %v1_804966d to i32*
  %v3_804966d = load i32, i32* %v2_804966d, align 4
  store i32 %v3_804966d, i32* %eax.global-to-local, align 4
  %v1_8049671 = add i32 %v3_804966d, 660
  %v2_8049671 = inttoptr i32 %v1_8049671 to i32*
  %v3_8049671 = load i32, i32* %v2_8049671, align 4
  store i32 %v3_8049671, i32* %eax.global-to-local, align 4
  %v2_8049677 = add i32 %v0_804966a, -12
  %v3_8049677 = inttoptr i32 %v2_8049677 to i32*
  store i32 %v3_8049671, i32* %v3_8049677, align 4
  %v0_8049678 = load i32, i32* @esi, align 4
  %v2_8049678 = add i32 %v0_804966a, -16
  %v3_8049678 = inttoptr i32 %v2_8049678 to i32*
  store i32 %v0_8049678, i32* %v3_8049678, align 4
  %v0_8049679 = call i32 @function_8051a90()
  store i32 %v0_8049679, i32* %eax.global-to-local, align 4
  %v0_804967e = load i32, i32* @esp, align 4
  %v1_8049681 = add i32 %v0_804967e, 28
  %v2_8049681 = inttoptr i32 %v1_8049681 to i32*
  store i32 1, i32* %v2_8049681, align 4
  %v1_8049683 = add i32 %v0_804967e, 24
  %v2_8049683 = inttoptr i32 %v1_8049683 to i32*
  store i32 ptrtoint (i32* @global_var_80548ba.16 to i32), i32* %v2_8049683, align 4
  %v1_8049688 = add i32 %v0_804967e, 124
  %v2_8049688 = inttoptr i32 %v1_8049688 to i32*
  %v3_8049688 = load i32, i32* %v2_8049688, align 4
  store i32 %v3_8049688, i32* %edx.global-to-local, align 4
  store i32 %v0_8049679, i32* @ebx, align 4
  %v0_804968e = load i32, i32* @esi, align 4
  %v2_804968e = add i32 %v0_804968e, %v0_8049679
  store i32 %v2_804968e, i32* @edi, align 4
  %v1_8049691 = add i32 %v3_8049688, 660
  %v2_8049691 = inttoptr i32 %v1_8049691 to i32*
  %v3_8049691 = load i32, i32* %v2_8049691, align 4
  %v2_8049697 = sub i32 %v3_8049691, %v0_8049679
  %v12_8049697 = icmp eq i32 %v2_8049697, 0
  store i1 %v12_8049697, i1* %zf.global-to-local, align 1
  store i32 %v2_8049697, i32* %eax.global-to-local, align 4
  %v2_8049699 = add i32 %v0_804967e, 20
  %v3_8049699 = inttoptr i32 %v2_8049699 to i32*
  store i32 %v2_8049697, i32* %v3_8049699, align 4
  %v0_804969a = load i32, i32* @edi, align 4
  %v2_804969a = add i32 %v0_804967e, 16
  %v3_804969a = inttoptr i32 %v2_804969a to i32*
  store i32 %v0_804969a, i32* %v3_804969a, align 4
  %v0_804969b = call i32 @function_8051a90()
  store i32 %v0_804969b, i32* %eax.global-to-local, align 4
  %v0_80496a0 = load i32, i32* @esp, align 4
  %v1_80496a0 = add i32 %v0_80496a0, 92
  %v2_80496a0 = inttoptr i32 %v1_80496a0 to i32*
  %v3_80496a0 = load i32, i32* %v2_80496a0, align 4
  store i32 %v3_80496a0, i32* %ecx.global-to-local, align 4
  %v0_80496a4 = load i32, i32* @ebx, align 4
  %v2_80496a4 = add i32 %v0_80496a4, %v0_804969b
  store i32 %v2_80496a4, i32* @ebx, align 4
  %v2_80496a6 = add i32 %v0_80496a0, 56
  %v3_80496a6 = inttoptr i32 %v2_80496a6 to i32*
  store i32 %v2_80496a4, i32* %v3_80496a6, align 4
  %v0_80496ad = load i32, i32* @ebx, align 4
  %v1_80496ad = load i32, i32* %ecx.global-to-local, align 4
  %v2_80496ad = add i32 %v0_80496ad, 2115
  %v3_80496ad = add i32 %v2_80496ad, %v1_80496ad
  %v4_80496ad = inttoptr i32 %v3_80496ad to i8*
  store i8 0, i8* %v4_80496ad, align 1
  %v0_80496b5 = load i32, i32* @esp, align 4
  %v1_80496b5 = add i32 %v0_80496b5, 92
  %v2_80496b5 = inttoptr i32 %v1_80496b5 to i32*
  %v3_80496b5 = load i32, i32* %v2_80496b5, align 4
  store i32 %v3_80496b5, i32* %eax.global-to-local, align 4
  %v1_80496b9 = add i32 %v3_80496b5, 16
  %v2_80496b9 = inttoptr i32 %v1_80496b9 to i32*
  %v3_80496b9 = load i32, i32* %v2_80496b9, align 4
  %v4_80496b9 = add i32 %v3_80496b9, -4
  %v9_80496b9 = sub i32 3, %v3_80496b9
  %v10_80496b9 = and i32 %v9_80496b9, %v3_80496b9
  %v11_80496b9 = icmp slt i32 %v10_80496b9, 0
  %v12_80496b9 = icmp eq i32 %v4_80496b9, 0
  store i1 %v12_80496b9, i1* %zf.global-to-local, align 1
  %v13_80496b9 = icmp slt i32 %v4_80496b9, 0
  %v3_80496bd = icmp ne i1 %v13_80496b9, %v11_80496b9
  %v4_80496bd = or i1 %v12_80496b9, %v3_80496bd
  br i1 %v4_80496bd, label %dec_label_pc_8049da3, label %dec_label_pc_80496c3

dec_label_pc_80496c3:                             ; preds = %dec_label_pc_8049da3, %dec_label_pc_804965f, %dec_label_pc_8049db8
  %v0_80496c3 = phi i32 [ %v1_8049dac, %dec_label_pc_8049da3 ], [ %v0_80496b5, %dec_label_pc_804965f ], [ %v0_80496c3.pre, %dec_label_pc_8049db8 ]
  %v1_80496c3 = add i32 %v0_80496c3, 92
  %v2_80496c3 = inttoptr i32 %v1_80496c3 to i32*
  %v3_80496c3 = load i32, i32* %v2_80496c3, align 4
  store i32 %v3_80496c3, i32* %edx.global-to-local, align 4
  %v1_80496c7 = add i32 %v3_80496c3, 12
  %v2_80496c7 = inttoptr i32 %v1_80496c7 to i32*
  store i32 -1, i32* %v2_80496c7, align 4
  %v0_80496ce = load i32, i32* %edx.global-to-local, align 4
  %v1_80496ce = add i32 %v0_80496ce, -1448
  %v2_80496ce = inttoptr i32 %v1_80496ce to i8*
  store i8 10, i8* %v2_80496ce, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_80496da:                             ; preds = %dec_label_pc_804956d
  %v1_80496da = add i32 %v0_8049562, -4
  %v2_80496da = inttoptr i32 %v1_80496da to i32*
  store i32 2, i32* %v2_80496da, align 4
  %v1_80496dc = add i32 %v0_8049562, -8
  %v2_80496dc = inttoptr i32 %v1_80496dc to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80548a6.10 to i32), i32* %v2_80496dc, align 4
  %v0_80496e1 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80496e1 = add i32 %v0_80496e1, 660
  %v2_80496e1 = inttoptr i32 %v1_80496e1 to i32*
  %v3_80496e1 = load i32, i32* %v2_80496e1, align 4
  store i32 %v3_80496e1, i32* %eax.global-to-local, align 4
  %v2_80496e7 = add i32 %v0_8049562, -12
  %v3_80496e7 = inttoptr i32 %v2_80496e7 to i32*
  store i32 %v3_80496e1, i32* %v3_80496e7, align 4
  %v0_80496e8 = load i32, i32* @esi, align 4
  %v2_80496e8 = add i32 %v0_8049562, -16
  %v3_80496e8 = inttoptr i32 %v2_80496e8 to i32*
  store i32 %v0_80496e8, i32* %v3_80496e8, align 4
  %v0_80496e9 = call i32 @function_8051a90()
  %v0_80496ee = load i32, i32* @esp, align 4
  %v1_80496f1 = add i32 %v0_80496e9, 1
  %v8_80496f1 = icmp eq i32 %v1_80496f1, 0
  store i1 %v8_80496f1, i1* %zf.global-to-local, align 1
  store i32 %v1_80496f1, i32* %eax.global-to-local, align 4
  br i1 %v8_80496f1, label %dec_label_pc_804958e, label %dec_label_pc_80496f8

dec_label_pc_80496f8:                             ; preds = %dec_label_pc_80496da
  %v1_80496f8 = add i32 %v0_80496ee, 12
  %v2_80496f8 = inttoptr i32 %v1_80496f8 to i32*
  store i32 2, i32* %v2_80496f8, align 4
  %v1_80496fa = add i32 %v0_80496ee, 8
  %v2_80496fa = inttoptr i32 %v1_80496fa to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80548a6.10 to i32), i32* %v2_80496fa, align 4
  %v1_80496ff = add i32 %v0_80496ee, 108
  %v2_80496ff = inttoptr i32 %v1_80496ff to i32*
  %v3_80496ff = load i32, i32* %v2_80496ff, align 4
  store i32 %v3_80496ff, i32* %eax.global-to-local, align 4
  %v1_8049703 = add i32 %v3_80496ff, 660
  %v2_8049703 = inttoptr i32 %v1_8049703 to i32*
  %v3_8049703 = load i32, i32* %v2_8049703, align 4
  %v2_8049709 = add i32 %v0_80496ee, 4
  %v3_8049709 = inttoptr i32 %v2_8049709 to i32*
  store i32 %v3_8049703, i32* %v3_8049709, align 4
  %v0_804970a = load i32, i32* @esi, align 4
  %v3_804970a = inttoptr i32 %v0_80496ee to i32*
  store i32 %v0_804970a, i32* %v3_804970a, align 4
  %v0_804970b = call i32 @function_8051a90()
  store i32 %v0_804970b, i32* %eax.global-to-local, align 4
  %v0_8049710 = load i32, i32* @esp, align 4
  %v1_8049710 = add i32 %v0_8049710, 92
  %v2_8049710 = inttoptr i32 %v1_8049710 to i32*
  %v3_8049710 = load i32, i32* %v2_8049710, align 4
  store i32 %v3_8049710, i32* %edx.global-to-local, align 4
  store i32 %v0_804970b, i32* @ebx, align 4
  %v2_8049716 = add i32 %v0_804970b, 2114
  %v3_8049716 = add i32 %v2_8049716, %v3_8049710
  %v4_8049716 = inttoptr i32 %v3_8049716 to i8*
  store i8 0, i8* %v4_8049716, align 1
  %v0_804971e = load i32, i32* @esp, align 4
  %v1_804971e = add i32 %v0_804971e, -4
  %v2_804971e = inttoptr i32 %v1_804971e to i32*
  store i32 1, i32* %v2_804971e, align 4
  %v1_8049720 = add i32 %v0_804971e, -8
  %v2_8049720 = inttoptr i32 %v1_8049720 to i32*
  store i32 ptrtoint (i32* @global_var_80548a9.14 to i32), i32* %v2_8049720, align 4
  %v2_8049725 = add i32 %v0_804971e, -12
  %v3_8049725 = inttoptr i32 %v2_8049725 to i32*
  store i32 %v0_804970b, i32* %v3_8049725, align 4
  %v0_8049726 = load i32, i32* @esi, align 4
  %v2_8049726 = add i32 %v0_804971e, -16
  %v3_8049726 = inttoptr i32 %v2_8049726 to i32*
  store i32 %v0_8049726, i32* %v3_8049726, align 4
  %v0_8049727 = call i32 @function_8051a90()
  %v0_804972c = load i32, i32* @esp, align 4
  %v1_804972c = add i32 %v0_804972c, 32
  %v1_804972f = add i32 %v0_8049727, 1
  %v8_804972f = icmp eq i32 %v1_804972f, 0
  store i1 %v8_804972f, i1* %zf.global-to-local, align 1
  store i32 %v1_804972f, i32* %eax.global-to-local, align 4
  br i1 %v8_804972f, label %dec_label_pc_804974f, label %dec_label_pc_8049732

dec_label_pc_8049732:                             ; preds = %dec_label_pc_80496f8
  %v1_8049732 = add i32 %v0_804972c, 28
  %v2_8049732 = inttoptr i32 %v1_8049732 to i32*
  store i32 1, i32* %v2_8049732, align 4
  %v1_8049734 = add i32 %v0_804972c, 24
  %v2_8049734 = inttoptr i32 %v1_8049734 to i32*
  store i32 ptrtoint (i32* @global_var_80548a9.14 to i32), i32* %v2_8049734, align 4
  %v0_8049739 = load i32, i32* @ebx, align 4
  %v2_8049739 = add i32 %v0_804972c, 20
  %v3_8049739 = inttoptr i32 %v2_8049739 to i32*
  store i32 %v0_8049739, i32* %v3_8049739, align 4
  %v0_804973a = load i32, i32* @esi, align 4
  %v2_804973a = add i32 %v0_804972c, 16
  %v3_804973a = inttoptr i32 %v2_804973a to i32*
  store i32 %v0_804973a, i32* %v3_804973a, align 4
  %v0_804973b = call i32 @function_8051a90()
  store i32 %v0_804973b, i32* %eax.global-to-local, align 4
  %v0_8049740 = load i32, i32* @esp, align 4
  %v1_8049740 = add i32 %v0_8049740, 92
  %v2_8049740 = inttoptr i32 %v1_8049740 to i32*
  %v3_8049740 = load i32, i32* %v2_8049740, align 4
  store i32 %v3_8049740, i32* @ecx, align 4
  %v6_8049744 = icmp eq i32 %v0_8049740, -16
  store i1 %v6_8049744, i1* %zf.global-to-local, align 1
  %v2_8049747 = add i32 %v0_804973b, 2116
  %v3_8049747 = add i32 %v2_8049747, %v3_8049740
  %v4_8049747 = inttoptr i32 %v3_8049747 to i8*
  store i8 0, i8* %v4_8049747, align 1
  %v1_804974f.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804974f

dec_label_pc_804974f:                             ; preds = %dec_label_pc_80496f8, %dec_label_pc_8049732
  %v1_804974f = phi i32 [ %v1_804972c, %dec_label_pc_80496f8 ], [ %v1_804974f.pre, %dec_label_pc_8049732 ]
  %v0_804974f = load i32, i32* @ecx, align 4
  %v2_804974f = add i32 %v1_804974f, -4
  %v3_804974f = inttoptr i32 %v2_804974f to i32*
  store i32 %v0_804974f, i32* %v3_804974f, align 4
  %v0_8049750 = load i32, i32* @ecx, align 4
  %v2_8049750 = add i32 %v1_804974f, -8
  %v3_8049750 = inttoptr i32 %v2_8049750 to i32*
  store i32 %v0_8049750, i32* %v3_8049750, align 4
  %v1_8049751 = add i32 %v1_804974f, -12
  %v2_8049751 = inttoptr i32 %v1_8049751 to i32*
  store i32 16, i32* %v2_8049751, align 4
  %v0_8049753 = load i32, i32* @esi, align 4
  %v2_8049753 = add i32 %v1_804974f, -16
  %v3_8049753 = inttoptr i32 %v2_8049753 to i32*
  store i32 %v0_8049753, i32* %v3_8049753, align 4
  %v3_8049754 = call i32 @function_8051ae0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049754, i32* %eax.global-to-local, align 4
  %v0_8049759 = load i32, i32* @esp, align 4
  %v1_804975c = icmp eq i32 %v3_8049754, 0
  store i1 %v1_804975c, i1* %zf.global-to-local, align 1
  %v1_8049e5a = add i32 %v0_8049759, 108
  %v2_8049e5a = inttoptr i32 %v1_8049e5a to i32*
  %v3_8049e5a = load i32, i32* %v2_8049e5a, align 4
  br i1 %v1_804975c, label %dec_label_pc_8049e5a, label %dec_label_pc_8049764

dec_label_pc_8049764:                             ; preds = %dec_label_pc_804974f
  store i32 %v3_8049e5a, i32* %edx.global-to-local, align 4
  %v1_8049768 = add i32 %v3_8049754, 2
  %v9_8049768 = icmp eq i32 %v1_8049768, 0
  store i1 %v9_8049768, i1* %zf.global-to-local, align 1
  store i32 %v1_8049768, i32* %eax.global-to-local, align 4
  %v2_804976b = add i32 %v3_8049e5a, 12
  %v3_804976b = inttoptr i32 %v2_804976b to i32*
  store i32 %v1_8049768, i32* %v3_804976b, align 4
  br label %dec_label_pc_804958e

dec_label_pc_8049773:                             ; preds = %dec_label_pc_804854f
  %v1_8049773 = add i32 %v0_80485a5, -1440
  %v2_8049773 = inttoptr i32 %v1_8049773 to i32*
  %v3_8049773 = load i32, i32* %v2_8049773, align 4
  %v1_804977b = urem i32 %v3_8049773, 32
  store i32 %v1_804977b, i32* %eax.global-to-local, align 4
  %v2_804977e = udiv i32 %v3_8049773, 32
  store i32 %v2_804977e, i32* %edx.global-to-local, align 4
  %v0_8049781 = load i32, i32* @esp, align 4
  %v2_8049781 = mul nuw nsw i32 %v2_804977e, 4
  %v3_8049781 = add nuw nsw i32 %v2_8049781, 20740
  %v4_8049781 = add i32 %v3_8049781, %v0_8049781
  %v5_8049781 = inttoptr i32 %v4_8049781 to i32*
  %v6_8049781 = load i32, i32* %v5_8049781, align 4
  %v9_8049781 = shl i32 1, %v1_804977b
  %v12_8049781 = or i32 %v6_8049781, %v9_8049781
  store i32 %v12_8049781, i32* %v5_8049781, align 4
  %v0_8049789 = load i32, i32* @esi, align 4
  %v1_8049789 = add i32 %v0_8049789, -1440
  %v2_8049789 = inttoptr i32 %v1_8049789 to i32*
  %v3_8049789 = load i32, i32* %v2_8049789, align 4
  store i32 %v3_8049789, i32* %eax.global-to-local, align 4
  %v1_804978f = load i32, i32* @esp, align 4
  %v2_804978f = add i32 %v1_804978f, 72
  %v3_804978f = inttoptr i32 %v2_804978f to i32*
  %v4_804978f = load i32, i32* %v3_804978f, align 4
  %v5_804978f = sub i32 %v3_8049789, %v4_804978f
  %v11_804978f = xor i32 %v4_804978f, %v3_8049789
  %v12_804978f = xor i32 %v5_804978f, %v3_8049789
  %v13_804978f = and i32 %v12_804978f, %v11_804978f
  %v14_804978f = icmp slt i32 %v13_804978f, 0
  %v15_804978f = icmp eq i32 %v5_804978f, 0
  store i1 %v15_804978f, i1* %zf.global-to-local, align 1
  %v16_804978f = icmp slt i32 %v5_804978f, 0
  %v3_8049793 = icmp ne i1 %v16_804978f, %v14_804978f
  %v4_8049793 = or i1 %v15_804978f, %v3_8049793
  br i1 %v4_8049793, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_804979e:                             ; preds = %dec_label_pc_8048c10
  %v2_804979e = add i32 %v0_8048c1d, 12
  %v3_804979e = inttoptr i32 %v2_804979e to i32*
  store i32 %v3_8048bde, i32* %v3_804979e, align 4
  %v2_804979f = add i32 %v0_8048c1d, 8
  %v3_804979f = inttoptr i32 %v2_804979f to i32*
  store i32 %v3_8048bde, i32* %v3_804979f, align 4
  %v0_80497a0 = load i32, i32* @esi, align 4
  %v2_80497a0 = add i32 %v0_8048c1d, 4
  %v3_80497a0 = inttoptr i32 %v2_80497a0 to i32*
  store i32 %v0_80497a0, i32* %v3_80497a0, align 4
  %v1_80497a1 = add i32 %v0_8048c1d, 112
  %v2_80497a1 = inttoptr i32 %v1_80497a1 to i32*
  %v3_80497a1 = load i32, i32* %v2_80497a1, align 4
  store i32 %v3_80497a1, i32* @ebx, align 4
  %v3_80497a5 = inttoptr i32 %v0_8048c1d to i32*
  store i32 %v3_80497a1, i32* %v3_80497a5, align 4
  %v3_80497a6 = call i32 @function_8051a00(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80497a6, i32* %eax.global-to-local, align 4
  %v0_80497ab = load i32, i32* @esp, align 4
  %v1_80497ab = add i32 %v0_80497ab, 16
  %v6_80497ab = icmp eq i32 %v1_80497ab, 0
  store i1 %v6_80497ab, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048c28

dec_label_pc_80497b3:                             ; preds = %dec_label_pc_8048d89
  %v1_80497b3 = call i32 @function_80524b9(i32 %stack_var_-20924.0.ph)
  store i32 %v1_80497b3, i32* %eax.global-to-local, align 4
  store i32 %v1_80497b3, i32* @ebx, align 4
  br label %dec_label_pc_80497ba

dec_label_pc_80497ba:                             ; preds = %dec_label_pc_80497ed, %dec_label_pc_80497b3
  %v0_80497ba = phi i32 [ %v1_80497b3, %dec_label_pc_80497b3 ], [ %v0_80497ba.pre, %dec_label_pc_80497ed ]
  %v1_80497ba = inttoptr i32 %v0_80497ba to i32*
  store i32 0, i32* %v1_80497ba, align 4
  %v0_80497c0 = load i32, i32* @esp, align 4
  %v1_80497c0 = add i32 %v0_80497c0, -4
  %v2_80497c0 = inttoptr i32 %v1_80497c0 to i32*
  store i32 16384, i32* %v2_80497c0, align 4
  %v1_80497c5 = add i32 %v0_80497c0, -8
  %v2_80497c5 = inttoptr i32 %v1_80497c5 to i32*
  store i32 10240, i32* %v2_80497c5, align 4
  %v1_80497ca = add i32 %v0_80497c0, 131
  store i32 %v1_80497ca, i32* %ecx.global-to-local, align 4
  %v2_80497d1 = add i32 %v0_80497c0, -12
  %v3_80497d1 = inttoptr i32 %v2_80497d1 to i32*
  store i32 %v1_80497ca, i32* %v3_80497d1, align 4
  %v1_80497d2 = add i32 %v0_80497c0, 92
  %v2_80497d2 = inttoptr i32 %v1_80497d2 to i32*
  %v3_80497d2 = load i32, i32* %v2_80497d2, align 4
  store i32 %v3_80497d2, i32* %eax.global-to-local, align 4
  %v1_80497d6 = add i32 %v3_80497d2, -1452
  %v2_80497d6 = inttoptr i32 %v1_80497d6 to i32*
  %v3_80497d6 = load i32, i32* %v2_80497d6, align 4
  %v2_80497dc = add i32 %v0_80497c0, -16
  %v3_80497dc = inttoptr i32 %v2_80497dc to i32*
  store i32 %v3_80497d6, i32* %v3_80497dc, align 4
  %v0_80497dd = call i32 @function_805264e()
  store i32 %v0_80497dd, i32* %eax.global-to-local, align 4
  %v0_80497e2 = load i32, i32* @esp, align 4
  %v1_80497e2 = add i32 %v0_80497e2, 16
  %v1_80497e5 = icmp eq i32 %v0_80497dd, 0
  store i1 %v1_80497e5, i1* %zf.global-to-local, align 1
  br i1 %v1_80497e5, label %dec_label_pc_8049b04, label %dec_label_pc_80497ed

dec_label_pc_80497ed:                             ; preds = %dec_label_pc_80497ba
  %v1_80497ed = add i32 %v0_80497dd, 1
  %v8_80497ed = icmp eq i32 %v1_80497ed, 0
  store i1 %v8_80497ed, i1* %zf.global-to-local, align 1
  store i32 %v1_80497ed, i32* %eax.global-to-local, align 4
  %v1_80497ee = icmp eq i1 %v8_80497ed, false
  %v0_80497ba.pre = load i32, i32* @ebx, align 4
  br i1 %v1_80497ee, label %dec_label_pc_80497ba, label %dec_label_pc_80497f0

dec_label_pc_80497f0:                             ; preds = %dec_label_pc_80497ed
  %v1_80497f0 = inttoptr i32 %v0_80497ba.pre to i32*
  %v2_80497f0 = load i32, i32* %v1_80497f0, align 4
  %v11_80497f0 = icmp eq i32 %v2_80497f0, 11
  store i1 %v11_80497f0, i1* %zf.global-to-local, align 1
  br i1 %v11_80497f0, label %dec_label_pc_8049c31, label %dec_label_pc_80497f9

dec_label_pc_80497f9:                             ; preds = %dec_label_pc_80497f0, %dec_label_pc_8049b04
  %v0_80497f9 = phi i32 [ %v1_80497e2, %dec_label_pc_80497f0 ], [ %v0_80497f9.pre, %dec_label_pc_8049b04 ]
  %v9_80497f9 = icmp eq i32 %v0_80497f9, 12
  store i1 %v9_80497f9, i1* %zf.global-to-local, align 1
  %v1_80497fc = add i32 %v0_80497f9, 92
  %v2_80497fc = inttoptr i32 %v1_80497fc to i32*
  %v3_80497fc = load i32, i32* %v2_80497fc, align 4
  store i32 %v3_80497fc, i32* %edx.global-to-local, align 4
  %v1_8049800 = add i32 %v3_80497fc, -1452
  %v2_8049800 = inttoptr i32 %v1_8049800 to i32*
  %v3_8049800 = load i32, i32* %v2_8049800, align 4
  store i32 %v3_8049800, i32* %ecx.global-to-local, align 4
  %v2_8049806 = add i32 %v0_80497f9, -16
  %v3_8049806 = inttoptr i32 %v2_8049806 to i32*
  store i32 %v3_8049800, i32* %v3_8049806, align 4
  %v1_8049807 = call i32 @function_8051f81(i32 %stack_var_-20924.0.ph)
  store i32 %v1_8049807, i32* %eax.global-to-local, align 4
  %v0_804980c = load i32, i32* @esp, align 4
  %v1_804980c = add i32 %v0_804980c, 108
  %v2_804980c = inttoptr i32 %v1_804980c to i32*
  %v3_804980c = load i32, i32* %v2_804980c, align 4
  store i32 %v3_804980c, i32* %ecx.global-to-local, align 4
  %v6_8049810 = icmp eq i32 %v0_804980c, -16
  store i1 %v6_8049810, i1* %zf.global-to-local, align 1
  %v1_8049813 = add i32 %v3_804980c, -1452
  %v2_8049813 = inttoptr i32 %v1_8049813 to i32*
  store i32 -1, i32* %v2_8049813, align 4
  %v0_804981d = load i32, i32* %ecx.global-to-local, align 4
  %v1_804981d = add i32 %v0_804981d, -1448
  %v2_804981d = inttoptr i32 %v1_804981d to i8*
  store i8 0, i8* %v2_804981d, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049829:                             ; preds = %dec_label_pc_8048557
  %v1_8049829 = add i32 %v0_80485a5, -1440
  %v2_8049829 = inttoptr i32 %v1_8049829 to i32*
  %v3_8049829 = load i32, i32* %v2_8049829, align 4
  %v1_8049831 = urem i32 %v3_8049829, 32
  store i32 %v1_8049831, i32* %eax.global-to-local, align 4
  %v2_8049834 = udiv i32 %v3_8049829, 32
  store i32 %v2_8049834, i32* %edx.global-to-local, align 4
  %v0_8049837 = load i32, i32* @esp, align 4
  %v2_8049837 = mul nuw nsw i32 %v2_8049834, 4
  %v3_8049837 = add nuw nsw i32 %v2_8049837, 20740
  %v4_8049837 = add i32 %v3_8049837, %v0_8049837
  %v5_8049837 = inttoptr i32 %v4_8049837 to i32*
  %v6_8049837 = load i32, i32* %v5_8049837, align 4
  %v9_8049837 = shl i32 1, %v1_8049831
  %v12_8049837 = or i32 %v6_8049837, %v9_8049837
  store i32 %v12_8049837, i32* %v5_8049837, align 4
  %v0_804983f = load i32, i32* @esi, align 4
  %v1_804983f = add i32 %v0_804983f, -1440
  %v2_804983f = inttoptr i32 %v1_804983f to i32*
  %v3_804983f = load i32, i32* %v2_804983f, align 4
  store i32 %v3_804983f, i32* %eax.global-to-local, align 4
  %v1_8049845 = load i32, i32* @esp, align 4
  %v2_8049845 = add i32 %v1_8049845, 72
  %v3_8049845 = inttoptr i32 %v2_8049845 to i32*
  %v4_8049845 = load i32, i32* %v3_8049845, align 4
  %v5_8049845 = sub i32 %v3_804983f, %v4_8049845
  %v11_8049845 = xor i32 %v4_8049845, %v3_804983f
  %v12_8049845 = xor i32 %v5_8049845, %v3_804983f
  %v13_8049845 = and i32 %v12_8049845, %v11_8049845
  %v14_8049845 = icmp slt i32 %v13_8049845, 0
  %v15_8049845 = icmp eq i32 %v5_8049845, 0
  store i1 %v15_8049845, i1* %zf.global-to-local, align 1
  %v16_8049845 = icmp slt i32 %v5_8049845, 0
  %v3_8049849 = icmp ne i1 %v16_8049845, %v14_8049845
  %v4_8049849 = or i1 %v15_8049845, %v3_8049849
  br i1 %v4_8049849, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_8049854:                             ; preds = %dec_label_pc_80493fd, %dec_label_pc_80493d2
  %v1_8049854.in = phi i32 [ %v0_8049452, %dec_label_pc_80493fd ], [ %v0_80493f3, %dec_label_pc_80493d2 ]
  %v0_8049854 = load i32, i32* @edi, align 4
  %v2_8049854 = add i32 %v1_8049854.in, 12
  %v3_8049854 = inttoptr i32 %v2_8049854 to i32*
  store i32 %v0_8049854, i32* %v3_8049854, align 4
  %v0_8049855 = load i32, i32* @edi, align 4
  %v2_8049855 = add i32 %v1_8049854.in, 8
  %v3_8049855 = inttoptr i32 %v2_8049855 to i32*
  store i32 %v0_8049855, i32* %v3_8049855, align 4
  %v1_8049856 = add i32 %v1_8049854.in, 4
  %v2_8049856 = inttoptr i32 %v1_8049856 to i32*
  store i32 0, i32* %v2_8049856, align 4
  %v2_8049858 = inttoptr i32 %v1_8049854.in to i32*
  store i32 37, i32* %v2_8049858, align 4
  %v3_804985a = call i32 @function_8050fe0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_804985a, i32* %eax.global-to-local, align 4
  %v0_804985f = load i32, i32* @esp, align 4
  %v9_804985f = icmp eq i32 %v0_804985f, -12
  store i1 %v9_804985f, i1* %zf.global-to-local, align 1
  %v2_8049862 = add i32 %v0_804985f, 8
  %v3_8049862 = inttoptr i32 %v2_8049862 to i32*
  store i32 %v3_804985a, i32* %v3_8049862, align 4
  %v1_8049863 = add i32 %v0_804985f, 120
  %v2_8049863 = inttoptr i32 %v1_8049863 to i32*
  %v3_8049863 = load i32, i32* %v2_8049863, align 4
  %v2_8049867 = add i32 %v0_804985f, 4
  %v3_8049867 = inttoptr i32 %v2_8049867 to i32*
  store i32 %v3_8049863, i32* %v3_8049867, align 4
  %v1_8049868 = add i32 %v0_804985f, 147
  store i32 %v1_8049868, i32* @ecx, align 4
  %v3_804986f = inttoptr i32 %v0_804985f to i32*
  store i32 %v1_8049868, i32* %v3_804986f, align 4
  %v0_8049870 = call i32 @function_8051cd0()
  %v0_8049875 = load i32, i32* @esp, align 4
  %v1_8049875 = add i32 %v0_8049875, 16
  %v1_8049878 = add i32 %v0_8049870, 1
  %v8_8049878 = icmp eq i32 %v1_8049878, 0
  store i1 %v8_8049878, i1* %zf.global-to-local, align 1
  store i32 %v1_8049878, i32* %eax.global-to-local, align 4
  br i1 %v8_8049878, label %dec_label_pc_8049a77, label %dec_label_pc_804987f

dec_label_pc_804987f:                             ; preds = %dec_label_pc_8049854
  %v0_804987f = load i32, i32* @ebx, align 4
  %v2_804987f = add i32 %v0_8049875, 12
  %v3_804987f = inttoptr i32 %v2_804987f to i32*
  store i32 %v0_804987f, i32* %v3_804987f, align 4
  %v0_8049880 = load i32, i32* @ebx, align 4
  %v2_8049880 = add i32 %v0_8049875, 8
  %v3_8049880 = inttoptr i32 %v2_8049880 to i32*
  store i32 %v0_8049880, i32* %v3_8049880, align 4
  %v1_8049881 = add i32 %v0_8049875, 4
  %v2_8049881 = inttoptr i32 %v1_8049881 to i32*
  store i32 0, i32* %v2_8049881, align 4
  %v2_8049883 = inttoptr i32 %v0_8049875 to i32*
  store i32 37, i32* %v2_8049883, align 4
  %v3_8049885 = call i32 @function_8050fe0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049885, i32* %eax.global-to-local, align 4
  %v0_804988a = load i32, i32* @esp, align 4
  %v9_804988a = icmp eq i32 %v0_804988a, -12
  store i1 %v9_804988a, i1* %zf.global-to-local, align 1
  %v2_804988d = add i32 %v0_804988a, 8
  %v3_804988d = inttoptr i32 %v2_804988d to i32*
  store i32 %v3_8049885, i32* %v3_804988d, align 4
  %v1_804988e = add i32 %v0_804988a, 120
  %v2_804988e = inttoptr i32 %v1_804988e to i32*
  %v3_804988e = load i32, i32* %v2_804988e, align 4
  store i32 %v3_804988e, i32* @ecx, align 4
  %v2_8049892 = add i32 %v0_804988a, 4
  %v3_8049892 = inttoptr i32 %v2_8049892 to i32*
  store i32 %v3_804988e, i32* %v3_8049892, align 4
  %v1_8049893 = add i32 %v0_804988a, 147
  store i32 %v1_8049893, i32* %eax.global-to-local, align 4
  %v3_804989a = inttoptr i32 %v0_804988a to i32*
  store i32 %v1_8049893, i32* %v3_804989a, align 4
  %v0_804989b = call i32 @function_8051cd0()
  store i32 %v0_804989b, i32* %eax.global-to-local, align 4
  %v0_80498a0 = load i32, i32* @esp, align 4
  %v6_80498a0 = icmp eq i32 %v0_80498a0, -16
  store i1 %v6_80498a0, i1* %zf.global-to-local, align 1
  store i32 %v0_804989b, i32* %ebx.global-to-local, align 4
  %v3_80498a5 = add i32 %v0_804989b, 147
  %v4_80498a5 = add i32 %v3_80498a5, %v0_80498a0
  %v5_80498a5 = inttoptr i32 %v4_80498a5 to i8*
  %v6_80498a5 = load i8, i8* %v5_80498a5, align 1
  %v12_80498a5 = icmp eq i8 %v6_80498a5, 32
  %v1_80498ad = zext i1 %v12_80498a5 to i32
  %v1_80498b0 = add i32 %v0_80498a0, 147
  store i32 %v1_80498b0, i32* %esi.global-to-local, align 4
  store i32 %v1_80498ad, i32* %eax.global-to-local, align 4
  %v1_80498bc = add i32 %v0_80498a0, 12
  %v2_80498bc = inttoptr i32 %v1_80498bc to i32*
  store i32 2, i32* %v2_80498bc, align 4
  %v1_80498be = add i32 %v0_80498a0, 8
  %v2_80498be = inttoptr i32 %v1_80498be to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80548a6.10 to i32), i32* %v2_80498be, align 4
  %v0_80498c3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80498c3 = load i32, i32* %eax.global-to-local, align 4
  %v2_80498c3 = add i32 %v1_80498c3, %v0_80498c3
  store i32 %v2_80498c3, i32* @ebx, align 4
  %v1_80498c5 = add i32 %v0_80498a0, 120
  %v2_80498c5 = inttoptr i32 %v1_80498c5 to i32*
  %v3_80498c5 = load i32, i32* %v2_80498c5, align 4
  %v2_80498c9 = sub i32 %v3_80498c5, %v2_80498c3
  store i32 %v2_80498c9, i32* %eax.global-to-local, align 4
  %v0_80498cb = load i32, i32* %esi.global-to-local, align 4
  %v2_80498cb = add i32 %v0_80498cb, %v2_80498c3
  %v12_80498cb = icmp eq i32 %v2_80498cb, 0
  store i1 %v12_80498cb, i1* %zf.global-to-local, align 1
  store i32 %v2_80498cb, i32* @esi, align 4
  %v2_80498cd = add i32 %v0_80498a0, 4
  %v3_80498cd = inttoptr i32 %v2_80498cd to i32*
  store i32 %v2_80498c9, i32* %v3_80498cd, align 4
  %v0_80498ce = load i32, i32* @esi, align 4
  %v3_80498ce = inttoptr i32 %v0_80498a0 to i32*
  store i32 %v0_80498ce, i32* %v3_80498ce, align 4
  %v0_80498cf = call i32 @function_8051a90()
  store i32 %v0_80498cf, i32* %eax.global-to-local, align 4
  %v0_80498d4 = load i32, i32* @esp, align 4
  %v1_80498d4 = add i32 %v0_80498d4, 16
  store i32 %v0_80498cf, i32* @edi, align 4
  %v10_80498d9 = icmp eq i32 %v0_80498cf, -1
  store i1 %v10_80498d9, i1* %zf.global-to-local, align 1
  br i1 %v10_80498d9, label %dec_label_pc_8049a77, label %dec_label_pc_80498e2

dec_label_pc_80498e2:                             ; preds = %dec_label_pc_804987f
  %v10_80498e2 = icmp eq i32 %v0_80498cf, 1
  store i1 %v10_80498e2, i1* %zf.global-to-local, align 1
  %v7_80498e5 = icmp sgt i32 %v0_80498cf, 1
  br i1 %v7_80498e5, label %dec_label_pc_80498e7, label %dec_label_pc_80498ea

dec_label_pc_80498e7:                             ; preds = %dec_label_pc_80498e2
  %v1_80498e7 = add i32 %v0_80498cf, -2
  %v9_80498e7 = icmp eq i32 %v1_80498e7, 0
  store i1 %v9_80498e7, i1* %zf.global-to-local, align 1
  store i32 %v1_80498e7, i32* @edi, align 4
  br label %dec_label_pc_80498ea

dec_label_pc_80498ea:                             ; preds = %dec_label_pc_80498e2, %dec_label_pc_80498e7
  %v1_80498ea = add i32 %v0_80498d4, 20920
  store i32 %v1_80498ea, i32* %eax.global-to-local, align 4
  %v1_80498f1 = add i32 %v0_80498d4, 20916
  %v2_80498f1 = inttoptr i32 %v1_80498f1 to i32*
  store i32 0, i32* %v2_80498f1, align 4
  %v0_80498fc = load i32, i32* %eax.global-to-local, align 4
  %v1_80498fc = load i32, i32* @ebx, align 4
  %v2_80498fc = add i32 %v1_80498fc, %v0_80498fc
  %v12_80498fc = icmp eq i32 %v2_80498fc, 0
  store i1 %v12_80498fc, i1* %zf.global-to-local, align 1
  store i32 %v2_80498fc, i32* %eax.global-to-local, align 4
  %v0_80498fe = load i32, i32* @esi, align 4
  store i32 %v0_80498fe, i32* %edx.global-to-local, align 4
  %v1_8049900 = load i32, i32* @edi, align 4
  %v2_8049900 = add i32 %v2_80498fc, -20773
  %v3_8049900 = add i32 %v2_8049900, %v1_8049900
  %v4_8049900 = inttoptr i32 %v3_8049900 to i8*
  store i8 0, i8* %v4_8049900, align 1
  %v0_8049908 = load i32, i32* @esi, align 4
  %v1_8049908 = inttoptr i32 %v0_8049908 to i8*
  %v2_8049908 = load i8, i8* %v1_8049908, align 1
  %v3_8049908 = zext i8 %v2_8049908 to i32
  %v4_8049908 = load i32, i32* @ecx, align 4
  %v5_8049908 = and i32 %v4_8049908, -256
  %v6_8049908 = or i32 %v5_8049908, %v3_8049908
  store i32 %v6_8049908, i32* @ecx, align 4
  %v1_804990a = add i32 %v6_8049908, -48
  store i32 %v1_804990a, i32* %eax.global-to-local, align 4
  %v1_804990d = trunc i32 %v1_804990a to i8
  %v10_804990d = icmp eq i8 %v1_804990d, 9
  store i1 %v10_804990d, i1* %zf.global-to-local, align 1
  %tmp241 = icmp ult i8 %v1_804990d, 10
  br i1 %tmp241, label %dec_label_pc_8049911, label %dec_label_pc_8049928

dec_label_pc_8049911:                             ; preds = %dec_label_pc_80498ea
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8049913

dec_label_pc_8049913:                             ; preds = %dec_label_pc_8049913, %dec_label_pc_8049911
  %v0_8049913 = phi i32 [ %v0_804991b, %dec_label_pc_8049913 ], [ 0, %dec_label_pc_8049911 ]
  %v1_8049913 = add i32 %v0_8049913, 1
  %v8_8049913 = icmp eq i32 %v1_8049913, 0
  store i1 %v8_8049913, i1* %zf.global-to-local, align 1
  store i32 %v1_8049913, i32* %edx.global-to-local, align 4
  %v1_8049914 = load i32, i32* @esp, align 4
  %v2_8049914 = add i32 %v1_8049914, 20900
  %v3_8049914 = inttoptr i32 %v2_8049914 to i32*
  store i32 %v1_8049913, i32* %v3_8049914, align 4
  %v0_804991b = load i32, i32* %edx.global-to-local, align 4
  %v1_804991b = load i32, i32* @esi, align 4
  %v2_804991b = add i32 %v1_804991b, %v0_804991b
  %v3_804991b = inttoptr i32 %v2_804991b to i8*
  %v4_804991b = load i8, i8* %v3_804991b, align 1
  %v5_804991b = zext i8 %v4_804991b to i32
  %v6_804991b = load i32, i32* @ecx, align 4
  %v7_804991b = and i32 %v6_804991b, -256
  %v8_804991b = or i32 %v7_804991b, %v5_804991b
  store i32 %v8_804991b, i32* @ecx, align 4
  %v1_804991e = add i32 %v8_804991b, -48
  store i32 %v1_804991e, i32* %eax.global-to-local, align 4
  %v1_8049921 = trunc i32 %v1_804991e to i8
  %v10_8049921 = icmp eq i8 %v1_8049921, 9
  store i1 %v10_8049921, i1* %zf.global-to-local, align 1
  %tmp242 = icmp ult i8 %v1_8049921, 10
  br i1 %tmp242, label %dec_label_pc_8049913, label %dec_label_pc_8049925

dec_label_pc_8049925:                             ; preds = %dec_label_pc_8049913
  store i32 %v2_804991b, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8049928

dec_label_pc_8049928:                             ; preds = %dec_label_pc_80498ea, %dec_label_pc_8049925
  %v0_8049928 = phi i32 [ %v6_8049908, %dec_label_pc_80498ea ], [ %v8_804991b, %dec_label_pc_8049925 ]
  %v3_8049928 = trunc i32 %v0_8049928 to i8
  %v4_8049928 = icmp eq i8 %v3_8049928, 0
  store i1 %v4_8049928, i1* %zf.global-to-local, align 1
  br i1 %v4_8049928, label %dec_label_pc_8049928.dec_label_pc_8049a77_crit_edge, label %dec_label_pc_8049930

dec_label_pc_8049928.dec_label_pc_8049a77_crit_edge: ; preds = %dec_label_pc_8049928
  %v0_8049a77.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049a77

dec_label_pc_8049930:                             ; preds = %dec_label_pc_8049928
  %v0_8049930 = load i32, i32* %edx.global-to-local, align 4
  %v1_8049930 = inttoptr i32 %v0_8049930 to i8*
  store i8 0, i8* %v1_8049930, align 1
  %v0_8049933 = load i32, i32* @esp, align 4
  %v1_8049933 = add i32 %v0_8049933, 20900
  %v2_8049933 = inttoptr i32 %v1_8049933 to i32*
  %v3_8049933 = load i32, i32* %v2_8049933, align 4
  store i32 %v3_8049933, i32* %edx.global-to-local, align 4
  %v1_804993a = add i32 %v3_8049933, 1
  store i32 %v1_804993a, i32* %eax.global-to-local, align 4
  store i32 %v1_804993a, i32* %v2_8049933, align 4
  %v0_8049944 = load i32, i32* @esi, align 4
  %v1_8049944 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049944 = add i32 %v1_8049944, %v0_8049944
  %v3_8049944 = inttoptr i32 %v2_8049944 to i8*
  %v4_8049944 = load i8, i8* %v3_8049944, align 1
  %v10_8049944 = icmp eq i8 %v4_8049944, 32
  store i1 %v10_8049944, i1* %zf.global-to-local, align 1
  br i1 %v10_8049944, label %dec_label_pc_8049ee6, label %dec_label_pc_804994e

dec_label_pc_804994e:                             ; preds = %dec_label_pc_8049930, %dec_label_pc_8049ee6
  %v0_8049951 = phi i32 [ %v0_8049944, %dec_label_pc_8049930 ], [ %v0_8049951.pre, %dec_label_pc_8049ee6 ]
  %v0_804994e = load i32, i32* @esp, align 4
  store i32 %v0_8049951, i32* %eax.global-to-local, align 4
  %v1_8049953 = add i32 %v0_804994e, 20900
  %v2_8049953 = inttoptr i32 %v1_8049953 to i32*
  %v3_8049953 = load i32, i32* %v2_8049953, align 4
  store i32 %v3_8049953, i32* %edx.global-to-local, align 4
  %v2_804995a = add i32 %v3_8049953, %v0_8049951
  %v12_804995a = icmp eq i32 %v2_804995a, 0
  store i1 %v12_804995a, i1* %zf.global-to-local, align 1
  store i32 %v2_804995a, i32* %eax.global-to-local, align 4
  %v2_804995c = add i32 %v0_804994e, -16
  %v3_804995c = inttoptr i32 %v2_804995c to i32*
  store i32 %v2_804995a, i32* %v3_804995c, align 4
  %v2_804995d = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_804995d, i32* %eax.global-to-local, align 4
  %v0_8049962 = load i32, i32* @esp, align 4
  %v1_8049965 = add i32 %v0_8049962, 8
  %v2_8049965 = inttoptr i32 %v1_8049965 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_80548b0.17 to i32), i32* %v2_8049965, align 4
  %v2_804996a = add i32 %v0_8049962, 4
  %v3_804996a = inttoptr i32 %v2_804996a to i32*
  store i32 %v2_804995d, i32* %v3_804996a, align 4
  %v1_804996b = add i32 %v0_8049962, 20916
  %v2_804996b = inttoptr i32 %v1_804996b to i32*
  %v3_804996b = load i32, i32* %v2_804996b, align 4
  store i32 %v3_804996b, i32* @ebp, align 4
  %v0_8049972 = load i32, i32* @esi, align 4
  %v2_8049974 = add i32 %v0_8049972, %v3_804996b
  %v12_8049974 = icmp eq i32 %v2_8049974, 0
  store i1 %v12_8049974, i1* %zf.global-to-local, align 1
  store i32 %v2_8049974, i32* %eax.global-to-local, align 4
  %v3_8049976 = inttoptr i32 %v0_8049962 to i32*
  store i32 %v2_8049974, i32* %v3_8049976, align 4
  %v0_8049977 = call i32 @function_8051cd0()
  %v0_804997c = load i32, i32* @esp, align 4
  %v1_804997c = add i32 %v0_804997c, 16
  %v1_804997f = add i32 %v0_8049977, 1
  %v8_804997f = icmp eq i32 %v1_804997f, 0
  store i1 %v8_804997f, i1* %zf.global-to-local, align 1
  store i32 %v1_804997f, i32* %eax.global-to-local, align 4
  br i1 %v8_804997f, label %dec_label_pc_80499c3, label %dec_label_pc_8049982

dec_label_pc_8049982:                             ; preds = %dec_label_pc_804994e
  %v0_8049985 = load i32, i32* @esi, align 4
  store i32 %v0_8049985, i32* %eax.global-to-local, align 4
  %v1_8049987 = add i32 %v0_804997c, 20916
  %v2_8049987 = inttoptr i32 %v1_8049987 to i32*
  %v3_8049987 = load i32, i32* %v2_8049987, align 4
  %v2_804998e = add i32 %v3_8049987, %v0_8049985
  %v12_804998e = icmp eq i32 %v2_804998e, 0
  store i1 %v12_804998e, i1* %zf.global-to-local, align 1
  store i32 %v2_804998e, i32* %eax.global-to-local, align 4
  %v3_8049990 = inttoptr i32 %v0_804997c to i32*
  store i32 %v2_804998e, i32* %v3_8049990, align 4
  %v2_8049991 = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_8049991, i32* %eax.global-to-local, align 4
  %v0_8049996 = load i32, i32* @esp, align 4
  %v1_8049999 = add i32 %v0_8049996, 8
  %v2_8049999 = inttoptr i32 %v1_8049999 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_80548b0.17 to i32), i32* %v2_8049999, align 4
  %v2_804999e = add i32 %v0_8049996, 4
  %v3_804999e = inttoptr i32 %v2_804999e to i32*
  store i32 %v2_8049991, i32* %v3_804999e, align 4
  %v1_804999f = add i32 %v0_8049996, 20916
  %v2_804999f = inttoptr i32 %v1_804999f to i32*
  %v3_804999f = load i32, i32* %v2_804999f, align 4
  store i32 %v3_804999f, i32* @ecx, align 4
  %v0_80499a6 = load i32, i32* @esi, align 4
  %v2_80499a8 = add i32 %v0_80499a6, %v3_804999f
  %v12_80499a8 = icmp eq i32 %v2_80499a8, 0
  store i1 %v12_80499a8, i1* %zf.global-to-local, align 1
  store i32 %v2_80499a8, i32* %eax.global-to-local, align 4
  %v3_80499aa = inttoptr i32 %v0_8049996 to i32*
  store i32 %v2_80499a8, i32* %v3_80499aa, align 4
  %v0_80499ab = call i32 @function_8051cd0()
  store i32 %v0_80499ab, i32* %eax.global-to-local, align 4
  %v0_80499b0 = load i32, i32* @esp, align 4
  %v1_80499b0 = add i32 %v0_80499b0, 20916
  %v2_80499b0 = inttoptr i32 %v1_80499b0 to i32*
  %v3_80499b0 = load i32, i32* %v2_80499b0, align 4
  %v2_80499b7 = add i32 %v3_80499b0, %v0_80499ab
  store i32 %v2_80499b7, i32* %edx.global-to-local, align 4
  store i32 %v2_80499b7, i32* %v2_80499b0, align 4
  %v0_80499c0 = load i32, i32* @esp, align 4
  %v1_80499c0 = add i32 %v0_80499c0, 16
  %v6_80499c0 = icmp eq i32 %v1_80499c0, 0
  store i1 %v6_80499c0, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_80499c3

dec_label_pc_80499c3:                             ; preds = %dec_label_pc_804994e, %dec_label_pc_8049982
  %v1_8049ef8 = phi i32 [ %v1_804997c, %dec_label_pc_804994e ], [ %v1_80499c0, %dec_label_pc_8049982 ]
  %v1_80499c3 = add i32 %v1_8049ef8, 20900
  %v2_80499c3 = inttoptr i32 %v1_80499c3 to i32*
  %v3_80499c3 = load i32, i32* %v2_80499c3, align 4
  store i32 %v3_80499c3, i32* %eax.global-to-local, align 4
  %v0_80499ca = load i32, i32* @esi, align 4
  %v2_80499ca = add i32 %v0_80499ca, %v3_80499c3
  %v3_80499ca = inttoptr i32 %v2_80499ca to i8*
  %v4_80499ca = load i8, i8* %v3_80499ca, align 1
  %v13_80499ca = icmp eq i8 %v4_80499ca, 34
  store i1 %v13_80499ca, i1* %zf.global-to-local, align 1
  br i1 %v13_80499ca, label %dec_label_pc_8049ef5, label %dec_label_pc_80499d4

dec_label_pc_80499d4:                             ; preds = %dec_label_pc_8049ef5, %dec_label_pc_80499c3, %dec_label_pc_8049f19
  %v1_80499d4 = phi i32 [ %v1_8049f0b, %dec_label_pc_8049ef5 ], [ %v1_8049ef8, %dec_label_pc_80499c3 ], [ %v1_80499d4.pre, %dec_label_pc_8049f19 ]
  %v0_80499d4 = phi i32 [ %v2_8049f06, %dec_label_pc_8049ef5 ], [ %v3_80499c3, %dec_label_pc_80499c3 ], [ %v0_80499d4.pre, %dec_label_pc_8049f19 ]
  %v2_80499d4 = add i32 %v1_80499d4, -4
  %v3_80499d4 = inttoptr i32 %v2_80499d4 to i32*
  store i32 %v0_80499d4, i32* %v3_80499d4, align 4
  %v0_80499d5 = load i32, i32* %eax.global-to-local, align 4
  %v2_80499d5 = add i32 %v1_80499d4, -8
  %v3_80499d5 = inttoptr i32 %v2_80499d5 to i32*
  store i32 %v0_80499d5, i32* %v3_80499d5, align 4
  %v1_80499d6 = add i32 %v1_80499d4, -12
  %v2_80499d6 = inttoptr i32 %v1_80499d6 to i32*
  store i32 10, i32* %v2_80499d6, align 4
  %v0_80499d8 = load i32, i32* @esi, align 4
  %v2_80499d8 = add i32 %v1_80499d4, -16
  %v3_80499d8 = inttoptr i32 %v2_80499d8 to i32*
  store i32 %v0_80499d8, i32* %v3_80499d8, align 4
  %v3_80499d9 = call i32 @function_8051ae0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  %v0_80499de = load i32, i32* @esp, align 4
  %v1_80499de = add i32 %v0_80499de, 16
  store i32 %v3_80499d9, i32* %edx.global-to-local, align 4
  %v1_80499e3 = add i32 %v3_80499d9, -1
  store i32 %v1_80499e3, i32* %eax.global-to-local, align 4
  %v9_80499e6 = icmp eq i32 %v3_80499d9, 9
  store i1 %v9_80499e6, i1* %zf.global-to-local, align 1
  %v6_80499e9 = icmp ugt i32 %v1_80499e3, 8
  br i1 %v6_80499e9, label %dec_label_pc_8049a11, label %dec_label_pc_80499eb

dec_label_pc_80499eb:                             ; preds = %dec_label_pc_80499d4
  %v1_80499eb = add i32 %v0_80499de, 132
  %v2_80499eb = inttoptr i32 %v1_80499eb to i32*
  %v3_80499eb = load i32, i32* %v2_80499eb, align 4
  %v2_80499ef = add i32 %v3_80499eb, %v3_80499d9
  store i32 %v2_80499ef, i32* @ebx, align 4
  %v9_8049a00186 = icmp eq i32 %v1_80499de, 12
  store i1 %v9_8049a00186, i1* %zf.global-to-local, align 1
  %v2_8049a03188 = inttoptr i32 %v0_80499de to i32*
  store i32 0, i32* %v2_8049a03188, align 4
  %v0_8049a05189 = call i32 @function_8052242()
  store i32 %v0_8049a05189, i32* %eax.global-to-local, align 4
  %v0_8049a0a190 = load i32, i32* @esp, align 4
  %v1_8049a0a191 = add i32 %v0_8049a0a190, 16
  %v1_8049a0d192 = load i32, i32* @ebx, align 4
  %v7_8049a0d193 = icmp ult i32 %v0_8049a05189, %v1_8049a0d192
  %v12_8049a0d194 = icmp eq i32 %v0_8049a05189, %v1_8049a0d192
  store i1 %v12_8049a0d194, i1* %zf.global-to-local, align 1
  br i1 %v7_8049a0d193, label %dec_label_pc_80499f3, label %dec_label_pc_8049a11

dec_label_pc_80499f3:                             ; preds = %dec_label_pc_80499eb, %dec_label_pc_80499f3
  %v0_8049a0a195 = phi i32 [ %v0_8049a0a, %dec_label_pc_80499f3 ], [ %v0_8049a0a190, %dec_label_pc_80499eb ]
  %v9_80499f3 = icmp eq i32 %v0_8049a0a195, -4
  store i1 %v9_80499f3, i1* %zf.global-to-local, align 1
  %v2_80499f6 = inttoptr i32 %v0_8049a0a195 to i32*
  store i32 1, i32* %v2_80499f6, align 4
  %v0_80499f8 = call i32 @function_8053b30()
  store i32 %v0_80499f8, i32* %eax.global-to-local, align 4
  %v0_80499fd = load i32, i32* @esp, align 4
  %v9_8049a00 = icmp eq i32 %v0_80499fd, -4
  store i1 %v9_8049a00, i1* %zf.global-to-local, align 1
  %v2_8049a03 = inttoptr i32 %v0_80499fd to i32*
  store i32 0, i32* %v2_8049a03, align 4
  %v0_8049a05 = call i32 @function_8052242()
  store i32 %v0_8049a05, i32* %eax.global-to-local, align 4
  %v0_8049a0a = load i32, i32* @esp, align 4
  %v1_8049a0a = add i32 %v0_8049a0a, 16
  %v1_8049a0d = load i32, i32* @ebx, align 4
  %v7_8049a0d = icmp ult i32 %v0_8049a05, %v1_8049a0d
  %v12_8049a0d = icmp eq i32 %v0_8049a05, %v1_8049a0d
  store i1 %v12_8049a0d, i1* %zf.global-to-local, align 1
  br i1 %v7_8049a0d, label %dec_label_pc_80499f3, label %dec_label_pc_8049a11

dec_label_pc_8049a11:                             ; preds = %dec_label_pc_80499eb, %dec_label_pc_80499f3, %dec_label_pc_80499d4
  %v0_8049a1a = phi i32 [ %v1_80499de, %dec_label_pc_80499d4 ], [ %v1_8049a0a191, %dec_label_pc_80499eb ], [ %v1_8049a0a, %dec_label_pc_80499f3 ]
  %v1_8049a11 = add i32 %v0_8049a1a, 20900
  %v2_8049a11 = inttoptr i32 %v1_8049a11 to i32*
  %v3_8049a11 = load i32, i32* %v2_8049a11, align 4
  store i32 %v3_8049a11, i32* %eax.global-to-local, align 4
  %v0_8049a18 = load i32, i32* @esi, align 4
  %v2_8049a1d = add i32 %v0_8049a18, %v3_8049a11
  %v12_8049a1d = icmp eq i32 %v2_8049a1d, 0
  store i1 %v12_8049a1d, i1* %zf.global-to-local, align 1
  store i32 %v2_8049a1d, i32* @ebx, align 4
  %v2_8049a1f = add i32 %v0_8049a1a, -16
  %v3_8049a1f = inttoptr i32 %v2_8049a1f to i32*
  store i32 %v2_8049a1d, i32* %v3_8049a1f, align 4
  %v2_8049a20 = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_8049a20, i32* %eax.global-to-local, align 4
  %v0_8049a25 = load i32, i32* @esp, align 4
  %v9_8049a25 = icmp eq i32 %v0_8049a25, -12
  store i1 %v9_8049a25, i1* %zf.global-to-local, align 1
  %v1_8049a28 = add i32 %v0_8049a25, 8
  %v2_8049a28 = inttoptr i32 %v1_8049a28 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_80548ab.15 to i32), i32* %v2_8049a28, align 4
  %v2_8049a2d = add i32 %v0_8049a25, 4
  %v3_8049a2d = inttoptr i32 %v2_8049a2d to i32*
  store i32 %v2_8049a20, i32* %v3_8049a2d, align 4
  %v0_8049a2e = load i32, i32* @ebx, align 4
  %v3_8049a2e = inttoptr i32 %v0_8049a25 to i32*
  store i32 %v0_8049a2e, i32* %v3_8049a2e, align 4
  %v0_8049a2f = call i32 @function_8051cd0()
  store i32 %v0_8049a2f, i32* %eax.global-to-local, align 4
  %v0_8049a34 = load i32, i32* @esp, align 4
  %v1_8049a34 = add i32 %v0_8049a34, 16
  %v9_8049a37 = icmp eq i32 %v0_8049a2f, 4
  store i1 %v9_8049a37, i1* %zf.global-to-local, align 1
  br i1 %v9_8049a37, label %dec_label_pc_8049e6a, label %dec_label_pc_8049a40

dec_label_pc_8049a40:                             ; preds = %dec_label_pc_8049a11
  %v0_8049a40 = load i32, i32* @ebx, align 4
  %v1_8049a40 = inttoptr i32 %v0_8049a40 to i8*
  %v2_8049a40 = load i8, i8* %v1_8049a40, align 1
  %v11_8049a40 = icmp eq i8 %v2_8049a40, 47
  store i1 %v11_8049a40, i1* %zf.global-to-local, align 1
  br i1 %v11_8049a40, label %dec_label_pc_8049d1e, label %dec_label_pc_8049a49

dec_label_pc_8049a49:                             ; preds = %dec_label_pc_8049d41, %dec_label_pc_8049d1e, %dec_label_pc_8049a40, %dec_label_pc_8049d76
  %v0_8049a49 = phi i32 [ %v1_8049d6b, %dec_label_pc_8049d41 ], [ %v1_8049d33, %dec_label_pc_8049d1e ], [ %v1_8049a34, %dec_label_pc_8049a40 ], [ %v1_8049d8b, %dec_label_pc_8049d76 ]
  %v1_8049a49 = add i32 %v0_8049a49, 76
  %v2_8049a49 = inttoptr i32 %v1_8049a49 to i32*
  %v3_8049a49 = load i32, i32* %v2_8049a49, align 4
  store i32 %v3_8049a49, i32* %edx.global-to-local, align 4
  %v1_8049a4d = add i32 %v3_8049a49, 1431
  %v2_8049a4d = inttoptr i32 %v1_8049a4d to i32*
  store i32 5522759, i32* %v2_8049a4d, align 4
  %v0_8049a57 = load i32, i32* @esp, align 4
  %v1_8049a57 = add i32 %v0_8049a57, 92
  %v2_8049a57 = inttoptr i32 %v1_8049a57 to i32*
  %v3_8049a57 = load i32, i32* %v2_8049a57, align 4
  store i32 %v3_8049a57, i32* %ecx.global-to-local, align 4
  %v1_8049a5b = add i32 %v3_8049a57, -1448
  %v2_8049a5b = inttoptr i32 %v1_8049a5b to i8*
  store i8 10, i8* %v2_8049a5b, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049a67:                             ; preds = %dec_label_pc_8049124
  %v1_8049a67 = add i32 %v0_8049145, 108
  %v2_8049a67 = inttoptr i32 %v1_8049a67 to i32*
  %v3_8049a67 = load i32, i32* %v2_8049a67, align 4
  store i32 %v3_8049a67, i32* %eax.global-to-local, align 4
  %v1_8049a6b = add i32 %v3_8049a67, 12
  %v2_8049a6b = inttoptr i32 %v1_8049a6b to i32*
  store i32 0, i32* %v2_8049a6b, align 4
  br label %dec_label_pc_80491db

dec_label_pc_8049a77:                             ; preds = %dec_label_pc_8049928.dec_label_pc_8049a77_crit_edge, %dec_label_pc_804987f, %dec_label_pc_8049854
  %v0_8049a77 = phi i32 [ %v0_8049a77.pre, %dec_label_pc_8049928.dec_label_pc_8049a77_crit_edge ], [ %v1_80498d4, %dec_label_pc_804987f ], [ %v1_8049875, %dec_label_pc_8049854 ]
  %v1_8049a77 = add i32 %v0_8049a77, -4
  %v2_8049a77 = inttoptr i32 %v1_8049a77 to i32*
  store i32 4, i32* %v2_8049a77, align 4
  %v1_8049a79 = add i32 %v0_8049a77, -8
  %v2_8049a79 = inttoptr i32 %v1_8049a79 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_80548a4.13 to i32), i32* %v2_8049a79, align 4
  %v1_8049a7e = add i32 %v0_8049a77, 104
  %v2_8049a7e = inttoptr i32 %v1_8049a7e to i32*
  %v3_8049a7e = load i32, i32* %v2_8049a7e, align 4
  store i32 %v3_8049a7e, i32* %ecx.global-to-local, align 4
  %v2_8049a82 = add i32 %v0_8049a77, -12
  %v3_8049a82 = inttoptr i32 %v2_8049a82 to i32*
  store i32 %v3_8049a7e, i32* %v3_8049a82, align 4
  %v1_8049a83 = add i32 %v0_8049a77, 131
  store i32 %v1_8049a83, i32* %eax.global-to-local, align 4
  %v2_8049a8a = add i32 %v0_8049a77, -16
  %v3_8049a8a = inttoptr i32 %v2_8049a8a to i32*
  store i32 %v1_8049a83, i32* %v3_8049a8a, align 4
  %v0_8049a8b = call i32 @function_8051a90()
  store i32 %v0_8049a8b, i32* %eax.global-to-local, align 4
  %v0_8049a90 = load i32, i32* @esp, align 4
  %v1_8049a90 = add i32 %v0_8049a90, 92
  %v2_8049a90 = inttoptr i32 %v1_8049a90 to i32*
  %v3_8049a90 = load i32, i32* %v2_8049a90, align 4
  store i32 %v0_8049a8b, i32* @esi, align 4
  %v1_8049a96 = add i32 %v3_8049a90, 1431
  %v9_8049a96 = icmp eq i32 %v1_8049a96, 0
  store i1 %v9_8049a96, i1* %zf.global-to-local, align 1
  store i32 %v1_8049a96, i32* @ebx, align 4
  %v1_8049a9c = inttoptr i32 %v0_8049a90 to i32*
  %v2_8049a9c = load i32, i32* %v1_8049a9c, align 4
  store i32 %v2_8049a9c, i32* %eax.global-to-local, align 4
  %v3_8049a9c = add i32 %v0_8049a90, 4
  %v1_8049a9d = inttoptr i32 %v3_8049a9c to i32*
  %v2_8049a9d = load i32, i32* %v1_8049a9d, align 4
  store i32 %v2_8049a9d, i32* %edx.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_80548b5.18 to i32), i32* %v1_8049a9d, align 4
  %v0_8049aa3 = load i32, i32* @ebx, align 4
  store i32 %v0_8049aa3, i32* %v1_8049a9c, align 4
  %v0_8049aa4 = call i32 @function_8051d50()
  store i32 %v0_8049aa4, i32* %eax.global-to-local, align 4
  %v0_8049aa9 = load i32, i32* @esp, align 4
  %v3_8049aac = trunc i32 %v0_8049aa4 to i8
  %v4_8049aac = icmp eq i8 %v3_8049aac, 0
  store i1 %v4_8049aac, i1* %zf.global-to-local, align 1
  br i1 %v4_8049aac, label %dec_label_pc_8049c4e, label %dec_label_pc_8049ab4

dec_label_pc_8049ab4:                             ; preds = %dec_label_pc_8049c4e, %dec_label_pc_8049a77
  %v0_8049ab4.in = phi i32 [ %v0_8049c5b, %dec_label_pc_8049c4e ], [ %v0_8049aa9, %dec_label_pc_8049a77 ]
  %v1_8049ab4 = add i32 %v0_8049ab4.in, 108
  %v2_8049ab4 = inttoptr i32 %v1_8049ab4 to i32*
  %v3_8049ab4 = load i32, i32* %v2_8049ab4, align 4
  store i32 %v3_8049ab4, i32* %edx.global-to-local, align 4
  %v1_8049ab8 = add i32 %v3_8049ab4, -1448
  %v2_8049ab8 = inttoptr i32 %v1_8049ab8 to i8*
  store i8 7, i8* %v2_8049ab8, align 1
  br label %dec_label_pc_8049abf

dec_label_pc_8049abf:                             ; preds = %dec_label_pc_8049c66, %dec_label_pc_8049ab4
  %v0_8049abf = load i32, i32* @esp, align 4
  %v1_8049abf = add i32 %v0_8049abf, -4
  %v2_8049abf = inttoptr i32 %v1_8049abf to i32*
  store i32 16384, i32* %v2_8049abf, align 4
  %v0_8049ac4 = load i32, i32* @esi, align 4
  %v2_8049ac4 = add i32 %v0_8049abf, -8
  %v3_8049ac4 = inttoptr i32 %v2_8049ac4 to i32*
  store i32 %v0_8049ac4, i32* %v3_8049ac4, align 4
  %v1_8049ac5 = add i32 %v0_8049abf, 131
  store i32 %v1_8049ac5, i32* %eax.global-to-local, align 4
  %v2_8049acc = add i32 %v0_8049abf, -12
  %v3_8049acc = inttoptr i32 %v2_8049acc to i32*
  store i32 %v1_8049ac5, i32* %v3_8049acc, align 4
  %v1_8049acd = add i32 %v0_8049abf, 92
  %v2_8049acd = inttoptr i32 %v1_8049acd to i32*
  %v3_8049acd = load i32, i32* %v2_8049acd, align 4
  store i32 %v3_8049acd, i32* %edx.global-to-local, align 4
  %v1_8049ad1 = add i32 %v3_8049acd, -1452
  %v2_8049ad1 = inttoptr i32 %v1_8049ad1 to i32*
  %v3_8049ad1 = load i32, i32* %v2_8049ad1, align 4
  store i32 %v3_8049ad1, i32* %eax.global-to-local, align 4
  %v2_8049ad7 = add i32 %v0_8049abf, -16
  %v3_8049ad7 = inttoptr i32 %v2_8049ad7 to i32*
  store i32 %v3_8049ad1, i32* %v3_8049ad7, align 4
  %v0_8049ad8 = call i32 @function_805264e()
  store i32 %v0_8049ad8, i32* %eax.global-to-local, align 4
  %v0_8049add = load i32, i32* @esp, align 4
  %v6_8049add = icmp eq i32 %v0_8049add, -16
  store i1 %v6_8049add, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049ae5:                             ; preds = %dec_label_pc_8048ebe
  %v3_8049ae5 = load i32, i32* %v2_8049ae5, align 4
  %v4_8049ae5 = add i32 %v3_8049ae5, -10239
  %v9_8049ae5 = sub i32 10238, %v3_8049ae5
  %v10_8049ae5 = and i32 %v9_8049ae5, %v3_8049ae5
  %v11_8049ae5 = icmp slt i32 %v10_8049ae5, 0
  %v12_8049ae5 = icmp eq i32 %v4_8049ae5, 0
  store i1 %v12_8049ae5, i1* %zf.global-to-local, align 1
  %v13_8049ae5 = icmp slt i32 %v4_8049ae5, 0
  %v3_8049aed = icmp ne i1 %v13_8049ae5, %v11_8049ae5
  %v4_8049aed = or i1 %v12_8049ae5, %v3_8049aed
  br i1 %v4_8049aed, label %dec_label_pc_8048d91, label %dec_label_pc_8048ee1

dec_label_pc_8049af8:                             ; preds = %dec_label_pc_8049577
  %v0_8049af8 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049af8 = add i32 %v0_8049af8, -1448
  %v2_8049af8 = inttoptr i32 %v1_8049af8 to i8*
  store i8 1, i8* %v2_8049af8, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049b04:                             ; preds = %dec_label_pc_80497ba
  %v0_8049b04 = load i32, i32* @ebx, align 4
  %v1_8049b04 = inttoptr i32 %v0_8049b04 to i32*
  store i32 104, i32* %v1_8049b04, align 4
  %v0_80497f9.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80497f9

dec_label_pc_8049b0f:                             ; preds = %dec_label_pc_8049518
  %v0_8049b0f = load i32, i32* @edi, align 4
  %v1_8049b0f = inttoptr i32 %v0_8049b0f to i32*
  %v2_8049b0f = load i32, i32* %v1_8049b0f, align 4
  %v11_8049b0f = icmp eq i32 %v2_8049b0f, 11
  store i1 %v11_8049b0f, i1* %zf.global-to-local, align 1
  %v1_8049b12 = icmp eq i1 %v11_8049b0f, false
  br i1 %v1_8049b12, label %dec_label_pc_8048e4a, label %dec_label_pc_8048d91

dec_label_pc_8049b1d:                             ; preds = %dec_label_pc_8049468
  %v1_8049b1d = add i32 %v0_804948a, 20916
  %v2_8049b1d = inttoptr i32 %v1_8049b1d to i32*
  store i32 7, i32* %v2_8049b1d, align 4
  %v0_8049b28 = load i32, i32* @esi, align 4
  %v1_8049b28 = add i32 %v0_8049b28, 4
  %v2_8049b28 = inttoptr i32 %v1_8049b28 to i8*
  %v3_8049b28 = load i8, i8* %v2_8049b28, align 1
  %v12_8049b28 = icmp eq i8 %v3_8049b28, 115
  store i1 %v12_8049b28, i1* %zf.global-to-local, align 1
  br i1 %v12_8049b28, label %dec_label_pc_8049d93, label %dec_label_pc_8049b32

dec_label_pc_8049b32:                             ; preds = %dec_label_pc_8049b1d, %dec_label_pc_8049d93
  %v0_8049b32 = load i32, i32* @esp, align 4
  %v1_8049b32 = add i32 %v0_8049b32, 20900
  %v2_8049b32 = inttoptr i32 %v1_8049b32 to i32*
  %v3_8049b32 = load i32, i32* %v2_8049b32, align 4
  store i32 %v3_8049b32, i32* %eax.global-to-local, align 4
  %v0_8049b39 = load i32, i32* @edx, align 4
  %v2_8049b39 = add i32 %v0_8049b32, -4
  %v3_8049b39 = inttoptr i32 %v2_8049b39 to i32*
  store i32 %v0_8049b39, i32* %v3_8049b39, align 4
  %v0_8049b3a = load i32, i32* @ebx, align 4
  %v1_8049b3a = load i32, i32* %eax.global-to-local, align 4
  %v2_8049b3a = sub i32 %v0_8049b3a, %v1_8049b3a
  %v12_8049b3a = icmp eq i32 %v2_8049b3a, 0
  store i1 %v12_8049b3a, i1* %zf.global-to-local, align 1
  store i32 %v2_8049b3a, i32* @ebx, align 4
  %v0_8049b3c = load i32, i32* @esi, align 4
  %v2_8049b3c = add i32 %v0_8049b3c, %v1_8049b3a
  store i32 %v2_8049b3c, i32* %eax.global-to-local, align 4
  %v2_8049b3f = add i32 %v0_8049b32, -8
  %v3_8049b3f = inttoptr i32 %v2_8049b3f to i32*
  store i32 %v2_8049b3a, i32* %v3_8049b3f, align 4
  %v0_8049b40 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049b40 = add i32 %v0_8049b32, -12
  %v3_8049b40 = inttoptr i32 %v2_8049b40 to i32*
  store i32 %v0_8049b40, i32* %v3_8049b40, align 4
  %v0_8049b41 = load i32, i32* @esi, align 4
  %v2_8049b41 = add i32 %v0_8049b32, -16
  %v3_8049b41 = inttoptr i32 %v2_8049b41 to i32*
  store i32 %v0_8049b41, i32* %v3_8049b41, align 4
  %v4_8049b42 = call i32 @function_80524e3(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049b42, i32* %eax.global-to-local, align 4
  %v0_8049b47 = load i32, i32* @esp, align 4
  %v1_8049b47 = add i32 %v0_8049b47, 20916
  %v2_8049b47 = inttoptr i32 %v1_8049b47 to i32*
  store i32 0, i32* %v2_8049b47, align 4
  %v0_8049b52 = load i32, i32* @esi, align 4
  %v1_8049b52 = inttoptr i32 %v0_8049b52 to i8*
  %v2_8049b52 = load i8, i8* %v1_8049b52, align 1
  %v3_8049b52 = zext i8 %v2_8049b52 to i32
  %v5_8049b52 = and i32 %v4_8049b42, -256
  %v6_8049b52 = or i32 %v3_8049b52, %v5_8049b52
  store i32 %v6_8049b52, i32* %eax.global-to-local, align 4
  %v0_8049b54 = load i32, i32* @esp, align 4
  %v4_8049b57 = icmp eq i8 %v2_8049b52, 0
  store i1 %v4_8049b57, i1* %zf.global-to-local, align 1
  br i1 %v4_8049b57, label %dec_label_pc_8049b86, label %dec_label_pc_8049b5b

dec_label_pc_8049b5b:                             ; preds = %dec_label_pc_8049b32
  store i32 %v0_8049b52, i32* %ecx.global-to-local, align 4
  %v10_8049b5d = icmp eq i8 %v2_8049b52, 47
  store i1 %v10_8049b5d, i1* %zf.global-to-local, align 1
  br i1 %v10_8049b5d, label %dec_label_pc_8049c80, label %dec_label_pc_8049b65

dec_label_pc_8049b65:                             ; preds = %dec_label_pc_8049b5b
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_8049b76172 = add i32 %v0_8049b52, 1
  store i32 %v2_8049b76172, i32* %ecx.global-to-local, align 4
  %v2_8049b79173 = add i32 %v0_8049b54, 20916
  %v3_8049b79174 = inttoptr i32 %v2_8049b79173 to i32*
  store i32 1, i32* %v3_8049b79174, align 4
  %v0_8049b80175 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049b80176 = inttoptr i32 %v0_8049b80175 to i8*
  %v2_8049b80177 = load i8, i8* %v1_8049b80176, align 1
  %v3_8049b80178 = zext i8 %v2_8049b80177 to i32
  %v4_8049b80179 = load i32, i32* @edx, align 4
  %v5_8049b80180 = and i32 %v4_8049b80179, -256
  %v6_8049b80181 = or i32 %v5_8049b80180, %v3_8049b80178
  store i32 %v6_8049b80181, i32* %edx.global-to-local, align 4
  %v4_8049b82182 = icmp eq i8 %v2_8049b80177, 0
  store i1 %v4_8049b82182, i1* %zf.global-to-local, align 1
  %v1_8049b84183 = icmp eq i1 %v4_8049b82182, false
  br i1 %v1_8049b84183, label %dec_label_pc_8049b6c, label %dec_label_pc_8049b86

dec_label_pc_8049b6c:                             ; preds = %dec_label_pc_8049b65, %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge
  %v2_8049b80185 = phi i8 [ %v2_8049b80, %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge ], [ %v2_8049b80177, %dec_label_pc_8049b65 ]
  %v0_8049b80184 = phi i32 [ %v0_8049b80, %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge ], [ %v0_8049b80175, %dec_label_pc_8049b65 ]
  %v0_8049b6c = load i32, i32* %eax.global-to-local, align 4
  %v1_8049b6c = add i32 %v0_8049b6c, 1
  store i32 %v1_8049b6c, i32* %eax.global-to-local, align 4
  %v10_8049b6d = icmp eq i8 %v2_8049b80185, 47
  store i1 %v10_8049b6d, i1* %zf.global-to-local, align 1
  br i1 %v10_8049b6d, label %dec_label_pc_8049c80, label %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge

dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge: ; preds = %dec_label_pc_8049b6c
  %v1_8049b76.pre = load i32, i32* @esi, align 4
  %v1_8049b79.pre = load i32, i32* @esp, align 4
  %v2_8049b76 = add i32 %v1_8049b6c, %v1_8049b76.pre
  store i32 %v2_8049b76, i32* %ecx.global-to-local, align 4
  %v2_8049b79 = add i32 %v1_8049b79.pre, 20900
  %v3_8049b79 = inttoptr i32 %v2_8049b79 to i32*
  store i32 %v1_8049b6c, i32* %v3_8049b79, align 4
  %v0_8049b80 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049b80 = inttoptr i32 %v0_8049b80 to i8*
  %v2_8049b80 = load i8, i8* %v1_8049b80, align 1
  %v3_8049b80 = zext i8 %v2_8049b80 to i32
  %v4_8049b80 = load i32, i32* %edx.global-to-local, align 4
  %v5_8049b80 = and i32 %v4_8049b80, -256
  %v6_8049b80 = or i32 %v5_8049b80, %v3_8049b80
  store i32 %v6_8049b80, i32* %edx.global-to-local, align 4
  %v4_8049b82 = icmp eq i8 %v2_8049b80, 0
  store i1 %v4_8049b82, i1* %zf.global-to-local, align 1
  %v1_8049b84 = icmp eq i1 %v4_8049b82, false
  br i1 %v1_8049b84, label %dec_label_pc_8049b6c, label %dec_label_pc_8049b86

dec_label_pc_8049b86:                             ; preds = %dec_label_pc_8049b65, %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge, %dec_label_pc_8049b32, %dec_label_pc_8049c80
  %v0_8049b86 = load i32, i32* @esp, align 4
  %v9_8049b86 = icmp eq i32 %v0_8049b86, 12
  store i1 %v9_8049b86, i1* %zf.global-to-local, align 1
  %v0_8049b89 = load i32, i32* @esi, align 4
  %v2_8049b89 = add i32 %v0_8049b86, -16
  %v3_8049b89 = inttoptr i32 %v2_8049b89 to i32*
  store i32 %v0_8049b89, i32* %v3_8049b89, align 4
  %v2_8049b8a = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_8049b8a, i32* %eax.global-to-local, align 4
  %v0_8049b8f = load i32, i32* @esp, align 4
  %v1_8049b8f = add i32 %v0_8049b8f, 16
  %v1_8049b92 = icmp eq i32 %v2_8049b8a, 0
  store i1 %v1_8049b92, i1* %zf.global-to-local, align 1
  %tmp148 = icmp slt i32 %v2_8049b8a, 1
  br i1 %tmp148, label %dec_label_pc_8049bbc, label %dec_label_pc_8049b96

dec_label_pc_8049b96:                             ; preds = %dec_label_pc_8049b86
  %v9_8049b96 = icmp eq i32 %v0_8049b8f, -4
  store i1 %v9_8049b96, i1* %zf.global-to-local, align 1
  %v0_8049b99 = load i32, i32* @esi, align 4
  %v3_8049b99 = inttoptr i32 %v0_8049b8f to i32*
  store i32 %v0_8049b99, i32* %v3_8049b99, align 4
  %v2_8049b9a = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_8049b9a, i32* %eax.global-to-local, align 4
  %v0_8049b9f = load i32, i32* @esp, align 4
  %v1_8049b9f = add i32 %v0_8049b9f, 16
  %v1_8049ba2 = add i32 %v2_8049b9a, -127
  %v6_8049ba2 = sub i32 126, %v2_8049b9a
  %v7_8049ba2 = and i32 %v6_8049ba2, %v2_8049b9a
  %v8_8049ba2 = icmp slt i32 %v7_8049ba2, 0
  %v9_8049ba2 = icmp eq i32 %v1_8049ba2, 0
  store i1 %v9_8049ba2, i1* %zf.global-to-local, align 1
  %v10_8049ba2 = icmp slt i32 %v1_8049ba2, 0
  %v3_8049ba5 = icmp eq i1 %v10_8049ba2, %v8_8049ba2
  %v4_8049ba5 = icmp eq i1 %v9_8049ba2, false
  %v5_8049ba5 = and i1 %v4_8049ba5, %v3_8049ba5
  br i1 %v5_8049ba5, label %dec_label_pc_8049bbc, label %dec_label_pc_8049ba7

dec_label_pc_8049ba7:                             ; preds = %dec_label_pc_8049b96
  %v2_8049ba7 = add i32 %v0_8049b9f, 12
  %v3_8049ba7 = inttoptr i32 %v2_8049ba7 to i32*
  store i32 %v2_8049b9a, i32* %v3_8049ba7, align 4
  %v2_8049ba8 = add i32 %v0_8049b9f, 8
  %v3_8049ba8 = inttoptr i32 %v2_8049ba8 to i32*
  store i32 %v2_8049b9a, i32* %v3_8049ba8, align 4
  %v0_8049ba9 = load i32, i32* @esi, align 4
  %v2_8049ba9 = add i32 %v0_8049b9f, 4
  %v3_8049ba9 = inttoptr i32 %v2_8049ba9 to i32*
  store i32 %v0_8049ba9, i32* %v3_8049ba9, align 4
  %v1_8049baa = add i32 %v0_8049b9f, 92
  %v2_8049baa = inttoptr i32 %v1_8049baa to i32*
  %v3_8049baa = load i32, i32* %v2_8049baa, align 4
  %v1_8049bae = add i32 %v3_8049baa, 789
  %v9_8049bae = icmp eq i32 %v1_8049bae, 0
  store i1 %v9_8049bae, i1* %zf.global-to-local, align 1
  store i32 %v1_8049bae, i32* %eax.global-to-local, align 4
  %v3_8049bb3 = inttoptr i32 %v0_8049b9f to i32*
  store i32 %v1_8049bae, i32* %v3_8049bb3, align 4
  %v3_8049bb4 = call i32 @function_8051a00(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049bb4, i32* %eax.global-to-local, align 4
  %v0_8049bb9 = load i32, i32* @esp, align 4
  %v1_8049bb9 = add i32 %v0_8049bb9, 16
  %v6_8049bb9 = icmp eq i32 %v1_8049bb9, 0
  store i1 %v6_8049bb9, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049bbc

dec_label_pc_8049bbc:                             ; preds = %dec_label_pc_8049b96, %dec_label_pc_8049b86, %dec_label_pc_8049ba7
  %v0_8049bbc = phi i32 [ %v1_8049b9f, %dec_label_pc_8049b96 ], [ %v1_8049b8f, %dec_label_pc_8049b86 ], [ %v1_8049bb9, %dec_label_pc_8049ba7 ]
  %v0_8049bbf = load i32, i32* @esi, align 4
  store i32 %v0_8049bbf, i32* %eax.global-to-local, align 4
  %v1_8049bc1 = add i32 %v0_8049bbc, 20900
  %v2_8049bc1 = inttoptr i32 %v1_8049bc1 to i32*
  %v3_8049bc1 = load i32, i32* %v2_8049bc1, align 4
  %v2_8049bc8 = add i32 %v0_8049bbf, 1
  %v1_8049bca = add i32 %v2_8049bc8, %v3_8049bc1
  %v8_8049bca = icmp eq i32 %v1_8049bca, 0
  store i1 %v8_8049bca, i1* %zf.global-to-local, align 1
  store i32 %v1_8049bca, i32* %eax.global-to-local, align 4
  %v2_8049bcb = add i32 %v0_8049bbc, -16
  %v3_8049bcb = inttoptr i32 %v2_8049bcb to i32*
  store i32 %v1_8049bca, i32* %v3_8049bcb, align 4
  %v2_8049bcc = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_8049bcc, i32* @eax, align 4
  %v0_8049bd1 = load i32, i32* @esp, align 4
  %v1_8049bd1 = add i32 %v0_8049bd1, 16
  %v1_8049bd4 = add i32 %v2_8049bcc, -255
  %v6_8049bd4 = sub i32 254, %v2_8049bcc
  %v7_8049bd4 = and i32 %v6_8049bd4, %v2_8049bcc
  %v8_8049bd4 = icmp slt i32 %v7_8049bd4, 0
  %v9_8049bd4 = icmp eq i32 %v1_8049bd4, 0
  store i1 %v9_8049bd4, i1* %zf.global-to-local, align 1
  %v10_8049bd4 = icmp slt i32 %v1_8049bd4, 0
  %v3_8049bd9 = icmp eq i1 %v10_8049bd4, %v8_8049bd4
  %v4_8049bd9 = icmp eq i1 %v9_8049bd4, false
  %v5_8049bd9 = and i1 %v4_8049bd9, %v3_8049bd9
  br i1 %v5_8049bd9, label %dec_label_pc_804949f, label %dec_label_pc_8049bdf

dec_label_pc_8049bdf:                             ; preds = %dec_label_pc_8049bbc
  %v1_8049bdf = add i32 %v0_8049bd1, 92
  %v2_8049bdf = inttoptr i32 %v1_8049bdf to i32*
  %v3_8049bdf = load i32, i32* %v2_8049bdf, align 4
  store i32 %v3_8049bdf, i32* %ebx.global-to-local, align 4
  %v0_8049be3 = load i32, i32* @edi, align 4
  %v2_8049be3 = add i32 %v0_8049bd1, 12
  %v3_8049be3 = inttoptr i32 %v2_8049be3 to i32*
  store i32 %v0_8049be3, i32* %v3_8049be3, align 4
  %v0_8049be4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049be4 = add i32 %v0_8049be4, 533
  %v9_8049be4 = icmp eq i32 %v1_8049be4, 0
  store i1 %v9_8049be4, i1* %zf.global-to-local, align 1
  store i32 %v1_8049be4, i32* @ebx, align 4
  %v0_8049bea = load i32, i32* @edi, align 4
  %v2_8049bea = add i32 %v0_8049bd1, 8
  %v3_8049bea = inttoptr i32 %v2_8049bea to i32*
  store i32 %v0_8049bea, i32* %v3_8049bea, align 4
  %v1_8049beb = add i32 %v0_8049bd1, 4
  %v2_8049beb = inttoptr i32 %v1_8049beb to i32*
  store i32 255, i32* %v2_8049beb, align 4
  %v0_8049bf0 = load i32, i32* @ebx, align 4
  %v3_8049bf0 = inttoptr i32 %v0_8049bd1 to i32*
  store i32 %v0_8049bf0, i32* %v3_8049bf0, align 4
  %v2_8049bf1 = call i32 @function_8051a70(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_8049bf1, i32* %eax.global-to-local, align 4
  %v0_8049bf6 = load i32, i32* @esp, align 4
  %v1_8049bf6 = inttoptr i32 %v0_8049bf6 to i32*
  %v2_8049bf6 = load i32, i32* %v1_8049bf6, align 4
  store i32 %v2_8049bf6, i32* %ecx.global-to-local, align 4
  %v0_8049bf7 = load i32, i32* @esi, align 4
  store i32 %v0_8049bf7, i32* %eax.global-to-local, align 4
  %v1_8049bf9 = add i32 %v0_8049bf6, 20916
  %v2_8049bf9 = inttoptr i32 %v1_8049bf9 to i32*
  %v3_8049bf9 = load i32, i32* %v2_8049bf9, align 4
  store i32 %v3_8049bf9, i32* %edx.global-to-local, align 4
  %v2_8049c00 = add i32 %v0_8049bf7, 1
  %v1_8049c02 = add i32 %v2_8049c00, %v3_8049bf9
  %v8_8049c02 = icmp eq i32 %v1_8049c02, 0
  store i1 %v8_8049c02, i1* %zf.global-to-local, align 1
  store i32 %v1_8049c02, i32* %eax.global-to-local, align 4
  store i32 %v1_8049c02, i32* %v1_8049bf6, align 4
  %v2_8049c04 = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_8049c04, i32* %eax.global-to-local, align 4
  %v0_8049c09 = load i32, i32* @esp, align 4
  %v1_8049c09 = add i32 %v0_8049c09, 16
  %v1_8049c0c = icmp eq i32 %v2_8049c04, 0
  store i1 %v1_8049c0c, i1* %zf.global-to-local, align 1
  %tmp149 = icmp slt i32 %v2_8049c04, 1
  br i1 %tmp149, label %dec_label_pc_804949f, label %dec_label_pc_8049c14

dec_label_pc_8049c14:                             ; preds = %dec_label_pc_8049cbd, %dec_label_pc_8049bdf
  %v1_8049c14 = phi i32 [ %v1_8049cd2, %dec_label_pc_8049cbd ], [ %v1_8049c09, %dec_label_pc_8049bdf ]
  %v0_8049c14 = phi i32 [ %v2_8049ccd, %dec_label_pc_8049cbd ], [ %v2_8049c04, %dec_label_pc_8049bdf ]
  %v2_8049c14 = add i32 %v1_8049c14, -4
  %v3_8049c14 = inttoptr i32 %v2_8049c14 to i32*
  store i32 %v0_8049c14, i32* %v3_8049c14, align 4
  %v0_8049c15 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049c15 = add i32 %v1_8049c14, -8
  %v3_8049c15 = inttoptr i32 %v2_8049c15 to i32*
  store i32 %v0_8049c15, i32* %v3_8049c15, align 4
  %v1_8049c16 = add i32 %v1_8049c14, 20900
  %v2_8049c16 = inttoptr i32 %v1_8049c16 to i32*
  %v3_8049c16 = load i32, i32* %v2_8049c16, align 4
  %v0_8049c1d = load i32, i32* @esi, align 4
  %v2_8049c1d = add i32 %v0_8049c1d, %v3_8049c16
  %v12_8049c1d = icmp eq i32 %v2_8049c1d, 0
  store i1 %v12_8049c1d, i1* %zf.global-to-local, align 1
  %v1_8049c1f = add i32 %v2_8049c1d, 1
  store i32 %v1_8049c1f, i32* %eax.global-to-local, align 4
  %v2_8049c22 = add i32 %v1_8049c14, -12
  %v3_8049c22 = inttoptr i32 %v2_8049c22 to i32*
  store i32 %v1_8049c1f, i32* %v3_8049c22, align 4
  %v0_8049c23 = load i32, i32* @ebx, align 4
  %v2_8049c23 = add i32 %v1_8049c14, -16
  %v3_8049c23 = inttoptr i32 %v2_8049c23 to i32*
  store i32 %v0_8049c23, i32* %v3_8049c23, align 4
  %v3_8049c24 = call i32 @function_8051a00(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049c24, i32* %eax.global-to-local, align 4
  %v0_8049c29 = load i32, i32* @esp, align 4
  %v1_8049c29 = add i32 %v0_8049c29, 16
  %v6_8049c29 = icmp eq i32 %v1_8049c29, 0
  store i1 %v6_8049c29, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_804949f

dec_label_pc_8049c31:                             ; preds = %dec_label_pc_80497f0
  %v1_8049c31 = add i32 %v0_80497e2, 108
  %v2_8049c31 = inttoptr i32 %v1_8049c31 to i32*
  %v3_8049c31 = load i32, i32* %v2_8049c31, align 4
  store i32 %v3_8049c31, i32* %ecx.global-to-local, align 4
  %v1_8049c35 = add i32 %v3_8049c31, -1448
  %v2_8049c35 = inttoptr i32 %v1_8049c35 to i8*
  %v3_8049c35 = load i8, i8* %v2_8049c35, align 1
  %v4_8049c35 = icmp eq i8 %v3_8049c35, 0
  store i1 %v4_8049c35, i1* %zf.global-to-local, align 1
  br i1 %v4_8049c35, label %dec_label_pc_8048d91, label %dec_label_pc_8049c42

dec_label_pc_8049c42:                             ; preds = %dec_label_pc_8049c31
  store i8 1, i8* %v2_8049c35, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049c4e:                             ; preds = %dec_label_pc_8049a77
  %v2_8049c4e = add i32 %v0_8049aa9, 12
  %v3_8049c4e = inttoptr i32 %v2_8049c4e to i32*
  store i32 %v0_8049aa4, i32* %v3_8049c4e, align 4
  %v2_8049c4f = add i32 %v0_8049aa9, 8
  %v3_8049c4f = inttoptr i32 %v2_8049c4f to i32*
  store i32 %v0_8049aa4, i32* %v3_8049c4f, align 4
  %v1_8049c50 = add i32 %v0_8049aa9, 4
  %v2_8049c50 = inttoptr i32 %v1_8049c50 to i32*
  store i32 ptrtoint ([4 x i8]* @global_var_8054894.5 to i32), i32* %v2_8049c50, align 4
  %v0_8049c55 = load i32, i32* @ebx, align 4
  %v3_8049c55 = inttoptr i32 %v0_8049aa9 to i32*
  store i32 %v0_8049c55, i32* %v3_8049c55, align 4
  %v0_8049c56 = call i32 @function_8051d50()
  store i32 %v0_8049c56, i32* %eax.global-to-local, align 4
  %v0_8049c5b = load i32, i32* @esp, align 4
  %v3_8049c5e = trunc i32 %v0_8049c56 to i8
  %v4_8049c5e = icmp eq i8 %v3_8049c5e, 0
  store i1 %v4_8049c5e, i1* %zf.global-to-local, align 1
  %v1_8049c60 = icmp eq i1 %v4_8049c5e, false
  br i1 %v1_8049c60, label %dec_label_pc_8049ab4, label %dec_label_pc_8049c66

dec_label_pc_8049c66:                             ; preds = %dec_label_pc_8049c4e
  %v1_8049c66 = add i32 %v0_8049c5b, 120
  %v2_8049c66 = inttoptr i32 %v1_8049c66 to i32*
  %v3_8049c66 = load i32, i32* %v2_8049c66, align 4
  %v4_8049c66 = load i32, i32* @esi, align 4
  %v5_8049c66 = sub i32 %v3_8049c66, %v4_8049c66
  %v11_8049c66 = xor i32 %v4_8049c66, %v3_8049c66
  %v12_8049c66 = xor i32 %v5_8049c66, %v3_8049c66
  %v13_8049c66 = and i32 %v12_8049c66, %v11_8049c66
  %v14_8049c66 = icmp slt i32 %v13_8049c66, 0
  %v15_8049c66 = icmp eq i32 %v5_8049c66, 0
  store i1 %v15_8049c66, i1* %zf.global-to-local, align 1
  %v16_8049c66 = icmp slt i32 %v5_8049c66, 0
  %v1_8049c6a = add i32 %v0_8049c5b, 108
  %v2_8049c6a = inttoptr i32 %v1_8049c6a to i32*
  %v3_8049c6a = load i32, i32* %v2_8049c6a, align 4
  store i32 %v3_8049c6a, i32* %ecx.global-to-local, align 4
  %v3_8049c6e = icmp eq i1 %v16_8049c66, %v14_8049c66
  %v4_8049c6e = icmp eq i1 %v15_8049c66, false
  %v5_8049c6e = and i1 %v4_8049c6e, %v3_8049c6e
  %v6_8049c6e = zext i1 %v5_8049c6e to i32
  %v8_8049c6e = and i32 %v0_8049c56, -256
  %v9_8049c6e = or i32 %v6_8049c6e, %v8_8049c6e
  %v2_8049c71 = mul i32 %v9_8049c6e, 8
  %v3_8049c71 = add nsw i32 %v9_8049c6e, 1
  %v4_8049c71 = add i32 %v3_8049c71, %v2_8049c71
  store i32 %v4_8049c71, i32* %eax.global-to-local, align 4
  %v1_8049c75 = trunc i32 %v4_8049c71 to i8
  %v3_8049c75 = add i32 %v3_8049c6a, -1448
  %v4_8049c75 = inttoptr i32 %v3_8049c75 to i8*
  store i8 %v1_8049c75, i8* %v4_8049c75, align 1
  br label %dec_label_pc_8049abf

dec_label_pc_8049c80:                             ; preds = %dec_label_pc_8049b6c, %dec_label_pc_8049b5b
  %v0_8049c80 = phi i32 [ %v0_8049b52, %dec_label_pc_8049b5b ], [ %v0_8049b80184, %dec_label_pc_8049b6c ]
  %v1_8049c80 = inttoptr i32 %v0_8049c80 to i8*
  store i8 0, i8* %v1_8049c80, align 1
  br label %dec_label_pc_8049b86

dec_label_pc_8049c88:                             ; preds = %dec_label_pc_8049496
  %v1_8049c88 = add i32 %v0_804948a, 92
  %v2_8049c88 = inttoptr i32 %v1_8049c88 to i32*
  %v3_8049c88 = load i32, i32* %v2_8049c88, align 4
  store i32 %v3_8049c88, i32* %ebx.global-to-local, align 4
  %v0_8049c8c = load i32, i32* @ebp, align 4
  %v2_8049c8c = add i32 %v0_804948a, 12
  %v3_8049c8c = inttoptr i32 %v2_8049c8c to i32*
  store i32 %v0_8049c8c, i32* %v3_8049c8c, align 4
  %v0_8049c8d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049c8d = add i32 %v0_8049c8d, 533
  %v9_8049c8d = icmp eq i32 %v1_8049c8d, 0
  store i1 %v9_8049c8d, i1* %zf.global-to-local, align 1
  store i32 %v1_8049c8d, i32* @ebx, align 4
  %v0_8049c93 = load i32, i32* @ebp, align 4
  %v2_8049c93 = add i32 %v0_804948a, 8
  %v3_8049c93 = inttoptr i32 %v2_8049c93 to i32*
  store i32 %v0_8049c93, i32* %v3_8049c93, align 4
  %v1_8049c94 = add i32 %v0_804948a, 4
  %v2_8049c94 = inttoptr i32 %v1_8049c94 to i32*
  store i32 255, i32* %v2_8049c94, align 4
  %v0_8049c99 = load i32, i32* @ebx, align 4
  %v3_8049c99 = inttoptr i32 %v0_804948a to i32*
  store i32 %v0_8049c99, i32* %v3_8049c99, align 4
  %v2_8049c9a = call i32 @function_8051a70(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_8049c9a, i32* %eax.global-to-local, align 4
  %v0_8049c9f = load i32, i32* @esp, align 4
  %v1_8049c9f = inttoptr i32 %v0_8049c9f to i32*
  %v2_8049c9f = load i32, i32* %v1_8049c9f, align 4
  store i32 %v2_8049c9f, i32* @edi, align 4
  %v0_8049ca0 = load i32, i32* @esi, align 4
  store i32 %v0_8049ca0, i32* %eax.global-to-local, align 4
  %v1_8049ca2 = add i32 %v0_8049c9f, 20916
  %v2_8049ca2 = inttoptr i32 %v1_8049ca2 to i32*
  %v3_8049ca2 = load i32, i32* %v2_8049ca2, align 4
  store i32 %v3_8049ca2, i32* %ecx.global-to-local, align 4
  %v2_8049ca9 = add i32 %v0_8049ca0, 1
  %v1_8049cab = add i32 %v2_8049ca9, %v3_8049ca2
  %v8_8049cab = icmp eq i32 %v1_8049cab, 0
  store i1 %v8_8049cab, i1* %zf.global-to-local, align 1
  store i32 %v1_8049cab, i32* %eax.global-to-local, align 4
  store i32 %v1_8049cab, i32* %v1_8049c9f, align 4
  %v2_8049cad = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_8049cad, i32* %eax.global-to-local, align 4
  %v0_8049cb2 = load i32, i32* @esp, align 4
  %v1_8049cb2 = add i32 %v0_8049cb2, 16
  %v1_8049cb5 = icmp eq i32 %v2_8049cad, 0
  store i1 %v1_8049cb5, i1* %zf.global-to-local, align 1
  %tmp150 = icmp slt i32 %v2_8049cad, 1
  br i1 %tmp150, label %dec_label_pc_804949f, label %dec_label_pc_8049cbd

dec_label_pc_8049cbd:                             ; preds = %dec_label_pc_8049c88
  %v0_8049cc0 = load i32, i32* @esi, align 4
  store i32 %v0_8049cc0, i32* %eax.global-to-local, align 4
  %v1_8049cc2 = add i32 %v0_8049cb2, 20916
  %v2_8049cc2 = inttoptr i32 %v1_8049cc2 to i32*
  %v3_8049cc2 = load i32, i32* %v2_8049cc2, align 4
  store i32 %v3_8049cc2, i32* %edx.global-to-local, align 4
  %v2_8049cc9 = add i32 %v0_8049cc0, 1
  %v1_8049ccb = add i32 %v2_8049cc9, %v3_8049cc2
  %v8_8049ccb = icmp eq i32 %v1_8049ccb, 0
  store i1 %v8_8049ccb, i1* %zf.global-to-local, align 1
  store i32 %v1_8049ccb, i32* %eax.global-to-local, align 4
  %v3_8049ccc = inttoptr i32 %v0_8049cb2 to i32*
  store i32 %v1_8049ccb, i32* %v3_8049ccc, align 4
  %v2_8049ccd = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_8049ccd, i32* %eax.global-to-local, align 4
  %v0_8049cd2 = load i32, i32* @esp, align 4
  %v1_8049cd2 = add i32 %v0_8049cd2, 16
  %v1_8049cd5 = add i32 %v2_8049ccd, -255
  %v6_8049cd5 = sub i32 254, %v2_8049ccd
  %v7_8049cd5 = and i32 %v6_8049cd5, %v2_8049ccd
  %v8_8049cd5 = icmp slt i32 %v7_8049cd5, 0
  %v9_8049cd5 = icmp eq i32 %v1_8049cd5, 0
  store i1 %v9_8049cd5, i1* %zf.global-to-local, align 1
  %v10_8049cd5 = icmp slt i32 %v1_8049cd5, 0
  %v3_8049cda = icmp eq i1 %v10_8049cd5, %v8_8049cd5
  %v4_8049cda = icmp eq i1 %v9_8049cd5, false
  %v5_8049cda = and i1 %v4_8049cda, %v3_8049cda
  br i1 %v5_8049cda, label %dec_label_pc_804949f, label %dec_label_pc_8049c14

dec_label_pc_8049ce5:                             ; preds = %dec_label_pc_8049ec7, %dec_label_pc_8049eb6
  %v0_8049ce5 = phi i32 [ %v0_8049eac, %dec_label_pc_8049eb6 ], [ %v0_8049edb208, %dec_label_pc_8049ec7 ]
  %v1_8049ce5 = inttoptr i32 %v0_8049ce5 to i8*
  store i8 0, i8* %v1_8049ce5, align 1
  br label %dec_label_pc_8049ce8

dec_label_pc_8049ce8:                             ; preds = %dec_label_pc_8049ec0, %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge, %dec_label_pc_8049e86, %dec_label_pc_8049ce5
  %v0_8049ce8 = load i32, i32* @esp, align 4
  %v9_8049ce8 = icmp eq i32 %v0_8049ce8, 12
  store i1 %v9_8049ce8, i1* %zf.global-to-local, align 1
  %v0_8049ceb = load i32, i32* @ebx, align 4
  %v2_8049ceb = add i32 %v0_8049ce8, -16
  %v3_8049ceb = inttoptr i32 %v2_8049ceb to i32*
  store i32 %v0_8049ceb, i32* %v3_8049ceb, align 4
  %v2_8049cec = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_8049cec, i32* %eax.global-to-local, align 4
  %v0_8049cf1 = load i32, i32* @esp, align 4
  %v1_8049cf1 = add i32 %v0_8049cf1, 16
  %v1_8049cf4 = icmp eq i32 %v2_8049cec, 0
  store i1 %v1_8049cf4, i1* %zf.global-to-local, align 1
  %tmp151 = icmp slt i32 %v2_8049cec, 1
  br i1 %tmp151, label %dec_label_pc_8049d1e, label %dec_label_pc_8049cf8

dec_label_pc_8049cf8:                             ; preds = %dec_label_pc_8049ce8
  %v9_8049cf8 = icmp eq i32 %v0_8049cf1, -4
  store i1 %v9_8049cf8, i1* %zf.global-to-local, align 1
  %v0_8049cfb = load i32, i32* @ebx, align 4
  %v3_8049cfb = inttoptr i32 %v0_8049cf1 to i32*
  store i32 %v0_8049cfb, i32* %v3_8049cfb, align 4
  %v2_8049cfc = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_8049cfc, i32* %eax.global-to-local, align 4
  %v0_8049d01 = load i32, i32* @esp, align 4
  %v1_8049d01 = add i32 %v0_8049d01, 16
  %v1_8049d04 = add i32 %v2_8049cfc, -127
  %v6_8049d04 = sub i32 126, %v2_8049cfc
  %v7_8049d04 = and i32 %v6_8049d04, %v2_8049cfc
  %v8_8049d04 = icmp slt i32 %v7_8049d04, 0
  %v9_8049d04 = icmp eq i32 %v1_8049d04, 0
  store i1 %v9_8049d04, i1* %zf.global-to-local, align 1
  %v10_8049d04 = icmp slt i32 %v1_8049d04, 0
  %v3_8049d07 = icmp eq i1 %v10_8049d04, %v8_8049d04
  %v4_8049d07 = icmp eq i1 %v9_8049d04, false
  %v5_8049d07 = and i1 %v4_8049d07, %v3_8049d07
  br i1 %v5_8049d07, label %dec_label_pc_8049d1e, label %dec_label_pc_8049d09

dec_label_pc_8049d09:                             ; preds = %dec_label_pc_8049cf8
  %v2_8049d09 = add i32 %v0_8049d01, 12
  %v3_8049d09 = inttoptr i32 %v2_8049d09 to i32*
  store i32 %v2_8049cfc, i32* %v3_8049d09, align 4
  %v2_8049d0a = add i32 %v0_8049d01, 8
  %v3_8049d0a = inttoptr i32 %v2_8049d0a to i32*
  store i32 %v2_8049cfc, i32* %v3_8049d0a, align 4
  %v0_8049d0b = load i32, i32* @ebx, align 4
  %v2_8049d0b = add i32 %v0_8049d01, 4
  %v3_8049d0b = inttoptr i32 %v2_8049d0b to i32*
  store i32 %v0_8049d0b, i32* %v3_8049d0b, align 4
  %v1_8049d0c = add i32 %v0_8049d01, 92
  %v2_8049d0c = inttoptr i32 %v1_8049d0c to i32*
  %v3_8049d0c = load i32, i32* %v2_8049d0c, align 4
  %v1_8049d10 = add i32 %v3_8049d0c, 789
  %v9_8049d10 = icmp eq i32 %v1_8049d10, 0
  store i1 %v9_8049d10, i1* %zf.global-to-local, align 1
  store i32 %v1_8049d10, i32* %eax.global-to-local, align 4
  %v3_8049d15 = inttoptr i32 %v0_8049d01 to i32*
  store i32 %v1_8049d10, i32* %v3_8049d15, align 4
  %v3_8049d16 = call i32 @function_8051a00(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049d16, i32* %eax.global-to-local, align 4
  %v0_8049d1b = load i32, i32* @esp, align 4
  %v1_8049d1b = add i32 %v0_8049d1b, 16
  %v6_8049d1b = icmp eq i32 %v1_8049d1b, 0
  store i1 %v6_8049d1b, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049d1e

dec_label_pc_8049d1e:                             ; preds = %dec_label_pc_8049cf8, %dec_label_pc_8049ce8, %dec_label_pc_8049a40, %dec_label_pc_8049d09
  %v0_8049d1e = phi i32 [ %v1_8049d01, %dec_label_pc_8049cf8 ], [ %v1_8049cf1, %dec_label_pc_8049ce8 ], [ %v1_8049a34, %dec_label_pc_8049a40 ], [ %v1_8049d1b, %dec_label_pc_8049d09 ]
  %v0_8049d21 = load i32, i32* @ebx, align 4
  store i32 %v0_8049d21, i32* %eax.global-to-local, align 4
  %v1_8049d23 = add i32 %v0_8049d1e, 20900
  %v2_8049d23 = inttoptr i32 %v1_8049d23 to i32*
  %v3_8049d23 = load i32, i32* %v2_8049d23, align 4
  store i32 %v3_8049d23, i32* @ebp, align 4
  %v2_8049d2a = add i32 %v0_8049d21, 1
  %v1_8049d2c = add i32 %v2_8049d2a, %v3_8049d23
  %v8_8049d2c = icmp eq i32 %v1_8049d2c, 0
  store i1 %v8_8049d2c, i1* %zf.global-to-local, align 1
  store i32 %v1_8049d2c, i32* %eax.global-to-local, align 4
  %v2_8049d2d = add i32 %v0_8049d1e, -16
  %v3_8049d2d = inttoptr i32 %v2_8049d2d to i32*
  store i32 %v1_8049d2c, i32* %v3_8049d2d, align 4
  %v2_8049d2e = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_8049d2e, i32* @eax, align 4
  %v0_8049d33 = load i32, i32* @esp, align 4
  %v1_8049d33 = add i32 %v0_8049d33, 16
  %v1_8049d36 = add i32 %v2_8049d2e, -255
  %v6_8049d36 = sub i32 254, %v2_8049d2e
  %v7_8049d36 = and i32 %v6_8049d36, %v2_8049d2e
  %v8_8049d36 = icmp slt i32 %v7_8049d36, 0
  %v9_8049d36 = icmp eq i32 %v1_8049d36, 0
  store i1 %v9_8049d36, i1* %zf.global-to-local, align 1
  %v10_8049d36 = icmp slt i32 %v1_8049d36, 0
  %v3_8049d3b = icmp eq i1 %v10_8049d36, %v8_8049d36
  %v4_8049d3b = icmp eq i1 %v9_8049d36, false
  %v5_8049d3b = and i1 %v4_8049d3b, %v3_8049d3b
  br i1 %v5_8049d3b, label %dec_label_pc_8049a49, label %dec_label_pc_8049d41

dec_label_pc_8049d41:                             ; preds = %dec_label_pc_8049d1e
  %v1_8049d41 = add i32 %v0_8049d33, 92
  %v2_8049d41 = inttoptr i32 %v1_8049d41 to i32*
  %v3_8049d41 = load i32, i32* %v2_8049d41, align 4
  store i32 %v3_8049d41, i32* %esi.global-to-local, align 4
  %v0_8049d45 = load i32, i32* @edi, align 4
  %v2_8049d45 = add i32 %v0_8049d33, 12
  %v3_8049d45 = inttoptr i32 %v2_8049d45 to i32*
  store i32 %v0_8049d45, i32* %v3_8049d45, align 4
  %v0_8049d46 = load i32, i32* %esi.global-to-local, align 4
  %v1_8049d46 = add i32 %v0_8049d46, 533
  %v9_8049d46 = icmp eq i32 %v1_8049d46, 0
  store i1 %v9_8049d46, i1* %zf.global-to-local, align 1
  store i32 %v1_8049d46, i32* @esi, align 4
  %v0_8049d4c = load i32, i32* @edi, align 4
  %v2_8049d4c = add i32 %v0_8049d33, 8
  %v3_8049d4c = inttoptr i32 %v2_8049d4c to i32*
  store i32 %v0_8049d4c, i32* %v3_8049d4c, align 4
  %v1_8049d4d = add i32 %v0_8049d33, 4
  %v2_8049d4d = inttoptr i32 %v1_8049d4d to i32*
  store i32 255, i32* %v2_8049d4d, align 4
  %v0_8049d52 = load i32, i32* @esi, align 4
  %v3_8049d52 = inttoptr i32 %v0_8049d33 to i32*
  store i32 %v0_8049d52, i32* %v3_8049d52, align 4
  %v2_8049d53 = call i32 @function_8051a70(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_8049d53, i32* %eax.global-to-local, align 4
  %v0_8049d58 = load i32, i32* @esp, align 4
  %v1_8049d58 = inttoptr i32 %v0_8049d58 to i32*
  %v2_8049d58 = load i32, i32* %v1_8049d58, align 4
  store i32 %v2_8049d58, i32* %ecx.global-to-local, align 4
  %v0_8049d59 = load i32, i32* @ebx, align 4
  store i32 %v0_8049d59, i32* %eax.global-to-local, align 4
  %v1_8049d5b = add i32 %v0_8049d58, 20916
  %v2_8049d5b = inttoptr i32 %v1_8049d5b to i32*
  %v3_8049d5b = load i32, i32* %v2_8049d5b, align 4
  store i32 %v3_8049d5b, i32* %edx.global-to-local, align 4
  %v2_8049d62 = add i32 %v0_8049d59, 1
  %v1_8049d64 = add i32 %v2_8049d62, %v3_8049d5b
  %v8_8049d64 = icmp eq i32 %v1_8049d64, 0
  store i1 %v8_8049d64, i1* %zf.global-to-local, align 1
  store i32 %v1_8049d64, i32* %eax.global-to-local, align 4
  store i32 %v1_8049d64, i32* %v1_8049d58, align 4
  %v2_8049d66 = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_8049d66, i32* %eax.global-to-local, align 4
  %v0_8049d6b = load i32, i32* @esp, align 4
  %v1_8049d6b = add i32 %v0_8049d6b, 16
  %v1_8049d6e = icmp eq i32 %v2_8049d66, 0
  store i1 %v1_8049d6e, i1* %zf.global-to-local, align 1
  %tmp152 = icmp slt i32 %v2_8049d66, 1
  br i1 %tmp152, label %dec_label_pc_8049a49, label %dec_label_pc_8049d76

dec_label_pc_8049d76:                             ; preds = %dec_label_pc_8049d41
  %v0_8049d76 = load i32, i32* @ebp, align 4
  %v2_8049d76 = add i32 %v0_8049d6b, 12
  %v3_8049d76 = inttoptr i32 %v2_8049d76 to i32*
  store i32 %v0_8049d76, i32* %v3_8049d76, align 4
  %v0_8049d77 = load i32, i32* @ebp, align 4
  %v2_8049d77 = add i32 %v0_8049d6b, 8
  %v3_8049d77 = inttoptr i32 %v2_8049d77 to i32*
  store i32 %v0_8049d77, i32* %v3_8049d77, align 4
  %v1_8049d78 = add i32 %v0_8049d6b, 20916
  %v2_8049d78 = inttoptr i32 %v1_8049d78 to i32*
  %v3_8049d78 = load i32, i32* %v2_8049d78, align 4
  store i32 %v3_8049d78, i32* @edi, align 4
  %v0_8049d7f = load i32, i32* @ebx, align 4
  %v2_8049d7f = add i32 %v0_8049d7f, %v3_8049d78
  %v12_8049d7f = icmp eq i32 %v2_8049d7f, 0
  store i1 %v12_8049d7f, i1* %zf.global-to-local, align 1
  store i32 %v2_8049d7f, i32* @ebx, align 4
  %v1_8049d81 = add i32 %v2_8049d7f, 1
  store i32 %v1_8049d81, i32* %eax.global-to-local, align 4
  %v2_8049d84 = add i32 %v0_8049d6b, 4
  %v3_8049d84 = inttoptr i32 %v2_8049d84 to i32*
  store i32 %v1_8049d81, i32* %v3_8049d84, align 4
  %v0_8049d85 = load i32, i32* @esi, align 4
  %v3_8049d85 = inttoptr i32 %v0_8049d6b to i32*
  store i32 %v0_8049d85, i32* %v3_8049d85, align 4
  %v3_8049d86 = call i32 @function_8051a00(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049d86, i32* %eax.global-to-local, align 4
  %v0_8049d8b = load i32, i32* @esp, align 4
  %v1_8049d8b = add i32 %v0_8049d8b, 16
  %v6_8049d8b = icmp eq i32 %v1_8049d8b, 0
  store i1 %v6_8049d8b, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049a49

dec_label_pc_8049d93:                             ; preds = %dec_label_pc_8049b1d
  %v0_8049d93 = load i32, i32* @esp, align 4
  %v1_8049d93 = add i32 %v0_8049d93, 20900
  %v2_8049d93 = inttoptr i32 %v1_8049d93 to i32*
  store i32 8, i32* %v2_8049d93, align 4
  br label %dec_label_pc_8049b32

dec_label_pc_8049da3:                             ; preds = %dec_label_pc_804965f
  %v9_8049da3 = icmp eq i32 %v0_80496b5, 12
  store i1 %v9_8049da3, i1* %zf.global-to-local, align 1
  %v0_8049da6 = load i32, i32* @edi, align 4
  %v2_8049da6 = add i32 %v0_80496b5, -16
  %v3_8049da6 = inttoptr i32 %v2_8049da6 to i32*
  store i32 %v0_8049da6, i32* %v3_8049da6, align 4
  %v2_8049da7 = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_8049da7, i32* %eax.global-to-local, align 4
  %v0_8049dac = load i32, i32* @esp, align 4
  %v1_8049dac = add i32 %v0_8049dac, 16
  %v1_8049daf = add i32 %v2_8049da7, -127
  %v6_8049daf = sub i32 126, %v2_8049da7
  %v7_8049daf = and i32 %v6_8049daf, %v2_8049da7
  %v8_8049daf = icmp slt i32 %v7_8049daf, 0
  %v9_8049daf = icmp eq i32 %v1_8049daf, 0
  store i1 %v9_8049daf, i1* %zf.global-to-local, align 1
  %v10_8049daf = icmp slt i32 %v1_8049daf, 0
  %v3_8049db2 = icmp eq i1 %v10_8049daf, %v8_8049daf
  %v4_8049db2 = icmp eq i1 %v9_8049daf, false
  %v5_8049db2 = and i1 %v4_8049db2, %v3_8049db2
  br i1 %v5_8049db2, label %dec_label_pc_80496c3, label %dec_label_pc_8049db8

dec_label_pc_8049db8:                             ; preds = %dec_label_pc_8049da3
  %v2_8049db8 = add i32 %v0_8049dac, 12
  %v3_8049db8 = inttoptr i32 %v2_8049db8 to i32*
  store i32 %v2_8049da7, i32* %v3_8049db8, align 4
  %v2_8049db9 = add i32 %v0_8049dac, 8
  %v3_8049db9 = inttoptr i32 %v2_8049db9 to i32*
  store i32 %v2_8049da7, i32* %v3_8049db9, align 4
  %v0_8049dba = load i32, i32* @edi, align 4
  %v2_8049dba = add i32 %v0_8049dac, 4
  %v3_8049dba = inttoptr i32 %v2_8049dba to i32*
  store i32 %v0_8049dba, i32* %v3_8049dba, align 4
  %v1_8049dbb = add i32 %v0_8049dac, 108
  %v2_8049dbb = inttoptr i32 %v1_8049dbb to i32*
  %v3_8049dbb = load i32, i32* %v2_8049dbb, align 4
  store i32 %v3_8049dbb, i32* %edx.global-to-local, align 4
  %v1_8049dbf = add i32 %v3_8049dbb, 16
  %v2_8049dbf = inttoptr i32 %v1_8049dbf to i32*
  %v3_8049dbf = load i32, i32* %v2_8049dbf, align 4
  %v2_8049dc2 = mul i32 %v3_8049dbf, 128
  %v3_8049dc2 = icmp eq i32 %v2_8049dc2, 0
  store i1 %v3_8049dc2, i1* %zf.global-to-local, align 1
  %v0_8049dc5 = load i32, i32* @ebp, align 4
  %v2_8049dc5 = add i32 %v0_8049dc5, %v2_8049dc2
  store i32 %v2_8049dc5, i32* %eax.global-to-local, align 4
  %v3_8049dc9 = inttoptr i32 %v0_8049dac to i32*
  store i32 %v2_8049dc5, i32* %v3_8049dc9, align 4
  %v3_8049dca = call i32 @function_8051a00(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049dca, i32* %eax.global-to-local, align 4
  %v0_8049dcf = load i32, i32* @esp, align 4
  %v1_8049dcf = add i32 %v0_8049dcf, 108
  %v2_8049dcf = inttoptr i32 %v1_8049dcf to i32*
  %v3_8049dcf = load i32, i32* %v2_8049dcf, align 4
  store i32 %v3_8049dcf, i32* %ecx.global-to-local, align 4
  %v1_8049dd3 = add i32 %v3_8049dcf, 16
  %v2_8049dd3 = inttoptr i32 %v1_8049dd3 to i32*
  %v3_8049dd3 = load i32, i32* %v2_8049dd3, align 4
  %v2_8049dd6 = mul i32 %v3_8049dd3, 128
  %v3_8049dd6 = icmp eq i32 %v2_8049dd6, 0
  store i1 %v3_8049dd6, i1* %zf.global-to-local, align 1
  %v0_8049dd9 = load i32, i32* @ebp, align 4
  %v2_8049dd9 = add i32 %v0_8049dd9, %v2_8049dd6
  store i32 %v2_8049dd9, i32* %ebx.global-to-local, align 4
  %v2_8049ddd = inttoptr i32 %v0_8049dcf to i32*
  store i32 %v2_8049dd9, i32* %v2_8049ddd, align 4
  %v2_8049de0 = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_8049de0, i32* %eax.global-to-local, align 4
  %v0_8049de5 = load i32, i32* @esp, align 4
  %v1_8049de5 = inttoptr i32 %v0_8049de5 to i32*
  %v2_8049de5 = load i32, i32* %v1_8049de5, align 4
  store i32 %v2_8049de5, i32* %ecx.global-to-local, align 4
  %v3_8049de5 = add i32 %v0_8049de5, 4
  %v0_8049de6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8049de6 = add i32 %v0_8049de6, %v2_8049de0
  %v12_8049de6 = icmp eq i32 %v2_8049de6, 0
  store i1 %v12_8049de6, i1* %zf.global-to-local, align 1
  store i32 %v2_8049de6, i32* @ebx, align 4
  %v1_8049de8 = inttoptr i32 %v3_8049de5 to i32*
  store i32 ptrtoint (i32* @global_var_80548b3.19 to i32), i32* %v1_8049de8, align 4
  %v0_8049dee = load i32, i32* @ebx, align 4
  store i32 %v0_8049dee, i32* %v1_8049de5, align 4
  %v3_8049def = call i32 @function_8051a00(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049def, i32* %eax.global-to-local, align 4
  %v0_8049df4 = load i32, i32* @esp, align 4
  %v1_8049df4 = add i32 %v0_8049df4, 56
  %v2_8049df4 = inttoptr i32 %v1_8049df4 to i32*
  %v3_8049df4 = load i32, i32* %v2_8049df4, align 4
  store i32 %v3_8049df4, i32* %ebx.global-to-local, align 4
  %v1_8049df8 = add i32 %v0_8049df4, -4
  %v2_8049df8 = inttoptr i32 %v1_8049df8 to i32*
  store i32 1, i32* %v2_8049df8, align 4
  %v1_8049dfa = add i32 %v0_8049df4, -8
  %v2_8049dfa = inttoptr i32 %v1_8049dfa to i32*
  store i32 ptrtoint (i32* @global_var_80548ba.16 to i32), i32* %v2_8049dfa, align 4
  %v1_8049dff = add i32 %v0_8049df4, 108
  %v2_8049dff = inttoptr i32 %v1_8049dff to i32*
  %v3_8049dff = load i32, i32* %v2_8049dff, align 4
  store i32 %v3_8049dff, i32* %edx.global-to-local, align 4
  %v0_8049e03 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049e03 = add i32 %v0_8049e03, 3
  store i32 %v1_8049e03, i32* @ebx, align 4
  %v0_8049e06 = load i32, i32* @esi, align 4
  %v2_8049e06 = add i32 %v0_8049e06, %v1_8049e03
  store i32 %v2_8049e06, i32* @esi, align 4
  %v1_8049e08 = add i32 %v3_8049dff, 660
  %v2_8049e08 = inttoptr i32 %v1_8049e08 to i32*
  %v3_8049e08 = load i32, i32* %v2_8049e08, align 4
  %v2_8049e0e = sub i32 %v3_8049e08, %v1_8049e03
  %v12_8049e0e = icmp eq i32 %v2_8049e0e, 0
  store i1 %v12_8049e0e, i1* %zf.global-to-local, align 1
  store i32 %v2_8049e0e, i32* %eax.global-to-local, align 4
  %v2_8049e10 = add i32 %v0_8049df4, -12
  %v3_8049e10 = inttoptr i32 %v2_8049e10 to i32*
  store i32 %v2_8049e0e, i32* %v3_8049e10, align 4
  %v0_8049e11 = load i32, i32* @esi, align 4
  %v2_8049e11 = add i32 %v0_8049df4, -16
  %v3_8049e11 = inttoptr i32 %v2_8049e11 to i32*
  store i32 %v0_8049e11, i32* %v3_8049e11, align 4
  %v0_8049e12 = call i32 @function_8051a90()
  store i32 %v0_8049e12, i32* %eax.global-to-local, align 4
  %v0_8049e17 = load i32, i32* @esp, align 4
  %v1_8049e17 = add i32 %v0_8049e17, 108
  %v2_8049e17 = inttoptr i32 %v1_8049e17 to i32*
  %v3_8049e17 = load i32, i32* %v2_8049e17, align 4
  store i32 %v3_8049e17, i32* %edx.global-to-local, align 4
  %v0_8049e1b = load i32, i32* @ebx, align 4
  %v2_8049e1b = add i32 %v0_8049e1b, %v3_8049e17
  store i32 %v2_8049e1b, i32* %ebx.global-to-local, align 4
  %v2_8049e1d = add i32 %v0_8049e12, 2115
  %v3_8049e1d = add i32 %v2_8049e1d, %v2_8049e1b
  %v4_8049e1d = inttoptr i32 %v3_8049e1d to i8*
  store i8 0, i8* %v4_8049e1d, align 1
  %v0_8049e25 = load i32, i32* @esp, align 4
  %v1_8049e25 = add i32 %v0_8049e25, 124
  %v2_8049e25 = inttoptr i32 %v1_8049e25 to i32*
  %v3_8049e25 = load i32, i32* %v2_8049e25, align 4
  store i32 %v3_8049e25, i32* %ecx.global-to-local, align 4
  %v1_8049e2c = add i32 %v3_8049e25, 16
  %v2_8049e2c = inttoptr i32 %v1_8049e2c to i32*
  %v3_8049e2c = load i32, i32* %v2_8049e2c, align 4
  %v2_8049e2f = mul i32 %v3_8049e2c, 128
  %v3_8049e2f = icmp eq i32 %v2_8049e2f, 0
  store i1 %v3_8049e2f, i1* %zf.global-to-local, align 1
  %v0_8049e32 = load i32, i32* @ebp, align 4
  %v2_8049e32 = add i32 %v0_8049e32, %v2_8049e2f
  store i32 %v2_8049e32, i32* %ebx.global-to-local, align 4
  %v2_8049e36 = add i32 %v0_8049e25, 16
  %v3_8049e36 = inttoptr i32 %v2_8049e36 to i32*
  store i32 %v2_8049e32, i32* %v3_8049e36, align 4
  %v2_8049e37 = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_8049e37, i32* %eax.global-to-local, align 4
  %v0_8049e3c = load i32, i32* @esp, align 4
  %v1_8049e3c = inttoptr i32 %v0_8049e3c to i32*
  %v2_8049e3c = load i32, i32* %v1_8049e3c, align 4
  store i32 %v2_8049e3c, i32* %ecx.global-to-local, align 4
  %v3_8049e3c = add i32 %v0_8049e3c, 4
  %v0_8049e3d = load i32, i32* %ebx.global-to-local, align 4
  %v2_8049e3d = add i32 %v0_8049e3d, %v2_8049e37
  %v12_8049e3d = icmp eq i32 %v2_8049e3d, 0
  store i1 %v12_8049e3d, i1* %zf.global-to-local, align 1
  store i32 %v2_8049e3d, i32* @ebx, align 4
  %v1_8049e3f = inttoptr i32 %v3_8049e3c to i32*
  %v2_8049e3f = load i32, i32* %v1_8049e3f, align 4
  store i32 %v2_8049e3f, i32* @edi, align 4
  %v0_8049e40 = load i32, i32* @esi, align 4
  store i32 %v0_8049e40, i32* %v1_8049e3f, align 4
  %v0_8049e41 = load i32, i32* @ebx, align 4
  store i32 %v0_8049e41, i32* %v1_8049e3c, align 4
  %v3_8049e42 = call i32 @function_8051a00(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049e42, i32* %eax.global-to-local, align 4
  %v0_8049e47 = load i32, i32* @esp, align 4
  %v1_8049e47 = add i32 %v0_8049e47, 108
  %v2_8049e47 = inttoptr i32 %v1_8049e47 to i32*
  %v3_8049e47 = load i32, i32* %v2_8049e47, align 4
  store i32 %v3_8049e47, i32* %eax.global-to-local, align 4
  %v1_8049e4b = add i32 %v3_8049e47, 16
  %v2_8049e4b = inttoptr i32 %v1_8049e4b to i32*
  %v3_8049e4b = load i32, i32* %v2_8049e4b, align 4
  %v1_8049e51 = add i32 %v3_8049e4b, 1
  %v8_8049e51 = icmp eq i32 %v1_8049e51, 0
  store i1 %v8_8049e51, i1* %zf.global-to-local, align 1
  store i32 %v1_8049e51, i32* %edx.global-to-local, align 4
  store i32 %v1_8049e51, i32* %v2_8049e4b, align 4
  %v0_80496c3.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80496c3

dec_label_pc_8049e5a:                             ; preds = %dec_label_pc_804974f
  store i32 %v3_8049e5a, i32* %eax.global-to-local, align 4
  %v1_8049e5e = add i32 %v3_8049e5a, -1448
  %v2_8049e5e = inttoptr i32 %v1_8049e5e to i8*
  store i8 1, i8* %v2_8049e5e, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049e6a:                             ; preds = %dec_label_pc_8049a11
  %v1_8049e6a = add i32 %v0_8049a34, 20916
  %v2_8049e6a = inttoptr i32 %v1_8049e6a to i32*
  store i32 7, i32* %v2_8049e6a, align 4
  %v0_8049e75 = load i32, i32* @ebx, align 4
  %v1_8049e75 = add i32 %v0_8049e75, 4
  %v2_8049e75 = inttoptr i32 %v1_8049e75 to i8*
  %v3_8049e75 = load i8, i8* %v2_8049e75, align 1
  %v12_8049e75 = icmp eq i8 %v3_8049e75, 115
  store i1 %v12_8049e75, i1* %zf.global-to-local, align 1
  %v1_8049e79 = icmp eq i1 %v12_8049e75, false
  br i1 %v1_8049e79, label %dec_label_pc_8049e86, label %dec_label_pc_8049e7b

dec_label_pc_8049e7b:                             ; preds = %dec_label_pc_8049e6a
  %v0_8049e7b = load i32, i32* @esp, align 4
  %v1_8049e7b = add i32 %v0_8049e7b, 20900
  %v2_8049e7b = inttoptr i32 %v1_8049e7b to i32*
  store i32 8, i32* %v2_8049e7b, align 4
  br label %dec_label_pc_8049e86

dec_label_pc_8049e86:                             ; preds = %dec_label_pc_8049e6a, %dec_label_pc_8049e7b
  %v0_8049e86 = load i32, i32* @esp, align 4
  %v1_8049e86 = add i32 %v0_8049e86, 20900
  %v2_8049e86 = inttoptr i32 %v1_8049e86 to i32*
  %v3_8049e86 = load i32, i32* %v2_8049e86, align 4
  store i32 %v3_8049e86, i32* %edx.global-to-local, align 4
  %v2_8049e8d = add i32 %v0_8049e86, -4
  %v3_8049e8d = inttoptr i32 %v2_8049e8d to i32*
  store i32 4, i32* %v3_8049e8d, align 4
  %v0_8049e8e = load i32, i32* @edi, align 4
  %v1_8049e8e = add i32 %v0_8049e8e, 1
  %v1_8049e91 = load i32, i32* %edx.global-to-local, align 4
  %v2_8049e91 = sub i32 %v1_8049e8e, %v1_8049e91
  %v12_8049e91 = icmp eq i32 %v2_8049e91, 0
  store i1 %v12_8049e91, i1* %zf.global-to-local, align 1
  store i32 %v2_8049e91, i32* %eax.global-to-local, align 4
  %v0_8049e93 = load i32, i32* @ebx, align 4
  %v2_8049e93 = add i32 %v0_8049e93, %v1_8049e91
  store i32 %v2_8049e93, i32* %edx.global-to-local, align 4
  %v2_8049e96 = add i32 %v0_8049e86, -8
  %v3_8049e96 = inttoptr i32 %v2_8049e96 to i32*
  store i32 %v2_8049e91, i32* %v3_8049e96, align 4
  %v0_8049e97 = load i32, i32* %edx.global-to-local, align 4
  %v2_8049e97 = add i32 %v0_8049e86, -12
  %v3_8049e97 = inttoptr i32 %v2_8049e97 to i32*
  store i32 %v0_8049e97, i32* %v3_8049e97, align 4
  %v0_8049e98 = load i32, i32* @ebx, align 4
  %v2_8049e98 = add i32 %v0_8049e86, -16
  %v3_8049e98 = inttoptr i32 %v2_8049e98 to i32*
  store i32 %v0_8049e98, i32* %v3_8049e98, align 4
  %v4_8049e99 = call i32 @function_80524e3(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049e99, i32* %eax.global-to-local, align 4
  %v0_8049e9e = load i32, i32* @esp, align 4
  %v1_8049e9e = add i32 %v0_8049e9e, 20916
  %v2_8049e9e = inttoptr i32 %v1_8049e9e to i32*
  store i32 0, i32* %v2_8049e9e, align 4
  %v0_8049ea9 = load i32, i32* @esp, align 4
  %v6_8049ea9 = icmp eq i32 %v0_8049ea9, -16
  store i1 %v6_8049ea9, i1* %zf.global-to-local, align 1
  %v0_8049eac = load i32, i32* @ebx, align 4
  %v1_8049eac = inttoptr i32 %v0_8049eac to i8*
  %v2_8049eac = load i8, i8* %v1_8049eac, align 1
  %v3_8049eac = zext i8 %v2_8049eac to i32
  %v5_8049eac = and i32 %v4_8049e99, -256
  %v6_8049eac = or i32 %v3_8049eac, %v5_8049eac
  store i32 %v6_8049eac, i32* %eax.global-to-local, align 4
  %v4_8049eae = icmp eq i8 %v2_8049eac, 0
  store i1 %v4_8049eae, i1* %zf.global-to-local, align 1
  br i1 %v4_8049eae, label %dec_label_pc_8049ce8, label %dec_label_pc_8049eb6

dec_label_pc_8049eb6:                             ; preds = %dec_label_pc_8049e86
  store i32 %v0_8049eac, i32* %ecx.global-to-local, align 4
  %v10_8049eb8 = icmp eq i8 %v2_8049eac, 47
  store i1 %v10_8049eb8, i1* %zf.global-to-local, align 1
  br i1 %v10_8049eb8, label %dec_label_pc_8049ce5, label %dec_label_pc_8049ec0

dec_label_pc_8049ec0:                             ; preds = %dec_label_pc_8049eb6
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_8049ed1196 = add i32 %v0_8049eac, 1
  store i32 %v2_8049ed1196, i32* %ecx.global-to-local, align 4
  %v2_8049ed4197 = add i32 %v0_8049ea9, 20916
  %v3_8049ed4198 = inttoptr i32 %v2_8049ed4197 to i32*
  store i32 1, i32* %v3_8049ed4198, align 4
  %v0_8049edb199 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049edb200 = inttoptr i32 %v0_8049edb199 to i8*
  %v2_8049edb201 = load i8, i8* %v1_8049edb200, align 1
  %v3_8049edb202 = zext i8 %v2_8049edb201 to i32
  %v4_8049edb203 = load i32, i32* %edx.global-to-local, align 4
  %v5_8049edb204 = and i32 %v4_8049edb203, -256
  %v6_8049edb205 = or i32 %v5_8049edb204, %v3_8049edb202
  store i32 %v6_8049edb205, i32* %edx.global-to-local, align 4
  %v4_8049edd206 = icmp eq i8 %v2_8049edb201, 0
  store i1 %v4_8049edd206, i1* %zf.global-to-local, align 1
  %v1_8049edf207 = icmp eq i1 %v4_8049edd206, false
  br i1 %v1_8049edf207, label %dec_label_pc_8049ec7, label %dec_label_pc_8049ce8

dec_label_pc_8049ec7:                             ; preds = %dec_label_pc_8049ec0, %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge
  %v2_8049edb209 = phi i8 [ %v2_8049edb, %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge ], [ %v2_8049edb201, %dec_label_pc_8049ec0 ]
  %v0_8049edb208 = phi i32 [ %v0_8049edb, %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge ], [ %v0_8049edb199, %dec_label_pc_8049ec0 ]
  %v0_8049ec7 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049ec7 = add i32 %v0_8049ec7, 1
  store i32 %v1_8049ec7, i32* %eax.global-to-local, align 4
  %v10_8049ec8 = icmp eq i8 %v2_8049edb209, 47
  store i1 %v10_8049ec8, i1* %zf.global-to-local, align 1
  br i1 %v10_8049ec8, label %dec_label_pc_8049ce5, label %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge

dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge: ; preds = %dec_label_pc_8049ec7
  %v0_8049ed1.pre = load i32, i32* @ebx, align 4
  %v1_8049ed4.pre = load i32, i32* @esp, align 4
  %v2_8049ed1 = add i32 %v0_8049ed1.pre, %v1_8049ec7
  store i32 %v2_8049ed1, i32* %ecx.global-to-local, align 4
  %v2_8049ed4 = add i32 %v1_8049ed4.pre, 20900
  %v3_8049ed4 = inttoptr i32 %v2_8049ed4 to i32*
  store i32 %v1_8049ec7, i32* %v3_8049ed4, align 4
  %v0_8049edb = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049edb = inttoptr i32 %v0_8049edb to i8*
  %v2_8049edb = load i8, i8* %v1_8049edb, align 1
  %v3_8049edb = zext i8 %v2_8049edb to i32
  %v4_8049edb = load i32, i32* %edx.global-to-local, align 4
  %v5_8049edb = and i32 %v4_8049edb, -256
  %v6_8049edb = or i32 %v5_8049edb, %v3_8049edb
  store i32 %v6_8049edb, i32* %edx.global-to-local, align 4
  %v4_8049edd = icmp eq i8 %v2_8049edb, 0
  store i1 %v4_8049edd, i1* %zf.global-to-local, align 1
  %v1_8049edf = icmp eq i1 %v4_8049edd, false
  br i1 %v1_8049edf, label %dec_label_pc_8049ec7, label %dec_label_pc_8049ce8

dec_label_pc_8049ee6:                             ; preds = %dec_label_pc_8049930
  %v0_8049ee6 = load i32, i32* %edx.global-to-local, align 4
  %v1_8049ee6 = add i32 %v0_8049ee6, 2
  store i32 %v1_8049ee6, i32* %eax.global-to-local, align 4
  %v1_8049ee9 = load i32, i32* @esp, align 4
  %v2_8049ee9 = add i32 %v1_8049ee9, 20900
  %v3_8049ee9 = inttoptr i32 %v2_8049ee9 to i32*
  store i32 %v1_8049ee6, i32* %v3_8049ee9, align 4
  %v0_8049951.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804994e

dec_label_pc_8049ef5:                             ; preds = %dec_label_pc_80499c3
  %v1_8049ef5 = add i32 %v3_80499c3, 1
  store i32 %v1_8049ef5, i32* %ebx.global-to-local, align 4
  store i32 %v1_8049ef5, i32* %v2_80499c3, align 4
  %v0_8049eff = load i32, i32* @esp, align 4
  %v9_8049eff = icmp eq i32 %v0_8049eff, 12
  store i1 %v9_8049eff, i1* %zf.global-to-local, align 1
  %v0_8049f02 = load i32, i32* @esi, align 4
  %v1_8049f02 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8049f02 = add i32 %v1_8049f02, %v0_8049f02
  store i32 %v2_8049f02, i32* @ebx, align 4
  %v2_8049f05 = add i32 %v0_8049eff, -16
  %v3_8049f05 = inttoptr i32 %v2_8049f05 to i32*
  store i32 %v2_8049f02, i32* %v3_8049f05, align 4
  %v2_8049f06 = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_8049f06, i32* %eax.global-to-local, align 4
  %v0_8049f0b = load i32, i32* @esp, align 4
  %v1_8049f0b = add i32 %v0_8049f0b, 16
  %v6_8049f0b = icmp eq i32 %v1_8049f0b, 0
  store i1 %v6_8049f0b, i1* %zf.global-to-local, align 1
  %v0_8049f0e = load i32, i32* @ebx, align 4
  %v2_8049f0e = add i32 %v2_8049f06, -1
  %v3_8049f0e = add i32 %v2_8049f0e, %v0_8049f0e
  %v4_8049f0e = inttoptr i32 %v3_8049f0e to i8*
  %v5_8049f0e = load i8, i8* %v4_8049f0e, align 1
  %v14_8049f0e = icmp eq i8 %v5_8049f0e, 34
  store i1 %v14_8049f0e, i1* %zf.global-to-local, align 1
  %v1_8049f13 = icmp eq i1 %v14_8049f0e, false
  br i1 %v1_8049f13, label %dec_label_pc_80499d4, label %dec_label_pc_8049f19

dec_label_pc_8049f19:                             ; preds = %dec_label_pc_8049ef5
  %v1_8049f19 = add i32 %v0_8049f0b, 20916
  %v2_8049f19 = inttoptr i32 %v1_8049f19 to i32*
  %v3_8049f19 = load i32, i32* %v2_8049f19, align 4
  store i32 %v3_8049f19, i32* %eax.global-to-local, align 4
  %v0_8049f20 = load i32, i32* @esi, align 4
  %v2_8049f25 = add i32 %v0_8049f20, %v3_8049f19
  %v12_8049f25 = icmp eq i32 %v2_8049f25, 0
  store i1 %v12_8049f25, i1* %zf.global-to-local, align 1
  store i32 %v2_8049f25, i32* @ebx, align 4
  %v3_8049f27 = inttoptr i32 %v0_8049f0b to i32*
  store i32 %v2_8049f25, i32* %v3_8049f27, align 4
  %v2_8049f28 = call i32 @function_80519e0(i8* %v1_8048752)
  store i32 %v2_8049f28, i32* %eax.global-to-local, align 4
  %v0_8049f2d = load i32, i32* @esp, align 4
  %v6_8049f2d = icmp eq i32 %v0_8049f2d, -16
  store i1 %v6_8049f2d, i1* %zf.global-to-local, align 1
  %v0_8049f30 = load i32, i32* @ebx, align 4
  %v2_8049f30 = add i32 %v2_8049f28, -1
  %v3_8049f30 = add i32 %v2_8049f30, %v0_8049f30
  %v4_8049f30 = inttoptr i32 %v3_8049f30 to i8*
  store i8 0, i8* %v4_8049f30, align 1
  %v0_80499d4.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_80499d4.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80499d4

dec_label_pc_8049f3a:                             ; preds = %dec_label_pc_804848a
  %v9_8049f3a = icmp eq i32 %v0_80484a0, 12
  store i1 %v9_8049f3a, i1* %zf.global-to-local, align 1
  %v1_8049f3d = add i32 %v0_80484a0, -16
  %v2_8049f3d = inttoptr i32 %v1_8049f3d to i32*
  store i32 47, i32* %v2_8049f3d, align 4
  %v2_8049f3f = call i32 @function_8051090(i8 %v1_8049f3f)
  store i32 %v2_8049f3f, i32* %eax.global-to-local, align 4
  %v0_8049f44 = load i32, i32* @esp, align 4
  %v1_8049f44 = inttoptr i32 %v0_8049f44 to i32*
  %v2_8049f44 = load i32, i32* %v1_8049f44, align 4
  store i32 %v2_8049f44, i32* @ebx, align 4
  %v3_8049f44 = add i32 %v0_8049f44, 4
  %v1_8049f45 = inttoptr i32 %v3_8049f44 to i32*
  store i32 0, i32* %v1_8049f45, align 4
  store i32 47, i32* %v1_8049f44, align 4
  %v3_8049f4a = call i32 @function_8050fe0(i32 %tmp, i32* nonnull @0)
  store i32 %v3_8049f4a, i32* %eax.global-to-local, align 4
  %v0_8049f4f = load i32, i32* @esp, align 4
  %v1_8049f4f = inttoptr i32 %v0_8049f4f to i32*
  %v2_8049f4f = load i32, i32* %v1_8049f4f, align 4
  store i32 %v2_8049f4f, i32* %edx.global-to-local, align 4
  %v3_8049f4f = add i32 %v0_8049f4f, 4
  %v1_8049f50 = inttoptr i32 %v3_8049f4f to i32*
  %v2_8049f50 = load i32, i32* %v1_8049f50, align 4
  store i32 %v2_8049f50, i32* %ecx.global-to-local, align 4
  store i32 %v3_8049f4a, i32* %v1_8049f50, align 4
  %v0_8049f52 = load i32, i32* @esi, align 4
  %v1_8049f52 = add i32 %v0_8049f52, 20
  store i32 %v1_8049f52, i32* %eax.global-to-local, align 4
  store i32 %v1_8049f52, i32* %v1_8049f4f, align 4
  %v3_8049f56 = call i32 @function_8051a00(i8* %v2_8049f7d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049f56, i32* %eax.global-to-local, align 4
  %v0_8049f5b = load i32, i32* @esp, align 4
  %v1_8049f5b = inttoptr i32 %v0_8049f5b to i32*
  store i32 47, i32* %v1_8049f5b, align 4
  %v2_8049f62 = call i32 @function_8051010(i8 %v1_8049f3f)
  store i32 %v2_8049f62, i32* %eax.global-to-local, align 4
  %v0_8049f67 = load i32, i32* @esp, align 4
  %v1_8049f67 = add i32 %v0_8049f67, 16
  %v6_8049f67 = icmp eq i32 %v1_8049f67, 0
  store i1 %v6_8049f67, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049f6a

dec_label_pc_8049f6a:                             ; preds = %dec_label_pc_804848a, %dec_label_pc_804a062, %dec_label_pc_8049ff8, %dec_label_pc_8049fc3, %dec_label_pc_8049f3a
  %v1_8049f6a = phi i32 [ %v0_80484a0, %dec_label_pc_804848a ], [ %v1_804a08f, %dec_label_pc_804a062 ], [ %v1_804a025, %dec_label_pc_8049ff8 ], [ %v1_8049ff0, %dec_label_pc_8049fc3 ], [ %v1_8049f67, %dec_label_pc_8049f3a ]
  %v0_8049f6a = phi i32 [ %v2_80484ac, %dec_label_pc_804848a ], [ %v2_804a08a, %dec_label_pc_804a062 ], [ %v2_804a020, %dec_label_pc_8049ff8 ], [ %v2_8049feb, %dec_label_pc_8049fc3 ], [ %v2_8049f62, %dec_label_pc_8049f3a ]
  %v2_8049f6a = add i32 %v1_8049f6a, -4
  %v3_8049f6a = inttoptr i32 %v2_8049f6a to i32*
  store i32 %v0_8049f6a, i32* %v3_8049f6a, align 4
  %v0_8049f6b = load i32, i32* %eax.global-to-local, align 4
  %v2_8049f6b = add i32 %v1_8049f6a, -8
  %v3_8049f6b = inttoptr i32 %v2_8049f6b to i32*
  store i32 %v0_8049f6b, i32* %v3_8049f6b, align 4
  %v1_8049f6c = add i32 %v1_8049f6a, 64
  %v2_8049f6c = inttoptr i32 %v1_8049f6c to i32*
  %v3_8049f6c = load i32, i32* %v2_8049f6c, align 4
  store i32 %v3_8049f6c, i32* %eax.global-to-local, align 4
  %v0_8049f70 = load i32, i32* @ebp, align 4
  %v1_8049f70 = add i32 %v0_8049f70, 1
  store i32 %v1_8049f70, i32* @ebp, align 4
  %v2_8049f71 = add i32 %v1_8049f6a, -12
  %v3_8049f71 = inttoptr i32 %v2_8049f71 to i32*
  store i32 %v3_8049f6c, i32* %v3_8049f71, align 4
  %v0_8049f72 = load i32, i32* @esi, align 4
  %v1_8049f72 = add i32 %v0_8049f72, 3140
  %v9_8049f72 = icmp eq i32 %v1_8049f72, 0
  store i1 %v9_8049f72, i1* %zf.global-to-local, align 1
  store i32 %v1_8049f72, i32* @esi, align 4
  %v1_8049f78 = add i32 %v1_8049f6a, 36
  %v2_8049f78 = inttoptr i32 %v1_8049f78 to i32*
  %v3_8049f78 = load i32, i32* %v2_8049f78, align 4
  store i32 %v3_8049f78, i32* @edi, align 4
  %v2_8049f7c = add i32 %v1_8049f6a, -16
  %v3_8049f7c = inttoptr i32 %v2_8049f7c to i32*
  store i32 %v3_8049f78, i32* %v3_8049f7c, align 4
  %v3_8049f7d = call i32 @function_8051a00(i8* %v2_8049f7d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049f7d, i32* %eax.global-to-local, align 4
  %v0_8049f82 = load i32, i32* @esp, align 4
  %v1_8049f85 = add i32 %v0_8049f82, 128
  %v2_8049f85 = inttoptr i32 %v1_8049f85 to i32*
  %v3_8049f85 = load i32, i32* %v2_8049f85, align 4
  %v4_8049f85 = load i32, i32* @ebp, align 4
  %v15_8049f85 = icmp eq i32 %v3_8049f85, %v4_8049f85
  store i1 %v15_8049f85, i1* %zf.global-to-local, align 1
  %v1_8049f89 = icmp eq i1 %v15_8049f85, false
  br i1 %v1_8049f89, label %dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge, label %dec_label_pc_8049f8f

dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge: ; preds = %dec_label_pc_8049f6a
  %v0_80483a9.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80483a7

dec_label_pc_8049f8f:                             ; preds = %dec_label_pc_8049f6a
  %v1_8049f8f = add i32 %v0_8049f82, 20756
  store i32 %v1_8049f8f, i32* %edx.global-to-local, align 4
  %v1_8049f96 = add i32 %v0_8049f82, 64
  %v2_8049f96 = inttoptr i32 %v1_8049f96 to i32*
  %v3_8049f96 = load i32, i32* %v2_8049f96, align 4
  store i32 %v3_8049f96, i32* %eax.global-to-local, align 4
  %v2_8049f9a = add i32 %v0_8049f82, 40
  %v3_8049f9a = inttoptr i32 %v2_8049f9a to i32*
  store i32 %v1_8049f8f, i32* %v3_8049f9a, align 4
  %v0_8049f9e = load i32, i32* @esp, align 4
  %v1_8049f9e = add i32 %v0_8049f9e, 48
  %v2_8049f9e = inttoptr i32 %v1_8049f9e to i32*
  %v3_8049f9e = load i32, i32* %v2_8049f9e, align 4
  %v1_8049fa2 = add i32 %v0_8049f9e, 20612
  store i32 %v1_8049fa2, i32* %ecx.global-to-local, align 4
  %v0_8049fa9 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049fa9 = add i32 %v0_8049fa9, 16
  store i32 %v1_8049fa9, i32* %eax.global-to-local, align 4
  %v1_8049fac = add i32 %v3_8049f9e, 1452
  %v9_8049fac = icmp eq i32 %v1_8049fac, 0
  store i1 %v9_8049fac, i1* %zf.global-to-local, align 1
  store i32 %v1_8049fac, i32* %edx.global-to-local, align 4
  %v2_8049fb2 = add i32 %v0_8049f9e, 20
  %v3_8049fb2 = inttoptr i32 %v2_8049fb2 to i32*
  store i32 %v1_8049fa2, i32* %v3_8049fb2, align 4
  %v0_8049fb6 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049fb6 = load i32, i32* @esp, align 4
  %v2_8049fb6 = add i32 %v1_8049fb6, 28
  %v3_8049fb6 = inttoptr i32 %v2_8049fb6 to i32*
  store i32 %v0_8049fb6, i32* %v3_8049fb6, align 4
  %v0_8049fba = load i32, i32* %edx.global-to-local, align 4
  %v1_8049fba = load i32, i32* @esp, align 4
  %v2_8049fba = add i32 %v1_8049fba, 32
  %v3_8049fba = inttoptr i32 %v2_8049fba to i32*
  store i32 %v0_8049fba, i32* %v3_8049fba, align 4
  %v0_80484e5.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80484e5.preheader

dec_label_pc_8049fc3:                             ; preds = %dec_label_pc_804848a
  %v9_8049fc3 = icmp eq i32 %v0_80484a0, 12
  store i1 %v9_8049fc3, i1* %zf.global-to-local, align 1
  %v1_8049fc6 = add i32 %v0_80484a0, -16
  %v2_8049fc6 = inttoptr i32 %v1_8049fc6 to i32*
  store i32 48, i32* %v2_8049fc6, align 4
  %v2_8049fc8 = call i32 @function_8051090(i8 %v1_8049f3f)
  store i32 %v2_8049fc8, i32* %eax.global-to-local, align 4
  %v0_8049fcd = load i32, i32* @esp, align 4
  %v1_8049fcd = inttoptr i32 %v0_8049fcd to i32*
  %v2_8049fcd = load i32, i32* %v1_8049fcd, align 4
  store i32 %v2_8049fcd, i32* @ebx, align 4
  %v3_8049fcd = add i32 %v0_8049fcd, 4
  %v1_8049fce = inttoptr i32 %v3_8049fcd to i32*
  store i32 0, i32* %v1_8049fce, align 4
  store i32 48, i32* %v1_8049fcd, align 4
  %v3_8049fd3 = call i32 @function_8050fe0(i32 %tmp, i32* nonnull @0)
  store i32 %v3_8049fd3, i32* %eax.global-to-local, align 4
  %v0_8049fd8 = load i32, i32* @esp, align 4
  %v1_8049fd8 = inttoptr i32 %v0_8049fd8 to i32*
  %v2_8049fd8 = load i32, i32* %v1_8049fd8, align 4
  store i32 %v2_8049fd8, i32* %edx.global-to-local, align 4
  %v3_8049fd8 = add i32 %v0_8049fd8, 4
  %v1_8049fd9 = inttoptr i32 %v3_8049fd8 to i32*
  %v2_8049fd9 = load i32, i32* %v1_8049fd9, align 4
  store i32 %v2_8049fd9, i32* %ecx.global-to-local, align 4
  store i32 %v3_8049fd3, i32* %v1_8049fd9, align 4
  %v0_8049fdb = load i32, i32* @esi, align 4
  %v1_8049fdb = add i32 %v0_8049fdb, 20
  store i32 %v1_8049fdb, i32* %eax.global-to-local, align 4
  store i32 %v1_8049fdb, i32* %v1_8049fd8, align 4
  %v3_8049fdf = call i32 @function_8051a00(i8* %v2_8049f7d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049fdf, i32* %eax.global-to-local, align 4
  %v0_8049fe4 = load i32, i32* @esp, align 4
  %v1_8049fe4 = inttoptr i32 %v0_8049fe4 to i32*
  store i32 48, i32* %v1_8049fe4, align 4
  %v2_8049feb = call i32 @function_8051010(i8 %v1_8049f3f)
  store i32 %v2_8049feb, i32* %eax.global-to-local, align 4
  %v0_8049ff0 = load i32, i32* @esp, align 4
  %v1_8049ff0 = add i32 %v0_8049ff0, 16
  %v6_8049ff0 = icmp eq i32 %v1_8049ff0, 0
  store i1 %v6_8049ff0, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049f6a

dec_label_pc_8049ff8:                             ; preds = %dec_label_pc_804848a
  %v9_8049ff8 = icmp eq i32 %v0_80484a0, 12
  store i1 %v9_8049ff8, i1* %zf.global-to-local, align 1
  %v1_8049ffb = add i32 %v0_80484a0, -16
  %v2_8049ffb = inttoptr i32 %v1_8049ffb to i32*
  store i32 49, i32* %v2_8049ffb, align 4
  %v2_8049ffd = call i32 @function_8051090(i8 %v1_8049f3f)
  store i32 %v2_8049ffd, i32* %eax.global-to-local, align 4
  %v0_804a002 = load i32, i32* @esp, align 4
  %v1_804a002 = inttoptr i32 %v0_804a002 to i32*
  %v2_804a002 = load i32, i32* %v1_804a002, align 4
  store i32 %v2_804a002, i32* @ebx, align 4
  %v3_804a002 = add i32 %v0_804a002, 4
  %v1_804a003 = inttoptr i32 %v3_804a002 to i32*
  store i32 0, i32* %v1_804a003, align 4
  store i32 49, i32* %v1_804a002, align 4
  %v3_804a008 = call i32 @function_8050fe0(i32 %tmp, i32* nonnull @0)
  store i32 %v3_804a008, i32* %eax.global-to-local, align 4
  %v0_804a00d = load i32, i32* @esp, align 4
  %v1_804a00d = inttoptr i32 %v0_804a00d to i32*
  %v2_804a00d = load i32, i32* %v1_804a00d, align 4
  store i32 %v2_804a00d, i32* %edx.global-to-local, align 4
  %v3_804a00d = add i32 %v0_804a00d, 4
  %v1_804a00e = inttoptr i32 %v3_804a00d to i32*
  %v2_804a00e = load i32, i32* %v1_804a00e, align 4
  store i32 %v2_804a00e, i32* %ecx.global-to-local, align 4
  store i32 %v3_804a008, i32* %v1_804a00e, align 4
  %v0_804a010 = load i32, i32* @esi, align 4
  %v1_804a010 = add i32 %v0_804a010, 20
  store i32 %v1_804a010, i32* %eax.global-to-local, align 4
  store i32 %v1_804a010, i32* %v1_804a00d, align 4
  %v3_804a014 = call i32 @function_8051a00(i8* %v2_8049f7d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804a014, i32* %eax.global-to-local, align 4
  %v0_804a019 = load i32, i32* @esp, align 4
  %v1_804a019 = inttoptr i32 %v0_804a019 to i32*
  store i32 49, i32* %v1_804a019, align 4
  %v2_804a020 = call i32 @function_8051010(i8 %v1_8049f3f)
  store i32 %v2_804a020, i32* %eax.global-to-local, align 4
  %v0_804a025 = load i32, i32* @esp, align 4
  %v1_804a025 = add i32 %v0_804a025, 16
  %v6_804a025 = icmp eq i32 %v1_804a025, 0
  store i1 %v6_804a025, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049f6a

dec_label_pc_804a062:                             ; preds = %dec_label_pc_804848a
  %v9_804a062 = icmp eq i32 %v0_80484a0, 12
  store i1 %v9_804a062, i1* %zf.global-to-local, align 1
  %v1_804a065 = add i32 %v0_80484a0, -16
  %v2_804a065 = inttoptr i32 %v1_804a065 to i32*
  store i32 50, i32* %v2_804a065, align 4
  %v2_804a067 = call i32 @function_8051090(i8 70)
  store i32 %v2_804a067, i32* %eax.global-to-local, align 4
  %v0_804a06c = load i32, i32* @esp, align 4
  %v1_804a06c = inttoptr i32 %v0_804a06c to i32*
  %v2_804a06c = load i32, i32* %v1_804a06c, align 4
  store i32 %v2_804a06c, i32* @ebx, align 4
  %v3_804a06c = add i32 %v0_804a06c, 4
  %v1_804a06d = inttoptr i32 %v3_804a06c to i32*
  store i32 0, i32* %v1_804a06d, align 4
  store i32 50, i32* %v1_804a06c, align 4
  %v3_804a072 = call i32 @function_8050fe0(i32 134563910, i32* %v2_804a072)
  store i32 %v3_804a072, i32* %eax.global-to-local, align 4
  %v0_804a077 = load i32, i32* @esp, align 4
  %v1_804a077 = inttoptr i32 %v0_804a077 to i32*
  %v2_804a077 = load i32, i32* %v1_804a077, align 4
  store i32 %v2_804a077, i32* %edx.global-to-local, align 4
  %v3_804a077 = add i32 %v0_804a077, 4
  %v1_804a078 = inttoptr i32 %v3_804a077 to i32*
  %v2_804a078 = load i32, i32* %v1_804a078, align 4
  store i32 %v2_804a078, i32* %ecx.global-to-local, align 4
  store i32 %v3_804a072, i32* %v1_804a078, align 4
  %v0_804a07a = load i32, i32* @esi, align 4
  %v1_804a07a = add i32 %v0_804a07a, 20
  store i32 %v1_804a07a, i32* %eax.global-to-local, align 4
  store i32 %v1_804a07a, i32* %v1_804a077, align 4
  %v3_804a07e = call i32 @function_8051a00(i8* inttoptr (i32 134563910 to i8*), i32 %v0_804816e)
  store i32 %v3_804a07e, i32* %eax.global-to-local, align 4
  %v0_804a083 = load i32, i32* @esp, align 4
  %v1_804a083 = inttoptr i32 %v0_804a083 to i32*
  store i32 50, i32* %v1_804a083, align 4
  %v2_804a08a = call i32 @function_8051010(i8 70)
  store i32 %v2_804a08a, i32* %eax.global-to-local, align 4
  %v0_804a08f = load i32, i32* @esp, align 4
  %v1_804a08f = add i32 %v0_804a08f, 16
  %v6_804a08f = icmp eq i32 %v1_804a08f, 0
  store i1 %v6_804a08f, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049f6a

; uselistorder directives
  uselistorder i32 %v1_804a08f, { 1, 0 }
  uselistorder i32 %v2_804a08a, { 1, 0 }
  uselistorder i32 %v1_804a025, { 1, 0 }
  uselistorder i32 %v2_804a020, { 1, 0 }
  uselistorder i32 %v1_8049ff0, { 1, 0 }
  uselistorder i32 %v2_8049feb, { 1, 0 }
  uselistorder i1 %v15_8049f85, { 1, 0 }
  uselistorder i32 %v1_8049f6a, { 0, 1, 2, 5, 4, 3 }
  uselistorder i1 %v14_8049f0e, { 1, 0 }
  uselistorder i32 %v1_8049f0b, { 1, 0 }
  uselistorder i32 %v0_8049f0b, { 1, 0, 2 }
  uselistorder i32 %v2_8049f06, { 0, 2, 1 }
  uselistorder i32 %v0_8049eff, { 1, 0 }
  uselistorder i8 %v2_8049edb, { 1, 2, 0 }
  uselistorder i32 %v0_8049edb, { 1, 0 }
  uselistorder i1 %v10_8049ec8, { 1, 0 }
  uselistorder i1 %v10_8049eb8, { 1, 0 }
  uselistorder i32 %v0_8049eac, { 0, 2, 3, 1 }
  uselistorder i32 %v0_8049ea9, { 1, 0 }
  uselistorder i32 %v1_8049e91, { 1, 0 }
  uselistorder i1 %v12_8049e75, { 1, 0 }
  uselistorder i32 %v2_8049e2f, { 1, 0 }
  uselistorder i32 %v1_8049e03, { 1, 0, 2 }
  uselistorder i32 %v2_8049dd6, { 1, 0 }
  uselistorder i32 %v2_8049dc2, { 1, 0 }
  uselistorder i32 %v1_8049daf, { 1, 0 }
  uselistorder i32 %v0_8049dac, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049da7, { 4, 3, 0, 2, 1, 5 }
  uselistorder i32 %v1_8049d8b, { 1, 0 }
  uselistorder i32 %v0_8049d6b, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v1_8049d36, { 1, 0 }
  uselistorder i32 %v0_8049d33, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049d2e, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8049d04, { 1, 0 }
  uselistorder i32 %v0_8049d01, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049cfc, { 1, 4, 0, 3, 2, 5 }
  uselistorder i32 %v0_8049cf1, { 1, 0, 2 }
  uselistorder i32 %v0_8049ce8, { 1, 0 }
  uselistorder i32 %v1_8049cd5, { 1, 0 }
  uselistorder i32 %v2_8049ccd, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v0_8049cb2, { 1, 0, 2 }
  uselistorder i32 %v9_8049c6e, { 1, 0 }
  uselistorder i32 %v5_8049c66, { 1, 2, 0 }
  uselistorder i32 %v0_8049c5b, { 1, 2, 0 }
  uselistorder i32 %v1_8049c29, { 1, 0 }
  uselistorder i32 %v1_8049c14, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v1_8049c09, { 1, 0 }
  uselistorder i32 %v2_8049c04, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8049bd4, { 1, 0 }
  uselistorder i32 %v0_8049bd1, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049bcc, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8049ba2, { 1, 0 }
  uselistorder i32 %v0_8049b9f, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049b9a, { 4, 3, 0, 2, 1, 5 }
  uselistorder i32 %v0_8049b8f, { 1, 0, 2 }
  uselistorder i32 %v0_8049b86, { 1, 0 }
  uselistorder i8 %v2_8049b80, { 1, 2, 0 }
  uselistorder i32 %v0_8049b80, { 1, 0 }
  uselistorder i1 %v10_8049b6d, { 1, 0 }
  uselistorder i1 %v10_8049b5d, { 1, 0 }
  uselistorder i32 %v0_8049b52, { 1, 0, 2, 3 }
  uselistorder i1 %v12_8049b28, { 1, 0 }
  uselistorder i1 %v11_8049b0f, { 1, 0 }
  uselistorder i32 %v4_8049ae5, { 1, 0 }
  uselistorder i32 %v0_8049aa9, { 4, 1, 2, 3, 0 }
  uselistorder i32 %v0_8049aa4, { 2, 1, 0, 3 }
  uselistorder i32 %v0_8049a90, { 1, 0, 2 }
  uselistorder i32 %v0_8049a77, { 5, 4, 3, 2, 1, 0 }
  uselistorder i1 %v11_8049a40, { 1, 0 }
  uselistorder i1 %v9_8049a37, { 1, 0 }
  uselistorder i32 %v1_8049a34, { 1, 0 }
  uselistorder i32 %v0_8049a25, { 1, 2, 3, 0 }
  uselistorder i32 %v0_8049a0a, { 1, 0 }
  uselistorder i32 %v0_80499fd, { 1, 0 }
  uselistorder i32 %v3_80499d9, { 0, 1, 3, 2 }
  uselistorder i32 %v1_80499d4, { 3, 2, 1, 0 }
  uselistorder i1 %v13_80499ca, { 1, 0 }
  uselistorder i32 %v3_80499c3, { 2, 1, 0, 3 }
  uselistorder i32 %v0_804997c, { 1, 0, 2 }
  uselistorder i1 %v10_8049944, { 1, 0 }
  uselistorder i32 %v0_8049944, { 1, 0 }
  uselistorder i32 %v1_80498e7, { 1, 0 }
  uselistorder i1 %v10_80498d9, { 1, 0 }
  uselistorder i32 %v0_80498cf, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 %v0_80498a0, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_804988a, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8049875, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_804985f, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v5_8049845, { 1, 2, 0 }
  uselistorder i32 %v1_8049845, { 1, 0 }
  uselistorder i32 %v3_804983f, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v2_8049834, { 1, 0 }
  uselistorder i32 %v1_8049831, { 1, 0 }
  uselistorder i32 %v0_80497f9, { 1, 2, 0 }
  uselistorder i1 %v11_80497f0, { 1, 0 }
  uselistorder i32 %v1_80497ab, { 1, 0 }
  uselistorder i32 %v5_804978f, { 1, 2, 0 }
  uselistorder i32 %v1_804978f, { 1, 0 }
  uselistorder i32 %v3_8049789, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v2_804977e, { 1, 0 }
  uselistorder i32 %v1_804977b, { 1, 0 }
  uselistorder i32 %v3_8049754, { 1, 0, 2 }
  uselistorder i32 %v1_804974f, { 3, 2, 1, 0 }
  uselistorder i32 %v0_804970b, { 0, 2, 1, 3 }
  uselistorder i32 %v0_80496ee, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v4_80496b9, { 1, 0 }
  uselistorder i32 %v0_80496b5, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8049679, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8049628, { 0, 2, 1 }
  uselistorder i32 %v1_8049605, { 0, 1, 4, 3, 2 }
  uselistorder i1 %v9_80495f5, { 1, 0 }
  uselistorder i1 %v12_80495e4, { 1, 0 }
  uselistorder i32 %v0_80495e0, { 0, 2, 1 }
  uselistorder i32 %v3_80495d1, { 3, 7, 8, 5, 6, 1, 0, 2, 4 }
  uselistorder i32 %v0_8049542, { 1, 0 }
  uselistorder i1 %v12_8049581, { 1, 0 }
  uselistorder i1 %v12_804956d, { 1, 0 }
  uselistorder i32 %v0_8049562, { 3, 2, 1, 0, 4 }
  uselistorder i1 %v11_8049559, { 1, 0 }
  uselistorder i32 %v2_804954a, { 1, 2, 0 }
  uselistorder i32 %v3_8049542, { 1, 2, 0, 3, 4 }
  uselistorder i1 %v10_8049518, { 1, 0 }
  uselistorder i1 %v9_80494cc, { 1, 0 }
  uselistorder i32 %v0_80494b4, { 1, 0, 2, 3 }
  uselistorder i1 %v11_8049496, { 1, 0 }
  uselistorder i1 %v9_804948d, { 1, 0 }
  uselistorder i32 %v0_804948a, { 5, 1, 2, 3, 4, 0, 6 }
  uselistorder i32 %v1_8049465, { 0, 2, 1 }
  uselistorder i1 %v10_8049457, { 1, 0 }
  uselistorder i32 %v0_804944d, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 %v0_804941e, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_8049408, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_80493f3, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_80493dd, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v5_80493c3, { 1, 2, 0 }
  uselistorder i32 %v1_80493c3, { 1, 0 }
  uselistorder i32 %v3_80493bd, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v2_80493b2, { 1, 0 }
  uselistorder i32 %v1_80493af, { 1, 0 }
  uselistorder i32 %v2_8049377, { 1, 0 }
  uselistorder i32 %v1_8049364, { 1, 0 }
  uselistorder i32 %v0_8049361, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v2_804935c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8049358, { 1, 0 }
  uselistorder i32 %v5_8049353, { 1, 2, 0 }
  uselistorder i32 %v4_8049353, { 0, 2, 1 }
  uselistorder i32 %v2_8049322, { 1, 0 }
  uselistorder i32 %v2_80492f7, { 1, 2, 0 }
  uselistorder i32 %v3_80492ed, { 0, 1, 3, 4, 2 }
  uselistorder i32* %v2_80492ed, { 0, 2, 1 }
  uselistorder i32 %v0_80492e4, { 1, 0 }
  uselistorder i32 %v0_80492bf, { 0, 2, 1 }
  uselistorder i32 %v0_8049297, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v1_8049286, { 1, 0 }
  uselistorder i1 %v10_804926b, { 1, 0 }
  uselistorder i32 %v0_8049266, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v0_8049261, { 2, 3, 0, 1, 4, 5 }
  uselistorder i1 %v11_804923f, { 1, 0 }
  uselistorder i32 %v0_8049226, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v4_8049211, { 1, 0 }
  uselistorder i32 %v0_8049203, { 3, 0, 1, 2, 8, 4, 5, 6, 7 }
  uselistorder i32 %v0_80491eb, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v1_80491e0, { 3, 2, 1, 0 }
  uselistorder i32 %v1_80491b3, { 0, 2, 1 }
  uselistorder i1 %v10_80491a9, { 1, 0 }
  uselistorder i32 %v0_804919f, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 %v0_8049170, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_804915a, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8049145, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_804912f, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v1_8049124, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8049107, { 1, 2, 3, 0 }
  uselistorder i32 %v1_80490de, { 0, 2, 1 }
  uselistorder i1 %v10_80490d4, { 1, 0 }
  uselistorder i32 %v0_80490ca, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 %v0_804909b, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_8049085, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8049070, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_804905a, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8049027, { 1, 2, 3, 0 }
  uselistorder i32 %v1_8048ffe, { 0, 2, 1 }
  uselistorder i1 %v10_8048ff4, { 1, 0 }
  uselistorder i32 %v0_8048fea, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 %v0_8048fbb, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_8048fa5, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8048f90, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_8048f7a, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8048f3e, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v1_8048f33, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8048f0d, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %v2_8049ae5, { 1, 0 }
  uselistorder i32 %v0_8048ed7, { 5, 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_8048e4a, { 1, 2, 0 }
  uselistorder i32 %v0_8048e05, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 %v0_8048ddc, { 2, 0, 1 }
  uselistorder i32 %v1_8048dd9, { 1, 0 }
  uselistorder i32 %v2_8048dd6, { 1, 0 }
  uselistorder i1 %v10_8048dcd, { 1, 0 }
  uselistorder i32 %v3_8048dc7, { 1, 0, 2, 4, 3 }
  uselistorder i1 %v15_8048dab, { 1, 0 }
  uselistorder i32 %v0_8048da7, { 2, 1, 3, 4, 0 }
  uselistorder i1 %v10_8048d89, { 1, 0 }
  uselistorder i1 %v10_8048d81, { 1, 0 }
  uselistorder i1 %v10_8048d79, { 1, 0 }
  uselistorder i32 %v1_8048d5d, { 1, 0 }
  uselistorder i32 %v2_8048d5a, { 1, 0 }
  uselistorder i32 %v0_8048d58, { 1, 0 }
  uselistorder i32 %v1_8048e7a, { 4, 3, 2, 1, 0, 5, 6 }
  uselistorder i32 %v0_8048d26, { 1, 0 }
  uselistorder i32 %v0_8048cff, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 %v5_8048cce, { 1, 2, 0 }
  uselistorder i32 %v0_8048cce, { 1, 0 }
  uselistorder i32 %v3_8048cc8, { 0, 2, 3, 1 }
  uselistorder i32 %v2_8048cbd, { 1, 0 }
  uselistorder i32 %v1_8048cba, { 1, 0 }
  uselistorder i32 %v0_8048c9d, { 0, 2, 1 }
  uselistorder i32 %v5_8048c82, { 1, 2, 0 }
  uselistorder i32 %v3_8048c7c, { 0, 2, 3, 1 }
  uselistorder i32 %v0_8048c71, { 1, 0 }
  uselistorder i32 %v2_8048c6e, { 1, 0 }
  uselistorder i32 %v1_8048c6b, { 1, 0 }
  uselistorder i32 %v0_8048c28, { 2, 1, 0 }
  uselistorder i32 %v0_8048c1d, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v1_8048c10, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8048bdb, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_8048bb4, { 2, 1, 0 }
  uselistorder i32 %v0_8048b8a, { 2, 1, 0 }
  uselistorder i32 %v5_8048b85, { 1, 2, 0 }
  uselistorder i32 %v4_8048b85, { 0, 2, 1 }
  uselistorder i32 %v0_8048b24, { 2, 1, 0 }
  uselistorder i32 %v0_8048ae3, { 1, 3, 2, 0 }
  uselistorder i32 %v0_8048a9b, { 2, 0, 1, 3 }
  uselistorder i32 %v0_80489b5, { 1, 0, 2, 3 }
  uselistorder i32 %v5_80486da, { 1, 2, 0 }
  uselistorder i32 %v3_80486d4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_80486c6, { 1, 0 }
  uselistorder i32 %v1_80486c3, { 1, 0 }
  uselistorder i32 %v12_804862d, { 1, 0 }
  uselistorder i32 %v0_804862a, { 2, 0, 1 }
  uselistorder i1 %v10_8048616, { 1, 0 }
  uselistorder i32 %v4_8048608, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8048601, { 3, 2, 1, 0 }
  uselistorder i32 %v1_8048601.pre, { 1, 2, 0 }
  uselistorder i1 %v10_80485f0, { 1, 0 }
  uselistorder i32 %v3_80485ea, { 1, 0, 2 }
  uselistorder i1 %v10_80485ae, { 1, 0 }
  uselistorder i1 %v6_80485ae, { 1, 0 }
  uselistorder i8 %v3_80485a5, { 5, 6, 7, 4, 3, 2, 1, 0 }
  uselistorder i8* %v2_80485a5, { 0, 1, 3, 2 }
  uselistorder i32 %v0_80485a5, { 7, 6, 5, 2, 4, 0, 1, 8, 3 }
  uselistorder i1 %v15_804859b, { 1, 0 }
  uselistorder i32 %v0_8048597, { 1, 2, 3, 4, 0 }
  uselistorder i1 %v10_8048557, { 1, 0 }
  uselistorder i1 %v10_804854f, { 1, 0 }
  uselistorder i1 %v10_8048547, { 1, 0 }
  uselistorder i1 %v10_804853f, { 1, 0 }
  uselistorder i1 %v10_8048537, { 1, 0 }
  uselistorder i32 %v3_8048505, { 1, 0 }
  uselistorder i32 %v3_80484fc, { 1, 0 }
  uselistorder i32 %v0_80484e5, { 1, 0 }
  uselistorder i8* %v1_8048752, { 23, 22, 26, 5, 4, 3, 2, 1, 0, 32, 31, 30, 29, 28, 27, 13, 12, 14, 18, 17, 20, 19, 16, 15, 25, 24, 33, 21, 60, 6, 8, 7, 36, 35, 34, 11, 10, 9, 59, 57, 58, 61, 62, 53, 54, 49, 50, 51, 52, 55, 56, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90 }
  uselistorder i32 %stack_var_-20924.0.ph, { 12, 15, 14, 11, 10, 26, 25, 24, 23, 22, 13, 9, 16, 8, 17, 7, 19, 18, 6, 21, 20, 5, 4, 3, 1, 2, 39, 38, 37, 36, 35, 32, 31, 29, 28, 27, 0, 30, 40, 34, 33 }
  uselistorder i32 %v2_80484ac, { 1, 2, 0, 3 }
  uselistorder i32 %v0_80484a0, { 8, 3, 7, 2, 6, 1, 4, 5, 0, 9 }
  uselistorder i8 %tmp243, { 1, 0 }
  uselistorder i32 %v1_804841e, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_80483ff, { 1, 2, 3, 4, 0 }
  uselistorder i1 %v12_80483e9, { 1, 0 }
  uselistorder i32 %v0_80483e6, { 2, 1, 0, 3 }
  uselistorder i8 %v1_8049f3f, { 1, 0, 3, 2, 4, 5 }
  uselistorder i8* %v2_8049f7d, { 0, 1, 3, 2 }
  uselistorder i8* %v2_80483e1, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 %.v0_80482dd, { 5, 3, 4, 0, 1, 2 }
  uselistorder i32 %v2_80482a5, { 1, 0, 2 }
  uselistorder i32 %v4_80482a0, { 1, 2, 0 }
  uselistorder i32 %v1_80482d3, { 2, 3, 1, 0 }
  uselistorder i8* %v3_80482a0.pre, { 1, 2, 0 }
  uselistorder i8 %v1_80482c3, { 1, 0 }
  uselistorder i32 %v1_804828d, { 1, 0 }
  uselistorder i32 %v2_8048285, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v1_8048278, { 1, 0 }
  uselistorder i32 %v2_8048270, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_804824e, { 1, 2, 0, 3 }
  uselistorder i1 %v9_8048246, { 1, 0, 2, 3, 4 }
  uselistorder i8* %tmp238, { 0, 2, 1 }
  uselistorder i32 %v6_80481f3, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32 %v5_80481e1, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32 %v6_80481cf, { 0, 2, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %v0_804816e, { 1, 0, 2 }
  uselistorder i32* %stack_var_4, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-20972, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 %tmp, { 4, 3, 1, 0, 2, 5 }
  uselistorder i1* %zf.global-to-local, { 3, 4, 5, 6, 7, 8, 14, 15, 16, 9, 10, 17, 18, 19, 20, 21, 23, 22, 12, 24, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 25, 26, 27, 28, 29, 30, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 72, 1, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 87, 2, 13, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 222, 223, 224, 225, 125, 126, 127, 128, 129, 139, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 210, 212, 211, 206, 207, 208, 209, 213, 214, 215, 216, 217, 218, 219, 220, 221, 240, 241, 242, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 273, 274, 243, 244, 245, 246, 247, 248, 257, 258, 249, 250, 251, 252, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 286, 287, 275, 276, 277, 278, 281, 282, 279, 280, 0, 11, 283, 284, 285, 295, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 2, 3, 4, 5, 16, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %edx.global-to-local, { 2, 3, 4, 7, 8, 9, 5, 33, 11, 10, 0, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 6, 26, 27, 28, 29, 30, 31, 32, 34, 39, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 96, 97, 98, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 172, 173, 174, 175, 176, 177, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 87, 84, 85, 86, 82, 88, 89, 90, 91, 92, 93, 94, 95, 148, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 160, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 169, 168, 1, 170, 171 }
  uselistorder i32* %edi.global-to-local, { 3, 4, 0, 1, 2 }
  uselistorder i32* %ecx.global-to-local, { 2, 3, 4, 8, 5, 9, 10, 0, 1, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 6, 7, 23, 33, 24, 25, 26, 27, 28, 29, 35, 60, 61, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 44, 45, 42, 43, 46, 47, 120, 48, 49, 50, 51, 52, 53, 55, 56, 54, 57, 58, 59, 109, 110, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 30, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 21, 22, 23, 24, 25, 26, 438, 16, 17, 18, 19, 20, 27, 28, 29, 30, 31, 32, 33, 34, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 35, 36, 37, 38, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 103, 149, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 150, 151, 163, 164, 152, 153, 154, 155, 166, 156, 157, 158, 159, 160, 161, 162, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 508, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 498, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 237, 238, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 242, 244, 245, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 270, 271, 267, 268, 269, 263, 264, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 410, 411, 415, 412, 413, 414, 416, 417, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 458, 459, 460, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 431, 432, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 486, 453, 454, 455, 456, 457, 487, 488, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 480, 481, 478, 479, 199, 0, 482, 483, 484, 485, 489, 490, 491, 492, 493, 494, 495, 496 }
  uselistorder i32 ()* @function_8051cd0, { 18, 17, 16, 15, 14, 13, 12, 1, 0, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 147, { 0, 7, 8, 9, 1, 10, 11, 12, 2, 13, 26, 3, 14, 15, 16, 4, 17, 18, 19, 5, 20, 21, 22, 23, 24, 27, 6, 25 }
  uselistorder i32 -1452, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 20740, { 1, 2, 3, 4, 0 }
  uselistorder i32 20612, { 1, 2, 0, 3 }
  uselistorder i32 ()* @function_8051d50, { 2, 1, 0 }
  uselistorder i32 10388, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }
  uselistorder i32 20900, { 4, 5, 6, 7, 8, 0, 3, 2, 9, 10, 11, 12, 1, 13, 14, 15, 16 }
  uselistorder i32 20916, { 2, 0, 15, 3, 4, 10, 8, 14, 13, 1, 16, 7, 17, 11, 5, 12, 6, 9, 18, 19, 20, 21 }
  uselistorder i8 7, { 3, 1, 2, 0 }
  uselistorder i8 47, { 0, 1, 3, 4, 2, 5, 7, 6 }
  uselistorder i32 (i8*, i32)* @function_8051a00, { 0, 1, 2, 4, 3, 6, 7, 8, 9, 5, 10, 11, 12, 13, 37, 38, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42 }
  uselistorder i32 3140, { 1, 2, 3, 4, 0 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_8054894.5 to i32), { 1, 0 }
  uselistorder i32 134563910, { 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_8049f6a, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_8049ec7, { 1, 0 }
  uselistorder label %dec_label_pc_8049e86, { 1, 0 }
  uselistorder label %dec_label_pc_8049d1e, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8049ce8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8049bbc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8049b86, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_8049b6c, { 1, 0 }
  uselistorder label %dec_label_pc_8049b32, { 1, 0 }
  uselistorder label %dec_label_pc_8049a49, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8049a11, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80499f3, { 1, 0 }
  uselistorder label %dec_label_pc_80499d4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80499c3, { 1, 0 }
  uselistorder label %dec_label_pc_804994e, { 1, 0 }
  uselistorder label %dec_label_pc_8049928, { 1, 0 }
  uselistorder label %dec_label_pc_80498ea, { 1, 0 }
  uselistorder label %dec_label_pc_80497f9, { 1, 0 }
  uselistorder label %dec_label_pc_804974f, { 1, 0 }
  uselistorder label %dec_label_pc_80496c3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80495d1, { 1, 0 }
  uselistorder label %dec_label_pc_804958e, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_8049562, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8049550, { 1, 0 }
  uselistorder label %dec_label_pc_80494dc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804949f, { 0, 1, 5, 2, 3, 4 }
  uselistorder label %dec_label_pc_8049468, { 1, 0 }
  uselistorder label %dec_label_pc_804930a, { 1, 0 }
  uselistorder label %dec_label_pc_8049301, { 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_80492e4, { 1, 0 }
  uselistorder label %dec_label_pc_80492b2, { 1, 0 }
  uselistorder label %dec_label_pc_8049289, { 1, 0 }
  uselistorder label %dec_label_pc_804924d, { 1, 0 }
  uselistorder label %dec_label_pc_80491db, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80491b6, { 1, 0 }
  uselistorder label %dec_label_pc_8049124, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80490e1, { 1, 0 }
  uselistorder label %dec_label_pc_8049044, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8049001, { 1, 0 }
  uselistorder label %dec_label_pc_8048f64, { 1, 0 }
  uselistorder label %dec_label_pc_8048f33, { 1, 0 }
  uselistorder label %dec_label_pc_8048ee1, { 1, 0 }
  uselistorder label %dec_label_pc_8048e4a, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8048db9, { 1, 0 }
  uselistorder label %dec_label_pc_8048d91, { 7, 8, 2, 1, 9, 3, 10, 11, 12, 15, 0, 13, 14, 6, 4, 5 }
  uselistorder label %dec_label_pc_8048d58, { 1, 0 }
  uselistorder label %dec_label_pc_8048c28, { 1, 0 }
  uselistorder label %dec_label_pc_8048c10, { 1, 0 }
  uselistorder label %dec_label_pc_8048bb4, { 1, 0 }
  uselistorder label %dec_label_pc_8048ad8, { 1, 0 }
  uselistorder label %dec_label_pc_8048700, { 1, 0 }
  uselistorder label %dec_label_pc_8048601, { 1, 0 }
  uselistorder label %dec_label_pc_80485be, { 1, 0 }
  uselistorder label %dec_label_pc_8048582, { 0, 1, 2, 3, 4, 7, 6, 5, 8 }
  uselistorder label %dec_label_pc_804855f, { 1, 0 }
  uselistorder label %dec_label_pc_80484e5, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_80484e5.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_804848a, { 1, 0 }
  uselistorder label %bb138, { 1, 0 }
  uselistorder label %dec_label_pc_804841e, { 1, 0 }
  uselistorder label %dec_label_pc_80482cc, { 1, 0 }
  uselistorder label %dec_label_pc_80482b8, { 1, 0 }
  uselistorder label %dec_label_pc_804825d, { 1, 2, 0, 3, 4 }
}

define i32 @function_804a0a0(i8 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_804a0a0:
  %tmp = trunc i32 %arg3 to i8
  %v4_804a0a5 = urem i32 %arg3, 256
  %v4_804a0b1 = zext i8 %arg1 to i32
  %v2_804a0b5 = icmp eq i8 %arg1, 0
  br i1 %v2_804a0b5, label %dec_label_pc_804a0e3, label %dec_label_pc_804a0c0

dec_label_pc_804a0c0:                             ; preds = %dec_label_pc_804a0a0
  %v3_804a0c4 = add i32 %arg2, 4
  %v4_804a0c4 = inttoptr i32 %v3_804a0c4 to i8*
  %v5_804a0c4 = load i8, i8* %v4_804a0c4, align 1
  %v16_804a0c4 = icmp eq i8 %tmp, %v5_804a0c4
  br i1 %v16_804a0c4, label %dec_label_pc_804a0eb, label %dec_label_pc_804a0c9

dec_label_pc_804a0c9:                             ; preds = %dec_label_pc_804a0c0
  br label %dec_label_pc_804a0de

dec_label_pc_804a0d0:                             ; preds = %dec_label_pc_804a0de
  %v1_804a0d0 = add i32 %v0_804a0d3.in, 12
  %v2_804a0d0 = inttoptr i32 %v1_804a0d0 to i8*
  %v3_804a0d0 = load i8, i8* %v2_804a0d0, align 1
  %v4_804a0d0 = zext i8 %v3_804a0d0 to i32
  %v6_804a0d0 = and i32 %v5_804a0d0, -256
  %v7_804a0d0 = or i32 %v4_804a0d0, %v6_804a0d0
  %v16_804a0d8 = icmp eq i8 %v3_804a0d0, %tmp
  br i1 %v16_804a0d8, label %dec_label_pc_804a0eb, label %dec_label_pc_804a0de

dec_label_pc_804a0de:                             ; preds = %dec_label_pc_804a0d0, %dec_label_pc_804a0c9
  %v5_804a0d0 = phi i32 [ %v7_804a0d0, %dec_label_pc_804a0d0 ], [ %v4_804a0a5, %dec_label_pc_804a0c9 ]
  %v0_804a0d3.in = phi i32 [ %v0_804a0d3, %dec_label_pc_804a0d0 ], [ %arg2, %dec_label_pc_804a0c9 ]
  %v0_804a0de = phi i32 [ %v1_804a0de, %dec_label_pc_804a0d0 ], [ 0, %dec_label_pc_804a0c9 ]
  %v0_804a0d3 = add i32 %v0_804a0d3.in, 8
  %v1_804a0de = add i32 %v0_804a0de, 1
  store i32 %v1_804a0de, i32* @ecx, align 4
  %v12_804a0df = icmp eq i32 %v1_804a0de, %v4_804a0b1
  %v1_804a0e1 = icmp eq i1 %v12_804a0df, false
  br i1 %v1_804a0e1, label %dec_label_pc_804a0d0, label %dec_label_pc_804a0e3

dec_label_pc_804a0e3:                             ; preds = %dec_label_pc_804a0de, %dec_label_pc_804a0a0
  ret i32 %arg4

dec_label_pc_804a0eb:                             ; preds = %dec_label_pc_804a0d0, %dec_label_pc_804a0c0
  %v0_804a0eb = phi i32 [ %arg2, %dec_label_pc_804a0c0 ], [ %v0_804a0d3, %dec_label_pc_804a0d0 ]
  %v1_804a0eb = inttoptr i32 %v0_804a0eb to i32*
  %v2_804a0eb = load i32, i32* %v1_804a0eb, align 4
  ret i32 %v2_804a0eb

; uselistorder directives
  uselistorder i32 %v1_804a0de, { 0, 2, 1 }
  uselistorder i32 %v0_804a0d3.in, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i8 %arg1, { 1, 0 }
}

define i32 @function_804a600(i8 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_804a600:
  %v0_804a600 = load i32, i32* @edi, align 4
  %v0_804a601 = load i32, i32* @esi, align 4
  %v0_804a602 = load i32, i32* @ebx, align 4
  %v4_804a606 = zext i8 %arg1 to i32
  %v2_804a60e = icmp eq i8 %arg1, 0
  %v4_804a618 = urem i32 %arg3, 256
  %v5_804a618 = load i32, i32* @eax, align 4
  %v6_804a618 = and i32 %v5_804a618, -256
  %v7_804a618 = or i32 %v6_804a618, %v4_804a618
  br i1 %v2_804a60e, label %dec_label_pc_804a645, label %dec_label_pc_804a622

dec_label_pc_804a622:                             ; preds = %dec_label_pc_804a600
  %v1_804a622 = trunc i32 %arg3 to i8
  %v3_804a626 = add i32 %arg2, 4
  %v4_804a626 = inttoptr i32 %v3_804a626 to i8*
  %v5_804a626 = load i8, i8* %v4_804a626, align 1
  %v16_804a626 = icmp eq i8 %v1_804a622, %v5_804a626
  br i1 %v16_804a626, label %dec_label_pc_804a64c, label %dec_label_pc_804a62b

dec_label_pc_804a62b:                             ; preds = %dec_label_pc_804a622
  br label %dec_label_pc_804a640

dec_label_pc_804a632:                             ; preds = %dec_label_pc_804a640
  %v1_804a632 = add i32 %v0_804a635.in, 12
  %v2_804a632 = inttoptr i32 %v1_804a632 to i8*
  %v3_804a632 = load i8, i8* %v2_804a632, align 1
  %v4_804a632 = zext i8 %v3_804a632 to i32
  %v6_804a632 = and i32 %v5_804a632, -256
  %v7_804a632 = or i32 %v4_804a632, %v6_804a632
  %v16_804a63a = icmp eq i8 %v1_804a622, %v3_804a632
  br i1 %v16_804a63a, label %dec_label_pc_804a64c, label %dec_label_pc_804a640

dec_label_pc_804a640:                             ; preds = %dec_label_pc_804a632, %dec_label_pc_804a62b
  %v5_804a632 = phi i32 [ %v7_804a632, %dec_label_pc_804a632 ], [ %v7_804a618, %dec_label_pc_804a62b ]
  %v0_804a635.in = phi i32 [ %v0_804a635, %dec_label_pc_804a632 ], [ %arg2, %dec_label_pc_804a62b ]
  %v0_804a640 = phi i32 [ %v1_804a640, %dec_label_pc_804a632 ], [ 0, %dec_label_pc_804a62b ]
  %v0_804a635 = add i32 %v0_804a635.in, 8
  %v1_804a640 = add i32 %v0_804a640, 1
  store i32 %v1_804a640, i32* @ecx, align 4
  %v12_804a641 = icmp eq i32 %v4_804a606, %v1_804a640
  %v1_804a643 = icmp eq i1 %v12_804a641, false
  br i1 %v1_804a643, label %dec_label_pc_804a632, label %dec_label_pc_804a645

dec_label_pc_804a645:                             ; preds = %dec_label_pc_804a640, %dec_label_pc_804a64c, %dec_label_pc_804a600
  store i32 %v0_804a602, i32* @ebx, align 4
  store i32 %v0_804a601, i32* @esi, align 4
  store i32 %v0_804a600, i32* @edi, align 4
  ret i32 %arg4

dec_label_pc_804a64c:                             ; preds = %dec_label_pc_804a632, %dec_label_pc_804a622
  %v0_804a64c = phi i32 [ %arg2, %dec_label_pc_804a622 ], [ %v0_804a635, %dec_label_pc_804a632 ]
  %v1_804a64c = inttoptr i32 %v0_804a64c to i32*
  %v2_804a64c = load i32, i32* %v1_804a64c, align 4
  %sext = mul i32 %v2_804a64c, 16777216
  %v2_804a64e = icmp eq i32 %sext, 0
  br i1 %v2_804a64e, label %dec_label_pc_804a645, label %dec_label_pc_804a652

dec_label_pc_804a652:                             ; preds = %dec_label_pc_804a64c
  store i32 %v0_804a602, i32* @ebx, align 4
  store i32 %v0_804a601, i32* @esi, align 4
  store i32 %v0_804a600, i32* @edi, align 4
  %v2_804a662 = sdiv i32 %sext, 16777216
  %v3_804a662 = inttoptr i32 %v2_804a662 to i8*
  %v4_804a662 = call i32 @function_8051ae0(i8* %v3_804a662, i32 10)
  ret i32 %v4_804a662

; uselistorder directives
  uselistorder i32 %v1_804a640, { 0, 2, 1 }
  uselistorder i32 %v0_804a635.in, { 1, 0 }
  uselistorder i32 %v0_804a602, { 1, 0 }
  uselistorder i32 %v0_804a601, { 1, 0 }
  uselistorder i32 %v0_804a600, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i8 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804a645, { 1, 0, 2 }
}

define i32 @function_804d4b0() local_unnamed_addr {
dec_label_pc_804d4b0:
  %tmp = call i16* @__decompiler_undefined_function_4()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %v4_804d4b7 = ptrtoint i16* %tmp to i32
  %tmp14 = or i32 %tmp11, 1
  %tmp15 = icmp eq i32 %tmp14, 1
  br i1 %tmp15, label %dec_label_pc_804d4d5, label %dec_label_pc_804d4c0

dec_label_pc_804d4c0:                             ; preds = %dec_label_pc_804d4b0, %dec_label_pc_804d4c0
  %v0_804d4ce = phi i32 [ %v2_804d4ce, %dec_label_pc_804d4c0 ], [ 0, %dec_label_pc_804d4b0 ]
  %v0_804d4c3 = phi i32 [ %v1_804d4c3, %dec_label_pc_804d4c0 ], [ %tmp11, %dec_label_pc_804d4b0 ]
  %v0_804d4cb = phi i32 [ %v1_804d4cb, %dec_label_pc_804d4c0 ], [ %v4_804d4b7, %dec_label_pc_804d4b0 ]
  %v1_804d4c0 = inttoptr i32 %v0_804d4cb to i16*
  %v2_804d4c0 = load i16, i16* %v1_804d4c0, align 2
  %v3_804d4c0 = zext i16 %v2_804d4c0 to i32
  %v1_804d4c3 = add i32 %v0_804d4c3, -2
  %v1_804d4cb = add i32 %v0_804d4cb, 2
  %v2_804d4ce = add i32 %v3_804d4c0, %v0_804d4ce
  %v5_804d4d0 = icmp eq i32 %v1_804d4c3, 0
  %v9_804d4d0 = icmp eq i32 %v0_804d4c3, 3
  %v2_804d4d3 = or i1 %v9_804d4d0, %v5_804d4d0
  br i1 %v2_804d4d3, label %dec_label_pc_804d4d5.loopexit, label %dec_label_pc_804d4c0

dec_label_pc_804d4d5.loopexit:                    ; preds = %dec_label_pc_804d4c0
  br label %dec_label_pc_804d4d5

dec_label_pc_804d4d5:                             ; preds = %dec_label_pc_804d4d5.loopexit, %dec_label_pc_804d4b0
  %v0_804d4db = phi i32 [ %v2_804d4ce, %dec_label_pc_804d4d5.loopexit ], [ 0, %dec_label_pc_804d4b0 ]
  %v0_804d4d8 = phi i32 [ %v1_804d4cb, %dec_label_pc_804d4d5.loopexit ], [ %v4_804d4b7, %dec_label_pc_804d4b0 ]
  %v0_804d4d5 = phi i32 [ %v1_804d4c3, %dec_label_pc_804d4d5.loopexit ], [ %tmp11, %dec_label_pc_804d4b0 ]
  %v8_804d4d5 = icmp eq i32 %v0_804d4d5, 1
  %v1_804d4d6 = icmp eq i1 %v8_804d4d5, false
  br i1 %v1_804d4d6, label %dec_label_pc_804d4dd, label %dec_label_pc_804d4d8

dec_label_pc_804d4d8:                             ; preds = %dec_label_pc_804d4d5
  %v1_804d4d8 = inttoptr i32 %v0_804d4d8 to i8*
  %v2_804d4d8 = load i8, i8* %v1_804d4d8, align 1
  %v3_804d4d8 = sext i8 %v2_804d4d8 to i32
  %v2_804d4db = add i32 %v3_804d4d8, %v0_804d4db
  br label %dec_label_pc_804d4dd

dec_label_pc_804d4dd:                             ; preds = %dec_label_pc_804d4d5, %dec_label_pc_804d4d8
  %v0_804d4dd = phi i32 [ %v0_804d4db, %dec_label_pc_804d4d5 ], [ %v2_804d4db, %dec_label_pc_804d4d8 ]
  %v1_804d4df = urem i32 %v0_804d4dd, 65536
  %v2_804d4e2 = udiv i32 %v0_804d4dd, 65536
  %v2_804d4e6 = add nuw nsw i32 %v1_804d4df, %v2_804d4e2
  %v2_804d4ea = udiv i32 %v2_804d4e6, 65536
  %v2_804d4ed = add nuw nsw i32 %v2_804d4ea, %v2_804d4e6
  %v1_804d4ef = urem i32 %v2_804d4ed, 65536
  %v1_804d4f2 = xor i32 %v1_804d4ef, 65535
  ret i32 %v1_804d4f2

; uselistorder directives
  uselistorder i32 %v2_804d4e6, { 1, 0 }
  uselistorder i32 %v0_804d4db, { 1, 0 }
  uselistorder i32 %v1_804d4c3, { 0, 2, 1 }
  uselistorder i32 %v4_804d4b7, { 1, 0 }
  uselistorder i32 %tmp11, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804d4dd, { 1, 0 }
  uselistorder label %dec_label_pc_804d4c0, { 1, 0 }
}

define i32 @function_804d500() local_unnamed_addr {
dec_label_pc_804d500:
  %tmp14 = call i16* @__decompiler_undefined_function_4()
  %tmp15 = call i16 @__decompiler_undefined_function_1()
  %tmp16 = call i32 @__decompiler_undefined_function_0()
  %tmp17 = call i32 @__decompiler_undefined_function_0()
  %v4_804d515 = ptrtoint i16* %tmp14 to i32
  %v1_804d51e = add i32 %tmp17, 12
  %v2_804d51e = inttoptr i32 %v1_804d51e to i32*
  %v3_804d51e = load i32, i32* %v2_804d51e, align 4
  %v1_804d521 = add i32 %tmp17, 16
  %v2_804d521 = inttoptr i32 %v1_804d521 to i32*
  %v3_804d521 = load i32, i32* %v2_804d521, align 4
  %v7_804d527 = icmp sgt i32 %tmp16, 1
  br i1 %v7_804d527, label %dec_label_pc_804d530, label %dec_label_pc_804d545

dec_label_pc_804d530:                             ; preds = %dec_label_pc_804d500, %dec_label_pc_804d530
  %v0_804d53e = phi i32 [ %v2_804d53e, %dec_label_pc_804d530 ], [ 0, %dec_label_pc_804d500 ]
  %v0_804d533 = phi i32 [ %v1_804d533, %dec_label_pc_804d530 ], [ %tmp16, %dec_label_pc_804d500 ]
  %v0_804d53b = phi i32 [ %v1_804d53b, %dec_label_pc_804d530 ], [ %v4_804d515, %dec_label_pc_804d500 ]
  %v1_804d530 = inttoptr i32 %v0_804d53b to i16*
  %v2_804d530 = load i16, i16* %v1_804d530, align 2
  %v3_804d530 = zext i16 %v2_804d530 to i32
  %v1_804d533 = add i32 %v0_804d533, -2
  %v1_804d53b = add i32 %v0_804d53b, 2
  %v2_804d53e = add i32 %v3_804d530, %v0_804d53e
  %v1_804d540 = add i32 %v0_804d533, -3
  %v6_804d540 = sub i32 2, %v0_804d533
  %v7_804d540 = and i32 %v1_804d533, %v6_804d540
  %v8_804d540 = icmp slt i32 %v7_804d540, 0
  %v9_804d540 = icmp eq i32 %v1_804d540, 0
  %v10_804d540 = icmp slt i32 %v1_804d540, 0
  %v3_804d543 = icmp eq i1 %v10_804d540, %v8_804d540
  %v4_804d543 = icmp eq i1 %v9_804d540, false
  %v5_804d543 = and i1 %v4_804d543, %v3_804d543
  br i1 %v5_804d543, label %dec_label_pc_804d530, label %dec_label_pc_804d545.loopexit

dec_label_pc_804d545.loopexit:                    ; preds = %dec_label_pc_804d530
  br label %dec_label_pc_804d545

dec_label_pc_804d545:                             ; preds = %dec_label_pc_804d545.loopexit, %dec_label_pc_804d500
  %v0_804d5b0 = phi i32 [ %v2_804d53e, %dec_label_pc_804d545.loopexit ], [ 0, %dec_label_pc_804d500 ]
  %v0_804d5ae = phi i32 [ %v1_804d53b, %dec_label_pc_804d545.loopexit ], [ %v4_804d515, %dec_label_pc_804d500 ]
  %v0_804d545 = phi i32 [ %v1_804d533, %dec_label_pc_804d545.loopexit ], [ %tmp16, %dec_label_pc_804d500 ]
  %v8_804d545 = icmp eq i32 %v0_804d545, 1
  br i1 %v8_804d545, label %dec_label_pc_804d5ac, label %dec_label_pc_804d548

dec_label_pc_804d548:                             ; preds = %dec_label_pc_804d545, %dec_label_pc_804d5ac
  %v0_804d556 = phi i32 [ %v0_804d5b0, %dec_label_pc_804d545 ], [ %v2_804d5b0, %dec_label_pc_804d5ac ]
  %v2_804d54c = udiv i32 %v3_804d521, 65536
  %v1_804d54f = add i32 %tmp17, 9
  %v2_804d54f = inttoptr i32 %v1_804d54f to i8*
  %v3_804d54f = load i8, i8* %v2_804d54f, align 1
  %v1_804d552 = zext i8 %v3_804d54f to i16
  %v2_804d552 = call i16 @llvm.bswap.i16(i16 %v1_804d552)
  %v3_804d552 = zext i16 %v2_804d552 to i32
  %v2_804d556 = add i32 %v0_804d556, %v2_804d54c
  %v2_804d55e = add i32 %v2_804d556, %v3_804d552
  %v1_804d564 = urem i32 %v3_804d51e, 65536
  %v2_804d56a = udiv i32 %v3_804d51e, 65536
  %v1_804d571 = urem i32 %v3_804d521, 65536
  %v4_804d579 = zext i16 %tmp15 to i32
  %v2_804d56d = add nuw nsw i32 %v2_804d56a, %v4_804d579
  %v2_804d577 = add nuw nsw i32 %v2_804d56d, %v1_804d564
  %v2_804d584 = add nuw nsw i32 %v2_804d577, %v1_804d571
  %v2_804d586 = add i32 %v2_804d584, %v2_804d55e
  %tmp = icmp ult i32 %v2_804d586, 65536
  br i1 %tmp, label %dec_label_pc_804d59e, label %dec_label_pc_804d590

dec_label_pc_804d590:                             ; preds = %dec_label_pc_804d548, %dec_label_pc_804d590
  %v2_804d5953 = phi i32 [ %v2_804d595, %dec_label_pc_804d590 ], [ %v2_804d586, %dec_label_pc_804d548 ]
  %v2_804d5994.in = phi i32 [ %v2_804d595, %dec_label_pc_804d590 ], [ %v2_804d586, %dec_label_pc_804d548 ]
  %v2_804d5994 = udiv i32 %v2_804d5994.in, 65536
  %v1_804d590 = urem i32 %v2_804d5953, 65536
  %v2_804d595 = add nuw nsw i32 %v1_804d590, %v2_804d5994
  %tmp25 = icmp ult i32 %v2_804d595, 65536
  %v1_804d59c = icmp eq i1 %tmp25, false
  br i1 %v1_804d59c, label %dec_label_pc_804d590, label %dec_label_pc_804d59e.loopexit

dec_label_pc_804d59e.loopexit:                    ; preds = %dec_label_pc_804d590
  br label %dec_label_pc_804d59e

dec_label_pc_804d59e:                             ; preds = %dec_label_pc_804d59e.loopexit, %dec_label_pc_804d548
  %v0_804d59e = phi i32 [ %v2_804d595, %dec_label_pc_804d59e.loopexit ], [ %v2_804d586, %dec_label_pc_804d548 ]
  %v1_804d59e = urem i32 %v0_804d59e, 65536
  %v1_804d5a2 = xor i32 %v1_804d59e, 65535
  ret i32 %v1_804d5a2

dec_label_pc_804d5ac:                             ; preds = %dec_label_pc_804d545
  %v1_804d5ae = inttoptr i32 %v0_804d5ae to i8*
  %v2_804d5ae = load i8, i8* %v1_804d5ae, align 1
  %v3_804d5ae = zext i8 %v2_804d5ae to i32
  %v2_804d5b0 = add i32 %v3_804d5ae, %v0_804d5b0
  br label %dec_label_pc_804d548

; uselistorder directives
  uselistorder i32 %v2_804d595, { 2, 1, 3, 0 }
  uselistorder i32 %v2_804d586, { 3, 0, 2, 1 }
  uselistorder i32 %v1_804d540, { 1, 0 }
  uselistorder i32 %v1_804d533, { 0, 2, 1 }
  uselistorder i32 %v3_804d521, { 1, 0 }
  uselistorder i32 %v4_804d515, { 1, 0 }
  uselistorder i32 %tmp17, { 0, 2, 1 }
  uselistorder i32 %tmp16, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d590, { 1, 0 }
  uselistorder label %dec_label_pc_804d548, { 1, 0 }
  uselistorder label %dec_label_pc_804d530, { 1, 0 }
}

define i32 @function_804ed40(i32 %arg1) local_unnamed_addr {
dec_label_pc_804ed40:
  %v0_804ed40 = load i32, i32* @global_var_8056688.20, align 8
  %v0_804ed48 = load i32, i32* @global_var_8056694.21, align 4
  %v2_804ed4e = mul i32 %v0_804ed40, 2048
  %v2_804ed53 = udiv i32 %v0_804ed48, 524288
  store i32 %v2_804ed53, i32* @ecx, align 4
  %v2_804ed56 = xor i32 %v2_804ed4e, %v0_804ed40
  %v0_804ed58 = load i32, i32* @global_var_805668c.22, align 4
  store i32 %v0_804ed58, i32* @global_var_8056688.20, align 8
  %v0_804ed62 = load i32, i32* @global_var_8056690.23, align 16
  store i32 %v0_804ed62, i32* @global_var_805668c.22, align 4
  store i32 %v0_804ed48, i32* @global_var_8056690.23, align 16
  %v2_804ed74 = xor i32 %v2_804ed53, %v0_804ed48
  %v2_804ed76 = udiv i32 %v2_804ed56, 256
  %v2_804ed79 = xor i32 %v2_804ed76, %v2_804ed56
  %v2_804ed7b = xor i32 %v2_804ed79, %v2_804ed74
  store i32 %v2_804ed7b, i32* @global_var_8056694.21, align 4
  ret i32 %v2_804ed7b

; uselistorder directives
  uselistorder i32 %v2_804ed56, { 1, 0 }
  uselistorder i32 %v2_804ed53, { 1, 0 }
  uselistorder i32 %v0_804ed48, { 1, 2, 0 }
  uselistorder i32 %v0_804ed40, { 1, 0 }
}

define i32 @function_804efd0() local_unnamed_addr {
dec_label_pc_804efd0:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp12, i32* %stack_var_-12, align 4
  %v0_804efd0 = load i32, i32* @ebx, align 4
  store i32 %tmp, i32* @ebx, align 4
  %v1_804efd8 = icmp eq i32 %tmp, 0
  br i1 %v1_804efd8, label %dec_label_pc_804efd0.dec_label_pc_804f000_crit_edge, label %dec_label_pc_804efdc

dec_label_pc_804efd0.dec_label_pc_804f000_crit_edge: ; preds = %dec_label_pc_804efd0
  br label %dec_label_pc_804f000

dec_label_pc_804efdc:                             ; preds = %dec_label_pc_804efd0
  %v1_804efdc = add i32 %tmp, 4
  %v2_804efdc = inttoptr i32 %v1_804efdc to i32*
  %v3_804efdc = load i32, i32* %v2_804efdc, align 4
  %v1_804efdf = icmp eq i32 %v3_804efdc, 0
  br i1 %v1_804efdf, label %dec_label_pc_804efef, label %dec_label_pc_804efe3

dec_label_pc_804efe3:                             ; preds = %dec_label_pc_804efdc
  %v1_804efe7 = call i32 @function_80536d9(i32 %v3_804efdc)
  br label %dec_label_pc_804efef

dec_label_pc_804efef:                             ; preds = %dec_label_pc_804efdc, %dec_label_pc_804efe3
  store i32 %v0_804efd0, i32* @ebx, align 4
  %v1_804eff6 = call i32 @function_80536d9(i32 %tmp)
  %v2_804f000.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_804f000

dec_label_pc_804f000:                             ; preds = %dec_label_pc_804efd0.dec_label_pc_804f000_crit_edge, %dec_label_pc_804efef
  %v2_804f000 = phi i32 [ %tmp12, %dec_label_pc_804efd0.dec_label_pc_804f000_crit_edge ], [ %v2_804f000.pre, %dec_label_pc_804efef ]
  store i32 %v0_804efd0, i32* @ebx, align 4
  ret i32 %v2_804f000

; uselistorder directives
  uselistorder i32 %tmp, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_804f000, { 1, 0 }
  uselistorder label %dec_label_pc_804efef, { 1, 0 }
}

define i32 @function_804f010() local_unnamed_addr {
dec_label_pc_804f010:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp92 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-2207 = alloca i32, align 4
  %stack_var_-2208 = alloca i32, align 4
  store i32 0, i32* @esi, align 4
  %v4_804f01c = ptrtoint i8* %tmp92 to i32
  store i32 %v4_804f01c, i32* @ebx, align 4
  %v4_804f027 = call i32 @function_8053088(i64 1, i32 8)
  %v2_804f030 = ptrtoint i32* %stack_var_-2208 to i32
  store i32 %v2_804f030, i32* %eax.global-to-local, align 4
  %tmp104 = bitcast i32* %stack_var_-2208 to i8*
  %v0_804f03b = load i32, i32* @ebx, align 4
  %v4_804f03b = inttoptr i32 %v0_804f03b to i8*
  %v3_804f03e = call i32 @function_80519e0(i8* %v4_804f03b)
  %v2_804f043 = ptrtoint i32* %stack_var_-2207 to i32
  store i32 %v2_804f043, i32* %ecx.global-to-local, align 4
  store i32 %v2_804f030, i32* %edi.global-to-local, align 4
  %v1_804f04e = add i32 %v3_804f03e, 1
  store i32 %v1_804f04e, i32* %eax.global-to-local, align 4
  %tmp105 = icmp slt i32 %v1_804f04e, 1
  br i1 %tmp105, label %dec_label_pc_804f07a, label %dec_label_pc_804f062.lr.ph

dec_label_pc_804f062.lr.ph:                       ; preds = %dec_label_pc_804f010
  %v0_804f062.pre = load i32, i32* @ebx, align 4
  %v4_804f062.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_804f062

dec_label_pc_804f054:                             ; preds = %dec_label_pc_804f069
  %v3_804f054 = inttoptr i32 %v2_804f054 to i8*
  store i8 %v2_804f062, i8* %v3_804f054, align 1
  %v0_804f056 = load i32, i32* @esi, align 4
  %v1_804f056 = add i32 %v0_804f056, 1
  store i32 %v1_804f056, i32* @esi, align 4
  %v0_804f057 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804f057 = add i32 %v0_804f057, 1
  store i32 %v1_804f057, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804f05a

dec_label_pc_804f05a:                             ; preds = %dec_label_pc_804f06d, %dec_label_pc_804f054
  %v0_804f05c = phi i32 [ %v1_804f073, %dec_label_pc_804f06d ], [ %v1_804f057, %dec_label_pc_804f054 ]
  %v0_804f05a = load i32, i32* @ebx, align 4
  %v1_804f05a = add i32 %v0_804f05a, 1
  store i32 %v1_804f05a, i32* @ebx, align 4
  %v0_804f05b = load i32, i32* %eax.global-to-local, align 4
  %v1_804f05b = add i32 %v0_804f05b, -1
  store i32 %v1_804f05b, i32* %eax.global-to-local, align 4
  store i32 %v0_804f05c, i32* %ecx.global-to-local, align 4
  %tmp106 = icmp slt i32 %v1_804f05b, 1
  br i1 %tmp106, label %dec_label_pc_804f05e.dec_label_pc_804f07a_crit_edge, label %dec_label_pc_804f062

dec_label_pc_804f062:                             ; preds = %dec_label_pc_804f062.lr.ph, %dec_label_pc_804f05a
  %v2_804f054 = phi i32 [ %v2_804f043, %dec_label_pc_804f062.lr.ph ], [ %v0_804f05c, %dec_label_pc_804f05a ]
  %v4_804f062 = phi i32 [ %v4_804f062.pre, %dec_label_pc_804f062.lr.ph ], [ %v0_804f05c, %dec_label_pc_804f05a ]
  %v0_804f062 = phi i32 [ %v0_804f062.pre, %dec_label_pc_804f062.lr.ph ], [ %v1_804f05a, %dec_label_pc_804f05a ]
  %v1_804f062 = inttoptr i32 %v0_804f062 to i8*
  %v2_804f062 = load i8, i8* %v1_804f062, align 1
  %v3_804f062 = zext i8 %v2_804f062 to i32
  %v5_804f062 = and i32 %v4_804f062, -256
  %v6_804f062 = or i32 %v3_804f062, %v5_804f062
  store i32 %v6_804f062, i32* %edx.global-to-local, align 4
  %v10_804f064 = icmp eq i8 %v2_804f062, 46
  br i1 %v10_804f064, label %dec_label_pc_804f06d, label %dec_label_pc_804f069

dec_label_pc_804f069:                             ; preds = %dec_label_pc_804f062
  %v4_804f069 = icmp eq i8 %v2_804f062, 0
  %v1_804f06b = icmp eq i1 %v4_804f069, false
  br i1 %v1_804f06b, label %dec_label_pc_804f054, label %dec_label_pc_804f06d

dec_label_pc_804f06d:                             ; preds = %dec_label_pc_804f069, %dec_label_pc_804f062
  %v0_804f06d = load i32, i32* @esi, align 4
  store i32 0, i32* @esi, align 4
  %v1_804f071 = trunc i32 %v0_804f06d to i8
  %v2_804f071 = load i32, i32* %edi.global-to-local, align 4
  %v3_804f071 = inttoptr i32 %v2_804f071 to i8*
  store i8 %v1_804f071, i8* %v3_804f071, align 1
  %v0_804f073 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804f073 = add i32 %v0_804f073, 1
  store i32 %v1_804f073, i32* %edx.global-to-local, align 4
  store i32 %v0_804f073, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804f05a

dec_label_pc_804f05e.dec_label_pc_804f07a_crit_edge: ; preds = %dec_label_pc_804f05a
  br label %dec_label_pc_804f07a

dec_label_pc_804f07a:                             ; preds = %dec_label_pc_804f05e.dec_label_pc_804f07a_crit_edge, %dec_label_pc_804f010
  %v0_804f07d = phi i32 [ %v0_804f05c, %dec_label_pc_804f05e.dec_label_pc_804f07a_crit_edge ], [ %v2_804f043, %dec_label_pc_804f010 ]
  %v1_804f07d = inttoptr i32 %v0_804f07d to i8*
  store i8 0, i8* %v1_804f07d, align 1
  store i32 %v2_804f030, i32* %eax.global-to-local, align 4
  %v3_804f085 = call i32 @function_80519e0(i8* %tmp104)
  store i32 0, i32* %stack_var_-44, align 4
  %v2_804f099 = add i32 %v3_804f085, %v2_804f030
  store i32 %v2_804f099, i32* @edi, align 4
  %v1_804f0bd = add i32 %v2_804f099, 1
  store i32 %v1_804f0bd, i32* @ebx, align 4
  store i32 %v2_804f030, i32* %eax.global-to-local, align 4
  %v3_804f0c5 = call i32 @function_80519e0(i8* %tmp104)
  %v1_804f0ca = add i32 %v3_804f0c5, 17
  store i32 %v1_804f0ca, i32* %eax.global-to-local, align 4
  %v1_804f0d1 = call i32 @function_804ed40(i32 %v1_804f0ca)
  %v2_804f0df = udiv i32 %v1_804f0d1, 65535
  store i32 %v2_804f0df, i32* %edx.global-to-local, align 4
  %v2_804f0e981 = add i32 %v2_804f0df, %v1_804f0d1
  store i32 %v2_804f0e981, i32* @esi, align 4
  store i32 8, i32* @eax, align 4
  store i32 -1, i32* %ebp.global-to-local, align 4
  %v2_804f0f9 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_804f0f9, i32* %ecx.global-to-local, align 4
  %v3_804f101 = call i32 @function_8051a70(i32 %v2_804f0f9, i32 16)
  store i32 %v3_804f101, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-44, align 4
  %v0_804f149 = load i32, i32* @edi, align 4
  %v1_804f149 = add i32 %v0_804f149, 1
  %v2_804f149 = inttoptr i32 %v1_804f149 to i16*
  store i16 256, i16* %v2_804f149, align 2
  %v0_804f152 = load i32, i32* @ebx, align 4
  %v1_804f152 = add i32 %v0_804f152, 2
  %v2_804f152 = inttoptr i32 %v1_804f152 to i16*
  store i16 256, i16* %v2_804f152, align 2
  %v0_804f158 = load i32, i32* %ebp.global-to-local, align 4
  %v10_804f158 = icmp eq i32 %v0_804f158, -1
  br i1 %v10_804f158, label %dec_label_pc_804f16c.preheader, label %dec_label_pc_804f160

dec_label_pc_804f160.loopexit:                    ; preds = %dec_label_pc_804f285
  %v0_804f163.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_804f160

dec_label_pc_804f160:                             ; preds = %dec_label_pc_804f160.loopexit, %dec_label_pc_804f07a
  %v0_804f163 = phi i32 [ %v0_804f163.pre, %dec_label_pc_804f160.loopexit ], [ %v0_804f158, %dec_label_pc_804f07a ]
  %v0_804f160 = load i32, i32* @esp, align 4
  %v2_804f163 = add i32 %v0_804f160, -16
  %v3_804f163 = inttoptr i32 %v2_804f163 to i32*
  store i32 %v0_804f163, i32* %v3_804f163, align 4
  %v1_804f164 = call i32 @function_8051f81(i32 1)
  store i32 %v1_804f164, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f16c.preheader

dec_label_pc_804f16c.preheader:                   ; preds = %dec_label_pc_804f160, %dec_label_pc_804f07a
  br label %dec_label_pc_804f16c

dec_label_pc_804f16c:                             ; preds = %dec_label_pc_804f16c.preheader, %dec_label_pc_804f285
  %v0_804f16c = load i32, i32* @ebx, align 4
  %v1_804f16c = load i32, i32* @esp, align 4
  %v2_804f16c = add i32 %v1_804f16c, -4
  %v3_804f16c = inttoptr i32 %v2_804f16c to i32*
  store i32 %v0_804f16c, i32* %v3_804f16c, align 4
  %v1_804f16d = add i32 %v1_804f16c, -8
  %v2_804f16d = inttoptr i32 %v1_804f16d to i32*
  store i32 0, i32* %v2_804f16d, align 4
  %v1_804f16f = add i32 %v1_804f16c, -12
  %v2_804f16f = inttoptr i32 %v1_804f16f to i32*
  store i32 2, i32* %v2_804f16f, align 4
  %v1_804f171 = add i32 %v1_804f16c, -16
  %v2_804f171 = inttoptr i32 %v1_804f171 to i32*
  store i32 2, i32* %v2_804f171, align 4
  %v4_804f173 = call i32 @function_8052775(i32 1, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804f173, i32* %eax.global-to-local, align 4
  %v0_804f178 = load i32, i32* @esp, align 4
  store i32 %v4_804f173, i32* @ebp, align 4
  %v10_804f17d = icmp eq i32 %v4_804f173, -1
  br i1 %v10_804f17d, label %dec_label_pc_804f2a0, label %dec_label_pc_804f186

dec_label_pc_804f186:                             ; preds = %dec_label_pc_804f16c
  %v0_804f186 = load i32, i32* @ecx, align 4
  %v2_804f186 = add i32 %v0_804f178, 12
  %v3_804f186 = inttoptr i32 %v2_804f186 to i32*
  store i32 %v0_804f186, i32* %v3_804f186, align 4
  %v1_804f187 = add i32 %v0_804f178, 8
  %v2_804f187 = inttoptr i32 %v1_804f187 to i32*
  store i32 16, i32* %v2_804f187, align 4
  %v1_804f189 = add i32 %v0_804f178, 4272
  store i32 %v1_804f189, i32* @edi, align 4
  %v2_804f190 = add i32 %v0_804f178, 4
  %v3_804f190 = inttoptr i32 %v2_804f190 to i32*
  store i32 %v1_804f189, i32* %v3_804f190, align 4
  %v3_804f191 = inttoptr i32 %v0_804f178 to i32*
  store i32 %v4_804f173, i32* %v3_804f191, align 4
  %v3_804f192 = call i32 @function_805259a(i32 1, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804f197 = load i32, i32* @esp, align 4
  %v1_804f19a = add i32 %v3_804f192, 1
  %v8_804f19a = icmp eq i32 %v1_804f19a, 0
  store i32 %v1_804f19a, i32* %eax.global-to-local, align 4
  br i1 %v8_804f19a, label %dec_label_pc_804f2a0, label %dec_label_pc_804f1a1

dec_label_pc_804f1a1:                             ; preds = %dec_label_pc_804f186
  %v1_804f1a1 = add i32 %v0_804f197, 12
  %v2_804f1a1 = inttoptr i32 %v1_804f1a1 to i32*
  store i32 16384, i32* %v2_804f1a1, align 4
  %v1_804f1a6 = add i32 %v0_804f197, 20
  %v2_804f1a6 = inttoptr i32 %v1_804f1a6 to i32*
  %v3_804f1a6 = load i32, i32* %v2_804f1a6, align 4
  store i32 %v3_804f1a6, i32* %edx.global-to-local, align 4
  %v2_804f1aa = add i32 %v0_804f197, 8
  %v3_804f1aa = inttoptr i32 %v2_804f1aa to i32*
  store i32 %v3_804f1a6, i32* %v3_804f1aa, align 4
  %v1_804f1ab = add i32 %v0_804f197, 2096
  store i32 %v1_804f1ab, i32* %eax.global-to-local, align 4
  %v2_804f1b2 = add i32 %v0_804f197, 4
  %v3_804f1b2 = inttoptr i32 %v2_804f1b2 to i32*
  store i32 %v1_804f1ab, i32* %v3_804f1b2, align 4
  %v0_804f1b3 = load i32, i32* @ebp, align 4
  %v3_804f1b3 = inttoptr i32 %v0_804f197 to i32*
  store i32 %v0_804f1b3, i32* %v3_804f1b3, align 4
  %v0_804f1b4 = call i32 @function_80526c4()
  %v0_804f1b9 = load i32, i32* @esp, align 4
  %v1_804f1bc = add i32 %v0_804f1b4, 1
  %v8_804f1bc = icmp eq i32 %v1_804f1bc, 0
  store i32 %v1_804f1bc, i32* %eax.global-to-local, align 4
  br i1 %v8_804f1bc, label %dec_label_pc_804f2a0, label %dec_label_pc_804f1c3

dec_label_pc_804f1c3:                             ; preds = %dec_label_pc_804f1a1
  %v2_804f1c3 = add i32 %v0_804f1b9, 12
  %v3_804f1c3 = inttoptr i32 %v2_804f1c3 to i32*
  store i32 %v1_804f1bc, i32* %v3_804f1c3, align 4
  %v1_804f1c4 = add i32 %v0_804f1b9, 8
  %v2_804f1c4 = inttoptr i32 %v1_804f1c4 to i32*
  store i32 0, i32* %v2_804f1c4, align 4
  %v0_804f1c6 = load i32, i32* @ebp, align 4
  %v2_804f1c6 = add i32 %v0_804f1b9, 4
  %v3_804f1c6 = inttoptr i32 %v2_804f1c6 to i32*
  store i32 %v0_804f1c6, i32* %v3_804f1c6, align 4
  %v2_804f1c7 = inttoptr i32 %v0_804f1b9 to i32*
  store i32 3, i32* %v2_804f1c7, align 4
  %v3_804f1c9 = call i32 @function_8051ebd(i32 1, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804f1ce = load i32, i32* @esp, align 4
  %v12_804f1d1 = or i32 %v3_804f1c9, 2048
  store i32 %v12_804f1d1, i32* %eax.global-to-local, align 4
  %v2_804f1d4 = add i32 %v0_804f1ce, 8
  %v3_804f1d4 = inttoptr i32 %v2_804f1d4 to i32*
  store i32 %v12_804f1d1, i32* %v3_804f1d4, align 4
  %v0_804f1d5 = load i32, i32* @ebp, align 4
  %v2_804f1d5 = add i32 %v0_804f1ce, 4
  %v3_804f1d5 = inttoptr i32 %v2_804f1d5 to i32*
  store i32 %v0_804f1d5, i32* %v3_804f1d5, align 4
  %v2_804f1d6 = inttoptr i32 %v0_804f1ce to i32*
  store i32 4, i32* %v2_804f1d6, align 4
  %v3_804f1d8 = call i32 @function_8051ebd(i32 1, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804f1dd = load i32, i32* @esp, align 4
  %v1_804f1dd = add i32 %v0_804f1dd, 4144
  store i32 %v1_804f1dd, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 32, i32* %ecx.global-to-local, align 4
  %v1_804f1eb = inttoptr i32 %v1_804f1dd to i8*
  store i32 %v1_804f1dd, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_804f1ee = call i8* @_memset(i8* %v1_804f1eb, i32 0, i32 32)
  %v6_804f1ee = ptrtoint i8* %v5_804f1ee to i32
  store i32 %v6_804f1ee, i32* %ecx.global-to-local, align 4
  %v0_804f1f0 = load i32, i32* @ebp, align 4
  %v2_804f1f4 = udiv i32 %v0_804f1f0, 32
  store i32 %v2_804f1f4, i32* @esi, align 4
  %v1_804f1f7 = urem i32 %v0_804f1f0, 32
  store i32 %v1_804f1f7, i32* @ebx, align 4
  %v0_804f1fa = load i32, i32* @esp, align 4
  %v2_804f1fa = mul nuw nsw i32 %v2_804f1f4, 4
  %v3_804f1fa = add nuw nsw i32 %v2_804f1fa, 4144
  %v4_804f1fa = add i32 %v3_804f1fa, %v0_804f1fa
  %v5_804f1fa = inttoptr i32 %v4_804f1fa to i32*
  %v6_804f1fa = load i32, i32* %v5_804f1fa, align 4
  %v9_804f1fa = shl i32 1, %v1_804f1f7
  %v12_804f1fa = or i32 %v6_804f1fa, %v9_804f1fa
  store i32 %v12_804f1fa, i32* %v5_804f1fa, align 4
  %v0_804f202 = load i32, i32* @esp, align 4
  %v1_804f202 = add i32 %v0_804f202, 4288
  %v2_804f202 = inttoptr i32 %v1_804f202 to i32*
  store i32 5, i32* %v2_804f202, align 4
  %v0_804f20d = load i32, i32* @esp, align 4
  %v1_804f20d = add i32 %v0_804f20d, 4292
  %v2_804f20d = inttoptr i32 %v1_804f20d to i32*
  store i32 0, i32* %v2_804f20d, align 4
  %v0_804f218 = load i32, i32* @esp, align 4
  %v1_804f218 = inttoptr i32 %v0_804f218 to i32*
  %v1_804f219 = add i32 %v0_804f218, 4288
  store i32 %v1_804f219, i32* %v1_804f218, align 4
  %v0_804f221 = load i32, i32* @ebp, align 4
  %v1_804f221 = add i32 %v0_804f221, 1
  store i32 %v1_804f221, i32* %eax.global-to-local, align 4
  %v1_804f224 = add i32 %v0_804f218, -4
  %v2_804f224 = inttoptr i32 %v1_804f224 to i32*
  store i32 0, i32* %v2_804f224, align 4
  %v1_804f226 = add i32 %v0_804f218, -8
  %v2_804f226 = inttoptr i32 %v1_804f226 to i32*
  store i32 0, i32* %v2_804f226, align 4
  %v0_804f228 = load i32, i32* %edx.global-to-local, align 4
  %v2_804f228 = add i32 %v0_804f218, -12
  %v3_804f228 = inttoptr i32 %v2_804f228 to i32*
  store i32 %v0_804f228, i32* %v3_804f228, align 4
  %v0_804f229 = load i32, i32* %eax.global-to-local, align 4
  %v2_804f229 = add i32 %v0_804f218, -16
  %v3_804f229 = inttoptr i32 %v2_804f229 to i32*
  store i32 %v0_804f229, i32* %v3_804f229, align 4
  %v0_804f22a = call i32 @function_8052188()
  store i32 %v0_804f22a, i32* %eax.global-to-local, align 4
  %v0_804f22f = load i32, i32* @esp, align 4
  %v1_804f22f = add i32 %v0_804f22f, 32
  %v10_804f232 = icmp eq i32 %v0_804f22a, -1
  br i1 %v10_804f232, label %dec_label_pc_804f2b4, label %dec_label_pc_804f237

dec_label_pc_804f237:                             ; preds = %dec_label_pc_804f1c3
  %v1_804f237 = icmp eq i32 %v0_804f22a, 0
  br i1 %v1_804f237, label %dec_label_pc_804f27e, label %dec_label_pc_804f23b

dec_label_pc_804f23b:                             ; preds = %dec_label_pc_804f237
  %v1_804f23b = load i32, i32* @esi, align 4
  %v2_804f23b = mul i32 %v1_804f23b, 4
  %v3_804f23b = add i32 %v0_804f22f, 4160
  %v4_804f23b = add i32 %v3_804f23b, %v2_804f23b
  %v5_804f23b = inttoptr i32 %v4_804f23b to i32*
  %v6_804f23b = load i32, i32* %v5_804f23b, align 4
  %v7_804f23b = load i32, i32* @ebx, align 4
  %v8_804f23b = urem i32 %v7_804f23b, 32
  %v9_804f23b = shl i32 1, %v8_804f23b
  %v10_804f23b = and i32 %v9_804f23b, %v6_804f23b
  %v11_804f23b = icmp ne i32 %v10_804f23b, 0
  %v1_804f243 = zext i1 %v11_804f23b to i32
  %v3_804f243 = and i32 %v0_804f22a, -256
  %v4_804f243 = or i32 %v1_804f243, %v3_804f243
  store i32 %v4_804f243, i32* %eax.global-to-local, align 4
  %v4_804f246 = icmp eq i1 %v11_804f23b, false
  br i1 %v4_804f246, label %dec_label_pc_804f2b4, label %dec_label_pc_804f24a

dec_label_pc_804f24a:                             ; preds = %dec_label_pc_804f23b
  %v2_804f24a = add i32 %v0_804f22f, 28
  %v3_804f24a = inttoptr i32 %v2_804f24a to i32*
  store i32 %v4_804f243, i32* %v3_804f24a, align 4
  %v0_804f24b = load i32, i32* %eax.global-to-local, align 4
  %v2_804f24b = add i32 %v0_804f22f, 24
  %v3_804f24b = inttoptr i32 %v2_804f24b to i32*
  store i32 %v0_804f24b, i32* %v3_804f24b, align 4
  %v1_804f24c = add i32 %v0_804f22f, 20
  %v2_804f24c = inttoptr i32 %v1_804f24c to i32*
  store i32 0, i32* %v2_804f24c, align 4
  %v1_804f24e = add i32 %v0_804f22f, 16
  %v2_804f24e = inttoptr i32 %v1_804f24e to i32*
  store i32 0, i32* %v2_804f24e, align 4
  %v1_804f250 = add i32 %v0_804f22f, 12
  %v2_804f250 = inttoptr i32 %v1_804f250 to i32*
  store i32 16384, i32* %v2_804f250, align 4
  %v1_804f255 = add i32 %v0_804f22f, 8
  %v2_804f255 = inttoptr i32 %v1_804f255 to i32*
  store i32 2048, i32* %v2_804f255, align 4
  %v1_804f25a = add i32 %v0_804f22f, 64
  store i32 %v1_804f25a, i32* %eax.global-to-local, align 4
  %v2_804f25e = add i32 %v0_804f22f, 4
  %v3_804f25e = inttoptr i32 %v2_804f25e to i32*
  store i32 %v1_804f25a, i32* %v3_804f25e, align 4
  %v0_804f25f = load i32, i32* @ebp, align 4
  %v3_804f25f = inttoptr i32 %v0_804f22f to i32*
  store i32 %v0_804f25f, i32* %v3_804f25f, align 4
  %v0_804f260 = call i32 @function_8052681()
  store i32 %v0_804f260, i32* %eax.global-to-local, align 4
  %v0_804f265 = load i32, i32* @esp, align 4
  store i32 %v0_804f260, i32* @ebx, align 4
  %v1_804f26a = add i32 %v0_804f265, 56
  %v2_804f26a = inttoptr i32 %v1_804f26a to i32*
  %v3_804f26a = load i32, i32* %v2_804f26a, align 4
  store i32 %v3_804f26a, i32* %eax.global-to-local, align 4
  %v2_804f26e = add i32 %v0_804f265, 16
  %v3_804f26e = inttoptr i32 %v2_804f26e to i32*
  store i32 %v3_804f26a, i32* %v3_804f26e, align 4
  %v2_804f26f = call i32 @function_80519e0(i8* inttoptr (i32 1 to i8*))
  %v1_804f274 = add i32 %v2_804f26f, 17
  store i32 %v1_804f274, i32* %eax.global-to-local, align 4
  %v0_804f277 = load i32, i32* @esp, align 4
  %v1_804f277 = add i32 %v0_804f277, 16
  %v0_804f27a = load i32, i32* @ebx, align 4
  %v7_804f27a = icmp ult i32 %v0_804f27a, %v1_804f274
  %v1_804f27c = icmp eq i1 %v7_804f27a, false
  br i1 %v1_804f27c, label %dec_label_pc_804f2da, label %dec_label_pc_804f27e

dec_label_pc_804f27e:                             ; preds = %dec_label_pc_804f306, %dec_label_pc_804f2da, %dec_label_pc_804f24a, %dec_label_pc_804f237
  %v0_804f27e = phi i32 [ %v1_804f2f3, %dec_label_pc_804f306 ], [ %v1_804f2f3, %dec_label_pc_804f2da ], [ %v1_804f277, %dec_label_pc_804f24a ], [ %v1_804f22f, %dec_label_pc_804f237 ]
  %v1_804f27e = add i32 %v0_804f27e, 8
  %v2_804f27e = inttoptr i32 %v1_804f27e to i32*
  %v3_804f27e = load i32, i32* %v2_804f27e, align 4
  %v12_804f27e = icmp eq i32 %v3_804f27e, 5
  br i1 %v12_804f27e, label %dec_label_pc_804f2b4, label %dec_label_pc_804f285

dec_label_pc_804f285:                             ; preds = %dec_label_pc_804f2a0, %dec_label_pc_804f27e
  %v3_804f285 = phi i32 [ %v3_804f2ad, %dec_label_pc_804f2a0 ], [ %v3_804f27e, %dec_label_pc_804f27e ]
  %v1_804f28d = phi i32 [ %v1_804f2aa, %dec_label_pc_804f2a0 ], [ %v0_804f27e, %dec_label_pc_804f27e ]
  %v1_804f285 = add i32 %v1_804f28d, 8
  %v2_804f285 = inttoptr i32 %v1_804f285 to i32*
  %v1_804f289 = add i32 %v3_804f285, 1
  store i32 %v1_804f289, i32* @edi, align 4
  %v0_804f28a = load i32, i32* @ebp, align 4
  %v10_804f28a = icmp eq i32 %v0_804f28a, -1
  store i32 %v1_804f289, i32* %v2_804f285, align 4
  %v1_804f291 = icmp eq i1 %v10_804f28a, false
  br i1 %v1_804f291, label %dec_label_pc_804f160.loopexit, label %dec_label_pc_804f16c

dec_label_pc_804f2a0:                             ; preds = %dec_label_pc_804f1a1, %dec_label_pc_804f186, %dec_label_pc_804f16c
  %v0_804f2a0.in = phi i32 [ %v0_804f1b9, %dec_label_pc_804f1a1 ], [ %v0_804f197, %dec_label_pc_804f186 ], [ %v0_804f178, %dec_label_pc_804f16c ]
  %v2_804f2a3 = inttoptr i32 %v0_804f2a0.in to i32*
  store i32 1, i32* %v2_804f2a3, align 4
  %v0_804f2a5 = call i32 @function_8053b30()
  store i32 %v0_804f2a5, i32* %eax.global-to-local, align 4
  %v0_804f2aa = load i32, i32* @esp, align 4
  %v1_804f2aa = add i32 %v0_804f2aa, 16
  %v1_804f2ad = add i32 %v0_804f2aa, 24
  %v2_804f2ad = inttoptr i32 %v1_804f2ad to i32*
  %v3_804f2ad = load i32, i32* %v2_804f2ad, align 4
  %v12_804f2ad = icmp eq i32 %v3_804f2ad, 5
  %v1_804f2b2 = icmp eq i1 %v12_804f2ad, false
  br i1 %v1_804f2b2, label %dec_label_pc_804f285, label %dec_label_pc_804f2b4

dec_label_pc_804f2b4:                             ; preds = %dec_label_pc_804f2a0, %dec_label_pc_804f27e, %dec_label_pc_804f23b, %dec_label_pc_804f1c3, %dec_label_pc_804f314, %dec_label_pc_804f31d.backedge
  %v0_804f2b4 = phi i32 [ %v0_804f322124, %dec_label_pc_804f314 ], [ %v0_804f322, %dec_label_pc_804f31d.backedge ], [ %v1_804f2aa, %dec_label_pc_804f2a0 ], [ %v0_804f27e, %dec_label_pc_804f27e ], [ %v1_804f22f, %dec_label_pc_804f23b ], [ %v1_804f22f, %dec_label_pc_804f1c3 ]
  %v0_804f2b7 = load i32, i32* @ebp, align 4
  %v2_804f2b7 = add i32 %v0_804f2b4, -16
  %v3_804f2b7 = inttoptr i32 %v2_804f2b7 to i32*
  store i32 %v0_804f2b7, i32* %v3_804f2b7, align 4
  %v1_804f2b8 = call i32 @function_8051f81(i32 1)
  store i32 %v1_804f2b8, i32* %eax.global-to-local, align 4
  %v0_804f2bd = load i32, i32* @esp, align 4
  %v1_804f2bd = add i32 %v0_804f2bd, 16
  %v1_804f2c0 = inttoptr i32 %v1_804f2bd to i32*
  %v2_804f2c0 = load i32, i32* %v1_804f2c0, align 4
  store i32 %v2_804f2c0, i32* %edx.global-to-local, align 4
  %v1_804f2c3 = inttoptr i32 %v2_804f2c0 to i8*
  %v2_804f2c3 = load i8, i8* %v1_804f2c3, align 1
  %v3_804f2c3 = icmp eq i8 %v2_804f2c3, 0
  br i1 %v3_804f2c3, label %dec_label_pc_804f3c3, label %dec_label_pc_804f2cc

dec_label_pc_804f2cc:                             ; preds = %dec_label_pc_804f2b4
  %v2_804f2cc = load i32, i32* %v1_804f2c0, align 4
  store i32 %v2_804f2cc, i32* %eax.global-to-local, align 4
  %v1_804f2cf = add i32 %v0_804f2bd, 4300
  %v1_804f2d5 = inttoptr i32 %v1_804f2cf to i32*
  %v2_804f2d5 = load i32, i32* %v1_804f2d5, align 4
  store i32 %v2_804f2d5, i32* @ebx, align 4
  %v3_804f2d6 = add i32 %v0_804f2bd, 4308
  %v1_804f2d7 = inttoptr i32 %v3_804f2d6 to i32*
  %v2_804f2d7 = load i32, i32* %v1_804f2d7, align 4
  store i32 %v2_804f2d7, i32* @edi, align 4
  %v3_804f2d7 = add i32 %v0_804f2bd, 4312
  %v1_804f2d8 = inttoptr i32 %v3_804f2d7 to i32*
  %v2_804f2d8 = load i32, i32* %v1_804f2d8, align 4
  store i32 %v2_804f2d8, i32* @ebp, align 4
  ret i32 %v2_804f2cc

dec_label_pc_804f2da:                             ; preds = %dec_label_pc_804f24a
  %v1_804f2da = add i32 %v0_804f277, 60
  store i32 %v1_804f2da, i32* %edx.global-to-local, align 4
  %v2_804f2de = add i32 %v0_804f277, 40
  %v3_804f2de = inttoptr i32 %v2_804f2de to i32*
  store i32 %v1_804f2da, i32* %v3_804f2de, align 4
  %v0_804f2e2 = load i32, i32* @esp, align 4
  %v1_804f2e5 = add i32 %v0_804f2e2, 44
  store i32 %v1_804f2e5, i32* %ecx.global-to-local, align 4
  %v2_804f2e9 = add i32 %v0_804f2e2, -16
  %v3_804f2e9 = inttoptr i32 %v2_804f2e9 to i32*
  store i32 %v1_804f2e5, i32* %v3_804f2e9, align 4
  %v2_804f2ea = call i32 @function_80519e0(i8* inttoptr (i32 1 to i8*))
  store i32 %v2_804f2ea, i32* %eax.global-to-local, align 4
  %v0_804f2ef = load i32, i32* @esp, align 4
  %v2_804f2ef = add i32 %v2_804f2ea, 65
  %v3_804f2ef = add i32 %v2_804f2ef, %v0_804f2ef
  store i32 %v3_804f2ef, i32* %ecx.global-to-local, align 4
  %v1_804f2f3 = add i32 %v0_804f2ef, 16
  %v1_804f2f6 = add i32 %v0_804f2ef, 30
  %v2_804f2f6 = inttoptr i32 %v1_804f2f6 to i16*
  %v3_804f2f6 = load i16, i16* %v2_804f2f6, align 2
  %v4_804f2f6 = zext i16 %v3_804f2f6 to i32
  %v7_804f2f6 = and i32 %v1_804f1dd, -65536
  %v8_804f2f6 = or i32 %v4_804f2f6, %v7_804f2f6
  store i32 %v8_804f2f6, i32* @edi, align 4
  %v3_804f2fb = add i32 %v0_804f2ef, 48
  %v4_804f2fb = inttoptr i32 %v3_804f2fb to i16*
  %v5_804f2fb = load i16, i16* %v4_804f2fb, align 2
  %v16_804f2fb = icmp eq i16 %v3_804f2f6, %v5_804f2fb
  %v1_804f300 = icmp eq i1 %v16_804f2fb, false
  br i1 %v1_804f300, label %dec_label_pc_804f27e, label %dec_label_pc_804f306

dec_label_pc_804f306:                             ; preds = %dec_label_pc_804f2da
  %v1_804f306 = add i32 %v0_804f2ef, 54
  %v2_804f306 = inttoptr i32 %v1_804f306 to i16*
  %v3_804f306 = load i16, i16* %v2_804f306, align 2
  %v4_804f306 = zext i16 %v3_804f306 to i32
  %v6_804f306 = and i32 %v2_804f2ea, -65536
  %v7_804f306 = or i32 %v4_804f306, %v6_804f306
  store i32 %v7_804f306, i32* %eax.global-to-local, align 4
  %v4_804f30b = icmp eq i16 %v3_804f306, 0
  br i1 %v4_804f30b, label %dec_label_pc_804f27e, label %dec_label_pc_804f314

dec_label_pc_804f314:                             ; preds = %dec_label_pc_804f306
  %v2_804f314 = call i16 @llvm.bswap.i16(i16 %v3_804f306)
  %v3_804f314 = zext i16 %v2_804f314 to i32
  %v6_804f314 = or i32 %v3_804f314, %v6_804f306
  store i32 %v6_804f314, i32* %eax.global-to-local, align 4
  %v3_804f318 = add i32 %v0_804f2ef, 38
  %v4_804f318 = inttoptr i32 %v3_804f318 to i16*
  store i16 %v2_804f314, i16* %v4_804f318, align 2
  %v0_804f31d119 = load i32, i32* @esp, align 4
  %v1_804f31d120 = add i32 %v0_804f31d119, 22
  %v2_804f31d121 = inttoptr i32 %v1_804f31d120 to i16*
  %v3_804f31d122 = load i16, i16* %v2_804f31d121, align 2
  %v4_804f31d123 = add i16 %v3_804f31d122, -1
  store i16 %v4_804f31d123, i16* %v2_804f31d121, align 2
  %v0_804f322124 = load i32, i32* @esp, align 4
  %v1_804f322125 = add i32 %v0_804f322124, 22
  %v2_804f322126 = inttoptr i32 %v1_804f322125 to i16*
  %v3_804f322127 = load i16, i16* %v2_804f322126, align 2
  %v13_804f322128 = icmp eq i16 %v3_804f322127, -1
  br i1 %v13_804f322128, label %dec_label_pc_804f2b4, label %dec_label_pc_804f32a

dec_label_pc_804f32a:                             ; preds = %dec_label_pc_804f314, %dec_label_pc_804f31d.backedge
  %v0_804f322129 = phi i32 [ %v0_804f322, %dec_label_pc_804f31d.backedge ], [ %v0_804f322124, %dec_label_pc_804f314 ]
  %v0_804f32a = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_804f32a, i32* %edx.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_804f33313 = inttoptr i32 %v0_804f32a to i8*
  %v2_804f33314 = load i8, i8* %v1_804f33313, align 1
  %v3_804f33315 = zext i8 %v2_804f33314 to i32
  %v4_804f33316 = load i32, i32* %eax.global-to-local, align 4
  %v5_804f33317 = and i32 %v4_804f33316, -256
  %v6_804f33318 = or i32 %v5_804f33317, %v3_804f33315
  store i32 %v6_804f33318, i32* %eax.global-to-local, align 4
  %v4_804f33519 = icmp eq i8 %v2_804f33314, 0
  br i1 %v4_804f33519, label %dec_label_pc_804f36a, label %dec_label_pc_804f339.preheader.preheader

dec_label_pc_804f339.preheader.preheader:         ; preds = %dec_label_pc_804f32a
  %v1_804f35e = add i32 %v0_804f322129, 32
  br label %dec_label_pc_804f339.preheader

dec_label_pc_804f339.preheader:                   ; preds = %dec_label_pc_804f339.preheader.preheader, %dec_label_pc_804f3fc
  %v0_804f400 = phi i32 [ %v3_804f400, %dec_label_pc_804f3fc ], [ 1, %dec_label_pc_804f339.preheader.preheader ]
  %v0_804f3fd45 = phi i32 [ %v0_804f3fd, %dec_label_pc_804f3fc ], [ 0, %dec_label_pc_804f339.preheader.preheader ]
  %v0_804f34641 = phi i32 [ %v1_804f3fc, %dec_label_pc_804f3fc ], [ %v0_804f32a, %dec_label_pc_804f339.preheader.preheader ]
  %v0_804f33939 = phi i32 [ %v6_804f333, %dec_label_pc_804f3fc ], [ %v6_804f33318, %dec_label_pc_804f339.preheader.preheader ]
  br label %dec_label_pc_804f339

dec_label_pc_804f339:                             ; preds = %dec_label_pc_804f339.preheader, %dec_label_pc_804f341
  %v0_804f3fd = phi i32 [ %v0_804f3fd45, %dec_label_pc_804f339.preheader ], [ 1, %dec_label_pc_804f341 ]
  %v0_804f3fc = phi i32 [ %v0_804f34641, %dec_label_pc_804f339.preheader ], [ %v2_804f362, %dec_label_pc_804f341 ]
  %v4_804f333 = phi i32 [ %v0_804f33939, %dec_label_pc_804f339.preheader ], [ %v6_804f364, %dec_label_pc_804f341 ]
  %v1_804f339 = trunc i32 %v4_804f333 to i8
  %tmp141 = icmp ult i8 %v1_804f339, -64
  br i1 %tmp141, label %dec_label_pc_804f3fc, label %dec_label_pc_804f341

dec_label_pc_804f341:                             ; preds = %dec_label_pc_804f339
  %v1_804f341 = urem i32 %v4_804f333, 256
  store i32 %v1_804f341, i32* %eax.global-to-local, align 4
  %v1_804f346 = add i32 %v0_804f3fc, 1
  %v2_804f346 = inttoptr i32 %v1_804f346 to i8*
  %v3_804f346 = load i8, i8* %v2_804f346, align 1
  %v4_804f346 = zext i8 %v3_804f346 to i32
  store i32 1, i32* @ebx, align 4
  %v2_804f354 = mul nuw nsw i32 %v1_804f341, 256
  %v2_804f357 = add nsw i32 %v2_804f354, -49152
  %v3_804f357 = or i32 %v4_804f346, %v2_804f357
  store i32 %v3_804f357, i32* %eax.global-to-local, align 4
  %v2_804f362 = add i32 %v1_804f35e, %v3_804f357
  store i32 %v2_804f362, i32* %edx.global-to-local, align 4
  %v1_804f364 = inttoptr i32 %v2_804f362 to i8*
  %v2_804f364 = load i8, i8* %v1_804f364, align 1
  %v3_804f364 = zext i8 %v2_804f364 to i32
  %v6_804f364 = or i32 %v3_804f364, %v2_804f357
  store i32 %v6_804f364, i32* %eax.global-to-local, align 4
  %v4_804f366 = icmp eq i8 %v2_804f364, 0
  %v1_804f368 = icmp eq i1 %v4_804f366, false
  br i1 %v1_804f368, label %dec_label_pc_804f339, label %dec_label_pc_804f36a

dec_label_pc_804f36a:                             ; preds = %dec_label_pc_804f3fc, %dec_label_pc_804f341, %dec_label_pc_804f32a
  %v4_804f38625 = phi i32 [ %v6_804f33318, %dec_label_pc_804f32a ], [ %v6_804f364, %dec_label_pc_804f341 ], [ %v6_804f333, %dec_label_pc_804f3fc ]
  %v5_804f420 = phi i32 [ %v0_804f32a, %dec_label_pc_804f32a ], [ %v2_804f362, %dec_label_pc_804f341 ], [ %v1_804f3fc, %dec_label_pc_804f3fc ]
  %v1_804f36a = phi i32 [ 0, %dec_label_pc_804f32a ], [ 1, %dec_label_pc_804f341 ], [ %v0_804f3fd, %dec_label_pc_804f3fc ]
  %v0_804f36a = phi i32 [ 1, %dec_label_pc_804f32a ], [ %v0_804f400, %dec_label_pc_804f341 ], [ %v3_804f400, %dec_label_pc_804f3fc ]
  %v2_804f36a = add i32 %v1_804f36a, %v0_804f32a
  %v2_804f36c = add i32 %v2_804f36a, %v0_804f36a
  store i32 %v2_804f36c, i32* @esi, align 4
  %v1_804f36f = inttoptr i32 %v2_804f36c to i16*
  %v2_804f36f = load i16, i16* %v1_804f36f, align 2
  %v8_804f36f = icmp eq i16 %v2_804f36f, 256
  %v1_804f374 = add i32 %v2_804f36c, 10
  store i32 %v1_804f374, i32* @edi, align 4
  br i1 %v8_804f36f, label %dec_label_pc_804f414, label %dec_label_pc_804f37d

dec_label_pc_804f37d:                             ; preds = %dec_label_pc_804f414, %dec_label_pc_804f36a
  store i32 %v1_804f374, i32* %edx.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v1_804f38622 = inttoptr i32 %v1_804f374 to i8*
  %v2_804f38623 = load i8, i8* %v1_804f38622, align 1
  %v3_804f38624 = zext i8 %v2_804f38623 to i32
  %v5_804f38626 = and i32 %v4_804f38625, -256
  %v6_804f38627 = or i32 %v3_804f38624, %v5_804f38626
  store i32 %v6_804f38627, i32* %eax.global-to-local, align 4
  %v4_804f38828 = icmp eq i8 %v2_804f38623, 0
  br i1 %v4_804f38828, label %dec_label_pc_804f3b9, label %dec_label_pc_804f38c.preheader.preheader

dec_label_pc_804f38c.preheader.preheader:         ; preds = %dec_label_pc_804f37d
  %v1_804f3ad = add i32 %v0_804f322129, 32
  br label %dec_label_pc_804f38c.preheader

dec_label_pc_804f38c.preheader:                   ; preds = %dec_label_pc_804f38c.preheader.preheader, %dec_label_pc_804f408
  %v0_804f40c = phi i32 [ %v3_804f40c, %dec_label_pc_804f408 ], [ 1, %dec_label_pc_804f38c.preheader.preheader ]
  %v0_804f40964 = phi i32 [ %v0_804f409, %dec_label_pc_804f408 ], [ 0, %dec_label_pc_804f38c.preheader.preheader ]
  %v0_804f39560 = phi i32 [ %v1_804f408, %dec_label_pc_804f408 ], [ %v1_804f374, %dec_label_pc_804f38c.preheader.preheader ]
  %v0_804f38c58 = phi i32 [ %v6_804f386, %dec_label_pc_804f408 ], [ %v6_804f38627, %dec_label_pc_804f38c.preheader.preheader ]
  br label %dec_label_pc_804f38c

dec_label_pc_804f38c:                             ; preds = %dec_label_pc_804f38c.preheader, %dec_label_pc_804f390
  %v0_804f409 = phi i32 [ %v0_804f40964, %dec_label_pc_804f38c.preheader ], [ 1, %dec_label_pc_804f390 ]
  %v0_804f408 = phi i32 [ %v0_804f39560, %dec_label_pc_804f38c.preheader ], [ %v2_804f3b1, %dec_label_pc_804f390 ]
  %v4_804f386 = phi i32 [ %v0_804f38c58, %dec_label_pc_804f38c.preheader ], [ %v6_804f3b3, %dec_label_pc_804f390 ]
  %v1_804f38c = trunc i32 %v4_804f386 to i8
  %tmp142 = icmp ult i8 %v1_804f38c, -64
  br i1 %tmp142, label %dec_label_pc_804f408, label %dec_label_pc_804f390

dec_label_pc_804f390:                             ; preds = %dec_label_pc_804f38c
  %v1_804f390 = urem i32 %v4_804f386, 256
  store i32 %v1_804f390, i32* %eax.global-to-local, align 4
  %v1_804f395 = add i32 %v0_804f408, 1
  %v2_804f395 = inttoptr i32 %v1_804f395 to i8*
  %v3_804f395 = load i8, i8* %v2_804f395, align 1
  %v4_804f395 = zext i8 %v3_804f395 to i32
  store i32 1, i32* %ecx.global-to-local, align 4
  %v2_804f3a3 = mul nuw nsw i32 %v1_804f390, 256
  %v2_804f3a6 = add nsw i32 %v2_804f3a3, -49152
  %v3_804f3a6 = or i32 %v4_804f395, %v2_804f3a6
  store i32 %v3_804f3a6, i32* %eax.global-to-local, align 4
  %v2_804f3b1 = add i32 %v1_804f3ad, %v3_804f3a6
  store i32 %v2_804f3b1, i32* %edx.global-to-local, align 4
  %v1_804f3b3 = inttoptr i32 %v2_804f3b1 to i8*
  %v2_804f3b3 = load i8, i8* %v1_804f3b3, align 1
  %v3_804f3b3 = zext i8 %v2_804f3b3 to i32
  %v6_804f3b3 = or i32 %v3_804f3b3, %v2_804f3a6
  store i32 %v6_804f3b3, i32* %eax.global-to-local, align 4
  %v4_804f3b5 = icmp eq i8 %v2_804f3b3, 0
  %v1_804f3b7 = icmp eq i1 %v4_804f3b5, false
  br i1 %v1_804f3b7, label %dec_label_pc_804f38c, label %dec_label_pc_804f3b9

dec_label_pc_804f3b9:                             ; preds = %dec_label_pc_804f408, %dec_label_pc_804f390, %dec_label_pc_804f37d
  %v1_804f3b9 = phi i32 [ 0, %dec_label_pc_804f37d ], [ 1, %dec_label_pc_804f390 ], [ %v0_804f409, %dec_label_pc_804f408 ]
  %v0_804f3b9 = phi i32 [ 1, %dec_label_pc_804f37d ], [ %v0_804f40c, %dec_label_pc_804f390 ], [ %v3_804f40c, %dec_label_pc_804f408 ]
  %v2_804f3b9 = add i32 %v0_804f3b9, %v1_804f3b9
  store i32 %v2_804f3b9, i32* @ebx, align 4
  %v2_804f3bb = add i32 %v2_804f3b9, %v1_804f374
  br label %dec_label_pc_804f31d.backedge

dec_label_pc_804f31d.backedge:                    ; preds = %dec_label_pc_804f3b9, %dec_label_pc_804f430
  %v0_804f31d = phi i32 [ %v0_804f322129, %dec_label_pc_804f3b9 ], [ %v0_804f31d.pre, %dec_label_pc_804f430 ]
  %storemerge = phi i32 [ %v2_804f3bb, %dec_label_pc_804f3b9 ], [ %v2_804f43b, %dec_label_pc_804f430 ]
  store i32 %storemerge, i32* %ecx.global-to-local, align 4
  %v1_804f31d = add i32 %v0_804f31d, 22
  %v2_804f31d = inttoptr i32 %v1_804f31d to i16*
  %v3_804f31d = load i16, i16* %v2_804f31d, align 2
  %v4_804f31d = add i16 %v3_804f31d, -1
  store i16 %v4_804f31d, i16* %v2_804f31d, align 2
  %v0_804f322 = load i32, i32* @esp, align 4
  %v1_804f322 = add i32 %v0_804f322, 22
  %v2_804f322 = inttoptr i32 %v1_804f322 to i16*
  %v3_804f322 = load i16, i16* %v2_804f322, align 2
  %v13_804f322 = icmp eq i16 %v3_804f322, -1
  br i1 %v13_804f322, label %dec_label_pc_804f2b4, label %dec_label_pc_804f32a

dec_label_pc_804f3c3:                             ; preds = %dec_label_pc_804f2b4
  %v1_804f3c3 = add i32 %v2_804f2c0, 4
  %v2_804f3c3 = inttoptr i32 %v1_804f3c3 to i32*
  %v3_804f3c3 = load i32, i32* %v2_804f3c3, align 4
  store i32 %v3_804f3c3, i32* %eax.global-to-local, align 4
  %v1_804f3c6 = icmp eq i32 %v3_804f3c3, 0
  br i1 %v1_804f3c6, label %dec_label_pc_804f3d6, label %dec_label_pc_804f3ca

dec_label_pc_804f3ca:                             ; preds = %dec_label_pc_804f3c3
  %v3_804f3cd = inttoptr i32 %v0_804f2bd to i32*
  store i32 %v3_804f3c3, i32* %v3_804f3cd, align 4
  %v1_804f3ce = call i32 @function_80536d9(i32 1)
  store i32 %v1_804f3ce, i32* %eax.global-to-local, align 4
  %v0_804f3d3 = load i32, i32* @esp, align 4
  %v1_804f3d3 = add i32 %v0_804f3d3, 16
  br label %dec_label_pc_804f3d6

dec_label_pc_804f3d6:                             ; preds = %dec_label_pc_804f3c3, %dec_label_pc_804f3ca
  %v0_804f3d6 = phi i32 [ %v1_804f2bd, %dec_label_pc_804f3c3 ], [ %v1_804f3d3, %dec_label_pc_804f3ca ]
  %v2_804f3d9 = inttoptr i32 %v0_804f3d6 to i32*
  %v3_804f3d9 = load i32, i32* %v2_804f3d9, align 4
  store i32 %v3_804f3d9, i32* @esi, align 4
  %v2_804f3dd = add i32 %v0_804f3d6, -16
  %v3_804f3dd = inttoptr i32 %v2_804f3dd to i32*
  store i32 %v3_804f3d9, i32* %v3_804f3dd, align 4
  %v1_804f3de = call i32 @function_80536d9(i32 1)
  store i32 %v1_804f3de, i32* %eax.global-to-local, align 4
  %v0_804f3e3 = load i32, i32* @esp, align 4
  %v1_804f3e3 = add i32 %v0_804f3e3, 16
  %v2_804f3e3 = inttoptr i32 %v1_804f3e3 to i32*
  store i32 0, i32* %v2_804f3e3, align 4
  %v0_804f3eb = load i32, i32* @esp, align 4
  %v1_804f3eb = add i32 %v0_804f3eb, 16
  %v1_804f3ee = inttoptr i32 %v1_804f3eb to i32*
  %v2_804f3ee = load i32, i32* %v1_804f3ee, align 4
  store i32 %v2_804f3ee, i32* %eax.global-to-local, align 4
  %v1_804f3f1 = add i32 %v0_804f3eb, 4300
  %v1_804f3f7 = inttoptr i32 %v1_804f3f1 to i32*
  %v2_804f3f7 = load i32, i32* %v1_804f3f7, align 4
  store i32 %v2_804f3f7, i32* @ebx, align 4
  %v3_804f3f8 = add i32 %v0_804f3eb, 4308
  %v1_804f3f9 = inttoptr i32 %v3_804f3f8 to i32*
  %v2_804f3f9 = load i32, i32* %v1_804f3f9, align 4
  store i32 %v2_804f3f9, i32* @edi, align 4
  %v3_804f3f9 = add i32 %v0_804f3eb, 4312
  %v1_804f3fa = inttoptr i32 %v3_804f3f9 to i32*
  %v2_804f3fa = load i32, i32* %v1_804f3fa, align 4
  store i32 %v2_804f3fa, i32* @ebp, align 4
  ret i32 %v2_804f3ee

dec_label_pc_804f3fc:                             ; preds = %dec_label_pc_804f339
  %v1_804f3fc = add i32 %v0_804f3fc, 1
  store i32 %v1_804f3fc, i32* %edx.global-to-local, align 4
  %v5_804f3fd = icmp eq i32 %v0_804f3fd, 0
  %v2_804f400 = zext i1 %v5_804f3fd to i32
  %v3_804f400 = add i32 %v2_804f400, %v0_804f400
  %v1_804f333 = inttoptr i32 %v1_804f3fc to i8*
  %v2_804f333 = load i8, i8* %v1_804f333, align 1
  %v3_804f333 = zext i8 %v2_804f333 to i32
  %v5_804f333 = and i32 %v4_804f333, -256
  %v6_804f333 = or i32 %v3_804f333, %v5_804f333
  store i32 %v6_804f333, i32* %eax.global-to-local, align 4
  %v4_804f335 = icmp eq i8 %v2_804f333, 0
  br i1 %v4_804f335, label %dec_label_pc_804f36a, label %dec_label_pc_804f339.preheader

dec_label_pc_804f408:                             ; preds = %dec_label_pc_804f38c
  %v1_804f408 = add i32 %v0_804f408, 1
  store i32 %v1_804f408, i32* %edx.global-to-local, align 4
  %v5_804f409 = icmp eq i32 %v0_804f409, 0
  %v2_804f40c = zext i1 %v5_804f409 to i32
  %v3_804f40c = add i32 %v2_804f40c, %v0_804f40c
  %v1_804f386 = inttoptr i32 %v1_804f408 to i8*
  %v2_804f386 = load i8, i8* %v1_804f386, align 1
  %v3_804f386 = zext i8 %v2_804f386 to i32
  %v5_804f386 = and i32 %v4_804f386, -256
  %v6_804f386 = or i32 %v3_804f386, %v5_804f386
  store i32 %v6_804f386, i32* %eax.global-to-local, align 4
  %v4_804f388 = icmp eq i8 %v2_804f386, 0
  br i1 %v4_804f388, label %dec_label_pc_804f3b9, label %dec_label_pc_804f38c.preheader

dec_label_pc_804f414:                             ; preds = %dec_label_pc_804f36a
  %v1_804f414 = add i32 %v2_804f36c, 2
  %v2_804f414 = inttoptr i32 %v1_804f414 to i16*
  %v3_804f414 = load i16, i16* %v2_804f414, align 2
  %v9_804f414 = icmp eq i16 %v3_804f414, 256
  %v1_804f41a = icmp eq i1 %v9_804f414, false
  br i1 %v1_804f41a, label %dec_label_pc_804f37d, label %dec_label_pc_804f420

dec_label_pc_804f420:                             ; preds = %dec_label_pc_804f414
  %v1_804f420 = add i32 %v2_804f36c, 8
  %v2_804f420 = inttoptr i32 %v1_804f420 to i16*
  %v3_804f420 = load i16, i16* %v2_804f420, align 2
  %v4_804f420 = zext i16 %v3_804f420 to i32
  %v6_804f420 = and i32 %v5_804f420, -65536
  %v7_804f420 = or i32 %v4_804f420, %v6_804f420
  store i32 %v7_804f420, i32* %edx.global-to-local, align 4
  %v2_804f426 = call i16 @llvm.bswap.i16(i16 %v3_804f420)
  %v3_804f426 = zext i16 %v2_804f426 to i32
  %v6_804f426 = or i32 %v3_804f426, %v6_804f420
  store i32 %v6_804f426, i32* %eax.global-to-local, align 4
  %v10_804f42a = icmp eq i16 %v3_804f420, 1024
  br i1 %v10_804f42a, label %dec_label_pc_804f443, label %dec_label_pc_804f430

dec_label_pc_804f430:                             ; preds = %dec_label_pc_804f420, %dec_label_pc_804f443
  %v0_804f31d.pre = phi i32 [ %v0_804f322129, %dec_label_pc_804f420 ], [ %v0_804f31d.pre.pre, %dec_label_pc_804f443 ]
  %v0_804f43b = phi i32 [ %v1_804f374, %dec_label_pc_804f420 ], [ %v0_804f43b.pre, %dec_label_pc_804f443 ]
  %v0_804f430 = phi i32 [ %v7_804f420, %dec_label_pc_804f420 ], [ %v7_804f4a7, %dec_label_pc_804f443 ]
  %v1_804f430 = trunc i32 %v0_804f430 to i16
  %v2_804f430 = call i16 @llvm.bswap.i16(i16 %v1_804f430)
  %v3_804f430 = zext i16 %v2_804f430 to i32
  %v5_804f430 = and i32 %v0_804f430, -65536
  %v6_804f430 = or i32 %v3_804f430, %v5_804f430
  store i32 %v6_804f430, i32* %edx.global-to-local, align 4
  store i32 %v3_804f430, i32* %eax.global-to-local, align 4
  %v2_804f43b = add i32 %v3_804f430, %v0_804f43b
  br label %dec_label_pc_804f31d.backedge

dec_label_pc_804f443:                             ; preds = %dec_label_pc_804f420
  %v2_804f443 = inttoptr i32 %v1_804f374 to i8*
  %v3_804f443 = load i8, i8* %v2_804f443, align 1
  %v4_804f443 = zext i8 %v3_804f443 to i32
  %v6_804f443 = and i32 %v6_804f426, -256
  %v7_804f443 = or i32 %v4_804f443, %v6_804f443
  store i32 %v7_804f443, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v3_804f448 = add i32 %v0_804f322129, 4280
  %v4_804f448 = inttoptr i32 %v3_804f448 to i8*
  store i8 %v3_804f443, i8* %v4_804f448, align 1
  %v0_804f44f = load i32, i32* @edi, align 4
  %v1_804f44f = add i32 %v0_804f44f, 1
  %v2_804f44f = inttoptr i32 %v1_804f44f to i8*
  %v3_804f44f = load i8, i8* %v2_804f44f, align 1
  %v4_804f44f = zext i8 %v3_804f44f to i32
  %v5_804f44f = load i32, i32* %eax.global-to-local, align 4
  %v6_804f44f = and i32 %v5_804f44f, -256
  %v7_804f44f = or i32 %v6_804f44f, %v4_804f44f
  store i32 %v7_804f44f, i32* %eax.global-to-local, align 4
  %v2_804f452 = load i32, i32* @esp, align 4
  %v3_804f452 = add i32 %v2_804f452, 4281
  %v4_804f452 = inttoptr i32 %v3_804f452 to i8*
  store i8 %v3_804f44f, i8* %v4_804f452, align 1
  %v0_804f459 = load i32, i32* @edi, align 4
  %v1_804f459 = add i32 %v0_804f459, 2
  %v2_804f459 = inttoptr i32 %v1_804f459 to i8*
  %v3_804f459 = load i8, i8* %v2_804f459, align 1
  %v4_804f459 = zext i8 %v3_804f459 to i32
  %v5_804f459 = load i32, i32* %eax.global-to-local, align 4
  %v6_804f459 = and i32 %v5_804f459, -256
  %v7_804f459 = or i32 %v6_804f459, %v4_804f459
  store i32 %v7_804f459, i32* %eax.global-to-local, align 4
  %v2_804f45c = load i32, i32* @esp, align 4
  %v3_804f45c = add i32 %v2_804f45c, 4282
  %v4_804f45c = inttoptr i32 %v3_804f45c to i8*
  store i8 %v3_804f459, i8* %v4_804f45c, align 1
  %v0_804f463 = load i32, i32* @edi, align 4
  %v1_804f463 = add i32 %v0_804f463, 3
  %v2_804f463 = inttoptr i32 %v1_804f463 to i8*
  %v3_804f463 = load i8, i8* %v2_804f463, align 1
  %v4_804f463 = zext i8 %v3_804f463 to i32
  %v5_804f463 = load i32, i32* %eax.global-to-local, align 4
  %v6_804f463 = and i32 %v5_804f463, -256
  %v7_804f463 = or i32 %v6_804f463, %v4_804f463
  store i32 %v7_804f463, i32* %eax.global-to-local, align 4
  %v2_804f466 = load i32, i32* @esp, align 4
  %v3_804f466 = add i32 %v2_804f466, 4283
  %v4_804f466 = inttoptr i32 %v3_804f466 to i8*
  store i8 %v3_804f463, i8* %v4_804f466, align 1
  %v0_804f46d = load i32, i32* %eax.global-to-local, align 4
  %v1_804f46d = load i32, i32* @esp, align 4
  %v2_804f46d = add i32 %v1_804f46d, -4
  %v3_804f46d = inttoptr i32 %v2_804f46d to i32*
  store i32 %v0_804f46d, i32* %v3_804f46d, align 4
  %v0_804f46e = load i32, i32* %eax.global-to-local, align 4
  %v2_804f46e = add i32 %v1_804f46d, -8
  %v3_804f46e = inttoptr i32 %v2_804f46e to i32*
  store i32 %v0_804f46e, i32* %v3_804f46e, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_804f471 = inttoptr i32 %v1_804f46d to i32*
  %v3_804f471 = load i32, i32* %v2_804f471, align 4
  store i32 %v3_804f471, i32* @edx, align 4
  %v1_804f475 = inttoptr i32 %v3_804f471 to i8*
  %v2_804f475 = load i8, i8* %v1_804f475, align 1
  %v3_804f475 = zext i8 %v2_804f475 to i32
  %v1_804f477 = mul nuw nsw i32 %v3_804f475, 4
  %v2_804f477 = add nuw nsw i32 %v1_804f477, 4
  store i32 %v2_804f477, i32* %eax.global-to-local, align 4
  %v2_804f47e = add i32 %v1_804f46d, -12
  %v3_804f47e = inttoptr i32 %v2_804f47e to i32*
  store i32 %v2_804f477, i32* %v3_804f47e, align 4
  %v0_804f47f = load i32, i32* @edx, align 4
  %v1_804f47f = add i32 %v0_804f47f, 4
  %v2_804f47f = inttoptr i32 %v1_804f47f to i32*
  %v3_804f47f = load i32, i32* %v2_804f47f, align 4
  store i32 %v3_804f47f, i32* %eax.global-to-local, align 4
  %v2_804f482 = add i32 %v1_804f46d, -16
  %v3_804f482 = inttoptr i32 %v2_804f482 to i32*
  store i32 %v3_804f47f, i32* %v3_804f482, align 4
  %v0_804f483 = call i32 @function_805317c()
  store i32 %v0_804f483, i32* %eax.global-to-local, align 4
  %v0_804f488 = load i32, i32* @esp, align 4
  %v1_804f488 = add i32 %v0_804f488, 16
  %v2_804f488 = inttoptr i32 %v1_804f488 to i32*
  %v3_804f488 = load i32, i32* %v2_804f488, align 4
  store i32 %v3_804f488, i32* %ecx.global-to-local, align 4
  %v1_804f48c = inttoptr i32 %v3_804f488 to i8*
  %v2_804f48c = load i8, i8* %v1_804f48c, align 1
  %v3_804f48c = zext i8 %v2_804f48c to i32
  %v4_804f48c = load i32, i32* @edx, align 4
  %v5_804f48c = and i32 %v4_804f48c, -256
  %v6_804f48c = or i32 %v5_804f48c, %v3_804f48c
  store i32 %v6_804f48c, i32* %edx.global-to-local, align 4
  %v2_804f48e = add i32 %v3_804f488, 4
  %v3_804f48e = inttoptr i32 %v2_804f48e to i32*
  store i32 %v0_804f483, i32* %v3_804f48e, align 4
  %v0_804f491 = load i32, i32* %edx.global-to-local, align 4
  %v1_804f491 = urem i32 %v0_804f491, 256
  %v2_804f491 = load i32, i32* @ebx, align 4
  %v3_804f491 = and i32 %v2_804f491, -256
  %v4_804f491 = or i32 %v3_804f491, %v1_804f491
  store i32 %v4_804f491, i32* @ebx, align 4
  %v0_804f493 = load i32, i32* @esp, align 4
  %v1_804f493 = add i32 %v0_804f493, 4296
  %v2_804f493 = inttoptr i32 %v1_804f493 to i32*
  %v3_804f493 = load i32, i32* %v2_804f493, align 4
  store i32 %v3_804f493, i32* %ecx.global-to-local, align 4
  %v1_804f49a = add i32 %v0_804f491, 1
  store i32 %v1_804f49a, i32* %edx.global-to-local, align 4
  %v3_804f49b = mul i32 %v4_804f491, 4
  %v4_804f49b = add i32 %v3_804f49b, %v0_804f483
  %v5_804f49b = inttoptr i32 %v4_804f49b to i32*
  store i32 %v3_804f493, i32* %v5_804f49b, align 4
  %v0_804f49e = load i32, i32* @esp, align 4
  %v1_804f49e = add i32 %v0_804f49e, 16
  %v2_804f49e = inttoptr i32 %v1_804f49e to i32*
  %v3_804f49e = load i32, i32* %v2_804f49e, align 4
  store i32 %v3_804f49e, i32* %eax.global-to-local, align 4
  %v0_804f4a5 = load i32, i32* %edx.global-to-local, align 4
  %v1_804f4a5 = trunc i32 %v0_804f4a5 to i8
  %v3_804f4a5 = inttoptr i32 %v3_804f49e to i8*
  store i8 %v1_804f4a5, i8* %v3_804f4a5, align 1
  %v0_804f4a7 = load i32, i32* @esi, align 4
  %v1_804f4a7 = add i32 %v0_804f4a7, 8
  %v2_804f4a7 = inttoptr i32 %v1_804f4a7 to i16*
  %v3_804f4a7 = load i16, i16* %v2_804f4a7, align 2
  %v4_804f4a7 = zext i16 %v3_804f4a7 to i32
  %v5_804f4a7 = load i32, i32* %edx.global-to-local, align 4
  %v6_804f4a7 = and i32 %v5_804f4a7, -65536
  %v7_804f4a7 = or i32 %v6_804f4a7, %v4_804f4a7
  store i32 %v7_804f4a7, i32* %edx.global-to-local, align 4
  %v0_804f43b.pre = load i32, i32* @edi, align 4
  %v0_804f31d.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804f430

; uselistorder directives
  uselistorder i32 %v7_804f4a7, { 1, 0 }
  uselistorder i32 %v0_804f491, { 1, 0 }
  uselistorder i32 %v3_804f430, { 0, 2, 1 }
  uselistorder i32 %v0_804f430, { 1, 0 }
  uselistorder i32 %v6_804f386, { 1, 0 }
  uselistorder i32 %v3_804f40c, { 1, 0 }
  uselistorder i32 %v1_804f408, { 1, 2, 0 }
  uselistorder i32 %v6_804f333, { 2, 1, 0 }
  uselistorder i32 %v3_804f400, { 1, 0 }
  uselistorder i32 %v1_804f3fc, { 2, 3, 1, 0 }
  uselistorder i32 %v0_804f3d6, { 1, 0 }
  uselistorder i32 %v0_804f322, { 2, 1, 0 }
  uselistorder i32 %v6_804f3b3, { 1, 0 }
  uselistorder i32 %v2_804f3b1, { 1, 2, 0 }
  uselistorder i32 %v3_804f3a6, { 1, 0 }
  uselistorder i32 %v4_804f386, { 1, 0, 2 }
  uselistorder i32 %v0_804f409, { 2, 0, 1 }
  uselistorder i32 %v0_804f40c, { 1, 0 }
  uselistorder i32 %v1_804f374, { 5, 4, 1, 0, 2, 3, 6 }
  uselistorder i32 %v6_804f364, { 0, 2, 1 }
  uselistorder i32 %v2_804f362, { 0, 2, 3, 1 }
  uselistorder i32 %v3_804f357, { 1, 0 }
  uselistorder i32 %v4_804f333, { 1, 0, 2 }
  uselistorder i32 %v0_804f3fd, { 2, 0, 1 }
  uselistorder i32 %v0_804f400, { 1, 0 }
  uselistorder i32 %v6_804f33318, { 1, 0, 2 }
  uselistorder i32 %v0_804f32a, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_804f322129, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v0_804f322124, { 0, 2, 1 }
  uselistorder i32 %v1_804f2f3, { 1, 0 }
  uselistorder i32 %v0_804f2ef, { 0, 1, 2, 4, 5, 3 }
  uselistorder i32 %v2_804f2ea, { 1, 0, 2 }
  uselistorder i32 %v0_804f2bd, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v3_804f27e, { 1, 0 }
  uselistorder i32 %v0_804f22f, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder i32 %v0_804f22a, { 2, 1, 0, 3 }
  uselistorder i32 %v1_804f1f7, { 1, 0 }
  uselistorder i32 %v2_804f1f4, { 1, 0 }
  uselistorder i32 %v0_804f1f0, { 1, 0 }
  uselistorder i32 %v1_804f1dd, { 2, 0, 1, 3 }
  uselistorder i32 %v12_804f1d1, { 1, 0 }
  uselistorder i32 %v0_804f1ce, { 2, 0, 1 }
  uselistorder i32 %v0_804f1b9, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_804f197, { 0, 6, 1, 2, 3, 4, 5 }
  uselistorder i32 %v0_804f178, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 %v4_804f173, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804f158, { 1, 0 }
  uselistorder i32 %v2_804f0df, { 1, 0 }
  uselistorder i32 %v1_804f0d1, { 1, 0 }
  uselistorder i32 %v1_804f073, { 1, 0 }
  uselistorder i8 %v2_804f062, { 2, 0, 3, 1 }
  uselistorder i32 %v0_804f05c, { 0, 2, 3, 1 }
  uselistorder i32 %v2_804f030, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-44, { 0, 2, 1 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 14, 2, 3, 13, 4, 5, 6, 7, 8, 10, 9, 11, 12 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 24, 28, 17, 18, 19, 20, 21, 22, 23, 0, 25, 26, 27, 59, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60 }
  uselistorder i16 -1, { 2, 3, 0, 1 }
  uselistorder i32 4312, { 1, 0 }
  uselistorder i32 4308, { 1, 0 }
  uselistorder i32 4300, { 1, 0 }
  uselistorder i32 ()* @function_8053b30, { 1, 0 }
  uselistorder i32 (i8*)* @function_80519e0, { 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 8, 9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 60, 25, 26, 27, 54, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 0, 57, 58, 59 }
  uselistorder label %dec_label_pc_804f430, { 1, 0 }
  uselistorder label %dec_label_pc_804f3d6, { 1, 0 }
  uselistorder label %dec_label_pc_804f31d.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_804f38c, { 1, 0 }
  uselistorder label %dec_label_pc_804f38c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_804f339, { 1, 0 }
  uselistorder label %dec_label_pc_804f339.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_804f32a, { 1, 0 }
  uselistorder label %dec_label_pc_804f2b4, { 5, 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_804f16c, { 1, 0 }
  uselistorder label %dec_label_pc_804f062, { 1, 0 }
}

define i32 @function_804f4d0() local_unnamed_addr {
dec_label_pc_804f4d0:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_804f4d0 = load i32, i32* @ebx, align 4
  %v0_804f4d1 = load i32, i32* @eax, align 4
  store i32 %v0_804f4d1, i32* @ebx, align 4
  store i32 0, i32* %stack_var_-20, align 4
  %v1_804f4f6 = add i32 %v0_804f4d1, 4
  %v2_804f4f6 = inttoptr i32 %v1_804f4f6 to i32*
  %v3_804f4f6 = load i32, i32* %v2_804f4f6, align 4
  %v10_804f4f9 = icmp eq i32 %v3_804f4f6, -1
  br i1 %v10_804f4f9, label %dec_label_pc_804f4d0.dec_label_pc_804f50a_crit_edge, label %dec_label_pc_804f4fe

dec_label_pc_804f4d0.dec_label_pc_804f50a_crit_edge: ; preds = %dec_label_pc_804f4d0
  br label %dec_label_pc_804f50a

dec_label_pc_804f4fe:                             ; preds = %dec_label_pc_804f4d0
  %v1_804f502 = call i32 @function_8051f81(i32 %v3_804f4f6)
  br label %dec_label_pc_804f50a

dec_label_pc_804f50a:                             ; preds = %dec_label_pc_804f4d0.dec_label_pc_804f50a_crit_edge, %dec_label_pc_804f4fe
  %v0_804f50a = phi i32 [ -1, %dec_label_pc_804f4d0.dec_label_pc_804f50a_crit_edge ], [ %v1_804f502, %dec_label_pc_804f4fe ]
  %v4_804f511 = call i32 @function_8052775(i32 2, i32 1, i32 0, i32 %v0_804f50a)
  %v1_804f519 = load i32, i32* @ebx, align 4
  %v2_804f519 = add i32 %v1_804f519, 4
  %v3_804f519 = inttoptr i32 %v2_804f519 to i32*
  store i32 %v4_804f511, i32* %v3_804f519, align 4
  %v8_804f51c = icmp eq i32 %v4_804f511, -1
  br i1 %v8_804f51c, label %dec_label_pc_804f50a.dec_label_pc_804f593_crit_edge, label %dec_label_pc_804f51f

dec_label_pc_804f50a.dec_label_pc_804f593_crit_edge: ; preds = %dec_label_pc_804f50a
  br label %dec_label_pc_804f593

dec_label_pc_804f51f:                             ; preds = %dec_label_pc_804f50a
  %v0_804f521 = load i32, i32* @ebx, align 4
  %v1_804f521 = add i32 %v0_804f521, 28
  store i32 %v1_804f521, i32* @eax, align 4
  %v1_804f529 = add i32 %v0_804f521, 24
  %v2_804f529 = inttoptr i32 %v1_804f529 to i32*
  store i32 0, i32* %v2_804f529, align 4
  %v0_804f530 = load i32, i32* @eax, align 4
  %v2_804f531 = call i32 @function_8051a70(i32 %v0_804f530, i32 512)
  %v0_804f539 = load i32, i32* @ebx, align 4
  %v1_804f539 = add i32 %v0_804f539, 4
  %v2_804f539 = inttoptr i32 %v1_804f539 to i32*
  %v3_804f539 = load i32, i32* %v2_804f539, align 4
  %v3_804f541 = call i32 @function_8051ebd(i32 %v3_804f539, i32 3, i32 0)
  %v0_804f549 = load i32, i32* @ebx, align 4
  %v1_804f549 = add i32 %v0_804f549, 4
  %v2_804f549 = inttoptr i32 %v1_804f549 to i32*
  %v3_804f549 = load i32, i32* %v2_804f549, align 4
  %v12_804f54c = or i32 %v3_804f541, 2048
  %v3_804f553 = call i32 @function_8051ebd(i32 %v3_804f549, i32 4, i32 %v12_804f54c)
  %v0_804f558 = load i32, i32* @ebx, align 4
  store i32 2, i32* %stack_var_-20, align 4
  %v0_804f56e = load i32, i32* @global_var_80566d0.24, align 16
  %v2_804f573 = add i32 %v0_804f558, 8
  %v3_804f573 = inttoptr i32 %v2_804f573 to i32*
  store i32 %v0_804f56e, i32* %v3_804f573, align 4
  %v2_804f576 = ptrtoint i32* %stack_var_-20 to i32
  %v0_804f57d = load i32, i32* @ebx, align 4
  %v1_804f57d = add i32 %v0_804f57d, 4
  %v2_804f57d = inttoptr i32 %v1_804f57d to i32*
  %v3_804f57d = load i32, i32* %v2_804f57d, align 4
  store i32 %v3_804f57d, i32* %edx.global-to-local, align 4
  %v1_804f580 = add i32 %v0_804f57d, 12
  %v2_804f580 = inttoptr i32 %v1_804f580 to i32*
  store i32 1, i32* %v2_804f580, align 4
  %v0_804f58a = load i32, i32* %edx.global-to-local, align 4
  %v3_804f58b = call i32 @function_805259a(i32 %v0_804f58a, i32 %v2_804f576, i32 16)
  br label %dec_label_pc_804f593

dec_label_pc_804f593:                             ; preds = %dec_label_pc_804f50a.dec_label_pc_804f593_crit_edge, %dec_label_pc_804f51f
  %v0_804f597 = phi i32 [ 0, %dec_label_pc_804f50a.dec_label_pc_804f593_crit_edge ], [ %v3_804f58b, %dec_label_pc_804f51f ]
  store i32 %v0_804f4d0, i32* @ebx, align 4
  ret i32 %v0_804f597

; uselistorder directives
  uselistorder i32 %v3_804f4f6, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 2, 0, 1 }
  uselistorder i32 (i32, i32)* @function_8051a70, { 6, 7, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804f593, { 1, 0 }
  uselistorder label %dec_label_pc_804f50a, { 1, 0 }
}

define i32 @function_804fdeb() local_unnamed_addr {
dec_label_pc_804fdeb:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  br label %dec_label_pc_805032f

dec_label_pc_805032f:                             ; preds = %dec_label_pc_8050318, %dec_label_pc_804fdeb
  %v0_804fdeb = load i32, i32* @global_var_80566d0.24, align 16
  store i32 %v0_804fdeb, i32* @esi, align 4
  %v0_804fdf1 = load i32, i32* @esp, align 4
  %v1_804fdf1 = add i32 %v0_804fdf1, 24
  %v2_804fdf1 = inttoptr i32 %v1_804fdf1 to i32*
  %v3_804fdf1 = load i32, i32* %v2_804fdf1, align 4
  %v15_804fdf1 = icmp eq i32 %v3_804fdf1, %v0_804fdeb
  br i1 %v15_804fdf1, label %dec_label_pc_80500ab, label %dec_label_pc_804fdfb

dec_label_pc_804fdfb:                             ; preds = %dec_label_pc_805032f
  %v1_804fdfb = add i32 %v0_804fdf1, 1828
  store i32 %v1_804fdfb, i32* @ebp, align 4
  %v1_804fe02 = add i32 %v0_804fdf1, 1868
  %v2_804fe02 = inttoptr i32 %v1_804fe02 to i32*
  store i32 0, i32* %v2_804fe02, align 4
  %v0_804ffb1.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804ffb1

dec_label_pc_804fe12:                             ; preds = %dec_label_pc_8050025
  %v11_804fe12 = icmp eq i8 %v2_8050008, -84
  br i1 %v11_804fe12, label %dec_label_pc_8050070, label %dec_label_pc_804fe1b

dec_label_pc_804fe1b:                             ; preds = %dec_label_pc_804fe12
  %v10_804fe1b = icmp eq i8 %v2_8050008, 100
  br i1 %v10_804fe1b, label %dec_label_pc_804fe1b.dec_label_pc_805003c_crit_edge, label %dec_label_pc_804fe24

dec_label_pc_804fe1b.dec_label_pc_805003c_crit_edge: ; preds = %dec_label_pc_804fe1b
  %.pre = trunc i32 %v2_804ffff to i8
  br label %dec_label_pc_805003c

dec_label_pc_804fe24:                             ; preds = %dec_label_pc_8050033, %dec_label_pc_804fe1b
  %v11_804fe24 = icmp eq i8 %v2_8050008, -87
  br i1 %v11_804fe24, label %dec_label_pc_805008b, label %dec_label_pc_804fe2d

dec_label_pc_804fe2d:                             ; preds = %dec_label_pc_8050082, %dec_label_pc_804fe24
  %v0_804fe2d = phi i32 [ %v0_8050082, %dec_label_pc_8050082 ], [ %v5_804fffd, %dec_label_pc_804fe24 ]
  %v0_804feb569 = phi i32 [ %v0_8050079, %dec_label_pc_8050082 ], [ %v2_804ffff, %dec_label_pc_804fe24 ]
  %v1_804fe2d = trunc i32 %v0_804fe2d to i8
  %v11_804fe2d = icmp eq i8 %v1_804fe2d, -58
  br i1 %v11_804fe2d, label %dec_label_pc_8050053, label %dec_label_pc_804fe36

dec_label_pc_804fe36:                             ; preds = %dec_label_pc_805008b, %dec_label_pc_805004a, %dec_label_pc_804fe2d
  %v0_804fe36 = phi i32 [ %v0_804fe3676, %dec_label_pc_805008b ], [ %v5_804fffd, %dec_label_pc_805004a ], [ %v0_804fe2d, %dec_label_pc_804fe2d ]
  %v0_804feb568 = phi i32 [ %v0_805008b, %dec_label_pc_805008b ], [ %v2_804ffff, %dec_label_pc_805004a ], [ %v0_804feb569, %dec_label_pc_804fe2d ]
  %v1_804fe36 = trunc i32 %v0_804fe36 to i8
  %tmp283 = icmp ult i8 %v1_804fe36, -32
  br i1 %tmp283, label %dec_label_pc_804fe3f, label %dec_label_pc_804fff2.preheader

dec_label_pc_804fe3f:                             ; preds = %dec_label_pc_805003c, %dec_label_pc_8050070.dec_label_pc_804fe3f_crit_edge, %dec_label_pc_805005c, %dec_label_pc_804fe36, %dec_label_pc_8050053
  %v0_804feb5 = phi i32 [ %v0_8050079, %dec_label_pc_8050070.dec_label_pc_804fe3f_crit_edge ], [ %v0_805005c, %dec_label_pc_805005c ], [ %v0_804feb568, %dec_label_pc_804fe36 ], [ %v0_805005c, %dec_label_pc_8050053 ], [ %v2_804ffff, %dec_label_pc_805003c ]
  %v0_804fec3 = phi i32 [ %v0_804fe3f.pre, %dec_label_pc_8050070.dec_label_pc_804fe3f_crit_edge ], [ %v0_804fe3f65, %dec_label_pc_805005c ], [ %v0_804fe36, %dec_label_pc_804fe36 ], [ %v0_804fe3f65, %dec_label_pc_8050053 ], [ %v5_804fffd, %dec_label_pc_805003c ]
  %v1_804fe3f = add i32 %v0_804fec3, -6
  store i32 %v1_804fe3f, i32* %eax.global-to-local, align 4
  %v1_804fe42 = trunc i32 %v1_804fe3f to i8
  %tmp284 = or i8 %v1_804fe42, 1
  %tmp285 = icmp eq i8 %tmp284, 1
  br i1 %tmp285, label %dec_label_pc_804fff2.preheader, label %dec_label_pc_804fe4a

dec_label_pc_804fe4a:                             ; preds = %dec_label_pc_804fe3f
  %v1_804fe4a = trunc i32 %v0_804fec3 to i8
  %v10_804fe4a = icmp eq i8 %v1_804fe4a, 11
  br i1 %v10_804fe4a, label %dec_label_pc_804fff2.preheader, label %dec_label_pc_804fe53

dec_label_pc_804fe53:                             ; preds = %dec_label_pc_804fe4a
  %v10_804fe53 = icmp eq i8 %v1_804fe4a, 21
  br i1 %v10_804fe53, label %dec_label_pc_804fff2.preheader, label %dec_label_pc_804fe5c

dec_label_pc_804fe5c:                             ; preds = %dec_label_pc_804fe53
  %v10_804fe5c = icmp eq i8 %v1_804fe4a, 22
  br i1 %v10_804fe5c, label %dec_label_pc_804fff2.preheader, label %dec_label_pc_804fe65

dec_label_pc_804fe65:                             ; preds = %dec_label_pc_804fe5c
  %v10_804fe65 = icmp eq i8 %v1_804fe4a, 26
  br i1 %v10_804fe65, label %dec_label_pc_804fff2.preheader, label %dec_label_pc_804fe6e

dec_label_pc_804fe6e:                             ; preds = %dec_label_pc_804fe65
  %v10_804fe6e = icmp eq i8 %v1_804fe4a, 28
  br i1 %v10_804fe6e, label %dec_label_pc_804fff2.preheader, label %dec_label_pc_804fe77

dec_label_pc_804fe77:                             ; preds = %dec_label_pc_804fe6e
  %v10_804fe77 = icmp eq i8 %v1_804fe4a, 29
  br i1 %v10_804fe77, label %dec_label_pc_804fff2.preheader, label %dec_label_pc_804fe80

dec_label_pc_804fe80:                             ; preds = %dec_label_pc_804fe77
  %v10_804fe80 = icmp eq i8 %v1_804fe4a, 30
  br i1 %v10_804fe80, label %dec_label_pc_804fff2.preheader, label %dec_label_pc_804fe89

dec_label_pc_804fe89:                             ; preds = %dec_label_pc_804fe80
  %v10_804fe89 = icmp eq i8 %v1_804fe4a, 33
  br i1 %v10_804fe89, label %dec_label_pc_804fff2.preheader, label %dec_label_pc_804fe92

dec_label_pc_804fe92:                             ; preds = %dec_label_pc_804fe89
  %v10_804fe92 = icmp eq i8 %v1_804fe4a, 55
  br i1 %v10_804fe92, label %dec_label_pc_804fff2.preheader, label %dec_label_pc_804fe9b

dec_label_pc_804fe9b:                             ; preds = %dec_label_pc_804fe92
  %v11_804fe9b = icmp eq i8 %v1_804fe4a, -42
  br i1 %v11_804fe9b, label %dec_label_pc_804fff2.preheader, label %dec_label_pc_804fea4

dec_label_pc_804fea4:                             ; preds = %dec_label_pc_804fe9b
  %v11_804fea4 = icmp eq i8 %v1_804fe4a, -41
  br i1 %v11_804fea4, label %dec_label_pc_804fff2.preheader, label %dec_label_pc_804fead

dec_label_pc_804fead:                             ; preds = %dec_label_pc_804fea4
  %v0_804feaf = load i32, i32* @edx, align 4
  store i16 0, i16* bitcast (i32* @global_var_80566aa.25 to i16*), align 4
  %v1_804feb5 = mul i32 %v0_804feb5, 65536
  %v2_804fec0 = and i32 %v1_804feb5, 16711680
  %v2_804fec3 = mul i32 %v0_804fec3, 16777216
  %v1_804feaf = mul i32 %v0_804feaf, 256
  %v2_804fec9 = or i32 %v2_804fec0, %v2_804fec3
  %v0_804fecb = load i32, i32* @edi, align 4
  %v1_804fecd = urem i32 %v0_804fecb, 256
  store i32 %v1_804fecd, i32* %eax.global-to-local, align 4
  %v2_804fed2 = or i32 %v1_804fecd, %v2_804fec9
  store i32 %v2_804fed2, i32* %ecx.global-to-local, align 4
  %v2_804fed4 = or i32 %v1_804fecd, %v1_804feaf
  %v1_804fed6 = load i32, i32* @esp, align 4
  %v2_804fed6 = add i32 %v1_804fed6, -4
  %v3_804fed6 = inttoptr i32 %v2_804fed6 to i32*
  store i32 %v2_804fed2, i32* %v3_804fed6, align 4
  %v1_804fed7 = trunc i32 %v2_804fed4 to i16
  %v2_804fed7 = call i16 @llvm.bswap.i16(i16 %v1_804fed7)
  %v3_804fed7 = zext i16 %v2_804fed7 to i32
  %v1_804fedb = udiv i32 %v2_804fec9, 65536
  %v2_804fedb = mul nuw i32 %v3_804fed7, 65536
  %v1_804fede = trunc i32 %v1_804fedb to i16
  %v2_804fede = call i16 @llvm.bswap.i16(i16 %v1_804fede)
  %v3_804fede = zext i16 %v2_804fede to i32
  %v6_804fede = or i32 %v2_804fedb, %v3_804fede
  store i32 %v6_804fede, i32* %edx.global-to-local, align 4
  %v0_804fee2 = load i32, i32* %ecx.global-to-local, align 4
  %v2_804fee2 = add i32 %v1_804fed6, -8
  %v3_804fee2 = inttoptr i32 %v2_804fee2 to i32*
  store i32 %v0_804fee2, i32* %v3_804fee2, align 4
  %v0_804fee3 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_804fee3, i32* @global_var_80566b0.26, align 16
  %v1_804fee9 = add i32 %v1_804fed6, -12
  %v2_804fee9 = inttoptr i32 %v1_804fee9 to i32*
  store i32 20, i32* %v2_804fee9, align 4
  %v1_804feeb = add i32 %v1_804fed6, -16
  %v2_804feeb = inttoptr i32 %v1_804feeb to i32*
  store i32 ptrtoint (i32* @global_var_80566a0.27 to i32), i32* %v2_804feeb, align 4
  %v0_804fef0 = call i32 @function_804d4b0()
  %v1_804fef0 = trunc i32 %v0_804fef0 to i16
  store i32 %v0_804fef0, i32* %eax.global-to-local, align 4
  %v0_804fef5 = load i32, i32* @esp, align 4
  %v1_804fef5 = add i32 %v0_804fef5, 1884
  %v2_804fef5 = inttoptr i32 %v1_804fef5 to i32*
  %v3_804fef5 = load i32, i32* %v2_804fef5, align 4
  store i16 %v1_804fef0, i16* bitcast (i32* @global_var_80566aa.25 to i16*), align 4
  store i32 10, i32* %ecx.global-to-local, align 4
  %v2_804ff0b = ashr i32 %v3_804fef5, 31
  %v2_804ff11 = zext i32 %v3_804fef5 to i64
  %v4_804ff11 = zext i32 %v2_804ff0b to i64
  %v5_804ff11 = mul nuw i64 %v4_804ff11, 4294967296
  %v6_804ff11 = or i64 %v5_804ff11, %v2_804ff11
  %v10_804ff11 = srem i64 %v6_804ff11, 10
  %v11_804ff11 = trunc i64 %v10_804ff11 to i32
  store i32 %v11_804ff11, i32* %edx.global-to-local, align 4
  %v1_804ff13 = icmp eq i32 %v11_804ff11, 0
  %v1_804ff15 = icmp eq i1 %v1_804ff13, false
  %. = select i1 %v1_804ff15, i16 5888, i16 4873
  store i16 %., i16* @global_var_80566b6.28, align 2
  %v0_804ff24 = load i32, i32* @global_var_80566b0.26, align 16
  store i32 %v0_804ff24, i32* %eax.global-to-local, align 4
  %v1_804ff29 = add i32 %v0_804fef5, 12
  %v2_804ff29 = inttoptr i32 %v1_804ff29 to i32*
  store i32 20, i32* %v2_804ff29, align 4
  %v0_804ff2b = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_804ff2b, i32* @global_var_80566b8.29, align 8
  %v1_804ff30 = add i32 %v0_804fef5, 8
  %v2_804ff30 = inttoptr i32 %v1_804ff30 to i32*
  store i32 5120, i32* %v2_804ff30, align 4
  store i16 0, i16* bitcast (i32* @global_var_80566c4.30 to i16*), align 4
  %v1_804ff3e = add i32 %v0_804fef5, 4
  %v2_804ff3e = inttoptr i32 %v1_804ff3e to i32*
  store i32 ptrtoint (i32* @global_var_80566b4.31 to i32), i32* %v2_804ff3e, align 4
  %v2_804ff43 = inttoptr i32 %v0_804fef5 to i32*
  store i32 ptrtoint (i32* @global_var_80566a0.27 to i32), i32* %v2_804ff43, align 4
  %v0_804ff48 = call i32 @function_804d500()
  %v1_804ff48 = trunc i32 %v0_804ff48 to i16
  store i16 %v1_804ff48, i16* bitcast (i32* @global_var_80566c4.30 to i16*), align 4
  %v0_804ff53 = load i32, i32* @global_var_80566b0.26, align 16
  store i32 %v0_804ff53, i32* %eax.global-to-local, align 4
  %v1_804ff58 = load i32, i32* @esp, align 4
  %v2_804ff58 = add i32 %v1_804ff58, 1848
  %v3_804ff58 = inttoptr i32 %v2_804ff58 to i32*
  store i32 %v0_804ff53, i32* %v3_804ff58, align 4
  %v0_804ff5f = load i16, i16* @global_var_80566b6.28, align 2
  %v1_804ff5f = zext i16 %v0_804ff5f to i32
  %v2_804ff5f = load i32, i32* %eax.global-to-local, align 4
  %v3_804ff5f = and i32 %v2_804ff5f, -65536
  %v4_804ff5f = or i32 %v3_804ff5f, %v1_804ff5f
  store i32 %v4_804ff5f, i32* %eax.global-to-local, align 4
  %v0_804ff65 = load i32, i32* @esp, align 4
  %v1_804ff65 = add i32 %v0_804ff65, 1844
  %v2_804ff65 = inttoptr i32 %v1_804ff65 to i16*
  store i16 2, i16* %v2_804ff65, align 2
  %v0_804ff6f = load i32, i32* %eax.global-to-local, align 4
  %v1_804ff6f = trunc i32 %v0_804ff6f to i16
  %v2_804ff6f = load i32, i32* @esp, align 4
  %v3_804ff6f = add i32 %v2_804ff6f, 1846
  %v4_804ff6f = inttoptr i32 %v3_804ff6f to i16*
  store i16 %v1_804ff6f, i16* %v4_804ff6f, align 2
  %v0_804ff77 = load i32, i32* @global_var_805671c.32, align 4
  store i32 %v0_804ff77, i32* @edi, align 4
  %v0_804ff7d = load i32, i32* @esp, align 4
  %v1_804ff7d = inttoptr i32 %v0_804ff7d to i32*
  %v2_804ff7d = load i32, i32* %v1_804ff7d, align 4
  store i32 %v2_804ff7d, i32* %eax.global-to-local, align 4
  %v3_804ff7d = add i32 %v0_804ff7d, 4
  %v1_804ff7e = inttoptr i32 %v3_804ff7d to i32*
  %v2_804ff7e = load i32, i32* %v1_804ff7e, align 4
  store i32 %v2_804ff7e, i32* %edx.global-to-local, align 4
  store i32 16, i32* %v1_804ff7e, align 4
  %v0_804ff81 = load i32, i32* @ebp, align 4
  store i32 %v0_804ff81, i32* %v1_804ff7d, align 4
  %v1_804ff82 = add i32 %v0_804ff7d, -4
  %v2_804ff82 = inttoptr i32 %v1_804ff82 to i32*
  store i32 16384, i32* %v2_804ff82, align 4
  %v1_804ff87 = add i32 %v0_804ff7d, -8
  %v2_804ff87 = inttoptr i32 %v1_804ff87 to i32*
  store i32 40, i32* %v2_804ff87, align 4
  %v1_804ff89 = add i32 %v0_804ff7d, -12
  %v2_804ff89 = inttoptr i32 %v1_804ff89 to i32*
  store i32 ptrtoint (i32* @global_var_80566a0.27 to i32), i32* %v2_804ff89, align 4
  %v0_804ff8e = load i32, i32* @edi, align 4
  %v2_804ff8e = add i32 %v0_804ff7d, -16
  %v3_804ff8e = inttoptr i32 %v2_804ff8e to i32*
  store i32 %v0_804ff8e, i32* %v3_804ff8e, align 4
  %v0_804ff8f = call i32 @function_80526f7()
  store i32 %v0_804ff8f, i32* %eax.global-to-local, align 4
  %v0_804ff94 = load i32, i32* @esp, align 4
  %v1_804ff94 = add i32 %v0_804ff94, 1900
  %v2_804ff94 = inttoptr i32 %v1_804ff94 to i32*
  %v3_804ff94 = load i32, i32* %v2_804ff94, align 4
  %v1_804ff9b = add i32 %v3_804ff94, 1
  store i32 %v1_804ff9b, i32* %eax.global-to-local, align 4
  store i32 %v1_804ff9b, i32* %v2_804ff94, align 4
  %v0_804ffa3 = load i32, i32* @esp, align 4
  %v1_804ffa3 = add i32 %v0_804ffa3, 32
  %v0_804ffa6 = load i32, i32* %eax.global-to-local, align 4
  %v1_804ffa6 = add i32 %v0_804ffa6, -319
  %v6_804ffa6 = sub i32 318, %v0_804ffa6
  %v7_804ffa6 = and i32 %v6_804ffa6, %v0_804ffa6
  %v8_804ffa6 = icmp slt i32 %v7_804ffa6, 0
  %v9_804ffa6 = icmp eq i32 %v1_804ffa6, 0
  %v10_804ffa6 = icmp slt i32 %v1_804ffa6, 0
  %v3_804ffab = icmp eq i1 %v10_804ffa6, %v8_804ffa6
  %v4_804ffab = icmp eq i1 %v9_804ffa6, false
  %v5_804ffab = and i1 %v4_804ffab, %v3_804ffab
  br i1 %v5_804ffab, label %dec_label_pc_80500a7, label %dec_label_pc_804ffb1

dec_label_pc_804ffb1:                             ; preds = %dec_label_pc_804fead, %dec_label_pc_804fdfb
  %v0_804ffb1 = phi i32 [ %v1_804ffa3, %dec_label_pc_804fead ], [ %v0_804ffb1.pre, %dec_label_pc_804fdfb ]
  %v1_804ffb1 = add i32 %v0_804ffb1, 1828
  %v2_804ffb1 = inttoptr i32 %v1_804ffb1 to i32*
  store i32 0, i32* %v2_804ffb1, align 4
  %v0_804ffbc = load i32, i32* @esp, align 4
  %v1_804ffbc = add i32 %v0_804ffbc, 1832
  %v2_804ffbc = inttoptr i32 %v1_804ffbc to i32*
  store i32 0, i32* %v2_804ffbc, align 4
  %v0_804ffc7 = load i32, i32* @esp, align 4
  %v1_804ffc7 = add i32 %v0_804ffc7, 1836
  %v2_804ffc7 = inttoptr i32 %v1_804ffc7 to i32*
  store i32 0, i32* %v2_804ffc7, align 4
  %v0_804ffd2 = load i32, i32* @esp, align 4
  %v1_804ffd2 = add i32 %v0_804ffd2, 1840
  %v2_804ffd2 = inttoptr i32 %v1_804ffd2 to i32*
  store i32 0, i32* %v2_804ffd2, align 4
  %v1_804ffdd = call i32 @function_804ed40(i32 ptrtoint (i32* @0 to i32))
  %v2_804ffdd = trunc i32 %v1_804ffdd to i16
  store i16 %v2_804ffdd, i16* bitcast (i32* @global_var_80566a4.33 to i16*), align 4
  %v0_804ffe8 = load i32, i32* @global_var_80566fc.34, align 4
  store i32 %v0_804ffe8, i32* %eax.global-to-local, align 4
  store i32 %v0_804ffe8, i32* @global_var_80566ac.35, align 4
  br label %dec_label_pc_804fff2.preheader

dec_label_pc_804fff2.preheader:                   ; preds = %dec_label_pc_804ffb1, %dec_label_pc_804fe3f, %dec_label_pc_804fe4a, %dec_label_pc_804fe53, %dec_label_pc_804fe5c, %dec_label_pc_804fe65, %dec_label_pc_804fe6e, %dec_label_pc_804fe77, %dec_label_pc_804fe80, %dec_label_pc_804fe89, %dec_label_pc_804fe92, %dec_label_pc_804fe9b, %dec_label_pc_804fea4, %dec_label_pc_805005c, %dec_label_pc_8050079, %dec_label_pc_804fe36, %dec_label_pc_805008b
  br label %dec_label_pc_804fff2

dec_label_pc_804fff2:                             ; preds = %dec_label_pc_8050045, %dec_label_pc_805002e, %dec_label_pc_8050020, %dec_label_pc_805001b, %dec_label_pc_8050014, %dec_label_pc_8050010, %dec_label_pc_805000c, %dec_label_pc_804fff2, %dec_label_pc_804fff2.preheader
  %v1_804fff2 = call i32 @function_804ed40(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_804fff2, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v1_804fff2, 65536
  %v1_804fff7 = sdiv i32 %sext, 65536
  %v2_804fffd = urem i32 %v1_804fff2, 256
  %v3_804fffd = load i32, i32* @ecx, align 4
  %v4_804fffd = and i32 %v3_804fffd, -256
  %v5_804fffd = or i32 %v4_804fffd, %v2_804fffd
  store i32 %v5_804fffd, i32* @ecx, align 4
  %v2_804ffff = udiv i32 %v1_804fff7, 256
  store i32 %v2_804ffff, i32* @ebx, align 4
  %v2_8050002 = udiv i32 %v1_804fff7, 65536
  store i32 %v2_8050002, i32* @edx, align 4
  %v2_8050005 = udiv i32 %v1_804fff7, 16777216
  store i32 %v2_8050005, i32* @edi, align 4
  %v2_8050008 = trunc i32 %v1_804fff2 to i8
  %v11_8050008 = icmp eq i8 %v2_8050008, 127
  br i1 %v11_8050008, label %dec_label_pc_804fff2, label %dec_label_pc_805000c

dec_label_pc_805000c:                             ; preds = %dec_label_pc_804fff2
  %v6_805000c = icmp eq i8 %v2_8050008, 0
  br i1 %v6_805000c, label %dec_label_pc_804fff2, label %dec_label_pc_8050010

dec_label_pc_8050010:                             ; preds = %dec_label_pc_805000c
  %v11_8050010 = icmp eq i8 %v2_8050008, 3
  br i1 %v11_8050010, label %dec_label_pc_804fff2, label %dec_label_pc_8050014

dec_label_pc_8050014:                             ; preds = %dec_label_pc_8050010
  %v2_8050014 = add nsw i32 %v1_804fff7, -15
  store i32 %v2_8050014, i32* %eax.global-to-local, align 4
  %v1_8050017 = trunc i32 %v2_8050014 to i8
  %tmp286 = or i8 %v1_8050017, 1
  %tmp287 = icmp eq i8 %tmp286, 1
  br i1 %tmp287, label %dec_label_pc_804fff2, label %dec_label_pc_805001b

dec_label_pc_805001b:                             ; preds = %dec_label_pc_8050014
  %v10_805001b = icmp eq i8 %v2_8050008, 56
  br i1 %v10_805001b, label %dec_label_pc_804fff2, label %dec_label_pc_8050020

dec_label_pc_8050020:                             ; preds = %dec_label_pc_805001b
  %v10_8050020 = icmp eq i8 %v2_8050008, 10
  br i1 %v10_8050020, label %dec_label_pc_804fff2, label %dec_label_pc_8050025

dec_label_pc_8050025:                             ; preds = %dec_label_pc_8050020
  %v8_8050025 = icmp eq i8 %v2_8050008, -64
  %v1_8050028 = icmp eq i1 %v8_8050025, false
  br i1 %v1_8050028, label %dec_label_pc_804fe12, label %dec_label_pc_805002e

dec_label_pc_805002e:                             ; preds = %dec_label_pc_8050025
  %v1_805002e = trunc i32 %v2_804ffff to i8
  %v11_805002e = icmp eq i8 %v1_805002e, -88
  br i1 %v11_805002e, label %dec_label_pc_804fff2, label %dec_label_pc_8050033

dec_label_pc_8050033:                             ; preds = %dec_label_pc_805002e
  %v10_8050033 = icmp eq i8 %v2_8050008, 100
  %v1_8050036 = icmp eq i1 %v10_8050033, false
  br i1 %v1_8050036, label %dec_label_pc_804fe24, label %dec_label_pc_805003c

dec_label_pc_805003c:                             ; preds = %dec_label_pc_804fe1b.dec_label_pc_805003c_crit_edge, %dec_label_pc_8050033
  %v1_805003c.pre-phi = phi i8 [ %.pre, %dec_label_pc_804fe1b.dec_label_pc_805003c_crit_edge ], [ %v1_805002e, %dec_label_pc_8050033 ]
  %tmp288 = icmp ult i8 %v1_805003c.pre-phi, 64
  br i1 %tmp288, label %dec_label_pc_804fe3f, label %dec_label_pc_8050045

dec_label_pc_8050045:                             ; preds = %dec_label_pc_805003c
  %tmp289 = icmp ult i8 %v1_805003c.pre-phi, 127
  br i1 %tmp289, label %dec_label_pc_804fff2, label %dec_label_pc_805004a

dec_label_pc_805004a:                             ; preds = %dec_label_pc_8050045
  %v11_805004a = icmp eq i8 %v2_8050008, -58
  %v1_805004d = icmp eq i1 %v11_805004a, false
  br i1 %v1_805004d, label %dec_label_pc_804fe36, label %dec_label_pc_8050053

dec_label_pc_8050053:                             ; preds = %dec_label_pc_805004a, %dec_label_pc_804fe2d
  %v0_805005c = phi i32 [ %v2_804ffff, %dec_label_pc_805004a ], [ %v0_804feb569, %dec_label_pc_804fe2d ]
  %v0_804fe3f65 = phi i32 [ %v5_804fffd, %dec_label_pc_805004a ], [ %v0_804fe2d, %dec_label_pc_804fe2d ]
  %v1_8050053 = trunc i32 %v0_805005c to i8
  %tmp290 = icmp ult i8 %v1_8050053, 18
  br i1 %tmp290, label %dec_label_pc_804fe3f, label %dec_label_pc_805005c

dec_label_pc_805005c:                             ; preds = %dec_label_pc_8050053
  %tmp291 = or i8 %v1_8050053, 1
  %tmp292 = icmp eq i8 %tmp291, 19
  br i1 %tmp292, label %dec_label_pc_804fff2.preheader, label %dec_label_pc_804fe3f

dec_label_pc_8050066:                             ; preds = %dec_label_pc_8050e25
  store i32 0, i32* %v2_8050069, align 4
  %v1_805006b = call i32 @function_8053ac9(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_805006b, i32* %eax.global-to-local, align 4
  %v0_8050070.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8050070

dec_label_pc_8050070:                             ; preds = %dec_label_pc_804fe12, %dec_label_pc_8050066
  %v0_8050079 = phi i32 [ %v0_8050070.pre, %dec_label_pc_8050066 ], [ %v2_804ffff, %dec_label_pc_804fe12 ]
  %v1_8050070 = trunc i32 %v0_8050079 to i8
  %tmp293 = icmp ult i8 %v1_8050070, 16
  br i1 %tmp293, label %dec_label_pc_8050070.dec_label_pc_804fe3f_crit_edge, label %dec_label_pc_8050079

dec_label_pc_8050070.dec_label_pc_804fe3f_crit_edge: ; preds = %dec_label_pc_8050070
  %v0_804fe3f.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804fe3f

dec_label_pc_8050079:                             ; preds = %dec_label_pc_8050070
  %tmp294 = icmp ult i8 %v1_8050070, 32
  br i1 %tmp294, label %dec_label_pc_804fff2.preheader, label %dec_label_pc_8050082

dec_label_pc_8050082:                             ; preds = %dec_label_pc_8050079
  %v0_8050082 = load i32, i32* @ecx, align 4
  %v1_8050082 = trunc i32 %v0_8050082 to i8
  %v11_8050082 = icmp eq i8 %v1_8050082, -87
  %v1_8050085 = icmp eq i1 %v11_8050082, false
  br i1 %v1_8050085, label %dec_label_pc_804fe2d, label %dec_label_pc_805008b

dec_label_pc_805008b:                             ; preds = %dec_label_pc_8050082, %dec_label_pc_804fe24
  %v0_804fe3676 = phi i32 [ %v0_8050082, %dec_label_pc_8050082 ], [ %v5_804fffd, %dec_label_pc_804fe24 ]
  %v0_805008b = phi i32 [ %v0_8050079, %dec_label_pc_8050082 ], [ %v2_804ffff, %dec_label_pc_804fe24 ]
  %v1_805008b = trunc i32 %v0_805008b to i8
  %v11_805008b = icmp eq i8 %v1_805008b, -1
  %v1_805008e = icmp eq i1 %v11_805008b, false
  br i1 %v1_805008e, label %dec_label_pc_804fe36, label %dec_label_pc_804fff2.preheader

dec_label_pc_80500a7:                             ; preds = %dec_label_pc_804fead
  %v0_80500a7 = load i32, i32* @esi, align 4
  %v2_80500a7 = add i32 %v0_804ffa3, 56
  %v3_80500a7 = inttoptr i32 %v2_80500a7 to i32*
  store i32 %v0_80500a7, i32* %v3_80500a7, align 4
  br label %dec_label_pc_80500ab

dec_label_pc_80500ab:                             ; preds = %dec_label_pc_805032f, %dec_label_pc_80500a7
  %v1_80500ab = call i32 @function_80524b9(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_80500ab, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_80500b2 = load i32, i32* @esp, align 4
  %v2_80500b2 = add i32 %v1_80500b2, 40
  %v3_80500b2 = inttoptr i32 %v2_80500b2 to i32*
  store i32 %v1_80500ab, i32* %v3_80500b2, align 4
  br label %dec_label_pc_80500b6

dec_label_pc_80500b6:                             ; preds = %dec_label_pc_8050153, %dec_label_pc_805014b, %dec_label_pc_8050143, %dec_label_pc_805013b, %dec_label_pc_805012f, %dec_label_pc_8050123, %dec_label_pc_805011c, %dec_label_pc_805010a, %dec_label_pc_80500fe, %dec_label_pc_80500f9, %dec_label_pc_80501bc, %dec_label_pc_80500ab
  %v0_80500b6 = load i32, i32* @esp, align 4
  %v1_80500b6 = add i32 %v0_80500b6, 40
  %v2_80500b6 = inttoptr i32 %v1_80500b6 to i32*
  %v3_80500b6 = load i32, i32* %v2_80500b6, align 4
  store i32 %v3_80500b6, i32* %eax.global-to-local, align 4
  %v1_80500ba = inttoptr i32 %v3_80500b6 to i32*
  store i32 0, i32* %v1_80500ba, align 4
  %v0_80500c0 = load i32, i32* @esi, align 4
  %v1_80500c0 = load i32, i32* @esp, align 4
  %v2_80500c0 = add i32 %v1_80500c0, -4
  %v3_80500c0 = inttoptr i32 %v2_80500c0 to i32*
  store i32 %v0_80500c0, i32* %v3_80500c0, align 4
  %v0_80500c1 = load i32, i32* @esi, align 4
  %v2_80500c1 = add i32 %v1_80500c0, -8
  %v3_80500c1 = inttoptr i32 %v2_80500c1 to i32*
  store i32 %v0_80500c1, i32* %v3_80500c1, align 4
  %v1_80500c2 = add i32 %v1_80500c0, -12
  %v2_80500c2 = inttoptr i32 %v1_80500c2 to i32*
  store i32 0, i32* %v2_80500c2, align 4
  %v1_80500c4 = add i32 %v1_80500c0, -16
  %v2_80500c4 = inttoptr i32 %v1_80500c4 to i32*
  store i32 0, i32* %v2_80500c4, align 4
  %v1_80500c6 = add i32 %v1_80500c0, -20
  %v2_80500c6 = inttoptr i32 %v1_80500c6 to i32*
  store i32 16384, i32* %v2_80500c6, align 4
  %v1_80500cb = add i32 %v1_80500c0, -24
  %v2_80500cb = inttoptr i32 %v1_80500cb to i32*
  store i32 1514, i32* %v2_80500cb, align 4
  %v0_80500d0 = load i32, i32* @global_var_805671c.32, align 4
  store i32 %v0_80500d0, i32* %ecx.global-to-local, align 4
  %v1_80500d6 = add i32 %v1_80500c0, 58
  store i32 %v1_80500d6, i32* %edx.global-to-local, align 4
  %v2_80500da = add i32 %v1_80500c0, -28
  %v3_80500da = inttoptr i32 %v2_80500da to i32*
  store i32 %v1_80500d6, i32* %v3_80500da, align 4
  %v0_80500db = load i32, i32* %ecx.global-to-local, align 4
  %v2_80500db = add i32 %v1_80500c0, -32
  %v3_80500db = inttoptr i32 %v2_80500db to i32*
  store i32 %v0_80500db, i32* %v3_80500db, align 4
  %v0_80500dc = call i32 @function_8052681()
  store i32 %v0_80500dc, i32* %eax.global-to-local, align 4
  %v0_80500e1 = load i32, i32* @esp, align 4
  %tmp = icmp slt i32 %v0_80500dc, 1
  br i1 %tmp, label %dec_label_pc_80501d0, label %dec_label_pc_80500ec

dec_label_pc_80500ec:                             ; preds = %dec_label_pc_80500b6
  %v1_80500ec = add i32 %v0_80500e1, 72
  %v2_80500ec = inttoptr i32 %v1_80500ec to i32*
  %v3_80500ec = load i32, i32* %v2_80500ec, align 4
  store i32 %v3_80500ec, i32* %ecx.global-to-local, align 4
  %v1_80500f0 = inttoptr i32 %v3_80500ec to i32*
  %v2_80500f0 = load i32, i32* %v1_80500f0, align 4
  %v11_80500f0 = icmp eq i32 %v2_80500f0, 11
  br i1 %v11_80500f0, label %dec_label_pc_80501d0, label %dec_label_pc_80500f9

dec_label_pc_80500f9:                             ; preds = %dec_label_pc_80500ec
  %tmp295 = icmp ult i32 %v0_80500dc, 40
  br i1 %tmp295, label %dec_label_pc_80500b6, label %dec_label_pc_80500fe

dec_label_pc_80500fe:                             ; preds = %dec_label_pc_80500f9
  %v1_80500fe = add i32 %v0_80500e1, 106
  %v2_80500fe = inttoptr i32 %v1_80500fe to i32*
  %v3_80500fe = load i32, i32* %v2_80500fe, align 4
  store i32 %v3_80500fe, i32* %eax.global-to-local, align 4
  %v1_8050102 = load i32, i32* @global_var_80566fc.34, align 4
  %v12_8050102 = icmp eq i32 %v3_80500fe, %v1_8050102
  %v1_8050108 = icmp eq i1 %v12_8050102, false
  br i1 %v1_8050108, label %dec_label_pc_80500b6, label %dec_label_pc_805010a

dec_label_pc_805010a:                             ; preds = %dec_label_pc_80500fe
  %v1_805010a = add i32 %v0_80500e1, 99
  %v2_805010a = inttoptr i32 %v1_805010a to i8*
  %v3_805010a = load i8, i8* %v2_805010a, align 1
  %v12_805010a = icmp eq i8 %v3_805010a, 6
  %v1_805010f = icmp eq i1 %v12_805010a, false
  br i1 %v1_805010f, label %dec_label_pc_80500b6, label %dec_label_pc_8050111

dec_label_pc_8050111:                             ; preds = %dec_label_pc_805010a
  %v1_8050111 = add i32 %v0_80500e1, 110
  %v2_8050111 = inttoptr i32 %v1_8050111 to i32*
  %v3_8050111 = load i32, i32* %v2_8050111, align 4
  store i32 %v3_8050111, i32* @esi, align 4
  %v1_8050115 = trunc i32 %v3_8050111 to i16
  %v7_8050115 = icmp eq i16 %v1_8050115, 5888
  br i1 %v7_8050115, label %dec_label_pc_8050123, label %dec_label_pc_805011c

dec_label_pc_805011c:                             ; preds = %dec_label_pc_8050111
  %v10_805011c = icmp eq i16 %v1_8050115, 4873
  %v1_8050121 = icmp eq i1 %v10_805011c, false
  br i1 %v1_8050121, label %dec_label_pc_80500b6, label %dec_label_pc_8050123

dec_label_pc_8050123:                             ; preds = %dec_label_pc_805011c, %dec_label_pc_8050111
  %v1_8050123 = add i32 %v0_80500e1, 54
  %v2_8050123 = inttoptr i32 %v1_8050123 to i16*
  %v3_8050123 = load i16, i16* %v2_8050123, align 2
  %v4_8050123 = zext i16 %v3_8050123 to i32
  %v6_8050123 = and i32 %v3_80500fe, -65536
  %v7_8050123 = or i32 %v4_8050123, %v6_8050123
  store i32 %v7_8050123, i32* %eax.global-to-local, align 4
  %v3_8050128 = add i32 %v0_80500e1, 112
  %v4_8050128 = inttoptr i32 %v3_8050128 to i16*
  %v5_8050128 = load i16, i16* %v4_8050128, align 2
  %v16_8050128 = icmp eq i16 %v3_8050123, %v5_8050128
  %v1_805012d = icmp eq i1 %v16_8050128, false
  br i1 %v1_805012d, label %dec_label_pc_80500b6, label %dec_label_pc_805012f

dec_label_pc_805012f:                             ; preds = %dec_label_pc_8050123
  %v1_805012f = add i32 %v0_80500e1, 123
  %v2_805012f = inttoptr i32 %v1_805012f to i8*
  %v3_805012f = load i8, i8* %v2_805012f, align 1
  %v4_805012f = zext i8 %v3_805012f to i32
  %v6_805012f = and i32 %v7_8050123, -256
  %v7_805012f = or i32 %v4_805012f, %v6_805012f
  store i32 %v7_805012f, i32* %eax.global-to-local, align 4
  %v2_8050133 = and i8 %v3_805012f, 2
  %v3_8050133 = icmp eq i8 %v2_8050133, 0
  br i1 %v3_8050133, label %dec_label_pc_80500b6, label %dec_label_pc_805013b

dec_label_pc_805013b:                             ; preds = %dec_label_pc_805012f
  %v2_805013b = and i32 %v4_805012f, 16
  %v3_805013b = icmp eq i32 %v2_805013b, 0
  br i1 %v3_805013b, label %dec_label_pc_80500b6, label %dec_label_pc_8050143

dec_label_pc_8050143:                             ; preds = %dec_label_pc_805013b
  %v2_8050143 = and i32 %v4_805012f, 4
  %v3_8050143 = icmp eq i32 %v2_8050143, 0
  %v1_8050145 = icmp eq i1 %v3_8050143, false
  br i1 %v1_8050145, label %dec_label_pc_80500b6, label %dec_label_pc_805014b

dec_label_pc_805014b:                             ; preds = %dec_label_pc_8050143
  %tmp302 = urem i8 %v3_805012f, 2
  %v3_805014b = icmp eq i8 %tmp302, 0
  %v1_805014d = icmp eq i1 %v3_805014b, false
  br i1 %v1_805014d, label %dec_label_pc_80500b6, label %dec_label_pc_8050153

dec_label_pc_8050153:                             ; preds = %dec_label_pc_805014b
  %v1_8050153 = add i32 %v0_80500e1, 118
  %v2_8050153 = inttoptr i32 %v1_8050153 to i32*
  %v3_8050153 = load i32, i32* %v2_8050153, align 4
  %v1_8050157 = trunc i32 %v3_8050153 to i16
  %v2_8050157 = call i16 @llvm.bswap.i16(i16 %v1_8050157)
  %v3_8050157 = zext i16 %v2_8050157 to i32
  %v1_805015b = udiv i32 %v3_8050153, 65536
  %v2_805015b = mul nuw i32 %v3_8050157, 65536
  %v1_805015e = trunc i32 %v1_805015b to i16
  %v2_805015e = call i16 @llvm.bswap.i16(i16 %v1_805015e)
  %v3_805015e = zext i16 %v2_805015e to i32
  %v6_805015e = or i32 %v3_805015e, %v2_805015b
  store i32 %v6_805015e, i32* %eax.global-to-local, align 4
  %v1_8050162 = add i32 %v6_805015e, -1
  %v1_8050165 = trunc i32 %v1_8050162 to i16
  %v2_8050165 = call i16 @llvm.bswap.i16(i16 %v1_8050165)
  %v3_8050165 = zext i16 %v2_8050165 to i32
  %v1_8050169 = udiv i32 %v1_8050162, 65536
  %v2_8050169 = mul nuw i32 %v3_8050165, 65536
  %v1_805016c = trunc i32 %v1_8050169 to i16
  %v2_805016c = call i16 @llvm.bswap.i16(i16 %v1_805016c)
  %v3_805016c = zext i16 %v2_805016c to i32
  %v6_805016c = or i32 %v3_805016c, %v2_8050169
  store i32 %v6_805016c, i32* %ecx.global-to-local, align 4
  %v1_8050170 = add i32 %v0_80500e1, 102
  %v2_8050170 = inttoptr i32 %v1_8050170 to i32*
  %v3_8050170 = load i32, i32* %v2_8050170, align 4
  %v15_8050170 = icmp eq i32 %v3_8050170, %v6_805016c
  %v1_8050174 = icmp eq i1 %v15_8050170, false
  br i1 %v1_8050174, label %dec_label_pc_80500b6, label %dec_label_pc_805017a

dec_label_pc_805017a:                             ; preds = %dec_label_pc_8050153
  %v0_805017a = load i32, i32* @ebx, align 4
  %v1_805017a = add i32 %v0_805017a, -255
  %v6_805017a = sub i32 254, %v0_805017a
  %v7_805017a = and i32 %v6_805017a, %v0_805017a
  %v8_805017a = icmp slt i32 %v7_805017a, 0
  %v9_805017a = icmp eq i32 %v1_805017a, 0
  %v10_805017a = icmp slt i32 %v1_805017a, 0
  %v3_8050180 = icmp eq i1 %v10_805017a, %v8_805017a
  %v4_8050180 = icmp eq i1 %v9_805017a, false
  %v5_8050180 = and i1 %v4_8050180, %v3_8050180
  br i1 %v5_8050180, label %dec_label_pc_80501d0, label %dec_label_pc_8050182

dec_label_pc_8050182:                             ; preds = %dec_label_pc_805017a
  %v2_805018c = mul i32 %v0_805017a, 544
  %v0_805018f = load i32, i32* @global_var_8056718.36, align 8
  store i32 %v0_805018f, i32* %edx.global-to-local, align 4
  %v2_8050195 = add i32 %v0_805018f, %v2_805018c
  store i32 %v2_8050195, i32* @eax, align 4
  %v1_8050197 = add i32 %v2_8050195, 12
  %v2_8050197 = inttoptr i32 %v1_8050197 to i32*
  %v3_8050197 = load i32, i32* %v2_8050197, align 4
  %v1_805019a = add i32 %v2_8050195, 544
  store i32 %v1_805019a, i32* %edx.global-to-local, align 4
  %v1_80501a0 = icmp eq i32 %v3_8050197, 0
  br i1 %v1_80501a0, label %dec_label_pc_80501bc, label %dec_label_pc_80501a4

dec_label_pc_80501a4:                             ; preds = %dec_label_pc_8050182, %dec_label_pc_80501ad
  %v0_80501ad = phi i32 [ %v1_80501af, %dec_label_pc_80501ad ], [ %v1_805019a, %dec_label_pc_8050182 ]
  %v0_80501a4 = phi i32 [ %v1_80501a4, %dec_label_pc_80501ad ], [ %v0_805017a, %dec_label_pc_8050182 ]
  %v1_80501a4 = add i32 %v0_80501a4, 1
  store i32 %v1_80501a4, i32* @ebx, align 4
  %v6_80501a5 = icmp eq i32 %v0_80501a4, 255
  br i1 %v6_80501a5, label %dec_label_pc_80501d0.loopexit, label %dec_label_pc_80501ad

dec_label_pc_80501ad:                             ; preds = %dec_label_pc_80501a4
  store i32 %v0_80501ad, i32* @eax, align 4
  %v1_80501af = add i32 %v0_80501ad, 544
  store i32 %v1_80501af, i32* %edx.global-to-local, align 4
  %v1_80501b5 = add i32 %v0_80501ad, 12
  %v2_80501b5 = inttoptr i32 %v1_80501b5 to i32*
  %v3_80501b5 = load i32, i32* %v2_80501b5, align 4
  store i32 %v3_80501b5, i32* @edi, align 4
  %v1_80501b8 = icmp eq i32 %v3_80501b5, 0
  %v1_80501ba = icmp eq i1 %v1_80501b8, false
  br i1 %v1_80501ba, label %dec_label_pc_80501a4, label %dec_label_pc_80501bc.loopexit

dec_label_pc_80501bc.loopexit:                    ; preds = %dec_label_pc_80501ad
  br label %dec_label_pc_80501bc

dec_label_pc_80501bc:                             ; preds = %dec_label_pc_80501bc.loopexit, %dec_label_pc_8050182
  %v1_80501bc = phi i32 [ %v0_80501ad, %dec_label_pc_80501bc.loopexit ], [ %v2_8050195, %dec_label_pc_8050182 ]
  %v2_80501bc = add i32 %v1_80501bc, 16
  %v3_80501bc = inttoptr i32 %v2_80501bc to i32*
  store i32 %v6_805016c, i32* %v3_80501bc, align 4
  %v0_80501bf = load i32, i32* @esi, align 4
  %v1_80501bf = trunc i32 %v0_80501bf to i16
  %v2_80501bf = load i32, i32* @eax, align 4
  %v3_80501bf = add i32 %v2_80501bf, 20
  %v4_80501bf = inttoptr i32 %v3_80501bf to i16*
  store i16 %v1_80501bf, i16* %v4_80501bf, align 2
  %v0_80501c3 = call i32 @function_804f4d0()
  store i32 %v0_80501c3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80500b6

dec_label_pc_80501d0.loopexit:                    ; preds = %dec_label_pc_80501a4
  br label %dec_label_pc_80501d0

dec_label_pc_80501d0:                             ; preds = %dec_label_pc_805017a, %dec_label_pc_80500ec, %dec_label_pc_80500b6, %dec_label_pc_80501d0.loopexit
  store i32 32, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 32, i32* %ecx.global-to-local, align 4
  %v1_80501d9 = add i32 %v0_80500e1, 44
  %v2_80501d9 = inttoptr i32 %v1_80501d9 to i32*
  %v3_80501d9 = load i32, i32* %v2_80501d9, align 4
  %v4_80501d9 = inttoptr i32 %v3_80501d9 to i8*
  %v5_80501de = call i8* @_memset(i8* %v4_80501d9, i32 0, i32 32)
  %v0_80501e0 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_80501e0, i32* %ecx.global-to-local, align 4
  %v0_80501e2 = load i32, i32* @esp, align 4
  %v1_80501e2 = add i32 %v0_80501e2, 8
  %v2_80501e2 = inttoptr i32 %v1_80501e2 to i32*
  %v3_80501e2 = load i32, i32* %v2_80501e2, align 4
  %v4_80501e2 = inttoptr i32 %v3_80501e2 to i8*
  store i1 false, i1* @df, align 1
  %v5_80501e7 = call i8* @_memset(i8* %v4_80501e2, i32 0, i32 %v0_80501e0)
  %v6_80501e7 = ptrtoint i8* %v5_80501e7 to i32
  store i32 %v6_80501e7, i32* %ecx.global-to-local, align 4
  store i32 0, i32* @edi, align 4
  %v0_80501eb = load i32, i32* @esp, align 4
  %v1_80501eb = add i32 %v0_80501eb, 1868
  %v2_80501eb = inttoptr i32 %v1_80501eb to i32*
  store i32 0, i32* %v2_80501eb, align 4
  store i32 0, i32* @esi, align 4
  %v10_80501f8 = load i32, i32* %edx.global-to-local, align 4
  %v11_80501f8 = and i32 %v10_80501f8, -256
  store i32 %v11_80501f8, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80501fa

dec_label_pc_80501fa:                             ; preds = %dec_label_pc_8050252, %dec_label_pc_80501d0
  %v0_8050204 = phi i32 [ %v0_8050261, %dec_label_pc_8050252 ], [ %v11_80501f8, %dec_label_pc_80501d0 ]
  store i32 30, i32* %ecx.global-to-local, align 4
  %v2_8050204 = mul i32 %v0_8050204, 512
  store i32 %v2_8050204, i32* %edx.global-to-local, align 4
  %v2_8050207 = mul i32 %v0_8050204, 544
  %v0_805020a = load i32, i32* @global_var_8056718.36, align 8
  store i32 %v0_805020a, i32* %eax.global-to-local, align 4
  %v2_805020f = add i32 %v0_805020a, %v2_8050207
  store i32 %v2_805020f, i32* @ebx, align 4
  %v1_8050211 = add i32 %v2_805020f, 12
  %v2_8050211 = inttoptr i32 %v1_8050211 to i32*
  %v3_8050211 = load i32, i32* %v2_8050211, align 4
  store i32 %v3_8050211, i32* %edx.global-to-local, align 4
  %v1_8050214 = add i32 %v3_8050211, -1
  %v5_8050214 = icmp eq i32 %v3_8050211, 0
  %v9_8050214 = icmp eq i32 %v1_8050214, 0
  %v2_8050217 = or i1 %v5_8050214, %v9_8050214
  br i1 %v2_8050217, label %dec_label_pc_8050dc2, label %dec_label_pc_805021d

dec_label_pc_805021d:                             ; preds = %dec_label_pc_80501fa, %dec_label_pc_8050dca
  %v1_8050227 = phi i32 [ 30, %dec_label_pc_80501fa ], [ 5, %dec_label_pc_8050dca ]
  %v0_805021d = load i32, i32* @global_var_80566d0.24, align 16
  store i32 %v0_805021d, i32* %eax.global-to-local, align 4
  %v1_8050222 = add i32 %v2_805020f, 8
  %v2_8050222 = inttoptr i32 %v1_8050222 to i32*
  %v3_8050222 = load i32, i32* %v2_8050222, align 4
  %v2_8050225 = sub i32 %v0_805021d, %v3_8050222
  store i32 %v2_8050225, i32* %eax.global-to-local, align 4
  %tmp296 = icmp ugt i32 %v2_8050225, %v1_8050227
  br i1 %tmp296, label %dec_label_pc_8050d60, label %dec_label_pc_805022f

dec_label_pc_805022f:                             ; preds = %dec_label_pc_805021d
  store i32 %v1_8050214, i32* %edx.global-to-local, align 4
  %v1_8050d38 = add i32 %v2_805020f, 4
  %v2_8050d38 = inttoptr i32 %v1_8050d38 to i32*
  %v3_8050d38 = load i32, i32* %v2_8050d38, align 4
  %v1_8050d3d = urem i32 %v3_8050d38, 32
  store i32 %v1_8050d3d, i32* %eax.global-to-local, align 4
  %v2_8050d40 = udiv i32 %v3_8050d38, 32
  store i32 %v2_8050d40, i32* %edx.global-to-local, align 4
  %v0_8050d43 = load i32, i32* @esp, align 4
  %v2_8050d43 = mul nuw nsw i32 %v2_8050d40, 4
  br i1 %v9_8050214, label %dec_label_pc_8050d38, label %dec_label_pc_8050236

dec_label_pc_8050236:                             ; preds = %dec_label_pc_805022f
  %v3_8050241 = add nuw nsw i32 %v2_8050d43, 1700
  %v4_8050241 = add i32 %v3_8050241, %v0_8050d43
  %v5_8050241 = inttoptr i32 %v4_8050241 to i32*
  %v6_8050241 = load i32, i32* %v5_8050241, align 4
  %v9_8050241 = shl i32 1, %v1_8050d3d
  %v12_8050241 = or i32 %v6_8050241, %v9_8050241
  store i32 %v12_8050241, i32* %v5_8050241, align 4
  %v0_8050249 = load i32, i32* @ebx, align 4
  %v1_8050249 = add i32 %v0_8050249, 4
  %v2_8050249 = inttoptr i32 %v1_8050249 to i32*
  %v3_8050249 = load i32, i32* %v2_8050249, align 4
  store i32 %v3_8050249, i32* %eax.global-to-local, align 4
  %v0_805024c = load i32, i32* @edi, align 4
  %v2_805024c = sub i32 %v0_805024c, %v3_8050249
  %v8_805024c = xor i32 %v0_805024c, %v3_8050249
  %v9_805024c = xor i32 %v2_805024c, %v0_805024c
  %v10_805024c = and i32 %v9_805024c, %v8_805024c
  %v11_805024c = icmp slt i32 %v10_805024c, 0
  %v13_805024c = icmp slt i32 %v2_805024c, 0
  %v2_805024e = icmp eq i1 %v13_805024c, %v11_805024c
  br i1 %v2_805024e, label %dec_label_pc_8050252, label %dec_label_pc_8050250

dec_label_pc_8050250:                             ; preds = %dec_label_pc_8050236
  store i32 %v3_8050249, i32* @edi, align 4
  br label %dec_label_pc_8050252

dec_label_pc_8050252:                             ; preds = %dec_label_pc_8050dc2, %dec_label_pc_8050d38, %dec_label_pc_8050236, %dec_label_pc_8050daf, %dec_label_pc_8050d8d, %dec_label_pc_8050d56, %dec_label_pc_8050250
  %v0_8050252 = load i32, i32* @esp, align 4
  %v1_8050252 = add i32 %v0_8050252, 1868
  %v2_8050252 = inttoptr i32 %v1_8050252 to i32*
  %v3_8050252 = load i32, i32* %v2_8050252, align 4
  %v1_8050259 = add i32 %v3_8050252, 1
  store i32 %v1_8050259, i32* %edx.global-to-local, align 4
  store i32 %v1_8050259, i32* %v2_8050252, align 4
  %v0_8050261 = load i32, i32* %edx.global-to-local, align 4
  %v1_8050261 = add i32 %v0_8050261, -255
  %v6_8050261 = sub i32 254, %v0_8050261
  %v7_8050261 = and i32 %v6_8050261, %v0_8050261
  %v8_8050261 = icmp slt i32 %v7_8050261, 0
  %v9_8050261 = icmp eq i32 %v1_8050261, 0
  %v10_8050261 = icmp slt i32 %v1_8050261, 0
  %v3_8050267 = icmp ne i1 %v10_8050261, %v8_8050261
  %v4_8050267 = or i1 %v9_8050261, %v3_8050267
  br i1 %v4_8050267, label %dec_label_pc_80501fa, label %dec_label_pc_8050269

dec_label_pc_8050269:                             ; preds = %dec_label_pc_8050252
  %v0_8050269 = load i32, i32* @esp, align 4
  %v1_8050269 = add i32 %v0_8050269, 1860
  %v2_8050269 = inttoptr i32 %v1_8050269 to i32*
  store i32 0, i32* %v2_8050269, align 4
  %v0_8050274 = load i32, i32* @esp, align 4
  %v1_8050274 = add i32 %v0_8050274, 1856
  %v2_8050274 = inttoptr i32 %v1_8050274 to i32*
  store i32 1, i32* %v2_8050274, align 4
  %v0_805027f = load i32, i32* @esp, align 4
  %v0_8050282 = load i32, i32* @edi, align 4
  %v1_8050282 = load i32, i32* @esi, align 4
  %v2_8050282 = sub i32 %v0_8050282, %v1_8050282
  %v8_8050282 = xor i32 %v1_8050282, %v0_8050282
  %v9_8050282 = xor i32 %v2_8050282, %v0_8050282
  %v10_8050282 = and i32 %v9_8050282, %v8_8050282
  %v11_8050282 = icmp slt i32 %v10_8050282, 0
  %v13_8050282 = icmp slt i32 %v2_8050282, 0
  %v1_8050284 = add i32 %v0_805027f, 1856
  %v2_805028b = add i32 %v0_805027f, -16
  %v3_805028b = inttoptr i32 %v2_805028b to i32*
  store i32 %v1_8050284, i32* %v3_805028b, align 4
  %v1_805028c = add i32 %v0_805027f, -20
  %v2_805028c = inttoptr i32 %v1_805028c to i32*
  store i32 0, i32* %v2_805028c, align 4
  %v1_805028e = add i32 %v0_805027f, 1572
  store i32 %v1_805028e, i32* %edx.global-to-local, align 4
  %v0_8050295 = load i32, i32* @edi, align 4
  store i32 %v0_8050295, i32* %eax.global-to-local, align 4
  %v2_8050297 = add i32 %v0_805027f, -24
  %v3_8050297 = inttoptr i32 %v2_8050297 to i32*
  store i32 %v1_805028e, i32* %v3_8050297, align 4
  %v1_8050298 = add i32 %v0_805027f, 1700
  store i32 %v1_8050298, i32* %ecx.global-to-local, align 4
  %v2_805029f = add i32 %v0_805027f, -28
  %v3_805029f = inttoptr i32 %v2_805029f to i32*
  store i32 %v1_8050298, i32* %v3_805029f, align 4
  %v2_80502a0 = icmp eq i1 %v13_8050282, %v11_8050282
  br i1 %v2_80502a0, label %dec_label_pc_8050269.dec_label_pc_80502a4_crit_edge, label %dec_label_pc_80502a2

dec_label_pc_8050269.dec_label_pc_80502a4_crit_edge: ; preds = %dec_label_pc_8050269
  %v0_80502a4.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80502a4

dec_label_pc_80502a2:                             ; preds = %dec_label_pc_8050269
  %v0_80502a2 = load i32, i32* @esi, align 4
  store i32 %v0_80502a2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80502a4

dec_label_pc_80502a4:                             ; preds = %dec_label_pc_8050269.dec_label_pc_80502a4_crit_edge, %dec_label_pc_80502a2
  %v0_80502a4 = phi i32 [ %v0_80502a4.pre, %dec_label_pc_8050269.dec_label_pc_80502a4_crit_edge ], [ %v0_80502a2, %dec_label_pc_80502a2 ]
  %v1_80502a4 = add i32 %v0_80502a4, 1
  store i32 %v1_80502a4, i32* %eax.global-to-local, align 4
  %v2_80502a5 = add i32 %v0_805027f, -32
  %v3_80502a5 = inttoptr i32 %v2_80502a5 to i32*
  store i32 %v1_80502a4, i32* %v3_80502a5, align 4
  %v0_80502a6 = call i32 @function_8052188()
  store i32 %v0_80502a6, i32* %eax.global-to-local, align 4
  %v0_80502ab = load i32, i32* @esp, align 4
  %v1_80502ae = add i32 %v0_80502ab, 16
  %v2_80502ae = inttoptr i32 %v1_80502ae to i32*
  store i32 0, i32* %v2_80502ae, align 4
  %v0_80502b0 = call i32 @function_8052242()
  store i32 %v0_80502b0, i32* %eax.global-to-local, align 4
  %v0_80502b5 = load i32, i32* @esp, align 4
  %v1_80502b5 = add i32 %v0_80502b5, 1884
  %v2_80502b5 = inttoptr i32 %v1_80502b5 to i32*
  store i32 0, i32* %v2_80502b5, align 4
  store i32 %v0_80502b0, i32* @global_var_80566d0.24, align 16
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80502ca

dec_label_pc_80502ca:                             ; preds = %dec_label_pc_8050318, %dec_label_pc_80502a4
  %v0_80502cf = phi i32 [ %v0_8050327, %dec_label_pc_8050318 ], [ 0, %dec_label_pc_80502a4 ]
  %v2_80502cf = mul i32 %v0_80502cf, 512
  store i32 %v2_80502cf, i32* %edx.global-to-local, align 4
  %v2_80502d2 = mul i32 %v0_80502cf, 544
  %v0_80502d5 = load i32, i32* @global_var_8056718.36, align 8
  store i32 %v0_80502d5, i32* %eax.global-to-local, align 4
  %v2_80502da = add i32 %v0_80502d5, %v2_80502d2
  store i32 %v2_80502da, i32* @edi, align 4
  %v1_80502dc = add i32 %v2_80502da, 4
  %v2_80502dc = inttoptr i32 %v1_80502dc to i32*
  %v3_80502dc = load i32, i32* %v2_80502dc, align 4
  store i32 %v3_80502dc, i32* %ecx.global-to-local, align 4
  %v10_80502df = icmp eq i32 %v3_80502dc, -1
  br i1 %v10_80502df, label %dec_label_pc_8050318, label %dec_label_pc_80502e4

dec_label_pc_80502e4:                             ; preds = %dec_label_pc_80502ca
  %v2_80502e8 = udiv i32 %v3_80502dc, 32
  store i32 %v2_80502e8, i32* %edx.global-to-local, align 4
  %v1_80502eb = urem i32 %v3_80502dc, 32
  store i32 %v1_80502eb, i32* %eax.global-to-local, align 4
  %v0_80502ee = load i32, i32* @esp, align 4
  %v2_80502ee = mul nuw nsw i32 %v2_80502e8, 4
  %v3_80502ee = add nuw nsw i32 %v2_80502ee, 1572
  %v4_80502ee = add i32 %v3_80502ee, %v0_80502ee
  %v5_80502ee = inttoptr i32 %v4_80502ee to i32*
  %v6_80502ee = load i32, i32* %v5_80502ee, align 4
  %v9_80502ee = shl i32 1, %v1_80502eb
  %v10_80502ee = and i32 %v6_80502ee, %v9_80502ee
  %v11_80502ee = icmp ne i32 %v10_80502ee, 0
  %v1_80502f6 = zext i1 %v11_80502ee to i32
  store i32 %v1_80502f6, i32* %eax.global-to-local, align 4
  %v4_80502f9 = icmp eq i1 %v11_80502ee, false
  %v1_80502fb = icmp eq i1 %v4_80502f9, false
  br i1 %v1_80502fb, label %dec_label_pc_8050c6e, label %dec_label_pc_8050301

dec_label_pc_8050301:                             ; preds = %dec_label_pc_80502e4, %dec_label_pc_8050cfe
  %v0_8050309 = phi i32 [ %v0_80502ee, %dec_label_pc_80502e4 ], [ %v0_8050309.pre, %dec_label_pc_8050cfe ]
  %v0_8050301 = phi i32 [ %v3_80502dc, %dec_label_pc_80502e4 ], [ %v0_8050301.pre, %dec_label_pc_8050cfe ]
  %v2_8050303 = udiv i32 %v0_8050301, 32
  store i32 %v2_8050303, i32* %ecx.global-to-local, align 4
  %v1_8050306 = urem i32 %v0_8050301, 32
  store i32 %v1_8050306, i32* %eax.global-to-local, align 4
  %v2_8050309 = mul nuw nsw i32 %v2_8050303, 4
  %v3_8050309 = add i32 %v0_8050309, 1700
  %v4_8050309 = add i32 %v3_8050309, %v2_8050309
  %v5_8050309 = inttoptr i32 %v4_8050309 to i32*
  %v6_8050309 = load i32, i32* %v5_8050309, align 4
  %v9_8050309 = shl i32 1, %v1_8050306
  %v10_8050309 = and i32 %v6_8050309, %v9_8050309
  %v11_8050309 = icmp ne i32 %v10_8050309, 0
  %v1_8050311 = zext i1 %v11_8050309 to i32
  store i32 %v1_8050311, i32* %eax.global-to-local, align 4
  %v4_8050314 = icmp eq i1 %v11_8050309, false
  %v1_8050316 = icmp eq i1 %v4_8050314, false
  br i1 %v1_8050316, label %dec_label_pc_8050370.preheader, label %dec_label_pc_8050318

dec_label_pc_8050370.preheader:                   ; preds = %dec_label_pc_8050301
  %v0_805037027 = load i32, i32* @edi, align 4
  %v1_805037028 = add i32 %v0_805037027, 12
  %v2_805037029 = inttoptr i32 %v1_805037028 to i32*
  %v3_805037030 = load i32, i32* %v2_805037029, align 4
  store i32 %v3_805037030, i32* %eax.global-to-local, align 4
  %v1_805037331 = icmp eq i32 %v3_805037030, 0
  br i1 %v1_805037331, label %dec_label_pc_8050318, label %dec_label_pc_8050377

dec_label_pc_8050318:                             ; preds = %dec_label_pc_8050370.backedge, %dec_label_pc_8050370.preheader, %dec_label_pc_80508db, %dec_label_pc_8050301, %dec_label_pc_80502ca, %dec_label_pc_8050de7, %dec_label_pc_8050d0f, %dec_label_pc_8050913
  %v0_8050318 = load i32, i32* @esp, align 4
  %v1_8050318 = add i32 %v0_8050318, 1868
  %v2_8050318 = inttoptr i32 %v1_8050318 to i32*
  %v3_8050318 = load i32, i32* %v2_8050318, align 4
  %v1_805031f = add i32 %v3_8050318, 1
  store i32 %v1_805031f, i32* %edx.global-to-local, align 4
  store i32 %v1_805031f, i32* %v2_8050318, align 4
  %v0_8050327 = load i32, i32* %edx.global-to-local, align 4
  %v1_8050327 = add i32 %v0_8050327, -255
  %v6_8050327 = sub i32 254, %v0_8050327
  %v7_8050327 = and i32 %v6_8050327, %v0_8050327
  %v8_8050327 = icmp slt i32 %v7_8050327, 0
  %v9_8050327 = icmp eq i32 %v1_8050327, 0
  %v10_8050327 = icmp slt i32 %v1_8050327, 0
  %v3_805032d = icmp ne i1 %v10_8050327, %v8_8050327
  %v4_805032d = or i1 %v9_8050327, %v3_805032d
  br i1 %v4_805032d, label %dec_label_pc_80502ca, label %dec_label_pc_805032f

dec_label_pc_8050334:                             ; preds = %dec_label_pc_80503e2
  %v1_8050334 = add i32 %v0_80503e2, 24
  %v2_8050334 = inttoptr i32 %v1_8050334 to i32*
  %v3_8050334 = load i32, i32* %v2_8050334, align 4
  %v1_8050337 = add i32 %v3_8050334, -1
  store i32 %v1_8050337, i32* %eax.global-to-local, align 4
  %tmp136 = icmp slt i32 %v1_8050337, 1
  br i1 %tmp136, label %dec_label_pc_8050370.loopexit12.loopexit, label %dec_label_pc_805033c.preheader

dec_label_pc_805033c.preheader:                   ; preds = %dec_label_pc_8050334
  %v7_805033c.pre = load i32, i32* @edx, align 4
  %v2_805033c = add i32 %v0_80503e2, 28
  br label %dec_label_pc_805033c

dec_label_pc_805033c:                             ; preds = %dec_label_pc_805033c.preheader, %dec_label_pc_805036d
  %v7_805033c = phi i32 [ %v7_805033c.pre, %dec_label_pc_805033c.preheader ], [ %v9_805033c, %dec_label_pc_805036d ]
  %v0_8050b6b = phi i32 [ %v1_8050337, %dec_label_pc_805033c.preheader ], [ %v1_805036d, %dec_label_pc_805036d ]
  %v3_805033c = add i32 %v2_805033c, %v0_8050b6b
  %v4_805033c = inttoptr i32 %v3_805033c to i8*
  %v5_805033c = load i8, i8* %v4_805033c, align 1
  %v6_805033c = zext i8 %v5_805033c to i32
  %v8_805033c = and i32 %v7_805033c, -256
  %v9_805033c = or i32 %v6_805033c, %v8_805033c
  store i32 %v9_805033c, i32* %edx.global-to-local, align 4
  %v10_8050340 = icmp eq i8 %v5_805033c, 58
  br i1 %v10_8050340, label %dec_label_pc_8050b6b, label %dec_label_pc_8050349

dec_label_pc_8050349:                             ; preds = %dec_label_pc_805033c
  %v10_8050349 = icmp eq i8 %v5_805033c, 62
  br i1 %v10_8050349, label %dec_label_pc_8050b6b, label %dec_label_pc_8050352

dec_label_pc_8050352:                             ; preds = %dec_label_pc_8050349
  %v10_8050352 = icmp eq i8 %v5_805033c, 36
  br i1 %v10_8050352, label %dec_label_pc_8050b6b, label %dec_label_pc_805035b

dec_label_pc_805035b:                             ; preds = %dec_label_pc_8050352
  %v10_805035b = icmp eq i8 %v5_805033c, 35
  br i1 %v10_805035b, label %dec_label_pc_8050b6b, label %dec_label_pc_8050364

dec_label_pc_8050364:                             ; preds = %dec_label_pc_805035b
  %v10_8050364 = icmp eq i8 %v5_805033c, 37
  br i1 %v10_8050364, label %dec_label_pc_8050b6b, label %dec_label_pc_805036d

dec_label_pc_805036d:                             ; preds = %dec_label_pc_8050364
  %v1_805036d = add i32 %v0_8050b6b, -1
  %v8_805036d = icmp eq i32 %v1_805036d, 0
  store i32 %v1_805036d, i32* %eax.global-to-local, align 4
  %v1_805036e = icmp eq i1 %v8_805036d, false
  br i1 %v1_805036e, label %dec_label_pc_805033c, label %dec_label_pc_8050370.backedge

dec_label_pc_8050370.backedge:                    ; preds = %dec_label_pc_8050813.thread, %dec_label_pc_8050370.loopexit12.loopexit, %dec_label_pc_8050800, %dec_label_pc_80505ad, %dec_label_pc_8050735, %dec_label_pc_80505f2, %dec_label_pc_805036d
  %v0_8050370 = phi i32 [ %v0_80503e2, %dec_label_pc_805036d ], [ %v0_80503e2, %dec_label_pc_80505f2 ], [ %v0_80503e2, %dec_label_pc_8050735 ], [ %v0_80503e2, %dec_label_pc_80505ad ], [ %v0_80503e2, %dec_label_pc_8050800 ], [ %v0_8050370.pre.pre, %dec_label_pc_8050370.loopexit12.loopexit ], [ %v0_80503e2, %dec_label_pc_8050813.thread ]
  %v1_8050370 = add i32 %v0_8050370, 12
  %v2_8050370 = inttoptr i32 %v1_8050370 to i32*
  %v3_8050370 = load i32, i32* %v2_8050370, align 4
  store i32 %v3_8050370, i32* %eax.global-to-local, align 4
  %v1_8050373 = icmp eq i32 %v3_8050370, 0
  br i1 %v1_8050373, label %dec_label_pc_8050318, label %dec_label_pc_8050370.backedge.dec_label_pc_8050377_crit_edge

dec_label_pc_8050370.backedge.dec_label_pc_8050377_crit_edge: ; preds = %dec_label_pc_8050370.backedge
  %v1_805037a.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050377

dec_label_pc_8050370.loopexit12.loopexit:         ; preds = %dec_label_pc_8050813, %dec_label_pc_8050545, %dec_label_pc_80504e3, %dec_label_pc_80503e2, %dec_label_pc_8050a79, %dec_label_pc_80507c3, %dec_label_pc_805074a, %dec_label_pc_805070c, %dec_label_pc_8050a00, %dec_label_pc_80505b5, %dec_label_pc_8050af2, %dec_label_pc_8050570, %dec_label_pc_8050b6b, %dec_label_pc_8050334, %dec_label_pc_805063d
  %v0_8050370.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8050370.backedge

dec_label_pc_8050377:                             ; preds = %dec_label_pc_8050370.preheader, %dec_label_pc_8050370.backedge.dec_label_pc_8050377_crit_edge
  %v1_805037a = phi i32 [ %v1_805037a.pre, %dec_label_pc_8050370.backedge.dec_label_pc_8050377_crit_edge ], [ %v0_8050309, %dec_label_pc_8050370.preheader ]
  %v0_8050377 = phi i32 [ %v0_8050370, %dec_label_pc_8050370.backedge.dec_label_pc_8050377_crit_edge ], [ %v0_805037027, %dec_label_pc_8050370.preheader ]
  %v1_8050377 = add i32 %v0_8050377, 28
  store i32 %v1_8050377, i32* %eax.global-to-local, align 4
  %v2_805037a = add i32 %v1_805037a, 16
  %v3_805037a = inttoptr i32 %v2_805037a to i32*
  store i32 %v1_8050377, i32* %v3_805037a, align 4
  %v0_805037e = load i32, i32* @edi, align 4
  %v1_805037e = add i32 %v0_805037e, 24
  %v2_805037e = inttoptr i32 %v1_805037e to i32*
  %v3_805037e = load i32, i32* %v2_805037e, align 4
  %v9_805037e = icmp eq i32 %v3_805037e, 512
  br i1 %v9_805037e, label %dec_label_pc_8050937, label %dec_label_pc_805038b

dec_label_pc_805038b:                             ; preds = %dec_label_pc_8050377, %dec_label_pc_8050937
  %v0_805038b = load i32, i32* @esp, align 4
  %v1_805038b = add i32 %v0_805038b, 40
  %v2_805038b = inttoptr i32 %v1_805038b to i32*
  %v3_805038b = load i32, i32* %v2_805038b, align 4
  store i32 %v3_805038b, i32* %ecx.global-to-local, align 4
  %v1_805038f = add i32 %v0_805038b, 16
  %v2_805038f = inttoptr i32 %v1_805038f to i32*
  %v3_805038f = load i32, i32* %v2_805038f, align 4
  store i32 %v3_805038f, i32* %ebx.global-to-local, align 4
  store i32 512, i32* %eax.global-to-local, align 4
  %v1_8050398 = inttoptr i32 %v3_805038b to i32*
  store i32 0, i32* %v1_8050398, align 4
  %v0_805039e = load i32, i32* @edi, align 4
  %v1_805039e = add i32 %v0_805039e, 24
  %v2_805039e = inttoptr i32 %v1_805039e to i32*
  %v3_805039e = load i32, i32* %v2_805039e, align 4
  store i32 %v3_805039e, i32* %edx.global-to-local, align 4
  %v0_80503a1 = load i32, i32* @esp, align 4
  %v1_80503a1 = add i32 %v0_80503a1, -4
  %v2_80503a1 = inttoptr i32 %v1_80503a1 to i32*
  store i32 16384, i32* %v2_80503a1, align 4
  %v0_80503a6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80503a6 = load i32, i32* %edx.global-to-local, align 4
  %v2_80503a6 = add i32 %v1_80503a6, %v0_80503a6
  store i32 %v2_80503a6, i32* @ebx, align 4
  %v0_80503a8 = load i32, i32* %eax.global-to-local, align 4
  %v2_80503a8 = sub i32 %v0_80503a8, %v1_80503a6
  store i32 %v2_80503a8, i32* %eax.global-to-local, align 4
  %v2_80503aa = add i32 %v0_80503a1, -8
  %v3_80503aa = inttoptr i32 %v2_80503aa to i32*
  store i32 %v2_80503a8, i32* %v3_80503aa, align 4
  %v0_80503ab = load i32, i32* @ebx, align 4
  %v2_80503ab = add i32 %v0_80503a1, -12
  %v3_80503ab = inttoptr i32 %v2_80503ab to i32*
  store i32 %v0_80503ab, i32* %v3_80503ab, align 4
  %v0_80503ac = load i32, i32* @edi, align 4
  %v1_80503ac = add i32 %v0_80503ac, 4
  %v2_80503ac = inttoptr i32 %v1_80503ac to i32*
  %v3_80503ac = load i32, i32* %v2_80503ac, align 4
  %v2_80503af = add i32 %v0_80503a1, -16
  %v3_80503af = inttoptr i32 %v2_80503af to i32*
  store i32 %v3_80503ac, i32* %v3_80503af, align 4
  %v0_80503b0 = call i32 @function_805264e()
  store i32 %v0_80503b0, i32* %eax.global-to-local, align 4
  %v0_80503b5 = load i32, i32* @esp, align 4
  %v1_80503b5 = add i32 %v0_80503b5, 16
  %tmp137 = icmp slt i32 %v0_80503b0, 1
  br i1 %tmp137, label %dec_label_pc_80508cc, label %dec_label_pc_80503c1

dec_label_pc_80503c1:                             ; preds = %dec_label_pc_805038b
  store i32 0, i32* @edx, align 4
  br label %dec_label_pc_80503c3

dec_label_pc_80503c3:                             ; preds = %dec_label_pc_80503cd, %dec_label_pc_80503c1
  %v0_80503c9 = phi i32 [ %v1_80503cd, %dec_label_pc_80503cd ], [ 0, %dec_label_pc_80503c1 ]
  %v1_80503c3 = load i32, i32* @ebx, align 4
  %v2_80503c3 = add i32 %v1_80503c3, %v0_80503c9
  %v3_80503c3 = inttoptr i32 %v2_80503c3 to i8*
  %v4_80503c3 = load i8, i8* %v3_80503c3, align 1
  %v5_80503c3 = icmp eq i8 %v4_80503c3, 0
  %v1_80503c7 = icmp eq i1 %v5_80503c3, false
  br i1 %v1_80503c7, label %dec_label_pc_80503cd, label %dec_label_pc_80503c9

dec_label_pc_80503c9:                             ; preds = %dec_label_pc_80503c3
  store i8 65, i8* %v3_80503c3, align 1
  %v0_80503cd.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80503cd

dec_label_pc_80503cd:                             ; preds = %dec_label_pc_80503c3, %dec_label_pc_80503c9
  %v0_80503cd = phi i32 [ %v0_80503c9, %dec_label_pc_80503c3 ], [ %v0_80503cd.pre, %dec_label_pc_80503c9 ]
  %v1_80503cd = add i32 %v0_80503cd, 1
  store i32 %v1_80503cd, i32* @edx, align 4
  %v12_80503ce = icmp eq i32 %v0_80503b0, %v1_80503cd
  %v1_80503d0 = icmp eq i1 %v12_80503ce, false
  br i1 %v1_80503d0, label %dec_label_pc_80503c3, label %dec_label_pc_80503d2

dec_label_pc_80503d2:                             ; preds = %dec_label_pc_80503cd, %dec_label_pc_80508d2
  %v0_80503d2 = load i32, i32* @edi, align 4
  %v1_80503d2 = add i32 %v0_80503d2, 24
  %v2_80503d2 = inttoptr i32 %v1_80503d2 to i32*
  %v3_80503d2 = load i32, i32* %v2_80503d2, align 4
  %v2_80503d5 = add i32 %v3_80503d2, %v0_80503b0
  store i32 %v2_80503d5, i32* @ebx, align 4
  %v0_80503d7 = load i32, i32* @global_var_80566d0.24, align 16
  store i32 %v0_80503d7, i32* %eax.global-to-local, align 4
  store i32 %v2_80503d5, i32* %v2_80503d2, align 4
  %v0_80503df = load i32, i32* %eax.global-to-local, align 4
  %v1_80503df = load i32, i32* @edi, align 4
  %v2_80503df = add i32 %v1_80503df, 8
  %v3_80503df = inttoptr i32 %v2_80503df to i32*
  store i32 %v0_80503df, i32* %v3_80503df, align 4
  br label %dec_label_pc_80503e2

dec_label_pc_80503e2:                             ; preds = %dec_label_pc_80506ec, %dec_label_pc_80503d2
  %v0_80503e2 = load i32, i32* @edi, align 4
  %v1_80503e2 = add i32 %v0_80503e2, 12
  %v2_80503e2 = inttoptr i32 %v1_80503e2 to i32*
  %v3_80503e2 = load i32, i32* %v2_80503e2, align 4
  store i32 %v3_80503e2, i32* %eax.global-to-local, align 4
  switch i32 %v3_80503e2, label %dec_label_pc_8050370.loopexit12.loopexit [
    i32 2, label %dec_label_pc_80503f2
    i32 3, label %dec_label_pc_8050485
    i32 4, label %dec_label_pc_8050510
    i32 5, label %dec_label_pc_8050334
    i32 6, label %dec_label_pc_80505b5
    i32 7, label %dec_label_pc_805070c
    i32 8, label %dec_label_pc_8050570
    i32 9, label %dec_label_pc_80507c3
    i32 10, label %dec_label_pc_8050600
  ]

dec_label_pc_80503f2:                             ; preds = %dec_label_pc_80503e2
  %v0_80503f2 = load i32, i32* @esp, align 4
  %v1_80503f2 = add i32 %v0_80503f2, 16
  %v2_80503f2 = inttoptr i32 %v1_80503f2 to i32*
  %v3_80503f2 = load i32, i32* %v2_80503f2, align 4
  store i32 %v3_80503f2, i32* @ebx, align 4
  store i32 0, i32* @ebp, align 4
  %v1_80503f8 = add i32 %v0_80503e2, 24
  %v2_80503f8 = inttoptr i32 %v1_80503f8 to i32*
  %v3_80503f8 = load i32, i32* %v2_80503f8, align 4
  store i32 %v3_80503f8, i32* %edx.global-to-local, align 4
  %v2_80503fb18 = sub i32 0, %v3_80503f8
  %v10_80503fb22 = and i32 %v3_80503f8, %v2_80503fb18
  %v11_80503fb23 = icmp slt i32 %v10_80503fb22, 0
  %v13_80503fb25 = icmp slt i32 %v2_80503fb18, 0
  %v2_80503fd26 = icmp eq i1 %v13_80503fb25, %v11_80503fb23
  br i1 %v2_80503fd26, label %dec_label_pc_8050813.thread, label %dec_label_pc_80503ff.preheader

dec_label_pc_8050813.thread:                      ; preds = %dec_label_pc_80503f2
  br label %dec_label_pc_8050370.backedge

dec_label_pc_80503ff.preheader:                   ; preds = %dec_label_pc_80503f2, %dec_label_pc_80503fb.backedge
  %v0_8050479126 = phi i32 [ %v0_8050479128, %dec_label_pc_80503fb.backedge ], [ %v0_80503e2, %dec_label_pc_80503f2 ]
  %v0_805080b119 = phi i32 [ %v0_80503fb, %dec_label_pc_80503fb.backedge ], [ 0, %dec_label_pc_80503f2 ]
  %v5_8050411108 = phi i32 [ %v5_8050411109, %dec_label_pc_80503fb.backedge ], [ 2, %dec_label_pc_80503f2 ]
  %v1_805040b106 = phi i32 [ %v1_80503fb, %dec_label_pc_80503fb.backedge ], [ %v3_80503f8, %dec_label_pc_80503f2 ]
  %v0_8050404103 = phi i32 [ %v0_8050404104, %dec_label_pc_80503fb.backedge ], [ %v0_80503f2, %dec_label_pc_80503f2 ]
  br label %dec_label_pc_80503ff

dec_label_pc_80503ff:                             ; preds = %dec_label_pc_80503ff.preheader, %dec_label_pc_8050450
  %v0_8050479129 = phi i32 [ %v0_8050479126, %dec_label_pc_80503ff.preheader ], [ %v0_8050467, %dec_label_pc_8050450 ]
  %v0_805080b = phi i32 [ %v0_805080b119, %dec_label_pc_80503ff.preheader ], [ %v0_805046d, %dec_label_pc_8050450 ]
  %v5_8050411 = phi i32 [ %v5_8050411108, %dec_label_pc_80503ff.preheader ], [ %v0_8050462, %dec_label_pc_8050450 ]
  %v1_805040b = phi i32 [ %v1_805040b106, %dec_label_pc_80503ff.preheader ], [ %v3_8050467, %dec_label_pc_8050450 ]
  %v0_8050820 = phi i32 [ %v0_8050404103, %dec_label_pc_80503ff.preheader ], [ %v1_805046a, %dec_label_pc_8050450 ]
  %v0_80503ff = load i32, i32* @ebx, align 4
  %v1_80503ff = inttoptr i32 %v0_80503ff to i8*
  %v2_80503ff = load i8, i8* %v1_80503ff, align 1
  %v12_80503ff = icmp eq i8 %v2_80503ff, -1
  %v1_8050402 = icmp eq i1 %v12_80503ff, false
  br i1 %v1_8050402, label %dec_label_pc_8050471, label %dec_label_pc_8050404

dec_label_pc_8050404:                             ; preds = %dec_label_pc_80503ff
  %v1_8050404 = add i32 %v0_8050820, 16
  %v2_8050404 = inttoptr i32 %v1_8050404 to i32*
  %v3_8050404 = load i32, i32* %v2_8050404, align 4
  %v1_8050408 = add i32 %v0_80503ff, 1
  store i32 %v1_8050408, i32* @esi, align 4
  %v2_805040b = add i32 %v3_8050404, %v1_805040b
  store i32 %v2_805040b, i32* %ecx.global-to-local, align 4
  %tmp297 = icmp ugt i32 %v2_805040b, %v1_8050408
  br i1 %tmp297, label %dec_label_pc_8050411, label %dec_label_pc_8050471

dec_label_pc_8050411:                             ; preds = %dec_label_pc_8050404
  %v2_8050411 = inttoptr i32 %v1_8050408 to i8*
  %v3_8050411 = load i8, i8* %v2_8050411, align 1
  %v4_8050411 = zext i8 %v3_8050411 to i32
  %v6_8050411 = and i32 %v5_8050411, -256
  %v7_8050411 = or i32 %v4_8050411, %v6_8050411
  store i32 %v7_8050411, i32* %eax.global-to-local, align 4
  %v11_8050414 = icmp eq i8 %v3_8050411, -1
  br i1 %v11_8050414, label %dec_label_pc_8050808, label %dec_label_pc_805041c

dec_label_pc_805041c:                             ; preds = %dec_label_pc_8050411
  %v11_805041c = icmp eq i8 %v3_8050411, -3
  br i1 %v11_805041c, label %dec_label_pc_8050820, label %dec_label_pc_8050424

dec_label_pc_8050424:                             ; preds = %dec_label_pc_805041c
  %v1_8050424 = add i32 %v0_80503ff, 2
  store i32 %v1_8050424, i32* %eax.global-to-local, align 4
  %tmp298 = icmp ugt i32 %v2_805040b, %v1_8050424
  br i1 %tmp298, label %dec_label_pc_805042b, label %dec_label_pc_8050471

dec_label_pc_805042b:                             ; preds = %dec_label_pc_8050424, %dec_label_pc_8050df3, %dec_label_pc_8050dfb
  %v4_805042b = phi i32 [ %v6_805089e, %dec_label_pc_8050df3 ], [ %v1_8050424, %dec_label_pc_8050424 ], [ %v4_805042b.pre, %dec_label_pc_8050dfb ]
  %v0_805042b = load i32, i32* @esi, align 4
  %v1_805042b = inttoptr i32 %v0_805042b to i8*
  %v2_805042b = load i8, i8* %v1_805042b, align 1
  %v3_805042b = zext i8 %v2_805042b to i32
  %v5_805042b = and i32 %v4_805042b, -256
  %v6_805042b = or i32 %v3_805042b, %v5_805042b
  store i32 %v6_805042b, i32* %eax.global-to-local, align 4
  %v11_805042d = icmp eq i8 %v2_805042b, -3
  br i1 %v11_805042d, label %dec_label_pc_80508b5, label %dec_label_pc_8050435

dec_label_pc_8050435:                             ; preds = %dec_label_pc_80508a8, %dec_label_pc_805042b
  %v0_8050926 = phi i32 [ %v0_80508ab, %dec_label_pc_80508a8 ], [ %v0_805042b, %dec_label_pc_805042b ]
  %v0_8050435 = phi i32 [ %v6_80508ab, %dec_label_pc_80508a8 ], [ %v6_805042b, %dec_label_pc_805042b ]
  %v1_8050435 = trunc i32 %v0_8050435 to i8
  %v11_8050435 = icmp eq i8 %v1_8050435, -5
  br i1 %v11_8050435, label %dec_label_pc_8050926, label %dec_label_pc_805043d

dec_label_pc_805043d:                             ; preds = %dec_label_pc_8050435, %dec_label_pc_8050926
  %v5_805043d = phi i32 [ %v0_8050435, %dec_label_pc_8050435 ], [ %v5_805043d.pre, %dec_label_pc_8050926 ]
  %v0_805043d = load i32, i32* @ebx, align 4
  %v1_805043d = add i32 %v0_805043d, 2
  %v2_805043d = inttoptr i32 %v1_805043d to i8*
  %v3_805043d = load i8, i8* %v2_805043d, align 1
  %v4_805043d = zext i8 %v3_805043d to i32
  %v6_805043d = and i32 %v5_805043d, -256
  %v7_805043d = or i32 %v4_805043d, %v6_805043d
  store i32 %v7_805043d, i32* %eax.global-to-local, align 4
  %v11_8050440 = icmp eq i8 %v3_805043d, -3
  br i1 %v11_8050440, label %dec_label_pc_80508c3, label %dec_label_pc_8050448

dec_label_pc_8050448:                             ; preds = %dec_label_pc_80508b5, %dec_label_pc_805043d
  %v0_805092e = phi i32 [ %v0_80508b8, %dec_label_pc_80508b5 ], [ %v0_805043d, %dec_label_pc_805043d ]
  %v0_8050448 = phi i32 [ %v7_80508b8, %dec_label_pc_80508b5 ], [ %v7_805043d, %dec_label_pc_805043d ]
  %v1_8050448 = trunc i32 %v0_8050448 to i8
  %v11_8050448 = icmp eq i8 %v1_8050448, -5
  br i1 %v11_8050448, label %dec_label_pc_805092e, label %dec_label_pc_8050450

dec_label_pc_8050450:                             ; preds = %dec_label_pc_8050448, %dec_label_pc_805092e, %dec_label_pc_80508c3
  %v0_8050450 = load i32, i32* @esp, align 4
  %v1_8050450 = add i32 %v0_8050450, -4
  %v2_8050450 = inttoptr i32 %v1_8050450 to i32*
  store i32 16384, i32* %v2_8050450, align 4
  %v1_8050455 = add i32 %v0_8050450, -8
  %v2_8050455 = inttoptr i32 %v1_8050455 to i32*
  store i32 3, i32* %v2_8050455, align 4
  %v0_8050457 = load i32, i32* @ebx, align 4
  %v2_8050457 = add i32 %v0_8050450, -12
  %v3_8050457 = inttoptr i32 %v2_8050457 to i32*
  store i32 %v0_8050457, i32* %v3_8050457, align 4
  %v0_8050458 = load i32, i32* @ebp, align 4
  %v1_8050458 = add i32 %v0_8050458, 3
  store i32 %v1_8050458, i32* @ebp, align 4
  %v0_805045b = load i32, i32* @edi, align 4
  %v1_805045b = add i32 %v0_805045b, 4
  %v2_805045b = inttoptr i32 %v1_805045b to i32*
  %v3_805045b = load i32, i32* %v2_805045b, align 4
  store i32 %v3_805045b, i32* %edx.global-to-local, align 4
  %v0_805045e = load i32, i32* @ebx, align 4
  %v1_805045e = add i32 %v0_805045e, 3
  store i32 %v1_805045e, i32* @ebx, align 4
  %v2_8050461 = add i32 %v0_8050450, -16
  %v3_8050461 = inttoptr i32 %v2_8050461 to i32*
  store i32 %v3_805045b, i32* %v3_8050461, align 4
  %v0_8050462 = call i32 @function_80526c4()
  store i32 %v0_8050462, i32* %eax.global-to-local, align 4
  %v0_8050467 = load i32, i32* @edi, align 4
  %v1_8050467 = add i32 %v0_8050467, 24
  %v2_8050467 = inttoptr i32 %v1_8050467 to i32*
  %v3_8050467 = load i32, i32* %v2_8050467, align 4
  store i32 %v3_8050467, i32* %edx.global-to-local, align 4
  %v0_805046a = load i32, i32* @esp, align 4
  %v1_805046a = add i32 %v0_805046a, 16
  %v0_805046d = load i32, i32* @ebp, align 4
  %v2_805046d = sub i32 %v0_805046d, %v3_8050467
  %v8_805046d = xor i32 %v0_805046d, %v3_8050467
  %v9_805046d = xor i32 %v2_805046d, %v0_805046d
  %v10_805046d = and i32 %v9_805046d, %v8_805046d
  %v11_805046d = icmp slt i32 %v10_805046d, 0
  %v13_805046d = icmp slt i32 %v2_805046d, 0
  %v2_805046f = icmp eq i1 %v13_805046d, %v11_805046d
  br i1 %v2_805046f, label %dec_label_pc_8050471, label %dec_label_pc_80503ff

dec_label_pc_8050471:                             ; preds = %dec_label_pc_80503fb.backedge, %dec_label_pc_8050424, %dec_label_pc_8050404, %dec_label_pc_8050450, %dec_label_pc_80503ff, %dec_label_pc_8050820.dec_label_pc_8050471.loopexit_crit_edge
  %v0_8050479 = phi i32 [ %v0_8050884, %dec_label_pc_8050820.dec_label_pc_8050471.loopexit_crit_edge ], [ %v0_8050467, %dec_label_pc_8050450 ], [ %v0_8050479129, %dec_label_pc_8050424 ], [ %v0_8050479129, %dec_label_pc_8050404 ], [ %v0_8050479129, %dec_label_pc_80503ff ], [ %v0_8050479128, %dec_label_pc_80503fb.backedge ]
  %v0_8050471 = phi i32 [ %v0_8050471.pre.pre, %dec_label_pc_8050820.dec_label_pc_8050471.loopexit_crit_edge ], [ %v0_805046d, %dec_label_pc_8050450 ], [ %v0_805080b, %dec_label_pc_8050424 ], [ %v0_805080b, %dec_label_pc_8050404 ], [ %v0_805080b, %dec_label_pc_80503ff ], [ %v0_80503fb, %dec_label_pc_80503fb.backedge ]
  %tmp138 = icmp slt i32 %v0_8050471, 1
  br i1 %tmp138, label %dec_label_pc_8050813, label %dec_label_pc_8050479

dec_label_pc_8050479:                             ; preds = %dec_label_pc_8050471
  %v1_8050479 = add i32 %v0_8050479, 12
  %v2_8050479 = inttoptr i32 %v1_8050479 to i32*
  store i32 3, i32* %v2_8050479, align 4
  br label %dec_label_pc_80506e1

dec_label_pc_8050485:                             ; preds = %dec_label_pc_80503e2
  %v1_8050485 = add i32 %v0_80503e2, 24
  %v2_8050485 = inttoptr i32 %v1_8050485 to i32*
  %v3_8050485 = load i32, i32* %v2_8050485, align 4
  store i32 %v3_8050485, i32* %ecx.global-to-local, align 4
  %v1_8050488 = add i32 %v3_8050485, -1
  store i32 %v1_8050488, i32* %eax.global-to-local, align 4
  %tmp139 = icmp slt i32 %v1_8050488, 1
  br i1 %tmp139, label %dec_label_pc_80504c3, label %dec_label_pc_805048f.preheader

dec_label_pc_805048f.preheader:                   ; preds = %dec_label_pc_8050485
  %v7_805048f.pre = load i32, i32* @edx, align 4
  %v2_805048f = add i32 %v0_80503e2, 28
  br label %dec_label_pc_805048f

dec_label_pc_805048f:                             ; preds = %dec_label_pc_805048f.preheader, %dec_label_pc_80504c0
  %v7_805048f = phi i32 [ %v7_805048f.pre, %dec_label_pc_805048f.preheader ], [ %v9_805048f, %dec_label_pc_80504c0 ]
  %v0_805095d = phi i32 [ %v1_8050488, %dec_label_pc_805048f.preheader ], [ %v1_80504c0, %dec_label_pc_80504c0 ]
  %v3_805048f = add i32 %v2_805048f, %v0_805095d
  %v4_805048f = inttoptr i32 %v3_805048f to i8*
  %v5_805048f = load i8, i8* %v4_805048f, align 1
  %v6_805048f = zext i8 %v5_805048f to i32
  %v8_805048f = and i32 %v7_805048f, -256
  %v9_805048f = or i32 %v6_805048f, %v8_805048f
  store i32 %v9_805048f, i32* %edx.global-to-local, align 4
  %v10_8050493 = icmp eq i8 %v5_805048f, 58
  br i1 %v10_8050493, label %dec_label_pc_805095d, label %dec_label_pc_805049c

dec_label_pc_805049c:                             ; preds = %dec_label_pc_805048f
  %v10_805049c = icmp eq i8 %v5_805048f, 62
  br i1 %v10_805049c, label %dec_label_pc_805095d, label %dec_label_pc_80504a5

dec_label_pc_80504a5:                             ; preds = %dec_label_pc_805049c
  %v10_80504a5 = icmp eq i8 %v5_805048f, 36
  br i1 %v10_80504a5, label %dec_label_pc_805095d, label %dec_label_pc_80504ae

dec_label_pc_80504ae:                             ; preds = %dec_label_pc_80504a5
  %v10_80504ae = icmp eq i8 %v5_805048f, 35
  br i1 %v10_80504ae, label %dec_label_pc_805095d, label %dec_label_pc_80504b7

dec_label_pc_80504b7:                             ; preds = %dec_label_pc_80504ae
  %v10_80504b7 = icmp eq i8 %v5_805048f, 37
  br i1 %v10_80504b7, label %dec_label_pc_805095d, label %dec_label_pc_80504c0

dec_label_pc_80504c0:                             ; preds = %dec_label_pc_80504b7
  %v1_80504c0 = add i32 %v0_805095d, -1
  %v8_80504c0 = icmp eq i32 %v1_80504c0, 0
  store i32 %v1_80504c0, i32* %eax.global-to-local, align 4
  %v1_80504c1 = icmp eq i1 %v8_80504c0, false
  br i1 %v1_80504c1, label %dec_label_pc_805048f, label %dec_label_pc_80504c3

dec_label_pc_80504c3:                             ; preds = %dec_label_pc_80504c0, %dec_label_pc_805095d, %dec_label_pc_8050485
  %v0_80504c3 = load i32, i32* @esp, align 4
  %v1_80504c3 = add i32 %v0_80504c3, -4
  %v2_80504c3 = inttoptr i32 %v1_80504c3 to i32*
  store i32 4, i32* %v2_80504c3, align 4
  %v1_80504c5 = add i32 %v0_80504c3, -8
  %v2_80504c5 = inttoptr i32 %v1_80504c5 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8054a95.37 to i32), i32* %v2_80504c5, align 4
  %v0_80504ca = load i32, i32* %ecx.global-to-local, align 4
  %v2_80504ca = add i32 %v0_80504c3, -12
  %v3_80504ca = inttoptr i32 %v2_80504ca to i32*
  store i32 %v0_80504ca, i32* %v3_80504ca, align 4
  %v1_80504cb = add i32 %v0_80504c3, 16
  %v2_80504cb = inttoptr i32 %v1_80504cb to i32*
  %v3_80504cb = load i32, i32* %v2_80504cb, align 4
  store i32 %v3_80504cb, i32* %eax.global-to-local, align 4
  %v2_80504cf = add i32 %v0_80504c3, -16
  %v3_80504cf = inttoptr i32 %v2_80504cf to i32*
  store i32 %v3_80504cb, i32* %v3_80504cf, align 4
  %v0_80504d0 = call i32 @function_8051a90()
  store i32 %v0_80504d0, i32* %eax.global-to-local, align 4
  %v0_80504d5 = load i32, i32* @esp, align 4
  store i32 %v0_80504d0, i32* @ebp, align 4
  %v10_80504da = icmp eq i32 %v0_80504d0, -1
  %v1_80504dd = icmp eq i1 %v10_80504da, false
  br i1 %v1_80504dd, label %dec_label_pc_8050969, label %dec_label_pc_80504e3

dec_label_pc_80504e3:                             ; preds = %dec_label_pc_80504c3
  %v1_80504e3 = add i32 %v0_80504d5, 12
  %v2_80504e3 = inttoptr i32 %v1_80504e3 to i32*
  store i32 5, i32* %v2_80504e3, align 4
  %v1_80504e5 = add i32 %v0_80504d5, 8
  %v2_80504e5 = inttoptr i32 %v1_80504e5 to i32*
  store i32 ptrtoint ([6 x i8]* @global_var_8054a9a.38 to i32), i32* %v2_80504e5, align 4
  %v0_80504ea = load i32, i32* @edi, align 4
  %v1_80504ea = add i32 %v0_80504ea, 24
  %v2_80504ea = inttoptr i32 %v1_80504ea to i32*
  %v3_80504ea = load i32, i32* %v2_80504ea, align 4
  store i32 %v3_80504ea, i32* %eax.global-to-local, align 4
  %v2_80504ed = add i32 %v0_80504d5, 4
  %v3_80504ed = inttoptr i32 %v2_80504ed to i32*
  store i32 %v3_80504ea, i32* %v3_80504ed, align 4
  %v1_80504ee = add i32 %v0_80504d5, 32
  %v2_80504ee = inttoptr i32 %v1_80504ee to i32*
  %v3_80504ee = load i32, i32* %v2_80504ee, align 4
  store i32 %v3_80504ee, i32* %eax.global-to-local, align 4
  %v3_80504f2 = inttoptr i32 %v0_80504d5 to i32*
  store i32 %v3_80504ee, i32* %v3_80504f2, align 4
  %v0_80504f3 = call i32 @function_8051a90()
  store i32 %v0_80504f3, i32* %eax.global-to-local, align 4
  store i32 %v0_80504f3, i32* @ebp, align 4
  %v10_80504fd = icmp eq i32 %v0_80504f3, -1
  %v1_8050500 = icmp eq i1 %v10_80504fd, false
  br i1 %v1_8050500, label %dec_label_pc_8050969, label %dec_label_pc_8050370.loopexit12.loopexit

dec_label_pc_8050510:                             ; preds = %dec_label_pc_80503e2
  %v1_8050510 = add i32 %v0_80503e2, 24
  %v2_8050510 = inttoptr i32 %v1_8050510 to i32*
  %v3_8050510 = load i32, i32* %v2_8050510, align 4
  store i32 %v3_8050510, i32* %ecx.global-to-local, align 4
  %v1_8050513 = add i32 %v3_8050510, -1
  store i32 %v1_8050513, i32* %eax.global-to-local, align 4
  %tmp140 = icmp slt i32 %v1_8050513, 1
  br i1 %tmp140, label %dec_label_pc_8050545, label %dec_label_pc_805051a.preheader

dec_label_pc_805051a.preheader:                   ; preds = %dec_label_pc_8050510
  %v7_805051a.pre = load i32, i32* @edx, align 4
  %v2_805051a = add i32 %v0_80503e2, 28
  br label %dec_label_pc_805051a

dec_label_pc_805051a:                             ; preds = %dec_label_pc_805051a.preheader, %dec_label_pc_8050542
  %v7_805051a = phi i32 [ %v7_805051a.pre, %dec_label_pc_805051a.preheader ], [ %v9_805051a, %dec_label_pc_8050542 ]
  %v0_80509ae = phi i32 [ %v1_8050513, %dec_label_pc_805051a.preheader ], [ %v1_8050542, %dec_label_pc_8050542 ]
  %v3_805051a = add i32 %v2_805051a, %v0_80509ae
  %v4_805051a = inttoptr i32 %v3_805051a to i8*
  %v5_805051a = load i8, i8* %v4_805051a, align 1
  %v6_805051a = zext i8 %v5_805051a to i32
  %v8_805051a = and i32 %v7_805051a, -256
  %v9_805051a = or i32 %v6_805051a, %v8_805051a
  store i32 %v9_805051a, i32* %edx.global-to-local, align 4
  %v10_805051e = icmp eq i8 %v5_805051a, 58
  br i1 %v10_805051e, label %dec_label_pc_80509ae, label %dec_label_pc_8050527

dec_label_pc_8050527:                             ; preds = %dec_label_pc_805051a
  %v10_8050527 = icmp eq i8 %v5_805051a, 62
  br i1 %v10_8050527, label %dec_label_pc_80509ae, label %dec_label_pc_8050530

dec_label_pc_8050530:                             ; preds = %dec_label_pc_8050527
  %v10_8050530 = icmp eq i8 %v5_805051a, 36
  br i1 %v10_8050530, label %dec_label_pc_80509ae, label %dec_label_pc_8050539

dec_label_pc_8050539:                             ; preds = %dec_label_pc_8050530
  %v10_8050539 = icmp eq i8 %v5_805051a, 35
  br i1 %v10_8050539, label %dec_label_pc_80509ae, label %dec_label_pc_8050542

dec_label_pc_8050542:                             ; preds = %dec_label_pc_8050539
  %v1_8050542 = add i32 %v0_80509ae, -1
  %v8_8050542 = icmp eq i32 %v1_8050542, 0
  store i32 %v1_8050542, i32* %eax.global-to-local, align 4
  %v1_8050543 = icmp eq i1 %v8_8050542, false
  br i1 %v1_8050543, label %dec_label_pc_805051a, label %dec_label_pc_8050545

dec_label_pc_8050545:                             ; preds = %dec_label_pc_8050542, %dec_label_pc_80509ae, %dec_label_pc_8050510
  %v0_8050545 = load i32, i32* @esp, align 4
  %v1_8050545 = add i32 %v0_8050545, -4
  %v2_8050545 = inttoptr i32 %v1_8050545 to i32*
  store i32 7, i32* %v2_8050545, align 4
  %v1_8050547 = add i32 %v0_8050545, -8
  %v2_8050547 = inttoptr i32 %v1_8050547 to i32*
  store i32 ptrtoint ([8 x i8]* @global_var_8054aa0.39 to i32), i32* %v2_8050547, align 4
  %v0_805054c = load i32, i32* %ecx.global-to-local, align 4
  %v2_805054c = add i32 %v0_8050545, -12
  %v3_805054c = inttoptr i32 %v2_805054c to i32*
  store i32 %v0_805054c, i32* %v3_805054c, align 4
  %v1_805054d = add i32 %v0_8050545, 16
  %v2_805054d = inttoptr i32 %v1_805054d to i32*
  %v3_805054d = load i32, i32* %v2_805054d, align 4
  %v2_8050551 = add i32 %v0_8050545, -16
  %v3_8050551 = inttoptr i32 %v2_8050551 to i32*
  store i32 %v3_805054d, i32* %v3_8050551, align 4
  %v0_8050552 = call i32 @function_8051a90()
  store i32 %v0_8050552, i32* %eax.global-to-local, align 4
  store i32 %v0_8050552, i32* @ebp, align 4
  %v10_805055c = icmp eq i32 %v0_8050552, -1
  %v1_805055f = icmp eq i1 %v10_805055c, false
  br i1 %v1_805055f, label %dec_label_pc_80509ba, label %dec_label_pc_8050370.loopexit12.loopexit

dec_label_pc_8050570:                             ; preds = %dec_label_pc_80503e2
  %v1_8050570 = add i32 %v0_80503e2, 24
  %v2_8050570 = inttoptr i32 %v1_8050570 to i32*
  %v3_8050570 = load i32, i32* %v2_8050570, align 4
  %v1_8050573 = add i32 %v3_8050570, -1
  store i32 %v1_8050573, i32* %eax.global-to-local, align 4
  %tmp141 = icmp slt i32 %v1_8050573, 1
  br i1 %tmp141, label %dec_label_pc_8050370.loopexit12.loopexit, label %dec_label_pc_805057c.preheader

dec_label_pc_805057c.preheader:                   ; preds = %dec_label_pc_8050570
  %v7_805057c.pre = load i32, i32* @edx, align 4
  %v2_805057c = add i32 %v0_80503e2, 28
  br label %dec_label_pc_805057c

dec_label_pc_805057c:                             ; preds = %dec_label_pc_805057c.preheader, %dec_label_pc_80505ad
  %v7_805057c = phi i32 [ %v7_805057c.pre, %dec_label_pc_805057c.preheader ], [ %v9_805057c, %dec_label_pc_80505ad ]
  %v0_8050af2 = phi i32 [ %v1_8050573, %dec_label_pc_805057c.preheader ], [ %v1_80505ad, %dec_label_pc_80505ad ]
  %v3_805057c = add i32 %v2_805057c, %v0_8050af2
  %v4_805057c = inttoptr i32 %v3_805057c to i8*
  %v5_805057c = load i8, i8* %v4_805057c, align 1
  %v6_805057c = zext i8 %v5_805057c to i32
  %v8_805057c = and i32 %v7_805057c, -256
  %v9_805057c = or i32 %v6_805057c, %v8_805057c
  store i32 %v9_805057c, i32* %edx.global-to-local, align 4
  %v10_8050580 = icmp eq i8 %v5_805057c, 58
  br i1 %v10_8050580, label %dec_label_pc_8050af2, label %dec_label_pc_8050589

dec_label_pc_8050589:                             ; preds = %dec_label_pc_805057c
  %v10_8050589 = icmp eq i8 %v5_805057c, 62
  br i1 %v10_8050589, label %dec_label_pc_8050af2, label %dec_label_pc_8050592

dec_label_pc_8050592:                             ; preds = %dec_label_pc_8050589
  %v10_8050592 = icmp eq i8 %v5_805057c, 36
  br i1 %v10_8050592, label %dec_label_pc_8050af2, label %dec_label_pc_805059b

dec_label_pc_805059b:                             ; preds = %dec_label_pc_8050592
  %v10_805059b = icmp eq i8 %v5_805057c, 35
  br i1 %v10_805059b, label %dec_label_pc_8050af2, label %dec_label_pc_80505a4

dec_label_pc_80505a4:                             ; preds = %dec_label_pc_805059b
  %v10_80505a4 = icmp eq i8 %v5_805057c, 37
  br i1 %v10_80505a4, label %dec_label_pc_8050af2, label %dec_label_pc_80505ad

dec_label_pc_80505ad:                             ; preds = %dec_label_pc_80505a4
  %v1_80505ad = add i32 %v0_8050af2, -1
  %v8_80505ad = icmp eq i32 %v1_80505ad, 0
  store i32 %v1_80505ad, i32* %eax.global-to-local, align 4
  %v1_80505ae = icmp eq i1 %v8_80505ad, false
  br i1 %v1_80505ae, label %dec_label_pc_805057c, label %dec_label_pc_8050370.backedge

dec_label_pc_80505b5:                             ; preds = %dec_label_pc_80503e2
  %v1_80505b5 = add i32 %v0_80503e2, 24
  %v2_80505b5 = inttoptr i32 %v1_80505b5 to i32*
  %v3_80505b5 = load i32, i32* %v2_80505b5, align 4
  %v1_80505b8 = add i32 %v3_80505b5, -1
  store i32 %v1_80505b8, i32* %eax.global-to-local, align 4
  %tmp142 = icmp slt i32 %v1_80505b8, 1
  br i1 %tmp142, label %dec_label_pc_8050370.loopexit12.loopexit, label %dec_label_pc_80505c1.preheader

dec_label_pc_80505c1.preheader:                   ; preds = %dec_label_pc_80505b5
  %v7_80505c1.pre = load i32, i32* @edx, align 4
  %v2_80505c1 = add i32 %v0_80503e2, 28
  br label %dec_label_pc_80505c1

dec_label_pc_80505c1:                             ; preds = %dec_label_pc_80505c1.preheader, %dec_label_pc_80505f2
  %v7_80505c1 = phi i32 [ %v7_80505c1.pre, %dec_label_pc_80505c1.preheader ], [ %v9_80505c1, %dec_label_pc_80505f2 ]
  %v0_8050a00 = phi i32 [ %v1_80505b8, %dec_label_pc_80505c1.preheader ], [ %v1_80505f2, %dec_label_pc_80505f2 ]
  %v3_80505c1 = add i32 %v2_80505c1, %v0_8050a00
  %v4_80505c1 = inttoptr i32 %v3_80505c1 to i8*
  %v5_80505c1 = load i8, i8* %v4_80505c1, align 1
  %v6_80505c1 = zext i8 %v5_80505c1 to i32
  %v8_80505c1 = and i32 %v7_80505c1, -256
  %v9_80505c1 = or i32 %v6_80505c1, %v8_80505c1
  store i32 %v9_80505c1, i32* %edx.global-to-local, align 4
  %v10_80505c5 = icmp eq i8 %v5_80505c1, 58
  br i1 %v10_80505c5, label %dec_label_pc_8050a00, label %dec_label_pc_80505ce

dec_label_pc_80505ce:                             ; preds = %dec_label_pc_80505c1
  %v10_80505ce = icmp eq i8 %v5_80505c1, 62
  br i1 %v10_80505ce, label %dec_label_pc_8050a00, label %dec_label_pc_80505d7

dec_label_pc_80505d7:                             ; preds = %dec_label_pc_80505ce
  %v10_80505d7 = icmp eq i8 %v5_80505c1, 36
  br i1 %v10_80505d7, label %dec_label_pc_8050a00, label %dec_label_pc_80505e0

dec_label_pc_80505e0:                             ; preds = %dec_label_pc_80505d7
  %v10_80505e0 = icmp eq i8 %v5_80505c1, 35
  br i1 %v10_80505e0, label %dec_label_pc_8050a00, label %dec_label_pc_80505e9

dec_label_pc_80505e9:                             ; preds = %dec_label_pc_80505e0
  %v10_80505e9 = icmp eq i8 %v5_80505c1, 37
  br i1 %v10_80505e9, label %dec_label_pc_8050a00, label %dec_label_pc_80505f2

dec_label_pc_80505f2:                             ; preds = %dec_label_pc_80505e9
  %v1_80505f2 = add i32 %v0_8050a00, -1
  %v8_80505f2 = icmp eq i32 %v1_80505f2, 0
  store i32 %v1_80505f2, i32* %eax.global-to-local, align 4
  %v1_80505f3 = icmp eq i1 %v8_80505f2, false
  br i1 %v1_80505f3, label %dec_label_pc_80505c1, label %dec_label_pc_8050370.backedge

dec_label_pc_8050600:                             ; preds = %dec_label_pc_80503e2
  %v0_8050600 = load i32, i32* @esp, align 4
  %v1_8050603 = add i32 %v0_8050600, -16
  %v2_8050603 = inttoptr i32 %v1_8050603 to i32*
  store i32 26, i32* %v2_8050603, align 4
  %v2_8050605 = call i32 @function_8051090(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050605, i32* %eax.global-to-local, align 4
  %v0_805060a = load i32, i32* @esp, align 4
  %v1_805060a = inttoptr i32 %v0_805060a to i32*
  %v2_805060a = load i32, i32* %v1_805060a, align 4
  store i32 %v2_805060a, i32* %eax.global-to-local, align 4
  %v3_805060a = add i32 %v0_805060a, 4
  %v1_805060b = inttoptr i32 %v3_805060a to i32*
  %v2_805060b = load i32, i32* %v1_805060b, align 4
  store i32 %v2_805060b, i32* %edx.global-to-local, align 4
  %v1_805060c = add i32 %v0_805060a, 1880
  store i32 %v1_805060c, i32* %ecx.global-to-local, align 4
  store i32 %v1_805060c, i32* %v1_805060b, align 4
  store i32 26, i32* %v1_805060a, align 4
  %v3_8050616 = call i32 @function_8050fe0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050616, i32* %eax.global-to-local, align 4
  %v0_805061b = load i32, i32* @esp, align 4
  %v1_805061b = add i32 %v0_805061b, 1880
  %v2_805061b = inttoptr i32 %v1_805061b to i32*
  %v3_805061b = load i32, i32* %v2_805061b, align 4
  %v1_8050622 = add i32 %v3_805061b, -1
  store i32 %v1_8050622, i32* %edx.global-to-local, align 4
  %v2_8050623 = add i32 %v0_805061b, -4
  %v3_8050623 = inttoptr i32 %v2_8050623 to i32*
  store i32 %v1_8050622, i32* %v3_8050623, align 4
  %v2_8050624 = add i32 %v0_805061b, -8
  %v3_8050624 = inttoptr i32 %v2_8050624 to i32*
  store i32 %v3_8050616, i32* %v3_8050624, align 4
  %v0_8050625 = load i32, i32* @edi, align 4
  %v1_8050625 = add i32 %v0_8050625, 24
  %v2_8050625 = inttoptr i32 %v1_8050625 to i32*
  %v3_8050625 = load i32, i32* %v2_8050625, align 4
  store i32 %v3_8050625, i32* %eax.global-to-local, align 4
  %v2_8050628 = add i32 %v0_805061b, -12
  %v3_8050628 = inttoptr i32 %v2_8050628 to i32*
  store i32 %v3_8050625, i32* %v3_8050628, align 4
  %v1_8050629 = add i32 %v0_805061b, 32
  %v2_8050629 = inttoptr i32 %v1_8050629 to i32*
  %v3_8050629 = load i32, i32* %v2_8050629, align 4
  store i32 %v3_8050629, i32* %eax.global-to-local, align 4
  %v2_805062d = add i32 %v0_805061b, -16
  %v3_805062d = inttoptr i32 %v2_805062d to i32*
  store i32 %v3_8050629, i32* %v3_805062d, align 4
  %v0_805062e = call i32 @function_8051a90()
  %v0_8050633 = load i32, i32* @esp, align 4
  %v1_8050636 = add i32 %v0_805062e, 1
  %v8_8050636 = icmp eq i32 %v1_8050636, 0
  store i32 %v1_8050636, i32* %eax.global-to-local, align 4
  %v1_8050637 = icmp eq i1 %v8_8050636, false
  %v1_8050be7 = add i32 %v0_8050633, 16
  %v2_8050be7 = inttoptr i32 %v1_8050be7 to i32*
  store i32 26, i32* %v2_8050be7, align 4
  %v2_8050be9 = call i32 @function_8051010(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050be9, i32* %eax.global-to-local, align 4
  %v0_8050bee = load i32, i32* @esp, align 4
  %v1_8050bee = inttoptr i32 %v0_8050bee to i32*
  br i1 %v1_8050637, label %dec_label_pc_8050be4, label %dec_label_pc_805063d

dec_label_pc_805063d:                             ; preds = %dec_label_pc_8050600
  store i32 25, i32* %v1_8050bee, align 4
  %v2_805064e = call i32 @function_8051090(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_805064e, i32* %eax.global-to-local, align 4
  %v0_8050653 = load i32, i32* @esp, align 4
  %v1_8050653 = inttoptr i32 %v0_8050653 to i32*
  %v3_8050653 = add i32 %v0_8050653, 4
  %v1_8050654 = inttoptr i32 %v3_8050653 to i32*
  %v1_8050655 = add i32 %v0_8050653, 1880
  store i32 %v1_8050655, i32* %eax.global-to-local, align 4
  store i32 %v1_8050655, i32* %v1_8050654, align 4
  store i32 25, i32* %v1_8050653, align 4
  %v3_805065f = call i32 @function_8050fe0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_805065f, i32* %eax.global-to-local, align 4
  %v0_8050664 = load i32, i32* @esp, align 4
  %v1_8050664 = add i32 %v0_8050664, 1880
  %v2_8050664 = inttoptr i32 %v1_8050664 to i32*
  %v3_8050664 = load i32, i32* %v2_8050664, align 4
  %v1_805066b = add i32 %v3_8050664, -1
  store i32 %v1_805066b, i32* %edx.global-to-local, align 4
  %v2_805066c = add i32 %v0_8050664, -4
  %v3_805066c = inttoptr i32 %v2_805066c to i32*
  store i32 %v1_805066b, i32* %v3_805066c, align 4
  %v2_805066d = add i32 %v0_8050664, -8
  %v3_805066d = inttoptr i32 %v2_805066d to i32*
  store i32 %v3_805065f, i32* %v3_805066d, align 4
  %v0_805066e = load i32, i32* @edi, align 4
  %v1_805066e = add i32 %v0_805066e, 24
  %v2_805066e = inttoptr i32 %v1_805066e to i32*
  %v3_805066e = load i32, i32* %v2_805066e, align 4
  store i32 %v3_805066e, i32* @esi, align 4
  %v2_8050671 = add i32 %v0_8050664, -12
  %v3_8050671 = inttoptr i32 %v2_8050671 to i32*
  store i32 %v3_805066e, i32* %v3_8050671, align 4
  %v1_8050672 = add i32 %v0_8050664, 32
  %v2_8050672 = inttoptr i32 %v1_8050672 to i32*
  %v3_8050672 = load i32, i32* %v2_8050672, align 4
  store i32 %v3_8050672, i32* @ebx, align 4
  %v2_8050676 = add i32 %v0_8050664, -16
  %v3_8050676 = inttoptr i32 %v2_8050676 to i32*
  store i32 %v3_8050672, i32* %v3_8050676, align 4
  %v0_8050677 = call i32 @function_8051a90()
  store i32 %v0_8050677, i32* %eax.global-to-local, align 4
  %v0_805067c = load i32, i32* @esp, align 4
  store i32 %v0_8050677, i32* @ebp, align 4
  %v1_8050681 = add i32 %v0_805067c, 16
  %v2_8050681 = inttoptr i32 %v1_8050681 to i32*
  store i32 25, i32* %v2_8050681, align 4
  %v2_8050683 = call i32 @function_8051010(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050683, i32* %eax.global-to-local, align 4
  %v0_8050688 = load i32, i32* @esp, align 4
  %v0_805068b = load i32, i32* @ebp, align 4
  %v10_805068b = icmp eq i32 %v0_805068b, -1
  br i1 %v10_805068b, label %dec_label_pc_8050370.loopexit12.loopexit, label %dec_label_pc_8050694

dec_label_pc_8050694:                             ; preds = %dec_label_pc_805063d
  %tmp143 = icmp slt i32 %v0_805068b, 1
  br i1 %tmp143, label %dec_label_pc_8050813, label %dec_label_pc_805069c

dec_label_pc_805069c:                             ; preds = %dec_label_pc_8050694
  %v0_805069c = load i32, i32* @edi, align 4
  %v1_805069c = inttoptr i32 %v0_805069c to i32*
  %v2_805069c = load i32, i32* %v1_805069c, align 4
  store i32 %v2_805069c, i32* %edx.global-to-local, align 4
  %v1_805069e = add i32 %v0_805069c, 16
  %v2_805069e = inttoptr i32 %v1_805069e to i32*
  %v3_805069e = load i32, i32* %v2_805069e, align 4
  store i32 %v3_805069e, i32* %eax.global-to-local, align 4
  %v2_80506a1 = add i32 %v0_8050688, 52
  %v3_80506a1 = inttoptr i32 %v2_80506a1 to i32*
  store i32 %v2_805069c, i32* %v3_80506a1, align 4
  %v0_80506a5 = load i32, i32* @edi, align 4
  %v1_80506a5 = add i32 %v0_80506a5, 20
  %v2_80506a5 = inttoptr i32 %v1_80506a5 to i32*
  %v3_80506a5 = load i32, i32* %v2_80506a5, align 4
  store i32 %v3_80506a5, i32* %edx.global-to-local, align 4
  %v0_80506a8 = load i32, i32* %eax.global-to-local, align 4
  %v1_80506a8 = load i32, i32* @esp, align 4
  %v2_80506a8 = add i32 %v1_80506a8, 1872
  %v3_80506a8 = inttoptr i32 %v2_80506a8 to i32*
  store i32 %v0_80506a8, i32* %v3_80506a8, align 4
  %v0_80506af = load i32, i32* %edx.global-to-local, align 4
  %v1_80506af = trunc i32 %v0_80506af to i16
  %v2_80506af = load i32, i32* @esp, align 4
  %v3_80506af = add i32 %v2_80506af, 1882
  %v4_80506af = inttoptr i32 %v3_80506af to i16*
  store i16 %v1_80506af, i16* %v4_80506af, align 2
  %v0_80506b7 = call i32 @function_8051faf()
  store i32 %v0_80506b7, i32* %eax.global-to-local, align 4
  %tmp144 = icmp slt i32 %v0_80506b7, 1
  br i1 %tmp144, label %dec_label_pc_8050e1e, label %dec_label_pc_80506c4

dec_label_pc_80506c4:                             ; preds = %dec_label_pc_8050e3f, %dec_label_pc_8050e1e, %dec_label_pc_805069c
  %v0_80506c4 = load i32, i32* @esp, align 4
  %v0_80506c7 = load i32, i32* @edi, align 4
  %v1_80506c7 = add i32 %v0_80506c7, 4
  %v2_80506c7 = inttoptr i32 %v1_80506c7 to i32*
  %v3_80506c7 = load i32, i32* %v2_80506c7, align 4
  store i32 %v3_80506c7, i32* @esi, align 4
  %v2_80506ca = add i32 %v0_80506c4, -16
  %v3_80506ca = inttoptr i32 %v2_80506ca to i32*
  store i32 %v3_80506c7, i32* %v3_80506ca, align 4
  %v1_80506cb = call i32 @function_8051f81(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_80506cb, i32* %eax.global-to-local, align 4
  %v0_80506d0 = load i32, i32* @edi, align 4
  %v1_80506d0 = add i32 %v0_80506d0, 4
  %v2_80506d0 = inttoptr i32 %v1_80506d0 to i32*
  store i32 -1, i32* %v2_80506d0, align 4
  %v0_80506d7 = load i32, i32* @edi, align 4
  %v1_80506d7 = add i32 %v0_80506d7, 12
  %v2_80506d7 = inttoptr i32 %v1_80506d7 to i32*
  store i32 0, i32* %v2_80506d7, align 4
  br label %dec_label_pc_80506e1

dec_label_pc_80506e1:                             ; preds = %dec_label_pc_8050813, %dec_label_pc_8050a8d, %dec_label_pc_805075e, %dec_label_pc_8050b06, %dec_label_pc_80509c2, %dec_label_pc_8050971, %dec_label_pc_8050479, %dec_label_pc_8050b7f, %dec_label_pc_8050da0, %dec_label_pc_8050c17, %dec_label_pc_8050a14, %dec_label_pc_80506c4
  %v0_80506e1 = load i32, i32* @edi, align 4
  %v1_80506e1 = add i32 %v0_80506e1, 24
  %v2_80506e1 = inttoptr i32 %v1_80506e1 to i32*
  %v3_80506e1 = load i32, i32* %v2_80506e1, align 4
  store i32 %v3_80506e1, i32* @edx, align 4
  store i32 %v3_80506e1, i32* %eax.global-to-local, align 4
  %v1_80506e6 = load i32, i32* @ebp, align 4
  %v2_80506e6 = sub i32 %v3_80506e1, %v1_80506e6
  %v8_80506e6 = xor i32 %v1_80506e6, %v3_80506e1
  %v9_80506e6 = xor i32 %v2_80506e6, %v3_80506e1
  %v10_80506e6 = and i32 %v9_80506e6, %v8_80506e6
  %v11_80506e6 = icmp slt i32 %v10_80506e6, 0
  %v12_80506e6 = icmp eq i32 %v2_80506e6, 0
  %v13_80506e6 = icmp slt i32 %v2_80506e6, 0
  %v3_80506e8 = icmp ne i1 %v13_80506e6, %v11_80506e6
  %v4_80506e8 = or i1 %v12_80506e6, %v3_80506e8
  br i1 %v4_80506e8, label %dec_label_pc_80506ec, label %dec_label_pc_80506ea

dec_label_pc_80506ea:                             ; preds = %dec_label_pc_80506e1
  store i32 %v1_80506e6, i32* @edx, align 4
  br label %dec_label_pc_80506ec

dec_label_pc_80506ec:                             ; preds = %dec_label_pc_80506e1, %dec_label_pc_80506ea
  %v1_80506ec = phi i32 [ %v3_80506e1, %dec_label_pc_80506e1 ], [ %v1_80506e6, %dec_label_pc_80506ea ]
  %v2_80506ec = sub i32 %v3_80506e1, %v1_80506ec
  store i32 %v2_80506ec, i32* %eax.global-to-local, align 4
  store i32 %v2_80506ec, i32* %v2_80506e1, align 4
  %v0_80506f1 = load i32, i32* @ebx, align 4
  %v1_80506f1 = load i32, i32* @esp, align 4
  %v2_80506f1 = add i32 %v1_80506f1, -4
  %v3_80506f1 = inttoptr i32 %v2_80506f1 to i32*
  store i32 %v0_80506f1, i32* %v3_80506f1, align 4
  %v0_80506f2 = load i32, i32* %eax.global-to-local, align 4
  %v2_80506f2 = add i32 %v1_80506f1, -8
  %v3_80506f2 = inttoptr i32 %v2_80506f2 to i32*
  store i32 %v0_80506f2, i32* %v3_80506f2, align 4
  %v1_80506f3 = add i32 %v1_80506f1, 16
  %v2_80506f3 = inttoptr i32 %v1_80506f3 to i32*
  %v3_80506f3 = load i32, i32* %v2_80506f3, align 4
  %v1_80506f7 = load i32, i32* @edx, align 4
  %v2_80506f7 = add i32 %v1_80506f7, %v3_80506f3
  store i32 %v2_80506f7, i32* %eax.global-to-local, align 4
  %v2_80506f9 = add i32 %v1_80506f1, -12
  %v3_80506f9 = inttoptr i32 %v2_80506f9 to i32*
  store i32 %v2_80506f7, i32* %v3_80506f9, align 4
  %v3_80506fa = load i32, i32* %v2_80506f3, align 4
  store i32 %v3_80506fa, i32* %ecx.global-to-local, align 4
  %v2_80506fe = add i32 %v1_80506f1, -16
  %v3_80506fe = inttoptr i32 %v2_80506fe to i32*
  store i32 %v3_80506fa, i32* %v3_80506fe, align 4
  %v4_80506ff = call i32 @function_80524e3(i8* bitcast (i32* @0 to i8*), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80506ff, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80503e2

dec_label_pc_805070c:                             ; preds = %dec_label_pc_80503e2
  %v1_805070c = add i32 %v0_80503e2, 24
  %v2_805070c = inttoptr i32 %v1_805070c to i32*
  %v3_805070c = load i32, i32* %v2_805070c, align 4
  %v1_805070f = add i32 %v3_805070c, -1
  store i32 %v1_805070f, i32* %eax.global-to-local, align 4
  %tmp145 = icmp slt i32 %v1_805070f, 1
  br i1 %tmp145, label %dec_label_pc_8050370.loopexit12.loopexit, label %dec_label_pc_8050718

dec_label_pc_8050718:                             ; preds = %dec_label_pc_805070c
  %v2_8050718 = add i32 %v0_80503e2, 27
  %v3_8050718 = add i32 %v2_8050718, %v3_805070c
  %v4_8050718 = inttoptr i32 %v3_8050718 to i8*
  %v5_8050718 = load i8, i8* %v4_8050718, align 1
  %v6_8050718 = zext i8 %v5_8050718 to i32
  %v7_8050718 = load i32, i32* @edx, align 4
  %v8_8050718 = and i32 %v7_8050718, -256
  %v9_8050718 = or i32 %v8_8050718, %v6_8050718
  store i32 %v9_8050718, i32* %edx.global-to-local, align 4
  %v10_805071c = icmp eq i8 %v5_8050718, 62
  br i1 %v10_805071c, label %dec_label_pc_805074a.thread, label %dec_label_pc_8050721

dec_label_pc_8050721:                             ; preds = %dec_label_pc_8050718
  %v10_8050721 = icmp eq i8 %v5_8050718, 58
  br i1 %v10_8050721, label %dec_label_pc_805074a.thread, label %dec_label_pc_8050726

dec_label_pc_8050726:                             ; preds = %dec_label_pc_8050721, %dec_label_pc_8050745
  %v0_8050735 = phi i32 [ %v1_8050735, %dec_label_pc_8050745 ], [ %v1_805070f, %dec_label_pc_8050721 ]
  %v7_805073c = phi i32 [ %v9_805073c, %dec_label_pc_8050745 ], [ %v9_8050718, %dec_label_pc_8050721 ]
  %v1_8050726 = trunc i32 %v7_805073c to i8
  %v10_8050726 = icmp eq i8 %v1_8050726, 36
  br i1 %v10_8050726, label %dec_label_pc_805074a, label %dec_label_pc_805072b

dec_label_pc_805072b:                             ; preds = %dec_label_pc_8050726
  %v10_805072b = icmp eq i8 %v1_8050726, 35
  br i1 %v10_805072b, label %dec_label_pc_805074a, label %dec_label_pc_8050730

dec_label_pc_8050730:                             ; preds = %dec_label_pc_805072b
  %v10_8050730 = icmp eq i8 %v1_8050726, 37
  br i1 %v10_8050730, label %dec_label_pc_805074a, label %dec_label_pc_8050735

dec_label_pc_8050735:                             ; preds = %dec_label_pc_8050730
  %v1_8050735 = add i32 %v0_8050735, -1
  %v8_8050735 = icmp eq i32 %v1_8050735, 0
  store i32 %v1_8050735, i32* %eax.global-to-local, align 4
  br i1 %v8_8050735, label %dec_label_pc_8050370.backedge, label %dec_label_pc_805073c

dec_label_pc_805073c:                             ; preds = %dec_label_pc_8050735
  %v3_805073c = add i32 %v2_8050718, %v0_8050735
  %v4_805073c = inttoptr i32 %v3_805073c to i8*
  %v5_805073c = load i8, i8* %v4_805073c, align 1
  %v6_805073c = zext i8 %v5_805073c to i32
  %v8_805073c = and i32 %v7_805073c, -256
  %v9_805073c = or i32 %v6_805073c, %v8_805073c
  store i32 %v9_805073c, i32* %edx.global-to-local, align 4
  %v10_8050740 = icmp eq i8 %v5_805073c, 58
  br i1 %v10_8050740, label %dec_label_pc_805074a, label %dec_label_pc_8050745

dec_label_pc_8050745:                             ; preds = %dec_label_pc_805073c
  %v10_8050745 = icmp eq i8 %v5_805073c, 62
  %v1_8050748 = icmp eq i1 %v10_8050745, false
  br i1 %v1_8050748, label %dec_label_pc_8050726, label %dec_label_pc_805074a

dec_label_pc_805074a.thread:                      ; preds = %dec_label_pc_8050721, %dec_label_pc_8050718
  store i32 %v3_805070c, i32* @ebp, align 4
  br label %dec_label_pc_8050756

dec_label_pc_805074a:                             ; preds = %dec_label_pc_8050745, %dec_label_pc_805073c, %dec_label_pc_8050730, %dec_label_pc_805072b, %dec_label_pc_8050726
  %v0_805074a = phi i32 [ %v0_8050735, %dec_label_pc_8050726 ], [ %v0_8050735, %dec_label_pc_805072b ], [ %v0_8050735, %dec_label_pc_8050730 ], [ %v1_8050735, %dec_label_pc_805073c ], [ %v1_8050735, %dec_label_pc_8050745 ]
  %v1_805074a = add i32 %v0_805074a, 1
  store i32 %v1_805074a, i32* @ebp, align 4
  %v10_805074d = icmp eq i32 %v0_805074a, -2
  br i1 %v10_805074d, label %dec_label_pc_8050370.loopexit12.loopexit, label %dec_label_pc_8050756

dec_label_pc_8050756:                             ; preds = %dec_label_pc_805074a.thread, %dec_label_pc_805074a
  %v1_805074a160 = phi i32 [ %v3_805070c, %dec_label_pc_805074a.thread ], [ %v1_805074a, %dec_label_pc_805074a ]
  %tmp146 = icmp slt i32 %v1_805074a160, 1
  br i1 %tmp146, label %dec_label_pc_8050813, label %dec_label_pc_805075e

dec_label_pc_805075e:                             ; preds = %dec_label_pc_8050756
  %v0_805075e = load i32, i32* @esp, align 4
  %v1_8050761 = add i32 %v0_805075e, -16
  %v2_8050761 = inttoptr i32 %v1_8050761 to i32*
  store i32 20, i32* %v2_8050761, align 4
  %v2_8050763 = call i32 @function_8051090(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050763, i32* %eax.global-to-local, align 4
  %v0_8050768 = load i32, i32* @esp, align 4
  %v1_8050768 = inttoptr i32 %v0_8050768 to i32*
  %v2_8050768 = load i32, i32* %v1_8050768, align 4
  store i32 %v2_8050768, i32* %eax.global-to-local, align 4
  %v3_8050768 = add i32 %v0_8050768, 4
  %v1_8050769 = inttoptr i32 %v3_8050768 to i32*
  %v2_8050769 = load i32, i32* %v1_8050769, align 4
  store i32 %v2_8050769, i32* %edx.global-to-local, align 4
  %v1_805076a = add i32 %v0_8050768, 1888
  store i32 %v1_805076a, i32* %eax.global-to-local, align 4
  store i32 %v1_805076a, i32* %v1_8050769, align 4
  store i32 20, i32* %v1_8050768, align 4
  %v3_8050774 = call i32 @function_8050fe0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050774, i32* %eax.global-to-local, align 4
  %v0_8050779 = load i32, i32* @esp, align 4
  %v1_8050779 = add i32 %v0_8050779, -4
  %v2_8050779 = inttoptr i32 %v1_8050779 to i32*
  store i32 16384, i32* %v2_8050779, align 4
  %v1_805077e = add i32 %v0_8050779, 1888
  %v2_805077e = inttoptr i32 %v1_805077e to i32*
  %v3_805077e = load i32, i32* %v2_805077e, align 4
  store i32 %v3_805077e, i32* @esi, align 4
  %v2_8050785 = add i32 %v0_8050779, -8
  %v3_8050785 = inttoptr i32 %v2_8050785 to i32*
  store i32 %v3_805077e, i32* %v3_8050785, align 4
  %v2_8050786 = add i32 %v0_8050779, -12
  %v3_8050786 = inttoptr i32 %v2_8050786 to i32*
  store i32 %v3_8050774, i32* %v3_8050786, align 4
  %v0_8050787 = load i32, i32* @edi, align 4
  %v1_8050787 = add i32 %v0_8050787, 4
  %v2_8050787 = inttoptr i32 %v1_8050787 to i32*
  %v3_8050787 = load i32, i32* %v2_8050787, align 4
  store i32 %v3_8050787, i32* @ebx, align 4
  %v2_805078a = add i32 %v0_8050779, -16
  %v3_805078a = inttoptr i32 %v2_805078a to i32*
  store i32 %v3_8050787, i32* %v3_805078a, align 4
  %v0_805078b = call i32 @function_80526c4()
  store i32 %v0_805078b, i32* %eax.global-to-local, align 4
  %v0_8050790 = load i32, i32* @esp, align 4
  %v1_8050793 = add i32 %v0_8050790, 28
  %v2_8050793 = inttoptr i32 %v1_8050793 to i32*
  store i32 16384, i32* %v2_8050793, align 4
  %v1_8050798 = add i32 %v0_8050790, 24
  %v2_8050798 = inttoptr i32 %v1_8050798 to i32*
  store i32 2, i32* %v2_8050798, align 4
  %v1_805079a = add i32 %v0_8050790, 20
  %v2_805079a = inttoptr i32 %v1_805079a to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80548a6.10 to i32), i32* %v2_805079a, align 4
  %v0_805079f = load i32, i32* @edi, align 4
  %v1_805079f = add i32 %v0_805079f, 4
  %v2_805079f = inttoptr i32 %v1_805079f to i32*
  %v3_805079f = load i32, i32* %v2_805079f, align 4
  store i32 %v3_805079f, i32* %ecx.global-to-local, align 4
  %v2_80507a2 = add i32 %v0_8050790, 16
  %v3_80507a2 = inttoptr i32 %v2_80507a2 to i32*
  store i32 %v3_805079f, i32* %v3_80507a2, align 4
  %v0_80507a3 = call i32 @function_80526c4()
  store i32 %v0_80507a3, i32* %eax.global-to-local, align 4
  %v0_80507a8 = load i32, i32* @esp, align 4
  %v1_80507a8 = inttoptr i32 %v0_80507a8 to i32*
  store i32 20, i32* %v1_80507a8, align 4
  %v2_80507af = call i32 @function_8051010(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_80507af, i32* %eax.global-to-local, align 4
  %v0_80507b7 = load i32, i32* @edi, align 4
  %v1_80507b7 = add i32 %v0_80507b7, 12
  %v2_80507b7 = inttoptr i32 %v1_80507b7 to i32*
  store i32 8, i32* %v2_80507b7, align 4
  br label %dec_label_pc_80506e1

dec_label_pc_80507c3:                             ; preds = %dec_label_pc_80503e2
  %v1_80507c3 = add i32 %v0_80503e2, 24
  %v2_80507c3 = inttoptr i32 %v1_80507c3 to i32*
  %v3_80507c3 = load i32, i32* %v2_80507c3, align 4
  %v1_80507c6 = add i32 %v3_80507c3, -1
  store i32 %v1_80507c6, i32* %eax.global-to-local, align 4
  %tmp147 = icmp slt i32 %v1_80507c6, 1
  br i1 %tmp147, label %dec_label_pc_8050370.loopexit12.loopexit, label %dec_label_pc_80507cf.preheader

dec_label_pc_80507cf.preheader:                   ; preds = %dec_label_pc_80507c3
  %v7_80507cf.pre = load i32, i32* @edx, align 4
  %v2_80507cf = add i32 %v0_80503e2, 28
  br label %dec_label_pc_80507cf

dec_label_pc_80507cf:                             ; preds = %dec_label_pc_80507cf.preheader, %dec_label_pc_8050800
  %v7_80507cf = phi i32 [ %v7_80507cf.pre, %dec_label_pc_80507cf.preheader ], [ %v9_80507cf, %dec_label_pc_8050800 ]
  %v0_8050a79 = phi i32 [ %v1_80507c6, %dec_label_pc_80507cf.preheader ], [ %v1_8050800, %dec_label_pc_8050800 ]
  %v3_80507cf = add i32 %v2_80507cf, %v0_8050a79
  %v4_80507cf = inttoptr i32 %v3_80507cf to i8*
  %v5_80507cf = load i8, i8* %v4_80507cf, align 1
  %v6_80507cf = zext i8 %v5_80507cf to i32
  %v8_80507cf = and i32 %v7_80507cf, -256
  %v9_80507cf = or i32 %v6_80507cf, %v8_80507cf
  store i32 %v9_80507cf, i32* %edx.global-to-local, align 4
  %v10_80507d3 = icmp eq i8 %v5_80507cf, 58
  br i1 %v10_80507d3, label %dec_label_pc_8050a79, label %dec_label_pc_80507dc

dec_label_pc_80507dc:                             ; preds = %dec_label_pc_80507cf
  %v10_80507dc = icmp eq i8 %v5_80507cf, 62
  br i1 %v10_80507dc, label %dec_label_pc_8050a79, label %dec_label_pc_80507e5

dec_label_pc_80507e5:                             ; preds = %dec_label_pc_80507dc
  %v10_80507e5 = icmp eq i8 %v5_80507cf, 36
  br i1 %v10_80507e5, label %dec_label_pc_8050a79, label %dec_label_pc_80507ee

dec_label_pc_80507ee:                             ; preds = %dec_label_pc_80507e5
  %v10_80507ee = icmp eq i8 %v5_80507cf, 35
  br i1 %v10_80507ee, label %dec_label_pc_8050a79, label %dec_label_pc_80507f7

dec_label_pc_80507f7:                             ; preds = %dec_label_pc_80507ee
  %v10_80507f7 = icmp eq i8 %v5_80507cf, 37
  br i1 %v10_80507f7, label %dec_label_pc_8050a79, label %dec_label_pc_8050800

dec_label_pc_8050800:                             ; preds = %dec_label_pc_80507f7
  %v1_8050800 = add i32 %v0_8050a79, -1
  %v8_8050800 = icmp eq i32 %v1_8050800, 0
  store i32 %v1_8050800, i32* %eax.global-to-local, align 4
  %v1_8050801 = icmp eq i1 %v8_8050800, false
  br i1 %v1_8050801, label %dec_label_pc_80507cf, label %dec_label_pc_8050370.backedge

dec_label_pc_8050808:                             ; preds = %dec_label_pc_8050411
  %v1_8050808 = add i32 %v0_80503ff, 2
  store i32 %v1_8050808, i32* @ebx, align 4
  %v1_805080b = add i32 %v0_805080b, 2
  store i32 %v1_805080b, i32* @ebp, align 4
  br label %dec_label_pc_80503fb.backedge

dec_label_pc_80503fb.backedge:                    ; preds = %dec_label_pc_8050808, %dec_label_pc_8050c2d
  %v0_8050479128 = phi i32 [ %v0_8050479129, %dec_label_pc_8050808 ], [ %v0_8050c66, %dec_label_pc_8050c2d ]
  %v1_80503fb = phi i32 [ %v1_805040b, %dec_label_pc_8050808 ], [ %v3_8050c66, %dec_label_pc_8050c2d ]
  %v0_80503fb = phi i32 [ %v1_805080b, %dec_label_pc_8050808 ], [ %v0_80503fb.pre, %dec_label_pc_8050c2d ]
  %v5_8050411109 = phi i32 [ %v7_8050411, %dec_label_pc_8050808 ], [ %v0_8050c5e, %dec_label_pc_8050c2d ]
  %v0_8050404104 = phi i32 [ %v0_8050820, %dec_label_pc_8050808 ], [ %v1_8050c63, %dec_label_pc_8050c2d ]
  %v2_80503fb = sub i32 %v0_80503fb, %v1_80503fb
  %v8_80503fb = xor i32 %v0_80503fb, %v1_80503fb
  %v9_80503fb = xor i32 %v2_80503fb, %v0_80503fb
  %v10_80503fb = and i32 %v9_80503fb, %v8_80503fb
  %v11_80503fb = icmp slt i32 %v10_80503fb, 0
  %v13_80503fb = icmp slt i32 %v2_80503fb, 0
  %v2_80503fd = icmp eq i1 %v13_80503fb, %v11_80503fb
  br i1 %v2_80503fd, label %dec_label_pc_8050471, label %dec_label_pc_80503ff.preheader

dec_label_pc_8050813:                             ; preds = %dec_label_pc_8050a85, %dec_label_pc_8050756, %dec_label_pc_8050a0c, %dec_label_pc_8050afe, %dec_label_pc_80509ba, %dec_label_pc_8050969, %dec_label_pc_8050471, %dec_label_pc_8050b77, %dec_label_pc_8050694
  %v0_8050813 = phi i32 [ %v1_8050a79, %dec_label_pc_8050a85 ], [ %v1_805074a160, %dec_label_pc_8050756 ], [ %v1_8050a00, %dec_label_pc_8050a0c ], [ %v1_8050af2, %dec_label_pc_8050afe ], [ %v0_80509ba, %dec_label_pc_80509ba ], [ %v0_8050969, %dec_label_pc_8050969 ], [ %v0_8050471, %dec_label_pc_8050471 ], [ %v1_8050b6b, %dec_label_pc_8050b77 ], [ %v0_805068b, %dec_label_pc_8050694 ]
  %v1_8050813 = icmp eq i32 %v0_8050813, 0
  %v1_8050815 = icmp eq i1 %v1_8050813, false
  br i1 %v1_8050815, label %dec_label_pc_80506e1, label %dec_label_pc_8050370.loopexit12.loopexit

dec_label_pc_8050820:                             ; preds = %dec_label_pc_805041c
  %v1_8050820 = add i32 %v0_8050820, 1879
  %v2_8050820 = inttoptr i32 %v1_8050820 to i8*
  store i8 -1, i8* %v2_8050820, align 1
  %v0_8050828 = load i32, i32* @esp, align 4
  %v1_8050828 = add i32 %v0_8050828, 1880
  %v2_8050828 = inttoptr i32 %v1_8050828 to i8*
  store i8 -5, i8* %v2_8050828, align 1
  %v0_8050830 = load i32, i32* @esp, align 4
  %v1_8050830 = add i32 %v0_8050830, 1881
  %v2_8050830 = inttoptr i32 %v1_8050830 to i8*
  store i8 31, i8* %v2_8050830, align 1
  %v0_8050838 = load i32, i32* @esp, align 4
  %v1_8050838 = add i32 %v0_8050838, 1847
  %v2_8050838 = inttoptr i32 %v1_8050838 to i8*
  store i8 -1, i8* %v2_8050838, align 1
  %v0_8050840 = load i32, i32* @esp, align 4
  %v1_8050840 = add i32 %v0_8050840, 1848
  %v2_8050840 = inttoptr i32 %v1_8050840 to i8*
  store i8 -6, i8* %v2_8050840, align 1
  %v0_8050848 = load i32, i32* @esp, align 4
  %v1_8050848 = add i32 %v0_8050848, 1849
  %v2_8050848 = inttoptr i32 %v1_8050848 to i8*
  store i8 31, i8* %v2_8050848, align 1
  %v0_8050850 = load i32, i32* @esp, align 4
  %v1_8050850 = add i32 %v0_8050850, 1850
  %v2_8050850 = inttoptr i32 %v1_8050850 to i8*
  store i8 0, i8* %v2_8050850, align 1
  %v0_8050858 = load i32, i32* @esp, align 4
  %v1_8050858 = add i32 %v0_8050858, 1851
  %v2_8050858 = inttoptr i32 %v1_8050858 to i8*
  store i8 80, i8* %v2_8050858, align 1
  %v0_8050860 = load i32, i32* @esp, align 4
  %v1_8050860 = add i32 %v0_8050860, 1852
  %v2_8050860 = inttoptr i32 %v1_8050860 to i8*
  store i8 0, i8* %v2_8050860, align 1
  %v0_8050868 = load i32, i32* @esp, align 4
  %v1_8050868 = add i32 %v0_8050868, 1853
  %v2_8050868 = inttoptr i32 %v1_8050868 to i8*
  store i8 24, i8* %v2_8050868, align 1
  %v0_8050870 = load i32, i32* @esp, align 4
  %v1_8050870 = add i32 %v0_8050870, 1854
  %v2_8050870 = inttoptr i32 %v1_8050870 to i8*
  store i8 -1, i8* %v2_8050870, align 1
  %v0_8050878 = load i32, i32* @esp, align 4
  %v1_8050878 = add i32 %v0_8050878, 1855
  %v2_8050878 = inttoptr i32 %v1_8050878 to i8*
  store i8 -16, i8* %v2_8050878, align 1
  %v0_8050880 = load i32, i32* @esp, align 4
  %v1_8050880 = add i32 %v0_8050880, 16
  %v2_8050880 = inttoptr i32 %v1_8050880 to i32*
  %v3_8050880 = load i32, i32* %v2_8050880, align 4
  store i32 %v3_8050880, i32* %eax.global-to-local, align 4
  %v0_8050884 = load i32, i32* @edi, align 4
  %v1_8050884 = add i32 %v0_8050884, 24
  %v2_8050884 = inttoptr i32 %v1_8050884 to i32*
  %v3_8050884 = load i32, i32* %v2_8050884, align 4
  store i32 %v3_8050884, i32* %ecx.global-to-local, align 4
  %v0_8050887 = load i32, i32* @ebx, align 4
  %v1_8050887 = add i32 %v0_8050887, 2
  store i32 %v1_8050887, i32* %edx.global-to-local, align 4
  %v2_805088a = add i32 %v3_8050884, %v3_8050880
  store i32 %v2_805088a, i32* %eax.global-to-local, align 4
  %tmp299 = icmp ugt i32 %v2_805088a, %v1_8050887
  br i1 %tmp299, label %dec_label_pc_8050894, label %dec_label_pc_8050820.dec_label_pc_8050471.loopexit_crit_edge

dec_label_pc_8050820.dec_label_pc_8050471.loopexit_crit_edge: ; preds = %dec_label_pc_8050820
  %v0_8050471.pre.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8050471

dec_label_pc_8050894:                             ; preds = %dec_label_pc_8050820
  %v2_8050894 = inttoptr i32 %v1_8050887 to i8*
  %v3_8050894 = load i8, i8* %v2_8050894, align 1
  %v12_8050894 = icmp eq i8 %v3_8050894, 31
  br i1 %v12_8050894, label %dec_label_pc_8050c2d, label %dec_label_pc_805089e

dec_label_pc_805089e:                             ; preds = %dec_label_pc_8050894
  %v1_805089e = inttoptr i32 %v0_8050887 to i8*
  %v2_805089e = load i8, i8* %v1_805089e, align 1
  %v3_805089e = zext i8 %v2_805089e to i32
  %v5_805089e = and i32 %v2_805088a, -256
  %v6_805089e = or i32 %v3_805089e, %v5_805089e
  store i32 %v6_805089e, i32* %eax.global-to-local, align 4
  %v11_80508a0 = icmp eq i8 %v2_805089e, -3
  %v1_80508a2 = icmp eq i1 %v11_80508a0, false
  br i1 %v1_80508a2, label %dec_label_pc_8050df3, label %dec_label_pc_80508a8

dec_label_pc_80508a8:                             ; preds = %dec_label_pc_805089e
  store i8 -4, i8* %v1_805089e, align 1
  %v0_80508ab = load i32, i32* @esi, align 4
  %v1_80508ab = inttoptr i32 %v0_80508ab to i8*
  %v2_80508ab = load i8, i8* %v1_80508ab, align 1
  %v3_80508ab = zext i8 %v2_80508ab to i32
  %v4_80508ab = load i32, i32* %eax.global-to-local, align 4
  %v5_80508ab = and i32 %v4_80508ab, -256
  %v6_80508ab = or i32 %v5_80508ab, %v3_80508ab
  store i32 %v6_80508ab, i32* %eax.global-to-local, align 4
  %v11_80508ad = icmp eq i8 %v2_80508ab, -3
  %v1_80508af = icmp eq i1 %v11_80508ad, false
  br i1 %v1_80508af, label %dec_label_pc_8050435, label %dec_label_pc_80508b5

dec_label_pc_80508b5:                             ; preds = %dec_label_pc_80508a8, %dec_label_pc_805042b
  %v0_80508b5 = phi i32 [ %v0_80508ab, %dec_label_pc_80508a8 ], [ %v0_805042b, %dec_label_pc_805042b ]
  %v1_80508b5 = inttoptr i32 %v0_80508b5 to i8*
  store i8 -4, i8* %v1_80508b5, align 1
  %v0_80508b8 = load i32, i32* @ebx, align 4
  %v1_80508b8 = add i32 %v0_80508b8, 2
  %v2_80508b8 = inttoptr i32 %v1_80508b8 to i8*
  %v3_80508b8 = load i8, i8* %v2_80508b8, align 1
  %v4_80508b8 = zext i8 %v3_80508b8 to i32
  %v5_80508b8 = load i32, i32* %eax.global-to-local, align 4
  %v6_80508b8 = and i32 %v5_80508b8, -256
  %v7_80508b8 = or i32 %v6_80508b8, %v4_80508b8
  store i32 %v7_80508b8, i32* %eax.global-to-local, align 4
  %v11_80508bb = icmp eq i8 %v3_80508b8, -3
  %v1_80508bd = icmp eq i1 %v11_80508bb, false
  br i1 %v1_80508bd, label %dec_label_pc_8050448, label %dec_label_pc_80508c3

dec_label_pc_80508c3:                             ; preds = %dec_label_pc_80508b5, %dec_label_pc_805043d
  %v0_80508c3 = phi i32 [ %v0_80508b8, %dec_label_pc_80508b5 ], [ %v0_805043d, %dec_label_pc_805043d ]
  %v1_80508c3 = add i32 %v0_80508c3, 2
  %v2_80508c3 = inttoptr i32 %v1_80508c3 to i8*
  store i8 -4, i8* %v2_80508c3, align 1
  br label %dec_label_pc_8050450

dec_label_pc_80508cc:                             ; preds = %dec_label_pc_805038b
  %v1_80503b8 = icmp eq i32 %v0_80503b0, 0
  br i1 %v1_80503b8, label %dec_label_pc_8050dd8, label %dec_label_pc_80508d2

dec_label_pc_80508d2:                             ; preds = %dec_label_pc_80508cc
  %v10_80508d2 = icmp eq i32 %v0_80503b0, -1
  %v1_80508d5 = icmp eq i1 %v10_80508d2, false
  br i1 %v1_80508d5, label %dec_label_pc_80503d2, label %dec_label_pc_80508db

dec_label_pc_80508db:                             ; preds = %dec_label_pc_80508d2
  %v1_80508db = add i32 %v0_80503b5, 56
  %v2_80508db = inttoptr i32 %v1_80508db to i32*
  %v3_80508db = load i32, i32* %v2_80508db, align 4
  store i32 %v3_80508db, i32* %edx.global-to-local, align 4
  %v1_80508df = inttoptr i32 %v3_80508db to i32*
  %v2_80508df = load i32, i32* %v1_80508df, align 4
  %v11_80508df = icmp eq i32 %v2_80508df, 11
  br i1 %v11_80508df, label %dec_label_pc_8050318, label %dec_label_pc_80508e8

dec_label_pc_80508e8:                             ; preds = %dec_label_pc_80508db, %dec_label_pc_8050dd8
  %v0_80508e8 = phi i32 [ %v1_80503b5, %dec_label_pc_80508db ], [ %v0_80508e8.pre, %dec_label_pc_8050dd8 ]
  %v0_80508eb = load i32, i32* @edi, align 4
  %v1_80508eb = add i32 %v0_80508eb, 4
  %v2_80508eb = inttoptr i32 %v1_80508eb to i32*
  %v3_80508eb = load i32, i32* %v2_80508eb, align 4
  store i32 %v3_80508eb, i32* @esi, align 4
  %v2_80508ee = add i32 %v0_80508e8, -16
  %v3_80508ee = inttoptr i32 %v2_80508ee to i32*
  store i32 %v3_80508eb, i32* %v3_80508ee, align 4
  %v1_80508ef = call i32 @function_8051f81(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_80508ef, i32* %eax.global-to-local, align 4
  %v0_80508f4 = load i32, i32* @edi, align 4
  %v1_80508f4 = add i32 %v0_80508f4, 540
  %v2_80508f4 = inttoptr i32 %v1_80508f4 to i8*
  %v3_80508f4 = load i8, i8* %v2_80508f4, align 1
  %v4_80508f4 = zext i8 %v3_80508f4 to i32
  %v6_80508f4 = and i32 %v1_80508ef, -256
  %v7_80508f4 = or i32 %v4_80508f4, %v6_80508f4
  %v1_80508fd = add i32 %v7_80508f4, 1
  store i32 %v1_80508fd, i32* %eax.global-to-local, align 4
  %v1_80508fe = add i32 %v0_80508f4, 4
  %v2_80508fe = inttoptr i32 %v1_80508fe to i32*
  store i32 -1, i32* %v2_80508fe, align 4
  %v0_8050905 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050905 = trunc i32 %v0_8050905 to i8
  %v2_8050905 = load i32, i32* @edi, align 4
  %v3_8050905 = add i32 %v2_8050905, 540
  %v4_8050905 = inttoptr i32 %v3_8050905 to i8*
  store i8 %v1_8050905, i8* %v4_8050905, align 1
  %v0_805090b = load i32, i32* %eax.global-to-local, align 4
  %v1_805090b = trunc i32 %v0_805090b to i8
  %tmp300 = icmp ult i8 %v1_805090b, 10
  %v0_8050de7 = load i32, i32* @edi, align 4
  br i1 %tmp300, label %dec_label_pc_8050de7, label %dec_label_pc_8050913

dec_label_pc_8050913:                             ; preds = %dec_label_pc_80508e8
  %v1_8050913 = add i32 %v0_8050de7, 540
  %v2_8050913 = inttoptr i32 %v1_8050913 to i8*
  store i8 0, i8* %v2_8050913, align 1
  %v0_805091a = load i32, i32* @edi, align 4
  %v1_805091a = add i32 %v0_805091a, 12
  %v2_805091a = inttoptr i32 %v1_805091a to i32*
  store i32 0, i32* %v2_805091a, align 4
  br label %dec_label_pc_8050318

dec_label_pc_8050926:                             ; preds = %dec_label_pc_8050435
  %v1_8050926 = inttoptr i32 %v0_8050926 to i8*
  store i8 -3, i8* %v1_8050926, align 1
  %v5_805043d.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805043d

dec_label_pc_805092e:                             ; preds = %dec_label_pc_8050448
  %v1_805092e = add i32 %v0_805092e, 2
  %v2_805092e = inttoptr i32 %v1_805092e to i8*
  store i8 -3, i8* %v2_805092e, align 1
  br label %dec_label_pc_8050450

dec_label_pc_8050937:                             ; preds = %dec_label_pc_8050377
  %v0_8050937 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8050937, i32* %edx.global-to-local, align 4
  %v1_8050939 = load i32, i32* @esp, align 4
  %v2_8050939 = add i32 %v1_8050939, -4
  %v3_8050939 = inttoptr i32 %v2_8050939 to i32*
  store i32 %v0_8050937, i32* %v3_8050939, align 4
  %v0_805093a = load i32, i32* @edi, align 4
  %v1_805093a = add i32 %v0_805093a, 156
  store i32 %v1_805093a, i32* %eax.global-to-local, align 4
  %v1_8050940 = add i32 %v1_8050939, -8
  %v2_8050940 = inttoptr i32 %v1_8050940 to i32*
  store i32 384, i32* %v2_8050940, align 4
  %v0_8050945 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050945 = add i32 %v1_8050939, -12
  %v3_8050945 = inttoptr i32 %v2_8050945 to i32*
  store i32 %v0_8050945, i32* %v3_8050945, align 4
  %v0_8050946 = load i32, i32* %edx.global-to-local, align 4
  %v2_8050946 = add i32 %v1_8050939, -16
  %v3_8050946 = inttoptr i32 %v2_8050946 to i32*
  store i32 %v0_8050946, i32* %v3_8050946, align 4
  %v4_8050947 = call i32 @function_80524e3(i8* bitcast (i32* @0 to i8*), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8050947, i32* %eax.global-to-local, align 4
  %v0_805094c = load i32, i32* @edi, align 4
  %v1_805094c = add i32 %v0_805094c, 24
  %v2_805094c = inttoptr i32 %v1_805094c to i32*
  %v3_805094c = load i32, i32* %v2_805094c, align 4
  %v1_805094f = add i32 %v3_805094c, -128
  store i32 %v1_805094f, i32* %eax.global-to-local, align 4
  store i32 %v1_805094f, i32* %v2_805094c, align 4
  br label %dec_label_pc_805038b

dec_label_pc_805095d:                             ; preds = %dec_label_pc_80504b7, %dec_label_pc_80504ae, %dec_label_pc_80504a5, %dec_label_pc_805049c, %dec_label_pc_805048f
  %v1_805095d = add i32 %v0_805095d, 1
  store i32 %v1_805095d, i32* @ebp, align 4
  %v10_8050960 = icmp eq i32 %v0_805095d, -2
  br i1 %v10_8050960, label %dec_label_pc_80504c3, label %dec_label_pc_8050969

dec_label_pc_8050969:                             ; preds = %dec_label_pc_805095d, %dec_label_pc_80504e3, %dec_label_pc_80504c3
  %v0_8050969 = phi i32 [ %v1_805095d, %dec_label_pc_805095d ], [ %v0_80504f3, %dec_label_pc_80504e3 ], [ %v0_80504d0, %dec_label_pc_80504c3 ]
  %tmp148 = icmp slt i32 %v0_8050969, 1
  br i1 %tmp148, label %dec_label_pc_8050813, label %dec_label_pc_8050971

dec_label_pc_8050971:                             ; preds = %dec_label_pc_8050969
  %v0_8050971 = load i32, i32* @edi, align 4
  %v1_8050971 = inttoptr i32 %v0_8050971 to i32*
  %v2_8050971 = load i32, i32* %v1_8050971, align 4
  store i32 %v2_8050971, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8050975 = load i32, i32* @esp, align 4
  %v1_8050975 = add i32 %v0_8050975, -4
  %v2_8050975 = inttoptr i32 %v1_8050975 to i32*
  store i32 16384, i32* %v2_8050975, align 4
  %v0_805097a = load i32, i32* %edx.global-to-local, align 4
  %v1_805097a = add i32 %v0_805097a, 12
  %v2_805097a = inttoptr i32 %v1_805097a to i8*
  %v3_805097a = load i8, i8* %v2_805097a, align 1
  %v4_805097a = zext i8 %v3_805097a to i32
  %v5_805097a = load i32, i32* %eax.global-to-local, align 4
  %v6_805097a = and i32 %v5_805097a, -256
  %v7_805097a = or i32 %v6_805097a, %v4_805097a
  store i32 %v7_805097a, i32* %eax.global-to-local, align 4
  %v2_805097d = add i32 %v0_8050975, -8
  %v3_805097d = inttoptr i32 %v2_805097d to i32*
  store i32 %v7_805097a, i32* %v3_805097d, align 4
  %v0_805097e = load i32, i32* %edx.global-to-local, align 4
  %v1_805097e = inttoptr i32 %v0_805097e to i32*
  %v2_805097e = load i32, i32* %v1_805097e, align 4
  store i32 %v2_805097e, i32* %eax.global-to-local, align 4
  %v2_8050980 = add i32 %v0_8050975, -12
  %v3_8050980 = inttoptr i32 %v2_8050980 to i32*
  store i32 %v2_805097e, i32* %v3_8050980, align 4
  %v0_8050981 = load i32, i32* @edi, align 4
  %v1_8050981 = add i32 %v0_8050981, 4
  %v2_8050981 = inttoptr i32 %v1_8050981 to i32*
  %v3_8050981 = load i32, i32* %v2_8050981, align 4
  store i32 %v3_8050981, i32* %eax.global-to-local, align 4
  %v2_8050984 = add i32 %v0_8050975, -16
  %v3_8050984 = inttoptr i32 %v2_8050984 to i32*
  store i32 %v3_8050981, i32* %v3_8050984, align 4
  %v0_8050985 = call i32 @function_80526c4()
  store i32 %v0_8050985, i32* %eax.global-to-local, align 4
  %v0_805098a = load i32, i32* @esp, align 4
  %v1_805098a = add i32 %v0_805098a, -4
  %v2_805098a = inttoptr i32 %v1_805098a to i32*
  store i32 16384, i32* %v2_805098a, align 4
  %v1_805098f = add i32 %v0_805098a, -8
  %v2_805098f = inttoptr i32 %v1_805098f to i32*
  store i32 2, i32* %v2_805098f, align 4
  %v1_8050991 = add i32 %v0_805098a, -12
  %v2_8050991 = inttoptr i32 %v1_8050991 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80548a6.10 to i32), i32* %v2_8050991, align 4
  %v0_8050996 = load i32, i32* @edi, align 4
  %v1_8050996 = add i32 %v0_8050996, 4
  %v2_8050996 = inttoptr i32 %v1_8050996 to i32*
  %v3_8050996 = load i32, i32* %v2_8050996, align 4
  store i32 %v3_8050996, i32* %eax.global-to-local, align 4
  %v2_8050999 = add i32 %v0_805098a, -16
  %v3_8050999 = inttoptr i32 %v2_8050999 to i32*
  store i32 %v3_8050996, i32* %v3_8050999, align 4
  %v0_805099a = call i32 @function_80526c4()
  store i32 %v0_805099a, i32* %eax.global-to-local, align 4
  %v0_80509a2 = load i32, i32* @edi, align 4
  %v1_80509a2 = add i32 %v0_80509a2, 12
  %v2_80509a2 = inttoptr i32 %v1_80509a2 to i32*
  store i32 4, i32* %v2_80509a2, align 4
  br label %dec_label_pc_80506e1

dec_label_pc_80509ae:                             ; preds = %dec_label_pc_8050539, %dec_label_pc_8050530, %dec_label_pc_8050527, %dec_label_pc_805051a
  %v1_80509ae = add i32 %v0_80509ae, 1
  store i32 %v1_80509ae, i32* @ebp, align 4
  %v10_80509b1 = icmp eq i32 %v0_80509ae, -2
  br i1 %v10_80509b1, label %dec_label_pc_8050545, label %dec_label_pc_80509ba

dec_label_pc_80509ba:                             ; preds = %dec_label_pc_80509ae, %dec_label_pc_8050545
  %v0_80509ba = phi i32 [ %v1_80509ae, %dec_label_pc_80509ae ], [ %v0_8050552, %dec_label_pc_8050545 ]
  %tmp149 = icmp slt i32 %v0_80509ba, 1
  br i1 %tmp149, label %dec_label_pc_8050813, label %dec_label_pc_80509c2

dec_label_pc_80509c2:                             ; preds = %dec_label_pc_80509ba
  %v0_80509c2 = load i32, i32* @edi, align 4
  %v1_80509c2 = inttoptr i32 %v0_80509c2 to i32*
  %v2_80509c2 = load i32, i32* %v1_80509c2, align 4
  store i32 %v2_80509c2, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_80509c6 = load i32, i32* @esp, align 4
  %v1_80509c6 = add i32 %v0_80509c6, -4
  %v2_80509c6 = inttoptr i32 %v1_80509c6 to i32*
  store i32 16384, i32* %v2_80509c6, align 4
  %v0_80509cb = load i32, i32* %edx.global-to-local, align 4
  %v1_80509cb = add i32 %v0_80509cb, 13
  %v2_80509cb = inttoptr i32 %v1_80509cb to i8*
  %v3_80509cb = load i8, i8* %v2_80509cb, align 1
  %v4_80509cb = zext i8 %v3_80509cb to i32
  %v5_80509cb = load i32, i32* %eax.global-to-local, align 4
  %v6_80509cb = and i32 %v5_80509cb, -256
  %v7_80509cb = or i32 %v6_80509cb, %v4_80509cb
  store i32 %v7_80509cb, i32* %eax.global-to-local, align 4
  %v2_80509ce = add i32 %v0_80509c6, -8
  %v3_80509ce = inttoptr i32 %v2_80509ce to i32*
  store i32 %v7_80509cb, i32* %v3_80509ce, align 4
  %v0_80509cf = load i32, i32* %edx.global-to-local, align 4
  %v1_80509cf = add i32 %v0_80509cf, 4
  %v2_80509cf = inttoptr i32 %v1_80509cf to i32*
  %v3_80509cf = load i32, i32* %v2_80509cf, align 4
  store i32 %v3_80509cf, i32* @esi, align 4
  %v2_80509d2 = add i32 %v0_80509c6, -12
  %v3_80509d2 = inttoptr i32 %v2_80509d2 to i32*
  store i32 %v3_80509cf, i32* %v3_80509d2, align 4
  %v0_80509d3 = load i32, i32* @edi, align 4
  %v1_80509d3 = add i32 %v0_80509d3, 4
  %v2_80509d3 = inttoptr i32 %v1_80509d3 to i32*
  %v3_80509d3 = load i32, i32* %v2_80509d3, align 4
  store i32 %v3_80509d3, i32* @ebx, align 4
  %v2_80509d6 = add i32 %v0_80509c6, -16
  %v3_80509d6 = inttoptr i32 %v2_80509d6 to i32*
  store i32 %v3_80509d3, i32* %v3_80509d6, align 4
  %v0_80509d7 = call i32 @function_80526c4()
  store i32 %v0_80509d7, i32* %eax.global-to-local, align 4
  %v0_80509dc = load i32, i32* @esp, align 4
  %v1_80509dc = add i32 %v0_80509dc, -4
  %v2_80509dc = inttoptr i32 %v1_80509dc to i32*
  store i32 16384, i32* %v2_80509dc, align 4
  %v1_80509e1 = add i32 %v0_80509dc, -8
  %v2_80509e1 = inttoptr i32 %v1_80509e1 to i32*
  store i32 2, i32* %v2_80509e1, align 4
  %v1_80509e3 = add i32 %v0_80509dc, -12
  %v2_80509e3 = inttoptr i32 %v1_80509e3 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80548a6.10 to i32), i32* %v2_80509e3, align 4
  %v0_80509e8 = load i32, i32* @edi, align 4
  %v1_80509e8 = add i32 %v0_80509e8, 4
  %v2_80509e8 = inttoptr i32 %v1_80509e8 to i32*
  %v3_80509e8 = load i32, i32* %v2_80509e8, align 4
  store i32 %v3_80509e8, i32* %ecx.global-to-local, align 4
  %v2_80509eb = add i32 %v0_80509dc, -16
  %v3_80509eb = inttoptr i32 %v2_80509eb to i32*
  store i32 %v3_80509e8, i32* %v3_80509eb, align 4
  %v0_80509ec = call i32 @function_80526c4()
  store i32 %v0_80509ec, i32* %eax.global-to-local, align 4
  %v0_80509f4 = load i32, i32* @edi, align 4
  %v1_80509f4 = add i32 %v0_80509f4, 12
  %v2_80509f4 = inttoptr i32 %v1_80509f4 to i32*
  store i32 5, i32* %v2_80509f4, align 4
  br label %dec_label_pc_80506e1

dec_label_pc_8050a00:                             ; preds = %dec_label_pc_80505e9, %dec_label_pc_80505e0, %dec_label_pc_80505d7, %dec_label_pc_80505ce, %dec_label_pc_80505c1
  %v1_8050a00 = add i32 %v0_8050a00, 1
  store i32 %v1_8050a00, i32* @ebp, align 4
  %v10_8050a03 = icmp eq i32 %v0_8050a00, -2
  br i1 %v10_8050a03, label %dec_label_pc_8050370.loopexit12.loopexit, label %dec_label_pc_8050a0c

dec_label_pc_8050a0c:                             ; preds = %dec_label_pc_8050a00
  %tmp150 = icmp slt i32 %v1_8050a00, 1
  br i1 %tmp150, label %dec_label_pc_8050813, label %dec_label_pc_8050a14

dec_label_pc_8050a14:                             ; preds = %dec_label_pc_8050a0c
  %v0_8050a14 = load i32, i32* @esp, align 4
  %v1_8050a17 = add i32 %v0_8050a14, -16
  %v2_8050a17 = inttoptr i32 %v1_8050a17 to i32*
  store i32 22, i32* %v2_8050a17, align 4
  %v2_8050a19 = call i32 @function_8051090(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050a19, i32* %eax.global-to-local, align 4
  %v0_8050a1e = load i32, i32* @esp, align 4
  %v1_8050a1e = inttoptr i32 %v0_8050a1e to i32*
  %v2_8050a1e = load i32, i32* %v1_8050a1e, align 4
  store i32 %v2_8050a1e, i32* %eax.global-to-local, align 4
  %v3_8050a1e = add i32 %v0_8050a1e, 4
  %v1_8050a1f = inttoptr i32 %v3_8050a1e to i32*
  %v2_8050a1f = load i32, i32* %v1_8050a1f, align 4
  store i32 %v2_8050a1f, i32* %edx.global-to-local, align 4
  %v1_8050a20 = add i32 %v0_8050a1e, 1888
  store i32 %v1_8050a20, i32* %eax.global-to-local, align 4
  store i32 %v1_8050a20, i32* %v1_8050a1f, align 4
  store i32 22, i32* %v1_8050a1e, align 4
  %v3_8050a2a = call i32 @function_8050fe0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050a2a, i32* %eax.global-to-local, align 4
  %v0_8050a2f = load i32, i32* @esp, align 4
  %v1_8050a2f = add i32 %v0_8050a2f, -4
  %v2_8050a2f = inttoptr i32 %v1_8050a2f to i32*
  store i32 16384, i32* %v2_8050a2f, align 4
  %v1_8050a34 = add i32 %v0_8050a2f, 1888
  %v2_8050a34 = inttoptr i32 %v1_8050a34 to i32*
  %v3_8050a34 = load i32, i32* %v2_8050a34, align 4
  store i32 %v3_8050a34, i32* @esi, align 4
  %v2_8050a3b = add i32 %v0_8050a2f, -8
  %v3_8050a3b = inttoptr i32 %v2_8050a3b to i32*
  store i32 %v3_8050a34, i32* %v3_8050a3b, align 4
  %v2_8050a3c = add i32 %v0_8050a2f, -12
  %v3_8050a3c = inttoptr i32 %v2_8050a3c to i32*
  store i32 %v3_8050a2a, i32* %v3_8050a3c, align 4
  %v0_8050a3d = load i32, i32* @edi, align 4
  %v1_8050a3d = add i32 %v0_8050a3d, 4
  %v2_8050a3d = inttoptr i32 %v1_8050a3d to i32*
  %v3_8050a3d = load i32, i32* %v2_8050a3d, align 4
  store i32 %v3_8050a3d, i32* @ebx, align 4
  %v2_8050a40 = add i32 %v0_8050a2f, -16
  %v3_8050a40 = inttoptr i32 %v2_8050a40 to i32*
  store i32 %v3_8050a3d, i32* %v3_8050a40, align 4
  %v0_8050a41 = call i32 @function_80526c4()
  store i32 %v0_8050a41, i32* %eax.global-to-local, align 4
  %v0_8050a46 = load i32, i32* @esp, align 4
  %v1_8050a49 = add i32 %v0_8050a46, 28
  %v2_8050a49 = inttoptr i32 %v1_8050a49 to i32*
  store i32 16384, i32* %v2_8050a49, align 4
  %v1_8050a4e = add i32 %v0_8050a46, 24
  %v2_8050a4e = inttoptr i32 %v1_8050a4e to i32*
  store i32 2, i32* %v2_8050a4e, align 4
  %v1_8050a50 = add i32 %v0_8050a46, 20
  %v2_8050a50 = inttoptr i32 %v1_8050a50 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80548a6.10 to i32), i32* %v2_8050a50, align 4
  %v0_8050a55 = load i32, i32* @edi, align 4
  %v1_8050a55 = add i32 %v0_8050a55, 4
  %v2_8050a55 = inttoptr i32 %v1_8050a55 to i32*
  %v3_8050a55 = load i32, i32* %v2_8050a55, align 4
  store i32 %v3_8050a55, i32* %ecx.global-to-local, align 4
  %v2_8050a58 = add i32 %v0_8050a46, 16
  %v3_8050a58 = inttoptr i32 %v2_8050a58 to i32*
  store i32 %v3_8050a55, i32* %v3_8050a58, align 4
  %v0_8050a59 = call i32 @function_80526c4()
  store i32 %v0_8050a59, i32* %eax.global-to-local, align 4
  %v0_8050a5e = load i32, i32* @esp, align 4
  %v1_8050a5e = inttoptr i32 %v0_8050a5e to i32*
  store i32 22, i32* %v1_8050a5e, align 4
  %v2_8050a65 = call i32 @function_8051010(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050a65, i32* %eax.global-to-local, align 4
  %v0_8050a6d = load i32, i32* @edi, align 4
  %v1_8050a6d = add i32 %v0_8050a6d, 12
  %v2_8050a6d = inttoptr i32 %v1_8050a6d to i32*
  store i32 7, i32* %v2_8050a6d, align 4
  br label %dec_label_pc_80506e1

dec_label_pc_8050a79:                             ; preds = %dec_label_pc_80507f7, %dec_label_pc_80507ee, %dec_label_pc_80507e5, %dec_label_pc_80507dc, %dec_label_pc_80507cf
  %v1_8050a79 = add i32 %v0_8050a79, 1
  store i32 %v1_8050a79, i32* @ebp, align 4
  %v10_8050a7c = icmp eq i32 %v0_8050a79, -2
  br i1 %v10_8050a7c, label %dec_label_pc_8050370.loopexit12.loopexit, label %dec_label_pc_8050a85

dec_label_pc_8050a85:                             ; preds = %dec_label_pc_8050a79
  %tmp151 = icmp slt i32 %v1_8050a79, 1
  br i1 %tmp151, label %dec_label_pc_8050813, label %dec_label_pc_8050a8d

dec_label_pc_8050a8d:                             ; preds = %dec_label_pc_8050a85
  %v0_8050a8d = load i32, i32* @esp, align 4
  %v1_8050a90 = add i32 %v0_8050a8d, -16
  %v2_8050a90 = inttoptr i32 %v1_8050a90 to i32*
  store i32 24, i32* %v2_8050a90, align 4
  %v2_8050a92 = call i32 @function_8051090(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050a92, i32* %eax.global-to-local, align 4
  %v0_8050a97 = load i32, i32* @esp, align 4
  %v1_8050a97 = inttoptr i32 %v0_8050a97 to i32*
  %v2_8050a97 = load i32, i32* %v1_8050a97, align 4
  store i32 %v2_8050a97, i32* %eax.global-to-local, align 4
  %v3_8050a97 = add i32 %v0_8050a97, 4
  %v1_8050a98 = inttoptr i32 %v3_8050a97 to i32*
  %v1_8050a99 = add i32 %v0_8050a97, 1880
  store i32 %v1_8050a99, i32* %edx.global-to-local, align 4
  store i32 %v1_8050a99, i32* %v1_8050a98, align 4
  store i32 24, i32* %v1_8050a97, align 4
  %v3_8050aa3 = call i32 @function_8050fe0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050aa3, i32* %eax.global-to-local, align 4
  %v0_8050aa8 = load i32, i32* @esp, align 4
  %v1_8050aa8 = add i32 %v0_8050aa8, -4
  %v2_8050aa8 = inttoptr i32 %v1_8050aa8 to i32*
  store i32 16384, i32* %v2_8050aa8, align 4
  %v1_8050aad = add i32 %v0_8050aa8, 1880
  %v2_8050aad = inttoptr i32 %v1_8050aad to i32*
  %v3_8050aad = load i32, i32* %v2_8050aad, align 4
  store i32 %v3_8050aad, i32* @esi, align 4
  %v2_8050ab4 = add i32 %v0_8050aa8, -8
  %v3_8050ab4 = inttoptr i32 %v2_8050ab4 to i32*
  store i32 %v3_8050aad, i32* %v3_8050ab4, align 4
  %v2_8050ab5 = add i32 %v0_8050aa8, -12
  %v3_8050ab5 = inttoptr i32 %v2_8050ab5 to i32*
  store i32 %v3_8050aa3, i32* %v3_8050ab5, align 4
  %v0_8050ab6 = load i32, i32* @edi, align 4
  %v1_8050ab6 = add i32 %v0_8050ab6, 4
  %v2_8050ab6 = inttoptr i32 %v1_8050ab6 to i32*
  %v3_8050ab6 = load i32, i32* %v2_8050ab6, align 4
  store i32 %v3_8050ab6, i32* @ebx, align 4
  %v2_8050ab9 = add i32 %v0_8050aa8, -16
  %v3_8050ab9 = inttoptr i32 %v2_8050ab9 to i32*
  store i32 %v3_8050ab6, i32* %v3_8050ab9, align 4
  %v0_8050aba = call i32 @function_80526c4()
  store i32 %v0_8050aba, i32* %eax.global-to-local, align 4
  %v0_8050abf = load i32, i32* @esp, align 4
  %v1_8050ac2 = add i32 %v0_8050abf, 28
  %v2_8050ac2 = inttoptr i32 %v1_8050ac2 to i32*
  store i32 16384, i32* %v2_8050ac2, align 4
  %v1_8050ac7 = add i32 %v0_8050abf, 24
  %v2_8050ac7 = inttoptr i32 %v1_8050ac7 to i32*
  store i32 2, i32* %v2_8050ac7, align 4
  %v1_8050ac9 = add i32 %v0_8050abf, 20
  %v2_8050ac9 = inttoptr i32 %v1_8050ac9 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80548a6.10 to i32), i32* %v2_8050ac9, align 4
  %v0_8050ace = load i32, i32* @edi, align 4
  %v1_8050ace = add i32 %v0_8050ace, 4
  %v2_8050ace = inttoptr i32 %v1_8050ace to i32*
  %v3_8050ace = load i32, i32* %v2_8050ace, align 4
  store i32 %v3_8050ace, i32* %ecx.global-to-local, align 4
  %v2_8050ad1 = add i32 %v0_8050abf, 16
  %v3_8050ad1 = inttoptr i32 %v2_8050ad1 to i32*
  store i32 %v3_8050ace, i32* %v3_8050ad1, align 4
  %v0_8050ad2 = call i32 @function_80526c4()
  store i32 %v0_8050ad2, i32* %eax.global-to-local, align 4
  %v0_8050ad7 = load i32, i32* @esp, align 4
  %v1_8050ad7 = inttoptr i32 %v0_8050ad7 to i32*
  store i32 24, i32* %v1_8050ad7, align 4
  %v2_8050ade = call i32 @function_8051010(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050ade, i32* %eax.global-to-local, align 4
  %v0_8050ae6 = load i32, i32* @edi, align 4
  %v1_8050ae6 = add i32 %v0_8050ae6, 12
  %v2_8050ae6 = inttoptr i32 %v1_8050ae6 to i32*
  store i32 10, i32* %v2_8050ae6, align 4
  br label %dec_label_pc_80506e1

dec_label_pc_8050af2:                             ; preds = %dec_label_pc_80505a4, %dec_label_pc_805059b, %dec_label_pc_8050592, %dec_label_pc_8050589, %dec_label_pc_805057c
  %v1_8050af2 = add i32 %v0_8050af2, 1
  store i32 %v1_8050af2, i32* @ebp, align 4
  %v10_8050af5 = icmp eq i32 %v0_8050af2, -2
  br i1 %v10_8050af5, label %dec_label_pc_8050370.loopexit12.loopexit, label %dec_label_pc_8050afe

dec_label_pc_8050afe:                             ; preds = %dec_label_pc_8050af2
  %tmp152 = icmp slt i32 %v1_8050af2, 1
  br i1 %tmp152, label %dec_label_pc_8050813, label %dec_label_pc_8050b06

dec_label_pc_8050b06:                             ; preds = %dec_label_pc_8050afe
  %v0_8050b06 = load i32, i32* @esp, align 4
  %v1_8050b09 = add i32 %v0_8050b06, -16
  %v2_8050b09 = inttoptr i32 %v1_8050b09 to i32*
  store i32 23, i32* %v2_8050b09, align 4
  %v2_8050b0b = call i32 @function_8051090(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050b0b, i32* %eax.global-to-local, align 4
  %v0_8050b10 = load i32, i32* @esp, align 4
  %v1_8050b10 = inttoptr i32 %v0_8050b10 to i32*
  %v2_8050b10 = load i32, i32* %v1_8050b10, align 4
  store i32 %v2_8050b10, i32* %eax.global-to-local, align 4
  %v3_8050b10 = add i32 %v0_8050b10, 4
  %v1_8050b11 = inttoptr i32 %v3_8050b10 to i32*
  %v2_8050b11 = load i32, i32* %v1_8050b11, align 4
  store i32 %v2_8050b11, i32* %edx.global-to-local, align 4
  %v1_8050b12 = add i32 %v0_8050b10, 1880
  store i32 %v1_8050b12, i32* %eax.global-to-local, align 4
  store i32 %v1_8050b12, i32* %v1_8050b11, align 4
  store i32 23, i32* %v1_8050b10, align 4
  %v3_8050b1c = call i32 @function_8050fe0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050b1c, i32* %eax.global-to-local, align 4
  %v0_8050b21 = load i32, i32* @esp, align 4
  %v1_8050b21 = add i32 %v0_8050b21, -4
  %v2_8050b21 = inttoptr i32 %v1_8050b21 to i32*
  store i32 16384, i32* %v2_8050b21, align 4
  %v1_8050b26 = add i32 %v0_8050b21, 1880
  %v2_8050b26 = inttoptr i32 %v1_8050b26 to i32*
  %v3_8050b26 = load i32, i32* %v2_8050b26, align 4
  store i32 %v3_8050b26, i32* @esi, align 4
  %v2_8050b2d = add i32 %v0_8050b21, -8
  %v3_8050b2d = inttoptr i32 %v2_8050b2d to i32*
  store i32 %v3_8050b26, i32* %v3_8050b2d, align 4
  %v2_8050b2e = add i32 %v0_8050b21, -12
  %v3_8050b2e = inttoptr i32 %v2_8050b2e to i32*
  store i32 %v3_8050b1c, i32* %v3_8050b2e, align 4
  %v0_8050b2f = load i32, i32* @edi, align 4
  %v1_8050b2f = add i32 %v0_8050b2f, 4
  %v2_8050b2f = inttoptr i32 %v1_8050b2f to i32*
  %v3_8050b2f = load i32, i32* %v2_8050b2f, align 4
  store i32 %v3_8050b2f, i32* @ebx, align 4
  %v2_8050b32 = add i32 %v0_8050b21, -16
  %v3_8050b32 = inttoptr i32 %v2_8050b32 to i32*
  store i32 %v3_8050b2f, i32* %v3_8050b32, align 4
  %v0_8050b33 = call i32 @function_80526c4()
  store i32 %v0_8050b33, i32* %eax.global-to-local, align 4
  %v0_8050b38 = load i32, i32* @esp, align 4
  %v1_8050b3b = add i32 %v0_8050b38, 28
  %v2_8050b3b = inttoptr i32 %v1_8050b3b to i32*
  store i32 16384, i32* %v2_8050b3b, align 4
  %v1_8050b40 = add i32 %v0_8050b38, 24
  %v2_8050b40 = inttoptr i32 %v1_8050b40 to i32*
  store i32 2, i32* %v2_8050b40, align 4
  %v1_8050b42 = add i32 %v0_8050b38, 20
  %v2_8050b42 = inttoptr i32 %v1_8050b42 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80548a6.10 to i32), i32* %v2_8050b42, align 4
  %v0_8050b47 = load i32, i32* @edi, align 4
  %v1_8050b47 = add i32 %v0_8050b47, 4
  %v2_8050b47 = inttoptr i32 %v1_8050b47 to i32*
  %v3_8050b47 = load i32, i32* %v2_8050b47, align 4
  store i32 %v3_8050b47, i32* %ecx.global-to-local, align 4
  %v2_8050b4a = add i32 %v0_8050b38, 16
  %v3_8050b4a = inttoptr i32 %v2_8050b4a to i32*
  store i32 %v3_8050b47, i32* %v3_8050b4a, align 4
  %v0_8050b4b = call i32 @function_80526c4()
  store i32 %v0_8050b4b, i32* %eax.global-to-local, align 4
  %v0_8050b50 = load i32, i32* @esp, align 4
  %v1_8050b50 = inttoptr i32 %v0_8050b50 to i32*
  store i32 23, i32* %v1_8050b50, align 4
  %v2_8050b57 = call i32 @function_8051010(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050b57, i32* %eax.global-to-local, align 4
  %v0_8050b5f = load i32, i32* @edi, align 4
  %v1_8050b5f = add i32 %v0_8050b5f, 12
  %v2_8050b5f = inttoptr i32 %v1_8050b5f to i32*
  store i32 9, i32* %v2_8050b5f, align 4
  br label %dec_label_pc_80506e1

dec_label_pc_8050b6b:                             ; preds = %dec_label_pc_8050364, %dec_label_pc_805035b, %dec_label_pc_8050352, %dec_label_pc_8050349, %dec_label_pc_805033c
  %v1_8050b6b = add i32 %v0_8050b6b, 1
  store i32 %v1_8050b6b, i32* @ebp, align 4
  %v10_8050b6e = icmp eq i32 %v0_8050b6b, -2
  br i1 %v10_8050b6e, label %dec_label_pc_8050370.loopexit12.loopexit, label %dec_label_pc_8050b77

dec_label_pc_8050b77:                             ; preds = %dec_label_pc_8050b6b
  %tmp153 = icmp slt i32 %v1_8050b6b, 1
  br i1 %tmp153, label %dec_label_pc_8050813, label %dec_label_pc_8050b7f

dec_label_pc_8050b7f:                             ; preds = %dec_label_pc_8050b77
  %v0_8050b7f = load i32, i32* @esp, align 4
  %v1_8050b82 = add i32 %v0_8050b7f, -16
  %v2_8050b82 = inttoptr i32 %v1_8050b82 to i32*
  store i32 21, i32* %v2_8050b82, align 4
  %v2_8050b84 = call i32 @function_8051090(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050b84, i32* %eax.global-to-local, align 4
  %v0_8050b89 = load i32, i32* @esp, align 4
  %v1_8050b89 = inttoptr i32 %v0_8050b89 to i32*
  %v2_8050b89 = load i32, i32* %v1_8050b89, align 4
  store i32 %v2_8050b89, i32* %eax.global-to-local, align 4
  %v3_8050b89 = add i32 %v0_8050b89, 4
  %v1_8050b8a = inttoptr i32 %v3_8050b89 to i32*
  %v2_8050b8a = load i32, i32* %v1_8050b8a, align 4
  store i32 %v2_8050b8a, i32* %edx.global-to-local, align 4
  %v1_8050b8b = add i32 %v0_8050b89, 1880
  store i32 %v1_8050b8b, i32* %ecx.global-to-local, align 4
  store i32 %v1_8050b8b, i32* %v1_8050b8a, align 4
  store i32 21, i32* %v1_8050b89, align 4
  %v3_8050b95 = call i32 @function_8050fe0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050b95, i32* %eax.global-to-local, align 4
  %v0_8050b9a = load i32, i32* @esp, align 4
  %v1_8050b9a = add i32 %v0_8050b9a, -4
  %v2_8050b9a = inttoptr i32 %v1_8050b9a to i32*
  store i32 16384, i32* %v2_8050b9a, align 4
  %v1_8050b9f = add i32 %v0_8050b9a, 1880
  %v2_8050b9f = inttoptr i32 %v1_8050b9f to i32*
  %v3_8050b9f = load i32, i32* %v2_8050b9f, align 4
  store i32 %v3_8050b9f, i32* @esi, align 4
  %v2_8050ba6 = add i32 %v0_8050b9a, -8
  %v3_8050ba6 = inttoptr i32 %v2_8050ba6 to i32*
  store i32 %v3_8050b9f, i32* %v3_8050ba6, align 4
  %v2_8050ba7 = add i32 %v0_8050b9a, -12
  %v3_8050ba7 = inttoptr i32 %v2_8050ba7 to i32*
  store i32 %v3_8050b95, i32* %v3_8050ba7, align 4
  %v0_8050ba8 = load i32, i32* @edi, align 4
  %v1_8050ba8 = add i32 %v0_8050ba8, 4
  %v2_8050ba8 = inttoptr i32 %v1_8050ba8 to i32*
  %v3_8050ba8 = load i32, i32* %v2_8050ba8, align 4
  store i32 %v3_8050ba8, i32* @ebx, align 4
  %v2_8050bab = add i32 %v0_8050b9a, -16
  %v3_8050bab = inttoptr i32 %v2_8050bab to i32*
  store i32 %v3_8050ba8, i32* %v3_8050bab, align 4
  %v0_8050bac = call i32 @function_80526c4()
  store i32 %v0_8050bac, i32* %eax.global-to-local, align 4
  %v0_8050bb1 = load i32, i32* @esp, align 4
  %v1_8050bb4 = add i32 %v0_8050bb1, 28
  %v2_8050bb4 = inttoptr i32 %v1_8050bb4 to i32*
  store i32 16384, i32* %v2_8050bb4, align 4
  %v1_8050bb9 = add i32 %v0_8050bb1, 24
  %v2_8050bb9 = inttoptr i32 %v1_8050bb9 to i32*
  store i32 2, i32* %v2_8050bb9, align 4
  %v1_8050bbb = add i32 %v0_8050bb1, 20
  %v2_8050bbb = inttoptr i32 %v1_8050bbb to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80548a6.10 to i32), i32* %v2_8050bbb, align 4
  %v0_8050bc0 = load i32, i32* @edi, align 4
  %v1_8050bc0 = add i32 %v0_8050bc0, 4
  %v2_8050bc0 = inttoptr i32 %v1_8050bc0 to i32*
  %v3_8050bc0 = load i32, i32* %v2_8050bc0, align 4
  store i32 %v3_8050bc0, i32* %ecx.global-to-local, align 4
  %v2_8050bc3 = add i32 %v0_8050bb1, 16
  %v3_8050bc3 = inttoptr i32 %v2_8050bc3 to i32*
  store i32 %v3_8050bc0, i32* %v3_8050bc3, align 4
  %v0_8050bc4 = call i32 @function_80526c4()
  store i32 %v0_8050bc4, i32* %eax.global-to-local, align 4
  %v0_8050bc9 = load i32, i32* @esp, align 4
  %v1_8050bc9 = inttoptr i32 %v0_8050bc9 to i32*
  store i32 21, i32* %v1_8050bc9, align 4
  %v2_8050bd0 = call i32 @function_8051010(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050bd0, i32* %eax.global-to-local, align 4
  %v0_8050bd8 = load i32, i32* @edi, align 4
  %v1_8050bd8 = add i32 %v0_8050bd8, 12
  %v2_8050bd8 = inttoptr i32 %v1_8050bd8 to i32*
  store i32 6, i32* %v2_8050bd8, align 4
  br label %dec_label_pc_80506e1

dec_label_pc_8050be4:                             ; preds = %dec_label_pc_8050600
  %v2_8050bee = load i32, i32* %v1_8050bee, align 4
  store i32 %v2_8050bee, i32* %eax.global-to-local, align 4
  %v0_8050bef = load i32, i32* @edi, align 4
  %v1_8050bef = add i32 %v0_8050bef, 4
  %v2_8050bef = inttoptr i32 %v1_8050bef to i32*
  %v3_8050bef = load i32, i32* %v2_8050bef, align 4
  store i32 %v3_8050bef, i32* %eax.global-to-local, align 4
  store i32 %v3_8050bef, i32* %v1_8050bee, align 4
  %v1_8050bf3 = call i32 @function_8051f81(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050bf3, i32* %eax.global-to-local, align 4
  %v0_8050bf8 = load i32, i32* @edi, align 4
  %v1_8050bf8 = add i32 %v0_8050bf8, 540
  %v2_8050bf8 = inttoptr i32 %v1_8050bf8 to i8*
  %v3_8050bf8 = load i8, i8* %v2_8050bf8, align 1
  %v4_8050bf8 = zext i8 %v3_8050bf8 to i32
  %v6_8050bf8 = and i32 %v1_8050bf3, -256
  %v7_8050bf8 = or i32 %v4_8050bf8, %v6_8050bf8
  %v1_8050c01 = add i32 %v7_8050bf8, 1
  store i32 %v1_8050c01, i32* %eax.global-to-local, align 4
  %v1_8050c02 = add i32 %v0_8050bf8, 4
  %v2_8050c02 = inttoptr i32 %v1_8050c02 to i32*
  store i32 -1, i32* %v2_8050c02, align 4
  %v0_8050c09 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050c09 = trunc i32 %v0_8050c09 to i8
  %v2_8050c09 = load i32, i32* @edi, align 4
  %v3_8050c09 = add i32 %v2_8050c09, 540
  %v4_8050c09 = inttoptr i32 %v3_8050c09 to i8*
  store i8 %v1_8050c09, i8* %v4_8050c09, align 1
  %v0_8050c0f = load i32, i32* %eax.global-to-local, align 4
  %v1_8050c0f = trunc i32 %v0_8050c0f to i8
  %v10_8050c0f = icmp eq i8 %v1_8050c0f, 10
  %v1_8050c11 = icmp eq i1 %v10_8050c0f, false
  br i1 %v1_8050c11, label %dec_label_pc_8050da0, label %dec_label_pc_8050c17

dec_label_pc_8050c17:                             ; preds = %dec_label_pc_8050be4
  store i32 -1, i32* @ebp, align 4
  %v0_8050c1a = load i32, i32* @edi, align 4
  %v1_8050c1a = add i32 %v0_8050c1a, 540
  %v2_8050c1a = inttoptr i32 %v1_8050c1a to i8*
  store i8 0, i8* %v2_8050c1a, align 1
  %v0_8050c21 = load i32, i32* @edi, align 4
  %v1_8050c21 = add i32 %v0_8050c21, 12
  %v2_8050c21 = inttoptr i32 %v1_8050c21 to i32*
  store i32 0, i32* %v2_8050c21, align 4
  br label %dec_label_pc_80506e1

dec_label_pc_8050c2d:                             ; preds = %dec_label_pc_8050894
  %v1_8050c2d = add i32 %v0_8050880, -4
  %v2_8050c2d = inttoptr i32 %v1_8050c2d to i32*
  store i32 16384, i32* %v2_8050c2d, align 4
  %v1_8050c32 = add i32 %v0_8050880, -8
  %v2_8050c32 = inttoptr i32 %v1_8050c32 to i32*
  store i32 3, i32* %v2_8050c32, align 4
  %v1_8050c34 = add i32 %v0_8050880, 1879
  store i32 %v1_8050c34, i32* %eax.global-to-local, align 4
  %v0_8050c3b = load i32, i32* @ebx, align 4
  %v1_8050c3b = add i32 %v0_8050c3b, 3
  store i32 %v1_8050c3b, i32* @ebx, align 4
  %v2_8050c3e = add i32 %v0_8050880, -12
  %v3_8050c3e = inttoptr i32 %v2_8050c3e to i32*
  store i32 %v1_8050c34, i32* %v3_8050c3e, align 4
  %v0_8050c3f = load i32, i32* @ebp, align 4
  %v1_8050c3f = add i32 %v0_8050c3f, 3
  store i32 %v1_8050c3f, i32* @ebp, align 4
  %v0_8050c42 = load i32, i32* @edi, align 4
  %v1_8050c42 = add i32 %v0_8050c42, 4
  %v2_8050c42 = inttoptr i32 %v1_8050c42 to i32*
  %v3_8050c42 = load i32, i32* %v2_8050c42, align 4
  store i32 %v3_8050c42, i32* @esi, align 4
  %v2_8050c45 = add i32 %v0_8050880, -16
  %v3_8050c45 = inttoptr i32 %v2_8050c45 to i32*
  store i32 %v3_8050c42, i32* %v3_8050c45, align 4
  %v0_8050c46 = call i32 @function_80526c4()
  %v0_8050c4b = load i32, i32* @esp, align 4
  %v1_8050c4b = add i32 %v0_8050c4b, -4
  %v2_8050c4b = inttoptr i32 %v1_8050c4b to i32*
  store i32 16384, i32* %v2_8050c4b, align 4
  %v1_8050c50 = add i32 %v0_8050c4b, -8
  %v2_8050c50 = inttoptr i32 %v1_8050c50 to i32*
  store i32 9, i32* %v2_8050c50, align 4
  %v1_8050c52 = add i32 %v0_8050c4b, 1863
  store i32 %v1_8050c52, i32* %eax.global-to-local, align 4
  %v2_8050c59 = add i32 %v0_8050c4b, -12
  %v3_8050c59 = inttoptr i32 %v2_8050c59 to i32*
  store i32 %v1_8050c52, i32* %v3_8050c59, align 4
  %v0_8050c5a = load i32, i32* @edi, align 4
  %v1_8050c5a = add i32 %v0_8050c5a, 4
  %v2_8050c5a = inttoptr i32 %v1_8050c5a to i32*
  %v3_8050c5a = load i32, i32* %v2_8050c5a, align 4
  store i32 %v3_8050c5a, i32* %ecx.global-to-local, align 4
  %v2_8050c5d = add i32 %v0_8050c4b, -16
  %v3_8050c5d = inttoptr i32 %v2_8050c5d to i32*
  store i32 %v3_8050c5a, i32* %v3_8050c5d, align 4
  %v0_8050c5e = call i32 @function_80526c4()
  store i32 %v0_8050c5e, i32* %eax.global-to-local, align 4
  %v0_8050c63 = load i32, i32* @esp, align 4
  %v1_8050c63 = add i32 %v0_8050c63, 32
  %v0_8050c66 = load i32, i32* @edi, align 4
  %v1_8050c66 = add i32 %v0_8050c66, 24
  %v2_8050c66 = inttoptr i32 %v1_8050c66 to i32*
  %v3_8050c66 = load i32, i32* %v2_8050c66, align 4
  store i32 %v3_8050c66, i32* %edx.global-to-local, align 4
  %v0_80503fb.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_80503fb.backedge

dec_label_pc_8050c6e:                             ; preds = %dec_label_pc_80502e4
  %v1_8050c6e = add i32 %v0_80502ee, 1872
  %v2_8050c6e = inttoptr i32 %v1_8050c6e to i32*
  store i32 0, i32* %v2_8050c6e, align 4
  %v0_8050c79 = load i32, i32* @esp, align 4
  %v1_8050c79 = add i32 %v0_8050c79, 1864
  %v2_8050c79 = inttoptr i32 %v1_8050c79 to i32*
  store i32 4, i32* %v2_8050c79, align 4
  %v0_8050c84 = load i32, i32* @esp, align 4
  %v1_8050c87 = add i32 %v0_8050c84, 1864
  %v2_8050c8e = add i32 %v0_8050c84, -16
  %v3_8050c8e = inttoptr i32 %v2_8050c8e to i32*
  store i32 %v1_8050c87, i32* %v3_8050c8e, align 4
  %v1_8050c8f = add i32 %v0_8050c84, 1872
  store i32 %v1_8050c8f, i32* %eax.global-to-local, align 4
  %v2_8050c96 = add i32 %v0_8050c84, -20
  %v3_8050c96 = inttoptr i32 %v2_8050c96 to i32*
  store i32 %v1_8050c8f, i32* %v3_8050c96, align 4
  %v1_8050c97 = add i32 %v0_8050c84, -24
  %v2_8050c97 = inttoptr i32 %v1_8050c97 to i32*
  store i32 4, i32* %v2_8050c97, align 4
  %v1_8050c99 = add i32 %v0_8050c84, -28
  %v2_8050c99 = inttoptr i32 %v1_8050c99 to i32*
  store i32 1, i32* %v2_8050c99, align 4
  %v0_8050c9b = load i32, i32* @edi, align 4
  %v1_8050c9b = add i32 %v0_8050c9b, 4
  %v2_8050c9b = inttoptr i32 %v1_8050c9b to i32*
  %v3_8050c9b = load i32, i32* %v2_8050c9b, align 4
  store i32 %v3_8050c9b, i32* %eax.global-to-local, align 4
  %v2_8050c9e = add i32 %v0_8050c84, -32
  %v3_8050c9e = inttoptr i32 %v2_8050c9e to i32*
  store i32 %v3_8050c9b, i32* %v3_8050c9e, align 4
  %v0_8050c9f = call i32 @function_80525f0()
  store i32 %v0_8050c9f, i32* %eax.global-to-local, align 4
  %v0_8050ca4 = load i32, i32* @esp, align 4
  %v2_8050ca7 = add i32 %v0_8050ca4, 1904
  %v3_8050ca7 = inttoptr i32 %v2_8050ca7 to i32*
  %v4_8050ca7 = load i32, i32* %v3_8050ca7, align 4
  %v5_8050ca7 = or i32 %v4_8050ca7, %v0_8050c9f
  %v6_8050ca7 = icmp eq i32 %v5_8050ca7, 0
  store i32 %v5_8050ca7, i32* %eax.global-to-local, align 4
  %v1_8050cae = icmp eq i1 %v6_8050ca7, false
  br i1 %v1_8050cae, label %dec_label_pc_8050d0f, label %dec_label_pc_8050cb0

dec_label_pc_8050cb0:                             ; preds = %dec_label_pc_8050c6e
  %v0_8050cb0 = load i32, i32* @edi, align 4
  %v1_8050cb0 = add i32 %v0_8050cb0, 12
  %v2_8050cb0 = inttoptr i32 %v1_8050cb0 to i32*
  store i32 2, i32* %v2_8050cb0, align 4
  %v1_8050cb7 = call i32 @function_804ed40(i32 ptrtoint (i32* @0 to i32))
  %v2_8050cb7 = sext i32 %v1_8050cb7 to i64
  %v0_8050cbc = load i16, i16* @global_var_80566cc.40, align 4
  %v1_8050cbc = zext i16 %v0_8050cbc to i32
  %v0_8050cc9 = load i32, i32* @global_var_8056698.41, align 8
  store i32 %v0_8050cc9, i32* @ebx, align 4
  store i32 %v1_8050cbc, i32* %ecx.global-to-local, align 4
  %v8_8050cd3 = zext i16 %v0_8050cbc to i64
  %v9_8050cd3 = udiv i64 %v2_8050cb7, %v8_8050cd3
  %v10_8050cd3 = trunc i64 %v9_8050cd3 to i32
  store i32 %v10_8050cd3, i32* %eax.global-to-local, align 4
  %v11_8050cd3 = urem i64 %v2_8050cb7, %v8_8050cd3
  %v12_8050cd3 = trunc i64 %v11_8050cd3 to i32
  store i32 %v12_8050cd3, i32* %edx.global-to-local, align 4
  %tmp154 = icmp slt i32 %v0_8050cc9, 1
  br i1 %tmp154, label %dec_label_pc_8050dd1, label %dec_label_pc_8050cdd

dec_label_pc_8050cdd:                             ; preds = %dec_label_pc_8050cb0
  %v0_8050cdd = load i32, i32* @global_var_80566c8.42, align 8
  store i32 %v0_8050cdd, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v1_8050cf2 = trunc i64 %v11_8050cd3 to i16
  br label %dec_label_pc_8050cf2

dec_label_pc_8050ce6:                             ; preds = %dec_label_pc_8050cf8, %dec_label_pc_8050cf2
  %v1_8050ce6 = add i32 %v0_8050ce6, 1
  store i32 %v1_8050ce6, i32* %ecx.global-to-local, align 4
  %v1_8050ce7 = add i32 %v0_8050ce7, 16
  store i32 %v1_8050ce7, i32* %eax.global-to-local, align 4
  %v12_8050cea = icmp eq i32 %v1_8050ce6, %v0_8050cc9
  br i1 %v12_8050cea, label %dec_label_pc_8050dd1.loopexit, label %dec_label_pc_8050cf2

dec_label_pc_8050cf2:                             ; preds = %dec_label_pc_8050ce6, %dec_label_pc_8050cdd
  %v0_8050ce6 = phi i32 [ %v1_8050ce6, %dec_label_pc_8050ce6 ], [ 0, %dec_label_pc_8050cdd ]
  %v0_8050ce7 = phi i32 [ %v1_8050ce7, %dec_label_pc_8050ce6 ], [ %v0_8050cdd, %dec_label_pc_8050cdd ]
  %v3_8050cf2 = add i32 %v0_8050ce7, 8
  %v4_8050cf2 = inttoptr i32 %v3_8050cf2 to i16*
  %v5_8050cf2 = load i16, i16* %v4_8050cf2, align 2
  %v11_8050cf2 = icmp ult i16 %v1_8050cf2, %v5_8050cf2
  br i1 %v11_8050cf2, label %dec_label_pc_8050ce6, label %dec_label_pc_8050cf8

dec_label_pc_8050cf8:                             ; preds = %dec_label_pc_8050cf2
  %v3_8050cf8 = add i32 %v0_8050ce7, 10
  %v4_8050cf8 = inttoptr i32 %v3_8050cf8 to i16*
  %v5_8050cf8 = load i16, i16* %v4_8050cf8, align 2
  %v11_8050cf8 = icmp ult i16 %v1_8050cf2, %v5_8050cf8
  %v1_8050cfc = icmp eq i1 %v11_8050cf8, false
  br i1 %v1_8050cfc, label %dec_label_pc_8050ce6, label %dec_label_pc_8050cfe.loopexit

dec_label_pc_8050cfe.loopexit:                    ; preds = %dec_label_pc_8050cf8
  br label %dec_label_pc_8050cfe

dec_label_pc_8050cfe:                             ; preds = %dec_label_pc_8050cfe.loopexit, %dec_label_pc_8050dd1
  %v0_8050d01 = phi i32 [ %v0_8050ce7, %dec_label_pc_8050cfe.loopexit ], [ 0, %dec_label_pc_8050dd1 ]
  %v0_8050cfe = load i32, i32* @edi, align 4
  %v1_8050cfe = add i32 %v0_8050cfe, 4
  %v2_8050cfe = inttoptr i32 %v1_8050cfe to i32*
  %v3_8050cfe = load i32, i32* %v2_8050cfe, align 4
  store i32 %v3_8050cfe, i32* %ecx.global-to-local, align 4
  %v2_8050d01 = inttoptr i32 %v0_8050cfe to i32*
  store i32 %v0_8050d01, i32* %v2_8050d01, align 4
  %v0_8050d03 = load i32, i32* @edi, align 4
  %v1_8050d03 = add i32 %v0_8050d03, 24
  %v2_8050d03 = inttoptr i32 %v1_8050d03 to i32*
  store i32 0, i32* %v2_8050d03, align 4
  %v0_8050301.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_8050309.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050301

dec_label_pc_8050d0f:                             ; preds = %dec_label_pc_8050c6e
  %v0_8050d12 = load i32, i32* @edi, align 4
  %v1_8050d12 = add i32 %v0_8050d12, 4
  %v2_8050d12 = inttoptr i32 %v1_8050d12 to i32*
  %v3_8050d12 = load i32, i32* %v2_8050d12, align 4
  store i32 %v3_8050d12, i32* %eax.global-to-local, align 4
  %v2_8050d15 = add i32 %v0_8050ca4, 16
  %v3_8050d15 = inttoptr i32 %v2_8050d15 to i32*
  store i32 %v3_8050d12, i32* %v3_8050d15, align 4
  %v1_8050d16 = call i32 @function_8051f81(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050d16, i32* %eax.global-to-local, align 4
  %v0_8050d1e = load i32, i32* @edi, align 4
  %v1_8050d1e = add i32 %v0_8050d1e, 4
  %v2_8050d1e = inttoptr i32 %v1_8050d1e to i32*
  store i32 -1, i32* %v2_8050d1e, align 4
  %v0_8050d25 = load i32, i32* @edi, align 4
  %v1_8050d25 = add i32 %v0_8050d25, 540
  %v2_8050d25 = inttoptr i32 %v1_8050d25 to i8*
  store i8 0, i8* %v2_8050d25, align 1
  %v0_8050d2c = load i32, i32* @edi, align 4
  %v1_8050d2c = add i32 %v0_8050d2c, 12
  %v2_8050d2c = inttoptr i32 %v1_8050d2c to i32*
  store i32 0, i32* %v2_8050d2c, align 4
  br label %dec_label_pc_8050318

dec_label_pc_8050d38:                             ; preds = %dec_label_pc_805022f
  %v3_8050d43 = add nuw nsw i32 %v2_8050d43, 1572
  %v4_8050d43 = add i32 %v3_8050d43, %v0_8050d43
  %v5_8050d43 = inttoptr i32 %v4_8050d43 to i32*
  %v6_8050d43 = load i32, i32* %v5_8050d43, align 4
  %v9_8050d43 = shl i32 1, %v1_8050d3d
  %v12_8050d43 = or i32 %v6_8050d43, %v9_8050d43
  store i32 %v12_8050d43, i32* %v5_8050d43, align 4
  %v0_8050d4b = load i32, i32* @ebx, align 4
  %v1_8050d4b = add i32 %v0_8050d4b, 4
  %v2_8050d4b = inttoptr i32 %v1_8050d4b to i32*
  %v3_8050d4b = load i32, i32* %v2_8050d4b, align 4
  store i32 %v3_8050d4b, i32* %eax.global-to-local, align 4
  %v0_8050d4e = load i32, i32* @esi, align 4
  %v2_8050d4e = sub i32 %v0_8050d4e, %v3_8050d4b
  %v8_8050d4e = xor i32 %v0_8050d4e, %v3_8050d4b
  %v9_8050d4e = xor i32 %v2_8050d4e, %v0_8050d4e
  %v10_8050d4e = and i32 %v9_8050d4e, %v8_8050d4e
  %v11_8050d4e = icmp slt i32 %v10_8050d4e, 0
  %v13_8050d4e = icmp slt i32 %v2_8050d4e, 0
  %v2_8050d50 = icmp eq i1 %v13_8050d4e, %v11_8050d4e
  br i1 %v2_8050d50, label %dec_label_pc_8050252, label %dec_label_pc_8050d56

dec_label_pc_8050d56:                             ; preds = %dec_label_pc_8050d38
  store i32 %v3_8050d4b, i32* @esi, align 4
  br label %dec_label_pc_8050252

dec_label_pc_8050d60:                             ; preds = %dec_label_pc_805021d
  %v0_8050d60 = load i32, i32* @esp, align 4
  %v1_8050d63 = add i32 %v2_805020f, 4
  %v2_8050d63 = inttoptr i32 %v1_8050d63 to i32*
  %v3_8050d63 = load i32, i32* %v2_8050d63, align 4
  store i32 %v3_8050d63, i32* %edx.global-to-local, align 4
  %v2_8050d66 = add i32 %v0_8050d60, -16
  %v3_8050d66 = inttoptr i32 %v2_8050d66 to i32*
  store i32 %v3_8050d63, i32* %v3_8050d66, align 4
  %v1_8050d67 = call i32 @function_8051f81(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050d67, i32* %eax.global-to-local, align 4
  %v0_8050d6f = load i32, i32* @ebx, align 4
  %v1_8050d6f = add i32 %v0_8050d6f, 4
  %v2_8050d6f = inttoptr i32 %v1_8050d6f to i32*
  store i32 -1, i32* %v2_8050d6f, align 4
  %v0_8050d76 = load i32, i32* @ebx, align 4
  %v1_8050d76 = add i32 %v0_8050d76, 12
  %v2_8050d76 = inttoptr i32 %v1_8050d76 to i32*
  %v3_8050d76 = load i32, i32* %v2_8050d76, align 4
  %tmp301 = icmp ult i32 %v3_8050d76, 3
  br i1 %tmp301, label %dec_label_pc_8050daf, label %dec_label_pc_8050d7c

dec_label_pc_8050d7c:                             ; preds = %dec_label_pc_8050d60
  %v1_8050d7c = add i32 %v0_8050d76, 540
  %v2_8050d7c = inttoptr i32 %v1_8050d7c to i8*
  %v3_8050d7c = load i8, i8* %v2_8050d7c, align 1
  %v4_8050d7c = zext i8 %v3_8050d7c to i32
  %v6_8050d7c = and i32 %v1_8050d67, -256
  %v7_8050d7c = or i32 %v4_8050d7c, %v6_8050d7c
  %v1_8050d82 = add i32 %v7_8050d7c, 1
  %v10_8050d82 = trunc i32 %v1_8050d82 to i8
  store i32 %v1_8050d82, i32* %eax.global-to-local, align 4
  store i8 %v10_8050d82, i8* %v2_8050d7c, align 1
  %v0_8050d89 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050d89 = trunc i32 %v0_8050d89 to i8
  %v10_8050d89 = icmp eq i8 %v1_8050d89, 10
  %v0_8050daf.pre = load i32, i32* @ebx, align 4
  br i1 %v10_8050d89, label %dec_label_pc_8050daf, label %dec_label_pc_8050d8d

dec_label_pc_8050d8d:                             ; preds = %dec_label_pc_8050d7c
  store i32 %v0_8050daf.pre, i32* @eax, align 4
  %v0_8050d8f = call i32 @function_804f4d0()
  store i32 %v0_8050d8f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050252

dec_label_pc_8050da0:                             ; preds = %dec_label_pc_8050be4
  %v0_8050da0 = load i32, i32* @edi, align 4
  store i32 %v0_8050da0, i32* @eax, align 4
  store i32 -1, i32* @ebp, align 4
  %v0_8050da5 = call i32 @function_804f4d0()
  store i32 %v0_8050da5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80506e1

dec_label_pc_8050daf:                             ; preds = %dec_label_pc_8050d7c, %dec_label_pc_8050d60
  %v0_8050daf = phi i32 [ %v0_8050d76, %dec_label_pc_8050d60 ], [ %v0_8050daf.pre, %dec_label_pc_8050d7c ]
  %v1_8050daf = add i32 %v0_8050daf, 540
  %v2_8050daf = inttoptr i32 %v1_8050daf to i8*
  store i8 0, i8* %v2_8050daf, align 1
  %v0_8050db6 = load i32, i32* @ebx, align 4
  %v1_8050db6 = add i32 %v0_8050db6, 12
  %v2_8050db6 = inttoptr i32 %v1_8050db6 to i32*
  store i32 0, i32* %v2_8050db6, align 4
  br label %dec_label_pc_8050252

dec_label_pc_8050dc2:                             ; preds = %dec_label_pc_80501fa
  br i1 %v5_8050214, label %dec_label_pc_8050252, label %dec_label_pc_8050dca

dec_label_pc_8050dca:                             ; preds = %dec_label_pc_8050dc2
  store i32 5, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805021d

dec_label_pc_8050dd1.loopexit:                    ; preds = %dec_label_pc_8050ce6
  br label %dec_label_pc_8050dd1

dec_label_pc_8050dd1:                             ; preds = %dec_label_pc_8050dd1.loopexit, %dec_label_pc_8050cb0
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050cfe

dec_label_pc_8050dd8:                             ; preds = %dec_label_pc_80508cc
  %v1_8050dd8 = add i32 %v0_80503b5, 56
  %v2_8050dd8 = inttoptr i32 %v1_8050dd8 to i32*
  %v3_8050dd8 = load i32, i32* %v2_8050dd8, align 4
  store i32 %v3_8050dd8, i32* %eax.global-to-local, align 4
  %v1_8050ddc = inttoptr i32 %v3_8050dd8 to i32*
  store i32 104, i32* %v1_8050ddc, align 4
  %v0_80508e8.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80508e8

dec_label_pc_8050de7:                             ; preds = %dec_label_pc_80508e8
  store i32 %v0_8050de7, i32* @eax, align 4
  %v0_8050de9 = call i32 @function_804f4d0()
  store i32 %v0_8050de9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050318

dec_label_pc_8050df3:                             ; preds = %dec_label_pc_805089e
  %v11_8050df3 = icmp eq i8 %v2_805089e, -5
  %v1_8050df5 = icmp eq i1 %v11_8050df3, false
  br i1 %v1_8050df5, label %dec_label_pc_805042b, label %dec_label_pc_8050dfb

dec_label_pc_8050dfb:                             ; preds = %dec_label_pc_8050df3
  store i8 -3, i8* %v1_805089e, align 1
  %v4_805042b.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805042b

dec_label_pc_8050e1e:                             ; preds = %dec_label_pc_805069c
  %v1_8050e1e = add i32 %v0_80506b7, 1
  %v8_8050e1e = icmp eq i32 %v1_8050e1e, 0
  store i32 %v1_8050e1e, i32* %eax.global-to-local, align 4
  br i1 %v8_8050e1e, label %dec_label_pc_80506c4, label %dec_label_pc_8050e25

dec_label_pc_8050e25:                             ; preds = %dec_label_pc_8050e1e
  %v0_8050e25 = load i32, i32* @ecx, align 4
  %v1_8050e25 = load i32, i32* @esp, align 4
  %v2_8050e25 = add i32 %v1_8050e25, -4
  %v3_8050e25 = inttoptr i32 %v2_8050e25 to i32*
  store i32 %v0_8050e25, i32* %v3_8050e25, align 4
  %v1_8050e26 = add i32 %v1_8050e25, -8
  %v2_8050e26 = inttoptr i32 %v1_8050e26 to i32*
  store i32 0, i32* %v2_8050e26, align 4
  %v1_8050e28 = add i32 %v1_8050e25, -12
  %v2_8050e28 = inttoptr i32 %v1_8050e28 to i32*
  store i32 1, i32* %v2_8050e28, align 4
  %v1_8050e2a = add i32 %v1_8050e25, -16
  %v2_8050e2a = inttoptr i32 %v1_8050e2a to i32*
  store i32 2, i32* %v2_8050e2a, align 4
  %v4_8050e2c = call i32 @function_8052775(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_8050e31 = load i32, i32* @esp, align 4
  %v2_8050e31 = add i32 %v1_8050e31, 48
  %v3_8050e31 = inttoptr i32 %v2_8050e31 to i32*
  store i32 %v4_8050e2c, i32* %v3_8050e31, align 4
  %v0_8050e35 = load i32, i32* @esp, align 4
  %v1_8050e38 = add i32 %v4_8050e2c, 1
  %v8_8050e38 = icmp eq i32 %v1_8050e38, 0
  store i32 %v1_8050e38, i32* @eax, align 4
  %v2_8050069 = inttoptr i32 %v0_8050e35 to i32*
  br i1 %v8_8050e38, label %dec_label_pc_8050066, label %dec_label_pc_8050e3f

dec_label_pc_8050e3f:                             ; preds = %dec_label_pc_8050e25
  store i32 18, i32* %v2_8050069, align 4
  %v2_8050e44 = call i32 @function_8051090(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050e44, i32* %eax.global-to-local, align 4
  %v0_8050e49 = load i32, i32* @esp, align 4
  %v1_8050e49 = inttoptr i32 %v0_8050e49 to i32*
  store i32 19, i32* %v1_8050e49, align 4
  %v2_8050e50 = call i32 @function_8051090(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050e50, i32* %eax.global-to-local, align 4
  %v0_8050e55 = load i32, i32* @esp, align 4
  %v1_8050e55 = inttoptr i32 %v0_8050e55 to i32*
  %v2_8050e55 = load i32, i32* %v1_8050e55, align 4
  store i32 %v2_8050e55, i32* %eax.global-to-local, align 4
  %v3_8050e55 = add i32 %v0_8050e55, 4
  %v1_8050e56 = inttoptr i32 %v3_8050e55 to i32*
  %v2_8050e56 = load i32, i32* %v1_8050e56, align 4
  store i32 %v2_8050e56, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_8050e56, align 4
  store i32 18, i32* %v1_8050e55, align 4
  %v3_8050e5b = call i32 @function_8050fe0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050e5b, i32* %eax.global-to-local, align 4
  %v1_8050e60 = load i32, i32* @esp, align 4
  %v2_8050e60 = inttoptr i32 %v1_8050e60 to i32*
  store i32 %v3_8050e5b, i32* %v2_8050e60, align 4
  %v0_8050e63 = call i32 @function_804f010()
  store i32 %v0_8050e63, i32* %eax.global-to-local, align 4
  %v0_8050e68 = load i32, i32* @esp, align 4
  store i32 %v0_8050e63, i32* @esi, align 4
  %v2_8050e6d = icmp eq i32 %v0_8050e63, 0
  br i1 %v2_8050e6d, label %dec_label_pc_80506c4, label %dec_label_pc_8050e75

dec_label_pc_8050e75:                             ; preds = %dec_label_pc_8050e3f
  %v1_8050e75 = add i32 %v0_8050e68, 1844
  %v2_8050e75 = inttoptr i32 %v1_8050e75 to i16*
  store i16 2, i16* %v2_8050e75, align 2
  %v2_8050e7f = add i32 %v0_8050e63, 4
  %v3_8050e7f = inttoptr i32 %v2_8050e7f to i32*
  %v4_8050e7f = load i32, i32* %v3_8050e7f, align 4
  store i32 %v4_8050e7f, i32* @ebx, align 4
  %v1_8050e82 = call i32 @function_804ed40(i32 ptrtoint (i32* @0 to i32))
  %v2_8050e82 = sext i32 %v1_8050e82 to i64
  store i32 %v1_8050e82, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_8050e89 = load i32, i32* @esi, align 4
  %v1_8050e89 = inttoptr i32 %v0_8050e89 to i8*
  %v2_8050e89 = load i8, i8* %v1_8050e89, align 1
  %v3_8050e89 = zext i8 %v2_8050e89 to i32
  store i32 %v3_8050e89, i32* %ecx.global-to-local, align 4
  %v8_8050e8f = zext i8 %v2_8050e89 to i64
  %v9_8050e8f = udiv i64 %v2_8050e82, %v8_8050e8f
  %v10_8050e8f = trunc i64 %v9_8050e8f to i32
  store i32 %v10_8050e8f, i32* %eax.global-to-local, align 4
  %v11_8050e8f = urem i64 %v2_8050e82, %v8_8050e8f
  %v12_8050e8f = trunc i64 %v11_8050e8f to i32
  store i32 %v12_8050e8f, i32* %edx.global-to-local, align 4
  %v0_8050e91 = load i32, i32* @ebx, align 4
  %v2_8050e91 = mul nuw nsw i32 %v12_8050e8f, 4
  %v3_8050e91 = add i32 %v2_8050e91, %v0_8050e91
  %v4_8050e91 = inttoptr i32 %v3_8050e91 to i32*
  %v5_8050e91 = load i32, i32* %v4_8050e91, align 4
  store i32 %v5_8050e91, i32* %eax.global-to-local, align 4
  %v1_8050e94 = load i32, i32* @esp, align 4
  %v2_8050e94 = add i32 %v1_8050e94, 1832
  %v3_8050e94 = inttoptr i32 %v2_8050e94 to i32*
  store i32 %v5_8050e91, i32* %v3_8050e94, align 4
  %v0_8050e9b = load i32, i32* @edi, align 4
  %v1_8050e9b = load i32, i32* @esp, align 4
  %v2_8050e9b = add i32 %v1_8050e9b, -4
  %v3_8050e9b = inttoptr i32 %v2_8050e9b to i32*
  store i32 %v0_8050e9b, i32* %v3_8050e9b, align 4
  %v0_8050e9c = load i32, i32* @edi, align 4
  %v2_8050e9c = add i32 %v1_8050e9b, -8
  %v3_8050e9c = inttoptr i32 %v2_8050e9c to i32*
  store i32 %v0_8050e9c, i32* %v3_8050e9c, align 4
  %v1_8050e9d = add i32 %v1_8050e9b, -12
  %v2_8050e9d = inttoptr i32 %v1_8050e9d to i32*
  store i32 0, i32* %v2_8050e9d, align 4
  %v1_8050e9f = add i32 %v1_8050e9b, -16
  %v2_8050e9f = inttoptr i32 %v1_8050e9f to i32*
  store i32 19, i32* %v2_8050e9f, align 4
  %v3_8050ea1 = call i32 @function_8050fe0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  %v4_8050ea1 = inttoptr i32 %v3_8050ea1 to i16*
  store i32 %v3_8050ea1, i32* %eax.global-to-local, align 4
  %v3_8050ea6 = load i16, i16* %v4_8050ea1, align 2
  %v4_8050ea6 = zext i16 %v3_8050ea6 to i32
  %v7_8050ea6 = and i32 %v3_8050ea1, -65536
  %v8_8050ea6 = or i32 %v4_8050ea6, %v7_8050ea6
  store i32 %v8_8050ea6, i32* %eax.global-to-local, align 4
  %v0_8050ea9 = load i32, i32* @esi, align 4
  %v1_8050ea9 = load i32, i32* @esp, align 4
  %v2_8050ea9 = inttoptr i32 %v1_8050ea9 to i32*
  store i32 %v0_8050ea9, i32* %v2_8050ea9, align 4
  %v0_8050eac = load i32, i32* %eax.global-to-local, align 4
  %v1_8050eac = trunc i32 %v0_8050eac to i16
  %v2_8050eac = load i32, i32* @esp, align 4
  %v3_8050eac = add i32 %v2_8050eac, 1846
  %v4_8050eac = inttoptr i32 %v3_8050eac to i16*
  store i16 %v1_8050eac, i16* %v4_8050eac, align 2
  %v0_8050eb4 = call i32 @function_804efd0()
  store i32 %v0_8050eb4, i32* %eax.global-to-local, align 4
  %v0_8050eb9 = load i32, i32* @esp, align 4
  %v1_8050eb9 = inttoptr i32 %v0_8050eb9 to i32*
  store i32 18, i32* %v1_8050eb9, align 4
  %v2_8050ec0 = call i32 @function_8051010(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050ec0, i32* %eax.global-to-local, align 4
  %v0_8050ec5 = load i32, i32* @esp, align 4
  %v1_8050ec5 = inttoptr i32 %v0_8050ec5 to i32*
  store i32 19, i32* %v1_8050ec5, align 4
  %v2_8050ecc = call i32 @function_8051010(i8 ptrtoint (i32* @0 to i8))
  %v0_8050ed1 = load i32, i32* @esp, align 4
  %v1_8050ed1 = add i32 %v0_8050ed1, 1844
  store i32 %v1_8050ed1, i32* %eax.global-to-local, align 4
  %v1_8050edb = add i32 %v0_8050ed1, 8
  %v2_8050edb = inttoptr i32 %v1_8050edb to i32*
  store i32 16, i32* %v2_8050edb, align 4
  %v0_8050edd = load i32, i32* %eax.global-to-local, align 4
  %v2_8050edd = add i32 %v0_8050ed1, 4
  %v3_8050edd = inttoptr i32 %v2_8050edd to i32*
  store i32 %v0_8050edd, i32* %v3_8050edd, align 4
  %v1_8050ede = add i32 %v0_8050ed1, 48
  %v2_8050ede = inttoptr i32 %v1_8050ede to i32*
  %v3_8050ede = load i32, i32* %v2_8050ede, align 4
  %v3_8050ee2 = inttoptr i32 %v0_8050ed1 to i32*
  store i32 %v3_8050ede, i32* %v3_8050ee2, align 4
  %v3_8050ee3 = call i32 @function_805259a(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8050ee8 = load i32, i32* @esp, align 4
  %v1_8050ee8 = add i32 %v0_8050ee8, 16
  %v1_8050eeb = add i32 %v3_8050ee3, 1
  %v8_8050eeb = icmp eq i32 %v1_8050eeb, 0
  store i32 %v1_8050eeb, i32* %eax.global-to-local, align 4
  %v1_8050eec = icmp eq i1 %v8_8050eeb, false
  br i1 %v1_8050eec, label %dec_label_pc_8050f07, label %dec_label_pc_8050eee

dec_label_pc_8050eee:                             ; preds = %dec_label_pc_8050e75
  br label %dec_label_pc_8050ef1

dec_label_pc_8050ef1:                             ; preds = %dec_label_pc_8050f07, %dec_label_pc_8050eee
  %storemerge4.in = phi i32 [ %v0_8050ee8, %dec_label_pc_8050eee ], [ %v0_8050fce, %dec_label_pc_8050f07 ]
  %v1_8050ef1 = add i32 %storemerge4.in, 48
  %v2_8050ef1 = inttoptr i32 %v1_8050ef1 to i32*
  %v3_8050ef1 = load i32, i32* %v2_8050ef1, align 4
  store i32 %v3_8050ef1, i32* @edi, align 4
  %v3_8050ef5 = inttoptr i32 %storemerge4.in to i32*
  store i32 %v3_8050ef1, i32* %v3_8050ef5, align 4
  %v1_8050ef6 = call i32 @function_8051f81(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050ef6, i32* @eax, align 4
  %v0_8050efb = load i32, i32* @esp, align 4
  %v1_8050efb = inttoptr i32 %v0_8050efb to i32*
  store i32 0, i32* %v1_8050efb, align 4
  %v1_8050f02 = call i32 @function_8053ac9(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050f02, i32* %eax.global-to-local, align 4
  %v0_8050f07.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050f07

dec_label_pc_8050f07:                             ; preds = %dec_label_pc_8050e75, %dec_label_pc_8050ef1
  %v0_8050f07 = phi i32 [ %v1_8050ee8, %dec_label_pc_8050e75 ], [ %v0_8050f07.pre, %dec_label_pc_8050ef1 ]
  %v1_8050f07 = add i32 %v0_8050f07, 1864
  %v2_8050f07 = inttoptr i32 %v1_8050f07 to i8*
  store i8 0, i8* %v2_8050f07, align 1
  %v0_8050f0f = load i32, i32* @esp, align 4
  %v1_8050f0f = add i32 %v0_8050f0f, -4
  %v2_8050f0f = inttoptr i32 %v1_8050f0f to i32*
  store i32 16384, i32* %v2_8050f0f, align 4
  %v1_8050f14 = add i32 %v0_8050f0f, -8
  %v2_8050f14 = inttoptr i32 %v1_8050f14 to i32*
  store i32 1, i32* %v2_8050f14, align 4
  %v1_8050f16 = add i32 %v0_8050f0f, 1864
  store i32 %v1_8050f16, i32* %eax.global-to-local, align 4
  %v2_8050f1d = add i32 %v0_8050f0f, -12
  %v3_8050f1d = inttoptr i32 %v2_8050f1d to i32*
  store i32 %v1_8050f16, i32* %v3_8050f1d, align 4
  %v1_8050f1e = add i32 %v0_8050f0f, 32
  %v2_8050f1e = inttoptr i32 %v1_8050f1e to i32*
  %v3_8050f1e = load i32, i32* %v2_8050f1e, align 4
  store i32 %v3_8050f1e, i32* @ebx, align 4
  %v2_8050f22 = add i32 %v0_8050f0f, -16
  %v3_8050f22 = inttoptr i32 %v2_8050f22 to i32*
  store i32 %v3_8050f1e, i32* %v3_8050f22, align 4
  %v0_8050f23 = call i32 @function_80526c4()
  %v0_8050f28 = load i32, i32* @esp, align 4
  %v1_8050f28 = add i32 %v0_8050f28, -4
  %v2_8050f28 = inttoptr i32 %v1_8050f28 to i32*
  store i32 16384, i32* %v2_8050f28, align 4
  %v1_8050f2d = add i32 %v0_8050f28, -8
  %v2_8050f2d = inttoptr i32 %v1_8050f2d to i32*
  store i32 4, i32* %v2_8050f2d, align 4
  %v1_8050f2f = add i32 %v0_8050f28, 1888
  store i32 %v1_8050f2f, i32* %eax.global-to-local, align 4
  %v2_8050f36 = add i32 %v0_8050f28, -12
  %v3_8050f36 = inttoptr i32 %v2_8050f36 to i32*
  store i32 %v1_8050f2f, i32* %v3_8050f36, align 4
  %v1_8050f37 = add i32 %v0_8050f28, 48
  %v2_8050f37 = inttoptr i32 %v1_8050f37 to i32*
  %v3_8050f37 = load i32, i32* %v2_8050f37, align 4
  store i32 %v3_8050f37, i32* %ecx.global-to-local, align 4
  %v2_8050f3b = add i32 %v0_8050f28, -16
  %v3_8050f3b = inttoptr i32 %v2_8050f3b to i32*
  store i32 %v3_8050f37, i32* %v3_8050f3b, align 4
  %v0_8050f3c = call i32 @function_80526c4()
  %v0_8050f41 = load i32, i32* @esp, align 4
  %v1_8050f44 = add i32 %v0_8050f41, 28
  %v2_8050f44 = inttoptr i32 %v1_8050f44 to i32*
  store i32 16384, i32* %v2_8050f44, align 4
  %v1_8050f49 = add i32 %v0_8050f41, 24
  %v2_8050f49 = inttoptr i32 %v1_8050f49 to i32*
  store i32 2, i32* %v2_8050f49, align 4
  %v1_8050f4b = add i32 %v0_8050f41, 1914
  store i32 %v1_8050f4b, i32* %eax.global-to-local, align 4
  %v2_8050f52 = add i32 %v0_8050f41, 20
  %v3_8050f52 = inttoptr i32 %v2_8050f52 to i32*
  store i32 %v1_8050f4b, i32* %v3_8050f52, align 4
  %v1_8050f53 = add i32 %v0_8050f41, 64
  %v2_8050f53 = inttoptr i32 %v1_8050f53 to i32*
  %v3_8050f53 = load i32, i32* %v2_8050f53, align 4
  store i32 %v3_8050f53, i32* %edx.global-to-local, align 4
  %v2_8050f57 = add i32 %v0_8050f41, 16
  %v3_8050f57 = inttoptr i32 %v2_8050f57 to i32*
  store i32 %v3_8050f53, i32* %v3_8050f57, align 4
  %v0_8050f58 = call i32 @function_80526c4()
  store i32 %v0_8050f58, i32* %eax.global-to-local, align 4
  %v0_8050f5d = load i32, i32* @esp, align 4
  %v1_8050f5d = add i32 %v0_8050f5d, -4
  %v2_8050f5d = inttoptr i32 %v1_8050f5d to i32*
  store i32 16384, i32* %v2_8050f5d, align 4
  %v1_8050f62 = add i32 %v0_8050f5d, -8
  %v2_8050f62 = inttoptr i32 %v1_8050f62 to i32*
  store i32 1, i32* %v2_8050f62, align 4
  %v1_8050f64 = add i32 %v0_8050f5d, 52
  %v2_8050f64 = inttoptr i32 %v1_8050f64 to i32*
  %v3_8050f64 = load i32, i32* %v2_8050f64, align 4
  %v1_8050f68 = add i32 %v3_8050f64, 12
  store i32 %v1_8050f68, i32* %eax.global-to-local, align 4
  %v2_8050f6b = add i32 %v0_8050f5d, -12
  %v3_8050f6b = inttoptr i32 %v2_8050f6b to i32*
  store i32 %v1_8050f68, i32* %v3_8050f6b, align 4
  %v1_8050f6c = add i32 %v0_8050f5d, 48
  %v2_8050f6c = inttoptr i32 %v1_8050f6c to i32*
  %v3_8050f6c = load i32, i32* %v2_8050f6c, align 4
  store i32 %v3_8050f6c, i32* %eax.global-to-local, align 4
  %v2_8050f70 = add i32 %v0_8050f5d, -16
  %v3_8050f70 = inttoptr i32 %v2_8050f70 to i32*
  store i32 %v3_8050f6c, i32* %v3_8050f70, align 4
  %v0_8050f71 = call i32 @function_80526c4()
  %v0_8050f76 = load i32, i32* @esp, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8050f7b = add i32 %v0_8050f76, 28
  %v2_8050f7b = inttoptr i32 %v1_8050f7b to i32*
  store i32 16384, i32* %v2_8050f7b, align 4
  %v1_8050f80 = add i32 %v0_8050f76, 68
  %v2_8050f80 = inttoptr i32 %v1_8050f80 to i32*
  %v3_8050f80 = load i32, i32* %v2_8050f80, align 4
  store i32 %v3_8050f80, i32* %edx.global-to-local, align 4
  %v1_8050f84 = add i32 %v3_8050f80, 12
  %v2_8050f84 = inttoptr i32 %v1_8050f84 to i8*
  %v3_8050f84 = load i8, i8* %v2_8050f84, align 1
  %v4_8050f84 = zext i8 %v3_8050f84 to i32
  %v5_8050f84 = load i32, i32* %eax.global-to-local, align 4
  %v6_8050f84 = and i32 %v5_8050f84, -256
  %v7_8050f84 = or i32 %v6_8050f84, %v4_8050f84
  store i32 %v7_8050f84, i32* %eax.global-to-local, align 4
  %v2_8050f87 = add i32 %v0_8050f76, 24
  %v3_8050f87 = inttoptr i32 %v2_8050f87 to i32*
  store i32 %v7_8050f84, i32* %v3_8050f87, align 4
  %v0_8050f88 = load i32, i32* %edx.global-to-local, align 4
  %v1_8050f88 = inttoptr i32 %v0_8050f88 to i32*
  %v2_8050f88 = load i32, i32* %v1_8050f88, align 4
  store i32 %v2_8050f88, i32* %eax.global-to-local, align 4
  %v2_8050f8a = add i32 %v0_8050f76, 20
  %v3_8050f8a = inttoptr i32 %v2_8050f8a to i32*
  store i32 %v2_8050f88, i32* %v3_8050f8a, align 4
  %v1_8050f8b = add i32 %v0_8050f76, 64
  %v2_8050f8b = inttoptr i32 %v1_8050f8b to i32*
  %v3_8050f8b = load i32, i32* %v2_8050f8b, align 4
  store i32 %v3_8050f8b, i32* %eax.global-to-local, align 4
  %v2_8050f8f = add i32 %v0_8050f76, 16
  %v3_8050f8f = inttoptr i32 %v2_8050f8f to i32*
  store i32 %v3_8050f8b, i32* %v3_8050f8f, align 4
  %v0_8050f90 = call i32 @function_80526c4()
  store i32 %v0_8050f90, i32* %eax.global-to-local, align 4
  %v0_8050f95 = load i32, i32* @esp, align 4
  %v1_8050f95 = add i32 %v0_8050f95, -4
  %v2_8050f95 = inttoptr i32 %v1_8050f95 to i32*
  store i32 16384, i32* %v2_8050f95, align 4
  %v1_8050f9a = add i32 %v0_8050f95, -8
  %v2_8050f9a = inttoptr i32 %v1_8050f9a to i32*
  store i32 1, i32* %v2_8050f9a, align 4
  %v1_8050f9c = add i32 %v0_8050f95, 52
  %v2_8050f9c = inttoptr i32 %v1_8050f9c to i32*
  %v3_8050f9c = load i32, i32* %v2_8050f9c, align 4
  %v1_8050fa0 = add i32 %v3_8050f9c, 13
  store i32 %v1_8050fa0, i32* %eax.global-to-local, align 4
  %v2_8050fa3 = add i32 %v0_8050f95, -12
  %v3_8050fa3 = inttoptr i32 %v2_8050fa3 to i32*
  store i32 %v1_8050fa0, i32* %v3_8050fa3, align 4
  %v1_8050fa4 = add i32 %v0_8050f95, 48
  %v2_8050fa4 = inttoptr i32 %v1_8050fa4 to i32*
  %v3_8050fa4 = load i32, i32* %v2_8050fa4, align 4
  store i32 %v3_8050fa4, i32* %eax.global-to-local, align 4
  %v2_8050fa8 = add i32 %v0_8050f95, -16
  %v3_8050fa8 = inttoptr i32 %v2_8050fa8 to i32*
  store i32 %v3_8050fa4, i32* %v3_8050fa8, align 4
  %v0_8050fa9 = call i32 @function_80526c4()
  %v0_8050fae = load i32, i32* @esp, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8050fb3 = add i32 %v0_8050fae, 28
  %v2_8050fb3 = inttoptr i32 %v1_8050fb3 to i32*
  store i32 16384, i32* %v2_8050fb3, align 4
  %v1_8050fb8 = add i32 %v0_8050fae, 68
  %v2_8050fb8 = inttoptr i32 %v1_8050fb8 to i32*
  %v3_8050fb8 = load i32, i32* %v2_8050fb8, align 4
  store i32 %v3_8050fb8, i32* %ecx.global-to-local, align 4
  %v1_8050fbc = add i32 %v3_8050fb8, 13
  %v2_8050fbc = inttoptr i32 %v1_8050fbc to i8*
  %v3_8050fbc = load i8, i8* %v2_8050fbc, align 1
  %v4_8050fbc = zext i8 %v3_8050fbc to i32
  %v5_8050fbc = load i32, i32* %eax.global-to-local, align 4
  %v6_8050fbc = and i32 %v5_8050fbc, -256
  %v7_8050fbc = or i32 %v6_8050fbc, %v4_8050fbc
  store i32 %v7_8050fbc, i32* %eax.global-to-local, align 4
  %v2_8050fbf = add i32 %v0_8050fae, 24
  %v3_8050fbf = inttoptr i32 %v2_8050fbf to i32*
  store i32 %v7_8050fbc, i32* %v3_8050fbf, align 4
  %v0_8050fc0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8050fc0 = add i32 %v0_8050fc0, 4
  %v2_8050fc0 = inttoptr i32 %v1_8050fc0 to i32*
  %v3_8050fc0 = load i32, i32* %v2_8050fc0, align 4
  store i32 %v3_8050fc0, i32* %eax.global-to-local, align 4
  %v2_8050fc3 = add i32 %v0_8050fae, 20
  %v3_8050fc3 = inttoptr i32 %v2_8050fc3 to i32*
  store i32 %v3_8050fc0, i32* %v3_8050fc3, align 4
  %v1_8050fc4 = add i32 %v0_8050fae, 64
  %v2_8050fc4 = inttoptr i32 %v1_8050fc4 to i32*
  %v3_8050fc4 = load i32, i32* %v2_8050fc4, align 4
  store i32 %v3_8050fc4, i32* %eax.global-to-local, align 4
  %v2_8050fc8 = add i32 %v0_8050fae, 16
  %v3_8050fc8 = inttoptr i32 %v2_8050fc8 to i32*
  store i32 %v3_8050fc4, i32* %v3_8050fc8, align 4
  %v0_8050fc9 = call i32 @function_80526c4()
  store i32 %v0_8050fc9, i32* %eax.global-to-local, align 4
  %v0_8050fce = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050ef1

; uselistorder directives
  uselistorder i64 %v8_8050e8f, { 1, 0 }
  uselistorder i32 %v1_8050e82, { 1, 0 }
  uselistorder i32* %v2_8050069, { 1, 0 }
  uselistorder i32 %v2_8050d4e, { 1, 0 }
  uselistorder i32 %v3_8050d4b, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8050ce7, { 0, 2, 3, 1 }
  uselistorder i32 %v1_8050ce6, { 1, 0, 2 }
  uselistorder i16 %v1_8050cf2, { 1, 0 }
  uselistorder i64 %v8_8050cd3, { 1, 0 }
  uselistorder i32 %v3_8050c66, { 1, 0 }
  uselistorder i32 %v0_8050c66, { 1, 0 }
  uselistorder i32 %v0_8050c5e, { 1, 0 }
  uselistorder i32 %v1_8050b6b, { 1, 2, 0 }
  uselistorder i32 %v1_8050af2, { 1, 2, 0 }
  uselistorder i32 %v1_8050a79, { 1, 2, 0 }
  uselistorder i32 %v1_8050a00, { 1, 2, 0 }
  uselistorder i32 %v0_80509ba, { 1, 0 }
  uselistorder i32 %v0_8050969, { 1, 0 }
  uselistorder i32 %v0_8050de7, { 1, 0 }
  uselistorder i32 %v7_80508b8, { 1, 0 }
  uselistorder i32 %v0_80508b8, { 1, 2, 0 }
  uselistorder i32 %v6_80508ab, { 1, 0 }
  uselistorder i32 %v0_80508ab, { 0, 2, 1 }
  uselistorder i32 %v6_805089e, { 1, 0 }
  uselistorder i32 %v2_805088a, { 1, 0, 2 }
  uselistorder i32 %v1_8050887, { 1, 0, 2 }
  uselistorder i32 %v0_8050884, { 1, 0 }
  uselistorder i32 %v0_8050880, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32 %v2_80503fb, { 1, 0 }
  uselistorder i32 %v0_80503fb, { 1, 2, 4, 3, 0 }
  uselistorder i32 %v1_80503fb, { 0, 2, 1 }
  uselistorder i32 %v0_8050479128, { 1, 0 }
  uselistorder i32 %v1_8050800, { 2, 1, 0 }
  uselistorder i32 %v9_80507cf, { 1, 0 }
  uselistorder i32 %v0_8050a79, { 0, 1, 3, 2 }
  uselistorder i32 %v9_805073c, { 1, 0 }
  uselistorder i32 %v1_8050735, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v0_8050735, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v3_805070c, { 2, 1, 0, 3 }
  uselistorder i32 %v2_80506e6, { 1, 2, 0 }
  uselistorder i32 %v1_80506e6, { 1, 2, 0, 3 }
  uselistorder i32 %v3_80506e1, { 3, 2, 0, 1, 4, 5, 6 }
  uselistorder i32 %v0_80506b7, { 1, 0, 2 }
  uselistorder i32 %v0_805068b, { 0, 2, 1 }
  uselistorder i32 %v0_8050664, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32* %v1_8050bee, { 0, 2, 1 }
  uselistorder i32 %v0_805061b, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v1_80505f2, { 2, 1, 0 }
  uselistorder i32 %v9_80505c1, { 1, 0 }
  uselistorder i32 %v0_8050a00, { 0, 1, 3, 2 }
  uselistorder i32 %v1_80505ad, { 2, 1, 0 }
  uselistorder i32 %v9_805057c, { 1, 0 }
  uselistorder i32 %v0_8050af2, { 0, 1, 3, 2 }
  uselistorder i32 %v0_8050552, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8050542, { 2, 1, 0 }
  uselistorder i32 %v9_805051a, { 1, 0 }
  uselistorder i32 %v0_80509ae, { 0, 1, 3, 2 }
  uselistorder i32 %v0_80504f3, { 1, 0, 2, 3 }
  uselistorder i32 %v0_80504d5, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v0_80504d0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_80504c0, { 2, 1, 0 }
  uselistorder i32 %v9_805048f, { 1, 0 }
  uselistorder i32 %v0_805095d, { 0, 1, 3, 2 }
  uselistorder i32 %v2_805046d, { 1, 0 }
  uselistorder i32 %v0_805046d, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v3_8050467, { 0, 1, 3, 2 }
  uselistorder i32 %v0_8050467, { 0, 2, 1 }
  uselistorder i32 %v0_8050462, { 1, 0 }
  uselistorder i32 %v0_805043d, { 1, 0, 2 }
  uselistorder i32 %v1_8050424, { 1, 0, 2 }
  uselistorder i32 %v1_8050408, { 1, 0, 2 }
  uselistorder i32 %v0_8050820, { 1, 0, 2 }
  uselistorder i32 %v0_805080b, { 3, 0, 1, 2 }
  uselistorder i32 %v0_8050479129, { 3, 0, 1, 2 }
  uselistorder i32 %v2_80503fb18, { 1, 0 }
  uselistorder i32 %v3_80503e2, { 1, 0 }
  uselistorder i32 %v0_80503e2, { 7, 21, 8, 19, 9, 18, 10, 20, 11, 16, 12, 15, 0, 14, 22, 17, 13, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 %v1_80503cd, { 0, 2, 1 }
  uselistorder i32 %v0_80503c9, { 1, 0 }
  uselistorder i32 %v0_80503b0, { 1, 4, 0, 2, 3, 5 }
  uselistorder i32 %v1_80503a6, { 1, 0 }
  uselistorder i32 %v1_805036d, { 2, 1, 0 }
  uselistorder i32 %v9_805033c, { 1, 0 }
  uselistorder i32 %v0_8050b6b, { 0, 1, 3, 2 }
  uselistorder i32 %v1_8050327, { 1, 0 }
  uselistorder i32 %v0_8050327, { 0, 2, 3, 1 }
  uselistorder i32 %v1_8050306, { 1, 0 }
  uselistorder i32 %v2_8050303, { 1, 0 }
  uselistorder i32 %v0_8050301, { 1, 0 }
  uselistorder i32 %v0_80502ee, { 2, 1, 0 }
  uselistorder i32 %v1_80502eb, { 1, 0 }
  uselistorder i32 %v2_80502e8, { 1, 0 }
  uselistorder i32 %v3_80502dc, { 3, 1, 0, 2, 4 }
  uselistorder i32 %v0_80502cf, { 1, 0 }
  uselistorder i32 %v2_8050282, { 1, 0 }
  uselistorder i32 %v1_8050261, { 1, 0 }
  uselistorder i32 %v0_8050261, { 0, 2, 3, 1 }
  uselistorder i32 %v2_805024c, { 1, 0 }
  uselistorder i32 %v3_8050249, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8050d40, { 1, 0 }
  uselistorder i32 %v1_8050d3d, { 2, 1, 0 }
  uselistorder i32 %v3_8050211, { 1, 0, 2 }
  uselistorder i32 %v2_805020f, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_8050204, { 1, 0 }
  uselistorder i32 %v1_80501af, { 1, 0 }
  uselistorder i32 %v1_80501a4, { 1, 0 }
  uselistorder i32 %v0_80501a4, { 1, 0 }
  uselistorder i32 %v0_80501ad, { 0, 3, 2, 1 }
  uselistorder i32 %v1_805017a, { 1, 0 }
  uselistorder i32 %v0_805017a, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v6_805016c, { 1, 0, 2 }
  uselistorder i32 %v4_805012f, { 1, 2, 0 }
  uselistorder i32 %v3_80500fe, { 1, 0, 2 }
  uselistorder i32 %v0_8050082, { 0, 2, 1 }
  uselistorder i32 %v0_8050079, { 0, 3, 2, 1 }
  uselistorder i32 %v0_804fe3f65, { 1, 0 }
  uselistorder i32 %v0_805005c, { 2, 1, 0 }
  uselistorder i8 %v1_805002e, { 1, 0 }
  uselistorder i8 %v2_8050008, { 0, 4, 5, 6, 7, 8, 10, 9, 3, 2, 1 }
  uselistorder i32 %v2_804ffff, { 4, 8, 6, 1, 0, 2, 3, 5, 7 }
  uselistorder i32 %v5_804fffd, { 3, 2, 5, 4, 1, 0 }
  uselistorder i32 %v1_804fff7, { 3, 0, 1, 2 }
  uselistorder i32 %v1_804fff2, { 2, 1, 0, 3 }
  uselistorder i32 %v1_804ffa6, { 1, 0 }
  uselistorder i32 %v0_804fef5, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_804fef0, { 1, 0 }
  uselistorder i32 %v1_804fecd, { 0, 2, 1 }
  uselistorder i32 %v0_804fe2d, { 2, 0, 1 }
  uselistorder i32 %v0_804fdf1, { 1, 0, 2 }
  uselistorder i32* %edx.global-to-local, { 5, 6, 7, 8, 9, 60, 27, 29, 22, 30, 12, 0, 10, 14, 15, 16, 18, 19, 20, 31, 32, 33, 23, 1, 2, 3, 4, 61, 62, 63, 64, 65, 66, 11, 13, 17, 21, 24, 25, 26, 34, 35, 59, 57, 58, 55, 56, 36, 37, 38, 39, 28, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54 }
  uselistorder i32* %ecx.global-to-local, { 2, 3, 4, 5, 15, 16, 17, 18, 19, 20, 12, 21, 22, 6, 0, 40, 7, 13, 1, 23, 39, 8, 9, 10, 11, 14, 24, 37, 38, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36 }
  uselistorder i32* %eax.global-to-local, { 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 42, 43, 45, 46, 47, 48, 193, 194, 195, 196, 197, 199, 92, 200, 104, 105, 201, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 87, 88, 89, 202, 203, 204, 205, 206, 207, 121, 122, 123, 124, 125, 126, 55, 56, 57, 58, 59, 60, 61, 0, 1, 2, 3, 4, 5, 224, 225, 226, 49, 50, 51, 52, 64, 65, 66, 67, 68, 72, 73, 74, 75, 76, 77, 78, 79, 132, 133, 134, 135, 147, 100, 136, 137, 138, 139, 90, 99, 91, 93, 94, 95, 96, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 127, 128, 129, 130, 131, 209, 212, 210, 211, 213, 214, 215, 216, 217, 208, 218, 219, 220, 221, 222, 223, 53, 54, 62, 63, 69, 70, 71, 80, 81, 82, 83, 84, 85, 86, 97, 98, 101, 102, 103, 140, 141, 142, 143, 144, 145, 146, 148, 190, 191, 192, 176, 185, 186, 187, 188, 189, 149, 150, 151, 152, 153, 154, 155, 111, 156, 159, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 198, 182, 184, 183, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181 }
  uselistorder i32 ()* @function_80525f0, { 1, 0 }
  uselistorder i32 1864, { 1, 2, 0, 3 }
  uselistorder i32 540, { 3, 4, 5, 0, 1, 2, 6, 7, 8 }
  uselistorder i8 31, { 0, 2, 3, 1 }
  uselistorder i32 1888, { 4, 0, 1, 2, 3 }
  uselistorder i32 1872, { 0, 2, 1 }
  uselistorder i32 (i8)* @function_8051010, { 2, 3, 5, 4, 0, 12, 1, 11, 10, 6, 7, 8, 9, 13, 14, 15, 16 }
  uselistorder i32 (i32, i32*)* @function_8050fe0, { 2, 10, 5, 4, 0, 3, 1, 11, 12, 6, 7, 8, 9, 13, 14, 28, 15, 16, 17, 34, 35, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33 }
  uselistorder i32 1880, { 0, 1, 2, 3, 4, 5, 10, 8, 6, 9, 7 }
  uselistorder i32 (i8)* @function_8051090, { 9, 10, 4, 3, 0, 2, 1, 11, 12, 5, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i8 ptrtoint (i32* @0 to i8), { 11, 12, 13, 14, 0, 1, 6, 7, 8, 9, 2, 3, 4, 5, 15, 16, 10, 17 }
  uselistorder i32 ()* @function_8051a90, { 21, 20, 24, 23, 22, 19, 18, 17, 16, 15, 14, 5, 4, 3, 13, 12, 11, 2, 1, 0, 10, 9, 8, 7, 6 }
  uselistorder i32 ()* @function_80526c4, { 21, 20, 19, 18, 17, 16, 15, 7, 6, 4, 3, 13, 12, 25, 24, 2, 1, 11, 10, 9, 8, 23, 22, 5, 14, 0 }
  uselistorder i8 -5, { 0, 3, 1, 2 }
  uselistorder i8 -3, { 6, 7, 8, 2, 0, 1, 3, 4, 5 }
  uselistorder i32 ()* @function_805264e, { 4, 3, 2, 1, 0 }
  uselistorder i8 37, { 5, 3, 2, 4, 0, 1, 6 }
  uselistorder i8 35, { 6, 4, 3, 5, 1, 0, 2 }
  uselistorder i8 36, { 6, 4, 3, 5, 1, 0, 2, 7 }
  uselistorder i8 62, { 7, 4, 5, 3, 6, 1, 0, 2 }
  uselistorder i8 58, { 7, 4, 5, 3, 6, 1, 0, 2 }
  uselistorder i32 ()* @function_8052242, { 4, 3, 0, 2, 1 }
  uselistorder i32 ()* @function_8052188, { 1, 2, 0 }
  uselistorder i32 1572, { 1, 2, 0 }
  uselistorder i32 1700, { 2, 0, 1 }
  uselistorder i32 ()* @function_804f4d0, { 3, 0, 2, 1 }
  uselistorder i32 544, { 0, 1, 3, 4, 2 }
  uselistorder i8 6, { 0, 2, 3, 1 }
  uselistorder i32 -28, { 3, 2, 4, 5, 6, 0, 1 }
  uselistorder i32 -24, { 1, 0, 2, 3, 4 }
  uselistorder i32 -20, { 2, 1, 3, 4, 0, 5 }
  uselistorder i8 -1, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 (i32)* @function_804ed40, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 1844, { 1, 0, 2 }
  uselistorder i16* @global_var_80566b6.28, { 1, 0 }
  uselistorder i8 -58, { 1, 0 }
  uselistorder i8 -87, { 1, 0 }
  uselistorder i8 100, { 1, 0 }
  uselistorder i32 1868, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8050f07, { 1, 0 }
  uselistorder label %dec_label_pc_8050cfe, { 1, 0 }
  uselistorder label %dec_label_pc_80508e8, { 1, 0 }
  uselistorder label %dec_label_pc_8050813, { 7, 3, 0, 2, 4, 5, 1, 8, 6 }
  uselistorder label %dec_label_pc_80503fb.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_80507cf, { 1, 0 }
  uselistorder label %dec_label_pc_8050756, { 1, 0 }
  uselistorder label %dec_label_pc_8050726, { 1, 0 }
  uselistorder label %dec_label_pc_80506ec, { 1, 0 }
  uselistorder label %dec_label_pc_80506e1, { 8, 9, 7, 3, 1, 10, 4, 5, 0, 2, 11, 6 }
  uselistorder label %dec_label_pc_80505c1, { 1, 0 }
  uselistorder label %dec_label_pc_805057c, { 1, 0 }
  uselistorder label %dec_label_pc_8050545, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805051a, { 1, 0 }
  uselistorder label %dec_label_pc_80504c3, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805048f, { 1, 0 }
  uselistorder label %dec_label_pc_8050471, { 5, 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_8050450, { 1, 2, 0 }
  uselistorder label %dec_label_pc_805043d, { 1, 0 }
  uselistorder label %dec_label_pc_805042b, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80503ff, { 1, 0 }
  uselistorder label %dec_label_pc_80503ff.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_80503d2, { 1, 0 }
  uselistorder label %dec_label_pc_80503cd, { 1, 0 }
  uselistorder label %dec_label_pc_805038b, { 1, 0 }
  uselistorder label %dec_label_pc_8050377, { 1, 0 }
  uselistorder label %dec_label_pc_8050370.loopexit12.loopexit, { 12, 10, 4, 8, 0, 5, 6, 7, 14, 9, 11, 1, 2, 3, 13 }
  uselistorder label %dec_label_pc_8050370.backedge, { 2, 4, 5, 3, 0, 1, 6 }
  uselistorder label %dec_label_pc_805033c, { 1, 0 }
  uselistorder label %dec_label_pc_8050318, { 5, 6, 7, 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_8050301, { 1, 0 }
  uselistorder label %dec_label_pc_80502a4, { 1, 0 }
  uselistorder label %dec_label_pc_8050252, { 0, 3, 4, 5, 1, 6, 2 }
  uselistorder label %dec_label_pc_805021d, { 1, 0 }
  uselistorder label %dec_label_pc_80501d0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80501a4, { 1, 0 }
  uselistorder label %dec_label_pc_80500b6, { 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11 }
  uselistorder label %dec_label_pc_80500ab, { 1, 0 }
  uselistorder label %dec_label_pc_8050070, { 1, 0 }
  uselistorder label %dec_label_pc_805003c, { 1, 0 }
  uselistorder label %dec_label_pc_804fff2.preheader, { 16, 14, 13, 0, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 15 }
  uselistorder label %dec_label_pc_804fe3f, { 1, 2, 4, 0, 3 }
}

define i32 @function_8050fe0(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_8050fe0:
  %tmp2 = ptrtoint i32* %arg2 to i32
  store i32 %tmp2, i32* @ecx, align 4
  %v1_8050fe8 = icmp eq i32* %arg2, null
  %v1_8050fea = mul i32 %arg1, 8
  store i32 %v1_8050fea, i32* @edx, align 4
  br i1 %v1_8050fe8, label %dec_label_pc_8051003, label %dec_label_pc_8050ff9

dec_label_pc_8050ff9:                             ; preds = %dec_label_pc_8050fe0
  %v1_8050ff9 = add i32 %v1_8050fea, add (i32 ptrtoint (i32* @global_var_8056740.43 to i32), i32 4)
  %v2_8050ff9 = inttoptr i32 %v1_8050ff9 to i32*
  %v3_8050ff9 = load i32, i32* %v2_8050ff9, align 4
  %v1_8050ffc = urem i32 %v3_8050ff9, 65536
  store i32 %v1_8050ffc, i32* %arg2, align 4
  %v0_8051003.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8051003

dec_label_pc_8051003:                             ; preds = %dec_label_pc_8050fe0, %dec_label_pc_8050ff9
  %v0_8051003 = phi i32 [ %v1_8050fea, %dec_label_pc_8050fe0 ], [ %v0_8051003.pre, %dec_label_pc_8050ff9 ]
  %v1_8051003 = add i32 %v0_8051003, ptrtoint (i32* @global_var_8056740.43 to i32)
  %v2_8051003 = inttoptr i32 %v1_8051003 to i32*
  %v3_8051003 = load i32, i32* %v2_8051003, align 4
  ret i32 %v3_8051003

; uselistorder directives
  uselistorder label %dec_label_pc_8051003, { 1, 0 }
}

define i32 @function_8051010(i8 %arg1) local_unnamed_addr {
dec_label_pc_8051010:
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i8, align 1
  %v4_8051019 = zext i8 %arg1 to i32
  %v1_805101d = mul nuw nsw i32 %v4_8051019, 8
  %v2_805101d = add i32 %v1_805101d, ptrtoint (i32* @global_var_8056740.43 to i32)
  store i32 %v2_805101d, i32* @ecx, align 4
  %v0_8051024 = load i16, i16* @global_var_80565bc.44, align 2
  %v1_8051024 = sext i16 %v0_8051024 to i32
  %v1_8051029 = add i32 %v1_805101d, add (i32 ptrtoint (i32* @global_var_8056740.43 to i32), i32 4)
  %v2_8051029 = inttoptr i32 %v1_8051029 to i16*
  %v3_8051029 = load i16, i16* %v2_8051029, align 4
  %v4_8051029 = icmp eq i16 %v3_8051029, 0
  br i1 %v4_8051029, label %dec_label_pc_805107a, label %dec_label_pc_8051030

dec_label_pc_8051030:                             ; preds = %dec_label_pc_8051010
  store i32 %v1_8051024, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_8051038 = udiv i32 %v1_8051024, 16777216
  %v2_805103b = udiv i32 %v1_8051024, 256
  store i32 %v2_805103b, i32* %edi.global-to-local, align 4
  %v5_805103e = trunc i32 %v2_8051038 to i8
  store i8 %v5_805103e, i8* %stack_var_-44, align 1
  %v2_8051041 = udiv i32 %v1_8051024, 65536
  store i32 %v2_8051041, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051044

dec_label_pc_8051044:                             ; preds = %dec_label_pc_8051044.dec_label_pc_8051044_crit_edge, %dec_label_pc_8051030
  %v0_805104a = phi i32 [ %v0_805104a.pre, %dec_label_pc_8051044.dec_label_pc_8051044_crit_edge ], [ %v1_8051024, %dec_label_pc_8051030 ]
  %v0_8051046 = phi i32 [ %v1_8051076, %dec_label_pc_8051044.dec_label_pc_8051044_crit_edge ], [ 0, %dec_label_pc_8051030 ]
  %v0_8051044 = phi i32 [ %v0_805106e, %dec_label_pc_8051044.dec_label_pc_8051044_crit_edge ], [ %v2_805101d, %dec_label_pc_8051030 ]
  %v1_8051044 = inttoptr i32 %v0_8051044 to i32*
  %v2_8051044 = load i32, i32* %v1_8051044, align 4
  %v2_8051048 = add i32 %v2_8051044, %v0_8051046
  %v1_805104c = inttoptr i32 %v2_8051048 to i8*
  %v2_805104c = load i8, i8* %v1_805104c, align 1
  %v4_805104c = trunc i32 %v0_805104a to i8
  %v5_805104c = xor i8 %v2_805104c, %v4_805104c
  store i8 %v5_805104c, i8* %v1_805104c, align 1
  %v0_805104e = load i32, i32* %edx.global-to-local, align 4
  %v0_8051050 = load i32, i32* @ecx, align 4
  %v1_8051050 = inttoptr i32 %v0_8051050 to i32*
  %v2_8051050 = load i32, i32* %v1_8051050, align 4
  %v2_8051052 = add i32 %v2_8051050, %v0_805104e
  %v0_8051054 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051056 = inttoptr i32 %v2_8051052 to i8*
  %v2_8051056 = load i8, i8* %v1_8051056, align 1
  %v4_8051056 = trunc i32 %v0_8051054 to i8
  %v5_8051056 = xor i8 %v2_8051056, %v4_8051056
  store i8 %v5_8051056, i8* %v1_8051056, align 1
  %v0_8051058 = load i32, i32* %edx.global-to-local, align 4
  %v0_805105a = load i32, i32* @ecx, align 4
  %v1_805105a = inttoptr i32 %v0_805105a to i32*
  %v2_805105a = load i32, i32* %v1_805105a, align 4
  %v2_805105c = add i32 %v2_805105a, %v0_8051058
  %v0_805105e = load i32, i32* %esi.global-to-local, align 4
  %v1_8051060 = inttoptr i32 %v2_805105c to i8*
  %v2_8051060 = load i8, i8* %v1_8051060, align 1
  %v4_8051060 = trunc i32 %v0_805105e to i8
  %v5_8051060 = xor i8 %v2_8051060, %v4_8051060
  store i8 %v5_8051060, i8* %v1_8051060, align 1
  %v0_8051062 = load i32, i32* %edx.global-to-local, align 4
  %v0_8051064 = load i32, i32* @ecx, align 4
  %v1_8051064 = inttoptr i32 %v0_8051064 to i32*
  %v2_8051064 = load i32, i32* %v1_8051064, align 4
  %v1_8051066 = add i32 %v0_8051062, 1
  store i32 %v1_8051066, i32* %edx.global-to-local, align 4
  %v2_8051067 = add i32 %v2_8051064, %v0_8051062
  %v2_8051069 = load i8, i8* %stack_var_-44, align 1
  %v1_805106c = inttoptr i32 %v2_8051067 to i8*
  %v2_805106c = load i8, i8* %v1_805106c, align 1
  %v5_805106c = xor i8 %v2_805106c, %v2_8051069
  store i8 %v5_805106c, i8* %v1_805106c, align 1
  %v0_805106e = load i32, i32* @ecx, align 4
  %v1_805106e = add i32 %v0_805106e, 4
  %v2_805106e = inttoptr i32 %v1_805106e to i32*
  %v3_805106e = load i32, i32* %v2_805106e, align 4
  %v1_8051071 = urem i32 %v3_805106e, 65536
  %v1_8051076 = load i32, i32* %edx.global-to-local, align 4
  %v8_8051078 = icmp sgt i32 %v1_8051071, %v1_8051076
  br i1 %v8_8051078, label %dec_label_pc_8051044.dec_label_pc_8051044_crit_edge, label %dec_label_pc_805107a.loopexit

dec_label_pc_8051044.dec_label_pc_8051044_crit_edge: ; preds = %dec_label_pc_8051044
  %v0_805104a.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8051044

dec_label_pc_805107a.loopexit:                    ; preds = %dec_label_pc_8051044
  br label %dec_label_pc_805107a

dec_label_pc_805107a:                             ; preds = %dec_label_pc_805107a.loopexit, %dec_label_pc_8051010
  %v0_8051081 = phi i32 [ %v1_8051071, %dec_label_pc_805107a.loopexit ], [ %v1_8051024, %dec_label_pc_8051010 ]
  ret i32 %v0_8051081

; uselistorder directives
  uselistorder i32 %v1_8051076, { 1, 0 }
  uselistorder i32 %v1_8051071, { 1, 0 }
  uselistorder i32 %v0_805106e, { 1, 0 }
  uselistorder i32 %v1_8051024, { 3, 4, 0, 1, 2, 5 }
  uselistorder i8* %stack_var_-44, { 1, 0 }
}

define i32 @function_8051090(i8 %arg1) local_unnamed_addr {
dec_label_pc_8051090:
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i8, align 1
  %v4_8051099 = zext i8 %arg1 to i32
  %v1_805109d = mul nuw nsw i32 %v4_8051099, 8
  %v2_805109d = add i32 %v1_805109d, ptrtoint (i32* @global_var_8056740.43 to i32)
  store i32 %v2_805109d, i32* %ecx.global-to-local, align 4
  %v0_80510a4 = load i16, i16* @global_var_80565bc.44, align 2
  %v1_80510a4 = sext i16 %v0_80510a4 to i32
  %v1_80510a9 = add i32 %v1_805109d, add (i32 ptrtoint (i32* @global_var_8056740.43 to i32), i32 4)
  %v2_80510a9 = inttoptr i32 %v1_80510a9 to i16*
  %v3_80510a9 = load i16, i16* %v2_80510a9, align 4
  %v4_80510a9 = icmp eq i16 %v3_80510a9, 0
  br i1 %v4_80510a9, label %dec_label_pc_80510fa, label %dec_label_pc_80510b0

dec_label_pc_80510b0:                             ; preds = %dec_label_pc_8051090
  store i32 %v1_80510a4, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_80510b8 = udiv i32 %v1_80510a4, 16777216
  %v2_80510bb = udiv i32 %v1_80510a4, 256
  store i32 %v2_80510bb, i32* %edi.global-to-local, align 4
  %v5_80510be = trunc i32 %v2_80510b8 to i8
  store i8 %v5_80510be, i8* %stack_var_-44, align 1
  %v2_80510c1 = udiv i32 %v1_80510a4, 65536
  store i32 %v2_80510c1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80510c4

dec_label_pc_80510c4:                             ; preds = %dec_label_pc_80510c4.dec_label_pc_80510c4_crit_edge, %dec_label_pc_80510b0
  %v0_80510ca = phi i32 [ %v0_80510ca.pre, %dec_label_pc_80510c4.dec_label_pc_80510c4_crit_edge ], [ %v1_80510a4, %dec_label_pc_80510b0 ]
  %v0_80510c6 = phi i32 [ %v1_80510f6, %dec_label_pc_80510c4.dec_label_pc_80510c4_crit_edge ], [ 0, %dec_label_pc_80510b0 ]
  %v0_80510c4 = phi i32 [ %v0_80510ee, %dec_label_pc_80510c4.dec_label_pc_80510c4_crit_edge ], [ %v2_805109d, %dec_label_pc_80510b0 ]
  %v1_80510c4 = inttoptr i32 %v0_80510c4 to i32*
  %v2_80510c4 = load i32, i32* %v1_80510c4, align 4
  %v2_80510c8 = add i32 %v2_80510c4, %v0_80510c6
  %v1_80510cc = inttoptr i32 %v2_80510c8 to i8*
  %v2_80510cc = load i8, i8* %v1_80510cc, align 1
  %v4_80510cc = trunc i32 %v0_80510ca to i8
  %v5_80510cc = xor i8 %v2_80510cc, %v4_80510cc
  store i8 %v5_80510cc, i8* %v1_80510cc, align 1
  %v0_80510ce = load i32, i32* %edx.global-to-local, align 4
  %v0_80510d0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80510d0 = inttoptr i32 %v0_80510d0 to i32*
  %v2_80510d0 = load i32, i32* %v1_80510d0, align 4
  %v2_80510d2 = add i32 %v2_80510d0, %v0_80510ce
  %v0_80510d4 = load i32, i32* %edi.global-to-local, align 4
  %v1_80510d6 = inttoptr i32 %v2_80510d2 to i8*
  %v2_80510d6 = load i8, i8* %v1_80510d6, align 1
  %v4_80510d6 = trunc i32 %v0_80510d4 to i8
  %v5_80510d6 = xor i8 %v2_80510d6, %v4_80510d6
  store i8 %v5_80510d6, i8* %v1_80510d6, align 1
  %v0_80510d8 = load i32, i32* %edx.global-to-local, align 4
  %v0_80510da = load i32, i32* %ecx.global-to-local, align 4
  %v1_80510da = inttoptr i32 %v0_80510da to i32*
  %v2_80510da = load i32, i32* %v1_80510da, align 4
  %v2_80510dc = add i32 %v2_80510da, %v0_80510d8
  %v0_80510de = load i32, i32* %esi.global-to-local, align 4
  %v1_80510e0 = inttoptr i32 %v2_80510dc to i8*
  %v2_80510e0 = load i8, i8* %v1_80510e0, align 1
  %v4_80510e0 = trunc i32 %v0_80510de to i8
  %v5_80510e0 = xor i8 %v2_80510e0, %v4_80510e0
  store i8 %v5_80510e0, i8* %v1_80510e0, align 1
  %v0_80510e2 = load i32, i32* %edx.global-to-local, align 4
  %v0_80510e4 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80510e4 = inttoptr i32 %v0_80510e4 to i32*
  %v2_80510e4 = load i32, i32* %v1_80510e4, align 4
  %v1_80510e6 = add i32 %v0_80510e2, 1
  store i32 %v1_80510e6, i32* %edx.global-to-local, align 4
  %v2_80510e7 = add i32 %v2_80510e4, %v0_80510e2
  %v2_80510e9 = load i8, i8* %stack_var_-44, align 1
  %v1_80510ec = inttoptr i32 %v2_80510e7 to i8*
  %v2_80510ec = load i8, i8* %v1_80510ec, align 1
  %v5_80510ec = xor i8 %v2_80510ec, %v2_80510e9
  store i8 %v5_80510ec, i8* %v1_80510ec, align 1
  %v0_80510ee = load i32, i32* %ecx.global-to-local, align 4
  %v1_80510ee = add i32 %v0_80510ee, 4
  %v2_80510ee = inttoptr i32 %v1_80510ee to i32*
  %v3_80510ee = load i32, i32* %v2_80510ee, align 4
  %v1_80510f1 = urem i32 %v3_80510ee, 65536
  %v1_80510f6 = load i32, i32* %edx.global-to-local, align 4
  %v8_80510f8 = icmp sgt i32 %v1_80510f1, %v1_80510f6
  br i1 %v8_80510f8, label %dec_label_pc_80510c4.dec_label_pc_80510c4_crit_edge, label %dec_label_pc_80510fa.loopexit

dec_label_pc_80510c4.dec_label_pc_80510c4_crit_edge: ; preds = %dec_label_pc_80510c4
  %v0_80510ca.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80510c4

dec_label_pc_80510fa.loopexit:                    ; preds = %dec_label_pc_80510c4
  br label %dec_label_pc_80510fa

dec_label_pc_80510fa:                             ; preds = %dec_label_pc_80510fa.loopexit, %dec_label_pc_8051090
  %v0_8051101 = phi i32 [ %v1_80510f1, %dec_label_pc_80510fa.loopexit ], [ %v1_80510a4, %dec_label_pc_8051090 ]
  ret i32 %v0_8051101

; uselistorder directives
  uselistorder i32 %v1_80510f6, { 1, 0 }
  uselistorder i32 %v1_80510f1, { 1, 0 }
  uselistorder i32 %v0_80510ee, { 1, 0 }
  uselistorder i32 %v1_80510a4, { 3, 4, 0, 1, 2, 5 }
  uselistorder i8* %stack_var_-44, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_8056740.43 to i32), i32 4), { 1, 2, 0 }
  uselistorder i16* @global_var_80565bc.44, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_8056740.43 to i32), { 1, 2, 3, 0 }
}

define i32 @function_80519e0(i8* %arg1) local_unnamed_addr {
dec_label_pc_80519e0:
  %v4_80519e0 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80519e0, i32* @edx, align 4
  %v2_80519e6 = load i8, i8* %arg1, align 1
  %v3_80519e6 = icmp eq i8 %v2_80519e6, 0
  br i1 %v3_80519e6, label %dec_label_pc_80519f7, label %dec_label_pc_80519f0

dec_label_pc_80519f0:                             ; preds = %dec_label_pc_80519e0, %dec_label_pc_80519f0
  %v0_80519f0 = phi i32 [ %v1_80519f0, %dec_label_pc_80519f0 ], [ 0, %dec_label_pc_80519e0 ]
  %v1_80519f0 = add i32 %v0_80519f0, 1
  %v2_80519f1 = add i32 %v1_80519f0, %v4_80519e0
  %v3_80519f1 = inttoptr i32 %v2_80519f1 to i8*
  %v4_80519f1 = load i8, i8* %v3_80519f1, align 1
  %v5_80519f1 = icmp eq i8 %v4_80519f1, 0
  %v1_80519f5 = icmp eq i1 %v5_80519f1, false
  br i1 %v1_80519f5, label %dec_label_pc_80519f0, label %dec_label_pc_80519f7

dec_label_pc_80519f7:                             ; preds = %dec_label_pc_80519f0, %dec_label_pc_80519e0
  %v0_80519f7 = phi i32 [ 0, %dec_label_pc_80519e0 ], [ %v1_80519f0, %dec_label_pc_80519f0 ]
  ret i32 %v0_80519f7

; uselistorder directives
  uselistorder label %dec_label_pc_80519f0, { 1, 0 }
}

define i32 @function_8051a00(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8051a00:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp15 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8051a01 = load i32, i32* @ebx, align 4
  store i32 %v0_8051a01, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v4_8051a06 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051a06, i32* %edx.global-to-local, align 4
  %v2_8051a0a = load i8, i8* %tmp15, align 1
  %v3_8051a0a = icmp eq i8 %v2_8051a0a, 0
  br i1 %v3_8051a0a, label %dec_label_pc_8051a34, label %dec_label_pc_8051a0f

dec_label_pc_8051a0f:                             ; preds = %dec_label_pc_8051a00
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051a11

dec_label_pc_8051a11:                             ; preds = %dec_label_pc_8051a11, %dec_label_pc_8051a0f
  %v0_8051a11 = phi i32 [ %v1_8051a11, %dec_label_pc_8051a11 ], [ 0, %dec_label_pc_8051a0f ]
  %v1_8051a11 = add i32 %v0_8051a11, 1
  store i32 %v1_8051a11, i32* %esi.global-to-local, align 4
  %v2_8051a12 = add i32 %v1_8051a11, %arg2
  %v3_8051a12 = inttoptr i32 %v2_8051a12 to i8*
  %v4_8051a12 = load i8, i8* %v3_8051a12, align 1
  %v5_8051a12 = icmp eq i8 %v4_8051a12, 0
  %v1_8051a16 = icmp eq i1 %v5_8051a12, false
  br i1 %v1_8051a16, label %dec_label_pc_8051a11, label %dec_label_pc_8051a18

dec_label_pc_8051a18:                             ; preds = %dec_label_pc_8051a11
  %v10_8051a18 = icmp eq i32 %v0_8051a11, -2
  br i1 %v10_8051a18, label %dec_label_pc_8051a2f, label %dec_label_pc_8051a1d

dec_label_pc_8051a1d:                             ; preds = %dec_label_pc_8051a18
  store i32 %v4_8051a06, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %v1_8051a11, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051a23

dec_label_pc_8051a23:                             ; preds = %dec_label_pc_8051a34, %dec_label_pc_8051a1d, %dec_label_pc_8051a23.dec_label_pc_8051a23_crit_edge
  %v2_8051a26 = phi i32 [ %v1_8051a29, %dec_label_pc_8051a23.dec_label_pc_8051a23_crit_edge ], [ %v4_8051a06, %dec_label_pc_8051a1d ], [ %v4_8051a06, %dec_label_pc_8051a34 ]
  %v0_8051a25 = phi i32 [ %v0_8051a2a, %dec_label_pc_8051a23.dec_label_pc_8051a23_crit_edge ], [ %v1_8051a11, %dec_label_pc_8051a1d ], [ 0, %dec_label_pc_8051a34 ]
  %v4_8051a23 = phi i32 [ %v4_8051a23.pre, %dec_label_pc_8051a23.dec_label_pc_8051a23_crit_edge ], [ %arg2, %dec_label_pc_8051a1d ], [ %arg2, %dec_label_pc_8051a34 ]
  %v0_8051a23 = phi i32 [ %v1_8051a28, %dec_label_pc_8051a23.dec_label_pc_8051a23_crit_edge ], [ %arg2, %dec_label_pc_8051a1d ], [ %arg2, %dec_label_pc_8051a34 ]
  %v1_8051a23 = inttoptr i32 %v0_8051a23 to i8*
  %v2_8051a23 = load i8, i8* %v1_8051a23, align 1
  %v3_8051a23 = zext i8 %v2_8051a23 to i32
  %v5_8051a23 = and i32 %v4_8051a23, -256
  %v6_8051a23 = or i32 %v3_8051a23, %v5_8051a23
  store i32 %v6_8051a23, i32* %eax.global-to-local, align 4
  %v1_8051a25 = add i32 %v0_8051a25, -1
  store i32 %v1_8051a25, i32* %edx.global-to-local, align 4
  %v3_8051a26 = inttoptr i32 %v2_8051a26 to i8*
  store i8 %v2_8051a23, i8* %v3_8051a26, align 1
  %v0_8051a28 = load i32, i32* @ecx, align 4
  %v1_8051a28 = add i32 %v0_8051a28, 1
  store i32 %v1_8051a28, i32* @ecx, align 4
  %v0_8051a29 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051a29 = add i32 %v0_8051a29, 1
  store i32 %v1_8051a29, i32* %ebx.global-to-local, align 4
  %v0_8051a2a = load i32, i32* %edx.global-to-local, align 4
  %v10_8051a2a = icmp eq i32 %v0_8051a2a, -1
  %v1_8051a2d = icmp eq i1 %v10_8051a2a, false
  br i1 %v1_8051a2d, label %dec_label_pc_8051a23.dec_label_pc_8051a23_crit_edge, label %dec_label_pc_8051a2f.loopexit

dec_label_pc_8051a23.dec_label_pc_8051a23_crit_edge: ; preds = %dec_label_pc_8051a23
  %v4_8051a23.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051a23

dec_label_pc_8051a2f.loopexit:                    ; preds = %dec_label_pc_8051a23
  %v0_8051a2f.pre = load i32, i32* %esi.global-to-local, align 4
  %v2_8051a31.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8051a2f

dec_label_pc_8051a2f:                             ; preds = %dec_label_pc_8051a2f.loopexit, %dec_label_pc_8051a18
  %v2_8051a31 = phi i32 [ %v2_8051a31.pre, %dec_label_pc_8051a2f.loopexit ], [ %v0_8051a01, %dec_label_pc_8051a18 ]
  %v0_8051a2f = phi i32 [ %v0_8051a2f.pre, %dec_label_pc_8051a2f.loopexit ], [ %v1_8051a11, %dec_label_pc_8051a18 ]
  store i32 %v0_8051a2f, i32* %eax.global-to-local, align 4
  store i32 %v2_8051a31, i32* @ebx, align 4
  ret i32 %v0_8051a2f

dec_label_pc_8051a34:                             ; preds = %dec_label_pc_8051a00
  store i32 %v4_8051a06, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051a23

; uselistorder directives
  uselistorder i32 %v0_8051a2f, { 1, 0 }
  uselistorder i32 %v1_8051a29, { 1, 0 }
  uselistorder i32 %v1_8051a28, { 1, 0 }
  uselistorder i32 %v1_8051a11, { 1, 0, 2, 3, 5, 4 }
  uselistorder i32 %v4_8051a06, { 2, 0, 1, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 5, 0, 1, 2, 3, 6, 4, 7, 8 }
  uselistorder label %dec_label_pc_8051a23, { 0, 2, 1 }
}

define i32 @function_8051a70(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8051a70:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_8051a78 = icmp eq i32 %arg2, 0
  br i1 %v1_8051a78, label %dec_label_pc_8051a70.dec_label_pc_8051a89_crit_edge, label %dec_label_pc_8051a7c

dec_label_pc_8051a70.dec_label_pc_8051a89_crit_edge: ; preds = %dec_label_pc_8051a70
  %v0_8051a89.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8051a89

dec_label_pc_8051a7c:                             ; preds = %dec_label_pc_8051a70
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_8051a805 = inttoptr i32 %arg1 to i8*
  store i8 0, i8* %v3_8051a805, align 1
  %v0_8051a846 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051a847 = add i32 %v0_8051a846, 1
  store i32 %v1_8051a847, i32* %eax.global-to-local, align 4
  %v12_8051a858 = icmp eq i32 %v1_8051a847, %arg2
  %v1_8051a879 = icmp eq i1 %v12_8051a858, false
  br i1 %v1_8051a879, label %dec_label_pc_8051a80.dec_label_pc_8051a80_crit_edge, label %dec_label_pc_8051a89

dec_label_pc_8051a80.dec_label_pc_8051a80_crit_edge: ; preds = %dec_label_pc_8051a7c, %dec_label_pc_8051a80.dec_label_pc_8051a80_crit_edge
  %v1_8051a8410 = phi i32 [ %v1_8051a84, %dec_label_pc_8051a80.dec_label_pc_8051a80_crit_edge ], [ %v1_8051a847, %dec_label_pc_8051a7c ]
  %v1_8051a80.pre = load i32, i32* %ecx.global-to-local, align 4
  %v2_8051a80 = add i32 %v1_8051a8410, %v1_8051a80.pre
  %v3_8051a80 = inttoptr i32 %v2_8051a80 to i8*
  store i8 0, i8* %v3_8051a80, align 1
  %v0_8051a84 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051a84 = add i32 %v0_8051a84, 1
  store i32 %v1_8051a84, i32* %eax.global-to-local, align 4
  %v12_8051a85 = icmp eq i32 %v1_8051a84, %arg2
  %v1_8051a87 = icmp eq i1 %v12_8051a85, false
  br i1 %v1_8051a87, label %dec_label_pc_8051a80.dec_label_pc_8051a80_crit_edge, label %dec_label_pc_8051a89

dec_label_pc_8051a89:                             ; preds = %dec_label_pc_8051a7c, %dec_label_pc_8051a80.dec_label_pc_8051a80_crit_edge, %dec_label_pc_8051a70.dec_label_pc_8051a89_crit_edge
  %v0_8051a89 = phi i32 [ %v0_8051a89.pre, %dec_label_pc_8051a70.dec_label_pc_8051a89_crit_edge ], [ %v1_8051a847, %dec_label_pc_8051a7c ], [ %v1_8051a84, %dec_label_pc_8051a80.dec_label_pc_8051a80_crit_edge ]
  ret i32 %v0_8051a89

; uselistorder directives
  uselistorder i32 %v1_8051a84, { 0, 2, 3, 1 }
  uselistorder i32* %eax.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051a89, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051a80.dec_label_pc_8051a80_crit_edge, { 1, 0 }
}

define i32 @function_8051a90() local_unnamed_addr {
dec_label_pc_8051a90:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp10, i32* @ecx, align 4
  %v7_8051aa5 = icmp sgt i32 %tmp9, %tmp10
  br i1 %v7_8051aa5, label %dec_label_pc_8051aa7, label %dec_label_pc_8051ab0

dec_label_pc_8051aa7:                             ; preds = %dec_label_pc_8051ac2, %dec_label_pc_8051a90, %dec_label_pc_8051ab0
  br label %dec_label_pc_8051aaa

dec_label_pc_8051aaa:                             ; preds = %dec_label_pc_8051ad5, %dec_label_pc_8051aa7
  %storemerge = phi i32 [ -1, %dec_label_pc_8051aa7 ], [ %v0_8051ac3, %dec_label_pc_8051ad5 ]
  ret i32 %storemerge

dec_label_pc_8051ab0:                             ; preds = %dec_label_pc_8051a90
  %tmp17 = icmp slt i32 %tmp10, 1
  br i1 %tmp17, label %dec_label_pc_8051aa7, label %dec_label_pc_8051ab4

dec_label_pc_8051ab4:                             ; preds = %dec_label_pc_8051ab0
  %v2_8051acc = add i32 %tmp, -1
  br label %dec_label_pc_8051ac8

dec_label_pc_8051ac0:                             ; preds = %dec_label_pc_8051ac8
  br label %dec_label_pc_8051ac2

dec_label_pc_8051ac2:                             ; preds = %dec_label_pc_8051ad5, %dec_label_pc_8051ac0
  %v2_8051ad03 = phi i32 [ %v1_8051ad5, %dec_label_pc_8051ad5 ], [ 0, %dec_label_pc_8051ac0 ]
  %v1_8051ac2 = add i32 %v0_8051ac2, 1
  %v1_8051ac3 = add i32 %v0_8051ac3, 1
  %v12_8051ac4 = icmp eq i32 %tmp10, %v1_8051ac2
  br i1 %v12_8051ac4, label %dec_label_pc_8051aa7, label %dec_label_pc_8051ac8

dec_label_pc_8051ac8:                             ; preds = %dec_label_pc_8051ac2, %dec_label_pc_8051ab4
  %v0_8051ac2 = phi i32 [ %v1_8051ac2, %dec_label_pc_8051ac2 ], [ 0, %dec_label_pc_8051ab4 ]
  %v0_8051ad5 = phi i32 [ %v2_8051ad03, %dec_label_pc_8051ac2 ], [ 0, %dec_label_pc_8051ab4 ]
  %v0_8051ac3 = phi i32 [ %v1_8051ac3, %dec_label_pc_8051ac2 ], [ 1, %dec_label_pc_8051ab4 ]
  %v3_8051acc = add i32 %v2_8051acc, %v0_8051ac3
  %v4_8051acc = inttoptr i32 %v3_8051acc to i8*
  %v5_8051acc = load i8, i8* %v4_8051acc, align 1
  %v4_8051ad0 = add i32 %v0_8051ad5, %tmp8
  %v5_8051ad0 = inttoptr i32 %v4_8051ad0 to i8*
  %v6_8051ad0 = load i8, i8* %v5_8051ad0, align 1
  %v17_8051ad0 = icmp eq i8 %v5_8051acc, %v6_8051ad0
  %v1_8051ad3 = icmp eq i1 %v17_8051ad0, false
  br i1 %v1_8051ad3, label %dec_label_pc_8051ac0, label %dec_label_pc_8051ad5

dec_label_pc_8051ad5:                             ; preds = %dec_label_pc_8051ac8
  %v1_8051ad5 = add i32 %v0_8051ad5, 1
  %v12_8051ad6 = icmp eq i32 %tmp9, %v1_8051ad5
  %v1_8051ad8 = icmp eq i1 %v12_8051ad6, false
  br i1 %v1_8051ad8, label %dec_label_pc_8051ac2, label %dec_label_pc_8051aaa

; uselistorder directives
  uselistorder i32 %v0_8051ac3, { 2, 0, 1 }
  uselistorder i32 %v0_8051ad5, { 1, 0 }
  uselistorder i32 %v1_8051ac2, { 1, 0 }
  uselistorder label %dec_label_pc_8051aa7, { 0, 2, 1 }
}

define i32 @function_8051ae0(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8051ae0:
  %v4_8051ae7 = ptrtoint i8* %arg1 to i32
  %v4_8051af0.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8051af0

dec_label_pc_8051af0:                             ; preds = %dec_label_pc_8051b04, %dec_label_pc_8051b00, %dec_label_pc_8051af0, %dec_label_pc_8051ae0
  %v4_8051af0 = phi i32 [ %v4_8051af0.pre, %dec_label_pc_8051ae0 ], [ %v6_8051af0, %dec_label_pc_8051af0 ], [ %v6_8051af0, %dec_label_pc_8051b00 ], [ %v6_8051af0, %dec_label_pc_8051b04 ]
  %v0_8051af2 = phi i32 [ %v4_8051ae7, %dec_label_pc_8051ae0 ], [ %v1_8051af2, %dec_label_pc_8051af0 ], [ %v1_8051af2, %dec_label_pc_8051b00 ], [ %v1_8051af2, %dec_label_pc_8051b04 ]
  %v1_8051af0 = inttoptr i32 %v0_8051af2 to i8*
  %v2_8051af0 = load i8, i8* %v1_8051af0, align 1
  %v3_8051af0 = zext i8 %v2_8051af0 to i32
  %v5_8051af0 = and i32 %v4_8051af0, -256
  %v6_8051af0 = or i32 %v3_8051af0, %v5_8051af0
  %v1_8051af2 = add i32 %v0_8051af2, 1
  %v7_8051afc = icmp eq i8 %v2_8051af0, 32
  br i1 %v7_8051afc, label %dec_label_pc_8051af0, label %dec_label_pc_8051b00

dec_label_pc_8051b00:                             ; preds = %dec_label_pc_8051af0
  %v10_8051b00 = icmp eq i8 %v2_8051af0, 9
  br i1 %v10_8051b00, label %dec_label_pc_8051af0, label %dec_label_pc_8051b04

dec_label_pc_8051b04:                             ; preds = %dec_label_pc_8051b00
  %v10_8051b04 = icmp eq i8 %v2_8051af0, 10
  br i1 %v10_8051b04, label %dec_label_pc_8051af0, label %dec_label_pc_8051b08

dec_label_pc_8051b08:                             ; preds = %dec_label_pc_8051b04
  %tmp42 = sext i32 %arg2 to i64
  %v10_8051b08 = icmp eq i8 %v2_8051af0, 45
  br i1 %v10_8051b08, label %dec_label_pc_8051bbd, label %dec_label_pc_8051b11

dec_label_pc_8051b11:                             ; preds = %dec_label_pc_8051b08
  %v10_8051b11 = icmp eq i8 %v2_8051af0, 43
  br i1 %v10_8051b11, label %dec_label_pc_8051bed, label %dec_label_pc_8051b1a

dec_label_pc_8051b1a:                             ; preds = %dec_label_pc_8051b11, %dec_label_pc_8051bed
  %v0_8051b6431 = phi i32 [ %v1_8051af2, %dec_label_pc_8051b11 ], [ %v1_8051bf0, %dec_label_pc_8051bed ]
  %v0_8051b9017.in = phi i8 [ %v2_8051af0, %dec_label_pc_8051b11 ], [ %v2_8051bed, %dec_label_pc_8051bed ]
  %v2_8051b6e10 = phi i8 [ %v2_8051af0, %dec_label_pc_8051b11 ], [ %v2_8051bed, %dec_label_pc_8051bed ]
  br label %dec_label_pc_8051b27

dec_label_pc_8051b27:                             ; preds = %dec_label_pc_8051bbd, %dec_label_pc_8051b1a
  %v0_8051b6430 = phi i32 [ %v1_8051bc5, %dec_label_pc_8051bbd ], [ %v0_8051b6431, %dec_label_pc_8051b1a ]
  %v0_8051b9016.in = phi i8 [ %v2_8051bbd, %dec_label_pc_8051bbd ], [ %v0_8051b9017.in, %dec_label_pc_8051b1a ]
  %v2_8051b6e9 = phi i8 [ %v2_8051bbd, %dec_label_pc_8051bbd ], [ %v2_8051b6e10, %dec_label_pc_8051b1a ]
  %v0_8051b27 = phi i64 [ 2147483648, %dec_label_pc_8051bbd ], [ 2147483647, %dec_label_pc_8051b1a ]
  %stack_var_-20.0 = phi i32 [ 1, %dec_label_pc_8051bbd ], [ 0, %dec_label_pc_8051b1a ]
  %v12_8051b2b = udiv i64 %v0_8051b27, %tmp42
  %v13_8051b2b = trunc i64 %v12_8051b2b to i32
  %v14_8051b2b = urem i64 %v0_8051b27, %tmp42
  %v15_8051b2b = trunc i64 %v14_8051b2b to i32
  br label %dec_label_pc_8051b6e

dec_label_pc_8051b40:                             ; preds = %dec_label_pc_8051b6e
  %v1_8051b40 = add nsw i32 %v0_8051b40, -48
  %v7_8051b47 = icmp slt i32 %v1_8051b40, %arg2
  br i1 %v7_8051b47, label %dec_label_pc_8051b49, label %dec_label_pc_8051b9a

dec_label_pc_8051b49:                             ; preds = %dec_label_pc_8051b40, %dec_label_pc_8051b90
  %v1_8051b61 = phi i32 [ %v1_8051b40, %dec_label_pc_8051b40 ], [ %v2_8051b92, %dec_label_pc_8051b90 ]
  %v2_8051b49 = icmp slt i32 %v0_8051b49, 0
  br i1 %v2_8051b49, label %dec_label_pc_8051bb8, label %dec_label_pc_8051b4d

dec_label_pc_8051b4d:                             ; preds = %dec_label_pc_8051b49
  %tmp43 = icmp ugt i32 %v0_8051b4d, %v13_8051b2b
  br i1 %tmp43, label %dec_label_pc_8051bb8, label %dec_label_pc_8051b53

dec_label_pc_8051b53:                             ; preds = %dec_label_pc_8051b4d
  %v15_8051b4d = icmp eq i32 %v0_8051b4d, %v13_8051b2b
  br i1 %v15_8051b4d, label %dec_label_pc_8051bb2, label %dec_label_pc_8051b55

dec_label_pc_8051b55:                             ; preds = %dec_label_pc_8051bb2, %dec_label_pc_8051b53
  %v4_8051b5e = mul i32 %v1_8051b5e, %arg2
  %v2_8051b61 = add i32 %v1_8051b61, %v4_8051b5e
  br label %dec_label_pc_8051b64

dec_label_pc_8051b64:                             ; preds = %dec_label_pc_8051bb8, %dec_label_pc_8051b55
  %v1_8051b5e27 = phi i32 [ %v1_8051b5e, %dec_label_pc_8051bb8 ], [ %v2_8051b61, %dec_label_pc_8051b55 ]
  %v0_8051ba221 = phi i32 [ %v0_8051b4d, %dec_label_pc_8051bb8 ], [ %v2_8051b61, %dec_label_pc_8051b55 ]
  %v0_8051b9a20 = phi i32 [ -1, %dec_label_pc_8051bb8 ], [ 1, %dec_label_pc_8051b55 ]
  %v1_8051b64 = inttoptr i32 %v0_8051b64 to i8*
  %v2_8051b64 = load i8, i8* %v1_8051b64, align 1
  %v1_8051b6a = add i32 %v0_8051b64, 1
  br label %dec_label_pc_8051b6e

dec_label_pc_8051b6e:                             ; preds = %dec_label_pc_8051b27, %dec_label_pc_8051b64
  %v0_8051b64 = phi i32 [ %v0_8051b6430, %dec_label_pc_8051b27 ], [ %v1_8051b6a, %dec_label_pc_8051b64 ]
  %v1_8051b5e = phi i32 [ 0, %dec_label_pc_8051b27 ], [ %v1_8051b5e27, %dec_label_pc_8051b64 ]
  %v0_8051b4d = phi i32 [ 0, %dec_label_pc_8051b27 ], [ %v0_8051ba221, %dec_label_pc_8051b64 ]
  %v0_8051b49 = phi i32 [ 0, %dec_label_pc_8051b27 ], [ %v0_8051b9a20, %dec_label_pc_8051b64 ]
  %v0_8051b40.in = phi i8 [ %v0_8051b9016.in, %dec_label_pc_8051b27 ], [ %v2_8051b64, %dec_label_pc_8051b64 ]
  %v2_8051b6e = phi i8 [ %v2_8051b6e9, %dec_label_pc_8051b27 ], [ %v2_8051b64, %dec_label_pc_8051b64 ]
  %v0_8051b40 = sext i8 %v0_8051b40.in to i32
  %v1_8051b71 = add i8 %v2_8051b6e, -48
  %tmp44 = icmp ult i8 %v1_8051b71, 10
  br i1 %tmp44, label %dec_label_pc_8051b40, label %dec_label_pc_8051b78

dec_label_pc_8051b78:                             ; preds = %dec_label_pc_8051b6e
  %v1_8051b78 = add i8 %v2_8051b6e, -65
  store i32 55, i32* @ecx, align 4
  %tmp45 = icmp ult i8 %v1_8051b78, 26
  br i1 %tmp45, label %dec_label_pc_8051b90, label %dec_label_pc_8051b84

dec_label_pc_8051b84:                             ; preds = %dec_label_pc_8051b78
  %v1_8051b84 = add i8 %v2_8051b6e, -97
  %tmp46 = icmp ult i8 %v1_8051b84, 26
  br i1 %tmp46, label %dec_label_pc_8051b8b, label %dec_label_pc_8051b9a

dec_label_pc_8051b8b:                             ; preds = %dec_label_pc_8051b84
  store i32 87, i32* @ecx, align 4
  br label %dec_label_pc_8051b90

dec_label_pc_8051b90:                             ; preds = %dec_label_pc_8051b78, %dec_label_pc_8051b8b
  %v1_8051b92 = phi i32 [ 55, %dec_label_pc_8051b78 ], [ 87, %dec_label_pc_8051b8b ]
  %v2_8051b92 = sub nsw i32 %v0_8051b40, %v1_8051b92
  %v7_8051b98 = icmp slt i32 %v2_8051b92, %arg2
  br i1 %v7_8051b98, label %dec_label_pc_8051b49, label %dec_label_pc_8051b9a

dec_label_pc_8051b9a:                             ; preds = %dec_label_pc_8051b40, %dec_label_pc_8051b84, %dec_label_pc_8051b90
  %v2_8051b9a = icmp slt i32 %v0_8051b49, 0
  br i1 %v2_8051b9a, label %dec_label_pc_8051bd9, label %dec_label_pc_8051b9e

dec_label_pc_8051b9e:                             ; preds = %dec_label_pc_8051b9a
  store i32 %stack_var_-20.0, i32* @ecx, align 4
  %v1_8051ba4 = icmp eq i32 %stack_var_-20.0, 0
  br i1 %v1_8051ba4, label %dec_label_pc_8051baa, label %dec_label_pc_8051ba8

dec_label_pc_8051ba8:                             ; preds = %dec_label_pc_8051b9e
  %v1_8051ba8 = sub i32 0, %v0_8051b4d
  br label %dec_label_pc_8051baa

dec_label_pc_8051baa:                             ; preds = %dec_label_pc_8051b9e, %dec_label_pc_8051ba8
  %v0_8051bb1 = phi i32 [ %v0_8051b4d, %dec_label_pc_8051b9e ], [ %v1_8051ba8, %dec_label_pc_8051ba8 ]
  ret i32 %v0_8051bb1

dec_label_pc_8051bb2:                             ; preds = %dec_label_pc_8051b53
  %v5_8051bb2 = sub i32 %v1_8051b61, %v15_8051b2b
  %v11_8051bb2 = xor i32 %v1_8051b61, %v15_8051b2b
  %v12_8051bb2 = xor i32 %v5_8051bb2, %v1_8051b61
  %v13_8051bb2 = and i32 %v12_8051bb2, %v11_8051bb2
  %v14_8051bb2 = icmp slt i32 %v13_8051bb2, 0
  %v15_8051bb2 = icmp eq i32 %v5_8051bb2, 0
  %v16_8051bb2 = icmp slt i32 %v5_8051bb2, 0
  %v3_8051bb6 = icmp ne i1 %v16_8051bb2, %v14_8051bb2
  %v4_8051bb6 = or i1 %v15_8051bb2, %v3_8051bb6
  br i1 %v4_8051bb6, label %dec_label_pc_8051b55, label %dec_label_pc_8051bb8

dec_label_pc_8051bb8:                             ; preds = %dec_label_pc_8051b4d, %dec_label_pc_8051bb2, %dec_label_pc_8051b49
  br label %dec_label_pc_8051b64

dec_label_pc_8051bbd:                             ; preds = %dec_label_pc_8051b08
  %v1_8051bbd = inttoptr i32 %v1_8051af2 to i8*
  %v2_8051bbd = load i8, i8* %v1_8051bbd, align 1
  %v1_8051bc5 = add i32 %v0_8051af2, 2
  br label %dec_label_pc_8051b27

dec_label_pc_8051bd9:                             ; preds = %dec_label_pc_8051b9a
  %v8_8051bd9 = icmp eq i32 %stack_var_-20.0, 0
  %v2_8051bde = zext i1 %v8_8051bd9 to i32
  %v1_8051be34 = or i32 %v2_8051bde, -2147483648
  ret i32 %v1_8051be34

dec_label_pc_8051bed:                             ; preds = %dec_label_pc_8051b11
  %v1_8051bed = inttoptr i32 %v1_8051af2 to i8*
  %v2_8051bed = load i8, i8* %v1_8051bed, align 1
  %v1_8051bf0 = add i32 %v0_8051af2, 2
  br label %dec_label_pc_8051b1a

; uselistorder directives
  uselistorder i32 %v5_8051bb2, { 1, 2, 0 }
  uselistorder i32 %v2_8051b92, { 1, 0 }
  uselistorder i8 %v2_8051b64, { 1, 0 }
  uselistorder i32 %v2_8051b61, { 1, 0 }
  uselistorder i32 %v1_8051b61, { 0, 1, 3, 2 }
  uselistorder i32 %v13_8051b2b, { 1, 0 }
  uselistorder i32 %v1_8051af2, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v6_8051af0, { 2, 1, 0 }
  uselistorder i8 %v2_8051af0, { 3, 0, 1, 2, 4, 5, 6, 7 }
  uselistorder i32 %v0_8051af2, { 1, 0, 2, 3 }
  uselistorder i8 10, { 0, 1, 4, 3, 2, 5, 10, 7, 8, 11, 9, 6 }
  uselistorder i8 32, { 1, 2, 3, 6, 7, 4, 8, 9, 10, 0, 5 }
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8051bb8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051baa, { 1, 0 }
  uselistorder label %dec_label_pc_8051b9a, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8051b90, { 1, 0 }
  uselistorder label %dec_label_pc_8051b6e, { 1, 0 }
  uselistorder label %dec_label_pc_8051b49, { 1, 0 }
  uselistorder label %dec_label_pc_8051b1a, { 1, 0 }
}

define i32 @function_8051c50() local_unnamed_addr {
dec_label_pc_8051c50:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  store i32 16, i32* %stack_var_-12, align 4
  %v1_8051c5d = call i32 @function_80524b9(i32 16)
  %v1_8051c62 = inttoptr i32 %v1_8051c5d to i32*
  store i32 0, i32* %v1_8051c62, align 4
  %v4_8051c6f = call i32 @function_8052775(i32 2, i32 2, i32 0, i32 %v1_8051c5d)
  store i32 %v4_8051c6f, i32* %esi.global-to-local, align 4
  %v10_8051c7b = icmp eq i32 %v4_8051c6f, -1
  br i1 %v10_8051c7b, label %dec_label_pc_8051cc2, label %dec_label_pc_8051c80

dec_label_pc_8051c80:                             ; preds = %dec_label_pc_8051c50
  %v2_8051c80 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8051c80, i32* @ebx, align 4
  store i32 2, i32* %stack_var_-28, align 4
  %v3_8051c9f = call i32 @function_805259a(i32 %v4_8051c6f, i32 %v2_8051c80, i32 16)
  %v2_8051ca7 = ptrtoint i32* %stack_var_-12 to i32
  %v0_8051cad = load i32, i32* %esi.global-to-local, align 4
  %v3_8051cae = call i32 @function_80525c5(i32 %v0_8051cad, i32 %v2_8051c80, i32 %v2_8051ca7)
  %v1_8051cb6 = call i32 @function_8051f81(i32 %v0_8051cad)
  br label %dec_label_pc_8051cc2

dec_label_pc_8051cc2:                             ; preds = %dec_label_pc_8051c50, %dec_label_pc_8051c80
  %v0_8051cc7 = phi i32 [ 0, %dec_label_pc_8051c50 ], [ 134744072, %dec_label_pc_8051c80 ]
  ret i32 %v0_8051cc7

; uselistorder directives
  uselistorder i32 %v4_8051c6f, { 1, 0, 2 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_805259a, { 4, 3, 1, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_8052775, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8051cc2, { 1, 0 }
}

define i32 @function_8051cd0() local_unnamed_addr {
dec_label_pc_8051cd0:
  %tmp = call i8* @__decompiler_undefined_function_2()
  %tmp17 = call i32 @__decompiler_undefined_function_0()
  %tmp18 = call i8* @__decompiler_undefined_function_2()
  %v4_8051cd7 = ptrtoint i8* %tmp18 to i32
  %v2_8051ce2 = load i8, i8* %tmp18, align 1
  %v3_8051ce2 = icmp eq i8 %v2_8051ce2, 0
  br i1 %v3_8051ce2, label %dec_label_pc_8051cf8, label %dec_label_pc_8051ce8

dec_label_pc_8051ce8:                             ; preds = %dec_label_pc_8051cd0, %dec_label_pc_8051ce8
  %v2_8051ce8 = phi i32 [ %v1_8051ceb, %dec_label_pc_8051ce8 ], [ 0, %dec_label_pc_8051cd0 ]
  %v1_8051ceb = add i32 %v2_8051ce8, 1
  %v2_8051cf2 = add i32 %v1_8051ceb, %v4_8051cd7
  %v3_8051cf2 = inttoptr i32 %v2_8051cf2 to i8*
  %v4_8051cf2 = load i8, i8* %v3_8051cf2, align 1
  %v5_8051cf2 = icmp eq i8 %v4_8051cf2, 0
  %v1_8051cf6 = icmp eq i1 %v5_8051cf2, false
  br i1 %v1_8051cf6, label %dec_label_pc_8051ce8, label %dec_label_pc_8051cf8

dec_label_pc_8051cf8:                             ; preds = %dec_label_pc_8051ce8, %dec_label_pc_8051cd0
  %v2_8051d2f = phi i32 [ 0, %dec_label_pc_8051cd0 ], [ %v1_8051ceb, %dec_label_pc_8051ce8 ]
  %v4_8051cfe = ptrtoint i8* %tmp to i32
  %tmp25 = icmp slt i32 %tmp17, 1
  br i1 %tmp25, label %dec_label_pc_8051d2c, label %dec_label_pc_8051d06.preheader

dec_label_pc_8051d06.preheader:                   ; preds = %dec_label_pc_8051cf8
  %v4_8051d06.pre = load i32, i32* @ecx, align 4
  %v6_8051d08.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8051d06

dec_label_pc_8051d06:                             ; preds = %dec_label_pc_8051d06.preheader, %dec_label_pc_8051d27
  %v0_8051d27 = phi i32 [ %tmp17, %dec_label_pc_8051d06.preheader ], [ %v1_8051d27, %dec_label_pc_8051d27 ]
  %v6_8051d08 = phi i32 [ %v6_8051d08.pre, %dec_label_pc_8051d06.preheader ], [ %v2_8051d21, %dec_label_pc_8051d27 ]
  %v0_8051d35 = phi i32 [ 0, %dec_label_pc_8051d06.preheader ], [ %v1_8051d089, %dec_label_pc_8051d27 ]
  %v4_8051d06 = phi i32 [ %v4_8051d06.pre, %dec_label_pc_8051d06.preheader ], [ %v0_8051d21, %dec_label_pc_8051d27 ]
  %v0_8051d0c = phi i32 [ %v4_8051cfe, %dec_label_pc_8051d06.preheader ], [ %v1_8051d0c, %dec_label_pc_8051d27 ]
  %v1_8051d06 = inttoptr i32 %v0_8051d0c to i8*
  %v2_8051d06 = load i8, i8* %v1_8051d06, align 1
  %v3_8051d06 = zext i8 %v2_8051d06 to i32
  %v5_8051d06 = and i32 %v4_8051d06, -256
  %v6_8051d06 = or i32 %v3_8051d06, %v5_8051d06
  store i32 %v6_8051d06, i32* @ecx, align 4
  %v2_8051d08 = add i32 %v0_8051d35, %v4_8051cd7
  %v3_8051d08 = inttoptr i32 %v2_8051d08 to i8*
  %v4_8051d08 = load i8, i8* %v3_8051d08, align 1
  %v5_8051d08 = zext i8 %v4_8051d08 to i32
  %v7_8051d08 = and i32 %v6_8051d08, -256
  %v8_8051d08 = or i32 %v5_8051d08, %v7_8051d08
  %v1_8051d0c = add i32 %v0_8051d0c, 1
  %v1_8051d0d = add i8 %v2_8051d06, -65
  %v8_8051d12 = icmp ugt i8 %v1_8051d0d, 25
  br i1 %v8_8051d12, label %dec_label_pc_8051d17, label %dec_label_pc_8051d14

dec_label_pc_8051d14:                             ; preds = %dec_label_pc_8051d06
  %v1_8051d14 = or i32 %v6_8051d06, 96
  store i32 %v1_8051d14, i32* @ecx, align 4
  br label %dec_label_pc_8051d17

dec_label_pc_8051d17:                             ; preds = %dec_label_pc_8051d06, %dec_label_pc_8051d14
  %v0_8051d21 = phi i32 [ %v6_8051d06, %dec_label_pc_8051d06 ], [ %v1_8051d14, %dec_label_pc_8051d14 ]
  %v1_8051d17 = add i8 %v4_8051d08, -65
  %v8_8051d1c = icmp ugt i8 %v1_8051d17, 25
  br i1 %v8_8051d1c, label %dec_label_pc_8051d21, label %dec_label_pc_8051d1e

dec_label_pc_8051d1e:                             ; preds = %dec_label_pc_8051d17
  %v1_8051d1e = or i32 %v8_8051d08, 96
  br label %dec_label_pc_8051d21

dec_label_pc_8051d21:                             ; preds = %dec_label_pc_8051d17, %dec_label_pc_8051d1e
  %v2_8051d21 = phi i32 [ %v8_8051d08, %dec_label_pc_8051d17 ], [ %v1_8051d1e, %dec_label_pc_8051d1e ]
  %v1_8051d21 = trunc i32 %v0_8051d21 to i8
  %v3_8051d21 = trunc i32 %v2_8051d21 to i8
  %v15_8051d21 = icmp eq i8 %v1_8051d21, %v3_8051d21
  br i1 %v15_8051d21, label %dec_label_pc_8051d35, label %dec_label_pc_8051d25

dec_label_pc_8051d25:                             ; preds = %dec_label_pc_8051d21
  br label %dec_label_pc_8051d27

dec_label_pc_8051d27:                             ; preds = %dec_label_pc_8051d35, %dec_label_pc_8051d25
  %v1_8051d089 = phi i32 [ %v1_8051d35, %dec_label_pc_8051d35 ], [ 0, %dec_label_pc_8051d25 ]
  %v1_8051d27 = add i32 %v0_8051d27, -1
  %tmp26 = icmp slt i32 %v1_8051d27, 1
  %tmp27 = icmp eq i1 %tmp26, false
  br i1 %tmp27, label %dec_label_pc_8051d06, label %dec_label_pc_8051d2c

dec_label_pc_8051d2c:                             ; preds = %dec_label_pc_8051d27, %dec_label_pc_8051cf8
  ret i32 -1

dec_label_pc_8051d35:                             ; preds = %dec_label_pc_8051d21
  %v1_8051d35 = add i32 %v0_8051d35, 1
  %v14_8051d36 = icmp eq i32 %v2_8051d2f, %v1_8051d35
  %v1_8051d39 = icmp eq i1 %v14_8051d36, false
  br i1 %v1_8051d39, label %dec_label_pc_8051d27, label %dec_label_pc_8051d3b

dec_label_pc_8051d3b:                             ; preds = %dec_label_pc_8051d35
  store i32 %v4_8051cfe, i32* @ecx, align 4
  %v2_8051d41 = sub i32 %v1_8051d0c, %v4_8051cfe
  ret i32 %v2_8051d41

; uselistorder directives
  uselistorder i32 %v1_8051d27, { 1, 0 }
  uselistorder i32 %v0_8051d35, { 1, 0 }
  uselistorder i32 %v4_8051cfe, { 2, 1, 0 }
  uselistorder i8* %tmp18, { 1, 0 }
  uselistorder i8 25, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8051d21, { 1, 0 }
  uselistorder label %dec_label_pc_8051d17, { 1, 0 }
  uselistorder label %dec_label_pc_8051d06, { 1, 0 }
  uselistorder label %dec_label_pc_8051ce8, { 1, 0 }
}

define i32 @function_8051d50() local_unnamed_addr {
dec_label_pc_8051d50:
  %tmp = call i8* @__decompiler_undefined_function_2()
  %tmp13 = call i8* @__decompiler_undefined_function_2()
  %v4_8051d52 = ptrtoint i8* %tmp13 to i32
  %v4_8051d58 = ptrtoint i8* %tmp to i32
  %v2_8051d5c = load i8, i8* %tmp13, align 1
  %v3_8051d5c = icmp eq i8 %v2_8051d5c, 0
  br i1 %v3_8051d5c, label %dec_label_pc_8051d68, label %dec_label_pc_8051d61

dec_label_pc_8051d61:                             ; preds = %dec_label_pc_8051d50, %dec_label_pc_8051d61
  %v0_8051d61 = phi i32 [ %v1_8051d61, %dec_label_pc_8051d61 ], [ 0, %dec_label_pc_8051d50 ]
  %v1_8051d61 = add i32 %v0_8051d61, 1
  %v2_8051d62 = add i32 %v1_8051d61, %v4_8051d52
  %v3_8051d62 = inttoptr i32 %v2_8051d62 to i8*
  %v4_8051d62 = load i8, i8* %v3_8051d62, align 1
  %v5_8051d62 = icmp eq i8 %v4_8051d62, 0
  %v1_8051d66 = icmp eq i1 %v5_8051d62, false
  br i1 %v1_8051d66, label %dec_label_pc_8051d61, label %dec_label_pc_8051d68

dec_label_pc_8051d68:                             ; preds = %dec_label_pc_8051d61, %dec_label_pc_8051d50
  %v0_8051d79 = phi i32 [ 0, %dec_label_pc_8051d50 ], [ %v1_8051d61, %dec_label_pc_8051d61 ]
  %v2_8051d6a = load i8, i8* %tmp, align 1
  %v3_8051d6a = icmp eq i8 %v2_8051d6a, 0
  br i1 %v3_8051d6a, label %dec_label_pc_8051d77, label %dec_label_pc_8051d70

dec_label_pc_8051d70:                             ; preds = %dec_label_pc_8051d68, %dec_label_pc_8051d70
  %v0_8051d70 = phi i32 [ %v1_8051d70, %dec_label_pc_8051d70 ], [ 0, %dec_label_pc_8051d68 ]
  %v1_8051d70 = add i32 %v0_8051d70, 1
  %v2_8051d71 = add i32 %v1_8051d70, %v4_8051d58
  %v3_8051d71 = inttoptr i32 %v2_8051d71 to i8*
  %v4_8051d71 = load i8, i8* %v3_8051d71, align 1
  %v5_8051d71 = icmp eq i8 %v4_8051d71, 0
  %v1_8051d75 = icmp eq i1 %v5_8051d71, false
  br i1 %v1_8051d75, label %dec_label_pc_8051d70, label %dec_label_pc_8051d77

dec_label_pc_8051d77:                             ; preds = %dec_label_pc_8051d70, %dec_label_pc_8051d68
  %v0_8051d77 = phi i32 [ 0, %dec_label_pc_8051d68 ], [ %v1_8051d70, %dec_label_pc_8051d70 ]
  %v12_8051d79 = icmp eq i32 %v0_8051d79, %v0_8051d77
  br i1 %v12_8051d79, label %dec_label_pc_8051d84.preheader, label %dec_label_pc_8051d7d

dec_label_pc_8051d84.preheader:                   ; preds = %dec_label_pc_8051d77
  %v10_8051d8518 = icmp eq i32 %v0_8051d79, 0
  br i1 %v10_8051d8518, label %dec_label_pc_8051d92, label %dec_label_pc_8051d8a

dec_label_pc_8051d7d:                             ; preds = %dec_label_pc_8051d8a, %dec_label_pc_8051d77
  ret i32 0

dec_label_pc_8051d82:                             ; preds = %dec_label_pc_8051d8a
  %v3_8051d8a = zext i8 %v2_8051d8a to i32
  %v5_8051d8a = and i32 %v4_8051d8a20, -256
  %v6_8051d8a = or i32 %v3_8051d8a, %v5_8051d8a
  %v1_8051d82 = add i32 %v0_8051d8221, 1
  %v1_8051d83 = add i32 %v0_8051d8319, 1
  %v10_8051d85 = icmp eq i32 %v1_8051d8422, 0
  br i1 %v10_8051d85, label %dec_label_pc_8051d92, label %dec_label_pc_8051d8a

dec_label_pc_8051d8a:                             ; preds = %dec_label_pc_8051d84.preheader, %dec_label_pc_8051d82
  %v1_8051d8422.in = phi i32 [ %v1_8051d8422, %dec_label_pc_8051d82 ], [ %v0_8051d79, %dec_label_pc_8051d84.preheader ]
  %v4_8051d8a20 = phi i32 [ %v6_8051d8a, %dec_label_pc_8051d82 ], [ %v0_8051d79, %dec_label_pc_8051d84.preheader ]
  %v0_8051d8221 = phi i32 [ %v1_8051d82, %dec_label_pc_8051d82 ], [ %v4_8051d52, %dec_label_pc_8051d84.preheader ]
  %v0_8051d8319 = phi i32 [ %v1_8051d83, %dec_label_pc_8051d82 ], [ %v4_8051d58, %dec_label_pc_8051d84.preheader ]
  %v1_8051d8422 = add i32 %v1_8051d8422.in, -1
  %v1_8051d8a = inttoptr i32 %v0_8051d8221 to i8*
  %v2_8051d8a = load i8, i8* %v1_8051d8a, align 1
  %v3_8051d8c = inttoptr i32 %v0_8051d8319 to i8*
  %v4_8051d8c = load i8, i8* %v3_8051d8c, align 1
  %v15_8051d8c = icmp eq i8 %v2_8051d8a, %v4_8051d8c
  br i1 %v15_8051d8c, label %dec_label_pc_8051d82, label %dec_label_pc_8051d7d

dec_label_pc_8051d92:                             ; preds = %dec_label_pc_8051d82, %dec_label_pc_8051d84.preheader
  ret i32 1

; uselistorder directives
  uselistorder i32 %v0_8051d79, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8051d8a, { 1, 0 }
  uselistorder label %dec_label_pc_8051d70, { 1, 0 }
  uselistorder label %dec_label_pc_8051d61, { 1, 0 }
}

define i32 @function_8051da0() local_unnamed_addr {
dec_label_pc_8051da0:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i8* @__decompiler_undefined_function_2()
  %tmp14 = call i8* @__decompiler_undefined_function_2()
  %v4_8051da2 = ptrtoint i8* %tmp14 to i32
  %v4_8051da8 = ptrtoint i8* %tmp13 to i32
  %v2_8051db0 = load i8, i8* %tmp14, align 1
  %v3_8051db0 = icmp eq i8 %v2_8051db0, 0
  br i1 %v3_8051db0, label %dec_label_pc_8051dbc, label %dec_label_pc_8051db5

dec_label_pc_8051db5:                             ; preds = %dec_label_pc_8051da0, %dec_label_pc_8051db5
  %v0_8051db5 = phi i32 [ %v1_8051db5, %dec_label_pc_8051db5 ], [ 0, %dec_label_pc_8051da0 ]
  %v1_8051db5 = add i32 %v0_8051db5, 1
  %v2_8051db6 = add i32 %v1_8051db5, %v4_8051da2
  %v3_8051db6 = inttoptr i32 %v2_8051db6 to i8*
  %v4_8051db6 = load i8, i8* %v3_8051db6, align 1
  %v5_8051db6 = icmp eq i8 %v4_8051db6, 0
  %v1_8051dba = icmp eq i1 %v5_8051db6, false
  br i1 %v1_8051dba, label %dec_label_pc_8051db5, label %dec_label_pc_8051dbc

dec_label_pc_8051dbc:                             ; preds = %dec_label_pc_8051db5, %dec_label_pc_8051da0
  %v1_8051dca = phi i32 [ 0, %dec_label_pc_8051da0 ], [ %v1_8051db5, %dec_label_pc_8051db5 ]
  %v2_8051dbe = load i8, i8* %tmp13, align 1
  %v3_8051dbe = icmp eq i8 %v2_8051dbe, 0
  br i1 %v3_8051dbe, label %dec_label_pc_8051dca, label %dec_label_pc_8051dc3

dec_label_pc_8051dc3:                             ; preds = %dec_label_pc_8051dbc, %dec_label_pc_8051dc3
  %v0_8051dc3 = phi i32 [ %v1_8051dc3, %dec_label_pc_8051dc3 ], [ 0, %dec_label_pc_8051dbc ]
  %v1_8051dc3 = add i32 %v0_8051dc3, 1
  %v2_8051dc4 = add i32 %v1_8051dc3, %v4_8051da8
  %v3_8051dc4 = inttoptr i32 %v2_8051dc4 to i8*
  %v4_8051dc4 = load i8, i8* %v3_8051dc4, align 1
  %v5_8051dc4 = icmp eq i8 %v4_8051dc4, 0
  %v1_8051dc8 = icmp eq i1 %v5_8051dc4, false
  br i1 %v1_8051dc8, label %dec_label_pc_8051dc3, label %dec_label_pc_8051dca

dec_label_pc_8051dca:                             ; preds = %dec_label_pc_8051dc3, %dec_label_pc_8051dbc
  %v1_8051dce = phi i32 [ 0, %dec_label_pc_8051dbc ], [ %v1_8051dc3, %dec_label_pc_8051dc3 ]
  %v8_8051dcc = icmp sgt i32 %tmp, %v1_8051dca
  br i1 %v8_8051dcc, label %dec_label_pc_8051dd2, label %dec_label_pc_8051dce

dec_label_pc_8051dce:                             ; preds = %dec_label_pc_8051dca
  %v7_8051dd0 = icmp sgt i32 %tmp, %v1_8051dce
  br i1 %v7_8051dd0, label %dec_label_pc_8051dd2, label %dec_label_pc_8051dd9.preheader

dec_label_pc_8051dd9.preheader:                   ; preds = %dec_label_pc_8051dce
  %v10_8051dda19 = icmp eq i32 %tmp, 0
  br i1 %v10_8051dda19, label %dec_label_pc_8051dd4, label %dec_label_pc_8051ddf

dec_label_pc_8051dd2:                             ; preds = %dec_label_pc_8051ddf, %dec_label_pc_8051dce, %dec_label_pc_8051dca
  br label %dec_label_pc_8051dd4

dec_label_pc_8051dd4:                             ; preds = %dec_label_pc_8051dd9.preheader, %dec_label_pc_8051dd7, %dec_label_pc_8051dd2
  %storemerge = phi i32 [ 0, %dec_label_pc_8051dd2 ], [ 1, %dec_label_pc_8051dd7 ], [ 1, %dec_label_pc_8051dd9.preheader ]
  ret i32 %storemerge

dec_label_pc_8051dd7:                             ; preds = %dec_label_pc_8051ddf
  %v3_8051ddf = zext i8 %v2_8051ddf to i32
  %v5_8051ddf = and i32 %v4_8051ddf21, -256
  %v6_8051ddf = or i32 %v3_8051ddf, %v5_8051ddf
  %v1_8051dd7 = add i32 %v0_8051dd722, 1
  %v1_8051dd8 = add i32 %v0_8051dd820, 1
  %v10_8051dda = icmp eq i32 %v1_8051dd923, 0
  br i1 %v10_8051dda, label %dec_label_pc_8051dd4, label %dec_label_pc_8051ddf

dec_label_pc_8051ddf:                             ; preds = %dec_label_pc_8051dd9.preheader, %dec_label_pc_8051dd7
  %v1_8051dd923.in = phi i32 [ %v1_8051dd923, %dec_label_pc_8051dd7 ], [ %tmp, %dec_label_pc_8051dd9.preheader ]
  %v0_8051dd722 = phi i32 [ %v1_8051dd7, %dec_label_pc_8051dd7 ], [ %v4_8051da2, %dec_label_pc_8051dd9.preheader ]
  %v4_8051ddf21 = phi i32 [ %v6_8051ddf, %dec_label_pc_8051dd7 ], [ %v1_8051dce, %dec_label_pc_8051dd9.preheader ]
  %v0_8051dd820 = phi i32 [ %v1_8051dd8, %dec_label_pc_8051dd7 ], [ %v4_8051da8, %dec_label_pc_8051dd9.preheader ]
  %v1_8051dd923 = add i32 %v1_8051dd923.in, -1
  %v1_8051ddf = inttoptr i32 %v0_8051dd722 to i8*
  %v2_8051ddf = load i8, i8* %v1_8051ddf, align 1
  %v3_8051de1 = inttoptr i32 %v0_8051dd820 to i8*
  %v4_8051de1 = load i8, i8* %v3_8051de1, align 1
  %v15_8051de1 = icmp eq i8 %v2_8051ddf, %v4_8051de1
  br i1 %v15_8051de1, label %dec_label_pc_8051dd7, label %dec_label_pc_8051dd2

; uselistorder directives
  uselistorder label %dec_label_pc_8051ddf, { 1, 0 }
  uselistorder label %dec_label_pc_8051dd4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8051dc3, { 1, 0 }
  uselistorder label %dec_label_pc_8051db5, { 1, 0 }
}

define i32 @function_8051df0() local_unnamed_addr {
dec_label_pc_8051df0:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp20 = call i64 @__decompiler_undefined_function_5()
  %tmp21 = call i32 @__decompiler_undefined_function_0()
  %tmp22 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-64 = alloca i32, align 4
  %v12_8051df4 = ptrtoint i32* %stack_var_-64 to i32
  %v4_8051df7 = inttoptr i32 %tmp22 to i8*
  store i32 %tmp21, i32* %eax.global-to-local, align 4
  %v4_8051dff = trunc i64 %tmp20 to i32
  store i32 %v4_8051dff, i32* %esi.global-to-local, align 4
  %v2_8051e03 = icmp eq i32 %tmp22, 0
  br i1 %v2_8051e03, label %dec_label_pc_8051e70, label %dec_label_pc_8051e07

dec_label_pc_8051e07:                             ; preds = %dec_label_pc_8051df0
  %v1_8051e07 = icmp eq i32 %tmp21, 0
  %v2_8051e07 = icmp slt i32 %tmp21, 0
  br i1 %v1_8051e07, label %dec_label_pc_8051e80, label %dec_label_pc_8051e0b

dec_label_pc_8051e0b:                             ; preds = %dec_label_pc_8051e07
  %v9_8051e10 = icmp eq i32 %v4_8051dff, 10
  br i1 %v9_8051e10, label %dec_label_pc_8051e9d, label %dec_label_pc_8051e19

dec_label_pc_8051e19:                             ; preds = %dec_label_pc_8051e9d, %dec_label_pc_8051e0b
  br label %dec_label_pc_8051e1d

dec_label_pc_8051e1d:                             ; preds = %dec_label_pc_8051ea5, %dec_label_pc_8051e19
  %storemerge32 = phi i32 [ %tmp21, %dec_label_pc_8051e19 ], [ %v1_8051ea7, %dec_label_pc_8051ea5 ]
  %v0_8051e243 = phi i32 [ %tmp21, %dec_label_pc_8051e19 ], [ %v1_8051ea7, %dec_label_pc_8051ea5 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_8051e19 ], [ 1, %dec_label_pc_8051ea5 ]
  store i32 %storemerge32, i32* %ecx.global-to-local, align 4
  store i32 %storemerge, i32* %ebp.global-to-local, align 4
  store i32 32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051e22

dec_label_pc_8051e22:                             ; preds = %dec_label_pc_8051e22.dec_label_pc_8051e22_crit_edge, %dec_label_pc_8051e1d
  %v2_8051e33 = phi i32 [ %v2_8051e33.pre, %dec_label_pc_8051e22.dec_label_pc_8051e22_crit_edge ], [ %v12_8051df4, %dec_label_pc_8051e1d ]
  %v3_8051e33 = phi i32 [ %v1_8051e3b, %dec_label_pc_8051e22.dec_label_pc_8051e22_crit_edge ], [ 32, %dec_label_pc_8051e1d ]
  %v0_8051e26 = phi i32 [ %v0_8051e3c, %dec_label_pc_8051e22.dec_label_pc_8051e22_crit_edge ], [ %v4_8051dff, %dec_label_pc_8051e1d ]
  %v0_8051e24 = phi i32 [ %div18, %dec_label_pc_8051e22.dec_label_pc_8051e22_crit_edge ], [ %v0_8051e243, %dec_label_pc_8051e1d ]
  %tmp29 = urem i32 %v0_8051e24, %v0_8051e26
  %v7_8051e2e = icmp sgt i32 %tmp29, 9
  %v1_8051e30.v1_8051e2b.v = select i1 %v7_8051e2e, i32 55, i32 48
  %v1_8051e30.v1_8051e2b = add i32 %v1_8051e30.v1_8051e2b.v, %tmp29
  %v1_8051e33 = trunc i32 %v1_8051e30.v1_8051e2b to i8
  %v4_8051e33 = add i32 %v3_8051e33, 14
  %v5_8051e33 = add i32 %v4_8051e33, %v2_8051e33
  %v6_8051e33 = inttoptr i32 %v5_8051e33 to i8*
  store i8 %v1_8051e33, i8* %v6_8051e33, align 1
  %v0_8051e39 = load i32, i32* %ecx.global-to-local, align 4
  %v0_8051e3b = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051e3b = add i32 %v0_8051e3b, -1
  store i32 %v1_8051e3b, i32* %ebx.global-to-local, align 4
  %v0_8051e3c = load i32, i32* %esi.global-to-local, align 4
  %div18 = udiv i32 %v0_8051e39, %v0_8051e3c
  store i32 %div18, i32* %eax.global-to-local, align 4
  %tmp30 = urem i32 %v0_8051e39, %v0_8051e3c
  store i32 %tmp30, i32* %edx.global-to-local, align 4
  store i32 %div18, i32* %ecx.global-to-local, align 4
  %v2_8051e40 = icmp ugt i32 %v0_8051e3c, %v0_8051e39
  %v1_8051e42 = icmp eq i1 %v2_8051e40, false
  br i1 %v1_8051e42, label %dec_label_pc_8051e22.dec_label_pc_8051e22_crit_edge, label %dec_label_pc_8051e44

dec_label_pc_8051e22.dec_label_pc_8051e22_crit_edge: ; preds = %dec_label_pc_8051e22
  %v2_8051e33.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051e22

dec_label_pc_8051e44:                             ; preds = %dec_label_pc_8051e22
  %v0_8051e44 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8051e44 = icmp eq i32 %v0_8051e44, 0
  %v1_8051e46 = icmp eq i1 %v1_8051e44, false
  br i1 %v1_8051e46, label %dec_label_pc_8051e96, label %dec_label_pc_8051e48

dec_label_pc_8051e48:                             ; preds = %dec_label_pc_8051e44
  store i32 %v0_8051e3b, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051e49

dec_label_pc_8051e49:                             ; preds = %dec_label_pc_8051e96, %dec_label_pc_8051e48
  %v1_8051e49 = phi i32 [ %v1_8051e49.pre, %dec_label_pc_8051e96 ], [ %v0_8051e3b, %dec_label_pc_8051e48 ]
  %v0_8051e49 = load i32, i32* @esp, align 4
  %v2_8051e49 = add i32 %v1_8051e49, 14
  %v3_8051e49 = add i32 %v2_8051e49, %v0_8051e49
  store i32 %v3_8051e49, i32* %eax.global-to-local, align 4
  %v1_8051e4d = inttoptr i32 %v3_8051e49 to i8*
  %v2_8051e4d = load i8, i8* %v1_8051e4d, align 1
  %v3_8051e4d = icmp eq i8 %v2_8051e4d, 0
  br i1 %v3_8051e4d, label %dec_label_pc_8051eb5, label %dec_label_pc_8051e52

dec_label_pc_8051e52:                             ; preds = %dec_label_pc_8051e49
  store i32 0, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8051e54

dec_label_pc_8051e54:                             ; preds = %dec_label_pc_8051e54, %dec_label_pc_8051e52
  %v0_8051e54 = phi i32 [ %v1_8051e54, %dec_label_pc_8051e54 ], [ 0, %dec_label_pc_8051e52 ]
  %v1_8051e54 = add i32 %v0_8051e54, 1
  store i32 %v1_8051e54, i32* %ecx.global-to-local, align 4
  %v2_8051e55 = add i32 %v1_8051e54, %v3_8051e49
  %v3_8051e55 = inttoptr i32 %v2_8051e55 to i8*
  %v4_8051e55 = load i8, i8* %v3_8051e55, align 1
  %v5_8051e55 = icmp eq i8 %v4_8051e55, 0
  %v1_8051e59 = icmp eq i1 %v5_8051e55, false
  br i1 %v1_8051e59, label %dec_label_pc_8051e54, label %dec_label_pc_8051e5b

dec_label_pc_8051e5b:                             ; preds = %dec_label_pc_8051e54
  %v10_8051e5b = icmp eq i32 %v0_8051e54, -2
  br i1 %v10_8051e5b, label %dec_label_pc_8051e70, label %dec_label_pc_8051e60

dec_label_pc_8051e60:                             ; preds = %dec_label_pc_8051e5b
  store i32 %tmp22, i32* %ebx.global-to-local, align 4
  store i32 %v3_8051e49, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051e64

dec_label_pc_8051e64:                             ; preds = %dec_label_pc_8051eb5, %dec_label_pc_8051e60, %dec_label_pc_8051e64.dec_label_pc_8051e64_crit_edge
  %v2_8051e67 = phi i32 [ %v1_8051e6a, %dec_label_pc_8051e64.dec_label_pc_8051e64_crit_edge ], [ %tmp22, %dec_label_pc_8051e60 ], [ %tmp22, %dec_label_pc_8051eb5 ]
  %v0_8051e66 = phi i32 [ %v0_8051e6b, %dec_label_pc_8051e64.dec_label_pc_8051e64_crit_edge ], [ %v1_8051e54, %dec_label_pc_8051e60 ], [ 0, %dec_label_pc_8051eb5 ]
  %v4_8051e64 = phi i32 [ %v4_8051e64.pre, %dec_label_pc_8051e64.dec_label_pc_8051e64_crit_edge ], [ %v3_8051e49, %dec_label_pc_8051e60 ], [ %v3_8051e49, %dec_label_pc_8051eb5 ]
  %v0_8051e64 = phi i32 [ %v1_8051e69, %dec_label_pc_8051e64.dec_label_pc_8051e64_crit_edge ], [ %v3_8051e49, %dec_label_pc_8051e60 ], [ %v3_8051e49, %dec_label_pc_8051eb5 ]
  %v1_8051e64 = inttoptr i32 %v0_8051e64 to i8*
  %v2_8051e64 = load i8, i8* %v1_8051e64, align 1
  %v3_8051e64 = zext i8 %v2_8051e64 to i32
  %v5_8051e64 = and i32 %v4_8051e64, -256
  %v6_8051e64 = or i32 %v3_8051e64, %v5_8051e64
  store i32 %v6_8051e64, i32* %eax.global-to-local, align 4
  %v1_8051e66 = add i32 %v0_8051e66, -1
  store i32 %v1_8051e66, i32* %ecx.global-to-local, align 4
  %v3_8051e67 = inttoptr i32 %v2_8051e67 to i8*
  store i8 %v2_8051e64, i8* %v3_8051e67, align 1
  %v0_8051e69 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051e69 = add i32 %v0_8051e69, 1
  store i32 %v1_8051e69, i32* %edx.global-to-local, align 4
  %v0_8051e6a = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051e6a = add i32 %v0_8051e6a, 1
  store i32 %v1_8051e6a, i32* %ebx.global-to-local, align 4
  %v0_8051e6b = load i32, i32* %ecx.global-to-local, align 4
  %v10_8051e6b = icmp eq i32 %v0_8051e6b, -1
  %v1_8051e6e = icmp eq i1 %v10_8051e6b, false
  br i1 %v1_8051e6e, label %dec_label_pc_8051e64.dec_label_pc_8051e64_crit_edge, label %dec_label_pc_8051e70.loopexit

dec_label_pc_8051e64.dec_label_pc_8051e64_crit_edge: ; preds = %dec_label_pc_8051e64
  %v4_8051e64.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051e64

dec_label_pc_8051e70.loopexit:                    ; preds = %dec_label_pc_8051e64
  br label %dec_label_pc_8051e70

dec_label_pc_8051e70:                             ; preds = %dec_label_pc_8051e70.loopexit, %dec_label_pc_8051e5b, %dec_label_pc_8051df0
  store i32 %tmp22, i32* %eax.global-to-local, align 4
  ret i32 %tmp22

dec_label_pc_8051e80:                             ; preds = %dec_label_pc_8051e07
  store i8 48, i8* %v4_8051df7, align 1
  %v2_8051e83 = add i32 %tmp22, 1
  %v3_8051e83 = inttoptr i32 %v2_8051e83 to i8*
  store i8 0, i8* %v3_8051e83, align 1
  store i32 %tmp22, i32* %eax.global-to-local, align 4
  ret i32 %tmp22

dec_label_pc_8051e96:                             ; preds = %dec_label_pc_8051e44
  %v0_8051e96 = load i32, i32* @esp, align 4
  %v2_8051e96 = add i32 %v0_8051e3b, 13
  %v3_8051e96 = add i32 %v2_8051e96, %v0_8051e96
  %v4_8051e96 = inttoptr i32 %v3_8051e96 to i8*
  store i8 45, i8* %v4_8051e96, align 1
  %v1_8051e49.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051e49

dec_label_pc_8051e9d:                             ; preds = %dec_label_pc_8051e0b
  %v1_8051e9f = icmp eq i1 %v2_8051e07, false
  br i1 %v1_8051e9f, label %dec_label_pc_8051e19, label %dec_label_pc_8051ea5

dec_label_pc_8051ea5:                             ; preds = %dec_label_pc_8051e9d
  %v1_8051ea7 = sub i32 0, %tmp21
  br label %dec_label_pc_8051e1d

dec_label_pc_8051eb5:                             ; preds = %dec_label_pc_8051e49
  store i32 %tmp22, i32* %ebx.global-to-local, align 4
  store i32 %v3_8051e49, i32* %edx.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8051e64

; uselistorder directives
  uselistorder i32 %v1_8051e6a, { 1, 0 }
  uselistorder i32 %v1_8051e69, { 1, 0 }
  uselistorder i32 %v1_8051e54, { 0, 1, 3, 2 }
  uselistorder i32 %v3_8051e49, { 5, 0, 1, 2, 3, 6, 4, 7, 8 }
  uselistorder i32 %div18, { 1, 2, 0 }
  uselistorder i32 %v1_8051e3b, { 1, 0 }
  uselistorder i32 %v4_8051dff, { 1, 0, 2 }
  uselistorder i32 %tmp22, { 5, 2, 3, 4, 6, 7, 0, 1, 8, 9, 10 }
  uselistorder i32 %tmp21, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %ebx.global-to-local, { 0, 5, 1, 2, 3, 4, 6, 7, 8 }
  uselistorder i8 45, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051e64, { 0, 2, 1 }
}

define i32 @function_8051ebd(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8051ebd:
  %ebx.global-to-local = alloca i32, align 4
  %v0_8051ebd = load i32, i32* @edi, align 4
  %v0_8051ebe = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_8051ed2 = add i32 %arg2, -12
  %v6_8051edc = icmp ugt i32 %v1_8051ed2, 2
  br i1 %v6_8051edc, label %dec_label_pc_8051eec, label %dec_label_pc_8051ede

dec_label_pc_8051ede:                             ; preds = %dec_label_pc_8051ebd
  %v4_8051ee2 = call i32 @function_8051f14(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v1_8051ed2)
  br label %dec_label_pc_8051f0e

dec_label_pc_8051eec:                             ; preds = %dec_label_pc_8051ebd
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_8051ef4 = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_8051ef4, i32* %ebx.global-to-local, align 4
  %tmp17 = icmp ult i32 %v2_8051ef4, -4095
  br i1 %tmp17, label %dec_label_pc_8051f0c, label %dec_label_pc_8051f00

dec_label_pc_8051f00:                             ; preds = %dec_label_pc_8051eec
  %v1_8051f00 = call i32 @function_80524b9(i32 %v0_8051ebe)
  %v0_8051f05 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051f05 = sub i32 0, %v0_8051f05
  %v2_8051f07 = inttoptr i32 %v1_8051f00 to i32*
  store i32 %v1_8051f05, i32* %v2_8051f07, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051f0c

dec_label_pc_8051f0c:                             ; preds = %dec_label_pc_8051eec, %dec_label_pc_8051f00
  %v0_8051f0c = phi i32 [ %v2_8051ef4, %dec_label_pc_8051eec ], [ -1, %dec_label_pc_8051f00 ]
  br label %dec_label_pc_8051f0e

dec_label_pc_8051f0e:                             ; preds = %dec_label_pc_8051ede, %dec_label_pc_8051f0c
  %v0_8051f13 = phi i32 [ %v4_8051ee2, %dec_label_pc_8051ede ], [ %v0_8051f0c, %dec_label_pc_8051f0c ]
  store i32 %v0_8051ebe, i32* @ebx, align 4
  store i32 %v0_8051ebd, i32* @edi, align 4
  ret i32 %v0_8051f13

; uselistorder directives
  uselistorder i32 %v2_8051ef4, { 1, 0, 2 }
  uselistorder i32 %v0_8051ebe, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8051f0e, { 1, 0 }
  uselistorder label %dec_label_pc_8051f0c, { 1, 0 }
}

define i32 @function_8051f14(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8051f14:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051f14 = load i32, i32* @edi, align 4
  store i32 %v0_8051f14, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8051f2c = load i32, i32* @ebx, align 4
  %v1_8051f34 = call i32 @int80_syscall(i32 221)
  store i32 %v1_8051f34, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v1_8051f34, -4095
  br i1 %tmp12, label %dec_label_pc_8051f4c, label %dec_label_pc_8051f40

dec_label_pc_8051f40:                             ; preds = %dec_label_pc_8051f14
  %v1_8051f40 = call i32 @function_80524b9(i32 %v0_8051f2c)
  %v0_8051f45 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051f45 = sub i32 0, %v0_8051f45
  %v2_8051f47 = inttoptr i32 %v1_8051f40 to i32*
  store i32 %v1_8051f45, i32* %v2_8051f47, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8051f51.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8051f4c

dec_label_pc_8051f4c:                             ; preds = %dec_label_pc_8051f14, %dec_label_pc_8051f40
  %v2_8051f51 = phi i32 [ %v0_8051f14, %dec_label_pc_8051f14 ], [ %v2_8051f51.pre, %dec_label_pc_8051f40 ]
  %v0_8051f4c = phi i32 [ %v1_8051f34, %dec_label_pc_8051f14 ], [ -1, %dec_label_pc_8051f40 ]
  store i32 %v2_8051f51, i32* %edi.global-to-local, align 4
  ret i32 %v0_8051f4c

; uselistorder directives
  uselistorder i32 %v1_8051f34, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051f4c, { 1, 0 }
}

define i32 @function_8051f53(i8* %arg1) local_unnamed_addr {
dec_label_pc_8051f53:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051f53 = load i32, i32* @edi, align 4
  store i32 %v0_8051f53, i32* %stack_var_-4, align 4
  %v4_8051f57 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051f57, i32* %edi.global-to-local, align 4
  %v0_8051f5b = load i32, i32* @ebx, align 4
  %v3_8051f63 = call i32 @chdir(i8* %arg1)
  store i32 %v3_8051f63, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v3_8051f63, -4095
  br i1 %tmp9, label %dec_label_pc_8051f7b, label %dec_label_pc_8051f6f

dec_label_pc_8051f6f:                             ; preds = %dec_label_pc_8051f53
  %v1_8051f6f = call i32 @function_80524b9(i32 %v0_8051f5b)
  %v0_8051f74 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051f74 = sub i32 0, %v0_8051f74
  %v2_8051f76 = inttoptr i32 %v1_8051f6f to i32*
  store i32 %v1_8051f74, i32* %v2_8051f76, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8051f7f.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8051f7b

dec_label_pc_8051f7b:                             ; preds = %dec_label_pc_8051f53, %dec_label_pc_8051f6f
  %v2_8051f7f = phi i32 [ %v0_8051f53, %dec_label_pc_8051f53 ], [ %v2_8051f7f.pre, %dec_label_pc_8051f6f ]
  %v0_8051f7b = phi i32 [ %v3_8051f63, %dec_label_pc_8051f53 ], [ -1, %dec_label_pc_8051f6f ]
  store i32 %v2_8051f7f, i32* %edi.global-to-local, align 4
  ret i32 %v0_8051f7b

; uselistorder directives
  uselistorder i32 %v3_8051f63, { 1, 0, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051f7b, { 1, 0 }
}

define i32 @function_8051f81(i32 %arg1) local_unnamed_addr {
dec_label_pc_8051f81:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051f81 = load i32, i32* @edi, align 4
  store i32 %v0_8051f81, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8051f89 = load i32, i32* @ebx, align 4
  %v1_8051f91 = call i32 @close(i32 %arg1)
  store i32 %v0_8051f89, i32* @ebx, align 4
  store i32 %v1_8051f91, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v1_8051f91, -4095
  br i1 %tmp9, label %dec_label_pc_8051fa9, label %dec_label_pc_8051f9d

dec_label_pc_8051f9d:                             ; preds = %dec_label_pc_8051f81
  %v1_8051f9d = call i32 @function_80524b9(i32 %v0_8051f89)
  %v0_8051fa2 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051fa2 = sub i32 0, %v0_8051fa2
  %v2_8051fa4 = inttoptr i32 %v1_8051f9d to i32*
  store i32 %v1_8051fa2, i32* %v2_8051fa4, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8051fad.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8051fa9

dec_label_pc_8051fa9:                             ; preds = %dec_label_pc_8051f81, %dec_label_pc_8051f9d
  %v2_8051fad = phi i32 [ %v0_8051f81, %dec_label_pc_8051f81 ], [ %v2_8051fad.pre, %dec_label_pc_8051f9d ]
  %v0_8051fa9 = phi i32 [ %v1_8051f91, %dec_label_pc_8051f81 ], [ -1, %dec_label_pc_8051f9d ]
  store i32 %v2_8051fad, i32* @edi, align 4
  ret i32 %v0_8051fa9

; uselistorder directives
  uselistorder i32 %v1_8051f91, { 1, 0, 2 }
  uselistorder i32 %v0_8051f89, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051fa9, { 1, 0 }
}

define i32 @function_8051faf() local_unnamed_addr {
dec_label_pc_8051faf:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051faf = load i32, i32* @ebx, align 4
  store i32 %v0_8051faf, i32* %stack_var_-4, align 4
  %v1_8051fb8 = call i32 @fork(i32 %v0_8051faf)
  store i32 %v1_8051fb8, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8051fb8, -4095
  br i1 %tmp7, label %dec_label_pc_8051fcf, label %dec_label_pc_8051fc3

dec_label_pc_8051fc3:                             ; preds = %dec_label_pc_8051faf
  %v1_8051fc3 = call i32 @function_80524b9(i32 %v0_8051faf)
  %v0_8051fc8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051fc8 = sub i32 0, %v0_8051fc8
  %v2_8051fca = inttoptr i32 %v1_8051fc3 to i32*
  store i32 %v1_8051fc8, i32* %v2_8051fca, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8051fd3.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8051fcf

dec_label_pc_8051fcf:                             ; preds = %dec_label_pc_8051faf, %dec_label_pc_8051fc3
  %v2_8051fd3 = phi i32 [ %v0_8051faf, %dec_label_pc_8051faf ], [ %v2_8051fd3.pre, %dec_label_pc_8051fc3 ]
  %v0_8051fcf = phi i32 [ %v1_8051fb8, %dec_label_pc_8051faf ], [ -1, %dec_label_pc_8051fc3 ]
  store i32 %v2_8051fd3, i32* @ebx, align 4
  ret i32 %v0_8051fcf

; uselistorder directives
  uselistorder i32 %v1_8051fb8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051fcf, { 1, 0 }
}

define i32 @function_8051fd5() local_unnamed_addr {
dec_label_pc_8051fd5:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051fd5 = load i32, i32* @ebx, align 4
  store i32 %v0_8051fd5, i32* %stack_var_-4, align 4
  %v1_8051fde = call i32 @getpid(i32 %v0_8051fd5)
  store i32 %v1_8051fde, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8051fde, -4095
  br i1 %tmp7, label %dec_label_pc_8051ff5, label %dec_label_pc_8051fe9

dec_label_pc_8051fe9:                             ; preds = %dec_label_pc_8051fd5
  %v1_8051fe9 = call i32 @function_80524b9(i32 %v0_8051fd5)
  %v0_8051fee = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051fee = sub i32 0, %v0_8051fee
  %v2_8051ff0 = inttoptr i32 %v1_8051fe9 to i32*
  store i32 %v1_8051fee, i32* %v2_8051ff0, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8051ff9.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8051ff5

dec_label_pc_8051ff5:                             ; preds = %dec_label_pc_8051fd5, %dec_label_pc_8051fe9
  %v2_8051ff9 = phi i32 [ %v0_8051fd5, %dec_label_pc_8051fd5 ], [ %v2_8051ff9.pre, %dec_label_pc_8051fe9 ]
  %v0_8051ff5 = phi i32 [ %v1_8051fde, %dec_label_pc_8051fd5 ], [ -1, %dec_label_pc_8051fe9 ]
  %v2_8051ff7 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051ff7, i32* @edx, align 4
  store i32 %v2_8051ff9, i32* @ebx, align 4
  ret i32 %v0_8051ff5

; uselistorder directives
  uselistorder i32 %v1_8051fde, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051ff5, { 1, 0 }
}

define i32 @function_8051ffb() local_unnamed_addr {
dec_label_pc_8051ffb:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051ffb = load i32, i32* @ebx, align 4
  store i32 %v0_8051ffb, i32* %stack_var_-4, align 4
  %v1_8052004 = call i32 @getppid(i32 %v0_8051ffb)
  store i32 %v1_8052004, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8052004, -4095
  br i1 %tmp7, label %dec_label_pc_805201b, label %dec_label_pc_805200f

dec_label_pc_805200f:                             ; preds = %dec_label_pc_8051ffb
  %v1_805200f = call i32 @function_80524b9(i32 %v0_8051ffb)
  %v0_8052014 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052014 = sub i32 0, %v0_8052014
  %v2_8052016 = inttoptr i32 %v1_805200f to i32*
  store i32 %v1_8052014, i32* %v2_8052016, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_805201f.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805201b

dec_label_pc_805201b:                             ; preds = %dec_label_pc_8051ffb, %dec_label_pc_805200f
  %v2_805201f = phi i32 [ %v0_8051ffb, %dec_label_pc_8051ffb ], [ %v2_805201f.pre, %dec_label_pc_805200f ]
  %v0_805201b = phi i32 [ %v1_8052004, %dec_label_pc_8051ffb ], [ -1, %dec_label_pc_805200f ]
  store i32 %v2_805201f, i32* %ebx.global-to-local, align 4
  ret i32 %v0_805201b

; uselistorder directives
  uselistorder i32 %v1_8052004, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805201b, { 1, 0 }
}

define i32 @function_8052021(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052021:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052021 = load i32, i32* @edi, align 4
  store i32 %v0_8052021, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8052039 = load i32, i32* @ebx, align 4
  %v2_8052041 = call i32 (i32, i32, ...) @ioctl(i32 %arg1, i32 %arg2)
  store i32 %v2_8052041, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v2_8052041, -4095
  br i1 %tmp12, label %dec_label_pc_8052059, label %dec_label_pc_805204d

dec_label_pc_805204d:                             ; preds = %dec_label_pc_8052021
  %v1_805204d = call i32 @function_80524b9(i32 %v0_8052039)
  %v0_8052052 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052052 = sub i32 0, %v0_8052052
  %v2_8052054 = inttoptr i32 %v1_805204d to i32*
  store i32 %v1_8052052, i32* %v2_8052054, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_805205e.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052059

dec_label_pc_8052059:                             ; preds = %dec_label_pc_8052021, %dec_label_pc_805204d
  %v2_805205e = phi i32 [ %v0_8052021, %dec_label_pc_8052021 ], [ %v2_805205e.pre, %dec_label_pc_805204d ]
  %v0_8052059 = phi i32 [ %v2_8052041, %dec_label_pc_8052021 ], [ -1, %dec_label_pc_805204d ]
  store i32 %v2_805205e, i32* %edi.global-to-local, align 4
  ret i32 %v0_8052059

; uselistorder directives
  uselistorder i32 %v2_8052041, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052059, { 1, 0 }
}

define i32 @function_8052060(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8052060:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052060 = load i32, i32* @ebx, align 4
  store i32 %v0_8052060, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_8052073 = call i32 @kill(i32 %arg1, i32 %arg2)
  store i32 %v2_8052073, i32* %ebx.global-to-local, align 4
  %tmp9 = icmp ult i32 %v2_8052073, -4095
  br i1 %tmp9, label %dec_label_pc_805208c, label %dec_label_pc_8052080

dec_label_pc_8052080:                             ; preds = %dec_label_pc_8052060
  %v1_8052080 = call i32 @function_80524b9(i32 %v0_8052060)
  %v0_8052085 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052085 = sub i32 0, %v0_8052085
  %v2_8052087 = inttoptr i32 %v1_8052080 to i32*
  store i32 %v1_8052085, i32* %v2_8052087, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8052090.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805208c

dec_label_pc_805208c:                             ; preds = %dec_label_pc_8052060, %dec_label_pc_8052080
  %v2_8052090 = phi i32 [ %v0_8052060, %dec_label_pc_8052060 ], [ %v2_8052090.pre, %dec_label_pc_8052080 ]
  %v0_805208c = phi i32 [ %v2_8052073, %dec_label_pc_8052060 ], [ -1, %dec_label_pc_8052080 ]
  %v2_805208e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805208e, i32* @edx, align 4
  store i32 %v2_8052090, i32* @ebx, align 4
  ret i32 %v0_805208c

; uselistorder directives
  uselistorder i32 %v2_8052073, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805208c, { 1, 0 }
}

define i32 @function_8052092(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8052092:
  %ebx.global-to-local = alloca i32, align 4
  %v0_8052093 = load i32, i32* @ebx, align 4
  %sext = mul i32 %arg2, 16777216
  %v4_8052099 = sdiv i32 %sext, 16777216
  %v4_805209d = ptrtoint i8* %arg1 to i32
  %v3_80520a1 = and i32 %arg2, 64
  %v4_80520a1 = icmp eq i32 %v3_80520a1, 0
  br i1 %v4_80520a1, label %dec_label_pc_80520b2, label %dec_label_pc_80520a6

dec_label_pc_80520a6:                             ; preds = %dec_label_pc_8052092
  br label %dec_label_pc_80520b2

dec_label_pc_80520b2:                             ; preds = %dec_label_pc_8052092, %dec_label_pc_80520a6
  store i32 %v4_805209d, i32* %ebx.global-to-local, align 4
  %v5_80520bd = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %v4_8052099)
  store i32 %v5_80520bd, i32* %ebx.global-to-local, align 4
  %tmp15 = icmp ult i32 %v5_80520bd, -4095
  br i1 %tmp15, label %dec_label_pc_80520d5, label %dec_label_pc_80520c9

dec_label_pc_80520c9:                             ; preds = %dec_label_pc_80520b2
  %v1_80520c9 = call i32 @function_80524b9(i32 %v0_8052093)
  %v0_80520ce = load i32, i32* %ebx.global-to-local, align 4
  %v1_80520ce = sub i32 0, %v0_80520ce
  %v2_80520d0 = inttoptr i32 %v1_80520c9 to i32*
  store i32 %v1_80520ce, i32* %v2_80520d0, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80520d5

dec_label_pc_80520d5:                             ; preds = %dec_label_pc_80520b2, %dec_label_pc_80520c9
  %v0_80520d5 = phi i32 [ %v5_80520bd, %dec_label_pc_80520b2 ], [ -1, %dec_label_pc_80520c9 ]
  store i32 %v0_8052093, i32* @ebx, align 4
  ret i32 %v0_80520d5

; uselistorder directives
  uselistorder i32 %v5_80520bd, { 1, 0, 2 }
  uselistorder i32 %v0_8052093, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_80520d5, { 1, 0 }
  uselistorder label %dec_label_pc_80520b2, { 1, 0 }
}

define i32 @function_80520dd(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_80520dd:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80520de = load i32, i32* @esi, align 4
  store i32 %v0_80520de, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_80520f6 = load i32, i32* @ebx, align 4
  %v5_80520fe = call i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5)
  store i32 %v5_80520fe, i32* %esi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v5_80520fe, -4095
  br i1 %tmp12, label %dec_label_pc_8052116, label %dec_label_pc_805210a

dec_label_pc_805210a:                             ; preds = %dec_label_pc_80520dd
  %v1_805210a = call i32 @function_80524b9(i32 %v0_80520f6)
  %v0_805210f = load i32, i32* %esi.global-to-local, align 4
  %v1_805210f = sub i32 0, %v0_805210f
  %v2_8052111 = inttoptr i32 %v1_805210a to i32*
  store i32 %v1_805210f, i32* %v2_8052111, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_8052119.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8052116

dec_label_pc_8052116:                             ; preds = %dec_label_pc_80520dd, %dec_label_pc_805210a
  %v2_8052119 = phi i32 [ %v0_80520de, %dec_label_pc_80520dd ], [ %v2_8052119.pre, %dec_label_pc_805210a ]
  %v0_8052116 = phi i32 [ %v5_80520fe, %dec_label_pc_80520dd ], [ -1, %dec_label_pc_805210a ]
  store i32 %v2_8052119, i32* %esi.global-to-local, align 4
  ret i32 %v0_8052116

; uselistorder directives
  uselistorder i32 %v5_80520fe, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052116, { 1, 0 }
}

define i32 @function_805211c(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_805211c:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805211c = load i32, i32* @edi, align 4
  store i32 %v0_805211c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_805212c = load i32, i32* @ebx, align 4
  %v4_8052134 = call i32 @read(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v4_8052134, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v4_8052134, -4095
  br i1 %tmp12, label %dec_label_pc_805214c, label %dec_label_pc_8052140

dec_label_pc_8052140:                             ; preds = %dec_label_pc_805211c
  %v1_8052140 = call i32 @function_80524b9(i32 %v0_805212c)
  %v0_8052145 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052145 = sub i32 0, %v0_8052145
  %v2_8052147 = inttoptr i32 %v1_8052140 to i32*
  store i32 %v1_8052145, i32* %v2_8052147, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8052150.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805214c

dec_label_pc_805214c:                             ; preds = %dec_label_pc_805211c, %dec_label_pc_8052140
  %v2_8052150 = phi i32 [ %v0_805211c, %dec_label_pc_805211c ], [ %v2_8052150.pre, %dec_label_pc_8052140 ]
  %v0_805214c = phi i32 [ %v4_8052134, %dec_label_pc_805211c ], [ -1, %dec_label_pc_8052140 ]
  store i32 %v2_8052150, i32* %edi.global-to-local, align 4
  ret i32 %v0_805214c

; uselistorder directives
  uselistorder i32 %v4_8052134, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805214c, { 1, 0 }
}

define i32 @function_8052152(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052152:
  %edi.global-to-local = alloca i32, align 4
  %tmp6 = inttoptr i32 %arg2 to i8*
  %stack_var_-4 = alloca i32, align 4
  %v0_8052152 = load i32, i32* @edi, align 4
  store i32 %v0_8052152, i32* %stack_var_-4, align 4
  %v4_8052156 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052156, i32* %edi.global-to-local, align 4
  %v0_8052162 = load i32, i32* @ebx, align 4
  %v7_805216a = call i32 @readlink(i8* %arg1, i8* %tmp6, i32 %arg3)
  store i32 %v7_805216a, i32* %edi.global-to-local, align 4
  %tmp14 = icmp ult i32 %v7_805216a, -4095
  br i1 %tmp14, label %dec_label_pc_8052182, label %dec_label_pc_8052176

dec_label_pc_8052176:                             ; preds = %dec_label_pc_8052152
  %v1_8052176 = call i32 @function_80524b9(i32 %v0_8052162)
  %v0_805217b = load i32, i32* %edi.global-to-local, align 4
  %v1_805217b = sub i32 0, %v0_805217b
  %v2_805217d = inttoptr i32 %v1_8052176 to i32*
  store i32 %v1_805217b, i32* %v2_805217d, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8052186.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052182

dec_label_pc_8052182:                             ; preds = %dec_label_pc_8052152, %dec_label_pc_8052176
  %v2_8052186 = phi i32 [ %v0_8052152, %dec_label_pc_8052152 ], [ %v2_8052186.pre, %dec_label_pc_8052176 ]
  %v0_8052182 = phi i32 [ %v7_805216a, %dec_label_pc_8052152 ], [ -1, %dec_label_pc_8052176 ]
  store i32 %v2_8052186, i32* %edi.global-to-local, align 4
  ret i32 %v0_8052182

; uselistorder directives
  uselistorder i32 %v7_805216a, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052182, { 1, 0 }
}

define i32 @function_8052188() local_unnamed_addr {
dec_label_pc_8052188:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8052189 = load i32, i32* @esi, align 4
  store i32 %v0_8052189, i32* %stack_var_-8, align 4
  %v0_80521a1 = load i32, i32* @ebx, align 4
  %v1_80521a9 = call i32 @int80_syscall(i32 142)
  store i32 %v0_80521a1, i32* @ebx, align 4
  store i32 %v1_80521a9, i32* %esi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v1_80521a9, -4095
  br i1 %tmp12, label %dec_label_pc_80521c1, label %dec_label_pc_80521b5

dec_label_pc_80521b5:                             ; preds = %dec_label_pc_8052188
  %v1_80521b5 = call i32 @function_80524b9(i32 %v0_80521a1)
  %v0_80521ba = load i32, i32* %esi.global-to-local, align 4
  %v1_80521ba = sub i32 0, %v0_80521ba
  %v2_80521bc = inttoptr i32 %v1_80521b5 to i32*
  store i32 %v1_80521ba, i32* %v2_80521bc, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_80521c4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_80521c1

dec_label_pc_80521c1:                             ; preds = %dec_label_pc_8052188, %dec_label_pc_80521b5
  %v2_80521c4 = phi i32 [ %v0_8052189, %dec_label_pc_8052188 ], [ %v2_80521c4.pre, %dec_label_pc_80521b5 ]
  %v0_80521c1 = phi i32 [ %v1_80521a9, %dec_label_pc_8052188 ], [ -1, %dec_label_pc_80521b5 ]
  store i32 %v2_80521c4, i32* @esi, align 4
  ret i32 %v0_80521c1

; uselistorder directives
  uselistorder i32 %v1_80521a9, { 1, 0, 2 }
  uselistorder i32 %v0_80521a1, { 1, 0 }
  uselistorder label %dec_label_pc_80521c1, { 1, 0 }
}

define i32 @function_80521c7() local_unnamed_addr {
dec_label_pc_80521c7:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80521c7 = load i32, i32* @ebx, align 4
  store i32 %v0_80521c7, i32* %stack_var_-4, align 4
  %v1_80521d0 = call i32 @setsid(i32 %v0_80521c7)
  store i32 %v1_80521d0, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_80521d0, -4095
  br i1 %tmp7, label %dec_label_pc_80521e7, label %dec_label_pc_80521db

dec_label_pc_80521db:                             ; preds = %dec_label_pc_80521c7
  %v1_80521db = call i32 @function_80524b9(i32 %v0_80521c7)
  %v0_80521e0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80521e0 = sub i32 0, %v0_80521e0
  %v2_80521e2 = inttoptr i32 %v1_80521db to i32*
  store i32 %v1_80521e0, i32* %v2_80521e2, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_80521eb.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80521e7

dec_label_pc_80521e7:                             ; preds = %dec_label_pc_80521c7, %dec_label_pc_80521db
  %v2_80521eb = phi i32 [ %v0_80521c7, %dec_label_pc_80521c7 ], [ %v2_80521eb.pre, %dec_label_pc_80521db ]
  %v0_80521e7 = phi i32 [ %v1_80521d0, %dec_label_pc_80521c7 ], [ -1, %dec_label_pc_80521db ]
  store i32 %v2_80521eb, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80521e7

; uselistorder directives
  uselistorder i32 %v1_80521d0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80521e7, { 1, 0 }
}

define i32 @function_80521ed(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80521ed:
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  %stack_var_-12 = alloca i32, align 4
  %v0_80521ee = load i32, i32* @esi, align 4
  %v4_80521f2 = ptrtoint %_TYPEDEF_sigset_t* %arg2 to i32
  store i32 %v4_80521f2, i32* @ecx, align 4
  %v2_80521fe = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v2_80521fe, label %dec_label_pc_8052217, label %dec_label_pc_8052202

dec_label_pc_8052202:                             ; preds = %dec_label_pc_80521ed
  %tmp11 = icmp ult i32 %arg1, 3
  br i1 %tmp11, label %dec_label_pc_8052217, label %dec_label_pc_8052207

dec_label_pc_8052207:                             ; preds = %dec_label_pc_8052202
  %v1_8052207 = call i32 @function_80524b9(i32 %v0_80521ee)
  %v1_805220c = inttoptr i32 %v1_8052207 to i32*
  store i32 22, i32* %v1_805220c, align 4
  br label %dec_label_pc_805223e

dec_label_pc_8052217:                             ; preds = %dec_label_pc_8052202, %dec_label_pc_80521ed
  store i32 8, i32* %esi.global-to-local, align 4
  %v0_805221c = load i32, i32* @ebx, align 4
  %v7_8052224 = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp3)
  store i32 %v0_805221c, i32* @ebx, align 4
  store i32 %v7_8052224, i32* %esi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v7_8052224, -4095
  br i1 %tmp12, label %dec_label_pc_805223e, label %dec_label_pc_8052230

dec_label_pc_8052230:                             ; preds = %dec_label_pc_8052217
  %v1_8052230 = call i32 @function_80524b9(i32 %v0_805221c)
  %v0_8052235 = load i32, i32* %esi.global-to-local, align 4
  %v1_8052235 = sub i32 0, %v0_8052235
  %v2_8052237 = inttoptr i32 %v1_8052230 to i32*
  store i32 %v1_8052235, i32* %v2_8052237, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805223e

dec_label_pc_805223e:                             ; preds = %dec_label_pc_8052230, %dec_label_pc_8052217, %dec_label_pc_8052207
  %storemerge = phi i32 [ -1, %dec_label_pc_8052207 ], [ %v7_8052224, %dec_label_pc_8052217 ], [ -1, %dec_label_pc_8052230 ]
  %v2_805223e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805223e, i32* @edx, align 4
  store i32 %v0_80521ee, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v7_8052224, { 1, 0, 2 }
  uselistorder i32 %v0_805221c, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_8052242() local_unnamed_addr {
dec_label_pc_8052242:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8052242 = load i32, i32* @edi, align 4
  store i32 %v0_8052242, i32* %stack_var_-4, align 4
  store i32 %tmp, i32* %edi.global-to-local, align 4
  %v0_805224a = load i32, i32* @ebx, align 4
  %v1_8052252 = inttoptr i32 %tmp to i32*
  %v2_8052252 = call i32 @time(i32* %v1_8052252)
  store i32 %v0_805224a, i32* @ebx, align 4
  store i32 %v2_8052252, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v2_8052252, -4095
  br i1 %tmp9, label %dec_label_pc_805226a, label %dec_label_pc_805225e

dec_label_pc_805225e:                             ; preds = %dec_label_pc_8052242
  %v1_805225e = call i32 @function_80524b9(i32 %v0_805224a)
  %v0_8052263 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052263 = sub i32 0, %v0_8052263
  %v2_8052265 = inttoptr i32 %v1_805225e to i32*
  store i32 %v1_8052263, i32* %v2_8052265, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_805226e.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805226a

dec_label_pc_805226a:                             ; preds = %dec_label_pc_8052242, %dec_label_pc_805225e
  %v2_805226e = phi i32 [ %v0_8052242, %dec_label_pc_8052242 ], [ %v2_805226e.pre, %dec_label_pc_805225e ]
  %v0_805226a = phi i32 [ %v2_8052252, %dec_label_pc_8052242 ], [ -1, %dec_label_pc_805225e ]
  store i32 %v2_805226e, i32* @edi, align 4
  ret i32 %v0_805226a

; uselistorder directives
  uselistorder i32 %v2_8052252, { 1, 0, 2 }
  uselistorder i32 %v0_805224a, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_805226a, { 1, 0 }
}

define i32 @function_8052270(i8* %arg1) local_unnamed_addr {
dec_label_pc_8052270:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052270 = load i32, i32* @edi, align 4
  store i32 %v0_8052270, i32* %stack_var_-4, align 4
  %v4_8052274 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052274, i32* %edi.global-to-local, align 4
  %v0_8052278 = load i32, i32* @ebx, align 4
  %v3_8052280 = call i32 @unlink(i8* %arg1)
  store i32 %v3_8052280, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v3_8052280, -4095
  br i1 %tmp9, label %dec_label_pc_8052298, label %dec_label_pc_805228c

dec_label_pc_805228c:                             ; preds = %dec_label_pc_8052270
  %v1_805228c = call i32 @function_80524b9(i32 %v0_8052278)
  %v0_8052291 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052291 = sub i32 0, %v0_8052291
  %v2_8052293 = inttoptr i32 %v1_805228c to i32*
  store i32 %v1_8052291, i32* %v2_8052293, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_805229c.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052298

dec_label_pc_8052298:                             ; preds = %dec_label_pc_8052270, %dec_label_pc_805228c
  %v2_805229c = phi i32 [ %v0_8052270, %dec_label_pc_8052270 ], [ %v2_805229c.pre, %dec_label_pc_805228c ]
  %v0_8052298 = phi i32 [ %v3_8052280, %dec_label_pc_8052270 ], [ -1, %dec_label_pc_805228c ]
  store i32 %v2_805229c, i32* %edi.global-to-local, align 4
  ret i32 %v0_8052298

; uselistorder directives
  uselistorder i32 %v3_8052280, { 1, 0, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8052298, { 1, 0 }
}

define i32 @function_805229e(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_805229e:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805229e = load i32, i32* @edi, align 4
  store i32 %v0_805229e, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_80522ae = load i32, i32* @ebx, align 4
  %v4_80522b6 = call i32 @write(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v4_80522b6, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v4_80522b6, -4095
  br i1 %tmp12, label %dec_label_pc_80522ce, label %dec_label_pc_80522c2

dec_label_pc_80522c2:                             ; preds = %dec_label_pc_805229e
  %v1_80522c2 = call i32 @function_80524b9(i32 %v0_80522ae)
  %v0_80522c7 = load i32, i32* %edi.global-to-local, align 4
  %v1_80522c7 = sub i32 0, %v0_80522c7
  %v2_80522c9 = inttoptr i32 %v1_80522c2 to i32*
  store i32 %v1_80522c7, i32* %v2_80522c9, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_80522d2.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80522ce

dec_label_pc_80522ce:                             ; preds = %dec_label_pc_805229e, %dec_label_pc_80522c2
  %v2_80522d2 = phi i32 [ %v0_805229e, %dec_label_pc_805229e ], [ %v2_80522d2.pre, %dec_label_pc_80522c2 ]
  %v0_80522ce = phi i32 [ %v4_80522b6, %dec_label_pc_805229e ], [ -1, %dec_label_pc_80522c2 ]
  store i32 %v2_80522d2, i32* %edi.global-to-local, align 4
  ret i32 %v0_80522ce

; uselistorder directives
  uselistorder i32 %v4_80522b6, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80522ce, { 1, 0 }
}

define i32 @function_80522d4(i32* %arg1) local_unnamed_addr {
dec_label_pc_80522d4:
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-28 = alloca i32, align 4
  %v0_80522d6 = load i32, i32* @ebx, align 4
  %v12_80522d7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %tmp3, i32* @edi, align 4
  %v2_80522de = load i32, i32* %arg1, align 4
  %v12_80522de = icmp eq i32 %v2_80522de, -1
  %v1_80522e1 = icmp eq i1 %v12_80522de, false
  br i1 %v1_80522e1, label %dec_label_pc_80522f3, label %dec_label_pc_80522e3

dec_label_pc_80522e3:                             ; preds = %dec_label_pc_80522d4
  %v1_80522e3 = call i32 @function_80524b9(i32 %v0_80522d6)
  %v1_80522e8 = inttoptr i32 %v1_80522e3 to i32*
  store i32 9, i32* %v1_80522e8, align 4
  br label %dec_label_pc_805233d

dec_label_pc_80522f3:                             ; preds = %dec_label_pc_80522d4
  %v1_80522f3 = add i32 %tmp3, 24
  store i32 %v12_80522d7, i32* @esi, align 4
  %v2_8052302 = call i32 @function_8053e40(i32 %v12_80522d7, i32 134561341)
  %v1_805230a = call i32 @function_8053e3d(i32 %v1_80522f3)
  store i32 %v1_805230a, i32* @eax, align 4
  %v0_805230f = load i32, i32* @edi, align 4
  %v1_805230f = inttoptr i32 %v0_805230f to i32*
  %v2_805230f = load i32, i32* %v1_805230f, align 4
  store i32 %v2_805230f, i32* @ebx, align 4
  store i32 -1, i32* %v1_805230f, align 4
  %v2_805231c = call i32 @function_8053e40(i32 %v12_80522d7, i32 1)
  %v0_8052322 = load i32, i32* @edi, align 4
  %v1_8052322 = add i32 %v0_8052322, 12
  %v2_8052322 = inttoptr i32 %v1_8052322 to i32*
  %v3_8052322 = load i32, i32* %v2_8052322, align 4
  %v1_8052325 = call i32 @function_80536d9(i32 %v3_8052322)
  %v0_805232a = load i32, i32* @edi, align 4
  %v1_805232d = call i32 @function_80536d9(i32 %v0_805232a)
  %v0_8052332 = load i32, i32* @ebx, align 4
  %v1_8052335 = call i32 @function_8051f81(i32 %v0_8052332)
  br label %dec_label_pc_805233d

dec_label_pc_805233d:                             ; preds = %dec_label_pc_80522e3, %dec_label_pc_80522f3
  %v0_8052343 = phi i32 [ -1, %dec_label_pc_80522e3 ], [ %v1_8052335, %dec_label_pc_80522f3 ]
  ret i32 %v0_8052343

; uselistorder directives
  uselistorder label %dec_label_pc_805233d, { 1, 0 }
}

define i32 @function_8052344(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052344:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-124 = alloca i32, align 4
  store i32 0, i32* @ebx, align 4
  store i32 %arg1, i32* %stack_var_-124, align 4
  %v2_8052355 = inttoptr i32 %arg1 to i8*
  %v3_8052355 = call i32 @function_8052092(i8* %v2_8052355, i32 67584)
  store i32 %v3_8052355, i32* %eax.global-to-local, align 4
  store i32 %v3_8052355, i32* @edi, align 4
  %v2_805235f = icmp slt i32 %v3_8052355, 0
  br i1 %v2_805235f, label %dec_label_pc_805242c, label %dec_label_pc_8052367

dec_label_pc_8052367:                             ; preds = %dec_label_pc_8052344
  %v0_8052367 = load i32, i32* @ebx, align 4
  %v2_8052369 = ptrtoint i32* %stack_var_-100 to i32
  store i32 %v2_8052369, i32* %eax.global-to-local, align 4
  store i32 %v3_8052355, i32* %stack_var_-124, align 4
  %v4_805236f = call i32 @function_805423a(i32 %v3_8052355, i32 %v2_8052369, i32 %v0_8052367, i32 %v0_8052367)
  store i32 %v4_805236f, i32* %eax.global-to-local, align 4
  %v2_8052377 = icmp slt i32 %v4_805236f, 0
  br i1 %v2_8052377, label %dec_label_pc_805238d, label %dec_label_pc_805237b

dec_label_pc_805237b:                             ; preds = %dec_label_pc_8052367
  %v0_8052380 = load i32, i32* @edi, align 4
  store i32 %v0_8052380, i32* %stack_var_-124, align 4
  %v3_8052381 = call i32 @function_8051ebd(i32 %v0_8052380, i32 2, i32 1)
  store i32 %v3_8052381, i32* %eax.global-to-local, align 4
  %v2_8052389 = icmp slt i32 %v3_8052381, 0
  %v1_805238b = icmp eq i1 %v2_8052389, false
  br i1 %v1_805238b, label %dec_label_pc_80523a3, label %dec_label_pc_805238d

dec_label_pc_805238d:                             ; preds = %dec_label_pc_805237b, %dec_label_pc_8052367
  %v0_805238d = load i32, i32* %stack_var_-124, align 4
  %v1_805238d = call i32 @function_80524b9(i32 %v0_805238d)
  store i32 %v1_805238d, i32* %eax.global-to-local, align 4
  store i32 %v1_805238d, i32* @ebx, align 4
  %v1_8052397 = inttoptr i32 %v1_805238d to i32*
  %v2_8052397 = load i32, i32* %v1_8052397, align 4
  %v0_8052399 = load i32, i32* @edi, align 4
  store i32 %v0_8052399, i32* %stack_var_-124, align 4
  %v1_805239a = call i32 @function_8051f81(i32 %v0_8052399)
  store i32 %v1_805239a, i32* %eax.global-to-local, align 4
  %v1_805239f = load i32, i32* @ebx, align 4
  %v2_805239f = inttoptr i32 %v1_805239f to i32*
  store i32 %v2_8052397, i32* %v2_805239f, align 4
  br label %dec_label_pc_8052418

dec_label_pc_80523a3:                             ; preds = %dec_label_pc_805237b
  store i32 48, i32* %stack_var_-124, align 4
  %v1_80523a8 = call i32 @function_8052914(i32 48)
  store i32 %v1_80523a8, i32* %eax.global-to-local, align 4
  store i32 %v1_80523a8, i32* @ebx, align 4
  %v1_80523b2 = icmp eq i32 %v1_80523a8, 0
  br i1 %v1_80523b2, label %dec_label_pc_8052404, label %dec_label_pc_80523b6

dec_label_pc_80523b6:                             ; preds = %dec_label_pc_80523a3
  %v0_80523b6 = load i32, i32* @edi, align 4
  %v2_80523b6 = inttoptr i32 %v1_80523a8 to i32*
  store i32 %v0_80523b6, i32* %v2_80523b6, align 4
  %v1_80523b8 = add i32 %v1_80523a8, 16
  %v2_80523b8 = inttoptr i32 %v1_80523b8 to i32*
  store i32 0, i32* %v2_80523b8, align 4
  %v1_80523bf = add i32 %v1_80523a8, 8
  %v2_80523bf = inttoptr i32 %v1_80523bf to i32*
  store i32 0, i32* %v2_80523bf, align 4
  %v1_80523c6 = add i32 %v1_80523a8, 4
  %v2_80523c6 = inttoptr i32 %v1_80523c6 to i32*
  store i32 0, i32* %v2_80523c6, align 4
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v1_80523d1 = load i32, i32* @ebx, align 4
  %v2_80523d1 = add i32 %v1_80523d1, 20
  %v3_80523d1 = inttoptr i32 %v2_80523d1 to i32*
  store i32 %tmp, i32* %v3_80523d1, align 4
  %v0_80523d4 = load i32, i32* %eax.global-to-local, align 4
  %v6_80523d9 = icmp ugt i32 %v0_80523d4, 511
  br i1 %v6_80523d9, label %dec_label_pc_80523e2, label %dec_label_pc_80523db

dec_label_pc_80523db:                             ; preds = %dec_label_pc_80523b6
  %v0_80523db = load i32, i32* @ebx, align 4
  %v1_80523db = add i32 %v0_80523db, 20
  %v2_80523db = inttoptr i32 %v1_80523db to i32*
  store i32 512, i32* %v2_80523db, align 4
  br label %dec_label_pc_80523e2

dec_label_pc_80523e2:                             ; preds = %dec_label_pc_80523b6, %dec_label_pc_80523db
  %v0_80523e4 = load i32, i32* @ebx, align 4
  %v1_80523e4 = add i32 %v0_80523e4, 20
  %v2_80523e4 = inttoptr i32 %v1_80523e4 to i32*
  %v3_80523e4 = load i32, i32* %v2_80523e4, align 4
  store i32 1, i32* %stack_var_-124, align 4
  %v3_80523e9 = call i32 @function_8053088(i64 1, i32 %v3_80523e4)
  store i32 %v3_80523e9, i32* %eax.global-to-local, align 4
  %v1_80523f1 = load i32, i32* @ebx, align 4
  %v2_80523f1 = add i32 %v1_80523f1, 12
  %v3_80523f1 = inttoptr i32 %v2_80523f1 to i32*
  store i32 %v3_80523e9, i32* %v3_80523f1, align 4
  %v1_80523f4 = icmp eq i32 %v3_80523e9, 0
  %v1_80523f6 = icmp eq i1 %v1_80523f4, false
  br i1 %v1_80523f6, label %dec_label_pc_805241c, label %dec_label_pc_80523f8

dec_label_pc_80523f8:                             ; preds = %dec_label_pc_80523e2
  %v0_80523fb = load i32, i32* @ebx, align 4
  store i32 %v0_80523fb, i32* %stack_var_-124, align 4
  %v1_80523fc = call i32 @function_80536d9(i32 %v0_80523fb)
  store i32 %v1_80523fc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052404

dec_label_pc_8052404:                             ; preds = %dec_label_pc_80523a3, %dec_label_pc_80523f8
  %v0_8052407 = load i32, i32* @edi, align 4
  store i32 %v0_8052407, i32* %stack_var_-124, align 4
  %v1_8052408 = call i32 @function_8051f81(i32 %v0_8052407)
  store i32 %v1_8052408, i32* %eax.global-to-local, align 4
  %v1_805240d = call i32 @function_80524b9(i32 %v0_8052407)
  store i32 %v1_805240d, i32* %eax.global-to-local, align 4
  %v1_8052412 = inttoptr i32 %v1_805240d to i32*
  store i32 12, i32* %v1_8052412, align 4
  br label %dec_label_pc_8052418

dec_label_pc_8052418:                             ; preds = %dec_label_pc_805238d, %dec_label_pc_8052404
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8052429

dec_label_pc_805241c:                             ; preds = %dec_label_pc_80523e2
  %v0_805241e = load i32, i32* @ebx, align 4
  %v1_805241e = add i32 %v0_805241e, 24
  store i32 %v1_805241e, i32* %eax.global-to-local, align 4
  store i32 %v1_805241e, i32* %stack_var_-124, align 4
  %v1_8052424 = call i32 @function_8053e3d(i32 %v1_805241e)
  store i32 %v1_8052424, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052429

dec_label_pc_8052429:                             ; preds = %dec_label_pc_8052418, %dec_label_pc_805241c
  br label %dec_label_pc_805242c

dec_label_pc_805242c:                             ; preds = %dec_label_pc_8052344, %dec_label_pc_8052429
  %v0_805242f = load i32, i32* @ebx, align 4
  store i32 %v0_805242f, i32* %eax.global-to-local, align 4
  ret i32 %v0_805242f

; uselistorder directives
  uselistorder i32 %v1_80523a8, { 2, 3, 5, 4, 1, 0, 6 }
  uselistorder i32 %v1_805238d, { 1, 0, 2 }
  uselistorder i32 %v3_8052355, { 1, 0, 3, 2, 4 }
  uselistorder i32* %stack_var_-124, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 512, { 4, 5, 2, 0, 1, 3 }
  uselistorder i32 (i32)* @function_8051f81, { 16, 15, 14, 13, 12, 9, 8, 5, 7, 4, 6, 11, 10, 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805242c, { 1, 0 }
  uselistorder label %dec_label_pc_8052429, { 1, 0 }
  uselistorder label %dec_label_pc_8052418, { 1, 0 }
  uselistorder label %dec_label_pc_8052404, { 1, 0 }
  uselistorder label %dec_label_pc_80523e2, { 1, 0 }
}

define i32 @function_8052435(i32* %arg1) local_unnamed_addr {
dec_label_pc_8052435:
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  store i32 %tmp3, i32* @esi, align 4
  %v1_805243e = add i32 %tmp3, 24
  store i32 %v1_805243e, i32* @ebx, align 4
  %v2_8052447 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8052447, i32* @eax, align 4
  %v2_805244c = call i32 @function_8053e40(i32 %v2_8052447, i32 134561341)
  %v0_8052451 = load i32, i32* @ebx, align 4
  %v1_8052454 = call i32 @function_8053e3d(i32 %v0_8052451)
  br label %dec_label_pc_805245c

dec_label_pc_805245c:                             ; preds = %dec_label_pc_8052487, %dec_label_pc_8052435
  %v0_805245c = load i32, i32* @esi, align 4
  %v1_805245c = add i32 %v0_805245c, 8
  %v2_805245c = inttoptr i32 %v1_805245c to i32*
  %v3_805245c = load i32, i32* %v2_805245c, align 4
  %v2_805245f = add i32 %v0_805245c, 4
  %v3_805245f = inttoptr i32 %v2_805245f to i32*
  %v4_805245f = load i32, i32* %v3_805245f, align 4
  %v6_8052462 = icmp ugt i32 %v3_805245c, %v4_805245f
  br i1 %v6_8052462, label %dec_label_pc_8052487, label %dec_label_pc_8052464

dec_label_pc_8052464:                             ; preds = %dec_label_pc_805245c
  %v0_8052464 = load i32, i32* @edx, align 4
  %v1_8052465 = add i32 %v0_805245c, 20
  %v2_8052465 = inttoptr i32 %v1_8052465 to i32*
  %v3_8052465 = load i32, i32* %v2_8052465, align 4
  %v1_8052468 = add i32 %v0_805245c, 12
  %v2_8052468 = inttoptr i32 %v1_8052468 to i32*
  %v3_8052468 = load i32, i32* %v2_8052468, align 4
  %v1_805246b = inttoptr i32 %v0_805245c to i32*
  %v2_805246b = load i32, i32* %v1_805246b, align 4
  %v4_805246d = call i32 @function_8054282(i32 %v2_805246b, i32 %v3_8052468, i32 %v3_8052465, i32 %v0_8052464)
  %tmp13 = icmp slt i32 %v4_805246d, 1
  %tmp14 = icmp eq i1 %tmp13, false
  br i1 %tmp14, label %dec_label_pc_805247d, label %dec_label_pc_8052479

dec_label_pc_8052479:                             ; preds = %dec_label_pc_8052464
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_80524a3

dec_label_pc_805247d:                             ; preds = %dec_label_pc_8052464
  %v1_805247d = load i32, i32* @esi, align 4
  %v2_805247d = add i32 %v1_805247d, 8
  %v3_805247d = inttoptr i32 %v2_805247d to i32*
  store i32 %v4_805246d, i32* %v3_805247d, align 4
  %v0_8052480 = load i32, i32* @esi, align 4
  %v1_8052480 = add i32 %v0_8052480, 4
  %v2_8052480 = inttoptr i32 %v1_8052480 to i32*
  store i32 0, i32* %v2_8052480, align 4
  %v0_8052487.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8052487

dec_label_pc_8052487:                             ; preds = %dec_label_pc_805245c, %dec_label_pc_805247d
  %v1_8052495 = phi i32 [ %v0_805245c, %dec_label_pc_805245c ], [ %v0_8052487.pre, %dec_label_pc_805247d ]
  %v1_8052487 = add i32 %v1_8052495, 4
  %v2_8052487 = inttoptr i32 %v1_8052487 to i32*
  %v3_8052487 = load i32, i32* %v2_8052487, align 4
  %v2_805248c = add i32 %v1_8052495, 12
  %v3_805248c = inttoptr i32 %v2_805248c to i32*
  %v4_805248c = load i32, i32* %v3_805248c, align 4
  %v5_805248c = add i32 %v4_805248c, %v3_8052487
  store i32 %v5_805248c, i32* @ebx, align 4
  %v1_805248f = add i32 %v5_805248c, 8
  %v2_805248f = inttoptr i32 %v1_805248f to i16*
  %v3_805248f = load i16, i16* %v2_805248f, align 2
  %v4_805248f = zext i16 %v3_805248f to i32
  store i32 %v4_805248f, i32* @edx, align 4
  %v2_8052493 = add i32 %v4_805248f, %v3_8052487
  store i32 %v2_8052493, i32* %v2_8052487, align 4
  %v0_8052498 = load i32, i32* @ebx, align 4
  %v1_8052498 = add i32 %v0_8052498, 4
  %v2_8052498 = inttoptr i32 %v1_8052498 to i32*
  %v3_8052498 = load i32, i32* %v2_8052498, align 4
  %v1_805249b = load i32, i32* @esi, align 4
  %v2_805249b = add i32 %v1_805249b, 16
  %v3_805249b = inttoptr i32 %v2_805249b to i32*
  store i32 %v3_8052498, i32* %v3_805249b, align 4
  %v0_805249e = load i32, i32* @ebx, align 4
  %v1_805249e = inttoptr i32 %v0_805249e to i32*
  %v2_805249e = load i32, i32* %v1_805249e, align 4
  %v3_805249e = icmp eq i32 %v2_805249e, 0
  br i1 %v3_805249e, label %dec_label_pc_805245c, label %dec_label_pc_80524a3.loopexit

dec_label_pc_80524a3.loopexit:                    ; preds = %dec_label_pc_8052487
  br label %dec_label_pc_80524a3

dec_label_pc_80524a3:                             ; preds = %dec_label_pc_80524a3.loopexit, %dec_label_pc_8052479
  store i32 %v2_8052447, i32* @eax, align 4
  %v2_80524ac = call i32 @function_8053e40(i32 %v2_8052447, i32 1)
  %v0_80524b1 = load i32, i32* @ebx, align 4
  ret i32 %v0_80524b1

; uselistorder directives
  uselistorder i32 %v1_8052495, { 1, 0 }
  uselistorder i32 %v0_805245c, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %tmp3, { 1, 0 }
  uselistorder label %dec_label_pc_8052487, { 1, 0 }
}

define i32 @function_80524b9(i32 %arg1) local_unnamed_addr {
dec_label_pc_80524b9:
  ret i32 ptrtoint (i32* @global_var_80566f4.45 to i32)
}

define i32 @function_80524bf() local_unnamed_addr {
dec_label_pc_80524bf:
  %tmp = call i64 @__decompiler_undefined_function_5()
  %stack_var_-16 = alloca i32, align 4
  %v1_80524c7 = bitcast i32* %stack_var_-16 to %tms*
  %v2_80524c7 = call i32 @function_8054657(%tms* %v1_80524c7)
  %v4_80524cc = trunc i64 %tmp to i32
  %v4_80524d0 = load i32, i32* %stack_var_-16, align 4
  %v5_80524d0 = add i32 %v4_80524d0, %v4_80524cc
  %v3_80524d7 = mul i32 %v5_80524d0, 10000
  %v1_80524dd = and i32 %v3_80524d7, 2147483632
  ret i32 %v1_80524dd

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @function_80524e3(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80524e3:
  %tmp3 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_80524e4 = load i32, i32* @esi, align 4
  store i32 %v0_80524e4, i32* %stack_var_-8, align 4
  %v4_80524e5 = ptrtoint i8* %arg1 to i32
  %v9_80524f1 = icmp ugt i8* %tmp3, %arg1
  %v1_80524f3 = icmp eq i1 %v9_80524f1, false
  br i1 %v1_80524f3, label %dec_label_pc_80524fb, label %dec_label_pc_80524f5

dec_label_pc_80524f5:                             ; preds = %dec_label_pc_80524e3
  %v7_80524f7 = call i8* @_memcpy(i8* %arg1, i8* %tmp3, i32 %arg3)
  br label %dec_label_pc_8052507

dec_label_pc_80524fb:                             ; preds = %dec_label_pc_80524e3
  %v3_80524fb = add i32 %arg2, -1
  %v4_80524fb = add i32 %v3_80524fb, %arg3
  %v5_80524fb = inttoptr i32 %v4_80524fb to i8*
  %v3_80524ff = add i32 %v4_80524e5, -1
  %v4_80524ff = add i32 %v3_80524ff, %arg3
  %v5_80524ff = inttoptr i32 %v4_80524ff to i8*
  %v7_8052504 = call i8* @_memcpy(i8* %v5_80524ff, i8* %v5_80524fb, i32 %arg3)
  store i1 false, i1* @df, align 1
  br label %dec_label_pc_8052507

dec_label_pc_8052507:                             ; preds = %dec_label_pc_80524f5, %dec_label_pc_80524fb
  %v2_8052507 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8052507, i32* @esi, align 4
  ret i32 %v4_80524e5

; uselistorder directives
  uselistorder i8* %tmp3, { 1, 0 }
  uselistorder i32 %arg3, { 0, 3, 2, 1 }
  uselistorder i8* %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052507, { 1, 0 }
}

define i32 @function_805250a(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_805250a:
  %v0_805250a = load i32, i32* @edi, align 4
  %v4_8052513 = ptrtoint i8* %arg1 to i32
  %v5_8052517 = call i8* @_memset(i8* %arg1, i32 %arg2, i32 %arg3)
  store i32 %v0_805250a, i32* @edi, align 4
  ret i32 %v4_8052513

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @function_805251f(i32 %arg1) local_unnamed_addr {
dec_label_pc_805251f:
  %stack_var_-4 = alloca i32, align 4
  %v2_8052522 = ptrtoint i32* %stack_var_-4 to i32
  %v2_805252b = inttoptr i32 %arg1 to i8*
  %v3_805252b = call i32 @function_8054729(i8* %v2_805252b, i32 %v2_8052522)
  %v1_8052536 = icmp eq i32 %v3_805252b, 0
  br i1 %v1_8052536, label %dec_label_pc_805253e, label %dec_label_pc_805253a

dec_label_pc_805253a:                             ; preds = %dec_label_pc_805251f
  %v3_805253a = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805253e

dec_label_pc_805253e:                             ; preds = %dec_label_pc_805251f, %dec_label_pc_805253a
  %v0_805253e = phi i32 [ -1, %dec_label_pc_805251f ], [ %v3_805253a, %dec_label_pc_805253a ]
  ret i32 %v0_805253e

; uselistorder directives
  uselistorder label %dec_label_pc_805253e, { 1, 0 }
}

define i32 @function_8052544(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052544:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_805255f = ptrtoint i32* %stack_var_-12 to i32
  %v2_8052566 = call i32 @function_8054173(i32 5, i32 %v2_805255f)
  ret i32 %v2_8052566

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_805256f(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_805256f:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_805258a = ptrtoint i32* %stack_var_-12 to i32
  %v2_8052591 = call i32 @function_8054173(i32 2, i32 %v2_805258a)
  ret i32 %v2_8052591

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_805259a(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_805259a:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_80525b5 = ptrtoint i32* %stack_var_-12 to i32
  %v2_80525bc = call i32 @function_8054173(i32 3, i32 %v2_80525b5)
  ret i32 %v2_80525bc

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_80525c5(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80525c5:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_80525e0 = ptrtoint i32* %stack_var_-12 to i32
  %v2_80525e7 = call i32 @function_8054173(i32 6, i32 %v2_80525e0)
  ret i32 %v2_80525e7

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_80525f0() local_unnamed_addr {
dec_label_pc_80525f0:
  %stack_var_-20 = alloca i32, align 4
  %v2_805261b = ptrtoint i32* %stack_var_-20 to i32
  %v2_8052622 = call i32 @function_8054173(i32 15, i32 %v2_805261b)
  ret i32 %v2_8052622
}

define i32 @function_805262b(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_805262b:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-8, align 4
  %v2_805263e = ptrtoint i32* %stack_var_-8 to i32
  %v2_8052645 = call i32 @function_8054173(i32 4, i32 %v2_805263e)
  ret i32 %v2_8052645

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @function_805264e() local_unnamed_addr {
dec_label_pc_805264e:
  %stack_var_-16 = alloca i32, align 4
  %v2_8052671 = ptrtoint i32* %stack_var_-16 to i32
  %v2_8052678 = call i32 @function_8054173(i32 10, i32 %v2_8052671)
  ret i32 %v2_8052678
}

define i32 @function_8052681() local_unnamed_addr {
dec_label_pc_8052681:
  %stack_var_-24 = alloca i32, align 4
  %v2_80526b4 = ptrtoint i32* %stack_var_-24 to i32
  %v2_80526bb = call i32 @function_8054173(i32 12, i32 %v2_80526b4)
  ret i32 %v2_80526bb
}

define i32 @function_80526c4() local_unnamed_addr {
dec_label_pc_80526c4:
  %stack_var_-16 = alloca i32, align 4
  %v2_80526e7 = ptrtoint i32* %stack_var_-16 to i32
  %v2_80526ee = call i32 @function_8054173(i32 9, i32 %v2_80526e7)
  ret i32 %v2_80526ee
}

define i32 @function_80526f7() local_unnamed_addr {
dec_label_pc_80526f7:
  %stack_var_-24 = alloca i32, align 4
  %v2_805272a = ptrtoint i32* %stack_var_-24 to i32
  %v2_8052731 = call i32 @function_8054173(i32 11, i32 %v2_805272a)
  ret i32 %v2_8052731
}

define i32 @function_805273a() local_unnamed_addr {
dec_label_pc_805273a:
  %stack_var_-20 = alloca i32, align 4
  %v2_8052765 = ptrtoint i32* %stack_var_-20 to i32
  %v2_805276c = call i32 @function_8054173(i32 14, i32 %v2_8052765)
  ret i32 %v2_805276c
}

define i32 @function_8052775(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8052775:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8052790 = ptrtoint i32* %stack_var_-12 to i32
  %v2_8052797 = call i32 @function_8054173(i32 1, i32 %v2_8052790)
  ret i32 %v2_8052797

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_8054173, { 5, 4, 7, 3, 6, 2, 11, 1, 8, 0, 10, 9 }
}

define i32 @function_80527a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_80527a0:
  %v0_80527a3 = call i32 @function_8051fd5()
  %v0_80527a8 = load i32, i32* @edx, align 4
  %v4_80527af = call i32 @function_8052060(i32 %v0_80527a3, i32 %arg1, i32 %v0_80527a8, i32 %v0_80527a8)
  ret i32 %v4_80527af
}

define i32 @function_80527b8(i32 %arg1) local_unnamed_addr {
dec_label_pc_80527b8:
  %tmp3 = icmp slt i32 %arg1, 1
  br i1 %tmp3, label %dec_label_pc_80527d0, label %dec_label_pc_80527c3

dec_label_pc_80527c3:                             ; preds = %dec_label_pc_80527b8
  %v1_80527c3 = add i32 %arg1, -64
  %v3_80527c3 = sub i32 63, %arg1
  %v4_80527c3 = and i32 %v3_80527c3, %arg1
  %v5_80527c3 = icmp slt i32 %v4_80527c3, 0
  %v6_80527c3 = icmp eq i32 %v1_80527c3, 0
  %v7_80527c3 = icmp slt i32 %v1_80527c3, 0
  %v3_80527c6 = icmp eq i1 %v7_80527c3, %v5_80527c3
  %v4_80527c6 = icmp eq i1 %v6_80527c3, false
  %v5_80527c6 = and i1 %v4_80527c6, %v3_80527c6
  br i1 %v5_80527c6, label %dec_label_pc_80527d0, label %dec_label_pc_80527c8

dec_label_pc_80527c8:                             ; preds = %dec_label_pc_80527c3
  %v4_80527cb = call i32 @function_80528ce(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_80527d0

dec_label_pc_80527d0:                             ; preds = %dec_label_pc_80527c3, %dec_label_pc_80527b8, %dec_label_pc_80527c8
  %v1_80527d0 = call i32 @function_80524b9(i32 ptrtoint (i32* @0 to i32))
  %v1_80527d5 = inttoptr i32 %v1_80527d0 to i32*
  store i32 22, i32* %v1_80527d5, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_80527c3, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_80527d0, { 2, 0, 1 }
}

define i32 @function_80527e2(i32 %arg1) local_unnamed_addr {
dec_label_pc_80527e2:
  %v3_80527f0 = inttoptr i32 %arg1 to i8*
  %v4_80527f0 = call i32 @function_805250a(i8* %v3_80527f0, i32 0, i32 128)
  ret i32 0
}

define i32 @function_80527fb(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_80527fb:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_80527fb = load i32, i32* @ebx, align 4
  %v15_80527fc = ptrtoint i32* %stack_var_-300 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v10_8052810 = icmp eq i32 %arg2, -1
  br i1 %v10_8052810, label %dec_label_pc_805281e, label %dec_label_pc_8052815

dec_label_pc_8052815:                             ; preds = %dec_label_pc_80527fb
  %tmp25 = icmp slt i32 %arg1, 1
  br i1 %tmp25, label %dec_label_pc_805281e, label %dec_label_pc_8052819

dec_label_pc_8052819:                             ; preds = %dec_label_pc_8052815
  %v7_805281c = icmp sgt i32 %arg1, 64
  br i1 %v7_805281c, label %dec_label_pc_805281e, label %dec_label_pc_8052839.lr.ph

dec_label_pc_805281e:                             ; preds = %dec_label_pc_8052819, %dec_label_pc_8052815, %dec_label_pc_80527fb
  %v1_805281e = call i32 @function_80524b9(i32 %v0_80527fb)
  store i32 %v1_805281e, i32* %eax.global-to-local, align 4
  %v1_8052823 = inttoptr i32 %v1_805281e to i32*
  store i32 22, i32* %v1_8052823, align 4
  br label %dec_label_pc_805289f

dec_label_pc_8052839.lr.ph:                       ; preds = %dec_label_pc_8052819
  store i32 %arg2, i32* %stack_var_-144, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  %v4_805283927 = add i32 %v15_80527fc, 284
  %v5_805283928 = inttoptr i32 %v4_805283927 to i32*
  store i32 0, i32* %v5_805283928, align 4
  %v0_805284429 = load i32, i32* %eax.global-to-local, align 4
  %v1_805284430 = add i32 %v0_805284429, -1
  %v9_805284431 = icmp slt i32 %v1_805284430, 0
  store i32 %v1_805284430, i32* %eax.global-to-local, align 4
  %v1_805284532 = icmp eq i1 %v9_805284431, false
  br i1 %v1_805284532, label %dec_label_pc_8052839.dec_label_pc_8052839_crit_edge, label %dec_label_pc_8052847

dec_label_pc_8052839.dec_label_pc_8052839_crit_edge: ; preds = %dec_label_pc_8052839.lr.ph, %dec_label_pc_8052839.dec_label_pc_8052839_crit_edge
  %v1_805284433 = phi i32 [ %v1_8052844, %dec_label_pc_8052839.dec_label_pc_8052839_crit_edge ], [ %v1_805284430, %dec_label_pc_8052839.lr.ph ]
  %v0_8052839.pre = load i32, i32* @esp, align 4
  %v2_8052839 = mul i32 %v1_805284433, 4
  %v3_8052839 = add i32 %v0_8052839.pre, 160
  %v4_8052839 = add i32 %v3_8052839, %v2_8052839
  %v5_8052839 = inttoptr i32 %v4_8052839 to i32*
  store i32 0, i32* %v5_8052839, align 4
  %v0_8052844 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052844 = add i32 %v0_8052844, -1
  %v9_8052844 = icmp slt i32 %v1_8052844, 0
  store i32 %v1_8052844, i32* %eax.global-to-local, align 4
  %v1_8052845 = icmp eq i1 %v9_8052844, false
  br i1 %v1_8052845, label %dec_label_pc_8052839.dec_label_pc_8052839_crit_edge, label %dec_label_pc_8052847

dec_label_pc_8052847:                             ; preds = %dec_label_pc_8052839.dec_label_pc_8052839_crit_edge, %dec_label_pc_8052839.lr.ph
  %v0_8052847 = load i32, i32* @edx, align 4
  %v2_805284a = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_805284a, i32* %eax.global-to-local, align 4
  %v4_8052852 = call i32 @function_80528ce(i32 %v2_805284a, i32 %arg1, i32 %v0_8052847, i32 %v0_8052847)
  store i32 %v4_8052852, i32* %eax.global-to-local, align 4
  %v2_805285a = icmp slt i32 %v4_8052852, 0
  br i1 %v2_805285a, label %dec_label_pc_805289f, label %dec_label_pc_805285e

dec_label_pc_805285e:                             ; preds = %dec_label_pc_8052847
  %v4_8052866 = call i32 @function_80528aa(i32 ptrtoint (i32* @global_var_80568e0.46 to i32), i32 %arg1, i32 %v4_8052852, i32 %v4_8052852)
  %v2_805287f = ptrtoint i32* %stack_var_-284 to i32
  %v2_8052884 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8052884, i32* %eax.global-to-local, align 4
  %v4_805288d = call i32 @function_805407f(i32 %arg1, i32* nonnull %stack_var_-144, i32 %v2_805287f)
  store i32 %v4_805288d, i32* %eax.global-to-local, align 4
  %v2_8052895 = icmp slt i32 %v4_805288d, 0
  br i1 %v2_8052895, label %dec_label_pc_805289f, label %dec_label_pc_8052899

dec_label_pc_8052899:                             ; preds = %dec_label_pc_805285e
  %v3_8052899 = load i32, i32* %stack_var_-284, align 4
  br label %dec_label_pc_80528a2

dec_label_pc_805289f:                             ; preds = %dec_label_pc_805285e, %dec_label_pc_8052847, %dec_label_pc_805281e
  br label %dec_label_pc_80528a2

dec_label_pc_80528a2:                             ; preds = %dec_label_pc_8052899, %dec_label_pc_805289f
  %storemerge = phi i32 [ -1, %dec_label_pc_805289f ], [ %v3_8052899, %dec_label_pc_8052899 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8052844, { 2, 1, 0 }
  uselistorder i32* %stack_var_-144, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 11, 1, 2, 3, 4, 6, 5, 0, 9, 10, 7, 8 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 3, 2, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_80528a2, { 1, 0 }
  uselistorder label %dec_label_pc_8052839.dec_label_pc_8052839_crit_edge, { 1, 0 }
}

define i32 @function_80528aa(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80528aa:
  %v1_80528b8 = add i32 %arg2, -1
  %v1_80528bb = urem i32 %v1_80528b8, 32
  %v2_80528bb = icmp eq i32 %v1_80528bb, 0
  %v2_80528be = udiv i32 %v1_80528b8, 32
  br i1 %v2_80528bb, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_80528aa
  %v5_80528c1 = shl i32 1, %v1_80528bb
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_80528aa, %bb
  %v6_80528c3 = phi i32 [ 1, %dec_label_pc_80528aa ], [ %v5_80528c1, %bb ]
  %v2_80528c3 = mul nuw nsw i32 %v2_80528be, 4
  %v3_80528c3 = add i32 %v2_80528c3, %arg1
  %v4_80528c3 = inttoptr i32 %v3_80528c3 to i32*
  %v5_80528c3 = load i32, i32* %v4_80528c3, align 4
  %v7_80528c3 = and i32 %v5_80528c3, %v6_80528c3
  %v8_80528c3 = icmp eq i32 %v7_80528c3, 0
  %v1_80528c7 = icmp eq i1 %v8_80528c3, false
  %v2_80528c7 = zext i1 %v1_80528c7 to i32
  ret i32 %v2_80528c7

; uselistorder directives
  uselistorder i32 %v1_80528bb, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_80528ce(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80528ce:
  %stack_var_-4 = alloca i32, align 4
  %v0_80528ce = load i32, i32* @ebx, align 4
  store i32 %v0_80528ce, i32* %stack_var_-4, align 4
  %v1_80528dc = add i32 %arg2, -1
  %v1_80528df = urem i32 %v1_80528dc, 32
  %v2_80528df = icmp eq i32 %v1_80528df, 0
  store i32 %v1_80528df, i32* @ecx, align 4
  %v2_80528e2 = udiv i32 %v1_80528dc, 32
  store i32 %v2_80528e2, i32* @edx, align 4
  br i1 %v2_80528df, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_80528ce
  %v5_80528e5 = shl i32 1, %v1_80528df
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_80528ce, %bb
  %v6_80528e7 = phi i32 [ 1, %dec_label_pc_80528ce ], [ %v5_80528e5, %bb ]
  %v2_80528e7 = mul nuw nsw i32 %v2_80528e2, 4
  %v3_80528e7 = add i32 %v2_80528e7, %arg1
  %v4_80528e7 = inttoptr i32 %v3_80528e7 to i32*
  %v5_80528e7 = load i32, i32* %v4_80528e7, align 4
  %v7_80528e7 = or i32 %v5_80528e7, %v6_80528e7
  store i32 %v7_80528e7, i32* %v4_80528e7, align 4
  %v2_80528ec = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80528ec, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_80528e2, { 1, 0 }
  uselistorder i32 %v1_80528df, { 2, 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_80528ee() local_unnamed_addr {
dec_label_pc_80528ee:
  %v0_80528ee = load i32, i32* @eax, align 4
  %v6_8052901 = icmp ugt i32 %v0_80528ee, 16777215
  br i1 %v6_8052901, label %dec_label_pc_8052912, label %dec_label_pc_8052903

dec_label_pc_8052903:                             ; preds = %dec_label_pc_80528ee
  %tmp = icmp ult i32 %v0_80528ee, 256
  %v2_80528f1 = udiv i32 %v0_80528ee, 256
  %v2_8052903 = call i32 @llvm.ctlz.i32(i32 %v2_80528f1, i1 true)
  %v3_8052903 = xor i32 %v2_8052903, 31
  %v5_8052903 = select i1 %tmp, i32 95, i32 %v3_8052903
  %v1_8052906 = add nuw nsw i32 %v5_8052903, 6
  %v2_8052909 = urem i32 %v1_8052906, 32
  %v4_8052909 = icmp eq i32 %v2_8052909, 0
  br i1 %v4_8052909, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_8052903
  %v5_8052909 = lshr i32 %v0_80528ee, %v2_8052909
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_8052903, %bb
  %v0_805290b = phi i32 [ %v0_80528ee, %dec_label_pc_8052903 ], [ %v5_8052909, %bb ]
  %v1_805290b = urem i32 %v0_805290b, 4
  %v2_805290e = mul nuw nsw i32 %v5_8052903, 4
  %v3_805290e = or i32 %v1_805290b, 32
  %v4_805290e = add nuw nsw i32 %v3_805290e, %v2_805290e
  br label %dec_label_pc_8052912

dec_label_pc_8052912:                             ; preds = %dec_label_pc_80528ee, %bb4
  %v0_8052913 = phi i32 [ 95, %dec_label_pc_80528ee ], [ %v4_805290e, %bb4 ]
  ret i32 %v0_8052913

; uselistorder directives
  uselistorder i32 %v2_8052909, { 1, 0 }
  uselistorder i32 %v0_80528ee, { 2, 3, 1, 0, 4 }
  uselistorder i1 true, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8052912, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_8052914(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052914:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8052914 = load i32, i32* @ebp, align 4
  %v0_8052915 = load i32, i32* @edi, align 4
  %v0_8052916 = load i32, i32* @esi, align 4
  %v0_8052917 = load i32, i32* @ebx, align 4
  store i32 %v0_8052917, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_8052929 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8052929, i32* @eax, align 4
  store i32 %v2_8052929, i32* %stack_var_-92, align 4
  %v2_805292e = call i32 @function_8053e40(i32 %v2_8052929, i32 134561341)
  store i32 %v2_805292e, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_80565c0.47 to i32), i32* %stack_var_-92, align 4
  %v1_805293a = call i32 @function_8053e3d(i32 ptrtoint (i32* @global_var_80565c0.47 to i32))
  store i32 %v1_805293a, i32* %eax.global-to-local, align 4
  %v0_8052942 = load i32, i32* %ebx.global-to-local, align 4
  %tmp124 = icmp ult i32 %v0_8052942, -32
  br i1 %tmp124, label %dec_label_pc_8052959, label %dec_label_pc_8052947

dec_label_pc_8052947:                             ; preds = %dec_label_pc_8052914
  %v0_8052947 = load i32, i32* %stack_var_-92, align 4
  %v1_8052947 = call i32 @function_80524b9(i32 %v0_8052947)
  store i32 %v1_8052947, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_805294e = inttoptr i32 %v1_8052947 to i32*
  store i32 12, i32* %v1_805294e, align 4
  br label %dec_label_pc_805307e

dec_label_pc_8052959:                             ; preds = %dec_label_pc_8052914
  %v1_8052959 = add i32 %v0_8052942, 11
  %tmp125 = icmp ult i32 %v1_8052959, 16
  br i1 %tmp125, label %dec_label_pc_8052970, label %dec_label_pc_8052969

dec_label_pc_8052969:                             ; preds = %dec_label_pc_8052959
  %v1_8052969 = and i32 %v1_8052959, -8
  br label %dec_label_pc_8052970

dec_label_pc_8052970:                             ; preds = %dec_label_pc_8052959, %dec_label_pc_8052969
  %storemerge135 = phi i32 [ %v1_8052969, %dec_label_pc_8052969 ], [ %v1_8052959, %dec_label_pc_8052959 ]
  %v1_8052d08 = phi i32 [ %v1_8052969, %dec_label_pc_8052969 ], [ 16, %dec_label_pc_8052959 ]
  store i32 %storemerge135, i32* %eax.global-to-local, align 4
  %v0_8052970 = load i8, i8* @global_var_8056960.48, align 1
  %v1_8052970 = sext i8 %v0_8052970 to i32
  store i32 %v1_8052970, i32* @ebx, align 4
  %v3_8052976 = urem i8 %v0_8052970, 2
  %v4_8052976 = icmp eq i8 %v3_8052976, 0
  %v1_8052979 = icmp eq i1 %v4_8052976, false
  br i1 %v1_8052979, label %dec_label_pc_8052998, label %dec_label_pc_805297b

dec_label_pc_805297b:                             ; preds = %dec_label_pc_8052970
  %v2_805297b = icmp eq i8 %v0_8052970, 0
  %v1_805297d = icmp eq i1 %v2_805297b, false
  br i1 %v1_805297d, label %dec_label_pc_8052c73, label %dec_label_pc_8052983

dec_label_pc_8052983:                             ; preds = %dec_label_pc_805297b
  store i32 ptrtoint (i8* @global_var_8056960.48 to i32), i32* %stack_var_-92, align 4
  %v2_805298b = call i32 @function_8053531(i32* bitcast (i8* @global_var_8056960.48 to i32*))
  store i32 %v2_805298b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052c73

dec_label_pc_8052998:                             ; preds = %dec_label_pc_8052970
  %v11_8052998 = trunc i32 %v1_8052d08 to i8
  %v8_805299c = icmp ugt i8 %v11_8052998, %v0_8052970
  br i1 %v8_805299c, label %dec_label_pc_80529b9, label %dec_label_pc_805299e

dec_label_pc_805299e:                             ; preds = %dec_label_pc_8052998
  %v2_80529a2 = udiv i32 %v1_8052d08, 2
  store i32 %v2_80529a2, i32* %eax.global-to-local, align 4
  %v1_80529a4 = add i32 %v2_80529a2, ptrtoint (i8* @global_var_8056960.48 to i32)
  store i32 %v1_80529a4, i32* %ecx.global-to-local, align 4
  %v1_80529aa = add i32 %v2_80529a2, add (i32 ptrtoint (i8* @global_var_8056960.48 to i32), i32 -4)
  %v2_80529aa = inttoptr i32 %v1_80529aa to i32*
  %v3_80529aa = load i32, i32* %v2_80529aa, align 4
  store i32 %v3_80529aa, i32* @edx, align 4
  %v1_80529ad = icmp eq i32 %v3_80529aa, 0
  br i1 %v1_80529ad, label %dec_label_pc_80529b9, label %dec_label_pc_80529b1

dec_label_pc_80529b1:                             ; preds = %dec_label_pc_805299e
  %v1_80529b1 = add i32 %v3_80529aa, 8
  %v2_80529b1 = inttoptr i32 %v1_80529b1 to i32*
  %v3_80529b1 = load i32, i32* %v2_80529b1, align 4
  store i32 %v3_80529b1, i32* %eax.global-to-local, align 4
  store i32 %v3_80529b1, i32* %v2_80529aa, align 4
  br label %dec_label_pc_80529f2

dec_label_pc_80529b9:                             ; preds = %dec_label_pc_805299e, %dec_label_pc_8052998
  %v8_80529b9 = icmp ult i32 %v1_8052d08, 255
  %v6_80529c1 = icmp ugt i32 %v1_8052d08, 255
  store i32 %v1_8052d08, i32* @eax, align 4
  br i1 %v6_80529c1, label %dec_label_pc_80529fa, label %dec_label_pc_80529c3

dec_label_pc_80529c3:                             ; preds = %dec_label_pc_80529b9
  %v2_80529c7 = udiv i32 %v1_8052d08, 8
  store i32 %v2_80529c7, i32* %eax.global-to-local, align 4
  %v1_80529ce = mul nuw i32 %v2_80529c7, 8
  %v2_80529ce = add i32 %v1_80529ce, ptrtoint (i32* @global_var_805698c.49 to i32)
  store i32 %v2_80529ce, i32* %ecx.global-to-local, align 4
  %v1_80529d5 = add i32 %v1_80529ce, add (i32 ptrtoint (i32* @global_var_805698c.49 to i32), i32 12)
  %v2_80529d5 = inttoptr i32 %v1_80529d5 to i32*
  %v3_80529d5 = load i32, i32* %v2_80529d5, align 4
  store i32 %v3_80529d5, i32* @edx, align 4
  %v12_80529d8 = icmp eq i32 %v3_80529d5, %v2_80529ce
  br i1 %v12_80529d8, label %dec_label_pc_8052af6.preheader, label %dec_label_pc_80529e0

dec_label_pc_80529e0:                             ; preds = %dec_label_pc_80529c3
  store i32 %v1_8052d08, i32* %ebx.global-to-local, align 4
  %v1_80529e4 = add i32 %v3_80529d5, 12
  %v2_80529e4 = inttoptr i32 %v1_80529e4 to i32*
  %v3_80529e4 = load i32, i32* %v2_80529e4, align 4
  store i32 %v3_80529e4, i32* %eax.global-to-local, align 4
  store i32 %v3_80529e4, i32* %v2_80529d5, align 4
  %v0_80529ea = load i32, i32* @edx, align 4
  %v1_80529ea = load i32, i32* %ebx.global-to-local, align 4
  %v2_80529ea = add i32 %v0_80529ea, 4
  %v3_80529ea = add i32 %v2_80529ea, %v1_80529ea
  %v4_80529ea = inttoptr i32 %v3_80529ea to i32*
  %v5_80529ea = load i32, i32* %v4_80529ea, align 4
  %v6_80529ea = or i32 %v5_80529ea, 1
  store i32 %v6_80529ea, i32* %v4_80529ea, align 4
  %v0_80529ef = load i32, i32* %ecx.global-to-local, align 4
  %v1_80529ef = load i32, i32* %eax.global-to-local, align 4
  %v2_80529ef = add i32 %v1_80529ef, 8
  %v3_80529ef = inttoptr i32 %v2_80529ef to i32*
  store i32 %v0_80529ef, i32* %v3_80529ef, align 4
  br label %dec_label_pc_80529f2

dec_label_pc_80529f2:                             ; preds = %dec_label_pc_8052d8f, %dec_label_pc_8052da1, %dec_label_pc_80529b1, %dec_label_pc_80529e0
  %v0_80529f2 = load i32, i32* @edx, align 4
  %v1_80529f2 = add i32 %v0_80529f2, 8
  store i32 %v1_80529f2, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805306d

dec_label_pc_80529fa:                             ; preds = %dec_label_pc_80529b9
  %v0_80529fe = call i32 @function_80528ee()
  store i32 %v0_80529fe, i32* %eax.global-to-local, align 4
  %v3_8052a03 = and i8 %v0_8052970, 2
  %v4_8052a03 = icmp eq i8 %v3_8052a03, 0
  %v6_8052a03 = zext i8 %v3_8052a03 to i32
  %v9_8052a03 = and i32 %v1_8052970, -256
  %v10_8052a03 = or i32 %v9_8052a03, %v6_8052a03
  store i32 %v10_8052a03, i32* @ebx, align 4
  br i1 %v4_8052a03, label %dec_label_pc_8052af6.preheader, label %dec_label_pc_8052a10

dec_label_pc_8052a10:                             ; preds = %dec_label_pc_80529fa
  store i32 ptrtoint (i8* @global_var_8056960.48 to i32), i32* %stack_var_-92, align 4
  %v2_8052a18 = call i32 @function_8053531(i32* bitcast (i8* @global_var_8056960.48 to i32*))
  store i32 %v2_8052a18, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052af6.preheader

dec_label_pc_8052af6.preheader:                   ; preds = %dec_label_pc_8052a10, %dec_label_pc_80529c3, %dec_label_pc_80529fa
  %stack_var_-40.0.ph = phi i32 [ %v2_80529c7, %dec_label_pc_80529c3 ], [ %v0_80529fe, %dec_label_pc_8052a10 ], [ %v0_80529fe, %dec_label_pc_80529fa ]
  %v0_8052af69 = load i32, i32* @global_var_80569a0.52, align 32
  store i32 %v0_8052af69, i32* @ebp, align 4
  %v9_8052afc15 = icmp eq i32 %v0_8052af69, 134572436
  %v1_8052b0217 = icmp eq i1 %v9_8052afc15, false
  br i1 %v1_8052b0217, label %dec_label_pc_8052a25.lr.ph, label %dec_label_pc_8052b08

dec_label_pc_8052a25.lr.ph:                       ; preds = %dec_label_pc_8052af6.preheader
  %v1_8052a4c = add i32 %v1_8052d08, 16
  br label %dec_label_pc_8052a25

dec_label_pc_8052a25:                             ; preds = %dec_label_pc_8052a25.lr.ph, %dec_label_pc_8052af6
  %v1_805301f = phi i32 [ %v0_8052af69, %dec_label_pc_8052a25.lr.ph ], [ %v0_8052af6, %dec_label_pc_8052af6 ]
  %v1_8052a25 = add i32 %v1_805301f, 4
  %v2_8052a25 = inttoptr i32 %v1_8052a25 to i32*
  %v3_8052a25 = load i32, i32* %v2_8052a25, align 4
  %v1_8052a28 = add i32 %v1_805301f, 12
  %v2_8052a28 = inttoptr i32 %v1_8052a28 to i32*
  %v3_8052a28 = load i32, i32* %v2_8052a28, align 4
  store i32 %v3_8052a28, i32* @edx, align 4
  %v1_8052a2b = and i32 %v3_8052a25, -4
  store i32 %v1_8052a2b, i32* @edi, align 4
  br i1 %v6_80529c1, label %dec_label_pc_8052a57, label %dec_label_pc_8052a38

dec_label_pc_8052a38:                             ; preds = %dec_label_pc_8052a25
  %v9_8052a38 = icmp eq i32 %v3_8052a28, 134572436
  %v1_8052a3e = icmp eq i1 %v9_8052a38, false
  br i1 %v1_8052a3e, label %dec_label_pc_8052a57, label %dec_label_pc_8052a40

dec_label_pc_8052a40:                             ; preds = %dec_label_pc_8052a38
  %v1_8052a40 = load i32, i32* @global_var_8056990.50, align 16
  %v12_8052a40 = icmp eq i32 %v1_805301f, %v1_8052a40
  %v1_8052a46 = icmp eq i1 %v12_8052a40, false
  br i1 %v1_8052a46, label %dec_label_pc_8052a57, label %dec_label_pc_8052a48

dec_label_pc_8052a48:                             ; preds = %dec_label_pc_8052a40
  store i32 %v1_8052a4c, i32* %eax.global-to-local, align 4
  %v6_8052a51 = icmp ugt i32 %v1_8052a2b, %v1_8052a4c
  br i1 %v6_8052a51, label %dec_label_pc_8053008, label %dec_label_pc_8052a57

dec_label_pc_8052a57:                             ; preds = %dec_label_pc_8052a48, %dec_label_pc_8052a40, %dec_label_pc_8052a38, %dec_label_pc_8052a25
  store i32 ptrtoint (i32* @global_var_8056994.51 to i32), i32* %eax.global-to-local, align 4
  %v2_8052a5c = add i32 %v3_8052a28, 8
  %v3_8052a5c = inttoptr i32 %v2_8052a5c to i32*
  store i32 ptrtoint (i32* @global_var_8056994.51 to i32), i32* %v3_8052a5c, align 4
  %v0_8052a5f = load i32, i32* @edx, align 4
  store i32 %v0_8052a5f, i32* @global_var_80569a0.52, align 4
  %v0_8052a62 = load i32, i32* @edi, align 4
  %v15_8052a62 = icmp eq i32 %v0_8052a62, %v1_8052d08
  br i1 %v15_8052a62, label %dec_label_pc_8053049, label %dec_label_pc_8052a6c

dec_label_pc_8052a6c:                             ; preds = %dec_label_pc_8052a57
  %v6_8052a72 = icmp ugt i32 %v0_8052a62, 255
  br i1 %v6_8052a72, label %dec_label_pc_8052a85, label %dec_label_pc_8052a74

dec_label_pc_8052a74:                             ; preds = %dec_label_pc_8052a6c
  %v2_8052a76 = udiv i32 %v0_8052a62, 8
  store i32 %v2_8052a76, i32* %esi.global-to-local, align 4
  %v1_8052a79 = mul nuw i32 %v2_8052a76, 8
  %v2_8052a79 = add i32 %v1_8052a79, 134572428
  store i32 %v2_8052a79, i32* @ebx, align 4
  %v1_8052a80 = add i32 %v1_8052a79, 134572436
  %v2_8052a80 = inttoptr i32 %v1_8052a80 to i32*
  %v3_8052a80 = load i32, i32* %v2_8052a80, align 4
  store i32 %v3_8052a80, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052ace

dec_label_pc_8052a85:                             ; preds = %dec_label_pc_8052a6c
  store i32 %v0_8052a62, i32* @eax, align 4
  %v0_8052a87 = call i32 @function_80528ee()
  store i32 %v0_8052a87, i32* %esi.global-to-local, align 4
  %v1_8052a8e = mul i32 %v0_8052a87, 8
  %v2_8052a8e = add i32 %v1_8052a8e, ptrtoint (i32* @global_var_805698c.49 to i32)
  store i32 %v2_8052a8e, i32* %eax.global-to-local, align 4
  %v1_8052a95 = add i32 %v1_8052a8e, add (i32 ptrtoint (i32* @global_var_805698c.49 to i32), i32 8)
  %v2_8052a95 = inttoptr i32 %v1_8052a95 to i32*
  %v3_8052a95 = load i32, i32* %v2_8052a95, align 4
  store i32 %v3_8052a95, i32* %edx.global-to-local, align 4
  store i32 %v3_8052a95, i32* @ebx, align 4
  %v12_8052a9e = icmp eq i32 %v3_8052a95, %v2_8052a8e
  br i1 %v12_8052a9e, label %dec_label_pc_8052ace, label %dec_label_pc_8052aa2

dec_label_pc_8052aa2:                             ; preds = %dec_label_pc_8052a85
  %v1_8052aa2 = add i32 %v1_8052a8e, add (i32 ptrtoint (i32* @global_var_805698c.49 to i32), i32 12)
  %v2_8052aa2 = inttoptr i32 %v1_8052aa2 to i32*
  %v3_8052aa2 = load i32, i32* %v2_8052aa2, align 4
  store i32 %v3_8052aa2, i32* @ebx, align 4
  %v0_8052aa5 = load i32, i32* @edi, align 4
  %v2_8052aa5 = add i32 %v3_8052aa2, 4
  %v3_8052aa5 = inttoptr i32 %v2_8052aa5 to i32*
  %v4_8052aa5 = load i32, i32* %v3_8052aa5, align 4
  %v10_8052aa5 = icmp ult i32 %v0_8052aa5, %v4_8052aa5
  %v1_8052aa8 = icmp eq i1 %v10_8052aa5, false
  br i1 %v1_8052aa8, label %dec_label_pc_8052ab0, label %dec_label_pc_8052ace

dec_label_pc_8052ab0:                             ; preds = %dec_label_pc_8052aa2
  %v1_8052ab2 = or i32 %v0_8052aa5, 1
  store i32 %v1_8052ab2, i32* %eax.global-to-local, align 4
  store i32 %v3_8052a95, i32* %ebx.global-to-local, align 4
  %v2_8052ac6105 = add i32 %v3_8052a95, 4
  %v3_8052ac6106 = inttoptr i32 %v2_8052ac6105 to i32*
  %v4_8052ac6107 = load i32, i32* %v3_8052ac6106, align 4
  %v10_8052ac6108 = icmp ult i32 %v1_8052ab2, %v4_8052ac6107
  br i1 %v10_8052ac6108, label %dec_label_pc_8052ab7, label %dec_label_pc_8052acb

dec_label_pc_8052ab7:                             ; preds = %dec_label_pc_8052ab0, %dec_label_pc_8052ab7
  %v0_8052acb109 = phi i32 [ %v3_8052abb, %dec_label_pc_8052ab7 ], [ %v3_8052a95, %dec_label_pc_8052ab0 ]
  store i32 %v0_8052acb109, i32* %ecx.global-to-local, align 4
  %v1_8052abb = add i32 %v0_8052acb109, 8
  %v2_8052abb = inttoptr i32 %v1_8052abb to i32*
  %v3_8052abb = load i32, i32* %v2_8052abb, align 4
  store i32 %v3_8052abb, i32* %ecx.global-to-local, align 4
  store i32 %v3_8052abb, i32* %ebx.global-to-local, align 4
  %v2_8052ac6 = add i32 %v3_8052abb, 4
  %v3_8052ac6 = inttoptr i32 %v2_8052ac6 to i32*
  %v4_8052ac6 = load i32, i32* %v3_8052ac6, align 4
  %v10_8052ac6 = icmp ult i32 %v1_8052ab2, %v4_8052ac6
  br i1 %v10_8052ac6, label %dec_label_pc_8052ab7, label %dec_label_pc_8052acb

dec_label_pc_8052acb:                             ; preds = %dec_label_pc_8052ab7, %dec_label_pc_8052ab0
  %v0_8052acb.lcssa = phi i32 [ %v3_8052a95, %dec_label_pc_8052ab0 ], [ %v3_8052abb, %dec_label_pc_8052ab7 ]
  %v1_8052acb = add i32 %v0_8052acb.lcssa, 12
  %v2_8052acb = inttoptr i32 %v1_8052acb to i32*
  %v3_8052acb = load i32, i32* %v2_8052acb, align 4
  store i32 %v3_8052acb, i32* @ebx, align 4
  br label %dec_label_pc_8052ace

dec_label_pc_8052ace:                             ; preds = %dec_label_pc_8052a74, %dec_label_pc_8052aa2, %dec_label_pc_8052a85, %dec_label_pc_8052acb
  %v0_8052ace = phi i32 [ %v0_8052a87, %dec_label_pc_8052a85 ], [ %v0_8052a87, %dec_label_pc_8052acb ], [ %v0_8052a87, %dec_label_pc_8052aa2 ], [ %v2_8052a76, %dec_label_pc_8052a74 ]
  %stack_var_-64.1 = phi i32 [ %v2_8052a8e, %dec_label_pc_8052a85 ], [ %v0_8052acb.lcssa, %dec_label_pc_8052acb ], [ %v2_8052a8e, %dec_label_pc_8052aa2 ], [ %v3_8052a80, %dec_label_pc_8052a74 ]
  %v1_8052ad0 = urem i32 %v0_8052ace, 32
  %v2_8052ad0 = icmp eq i32 %v1_8052ad0, 0
  store i32 %v1_8052ad0, i32* %esi.global-to-local, align 4
  store i32 %v1_8052ad0, i32* %ecx.global-to-local, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_8052ada = sdiv i32 %v0_8052ace, 32
  store i32 %v2_8052ada, i32* %edx.global-to-local, align 4
  br i1 %v2_8052ad0, label %dec_label_pc_8052af6, label %bb

bb:                                               ; preds = %dec_label_pc_8052ace
  %v5_8052add = shl i32 1, %v1_8052ad0
  store i32 %v5_8052add, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052af6

dec_label_pc_8052af6:                             ; preds = %dec_label_pc_8052ace, %bb
  %v5_8052adf = phi i32 [ 1, %dec_label_pc_8052ace ], [ %v5_8052add, %bb ]
  %v1_8052adf = mul nsw i32 %v2_8052ada, 4
  %v2_8052adf = add i32 %v1_8052adf, ptrtoint (i32* @global_var_8056c94.53 to i32)
  %v3_8052adf = inttoptr i32 %v2_8052adf to i32*
  %v4_8052adf = load i32, i32* %v3_8052adf, align 4
  %v6_8052adf = or i32 %v4_8052adf, %v5_8052adf
  store i32 %v6_8052adf, i32* %v3_8052adf, align 4
  %v0_8052ae6 = load i32, i32* @ebx, align 4
  %v1_8052ae6 = load i32, i32* @ebp, align 4
  %v2_8052ae6 = add i32 %v1_8052ae6, 12
  %v3_8052ae6 = inttoptr i32 %v2_8052ae6 to i32*
  store i32 %v0_8052ae6, i32* %v3_8052ae6, align 4
  store i32 %stack_var_-64.1, i32* @esi, align 4
  %v1_8052aed = load i32, i32* @ebp, align 4
  %v2_8052aed = add i32 %v1_8052aed, 8
  %v3_8052aed = inttoptr i32 %v2_8052aed to i32*
  store i32 %stack_var_-64.1, i32* %v3_8052aed, align 4
  %v0_8052af0 = load i32, i32* @ebp, align 4
  %v1_8052af0 = load i32, i32* @ebx, align 4
  %v2_8052af0 = add i32 %v1_8052af0, 8
  %v3_8052af0 = inttoptr i32 %v2_8052af0 to i32*
  store i32 %v0_8052af0, i32* %v3_8052af0, align 4
  %v0_8052af3 = load i32, i32* @ebp, align 4
  %v1_8052af3 = load i32, i32* @esi, align 4
  %v2_8052af3 = add i32 %v1_8052af3, 12
  %v3_8052af3 = inttoptr i32 %v2_8052af3 to i32*
  store i32 %v0_8052af3, i32* %v3_8052af3, align 4
  %v0_8052af6 = load i32, i32* @global_var_80569a0.52, align 32
  store i32 %v0_8052af6, i32* @ebp, align 4
  %v9_8052afc = icmp eq i32 %v0_8052af6, 134572436
  %v1_8052b02 = icmp eq i1 %v9_8052afc, false
  br i1 %v1_8052b02, label %dec_label_pc_8052a25, label %dec_label_pc_8052b08

dec_label_pc_8052b08:                             ; preds = %dec_label_pc_8052af6, %dec_label_pc_8052af6.preheader
  br i1 %v8_80529b9, label %dec_label_pc_8052b96, label %dec_label_pc_8052b16

dec_label_pc_8052b16:                             ; preds = %dec_label_pc_8052b08
  store i32 %stack_var_-40.0.ph, i32* %eax.global-to-local, align 4
  %v1_8052b1a = mul i32 %stack_var_-40.0.ph, 8
  %v2_8052b1a = add i32 %v1_8052b1a, ptrtoint (i32* @global_var_805698c.49 to i32)
  store i32 %v2_8052b1a, i32* %edx.global-to-local, align 4
  %v1_8052b21 = add i32 %v1_8052b1a, add (i32 ptrtoint (i32* @global_var_805698c.49 to i32), i32 12)
  %v2_8052b21 = inttoptr i32 %v1_8052b21 to i32*
  %storemerge1.pre = load i32, i32* %v2_8052b21, align 4
  br label %dec_label_pc_8052b92

dec_label_pc_8052b26:                             ; preds = %dec_label_pc_8052b92
  %v1_8052b26 = add i32 %v4_8052b3d, 4
  %v2_8052b26 = inttoptr i32 %v1_8052b26 to i32*
  %v3_8052b26 = load i32, i32* %v2_8052b26, align 4
  store i32 %v3_8052b26, i32* %ebx.global-to-local, align 4
  %v1_8052b29 = add i32 %v4_8052b3d, 12
  %v2_8052b29 = inttoptr i32 %v1_8052b29 to i32*
  %v3_8052b29 = load i32, i32* %v2_8052b29, align 4
  store i32 %v3_8052b29, i32* @ecx, align 4
  %v1_8052b2c = and i32 %v3_8052b26, -4
  store i32 %v1_8052b2c, i32* @ebx, align 4
  %v10_8052b2f = icmp ult i32 %v1_8052b2c, %v1_8052d08
  br i1 %v10_8052b2f, label %dec_label_pc_8052b92, label %dec_label_pc_8052b35

dec_label_pc_8052b35:                             ; preds = %dec_label_pc_8052b26
  %v1_8052b35 = add i32 %v4_8052b3d, 8
  %v2_8052b35 = inttoptr i32 %v1_8052b35 to i32*
  %v3_8052b35 = load i32, i32* %v2_8052b35, align 4
  store i32 %v3_8052b35, i32* @edx, align 4
  %v1_8052b38 = add i32 %v3_8052b35, 12
  %v2_8052b38 = inttoptr i32 %v1_8052b38 to i32*
  %v3_8052b38 = load i32, i32* %v2_8052b38, align 4
  %v15_8052b38 = icmp eq i32 %v3_8052b38, %v4_8052b3d
  %v1_8052b3b = icmp eq i1 %v15_8052b38, false
  br i1 %v1_8052b3b, label %dec_label_pc_8052b42, label %dec_label_pc_8052b3d

dec_label_pc_8052b3d:                             ; preds = %dec_label_pc_8052b35
  %v1_8052b3d = add i32 %v3_8052b29, 8
  %v2_8052b3d = inttoptr i32 %v1_8052b3d to i32*
  %v3_8052b3d = load i32, i32* %v2_8052b3d, align 4
  %v15_8052b3d = icmp eq i32 %v3_8052b3d, %v4_8052b3d
  br i1 %v15_8052b3d, label %dec_label_pc_8052b47, label %dec_label_pc_8052b42

dec_label_pc_8052b42:                             ; preds = %dec_label_pc_8052b3d, %dec_label_pc_8052b35
  %v0_8052b42 = call i32 @function_8053875()
  store i32 %v0_8052b42, i32* %eax.global-to-local, align 4
  %v0_8052b47.pre = load i32, i32* @ebx, align 4
  %v0_8052b4d.pre = load i32, i32* @ecx, align 4
  %v1_8052b4d.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8052b47

dec_label_pc_8052b47:                             ; preds = %dec_label_pc_8052b3d, %dec_label_pc_8052b42
  %v1_8052b4d = phi i32 [ %v3_8052b35, %dec_label_pc_8052b3d ], [ %v1_8052b4d.pre, %dec_label_pc_8052b42 ]
  %v0_8052b4d = phi i32 [ %v3_8052b29, %dec_label_pc_8052b3d ], [ %v0_8052b4d.pre, %dec_label_pc_8052b42 ]
  %v0_8052b47 = phi i32 [ %v1_8052b2c, %dec_label_pc_8052b3d ], [ %v0_8052b47.pre, %dec_label_pc_8052b42 ]
  %v5_8052b49 = sub i32 %v0_8052b47, %v1_8052d08
  store i32 %v5_8052b49, i32* %esi.global-to-local, align 4
  %v2_8052b4d = add i32 %v1_8052b4d, 12
  %v3_8052b4d = inttoptr i32 %v2_8052b4d to i32*
  store i32 %v0_8052b4d, i32* %v3_8052b4d, align 4
  %v0_8052b50 = load i32, i32* @edx, align 4
  %v1_8052b50 = load i32, i32* @ecx, align 4
  %v2_8052b50 = add i32 %v1_8052b50, 8
  %v3_8052b50 = inttoptr i32 %v2_8052b50 to i32*
  store i32 %v0_8052b50, i32* %v3_8052b50, align 4
  %v0_8052b53 = load i32, i32* %esi.global-to-local, align 4
  %v0_8052b56 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052b56 = add i32 %v0_8052b56, 8
  store i32 %v1_8052b56, i32* %ecx.global-to-local, align 4
  %tmp126 = icmp ult i32 %v0_8052b53, 16
  br i1 %tmp126, label %dec_label_pc_8053057, label %dec_label_pc_8052b5f

dec_label_pc_8052b5f:                             ; preds = %dec_label_pc_8052b47
  %v2_8052b63 = add i32 %v0_8052b56, %v1_8052d08
  store i32 %v2_8052b63, i32* @edx, align 4
  %v1_8052b66 = or i32 %v1_8052d08, 1
  store i32 %v1_8052b66, i32* %ebx.global-to-local, align 4
  %v2_8052b69 = add i32 %v0_8052b56, 4
  %v3_8052b69 = inttoptr i32 %v2_8052b69 to i32*
  store i32 %v1_8052b66, i32* %v3_8052b69, align 4
  %v0_8052b6c = load i32, i32* %esi.global-to-local, align 4
  %v1_8052b6e = or i32 %v0_8052b6c, 1
  store i32 %v1_8052b6e, i32* %eax.global-to-local, align 4
  %v0_8052b71 = load i32, i32* @edx, align 4
  %v1_8052b71 = load i32, i32* @ebp, align 4
  %v2_8052b71 = add i32 %v1_8052b71, 8
  %v3_8052b71 = inttoptr i32 %v2_8052b71 to i32*
  store i32 %v0_8052b71, i32* %v3_8052b71, align 4
  %v0_8052b74 = load i32, i32* @edx, align 4
  %v1_8052b74 = load i32, i32* @ebp, align 4
  %v2_8052b74 = add i32 %v1_8052b74, 12
  %v3_8052b74 = inttoptr i32 %v2_8052b74 to i32*
  store i32 %v0_8052b74, i32* %v3_8052b74, align 4
  %v0_8052b77 = load i32, i32* @edx, align 4
  %v1_8052b77 = add i32 %v0_8052b77, 8
  %v2_8052b77 = inttoptr i32 %v1_8052b77 to i32*
  store i32 ptrtoint (i32* @global_var_8056994.51 to i32), i32* %v2_8052b77, align 4
  %v0_8052b7e = load i32, i32* @edx, align 4
  %v1_8052b7e = add i32 %v0_8052b7e, 12
  %v2_8052b7e = inttoptr i32 %v1_8052b7e to i32*
  store i32 ptrtoint (i32* @global_var_8056994.51 to i32), i32* %v2_8052b7e, align 4
  %v0_8052b85 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052b85 = load i32, i32* @edx, align 4
  %v2_8052b85 = add i32 %v1_8052b85, 4
  %v3_8052b85 = inttoptr i32 %v2_8052b85 to i32*
  store i32 %v0_8052b85, i32* %v3_8052b85, align 4
  %v0_8052b88 = load i32, i32* %esi.global-to-local, align 4
  %v1_8052b88 = load i32, i32* @edx, align 4
  %v3_8052b88 = add i32 %v1_8052b88, %v0_8052b88
  %v4_8052b88 = inttoptr i32 %v3_8052b88 to i32*
  store i32 %v0_8052b88, i32* %v4_8052b88, align 4
  br label %dec_label_pc_805305c

dec_label_pc_8052b92:                             ; preds = %dec_label_pc_8052b26, %dec_label_pc_8052b16
  %v4_8052b3d = phi i32 [ %storemerge1.pre, %dec_label_pc_8052b16 ], [ %v3_8052b29, %dec_label_pc_8052b26 ]
  store i32 %v4_8052b3d, i32* %eax.global-to-local, align 4
  %v12_8052b92 = icmp eq i32 %v4_8052b3d, %v2_8052b1a
  %v1_8052b94 = icmp eq i1 %v12_8052b92, false
  br i1 %v1_8052b94, label %dec_label_pc_8052b26, label %dec_label_pc_8052b96.loopexit

dec_label_pc_8052b96.loopexit:                    ; preds = %dec_label_pc_8052b92
  br label %dec_label_pc_8052b96

dec_label_pc_8052b96:                             ; preds = %dec_label_pc_8052b96.loopexit, %dec_label_pc_8052b08
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_8052b9f = add i32 %stack_var_-40.0.ph, 1
  %v2_8052ba2 = udiv i32 %v1_8052b9f, 32
  store i32 %v2_8052ba2, i32* @edi, align 4
  %v1_8052ba5 = mul i32 %v1_8052b9f, 8
  %v2_8052ba5 = add i32 %v1_8052ba5, ptrtoint (i32* @global_var_805698c.49 to i32)
  store i32 %v2_8052ba5, i32* %ebx.global-to-local, align 4
  %v1_8052bac = urem i32 %v1_8052b9f, 32
  %v2_8052bac = icmp eq i32 %v1_8052bac, 0
  store i32 %v1_8052bac, i32* %ecx.global-to-local, align 4
  %v1_8052baf = mul nuw nsw i32 %v2_8052ba2, 4
  %v2_8052baf = add i32 %v1_8052baf, ptrtoint (i32* @global_var_8056c94.53 to i32)
  %v3_8052baf = inttoptr i32 %v2_8052baf to i32*
  %v4_8052baf = load i32, i32* %v3_8052baf, align 4
  store i32 %v4_8052baf, i32* %edx.global-to-local, align 4
  br i1 %v2_8052bac, label %.preheader, label %bb88

bb88:                                             ; preds = %dec_label_pc_8052b96
  %v5_8052bb6 = shl i32 1, %v1_8052bac
  store i32 %v5_8052bb6, i32* %esi.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_8052b96, %bb88, %dec_label_pc_8052bf7
  %v1_8052bb8 = phi i32 [ %v1_8052bb8.pre, %dec_label_pc_8052bf7 ], [ %v4_8052baf, %bb88 ], [ %v4_8052baf, %dec_label_pc_8052b96 ]
  %v0_8052bbc = phi i32 [ %v0_8052bb8.pre, %dec_label_pc_8052bf7 ], [ %v5_8052bb6, %bb88 ], [ 1, %dec_label_pc_8052b96 ]
  %tmp89 = icmp ule i32 %v0_8052bbc, %v1_8052bb8
  %v1_8052bbc = icmp eq i32 %v0_8052bbc, 0
  %v1_8052bbe = icmp eq i1 %v1_8052bbc, false
  %or.cond = and i1 %tmp89, %v1_8052bbe
  br i1 %or.cond, label %dec_label_pc_8052bbc.dec_label_pc_8052bec.preheader_crit_edge, label %dec_label_pc_8052bc0.preheader

dec_label_pc_8052bbc.dec_label_pc_8052bec.preheader_crit_edge: ; preds = %.preheader
  %v0_8052be77.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052bec.preheader

dec_label_pc_8052bc0.preheader:                   ; preds = %.preheader
  %v0_8052bc0.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8052bc0

dec_label_pc_8052bc0:                             ; preds = %dec_label_pc_8052bc0.preheader, %dec_label_pc_8052bca
  %v0_8052bc0 = phi i32 [ %v0_8052bc0.pre, %dec_label_pc_8052bc0.preheader ], [ %v1_8052bc0, %dec_label_pc_8052bca ]
  %v1_8052bc0 = add i32 %v0_8052bc0, 1
  store i32 %v1_8052bc0, i32* @edi, align 4
  %v6_8052bc4 = icmp ugt i32 %v1_8052bc0, 2
  br i1 %v6_8052bc4, label %dec_label_pc_8052c73.loopexit, label %dec_label_pc_8052bca

dec_label_pc_8052bca:                             ; preds = %dec_label_pc_8052bc0
  %v1_8052bca = mul i32 %v1_8052bc0, 4
  %v2_8052bca = add i32 %v1_8052bca, ptrtoint (i32* @global_var_8056c94.53 to i32)
  %v3_8052bca = inttoptr i32 %v2_8052bca to i32*
  %v4_8052bca = load i32, i32* %v3_8052bca, align 4
  store i32 %v4_8052bca, i32* %edx.global-to-local, align 4
  %v1_8052bd1 = icmp eq i32 %v4_8052bca, 0
  br i1 %v1_8052bd1, label %dec_label_pc_8052bc0, label %dec_label_pc_8052bd5

dec_label_pc_8052bd5:                             ; preds = %dec_label_pc_8052bca
  store i32 1, i32* %esi.global-to-local, align 4
  %v2_8052bdc = mul i32 %v1_8052bc0, 256
  store i32 %v2_8052bdc, i32* %eax.global-to-local, align 4
  %v1_8052bdf = add i32 %v2_8052bdc, ptrtoint (i32* @global_var_805698c.49 to i32)
  store i32 %v1_8052bdf, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052bec.preheader

dec_label_pc_8052bec.preheader:                   ; preds = %dec_label_pc_8052bbc.dec_label_pc_8052bec.preheader_crit_edge, %dec_label_pc_8052bd5
  %v0_8052be77 = phi i32 [ %v1_8052bdf, %dec_label_pc_8052bd5 ], [ %v0_8052be77.pre, %dec_label_pc_8052bbc.dec_label_pc_8052bec.preheader_crit_edge ]
  %esi.promoted = phi i32 [ 1, %dec_label_pc_8052bd5 ], [ %v0_8052bbc, %dec_label_pc_8052bbc.dec_label_pc_8052bec.preheader_crit_edge ]
  %v0_8052bfe = phi i32 [ %v4_8052bca, %dec_label_pc_8052bd5 ], [ %v1_8052bb8, %dec_label_pc_8052bbc.dec_label_pc_8052bec.preheader_crit_edge ]
  %v2_8052bec4 = and i32 %v0_8052bfe, %esi.promoted
  %v3_8052bec5 = icmp eq i32 %v2_8052bec4, 0
  br i1 %v3_8052bec5, label %dec_label_pc_8052be7, label %dec_label_pc_8052bf0

dec_label_pc_8052be7:                             ; preds = %dec_label_pc_8052bec.preheader, %dec_label_pc_8052be7
  %v2_8052bea18 = phi i32 [ %v2_8052bea, %dec_label_pc_8052be7 ], [ %esi.promoted, %dec_label_pc_8052bec.preheader ]
  %v0_8052be78 = phi i32 [ %v1_8052be7, %dec_label_pc_8052be7 ], [ %v0_8052be77, %dec_label_pc_8052bec.preheader ]
  %v1_8052be7 = add i32 %v0_8052be78, 8
  %v2_8052bea = mul i32 %v2_8052bea18, 2
  %v2_8052bec = and i32 %v2_8052bea, %v0_8052bfe
  %v3_8052bec = icmp eq i32 %v2_8052bec, 0
  br i1 %v3_8052bec, label %dec_label_pc_8052be7, label %dec_label_pc_8052bec.dec_label_pc_8052bf0_crit_edge

dec_label_pc_8052bec.dec_label_pc_8052bf0_crit_edge: ; preds = %dec_label_pc_8052be7
  store i32 %v1_8052be7, i32* %ebx.global-to-local, align 4
  store i32 %v2_8052bea, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052bf0

dec_label_pc_8052bf0:                             ; preds = %dec_label_pc_8052bec.dec_label_pc_8052bf0_crit_edge, %dec_label_pc_8052bec.preheader
  %v0_8052c00 = phi i32 [ %v2_8052bea, %dec_label_pc_8052bec.dec_label_pc_8052bf0_crit_edge ], [ %esi.promoted, %dec_label_pc_8052bec.preheader ]
  %v1_8052c1a = phi i32 [ %v1_8052be7, %dec_label_pc_8052bec.dec_label_pc_8052bf0_crit_edge ], [ %v0_8052be77, %dec_label_pc_8052bec.preheader ]
  %v1_8052bf0 = add i32 %v1_8052c1a, 12
  %v2_8052bf0 = inttoptr i32 %v1_8052bf0 to i32*
  %v3_8052bf0 = load i32, i32* %v2_8052bf0, align 4
  store i32 %v3_8052bf0, i32* %ecx.global-to-local, align 4
  %v12_8052bf3 = icmp eq i32 %v3_8052bf0, %v1_8052c1a
  %v1_8052bf5 = icmp eq i1 %v12_8052bf3, false
  br i1 %v1_8052bf5, label %dec_label_pc_8052c0b, label %dec_label_pc_8052bf7

dec_label_pc_8052bf7:                             ; preds = %dec_label_pc_8052bf0
  %v1_8052bf9 = add i32 %v3_8052bf0, 8
  store i32 %v1_8052bf9, i32* %ebx.global-to-local, align 4
  %v1_8052bfc = sub i32 -1, %v0_8052c00
  store i32 %v1_8052bfc, i32* %eax.global-to-local, align 4
  %v2_8052bfe = and i32 %v0_8052bfe, %v1_8052bfc
  store i32 %v2_8052bfe, i32* %edx.global-to-local, align 4
  %v2_8052c00 = mul i32 %v0_8052c00, 2
  store i32 %v2_8052c00, i32* %esi.global-to-local, align 4
  %v1_8052c02 = load i32, i32* @edi, align 4
  %v2_8052c02 = mul i32 %v1_8052c02, 4
  %v3_8052c02 = add i32 %v2_8052c02, ptrtoint (i32* @global_var_8056c94.53 to i32)
  %v4_8052c02 = inttoptr i32 %v3_8052c02 to i32*
  store i32 %v2_8052bfe, i32* %v4_8052c02, align 4
  %v0_8052bb8.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_8052bb8.pre = load i32, i32* %edx.global-to-local, align 4
  br label %.preheader

dec_label_pc_8052c0b:                             ; preds = %dec_label_pc_8052bf0
  %v1_8052c0b = add i32 %v3_8052bf0, 4
  %v2_8052c0b = inttoptr i32 %v1_8052c0b to i32*
  %v3_8052c0b = load i32, i32* %v2_8052c0b, align 4
  store i32 %v3_8052c0b, i32* %edx.global-to-local, align 4
  %v1_8052c0e = add i32 %v3_8052bf0, 12
  %v2_8052c0e = inttoptr i32 %v1_8052c0e to i32*
  %v3_8052c0e = load i32, i32* %v2_8052c0e, align 4
  store i32 %v3_8052c0e, i32* %eax.global-to-local, align 4
  %v1_8052c11 = and i32 %v3_8052c0b, -4
  store i32 %v1_8052c11, i32* @edx, align 4
  %v5_8052c16 = sub i32 %v1_8052c11, %v1_8052d08
  store i32 %v5_8052c16, i32* %esi.global-to-local, align 4
  store i32 %v3_8052c0e, i32* %v2_8052bf0, align 4
  %v0_8052c1d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052c1d = load i32, i32* %eax.global-to-local, align 4
  %v2_8052c1d = add i32 %v1_8052c1d, 8
  %v3_8052c1d = inttoptr i32 %v2_8052c1d to i32*
  store i32 %v0_8052c1d, i32* %v3_8052c1d, align 4
  %v0_8052c20 = load i32, i32* %esi.global-to-local, align 4
  %tmp127 = icmp ult i32 %v0_8052c20, 16
  br i1 %tmp127, label %dec_label_pc_8052c25, label %dec_label_pc_8052c2c

dec_label_pc_8052c25:                             ; preds = %dec_label_pc_8052c0b
  %v0_8052c25 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052c25 = load i32, i32* @edx, align 4
  %v2_8052c25 = add i32 %v0_8052c25, 4
  %v3_8052c25 = add i32 %v2_8052c25, %v1_8052c25
  %v4_8052c25 = inttoptr i32 %v3_8052c25 to i32*
  %v5_8052c25 = load i32, i32* %v4_8052c25, align 4
  %v6_8052c25 = or i32 %v5_8052c25, 1
  store i32 %v6_8052c25, i32* %v4_8052c25, align 4
  br label %dec_label_pc_8052c6b

dec_label_pc_8052c2c:                             ; preds = %dec_label_pc_8052c0b
  store i32 %v1_8052d08, i32* %eax.global-to-local, align 4
  %v0_8052c35 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8052c35 = add i32 %v0_8052c35, %v1_8052d08
  store i32 %v2_8052c35, i32* @edx, align 4
  %v1_8052c38 = load i32, i32* @ebp, align 4
  %v2_8052c38 = add i32 %v1_8052c38, 8
  %v3_8052c38 = inttoptr i32 %v2_8052c38 to i32*
  store i32 %v2_8052c35, i32* %v3_8052c38, align 4
  %v0_8052c3b = load i32, i32* @edx, align 4
  %v1_8052c3b = load i32, i32* @ebp, align 4
  %v2_8052c3b = add i32 %v1_8052c3b, 12
  %v3_8052c3b = inttoptr i32 %v2_8052c3b to i32*
  store i32 %v0_8052c3b, i32* %v3_8052c3b, align 4
  %v0_8052c3e = load i32, i32* @edx, align 4
  %v1_8052c3e = add i32 %v0_8052c3e, 8
  %v2_8052c3e = inttoptr i32 %v1_8052c3e to i32*
  store i32 ptrtoint (i32* @global_var_8056994.51 to i32), i32* %v2_8052c3e, align 4
  %v0_8052c45 = load i32, i32* @edx, align 4
  %v1_8052c45 = add i32 %v0_8052c45, 12
  %v2_8052c45 = inttoptr i32 %v1_8052c45 to i32*
  store i32 ptrtoint (i32* @global_var_8056994.51 to i32), i32* %v2_8052c45, align 4
  br i1 %v6_80529c1, label %dec_label_pc_8052c54, label %dec_label_pc_8052c4e

dec_label_pc_8052c4e:                             ; preds = %dec_label_pc_8052c2c
  %v0_8052c4e = load i32, i32* @edx, align 4
  store i32 %v0_8052c4e, i32* @global_var_8056990.50, align 16
  br label %dec_label_pc_8052c54

dec_label_pc_8052c54:                             ; preds = %dec_label_pc_8052c2c, %dec_label_pc_8052c4e
  %v4_8052c54 = or i32 %v1_8052d08, 1
  %v0_8052c59 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v4_8052c54, i32* %ebx.global-to-local, align 4
  %v1_8052c5f = or i32 %v0_8052c59, 1
  store i32 %v1_8052c5f, i32* %eax.global-to-local, align 4
  %v1_8052c62 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8052c62 = add i32 %v1_8052c62, 4
  %v3_8052c62 = inttoptr i32 %v2_8052c62 to i32*
  store i32 %v4_8052c54, i32* %v3_8052c62, align 4
  %v0_8052c65 = load i32, i32* %esi.global-to-local, align 4
  %v1_8052c65 = load i32, i32* @edx, align 4
  %v3_8052c65 = add i32 %v1_8052c65, %v0_8052c65
  %v4_8052c65 = inttoptr i32 %v3_8052c65 to i32*
  store i32 %v0_8052c65, i32* %v4_8052c65, align 4
  %v0_8052c68 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052c68 = load i32, i32* @edx, align 4
  %v2_8052c68 = add i32 %v1_8052c68, 4
  %v3_8052c68 = inttoptr i32 %v2_8052c68 to i32*
  store i32 %v0_8052c68, i32* %v3_8052c68, align 4
  br label %dec_label_pc_8052c6b

dec_label_pc_8052c6b:                             ; preds = %dec_label_pc_8052c25, %dec_label_pc_8052c54
  %v0_8052c6b = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052c6b = add i32 %v0_8052c6b, 8
  store i32 %v1_8052c6b, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805306d

dec_label_pc_8052c73.loopexit:                    ; preds = %dec_label_pc_8052bc0
  br label %dec_label_pc_8052c73

dec_label_pc_8052c73:                             ; preds = %dec_label_pc_8052c73.loopexit, %dec_label_pc_805297b, %dec_label_pc_8052983
  %v0_8052c73 = load i32, i32* @global_var_805698c.49, align 4
  store i32 %v0_8052c73, i32* @ebx, align 4
  %v1_8052c7d = add i32 %v1_8052d08, 16
  store i32 %v1_8052c7d, i32* @esi, align 4
  %v1_8052c80 = add i32 %v0_8052c73, 4
  %v2_8052c80 = inttoptr i32 %v1_8052c80 to i32*
  %v3_8052c80 = load i32, i32* %v2_8052c80, align 4
  %v1_8052c87 = and i32 %v3_8052c80, -4
  store i32 %v1_8052c87, i32* %ecx.global-to-local, align 4
  %v7_8052c8a = icmp ult i32 %v1_8052c87, %v1_8052c7d
  br i1 %v7_8052c8a, label %dec_label_pc_8052caa, label %dec_label_pc_8052c8e

dec_label_pc_8052c8e:                             ; preds = %dec_label_pc_8052c73
  %v2_8052c92 = add i32 %v0_8052c73, %v1_8052d08
  store i32 %v2_8052c92, i32* @edx, align 4
  %v1_8052c95 = or i32 %v1_8052d08, 1
  store i32 %v1_8052c95, i32* %eax.global-to-local, align 4
  store i32 %v2_8052c92, i32* @global_var_805698c.49, align 4
  store i32 %v1_8052c95, i32* %v2_8052c80, align 4
  %v0_8052ca1 = load i32, i32* %ecx.global-to-local, align 4
  %v5_8052ca1 = sub i32 %v0_8052ca1, %v1_8052d08
  store i32 %v5_8052ca1, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8052ffd

dec_label_pc_8052caa:                             ; preds = %dec_label_pc_8052c73
  %v0_8052caa = load i32, i32* @global_var_8056cbc.54, align 4
  store i32 %v0_8052caa, i32* %edx.global-to-local, align 4
  %v0_8052cb0 = load i8, i8* @global_var_8056960.48, align 32
  %v1_8052cb0 = and i8 %v0_8052cb0, 2
  %v2_8052cb0 = icmp eq i8 %v1_8052cb0, 0
  br i1 %v2_8052cb0, label %dec_label_pc_8052cde, label %dec_label_pc_8052cb9

dec_label_pc_8052cb9:                             ; preds = %dec_label_pc_8052caa
  store i32 ptrtoint (i8* @global_var_8056960.48 to i32), i32* %stack_var_-92, align 4
  %v2_8052cc1 = call i32 @function_8053531(i32* bitcast (i8* @global_var_8056960.48 to i32*))
  store i32 ptrtoint (i8* @global_var_8056960.48 to i32), i32* @ebx, align 4
  %v1_8052ccb = add i32 %v1_8052d08, -7
  store i32 %v1_8052ccb, i32* %eax.global-to-local, align 4
  store i32 %v1_8052ccb, i32* %stack_var_-92, align 4
  %v1_8052ccf = call i32 @function_8052914(i32 %v1_8052ccb)
  store i32 %v1_8052ccf, i32* %eax.global-to-local, align 4
  store i32 %v1_8052ccf, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805306d

dec_label_pc_8052cde:                             ; preds = %dec_label_pc_8052caa
  %v1_8052cde = add i32 %v0_8052caa, -1
  store i32 %v1_8052cde, i32* @ecx, align 4
  store i32 %v1_8052d08, i32* @ebx, align 4
  %v1_8052ce9 = load i32, i32* @global_var_8056cac.55, align 4
  %v7_8052ce9 = icmp ult i32 %v1_8052d08, %v1_8052ce9
  br i1 %v7_8052ce9, label %dec_label_pc_8052dab, label %dec_label_pc_8052cf5

dec_label_pc_8052cf5:                             ; preds = %dec_label_pc_8052cde
  %v0_8052cf5 = load i32, i32* @global_var_8056cb0.56, align 16
  store i32 %v0_8052cf5, i32* %eax.global-to-local, align 4
  %v1_8052cfa = load i32, i32* @global_var_8056cb4.57, align 4
  %v5_8052d00 = icmp slt i32 %v0_8052cf5, %v1_8052cfa
  br i1 %v5_8052d00, label %dec_label_pc_8052d06, label %dec_label_pc_8052dab

dec_label_pc_8052d06:                             ; preds = %dec_label_pc_8052cf5
  %v2_8052d08 = add i32 %v1_8052d08, 10
  %v3_8052d08 = add i32 %v2_8052d08, %v0_8052caa
  %v1_8052d0c = sub i32 0, %v0_8052caa
  store i32 %v1_8052d0c, i32* %eax.global-to-local, align 4
  %v2_8052d0e = and i32 %v3_8052d08, %v1_8052d0c
  store i32 %v2_8052d0e, i32* @ebx, align 4
  %tmp128 = icmp ugt i32 %v2_8052d0e, %v1_8052d08
  br i1 %tmp128, label %dec_label_pc_8052d1a, label %dec_label_pc_8052dab

dec_label_pc_8052d1a:                             ; preds = %dec_label_pc_8052d06
  store i32 0, i32* %stack_var_-92, align 4
  %v8_8052d27 = call i32 @function_8054158(i32 0, i32 %v2_8052d0e, i32 3, i32 34, i32 0, i32 0, i32 %v1_8052cde, i32 %v1_8052cde)
  store i32 %v8_8052d27, i32* %eax.global-to-local, align 4
  store i32 %v8_8052d27, i32* @edx, align 4
  %v10_8052d31 = icmp eq i32 %v8_8052d27, -1
  br i1 %v10_8052d31, label %dec_label_pc_8052d1a.dec_label_pc_8052dab_crit_edge, label %dec_label_pc_8052d36

dec_label_pc_8052d1a.dec_label_pc_8052dab_crit_edge: ; preds = %dec_label_pc_8052d1a
  %v0_8052dab.pre = load i32, i32* @global_var_805698c.49, align 4
  br label %dec_label_pc_8052dab

dec_label_pc_8052d36:                             ; preds = %dec_label_pc_8052d1a
  %v1_8052d38 = urem i32 %v8_8052d27, 8
  %v2_8052d38 = icmp eq i32 %v1_8052d38, 0
  store i32 %v1_8052d38, i32* %ecx.global-to-local, align 4
  br i1 %v2_8052d38, label %dec_label_pc_8052d50, label %dec_label_pc_8052d3d

dec_label_pc_8052d3d:                             ; preds = %dec_label_pc_8052d36
  %v0_8052d42 = load i32, i32* @ebx, align 4
  %v2_8052d44 = sub nsw i32 8, %v1_8052d38
  store i32 %v2_8052d44, i32* %eax.global-to-local, align 4
  %v2_8052d46 = add i32 %v2_8052d44, %v8_8052d27
  store i32 %v2_8052d46, i32* @edx, align 4
  %v2_8052d48 = sub i32 %v0_8052d42, %v2_8052d44
  store i32 %v2_8052d48, i32* %esi.global-to-local, align 4
  %v2_8052d4a = inttoptr i32 %v2_8052d46 to i32*
  store i32 %v2_8052d44, i32* %v2_8052d4a, align 4
  br label %dec_label_pc_8052d58

dec_label_pc_8052d50:                             ; preds = %dec_label_pc_8052d36
  %v1_8052d50 = inttoptr i32 %v8_8052d27 to i32*
  store i32 0, i32* %v1_8052d50, align 4
  br label %dec_label_pc_8052d58

dec_label_pc_8052d58:                             ; preds = %dec_label_pc_8052d3d, %dec_label_pc_8052d50
  %storemerge.in = phi i32* [ @esi, %dec_label_pc_8052d3d ], [ @ebx, %dec_label_pc_8052d50 ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v1_8052d58 = or i32 %storemerge, 2
  %v1_8052d5b = load i32, i32* @edx, align 4
  %v2_8052d5b = add i32 %v1_8052d5b, 4
  %v3_8052d5b = inttoptr i32 %v2_8052d5b to i32*
  store i32 %v1_8052d58, i32* %v3_8052d5b, align 4
  %v0_8052d5e = load i32, i32* @global_var_8056cb0.56, align 16
  %v1_8052d63 = add i32 %v0_8052d5e, 1
  store i32 %v1_8052d63, i32* %eax.global-to-local, align 4
  store i32 %v1_8052d63, i32* @global_var_8056cb0.56, align 16
  %v1_8052d69 = load i32, i32* @global_var_8056cb8.58, align 8
  %v7_8052d6f = icmp sgt i32 %v1_8052d63, %v1_8052d69
  br i1 %v7_8052d6f, label %dec_label_pc_8052d71, label %dec_label_pc_8052d76

dec_label_pc_8052d71:                             ; preds = %dec_label_pc_8052d58
  store i32 %v1_8052d63, i32* @global_var_8056cb8.58, align 8
  br label %dec_label_pc_8052d76

dec_label_pc_8052d76:                             ; preds = %dec_label_pc_8052d58, %dec_label_pc_8052d71
  %v0_8052d76 = load i32, i32* @global_var_8056cc4.59, align 4
  %v1_8052d7b = load i32, i32* @ebx, align 4
  %v2_8052d7b = add i32 %v1_8052d7b, %v0_8052d76
  store i32 %v2_8052d7b, i32* %eax.global-to-local, align 4
  store i32 %v2_8052d7b, i32* @global_var_8056cc4.59, align 4
  %v1_8052d82 = load i32, i32* @global_var_8056cd0.60, align 16
  %tmp129 = icmp ugt i32 %v2_8052d7b, %v1_8052d82
  br i1 %tmp129, label %dec_label_pc_8052d8a, label %dec_label_pc_8052d8f

dec_label_pc_8052d8a:                             ; preds = %dec_label_pc_8052d76
  store i32 %v2_8052d7b, i32* @global_var_8056cd0.60, align 16
  br label %dec_label_pc_8052d8f

dec_label_pc_8052d8f:                             ; preds = %dec_label_pc_8052d76, %dec_label_pc_8052d8a
  %v1_8052d8f = load i32, i32* @global_var_8056cc8.61, align 8
  %v2_8052d8f = add i32 %v1_8052d8f, %v2_8052d7b
  store i32 %v2_8052d8f, i32* %eax.global-to-local, align 4
  %v1_8052d95 = load i32, i32* @global_var_8056cd4.62, align 4
  %tmp130 = icmp ugt i32 %v2_8052d8f, %v1_8052d95
  br i1 %tmp130, label %dec_label_pc_8052da1, label %dec_label_pc_80529f2

dec_label_pc_8052da1:                             ; preds = %dec_label_pc_8052d8f
  store i32 %v2_8052d8f, i32* @global_var_8056cd4.62, align 4
  br label %dec_label_pc_80529f2

dec_label_pc_8052dab:                             ; preds = %dec_label_pc_8052d06, %dec_label_pc_8052d1a.dec_label_pc_8052dab_crit_edge, %dec_label_pc_8052cf5, %dec_label_pc_8052cde
  %v0_8052dab = phi i32 [ %v0_8052dab.pre, %dec_label_pc_8052d1a.dec_label_pc_8052dab_crit_edge ], [ %v0_8052c73, %dec_label_pc_8052cf5 ], [ %v0_8052c73, %dec_label_pc_8052d06 ], [ %v0_8052c73, %dec_label_pc_8052cde ]
  store i32 %v0_8052dab, i32* %eax.global-to-local, align 4
  %v1_8052db4 = add i32 %v0_8052dab, 4
  %v2_8052db4 = inttoptr i32 %v1_8052db4 to i32*
  %v3_8052db4 = load i32, i32* %v2_8052db4, align 4
  %v1_8052dbe = and i32 %v3_8052db4, -4
  %v2_8052dbe = icmp eq i32 %v1_8052dbe, 0
  store i32 %v1_8052dbe, i32* @ebp, align 4
  %v1_8052dc1 = load i32, i32* @global_var_8056ca8.63, align 8
  %v2_8052dc1 = add i32 %v1_8052dc1, %v1_8052c7d
  store i32 %v2_8052dc1, i32* %eax.global-to-local, align 4
  %v0_8052dc7 = load i8, i8* @global_var_8056cc0.64, align 64
  %v1_8052dc7 = urem i8 %v0_8052dc7, 2
  %v2_8052dc7 = icmp eq i8 %v1_8052dc7, 0
  br i1 %v2_8052dc7, label %dec_label_pc_8052dd2, label %dec_label_pc_8052dd0

dec_label_pc_8052dd0:                             ; preds = %dec_label_pc_8052dab
  %v2_8052dd0 = sub i32 %v2_8052dc1, %v1_8052dbe
  store i32 %v2_8052dd0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052dd2

dec_label_pc_8052dd2:                             ; preds = %dec_label_pc_8052dab, %dec_label_pc_8052dd0
  %v0_8052dd6 = phi i32 [ %v2_8052dc1, %dec_label_pc_8052dab ], [ %v2_8052dd0, %dec_label_pc_8052dd0 ]
  %v5_8052dd6 = add i32 %v0_8052dd6, %v1_8052cde
  store i32 %v5_8052dd6, i32* %eax.global-to-local, align 4
  %v1_8052dda = sub i32 0, %v0_8052caa
  store i32 %v1_8052dda, i32* @edx, align 4
  %v2_8052de2 = and i32 %v5_8052dd6, %v1_8052dda
  store i32 %v2_8052de2, i32* @esi, align 4
  %tmp91 = icmp slt i32 %v2_8052de2, 1
  br i1 %tmp91, label %dec_label_pc_8052dfc, label %dec_label_pc_8052de6

dec_label_pc_8052de6:                             ; preds = %dec_label_pc_8052dd2
  store i32 %v2_8052de2, i32* %stack_var_-92, align 4
  %v1_8052dea = call i32 @function_8054609(i32 %v2_8052de2)
  store i32 %v1_8052dea, i32* %eax.global-to-local, align 4
  store i32 -1, i32* @edx, align 4
  store i32 %v1_8052dea, i32* @ebx, align 4
  %v10_8052df7 = icmp eq i32 %v1_8052dea, -1
  %v1_8052dfa = icmp eq i1 %v10_8052df7, false
  br i1 %v1_8052dfa, label %dec_label_pc_8052e52.dec_label_pc_8052e5b_crit_edge, label %dec_label_pc_8052de6.dec_label_pc_8052dfc_crit_edge

dec_label_pc_8052de6.dec_label_pc_8052dfc_crit_edge: ; preds = %dec_label_pc_8052de6
  %v0_8052dfc.pre = load i8, i8* @global_var_8056cc0.64, align 64
  br label %dec_label_pc_8052dfc

dec_label_pc_8052dfc:                             ; preds = %dec_label_pc_8052de6.dec_label_pc_8052dfc_crit_edge, %dec_label_pc_8052dd2
  %v0_8052e28 = phi i32 [ -1, %dec_label_pc_8052de6.dec_label_pc_8052dfc_crit_edge ], [ %v1_8052dda, %dec_label_pc_8052dd2 ]
  %v0_8052dfc = phi i8 [ %v0_8052dfc.pre, %dec_label_pc_8052de6.dec_label_pc_8052dfc_crit_edge ], [ %v0_8052dc7, %dec_label_pc_8052dd2 ]
  %v1_8052dfc = urem i8 %v0_8052dfc, 2
  %v2_8052dfc = icmp eq i8 %v1_8052dfc, 0
  br i1 %v2_8052dfc, label %dec_label_pc_8052dfc.dec_label_pc_8052e11_crit_edge, label %dec_label_pc_8052e05

dec_label_pc_8052dfc.dec_label_pc_8052e11_crit_edge: ; preds = %dec_label_pc_8052dfc
  %v0_8052e11.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8052e11

dec_label_pc_8052e05:                             ; preds = %dec_label_pc_8052dfc
  %v2_8052e09 = add i32 %v1_8052dbe, %v1_8052cde
  store i32 %v2_8052e09, i32* %eax.global-to-local, align 4
  %v0_8052e0b = load i32, i32* @esi, align 4
  %v2_8052e0b = add i32 %v0_8052e0b, %v2_8052e09
  %v5_8052e0d = and i32 %v2_8052e0b, %v1_8052dda
  store i32 %v5_8052e0d, i32* @esi, align 4
  br label %dec_label_pc_8052e11

dec_label_pc_8052e11:                             ; preds = %dec_label_pc_8052dfc.dec_label_pc_8052e11_crit_edge, %dec_label_pc_8052e05
  %v0_8052e11 = phi i32 [ %v0_8052e11.pre, %dec_label_pc_8052dfc.dec_label_pc_8052e11_crit_edge ], [ %v5_8052e0d, %dec_label_pc_8052e05 ]
  %tmp131 = icmp ult i32 %v0_8052e11, 1048576
  br i1 %tmp131, label %dec_label_pc_8052e19, label %dec_label_pc_8052e1e

dec_label_pc_8052e19:                             ; preds = %dec_label_pc_8052e11
  store i32 1048576, i32* @esi, align 4
  br label %dec_label_pc_8052e1e

dec_label_pc_8052e1e:                             ; preds = %dec_label_pc_8052e11, %dec_label_pc_8052e19
  %v0_8052e32 = phi i32 [ %v0_8052e11, %dec_label_pc_8052e11 ], [ 1048576, %dec_label_pc_8052e19 ]
  %tmp132 = icmp ugt i32 %v0_8052e32, %v1_8052d08
  br i1 %tmp132, label %dec_label_pc_8052e28, label %dec_label_pc_8053060

dec_label_pc_8052e28:                             ; preds = %dec_label_pc_8052e1e
  store i32 0, i32* %stack_var_-92, align 4
  %v8_8052e35 = call i32 @function_8054158(i32 0, i32 %v0_8052e32, i32 3, i32 34, i32 0, i32 0, i32 %v0_8052e28, i32 %v0_8052e28)
  store i32 %v8_8052e35, i32* %eax.global-to-local, align 4
  store i32 %v8_8052e35, i32* @ebx, align 4
  %v10_8052e3f = icmp eq i32 %v8_8052e35, -1
  br i1 %v10_8052e3f, label %dec_label_pc_8053060, label %dec_label_pc_8052e52.thread

dec_label_pc_8052e52.thread:                      ; preds = %dec_label_pc_8052e28
  %v0_8052e48 = load i8, i8* @global_var_8056cc0.64, align 1
  %v2_8052e48 = and i8 %v0_8052e48, -2
  store i8 %v2_8052e48, i8* @global_var_8056cc0.64, align 64
  %v1_8052e4f = load i32, i32* @esi, align 4
  %v2_8052e4f = add i32 %v1_8052e4f, %v8_8052e35
  store i32 %v2_8052e4f, i32* @edx, align 4
  br label %dec_label_pc_8052e5b

dec_label_pc_8052e52.dec_label_pc_8052e5b_crit_edge: ; preds = %dec_label_pc_8052de6
  %v1_8052e5f.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8052e5b

dec_label_pc_8052e5b:                             ; preds = %dec_label_pc_8052e52.dec_label_pc_8052e5b_crit_edge, %dec_label_pc_8052e52.thread
  %v1_8052e5f = phi i32 [ %v1_8052e4f, %dec_label_pc_8052e52.thread ], [ %v1_8052e5f.pre, %dec_label_pc_8052e52.dec_label_pc_8052e5b_crit_edge ]
  %v0_8052f2794 = phi i32 [ %v8_8052e35, %dec_label_pc_8052e52.thread ], [ %v1_8052dea, %dec_label_pc_8052e52.dec_label_pc_8052e5b_crit_edge ]
  %v0_8052f1993 = phi i32 [ %v2_8052e4f, %dec_label_pc_8052e52.thread ], [ -1, %dec_label_pc_8052e52.dec_label_pc_8052e5b_crit_edge ]
  %v0_8052e5f = load i32, i32* @global_var_8056cc8.61, align 8
  %v2_8052e5f = add i32 %v1_8052e5f, %v0_8052e5f
  store i32 %v2_8052e5f, i32* @global_var_8056cc8.61, align 8
  %v2_8052e65 = add i32 %v1_8052dbe, %v0_8052dab
  store i32 %v2_8052e65, i32* %ecx.global-to-local, align 4
  %v2_8052e67 = sub i32 %v0_8052f2794, %v2_8052e65
  %v7_8052e67 = icmp ult i32 %v0_8052f2794, %v2_8052e65
  %v12_8052e67 = icmp eq i32 %v2_8052e67, 0
  %v1_8052e69 = icmp eq i1 %v12_8052e67, false
  br i1 %v1_8052e69, label %dec_label_pc_8052e82, label %dec_label_pc_8052e6b

dec_label_pc_8052e6b:                             ; preds = %dec_label_pc_8052e5b
  %v10_8052e6b = icmp eq i32 %v0_8052f1993, -1
  %v1_8052e6e = icmp eq i1 %v10_8052e6b, false
  br i1 %v1_8052e6e, label %dec_label_pc_8052e82, label %dec_label_pc_8052e70

dec_label_pc_8052e70:                             ; preds = %dec_label_pc_8052e6b
  %v2_8052e70 = add i32 %v1_8052e5f, %v1_8052dbe
  store i32 %v0_8052dab, i32* %ecx.global-to-local, align 4
  %v1_8052e77 = or i32 %v2_8052e70, 1
  store i32 %v1_8052e77, i32* %eax.global-to-local, align 4
  store i32 %v1_8052e77, i32* %v2_8052db4, align 4
  br label %dec_label_pc_8052faf

dec_label_pc_8052e82:                             ; preds = %dec_label_pc_8052e6b, %dec_label_pc_8052e5b
  %v0_8052e82 = load i8, i8* @global_var_8056cc0.64, align 1
  %v1_8052e82 = sext i8 %v0_8052e82 to i32
  store i32 %v1_8052e82, i32* %eax.global-to-local, align 4
  %v2_8052e87 = urem i8 %v0_8052e82, 2
  %v3_8052e87 = icmp eq i8 %v2_8052e87, 0
  br i1 %v3_8052e87, label %dec_label_pc_8052e9b, label %dec_label_pc_8052e8b

dec_label_pc_8052e8b:                             ; preds = %dec_label_pc_8052e82
  br i1 %v2_8052dbe, label %dec_label_pc_8052e9b, label %dec_label_pc_8052e8f

dec_label_pc_8052e8f:                             ; preds = %dec_label_pc_8052e8b
  %v1_8052e91 = icmp eq i1 %v7_8052e67, false
  br i1 %v1_8052e91, label %dec_label_pc_8052e9b, label %dec_label_pc_8052e93

dec_label_pc_8052e93:                             ; preds = %dec_label_pc_8052e8f
  %v1_8052e93 = and i32 %v1_8052e82, -2
  %v4_8052e93 = trunc i32 %v1_8052e93 to i8
  store i32 %v1_8052e93, i32* %eax.global-to-local, align 4
  store i8 %v4_8052e93, i8* @global_var_8056cc0.64, align 64
  br label %dec_label_pc_8052e9b

dec_label_pc_8052e9b:                             ; preds = %dec_label_pc_8052e8f, %dec_label_pc_8052e8b, %dec_label_pc_8052e82, %dec_label_pc_8052e93
  %v0_8052e9b = phi i8 [ %v0_8052e82, %dec_label_pc_8052e8f ], [ %v0_8052e82, %dec_label_pc_8052e8b ], [ %v0_8052e82, %dec_label_pc_8052e82 ], [ %v4_8052e93, %dec_label_pc_8052e93 ]
  %v1_8052e9b = urem i8 %v0_8052e9b, 2
  %v2_8052e9b = icmp eq i8 %v1_8052e9b, 0
  br i1 %v2_8052e9b, label %dec_label_pc_8052f19, label %dec_label_pc_8052ea4

dec_label_pc_8052ea4:                             ; preds = %dec_label_pc_8052e9b
  br i1 %v2_8052dbe, label %dec_label_pc_8052eb2, label %dec_label_pc_8052ea8

dec_label_pc_8052ea8:                             ; preds = %dec_label_pc_8052ea4
  store i32 %v2_8052e67, i32* %eax.global-to-local, align 4
  %v2_8052eac = add i32 %v2_8052e5f, %v2_8052e67
  store i32 %v2_8052eac, i32* @global_var_8056cc8.61, align 8
  br label %dec_label_pc_8052eb2

dec_label_pc_8052eb2:                             ; preds = %dec_label_pc_8052ea4, %dec_label_pc_8052ea8
  %v1_8052eb4 = urem i32 %v0_8052f2794, 8
  %v2_8052eb4 = icmp eq i32 %v1_8052eb4, 0
  store i32 %v1_8052eb4, i32* %edx.global-to-local, align 4
  %v1_8052eb7 = icmp eq i1 %v2_8052eb4, false
  br i1 %v1_8052eb7, label %dec_label_pc_8052ebf, label %dec_label_pc_8052eb9

dec_label_pc_8052eb9:                             ; preds = %dec_label_pc_8052eb2
  store i32 %v0_8052f2794, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052ec9

dec_label_pc_8052ebf:                             ; preds = %dec_label_pc_8052eb2
  %v2_8052ec4 = sub nsw i32 8, %v1_8052eb4
  store i32 %v2_8052ec4, i32* %eax.global-to-local, align 4
  %v2_8052ec6 = add i32 %v2_8052ec4, %v0_8052f2794
  store i32 %v2_8052ec6, i32* @edi, align 4
  br label %dec_label_pc_8052ec9

dec_label_pc_8052ec9:                             ; preds = %dec_label_pc_8052eb9, %dec_label_pc_8052ebf
  %v0_8052ecc = phi i32 [ 0, %dec_label_pc_8052eb9 ], [ %v2_8052ec4, %dec_label_pc_8052ebf ]
  %v2_8052ec9 = add i32 %v1_8052e5f, %v0_8052f2794
  %v2_8052ecc = add i32 %v0_8052ecc, %v1_8052dbe
  store i32 %v2_8052ecc, i32* %ecx.global-to-local, align 4
  %v2_8052ed5 = add i32 %v2_8052ecc, %v2_8052ec9
  store i32 %v2_8052ed5, i32* %edx.global-to-local, align 4
  %v2_8052edb = add i32 %v2_8052ed5, %v1_8052cde
  %v5_8052ede = and i32 %v2_8052edb, %v1_8052dda
  %v2_8052ee5 = sub i32 %v5_8052ede, %v2_8052ed5
  store i32 %v2_8052ee5, i32* %eax.global-to-local, align 4
  %v2_8052ee7 = add i32 %v2_8052ee5, %v2_8052ecc
  store i32 %v2_8052ee7, i32* @esi, align 4
  store i32 %v2_8052ee7, i32* %stack_var_-92, align 4
  %v1_8052eeb = call i32 @function_8054609(i32 %v2_8052ee7)
  store i32 %v1_8052eeb, i32* %eax.global-to-local, align 4
  store i32 %v1_8052eeb, i32* @edx, align 4
  %v10_8052ef5 = icmp eq i32 %v1_8052eeb, -1
  %v1_8052ef8 = icmp eq i1 %v10_8052ef5, false
  br i1 %v1_8052ef8, label %dec_label_pc_8052f08, label %dec_label_pc_8052efa

dec_label_pc_8052efa:                             ; preds = %dec_label_pc_8052ec9
  store i32 0, i32* %stack_var_-92, align 4
  %v1_8052eff = call i32 @function_8054609(i32 0)
  store i32 %v1_8052eff, i32* %eax.global-to-local, align 4
  store i32 %v1_8052eff, i32* @edx, align 4
  br label %dec_label_pc_8052f3c

dec_label_pc_8052f08:                             ; preds = %dec_label_pc_8052ec9
  %v1_8052f08 = load i32, i32* @ebx, align 4
  %v7_8052f08 = icmp ult i32 %v1_8052eeb, %v1_8052f08
  %v1_8052f0a = icmp eq i1 %v7_8052f08, false
  br i1 %v1_8052f0a, label %dec_label_pc_8052f41, label %dec_label_pc_8052f0c

dec_label_pc_8052f0c:                             ; preds = %dec_label_pc_8052f08
  %v0_8052f0c = load i8, i8* @global_var_8056cc0.64, align 1
  %v2_8052f0c = and i8 %v0_8052f0c, -2
  store i8 %v2_8052f0c, i8* @global_var_8056cc0.64, align 64
  store i32 %v2_8052ec9, i32* @edx, align 4
  br label %dec_label_pc_8052f20

dec_label_pc_8052f19:                             ; preds = %dec_label_pc_8052e9b
  %v10_8052f19 = icmp eq i32 %v0_8052f1993, -1
  br i1 %v10_8052f19, label %dec_label_pc_8052f24, label %dec_label_pc_8052f1e

dec_label_pc_8052f1e:                             ; preds = %dec_label_pc_8052f19
  store i32 %v0_8052f2794, i32* @edi, align 4
  br label %dec_label_pc_8052f20

dec_label_pc_8052f20:                             ; preds = %dec_label_pc_8052f0c, %dec_label_pc_8052f1e
  %v0_8052f4158 = phi i32 [ %v2_8052ec9, %dec_label_pc_8052f0c ], [ %v0_8052f1993, %dec_label_pc_8052f1e ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8052f41

dec_label_pc_8052f24:                             ; preds = %dec_label_pc_8052f19
  store i32 %v0_8052f2794, i32* @edi, align 4
  store i32 0, i32* %stack_var_-92, align 4
  %v1_8052f2b = call i32 @function_8054609(i32 0)
  store i32 %v1_8052f2b, i32* @edx, align 4
  %v1_8052f32 = load i32, i32* @ebx, align 4
  %v2_8052f32 = sub i32 %v1_8052f2b, %v1_8052f32
  %v1_8052f34 = load i32, i32* @esi, align 4
  %v2_8052f34 = sub i32 %v2_8052f32, %v1_8052f34
  store i32 %v2_8052f34, i32* %eax.global-to-local, align 4
  %v0_8052f36 = load i32, i32* @global_var_8056cc8.61, align 8
  %v2_8052f36 = add i32 %v0_8052f36, %v2_8052f34
  store i32 %v2_8052f36, i32* @global_var_8056cc8.61, align 8
  br label %dec_label_pc_8052f3c

dec_label_pc_8052f3c:                             ; preds = %dec_label_pc_8052efa, %dec_label_pc_8052f24
  %v0_8052f4157 = phi i32 [ %v1_8052eff, %dec_label_pc_8052efa ], [ %v1_8052f2b, %dec_label_pc_8052f24 ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8052f41

dec_label_pc_8052f41:                             ; preds = %dec_label_pc_8052f08, %dec_label_pc_8052f20, %dec_label_pc_8052f3c
  %v0_8052f46 = phi i32 [ %v1_8052eeb, %dec_label_pc_8052f08 ], [ %v0_8052f4158, %dec_label_pc_8052f20 ], [ %v0_8052f4157, %dec_label_pc_8052f3c ]
  %v10_8052f41 = icmp eq i32 %v0_8052f46, -1
  br i1 %v10_8052f41, label %dec_label_pc_8052faf, label %dec_label_pc_8052f46

dec_label_pc_8052f46:                             ; preds = %dec_label_pc_8052f41
  %v1_8052f46 = load i32, i32* @edi, align 4
  %v2_8052f46 = sub i32 %v0_8052f46, %v1_8052f46
  store i32 %v2_8052f46, i32* @edx, align 4
  store i32 %v1_8052f46, i32* @global_var_805698c.49, align 4
  %v1_8052f4e = load i32, i32* @esi, align 4
  %v2_8052f4e = add i32 %v1_8052f4e, %v2_8052f46
  %v1_8052f51 = or i32 %v2_8052f4e, 1
  store i32 %v1_8052f51, i32* %eax.global-to-local, align 4
  %v2_8052f54 = add i32 %v1_8052f46, 4
  %v3_8052f54 = inttoptr i32 %v2_8052f54 to i32*
  store i32 %v1_8052f51, i32* %v3_8052f54, align 4
  %v0_8052f57 = load i32, i32* @global_var_8056cc8.61, align 8
  %v1_8052f57 = load i32, i32* @esi, align 4
  %v2_8052f57 = add i32 %v1_8052f57, %v0_8052f57
  store i32 %v2_8052f57, i32* @global_var_8056cc8.61, align 8
  br i1 %v2_8052dbe, label %dec_label_pc_8052faf, label %dec_label_pc_8052f61

dec_label_pc_8052f61:                             ; preds = %dec_label_pc_8052f46
  %v1_8052f61 = add i32 %v1_8052dbe, -12
  store i32 %v0_8052dab, i32* %ecx.global-to-local, align 4
  %v1_8052f68 = and i32 %v1_8052f61, -8
  store i32 %v1_8052f68, i32* %eax.global-to-local, align 4
  %v1_8052f6d = or i32 %v1_8052f68, 1
  store i32 %v1_8052f6d, i32* @edx, align 4
  %v5_8052f70 = icmp ult i32 %v1_8052f68, 15
  store i32 %v1_8052f6d, i32* %v2_8052db4, align 4
  %v0_8052f76 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052f76 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052f76 = add i32 %v0_8052f76, 4
  %v3_8052f76 = add i32 %v2_8052f76, %v1_8052f76
  %v4_8052f76 = inttoptr i32 %v3_8052f76 to i32*
  store i32 5, i32* %v4_8052f76, align 4
  %v0_8052f7e = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052f7e = load i32, i32* %eax.global-to-local, align 4
  %v2_8052f7e = add i32 %v0_8052f7e, 8
  %v3_8052f7e = add i32 %v2_8052f7e, %v1_8052f7e
  %v4_8052f7e = inttoptr i32 %v3_8052f7e to i32*
  store i32 5, i32* %v4_8052f7e, align 4
  br i1 %v5_8052f70, label %dec_label_pc_8052faf, label %dec_label_pc_8052f88

dec_label_pc_8052f88:                             ; preds = %dec_label_pc_8052f61
  %v0_8052f8b = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052f8d = add i32 %v0_8052f8b, 8
  store i32 %v1_8052f8d, i32* %eax.global-to-local, align 4
  %v0_8052f90 = load i32, i32* @global_var_8056ca4.65, align 4
  store i32 %v0_8052f90, i32* @ebx, align 4
  store i32 %v1_8052f8d, i32* %stack_var_-92, align 4
  store i32 -1, i32* @global_var_8056ca4.65, align 4
  %v1_8052fa1 = call i32 @function_80536d9(i32 %v1_8052f8d)
  store i32 %v1_8052fa1, i32* %eax.global-to-local, align 4
  %v0_8052fa6 = load i32, i32* @ebx, align 4
  store i32 %v0_8052fa6, i32* @global_var_8056ca4.65, align 4
  br label %dec_label_pc_8052faf

dec_label_pc_8052faf:                             ; preds = %dec_label_pc_8052f61, %dec_label_pc_8052f46, %dec_label_pc_8052f41, %dec_label_pc_8052e70, %dec_label_pc_8052f88
  %v0_8052faf = load i32, i32* @global_var_8056cc8.61, align 8
  store i32 %v0_8052faf, i32* %eax.global-to-local, align 4
  %v1_8052fb4 = load i32, i32* @global_var_8056ccc.66, align 4
  %tmp133 = icmp ugt i32 %v0_8052faf, %v1_8052fb4
  br i1 %tmp133, label %dec_label_pc_8052fbc, label %dec_label_pc_8052fc1

dec_label_pc_8052fbc:                             ; preds = %dec_label_pc_8052faf
  store i32 %v0_8052faf, i32* @global_var_8056ccc.66, align 4
  br label %dec_label_pc_8052fc1

dec_label_pc_8052fc1:                             ; preds = %dec_label_pc_8052faf, %dec_label_pc_8052fbc
  %v1_8052fc1 = load i32, i32* @global_var_8056cc4.59, align 4
  %v2_8052fc1 = add i32 %v1_8052fc1, %v0_8052faf
  store i32 %v2_8052fc1, i32* %eax.global-to-local, align 4
  %v1_8052fc7 = load i32, i32* @global_var_8056cd4.62, align 4
  %tmp134 = icmp ugt i32 %v2_8052fc1, %v1_8052fc7
  br i1 %tmp134, label %dec_label_pc_8052fcf, label %dec_label_pc_8052fd4

dec_label_pc_8052fcf:                             ; preds = %dec_label_pc_8052fc1
  store i32 %v2_8052fc1, i32* @global_var_8056cd4.62, align 4
  br label %dec_label_pc_8052fd4

dec_label_pc_8052fd4:                             ; preds = %dec_label_pc_8052fc1, %dec_label_pc_8052fcf
  %v0_8052fd4 = load i32, i32* @global_var_805698c.49, align 4
  store i32 %v0_8052fd4, i32* @ebx, align 4
  %v1_8052fda = add i32 %v0_8052fd4, 4
  %v2_8052fda = inttoptr i32 %v1_8052fda to i32*
  %v3_8052fda = load i32, i32* %v2_8052fda, align 4
  %v1_8052fdd = and i32 %v3_8052fda, -4
  store i32 %v1_8052fdd, i32* %ecx.global-to-local, align 4
  %v10_8052fe0 = icmp ult i32 %v1_8052fdd, %v1_8052c7d
  br i1 %v10_8052fe0, label %dec_label_pc_8053060, label %dec_label_pc_8052fe6

dec_label_pc_8052fe6:                             ; preds = %dec_label_pc_8052fd4
  store i32 %v1_8052d08, i32* %esi.global-to-local, align 4
  %v2_8052fec = sub i32 %v1_8052fdd, %v1_8052d08
  store i32 %v2_8052fec, i32* %ecx.global-to-local, align 4
  %v2_8052fee = add i32 %v0_8052fd4, %v1_8052d08
  store i32 %v2_8052fee, i32* @edx, align 4
  %v1_8052ff1 = or i32 %v1_8052d08, 1
  store i32 %v1_8052ff1, i32* %eax.global-to-local, align 4
  store i32 %v2_8052fee, i32* @global_var_805698c.49, align 4
  store i32 %v1_8052ff1, i32* %v2_8052fda, align 4
  %v0_8052ffd.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8052ffd

dec_label_pc_8052ffd:                             ; preds = %dec_label_pc_8052c8e, %dec_label_pc_8052fe6
  %v0_8052ffd = phi i32 [ %v5_8052ca1, %dec_label_pc_8052c8e ], [ %v0_8052ffd.pre, %dec_label_pc_8052fe6 ]
  %v1_8052ffd = or i32 %v0_8052ffd, 1
  store i32 %v1_8052ffd, i32* %ecx.global-to-local, align 4
  %v0_8053000 = load i32, i32* @ebx, align 4
  %v1_8053000 = add i32 %v0_8053000, 8
  store i32 %v1_8053000, i32* %ebx.global-to-local, align 4
  %v1_8053003 = load i32, i32* @edx, align 4
  %v2_8053003 = add i32 %v1_8053003, 4
  %v3_8053003 = inttoptr i32 %v2_8053003 to i32*
  store i32 %v1_8052ffd, i32* %v3_8053003, align 4
  br label %dec_label_pc_805306d

dec_label_pc_8053008:                             ; preds = %dec_label_pc_8052a48
  %v5_805300e = sub i32 %v1_8052a2b, %v1_8052d08
  store i32 %v5_805300e, i32* %eax.global-to-local, align 4
  %v2_8053012 = add i32 %v1_805301f, %v1_8052d08
  store i32 %v2_8053012, i32* @edx, align 4
  %v1_8053016 = or i32 %v1_8052d08, 1
  store i32 %v2_8053012, i32* @global_var_8056990.50, align 16
  store i32 %v1_8053016, i32* %v2_8052a25, align 4
  %v0_8053022 = load i32, i32* %eax.global-to-local, align 4
  %v0_8053024 = load i32, i32* @edx, align 4
  store i32 %v0_8053024, i32* @global_var_805699c.67, align 4
  %v1_805302a = or i32 %v0_8053022, 1
  store i32 %v1_805302a, i32* %ecx.global-to-local, align 4
  store i32 %v0_8053024, i32* @global_var_80569a0.52, align 32
  %v1_8053033 = add i32 %v0_8053024, 8
  %v2_8053033 = inttoptr i32 %v1_8053033 to i32*
  store i32 ptrtoint (i32* @global_var_8056994.51 to i32), i32* %v2_8053033, align 4
  %v0_805303a = load i32, i32* @edx, align 4
  %v1_805303a = add i32 %v0_805303a, 12
  %v2_805303a = inttoptr i32 %v1_805303a to i32*
  store i32 ptrtoint (i32* @global_var_8056994.51 to i32), i32* %v2_805303a, align 4
  %v0_8053041 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053041 = load i32, i32* @edx, align 4
  %v2_8053041 = add i32 %v1_8053041, 4
  %v3_8053041 = inttoptr i32 %v2_8053041 to i32*
  store i32 %v0_8053041, i32* %v3_8053041, align 4
  %v0_8053044 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053044 = load i32, i32* @edx, align 4
  %v3_8053044 = add i32 %v1_8053044, %v0_8053044
  %v4_8053044 = inttoptr i32 %v3_8053044 to i32*
  store i32 %v0_8053044, i32* %v4_8053044, align 4
  br label %dec_label_pc_8053052

dec_label_pc_8053049:                             ; preds = %dec_label_pc_8052a57
  store i32 %v1_8052d08, i32* %ebx.global-to-local, align 4
  %v0_805304d = load i32, i32* @ebp, align 4
  %v2_805304d = or i32 %v1_8052d08, 4
  %v3_805304d = add i32 %v0_805304d, %v2_805304d
  %v4_805304d = inttoptr i32 %v3_805304d to i32*
  %v5_805304d = load i32, i32* %v4_805304d, align 4
  %v6_805304d = or i32 %v5_805304d, 1
  store i32 %v6_805304d, i32* %v4_805304d, align 4
  br label %dec_label_pc_8053052

dec_label_pc_8053052:                             ; preds = %dec_label_pc_8053008, %dec_label_pc_8053049
  %v0_8053052 = load i32, i32* @ebp, align 4
  %v1_8053052 = add i32 %v0_8053052, 8
  store i32 %v1_8053052, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805306d

dec_label_pc_8053057:                             ; preds = %dec_label_pc_8052b47
  %v1_8053057 = load i32, i32* @ebx, align 4
  %v2_8053057 = add i32 %v0_8052b56, 4
  %v3_8053057 = add i32 %v2_8053057, %v1_8053057
  %v4_8053057 = inttoptr i32 %v3_8053057 to i32*
  %v5_8053057 = load i32, i32* %v4_8053057, align 4
  %v6_8053057 = or i32 %v5_8053057, 1
  store i32 %v6_8053057, i32* %v4_8053057, align 4
  br label %dec_label_pc_805305c

dec_label_pc_805305c:                             ; preds = %dec_label_pc_8052b5f, %dec_label_pc_8053057
  %v0_805305c = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_805305c, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805306d

dec_label_pc_8053060:                             ; preds = %dec_label_pc_8052e1e, %dec_label_pc_8052fd4, %dec_label_pc_8052e28
  %v0_8053060 = load i32, i32* %stack_var_-92, align 4
  %v1_8053060 = call i32 @function_80524b9(i32 %v0_8053060)
  store i32 %v1_8053060, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8053067 = inttoptr i32 %v1_8053060 to i32*
  store i32 12, i32* %v1_8053067, align 4
  br label %dec_label_pc_805306d

dec_label_pc_805306d:                             ; preds = %dec_label_pc_805305c, %dec_label_pc_8053052, %dec_label_pc_8052ffd, %dec_label_pc_8052cb9, %dec_label_pc_8052c6b, %dec_label_pc_80529f2, %dec_label_pc_8053060
  store i32 %v2_8052929, i32* @eax, align 4
  store i32 %v2_8052929, i32* %stack_var_-92, align 4
  %v2_8053076 = call i32 @function_8053e40(i32 %v2_8052929, i32 1)
  store i32 %v2_8053076, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805307e

dec_label_pc_805307e:                             ; preds = %dec_label_pc_8052947, %dec_label_pc_805306d
  %v0_8053081 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8053081, i32* %eax.global-to-local, align 4
  %v2_8053083 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8053083, i32* %ebx.global-to-local, align 4
  store i32 %v0_8052916, i32* @esi, align 4
  store i32 %v0_8052915, i32* @edi, align 4
  store i32 %v0_8052914, i32* @ebp, align 4
  ret i32 %v0_8053081

; uselistorder directives
  uselistorder i32 %v0_8053044, { 1, 0 }
  uselistorder i32 %v0_8053024, { 1, 0, 2 }
  uselistorder i32 %v2_8052fc1, { 1, 0, 2 }
  uselistorder i32 %v0_8052faf, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8052f46, { 1, 0 }
  uselistorder i32 %v2_8052f34, { 1, 0 }
  uselistorder i32 %v1_8052eeb, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_8052ed5, { 1, 0, 2 }
  uselistorder i32 %v2_8052ec9, { 1, 2, 0 }
  uselistorder i32 %v2_8052ec4, { 1, 0, 2 }
  uselistorder i32 %v1_8052eb4, { 2, 1, 0 }
  uselistorder i8 %v0_8052e82, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_8052e65, { 1, 0, 2 }
  uselistorder i32 %v0_8052f1993, { 2, 0, 1 }
  uselistorder i32 %v0_8052f2794, { 3, 4, 1, 2, 5, 0, 7, 6 }
  uselistorder i32 %v1_8052e5f, { 2, 1, 0 }
  uselistorder i32 %v8_8052e35, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_8052e32, { 1, 0 }
  uselistorder i32 %v0_8052e11, { 1, 0 }
  uselistorder i32 %v2_8052de2, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8052dda, { 0, 1, 4, 2, 3 }
  uselistorder i8 %v0_8052dc7, { 1, 0 }
  uselistorder i1 %v2_8052dbe, { 2, 1, 0 }
  uselistorder i32 %v1_8052dbe, { 5, 0, 1, 2, 3, 4, 6, 7 }
  uselistorder i32 %v0_8052dab, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v2_8052d8f, { 1, 0, 2 }
  uselistorder i32 %v2_8052d7b, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_8052d44, { 1, 2, 0, 3 }
  uselistorder i32 %v1_8052d38, { 2, 1, 0 }
  uselistorder i32 %v8_8052d27, { 3, 1, 0, 2, 4, 5 }
  uselistorder i32 %v2_8052d0e, { 1, 0, 2 }
  uselistorder i32 %v0_8052caa, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_8052c7d, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8052c73, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v0_8052c65, { 1, 0 }
  uselistorder i32 %v1_8052bfc, { 1, 0 }
  uselistorder i32 %v3_8052bf0, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_8052c00, { 1, 0 }
  uselistorder i32 %v2_8052bea, { 3, 2, 1, 0 }
  uselistorder i32 %esi.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_8052be77, { 1, 0 }
  uselistorder i32 %v2_8052bdc, { 1, 0 }
  uselistorder i32 %v1_8052bc0, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_8052bbc, { 2, 1, 0 }
  uselistorder i32 %v1_8052bb8, { 1, 0 }
  uselistorder i32 %v1_8052bac, { 2, 1, 0 }
  uselistorder i32 %v2_8052ba2, { 1, 0 }
  uselistorder i32 %v1_8052b9f, { 1, 2, 0 }
  uselistorder i32 %v4_8052b3d, { 3, 6, 4, 5, 2, 1, 0 }
  uselistorder i32 %v0_8052b88, { 1, 0 }
  uselistorder i32 %v0_8052b56, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8052b29, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8052af6, { 0, 2, 1 }
  uselistorder i32 %v2_8052ada, { 1, 0 }
  uselistorder i32 %v1_8052ad0, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-64.1, { 1, 0 }
  uselistorder i32 %v0_8052acb.lcssa, { 1, 0 }
  uselistorder i32 %v3_8052abb, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v1_8052ab2, { 1, 0, 2 }
  uselistorder i32 %v2_8052a8e, { 2, 0, 1, 3 }
  uselistorder i32 %v2_8052a76, { 2, 1, 0 }
  uselistorder i32 %v0_8052a62, { 2, 0, 3, 1 }
  uselistorder i32 %v3_8052a28, { 1, 0, 2 }
  uselistorder i32 %v1_805301f, { 0, 1, 3, 2 }
  uselistorder i32 %v0_8052af69, { 1, 0, 2 }
  uselistorder i32 %v3_80529d5, { 1, 0, 2 }
  uselistorder i32 %v2_80529c7, { 2, 1, 0 }
  uselistorder i32 %v2_80529a2, { 2, 1, 0 }
  uselistorder i8 %v0_8052970, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v1_8052d08, { 13, 31, 12, 2, 29, 11, 3, 22, 21, 10, 9, 4, 24, 23, 20, 18, 19, 5, 25, 26, 6, 27, 28, 15, 7, 16, 17, 8, 30, 14, 0, 32, 34, 33, 1, 35 }
  uselistorder i32 %v1_8052959, { 0, 2, 1 }
  uselistorder i32 %v0_8052942, { 1, 0 }
  uselistorder i32 %v2_8052929, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-92, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 14, 15 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 18, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %ecx.global-to-local, { 23, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30 }
  uselistorder i32* %ebx.global-to-local, { 0, 22, 1, 2, 3, 4, 5, 6, 7, 8, 17, 9, 18, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 23, 24, 25 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 55, 50, 51, 54, 53, 52, 56, 57, 58, 59, 60, 62, 61, 63, 64, 65, 66, 67, 68, 69, 70, 0, 71, 72, 73 }
  uselistorder i32 1048576, { 1, 2, 0 }
  uselistorder i8* @global_var_8056cc0.64, { 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @function_8054158, { 1, 0 }
  uselistorder i32 134572436, { 0, 3, 1, 2 }
  uselistorder i32* @global_var_80569a0.52, { 1, 2, 3, 0 }
  uselistorder i32 ()* @function_80528ee, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_805698c.49 to i32), i32 12), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_805698c.49 to i32), { 2, 3, 4, 0, 5, 1, 6 }
  uselistorder label %dec_label_pc_805307e, { 1, 0 }
  uselistorder label %dec_label_pc_805306d, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_8053060, { 1, 2, 0 }
  uselistorder label %dec_label_pc_805305c, { 1, 0 }
  uselistorder label %dec_label_pc_8053052, { 1, 0 }
  uselistorder label %dec_label_pc_8052ffd, { 1, 0 }
  uselistorder label %dec_label_pc_8052fd4, { 1, 0 }
  uselistorder label %dec_label_pc_8052fc1, { 1, 0 }
  uselistorder label %dec_label_pc_8052faf, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8052f41, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052f3c, { 1, 0 }
  uselistorder label %dec_label_pc_8052f20, { 1, 0 }
  uselistorder label %dec_label_pc_8052ec9, { 1, 0 }
  uselistorder label %dec_label_pc_8052eb2, { 1, 0 }
  uselistorder label %dec_label_pc_8052e9b, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8052e1e, { 1, 0 }
  uselistorder label %dec_label_pc_8052e11, { 1, 0 }
  uselistorder label %dec_label_pc_8052dd2, { 1, 0 }
  uselistorder label %dec_label_pc_8052dab, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8052d8f, { 1, 0 }
  uselistorder label %dec_label_pc_8052d76, { 1, 0 }
  uselistorder label %dec_label_pc_8052d58, { 1, 0 }
  uselistorder label %dec_label_pc_8052c73, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052c6b, { 1, 0 }
  uselistorder label %dec_label_pc_8052c54, { 1, 0 }
  uselistorder label %dec_label_pc_8052be7, { 1, 0 }
  uselistorder label %dec_label_pc_8052bec.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8052bc0, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052b47, { 1, 0 }
  uselistorder label %dec_label_pc_8052af6, { 1, 0 }
  uselistorder label %dec_label_pc_8052ace, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8052ab7, { 1, 0 }
  uselistorder label %dec_label_pc_8052a25, { 1, 0 }
  uselistorder label %dec_label_pc_8052af6.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80529f2, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8052970, { 1, 0 }
}

define i32 @function_8053088(i64 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8053088:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_8053088 = load i32, i32* @edi, align 4
  %v0_805308a = load i32, i32* @ebx, align 4
  %v12_805308b = ptrtoint i32* %stack_var_-28 to i32
  %v4_805308e = trunc i64 %arg1 to i32
  %sext = mul i64 %arg1, 4294967296
  %v2_8053098 = sdiv i64 %sext, 4294967296
  %v3_8053098 = sext i32 %arg2 to i64
  %v4_8053098 = mul nsw i64 %v3_8053098, %v2_8053098
  %v5_8053098 = trunc i64 %v4_8053098 to i32
  store i32 %v5_8053098, i32* @ebx, align 4
  %v2_805309b = icmp eq i32 %v4_805308e, 0
  br i1 %v2_805309b, label %dec_label_pc_80530bd, label %dec_label_pc_805309f

dec_label_pc_805309f:                             ; preds = %dec_label_pc_8053088
  store i32 %v4_805308e, i32* @edi, align 4
  %div = udiv i32 %v5_8053098, %v4_805308e
  store i32 %div, i32* %eax.global-to-local, align 4
  %v12_80530a7 = icmp eq i32 %div, %arg2
  br i1 %v12_80530a7, label %dec_label_pc_80530bd, label %dec_label_pc_80530ab

dec_label_pc_80530ab:                             ; preds = %dec_label_pc_805309f
  %v1_80530ab = call i32 @function_80524b9(i32 %v0_805308a)
  store i32 %v1_80530ab, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_80530b2 = inttoptr i32 %v1_80530ab to i32*
  store i32 12, i32* %v1_80530b2, align 4
  br label %dec_label_pc_8053173

dec_label_pc_80530bd:                             ; preds = %dec_label_pc_805309f, %dec_label_pc_8053088
  store i32 %v12_805308b, i32* @eax, align 4
  %v2_80530cd = call i32 @function_8053e40(i32 %v12_805308b, i32 134561341)
  store i32 %v2_80530cd, i32* %eax.global-to-local, align 4
  %v1_80530d9 = call i32 @function_8053e3d(i32 ptrtoint (i32* @global_var_80565c0.47 to i32))
  store i32 %v1_80530d9, i32* %eax.global-to-local, align 4
  %v0_80530de = load i32, i32* @ebx, align 4
  %v1_80530e1 = call i32 @function_8052914(i32 %v0_80530de)
  store i32 %v1_80530e1, i32* %eax.global-to-local, align 4
  store i32 %v1_80530e1, i32* %ebx.global-to-local, align 4
  %v1_80530eb = icmp eq i32 %v1_80530e1, 0
  br i1 %v1_80530eb, label %dec_label_pc_8053162, label %dec_label_pc_80530ef

dec_label_pc_80530ef:                             ; preds = %dec_label_pc_80530bd
  %v1_80530ef = add i32 %v1_80530e1, -4
  %v2_80530ef = inttoptr i32 %v1_80530ef to i32*
  %v3_80530ef = load i32, i32* %v2_80530ef, align 4
  store i32 %v3_80530ef, i32* %eax.global-to-local, align 4
  %v2_80530f2 = and i32 %v3_80530ef, 2
  %v3_80530f2 = icmp eq i32 %v2_80530f2, 0
  %v1_80530f4 = icmp eq i1 %v3_80530f2, false
  br i1 %v1_80530f4, label %dec_label_pc_8053162, label %dec_label_pc_80530f6

dec_label_pc_80530f6:                             ; preds = %dec_label_pc_80530ef
  %v1_80530f64 = add i32 %v3_80530ef, -4
  %v1_80530f9 = and i32 %v1_80530f64, -4
  %v2_80530fe = udiv i32 %v1_80530f9, 4
  store i32 %v2_80530fe, i32* %eax.global-to-local, align 4
  %v5_8053101 = icmp ult i32 %v1_80530f9, 36
  %tmp = and i32 %v1_80530f64, -4
  %tmp19 = icmp eq i32 %tmp, 36
  %v2_8053104 = or i1 %v5_8053101, %tmp19
  br i1 %v2_8053104, label %dec_label_pc_8053115, label %dec_label_pc_8053106

dec_label_pc_8053106:                             ; preds = %dec_label_pc_80530f6
  %v3_805310b = inttoptr i32 %v1_80530e1 to i8*
  %v4_805310b = call i32 @function_805250a(i8* %v3_805310b, i32 0, i32 %v1_80530f9)
  store i32 %v4_805310b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053162

dec_label_pc_8053115:                             ; preds = %dec_label_pc_80530f6
  %v1_8053115 = inttoptr i32 %v1_80530e1 to i32*
  store i32 0, i32* %v1_8053115, align 4
  %v0_805311b = load i32, i32* %ebx.global-to-local, align 4
  %v1_805311b = add i32 %v0_805311b, 4
  %v2_805311b = inttoptr i32 %v1_805311b to i32*
  store i32 0, i32* %v2_805311b, align 4
  %v0_8053122 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053122 = add i32 %v0_8053122, 8
  %v2_8053122 = inttoptr i32 %v1_8053122 to i32*
  store i32 0, i32* %v2_8053122, align 4
  %v0_8053129 = load i32, i32* %eax.global-to-local, align 4
  %tmp16 = icmp ult i32 %v0_8053129, 5
  br i1 %tmp16, label %dec_label_pc_8053162, label %dec_label_pc_805312e

dec_label_pc_805312e:                             ; preds = %dec_label_pc_8053115
  %v0_805312e = load i32, i32* %ebx.global-to-local, align 4
  %v1_805312e = add i32 %v0_805312e, 12
  %v2_805312e = inttoptr i32 %v1_805312e to i32*
  store i32 0, i32* %v2_805312e, align 4
  %v0_8053135 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053135 = add i32 %v0_8053135, 16
  %v2_8053135 = inttoptr i32 %v1_8053135 to i32*
  store i32 0, i32* %v2_8053135, align 4
  %v0_805313c = load i32, i32* %eax.global-to-local, align 4
  %tmp17 = icmp ult i32 %v0_805313c, 7
  br i1 %tmp17, label %dec_label_pc_8053162, label %dec_label_pc_8053141

dec_label_pc_8053141:                             ; preds = %dec_label_pc_805312e
  %v0_8053141 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053141 = add i32 %v0_8053141, 20
  %v2_8053141 = inttoptr i32 %v1_8053141 to i32*
  store i32 0, i32* %v2_8053141, align 4
  %v0_8053148 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053148 = add i32 %v0_8053148, 24
  %v2_8053148 = inttoptr i32 %v1_8053148 to i32*
  store i32 0, i32* %v2_8053148, align 4
  %v0_805314f = load i32, i32* %eax.global-to-local, align 4
  %tmp18 = icmp ult i32 %v0_805314f, 9
  br i1 %tmp18, label %dec_label_pc_8053162, label %dec_label_pc_8053154

dec_label_pc_8053154:                             ; preds = %dec_label_pc_8053141
  %v0_8053154 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053154 = add i32 %v0_8053154, 28
  %v2_8053154 = inttoptr i32 %v1_8053154 to i32*
  store i32 0, i32* %v2_8053154, align 4
  %v0_805315b = load i32, i32* %ebx.global-to-local, align 4
  %v1_805315b = add i32 %v0_805315b, 32
  %v2_805315b = inttoptr i32 %v1_805315b to i32*
  store i32 0, i32* %v2_805315b, align 4
  br label %dec_label_pc_8053162

dec_label_pc_8053162:                             ; preds = %dec_label_pc_8053141, %dec_label_pc_805312e, %dec_label_pc_8053115, %dec_label_pc_80530ef, %dec_label_pc_80530bd, %dec_label_pc_8053106, %dec_label_pc_8053154
  store i32 %v12_805308b, i32* @eax, align 4
  %v2_805316b = call i32 @function_8053e40(i32 %v12_805308b, i32 1)
  store i32 %v2_805316b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053173

dec_label_pc_8053173:                             ; preds = %dec_label_pc_80530ab, %dec_label_pc_8053162
  %v0_8053176 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8053176, i32* %eax.global-to-local, align 4
  store i32 %v0_805308a, i32* @ebx, align 4
  store i32 %v0_8053088, i32* @edi, align 4
  ret i32 %v0_8053176

; uselistorder directives
  uselistorder i32 %v1_80530f9, { 2, 1, 0 }
  uselistorder i32 %v1_80530e1, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %ebx.global-to-local, { 9, 0, 3, 1, 6, 2, 7, 4, 5, 8, 10 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 3, 4, 5, 2, 6, 7, 9, 10, 11, 8, 12 }
  uselistorder i64 4294967296, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_8053173, { 1, 0 }
  uselistorder label %dec_label_pc_8053162, { 6, 0, 1, 2, 5, 3, 4 }
}

define i32 @function_805317c() local_unnamed_addr {
dec_label_pc_805317c:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_805317c = load i32, i32* @ebp, align 4
  %v0_805317d = load i32, i32* @edi, align 4
  %v0_805317e = load i32, i32* @esi, align 4
  %v0_805317f = load i32, i32* @ebx, align 4
  store i32 %tmp7, i32* @ebx, align 4
  %v4_8053187 = icmp eq i32 %tmp6, 0
  %v1_805318c = icmp eq i1 %v4_8053187, false
  br i1 %v1_805318c, label %dec_label_pc_805319e, label %dec_label_pc_805318e

dec_label_pc_805318e:                             ; preds = %dec_label_pc_805317c
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_8053192 = call i32 @function_8052914(i32 %tmp7)
  store i32 %v1_8053192, i32* %eax.global-to-local, align 4
  store i32 %v1_8053192, i32* @ebx, align 4
  br label %dec_label_pc_8053497

dec_label_pc_805319e:                             ; preds = %dec_label_pc_805317c
  %v1_805319e = icmp eq i32 %tmp7, 0
  %v1_80531a0 = icmp eq i1 %v1_805319e, false
  br i1 %v1_80531a0, label %dec_label_pc_80531b3, label %dec_label_pc_80531a2

dec_label_pc_80531a2:                             ; preds = %dec_label_pc_805319e
  store i32 %tmp6, i32* %stack_var_-60, align 4
  %v1_80531a9 = call i32 @function_80536d9(i32 %tmp6)
  store i32 %v1_80531a9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053497

dec_label_pc_80531b3:                             ; preds = %dec_label_pc_805319e
  %v2_80531be = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80531be, i32* @eax, align 4
  store i32 %v2_80531be, i32* %stack_var_-60, align 4
  %v2_80531c3 = call i32 @function_8053e40(i32 %v2_80531be, i32 134561341)
  store i32 %v2_80531c3, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_80565c0.47 to i32), i32* %stack_var_-60, align 4
  %v1_80531cf = call i32 @function_8053e3d(i32 ptrtoint (i32* @global_var_80565c0.47 to i32))
  store i32 %v1_80531cf, i32* %eax.global-to-local, align 4
  %v0_80531d7 = load i32, i32* @ebx, align 4
  %tmp19 = icmp ult i32 %v0_80531d7, -32
  br i1 %tmp19, label %dec_label_pc_80531ee, label %dec_label_pc_80531dc

dec_label_pc_80531dc:                             ; preds = %dec_label_pc_80531b3
  %v0_80531dc = load i32, i32* %stack_var_-60, align 4
  %v1_80531dc = call i32 @function_80524b9(i32 %v0_80531dc)
  store i32 %v1_80531dc, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_80531e3 = inttoptr i32 %v1_80531dc to i32*
  store i32 12, i32* %v1_80531e3, align 4
  br label %dec_label_pc_805349a

dec_label_pc_80531ee:                             ; preds = %dec_label_pc_80531b3
  %v1_80531ee = add i32 %v0_80531d7, 11
  %tmp20 = icmp ult i32 %v1_80531ee, 16
  br i1 %tmp20, label %dec_label_pc_8053205, label %dec_label_pc_80531fe

dec_label_pc_80531fe:                             ; preds = %dec_label_pc_80531ee
  %v1_80531fe = and i32 %v1_80531ee, -8
  br label %dec_label_pc_8053205

dec_label_pc_8053205:                             ; preds = %dec_label_pc_80531ee, %dec_label_pc_80531fe
  %stack_var_-40.0 = phi i32 [ %v1_80531fe, %dec_label_pc_80531fe ], [ 16, %dec_label_pc_80531ee ]
  %storemerge26 = phi i32 [ %v1_80531fe, %dec_label_pc_80531fe ], [ %v1_80531ee, %dec_label_pc_80531ee ]
  store i32 %storemerge26, i32* %eax.global-to-local, align 4
  %v1_8053209 = add i32 %tmp6, -8
  store i32 %v1_8053209, i32* @edi, align 4
  %v1_805320c = add i32 %tmp6, -4
  %v2_805320c = inttoptr i32 %v1_805320c to i32*
  %v3_805320c = load i32, i32* %v2_805320c, align 4
  store i32 %v3_805320c, i32* @edx, align 4
  %v1_8053211 = and i32 %v3_805320c, -4
  store i32 %v1_8053211, i32* %eax.global-to-local, align 4
  %v2_8053218 = and i32 %v3_805320c, 2
  %v3_8053218 = icmp eq i32 %v2_8053218, 0
  %v1_805321b = icmp eq i1 %v3_8053218, false
  br i1 %v1_805321b, label %dec_label_pc_80533b5, label %dec_label_pc_8053221

dec_label_pc_8053221:                             ; preds = %dec_label_pc_8053205
  store i32 %stack_var_-40.0, i32* %ecx.global-to-local, align 4
  store i32 %v1_8053211, i32* @ebx, align 4
  %v7_8053227 = icmp ult i32 %v1_8053211, %stack_var_-40.0
  %v1_8053229 = icmp eq i1 %v7_8053227, false
  br i1 %v1_8053229, label %dec_label_pc_8053360, label %dec_label_pc_805322f

dec_label_pc_805322f:                             ; preds = %dec_label_pc_8053221
  %v2_805322f = add i32 %v1_8053211, %v1_8053209
  store i32 %v2_805322f, i32* @esi, align 4
  %v1_8053232 = load i32, i32* @global_var_805698c.49, align 4
  %v12_8053232 = icmp eq i32 %v2_805322f, %v1_8053232
  %v1_8053238 = icmp eq i1 %v12_8053232, false
  %v1_8053272 = add i32 %v2_805322f, 4
  %v2_8053272 = inttoptr i32 %v1_8053272 to i32*
  %v3_8053272 = load i32, i32* %v2_8053272, align 4
  br i1 %v1_8053238, label %dec_label_pc_8053272, label %dec_label_pc_805323a

dec_label_pc_805323a:                             ; preds = %dec_label_pc_805322f
  %v1_805323f = and i32 %v3_8053272, -4
  %v2_8053242 = add i32 %v1_805323f, %v1_8053211
  store i32 %v2_8053242, i32* %ecx.global-to-local, align 4
  %v1_8053248 = add i32 %stack_var_-40.0, 16
  store i32 %v1_8053248, i32* %eax.global-to-local, align 4
  %v7_805324b = icmp ult i32 %v2_8053242, %v1_8053248
  br i1 %v7_805324b, label %dec_label_pc_80532b0, label %dec_label_pc_805324f

dec_label_pc_805324f:                             ; preds = %dec_label_pc_805323a
  %v1_805324f = urem i32 %v3_805320c, 2
  %v5_8053252 = or i32 %v1_805324f, %stack_var_-40.0
  store i32 %v5_8053252, i32* @edx, align 4
  store i32 %v5_8053252, i32* %v2_805320c, align 4
  %v0_805325d = load i32, i32* %ecx.global-to-local, align 4
  %v2_805325d = sub i32 %v0_805325d, %stack_var_-40.0
  %v0_805325f = load i32, i32* @edi, align 4
  %v2_805325f = add i32 %v0_805325f, %stack_var_-40.0
  store i32 %v2_805325f, i32* %eax.global-to-local, align 4
  %v1_8053262 = or i32 %v2_805325d, 1
  store i32 %v1_8053262, i32* %ecx.global-to-local, align 4
  store i32 %v2_805325f, i32* @global_var_805698c.49, align 4
  %v2_805326a = add i32 %v2_805325f, 4
  %v3_805326a = inttoptr i32 %v2_805326a to i32*
  store i32 %v1_8053262, i32* %v3_805326a, align 4
  br label %dec_label_pc_8053485

dec_label_pc_8053272:                             ; preds = %dec_label_pc_805322f
  %v1_8053277 = and i32 %v3_8053272, -2
  store i32 %v1_8053277, i32* %eax.global-to-local, align 4
  %v3_805327a = add i32 %v1_8053272, %v1_8053277
  %v4_805327a = inttoptr i32 %v3_805327a to i8*
  %v5_805327a = load i8, i8* %v4_805327a, align 1
  %v6_805327a = urem i8 %v5_805327a, 2
  %v7_805327a = icmp eq i8 %v6_805327a, 0
  %v1_805327f = icmp eq i1 %v7_805327a, false
  br i1 %v1_805327f, label %dec_label_pc_80532b0, label %dec_label_pc_8053281

dec_label_pc_8053281:                             ; preds = %dec_label_pc_8053272
  %v1_8053281 = and i32 %v3_8053272, -4
  %v2_8053288 = add i32 %v1_8053281, %v1_8053211
  store i32 %v2_8053288, i32* @ebx, align 4
  %v10_805328a = icmp ult i32 %v2_8053288, %stack_var_-40.0
  br i1 %v10_805328a, label %dec_label_pc_80532b0, label %dec_label_pc_8053290

dec_label_pc_8053290:                             ; preds = %dec_label_pc_8053281
  %v1_8053290 = add i32 %v1_8053211, %tmp6
  %v2_8053290 = inttoptr i32 %v1_8053290 to i32*
  %v3_8053290 = load i32, i32* %v2_8053290, align 4
  store i32 %v3_8053290, i32* @edx, align 4
  %v1_8053293 = add i32 %v2_805322f, 12
  %v2_8053293 = inttoptr i32 %v1_8053293 to i32*
  %v3_8053293 = load i32, i32* %v2_8053293, align 4
  store i32 %v3_8053293, i32* %eax.global-to-local, align 4
  %v1_8053296 = add i32 %v3_8053290, 12
  %v2_8053296 = inttoptr i32 %v1_8053296 to i32*
  %v3_8053296 = load i32, i32* %v2_8053296, align 4
  %v15_8053296 = icmp eq i32 %v3_8053296, %v2_805322f
  %v1_8053299 = icmp eq i1 %v15_8053296, false
  br i1 %v1_8053299, label %dec_label_pc_80532a0, label %dec_label_pc_805329b

dec_label_pc_805329b:                             ; preds = %dec_label_pc_8053290
  %v1_805329b = add i32 %v3_8053293, 8
  %v2_805329b = inttoptr i32 %v1_805329b to i32*
  %v3_805329b = load i32, i32* %v2_805329b, align 4
  %v15_805329b = icmp eq i32 %v3_805329b, %v2_805322f
  br i1 %v15_805329b, label %dec_label_pc_80532a5, label %dec_label_pc_80532a0

dec_label_pc_80532a0:                             ; preds = %dec_label_pc_805329b, %dec_label_pc_8053290
  %v0_80532a0 = call i32 @function_8053875()
  store i32 %v0_80532a0, i32* %eax.global-to-local, align 4
  %v1_80532a5.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80532a5

dec_label_pc_80532a5:                             ; preds = %dec_label_pc_805329b, %dec_label_pc_80532a0
  %v1_80532a5 = phi i32 [ %v3_8053290, %dec_label_pc_805329b ], [ %v1_80532a5.pre, %dec_label_pc_80532a0 ]
  %v0_80532a5 = phi i32 [ %v3_8053293, %dec_label_pc_805329b ], [ %v0_80532a0, %dec_label_pc_80532a0 ]
  %v2_80532a5 = add i32 %v1_80532a5, 12
  %v3_80532a5 = inttoptr i32 %v2_80532a5 to i32*
  store i32 %v0_80532a5, i32* %v3_80532a5, align 4
  %v0_80532a8 = load i32, i32* @edx, align 4
  %v1_80532a8 = load i32, i32* %eax.global-to-local, align 4
  %v2_80532a8 = add i32 %v1_80532a8, 8
  %v3_80532a8 = inttoptr i32 %v2_80532a8 to i32*
  store i32 %v0_80532a8, i32* %v3_80532a8, align 4
  %v0_8053360.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8053360

dec_label_pc_80532b0:                             ; preds = %dec_label_pc_8053281, %dec_label_pc_8053272, %dec_label_pc_805323a
  %v1_80532b7 = add i32 %stack_var_-40.0, -7
  store i32 %v1_80532b7, i32* %eax.global-to-local, align 4
  store i32 %v1_80532b7, i32* %stack_var_-60, align 4
  %v1_80532bb = call i32 @function_8052914(i32 %v1_80532b7)
  store i32 %v1_80532bb, i32* %eax.global-to-local, align 4
  store i32 %v1_80532bb, i32* @edx, align 4
  %v1_80532c5 = icmp eq i32 %v1_80532bb, 0
  br i1 %v1_80532c5, label %dec_label_pc_8053481, label %dec_label_pc_80532cd

dec_label_pc_80532cd:                             ; preds = %dec_label_pc_80532b0
  %v1_80532cd = add i32 %v1_80532bb, -8
  store i32 %v1_80532cd, i32* %ebx.global-to-local, align 4
  %v1_80532d0 = load i32, i32* @esi, align 4
  %v12_80532d0 = icmp eq i32 %v1_80532cd, %v1_80532d0
  %v1_80532d2 = add i32 %v1_80532bb, -4
  %v2_80532d2 = inttoptr i32 %v1_80532d2 to i32*
  %v3_80532d2 = load i32, i32* %v2_80532d2, align 4
  store i32 %v3_80532d2, i32* %eax.global-to-local, align 4
  %v1_80532d5 = icmp eq i1 %v12_80532d0, false
  br i1 %v1_80532d5, label %dec_label_pc_80532e3, label %dec_label_pc_80532d7

dec_label_pc_80532d7:                             ; preds = %dec_label_pc_80532cd
  %v1_80532d7 = and i32 %v3_80532d2, -4
  store i32 %v1_80532d7, i32* %eax.global-to-local, align 4
  store i32 %v1_8053211, i32* @edx, align 4
  %v2_80532de = add i32 %v1_80532d7, %v1_8053211
  store i32 %v2_80532de, i32* @ebx, align 4
  br label %dec_label_pc_8053360

dec_label_pc_80532e3:                             ; preds = %dec_label_pc_80532cd
  %v1_80532e7 = add i32 %v1_8053211, -4
  store i32 %v1_80532e7, i32* %eax.global-to-local, align 4
  %v2_80532ec = udiv i32 %v1_80532e7, 4
  store i32 %v2_80532ec, i32* %ecx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_80532e7, 37
  br i1 %tmp, label %dec_label_pc_8053305, label %dec_label_pc_80532f4

dec_label_pc_80532f4:                             ; preds = %dec_label_pc_80532e3
  store i32 %v1_80532bb, i32* %stack_var_-60, align 4
  %v3_80532fb = inttoptr i32 %v1_80532bb to i16*
  %v4_80532fb = call i32 @function_8054702(i16* %v3_80532fb, i32 %tmp6, i32 %v1_80532e7)
  store i32 %v4_80532fb, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805334c

dec_label_pc_8053305:                             ; preds = %dec_label_pc_80532e3
  store i32 %tmp6, i32* @esi, align 4
  %v1_805330c = inttoptr i32 %tmp6 to i32*
  %v2_805330c = load i32, i32* %v1_805330c, align 4
  store i32 %v2_805330c, i32* %eax.global-to-local, align 4
  %v2_805330e = inttoptr i32 %v1_80532bb to i32*
  store i32 %v2_805330c, i32* %v2_805330e, align 4
  %v0_8053310 = load i32, i32* @esi, align 4
  %v1_8053310 = add i32 %v0_8053310, 4
  %v2_8053310 = inttoptr i32 %v1_8053310 to i32*
  %v3_8053310 = load i32, i32* %v2_8053310, align 4
  store i32 %v3_8053310, i32* %eax.global-to-local, align 4
  %v1_8053313 = load i32, i32* @edx, align 4
  %v2_8053313 = add i32 %v1_8053313, 4
  %v3_8053313 = inttoptr i32 %v2_8053313 to i32*
  store i32 %v3_8053310, i32* %v3_8053313, align 4
  %v0_8053316 = load i32, i32* @esi, align 4
  %v1_8053316 = add i32 %v0_8053316, 8
  %v2_8053316 = inttoptr i32 %v1_8053316 to i32*
  %v3_8053316 = load i32, i32* %v2_8053316, align 4
  store i32 %v3_8053316, i32* %eax.global-to-local, align 4
  %v1_8053319 = load i32, i32* @edx, align 4
  %v2_8053319 = add i32 %v1_8053319, 8
  %v3_8053319 = inttoptr i32 %v2_8053319 to i32*
  store i32 %v3_8053316, i32* %v3_8053319, align 4
  %tmp27 = icmp ult i32 %v1_80532e7, 17
  br i1 %tmp27, label %dec_label_pc_805334c, label %dec_label_pc_805331e

dec_label_pc_805331e:                             ; preds = %dec_label_pc_8053305
  %v0_805331e = load i32, i32* @esi, align 4
  %v1_805331e = add i32 %v0_805331e, 12
  %v2_805331e = inttoptr i32 %v1_805331e to i32*
  %v3_805331e = load i32, i32* %v2_805331e, align 4
  store i32 %v3_805331e, i32* %eax.global-to-local, align 4
  %v0_8053321 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053324 = load i32, i32* @edx, align 4
  %v2_8053324 = add i32 %v1_8053324, 12
  %v3_8053324 = inttoptr i32 %v2_8053324 to i32*
  store i32 %v3_805331e, i32* %v3_8053324, align 4
  %v0_8053327 = load i32, i32* @esi, align 4
  %v1_8053327 = add i32 %v0_8053327, 16
  %v2_8053327 = inttoptr i32 %v1_8053327 to i32*
  %v3_8053327 = load i32, i32* %v2_8053327, align 4
  store i32 %v3_8053327, i32* %eax.global-to-local, align 4
  %v1_805332a = load i32, i32* @edx, align 4
  %v2_805332a = add i32 %v1_805332a, 16
  %v3_805332a = inttoptr i32 %v2_805332a to i32*
  store i32 %v3_8053327, i32* %v3_805332a, align 4
  %tmp21 = icmp ult i32 %v0_8053321, 7
  br i1 %tmp21, label %dec_label_pc_805334c, label %dec_label_pc_805332f

dec_label_pc_805332f:                             ; preds = %dec_label_pc_805331e
  %v0_805332f = load i32, i32* @esi, align 4
  %v1_805332f = add i32 %v0_805332f, 20
  %v2_805332f = inttoptr i32 %v1_805332f to i32*
  %v3_805332f = load i32, i32* %v2_805332f, align 4
  store i32 %v3_805332f, i32* %eax.global-to-local, align 4
  %v0_8053332 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053335 = load i32, i32* @edx, align 4
  %v2_8053335 = add i32 %v1_8053335, 20
  %v3_8053335 = inttoptr i32 %v2_8053335 to i32*
  store i32 %v3_805332f, i32* %v3_8053335, align 4
  %v0_8053338 = load i32, i32* @esi, align 4
  %v1_8053338 = add i32 %v0_8053338, 24
  %v2_8053338 = inttoptr i32 %v1_8053338 to i32*
  %v3_8053338 = load i32, i32* %v2_8053338, align 4
  store i32 %v3_8053338, i32* %eax.global-to-local, align 4
  %v1_805333b = load i32, i32* @edx, align 4
  %v2_805333b = add i32 %v1_805333b, 24
  %v3_805333b = inttoptr i32 %v2_805333b to i32*
  store i32 %v3_8053338, i32* %v3_805333b, align 4
  %tmp22 = icmp ult i32 %v0_8053332, 9
  br i1 %tmp22, label %dec_label_pc_805334c, label %dec_label_pc_8053340

dec_label_pc_8053340:                             ; preds = %dec_label_pc_805332f
  %v0_8053340 = load i32, i32* @esi, align 4
  %v1_8053340 = add i32 %v0_8053340, 28
  %v2_8053340 = inttoptr i32 %v1_8053340 to i32*
  %v3_8053340 = load i32, i32* %v2_8053340, align 4
  store i32 %v3_8053340, i32* %eax.global-to-local, align 4
  %v1_8053343 = load i32, i32* @edx, align 4
  %v2_8053343 = add i32 %v1_8053343, 28
  %v3_8053343 = inttoptr i32 %v2_8053343 to i32*
  store i32 %v3_8053340, i32* %v3_8053343, align 4
  %v0_8053346 = load i32, i32* @esi, align 4
  %v1_8053346 = add i32 %v0_8053346, 32
  %v2_8053346 = inttoptr i32 %v1_8053346 to i32*
  %v3_8053346 = load i32, i32* %v2_8053346, align 4
  store i32 %v3_8053346, i32* %eax.global-to-local, align 4
  %v1_8053349 = load i32, i32* @edx, align 4
  %v2_8053349 = add i32 %v1_8053349, 32
  %v3_8053349 = inttoptr i32 %v2_8053349 to i32*
  store i32 %v3_8053346, i32* %v3_8053349, align 4
  br label %dec_label_pc_805334c

dec_label_pc_805334c:                             ; preds = %dec_label_pc_805332f, %dec_label_pc_805331e, %dec_label_pc_8053305, %dec_label_pc_80532f4, %dec_label_pc_8053340
  %v0_805334f = load i32, i32* %ebx.global-to-local, align 4
  %v1_805334f = add i32 %v0_805334f, 8
  store i32 %v1_805334f, i32* @ebx, align 4
  store i32 %tmp6, i32* %stack_var_-60, align 4
  %v1_8053356 = call i32 @function_80536d9(i32 %tmp6)
  br label %dec_label_pc_805347c

dec_label_pc_8053360:                             ; preds = %dec_label_pc_8053221, %dec_label_pc_80532d7, %dec_label_pc_80532a5
  %v1_8053371 = phi i32 [ %v1_8053211, %dec_label_pc_8053221 ], [ %v2_80532de, %dec_label_pc_80532d7 ], [ %v0_8053360.pre, %dec_label_pc_80532a5 ]
  %v5_8053362 = sub i32 %v1_8053371, %stack_var_-40.0
  store i32 %v5_8053362, i32* %ecx.global-to-local, align 4
  %tmp23 = icmp ult i32 %v5_8053362, 16
  br i1 %tmp23, label %dec_label_pc_805336b, label %dec_label_pc_805337d

dec_label_pc_805336b:                             ; preds = %dec_label_pc_8053360
  %v0_805336b = load i32, i32* @edi, align 4
  %v1_805336b = add i32 %v0_805336b, 4
  %v2_805336b = inttoptr i32 %v1_805336b to i32*
  %v3_805336b = load i32, i32* %v2_805336b, align 4
  %v1_805336e = urem i32 %v3_805336b, 2
  %v2_8053371 = or i32 %v1_805336e, %v1_8053371
  store i32 %v2_8053371, i32* %eax.global-to-local, align 4
  store i32 %v2_8053371, i32* %v2_805336b, align 4
  %v0_8053376 = load i32, i32* @edi, align 4
  %v1_8053376 = load i32, i32* @ebx, align 4
  %v2_8053376 = add i32 %v0_8053376, 4
  %v3_8053376 = add i32 %v2_8053376, %v1_8053376
  %v4_8053376 = inttoptr i32 %v3_8053376 to i32*
  %v5_8053376 = load i32, i32* %v4_8053376, align 4
  %v6_8053376 = or i32 %v5_8053376, 1
  store i32 %v6_8053376, i32* %v4_8053376, align 4
  br label %dec_label_pc_80533ad

dec_label_pc_805337d:                             ; preds = %dec_label_pc_8053360
  %v0_8053381 = load i32, i32* @edi, align 4
  %v2_8053381 = add i32 %v0_8053381, %stack_var_-40.0
  store i32 %v2_8053381, i32* %eax.global-to-local, align 4
  %v1_8053384 = add i32 %v0_8053381, 4
  %v2_8053384 = inttoptr i32 %v1_8053384 to i32*
  %v3_8053384 = load i32, i32* %v2_8053384, align 4
  %v1_8053387 = urem i32 %v3_8053384, 2
  %v5_805338a = or i32 %v1_8053387, %stack_var_-40.0
  store i32 %v5_805338a, i32* %v2_8053384, align 4
  %v0_8053394 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053396 = or i32 %v0_8053394, 1
  store i32 %v1_8053396, i32* @edx, align 4
  %v1_8053399 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053399 = add i32 %v1_8053399, 4
  %v3_8053399 = inttoptr i32 %v2_8053399 to i32*
  store i32 %v1_8053396, i32* %v3_8053399, align 4
  %v0_805339c = load i32, i32* %eax.global-to-local, align 4
  %v1_805339c = load i32, i32* %ecx.global-to-local, align 4
  %v2_805339c = add i32 %v0_805339c, 4
  %v3_805339c = add i32 %v2_805339c, %v1_805339c
  %v4_805339c = inttoptr i32 %v3_805339c to i32*
  %v5_805339c = load i32, i32* %v4_805339c, align 4
  %v6_805339c = or i32 %v5_805339c, 1
  store i32 %v6_805339c, i32* %v4_805339c, align 4
  %v0_80533a1 = load i32, i32* %eax.global-to-local, align 4
  %v1_80533a1 = add i32 %v0_80533a1, 8
  store i32 %v1_80533a1, i32* %eax.global-to-local, align 4
  store i32 %v1_80533a1, i32* %stack_var_-60, align 4
  %v1_80533a5 = call i32 @function_80536d9(i32 %v1_80533a1)
  store i32 %v1_80533a5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80533ad

dec_label_pc_80533ad:                             ; preds = %dec_label_pc_805336b, %dec_label_pc_805337d
  %v0_80533ad = load i32, i32* @edi, align 4
  %v1_80533ad = add i32 %v0_80533ad, 8
  store i32 %v1_80533ad, i32* @ebx, align 4
  br label %dec_label_pc_8053489

dec_label_pc_80533b5:                             ; preds = %dec_label_pc_8053205
  store i32 %tmp6, i32* %ecx.global-to-local, align 4
  %v0_80533b9 = load i32, i32* @global_var_8056cbc.54, align 4
  %v1_80533be = add i32 %v0_80533b9, -1
  store i32 %v1_80533be, i32* %eax.global-to-local, align 4
  %v2_80533c3 = inttoptr i32 %v1_8053209 to i32*
  %v3_80533c3 = load i32, i32* %v2_80533c3, align 4
  store i32 %v3_80533c3, i32* @ebp, align 4
  %v1_80533c6 = or i32 %stack_var_-40.0, 4
  store i32 %v1_80533c6, i32* %stack_var_-44, align 4
  %v2_80533cc = add i32 %v3_80533c3, %v1_80533be
  store i32 %v2_80533cc, i32* @edx, align 4
  %v1_80533cf = sub i32 0, %v0_80533b9
  store i32 %v1_80533cf, i32* %eax.global-to-local, align 4
  %v2_80533d1 = add i32 %v2_80533cc, %v1_80533c6
  %v2_80533d4 = and i32 %v2_80533d1, %v1_80533cf
  store i32 %v2_80533d4, i32* @esi, align 4
  %v2_80533d8 = sub i32 %v2_80533d4, %v3_80533c3
  store i32 %v2_80533d8, i32* @ebx, align 4
  %v15_80533da = icmp eq i32 %v1_8053211, %v2_80533d8
  br i1 %v15_80533da, label %dec_label_pc_8053485, label %dec_label_pc_80533e4

dec_label_pc_80533e4:                             ; preds = %dec_label_pc_80533b5
  %v2_80533eb = sub i32 %v1_8053209, %v3_80533c3
  store i32 %v2_80533eb, i32* @edi, align 4
  %v2_80533ed = add i32 %v3_80533c3, %v1_8053211
  store i32 %v2_80533ed, i32* %eax.global-to-local, align 4
  store i32 %v2_80533eb, i32* %stack_var_-60, align 4
  %v6_80533f1 = inttoptr i32 %v2_80533eb to i32*
  %v7_80533f1 = call i32 @function_8054566(i32* %v6_80533f1, i32 %v2_80533ed, i32 %v2_80533d4, i32 1, i32 %v1_80533c6, i32 %v1_8053211)
  store i32 %v7_80533f1, i32* %eax.global-to-local, align 4
  %v10_80533f9 = icmp eq i32 %v7_80533f1, -1
  br i1 %v10_80533f9, label %dec_label_pc_805343d, label %dec_label_pc_80533fe

dec_label_pc_80533fe:                             ; preds = %dec_label_pc_80533e4
  %v1_80533fe = load i32, i32* @ebp, align 4
  %v2_80533fe = add i32 %v1_80533fe, %v7_80533f1
  store i32 %v2_80533fe, i32* @edx, align 4
  %v0_8053401 = load i32, i32* @ebx, align 4
  %v1_8053401 = or i32 %v0_8053401, 2
  store i32 %v1_8053401, i32* %ebx.global-to-local, align 4
  %v0_8053404 = load i32, i32* @esi, align 4
  store i32 %v0_8053404, i32* %eax.global-to-local, align 4
  %v2_8053406 = add i32 %v2_80533fe, 4
  %v3_8053406 = inttoptr i32 %v2_8053406 to i32*
  store i32 %v1_8053401, i32* %v3_8053406, align 4
  %v0_8053409 = load i32, i32* %eax.global-to-local, align 4
  %v5_8053409 = sub i32 %v0_8053409, %v1_8053211
  %v1_805340d = load i32, i32* @global_var_8056cc4.59, align 4
  %v2_805340d = add i32 %v1_805340d, %v5_8053409
  store i32 %v2_805340d, i32* %eax.global-to-local, align 4
  store i32 %v2_805340d, i32* @global_var_8056cc4.59, align 4
  %v1_8053418 = load i32, i32* @global_var_8056cd0.60, align 16
  %tmp24 = icmp ugt i32 %v2_805340d, %v1_8053418
  br i1 %tmp24, label %dec_label_pc_8053420, label %dec_label_pc_8053425

dec_label_pc_8053420:                             ; preds = %dec_label_pc_80533fe
  store i32 %v2_805340d, i32* @global_var_8056cd0.60, align 16
  br label %dec_label_pc_8053425

dec_label_pc_8053425:                             ; preds = %dec_label_pc_80533fe, %dec_label_pc_8053420
  %v1_8053425 = load i32, i32* @global_var_8056cc8.61, align 8
  %v2_8053425 = add i32 %v1_8053425, %v2_805340d
  store i32 %v2_8053425, i32* %eax.global-to-local, align 4
  %v1_805342b = load i32, i32* @global_var_8056cd4.62, align 4
  %tmp25 = icmp ugt i32 %v2_8053425, %v1_805342b
  br i1 %tmp25, label %dec_label_pc_8053433, label %dec_label_pc_8053438

dec_label_pc_8053433:                             ; preds = %dec_label_pc_8053425
  store i32 %v2_8053425, i32* @global_var_8056cd4.62, align 4
  br label %dec_label_pc_8053438

dec_label_pc_8053438:                             ; preds = %dec_label_pc_8053425, %dec_label_pc_8053433
  %v0_8053438 = load i32, i32* @edx, align 4
  %v1_8053438 = add i32 %v0_8053438, 8
  store i32 %v1_8053438, i32* @ebx, align 4
  br label %dec_label_pc_8053489

dec_label_pc_805343d:                             ; preds = %dec_label_pc_80533e4
  %v2_805343d = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_805343d, i32* %eax.global-to-local, align 4
  %v10_8053440 = icmp ult i32 %v1_8053211, %v2_805343d
  %v1_8053444 = icmp eq i1 %v10_8053440, false
  br i1 %v1_8053444, label %dec_label_pc_8053485, label %dec_label_pc_8053446

dec_label_pc_8053446:                             ; preds = %dec_label_pc_805343d
  %v1_805344d = add i32 %stack_var_-40.0, -7
  store i32 %v1_805344d, i32* %eax.global-to-local, align 4
  store i32 %v1_805344d, i32* %stack_var_-60, align 4
  %v1_8053451 = call i32 @function_8052914(i32 %v1_805344d)
  store i32 %v1_8053451, i32* %eax.global-to-local, align 4
  store i32 %v1_8053451, i32* @ebx, align 4
  %v1_805345b = icmp eq i32 %v1_8053451, 0
  br i1 %v1_805345b, label %dec_label_pc_8053481, label %dec_label_pc_805345f

dec_label_pc_805345f:                             ; preds = %dec_label_pc_8053446
  %v1_8053464 = add i32 %v1_8053211, -8
  store i32 %v1_8053464, i32* %eax.global-to-local, align 4
  store i32 %v1_8053451, i32* %stack_var_-60, align 4
  %v3_805346d = inttoptr i32 %v1_8053451 to i16*
  %v4_805346d = call i32 @function_8054702(i16* %v3_805346d, i32 %tmp6, i32 %v1_8053464)
  store i32 %v4_805346d, i32* %eax.global-to-local, align 4
  store i32 %v1_8053451, i32* @edx, align 4
  store i32 %tmp6, i32* %stack_var_-60, align 4
  %v1_8053477 = call i32 @function_80536d9(i32 %tmp6)
  br label %dec_label_pc_805347c

dec_label_pc_805347c:                             ; preds = %dec_label_pc_805334c, %dec_label_pc_805345f
  %storemerge = phi i32 [ %v1_8053477, %dec_label_pc_805345f ], [ %v1_8053356, %dec_label_pc_805334c ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053489

dec_label_pc_8053481:                             ; preds = %dec_label_pc_8053446, %dec_label_pc_80532b0
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8053489

dec_label_pc_8053485:                             ; preds = %dec_label_pc_805343d, %dec_label_pc_80533b5, %dec_label_pc_805324f
  store i32 %tmp6, i32* @ebx, align 4
  br label %dec_label_pc_8053489

dec_label_pc_8053489:                             ; preds = %dec_label_pc_8053481, %dec_label_pc_805347c, %dec_label_pc_8053438, %dec_label_pc_80533ad, %dec_label_pc_8053485
  store i32 %v2_80531be, i32* @eax, align 4
  store i32 %v2_80531be, i32* %stack_var_-60, align 4
  %v2_8053492 = call i32 @function_8053e40(i32 %v2_80531be, i32 1)
  store i32 %v2_8053492, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053497

dec_label_pc_8053497:                             ; preds = %dec_label_pc_80531a2, %dec_label_pc_805318e, %dec_label_pc_8053489
  br label %dec_label_pc_805349a

dec_label_pc_805349a:                             ; preds = %dec_label_pc_80531dc, %dec_label_pc_8053497
  %v0_805349d = load i32, i32* @ebx, align 4
  store i32 %v0_805349d, i32* %eax.global-to-local, align 4
  store i32 %v0_805317f, i32* @ebx, align 4
  store i32 %v0_805317e, i32* @esi, align 4
  store i32 %v0_805317d, i32* @edi, align 4
  store i32 %v0_805317c, i32* @ebp, align 4
  ret i32 %v0_805349d

; uselistorder directives
  uselistorder i32 %v1_8053451, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %v2_8053425, { 1, 0, 2 }
  uselistorder i32 %v2_805340d, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_80533eb, { 1, 0, 2 }
  uselistorder i32 %v1_80533c6, { 1, 0, 2 }
  uselistorder i32 %v3_80533c3, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_8053381, { 1, 0 }
  uselistorder i32 %v1_80532e7, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_80532bb, { 1, 3, 2, 0, 4, 6, 5, 7 }
  uselistorder i32 %v2_805325f, { 1, 0, 2 }
  uselistorder i32 %v3_8053272, { 0, 2, 1 }
  uselistorder i32 %v2_805322f, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v1_8053211, { 13, 14, 12, 15, 0, 6, 7, 11, 1, 10, 2, 3, 4, 5, 9, 8, 16 }
  uselistorder i32 %v1_8053209, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-40.0, { 12, 4, 0, 1, 9, 8, 7, 2, 5, 3, 6, 11, 10 }
  uselistorder i32 %v1_80531fe, { 1, 0 }
  uselistorder i32 %v1_80531ee, { 0, 2, 1 }
  uselistorder i32 %v0_80531d7, { 1, 0 }
  uselistorder i32 %v2_80531be, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-60, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13 }
  uselistorder i32 %tmp7, { 0, 2, 1, 3 }
  uselistorder i32 %tmp6, { 15, 14, 13, 2, 12, 11, 10, 1, 9, 3, 0, 8, 7, 6, 5, 4 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 44, 47, 48, 49, 50, 0, 3, 4, 5, 6, 7 }
  uselistorder i32 -32, { 0, 1, 5, 4, 6, 7, 8, 9, 2, 3 }
  uselistorder i32 (i32)* @function_80536d9, { 2, 1, 0, 7, 3, 10, 9, 8, 5, 4, 11, 6 }
  uselistorder i32 (i32)* @function_8052914, { 1, 0, 4, 2, 3, 5 }
  uselistorder label %dec_label_pc_805349a, { 1, 0 }
  uselistorder label %dec_label_pc_8053497, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053489, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_805347c, { 1, 0 }
  uselistorder label %dec_label_pc_8053438, { 1, 0 }
  uselistorder label %dec_label_pc_8053425, { 1, 0 }
  uselistorder label %dec_label_pc_80533ad, { 1, 0 }
  uselistorder label %dec_label_pc_8053360, { 1, 2, 0 }
  uselistorder label %dec_label_pc_805334c, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_80532a5, { 1, 0 }
  uselistorder label %dec_label_pc_8053205, { 1, 0 }
}

define i32 @function_80534a4() local_unnamed_addr {
dec_label_pc_80534a4:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_80534ab = load i32, i32* @edx, align 4
  store i32 %v0_80534ab, i32* %ebp.global-to-local, align 4
  %v1_80534ad = add i32 %v0_80534ab, 860
  %v2_80534ad = inttoptr i32 %v1_80534ad to i32*
  %v3_80534ad = load i32, i32* %v2_80534ad, align 4
  store i32 %v3_80534ad, i32* %ecx.global-to-local, align 4
  %v1_80534b3 = add i32 %v0_80534ab, 44
  %v2_80534b3 = inttoptr i32 %v1_80534b3 to i32*
  %v3_80534b3 = load i32, i32* %v2_80534b3, align 4
  %v1_80534b6 = add i32 %v3_80534b3, 4
  %v2_80534b6 = inttoptr i32 %v1_80534b6 to i32*
  %v3_80534b6 = load i32, i32* %v2_80534b6, align 4
  %v1_80534b9 = and i32 %v3_80534b6, -4
  store i32 %v1_80534b9, i32* @esi, align 4
  %v1_80534be = load i32, i32* @eax, align 4
  %v2_80534be = add i32 %v3_80534ad, -17
  %v2_80534c0 = add i32 %v2_80534be, %v1_80534b9
  %v3_80534c0 = sub i32 %v2_80534c0, %v1_80534be
  %div = udiv i32 %v3_80534c0, %v3_80534ad
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp10 = urem i32 %v3_80534c0, %v3_80534ad
  store i32 %tmp10, i32* @edx, align 4
  %v1_80534c8 = add i32 %div, -1
  %v4_80534cb = mul i32 %v1_80534c8, %v3_80534ad
  store i32 %v4_80534cb, i32* @ebx, align 4
  %tmp11 = icmp slt i32 %v4_80534cb, 1
  br i1 %tmp11, label %dec_label_pc_8053527, label %dec_label_pc_80534d2

dec_label_pc_80534d2:                             ; preds = %dec_label_pc_80534a4
  %v1_80534d7 = call i32 @function_8054609(i32 0)
  store i32 %v1_80534d7, i32* %edi.global-to-local, align 4
  %v0_80534de = load i32, i32* @esi, align 4
  store i32 %v0_80534de, i32* %eax.global-to-local, align 4
  %v1_80534e0 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80534e0 = add i32 %v1_80534e0, 44
  %v3_80534e0 = inttoptr i32 %v2_80534e0 to i32*
  %v4_80534e0 = load i32, i32* %v3_80534e0, align 4
  %v5_80534e0 = add i32 %v4_80534e0, %v0_80534de
  store i32 %v5_80534e0, i32* %eax.global-to-local, align 4
  %v12_80534e6 = icmp eq i32 %v1_80534d7, %v5_80534e0
  %v1_80534e8 = icmp eq i1 %v12_80534e6, false
  br i1 %v1_80534e8, label %dec_label_pc_8053527, label %dec_label_pc_80534ea

dec_label_pc_80534ea:                             ; preds = %dec_label_pc_80534d2
  %v1_80534ed = sub i32 0, %v4_80534cb
  store i32 %v1_80534ed, i32* @ebx, align 4
  %v1_80534f0 = call i32 @function_8054609(i32 %v1_80534ed)
  store i32 %v1_80534f0, i32* %eax.global-to-local, align 4
  %v1_80534fc = call i32 @function_8054609(i32 0)
  store i32 %v1_80534fc, i32* %eax.global-to-local, align 4
  %v10_8053504 = icmp eq i32 %v1_80534fc, -1
  br i1 %v10_8053504, label %dec_label_pc_8053527, label %dec_label_pc_8053509

dec_label_pc_8053509:                             ; preds = %dec_label_pc_80534ea
  %v0_8053509 = load i32, i32* %edi.global-to-local, align 4
  %v2_805350b = sub i32 %v0_8053509, %v1_80534fc
  %v12_805350b = icmp eq i32 %v2_805350b, 0
  store i32 %v2_805350b, i32* %ecx.global-to-local, align 4
  br i1 %v12_805350b, label %dec_label_pc_8053527, label %dec_label_pc_805350f

dec_label_pc_805350f:                             ; preds = %dec_label_pc_8053509
  %v0_805350f = load i32, i32* %ebp.global-to-local, align 4
  %v1_805350f = add i32 %v0_805350f, 44
  %v2_805350f = inttoptr i32 %v1_805350f to i32*
  %v3_805350f = load i32, i32* %v2_805350f, align 4
  store i32 %v3_805350f, i32* %eax.global-to-local, align 4
  %v1_8053512 = add i32 %v0_805350f, 872
  %v2_8053512 = inttoptr i32 %v1_8053512 to i32*
  %v3_8053512 = load i32, i32* %v2_8053512, align 4
  %v5_8053512 = sub i32 %v3_8053512, %v2_805350b
  store i32 %v5_8053512, i32* %v2_8053512, align 4
  %v0_8053518 = load i32, i32* @esi, align 4
  %v1_8053518 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8053518 = sub i32 %v0_8053518, %v1_8053518
  %v1_805351a = or i32 %v2_8053518, 1
  %v1_805351d = load i32, i32* %eax.global-to-local, align 4
  %v2_805351d = add i32 %v1_805351d, 4
  %v3_805351d = inttoptr i32 %v2_805351d to i32*
  store i32 %v1_805351a, i32* %v3_805351d, align 4
  br label %dec_label_pc_8053529

dec_label_pc_8053527:                             ; preds = %dec_label_pc_8053509, %dec_label_pc_80534ea, %dec_label_pc_80534d2, %dec_label_pc_80534a4
  br label %dec_label_pc_8053529

dec_label_pc_8053529:                             ; preds = %dec_label_pc_805350f, %dec_label_pc_8053527
  %storemerge = phi i32 [ 1, %dec_label_pc_805350f ], [ 0, %dec_label_pc_8053527 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_80534fc, { 1, 0, 2 }
  uselistorder i32 %v4_80534cb, { 1, 2, 0 }
  uselistorder i32 %v3_80534ad, { 0, 3, 2, 1, 4 }
  uselistorder i32* %eax.global-to-local, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 (i32)* @function_8054609, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8053529, { 1, 0 }
}

define i32 @function_8053531(i32* %arg1) local_unnamed_addr {
dec_label_pc_8053531:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp20 = ptrtoint i32* %arg1 to i32
  %v0_8053532 = load i32, i32* @edi, align 4
  %v0_8053533 = load i32, i32* @esi, align 4
  %v0_8053534 = load i32, i32* @ebx, align 4
  store i32 %tmp20, i32* %edx.global-to-local, align 4
  %v2_805353c = load i32, i32* %arg1, align 4
  store i32 %v2_805353c, i32* %eax.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_8053543 = icmp eq i32 %v2_805353c, 0
  br i1 %v1_8053543, label %dec_label_pc_805365d.lr.ph, label %dec_label_pc_805354b

dec_label_pc_805365d.lr.ph:                       ; preds = %dec_label_pc_8053531
  %v3_8053661 = add i32 %tmp20, 44
  br label %dec_label_pc_805365d

dec_label_pc_805354b:                             ; preds = %dec_label_pc_8053531
  %v1_805354f = and i32 %v2_805353c, -3
  store i32 %v1_805354f, i32* %arg1, align 4
  %v1_8053554 = add i32 %tmp20, 52
  store i32 %tmp20, i32* @edx, align 4
  %v1_805355f = add i32 %tmp20, 4
  store i32 %v1_805355f, i32* %eax.global-to-local, align 4
  %v2_805356a = load i32, i32* %arg1, align 4
  %v2_8053570 = udiv i32 %v2_805356a, 8
  %v2_8053573 = mul nuw i32 %v2_8053570, 4
  %v3_8053573 = add i32 %tmp20, -4
  %v4_8053573 = add i32 %v3_8053573, %v2_8053573
  store i32 %v4_8053573, i32* %eax.global-to-local, align 4
  %v2_805363a = add i32 %tmp20, 44
  %v3_805363a = inttoptr i32 %v2_805363a to i32*
  %v1_805360d = add i32 %tmp20, 60
  %v2_805360d = inttoptr i32 %v1_805360d to i32*
  br label %dec_label_pc_805357b

dec_label_pc_805357b:                             ; preds = %dec_label_pc_8053653, %dec_label_pc_805354b
  %v0_8053589 = phi i32 [ %v1_805355f, %dec_label_pc_805354b ], [ %v4_8053653, %dec_label_pc_8053653 ]
  store i32 %v0_8053589, i32* %eax.global-to-local, align 4
  %v1_805357f = inttoptr i32 %v0_8053589 to i32*
  %v2_805357f = load i32, i32* %v1_805357f, align 4
  store i32 %v2_805357f, i32* @ecx, align 4
  %v1_8053581 = icmp eq i32 %v2_805357f, 0
  br i1 %v1_8053581, label %dec_label_pc_8053649, label %dec_label_pc_8053589

dec_label_pc_8053589:                             ; preds = %dec_label_pc_805357b
  store i32 0, i32* %v1_805357f, align 4
  %v0_805358f.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805358f

dec_label_pc_805358f:                             ; preds = %dec_label_pc_805363d, %dec_label_pc_8053589
  %v0_80535ac = phi i32 [ %v3_805358f, %dec_label_pc_805363d ], [ %v0_805358f.pre, %dec_label_pc_8053589 ]
  %v1_805358f = add i32 %v0_80535ac, 8
  %v2_805358f = inttoptr i32 %v1_805358f to i32*
  %v3_805358f = load i32, i32* %v2_805358f, align 4
  store i32 %v3_805358f, i32* %edx.global-to-local, align 4
  %v1_8053596 = add i32 %v0_80535ac, 4
  %v2_8053596 = inttoptr i32 %v1_8053596 to i32*
  %v3_8053596 = load i32, i32* %v2_8053596, align 4
  store i32 %v3_8053596, i32* %eax.global-to-local, align 4
  %v1_805359b = and i32 %v3_8053596, -2
  store i32 %v1_805359b, i32* @edi, align 4
  %v2_805359e = urem i32 %v3_8053596, 2
  %v3_805359e = icmp eq i32 %v2_805359e, 0
  %v2_80535a0 = add i32 %v1_805359b, %v0_80535ac
  store i32 %v2_80535a0, i32* @ebx, align 4
  %v1_80535a3 = add i32 %v2_80535a0, 4
  %v2_80535a3 = inttoptr i32 %v1_80535a3 to i32*
  %v3_80535a3 = load i32, i32* %v2_80535a3, align 4
  store i32 %v3_80535a3, i32* %edx.global-to-local, align 4
  %v1_80535aa = icmp eq i1 %v3_805359e, false
  br i1 %v1_80535aa, label %dec_label_pc_80535cc, label %dec_label_pc_80535ac

dec_label_pc_80535ac:                             ; preds = %dec_label_pc_805358f
  %v1_80535ac = inttoptr i32 %v0_80535ac to i32*
  %v2_80535ac = load i32, i32* %v1_80535ac, align 4
  store i32 %v2_80535ac, i32* %ebp.global-to-local, align 4
  %v2_80535b0 = sub i32 %v0_80535ac, %v2_80535ac
  store i32 %v2_80535b0, i32* %eax.global-to-local, align 4
  %v1_80535b2 = add i32 %v2_80535b0, 8
  %v2_80535b2 = inttoptr i32 %v1_80535b2 to i32*
  %v3_80535b2 = load i32, i32* %v2_80535b2, align 4
  store i32 %v3_80535b2, i32* @esi, align 4
  %v1_80535b5 = add i32 %v2_80535b0, 12
  %v2_80535b5 = inttoptr i32 %v1_80535b5 to i32*
  %v3_80535b5 = load i32, i32* %v2_80535b5, align 4
  store i32 %v3_80535b5, i32* %edx.global-to-local, align 4
  %v1_80535b8 = add i32 %v3_80535b2, 12
  %v2_80535b8 = inttoptr i32 %v1_80535b8 to i32*
  %v3_80535b8 = load i32, i32* %v2_80535b8, align 4
  store i32 %v3_80535b8, i32* @ecx, align 4
  %v12_80535bb = icmp eq i32 %v3_80535b8, %v2_80535b0
  %v1_80535bd = icmp eq i1 %v12_80535bb, false
  br i1 %v1_80535bd, label %dec_label_pc_80535fc, label %dec_label_pc_80535bf

dec_label_pc_80535bf:                             ; preds = %dec_label_pc_80535ac
  %v1_80535bf = add i32 %v3_80535b5, 8
  %v2_80535bf = inttoptr i32 %v1_80535bf to i32*
  %v3_80535bf = load i32, i32* %v2_80535bf, align 4
  %v15_80535bf = icmp eq i32 %v3_80535bf, %v3_80535b8
  %v1_80535c2 = icmp eq i1 %v15_80535bf, false
  br i1 %v1_80535c2, label %dec_label_pc_80535fc, label %dec_label_pc_80535c4

dec_label_pc_80535c4:                             ; preds = %dec_label_pc_80535bf
  %v2_80535c4 = add i32 %v2_80535ac, %v1_805359b
  store i32 %v2_80535c4, i32* @edi, align 4
  store i32 %v3_80535b5, i32* %v2_80535b8, align 4
  %v0_80535c9 = load i32, i32* @esi, align 4
  %v1_80535c9 = load i32, i32* %edx.global-to-local, align 4
  %v2_80535c9 = add i32 %v1_80535c9, 8
  %v3_80535c9 = inttoptr i32 %v2_80535c9 to i32*
  store i32 %v0_80535c9, i32* %v3_80535c9, align 4
  %v0_80535d7.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80535cc

dec_label_pc_80535cc:                             ; preds = %dec_label_pc_805358f, %dec_label_pc_80535c4
  %v1_80535e0 = phi i32 [ %v2_80535a0, %dec_label_pc_805358f ], [ %v0_80535d7.pre, %dec_label_pc_80535c4 ]
  store i32 %tmp20, i32* %eax.global-to-local, align 4
  %v1_80535d4 = and i32 %v3_80535a3, -4
  store i32 %v1_80535d4, i32* %ebp.global-to-local, align 4
  %v4_80535d7 = load i32, i32* %v3_805363a, align 4
  %v15_80535d7 = icmp eq i32 %v1_80535e0, %v4_80535d7
  br i1 %v15_80535d7, label %dec_label_pc_805362d, label %dec_label_pc_80535dc

dec_label_pc_80535dc:                             ; preds = %dec_label_pc_80535cc
  %v2_80535dc = add i32 %v1_80535e0, 4
  %v3_80535dc = add i32 %v2_80535dc, %v1_80535d4
  %v4_80535dc = inttoptr i32 %v3_80535dc to i32*
  %v5_80535dc = load i32, i32* %v4_80535dc, align 4
  store i32 %v5_80535dc, i32* %eax.global-to-local, align 4
  %v3_80535e0 = inttoptr i32 %v2_80535dc to i32*
  store i32 %v1_80535d4, i32* %v3_80535e0, align 4
  %v0_80535e3 = load i32, i32* %eax.global-to-local, align 4
  %v1_80535e3 = urem i32 %v0_80535e3, 2
  %v2_80535e3 = icmp eq i32 %v1_80535e3, 0
  store i32 %v1_80535e3, i32* %eax.global-to-local, align 4
  %v1_80535e8 = icmp eq i1 %v2_80535e3, false
  br i1 %v1_80535e8, label %dec_label_pc_8053609, label %dec_label_pc_80535ea

dec_label_pc_80535ea:                             ; preds = %dec_label_pc_80535dc
  %v0_80535ea = load i32, i32* @ebx, align 4
  %v1_80535ea = add i32 %v0_80535ea, 8
  %v2_80535ea = inttoptr i32 %v1_80535ea to i32*
  %v3_80535ea = load i32, i32* %v2_80535ea, align 4
  store i32 %v3_80535ea, i32* @edx, align 4
  %v1_80535ed = add i32 %v0_80535ea, 12
  %v2_80535ed = inttoptr i32 %v1_80535ed to i32*
  %v3_80535ed = load i32, i32* %v2_80535ed, align 4
  store i32 %v3_80535ed, i32* %eax.global-to-local, align 4
  %v1_80535f0 = add i32 %v3_80535ea, 12
  %v2_80535f0 = inttoptr i32 %v1_80535f0 to i32*
  %v3_80535f0 = load i32, i32* %v2_80535f0, align 4
  store i32 %v3_80535f0, i32* @esi, align 4
  %v12_80535f3 = icmp eq i32 %v3_80535f0, %v0_80535ea
  %v1_80535f5 = icmp eq i1 %v12_80535f3, false
  br i1 %v1_80535f5, label %dec_label_pc_80535fc, label %dec_label_pc_80535f7

dec_label_pc_80535f7:                             ; preds = %dec_label_pc_80535ea
  %v1_80535f7 = add i32 %v3_80535ed, 8
  %v2_80535f7 = inttoptr i32 %v1_80535f7 to i32*
  %v3_80535f7 = load i32, i32* %v2_80535f7, align 4
  %v15_80535f7 = icmp eq i32 %v3_80535f7, %v3_80535f0
  br i1 %v15_80535f7, label %dec_label_pc_8053601, label %dec_label_pc_80535fc

dec_label_pc_80535fc:                             ; preds = %dec_label_pc_80535f7, %dec_label_pc_80535ea, %dec_label_pc_80535bf, %dec_label_pc_80535ac
  %v0_80535fc = call i32 @function_8053875()
  store i32 %v0_80535fc, i32* %eax.global-to-local, align 4
  %v1_8053603.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8053601

dec_label_pc_8053601:                             ; preds = %dec_label_pc_80535f7, %dec_label_pc_80535fc
  %v1_8053603 = phi i32 [ %v3_80535ea, %dec_label_pc_80535f7 ], [ %v1_8053603.pre, %dec_label_pc_80535fc ]
  %v0_8053603 = phi i32 [ %v3_80535ed, %dec_label_pc_80535f7 ], [ %v0_80535fc, %dec_label_pc_80535fc ]
  %v0_8053601 = load i32, i32* @edi, align 4
  %v1_8053601 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8053601 = add i32 %v1_8053601, %v0_8053601
  store i32 %v2_8053601, i32* @edi, align 4
  %v2_8053603 = add i32 %v1_8053603, 12
  %v3_8053603 = inttoptr i32 %v2_8053603 to i32*
  store i32 %v0_8053603, i32* %v3_8053603, align 4
  %v0_8053606 = load i32, i32* @edx, align 4
  %v1_8053606 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053606 = add i32 %v1_8053606, 8
  %v3_8053606 = inttoptr i32 %v2_8053606 to i32*
  store i32 %v0_8053606, i32* %v3_8053606, align 4
  br label %dec_label_pc_8053609

dec_label_pc_8053609:                             ; preds = %dec_label_pc_80535dc, %dec_label_pc_8053601
  store i32 %v1_8053554, i32* %eax.global-to-local, align 4
  %v3_805360d = load i32, i32* %v2_805360d, align 4
  store i32 %v3_805360d, i32* @edx, align 4
  %v0_8053610 = load i32, i32* @ecx, align 4
  store i32 %v0_8053610, i32* %v2_805360d, align 4
  %v0_8053613 = load i32, i32* @edi, align 4
  %v1_8053615 = or i32 %v0_8053613, 1
  store i32 %v1_8053615, i32* %eax.global-to-local, align 4
  %v0_8053618 = load i32, i32* @ecx, align 4
  %v1_8053618 = load i32, i32* @edx, align 4
  %v2_8053618 = add i32 %v1_8053618, 12
  %v3_8053618 = inttoptr i32 %v2_8053618 to i32*
  store i32 %v0_8053618, i32* %v3_8053618, align 4
  %v0_805361b = load i32, i32* %eax.global-to-local, align 4
  %v1_805361b = load i32, i32* @ecx, align 4
  %v2_805361b = add i32 %v1_805361b, 4
  %v3_805361b = inttoptr i32 %v2_805361b to i32*
  store i32 %v0_805361b, i32* %v3_805361b, align 4
  store i32 %v1_8053554, i32* %eax.global-to-local, align 4
  %v0_8053622 = load i32, i32* @edx, align 4
  %v1_8053622 = load i32, i32* @ecx, align 4
  %v2_8053622 = add i32 %v1_8053622, 8
  %v3_8053622 = inttoptr i32 %v2_8053622 to i32*
  store i32 %v0_8053622, i32* %v3_8053622, align 4
  %v0_8053625 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053625 = load i32, i32* @ecx, align 4
  %v2_8053625 = add i32 %v1_8053625, 12
  %v3_8053625 = inttoptr i32 %v2_8053625 to i32*
  store i32 %v0_8053625, i32* %v3_8053625, align 4
  %v0_8053628 = load i32, i32* @edi, align 4
  %v1_8053628 = load i32, i32* @ecx, align 4
  %v3_8053628 = add i32 %v1_8053628, %v0_8053628
  %v4_8053628 = inttoptr i32 %v3_8053628 to i32*
  store i32 %v0_8053628, i32* %v4_8053628, align 4
  br label %dec_label_pc_805363d

dec_label_pc_805362d:                             ; preds = %dec_label_pc_80535cc
  %v0_805362d = load i32, i32* @edi, align 4
  %v2_805362d = add i32 %v0_805362d, %v1_80535d4
  %v1_8053630 = or i32 %v2_805362d, 1
  store i32 %v1_8053630, i32* %eax.global-to-local, align 4
  %v1_8053633 = load i32, i32* @ecx, align 4
  %v2_8053633 = add i32 %v1_8053633, 4
  %v3_8053633 = inttoptr i32 %v2_8053633 to i32*
  store i32 %v1_8053630, i32* %v3_8053633, align 4
  store i32 %tmp20, i32* @edx, align 4
  %v0_805363a = load i32, i32* @ecx, align 4
  store i32 %v0_805363a, i32* %v3_805363a, align 4
  br label %dec_label_pc_805363d

dec_label_pc_805363d:                             ; preds = %dec_label_pc_8053609, %dec_label_pc_805362d
  store i32 %v3_805358f, i32* @ecx, align 4
  %v1_8053641 = icmp eq i32 %v3_805358f, 0
  %v1_8053643 = icmp eq i1 %v1_8053641, false
  br i1 %v1_8053643, label %dec_label_pc_805358f, label %dec_label_pc_8053649

dec_label_pc_8053649:                             ; preds = %dec_label_pc_805363d, %dec_label_pc_805357b
  %v15_805364d = icmp eq i32 %v0_8053589, %v4_8053573
  br i1 %v15_805364d, label %dec_label_pc_80536d1, label %dec_label_pc_8053653

dec_label_pc_8053653:                             ; preds = %dec_label_pc_8053649
  %v4_8053653 = add i32 %v0_8053589, 4
  br label %dec_label_pc_805357b

dec_label_pc_805365d:                             ; preds = %dec_label_pc_805365d.lr.ph, %dec_label_pc_805365d
  %v1_8053661 = phi i32 [ 1, %dec_label_pc_805365d.lr.ph ], [ %v0_805366c, %dec_label_pc_805365d ]
  %v2_8053661 = mul i32 %v1_8053661, 8
  %v4_8053661 = add i32 %v3_8053661, %v2_8053661
  store i32 %v4_8053661, i32* %eax.global-to-local, align 4
  %v1_8053665 = add i32 %v1_8053661, 1
  store i32 %v1_8053665, i32* %edx.global-to-local, align 4
  %v2_8053666 = add i32 %v4_8053661, 12
  %v3_8053666 = inttoptr i32 %v2_8053666 to i32*
  store i32 %v4_8053661, i32* %v3_8053666, align 4
  %v0_8053669 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053669 = add i32 %v0_8053669, 8
  %v3_8053669 = inttoptr i32 %v2_8053669 to i32*
  store i32 %v0_8053669, i32* %v3_8053669, align 4
  %v0_805366c = load i32, i32* %edx.global-to-local, align 4
  %v7_805366f = icmp sgt i32 %v0_805366c, 95
  br i1 %v7_805366f, label %dec_label_pc_8053671, label %dec_label_pc_805365d

dec_label_pc_8053671:                             ; preds = %dec_label_pc_805365d
  store i32 %tmp20, i32* %eax.global-to-local, align 4
  %v1_8053675 = add i32 %tmp20, 864
  %v2_8053675 = inttoptr i32 %v1_8053675 to i32*
  %v3_8053675 = load i32, i32* %v2_8053675, align 4
  %v4_8053675 = or i32 %v3_8053675, 1
  store i32 %v4_8053675, i32* %v2_8053675, align 4
  %v0_805367c = load i32, i32* %eax.global-to-local, align 4
  %v1_805367c = add i32 %v0_805367c, 840
  %v2_805367c = inttoptr i32 %v1_805367c to i32*
  store i32 0, i32* %v2_805367c, align 4
  %v0_8053686 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053686 = add i32 %v0_8053686, 852
  %v2_8053686 = inttoptr i32 %v1_8053686 to i32*
  store i32 65536, i32* %v2_8053686, align 4
  %v0_8053690 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053690 = add i32 %v0_8053690, 844
  %v2_8053690 = inttoptr i32 %v1_8053690 to i32*
  store i32 262144, i32* %v2_8053690, align 4
  %v0_805369a = load i32, i32* %eax.global-to-local, align 4
  %v1_805369a = add i32 %v0_805369a, 836
  %v2_805369a = inttoptr i32 %v1_805369a to i32*
  store i32 262144, i32* %v2_805369a, align 4
  store i32 %tmp20, i32* @edx, align 4
  %v2_80536ab = load i32, i32* %arg1, align 4
  %v1_80536ad = urem i32 %v2_80536ab, 4
  %v1_80536b0 = or i32 %v1_80536ad, 72
  store i32 %v1_80536b0, i32* %arg1, align 4
  %v0_80536b5 = load i32, i32* @edx, align 4
  %v1_80536b7 = add i32 %v0_80536b5, 52
  store i32 %v1_80536b7, i32* %eax.global-to-local, align 4
  %v2_80536ba = add i32 %v0_80536b5, 44
  %v3_80536ba = inttoptr i32 %v2_80536ba to i32*
  store i32 %v1_80536b7, i32* %v3_80536ba, align 4
  %v1_80536bf = call i32 @function_8053cb9(i32 30)
  store i32 %v1_80536bf, i32* %eax.global-to-local, align 4
  %v2_80536cb = add i32 %tmp20, 860
  %v3_80536cb = inttoptr i32 %v2_80536cb to i32*
  store i32 %v1_80536bf, i32* %v3_80536cb, align 4
  br label %dec_label_pc_80536d1

dec_label_pc_80536d1:                             ; preds = %dec_label_pc_8053649, %dec_label_pc_8053671
  store i32 %v0_8053534, i32* @ebx, align 4
  store i32 %v0_8053533, i32* @esi, align 4
  store i32 %v0_8053532, i32* @edi, align 4
  %v0_80536d8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_80536d8

; uselistorder directives
  uselistorder i32 %v0_805366c, { 1, 0 }
  uselistorder i32 %v0_8053669, { 1, 0 }
  uselistorder i32 %v1_8053661, { 1, 0 }
  uselistorder i32 %v0_8053628, { 1, 0 }
  uselistorder i32 %v1_80535e3, { 1, 0 }
  uselistorder i32 %v2_80535dc, { 1, 0 }
  uselistorder i32 %v1_80535d4, { 0, 2, 1, 3 }
  uselistorder i32 %v1_80535e0, { 1, 0 }
  uselistorder i32 %v3_805358f, { 2, 1, 3, 0 }
  uselistorder i32 %v0_80535ac, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_8053589, { 1, 0, 3, 2 }
  uselistorder i32* %v3_805363a, { 1, 0 }
  uselistorder i32 %v1_8053554, { 1, 0 }
  uselistorder i32 %tmp20, { 3, 13, 11, 10, 8, 7, 1, 9, 2, 6, 5, 0, 12, 4 }
  uselistorder i32* %ebp.global-to-local, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28 }
  uselistorder i32 860, { 1, 0 }
  uselistorder i32 -3, { 1, 0 }
  uselistorder label %dec_label_pc_80536d1, { 1, 0 }
  uselistorder label %dec_label_pc_805365d, { 1, 0 }
  uselistorder label %dec_label_pc_805363d, { 1, 0 }
  uselistorder label %dec_label_pc_8053609, { 1, 0 }
  uselistorder label %dec_label_pc_8053601, { 1, 0 }
  uselistorder label %dec_label_pc_80535cc, { 1, 0 }
}

define i32 @function_80536d9(i32 %arg1) local_unnamed_addr {
dec_label_pc_80536d9:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_80536d9 = load i32, i32* @ebp, align 4
  %v0_80536da = load i32, i32* @edi, align 4
  %v0_80536db = load i32, i32* @esi, align 4
  %v0_80536dc = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_80536e4 = icmp eq i32 %arg1, 0
  br i1 %v1_80536e4, label %dec_label_pc_805386d, label %dec_label_pc_80536ec

dec_label_pc_80536ec:                             ; preds = %dec_label_pc_80536d9
  %v2_80536f7 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80536f7, i32* @eax, align 4
  %v2_80536fc = call i32 @function_8053e40(i32 %v2_80536f7, i32 134561341)
  store i32 %v2_80536fc, i32* %eax.global-to-local, align 4
  %v1_8053708 = call i32 @function_8053e3d(i32 ptrtoint (i32* @global_var_80565c0.47 to i32))
  %v1_805370d = add i32 %arg1, -8
  store i32 %v1_805370d, i32* @ecx, align 4
  %v0_8053710 = load i8, i8* @global_var_8056960.48, align 1
  %v1_8053710 = sext i8 %v0_8053710 to i32
  store i32 %v1_8053710, i32* %eax.global-to-local, align 4
  %v1_8053718 = add i32 %arg1, -4
  %v2_8053718 = inttoptr i32 %v1_8053718 to i32*
  %v3_8053718 = load i32, i32* %v2_8053718, align 4
  %v1_805371d = and i32 %v3_8053718, -4
  %v4_805371d = trunc i32 %v1_805371d to i8
  store i32 %v1_805371d, i32* @ebx, align 4
  %v8_8053722 = icmp ugt i8 %v4_805371d, %v0_8053710
  br i1 %v8_8053722, label %dec_label_pc_8053744, label %dec_label_pc_8053724

dec_label_pc_8053724:                             ; preds = %dec_label_pc_80536ec
  %v2_8053724 = udiv i32 %v3_8053718, 8
  %v1_8053727 = or i32 %v1_8053710, 3
  %v3_8053727 = trunc i32 %v1_8053727 to i8
  store i32 %v1_8053727, i32* %eax.global-to-local, align 4
  store i8 %v3_8053727, i8* @global_var_8056960.48, align 32
  %v1_805372f = mul nuw i32 %v2_8053724, 4
  %v2_805372f = add i32 %v1_805372f, ptrtoint (i8* @global_var_8056960.48 to i32)
  store i32 %v2_805372f, i32* @edx, align 4
  %v1_8053736 = add i32 %v1_805372f, add (i32 ptrtoint (i8* @global_var_8056960.48 to i32), i32 -4)
  %v2_8053736 = inttoptr i32 %v1_8053736 to i32*
  %v3_8053736 = load i32, i32* %v2_8053736, align 4
  store i32 %v3_8053736, i32* %eax.global-to-local, align 4
  %v3_8053739 = inttoptr i32 %arg1 to i32*
  store i32 %v3_8053736, i32* %v3_8053739, align 4
  %v0_805373c = load i32, i32* @ecx, align 4
  %v1_805373c = load i32, i32* @edx, align 4
  %v2_805373c = add i32 %v1_805373c, -4
  %v3_805373c = inttoptr i32 %v2_805373c to i32*
  store i32 %v0_805373c, i32* %v3_805373c, align 4
  br label %dec_label_pc_805385c

dec_label_pc_8053744:                             ; preds = %dec_label_pc_80536ec
  %v1_8053744 = trunc i32 %v3_8053718 to i8
  %v2_8053744 = and i8 %v1_8053744, 2
  %v3_8053744 = icmp eq i8 %v2_8053744, 0
  %v5_8053744 = zext i8 %v2_8053744 to i32
  %v7_8053744 = and i32 %v3_8053718, -256
  %v8_8053744 = or i32 %v5_8053744, %v7_8053744
  store i32 %v8_8053744, i32* @edx, align 4
  %v1_8053747 = icmp eq i1 %v3_8053744, false
  br i1 %v1_8053747, label %dec_label_pc_805383c, label %dec_label_pc_805374d

dec_label_pc_805374d:                             ; preds = %dec_label_pc_8053744
  %v1_805374d = or i32 %v1_8053710, 1
  %v3_805374d = trunc i32 %v1_805374d to i8
  store i32 %v1_805374d, i32* %eax.global-to-local, align 4
  %v2_8053750 = add i32 %v1_805371d, %v1_805370d
  store i32 %v2_8053750, i32* @esi, align 4
  store i8 %v3_805374d, i8* @global_var_8056960.48, align 32
  %v1_8053758 = add i32 %v2_8053750, 4
  %v2_8053758 = inttoptr i32 %v1_8053758 to i32*
  %v3_8053758 = load i32, i32* %v2_8053758, align 4
  store i32 %v3_8053758, i32* %eax.global-to-local, align 4
  %v2_805375f = inttoptr i32 %v1_8053718 to i8*
  %v3_805375f = load i8, i8* %v2_805375f, align 1
  %v4_805375f = urem i8 %v3_805375f, 2
  %v5_805375f = icmp eq i8 %v4_805375f, 0
  %v1_8053763 = icmp eq i1 %v5_805375f, false
  br i1 %v1_8053763, label %dec_label_pc_8053786, label %dec_label_pc_8053765

dec_label_pc_8053765:                             ; preds = %dec_label_pc_805374d
  %v2_8053765 = inttoptr i32 %v1_805370d to i32*
  %v3_8053765 = load i32, i32* %v2_8053765, align 4
  store i32 %v3_8053765, i32* @ebp, align 4
  %v2_805376a = sub i32 %v1_805370d, %v3_8053765
  store i32 %v2_805376a, i32* %eax.global-to-local, align 4
  %v1_805376c = add i32 %v2_805376a, 8
  %v2_805376c = inttoptr i32 %v1_805376c to i32*
  %v3_805376c = load i32, i32* %v2_805376c, align 4
  store i32 %v3_805376c, i32* @edi, align 4
  %v1_805376f = add i32 %v2_805376a, 12
  %v2_805376f = inttoptr i32 %v1_805376f to i32*
  %v3_805376f = load i32, i32* %v2_805376f, align 4
  store i32 %v3_805376f, i32* @edx, align 4
  %v1_8053772 = add i32 %v3_805376c, 12
  %v2_8053772 = inttoptr i32 %v1_8053772 to i32*
  %v3_8053772 = load i32, i32* %v2_8053772, align 4
  store i32 %v3_8053772, i32* @ecx, align 4
  %v12_8053775 = icmp eq i32 %v3_8053772, %v2_805376a
  %v1_8053777 = icmp eq i1 %v12_8053775, false
  br i1 %v1_8053777, label %dec_label_pc_80537b5, label %dec_label_pc_8053779

dec_label_pc_8053779:                             ; preds = %dec_label_pc_8053765
  %v1_8053779 = add i32 %v3_805376f, 8
  %v2_8053779 = inttoptr i32 %v1_8053779 to i32*
  %v3_8053779 = load i32, i32* %v2_8053779, align 4
  %v15_8053779 = icmp eq i32 %v3_8053779, %v3_8053772
  %v1_805377c = icmp eq i1 %v15_8053779, false
  br i1 %v1_805377c, label %dec_label_pc_80537b5, label %dec_label_pc_805377e

dec_label_pc_805377e:                             ; preds = %dec_label_pc_8053779
  %v2_805377e = add i32 %v3_8053765, %v1_805371d
  store i32 %v2_805377e, i32* @ebx, align 4
  store i32 %v3_805376f, i32* %v2_8053772, align 4
  %v0_8053783 = load i32, i32* @edi, align 4
  %v1_8053783 = load i32, i32* @edx, align 4
  %v2_8053783 = add i32 %v1_8053783, 8
  %v3_8053783 = inttoptr i32 %v2_8053783 to i32*
  store i32 %v0_8053783, i32* %v3_8053783, align 4
  %v0_805378d.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8053786

dec_label_pc_8053786:                             ; preds = %dec_label_pc_805374d, %dec_label_pc_805377e
  %v1_8053799 = phi i32 [ %v2_8053750, %dec_label_pc_805374d ], [ %v0_805378d.pre, %dec_label_pc_805377e ]
  %v1_805378a = and i32 %v3_8053758, -4
  store i32 %v1_805378a, i32* @ebp, align 4
  %v1_805378d = load i32, i32* @global_var_805698c.49, align 4
  %v12_805378d = icmp eq i32 %v1_8053799, %v1_805378d
  br i1 %v12_805378d, label %dec_label_pc_80537e7, label %dec_label_pc_8053795

dec_label_pc_8053795:                             ; preds = %dec_label_pc_8053786
  %v2_8053795 = add i32 %v1_8053799, 4
  %v3_8053795 = add i32 %v2_8053795, %v1_805378a
  %v4_8053795 = inttoptr i32 %v3_8053795 to i32*
  %v5_8053795 = load i32, i32* %v4_8053795, align 4
  store i32 %v5_8053795, i32* %eax.global-to-local, align 4
  %v3_8053799 = inttoptr i32 %v2_8053795 to i32*
  store i32 %v1_805378a, i32* %v3_8053799, align 4
  %v0_805379c = load i32, i32* %eax.global-to-local, align 4
  %v1_805379c = urem i32 %v0_805379c, 2
  %v2_805379c = icmp eq i32 %v1_805379c, 0
  store i32 %v1_805379c, i32* %eax.global-to-local, align 4
  %v1_80537a1 = icmp eq i1 %v2_805379c, false
  br i1 %v1_80537a1, label %dec_label_pc_80537c2, label %dec_label_pc_80537a3

dec_label_pc_80537a3:                             ; preds = %dec_label_pc_8053795
  %v0_80537a3 = load i32, i32* @esi, align 4
  %v1_80537a3 = add i32 %v0_80537a3, 8
  %v2_80537a3 = inttoptr i32 %v1_80537a3 to i32*
  %v3_80537a3 = load i32, i32* %v2_80537a3, align 4
  store i32 %v3_80537a3, i32* @edx, align 4
  %v1_80537a6 = add i32 %v0_80537a3, 12
  %v2_80537a6 = inttoptr i32 %v1_80537a6 to i32*
  %v3_80537a6 = load i32, i32* %v2_80537a6, align 4
  store i32 %v3_80537a6, i32* %eax.global-to-local, align 4
  %v1_80537a9 = add i32 %v3_80537a3, 12
  %v2_80537a9 = inttoptr i32 %v1_80537a9 to i32*
  %v3_80537a9 = load i32, i32* %v2_80537a9, align 4
  store i32 %v3_80537a9, i32* @edi, align 4
  %v12_80537ac = icmp eq i32 %v3_80537a9, %v0_80537a3
  %v1_80537ae = icmp eq i1 %v12_80537ac, false
  br i1 %v1_80537ae, label %dec_label_pc_80537b5, label %dec_label_pc_80537b0

dec_label_pc_80537b0:                             ; preds = %dec_label_pc_80537a3
  %v1_80537b0 = add i32 %v3_80537a6, 8
  %v2_80537b0 = inttoptr i32 %v1_80537b0 to i32*
  %v3_80537b0 = load i32, i32* %v2_80537b0, align 4
  %v15_80537b0 = icmp eq i32 %v3_80537b0, %v3_80537a9
  br i1 %v15_80537b0, label %dec_label_pc_80537ba, label %dec_label_pc_80537b5

dec_label_pc_80537b5:                             ; preds = %dec_label_pc_80537b0, %dec_label_pc_80537a3, %dec_label_pc_8053779, %dec_label_pc_8053765
  %v0_80537b5 = call i32 @function_8053875()
  store i32 %v0_80537b5, i32* %eax.global-to-local, align 4
  %v1_80537ba.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80537ba

dec_label_pc_80537ba:                             ; preds = %dec_label_pc_80537b0, %dec_label_pc_80537b5
  %v1_80537ba = phi i32 [ %v3_80537a3, %dec_label_pc_80537b0 ], [ %v1_80537ba.pre, %dec_label_pc_80537b5 ]
  %v0_80537ba = phi i32 [ %v3_80537a6, %dec_label_pc_80537b0 ], [ %v0_80537b5, %dec_label_pc_80537b5 ]
  %v2_80537ba = add i32 %v1_80537ba, 12
  %v3_80537ba = inttoptr i32 %v2_80537ba to i32*
  store i32 %v0_80537ba, i32* %v3_80537ba, align 4
  %v0_80537bd = load i32, i32* @edx, align 4
  %v1_80537bd = load i32, i32* %eax.global-to-local, align 4
  %v2_80537bd = add i32 %v1_80537bd, 8
  %v3_80537bd = inttoptr i32 %v2_80537bd to i32*
  store i32 %v0_80537bd, i32* %v3_80537bd, align 4
  %v0_80537c0 = load i32, i32* @ebx, align 4
  %v1_80537c0 = load i32, i32* @ebp, align 4
  %v2_80537c0 = add i32 %v1_80537c0, %v0_80537c0
  store i32 %v2_80537c0, i32* @ebx, align 4
  br label %dec_label_pc_80537c2

dec_label_pc_80537c2:                             ; preds = %dec_label_pc_8053795, %dec_label_pc_80537ba
  %v0_80537c2 = load i32, i32* @global_var_805699c.67, align 4
  store i32 %v0_80537c2, i32* %eax.global-to-local, align 4
  %v0_80537c7 = load i32, i32* @ecx, align 4
  %v1_80537c7 = add i32 %v0_80537c7, 12
  %v2_80537c7 = inttoptr i32 %v1_80537c7 to i32*
  store i32 ptrtoint (i32* @global_var_8056994.51 to i32), i32* %v2_80537c7, align 4
  %v0_80537ce = load i32, i32* %eax.global-to-local, align 4
  %v1_80537ce = load i32, i32* @ecx, align 4
  %v2_80537ce = add i32 %v1_80537ce, 8
  %v3_80537ce = inttoptr i32 %v2_80537ce to i32*
  store i32 %v0_80537ce, i32* %v3_80537ce, align 4
  %v0_80537d1 = load i32, i32* @ebx, align 4
  %v1_80537d1 = load i32, i32* @ecx, align 4
  %v3_80537d1 = add i32 %v1_80537d1, %v0_80537d1
  %v4_80537d1 = inttoptr i32 %v3_80537d1 to i32*
  store i32 %v0_80537d1, i32* %v4_80537d1, align 4
  %v0_80537d4 = load i32, i32* @ecx, align 4
  %v1_80537d4 = load i32, i32* %eax.global-to-local, align 4
  %v2_80537d4 = add i32 %v1_80537d4, 12
  %v3_80537d4 = inttoptr i32 %v2_80537d4 to i32*
  store i32 %v0_80537d4, i32* %v3_80537d4, align 4
  %v0_80537d7 = load i32, i32* @ebx, align 4
  %v1_80537d9 = or i32 %v0_80537d7, 1
  store i32 %v1_80537d9, i32* %eax.global-to-local, align 4
  %v0_80537dc = load i32, i32* @ecx, align 4
  store i32 %v0_80537dc, i32* @global_var_805699c.67, align 4
  %v2_80537e2 = add i32 %v0_80537dc, 4
  %v3_80537e2 = inttoptr i32 %v2_80537e2 to i32*
  store i32 %v1_80537d9, i32* %v3_80537e2, align 4
  br label %dec_label_pc_80537f7

dec_label_pc_80537e7:                             ; preds = %dec_label_pc_8053786
  %v0_80537e7 = load i32, i32* @ebx, align 4
  %v2_80537e7 = add i32 %v0_80537e7, %v1_805378a
  store i32 %v2_80537e7, i32* @ebx, align 4
  %v1_80537eb = or i32 %v2_80537e7, 1
  store i32 %v1_80537eb, i32* %eax.global-to-local, align 4
  %v1_80537ee = load i32, i32* @ecx, align 4
  %v2_80537ee = add i32 %v1_80537ee, 4
  %v3_80537ee = inttoptr i32 %v2_80537ee to i32*
  store i32 %v1_80537eb, i32* %v3_80537ee, align 4
  %v0_80537f1 = load i32, i32* @ecx, align 4
  store i32 %v0_80537f1, i32* @global_var_805698c.49, align 4
  br label %dec_label_pc_80537f7

dec_label_pc_80537f7:                             ; preds = %dec_label_pc_80537c2, %dec_label_pc_80537e7
  %v0_80537f7 = load i32, i32* @ebx, align 4
  %tmp21 = icmp ult i32 %v0_80537f7, 131072
  br i1 %tmp21, label %dec_label_pc_805385c, label %dec_label_pc_80537ff

dec_label_pc_80537ff:                             ; preds = %dec_label_pc_80537f7
  %v0_80537ff = load i8, i8* @global_var_8056960.48, align 32
  %v1_80537ff = and i8 %v0_80537ff, 2
  %v2_80537ff = icmp eq i8 %v1_80537ff, 0
  br i1 %v2_80537ff, label %dec_label_pc_8053818, label %dec_label_pc_8053808

dec_label_pc_8053808:                             ; preds = %dec_label_pc_80537ff
  %v2_8053810 = call i32 @function_8053531(i32* bitcast (i8* @global_var_8056960.48 to i32*))
  store i32 %v2_8053810, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053818

dec_label_pc_8053818:                             ; preds = %dec_label_pc_80537ff, %dec_label_pc_8053808
  %v0_8053818 = load i32, i32* @global_var_805698c.49, align 4
  store i32 %v0_8053818, i32* %eax.global-to-local, align 4
  %v1_805381d = add i32 %v0_8053818, 4
  %v2_805381d = inttoptr i32 %v1_805381d to i32*
  %v3_805381d = load i32, i32* %v2_805381d, align 4
  %v1_8053820 = and i32 %v3_805381d, -4
  store i32 %v1_8053820, i32* %eax.global-to-local, align 4
  %v1_8053823 = load i32, i32* @global_var_8056ca4.65, align 4
  %v7_8053823 = icmp ult i32 %v1_8053820, %v1_8053823
  br i1 %v7_8053823, label %dec_label_pc_805385c, label %dec_label_pc_805382b

dec_label_pc_805382b:                             ; preds = %dec_label_pc_8053818
  store i32 ptrtoint (i8* @global_var_8056960.48 to i32), i32* @edx, align 4
  %v0_8053830 = load i32, i32* @global_var_8056ca8.63, align 8
  store i32 %v0_8053830, i32* @eax, align 4
  %v0_8053835 = call i32 @function_80534a4()
  store i32 %v0_8053835, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805385c

dec_label_pc_805383c:                             ; preds = %dec_label_pc_8053744
  %v2_805383c = inttoptr i32 %v1_805370d to i32*
  %v3_805383c = load i32, i32* %v2_805383c, align 4
  %v0_805383f = load i32, i32* @global_var_8056cb0.56, align 16
  %v1_805383f = add i32 %v0_805383f, -1
  store i32 %v1_805383f, i32* @global_var_8056cb0.56, align 16
  %v2_8053845 = add i32 %v3_805383c, %v1_805371d
  store i32 %v2_8053845, i32* %eax.global-to-local, align 4
  %v2_8053848 = sub i32 %v1_805370d, %v3_805383c
  %v0_805384e = load i32, i32* @global_var_8056cc4.59, align 4
  %v2_805384e = sub i32 %v0_805384e, %v2_8053845
  store i32 %v2_805384e, i32* @global_var_8056cc4.59, align 4
  %v4_8053854 = inttoptr i32 %v2_8053848 to i32*
  %v5_8053854 = call i32 @function_80545a5(i32* %v4_8053854, i32 %v2_8053845, i32 %v1_805371d, i32 %v1_805371d)
  store i32 %v5_8053854, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805385c

dec_label_pc_805385c:                             ; preds = %dec_label_pc_8053818, %dec_label_pc_80537f7, %dec_label_pc_805382b, %dec_label_pc_8053724, %dec_label_pc_805383c
  store i32 %v2_80536f7, i32* @eax, align 4
  %v2_8053865 = call i32 @function_8053e40(i32 %v2_80536f7, i32 1)
  store i32 %v2_8053865, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805386d

dec_label_pc_805386d:                             ; preds = %dec_label_pc_80536d9, %dec_label_pc_805385c
  %.0 = phi i32 [ undef, %dec_label_pc_80536d9 ], [ %v2_8053865, %dec_label_pc_805385c ]
  store i32 %v0_80536dc, i32* @ebx, align 4
  store i32 %v0_80536db, i32* @esi, align 4
  store i32 %v0_80536da, i32* @edi, align 4
  store i32 %v0_80536d9, i32* @ebp, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v3_805383c, { 1, 0 }
  uselistorder i32 %v0_80537d1, { 1, 0 }
  uselistorder i32 %v1_805379c, { 1, 0 }
  uselistorder i32 %v2_8053795, { 1, 0 }
  uselistorder i32 %v1_805378a, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8053799, { 1, 0 }
  uselistorder i32 %v1_805371d, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 %v3_8053718, { 1, 2, 0, 3 }
  uselistorder i32 %v1_805370d, { 1, 4, 2, 3, 0, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* bitcast (i8* @global_var_8056960.48 to i32*), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_8056994.51 to i32), { 1, 2, 3, 4, 5, 6, 7, 0, 8 }
  uselistorder i32* @global_var_805698c.49, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32 ptrtoint (i8* @global_var_8056960.48 to i32), { 7, 6, 0, 5, 4, 1, 3, 2 }
  uselistorder i8* @global_var_8056960.48, { 4, 7, 6, 5, 3, 0, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_80565c0.47 to i32), { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %arg1, { 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_805386d, { 1, 0 }
  uselistorder label %dec_label_pc_805385c, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8053818, { 1, 0 }
  uselistorder label %dec_label_pc_80537f7, { 1, 0 }
  uselistorder label %dec_label_pc_80537c2, { 1, 0 }
  uselistorder label %dec_label_pc_80537ba, { 1, 0 }
  uselistorder label %dec_label_pc_8053786, { 1, 0 }
}

define i32 @function_8053875() local_unnamed_addr {
dec_label_pc_8053890.lr.ph:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %v1_8053881 = call i32 @function_8053e3d(i32 ptrtoint (i32* @global_var_80565d8.68 to i32))
  %v12_805388b = ptrtoint i32* %stack_var_-284 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  %v4_805389048 = add i32 %v12_805388b, 276
  %v5_805389049 = inttoptr i32 %v4_805389048 to i32*
  store i32 0, i32* %v5_805389049, align 4
  %v0_805389b50 = load i32, i32* %eax.global-to-local, align 4
  %v1_805389b51 = add i32 %v0_805389b50, -1
  %v9_805389b52 = icmp slt i32 %v1_805389b51, 0
  store i32 %v1_805389b51, i32* %eax.global-to-local, align 4
  %v1_805389c53 = icmp eq i1 %v9_805389b52, false
  br i1 %v1_805389c53, label %dec_label_pc_8053890.dec_label_pc_8053890_crit_edge, label %dec_label_pc_805389e

dec_label_pc_8053890.dec_label_pc_8053890_crit_edge: ; preds = %dec_label_pc_8053890.lr.ph, %dec_label_pc_8053890.dec_label_pc_8053890_crit_edge
  %v1_805389b54 = phi i32 [ %v1_805389b, %dec_label_pc_8053890.dec_label_pc_8053890_crit_edge ], [ %v1_805389b51, %dec_label_pc_8053890.lr.ph ]
  %v0_8053890.pre = load i32, i32* @esp, align 4
  %v2_8053890 = mul i32 %v1_805389b54, 4
  %v3_8053890 = add i32 %v0_8053890.pre, 152
  %v4_8053890 = add i32 %v3_8053890, %v2_8053890
  %v5_8053890 = inttoptr i32 %v4_8053890 to i32*
  store i32 0, i32* %v5_8053890, align 4
  %v0_805389b = load i32, i32* %eax.global-to-local, align 4
  %v1_805389b = add i32 %v0_805389b, -1
  %v9_805389b = icmp slt i32 %v1_805389b, 0
  store i32 %v1_805389b, i32* %eax.global-to-local, align 4
  %v1_805389c = icmp eq i1 %v9_805389b, false
  br i1 %v1_805389c, label %dec_label_pc_8053890.dec_label_pc_8053890_crit_edge, label %dec_label_pc_805389e

dec_label_pc_805389e:                             ; preds = %dec_label_pc_8053890.dec_label_pc_8053890_crit_edge, %dec_label_pc_8053890.lr.ph
  %v0_805389e = load i32, i32* @ebx, align 4
  %v2_80538a2 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_80538a2, i32* @ebx, align 4
  %v4_80538aa = call i32 @function_80528ce(i32 %v2_80538a2, i32 6, i32 %v0_805389e, i32 %v0_805389e)
  store i32 %v4_80538aa, i32* %eax.global-to-local, align 4
  %v1_80538b2 = icmp eq i32 %v4_80538aa, 0
  %v1_80538b4 = icmp eq i1 %v1_80538b2, false
  br i1 %v1_80538b4, label %dec_label_pc_80538c4, label %dec_label_pc_80538b6

dec_label_pc_80538b6:                             ; preds = %dec_label_pc_805389e
  %v3_80538bc = bitcast i32* %stack_var_-132 to %_TYPEDEF_sigset_t*
  %v4_80538bc = call i32 @function_80521ed(i32 1, %_TYPEDEF_sigset_t* %v3_80538bc, i32 0)
  store i32 %v4_80538bc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80538c4

dec_label_pc_80538c4:                             ; preds = %dec_label_pc_805389e, %dec_label_pc_80538b6
  %v2_80538fc23 = phi i32 [ %v4_80538aa, %dec_label_pc_805389e ], [ %v4_80538bc, %dec_label_pc_80538b6 ]
  %v0_80538c4 = load i8, i8* @global_var_80566d4.69, align 4
  %v1_80538c4 = icmp eq i8 %v0_80538c4, 0
  %v1_80538cb = icmp eq i1 %v1_80538c4, false
  br i1 %v1_80538cb, label %dec_label_pc_80538fc, label %dec_label_pc_80538cd

dec_label_pc_80538cd:                             ; preds = %dec_label_pc_80538c4
  store i8 1, i8* @global_var_80566d4.69, align 4
  br label %dec_label_pc_80538d4

dec_label_pc_80538d4:                             ; preds = %dec_label_pc_805393b, %dec_label_pc_80538cd
  %v1_80538dc = call i32 @function_8053e3d(i32 ptrtoint (i32* @global_var_80565d8.68 to i32))
  store i32 %v1_80538dc, i32* %eax.global-to-local, align 4
  %v1_80538e8 = call i32 @function_80527a0(i32 6)
  store i32 %v1_80538e8, i32* %eax.global-to-local, align 4
  %v1_80538f4 = call i32 @function_8053e3d(i32 ptrtoint (i32* @global_var_80565d8.68 to i32))
  store i32 %v1_80538f4, i32* %eax.global-to-local, align 4
  %v0_80538fc.pre = load i8, i8* @global_var_80566d4.69, align 4
  br label %dec_label_pc_80538fc

dec_label_pc_80538fc:                             ; preds = %dec_label_pc_80538c4, %dec_label_pc_80538d4
  %v2_80538fc = phi i32 [ %v2_80538fc23, %dec_label_pc_80538c4 ], [ %v1_80538f4, %dec_label_pc_80538d4 ]
  %v0_80538fc = phi i8 [ %v0_80538c4, %dec_label_pc_80538c4 ], [ %v0_80538fc.pre, %dec_label_pc_80538d4 ]
  %v1_80538fc = zext i8 %v0_80538fc to i32
  %v3_80538fc = and i32 %v2_80538fc, -256
  %v4_80538fc = or i32 %v1_80538fc, %v3_80538fc
  store i32 %v4_80538fc, i32* %eax.global-to-local, align 4
  %v10_8053901 = icmp eq i8 %v0_80538fc, 1
  %v1_8053903 = icmp eq i1 %v10_8053901, false
  br i1 %v1_8053903, label %dec_label_pc_805395d, label %dec_label_pc_8053930.lr.ph

dec_label_pc_8053930.lr.ph:                       ; preds = %dec_label_pc_80538fc
  store i8 2, i8* @global_var_80566d4.69, align 4
  %v2_8053914 = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_8053914, i32* %eax.global-to-local, align 4
  %v3_8053919 = bitcast i32* %stack_var_-272 to i8*
  %v4_8053919 = call i32 @function_805250a(i8* %v3_8053919, i32 0, i32 140)
  store i32 0, i32* %stack_var_-272, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  %v4_805393040 = add i32 %v12_805388b, 140
  %v5_805393041 = inttoptr i32 %v4_805393040 to i32*
  store i32 -1, i32* %v5_805393041, align 4
  %v0_805393842 = load i32, i32* %eax.global-to-local, align 4
  %v1_805393843 = add i32 %v0_805393842, -1
  %v9_805393844 = icmp slt i32 %v1_805393843, 0
  store i32 %v1_805393843, i32* %eax.global-to-local, align 4
  %v1_805393945 = icmp eq i1 %v9_805393844, false
  br i1 %v1_805393945, label %dec_label_pc_8053930.dec_label_pc_8053930_crit_edge, label %dec_label_pc_805393b

dec_label_pc_8053930.dec_label_pc_8053930_crit_edge: ; preds = %dec_label_pc_8053930.lr.ph, %dec_label_pc_8053930.dec_label_pc_8053930_crit_edge
  %v1_805393846 = phi i32 [ %v1_8053938, %dec_label_pc_8053930.dec_label_pc_8053930_crit_edge ], [ %v1_805393843, %dec_label_pc_8053930.lr.ph ]
  %v0_8053930.pre = load i32, i32* @esp, align 4
  %v2_8053930 = mul i32 %v1_805393846, 4
  %v3_8053930 = add i32 %v0_8053930.pre, 16
  %v4_8053930 = add i32 %v3_8053930, %v2_8053930
  %v5_8053930 = inttoptr i32 %v4_8053930 to i32*
  store i32 -1, i32* %v5_8053930, align 4
  %v0_8053938 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053938 = add i32 %v0_8053938, -1
  %v9_8053938 = icmp slt i32 %v1_8053938, 0
  store i32 %v1_8053938, i32* %eax.global-to-local, align 4
  %v1_8053939 = icmp eq i1 %v9_8053938, false
  br i1 %v1_8053939, label %dec_label_pc_8053930.dec_label_pc_8053930_crit_edge, label %dec_label_pc_805393b

dec_label_pc_805393b:                             ; preds = %dec_label_pc_8053930.dec_label_pc_8053930_crit_edge, %dec_label_pc_8053930.lr.ph
  store i32 %v2_8053914, i32* %eax.global-to-local, align 4
  %v4_8053950 = call i32 @function_805407f(i32 6, i32* nonnull %stack_var_-272, i32 0)
  store i32 %v4_8053950, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80538d4

dec_label_pc_805395d:                             ; preds = %dec_label_pc_80538fc
  %v10_805395d = icmp eq i8 %v0_80538fc, 2
  %v1_805395f = icmp eq i1 %v10_805395d, false
  br i1 %v1_805395f, label %dec_label_pc_8053969, label %dec_label_pc_8053969.thread

dec_label_pc_8053969.thread:                      ; preds = %dec_label_pc_805395d
  store i8 3, i8* @global_var_80566d4.69, align 4
  br label %dec_label_pc_8053972

dec_label_pc_8053969:                             ; preds = %dec_label_pc_805395d
  %v9_8053969 = icmp eq i8 %v0_80538fc, 3
  %v1_8053970 = icmp eq i1 %v9_8053969, false
  br i1 %v1_8053970, label %dec_label_pc_8053983, label %dec_label_pc_8053972

dec_label_pc_8053972:                             ; preds = %dec_label_pc_8053969.thread, %dec_label_pc_8053969
  store i8 4, i8* @global_var_80566d4.69, align 4
  %v1_805397e = call i32 @function_80541e0(i32 127)
  unreachable

dec_label_pc_8053983:                             ; preds = %dec_label_pc_8053969, %dec_label_pc_8053983
  br label %dec_label_pc_8053983

; uselistorder directives
  uselistorder i32 %v1_8053938, { 2, 1, 0 }
  uselistorder i32 %v1_805389b, { 2, 1, 0 }
  uselistorder i32* %stack_var_-272, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 13, 14, 15, 16, 4, 5, 6, 7, 8, 9, 10, 12, 11, 0, 17, 18 }
  uselistorder i8 3, { 0, 2, 1 }
  uselistorder i8 2, { 8, 11, 12, 1, 13, 2, 3, 4, 5, 6, 14, 15, 7, 0, 10, 16, 9 }
  uselistorder i8* @global_var_80566d4.69, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8053983, { 1, 0 }
  uselistorder label %dec_label_pc_8053972, { 1, 0 }
  uselistorder label %dec_label_pc_8053930.dec_label_pc_8053930_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_80538fc, { 1, 0 }
  uselistorder label %dec_label_pc_80538c4, { 1, 0 }
  uselistorder label %dec_label_pc_8053890.dec_label_pc_8053890_crit_edge, { 1, 0 }
}

define i32 @function_8053ac9(i32 %arg1) local_unnamed_addr {
dec_label_pc_8053ac9:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v2_8053adc = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8053adc, i32* @ebx, align 4
  %v2_8053ae1 = call i32 @function_8053e40(i32 %v2_8053adc, i32 134561341)
  %v1_8053aed = call i32 @function_8053e3d(i32 ptrtoint (i32* @global_var_80565f0.70 to i32))
  %v0_8053af2 = load i32, i32* @global_var_80566d8.71, align 8
  store i32 %v0_8053af2, i32* @eax, align 4
  %v1_8053afa = icmp eq i32 %v0_8053af2, 0
  br i1 %v1_8053afa, label %dec_label_pc_8053b07, label %dec_label_pc_8053afe

dec_label_pc_8053afe:                             ; preds = %dec_label_pc_8053ac9
  %v0_8053b01 = load i32, i32* @esi, align 4
  %v1_8053b02 = call i32 @unknown_0(i32 %v0_8053b01)
  store i32 %v1_8053b02, i32* @eax, align 4
  br label %dec_label_pc_8053b07

dec_label_pc_8053b07:                             ; preds = %dec_label_pc_8053ac9, %dec_label_pc_8053afe
  %v2_8053b0c = call i32 @function_8053e40(i32 %v2_8053adc, i32 1)
  %v0_8053b11 = call i32 @function_8053dfe()
  %v0_8053b2a = load i32, i32* @esi, align 4
  %v1_8053b2b = call i32 @function_80541e0(i32 %v0_8053b2a)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @function_80541e0, { 1, 0 }
  uselistorder i32 (i32)* @function_8053e3d, { 6, 5, 4, 3, 2, 7, 0, 1, 10, 9, 8 }
  uselistorder i32 (i32, i32)* @function_8053e40, { 7, 6, 5, 4, 9, 8, 3, 0, 2, 1, 13, 12, 11, 10 }
  uselistorder label %dec_label_pc_8053b07, { 1, 0 }
}

define i32 @function_8053b30() local_unnamed_addr {
dec_label_pc_8053b30:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp32 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-420 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-460 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-444 = alloca i32, align 4
  %v0_8053b30 = load i32, i32* @ebp, align 4
  %v0_8053b31 = load i32, i32* @edi, align 4
  %v0_8053b32 = load i32, i32* @esi, align 4
  %v0_8053b33 = load i32, i32* @ebx, align 4
  store i32 32, i32* %eax.global-to-local, align 4
  store i32 %tmp32, i32* %edx.global-to-local, align 4
  %v1_8053b46 = icmp eq i32 %tmp32, 0
  %v1_8053b48 = icmp eq i1 %v1_8053b46, false
  br i1 %v1_8053b48, label %dec_label_pc_8053b4f.lr.ph, label %dec_label_pc_8053ca7

dec_label_pc_8053b4f.lr.ph:                       ; preds = %dec_label_pc_8053b30
  %v15_8053b34 = ptrtoint i32* %stack_var_-444 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  %v4_8053b4f56 = add i32 %v15_8053b34, 416
  %v5_8053b4f57 = inttoptr i32 %v4_8053b4f56 to i32*
  store i32 0, i32* %v5_8053b4f57, align 4
  %v0_8053b5a58 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053b5a59 = add i32 %v0_8053b5a58, -1
  %v9_8053b5a60 = icmp slt i32 %v1_8053b5a59, 0
  store i32 %v1_8053b5a59, i32* %eax.global-to-local, align 4
  %v1_8053b5b61 = icmp eq i1 %v9_8053b5a60, false
  br i1 %v1_8053b5b61, label %dec_label_pc_8053b4f.dec_label_pc_8053b4f_crit_edge, label %dec_label_pc_8053b5d

dec_label_pc_8053b4f.dec_label_pc_8053b4f_crit_edge: ; preds = %dec_label_pc_8053b4f.lr.ph, %dec_label_pc_8053b4f.dec_label_pc_8053b4f_crit_edge
  %v1_8053b5a62 = phi i32 [ %v1_8053b5a, %dec_label_pc_8053b4f.dec_label_pc_8053b4f_crit_edge ], [ %v1_8053b5a59, %dec_label_pc_8053b4f.lr.ph ]
  %v0_8053b4f.pre = load i32, i32* @esp, align 4
  %v2_8053b4f = mul i32 %v1_8053b5a62, 4
  %v3_8053b4f = add i32 %v0_8053b4f.pre, 292
  %v4_8053b4f = add i32 %v3_8053b4f, %v2_8053b4f
  %v5_8053b4f = inttoptr i32 %v4_8053b4f to i32*
  store i32 0, i32* %v5_8053b4f, align 4
  %v0_8053b5a = load i32, i32* %eax.global-to-local, align 4
  %v1_8053b5a = add i32 %v0_8053b5a, -1
  %v9_8053b5a = icmp slt i32 %v1_8053b5a, 0
  store i32 %v1_8053b5a, i32* %eax.global-to-local, align 4
  %v1_8053b5b = icmp eq i1 %v9_8053b5a, false
  br i1 %v1_8053b5b, label %dec_label_pc_8053b4f.dec_label_pc_8053b4f_crit_edge, label %dec_label_pc_8053b5d

dec_label_pc_8053b5d:                             ; preds = %dec_label_pc_8053b4f.dec_label_pc_8053b4f_crit_edge, %dec_label_pc_8053b4f.lr.ph
  %v1_8053b5a.lcssa = phi i32 [ %v1_8053b5a59, %dec_label_pc_8053b4f.lr.ph ], [ %v1_8053b5a, %dec_label_pc_8053b4f.dec_label_pc_8053b4f_crit_edge ]
  store i32 %tmp32, i32* %stack_var_-24, align 4
  %v2_8053b73 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_8053b73, i32* @ebx, align 4
  store i32 %v2_8053b73, i32* %stack_var_-460, align 4
  %v4_8053b7b = call i32 @function_80528ce(i32 %v2_8053b73, i32 17, i32 %v1_8053b5a.lcssa, i32 %v1_8053b5a.lcssa)
  store i32 %v4_8053b7b, i32* %eax.global-to-local, align 4
  %v2_8053b83 = icmp slt i32 %v4_8053b7b, 0
  br i1 %v2_8053b83, label %dec_label_pc_8053cab, label %dec_label_pc_8053b8b

dec_label_pc_8053b8b:                             ; preds = %dec_label_pc_8053b5d
  %v2_8053b8c = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_8053b8c, i32* @esi, align 4
  store i32 0, i32* %stack_var_-460, align 4
  %v3_8053b97 = bitcast i32* %stack_var_-152 to %_TYPEDEF_sigset_t*
  %v4_8053b97 = call i32 @function_80521ed(i32 0, %_TYPEDEF_sigset_t* %v3_8053b97, i32 %v2_8053b8c)
  store i32 %v4_8053b97, i32* %eax.global-to-local, align 4
  %v1_8053b9f = icmp eq i32 %v4_8053b97, 0
  %v1_8053ba1 = icmp eq i1 %v1_8053b9f, false
  br i1 %v1_8053ba1, label %dec_label_pc_8053cab, label %dec_label_pc_8053ba7

dec_label_pc_8053ba7:                             ; preds = %dec_label_pc_8053b8b
  store i32 %v2_8053b8c, i32* %stack_var_-460, align 4
  %v4_8053bac = call i32 @function_80528aa(i32 %v2_8053b8c, i32 17, i32 %v4_8053b97, i32 %v4_8053b97)
  store i32 %v4_8053bac, i32* %eax.global-to-local, align 4
  store i32 32, i32* %edx.global-to-local, align 4
  %v1_8053bb9 = icmp eq i32 %v4_8053bac, 0
  br i1 %v1_8053bb9, label %dec_label_pc_8053bc2.lr.ph, label %dec_label_pc_8053c75

dec_label_pc_8053bc2.lr.ph:                       ; preds = %dec_label_pc_8053ba7
  store i32 31, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v5_8053b4f57, align 4
  %v0_8053bcd50 = load i32, i32* %edx.global-to-local, align 4
  %v1_8053bcd51 = add i32 %v0_8053bcd50, -1
  %v9_8053bcd52 = icmp slt i32 %v1_8053bcd51, 0
  store i32 %v1_8053bcd51, i32* %edx.global-to-local, align 4
  %v1_8053bce53 = icmp eq i1 %v9_8053bcd52, false
  br i1 %v1_8053bce53, label %dec_label_pc_8053bc2.dec_label_pc_8053bc2_crit_edge, label %dec_label_pc_8053bd0

dec_label_pc_8053bc2.dec_label_pc_8053bc2_crit_edge: ; preds = %dec_label_pc_8053bc2.lr.ph, %dec_label_pc_8053bc2.dec_label_pc_8053bc2_crit_edge
  %v1_8053bcd54 = phi i32 [ %v1_8053bcd, %dec_label_pc_8053bc2.dec_label_pc_8053bc2_crit_edge ], [ %v1_8053bcd51, %dec_label_pc_8053bc2.lr.ph ]
  %v0_8053bc2.pre = load i32, i32* @esp, align 4
  %v2_8053bc2 = mul i32 %v1_8053bcd54, 4
  %v3_8053bc2 = add i32 %v0_8053bc2.pre, 292
  %v4_8053bc2 = add i32 %v3_8053bc2, %v2_8053bc2
  %v5_8053bc2 = inttoptr i32 %v4_8053bc2 to i32*
  store i32 0, i32* %v5_8053bc2, align 4
  %v0_8053bcd = load i32, i32* %edx.global-to-local, align 4
  %v1_8053bcd = add i32 %v0_8053bcd, -1
  %v9_8053bcd = icmp slt i32 %v1_8053bcd, 0
  store i32 %v1_8053bcd, i32* %edx.global-to-local, align 4
  %v1_8053bce = icmp eq i1 %v9_8053bcd, false
  br i1 %v1_8053bce, label %dec_label_pc_8053bc2.dec_label_pc_8053bc2_crit_edge, label %dec_label_pc_8053bd0

dec_label_pc_8053bd0:                             ; preds = %dec_label_pc_8053bc2.dec_label_pc_8053bc2_crit_edge, %dec_label_pc_8053bc2.lr.ph
  store i32 %v2_8053b73, i32* %eax.global-to-local, align 4
  store i32 %v2_8053b73, i32* %stack_var_-460, align 4
  %v4_8053bdc = call i32 @function_80528ce(i32 %v2_8053b73, i32 17, i32 0, i32 0)
  store i32 %v4_8053bdc, i32* %eax.global-to-local, align 4
  %v2_8053be4 = icmp slt i32 %v4_8053bdc, 0
  br i1 %v2_8053be4, label %dec_label_pc_8053cab, label %dec_label_pc_8053bec

dec_label_pc_8053bec:                             ; preds = %dec_label_pc_8053bd0
  %v2_8053bed = ptrtoint i32* %stack_var_-420 to i32
  store i32 %v2_8053bed, i32* %eax.global-to-local, align 4
  store i32 17, i32* %stack_var_-460, align 4
  %v4_8053bf6 = call i32 @function_805407f(i32 17, i32* null, i32 %v2_8053bed)
  store i32 %v4_8053bf6, i32* %eax.global-to-local, align 4
  %v2_8053bfe = icmp slt i32 %v4_8053bf6, 0
  %v1_8053c00 = icmp eq i1 %v2_8053bfe, false
  br i1 %v1_8053c00, label %dec_label_pc_8053c2a, label %dec_label_pc_8053c02

dec_label_pc_8053c02:                             ; preds = %dec_label_pc_8053bec
  %v0_8053c02 = load i32, i32* %stack_var_-460, align 4
  %v1_8053c02 = call i32 @function_80524b9(i32 %v0_8053c02)
  store i32 %v1_8053c02, i32* %eax.global-to-local, align 4
  store i32 %v1_8053c02, i32* @ebx, align 4
  %v1_8053c09 = inttoptr i32 %v1_8053c02 to i32*
  %v2_8053c09 = load i32, i32* %v1_8053c09, align 4
  store i32 %v2_8053c09, i32* @esi, align 4
  store i32 %v2_8053b8c, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8053c18 = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8053c18 = call i32 @function_80521ed(i32 2, %_TYPEDEF_sigset_t* %v3_8053c18, i32 0)
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_8053c23 = load i32, i32* @esi, align 4
  %v1_8053c23 = load i32, i32* @ebx, align 4
  %v2_8053c23 = inttoptr i32 %v1_8053c23 to i32*
  store i32 %v0_8053c23, i32* %v2_8053c23, align 4
  %v0_8053cb8.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053cae

dec_label_pc_8053c2a:                             ; preds = %dec_label_pc_8053bec
  %v3_8053c2a = load i32, i32* %stack_var_-420, align 4
  %v12_8053c2a = icmp eq i32 %v3_8053c2a, 1
  %v2_8053c36 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8053c36, i32* @ebx, align 4
  %v1_8053c3d = icmp eq i1 %v12_8053c2a, false
  br i1 %v1_8053c3d, label %dec_label_pc_8053c64, label %dec_label_pc_8053c3f

dec_label_pc_8053c3f:                             ; preds = %dec_label_pc_8053c2a
  %v0_8053c3f = load i32, i32* @edi, align 4
  store i32 %v2_8053c36, i32* %stack_var_-460, align 4
  %v4_8053c43 = bitcast i32* %stack_var_-24 to %timespec*
  %v5_8053c43 = call i32 @function_80545d7(%timespec* %v4_8053c43, i32 %v2_8053c36, i32 %v0_8053c3f, i32 %v0_8053c3f)
  store i32 %v5_8053c43, i32* %eax.global-to-local, align 4
  store i32 %v5_8053c43, i32* @edi, align 4
  %v1_8053c4a = call i32 @function_80524b9(i32 %v2_8053c36)
  store i32 %v1_8053c4a, i32* %eax.global-to-local, align 4
  store i32 %v1_8053c4a, i32* @ebx, align 4
  %v1_8053c54 = inttoptr i32 %v1_8053c4a to i32*
  %v2_8053c54 = load i32, i32* %v1_8053c54, align 4
  store i32 %v2_8053c54, i32* @esi, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8053c5b = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8053c5b = call i32 @function_80521ed(i32 2, %_TYPEDEF_sigset_t* %v3_8053c5b, i32 0)
  store i32 %v4_8053c5b, i32* %eax.global-to-local, align 4
  %v0_8053c60 = load i32, i32* @esi, align 4
  %v1_8053c60 = load i32, i32* @ebx, align 4
  %v2_8053c60 = inttoptr i32 %v1_8053c60 to i32*
  store i32 %v0_8053c60, i32* %v2_8053c60, align 4
  %v0_8053c8a.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8053c87

dec_label_pc_8053c64:                             ; preds = %dec_label_pc_8053c2a
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8053c6a = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8053c6a = call i32 @function_80521ed(i32 2, %_TYPEDEF_sigset_t* %v3_8053c6a, i32 0)
  store i32 %v4_8053c6a, i32* %eax.global-to-local, align 4
  store i32 2, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053c80

dec_label_pc_8053c75:                             ; preds = %dec_label_pc_8053ba7
  %v2_8053c77 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8053c77, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053c80

dec_label_pc_8053c80:                             ; preds = %dec_label_pc_8053c64, %dec_label_pc_8053c75
  %storemerge3.pre-phi = phi i32 [ %v2_8053c36, %dec_label_pc_8053c64 ], [ %v2_8053c77, %dec_label_pc_8053c75 ]
  %v3_8053c80 = phi i32 [ %v2_8053b8c, %dec_label_pc_8053c64 ], [ %v4_8053bac, %dec_label_pc_8053c75 ]
  %v2_8053c80 = phi i32 [ 0, %dec_label_pc_8053c64 ], [ %v4_8053bac, %dec_label_pc_8053c75 ]
  store i32 %storemerge3.pre-phi, i32* %stack_var_-460, align 4
  %v4_8053c80 = bitcast i32* %stack_var_-24 to %timespec*
  %v5_8053c80 = call i32 @function_80545d7(%timespec* %v4_8053c80, i32 %storemerge3.pre-phi, i32 %v2_8053c80, i32 %v3_8053c80)
  store i32 %v5_8053c80, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053c87

dec_label_pc_8053c87:                             ; preds = %dec_label_pc_8053c3f, %dec_label_pc_8053c80
  %v0_8053c8a = phi i32 [ %v0_8053c8a.pre, %dec_label_pc_8053c3f ], [ %v5_8053c80, %dec_label_pc_8053c80 ]
  %v1_8053c8a = icmp eq i32 %v0_8053c8a, 0
  br i1 %v1_8053c8a, label %dec_label_pc_8053ca7, label %dec_label_pc_8053c8e

dec_label_pc_8053c8e:                             ; preds = %dec_label_pc_8053c87
  %v4_8053c9e = load i32, i32* %stack_var_-24, align 4
  store i32 %v4_8053c9e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053cae

dec_label_pc_8053ca7:                             ; preds = %dec_label_pc_8053b30, %dec_label_pc_8053c87
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053cae

dec_label_pc_8053cab:                             ; preds = %dec_label_pc_8053bd0, %dec_label_pc_8053b8b, %dec_label_pc_8053b5d
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053cae

dec_label_pc_8053cae:                             ; preds = %dec_label_pc_8053ca7, %dec_label_pc_8053c8e, %dec_label_pc_8053c02, %dec_label_pc_8053cab
  %v0_8053cb8 = phi i32 [ 0, %dec_label_pc_8053ca7 ], [ %v4_8053c9e, %dec_label_pc_8053c8e ], [ %v0_8053cb8.pre, %dec_label_pc_8053c02 ], [ -1, %dec_label_pc_8053cab ]
  store i32 %v0_8053b33, i32* @ebx, align 4
  store i32 %v0_8053b32, i32* @esi, align 4
  store i32 %v0_8053b31, i32* @edi, align 4
  store i32 %v0_8053b30, i32* @ebp, align 4
  ret i32 %v0_8053cb8

; uselistorder directives
  uselistorder i32 %storemerge3.pre-phi, { 1, 0 }
  uselistorder i32 %v1_8053c4a, { 1, 0, 2 }
  uselistorder i32 %v2_8053c36, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_8053bcd, { 2, 1, 0 }
  uselistorder i32 %v4_8053bac, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8053b8c, { 0, 2, 4, 3, 1, 5 }
  uselistorder i32 %v2_8053b73, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v1_8053b5a, { 0, 3, 2, 1 }
  uselistorder i32* %stack_var_-460, { 0, 2, 3, 4, 5, 1, 6, 7, 8, 9, 10 }
  uselistorder i32* %stack_var_-24, { 2, 0, 4, 1, 5, 3 }
  uselistorder i32 %tmp32, { 0, 2, 1 }
  uselistorder i32* %edx.global-to-local, { 3, 5, 4, 0, 1, 2, 6, 7 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 0, 1, 23 }
  uselistorder i32 (i32, i32*, i32)* @function_805407f, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_80528ce, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_8053cae, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8053ca7, { 1, 0 }
  uselistorder label %dec_label_pc_8053c87, { 1, 0 }
  uselistorder label %dec_label_pc_8053c80, { 1, 0 }
  uselistorder label %dec_label_pc_8053bc2.dec_label_pc_8053bc2_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_8053b4f.dec_label_pc_8053b4f_crit_edge, { 1, 0 }
}

define i32 @function_8053cb9(i32 %arg1) local_unnamed_addr {
dec_label_pc_8053cb9:
  switch i32 %arg1, label %dec_label_pc_8053cd8 [
    i32 0, label %dec_label_pc_8053ce8
    i32 1, label %dec_label_pc_8053dcd
    i32 2, label %dec_label_pc_8053cf2
    i32 3, label %dec_label_pc_8053cfc
    i32 4, label %dec_label_pc_8053d06
    i32 5, label %dec_label_pc_8053d9c
    i32 6, label %dec_label_pc_8053d0e
    i32 7, label %dec_label_pc_8053cce
    i32 8, label %dec_label_pc_8053cce
    i32 9, label %dec_label_pc_8053cce
    i32 10, label %dec_label_pc_8053cce
    i32 11, label %dec_label_pc_8053cce
    i32 12, label %dec_label_pc_8053cce
    i32 13, label %dec_label_pc_8053cce
    i32 14, label %dec_label_pc_8053cce
    i32 15, label %dec_label_pc_8053cce
    i32 16, label %dec_label_pc_8053cce
    i32 17, label %dec_label_pc_8053cce
    i32 18, label %dec_label_pc_8053cce
    i32 19, label %dec_label_pc_8053cce
    i32 20, label %dec_label_pc_8053cce
    i32 21, label %dec_label_pc_8053cce
    i32 22, label %dec_label_pc_8053cce
    i32 23, label %dec_label_pc_8053dcd
    i32 24, label %dec_label_pc_8053dcd
    i32 25, label %dec_label_pc_8053dd9
    i32 26, label %dec_label_pc_8053daa
    i32 27, label %dec_label_pc_8053dcd
    i32 28, label %dec_label_pc_8053d20
    i32 29, label %dec_label_pc_8053da3
    i32 30, label %dec_label_pc_8053d18
    i32 31, label %dec_label_pc_8053db8
    i32 32, label %dec_label_pc_8053dcd
    i32 33, label %dec_label_pc_8053dcd
    i32 34, label %dec_label_pc_8053dcd
    i32 35, label %dec_label_pc_8053db1
    i32 36, label %dec_label_pc_8053de0
    i32 37, label %dec_label_pc_8053de7
    i32 38, label %dec_label_pc_8053de0
    i32 39, label %dec_label_pc_8053d2a
    i32 40, label %dec_label_pc_8053dee
    i32 41, label %dec_label_pc_8053dcd
    i32 42, label %dec_label_pc_8053db8
    i32 43, label %dec_label_pc_8053de7
    i32 44, label %dec_label_pc_8053df5
    i32 45, label %dec_label_pc_8053de7
    i32 46, label %dec_label_pc_8053da3
    i32 47, label %dec_label_pc_8053da3
    i32 48, label %dec_label_pc_8053da3
    i32 49, label %dec_label_pc_8053dcd
    i32 50, label %dec_label_pc_8053dcd
    i32 51, label %dec_label_pc_8053da3
    i32 52, label %dec_label_pc_8053da3
    i32 53, label %dec_label_pc_8053dcd
    i32 54, label %dec_label_pc_8053dcd
    i32 55, label %dec_label_pc_8053dcd
    i32 56, label %dec_label_pc_8053dcd
    i32 57, label %dec_label_pc_8053dcd
    i32 58, label %dec_label_pc_8053dcd
    i32 59, label %dec_label_pc_8053dcd
    i32 60, label %dec_label_pc_8053dcd
    i32 61, label %dec_label_pc_8053dcd
    i32 62, label %dec_label_pc_8053dcd
    i32 63, label %dec_label_pc_8053dcd
    i32 64, label %dec_label_pc_8053dcd
    i32 65, label %dec_label_pc_8053dcd
    i32 66, label %dec_label_pc_8053dcd
    i32 67, label %dec_label_pc_8053cce
    i32 68, label %dec_label_pc_8053cce
    i32 69, label %dec_label_pc_8053db1
    i32 70, label %dec_label_pc_8053db1
    i32 71, label %dec_label_pc_8053db1
    i32 72, label %dec_label_pc_8053db8
    i32 73, label %dec_label_pc_8053dbf
    i32 74, label %dec_label_pc_8053dc6
    i32 75, label %dec_label_pc_8053d34
    i32 76, label %dec_label_pc_8053dc6
    i32 77, label %dec_label_pc_8053cce
    i32 78, label %dec_label_pc_8053cce
    i32 79, label %dec_label_pc_8053cce
    i32 80, label %dec_label_pc_8053cce
    i32 81, label %dec_label_pc_8053cce
    i32 82, label %dec_label_pc_8053cce
    i32 83, label %dec_label_pc_8053cce
    i32 84, label %dec_label_pc_8053cce
    i32 85, label %dec_label_pc_8053dcd
    i32 86, label %dec_label_pc_8053dcd
    i32 87, label %dec_label_pc_8053daa
    i32 88, label %dec_label_pc_8053d3e
    i32 89, label %dec_label_pc_8053d48
    i32 90, label %dec_label_pc_8053dbf
    i32 91, label %dec_label_pc_8053cce
    i32 92, label %dec_label_pc_8053cce
    i32 93, label %dec_label_pc_8053cce
    i32 94, label %dec_label_pc_8053cce
    i32 95, label %dec_label_pc_8053da3
    i32 96, label %dec_label_pc_8053dcd
    i32 97, label %dec_label_pc_8053dcd
    i32 98, label %dec_label_pc_8053cce
    i32 99, label %dec_label_pc_8053cce
    i32 100, label %dec_label_pc_8053cce
    i32 101, label %dec_label_pc_8053d52
    i32 102, label %dec_label_pc_8053d95
    i32 103, label %dec_label_pc_8053dd2
    i32 104, label %dec_label_pc_8053daa
    i32 105, label %dec_label_pc_8053d5c
    i32 106, label %dec_label_pc_8053db8
    i32 107, label %dec_label_pc_8053db8
    i32 108, label %dec_label_pc_8053d9c
    i32 109, label %dec_label_pc_8053dd9
    i32 110, label %dec_label_pc_8053df5
    i32 111, label %dec_label_pc_8053d95
    i32 112, label %dec_label_pc_8053dd2
    i32 113, label %dec_label_pc_8053df5
    i32 114, label %dec_label_pc_8053d66
    i32 115, label %dec_label_pc_8053dee
    i32 116, label %dec_label_pc_8053dcd
    i32 117, label %dec_label_pc_8053dcd
    i32 118, label %dec_label_pc_8053d70
    i32 119, label %dec_label_pc_8053d7a
    i32 120, label %dec_label_pc_8053de7
    i32 121, label %dec_label_pc_8053daa
    i32 122, label %dec_label_pc_8053daa
    i32 123, label %dec_label_pc_8053daa
    i32 124, label %dec_label_pc_8053daa
    i32 125, label %dec_label_pc_8053cce
    i32 126, label %dec_label_pc_8053cce
    i32 127, label %dec_label_pc_8053dcd
    i32 128, label %dec_label_pc_8053dcd
    i32 129, label %dec_label_pc_8053cce
    i32 130, label %dec_label_pc_8053cce
    i32 131, label %dec_label_pc_8053dcd
    i32 149, label %dec_label_pc_8053d81
  ]

dec_label_pc_8053cce:                             ; preds = %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9
  br label %dec_label_pc_8053dfa

dec_label_pc_8053cd8:                             ; preds = %dec_label_pc_8053cb9
  %v1_8053cd8 = call i32 @function_80524b9(i32 ptrtoint (i32* @0 to i32))
  %v1_8053cdd = inttoptr i32 %v1_8053cd8 to i32*
  store i32 22, i32* %v1_8053cdd, align 4
  br label %dec_label_pc_8053dcd

dec_label_pc_8053ce8:                             ; preds = %dec_label_pc_8053cb9
  br label %dec_label_pc_8053dfa

dec_label_pc_8053cf2:                             ; preds = %dec_label_pc_8053cb9
  br label %dec_label_pc_8053dfa

dec_label_pc_8053cfc:                             ; preds = %dec_label_pc_8053cb9
  br label %dec_label_pc_8053dfa

dec_label_pc_8053d06:                             ; preds = %dec_label_pc_8053cb9
  %v0_8053d09 = call i32 @function_8054405()
  br label %dec_label_pc_8053d0e

dec_label_pc_8053d0e:                             ; preds = %dec_label_pc_8053cb9, %dec_label_pc_8053d06
  br label %dec_label_pc_8053dfa

dec_label_pc_8053d18:                             ; preds = %dec_label_pc_8053cb9
  %v0_8053d1b = call i32 @function_805449c()
  br label %dec_label_pc_8053d20

dec_label_pc_8053d20:                             ; preds = %dec_label_pc_8053cb9, %dec_label_pc_8053d18
  br label %dec_label_pc_8053dfa

dec_label_pc_8053d2a:                             ; preds = %dec_label_pc_8053cb9
  br label %dec_label_pc_8053dfa

dec_label_pc_8053d34:                             ; preds = %dec_label_pc_8053cb9
  br label %dec_label_pc_8053dfa

dec_label_pc_8053d3e:                             ; preds = %dec_label_pc_8053cb9
  br label %dec_label_pc_8053dfa

dec_label_pc_8053d48:                             ; preds = %dec_label_pc_8053cb9
  br label %dec_label_pc_8053dfa

dec_label_pc_8053d52:                             ; preds = %dec_label_pc_8053cb9
  br label %dec_label_pc_8053dfa

dec_label_pc_8053d5c:                             ; preds = %dec_label_pc_8053cb9
  br label %dec_label_pc_8053dfa

dec_label_pc_8053d66:                             ; preds = %dec_label_pc_8053cb9
  br label %dec_label_pc_8053dfa

dec_label_pc_8053d70:                             ; preds = %dec_label_pc_8053cb9
  br label %dec_label_pc_8053dfa

dec_label_pc_8053d7a:                             ; preds = %dec_label_pc_8053cb9
  br label %dec_label_pc_8053dfa

dec_label_pc_8053d81:                             ; preds = %dec_label_pc_8053cb9
  %v5_8053d87 = call i32 @function_8054208(i32 1, %timespec* null, i32 149, i32 149)
  %v2_8053d8f = icmp slt i32 %v5_8053d87, 0
  %v1_8053d91 = icmp eq i1 %v2_8053d8f, false
  br i1 %v1_8053d91, label %dec_label_pc_8053da3, label %dec_label_pc_8053dcd

dec_label_pc_8053d95:                             ; preds = %dec_label_pc_8053cb9, %dec_label_pc_8053cb9
  br label %dec_label_pc_8053dfa

dec_label_pc_8053d9c:                             ; preds = %dec_label_pc_8053cb9, %dec_label_pc_8053cb9
  br label %dec_label_pc_8053dfa

dec_label_pc_8053da3:                             ; preds = %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053d81
  br label %dec_label_pc_8053dfa

dec_label_pc_8053daa:                             ; preds = %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9
  br label %dec_label_pc_8053dfa

dec_label_pc_8053db1:                             ; preds = %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9
  br label %dec_label_pc_8053dfa

dec_label_pc_8053db8:                             ; preds = %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9
  br label %dec_label_pc_8053dfa

dec_label_pc_8053dbf:                             ; preds = %dec_label_pc_8053cb9, %dec_label_pc_8053cb9
  br label %dec_label_pc_8053dfa

dec_label_pc_8053dc6:                             ; preds = %dec_label_pc_8053cb9, %dec_label_pc_8053cb9
  br label %dec_label_pc_8053dfa

dec_label_pc_8053dcd:                             ; preds = %dec_label_pc_8053d81, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cd8
  br label %dec_label_pc_8053dfa

dec_label_pc_8053dd2:                             ; preds = %dec_label_pc_8053cb9, %dec_label_pc_8053cb9
  br label %dec_label_pc_8053dfa

dec_label_pc_8053dd9:                             ; preds = %dec_label_pc_8053cb9, %dec_label_pc_8053cb9
  br label %dec_label_pc_8053dfa

dec_label_pc_8053de0:                             ; preds = %dec_label_pc_8053cb9, %dec_label_pc_8053cb9
  br label %dec_label_pc_8053dfa

dec_label_pc_8053de7:                             ; preds = %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9
  br label %dec_label_pc_8053dfa

dec_label_pc_8053dee:                             ; preds = %dec_label_pc_8053cb9, %dec_label_pc_8053cb9
  br label %dec_label_pc_8053dfa

dec_label_pc_8053df5:                             ; preds = %dec_label_pc_8053cb9, %dec_label_pc_8053cb9, %dec_label_pc_8053cb9
  br label %dec_label_pc_8053dfa

dec_label_pc_8053dfa:                             ; preds = %dec_label_pc_8053dee, %dec_label_pc_8053de7, %dec_label_pc_8053de0, %dec_label_pc_8053dd9, %dec_label_pc_8053dd2, %dec_label_pc_8053dc6, %dec_label_pc_8053dbf, %dec_label_pc_8053db8, %dec_label_pc_8053db1, %dec_label_pc_8053daa, %dec_label_pc_8053d9c, %dec_label_pc_8053d95, %dec_label_pc_8053da3, %dec_label_pc_8053d7a, %dec_label_pc_8053d70, %dec_label_pc_8053d66, %dec_label_pc_8053d5c, %dec_label_pc_8053d52, %dec_label_pc_8053d48, %dec_label_pc_8053d3e, %dec_label_pc_8053d34, %dec_label_pc_8053d2a, %dec_label_pc_8053d20, %dec_label_pc_8053d0e, %dec_label_pc_8053cfc, %dec_label_pc_8053cf2, %dec_label_pc_8053ce8, %dec_label_pc_8053cce, %dec_label_pc_8053dcd, %dec_label_pc_8053df5
  %v0_8053dfd = phi i32 [ 255, %dec_label_pc_8053dee ], [ 2048, %dec_label_pc_8053de7 ], [ 99, %dec_label_pc_8053de0 ], [ 20, %dec_label_pc_8053dd9 ], [ -128, %dec_label_pc_8053dd2 ], [ 1024, %dec_label_pc_8053dc6 ], [ 4, %dec_label_pc_8053dbf ], [ 32, %dec_label_pc_8053db8 ], [ 256, %dec_label_pc_8053db1 ], [ 2147483647, %dec_label_pc_8053daa ], [ 16, %dec_label_pc_8053d9c ], [ 127, %dec_label_pc_8053d95 ], [ 200112, %dec_label_pc_8053da3 ], [ 9, %dec_label_pc_8053d7a ], [ 65535, %dec_label_pc_8053d70 ], [ -32768, %dec_label_pc_8053d66 ], [ -2147483648, %dec_label_pc_8053d5c ], [ 8, %dec_label_pc_8053d52 ], [ 500, %dec_label_pc_8053d48 ], [ 4096, %dec_label_pc_8053d3e ], [ 16384, %dec_label_pc_8053d34 ], [ 1000, %dec_label_pc_8053d2a ], [ 32768, %dec_label_pc_8053d20 ], [ 6, %dec_label_pc_8053d0e ], [ 65536, %dec_label_pc_8053cfc ], [ 100, %dec_label_pc_8053cf2 ], [ 131072, %dec_label_pc_8053ce8 ], [ 1, %dec_label_pc_8053cce ], [ -1, %dec_label_pc_8053dcd ], [ 32767, %dec_label_pc_8053df5 ]
  ret i32 %v0_8053dfd

; uselistorder directives
  uselistorder i32 65536, { 32, 33, 3, 4, 5, 6, 7, 8, 10, 9, 11, 13, 14, 12, 15, 17, 16, 18, 1, 19, 0, 2, 22, 20, 23, 21, 26, 24, 25, 27, 28, 29, 30, 31 }
  uselistorder i32 16384, { 0, 5, 6, 7, 8, 9, 10, 11, 22, 23, 25, 26, 16, 17, 1, 2, 14, 15, 18, 19, 20, 21, 3, 4, 24, 27, 28, 29, 12, 13, 30, 31, 32, 33 }
  uselistorder i32 65535, { 3, 0, 1, 2, 4 }
  uselistorder i32 1024, { 2, 0, 3, 1, 4 }
  uselistorder i32 2048, { 4, 1, 5, 2, 0, 3 }
  uselistorder i32 255, { 1, 3, 4, 6, 2, 7, 8, 9, 5, 0 }
  uselistorder i32 149, { 1, 0, 2 }
  uselistorder i32 131, { 4, 0, 1, 3, 2 }
  uselistorder i32 127, { 0, 2, 1 }
  uselistorder i32 124, { 4, 5, 3, 0, 1, 6, 2 }
  uselistorder i32 123, { 1, 0 }
  uselistorder i32 118, { 1, 0 }
  uselistorder i32 116, { 1, 2, 0 }
  uselistorder i32 112, { 3, 0, 1, 4, 5, 2, 6, 7, 8 }
  uselistorder i32 110, { 1, 0 }
  uselistorder i32 108, { 20, 21, 22, 17, 23, 11, 2, 15, 0, 1, 24, 12, 13, 18, 19, 25, 26, 14, 27, 3, 4, 5, 28, 29, 6, 30, 7, 8, 9, 10, 16, 31 }
  uselistorder i32 106, { 1, 0 }
  uselistorder i32 104, { 2, 3, 4, 1, 6, 5, 0 }
  uselistorder i32 99, { 1, 2, 0 }
  uselistorder i32 96, { 1, 2, 3, 0, 4 }
  uselistorder i32 95, { 3, 1, 0, 2 }
  uselistorder i32 92, { 11, 1, 0, 4, 2, 3, 6, 12, 13, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 8, 25, 26, 27, 5, 28, 29, 7, 34, 31, 32, 33, 30, 35 }
  uselistorder i32 87, { 2, 0, 1 }
  uselistorder i32 80, { 1, 2, 0 }
  uselistorder i32 76, { 3, 4, 1, 5, 0, 6, 2 }
  uselistorder i32 68, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 60, { 3, 0, 1, 2 }
  uselistorder i32 58, { 1, 0 }
  uselistorder i32 55, { 2, 0, 1, 3 }
  uselistorder i32 54, { 2, 0, 1 }
  uselistorder i32 46, { 1, 2, 0 }
  uselistorder i32 43, { 1, 2, 0 }
  uselistorder i32 42, { 1, 2, 0 }
  uselistorder i32 41, { 1, 2, 3, 0 }
  uselistorder i32 39, { 1, 2, 3, 0 }
  uselistorder i32 38, { 2, 0, 3, 4, 1 }
  uselistorder i32 37, { 2, 0, 3, 4, 1 }
  uselistorder i32 34, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 27, { 1, 0 }
  uselistorder i32 21, { 1, 2, 3, 4, 0 }
  uselistorder i32 17, { 6, 4, 5, 2, 3, 1, 0, 7, 8 }
  uselistorder i32 13, { 1, 0, 2, 3, 4 }
  uselistorder i32 9, { 3, 6, 0, 1, 5, 8, 4, 10, 9, 7, 11, 2 }
  uselistorder i32 6, { 0, 5, 2, 3, 1, 8, 4, 7, 6 }
  uselistorder i32 5, { 7, 0, 12, 13, 5, 4, 10, 11, 8, 3, 1, 2, 9, 6 }
  uselistorder label %dec_label_pc_8053dfa, { 29, 0, 1, 2, 3, 4, 28, 5, 6, 7, 8, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder label %dec_label_pc_8053dcd, { 0, 34, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder label %dec_label_pc_8053da3, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8053d20, { 1, 0 }
  uselistorder label %dec_label_pc_8053d0e, { 1, 0 }
}

define i32 @function_8053dfe() local_unnamed_addr {
dec_label_pc_8053dfe:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8053dfe = load i32, i32* @ebx, align 4
  store i32 %v0_8053dfe, i32* %stack_var_-4, align 4
  store i32 add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8056584.73 to i32), i32 -134571396), i32 2), i32 -1), i32* %ebx.global-to-local, align 4
  br i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8056584.73 to i32), i32 -134571396), i32 2), i32 0), label %dec_label_pc_8053e12, label %dec_label_pc_8053e1f

dec_label_pc_8053e12:                             ; preds = %dec_label_pc_8053dfe, %dec_label_pc_8053e12
  %v1_8053e196 = phi i32 [ %v1_8053e19, %dec_label_pc_8053e12 ], [ add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8056584.73 to i32), i32 -134571396), i32 2), i32 -1), %dec_label_pc_8053dfe ]
  store i32 ptrtoint (i32* @global_var_8053e19.74 to i32), i32* %stack_var_-16, align 4
  %v5_8053e12 = mul i32 %v1_8053e196, 4
  %v6_8053e12 = add i32 %v5_8053e12, ptrtoint (i32* @global_var_8056584.73 to i32)
  %v7_8053e12 = inttoptr i32 %v6_8053e12 to i32*
  %v8_8053e12 = load i32, i32* %v7_8053e12, align 4
  call void @__pseudo_call(i32 %v8_8053e12)
  %v0_8053e19.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053e19 = add i32 %v0_8053e19.pre, -1
  store i32 %v1_8053e19, i32* %ebx.global-to-local, align 4
  %v10_8053e1a = icmp eq i32 %v0_8053e19.pre, 0
  %v1_8053e1d = icmp eq i1 %v10_8053e1a, false
  br i1 %v1_8053e1d, label %dec_label_pc_8053e12, label %dec_label_pc_8053e1f

dec_label_pc_8053e1f:                             ; preds = %dec_label_pc_8053e12, %dec_label_pc_8053dfe
  %v0_8053e1f = load i32, i32* @global_var_80566e8.75, align 8
  %v1_8053e24 = icmp eq i32 %v0_8053e1f, 0
  br i1 %v1_8053e24, label %dec_label_pc_8053e2a, label %dec_label_pc_8053e28

dec_label_pc_8053e28:                             ; preds = %dec_label_pc_8053e1f
  %v0_8053e28 = load i32, i32* %stack_var_-16, align 4
  %v1_8053e28 = call i32 @unknown_0(i32 %v0_8053e28)
  br label %dec_label_pc_8053e2a

dec_label_pc_8053e2a:                             ; preds = %dec_label_pc_8053e28, %dec_label_pc_8053e1f
  %v0_8053e2a = load i32, i32* @global_var_80566ec.76, align 4
  store i32 %v0_8053e2a, i32* @ecx, align 4
  %v1_8053e30 = icmp eq i32 %v0_8053e2a, 0
  br i1 %v1_8053e30, label %dec_label_pc_8053e39, label %dec_label_pc_8053e34

dec_label_pc_8053e34:                             ; preds = %dec_label_pc_8053e2a
  %v2_8053e36 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8053e36, i32* %ebx.global-to-local, align 4
  %v0_8053e37 = load i32, i32* %stack_var_-16, align 4
  %v1_8053e37 = call i32 @unknown_0(i32 %v0_8053e37)
  br label %dec_label_pc_8053e39

dec_label_pc_8053e39:                             ; preds = %dec_label_pc_8053e2a, %dec_label_pc_8053e34
  %v2_8053e39 = load i32, i32* %stack_var_-16, align 4
  %v2_8053e3a = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8053e3a, i32* @edx, align 4
  ret i32 %v2_8053e39

; uselistorder directives
  uselistorder i32 %v1_8053e19, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 2, 1, 0, 3 }
  uselistorder i32 (i32)* @unknown_0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8053e39, { 1, 0 }
  uselistorder label %dec_label_pc_8053e12, { 1, 0 }
}

define i32 @function_8053e3d(i32 %arg1) local_unnamed_addr {
dec_label_pc_8053e3d:
  ret i32 0
}

define i32 @function_8053e40(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8053e40:
  %v0_8053e40 = load i32, i32* @eax, align 4
  ret i32 %v0_8053e40
}

define i32 @function_8053e41() local_unnamed_addr {
dec_label_pc_8053e41:
  %stack_var_-12 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v0_8053e41 = load i32, i32* @esi, align 4
  %v0_8053e42 = load i32, i32* @ebx, align 4
  %v0_8053e46 = load i32, i32* @eax, align 4
  store i32 %v0_8053e46, i32* @esi, align 4
  %v0_8053e48 = load i32, i32* @edx, align 4
  store i32 %v0_8053e48, i32* @ebx, align 4
  %v4_8053e4d = call i32 @function_8051ebd(i32 %v0_8053e46, i32 1, i32 %tmp6)
  %v8_8053e55 = icmp eq i32 %v4_8053e4d, -1
  %v1_8053e56 = icmp eq i1 %v8_8053e55, false
  br i1 %v1_8053e56, label %dec_label_pc_8053e71, label %dec_label_pc_8053e58

dec_label_pc_8053e58:                             ; preds = %dec_label_pc_8053e41
  %v0_8053e5a = load i32, i32* @ebx, align 4
  %v6_8053e60 = call i32 @function_8052092(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805525c.77, i32 0, i32 0), i32 %v0_8053e5a)
  %v1_8053e68 = load i32, i32* @esi, align 4
  %v12_8053e68 = icmp eq i32 %v6_8053e60, %v1_8053e68
  br i1 %v12_8053e68, label %dec_label_pc_8053e71, label %dec_label_pc_8053e6c

dec_label_pc_8053e6c:                             ; preds = %dec_label_pc_8053e58
  %v0_8053e6c = call i32 @function_8053875()
  br label %dec_label_pc_8053e71

dec_label_pc_8053e71:                             ; preds = %dec_label_pc_8053e58, %dec_label_pc_8053e41, %dec_label_pc_8053e6c
  %v2_8053e71 = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_8053e42, i32* @ebx, align 4
  store i32 %v0_8053e41, i32* @esi, align 4
  ret i32 %v2_8053e71

; uselistorder directives
  uselistorder i32 ()* @function_8053875, { 4, 3, 2, 0, 1 }
  uselistorder i32 (i8*, i32)* @function_8052092, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_8051ebd, { 2, 7, 4, 3, 6, 5, 1, 0 }
  uselistorder label %dec_label_pc_8053e71, { 2, 0, 1 }
}

define i32 @function_8053e75() local_unnamed_addr {
dec_label_pc_8053e75:
  %v0_8053e78 = load i8, i8* @global_var_80566f0.78, align 16
  %v1_8053e78 = icmp eq i8 %v0_8053e78, 0
  %v1_8053e7f = icmp eq i1 %v1_8053e78, false
  br i1 %v1_8053e7f, label %dec_label_pc_8053e75.dec_label_pc_8053eb1_crit_edge, label %dec_label_pc_8053e81

dec_label_pc_8053e75.dec_label_pc_8053eb1_crit_edge: ; preds = %dec_label_pc_8053e75
  %v0_8053eb4.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8053eb1

dec_label_pc_8053e81:                             ; preds = %dec_label_pc_8053e75
  store i8 1, i8* @global_var_80566f0.78, align 16
  store i32 4096, i32* @global_var_80566e4.79, align 4
  br label %dec_label_pc_8053eb1

dec_label_pc_8053eb1:                             ; preds = %dec_label_pc_8053e75.dec_label_pc_8053eb1_crit_edge, %dec_label_pc_8053e81
  %v0_8053eb4 = phi i32 [ %v0_8053eb4.pre, %dec_label_pc_8053e75.dec_label_pc_8053eb1_crit_edge ], [ 0, %dec_label_pc_8053e81 ]
  ret i32 %v0_8053eb4

; uselistorder directives
  uselistorder i8 1, { 8, 0, 9, 3, 4, 5, 1, 2, 10, 11, 12, 13, 6, 7 }
  uselistorder i8* @global_var_80566f0.78, { 1, 0 }
  uselistorder label %dec_label_pc_8053eb1, { 1, 0 }
}

define i32 @function_8053eb5(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_8053eb5:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %tmp38 = call i32 @__decompiler_undefined_function_0()
  %tmp39 = call i32 @__decompiler_undefined_function_0()
  %tmp44 = ptrtoint i32* %arg3 to i32
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %v0_8053eb5 = load i32, i32* @ebp, align 4
  store i32 %tmp44, i32* @edi, align 4
  store i32 %arg7, i32* @global_var_80566dc.80, align 4
  store i32 %arg6, i32* @global_var_80566ec.76, align 4
  store i32 %arg4, i32* @ebp, align 4
  %v2_8053eec = mul i32 %arg2, 4
  %v3_8053eec = add i32 %tmp44, %v2_8053eec
  store i32 %v3_8053eec, i32* %edx.global-to-local, align 4
  %v1_8053eef = add i32 %v3_8053eec, 4
  store i32 %v1_8053eef, i32* @global_var_80566e0.81, align 32
  %v3_8053ef7 = load i32, i32* %arg3, align 4
  %v14_8053ef7 = icmp eq i32 %v1_8053eef, %v3_8053ef7
  %v1_8053ef9 = icmp eq i1 %v14_8053ef7, false
  br i1 %v1_8053ef9, label %dec_label_pc_8053f01, label %dec_label_pc_8053efb

dec_label_pc_8053efb:                             ; preds = %dec_label_pc_8053eb5
  store i32 %v3_8053eec, i32* @global_var_80566e0.81, align 32
  br label %dec_label_pc_8053f01

dec_label_pc_8053f01:                             ; preds = %dec_label_pc_8053eb5, %dec_label_pc_8053efb
  %v0_8053f01 = load i32, i32* @ecx, align 4
  store i32 %v0_8053f01, i32* %stack_var_-160, align 4
  store i32 0, i32* %stack_var_-168, align 4
  %v2_8053f06 = ptrtoint i32* %stack_var_-136 to i32
  %v3_8053f0b = bitcast i32* %stack_var_-136 to i8*
  %v4_8053f0b = call i32 @function_805250a(i8* %v3_8053f0b, i32 0, i32 120)
  %v0_8053f10 = load i32, i32* @global_var_80566e0.81, align 32
  br label %dec_label_pc_8053f18

dec_label_pc_8053f18:                             ; preds = %dec_label_pc_8053f18, %dec_label_pc_8053f01
  %v0_8053f18 = phi i32 [ %v1_8053f1b, %dec_label_pc_8053f18 ], [ %v0_8053f10, %dec_label_pc_8053f01 ]
  %v1_8053f18 = inttoptr i32 %v0_8053f18 to i32*
  %v2_8053f18 = load i32, i32* %v1_8053f18, align 4
  %v3_8053f18 = icmp eq i32 %v2_8053f18, 0
  %v1_8053f1b = add i32 %v0_8053f18, 4
  %v1_8053f1e = icmp eq i1 %v3_8053f18, false
  br i1 %v1_8053f1e, label %dec_label_pc_8053f18, label %dec_label_pc_8053f3f.preheader

dec_label_pc_8053f3f.preheader:                   ; preds = %dec_label_pc_8053f18
  store i32 %v1_8053f1b, i32* @ebx, align 4
  %v1_8053f3f22 = inttoptr i32 %v1_8053f1b to i32*
  %v2_8053f3f23 = load i32, i32* %v1_8053f3f22, align 4
  %v3_8053f3f24 = icmp eq i32 %v2_8053f3f23, 0
  %v1_8053f4226 = icmp eq i1 %v3_8053f3f24, false
  br i1 %v1_8053f4226, label %dec_label_pc_8053f24.lr.ph, label %dec_label_pc_8053f44

dec_label_pc_8053f24.lr.ph:                       ; preds = %dec_label_pc_8053f3f.preheader
  %v3_8053f04 = ptrtoint i32* %stack_var_-168 to i32
  %v3_8053f2f = add i32 %v3_8053f04, 32
  br label %dec_label_pc_8053f24

dec_label_pc_8053f24:                             ; preds = %dec_label_pc_8053f24.lr.ph, %dec_label_pc_8053f3c
  %v1_8053f2f = phi i32 [ %v2_8053f3f23, %dec_label_pc_8053f24.lr.ph ], [ %v2_8053f3f, %dec_label_pc_8053f3c ]
  %v0_8053f2e = phi i32 [ %v1_8053f1b, %dec_label_pc_8053f24.lr.ph ], [ %v1_8053f3c, %dec_label_pc_8053f3c ]
  %v6_8053f29 = icmp ugt i32 %v1_8053f2f, 14
  br i1 %v6_8053f29, label %dec_label_pc_8053f3c, label %dec_label_pc_8053f2b

dec_label_pc_8053f2b:                             ; preds = %dec_label_pc_8053f24
  %v0_8053f2b = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8053f2b, i32* %stack_var_-160, align 4
  store i32 %v0_8053f2e, i32* %stack_var_-168, align 4
  %v2_8053f2f = mul i32 %v1_8053f2f, 8
  %v4_8053f2f = add i32 %v3_8053f2f, %v2_8053f2f
  %v3_8053f34 = inttoptr i32 %v4_8053f2f to i16*
  %v4_8053f34 = call i32 @function_8054702(i16* %v3_8053f34, i32 %v0_8053f2e, i32 8)
  %v0_8053f3c.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8053f3c

dec_label_pc_8053f3c:                             ; preds = %dec_label_pc_8053f24, %dec_label_pc_8053f2b
  %v0_8053f3c = phi i32 [ %v0_8053f2e, %dec_label_pc_8053f24 ], [ %v0_8053f3c.pre, %dec_label_pc_8053f2b ]
  %v1_8053f3c = add i32 %v0_8053f3c, 8
  store i32 %v1_8053f3c, i32* @ebx, align 4
  %v1_8053f3f = inttoptr i32 %v1_8053f3c to i32*
  %v2_8053f3f = load i32, i32* %v1_8053f3f, align 4
  %v3_8053f3f = icmp eq i32 %v2_8053f3f, 0
  %v1_8053f42 = icmp eq i1 %v3_8053f3f, false
  br i1 %v1_8053f42, label %dec_label_pc_8053f24, label %dec_label_pc_8053f44

dec_label_pc_8053f44:                             ; preds = %dec_label_pc_8053f3c, %dec_label_pc_8053f3f.preheader
  store i32 %v2_8053f06, i32* @eax, align 4
  %v0_8053f48 = call i32 @function_80547bd()
  store i32 %v0_8053f48, i32* @eax, align 4
  %v0_8053f4d = call i32 @function_8053e75()
  %v1_8053f56 = icmp eq i32 %tmp39, 0
  %v1_8053f58 = icmp eq i1 %v1_8053f56, false
  br i1 %v1_8053f58, label %dec_label_pc_8053f5e, label %dec_label_pc_8053f5a

dec_label_pc_8053f5a:                             ; preds = %dec_label_pc_8053f44
  %v1_8053f5a = and i32 %tmp39, -65536
  %v2_8053f5a = or i32 %v1_8053f5a, 4096
  br label %dec_label_pc_8053f5e

dec_label_pc_8053f5e:                             ; preds = %dec_label_pc_8053f44, %dec_label_pc_8053f5a
  %v0_8053f5e = phi i32 [ %tmp39, %dec_label_pc_8053f44 ], [ %v2_8053f5a, %dec_label_pc_8053f5a ]
  store i32 %v0_8053f5e, i32* @global_var_80566e4.79, align 4
  %v13_8053f63 = icmp eq i32 %tmp38, -1
  %v1_8053f68 = icmp eq i1 %v13_8053f63, false
  br i1 %v1_8053f68, label %dec_label_pc_8053f93, label %dec_label_pc_8053f6a

dec_label_pc_8053f6a:                             ; preds = %dec_label_pc_8053f5e
  %v0_8053f6a = call i32 @function_80544e1()
  store i32 %v0_8053f6a, i32* @ebx, align 4
  %v0_8053f71 = call i32 @function_8054450()
  %v0_8053f76 = load i32, i32* @ebx, align 4
  %v12_8053f76 = icmp eq i32 %v0_8053f76, %v0_8053f71
  %v1_8053f78 = icmp eq i1 %v12_8053f76, false
  br i1 %v1_8053f78, label %dec_label_pc_8053fa9, label %dec_label_pc_8053f7a

dec_label_pc_8053f7a:                             ; preds = %dec_label_pc_8053f6a
  %v0_8053f7a = call i32 @function_8054476()
  store i32 %v0_8053f7a, i32* @ebx, align 4
  %v0_8053f81 = call i32 @function_805442a()
  %v0_8053f86 = load i32, i32* @ebx, align 4
  %v12_8053f86 = icmp eq i32 %v0_8053f86, %v0_8053f81
  %v1_8053f88 = icmp eq i1 %v12_8053f86, false
  br i1 %v1_8053f88, label %dec_label_pc_8053fa9, label %dec_label_pc_8053f8a.thread

dec_label_pc_8053f8a.thread:                      ; preds = %dec_label_pc_8053f7a
  br label %dec_label_pc_8053fd3

dec_label_pc_8053f93:                             ; preds = %dec_label_pc_8053f5e
  %v15_8053f93 = icmp eq i32 %tmp38, %tmp37
  %v1_8053f97 = icmp eq i1 %v15_8053f93, false
  br i1 %v1_8053f97, label %dec_label_pc_8053fa9, label %dec_label_pc_8053f99

dec_label_pc_8053f99:                             ; preds = %dec_label_pc_8053f93
  br label %dec_label_pc_8053fa9

dec_label_pc_8053fa9:                             ; preds = %dec_label_pc_8053f99, %dec_label_pc_8053f93, %dec_label_pc_8053f7a, %dec_label_pc_8053f6a
  store i32 131072, i32* @edx, align 4
  store i32 0, i32* @eax, align 4
  %v0_8053fb0 = call i32 @function_8053e41()
  store i32 131074, i32* @edx, align 4
  store i32 1, i32* @eax, align 4
  %v0_8053fbf = call i32 @function_8053e41()
  store i32 131074, i32* @edx, align 4
  store i32 2, i32* @eax, align 4
  %v0_8053fce = call i32 @function_8053e41()
  br label %dec_label_pc_8053fd3

dec_label_pc_8053fd3:                             ; preds = %dec_label_pc_8053f8a.thread, %dec_label_pc_8053fa9
  store i32 ptrtoint (i32* @global_var_8056584.73 to i32), i32* %esi.global-to-local, align 4
  %v0_8053fd8 = load i32, i32* @edi, align 4
  %v1_8053fd8 = inttoptr i32 %v0_8053fd8 to i32*
  %v2_8053fd8 = load i32, i32* %v1_8053fd8, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_8056584.73 to i32), i32 -134571396), i32* %esi.global-to-local, align 4
  store i32 %v2_8053fd8, i32* inttoptr (i32 134571528 to i32*), align 8
  store i32 sdiv (i32 add (i32 ptrtoint (i32* @global_var_8056584.73 to i32), i32 -134571396), i32 4), i32* %esi.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 %arg5, i32* @global_var_80566e8.75, align 8
  br i1 icmp ult (i32 add (i32 ptrtoint (i32* @global_var_8056584.73 to i32), i32 -134571393), i32 7), label %dec_label_pc_8054004, label %dec_label_pc_8053ff8

dec_label_pc_8053ff8:                             ; preds = %dec_label_pc_8053fd3, %dec_label_pc_8053ff8
  %v4_8053ff8 = phi i32 [ %v1_8053fff, %dec_label_pc_8053ff8 ], [ 0, %dec_label_pc_8053fd3 ]
  store i32 ptrtoint (i32* @global_var_8053fff.84 to i32), i32* %stack_var_-160, align 4
  %v5_8053ff8 = mul i32 %v4_8053ff8, 4
  %v6_8053ff8 = add i32 %v5_8053ff8, ptrtoint (i32* @global_var_8056584.73 to i32)
  %v7_8053ff8 = inttoptr i32 %v6_8053ff8 to i32*
  %v8_8053ff8 = load i32, i32* %v7_8053ff8, align 4
  call void @__pseudo_call(i32 %v8_8053ff8)
  %v0_8053fff = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053fff = add i32 %v0_8053fff, 1
  store i32 %v1_8053fff, i32* %ebx.global-to-local, align 4
  %v1_8054000 = load i32, i32* %esi.global-to-local, align 4
  %v7_8054000 = icmp ult i32 %v1_8053fff, %v1_8054000
  br i1 %v7_8054000, label %dec_label_pc_8053ff8, label %dec_label_pc_8054004

dec_label_pc_8054004:                             ; preds = %dec_label_pc_8053ff8, %dec_label_pc_8053fd3
  store i32 134561802, i32* %stack_var_-160, align 4
  call void @__pseudo_call(i32 %arg4)
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8056584.73 to i32), i32 -134571396), i32 2), i32* %esi.global-to-local, align 4
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8056584.73 to i32), i32 -134571396), i32 2), i32 0), label %dec_label_pc_805401c, label %dec_label_pc_8054028

dec_label_pc_805401c:                             ; preds = %dec_label_pc_8054004, %dec_label_pc_805401c
  %v4_805401c = phi i32 [ %v1_8054023, %dec_label_pc_805401c ], [ 0, %dec_label_pc_8054004 ]
  store i32 ptrtoint (i32* @global_var_8054023.85 to i32), i32* %stack_var_-160, align 4
  %v5_805401c = mul i32 %v4_805401c, 4
  %v6_805401c = add i32 %v5_805401c, ptrtoint (i32* @global_var_8056584.73 to i32)
  %v7_805401c = inttoptr i32 %v6_805401c to i32*
  %v8_805401c = load i32, i32* %v7_805401c, align 4
  call void @__pseudo_call(i32 %v8_805401c)
  %v0_8054023 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054023 = add i32 %v0_8054023, 1
  store i32 %v1_8054023, i32* %ebx.global-to-local, align 4
  %v1_8054024 = load i32, i32* %esi.global-to-local, align 4
  %v7_8054024 = icmp ult i32 %v1_8054023, %v1_8054024
  br i1 %v7_8054024, label %dec_label_pc_805401c, label %dec_label_pc_8054028

dec_label_pc_8054028:                             ; preds = %dec_label_pc_805401c, %dec_label_pc_8054004
  %v0_8054031 = load i32, i32* %stack_var_-160, align 4
  %v1_8054031 = call i32 @function_80524b9(i32 %v0_8054031)
  %v1_8054036 = inttoptr i32 %v1_8054031 to i32*
  store i32 0, i32* %v1_8054036, align 4
  store i32 0, i32* @eax, align 4
  %v0_8054051 = load i32, i32* @global_var_80566e0.81, align 32
  store i32 %v0_8054051, i32* %stack_var_-168, align 4
  call void @__pseudo_call(i32 %v0_8053eb5)
  %v0_8054066 = load i32, i32* @eax, align 4
  %v1_8054069 = call i32 @function_8053ac9(i32 %v0_8054066)
  %v0_8054075 = load i32, i32* @ebx, align 4
  %v1_8054075 = inttoptr i32 %v0_8054075 to %sigcontext*
  %v2_8054075 = call i32 @sigreturn(%sigcontext* %v1_8054075)
  %v0_805407d = load i32, i32* @ebx, align 4
  %v1_805407d = inttoptr i32 %v0_805407d to %sigcontext*
  %v2_805407d = call i32 @sigreturn(%sigcontext* %v1_805407d)
  ret i32 %v2_805407d

; uselistorder directives
  uselistorder i32 %v1_8054023, { 1, 2, 0 }
  uselistorder i32 %v1_8053fff, { 1, 2, 0 }
  uselistorder i32 %v2_8053f3f, { 1, 0 }
  uselistorder i32 %v1_8053f3c, { 2, 1, 0 }
  uselistorder i32 %v1_8053f1b, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8053f18, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 0, 1, 3, 2 }
  uselistorder i32 (i32)* @function_8053ac9, { 1, 2, 0 }
  uselistorder i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8056584.73 to i32), i32 -134571396), i32 2), { 1, 3, 2, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_8056584.73 to i32), i32 -134571396), { 0, 2, 1 }
  uselistorder i32 ()* @function_8053e41, { 2, 1, 0 }
  uselistorder i32 131072, { 2, 1, 0 }
  uselistorder i32 -65536, { 8, 0, 6, 7, 1, 2, 3, 4, 5, 9 }
  uselistorder i32 120, { 8, 22, 1, 2, 9, 10, 3, 11, 12, 13, 4, 5, 14, 15, 6, 16, 17, 7, 18, 19, 20, 21, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_805401c, { 1, 0 }
  uselistorder label %dec_label_pc_8053ff8, { 1, 0 }
  uselistorder label %dec_label_pc_8053fd3, { 1, 0 }
  uselistorder label %dec_label_pc_8053f5e, { 1, 0 }
  uselistorder label %dec_label_pc_8053f3c, { 1, 0 }
  uselistorder label %dec_label_pc_8053f24, { 1, 0 }
  uselistorder label %dec_label_pc_8053f01, { 1, 0 }
}

define i32 @function_805407f(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_805407f:
  %ebx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg2 to i32
  %stack_var_-276 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_805407f = load i32, i32* @esi, align 4
  %v0_8054080 = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_8054095 = icmp eq i32* %arg2, null
  br i1 %v1_8054095, label %dec_label_pc_80540e8, label %dec_label_pc_8054099

dec_label_pc_8054099:                             ; preds = %dec_label_pc_805407f
  %v2_8054099 = load i32, i32* %arg2, align 4
  store i32 %v2_8054099, i32* %stack_var_-148, align 4
  %v1_80540a2 = add i32 %tmp11, 4
  %v3_80540b4 = bitcast i32* %stack_var_-136 to i16*
  %v4_80540b4 = call i32 @function_8054702(i16* %v3_80540b4, i32 %v1_80540a2, i32 128)
  %v1_80540b9 = add i32 %tmp11, 132
  %v2_80540d3 = inttoptr i32 %v1_80540b9 to i8*
  %v3_80540d3 = load i8, i8* %v2_80540d3, align 1
  %v4_80540d3 = and i8 %v3_80540d3, 4
  %v5_80540d3 = icmp eq i8 %v4_80540d3, 0
  %v1_80540da = icmp eq i1 %v5_80540d3, false
  br i1 %v1_80540da, label %dec_label_pc_80540e8, label %dec_label_pc_80540dc

dec_label_pc_80540dc:                             ; preds = %dec_label_pc_8054099
  br label %dec_label_pc_80540e8

dec_label_pc_80540e8:                             ; preds = %dec_label_pc_80540dc, %dec_label_pc_8054099, %dec_label_pc_805407f
  %v1_80540ea = icmp eq i32 %arg3, 0
  br i1 %v1_80540ea, label %dec_label_pc_80540f2, label %dec_label_pc_80540ee

dec_label_pc_80540ee:                             ; preds = %dec_label_pc_80540e8
  %v2_80540ee = ptrtoint i32* %stack_var_-288 to i32
  br label %dec_label_pc_80540f2

dec_label_pc_80540f2:                             ; preds = %dec_label_pc_80540e8, %dec_label_pc_80540ee
  %v0_8054101 = phi i32 [ 0, %dec_label_pc_80540e8 ], [ %v2_80540ee, %dec_label_pc_80540ee ]
  br i1 %v1_8054095, label %dec_label_pc_80540ff, label %dec_label_pc_80540f8

dec_label_pc_80540f8:                             ; preds = %dec_label_pc_80540f2
  %phitmp = bitcast i32* %stack_var_-148 to %sigaction*
  br label %dec_label_pc_80540ff

dec_label_pc_80540ff:                             ; preds = %dec_label_pc_80540f2, %dec_label_pc_80540f8
  %v0_8054102 = phi %sigaction* [ null, %dec_label_pc_80540f2 ], [ %phitmp, %dec_label_pc_80540f8 ]
  %v5_805410a = call i32 @function_80541a5(i32 %arg1, %sigaction* %v0_8054102, i32 %v0_8054101, i32 8)
  store i32 %v5_805410a, i32* %ebx.global-to-local, align 4
  br i1 %v1_80540ea, label %dec_label_pc_805414d, label %dec_label_pc_8054118

dec_label_pc_8054118:                             ; preds = %dec_label_pc_80540ff
  %v2_8054118 = icmp slt i32 %v5_805410a, 0
  br i1 %v2_8054118, label %dec_label_pc_805414d, label %dec_label_pc_805411c

dec_label_pc_805411c:                             ; preds = %dec_label_pc_8054118
  %v3_805411c = load i32, i32* %stack_var_-288, align 4
  %v2_8054120 = inttoptr i32 %arg3 to i32*
  store i32 %v3_805411c, i32* %v2_8054120, align 4
  %v2_8054128 = ptrtoint i32* %stack_var_-276 to i32
  %v1_805412d = add i32 %arg3, 4
  %v3_8054131 = inttoptr i32 %v1_805412d to i16*
  %v4_8054131 = call i32 @function_8054702(i16* %v3_8054131, i32 %v2_8054128, i32 128)
  %v2_805413a = add i32 %arg3, 132
  %v3_805413a = inttoptr i32 %v2_805413a to i32*
  %v2_8054147 = add i32 %arg3, 136
  %v3_8054147 = inttoptr i32 %v2_8054147 to i32*
  %v0_805414d.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805414d

dec_label_pc_805414d:                             ; preds = %dec_label_pc_8054118, %dec_label_pc_80540ff, %dec_label_pc_805411c
  %v0_805414d = phi i32 [ %v5_805410a, %dec_label_pc_8054118 ], [ %v5_805410a, %dec_label_pc_80540ff ], [ %v0_805414d.pre, %dec_label_pc_805411c ]
  store i32 %v0_8054080, i32* @ebx, align 4
  store i32 %v0_805407f, i32* @esi, align 4
  ret i32 %v0_805414d

; uselistorder directives
  uselistorder i32 136, { 1, 0, 2 }
  uselistorder i8 4, { 1, 2, 3, 4, 0 }
  uselistorder i32 132, { 1, 2, 0, 3 }
  uselistorder i32 128, { 6, 7, 11, 8, 10, 0, 1, 2, 3, 4, 5, 9 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_805414d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80540ff, { 1, 0 }
  uselistorder label %dec_label_pc_80540f2, { 1, 0 }
}

define i32 @function_8054158(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_8054158:
  %stack_var_4 = alloca i32, align 4
  %v0_8054158 = load i32, i32* @ebx, align 4
  store i32 %v0_8054158, i32* @edx, align 4
  %v2_8054163 = load i32, i32* @ecx, align 4
  %v4_8054163 = load i32, i32* @esi, align 4
  %v5_8054163 = load i32, i32* @edi, align 4
  %v6_8054163 = load i32, i32* @ebp, align 4
  %v7_8054163 = call i32* @mmap(i32* nonnull %stack_var_4, i32 %v2_8054163, i32 %v0_8054158, i32 %v4_8054163, i32 %v5_8054163, i32 %v6_8054163)
  %v8_8054163 = ptrtoint i32* %v7_8054163 to i32
  store i32 %v0_8054158, i32* @ebx, align 4
  %v3_805416c = icmp ugt i32* %v7_8054163, inttoptr (i32 -4096 to i32*)
  call void @__pseudo_cond_branch(i1 %v3_805416c, i32 134563845)
  ret i32 %v8_8054163

; uselistorder directives
  uselistorder i32* @ebp, { 5, 47, 48, 49, 50, 51, 52, 53, 54, 55, 8, 9, 10, 11, 56, 57, 58, 59, 60, 61, 62, 63, 68, 64, 65, 66, 67, 4, 69, 23, 2, 34, 35, 24, 42, 28, 6, 27, 29, 31, 1, 36, 7, 0, 41, 25, 26, 30, 32, 33, 37, 38, 39, 40, 43, 44, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 3, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 88, 89, 91, 92, 93, 94, 95, 96, 45, 46 }
  uselistorder i32* @ecx, { 5, 13, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 0, 36, 37, 38, 1, 39, 15, 14, 40, 41, 42, 2, 43, 44, 45, 3, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 8, 9, 4, 10, 11, 7, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 6, 83, 84, 85, 86, 87 }
}

define i32 @function_8054173(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8054173:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054173 = load i32, i32* @ebx, align 4
  store i32 %v0_8054173, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_8054186 = call i32 @int80_syscall(i32 102)
  store i32 %v1_8054186, i32* %ebx.global-to-local, align 4
  %tmp9 = icmp ult i32 %v1_8054186, -4095
  br i1 %tmp9, label %dec_label_pc_805419f, label %dec_label_pc_8054193

dec_label_pc_8054193:                             ; preds = %dec_label_pc_8054173
  %v1_8054193 = call i32 @function_80524b9(i32 %v0_8054173)
  %v0_8054198 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054198 = sub i32 0, %v0_8054198
  %v2_805419a = inttoptr i32 %v1_8054193 to i32*
  store i32 %v1_8054198, i32* %v2_805419a, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_80541a3.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805419f

dec_label_pc_805419f:                             ; preds = %dec_label_pc_8054173, %dec_label_pc_8054193
  %v2_80541a3 = phi i32 [ %v0_8054173, %dec_label_pc_8054173 ], [ %v2_80541a3.pre, %dec_label_pc_8054193 ]
  %v0_805419f = phi i32 [ %v1_8054186, %dec_label_pc_8054173 ], [ -1, %dec_label_pc_8054193 ]
  %v2_80541a1 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80541a1, i32* @edx, align 4
  store i32 %v2_80541a3, i32* @ebx, align 4
  ret i32 %v0_805419f

; uselistorder directives
  uselistorder i32 %v1_8054186, { 1, 0, 2 }
  uselistorder i32 102, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_805419f, { 1, 0 }
}

define i32 @function_80541a5(i32 %arg1, %sigaction* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80541a5:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg3 to %sigaction*
  %stack_var_-8 = alloca i32, align 4
  %v0_80541a6 = load i32, i32* @esi, align 4
  store i32 %v0_80541a6, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_80541ba = load i32, i32* @ebx, align 4
  %v7_80541c2 = call i32 @sigaction(i32 %arg1, %sigaction* %arg2, %sigaction* %tmp5)
  store i32 %v7_80541c2, i32* %esi.global-to-local, align 4
  %tmp14 = icmp ult i32 %v7_80541c2, -4095
  br i1 %tmp14, label %dec_label_pc_80541da, label %dec_label_pc_80541ce

dec_label_pc_80541ce:                             ; preds = %dec_label_pc_80541a5
  %v1_80541ce = call i32 @function_80524b9(i32 %v0_80541ba)
  %v0_80541d3 = load i32, i32* %esi.global-to-local, align 4
  %v1_80541d3 = sub i32 0, %v0_80541d3
  %v2_80541d5 = inttoptr i32 %v1_80541ce to i32*
  store i32 %v1_80541d3, i32* %v2_80541d5, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_80541dd.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_80541da

dec_label_pc_80541da:                             ; preds = %dec_label_pc_80541a5, %dec_label_pc_80541ce
  %v2_80541dd = phi i32 [ %v0_80541a6, %dec_label_pc_80541a5 ], [ %v2_80541dd.pre, %dec_label_pc_80541ce ]
  %v0_80541da = phi i32 [ %v7_80541c2, %dec_label_pc_80541a5 ], [ -1, %dec_label_pc_80541ce ]
  store i32 %v2_80541dd, i32* @esi, align 4
  ret i32 %v0_80541da

; uselistorder directives
  uselistorder i32 %v7_80541c2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80541da, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @function_80541e0(i32 %arg1) local_unnamed_addr #0 {
dec_label_pc_80541e0:
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg1, i32* @ebx, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @function_8054208(i32 %arg1, %timespec* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8054208:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054208 = load i32, i32* @ebx, align 4
  store i32 %v0_8054208, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v4_805421b = call i32 @clock_getres(i32 %arg1, %timespec* %arg2)
  store i32 %v4_805421b, i32* %ebx.global-to-local, align 4
  %tmp10 = icmp ult i32 %v4_805421b, -4095
  br i1 %tmp10, label %dec_label_pc_8054234, label %dec_label_pc_8054228

dec_label_pc_8054228:                             ; preds = %dec_label_pc_8054208
  %v1_8054228 = call i32 @function_80524b9(i32 %v0_8054208)
  %v0_805422d = load i32, i32* %ebx.global-to-local, align 4
  %v1_805422d = sub i32 0, %v0_805422d
  %v2_805422f = inttoptr i32 %v1_8054228 to i32*
  store i32 %v1_805422d, i32* %v2_805422f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8054238.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054234

dec_label_pc_8054234:                             ; preds = %dec_label_pc_8054208, %dec_label_pc_8054228
  %v2_8054238 = phi i32 [ %v0_8054208, %dec_label_pc_8054208 ], [ %v2_8054238.pre, %dec_label_pc_8054228 ]
  %v0_8054234 = phi i32 [ %v4_805421b, %dec_label_pc_8054208 ], [ -1, %dec_label_pc_8054228 ]
  %v2_8054236 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054236, i32* @edx, align 4
  store i32 %v2_8054238, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054234

; uselistorder directives
  uselistorder i32 %v4_805421b, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054234, { 1, 0 }
}

define i32 @function_805423a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_805423a:
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805423a = load i32, i32* @ebx, align 4
  store i32 %v0_805423a, i32* %stack_var_-4, align 4
  %tmp11 = bitcast i32* %stack_var_-68 to %stat*
  %v4_805424d = call i32 @fstat(i32 %arg1, %stat* %tmp11)
  store i32 %v4_805424d, i32* @ebx, align 4
  %tmp13 = icmp ult i32 %v4_805424d, -4095
  br i1 %tmp13, label %dec_label_pc_8054268, label %dec_label_pc_805425a

dec_label_pc_805425a:                             ; preds = %dec_label_pc_805423a
  %v1_805425a = call i32 @function_80524b9(i32 %v0_805423a)
  %v0_805425f = load i32, i32* @ebx, align 4
  %v1_805425f = sub i32 0, %v0_805425f
  %v2_8054261 = inttoptr i32 %v1_805425a to i32*
  store i32 %v1_805425f, i32* %v2_8054261, align 4
  %v2_8054280.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805427b

dec_label_pc_8054268:                             ; preds = %dec_label_pc_805423a
  %v1_8054268 = icmp eq i32 %v4_805424d, 0
  %v1_805426a = icmp eq i1 %v1_8054268, false
  br i1 %v1_805426a, label %dec_label_pc_805427b, label %dec_label_pc_805426c

dec_label_pc_805426c:                             ; preds = %dec_label_pc_8054268
  %v4_8054273 = bitcast i32* %stack_var_-68 to i16*
  %v5_8054273 = call i32 @function_8054685(i16* %v4_8054273, i32 %arg2, i32 %v4_805424d, i32 %v4_805424d)
  %v0_805427b.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805427b

dec_label_pc_805427b:                             ; preds = %dec_label_pc_8054268, %dec_label_pc_805425a, %dec_label_pc_805426c
  %v2_8054280 = phi i32 [ %v0_805423a, %dec_label_pc_8054268 ], [ %v2_8054280.pre, %dec_label_pc_805425a ], [ %v0_805423a, %dec_label_pc_805426c ]
  %v0_805427b = phi i32 [ %v4_805424d, %dec_label_pc_8054268 ], [ -1, %dec_label_pc_805425a ], [ %v0_805427b.pre, %dec_label_pc_805426c ]
  store i32 %v2_8054280, i32* @ebx, align 4
  ret i32 %v0_805427b

; uselistorder directives
  uselistorder i32 %v4_805424d, { 1, 2, 3, 4, 0, 5 }
  uselistorder label %dec_label_pc_805427b, { 2, 0, 1 }
}

define i32 @function_8054282(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8054282:
  %eax.global-to-local = alloca i32, align 4
  %v0_8054282 = load i32, i32* @edi, align 4
  %v0_8054283 = load i32, i32* @esi, align 4
  %v0_8054284 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v0_8054289 = load i32, i32* @edx, align 4
  %v7_8054293 = inttoptr i32 %arg2 to i32*
  %v8_8054293 = call i32 @function_80542f1(i32 %arg1, i32* %v7_8054293, i32 %arg3, i32 %v0_8054289, i32 %v0_8054284, i32 %v0_8054283, i32 %v0_8054282)
  store i32 %v8_8054293, i32* %eax.global-to-local, align 4
  store i32 %v8_8054293, i32* @esi, align 4
  %tmp24 = icmp slt i32 %v8_8054293, 1
  br i1 %tmp24, label %dec_label_pc_80542eb, label %dec_label_pc_80542a1

dec_label_pc_80542a1:                             ; preds = %dec_label_pc_8054282
  %v0_80542a1 = load i32, i32* @ebx, align 4
  %v2_80542a1 = add i32 %v0_80542a1, %v8_8054293
  store i32 %v2_80542a1, i32* @edi, align 4
  %v7_80542e74 = icmp ult i32 %v0_80542a1, %v2_80542a1
  br i1 %v7_80542e74, label %dec_label_pc_80542a6, label %dec_label_pc_80542eb

dec_label_pc_80542a6:                             ; preds = %dec_label_pc_80542a1, %dec_label_pc_80542a6
  %v0_80542a6 = phi i32 [ %v2_80542e5, %dec_label_pc_80542a6 ], [ %v0_80542a1, %dec_label_pc_80542a1 ]
  %v1_80542a6 = add i32 %v0_80542a6, 8
  %v2_80542a6 = inttoptr i32 %v1_80542a6 to i32*
  %v3_80542a6 = load i32, i32* %v2_80542a6, align 4
  store i32 %v3_80542a6, i32* %eax.global-to-local, align 4
  %v2_80542a9 = add i32 %v0_80542a6, 4
  %v3_80542a9 = inttoptr i32 %v2_80542a9 to i32*
  store i32 %v3_80542a6, i32* %v3_80542a9, align 4
  %v0_80542ac = load i32, i32* @ebx, align 4
  %v1_80542ac = add i32 %v0_80542ac, 16
  %v2_80542ac = inttoptr i32 %v1_80542ac to i32*
  %v3_80542ac = load i32, i32* %v2_80542ac, align 4
  store i32 %v3_80542ac, i32* %eax.global-to-local, align 4
  %v1_80542af = trunc i32 %v3_80542ac to i16
  %v3_80542af = add i32 %v0_80542ac, 8
  %v4_80542af = inttoptr i32 %v3_80542af to i16*
  store i16 %v1_80542af, i16* %v4_80542af, align 2
  %v0_80542b3 = load i32, i32* @ebx, align 4
  %v1_80542b3 = add i32 %v0_80542b3, 18
  %v2_80542b3 = inttoptr i32 %v1_80542b3 to i8*
  %v3_80542b3 = load i8, i8* %v2_80542b3, align 1
  %v4_80542b3 = zext i8 %v3_80542b3 to i32
  %v5_80542b3 = load i32, i32* %eax.global-to-local, align 4
  %v6_80542b3 = and i32 %v5_80542b3, -256
  %v7_80542b3 = or i32 %v6_80542b3, %v4_80542b3
  store i32 %v7_80542b3, i32* %eax.global-to-local, align 4
  %v3_80542b6 = add i32 %v0_80542b3, 10
  %v4_80542b6 = inttoptr i32 %v3_80542b6 to i8*
  store i8 %v3_80542b3, i8* %v4_80542b6, align 1
  %v0_80542ba = load i32, i32* @ebx, align 4
  %v1_80542ba = add i32 %v0_80542ba, 8
  %v2_80542ba = inttoptr i32 %v1_80542ba to i16*
  %v3_80542ba = load i16, i16* %v2_80542ba, align 2
  %v4_80542ba = zext i16 %v3_80542ba to i32
  %v1_80542be = add nsw i32 %v4_80542ba, -19
  %v1_80542c2 = add i32 %v0_80542ba, 19
  %v1_80542c6 = add i32 %v0_80542ba, 11
  store i32 %v1_80542c6, i32* %eax.global-to-local, align 4
  %v3_80542ca = inttoptr i32 %v1_80542c6 to i8*
  %v4_80542ca = call i32 @function_80524e3(i8* %v3_80542ca, i32 %v1_80542c2, i32 %v1_80542be)
  store i32 %v4_80542ca, i32* %eax.global-to-local, align 4
  %v0_80542d2 = load i32, i32* @ebx, align 4
  %v1_80542d2 = add i32 %v0_80542d2, 8
  %v2_80542d2 = inttoptr i32 %v1_80542d2 to i16*
  %v3_80542d2 = load i16, i16* %v2_80542d2, align 2
  %v4_80542d2 = zext i16 %v3_80542d2 to i32
  store i32 %v4_80542d2, i32* %eax.global-to-local, align 4
  %v3_80542d9 = inttoptr i32 %v0_80542d2 to i8*
  %v4_80542d9 = call i32 @function_80524e3(i8* %v3_80542d9, i32 %v0_80542d2, i32 %v4_80542d2)
  store i32 %v4_80542d9, i32* %eax.global-to-local, align 4
  %v0_80542de = load i32, i32* @ebx, align 4
  %v1_80542de = add i32 %v0_80542de, 8
  %v2_80542de = inttoptr i32 %v1_80542de to i16*
  %v3_80542de = load i16, i16* %v2_80542de, align 2
  %v4_80542de = zext i16 %v3_80542de to i32
  store i32 %v4_80542de, i32* %eax.global-to-local, align 4
  %v2_80542e5 = add i32 %v4_80542de, %v0_80542de
  store i32 %v2_80542e5, i32* @ebx, align 4
  %v1_80542e7 = load i32, i32* @edi, align 4
  %v7_80542e7 = icmp ult i32 %v2_80542e5, %v1_80542e7
  br i1 %v7_80542e7, label %dec_label_pc_80542a6, label %dec_label_pc_80542e7.dec_label_pc_80542eb.loopexit_crit_edge

dec_label_pc_80542e7.dec_label_pc_80542eb.loopexit_crit_edge: ; preds = %dec_label_pc_80542a6
  %v0_80542eb.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80542eb

dec_label_pc_80542eb:                             ; preds = %dec_label_pc_80542a1, %dec_label_pc_80542e7.dec_label_pc_80542eb.loopexit_crit_edge, %dec_label_pc_8054282
  %v0_80542eb = phi i32 [ %v8_8054293, %dec_label_pc_8054282 ], [ %v0_80542eb.pre.pre, %dec_label_pc_80542e7.dec_label_pc_80542eb.loopexit_crit_edge ], [ %v8_8054293, %dec_label_pc_80542a1 ]
  store i32 %v0_80542eb, i32* %eax.global-to-local, align 4
  store i32 %v0_8054283, i32* @esi, align 4
  store i32 %v0_8054282, i32* @edi, align 4
  ret i32 %v0_80542eb

; uselistorder directives
  uselistorder i32 %v0_80542eb, { 1, 0 }
  uselistorder i32 %v2_80542e5, { 1, 2, 0 }
  uselistorder i32 %v0_80542d2, { 1, 0, 2 }
  uselistorder i32 %v0_80542ba, { 1, 0, 2 }
  uselistorder i32 %v0_80542a6, { 1, 0 }
  uselistorder i32 %v0_80542a1, { 0, 2, 1 }
  uselistorder i32 %v8_8054293, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i8*, i32, i32)* @function_80524e3, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 11, { 6, 5, 7, 8, 4, 0, 1, 2, 3, 9, 10 }
  uselistorder label %dec_label_pc_80542eb, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80542a6, { 1, 0 }
}

define i32 @function_80542f1(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_80542f1:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %tmp14 = ptrtoint i32* %arg2 to i32
  %stack_var_-60 = alloca i32, align 4
  %v0_80542f4 = load i32, i32* @edi, align 4
  %v0_80542f6 = load i32, i32* @ebx, align 4
  %v15_80542f7 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_8054300 = add i32 %arg3, 30
  %v1_8054306 = and i32 %v1_8054300, -16
  %v2_8054309 = sub i32 %v15_80542f7, %v1_8054306
  %v1_805430b = add i32 %v2_8054309, 15
  %v1_805430f = and i32 %v1_805430b, -16
  %v1_8054315 = inttoptr i32 %v1_805430f to %linux_dirent64*
  store i32 %v1_805430f, i32* %ecx.global-to-local, align 4
  %v2_8054317 = add i32 %v2_8054309, -4
  %v3_8054317 = inttoptr i32 %v2_8054317 to i32*
  store i32 %v0_80542f6, i32* %v3_8054317, align 4
  %v0_8054318 = load i32, i32* %edi.global-to-local, align 4
  store i32 220, i32* %eax.global-to-local, align 4
  %v5_805431f = call i32 @getdents64(i32 %v0_8054318, %linux_dirent64* %v1_8054315, i32 %arg3)
  store i32 %v5_805431f, i32* %eax.global-to-local, align 4
  %v0_8054321 = load i32, i32* @esp, align 4
  %v3_8054321 = add i32 %v0_8054321, 4
  %tmp41 = icmp ult i32 %v5_805431f, -4095
  br i1 %tmp41, label %dec_label_pc_805433b, label %dec_label_pc_805432c

dec_label_pc_805432c:                             ; preds = %dec_label_pc_80542f1
  %v1_805432c = call i32 @function_80524b9(i32 %v5_805431f)
  store i32 %v1_805432c, i32* %eax.global-to-local, align 4
  %v4_8054331 = sub i32 0, %v5_805431f
  %v2_8054337 = inttoptr i32 %v1_805432c to i32*
  store i32 %v4_8054331, i32* %v2_8054337, align 4
  br label %dec_label_pc_80543fd

dec_label_pc_805433b:                             ; preds = %dec_label_pc_80542f1
  store i32 %tmp14, i32* @esi, align 4
  store i32 %v1_805430f, i32* @ebx, align 4
  %v5_80543ed = add i32 %v5_805431f, %v1_805430f
  store i32 %v5_80543ed, i32* %eax.global-to-local, align 4
  %v7_80543f030 = icmp ult i32 %v1_805430f, %v5_80543ed
  br i1 %v7_80543f030, label %dec_label_pc_805435a.lr.ph, label %dec_label_pc_80543f8

dec_label_pc_805435a.lr.ph:                       ; preds = %dec_label_pc_805433b
  %v5_8054367 = add i32 %tmp14, %arg3
  br label %dec_label_pc_805435a

dec_label_pc_805435a:                             ; preds = %dec_label_pc_805435a.lr.ph, %dec_label_pc_805439c
  %stack_var_-32.036 = phi i32 [ -1, %dec_label_pc_805435a.lr.ph ], [ %v3_805439f, %dec_label_pc_805439c ]
  %stack_var_-36.035 = phi i32 [ -1, %dec_label_pc_805435a.lr.ph ], [ %v3_805439c, %dec_label_pc_805439c ]
  %v0_80543a834 = phi i32 [ %v1_805430f, %dec_label_pc_805435a.lr.ph ], [ %v2_80543e5, %dec_label_pc_805439c ]
  %v1_80543ad33 = phi i32 [ %tmp14, %dec_label_pc_805435a.lr.ph ], [ %v2_805436a, %dec_label_pc_805439c ]
  %v0_805437432 = phi i32 [ %v3_8054321, %dec_label_pc_805435a.lr.ph ], [ %v1_80543e7, %dec_label_pc_805439c ]
  %v1_805435a = add i32 %v0_80543a834, 16
  %v2_805435a = inttoptr i32 %v1_805435a to i16*
  %v3_805435a = load i16, i16* %v2_805435a, align 2
  %v4_805435a = zext i16 %v3_805435a to i32
  %v1_805435e = add nuw nsw i32 %v4_805435a, 3
  %v1_8054364 = and i32 %v1_805435e, 131068
  store i32 %v1_8054364, i32* %ecx.global-to-local, align 4
  store i32 %v5_8054367, i32* %eax.global-to-local, align 4
  %v2_805436a = add i32 %v1_8054364, %v1_80543ad33
  %tmp42 = icmp ugt i32 %v2_805436a, %v5_8054367
  br i1 %tmp42, label %dec_label_pc_8054374, label %dec_label_pc_805439c

dec_label_pc_8054374:                             ; preds = %dec_label_pc_805435a
  %v1_8054374 = add i32 %v0_805437432, -4
  %v2_8054374 = inttoptr i32 %v1_8054374 to i32*
  store i32 0, i32* %v2_8054374, align 4
  %v5_8054376 = add i32 %v0_805437432, -8
  %v6_8054376 = inttoptr i32 %v5_8054376 to i32*
  store i32 %stack_var_-32.036, i32* %v6_8054376, align 4
  %v5_8054379 = add i32 %v0_805437432, -12
  %v6_8054379 = inttoptr i32 %v5_8054379 to i32*
  store i32 %stack_var_-36.035, i32* %v6_8054379, align 4
  %v5_805437c = add i32 %v0_805437432, -16
  %v6_805437c = inttoptr i32 %v5_805437c to i32*
  store i32 %arg1, i32* %v6_805437c, align 4
  %v1_805437f = call i32 @function_8054507(i32 %v2_805436a)
  store i32 %v1_805437f, i32* %eax.global-to-local, align 4
  %v0_8054387 = load i32, i32* @esi, align 4
  %v15_8054387 = icmp eq i32 %v0_8054387, %tmp14
  %v1_805438a = icmp eq i1 %v15_8054387, false
  br i1 %v1_805438a, label %dec_label_pc_80543f8, label %dec_label_pc_805438c

dec_label_pc_805438c:                             ; preds = %dec_label_pc_8054374
  %v1_805438c = call i32 @function_80524b9(i32 %v2_805436a)
  store i32 %v1_805438c, i32* %eax.global-to-local, align 4
  %v1_8054391 = inttoptr i32 %v1_805438c to i32*
  store i32 22, i32* %v1_8054391, align 4
  br label %dec_label_pc_80543fd

dec_label_pc_805439c:                             ; preds = %dec_label_pc_805435a
  %v1_805439c = add i32 %v0_80543a834, 8
  %v2_805439c = inttoptr i32 %v1_805439c to i32*
  %v3_805439c = load i32, i32* %v2_805439c, align 4
  store i32 %v3_805439c, i32* %eax.global-to-local, align 4
  %v1_805439f = add i32 %v0_80543a834, 12
  %v2_805439f = inttoptr i32 %v1_805439f to i32*
  %v3_805439f = load i32, i32* %v2_805439f, align 4
  %v1_80543a8 = inttoptr i32 %v0_80543a834 to i32*
  %v2_80543a8 = load i32, i32* %v1_80543a8, align 4
  store i32 %v2_80543a8, i32* %eax.global-to-local, align 4
  %v1_80543aa = add i32 %v0_80543a834, 4
  %v2_80543aa = inttoptr i32 %v1_80543aa to i32*
  %v3_80543aa = load i32, i32* %v2_80543aa, align 4
  %v2_80543ad = add i32 %v1_80543ad33, 4
  %v3_80543ad = inttoptr i32 %v2_80543ad to i32*
  store i32 %v3_80543aa, i32* %v3_80543ad, align 4
  %v0_80543b0 = load i32, i32* %eax.global-to-local, align 4
  %v1_80543b0 = load i32, i32* @esi, align 4
  %v2_80543b0 = inttoptr i32 %v1_80543b0 to i32*
  store i32 %v0_80543b0, i32* %v2_80543b0, align 4
  %v0_80543b2 = load i32, i32* @ebx, align 4
  %v1_80543b2 = add i32 %v0_80543b2, 8
  %v2_80543b2 = inttoptr i32 %v1_80543b2 to i32*
  %v3_80543b2 = load i32, i32* %v2_80543b2, align 4
  store i32 %v3_80543b2, i32* %eax.global-to-local, align 4
  %v1_80543b5 = add i32 %v0_80543b2, 12
  %v2_80543b5 = inttoptr i32 %v1_80543b5 to i32*
  %v3_80543b5 = load i32, i32* %v2_80543b5, align 4
  %v1_80543b8 = load i32, i32* @esi, align 4
  %v2_80543b8 = add i32 %v1_80543b8, 12
  %v3_80543b8 = inttoptr i32 %v2_80543b8 to i32*
  store i32 %v3_80543b5, i32* %v3_80543b8, align 4
  %v0_80543bb = load i32, i32* %eax.global-to-local, align 4
  %v1_80543bb = load i32, i32* @esi, align 4
  %v2_80543bb = add i32 %v1_80543bb, 8
  %v3_80543bb = inttoptr i32 %v2_80543bb to i32*
  store i32 %v0_80543bb, i32* %v3_80543bb, align 4
  %v0_80543be = load i32, i32* %ecx.global-to-local, align 4
  %v1_80543be = trunc i32 %v0_80543be to i16
  %v2_80543be = load i32, i32* @esi, align 4
  %v3_80543be = add i32 %v2_80543be, 16
  %v4_80543be = inttoptr i32 %v3_80543be to i16*
  store i16 %v1_80543be, i16* %v4_80543be, align 2
  %v0_80543c2 = load i32, i32* @ebx, align 4
  %v1_80543c2 = add i32 %v0_80543c2, 18
  %v2_80543c2 = inttoptr i32 %v1_80543c2 to i8*
  %v3_80543c2 = load i8, i8* %v2_80543c2, align 1
  %v4_80543c2 = zext i8 %v3_80543c2 to i32
  %v5_80543c2 = load i32, i32* %eax.global-to-local, align 4
  %v6_80543c2 = and i32 %v5_80543c2, -256
  %v7_80543c2 = or i32 %v6_80543c2, %v4_80543c2
  store i32 %v7_80543c2, i32* %eax.global-to-local, align 4
  %v2_80543c5 = load i32, i32* @esi, align 4
  %v3_80543c5 = add i32 %v2_80543c5, 18
  %v4_80543c5 = inttoptr i32 %v3_80543c5 to i8*
  store i8 %v3_80543c2, i8* %v4_80543c5, align 1
  %v0_80543c8 = load i32, i32* %eax.global-to-local, align 4
  %v1_80543c8 = load i32, i32* @esp, align 4
  %v2_80543c8 = add i32 %v1_80543c8, -4
  %v3_80543c8 = inttoptr i32 %v2_80543c8 to i32*
  store i32 %v0_80543c8, i32* %v3_80543c8, align 4
  %v0_80543c9 = load i32, i32* @ebx, align 4
  %v1_80543c9 = add i32 %v0_80543c9, 16
  %v2_80543c9 = inttoptr i32 %v1_80543c9 to i16*
  %v3_80543c9 = load i16, i16* %v2_80543c9, align 2
  %v4_80543c9 = zext i16 %v3_80543c9 to i32
  %v1_80543cd = add nsw i32 %v4_80543c9, -19
  %v2_80543d0 = add i32 %v1_80543c8, -8
  %v3_80543d0 = inttoptr i32 %v2_80543d0 to i32*
  store i32 %v1_80543cd, i32* %v3_80543d0, align 4
  %v0_80543d1 = load i32, i32* @ebx, align 4
  %v1_80543d1 = add i32 %v0_80543d1, 19
  %v2_80543d4 = add i32 %v1_80543c8, -12
  %v3_80543d4 = inttoptr i32 %v2_80543d4 to i32*
  store i32 %v1_80543d1, i32* %v3_80543d4, align 4
  %v0_80543d5 = load i32, i32* @esi, align 4
  %v1_80543d5 = add i32 %v0_80543d5, 19
  store i32 %v1_80543d5, i32* %eax.global-to-local, align 4
  %v2_80543d8 = add i32 %v1_80543c8, -16
  %v3_80543d8 = inttoptr i32 %v2_80543d8 to i32*
  store i32 %v1_80543d5, i32* %v3_80543d8, align 4
  %v3_80543d9 = inttoptr i32 %v2_805436a to i16*
  %v4_80543d9 = call i32 @function_8054702(i16* %v3_80543d9, i32 %v3_805439c, i32 %v3_805439f)
  store i32 %v4_80543d9, i32* %eax.global-to-local, align 4
  %v0_80543de = load i32, i32* @ebx, align 4
  %v1_80543de = add i32 %v0_80543de, 16
  %v2_80543de = inttoptr i32 %v1_80543de to i16*
  %v3_80543de = load i16, i16* %v2_80543de, align 2
  %v4_80543de = zext i16 %v3_80543de to i32
  store i32 %v2_805436a, i32* @esi, align 4
  %v2_80543e5 = add i32 %v4_80543de, %v0_80543de
  store i32 %v2_80543e5, i32* @ebx, align 4
  %v0_80543e7 = load i32, i32* @esp, align 4
  %v1_80543e7 = add i32 %v0_80543e7, 16
  store i32 %v5_80543ed, i32* %eax.global-to-local, align 4
  %v7_80543f0 = icmp ult i32 %v2_80543e5, %v5_80543ed
  br i1 %v7_80543f0, label %dec_label_pc_805435a, label %dec_label_pc_80543f8

dec_label_pc_80543f8:                             ; preds = %dec_label_pc_805433b, %dec_label_pc_805439c, %dec_label_pc_8054374
  %v0_80543f8 = phi i32 [ %v0_8054387, %dec_label_pc_8054374 ], [ %tmp14, %dec_label_pc_805433b ], [ %v2_805436a, %dec_label_pc_805439c ]
  store i32 %v0_80543f8, i32* %eax.global-to-local, align 4
  %v5_80543fa = sub i32 %v0_80543f8, %tmp14
  br label %dec_label_pc_80543fd

dec_label_pc_80543fd:                             ; preds = %dec_label_pc_805438c, %dec_label_pc_805432c, %dec_label_pc_80543f8
  %storemerge = phi i32 [ %v5_80543fa, %dec_label_pc_80543f8 ], [ -1, %dec_label_pc_805432c ], [ -1, %dec_label_pc_805438c ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_80542f6, i32* @ebx, align 4
  store i32 %v0_80542f4, i32* %edi.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_80543f8, { 1, 0 }
  uselistorder i32 %v2_80543e5, { 0, 2, 1 }
  uselistorder i32 %v3_805439f, { 1, 0 }
  uselistorder i32 %v3_805439c, { 1, 2, 0 }
  uselistorder i32 %v2_805436a, { 0, 5, 6, 1, 2, 4, 3 }
  uselistorder i32 %v0_805437432, { 3, 2, 1, 0 }
  uselistorder i32 %v0_80543a834, { 3, 4, 1, 2, 0 }
  uselistorder i32 %v5_80543ed, { 2, 3, 0, 1 }
  uselistorder i32 %v5_805431f, { 0, 3, 2, 1, 4 }
  uselistorder i32 %tmp14, { 5, 0, 2, 1, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 16, 1, 15, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 19, 17, 0, 18 }
  uselistorder i32 19, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 18, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 22, { 6, 12, 3, 4, 5, 13, 9, 10, 11, 7, 8, 0, 1, 2 }
  uselistorder i32 -12, { 17, 37, 90, 91, 21, 22, 50, 51, 52, 53, 39, 18, 45, 48, 49, 46, 43, 20, 41, 19, 38, 47, 23, 54, 55, 44, 42, 40, 24, 56, 57, 25, 26, 58, 59, 36, 27, 32, 29, 28, 63, 64, 0, 65, 1, 2, 83, 78, 79, 80, 33, 34, 77, 35, 81, 82, 66, 3, 4, 30, 31, 5, 67, 68, 6, 7, 69, 8, 70, 9, 10, 71, 11, 72, 12, 13, 73, 14, 74, 15, 75, 76, 60, 61, 62, 84, 85, 86, 87, 88, 16, 89 }
  uselistorder i32 -8, { 0, 8, 77, 73, 75, 74, 76, 78, 79, 22, 23, 24, 25, 26, 27, 10, 11, 17, 20, 21, 18, 15, 2, 13, 1, 9, 19, 28, 29, 30, 16, 14, 12, 3, 31, 32, 4, 33, 34, 35, 70, 5, 55, 42, 6, 39, 40, 41, 65, 59, 60, 61, 56, 57, 58, 62, 63, 64, 43, 44, 7, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 36, 37, 38, 66, 67, 68, 69, 71, 72 }
  uselistorder i32* @esp, { 37, 38, 39, 5, 6, 7, 8, 9, 206, 207, 0, 50, 51, 52, 53, 54, 55, 56, 57, 12, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 97, 98, 99, 100, 101, 102, 10, 149, 14, 151, 152, 153, 132, 133, 154, 155, 156, 157, 158, 120, 121, 122, 123, 124, 40, 41, 42, 43, 44, 115, 116, 117, 118, 119, 125, 126, 128, 129, 160, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 45, 46, 47, 48, 49, 159, 104, 105, 106, 107, 108, 109, 110, 103, 111, 112, 113, 114, 127, 130, 131, 146, 147, 148, 161, 162, 163, 13, 189, 188, 164, 165, 166, 167, 168, 169, 150, 170, 171, 172, 173, 174, 175, 184, 185, 186, 176, 177, 178, 179, 180, 181, 182, 183, 11, 187, 1, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 2, 3, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 16, 208, 209, 210, 211, 202, 203, 204, 205, 21, 212, 213, 214, 215, 20, 220, 221, 222, 223, 31, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 216, 217, 218, 219, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 22, 249, 250, 251, 32, 252, 253, 254, 255, 256, 257, 258, 260, 259, 4, 261, 262, 263, 264, 265, 266, 267, 268, 19, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 30, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 15, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 24, 23, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 25, 332, 333, 334, 335, 336, 337, 338, 26, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 27, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 28, 359, 360, 29, 361, 362, 363, 364, 365, 366, 367, 368, 369, 18, 33, 370, 371, 372, 373, 374, 375, 376, 34, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 35, 476, 477, 478, 479, 480, 481, 482, 483, 36, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 17, 501, 502, 503 }
  uselistorder i32 15, { 2, 1, 3, 0 }
  uselistorder i32 -16, { 14, 46, 126, 127, 19, 20, 66, 67, 68, 69, 47, 48, 51, 15, 56, 57, 62, 63, 64, 65, 58, 59, 54, 18, 52, 17, 49, 50, 60, 61, 21, 70, 71, 72, 73, 55, 53, 16, 22, 23, 74, 75, 24, 25, 77, 76, 78, 79, 80, 81, 123, 84, 83, 45, 82, 2, 94, 3, 27, 38, 110, 28, 95, 33, 31, 97, 32, 1, 26, 93, 29, 96, 30, 4, 12, 43, 44, 112, 11, 113, 114, 39, 40, 111, 41, 115, 42, 98, 5, 99, 34, 100, 35, 101, 6, 102, 7, 103, 104, 8, 105, 106, 9, 107, 108, 36, 109, 10, 37, 116, 117, 85, 86, 87, 88, 89, 90, 91, 92, 118, 119, 120, 121, 128, 0, 122, 13, 124, 125 }
  uselistorder i32 30, { 5, 4, 2, 1, 6, 3, 0 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80543fd, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80543f8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_805435a, { 1, 0 }
}

define i32 @function_8054405() local_unnamed_addr {
dec_label_pc_8054405:
  %stack_var_-8 = alloca i32, align 4
  %v2_8054408 = ptrtoint i32* %stack_var_-8 to i32
  %v2_805440f = call i32 @function_80544af(i32 7, i32 %v2_8054408)
  store i32 256, i32* @edx, align 4
  %v2_805441c = icmp slt i32 %v2_805440f, 0
  br i1 %v2_805441c, label %dec_label_pc_8054424, label %dec_label_pc_8054420

dec_label_pc_8054420:                             ; preds = %dec_label_pc_8054405
  %v3_8054420 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8054420, i32* @edx, align 4
  br label %dec_label_pc_8054424

dec_label_pc_8054424:                             ; preds = %dec_label_pc_8054405, %dec_label_pc_8054420
  %v0_8054424 = phi i32 [ 256, %dec_label_pc_8054405 ], [ %v3_8054420, %dec_label_pc_8054420 ]
  ret i32 %v0_8054424

; uselistorder directives
  uselistorder i32 7, { 4, 0, 5, 1, 2, 7, 8, 6, 9, 10, 3 }
  uselistorder label %dec_label_pc_8054424, { 1, 0 }
}

define i32 @function_805442a() local_unnamed_addr {
dec_label_pc_805442a:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805442a = load i32, i32* @ebx, align 4
  store i32 %v0_805442a, i32* %stack_var_-4, align 4
  %v1_8054433 = call i32 @int80_syscall(i32 202)
  store i32 %v1_8054433, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8054433, -4095
  br i1 %tmp7, label %dec_label_pc_805444a, label %dec_label_pc_805443e

dec_label_pc_805443e:                             ; preds = %dec_label_pc_805442a
  %v1_805443e = call i32 @function_80524b9(i32 %v0_805442a)
  %v0_8054443 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054443 = sub i32 0, %v0_8054443
  %v2_8054445 = inttoptr i32 %v1_805443e to i32*
  store i32 %v1_8054443, i32* %v2_8054445, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_805444e.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805444a

dec_label_pc_805444a:                             ; preds = %dec_label_pc_805442a, %dec_label_pc_805443e
  %v2_805444e = phi i32 [ %v0_805442a, %dec_label_pc_805442a ], [ %v2_805444e.pre, %dec_label_pc_805443e ]
  %v0_805444a = phi i32 [ %v1_8054433, %dec_label_pc_805442a ], [ -1, %dec_label_pc_805443e ]
  store i32 %v2_805444e, i32* @ebx, align 4
  ret i32 %v0_805444a

; uselistorder directives
  uselistorder i32 %v1_8054433, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805444a, { 1, 0 }
}

define i32 @function_8054450() local_unnamed_addr {
dec_label_pc_8054450:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054450 = load i32, i32* @ebx, align 4
  store i32 %v0_8054450, i32* %stack_var_-4, align 4
  %v1_8054459 = call i32 @int80_syscall(i32 201)
  store i32 %v1_8054459, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8054459, -4095
  br i1 %tmp7, label %dec_label_pc_8054470, label %dec_label_pc_8054464

dec_label_pc_8054464:                             ; preds = %dec_label_pc_8054450
  %v1_8054464 = call i32 @function_80524b9(i32 %v0_8054450)
  %v0_8054469 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054469 = sub i32 0, %v0_8054469
  %v2_805446b = inttoptr i32 %v1_8054464 to i32*
  store i32 %v1_8054469, i32* %v2_805446b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8054474.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054470

dec_label_pc_8054470:                             ; preds = %dec_label_pc_8054450, %dec_label_pc_8054464
  %v2_8054474 = phi i32 [ %v0_8054450, %dec_label_pc_8054450 ], [ %v2_8054474.pre, %dec_label_pc_8054464 ]
  %v0_8054470 = phi i32 [ %v1_8054459, %dec_label_pc_8054450 ], [ -1, %dec_label_pc_8054464 ]
  store i32 %v2_8054474, i32* @ebx, align 4
  ret i32 %v0_8054470

; uselistorder directives
  uselistorder i32 %v1_8054459, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054470, { 1, 0 }
}

define i32 @function_8054476() local_unnamed_addr {
dec_label_pc_8054476:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054476 = load i32, i32* @ebx, align 4
  store i32 %v0_8054476, i32* %stack_var_-4, align 4
  %v1_805447f = call i32 @int80_syscall(i32 200)
  store i32 %v1_805447f, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_805447f, -4095
  br i1 %tmp7, label %dec_label_pc_8054496, label %dec_label_pc_805448a

dec_label_pc_805448a:                             ; preds = %dec_label_pc_8054476
  %v1_805448a = call i32 @function_80524b9(i32 %v0_8054476)
  %v0_805448f = load i32, i32* %ebx.global-to-local, align 4
  %v1_805448f = sub i32 0, %v0_805448f
  %v2_8054491 = inttoptr i32 %v1_805448a to i32*
  store i32 %v1_805448f, i32* %v2_8054491, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_805449a.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054496

dec_label_pc_8054496:                             ; preds = %dec_label_pc_8054476, %dec_label_pc_805448a
  %v2_805449a = phi i32 [ %v0_8054476, %dec_label_pc_8054476 ], [ %v2_805449a.pre, %dec_label_pc_805448a ]
  %v0_8054496 = phi i32 [ %v1_805447f, %dec_label_pc_8054476 ], [ -1, %dec_label_pc_805448a ]
  store i32 %v2_805449a, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054496

; uselistorder directives
  uselistorder i32 %v1_805447f, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054496, { 1, 0 }
}

define i32 @function_805449c() local_unnamed_addr {
dec_label_pc_805449c:
  %v0_805449c = load i32, i32* @global_var_80566e4.79, align 4
  %v1_80544a6 = icmp eq i32 %v0_805449c, 0
  br i1 %v1_80544a6, label %dec_label_pc_80544ac, label %dec_label_pc_80544aa

dec_label_pc_80544aa:                             ; preds = %dec_label_pc_805449c
  br label %dec_label_pc_80544ac

dec_label_pc_80544ac:                             ; preds = %dec_label_pc_805449c, %dec_label_pc_80544aa
  %storemerge = phi i32 [ %v0_805449c, %dec_label_pc_80544aa ], [ 4096, %dec_label_pc_805449c ]
  %v0_80544ac = phi i32 [ %v0_805449c, %dec_label_pc_80544aa ], [ 4096, %dec_label_pc_805449c ]
  store i32 %storemerge, i32* @edx, align 4
  ret i32 %v0_80544ac

; uselistorder directives
  uselistorder i32 4096, { 0, 1, 3, 4, 2 }
  uselistorder label %dec_label_pc_80544ac, { 1, 0 }
}

define i32 @function_80544af(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_80544af:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80544af = load i32, i32* @ebx, align 4
  store i32 %v0_80544af, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_80544c2 = call i32 @int80_syscall(i32 191)
  store i32 %v1_80544c2, i32* %ebx.global-to-local, align 4
  %tmp9 = icmp ult i32 %v1_80544c2, -4095
  br i1 %tmp9, label %dec_label_pc_80544db, label %dec_label_pc_80544cf

dec_label_pc_80544cf:                             ; preds = %dec_label_pc_80544af
  %v1_80544cf = call i32 @function_80524b9(i32 %v0_80544af)
  %v0_80544d4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80544d4 = sub i32 0, %v0_80544d4
  %v2_80544d6 = inttoptr i32 %v1_80544cf to i32*
  store i32 %v1_80544d4, i32* %v2_80544d6, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_80544df.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80544db

dec_label_pc_80544db:                             ; preds = %dec_label_pc_80544af, %dec_label_pc_80544cf
  %v2_80544df = phi i32 [ %v0_80544af, %dec_label_pc_80544af ], [ %v2_80544df.pre, %dec_label_pc_80544cf ]
  %v0_80544db = phi i32 [ %v1_80544c2, %dec_label_pc_80544af ], [ -1, %dec_label_pc_80544cf ]
  store i32 %v2_80544df, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80544db

; uselistorder directives
  uselistorder i32 %v1_80544c2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80544db, { 1, 0 }
}

define i32 @function_80544e1() local_unnamed_addr {
dec_label_pc_80544e1:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80544e1 = load i32, i32* @ebx, align 4
  store i32 %v0_80544e1, i32* %stack_var_-4, align 4
  %v1_80544ea = call i32 @int80_syscall(i32 199)
  store i32 %v1_80544ea, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_80544ea, -4095
  br i1 %tmp7, label %dec_label_pc_8054501, label %dec_label_pc_80544f5

dec_label_pc_80544f5:                             ; preds = %dec_label_pc_80544e1
  %v1_80544f5 = call i32 @function_80524b9(i32 %v0_80544e1)
  %v0_80544fa = load i32, i32* %ebx.global-to-local, align 4
  %v1_80544fa = sub i32 0, %v0_80544fa
  %v2_80544fc = inttoptr i32 %v1_80544f5 to i32*
  store i32 %v1_80544fa, i32* %v2_80544fc, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8054505.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054501

dec_label_pc_8054501:                             ; preds = %dec_label_pc_80544e1, %dec_label_pc_80544f5
  %v2_8054505 = phi i32 [ %v0_80544e1, %dec_label_pc_80544e1 ], [ %v2_8054505.pre, %dec_label_pc_80544f5 ]
  %v0_8054501 = phi i32 [ %v1_80544ea, %dec_label_pc_80544e1 ], [ -1, %dec_label_pc_80544f5 ]
  store i32 %v2_8054505, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054501

; uselistorder directives
  uselistorder i32 %v1_80544ea, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054501, { 1, 0 }
}

define i32 @function_8054507(i32 %arg1) local_unnamed_addr {
dec_label_pc_8054507:
  %esi.global-to-local = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %v2_805451d = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_805451d, i32* %esi.global-to-local, align 4
  %v1_8054534 = call i32 @int80_syscall(i32 140)
  store i32 %v1_8054534, i32* %esi.global-to-local, align 4
  %tmp18 = icmp ult i32 %v1_8054534, -4095
  br i1 %tmp18, label %dec_label_pc_805454e, label %dec_label_pc_8054540

dec_label_pc_8054540:                             ; preds = %dec_label_pc_8054507
  %v2_8054521 = ashr i32 %tmp8, 31
  %v1_8054540 = call i32 @function_80524b9(i32 %v2_8054521)
  %v0_8054545 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054545 = sub i32 0, %v0_8054545
  %v2_8054547 = inttoptr i32 %v1_8054540 to i32*
  store i32 %v1_8054545, i32* %v2_8054547, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8054552

dec_label_pc_805454e:                             ; preds = %dec_label_pc_8054507
  %v1_805454e = icmp eq i32 %v1_8054534, 0
  br i1 %v1_805454e, label %dec_label_pc_8054557, label %dec_label_pc_8054552

dec_label_pc_8054552:                             ; preds = %dec_label_pc_805454e, %dec_label_pc_8054540
  %v0_8054552 = phi i32 [ %v1_8054534, %dec_label_pc_805454e ], [ -1, %dec_label_pc_8054540 ]
  br label %dec_label_pc_805455f

dec_label_pc_8054557:                             ; preds = %dec_label_pc_805454e
  %v3_8054557 = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_805455f

dec_label_pc_805455f:                             ; preds = %dec_label_pc_8054552, %dec_label_pc_8054557
  %v0_8054565 = phi i32 [ %v0_8054552, %dec_label_pc_8054552 ], [ %v3_8054557, %dec_label_pc_8054557 ]
  ret i32 %v0_8054565

; uselistorder directives
  uselistorder i32 %v1_8054534, { 1, 2, 0, 3 }
  uselistorder i32 31, { 8, 6, 1, 2, 3, 4, 7, 5, 9, 0, 10 }
  uselistorder i32 140, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805455f, { 1, 0 }
}

define i32 @function_8054566(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_8054566:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8054567 = load i32, i32* @esi, align 4
  store i32 %v0_8054567, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_805457f = load i32, i32* @ebx, align 4
  %v5_8054587 = call i32* (i32*, i32, i32, i32, ...) @mremap(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  %v6_8054587 = ptrtoint i32* %v5_8054587 to i32
  store i32 %v0_805457f, i32* @ebx, align 4
  store i32 %v6_8054587, i32* %esi.global-to-local, align 4
  %tmp13 = icmp ugt i32* %v5_8054587, inttoptr (i32 -4096 to i32*)
  br i1 %tmp13, label %dec_label_pc_8054593, label %dec_label_pc_805459f

dec_label_pc_8054593:                             ; preds = %dec_label_pc_8054566
  %v1_8054593 = call i32 @function_80524b9(i32 %v0_805457f)
  %v0_8054598 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054598 = sub i32 0, %v0_8054598
  %v2_805459a = inttoptr i32 %v1_8054593 to i32*
  store i32 %v1_8054598, i32* %v2_805459a, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_80545a2.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_805459f

dec_label_pc_805459f:                             ; preds = %dec_label_pc_8054566, %dec_label_pc_8054593
  %v2_80545a2 = phi i32 [ %v0_8054567, %dec_label_pc_8054566 ], [ %v2_80545a2.pre, %dec_label_pc_8054593 ]
  %v0_805459f = phi i32 [ %v6_8054587, %dec_label_pc_8054566 ], [ -1, %dec_label_pc_8054593 ]
  %v2_80545a1 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80545a1, i32* @edx, align 4
  store i32 %v2_80545a2, i32* @esi, align 4
  ret i32 %v0_805459f

; uselistorder directives
  uselistorder i32 %v0_805457f, { 1, 0 }
  uselistorder label %dec_label_pc_805459f, { 1, 0 }
}

define i32 @function_80545a5(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80545a5:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80545a5 = load i32, i32* @ebx, align 4
  store i32 %v0_80545a5, i32* %stack_var_-4, align 4
  store i32 %tmp4, i32* %ebx.global-to-local, align 4
  %v3_80545b8 = call i32 @munmap(i32* %arg1, i32 %arg2)
  store i32 %v3_80545b8, i32* %ebx.global-to-local, align 4
  %tmp10 = icmp ult i32 %v3_80545b8, -4095
  br i1 %tmp10, label %dec_label_pc_80545d1, label %dec_label_pc_80545c5

dec_label_pc_80545c5:                             ; preds = %dec_label_pc_80545a5
  %v1_80545c5 = call i32 @function_80524b9(i32 %v0_80545a5)
  %v0_80545ca = load i32, i32* %ebx.global-to-local, align 4
  %v1_80545ca = sub i32 0, %v0_80545ca
  %v2_80545cc = inttoptr i32 %v1_80545c5 to i32*
  store i32 %v1_80545ca, i32* %v2_80545cc, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_80545d5.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80545d1

dec_label_pc_80545d1:                             ; preds = %dec_label_pc_80545a5, %dec_label_pc_80545c5
  %v2_80545d5 = phi i32 [ %v0_80545a5, %dec_label_pc_80545a5 ], [ %v2_80545d5.pre, %dec_label_pc_80545c5 ]
  %v0_80545d1 = phi i32 [ %v3_80545b8, %dec_label_pc_80545a5 ], [ -1, %dec_label_pc_80545c5 ]
  %v2_80545d3 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80545d3, i32* @edx, align 4
  store i32 %v2_80545d5, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80545d1

; uselistorder directives
  uselistorder i32 %v3_80545b8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80545d1, { 1, 0 }
}

define i32 @function_80545d7(%timespec* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80545d7:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = inttoptr i32 %arg2 to %timespec*
  %stack_var_-4 = alloca i32, align 4
  %v0_80545d7 = load i32, i32* @ebx, align 4
  store i32 %v0_80545d7, i32* %stack_var_-4, align 4
  %v4_80545db = ptrtoint %timespec* %arg1 to i32
  store i32 %v4_80545db, i32* %ebx.global-to-local, align 4
  %v6_80545ea = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp4)
  store i32 %v6_80545ea, i32* %ebx.global-to-local, align 4
  %tmp11 = icmp ult i32 %v6_80545ea, -4095
  br i1 %tmp11, label %dec_label_pc_8054603, label %dec_label_pc_80545f7

dec_label_pc_80545f7:                             ; preds = %dec_label_pc_80545d7
  %v1_80545f7 = call i32 @function_80524b9(i32 %v0_80545d7)
  %v0_80545fc = load i32, i32* %ebx.global-to-local, align 4
  %v1_80545fc = sub i32 0, %v0_80545fc
  %v2_80545fe = inttoptr i32 %v1_80545f7 to i32*
  store i32 %v1_80545fc, i32* %v2_80545fe, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8054607.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054603

dec_label_pc_8054603:                             ; preds = %dec_label_pc_80545d7, %dec_label_pc_80545f7
  %v2_8054607 = phi i32 [ %v0_80545d7, %dec_label_pc_80545d7 ], [ %v2_8054607.pre, %dec_label_pc_80545f7 ]
  %v0_8054603 = phi i32 [ %v6_80545ea, %dec_label_pc_80545d7 ], [ -1, %dec_label_pc_80545f7 ]
  store i32 %v2_8054607, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054603

; uselistorder directives
  uselistorder i32 %v6_80545ea, { 1, 0, 2 }
  uselistorder %timespec* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054603, { 1, 0 }
}

define i32 @function_8054609(i32 %arg1) local_unnamed_addr {
dec_label_pc_8054609:
  %stack_var_-12 = alloca i32, align 4
  %v0_805460a = load i32, i32* @ebx, align 4
  %v0_805460e = load i32, i32* @global_var_80566f8.86, align 8
  %v1_805460e = icmp eq i32 %v0_805460e, 0
  %v1_8054619 = icmp eq i1 %v1_805460e, false
  br i1 %v1_8054619, label %dec_label_pc_805462c, label %dec_label_pc_805461b

dec_label_pc_805461b:                             ; preds = %dec_label_pc_8054609
  %v1_8054620 = call i32 @function_80547cf(i32 0)
  %v2_8054628 = icmp slt i32 %v1_8054620, 0
  br i1 %v2_8054628, label %dec_label_pc_805464e, label %dec_label_pc_805461b.dec_label_pc_805462c_crit_edge

dec_label_pc_805461b.dec_label_pc_805462c_crit_edge: ; preds = %dec_label_pc_805461b
  %v0_805462e.pre = load i32, i32* @global_var_80566f8.86, align 8
  br label %dec_label_pc_805462c

dec_label_pc_805462c:                             ; preds = %dec_label_pc_805461b.dec_label_pc_805462c_crit_edge, %dec_label_pc_8054609
  %v0_805463c = phi i32 [ %v0_805462e.pre, %dec_label_pc_805461b.dec_label_pc_805462c_crit_edge ], [ %v0_805460e, %dec_label_pc_8054609 ]
  %v1_805462c = icmp eq i32 %arg1, 0
  %v1_8054633 = icmp eq i1 %v1_805462c, false
  br i1 %v1_8054633, label %dec_label_pc_8054639, label %dec_label_pc_8054635

dec_label_pc_8054635:                             ; preds = %dec_label_pc_805462c
  br label %dec_label_pc_8054651

dec_label_pc_8054639:                             ; preds = %dec_label_pc_805462c
  store i32 %v0_805463c, i32* @ebx, align 4
  %v2_805463e = add i32 %v0_805463c, %arg1
  %v1_8054642 = call i32 @function_80547cf(i32 %v2_805463e)
  %v2_805464a = icmp slt i32 %v1_8054642, 0
  %v1_805464c = icmp eq i1 %v2_805464a, false
  br i1 %v1_805464c, label %dec_label_pc_8054639.dec_label_pc_8054651_crit_edge, label %dec_label_pc_805464e

dec_label_pc_8054639.dec_label_pc_8054651_crit_edge: ; preds = %dec_label_pc_8054639
  %v0_8054651.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8054651

dec_label_pc_805464e:                             ; preds = %dec_label_pc_8054639, %dec_label_pc_805461b
  br label %dec_label_pc_8054651

dec_label_pc_8054651:                             ; preds = %dec_label_pc_8054639.dec_label_pc_8054651_crit_edge, %dec_label_pc_8054635, %dec_label_pc_805464e
  %v0_8054651 = phi i32 [ %v0_8054651.pre, %dec_label_pc_8054639.dec_label_pc_8054651_crit_edge ], [ %v0_805463c, %dec_label_pc_8054635 ], [ -1, %dec_label_pc_805464e ]
  %v2_8054653 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054653, i32* @edx, align 4
  store i32 %v0_805460a, i32* @ebx, align 4
  ret i32 %v0_8054651

; uselistorder directives
  uselistorder i32 %v0_805463c, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_80547cf, { 1, 0 }
  uselistorder label %dec_label_pc_8054651, { 2, 0, 1 }
}

define i32 @function_8054657(%tms* %arg1) local_unnamed_addr {
dec_label_pc_8054657:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054657 = load i32, i32* @edi, align 4
  store i32 %v0_8054657, i32* %stack_var_-4, align 4
  %v4_805465b = ptrtoint %tms* %arg1 to i32
  store i32 %v4_805465b, i32* %edi.global-to-local, align 4
  %v0_805465f = load i32, i32* @ebx, align 4
  %v3_8054667 = call i32 @times(%tms* %arg1)
  store i32 %v3_8054667, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v3_8054667, -4095
  br i1 %tmp9, label %dec_label_pc_805467f, label %dec_label_pc_8054673

dec_label_pc_8054673:                             ; preds = %dec_label_pc_8054657
  %v1_8054673 = call i32 @function_80524b9(i32 %v0_805465f)
  %v0_8054678 = load i32, i32* %edi.global-to-local, align 4
  %v1_8054678 = sub i32 0, %v0_8054678
  %v2_805467a = inttoptr i32 %v1_8054673 to i32*
  store i32 %v1_8054678, i32* %v2_805467a, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8054683.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805467f

dec_label_pc_805467f:                             ; preds = %dec_label_pc_8054657, %dec_label_pc_8054673
  %v2_8054683 = phi i32 [ %v0_8054657, %dec_label_pc_8054657 ], [ %v2_8054683.pre, %dec_label_pc_8054673 ]
  %v0_805467f = phi i32 [ %v3_8054667, %dec_label_pc_8054657 ], [ -1, %dec_label_pc_8054673 ]
  store i32 %v2_8054683, i32* %edi.global-to-local, align 4
  ret i32 %v0_805467f

; uselistorder directives
  uselistorder i32 %v3_8054667, { 1, 0, 2 }
  uselistorder i32* @edi, { 6, 7, 8, 9, 10, 11, 127, 5, 128, 129, 130, 1, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 33, 34, 35, 36, 37, 38, 39, 40, 41, 149, 163, 164, 150, 151, 152, 153, 154, 155, 156, 157, 2, 158, 159, 160, 161, 162, 165, 166, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 167, 168, 23, 24, 25, 169, 170, 26, 171, 172, 173, 174, 42, 43, 44, 57, 92, 93, 94, 95, 96, 97, 98, 99, 85, 86, 87, 58, 59, 60, 61, 62, 100, 101, 102, 73, 74, 75, 27, 28, 29, 70, 71, 72, 76, 77, 78, 79, 80, 81, 82, 83, 104, 105, 106, 91, 107, 108, 109, 88, 30, 31, 32, 103, 63, 64, 65, 66, 67, 68, 69, 84, 89, 90, 110, 111, 112, 113, 114, 115, 0, 4, 126, 116, 117, 118, 119, 120, 121, 125, 122, 123, 124, 3, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 197, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227 }
  uselistorder %tms* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805467f, { 1, 0 }
}

define i32 @function_8054685(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8054685:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8054686 = load i32, i32* @ebx, align 4
  store i32 %v0_8054686, i32* %stack_var_-8, align 4
  %v4_805468a = ptrtoint i16* %arg1 to i32
  store i32 %v4_805468a, i32* %esi.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v3_8054697 = inttoptr i32 %arg2 to i8*
  %v4_8054697 = call i32 @function_805250a(i8* %v3_8054697, i32 0, i32 88)
  store i32 %v4_8054697, i32* %eax.global-to-local, align 4
  %v2_805469c = load i16, i16* %arg1, align 2
  %v3_805469c = zext i16 %v2_805469c to i32
  store i32 %v3_805469c, i32* %eax.global-to-local, align 4
  %v0_805469f = load i32, i32* %ebx.global-to-local, align 4
  %v1_805469f = add i32 %v0_805469f, 4
  %v2_805469f = inttoptr i32 %v1_805469f to i32*
  store i32 0, i32* %v2_805469f, align 4
  %v0_80546a6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80546a6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80546a6 = inttoptr i32 %v1_80546a6 to i32*
  store i32 %v0_80546a6, i32* %v2_80546a6, align 4
  %v0_80546a8 = load i32, i32* %esi.global-to-local, align 4
  %v1_80546a8 = add i32 %v0_80546a8, 4
  %v2_80546a8 = inttoptr i32 %v1_80546a8 to i32*
  %v3_80546a8 = load i32, i32* %v2_80546a8, align 4
  store i32 %v3_80546a8, i32* %eax.global-to-local, align 4
  %v1_80546ab = load i32, i32* %ebx.global-to-local, align 4
  %v2_80546ab = add i32 %v1_80546ab, 12
  %v3_80546ab = inttoptr i32 %v2_80546ab to i32*
  store i32 %v3_80546a8, i32* %v3_80546ab, align 4
  %v0_80546ae = load i32, i32* %esi.global-to-local, align 4
  %v1_80546ae = add i32 %v0_80546ae, 8
  %v2_80546ae = inttoptr i32 %v1_80546ae to i16*
  %v3_80546ae = load i16, i16* %v2_80546ae, align 2
  %v4_80546ae = zext i16 %v3_80546ae to i32
  store i32 %v4_80546ae, i32* %eax.global-to-local, align 4
  %v1_80546b2 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80546b2 = add i32 %v1_80546b2, 16
  %v3_80546b2 = inttoptr i32 %v2_80546b2 to i32*
  store i32 %v4_80546ae, i32* %v3_80546b2, align 4
  %v0_80546b5 = load i32, i32* %esi.global-to-local, align 4
  %v1_80546b5 = add i32 %v0_80546b5, 10
  %v2_80546b5 = inttoptr i32 %v1_80546b5 to i16*
  %v3_80546b5 = load i16, i16* %v2_80546b5, align 2
  %v4_80546b5 = zext i16 %v3_80546b5 to i32
  store i32 %v4_80546b5, i32* %eax.global-to-local, align 4
  %v1_80546b9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80546b9 = add i32 %v1_80546b9, 20
  %v3_80546b9 = inttoptr i32 %v2_80546b9 to i32*
  store i32 %v4_80546b5, i32* %v3_80546b9, align 4
  %v0_80546bc = load i32, i32* %esi.global-to-local, align 4
  %v1_80546bc = add i32 %v0_80546bc, 12
  %v2_80546bc = inttoptr i32 %v1_80546bc to i16*
  %v3_80546bc = load i16, i16* %v2_80546bc, align 2
  %v4_80546bc = zext i16 %v3_80546bc to i32
  store i32 %v4_80546bc, i32* %eax.global-to-local, align 4
  %v1_80546c0 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80546c0 = add i32 %v1_80546c0, 24
  %v3_80546c0 = inttoptr i32 %v2_80546c0 to i32*
  store i32 %v4_80546bc, i32* %v3_80546c0, align 4
  %v0_80546c3 = load i32, i32* %esi.global-to-local, align 4
  %v1_80546c3 = add i32 %v0_80546c3, 14
  %v2_80546c3 = inttoptr i32 %v1_80546c3 to i16*
  %v3_80546c3 = load i16, i16* %v2_80546c3, align 2
  %v4_80546c3 = zext i16 %v3_80546c3 to i32
  store i32 %v4_80546c3, i32* %eax.global-to-local, align 4
  %v1_80546c7 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80546c7 = add i32 %v1_80546c7, 28
  %v3_80546c7 = inttoptr i32 %v2_80546c7 to i32*
  store i32 %v4_80546c3, i32* %v3_80546c7, align 4
  %v0_80546ca = load i32, i32* %esi.global-to-local, align 4
  %v1_80546ca = add i32 %v0_80546ca, 16
  %v2_80546ca = inttoptr i32 %v1_80546ca to i16*
  %v3_80546ca = load i16, i16* %v2_80546ca, align 2
  %v4_80546ca = zext i16 %v3_80546ca to i32
  store i32 %v4_80546ca, i32* %eax.global-to-local, align 4
  %v0_80546ce = load i32, i32* %ebx.global-to-local, align 4
  %v1_80546ce = add i32 %v0_80546ce, 36
  %v2_80546ce = inttoptr i32 %v1_80546ce to i32*
  store i32 0, i32* %v2_80546ce, align 4
  %v0_80546d5 = load i32, i32* %eax.global-to-local, align 4
  %v1_80546d5 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80546d5 = add i32 %v1_80546d5, 32
  %v3_80546d5 = inttoptr i32 %v2_80546d5 to i32*
  store i32 %v0_80546d5, i32* %v3_80546d5, align 4
  %v0_80546d8 = load i32, i32* %esi.global-to-local, align 4
  %v1_80546d8 = add i32 %v0_80546d8, 20
  %v2_80546d8 = inttoptr i32 %v1_80546d8 to i32*
  %v3_80546d8 = load i32, i32* %v2_80546d8, align 4
  store i32 %v3_80546d8, i32* %eax.global-to-local, align 4
  %v1_80546db = load i32, i32* %ebx.global-to-local, align 4
  %v2_80546db = add i32 %v1_80546db, 44
  %v3_80546db = inttoptr i32 %v2_80546db to i32*
  store i32 %v3_80546d8, i32* %v3_80546db, align 4
  %v0_80546de = load i32, i32* %esi.global-to-local, align 4
  %v1_80546de = add i32 %v0_80546de, 24
  %v2_80546de = inttoptr i32 %v1_80546de to i32*
  %v3_80546de = load i32, i32* %v2_80546de, align 4
  store i32 %v3_80546de, i32* %eax.global-to-local, align 4
  %v1_80546e1 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80546e1 = add i32 %v1_80546e1, 48
  %v3_80546e1 = inttoptr i32 %v2_80546e1 to i32*
  store i32 %v3_80546de, i32* %v3_80546e1, align 4
  %v0_80546e4 = load i32, i32* %esi.global-to-local, align 4
  %v1_80546e4 = add i32 %v0_80546e4, 28
  %v2_80546e4 = inttoptr i32 %v1_80546e4 to i32*
  %v3_80546e4 = load i32, i32* %v2_80546e4, align 4
  store i32 %v3_80546e4, i32* %eax.global-to-local, align 4
  %v1_80546e7 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80546e7 = add i32 %v1_80546e7, 52
  %v3_80546e7 = inttoptr i32 %v2_80546e7 to i32*
  store i32 %v3_80546e4, i32* %v3_80546e7, align 4
  %v0_80546ea = load i32, i32* %esi.global-to-local, align 4
  %v1_80546ea = add i32 %v0_80546ea, 32
  %v2_80546ea = inttoptr i32 %v1_80546ea to i32*
  %v3_80546ea = load i32, i32* %v2_80546ea, align 4
  store i32 %v3_80546ea, i32* %eax.global-to-local, align 4
  %v1_80546ed = load i32, i32* %ebx.global-to-local, align 4
  %v2_80546ed = add i32 %v1_80546ed, 56
  %v3_80546ed = inttoptr i32 %v2_80546ed to i32*
  store i32 %v3_80546ea, i32* %v3_80546ed, align 4
  %v0_80546f0 = load i32, i32* %esi.global-to-local, align 4
  %v1_80546f0 = add i32 %v0_80546f0, 40
  %v2_80546f0 = inttoptr i32 %v1_80546f0 to i32*
  %v3_80546f0 = load i32, i32* %v2_80546f0, align 4
  store i32 %v3_80546f0, i32* %eax.global-to-local, align 4
  %v1_80546f3 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80546f3 = add i32 %v1_80546f3, 64
  %v3_80546f3 = inttoptr i32 %v2_80546f3 to i32*
  store i32 %v3_80546f0, i32* %v3_80546f3, align 4
  %v0_80546f6 = load i32, i32* %esi.global-to-local, align 4
  %v1_80546f6 = add i32 %v0_80546f6, 48
  %v2_80546f6 = inttoptr i32 %v1_80546f6 to i32*
  %v3_80546f6 = load i32, i32* %v2_80546f6, align 4
  store i32 %v3_80546f6, i32* %eax.global-to-local, align 4
  %v1_80546f9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80546f9 = add i32 %v1_80546f9, 72
  %v3_80546f9 = inttoptr i32 %v2_80546f9 to i32*
  store i32 %v3_80546f6, i32* %v3_80546f9, align 4
  %v2_80546ff = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80546ff, i32* @ebx, align 4
  ret i32 %v3_80546f6

; uselistorder directives
  uselistorder i32 72, { 4, 3, 5, 0, 6, 7, 8, 1, 9, 10, 11, 12, 2 }
  uselistorder i32 64, { 11, 10, 6, 5, 0, 1, 7, 2, 4, 8, 3, 9 }
  uselistorder i32 40, { 5, 4, 6, 0, 7, 8, 9, 1, 2, 10, 11, 12, 13, 3 }
  uselistorder i32 56, { 6, 5, 0, 1, 2, 3, 7, 8, 4 }
  uselistorder i32 52, { 6, 5, 7, 8, 2, 3, 0, 4, 1 }
  uselistorder i32 48, { 11, 12, 10, 6, 9, 1, 2, 3, 7, 0, 8, 13, 4, 14, 15, 16, 17, 5 }
  uselistorder i32 32, { 45, 46, 56, 35, 44, 57, 58, 47, 48, 59, 1, 0, 2, 3, 40, 4, 5, 6, 7, 8, 36, 60, 41, 53, 42, 43, 34, 10, 9, 12, 11, 13, 14, 38, 37, 54, 55, 49, 50, 15, 51, 17, 16, 39, 52, 61, 18, 19, 20, 21, 62, 22, 23, 63, 64, 25, 24, 27, 26, 28, 29, 65, 30, 31, 66, 67, 68, 32, 33, 69 }
  uselistorder i32 36, { 5, 4, 0, 2, 1, 6, 7, 8, 9, 3 }
  uselistorder i32 14, { 3, 0, 2, 1, 4, 5 }
  uselistorder i32 24, { 18, 19, 16, 27, 28, 49, 17, 20, 21, 0, 1, 12, 40, 36, 7, 10, 22, 11, 23, 24, 8, 42, 37, 25, 9, 26, 41, 29, 30, 31, 32, 33, 34, 35, 38, 39, 43, 44, 45, 48, 47, 46, 13, 2, 5, 14, 4, 3, 50, 15, 6 }
  uselistorder i32 20, { 18, 19, 8, 16, 26, 27, 36, 17, 20, 21, 22, 0, 1, 15, 10, 13, 14, 11, 23, 12, 24, 25, 28, 29, 30, 31, 2, 3, 32, 33, 34, 37, 35, 7, 5, 6, 4, 38, 39, 40, 9 }
  uselistorder i32 16, { 47, 48, 40, 41, 42, 43, 44, 45, 18, 39, 81, 3, 50, 51, 52, 0, 4, 82, 83, 6, 5, 84, 1, 7, 46, 49, 19, 24, 38, 9, 10, 33, 53, 54, 8, 70, 28, 31, 32, 29, 66, 30, 34, 65, 35, 11, 27, 26, 67, 68, 69, 71, 72, 73, 36, 74, 22, 75, 20, 55, 56, 57, 58, 59, 60, 61, 62, 63, 23, 12, 64, 21, 76, 77, 78, 79, 85, 80, 86, 90, 14, 91, 92, 93, 94, 95, 96, 97, 87, 88, 89, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 2, 108, 109, 110, 111, 112, 113, 114, 115, 17, 116, 15, 16, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 13, 139, 37, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 25 }
  uselistorder i32 8, { 89, 78, 79, 80, 81, 82, 83, 84, 85, 46, 109, 47, 110, 48, 75, 112, 113, 114, 115, 116, 117, 118, 3, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 4, 92, 93, 94, 95, 96, 97, 98, 99, 129, 130, 131, 132, 133, 134, 52, 5, 53, 6, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 51, 152, 153, 7, 154, 155, 156, 157, 8, 158, 86, 87, 88, 90, 111, 159, 160, 161, 54, 104, 91, 10, 76, 105, 106, 107, 11, 108, 100, 101, 102, 103, 12, 13, 14, 15, 16, 9, 55, 0, 1, 162, 43, 163, 21, 22, 20, 27, 164, 19, 25, 26, 56, 50, 57, 58, 23, 59, 24, 60, 2, 17, 44, 165, 28, 61, 29, 62, 30, 31, 32, 33, 63, 34, 35, 36, 64, 37, 65, 166, 66, 38, 67, 39, 68, 167, 69, 40, 70, 41, 71, 72, 73, 42, 18, 168, 45, 169, 74, 77, 49 }
  uselistorder i32 (i8*, i32, i32)* @function_805250a, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 88, { 0, 2, 1, 3 }
}

define i32 @function_8054702(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8054702:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8054703 = load i32, i32* @esi, align 4
  store i32 %v0_8054703, i32* %stack_var_-8, align 4
  %sext = mul i32 %arg3, 16777216
  %v4_8054704 = sdiv i32 %sext, 16777216
  store i32 %v4_8054704, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_805470e = ptrtoint i16* %arg1 to i32
  store i32 %v4_805470e, i32* %edi.global-to-local, align 4
  %v2_8054712 = udiv i32 %v4_8054704, 4
  %v3_8054715 = inttoptr i32 %arg2 to i8*
  %v4_8054715 = bitcast i16* %arg1 to i8*
  %v5_8054715 = call i8* @_memcpy(i8* %v4_8054715, i8* %v3_8054715, i32 %v2_8054712)
  %v0_8054717 = load i32, i32* %eax.global-to-local, align 4
  %v2_8054717 = and i32 %v0_8054717, 2
  %v3_8054717 = icmp eq i32 %v2_8054717, 0
  br i1 %v3_8054717, label %dec_label_pc_805471d, label %dec_label_pc_805471b

dec_label_pc_805471b:                             ; preds = %dec_label_pc_8054702
  %v0_805471b = load i32, i32* %esi.global-to-local, align 4
  %v1_805471b = inttoptr i32 %v0_805471b to i16*
  %v2_805471b = load i16, i16* %v1_805471b, align 2
  %v3_805471b = load i32, i32* %edi.global-to-local, align 4
  %v4_805471b = inttoptr i32 %v3_805471b to i16*
  store i16 %v2_805471b, i16* %v4_805471b, align 2
  %v5_805471b = load i32, i32* %edi.global-to-local, align 4
  %v6_805471b = load i32, i32* %esi.global-to-local, align 4
  %v7_805471b = load i1, i1* @df, align 1
  %v8_805471b = select i1 %v7_805471b, i32 -2, i32 2
  %v9_805471b = add i32 %v8_805471b, %v5_805471b
  %v10_805471b = add i32 %v8_805471b, %v6_805471b
  store i32 %v9_805471b, i32* %edi.global-to-local, align 4
  store i32 %v10_805471b, i32* %esi.global-to-local, align 4
  %v0_805471d.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805471d

dec_label_pc_805471d:                             ; preds = %dec_label_pc_8054702, %dec_label_pc_805471b
  %v0_805471d = phi i32 [ %v0_8054717, %dec_label_pc_8054702 ], [ %v0_805471d.pre, %dec_label_pc_805471b ]
  %v2_805471d = urem i32 %v0_805471d, 2
  %v3_805471d = icmp eq i32 %v2_805471d, 0
  br i1 %v3_805471d, label %dec_label_pc_8054722, label %dec_label_pc_8054721

dec_label_pc_8054721:                             ; preds = %dec_label_pc_805471d
  %v0_8054721 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054721 = inttoptr i32 %v0_8054721 to i8*
  %v2_8054721 = load i8, i8* %v1_8054721, align 1
  %v3_8054721 = load i32, i32* %edi.global-to-local, align 4
  %v4_8054721 = inttoptr i32 %v3_8054721 to i8*
  store i8 %v2_8054721, i8* %v4_8054721, align 1
  %v5_8054721 = load i32, i32* %edi.global-to-local, align 4
  %v6_8054721 = load i32, i32* %esi.global-to-local, align 4
  %v7_8054721 = load i1, i1* @df, align 1
  %v8_8054721 = select i1 %v7_8054721, i32 -1, i32 1
  %v9_8054721 = add i32 %v8_8054721, %v5_8054721
  %v10_8054721 = add i32 %v8_8054721, %v6_8054721
  store i32 %v9_8054721, i32* %edi.global-to-local, align 4
  store i32 %v10_8054721, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8054722

dec_label_pc_8054722:                             ; preds = %dec_label_pc_805471d, %dec_label_pc_8054721
  store i32 %v4_805470e, i32* %eax.global-to-local, align 4
  %v2_8054726 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8054726, i32* @esi, align 4
  ret i32 %v4_805470e

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 0, 2, 4, 1, 3, 5, 6 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32 -2, { 18, 19, 17, 20, 0, 1, 4, 7, 8, 5, 3, 2, 6, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i1* @df, { 2, 3, 4, 1, 0, 5 }
  uselistorder i32 4, { 2, 90, 91, 82, 83, 84, 85, 180, 181, 183, 184, 0, 185, 186, 187, 182, 50, 77, 188, 190, 191, 193, 196, 197, 198, 199, 200, 201, 3, 202, 203, 204, 205, 206, 207, 208, 209, 194, 195, 99, 52, 100, 101, 102, 103, 104, 105, 106, 4, 108, 107, 210, 5, 211, 51, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 9, 232, 233, 235, 234, 6, 192, 189, 81, 55, 86, 87, 88, 89, 92, 236, 237, 56, 109, 110, 57, 112, 113, 122, 145, 146, 147, 150, 151, 152, 153, 154, 155, 142, 143, 123, 124, 156, 157, 158, 132, 133, 134, 93, 94, 95, 129, 130, 131, 135, 136, 137, 138, 139, 140, 159, 160, 96, 97, 98, 125, 126, 127, 128, 13, 141, 144, 78, 161, 169, 170, 171, 162, 148, 149, 53, 168, 14, 163, 54, 164, 165, 166, 167, 114, 115, 116, 79, 117, 118, 15, 119, 120, 121, 16, 17, 18, 19, 111, 238, 239, 172, 173, 174, 175, 176, 177, 178, 179, 8, 240, 241, 242, 46, 24, 25, 23, 30, 22, 28, 29, 243, 244, 245, 10, 58, 59, 60, 26, 61, 27, 62, 1, 246, 20, 247, 47, 11, 248, 31, 63, 32, 64, 33, 249, 34, 35, 36, 65, 37, 38, 39, 66, 40, 67, 68, 41, 69, 42, 70, 250, 71, 43, 72, 44, 73, 251, 74, 75, 252, 45, 253, 254, 255, 256, 258, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 21, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 48, 12, 7, 295, 49, 76, 296, 80 }
  uselistorder i32 16777216, { 1, 0, 3, 2, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* @esi, { 90, 91, 33, 34, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 1, 22, 23, 92, 93, 11, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 97, 98, 99, 113, 117, 2, 118, 119, 120, 121, 122, 123, 124, 114, 115, 116, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 125, 126, 127, 128, 129, 130, 131, 0, 132, 133, 134, 135, 3, 136, 9, 137, 138, 139, 140, 141, 142, 24, 4, 25, 26, 27, 28, 29, 111, 112, 143, 144, 30, 50, 51, 52, 73, 74, 69, 75, 67, 31, 66, 68, 76, 70, 32, 64, 65, 71, 72, 77, 78, 79, 80, 81, 82, 83, 84, 85, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 145, 146, 147, 86, 87, 88, 8, 148, 149, 89, 150, 151, 5, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 6, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 10, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 7, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 252, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273 }
  uselistorder label %dec_label_pc_8054722, { 1, 0 }
  uselistorder label %dec_label_pc_805471d, { 1, 0 }
}

define i32 @function_8054729(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8054729:
  %v1_8054734 = icmp eq i8* %arg1, null
  br i1 %v1_8054734, label %dec_label_pc_80547b5, label %dec_label_pc_8054738

dec_label_pc_8054738:                             ; preds = %dec_label_pc_8054729
  %v4_8054730 = ptrtoint i8* %arg1 to i32
  %v0_8054746.pre = load i32, i32* bitcast (i32** @global_var_805660c.87 to i32*), align 4
  br label %dec_label_pc_8054743

dec_label_pc_8054743:                             ; preds = %dec_label_pc_8054738, %dec_label_pc_805478c
  %v0_805478c = phi i32 [ 0, %dec_label_pc_8054738 ], [ %v2_8054792, %dec_label_pc_805478c ]
  %v2_805478f = phi i32 [ 1, %dec_label_pc_8054738 ], [ %v3_805478f, %dec_label_pc_805478c ]
  %v0_8054743 = phi i32 [ %v4_8054730, %dec_label_pc_8054738 ], [ %v0_80547434, %dec_label_pc_805478c ]
  %v1_8054743 = inttoptr i32 %v0_8054743 to i8*
  %v2_8054743 = load i8, i8* %v1_8054743, align 1
  %v3_8054743 = sext i8 %v2_8054743 to i32
  %v2_805474c = mul nsw i32 %v3_8054743, 2
  %v3_805474c = add i32 %v2_805474c, %v0_8054746.pre
  %v4_805474c = inttoptr i32 %v3_805474c to i8*
  %v5_805474c = load i8, i8* %v4_805474c, align 1
  %v6_805474c = and i8 %v5_805474c, 8
  %v7_805474c = icmp eq i8 %v6_805474c, 0
  br i1 %v7_805474c, label %dec_label_pc_80547b5, label %dec_label_pc_8054753

dec_label_pc_8054753:                             ; preds = %dec_label_pc_8054743
  %v4_8054767.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8054767

dec_label_pc_8054757:                             ; preds = %dec_label_pc_8054767
  %v3_8054757 = mul i32 %v1_8054757, 10
  %v2_805475a = add i32 %v3_8054757, -48
  %v3_805475a = add i32 %v2_805475a, %v2_8054769
  %v1_805475e = add i32 %v3_805475a, -255
  %v6_805475e = sub i32 254, %v3_805475a
  %v7_805475e = and i32 %v6_805475e, %v3_805475a
  %v8_805475e = icmp slt i32 %v7_805475e, 0
  %v9_805475e = icmp eq i32 %v1_805475e, 0
  %v10_805475e = icmp slt i32 %v1_805475e, 0
  %v3_8054764 = icmp eq i1 %v10_805475e, %v8_805475e
  %v4_8054764 = icmp eq i1 %v9_805475e, false
  %v5_8054764 = and i1 %v4_8054764, %v3_8054764
  br i1 %v5_8054764, label %dec_label_pc_80547b5, label %dec_label_pc_8054766

dec_label_pc_8054766:                             ; preds = %dec_label_pc_8054757
  %v1_8054766 = add i32 %v0_8054766, 1
  br label %dec_label_pc_8054767

dec_label_pc_8054767:                             ; preds = %dec_label_pc_8054753, %dec_label_pc_8054766
  %v1_8054757 = phi i32 [ 0, %dec_label_pc_8054753 ], [ %v3_805475a, %dec_label_pc_8054766 ]
  %v4_8054767 = phi i32 [ %v4_8054767.pre, %dec_label_pc_8054753 ], [ %v6_8054767, %dec_label_pc_8054766 ]
  %v0_8054766 = phi i32 [ %v0_8054743, %dec_label_pc_8054753 ], [ %v1_8054766, %dec_label_pc_8054766 ]
  %v1_8054767 = inttoptr i32 %v0_8054766 to i8*
  %v2_8054767 = load i8, i8* %v1_8054767, align 1
  %v3_8054767 = zext i8 %v2_8054767 to i32
  %v5_8054767 = and i32 %v4_8054767, -256
  %v6_8054767 = or i32 %v3_8054767, %v5_8054767
  store i32 %v6_8054767, i32* @edx, align 4
  %v2_8054769 = sext i8 %v2_8054767 to i32
  %v2_805476c = mul nsw i32 %v2_8054769, 2
  %v3_805476c = add i32 %v2_805476c, %v0_8054746.pre
  %v4_805476c = inttoptr i32 %v3_805476c to i16*
  %v5_805476c = load i16, i16* %v4_805476c, align 2
  %v2_8054771 = and i16 %v5_805476c, 8
  %v3_8054771 = icmp eq i16 %v2_8054771, 0
  %v1_8054773 = icmp eq i1 %v3_8054771, false
  br i1 %v1_8054773, label %dec_label_pc_8054757, label %dec_label_pc_8054775

dec_label_pc_8054775:                             ; preds = %dec_label_pc_8054767
  %v8_8054775 = sub nsw i32 2, %v2_805478f
  %v9_8054775 = and i32 %v8_8054775, %v2_805478f
  %v10_8054775 = icmp slt i32 %v9_8054775, 0
  %v11_8054775 = icmp eq i32 %v2_805478f, 3
  %v12_8054775 = icmp slt i32 %v2_805478f, 3
  %v3_8054779 = icmp eq i1 %v12_8054775, %v10_8054775
  %v4_8054779 = icmp eq i1 %v11_8054775, false
  %v5_8054779 = and i1 %v4_8054779, %v3_8054779
  br i1 %v5_8054779, label %dec_label_pc_8054783, label %dec_label_pc_805477b

dec_label_pc_805477b:                             ; preds = %dec_label_pc_8054775
  %v10_805477b = icmp eq i8 %v2_8054767, 46
  %v1_805477e = icmp eq i1 %v10_805477b, false
  br i1 %v1_805477e, label %dec_label_pc_80547b5, label %dec_label_pc_8054780

dec_label_pc_8054780:                             ; preds = %dec_label_pc_805477b
  %v1_8054780 = add i32 %v0_8054766, 1
  br label %dec_label_pc_805478c

dec_label_pc_8054783:                             ; preds = %dec_label_pc_8054775
  %v1_8054783 = add i32 %v0_8054766, 1
  %v4_8054784 = icmp eq i8 %v2_8054767, 0
  br i1 %v4_8054784, label %dec_label_pc_805478c, label %dec_label_pc_8054788

dec_label_pc_8054788:                             ; preds = %dec_label_pc_8054783
  %v2_8054788 = and i16 %v5_805476c, 32
  %v3_8054788 = icmp eq i16 %v2_8054788, 0
  br i1 %v3_8054788, label %dec_label_pc_80547b5, label %dec_label_pc_805478c

dec_label_pc_805478c:                             ; preds = %dec_label_pc_8054788, %dec_label_pc_8054783, %dec_label_pc_8054780
  %v0_80547434 = phi i32 [ %v1_8054783, %dec_label_pc_8054788 ], [ %v1_8054783, %dec_label_pc_8054783 ], [ %v1_8054780, %dec_label_pc_8054780 ]
  %v2_805478c = mul i32 %v0_805478c, 256
  %v3_805478f = add nuw nsw i32 %v2_805478f, 1
  %v2_8054792 = or i32 %v1_8054757, %v2_805478c
  %v7_8054798 = icmp sgt i32 %v2_805478f, 3
  br i1 %v7_8054798, label %dec_label_pc_805479a, label %dec_label_pc_8054743

dec_label_pc_805479a:                             ; preds = %dec_label_pc_805478c
  %v4_805479f = icmp eq i32 %arg2, 0
  br i1 %v4_805479f, label %dec_label_pc_80547b7, label %dec_label_pc_80547a6

dec_label_pc_80547a6:                             ; preds = %dec_label_pc_805479a
  %v1_80547aa = call i32 @llvm.bswap.i32(i32 %v2_8054792)
  %v2_80547ac = inttoptr i32 %arg2 to i32*
  store i32 %v1_80547aa, i32* %v2_80547ac, align 4
  br label %dec_label_pc_80547b7

dec_label_pc_80547b5:                             ; preds = %dec_label_pc_8054788, %dec_label_pc_805477b, %dec_label_pc_8054743, %dec_label_pc_8054757, %dec_label_pc_8054729
  br label %dec_label_pc_80547b7

dec_label_pc_80547b7:                             ; preds = %dec_label_pc_805479a, %dec_label_pc_80547a6, %dec_label_pc_80547b5
  %v0_80547bc = phi i32 [ 1, %dec_label_pc_805479a ], [ 1, %dec_label_pc_80547a6 ], [ 0, %dec_label_pc_80547b5 ]
  ret i32 %v0_80547bc

; uselistorder directives
  uselistorder i32 %v2_8054769, { 1, 0 }
  uselistorder i32 %v6_8054767, { 1, 0 }
  uselistorder i8 %v2_8054767, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8054766, { 0, 1, 3, 2 }
  uselistorder i32 %v1_805475e, { 1, 0 }
  uselistorder i32 %v3_805475a, { 1, 0, 3, 2 }
  uselistorder i32 %v2_805478f, { 1, 4, 2, 0, 3, 5 }
  uselistorder i32 256, { 1, 19, 23, 20, 2, 3, 0, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22 }
  uselistorder i32 3, { 1, 2, 0, 15, 10, 25, 6, 7, 9, 3, 4, 18, 19, 20, 21, 22, 23, 24, 11, 8, 16, 17, 5, 26, 13, 14, 27, 12 }
  uselistorder i16 0, { 0, 1, 7, 8, 5, 6, 4, 2, 3 }
  uselistorder i32 -256, { 4, 5, 6, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 10, 11, 35, 22, 25, 27, 36, 29, 30, 31, 7, 8, 9, 23, 24, 26, 28, 32, 33, 34, 40, 37, 38, 39, 12, 13, 14, 15, 16, 17, 18, 19, 2, 3, 20, 21, 51, 52, 53, 54, 0, 55, 56, 57, 1, 58, 59, 60, 61, 62 }
  uselistorder i32 10, { 1, 8, 7, 5, 12, 3, 0, 11, 9, 6, 4, 10, 2, 13, 14, 15 }
  uselistorder i32* @edx, { 21, 2, 56, 57, 26, 0, 18, 19, 22, 17, 58, 59, 61, 62, 64, 63, 60, 72, 73, 3, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 4, 87, 88, 70, 71, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 5, 43, 44, 45, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 6, 126, 127, 128, 129, 130, 131, 132, 69, 20, 66, 23, 24, 68, 65, 67, 7, 133, 8, 134, 14, 25, 49, 50, 51, 12, 13, 10, 9, 52, 15, 53, 11, 55, 54, 46, 47, 48, 16, 1, 135, 136, 137, 138, 139, 140, 141 }
  uselistorder i8 0, { 18, 19, 38, 39, 40, 41, 42, 43, 20, 44, 45, 46, 47, 48, 49, 7, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 2, 65, 66, 67, 68, 21, 32, 33, 29, 34, 30, 31, 35, 0, 36, 37, 23, 25, 22, 5, 24, 6, 26, 27, 28, 8, 9, 69, 70, 3, 72, 73, 71, 74, 75, 76, 77, 4, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 16, 98, 1, 99, 10, 17, 11, 12, 13, 14, 15 }
  uselistorder i32 2, { 38, 39, 40, 1, 67, 15, 68, 16, 35, 0, 22, 32, 23, 33, 24, 34, 2, 3, 4, 43, 5, 6, 7, 17, 18, 69, 8, 9, 20, 10, 25, 19, 21, 28, 26, 27, 13, 12, 44, 50, 63, 64, 52, 41, 51, 53, 54, 55, 56, 57, 58, 59, 60, 42, 61, 62, 11, 36, 30, 29, 45, 46, 47, 48, 49, 31, 14, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 37 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_80547b7, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80547b5, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_8054767, { 1, 0 }
  uselistorder label %dec_label_pc_8054743, { 1, 0 }
}

define i32 @function_80547bd() local_unnamed_addr {
dec_label_pc_80547bd:
  %v0_80547bd = load i32, i32* @eax, align 4
  %v1_80547bd = add i32 %v0_80547bd, 28
  %v2_80547bd = inttoptr i32 %v1_80547bd to i32*
  %v3_80547bd = load i32, i32* %v2_80547bd, align 4
  store i32 %v3_80547bd, i32* @global_var_8056cd8.88, align 8
  %v1_80547c6 = add i32 %v0_80547bd, 44
  %v2_80547c6 = inttoptr i32 %v1_80547c6 to i32*
  %v3_80547c6 = load i32, i32* %v2_80547c6, align 4
  store i32 %v3_80547c6, i32* @global_var_8056cdc.89, align 4
  ret i32 %v3_80547c6

; uselistorder directives
  uselistorder i32 44, { 6, 5, 4, 10, 12, 11, 7, 8, 9, 0, 2, 13, 14, 15, 16, 1, 3 }
  uselistorder i32 28, { 26, 14, 15, 13, 17, 18, 27, 4, 5, 11, 6, 9, 10, 7, 16, 8, 19, 20, 21, 22, 23, 25, 24, 0, 28, 3, 12, 2, 1, 29, 30, 31 }
}

define i32 @function_80547cf(i32 %arg1) local_unnamed_addr {
dec_label_pc_80547cf:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80547cf = load i32, i32* @ebx, align 4
  store i32 %v0_80547cf, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_80547e2 = call i32 @int80_syscall(i32 45)
  store i32 0, i32* %ecx.global-to-local, align 4
  store i32 %v1_80547e2, i32* @global_var_80566f8.86, align 8
  %v7_80547ed = icmp ult i32 %v1_80547e2, %arg1
  %v1_80547ef = icmp eq i1 %v7_80547ed, false
  br i1 %v1_80547ef, label %dec_label_pc_80547ff, label %dec_label_pc_80547f1

dec_label_pc_80547f1:                             ; preds = %dec_label_pc_80547cf
  %v1_80547f1 = call i32 @function_80524b9(i32 %v0_80547cf)
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_80547f9 = inttoptr i32 %v1_80547f1 to i32*
  store i32 12, i32* %v1_80547f9, align 4
  %v0_80547ff.pre = load i32, i32* %ecx.global-to-local, align 4
  %v2_8054803.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80547ff

dec_label_pc_80547ff:                             ; preds = %dec_label_pc_80547cf, %dec_label_pc_80547f1
  %v2_8054803 = phi i32 [ %v0_80547cf, %dec_label_pc_80547cf ], [ %v2_8054803.pre, %dec_label_pc_80547f1 ]
  %v0_80547ff = phi i32 [ 0, %dec_label_pc_80547cf ], [ %v0_80547ff.pre, %dec_label_pc_80547f1 ]
  store i32 %v2_8054803, i32* @ebx, align 4
  ret i32 %v0_80547ff

; uselistorder directives
  uselistorder i32 %v1_80547e2, { 1, 0 }
  uselistorder i32 12, { 105, 69, 70, 64, 65, 66, 63, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 76, 77, 78, 79, 80, 81, 121, 139, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 61, 138, 62, 67, 68, 71, 72, 73, 82, 83, 92, 93, 94, 95, 84, 96, 87, 74, 86, 88, 89, 90, 97, 75, 85, 27, 91, 98, 104, 59, 99, 101, 102, 28, 100, 29, 30, 31, 32, 103, 0, 1, 25, 9, 8, 7, 15, 57, 20, 36, 37, 35, 16, 42, 34, 40, 41, 17, 140, 6, 38, 39, 3, 5, 33, 141, 58, 142, 146, 143, 144, 145, 43, 44, 45, 46, 18, 19, 47, 48, 49, 147, 50, 51, 52, 53, 54, 55, 56, 4, 21, 22, 10, 11, 12, 13, 14, 148, 23, 2, 24, 149, 150, 26, 60 }
  uselistorder i32* @global_var_80566f8.86, { 1, 0, 2 }
  uselistorder i32 45, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_80547ff, { 1, 0 }
}

define i32 @function_8054805() local_unnamed_addr {
dec_label_pc_8054805:
  %v0_8054808 = load i32, i32* @eax, align 4
  %v1_805480a = sub i32 0, %v0_8054808
  %v1_805480c = call i32 @function_80524b9(i32 ptrtoint (i32* @0 to i32))
  %v2_8054811 = inttoptr i32 %v1_805480c to i32*
  store i32 %v1_805480a, i32* %v2_8054811, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 (i32)* @function_80524b9, { 28, 27, 50, 26, 25, 32, 49, 24, 53, 23, 22, 21, 48, 47, 46, 54, 20, 19, 18, 16, 15, 14, 31, 1, 9, 2, 52, 51, 45, 44, 43, 42, 41, 8, 11, 10, 40, 7, 39, 38, 37, 17, 13, 36, 35, 12, 30, 6, 34, 5, 4, 33, 29, 3, 0 }
  uselistorder i32* @0, { 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 1, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i32 ptrtoint (i32* @0 to i32), { 0, 1, 2, 3, 4, 5, 6, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 7, 8, 9, 18, 13, 16, 17, 14, 10, 11, 12, 15, 32, 33, 34, 35, 36, 37, 19, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 50, 112, 49, 81, 82, 95, 96, 97, 83, 84, 80, 91, 90, 86, 87, 88, 89, 85, 52, 98, 99, 100, 101, 102, 92, 93, 94, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118 }
}

define i32 @function_8054820() local_unnamed_addr {
dec_label_pc_8054820:
  %stack_var_-16 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp6, i32* %stack_var_-16, align 4
  %v0_805482c = load i32, i32* @global_var_8056584.73, align 4
  %v10_8054831 = icmp eq i32 %v0_805482c, -1
  br i1 %v10_8054831, label %dec_label_pc_8054842, label %dec_label_pc_8054836.preheader

dec_label_pc_8054836.preheader:                   ; preds = %dec_label_pc_8054820
  br label %dec_label_pc_8054836

dec_label_pc_8054836:                             ; preds = %dec_label_pc_8054836.preheader, %dec_label_pc_8054836
  %v4_8054839 = phi i32 [ %v0_805482c, %dec_label_pc_8054836.preheader ], [ %v2_805483b, %dec_label_pc_8054836 ]
  %v0_8054836 = phi i32 [ ptrtoint (i32* @global_var_8056584.73 to i32), %dec_label_pc_8054836.preheader ], [ %v1_8054836, %dec_label_pc_8054836 ]
  %v1_8054836 = add i32 %v0_8054836, -4
  call void @__pseudo_call(i32 %v4_8054839)
  %v1_805483b = inttoptr i32 %v1_8054836 to i32*
  %v2_805483b = load i32, i32* %v1_805483b, align 4
  %v10_805483d = icmp eq i32 %v2_805483b, -1
  %v1_8054840 = icmp eq i1 %v10_805483d, false
  br i1 %v1_8054840, label %dec_label_pc_8054836, label %dec_label_pc_8054842.loopexit

dec_label_pc_8054842.loopexit:                    ; preds = %dec_label_pc_8054836
  %v2_8054842.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_8054842

dec_label_pc_8054842:                             ; preds = %dec_label_pc_8054842.loopexit, %dec_label_pc_8054820
  %v2_8054842 = phi i32 [ %v2_8054842.pre, %dec_label_pc_8054842.loopexit ], [ %tmp6, %dec_label_pc_8054820 ]
  ret i32 %v2_8054842

; uselistorder directives
  uselistorder i32 %v0_805482c, { 1, 0 }
  uselistorder i1 false, { 99, 100, 26, 27, 29, 28, 101, 102, 103, 30, 31, 104, 107, 108, 109, 110, 111, 113, 10, 114, 115, 112, 106, 105, 23, 116, 117, 118, 1, 120, 121, 0, 122, 123, 124, 125, 3, 126, 127, 128, 129, 2, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 130, 37, 38, 39, 40, 41, 42, 43, 44, 45, 143, 144, 145, 146, 147, 148, 149, 150, 151, 9, 153, 152, 157, 154, 155, 156, 11, 158, 159, 119, 24, 4, 25, 160, 161, 13, 32, 33, 34, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 14, 172, 173, 174, 175, 5, 176, 177, 178, 46, 65, 70, 71, 56, 73, 66, 67, 68, 72, 35, 36, 57, 58, 59, 60, 61, 62, 63, 64, 69, 74, 75, 98, 96, 16, 97, 17, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 95, 90, 93, 47, 48, 49, 50, 51, 52, 53, 18, 54, 55, 91, 92, 94, 179, 180, 181, 182, 183, 6, 185, 186, 187, 184, 188, 189, 190, 191, 192, 193, 7, 194, 195, 196, 197, 15, 198, 199, 200, 201, 202, 203, 204, 20, 19, 205, 21, 206, 207, 208, 209, 8, 22, 12, 210 }
  uselistorder void (i32)* @__pseudo_call, { 1, 3, 4, 5, 6, 2, 0 }
  uselistorder i32 -4, { 15, 16, 17, 18, 99, 100, 101, 102, 11, 103, 3, 98, 19, 94, 12, 95, 96, 97, 13, 0, 9, 10, 104, 105, 106, 107, 108, 109, 110, 14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 7, 54, 8, 55, 56, 57, 2, 6, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 4, 5, 86, 87, 88, 89, 90, 91, 92, 1, 93 }
  uselistorder i32 ptrtoint (i32* @global_var_8056584.73 to i32), { 1, 3, 4, 0, 5, 6, 2 }
  uselistorder i32 -1, { 20, 21, 0, 103, 181, 61, 104, 62, 63, 105, 64, 106, 65, 107, 66, 108, 67, 109, 68, 110, 69, 111, 70, 112, 71, 113, 18, 19, 9, 8, 72, 73, 114, 74, 115, 75, 116, 22, 1, 117, 60, 76, 77, 118, 119, 120, 11, 121, 10, 122, 182, 13, 14, 123, 12, 124, 23, 183, 24, 125, 184, 27, 26, 28, 29, 16, 30, 78, 31, 126, 25, 185, 7, 127, 128, 100, 129, 15, 32, 2, 79, 186, 187, 80, 172, 33, 81, 130, 82, 131, 83, 132, 58, 59, 133, 84, 134, 85, 135, 86, 136, 87, 137, 88, 138, 89, 139, 90, 140, 91, 141, 92, 142, 93, 143, 94, 144, 95, 145, 96, 146, 97, 147, 98, 148, 34, 149, 150, 3, 4, 5, 151, 35, 99, 188, 101, 36, 152, 153, 177, 178, 154, 173, 179, 37, 155, 156, 157, 158, 174, 41, 159, 160, 161, 162, 163, 164, 40, 165, 175, 38, 39, 166, 176, 167, 168, 42, 169, 180, 6, 17, 43, 44, 45, 46, 47, 170, 171, 189, 190, 191, 48, 192, 193, 54, 49, 194, 50, 51, 52, 53, 195, 55, 196, 56, 57, 197, 198, 102 }
  uselistorder i32 1, { 243, 244, 68, 144, 145, 362, 363, 364, 365, 146, 425, 245, 50, 49, 51, 246, 21, 20, 19, 247, 12, 248, 249, 52, 251, 250, 66, 253, 252, 73, 254, 69, 255, 107, 256, 48, 257, 109, 258, 108, 259, 111, 260, 261, 15, 14, 16, 166, 67, 263, 262, 265, 264, 11, 266, 38, 268, 267, 41, 269, 273, 272, 271, 270, 74, 426, 427, 428, 276, 275, 274, 23, 24, 22, 147, 277, 280, 279, 278, 112, 148, 234, 360, 133, 286, 285, 284, 283, 282, 281, 76, 77, 167, 287, 235, 290, 289, 288, 75, 168, 430, 431, 432, 291, 65, 433, 434, 149, 435, 436, 437, 27, 25, 26, 236, 429, 169, 94, 95, 96, 97, 170, 150, 368, 369, 370, 371, 294, 293, 292, 81, 80, 82, 171, 295, 17, 18, 173, 438, 439, 440, 441, 442, 443, 444, 445, 446, 172, 447, 448, 449, 450, 451, 151, 452, 453, 113, 152, 454, 455, 456, 457, 153, 154, 458, 459, 460, 298, 297, 296, 43, 42, 44, 46, 45, 155, 156, 299, 157, 158, 174, 303, 302, 301, 300, 53, 175, 237, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 176, 177, 319, 320, 159, 322, 321, 55, 178, 323, 324, 13, 325, 37, 326, 87, 327, 72, 328, 85, 329, 79, 330, 29, 331, 30, 332, 47, 36, 334, 333, 56, 335, 64, 336, 110, 338, 337, 83, 339, 86, 340, 71, 341, 28, 342, 54, 70, 461, 462, 463, 464, 233, 343, 92, 88, 91, 89, 90, 93, 465, 466, 114, 115, 467, 468, 0, 469, 470, 471, 472, 473, 179, 474, 180, 475, 345, 344, 84, 476, 160, 217, 477, 478, 161, 479, 480, 181, 481, 119, 40, 39, 482, 483, 484, 346, 4, 5, 3, 6, 485, 486, 240, 31, 33, 32, 35, 34, 487, 241, 7, 9, 8, 10, 372, 373, 374, 375, 398, 399, 400, 408, 409, 410, 182, 411, 401, 188, 412, 194, 404, 196, 366, 190, 403, 186, 405, 184, 406, 413, 197, 192, 367, 193, 198, 199, 402, 191, 195, 187, 185, 183, 407, 414, 200, 189, 424, 422, 423, 415, 416, 417, 418, 420, 201, 421, 104, 105, 103, 106, 419, 238, 347, 78, 376, 377, 378, 379, 222, 221, 126, 116, 380, 381, 162, 124, 125, 117, 382, 383, 163, 123, 223, 384, 385, 239, 386, 387, 388, 218, 219, 389, 390, 220, 225, 224, 391, 392, 393, 202, 394, 395, 396, 165, 397, 350, 349, 348, 99, 100, 102, 98, 101, 351, 1, 226, 2, 134, 135, 488, 489, 490, 491, 492, 120, 121, 493, 494, 495, 496, 497, 206, 127, 128, 205, 129, 209, 130, 498, 499, 207, 131, 132, 208, 500, 122, 118, 501, 502, 503, 504, 505, 227, 136, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 213, 143, 142, 516, 228, 137, 517, 518, 519, 520, 521, 210, 522, 523, 211, 524, 229, 138, 525, 230, 139, 526, 527, 231, 140, 528, 529, 232, 141, 530, 531, 532, 533, 534, 212, 535, 537, 538, 536, 214, 539, 540, 541, 542, 203, 204, 543, 544, 545, 546, 215, 361, 216, 547, 164, 358, 357, 356, 355, 354, 353, 352, 242, 63, 58, 62, 59, 60, 57, 61, 359 }
  uselistorder label %dec_label_pc_8054836, { 1, 0 }
}

define i32 @function_8054846() local_unnamed_addr {
entry:
  %v0_8054849 = load i32, i32* @ebx, align 4
  %v1_805484a = call i32 @function_80480b0(i32 %v0_8054849)
  store i32 %v1_805484a, i32* @eax, align 4
  %v0_8054855 = call i32 @function_80480c0()
  ret i32 %v0_8054855

; uselistorder directives
  uselistorder i32* @eax, { 6, 32, 33, 35, 36, 37, 38, 40, 9, 41, 0, 39, 3, 5, 34, 42, 44, 45, 43, 17, 18, 46, 52, 47, 48, 50, 51, 49, 15, 16, 7, 1, 8, 20, 22, 21, 23, 27, 28, 29, 24, 25, 26, 19, 53, 10, 11, 12, 54, 55, 56, 57, 58, 13, 14, 59, 30, 31, 2, 4 }
  uselistorder i32 (i32)* @function_80480b0, { 1, 0 }
  uselistorder i32 0, {}
  uselistorder i32* @ebx, { 18, 181, 182, 49, 50, 23, 183, 1, 184, 185, 186, 187, 83, 84, 188, 20, 189, 190, 191, 192, 193, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 51, 2, 52, 53, 54, 19, 194, 195, 196, 197, 198, 199, 200, 201, 202, 16, 17, 211, 212, 213, 214, 14, 3, 13, 205, 208, 209, 210, 203, 215, 216, 217, 218, 219, 220, 221, 222, 204, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 4, 248, 249, 234, 235, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 5, 97, 98, 99, 100, 101, 102, 103, 250, 276, 277, 278, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 15, 261, 262, 263, 264, 265, 6, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 229, 230, 21, 22, 42, 43, 44, 45, 46, 47, 48, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 279, 280, 227, 228, 73, 281, 282, 74, 75, 76, 206, 207, 223, 224, 77, 78, 225, 226, 104, 105, 283, 284, 79, 285, 286, 287, 80, 288, 289, 106, 111, 112, 147, 8, 148, 149, 150, 151, 136, 137, 152, 134, 81, 133, 135, 138, 139, 140, 82, 153, 132, 141, 142, 143, 144, 145, 146, 154, 155, 156, 157, 158, 159, 169, 170, 171, 7, 172, 160, 161, 162, 163, 164, 165, 166, 167, 168, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 9, 130, 131, 107, 108, 109, 110, 290, 291, 292, 173, 174, 175, 176, 293, 294, 295, 296, 10, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 297, 298, 299, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 0, 329, 330, 331, 332, 333, 12, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 11, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 177, 178, 179, 180 }
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare i8* @_memset(i8*, i32, i32) local_unnamed_addr

declare i8* @_memcpy(i8*, i8*, i32) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare i32 @unknown_0(i32) local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare i32 @int80_syscall(i32) local_unnamed_addr

declare i32 @chdir(i8*) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @fork(i32) local_unnamed_addr

declare i32 @getpid(i32) local_unnamed_addr

declare i32 @getppid(i32) local_unnamed_addr

declare i32 @ioctl(i32, i32, ...) local_unnamed_addr

declare i32 @kill(i32, i32) local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @prctl(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @readlink(i8*, i8*, i32) local_unnamed_addr

declare i32 @setsid(i32) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @unlink(i8*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32* @mmap(i32*, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @clock_getres(i32, %timespec*) local_unnamed_addr

declare i32 @fstat(i32, %stat*) local_unnamed_addr

declare i32 @getdents64(i32, %linux_dirent64*, i32) local_unnamed_addr

declare i32* @mremap(i32*, i32, i32, i32, ...) local_unnamed_addr

declare i32 @munmap(i32*, i32) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @times(%tms*) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i16* @__decompiler_undefined_function_4() local_unnamed_addr

declare i64 @__decompiler_undefined_function_5() local_unnamed_addr

declare %_TYPEDEF_sigset_t* @__decompiler_undefined_function_6() local_unnamed_addr

declare %sigaction* @__decompiler_undefined_function_7() local_unnamed_addr

declare %timespec* @__decompiler_undefined_function_8() local_unnamed_addr

declare %tms* @__decompiler_undefined_function_9() local_unnamed_addr

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
